#ifndef BIDIBRACKETS_H
#define BIDIBRACKETS_H
/*
 *  Copyright (c) 2017 International Characters, Inc.
 *  This software is licensed to the public under the Open Software License 3.0.
 *  icgrep is a trademark of International Characters, Inc.
 *
 *  This file is generated by UCD_properties.py - manual edits may be lost.
 */

#include "PropertyAliases.h"
#include "PropertyObjects.h"
#include "PropertyValueAliases.h"
#include "unicode_set.h"

namespace UCD {
  namespace BPT_ns {
    const unsigned independent_prop_values = 3;
    /** Code Point Ranges for n
    [0000, 0027], [002a, 005a], [005c, 005c], [005e, 007a], [007c, 007c],
    [007e, 0f39], [0f3e, 169a], [169d, 2044], [2047, 207c], [207f, 208c],
    [208f, 2307], [230c, 2328], [232b, 2767], [2776, 27c4], [27c7, 27e5],
    [27f0, 2982], [2999, 29d7], [29dc, 29fb], [29fe, 2e21], [2e2a, 3007],
    [3012, 3013], [301c, fe58], [fe5f, ff07], [ff0a, ff3a], [ff3c, ff3c],
    [ff3e, ff5a], [ff5c, ff5c], [ff5e, ff5e], [ff61, ff61], [ff64, 10ffff]**/
    const UnicodeSet n_Set 
        {{{Full, 1}, {Mixed, 3}, {Full, 117}, {Mixed, 1}, {Full, 58},
          {Mixed, 1}, {Full, 77}, {Mixed, 3}, {Full, 19}, {Mixed, 2},
          {Full, 33}, {Mixed, 1}, {Full, 2}, {Mixed, 2}, {Full, 12},
          {Mixed, 1}, {Full, 1}, {Mixed, 2}, {Full, 33}, {Mixed, 1},
          {Full, 14}, {Mixed, 1}, {Full, 1649}, {Mixed, 1}, {Full, 5},
          {Mixed, 4}, {Full, 32772}},
         {0xfffffcff, 0xd7ffffff, 0xd7ffffff, 0xc3ffffff, 0xe7ffffff,
          0xffffff9f, 0x9fffffff, 0xffff9fff, 0xfffff0ff, 0xfffff9ff,
          0xffc000ff, 0xffffff9f, 0xffff003f, 0xfe000007, 0xf0ffffff,
          0xcfffffff, 0xfffffc03, 0xf00c00ff, 0x81ffffff, 0xfffffcff,
          0xd7ffffff, 0x57ffffff, 0xfffffff2}};
    /** Code Point Ranges for o
    [0028, 0028], [005b, 005b], [007b, 007b], [0f3a, 0f3a], [0f3c, 0f3c],
    [169b, 169b], [2045, 2045], [207d, 207d], [208d, 208d], [2308, 2308],
    [230a, 230a], [2329, 2329], [2768, 2768], [276a, 276a], [276c, 276c],
    [276e, 276e], [2770, 2770], [2772, 2772], [2774, 2774], [27c5, 27c5],
    [27e6, 27e6], [27e8, 27e8], [27ea, 27ea], [27ec, 27ec], [27ee, 27ee],
    [2983, 2983], [2985, 2985], [2987, 2987], [2989, 2989], [298b, 298b],
    [298d, 298d], [298f, 298f], [2991, 2991], [2993, 2993], [2995, 2995],
    [2997, 2997], [29d8, 29d8], [29da, 29da], [29fc, 29fc], [2e22, 2e22],
    [2e24, 2e24], [2e26, 2e26], [2e28, 2e28], [3008, 3008], [300a, 300a],
    [300c, 300c], [300e, 300e], [3010, 3010], [3014, 3014], [3016, 3016],
    [3018, 3018], [301a, 301a], [fe59, fe59], [fe5b, fe5b], [fe5d, fe5d],
    [ff08, ff08], [ff3b, ff3b], [ff5b, ff5b], [ff5f, ff5f], [ff62, ff62]**/
    const UnicodeSet o_Set 
        {{{Empty, 1}, {Mixed, 3}, {Empty, 117}, {Mixed, 1}, {Empty, 58},
          {Mixed, 1}, {Empty, 77}, {Mixed, 3}, {Empty, 19}, {Mixed, 2},
          {Empty, 33}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 12},
          {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 33}, {Mixed, 1},
          {Empty, 14}, {Mixed, 1}, {Empty, 1649}, {Mixed, 1}, {Empty, 5},
          {Mixed, 4}, {Empty, 32772}},
         {0x00000100, 0x08000000, 0x08000000, 0x14000000, 0x08000000,
          0x00000020, 0x20000000, 0x00002000, 0x00000500, 0x00000200,
          0x00155500, 0x00000020, 0x00005540, 0x00aaaaa8, 0x05000000,
          0x10000000, 0x00000154, 0x05515500, 0x2a000000, 0x00000100,
          0x08000000, 0x88000000, 0x00000004}};
    /** Code Point Ranges for c
    [0029, 0029], [005d, 005d], [007d, 007d], [0f3b, 0f3b], [0f3d, 0f3d],
    [169c, 169c], [2046, 2046], [207e, 207e], [208e, 208e], [2309, 2309],
    [230b, 230b], [232a, 232a], [2769, 2769], [276b, 276b], [276d, 276d],
    [276f, 276f], [2771, 2771], [2773, 2773], [2775, 2775], [27c6, 27c6],
    [27e7, 27e7], [27e9, 27e9], [27eb, 27eb], [27ed, 27ed], [27ef, 27ef],
    [2984, 2984], [2986, 2986], [2988, 2988], [298a, 298a], [298c, 298c],
    [298e, 298e], [2990, 2990], [2992, 2992], [2994, 2994], [2996, 2996],
    [2998, 2998], [29d9, 29d9], [29db, 29db], [29fd, 29fd], [2e23, 2e23],
    [2e25, 2e25], [2e27, 2e27], [2e29, 2e29], [3009, 3009], [300b, 300b],
    [300d, 300d], [300f, 300f], [3011, 3011], [3015, 3015], [3017, 3017],
    [3019, 3019], [301b, 301b], [fe5a, fe5a], [fe5c, fe5c], [fe5e, fe5e],
    [ff09, ff09], [ff3d, ff3d], [ff5d, ff5d], [ff60, ff60], [ff63, ff63]**/
    const UnicodeSet c_Set 
        {{{Empty, 1}, {Mixed, 3}, {Empty, 117}, {Mixed, 1}, {Empty, 58},
          {Mixed, 1}, {Empty, 77}, {Mixed, 3}, {Empty, 19}, {Mixed, 2},
          {Empty, 33}, {Mixed, 1}, {Empty, 2}, {Mixed, 2}, {Empty, 12},
          {Mixed, 1}, {Empty, 1}, {Mixed, 2}, {Empty, 33}, {Mixed, 1},
          {Empty, 14}, {Mixed, 1}, {Empty, 1649}, {Mixed, 1}, {Empty, 5},
          {Mixed, 4}, {Empty, 32772}},
         {0x00000200, 0x20000000, 0x20000000, 0x28000000, 0x10000000,
          0x00000040, 0x40000000, 0x00004000, 0x00000a00, 0x00000400,
          0x002aaa00, 0x00000040, 0x0000aa80, 0x01555550, 0x0a000000,
          0x20000000, 0x000002a8, 0x0aa2aa00, 0x54000000, 0x00000200,
          0x20000000, 0x20000000, 0x00000009}};
    static EnumeratedPropertyObject property_object
        {bpt,
         BPT_ns::independent_prop_values,
         BPT_ns::enum_names,
         BPT_ns::value_names,
         BPT_ns::aliases_only_map,
         {&n_Set, &o_Set, &c_Set
         }};
    }
}


#endif
