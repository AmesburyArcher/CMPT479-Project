/*
 *  Copyright (c) 2014 International Characters.
 *  This software is licensed to the public under the Open Software License 3.0.
 *  icgrep is a trademark of International Characters.
 *
 *  This is a generated file, produced by unicode_category_compiler.py.
 *  
 */

#ifndef UNICODE_CATEGORIES_H
#define UNICODE_CATEGORIES_H


#include "icgrep.h"

#define LocalCarryDeclare(name, count)\
CarryArray<count, 0> name;\



  struct Struct_Ps {
  BitBlock cc;
};

  struct Struct_Nl {
  BitBlock cc;
};

  struct Struct_No {
  BitBlock cc;
};

  struct Struct_Lo {
  BitBlock cc;
};

  struct Struct_Ll {
  BitBlock cc;
};

  struct Struct_Lm {
  BitBlock cc;
};

  struct Struct_Nd {
  BitBlock cc;
};

  struct Struct_Pc {
  BitBlock cc;
};

  struct Struct_Lt {
  BitBlock cc;
};

  struct Struct_Lu {
  BitBlock cc;
};

  struct Struct_Pf {
  BitBlock cc;
};

  struct Struct_Pd {
  BitBlock cc;
};

  struct Struct_Pe {
  BitBlock cc;
};

  struct Struct_Pi {
  BitBlock cc;
};

  struct Struct_Po {
  BitBlock cc;
};

  struct Struct_Me {
  BitBlock cc;
};

  struct Struct_Mc {
  BitBlock cc;
};

  struct Struct_Mn {
  BitBlock cc;
};

  struct Struct_Sk {
  BitBlock cc;
};

  struct Struct_So {
  BitBlock cc;
};

  struct Struct_Sm {
  BitBlock cc;
};

  struct Struct_Sc {
  BitBlock cc;
};

  struct Struct_Zl {
  BitBlock cc;
};

  struct Struct_Co {
  BitBlock cc;
};

  struct Struct_Cn {
  BitBlock cc;
};

  struct Struct_Cc {
  BitBlock cc;
};

  struct Struct_Cf {
  BitBlock cc;
};

  struct Struct_Cs {
  BitBlock cc;
};

  struct Struct_Zp {
  BitBlock cc;
};

  struct Struct_Zs {
  BitBlock cc;
};

  struct Ps {
  Ps() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Ps & struct_Ps) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, tmp7, tmp8, tmp9, tmp10, tmp11;
		BitBlock tmp12, tmp13, tmp14, tmp15, tmp16, tmp17, cc_range_28_7b_1, tmp18;
		BitBlock tmp19, tmp20, tmp21, byte_e0, tmp22, tmp23, tmp24, tmp25, byte_bc;
		BitBlock tmp26, sequence_e0_bc, byte_e0_adv, tmp27, tmp28, tmp29;
		BitBlock cc_range_f3a_f3c_3, sequence_e0_bc_adv, tmp30, tmp31, tmp32, byte_e1;
		BitBlock tmp33, byte_9a, tmp34, sequence_e1_9a, byte_e1_adv, byte_9b;
		BitBlock sequence_e1_9a_adv, tmp35, tmp36, byte_e2, tmp37, tmp38, byte_80;
		BitBlock tmp39, sequence_e2_80, byte_e2_adv, tmp40, cc_range_201a_201e_3;
		BitBlock sequence_e2_80_adv, tmp41, byte_81, sequence_e2_81, tmp42, tmp43;
		BitBlock tmp44, tmp45, tmp46, cc_range_2045_207d_3, sequence_e2_81_adv, tmp47;
		BitBlock byte_82, sequence_e2_82, byte_8d, sequence_e2_82_adv, tmp48, byte_8c;
		BitBlock sequence_e2_8c, tmp49, tmp50, tmp51, tmp52, tmp53, tmp54;
		BitBlock cc_range_2308_2329_3, sequence_e2_8c_adv, tmp55, byte_9d;
		BitBlock sequence_e2_9d, tmp56, tmp57, tmp58, tmp59, tmp60, tmp61;
		BitBlock cc_range_2768_2774_3, sequence_e2_9d_adv, tmp62, tmp63, byte_9f;
		BitBlock sequence_e2_9f, tmp64, tmp65, tmp66, tmp67, tmp68, tmp69, tmp70;
		BitBlock tmp71, tmp72, tmp73, tmp74, cc_range_27c5_27ee_3, sequence_e2_9f_adv;
		BitBlock tmp75, byte_a6, sequence_e2_a6, tmp76, tmp77, tmp78, tmp79, tmp80;
		BitBlock cc_range_2983_2997_3, sequence_e2_a6_adv, tmp81, tmp82, byte_a7;
		BitBlock sequence_e2_a7, tmp83, cc_range_29d8_29fc_3, sequence_e2_a7_adv;
		BitBlock tmp84, byte_b8, sequence_e2_b8, tmp85, tmp86, tmp87, tmp88;
		BitBlock cc_range_2e22_2e28_3, sequence_e2_b8_adv, tmp89, tmp90, byte_e3;
		BitBlock tmp91, sequence_e3_80, byte_e3_adv, tmp92, tmp93, tmp94, tmp95, tmp96;
		BitBlock tmp97, tmp98, tmp99, tmp100, tmp101, tmp102, tmp103, tmp104;
		BitBlock cc_range_3008_301d_3, sequence_e3_80_adv, tmp105, byte_ef, byte_b4;
		BitBlock tmp106, sequence_ef_b4, byte_ef_adv, byte_be, sequence_ef_b4_adv;
		BitBlock tmp107, sequence_ef_b8, tmp108, tmp109, tmp110, tmp111, tmp112;
		BitBlock tmp113, tmp114, tmp115, tmp116, tmp117, tmp118, cc_range_fe17_fe3f_3;
		BitBlock sequence_ef_b8_adv, tmp119, byte_b9, sequence_ef_b9, tmp120, tmp121;
		BitBlock tmp122, tmp123, tmp124, tmp125, cc_range_fe41_fe5d_3;
		BitBlock sequence_ef_b9_adv, tmp126, sequence_ef_bc, tmp127;
		BitBlock cc_range_ff08_ff3b_3, sequence_ef_bc_adv, tmp128, byte_bd;
		BitBlock sequence_ef_bd, tmp129, tmp130, tmp131, cc_range_ff5b_ff62_3;
		BitBlock sequence_ef_bd_adv, tmp132;




        struct_Ps.cc = simd<1>::constant<0>();
        tmp1 = simd_or(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp2, tmp1);
        tmp4 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_andc(tmp4, tmp5);
        tmp7 = simd_and(tmp3, tmp6);
        tmp8 = simd_andc(basis_bits.bit_1, basis_bits.bit_0);
        tmp9 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp10 = simd_and(tmp8, tmp9);
        tmp11 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp12 = simd_and(tmp4, tmp11);
        tmp13 = simd_and(tmp10, tmp12);
        tmp14 = simd_or(tmp7, tmp13);
        tmp15 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp16 = simd_and(tmp8, tmp15);
        tmp17 = simd_and(tmp16, tmp12);
        cc_range_28_7b_1 = simd_or(tmp14, tmp17);
        struct_Ps.cc = simd_or(struct_Ps.cc, cc_range_28_7b_1);
        tmp18 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp19 = simd_and(tmp18, tmp2);
        tmp20 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp21 = simd_or(tmp20, tmp5);
        byte_e0 = simd_andc(tmp19, tmp21);
        tmp22 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp23 = simd_and(tmp22, tmp15);
        tmp24 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp25 = simd_andc(tmp24, tmp5);
        byte_bc = simd_and(tmp23, tmp25);
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(byte_e0, carryQ.get_carry_in(0), tmp26));
        sequence_e0_bc = simd_and(tmp26, byte_bc);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(byte_e0, carryQ.get_carry_in(1), byte_e0_adv));
        tmp27 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp28 = simd_and(tmp4, tmp27);
        tmp29 = simd_or(tmp28, tmp25);
        cc_range_f3a_f3c_3 = simd_and(tmp23, tmp29);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(sequence_e0_bc, carryQ.get_carry_in(2), sequence_e0_bc_adv));
        tmp30 = simd_and(sequence_e0_bc_adv, cc_range_f3a_f3c_3);
        struct_Ps.cc = simd_or(struct_Ps.cc, tmp30);
        tmp31 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp32 = simd_andc(tmp31, tmp20);
        byte_e1 = simd_and(tmp19, tmp32);
        tmp33 = simd_and(tmp22, tmp9);
        byte_9a = simd_and(tmp33, tmp28);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(3), tmp34));
        sequence_e1_9a = simd_and(tmp34, byte_9a);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(4), byte_e1_adv));
        byte_9b = simd_and(tmp33, tmp12);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(sequence_e1_9a, carryQ.get_carry_in(5), sequence_e1_9a_adv));
        tmp35 = simd_and(sequence_e1_9a_adv, byte_9b);
        struct_Ps.cc = simd_or(struct_Ps.cc, tmp35);
        tmp36 = simd_andc(tmp27, tmp20);
        byte_e2 = simd_and(tmp19, tmp36);
        tmp37 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp38 = simd_andc(tmp22, tmp37);
        byte_80 = simd_andc(tmp38, tmp21);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(6), tmp39));
        sequence_e2_80 = simd_and(tmp39, byte_80);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(7), byte_e2_adv));
        tmp40 = simd_and(tmp27, basis_bits.bit_4);
        cc_range_201a_201e_3 = simd_and(tmp33, tmp40);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(sequence_e2_80, carryQ.get_carry_in(8), sequence_e2_80_adv));
        tmp41 = simd_and(sequence_e2_80_adv, cc_range_201a_201e_3);
        struct_Ps.cc = simd_or(struct_Ps.cc, tmp41);
        byte_81 = simd_and(tmp38, tmp32);
        sequence_e2_81 = simd_and(byte_e2_adv, byte_81);
        tmp42 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp43 = simd_and(tmp42, tmp31);
        tmp44 = simd_and(tmp38, tmp43);
        tmp45 = simd_and(tmp24, tmp31);
        tmp46 = simd_and(tmp23, tmp45);
        cc_range_2045_207d_3 = simd_or(tmp44, tmp46);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(sequence_e2_81, carryQ.get_carry_in(9), sequence_e2_81_adv));
        tmp47 = simd_and(sequence_e2_81_adv, cc_range_2045_207d_3);
        struct_Ps.cc = simd_or(struct_Ps.cc, tmp47);
        byte_82 = simd_and(tmp38, tmp36);
        sequence_e2_82 = simd_and(byte_e2_adv, byte_82);
        byte_8d = simd_and(tmp38, tmp45);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(sequence_e2_82, carryQ.get_carry_in(10), sequence_e2_82_adv));
        tmp48 = simd_and(sequence_e2_82_adv, byte_8d);
        struct_Ps.cc = simd_or(struct_Ps.cc, tmp48);
        byte_8c = simd_and(tmp38, tmp25);
        sequence_e2_8c = simd_and(byte_e2_adv, byte_8c);
        tmp49 = simd_andc(tmp5, tmp27);
        tmp50 = simd_andc(tmp4, tmp49);
        tmp51 = simd_and(tmp38, tmp50);
        tmp52 = simd_and(tmp22, tmp2);
        tmp53 = simd_and(tmp4, tmp31);
        tmp54 = simd_and(tmp52, tmp53);
        cc_range_2308_2329_3 = simd_or(tmp51, tmp54);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(sequence_e2_8c, carryQ.get_carry_in(11), sequence_e2_8c_adv));
        tmp55 = simd_and(sequence_e2_8c_adv, cc_range_2308_2329_3);
        struct_Ps.cc = simd_or(struct_Ps.cc, tmp55);
        byte_9d = simd_and(tmp33, tmp45);
        sequence_e2_9d = simd_and(byte_e2_adv, byte_9d);
        tmp56 = simd_and(tmp22, basis_bits.bit_2);
        tmp57 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp58 = simd_or(basis_bits.bit_4, tmp57);
        tmp59 = simd_not(tmp58);
        tmp60 = simd_or(simd_and(basis_bits.bit_3, tmp59), simd_andc(basis_bits.bit_4, basis_bits.bit_3));
        tmp61 = simd_and(tmp56, tmp60);
        cc_range_2768_2774_3 = simd_andc(tmp61, basis_bits.bit_7);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(sequence_e2_9d, carryQ.get_carry_in(12), sequence_e2_9d_adv));
        tmp62 = simd_and(sequence_e2_9d_adv, cc_range_2768_2774_3);
        struct_Ps.cc = simd_or(struct_Ps.cc, tmp62);
        tmp63 = simd_and(tmp24, tmp11);
        byte_9f = simd_and(tmp33, tmp63);
        sequence_e2_9f = simd_and(byte_e2_adv, byte_9f);
        tmp64 = simd_and(tmp42, tmp27);
        tmp65 = simd_and(tmp52, tmp64);
        tmp66 = simd_or(tmp44, tmp65);
        tmp67 = simd_and(tmp52, tmp6);
        tmp68 = simd_or(tmp66, tmp67);
        tmp69 = simd_and(tmp52, tmp28);
        tmp70 = simd_or(tmp68, tmp69);
        tmp71 = simd_and(tmp52, tmp25);
        tmp72 = simd_or(tmp70, tmp71);
        tmp73 = simd_and(tmp24, tmp27);
        tmp74 = simd_and(tmp52, tmp73);
        cc_range_27c5_27ee_3 = simd_or(tmp72, tmp74);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(sequence_e2_9f, carryQ.get_carry_in(13), sequence_e2_9f_adv));
        tmp75 = simd_and(sequence_e2_9f_adv, cc_range_27c5_27ee_3);
        struct_Ps.cc = simd_or(struct_Ps.cc, tmp75);
        byte_a6 = simd_and(tmp52, tmp64);
        sequence_e2_a6 = simd_and(byte_e2_adv, byte_a6);
        tmp76 = simd_andc(tmp22, basis_bits.bit_2);
        tmp77 = simd_not(basis_bits.bit_4);
        tmp78 = simd_or(tmp20, basis_bits.bit_6);
        tmp79 = simd_or(simd_and(basis_bits.bit_3, tmp77), simd_andc(tmp78, basis_bits.bit_3));
        tmp80 = simd_and(tmp76, tmp79);
        cc_range_2983_2997_3 = simd_andc(tmp80, basis_bits.bit_7);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(sequence_e2_a6, carryQ.get_carry_in(14), sequence_e2_a6_adv));
        tmp81 = simd_and(sequence_e2_a6_adv, cc_range_2983_2997_3);
        struct_Ps.cc = simd_or(struct_Ps.cc, tmp81);
        tmp82 = simd_and(tmp42, tmp11);
        byte_a7 = simd_and(tmp52, tmp82);
        sequence_e2_a7 = simd_and(byte_e2_adv, byte_a7);
        tmp83 = simd_and(tmp33, tmp50);
        cc_range_29d8_29fc_3 = simd_or(tmp83, byte_bc);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(sequence_e2_a7, carryQ.get_carry_in(15), sequence_e2_a7_adv));
        tmp84 = simd_and(sequence_e2_a7_adv, cc_range_29d8_29fc_3);
        struct_Ps.cc = simd_or(struct_Ps.cc, tmp84);
        byte_b8 = simd_and(tmp23, tmp6);
        sequence_e2_b8 = simd_and(byte_e2_adv, byte_b8);
        tmp85 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
        tmp86 = simd_not(tmp85);
        tmp87 = simd_or(simd_and(basis_bits.bit_4, tmp86), simd_andc(tmp85, basis_bits.bit_4));
        tmp88 = simd_and(tmp52, tmp87);
        cc_range_2e22_2e28_3 = simd_andc(tmp88, basis_bits.bit_7);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(sequence_e2_b8, carryQ.get_carry_in(16), sequence_e2_b8_adv));
        tmp89 = simd_and(sequence_e2_b8_adv, cc_range_2e22_2e28_3);
        struct_Ps.cc = simd_or(struct_Ps.cc, tmp89);
        tmp90 = simd_andc(tmp11, tmp20);
        byte_e3 = simd_and(tmp19, tmp90);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(byte_e3, carryQ.get_carry_in(17), tmp91));
        sequence_e3_80 = simd_and(tmp91, byte_80);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(byte_e3, carryQ.get_carry_in(18), byte_e3_adv));
        tmp92 = simd_or(tmp50, tmp25);
        tmp93 = simd_or(tmp92, tmp73);
        tmp94 = simd_and(tmp38, tmp93);
        tmp95 = simd_andc(tmp33, tmp21);
        tmp96 = simd_or(tmp94, tmp95);
        tmp97 = simd_andc(tmp42, tmp5);
        tmp98 = simd_and(tmp33, tmp97);
        tmp99 = simd_or(tmp96, tmp98);
        tmp100 = simd_and(tmp33, tmp64);
        tmp101 = simd_or(tmp99, tmp100);
        tmp102 = simd_and(tmp33, tmp6);
        tmp103 = simd_or(tmp101, tmp102);
        tmp104 = simd_or(tmp103, byte_9a);
        cc_range_3008_301d_3 = simd_or(tmp104, byte_9d);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(sequence_e3_80, carryQ.get_carry_in(19), sequence_e3_80_adv));
        tmp105 = simd_and(sequence_e3_80_adv, cc_range_3008_301d_3);
        struct_Ps.cc = simd_or(struct_Ps.cc, tmp105);
        byte_ef = simd_and(tmp19, tmp63);
        byte_b4 = simd_and(tmp23, tmp97);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(20), tmp106));
        sequence_ef_b4 = simd_and(tmp106, byte_b4);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(21), byte_ef_adv));
        byte_be = simd_and(tmp23, tmp73);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(sequence_ef_b4, carryQ.get_carry_in(22), sequence_ef_b4_adv));
        tmp107 = simd_and(sequence_ef_b4_adv, byte_be);
        struct_Ps.cc = simd_or(struct_Ps.cc, tmp107);
        sequence_ef_b8 = simd_and(byte_ef_adv, byte_b8);
        tmp108 = simd_and(tmp33, tmp82);
        tmp109 = simd_and(tmp23, tmp43);
        tmp110 = simd_or(tmp108, tmp109);
        tmp111 = simd_and(tmp23, tmp82);
        tmp112 = simd_or(tmp110, tmp111);
        tmp113 = simd_and(tmp23, tmp53);
        tmp114 = simd_or(tmp112, tmp113);
        tmp115 = simd_and(tmp23, tmp12);
        tmp116 = simd_or(tmp114, tmp115);
        tmp117 = simd_or(tmp116, tmp46);
        tmp118 = simd_and(tmp23, tmp63);
        cc_range_fe17_fe3f_3 = simd_or(tmp117, tmp118);
        carryQ.cq[23] = carryout2carry(pablo_blk_Advance(sequence_ef_b8, carryQ.get_carry_in(23), sequence_ef_b8_adv));
        tmp119 = simd_and(sequence_ef_b8_adv, cc_range_fe17_fe3f_3);
        struct_Ps.cc = simd_or(struct_Ps.cc, tmp119);
        byte_b9 = simd_and(tmp23, tmp53);
        sequence_ef_b9 = simd_and(byte_ef_adv, byte_b9);
        tmp120 = simd_andc(basis_bits.bit_7, tmp20);
        tmp121 = simd_or(tmp120, tmp82);
        tmp122 = simd_and(tmp38, tmp121);
        tmp123 = simd_and(tmp33, tmp53);
        tmp124 = simd_or(tmp122, tmp123);
        tmp125 = simd_or(tmp124, byte_9b);
        cc_range_fe41_fe5d_3 = simd_or(tmp125, byte_9d);
        carryQ.cq[24] = carryout2carry(pablo_blk_Advance(sequence_ef_b9, carryQ.get_carry_in(24), sequence_ef_b9_adv));
        tmp126 = simd_and(sequence_ef_b9_adv, cc_range_fe41_fe5d_3);
        struct_Ps.cc = simd_or(struct_Ps.cc, tmp126);
        sequence_ef_bc = simd_and(byte_ef_adv, byte_bc);
        tmp127 = simd_and(tmp38, tmp6);
        cc_range_ff08_ff3b_3 = simd_or(tmp127, tmp115);
        carryQ.cq[25] = carryout2carry(pablo_blk_Advance(sequence_ef_bc, carryQ.get_carry_in(25), sequence_ef_bc_adv));
        tmp128 = simd_and(sequence_ef_bc_adv, cc_range_ff08_ff3b_3);
        struct_Ps.cc = simd_or(struct_Ps.cc, tmp128);
        byte_bd = simd_and(tmp23, tmp45);
        sequence_ef_bd = simd_and(byte_ef_adv, byte_bd);
        tmp129 = simd_and(tmp11, basis_bits.bit_4);
        tmp130 = simd_and(tmp33, tmp129);
        tmp131 = simd_and(tmp52, tmp36);
        cc_range_ff5b_ff62_3 = simd_or(tmp130, tmp131);
        carryQ.cq[26] = carryout2carry(pablo_blk_Advance(sequence_ef_bd, carryQ.get_carry_in(26), sequence_ef_bd_adv));
        tmp132 = simd_and(sequence_ef_bd_adv, cc_range_ff5b_ff62_3);
        struct_Ps.cc = simd_or(struct_Ps.cc, tmp132);
        carryQ.CarryQ_Adjust(27);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Ps & struct_Ps, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, tmp7, tmp8, tmp9, tmp10, tmp11;
		BitBlock tmp12, tmp13, tmp14, tmp15, tmp16, tmp17, cc_range_28_7b_1, tmp18;
		BitBlock tmp19, tmp20, tmp21, byte_e0, tmp22, tmp23, tmp24, tmp25, byte_bc;
		BitBlock tmp26, sequence_e0_bc, byte_e0_adv, tmp27, tmp28, tmp29;
		BitBlock cc_range_f3a_f3c_3, sequence_e0_bc_adv, tmp30, tmp31, tmp32, byte_e1;
		BitBlock tmp33, byte_9a, tmp34, sequence_e1_9a, byte_e1_adv, byte_9b;
		BitBlock sequence_e1_9a_adv, tmp35, tmp36, byte_e2, tmp37, tmp38, byte_80;
		BitBlock tmp39, sequence_e2_80, byte_e2_adv, tmp40, cc_range_201a_201e_3;
		BitBlock sequence_e2_80_adv, tmp41, byte_81, sequence_e2_81, tmp42, tmp43;
		BitBlock tmp44, tmp45, tmp46, cc_range_2045_207d_3, sequence_e2_81_adv, tmp47;
		BitBlock byte_82, sequence_e2_82, byte_8d, sequence_e2_82_adv, tmp48, byte_8c;
		BitBlock sequence_e2_8c, tmp49, tmp50, tmp51, tmp52, tmp53, tmp54;
		BitBlock cc_range_2308_2329_3, sequence_e2_8c_adv, tmp55, byte_9d;
		BitBlock sequence_e2_9d, tmp56, tmp57, tmp58, tmp59, tmp60, tmp61;
		BitBlock cc_range_2768_2774_3, sequence_e2_9d_adv, tmp62, tmp63, byte_9f;
		BitBlock sequence_e2_9f, tmp64, tmp65, tmp66, tmp67, tmp68, tmp69, tmp70;
		BitBlock tmp71, tmp72, tmp73, tmp74, cc_range_27c5_27ee_3, sequence_e2_9f_adv;
		BitBlock tmp75, byte_a6, sequence_e2_a6, tmp76, tmp77, tmp78, tmp79, tmp80;
		BitBlock cc_range_2983_2997_3, sequence_e2_a6_adv, tmp81, tmp82, byte_a7;
		BitBlock sequence_e2_a7, tmp83, cc_range_29d8_29fc_3, sequence_e2_a7_adv;
		BitBlock tmp84, byte_b8, sequence_e2_b8, tmp85, tmp86, tmp87, tmp88;
		BitBlock cc_range_2e22_2e28_3, sequence_e2_b8_adv, tmp89, tmp90, byte_e3;
		BitBlock tmp91, sequence_e3_80, byte_e3_adv, tmp92, tmp93, tmp94, tmp95, tmp96;
		BitBlock tmp97, tmp98, tmp99, tmp100, tmp101, tmp102, tmp103, tmp104;
		BitBlock cc_range_3008_301d_3, sequence_e3_80_adv, tmp105, byte_ef, byte_b4;
		BitBlock tmp106, sequence_ef_b4, byte_ef_adv, byte_be, sequence_ef_b4_adv;
		BitBlock tmp107, sequence_ef_b8, tmp108, tmp109, tmp110, tmp111, tmp112;
		BitBlock tmp113, tmp114, tmp115, tmp116, tmp117, tmp118, cc_range_fe17_fe3f_3;
		BitBlock sequence_ef_b8_adv, tmp119, byte_b9, sequence_ef_b9, tmp120, tmp121;
		BitBlock tmp122, tmp123, tmp124, tmp125, cc_range_fe41_fe5d_3;
		BitBlock sequence_ef_b9_adv, tmp126, sequence_ef_bc, tmp127;
		BitBlock cc_range_ff08_ff3b_3, sequence_ef_bc_adv, tmp128, byte_bd;
		BitBlock sequence_ef_bd, tmp129, tmp130, tmp131, cc_range_ff5b_ff62_3;
		BitBlock sequence_ef_bd_adv, tmp132;




        struct_Ps.cc = simd<1>::constant<0>();
        tmp1 = simd_or(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp2, tmp1);
        tmp4 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_andc(tmp4, tmp5);
        tmp7 = simd_and(tmp3, tmp6);
        tmp8 = simd_andc(basis_bits.bit_1, basis_bits.bit_0);
        tmp9 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp10 = simd_and(tmp8, tmp9);
        tmp11 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp12 = simd_and(tmp4, tmp11);
        tmp13 = simd_and(tmp10, tmp12);
        tmp14 = simd_or(tmp7, tmp13);
        tmp15 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp16 = simd_and(tmp8, tmp15);
        tmp17 = simd_and(tmp16, tmp12);
        cc_range_28_7b_1 = simd_or(tmp14, tmp17);
        struct_Ps.cc = simd_or(struct_Ps.cc, cc_range_28_7b_1);
        tmp18 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp19 = simd_and(tmp18, tmp2);
        tmp20 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp21 = simd_or(tmp20, tmp5);
        byte_e0 = simd_andc(tmp19, tmp21);
        tmp22 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp23 = simd_and(tmp22, tmp15);
        tmp24 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp25 = simd_andc(tmp24, tmp5);
        byte_bc = simd_and(tmp23, tmp25);
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(byte_e0, carryQ.get_carry_in(0), tmp26));
        sequence_e0_bc = simd_and(tmp26, byte_bc);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(byte_e0, carryQ.get_carry_in(1), byte_e0_adv));
        tmp27 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp28 = simd_and(tmp4, tmp27);
        tmp29 = simd_or(tmp28, tmp25);
        cc_range_f3a_f3c_3 = simd_and(tmp23, tmp29);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(sequence_e0_bc, carryQ.get_carry_in(2), sequence_e0_bc_adv));
        tmp30 = simd_and(sequence_e0_bc_adv, cc_range_f3a_f3c_3);
        struct_Ps.cc = simd_or(struct_Ps.cc, tmp30);
        tmp31 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp32 = simd_andc(tmp31, tmp20);
        byte_e1 = simd_and(tmp19, tmp32);
        tmp33 = simd_and(tmp22, tmp9);
        byte_9a = simd_and(tmp33, tmp28);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(3), tmp34));
        sequence_e1_9a = simd_and(tmp34, byte_9a);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(4), byte_e1_adv));
        byte_9b = simd_and(tmp33, tmp12);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(sequence_e1_9a, carryQ.get_carry_in(5), sequence_e1_9a_adv));
        tmp35 = simd_and(sequence_e1_9a_adv, byte_9b);
        struct_Ps.cc = simd_or(struct_Ps.cc, tmp35);
        tmp36 = simd_andc(tmp27, tmp20);
        byte_e2 = simd_and(tmp19, tmp36);
        tmp37 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp38 = simd_andc(tmp22, tmp37);
        byte_80 = simd_andc(tmp38, tmp21);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(6), tmp39));
        sequence_e2_80 = simd_and(tmp39, byte_80);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(7), byte_e2_adv));
        tmp40 = simd_and(tmp27, basis_bits.bit_4);
        cc_range_201a_201e_3 = simd_and(tmp33, tmp40);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(sequence_e2_80, carryQ.get_carry_in(8), sequence_e2_80_adv));
        tmp41 = simd_and(sequence_e2_80_adv, cc_range_201a_201e_3);
        struct_Ps.cc = simd_or(struct_Ps.cc, tmp41);
        byte_81 = simd_and(tmp38, tmp32);
        sequence_e2_81 = simd_and(byte_e2_adv, byte_81);
        tmp42 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp43 = simd_and(tmp42, tmp31);
        tmp44 = simd_and(tmp38, tmp43);
        tmp45 = simd_and(tmp24, tmp31);
        tmp46 = simd_and(tmp23, tmp45);
        cc_range_2045_207d_3 = simd_or(tmp44, tmp46);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(sequence_e2_81, carryQ.get_carry_in(9), sequence_e2_81_adv));
        tmp47 = simd_and(sequence_e2_81_adv, cc_range_2045_207d_3);
        struct_Ps.cc = simd_or(struct_Ps.cc, tmp47);
        byte_82 = simd_and(tmp38, tmp36);
        sequence_e2_82 = simd_and(byte_e2_adv, byte_82);
        byte_8d = simd_and(tmp38, tmp45);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(sequence_e2_82, carryQ.get_carry_in(10), sequence_e2_82_adv));
        tmp48 = simd_and(sequence_e2_82_adv, byte_8d);
        struct_Ps.cc = simd_or(struct_Ps.cc, tmp48);
        byte_8c = simd_and(tmp38, tmp25);
        sequence_e2_8c = simd_and(byte_e2_adv, byte_8c);
        tmp49 = simd_andc(tmp5, tmp27);
        tmp50 = simd_andc(tmp4, tmp49);
        tmp51 = simd_and(tmp38, tmp50);
        tmp52 = simd_and(tmp22, tmp2);
        tmp53 = simd_and(tmp4, tmp31);
        tmp54 = simd_and(tmp52, tmp53);
        cc_range_2308_2329_3 = simd_or(tmp51, tmp54);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(sequence_e2_8c, carryQ.get_carry_in(11), sequence_e2_8c_adv));
        tmp55 = simd_and(sequence_e2_8c_adv, cc_range_2308_2329_3);
        struct_Ps.cc = simd_or(struct_Ps.cc, tmp55);
        byte_9d = simd_and(tmp33, tmp45);
        sequence_e2_9d = simd_and(byte_e2_adv, byte_9d);
        tmp56 = simd_and(tmp22, basis_bits.bit_2);
        tmp57 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp58 = simd_or(basis_bits.bit_4, tmp57);
        tmp59 = simd_not(tmp58);
        tmp60 = simd_or(simd_and(basis_bits.bit_3, tmp59), simd_andc(basis_bits.bit_4, basis_bits.bit_3));
        tmp61 = simd_and(tmp56, tmp60);
        cc_range_2768_2774_3 = simd_andc(tmp61, basis_bits.bit_7);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(sequence_e2_9d, carryQ.get_carry_in(12), sequence_e2_9d_adv));
        tmp62 = simd_and(sequence_e2_9d_adv, cc_range_2768_2774_3);
        struct_Ps.cc = simd_or(struct_Ps.cc, tmp62);
        tmp63 = simd_and(tmp24, tmp11);
        byte_9f = simd_and(tmp33, tmp63);
        sequence_e2_9f = simd_and(byte_e2_adv, byte_9f);
        tmp64 = simd_and(tmp42, tmp27);
        tmp65 = simd_and(tmp52, tmp64);
        tmp66 = simd_or(tmp44, tmp65);
        tmp67 = simd_and(tmp52, tmp6);
        tmp68 = simd_or(tmp66, tmp67);
        tmp69 = simd_and(tmp52, tmp28);
        tmp70 = simd_or(tmp68, tmp69);
        tmp71 = simd_and(tmp52, tmp25);
        tmp72 = simd_or(tmp70, tmp71);
        tmp73 = simd_and(tmp24, tmp27);
        tmp74 = simd_and(tmp52, tmp73);
        cc_range_27c5_27ee_3 = simd_or(tmp72, tmp74);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(sequence_e2_9f, carryQ.get_carry_in(13), sequence_e2_9f_adv));
        tmp75 = simd_and(sequence_e2_9f_adv, cc_range_27c5_27ee_3);
        struct_Ps.cc = simd_or(struct_Ps.cc, tmp75);
        byte_a6 = simd_and(tmp52, tmp64);
        sequence_e2_a6 = simd_and(byte_e2_adv, byte_a6);
        tmp76 = simd_andc(tmp22, basis_bits.bit_2);
        tmp77 = simd_not(basis_bits.bit_4);
        tmp78 = simd_or(tmp20, basis_bits.bit_6);
        tmp79 = simd_or(simd_and(basis_bits.bit_3, tmp77), simd_andc(tmp78, basis_bits.bit_3));
        tmp80 = simd_and(tmp76, tmp79);
        cc_range_2983_2997_3 = simd_andc(tmp80, basis_bits.bit_7);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(sequence_e2_a6, carryQ.get_carry_in(14), sequence_e2_a6_adv));
        tmp81 = simd_and(sequence_e2_a6_adv, cc_range_2983_2997_3);
        struct_Ps.cc = simd_or(struct_Ps.cc, tmp81);
        tmp82 = simd_and(tmp42, tmp11);
        byte_a7 = simd_and(tmp52, tmp82);
        sequence_e2_a7 = simd_and(byte_e2_adv, byte_a7);
        tmp83 = simd_and(tmp33, tmp50);
        cc_range_29d8_29fc_3 = simd_or(tmp83, byte_bc);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(sequence_e2_a7, carryQ.get_carry_in(15), sequence_e2_a7_adv));
        tmp84 = simd_and(sequence_e2_a7_adv, cc_range_29d8_29fc_3);
        struct_Ps.cc = simd_or(struct_Ps.cc, tmp84);
        byte_b8 = simd_and(tmp23, tmp6);
        sequence_e2_b8 = simd_and(byte_e2_adv, byte_b8);
        tmp85 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
        tmp86 = simd_not(tmp85);
        tmp87 = simd_or(simd_and(basis_bits.bit_4, tmp86), simd_andc(tmp85, basis_bits.bit_4));
        tmp88 = simd_and(tmp52, tmp87);
        cc_range_2e22_2e28_3 = simd_andc(tmp88, basis_bits.bit_7);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(sequence_e2_b8, carryQ.get_carry_in(16), sequence_e2_b8_adv));
        tmp89 = simd_and(sequence_e2_b8_adv, cc_range_2e22_2e28_3);
        struct_Ps.cc = simd_or(struct_Ps.cc, tmp89);
        tmp90 = simd_andc(tmp11, tmp20);
        byte_e3 = simd_and(tmp19, tmp90);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(byte_e3, carryQ.get_carry_in(17), tmp91));
        sequence_e3_80 = simd_and(tmp91, byte_80);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(byte_e3, carryQ.get_carry_in(18), byte_e3_adv));
        tmp92 = simd_or(tmp50, tmp25);
        tmp93 = simd_or(tmp92, tmp73);
        tmp94 = simd_and(tmp38, tmp93);
        tmp95 = simd_andc(tmp33, tmp21);
        tmp96 = simd_or(tmp94, tmp95);
        tmp97 = simd_andc(tmp42, tmp5);
        tmp98 = simd_and(tmp33, tmp97);
        tmp99 = simd_or(tmp96, tmp98);
        tmp100 = simd_and(tmp33, tmp64);
        tmp101 = simd_or(tmp99, tmp100);
        tmp102 = simd_and(tmp33, tmp6);
        tmp103 = simd_or(tmp101, tmp102);
        tmp104 = simd_or(tmp103, byte_9a);
        cc_range_3008_301d_3 = simd_or(tmp104, byte_9d);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(sequence_e3_80, carryQ.get_carry_in(19), sequence_e3_80_adv));
        tmp105 = simd_and(sequence_e3_80_adv, cc_range_3008_301d_3);
        struct_Ps.cc = simd_or(struct_Ps.cc, tmp105);
        byte_ef = simd_and(tmp19, tmp63);
        byte_b4 = simd_and(tmp23, tmp97);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(20), tmp106));
        sequence_ef_b4 = simd_and(tmp106, byte_b4);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(21), byte_ef_adv));
        byte_be = simd_and(tmp23, tmp73);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(sequence_ef_b4, carryQ.get_carry_in(22), sequence_ef_b4_adv));
        tmp107 = simd_and(sequence_ef_b4_adv, byte_be);
        struct_Ps.cc = simd_or(struct_Ps.cc, tmp107);
        sequence_ef_b8 = simd_and(byte_ef_adv, byte_b8);
        tmp108 = simd_and(tmp33, tmp82);
        tmp109 = simd_and(tmp23, tmp43);
        tmp110 = simd_or(tmp108, tmp109);
        tmp111 = simd_and(tmp23, tmp82);
        tmp112 = simd_or(tmp110, tmp111);
        tmp113 = simd_and(tmp23, tmp53);
        tmp114 = simd_or(tmp112, tmp113);
        tmp115 = simd_and(tmp23, tmp12);
        tmp116 = simd_or(tmp114, tmp115);
        tmp117 = simd_or(tmp116, tmp46);
        tmp118 = simd_and(tmp23, tmp63);
        cc_range_fe17_fe3f_3 = simd_or(tmp117, tmp118);
        carryQ.cq[23] = carryout2carry(pablo_blk_Advance(sequence_ef_b8, carryQ.get_carry_in(23), sequence_ef_b8_adv));
        tmp119 = simd_and(sequence_ef_b8_adv, cc_range_fe17_fe3f_3);
        struct_Ps.cc = simd_or(struct_Ps.cc, tmp119);
        byte_b9 = simd_and(tmp23, tmp53);
        sequence_ef_b9 = simd_and(byte_ef_adv, byte_b9);
        tmp120 = simd_andc(basis_bits.bit_7, tmp20);
        tmp121 = simd_or(tmp120, tmp82);
        tmp122 = simd_and(tmp38, tmp121);
        tmp123 = simd_and(tmp33, tmp53);
        tmp124 = simd_or(tmp122, tmp123);
        tmp125 = simd_or(tmp124, byte_9b);
        cc_range_fe41_fe5d_3 = simd_or(tmp125, byte_9d);
        carryQ.cq[24] = carryout2carry(pablo_blk_Advance(sequence_ef_b9, carryQ.get_carry_in(24), sequence_ef_b9_adv));
        tmp126 = simd_and(sequence_ef_b9_adv, cc_range_fe41_fe5d_3);
        struct_Ps.cc = simd_or(struct_Ps.cc, tmp126);
        sequence_ef_bc = simd_and(byte_ef_adv, byte_bc);
        tmp127 = simd_and(tmp38, tmp6);
        cc_range_ff08_ff3b_3 = simd_or(tmp127, tmp115);
        carryQ.cq[25] = carryout2carry(pablo_blk_Advance(sequence_ef_bc, carryQ.get_carry_in(25), sequence_ef_bc_adv));
        tmp128 = simd_and(sequence_ef_bc_adv, cc_range_ff08_ff3b_3);
        struct_Ps.cc = simd_or(struct_Ps.cc, tmp128);
        byte_bd = simd_and(tmp23, tmp45);
        sequence_ef_bd = simd_and(byte_ef_adv, byte_bd);
        tmp129 = simd_and(tmp11, basis_bits.bit_4);
        tmp130 = simd_and(tmp33, tmp129);
        tmp131 = simd_and(tmp52, tmp36);
        cc_range_ff5b_ff62_3 = simd_or(tmp130, tmp131);
        carryQ.cq[26] = carryout2carry(pablo_blk_Advance(sequence_ef_bd, carryQ.get_carry_in(26), sequence_ef_bd_adv));
        tmp132 = simd_and(sequence_ef_bd_adv, cc_range_ff5b_ff62_3);
        struct_Ps.cc = simd_or(struct_Ps.cc, tmp132);
  }
  CarryArray<27, 0> carryQ;
  };

  struct Nl {
  Nl() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Nl & struct_Nl) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, byte_e1, tmp7, tmp8, tmp9, tmp10;
		BitBlock tmp11, tmp12, byte_9b, tmp13, sequence_e1_9b, byte_e1_adv, tmp14;
		BitBlock tmp15, tmp16, tmp17, tmp18, tmp19, tmp20, byte_range_ae_b0;
		BitBlock sequence_e1_9b_adv, tmp21, tmp22, tmp23, byte_e2, tmp24, tmp25, tmp26;
		BitBlock tmp27, byte_85, tmp28, sequence_e2_85, byte_e2_adv, byte_range_a0_bf;
		BitBlock sequence_e2_85_adv, tmp29, tmp30, byte_86, sequence_e2_86, tmp31;
		BitBlock tmp32, tmp33, tmp34, tmp35, tmp36, tmp37, cc_range_2180_2185_3;
		BitBlock sequence_e2_86_adv, tmp38, tmp39, byte_e3, byte_80, tmp40;
		BitBlock sequence_e3_80, byte_e3_adv, tmp41, tmp42, tmp43, tmp44, tmp45, tmp46;
		BitBlock tmp47, tmp48, tmp49, tmp50, tmp51, tmp52, cc_range_3007_3038_3;
		BitBlock sequence_e3_80_adv, tmp53, tmp54, byte_ea, tmp55, sequence_ea_9b;
		BitBlock byte_ea_adv, tmp56, tmp57, byte_range_a6_af, sequence_ea_9b_adv;
		BitBlock tmp58, tmp59, byte_f0, byte_90, tmp60, sequence_f0_90, byte_f0_adv;
		BitBlock tmp61, sequence_f0_90_85, sequence_f0_90_adv, tmp62, tmp63, tmp64;
		BitBlock byte_range_80_b4, sequence_f0_90_85_adv, tmp65, tmp66, byte_8d;
		BitBlock sequence_f0_90_8d, tmp67, cc_range_10341_1034a_4;
		BitBlock sequence_f0_90_8d_adv, tmp68, tmp69, byte_8f, sequence_f0_90_8f;
		BitBlock tmp70, tmp71, tmp72, byte_range_91_95, sequence_f0_90_8f_adv, tmp73;
		BitBlock byte_92, sequence_f0_92, tmp74, sequence_f0_92_90, sequence_f0_92_adv;
		BitBlock byte_range_80_bf, sequence_f0_92_90_adv, tmp75, tmp76, byte_91;
		BitBlock sequence_f0_92_91, tmp77, tmp78, tmp79, byte_range_80_a2;
		BitBlock sequence_f0_92_91_adv, tmp80;




        struct_Nl.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_and(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp6 = simd_andc(tmp5, tmp4);
        byte_e1 = simd_and(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp11 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp12 = simd_and(tmp10, tmp11);
        byte_9b = simd_and(tmp9, tmp12);
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(0), tmp13));
        sequence_e1_9b = simd_and(tmp13, byte_9b);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(1), byte_e1_adv));
        tmp14 = simd_and(tmp7, basis_bits.bit_2);
        tmp15 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp16 = simd_or(tmp4, tmp15);
        tmp17 = simd_not(tmp16);
        tmp18 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp19 = simd_and(tmp18, basis_bits.bit_6);
        tmp20 = simd_or(simd_and(basis_bits.bit_3, tmp17), simd_andc(tmp19, basis_bits.bit_3));
        byte_range_ae_b0 = simd_and(tmp14, tmp20);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(sequence_e1_9b, carryQ.get_carry_in(2), sequence_e1_9b_adv));
        tmp21 = simd_and(sequence_e1_9b_adv, byte_range_ae_b0);
        struct_Nl.cc = simd_or(struct_Nl.cc, tmp21);
        tmp22 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp23 = simd_andc(tmp22, tmp4);
        byte_e2 = simd_and(tmp3, tmp23);
        tmp24 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp25 = simd_andc(tmp7, tmp24);
        tmp26 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp27 = simd_and(tmp26, tmp5);
        byte_85 = simd_and(tmp25, tmp27);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(3), tmp28));
        sequence_e2_85 = simd_and(tmp28, byte_85);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(4), byte_e2_adv));
        byte_range_a0_bf = simd_and(tmp7, basis_bits.bit_2);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(sequence_e2_85, carryQ.get_carry_in(5), sequence_e2_85_adv));
        tmp29 = simd_and(sequence_e2_85_adv, byte_range_a0_bf);
        struct_Nl.cc = simd_or(struct_Nl.cc, tmp29);
        tmp30 = simd_and(tmp26, tmp22);
        byte_86 = simd_and(tmp25, tmp30);
        sequence_e2_86 = simd_and(byte_e2_adv, byte_86);
        tmp31 = simd_andc(tmp25, tmp4);
        tmp32 = simd_andc(tmp31, tmp11);
        tmp33 = simd_or(basis_bits.bit_5, tmp15);
        tmp34 = simd_not(tmp33);
        tmp35 = simd_and(basis_bits.bit_5, tmp15);
        tmp36 = simd_or(simd_and(basis_bits.bit_4, tmp34), simd_andc(tmp35, basis_bits.bit_4));
        tmp37 = simd_and(tmp25, tmp36);
        cc_range_2180_2185_3 = simd_or(tmp32, tmp37);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(sequence_e2_86, carryQ.get_carry_in(6), sequence_e2_86_adv));
        tmp38 = simd_and(sequence_e2_86_adv, cc_range_2180_2185_3);
        struct_Nl.cc = simd_or(struct_Nl.cc, tmp38);
        tmp39 = simd_andc(tmp11, tmp4);
        byte_e3 = simd_and(tmp3, tmp39);
        byte_80 = simd_andc(tmp25, tmp16);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(byte_e3, carryQ.get_carry_in(7), tmp40));
        sequence_e3_80 = simd_and(tmp40, byte_80);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(byte_e3, carryQ.get_carry_in(8), byte_e3_adv));
        tmp41 = simd_and(tmp26, tmp11);
        tmp42 = simd_and(tmp25, tmp41);
        tmp43 = simd_and(tmp7, tmp2);
        tmp44 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
        tmp45 = simd_not(tmp44);
        tmp46 = simd_or(simd_and(basis_bits.bit_4, tmp45), simd_andc(tmp33, basis_bits.bit_4));
        tmp47 = simd_and(tmp43, tmp46);
        tmp48 = simd_or(tmp42, tmp47);
        tmp49 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp50 = simd_and(tmp7, tmp49);
        tmp51 = simd_and(tmp50, tmp10);
        tmp52 = simd_andc(tmp51, tmp11);
        cc_range_3007_3038_3 = simd_or(tmp48, tmp52);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(sequence_e3_80, carryQ.get_carry_in(9), sequence_e3_80_adv));
        tmp53 = simd_and(sequence_e3_80_adv, cc_range_3007_3038_3);
        struct_Nl.cc = simd_or(struct_Nl.cc, tmp53);
        tmp54 = simd_and(tmp10, tmp22);
        byte_ea = simd_and(tmp3, tmp54);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(byte_ea, carryQ.get_carry_in(10), tmp55));
        sequence_ea_9b = simd_and(tmp55, byte_9b);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(byte_ea, carryQ.get_carry_in(11), byte_ea_adv));
        tmp56 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp57 = simd_or(basis_bits.bit_4, tmp56);
        byte_range_a6_af = simd_and(tmp43, tmp57);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(sequence_ea_9b, carryQ.get_carry_in(12), sequence_ea_9b_adv));
        tmp58 = simd_and(sequence_ea_9b_adv, byte_range_a6_af);
        struct_Nl.cc = simd_or(struct_Nl.cc, tmp58);
        tmp59 = simd_and(tmp1, tmp49);
        byte_f0 = simd_andc(tmp59, tmp16);
        byte_90 = simd_andc(tmp9, tmp16);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(byte_f0, carryQ.get_carry_in(13), tmp60));
        sequence_f0_90 = simd_and(tmp60, byte_90);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(byte_f0, carryQ.get_carry_in(14), byte_f0_adv));
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(sequence_f0_90, carryQ.get_carry_in(15), tmp61));
        sequence_f0_90_85 = simd_and(tmp61, byte_85);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(sequence_f0_90, carryQ.get_carry_in(16), sequence_f0_90_adv));
        tmp62 = simd_or(basis_bits.bit_4, tmp35);
        tmp63 = simd_and(basis_bits.bit_3, tmp62);
        tmp64 = simd_and(basis_bits.bit_2, tmp63);
        byte_range_80_b4 = simd_andc(tmp7, tmp64);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(sequence_f0_90_85, carryQ.get_carry_in(17), sequence_f0_90_85_adv));
        tmp65 = simd_and(sequence_f0_90_85_adv, byte_range_80_b4);
        struct_Nl.cc = simd_or(struct_Nl.cc, tmp65);
        tmp66 = simd_and(tmp18, tmp5);
        byte_8d = simd_and(tmp25, tmp66);
        sequence_f0_90_8d = simd_and(sequence_f0_90_adv, byte_8d);
        tmp67 = simd_or(tmp6, tmp54);
        cc_range_10341_1034a_4 = simd_and(tmp25, tmp67);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(sequence_f0_90_8d, carryQ.get_carry_in(18), sequence_f0_90_8d_adv));
        tmp68 = simd_and(sequence_f0_90_8d_adv, cc_range_10341_1034a_4);
        struct_Nl.cc = simd_or(struct_Nl.cc, tmp68);
        tmp69 = simd_and(tmp18, tmp11);
        byte_8f = simd_and(tmp25, tmp69);
        sequence_f0_90_8f = simd_and(sequence_f0_90_adv, byte_8f);
        tmp70 = simd_andc(tmp9, basis_bits.bit_4);
        tmp71 = simd_not(basis_bits.bit_6);
        tmp72 = simd_or(simd_and(basis_bits.bit_5, tmp71), simd_andc(tmp15, basis_bits.bit_5));
        byte_range_91_95 = simd_and(tmp70, tmp72);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(sequence_f0_90_8f, carryQ.get_carry_in(19), sequence_f0_90_8f_adv));
        tmp73 = simd_and(sequence_f0_90_8f_adv, byte_range_91_95);
        struct_Nl.cc = simd_or(struct_Nl.cc, tmp73);
        byte_92 = simd_and(tmp9, tmp23);
        sequence_f0_92 = simd_and(byte_f0_adv, byte_92);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(sequence_f0_92, carryQ.get_carry_in(20), tmp74));
        sequence_f0_92_90 = simd_and(tmp74, byte_90);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(sequence_f0_92, carryQ.get_carry_in(21), sequence_f0_92_adv));
        byte_range_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(sequence_f0_92_90, carryQ.get_carry_in(22), sequence_f0_92_90_adv));
        tmp75 = simd_and(sequence_f0_92_90_adv, byte_range_80_bf);
        struct_Nl.cc = simd_or(struct_Nl.cc, tmp75);
        tmp76 = simd_and(byte_range_80_bf, tmp8);
        byte_91 = simd_and(tmp76, tmp6);
        sequence_f0_92_91 = simd_and(sequence_f0_92_adv, byte_91);
        tmp77 = simd_or(tmp4, tmp11);
        tmp78 = simd_or(basis_bits.bit_3, tmp77);
        tmp79 = simd_and(basis_bits.bit_2, tmp78);
        byte_range_80_a2 = simd_andc(byte_range_80_bf, tmp79);
        carryQ.cq[23] = carryout2carry(pablo_blk_Advance(sequence_f0_92_91, carryQ.get_carry_in(23), sequence_f0_92_91_adv));
        tmp80 = simd_and(sequence_f0_92_91_adv, byte_range_80_a2);
        struct_Nl.cc = simd_or(struct_Nl.cc, tmp80);
        carryQ.CarryQ_Adjust(24);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Nl & struct_Nl, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, byte_e1, tmp7, tmp8, tmp9, tmp10;
		BitBlock tmp11, tmp12, byte_9b, tmp13, sequence_e1_9b, byte_e1_adv, tmp14;
		BitBlock tmp15, tmp16, tmp17, tmp18, tmp19, tmp20, byte_range_ae_b0;
		BitBlock sequence_e1_9b_adv, tmp21, tmp22, tmp23, byte_e2, tmp24, tmp25, tmp26;
		BitBlock tmp27, byte_85, tmp28, sequence_e2_85, byte_e2_adv, byte_range_a0_bf;
		BitBlock sequence_e2_85_adv, tmp29, tmp30, byte_86, sequence_e2_86, tmp31;
		BitBlock tmp32, tmp33, tmp34, tmp35, tmp36, tmp37, cc_range_2180_2185_3;
		BitBlock sequence_e2_86_adv, tmp38, tmp39, byte_e3, byte_80, tmp40;
		BitBlock sequence_e3_80, byte_e3_adv, tmp41, tmp42, tmp43, tmp44, tmp45, tmp46;
		BitBlock tmp47, tmp48, tmp49, tmp50, tmp51, tmp52, cc_range_3007_3038_3;
		BitBlock sequence_e3_80_adv, tmp53, tmp54, byte_ea, tmp55, sequence_ea_9b;
		BitBlock byte_ea_adv, tmp56, tmp57, byte_range_a6_af, sequence_ea_9b_adv;
		BitBlock tmp58, tmp59, byte_f0, byte_90, tmp60, sequence_f0_90, byte_f0_adv;
		BitBlock tmp61, sequence_f0_90_85, sequence_f0_90_adv, tmp62, tmp63, tmp64;
		BitBlock byte_range_80_b4, sequence_f0_90_85_adv, tmp65, tmp66, byte_8d;
		BitBlock sequence_f0_90_8d, tmp67, cc_range_10341_1034a_4;
		BitBlock sequence_f0_90_8d_adv, tmp68, tmp69, byte_8f, sequence_f0_90_8f;
		BitBlock tmp70, tmp71, tmp72, byte_range_91_95, sequence_f0_90_8f_adv, tmp73;
		BitBlock byte_92, sequence_f0_92, tmp74, sequence_f0_92_90, sequence_f0_92_adv;
		BitBlock byte_range_80_bf, sequence_f0_92_90_adv, tmp75, tmp76, byte_91;
		BitBlock sequence_f0_92_91, tmp77, tmp78, tmp79, byte_range_80_a2;
		BitBlock sequence_f0_92_91_adv, tmp80;




        struct_Nl.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_and(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp6 = simd_andc(tmp5, tmp4);
        byte_e1 = simd_and(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp11 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp12 = simd_and(tmp10, tmp11);
        byte_9b = simd_and(tmp9, tmp12);
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(0), tmp13));
        sequence_e1_9b = simd_and(tmp13, byte_9b);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(1), byte_e1_adv));
        tmp14 = simd_and(tmp7, basis_bits.bit_2);
        tmp15 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp16 = simd_or(tmp4, tmp15);
        tmp17 = simd_not(tmp16);
        tmp18 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp19 = simd_and(tmp18, basis_bits.bit_6);
        tmp20 = simd_or(simd_and(basis_bits.bit_3, tmp17), simd_andc(tmp19, basis_bits.bit_3));
        byte_range_ae_b0 = simd_and(tmp14, tmp20);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(sequence_e1_9b, carryQ.get_carry_in(2), sequence_e1_9b_adv));
        tmp21 = simd_and(sequence_e1_9b_adv, byte_range_ae_b0);
        struct_Nl.cc = simd_or(struct_Nl.cc, tmp21);
        tmp22 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp23 = simd_andc(tmp22, tmp4);
        byte_e2 = simd_and(tmp3, tmp23);
        tmp24 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp25 = simd_andc(tmp7, tmp24);
        tmp26 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp27 = simd_and(tmp26, tmp5);
        byte_85 = simd_and(tmp25, tmp27);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(3), tmp28));
        sequence_e2_85 = simd_and(tmp28, byte_85);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(4), byte_e2_adv));
        byte_range_a0_bf = simd_and(tmp7, basis_bits.bit_2);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(sequence_e2_85, carryQ.get_carry_in(5), sequence_e2_85_adv));
        tmp29 = simd_and(sequence_e2_85_adv, byte_range_a0_bf);
        struct_Nl.cc = simd_or(struct_Nl.cc, tmp29);
        tmp30 = simd_and(tmp26, tmp22);
        byte_86 = simd_and(tmp25, tmp30);
        sequence_e2_86 = simd_and(byte_e2_adv, byte_86);
        tmp31 = simd_andc(tmp25, tmp4);
        tmp32 = simd_andc(tmp31, tmp11);
        tmp33 = simd_or(basis_bits.bit_5, tmp15);
        tmp34 = simd_not(tmp33);
        tmp35 = simd_and(basis_bits.bit_5, tmp15);
        tmp36 = simd_or(simd_and(basis_bits.bit_4, tmp34), simd_andc(tmp35, basis_bits.bit_4));
        tmp37 = simd_and(tmp25, tmp36);
        cc_range_2180_2185_3 = simd_or(tmp32, tmp37);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(sequence_e2_86, carryQ.get_carry_in(6), sequence_e2_86_adv));
        tmp38 = simd_and(sequence_e2_86_adv, cc_range_2180_2185_3);
        struct_Nl.cc = simd_or(struct_Nl.cc, tmp38);
        tmp39 = simd_andc(tmp11, tmp4);
        byte_e3 = simd_and(tmp3, tmp39);
        byte_80 = simd_andc(tmp25, tmp16);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(byte_e3, carryQ.get_carry_in(7), tmp40));
        sequence_e3_80 = simd_and(tmp40, byte_80);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(byte_e3, carryQ.get_carry_in(8), byte_e3_adv));
        tmp41 = simd_and(tmp26, tmp11);
        tmp42 = simd_and(tmp25, tmp41);
        tmp43 = simd_and(tmp7, tmp2);
        tmp44 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
        tmp45 = simd_not(tmp44);
        tmp46 = simd_or(simd_and(basis_bits.bit_4, tmp45), simd_andc(tmp33, basis_bits.bit_4));
        tmp47 = simd_and(tmp43, tmp46);
        tmp48 = simd_or(tmp42, tmp47);
        tmp49 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp50 = simd_and(tmp7, tmp49);
        tmp51 = simd_and(tmp50, tmp10);
        tmp52 = simd_andc(tmp51, tmp11);
        cc_range_3007_3038_3 = simd_or(tmp48, tmp52);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(sequence_e3_80, carryQ.get_carry_in(9), sequence_e3_80_adv));
        tmp53 = simd_and(sequence_e3_80_adv, cc_range_3007_3038_3);
        struct_Nl.cc = simd_or(struct_Nl.cc, tmp53);
        tmp54 = simd_and(tmp10, tmp22);
        byte_ea = simd_and(tmp3, tmp54);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(byte_ea, carryQ.get_carry_in(10), tmp55));
        sequence_ea_9b = simd_and(tmp55, byte_9b);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(byte_ea, carryQ.get_carry_in(11), byte_ea_adv));
        tmp56 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp57 = simd_or(basis_bits.bit_4, tmp56);
        byte_range_a6_af = simd_and(tmp43, tmp57);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(sequence_ea_9b, carryQ.get_carry_in(12), sequence_ea_9b_adv));
        tmp58 = simd_and(sequence_ea_9b_adv, byte_range_a6_af);
        struct_Nl.cc = simd_or(struct_Nl.cc, tmp58);
        tmp59 = simd_and(tmp1, tmp49);
        byte_f0 = simd_andc(tmp59, tmp16);
        byte_90 = simd_andc(tmp9, tmp16);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(byte_f0, carryQ.get_carry_in(13), tmp60));
        sequence_f0_90 = simd_and(tmp60, byte_90);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(byte_f0, carryQ.get_carry_in(14), byte_f0_adv));
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(sequence_f0_90, carryQ.get_carry_in(15), tmp61));
        sequence_f0_90_85 = simd_and(tmp61, byte_85);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(sequence_f0_90, carryQ.get_carry_in(16), sequence_f0_90_adv));
        tmp62 = simd_or(basis_bits.bit_4, tmp35);
        tmp63 = simd_and(basis_bits.bit_3, tmp62);
        tmp64 = simd_and(basis_bits.bit_2, tmp63);
        byte_range_80_b4 = simd_andc(tmp7, tmp64);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(sequence_f0_90_85, carryQ.get_carry_in(17), sequence_f0_90_85_adv));
        tmp65 = simd_and(sequence_f0_90_85_adv, byte_range_80_b4);
        struct_Nl.cc = simd_or(struct_Nl.cc, tmp65);
        tmp66 = simd_and(tmp18, tmp5);
        byte_8d = simd_and(tmp25, tmp66);
        sequence_f0_90_8d = simd_and(sequence_f0_90_adv, byte_8d);
        tmp67 = simd_or(tmp6, tmp54);
        cc_range_10341_1034a_4 = simd_and(tmp25, tmp67);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(sequence_f0_90_8d, carryQ.get_carry_in(18), sequence_f0_90_8d_adv));
        tmp68 = simd_and(sequence_f0_90_8d_adv, cc_range_10341_1034a_4);
        struct_Nl.cc = simd_or(struct_Nl.cc, tmp68);
        tmp69 = simd_and(tmp18, tmp11);
        byte_8f = simd_and(tmp25, tmp69);
        sequence_f0_90_8f = simd_and(sequence_f0_90_adv, byte_8f);
        tmp70 = simd_andc(tmp9, basis_bits.bit_4);
        tmp71 = simd_not(basis_bits.bit_6);
        tmp72 = simd_or(simd_and(basis_bits.bit_5, tmp71), simd_andc(tmp15, basis_bits.bit_5));
        byte_range_91_95 = simd_and(tmp70, tmp72);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(sequence_f0_90_8f, carryQ.get_carry_in(19), sequence_f0_90_8f_adv));
        tmp73 = simd_and(sequence_f0_90_8f_adv, byte_range_91_95);
        struct_Nl.cc = simd_or(struct_Nl.cc, tmp73);
        byte_92 = simd_and(tmp9, tmp23);
        sequence_f0_92 = simd_and(byte_f0_adv, byte_92);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(sequence_f0_92, carryQ.get_carry_in(20), tmp74));
        sequence_f0_92_90 = simd_and(tmp74, byte_90);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(sequence_f0_92, carryQ.get_carry_in(21), sequence_f0_92_adv));
        byte_range_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(sequence_f0_92_90, carryQ.get_carry_in(22), sequence_f0_92_90_adv));
        tmp75 = simd_and(sequence_f0_92_90_adv, byte_range_80_bf);
        struct_Nl.cc = simd_or(struct_Nl.cc, tmp75);
        tmp76 = simd_and(byte_range_80_bf, tmp8);
        byte_91 = simd_and(tmp76, tmp6);
        sequence_f0_92_91 = simd_and(sequence_f0_92_adv, byte_91);
        tmp77 = simd_or(tmp4, tmp11);
        tmp78 = simd_or(basis_bits.bit_3, tmp77);
        tmp79 = simd_and(basis_bits.bit_2, tmp78);
        byte_range_80_a2 = simd_andc(byte_range_80_bf, tmp79);
        carryQ.cq[23] = carryout2carry(pablo_blk_Advance(sequence_f0_92_91, carryQ.get_carry_in(23), sequence_f0_92_91_adv));
        tmp80 = simd_and(sequence_f0_92_91_adv, byte_range_80_a2);
        struct_Nl.cc = simd_or(struct_Nl.cc, tmp80);
  }
  CarryArray<24, 0> carryQ;
  };

  struct No {
  No() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_No & struct_No) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, byte_c2, tmp7, tmp8, tmp9, tmp10;
		BitBlock tmp11, tmp12, tmp13, tmp14, tmp15, tmp16, tmp17, tmp18, tmp19;
		BitBlock cc_range_b2_bc_2, byte_c2_adv, tmp20, tmp21, tmp22, tmp23, tmp24;
		BitBlock byte_e0, tmp25, tmp26, tmp27, byte_a7, tmp28, sequence_e0_a7;
		BitBlock byte_e0_adv, tmp29, tmp30, tmp31, byte_range_b4_b9;
		BitBlock sequence_e0_a7_adv, tmp32, tmp33, byte_ad, sequence_e0_ad, tmp34;
		BitBlock byte_range_b2_b7, sequence_e0_ad_adv, tmp35, tmp36, byte_af;
		BitBlock sequence_e0_af, tmp37, byte_range_b0_b2, sequence_e0_af_adv, tmp38;
		BitBlock tmp39, byte_b1, sequence_e0_b1, tmp40, tmp41, byte_range_b8_be;
		BitBlock sequence_e0_b1_adv, tmp42, tmp43, byte_b5, sequence_e0_b5, tmp44;
		BitBlock byte_range_b0_b5, sequence_e0_b5_adv, tmp45, tmp46, byte_bc;
		BitBlock sequence_e0_bc, tmp47, tmp48, tmp49, tmp50, byte_range_aa_b3;
		BitBlock sequence_e0_bc_adv, tmp51, byte_e1, tmp52, byte_8d, tmp53;
		BitBlock sequence_e1_8d, byte_e1_adv, tmp54, tmp55, tmp56, tmp57, tmp58;
		BitBlock byte_range_a9_bc, sequence_e1_8d_adv, tmp59, tmp60, tmp61, byte_9f;
		BitBlock sequence_e1_9f, byte_range_b0_b9, sequence_e1_9f_adv, tmp62;
		BitBlock sequence_e1_a7, tmp63, byte_9a, sequence_e1_a7_adv, tmp64, byte_e2;
		BitBlock byte_81, tmp65, sequence_e2_81, byte_e2_adv, tmp66;
		BitBlock cc_range_2070_2074_3, sequence_e2_81_adv, tmp67, byte_82;
		BitBlock sequence_e2_82, byte_range_80_89, sequence_e2_82_adv, tmp68, byte_85;
		BitBlock sequence_e2_85, byte_range_90_9f, sequence_e2_85_adv, tmp69, tmp70;
		BitBlock byte_86, sequence_e2_86, byte_89, sequence_e2_86_adv, tmp71, byte_91;
		BitBlock sequence_e2_91, byte_range_a0_bf, sequence_e2_91_adv, tmp72, byte_92;
		BitBlock sequence_e2_92, tmp73, tmp74, byte_range_80_9b, sequence_e2_92_adv;
		BitBlock tmp75, tmp76, byte_93, sequence_e2_93, tmp77, byte_range_aa_bf;
		BitBlock sequence_e2_93_adv, tmp78, byte_9d, sequence_e2_9d, tmp79;
		BitBlock byte_range_b6_bf, sequence_e2_9d_adv, tmp80, tmp81, byte_9e;
		BitBlock sequence_e2_9e, tmp82, byte_range_80_93, sequence_e2_9e_adv, tmp83;
		BitBlock byte_b3, sequence_e2_b3, byte_bd, sequence_e2_b3_adv, tmp84, byte_e3;
		BitBlock tmp85, sequence_e3_86, byte_e3_adv, tmp86, tmp87, tmp88;
		BitBlock byte_range_92_95, sequence_e3_86_adv, tmp89, tmp90, byte_88;
		BitBlock sequence_e3_88, byte_range_a0_a9, sequence_e3_88_adv, tmp91;
		BitBlock sequence_e3_89, tmp92, tmp93, tmp94, cc_range_3248_3251_3;
		BitBlock sequence_e3_89_adv, tmp95, byte_8a, sequence_e3_8a, tmp96;
		BitBlock cc_range_3280_32b1_3, sequence_e3_8a_adv, tmp97, byte_ea, byte_a0;
		BitBlock tmp98, sequence_ea_a0, byte_ea_adv, sequence_ea_a0_adv, tmp99, tmp100;
		BitBlock byte_f0, byte_90, tmp101, sequence_f0_90, byte_f0_adv, tmp102;
		BitBlock byte_84, tmp103, sequence_f0_90_84, sequence_f0_90_adv, tmp104;
		BitBlock tmp105, tmp106, tmp107, byte_range_87_b3, sequence_f0_90_84_adv;
		BitBlock tmp108, sequence_f0_90_85, tmp109, tmp110, tmp111, byte_range_b5_b8;
		BitBlock sequence_f0_90_85_adv, tmp112, sequence_f0_90_86;
		BitBlock sequence_f0_90_86_adv, tmp113, byte_8c, sequence_f0_90_8c;
		BitBlock byte_range_a0_a3, sequence_f0_90_8c_adv, tmp114, byte_a1;
		BitBlock sequence_f0_90_a1, byte_range_98_9f, sequence_f0_90_a1_adv, tmp115;
		BitBlock byte_a4, sequence_f0_90_a4, tmp116, tmp117, byte_range_96_9b;
		BitBlock sequence_f0_90_a4_adv, tmp118, byte_a9, sequence_f0_90_a9, tmp119;
		BitBlock tmp120, tmp121, tmp122, cc_range_10a40_10a7d_4, sequence_f0_90_a9_adv;
		BitBlock tmp123, sequence_f0_90_ad, tmp124, cc_range_10b58_10b78_4;
		BitBlock sequence_f0_90_ad_adv, tmp125, byte_b9, sequence_f0_90_b9, tmp126;
		BitBlock byte_range_a0_be, sequence_f0_90_b9_adv, tmp127, sequence_f0_91;
		BitBlock tmp128, sequence_f0_91_81, sequence_f0_91_adv, tmp129, tmp130, tmp131;
		BitBlock tmp132, tmp133, byte_range_92_a5, sequence_f0_91_81_adv, tmp134;
		BitBlock sequence_f0_9d, tmp135, sequence_f0_9d_8d, sequence_f0_9d_adv;
		BitBlock byte_range_a0_b1, sequence_f0_9d_8d_adv, tmp136, sequence_f0_9f;
		BitBlock tmp137, sequence_f0_9f_84, sequence_f0_9f_adv, tmp138, tmp139;
		BitBlock byte_range_80_8a, sequence_f0_9f_84_adv, tmp140;




        struct_No.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_andc(tmp5, tmp4);
        byte_c2 = simd_and(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_andc(basis_bits.bit_6, tmp4);
        tmp11 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp12 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp13 = simd_and(tmp11, tmp12);
        tmp14 = simd_or(tmp10, tmp13);
        tmp15 = simd_and(tmp9, tmp14);
        tmp16 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp17 = simd_and(tmp9, tmp16);
        tmp18 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp19 = simd_andc(tmp17, tmp18);
        cc_range_b2_bc_2 = simd_or(tmp15, tmp19);
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(byte_c2, carryQ.get_carry_in(0), byte_c2_adv));
        tmp20 = simd_and(byte_c2_adv, cc_range_b2_bc_2);
        struct_No.cc = simd_or(struct_No.cc, tmp20);
        tmp21 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp22 = simd_and(tmp1, tmp21);
        tmp23 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp24 = simd_or(tmp4, tmp23);
        byte_e0 = simd_andc(tmp22, tmp24);
        tmp25 = simd_and(tmp7, tmp21);
        tmp26 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp27 = simd_and(tmp26, tmp18);
        byte_a7 = simd_and(tmp25, tmp27);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(byte_e0, carryQ.get_carry_in(1), tmp28));
        sequence_e0_a7 = simd_and(tmp28, byte_a7);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(byte_e0, carryQ.get_carry_in(2), byte_e0_adv));
        tmp29 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
        tmp30 = simd_not(tmp29);
        tmp31 = simd_or(simd_and(basis_bits.bit_4, tmp30), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
        byte_range_b4_b9 = simd_and(tmp9, tmp31);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(sequence_e0_a7, carryQ.get_carry_in(3), sequence_e0_a7_adv));
        tmp32 = simd_and(sequence_e0_a7_adv, byte_range_b4_b9);
        struct_No.cc = simd_or(struct_No.cc, tmp32);
        tmp33 = simd_and(tmp16, tmp12);
        byte_ad = simd_and(tmp25, tmp33);
        sequence_e0_ad = simd_and(byte_e0_adv, byte_ad);
        tmp34 = simd_andc(tmp9, basis_bits.bit_4);
        byte_range_b2_b7 = simd_and(tmp34, tmp29);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(sequence_e0_ad, carryQ.get_carry_in(4), sequence_e0_ad_adv));
        tmp35 = simd_and(sequence_e0_ad_adv, byte_range_b2_b7);
        struct_No.cc = simd_or(struct_No.cc, tmp35);
        tmp36 = simd_and(tmp16, tmp18);
        byte_af = simd_and(tmp25, tmp36);
        sequence_e0_af = simd_and(byte_e0_adv, byte_af);
        tmp37 = simd_andc(tmp9, tmp4);
        byte_range_b0_b2 = simd_andc(tmp37, tmp18);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(sequence_e0_af, carryQ.get_carry_in(5), sequence_e0_af_adv));
        tmp38 = simd_and(sequence_e0_af_adv, byte_range_b0_b2);
        struct_No.cc = simd_or(struct_No.cc, tmp38);
        tmp39 = simd_andc(tmp12, tmp4);
        byte_b1 = simd_and(tmp9, tmp39);
        sequence_e0_b1 = simd_and(byte_e0_adv, byte_b1);
        tmp40 = simd_and(tmp9, basis_bits.bit_4);
        tmp41 = simd_and(basis_bits.bit_5, tmp18);
        byte_range_b8_be = simd_andc(tmp40, tmp41);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(sequence_e0_b1, carryQ.get_carry_in(6), sequence_e0_b1_adv));
        tmp42 = simd_and(sequence_e0_b1_adv, byte_range_b8_be);
        struct_No.cc = simd_or(struct_No.cc, tmp42);
        tmp43 = simd_and(tmp26, tmp12);
        byte_b5 = simd_and(tmp9, tmp43);
        sequence_e0_b5 = simd_and(byte_e0_adv, byte_b5);
        tmp44 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        byte_range_b0_b5 = simd_andc(tmp34, tmp44);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(sequence_e0_b5, carryQ.get_carry_in(7), sequence_e0_b5_adv));
        tmp45 = simd_and(sequence_e0_b5_adv, byte_range_b0_b5);
        struct_No.cc = simd_or(struct_No.cc, tmp45);
        tmp46 = simd_andc(tmp16, tmp23);
        byte_bc = simd_and(tmp9, tmp46);
        sequence_e0_bc = simd_and(byte_e0_adv, byte_bc);
        tmp47 = simd_and(tmp7, basis_bits.bit_2);
        tmp48 = simd_not(tmp4);
        tmp49 = simd_and(basis_bits.bit_4, tmp29);
        tmp50 = simd_or(simd_and(basis_bits.bit_3, tmp48), simd_andc(tmp49, basis_bits.bit_3));
        byte_range_aa_b3 = simd_and(tmp47, tmp50);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(sequence_e0_bc, carryQ.get_carry_in(8), sequence_e0_bc_adv));
        tmp51 = simd_and(sequence_e0_bc_adv, byte_range_aa_b3);
        struct_No.cc = simd_or(struct_No.cc, tmp51);
        byte_e1 = simd_and(tmp22, tmp39);
        tmp52 = simd_andc(tmp7, tmp2);
        byte_8d = simd_and(tmp52, tmp33);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(9), tmp53));
        sequence_e1_8d = simd_and(tmp53, byte_8d);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(10), byte_e1_adv));
        tmp54 = simd_and(tmp16, tmp23);
        tmp55 = simd_not(tmp54);
        tmp56 = simd_or(basis_bits.bit_5, tmp23);
        tmp57 = simd_and(basis_bits.bit_4, tmp56);
        tmp58 = simd_or(simd_and(basis_bits.bit_3, tmp55), simd_andc(tmp57, basis_bits.bit_3));
        byte_range_a9_bc = simd_and(tmp47, tmp58);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(sequence_e1_8d, carryQ.get_carry_in(11), sequence_e1_8d_adv));
        tmp59 = simd_and(sequence_e1_8d_adv, byte_range_a9_bc);
        struct_No.cc = simd_or(struct_No.cc, tmp59);
        tmp60 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp61 = simd_and(tmp7, tmp60);
        byte_9f = simd_and(tmp61, tmp36);
        sequence_e1_9f = simd_and(byte_e1_adv, byte_9f);
        byte_range_b0_b9 = simd_andc(tmp9, tmp49);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(sequence_e1_9f, carryQ.get_carry_in(12), sequence_e1_9f_adv));
        tmp62 = simd_and(sequence_e1_9f_adv, byte_range_b0_b9);
        struct_No.cc = simd_or(struct_No.cc, tmp62);
        sequence_e1_a7 = simd_and(byte_e1_adv, byte_a7);
        tmp63 = simd_and(tmp11, tmp5);
        byte_9a = simd_and(tmp61, tmp63);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(sequence_e1_a7, carryQ.get_carry_in(13), sequence_e1_a7_adv));
        tmp64 = simd_and(sequence_e1_a7_adv, byte_9a);
        struct_No.cc = simd_or(struct_No.cc, tmp64);
        byte_e2 = simd_and(tmp22, tmp6);
        byte_81 = simd_and(tmp52, tmp39);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(14), tmp65));
        sequence_e2_81 = simd_and(tmp65, byte_81);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(15), byte_e2_adv));
        tmp66 = simd_andc(tmp24, tmp31);
        cc_range_2070_2074_3 = simd_andc(tmp9, tmp66);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(sequence_e2_81, carryQ.get_carry_in(16), sequence_e2_81_adv));
        tmp67 = simd_and(sequence_e2_81_adv, cc_range_2070_2074_3);
        struct_No.cc = simd_or(struct_No.cc, tmp67);
        byte_82 = simd_and(tmp52, tmp6);
        sequence_e2_82 = simd_and(byte_e2_adv, byte_82);
        byte_range_80_89 = simd_andc(tmp52, tmp49);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(sequence_e2_82, carryQ.get_carry_in(17), sequence_e2_82_adv));
        tmp68 = simd_and(sequence_e2_82_adv, byte_range_80_89);
        struct_No.cc = simd_or(struct_No.cc, tmp68);
        byte_85 = simd_and(tmp52, tmp43);
        sequence_e2_85 = simd_and(byte_e2_adv, byte_85);
        byte_range_90_9f = simd_and(tmp7, tmp60);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(sequence_e2_85, carryQ.get_carry_in(18), sequence_e2_85_adv));
        tmp69 = simd_and(sequence_e2_85_adv, byte_range_90_9f);
        struct_No.cc = simd_or(struct_No.cc, tmp69);
        tmp70 = simd_and(tmp26, tmp5);
        byte_86 = simd_and(tmp52, tmp70);
        sequence_e2_86 = simd_and(byte_e2_adv, byte_86);
        byte_89 = simd_and(tmp52, tmp13);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(sequence_e2_86, carryQ.get_carry_in(19), sequence_e2_86_adv));
        tmp71 = simd_and(sequence_e2_86_adv, byte_89);
        struct_No.cc = simd_or(struct_No.cc, tmp71);
        byte_91 = simd_and(byte_range_90_9f, tmp39);
        sequence_e2_91 = simd_and(byte_e2_adv, byte_91);
        byte_range_a0_bf = simd_and(tmp7, basis_bits.bit_2);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(sequence_e2_91, carryQ.get_carry_in(20), sequence_e2_91_adv));
        tmp72 = simd_and(sequence_e2_91_adv, byte_range_a0_bf);
        struct_No.cc = simd_or(struct_No.cc, tmp72);
        byte_92 = simd_and(byte_range_90_9f, tmp6);
        sequence_e2_92 = simd_and(byte_e2_adv, byte_92);
        tmp73 = simd_andc(tmp7, basis_bits.bit_2);
        tmp74 = simd_and(basis_bits.bit_3, tmp16);
        byte_range_80_9b = simd_andc(tmp73, tmp74);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(sequence_e2_92, carryQ.get_carry_in(21), sequence_e2_92_adv));
        tmp75 = simd_and(sequence_e2_92_adv, byte_range_80_9b);
        struct_No.cc = simd_or(struct_No.cc, tmp75);
        tmp76 = simd_andc(tmp18, tmp4);
        byte_93 = simd_and(byte_range_90_9f, tmp76);
        sequence_e2_93 = simd_and(byte_e2_adv, byte_93);
        tmp77 = simd_or(basis_bits.bit_3, tmp49);
        byte_range_aa_bf = simd_and(byte_range_a0_bf, tmp77);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(sequence_e2_93, carryQ.get_carry_in(22), sequence_e2_93_adv));
        tmp78 = simd_and(sequence_e2_93_adv, byte_range_aa_bf);
        struct_No.cc = simd_or(struct_No.cc, tmp78);
        byte_9d = simd_and(byte_range_90_9f, tmp33);
        sequence_e2_9d = simd_and(byte_e2_adv, byte_9d);
        tmp79 = simd_or(basis_bits.bit_4, tmp44);
        byte_range_b6_bf = simd_and(tmp9, tmp79);
        carryQ.cq[23] = carryout2carry(pablo_blk_Advance(sequence_e2_9d, carryQ.get_carry_in(23), sequence_e2_9d_adv));
        tmp80 = simd_and(sequence_e2_9d_adv, byte_range_b6_bf);
        struct_No.cc = simd_or(struct_No.cc, tmp80);
        tmp81 = simd_and(tmp16, tmp5);
        byte_9e = simd_and(byte_range_90_9f, tmp81);
        sequence_e2_9e = simd_and(byte_e2_adv, byte_9e);
        tmp82 = simd_and(basis_bits.bit_3, tmp4);
        byte_range_80_93 = simd_andc(tmp73, tmp82);
        carryQ.cq[24] = carryout2carry(pablo_blk_Advance(sequence_e2_9e, carryQ.get_carry_in(24), sequence_e2_9e_adv));
        tmp83 = simd_and(sequence_e2_9e_adv, byte_range_80_93);
        struct_No.cc = simd_or(struct_No.cc, tmp83);
        byte_b3 = simd_and(tmp9, tmp76);
        sequence_e2_b3 = simd_and(byte_e2_adv, byte_b3);
        byte_bd = simd_and(tmp9, tmp33);
        carryQ.cq[25] = carryout2carry(pablo_blk_Advance(sequence_e2_b3, carryQ.get_carry_in(25), sequence_e2_b3_adv));
        tmp84 = simd_and(sequence_e2_b3_adv, byte_bd);
        struct_No.cc = simd_or(struct_No.cc, tmp84);
        byte_e3 = simd_and(tmp22, tmp76);
        carryQ.cq[26] = carryout2carry(pablo_blk_Advance(byte_e3, carryQ.get_carry_in(26), tmp85));
        sequence_e3_86 = simd_and(tmp85, byte_86);
        carryQ.cq[27] = carryout2carry(pablo_blk_Advance(byte_e3, carryQ.get_carry_in(27), byte_e3_adv));
        tmp86 = simd_andc(byte_range_90_9f, basis_bits.bit_4);
        tmp87 = simd_not(basis_bits.bit_6);
        tmp88 = simd_or(simd_and(basis_bits.bit_5, tmp87), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        byte_range_92_95 = simd_and(tmp86, tmp88);
        carryQ.cq[28] = carryout2carry(pablo_blk_Advance(sequence_e3_86, carryQ.get_carry_in(28), sequence_e3_86_adv));
        tmp89 = simd_and(sequence_e3_86_adv, byte_range_92_95);
        struct_No.cc = simd_or(struct_No.cc, tmp89);
        tmp90 = simd_andc(tmp11, tmp23);
        byte_88 = simd_and(tmp52, tmp90);
        sequence_e3_88 = simd_and(byte_e3_adv, byte_88);
        byte_range_a0_a9 = simd_andc(tmp25, tmp49);
        carryQ.cq[29] = carryout2carry(pablo_blk_Advance(sequence_e3_88, carryQ.get_carry_in(29), sequence_e3_88_adv));
        tmp91 = simd_and(sequence_e3_88_adv, byte_range_a0_a9);
        struct_No.cc = simd_or(struct_No.cc, tmp91);
        sequence_e3_89 = simd_and(byte_e3_adv, byte_89);
        tmp92 = simd_and(tmp52, basis_bits.bit_4);
        tmp93 = simd_or(basis_bits.bit_4, tmp56);
        tmp94 = simd_and(byte_range_90_9f, tmp93);
        cc_range_3248_3251_3 = simd_or(tmp92, tmp94);
        carryQ.cq[30] = carryout2carry(pablo_blk_Advance(sequence_e3_89, carryQ.get_carry_in(30), sequence_e3_89_adv));
        tmp95 = simd_and(sequence_e3_89_adv, cc_range_3248_3251_3);
        struct_No.cc = simd_or(struct_No.cc, tmp95);
        byte_8a = simd_and(tmp52, tmp63);
        sequence_e3_8a = simd_and(byte_e3_adv, byte_8a);
        tmp96 = simd_and(tmp9, tmp93);
        cc_range_3280_32b1_3 = simd_or(byte_range_80_89, tmp96);
        carryQ.cq[31] = carryout2carry(pablo_blk_Advance(sequence_e3_8a, carryQ.get_carry_in(31), sequence_e3_8a_adv));
        tmp97 = simd_and(sequence_e3_8a_adv, cc_range_3280_32b1_3);
        struct_No.cc = simd_or(struct_No.cc, tmp97);
        byte_ea = simd_and(tmp22, tmp63);
        byte_a0 = simd_andc(tmp25, tmp24);
        carryQ.cq[32] = carryout2carry(pablo_blk_Advance(byte_ea, carryQ.get_carry_in(32), tmp98));
        sequence_ea_a0 = simd_and(tmp98, byte_a0);
        carryQ.cq[33] = carryout2carry(pablo_blk_Advance(byte_ea, carryQ.get_carry_in(33), byte_ea_adv));
        carryQ.cq[34] = carryout2carry(pablo_blk_Advance(sequence_ea_a0, carryQ.get_carry_in(34), sequence_ea_a0_adv));
        tmp99 = simd_and(sequence_ea_a0_adv, byte_range_b0_b5);
        struct_No.cc = simd_or(struct_No.cc, tmp99);
        tmp100 = simd_and(tmp1, tmp8);
        byte_f0 = simd_andc(tmp100, tmp24);
        byte_90 = simd_andc(byte_range_90_9f, tmp24);
        carryQ.cq[35] = carryout2carry(pablo_blk_Advance(byte_f0, carryQ.get_carry_in(35), tmp101));
        sequence_f0_90 = simd_and(tmp101, byte_90);
        carryQ.cq[36] = carryout2carry(pablo_blk_Advance(byte_f0, carryQ.get_carry_in(36), byte_f0_adv));
        tmp102 = simd_andc(tmp26, tmp23);
        byte_84 = simd_and(tmp52, tmp102);
        carryQ.cq[37] = carryout2carry(pablo_blk_Advance(sequence_f0_90, carryQ.get_carry_in(37), tmp103));
        sequence_f0_90_84 = simd_and(tmp103, byte_84);
        carryQ.cq[38] = carryout2carry(pablo_blk_Advance(sequence_f0_90, carryQ.get_carry_in(38), sequence_f0_90_adv));
        tmp104 = simd_not(tmp82);
        tmp105 = simd_or(basis_bits.bit_4, tmp41);
        tmp106 = simd_or(basis_bits.bit_3, tmp105);
        tmp107 = simd_or(simd_and(basis_bits.bit_2, tmp104), simd_andc(tmp106, basis_bits.bit_2));
        byte_range_87_b3 = simd_and(tmp7, tmp107);
        carryQ.cq[39] = carryout2carry(pablo_blk_Advance(sequence_f0_90_84, carryQ.get_carry_in(39), sequence_f0_90_84_adv));
        tmp108 = simd_and(sequence_f0_90_84_adv, byte_range_87_b3);
        struct_No.cc = simd_or(struct_No.cc, tmp108);
        sequence_f0_90_85 = simd_and(sequence_f0_90_adv, byte_85);
        tmp109 = simd_not(tmp56);
        tmp110 = simd_and(basis_bits.bit_5, tmp23);
        tmp111 = simd_or(simd_and(basis_bits.bit_4, tmp109), simd_andc(tmp110, basis_bits.bit_4));
        byte_range_b5_b8 = simd_and(tmp9, tmp111);
        carryQ.cq[40] = carryout2carry(pablo_blk_Advance(sequence_f0_90_85, carryQ.get_carry_in(40), sequence_f0_90_85_adv));
        tmp112 = simd_and(sequence_f0_90_85_adv, byte_range_b5_b8);
        struct_No.cc = simd_or(struct_No.cc, tmp112);
        sequence_f0_90_86 = simd_and(sequence_f0_90_adv, byte_86);
        carryQ.cq[41] = carryout2carry(pablo_blk_Advance(sequence_f0_90_86, carryQ.get_carry_in(41), sequence_f0_90_86_adv));
        tmp113 = simd_and(sequence_f0_90_86_adv, byte_8a);
        struct_No.cc = simd_or(struct_No.cc, tmp113);
        byte_8c = simd_and(tmp52, tmp46);
        sequence_f0_90_8c = simd_and(sequence_f0_90_adv, byte_8c);
        byte_range_a0_a3 = simd_andc(tmp25, tmp4);
        carryQ.cq[42] = carryout2carry(pablo_blk_Advance(sequence_f0_90_8c, carryQ.get_carry_in(42), sequence_f0_90_8c_adv));
        tmp114 = simd_and(sequence_f0_90_8c_adv, byte_range_a0_a3);
        struct_No.cc = simd_or(struct_No.cc, tmp114);
        byte_a1 = simd_and(tmp25, tmp39);
        sequence_f0_90_a1 = simd_and(sequence_f0_90_adv, byte_a1);
        byte_range_98_9f = simd_and(byte_range_90_9f, basis_bits.bit_4);
        carryQ.cq[43] = carryout2carry(pablo_blk_Advance(sequence_f0_90_a1, carryQ.get_carry_in(43), sequence_f0_90_a1_adv));
        tmp115 = simd_and(sequence_f0_90_a1_adv, byte_range_98_9f);
        struct_No.cc = simd_or(struct_No.cc, tmp115);
        byte_a4 = simd_and(tmp25, tmp102);
        sequence_f0_90_a4 = simd_and(sequence_f0_90_adv, byte_a4);
        tmp116 = simd_not(basis_bits.bit_5);
        tmp117 = simd_or(simd_and(basis_bits.bit_4, tmp116), simd_andc(tmp44, basis_bits.bit_4));
        byte_range_96_9b = simd_and(byte_range_90_9f, tmp117);
        carryQ.cq[44] = carryout2carry(pablo_blk_Advance(sequence_f0_90_a4, carryQ.get_carry_in(44), sequence_f0_90_a4_adv));
        tmp118 = simd_and(sequence_f0_90_a4_adv, byte_range_96_9b);
        struct_No.cc = simd_or(struct_No.cc, tmp118);
        byte_a9 = simd_and(tmp25, tmp13);
        sequence_f0_90_a9 = simd_and(sequence_f0_90_adv, byte_a9);
        tmp119 = simd_andc(tmp52, basis_bits.bit_4);
        tmp120 = simd_not(basis_bits.bit_7);
        tmp121 = simd_or(simd_and(basis_bits.bit_6, tmp120), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
        tmp122 = simd_and(tmp17, tmp121);
        cc_range_10a40_10a7d_4 = simd_or(tmp119, tmp122);
        carryQ.cq[45] = carryout2carry(pablo_blk_Advance(sequence_f0_90_a9, carryQ.get_carry_in(45), sequence_f0_90_a9_adv));
        tmp123 = simd_and(sequence_f0_90_a9_adv, cc_range_10a40_10a7d_4);
        struct_No.cc = simd_or(struct_No.cc, tmp123);
        sequence_f0_90_ad = simd_and(sequence_f0_90_adv, byte_ad);
        tmp124 = simd_and(tmp7, basis_bits.bit_3);
        cc_range_10b58_10b78_4 = simd_and(basis_bits.bit_4, tmp124);
        carryQ.cq[46] = carryout2carry(pablo_blk_Advance(sequence_f0_90_ad, carryQ.get_carry_in(46), sequence_f0_90_ad_adv));
        tmp125 = simd_and(sequence_f0_90_ad_adv, cc_range_10b58_10b78_4);
        struct_No.cc = simd_or(struct_No.cc, tmp125);
        byte_b9 = simd_and(tmp9, tmp13);
        sequence_f0_90_b9 = simd_and(sequence_f0_90_adv, byte_b9);
        tmp126 = simd_and(basis_bits.bit_3, tmp36);
        byte_range_a0_be = simd_andc(byte_range_a0_bf, tmp126);
        carryQ.cq[47] = carryout2carry(pablo_blk_Advance(sequence_f0_90_b9, carryQ.get_carry_in(47), sequence_f0_90_b9_adv));
        tmp127 = simd_and(sequence_f0_90_b9_adv, byte_range_a0_be);
        struct_No.cc = simd_or(struct_No.cc, tmp127);
        sequence_f0_91 = simd_and(byte_f0_adv, byte_91);
        carryQ.cq[48] = carryout2carry(pablo_blk_Advance(sequence_f0_91, carryQ.get_carry_in(48), tmp128));
        sequence_f0_91_81 = simd_and(tmp128, byte_81);
        carryQ.cq[49] = carryout2carry(pablo_blk_Advance(sequence_f0_91, carryQ.get_carry_in(49), sequence_f0_91_adv));
        tmp129 = simd_or(basis_bits.bit_3, tmp79);
        tmp130 = simd_not(tmp129);
        tmp131 = simd_or(tmp4, basis_bits.bit_6);
        tmp132 = simd_and(basis_bits.bit_3, tmp131);
        tmp133 = simd_or(simd_and(basis_bits.bit_2, tmp130), simd_andc(tmp132, basis_bits.bit_2));
        byte_range_92_a5 = simd_and(tmp7, tmp133);
        carryQ.cq[50] = carryout2carry(pablo_blk_Advance(sequence_f0_91_81, carryQ.get_carry_in(50), sequence_f0_91_81_adv));
        tmp134 = simd_and(sequence_f0_91_81_adv, byte_range_92_a5);
        struct_No.cc = simd_or(struct_No.cc, tmp134);
        sequence_f0_9d = simd_and(byte_f0_adv, byte_9d);
        carryQ.cq[51] = carryout2carry(pablo_blk_Advance(sequence_f0_9d, carryQ.get_carry_in(51), tmp135));
        sequence_f0_9d_8d = simd_and(tmp135, byte_8d);
        carryQ.cq[52] = carryout2carry(pablo_blk_Advance(sequence_f0_9d, carryQ.get_carry_in(52), sequence_f0_9d_adv));
        byte_range_a0_b1 = simd_andc(byte_range_a0_bf, tmp132);
        carryQ.cq[53] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_8d, carryQ.get_carry_in(53), sequence_f0_9d_8d_adv));
        tmp136 = simd_and(sequence_f0_9d_8d_adv, byte_range_a0_b1);
        struct_No.cc = simd_or(struct_No.cc, tmp136);
        sequence_f0_9f = simd_and(byte_f0_adv, byte_9f);
        carryQ.cq[54] = carryout2carry(pablo_blk_Advance(sequence_f0_9f, carryQ.get_carry_in(54), tmp137));
        sequence_f0_9f_84 = simd_and(tmp137, byte_84);
        carryQ.cq[55] = carryout2carry(pablo_blk_Advance(sequence_f0_9f, carryQ.get_carry_in(55), sequence_f0_9f_adv));
        tmp138 = simd_or(basis_bits.bit_5, tmp18);
        tmp139 = simd_and(basis_bits.bit_4, tmp138);
        byte_range_80_8a = simd_andc(tmp52, tmp139);
        carryQ.cq[56] = carryout2carry(pablo_blk_Advance(sequence_f0_9f_84, carryQ.get_carry_in(56), sequence_f0_9f_84_adv));
        tmp140 = simd_and(sequence_f0_9f_84_adv, byte_range_80_8a);
        struct_No.cc = simd_or(struct_No.cc, tmp140);
        carryQ.CarryQ_Adjust(57);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_No & struct_No, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, byte_c2, tmp7, tmp8, tmp9, tmp10;
		BitBlock tmp11, tmp12, tmp13, tmp14, tmp15, tmp16, tmp17, tmp18, tmp19;
		BitBlock cc_range_b2_bc_2, byte_c2_adv, tmp20, tmp21, tmp22, tmp23, tmp24;
		BitBlock byte_e0, tmp25, tmp26, tmp27, byte_a7, tmp28, sequence_e0_a7;
		BitBlock byte_e0_adv, tmp29, tmp30, tmp31, byte_range_b4_b9;
		BitBlock sequence_e0_a7_adv, tmp32, tmp33, byte_ad, sequence_e0_ad, tmp34;
		BitBlock byte_range_b2_b7, sequence_e0_ad_adv, tmp35, tmp36, byte_af;
		BitBlock sequence_e0_af, tmp37, byte_range_b0_b2, sequence_e0_af_adv, tmp38;
		BitBlock tmp39, byte_b1, sequence_e0_b1, tmp40, tmp41, byte_range_b8_be;
		BitBlock sequence_e0_b1_adv, tmp42, tmp43, byte_b5, sequence_e0_b5, tmp44;
		BitBlock byte_range_b0_b5, sequence_e0_b5_adv, tmp45, tmp46, byte_bc;
		BitBlock sequence_e0_bc, tmp47, tmp48, tmp49, tmp50, byte_range_aa_b3;
		BitBlock sequence_e0_bc_adv, tmp51, byte_e1, tmp52, byte_8d, tmp53;
		BitBlock sequence_e1_8d, byte_e1_adv, tmp54, tmp55, tmp56, tmp57, tmp58;
		BitBlock byte_range_a9_bc, sequence_e1_8d_adv, tmp59, tmp60, tmp61, byte_9f;
		BitBlock sequence_e1_9f, byte_range_b0_b9, sequence_e1_9f_adv, tmp62;
		BitBlock sequence_e1_a7, tmp63, byte_9a, sequence_e1_a7_adv, tmp64, byte_e2;
		BitBlock byte_81, tmp65, sequence_e2_81, byte_e2_adv, tmp66;
		BitBlock cc_range_2070_2074_3, sequence_e2_81_adv, tmp67, byte_82;
		BitBlock sequence_e2_82, byte_range_80_89, sequence_e2_82_adv, tmp68, byte_85;
		BitBlock sequence_e2_85, byte_range_90_9f, sequence_e2_85_adv, tmp69, tmp70;
		BitBlock byte_86, sequence_e2_86, byte_89, sequence_e2_86_adv, tmp71, byte_91;
		BitBlock sequence_e2_91, byte_range_a0_bf, sequence_e2_91_adv, tmp72, byte_92;
		BitBlock sequence_e2_92, tmp73, tmp74, byte_range_80_9b, sequence_e2_92_adv;
		BitBlock tmp75, tmp76, byte_93, sequence_e2_93, tmp77, byte_range_aa_bf;
		BitBlock sequence_e2_93_adv, tmp78, byte_9d, sequence_e2_9d, tmp79;
		BitBlock byte_range_b6_bf, sequence_e2_9d_adv, tmp80, tmp81, byte_9e;
		BitBlock sequence_e2_9e, tmp82, byte_range_80_93, sequence_e2_9e_adv, tmp83;
		BitBlock byte_b3, sequence_e2_b3, byte_bd, sequence_e2_b3_adv, tmp84, byte_e3;
		BitBlock tmp85, sequence_e3_86, byte_e3_adv, tmp86, tmp87, tmp88;
		BitBlock byte_range_92_95, sequence_e3_86_adv, tmp89, tmp90, byte_88;
		BitBlock sequence_e3_88, byte_range_a0_a9, sequence_e3_88_adv, tmp91;
		BitBlock sequence_e3_89, tmp92, tmp93, tmp94, cc_range_3248_3251_3;
		BitBlock sequence_e3_89_adv, tmp95, byte_8a, sequence_e3_8a, tmp96;
		BitBlock cc_range_3280_32b1_3, sequence_e3_8a_adv, tmp97, byte_ea, byte_a0;
		BitBlock tmp98, sequence_ea_a0, byte_ea_adv, sequence_ea_a0_adv, tmp99, tmp100;
		BitBlock byte_f0, byte_90, tmp101, sequence_f0_90, byte_f0_adv, tmp102;
		BitBlock byte_84, tmp103, sequence_f0_90_84, sequence_f0_90_adv, tmp104;
		BitBlock tmp105, tmp106, tmp107, byte_range_87_b3, sequence_f0_90_84_adv;
		BitBlock tmp108, sequence_f0_90_85, tmp109, tmp110, tmp111, byte_range_b5_b8;
		BitBlock sequence_f0_90_85_adv, tmp112, sequence_f0_90_86;
		BitBlock sequence_f0_90_86_adv, tmp113, byte_8c, sequence_f0_90_8c;
		BitBlock byte_range_a0_a3, sequence_f0_90_8c_adv, tmp114, byte_a1;
		BitBlock sequence_f0_90_a1, byte_range_98_9f, sequence_f0_90_a1_adv, tmp115;
		BitBlock byte_a4, sequence_f0_90_a4, tmp116, tmp117, byte_range_96_9b;
		BitBlock sequence_f0_90_a4_adv, tmp118, byte_a9, sequence_f0_90_a9, tmp119;
		BitBlock tmp120, tmp121, tmp122, cc_range_10a40_10a7d_4, sequence_f0_90_a9_adv;
		BitBlock tmp123, sequence_f0_90_ad, tmp124, cc_range_10b58_10b78_4;
		BitBlock sequence_f0_90_ad_adv, tmp125, byte_b9, sequence_f0_90_b9, tmp126;
		BitBlock byte_range_a0_be, sequence_f0_90_b9_adv, tmp127, sequence_f0_91;
		BitBlock tmp128, sequence_f0_91_81, sequence_f0_91_adv, tmp129, tmp130, tmp131;
		BitBlock tmp132, tmp133, byte_range_92_a5, sequence_f0_91_81_adv, tmp134;
		BitBlock sequence_f0_9d, tmp135, sequence_f0_9d_8d, sequence_f0_9d_adv;
		BitBlock byte_range_a0_b1, sequence_f0_9d_8d_adv, tmp136, sequence_f0_9f;
		BitBlock tmp137, sequence_f0_9f_84, sequence_f0_9f_adv, tmp138, tmp139;
		BitBlock byte_range_80_8a, sequence_f0_9f_84_adv, tmp140;




        struct_No.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_andc(tmp5, tmp4);
        byte_c2 = simd_and(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_andc(basis_bits.bit_6, tmp4);
        tmp11 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp12 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp13 = simd_and(tmp11, tmp12);
        tmp14 = simd_or(tmp10, tmp13);
        tmp15 = simd_and(tmp9, tmp14);
        tmp16 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp17 = simd_and(tmp9, tmp16);
        tmp18 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp19 = simd_andc(tmp17, tmp18);
        cc_range_b2_bc_2 = simd_or(tmp15, tmp19);
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(byte_c2, carryQ.get_carry_in(0), byte_c2_adv));
        tmp20 = simd_and(byte_c2_adv, cc_range_b2_bc_2);
        struct_No.cc = simd_or(struct_No.cc, tmp20);
        tmp21 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp22 = simd_and(tmp1, tmp21);
        tmp23 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp24 = simd_or(tmp4, tmp23);
        byte_e0 = simd_andc(tmp22, tmp24);
        tmp25 = simd_and(tmp7, tmp21);
        tmp26 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp27 = simd_and(tmp26, tmp18);
        byte_a7 = simd_and(tmp25, tmp27);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(byte_e0, carryQ.get_carry_in(1), tmp28));
        sequence_e0_a7 = simd_and(tmp28, byte_a7);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(byte_e0, carryQ.get_carry_in(2), byte_e0_adv));
        tmp29 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
        tmp30 = simd_not(tmp29);
        tmp31 = simd_or(simd_and(basis_bits.bit_4, tmp30), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
        byte_range_b4_b9 = simd_and(tmp9, tmp31);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(sequence_e0_a7, carryQ.get_carry_in(3), sequence_e0_a7_adv));
        tmp32 = simd_and(sequence_e0_a7_adv, byte_range_b4_b9);
        struct_No.cc = simd_or(struct_No.cc, tmp32);
        tmp33 = simd_and(tmp16, tmp12);
        byte_ad = simd_and(tmp25, tmp33);
        sequence_e0_ad = simd_and(byte_e0_adv, byte_ad);
        tmp34 = simd_andc(tmp9, basis_bits.bit_4);
        byte_range_b2_b7 = simd_and(tmp34, tmp29);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(sequence_e0_ad, carryQ.get_carry_in(4), sequence_e0_ad_adv));
        tmp35 = simd_and(sequence_e0_ad_adv, byte_range_b2_b7);
        struct_No.cc = simd_or(struct_No.cc, tmp35);
        tmp36 = simd_and(tmp16, tmp18);
        byte_af = simd_and(tmp25, tmp36);
        sequence_e0_af = simd_and(byte_e0_adv, byte_af);
        tmp37 = simd_andc(tmp9, tmp4);
        byte_range_b0_b2 = simd_andc(tmp37, tmp18);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(sequence_e0_af, carryQ.get_carry_in(5), sequence_e0_af_adv));
        tmp38 = simd_and(sequence_e0_af_adv, byte_range_b0_b2);
        struct_No.cc = simd_or(struct_No.cc, tmp38);
        tmp39 = simd_andc(tmp12, tmp4);
        byte_b1 = simd_and(tmp9, tmp39);
        sequence_e0_b1 = simd_and(byte_e0_adv, byte_b1);
        tmp40 = simd_and(tmp9, basis_bits.bit_4);
        tmp41 = simd_and(basis_bits.bit_5, tmp18);
        byte_range_b8_be = simd_andc(tmp40, tmp41);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(sequence_e0_b1, carryQ.get_carry_in(6), sequence_e0_b1_adv));
        tmp42 = simd_and(sequence_e0_b1_adv, byte_range_b8_be);
        struct_No.cc = simd_or(struct_No.cc, tmp42);
        tmp43 = simd_and(tmp26, tmp12);
        byte_b5 = simd_and(tmp9, tmp43);
        sequence_e0_b5 = simd_and(byte_e0_adv, byte_b5);
        tmp44 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        byte_range_b0_b5 = simd_andc(tmp34, tmp44);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(sequence_e0_b5, carryQ.get_carry_in(7), sequence_e0_b5_adv));
        tmp45 = simd_and(sequence_e0_b5_adv, byte_range_b0_b5);
        struct_No.cc = simd_or(struct_No.cc, tmp45);
        tmp46 = simd_andc(tmp16, tmp23);
        byte_bc = simd_and(tmp9, tmp46);
        sequence_e0_bc = simd_and(byte_e0_adv, byte_bc);
        tmp47 = simd_and(tmp7, basis_bits.bit_2);
        tmp48 = simd_not(tmp4);
        tmp49 = simd_and(basis_bits.bit_4, tmp29);
        tmp50 = simd_or(simd_and(basis_bits.bit_3, tmp48), simd_andc(tmp49, basis_bits.bit_3));
        byte_range_aa_b3 = simd_and(tmp47, tmp50);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(sequence_e0_bc, carryQ.get_carry_in(8), sequence_e0_bc_adv));
        tmp51 = simd_and(sequence_e0_bc_adv, byte_range_aa_b3);
        struct_No.cc = simd_or(struct_No.cc, tmp51);
        byte_e1 = simd_and(tmp22, tmp39);
        tmp52 = simd_andc(tmp7, tmp2);
        byte_8d = simd_and(tmp52, tmp33);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(9), tmp53));
        sequence_e1_8d = simd_and(tmp53, byte_8d);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(10), byte_e1_adv));
        tmp54 = simd_and(tmp16, tmp23);
        tmp55 = simd_not(tmp54);
        tmp56 = simd_or(basis_bits.bit_5, tmp23);
        tmp57 = simd_and(basis_bits.bit_4, tmp56);
        tmp58 = simd_or(simd_and(basis_bits.bit_3, tmp55), simd_andc(tmp57, basis_bits.bit_3));
        byte_range_a9_bc = simd_and(tmp47, tmp58);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(sequence_e1_8d, carryQ.get_carry_in(11), sequence_e1_8d_adv));
        tmp59 = simd_and(sequence_e1_8d_adv, byte_range_a9_bc);
        struct_No.cc = simd_or(struct_No.cc, tmp59);
        tmp60 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp61 = simd_and(tmp7, tmp60);
        byte_9f = simd_and(tmp61, tmp36);
        sequence_e1_9f = simd_and(byte_e1_adv, byte_9f);
        byte_range_b0_b9 = simd_andc(tmp9, tmp49);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(sequence_e1_9f, carryQ.get_carry_in(12), sequence_e1_9f_adv));
        tmp62 = simd_and(sequence_e1_9f_adv, byte_range_b0_b9);
        struct_No.cc = simd_or(struct_No.cc, tmp62);
        sequence_e1_a7 = simd_and(byte_e1_adv, byte_a7);
        tmp63 = simd_and(tmp11, tmp5);
        byte_9a = simd_and(tmp61, tmp63);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(sequence_e1_a7, carryQ.get_carry_in(13), sequence_e1_a7_adv));
        tmp64 = simd_and(sequence_e1_a7_adv, byte_9a);
        struct_No.cc = simd_or(struct_No.cc, tmp64);
        byte_e2 = simd_and(tmp22, tmp6);
        byte_81 = simd_and(tmp52, tmp39);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(14), tmp65));
        sequence_e2_81 = simd_and(tmp65, byte_81);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(15), byte_e2_adv));
        tmp66 = simd_andc(tmp24, tmp31);
        cc_range_2070_2074_3 = simd_andc(tmp9, tmp66);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(sequence_e2_81, carryQ.get_carry_in(16), sequence_e2_81_adv));
        tmp67 = simd_and(sequence_e2_81_adv, cc_range_2070_2074_3);
        struct_No.cc = simd_or(struct_No.cc, tmp67);
        byte_82 = simd_and(tmp52, tmp6);
        sequence_e2_82 = simd_and(byte_e2_adv, byte_82);
        byte_range_80_89 = simd_andc(tmp52, tmp49);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(sequence_e2_82, carryQ.get_carry_in(17), sequence_e2_82_adv));
        tmp68 = simd_and(sequence_e2_82_adv, byte_range_80_89);
        struct_No.cc = simd_or(struct_No.cc, tmp68);
        byte_85 = simd_and(tmp52, tmp43);
        sequence_e2_85 = simd_and(byte_e2_adv, byte_85);
        byte_range_90_9f = simd_and(tmp7, tmp60);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(sequence_e2_85, carryQ.get_carry_in(18), sequence_e2_85_adv));
        tmp69 = simd_and(sequence_e2_85_adv, byte_range_90_9f);
        struct_No.cc = simd_or(struct_No.cc, tmp69);
        tmp70 = simd_and(tmp26, tmp5);
        byte_86 = simd_and(tmp52, tmp70);
        sequence_e2_86 = simd_and(byte_e2_adv, byte_86);
        byte_89 = simd_and(tmp52, tmp13);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(sequence_e2_86, carryQ.get_carry_in(19), sequence_e2_86_adv));
        tmp71 = simd_and(sequence_e2_86_adv, byte_89);
        struct_No.cc = simd_or(struct_No.cc, tmp71);
        byte_91 = simd_and(byte_range_90_9f, tmp39);
        sequence_e2_91 = simd_and(byte_e2_adv, byte_91);
        byte_range_a0_bf = simd_and(tmp7, basis_bits.bit_2);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(sequence_e2_91, carryQ.get_carry_in(20), sequence_e2_91_adv));
        tmp72 = simd_and(sequence_e2_91_adv, byte_range_a0_bf);
        struct_No.cc = simd_or(struct_No.cc, tmp72);
        byte_92 = simd_and(byte_range_90_9f, tmp6);
        sequence_e2_92 = simd_and(byte_e2_adv, byte_92);
        tmp73 = simd_andc(tmp7, basis_bits.bit_2);
        tmp74 = simd_and(basis_bits.bit_3, tmp16);
        byte_range_80_9b = simd_andc(tmp73, tmp74);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(sequence_e2_92, carryQ.get_carry_in(21), sequence_e2_92_adv));
        tmp75 = simd_and(sequence_e2_92_adv, byte_range_80_9b);
        struct_No.cc = simd_or(struct_No.cc, tmp75);
        tmp76 = simd_andc(tmp18, tmp4);
        byte_93 = simd_and(byte_range_90_9f, tmp76);
        sequence_e2_93 = simd_and(byte_e2_adv, byte_93);
        tmp77 = simd_or(basis_bits.bit_3, tmp49);
        byte_range_aa_bf = simd_and(byte_range_a0_bf, tmp77);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(sequence_e2_93, carryQ.get_carry_in(22), sequence_e2_93_adv));
        tmp78 = simd_and(sequence_e2_93_adv, byte_range_aa_bf);
        struct_No.cc = simd_or(struct_No.cc, tmp78);
        byte_9d = simd_and(byte_range_90_9f, tmp33);
        sequence_e2_9d = simd_and(byte_e2_adv, byte_9d);
        tmp79 = simd_or(basis_bits.bit_4, tmp44);
        byte_range_b6_bf = simd_and(tmp9, tmp79);
        carryQ.cq[23] = carryout2carry(pablo_blk_Advance(sequence_e2_9d, carryQ.get_carry_in(23), sequence_e2_9d_adv));
        tmp80 = simd_and(sequence_e2_9d_adv, byte_range_b6_bf);
        struct_No.cc = simd_or(struct_No.cc, tmp80);
        tmp81 = simd_and(tmp16, tmp5);
        byte_9e = simd_and(byte_range_90_9f, tmp81);
        sequence_e2_9e = simd_and(byte_e2_adv, byte_9e);
        tmp82 = simd_and(basis_bits.bit_3, tmp4);
        byte_range_80_93 = simd_andc(tmp73, tmp82);
        carryQ.cq[24] = carryout2carry(pablo_blk_Advance(sequence_e2_9e, carryQ.get_carry_in(24), sequence_e2_9e_adv));
        tmp83 = simd_and(sequence_e2_9e_adv, byte_range_80_93);
        struct_No.cc = simd_or(struct_No.cc, tmp83);
        byte_b3 = simd_and(tmp9, tmp76);
        sequence_e2_b3 = simd_and(byte_e2_adv, byte_b3);
        byte_bd = simd_and(tmp9, tmp33);
        carryQ.cq[25] = carryout2carry(pablo_blk_Advance(sequence_e2_b3, carryQ.get_carry_in(25), sequence_e2_b3_adv));
        tmp84 = simd_and(sequence_e2_b3_adv, byte_bd);
        struct_No.cc = simd_or(struct_No.cc, tmp84);
        byte_e3 = simd_and(tmp22, tmp76);
        carryQ.cq[26] = carryout2carry(pablo_blk_Advance(byte_e3, carryQ.get_carry_in(26), tmp85));
        sequence_e3_86 = simd_and(tmp85, byte_86);
        carryQ.cq[27] = carryout2carry(pablo_blk_Advance(byte_e3, carryQ.get_carry_in(27), byte_e3_adv));
        tmp86 = simd_andc(byte_range_90_9f, basis_bits.bit_4);
        tmp87 = simd_not(basis_bits.bit_6);
        tmp88 = simd_or(simd_and(basis_bits.bit_5, tmp87), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        byte_range_92_95 = simd_and(tmp86, tmp88);
        carryQ.cq[28] = carryout2carry(pablo_blk_Advance(sequence_e3_86, carryQ.get_carry_in(28), sequence_e3_86_adv));
        tmp89 = simd_and(sequence_e3_86_adv, byte_range_92_95);
        struct_No.cc = simd_or(struct_No.cc, tmp89);
        tmp90 = simd_andc(tmp11, tmp23);
        byte_88 = simd_and(tmp52, tmp90);
        sequence_e3_88 = simd_and(byte_e3_adv, byte_88);
        byte_range_a0_a9 = simd_andc(tmp25, tmp49);
        carryQ.cq[29] = carryout2carry(pablo_blk_Advance(sequence_e3_88, carryQ.get_carry_in(29), sequence_e3_88_adv));
        tmp91 = simd_and(sequence_e3_88_adv, byte_range_a0_a9);
        struct_No.cc = simd_or(struct_No.cc, tmp91);
        sequence_e3_89 = simd_and(byte_e3_adv, byte_89);
        tmp92 = simd_and(tmp52, basis_bits.bit_4);
        tmp93 = simd_or(basis_bits.bit_4, tmp56);
        tmp94 = simd_and(byte_range_90_9f, tmp93);
        cc_range_3248_3251_3 = simd_or(tmp92, tmp94);
        carryQ.cq[30] = carryout2carry(pablo_blk_Advance(sequence_e3_89, carryQ.get_carry_in(30), sequence_e3_89_adv));
        tmp95 = simd_and(sequence_e3_89_adv, cc_range_3248_3251_3);
        struct_No.cc = simd_or(struct_No.cc, tmp95);
        byte_8a = simd_and(tmp52, tmp63);
        sequence_e3_8a = simd_and(byte_e3_adv, byte_8a);
        tmp96 = simd_and(tmp9, tmp93);
        cc_range_3280_32b1_3 = simd_or(byte_range_80_89, tmp96);
        carryQ.cq[31] = carryout2carry(pablo_blk_Advance(sequence_e3_8a, carryQ.get_carry_in(31), sequence_e3_8a_adv));
        tmp97 = simd_and(sequence_e3_8a_adv, cc_range_3280_32b1_3);
        struct_No.cc = simd_or(struct_No.cc, tmp97);
        byte_ea = simd_and(tmp22, tmp63);
        byte_a0 = simd_andc(tmp25, tmp24);
        carryQ.cq[32] = carryout2carry(pablo_blk_Advance(byte_ea, carryQ.get_carry_in(32), tmp98));
        sequence_ea_a0 = simd_and(tmp98, byte_a0);
        carryQ.cq[33] = carryout2carry(pablo_blk_Advance(byte_ea, carryQ.get_carry_in(33), byte_ea_adv));
        carryQ.cq[34] = carryout2carry(pablo_blk_Advance(sequence_ea_a0, carryQ.get_carry_in(34), sequence_ea_a0_adv));
        tmp99 = simd_and(sequence_ea_a0_adv, byte_range_b0_b5);
        struct_No.cc = simd_or(struct_No.cc, tmp99);
        tmp100 = simd_and(tmp1, tmp8);
        byte_f0 = simd_andc(tmp100, tmp24);
        byte_90 = simd_andc(byte_range_90_9f, tmp24);
        carryQ.cq[35] = carryout2carry(pablo_blk_Advance(byte_f0, carryQ.get_carry_in(35), tmp101));
        sequence_f0_90 = simd_and(tmp101, byte_90);
        carryQ.cq[36] = carryout2carry(pablo_blk_Advance(byte_f0, carryQ.get_carry_in(36), byte_f0_adv));
        tmp102 = simd_andc(tmp26, tmp23);
        byte_84 = simd_and(tmp52, tmp102);
        carryQ.cq[37] = carryout2carry(pablo_blk_Advance(sequence_f0_90, carryQ.get_carry_in(37), tmp103));
        sequence_f0_90_84 = simd_and(tmp103, byte_84);
        carryQ.cq[38] = carryout2carry(pablo_blk_Advance(sequence_f0_90, carryQ.get_carry_in(38), sequence_f0_90_adv));
        tmp104 = simd_not(tmp82);
        tmp105 = simd_or(basis_bits.bit_4, tmp41);
        tmp106 = simd_or(basis_bits.bit_3, tmp105);
        tmp107 = simd_or(simd_and(basis_bits.bit_2, tmp104), simd_andc(tmp106, basis_bits.bit_2));
        byte_range_87_b3 = simd_and(tmp7, tmp107);
        carryQ.cq[39] = carryout2carry(pablo_blk_Advance(sequence_f0_90_84, carryQ.get_carry_in(39), sequence_f0_90_84_adv));
        tmp108 = simd_and(sequence_f0_90_84_adv, byte_range_87_b3);
        struct_No.cc = simd_or(struct_No.cc, tmp108);
        sequence_f0_90_85 = simd_and(sequence_f0_90_adv, byte_85);
        tmp109 = simd_not(tmp56);
        tmp110 = simd_and(basis_bits.bit_5, tmp23);
        tmp111 = simd_or(simd_and(basis_bits.bit_4, tmp109), simd_andc(tmp110, basis_bits.bit_4));
        byte_range_b5_b8 = simd_and(tmp9, tmp111);
        carryQ.cq[40] = carryout2carry(pablo_blk_Advance(sequence_f0_90_85, carryQ.get_carry_in(40), sequence_f0_90_85_adv));
        tmp112 = simd_and(sequence_f0_90_85_adv, byte_range_b5_b8);
        struct_No.cc = simd_or(struct_No.cc, tmp112);
        sequence_f0_90_86 = simd_and(sequence_f0_90_adv, byte_86);
        carryQ.cq[41] = carryout2carry(pablo_blk_Advance(sequence_f0_90_86, carryQ.get_carry_in(41), sequence_f0_90_86_adv));
        tmp113 = simd_and(sequence_f0_90_86_adv, byte_8a);
        struct_No.cc = simd_or(struct_No.cc, tmp113);
        byte_8c = simd_and(tmp52, tmp46);
        sequence_f0_90_8c = simd_and(sequence_f0_90_adv, byte_8c);
        byte_range_a0_a3 = simd_andc(tmp25, tmp4);
        carryQ.cq[42] = carryout2carry(pablo_blk_Advance(sequence_f0_90_8c, carryQ.get_carry_in(42), sequence_f0_90_8c_adv));
        tmp114 = simd_and(sequence_f0_90_8c_adv, byte_range_a0_a3);
        struct_No.cc = simd_or(struct_No.cc, tmp114);
        byte_a1 = simd_and(tmp25, tmp39);
        sequence_f0_90_a1 = simd_and(sequence_f0_90_adv, byte_a1);
        byte_range_98_9f = simd_and(byte_range_90_9f, basis_bits.bit_4);
        carryQ.cq[43] = carryout2carry(pablo_blk_Advance(sequence_f0_90_a1, carryQ.get_carry_in(43), sequence_f0_90_a1_adv));
        tmp115 = simd_and(sequence_f0_90_a1_adv, byte_range_98_9f);
        struct_No.cc = simd_or(struct_No.cc, tmp115);
        byte_a4 = simd_and(tmp25, tmp102);
        sequence_f0_90_a4 = simd_and(sequence_f0_90_adv, byte_a4);
        tmp116 = simd_not(basis_bits.bit_5);
        tmp117 = simd_or(simd_and(basis_bits.bit_4, tmp116), simd_andc(tmp44, basis_bits.bit_4));
        byte_range_96_9b = simd_and(byte_range_90_9f, tmp117);
        carryQ.cq[44] = carryout2carry(pablo_blk_Advance(sequence_f0_90_a4, carryQ.get_carry_in(44), sequence_f0_90_a4_adv));
        tmp118 = simd_and(sequence_f0_90_a4_adv, byte_range_96_9b);
        struct_No.cc = simd_or(struct_No.cc, tmp118);
        byte_a9 = simd_and(tmp25, tmp13);
        sequence_f0_90_a9 = simd_and(sequence_f0_90_adv, byte_a9);
        tmp119 = simd_andc(tmp52, basis_bits.bit_4);
        tmp120 = simd_not(basis_bits.bit_7);
        tmp121 = simd_or(simd_and(basis_bits.bit_6, tmp120), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
        tmp122 = simd_and(tmp17, tmp121);
        cc_range_10a40_10a7d_4 = simd_or(tmp119, tmp122);
        carryQ.cq[45] = carryout2carry(pablo_blk_Advance(sequence_f0_90_a9, carryQ.get_carry_in(45), sequence_f0_90_a9_adv));
        tmp123 = simd_and(sequence_f0_90_a9_adv, cc_range_10a40_10a7d_4);
        struct_No.cc = simd_or(struct_No.cc, tmp123);
        sequence_f0_90_ad = simd_and(sequence_f0_90_adv, byte_ad);
        tmp124 = simd_and(tmp7, basis_bits.bit_3);
        cc_range_10b58_10b78_4 = simd_and(basis_bits.bit_4, tmp124);
        carryQ.cq[46] = carryout2carry(pablo_blk_Advance(sequence_f0_90_ad, carryQ.get_carry_in(46), sequence_f0_90_ad_adv));
        tmp125 = simd_and(sequence_f0_90_ad_adv, cc_range_10b58_10b78_4);
        struct_No.cc = simd_or(struct_No.cc, tmp125);
        byte_b9 = simd_and(tmp9, tmp13);
        sequence_f0_90_b9 = simd_and(sequence_f0_90_adv, byte_b9);
        tmp126 = simd_and(basis_bits.bit_3, tmp36);
        byte_range_a0_be = simd_andc(byte_range_a0_bf, tmp126);
        carryQ.cq[47] = carryout2carry(pablo_blk_Advance(sequence_f0_90_b9, carryQ.get_carry_in(47), sequence_f0_90_b9_adv));
        tmp127 = simd_and(sequence_f0_90_b9_adv, byte_range_a0_be);
        struct_No.cc = simd_or(struct_No.cc, tmp127);
        sequence_f0_91 = simd_and(byte_f0_adv, byte_91);
        carryQ.cq[48] = carryout2carry(pablo_blk_Advance(sequence_f0_91, carryQ.get_carry_in(48), tmp128));
        sequence_f0_91_81 = simd_and(tmp128, byte_81);
        carryQ.cq[49] = carryout2carry(pablo_blk_Advance(sequence_f0_91, carryQ.get_carry_in(49), sequence_f0_91_adv));
        tmp129 = simd_or(basis_bits.bit_3, tmp79);
        tmp130 = simd_not(tmp129);
        tmp131 = simd_or(tmp4, basis_bits.bit_6);
        tmp132 = simd_and(basis_bits.bit_3, tmp131);
        tmp133 = simd_or(simd_and(basis_bits.bit_2, tmp130), simd_andc(tmp132, basis_bits.bit_2));
        byte_range_92_a5 = simd_and(tmp7, tmp133);
        carryQ.cq[50] = carryout2carry(pablo_blk_Advance(sequence_f0_91_81, carryQ.get_carry_in(50), sequence_f0_91_81_adv));
        tmp134 = simd_and(sequence_f0_91_81_adv, byte_range_92_a5);
        struct_No.cc = simd_or(struct_No.cc, tmp134);
        sequence_f0_9d = simd_and(byte_f0_adv, byte_9d);
        carryQ.cq[51] = carryout2carry(pablo_blk_Advance(sequence_f0_9d, carryQ.get_carry_in(51), tmp135));
        sequence_f0_9d_8d = simd_and(tmp135, byte_8d);
        carryQ.cq[52] = carryout2carry(pablo_blk_Advance(sequence_f0_9d, carryQ.get_carry_in(52), sequence_f0_9d_adv));
        byte_range_a0_b1 = simd_andc(byte_range_a0_bf, tmp132);
        carryQ.cq[53] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_8d, carryQ.get_carry_in(53), sequence_f0_9d_8d_adv));
        tmp136 = simd_and(sequence_f0_9d_8d_adv, byte_range_a0_b1);
        struct_No.cc = simd_or(struct_No.cc, tmp136);
        sequence_f0_9f = simd_and(byte_f0_adv, byte_9f);
        carryQ.cq[54] = carryout2carry(pablo_blk_Advance(sequence_f0_9f, carryQ.get_carry_in(54), tmp137));
        sequence_f0_9f_84 = simd_and(tmp137, byte_84);
        carryQ.cq[55] = carryout2carry(pablo_blk_Advance(sequence_f0_9f, carryQ.get_carry_in(55), sequence_f0_9f_adv));
        tmp138 = simd_or(basis_bits.bit_5, tmp18);
        tmp139 = simd_and(basis_bits.bit_4, tmp138);
        byte_range_80_8a = simd_andc(tmp52, tmp139);
        carryQ.cq[56] = carryout2carry(pablo_blk_Advance(sequence_f0_9f_84, carryQ.get_carry_in(56), sequence_f0_9f_84_adv));
        tmp140 = simd_and(sequence_f0_9f_84_adv, byte_range_80_8a);
        struct_No.cc = simd_or(struct_No.cc, tmp140);
  }
  CarryArray<57, 0> carryQ;
  };

  struct Lo {
  Lo() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Lo & struct_Lo) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, byte_c2, tmp7, tmp8, tmp9, tmp10;
		BitBlock cc_range_aa_ba_2, byte_c2_adv, tmp11, tmp12, tmp13, byte_c6, tmp14;
		BitBlock tmp15, tmp16, tmp17, byte_bb, byte_c6_adv, tmp18, tmp19, byte_c7;
		BitBlock tmp20, byte_range_80_83, byte_c7_adv, tmp21, byte_ca, tmp22, tmp23;
		BitBlock tmp24, tmp25, byte_94, byte_ca_adv, tmp26, tmp27, byte_d7, tmp28;
		BitBlock tmp29, tmp30, tmp31, tmp32, tmp33, tmp34, tmp35, cc_range_5d0_5f0_2;
		BitBlock byte_d7_adv, tmp36, tmp37, byte_d8, byte_range_a0_bf, byte_d8_adv;
		BitBlock tmp38, tmp39, tmp40, byte_d9, tmp41, tmp42, tmp43, tmp44, tmp45;
		BitBlock tmp46, tmp47, tmp48, tmp49, tmp50, tmp51, tmp52, cc_range_641_671_2;
		BitBlock byte_d9_adv, tmp53, byte_da, byte_range_80_bf, byte_da_adv, tmp54;
		BitBlock byte_db, tmp55, tmp56, tmp57, tmp58, tmp59, tmp60, tmp61, tmp62;
		BitBlock tmp63, tmp64, tmp65, tmp66, tmp67, tmp68, tmp69, tmp70, tmp71, tmp72;
		BitBlock cc_range_6c0_6ff_2, byte_db_adv, tmp73, tmp74, byte_dc, tmp75, tmp76;
		BitBlock tmp77, tmp78, tmp79, tmp80, tmp81, cc_range_710_712_2, byte_dc_adv;
		BitBlock tmp82, tmp83, byte_dd, tmp84, tmp85, tmp86, byte_range_8d_bf;
		BitBlock byte_dd_adv, tmp87, tmp88, byte_de, tmp89, tmp90, tmp91, tmp92, tmp93;
		BitBlock tmp94, tmp95, cc_range_780_7b1_2, byte_de_adv, tmp96, byte_df, tmp97;
		BitBlock tmp98, tmp99, tmp100, byte_range_8a_aa, byte_df_adv, tmp101, tmp102;
		BitBlock byte_e0, byte_a0, tmp103, sequence_e0_a0, byte_e0_adv, tmp104;
		BitBlock byte_range_80_95, sequence_e0_a0_adv, tmp105, byte_a1, sequence_e0_a1;
		BitBlock tmp106, tmp107, byte_range_80_98, sequence_e0_a1_adv, tmp108, byte_a2;
		BitBlock sequence_e0_a2, tmp109, tmp110, tmp111, tmp112, cc_range_8a0_8a2_3;
		BitBlock sequence_e0_a2_adv, tmp113, byte_a4, sequence_e0_a4, tmp114, tmp115;
		BitBlock tmp116, tmp117, tmp118, tmp119, cc_range_904_93d_3;
		BitBlock sequence_e0_a4_adv, tmp120, byte_a5, sequence_e0_a5, tmp121, tmp122;
		BitBlock tmp123, tmp124, tmp125, tmp126, tmp127, tmp128, tmp129, tmp130;
		BitBlock cc_range_950_979_3, sequence_e0_a5_adv, tmp131, byte_a6;
		BitBlock sequence_e0_a6, tmp132, tmp133, tmp134, tmp135, tmp136, tmp137;
		BitBlock tmp138, tmp139, tmp140, tmp141, tmp142, tmp143, tmp144, tmp145;
		BitBlock tmp146, tmp147, tmp148, tmp149, tmp150, tmp151, tmp152, tmp153;
		BitBlock tmp154, tmp155, cc_range_985_9bd_3, sequence_e0_a6_adv, tmp156;
		BitBlock byte_a7, sequence_e0_a7, tmp157, tmp158, tmp159, tmp160, tmp161;
		BitBlock tmp162, tmp163, tmp164, tmp165, cc_range_9ce_9f0_3;
		BitBlock sequence_e0_a7_adv, tmp166, byte_a8, sequence_e0_a8, tmp167, tmp168;
		BitBlock tmp169, tmp170, tmp171, tmp172, tmp173, tmp174, tmp175, tmp176;
		BitBlock tmp177, tmp178, tmp179, tmp180, tmp181, cc_range_a05_a38_3;
		BitBlock sequence_e0_a8_adv, tmp182, byte_a9, sequence_e0_a9, tmp183, tmp184;
		BitBlock tmp185, tmp186, tmp187, tmp188, cc_range_a59_a72_3;
		BitBlock sequence_e0_a9_adv, tmp189, byte_aa, sequence_e0_aa, tmp190, tmp191;
		BitBlock tmp192, tmp193, tmp194, tmp195, tmp196, tmp197, tmp198, tmp199;
		BitBlock tmp200, tmp201, tmp202, cc_range_a85_abd_3, sequence_e0_aa_adv;
		BitBlock tmp203, byte_ab, sequence_e0_ab, tmp204, cc_range_ad0_ae0_3;
		BitBlock sequence_e0_ab_adv, tmp205, byte_ac, sequence_e0_ac, tmp206, tmp207;
		BitBlock cc_range_b05_b3d_3, sequence_e0_ac_adv, tmp208, byte_ad;
		BitBlock sequence_e0_ad, tmp209, cc_range_b5c_b71_3, sequence_e0_ad_adv;
		BitBlock tmp210, byte_ae, sequence_e0_ae, tmp211, tmp212, tmp213, tmp214;
		BitBlock tmp215, tmp216, tmp217, tmp218, tmp219, tmp220, tmp221, tmp222;
		BitBlock tmp223, tmp224, tmp225, tmp226, tmp227, tmp228, tmp229, tmp230;
		BitBlock tmp231, tmp232, tmp233, tmp234, tmp235, tmp236, tmp237, tmp238;
		BitBlock cc_range_b83_bae_3, sequence_e0_ae_adv, tmp239, byte_af;
		BitBlock sequence_e0_af, byte_90, sequence_e0_af_adv, tmp240, byte_b0;
		BitBlock sequence_e0_b0, tmp241, tmp242, tmp243, tmp244, tmp245, tmp246;
		BitBlock tmp247, tmp248, tmp249, cc_range_c05_c3d_3, sequence_e0_b0_adv;
		BitBlock tmp250, byte_b1, sequence_e0_b1, tmp251, cc_range_c58_c60_3;
		BitBlock sequence_e0_b1_adv, tmp252, byte_b2, sequence_e0_b2;
		BitBlock cc_range_c85_cbd_3, sequence_e0_b2_adv, tmp253, byte_b3;
		BitBlock sequence_e0_b3, tmp254, tmp255, tmp256, cc_range_cde_cf1_3;
		BitBlock sequence_e0_b3_adv, tmp257, byte_b4, sequence_e0_b4, tmp258, tmp259;
		BitBlock tmp260, tmp261, tmp262, cc_range_d05_d3d_3, sequence_e0_b4_adv;
		BitBlock tmp263, byte_b5, sequence_e0_b5, tmp264, tmp265, cc_range_d4e_d7a_3;
		BitBlock sequence_e0_b5_adv, tmp266, byte_b6, sequence_e0_b6, tmp267, tmp268;
		BitBlock tmp269, tmp270, tmp271, tmp272, tmp273, tmp274, tmp275, tmp276;
		BitBlock tmp277, tmp278, tmp279, tmp280, cc_range_d85_dbd_3;
		BitBlock sequence_e0_b6_adv, tmp281, byte_b7, sequence_e0_b7, tmp282;
		BitBlock byte_range_80_86, sequence_e0_b7_adv, tmp283, byte_b8, sequence_e0_b8;
		BitBlock tmp284, tmp285, tmp286, tmp287, tmp288, cc_range_e01_e32_3;
		BitBlock sequence_e0_b8_adv, tmp289, byte_b9, sequence_e0_b9, byte_range_80_85;
		BitBlock sequence_e0_b9_adv, tmp290, byte_ba, sequence_e0_ba, tmp291, tmp292;
		BitBlock tmp293, tmp294, tmp295, tmp296, tmp297, tmp298, tmp299, tmp300;
		BitBlock tmp301, tmp302, tmp303, tmp304, tmp305, tmp306, tmp307, tmp308;
		BitBlock tmp309, tmp310, tmp311, tmp312, tmp313, tmp314, tmp315, tmp316;
		BitBlock tmp317, tmp318, cc_range_e81_ebd_3, sequence_e0_ba_adv, tmp319;
		BitBlock sequence_e0_bb, tmp320, tmp321, cc_range_ec0_edc_3;
		BitBlock sequence_e0_bb_adv, tmp322, byte_bc, sequence_e0_bc, byte_80;
		BitBlock sequence_e0_bc_adv, tmp323, byte_bd, sequence_e0_bd, tmp324, tmp325;
		BitBlock tmp326, cc_range_f40_f49_3, sequence_e0_bd_adv, tmp327, byte_be;
		BitBlock sequence_e0_be, tmp328, byte_range_88_8c, sequence_e0_be_adv, tmp329;
		BitBlock byte_e1, tmp330, sequence_e1_80, byte_e1_adv, tmp331, tmp332;
		BitBlock cc_range_1000_103f_3, sequence_e1_80_adv, tmp333, byte_81;
		BitBlock sequence_e1_81, tmp334, tmp335, tmp336, tmp337, tmp338, tmp339;
		BitBlock tmp340, tmp341, tmp342, tmp343, cc_range_1050_1075_3;
		BitBlock sequence_e1_81_adv, tmp344, byte_82, sequence_e1_82, tmp345;
		BitBlock cc_range_1080_108e_3, sequence_e1_82_adv, tmp346, byte_83;
		BitBlock sequence_e1_83, tmp347, tmp348, tmp349, tmp350, cc_range_10d0_10fd_3;
		BitBlock sequence_e1_83_adv, tmp351, tmp352, byte_range_84_88;
		BitBlock byte_e1_byte_range_84_88, tmp353, byte_e1_byte_range_84_88_sfx;
		BitBlock byte_89, sequence_e1_89, byte_range_80_88, tmp354;
		BitBlock sequence_e1_89_byte_range_80_88, byte_8a, sequence_e1_8a, tmp355;
		BitBlock sequence_e1_8a_byte_range_80_88, byte_8b, sequence_e1_8b, tmp356;
		BitBlock sequence_e1_8b_80, byte_8c, sequence_e1_8c, byte_range_80_90, tmp357;
		BitBlock sequence_e1_8c_byte_range_80_90, byte_8d, sequence_e1_8d;
		BitBlock byte_range_80_9a, tmp358, sequence_e1_8d_byte_range_80_9a, byte_8e;
		BitBlock sequence_e1_8e, byte_range_80_8f, tmp359;
		BitBlock sequence_e1_8e_byte_range_80_8f, byte_8f, sequence_e1_8f, tmp360;
		BitBlock tmp361, byte_range_80_b4, tmp362, sequence_e1_8f_byte_range_80_b4;
		BitBlock sequence_e1_90, tmp363, byte_range_81_bf, tmp364;
		BitBlock sequence_e1_90_byte_range_81_bf, byte_91, sequence_e1_91, tmp365;
		BitBlock sequence_e1_91_byte_range_80_bf, byte_99, sequence_e1_99, tmp366;
		BitBlock byte_range_80_ac, tmp367, sequence_e1_99_byte_range_80_ac, byte_9a;
		BitBlock sequence_e1_9a, tmp368, tmp369, byte_range_81_9a, tmp370;
		BitBlock sequence_e1_9a_byte_range_81_9a, byte_9b, sequence_e1_9b;
		BitBlock byte_range_80_aa, tmp371, sequence_e1_9b_byte_range_80_aa, byte_9c;
		BitBlock sequence_e1_9c, tmp372, byte_range_80_8c, tmp373;
		BitBlock sequence_e1_9c_byte_range_80_8c, byte_9d, sequence_e1_9d;
		BitBlock byte_range_80_91, tmp374, sequence_e1_9d_byte_range_80_91, byte_9e;
		BitBlock sequence_e1_9e, tmp375, byte_range_80_b3, tmp376;
		BitBlock sequence_e1_9e_byte_range_80_b3, byte_9f, sequence_e1_9f, tmp377;
		BitBlock sequence_e1_9f_9c, sequence_e1_a0, tmp378;
		BitBlock sequence_e1_a0_byte_range_a0_bf, sequence_e1_a1, tmp379;
		BitBlock byte_range_80_82, tmp380, sequence_e1_a1_byte_range_80_82;
		BitBlock sequence_e1_a2, tmp381, byte_range_80_a8, tmp382;
		BitBlock sequence_e1_a2_byte_range_80_a8, byte_a3, sequence_e1_a3, tmp383;
		BitBlock byte_range_80_b5, tmp384, sequence_e1_a3_byte_range_80_b5;
		BitBlock sequence_e1_a4, tmp385, byte_range_80_9c, tmp386;
		BitBlock sequence_e1_a4_byte_range_80_9c, sequence_e1_a5, tmp387, tmp388;
		BitBlock tmp389, byte_range_90_ad, tmp390, sequence_e1_a5_byte_range_90_ad;
		BitBlock sequence_e1_a6, tmp391, tmp392, byte_range_80_ab, tmp393;
		BitBlock sequence_e1_a6_byte_range_80_ab, sequence_e1_a7, tmp394;
		BitBlock byte_range_81_87, tmp395, sequence_e1_a7_byte_range_81_87;
		BitBlock sequence_e1_a8, tmp396, byte_range_80_96, tmp397;
		BitBlock sequence_e1_a8_byte_range_80_96, sequence_e1_a9, byte_range_80_94;
		BitBlock tmp398, sequence_e1_a9_byte_range_80_94, sequence_e1_ac, tmp399;
		BitBlock tmp400, tmp401, byte_range_85_b3, tmp402;
		BitBlock sequence_e1_ac_byte_range_85_b3, sequence_e1_ad, tmp403;
		BitBlock byte_range_85_8b, tmp404, sequence_e1_ad_byte_range_85_8b;
		BitBlock sequence_e1_ae, tmp405, tmp406, tmp407, byte_range_83_a0, tmp408;
		BitBlock sequence_e1_ae_byte_range_83_a0, sequence_e1_af, byte_range_80_a5;
		BitBlock tmp409, sequence_e1_af_byte_range_80_a5, sequence_e1_b0, tmp410;
		BitBlock byte_range_80_a3, tmp411, sequence_e1_b0_byte_range_80_a3;
		BitBlock sequence_e1_b1, tmp412, byte_range_8d_8f, tmp413;
		BitBlock sequence_e1_b1_byte_range_8d_8f, sequence_e1_b3, tmp414;
		BitBlock byte_range_a9_ac, tmp415, sequence_e1_b3_byte_range_a9_ac, byte_e2;
		BitBlock byte_84, tmp416, sequence_e2_84, byte_e2_adv, tmp417;
		BitBlock byte_range_b5_b8, sequence_e2_84_adv, tmp418, sequence_e2_b4;
		BitBlock byte_range_b0_bf, sequence_e2_b4_adv, tmp419, sequence_e2_b5, tmp420;
		BitBlock tmp421, byte_range_80_a7, sequence_e2_b5_adv, tmp422, sequence_e2_b6;
		BitBlock tmp423, tmp424, tmp425, tmp426, tmp427, tmp428, tmp429, tmp430;
		BitBlock tmp431, cc_range_2d80_2db8_3, sequence_e2_b6_adv, tmp432;
		BitBlock sequence_e2_b7, tmp433, tmp434, cc_range_2dc0_2dd8_3;
		BitBlock sequence_e2_b7_adv, tmp435, byte_e3, tmp436, sequence_e3_80;
		BitBlock byte_e3_adv, tmp437, tmp438, cc_range_3006_303c_3, sequence_e3_80_adv;
		BitBlock tmp439, sequence_e3_81, sequence_e3_81_adv, tmp440, sequence_e3_82;
		BitBlock tmp441, tmp442, cc_range_3080_30a1_3, sequence_e3_82_adv, tmp443;
		BitBlock sequence_e3_83, tmp444, tmp445, tmp446, cc_range_30c0_30ff_3;
		BitBlock sequence_e3_83_adv, tmp447, sequence_e3_84, tmp448, tmp449, tmp450;
		BitBlock cc_range_3105_3131_3, sequence_e3_84_adv, tmp451, byte_85;
		BitBlock sequence_e3_85, sequence_e3_85_adv, tmp452, byte_86, sequence_e3_86;
		BitBlock tmp453, tmp454, tmp455, cc_range_3180_31a0_3, sequence_e3_86_adv;
		BitBlock tmp456, byte_87, sequence_e3_87, sequence_e3_87_adv, tmp457;
		BitBlock byte_range_90_bf, byte_e3_byte_range_90_bf, tmp458;
		BitBlock byte_e3_byte_range_90_bf_sfx, byte_e4, tmp459;
		BitBlock byte_e4_byte_range_80_b5, tmp460, byte_e4_byte_range_80_b5_sfx;
		BitBlock byte_e4_adv, sequence_e4_b6, tmp461, sequence_e4_b6_byte_range_80_b5;
		BitBlock sequence_e4_b8, tmp462, sequence_e4_b8_byte_range_80_bf;
		BitBlock byte_range_e5_e8, tmp463, byte_range_e5_e8_sfx, tmp464;
		BitBlock byte_range_e5_e8_sfx_sfx, byte_e9, byte_e9_adv, sequence_e9_80;
		BitBlock tmp465, sequence_e9_80_byte_range_80_8c, byte_ea, byte_ea_adv;
		BitBlock sequence_ea_80, tmp466, sequence_ea_80_byte_range_80_94, byte_eb;
		BitBlock byte_eb_adv, sequence_eb_80, tmp467, sequence_eb_80_byte_range_80_bf;
		BitBlock byte_ed, byte_ed_adv, sequence_ed_80, tmp468;
		BitBlock sequence_ed_80_byte_range_80_a3, byte_ef, byte_range_a4_a8, tmp469;
		BitBlock byte_ef_byte_range_a4_a8, tmp470, byte_ef_byte_range_a4_a8_sfx;
		BitBlock byte_ef_adv, sequence_ef_a9, tmp471, byte_range_80_ad, tmp472;
		BitBlock sequence_ef_a9_byte_range_80_ad, sequence_ef_aa, tmp473;
		BitBlock sequence_ef_aa_byte_range_80_bf, sequence_ef_ab, byte_range_80_99;
		BitBlock tmp474, sequence_ef_ab_byte_range_80_99, sequence_ef_ac, tmp475;
		BitBlock sequence_ef_ac_9d, sequence_ef_ad, byte_range_80_81, tmp476;
		BitBlock sequence_ef_ad_byte_range_80_81, sequence_ef_ae, tmp477;
		BitBlock byte_range_80_b1, tmp478, sequence_ef_ae_byte_range_80_b1;
		BitBlock sequence_ef_af, tmp479, byte_range_93_bf, tmp480;
		BitBlock sequence_ef_af_byte_range_93_bf, sequence_ef_b0, tmp481;
		BitBlock sequence_ef_b0_byte_range_80_bf, sequence_ef_b4, tmp482, tmp483;
		BitBlock byte_range_80_bd, tmp484, sequence_ef_b4_byte_range_80_bd;
		BitBlock sequence_ef_b5, tmp485, sequence_ef_b5_byte_range_90_bf;
		BitBlock sequence_ef_b6, tmp486, sequence_ef_b6_byte_range_80_8f;
		BitBlock sequence_ef_b7, byte_range_80_87, tmp487;
		BitBlock sequence_ef_b7_byte_range_80_87, sequence_ef_b9, byte_range_b0_b4;
		BitBlock tmp488, sequence_ef_b9_byte_range_b0_b4, sequence_ef_ba, tmp489;
		BitBlock sequence_ef_ba_byte_range_80_bf, sequence_ef_bb, tmp490;
		BitBlock byte_range_80_bc, tmp491, sequence_ef_bb_byte_range_80_bc;
		BitBlock sequence_ef_bd, byte_range_a6_af, tmp492;
		BitBlock sequence_ef_bd_byte_range_a6_af, sequence_ef_be, byte_range_80_9d;
		BitBlock tmp493, sequence_ef_be_byte_range_80_9d, byte_bf, sequence_ef_bf;
		BitBlock byte_range_82_87, tmp494, sequence_ef_bf_byte_range_82_87, tmp495;
		BitBlock byte_f0, tmp496, sequence_f0_90, byte_f0_adv, tmp497;
		BitBlock sequence_f0_90_80, sequence_f0_90_adv, tmp498, tmp499, tmp500, tmp501;
		BitBlock tmp502, tmp503, tmp504, tmp505, tmp506, tmp507, tmp508;
		BitBlock cc_range_10000_1003f_4, sequence_f0_90_80_adv, tmp509;
		BitBlock sequence_f0_90_81, tmp510, tmp511, tmp512, cc_range_10040_10050_4;
		BitBlock sequence_f0_90_81_adv, tmp513, sequence_f0_90_82;
		BitBlock sequence_f0_90_82_adv, tmp514, sequence_f0_90_83, byte_range_80_ba;
		BitBlock sequence_f0_90_83_adv, tmp515, sequence_f0_90_8a;
		BitBlock cc_range_10280_102a0_4, sequence_f0_90_8a_adv, tmp516;
		BitBlock sequence_f0_90_8b, sequence_f0_90_8b_adv, tmp517, sequence_f0_90_8c;
		BitBlock tmp518, cc_range_10300_10330_4, sequence_f0_90_8c_adv, tmp519;
		BitBlock sequence_f0_90_8d, tmp520, tmp521, cc_range_10340_10342_4;
		BitBlock sequence_f0_90_8d_adv, tmp522, sequence_f0_90_8e;
		BitBlock cc_range_10380_103a0_4, sequence_f0_90_8e_adv, tmp523;
		BitBlock sequence_f0_90_8f, tmp524, cc_range_103c0_103c8_4;
		BitBlock sequence_f0_90_8f_adv, tmp525, sequence_f0_90_91;
		BitBlock sequence_f0_90_91_adv, tmp526, byte_92, sequence_f0_90_92;
		BitBlock sequence_f0_90_92_adv, tmp527, sequence_f0_90_a0, tmp528, tmp529;
		BitBlock tmp530, tmp531, tmp532, tmp533, tmp534, tmp535, tmp536, tmp537;
		BitBlock cc_range_10800_1083f_4, sequence_f0_90_a0_adv, tmp538;
		BitBlock sequence_f0_90_a1, sequence_f0_90_a1_adv, tmp539, sequence_f0_90_a4;
		BitBlock tmp540, cc_range_10900_10920_4, sequence_f0_90_a4_adv, tmp541;
		BitBlock sequence_f0_90_a6, tmp542, tmp543, tmp544, cc_range_10980_109be_4;
		BitBlock sequence_f0_90_a6_adv, tmp545, sequence_f0_90_a8, tmp546, tmp547;
		BitBlock tmp548, tmp549, tmp550, tmp551, tmp552, cc_range_10a00_10a19_4;
		BitBlock sequence_f0_90_a8_adv, tmp553, sequence_f0_90_a9, byte_range_a0_bc;
		BitBlock sequence_f0_90_a9_adv, tmp554, sequence_f0_90_ac;
		BitBlock sequence_f0_90_ac_adv, tmp555, sequence_f0_90_ad, tmp556;
		BitBlock cc_range_10b40_10b60_4, sequence_f0_90_ad_adv, tmp557;
		BitBlock sequence_f0_90_b0, sequence_f0_90_b0_adv, tmp558, sequence_f0_90_b1;
		BitBlock sequence_f0_90_b1_adv, tmp559, sequence_f0_91, tmp560;
		BitBlock sequence_f0_91_80, sequence_f0_91_adv, tmp561, tmp562;
		BitBlock byte_range_83_b7, sequence_f0_91_80_adv, tmp563, sequence_f0_91_82;
		BitBlock tmp564, byte_range_83_af, sequence_f0_91_82_adv, tmp565;
		BitBlock sequence_f0_91_83, tmp566, byte_range_90_a8, sequence_f0_91_83_adv;
		BitBlock tmp567, sequence_f0_91_84, tmp568, byte_range_83_a6;
		BitBlock sequence_f0_91_84_adv, tmp569, sequence_f0_91_86, tmp570, tmp571;
		BitBlock byte_range_83_b2, sequence_f0_91_86_adv, tmp572, sequence_f0_91_87;
		BitBlock byte_range_81_84, sequence_f0_91_87_adv, tmp573, sequence_f0_91_9a;
		BitBlock sequence_f0_91_9a_adv, tmp574, sequence_f0_92, tmp575;
		BitBlock sequence_f0_92_byte_range_80_8c, tmp576;
		BitBlock sequence_f0_92_byte_range_80_8c_sfx, sequence_f0_92_adv;
		BitBlock sequence_f0_92_8d, tmp577, tmp578, byte_range_80_ae, tmp579;
		BitBlock sequence_f0_92_8d_byte_range_80_ae, byte_93, sequence_f0_93, tmp580;
		BitBlock sequence_f0_93_byte_range_80_8f, tmp581;
		BitBlock sequence_f0_93_byte_range_80_8f_sfx, sequence_f0_93_adv;
		BitBlock sequence_f0_93_90, tmp582, sequence_f0_93_90_byte_range_80_ae;
		BitBlock byte_96, sequence_f0_96, byte_range_a0_a7, tmp583;
		BitBlock sequence_f0_96_byte_range_a0_a7, tmp584;
		BitBlock sequence_f0_96_byte_range_a0_a7_sfx, sequence_f0_96_adv;
		BitBlock sequence_f0_96_a8, tmp585, byte_range_80_b8, tmp586;
		BitBlock sequence_f0_96_a8_byte_range_80_b8, sequence_f0_96_bc, tmp587;
		BitBlock sequence_f0_96_bc_byte_range_80_bf, sequence_f0_96_bd;
		BitBlock byte_range_80_84, tmp588, sequence_f0_96_bd_byte_range_80_84;
		BitBlock sequence_f0_9b, tmp589, sequence_f0_9b_80, sequence_f0_9b_adv;
		BitBlock sequence_f0_9b_80_adv, tmp590, sequence_f0_9e, tmp591;
		BitBlock sequence_f0_9e_b8, sequence_f0_9e_adv, tmp592, tmp593, tmp594, tmp595;
		BitBlock tmp596, tmp597, tmp598, tmp599, tmp600, tmp601, tmp602, tmp603;
		BitBlock tmp604, tmp605, tmp606, cc_range_1ee00_1ee3b_4, sequence_f0_9e_b8_adv;
		BitBlock tmp607, sequence_f0_9e_b9, tmp608, tmp609, tmp610, tmp611, tmp612;
		BitBlock tmp613, tmp614, tmp615, tmp616, tmp617, tmp618, tmp619, tmp620;
		BitBlock tmp621, tmp622, tmp623, tmp624, tmp625, tmp626, tmp627, tmp628;
		BitBlock tmp629, tmp630, tmp631, tmp632, tmp633, tmp634;
		BitBlock cc_range_1ee42_1ee7e_4, sequence_f0_9e_b9_adv, tmp635;
		BitBlock sequence_f0_9e_ba, tmp636, tmp637, tmp638, tmp639, tmp640, tmp641;
		BitBlock tmp642, tmp643, tmp644, cc_range_1ee80_1eeab_4, sequence_f0_9e_ba_adv;
		BitBlock tmp645, byte_range_a0_a9, byte_f0_byte_range_a0_a9, tmp646;
		BitBlock byte_f0_byte_range_a0_a9_sfx, tmp647;
		BitBlock byte_f0_byte_range_a0_a9_sfx_sfx, sequence_f0_aa, sequence_f0_aa_adv;
		BitBlock sequence_f0_aa_80, tmp648, sequence_f0_aa_80_byte_range_80_96;
		BitBlock sequence_f0_ab, sequence_f0_ab_adv, sequence_f0_ab_80, tmp649;
		BitBlock sequence_f0_ab_80_byte_range_80_b4, sequence_f0_af;
		BitBlock sequence_f0_af_adv, sequence_f0_af_a0, tmp650;
		BitBlock sequence_f0_af_a0_byte_range_80_9d;




        struct_Lo.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_andc(tmp5, tmp4);
        byte_c2 = simd_and(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp8 = simd_and(tmp7, tmp5);
        tmp9 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp10 = simd_and(tmp9, basis_bits.bit_2);
        cc_range_aa_ba_2 = simd_and(tmp8, tmp10);
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(byte_c2, carryQ.get_carry_in(0), byte_c2_adv));
        tmp11 = simd_and(byte_c2_adv, cc_range_aa_ba_2);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp11);
        tmp12 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp13 = simd_and(tmp12, tmp5);
        byte_c6 = simd_and(tmp3, tmp13);
        tmp14 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp15 = simd_and(tmp9, tmp14);
        tmp16 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp17 = simd_and(tmp7, tmp16);
        byte_bb = simd_and(tmp15, tmp17);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(byte_c6, carryQ.get_carry_in(1), byte_c6_adv));
        tmp18 = simd_and(byte_c6_adv, byte_bb);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp18);
        tmp19 = simd_and(tmp12, tmp16);
        byte_c7 = simd_and(tmp3, tmp19);
        tmp20 = simd_andc(tmp9, tmp2);
        byte_range_80_83 = simd_andc(tmp20, tmp4);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(byte_c7, carryQ.get_carry_in(2), byte_c7_adv));
        tmp21 = simd_and(byte_c7_adv, byte_range_80_83);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp21);
        byte_ca = simd_and(tmp3, tmp8);
        tmp22 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp23 = simd_and(tmp9, tmp22);
        tmp24 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp25 = simd_andc(tmp12, tmp24);
        byte_94 = simd_and(tmp23, tmp25);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(byte_ca, carryQ.get_carry_in(3), byte_ca_adv));
        tmp26 = simd_and(byte_ca_adv, byte_94);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp26);
        tmp27 = simd_and(tmp1, tmp22);
        byte_d7 = simd_and(tmp27, tmp19);
        tmp28 = simd_or(basis_bits.bit_5, tmp16);
        tmp29 = simd_and(basis_bits.bit_4, tmp28);
        tmp30 = simd_or(basis_bits.bit_3, tmp29);
        tmp31 = simd_not(tmp30);
        tmp32 = simd_or(simd_and(basis_bits.bit_2, tmp31), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
        tmp33 = simd_and(tmp9, tmp32);
        tmp34 = simd_andc(tmp15, tmp4);
        tmp35 = simd_andc(tmp34, tmp16);
        cc_range_5d0_5f0_2 = simd_or(tmp33, tmp35);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(byte_d7, carryQ.get_carry_in(4), byte_d7_adv));
        tmp36 = simd_and(byte_d7_adv, cc_range_5d0_5f0_2);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp36);
        tmp37 = simd_andc(tmp7, tmp24);
        byte_d8 = simd_and(tmp27, tmp37);
        byte_range_a0_bf = simd_and(tmp9, basis_bits.bit_2);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(byte_d8, carryQ.get_carry_in(5), byte_d8_adv));
        tmp38 = simd_and(byte_d8_adv, byte_range_a0_bf);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp38);
        tmp39 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp40 = simd_and(tmp7, tmp39);
        byte_d9 = simd_and(tmp27, tmp40);
        tmp41 = simd_not(tmp28);
        tmp42 = simd_or(basis_bits.bit_5, tmp24);
        tmp43 = simd_or(simd_and(basis_bits.bit_4, tmp41), simd_andc(tmp42, basis_bits.bit_4));
        tmp44 = simd_and(tmp20, tmp43);
        tmp45 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp46 = simd_and(tmp9, tmp45);
        tmp47 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp48 = simd_and(tmp47, basis_bits.bit_6);
        tmp49 = simd_and(tmp46, tmp48);
        tmp50 = simd_or(tmp44, tmp49);
        tmp51 = simd_or(basis_bits.bit_4, tmp42);
        tmp52 = simd_and(tmp15, tmp51);
        cc_range_641_671_2 = simd_or(tmp50, tmp52);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(byte_d9, carryQ.get_carry_in(6), byte_d9_adv));
        tmp53 = simd_and(byte_d9_adv, cc_range_641_671_2);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp53);
        byte_da = simd_and(tmp27, tmp8);
        byte_range_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(byte_da, carryQ.get_carry_in(7), byte_da_adv));
        tmp54 = simd_and(byte_da_adv, byte_range_80_bf);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp54);
        byte_db = simd_and(tmp27, tmp17);
        tmp55 = simd_andc(byte_range_80_bf, basis_bits.bit_2);
        tmp56 = simd_and(basis_bits.bit_3, tmp4);
        tmp57 = simd_andc(tmp55, tmp56);
        tmp58 = simd_and(byte_range_80_bf, tmp22);
        tmp59 = simd_and(tmp12, tmp39);
        tmp60 = simd_and(tmp58, tmp59);
        tmp61 = simd_or(tmp57, tmp60);
        tmp62 = simd_and(byte_range_80_bf, tmp45);
        tmp63 = simd_and(tmp62, tmp48);
        tmp64 = simd_or(tmp61, tmp63);
        tmp65 = simd_and(byte_range_80_bf, tmp14);
        tmp66 = simd_and(tmp65, basis_bits.bit_4);
        tmp67 = simd_not(tmp24);
        tmp68 = simd_or(simd_and(basis_bits.bit_5, tmp67), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        tmp69 = simd_and(tmp66, tmp68);
        tmp70 = simd_or(tmp64, tmp69);
        tmp71 = simd_and(tmp47, tmp16);
        tmp72 = simd_and(tmp65, tmp71);
        cc_range_6c0_6ff_2 = simd_or(tmp70, tmp72);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(byte_db, carryQ.get_carry_in(8), byte_db_adv));
        tmp73 = simd_and(byte_db_adv, cc_range_6c0_6ff_2);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp73);
        tmp74 = simd_andc(tmp47, tmp24);
        byte_dc = simd_and(tmp27, tmp74);
        tmp75 = simd_or(tmp4, tmp24);
        tmp76 = simd_andc(tmp58, tmp75);
        tmp77 = simd_not(basis_bits.bit_3);
        tmp78 = simd_or(tmp4, basis_bits.bit_6);
        tmp79 = simd_and(basis_bits.bit_3, tmp78);
        tmp80 = simd_or(simd_and(basis_bits.bit_2, tmp77), simd_andc(tmp79, basis_bits.bit_2));
        tmp81 = simd_and(byte_range_80_bf, tmp80);
        cc_range_710_712_2 = simd_or(tmp76, tmp81);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(byte_dc, carryQ.get_carry_in(9), byte_dc_adv));
        tmp82 = simd_and(byte_dc_adv, cc_range_710_712_2);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp82);
        tmp83 = simd_and(tmp47, tmp39);
        byte_dd = simd_and(tmp27, tmp83);
        tmp84 = simd_and(tmp47, tmp24);
        tmp85 = simd_or(basis_bits.bit_3, tmp84);
        tmp86 = simd_or(basis_bits.bit_2, tmp85);
        byte_range_8d_bf = simd_and(byte_range_80_bf, tmp86);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(byte_dd, carryQ.get_carry_in(10), byte_dd_adv));
        tmp87 = simd_and(byte_dd_adv, byte_range_8d_bf);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp87);
        tmp88 = simd_and(tmp47, tmp5);
        byte_de = simd_and(tmp27, tmp88);
        tmp89 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp90 = simd_or(basis_bits.bit_4, tmp89);
        tmp91 = simd_or(basis_bits.bit_3, tmp90);
        tmp92 = simd_and(basis_bits.bit_2, tmp91);
        tmp93 = simd_andc(byte_range_80_bf, tmp92);
        tmp94 = simd_andc(tmp39, tmp4);
        tmp95 = simd_and(tmp65, tmp94);
        cc_range_780_7b1_2 = simd_or(tmp93, tmp95);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(byte_de, carryQ.get_carry_in(11), byte_de_adv));
        tmp96 = simd_and(byte_de_adv, cc_range_780_7b1_2);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp96);
        byte_df = simd_and(tmp27, tmp71);
        tmp97 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
        tmp98 = simd_and(basis_bits.bit_4, tmp97);
        tmp99 = simd_or(basis_bits.bit_3, tmp98);
        tmp100 = simd_or(simd_and(basis_bits.bit_2, tmp31), simd_andc(tmp99, basis_bits.bit_2));
        byte_range_8a_aa = simd_and(byte_range_80_bf, tmp100);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(byte_df, carryQ.get_carry_in(12), byte_df_adv));
        tmp101 = simd_and(byte_df_adv, byte_range_8a_aa);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp101);
        tmp102 = simd_and(tmp1, tmp45);
        byte_e0 = simd_andc(tmp102, tmp75);
        byte_a0 = simd_andc(tmp62, tmp75);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(byte_e0, carryQ.get_carry_in(13), tmp103));
        sequence_e0_a0 = simd_and(tmp103, byte_a0);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(byte_e0, carryQ.get_carry_in(14), byte_e0_adv));
        tmp104 = simd_and(basis_bits.bit_3, tmp90);
        byte_range_80_95 = simd_andc(tmp55, tmp104);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(sequence_e0_a0, carryQ.get_carry_in(15), sequence_e0_a0_adv));
        tmp105 = simd_and(sequence_e0_a0_adv, byte_range_80_95);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp105);
        byte_a1 = simd_and(tmp62, tmp94);
        sequence_e0_a1 = simd_and(byte_e0_adv, byte_a1);
        tmp106 = simd_and(basis_bits.bit_4, tmp42);
        tmp107 = simd_and(basis_bits.bit_3, tmp106);
        byte_range_80_98 = simd_andc(tmp55, tmp107);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(sequence_e0_a1, carryQ.get_carry_in(16), sequence_e0_a1_adv));
        tmp108 = simd_and(sequence_e0_a1_adv, byte_range_80_98);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp108);
        byte_a2 = simd_and(tmp62, tmp6);
        sequence_e0_a2 = simd_and(byte_e0_adv, byte_a2);
        tmp109 = simd_and(basis_bits.bit_5, tmp24);
        tmp110 = simd_not(tmp109);
        tmp111 = simd_or(simd_and(basis_bits.bit_4, tmp110), simd_andc(tmp97, basis_bits.bit_4));
        tmp112 = simd_andc(tmp75, tmp111);
        cc_range_8a0_8a2_3 = simd_andc(tmp62, tmp112);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(sequence_e0_a2, carryQ.get_carry_in(17), sequence_e0_a2_adv));
        tmp113 = simd_and(sequence_e0_a2_adv, cc_range_8a0_8a2_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp113);
        byte_a4 = simd_and(tmp62, tmp25);
        sequence_e0_a4 = simd_and(byte_e0_adv, byte_a4);
        tmp114 = simd_and(basis_bits.bit_3, tmp98);
        tmp115 = simd_not(tmp114);
        tmp116 = simd_or(basis_bits.bit_3, tmp4);
        tmp117 = simd_or(simd_and(basis_bits.bit_2, tmp115), simd_andc(tmp116, basis_bits.bit_2));
        tmp118 = simd_and(byte_range_80_bf, tmp117);
        tmp119 = simd_and(tmp65, tmp83);
        cc_range_904_93d_3 = simd_or(tmp118, tmp119);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(sequence_e0_a4, carryQ.get_carry_in(18), sequence_e0_a4_adv));
        tmp120 = simd_and(sequence_e0_a4_adv, cc_range_904_93d_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp120);
        byte_a5 = simd_and(tmp62, tmp59);
        sequence_e0_a5 = simd_and(byte_e0_adv, byte_a5);
        tmp121 = simd_or(basis_bits.bit_3, tmp78);
        tmp122 = simd_not(tmp121);
        tmp123 = simd_and(basis_bits.bit_3, basis_bits.bit_4);
        tmp124 = simd_or(simd_and(basis_bits.bit_2, tmp122), simd_andc(tmp123, basis_bits.bit_2));
        tmp125 = simd_and(byte_range_80_bf, tmp124);
        tmp126 = simd_or(tmp76, tmp125);
        tmp127 = simd_andc(tmp65, basis_bits.bit_4);
        tmp128 = simd_and(tmp127, tmp97);
        tmp129 = simd_or(tmp126, tmp128);
        tmp130 = simd_and(tmp66, tmp42);
        cc_range_950_979_3 = simd_or(tmp129, tmp130);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(sequence_e0_a5, carryQ.get_carry_in(19), sequence_e0_a5_adv));
        tmp131 = simd_and(sequence_e0_a5_adv, cc_range_950_979_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp131);
        byte_a6 = simd_and(tmp62, tmp13);
        sequence_e0_a6 = simd_and(byte_e0_adv, byte_a6);
        tmp132 = simd_andc(byte_range_80_bf, tmp2);
        tmp133 = simd_or(simd_and(basis_bits.bit_4, tmp110), simd_andc(tmp109, basis_bits.bit_4));
        tmp134 = simd_and(tmp132, tmp133);
        tmp135 = simd_not(tmp75);
        tmp136 = simd_or(simd_and(basis_bits.bit_3, tmp135), simd_andc(tmp71, basis_bits.bit_3));
        tmp137 = simd_and(tmp55, tmp136);
        tmp138 = simd_or(tmp134, tmp137);
        tmp139 = simd_or(basis_bits.bit_3, tmp106);
        tmp140 = simd_not(tmp139);
        tmp141 = simd_or(tmp4, tmp16);
        tmp142 = simd_and(basis_bits.bit_3, tmp141);
        tmp143 = simd_or(simd_and(basis_bits.bit_2, tmp140), simd_andc(tmp142, basis_bits.bit_2));
        tmp144 = simd_and(byte_range_80_bf, tmp143);
        tmp145 = simd_or(tmp138, tmp144);
        tmp146 = simd_and(byte_range_80_bf, basis_bits.bit_2);
        tmp147 = simd_or(simd_and(basis_bits.bit_3, tmp135), simd_andc(tmp98, basis_bits.bit_3));
        tmp148 = simd_and(tmp146, tmp147);
        tmp149 = simd_or(tmp145, tmp148);
        tmp150 = simd_and(tmp65, tmp6);
        tmp151 = simd_or(tmp149, tmp150);
        tmp152 = simd_not(tmp97);
        tmp153 = simd_or(simd_and(basis_bits.bit_4, tmp152), simd_andc(tmp89, basis_bits.bit_4));
        tmp154 = simd_and(tmp65, tmp153);
        tmp155 = simd_or(tmp151, tmp154);
        cc_range_985_9bd_3 = simd_or(tmp155, tmp119);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(sequence_e0_a6, carryQ.get_carry_in(20), sequence_e0_a6_adv));
        tmp156 = simd_and(sequence_e0_a6_adv, cc_range_985_9bd_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp156);
        byte_a7 = simd_and(tmp62, tmp19);
        sequence_e0_a7 = simd_and(byte_e0_adv, byte_a7);
        tmp157 = simd_and(tmp132, tmp88);
        tmp158 = simd_andc(tmp47, basis_bits.bit_6);
        tmp159 = simd_and(tmp58, tmp158);
        tmp160 = simd_or(tmp157, tmp159);
        tmp161 = simd_and(basis_bits.bit_3, tmp71);
        tmp162 = simd_or(simd_and(basis_bits.bit_2, tmp122), simd_andc(tmp161, basis_bits.bit_2));
        tmp163 = simd_and(byte_range_80_bf, tmp162);
        tmp164 = simd_or(tmp160, tmp163);
        tmp165 = simd_andc(tmp65, tmp78);
        cc_range_9ce_9f0_3 = simd_or(tmp164, tmp165);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(sequence_e0_a7, carryQ.get_carry_in(21), sequence_e0_a7_adv));
        tmp166 = simd_and(sequence_e0_a7_adv, cc_range_9ce_9f0_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp166);
        byte_a8 = simd_and(tmp62, tmp37);
        sequence_e0_a8 = simd_and(byte_e0_adv, byte_a8);
        tmp167 = simd_or(simd_and(basis_bits.bit_4, tmp41), simd_andc(tmp109, basis_bits.bit_4));
        tmp168 = simd_and(tmp132, tmp167);
        tmp169 = simd_or(tmp168, tmp137);
        tmp170 = simd_or(tmp169, tmp144);
        tmp171 = simd_or(tmp170, tmp148);
        tmp172 = simd_andc(basis_bits.bit_6, tmp4);
        tmp173 = simd_and(tmp65, tmp172);
        tmp174 = simd_or(tmp171, tmp173);
        tmp175 = simd_and(tmp65, tmp12);
        tmp176 = simd_not(basis_bits.bit_7);
        tmp177 = simd_or(simd_and(basis_bits.bit_6, tmp176), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
        tmp178 = simd_and(tmp175, tmp177);
        tmp179 = simd_or(tmp174, tmp178);
        tmp180 = simd_andc(tmp7, basis_bits.bit_6);
        tmp181 = simd_and(tmp65, tmp180);
        cc_range_a05_a38_3 = simd_or(tmp179, tmp181);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(sequence_e0_a8, carryQ.get_carry_in(22), sequence_e0_a8_adv));
        tmp182 = simd_and(sequence_e0_a8_adv, cc_range_a05_a38_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp182);
        byte_a9 = simd_and(tmp62, tmp40);
        sequence_e0_a9 = simd_and(byte_e0_adv, byte_a9);
        tmp183 = simd_and(tmp58, basis_bits.bit_4);
        tmp184 = simd_or(simd_and(basis_bits.bit_5, tmp67), simd_andc(tmp24, basis_bits.bit_5));
        tmp185 = simd_and(tmp183, tmp184);
        tmp186 = simd_and(tmp58, tmp88);
        tmp187 = simd_or(tmp185, tmp186);
        tmp188 = simd_and(tmp127, tmp68);
        cc_range_a59_a72_3 = simd_or(tmp187, tmp188);
        carryQ.cq[23] = carryout2carry(pablo_blk_Advance(sequence_e0_a9, carryQ.get_carry_in(23), sequence_e0_a9_adv));
        tmp189 = simd_and(sequence_e0_a9_adv, cc_range_a59_a72_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp189);
        byte_aa = simd_and(tmp62, tmp8);
        sequence_e0_aa = simd_and(byte_e0_adv, byte_aa);
        tmp190 = simd_not(tmp89);
        tmp191 = simd_or(simd_and(basis_bits.bit_4, tmp190), simd_andc(tmp109, basis_bits.bit_4));
        tmp192 = simd_and(tmp132, tmp191);
        tmp193 = simd_not(tmp78);
        tmp194 = simd_or(simd_and(basis_bits.bit_3, tmp193), simd_andc(tmp71, basis_bits.bit_3));
        tmp195 = simd_and(tmp55, tmp194);
        tmp196 = simd_or(tmp192, tmp195);
        tmp197 = simd_or(tmp196, tmp144);
        tmp198 = simd_or(tmp197, tmp148);
        tmp199 = simd_or(tmp198, tmp173);
        tmp200 = simd_or(simd_and(basis_bits.bit_4, tmp152), simd_andc(tmp109, basis_bits.bit_4));
        tmp201 = simd_and(tmp65, tmp200);
        tmp202 = simd_or(tmp199, tmp201);
        cc_range_a85_abd_3 = simd_or(tmp202, tmp119);
        carryQ.cq[24] = carryout2carry(pablo_blk_Advance(sequence_e0_aa, carryQ.get_carry_in(24), sequence_e0_aa_adv));
        tmp203 = simd_and(sequence_e0_aa_adv, cc_range_a85_abd_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp203);
        byte_ab = simd_and(tmp62, tmp17);
        sequence_e0_ab = simd_and(byte_e0_adv, byte_ab);
        tmp204 = simd_andc(tmp62, tmp78);
        cc_range_ad0_ae0_3 = simd_or(tmp76, tmp204);
        carryQ.cq[25] = carryout2carry(pablo_blk_Advance(sequence_e0_ab, carryQ.get_carry_in(25), sequence_e0_ab_adv));
        tmp205 = simd_and(sequence_e0_ab_adv, cc_range_ad0_ae0_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp205);
        byte_ac = simd_and(tmp62, tmp74);
        sequence_e0_ac = simd_and(byte_e0_adv, byte_ac);
        tmp206 = simd_or(tmp149, tmp173);
        tmp207 = simd_or(tmp206, tmp201);
        cc_range_b05_b3d_3 = simd_or(tmp207, tmp119);
        carryQ.cq[26] = carryout2carry(pablo_blk_Advance(sequence_e0_ac, carryQ.get_carry_in(26), sequence_e0_ac_adv));
        tmp208 = simd_and(sequence_e0_ac_adv, cc_range_b05_b3d_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp208);
        byte_ad = simd_and(tmp62, tmp83);
        sequence_e0_ad = simd_and(byte_e0_adv, byte_ad);
        tmp209 = simd_or(tmp159, tmp163);
        cc_range_b5c_b71_3 = simd_or(tmp209, tmp95);
        carryQ.cq[27] = carryout2carry(pablo_blk_Advance(sequence_e0_ad, carryQ.get_carry_in(27), sequence_e0_ad_adv));
        tmp210 = simd_and(sequence_e0_ad_adv, cc_range_b5c_b71_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp210);
        byte_ae = simd_and(tmp62, tmp88);
        sequence_e0_ae = simd_and(byte_e0_adv, byte_ae);
        tmp211 = simd_andc(tmp16, tmp4);
        tmp212 = simd_or(tmp211, tmp167);
        tmp213 = simd_and(tmp132, tmp212);
        tmp214 = simd_or(simd_and(basis_bits.bit_3, tmp135), simd_andc(tmp48, basis_bits.bit_3));
        tmp215 = simd_and(tmp55, tmp214);
        tmp216 = simd_or(tmp213, tmp215);
        tmp217 = simd_andc(tmp58, basis_bits.bit_4);
        tmp218 = simd_not(basis_bits.bit_6);
        tmp219 = simd_or(simd_and(basis_bits.bit_5, tmp218), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        tmp220 = simd_and(tmp217, tmp219);
        tmp221 = simd_or(tmp216, tmp220);
        tmp222 = simd_and(tmp58, tmp7);
        tmp223 = simd_and(tmp222, tmp177);
        tmp224 = simd_or(tmp221, tmp223);
        tmp225 = simd_and(tmp58, tmp74);
        tmp226 = simd_or(tmp224, tmp225);
        tmp227 = simd_and(tmp58, tmp48);
        tmp228 = simd_or(tmp226, tmp227);
        tmp229 = simd_andc(tmp62, basis_bits.bit_4);
        tmp230 = simd_or(simd_and(basis_bits.bit_5, tmp67), simd_andc(tmp16, basis_bits.bit_5));
        tmp231 = simd_and(tmp229, tmp230);
        tmp232 = simd_or(tmp228, tmp231);
        tmp233 = simd_and(tmp62, tmp7);
        tmp234 = simd_andc(tmp233, tmp16);
        tmp235 = simd_or(tmp232, tmp234);
        tmp236 = simd_not(tmp98);
        tmp237 = simd_or(simd_and(basis_bits.bit_3, tmp236), simd_andc(tmp48, basis_bits.bit_3));
        tmp238 = simd_and(tmp146, tmp237);
        cc_range_b83_bae_3 = simd_or(tmp235, tmp238);
        carryQ.cq[28] = carryout2carry(pablo_blk_Advance(sequence_e0_ae, carryQ.get_carry_in(28), sequence_e0_ae_adv));
        tmp239 = simd_and(sequence_e0_ae_adv, cc_range_b83_bae_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp239);
        byte_af = simd_and(tmp62, tmp71);
        sequence_e0_af = simd_and(byte_e0_adv, byte_af);
        byte_90 = simd_andc(tmp58, tmp75);
        carryQ.cq[29] = carryout2carry(pablo_blk_Advance(sequence_e0_af, carryQ.get_carry_in(29), sequence_e0_af_adv));
        tmp240 = simd_and(sequence_e0_af_adv, byte_90);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp240);
        byte_b0 = simd_andc(tmp65, tmp75);
        sequence_e0_b0 = simd_and(byte_e0_adv, byte_b0);
        tmp241 = simd_or(tmp134, tmp215);
        tmp242 = simd_or(simd_and(basis_bits.bit_2, tmp140), simd_andc(tmp79, basis_bits.bit_2));
        tmp243 = simd_and(byte_range_80_bf, tmp242);
        tmp244 = simd_or(tmp241, tmp243);
        tmp245 = simd_not(tmp4);
        tmp246 = simd_or(simd_and(basis_bits.bit_3, tmp245), simd_andc(tmp98, basis_bits.bit_3));
        tmp247 = simd_and(tmp146, tmp246);
        tmp248 = simd_or(tmp244, tmp247);
        tmp249 = simd_or(tmp248, tmp201);
        cc_range_c05_c3d_3 = simd_or(tmp249, tmp119);
        carryQ.cq[30] = carryout2carry(pablo_blk_Advance(sequence_e0_b0, carryQ.get_carry_in(30), sequence_e0_b0_adv));
        tmp250 = simd_and(sequence_e0_b0_adv, cc_range_c05_c3d_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp250);
        byte_b1 = simd_and(tmp65, tmp94);
        sequence_e0_b1 = simd_and(byte_e0_adv, byte_b1);
        tmp251 = simd_and(tmp58, tmp180);
        cc_range_c58_c60_3 = simd_or(tmp251, tmp204);
        carryQ.cq[31] = carryout2carry(pablo_blk_Advance(sequence_e0_b1, carryQ.get_carry_in(31), sequence_e0_b1_adv));
        tmp252 = simd_and(sequence_e0_b1_adv, cc_range_c58_c60_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp252);
        byte_b2 = simd_and(tmp65, tmp6);
        sequence_e0_b2 = simd_and(byte_e0_adv, byte_b2);
        cc_range_c85_cbd_3 = simd_or(tmp249, tmp119);
        carryQ.cq[32] = carryout2carry(pablo_blk_Advance(sequence_e0_b2, carryQ.get_carry_in(32), sequence_e0_b2_adv));
        tmp253 = simd_and(sequence_e0_b2_adv, cc_range_c85_cbd_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp253);
        byte_b3 = simd_and(tmp65, tmp211);
        sequence_e0_b3 = simd_and(byte_e0_adv, byte_b3);
        tmp254 = simd_or(tmp186, tmp204);
        tmp255 = simd_andc(tmp65, tmp4);
        tmp256 = simd_and(tmp255, tmp177);
        cc_range_cde_cf1_3 = simd_or(tmp254, tmp256);
        carryQ.cq[33] = carryout2carry(pablo_blk_Advance(sequence_e0_b3, carryQ.get_carry_in(33), sequence_e0_b3_adv));
        tmp257 = simd_and(sequence_e0_b3_adv, cc_range_cde_cf1_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp257);
        byte_b4 = simd_and(tmp65, tmp25);
        sequence_e0_b4 = simd_and(byte_e0_adv, byte_b4);
        tmp258 = simd_and(basis_bits.bit_3, tmp29);
        tmp259 = simd_not(tmp258);
        tmp260 = simd_or(simd_and(basis_bits.bit_2, tmp259), simd_andc(tmp79, basis_bits.bit_2));
        tmp261 = simd_and(byte_range_80_bf, tmp260);
        tmp262 = simd_or(tmp241, tmp261);
        cc_range_d05_d3d_3 = simd_or(tmp262, tmp119);
        carryQ.cq[34] = carryout2carry(pablo_blk_Advance(sequence_e0_b4, carryQ.get_carry_in(34), sequence_e0_b4_adv));
        tmp263 = simd_and(sequence_e0_b4_adv, cc_range_d05_d3d_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp263);
        byte_b5 = simd_and(tmp65, tmp59);
        sequence_e0_b5 = simd_and(byte_e0_adv, byte_b5);
        tmp264 = simd_or(tmp157, tmp204);
        tmp265 = simd_and(tmp66, tmp97);
        cc_range_d4e_d7a_3 = simd_or(tmp264, tmp265);
        carryQ.cq[35] = carryout2carry(pablo_blk_Advance(sequence_e0_b5, carryQ.get_carry_in(35), sequence_e0_b5_adv));
        tmp266 = simd_and(sequence_e0_b5_adv, cc_range_d4e_d7a_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp266);
        byte_b6 = simd_and(tmp65, tmp13);
        sequence_e0_b6 = simd_and(byte_e0_adv, byte_b6);
        tmp267 = simd_and(basis_bits.bit_5, tmp16);
        tmp268 = simd_or(basis_bits.bit_4, tmp267);
        tmp269 = simd_not(tmp268);
        tmp270 = simd_or(basis_bits.bit_4, tmp109);
        tmp271 = simd_or(simd_and(basis_bits.bit_3, tmp269), simd_andc(tmp270, basis_bits.bit_3));
        tmp272 = simd_and(tmp55, tmp271);
        tmp273 = simd_not(tmp79);
        tmp274 = simd_or(simd_and(basis_bits.bit_2, tmp273), simd_andc(tmp114, basis_bits.bit_2));
        tmp275 = simd_and(byte_range_80_bf, tmp274);
        tmp276 = simd_or(tmp272, tmp275);
        tmp277 = simd_not(basis_bits.bit_5);
        tmp278 = simd_or(simd_and(basis_bits.bit_4, tmp277), simd_andc(tmp28, basis_bits.bit_4));
        tmp279 = simd_and(tmp65, tmp278);
        tmp280 = simd_or(tmp276, tmp279);
        cc_range_d85_dbd_3 = simd_or(tmp280, tmp119);
        carryQ.cq[36] = carryout2carry(pablo_blk_Advance(sequence_e0_b6, carryQ.get_carry_in(36), sequence_e0_b6_adv));
        tmp281 = simd_and(sequence_e0_b6_adv, cc_range_d85_dbd_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp281);
        byte_b7 = simd_and(tmp65, tmp19);
        sequence_e0_b7 = simd_and(byte_e0_adv, byte_b7);
        tmp282 = simd_andc(tmp132, basis_bits.bit_4);
        byte_range_80_86 = simd_andc(tmp282, tmp267);
        carryQ.cq[37] = carryout2carry(pablo_blk_Advance(sequence_e0_b7, carryQ.get_carry_in(37), sequence_e0_b7_adv));
        tmp283 = simd_and(sequence_e0_b7_adv, byte_range_80_86);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp283);
        byte_b8 = simd_and(tmp65, tmp37);
        sequence_e0_b8 = simd_and(byte_e0_adv, byte_b8);
        tmp284 = simd_and(basis_bits.bit_3, tmp75);
        tmp285 = simd_not(tmp284);
        tmp286 = simd_or(basis_bits.bit_3, tmp75);
        tmp287 = simd_or(simd_and(basis_bits.bit_2, tmp285), simd_andc(tmp286, basis_bits.bit_2));
        tmp288 = simd_and(byte_range_80_bf, tmp287);
        cc_range_e01_e32_3 = simd_or(tmp288, tmp173);
        carryQ.cq[38] = carryout2carry(pablo_blk_Advance(sequence_e0_b8, carryQ.get_carry_in(38), sequence_e0_b8_adv));
        tmp289 = simd_and(sequence_e0_b8_adv, cc_range_e01_e32_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp289);
        byte_b9 = simd_and(tmp65, tmp40);
        sequence_e0_b9 = simd_and(byte_e0_adv, byte_b9);
        byte_range_80_85 = simd_andc(tmp282, tmp89);
        carryQ.cq[39] = carryout2carry(pablo_blk_Advance(sequence_e0_b9, carryQ.get_carry_in(39), sequence_e0_b9_adv));
        tmp290 = simd_and(sequence_e0_b9_adv, byte_range_80_85);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp290);
        byte_ba = simd_and(tmp65, tmp8);
        sequence_e0_ba = simd_and(byte_e0_adv, byte_ba);
        tmp291 = simd_andc(tmp132, tmp4);
        tmp292 = simd_and(tmp291, tmp177);
        tmp293 = simd_and(tmp132, tmp25);
        tmp294 = simd_or(tmp292, tmp293);
        tmp295 = simd_not(tmp42);
        tmp296 = simd_or(simd_and(basis_bits.bit_4, tmp295), simd_andc(tmp267, basis_bits.bit_4));
        tmp297 = simd_and(tmp132, tmp296);
        tmp298 = simd_or(tmp294, tmp297);
        tmp299 = simd_and(tmp132, tmp8);
        tmp300 = simd_or(tmp298, tmp299);
        tmp301 = simd_and(tmp132, tmp83);
        tmp302 = simd_or(tmp300, tmp301);
        tmp303 = simd_and(tmp58, tmp12);
        tmp304 = simd_or(tmp302, tmp303);
        tmp305 = simd_and(tmp183, tmp42);
        tmp306 = simd_or(tmp304, tmp305);
        tmp307 = simd_andc(tmp62, tmp4);
        tmp308 = simd_and(tmp307, tmp24);
        tmp309 = simd_or(tmp306, tmp308);
        tmp310 = simd_or(tmp309, byte_a5);
        tmp311 = simd_or(tmp310, byte_a7);
        tmp312 = simd_and(tmp7, basis_bits.bit_6);
        tmp313 = simd_and(tmp62, tmp312);
        tmp314 = simd_or(tmp311, tmp313);
        tmp315 = simd_or(simd_and(basis_bits.bit_3, tmp135), simd_andc(tmp84, basis_bits.bit_3));
        tmp316 = simd_and(tmp146, tmp315);
        tmp317 = simd_or(tmp314, tmp316);
        tmp318 = simd_or(tmp317, tmp173);
        cc_range_e81_ebd_3 = simd_or(tmp318, tmp119);
        carryQ.cq[40] = carryout2carry(pablo_blk_Advance(sequence_e0_ba, carryQ.get_carry_in(40), sequence_e0_ba_adv));
        tmp319 = simd_and(sequence_e0_ba_adv, cc_range_e81_ebd_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp319);
        sequence_e0_bb = simd_and(byte_e0_adv, byte_bb);
        tmp320 = simd_andc(tmp282, tmp109);
        tmp321 = simd_and(tmp58, tmp47);
        cc_range_ec0_edc_3 = simd_or(tmp320, tmp321);
        carryQ.cq[41] = carryout2carry(pablo_blk_Advance(sequence_e0_bb, carryQ.get_carry_in(41), sequence_e0_bb_adv));
        tmp322 = simd_and(sequence_e0_bb_adv, cc_range_ec0_edc_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp322);
        byte_bc = simd_and(tmp65, tmp74);
        sequence_e0_bc = simd_and(byte_e0_adv, byte_bc);
        byte_80 = simd_andc(tmp132, tmp75);
        carryQ.cq[42] = carryout2carry(pablo_blk_Advance(sequence_e0_bc, carryQ.get_carry_in(42), sequence_e0_bc_adv));
        tmp323 = simd_and(sequence_e0_bc_adv, byte_80);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp323);
        byte_bd = simd_and(tmp65, tmp83);
        sequence_e0_bd = simd_and(byte_e0_adv, byte_bd);
        tmp324 = simd_not(tmp85);
        tmp325 = simd_or(simd_and(basis_bits.bit_2, tmp324), simd_andc(tmp139, basis_bits.bit_2));
        tmp326 = simd_and(byte_range_80_bf, tmp325);
        cc_range_f40_f49_3 = simd_or(tmp282, tmp326);
        carryQ.cq[43] = carryout2carry(pablo_blk_Advance(sequence_e0_bd, carryQ.get_carry_in(43), sequence_e0_bd_adv));
        tmp327 = simd_and(sequence_e0_bd_adv, cc_range_f40_f49_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp327);
        byte_be = simd_and(tmp65, tmp88);
        sequence_e0_be = simd_and(byte_e0_adv, byte_be);
        tmp328 = simd_and(tmp132, basis_bits.bit_4);
        byte_range_88_8c = simd_andc(tmp328, tmp109);
        carryQ.cq[44] = carryout2carry(pablo_blk_Advance(sequence_e0_be, carryQ.get_carry_in(44), sequence_e0_be_adv));
        tmp329 = simd_and(sequence_e0_be_adv, byte_range_88_8c);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp329);
        byte_e1 = simd_and(tmp102, tmp94);
        carryQ.cq[45] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(45), tmp330));
        sequence_e1_80 = simd_and(tmp330, byte_80);
        carryQ.cq[46] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(46), byte_e1_adv));
        tmp331 = simd_and(basis_bits.bit_2, tmp30);
        tmp332 = simd_andc(byte_range_80_bf, tmp331);
        cc_range_1000_103f_3 = simd_or(tmp332, tmp72);
        carryQ.cq[47] = carryout2carry(pablo_blk_Advance(sequence_e1_80, carryQ.get_carry_in(47), sequence_e1_80_adv));
        tmp333 = simd_and(sequence_e1_80_adv, cc_range_1000_103f_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp333);
        byte_81 = simd_and(tmp132, tmp94);
        sequence_e1_81 = simd_and(byte_e1_adv, byte_81);
        tmp334 = simd_andc(tmp217, tmp89);
        tmp335 = simd_and(tmp183, tmp219);
        tmp336 = simd_or(tmp334, tmp335);
        tmp337 = simd_or(tmp336, byte_a1);
        tmp338 = simd_and(tmp62, tmp12);
        tmp339 = simd_and(tmp338, tmp177);
        tmp340 = simd_or(tmp337, tmp339);
        tmp341 = simd_and(tmp146, tmp214);
        tmp342 = simd_or(tmp340, tmp341);
        tmp343 = simd_and(tmp65, tmp270);
        cc_range_1050_1075_3 = simd_or(tmp342, tmp343);
        carryQ.cq[48] = carryout2carry(pablo_blk_Advance(sequence_e1_81, carryQ.get_carry_in(48), sequence_e1_81_adv));
        tmp344 = simd_and(sequence_e1_81_adv, cc_range_1050_1075_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp344);
        byte_82 = simd_and(tmp132, tmp6);
        sequence_e1_82 = simd_and(byte_e1_adv, byte_82);
        tmp345 = simd_andc(tmp78, tmp88);
        cc_range_1080_108e_3 = simd_andc(tmp132, tmp345);
        carryQ.cq[49] = carryout2carry(pablo_blk_Advance(sequence_e1_82, carryQ.get_carry_in(49), sequence_e1_82_adv));
        tmp346 = simd_and(sequence_e1_82_adv, cc_range_1080_108e_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp346);
        byte_83 = simd_and(tmp132, tmp211);
        sequence_e1_83 = simd_and(byte_e1_adv, byte_83);
        tmp347 = simd_or(simd_and(basis_bits.bit_2, tmp259), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
        tmp348 = simd_and(byte_range_80_bf, tmp347);
        tmp349 = simd_and(tmp65, tmp47);
        tmp350 = simd_and(tmp349, tmp24);
        cc_range_10d0_10fd_3 = simd_or(tmp348, tmp350);
        carryQ.cq[50] = carryout2carry(pablo_blk_Advance(sequence_e1_83, carryQ.get_carry_in(50), sequence_e1_83_adv));
        tmp351 = simd_and(sequence_e1_83_adv, cc_range_10d0_10fd_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp351);
        tmp352 = simd_or(simd_and(basis_bits.bit_4, tmp295), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
        byte_range_84_88 = simd_and(tmp132, tmp352);
        byte_e1_byte_range_84_88 = simd_and(byte_e1_adv, byte_range_84_88);
        carryQ.cq[51] = carryout2carry(pablo_blk_Advance(byte_e1_byte_range_84_88, carryQ.get_carry_in(51), tmp353));
        byte_e1_byte_range_84_88_sfx = simd_and(tmp353, byte_range_80_bf);
        struct_Lo.cc = simd_or(struct_Lo.cc, byte_e1_byte_range_84_88_sfx);
        byte_89 = simd_and(tmp132, tmp40);
        sequence_e1_89 = simd_and(byte_e1_adv, byte_89);
        byte_range_80_88 = simd_andc(tmp132, tmp106);
        carryQ.cq[52] = carryout2carry(pablo_blk_Advance(sequence_e1_89, carryQ.get_carry_in(52), tmp354));
        sequence_e1_89_byte_range_80_88 = simd_and(tmp354, byte_range_80_88);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e1_89_byte_range_80_88);
        byte_8a = simd_and(tmp132, tmp8);
        sequence_e1_8a = simd_and(byte_e1_adv, byte_8a);
        carryQ.cq[53] = carryout2carry(pablo_blk_Advance(sequence_e1_8a, carryQ.get_carry_in(53), tmp355));
        sequence_e1_8a_byte_range_80_88 = simd_and(tmp355, byte_range_80_88);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e1_8a_byte_range_80_88);
        byte_8b = simd_and(tmp132, tmp17);
        sequence_e1_8b = simd_and(byte_e1_adv, byte_8b);
        carryQ.cq[54] = carryout2carry(pablo_blk_Advance(sequence_e1_8b, carryQ.get_carry_in(54), tmp356));
        sequence_e1_8b_80 = simd_and(tmp356, byte_80);
        byte_8c = simd_and(tmp132, tmp74);
        sequence_e1_8c = simd_and(byte_e1_adv, byte_8c);
        byte_range_80_90 = simd_andc(tmp55, tmp284);
        carryQ.cq[55] = carryout2carry(pablo_blk_Advance(sequence_e1_8c, carryQ.get_carry_in(55), tmp357));
        sequence_e1_8c_byte_range_80_90 = simd_and(tmp357, byte_range_80_90);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e1_8c_byte_range_80_90);
        byte_8d = simd_and(tmp132, tmp83);
        sequence_e1_8d = simd_and(byte_e1_adv, byte_8d);
        byte_range_80_9a = simd_andc(tmp55, tmp258);
        carryQ.cq[56] = carryout2carry(pablo_blk_Advance(sequence_e1_8d, carryQ.get_carry_in(56), tmp358));
        sequence_e1_8d_byte_range_80_9a = simd_and(tmp358, byte_range_80_9a);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e1_8d_byte_range_80_9a);
        byte_8e = simd_and(tmp132, tmp88);
        sequence_e1_8e = simd_and(byte_e1_adv, byte_8e);
        byte_range_80_8f = simd_andc(byte_range_80_bf, tmp2);
        carryQ.cq[57] = carryout2carry(pablo_blk_Advance(sequence_e1_8e, carryQ.get_carry_in(57), tmp359));
        sequence_e1_8e_byte_range_80_8f = simd_and(tmp359, byte_range_80_8f);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e1_8e_byte_range_80_8f);
        byte_8f = simd_and(byte_range_80_8f, tmp71);
        sequence_e1_8f = simd_and(byte_e1_adv, byte_8f);
        tmp360 = simd_and(basis_bits.bit_3, tmp270);
        tmp361 = simd_and(basis_bits.bit_2, tmp360);
        byte_range_80_b4 = simd_andc(byte_range_80_bf, tmp361);
        carryQ.cq[58] = carryout2carry(pablo_blk_Advance(sequence_e1_8f, carryQ.get_carry_in(58), tmp362));
        sequence_e1_8f_byte_range_80_b4 = simd_and(tmp362, byte_range_80_b4);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e1_8f_byte_range_80_b4);
        sequence_e1_90 = simd_and(byte_e1_adv, byte_90);
        tmp363 = simd_or(basis_bits.bit_2, tmp286);
        byte_range_81_bf = simd_and(byte_range_80_bf, tmp363);
        carryQ.cq[59] = carryout2carry(pablo_blk_Advance(sequence_e1_90, carryQ.get_carry_in(59), tmp364));
        sequence_e1_90_byte_range_81_bf = simd_and(tmp364, byte_range_81_bf);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e1_90_byte_range_81_bf);
        byte_91 = simd_and(tmp58, tmp94);
        sequence_e1_91 = simd_and(byte_e1_adv, byte_91);
        carryQ.cq[60] = carryout2carry(pablo_blk_Advance(sequence_e1_91, carryQ.get_carry_in(60), tmp365));
        sequence_e1_91_byte_range_80_bf = simd_and(tmp365, byte_range_80_bf);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e1_91_byte_range_80_bf);
        byte_99 = simd_and(tmp58, tmp40);
        sequence_e1_99 = simd_and(byte_e1_adv, byte_99);
        tmp366 = simd_and(basis_bits.bit_2, tmp85);
        byte_range_80_ac = simd_andc(byte_range_80_bf, tmp366);
        carryQ.cq[61] = carryout2carry(pablo_blk_Advance(sequence_e1_99, carryQ.get_carry_in(61), tmp367));
        sequence_e1_99_byte_range_80_ac = simd_and(tmp367, byte_range_80_ac);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e1_99_byte_range_80_ac);
        byte_9a = simd_and(tmp58, tmp8);
        sequence_e1_9a = simd_and(byte_e1_adv, byte_9a);
        tmp368 = simd_not(tmp29);
        tmp369 = simd_or(simd_and(basis_bits.bit_3, tmp368), simd_andc(tmp75, basis_bits.bit_3));
        byte_range_81_9a = simd_and(tmp55, tmp369);
        carryQ.cq[62] = carryout2carry(pablo_blk_Advance(sequence_e1_9a, carryQ.get_carry_in(62), tmp370));
        sequence_e1_9a_byte_range_81_9a = simd_and(tmp370, byte_range_81_9a);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e1_9a_byte_range_81_9a);
        byte_9b = simd_and(tmp58, tmp17);
        sequence_e1_9b = simd_and(byte_e1_adv, byte_9b);
        byte_range_80_aa = simd_andc(byte_range_80_bf, tmp331);
        carryQ.cq[63] = carryout2carry(pablo_blk_Advance(sequence_e1_9b, carryQ.get_carry_in(63), tmp371));
        sequence_e1_9b_byte_range_80_aa = simd_and(tmp371, byte_range_80_aa);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e1_9b_byte_range_80_aa);
        byte_9c = simd_and(tmp58, tmp74);
        sequence_e1_9c = simd_and(byte_e1_adv, byte_9c);
        tmp372 = simd_and(basis_bits.bit_4, tmp109);
        byte_range_80_8c = simd_andc(byte_range_80_8f, tmp372);
        carryQ.cq[64] = carryout2carry(pablo_blk_Advance(sequence_e1_9c, carryQ.get_carry_in(64), tmp373));
        sequence_e1_9c_byte_range_80_8c = simd_and(tmp373, byte_range_80_8c);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e1_9c_byte_range_80_8c);
        byte_9d = simd_and(tmp58, tmp83);
        sequence_e1_9d = simd_and(byte_e1_adv, byte_9d);
        byte_range_80_91 = simd_andc(tmp55, tmp79);
        carryQ.cq[65] = carryout2carry(pablo_blk_Advance(sequence_e1_9d, carryQ.get_carry_in(65), tmp374));
        sequence_e1_9d_byte_range_80_91 = simd_and(tmp374, byte_range_80_91);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e1_9d_byte_range_80_91);
        byte_9e = simd_and(tmp58, tmp88);
        sequence_e1_9e = simd_and(byte_e1_adv, byte_9e);
        tmp375 = simd_and(basis_bits.bit_2, tmp56);
        byte_range_80_b3 = simd_andc(byte_range_80_bf, tmp375);
        carryQ.cq[66] = carryout2carry(pablo_blk_Advance(sequence_e1_9e, carryQ.get_carry_in(66), tmp376));
        sequence_e1_9e_byte_range_80_b3 = simd_and(tmp376, byte_range_80_b3);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e1_9e_byte_range_80_b3);
        byte_9f = simd_and(tmp58, tmp71);
        sequence_e1_9f = simd_and(byte_e1_adv, byte_9f);
        carryQ.cq[67] = carryout2carry(pablo_blk_Advance(sequence_e1_9f, carryQ.get_carry_in(67), tmp377));
        sequence_e1_9f_9c = simd_and(tmp377, byte_9c);
        sequence_e1_a0 = simd_and(byte_e1_adv, byte_a0);
        carryQ.cq[68] = carryout2carry(pablo_blk_Advance(sequence_e1_a0, carryQ.get_carry_in(68), tmp378));
        sequence_e1_a0_byte_range_a0_bf = simd_and(tmp378, byte_range_a0_bf);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e1_a0_byte_range_a0_bf);
        sequence_e1_a1 = simd_and(byte_e1_adv, byte_a1);
        tmp379 = simd_andc(byte_range_80_8f, tmp4);
        byte_range_80_82 = simd_andc(tmp379, tmp16);
        carryQ.cq[69] = carryout2carry(pablo_blk_Advance(sequence_e1_a1, carryQ.get_carry_in(69), tmp380));
        sequence_e1_a1_byte_range_80_82 = simd_and(tmp380, byte_range_80_82);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e1_a1_byte_range_80_82);
        sequence_e1_a2 = simd_and(byte_e1_adv, byte_a2);
        tmp381 = simd_and(basis_bits.bit_2, tmp139);
        byte_range_80_a8 = simd_andc(byte_range_80_bf, tmp381);
        carryQ.cq[70] = carryout2carry(pablo_blk_Advance(sequence_e1_a2, carryQ.get_carry_in(70), tmp382));
        sequence_e1_a2_byte_range_80_a8 = simd_and(tmp382, byte_range_80_a8);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e1_a2_byte_range_80_a8);
        byte_a3 = simd_and(tmp62, tmp211);
        sequence_e1_a3 = simd_and(byte_e1_adv, byte_a3);
        tmp383 = simd_and(basis_bits.bit_2, tmp104);
        byte_range_80_b5 = simd_andc(byte_range_80_bf, tmp383);
        carryQ.cq[71] = carryout2carry(pablo_blk_Advance(sequence_e1_a3, carryQ.get_carry_in(71), tmp384));
        sequence_e1_a3_byte_range_80_b5 = simd_and(tmp384, byte_range_80_b5);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e1_a3_byte_range_80_b5);
        sequence_e1_a4 = simd_and(byte_e1_adv, byte_a4);
        tmp385 = simd_and(basis_bits.bit_3, tmp84);
        byte_range_80_9c = simd_andc(tmp55, tmp385);
        carryQ.cq[72] = carryout2carry(pablo_blk_Advance(sequence_e1_a4, carryQ.get_carry_in(72), tmp386));
        sequence_e1_a4_byte_range_80_9c = simd_and(tmp386, byte_range_80_9c);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e1_a4_byte_range_80_9c);
        sequence_e1_a5 = simd_and(byte_e1_adv, byte_a5);
        tmp387 = simd_or(basis_bits.bit_3, tmp48);
        tmp388 = simd_not(tmp387);
        tmp389 = simd_or(simd_and(basis_bits.bit_2, tmp388), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
        byte_range_90_ad = simd_and(byte_range_80_bf, tmp389);
        carryQ.cq[73] = carryout2carry(pablo_blk_Advance(sequence_e1_a5, carryQ.get_carry_in(73), tmp390));
        sequence_e1_a5_byte_range_90_ad = simd_and(tmp390, byte_range_90_ad);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e1_a5_byte_range_90_ad);
        sequence_e1_a6 = simd_and(byte_e1_adv, byte_a6);
        tmp391 = simd_or(basis_bits.bit_3, tmp47);
        tmp392 = simd_and(basis_bits.bit_2, tmp391);
        byte_range_80_ab = simd_andc(byte_range_80_bf, tmp392);
        carryQ.cq[74] = carryout2carry(pablo_blk_Advance(sequence_e1_a6, carryQ.get_carry_in(74), tmp393));
        sequence_e1_a6_byte_range_80_ab = simd_and(tmp393, byte_range_80_ab);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e1_a6_byte_range_80_ab);
        sequence_e1_a7 = simd_and(byte_e1_adv, byte_a7);
        tmp394 = simd_andc(byte_range_80_8f, basis_bits.bit_4);
        byte_range_81_87 = simd_and(tmp394, tmp42);
        carryQ.cq[75] = carryout2carry(pablo_blk_Advance(sequence_e1_a7, carryQ.get_carry_in(75), tmp395));
        sequence_e1_a7_byte_range_81_87 = simd_and(tmp395, byte_range_81_87);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e1_a7_byte_range_81_87);
        sequence_e1_a8 = simd_and(byte_e1_adv, byte_a8);
        tmp396 = simd_and(basis_bits.bit_3, tmp268);
        byte_range_80_96 = simd_andc(tmp55, tmp396);
        carryQ.cq[76] = carryout2carry(pablo_blk_Advance(sequence_e1_a8, carryQ.get_carry_in(76), tmp397));
        sequence_e1_a8_byte_range_80_96 = simd_and(tmp397, byte_range_80_96);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e1_a8_byte_range_80_96);
        sequence_e1_a9 = simd_and(byte_e1_adv, byte_a9);
        byte_range_80_94 = simd_andc(tmp55, tmp360);
        carryQ.cq[77] = carryout2carry(pablo_blk_Advance(sequence_e1_a9, carryQ.get_carry_in(77), tmp398));
        sequence_e1_a9_byte_range_80_94 = simd_and(tmp398, byte_range_80_94);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e1_a9_byte_range_80_94);
        sequence_e1_ac = simd_and(byte_e1_adv, byte_ac);
        tmp399 = simd_not(tmp56);
        tmp400 = simd_or(basis_bits.bit_3, tmp270);
        tmp401 = simd_or(simd_and(basis_bits.bit_2, tmp399), simd_andc(tmp400, basis_bits.bit_2));
        byte_range_85_b3 = simd_and(byte_range_80_bf, tmp401);
        carryQ.cq[78] = carryout2carry(pablo_blk_Advance(sequence_e1_ac, carryQ.get_carry_in(78), tmp402));
        sequence_e1_ac_byte_range_85_b3 = simd_and(tmp402, byte_range_85_b3);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e1_ac_byte_range_85_b3);
        sequence_e1_ad = simd_and(byte_e1_adv, byte_ad);
        tmp403 = simd_or(simd_and(basis_bits.bit_4, tmp277), simd_andc(tmp109, basis_bits.bit_4));
        byte_range_85_8b = simd_and(byte_range_80_8f, tmp403);
        carryQ.cq[79] = carryout2carry(pablo_blk_Advance(sequence_e1_ad, carryQ.get_carry_in(79), tmp404));
        sequence_e1_ad_byte_range_85_8b = simd_and(tmp404, byte_range_85_8b);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e1_ad_byte_range_85_8b);
        sequence_e1_ae = simd_and(byte_e1_adv, byte_ae);
        tmp405 = simd_not(tmp286);
        tmp406 = simd_or(basis_bits.bit_3, tmp141);
        tmp407 = simd_or(simd_and(basis_bits.bit_2, tmp405), simd_andc(tmp406, basis_bits.bit_2));
        byte_range_83_a0 = simd_and(byte_range_80_bf, tmp407);
        carryQ.cq[80] = carryout2carry(pablo_blk_Advance(sequence_e1_ae, carryQ.get_carry_in(80), tmp408));
        sequence_e1_ae_byte_range_83_a0 = simd_and(tmp408, byte_range_83_a0);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e1_ae_byte_range_83_a0);
        sequence_e1_af = simd_and(byte_e1_adv, byte_af);
        byte_range_80_a5 = simd_andc(byte_range_80_bf, tmp92);
        carryQ.cq[81] = carryout2carry(pablo_blk_Advance(sequence_e1_af, carryQ.get_carry_in(81), tmp409));
        sequence_e1_af_byte_range_80_a5 = simd_and(tmp409, byte_range_80_a5);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e1_af_byte_range_80_a5);
        sequence_e1_b0 = simd_and(byte_e1_adv, byte_b0);
        tmp410 = simd_and(basis_bits.bit_2, tmp116);
        byte_range_80_a3 = simd_andc(byte_range_80_bf, tmp410);
        carryQ.cq[82] = carryout2carry(pablo_blk_Advance(sequence_e1_b0, carryQ.get_carry_in(82), tmp411));
        sequence_e1_b0_byte_range_80_a3 = simd_and(tmp411, byte_range_80_a3);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e1_b0_byte_range_80_a3);
        sequence_e1_b1 = simd_and(byte_e1_adv, byte_b1);
        tmp412 = simd_and(byte_range_80_8f, tmp47);
        byte_range_8d_8f = simd_and(tmp412, tmp24);
        carryQ.cq[83] = carryout2carry(pablo_blk_Advance(sequence_e1_b1, carryQ.get_carry_in(83), tmp413));
        sequence_e1_b1_byte_range_8d_8f = simd_and(tmp413, byte_range_8d_8f);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e1_b1_byte_range_8d_8f);
        sequence_e1_b3 = simd_and(byte_e1_adv, byte_b3);
        tmp414 = simd_and(tmp62, basis_bits.bit_4);
        byte_range_a9_ac = simd_and(tmp414, tmp184);
        carryQ.cq[84] = carryout2carry(pablo_blk_Advance(sequence_e1_b3, carryQ.get_carry_in(84), tmp415));
        sequence_e1_b3_byte_range_a9_ac = simd_and(tmp415, byte_range_a9_ac);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e1_b3_byte_range_a9_ac);
        byte_e2 = simd_and(tmp102, tmp6);
        byte_84 = simd_and(byte_range_80_8f, tmp25);
        carryQ.cq[85] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(85), tmp416));
        sequence_e2_84 = simd_and(tmp416, byte_84);
        carryQ.cq[86] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(86), byte_e2_adv));
        tmp417 = simd_or(simd_and(basis_bits.bit_4, tmp295), simd_andc(tmp109, basis_bits.bit_4));
        byte_range_b5_b8 = simd_and(tmp65, tmp417);
        carryQ.cq[87] = carryout2carry(pablo_blk_Advance(sequence_e2_84, carryQ.get_carry_in(87), sequence_e2_84_adv));
        tmp418 = simd_and(sequence_e2_84_adv, byte_range_b5_b8);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp418);
        sequence_e2_b4 = simd_and(byte_e2_adv, byte_b4);
        byte_range_b0_bf = simd_and(byte_range_80_bf, tmp14);
        carryQ.cq[88] = carryout2carry(pablo_blk_Advance(sequence_e2_b4, carryQ.get_carry_in(88), sequence_e2_b4_adv));
        tmp419 = simd_and(sequence_e2_b4_adv, byte_range_b0_bf);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp419);
        sequence_e2_b5 = simd_and(byte_e2_adv, byte_b5);
        tmp420 = simd_or(basis_bits.bit_3, basis_bits.bit_4);
        tmp421 = simd_and(basis_bits.bit_2, tmp420);
        byte_range_80_a7 = simd_andc(byte_range_80_bf, tmp421);
        carryQ.cq[89] = carryout2carry(pablo_blk_Advance(sequence_e2_b5, carryQ.get_carry_in(89), sequence_e2_b5_adv));
        tmp422 = simd_and(sequence_e2_b5_adv, byte_range_80_a7);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp422);
        sequence_e2_b6 = simd_and(byte_e2_adv, byte_b6);
        tmp423 = simd_andc(tmp229, tmp267);
        tmp424 = simd_or(byte_range_80_96, tmp423);
        tmp425 = simd_andc(tmp414, tmp267);
        tmp426 = simd_or(tmp424, tmp425);
        tmp427 = simd_andc(byte_range_b0_bf, basis_bits.bit_4);
        tmp428 = simd_andc(tmp427, tmp267);
        tmp429 = simd_or(tmp426, tmp428);
        tmp430 = simd_and(byte_range_b0_bf, basis_bits.bit_4);
        tmp431 = simd_andc(tmp430, tmp267);
        cc_range_2d80_2db8_3 = simd_or(tmp429, tmp431);
        carryQ.cq[90] = carryout2carry(pablo_blk_Advance(sequence_e2_b6, carryQ.get_carry_in(90), sequence_e2_b6_adv));
        tmp432 = simd_and(sequence_e2_b6_adv, cc_range_2d80_2db8_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp432);
        sequence_e2_b7 = simd_and(byte_e2_adv, byte_b7);
        tmp433 = simd_or(byte_range_80_8f, tmp217);
        tmp434 = simd_or(tmp433, tmp183);
        cc_range_2dc0_2dd8_3 = simd_andc(tmp434, tmp267);
        carryQ.cq[91] = carryout2carry(pablo_blk_Advance(sequence_e2_b7, carryQ.get_carry_in(91), sequence_e2_b7_adv));
        tmp435 = simd_and(sequence_e2_b7_adv, cc_range_2dc0_2dd8_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp435);
        byte_e3 = simd_and(tmp102, tmp211);
        carryQ.cq[92] = carryout2carry(pablo_blk_Advance(byte_e3, carryQ.get_carry_in(92), tmp436));
        sequence_e3_80 = simd_and(tmp436, byte_80);
        carryQ.cq[93] = carryout2carry(pablo_blk_Advance(byte_e3, carryQ.get_carry_in(93), byte_e3_adv));
        tmp437 = simd_and(byte_range_80_8f, tmp13);
        tmp438 = simd_and(byte_range_b0_bf, tmp74);
        cc_range_3006_303c_3 = simd_or(tmp437, tmp438);
        carryQ.cq[94] = carryout2carry(pablo_blk_Advance(sequence_e3_80, carryQ.get_carry_in(94), sequence_e3_80_adv));
        tmp439 = simd_and(sequence_e3_80_adv, cc_range_3006_303c_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp439);
        sequence_e3_81 = simd_and(byte_e3_adv, byte_81);
        carryQ.cq[95] = carryout2carry(pablo_blk_Advance(sequence_e3_81, carryQ.get_carry_in(95), sequence_e3_81_adv));
        tmp440 = simd_and(sequence_e3_81_adv, byte_range_81_bf);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp440);
        sequence_e3_82 = simd_and(byte_e3_adv, byte_82);
        tmp441 = simd_or(byte_range_80_96, byte_9f);
        tmp442 = simd_and(tmp146, tmp286);
        cc_range_3080_30a1_3 = simd_or(tmp441, tmp442);
        carryQ.cq[96] = carryout2carry(pablo_blk_Advance(sequence_e3_82, carryQ.get_carry_in(96), sequence_e3_82_adv));
        tmp443 = simd_and(sequence_e3_82_adv, cc_range_3080_30a1_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp443);
        sequence_e3_83 = simd_and(byte_e3_adv, byte_83);
        tmp444 = simd_and(basis_bits.bit_2, tmp258);
        tmp445 = simd_andc(byte_range_80_bf, tmp444);
        tmp446 = simd_and(byte_range_b0_bf, tmp71);
        cc_range_30c0_30ff_3 = simd_or(tmp445, tmp446);
        carryQ.cq[97] = carryout2carry(pablo_blk_Advance(sequence_e3_83, carryQ.get_carry_in(97), sequence_e3_83_adv));
        tmp447 = simd_and(sequence_e3_83_adv, cc_range_30c0_30ff_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp447);
        sequence_e3_84 = simd_and(byte_e3_adv, byte_84);
        tmp448 = simd_or(simd_and(basis_bits.bit_2, tmp388), simd_andc(tmp400, basis_bits.bit_2));
        tmp449 = simd_and(byte_range_80_bf, tmp448);
        tmp450 = simd_and(byte_range_b0_bf, tmp51);
        cc_range_3105_3131_3 = simd_or(tmp449, tmp450);
        carryQ.cq[98] = carryout2carry(pablo_blk_Advance(sequence_e3_84, carryQ.get_carry_in(98), sequence_e3_84_adv));
        tmp451 = simd_and(sequence_e3_84_adv, cc_range_3105_3131_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp451);
        byte_85 = simd_and(byte_range_80_8f, tmp59);
        sequence_e3_85 = simd_and(byte_e3_adv, byte_85);
        carryQ.cq[99] = carryout2carry(pablo_blk_Advance(sequence_e3_85, carryQ.get_carry_in(99), sequence_e3_85_adv));
        tmp452 = simd_and(sequence_e3_85_adv, byte_range_80_bf);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp452);
        byte_86 = simd_and(byte_range_80_8f, tmp13);
        sequence_e3_86 = simd_and(byte_e3_adv, byte_86);
        tmp453 = simd_and(basis_bits.bit_4, tmp267);
        tmp454 = simd_andc(byte_range_80_8f, tmp453);
        tmp455 = simd_andc(tmp146, tmp258);
        cc_range_3180_31a0_3 = simd_or(tmp454, tmp455);
        carryQ.cq[100] = carryout2carry(pablo_blk_Advance(sequence_e3_86, carryQ.get_carry_in(100), sequence_e3_86_adv));
        tmp456 = simd_and(sequence_e3_86_adv, cc_range_3180_31a0_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp456);
        byte_87 = simd_and(byte_range_80_8f, tmp19);
        sequence_e3_87 = simd_and(byte_e3_adv, byte_87);
        carryQ.cq[101] = carryout2carry(pablo_blk_Advance(sequence_e3_87, carryQ.get_carry_in(101), sequence_e3_87_adv));
        tmp457 = simd_and(sequence_e3_87_adv, byte_range_b0_bf);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp457);
        byte_range_90_bf = simd_and(byte_range_80_bf, tmp2);
        byte_e3_byte_range_90_bf = simd_and(byte_e3_adv, byte_range_90_bf);
        carryQ.cq[102] = carryout2carry(pablo_blk_Advance(byte_e3_byte_range_90_bf, carryQ.get_carry_in(102), tmp458));
        byte_e3_byte_range_90_bf_sfx = simd_and(tmp458, byte_range_80_bf);
        struct_Lo.cc = simd_or(struct_Lo.cc, byte_e3_byte_range_90_bf_sfx);
        byte_e4 = simd_and(tmp102, tmp25);
        carryQ.cq[103] = carryout2carry(pablo_blk_Advance(byte_e4, carryQ.get_carry_in(103), tmp459));
        byte_e4_byte_range_80_b5 = simd_and(tmp459, byte_range_80_b5);
        carryQ.cq[104] = carryout2carry(pablo_blk_Advance(byte_e4_byte_range_80_b5, carryQ.get_carry_in(104), tmp460));
        byte_e4_byte_range_80_b5_sfx = simd_and(tmp460, byte_range_80_bf);
        struct_Lo.cc = simd_or(struct_Lo.cc, byte_e4_byte_range_80_b5_sfx);
        carryQ.cq[105] = carryout2carry(pablo_blk_Advance(byte_e4, carryQ.get_carry_in(105), byte_e4_adv));
        sequence_e4_b6 = simd_and(byte_e4_adv, byte_b6);
        carryQ.cq[106] = carryout2carry(pablo_blk_Advance(sequence_e4_b6, carryQ.get_carry_in(106), tmp461));
        sequence_e4_b6_byte_range_80_b5 = simd_and(tmp461, byte_range_80_b5);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e4_b6_byte_range_80_b5);
        sequence_e4_b8 = simd_and(byte_e4_adv, byte_b8);
        carryQ.cq[107] = carryout2carry(pablo_blk_Advance(sequence_e4_b8, carryQ.get_carry_in(107), tmp462));
        sequence_e4_b8_byte_range_80_bf = simd_and(tmp462, byte_range_80_bf);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e4_b8_byte_range_80_bf);
        byte_range_e5_e8 = simd_and(tmp102, tmp417);
        carryQ.cq[108] = carryout2carry(pablo_blk_Advance(byte_range_e5_e8, carryQ.get_carry_in(108), tmp463));
        byte_range_e5_e8_sfx = simd_and(tmp463, byte_range_80_bf);
        carryQ.cq[109] = carryout2carry(pablo_blk_Advance(byte_range_e5_e8_sfx, carryQ.get_carry_in(109), tmp464));
        byte_range_e5_e8_sfx_sfx = simd_and(tmp464, byte_range_80_bf);
        struct_Lo.cc = simd_or(struct_Lo.cc, byte_range_e5_e8_sfx_sfx);
        byte_e9 = simd_and(tmp102, tmp40);
        carryQ.cq[110] = carryout2carry(pablo_blk_Advance(byte_e9, carryQ.get_carry_in(110), byte_e9_adv));
        sequence_e9_80 = simd_and(byte_e9_adv, byte_80);
        carryQ.cq[111] = carryout2carry(pablo_blk_Advance(sequence_e9_80, carryQ.get_carry_in(111), tmp465));
        sequence_e9_80_byte_range_80_8c = simd_and(tmp465, byte_range_80_8c);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e9_80_byte_range_80_8c);
        byte_ea = simd_and(tmp102, tmp8);
        carryQ.cq[112] = carryout2carry(pablo_blk_Advance(byte_ea, carryQ.get_carry_in(112), byte_ea_adv));
        sequence_ea_80 = simd_and(byte_ea_adv, byte_80);
        carryQ.cq[113] = carryout2carry(pablo_blk_Advance(sequence_ea_80, carryQ.get_carry_in(113), tmp466));
        sequence_ea_80_byte_range_80_94 = simd_and(tmp466, byte_range_80_94);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_ea_80_byte_range_80_94);
        byte_eb = simd_and(tmp102, tmp17);
        carryQ.cq[114] = carryout2carry(pablo_blk_Advance(byte_eb, carryQ.get_carry_in(114), byte_eb_adv));
        sequence_eb_80 = simd_and(byte_eb_adv, byte_80);
        carryQ.cq[115] = carryout2carry(pablo_blk_Advance(sequence_eb_80, carryQ.get_carry_in(115), tmp467));
        sequence_eb_80_byte_range_80_bf = simd_and(tmp467, byte_range_80_bf);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_eb_80_byte_range_80_bf);
        byte_ed = simd_and(tmp102, tmp83);
        carryQ.cq[116] = carryout2carry(pablo_blk_Advance(byte_ed, carryQ.get_carry_in(116), byte_ed_adv));
        sequence_ed_80 = simd_and(byte_ed_adv, byte_80);
        carryQ.cq[117] = carryout2carry(pablo_blk_Advance(sequence_ed_80, carryQ.get_carry_in(117), tmp468));
        sequence_ed_80_byte_range_80_a3 = simd_and(tmp468, byte_range_80_a3);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_ed_80_byte_range_80_a3);
        byte_ef = simd_and(tmp102, tmp71);
        byte_range_a4_a8 = simd_and(tmp62, tmp352);
        carryQ.cq[118] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(118), tmp469));
        byte_ef_byte_range_a4_a8 = simd_and(tmp469, byte_range_a4_a8);
        carryQ.cq[119] = carryout2carry(pablo_blk_Advance(byte_ef_byte_range_a4_a8, carryQ.get_carry_in(119), tmp470));
        byte_ef_byte_range_a4_a8_sfx = simd_and(tmp470, byte_range_80_bf);
        struct_Lo.cc = simd_or(struct_Lo.cc, byte_ef_byte_range_a4_a8_sfx);
        carryQ.cq[120] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(120), byte_ef_adv));
        sequence_ef_a9 = simd_and(byte_ef_adv, byte_a9);
        tmp471 = simd_and(basis_bits.bit_2, tmp387);
        byte_range_80_ad = simd_andc(byte_range_80_bf, tmp471);
        carryQ.cq[121] = carryout2carry(pablo_blk_Advance(sequence_ef_a9, carryQ.get_carry_in(121), tmp472));
        sequence_ef_a9_byte_range_80_ad = simd_and(tmp472, byte_range_80_ad);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_ef_a9_byte_range_80_ad);
        sequence_ef_aa = simd_and(byte_ef_adv, byte_aa);
        carryQ.cq[122] = carryout2carry(pablo_blk_Advance(sequence_ef_aa, carryQ.get_carry_in(122), tmp473));
        sequence_ef_aa_byte_range_80_bf = simd_and(tmp473, byte_range_80_bf);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_ef_aa_byte_range_80_bf);
        sequence_ef_ab = simd_and(byte_ef_adv, byte_ab);
        byte_range_80_99 = simd_andc(tmp55, tmp114);
        carryQ.cq[123] = carryout2carry(pablo_blk_Advance(sequence_ef_ab, carryQ.get_carry_in(123), tmp474));
        sequence_ef_ab_byte_range_80_99 = simd_and(tmp474, byte_range_80_99);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_ef_ab_byte_range_80_99);
        sequence_ef_ac = simd_and(byte_ef_adv, byte_ac);
        carryQ.cq[124] = carryout2carry(pablo_blk_Advance(sequence_ef_ac, carryQ.get_carry_in(124), tmp475));
        sequence_ef_ac_9d = simd_and(tmp475, byte_9d);
        sequence_ef_ad = simd_and(byte_ef_adv, byte_ad);
        byte_range_80_81 = simd_andc(byte_range_80_8f, tmp78);
        carryQ.cq[125] = carryout2carry(pablo_blk_Advance(sequence_ef_ad, carryQ.get_carry_in(125), tmp476));
        sequence_ef_ad_byte_range_80_81 = simd_and(tmp476, byte_range_80_81);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_ef_ad_byte_range_80_81);
        sequence_ef_ae = simd_and(byte_ef_adv, byte_ae);
        tmp477 = simd_and(basis_bits.bit_2, tmp79);
        byte_range_80_b1 = simd_andc(byte_range_80_bf, tmp477);
        carryQ.cq[126] = carryout2carry(pablo_blk_Advance(sequence_ef_ae, carryQ.get_carry_in(126), tmp478));
        sequence_ef_ae_byte_range_80_b1 = simd_and(tmp478, byte_range_80_b1);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_ef_ae_byte_range_80_b1);
        sequence_ef_af = simd_and(byte_ef_adv, byte_af);
        tmp479 = simd_or(basis_bits.bit_2, tmp142);
        byte_range_93_bf = simd_and(byte_range_80_bf, tmp479);
        carryQ.cq[127] = carryout2carry(pablo_blk_Advance(sequence_ef_af, carryQ.get_carry_in(127), tmp480));
        sequence_ef_af_byte_range_93_bf = simd_and(tmp480, byte_range_93_bf);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_ef_af_byte_range_93_bf);
        sequence_ef_b0 = simd_and(byte_ef_adv, byte_b0);
        carryQ.cq[128] = carryout2carry(pablo_blk_Advance(sequence_ef_b0, carryQ.get_carry_in(128), tmp481));
        sequence_ef_b0_byte_range_80_bf = simd_and(tmp481, byte_range_80_bf);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_ef_b0_byte_range_80_bf);
        sequence_ef_b4 = simd_and(byte_ef_adv, byte_b4);
        tmp482 = simd_and(basis_bits.bit_3, tmp48);
        tmp483 = simd_and(basis_bits.bit_2, tmp482);
        byte_range_80_bd = simd_andc(byte_range_80_bf, tmp483);
        carryQ.cq[129] = carryout2carry(pablo_blk_Advance(sequence_ef_b4, carryQ.get_carry_in(129), tmp484));
        sequence_ef_b4_byte_range_80_bd = simd_and(tmp484, byte_range_80_bd);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_ef_b4_byte_range_80_bd);
        sequence_ef_b5 = simd_and(byte_ef_adv, byte_b5);
        carryQ.cq[130] = carryout2carry(pablo_blk_Advance(sequence_ef_b5, carryQ.get_carry_in(130), tmp485));
        sequence_ef_b5_byte_range_90_bf = simd_and(tmp485, byte_range_90_bf);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_ef_b5_byte_range_90_bf);
        sequence_ef_b6 = simd_and(byte_ef_adv, byte_b6);
        carryQ.cq[131] = carryout2carry(pablo_blk_Advance(sequence_ef_b6, carryQ.get_carry_in(131), tmp486));
        sequence_ef_b6_byte_range_80_8f = simd_and(tmp486, byte_range_80_8f);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_ef_b6_byte_range_80_8f);
        sequence_ef_b7 = simd_and(byte_ef_adv, byte_b7);
        byte_range_80_87 = simd_andc(byte_range_80_8f, basis_bits.bit_4);
        carryQ.cq[132] = carryout2carry(pablo_blk_Advance(sequence_ef_b7, carryQ.get_carry_in(132), tmp487));
        sequence_ef_b7_byte_range_80_87 = simd_and(tmp487, byte_range_80_87);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_ef_b7_byte_range_80_87);
        sequence_ef_b9 = simd_and(byte_ef_adv, byte_b9);
        byte_range_b0_b4 = simd_andc(tmp427, tmp109);
        carryQ.cq[133] = carryout2carry(pablo_blk_Advance(sequence_ef_b9, carryQ.get_carry_in(133), tmp488));
        sequence_ef_b9_byte_range_b0_b4 = simd_and(tmp488, byte_range_b0_b4);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_ef_b9_byte_range_b0_b4);
        sequence_ef_ba = simd_and(byte_ef_adv, byte_ba);
        carryQ.cq[134] = carryout2carry(pablo_blk_Advance(sequence_ef_ba, carryQ.get_carry_in(134), tmp489));
        sequence_ef_ba_byte_range_80_bf = simd_and(tmp489, byte_range_80_bf);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_ef_ba_byte_range_80_bf);
        sequence_ef_bb = simd_and(byte_ef_adv, byte_bb);
        tmp490 = simd_and(basis_bits.bit_2, tmp385);
        byte_range_80_bc = simd_andc(byte_range_80_bf, tmp490);
        carryQ.cq[135] = carryout2carry(pablo_blk_Advance(sequence_ef_bb, carryQ.get_carry_in(135), tmp491));
        sequence_ef_bb_byte_range_80_bc = simd_and(tmp491, byte_range_80_bc);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_ef_bb_byte_range_80_bc);
        sequence_ef_bd = simd_and(byte_ef_adv, byte_bd);
        byte_range_a6_af = simd_and(tmp62, tmp90);
        carryQ.cq[136] = carryout2carry(pablo_blk_Advance(sequence_ef_bd, carryQ.get_carry_in(136), tmp492));
        sequence_ef_bd_byte_range_a6_af = simd_and(tmp492, byte_range_a6_af);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_ef_bd_byte_range_a6_af);
        sequence_ef_be = simd_and(byte_ef_adv, byte_be);
        byte_range_80_9d = simd_andc(tmp55, tmp482);
        carryQ.cq[137] = carryout2carry(pablo_blk_Advance(sequence_ef_be, carryQ.get_carry_in(137), tmp493));
        sequence_ef_be_byte_range_80_9d = simd_and(tmp493, byte_range_80_9d);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_ef_be_byte_range_80_9d);
        byte_bf = simd_and(byte_range_b0_bf, tmp71);
        sequence_ef_bf = simd_and(byte_ef_adv, byte_bf);
        byte_range_82_87 = simd_and(byte_range_80_87, tmp97);
        carryQ.cq[138] = carryout2carry(pablo_blk_Advance(sequence_ef_bf, carryQ.get_carry_in(138), tmp494));
        sequence_ef_bf_byte_range_82_87 = simd_and(tmp494, byte_range_82_87);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_ef_bf_byte_range_82_87);
        tmp495 = simd_and(tmp1, tmp14);
        byte_f0 = simd_andc(tmp495, tmp75);
        carryQ.cq[139] = carryout2carry(pablo_blk_Advance(byte_f0, carryQ.get_carry_in(139), tmp496));
        sequence_f0_90 = simd_and(tmp496, byte_90);
        carryQ.cq[140] = carryout2carry(pablo_blk_Advance(byte_f0, carryQ.get_carry_in(140), byte_f0_adv));
        carryQ.cq[141] = carryout2carry(pablo_blk_Advance(sequence_f0_90, carryQ.get_carry_in(141), tmp497));
        sequence_f0_90_80 = simd_and(tmp497, byte_80);
        carryQ.cq[142] = carryout2carry(pablo_blk_Advance(sequence_f0_90, carryQ.get_carry_in(142), sequence_f0_90_adv));
        tmp498 = simd_andc(byte_range_80_8f, tmp47);
        tmp499 = simd_or(basis_bits.bit_3, tmp268);
        tmp500 = simd_not(tmp499);
        tmp501 = simd_or(simd_and(basis_bits.bit_2, tmp500), simd_andc(tmp85, basis_bits.bit_2));
        tmp502 = simd_and(byte_range_80_bf, tmp501);
        tmp503 = simd_or(tmp498, tmp502);
        tmp504 = simd_or(simd_and(basis_bits.bit_3, tmp368), simd_andc(basis_bits.bit_4, basis_bits.bit_3));
        tmp505 = simd_and(tmp146, tmp504);
        tmp506 = simd_or(tmp503, tmp505);
        tmp507 = simd_and(byte_range_b0_bf, tmp158);
        tmp508 = simd_or(tmp506, tmp507);
        cc_range_10000_1003f_4 = simd_or(tmp508, byte_bf);
        carryQ.cq[143] = carryout2carry(pablo_blk_Advance(sequence_f0_90_80, carryQ.get_carry_in(143), sequence_f0_90_80_adv));
        tmp509 = simd_and(sequence_f0_90_80_adv, cc_range_10000_1003f_4);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp509);
        sequence_f0_90_81 = simd_and(sequence_f0_90_adv, byte_81);
        tmp510 = simd_and(basis_bits.bit_4, tmp89);
        tmp511 = simd_andc(tmp2, tmp22);
        tmp512 = simd_andc(byte_range_80_bf, tmp511);
        cc_range_10040_10050_4 = simd_andc(tmp512, tmp510);
        carryQ.cq[144] = carryout2carry(pablo_blk_Advance(sequence_f0_90_81, carryQ.get_carry_in(144), sequence_f0_90_81_adv));
        tmp513 = simd_and(sequence_f0_90_81_adv, cc_range_10040_10050_4);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp513);
        sequence_f0_90_82 = simd_and(sequence_f0_90_adv, byte_82);
        carryQ.cq[145] = carryout2carry(pablo_blk_Advance(sequence_f0_90_82, carryQ.get_carry_in(145), sequence_f0_90_82_adv));
        tmp514 = simd_and(sequence_f0_90_82_adv, byte_range_80_bf);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp514);
        sequence_f0_90_83 = simd_and(sequence_f0_90_adv, byte_83);
        byte_range_80_ba = simd_andc(byte_range_80_bf, tmp444);
        carryQ.cq[146] = carryout2carry(pablo_blk_Advance(sequence_f0_90_83, carryQ.get_carry_in(146), sequence_f0_90_83_adv));
        tmp515 = simd_and(sequence_f0_90_83_adv, byte_range_80_ba);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp515);
        sequence_f0_90_8a = simd_and(sequence_f0_90_adv, byte_8a);
        cc_range_10280_102a0_4 = simd_or(byte_range_80_9c, tmp146);
        carryQ.cq[147] = carryout2carry(pablo_blk_Advance(sequence_f0_90_8a, carryQ.get_carry_in(147), sequence_f0_90_8a_adv));
        tmp516 = simd_and(sequence_f0_90_8a_adv, cc_range_10280_102a0_4);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp516);
        sequence_f0_90_8b = simd_and(sequence_f0_90_adv, byte_8b);
        carryQ.cq[148] = carryout2carry(pablo_blk_Advance(sequence_f0_90_8b, carryQ.get_carry_in(148), sequence_f0_90_8b_adv));
        tmp517 = simd_and(sequence_f0_90_8b_adv, byte_range_80_90);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp517);
        sequence_f0_90_8c = simd_and(sequence_f0_90_adv, byte_8c);
        tmp518 = simd_andc(tmp55, tmp161);
        cc_range_10300_10330_4 = simd_or(tmp518, byte_range_b0_bf);
        carryQ.cq[149] = carryout2carry(pablo_blk_Advance(sequence_f0_90_8c, carryQ.get_carry_in(149), sequence_f0_90_8c_adv));
        tmp519 = simd_and(sequence_f0_90_8c_adv, cc_range_10300_10330_4);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp519);
        sequence_f0_90_8d = simd_and(sequence_f0_90_adv, byte_8d);
        tmp520 = simd_or(simd_and(basis_bits.bit_4, tmp152), simd_andc(tmp97, basis_bits.bit_4));
        tmp521 = simd_andc(tmp75, tmp520);
        cc_range_10340_10342_4 = simd_andc(byte_range_80_8f, tmp521);
        carryQ.cq[150] = carryout2carry(pablo_blk_Advance(sequence_f0_90_8d, carryQ.get_carry_in(150), sequence_f0_90_8d_adv));
        tmp522 = simd_and(sequence_f0_90_8d_adv, cc_range_10340_10342_4);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp522);
        sequence_f0_90_8e = simd_and(sequence_f0_90_adv, byte_8e);
        cc_range_10380_103a0_4 = simd_or(byte_range_80_9d, tmp146);
        carryQ.cq[151] = carryout2carry(pablo_blk_Advance(sequence_f0_90_8e, carryQ.get_carry_in(151), sequence_f0_90_8e_adv));
        tmp523 = simd_and(sequence_f0_90_8e_adv, cc_range_10380_103a0_4);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp523);
        sequence_f0_90_8f = simd_and(sequence_f0_90_adv, byte_8f);
        tmp524 = simd_andc(tmp4, basis_bits.bit_4);
        cc_range_103c0_103c8_4 = simd_andc(byte_range_80_8f, tmp524);
        carryQ.cq[152] = carryout2carry(pablo_blk_Advance(sequence_f0_90_8f, carryQ.get_carry_in(152), sequence_f0_90_8f_adv));
        tmp525 = simd_and(sequence_f0_90_8f_adv, cc_range_103c0_103c8_4);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp525);
        sequence_f0_90_91 = simd_and(sequence_f0_90_adv, byte_91);
        carryQ.cq[153] = carryout2carry(pablo_blk_Advance(sequence_f0_90_91, carryQ.get_carry_in(153), sequence_f0_90_91_adv));
        tmp526 = simd_and(sequence_f0_90_91_adv, byte_range_90_bf);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp526);
        byte_92 = simd_and(tmp58, tmp6);
        sequence_f0_90_92 = simd_and(sequence_f0_90_adv, byte_92);
        carryQ.cq[154] = carryout2carry(pablo_blk_Advance(sequence_f0_90_92, carryQ.get_carry_in(154), sequence_f0_90_92_adv));
        tmp527 = simd_and(sequence_f0_90_92_adv, byte_range_80_9d);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp527);
        sequence_f0_90_a0 = simd_and(sequence_f0_90_adv, byte_a0);
        tmp528 = simd_andc(byte_range_80_87, tmp89);
        tmp529 = simd_and(byte_range_80_8f, tmp37);
        tmp530 = simd_or(tmp528, tmp529);
        tmp531 = simd_not(tmp104);
        tmp532 = simd_or(simd_and(basis_bits.bit_2, tmp531), simd_andc(tmp99, basis_bits.bit_2));
        tmp533 = simd_and(byte_range_80_bf, tmp532);
        tmp534 = simd_or(tmp530, tmp533);
        tmp535 = simd_and(byte_range_b0_bf, tmp296);
        tmp536 = simd_or(tmp534, tmp535);
        tmp537 = simd_or(tmp536, tmp438);
        cc_range_10800_1083f_4 = simd_or(tmp537, byte_bf);
        carryQ.cq[155] = carryout2carry(pablo_blk_Advance(sequence_f0_90_a0, carryQ.get_carry_in(155), sequence_f0_90_a0_adv));
        tmp538 = simd_and(sequence_f0_90_a0_adv, cc_range_10800_1083f_4);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp538);
        sequence_f0_90_a1 = simd_and(sequence_f0_90_adv, byte_a1);
        carryQ.cq[156] = carryout2carry(pablo_blk_Advance(sequence_f0_90_a1, carryQ.get_carry_in(156), sequence_f0_90_a1_adv));
        tmp539 = simd_and(sequence_f0_90_a1_adv, byte_range_80_95);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp539);
        sequence_f0_90_a4 = simd_and(sequence_f0_90_adv, byte_a4);
        tmp540 = simd_andc(tmp146, tmp114);
        cc_range_10900_10920_4 = simd_or(byte_range_80_95, tmp540);
        carryQ.cq[157] = carryout2carry(pablo_blk_Advance(sequence_f0_90_a4, carryQ.get_carry_in(157), sequence_f0_90_a4_adv));
        tmp541 = simd_and(sequence_f0_90_a4_adv, cc_range_10900_10920_4);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp541);
        sequence_f0_90_a6 = simd_and(sequence_f0_90_adv, byte_a6);
        tmp542 = simd_and(basis_bits.bit_2, tmp123);
        tmp543 = simd_andc(byte_range_80_bf, tmp542);
        tmp544 = simd_and(byte_range_b0_bf, tmp48);
        cc_range_10980_109be_4 = simd_or(tmp543, tmp544);
        carryQ.cq[158] = carryout2carry(pablo_blk_Advance(sequence_f0_90_a6, carryQ.get_carry_in(158), sequence_f0_90_a6_adv));
        tmp545 = simd_and(sequence_f0_90_a6_adv, cc_range_10980_109be_4);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp545);
        sequence_f0_90_a8 = simd_and(sequence_f0_90_adv, byte_a8);
        tmp546 = simd_andc(byte_range_80_8f, tmp75);
        tmp547 = simd_andc(tmp58, tmp4);
        tmp548 = simd_or(tmp546, tmp547);
        tmp549 = simd_and(tmp303, tmp24);
        tmp550 = simd_or(tmp548, tmp549);
        tmp551 = simd_or(simd_and(basis_bits.bit_2, tmp399), simd_andc(tmp107, basis_bits.bit_2));
        tmp552 = simd_and(byte_range_80_bf, tmp551);
        cc_range_10a00_10a19_4 = simd_or(tmp550, tmp552);
        carryQ.cq[159] = carryout2carry(pablo_blk_Advance(sequence_f0_90_a8, carryQ.get_carry_in(159), sequence_f0_90_a8_adv));
        tmp553 = simd_and(sequence_f0_90_a8_adv, cc_range_10a00_10a19_4);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp553);
        sequence_f0_90_a9 = simd_and(sequence_f0_90_adv, byte_a9);
        byte_range_a0_bc = simd_andc(tmp146, tmp385);
        carryQ.cq[160] = carryout2carry(pablo_blk_Advance(sequence_f0_90_a9, carryQ.get_carry_in(160), sequence_f0_90_a9_adv));
        tmp554 = simd_and(sequence_f0_90_a9_adv, byte_range_a0_bc);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp554);
        sequence_f0_90_ac = simd_and(sequence_f0_90_adv, byte_ac);
        carryQ.cq[161] = carryout2carry(pablo_blk_Advance(sequence_f0_90_ac, carryQ.get_carry_in(161), sequence_f0_90_ac_adv));
        tmp555 = simd_and(sequence_f0_90_ac_adv, byte_range_80_b5);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp555);
        sequence_f0_90_ad = simd_and(sequence_f0_90_adv, byte_ad);
        tmp556 = simd_andc(tmp146, tmp142);
        cc_range_10b40_10b60_4 = simd_or(byte_range_80_95, tmp556);
        carryQ.cq[162] = carryout2carry(pablo_blk_Advance(sequence_f0_90_ad, carryQ.get_carry_in(162), sequence_f0_90_ad_adv));
        tmp557 = simd_and(sequence_f0_90_ad_adv, cc_range_10b40_10b60_4);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp557);
        sequence_f0_90_b0 = simd_and(sequence_f0_90_adv, byte_b0);
        carryQ.cq[163] = carryout2carry(pablo_blk_Advance(sequence_f0_90_b0, carryQ.get_carry_in(163), sequence_f0_90_b0_adv));
        tmp558 = simd_and(sequence_f0_90_b0_adv, byte_range_80_bf);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp558);
        sequence_f0_90_b1 = simd_and(sequence_f0_90_adv, byte_b1);
        carryQ.cq[164] = carryout2carry(pablo_blk_Advance(sequence_f0_90_b1, carryQ.get_carry_in(164), sequence_f0_90_b1_adv));
        tmp559 = simd_and(sequence_f0_90_b1_adv, byte_range_80_88);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp559);
        sequence_f0_91 = simd_and(byte_f0_adv, byte_91);
        carryQ.cq[165] = carryout2carry(pablo_blk_Advance(sequence_f0_91, carryQ.get_carry_in(165), tmp560));
        sequence_f0_91_80 = simd_and(tmp560, byte_80);
        carryQ.cq[166] = carryout2carry(pablo_blk_Advance(sequence_f0_91, carryQ.get_carry_in(166), sequence_f0_91_adv));
        tmp561 = simd_not(tmp123);
        tmp562 = simd_or(simd_and(basis_bits.bit_2, tmp561), simd_andc(tmp406, basis_bits.bit_2));
        byte_range_83_b7 = simd_and(byte_range_80_bf, tmp562);
        carryQ.cq[167] = carryout2carry(pablo_blk_Advance(sequence_f0_91_80, carryQ.get_carry_in(167), sequence_f0_91_80_adv));
        tmp563 = simd_and(sequence_f0_91_80_adv, byte_range_83_b7);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp563);
        sequence_f0_91_82 = simd_and(sequence_f0_91_adv, byte_82);
        tmp564 = simd_or(simd_and(basis_bits.bit_2, tmp77), simd_andc(tmp406, basis_bits.bit_2));
        byte_range_83_af = simd_and(byte_range_80_bf, tmp564);
        carryQ.cq[168] = carryout2carry(pablo_blk_Advance(sequence_f0_91_82, carryQ.get_carry_in(168), sequence_f0_91_82_adv));
        tmp565 = simd_and(sequence_f0_91_82_adv, byte_range_83_af);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp565);
        sequence_f0_91_83 = simd_and(sequence_f0_91_adv, byte_83);
        tmp566 = simd_or(simd_and(basis_bits.bit_2, tmp140), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
        byte_range_90_a8 = simd_and(byte_range_80_bf, tmp566);
        carryQ.cq[169] = carryout2carry(pablo_blk_Advance(sequence_f0_91_83, carryQ.get_carry_in(169), sequence_f0_91_83_adv));
        tmp567 = simd_and(sequence_f0_91_83_adv, byte_range_90_a8);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp567);
        sequence_f0_91_84 = simd_and(sequence_f0_91_adv, byte_84);
        tmp568 = simd_or(simd_and(basis_bits.bit_2, tmp500), simd_andc(tmp406, basis_bits.bit_2));
        byte_range_83_a6 = simd_and(byte_range_80_bf, tmp568);
        carryQ.cq[170] = carryout2carry(pablo_blk_Advance(sequence_f0_91_84, carryQ.get_carry_in(170), sequence_f0_91_84_adv));
        tmp569 = simd_and(sequence_f0_91_84_adv, byte_range_83_a6);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp569);
        sequence_f0_91_86 = simd_and(sequence_f0_91_adv, byte_86);
        tmp570 = simd_not(tmp142);
        tmp571 = simd_or(simd_and(basis_bits.bit_2, tmp570), simd_andc(tmp406, basis_bits.bit_2));
        byte_range_83_b2 = simd_and(byte_range_80_bf, tmp571);
        carryQ.cq[171] = carryout2carry(pablo_blk_Advance(sequence_f0_91_86, carryQ.get_carry_in(171), sequence_f0_91_86_adv));
        tmp572 = simd_and(sequence_f0_91_86_adv, byte_range_83_b2);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp572);
        sequence_f0_91_87 = simd_and(sequence_f0_91_adv, byte_87);
        byte_range_81_84 = simd_and(byte_range_80_87, tmp184);
        carryQ.cq[172] = carryout2carry(pablo_blk_Advance(sequence_f0_91_87, carryQ.get_carry_in(172), sequence_f0_91_87_adv));
        tmp573 = simd_and(sequence_f0_91_87_adv, byte_range_81_84);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp573);
        sequence_f0_91_9a = simd_and(sequence_f0_91_adv, byte_9a);
        carryQ.cq[173] = carryout2carry(pablo_blk_Advance(sequence_f0_91_9a, carryQ.get_carry_in(173), sequence_f0_91_9a_adv));
        tmp574 = simd_and(sequence_f0_91_9a_adv, byte_range_80_aa);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp574);
        sequence_f0_92 = simd_and(byte_f0_adv, byte_92);
        carryQ.cq[174] = carryout2carry(pablo_blk_Advance(sequence_f0_92, carryQ.get_carry_in(174), tmp575));
        sequence_f0_92_byte_range_80_8c = simd_and(tmp575, byte_range_80_8c);
        carryQ.cq[175] = carryout2carry(pablo_blk_Advance(sequence_f0_92_byte_range_80_8c, carryQ.get_carry_in(175), tmp576));
        sequence_f0_92_byte_range_80_8c_sfx = simd_and(tmp576, byte_range_80_bf);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_f0_92_byte_range_80_8c_sfx);
        carryQ.cq[176] = carryout2carry(pablo_blk_Advance(sequence_f0_92, carryQ.get_carry_in(176), sequence_f0_92_adv));
        sequence_f0_92_8d = simd_and(sequence_f0_92_adv, byte_8d);
        tmp577 = simd_or(basis_bits.bit_3, tmp71);
        tmp578 = simd_and(basis_bits.bit_2, tmp577);
        byte_range_80_ae = simd_andc(byte_range_80_bf, tmp578);
        carryQ.cq[177] = carryout2carry(pablo_blk_Advance(sequence_f0_92_8d, carryQ.get_carry_in(177), tmp579));
        sequence_f0_92_8d_byte_range_80_ae = simd_and(tmp579, byte_range_80_ae);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_f0_92_8d_byte_range_80_ae);
        byte_93 = simd_and(tmp58, tmp211);
        sequence_f0_93 = simd_and(byte_f0_adv, byte_93);
        carryQ.cq[178] = carryout2carry(pablo_blk_Advance(sequence_f0_93, carryQ.get_carry_in(178), tmp580));
        sequence_f0_93_byte_range_80_8f = simd_and(tmp580, byte_range_80_8f);
        carryQ.cq[179] = carryout2carry(pablo_blk_Advance(sequence_f0_93_byte_range_80_8f, carryQ.get_carry_in(179), tmp581));
        sequence_f0_93_byte_range_80_8f_sfx = simd_and(tmp581, byte_range_80_bf);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_f0_93_byte_range_80_8f_sfx);
        carryQ.cq[180] = carryout2carry(pablo_blk_Advance(sequence_f0_93, carryQ.get_carry_in(180), sequence_f0_93_adv));
        sequence_f0_93_90 = simd_and(sequence_f0_93_adv, byte_90);
        carryQ.cq[181] = carryout2carry(pablo_blk_Advance(sequence_f0_93_90, carryQ.get_carry_in(181), tmp582));
        sequence_f0_93_90_byte_range_80_ae = simd_and(tmp582, byte_range_80_ae);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_f0_93_90_byte_range_80_ae);
        byte_96 = simd_and(tmp58, tmp13);
        sequence_f0_96 = simd_and(byte_f0_adv, byte_96);
        byte_range_a0_a7 = simd_andc(tmp62, basis_bits.bit_4);
        carryQ.cq[182] = carryout2carry(pablo_blk_Advance(sequence_f0_96, carryQ.get_carry_in(182), tmp583));
        sequence_f0_96_byte_range_a0_a7 = simd_and(tmp583, byte_range_a0_a7);
        carryQ.cq[183] = carryout2carry(pablo_blk_Advance(sequence_f0_96_byte_range_a0_a7, carryQ.get_carry_in(183), tmp584));
        sequence_f0_96_byte_range_a0_a7_sfx = simd_and(tmp584, byte_range_80_bf);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_f0_96_byte_range_a0_a7_sfx);
        carryQ.cq[184] = carryout2carry(pablo_blk_Advance(sequence_f0_96, carryQ.get_carry_in(184), sequence_f0_96_adv));
        sequence_f0_96_a8 = simd_and(sequence_f0_96_adv, byte_a8);
        tmp585 = simd_and(basis_bits.bit_2, tmp107);
        byte_range_80_b8 = simd_andc(byte_range_80_bf, tmp585);
        carryQ.cq[185] = carryout2carry(pablo_blk_Advance(sequence_f0_96_a8, carryQ.get_carry_in(185), tmp586));
        sequence_f0_96_a8_byte_range_80_b8 = simd_and(tmp586, byte_range_80_b8);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_f0_96_a8_byte_range_80_b8);
        sequence_f0_96_bc = simd_and(sequence_f0_96_adv, byte_bc);
        carryQ.cq[186] = carryout2carry(pablo_blk_Advance(sequence_f0_96_bc, carryQ.get_carry_in(186), tmp587));
        sequence_f0_96_bc_byte_range_80_bf = simd_and(tmp587, byte_range_80_bf);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_f0_96_bc_byte_range_80_bf);
        sequence_f0_96_bd = simd_and(sequence_f0_96_adv, byte_bd);
        byte_range_80_84 = simd_andc(byte_range_80_87, tmp109);
        carryQ.cq[187] = carryout2carry(pablo_blk_Advance(sequence_f0_96_bd, carryQ.get_carry_in(187), tmp588));
        sequence_f0_96_bd_byte_range_80_84 = simd_and(tmp588, byte_range_80_84);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_f0_96_bd_byte_range_80_84);
        sequence_f0_9b = simd_and(byte_f0_adv, byte_9b);
        carryQ.cq[188] = carryout2carry(pablo_blk_Advance(sequence_f0_9b, carryQ.get_carry_in(188), tmp589));
        sequence_f0_9b_80 = simd_and(tmp589, byte_80);
        carryQ.cq[189] = carryout2carry(pablo_blk_Advance(sequence_f0_9b, carryQ.get_carry_in(189), sequence_f0_9b_adv));
        carryQ.cq[190] = carryout2carry(pablo_blk_Advance(sequence_f0_9b_80, carryQ.get_carry_in(190), sequence_f0_9b_80_adv));
        tmp590 = simd_and(sequence_f0_9b_80_adv, byte_range_80_81);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp590);
        sequence_f0_9e = simd_and(byte_f0_adv, byte_9e);
        carryQ.cq[191] = carryout2carry(pablo_blk_Advance(sequence_f0_9e, carryQ.get_carry_in(191), tmp591));
        sequence_f0_9e_b8 = simd_and(tmp591, byte_b8);
        carryQ.cq[192] = carryout2carry(pablo_blk_Advance(sequence_f0_9e, carryQ.get_carry_in(192), sequence_f0_9e_adv));
        tmp592 = simd_and(tmp55, tmp400);
        tmp593 = simd_or(tmp379, tmp592);
        tmp594 = simd_and(tmp307, tmp177);
        tmp595 = simd_or(tmp593, tmp594);
        tmp596 = simd_or(tmp595, byte_a4);
        tmp597 = simd_or(tmp596, byte_a7);
        tmp598 = simd_not(tmp141);
        tmp599 = simd_or(simd_and(basis_bits.bit_3, tmp598), simd_andc(tmp106, basis_bits.bit_3));
        tmp600 = simd_and(tmp146, tmp599);
        tmp601 = simd_or(tmp597, tmp600);
        tmp602 = simd_and(byte_range_b0_bf, tmp12);
        tmp603 = simd_or(tmp601, tmp602);
        tmp604 = simd_and(byte_range_b0_bf, tmp40);
        tmp605 = simd_or(tmp603, tmp604);
        tmp606 = simd_and(byte_range_b0_bf, tmp17);
        cc_range_1ee00_1ee3b_4 = simd_or(tmp605, tmp606);
        carryQ.cq[193] = carryout2carry(pablo_blk_Advance(sequence_f0_9e_b8, carryQ.get_carry_in(193), sequence_f0_9e_b8_adv));
        tmp607 = simd_and(sequence_f0_9e_b8_adv, cc_range_1ee00_1ee3b_4);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp607);
        sequence_f0_9e_b9 = simd_and(sequence_f0_9e_adv, byte_b9);
        tmp608 = simd_or(tmp6, tmp19);
        tmp609 = simd_or(tmp608, tmp40);
        tmp610 = simd_or(tmp609, tmp17);
        tmp611 = simd_and(byte_range_80_8f, tmp610);
        tmp612 = simd_or(tmp611, byte_range_8d_8f);
        tmp613 = simd_and(tmp547, tmp177);
        tmp614 = simd_or(tmp612, tmp613);
        tmp615 = simd_and(tmp58, tmp25);
        tmp616 = simd_or(tmp614, tmp615);
        tmp617 = simd_and(tmp58, tmp19);
        tmp618 = simd_or(tmp616, tmp617);
        tmp619 = simd_or(tmp618, byte_99);
        tmp620 = simd_or(tmp619, byte_9b);
        tmp621 = simd_or(tmp620, byte_9d);
        tmp622 = simd_or(tmp621, byte_9f);
        tmp623 = simd_or(tmp622, tmp594);
        tmp624 = simd_or(tmp623, byte_a4);
        tmp625 = simd_or(simd_and(basis_bits.bit_4, tmp41), simd_andc(tmp267, basis_bits.bit_4));
        tmp626 = simd_and(tmp62, tmp625);
        tmp627 = simd_or(tmp624, tmp626);
        tmp628 = simd_or(simd_and(basis_bits.bit_3, tmp598), simd_andc(tmp47, basis_bits.bit_3));
        tmp629 = simd_and(tmp146, tmp628);
        tmp630 = simd_or(tmp627, tmp629);
        tmp631 = simd_or(tmp630, tmp602);
        tmp632 = simd_and(tmp430, tmp184);
        tmp633 = simd_or(tmp631, tmp632);
        tmp634 = simd_and(byte_range_b0_bf, tmp88);
        cc_range_1ee42_1ee7e_4 = simd_or(tmp633, tmp634);
        carryQ.cq[194] = carryout2carry(pablo_blk_Advance(sequence_f0_9e_b9, carryQ.get_carry_in(194), sequence_f0_9e_b9_adv));
        tmp635 = simd_and(sequence_f0_9e_b9_adv, cc_range_1ee42_1ee7e_4);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp635);
        sequence_f0_9e_ba = simd_and(sequence_f0_9e_adv, byte_ba);
        tmp636 = simd_andc(byte_range_80_8f, tmp98);
        tmp637 = simd_not(tmp47);
        tmp638 = simd_or(simd_and(basis_bits.bit_3, tmp637), simd_andc(tmp29, basis_bits.bit_3));
        tmp639 = simd_and(tmp55, tmp638);
        tmp640 = simd_or(tmp636, tmp639);
        tmp641 = simd_or(tmp640, tmp308);
        tmp642 = simd_and(tmp62, tmp200);
        tmp643 = simd_or(tmp641, tmp642);
        tmp644 = simd_and(tmp146, tmp638);
        cc_range_1ee80_1eeab_4 = simd_or(tmp643, tmp644);
        carryQ.cq[195] = carryout2carry(pablo_blk_Advance(sequence_f0_9e_ba, carryQ.get_carry_in(195), sequence_f0_9e_ba_adv));
        tmp645 = simd_and(sequence_f0_9e_ba_adv, cc_range_1ee80_1eeab_4);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp645);
        byte_range_a0_a9 = simd_andc(tmp62, tmp98);
        byte_f0_byte_range_a0_a9 = simd_and(byte_f0_adv, byte_range_a0_a9);
        carryQ.cq[196] = carryout2carry(pablo_blk_Advance(byte_f0_byte_range_a0_a9, carryQ.get_carry_in(196), tmp646));
        byte_f0_byte_range_a0_a9_sfx = simd_and(tmp646, byte_range_80_bf);
        carryQ.cq[197] = carryout2carry(pablo_blk_Advance(byte_f0_byte_range_a0_a9_sfx, carryQ.get_carry_in(197), tmp647));
        byte_f0_byte_range_a0_a9_sfx_sfx = simd_and(tmp647, byte_range_80_bf);
        struct_Lo.cc = simd_or(struct_Lo.cc, byte_f0_byte_range_a0_a9_sfx_sfx);
        sequence_f0_aa = simd_and(byte_f0_adv, byte_aa);
        carryQ.cq[198] = carryout2carry(pablo_blk_Advance(sequence_f0_aa, carryQ.get_carry_in(198), sequence_f0_aa_adv));
        sequence_f0_aa_80 = simd_and(sequence_f0_aa_adv, byte_80);
        carryQ.cq[199] = carryout2carry(pablo_blk_Advance(sequence_f0_aa_80, carryQ.get_carry_in(199), tmp648));
        sequence_f0_aa_80_byte_range_80_96 = simd_and(tmp648, byte_range_80_96);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_f0_aa_80_byte_range_80_96);
        sequence_f0_ab = simd_and(byte_f0_adv, byte_ab);
        carryQ.cq[200] = carryout2carry(pablo_blk_Advance(sequence_f0_ab, carryQ.get_carry_in(200), sequence_f0_ab_adv));
        sequence_f0_ab_80 = simd_and(sequence_f0_ab_adv, byte_80);
        carryQ.cq[201] = carryout2carry(pablo_blk_Advance(sequence_f0_ab_80, carryQ.get_carry_in(201), tmp649));
        sequence_f0_ab_80_byte_range_80_b4 = simd_and(tmp649, byte_range_80_b4);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_f0_ab_80_byte_range_80_b4);
        sequence_f0_af = simd_and(byte_f0_adv, byte_af);
        carryQ.cq[202] = carryout2carry(pablo_blk_Advance(sequence_f0_af, carryQ.get_carry_in(202), sequence_f0_af_adv));
        sequence_f0_af_a0 = simd_and(sequence_f0_af_adv, byte_a0);
        carryQ.cq[203] = carryout2carry(pablo_blk_Advance(sequence_f0_af_a0, carryQ.get_carry_in(203), tmp650));
        sequence_f0_af_a0_byte_range_80_9d = simd_and(tmp650, byte_range_80_9d);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_f0_af_a0_byte_range_80_9d);
        carryQ.CarryQ_Adjust(204);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Lo & struct_Lo, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, byte_c2, tmp7, tmp8, tmp9, tmp10;
		BitBlock cc_range_aa_ba_2, byte_c2_adv, tmp11, tmp12, tmp13, byte_c6, tmp14;
		BitBlock tmp15, tmp16, tmp17, byte_bb, byte_c6_adv, tmp18, tmp19, byte_c7;
		BitBlock tmp20, byte_range_80_83, byte_c7_adv, tmp21, byte_ca, tmp22, tmp23;
		BitBlock tmp24, tmp25, byte_94, byte_ca_adv, tmp26, tmp27, byte_d7, tmp28;
		BitBlock tmp29, tmp30, tmp31, tmp32, tmp33, tmp34, tmp35, cc_range_5d0_5f0_2;
		BitBlock byte_d7_adv, tmp36, tmp37, byte_d8, byte_range_a0_bf, byte_d8_adv;
		BitBlock tmp38, tmp39, tmp40, byte_d9, tmp41, tmp42, tmp43, tmp44, tmp45;
		BitBlock tmp46, tmp47, tmp48, tmp49, tmp50, tmp51, tmp52, cc_range_641_671_2;
		BitBlock byte_d9_adv, tmp53, byte_da, byte_range_80_bf, byte_da_adv, tmp54;
		BitBlock byte_db, tmp55, tmp56, tmp57, tmp58, tmp59, tmp60, tmp61, tmp62;
		BitBlock tmp63, tmp64, tmp65, tmp66, tmp67, tmp68, tmp69, tmp70, tmp71, tmp72;
		BitBlock cc_range_6c0_6ff_2, byte_db_adv, tmp73, tmp74, byte_dc, tmp75, tmp76;
		BitBlock tmp77, tmp78, tmp79, tmp80, tmp81, cc_range_710_712_2, byte_dc_adv;
		BitBlock tmp82, tmp83, byte_dd, tmp84, tmp85, tmp86, byte_range_8d_bf;
		BitBlock byte_dd_adv, tmp87, tmp88, byte_de, tmp89, tmp90, tmp91, tmp92, tmp93;
		BitBlock tmp94, tmp95, cc_range_780_7b1_2, byte_de_adv, tmp96, byte_df, tmp97;
		BitBlock tmp98, tmp99, tmp100, byte_range_8a_aa, byte_df_adv, tmp101, tmp102;
		BitBlock byte_e0, byte_a0, tmp103, sequence_e0_a0, byte_e0_adv, tmp104;
		BitBlock byte_range_80_95, sequence_e0_a0_adv, tmp105, byte_a1, sequence_e0_a1;
		BitBlock tmp106, tmp107, byte_range_80_98, sequence_e0_a1_adv, tmp108, byte_a2;
		BitBlock sequence_e0_a2, tmp109, tmp110, tmp111, tmp112, cc_range_8a0_8a2_3;
		BitBlock sequence_e0_a2_adv, tmp113, byte_a4, sequence_e0_a4, tmp114, tmp115;
		BitBlock tmp116, tmp117, tmp118, tmp119, cc_range_904_93d_3;
		BitBlock sequence_e0_a4_adv, tmp120, byte_a5, sequence_e0_a5, tmp121, tmp122;
		BitBlock tmp123, tmp124, tmp125, tmp126, tmp127, tmp128, tmp129, tmp130;
		BitBlock cc_range_950_979_3, sequence_e0_a5_adv, tmp131, byte_a6;
		BitBlock sequence_e0_a6, tmp132, tmp133, tmp134, tmp135, tmp136, tmp137;
		BitBlock tmp138, tmp139, tmp140, tmp141, tmp142, tmp143, tmp144, tmp145;
		BitBlock tmp146, tmp147, tmp148, tmp149, tmp150, tmp151, tmp152, tmp153;
		BitBlock tmp154, tmp155, cc_range_985_9bd_3, sequence_e0_a6_adv, tmp156;
		BitBlock byte_a7, sequence_e0_a7, tmp157, tmp158, tmp159, tmp160, tmp161;
		BitBlock tmp162, tmp163, tmp164, tmp165, cc_range_9ce_9f0_3;
		BitBlock sequence_e0_a7_adv, tmp166, byte_a8, sequence_e0_a8, tmp167, tmp168;
		BitBlock tmp169, tmp170, tmp171, tmp172, tmp173, tmp174, tmp175, tmp176;
		BitBlock tmp177, tmp178, tmp179, tmp180, tmp181, cc_range_a05_a38_3;
		BitBlock sequence_e0_a8_adv, tmp182, byte_a9, sequence_e0_a9, tmp183, tmp184;
		BitBlock tmp185, tmp186, tmp187, tmp188, cc_range_a59_a72_3;
		BitBlock sequence_e0_a9_adv, tmp189, byte_aa, sequence_e0_aa, tmp190, tmp191;
		BitBlock tmp192, tmp193, tmp194, tmp195, tmp196, tmp197, tmp198, tmp199;
		BitBlock tmp200, tmp201, tmp202, cc_range_a85_abd_3, sequence_e0_aa_adv;
		BitBlock tmp203, byte_ab, sequence_e0_ab, tmp204, cc_range_ad0_ae0_3;
		BitBlock sequence_e0_ab_adv, tmp205, byte_ac, sequence_e0_ac, tmp206, tmp207;
		BitBlock cc_range_b05_b3d_3, sequence_e0_ac_adv, tmp208, byte_ad;
		BitBlock sequence_e0_ad, tmp209, cc_range_b5c_b71_3, sequence_e0_ad_adv;
		BitBlock tmp210, byte_ae, sequence_e0_ae, tmp211, tmp212, tmp213, tmp214;
		BitBlock tmp215, tmp216, tmp217, tmp218, tmp219, tmp220, tmp221, tmp222;
		BitBlock tmp223, tmp224, tmp225, tmp226, tmp227, tmp228, tmp229, tmp230;
		BitBlock tmp231, tmp232, tmp233, tmp234, tmp235, tmp236, tmp237, tmp238;
		BitBlock cc_range_b83_bae_3, sequence_e0_ae_adv, tmp239, byte_af;
		BitBlock sequence_e0_af, byte_90, sequence_e0_af_adv, tmp240, byte_b0;
		BitBlock sequence_e0_b0, tmp241, tmp242, tmp243, tmp244, tmp245, tmp246;
		BitBlock tmp247, tmp248, tmp249, cc_range_c05_c3d_3, sequence_e0_b0_adv;
		BitBlock tmp250, byte_b1, sequence_e0_b1, tmp251, cc_range_c58_c60_3;
		BitBlock sequence_e0_b1_adv, tmp252, byte_b2, sequence_e0_b2;
		BitBlock cc_range_c85_cbd_3, sequence_e0_b2_adv, tmp253, byte_b3;
		BitBlock sequence_e0_b3, tmp254, tmp255, tmp256, cc_range_cde_cf1_3;
		BitBlock sequence_e0_b3_adv, tmp257, byte_b4, sequence_e0_b4, tmp258, tmp259;
		BitBlock tmp260, tmp261, tmp262, cc_range_d05_d3d_3, sequence_e0_b4_adv;
		BitBlock tmp263, byte_b5, sequence_e0_b5, tmp264, tmp265, cc_range_d4e_d7a_3;
		BitBlock sequence_e0_b5_adv, tmp266, byte_b6, sequence_e0_b6, tmp267, tmp268;
		BitBlock tmp269, tmp270, tmp271, tmp272, tmp273, tmp274, tmp275, tmp276;
		BitBlock tmp277, tmp278, tmp279, tmp280, cc_range_d85_dbd_3;
		BitBlock sequence_e0_b6_adv, tmp281, byte_b7, sequence_e0_b7, tmp282;
		BitBlock byte_range_80_86, sequence_e0_b7_adv, tmp283, byte_b8, sequence_e0_b8;
		BitBlock tmp284, tmp285, tmp286, tmp287, tmp288, cc_range_e01_e32_3;
		BitBlock sequence_e0_b8_adv, tmp289, byte_b9, sequence_e0_b9, byte_range_80_85;
		BitBlock sequence_e0_b9_adv, tmp290, byte_ba, sequence_e0_ba, tmp291, tmp292;
		BitBlock tmp293, tmp294, tmp295, tmp296, tmp297, tmp298, tmp299, tmp300;
		BitBlock tmp301, tmp302, tmp303, tmp304, tmp305, tmp306, tmp307, tmp308;
		BitBlock tmp309, tmp310, tmp311, tmp312, tmp313, tmp314, tmp315, tmp316;
		BitBlock tmp317, tmp318, cc_range_e81_ebd_3, sequence_e0_ba_adv, tmp319;
		BitBlock sequence_e0_bb, tmp320, tmp321, cc_range_ec0_edc_3;
		BitBlock sequence_e0_bb_adv, tmp322, byte_bc, sequence_e0_bc, byte_80;
		BitBlock sequence_e0_bc_adv, tmp323, byte_bd, sequence_e0_bd, tmp324, tmp325;
		BitBlock tmp326, cc_range_f40_f49_3, sequence_e0_bd_adv, tmp327, byte_be;
		BitBlock sequence_e0_be, tmp328, byte_range_88_8c, sequence_e0_be_adv, tmp329;
		BitBlock byte_e1, tmp330, sequence_e1_80, byte_e1_adv, tmp331, tmp332;
		BitBlock cc_range_1000_103f_3, sequence_e1_80_adv, tmp333, byte_81;
		BitBlock sequence_e1_81, tmp334, tmp335, tmp336, tmp337, tmp338, tmp339;
		BitBlock tmp340, tmp341, tmp342, tmp343, cc_range_1050_1075_3;
		BitBlock sequence_e1_81_adv, tmp344, byte_82, sequence_e1_82, tmp345;
		BitBlock cc_range_1080_108e_3, sequence_e1_82_adv, tmp346, byte_83;
		BitBlock sequence_e1_83, tmp347, tmp348, tmp349, tmp350, cc_range_10d0_10fd_3;
		BitBlock sequence_e1_83_adv, tmp351, tmp352, byte_range_84_88;
		BitBlock byte_e1_byte_range_84_88, tmp353, byte_e1_byte_range_84_88_sfx;
		BitBlock byte_89, sequence_e1_89, byte_range_80_88, tmp354;
		BitBlock sequence_e1_89_byte_range_80_88, byte_8a, sequence_e1_8a, tmp355;
		BitBlock sequence_e1_8a_byte_range_80_88, byte_8b, sequence_e1_8b, tmp356;
		BitBlock sequence_e1_8b_80, byte_8c, sequence_e1_8c, byte_range_80_90, tmp357;
		BitBlock sequence_e1_8c_byte_range_80_90, byte_8d, sequence_e1_8d;
		BitBlock byte_range_80_9a, tmp358, sequence_e1_8d_byte_range_80_9a, byte_8e;
		BitBlock sequence_e1_8e, byte_range_80_8f, tmp359;
		BitBlock sequence_e1_8e_byte_range_80_8f, byte_8f, sequence_e1_8f, tmp360;
		BitBlock tmp361, byte_range_80_b4, tmp362, sequence_e1_8f_byte_range_80_b4;
		BitBlock sequence_e1_90, tmp363, byte_range_81_bf, tmp364;
		BitBlock sequence_e1_90_byte_range_81_bf, byte_91, sequence_e1_91, tmp365;
		BitBlock sequence_e1_91_byte_range_80_bf, byte_99, sequence_e1_99, tmp366;
		BitBlock byte_range_80_ac, tmp367, sequence_e1_99_byte_range_80_ac, byte_9a;
		BitBlock sequence_e1_9a, tmp368, tmp369, byte_range_81_9a, tmp370;
		BitBlock sequence_e1_9a_byte_range_81_9a, byte_9b, sequence_e1_9b;
		BitBlock byte_range_80_aa, tmp371, sequence_e1_9b_byte_range_80_aa, byte_9c;
		BitBlock sequence_e1_9c, tmp372, byte_range_80_8c, tmp373;
		BitBlock sequence_e1_9c_byte_range_80_8c, byte_9d, sequence_e1_9d;
		BitBlock byte_range_80_91, tmp374, sequence_e1_9d_byte_range_80_91, byte_9e;
		BitBlock sequence_e1_9e, tmp375, byte_range_80_b3, tmp376;
		BitBlock sequence_e1_9e_byte_range_80_b3, byte_9f, sequence_e1_9f, tmp377;
		BitBlock sequence_e1_9f_9c, sequence_e1_a0, tmp378;
		BitBlock sequence_e1_a0_byte_range_a0_bf, sequence_e1_a1, tmp379;
		BitBlock byte_range_80_82, tmp380, sequence_e1_a1_byte_range_80_82;
		BitBlock sequence_e1_a2, tmp381, byte_range_80_a8, tmp382;
		BitBlock sequence_e1_a2_byte_range_80_a8, byte_a3, sequence_e1_a3, tmp383;
		BitBlock byte_range_80_b5, tmp384, sequence_e1_a3_byte_range_80_b5;
		BitBlock sequence_e1_a4, tmp385, byte_range_80_9c, tmp386;
		BitBlock sequence_e1_a4_byte_range_80_9c, sequence_e1_a5, tmp387, tmp388;
		BitBlock tmp389, byte_range_90_ad, tmp390, sequence_e1_a5_byte_range_90_ad;
		BitBlock sequence_e1_a6, tmp391, tmp392, byte_range_80_ab, tmp393;
		BitBlock sequence_e1_a6_byte_range_80_ab, sequence_e1_a7, tmp394;
		BitBlock byte_range_81_87, tmp395, sequence_e1_a7_byte_range_81_87;
		BitBlock sequence_e1_a8, tmp396, byte_range_80_96, tmp397;
		BitBlock sequence_e1_a8_byte_range_80_96, sequence_e1_a9, byte_range_80_94;
		BitBlock tmp398, sequence_e1_a9_byte_range_80_94, sequence_e1_ac, tmp399;
		BitBlock tmp400, tmp401, byte_range_85_b3, tmp402;
		BitBlock sequence_e1_ac_byte_range_85_b3, sequence_e1_ad, tmp403;
		BitBlock byte_range_85_8b, tmp404, sequence_e1_ad_byte_range_85_8b;
		BitBlock sequence_e1_ae, tmp405, tmp406, tmp407, byte_range_83_a0, tmp408;
		BitBlock sequence_e1_ae_byte_range_83_a0, sequence_e1_af, byte_range_80_a5;
		BitBlock tmp409, sequence_e1_af_byte_range_80_a5, sequence_e1_b0, tmp410;
		BitBlock byte_range_80_a3, tmp411, sequence_e1_b0_byte_range_80_a3;
		BitBlock sequence_e1_b1, tmp412, byte_range_8d_8f, tmp413;
		BitBlock sequence_e1_b1_byte_range_8d_8f, sequence_e1_b3, tmp414;
		BitBlock byte_range_a9_ac, tmp415, sequence_e1_b3_byte_range_a9_ac, byte_e2;
		BitBlock byte_84, tmp416, sequence_e2_84, byte_e2_adv, tmp417;
		BitBlock byte_range_b5_b8, sequence_e2_84_adv, tmp418, sequence_e2_b4;
		BitBlock byte_range_b0_bf, sequence_e2_b4_adv, tmp419, sequence_e2_b5, tmp420;
		BitBlock tmp421, byte_range_80_a7, sequence_e2_b5_adv, tmp422, sequence_e2_b6;
		BitBlock tmp423, tmp424, tmp425, tmp426, tmp427, tmp428, tmp429, tmp430;
		BitBlock tmp431, cc_range_2d80_2db8_3, sequence_e2_b6_adv, tmp432;
		BitBlock sequence_e2_b7, tmp433, tmp434, cc_range_2dc0_2dd8_3;
		BitBlock sequence_e2_b7_adv, tmp435, byte_e3, tmp436, sequence_e3_80;
		BitBlock byte_e3_adv, tmp437, tmp438, cc_range_3006_303c_3, sequence_e3_80_adv;
		BitBlock tmp439, sequence_e3_81, sequence_e3_81_adv, tmp440, sequence_e3_82;
		BitBlock tmp441, tmp442, cc_range_3080_30a1_3, sequence_e3_82_adv, tmp443;
		BitBlock sequence_e3_83, tmp444, tmp445, tmp446, cc_range_30c0_30ff_3;
		BitBlock sequence_e3_83_adv, tmp447, sequence_e3_84, tmp448, tmp449, tmp450;
		BitBlock cc_range_3105_3131_3, sequence_e3_84_adv, tmp451, byte_85;
		BitBlock sequence_e3_85, sequence_e3_85_adv, tmp452, byte_86, sequence_e3_86;
		BitBlock tmp453, tmp454, tmp455, cc_range_3180_31a0_3, sequence_e3_86_adv;
		BitBlock tmp456, byte_87, sequence_e3_87, sequence_e3_87_adv, tmp457;
		BitBlock byte_range_90_bf, byte_e3_byte_range_90_bf, tmp458;
		BitBlock byte_e3_byte_range_90_bf_sfx, byte_e4, tmp459;
		BitBlock byte_e4_byte_range_80_b5, tmp460, byte_e4_byte_range_80_b5_sfx;
		BitBlock byte_e4_adv, sequence_e4_b6, tmp461, sequence_e4_b6_byte_range_80_b5;
		BitBlock sequence_e4_b8, tmp462, sequence_e4_b8_byte_range_80_bf;
		BitBlock byte_range_e5_e8, tmp463, byte_range_e5_e8_sfx, tmp464;
		BitBlock byte_range_e5_e8_sfx_sfx, byte_e9, byte_e9_adv, sequence_e9_80;
		BitBlock tmp465, sequence_e9_80_byte_range_80_8c, byte_ea, byte_ea_adv;
		BitBlock sequence_ea_80, tmp466, sequence_ea_80_byte_range_80_94, byte_eb;
		BitBlock byte_eb_adv, sequence_eb_80, tmp467, sequence_eb_80_byte_range_80_bf;
		BitBlock byte_ed, byte_ed_adv, sequence_ed_80, tmp468;
		BitBlock sequence_ed_80_byte_range_80_a3, byte_ef, byte_range_a4_a8, tmp469;
		BitBlock byte_ef_byte_range_a4_a8, tmp470, byte_ef_byte_range_a4_a8_sfx;
		BitBlock byte_ef_adv, sequence_ef_a9, tmp471, byte_range_80_ad, tmp472;
		BitBlock sequence_ef_a9_byte_range_80_ad, sequence_ef_aa, tmp473;
		BitBlock sequence_ef_aa_byte_range_80_bf, sequence_ef_ab, byte_range_80_99;
		BitBlock tmp474, sequence_ef_ab_byte_range_80_99, sequence_ef_ac, tmp475;
		BitBlock sequence_ef_ac_9d, sequence_ef_ad, byte_range_80_81, tmp476;
		BitBlock sequence_ef_ad_byte_range_80_81, sequence_ef_ae, tmp477;
		BitBlock byte_range_80_b1, tmp478, sequence_ef_ae_byte_range_80_b1;
		BitBlock sequence_ef_af, tmp479, byte_range_93_bf, tmp480;
		BitBlock sequence_ef_af_byte_range_93_bf, sequence_ef_b0, tmp481;
		BitBlock sequence_ef_b0_byte_range_80_bf, sequence_ef_b4, tmp482, tmp483;
		BitBlock byte_range_80_bd, tmp484, sequence_ef_b4_byte_range_80_bd;
		BitBlock sequence_ef_b5, tmp485, sequence_ef_b5_byte_range_90_bf;
		BitBlock sequence_ef_b6, tmp486, sequence_ef_b6_byte_range_80_8f;
		BitBlock sequence_ef_b7, byte_range_80_87, tmp487;
		BitBlock sequence_ef_b7_byte_range_80_87, sequence_ef_b9, byte_range_b0_b4;
		BitBlock tmp488, sequence_ef_b9_byte_range_b0_b4, sequence_ef_ba, tmp489;
		BitBlock sequence_ef_ba_byte_range_80_bf, sequence_ef_bb, tmp490;
		BitBlock byte_range_80_bc, tmp491, sequence_ef_bb_byte_range_80_bc;
		BitBlock sequence_ef_bd, byte_range_a6_af, tmp492;
		BitBlock sequence_ef_bd_byte_range_a6_af, sequence_ef_be, byte_range_80_9d;
		BitBlock tmp493, sequence_ef_be_byte_range_80_9d, byte_bf, sequence_ef_bf;
		BitBlock byte_range_82_87, tmp494, sequence_ef_bf_byte_range_82_87, tmp495;
		BitBlock byte_f0, tmp496, sequence_f0_90, byte_f0_adv, tmp497;
		BitBlock sequence_f0_90_80, sequence_f0_90_adv, tmp498, tmp499, tmp500, tmp501;
		BitBlock tmp502, tmp503, tmp504, tmp505, tmp506, tmp507, tmp508;
		BitBlock cc_range_10000_1003f_4, sequence_f0_90_80_adv, tmp509;
		BitBlock sequence_f0_90_81, tmp510, tmp511, tmp512, cc_range_10040_10050_4;
		BitBlock sequence_f0_90_81_adv, tmp513, sequence_f0_90_82;
		BitBlock sequence_f0_90_82_adv, tmp514, sequence_f0_90_83, byte_range_80_ba;
		BitBlock sequence_f0_90_83_adv, tmp515, sequence_f0_90_8a;
		BitBlock cc_range_10280_102a0_4, sequence_f0_90_8a_adv, tmp516;
		BitBlock sequence_f0_90_8b, sequence_f0_90_8b_adv, tmp517, sequence_f0_90_8c;
		BitBlock tmp518, cc_range_10300_10330_4, sequence_f0_90_8c_adv, tmp519;
		BitBlock sequence_f0_90_8d, tmp520, tmp521, cc_range_10340_10342_4;
		BitBlock sequence_f0_90_8d_adv, tmp522, sequence_f0_90_8e;
		BitBlock cc_range_10380_103a0_4, sequence_f0_90_8e_adv, tmp523;
		BitBlock sequence_f0_90_8f, tmp524, cc_range_103c0_103c8_4;
		BitBlock sequence_f0_90_8f_adv, tmp525, sequence_f0_90_91;
		BitBlock sequence_f0_90_91_adv, tmp526, byte_92, sequence_f0_90_92;
		BitBlock sequence_f0_90_92_adv, tmp527, sequence_f0_90_a0, tmp528, tmp529;
		BitBlock tmp530, tmp531, tmp532, tmp533, tmp534, tmp535, tmp536, tmp537;
		BitBlock cc_range_10800_1083f_4, sequence_f0_90_a0_adv, tmp538;
		BitBlock sequence_f0_90_a1, sequence_f0_90_a1_adv, tmp539, sequence_f0_90_a4;
		BitBlock tmp540, cc_range_10900_10920_4, sequence_f0_90_a4_adv, tmp541;
		BitBlock sequence_f0_90_a6, tmp542, tmp543, tmp544, cc_range_10980_109be_4;
		BitBlock sequence_f0_90_a6_adv, tmp545, sequence_f0_90_a8, tmp546, tmp547;
		BitBlock tmp548, tmp549, tmp550, tmp551, tmp552, cc_range_10a00_10a19_4;
		BitBlock sequence_f0_90_a8_adv, tmp553, sequence_f0_90_a9, byte_range_a0_bc;
		BitBlock sequence_f0_90_a9_adv, tmp554, sequence_f0_90_ac;
		BitBlock sequence_f0_90_ac_adv, tmp555, sequence_f0_90_ad, tmp556;
		BitBlock cc_range_10b40_10b60_4, sequence_f0_90_ad_adv, tmp557;
		BitBlock sequence_f0_90_b0, sequence_f0_90_b0_adv, tmp558, sequence_f0_90_b1;
		BitBlock sequence_f0_90_b1_adv, tmp559, sequence_f0_91, tmp560;
		BitBlock sequence_f0_91_80, sequence_f0_91_adv, tmp561, tmp562;
		BitBlock byte_range_83_b7, sequence_f0_91_80_adv, tmp563, sequence_f0_91_82;
		BitBlock tmp564, byte_range_83_af, sequence_f0_91_82_adv, tmp565;
		BitBlock sequence_f0_91_83, tmp566, byte_range_90_a8, sequence_f0_91_83_adv;
		BitBlock tmp567, sequence_f0_91_84, tmp568, byte_range_83_a6;
		BitBlock sequence_f0_91_84_adv, tmp569, sequence_f0_91_86, tmp570, tmp571;
		BitBlock byte_range_83_b2, sequence_f0_91_86_adv, tmp572, sequence_f0_91_87;
		BitBlock byte_range_81_84, sequence_f0_91_87_adv, tmp573, sequence_f0_91_9a;
		BitBlock sequence_f0_91_9a_adv, tmp574, sequence_f0_92, tmp575;
		BitBlock sequence_f0_92_byte_range_80_8c, tmp576;
		BitBlock sequence_f0_92_byte_range_80_8c_sfx, sequence_f0_92_adv;
		BitBlock sequence_f0_92_8d, tmp577, tmp578, byte_range_80_ae, tmp579;
		BitBlock sequence_f0_92_8d_byte_range_80_ae, byte_93, sequence_f0_93, tmp580;
		BitBlock sequence_f0_93_byte_range_80_8f, tmp581;
		BitBlock sequence_f0_93_byte_range_80_8f_sfx, sequence_f0_93_adv;
		BitBlock sequence_f0_93_90, tmp582, sequence_f0_93_90_byte_range_80_ae;
		BitBlock byte_96, sequence_f0_96, byte_range_a0_a7, tmp583;
		BitBlock sequence_f0_96_byte_range_a0_a7, tmp584;
		BitBlock sequence_f0_96_byte_range_a0_a7_sfx, sequence_f0_96_adv;
		BitBlock sequence_f0_96_a8, tmp585, byte_range_80_b8, tmp586;
		BitBlock sequence_f0_96_a8_byte_range_80_b8, sequence_f0_96_bc, tmp587;
		BitBlock sequence_f0_96_bc_byte_range_80_bf, sequence_f0_96_bd;
		BitBlock byte_range_80_84, tmp588, sequence_f0_96_bd_byte_range_80_84;
		BitBlock sequence_f0_9b, tmp589, sequence_f0_9b_80, sequence_f0_9b_adv;
		BitBlock sequence_f0_9b_80_adv, tmp590, sequence_f0_9e, tmp591;
		BitBlock sequence_f0_9e_b8, sequence_f0_9e_adv, tmp592, tmp593, tmp594, tmp595;
		BitBlock tmp596, tmp597, tmp598, tmp599, tmp600, tmp601, tmp602, tmp603;
		BitBlock tmp604, tmp605, tmp606, cc_range_1ee00_1ee3b_4, sequence_f0_9e_b8_adv;
		BitBlock tmp607, sequence_f0_9e_b9, tmp608, tmp609, tmp610, tmp611, tmp612;
		BitBlock tmp613, tmp614, tmp615, tmp616, tmp617, tmp618, tmp619, tmp620;
		BitBlock tmp621, tmp622, tmp623, tmp624, tmp625, tmp626, tmp627, tmp628;
		BitBlock tmp629, tmp630, tmp631, tmp632, tmp633, tmp634;
		BitBlock cc_range_1ee42_1ee7e_4, sequence_f0_9e_b9_adv, tmp635;
		BitBlock sequence_f0_9e_ba, tmp636, tmp637, tmp638, tmp639, tmp640, tmp641;
		BitBlock tmp642, tmp643, tmp644, cc_range_1ee80_1eeab_4, sequence_f0_9e_ba_adv;
		BitBlock tmp645, byte_range_a0_a9, byte_f0_byte_range_a0_a9, tmp646;
		BitBlock byte_f0_byte_range_a0_a9_sfx, tmp647;
		BitBlock byte_f0_byte_range_a0_a9_sfx_sfx, sequence_f0_aa, sequence_f0_aa_adv;
		BitBlock sequence_f0_aa_80, tmp648, sequence_f0_aa_80_byte_range_80_96;
		BitBlock sequence_f0_ab, sequence_f0_ab_adv, sequence_f0_ab_80, tmp649;
		BitBlock sequence_f0_ab_80_byte_range_80_b4, sequence_f0_af;
		BitBlock sequence_f0_af_adv, sequence_f0_af_a0, tmp650;
		BitBlock sequence_f0_af_a0_byte_range_80_9d;




        struct_Lo.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_andc(tmp5, tmp4);
        byte_c2 = simd_and(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp8 = simd_and(tmp7, tmp5);
        tmp9 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp10 = simd_and(tmp9, basis_bits.bit_2);
        cc_range_aa_ba_2 = simd_and(tmp8, tmp10);
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(byte_c2, carryQ.get_carry_in(0), byte_c2_adv));
        tmp11 = simd_and(byte_c2_adv, cc_range_aa_ba_2);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp11);
        tmp12 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp13 = simd_and(tmp12, tmp5);
        byte_c6 = simd_and(tmp3, tmp13);
        tmp14 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp15 = simd_and(tmp9, tmp14);
        tmp16 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp17 = simd_and(tmp7, tmp16);
        byte_bb = simd_and(tmp15, tmp17);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(byte_c6, carryQ.get_carry_in(1), byte_c6_adv));
        tmp18 = simd_and(byte_c6_adv, byte_bb);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp18);
        tmp19 = simd_and(tmp12, tmp16);
        byte_c7 = simd_and(tmp3, tmp19);
        tmp20 = simd_andc(tmp9, tmp2);
        byte_range_80_83 = simd_andc(tmp20, tmp4);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(byte_c7, carryQ.get_carry_in(2), byte_c7_adv));
        tmp21 = simd_and(byte_c7_adv, byte_range_80_83);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp21);
        byte_ca = simd_and(tmp3, tmp8);
        tmp22 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp23 = simd_and(tmp9, tmp22);
        tmp24 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp25 = simd_andc(tmp12, tmp24);
        byte_94 = simd_and(tmp23, tmp25);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(byte_ca, carryQ.get_carry_in(3), byte_ca_adv));
        tmp26 = simd_and(byte_ca_adv, byte_94);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp26);
        tmp27 = simd_and(tmp1, tmp22);
        byte_d7 = simd_and(tmp27, tmp19);
        tmp28 = simd_or(basis_bits.bit_5, tmp16);
        tmp29 = simd_and(basis_bits.bit_4, tmp28);
        tmp30 = simd_or(basis_bits.bit_3, tmp29);
        tmp31 = simd_not(tmp30);
        tmp32 = simd_or(simd_and(basis_bits.bit_2, tmp31), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
        tmp33 = simd_and(tmp9, tmp32);
        tmp34 = simd_andc(tmp15, tmp4);
        tmp35 = simd_andc(tmp34, tmp16);
        cc_range_5d0_5f0_2 = simd_or(tmp33, tmp35);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(byte_d7, carryQ.get_carry_in(4), byte_d7_adv));
        tmp36 = simd_and(byte_d7_adv, cc_range_5d0_5f0_2);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp36);
        tmp37 = simd_andc(tmp7, tmp24);
        byte_d8 = simd_and(tmp27, tmp37);
        byte_range_a0_bf = simd_and(tmp9, basis_bits.bit_2);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(byte_d8, carryQ.get_carry_in(5), byte_d8_adv));
        tmp38 = simd_and(byte_d8_adv, byte_range_a0_bf);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp38);
        tmp39 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp40 = simd_and(tmp7, tmp39);
        byte_d9 = simd_and(tmp27, tmp40);
        tmp41 = simd_not(tmp28);
        tmp42 = simd_or(basis_bits.bit_5, tmp24);
        tmp43 = simd_or(simd_and(basis_bits.bit_4, tmp41), simd_andc(tmp42, basis_bits.bit_4));
        tmp44 = simd_and(tmp20, tmp43);
        tmp45 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp46 = simd_and(tmp9, tmp45);
        tmp47 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp48 = simd_and(tmp47, basis_bits.bit_6);
        tmp49 = simd_and(tmp46, tmp48);
        tmp50 = simd_or(tmp44, tmp49);
        tmp51 = simd_or(basis_bits.bit_4, tmp42);
        tmp52 = simd_and(tmp15, tmp51);
        cc_range_641_671_2 = simd_or(tmp50, tmp52);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(byte_d9, carryQ.get_carry_in(6), byte_d9_adv));
        tmp53 = simd_and(byte_d9_adv, cc_range_641_671_2);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp53);
        byte_da = simd_and(tmp27, tmp8);
        byte_range_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(byte_da, carryQ.get_carry_in(7), byte_da_adv));
        tmp54 = simd_and(byte_da_adv, byte_range_80_bf);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp54);
        byte_db = simd_and(tmp27, tmp17);
        tmp55 = simd_andc(byte_range_80_bf, basis_bits.bit_2);
        tmp56 = simd_and(basis_bits.bit_3, tmp4);
        tmp57 = simd_andc(tmp55, tmp56);
        tmp58 = simd_and(byte_range_80_bf, tmp22);
        tmp59 = simd_and(tmp12, tmp39);
        tmp60 = simd_and(tmp58, tmp59);
        tmp61 = simd_or(tmp57, tmp60);
        tmp62 = simd_and(byte_range_80_bf, tmp45);
        tmp63 = simd_and(tmp62, tmp48);
        tmp64 = simd_or(tmp61, tmp63);
        tmp65 = simd_and(byte_range_80_bf, tmp14);
        tmp66 = simd_and(tmp65, basis_bits.bit_4);
        tmp67 = simd_not(tmp24);
        tmp68 = simd_or(simd_and(basis_bits.bit_5, tmp67), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        tmp69 = simd_and(tmp66, tmp68);
        tmp70 = simd_or(tmp64, tmp69);
        tmp71 = simd_and(tmp47, tmp16);
        tmp72 = simd_and(tmp65, tmp71);
        cc_range_6c0_6ff_2 = simd_or(tmp70, tmp72);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(byte_db, carryQ.get_carry_in(8), byte_db_adv));
        tmp73 = simd_and(byte_db_adv, cc_range_6c0_6ff_2);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp73);
        tmp74 = simd_andc(tmp47, tmp24);
        byte_dc = simd_and(tmp27, tmp74);
        tmp75 = simd_or(tmp4, tmp24);
        tmp76 = simd_andc(tmp58, tmp75);
        tmp77 = simd_not(basis_bits.bit_3);
        tmp78 = simd_or(tmp4, basis_bits.bit_6);
        tmp79 = simd_and(basis_bits.bit_3, tmp78);
        tmp80 = simd_or(simd_and(basis_bits.bit_2, tmp77), simd_andc(tmp79, basis_bits.bit_2));
        tmp81 = simd_and(byte_range_80_bf, tmp80);
        cc_range_710_712_2 = simd_or(tmp76, tmp81);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(byte_dc, carryQ.get_carry_in(9), byte_dc_adv));
        tmp82 = simd_and(byte_dc_adv, cc_range_710_712_2);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp82);
        tmp83 = simd_and(tmp47, tmp39);
        byte_dd = simd_and(tmp27, tmp83);
        tmp84 = simd_and(tmp47, tmp24);
        tmp85 = simd_or(basis_bits.bit_3, tmp84);
        tmp86 = simd_or(basis_bits.bit_2, tmp85);
        byte_range_8d_bf = simd_and(byte_range_80_bf, tmp86);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(byte_dd, carryQ.get_carry_in(10), byte_dd_adv));
        tmp87 = simd_and(byte_dd_adv, byte_range_8d_bf);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp87);
        tmp88 = simd_and(tmp47, tmp5);
        byte_de = simd_and(tmp27, tmp88);
        tmp89 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp90 = simd_or(basis_bits.bit_4, tmp89);
        tmp91 = simd_or(basis_bits.bit_3, tmp90);
        tmp92 = simd_and(basis_bits.bit_2, tmp91);
        tmp93 = simd_andc(byte_range_80_bf, tmp92);
        tmp94 = simd_andc(tmp39, tmp4);
        tmp95 = simd_and(tmp65, tmp94);
        cc_range_780_7b1_2 = simd_or(tmp93, tmp95);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(byte_de, carryQ.get_carry_in(11), byte_de_adv));
        tmp96 = simd_and(byte_de_adv, cc_range_780_7b1_2);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp96);
        byte_df = simd_and(tmp27, tmp71);
        tmp97 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
        tmp98 = simd_and(basis_bits.bit_4, tmp97);
        tmp99 = simd_or(basis_bits.bit_3, tmp98);
        tmp100 = simd_or(simd_and(basis_bits.bit_2, tmp31), simd_andc(tmp99, basis_bits.bit_2));
        byte_range_8a_aa = simd_and(byte_range_80_bf, tmp100);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(byte_df, carryQ.get_carry_in(12), byte_df_adv));
        tmp101 = simd_and(byte_df_adv, byte_range_8a_aa);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp101);
        tmp102 = simd_and(tmp1, tmp45);
        byte_e0 = simd_andc(tmp102, tmp75);
        byte_a0 = simd_andc(tmp62, tmp75);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(byte_e0, carryQ.get_carry_in(13), tmp103));
        sequence_e0_a0 = simd_and(tmp103, byte_a0);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(byte_e0, carryQ.get_carry_in(14), byte_e0_adv));
        tmp104 = simd_and(basis_bits.bit_3, tmp90);
        byte_range_80_95 = simd_andc(tmp55, tmp104);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(sequence_e0_a0, carryQ.get_carry_in(15), sequence_e0_a0_adv));
        tmp105 = simd_and(sequence_e0_a0_adv, byte_range_80_95);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp105);
        byte_a1 = simd_and(tmp62, tmp94);
        sequence_e0_a1 = simd_and(byte_e0_adv, byte_a1);
        tmp106 = simd_and(basis_bits.bit_4, tmp42);
        tmp107 = simd_and(basis_bits.bit_3, tmp106);
        byte_range_80_98 = simd_andc(tmp55, tmp107);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(sequence_e0_a1, carryQ.get_carry_in(16), sequence_e0_a1_adv));
        tmp108 = simd_and(sequence_e0_a1_adv, byte_range_80_98);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp108);
        byte_a2 = simd_and(tmp62, tmp6);
        sequence_e0_a2 = simd_and(byte_e0_adv, byte_a2);
        tmp109 = simd_and(basis_bits.bit_5, tmp24);
        tmp110 = simd_not(tmp109);
        tmp111 = simd_or(simd_and(basis_bits.bit_4, tmp110), simd_andc(tmp97, basis_bits.bit_4));
        tmp112 = simd_andc(tmp75, tmp111);
        cc_range_8a0_8a2_3 = simd_andc(tmp62, tmp112);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(sequence_e0_a2, carryQ.get_carry_in(17), sequence_e0_a2_adv));
        tmp113 = simd_and(sequence_e0_a2_adv, cc_range_8a0_8a2_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp113);
        byte_a4 = simd_and(tmp62, tmp25);
        sequence_e0_a4 = simd_and(byte_e0_adv, byte_a4);
        tmp114 = simd_and(basis_bits.bit_3, tmp98);
        tmp115 = simd_not(tmp114);
        tmp116 = simd_or(basis_bits.bit_3, tmp4);
        tmp117 = simd_or(simd_and(basis_bits.bit_2, tmp115), simd_andc(tmp116, basis_bits.bit_2));
        tmp118 = simd_and(byte_range_80_bf, tmp117);
        tmp119 = simd_and(tmp65, tmp83);
        cc_range_904_93d_3 = simd_or(tmp118, tmp119);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(sequence_e0_a4, carryQ.get_carry_in(18), sequence_e0_a4_adv));
        tmp120 = simd_and(sequence_e0_a4_adv, cc_range_904_93d_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp120);
        byte_a5 = simd_and(tmp62, tmp59);
        sequence_e0_a5 = simd_and(byte_e0_adv, byte_a5);
        tmp121 = simd_or(basis_bits.bit_3, tmp78);
        tmp122 = simd_not(tmp121);
        tmp123 = simd_and(basis_bits.bit_3, basis_bits.bit_4);
        tmp124 = simd_or(simd_and(basis_bits.bit_2, tmp122), simd_andc(tmp123, basis_bits.bit_2));
        tmp125 = simd_and(byte_range_80_bf, tmp124);
        tmp126 = simd_or(tmp76, tmp125);
        tmp127 = simd_andc(tmp65, basis_bits.bit_4);
        tmp128 = simd_and(tmp127, tmp97);
        tmp129 = simd_or(tmp126, tmp128);
        tmp130 = simd_and(tmp66, tmp42);
        cc_range_950_979_3 = simd_or(tmp129, tmp130);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(sequence_e0_a5, carryQ.get_carry_in(19), sequence_e0_a5_adv));
        tmp131 = simd_and(sequence_e0_a5_adv, cc_range_950_979_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp131);
        byte_a6 = simd_and(tmp62, tmp13);
        sequence_e0_a6 = simd_and(byte_e0_adv, byte_a6);
        tmp132 = simd_andc(byte_range_80_bf, tmp2);
        tmp133 = simd_or(simd_and(basis_bits.bit_4, tmp110), simd_andc(tmp109, basis_bits.bit_4));
        tmp134 = simd_and(tmp132, tmp133);
        tmp135 = simd_not(tmp75);
        tmp136 = simd_or(simd_and(basis_bits.bit_3, tmp135), simd_andc(tmp71, basis_bits.bit_3));
        tmp137 = simd_and(tmp55, tmp136);
        tmp138 = simd_or(tmp134, tmp137);
        tmp139 = simd_or(basis_bits.bit_3, tmp106);
        tmp140 = simd_not(tmp139);
        tmp141 = simd_or(tmp4, tmp16);
        tmp142 = simd_and(basis_bits.bit_3, tmp141);
        tmp143 = simd_or(simd_and(basis_bits.bit_2, tmp140), simd_andc(tmp142, basis_bits.bit_2));
        tmp144 = simd_and(byte_range_80_bf, tmp143);
        tmp145 = simd_or(tmp138, tmp144);
        tmp146 = simd_and(byte_range_80_bf, basis_bits.bit_2);
        tmp147 = simd_or(simd_and(basis_bits.bit_3, tmp135), simd_andc(tmp98, basis_bits.bit_3));
        tmp148 = simd_and(tmp146, tmp147);
        tmp149 = simd_or(tmp145, tmp148);
        tmp150 = simd_and(tmp65, tmp6);
        tmp151 = simd_or(tmp149, tmp150);
        tmp152 = simd_not(tmp97);
        tmp153 = simd_or(simd_and(basis_bits.bit_4, tmp152), simd_andc(tmp89, basis_bits.bit_4));
        tmp154 = simd_and(tmp65, tmp153);
        tmp155 = simd_or(tmp151, tmp154);
        cc_range_985_9bd_3 = simd_or(tmp155, tmp119);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(sequence_e0_a6, carryQ.get_carry_in(20), sequence_e0_a6_adv));
        tmp156 = simd_and(sequence_e0_a6_adv, cc_range_985_9bd_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp156);
        byte_a7 = simd_and(tmp62, tmp19);
        sequence_e0_a7 = simd_and(byte_e0_adv, byte_a7);
        tmp157 = simd_and(tmp132, tmp88);
        tmp158 = simd_andc(tmp47, basis_bits.bit_6);
        tmp159 = simd_and(tmp58, tmp158);
        tmp160 = simd_or(tmp157, tmp159);
        tmp161 = simd_and(basis_bits.bit_3, tmp71);
        tmp162 = simd_or(simd_and(basis_bits.bit_2, tmp122), simd_andc(tmp161, basis_bits.bit_2));
        tmp163 = simd_and(byte_range_80_bf, tmp162);
        tmp164 = simd_or(tmp160, tmp163);
        tmp165 = simd_andc(tmp65, tmp78);
        cc_range_9ce_9f0_3 = simd_or(tmp164, tmp165);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(sequence_e0_a7, carryQ.get_carry_in(21), sequence_e0_a7_adv));
        tmp166 = simd_and(sequence_e0_a7_adv, cc_range_9ce_9f0_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp166);
        byte_a8 = simd_and(tmp62, tmp37);
        sequence_e0_a8 = simd_and(byte_e0_adv, byte_a8);
        tmp167 = simd_or(simd_and(basis_bits.bit_4, tmp41), simd_andc(tmp109, basis_bits.bit_4));
        tmp168 = simd_and(tmp132, tmp167);
        tmp169 = simd_or(tmp168, tmp137);
        tmp170 = simd_or(tmp169, tmp144);
        tmp171 = simd_or(tmp170, tmp148);
        tmp172 = simd_andc(basis_bits.bit_6, tmp4);
        tmp173 = simd_and(tmp65, tmp172);
        tmp174 = simd_or(tmp171, tmp173);
        tmp175 = simd_and(tmp65, tmp12);
        tmp176 = simd_not(basis_bits.bit_7);
        tmp177 = simd_or(simd_and(basis_bits.bit_6, tmp176), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
        tmp178 = simd_and(tmp175, tmp177);
        tmp179 = simd_or(tmp174, tmp178);
        tmp180 = simd_andc(tmp7, basis_bits.bit_6);
        tmp181 = simd_and(tmp65, tmp180);
        cc_range_a05_a38_3 = simd_or(tmp179, tmp181);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(sequence_e0_a8, carryQ.get_carry_in(22), sequence_e0_a8_adv));
        tmp182 = simd_and(sequence_e0_a8_adv, cc_range_a05_a38_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp182);
        byte_a9 = simd_and(tmp62, tmp40);
        sequence_e0_a9 = simd_and(byte_e0_adv, byte_a9);
        tmp183 = simd_and(tmp58, basis_bits.bit_4);
        tmp184 = simd_or(simd_and(basis_bits.bit_5, tmp67), simd_andc(tmp24, basis_bits.bit_5));
        tmp185 = simd_and(tmp183, tmp184);
        tmp186 = simd_and(tmp58, tmp88);
        tmp187 = simd_or(tmp185, tmp186);
        tmp188 = simd_and(tmp127, tmp68);
        cc_range_a59_a72_3 = simd_or(tmp187, tmp188);
        carryQ.cq[23] = carryout2carry(pablo_blk_Advance(sequence_e0_a9, carryQ.get_carry_in(23), sequence_e0_a9_adv));
        tmp189 = simd_and(sequence_e0_a9_adv, cc_range_a59_a72_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp189);
        byte_aa = simd_and(tmp62, tmp8);
        sequence_e0_aa = simd_and(byte_e0_adv, byte_aa);
        tmp190 = simd_not(tmp89);
        tmp191 = simd_or(simd_and(basis_bits.bit_4, tmp190), simd_andc(tmp109, basis_bits.bit_4));
        tmp192 = simd_and(tmp132, tmp191);
        tmp193 = simd_not(tmp78);
        tmp194 = simd_or(simd_and(basis_bits.bit_3, tmp193), simd_andc(tmp71, basis_bits.bit_3));
        tmp195 = simd_and(tmp55, tmp194);
        tmp196 = simd_or(tmp192, tmp195);
        tmp197 = simd_or(tmp196, tmp144);
        tmp198 = simd_or(tmp197, tmp148);
        tmp199 = simd_or(tmp198, tmp173);
        tmp200 = simd_or(simd_and(basis_bits.bit_4, tmp152), simd_andc(tmp109, basis_bits.bit_4));
        tmp201 = simd_and(tmp65, tmp200);
        tmp202 = simd_or(tmp199, tmp201);
        cc_range_a85_abd_3 = simd_or(tmp202, tmp119);
        carryQ.cq[24] = carryout2carry(pablo_blk_Advance(sequence_e0_aa, carryQ.get_carry_in(24), sequence_e0_aa_adv));
        tmp203 = simd_and(sequence_e0_aa_adv, cc_range_a85_abd_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp203);
        byte_ab = simd_and(tmp62, tmp17);
        sequence_e0_ab = simd_and(byte_e0_adv, byte_ab);
        tmp204 = simd_andc(tmp62, tmp78);
        cc_range_ad0_ae0_3 = simd_or(tmp76, tmp204);
        carryQ.cq[25] = carryout2carry(pablo_blk_Advance(sequence_e0_ab, carryQ.get_carry_in(25), sequence_e0_ab_adv));
        tmp205 = simd_and(sequence_e0_ab_adv, cc_range_ad0_ae0_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp205);
        byte_ac = simd_and(tmp62, tmp74);
        sequence_e0_ac = simd_and(byte_e0_adv, byte_ac);
        tmp206 = simd_or(tmp149, tmp173);
        tmp207 = simd_or(tmp206, tmp201);
        cc_range_b05_b3d_3 = simd_or(tmp207, tmp119);
        carryQ.cq[26] = carryout2carry(pablo_blk_Advance(sequence_e0_ac, carryQ.get_carry_in(26), sequence_e0_ac_adv));
        tmp208 = simd_and(sequence_e0_ac_adv, cc_range_b05_b3d_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp208);
        byte_ad = simd_and(tmp62, tmp83);
        sequence_e0_ad = simd_and(byte_e0_adv, byte_ad);
        tmp209 = simd_or(tmp159, tmp163);
        cc_range_b5c_b71_3 = simd_or(tmp209, tmp95);
        carryQ.cq[27] = carryout2carry(pablo_blk_Advance(sequence_e0_ad, carryQ.get_carry_in(27), sequence_e0_ad_adv));
        tmp210 = simd_and(sequence_e0_ad_adv, cc_range_b5c_b71_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp210);
        byte_ae = simd_and(tmp62, tmp88);
        sequence_e0_ae = simd_and(byte_e0_adv, byte_ae);
        tmp211 = simd_andc(tmp16, tmp4);
        tmp212 = simd_or(tmp211, tmp167);
        tmp213 = simd_and(tmp132, tmp212);
        tmp214 = simd_or(simd_and(basis_bits.bit_3, tmp135), simd_andc(tmp48, basis_bits.bit_3));
        tmp215 = simd_and(tmp55, tmp214);
        tmp216 = simd_or(tmp213, tmp215);
        tmp217 = simd_andc(tmp58, basis_bits.bit_4);
        tmp218 = simd_not(basis_bits.bit_6);
        tmp219 = simd_or(simd_and(basis_bits.bit_5, tmp218), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        tmp220 = simd_and(tmp217, tmp219);
        tmp221 = simd_or(tmp216, tmp220);
        tmp222 = simd_and(tmp58, tmp7);
        tmp223 = simd_and(tmp222, tmp177);
        tmp224 = simd_or(tmp221, tmp223);
        tmp225 = simd_and(tmp58, tmp74);
        tmp226 = simd_or(tmp224, tmp225);
        tmp227 = simd_and(tmp58, tmp48);
        tmp228 = simd_or(tmp226, tmp227);
        tmp229 = simd_andc(tmp62, basis_bits.bit_4);
        tmp230 = simd_or(simd_and(basis_bits.bit_5, tmp67), simd_andc(tmp16, basis_bits.bit_5));
        tmp231 = simd_and(tmp229, tmp230);
        tmp232 = simd_or(tmp228, tmp231);
        tmp233 = simd_and(tmp62, tmp7);
        tmp234 = simd_andc(tmp233, tmp16);
        tmp235 = simd_or(tmp232, tmp234);
        tmp236 = simd_not(tmp98);
        tmp237 = simd_or(simd_and(basis_bits.bit_3, tmp236), simd_andc(tmp48, basis_bits.bit_3));
        tmp238 = simd_and(tmp146, tmp237);
        cc_range_b83_bae_3 = simd_or(tmp235, tmp238);
        carryQ.cq[28] = carryout2carry(pablo_blk_Advance(sequence_e0_ae, carryQ.get_carry_in(28), sequence_e0_ae_adv));
        tmp239 = simd_and(sequence_e0_ae_adv, cc_range_b83_bae_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp239);
        byte_af = simd_and(tmp62, tmp71);
        sequence_e0_af = simd_and(byte_e0_adv, byte_af);
        byte_90 = simd_andc(tmp58, tmp75);
        carryQ.cq[29] = carryout2carry(pablo_blk_Advance(sequence_e0_af, carryQ.get_carry_in(29), sequence_e0_af_adv));
        tmp240 = simd_and(sequence_e0_af_adv, byte_90);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp240);
        byte_b0 = simd_andc(tmp65, tmp75);
        sequence_e0_b0 = simd_and(byte_e0_adv, byte_b0);
        tmp241 = simd_or(tmp134, tmp215);
        tmp242 = simd_or(simd_and(basis_bits.bit_2, tmp140), simd_andc(tmp79, basis_bits.bit_2));
        tmp243 = simd_and(byte_range_80_bf, tmp242);
        tmp244 = simd_or(tmp241, tmp243);
        tmp245 = simd_not(tmp4);
        tmp246 = simd_or(simd_and(basis_bits.bit_3, tmp245), simd_andc(tmp98, basis_bits.bit_3));
        tmp247 = simd_and(tmp146, tmp246);
        tmp248 = simd_or(tmp244, tmp247);
        tmp249 = simd_or(tmp248, tmp201);
        cc_range_c05_c3d_3 = simd_or(tmp249, tmp119);
        carryQ.cq[30] = carryout2carry(pablo_blk_Advance(sequence_e0_b0, carryQ.get_carry_in(30), sequence_e0_b0_adv));
        tmp250 = simd_and(sequence_e0_b0_adv, cc_range_c05_c3d_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp250);
        byte_b1 = simd_and(tmp65, tmp94);
        sequence_e0_b1 = simd_and(byte_e0_adv, byte_b1);
        tmp251 = simd_and(tmp58, tmp180);
        cc_range_c58_c60_3 = simd_or(tmp251, tmp204);
        carryQ.cq[31] = carryout2carry(pablo_blk_Advance(sequence_e0_b1, carryQ.get_carry_in(31), sequence_e0_b1_adv));
        tmp252 = simd_and(sequence_e0_b1_adv, cc_range_c58_c60_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp252);
        byte_b2 = simd_and(tmp65, tmp6);
        sequence_e0_b2 = simd_and(byte_e0_adv, byte_b2);
        cc_range_c85_cbd_3 = simd_or(tmp249, tmp119);
        carryQ.cq[32] = carryout2carry(pablo_blk_Advance(sequence_e0_b2, carryQ.get_carry_in(32), sequence_e0_b2_adv));
        tmp253 = simd_and(sequence_e0_b2_adv, cc_range_c85_cbd_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp253);
        byte_b3 = simd_and(tmp65, tmp211);
        sequence_e0_b3 = simd_and(byte_e0_adv, byte_b3);
        tmp254 = simd_or(tmp186, tmp204);
        tmp255 = simd_andc(tmp65, tmp4);
        tmp256 = simd_and(tmp255, tmp177);
        cc_range_cde_cf1_3 = simd_or(tmp254, tmp256);
        carryQ.cq[33] = carryout2carry(pablo_blk_Advance(sequence_e0_b3, carryQ.get_carry_in(33), sequence_e0_b3_adv));
        tmp257 = simd_and(sequence_e0_b3_adv, cc_range_cde_cf1_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp257);
        byte_b4 = simd_and(tmp65, tmp25);
        sequence_e0_b4 = simd_and(byte_e0_adv, byte_b4);
        tmp258 = simd_and(basis_bits.bit_3, tmp29);
        tmp259 = simd_not(tmp258);
        tmp260 = simd_or(simd_and(basis_bits.bit_2, tmp259), simd_andc(tmp79, basis_bits.bit_2));
        tmp261 = simd_and(byte_range_80_bf, tmp260);
        tmp262 = simd_or(tmp241, tmp261);
        cc_range_d05_d3d_3 = simd_or(tmp262, tmp119);
        carryQ.cq[34] = carryout2carry(pablo_blk_Advance(sequence_e0_b4, carryQ.get_carry_in(34), sequence_e0_b4_adv));
        tmp263 = simd_and(sequence_e0_b4_adv, cc_range_d05_d3d_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp263);
        byte_b5 = simd_and(tmp65, tmp59);
        sequence_e0_b5 = simd_and(byte_e0_adv, byte_b5);
        tmp264 = simd_or(tmp157, tmp204);
        tmp265 = simd_and(tmp66, tmp97);
        cc_range_d4e_d7a_3 = simd_or(tmp264, tmp265);
        carryQ.cq[35] = carryout2carry(pablo_blk_Advance(sequence_e0_b5, carryQ.get_carry_in(35), sequence_e0_b5_adv));
        tmp266 = simd_and(sequence_e0_b5_adv, cc_range_d4e_d7a_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp266);
        byte_b6 = simd_and(tmp65, tmp13);
        sequence_e0_b6 = simd_and(byte_e0_adv, byte_b6);
        tmp267 = simd_and(basis_bits.bit_5, tmp16);
        tmp268 = simd_or(basis_bits.bit_4, tmp267);
        tmp269 = simd_not(tmp268);
        tmp270 = simd_or(basis_bits.bit_4, tmp109);
        tmp271 = simd_or(simd_and(basis_bits.bit_3, tmp269), simd_andc(tmp270, basis_bits.bit_3));
        tmp272 = simd_and(tmp55, tmp271);
        tmp273 = simd_not(tmp79);
        tmp274 = simd_or(simd_and(basis_bits.bit_2, tmp273), simd_andc(tmp114, basis_bits.bit_2));
        tmp275 = simd_and(byte_range_80_bf, tmp274);
        tmp276 = simd_or(tmp272, tmp275);
        tmp277 = simd_not(basis_bits.bit_5);
        tmp278 = simd_or(simd_and(basis_bits.bit_4, tmp277), simd_andc(tmp28, basis_bits.bit_4));
        tmp279 = simd_and(tmp65, tmp278);
        tmp280 = simd_or(tmp276, tmp279);
        cc_range_d85_dbd_3 = simd_or(tmp280, tmp119);
        carryQ.cq[36] = carryout2carry(pablo_blk_Advance(sequence_e0_b6, carryQ.get_carry_in(36), sequence_e0_b6_adv));
        tmp281 = simd_and(sequence_e0_b6_adv, cc_range_d85_dbd_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp281);
        byte_b7 = simd_and(tmp65, tmp19);
        sequence_e0_b7 = simd_and(byte_e0_adv, byte_b7);
        tmp282 = simd_andc(tmp132, basis_bits.bit_4);
        byte_range_80_86 = simd_andc(tmp282, tmp267);
        carryQ.cq[37] = carryout2carry(pablo_blk_Advance(sequence_e0_b7, carryQ.get_carry_in(37), sequence_e0_b7_adv));
        tmp283 = simd_and(sequence_e0_b7_adv, byte_range_80_86);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp283);
        byte_b8 = simd_and(tmp65, tmp37);
        sequence_e0_b8 = simd_and(byte_e0_adv, byte_b8);
        tmp284 = simd_and(basis_bits.bit_3, tmp75);
        tmp285 = simd_not(tmp284);
        tmp286 = simd_or(basis_bits.bit_3, tmp75);
        tmp287 = simd_or(simd_and(basis_bits.bit_2, tmp285), simd_andc(tmp286, basis_bits.bit_2));
        tmp288 = simd_and(byte_range_80_bf, tmp287);
        cc_range_e01_e32_3 = simd_or(tmp288, tmp173);
        carryQ.cq[38] = carryout2carry(pablo_blk_Advance(sequence_e0_b8, carryQ.get_carry_in(38), sequence_e0_b8_adv));
        tmp289 = simd_and(sequence_e0_b8_adv, cc_range_e01_e32_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp289);
        byte_b9 = simd_and(tmp65, tmp40);
        sequence_e0_b9 = simd_and(byte_e0_adv, byte_b9);
        byte_range_80_85 = simd_andc(tmp282, tmp89);
        carryQ.cq[39] = carryout2carry(pablo_blk_Advance(sequence_e0_b9, carryQ.get_carry_in(39), sequence_e0_b9_adv));
        tmp290 = simd_and(sequence_e0_b9_adv, byte_range_80_85);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp290);
        byte_ba = simd_and(tmp65, tmp8);
        sequence_e0_ba = simd_and(byte_e0_adv, byte_ba);
        tmp291 = simd_andc(tmp132, tmp4);
        tmp292 = simd_and(tmp291, tmp177);
        tmp293 = simd_and(tmp132, tmp25);
        tmp294 = simd_or(tmp292, tmp293);
        tmp295 = simd_not(tmp42);
        tmp296 = simd_or(simd_and(basis_bits.bit_4, tmp295), simd_andc(tmp267, basis_bits.bit_4));
        tmp297 = simd_and(tmp132, tmp296);
        tmp298 = simd_or(tmp294, tmp297);
        tmp299 = simd_and(tmp132, tmp8);
        tmp300 = simd_or(tmp298, tmp299);
        tmp301 = simd_and(tmp132, tmp83);
        tmp302 = simd_or(tmp300, tmp301);
        tmp303 = simd_and(tmp58, tmp12);
        tmp304 = simd_or(tmp302, tmp303);
        tmp305 = simd_and(tmp183, tmp42);
        tmp306 = simd_or(tmp304, tmp305);
        tmp307 = simd_andc(tmp62, tmp4);
        tmp308 = simd_and(tmp307, tmp24);
        tmp309 = simd_or(tmp306, tmp308);
        tmp310 = simd_or(tmp309, byte_a5);
        tmp311 = simd_or(tmp310, byte_a7);
        tmp312 = simd_and(tmp7, basis_bits.bit_6);
        tmp313 = simd_and(tmp62, tmp312);
        tmp314 = simd_or(tmp311, tmp313);
        tmp315 = simd_or(simd_and(basis_bits.bit_3, tmp135), simd_andc(tmp84, basis_bits.bit_3));
        tmp316 = simd_and(tmp146, tmp315);
        tmp317 = simd_or(tmp314, tmp316);
        tmp318 = simd_or(tmp317, tmp173);
        cc_range_e81_ebd_3 = simd_or(tmp318, tmp119);
        carryQ.cq[40] = carryout2carry(pablo_blk_Advance(sequence_e0_ba, carryQ.get_carry_in(40), sequence_e0_ba_adv));
        tmp319 = simd_and(sequence_e0_ba_adv, cc_range_e81_ebd_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp319);
        sequence_e0_bb = simd_and(byte_e0_adv, byte_bb);
        tmp320 = simd_andc(tmp282, tmp109);
        tmp321 = simd_and(tmp58, tmp47);
        cc_range_ec0_edc_3 = simd_or(tmp320, tmp321);
        carryQ.cq[41] = carryout2carry(pablo_blk_Advance(sequence_e0_bb, carryQ.get_carry_in(41), sequence_e0_bb_adv));
        tmp322 = simd_and(sequence_e0_bb_adv, cc_range_ec0_edc_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp322);
        byte_bc = simd_and(tmp65, tmp74);
        sequence_e0_bc = simd_and(byte_e0_adv, byte_bc);
        byte_80 = simd_andc(tmp132, tmp75);
        carryQ.cq[42] = carryout2carry(pablo_blk_Advance(sequence_e0_bc, carryQ.get_carry_in(42), sequence_e0_bc_adv));
        tmp323 = simd_and(sequence_e0_bc_adv, byte_80);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp323);
        byte_bd = simd_and(tmp65, tmp83);
        sequence_e0_bd = simd_and(byte_e0_adv, byte_bd);
        tmp324 = simd_not(tmp85);
        tmp325 = simd_or(simd_and(basis_bits.bit_2, tmp324), simd_andc(tmp139, basis_bits.bit_2));
        tmp326 = simd_and(byte_range_80_bf, tmp325);
        cc_range_f40_f49_3 = simd_or(tmp282, tmp326);
        carryQ.cq[43] = carryout2carry(pablo_blk_Advance(sequence_e0_bd, carryQ.get_carry_in(43), sequence_e0_bd_adv));
        tmp327 = simd_and(sequence_e0_bd_adv, cc_range_f40_f49_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp327);
        byte_be = simd_and(tmp65, tmp88);
        sequence_e0_be = simd_and(byte_e0_adv, byte_be);
        tmp328 = simd_and(tmp132, basis_bits.bit_4);
        byte_range_88_8c = simd_andc(tmp328, tmp109);
        carryQ.cq[44] = carryout2carry(pablo_blk_Advance(sequence_e0_be, carryQ.get_carry_in(44), sequence_e0_be_adv));
        tmp329 = simd_and(sequence_e0_be_adv, byte_range_88_8c);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp329);
        byte_e1 = simd_and(tmp102, tmp94);
        carryQ.cq[45] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(45), tmp330));
        sequence_e1_80 = simd_and(tmp330, byte_80);
        carryQ.cq[46] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(46), byte_e1_adv));
        tmp331 = simd_and(basis_bits.bit_2, tmp30);
        tmp332 = simd_andc(byte_range_80_bf, tmp331);
        cc_range_1000_103f_3 = simd_or(tmp332, tmp72);
        carryQ.cq[47] = carryout2carry(pablo_blk_Advance(sequence_e1_80, carryQ.get_carry_in(47), sequence_e1_80_adv));
        tmp333 = simd_and(sequence_e1_80_adv, cc_range_1000_103f_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp333);
        byte_81 = simd_and(tmp132, tmp94);
        sequence_e1_81 = simd_and(byte_e1_adv, byte_81);
        tmp334 = simd_andc(tmp217, tmp89);
        tmp335 = simd_and(tmp183, tmp219);
        tmp336 = simd_or(tmp334, tmp335);
        tmp337 = simd_or(tmp336, byte_a1);
        tmp338 = simd_and(tmp62, tmp12);
        tmp339 = simd_and(tmp338, tmp177);
        tmp340 = simd_or(tmp337, tmp339);
        tmp341 = simd_and(tmp146, tmp214);
        tmp342 = simd_or(tmp340, tmp341);
        tmp343 = simd_and(tmp65, tmp270);
        cc_range_1050_1075_3 = simd_or(tmp342, tmp343);
        carryQ.cq[48] = carryout2carry(pablo_blk_Advance(sequence_e1_81, carryQ.get_carry_in(48), sequence_e1_81_adv));
        tmp344 = simd_and(sequence_e1_81_adv, cc_range_1050_1075_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp344);
        byte_82 = simd_and(tmp132, tmp6);
        sequence_e1_82 = simd_and(byte_e1_adv, byte_82);
        tmp345 = simd_andc(tmp78, tmp88);
        cc_range_1080_108e_3 = simd_andc(tmp132, tmp345);
        carryQ.cq[49] = carryout2carry(pablo_blk_Advance(sequence_e1_82, carryQ.get_carry_in(49), sequence_e1_82_adv));
        tmp346 = simd_and(sequence_e1_82_adv, cc_range_1080_108e_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp346);
        byte_83 = simd_and(tmp132, tmp211);
        sequence_e1_83 = simd_and(byte_e1_adv, byte_83);
        tmp347 = simd_or(simd_and(basis_bits.bit_2, tmp259), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
        tmp348 = simd_and(byte_range_80_bf, tmp347);
        tmp349 = simd_and(tmp65, tmp47);
        tmp350 = simd_and(tmp349, tmp24);
        cc_range_10d0_10fd_3 = simd_or(tmp348, tmp350);
        carryQ.cq[50] = carryout2carry(pablo_blk_Advance(sequence_e1_83, carryQ.get_carry_in(50), sequence_e1_83_adv));
        tmp351 = simd_and(sequence_e1_83_adv, cc_range_10d0_10fd_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp351);
        tmp352 = simd_or(simd_and(basis_bits.bit_4, tmp295), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
        byte_range_84_88 = simd_and(tmp132, tmp352);
        byte_e1_byte_range_84_88 = simd_and(byte_e1_adv, byte_range_84_88);
        carryQ.cq[51] = carryout2carry(pablo_blk_Advance(byte_e1_byte_range_84_88, carryQ.get_carry_in(51), tmp353));
        byte_e1_byte_range_84_88_sfx = simd_and(tmp353, byte_range_80_bf);
        struct_Lo.cc = simd_or(struct_Lo.cc, byte_e1_byte_range_84_88_sfx);
        byte_89 = simd_and(tmp132, tmp40);
        sequence_e1_89 = simd_and(byte_e1_adv, byte_89);
        byte_range_80_88 = simd_andc(tmp132, tmp106);
        carryQ.cq[52] = carryout2carry(pablo_blk_Advance(sequence_e1_89, carryQ.get_carry_in(52), tmp354));
        sequence_e1_89_byte_range_80_88 = simd_and(tmp354, byte_range_80_88);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e1_89_byte_range_80_88);
        byte_8a = simd_and(tmp132, tmp8);
        sequence_e1_8a = simd_and(byte_e1_adv, byte_8a);
        carryQ.cq[53] = carryout2carry(pablo_blk_Advance(sequence_e1_8a, carryQ.get_carry_in(53), tmp355));
        sequence_e1_8a_byte_range_80_88 = simd_and(tmp355, byte_range_80_88);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e1_8a_byte_range_80_88);
        byte_8b = simd_and(tmp132, tmp17);
        sequence_e1_8b = simd_and(byte_e1_adv, byte_8b);
        carryQ.cq[54] = carryout2carry(pablo_blk_Advance(sequence_e1_8b, carryQ.get_carry_in(54), tmp356));
        sequence_e1_8b_80 = simd_and(tmp356, byte_80);
        byte_8c = simd_and(tmp132, tmp74);
        sequence_e1_8c = simd_and(byte_e1_adv, byte_8c);
        byte_range_80_90 = simd_andc(tmp55, tmp284);
        carryQ.cq[55] = carryout2carry(pablo_blk_Advance(sequence_e1_8c, carryQ.get_carry_in(55), tmp357));
        sequence_e1_8c_byte_range_80_90 = simd_and(tmp357, byte_range_80_90);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e1_8c_byte_range_80_90);
        byte_8d = simd_and(tmp132, tmp83);
        sequence_e1_8d = simd_and(byte_e1_adv, byte_8d);
        byte_range_80_9a = simd_andc(tmp55, tmp258);
        carryQ.cq[56] = carryout2carry(pablo_blk_Advance(sequence_e1_8d, carryQ.get_carry_in(56), tmp358));
        sequence_e1_8d_byte_range_80_9a = simd_and(tmp358, byte_range_80_9a);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e1_8d_byte_range_80_9a);
        byte_8e = simd_and(tmp132, tmp88);
        sequence_e1_8e = simd_and(byte_e1_adv, byte_8e);
        byte_range_80_8f = simd_andc(byte_range_80_bf, tmp2);
        carryQ.cq[57] = carryout2carry(pablo_blk_Advance(sequence_e1_8e, carryQ.get_carry_in(57), tmp359));
        sequence_e1_8e_byte_range_80_8f = simd_and(tmp359, byte_range_80_8f);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e1_8e_byte_range_80_8f);
        byte_8f = simd_and(byte_range_80_8f, tmp71);
        sequence_e1_8f = simd_and(byte_e1_adv, byte_8f);
        tmp360 = simd_and(basis_bits.bit_3, tmp270);
        tmp361 = simd_and(basis_bits.bit_2, tmp360);
        byte_range_80_b4 = simd_andc(byte_range_80_bf, tmp361);
        carryQ.cq[58] = carryout2carry(pablo_blk_Advance(sequence_e1_8f, carryQ.get_carry_in(58), tmp362));
        sequence_e1_8f_byte_range_80_b4 = simd_and(tmp362, byte_range_80_b4);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e1_8f_byte_range_80_b4);
        sequence_e1_90 = simd_and(byte_e1_adv, byte_90);
        tmp363 = simd_or(basis_bits.bit_2, tmp286);
        byte_range_81_bf = simd_and(byte_range_80_bf, tmp363);
        carryQ.cq[59] = carryout2carry(pablo_blk_Advance(sequence_e1_90, carryQ.get_carry_in(59), tmp364));
        sequence_e1_90_byte_range_81_bf = simd_and(tmp364, byte_range_81_bf);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e1_90_byte_range_81_bf);
        byte_91 = simd_and(tmp58, tmp94);
        sequence_e1_91 = simd_and(byte_e1_adv, byte_91);
        carryQ.cq[60] = carryout2carry(pablo_blk_Advance(sequence_e1_91, carryQ.get_carry_in(60), tmp365));
        sequence_e1_91_byte_range_80_bf = simd_and(tmp365, byte_range_80_bf);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e1_91_byte_range_80_bf);
        byte_99 = simd_and(tmp58, tmp40);
        sequence_e1_99 = simd_and(byte_e1_adv, byte_99);
        tmp366 = simd_and(basis_bits.bit_2, tmp85);
        byte_range_80_ac = simd_andc(byte_range_80_bf, tmp366);
        carryQ.cq[61] = carryout2carry(pablo_blk_Advance(sequence_e1_99, carryQ.get_carry_in(61), tmp367));
        sequence_e1_99_byte_range_80_ac = simd_and(tmp367, byte_range_80_ac);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e1_99_byte_range_80_ac);
        byte_9a = simd_and(tmp58, tmp8);
        sequence_e1_9a = simd_and(byte_e1_adv, byte_9a);
        tmp368 = simd_not(tmp29);
        tmp369 = simd_or(simd_and(basis_bits.bit_3, tmp368), simd_andc(tmp75, basis_bits.bit_3));
        byte_range_81_9a = simd_and(tmp55, tmp369);
        carryQ.cq[62] = carryout2carry(pablo_blk_Advance(sequence_e1_9a, carryQ.get_carry_in(62), tmp370));
        sequence_e1_9a_byte_range_81_9a = simd_and(tmp370, byte_range_81_9a);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e1_9a_byte_range_81_9a);
        byte_9b = simd_and(tmp58, tmp17);
        sequence_e1_9b = simd_and(byte_e1_adv, byte_9b);
        byte_range_80_aa = simd_andc(byte_range_80_bf, tmp331);
        carryQ.cq[63] = carryout2carry(pablo_blk_Advance(sequence_e1_9b, carryQ.get_carry_in(63), tmp371));
        sequence_e1_9b_byte_range_80_aa = simd_and(tmp371, byte_range_80_aa);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e1_9b_byte_range_80_aa);
        byte_9c = simd_and(tmp58, tmp74);
        sequence_e1_9c = simd_and(byte_e1_adv, byte_9c);
        tmp372 = simd_and(basis_bits.bit_4, tmp109);
        byte_range_80_8c = simd_andc(byte_range_80_8f, tmp372);
        carryQ.cq[64] = carryout2carry(pablo_blk_Advance(sequence_e1_9c, carryQ.get_carry_in(64), tmp373));
        sequence_e1_9c_byte_range_80_8c = simd_and(tmp373, byte_range_80_8c);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e1_9c_byte_range_80_8c);
        byte_9d = simd_and(tmp58, tmp83);
        sequence_e1_9d = simd_and(byte_e1_adv, byte_9d);
        byte_range_80_91 = simd_andc(tmp55, tmp79);
        carryQ.cq[65] = carryout2carry(pablo_blk_Advance(sequence_e1_9d, carryQ.get_carry_in(65), tmp374));
        sequence_e1_9d_byte_range_80_91 = simd_and(tmp374, byte_range_80_91);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e1_9d_byte_range_80_91);
        byte_9e = simd_and(tmp58, tmp88);
        sequence_e1_9e = simd_and(byte_e1_adv, byte_9e);
        tmp375 = simd_and(basis_bits.bit_2, tmp56);
        byte_range_80_b3 = simd_andc(byte_range_80_bf, tmp375);
        carryQ.cq[66] = carryout2carry(pablo_blk_Advance(sequence_e1_9e, carryQ.get_carry_in(66), tmp376));
        sequence_e1_9e_byte_range_80_b3 = simd_and(tmp376, byte_range_80_b3);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e1_9e_byte_range_80_b3);
        byte_9f = simd_and(tmp58, tmp71);
        sequence_e1_9f = simd_and(byte_e1_adv, byte_9f);
        carryQ.cq[67] = carryout2carry(pablo_blk_Advance(sequence_e1_9f, carryQ.get_carry_in(67), tmp377));
        sequence_e1_9f_9c = simd_and(tmp377, byte_9c);
        sequence_e1_a0 = simd_and(byte_e1_adv, byte_a0);
        carryQ.cq[68] = carryout2carry(pablo_blk_Advance(sequence_e1_a0, carryQ.get_carry_in(68), tmp378));
        sequence_e1_a0_byte_range_a0_bf = simd_and(tmp378, byte_range_a0_bf);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e1_a0_byte_range_a0_bf);
        sequence_e1_a1 = simd_and(byte_e1_adv, byte_a1);
        tmp379 = simd_andc(byte_range_80_8f, tmp4);
        byte_range_80_82 = simd_andc(tmp379, tmp16);
        carryQ.cq[69] = carryout2carry(pablo_blk_Advance(sequence_e1_a1, carryQ.get_carry_in(69), tmp380));
        sequence_e1_a1_byte_range_80_82 = simd_and(tmp380, byte_range_80_82);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e1_a1_byte_range_80_82);
        sequence_e1_a2 = simd_and(byte_e1_adv, byte_a2);
        tmp381 = simd_and(basis_bits.bit_2, tmp139);
        byte_range_80_a8 = simd_andc(byte_range_80_bf, tmp381);
        carryQ.cq[70] = carryout2carry(pablo_blk_Advance(sequence_e1_a2, carryQ.get_carry_in(70), tmp382));
        sequence_e1_a2_byte_range_80_a8 = simd_and(tmp382, byte_range_80_a8);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e1_a2_byte_range_80_a8);
        byte_a3 = simd_and(tmp62, tmp211);
        sequence_e1_a3 = simd_and(byte_e1_adv, byte_a3);
        tmp383 = simd_and(basis_bits.bit_2, tmp104);
        byte_range_80_b5 = simd_andc(byte_range_80_bf, tmp383);
        carryQ.cq[71] = carryout2carry(pablo_blk_Advance(sequence_e1_a3, carryQ.get_carry_in(71), tmp384));
        sequence_e1_a3_byte_range_80_b5 = simd_and(tmp384, byte_range_80_b5);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e1_a3_byte_range_80_b5);
        sequence_e1_a4 = simd_and(byte_e1_adv, byte_a4);
        tmp385 = simd_and(basis_bits.bit_3, tmp84);
        byte_range_80_9c = simd_andc(tmp55, tmp385);
        carryQ.cq[72] = carryout2carry(pablo_blk_Advance(sequence_e1_a4, carryQ.get_carry_in(72), tmp386));
        sequence_e1_a4_byte_range_80_9c = simd_and(tmp386, byte_range_80_9c);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e1_a4_byte_range_80_9c);
        sequence_e1_a5 = simd_and(byte_e1_adv, byte_a5);
        tmp387 = simd_or(basis_bits.bit_3, tmp48);
        tmp388 = simd_not(tmp387);
        tmp389 = simd_or(simd_and(basis_bits.bit_2, tmp388), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
        byte_range_90_ad = simd_and(byte_range_80_bf, tmp389);
        carryQ.cq[73] = carryout2carry(pablo_blk_Advance(sequence_e1_a5, carryQ.get_carry_in(73), tmp390));
        sequence_e1_a5_byte_range_90_ad = simd_and(tmp390, byte_range_90_ad);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e1_a5_byte_range_90_ad);
        sequence_e1_a6 = simd_and(byte_e1_adv, byte_a6);
        tmp391 = simd_or(basis_bits.bit_3, tmp47);
        tmp392 = simd_and(basis_bits.bit_2, tmp391);
        byte_range_80_ab = simd_andc(byte_range_80_bf, tmp392);
        carryQ.cq[74] = carryout2carry(pablo_blk_Advance(sequence_e1_a6, carryQ.get_carry_in(74), tmp393));
        sequence_e1_a6_byte_range_80_ab = simd_and(tmp393, byte_range_80_ab);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e1_a6_byte_range_80_ab);
        sequence_e1_a7 = simd_and(byte_e1_adv, byte_a7);
        tmp394 = simd_andc(byte_range_80_8f, basis_bits.bit_4);
        byte_range_81_87 = simd_and(tmp394, tmp42);
        carryQ.cq[75] = carryout2carry(pablo_blk_Advance(sequence_e1_a7, carryQ.get_carry_in(75), tmp395));
        sequence_e1_a7_byte_range_81_87 = simd_and(tmp395, byte_range_81_87);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e1_a7_byte_range_81_87);
        sequence_e1_a8 = simd_and(byte_e1_adv, byte_a8);
        tmp396 = simd_and(basis_bits.bit_3, tmp268);
        byte_range_80_96 = simd_andc(tmp55, tmp396);
        carryQ.cq[76] = carryout2carry(pablo_blk_Advance(sequence_e1_a8, carryQ.get_carry_in(76), tmp397));
        sequence_e1_a8_byte_range_80_96 = simd_and(tmp397, byte_range_80_96);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e1_a8_byte_range_80_96);
        sequence_e1_a9 = simd_and(byte_e1_adv, byte_a9);
        byte_range_80_94 = simd_andc(tmp55, tmp360);
        carryQ.cq[77] = carryout2carry(pablo_blk_Advance(sequence_e1_a9, carryQ.get_carry_in(77), tmp398));
        sequence_e1_a9_byte_range_80_94 = simd_and(tmp398, byte_range_80_94);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e1_a9_byte_range_80_94);
        sequence_e1_ac = simd_and(byte_e1_adv, byte_ac);
        tmp399 = simd_not(tmp56);
        tmp400 = simd_or(basis_bits.bit_3, tmp270);
        tmp401 = simd_or(simd_and(basis_bits.bit_2, tmp399), simd_andc(tmp400, basis_bits.bit_2));
        byte_range_85_b3 = simd_and(byte_range_80_bf, tmp401);
        carryQ.cq[78] = carryout2carry(pablo_blk_Advance(sequence_e1_ac, carryQ.get_carry_in(78), tmp402));
        sequence_e1_ac_byte_range_85_b3 = simd_and(tmp402, byte_range_85_b3);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e1_ac_byte_range_85_b3);
        sequence_e1_ad = simd_and(byte_e1_adv, byte_ad);
        tmp403 = simd_or(simd_and(basis_bits.bit_4, tmp277), simd_andc(tmp109, basis_bits.bit_4));
        byte_range_85_8b = simd_and(byte_range_80_8f, tmp403);
        carryQ.cq[79] = carryout2carry(pablo_blk_Advance(sequence_e1_ad, carryQ.get_carry_in(79), tmp404));
        sequence_e1_ad_byte_range_85_8b = simd_and(tmp404, byte_range_85_8b);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e1_ad_byte_range_85_8b);
        sequence_e1_ae = simd_and(byte_e1_adv, byte_ae);
        tmp405 = simd_not(tmp286);
        tmp406 = simd_or(basis_bits.bit_3, tmp141);
        tmp407 = simd_or(simd_and(basis_bits.bit_2, tmp405), simd_andc(tmp406, basis_bits.bit_2));
        byte_range_83_a0 = simd_and(byte_range_80_bf, tmp407);
        carryQ.cq[80] = carryout2carry(pablo_blk_Advance(sequence_e1_ae, carryQ.get_carry_in(80), tmp408));
        sequence_e1_ae_byte_range_83_a0 = simd_and(tmp408, byte_range_83_a0);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e1_ae_byte_range_83_a0);
        sequence_e1_af = simd_and(byte_e1_adv, byte_af);
        byte_range_80_a5 = simd_andc(byte_range_80_bf, tmp92);
        carryQ.cq[81] = carryout2carry(pablo_blk_Advance(sequence_e1_af, carryQ.get_carry_in(81), tmp409));
        sequence_e1_af_byte_range_80_a5 = simd_and(tmp409, byte_range_80_a5);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e1_af_byte_range_80_a5);
        sequence_e1_b0 = simd_and(byte_e1_adv, byte_b0);
        tmp410 = simd_and(basis_bits.bit_2, tmp116);
        byte_range_80_a3 = simd_andc(byte_range_80_bf, tmp410);
        carryQ.cq[82] = carryout2carry(pablo_blk_Advance(sequence_e1_b0, carryQ.get_carry_in(82), tmp411));
        sequence_e1_b0_byte_range_80_a3 = simd_and(tmp411, byte_range_80_a3);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e1_b0_byte_range_80_a3);
        sequence_e1_b1 = simd_and(byte_e1_adv, byte_b1);
        tmp412 = simd_and(byte_range_80_8f, tmp47);
        byte_range_8d_8f = simd_and(tmp412, tmp24);
        carryQ.cq[83] = carryout2carry(pablo_blk_Advance(sequence_e1_b1, carryQ.get_carry_in(83), tmp413));
        sequence_e1_b1_byte_range_8d_8f = simd_and(tmp413, byte_range_8d_8f);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e1_b1_byte_range_8d_8f);
        sequence_e1_b3 = simd_and(byte_e1_adv, byte_b3);
        tmp414 = simd_and(tmp62, basis_bits.bit_4);
        byte_range_a9_ac = simd_and(tmp414, tmp184);
        carryQ.cq[84] = carryout2carry(pablo_blk_Advance(sequence_e1_b3, carryQ.get_carry_in(84), tmp415));
        sequence_e1_b3_byte_range_a9_ac = simd_and(tmp415, byte_range_a9_ac);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e1_b3_byte_range_a9_ac);
        byte_e2 = simd_and(tmp102, tmp6);
        byte_84 = simd_and(byte_range_80_8f, tmp25);
        carryQ.cq[85] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(85), tmp416));
        sequence_e2_84 = simd_and(tmp416, byte_84);
        carryQ.cq[86] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(86), byte_e2_adv));
        tmp417 = simd_or(simd_and(basis_bits.bit_4, tmp295), simd_andc(tmp109, basis_bits.bit_4));
        byte_range_b5_b8 = simd_and(tmp65, tmp417);
        carryQ.cq[87] = carryout2carry(pablo_blk_Advance(sequence_e2_84, carryQ.get_carry_in(87), sequence_e2_84_adv));
        tmp418 = simd_and(sequence_e2_84_adv, byte_range_b5_b8);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp418);
        sequence_e2_b4 = simd_and(byte_e2_adv, byte_b4);
        byte_range_b0_bf = simd_and(byte_range_80_bf, tmp14);
        carryQ.cq[88] = carryout2carry(pablo_blk_Advance(sequence_e2_b4, carryQ.get_carry_in(88), sequence_e2_b4_adv));
        tmp419 = simd_and(sequence_e2_b4_adv, byte_range_b0_bf);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp419);
        sequence_e2_b5 = simd_and(byte_e2_adv, byte_b5);
        tmp420 = simd_or(basis_bits.bit_3, basis_bits.bit_4);
        tmp421 = simd_and(basis_bits.bit_2, tmp420);
        byte_range_80_a7 = simd_andc(byte_range_80_bf, tmp421);
        carryQ.cq[89] = carryout2carry(pablo_blk_Advance(sequence_e2_b5, carryQ.get_carry_in(89), sequence_e2_b5_adv));
        tmp422 = simd_and(sequence_e2_b5_adv, byte_range_80_a7);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp422);
        sequence_e2_b6 = simd_and(byte_e2_adv, byte_b6);
        tmp423 = simd_andc(tmp229, tmp267);
        tmp424 = simd_or(byte_range_80_96, tmp423);
        tmp425 = simd_andc(tmp414, tmp267);
        tmp426 = simd_or(tmp424, tmp425);
        tmp427 = simd_andc(byte_range_b0_bf, basis_bits.bit_4);
        tmp428 = simd_andc(tmp427, tmp267);
        tmp429 = simd_or(tmp426, tmp428);
        tmp430 = simd_and(byte_range_b0_bf, basis_bits.bit_4);
        tmp431 = simd_andc(tmp430, tmp267);
        cc_range_2d80_2db8_3 = simd_or(tmp429, tmp431);
        carryQ.cq[90] = carryout2carry(pablo_blk_Advance(sequence_e2_b6, carryQ.get_carry_in(90), sequence_e2_b6_adv));
        tmp432 = simd_and(sequence_e2_b6_adv, cc_range_2d80_2db8_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp432);
        sequence_e2_b7 = simd_and(byte_e2_adv, byte_b7);
        tmp433 = simd_or(byte_range_80_8f, tmp217);
        tmp434 = simd_or(tmp433, tmp183);
        cc_range_2dc0_2dd8_3 = simd_andc(tmp434, tmp267);
        carryQ.cq[91] = carryout2carry(pablo_blk_Advance(sequence_e2_b7, carryQ.get_carry_in(91), sequence_e2_b7_adv));
        tmp435 = simd_and(sequence_e2_b7_adv, cc_range_2dc0_2dd8_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp435);
        byte_e3 = simd_and(tmp102, tmp211);
        carryQ.cq[92] = carryout2carry(pablo_blk_Advance(byte_e3, carryQ.get_carry_in(92), tmp436));
        sequence_e3_80 = simd_and(tmp436, byte_80);
        carryQ.cq[93] = carryout2carry(pablo_blk_Advance(byte_e3, carryQ.get_carry_in(93), byte_e3_adv));
        tmp437 = simd_and(byte_range_80_8f, tmp13);
        tmp438 = simd_and(byte_range_b0_bf, tmp74);
        cc_range_3006_303c_3 = simd_or(tmp437, tmp438);
        carryQ.cq[94] = carryout2carry(pablo_blk_Advance(sequence_e3_80, carryQ.get_carry_in(94), sequence_e3_80_adv));
        tmp439 = simd_and(sequence_e3_80_adv, cc_range_3006_303c_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp439);
        sequence_e3_81 = simd_and(byte_e3_adv, byte_81);
        carryQ.cq[95] = carryout2carry(pablo_blk_Advance(sequence_e3_81, carryQ.get_carry_in(95), sequence_e3_81_adv));
        tmp440 = simd_and(sequence_e3_81_adv, byte_range_81_bf);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp440);
        sequence_e3_82 = simd_and(byte_e3_adv, byte_82);
        tmp441 = simd_or(byte_range_80_96, byte_9f);
        tmp442 = simd_and(tmp146, tmp286);
        cc_range_3080_30a1_3 = simd_or(tmp441, tmp442);
        carryQ.cq[96] = carryout2carry(pablo_blk_Advance(sequence_e3_82, carryQ.get_carry_in(96), sequence_e3_82_adv));
        tmp443 = simd_and(sequence_e3_82_adv, cc_range_3080_30a1_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp443);
        sequence_e3_83 = simd_and(byte_e3_adv, byte_83);
        tmp444 = simd_and(basis_bits.bit_2, tmp258);
        tmp445 = simd_andc(byte_range_80_bf, tmp444);
        tmp446 = simd_and(byte_range_b0_bf, tmp71);
        cc_range_30c0_30ff_3 = simd_or(tmp445, tmp446);
        carryQ.cq[97] = carryout2carry(pablo_blk_Advance(sequence_e3_83, carryQ.get_carry_in(97), sequence_e3_83_adv));
        tmp447 = simd_and(sequence_e3_83_adv, cc_range_30c0_30ff_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp447);
        sequence_e3_84 = simd_and(byte_e3_adv, byte_84);
        tmp448 = simd_or(simd_and(basis_bits.bit_2, tmp388), simd_andc(tmp400, basis_bits.bit_2));
        tmp449 = simd_and(byte_range_80_bf, tmp448);
        tmp450 = simd_and(byte_range_b0_bf, tmp51);
        cc_range_3105_3131_3 = simd_or(tmp449, tmp450);
        carryQ.cq[98] = carryout2carry(pablo_blk_Advance(sequence_e3_84, carryQ.get_carry_in(98), sequence_e3_84_adv));
        tmp451 = simd_and(sequence_e3_84_adv, cc_range_3105_3131_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp451);
        byte_85 = simd_and(byte_range_80_8f, tmp59);
        sequence_e3_85 = simd_and(byte_e3_adv, byte_85);
        carryQ.cq[99] = carryout2carry(pablo_blk_Advance(sequence_e3_85, carryQ.get_carry_in(99), sequence_e3_85_adv));
        tmp452 = simd_and(sequence_e3_85_adv, byte_range_80_bf);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp452);
        byte_86 = simd_and(byte_range_80_8f, tmp13);
        sequence_e3_86 = simd_and(byte_e3_adv, byte_86);
        tmp453 = simd_and(basis_bits.bit_4, tmp267);
        tmp454 = simd_andc(byte_range_80_8f, tmp453);
        tmp455 = simd_andc(tmp146, tmp258);
        cc_range_3180_31a0_3 = simd_or(tmp454, tmp455);
        carryQ.cq[100] = carryout2carry(pablo_blk_Advance(sequence_e3_86, carryQ.get_carry_in(100), sequence_e3_86_adv));
        tmp456 = simd_and(sequence_e3_86_adv, cc_range_3180_31a0_3);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp456);
        byte_87 = simd_and(byte_range_80_8f, tmp19);
        sequence_e3_87 = simd_and(byte_e3_adv, byte_87);
        carryQ.cq[101] = carryout2carry(pablo_blk_Advance(sequence_e3_87, carryQ.get_carry_in(101), sequence_e3_87_adv));
        tmp457 = simd_and(sequence_e3_87_adv, byte_range_b0_bf);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp457);
        byte_range_90_bf = simd_and(byte_range_80_bf, tmp2);
        byte_e3_byte_range_90_bf = simd_and(byte_e3_adv, byte_range_90_bf);
        carryQ.cq[102] = carryout2carry(pablo_blk_Advance(byte_e3_byte_range_90_bf, carryQ.get_carry_in(102), tmp458));
        byte_e3_byte_range_90_bf_sfx = simd_and(tmp458, byte_range_80_bf);
        struct_Lo.cc = simd_or(struct_Lo.cc, byte_e3_byte_range_90_bf_sfx);
        byte_e4 = simd_and(tmp102, tmp25);
        carryQ.cq[103] = carryout2carry(pablo_blk_Advance(byte_e4, carryQ.get_carry_in(103), tmp459));
        byte_e4_byte_range_80_b5 = simd_and(tmp459, byte_range_80_b5);
        carryQ.cq[104] = carryout2carry(pablo_blk_Advance(byte_e4_byte_range_80_b5, carryQ.get_carry_in(104), tmp460));
        byte_e4_byte_range_80_b5_sfx = simd_and(tmp460, byte_range_80_bf);
        struct_Lo.cc = simd_or(struct_Lo.cc, byte_e4_byte_range_80_b5_sfx);
        carryQ.cq[105] = carryout2carry(pablo_blk_Advance(byte_e4, carryQ.get_carry_in(105), byte_e4_adv));
        sequence_e4_b6 = simd_and(byte_e4_adv, byte_b6);
        carryQ.cq[106] = carryout2carry(pablo_blk_Advance(sequence_e4_b6, carryQ.get_carry_in(106), tmp461));
        sequence_e4_b6_byte_range_80_b5 = simd_and(tmp461, byte_range_80_b5);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e4_b6_byte_range_80_b5);
        sequence_e4_b8 = simd_and(byte_e4_adv, byte_b8);
        carryQ.cq[107] = carryout2carry(pablo_blk_Advance(sequence_e4_b8, carryQ.get_carry_in(107), tmp462));
        sequence_e4_b8_byte_range_80_bf = simd_and(tmp462, byte_range_80_bf);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e4_b8_byte_range_80_bf);
        byte_range_e5_e8 = simd_and(tmp102, tmp417);
        carryQ.cq[108] = carryout2carry(pablo_blk_Advance(byte_range_e5_e8, carryQ.get_carry_in(108), tmp463));
        byte_range_e5_e8_sfx = simd_and(tmp463, byte_range_80_bf);
        carryQ.cq[109] = carryout2carry(pablo_blk_Advance(byte_range_e5_e8_sfx, carryQ.get_carry_in(109), tmp464));
        byte_range_e5_e8_sfx_sfx = simd_and(tmp464, byte_range_80_bf);
        struct_Lo.cc = simd_or(struct_Lo.cc, byte_range_e5_e8_sfx_sfx);
        byte_e9 = simd_and(tmp102, tmp40);
        carryQ.cq[110] = carryout2carry(pablo_blk_Advance(byte_e9, carryQ.get_carry_in(110), byte_e9_adv));
        sequence_e9_80 = simd_and(byte_e9_adv, byte_80);
        carryQ.cq[111] = carryout2carry(pablo_blk_Advance(sequence_e9_80, carryQ.get_carry_in(111), tmp465));
        sequence_e9_80_byte_range_80_8c = simd_and(tmp465, byte_range_80_8c);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_e9_80_byte_range_80_8c);
        byte_ea = simd_and(tmp102, tmp8);
        carryQ.cq[112] = carryout2carry(pablo_blk_Advance(byte_ea, carryQ.get_carry_in(112), byte_ea_adv));
        sequence_ea_80 = simd_and(byte_ea_adv, byte_80);
        carryQ.cq[113] = carryout2carry(pablo_blk_Advance(sequence_ea_80, carryQ.get_carry_in(113), tmp466));
        sequence_ea_80_byte_range_80_94 = simd_and(tmp466, byte_range_80_94);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_ea_80_byte_range_80_94);
        byte_eb = simd_and(tmp102, tmp17);
        carryQ.cq[114] = carryout2carry(pablo_blk_Advance(byte_eb, carryQ.get_carry_in(114), byte_eb_adv));
        sequence_eb_80 = simd_and(byte_eb_adv, byte_80);
        carryQ.cq[115] = carryout2carry(pablo_blk_Advance(sequence_eb_80, carryQ.get_carry_in(115), tmp467));
        sequence_eb_80_byte_range_80_bf = simd_and(tmp467, byte_range_80_bf);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_eb_80_byte_range_80_bf);
        byte_ed = simd_and(tmp102, tmp83);
        carryQ.cq[116] = carryout2carry(pablo_blk_Advance(byte_ed, carryQ.get_carry_in(116), byte_ed_adv));
        sequence_ed_80 = simd_and(byte_ed_adv, byte_80);
        carryQ.cq[117] = carryout2carry(pablo_blk_Advance(sequence_ed_80, carryQ.get_carry_in(117), tmp468));
        sequence_ed_80_byte_range_80_a3 = simd_and(tmp468, byte_range_80_a3);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_ed_80_byte_range_80_a3);
        byte_ef = simd_and(tmp102, tmp71);
        byte_range_a4_a8 = simd_and(tmp62, tmp352);
        carryQ.cq[118] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(118), tmp469));
        byte_ef_byte_range_a4_a8 = simd_and(tmp469, byte_range_a4_a8);
        carryQ.cq[119] = carryout2carry(pablo_blk_Advance(byte_ef_byte_range_a4_a8, carryQ.get_carry_in(119), tmp470));
        byte_ef_byte_range_a4_a8_sfx = simd_and(tmp470, byte_range_80_bf);
        struct_Lo.cc = simd_or(struct_Lo.cc, byte_ef_byte_range_a4_a8_sfx);
        carryQ.cq[120] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(120), byte_ef_adv));
        sequence_ef_a9 = simd_and(byte_ef_adv, byte_a9);
        tmp471 = simd_and(basis_bits.bit_2, tmp387);
        byte_range_80_ad = simd_andc(byte_range_80_bf, tmp471);
        carryQ.cq[121] = carryout2carry(pablo_blk_Advance(sequence_ef_a9, carryQ.get_carry_in(121), tmp472));
        sequence_ef_a9_byte_range_80_ad = simd_and(tmp472, byte_range_80_ad);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_ef_a9_byte_range_80_ad);
        sequence_ef_aa = simd_and(byte_ef_adv, byte_aa);
        carryQ.cq[122] = carryout2carry(pablo_blk_Advance(sequence_ef_aa, carryQ.get_carry_in(122), tmp473));
        sequence_ef_aa_byte_range_80_bf = simd_and(tmp473, byte_range_80_bf);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_ef_aa_byte_range_80_bf);
        sequence_ef_ab = simd_and(byte_ef_adv, byte_ab);
        byte_range_80_99 = simd_andc(tmp55, tmp114);
        carryQ.cq[123] = carryout2carry(pablo_blk_Advance(sequence_ef_ab, carryQ.get_carry_in(123), tmp474));
        sequence_ef_ab_byte_range_80_99 = simd_and(tmp474, byte_range_80_99);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_ef_ab_byte_range_80_99);
        sequence_ef_ac = simd_and(byte_ef_adv, byte_ac);
        carryQ.cq[124] = carryout2carry(pablo_blk_Advance(sequence_ef_ac, carryQ.get_carry_in(124), tmp475));
        sequence_ef_ac_9d = simd_and(tmp475, byte_9d);
        sequence_ef_ad = simd_and(byte_ef_adv, byte_ad);
        byte_range_80_81 = simd_andc(byte_range_80_8f, tmp78);
        carryQ.cq[125] = carryout2carry(pablo_blk_Advance(sequence_ef_ad, carryQ.get_carry_in(125), tmp476));
        sequence_ef_ad_byte_range_80_81 = simd_and(tmp476, byte_range_80_81);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_ef_ad_byte_range_80_81);
        sequence_ef_ae = simd_and(byte_ef_adv, byte_ae);
        tmp477 = simd_and(basis_bits.bit_2, tmp79);
        byte_range_80_b1 = simd_andc(byte_range_80_bf, tmp477);
        carryQ.cq[126] = carryout2carry(pablo_blk_Advance(sequence_ef_ae, carryQ.get_carry_in(126), tmp478));
        sequence_ef_ae_byte_range_80_b1 = simd_and(tmp478, byte_range_80_b1);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_ef_ae_byte_range_80_b1);
        sequence_ef_af = simd_and(byte_ef_adv, byte_af);
        tmp479 = simd_or(basis_bits.bit_2, tmp142);
        byte_range_93_bf = simd_and(byte_range_80_bf, tmp479);
        carryQ.cq[127] = carryout2carry(pablo_blk_Advance(sequence_ef_af, carryQ.get_carry_in(127), tmp480));
        sequence_ef_af_byte_range_93_bf = simd_and(tmp480, byte_range_93_bf);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_ef_af_byte_range_93_bf);
        sequence_ef_b0 = simd_and(byte_ef_adv, byte_b0);
        carryQ.cq[128] = carryout2carry(pablo_blk_Advance(sequence_ef_b0, carryQ.get_carry_in(128), tmp481));
        sequence_ef_b0_byte_range_80_bf = simd_and(tmp481, byte_range_80_bf);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_ef_b0_byte_range_80_bf);
        sequence_ef_b4 = simd_and(byte_ef_adv, byte_b4);
        tmp482 = simd_and(basis_bits.bit_3, tmp48);
        tmp483 = simd_and(basis_bits.bit_2, tmp482);
        byte_range_80_bd = simd_andc(byte_range_80_bf, tmp483);
        carryQ.cq[129] = carryout2carry(pablo_blk_Advance(sequence_ef_b4, carryQ.get_carry_in(129), tmp484));
        sequence_ef_b4_byte_range_80_bd = simd_and(tmp484, byte_range_80_bd);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_ef_b4_byte_range_80_bd);
        sequence_ef_b5 = simd_and(byte_ef_adv, byte_b5);
        carryQ.cq[130] = carryout2carry(pablo_blk_Advance(sequence_ef_b5, carryQ.get_carry_in(130), tmp485));
        sequence_ef_b5_byte_range_90_bf = simd_and(tmp485, byte_range_90_bf);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_ef_b5_byte_range_90_bf);
        sequence_ef_b6 = simd_and(byte_ef_adv, byte_b6);
        carryQ.cq[131] = carryout2carry(pablo_blk_Advance(sequence_ef_b6, carryQ.get_carry_in(131), tmp486));
        sequence_ef_b6_byte_range_80_8f = simd_and(tmp486, byte_range_80_8f);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_ef_b6_byte_range_80_8f);
        sequence_ef_b7 = simd_and(byte_ef_adv, byte_b7);
        byte_range_80_87 = simd_andc(byte_range_80_8f, basis_bits.bit_4);
        carryQ.cq[132] = carryout2carry(pablo_blk_Advance(sequence_ef_b7, carryQ.get_carry_in(132), tmp487));
        sequence_ef_b7_byte_range_80_87 = simd_and(tmp487, byte_range_80_87);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_ef_b7_byte_range_80_87);
        sequence_ef_b9 = simd_and(byte_ef_adv, byte_b9);
        byte_range_b0_b4 = simd_andc(tmp427, tmp109);
        carryQ.cq[133] = carryout2carry(pablo_blk_Advance(sequence_ef_b9, carryQ.get_carry_in(133), tmp488));
        sequence_ef_b9_byte_range_b0_b4 = simd_and(tmp488, byte_range_b0_b4);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_ef_b9_byte_range_b0_b4);
        sequence_ef_ba = simd_and(byte_ef_adv, byte_ba);
        carryQ.cq[134] = carryout2carry(pablo_blk_Advance(sequence_ef_ba, carryQ.get_carry_in(134), tmp489));
        sequence_ef_ba_byte_range_80_bf = simd_and(tmp489, byte_range_80_bf);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_ef_ba_byte_range_80_bf);
        sequence_ef_bb = simd_and(byte_ef_adv, byte_bb);
        tmp490 = simd_and(basis_bits.bit_2, tmp385);
        byte_range_80_bc = simd_andc(byte_range_80_bf, tmp490);
        carryQ.cq[135] = carryout2carry(pablo_blk_Advance(sequence_ef_bb, carryQ.get_carry_in(135), tmp491));
        sequence_ef_bb_byte_range_80_bc = simd_and(tmp491, byte_range_80_bc);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_ef_bb_byte_range_80_bc);
        sequence_ef_bd = simd_and(byte_ef_adv, byte_bd);
        byte_range_a6_af = simd_and(tmp62, tmp90);
        carryQ.cq[136] = carryout2carry(pablo_blk_Advance(sequence_ef_bd, carryQ.get_carry_in(136), tmp492));
        sequence_ef_bd_byte_range_a6_af = simd_and(tmp492, byte_range_a6_af);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_ef_bd_byte_range_a6_af);
        sequence_ef_be = simd_and(byte_ef_adv, byte_be);
        byte_range_80_9d = simd_andc(tmp55, tmp482);
        carryQ.cq[137] = carryout2carry(pablo_blk_Advance(sequence_ef_be, carryQ.get_carry_in(137), tmp493));
        sequence_ef_be_byte_range_80_9d = simd_and(tmp493, byte_range_80_9d);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_ef_be_byte_range_80_9d);
        byte_bf = simd_and(byte_range_b0_bf, tmp71);
        sequence_ef_bf = simd_and(byte_ef_adv, byte_bf);
        byte_range_82_87 = simd_and(byte_range_80_87, tmp97);
        carryQ.cq[138] = carryout2carry(pablo_blk_Advance(sequence_ef_bf, carryQ.get_carry_in(138), tmp494));
        sequence_ef_bf_byte_range_82_87 = simd_and(tmp494, byte_range_82_87);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_ef_bf_byte_range_82_87);
        tmp495 = simd_and(tmp1, tmp14);
        byte_f0 = simd_andc(tmp495, tmp75);
        carryQ.cq[139] = carryout2carry(pablo_blk_Advance(byte_f0, carryQ.get_carry_in(139), tmp496));
        sequence_f0_90 = simd_and(tmp496, byte_90);
        carryQ.cq[140] = carryout2carry(pablo_blk_Advance(byte_f0, carryQ.get_carry_in(140), byte_f0_adv));
        carryQ.cq[141] = carryout2carry(pablo_blk_Advance(sequence_f0_90, carryQ.get_carry_in(141), tmp497));
        sequence_f0_90_80 = simd_and(tmp497, byte_80);
        carryQ.cq[142] = carryout2carry(pablo_blk_Advance(sequence_f0_90, carryQ.get_carry_in(142), sequence_f0_90_adv));
        tmp498 = simd_andc(byte_range_80_8f, tmp47);
        tmp499 = simd_or(basis_bits.bit_3, tmp268);
        tmp500 = simd_not(tmp499);
        tmp501 = simd_or(simd_and(basis_bits.bit_2, tmp500), simd_andc(tmp85, basis_bits.bit_2));
        tmp502 = simd_and(byte_range_80_bf, tmp501);
        tmp503 = simd_or(tmp498, tmp502);
        tmp504 = simd_or(simd_and(basis_bits.bit_3, tmp368), simd_andc(basis_bits.bit_4, basis_bits.bit_3));
        tmp505 = simd_and(tmp146, tmp504);
        tmp506 = simd_or(tmp503, tmp505);
        tmp507 = simd_and(byte_range_b0_bf, tmp158);
        tmp508 = simd_or(tmp506, tmp507);
        cc_range_10000_1003f_4 = simd_or(tmp508, byte_bf);
        carryQ.cq[143] = carryout2carry(pablo_blk_Advance(sequence_f0_90_80, carryQ.get_carry_in(143), sequence_f0_90_80_adv));
        tmp509 = simd_and(sequence_f0_90_80_adv, cc_range_10000_1003f_4);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp509);
        sequence_f0_90_81 = simd_and(sequence_f0_90_adv, byte_81);
        tmp510 = simd_and(basis_bits.bit_4, tmp89);
        tmp511 = simd_andc(tmp2, tmp22);
        tmp512 = simd_andc(byte_range_80_bf, tmp511);
        cc_range_10040_10050_4 = simd_andc(tmp512, tmp510);
        carryQ.cq[144] = carryout2carry(pablo_blk_Advance(sequence_f0_90_81, carryQ.get_carry_in(144), sequence_f0_90_81_adv));
        tmp513 = simd_and(sequence_f0_90_81_adv, cc_range_10040_10050_4);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp513);
        sequence_f0_90_82 = simd_and(sequence_f0_90_adv, byte_82);
        carryQ.cq[145] = carryout2carry(pablo_blk_Advance(sequence_f0_90_82, carryQ.get_carry_in(145), sequence_f0_90_82_adv));
        tmp514 = simd_and(sequence_f0_90_82_adv, byte_range_80_bf);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp514);
        sequence_f0_90_83 = simd_and(sequence_f0_90_adv, byte_83);
        byte_range_80_ba = simd_andc(byte_range_80_bf, tmp444);
        carryQ.cq[146] = carryout2carry(pablo_blk_Advance(sequence_f0_90_83, carryQ.get_carry_in(146), sequence_f0_90_83_adv));
        tmp515 = simd_and(sequence_f0_90_83_adv, byte_range_80_ba);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp515);
        sequence_f0_90_8a = simd_and(sequence_f0_90_adv, byte_8a);
        cc_range_10280_102a0_4 = simd_or(byte_range_80_9c, tmp146);
        carryQ.cq[147] = carryout2carry(pablo_blk_Advance(sequence_f0_90_8a, carryQ.get_carry_in(147), sequence_f0_90_8a_adv));
        tmp516 = simd_and(sequence_f0_90_8a_adv, cc_range_10280_102a0_4);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp516);
        sequence_f0_90_8b = simd_and(sequence_f0_90_adv, byte_8b);
        carryQ.cq[148] = carryout2carry(pablo_blk_Advance(sequence_f0_90_8b, carryQ.get_carry_in(148), sequence_f0_90_8b_adv));
        tmp517 = simd_and(sequence_f0_90_8b_adv, byte_range_80_90);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp517);
        sequence_f0_90_8c = simd_and(sequence_f0_90_adv, byte_8c);
        tmp518 = simd_andc(tmp55, tmp161);
        cc_range_10300_10330_4 = simd_or(tmp518, byte_range_b0_bf);
        carryQ.cq[149] = carryout2carry(pablo_blk_Advance(sequence_f0_90_8c, carryQ.get_carry_in(149), sequence_f0_90_8c_adv));
        tmp519 = simd_and(sequence_f0_90_8c_adv, cc_range_10300_10330_4);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp519);
        sequence_f0_90_8d = simd_and(sequence_f0_90_adv, byte_8d);
        tmp520 = simd_or(simd_and(basis_bits.bit_4, tmp152), simd_andc(tmp97, basis_bits.bit_4));
        tmp521 = simd_andc(tmp75, tmp520);
        cc_range_10340_10342_4 = simd_andc(byte_range_80_8f, tmp521);
        carryQ.cq[150] = carryout2carry(pablo_blk_Advance(sequence_f0_90_8d, carryQ.get_carry_in(150), sequence_f0_90_8d_adv));
        tmp522 = simd_and(sequence_f0_90_8d_adv, cc_range_10340_10342_4);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp522);
        sequence_f0_90_8e = simd_and(sequence_f0_90_adv, byte_8e);
        cc_range_10380_103a0_4 = simd_or(byte_range_80_9d, tmp146);
        carryQ.cq[151] = carryout2carry(pablo_blk_Advance(sequence_f0_90_8e, carryQ.get_carry_in(151), sequence_f0_90_8e_adv));
        tmp523 = simd_and(sequence_f0_90_8e_adv, cc_range_10380_103a0_4);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp523);
        sequence_f0_90_8f = simd_and(sequence_f0_90_adv, byte_8f);
        tmp524 = simd_andc(tmp4, basis_bits.bit_4);
        cc_range_103c0_103c8_4 = simd_andc(byte_range_80_8f, tmp524);
        carryQ.cq[152] = carryout2carry(pablo_blk_Advance(sequence_f0_90_8f, carryQ.get_carry_in(152), sequence_f0_90_8f_adv));
        tmp525 = simd_and(sequence_f0_90_8f_adv, cc_range_103c0_103c8_4);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp525);
        sequence_f0_90_91 = simd_and(sequence_f0_90_adv, byte_91);
        carryQ.cq[153] = carryout2carry(pablo_blk_Advance(sequence_f0_90_91, carryQ.get_carry_in(153), sequence_f0_90_91_adv));
        tmp526 = simd_and(sequence_f0_90_91_adv, byte_range_90_bf);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp526);
        byte_92 = simd_and(tmp58, tmp6);
        sequence_f0_90_92 = simd_and(sequence_f0_90_adv, byte_92);
        carryQ.cq[154] = carryout2carry(pablo_blk_Advance(sequence_f0_90_92, carryQ.get_carry_in(154), sequence_f0_90_92_adv));
        tmp527 = simd_and(sequence_f0_90_92_adv, byte_range_80_9d);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp527);
        sequence_f0_90_a0 = simd_and(sequence_f0_90_adv, byte_a0);
        tmp528 = simd_andc(byte_range_80_87, tmp89);
        tmp529 = simd_and(byte_range_80_8f, tmp37);
        tmp530 = simd_or(tmp528, tmp529);
        tmp531 = simd_not(tmp104);
        tmp532 = simd_or(simd_and(basis_bits.bit_2, tmp531), simd_andc(tmp99, basis_bits.bit_2));
        tmp533 = simd_and(byte_range_80_bf, tmp532);
        tmp534 = simd_or(tmp530, tmp533);
        tmp535 = simd_and(byte_range_b0_bf, tmp296);
        tmp536 = simd_or(tmp534, tmp535);
        tmp537 = simd_or(tmp536, tmp438);
        cc_range_10800_1083f_4 = simd_or(tmp537, byte_bf);
        carryQ.cq[155] = carryout2carry(pablo_blk_Advance(sequence_f0_90_a0, carryQ.get_carry_in(155), sequence_f0_90_a0_adv));
        tmp538 = simd_and(sequence_f0_90_a0_adv, cc_range_10800_1083f_4);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp538);
        sequence_f0_90_a1 = simd_and(sequence_f0_90_adv, byte_a1);
        carryQ.cq[156] = carryout2carry(pablo_blk_Advance(sequence_f0_90_a1, carryQ.get_carry_in(156), sequence_f0_90_a1_adv));
        tmp539 = simd_and(sequence_f0_90_a1_adv, byte_range_80_95);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp539);
        sequence_f0_90_a4 = simd_and(sequence_f0_90_adv, byte_a4);
        tmp540 = simd_andc(tmp146, tmp114);
        cc_range_10900_10920_4 = simd_or(byte_range_80_95, tmp540);
        carryQ.cq[157] = carryout2carry(pablo_blk_Advance(sequence_f0_90_a4, carryQ.get_carry_in(157), sequence_f0_90_a4_adv));
        tmp541 = simd_and(sequence_f0_90_a4_adv, cc_range_10900_10920_4);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp541);
        sequence_f0_90_a6 = simd_and(sequence_f0_90_adv, byte_a6);
        tmp542 = simd_and(basis_bits.bit_2, tmp123);
        tmp543 = simd_andc(byte_range_80_bf, tmp542);
        tmp544 = simd_and(byte_range_b0_bf, tmp48);
        cc_range_10980_109be_4 = simd_or(tmp543, tmp544);
        carryQ.cq[158] = carryout2carry(pablo_blk_Advance(sequence_f0_90_a6, carryQ.get_carry_in(158), sequence_f0_90_a6_adv));
        tmp545 = simd_and(sequence_f0_90_a6_adv, cc_range_10980_109be_4);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp545);
        sequence_f0_90_a8 = simd_and(sequence_f0_90_adv, byte_a8);
        tmp546 = simd_andc(byte_range_80_8f, tmp75);
        tmp547 = simd_andc(tmp58, tmp4);
        tmp548 = simd_or(tmp546, tmp547);
        tmp549 = simd_and(tmp303, tmp24);
        tmp550 = simd_or(tmp548, tmp549);
        tmp551 = simd_or(simd_and(basis_bits.bit_2, tmp399), simd_andc(tmp107, basis_bits.bit_2));
        tmp552 = simd_and(byte_range_80_bf, tmp551);
        cc_range_10a00_10a19_4 = simd_or(tmp550, tmp552);
        carryQ.cq[159] = carryout2carry(pablo_blk_Advance(sequence_f0_90_a8, carryQ.get_carry_in(159), sequence_f0_90_a8_adv));
        tmp553 = simd_and(sequence_f0_90_a8_adv, cc_range_10a00_10a19_4);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp553);
        sequence_f0_90_a9 = simd_and(sequence_f0_90_adv, byte_a9);
        byte_range_a0_bc = simd_andc(tmp146, tmp385);
        carryQ.cq[160] = carryout2carry(pablo_blk_Advance(sequence_f0_90_a9, carryQ.get_carry_in(160), sequence_f0_90_a9_adv));
        tmp554 = simd_and(sequence_f0_90_a9_adv, byte_range_a0_bc);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp554);
        sequence_f0_90_ac = simd_and(sequence_f0_90_adv, byte_ac);
        carryQ.cq[161] = carryout2carry(pablo_blk_Advance(sequence_f0_90_ac, carryQ.get_carry_in(161), sequence_f0_90_ac_adv));
        tmp555 = simd_and(sequence_f0_90_ac_adv, byte_range_80_b5);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp555);
        sequence_f0_90_ad = simd_and(sequence_f0_90_adv, byte_ad);
        tmp556 = simd_andc(tmp146, tmp142);
        cc_range_10b40_10b60_4 = simd_or(byte_range_80_95, tmp556);
        carryQ.cq[162] = carryout2carry(pablo_blk_Advance(sequence_f0_90_ad, carryQ.get_carry_in(162), sequence_f0_90_ad_adv));
        tmp557 = simd_and(sequence_f0_90_ad_adv, cc_range_10b40_10b60_4);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp557);
        sequence_f0_90_b0 = simd_and(sequence_f0_90_adv, byte_b0);
        carryQ.cq[163] = carryout2carry(pablo_blk_Advance(sequence_f0_90_b0, carryQ.get_carry_in(163), sequence_f0_90_b0_adv));
        tmp558 = simd_and(sequence_f0_90_b0_adv, byte_range_80_bf);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp558);
        sequence_f0_90_b1 = simd_and(sequence_f0_90_adv, byte_b1);
        carryQ.cq[164] = carryout2carry(pablo_blk_Advance(sequence_f0_90_b1, carryQ.get_carry_in(164), sequence_f0_90_b1_adv));
        tmp559 = simd_and(sequence_f0_90_b1_adv, byte_range_80_88);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp559);
        sequence_f0_91 = simd_and(byte_f0_adv, byte_91);
        carryQ.cq[165] = carryout2carry(pablo_blk_Advance(sequence_f0_91, carryQ.get_carry_in(165), tmp560));
        sequence_f0_91_80 = simd_and(tmp560, byte_80);
        carryQ.cq[166] = carryout2carry(pablo_blk_Advance(sequence_f0_91, carryQ.get_carry_in(166), sequence_f0_91_adv));
        tmp561 = simd_not(tmp123);
        tmp562 = simd_or(simd_and(basis_bits.bit_2, tmp561), simd_andc(tmp406, basis_bits.bit_2));
        byte_range_83_b7 = simd_and(byte_range_80_bf, tmp562);
        carryQ.cq[167] = carryout2carry(pablo_blk_Advance(sequence_f0_91_80, carryQ.get_carry_in(167), sequence_f0_91_80_adv));
        tmp563 = simd_and(sequence_f0_91_80_adv, byte_range_83_b7);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp563);
        sequence_f0_91_82 = simd_and(sequence_f0_91_adv, byte_82);
        tmp564 = simd_or(simd_and(basis_bits.bit_2, tmp77), simd_andc(tmp406, basis_bits.bit_2));
        byte_range_83_af = simd_and(byte_range_80_bf, tmp564);
        carryQ.cq[168] = carryout2carry(pablo_blk_Advance(sequence_f0_91_82, carryQ.get_carry_in(168), sequence_f0_91_82_adv));
        tmp565 = simd_and(sequence_f0_91_82_adv, byte_range_83_af);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp565);
        sequence_f0_91_83 = simd_and(sequence_f0_91_adv, byte_83);
        tmp566 = simd_or(simd_and(basis_bits.bit_2, tmp140), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
        byte_range_90_a8 = simd_and(byte_range_80_bf, tmp566);
        carryQ.cq[169] = carryout2carry(pablo_blk_Advance(sequence_f0_91_83, carryQ.get_carry_in(169), sequence_f0_91_83_adv));
        tmp567 = simd_and(sequence_f0_91_83_adv, byte_range_90_a8);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp567);
        sequence_f0_91_84 = simd_and(sequence_f0_91_adv, byte_84);
        tmp568 = simd_or(simd_and(basis_bits.bit_2, tmp500), simd_andc(tmp406, basis_bits.bit_2));
        byte_range_83_a6 = simd_and(byte_range_80_bf, tmp568);
        carryQ.cq[170] = carryout2carry(pablo_blk_Advance(sequence_f0_91_84, carryQ.get_carry_in(170), sequence_f0_91_84_adv));
        tmp569 = simd_and(sequence_f0_91_84_adv, byte_range_83_a6);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp569);
        sequence_f0_91_86 = simd_and(sequence_f0_91_adv, byte_86);
        tmp570 = simd_not(tmp142);
        tmp571 = simd_or(simd_and(basis_bits.bit_2, tmp570), simd_andc(tmp406, basis_bits.bit_2));
        byte_range_83_b2 = simd_and(byte_range_80_bf, tmp571);
        carryQ.cq[171] = carryout2carry(pablo_blk_Advance(sequence_f0_91_86, carryQ.get_carry_in(171), sequence_f0_91_86_adv));
        tmp572 = simd_and(sequence_f0_91_86_adv, byte_range_83_b2);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp572);
        sequence_f0_91_87 = simd_and(sequence_f0_91_adv, byte_87);
        byte_range_81_84 = simd_and(byte_range_80_87, tmp184);
        carryQ.cq[172] = carryout2carry(pablo_blk_Advance(sequence_f0_91_87, carryQ.get_carry_in(172), sequence_f0_91_87_adv));
        tmp573 = simd_and(sequence_f0_91_87_adv, byte_range_81_84);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp573);
        sequence_f0_91_9a = simd_and(sequence_f0_91_adv, byte_9a);
        carryQ.cq[173] = carryout2carry(pablo_blk_Advance(sequence_f0_91_9a, carryQ.get_carry_in(173), sequence_f0_91_9a_adv));
        tmp574 = simd_and(sequence_f0_91_9a_adv, byte_range_80_aa);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp574);
        sequence_f0_92 = simd_and(byte_f0_adv, byte_92);
        carryQ.cq[174] = carryout2carry(pablo_blk_Advance(sequence_f0_92, carryQ.get_carry_in(174), tmp575));
        sequence_f0_92_byte_range_80_8c = simd_and(tmp575, byte_range_80_8c);
        carryQ.cq[175] = carryout2carry(pablo_blk_Advance(sequence_f0_92_byte_range_80_8c, carryQ.get_carry_in(175), tmp576));
        sequence_f0_92_byte_range_80_8c_sfx = simd_and(tmp576, byte_range_80_bf);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_f0_92_byte_range_80_8c_sfx);
        carryQ.cq[176] = carryout2carry(pablo_blk_Advance(sequence_f0_92, carryQ.get_carry_in(176), sequence_f0_92_adv));
        sequence_f0_92_8d = simd_and(sequence_f0_92_adv, byte_8d);
        tmp577 = simd_or(basis_bits.bit_3, tmp71);
        tmp578 = simd_and(basis_bits.bit_2, tmp577);
        byte_range_80_ae = simd_andc(byte_range_80_bf, tmp578);
        carryQ.cq[177] = carryout2carry(pablo_blk_Advance(sequence_f0_92_8d, carryQ.get_carry_in(177), tmp579));
        sequence_f0_92_8d_byte_range_80_ae = simd_and(tmp579, byte_range_80_ae);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_f0_92_8d_byte_range_80_ae);
        byte_93 = simd_and(tmp58, tmp211);
        sequence_f0_93 = simd_and(byte_f0_adv, byte_93);
        carryQ.cq[178] = carryout2carry(pablo_blk_Advance(sequence_f0_93, carryQ.get_carry_in(178), tmp580));
        sequence_f0_93_byte_range_80_8f = simd_and(tmp580, byte_range_80_8f);
        carryQ.cq[179] = carryout2carry(pablo_blk_Advance(sequence_f0_93_byte_range_80_8f, carryQ.get_carry_in(179), tmp581));
        sequence_f0_93_byte_range_80_8f_sfx = simd_and(tmp581, byte_range_80_bf);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_f0_93_byte_range_80_8f_sfx);
        carryQ.cq[180] = carryout2carry(pablo_blk_Advance(sequence_f0_93, carryQ.get_carry_in(180), sequence_f0_93_adv));
        sequence_f0_93_90 = simd_and(sequence_f0_93_adv, byte_90);
        carryQ.cq[181] = carryout2carry(pablo_blk_Advance(sequence_f0_93_90, carryQ.get_carry_in(181), tmp582));
        sequence_f0_93_90_byte_range_80_ae = simd_and(tmp582, byte_range_80_ae);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_f0_93_90_byte_range_80_ae);
        byte_96 = simd_and(tmp58, tmp13);
        sequence_f0_96 = simd_and(byte_f0_adv, byte_96);
        byte_range_a0_a7 = simd_andc(tmp62, basis_bits.bit_4);
        carryQ.cq[182] = carryout2carry(pablo_blk_Advance(sequence_f0_96, carryQ.get_carry_in(182), tmp583));
        sequence_f0_96_byte_range_a0_a7 = simd_and(tmp583, byte_range_a0_a7);
        carryQ.cq[183] = carryout2carry(pablo_blk_Advance(sequence_f0_96_byte_range_a0_a7, carryQ.get_carry_in(183), tmp584));
        sequence_f0_96_byte_range_a0_a7_sfx = simd_and(tmp584, byte_range_80_bf);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_f0_96_byte_range_a0_a7_sfx);
        carryQ.cq[184] = carryout2carry(pablo_blk_Advance(sequence_f0_96, carryQ.get_carry_in(184), sequence_f0_96_adv));
        sequence_f0_96_a8 = simd_and(sequence_f0_96_adv, byte_a8);
        tmp585 = simd_and(basis_bits.bit_2, tmp107);
        byte_range_80_b8 = simd_andc(byte_range_80_bf, tmp585);
        carryQ.cq[185] = carryout2carry(pablo_blk_Advance(sequence_f0_96_a8, carryQ.get_carry_in(185), tmp586));
        sequence_f0_96_a8_byte_range_80_b8 = simd_and(tmp586, byte_range_80_b8);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_f0_96_a8_byte_range_80_b8);
        sequence_f0_96_bc = simd_and(sequence_f0_96_adv, byte_bc);
        carryQ.cq[186] = carryout2carry(pablo_blk_Advance(sequence_f0_96_bc, carryQ.get_carry_in(186), tmp587));
        sequence_f0_96_bc_byte_range_80_bf = simd_and(tmp587, byte_range_80_bf);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_f0_96_bc_byte_range_80_bf);
        sequence_f0_96_bd = simd_and(sequence_f0_96_adv, byte_bd);
        byte_range_80_84 = simd_andc(byte_range_80_87, tmp109);
        carryQ.cq[187] = carryout2carry(pablo_blk_Advance(sequence_f0_96_bd, carryQ.get_carry_in(187), tmp588));
        sequence_f0_96_bd_byte_range_80_84 = simd_and(tmp588, byte_range_80_84);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_f0_96_bd_byte_range_80_84);
        sequence_f0_9b = simd_and(byte_f0_adv, byte_9b);
        carryQ.cq[188] = carryout2carry(pablo_blk_Advance(sequence_f0_9b, carryQ.get_carry_in(188), tmp589));
        sequence_f0_9b_80 = simd_and(tmp589, byte_80);
        carryQ.cq[189] = carryout2carry(pablo_blk_Advance(sequence_f0_9b, carryQ.get_carry_in(189), sequence_f0_9b_adv));
        carryQ.cq[190] = carryout2carry(pablo_blk_Advance(sequence_f0_9b_80, carryQ.get_carry_in(190), sequence_f0_9b_80_adv));
        tmp590 = simd_and(sequence_f0_9b_80_adv, byte_range_80_81);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp590);
        sequence_f0_9e = simd_and(byte_f0_adv, byte_9e);
        carryQ.cq[191] = carryout2carry(pablo_blk_Advance(sequence_f0_9e, carryQ.get_carry_in(191), tmp591));
        sequence_f0_9e_b8 = simd_and(tmp591, byte_b8);
        carryQ.cq[192] = carryout2carry(pablo_blk_Advance(sequence_f0_9e, carryQ.get_carry_in(192), sequence_f0_9e_adv));
        tmp592 = simd_and(tmp55, tmp400);
        tmp593 = simd_or(tmp379, tmp592);
        tmp594 = simd_and(tmp307, tmp177);
        tmp595 = simd_or(tmp593, tmp594);
        tmp596 = simd_or(tmp595, byte_a4);
        tmp597 = simd_or(tmp596, byte_a7);
        tmp598 = simd_not(tmp141);
        tmp599 = simd_or(simd_and(basis_bits.bit_3, tmp598), simd_andc(tmp106, basis_bits.bit_3));
        tmp600 = simd_and(tmp146, tmp599);
        tmp601 = simd_or(tmp597, tmp600);
        tmp602 = simd_and(byte_range_b0_bf, tmp12);
        tmp603 = simd_or(tmp601, tmp602);
        tmp604 = simd_and(byte_range_b0_bf, tmp40);
        tmp605 = simd_or(tmp603, tmp604);
        tmp606 = simd_and(byte_range_b0_bf, tmp17);
        cc_range_1ee00_1ee3b_4 = simd_or(tmp605, tmp606);
        carryQ.cq[193] = carryout2carry(pablo_blk_Advance(sequence_f0_9e_b8, carryQ.get_carry_in(193), sequence_f0_9e_b8_adv));
        tmp607 = simd_and(sequence_f0_9e_b8_adv, cc_range_1ee00_1ee3b_4);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp607);
        sequence_f0_9e_b9 = simd_and(sequence_f0_9e_adv, byte_b9);
        tmp608 = simd_or(tmp6, tmp19);
        tmp609 = simd_or(tmp608, tmp40);
        tmp610 = simd_or(tmp609, tmp17);
        tmp611 = simd_and(byte_range_80_8f, tmp610);
        tmp612 = simd_or(tmp611, byte_range_8d_8f);
        tmp613 = simd_and(tmp547, tmp177);
        tmp614 = simd_or(tmp612, tmp613);
        tmp615 = simd_and(tmp58, tmp25);
        tmp616 = simd_or(tmp614, tmp615);
        tmp617 = simd_and(tmp58, tmp19);
        tmp618 = simd_or(tmp616, tmp617);
        tmp619 = simd_or(tmp618, byte_99);
        tmp620 = simd_or(tmp619, byte_9b);
        tmp621 = simd_or(tmp620, byte_9d);
        tmp622 = simd_or(tmp621, byte_9f);
        tmp623 = simd_or(tmp622, tmp594);
        tmp624 = simd_or(tmp623, byte_a4);
        tmp625 = simd_or(simd_and(basis_bits.bit_4, tmp41), simd_andc(tmp267, basis_bits.bit_4));
        tmp626 = simd_and(tmp62, tmp625);
        tmp627 = simd_or(tmp624, tmp626);
        tmp628 = simd_or(simd_and(basis_bits.bit_3, tmp598), simd_andc(tmp47, basis_bits.bit_3));
        tmp629 = simd_and(tmp146, tmp628);
        tmp630 = simd_or(tmp627, tmp629);
        tmp631 = simd_or(tmp630, tmp602);
        tmp632 = simd_and(tmp430, tmp184);
        tmp633 = simd_or(tmp631, tmp632);
        tmp634 = simd_and(byte_range_b0_bf, tmp88);
        cc_range_1ee42_1ee7e_4 = simd_or(tmp633, tmp634);
        carryQ.cq[194] = carryout2carry(pablo_blk_Advance(sequence_f0_9e_b9, carryQ.get_carry_in(194), sequence_f0_9e_b9_adv));
        tmp635 = simd_and(sequence_f0_9e_b9_adv, cc_range_1ee42_1ee7e_4);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp635);
        sequence_f0_9e_ba = simd_and(sequence_f0_9e_adv, byte_ba);
        tmp636 = simd_andc(byte_range_80_8f, tmp98);
        tmp637 = simd_not(tmp47);
        tmp638 = simd_or(simd_and(basis_bits.bit_3, tmp637), simd_andc(tmp29, basis_bits.bit_3));
        tmp639 = simd_and(tmp55, tmp638);
        tmp640 = simd_or(tmp636, tmp639);
        tmp641 = simd_or(tmp640, tmp308);
        tmp642 = simd_and(tmp62, tmp200);
        tmp643 = simd_or(tmp641, tmp642);
        tmp644 = simd_and(tmp146, tmp638);
        cc_range_1ee80_1eeab_4 = simd_or(tmp643, tmp644);
        carryQ.cq[195] = carryout2carry(pablo_blk_Advance(sequence_f0_9e_ba, carryQ.get_carry_in(195), sequence_f0_9e_ba_adv));
        tmp645 = simd_and(sequence_f0_9e_ba_adv, cc_range_1ee80_1eeab_4);
        struct_Lo.cc = simd_or(struct_Lo.cc, tmp645);
        byte_range_a0_a9 = simd_andc(tmp62, tmp98);
        byte_f0_byte_range_a0_a9 = simd_and(byte_f0_adv, byte_range_a0_a9);
        carryQ.cq[196] = carryout2carry(pablo_blk_Advance(byte_f0_byte_range_a0_a9, carryQ.get_carry_in(196), tmp646));
        byte_f0_byte_range_a0_a9_sfx = simd_and(tmp646, byte_range_80_bf);
        carryQ.cq[197] = carryout2carry(pablo_blk_Advance(byte_f0_byte_range_a0_a9_sfx, carryQ.get_carry_in(197), tmp647));
        byte_f0_byte_range_a0_a9_sfx_sfx = simd_and(tmp647, byte_range_80_bf);
        struct_Lo.cc = simd_or(struct_Lo.cc, byte_f0_byte_range_a0_a9_sfx_sfx);
        sequence_f0_aa = simd_and(byte_f0_adv, byte_aa);
        carryQ.cq[198] = carryout2carry(pablo_blk_Advance(sequence_f0_aa, carryQ.get_carry_in(198), sequence_f0_aa_adv));
        sequence_f0_aa_80 = simd_and(sequence_f0_aa_adv, byte_80);
        carryQ.cq[199] = carryout2carry(pablo_blk_Advance(sequence_f0_aa_80, carryQ.get_carry_in(199), tmp648));
        sequence_f0_aa_80_byte_range_80_96 = simd_and(tmp648, byte_range_80_96);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_f0_aa_80_byte_range_80_96);
        sequence_f0_ab = simd_and(byte_f0_adv, byte_ab);
        carryQ.cq[200] = carryout2carry(pablo_blk_Advance(sequence_f0_ab, carryQ.get_carry_in(200), sequence_f0_ab_adv));
        sequence_f0_ab_80 = simd_and(sequence_f0_ab_adv, byte_80);
        carryQ.cq[201] = carryout2carry(pablo_blk_Advance(sequence_f0_ab_80, carryQ.get_carry_in(201), tmp649));
        sequence_f0_ab_80_byte_range_80_b4 = simd_and(tmp649, byte_range_80_b4);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_f0_ab_80_byte_range_80_b4);
        sequence_f0_af = simd_and(byte_f0_adv, byte_af);
        carryQ.cq[202] = carryout2carry(pablo_blk_Advance(sequence_f0_af, carryQ.get_carry_in(202), sequence_f0_af_adv));
        sequence_f0_af_a0 = simd_and(sequence_f0_af_adv, byte_a0);
        carryQ.cq[203] = carryout2carry(pablo_blk_Advance(sequence_f0_af_a0, carryQ.get_carry_in(203), tmp650));
        sequence_f0_af_a0_byte_range_80_9d = simd_and(tmp650, byte_range_80_9d);
        struct_Lo.cc = simd_or(struct_Lo.cc, sequence_f0_af_a0_byte_range_80_9d);
  }
  CarryArray<204, 0> carryQ;
  };

  struct Ll {
  Ll() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Ll & struct_Ll) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, tmp7, tmp8, tmp9, tmp10;
		BitBlock byte_range_61_7a, tmp11, tmp12, tmp13, tmp14, tmp15, byte_c2, tmp16;
		BitBlock tmp17, tmp18, tmp19, tmp20, tmp21, byte_b5, byte_c2_adv, tmp22, tmp23;
		BitBlock byte_c3, tmp24, tmp25, tmp26, tmp27, tmp28, tmp29, tmp30, tmp31;
		BitBlock tmp32, tmp33, cc_range_df_f8_2, byte_c3_adv, tmp34, tmp35, byte_c4;
		BitBlock tmp36, tmp37, tmp38, tmp39, tmp40, tmp41, tmp42, tmp43, tmp44, tmp45;
		BitBlock tmp46, tmp47, tmp48, tmp49, tmp50, tmp51, tmp52, tmp53, tmp54, tmp55;
		BitBlock tmp56, tmp57, tmp58, tmp59, tmp60, tmp61, tmp62, tmp63, tmp64, tmp65;
		BitBlock tmp66, tmp67, tmp68, tmp69, tmp70, tmp71, tmp72, tmp73, tmp74, tmp75;
		BitBlock tmp76, tmp77, tmp78, tmp79, tmp80, tmp81, tmp82, tmp83, tmp84, tmp85;
		BitBlock tmp86, tmp87, tmp88, tmp89, tmp90, tmp91, tmp92, tmp93, tmp94, tmp95;
		BitBlock tmp96, tmp97, tmp98, tmp99, tmp100, tmp101, tmp102, tmp103, tmp104;
		BitBlock cc_range_101_13e_2, byte_c4_adv, tmp105, byte_c5, tmp106, tmp107;
		BitBlock tmp108, tmp109, tmp110, tmp111, tmp112, tmp113, tmp114, tmp115;
		BitBlock tmp116, tmp117, tmp118, tmp119, tmp120, tmp121, tmp122, tmp123;
		BitBlock tmp124, tmp125, tmp126, tmp127, tmp128, tmp129, tmp130, tmp131;
		BitBlock tmp132, tmp133, tmp134, tmp135, tmp136, tmp137, tmp138, tmp139;
		BitBlock tmp140, cc_range_140_17e_2, byte_c5_adv, tmp141, byte_c6, tmp142;
		BitBlock tmp143, tmp144, tmp145, tmp146, tmp147, tmp148, tmp149, tmp150;
		BitBlock tmp151, tmp152, tmp153, tmp154, tmp155, tmp156, tmp157, tmp158;
		BitBlock tmp159, tmp160, tmp161, tmp162, tmp163, tmp164, tmp165, tmp166;
		BitBlock tmp167, tmp168, tmp169, tmp170, tmp171, tmp172, tmp173, tmp174;
		BitBlock tmp175, tmp176, tmp177, tmp178, cc_range_180_1bd_2, byte_c6_adv;
		BitBlock tmp179, byte_c7, tmp180, tmp181, tmp182, tmp183, tmp184, tmp185;
		BitBlock tmp186, tmp187, tmp188, tmp189, tmp190, tmp191, tmp192, tmp193;
		BitBlock tmp194, tmp195, tmp196, tmp197, tmp198, tmp199, tmp200, tmp201;
		BitBlock tmp202, tmp203, tmp204, tmp205, tmp206, tmp207, tmp208, tmp209;
		BitBlock tmp210, tmp211, tmp212, tmp213, tmp214, tmp215, tmp216, tmp217;
		BitBlock tmp218, cc_range_1c6_1ff_2, byte_c7_adv, tmp219, byte_c8, tmp220;
		BitBlock tmp221, tmp222, tmp223, tmp224, tmp225, cc_range_201_23f_2;
		BitBlock byte_c8_adv, tmp226, byte_c9, tmp227, tmp228, tmp229, tmp230, tmp231;
		BitBlock tmp232, tmp233, tmp234, cc_range_240_24f_2, byte_c9_adv, tmp235;
		BitBlock byte_ca, tmp236, tmp237, tmp238, tmp239, tmp240, tmp241, tmp242;
		BitBlock tmp243, tmp244, cc_range_280_295_2, byte_ca_adv, tmp245, byte_cd;
		BitBlock tmp246, tmp247, tmp248, tmp249, tmp250, cc_range_371_37b_2;
		BitBlock byte_cd_adv, tmp251, byte_ce, tmp252, tmp253, cc_range_390_3ac_2;
		BitBlock byte_ce_adv, tmp254, byte_cf, tmp255, tmp256, tmp257, tmp258, tmp259;
		BitBlock tmp260, tmp261, tmp262, tmp263, tmp264, tmp265, tmp266, tmp267;
		BitBlock tmp268, tmp269, tmp270, tmp271, tmp272, tmp273, tmp274, tmp275;
		BitBlock tmp276, tmp277, tmp278, tmp279, tmp280, tmp281, tmp282, tmp283;
		BitBlock cc_range_3c0_3fb_2, byte_cf_adv, tmp284, tmp285, byte_d0;
		BitBlock byte_range_b0_bf, byte_d0_adv, tmp286, byte_d1, tmp287, tmp288;
		BitBlock tmp289, tmp290, tmp291, tmp292, tmp293, tmp294, tmp295, tmp296;
		BitBlock tmp297, tmp298, tmp299, tmp300, tmp301, tmp302, tmp303, tmp304;
		BitBlock tmp305, tmp306, tmp307, tmp308, tmp309, cc_range_440_47f_2;
		BitBlock byte_d1_adv, tmp310, byte_d2, tmp311, tmp312, tmp313, tmp314, tmp315;
		BitBlock tmp316, tmp317, tmp318, tmp319, tmp320, tmp321, tmp322, tmp323;
		BitBlock tmp324, tmp325, tmp326, tmp327, tmp328, tmp329, tmp330, tmp331;
		BitBlock tmp332, tmp333, tmp334, tmp335, tmp336, tmp337, cc_range_481_4bf_2;
		BitBlock byte_d2_adv, tmp338, byte_d3, tmp339, tmp340, tmp341, tmp342, tmp343;
		BitBlock tmp344, tmp345, tmp346, tmp347, tmp348, tmp349, tmp350, tmp351;
		BitBlock tmp352, tmp353, tmp354, tmp355, tmp356, tmp357, tmp358, tmp359;
		BitBlock tmp360, tmp361, tmp362, tmp363, tmp364, tmp365, tmp366, tmp367;
		BitBlock tmp368, cc_range_4c2_4ff_2, byte_d3_adv, tmp369, byte_d4, tmp370;
		BitBlock tmp371, tmp372, cc_range_501_527_2, byte_d4_adv, tmp373, byte_d5;
		BitBlock tmp374, byte_range_a1_bf, byte_d5_adv, tmp375, byte_d6;
		BitBlock byte_range_80_87, byte_d6_adv, tmp376, tmp377, byte_e1, byte_b4;
		BitBlock tmp378, sequence_e1_b4, byte_e1_adv, tmp379, byte_range_80_ab;
		BitBlock sequence_e1_b4_adv, tmp380, sequence_e1_b5, tmp381, tmp382, tmp383;
		BitBlock tmp384, tmp385, cc_range_1d6b_1d79_3, sequence_e1_b5_adv, tmp386;
		BitBlock byte_b6, sequence_e1_b6, tmp387, byte_range_80_9a, sequence_e1_b6_adv;
		BitBlock tmp388, byte_b8, sequence_e1_b8, cc_range_1e01_1e3f_3;
		BitBlock sequence_e1_b8_adv, tmp389, byte_b9, sequence_e1_b9;
		BitBlock cc_range_1e41_1e7f_3, sequence_e1_b9_adv, tmp390, byte_ba;
		BitBlock sequence_e1_ba, tmp391, tmp392, tmp393, tmp394, tmp395, tmp396;
		BitBlock tmp397, tmp398, tmp399, tmp400, tmp401, tmp402, tmp403, tmp404;
		BitBlock tmp405, tmp406, tmp407, tmp408, tmp409, tmp410, tmp411;
		BitBlock cc_range_1e81_1ebf_3, sequence_e1_ba_adv, tmp412, byte_bb;
		BitBlock sequence_e1_bb, cc_range_1ec1_1eff_3, sequence_e1_bb_adv, tmp413;
		BitBlock byte_bc, sequence_e1_bc, tmp414, tmp415, tmp416, tmp417, tmp418;
		BitBlock tmp419, cc_range_1f00_1f30_3, sequence_e1_bc_adv, tmp420, byte_bd;
		BitBlock sequence_e1_bd, tmp421, tmp422, tmp423, tmp424, tmp425;
		BitBlock cc_range_1f40_1f70_3, sequence_e1_bd_adv, tmp426, byte_be;
		BitBlock sequence_e1_be, tmp427, tmp428, tmp429, tmp430, tmp431, tmp432;
		BitBlock tmp433, tmp434, tmp435, cc_range_1f80_1fbe_3, sequence_e1_be_adv;
		BitBlock tmp436, byte_bf, sequence_e1_bf, tmp437, tmp438, tmp439, tmp440;
		BitBlock tmp441, tmp442, tmp443, tmp444, tmp445, tmp446, tmp447;
		BitBlock cc_range_1fc2_1ff6_3, sequence_e1_bf_adv, tmp448, byte_e2, byte_84;
		BitBlock tmp449, sequence_e2_84, byte_e2_adv, tmp450, tmp451, tmp452, tmp453;
		BitBlock tmp454, tmp455, tmp456, cc_range_210a_213c_3, sequence_e2_84_adv;
		BitBlock tmp457, byte_85, sequence_e2_85, tmp458, tmp459, cc_range_2146_214e_3;
		BitBlock sequence_e2_85_adv, tmp460, byte_86, sequence_e2_86;
		BitBlock sequence_e2_86_adv, tmp461, byte_b0, sequence_e2_b0;
		BitBlock sequence_e2_b0_adv, tmp462, byte_b1, sequence_e2_b1, tmp463, tmp464;
		BitBlock tmp465, tmp466, tmp467, tmp468, tmp469, tmp470, tmp471, tmp472;
		BitBlock tmp473, tmp474, tmp475, tmp476, tmp477, tmp478, cc_range_2c40_2c76_3;
		BitBlock sequence_e2_b1_adv, tmp479, byte_b2, sequence_e2_b2;
		BitBlock cc_range_2c81_2cbf_3, sequence_e2_b2_adv, tmp480, byte_b3;
		BitBlock sequence_e2_b3, tmp481, tmp482, tmp483, tmp484, tmp485;
		BitBlock cc_range_2cc1_2cf3_3, sequence_e2_b3_adv, tmp486, sequence_e2_b4;
		BitBlock tmp487, tmp488, tmp489, tmp490, tmp491, cc_range_2d00_2d2d_3;
		BitBlock sequence_e2_b4_adv, tmp492, byte_ea, byte_99, tmp493, sequence_ea_99;
		BitBlock byte_ea_adv, tmp494, tmp495, tmp496, cc_range_a641_a66d_3;
		BitBlock sequence_ea_99_adv, tmp497, byte_9a, sequence_ea_9a, tmp498, tmp499;
		BitBlock cc_range_a681_a697_3, sequence_ea_9a_adv, tmp500, byte_9c;
		BitBlock sequence_ea_9c, tmp501, tmp502, tmp503, tmp504, tmp505, tmp506;
		BitBlock tmp507, tmp508, tmp509, tmp510, tmp511, tmp512, tmp513, tmp514;
		BitBlock tmp515, tmp516, cc_range_a723_a73f_3, sequence_ea_9c_adv, tmp517;
		BitBlock byte_9d, sequence_ea_9d, tmp518, tmp519, tmp520, tmp521, tmp522;
		BitBlock tmp523, tmp524, tmp525, tmp526, tmp527, tmp528, tmp529, tmp530;
		BitBlock tmp531, tmp532, tmp533, tmp534, cc_range_a741_a77f_3;
		BitBlock sequence_ea_9d_adv, tmp535, byte_9e, sequence_ea_9e, tmp536, tmp537;
		BitBlock tmp538, tmp539, tmp540, tmp541, tmp542, tmp543, tmp544;
		BitBlock cc_range_a781_a7a9_3, sequence_ea_9e_adv, tmp545, byte_9f;
		BitBlock sequence_ea_9f, sequence_ea_9f_adv, tmp546, byte_ef, byte_ac, tmp547;
		BitBlock sequence_ef_ac, byte_ef_adv, tmp548, tmp549, cc_range_fb00_fb13_3;
		BitBlock sequence_ef_ac_adv, tmp550, sequence_ef_bd, byte_range_81_9a;
		BitBlock sequence_ef_bd_adv, tmp551, tmp552, byte_f0, byte_90, tmp553;
		BitBlock sequence_f0_90, byte_f0_adv, tmp554, sequence_f0_90_90;
		BitBlock sequence_f0_90_adv, byte_range_a8_bf, sequence_f0_90_90_adv, tmp555;
		BitBlock byte_91, sequence_f0_90_91, byte_range_80_8f, sequence_f0_90_91_adv;
		BitBlock tmp556, sequence_f0_9d, tmp557, sequence_f0_9d_90, sequence_f0_9d_adv;
		BitBlock tmp558, tmp559, tmp560, tmp561, byte_range_9a_b3;
		BitBlock sequence_f0_9d_90_adv, tmp562, sequence_f0_9d_91, tmp563, tmp564;
		BitBlock tmp565, tmp566, tmp567, tmp568, tmp569, cc_range_1d44e_1d456_4;
		BitBlock sequence_f0_9d_91_adv, tmp570, byte_92, sequence_f0_9d_92, tmp571;
		BitBlock tmp572, tmp573, tmp574, tmp575, tmp576, tmp577, tmp578;
		BitBlock cc_range_1d482_1d4bd_4, sequence_f0_9d_92_adv, tmp579, byte_93;
		BitBlock sequence_f0_9d_93, tmp580, tmp581, tmp582, tmp583;
		BitBlock cc_range_1d4c0_1d4ea_4, sequence_f0_9d_93_adv, tmp584, byte_94;
		BitBlock sequence_f0_9d_94, tmp585, tmp586, tmp587, tmp588, tmp589;
		BitBlock cc_range_1d500_1d51e_4, sequence_f0_9d_94_adv, tmp590, byte_95;
		BitBlock sequence_f0_9d_95, tmp591, tmp592, tmp593, byte_range_92_ab;
		BitBlock sequence_f0_9d_95_adv, tmp594, byte_96, sequence_f0_9d_96, tmp595;
		BitBlock tmp596, cc_range_1d586_1d5ba_4, sequence_f0_9d_96_adv, tmp597;
		BitBlock byte_97, sequence_f0_9d_97, tmp598, cc_range_1d5c0_1d5ee_4;
		BitBlock sequence_f0_9d_97_adv, tmp599, byte_98, sequence_f0_9d_98, tmp600;
		BitBlock tmp601, cc_range_1d600_1d622_4, sequence_f0_9d_98_adv, tmp602;
		BitBlock sequence_f0_9d_99, tmp603, byte_range_96_af, sequence_f0_9d_99_adv;
		BitBlock tmp604, sequence_f0_9d_9a, tmp605, tmp606, byte_range_8a_a5;
		BitBlock sequence_f0_9d_9a_adv, tmp607, byte_9b, sequence_f0_9d_9b, tmp608;
		BitBlock tmp609, tmp610, tmp611, tmp612, tmp613, tmp614, tmp615;
		BitBlock cc_range_1d6c2_1d6fc_4, sequence_f0_9d_9b_adv, tmp616;
		BitBlock sequence_f0_9d_9c, tmp617, tmp618, tmp619, tmp620;
		BitBlock cc_range_1d700_1d736_4, sequence_f0_9d_9c_adv, tmp621;
		BitBlock sequence_f0_9d_9d, tmp622, tmp623, cc_range_1d740_1d770_4;
		BitBlock sequence_f0_9d_9d_adv, tmp624, sequence_f0_9d_9e, tmp625, tmp626;
		BitBlock tmp627, tmp628, tmp629, cc_range_1d780_1d7aa_4, sequence_f0_9d_9e_adv;
		BitBlock tmp630, sequence_f0_9d_9f, tmp631, tmp632, tmp633, tmp634, tmp635;
		BitBlock cc_range_1d7c0_1d7cb_4, sequence_f0_9d_9f_adv, tmp636;




        struct_Ll.cc = simd<1>::constant<0>();
        tmp1 = simd_andc(basis_bits.bit_1, basis_bits.bit_0);
        tmp2 = simd_and(tmp1, basis_bits.bit_2);
        tmp3 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp4 = simd_or(basis_bits.bit_5, tmp3);
        tmp5 = simd_and(basis_bits.bit_4, tmp4);
        tmp6 = simd_not(tmp5);
        tmp7 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp8 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp9 = simd_or(tmp7, tmp8);
        tmp10 = simd_or(simd_and(basis_bits.bit_3, tmp6), simd_andc(tmp9, basis_bits.bit_3));
        byte_range_61_7a = simd_and(tmp2, tmp10);
        struct_Ll.cc = simd_or(struct_Ll.cc, byte_range_61_7a);
        tmp11 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp12 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp13 = simd_andc(tmp11, tmp12);
        tmp14 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp15 = simd_andc(tmp14, tmp7);
        byte_c2 = simd_and(tmp13, tmp15);
        tmp16 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp17 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp18 = simd_and(tmp16, tmp17);
        tmp19 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp20 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp21 = simd_and(tmp19, tmp20);
        byte_b5 = simd_and(tmp18, tmp21);
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(byte_c2, carryQ.get_carry_in(0), byte_c2_adv));
        tmp22 = simd_and(byte_c2_adv, byte_b5);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp22);
        tmp23 = simd_andc(tmp3, tmp7);
        byte_c3 = simd_and(tmp13, tmp23);
        tmp24 = simd_and(basis_bits.bit_5, tmp3);
        tmp25 = simd_or(basis_bits.bit_4, tmp24);
        tmp26 = simd_and(basis_bits.bit_3, tmp25);
        tmp27 = simd_not(tmp26);
        tmp28 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp29 = simd_and(tmp28, tmp3);
        tmp30 = simd_and(basis_bits.bit_3, tmp29);
        tmp31 = simd_or(simd_and(basis_bits.bit_2, tmp27), simd_andc(tmp30, basis_bits.bit_2));
        tmp32 = simd_and(tmp16, tmp31);
        tmp33 = simd_and(tmp18, basis_bits.bit_4);
        cc_range_df_f8_2 = simd_or(tmp32, tmp33);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(byte_c3, carryQ.get_carry_in(1), byte_c3_adv));
        tmp34 = simd_and(byte_c3_adv, cc_range_df_f8_2);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp34);
        tmp35 = simd_andc(tmp19, tmp8);
        byte_c4 = simd_and(tmp13, tmp35);
        tmp36 = simd_andc(tmp16, tmp12);
        tmp37 = simd_andc(basis_bits.bit_7, tmp7);
        tmp38 = simd_or(tmp37, tmp21);
        tmp39 = simd_and(tmp19, tmp3);
        tmp40 = simd_or(tmp38, tmp39);
        tmp41 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp42 = simd_and(tmp41, tmp20);
        tmp43 = simd_or(tmp40, tmp42);
        tmp44 = simd_and(tmp41, tmp3);
        tmp45 = simd_or(tmp43, tmp44);
        tmp46 = simd_and(tmp28, tmp20);
        tmp47 = simd_or(tmp45, tmp46);
        tmp48 = simd_or(tmp47, tmp29);
        tmp49 = simd_and(tmp36, tmp48);
        tmp50 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp51 = simd_and(tmp16, tmp50);
        tmp52 = simd_andc(tmp20, tmp7);
        tmp53 = simd_and(tmp51, tmp52);
        tmp54 = simd_or(tmp49, tmp53);
        tmp55 = simd_and(tmp51, tmp23);
        tmp56 = simd_or(tmp54, tmp55);
        tmp57 = simd_and(tmp51, tmp21);
        tmp58 = simd_or(tmp56, tmp57);
        tmp59 = simd_and(tmp51, tmp39);
        tmp60 = simd_or(tmp58, tmp59);
        tmp61 = simd_and(tmp51, tmp42);
        tmp62 = simd_or(tmp60, tmp61);
        tmp63 = simd_and(tmp51, tmp44);
        tmp64 = simd_or(tmp62, tmp63);
        tmp65 = simd_and(tmp51, tmp46);
        tmp66 = simd_or(tmp64, tmp65);
        tmp67 = simd_and(tmp51, tmp29);
        tmp68 = simd_or(tmp66, tmp67);
        tmp69 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp70 = simd_and(tmp16, tmp69);
        tmp71 = simd_and(tmp70, tmp52);
        tmp72 = simd_or(tmp68, tmp71);
        tmp73 = simd_and(tmp70, tmp23);
        tmp74 = simd_or(tmp72, tmp73);
        tmp75 = simd_and(tmp70, tmp21);
        tmp76 = simd_or(tmp74, tmp75);
        tmp77 = simd_and(tmp70, tmp39);
        tmp78 = simd_or(tmp76, tmp77);
        tmp79 = simd_and(tmp70, tmp42);
        tmp80 = simd_or(tmp78, tmp79);
        tmp81 = simd_and(tmp70, tmp44);
        tmp82 = simd_or(tmp80, tmp81);
        tmp83 = simd_and(tmp70, tmp46);
        tmp84 = simd_or(tmp82, tmp83);
        tmp85 = simd_and(tmp70, tmp29);
        tmp86 = simd_or(tmp84, tmp85);
        tmp87 = simd_and(tmp18, tmp52);
        tmp88 = simd_or(tmp86, tmp87);
        tmp89 = simd_and(tmp18, tmp23);
        tmp90 = simd_or(tmp88, tmp89);
        tmp91 = simd_or(tmp90, byte_b5);
        tmp92 = simd_or(basis_bits.bit_5, tmp8);
        tmp93 = simd_not(tmp92);
        tmp94 = simd_or(simd_and(basis_bits.bit_4, tmp93), simd_andc(tmp24, basis_bits.bit_4));
        tmp95 = simd_and(tmp18, tmp94);
        tmp96 = simd_or(tmp91, tmp95);
        tmp97 = simd_and(tmp41, tmp14);
        tmp98 = simd_and(tmp18, tmp97);
        tmp99 = simd_or(tmp96, tmp98);
        tmp100 = simd_andc(tmp28, tmp8);
        tmp101 = simd_and(tmp18, tmp100);
        tmp102 = simd_or(tmp99, tmp101);
        tmp103 = simd_and(tmp28, tmp14);
        tmp104 = simd_and(tmp18, tmp103);
        cc_range_101_13e_2 = simd_or(tmp102, tmp104);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(byte_c4, carryQ.get_carry_in(2), byte_c4_adv));
        tmp105 = simd_and(byte_c4_adv, cc_range_101_13e_2);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp105);
        byte_c5 = simd_and(tmp13, tmp21);
        tmp106 = simd_andc(tmp9, tmp15);
        tmp107 = simd_andc(tmp106, tmp35);
        tmp108 = simd_and(tmp19, tmp14);
        tmp109 = simd_andc(tmp107, tmp108);
        tmp110 = simd_andc(tmp41, basis_bits.bit_6);
        tmp111 = simd_andc(tmp109, tmp110);
        tmp112 = simd_andc(tmp111, tmp44);
        tmp113 = simd_andc(tmp112, tmp46);
        tmp114 = simd_andc(tmp113, tmp29);
        tmp115 = simd_andc(tmp36, tmp114);
        tmp116 = simd_or(tmp115, tmp53);
        tmp117 = simd_or(tmp116, tmp55);
        tmp118 = simd_or(tmp117, tmp57);
        tmp119 = simd_or(tmp118, tmp59);
        tmp120 = simd_or(tmp119, tmp61);
        tmp121 = simd_or(tmp120, tmp63);
        tmp122 = simd_or(tmp121, tmp65);
        tmp123 = simd_or(tmp122, tmp67);
        tmp124 = simd_or(tmp123, tmp71);
        tmp125 = simd_or(tmp124, tmp73);
        tmp126 = simd_or(tmp125, tmp75);
        tmp127 = simd_or(tmp126, tmp77);
        tmp128 = simd_or(tmp127, tmp79);
        tmp129 = simd_or(tmp128, tmp81);
        tmp130 = simd_or(tmp129, tmp83);
        tmp131 = simd_or(tmp130, tmp85);
        tmp132 = simd_or(tmp131, tmp87);
        tmp133 = simd_or(tmp132, tmp89);
        tmp134 = simd_or(tmp133, byte_b5);
        tmp135 = simd_and(tmp18, tmp39);
        tmp136 = simd_or(tmp134, tmp135);
        tmp137 = simd_or(tmp136, tmp98);
        tmp138 = simd_or(tmp137, tmp101);
        tmp139 = simd_and(tmp28, basis_bits.bit_6);
        tmp140 = simd_and(tmp18, tmp139);
        cc_range_140_17e_2 = simd_or(tmp138, tmp140);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(byte_c5, carryQ.get_carry_in(3), byte_c5_adv));
        tmp141 = simd_and(byte_c5_adv, cc_range_140_17e_2);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp141);
        byte_c6 = simd_and(tmp13, tmp108);
        tmp142 = simd_andc(tmp9, tmp23);
        tmp143 = simd_andc(tmp142, tmp21);
        tmp144 = simd_andc(tmp41, tmp8);
        tmp145 = simd_andc(tmp143, tmp144);
        tmp146 = simd_andc(tmp28, basis_bits.bit_6);
        tmp147 = simd_andc(tmp145, tmp146);
        tmp148 = simd_andc(tmp36, tmp147);
        tmp149 = simd_and(tmp51, tmp15);
        tmp150 = simd_or(tmp148, tmp149);
        tmp151 = simd_or(tmp150, tmp57);
        tmp152 = simd_and(tmp51, tmp41);
        tmp153 = simd_and(tmp152, tmp8);
        tmp154 = simd_or(tmp151, tmp153);
        tmp155 = simd_and(tmp51, tmp103);
        tmp156 = simd_or(tmp154, tmp155);
        tmp157 = simd_or(tmp156, tmp71);
        tmp158 = simd_or(tmp157, tmp73);
        tmp159 = simd_or(tmp158, tmp75);
        tmp160 = simd_and(tmp70, tmp144);
        tmp161 = simd_or(tmp159, tmp160);
        tmp162 = simd_and(tmp41, basis_bits.bit_6);
        tmp163 = simd_and(tmp70, tmp162);
        tmp164 = simd_or(tmp161, tmp163);
        tmp165 = simd_or(tmp164, tmp83);
        tmp166 = simd_andc(tmp18, tmp9);
        tmp167 = simd_or(tmp165, tmp166);
        tmp168 = simd_and(tmp18, tmp35);
        tmp169 = simd_or(tmp167, tmp168);
        tmp170 = simd_and(tmp18, tmp108);
        tmp171 = simd_or(tmp169, tmp170);
        tmp172 = simd_and(tmp18, tmp41);
        tmp173 = simd_not(basis_bits.bit_7);
        tmp174 = simd_or(simd_and(basis_bits.bit_6, tmp173), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
        tmp175 = simd_and(tmp172, tmp174);
        tmp176 = simd_or(tmp171, tmp175);
        tmp177 = simd_and(tmp18, tmp28);
        tmp178 = simd_and(tmp177, tmp8);
        cc_range_180_1bd_2 = simd_or(tmp176, tmp178);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(byte_c6, carryQ.get_carry_in(4), byte_c6_adv));
        tmp179 = simd_and(byte_c6_adv, cc_range_180_1bd_2);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp179);
        byte_c7 = simd_and(tmp13, tmp39);
        tmp180 = simd_or(tmp108, tmp42);
        tmp181 = simd_or(tmp180, tmp100);
        tmp182 = simd_or(tmp181, tmp103);
        tmp183 = simd_and(tmp36, tmp182);
        tmp184 = simd_andc(tmp51, tmp9);
        tmp185 = simd_or(tmp183, tmp184);
        tmp186 = simd_or(tmp185, tmp149);
        tmp187 = simd_and(tmp51, tmp35);
        tmp188 = simd_or(tmp186, tmp187);
        tmp189 = simd_and(tmp51, tmp108);
        tmp190 = simd_or(tmp188, tmp189);
        tmp191 = simd_and(tmp51, tmp144);
        tmp192 = simd_or(tmp190, tmp191);
        tmp193 = simd_and(tmp51, tmp97);
        tmp194 = simd_or(tmp192, tmp193);
        tmp195 = simd_and(tmp51, tmp146);
        tmp196 = simd_or(tmp194, tmp195);
        tmp197 = simd_or(tmp196, tmp67);
        tmp198 = simd_or(tmp197, tmp71);
        tmp199 = simd_or(tmp198, tmp73);
        tmp200 = simd_or(tmp199, tmp75);
        tmp201 = simd_or(tmp200, tmp77);
        tmp202 = simd_or(tmp201, tmp79);
        tmp203 = simd_or(tmp202, tmp81);
        tmp204 = simd_or(tmp203, tmp83);
        tmp205 = simd_and(tmp16, basis_bits.bit_2);
        tmp206 = simd_not(tmp9);
        tmp207 = simd_or(simd_and(basis_bits.bit_3, tmp206), simd_andc(tmp29, basis_bits.bit_3));
        tmp208 = simd_and(tmp205, tmp207);
        tmp209 = simd_or(tmp204, tmp208);
        tmp210 = simd_or(tmp209, tmp89);
        tmp211 = simd_or(tmp210, byte_b5);
        tmp212 = simd_and(tmp18, tmp42);
        tmp213 = simd_or(tmp211, tmp212);
        tmp214 = simd_and(tmp18, tmp44);
        tmp215 = simd_or(tmp213, tmp214);
        tmp216 = simd_and(tmp18, tmp46);
        tmp217 = simd_or(tmp215, tmp216);
        tmp218 = simd_and(tmp18, tmp29);
        cc_range_1c6_1ff_2 = simd_or(tmp217, tmp218);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(byte_c7, carryQ.get_carry_in(5), byte_c7_adv));
        tmp219 = simd_and(byte_c7_adv, cc_range_1c6_1ff_2);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp219);
        byte_c8 = simd_and(tmp13, tmp144);
        tmp220 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
        tmp221 = simd_not(tmp220);
        tmp222 = simd_or(simd_and(basis_bits.bit_4, tmp221), simd_andc(tmp4, basis_bits.bit_4));
        tmp223 = simd_and(tmp18, tmp222);
        tmp224 = simd_or(tmp88, tmp223);
        tmp225 = simd_or(tmp224, tmp101);
        cc_range_201_23f_2 = simd_or(tmp225, tmp218);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(byte_c8, carryQ.get_carry_in(6), byte_c8_adv));
        tmp226 = simd_and(byte_c8_adv, cc_range_201_23f_2);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp226);
        byte_c9 = simd_and(tmp13, tmp42);
        tmp227 = simd_andc(tmp106, tmp39);
        tmp228 = simd_andc(tmp227, tmp42);
        tmp229 = simd_andc(tmp228, tmp44);
        tmp230 = simd_andc(tmp229, tmp46);
        tmp231 = simd_andc(tmp36, tmp230);
        tmp232 = simd_or(basis_bits.bit_3, tmp29);
        tmp233 = simd_or(basis_bits.bit_2, tmp232);
        tmp234 = simd_and(tmp16, tmp233);
        cc_range_240_24f_2 = simd_or(tmp231, tmp234);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(byte_c9, carryQ.get_carry_in(7), byte_c9_adv));
        tmp235 = simd_and(byte_c9_adv, cc_range_240_24f_2);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp235);
        byte_ca = simd_and(tmp13, tmp97);
        tmp236 = simd_andc(tmp16, basis_bits.bit_2);
        tmp237 = simd_and(basis_bits.bit_3, tmp7);
        tmp238 = simd_andc(tmp236, tmp237);
        tmp239 = simd_not(basis_bits.bit_3);
        tmp240 = simd_and(basis_bits.bit_5, tmp8);
        tmp241 = simd_or(basis_bits.bit_4, tmp240);
        tmp242 = simd_and(basis_bits.bit_3, tmp241);
        tmp243 = simd_or(simd_and(basis_bits.bit_2, tmp239), simd_andc(tmp242, basis_bits.bit_2));
        tmp244 = simd_and(tmp16, tmp243);
        cc_range_280_295_2 = simd_or(tmp238, tmp244);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(byte_ca, carryQ.get_carry_in(8), byte_ca_adv));
        tmp245 = simd_and(byte_ca_adv, cc_range_280_295_2);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp245);
        byte_cd = simd_and(tmp13, tmp46);
        tmp246 = simd_or(tmp37, tmp39);
        tmp247 = simd_and(tmp18, tmp246);
        tmp248 = simd_not(basis_bits.bit_6);
        tmp249 = simd_or(simd_and(basis_bits.bit_5, tmp248), simd_andc(tmp3, basis_bits.bit_5));
        tmp250 = simd_and(tmp33, tmp249);
        cc_range_371_37b_2 = simd_or(tmp247, tmp250);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(byte_cd, carryQ.get_carry_in(9), byte_cd_adv));
        tmp251 = simd_and(byte_cd_adv, cc_range_371_37b_2);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp251);
        byte_ce = simd_and(tmp13, tmp103);
        tmp252 = simd_or(basis_bits.bit_3, tmp28);
        tmp253 = simd_and(tmp205, tmp252);
        cc_range_390_3ac_2 = simd_or(tmp184, tmp253);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(byte_ce, carryQ.get_carry_in(10), byte_ce_adv));
        tmp254 = simd_and(byte_ce_adv, cc_range_390_3ac_2);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp254);
        byte_cf = simd_and(tmp13, tmp29);
        tmp255 = simd_and(basis_bits.bit_4, tmp24);
        tmp256 = simd_andc(tmp36, tmp255);
        tmp257 = simd_or(tmp7, basis_bits.bit_6);
        tmp258 = simd_andc(tmp51, tmp257);
        tmp259 = simd_or(tmp256, tmp258);
        tmp260 = simd_and(tmp51, tmp19);
        tmp261 = simd_and(tmp260, tmp8);
        tmp262 = simd_or(tmp259, tmp261);
        tmp263 = simd_or(tmp262, tmp61);
        tmp264 = simd_or(tmp263, tmp63);
        tmp265 = simd_or(tmp264, tmp65);
        tmp266 = simd_or(tmp265, tmp67);
        tmp267 = simd_or(tmp266, tmp71);
        tmp268 = simd_or(tmp267, tmp73);
        tmp269 = simd_or(tmp268, tmp75);
        tmp270 = simd_or(tmp269, tmp77);
        tmp271 = simd_or(tmp270, tmp79);
        tmp272 = simd_or(tmp271, tmp81);
        tmp273 = simd_or(tmp272, tmp83);
        tmp274 = simd_not(tmp7);
        tmp275 = simd_or(simd_and(basis_bits.bit_3, tmp274), simd_andc(tmp29, basis_bits.bit_3));
        tmp276 = simd_and(tmp205, tmp275);
        tmp277 = simd_or(tmp273, tmp276);
        tmp278 = simd_or(tmp277, byte_b5);
        tmp279 = simd_and(tmp18, tmp144);
        tmp280 = simd_or(tmp278, tmp279);
        tmp281 = simd_not(tmp8);
        tmp282 = simd_or(simd_and(basis_bits.bit_5, tmp281), simd_andc(tmp3, basis_bits.bit_5));
        tmp283 = simd_and(tmp33, tmp282);
        cc_range_3c0_3fb_2 = simd_or(tmp280, tmp283);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(byte_cf, carryQ.get_carry_in(11), byte_cf_adv));
        tmp284 = simd_and(byte_cf_adv, cc_range_3c0_3fb_2);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp284);
        tmp285 = simd_and(tmp11, tmp50);
        byte_d0 = simd_andc(tmp285, tmp9);
        byte_range_b0_bf = simd_and(tmp16, tmp17);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(byte_d0, carryQ.get_carry_in(12), byte_d0_adv));
        tmp286 = simd_and(byte_d0_adv, byte_range_b0_bf);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp286);
        byte_d1 = simd_and(tmp285, tmp52);
        tmp287 = simd_or(tmp236, tmp71);
        tmp288 = simd_or(tmp287, tmp73);
        tmp289 = simd_or(tmp288, tmp75);
        tmp290 = simd_or(tmp289, tmp77);
        tmp291 = simd_or(tmp290, tmp79);
        tmp292 = simd_or(tmp291, tmp81);
        tmp293 = simd_or(tmp292, tmp83);
        tmp294 = simd_or(tmp293, tmp85);
        tmp295 = simd_and(byte_range_b0_bf, tmp52);
        tmp296 = simd_or(tmp294, tmp295);
        tmp297 = simd_and(byte_range_b0_bf, tmp23);
        tmp298 = simd_or(tmp296, tmp297);
        tmp299 = simd_and(byte_range_b0_bf, tmp21);
        tmp300 = simd_or(tmp298, tmp299);
        tmp301 = simd_and(byte_range_b0_bf, tmp39);
        tmp302 = simd_or(tmp300, tmp301);
        tmp303 = simd_and(byte_range_b0_bf, tmp42);
        tmp304 = simd_or(tmp302, tmp303);
        tmp305 = simd_and(byte_range_b0_bf, tmp44);
        tmp306 = simd_or(tmp304, tmp305);
        tmp307 = simd_and(byte_range_b0_bf, tmp46);
        tmp308 = simd_or(tmp306, tmp307);
        tmp309 = simd_and(byte_range_b0_bf, tmp29);
        cc_range_440_47f_2 = simd_or(tmp308, tmp309);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(byte_d1, carryQ.get_carry_in(13), byte_d1_adv));
        tmp310 = simd_and(byte_d1_adv, cc_range_440_47f_2);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp310);
        byte_d2 = simd_and(tmp285, tmp15);
        tmp311 = simd_or(tmp52, tmp44);
        tmp312 = simd_or(tmp311, tmp46);
        tmp313 = simd_or(tmp312, tmp29);
        tmp314 = simd_and(tmp36, tmp313);
        tmp315 = simd_or(tmp314, tmp53);
        tmp316 = simd_or(tmp315, tmp55);
        tmp317 = simd_or(tmp316, tmp57);
        tmp318 = simd_or(tmp317, tmp59);
        tmp319 = simd_or(tmp318, tmp61);
        tmp320 = simd_or(tmp319, tmp63);
        tmp321 = simd_or(tmp320, tmp65);
        tmp322 = simd_or(tmp321, tmp67);
        tmp323 = simd_or(tmp322, tmp71);
        tmp324 = simd_or(tmp323, tmp73);
        tmp325 = simd_or(tmp324, tmp75);
        tmp326 = simd_or(tmp325, tmp77);
        tmp327 = simd_or(tmp326, tmp79);
        tmp328 = simd_or(tmp327, tmp81);
        tmp329 = simd_or(tmp328, tmp83);
        tmp330 = simd_or(tmp329, tmp85);
        tmp331 = simd_or(tmp330, tmp295);
        tmp332 = simd_or(tmp331, tmp297);
        tmp333 = simd_or(tmp332, tmp299);
        tmp334 = simd_or(tmp333, tmp301);
        tmp335 = simd_or(tmp334, tmp303);
        tmp336 = simd_or(tmp335, tmp305);
        tmp337 = simd_or(tmp336, tmp307);
        cc_range_481_4bf_2 = simd_or(tmp337, tmp309);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(byte_d2, carryQ.get_carry_in(14), byte_d2_adv));
        tmp338 = simd_and(byte_d2_adv, cc_range_481_4bf_2);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp338);
        byte_d3 = simd_and(tmp285, tmp23);
        tmp339 = simd_or(tmp15, tmp35);
        tmp340 = simd_or(tmp339, tmp108);
        tmp341 = simd_or(tmp340, tmp144);
        tmp342 = simd_or(tmp341, tmp97);
        tmp343 = simd_or(tmp342, tmp100);
        tmp344 = simd_or(tmp343, tmp139);
        tmp345 = simd_and(tmp36, tmp344);
        tmp346 = simd_or(tmp345, tmp53);
        tmp347 = simd_or(tmp346, tmp55);
        tmp348 = simd_or(tmp347, tmp57);
        tmp349 = simd_or(tmp348, tmp59);
        tmp350 = simd_or(tmp349, tmp61);
        tmp351 = simd_or(tmp350, tmp63);
        tmp352 = simd_or(tmp351, tmp65);
        tmp353 = simd_or(tmp352, tmp67);
        tmp354 = simd_or(tmp353, tmp71);
        tmp355 = simd_or(tmp354, tmp73);
        tmp356 = simd_or(tmp355, tmp75);
        tmp357 = simd_or(tmp356, tmp77);
        tmp358 = simd_or(tmp357, tmp79);
        tmp359 = simd_or(tmp358, tmp81);
        tmp360 = simd_or(tmp359, tmp83);
        tmp361 = simd_or(tmp360, tmp85);
        tmp362 = simd_or(tmp361, tmp295);
        tmp363 = simd_or(tmp362, tmp297);
        tmp364 = simd_or(tmp363, tmp299);
        tmp365 = simd_or(tmp364, tmp301);
        tmp366 = simd_or(tmp365, tmp303);
        tmp367 = simd_or(tmp366, tmp305);
        tmp368 = simd_or(tmp367, tmp307);
        cc_range_4c2_4ff_2 = simd_or(tmp368, tmp309);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(byte_d3, carryQ.get_carry_in(15), byte_d3_adv));
        tmp369 = simd_and(byte_d3_adv, cc_range_4c2_4ff_2);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp369);
        byte_d4 = simd_and(tmp285, tmp35);
        tmp370 = simd_or(basis_bits.bit_3, basis_bits.bit_4);
        tmp371 = simd_and(basis_bits.bit_2, tmp370);
        tmp372 = simd_andc(tmp16, tmp371);
        cc_range_501_527_2 = simd_andc(tmp372, basis_bits.bit_7);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(byte_d4, carryQ.get_carry_in(16), byte_d4_adv));
        tmp373 = simd_and(byte_d4_adv, cc_range_501_527_2);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp373);
        byte_d5 = simd_and(tmp285, tmp21);
        tmp374 = simd_or(basis_bits.bit_3, tmp9);
        byte_range_a1_bf = simd_and(tmp205, tmp374);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(byte_d5, carryQ.get_carry_in(17), byte_d5_adv));
        tmp375 = simd_and(byte_d5_adv, byte_range_a1_bf);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp375);
        byte_d6 = simd_and(tmp285, tmp108);
        byte_range_80_87 = simd_andc(tmp36, basis_bits.bit_4);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(byte_d6, carryQ.get_carry_in(18), byte_d6_adv));
        tmp376 = simd_and(byte_d6_adv, byte_range_80_87);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp376);
        tmp377 = simd_and(tmp11, tmp69);
        byte_e1 = simd_and(tmp377, tmp52);
        byte_b4 = simd_and(byte_range_b0_bf, tmp35);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(19), tmp378));
        sequence_e1_b4 = simd_and(tmp378, byte_b4);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(20), byte_e1_adv));
        tmp379 = simd_and(basis_bits.bit_2, tmp252);
        byte_range_80_ab = simd_andc(tmp16, tmp379);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(sequence_e1_b4, carryQ.get_carry_in(21), sequence_e1_b4_adv));
        tmp380 = simd_and(sequence_e1_b4_adv, byte_range_80_ab);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp380);
        sequence_e1_b5 = simd_and(byte_e1_adv, byte_b5);
        tmp381 = simd_not(basis_bits.bit_4);
        tmp382 = simd_or(simd_and(basis_bits.bit_3, tmp381), simd_andc(tmp5, basis_bits.bit_3));
        tmp383 = simd_and(tmp205, tmp382);
        tmp384 = simd_and(byte_range_b0_bf, basis_bits.bit_4);
        tmp385 = simd_and(tmp384, tmp92);
        cc_range_1d6b_1d79_3 = simd_or(tmp383, tmp385);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(sequence_e1_b5, carryQ.get_carry_in(22), sequence_e1_b5_adv));
        tmp386 = simd_and(sequence_e1_b5_adv, cc_range_1d6b_1d79_3);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp386);
        byte_b6 = simd_and(byte_range_b0_bf, tmp108);
        sequence_e1_b6 = simd_and(byte_e1_adv, byte_b6);
        tmp387 = simd_and(basis_bits.bit_3, tmp5);
        byte_range_80_9a = simd_andc(tmp236, tmp387);
        carryQ.cq[23] = carryout2carry(pablo_blk_Advance(sequence_e1_b6, carryQ.get_carry_in(23), sequence_e1_b6_adv));
        tmp388 = simd_and(sequence_e1_b6_adv, byte_range_80_9a);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp388);
        byte_b8 = simd_and(byte_range_b0_bf, tmp144);
        sequence_e1_b8 = simd_and(byte_e1_adv, byte_b8);
        cc_range_1e01_1e3f_3 = simd_andc(tmp16, basis_bits.bit_7);
        carryQ.cq[24] = carryout2carry(pablo_blk_Advance(sequence_e1_b8, carryQ.get_carry_in(24), sequence_e1_b8_adv));
        tmp389 = simd_and(sequence_e1_b8_adv, cc_range_1e01_1e3f_3);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp389);
        byte_b9 = simd_and(byte_range_b0_bf, tmp42);
        sequence_e1_b9 = simd_and(byte_e1_adv, byte_b9);
        cc_range_1e41_1e7f_3 = simd_andc(tmp16, basis_bits.bit_7);
        carryQ.cq[25] = carryout2carry(pablo_blk_Advance(sequence_e1_b9, carryQ.get_carry_in(25), sequence_e1_b9_adv));
        tmp390 = simd_and(sequence_e1_b9_adv, cc_range_1e41_1e7f_3);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp390);
        byte_ba = simd_and(byte_range_b0_bf, tmp97);
        sequence_e1_ba = simd_and(byte_e1_adv, byte_ba);
        tmp391 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp392 = simd_not(tmp391);
        tmp393 = simd_or(simd_and(basis_bits.bit_4, tmp392), simd_andc(tmp240, basis_bits.bit_4));
        tmp394 = simd_and(tmp51, tmp393);
        tmp395 = simd_or(tmp56, tmp394);
        tmp396 = simd_or(tmp395, tmp67);
        tmp397 = simd_or(tmp396, tmp71);
        tmp398 = simd_or(tmp397, tmp73);
        tmp399 = simd_or(tmp398, tmp75);
        tmp400 = simd_or(tmp399, tmp77);
        tmp401 = simd_or(tmp400, tmp79);
        tmp402 = simd_or(tmp401, tmp81);
        tmp403 = simd_or(tmp402, tmp83);
        tmp404 = simd_or(tmp403, tmp85);
        tmp405 = simd_or(tmp404, tmp295);
        tmp406 = simd_or(tmp405, tmp297);
        tmp407 = simd_or(tmp406, tmp299);
        tmp408 = simd_or(tmp407, tmp301);
        tmp409 = simd_or(tmp408, byte_b9);
        tmp410 = simd_or(tmp409, tmp305);
        tmp411 = simd_or(tmp410, tmp307);
        cc_range_1e81_1ebf_3 = simd_or(tmp411, tmp309);
        carryQ.cq[26] = carryout2carry(pablo_blk_Advance(sequence_e1_ba, carryQ.get_carry_in(26), sequence_e1_ba_adv));
        tmp412 = simd_and(sequence_e1_ba_adv, cc_range_1e81_1ebf_3);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp412);
        byte_bb = simd_and(byte_range_b0_bf, tmp44);
        sequence_e1_bb = simd_and(byte_e1_adv, byte_bb);
        cc_range_1ec1_1eff_3 = simd_andc(tmp16, basis_bits.bit_7);
        carryQ.cq[27] = carryout2carry(pablo_blk_Advance(sequence_e1_bb, carryQ.get_carry_in(27), sequence_e1_bb_adv));
        tmp413 = simd_and(sequence_e1_bb_adv, cc_range_1ec1_1eff_3);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp413);
        byte_bc = simd_and(byte_range_b0_bf, tmp100);
        sequence_e1_bc = simd_and(byte_e1_adv, byte_bc);
        tmp414 = simd_andc(tmp51, basis_bits.bit_4);
        tmp415 = simd_andc(tmp414, tmp391);
        tmp416 = simd_or(byte_range_80_87, tmp415);
        tmp417 = simd_andc(tmp70, basis_bits.bit_4);
        tmp418 = simd_or(tmp416, tmp417);
        tmp419 = simd_andc(byte_range_b0_bf, basis_bits.bit_4);
        cc_range_1f00_1f30_3 = simd_or(tmp418, tmp419);
        carryQ.cq[28] = carryout2carry(pablo_blk_Advance(sequence_e1_bc, carryQ.get_carry_in(28), sequence_e1_bc_adv));
        tmp420 = simd_and(sequence_e1_bc_adv, cc_range_1f00_1f30_3);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp420);
        byte_bd = simd_and(byte_range_b0_bf, tmp46);
        sequence_e1_bd = simd_and(byte_e1_adv, byte_bd);
        tmp421 = simd_andc(byte_range_80_87, tmp391);
        tmp422 = simd_or(tmp421, tmp414);
        tmp423 = simd_or(tmp422, tmp417);
        tmp424 = simd_and(basis_bits.bit_4, tmp391);
        tmp425 = simd_andc(byte_range_b0_bf, tmp424);
        cc_range_1f40_1f70_3 = simd_or(tmp423, tmp425);
        carryQ.cq[29] = carryout2carry(pablo_blk_Advance(sequence_e1_bd, carryQ.get_carry_in(29), sequence_e1_bd_adv));
        tmp426 = simd_and(sequence_e1_bd_adv, cc_range_1f40_1f70_3);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp426);
        byte_be = simd_and(byte_range_b0_bf, tmp103);
        sequence_e1_be = simd_and(byte_e1_adv, byte_be);
        tmp427 = simd_andc(tmp12, tmp50);
        tmp428 = simd_andc(tmp427, tmp69);
        tmp429 = simd_andc(tmp16, tmp428);
        tmp430 = simd_andc(tmp429, basis_bits.bit_4);
        tmp431 = simd_andc(tmp419, tmp240);
        tmp432 = simd_or(tmp430, tmp431);
        tmp433 = simd_and(tmp19, basis_bits.bit_6);
        tmp434 = simd_and(byte_range_b0_bf, tmp433);
        tmp435 = simd_or(tmp432, tmp434);
        cc_range_1f80_1fbe_3 = simd_or(tmp435, byte_be);
        carryQ.cq[30] = carryout2carry(pablo_blk_Advance(sequence_e1_be, carryQ.get_carry_in(30), sequence_e1_be_adv));
        tmp436 = simd_and(sequence_e1_be_adv, cc_range_1f80_1fbe_3);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp436);
        byte_bf = simd_and(byte_range_b0_bf, tmp29);
        sequence_e1_bf = simd_and(byte_e1_adv, byte_bf);
        tmp437 = simd_or(simd_and(basis_bits.bit_5, tmp281), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        tmp438 = simd_and(byte_range_80_87, tmp437);
        tmp439 = simd_and(tmp36, tmp433);
        tmp440 = simd_or(tmp438, tmp439);
        tmp441 = simd_andc(tmp51, tmp7);
        tmp442 = simd_or(tmp440, tmp441);
        tmp443 = simd_and(tmp51, tmp433);
        tmp444 = simd_or(tmp442, tmp443);
        tmp445 = simd_or(tmp444, tmp417);
        tmp446 = simd_and(tmp419, tmp437);
        tmp447 = simd_or(tmp445, tmp446);
        cc_range_1fc2_1ff6_3 = simd_or(tmp447, tmp434);
        carryQ.cq[31] = carryout2carry(pablo_blk_Advance(sequence_e1_bf, carryQ.get_carry_in(31), sequence_e1_bf_adv));
        tmp448 = simd_and(sequence_e1_bf_adv, cc_range_1fc2_1ff6_3);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp448);
        byte_e2 = simd_and(tmp377, tmp15);
        byte_84 = simd_and(tmp36, tmp35);
        carryQ.cq[32] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(32), tmp449));
        sequence_e2_84 = simd_and(tmp449, byte_84);
        carryQ.cq[33] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(33), byte_e2_adv));
        tmp450 = simd_or(tmp97, tmp139);
        tmp451 = simd_and(tmp36, tmp450);
        tmp452 = simd_or(tmp451, tmp55);
        tmp453 = simd_or(tmp452, tmp85);
        tmp454 = simd_or(tmp453, byte_b4);
        tmp455 = simd_or(tmp454, byte_b9);
        tmp456 = simd_and(byte_range_b0_bf, tmp146);
        cc_range_210a_213c_3 = simd_or(tmp455, tmp456);
        carryQ.cq[34] = carryout2carry(pablo_blk_Advance(sequence_e2_84, carryQ.get_carry_in(34), sequence_e2_84_adv));
        tmp457 = simd_and(sequence_e2_84_adv, cc_range_210a_213c_3);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp457);
        byte_85 = simd_and(tmp36, tmp21);
        sequence_e2_85 = simd_and(byte_e2_adv, byte_85);
        tmp458 = simd_or(simd_and(basis_bits.bit_4, tmp221), simd_andc(tmp391, basis_bits.bit_4));
        tmp459 = simd_or(tmp458, tmp103);
        cc_range_2146_214e_3 = simd_and(tmp36, tmp459);
        carryQ.cq[35] = carryout2carry(pablo_blk_Advance(sequence_e2_85, carryQ.get_carry_in(35), sequence_e2_85_adv));
        tmp460 = simd_and(sequence_e2_85_adv, cc_range_2146_214e_3);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp460);
        byte_86 = simd_and(tmp36, tmp108);
        sequence_e2_86 = simd_and(byte_e2_adv, byte_86);
        carryQ.cq[36] = carryout2carry(pablo_blk_Advance(sequence_e2_86, carryQ.get_carry_in(36), sequence_e2_86_adv));
        tmp461 = simd_and(sequence_e2_86_adv, byte_84);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp461);
        byte_b0 = simd_andc(byte_range_b0_bf, tmp9);
        sequence_e2_b0 = simd_and(byte_e2_adv, byte_b0);
        carryQ.cq[37] = carryout2carry(pablo_blk_Advance(sequence_e2_b0, carryQ.get_carry_in(37), sequence_e2_b0_adv));
        tmp462 = simd_and(sequence_e2_b0_adv, byte_range_b0_bf);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp462);
        byte_b1 = simd_and(byte_range_b0_bf, tmp52);
        sequence_e2_b1 = simd_and(byte_e2_adv, byte_b1);
        tmp463 = simd_andc(tmp236, tmp30);
        tmp464 = simd_or(tmp463, tmp71);
        tmp465 = simd_and(tmp70, tmp19);
        tmp466 = simd_and(tmp465, tmp174);
        tmp467 = simd_or(tmp464, tmp466);
        tmp468 = simd_or(tmp467, tmp160);
        tmp469 = simd_and(tmp70, tmp97);
        tmp470 = simd_or(tmp468, tmp469);
        tmp471 = simd_and(tmp70, tmp100);
        tmp472 = simd_or(tmp470, tmp471);
        tmp473 = simd_or(tmp472, byte_b1);
        tmp474 = simd_and(tmp419, tmp282);
        tmp475 = simd_or(tmp473, tmp474);
        tmp476 = simd_not(basis_bits.bit_5);
        tmp477 = simd_or(simd_and(basis_bits.bit_4, tmp476), simd_andc(tmp391, basis_bits.bit_4));
        tmp478 = simd_and(byte_range_b0_bf, tmp477);
        cc_range_2c40_2c76_3 = simd_or(tmp475, tmp478);
        carryQ.cq[38] = carryout2carry(pablo_blk_Advance(sequence_e2_b1, carryQ.get_carry_in(38), sequence_e2_b1_adv));
        tmp479 = simd_and(sequence_e2_b1_adv, cc_range_2c40_2c76_3);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp479);
        byte_b2 = simd_and(byte_range_b0_bf, tmp15);
        sequence_e2_b2 = simd_and(byte_e2_adv, byte_b2);
        cc_range_2c81_2cbf_3 = simd_andc(tmp16, basis_bits.bit_7);
        carryQ.cq[39] = carryout2carry(pablo_blk_Advance(sequence_e2_b2, carryQ.get_carry_in(39), sequence_e2_b2_adv));
        tmp480 = simd_and(sequence_e2_b2_adv, cc_range_2c81_2cbf_3);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp480);
        byte_b3 = simd_and(byte_range_b0_bf, tmp23);
        sequence_e2_b3 = simd_and(byte_e2_adv, byte_b3);
        tmp481 = simd_and(tmp417, tmp282);
        tmp482 = simd_or(tmp72, tmp481);
        tmp483 = simd_or(tmp482, tmp471);
        tmp484 = simd_and(tmp70, tmp103);
        tmp485 = simd_or(tmp483, tmp484);
        cc_range_2cc1_2cf3_3 = simd_or(tmp485, byte_b3);
        carryQ.cq[40] = carryout2carry(pablo_blk_Advance(sequence_e2_b3, carryQ.get_carry_in(40), sequence_e2_b3_adv));
        tmp486 = simd_and(sequence_e2_b3_adv, cc_range_2cc1_2cf3_3);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp486);
        sequence_e2_b4 = simd_and(byte_e2_adv, byte_b4);
        tmp487 = simd_or(basis_bits.bit_4, tmp391);
        tmp488 = simd_or(basis_bits.bit_3, tmp487);
        tmp489 = simd_and(basis_bits.bit_2, tmp488);
        tmp490 = simd_andc(tmp16, tmp489);
        tmp491 = simd_or(tmp490, tmp77);
        cc_range_2d00_2d2d_3 = simd_or(tmp491, tmp83);
        carryQ.cq[41] = carryout2carry(pablo_blk_Advance(sequence_e2_b4, carryQ.get_carry_in(41), sequence_e2_b4_adv));
        tmp492 = simd_and(sequence_e2_b4_adv, cc_range_2d00_2d2d_3);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp492);
        byte_ea = simd_and(tmp377, tmp97);
        byte_99 = simd_and(tmp51, tmp42);
        carryQ.cq[42] = carryout2carry(pablo_blk_Advance(byte_ea, carryQ.get_carry_in(42), tmp493));
        sequence_ea_99 = simd_and(tmp493, byte_99);
        carryQ.cq[43] = carryout2carry(pablo_blk_Advance(byte_ea, carryQ.get_carry_in(43), byte_ea_adv));
        tmp494 = simd_or(basis_bits.bit_3, tmp139);
        tmp495 = simd_and(basis_bits.bit_2, tmp494);
        tmp496 = simd_andc(tmp16, tmp495);
        cc_range_a641_a66d_3 = simd_andc(tmp496, basis_bits.bit_7);
        carryQ.cq[44] = carryout2carry(pablo_blk_Advance(sequence_ea_99, carryQ.get_carry_in(44), sequence_ea_99_adv));
        tmp497 = simd_and(sequence_ea_99_adv, cc_range_a641_a66d_3);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp497);
        byte_9a = simd_and(tmp51, tmp97);
        sequence_ea_9a = simd_and(byte_ea_adv, byte_9a);
        tmp498 = simd_and(basis_bits.bit_3, basis_bits.bit_4);
        tmp499 = simd_andc(tmp236, tmp498);
        cc_range_a681_a697_3 = simd_andc(tmp499, basis_bits.bit_7);
        carryQ.cq[45] = carryout2carry(pablo_blk_Advance(sequence_ea_9a, carryQ.get_carry_in(45), sequence_ea_9a_adv));
        tmp500 = simd_and(sequence_ea_9a_adv, cc_range_a681_a697_3);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp500);
        byte_9c = simd_and(tmp51, tmp100);
        sequence_ea_9c = simd_and(byte_ea_adv, byte_9c);
        tmp501 = simd_or(tmp23, tmp21);
        tmp502 = simd_or(tmp501, tmp39);
        tmp503 = simd_or(tmp502, tmp42);
        tmp504 = simd_or(tmp503, tmp44);
        tmp505 = simd_or(tmp504, tmp46);
        tmp506 = simd_and(tmp70, tmp505);
        tmp507 = simd_not(tmp257);
        tmp508 = simd_or(simd_and(basis_bits.bit_3, tmp507), simd_andc(tmp29, basis_bits.bit_3));
        tmp509 = simd_and(tmp205, tmp508);
        tmp510 = simd_or(tmp506, tmp509);
        tmp511 = simd_or(tmp510, byte_b3);
        tmp512 = simd_or(tmp511, tmp299);
        tmp513 = simd_or(tmp512, tmp301);
        tmp514 = simd_or(tmp513, byte_b9);
        tmp515 = simd_or(tmp514, byte_bb);
        tmp516 = simd_or(tmp515, byte_bd);
        cc_range_a723_a73f_3 = simd_or(tmp516, byte_bf);
        carryQ.cq[46] = carryout2carry(pablo_blk_Advance(sequence_ea_9c, carryQ.get_carry_in(46), sequence_ea_9c_adv));
        tmp517 = simd_and(sequence_ea_9c_adv, cc_range_a723_a73f_3);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp517);
        byte_9d = simd_and(tmp51, tmp46);
        sequence_ea_9d = simd_and(byte_ea_adv, byte_9d);
        tmp518 = simd_or(tmp60, byte_99);
        tmp519 = simd_or(tmp518, tmp63);
        tmp520 = simd_or(tmp519, byte_9d);
        tmp521 = simd_or(tmp520, tmp67);
        tmp522 = simd_or(tmp521, tmp71);
        tmp523 = simd_or(tmp522, tmp73);
        tmp524 = simd_or(tmp523, tmp75);
        tmp525 = simd_or(tmp524, tmp77);
        tmp526 = simd_or(tmp525, tmp79);
        tmp527 = simd_or(tmp526, tmp81);
        tmp528 = simd_or(tmp527, tmp83);
        tmp529 = simd_or(tmp528, tmp85);
        tmp530 = simd_or(simd_and(basis_bits.bit_4, tmp93), simd_andc(tmp92, basis_bits.bit_4));
        tmp531 = simd_and(byte_range_b0_bf, tmp530);
        tmp532 = simd_or(tmp529, tmp531);
        tmp533 = simd_or(tmp532, byte_ba);
        tmp534 = simd_or(tmp533, byte_bc);
        cc_range_a741_a77f_3 = simd_or(tmp534, byte_bf);
        carryQ.cq[47] = carryout2carry(pablo_blk_Advance(sequence_ea_9d, carryQ.get_carry_in(47), sequence_ea_9d_adv));
        tmp535 = simd_and(sequence_ea_9d_adv, cc_range_a741_a77f_3);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp535);
        byte_9e = simd_and(tmp51, tmp103);
        sequence_ea_9e = simd_and(byte_ea_adv, byte_9e);
        tmp536 = simd_or(tmp40, tmp100);
        tmp537 = simd_or(tmp536, tmp103);
        tmp538 = simd_and(tmp36, tmp537);
        tmp539 = simd_or(tmp538, tmp53);
        tmp540 = simd_or(tmp539, tmp55);
        tmp541 = simd_or(tmp540, tmp71);
        tmp542 = simd_or(tmp541, tmp73);
        tmp543 = simd_or(tmp542, tmp75);
        tmp544 = simd_or(tmp543, tmp77);
        cc_range_a781_a7a9_3 = simd_or(tmp544, tmp79);
        carryQ.cq[48] = carryout2carry(pablo_blk_Advance(sequence_ea_9e, carryQ.get_carry_in(48), sequence_ea_9e_adv));
        tmp545 = simd_and(sequence_ea_9e_adv, cc_range_a781_a7a9_3);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp545);
        byte_9f = simd_and(tmp51, tmp29);
        sequence_ea_9f = simd_and(byte_ea_adv, byte_9f);
        carryQ.cq[49] = carryout2carry(pablo_blk_Advance(sequence_ea_9f, carryQ.get_carry_in(49), sequence_ea_9f_adv));
        tmp546 = simd_and(sequence_ea_9f_adv, byte_ba);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp546);
        byte_ef = simd_and(tmp377, tmp29);
        byte_ac = simd_and(tmp70, tmp100);
        carryQ.cq[50] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(50), tmp547));
        sequence_ef_ac = simd_and(tmp547, byte_ac);
        carryQ.cq[51] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(51), byte_ef_adv));
        tmp548 = simd_andc(byte_range_80_87, tmp24);
        tmp549 = simd_and(tmp414, tmp4);
        cc_range_fb00_fb13_3 = simd_or(tmp548, tmp549);
        carryQ.cq[52] = carryout2carry(pablo_blk_Advance(sequence_ef_ac, carryQ.get_carry_in(52), sequence_ef_ac_adv));
        tmp550 = simd_and(sequence_ef_ac_adv, cc_range_fb00_fb13_3);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp550);
        sequence_ef_bd = simd_and(byte_ef_adv, byte_bd);
        byte_range_81_9a = simd_and(tmp236, tmp10);
        carryQ.cq[53] = carryout2carry(pablo_blk_Advance(sequence_ef_bd, carryQ.get_carry_in(53), sequence_ef_bd_adv));
        tmp551 = simd_and(sequence_ef_bd_adv, byte_range_81_9a);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp551);
        tmp552 = simd_and(tmp11, tmp17);
        byte_f0 = simd_andc(tmp552, tmp9);
        byte_90 = simd_andc(tmp51, tmp9);
        carryQ.cq[54] = carryout2carry(pablo_blk_Advance(byte_f0, carryQ.get_carry_in(54), tmp553));
        sequence_f0_90 = simd_and(tmp553, byte_90);
        carryQ.cq[55] = carryout2carry(pablo_blk_Advance(byte_f0, carryQ.get_carry_in(55), byte_f0_adv));
        carryQ.cq[56] = carryout2carry(pablo_blk_Advance(sequence_f0_90, carryQ.get_carry_in(56), tmp554));
        sequence_f0_90_90 = simd_and(tmp554, byte_90);
        carryQ.cq[57] = carryout2carry(pablo_blk_Advance(sequence_f0_90, carryQ.get_carry_in(57), sequence_f0_90_adv));
        byte_range_a8_bf = simd_and(tmp205, tmp370);
        carryQ.cq[58] = carryout2carry(pablo_blk_Advance(sequence_f0_90_90, carryQ.get_carry_in(58), sequence_f0_90_90_adv));
        tmp555 = simd_and(sequence_f0_90_90_adv, byte_range_a8_bf);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp555);
        byte_91 = simd_and(tmp51, tmp52);
        sequence_f0_90_91 = simd_and(sequence_f0_90_adv, byte_91);
        byte_range_80_8f = simd_andc(tmp16, tmp12);
        carryQ.cq[59] = carryout2carry(pablo_blk_Advance(sequence_f0_90_91, carryQ.get_carry_in(59), sequence_f0_90_91_adv));
        tmp556 = simd_and(sequence_f0_90_91_adv, byte_range_80_8f);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp556);
        sequence_f0_9d = simd_and(byte_f0_adv, byte_9d);
        carryQ.cq[60] = carryout2carry(pablo_blk_Advance(sequence_f0_9d, carryQ.get_carry_in(60), tmp557));
        sequence_f0_9d_90 = simd_and(tmp557, byte_90);
        carryQ.cq[61] = carryout2carry(pablo_blk_Advance(sequence_f0_9d, carryQ.get_carry_in(61), sequence_f0_9d_adv));
        tmp558 = simd_not(tmp237);
        tmp559 = simd_and(basis_bits.bit_4, tmp220);
        tmp560 = simd_and(basis_bits.bit_3, tmp559);
        tmp561 = simd_or(simd_and(basis_bits.bit_2, tmp558), simd_andc(tmp560, basis_bits.bit_2));
        byte_range_9a_b3 = simd_and(tmp16, tmp561);
        carryQ.cq[62] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_90, carryQ.get_carry_in(62), sequence_f0_9d_90_adv));
        tmp562 = simd_and(sequence_f0_9d_90_adv, byte_range_9a_b3);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp562);
        sequence_f0_9d_91 = simd_and(sequence_f0_9d_adv, byte_91);
        tmp563 = simd_not(tmp241);
        tmp564 = simd_or(simd_and(basis_bits.bit_3, tmp563), simd_andc(tmp139, basis_bits.bit_3));
        tmp565 = simd_and(tmp236, tmp564);
        tmp566 = simd_not(tmp370);
        tmp567 = simd_and(basis_bits.bit_3, tmp487);
        tmp568 = simd_or(simd_and(basis_bits.bit_2, tmp566), simd_andc(tmp567, basis_bits.bit_2));
        tmp569 = simd_and(tmp16, tmp568);
        cc_range_1d44e_1d456_4 = simd_or(tmp565, tmp569);
        carryQ.cq[63] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_91, carryQ.get_carry_in(63), sequence_f0_9d_91_adv));
        tmp570 = simd_and(sequence_f0_9d_91_adv, cc_range_1d44e_1d456_4);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp570);
        byte_92 = simd_and(tmp51, tmp15);
        sequence_f0_9d_92 = simd_and(sequence_f0_9d_adv, byte_92);
        tmp571 = simd_not(tmp28);
        tmp572 = simd_or(simd_and(basis_bits.bit_3, tmp571), simd_andc(tmp257, basis_bits.bit_3));
        tmp573 = simd_and(tmp236, tmp572);
        tmp574 = simd_and(byte_range_b0_bf, tmp458);
        tmp575 = simd_or(tmp573, tmp574);
        tmp576 = simd_or(tmp575, byte_bb);
        tmp577 = simd_and(byte_range_b0_bf, tmp28);
        tmp578 = simd_and(tmp577, tmp8);
        cc_range_1d482_1d4bd_4 = simd_or(tmp576, tmp578);
        carryQ.cq[64] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_92, carryQ.get_carry_in(64), sequence_f0_9d_92_adv));
        tmp579 = simd_and(sequence_f0_9d_92_adv, cc_range_1d482_1d4bd_4);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp579);
        byte_93 = simd_and(tmp51, tmp23);
        sequence_f0_9d_93 = simd_and(sequence_f0_9d_adv, byte_93);
        tmp580 = simd_andc(tmp7, tmp241);
        tmp581 = simd_andc(byte_range_80_8f, tmp580);
        tmp582 = simd_or(basis_bits.bit_3, tmp559);
        tmp583 = simd_and(tmp205, tmp582);
        cc_range_1d4c0_1d4ea_4 = simd_or(tmp581, tmp583);
        carryQ.cq[65] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_93, carryQ.get_carry_in(65), sequence_f0_9d_93_adv));
        tmp584 = simd_and(sequence_f0_9d_93_adv, cc_range_1d4c0_1d4ea_4);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp584);
        byte_94 = simd_and(tmp51, tmp35);
        sequence_f0_9d_94 = simd_and(sequence_f0_9d_adv, byte_94);
        tmp585 = simd_andc(byte_range_80_8f, tmp7);
        tmp586 = simd_not(tmp498);
        tmp587 = simd_and(basis_bits.bit_3, tmp139);
        tmp588 = simd_or(simd_and(basis_bits.bit_2, tmp586), simd_andc(tmp587, basis_bits.bit_2));
        tmp589 = simd_and(tmp16, tmp588);
        cc_range_1d500_1d51e_4 = simd_or(tmp585, tmp589);
        carryQ.cq[66] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_94, carryQ.get_carry_in(66), sequence_f0_9d_94_adv));
        tmp590 = simd_and(sequence_f0_9d_94_adv, cc_range_1d500_1d51e_4);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp590);
        byte_95 = simd_and(tmp51, tmp21);
        sequence_f0_9d_95 = simd_and(sequence_f0_9d_adv, byte_95);
        tmp591 = simd_not(tmp252);
        tmp592 = simd_and(basis_bits.bit_3, tmp257);
        tmp593 = simd_or(simd_and(basis_bits.bit_2, tmp591), simd_andc(tmp592, basis_bits.bit_2));
        byte_range_92_ab = simd_and(tmp16, tmp593);
        carryQ.cq[67] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_95, carryQ.get_carry_in(67), sequence_f0_9d_95_adv));
        tmp594 = simd_and(sequence_f0_9d_95_adv, byte_range_92_ab);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp594);
        byte_96 = simd_and(tmp51, tmp108);
        sequence_f0_9d_96 = simd_and(sequence_f0_9d_adv, byte_96);
        tmp595 = simd_and(tmp236, tmp488);
        tmp596 = simd_and(tmp384, tmp220);
        cc_range_1d586_1d5ba_4 = simd_or(tmp595, tmp596);
        carryQ.cq[68] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_96, carryQ.get_carry_in(68), sequence_f0_9d_96_adv));
        tmp597 = simd_and(sequence_f0_9d_96_adv, cc_range_1d586_1d5ba_4);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp597);
        byte_97 = simd_and(tmp51, tmp39);
        sequence_f0_9d_97 = simd_and(sequence_f0_9d_adv, byte_97);
        tmp598 = simd_and(tmp205, tmp494);
        cc_range_1d5c0_1d5ee_4 = simd_or(tmp238, tmp598);
        carryQ.cq[69] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_97, carryQ.get_carry_in(69), sequence_f0_9d_97_adv));
        tmp599 = simd_and(sequence_f0_9d_97_adv, cc_range_1d5c0_1d5ee_4);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp599);
        byte_98 = simd_and(tmp51, tmp144);
        sequence_f0_9d_98 = simd_and(sequence_f0_9d_adv, byte_98);
        tmp600 = simd_andc(byte_range_80_8f, basis_bits.bit_4);
        tmp601 = simd_and(tmp205, tmp572);
        cc_range_1d600_1d622_4 = simd_or(tmp600, tmp601);
        carryQ.cq[70] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_98, carryQ.get_carry_in(70), sequence_f0_9d_98_adv));
        tmp602 = simd_and(sequence_f0_9d_98_adv, cc_range_1d600_1d622_4);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp602);
        sequence_f0_9d_99 = simd_and(sequence_f0_9d_adv, byte_99);
        tmp603 = simd_or(simd_and(basis_bits.bit_2, tmp239), simd_andc(tmp567, basis_bits.bit_2));
        byte_range_96_af = simd_and(tmp16, tmp603);
        carryQ.cq[71] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_99, carryQ.get_carry_in(71), sequence_f0_9d_99_adv));
        tmp604 = simd_and(sequence_f0_9d_99_adv, byte_range_96_af);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp604);
        sequence_f0_9d_9a = simd_and(sequence_f0_9d_adv, byte_9a);
        tmp605 = simd_not(tmp488);
        tmp606 = simd_or(simd_and(basis_bits.bit_2, tmp605), simd_andc(tmp582, basis_bits.bit_2));
        byte_range_8a_a5 = simd_and(tmp16, tmp606);
        carryQ.cq[72] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_9a, carryQ.get_carry_in(72), sequence_f0_9d_9a_adv));
        tmp607 = simd_and(sequence_f0_9d_9a_adv, byte_range_8a_a5);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp607);
        byte_9b = simd_and(tmp51, tmp44);
        sequence_f0_9d_9b = simd_and(sequence_f0_9d_adv, byte_9b);
        tmp608 = simd_or(simd_and(basis_bits.bit_3, tmp6), simd_andc(tmp257, basis_bits.bit_3));
        tmp609 = simd_and(tmp236, tmp608);
        tmp610 = simd_or(basis_bits.bit_3, tmp257);
        tmp611 = simd_not(tmp610);
        tmp612 = simd_and(basis_bits.bit_3, tmp28);
        tmp613 = simd_or(simd_and(basis_bits.bit_2, tmp611), simd_andc(tmp612, basis_bits.bit_2));
        tmp614 = simd_and(tmp16, tmp613);
        tmp615 = simd_or(tmp609, tmp614);
        cc_range_1d6c2_1d6fc_4 = simd_or(tmp615, tmp577);
        carryQ.cq[73] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_9b, carryQ.get_carry_in(73), sequence_f0_9d_9b_adv));
        tmp616 = simd_and(sequence_f0_9d_9b_adv, cc_range_1d6c2_1d6fc_4);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp616);
        sequence_f0_9d_9c = simd_and(sequence_f0_9d_adv, byte_9c);
        tmp617 = simd_andc(tmp236, tmp242);
        tmp618 = simd_and(tmp51, tmp477);
        tmp619 = simd_or(tmp617, tmp618);
        tmp620 = simd_and(byte_range_b0_bf, tmp487);
        cc_range_1d700_1d736_4 = simd_or(tmp619, tmp620);
        carryQ.cq[74] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_9c, carryQ.get_carry_in(74), sequence_f0_9d_9c_adv));
        tmp621 = simd_and(sequence_f0_9d_9c_adv, cc_range_1d700_1d736_4);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp621);
        sequence_f0_9d_9d = simd_and(sequence_f0_9d_adv, byte_9d);
        tmp622 = simd_andc(byte_range_80_8f, tmp255);
        tmp623 = simd_or(tmp622, tmp415);
        cc_range_1d740_1d770_4 = simd_or(tmp623, byte_range_b0_bf);
        carryQ.cq[75] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_9d, carryQ.get_carry_in(75), sequence_f0_9d_9d_adv));
        tmp624 = simd_and(sequence_f0_9d_9d_adv, cc_range_1d740_1d770_4);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp624);
        sequence_f0_9d_9e = simd_and(sequence_f0_9d_adv, byte_9e);
        tmp625 = simd_and(basis_bits.bit_4, tmp92);
        tmp626 = simd_andc(byte_range_80_8f, tmp625);
        tmp627 = simd_and(byte_range_80_8f, basis_bits.bit_4);
        tmp628 = simd_and(tmp627, tmp220);
        tmp629 = simd_or(tmp626, tmp628);
        cc_range_1d780_1d7aa_4 = simd_or(tmp629, tmp583);
        carryQ.cq[76] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_9e, carryQ.get_carry_in(76), sequence_f0_9d_9e_adv));
        tmp630 = simd_and(sequence_f0_9d_9e_adv, cc_range_1d780_1d7aa_4);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp630);
        sequence_f0_9d_9f = simd_and(sequence_f0_9d_adv, byte_9f);
        tmp631 = simd_andc(tmp585, tmp3);
        tmp632 = simd_or(simd_and(basis_bits.bit_4, tmp221), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
        tmp633 = simd_and(byte_range_80_8f, tmp632);
        tmp634 = simd_or(tmp631, tmp633);
        tmp635 = simd_and(byte_range_80_8f, tmp44);
        cc_range_1d7c0_1d7cb_4 = simd_or(tmp634, tmp635);
        carryQ.cq[77] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_9f, carryQ.get_carry_in(77), sequence_f0_9d_9f_adv));
        tmp636 = simd_and(sequence_f0_9d_9f_adv, cc_range_1d7c0_1d7cb_4);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp636);
        carryQ.CarryQ_Adjust(78);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Ll & struct_Ll, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, tmp7, tmp8, tmp9, tmp10;
		BitBlock byte_range_61_7a, tmp11, tmp12, tmp13, tmp14, tmp15, byte_c2, tmp16;
		BitBlock tmp17, tmp18, tmp19, tmp20, tmp21, byte_b5, byte_c2_adv, tmp22, tmp23;
		BitBlock byte_c3, tmp24, tmp25, tmp26, tmp27, tmp28, tmp29, tmp30, tmp31;
		BitBlock tmp32, tmp33, cc_range_df_f8_2, byte_c3_adv, tmp34, tmp35, byte_c4;
		BitBlock tmp36, tmp37, tmp38, tmp39, tmp40, tmp41, tmp42, tmp43, tmp44, tmp45;
		BitBlock tmp46, tmp47, tmp48, tmp49, tmp50, tmp51, tmp52, tmp53, tmp54, tmp55;
		BitBlock tmp56, tmp57, tmp58, tmp59, tmp60, tmp61, tmp62, tmp63, tmp64, tmp65;
		BitBlock tmp66, tmp67, tmp68, tmp69, tmp70, tmp71, tmp72, tmp73, tmp74, tmp75;
		BitBlock tmp76, tmp77, tmp78, tmp79, tmp80, tmp81, tmp82, tmp83, tmp84, tmp85;
		BitBlock tmp86, tmp87, tmp88, tmp89, tmp90, tmp91, tmp92, tmp93, tmp94, tmp95;
		BitBlock tmp96, tmp97, tmp98, tmp99, tmp100, tmp101, tmp102, tmp103, tmp104;
		BitBlock cc_range_101_13e_2, byte_c4_adv, tmp105, byte_c5, tmp106, tmp107;
		BitBlock tmp108, tmp109, tmp110, tmp111, tmp112, tmp113, tmp114, tmp115;
		BitBlock tmp116, tmp117, tmp118, tmp119, tmp120, tmp121, tmp122, tmp123;
		BitBlock tmp124, tmp125, tmp126, tmp127, tmp128, tmp129, tmp130, tmp131;
		BitBlock tmp132, tmp133, tmp134, tmp135, tmp136, tmp137, tmp138, tmp139;
		BitBlock tmp140, cc_range_140_17e_2, byte_c5_adv, tmp141, byte_c6, tmp142;
		BitBlock tmp143, tmp144, tmp145, tmp146, tmp147, tmp148, tmp149, tmp150;
		BitBlock tmp151, tmp152, tmp153, tmp154, tmp155, tmp156, tmp157, tmp158;
		BitBlock tmp159, tmp160, tmp161, tmp162, tmp163, tmp164, tmp165, tmp166;
		BitBlock tmp167, tmp168, tmp169, tmp170, tmp171, tmp172, tmp173, tmp174;
		BitBlock tmp175, tmp176, tmp177, tmp178, cc_range_180_1bd_2, byte_c6_adv;
		BitBlock tmp179, byte_c7, tmp180, tmp181, tmp182, tmp183, tmp184, tmp185;
		BitBlock tmp186, tmp187, tmp188, tmp189, tmp190, tmp191, tmp192, tmp193;
		BitBlock tmp194, tmp195, tmp196, tmp197, tmp198, tmp199, tmp200, tmp201;
		BitBlock tmp202, tmp203, tmp204, tmp205, tmp206, tmp207, tmp208, tmp209;
		BitBlock tmp210, tmp211, tmp212, tmp213, tmp214, tmp215, tmp216, tmp217;
		BitBlock tmp218, cc_range_1c6_1ff_2, byte_c7_adv, tmp219, byte_c8, tmp220;
		BitBlock tmp221, tmp222, tmp223, tmp224, tmp225, cc_range_201_23f_2;
		BitBlock byte_c8_adv, tmp226, byte_c9, tmp227, tmp228, tmp229, tmp230, tmp231;
		BitBlock tmp232, tmp233, tmp234, cc_range_240_24f_2, byte_c9_adv, tmp235;
		BitBlock byte_ca, tmp236, tmp237, tmp238, tmp239, tmp240, tmp241, tmp242;
		BitBlock tmp243, tmp244, cc_range_280_295_2, byte_ca_adv, tmp245, byte_cd;
		BitBlock tmp246, tmp247, tmp248, tmp249, tmp250, cc_range_371_37b_2;
		BitBlock byte_cd_adv, tmp251, byte_ce, tmp252, tmp253, cc_range_390_3ac_2;
		BitBlock byte_ce_adv, tmp254, byte_cf, tmp255, tmp256, tmp257, tmp258, tmp259;
		BitBlock tmp260, tmp261, tmp262, tmp263, tmp264, tmp265, tmp266, tmp267;
		BitBlock tmp268, tmp269, tmp270, tmp271, tmp272, tmp273, tmp274, tmp275;
		BitBlock tmp276, tmp277, tmp278, tmp279, tmp280, tmp281, tmp282, tmp283;
		BitBlock cc_range_3c0_3fb_2, byte_cf_adv, tmp284, tmp285, byte_d0;
		BitBlock byte_range_b0_bf, byte_d0_adv, tmp286, byte_d1, tmp287, tmp288;
		BitBlock tmp289, tmp290, tmp291, tmp292, tmp293, tmp294, tmp295, tmp296;
		BitBlock tmp297, tmp298, tmp299, tmp300, tmp301, tmp302, tmp303, tmp304;
		BitBlock tmp305, tmp306, tmp307, tmp308, tmp309, cc_range_440_47f_2;
		BitBlock byte_d1_adv, tmp310, byte_d2, tmp311, tmp312, tmp313, tmp314, tmp315;
		BitBlock tmp316, tmp317, tmp318, tmp319, tmp320, tmp321, tmp322, tmp323;
		BitBlock tmp324, tmp325, tmp326, tmp327, tmp328, tmp329, tmp330, tmp331;
		BitBlock tmp332, tmp333, tmp334, tmp335, tmp336, tmp337, cc_range_481_4bf_2;
		BitBlock byte_d2_adv, tmp338, byte_d3, tmp339, tmp340, tmp341, tmp342, tmp343;
		BitBlock tmp344, tmp345, tmp346, tmp347, tmp348, tmp349, tmp350, tmp351;
		BitBlock tmp352, tmp353, tmp354, tmp355, tmp356, tmp357, tmp358, tmp359;
		BitBlock tmp360, tmp361, tmp362, tmp363, tmp364, tmp365, tmp366, tmp367;
		BitBlock tmp368, cc_range_4c2_4ff_2, byte_d3_adv, tmp369, byte_d4, tmp370;
		BitBlock tmp371, tmp372, cc_range_501_527_2, byte_d4_adv, tmp373, byte_d5;
		BitBlock tmp374, byte_range_a1_bf, byte_d5_adv, tmp375, byte_d6;
		BitBlock byte_range_80_87, byte_d6_adv, tmp376, tmp377, byte_e1, byte_b4;
		BitBlock tmp378, sequence_e1_b4, byte_e1_adv, tmp379, byte_range_80_ab;
		BitBlock sequence_e1_b4_adv, tmp380, sequence_e1_b5, tmp381, tmp382, tmp383;
		BitBlock tmp384, tmp385, cc_range_1d6b_1d79_3, sequence_e1_b5_adv, tmp386;
		BitBlock byte_b6, sequence_e1_b6, tmp387, byte_range_80_9a, sequence_e1_b6_adv;
		BitBlock tmp388, byte_b8, sequence_e1_b8, cc_range_1e01_1e3f_3;
		BitBlock sequence_e1_b8_adv, tmp389, byte_b9, sequence_e1_b9;
		BitBlock cc_range_1e41_1e7f_3, sequence_e1_b9_adv, tmp390, byte_ba;
		BitBlock sequence_e1_ba, tmp391, tmp392, tmp393, tmp394, tmp395, tmp396;
		BitBlock tmp397, tmp398, tmp399, tmp400, tmp401, tmp402, tmp403, tmp404;
		BitBlock tmp405, tmp406, tmp407, tmp408, tmp409, tmp410, tmp411;
		BitBlock cc_range_1e81_1ebf_3, sequence_e1_ba_adv, tmp412, byte_bb;
		BitBlock sequence_e1_bb, cc_range_1ec1_1eff_3, sequence_e1_bb_adv, tmp413;
		BitBlock byte_bc, sequence_e1_bc, tmp414, tmp415, tmp416, tmp417, tmp418;
		BitBlock tmp419, cc_range_1f00_1f30_3, sequence_e1_bc_adv, tmp420, byte_bd;
		BitBlock sequence_e1_bd, tmp421, tmp422, tmp423, tmp424, tmp425;
		BitBlock cc_range_1f40_1f70_3, sequence_e1_bd_adv, tmp426, byte_be;
		BitBlock sequence_e1_be, tmp427, tmp428, tmp429, tmp430, tmp431, tmp432;
		BitBlock tmp433, tmp434, tmp435, cc_range_1f80_1fbe_3, sequence_e1_be_adv;
		BitBlock tmp436, byte_bf, sequence_e1_bf, tmp437, tmp438, tmp439, tmp440;
		BitBlock tmp441, tmp442, tmp443, tmp444, tmp445, tmp446, tmp447;
		BitBlock cc_range_1fc2_1ff6_3, sequence_e1_bf_adv, tmp448, byte_e2, byte_84;
		BitBlock tmp449, sequence_e2_84, byte_e2_adv, tmp450, tmp451, tmp452, tmp453;
		BitBlock tmp454, tmp455, tmp456, cc_range_210a_213c_3, sequence_e2_84_adv;
		BitBlock tmp457, byte_85, sequence_e2_85, tmp458, tmp459, cc_range_2146_214e_3;
		BitBlock sequence_e2_85_adv, tmp460, byte_86, sequence_e2_86;
		BitBlock sequence_e2_86_adv, tmp461, byte_b0, sequence_e2_b0;
		BitBlock sequence_e2_b0_adv, tmp462, byte_b1, sequence_e2_b1, tmp463, tmp464;
		BitBlock tmp465, tmp466, tmp467, tmp468, tmp469, tmp470, tmp471, tmp472;
		BitBlock tmp473, tmp474, tmp475, tmp476, tmp477, tmp478, cc_range_2c40_2c76_3;
		BitBlock sequence_e2_b1_adv, tmp479, byte_b2, sequence_e2_b2;
		BitBlock cc_range_2c81_2cbf_3, sequence_e2_b2_adv, tmp480, byte_b3;
		BitBlock sequence_e2_b3, tmp481, tmp482, tmp483, tmp484, tmp485;
		BitBlock cc_range_2cc1_2cf3_3, sequence_e2_b3_adv, tmp486, sequence_e2_b4;
		BitBlock tmp487, tmp488, tmp489, tmp490, tmp491, cc_range_2d00_2d2d_3;
		BitBlock sequence_e2_b4_adv, tmp492, byte_ea, byte_99, tmp493, sequence_ea_99;
		BitBlock byte_ea_adv, tmp494, tmp495, tmp496, cc_range_a641_a66d_3;
		BitBlock sequence_ea_99_adv, tmp497, byte_9a, sequence_ea_9a, tmp498, tmp499;
		BitBlock cc_range_a681_a697_3, sequence_ea_9a_adv, tmp500, byte_9c;
		BitBlock sequence_ea_9c, tmp501, tmp502, tmp503, tmp504, tmp505, tmp506;
		BitBlock tmp507, tmp508, tmp509, tmp510, tmp511, tmp512, tmp513, tmp514;
		BitBlock tmp515, tmp516, cc_range_a723_a73f_3, sequence_ea_9c_adv, tmp517;
		BitBlock byte_9d, sequence_ea_9d, tmp518, tmp519, tmp520, tmp521, tmp522;
		BitBlock tmp523, tmp524, tmp525, tmp526, tmp527, tmp528, tmp529, tmp530;
		BitBlock tmp531, tmp532, tmp533, tmp534, cc_range_a741_a77f_3;
		BitBlock sequence_ea_9d_adv, tmp535, byte_9e, sequence_ea_9e, tmp536, tmp537;
		BitBlock tmp538, tmp539, tmp540, tmp541, tmp542, tmp543, tmp544;
		BitBlock cc_range_a781_a7a9_3, sequence_ea_9e_adv, tmp545, byte_9f;
		BitBlock sequence_ea_9f, sequence_ea_9f_adv, tmp546, byte_ef, byte_ac, tmp547;
		BitBlock sequence_ef_ac, byte_ef_adv, tmp548, tmp549, cc_range_fb00_fb13_3;
		BitBlock sequence_ef_ac_adv, tmp550, sequence_ef_bd, byte_range_81_9a;
		BitBlock sequence_ef_bd_adv, tmp551, tmp552, byte_f0, byte_90, tmp553;
		BitBlock sequence_f0_90, byte_f0_adv, tmp554, sequence_f0_90_90;
		BitBlock sequence_f0_90_adv, byte_range_a8_bf, sequence_f0_90_90_adv, tmp555;
		BitBlock byte_91, sequence_f0_90_91, byte_range_80_8f, sequence_f0_90_91_adv;
		BitBlock tmp556, sequence_f0_9d, tmp557, sequence_f0_9d_90, sequence_f0_9d_adv;
		BitBlock tmp558, tmp559, tmp560, tmp561, byte_range_9a_b3;
		BitBlock sequence_f0_9d_90_adv, tmp562, sequence_f0_9d_91, tmp563, tmp564;
		BitBlock tmp565, tmp566, tmp567, tmp568, tmp569, cc_range_1d44e_1d456_4;
		BitBlock sequence_f0_9d_91_adv, tmp570, byte_92, sequence_f0_9d_92, tmp571;
		BitBlock tmp572, tmp573, tmp574, tmp575, tmp576, tmp577, tmp578;
		BitBlock cc_range_1d482_1d4bd_4, sequence_f0_9d_92_adv, tmp579, byte_93;
		BitBlock sequence_f0_9d_93, tmp580, tmp581, tmp582, tmp583;
		BitBlock cc_range_1d4c0_1d4ea_4, sequence_f0_9d_93_adv, tmp584, byte_94;
		BitBlock sequence_f0_9d_94, tmp585, tmp586, tmp587, tmp588, tmp589;
		BitBlock cc_range_1d500_1d51e_4, sequence_f0_9d_94_adv, tmp590, byte_95;
		BitBlock sequence_f0_9d_95, tmp591, tmp592, tmp593, byte_range_92_ab;
		BitBlock sequence_f0_9d_95_adv, tmp594, byte_96, sequence_f0_9d_96, tmp595;
		BitBlock tmp596, cc_range_1d586_1d5ba_4, sequence_f0_9d_96_adv, tmp597;
		BitBlock byte_97, sequence_f0_9d_97, tmp598, cc_range_1d5c0_1d5ee_4;
		BitBlock sequence_f0_9d_97_adv, tmp599, byte_98, sequence_f0_9d_98, tmp600;
		BitBlock tmp601, cc_range_1d600_1d622_4, sequence_f0_9d_98_adv, tmp602;
		BitBlock sequence_f0_9d_99, tmp603, byte_range_96_af, sequence_f0_9d_99_adv;
		BitBlock tmp604, sequence_f0_9d_9a, tmp605, tmp606, byte_range_8a_a5;
		BitBlock sequence_f0_9d_9a_adv, tmp607, byte_9b, sequence_f0_9d_9b, tmp608;
		BitBlock tmp609, tmp610, tmp611, tmp612, tmp613, tmp614, tmp615;
		BitBlock cc_range_1d6c2_1d6fc_4, sequence_f0_9d_9b_adv, tmp616;
		BitBlock sequence_f0_9d_9c, tmp617, tmp618, tmp619, tmp620;
		BitBlock cc_range_1d700_1d736_4, sequence_f0_9d_9c_adv, tmp621;
		BitBlock sequence_f0_9d_9d, tmp622, tmp623, cc_range_1d740_1d770_4;
		BitBlock sequence_f0_9d_9d_adv, tmp624, sequence_f0_9d_9e, tmp625, tmp626;
		BitBlock tmp627, tmp628, tmp629, cc_range_1d780_1d7aa_4, sequence_f0_9d_9e_adv;
		BitBlock tmp630, sequence_f0_9d_9f, tmp631, tmp632, tmp633, tmp634, tmp635;
		BitBlock cc_range_1d7c0_1d7cb_4, sequence_f0_9d_9f_adv, tmp636;




        struct_Ll.cc = simd<1>::constant<0>();
        tmp1 = simd_andc(basis_bits.bit_1, basis_bits.bit_0);
        tmp2 = simd_and(tmp1, basis_bits.bit_2);
        tmp3 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp4 = simd_or(basis_bits.bit_5, tmp3);
        tmp5 = simd_and(basis_bits.bit_4, tmp4);
        tmp6 = simd_not(tmp5);
        tmp7 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp8 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp9 = simd_or(tmp7, tmp8);
        tmp10 = simd_or(simd_and(basis_bits.bit_3, tmp6), simd_andc(tmp9, basis_bits.bit_3));
        byte_range_61_7a = simd_and(tmp2, tmp10);
        struct_Ll.cc = simd_or(struct_Ll.cc, byte_range_61_7a);
        tmp11 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp12 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp13 = simd_andc(tmp11, tmp12);
        tmp14 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp15 = simd_andc(tmp14, tmp7);
        byte_c2 = simd_and(tmp13, tmp15);
        tmp16 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp17 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp18 = simd_and(tmp16, tmp17);
        tmp19 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp20 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp21 = simd_and(tmp19, tmp20);
        byte_b5 = simd_and(tmp18, tmp21);
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(byte_c2, carryQ.get_carry_in(0), byte_c2_adv));
        tmp22 = simd_and(byte_c2_adv, byte_b5);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp22);
        tmp23 = simd_andc(tmp3, tmp7);
        byte_c3 = simd_and(tmp13, tmp23);
        tmp24 = simd_and(basis_bits.bit_5, tmp3);
        tmp25 = simd_or(basis_bits.bit_4, tmp24);
        tmp26 = simd_and(basis_bits.bit_3, tmp25);
        tmp27 = simd_not(tmp26);
        tmp28 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp29 = simd_and(tmp28, tmp3);
        tmp30 = simd_and(basis_bits.bit_3, tmp29);
        tmp31 = simd_or(simd_and(basis_bits.bit_2, tmp27), simd_andc(tmp30, basis_bits.bit_2));
        tmp32 = simd_and(tmp16, tmp31);
        tmp33 = simd_and(tmp18, basis_bits.bit_4);
        cc_range_df_f8_2 = simd_or(tmp32, tmp33);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(byte_c3, carryQ.get_carry_in(1), byte_c3_adv));
        tmp34 = simd_and(byte_c3_adv, cc_range_df_f8_2);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp34);
        tmp35 = simd_andc(tmp19, tmp8);
        byte_c4 = simd_and(tmp13, tmp35);
        tmp36 = simd_andc(tmp16, tmp12);
        tmp37 = simd_andc(basis_bits.bit_7, tmp7);
        tmp38 = simd_or(tmp37, tmp21);
        tmp39 = simd_and(tmp19, tmp3);
        tmp40 = simd_or(tmp38, tmp39);
        tmp41 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp42 = simd_and(tmp41, tmp20);
        tmp43 = simd_or(tmp40, tmp42);
        tmp44 = simd_and(tmp41, tmp3);
        tmp45 = simd_or(tmp43, tmp44);
        tmp46 = simd_and(tmp28, tmp20);
        tmp47 = simd_or(tmp45, tmp46);
        tmp48 = simd_or(tmp47, tmp29);
        tmp49 = simd_and(tmp36, tmp48);
        tmp50 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp51 = simd_and(tmp16, tmp50);
        tmp52 = simd_andc(tmp20, tmp7);
        tmp53 = simd_and(tmp51, tmp52);
        tmp54 = simd_or(tmp49, tmp53);
        tmp55 = simd_and(tmp51, tmp23);
        tmp56 = simd_or(tmp54, tmp55);
        tmp57 = simd_and(tmp51, tmp21);
        tmp58 = simd_or(tmp56, tmp57);
        tmp59 = simd_and(tmp51, tmp39);
        tmp60 = simd_or(tmp58, tmp59);
        tmp61 = simd_and(tmp51, tmp42);
        tmp62 = simd_or(tmp60, tmp61);
        tmp63 = simd_and(tmp51, tmp44);
        tmp64 = simd_or(tmp62, tmp63);
        tmp65 = simd_and(tmp51, tmp46);
        tmp66 = simd_or(tmp64, tmp65);
        tmp67 = simd_and(tmp51, tmp29);
        tmp68 = simd_or(tmp66, tmp67);
        tmp69 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp70 = simd_and(tmp16, tmp69);
        tmp71 = simd_and(tmp70, tmp52);
        tmp72 = simd_or(tmp68, tmp71);
        tmp73 = simd_and(tmp70, tmp23);
        tmp74 = simd_or(tmp72, tmp73);
        tmp75 = simd_and(tmp70, tmp21);
        tmp76 = simd_or(tmp74, tmp75);
        tmp77 = simd_and(tmp70, tmp39);
        tmp78 = simd_or(tmp76, tmp77);
        tmp79 = simd_and(tmp70, tmp42);
        tmp80 = simd_or(tmp78, tmp79);
        tmp81 = simd_and(tmp70, tmp44);
        tmp82 = simd_or(tmp80, tmp81);
        tmp83 = simd_and(tmp70, tmp46);
        tmp84 = simd_or(tmp82, tmp83);
        tmp85 = simd_and(tmp70, tmp29);
        tmp86 = simd_or(tmp84, tmp85);
        tmp87 = simd_and(tmp18, tmp52);
        tmp88 = simd_or(tmp86, tmp87);
        tmp89 = simd_and(tmp18, tmp23);
        tmp90 = simd_or(tmp88, tmp89);
        tmp91 = simd_or(tmp90, byte_b5);
        tmp92 = simd_or(basis_bits.bit_5, tmp8);
        tmp93 = simd_not(tmp92);
        tmp94 = simd_or(simd_and(basis_bits.bit_4, tmp93), simd_andc(tmp24, basis_bits.bit_4));
        tmp95 = simd_and(tmp18, tmp94);
        tmp96 = simd_or(tmp91, tmp95);
        tmp97 = simd_and(tmp41, tmp14);
        tmp98 = simd_and(tmp18, tmp97);
        tmp99 = simd_or(tmp96, tmp98);
        tmp100 = simd_andc(tmp28, tmp8);
        tmp101 = simd_and(tmp18, tmp100);
        tmp102 = simd_or(tmp99, tmp101);
        tmp103 = simd_and(tmp28, tmp14);
        tmp104 = simd_and(tmp18, tmp103);
        cc_range_101_13e_2 = simd_or(tmp102, tmp104);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(byte_c4, carryQ.get_carry_in(2), byte_c4_adv));
        tmp105 = simd_and(byte_c4_adv, cc_range_101_13e_2);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp105);
        byte_c5 = simd_and(tmp13, tmp21);
        tmp106 = simd_andc(tmp9, tmp15);
        tmp107 = simd_andc(tmp106, tmp35);
        tmp108 = simd_and(tmp19, tmp14);
        tmp109 = simd_andc(tmp107, tmp108);
        tmp110 = simd_andc(tmp41, basis_bits.bit_6);
        tmp111 = simd_andc(tmp109, tmp110);
        tmp112 = simd_andc(tmp111, tmp44);
        tmp113 = simd_andc(tmp112, tmp46);
        tmp114 = simd_andc(tmp113, tmp29);
        tmp115 = simd_andc(tmp36, tmp114);
        tmp116 = simd_or(tmp115, tmp53);
        tmp117 = simd_or(tmp116, tmp55);
        tmp118 = simd_or(tmp117, tmp57);
        tmp119 = simd_or(tmp118, tmp59);
        tmp120 = simd_or(tmp119, tmp61);
        tmp121 = simd_or(tmp120, tmp63);
        tmp122 = simd_or(tmp121, tmp65);
        tmp123 = simd_or(tmp122, tmp67);
        tmp124 = simd_or(tmp123, tmp71);
        tmp125 = simd_or(tmp124, tmp73);
        tmp126 = simd_or(tmp125, tmp75);
        tmp127 = simd_or(tmp126, tmp77);
        tmp128 = simd_or(tmp127, tmp79);
        tmp129 = simd_or(tmp128, tmp81);
        tmp130 = simd_or(tmp129, tmp83);
        tmp131 = simd_or(tmp130, tmp85);
        tmp132 = simd_or(tmp131, tmp87);
        tmp133 = simd_or(tmp132, tmp89);
        tmp134 = simd_or(tmp133, byte_b5);
        tmp135 = simd_and(tmp18, tmp39);
        tmp136 = simd_or(tmp134, tmp135);
        tmp137 = simd_or(tmp136, tmp98);
        tmp138 = simd_or(tmp137, tmp101);
        tmp139 = simd_and(tmp28, basis_bits.bit_6);
        tmp140 = simd_and(tmp18, tmp139);
        cc_range_140_17e_2 = simd_or(tmp138, tmp140);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(byte_c5, carryQ.get_carry_in(3), byte_c5_adv));
        tmp141 = simd_and(byte_c5_adv, cc_range_140_17e_2);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp141);
        byte_c6 = simd_and(tmp13, tmp108);
        tmp142 = simd_andc(tmp9, tmp23);
        tmp143 = simd_andc(tmp142, tmp21);
        tmp144 = simd_andc(tmp41, tmp8);
        tmp145 = simd_andc(tmp143, tmp144);
        tmp146 = simd_andc(tmp28, basis_bits.bit_6);
        tmp147 = simd_andc(tmp145, tmp146);
        tmp148 = simd_andc(tmp36, tmp147);
        tmp149 = simd_and(tmp51, tmp15);
        tmp150 = simd_or(tmp148, tmp149);
        tmp151 = simd_or(tmp150, tmp57);
        tmp152 = simd_and(tmp51, tmp41);
        tmp153 = simd_and(tmp152, tmp8);
        tmp154 = simd_or(tmp151, tmp153);
        tmp155 = simd_and(tmp51, tmp103);
        tmp156 = simd_or(tmp154, tmp155);
        tmp157 = simd_or(tmp156, tmp71);
        tmp158 = simd_or(tmp157, tmp73);
        tmp159 = simd_or(tmp158, tmp75);
        tmp160 = simd_and(tmp70, tmp144);
        tmp161 = simd_or(tmp159, tmp160);
        tmp162 = simd_and(tmp41, basis_bits.bit_6);
        tmp163 = simd_and(tmp70, tmp162);
        tmp164 = simd_or(tmp161, tmp163);
        tmp165 = simd_or(tmp164, tmp83);
        tmp166 = simd_andc(tmp18, tmp9);
        tmp167 = simd_or(tmp165, tmp166);
        tmp168 = simd_and(tmp18, tmp35);
        tmp169 = simd_or(tmp167, tmp168);
        tmp170 = simd_and(tmp18, tmp108);
        tmp171 = simd_or(tmp169, tmp170);
        tmp172 = simd_and(tmp18, tmp41);
        tmp173 = simd_not(basis_bits.bit_7);
        tmp174 = simd_or(simd_and(basis_bits.bit_6, tmp173), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
        tmp175 = simd_and(tmp172, tmp174);
        tmp176 = simd_or(tmp171, tmp175);
        tmp177 = simd_and(tmp18, tmp28);
        tmp178 = simd_and(tmp177, tmp8);
        cc_range_180_1bd_2 = simd_or(tmp176, tmp178);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(byte_c6, carryQ.get_carry_in(4), byte_c6_adv));
        tmp179 = simd_and(byte_c6_adv, cc_range_180_1bd_2);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp179);
        byte_c7 = simd_and(tmp13, tmp39);
        tmp180 = simd_or(tmp108, tmp42);
        tmp181 = simd_or(tmp180, tmp100);
        tmp182 = simd_or(tmp181, tmp103);
        tmp183 = simd_and(tmp36, tmp182);
        tmp184 = simd_andc(tmp51, tmp9);
        tmp185 = simd_or(tmp183, tmp184);
        tmp186 = simd_or(tmp185, tmp149);
        tmp187 = simd_and(tmp51, tmp35);
        tmp188 = simd_or(tmp186, tmp187);
        tmp189 = simd_and(tmp51, tmp108);
        tmp190 = simd_or(tmp188, tmp189);
        tmp191 = simd_and(tmp51, tmp144);
        tmp192 = simd_or(tmp190, tmp191);
        tmp193 = simd_and(tmp51, tmp97);
        tmp194 = simd_or(tmp192, tmp193);
        tmp195 = simd_and(tmp51, tmp146);
        tmp196 = simd_or(tmp194, tmp195);
        tmp197 = simd_or(tmp196, tmp67);
        tmp198 = simd_or(tmp197, tmp71);
        tmp199 = simd_or(tmp198, tmp73);
        tmp200 = simd_or(tmp199, tmp75);
        tmp201 = simd_or(tmp200, tmp77);
        tmp202 = simd_or(tmp201, tmp79);
        tmp203 = simd_or(tmp202, tmp81);
        tmp204 = simd_or(tmp203, tmp83);
        tmp205 = simd_and(tmp16, basis_bits.bit_2);
        tmp206 = simd_not(tmp9);
        tmp207 = simd_or(simd_and(basis_bits.bit_3, tmp206), simd_andc(tmp29, basis_bits.bit_3));
        tmp208 = simd_and(tmp205, tmp207);
        tmp209 = simd_or(tmp204, tmp208);
        tmp210 = simd_or(tmp209, tmp89);
        tmp211 = simd_or(tmp210, byte_b5);
        tmp212 = simd_and(tmp18, tmp42);
        tmp213 = simd_or(tmp211, tmp212);
        tmp214 = simd_and(tmp18, tmp44);
        tmp215 = simd_or(tmp213, tmp214);
        tmp216 = simd_and(tmp18, tmp46);
        tmp217 = simd_or(tmp215, tmp216);
        tmp218 = simd_and(tmp18, tmp29);
        cc_range_1c6_1ff_2 = simd_or(tmp217, tmp218);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(byte_c7, carryQ.get_carry_in(5), byte_c7_adv));
        tmp219 = simd_and(byte_c7_adv, cc_range_1c6_1ff_2);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp219);
        byte_c8 = simd_and(tmp13, tmp144);
        tmp220 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
        tmp221 = simd_not(tmp220);
        tmp222 = simd_or(simd_and(basis_bits.bit_4, tmp221), simd_andc(tmp4, basis_bits.bit_4));
        tmp223 = simd_and(tmp18, tmp222);
        tmp224 = simd_or(tmp88, tmp223);
        tmp225 = simd_or(tmp224, tmp101);
        cc_range_201_23f_2 = simd_or(tmp225, tmp218);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(byte_c8, carryQ.get_carry_in(6), byte_c8_adv));
        tmp226 = simd_and(byte_c8_adv, cc_range_201_23f_2);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp226);
        byte_c9 = simd_and(tmp13, tmp42);
        tmp227 = simd_andc(tmp106, tmp39);
        tmp228 = simd_andc(tmp227, tmp42);
        tmp229 = simd_andc(tmp228, tmp44);
        tmp230 = simd_andc(tmp229, tmp46);
        tmp231 = simd_andc(tmp36, tmp230);
        tmp232 = simd_or(basis_bits.bit_3, tmp29);
        tmp233 = simd_or(basis_bits.bit_2, tmp232);
        tmp234 = simd_and(tmp16, tmp233);
        cc_range_240_24f_2 = simd_or(tmp231, tmp234);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(byte_c9, carryQ.get_carry_in(7), byte_c9_adv));
        tmp235 = simd_and(byte_c9_adv, cc_range_240_24f_2);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp235);
        byte_ca = simd_and(tmp13, tmp97);
        tmp236 = simd_andc(tmp16, basis_bits.bit_2);
        tmp237 = simd_and(basis_bits.bit_3, tmp7);
        tmp238 = simd_andc(tmp236, tmp237);
        tmp239 = simd_not(basis_bits.bit_3);
        tmp240 = simd_and(basis_bits.bit_5, tmp8);
        tmp241 = simd_or(basis_bits.bit_4, tmp240);
        tmp242 = simd_and(basis_bits.bit_3, tmp241);
        tmp243 = simd_or(simd_and(basis_bits.bit_2, tmp239), simd_andc(tmp242, basis_bits.bit_2));
        tmp244 = simd_and(tmp16, tmp243);
        cc_range_280_295_2 = simd_or(tmp238, tmp244);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(byte_ca, carryQ.get_carry_in(8), byte_ca_adv));
        tmp245 = simd_and(byte_ca_adv, cc_range_280_295_2);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp245);
        byte_cd = simd_and(tmp13, tmp46);
        tmp246 = simd_or(tmp37, tmp39);
        tmp247 = simd_and(tmp18, tmp246);
        tmp248 = simd_not(basis_bits.bit_6);
        tmp249 = simd_or(simd_and(basis_bits.bit_5, tmp248), simd_andc(tmp3, basis_bits.bit_5));
        tmp250 = simd_and(tmp33, tmp249);
        cc_range_371_37b_2 = simd_or(tmp247, tmp250);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(byte_cd, carryQ.get_carry_in(9), byte_cd_adv));
        tmp251 = simd_and(byte_cd_adv, cc_range_371_37b_2);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp251);
        byte_ce = simd_and(tmp13, tmp103);
        tmp252 = simd_or(basis_bits.bit_3, tmp28);
        tmp253 = simd_and(tmp205, tmp252);
        cc_range_390_3ac_2 = simd_or(tmp184, tmp253);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(byte_ce, carryQ.get_carry_in(10), byte_ce_adv));
        tmp254 = simd_and(byte_ce_adv, cc_range_390_3ac_2);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp254);
        byte_cf = simd_and(tmp13, tmp29);
        tmp255 = simd_and(basis_bits.bit_4, tmp24);
        tmp256 = simd_andc(tmp36, tmp255);
        tmp257 = simd_or(tmp7, basis_bits.bit_6);
        tmp258 = simd_andc(tmp51, tmp257);
        tmp259 = simd_or(tmp256, tmp258);
        tmp260 = simd_and(tmp51, tmp19);
        tmp261 = simd_and(tmp260, tmp8);
        tmp262 = simd_or(tmp259, tmp261);
        tmp263 = simd_or(tmp262, tmp61);
        tmp264 = simd_or(tmp263, tmp63);
        tmp265 = simd_or(tmp264, tmp65);
        tmp266 = simd_or(tmp265, tmp67);
        tmp267 = simd_or(tmp266, tmp71);
        tmp268 = simd_or(tmp267, tmp73);
        tmp269 = simd_or(tmp268, tmp75);
        tmp270 = simd_or(tmp269, tmp77);
        tmp271 = simd_or(tmp270, tmp79);
        tmp272 = simd_or(tmp271, tmp81);
        tmp273 = simd_or(tmp272, tmp83);
        tmp274 = simd_not(tmp7);
        tmp275 = simd_or(simd_and(basis_bits.bit_3, tmp274), simd_andc(tmp29, basis_bits.bit_3));
        tmp276 = simd_and(tmp205, tmp275);
        tmp277 = simd_or(tmp273, tmp276);
        tmp278 = simd_or(tmp277, byte_b5);
        tmp279 = simd_and(tmp18, tmp144);
        tmp280 = simd_or(tmp278, tmp279);
        tmp281 = simd_not(tmp8);
        tmp282 = simd_or(simd_and(basis_bits.bit_5, tmp281), simd_andc(tmp3, basis_bits.bit_5));
        tmp283 = simd_and(tmp33, tmp282);
        cc_range_3c0_3fb_2 = simd_or(tmp280, tmp283);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(byte_cf, carryQ.get_carry_in(11), byte_cf_adv));
        tmp284 = simd_and(byte_cf_adv, cc_range_3c0_3fb_2);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp284);
        tmp285 = simd_and(tmp11, tmp50);
        byte_d0 = simd_andc(tmp285, tmp9);
        byte_range_b0_bf = simd_and(tmp16, tmp17);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(byte_d0, carryQ.get_carry_in(12), byte_d0_adv));
        tmp286 = simd_and(byte_d0_adv, byte_range_b0_bf);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp286);
        byte_d1 = simd_and(tmp285, tmp52);
        tmp287 = simd_or(tmp236, tmp71);
        tmp288 = simd_or(tmp287, tmp73);
        tmp289 = simd_or(tmp288, tmp75);
        tmp290 = simd_or(tmp289, tmp77);
        tmp291 = simd_or(tmp290, tmp79);
        tmp292 = simd_or(tmp291, tmp81);
        tmp293 = simd_or(tmp292, tmp83);
        tmp294 = simd_or(tmp293, tmp85);
        tmp295 = simd_and(byte_range_b0_bf, tmp52);
        tmp296 = simd_or(tmp294, tmp295);
        tmp297 = simd_and(byte_range_b0_bf, tmp23);
        tmp298 = simd_or(tmp296, tmp297);
        tmp299 = simd_and(byte_range_b0_bf, tmp21);
        tmp300 = simd_or(tmp298, tmp299);
        tmp301 = simd_and(byte_range_b0_bf, tmp39);
        tmp302 = simd_or(tmp300, tmp301);
        tmp303 = simd_and(byte_range_b0_bf, tmp42);
        tmp304 = simd_or(tmp302, tmp303);
        tmp305 = simd_and(byte_range_b0_bf, tmp44);
        tmp306 = simd_or(tmp304, tmp305);
        tmp307 = simd_and(byte_range_b0_bf, tmp46);
        tmp308 = simd_or(tmp306, tmp307);
        tmp309 = simd_and(byte_range_b0_bf, tmp29);
        cc_range_440_47f_2 = simd_or(tmp308, tmp309);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(byte_d1, carryQ.get_carry_in(13), byte_d1_adv));
        tmp310 = simd_and(byte_d1_adv, cc_range_440_47f_2);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp310);
        byte_d2 = simd_and(tmp285, tmp15);
        tmp311 = simd_or(tmp52, tmp44);
        tmp312 = simd_or(tmp311, tmp46);
        tmp313 = simd_or(tmp312, tmp29);
        tmp314 = simd_and(tmp36, tmp313);
        tmp315 = simd_or(tmp314, tmp53);
        tmp316 = simd_or(tmp315, tmp55);
        tmp317 = simd_or(tmp316, tmp57);
        tmp318 = simd_or(tmp317, tmp59);
        tmp319 = simd_or(tmp318, tmp61);
        tmp320 = simd_or(tmp319, tmp63);
        tmp321 = simd_or(tmp320, tmp65);
        tmp322 = simd_or(tmp321, tmp67);
        tmp323 = simd_or(tmp322, tmp71);
        tmp324 = simd_or(tmp323, tmp73);
        tmp325 = simd_or(tmp324, tmp75);
        tmp326 = simd_or(tmp325, tmp77);
        tmp327 = simd_or(tmp326, tmp79);
        tmp328 = simd_or(tmp327, tmp81);
        tmp329 = simd_or(tmp328, tmp83);
        tmp330 = simd_or(tmp329, tmp85);
        tmp331 = simd_or(tmp330, tmp295);
        tmp332 = simd_or(tmp331, tmp297);
        tmp333 = simd_or(tmp332, tmp299);
        tmp334 = simd_or(tmp333, tmp301);
        tmp335 = simd_or(tmp334, tmp303);
        tmp336 = simd_or(tmp335, tmp305);
        tmp337 = simd_or(tmp336, tmp307);
        cc_range_481_4bf_2 = simd_or(tmp337, tmp309);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(byte_d2, carryQ.get_carry_in(14), byte_d2_adv));
        tmp338 = simd_and(byte_d2_adv, cc_range_481_4bf_2);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp338);
        byte_d3 = simd_and(tmp285, tmp23);
        tmp339 = simd_or(tmp15, tmp35);
        tmp340 = simd_or(tmp339, tmp108);
        tmp341 = simd_or(tmp340, tmp144);
        tmp342 = simd_or(tmp341, tmp97);
        tmp343 = simd_or(tmp342, tmp100);
        tmp344 = simd_or(tmp343, tmp139);
        tmp345 = simd_and(tmp36, tmp344);
        tmp346 = simd_or(tmp345, tmp53);
        tmp347 = simd_or(tmp346, tmp55);
        tmp348 = simd_or(tmp347, tmp57);
        tmp349 = simd_or(tmp348, tmp59);
        tmp350 = simd_or(tmp349, tmp61);
        tmp351 = simd_or(tmp350, tmp63);
        tmp352 = simd_or(tmp351, tmp65);
        tmp353 = simd_or(tmp352, tmp67);
        tmp354 = simd_or(tmp353, tmp71);
        tmp355 = simd_or(tmp354, tmp73);
        tmp356 = simd_or(tmp355, tmp75);
        tmp357 = simd_or(tmp356, tmp77);
        tmp358 = simd_or(tmp357, tmp79);
        tmp359 = simd_or(tmp358, tmp81);
        tmp360 = simd_or(tmp359, tmp83);
        tmp361 = simd_or(tmp360, tmp85);
        tmp362 = simd_or(tmp361, tmp295);
        tmp363 = simd_or(tmp362, tmp297);
        tmp364 = simd_or(tmp363, tmp299);
        tmp365 = simd_or(tmp364, tmp301);
        tmp366 = simd_or(tmp365, tmp303);
        tmp367 = simd_or(tmp366, tmp305);
        tmp368 = simd_or(tmp367, tmp307);
        cc_range_4c2_4ff_2 = simd_or(tmp368, tmp309);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(byte_d3, carryQ.get_carry_in(15), byte_d3_adv));
        tmp369 = simd_and(byte_d3_adv, cc_range_4c2_4ff_2);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp369);
        byte_d4 = simd_and(tmp285, tmp35);
        tmp370 = simd_or(basis_bits.bit_3, basis_bits.bit_4);
        tmp371 = simd_and(basis_bits.bit_2, tmp370);
        tmp372 = simd_andc(tmp16, tmp371);
        cc_range_501_527_2 = simd_andc(tmp372, basis_bits.bit_7);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(byte_d4, carryQ.get_carry_in(16), byte_d4_adv));
        tmp373 = simd_and(byte_d4_adv, cc_range_501_527_2);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp373);
        byte_d5 = simd_and(tmp285, tmp21);
        tmp374 = simd_or(basis_bits.bit_3, tmp9);
        byte_range_a1_bf = simd_and(tmp205, tmp374);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(byte_d5, carryQ.get_carry_in(17), byte_d5_adv));
        tmp375 = simd_and(byte_d5_adv, byte_range_a1_bf);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp375);
        byte_d6 = simd_and(tmp285, tmp108);
        byte_range_80_87 = simd_andc(tmp36, basis_bits.bit_4);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(byte_d6, carryQ.get_carry_in(18), byte_d6_adv));
        tmp376 = simd_and(byte_d6_adv, byte_range_80_87);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp376);
        tmp377 = simd_and(tmp11, tmp69);
        byte_e1 = simd_and(tmp377, tmp52);
        byte_b4 = simd_and(byte_range_b0_bf, tmp35);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(19), tmp378));
        sequence_e1_b4 = simd_and(tmp378, byte_b4);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(20), byte_e1_adv));
        tmp379 = simd_and(basis_bits.bit_2, tmp252);
        byte_range_80_ab = simd_andc(tmp16, tmp379);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(sequence_e1_b4, carryQ.get_carry_in(21), sequence_e1_b4_adv));
        tmp380 = simd_and(sequence_e1_b4_adv, byte_range_80_ab);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp380);
        sequence_e1_b5 = simd_and(byte_e1_adv, byte_b5);
        tmp381 = simd_not(basis_bits.bit_4);
        tmp382 = simd_or(simd_and(basis_bits.bit_3, tmp381), simd_andc(tmp5, basis_bits.bit_3));
        tmp383 = simd_and(tmp205, tmp382);
        tmp384 = simd_and(byte_range_b0_bf, basis_bits.bit_4);
        tmp385 = simd_and(tmp384, tmp92);
        cc_range_1d6b_1d79_3 = simd_or(tmp383, tmp385);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(sequence_e1_b5, carryQ.get_carry_in(22), sequence_e1_b5_adv));
        tmp386 = simd_and(sequence_e1_b5_adv, cc_range_1d6b_1d79_3);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp386);
        byte_b6 = simd_and(byte_range_b0_bf, tmp108);
        sequence_e1_b6 = simd_and(byte_e1_adv, byte_b6);
        tmp387 = simd_and(basis_bits.bit_3, tmp5);
        byte_range_80_9a = simd_andc(tmp236, tmp387);
        carryQ.cq[23] = carryout2carry(pablo_blk_Advance(sequence_e1_b6, carryQ.get_carry_in(23), sequence_e1_b6_adv));
        tmp388 = simd_and(sequence_e1_b6_adv, byte_range_80_9a);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp388);
        byte_b8 = simd_and(byte_range_b0_bf, tmp144);
        sequence_e1_b8 = simd_and(byte_e1_adv, byte_b8);
        cc_range_1e01_1e3f_3 = simd_andc(tmp16, basis_bits.bit_7);
        carryQ.cq[24] = carryout2carry(pablo_blk_Advance(sequence_e1_b8, carryQ.get_carry_in(24), sequence_e1_b8_adv));
        tmp389 = simd_and(sequence_e1_b8_adv, cc_range_1e01_1e3f_3);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp389);
        byte_b9 = simd_and(byte_range_b0_bf, tmp42);
        sequence_e1_b9 = simd_and(byte_e1_adv, byte_b9);
        cc_range_1e41_1e7f_3 = simd_andc(tmp16, basis_bits.bit_7);
        carryQ.cq[25] = carryout2carry(pablo_blk_Advance(sequence_e1_b9, carryQ.get_carry_in(25), sequence_e1_b9_adv));
        tmp390 = simd_and(sequence_e1_b9_adv, cc_range_1e41_1e7f_3);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp390);
        byte_ba = simd_and(byte_range_b0_bf, tmp97);
        sequence_e1_ba = simd_and(byte_e1_adv, byte_ba);
        tmp391 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp392 = simd_not(tmp391);
        tmp393 = simd_or(simd_and(basis_bits.bit_4, tmp392), simd_andc(tmp240, basis_bits.bit_4));
        tmp394 = simd_and(tmp51, tmp393);
        tmp395 = simd_or(tmp56, tmp394);
        tmp396 = simd_or(tmp395, tmp67);
        tmp397 = simd_or(tmp396, tmp71);
        tmp398 = simd_or(tmp397, tmp73);
        tmp399 = simd_or(tmp398, tmp75);
        tmp400 = simd_or(tmp399, tmp77);
        tmp401 = simd_or(tmp400, tmp79);
        tmp402 = simd_or(tmp401, tmp81);
        tmp403 = simd_or(tmp402, tmp83);
        tmp404 = simd_or(tmp403, tmp85);
        tmp405 = simd_or(tmp404, tmp295);
        tmp406 = simd_or(tmp405, tmp297);
        tmp407 = simd_or(tmp406, tmp299);
        tmp408 = simd_or(tmp407, tmp301);
        tmp409 = simd_or(tmp408, byte_b9);
        tmp410 = simd_or(tmp409, tmp305);
        tmp411 = simd_or(tmp410, tmp307);
        cc_range_1e81_1ebf_3 = simd_or(tmp411, tmp309);
        carryQ.cq[26] = carryout2carry(pablo_blk_Advance(sequence_e1_ba, carryQ.get_carry_in(26), sequence_e1_ba_adv));
        tmp412 = simd_and(sequence_e1_ba_adv, cc_range_1e81_1ebf_3);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp412);
        byte_bb = simd_and(byte_range_b0_bf, tmp44);
        sequence_e1_bb = simd_and(byte_e1_adv, byte_bb);
        cc_range_1ec1_1eff_3 = simd_andc(tmp16, basis_bits.bit_7);
        carryQ.cq[27] = carryout2carry(pablo_blk_Advance(sequence_e1_bb, carryQ.get_carry_in(27), sequence_e1_bb_adv));
        tmp413 = simd_and(sequence_e1_bb_adv, cc_range_1ec1_1eff_3);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp413);
        byte_bc = simd_and(byte_range_b0_bf, tmp100);
        sequence_e1_bc = simd_and(byte_e1_adv, byte_bc);
        tmp414 = simd_andc(tmp51, basis_bits.bit_4);
        tmp415 = simd_andc(tmp414, tmp391);
        tmp416 = simd_or(byte_range_80_87, tmp415);
        tmp417 = simd_andc(tmp70, basis_bits.bit_4);
        tmp418 = simd_or(tmp416, tmp417);
        tmp419 = simd_andc(byte_range_b0_bf, basis_bits.bit_4);
        cc_range_1f00_1f30_3 = simd_or(tmp418, tmp419);
        carryQ.cq[28] = carryout2carry(pablo_blk_Advance(sequence_e1_bc, carryQ.get_carry_in(28), sequence_e1_bc_adv));
        tmp420 = simd_and(sequence_e1_bc_adv, cc_range_1f00_1f30_3);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp420);
        byte_bd = simd_and(byte_range_b0_bf, tmp46);
        sequence_e1_bd = simd_and(byte_e1_adv, byte_bd);
        tmp421 = simd_andc(byte_range_80_87, tmp391);
        tmp422 = simd_or(tmp421, tmp414);
        tmp423 = simd_or(tmp422, tmp417);
        tmp424 = simd_and(basis_bits.bit_4, tmp391);
        tmp425 = simd_andc(byte_range_b0_bf, tmp424);
        cc_range_1f40_1f70_3 = simd_or(tmp423, tmp425);
        carryQ.cq[29] = carryout2carry(pablo_blk_Advance(sequence_e1_bd, carryQ.get_carry_in(29), sequence_e1_bd_adv));
        tmp426 = simd_and(sequence_e1_bd_adv, cc_range_1f40_1f70_3);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp426);
        byte_be = simd_and(byte_range_b0_bf, tmp103);
        sequence_e1_be = simd_and(byte_e1_adv, byte_be);
        tmp427 = simd_andc(tmp12, tmp50);
        tmp428 = simd_andc(tmp427, tmp69);
        tmp429 = simd_andc(tmp16, tmp428);
        tmp430 = simd_andc(tmp429, basis_bits.bit_4);
        tmp431 = simd_andc(tmp419, tmp240);
        tmp432 = simd_or(tmp430, tmp431);
        tmp433 = simd_and(tmp19, basis_bits.bit_6);
        tmp434 = simd_and(byte_range_b0_bf, tmp433);
        tmp435 = simd_or(tmp432, tmp434);
        cc_range_1f80_1fbe_3 = simd_or(tmp435, byte_be);
        carryQ.cq[30] = carryout2carry(pablo_blk_Advance(sequence_e1_be, carryQ.get_carry_in(30), sequence_e1_be_adv));
        tmp436 = simd_and(sequence_e1_be_adv, cc_range_1f80_1fbe_3);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp436);
        byte_bf = simd_and(byte_range_b0_bf, tmp29);
        sequence_e1_bf = simd_and(byte_e1_adv, byte_bf);
        tmp437 = simd_or(simd_and(basis_bits.bit_5, tmp281), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        tmp438 = simd_and(byte_range_80_87, tmp437);
        tmp439 = simd_and(tmp36, tmp433);
        tmp440 = simd_or(tmp438, tmp439);
        tmp441 = simd_andc(tmp51, tmp7);
        tmp442 = simd_or(tmp440, tmp441);
        tmp443 = simd_and(tmp51, tmp433);
        tmp444 = simd_or(tmp442, tmp443);
        tmp445 = simd_or(tmp444, tmp417);
        tmp446 = simd_and(tmp419, tmp437);
        tmp447 = simd_or(tmp445, tmp446);
        cc_range_1fc2_1ff6_3 = simd_or(tmp447, tmp434);
        carryQ.cq[31] = carryout2carry(pablo_blk_Advance(sequence_e1_bf, carryQ.get_carry_in(31), sequence_e1_bf_adv));
        tmp448 = simd_and(sequence_e1_bf_adv, cc_range_1fc2_1ff6_3);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp448);
        byte_e2 = simd_and(tmp377, tmp15);
        byte_84 = simd_and(tmp36, tmp35);
        carryQ.cq[32] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(32), tmp449));
        sequence_e2_84 = simd_and(tmp449, byte_84);
        carryQ.cq[33] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(33), byte_e2_adv));
        tmp450 = simd_or(tmp97, tmp139);
        tmp451 = simd_and(tmp36, tmp450);
        tmp452 = simd_or(tmp451, tmp55);
        tmp453 = simd_or(tmp452, tmp85);
        tmp454 = simd_or(tmp453, byte_b4);
        tmp455 = simd_or(tmp454, byte_b9);
        tmp456 = simd_and(byte_range_b0_bf, tmp146);
        cc_range_210a_213c_3 = simd_or(tmp455, tmp456);
        carryQ.cq[34] = carryout2carry(pablo_blk_Advance(sequence_e2_84, carryQ.get_carry_in(34), sequence_e2_84_adv));
        tmp457 = simd_and(sequence_e2_84_adv, cc_range_210a_213c_3);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp457);
        byte_85 = simd_and(tmp36, tmp21);
        sequence_e2_85 = simd_and(byte_e2_adv, byte_85);
        tmp458 = simd_or(simd_and(basis_bits.bit_4, tmp221), simd_andc(tmp391, basis_bits.bit_4));
        tmp459 = simd_or(tmp458, tmp103);
        cc_range_2146_214e_3 = simd_and(tmp36, tmp459);
        carryQ.cq[35] = carryout2carry(pablo_blk_Advance(sequence_e2_85, carryQ.get_carry_in(35), sequence_e2_85_adv));
        tmp460 = simd_and(sequence_e2_85_adv, cc_range_2146_214e_3);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp460);
        byte_86 = simd_and(tmp36, tmp108);
        sequence_e2_86 = simd_and(byte_e2_adv, byte_86);
        carryQ.cq[36] = carryout2carry(pablo_blk_Advance(sequence_e2_86, carryQ.get_carry_in(36), sequence_e2_86_adv));
        tmp461 = simd_and(sequence_e2_86_adv, byte_84);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp461);
        byte_b0 = simd_andc(byte_range_b0_bf, tmp9);
        sequence_e2_b0 = simd_and(byte_e2_adv, byte_b0);
        carryQ.cq[37] = carryout2carry(pablo_blk_Advance(sequence_e2_b0, carryQ.get_carry_in(37), sequence_e2_b0_adv));
        tmp462 = simd_and(sequence_e2_b0_adv, byte_range_b0_bf);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp462);
        byte_b1 = simd_and(byte_range_b0_bf, tmp52);
        sequence_e2_b1 = simd_and(byte_e2_adv, byte_b1);
        tmp463 = simd_andc(tmp236, tmp30);
        tmp464 = simd_or(tmp463, tmp71);
        tmp465 = simd_and(tmp70, tmp19);
        tmp466 = simd_and(tmp465, tmp174);
        tmp467 = simd_or(tmp464, tmp466);
        tmp468 = simd_or(tmp467, tmp160);
        tmp469 = simd_and(tmp70, tmp97);
        tmp470 = simd_or(tmp468, tmp469);
        tmp471 = simd_and(tmp70, tmp100);
        tmp472 = simd_or(tmp470, tmp471);
        tmp473 = simd_or(tmp472, byte_b1);
        tmp474 = simd_and(tmp419, tmp282);
        tmp475 = simd_or(tmp473, tmp474);
        tmp476 = simd_not(basis_bits.bit_5);
        tmp477 = simd_or(simd_and(basis_bits.bit_4, tmp476), simd_andc(tmp391, basis_bits.bit_4));
        tmp478 = simd_and(byte_range_b0_bf, tmp477);
        cc_range_2c40_2c76_3 = simd_or(tmp475, tmp478);
        carryQ.cq[38] = carryout2carry(pablo_blk_Advance(sequence_e2_b1, carryQ.get_carry_in(38), sequence_e2_b1_adv));
        tmp479 = simd_and(sequence_e2_b1_adv, cc_range_2c40_2c76_3);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp479);
        byte_b2 = simd_and(byte_range_b0_bf, tmp15);
        sequence_e2_b2 = simd_and(byte_e2_adv, byte_b2);
        cc_range_2c81_2cbf_3 = simd_andc(tmp16, basis_bits.bit_7);
        carryQ.cq[39] = carryout2carry(pablo_blk_Advance(sequence_e2_b2, carryQ.get_carry_in(39), sequence_e2_b2_adv));
        tmp480 = simd_and(sequence_e2_b2_adv, cc_range_2c81_2cbf_3);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp480);
        byte_b3 = simd_and(byte_range_b0_bf, tmp23);
        sequence_e2_b3 = simd_and(byte_e2_adv, byte_b3);
        tmp481 = simd_and(tmp417, tmp282);
        tmp482 = simd_or(tmp72, tmp481);
        tmp483 = simd_or(tmp482, tmp471);
        tmp484 = simd_and(tmp70, tmp103);
        tmp485 = simd_or(tmp483, tmp484);
        cc_range_2cc1_2cf3_3 = simd_or(tmp485, byte_b3);
        carryQ.cq[40] = carryout2carry(pablo_blk_Advance(sequence_e2_b3, carryQ.get_carry_in(40), sequence_e2_b3_adv));
        tmp486 = simd_and(sequence_e2_b3_adv, cc_range_2cc1_2cf3_3);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp486);
        sequence_e2_b4 = simd_and(byte_e2_adv, byte_b4);
        tmp487 = simd_or(basis_bits.bit_4, tmp391);
        tmp488 = simd_or(basis_bits.bit_3, tmp487);
        tmp489 = simd_and(basis_bits.bit_2, tmp488);
        tmp490 = simd_andc(tmp16, tmp489);
        tmp491 = simd_or(tmp490, tmp77);
        cc_range_2d00_2d2d_3 = simd_or(tmp491, tmp83);
        carryQ.cq[41] = carryout2carry(pablo_blk_Advance(sequence_e2_b4, carryQ.get_carry_in(41), sequence_e2_b4_adv));
        tmp492 = simd_and(sequence_e2_b4_adv, cc_range_2d00_2d2d_3);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp492);
        byte_ea = simd_and(tmp377, tmp97);
        byte_99 = simd_and(tmp51, tmp42);
        carryQ.cq[42] = carryout2carry(pablo_blk_Advance(byte_ea, carryQ.get_carry_in(42), tmp493));
        sequence_ea_99 = simd_and(tmp493, byte_99);
        carryQ.cq[43] = carryout2carry(pablo_blk_Advance(byte_ea, carryQ.get_carry_in(43), byte_ea_adv));
        tmp494 = simd_or(basis_bits.bit_3, tmp139);
        tmp495 = simd_and(basis_bits.bit_2, tmp494);
        tmp496 = simd_andc(tmp16, tmp495);
        cc_range_a641_a66d_3 = simd_andc(tmp496, basis_bits.bit_7);
        carryQ.cq[44] = carryout2carry(pablo_blk_Advance(sequence_ea_99, carryQ.get_carry_in(44), sequence_ea_99_adv));
        tmp497 = simd_and(sequence_ea_99_adv, cc_range_a641_a66d_3);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp497);
        byte_9a = simd_and(tmp51, tmp97);
        sequence_ea_9a = simd_and(byte_ea_adv, byte_9a);
        tmp498 = simd_and(basis_bits.bit_3, basis_bits.bit_4);
        tmp499 = simd_andc(tmp236, tmp498);
        cc_range_a681_a697_3 = simd_andc(tmp499, basis_bits.bit_7);
        carryQ.cq[45] = carryout2carry(pablo_blk_Advance(sequence_ea_9a, carryQ.get_carry_in(45), sequence_ea_9a_adv));
        tmp500 = simd_and(sequence_ea_9a_adv, cc_range_a681_a697_3);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp500);
        byte_9c = simd_and(tmp51, tmp100);
        sequence_ea_9c = simd_and(byte_ea_adv, byte_9c);
        tmp501 = simd_or(tmp23, tmp21);
        tmp502 = simd_or(tmp501, tmp39);
        tmp503 = simd_or(tmp502, tmp42);
        tmp504 = simd_or(tmp503, tmp44);
        tmp505 = simd_or(tmp504, tmp46);
        tmp506 = simd_and(tmp70, tmp505);
        tmp507 = simd_not(tmp257);
        tmp508 = simd_or(simd_and(basis_bits.bit_3, tmp507), simd_andc(tmp29, basis_bits.bit_3));
        tmp509 = simd_and(tmp205, tmp508);
        tmp510 = simd_or(tmp506, tmp509);
        tmp511 = simd_or(tmp510, byte_b3);
        tmp512 = simd_or(tmp511, tmp299);
        tmp513 = simd_or(tmp512, tmp301);
        tmp514 = simd_or(tmp513, byte_b9);
        tmp515 = simd_or(tmp514, byte_bb);
        tmp516 = simd_or(tmp515, byte_bd);
        cc_range_a723_a73f_3 = simd_or(tmp516, byte_bf);
        carryQ.cq[46] = carryout2carry(pablo_blk_Advance(sequence_ea_9c, carryQ.get_carry_in(46), sequence_ea_9c_adv));
        tmp517 = simd_and(sequence_ea_9c_adv, cc_range_a723_a73f_3);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp517);
        byte_9d = simd_and(tmp51, tmp46);
        sequence_ea_9d = simd_and(byte_ea_adv, byte_9d);
        tmp518 = simd_or(tmp60, byte_99);
        tmp519 = simd_or(tmp518, tmp63);
        tmp520 = simd_or(tmp519, byte_9d);
        tmp521 = simd_or(tmp520, tmp67);
        tmp522 = simd_or(tmp521, tmp71);
        tmp523 = simd_or(tmp522, tmp73);
        tmp524 = simd_or(tmp523, tmp75);
        tmp525 = simd_or(tmp524, tmp77);
        tmp526 = simd_or(tmp525, tmp79);
        tmp527 = simd_or(tmp526, tmp81);
        tmp528 = simd_or(tmp527, tmp83);
        tmp529 = simd_or(tmp528, tmp85);
        tmp530 = simd_or(simd_and(basis_bits.bit_4, tmp93), simd_andc(tmp92, basis_bits.bit_4));
        tmp531 = simd_and(byte_range_b0_bf, tmp530);
        tmp532 = simd_or(tmp529, tmp531);
        tmp533 = simd_or(tmp532, byte_ba);
        tmp534 = simd_or(tmp533, byte_bc);
        cc_range_a741_a77f_3 = simd_or(tmp534, byte_bf);
        carryQ.cq[47] = carryout2carry(pablo_blk_Advance(sequence_ea_9d, carryQ.get_carry_in(47), sequence_ea_9d_adv));
        tmp535 = simd_and(sequence_ea_9d_adv, cc_range_a741_a77f_3);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp535);
        byte_9e = simd_and(tmp51, tmp103);
        sequence_ea_9e = simd_and(byte_ea_adv, byte_9e);
        tmp536 = simd_or(tmp40, tmp100);
        tmp537 = simd_or(tmp536, tmp103);
        tmp538 = simd_and(tmp36, tmp537);
        tmp539 = simd_or(tmp538, tmp53);
        tmp540 = simd_or(tmp539, tmp55);
        tmp541 = simd_or(tmp540, tmp71);
        tmp542 = simd_or(tmp541, tmp73);
        tmp543 = simd_or(tmp542, tmp75);
        tmp544 = simd_or(tmp543, tmp77);
        cc_range_a781_a7a9_3 = simd_or(tmp544, tmp79);
        carryQ.cq[48] = carryout2carry(pablo_blk_Advance(sequence_ea_9e, carryQ.get_carry_in(48), sequence_ea_9e_adv));
        tmp545 = simd_and(sequence_ea_9e_adv, cc_range_a781_a7a9_3);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp545);
        byte_9f = simd_and(tmp51, tmp29);
        sequence_ea_9f = simd_and(byte_ea_adv, byte_9f);
        carryQ.cq[49] = carryout2carry(pablo_blk_Advance(sequence_ea_9f, carryQ.get_carry_in(49), sequence_ea_9f_adv));
        tmp546 = simd_and(sequence_ea_9f_adv, byte_ba);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp546);
        byte_ef = simd_and(tmp377, tmp29);
        byte_ac = simd_and(tmp70, tmp100);
        carryQ.cq[50] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(50), tmp547));
        sequence_ef_ac = simd_and(tmp547, byte_ac);
        carryQ.cq[51] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(51), byte_ef_adv));
        tmp548 = simd_andc(byte_range_80_87, tmp24);
        tmp549 = simd_and(tmp414, tmp4);
        cc_range_fb00_fb13_3 = simd_or(tmp548, tmp549);
        carryQ.cq[52] = carryout2carry(pablo_blk_Advance(sequence_ef_ac, carryQ.get_carry_in(52), sequence_ef_ac_adv));
        tmp550 = simd_and(sequence_ef_ac_adv, cc_range_fb00_fb13_3);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp550);
        sequence_ef_bd = simd_and(byte_ef_adv, byte_bd);
        byte_range_81_9a = simd_and(tmp236, tmp10);
        carryQ.cq[53] = carryout2carry(pablo_blk_Advance(sequence_ef_bd, carryQ.get_carry_in(53), sequence_ef_bd_adv));
        tmp551 = simd_and(sequence_ef_bd_adv, byte_range_81_9a);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp551);
        tmp552 = simd_and(tmp11, tmp17);
        byte_f0 = simd_andc(tmp552, tmp9);
        byte_90 = simd_andc(tmp51, tmp9);
        carryQ.cq[54] = carryout2carry(pablo_blk_Advance(byte_f0, carryQ.get_carry_in(54), tmp553));
        sequence_f0_90 = simd_and(tmp553, byte_90);
        carryQ.cq[55] = carryout2carry(pablo_blk_Advance(byte_f0, carryQ.get_carry_in(55), byte_f0_adv));
        carryQ.cq[56] = carryout2carry(pablo_blk_Advance(sequence_f0_90, carryQ.get_carry_in(56), tmp554));
        sequence_f0_90_90 = simd_and(tmp554, byte_90);
        carryQ.cq[57] = carryout2carry(pablo_blk_Advance(sequence_f0_90, carryQ.get_carry_in(57), sequence_f0_90_adv));
        byte_range_a8_bf = simd_and(tmp205, tmp370);
        carryQ.cq[58] = carryout2carry(pablo_blk_Advance(sequence_f0_90_90, carryQ.get_carry_in(58), sequence_f0_90_90_adv));
        tmp555 = simd_and(sequence_f0_90_90_adv, byte_range_a8_bf);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp555);
        byte_91 = simd_and(tmp51, tmp52);
        sequence_f0_90_91 = simd_and(sequence_f0_90_adv, byte_91);
        byte_range_80_8f = simd_andc(tmp16, tmp12);
        carryQ.cq[59] = carryout2carry(pablo_blk_Advance(sequence_f0_90_91, carryQ.get_carry_in(59), sequence_f0_90_91_adv));
        tmp556 = simd_and(sequence_f0_90_91_adv, byte_range_80_8f);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp556);
        sequence_f0_9d = simd_and(byte_f0_adv, byte_9d);
        carryQ.cq[60] = carryout2carry(pablo_blk_Advance(sequence_f0_9d, carryQ.get_carry_in(60), tmp557));
        sequence_f0_9d_90 = simd_and(tmp557, byte_90);
        carryQ.cq[61] = carryout2carry(pablo_blk_Advance(sequence_f0_9d, carryQ.get_carry_in(61), sequence_f0_9d_adv));
        tmp558 = simd_not(tmp237);
        tmp559 = simd_and(basis_bits.bit_4, tmp220);
        tmp560 = simd_and(basis_bits.bit_3, tmp559);
        tmp561 = simd_or(simd_and(basis_bits.bit_2, tmp558), simd_andc(tmp560, basis_bits.bit_2));
        byte_range_9a_b3 = simd_and(tmp16, tmp561);
        carryQ.cq[62] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_90, carryQ.get_carry_in(62), sequence_f0_9d_90_adv));
        tmp562 = simd_and(sequence_f0_9d_90_adv, byte_range_9a_b3);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp562);
        sequence_f0_9d_91 = simd_and(sequence_f0_9d_adv, byte_91);
        tmp563 = simd_not(tmp241);
        tmp564 = simd_or(simd_and(basis_bits.bit_3, tmp563), simd_andc(tmp139, basis_bits.bit_3));
        tmp565 = simd_and(tmp236, tmp564);
        tmp566 = simd_not(tmp370);
        tmp567 = simd_and(basis_bits.bit_3, tmp487);
        tmp568 = simd_or(simd_and(basis_bits.bit_2, tmp566), simd_andc(tmp567, basis_bits.bit_2));
        tmp569 = simd_and(tmp16, tmp568);
        cc_range_1d44e_1d456_4 = simd_or(tmp565, tmp569);
        carryQ.cq[63] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_91, carryQ.get_carry_in(63), sequence_f0_9d_91_adv));
        tmp570 = simd_and(sequence_f0_9d_91_adv, cc_range_1d44e_1d456_4);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp570);
        byte_92 = simd_and(tmp51, tmp15);
        sequence_f0_9d_92 = simd_and(sequence_f0_9d_adv, byte_92);
        tmp571 = simd_not(tmp28);
        tmp572 = simd_or(simd_and(basis_bits.bit_3, tmp571), simd_andc(tmp257, basis_bits.bit_3));
        tmp573 = simd_and(tmp236, tmp572);
        tmp574 = simd_and(byte_range_b0_bf, tmp458);
        tmp575 = simd_or(tmp573, tmp574);
        tmp576 = simd_or(tmp575, byte_bb);
        tmp577 = simd_and(byte_range_b0_bf, tmp28);
        tmp578 = simd_and(tmp577, tmp8);
        cc_range_1d482_1d4bd_4 = simd_or(tmp576, tmp578);
        carryQ.cq[64] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_92, carryQ.get_carry_in(64), sequence_f0_9d_92_adv));
        tmp579 = simd_and(sequence_f0_9d_92_adv, cc_range_1d482_1d4bd_4);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp579);
        byte_93 = simd_and(tmp51, tmp23);
        sequence_f0_9d_93 = simd_and(sequence_f0_9d_adv, byte_93);
        tmp580 = simd_andc(tmp7, tmp241);
        tmp581 = simd_andc(byte_range_80_8f, tmp580);
        tmp582 = simd_or(basis_bits.bit_3, tmp559);
        tmp583 = simd_and(tmp205, tmp582);
        cc_range_1d4c0_1d4ea_4 = simd_or(tmp581, tmp583);
        carryQ.cq[65] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_93, carryQ.get_carry_in(65), sequence_f0_9d_93_adv));
        tmp584 = simd_and(sequence_f0_9d_93_adv, cc_range_1d4c0_1d4ea_4);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp584);
        byte_94 = simd_and(tmp51, tmp35);
        sequence_f0_9d_94 = simd_and(sequence_f0_9d_adv, byte_94);
        tmp585 = simd_andc(byte_range_80_8f, tmp7);
        tmp586 = simd_not(tmp498);
        tmp587 = simd_and(basis_bits.bit_3, tmp139);
        tmp588 = simd_or(simd_and(basis_bits.bit_2, tmp586), simd_andc(tmp587, basis_bits.bit_2));
        tmp589 = simd_and(tmp16, tmp588);
        cc_range_1d500_1d51e_4 = simd_or(tmp585, tmp589);
        carryQ.cq[66] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_94, carryQ.get_carry_in(66), sequence_f0_9d_94_adv));
        tmp590 = simd_and(sequence_f0_9d_94_adv, cc_range_1d500_1d51e_4);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp590);
        byte_95 = simd_and(tmp51, tmp21);
        sequence_f0_9d_95 = simd_and(sequence_f0_9d_adv, byte_95);
        tmp591 = simd_not(tmp252);
        tmp592 = simd_and(basis_bits.bit_3, tmp257);
        tmp593 = simd_or(simd_and(basis_bits.bit_2, tmp591), simd_andc(tmp592, basis_bits.bit_2));
        byte_range_92_ab = simd_and(tmp16, tmp593);
        carryQ.cq[67] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_95, carryQ.get_carry_in(67), sequence_f0_9d_95_adv));
        tmp594 = simd_and(sequence_f0_9d_95_adv, byte_range_92_ab);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp594);
        byte_96 = simd_and(tmp51, tmp108);
        sequence_f0_9d_96 = simd_and(sequence_f0_9d_adv, byte_96);
        tmp595 = simd_and(tmp236, tmp488);
        tmp596 = simd_and(tmp384, tmp220);
        cc_range_1d586_1d5ba_4 = simd_or(tmp595, tmp596);
        carryQ.cq[68] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_96, carryQ.get_carry_in(68), sequence_f0_9d_96_adv));
        tmp597 = simd_and(sequence_f0_9d_96_adv, cc_range_1d586_1d5ba_4);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp597);
        byte_97 = simd_and(tmp51, tmp39);
        sequence_f0_9d_97 = simd_and(sequence_f0_9d_adv, byte_97);
        tmp598 = simd_and(tmp205, tmp494);
        cc_range_1d5c0_1d5ee_4 = simd_or(tmp238, tmp598);
        carryQ.cq[69] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_97, carryQ.get_carry_in(69), sequence_f0_9d_97_adv));
        tmp599 = simd_and(sequence_f0_9d_97_adv, cc_range_1d5c0_1d5ee_4);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp599);
        byte_98 = simd_and(tmp51, tmp144);
        sequence_f0_9d_98 = simd_and(sequence_f0_9d_adv, byte_98);
        tmp600 = simd_andc(byte_range_80_8f, basis_bits.bit_4);
        tmp601 = simd_and(tmp205, tmp572);
        cc_range_1d600_1d622_4 = simd_or(tmp600, tmp601);
        carryQ.cq[70] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_98, carryQ.get_carry_in(70), sequence_f0_9d_98_adv));
        tmp602 = simd_and(sequence_f0_9d_98_adv, cc_range_1d600_1d622_4);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp602);
        sequence_f0_9d_99 = simd_and(sequence_f0_9d_adv, byte_99);
        tmp603 = simd_or(simd_and(basis_bits.bit_2, tmp239), simd_andc(tmp567, basis_bits.bit_2));
        byte_range_96_af = simd_and(tmp16, tmp603);
        carryQ.cq[71] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_99, carryQ.get_carry_in(71), sequence_f0_9d_99_adv));
        tmp604 = simd_and(sequence_f0_9d_99_adv, byte_range_96_af);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp604);
        sequence_f0_9d_9a = simd_and(sequence_f0_9d_adv, byte_9a);
        tmp605 = simd_not(tmp488);
        tmp606 = simd_or(simd_and(basis_bits.bit_2, tmp605), simd_andc(tmp582, basis_bits.bit_2));
        byte_range_8a_a5 = simd_and(tmp16, tmp606);
        carryQ.cq[72] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_9a, carryQ.get_carry_in(72), sequence_f0_9d_9a_adv));
        tmp607 = simd_and(sequence_f0_9d_9a_adv, byte_range_8a_a5);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp607);
        byte_9b = simd_and(tmp51, tmp44);
        sequence_f0_9d_9b = simd_and(sequence_f0_9d_adv, byte_9b);
        tmp608 = simd_or(simd_and(basis_bits.bit_3, tmp6), simd_andc(tmp257, basis_bits.bit_3));
        tmp609 = simd_and(tmp236, tmp608);
        tmp610 = simd_or(basis_bits.bit_3, tmp257);
        tmp611 = simd_not(tmp610);
        tmp612 = simd_and(basis_bits.bit_3, tmp28);
        tmp613 = simd_or(simd_and(basis_bits.bit_2, tmp611), simd_andc(tmp612, basis_bits.bit_2));
        tmp614 = simd_and(tmp16, tmp613);
        tmp615 = simd_or(tmp609, tmp614);
        cc_range_1d6c2_1d6fc_4 = simd_or(tmp615, tmp577);
        carryQ.cq[73] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_9b, carryQ.get_carry_in(73), sequence_f0_9d_9b_adv));
        tmp616 = simd_and(sequence_f0_9d_9b_adv, cc_range_1d6c2_1d6fc_4);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp616);
        sequence_f0_9d_9c = simd_and(sequence_f0_9d_adv, byte_9c);
        tmp617 = simd_andc(tmp236, tmp242);
        tmp618 = simd_and(tmp51, tmp477);
        tmp619 = simd_or(tmp617, tmp618);
        tmp620 = simd_and(byte_range_b0_bf, tmp487);
        cc_range_1d700_1d736_4 = simd_or(tmp619, tmp620);
        carryQ.cq[74] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_9c, carryQ.get_carry_in(74), sequence_f0_9d_9c_adv));
        tmp621 = simd_and(sequence_f0_9d_9c_adv, cc_range_1d700_1d736_4);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp621);
        sequence_f0_9d_9d = simd_and(sequence_f0_9d_adv, byte_9d);
        tmp622 = simd_andc(byte_range_80_8f, tmp255);
        tmp623 = simd_or(tmp622, tmp415);
        cc_range_1d740_1d770_4 = simd_or(tmp623, byte_range_b0_bf);
        carryQ.cq[75] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_9d, carryQ.get_carry_in(75), sequence_f0_9d_9d_adv));
        tmp624 = simd_and(sequence_f0_9d_9d_adv, cc_range_1d740_1d770_4);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp624);
        sequence_f0_9d_9e = simd_and(sequence_f0_9d_adv, byte_9e);
        tmp625 = simd_and(basis_bits.bit_4, tmp92);
        tmp626 = simd_andc(byte_range_80_8f, tmp625);
        tmp627 = simd_and(byte_range_80_8f, basis_bits.bit_4);
        tmp628 = simd_and(tmp627, tmp220);
        tmp629 = simd_or(tmp626, tmp628);
        cc_range_1d780_1d7aa_4 = simd_or(tmp629, tmp583);
        carryQ.cq[76] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_9e, carryQ.get_carry_in(76), sequence_f0_9d_9e_adv));
        tmp630 = simd_and(sequence_f0_9d_9e_adv, cc_range_1d780_1d7aa_4);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp630);
        sequence_f0_9d_9f = simd_and(sequence_f0_9d_adv, byte_9f);
        tmp631 = simd_andc(tmp585, tmp3);
        tmp632 = simd_or(simd_and(basis_bits.bit_4, tmp221), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
        tmp633 = simd_and(byte_range_80_8f, tmp632);
        tmp634 = simd_or(tmp631, tmp633);
        tmp635 = simd_and(byte_range_80_8f, tmp44);
        cc_range_1d7c0_1d7cb_4 = simd_or(tmp634, tmp635);
        carryQ.cq[77] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_9f, carryQ.get_carry_in(77), sequence_f0_9d_9f_adv));
        tmp636 = simd_and(sequence_f0_9d_9f_adv, cc_range_1d7c0_1d7cb_4);
        struct_Ll.cc = simd_or(struct_Ll.cc, tmp636);
  }
  CarryArray<78, 0> carryQ;
  };

  struct Lm {
  Lm() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Lm & struct_Lm) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, byte_ca, tmp7, tmp8;
		BitBlock byte_range_b0_bf, byte_ca_adv, tmp9, tmp10, tmp11, byte_cb, tmp12;
		BitBlock tmp13, tmp14, tmp15, tmp16, tmp17, tmp18, tmp19, tmp20, tmp21, tmp22;
		BitBlock tmp23, tmp24, tmp25, tmp26, tmp27, tmp28, tmp29, tmp30, tmp31, tmp32;
		BitBlock tmp33, tmp34, tmp35, cc_range_2c0_2ee_2, byte_cb_adv, tmp36, tmp37;
		BitBlock tmp38, byte_cd, tmp39, tmp40, tmp41, cc_range_374_37a_2, byte_cd_adv;
		BitBlock tmp42, tmp43, tmp44, tmp45, byte_d5, tmp46, tmp47, byte_99;
		BitBlock byte_d5_adv, tmp48, byte_d9, tmp49, byte_80, byte_d9_adv, tmp50;
		BitBlock byte_db, tmp51, tmp52, tmp53, byte_range_a5_a6, byte_db_adv, tmp54;
		BitBlock tmp55, byte_df, tmp56, tmp57, cc_range_7f4_7fa_2, byte_df_adv, tmp58;
		BitBlock tmp59, byte_e0, byte_a0, tmp60, sequence_e0_a0, byte_e0_adv, tmp61;
		BitBlock tmp62, tmp63, tmp64, tmp65, cc_range_81a_828_3, sequence_e0_a0_adv;
		BitBlock tmp66, byte_a5, sequence_e0_a5, tmp67, byte_b1, sequence_e0_a5_adv;
		BitBlock tmp68, byte_b9, sequence_e0_b9, tmp69, byte_86, sequence_e0_b9_adv;
		BitBlock tmp70, byte_bb, sequence_e0_bb, sequence_e0_bb_adv, tmp71, byte_e1;
		BitBlock tmp72, byte_83, tmp73, sequence_e1_83, byte_e1_adv, byte_bc;
		BitBlock sequence_e1_83_adv, tmp74, byte_9f, sequence_e1_9f, tmp75, byte_97;
		BitBlock sequence_e1_9f_adv, tmp76, byte_a1, sequence_e1_a1;
		BitBlock sequence_e1_a1_adv, tmp77, byte_aa, sequence_e1_aa, byte_a7;
		BitBlock sequence_e1_aa_adv, tmp78, sequence_e1_b1, tmp79, byte_range_b8_bd;
		BitBlock sequence_e1_b1_adv, tmp80, byte_b4, sequence_e1_b4, tmp81, tmp82;
		BitBlock byte_range_ac_bf, sequence_e1_b4_adv, tmp83, byte_b5, sequence_e1_b5;
		BitBlock tmp84, tmp85, tmp86, tmp87, tmp88, tmp89, cc_range_1d40_1d78_3;
		BitBlock sequence_e1_b5_adv, tmp90, byte_b6, sequence_e1_b6, tmp91, tmp92;
		BitBlock byte_range_9b_bf, sequence_e1_b6_adv, tmp93, tmp94, byte_e2, byte_81;
		BitBlock tmp95, sequence_e2_81, byte_e2_adv, tmp96, cc_range_2071_207f_3;
		BitBlock sequence_e2_81_adv, tmp97, byte_82, sequence_e2_82, tmp98;
		BitBlock byte_range_90_9c, sequence_e2_82_adv, tmp99, sequence_e2_b1, tmp100;
		BitBlock byte_range_bc_bd, sequence_e2_b1_adv, tmp101, sequence_e2_b5, byte_af;
		BitBlock sequence_e2_b5_adv, tmp102, byte_b8, sequence_e2_b8;
		BitBlock sequence_e2_b8_adv, tmp103, byte_e3, tmp104, sequence_e3_80;
		BitBlock byte_e3_adv, tmp105, tmp106, tmp107, tmp108, tmp109, tmp110;
		BitBlock cc_range_3005_303b_3, sequence_e3_80_adv, tmp111, sequence_e3_82;
		BitBlock tmp112, byte_range_9d_9e, sequence_e3_82_adv, tmp113, sequence_e3_83;
		BitBlock tmp114, byte_range_bc_be, sequence_e3_83_adv, tmp115, byte_ea, tmp116;
		BitBlock sequence_ea_80, byte_ea_adv, byte_95, sequence_ea_80_adv, tmp117;
		BitBlock byte_93, sequence_ea_93, sequence_ea_93_adv, tmp118, byte_98;
		BitBlock sequence_ea_98, byte_8c, sequence_ea_98_adv, tmp119, sequence_ea_99;
		BitBlock byte_bf, sequence_ea_99_adv, tmp120, byte_9c, sequence_ea_9c, tmp121;
		BitBlock tmp122, byte_range_97_9f, sequence_ea_9c_adv, tmp123, byte_9d;
		BitBlock sequence_ea_9d, byte_b0, sequence_ea_9d_adv, tmp124, byte_9e;
		BitBlock sequence_ea_9e, byte_88, sequence_ea_9e_adv, tmp125, sequence_ea_9f;
		BitBlock tmp126, byte_range_b8_b9, sequence_ea_9f_adv, tmp127, sequence_ea_a7;
		BitBlock byte_8f, sequence_ea_a7_adv, tmp128, byte_a9, sequence_ea_a9;
		BitBlock sequence_ea_a9_adv, tmp129, byte_ab, sequence_ea_ab, tmp130, tmp131;
		BitBlock tmp132, cc_range_aadd_aaf3_3, sequence_ea_ab_adv, tmp133, byte_ef;
		BitBlock byte_bd, tmp134, sequence_ef_bd, byte_ef_adv, sequence_ef_bd_adv;
		BitBlock tmp135, byte_be, sequence_ef_be, tmp136, byte_range_9e_9f;
		BitBlock sequence_ef_be_adv, tmp137, tmp138, byte_f0, byte_96, tmp139;
		BitBlock sequence_f0_96, byte_f0_adv, tmp140, sequence_f0_96_be;
		BitBlock sequence_f0_96_adv, tmp141, byte_range_93_9f, sequence_f0_96_be_adv;
		BitBlock tmp142;




        struct_Lm.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp1, tmp2);
        tmp4 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_and(tmp4, tmp5);
        byte_ca = simd_and(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        byte_range_b0_bf = simd_and(tmp7, tmp8);
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(byte_ca, carryQ.get_carry_in(0), byte_ca_adv));
        tmp9 = simd_and(byte_ca_adv, byte_range_b0_bf);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp9);
        tmp10 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp11 = simd_and(tmp4, tmp10);
        byte_cb = simd_and(tmp3, tmp11);
        tmp12 = simd_andc(tmp7, tmp2);
        tmp13 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp14 = simd_or(tmp13, basis_bits.bit_6);
        tmp15 = simd_andc(tmp12, tmp14);
        tmp16 = simd_andc(tmp7, basis_bits.bit_2);
        tmp17 = simd_not(tmp14);
        tmp18 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp19 = simd_or(basis_bits.bit_4, tmp18);
        tmp20 = simd_or(simd_and(basis_bits.bit_3, tmp17), simd_andc(tmp19, basis_bits.bit_3));
        tmp21 = simd_and(tmp16, tmp20);
        tmp22 = simd_or(tmp15, tmp21);
        tmp23 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp24 = simd_and(tmp7, tmp23);
        tmp25 = simd_andc(tmp24, basis_bits.bit_4);
        tmp26 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp27 = simd_and(basis_bits.bit_5, tmp26);
        tmp28 = simd_andc(tmp25, tmp27);
        tmp29 = simd_or(tmp22, tmp28);
        tmp30 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp31 = simd_andc(tmp30, tmp26);
        tmp32 = simd_and(tmp24, tmp31);
        tmp33 = simd_or(tmp29, tmp32);
        tmp34 = simd_and(tmp30, tmp5);
        tmp35 = simd_and(tmp24, tmp34);
        cc_range_2c0_2ee_2 = simd_or(tmp33, tmp35);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(byte_cb, carryQ.get_carry_in(1), byte_cb_adv));
        tmp36 = simd_and(byte_cb_adv, cc_range_2c0_2ee_2);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp36);
        tmp37 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp38 = simd_and(tmp30, tmp37);
        byte_cd = simd_and(tmp3, tmp38);
        tmp39 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp40 = simd_andc(tmp39, tmp26);
        tmp41 = simd_or(tmp40, tmp6);
        cc_range_374_37a_2 = simd_and(byte_range_b0_bf, tmp41);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(byte_cd, carryQ.get_carry_in(2), byte_cd_adv));
        tmp42 = simd_and(byte_cd_adv, cc_range_374_37a_2);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp42);
        tmp43 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp44 = simd_and(tmp1, tmp43);
        tmp45 = simd_and(tmp39, tmp37);
        byte_d5 = simd_and(tmp44, tmp45);
        tmp46 = simd_and(tmp7, tmp43);
        tmp47 = simd_and(tmp4, tmp37);
        byte_99 = simd_and(tmp46, tmp47);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(byte_d5, carryQ.get_carry_in(3), byte_d5_adv));
        tmp48 = simd_and(byte_d5_adv, byte_99);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp48);
        byte_d9 = simd_and(tmp44, tmp47);
        tmp49 = simd_or(tmp13, tmp26);
        byte_80 = simd_andc(tmp12, tmp49);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(byte_d9, carryQ.get_carry_in(4), byte_d9_adv));
        tmp50 = simd_and(byte_d9_adv, byte_80);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp50);
        byte_db = simd_and(tmp44, tmp11);
        tmp51 = simd_and(tmp24, tmp39);
        tmp52 = simd_not(basis_bits.bit_7);
        tmp53 = simd_or(simd_and(basis_bits.bit_6, tmp52), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
        byte_range_a5_a6 = simd_and(tmp51, tmp53);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(byte_db, carryQ.get_carry_in(5), byte_db_adv));
        tmp54 = simd_and(byte_db_adv, byte_range_a5_a6);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp54);
        tmp55 = simd_and(tmp30, tmp10);
        byte_df = simd_and(tmp44, tmp55);
        tmp56 = simd_andc(tmp39, basis_bits.bit_6);
        tmp57 = simd_or(tmp56, tmp6);
        cc_range_7f4_7fa_2 = simd_and(byte_range_b0_bf, tmp57);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(byte_df, carryQ.get_carry_in(6), byte_df_adv));
        tmp58 = simd_and(byte_df_adv, cc_range_7f4_7fa_2);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp58);
        tmp59 = simd_and(tmp1, tmp23);
        byte_e0 = simd_andc(tmp59, tmp49);
        byte_a0 = simd_andc(tmp24, tmp49);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(byte_e0, carryQ.get_carry_in(7), tmp60));
        sequence_e0_a0 = simd_and(tmp60, byte_a0);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(byte_e0, carryQ.get_carry_in(8), byte_e0_adv));
        tmp61 = simd_and(tmp46, tmp6);
        tmp62 = simd_and(tmp24, tmp40);
        tmp63 = simd_or(tmp61, tmp62);
        tmp64 = simd_andc(tmp4, tmp26);
        tmp65 = simd_and(tmp24, tmp64);
        cc_range_81a_828_3 = simd_or(tmp63, tmp65);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(sequence_e0_a0, carryQ.get_carry_in(9), sequence_e0_a0_adv));
        tmp66 = simd_and(sequence_e0_a0_adv, cc_range_81a_828_3);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp66);
        byte_a5 = simd_and(tmp24, tmp45);
        sequence_e0_a5 = simd_and(byte_e0_adv, byte_a5);
        tmp67 = simd_andc(tmp37, tmp13);
        byte_b1 = simd_and(byte_range_b0_bf, tmp67);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(sequence_e0_a5, carryQ.get_carry_in(10), sequence_e0_a5_adv));
        tmp68 = simd_and(sequence_e0_a5_adv, byte_b1);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp68);
        byte_b9 = simd_and(byte_range_b0_bf, tmp47);
        sequence_e0_b9 = simd_and(byte_e0_adv, byte_b9);
        tmp69 = simd_and(tmp39, tmp5);
        byte_86 = simd_and(tmp12, tmp69);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(sequence_e0_b9, carryQ.get_carry_in(11), sequence_e0_b9_adv));
        tmp70 = simd_and(sequence_e0_b9_adv, byte_86);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp70);
        byte_bb = simd_and(byte_range_b0_bf, tmp11);
        sequence_e0_bb = simd_and(byte_e0_adv, byte_bb);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(sequence_e0_bb, carryQ.get_carry_in(12), sequence_e0_bb_adv));
        tmp71 = simd_and(sequence_e0_bb_adv, byte_86);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp71);
        byte_e1 = simd_and(tmp59, tmp67);
        tmp72 = simd_andc(tmp10, tmp13);
        byte_83 = simd_and(tmp12, tmp72);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(13), tmp73));
        sequence_e1_83 = simd_and(tmp73, byte_83);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(14), byte_e1_adv));
        byte_bc = simd_and(byte_range_b0_bf, tmp31);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(sequence_e1_83, carryQ.get_carry_in(15), sequence_e1_83_adv));
        tmp74 = simd_and(sequence_e1_83_adv, byte_bc);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp74);
        byte_9f = simd_and(tmp46, tmp55);
        sequence_e1_9f = simd_and(byte_e1_adv, byte_9f);
        tmp75 = simd_and(tmp39, tmp10);
        byte_97 = simd_and(tmp46, tmp75);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(sequence_e1_9f, carryQ.get_carry_in(16), sequence_e1_9f_adv));
        tmp76 = simd_and(sequence_e1_9f_adv, byte_97);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp76);
        byte_a1 = simd_and(tmp24, tmp67);
        sequence_e1_a1 = simd_and(byte_e1_adv, byte_a1);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(sequence_e1_a1, carryQ.get_carry_in(17), sequence_e1_a1_adv));
        tmp77 = simd_and(sequence_e1_a1_adv, byte_83);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp77);
        byte_aa = simd_and(tmp24, tmp6);
        sequence_e1_aa = simd_and(byte_e1_adv, byte_aa);
        byte_a7 = simd_and(tmp24, tmp75);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(sequence_e1_aa, carryQ.get_carry_in(18), sequence_e1_aa_adv));
        tmp78 = simd_and(sequence_e1_aa_adv, byte_a7);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp78);
        sequence_e1_b1 = simd_and(byte_e1_adv, byte_b1);
        tmp79 = simd_and(byte_range_b0_bf, basis_bits.bit_4);
        byte_range_b8_bd = simd_andc(tmp79, tmp18);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(sequence_e1_b1, carryQ.get_carry_in(19), sequence_e1_b1_adv));
        tmp80 = simd_and(sequence_e1_b1_adv, byte_range_b8_bd);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp80);
        byte_b4 = simd_and(byte_range_b0_bf, tmp40);
        sequence_e1_b4 = simd_and(byte_e1_adv, byte_b4);
        tmp81 = simd_and(tmp7, basis_bits.bit_2);
        tmp82 = simd_or(basis_bits.bit_3, tmp30);
        byte_range_ac_bf = simd_and(tmp81, tmp82);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(sequence_e1_b4, carryQ.get_carry_in(20), sequence_e1_b4_adv));
        tmp83 = simd_and(sequence_e1_b4_adv, byte_range_ac_bf);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp83);
        byte_b5 = simd_and(byte_range_b0_bf, tmp45);
        sequence_e1_b5 = simd_and(byte_e1_adv, byte_b5);
        tmp84 = simd_or(basis_bits.bit_5, tmp10);
        tmp85 = simd_and(basis_bits.bit_4, tmp84);
        tmp86 = simd_or(basis_bits.bit_3, tmp85);
        tmp87 = simd_and(basis_bits.bit_2, tmp86);
        tmp88 = simd_andc(tmp7, tmp87);
        tmp89 = simd_and(byte_range_b0_bf, tmp64);
        cc_range_1d40_1d78_3 = simd_or(tmp88, tmp89);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(sequence_e1_b5, carryQ.get_carry_in(21), sequence_e1_b5_adv));
        tmp90 = simd_and(sequence_e1_b5_adv, cc_range_1d40_1d78_3);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp90);
        byte_b6 = simd_and(byte_range_b0_bf, tmp69);
        sequence_e1_b6 = simd_and(byte_e1_adv, byte_b6);
        tmp91 = simd_and(basis_bits.bit_3, tmp85);
        tmp92 = simd_or(basis_bits.bit_2, tmp91);
        byte_range_9b_bf = simd_and(tmp7, tmp92);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(sequence_e1_b6, carryQ.get_carry_in(22), sequence_e1_b6_adv));
        tmp93 = simd_and(sequence_e1_b6_adv, byte_range_9b_bf);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp93);
        tmp94 = simd_andc(tmp5, tmp13);
        byte_e2 = simd_and(tmp59, tmp94);
        byte_81 = simd_and(tmp12, tmp67);
        carryQ.cq[23] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(23), tmp95));
        sequence_e2_81 = simd_and(tmp95, byte_81);
        carryQ.cq[24] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(24), byte_e2_adv));
        tmp96 = simd_or(tmp67, tmp55);
        cc_range_2071_207f_3 = simd_and(byte_range_b0_bf, tmp96);
        carryQ.cq[25] = carryout2carry(pablo_blk_Advance(sequence_e2_81, carryQ.get_carry_in(25), sequence_e2_81_adv));
        tmp97 = simd_and(sequence_e2_81_adv, cc_range_2071_207f_3);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp97);
        byte_82 = simd_and(tmp12, tmp94);
        sequence_e2_82 = simd_and(byte_e2_adv, byte_82);
        tmp98 = simd_and(basis_bits.bit_4, tmp27);
        byte_range_90_9c = simd_andc(tmp46, tmp98);
        carryQ.cq[26] = carryout2carry(pablo_blk_Advance(sequence_e2_82, carryQ.get_carry_in(26), sequence_e2_82_adv));
        tmp99 = simd_and(sequence_e2_82_adv, byte_range_90_9c);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp99);
        sequence_e2_b1 = simd_and(byte_e2_adv, byte_b1);
        tmp100 = simd_andc(tmp30, basis_bits.bit_6);
        byte_range_bc_bd = simd_and(byte_range_b0_bf, tmp100);
        carryQ.cq[27] = carryout2carry(pablo_blk_Advance(sequence_e2_b1, carryQ.get_carry_in(27), sequence_e2_b1_adv));
        tmp101 = simd_and(sequence_e2_b1_adv, byte_range_bc_bd);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp101);
        sequence_e2_b5 = simd_and(byte_e2_adv, byte_b5);
        byte_af = simd_and(tmp24, tmp55);
        carryQ.cq[28] = carryout2carry(pablo_blk_Advance(sequence_e2_b5, carryQ.get_carry_in(28), sequence_e2_b5_adv));
        tmp102 = simd_and(sequence_e2_b5_adv, byte_af);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp102);
        byte_b8 = simd_and(byte_range_b0_bf, tmp64);
        sequence_e2_b8 = simd_and(byte_e2_adv, byte_b8);
        carryQ.cq[29] = carryout2carry(pablo_blk_Advance(sequence_e2_b8, carryQ.get_carry_in(29), sequence_e2_b8_adv));
        tmp103 = simd_and(sequence_e2_b8_adv, byte_af);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp103);
        byte_e3 = simd_and(tmp59, tmp72);
        carryQ.cq[30] = carryout2carry(pablo_blk_Advance(byte_e3, carryQ.get_carry_in(30), tmp104));
        sequence_e3_80 = simd_and(tmp104, byte_80);
        carryQ.cq[31] = carryout2carry(pablo_blk_Advance(byte_e3, carryQ.get_carry_in(31), byte_e3_adv));
        tmp105 = simd_and(tmp12, tmp45);
        tmp106 = simd_andc(byte_range_b0_bf, basis_bits.bit_4);
        tmp107 = simd_not(basis_bits.bit_6);
        tmp108 = simd_or(simd_and(basis_bits.bit_5, tmp107), simd_andc(tmp26, basis_bits.bit_5));
        tmp109 = simd_and(tmp106, tmp108);
        tmp110 = simd_or(tmp105, tmp109);
        cc_range_3005_303b_3 = simd_or(tmp110, byte_bb);
        carryQ.cq[32] = carryout2carry(pablo_blk_Advance(sequence_e3_80, carryQ.get_carry_in(32), sequence_e3_80_adv));
        tmp111 = simd_and(sequence_e3_80_adv, cc_range_3005_303b_3);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp111);
        sequence_e3_82 = simd_and(byte_e3_adv, byte_82);
        tmp112 = simd_and(tmp46, tmp30);
        byte_range_9d_9e = simd_and(tmp112, tmp53);
        carryQ.cq[33] = carryout2carry(pablo_blk_Advance(sequence_e3_82, carryQ.get_carry_in(33), sequence_e3_82_adv));
        tmp113 = simd_and(sequence_e3_82_adv, byte_range_9d_9e);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp113);
        sequence_e3_83 = simd_and(byte_e3_adv, byte_83);
        tmp114 = simd_and(byte_range_b0_bf, tmp30);
        byte_range_bc_be = simd_andc(tmp114, tmp10);
        carryQ.cq[34] = carryout2carry(pablo_blk_Advance(sequence_e3_83, carryQ.get_carry_in(34), sequence_e3_83_adv));
        tmp115 = simd_and(sequence_e3_83_adv, byte_range_bc_be);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp115);
        byte_ea = simd_and(tmp59, tmp6);
        carryQ.cq[35] = carryout2carry(pablo_blk_Advance(byte_ea, carryQ.get_carry_in(35), tmp116));
        sequence_ea_80 = simd_and(tmp116, byte_80);
        carryQ.cq[36] = carryout2carry(pablo_blk_Advance(byte_ea, carryQ.get_carry_in(36), byte_ea_adv));
        byte_95 = simd_and(tmp46, tmp45);
        carryQ.cq[37] = carryout2carry(pablo_blk_Advance(sequence_ea_80, carryQ.get_carry_in(37), sequence_ea_80_adv));
        tmp117 = simd_and(sequence_ea_80_adv, byte_95);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp117);
        byte_93 = simd_and(tmp46, tmp72);
        sequence_ea_93 = simd_and(byte_ea_adv, byte_93);
        carryQ.cq[38] = carryout2carry(pablo_blk_Advance(sequence_ea_93, carryQ.get_carry_in(38), sequence_ea_93_adv));
        tmp118 = simd_and(sequence_ea_93_adv, byte_range_b8_bd);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp118);
        byte_98 = simd_and(tmp46, tmp64);
        sequence_ea_98 = simd_and(byte_ea_adv, byte_98);
        byte_8c = simd_and(tmp12, tmp31);
        carryQ.cq[39] = carryout2carry(pablo_blk_Advance(sequence_ea_98, carryQ.get_carry_in(39), sequence_ea_98_adv));
        tmp119 = simd_and(sequence_ea_98_adv, byte_8c);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp119);
        sequence_ea_99 = simd_and(byte_ea_adv, byte_99);
        byte_bf = simd_and(byte_range_b0_bf, tmp55);
        carryQ.cq[40] = carryout2carry(pablo_blk_Advance(sequence_ea_99, carryQ.get_carry_in(40), sequence_ea_99_adv));
        tmp120 = simd_and(sequence_ea_99_adv, byte_bf);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp120);
        byte_9c = simd_and(tmp46, tmp31);
        sequence_ea_9c = simd_and(byte_ea_adv, byte_9c);
        tmp121 = simd_and(basis_bits.bit_5, tmp10);
        tmp122 = simd_or(basis_bits.bit_4, tmp121);
        byte_range_97_9f = simd_and(tmp46, tmp122);
        carryQ.cq[41] = carryout2carry(pablo_blk_Advance(sequence_ea_9c, carryQ.get_carry_in(41), sequence_ea_9c_adv));
        tmp123 = simd_and(sequence_ea_9c_adv, byte_range_97_9f);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp123);
        byte_9d = simd_and(tmp46, tmp38);
        sequence_ea_9d = simd_and(byte_ea_adv, byte_9d);
        byte_b0 = simd_andc(byte_range_b0_bf, tmp49);
        carryQ.cq[42] = carryout2carry(pablo_blk_Advance(sequence_ea_9d, carryQ.get_carry_in(42), sequence_ea_9d_adv));
        tmp124 = simd_and(sequence_ea_9d_adv, byte_b0);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp124);
        byte_9e = simd_and(tmp46, tmp34);
        sequence_ea_9e = simd_and(byte_ea_adv, byte_9e);
        byte_88 = simd_and(tmp12, tmp64);
        carryQ.cq[43] = carryout2carry(pablo_blk_Advance(sequence_ea_9e, carryQ.get_carry_in(43), sequence_ea_9e_adv));
        tmp125 = simd_and(sequence_ea_9e_adv, byte_88);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp125);
        sequence_ea_9f = simd_and(byte_ea_adv, byte_9f);
        tmp126 = simd_andc(tmp4, basis_bits.bit_6);
        byte_range_b8_b9 = simd_and(byte_range_b0_bf, tmp126);
        carryQ.cq[44] = carryout2carry(pablo_blk_Advance(sequence_ea_9f, carryQ.get_carry_in(44), sequence_ea_9f_adv));
        tmp127 = simd_and(sequence_ea_9f_adv, byte_range_b8_b9);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp127);
        sequence_ea_a7 = simd_and(byte_ea_adv, byte_a7);
        byte_8f = simd_and(tmp12, tmp55);
        carryQ.cq[45] = carryout2carry(pablo_blk_Advance(sequence_ea_a7, carryQ.get_carry_in(45), sequence_ea_a7_adv));
        tmp128 = simd_and(sequence_ea_a7_adv, byte_8f);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp128);
        byte_a9 = simd_and(tmp24, tmp47);
        sequence_ea_a9 = simd_and(byte_ea_adv, byte_a9);
        carryQ.cq[46] = carryout2carry(pablo_blk_Advance(sequence_ea_a9, carryQ.get_carry_in(46), sequence_ea_a9_adv));
        tmp129 = simd_and(sequence_ea_a9_adv, byte_b0);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp129);
        byte_ab = simd_and(tmp24, tmp11);
        sequence_ea_ab = simd_and(byte_ea_adv, byte_ab);
        tmp130 = simd_not(tmp26);
        tmp131 = simd_or(simd_and(basis_bits.bit_5, tmp130), simd_andc(tmp10, basis_bits.bit_5));
        tmp132 = simd_and(tmp106, tmp131);
        cc_range_aadd_aaf3_3 = simd_or(byte_9d, tmp132);
        carryQ.cq[47] = carryout2carry(pablo_blk_Advance(sequence_ea_ab, carryQ.get_carry_in(47), sequence_ea_ab_adv));
        tmp133 = simd_and(sequence_ea_ab_adv, cc_range_aadd_aaf3_3);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp133);
        byte_ef = simd_and(tmp59, tmp55);
        byte_bd = simd_and(byte_range_b0_bf, tmp38);
        carryQ.cq[48] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(48), tmp134));
        sequence_ef_bd = simd_and(tmp134, byte_bd);
        carryQ.cq[49] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(49), byte_ef_adv));
        carryQ.cq[50] = carryout2carry(pablo_blk_Advance(sequence_ef_bd, carryQ.get_carry_in(50), sequence_ef_bd_adv));
        tmp135 = simd_and(sequence_ef_bd_adv, byte_b0);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp135);
        byte_be = simd_and(byte_range_b0_bf, tmp34);
        sequence_ef_be = simd_and(byte_ef_adv, byte_be);
        tmp136 = simd_and(tmp30, basis_bits.bit_6);
        byte_range_9e_9f = simd_and(tmp46, tmp136);
        carryQ.cq[51] = carryout2carry(pablo_blk_Advance(sequence_ef_be, carryQ.get_carry_in(51), sequence_ef_be_adv));
        tmp137 = simd_and(sequence_ef_be_adv, byte_range_9e_9f);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp137);
        tmp138 = simd_and(tmp1, tmp8);
        byte_f0 = simd_andc(tmp138, tmp49);
        byte_96 = simd_and(tmp46, tmp69);
        carryQ.cq[52] = carryout2carry(pablo_blk_Advance(byte_f0, carryQ.get_carry_in(52), tmp139));
        sequence_f0_96 = simd_and(tmp139, byte_96);
        carryQ.cq[53] = carryout2carry(pablo_blk_Advance(byte_f0, carryQ.get_carry_in(53), byte_f0_adv));
        carryQ.cq[54] = carryout2carry(pablo_blk_Advance(sequence_f0_96, carryQ.get_carry_in(54), tmp140));
        sequence_f0_96_be = simd_and(tmp140, byte_be);
        carryQ.cq[55] = carryout2carry(pablo_blk_Advance(sequence_f0_96, carryQ.get_carry_in(55), sequence_f0_96_adv));
        tmp141 = simd_or(basis_bits.bit_4, tmp84);
        byte_range_93_9f = simd_and(tmp46, tmp141);
        carryQ.cq[56] = carryout2carry(pablo_blk_Advance(sequence_f0_96_be, carryQ.get_carry_in(56), sequence_f0_96_be_adv));
        tmp142 = simd_and(sequence_f0_96_be_adv, byte_range_93_9f);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp142);
        carryQ.CarryQ_Adjust(57);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Lm & struct_Lm, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, byte_ca, tmp7, tmp8;
		BitBlock byte_range_b0_bf, byte_ca_adv, tmp9, tmp10, tmp11, byte_cb, tmp12;
		BitBlock tmp13, tmp14, tmp15, tmp16, tmp17, tmp18, tmp19, tmp20, tmp21, tmp22;
		BitBlock tmp23, tmp24, tmp25, tmp26, tmp27, tmp28, tmp29, tmp30, tmp31, tmp32;
		BitBlock tmp33, tmp34, tmp35, cc_range_2c0_2ee_2, byte_cb_adv, tmp36, tmp37;
		BitBlock tmp38, byte_cd, tmp39, tmp40, tmp41, cc_range_374_37a_2, byte_cd_adv;
		BitBlock tmp42, tmp43, tmp44, tmp45, byte_d5, tmp46, tmp47, byte_99;
		BitBlock byte_d5_adv, tmp48, byte_d9, tmp49, byte_80, byte_d9_adv, tmp50;
		BitBlock byte_db, tmp51, tmp52, tmp53, byte_range_a5_a6, byte_db_adv, tmp54;
		BitBlock tmp55, byte_df, tmp56, tmp57, cc_range_7f4_7fa_2, byte_df_adv, tmp58;
		BitBlock tmp59, byte_e0, byte_a0, tmp60, sequence_e0_a0, byte_e0_adv, tmp61;
		BitBlock tmp62, tmp63, tmp64, tmp65, cc_range_81a_828_3, sequence_e0_a0_adv;
		BitBlock tmp66, byte_a5, sequence_e0_a5, tmp67, byte_b1, sequence_e0_a5_adv;
		BitBlock tmp68, byte_b9, sequence_e0_b9, tmp69, byte_86, sequence_e0_b9_adv;
		BitBlock tmp70, byte_bb, sequence_e0_bb, sequence_e0_bb_adv, tmp71, byte_e1;
		BitBlock tmp72, byte_83, tmp73, sequence_e1_83, byte_e1_adv, byte_bc;
		BitBlock sequence_e1_83_adv, tmp74, byte_9f, sequence_e1_9f, tmp75, byte_97;
		BitBlock sequence_e1_9f_adv, tmp76, byte_a1, sequence_e1_a1;
		BitBlock sequence_e1_a1_adv, tmp77, byte_aa, sequence_e1_aa, byte_a7;
		BitBlock sequence_e1_aa_adv, tmp78, sequence_e1_b1, tmp79, byte_range_b8_bd;
		BitBlock sequence_e1_b1_adv, tmp80, byte_b4, sequence_e1_b4, tmp81, tmp82;
		BitBlock byte_range_ac_bf, sequence_e1_b4_adv, tmp83, byte_b5, sequence_e1_b5;
		BitBlock tmp84, tmp85, tmp86, tmp87, tmp88, tmp89, cc_range_1d40_1d78_3;
		BitBlock sequence_e1_b5_adv, tmp90, byte_b6, sequence_e1_b6, tmp91, tmp92;
		BitBlock byte_range_9b_bf, sequence_e1_b6_adv, tmp93, tmp94, byte_e2, byte_81;
		BitBlock tmp95, sequence_e2_81, byte_e2_adv, tmp96, cc_range_2071_207f_3;
		BitBlock sequence_e2_81_adv, tmp97, byte_82, sequence_e2_82, tmp98;
		BitBlock byte_range_90_9c, sequence_e2_82_adv, tmp99, sequence_e2_b1, tmp100;
		BitBlock byte_range_bc_bd, sequence_e2_b1_adv, tmp101, sequence_e2_b5, byte_af;
		BitBlock sequence_e2_b5_adv, tmp102, byte_b8, sequence_e2_b8;
		BitBlock sequence_e2_b8_adv, tmp103, byte_e3, tmp104, sequence_e3_80;
		BitBlock byte_e3_adv, tmp105, tmp106, tmp107, tmp108, tmp109, tmp110;
		BitBlock cc_range_3005_303b_3, sequence_e3_80_adv, tmp111, sequence_e3_82;
		BitBlock tmp112, byte_range_9d_9e, sequence_e3_82_adv, tmp113, sequence_e3_83;
		BitBlock tmp114, byte_range_bc_be, sequence_e3_83_adv, tmp115, byte_ea, tmp116;
		BitBlock sequence_ea_80, byte_ea_adv, byte_95, sequence_ea_80_adv, tmp117;
		BitBlock byte_93, sequence_ea_93, sequence_ea_93_adv, tmp118, byte_98;
		BitBlock sequence_ea_98, byte_8c, sequence_ea_98_adv, tmp119, sequence_ea_99;
		BitBlock byte_bf, sequence_ea_99_adv, tmp120, byte_9c, sequence_ea_9c, tmp121;
		BitBlock tmp122, byte_range_97_9f, sequence_ea_9c_adv, tmp123, byte_9d;
		BitBlock sequence_ea_9d, byte_b0, sequence_ea_9d_adv, tmp124, byte_9e;
		BitBlock sequence_ea_9e, byte_88, sequence_ea_9e_adv, tmp125, sequence_ea_9f;
		BitBlock tmp126, byte_range_b8_b9, sequence_ea_9f_adv, tmp127, sequence_ea_a7;
		BitBlock byte_8f, sequence_ea_a7_adv, tmp128, byte_a9, sequence_ea_a9;
		BitBlock sequence_ea_a9_adv, tmp129, byte_ab, sequence_ea_ab, tmp130, tmp131;
		BitBlock tmp132, cc_range_aadd_aaf3_3, sequence_ea_ab_adv, tmp133, byte_ef;
		BitBlock byte_bd, tmp134, sequence_ef_bd, byte_ef_adv, sequence_ef_bd_adv;
		BitBlock tmp135, byte_be, sequence_ef_be, tmp136, byte_range_9e_9f;
		BitBlock sequence_ef_be_adv, tmp137, tmp138, byte_f0, byte_96, tmp139;
		BitBlock sequence_f0_96, byte_f0_adv, tmp140, sequence_f0_96_be;
		BitBlock sequence_f0_96_adv, tmp141, byte_range_93_9f, sequence_f0_96_be_adv;
		BitBlock tmp142;




        struct_Lm.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp1, tmp2);
        tmp4 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_and(tmp4, tmp5);
        byte_ca = simd_and(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        byte_range_b0_bf = simd_and(tmp7, tmp8);
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(byte_ca, carryQ.get_carry_in(0), byte_ca_adv));
        tmp9 = simd_and(byte_ca_adv, byte_range_b0_bf);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp9);
        tmp10 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp11 = simd_and(tmp4, tmp10);
        byte_cb = simd_and(tmp3, tmp11);
        tmp12 = simd_andc(tmp7, tmp2);
        tmp13 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp14 = simd_or(tmp13, basis_bits.bit_6);
        tmp15 = simd_andc(tmp12, tmp14);
        tmp16 = simd_andc(tmp7, basis_bits.bit_2);
        tmp17 = simd_not(tmp14);
        tmp18 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp19 = simd_or(basis_bits.bit_4, tmp18);
        tmp20 = simd_or(simd_and(basis_bits.bit_3, tmp17), simd_andc(tmp19, basis_bits.bit_3));
        tmp21 = simd_and(tmp16, tmp20);
        tmp22 = simd_or(tmp15, tmp21);
        tmp23 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp24 = simd_and(tmp7, tmp23);
        tmp25 = simd_andc(tmp24, basis_bits.bit_4);
        tmp26 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp27 = simd_and(basis_bits.bit_5, tmp26);
        tmp28 = simd_andc(tmp25, tmp27);
        tmp29 = simd_or(tmp22, tmp28);
        tmp30 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp31 = simd_andc(tmp30, tmp26);
        tmp32 = simd_and(tmp24, tmp31);
        tmp33 = simd_or(tmp29, tmp32);
        tmp34 = simd_and(tmp30, tmp5);
        tmp35 = simd_and(tmp24, tmp34);
        cc_range_2c0_2ee_2 = simd_or(tmp33, tmp35);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(byte_cb, carryQ.get_carry_in(1), byte_cb_adv));
        tmp36 = simd_and(byte_cb_adv, cc_range_2c0_2ee_2);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp36);
        tmp37 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp38 = simd_and(tmp30, tmp37);
        byte_cd = simd_and(tmp3, tmp38);
        tmp39 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp40 = simd_andc(tmp39, tmp26);
        tmp41 = simd_or(tmp40, tmp6);
        cc_range_374_37a_2 = simd_and(byte_range_b0_bf, tmp41);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(byte_cd, carryQ.get_carry_in(2), byte_cd_adv));
        tmp42 = simd_and(byte_cd_adv, cc_range_374_37a_2);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp42);
        tmp43 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp44 = simd_and(tmp1, tmp43);
        tmp45 = simd_and(tmp39, tmp37);
        byte_d5 = simd_and(tmp44, tmp45);
        tmp46 = simd_and(tmp7, tmp43);
        tmp47 = simd_and(tmp4, tmp37);
        byte_99 = simd_and(tmp46, tmp47);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(byte_d5, carryQ.get_carry_in(3), byte_d5_adv));
        tmp48 = simd_and(byte_d5_adv, byte_99);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp48);
        byte_d9 = simd_and(tmp44, tmp47);
        tmp49 = simd_or(tmp13, tmp26);
        byte_80 = simd_andc(tmp12, tmp49);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(byte_d9, carryQ.get_carry_in(4), byte_d9_adv));
        tmp50 = simd_and(byte_d9_adv, byte_80);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp50);
        byte_db = simd_and(tmp44, tmp11);
        tmp51 = simd_and(tmp24, tmp39);
        tmp52 = simd_not(basis_bits.bit_7);
        tmp53 = simd_or(simd_and(basis_bits.bit_6, tmp52), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
        byte_range_a5_a6 = simd_and(tmp51, tmp53);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(byte_db, carryQ.get_carry_in(5), byte_db_adv));
        tmp54 = simd_and(byte_db_adv, byte_range_a5_a6);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp54);
        tmp55 = simd_and(tmp30, tmp10);
        byte_df = simd_and(tmp44, tmp55);
        tmp56 = simd_andc(tmp39, basis_bits.bit_6);
        tmp57 = simd_or(tmp56, tmp6);
        cc_range_7f4_7fa_2 = simd_and(byte_range_b0_bf, tmp57);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(byte_df, carryQ.get_carry_in(6), byte_df_adv));
        tmp58 = simd_and(byte_df_adv, cc_range_7f4_7fa_2);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp58);
        tmp59 = simd_and(tmp1, tmp23);
        byte_e0 = simd_andc(tmp59, tmp49);
        byte_a0 = simd_andc(tmp24, tmp49);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(byte_e0, carryQ.get_carry_in(7), tmp60));
        sequence_e0_a0 = simd_and(tmp60, byte_a0);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(byte_e0, carryQ.get_carry_in(8), byte_e0_adv));
        tmp61 = simd_and(tmp46, tmp6);
        tmp62 = simd_and(tmp24, tmp40);
        tmp63 = simd_or(tmp61, tmp62);
        tmp64 = simd_andc(tmp4, tmp26);
        tmp65 = simd_and(tmp24, tmp64);
        cc_range_81a_828_3 = simd_or(tmp63, tmp65);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(sequence_e0_a0, carryQ.get_carry_in(9), sequence_e0_a0_adv));
        tmp66 = simd_and(sequence_e0_a0_adv, cc_range_81a_828_3);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp66);
        byte_a5 = simd_and(tmp24, tmp45);
        sequence_e0_a5 = simd_and(byte_e0_adv, byte_a5);
        tmp67 = simd_andc(tmp37, tmp13);
        byte_b1 = simd_and(byte_range_b0_bf, tmp67);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(sequence_e0_a5, carryQ.get_carry_in(10), sequence_e0_a5_adv));
        tmp68 = simd_and(sequence_e0_a5_adv, byte_b1);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp68);
        byte_b9 = simd_and(byte_range_b0_bf, tmp47);
        sequence_e0_b9 = simd_and(byte_e0_adv, byte_b9);
        tmp69 = simd_and(tmp39, tmp5);
        byte_86 = simd_and(tmp12, tmp69);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(sequence_e0_b9, carryQ.get_carry_in(11), sequence_e0_b9_adv));
        tmp70 = simd_and(sequence_e0_b9_adv, byte_86);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp70);
        byte_bb = simd_and(byte_range_b0_bf, tmp11);
        sequence_e0_bb = simd_and(byte_e0_adv, byte_bb);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(sequence_e0_bb, carryQ.get_carry_in(12), sequence_e0_bb_adv));
        tmp71 = simd_and(sequence_e0_bb_adv, byte_86);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp71);
        byte_e1 = simd_and(tmp59, tmp67);
        tmp72 = simd_andc(tmp10, tmp13);
        byte_83 = simd_and(tmp12, tmp72);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(13), tmp73));
        sequence_e1_83 = simd_and(tmp73, byte_83);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(14), byte_e1_adv));
        byte_bc = simd_and(byte_range_b0_bf, tmp31);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(sequence_e1_83, carryQ.get_carry_in(15), sequence_e1_83_adv));
        tmp74 = simd_and(sequence_e1_83_adv, byte_bc);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp74);
        byte_9f = simd_and(tmp46, tmp55);
        sequence_e1_9f = simd_and(byte_e1_adv, byte_9f);
        tmp75 = simd_and(tmp39, tmp10);
        byte_97 = simd_and(tmp46, tmp75);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(sequence_e1_9f, carryQ.get_carry_in(16), sequence_e1_9f_adv));
        tmp76 = simd_and(sequence_e1_9f_adv, byte_97);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp76);
        byte_a1 = simd_and(tmp24, tmp67);
        sequence_e1_a1 = simd_and(byte_e1_adv, byte_a1);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(sequence_e1_a1, carryQ.get_carry_in(17), sequence_e1_a1_adv));
        tmp77 = simd_and(sequence_e1_a1_adv, byte_83);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp77);
        byte_aa = simd_and(tmp24, tmp6);
        sequence_e1_aa = simd_and(byte_e1_adv, byte_aa);
        byte_a7 = simd_and(tmp24, tmp75);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(sequence_e1_aa, carryQ.get_carry_in(18), sequence_e1_aa_adv));
        tmp78 = simd_and(sequence_e1_aa_adv, byte_a7);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp78);
        sequence_e1_b1 = simd_and(byte_e1_adv, byte_b1);
        tmp79 = simd_and(byte_range_b0_bf, basis_bits.bit_4);
        byte_range_b8_bd = simd_andc(tmp79, tmp18);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(sequence_e1_b1, carryQ.get_carry_in(19), sequence_e1_b1_adv));
        tmp80 = simd_and(sequence_e1_b1_adv, byte_range_b8_bd);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp80);
        byte_b4 = simd_and(byte_range_b0_bf, tmp40);
        sequence_e1_b4 = simd_and(byte_e1_adv, byte_b4);
        tmp81 = simd_and(tmp7, basis_bits.bit_2);
        tmp82 = simd_or(basis_bits.bit_3, tmp30);
        byte_range_ac_bf = simd_and(tmp81, tmp82);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(sequence_e1_b4, carryQ.get_carry_in(20), sequence_e1_b4_adv));
        tmp83 = simd_and(sequence_e1_b4_adv, byte_range_ac_bf);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp83);
        byte_b5 = simd_and(byte_range_b0_bf, tmp45);
        sequence_e1_b5 = simd_and(byte_e1_adv, byte_b5);
        tmp84 = simd_or(basis_bits.bit_5, tmp10);
        tmp85 = simd_and(basis_bits.bit_4, tmp84);
        tmp86 = simd_or(basis_bits.bit_3, tmp85);
        tmp87 = simd_and(basis_bits.bit_2, tmp86);
        tmp88 = simd_andc(tmp7, tmp87);
        tmp89 = simd_and(byte_range_b0_bf, tmp64);
        cc_range_1d40_1d78_3 = simd_or(tmp88, tmp89);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(sequence_e1_b5, carryQ.get_carry_in(21), sequence_e1_b5_adv));
        tmp90 = simd_and(sequence_e1_b5_adv, cc_range_1d40_1d78_3);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp90);
        byte_b6 = simd_and(byte_range_b0_bf, tmp69);
        sequence_e1_b6 = simd_and(byte_e1_adv, byte_b6);
        tmp91 = simd_and(basis_bits.bit_3, tmp85);
        tmp92 = simd_or(basis_bits.bit_2, tmp91);
        byte_range_9b_bf = simd_and(tmp7, tmp92);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(sequence_e1_b6, carryQ.get_carry_in(22), sequence_e1_b6_adv));
        tmp93 = simd_and(sequence_e1_b6_adv, byte_range_9b_bf);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp93);
        tmp94 = simd_andc(tmp5, tmp13);
        byte_e2 = simd_and(tmp59, tmp94);
        byte_81 = simd_and(tmp12, tmp67);
        carryQ.cq[23] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(23), tmp95));
        sequence_e2_81 = simd_and(tmp95, byte_81);
        carryQ.cq[24] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(24), byte_e2_adv));
        tmp96 = simd_or(tmp67, tmp55);
        cc_range_2071_207f_3 = simd_and(byte_range_b0_bf, tmp96);
        carryQ.cq[25] = carryout2carry(pablo_blk_Advance(sequence_e2_81, carryQ.get_carry_in(25), sequence_e2_81_adv));
        tmp97 = simd_and(sequence_e2_81_adv, cc_range_2071_207f_3);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp97);
        byte_82 = simd_and(tmp12, tmp94);
        sequence_e2_82 = simd_and(byte_e2_adv, byte_82);
        tmp98 = simd_and(basis_bits.bit_4, tmp27);
        byte_range_90_9c = simd_andc(tmp46, tmp98);
        carryQ.cq[26] = carryout2carry(pablo_blk_Advance(sequence_e2_82, carryQ.get_carry_in(26), sequence_e2_82_adv));
        tmp99 = simd_and(sequence_e2_82_adv, byte_range_90_9c);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp99);
        sequence_e2_b1 = simd_and(byte_e2_adv, byte_b1);
        tmp100 = simd_andc(tmp30, basis_bits.bit_6);
        byte_range_bc_bd = simd_and(byte_range_b0_bf, tmp100);
        carryQ.cq[27] = carryout2carry(pablo_blk_Advance(sequence_e2_b1, carryQ.get_carry_in(27), sequence_e2_b1_adv));
        tmp101 = simd_and(sequence_e2_b1_adv, byte_range_bc_bd);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp101);
        sequence_e2_b5 = simd_and(byte_e2_adv, byte_b5);
        byte_af = simd_and(tmp24, tmp55);
        carryQ.cq[28] = carryout2carry(pablo_blk_Advance(sequence_e2_b5, carryQ.get_carry_in(28), sequence_e2_b5_adv));
        tmp102 = simd_and(sequence_e2_b5_adv, byte_af);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp102);
        byte_b8 = simd_and(byte_range_b0_bf, tmp64);
        sequence_e2_b8 = simd_and(byte_e2_adv, byte_b8);
        carryQ.cq[29] = carryout2carry(pablo_blk_Advance(sequence_e2_b8, carryQ.get_carry_in(29), sequence_e2_b8_adv));
        tmp103 = simd_and(sequence_e2_b8_adv, byte_af);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp103);
        byte_e3 = simd_and(tmp59, tmp72);
        carryQ.cq[30] = carryout2carry(pablo_blk_Advance(byte_e3, carryQ.get_carry_in(30), tmp104));
        sequence_e3_80 = simd_and(tmp104, byte_80);
        carryQ.cq[31] = carryout2carry(pablo_blk_Advance(byte_e3, carryQ.get_carry_in(31), byte_e3_adv));
        tmp105 = simd_and(tmp12, tmp45);
        tmp106 = simd_andc(byte_range_b0_bf, basis_bits.bit_4);
        tmp107 = simd_not(basis_bits.bit_6);
        tmp108 = simd_or(simd_and(basis_bits.bit_5, tmp107), simd_andc(tmp26, basis_bits.bit_5));
        tmp109 = simd_and(tmp106, tmp108);
        tmp110 = simd_or(tmp105, tmp109);
        cc_range_3005_303b_3 = simd_or(tmp110, byte_bb);
        carryQ.cq[32] = carryout2carry(pablo_blk_Advance(sequence_e3_80, carryQ.get_carry_in(32), sequence_e3_80_adv));
        tmp111 = simd_and(sequence_e3_80_adv, cc_range_3005_303b_3);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp111);
        sequence_e3_82 = simd_and(byte_e3_adv, byte_82);
        tmp112 = simd_and(tmp46, tmp30);
        byte_range_9d_9e = simd_and(tmp112, tmp53);
        carryQ.cq[33] = carryout2carry(pablo_blk_Advance(sequence_e3_82, carryQ.get_carry_in(33), sequence_e3_82_adv));
        tmp113 = simd_and(sequence_e3_82_adv, byte_range_9d_9e);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp113);
        sequence_e3_83 = simd_and(byte_e3_adv, byte_83);
        tmp114 = simd_and(byte_range_b0_bf, tmp30);
        byte_range_bc_be = simd_andc(tmp114, tmp10);
        carryQ.cq[34] = carryout2carry(pablo_blk_Advance(sequence_e3_83, carryQ.get_carry_in(34), sequence_e3_83_adv));
        tmp115 = simd_and(sequence_e3_83_adv, byte_range_bc_be);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp115);
        byte_ea = simd_and(tmp59, tmp6);
        carryQ.cq[35] = carryout2carry(pablo_blk_Advance(byte_ea, carryQ.get_carry_in(35), tmp116));
        sequence_ea_80 = simd_and(tmp116, byte_80);
        carryQ.cq[36] = carryout2carry(pablo_blk_Advance(byte_ea, carryQ.get_carry_in(36), byte_ea_adv));
        byte_95 = simd_and(tmp46, tmp45);
        carryQ.cq[37] = carryout2carry(pablo_blk_Advance(sequence_ea_80, carryQ.get_carry_in(37), sequence_ea_80_adv));
        tmp117 = simd_and(sequence_ea_80_adv, byte_95);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp117);
        byte_93 = simd_and(tmp46, tmp72);
        sequence_ea_93 = simd_and(byte_ea_adv, byte_93);
        carryQ.cq[38] = carryout2carry(pablo_blk_Advance(sequence_ea_93, carryQ.get_carry_in(38), sequence_ea_93_adv));
        tmp118 = simd_and(sequence_ea_93_adv, byte_range_b8_bd);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp118);
        byte_98 = simd_and(tmp46, tmp64);
        sequence_ea_98 = simd_and(byte_ea_adv, byte_98);
        byte_8c = simd_and(tmp12, tmp31);
        carryQ.cq[39] = carryout2carry(pablo_blk_Advance(sequence_ea_98, carryQ.get_carry_in(39), sequence_ea_98_adv));
        tmp119 = simd_and(sequence_ea_98_adv, byte_8c);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp119);
        sequence_ea_99 = simd_and(byte_ea_adv, byte_99);
        byte_bf = simd_and(byte_range_b0_bf, tmp55);
        carryQ.cq[40] = carryout2carry(pablo_blk_Advance(sequence_ea_99, carryQ.get_carry_in(40), sequence_ea_99_adv));
        tmp120 = simd_and(sequence_ea_99_adv, byte_bf);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp120);
        byte_9c = simd_and(tmp46, tmp31);
        sequence_ea_9c = simd_and(byte_ea_adv, byte_9c);
        tmp121 = simd_and(basis_bits.bit_5, tmp10);
        tmp122 = simd_or(basis_bits.bit_4, tmp121);
        byte_range_97_9f = simd_and(tmp46, tmp122);
        carryQ.cq[41] = carryout2carry(pablo_blk_Advance(sequence_ea_9c, carryQ.get_carry_in(41), sequence_ea_9c_adv));
        tmp123 = simd_and(sequence_ea_9c_adv, byte_range_97_9f);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp123);
        byte_9d = simd_and(tmp46, tmp38);
        sequence_ea_9d = simd_and(byte_ea_adv, byte_9d);
        byte_b0 = simd_andc(byte_range_b0_bf, tmp49);
        carryQ.cq[42] = carryout2carry(pablo_blk_Advance(sequence_ea_9d, carryQ.get_carry_in(42), sequence_ea_9d_adv));
        tmp124 = simd_and(sequence_ea_9d_adv, byte_b0);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp124);
        byte_9e = simd_and(tmp46, tmp34);
        sequence_ea_9e = simd_and(byte_ea_adv, byte_9e);
        byte_88 = simd_and(tmp12, tmp64);
        carryQ.cq[43] = carryout2carry(pablo_blk_Advance(sequence_ea_9e, carryQ.get_carry_in(43), sequence_ea_9e_adv));
        tmp125 = simd_and(sequence_ea_9e_adv, byte_88);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp125);
        sequence_ea_9f = simd_and(byte_ea_adv, byte_9f);
        tmp126 = simd_andc(tmp4, basis_bits.bit_6);
        byte_range_b8_b9 = simd_and(byte_range_b0_bf, tmp126);
        carryQ.cq[44] = carryout2carry(pablo_blk_Advance(sequence_ea_9f, carryQ.get_carry_in(44), sequence_ea_9f_adv));
        tmp127 = simd_and(sequence_ea_9f_adv, byte_range_b8_b9);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp127);
        sequence_ea_a7 = simd_and(byte_ea_adv, byte_a7);
        byte_8f = simd_and(tmp12, tmp55);
        carryQ.cq[45] = carryout2carry(pablo_blk_Advance(sequence_ea_a7, carryQ.get_carry_in(45), sequence_ea_a7_adv));
        tmp128 = simd_and(sequence_ea_a7_adv, byte_8f);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp128);
        byte_a9 = simd_and(tmp24, tmp47);
        sequence_ea_a9 = simd_and(byte_ea_adv, byte_a9);
        carryQ.cq[46] = carryout2carry(pablo_blk_Advance(sequence_ea_a9, carryQ.get_carry_in(46), sequence_ea_a9_adv));
        tmp129 = simd_and(sequence_ea_a9_adv, byte_b0);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp129);
        byte_ab = simd_and(tmp24, tmp11);
        sequence_ea_ab = simd_and(byte_ea_adv, byte_ab);
        tmp130 = simd_not(tmp26);
        tmp131 = simd_or(simd_and(basis_bits.bit_5, tmp130), simd_andc(tmp10, basis_bits.bit_5));
        tmp132 = simd_and(tmp106, tmp131);
        cc_range_aadd_aaf3_3 = simd_or(byte_9d, tmp132);
        carryQ.cq[47] = carryout2carry(pablo_blk_Advance(sequence_ea_ab, carryQ.get_carry_in(47), sequence_ea_ab_adv));
        tmp133 = simd_and(sequence_ea_ab_adv, cc_range_aadd_aaf3_3);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp133);
        byte_ef = simd_and(tmp59, tmp55);
        byte_bd = simd_and(byte_range_b0_bf, tmp38);
        carryQ.cq[48] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(48), tmp134));
        sequence_ef_bd = simd_and(tmp134, byte_bd);
        carryQ.cq[49] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(49), byte_ef_adv));
        carryQ.cq[50] = carryout2carry(pablo_blk_Advance(sequence_ef_bd, carryQ.get_carry_in(50), sequence_ef_bd_adv));
        tmp135 = simd_and(sequence_ef_bd_adv, byte_b0);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp135);
        byte_be = simd_and(byte_range_b0_bf, tmp34);
        sequence_ef_be = simd_and(byte_ef_adv, byte_be);
        tmp136 = simd_and(tmp30, basis_bits.bit_6);
        byte_range_9e_9f = simd_and(tmp46, tmp136);
        carryQ.cq[51] = carryout2carry(pablo_blk_Advance(sequence_ef_be, carryQ.get_carry_in(51), sequence_ef_be_adv));
        tmp137 = simd_and(sequence_ef_be_adv, byte_range_9e_9f);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp137);
        tmp138 = simd_and(tmp1, tmp8);
        byte_f0 = simd_andc(tmp138, tmp49);
        byte_96 = simd_and(tmp46, tmp69);
        carryQ.cq[52] = carryout2carry(pablo_blk_Advance(byte_f0, carryQ.get_carry_in(52), tmp139));
        sequence_f0_96 = simd_and(tmp139, byte_96);
        carryQ.cq[53] = carryout2carry(pablo_blk_Advance(byte_f0, carryQ.get_carry_in(53), byte_f0_adv));
        carryQ.cq[54] = carryout2carry(pablo_blk_Advance(sequence_f0_96, carryQ.get_carry_in(54), tmp140));
        sequence_f0_96_be = simd_and(tmp140, byte_be);
        carryQ.cq[55] = carryout2carry(pablo_blk_Advance(sequence_f0_96, carryQ.get_carry_in(55), sequence_f0_96_adv));
        tmp141 = simd_or(basis_bits.bit_4, tmp84);
        byte_range_93_9f = simd_and(tmp46, tmp141);
        carryQ.cq[56] = carryout2carry(pablo_blk_Advance(sequence_f0_96_be, carryQ.get_carry_in(56), sequence_f0_96_be_adv));
        tmp142 = simd_and(sequence_f0_96_be_adv, byte_range_93_9f);
        struct_Lm.cc = simd_or(struct_Lm.cc, tmp142);
  }
  CarryArray<57, 0> carryQ;
  };

  struct Nd {
  Nd() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Nd & struct_Nd) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, byte_range_30_39, tmp6, tmp7, tmp8;
		BitBlock tmp9, tmp10, tmp11, byte_d9, tmp12, tmp13, tmp14, byte_range_a0_a9;
		BitBlock byte_d9_adv, tmp15, tmp16, tmp17, byte_db, tmp18, byte_range_b0_b9;
		BitBlock byte_db_adv, tmp19, tmp20, tmp21, byte_df, tmp22, tmp23;
		BitBlock byte_range_80_89, byte_df_adv, tmp24, tmp25, tmp26, tmp27, tmp28;
		BitBlock byte_e0, tmp29, tmp30, byte_a5, tmp31, sequence_e0_a5, byte_e0_adv;
		BitBlock tmp32, tmp33, byte_range_a6_af, sequence_e0_a5_adv, tmp34, tmp35;
		BitBlock byte_a7, sequence_e0_a7, sequence_e0_a7_adv, tmp36, byte_a9;
		BitBlock sequence_e0_a9, sequence_e0_a9_adv, tmp37, byte_ab, sequence_e0_ab;
		BitBlock sequence_e0_ab_adv, tmp38, tmp39, byte_ad, sequence_e0_ad;
		BitBlock sequence_e0_ad_adv, tmp40, byte_af, sequence_e0_af;
		BitBlock sequence_e0_af_adv, tmp41, tmp42, byte_b1, sequence_e0_b1;
		BitBlock sequence_e0_b1_adv, tmp43, tmp44, byte_b3, sequence_e0_b3;
		BitBlock sequence_e0_b3_adv, tmp45, byte_b5, sequence_e0_b5;
		BitBlock sequence_e0_b5_adv, tmp46, byte_b9, sequence_e0_b9, tmp47;
		BitBlock byte_range_90_99, sequence_e0_b9_adv, tmp48, byte_bb, sequence_e0_bb;
		BitBlock sequence_e0_bb_adv, tmp49, tmp50, byte_bc, sequence_e0_bc;
		BitBlock sequence_e0_bc_adv, tmp51, byte_e1, byte_81, tmp52, sequence_e1_81;
		BitBlock byte_e1_adv, sequence_e1_81_adv, tmp53, tmp54, tmp55, byte_82;
		BitBlock sequence_e1_82, sequence_e1_82_adv, tmp56, byte_9f, sequence_e1_9f;
		BitBlock sequence_e1_9f_adv, tmp57, byte_a0, sequence_e1_a0;
		BitBlock sequence_e1_a0_adv, tmp58, sequence_e1_a5, byte_range_86_8f;
		BitBlock sequence_e1_a5_adv, tmp59, sequence_e1_a7, sequence_e1_a7_adv, tmp60;
		BitBlock tmp61, byte_aa, sequence_e1_aa, tmp62, tmp63, cc_range_1a80_1a90_3;
		BitBlock sequence_e1_aa_adv, tmp64, sequence_e1_ad, sequence_e1_ad_adv, tmp65;
		BitBlock tmp66, byte_ae, sequence_e1_ae, sequence_e1_ae_adv, tmp67;
		BitBlock sequence_e1_b1, cc_range_1c40_1c50_3, sequence_e1_b1_adv, tmp68;
		BitBlock byte_ea, tmp69, byte_98, tmp70, sequence_ea_98, byte_ea_adv;
		BitBlock sequence_ea_98_adv, tmp71, byte_a3, sequence_ea_a3;
		BitBlock sequence_ea_a3_adv, tmp72, tmp73, byte_a4, sequence_ea_a4;
		BitBlock sequence_ea_a4_adv, tmp74, sequence_ea_a7, sequence_ea_a7_adv, tmp75;
		BitBlock sequence_ea_a9, sequence_ea_a9_adv, tmp76, sequence_ea_af;
		BitBlock sequence_ea_af_adv, tmp77, byte_ef, tmp78, sequence_ef_bc;
		BitBlock byte_ef_adv, sequence_ef_bc_adv, tmp79, tmp80, byte_f0, byte_90;
		BitBlock tmp81, sequence_f0_90, byte_f0_adv, byte_92, tmp82, sequence_f0_90_92;
		BitBlock sequence_f0_90_adv, sequence_f0_90_92_adv, tmp83, byte_91;
		BitBlock sequence_f0_91, tmp84, sequence_f0_91_81, sequence_f0_91_adv;
		BitBlock sequence_f0_91_81_adv, tmp85, byte_83, sequence_f0_91_83;
		BitBlock sequence_f0_91_83_adv, tmp86, byte_84, sequence_f0_91_84;
		BitBlock byte_range_b6_bf, sequence_f0_91_84_adv, tmp87, byte_87;
		BitBlock sequence_f0_91_87, sequence_f0_91_87_adv, tmp88, byte_9b;
		BitBlock sequence_f0_91_9b, sequence_f0_91_9b_adv, tmp89, byte_9d;
		BitBlock sequence_f0_9d, tmp90, sequence_f0_9d_9f, sequence_f0_9d_adv, tmp91;
		BitBlock tmp92, tmp93, byte_range_8e_bf, sequence_f0_9d_9f_adv, tmp94;




        struct_Nd.cc = simd<1>::constant<0>();
        tmp1 = simd_or(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp2, tmp1);
        tmp4 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
        tmp5 = simd_and(basis_bits.bit_4, tmp4);
        byte_range_30_39 = simd_andc(tmp3, tmp5);
        struct_Nd.cc = simd_or(struct_Nd.cc, byte_range_30_39);
        tmp6 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp7 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp8 = simd_and(tmp6, tmp7);
        tmp9 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp10 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp11 = simd_and(tmp9, tmp10);
        byte_d9 = simd_and(tmp8, tmp11);
        tmp12 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp13 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp14 = simd_and(tmp12, tmp13);
        byte_range_a0_a9 = simd_andc(tmp14, tmp5);
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(byte_d9, carryQ.get_carry_in(0), byte_d9_adv));
        tmp15 = simd_and(byte_d9_adv, byte_range_a0_a9);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp15);
        tmp16 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp17 = simd_and(tmp9, tmp16);
        byte_db = simd_and(tmp8, tmp17);
        tmp18 = simd_and(tmp12, tmp2);
        byte_range_b0_b9 = simd_andc(tmp18, tmp5);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(byte_db, carryQ.get_carry_in(1), byte_db_adv));
        tmp19 = simd_and(byte_db_adv, byte_range_b0_b9);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp19);
        tmp20 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp21 = simd_and(tmp20, tmp16);
        byte_df = simd_and(tmp8, tmp21);
        tmp22 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp23 = simd_andc(tmp12, tmp22);
        byte_range_80_89 = simd_andc(tmp23, tmp5);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(byte_df, carryQ.get_carry_in(2), byte_df_adv));
        tmp24 = simd_and(byte_df_adv, byte_range_80_89);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp24);
        tmp25 = simd_and(tmp6, tmp13);
        tmp26 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp27 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp28 = simd_or(tmp26, tmp27);
        byte_e0 = simd_andc(tmp25, tmp28);
        tmp29 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp30 = simd_and(tmp29, tmp10);
        byte_a5 = simd_and(tmp14, tmp30);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(byte_e0, carryQ.get_carry_in(3), tmp31));
        sequence_e0_a5 = simd_and(tmp31, byte_a5);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(byte_e0, carryQ.get_carry_in(4), byte_e0_adv));
        tmp32 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp33 = simd_or(basis_bits.bit_4, tmp32);
        byte_range_a6_af = simd_and(tmp14, tmp33);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(sequence_e0_a5, carryQ.get_carry_in(5), sequence_e0_a5_adv));
        tmp34 = simd_and(sequence_e0_a5_adv, byte_range_a6_af);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp34);
        tmp35 = simd_and(tmp29, tmp16);
        byte_a7 = simd_and(tmp14, tmp35);
        sequence_e0_a7 = simd_and(byte_e0_adv, byte_a7);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(sequence_e0_a7, carryQ.get_carry_in(6), sequence_e0_a7_adv));
        tmp36 = simd_and(sequence_e0_a7_adv, byte_range_a6_af);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp36);
        byte_a9 = simd_and(tmp14, tmp11);
        sequence_e0_a9 = simd_and(byte_e0_adv, byte_a9);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(sequence_e0_a9, carryQ.get_carry_in(7), sequence_e0_a9_adv));
        tmp37 = simd_and(sequence_e0_a9_adv, byte_range_a6_af);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp37);
        byte_ab = simd_and(tmp14, tmp17);
        sequence_e0_ab = simd_and(byte_e0_adv, byte_ab);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(sequence_e0_ab, carryQ.get_carry_in(8), sequence_e0_ab_adv));
        tmp38 = simd_and(sequence_e0_ab_adv, byte_range_a6_af);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp38);
        tmp39 = simd_and(tmp20, tmp10);
        byte_ad = simd_and(tmp14, tmp39);
        sequence_e0_ad = simd_and(byte_e0_adv, byte_ad);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(sequence_e0_ad, carryQ.get_carry_in(9), sequence_e0_ad_adv));
        tmp40 = simd_and(sequence_e0_ad_adv, byte_range_a6_af);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp40);
        byte_af = simd_and(tmp14, tmp21);
        sequence_e0_af = simd_and(byte_e0_adv, byte_af);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(sequence_e0_af, carryQ.get_carry_in(10), sequence_e0_af_adv));
        tmp41 = simd_and(sequence_e0_af_adv, byte_range_a6_af);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp41);
        tmp42 = simd_andc(tmp10, tmp26);
        byte_b1 = simd_and(tmp18, tmp42);
        sequence_e0_b1 = simd_and(byte_e0_adv, byte_b1);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(sequence_e0_b1, carryQ.get_carry_in(11), sequence_e0_b1_adv));
        tmp43 = simd_and(sequence_e0_b1_adv, byte_range_a6_af);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp43);
        tmp44 = simd_andc(tmp16, tmp26);
        byte_b3 = simd_and(tmp18, tmp44);
        sequence_e0_b3 = simd_and(byte_e0_adv, byte_b3);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(sequence_e0_b3, carryQ.get_carry_in(12), sequence_e0_b3_adv));
        tmp45 = simd_and(sequence_e0_b3_adv, byte_range_a6_af);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp45);
        byte_b5 = simd_and(tmp18, tmp30);
        sequence_e0_b5 = simd_and(byte_e0_adv, byte_b5);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(sequence_e0_b5, carryQ.get_carry_in(13), sequence_e0_b5_adv));
        tmp46 = simd_and(sequence_e0_b5_adv, byte_range_a6_af);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp46);
        byte_b9 = simd_and(tmp18, tmp11);
        sequence_e0_b9 = simd_and(byte_e0_adv, byte_b9);
        tmp47 = simd_and(tmp12, tmp7);
        byte_range_90_99 = simd_andc(tmp47, tmp5);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(sequence_e0_b9, carryQ.get_carry_in(14), sequence_e0_b9_adv));
        tmp48 = simd_and(sequence_e0_b9_adv, byte_range_90_99);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp48);
        byte_bb = simd_and(tmp18, tmp17);
        sequence_e0_bb = simd_and(byte_e0_adv, byte_bb);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(sequence_e0_bb, carryQ.get_carry_in(15), sequence_e0_bb_adv));
        tmp49 = simd_and(sequence_e0_bb_adv, byte_range_90_99);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp49);
        tmp50 = simd_andc(tmp20, tmp27);
        byte_bc = simd_and(tmp18, tmp50);
        sequence_e0_bc = simd_and(byte_e0_adv, byte_bc);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(sequence_e0_bc, carryQ.get_carry_in(16), sequence_e0_bc_adv));
        tmp51 = simd_and(sequence_e0_bc_adv, byte_range_a0_a9);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp51);
        byte_e1 = simd_and(tmp25, tmp42);
        byte_81 = simd_and(tmp23, tmp42);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(17), tmp52));
        sequence_e1_81 = simd_and(tmp52, byte_81);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(18), byte_e1_adv));
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(sequence_e1_81, carryQ.get_carry_in(19), sequence_e1_81_adv));
        tmp53 = simd_and(sequence_e1_81_adv, byte_range_80_89);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp53);
        tmp54 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp55 = simd_andc(tmp54, tmp26);
        byte_82 = simd_and(tmp23, tmp55);
        sequence_e1_82 = simd_and(byte_e1_adv, byte_82);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(sequence_e1_82, carryQ.get_carry_in(20), sequence_e1_82_adv));
        tmp56 = simd_and(sequence_e1_82_adv, byte_range_90_99);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp56);
        byte_9f = simd_and(tmp47, tmp21);
        sequence_e1_9f = simd_and(byte_e1_adv, byte_9f);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(sequence_e1_9f, carryQ.get_carry_in(21), sequence_e1_9f_adv));
        tmp57 = simd_and(sequence_e1_9f_adv, byte_range_a0_a9);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp57);
        byte_a0 = simd_andc(tmp14, tmp28);
        sequence_e1_a0 = simd_and(byte_e1_adv, byte_a0);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(sequence_e1_a0, carryQ.get_carry_in(22), sequence_e1_a0_adv));
        tmp58 = simd_and(sequence_e1_a0_adv, byte_range_90_99);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp58);
        sequence_e1_a5 = simd_and(byte_e1_adv, byte_a5);
        byte_range_86_8f = simd_and(tmp23, tmp33);
        carryQ.cq[23] = carryout2carry(pablo_blk_Advance(sequence_e1_a5, carryQ.get_carry_in(23), sequence_e1_a5_adv));
        tmp59 = simd_and(sequence_e1_a5_adv, byte_range_86_8f);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp59);
        sequence_e1_a7 = simd_and(byte_e1_adv, byte_a7);
        carryQ.cq[24] = carryout2carry(pablo_blk_Advance(sequence_e1_a7, carryQ.get_carry_in(24), sequence_e1_a7_adv));
        tmp60 = simd_and(sequence_e1_a7_adv, byte_range_90_99);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp60);
        tmp61 = simd_and(tmp9, tmp54);
        byte_aa = simd_and(tmp14, tmp61);
        sequence_e1_aa = simd_and(byte_e1_adv, byte_aa);
        tmp62 = simd_andc(tmp22, tmp7);
        tmp63 = simd_andc(tmp12, tmp62);
        cc_range_1a80_1a90_3 = simd_andc(tmp63, tmp5);
        carryQ.cq[25] = carryout2carry(pablo_blk_Advance(sequence_e1_aa, carryQ.get_carry_in(25), sequence_e1_aa_adv));
        tmp64 = simd_and(sequence_e1_aa_adv, cc_range_1a80_1a90_3);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp64);
        sequence_e1_ad = simd_and(byte_e1_adv, byte_ad);
        carryQ.cq[26] = carryout2carry(pablo_blk_Advance(sequence_e1_ad, carryQ.get_carry_in(26), sequence_e1_ad_adv));
        tmp65 = simd_and(sequence_e1_ad_adv, byte_range_90_99);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp65);
        tmp66 = simd_and(tmp20, tmp54);
        byte_ae = simd_and(tmp14, tmp66);
        sequence_e1_ae = simd_and(byte_e1_adv, byte_ae);
        carryQ.cq[27] = carryout2carry(pablo_blk_Advance(sequence_e1_ae, carryQ.get_carry_in(27), sequence_e1_ae_adv));
        tmp67 = simd_and(sequence_e1_ae_adv, byte_range_b0_b9);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp67);
        sequence_e1_b1 = simd_and(byte_e1_adv, byte_b1);
        cc_range_1c40_1c50_3 = simd_andc(tmp63, tmp5);
        carryQ.cq[28] = carryout2carry(pablo_blk_Advance(sequence_e1_b1, carryQ.get_carry_in(28), sequence_e1_b1_adv));
        tmp68 = simd_and(sequence_e1_b1_adv, cc_range_1c40_1c50_3);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp68);
        byte_ea = simd_and(tmp25, tmp61);
        tmp69 = simd_andc(tmp9, tmp27);
        byte_98 = simd_and(tmp47, tmp69);
        carryQ.cq[29] = carryout2carry(pablo_blk_Advance(byte_ea, carryQ.get_carry_in(29), tmp70));
        sequence_ea_98 = simd_and(tmp70, byte_98);
        carryQ.cq[30] = carryout2carry(pablo_blk_Advance(byte_ea, carryQ.get_carry_in(30), byte_ea_adv));
        carryQ.cq[31] = carryout2carry(pablo_blk_Advance(sequence_ea_98, carryQ.get_carry_in(31), sequence_ea_98_adv));
        tmp71 = simd_and(sequence_ea_98_adv, byte_range_a0_a9);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp71);
        byte_a3 = simd_and(tmp14, tmp44);
        sequence_ea_a3 = simd_and(byte_ea_adv, byte_a3);
        carryQ.cq[32] = carryout2carry(pablo_blk_Advance(sequence_ea_a3, carryQ.get_carry_in(32), sequence_ea_a3_adv));
        tmp72 = simd_and(sequence_ea_a3_adv, byte_range_90_99);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp72);
        tmp73 = simd_andc(tmp29, tmp27);
        byte_a4 = simd_and(tmp14, tmp73);
        sequence_ea_a4 = simd_and(byte_ea_adv, byte_a4);
        carryQ.cq[33] = carryout2carry(pablo_blk_Advance(sequence_ea_a4, carryQ.get_carry_in(33), sequence_ea_a4_adv));
        tmp74 = simd_and(sequence_ea_a4_adv, byte_range_80_89);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp74);
        sequence_ea_a7 = simd_and(byte_ea_adv, byte_a7);
        carryQ.cq[34] = carryout2carry(pablo_blk_Advance(sequence_ea_a7, carryQ.get_carry_in(34), sequence_ea_a7_adv));
        tmp75 = simd_and(sequence_ea_a7_adv, byte_range_90_99);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp75);
        sequence_ea_a9 = simd_and(byte_ea_adv, byte_a9);
        carryQ.cq[35] = carryout2carry(pablo_blk_Advance(sequence_ea_a9, carryQ.get_carry_in(35), sequence_ea_a9_adv));
        tmp76 = simd_and(sequence_ea_a9_adv, byte_range_90_99);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp76);
        sequence_ea_af = simd_and(byte_ea_adv, byte_af);
        carryQ.cq[36] = carryout2carry(pablo_blk_Advance(sequence_ea_af, carryQ.get_carry_in(36), sequence_ea_af_adv));
        tmp77 = simd_and(sequence_ea_af_adv, byte_range_b0_b9);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp77);
        byte_ef = simd_and(tmp25, tmp21);
        carryQ.cq[37] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(37), tmp78));
        sequence_ef_bc = simd_and(tmp78, byte_bc);
        carryQ.cq[38] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(38), byte_ef_adv));
        carryQ.cq[39] = carryout2carry(pablo_blk_Advance(sequence_ef_bc, carryQ.get_carry_in(39), sequence_ef_bc_adv));
        tmp79 = simd_and(sequence_ef_bc_adv, byte_range_90_99);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp79);
        tmp80 = simd_and(tmp6, tmp2);
        byte_f0 = simd_andc(tmp80, tmp28);
        byte_90 = simd_andc(tmp47, tmp28);
        carryQ.cq[40] = carryout2carry(pablo_blk_Advance(byte_f0, carryQ.get_carry_in(40), tmp81));
        sequence_f0_90 = simd_and(tmp81, byte_90);
        carryQ.cq[41] = carryout2carry(pablo_blk_Advance(byte_f0, carryQ.get_carry_in(41), byte_f0_adv));
        byte_92 = simd_and(tmp47, tmp55);
        carryQ.cq[42] = carryout2carry(pablo_blk_Advance(sequence_f0_90, carryQ.get_carry_in(42), tmp82));
        sequence_f0_90_92 = simd_and(tmp82, byte_92);
        carryQ.cq[43] = carryout2carry(pablo_blk_Advance(sequence_f0_90, carryQ.get_carry_in(43), sequence_f0_90_adv));
        carryQ.cq[44] = carryout2carry(pablo_blk_Advance(sequence_f0_90_92, carryQ.get_carry_in(44), sequence_f0_90_92_adv));
        tmp83 = simd_and(sequence_f0_90_92_adv, byte_range_a0_a9);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp83);
        byte_91 = simd_and(tmp47, tmp42);
        sequence_f0_91 = simd_and(byte_f0_adv, byte_91);
        carryQ.cq[45] = carryout2carry(pablo_blk_Advance(sequence_f0_91, carryQ.get_carry_in(45), tmp84));
        sequence_f0_91_81 = simd_and(tmp84, byte_81);
        carryQ.cq[46] = carryout2carry(pablo_blk_Advance(sequence_f0_91, carryQ.get_carry_in(46), sequence_f0_91_adv));
        carryQ.cq[47] = carryout2carry(pablo_blk_Advance(sequence_f0_91_81, carryQ.get_carry_in(47), sequence_f0_91_81_adv));
        tmp85 = simd_and(sequence_f0_91_81_adv, byte_range_a6_af);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp85);
        byte_83 = simd_and(tmp23, tmp44);
        sequence_f0_91_83 = simd_and(sequence_f0_91_adv, byte_83);
        carryQ.cq[48] = carryout2carry(pablo_blk_Advance(sequence_f0_91_83, carryQ.get_carry_in(48), sequence_f0_91_83_adv));
        tmp86 = simd_and(sequence_f0_91_83_adv, byte_range_b0_b9);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp86);
        byte_84 = simd_and(tmp23, tmp73);
        sequence_f0_91_84 = simd_and(sequence_f0_91_adv, byte_84);
        byte_range_b6_bf = simd_and(tmp18, tmp33);
        carryQ.cq[49] = carryout2carry(pablo_blk_Advance(sequence_f0_91_84, carryQ.get_carry_in(49), sequence_f0_91_84_adv));
        tmp87 = simd_and(sequence_f0_91_84_adv, byte_range_b6_bf);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp87);
        byte_87 = simd_and(tmp23, tmp35);
        sequence_f0_91_87 = simd_and(sequence_f0_91_adv, byte_87);
        carryQ.cq[50] = carryout2carry(pablo_blk_Advance(sequence_f0_91_87, carryQ.get_carry_in(50), sequence_f0_91_87_adv));
        tmp88 = simd_and(sequence_f0_91_87_adv, byte_range_90_99);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp88);
        byte_9b = simd_and(tmp47, tmp17);
        sequence_f0_91_9b = simd_and(sequence_f0_91_adv, byte_9b);
        carryQ.cq[51] = carryout2carry(pablo_blk_Advance(sequence_f0_91_9b, carryQ.get_carry_in(51), sequence_f0_91_9b_adv));
        tmp89 = simd_and(sequence_f0_91_9b_adv, byte_range_80_89);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp89);
        byte_9d = simd_and(tmp47, tmp39);
        sequence_f0_9d = simd_and(byte_f0_adv, byte_9d);
        carryQ.cq[52] = carryout2carry(pablo_blk_Advance(sequence_f0_9d, carryQ.get_carry_in(52), tmp90));
        sequence_f0_9d_9f = simd_and(tmp90, byte_9f);
        carryQ.cq[53] = carryout2carry(pablo_blk_Advance(sequence_f0_9d, carryQ.get_carry_in(53), sequence_f0_9d_adv));
        tmp91 = simd_and(tmp20, basis_bits.bit_6);
        tmp92 = simd_or(basis_bits.bit_3, tmp91);
        tmp93 = simd_or(basis_bits.bit_2, tmp92);
        byte_range_8e_bf = simd_and(tmp12, tmp93);
        carryQ.cq[54] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_9f, carryQ.get_carry_in(54), sequence_f0_9d_9f_adv));
        tmp94 = simd_and(sequence_f0_9d_9f_adv, byte_range_8e_bf);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp94);
        carryQ.CarryQ_Adjust(55);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Nd & struct_Nd, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, byte_range_30_39, tmp6, tmp7, tmp8;
		BitBlock tmp9, tmp10, tmp11, byte_d9, tmp12, tmp13, tmp14, byte_range_a0_a9;
		BitBlock byte_d9_adv, tmp15, tmp16, tmp17, byte_db, tmp18, byte_range_b0_b9;
		BitBlock byte_db_adv, tmp19, tmp20, tmp21, byte_df, tmp22, tmp23;
		BitBlock byte_range_80_89, byte_df_adv, tmp24, tmp25, tmp26, tmp27, tmp28;
		BitBlock byte_e0, tmp29, tmp30, byte_a5, tmp31, sequence_e0_a5, byte_e0_adv;
		BitBlock tmp32, tmp33, byte_range_a6_af, sequence_e0_a5_adv, tmp34, tmp35;
		BitBlock byte_a7, sequence_e0_a7, sequence_e0_a7_adv, tmp36, byte_a9;
		BitBlock sequence_e0_a9, sequence_e0_a9_adv, tmp37, byte_ab, sequence_e0_ab;
		BitBlock sequence_e0_ab_adv, tmp38, tmp39, byte_ad, sequence_e0_ad;
		BitBlock sequence_e0_ad_adv, tmp40, byte_af, sequence_e0_af;
		BitBlock sequence_e0_af_adv, tmp41, tmp42, byte_b1, sequence_e0_b1;
		BitBlock sequence_e0_b1_adv, tmp43, tmp44, byte_b3, sequence_e0_b3;
		BitBlock sequence_e0_b3_adv, tmp45, byte_b5, sequence_e0_b5;
		BitBlock sequence_e0_b5_adv, tmp46, byte_b9, sequence_e0_b9, tmp47;
		BitBlock byte_range_90_99, sequence_e0_b9_adv, tmp48, byte_bb, sequence_e0_bb;
		BitBlock sequence_e0_bb_adv, tmp49, tmp50, byte_bc, sequence_e0_bc;
		BitBlock sequence_e0_bc_adv, tmp51, byte_e1, byte_81, tmp52, sequence_e1_81;
		BitBlock byte_e1_adv, sequence_e1_81_adv, tmp53, tmp54, tmp55, byte_82;
		BitBlock sequence_e1_82, sequence_e1_82_adv, tmp56, byte_9f, sequence_e1_9f;
		BitBlock sequence_e1_9f_adv, tmp57, byte_a0, sequence_e1_a0;
		BitBlock sequence_e1_a0_adv, tmp58, sequence_e1_a5, byte_range_86_8f;
		BitBlock sequence_e1_a5_adv, tmp59, sequence_e1_a7, sequence_e1_a7_adv, tmp60;
		BitBlock tmp61, byte_aa, sequence_e1_aa, tmp62, tmp63, cc_range_1a80_1a90_3;
		BitBlock sequence_e1_aa_adv, tmp64, sequence_e1_ad, sequence_e1_ad_adv, tmp65;
		BitBlock tmp66, byte_ae, sequence_e1_ae, sequence_e1_ae_adv, tmp67;
		BitBlock sequence_e1_b1, cc_range_1c40_1c50_3, sequence_e1_b1_adv, tmp68;
		BitBlock byte_ea, tmp69, byte_98, tmp70, sequence_ea_98, byte_ea_adv;
		BitBlock sequence_ea_98_adv, tmp71, byte_a3, sequence_ea_a3;
		BitBlock sequence_ea_a3_adv, tmp72, tmp73, byte_a4, sequence_ea_a4;
		BitBlock sequence_ea_a4_adv, tmp74, sequence_ea_a7, sequence_ea_a7_adv, tmp75;
		BitBlock sequence_ea_a9, sequence_ea_a9_adv, tmp76, sequence_ea_af;
		BitBlock sequence_ea_af_adv, tmp77, byte_ef, tmp78, sequence_ef_bc;
		BitBlock byte_ef_adv, sequence_ef_bc_adv, tmp79, tmp80, byte_f0, byte_90;
		BitBlock tmp81, sequence_f0_90, byte_f0_adv, byte_92, tmp82, sequence_f0_90_92;
		BitBlock sequence_f0_90_adv, sequence_f0_90_92_adv, tmp83, byte_91;
		BitBlock sequence_f0_91, tmp84, sequence_f0_91_81, sequence_f0_91_adv;
		BitBlock sequence_f0_91_81_adv, tmp85, byte_83, sequence_f0_91_83;
		BitBlock sequence_f0_91_83_adv, tmp86, byte_84, sequence_f0_91_84;
		BitBlock byte_range_b6_bf, sequence_f0_91_84_adv, tmp87, byte_87;
		BitBlock sequence_f0_91_87, sequence_f0_91_87_adv, tmp88, byte_9b;
		BitBlock sequence_f0_91_9b, sequence_f0_91_9b_adv, tmp89, byte_9d;
		BitBlock sequence_f0_9d, tmp90, sequence_f0_9d_9f, sequence_f0_9d_adv, tmp91;
		BitBlock tmp92, tmp93, byte_range_8e_bf, sequence_f0_9d_9f_adv, tmp94;




        struct_Nd.cc = simd<1>::constant<0>();
        tmp1 = simd_or(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp2, tmp1);
        tmp4 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
        tmp5 = simd_and(basis_bits.bit_4, tmp4);
        byte_range_30_39 = simd_andc(tmp3, tmp5);
        struct_Nd.cc = simd_or(struct_Nd.cc, byte_range_30_39);
        tmp6 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp7 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp8 = simd_and(tmp6, tmp7);
        tmp9 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp10 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp11 = simd_and(tmp9, tmp10);
        byte_d9 = simd_and(tmp8, tmp11);
        tmp12 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp13 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp14 = simd_and(tmp12, tmp13);
        byte_range_a0_a9 = simd_andc(tmp14, tmp5);
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(byte_d9, carryQ.get_carry_in(0), byte_d9_adv));
        tmp15 = simd_and(byte_d9_adv, byte_range_a0_a9);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp15);
        tmp16 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp17 = simd_and(tmp9, tmp16);
        byte_db = simd_and(tmp8, tmp17);
        tmp18 = simd_and(tmp12, tmp2);
        byte_range_b0_b9 = simd_andc(tmp18, tmp5);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(byte_db, carryQ.get_carry_in(1), byte_db_adv));
        tmp19 = simd_and(byte_db_adv, byte_range_b0_b9);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp19);
        tmp20 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp21 = simd_and(tmp20, tmp16);
        byte_df = simd_and(tmp8, tmp21);
        tmp22 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp23 = simd_andc(tmp12, tmp22);
        byte_range_80_89 = simd_andc(tmp23, tmp5);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(byte_df, carryQ.get_carry_in(2), byte_df_adv));
        tmp24 = simd_and(byte_df_adv, byte_range_80_89);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp24);
        tmp25 = simd_and(tmp6, tmp13);
        tmp26 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp27 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp28 = simd_or(tmp26, tmp27);
        byte_e0 = simd_andc(tmp25, tmp28);
        tmp29 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp30 = simd_and(tmp29, tmp10);
        byte_a5 = simd_and(tmp14, tmp30);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(byte_e0, carryQ.get_carry_in(3), tmp31));
        sequence_e0_a5 = simd_and(tmp31, byte_a5);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(byte_e0, carryQ.get_carry_in(4), byte_e0_adv));
        tmp32 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp33 = simd_or(basis_bits.bit_4, tmp32);
        byte_range_a6_af = simd_and(tmp14, tmp33);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(sequence_e0_a5, carryQ.get_carry_in(5), sequence_e0_a5_adv));
        tmp34 = simd_and(sequence_e0_a5_adv, byte_range_a6_af);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp34);
        tmp35 = simd_and(tmp29, tmp16);
        byte_a7 = simd_and(tmp14, tmp35);
        sequence_e0_a7 = simd_and(byte_e0_adv, byte_a7);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(sequence_e0_a7, carryQ.get_carry_in(6), sequence_e0_a7_adv));
        tmp36 = simd_and(sequence_e0_a7_adv, byte_range_a6_af);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp36);
        byte_a9 = simd_and(tmp14, tmp11);
        sequence_e0_a9 = simd_and(byte_e0_adv, byte_a9);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(sequence_e0_a9, carryQ.get_carry_in(7), sequence_e0_a9_adv));
        tmp37 = simd_and(sequence_e0_a9_adv, byte_range_a6_af);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp37);
        byte_ab = simd_and(tmp14, tmp17);
        sequence_e0_ab = simd_and(byte_e0_adv, byte_ab);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(sequence_e0_ab, carryQ.get_carry_in(8), sequence_e0_ab_adv));
        tmp38 = simd_and(sequence_e0_ab_adv, byte_range_a6_af);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp38);
        tmp39 = simd_and(tmp20, tmp10);
        byte_ad = simd_and(tmp14, tmp39);
        sequence_e0_ad = simd_and(byte_e0_adv, byte_ad);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(sequence_e0_ad, carryQ.get_carry_in(9), sequence_e0_ad_adv));
        tmp40 = simd_and(sequence_e0_ad_adv, byte_range_a6_af);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp40);
        byte_af = simd_and(tmp14, tmp21);
        sequence_e0_af = simd_and(byte_e0_adv, byte_af);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(sequence_e0_af, carryQ.get_carry_in(10), sequence_e0_af_adv));
        tmp41 = simd_and(sequence_e0_af_adv, byte_range_a6_af);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp41);
        tmp42 = simd_andc(tmp10, tmp26);
        byte_b1 = simd_and(tmp18, tmp42);
        sequence_e0_b1 = simd_and(byte_e0_adv, byte_b1);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(sequence_e0_b1, carryQ.get_carry_in(11), sequence_e0_b1_adv));
        tmp43 = simd_and(sequence_e0_b1_adv, byte_range_a6_af);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp43);
        tmp44 = simd_andc(tmp16, tmp26);
        byte_b3 = simd_and(tmp18, tmp44);
        sequence_e0_b3 = simd_and(byte_e0_adv, byte_b3);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(sequence_e0_b3, carryQ.get_carry_in(12), sequence_e0_b3_adv));
        tmp45 = simd_and(sequence_e0_b3_adv, byte_range_a6_af);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp45);
        byte_b5 = simd_and(tmp18, tmp30);
        sequence_e0_b5 = simd_and(byte_e0_adv, byte_b5);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(sequence_e0_b5, carryQ.get_carry_in(13), sequence_e0_b5_adv));
        tmp46 = simd_and(sequence_e0_b5_adv, byte_range_a6_af);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp46);
        byte_b9 = simd_and(tmp18, tmp11);
        sequence_e0_b9 = simd_and(byte_e0_adv, byte_b9);
        tmp47 = simd_and(tmp12, tmp7);
        byte_range_90_99 = simd_andc(tmp47, tmp5);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(sequence_e0_b9, carryQ.get_carry_in(14), sequence_e0_b9_adv));
        tmp48 = simd_and(sequence_e0_b9_adv, byte_range_90_99);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp48);
        byte_bb = simd_and(tmp18, tmp17);
        sequence_e0_bb = simd_and(byte_e0_adv, byte_bb);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(sequence_e0_bb, carryQ.get_carry_in(15), sequence_e0_bb_adv));
        tmp49 = simd_and(sequence_e0_bb_adv, byte_range_90_99);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp49);
        tmp50 = simd_andc(tmp20, tmp27);
        byte_bc = simd_and(tmp18, tmp50);
        sequence_e0_bc = simd_and(byte_e0_adv, byte_bc);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(sequence_e0_bc, carryQ.get_carry_in(16), sequence_e0_bc_adv));
        tmp51 = simd_and(sequence_e0_bc_adv, byte_range_a0_a9);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp51);
        byte_e1 = simd_and(tmp25, tmp42);
        byte_81 = simd_and(tmp23, tmp42);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(17), tmp52));
        sequence_e1_81 = simd_and(tmp52, byte_81);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(18), byte_e1_adv));
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(sequence_e1_81, carryQ.get_carry_in(19), sequence_e1_81_adv));
        tmp53 = simd_and(sequence_e1_81_adv, byte_range_80_89);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp53);
        tmp54 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp55 = simd_andc(tmp54, tmp26);
        byte_82 = simd_and(tmp23, tmp55);
        sequence_e1_82 = simd_and(byte_e1_adv, byte_82);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(sequence_e1_82, carryQ.get_carry_in(20), sequence_e1_82_adv));
        tmp56 = simd_and(sequence_e1_82_adv, byte_range_90_99);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp56);
        byte_9f = simd_and(tmp47, tmp21);
        sequence_e1_9f = simd_and(byte_e1_adv, byte_9f);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(sequence_e1_9f, carryQ.get_carry_in(21), sequence_e1_9f_adv));
        tmp57 = simd_and(sequence_e1_9f_adv, byte_range_a0_a9);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp57);
        byte_a0 = simd_andc(tmp14, tmp28);
        sequence_e1_a0 = simd_and(byte_e1_adv, byte_a0);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(sequence_e1_a0, carryQ.get_carry_in(22), sequence_e1_a0_adv));
        tmp58 = simd_and(sequence_e1_a0_adv, byte_range_90_99);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp58);
        sequence_e1_a5 = simd_and(byte_e1_adv, byte_a5);
        byte_range_86_8f = simd_and(tmp23, tmp33);
        carryQ.cq[23] = carryout2carry(pablo_blk_Advance(sequence_e1_a5, carryQ.get_carry_in(23), sequence_e1_a5_adv));
        tmp59 = simd_and(sequence_e1_a5_adv, byte_range_86_8f);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp59);
        sequence_e1_a7 = simd_and(byte_e1_adv, byte_a7);
        carryQ.cq[24] = carryout2carry(pablo_blk_Advance(sequence_e1_a7, carryQ.get_carry_in(24), sequence_e1_a7_adv));
        tmp60 = simd_and(sequence_e1_a7_adv, byte_range_90_99);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp60);
        tmp61 = simd_and(tmp9, tmp54);
        byte_aa = simd_and(tmp14, tmp61);
        sequence_e1_aa = simd_and(byte_e1_adv, byte_aa);
        tmp62 = simd_andc(tmp22, tmp7);
        tmp63 = simd_andc(tmp12, tmp62);
        cc_range_1a80_1a90_3 = simd_andc(tmp63, tmp5);
        carryQ.cq[25] = carryout2carry(pablo_blk_Advance(sequence_e1_aa, carryQ.get_carry_in(25), sequence_e1_aa_adv));
        tmp64 = simd_and(sequence_e1_aa_adv, cc_range_1a80_1a90_3);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp64);
        sequence_e1_ad = simd_and(byte_e1_adv, byte_ad);
        carryQ.cq[26] = carryout2carry(pablo_blk_Advance(sequence_e1_ad, carryQ.get_carry_in(26), sequence_e1_ad_adv));
        tmp65 = simd_and(sequence_e1_ad_adv, byte_range_90_99);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp65);
        tmp66 = simd_and(tmp20, tmp54);
        byte_ae = simd_and(tmp14, tmp66);
        sequence_e1_ae = simd_and(byte_e1_adv, byte_ae);
        carryQ.cq[27] = carryout2carry(pablo_blk_Advance(sequence_e1_ae, carryQ.get_carry_in(27), sequence_e1_ae_adv));
        tmp67 = simd_and(sequence_e1_ae_adv, byte_range_b0_b9);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp67);
        sequence_e1_b1 = simd_and(byte_e1_adv, byte_b1);
        cc_range_1c40_1c50_3 = simd_andc(tmp63, tmp5);
        carryQ.cq[28] = carryout2carry(pablo_blk_Advance(sequence_e1_b1, carryQ.get_carry_in(28), sequence_e1_b1_adv));
        tmp68 = simd_and(sequence_e1_b1_adv, cc_range_1c40_1c50_3);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp68);
        byte_ea = simd_and(tmp25, tmp61);
        tmp69 = simd_andc(tmp9, tmp27);
        byte_98 = simd_and(tmp47, tmp69);
        carryQ.cq[29] = carryout2carry(pablo_blk_Advance(byte_ea, carryQ.get_carry_in(29), tmp70));
        sequence_ea_98 = simd_and(tmp70, byte_98);
        carryQ.cq[30] = carryout2carry(pablo_blk_Advance(byte_ea, carryQ.get_carry_in(30), byte_ea_adv));
        carryQ.cq[31] = carryout2carry(pablo_blk_Advance(sequence_ea_98, carryQ.get_carry_in(31), sequence_ea_98_adv));
        tmp71 = simd_and(sequence_ea_98_adv, byte_range_a0_a9);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp71);
        byte_a3 = simd_and(tmp14, tmp44);
        sequence_ea_a3 = simd_and(byte_ea_adv, byte_a3);
        carryQ.cq[32] = carryout2carry(pablo_blk_Advance(sequence_ea_a3, carryQ.get_carry_in(32), sequence_ea_a3_adv));
        tmp72 = simd_and(sequence_ea_a3_adv, byte_range_90_99);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp72);
        tmp73 = simd_andc(tmp29, tmp27);
        byte_a4 = simd_and(tmp14, tmp73);
        sequence_ea_a4 = simd_and(byte_ea_adv, byte_a4);
        carryQ.cq[33] = carryout2carry(pablo_blk_Advance(sequence_ea_a4, carryQ.get_carry_in(33), sequence_ea_a4_adv));
        tmp74 = simd_and(sequence_ea_a4_adv, byte_range_80_89);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp74);
        sequence_ea_a7 = simd_and(byte_ea_adv, byte_a7);
        carryQ.cq[34] = carryout2carry(pablo_blk_Advance(sequence_ea_a7, carryQ.get_carry_in(34), sequence_ea_a7_adv));
        tmp75 = simd_and(sequence_ea_a7_adv, byte_range_90_99);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp75);
        sequence_ea_a9 = simd_and(byte_ea_adv, byte_a9);
        carryQ.cq[35] = carryout2carry(pablo_blk_Advance(sequence_ea_a9, carryQ.get_carry_in(35), sequence_ea_a9_adv));
        tmp76 = simd_and(sequence_ea_a9_adv, byte_range_90_99);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp76);
        sequence_ea_af = simd_and(byte_ea_adv, byte_af);
        carryQ.cq[36] = carryout2carry(pablo_blk_Advance(sequence_ea_af, carryQ.get_carry_in(36), sequence_ea_af_adv));
        tmp77 = simd_and(sequence_ea_af_adv, byte_range_b0_b9);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp77);
        byte_ef = simd_and(tmp25, tmp21);
        carryQ.cq[37] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(37), tmp78));
        sequence_ef_bc = simd_and(tmp78, byte_bc);
        carryQ.cq[38] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(38), byte_ef_adv));
        carryQ.cq[39] = carryout2carry(pablo_blk_Advance(sequence_ef_bc, carryQ.get_carry_in(39), sequence_ef_bc_adv));
        tmp79 = simd_and(sequence_ef_bc_adv, byte_range_90_99);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp79);
        tmp80 = simd_and(tmp6, tmp2);
        byte_f0 = simd_andc(tmp80, tmp28);
        byte_90 = simd_andc(tmp47, tmp28);
        carryQ.cq[40] = carryout2carry(pablo_blk_Advance(byte_f0, carryQ.get_carry_in(40), tmp81));
        sequence_f0_90 = simd_and(tmp81, byte_90);
        carryQ.cq[41] = carryout2carry(pablo_blk_Advance(byte_f0, carryQ.get_carry_in(41), byte_f0_adv));
        byte_92 = simd_and(tmp47, tmp55);
        carryQ.cq[42] = carryout2carry(pablo_blk_Advance(sequence_f0_90, carryQ.get_carry_in(42), tmp82));
        sequence_f0_90_92 = simd_and(tmp82, byte_92);
        carryQ.cq[43] = carryout2carry(pablo_blk_Advance(sequence_f0_90, carryQ.get_carry_in(43), sequence_f0_90_adv));
        carryQ.cq[44] = carryout2carry(pablo_blk_Advance(sequence_f0_90_92, carryQ.get_carry_in(44), sequence_f0_90_92_adv));
        tmp83 = simd_and(sequence_f0_90_92_adv, byte_range_a0_a9);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp83);
        byte_91 = simd_and(tmp47, tmp42);
        sequence_f0_91 = simd_and(byte_f0_adv, byte_91);
        carryQ.cq[45] = carryout2carry(pablo_blk_Advance(sequence_f0_91, carryQ.get_carry_in(45), tmp84));
        sequence_f0_91_81 = simd_and(tmp84, byte_81);
        carryQ.cq[46] = carryout2carry(pablo_blk_Advance(sequence_f0_91, carryQ.get_carry_in(46), sequence_f0_91_adv));
        carryQ.cq[47] = carryout2carry(pablo_blk_Advance(sequence_f0_91_81, carryQ.get_carry_in(47), sequence_f0_91_81_adv));
        tmp85 = simd_and(sequence_f0_91_81_adv, byte_range_a6_af);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp85);
        byte_83 = simd_and(tmp23, tmp44);
        sequence_f0_91_83 = simd_and(sequence_f0_91_adv, byte_83);
        carryQ.cq[48] = carryout2carry(pablo_blk_Advance(sequence_f0_91_83, carryQ.get_carry_in(48), sequence_f0_91_83_adv));
        tmp86 = simd_and(sequence_f0_91_83_adv, byte_range_b0_b9);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp86);
        byte_84 = simd_and(tmp23, tmp73);
        sequence_f0_91_84 = simd_and(sequence_f0_91_adv, byte_84);
        byte_range_b6_bf = simd_and(tmp18, tmp33);
        carryQ.cq[49] = carryout2carry(pablo_blk_Advance(sequence_f0_91_84, carryQ.get_carry_in(49), sequence_f0_91_84_adv));
        tmp87 = simd_and(sequence_f0_91_84_adv, byte_range_b6_bf);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp87);
        byte_87 = simd_and(tmp23, tmp35);
        sequence_f0_91_87 = simd_and(sequence_f0_91_adv, byte_87);
        carryQ.cq[50] = carryout2carry(pablo_blk_Advance(sequence_f0_91_87, carryQ.get_carry_in(50), sequence_f0_91_87_adv));
        tmp88 = simd_and(sequence_f0_91_87_adv, byte_range_90_99);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp88);
        byte_9b = simd_and(tmp47, tmp17);
        sequence_f0_91_9b = simd_and(sequence_f0_91_adv, byte_9b);
        carryQ.cq[51] = carryout2carry(pablo_blk_Advance(sequence_f0_91_9b, carryQ.get_carry_in(51), sequence_f0_91_9b_adv));
        tmp89 = simd_and(sequence_f0_91_9b_adv, byte_range_80_89);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp89);
        byte_9d = simd_and(tmp47, tmp39);
        sequence_f0_9d = simd_and(byte_f0_adv, byte_9d);
        carryQ.cq[52] = carryout2carry(pablo_blk_Advance(sequence_f0_9d, carryQ.get_carry_in(52), tmp90));
        sequence_f0_9d_9f = simd_and(tmp90, byte_9f);
        carryQ.cq[53] = carryout2carry(pablo_blk_Advance(sequence_f0_9d, carryQ.get_carry_in(53), sequence_f0_9d_adv));
        tmp91 = simd_and(tmp20, basis_bits.bit_6);
        tmp92 = simd_or(basis_bits.bit_3, tmp91);
        tmp93 = simd_or(basis_bits.bit_2, tmp92);
        byte_range_8e_bf = simd_and(tmp12, tmp93);
        carryQ.cq[54] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_9f, carryQ.get_carry_in(54), sequence_f0_9d_9f_adv));
        tmp94 = simd_and(sequence_f0_9d_9f_adv, byte_range_8e_bf);
        struct_Nd.cc = simd_or(struct_Nd.cc, tmp94);
  }
  CarryArray<55, 0> carryQ;
  };

  struct Pc {
  Pc() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Pc & struct_Pc) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, byte_5f, tmp7, tmp8, tmp9, tmp10;
		BitBlock tmp11, tmp12, byte_e2, tmp13, tmp14, tmp15, tmp16, tmp17, byte_80;
		BitBlock tmp18, sequence_e2_80, byte_e2_adv, tmp19, tmp20, byte_bf;
		BitBlock sequence_e2_80_adv, tmp21, tmp22, tmp23, byte_81, sequence_e2_81;
		BitBlock tmp24, tmp25, tmp26, tmp27, cc_range_2040_2054_3, sequence_e2_81_adv;
		BitBlock tmp28, byte_ef, tmp29, tmp30, byte_b8, tmp31, sequence_ef_b8;
		BitBlock byte_ef_adv, tmp32, tmp33, tmp34, byte_range_b3_b4;
		BitBlock sequence_ef_b8_adv, tmp35, tmp36, byte_b9, sequence_ef_b9, tmp37;
		BitBlock byte_range_8d_8f, sequence_ef_b9_adv, tmp38, tmp39, byte_bc;
		BitBlock sequence_ef_bc, sequence_ef_bc_adv, tmp40;




        struct_Pc.cc = simd<1>::constant<0>();
        tmp1 = simd_andc(basis_bits.bit_1, basis_bits.bit_0);
        tmp2 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp3 = simd_and(tmp1, tmp2);
        tmp4 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_and(tmp4, tmp5);
        byte_5f = simd_and(tmp3, tmp6);
        struct_Pc.cc = simd_or(struct_Pc.cc, byte_5f);
        tmp7 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp11 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp12 = simd_andc(tmp11, tmp10);
        byte_e2 = simd_and(tmp9, tmp12);
        tmp13 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp14 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp15 = simd_andc(tmp13, tmp14);
        tmp16 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp17 = simd_or(tmp10, tmp16);
        byte_80 = simd_andc(tmp15, tmp17);
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(0), tmp18));
        sequence_e2_80 = simd_and(tmp18, byte_80);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(1), byte_e2_adv));
        tmp19 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp20 = simd_and(tmp13, tmp19);
        byte_bf = simd_and(tmp20, tmp6);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(sequence_e2_80, carryQ.get_carry_in(2), sequence_e2_80_adv));
        tmp21 = simd_and(sequence_e2_80_adv, byte_bf);
        struct_Pc.cc = simd_or(struct_Pc.cc, tmp21);
        tmp22 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp23 = simd_andc(tmp22, tmp10);
        byte_81 = simd_and(tmp15, tmp23);
        sequence_e2_81 = simd_and(byte_e2_adv, byte_81);
        tmp24 = simd_and(tmp13, tmp2);
        tmp25 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp26 = simd_andc(tmp25, tmp16);
        tmp27 = simd_and(tmp24, tmp26);
        cc_range_2040_2054_3 = simd_or(byte_80, tmp27);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(sequence_e2_81, carryQ.get_carry_in(3), sequence_e2_81_adv));
        tmp28 = simd_and(sequence_e2_81_adv, cc_range_2040_2054_3);
        struct_Pc.cc = simd_or(struct_Pc.cc, tmp28);
        byte_ef = simd_and(tmp9, tmp6);
        tmp29 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp30 = simd_andc(tmp29, tmp16);
        byte_b8 = simd_and(tmp20, tmp30);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(4), tmp31));
        sequence_ef_b8 = simd_and(tmp31, byte_b8);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(5), byte_ef_adv));
        tmp32 = simd_andc(tmp20, basis_bits.bit_4);
        tmp33 = simd_not(tmp16);
        tmp34 = simd_or(simd_and(basis_bits.bit_5, tmp33), simd_andc(tmp5, basis_bits.bit_5));
        byte_range_b3_b4 = simd_and(tmp32, tmp34);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(sequence_ef_b8, carryQ.get_carry_in(6), sequence_ef_b8_adv));
        tmp35 = simd_and(sequence_ef_b8_adv, byte_range_b3_b4);
        struct_Pc.cc = simd_or(struct_Pc.cc, tmp35);
        tmp36 = simd_and(tmp29, tmp22);
        byte_b9 = simd_and(tmp20, tmp36);
        sequence_ef_b9 = simd_and(byte_ef_adv, byte_b9);
        tmp37 = simd_and(tmp15, tmp4);
        byte_range_8d_8f = simd_and(tmp37, tmp16);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(sequence_ef_b9, carryQ.get_carry_in(7), sequence_ef_b9_adv));
        tmp38 = simd_and(sequence_ef_b9_adv, byte_range_8d_8f);
        struct_Pc.cc = simd_or(struct_Pc.cc, tmp38);
        tmp39 = simd_andc(tmp4, tmp16);
        byte_bc = simd_and(tmp20, tmp39);
        sequence_ef_bc = simd_and(byte_ef_adv, byte_bc);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(sequence_ef_bc, carryQ.get_carry_in(8), sequence_ef_bc_adv));
        tmp40 = simd_and(sequence_ef_bc_adv, byte_bf);
        struct_Pc.cc = simd_or(struct_Pc.cc, tmp40);
        carryQ.CarryQ_Adjust(9);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Pc & struct_Pc, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, byte_5f, tmp7, tmp8, tmp9, tmp10;
		BitBlock tmp11, tmp12, byte_e2, tmp13, tmp14, tmp15, tmp16, tmp17, byte_80;
		BitBlock tmp18, sequence_e2_80, byte_e2_adv, tmp19, tmp20, byte_bf;
		BitBlock sequence_e2_80_adv, tmp21, tmp22, tmp23, byte_81, sequence_e2_81;
		BitBlock tmp24, tmp25, tmp26, tmp27, cc_range_2040_2054_3, sequence_e2_81_adv;
		BitBlock tmp28, byte_ef, tmp29, tmp30, byte_b8, tmp31, sequence_ef_b8;
		BitBlock byte_ef_adv, tmp32, tmp33, tmp34, byte_range_b3_b4;
		BitBlock sequence_ef_b8_adv, tmp35, tmp36, byte_b9, sequence_ef_b9, tmp37;
		BitBlock byte_range_8d_8f, sequence_ef_b9_adv, tmp38, tmp39, byte_bc;
		BitBlock sequence_ef_bc, sequence_ef_bc_adv, tmp40;




        struct_Pc.cc = simd<1>::constant<0>();
        tmp1 = simd_andc(basis_bits.bit_1, basis_bits.bit_0);
        tmp2 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp3 = simd_and(tmp1, tmp2);
        tmp4 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_and(tmp4, tmp5);
        byte_5f = simd_and(tmp3, tmp6);
        struct_Pc.cc = simd_or(struct_Pc.cc, byte_5f);
        tmp7 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp11 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp12 = simd_andc(tmp11, tmp10);
        byte_e2 = simd_and(tmp9, tmp12);
        tmp13 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp14 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp15 = simd_andc(tmp13, tmp14);
        tmp16 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp17 = simd_or(tmp10, tmp16);
        byte_80 = simd_andc(tmp15, tmp17);
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(0), tmp18));
        sequence_e2_80 = simd_and(tmp18, byte_80);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(1), byte_e2_adv));
        tmp19 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp20 = simd_and(tmp13, tmp19);
        byte_bf = simd_and(tmp20, tmp6);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(sequence_e2_80, carryQ.get_carry_in(2), sequence_e2_80_adv));
        tmp21 = simd_and(sequence_e2_80_adv, byte_bf);
        struct_Pc.cc = simd_or(struct_Pc.cc, tmp21);
        tmp22 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp23 = simd_andc(tmp22, tmp10);
        byte_81 = simd_and(tmp15, tmp23);
        sequence_e2_81 = simd_and(byte_e2_adv, byte_81);
        tmp24 = simd_and(tmp13, tmp2);
        tmp25 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp26 = simd_andc(tmp25, tmp16);
        tmp27 = simd_and(tmp24, tmp26);
        cc_range_2040_2054_3 = simd_or(byte_80, tmp27);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(sequence_e2_81, carryQ.get_carry_in(3), sequence_e2_81_adv));
        tmp28 = simd_and(sequence_e2_81_adv, cc_range_2040_2054_3);
        struct_Pc.cc = simd_or(struct_Pc.cc, tmp28);
        byte_ef = simd_and(tmp9, tmp6);
        tmp29 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp30 = simd_andc(tmp29, tmp16);
        byte_b8 = simd_and(tmp20, tmp30);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(4), tmp31));
        sequence_ef_b8 = simd_and(tmp31, byte_b8);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(5), byte_ef_adv));
        tmp32 = simd_andc(tmp20, basis_bits.bit_4);
        tmp33 = simd_not(tmp16);
        tmp34 = simd_or(simd_and(basis_bits.bit_5, tmp33), simd_andc(tmp5, basis_bits.bit_5));
        byte_range_b3_b4 = simd_and(tmp32, tmp34);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(sequence_ef_b8, carryQ.get_carry_in(6), sequence_ef_b8_adv));
        tmp35 = simd_and(sequence_ef_b8_adv, byte_range_b3_b4);
        struct_Pc.cc = simd_or(struct_Pc.cc, tmp35);
        tmp36 = simd_and(tmp29, tmp22);
        byte_b9 = simd_and(tmp20, tmp36);
        sequence_ef_b9 = simd_and(byte_ef_adv, byte_b9);
        tmp37 = simd_and(tmp15, tmp4);
        byte_range_8d_8f = simd_and(tmp37, tmp16);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(sequence_ef_b9, carryQ.get_carry_in(7), sequence_ef_b9_adv));
        tmp38 = simd_and(sequence_ef_b9_adv, byte_range_8d_8f);
        struct_Pc.cc = simd_or(struct_Pc.cc, tmp38);
        tmp39 = simd_andc(tmp4, tmp16);
        byte_bc = simd_and(tmp20, tmp39);
        sequence_ef_bc = simd_and(byte_ef_adv, byte_bc);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(sequence_ef_bc, carryQ.get_carry_in(8), sequence_ef_bc_adv));
        tmp40 = simd_and(sequence_ef_bc_adv, byte_bf);
        struct_Pc.cc = simd_or(struct_Pc.cc, tmp40);
  }
  CarryArray<9, 0> carryQ;
  };

  struct Lt {
  Lt() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Lt & struct_Lt) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, byte_c7, tmp7, tmp8, tmp9, tmp10;
		BitBlock tmp11, tmp12, tmp13, tmp14, tmp15, tmp16, tmp17, tmp18, tmp19, tmp20;
		BitBlock tmp21, tmp22, tmp23, cc_range_1c5_1f2_2, byte_c7_adv, tmp24, tmp25;
		BitBlock tmp26, tmp27, byte_e1, tmp28, tmp29, byte_be, tmp30, sequence_e1_be;
		BitBlock byte_e1_adv, tmp31, tmp32, tmp33, tmp34, tmp35, tmp36, tmp37;
		BitBlock cc_range_1f88_1fbc_3, sequence_e1_be_adv, tmp38, tmp39, byte_bf;
		BitBlock sequence_e1_bf, tmp40, tmp41, cc_range_1fcc_1ffc_3;
		BitBlock sequence_e1_bf_adv, tmp42;




        struct_Lt.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp1, tmp2);
        tmp4 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp5 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_and(tmp4, tmp5);
        byte_c7 = simd_and(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_andc(tmp7, tmp2);
        tmp9 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp10 = simd_and(tmp4, tmp9);
        tmp11 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp12 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp13 = simd_andc(tmp11, tmp12);
        tmp14 = simd_or(tmp10, tmp13);
        tmp15 = simd_and(tmp11, tmp5);
        tmp16 = simd_or(tmp14, tmp15);
        tmp17 = simd_and(tmp8, tmp16);
        tmp18 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp19 = simd_and(tmp7, tmp18);
        tmp20 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp21 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp22 = simd_andc(tmp21, tmp20);
        tmp23 = simd_and(tmp19, tmp22);
        cc_range_1c5_1f2_2 = simd_or(tmp17, tmp23);
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(byte_c7, carryQ.get_carry_in(0), byte_c7_adv));
        tmp24 = simd_and(byte_c7_adv, cc_range_1c5_1f2_2);
        struct_Lt.cc = simd_or(struct_Lt.cc, tmp24);
        tmp25 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp26 = simd_and(tmp1, tmp25);
        tmp27 = simd_andc(tmp9, tmp20);
        byte_e1 = simd_and(tmp26, tmp27);
        tmp28 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp29 = simd_and(tmp28, tmp21);
        byte_be = simd_and(tmp19, tmp29);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(1), tmp30));
        sequence_e1_be = simd_and(tmp30, byte_be);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(2), byte_e1_adv));
        tmp31 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp32 = simd_andc(tmp2, tmp31);
        tmp33 = simd_andc(tmp32, tmp25);
        tmp34 = simd_andc(tmp7, tmp33);
        tmp35 = simd_and(basis_bits.bit_4, tmp34);
        tmp36 = simd_andc(tmp28, tmp12);
        tmp37 = simd_and(tmp19, tmp36);
        cc_range_1f88_1fbc_3 = simd_or(tmp35, tmp37);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(sequence_e1_be, carryQ.get_carry_in(3), sequence_e1_be_adv));
        tmp38 = simd_and(sequence_e1_be_adv, cc_range_1f88_1fbc_3);
        struct_Lt.cc = simd_or(struct_Lt.cc, tmp38);
        tmp39 = simd_and(tmp28, tmp5);
        byte_bf = simd_and(tmp19, tmp39);
        sequence_e1_bf = simd_and(byte_e1_adv, byte_bf);
        tmp40 = simd_andc(tmp2, tmp18);
        tmp41 = simd_andc(tmp7, tmp40);
        cc_range_1fcc_1ffc_3 = simd_and(tmp36, tmp41);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(sequence_e1_bf, carryQ.get_carry_in(4), sequence_e1_bf_adv));
        tmp42 = simd_and(sequence_e1_bf_adv, cc_range_1fcc_1ffc_3);
        struct_Lt.cc = simd_or(struct_Lt.cc, tmp42);
        carryQ.CarryQ_Adjust(5);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Lt & struct_Lt, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, byte_c7, tmp7, tmp8, tmp9, tmp10;
		BitBlock tmp11, tmp12, tmp13, tmp14, tmp15, tmp16, tmp17, tmp18, tmp19, tmp20;
		BitBlock tmp21, tmp22, tmp23, cc_range_1c5_1f2_2, byte_c7_adv, tmp24, tmp25;
		BitBlock tmp26, tmp27, byte_e1, tmp28, tmp29, byte_be, tmp30, sequence_e1_be;
		BitBlock byte_e1_adv, tmp31, tmp32, tmp33, tmp34, tmp35, tmp36, tmp37;
		BitBlock cc_range_1f88_1fbc_3, sequence_e1_be_adv, tmp38, tmp39, byte_bf;
		BitBlock sequence_e1_bf, tmp40, tmp41, cc_range_1fcc_1ffc_3;
		BitBlock sequence_e1_bf_adv, tmp42;




        struct_Lt.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp1, tmp2);
        tmp4 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp5 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_and(tmp4, tmp5);
        byte_c7 = simd_and(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_andc(tmp7, tmp2);
        tmp9 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp10 = simd_and(tmp4, tmp9);
        tmp11 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp12 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp13 = simd_andc(tmp11, tmp12);
        tmp14 = simd_or(tmp10, tmp13);
        tmp15 = simd_and(tmp11, tmp5);
        tmp16 = simd_or(tmp14, tmp15);
        tmp17 = simd_and(tmp8, tmp16);
        tmp18 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp19 = simd_and(tmp7, tmp18);
        tmp20 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp21 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp22 = simd_andc(tmp21, tmp20);
        tmp23 = simd_and(tmp19, tmp22);
        cc_range_1c5_1f2_2 = simd_or(tmp17, tmp23);
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(byte_c7, carryQ.get_carry_in(0), byte_c7_adv));
        tmp24 = simd_and(byte_c7_adv, cc_range_1c5_1f2_2);
        struct_Lt.cc = simd_or(struct_Lt.cc, tmp24);
        tmp25 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp26 = simd_and(tmp1, tmp25);
        tmp27 = simd_andc(tmp9, tmp20);
        byte_e1 = simd_and(tmp26, tmp27);
        tmp28 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp29 = simd_and(tmp28, tmp21);
        byte_be = simd_and(tmp19, tmp29);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(1), tmp30));
        sequence_e1_be = simd_and(tmp30, byte_be);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(2), byte_e1_adv));
        tmp31 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp32 = simd_andc(tmp2, tmp31);
        tmp33 = simd_andc(tmp32, tmp25);
        tmp34 = simd_andc(tmp7, tmp33);
        tmp35 = simd_and(basis_bits.bit_4, tmp34);
        tmp36 = simd_andc(tmp28, tmp12);
        tmp37 = simd_and(tmp19, tmp36);
        cc_range_1f88_1fbc_3 = simd_or(tmp35, tmp37);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(sequence_e1_be, carryQ.get_carry_in(3), sequence_e1_be_adv));
        tmp38 = simd_and(sequence_e1_be_adv, cc_range_1f88_1fbc_3);
        struct_Lt.cc = simd_or(struct_Lt.cc, tmp38);
        tmp39 = simd_and(tmp28, tmp5);
        byte_bf = simd_and(tmp19, tmp39);
        sequence_e1_bf = simd_and(byte_e1_adv, byte_bf);
        tmp40 = simd_andc(tmp2, tmp18);
        tmp41 = simd_andc(tmp7, tmp40);
        cc_range_1fcc_1ffc_3 = simd_and(tmp36, tmp41);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(sequence_e1_bf, carryQ.get_carry_in(4), sequence_e1_bf_adv));
        tmp42 = simd_and(sequence_e1_bf_adv, cc_range_1fcc_1ffc_3);
        struct_Lt.cc = simd_or(struct_Lt.cc, tmp42);
  }
  CarryArray<5, 0> carryQ;
  };

  struct Lu {
  Lu() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Lu & struct_Lu) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, tmp7, tmp8, tmp9, tmp10;
		BitBlock byte_range_41_5a, tmp11, tmp12, tmp13, tmp14, byte_c3, tmp15, tmp16;
		BitBlock tmp17, tmp18, tmp19, tmp20, tmp21, tmp22, tmp23, tmp24;
		BitBlock cc_range_c0_d8_2, byte_c3_adv, tmp25, tmp26, tmp27, byte_c4, tmp28;
		BitBlock tmp29, tmp30, tmp31, tmp32, tmp33, tmp34, tmp35, tmp36, tmp37, tmp38;
		BitBlock tmp39, tmp40, tmp41, tmp42, tmp43, tmp44, tmp45, tmp46, tmp47, tmp48;
		BitBlock tmp49, tmp50, tmp51, tmp52, tmp53, tmp54, tmp55, tmp56, tmp57, tmp58;
		BitBlock tmp59, tmp60, tmp61, tmp62, tmp63, tmp64, tmp65, tmp66, tmp67, tmp68;
		BitBlock tmp69, tmp70, tmp71, tmp72, tmp73, tmp74, tmp75, tmp76, tmp77, tmp78;
		BitBlock tmp79, tmp80, tmp81, tmp82, tmp83, tmp84, tmp85, tmp86, tmp87, tmp88;
		BitBlock tmp89, tmp90, tmp91, tmp92, tmp93, tmp94, tmp95, tmp96, tmp97, tmp98;
		BitBlock tmp99, tmp100, tmp101, cc_range_100_13f_2, byte_c4_adv, tmp102;
		BitBlock tmp103, byte_c5, tmp104, tmp105, tmp106, tmp107, tmp108, tmp109;
		BitBlock tmp110, tmp111, tmp112, tmp113, tmp114, tmp115, tmp116, tmp117;
		BitBlock tmp118, tmp119, tmp120, tmp121, tmp122, tmp123, tmp124, tmp125;
		BitBlock tmp126, tmp127, tmp128, tmp129, tmp130, tmp131, tmp132, tmp133;
		BitBlock tmp134, tmp135, cc_range_141_17d_2, byte_c5_adv, tmp136, byte_c6;
		BitBlock tmp137, tmp138, tmp139, tmp140, tmp141, tmp142, tmp143, tmp144;
		BitBlock tmp145, tmp146, tmp147, tmp148, tmp149, tmp150, tmp151, tmp152;
		BitBlock tmp153, tmp154, tmp155, tmp156, tmp157, tmp158, tmp159, tmp160;
		BitBlock tmp161, tmp162, tmp163, tmp164, tmp165, tmp166, tmp167, tmp168;
		BitBlock tmp169, tmp170, tmp171, tmp172, tmp173, tmp174, tmp175, tmp176;
		BitBlock tmp177, tmp178, tmp179, tmp180, tmp181, tmp182, tmp183, tmp184;
		BitBlock tmp185, tmp186, tmp187, tmp188, tmp189, tmp190, tmp191, tmp192;
		BitBlock cc_range_181_1bc_2, byte_c6_adv, tmp193, byte_c7, tmp194, tmp195;
		BitBlock tmp196, tmp197, tmp198, tmp199, tmp200, tmp201, tmp202, tmp203;
		BitBlock tmp204, tmp205, tmp206, tmp207, tmp208, tmp209, tmp210, tmp211;
		BitBlock tmp212, tmp213, tmp214, tmp215, tmp216, tmp217, tmp218, tmp219;
		BitBlock tmp220, tmp221, tmp222, tmp223, tmp224, tmp225, tmp226, tmp227;
		BitBlock tmp228, tmp229, tmp230, cc_range_1c4_1fe_2, byte_c7_adv, tmp231;
		BitBlock byte_c8, tmp232, tmp233, tmp234, tmp235, tmp236, cc_range_200_23d_2;
		BitBlock byte_c8_adv, tmp237, byte_c9, tmp238, tmp239, tmp240, tmp241, tmp242;
		BitBlock tmp243, tmp244, tmp245, tmp246, tmp247, tmp248, tmp249, tmp250;
		BitBlock cc_range_241_24e_2, byte_c9_adv, tmp251, byte_cd, tmp252;
		BitBlock cc_range_370_376_2, byte_cd_adv, tmp253, byte_ce, tmp254, tmp255;
		BitBlock tmp256, tmp257, tmp258, tmp259, tmp260, tmp261, tmp262, tmp263;
		BitBlock tmp264, tmp265, tmp266, tmp267, tmp268, cc_range_386_3a3_2;
		BitBlock byte_ce_adv, tmp269, byte_cf, tmp270, tmp271, tmp272, tmp273, tmp274;
		BitBlock tmp275, tmp276, tmp277, tmp278, tmp279, tmp280, tmp281, tmp282;
		BitBlock tmp283, tmp284, tmp285, tmp286, tmp287, tmp288, tmp289, tmp290;
		BitBlock tmp291, tmp292, cc_range_3cf_3fd_2, byte_cf_adv, tmp293, tmp294;
		BitBlock byte_d0, byte_range_80_af, byte_d0_adv, tmp295, byte_d1, tmp296;
		BitBlock cc_range_460_47e_2, byte_d1_adv, tmp297, byte_d2, tmp298, tmp299;
		BitBlock tmp300, tmp301, tmp302, tmp303, tmp304, tmp305, tmp306, tmp307;
		BitBlock tmp308, tmp309, tmp310, tmp311, tmp312, tmp313, tmp314, tmp315;
		BitBlock tmp316, tmp317, tmp318, tmp319, tmp320, tmp321, tmp322, tmp323;
		BitBlock tmp324, tmp325, cc_range_480_4be_2, byte_d2_adv, tmp326, byte_d3;
		BitBlock tmp327, tmp328, tmp329, tmp330, tmp331, tmp332, tmp333, tmp334;
		BitBlock tmp335, tmp336, tmp337, tmp338, tmp339, tmp340, tmp341, tmp342;
		BitBlock tmp343, tmp344, tmp345, tmp346, tmp347, tmp348, tmp349, tmp350;
		BitBlock tmp351, tmp352, tmp353, tmp354, tmp355, tmp356, cc_range_4c0_4fe_2;
		BitBlock byte_d3_adv, tmp357, byte_d4, tmp358, tmp359, cc_range_500_531_2;
		BitBlock byte_d4_adv, tmp360, byte_d5, byte_range_80_96, byte_d5_adv, tmp361;
		BitBlock tmp362, byte_e1, byte_82, tmp363, sequence_e1_82, byte_e1_adv;
		BitBlock byte_range_a0_bf, sequence_e1_82_adv, tmp364, byte_83, sequence_e1_83;
		BitBlock tmp365, tmp366, tmp367, tmp368, cc_range_10c0_10cd_3;
		BitBlock sequence_e1_83_adv, tmp369, byte_b8, sequence_e1_b8;
		BitBlock cc_range_1e00_1e3e_3, sequence_e1_b8_adv, tmp370, byte_b9;
		BitBlock sequence_e1_b9, cc_range_1e40_1e7e_3, sequence_e1_b9_adv, tmp371;
		BitBlock byte_ba, sequence_e1_ba, tmp372, tmp373, tmp374, tmp375, tmp376;
		BitBlock tmp377, tmp378, tmp379, tmp380, tmp381, tmp382, tmp383, tmp384;
		BitBlock tmp385, tmp386, tmp387, cc_range_1e80_1ebe_3, sequence_e1_ba_adv;
		BitBlock tmp388, byte_bb, sequence_e1_bb, cc_range_1ec0_1efe_3;
		BitBlock sequence_e1_bb_adv, tmp389, byte_bc, sequence_e1_bc, tmp390, tmp391;
		BitBlock tmp392, tmp393, tmp394, tmp395, cc_range_1f08_1f38_3;
		BitBlock sequence_e1_bc_adv, tmp396, byte_bd, sequence_e1_bd, tmp397, tmp398;
		BitBlock tmp399, tmp400, tmp401, tmp402, tmp403, cc_range_1f48_1f68_3;
		BitBlock sequence_e1_bd_adv, tmp404, byte_be, sequence_e1_be, byte_range_b8_bb;
		BitBlock sequence_e1_be_adv, tmp405, byte_bf, sequence_e1_bf, tmp406, tmp407;
		BitBlock tmp408, tmp409, tmp410, tmp411, cc_range_1fc8_1ff8_3;
		BitBlock sequence_e1_bf_adv, tmp412, byte_e2, byte_84, tmp413, sequence_e2_84;
		BitBlock byte_e2_adv, tmp414, tmp415, tmp416, tmp417, tmp418, tmp419, tmp420;
		BitBlock tmp421, tmp422, tmp423, tmp424, tmp425, tmp426, tmp427, tmp428;
		BitBlock tmp429, tmp430, tmp431, tmp432, tmp433, tmp434, cc_range_2102_213e_3;
		BitBlock sequence_e2_84_adv, tmp435, byte_85, sequence_e2_85;
		BitBlock sequence_e2_85_adv, tmp436, byte_86, sequence_e2_86;
		BitBlock sequence_e2_86_adv, tmp437, byte_b0, sequence_e2_b0, tmp438, tmp439;
		BitBlock byte_range_80_ae, sequence_e2_b0_adv, tmp440, byte_b1, sequence_e2_b1;
		BitBlock tmp441, tmp442, tmp443, tmp444, tmp445, tmp446, tmp447, tmp448;
		BitBlock tmp449, tmp450, tmp451, tmp452, tmp453, tmp454, tmp455;
		BitBlock cc_range_2c60_2c7e_3, sequence_e2_b1_adv, tmp456, byte_b2;
		BitBlock sequence_e2_b2, cc_range_2c80_2cbe_3, sequence_e2_b2_adv, tmp457;
		BitBlock byte_b3, sequence_e2_b3, tmp458, tmp459, tmp460, cc_range_2cc0_2cf2_3;
		BitBlock sequence_e2_b3_adv, tmp461, byte_ea, byte_99, tmp462, sequence_ea_99;
		BitBlock byte_ea_adv, tmp463, tmp464, tmp465, cc_range_a640_a66c_3;
		BitBlock sequence_ea_99_adv, tmp466, byte_9a, sequence_ea_9a, tmp467, tmp468;
		BitBlock cc_range_a680_a696_3, sequence_ea_9a_adv, tmp469, byte_9c;
		BitBlock sequence_ea_9c, tmp470, tmp471, tmp472, tmp473, tmp474, tmp475;
		BitBlock tmp476, tmp477, tmp478, tmp479, tmp480, tmp481, tmp482;
		BitBlock cc_range_a722_a73e_3, sequence_ea_9c_adv, tmp483, byte_9d;
		BitBlock sequence_ea_9d, tmp484, tmp485, tmp486, tmp487, tmp488, tmp489;
		BitBlock tmp490, tmp491, tmp492, tmp493, tmp494, tmp495, tmp496;
		BitBlock cc_range_a740_a77d_3, sequence_ea_9d_adv, tmp497, byte_9e;
		BitBlock sequence_ea_9e, tmp498, tmp499, tmp500, tmp501, tmp502, tmp503;
		BitBlock tmp504, tmp505, tmp506, tmp507, cc_range_a780_a7aa_3;
		BitBlock sequence_ea_9e_adv, tmp508, byte_ef, tmp509, sequence_ef_bc;
		BitBlock byte_ef_adv, byte_range_a1_ba, sequence_ef_bc_adv, tmp510, tmp511;
		BitBlock byte_f0, byte_90, tmp512, sequence_f0_90, byte_f0_adv, tmp513;
		BitBlock sequence_f0_90_90, sequence_f0_90_adv, tmp514, tmp515;
		BitBlock byte_range_80_a7, sequence_f0_90_90_adv, tmp516, sequence_f0_9d;
		BitBlock tmp517, sequence_f0_9d_90, sequence_f0_9d_adv, tmp518, tmp519, tmp520;
		BitBlock tmp521, tmp522, cc_range_1d400_1d434_4, sequence_f0_9d_90_adv, tmp523;
		BitBlock byte_91, sequence_f0_9d_91, tmp524, tmp525, tmp526;
		BitBlock cc_range_1d440_1d468_4, sequence_f0_9d_91_adv, tmp527, byte_92;
		BitBlock sequence_f0_9d_92, tmp528, tmp529, tmp530, tmp531, tmp532, tmp533;
		BitBlock tmp534, tmp535, tmp536, tmp537, tmp538, tmp539, tmp540, tmp541;
		BitBlock tmp542, cc_range_1d480_1d4ae_4, sequence_f0_9d_92_adv, tmp543;
		BitBlock byte_93, sequence_f0_9d_93, tmp544, tmp545, tmp546, byte_range_90_a9;
		BitBlock sequence_f0_9d_93_adv, tmp547, byte_94, sequence_f0_9d_94, tmp548;
		BitBlock tmp549, tmp550, tmp551, tmp552, tmp553, tmp554, tmp555, tmp556;
		BitBlock tmp557, tmp558, tmp559, tmp560, tmp561, tmp562, tmp563;
		BitBlock cc_range_1d504_1d53b_4, sequence_f0_9d_94_adv, tmp564, byte_95;
		BitBlock sequence_f0_9d_95, tmp565, tmp566, tmp567, tmp568, tmp569, tmp570;
		BitBlock tmp571, cc_range_1d540_1d56c_4, sequence_f0_9d_95_adv, tmp572;
		BitBlock byte_96, sequence_f0_9d_96, tmp573, cc_range_1d580_1d5a0_4;
		BitBlock sequence_f0_9d_96_adv, tmp574, byte_97, sequence_f0_9d_97, tmp575;
		BitBlock tmp576, tmp577, byte_range_94_ad, sequence_f0_9d_97_adv, tmp578;
		BitBlock byte_98, sequence_f0_9d_98, tmp579, tmp580, cc_range_1d608_1d63c_4;
		BitBlock sequence_f0_9d_98_adv, tmp581, sequence_f0_9d_99, tmp582, tmp583;
		BitBlock cc_range_1d640_1d670_4, sequence_f0_9d_99_adv, tmp584;
		BitBlock sequence_f0_9d_9a, tmp585, cc_range_1d680_1d6a8_4;
		BitBlock sequence_f0_9d_9a_adv, tmp586, byte_9b, sequence_f0_9d_9b, tmp587;
		BitBlock tmp588, tmp589, cc_range_1d6c0_1d6e2_4, sequence_f0_9d_9b_adv, tmp590;
		BitBlock sequence_f0_9d_9c, tmp591, tmp592, tmp593, tmp594, byte_range_9c_b4;
		BitBlock sequence_f0_9d_9c_adv, tmp595, sequence_f0_9d_9d, tmp596, tmp597;
		BitBlock byte_range_96_ae, sequence_f0_9d_9d_adv, tmp598, sequence_f0_9d_9e;
		BitBlock tmp599, tmp600, tmp601, tmp602, byte_range_90_a8;
		BitBlock sequence_f0_9d_9e_adv, tmp603, byte_9f, sequence_f0_9d_9f, byte_8a;
		BitBlock sequence_f0_9d_9f_adv, tmp604;




        struct_Lu.cc = simd<1>::constant<0>();
        tmp1 = simd_andc(basis_bits.bit_1, basis_bits.bit_0);
        tmp2 = simd_andc(tmp1, basis_bits.bit_2);
        tmp3 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp4 = simd_or(basis_bits.bit_5, tmp3);
        tmp5 = simd_and(basis_bits.bit_4, tmp4);
        tmp6 = simd_not(tmp5);
        tmp7 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp8 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp9 = simd_or(tmp7, tmp8);
        tmp10 = simd_or(simd_and(basis_bits.bit_3, tmp6), simd_andc(tmp9, basis_bits.bit_3));
        byte_range_41_5a = simd_and(tmp2, tmp10);
        struct_Lu.cc = simd_or(struct_Lu.cc, byte_range_41_5a);
        tmp11 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp12 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp13 = simd_andc(tmp11, tmp12);
        tmp14 = simd_andc(tmp3, tmp7);
        byte_c3 = simd_and(tmp13, tmp14);
        tmp15 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp16 = simd_andc(tmp15, basis_bits.bit_2);
        tmp17 = simd_and(basis_bits.bit_5, tmp3);
        tmp18 = simd_or(basis_bits.bit_4, tmp17);
        tmp19 = simd_and(basis_bits.bit_3, tmp18);
        tmp20 = simd_andc(tmp16, tmp19);
        tmp21 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp22 = simd_and(tmp15, tmp21);
        tmp23 = simd_and(tmp22, basis_bits.bit_4);
        tmp24 = simd_andc(tmp23, tmp17);
        cc_range_c0_d8_2 = simd_or(tmp20, tmp24);
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(byte_c3, carryQ.get_carry_in(0), byte_c3_adv));
        tmp25 = simd_and(byte_c3_adv, cc_range_c0_d8_2);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp25);
        tmp26 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp27 = simd_andc(tmp26, tmp8);
        byte_c4 = simd_and(tmp13, tmp27);
        tmp28 = simd_andc(tmp15, tmp12);
        tmp29 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp30 = simd_andc(tmp29, tmp7);
        tmp31 = simd_andc(tmp9, tmp30);
        tmp32 = simd_andc(tmp31, tmp27);
        tmp33 = simd_and(tmp26, tmp29);
        tmp34 = simd_andc(tmp32, tmp33);
        tmp35 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp36 = simd_andc(tmp35, tmp8);
        tmp37 = simd_andc(tmp34, tmp36);
        tmp38 = simd_and(tmp35, tmp29);
        tmp39 = simd_andc(tmp37, tmp38);
        tmp40 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp41 = simd_andc(tmp40, tmp8);
        tmp42 = simd_andc(tmp39, tmp41);
        tmp43 = simd_and(tmp40, tmp29);
        tmp44 = simd_andc(tmp42, tmp43);
        tmp45 = simd_andc(tmp28, tmp44);
        tmp46 = simd_andc(tmp22, tmp9);
        tmp47 = simd_or(tmp45, tmp46);
        tmp48 = simd_and(tmp22, tmp30);
        tmp49 = simd_or(tmp47, tmp48);
        tmp50 = simd_and(tmp22, tmp27);
        tmp51 = simd_or(tmp49, tmp50);
        tmp52 = simd_and(tmp22, tmp33);
        tmp53 = simd_or(tmp51, tmp52);
        tmp54 = simd_and(tmp22, tmp36);
        tmp55 = simd_or(tmp53, tmp54);
        tmp56 = simd_and(tmp22, tmp38);
        tmp57 = simd_or(tmp55, tmp56);
        tmp58 = simd_and(tmp22, tmp41);
        tmp59 = simd_or(tmp57, tmp58);
        tmp60 = simd_and(tmp22, tmp43);
        tmp61 = simd_or(tmp59, tmp60);
        tmp62 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp63 = simd_and(tmp15, tmp62);
        tmp64 = simd_andc(tmp63, tmp9);
        tmp65 = simd_or(tmp61, tmp64);
        tmp66 = simd_and(tmp63, tmp30);
        tmp67 = simd_or(tmp65, tmp66);
        tmp68 = simd_and(tmp63, tmp27);
        tmp69 = simd_or(tmp67, tmp68);
        tmp70 = simd_and(tmp63, tmp33);
        tmp71 = simd_or(tmp69, tmp70);
        tmp72 = simd_and(tmp63, tmp36);
        tmp73 = simd_or(tmp71, tmp72);
        tmp74 = simd_and(tmp63, tmp38);
        tmp75 = simd_or(tmp73, tmp74);
        tmp76 = simd_and(tmp63, tmp41);
        tmp77 = simd_or(tmp75, tmp76);
        tmp78 = simd_and(tmp63, tmp43);
        tmp79 = simd_or(tmp77, tmp78);
        tmp80 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp81 = simd_and(tmp15, tmp80);
        tmp82 = simd_andc(tmp81, tmp9);
        tmp83 = simd_or(tmp79, tmp82);
        tmp84 = simd_and(tmp81, tmp30);
        tmp85 = simd_or(tmp83, tmp84);
        tmp86 = simd_and(tmp81, tmp27);
        tmp87 = simd_or(tmp85, tmp86);
        tmp88 = simd_and(tmp81, tmp33);
        tmp89 = simd_or(tmp87, tmp88);
        tmp90 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp91 = simd_and(tmp35, tmp90);
        tmp92 = simd_and(tmp81, tmp91);
        tmp93 = simd_or(tmp89, tmp92);
        tmp94 = simd_and(tmp35, tmp3);
        tmp95 = simd_and(tmp81, tmp94);
        tmp96 = simd_or(tmp93, tmp95);
        tmp97 = simd_and(tmp40, tmp90);
        tmp98 = simd_and(tmp81, tmp97);
        tmp99 = simd_or(tmp96, tmp98);
        tmp100 = simd_and(tmp40, tmp3);
        tmp101 = simd_and(tmp81, tmp100);
        cc_range_100_13f_2 = simd_or(tmp99, tmp101);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(byte_c4, carryQ.get_carry_in(1), byte_c4_adv));
        tmp102 = simd_and(byte_c4_adv, cc_range_100_13f_2);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp102);
        tmp103 = simd_and(tmp26, tmp90);
        byte_c5 = simd_and(tmp13, tmp103);
        tmp104 = simd_andc(basis_bits.bit_7, tmp7);
        tmp105 = simd_or(tmp104, tmp103);
        tmp106 = simd_and(tmp26, tmp3);
        tmp107 = simd_or(tmp105, tmp106);
        tmp108 = simd_or(tmp107, tmp38);
        tmp109 = simd_or(tmp108, tmp41);
        tmp110 = simd_or(tmp109, tmp43);
        tmp111 = simd_and(tmp28, tmp110);
        tmp112 = simd_or(tmp111, tmp46);
        tmp113 = simd_or(tmp112, tmp48);
        tmp114 = simd_or(tmp113, tmp50);
        tmp115 = simd_or(tmp114, tmp52);
        tmp116 = simd_or(tmp115, tmp54);
        tmp117 = simd_or(tmp116, tmp56);
        tmp118 = simd_or(tmp117, tmp58);
        tmp119 = simd_or(tmp118, tmp60);
        tmp120 = simd_or(tmp119, tmp64);
        tmp121 = simd_or(tmp120, tmp66);
        tmp122 = simd_or(tmp121, tmp68);
        tmp123 = simd_or(tmp122, tmp70);
        tmp124 = simd_or(tmp123, tmp72);
        tmp125 = simd_or(tmp124, tmp74);
        tmp126 = simd_or(tmp125, tmp76);
        tmp127 = simd_or(tmp126, tmp78);
        tmp128 = simd_or(tmp127, tmp82);
        tmp129 = simd_or(tmp128, tmp84);
        tmp130 = simd_or(tmp129, tmp86);
        tmp131 = simd_or(tmp130, tmp88);
        tmp132 = simd_andc(tmp35, basis_bits.bit_6);
        tmp133 = simd_and(tmp81, tmp132);
        tmp134 = simd_or(tmp131, tmp133);
        tmp135 = simd_or(tmp134, tmp95);
        cc_range_141_17d_2 = simd_or(tmp135, tmp98);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(byte_c5, carryQ.get_carry_in(2), byte_c5_adv));
        tmp136 = simd_and(byte_c5_adv, cc_range_141_17d_2);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp136);
        byte_c6 = simd_and(tmp13, tmp33);
        tmp137 = simd_andc(tmp28, tmp7);
        tmp138 = simd_not(basis_bits.bit_7);
        tmp139 = simd_or(simd_and(basis_bits.bit_6, tmp138), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
        tmp140 = simd_and(tmp137, tmp139);
        tmp141 = simd_and(tmp28, tmp27);
        tmp142 = simd_or(tmp140, tmp141);
        tmp143 = simd_and(tmp26, basis_bits.bit_6);
        tmp144 = simd_and(tmp28, tmp143);
        tmp145 = simd_or(tmp142, tmp144);
        tmp146 = simd_and(tmp28, tmp35);
        tmp147 = simd_and(tmp146, tmp8);
        tmp148 = simd_or(tmp145, tmp147);
        tmp149 = simd_or(tmp7, basis_bits.bit_6);
        tmp150 = simd_not(tmp149);
        tmp151 = simd_and(tmp40, basis_bits.bit_6);
        tmp152 = simd_or(simd_and(basis_bits.bit_3, tmp150), simd_andc(tmp151, basis_bits.bit_3));
        tmp153 = simd_and(tmp16, tmp152);
        tmp154 = simd_or(tmp148, tmp153);
        tmp155 = simd_andc(tmp22, basis_bits.bit_4);
        tmp156 = simd_not(tmp8);
        tmp157 = simd_or(simd_and(basis_bits.bit_5, tmp156), simd_andc(tmp3, basis_bits.bit_5));
        tmp158 = simd_and(tmp155, tmp157);
        tmp159 = simd_or(tmp154, tmp158);
        tmp160 = simd_or(basis_bits.bit_5, tmp8);
        tmp161 = simd_not(tmp160);
        tmp162 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp163 = simd_or(simd_and(basis_bits.bit_4, tmp161), simd_andc(tmp162, basis_bits.bit_4));
        tmp164 = simd_and(tmp22, tmp163);
        tmp165 = simd_or(tmp159, tmp164);
        tmp166 = simd_andc(tmp40, basis_bits.bit_6);
        tmp167 = simd_and(tmp22, tmp166);
        tmp168 = simd_or(tmp165, tmp167);
        tmp169 = simd_or(basis_bits.bit_3, tmp9);
        tmp170 = simd_not(tmp169);
        tmp171 = simd_and(basis_bits.bit_3, tmp100);
        tmp172 = simd_or(simd_and(basis_bits.bit_2, tmp170), simd_andc(tmp171, basis_bits.bit_2));
        tmp173 = simd_and(tmp15, tmp172);
        tmp174 = simd_or(tmp168, tmp173);
        tmp175 = simd_or(tmp174, tmp66);
        tmp176 = simd_or(tmp175, tmp68);
        tmp177 = simd_and(tmp63, tmp143);
        tmp178 = simd_or(tmp176, tmp177);
        tmp179 = simd_and(tmp63, tmp91);
        tmp180 = simd_or(tmp178, tmp179);
        tmp181 = simd_or(tmp180, tmp76);
        tmp182 = simd_and(tmp63, tmp151);
        tmp183 = simd_or(tmp181, tmp182);
        tmp184 = simd_andc(tmp81, tmp7);
        tmp185 = simd_and(tmp184, tmp8);
        tmp186 = simd_or(tmp183, tmp185);
        tmp187 = simd_and(tmp81, tmp103);
        tmp188 = simd_or(tmp186, tmp187);
        tmp189 = simd_or(simd_and(basis_bits.bit_4, tmp161), simd_andc(tmp17, basis_bits.bit_4));
        tmp190 = simd_and(tmp81, tmp189);
        tmp191 = simd_or(tmp188, tmp190);
        tmp192 = simd_and(tmp81, tmp41);
        cc_range_181_1bc_2 = simd_or(tmp191, tmp192);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(byte_c6, carryQ.get_carry_in(3), byte_c6_adv));
        tmp193 = simd_and(byte_c6_adv, cc_range_181_1bc_2);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp193);
        byte_c7 = simd_and(tmp13, tmp106);
        tmp194 = simd_andc(tmp8, tmp3);
        tmp195 = simd_andc(tmp26, tmp194);
        tmp196 = simd_or(tmp195, tmp38);
        tmp197 = simd_or(tmp196, tmp97);
        tmp198 = simd_or(tmp197, tmp100);
        tmp199 = simd_and(tmp28, tmp198);
        tmp200 = simd_andc(tmp90, tmp7);
        tmp201 = simd_and(tmp22, tmp200);
        tmp202 = simd_or(tmp199, tmp201);
        tmp203 = simd_and(tmp22, tmp14);
        tmp204 = simd_or(tmp202, tmp203);
        tmp205 = simd_and(tmp22, tmp103);
        tmp206 = simd_or(tmp204, tmp205);
        tmp207 = simd_and(tmp22, tmp106);
        tmp208 = simd_or(tmp206, tmp207);
        tmp209 = simd_and(tmp22, tmp91);
        tmp210 = simd_or(tmp208, tmp209);
        tmp211 = simd_and(tmp22, tmp94);
        tmp212 = simd_or(tmp210, tmp211);
        tmp213 = simd_or(tmp212, tmp60);
        tmp214 = simd_or(tmp213, tmp64);
        tmp215 = simd_or(tmp214, tmp66);
        tmp216 = simd_or(tmp215, tmp68);
        tmp217 = simd_or(tmp216, tmp70);
        tmp218 = simd_or(tmp217, tmp72);
        tmp219 = simd_or(tmp218, tmp74);
        tmp220 = simd_or(tmp219, tmp76);
        tmp221 = simd_or(tmp220, tmp78);
        tmp222 = simd_and(tmp81, tmp200);
        tmp223 = simd_or(tmp221, tmp222);
        tmp224 = simd_or(tmp223, tmp86);
        tmp225 = simd_and(tmp81, tmp163);
        tmp226 = simd_or(tmp224, tmp225);
        tmp227 = simd_and(tmp81, tmp38);
        tmp228 = simd_or(tmp226, tmp227);
        tmp229 = simd_or(tmp228, tmp192);
        tmp230 = simd_and(tmp81, tmp43);
        cc_range_1c4_1fe_2 = simd_or(tmp229, tmp230);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(byte_c7, carryQ.get_carry_in(4), byte_c7_adv));
        tmp231 = simd_and(byte_c7_adv, cc_range_1c4_1fe_2);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp231);
        byte_c8 = simd_and(tmp13, tmp36);
        tmp232 = simd_and(tmp35, basis_bits.bit_6);
        tmp233 = simd_and(tmp81, tmp232);
        tmp234 = simd_or(tmp85, tmp233);
        tmp235 = simd_and(tmp81, tmp40);
        tmp236 = simd_and(tmp235, tmp139);
        cc_range_200_23d_2 = simd_or(tmp234, tmp236);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(byte_c8, carryQ.get_carry_in(5), byte_c8_adv));
        tmp237 = simd_and(byte_c8_adv, cc_range_200_23d_2);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp237);
        byte_c9 = simd_and(tmp13, tmp91);
        tmp238 = simd_and(tmp28, tmp200);
        tmp239 = simd_andc(tmp28, basis_bits.bit_4);
        tmp240 = simd_not(tmp3);
        tmp241 = simd_or(simd_and(basis_bits.bit_5, tmp240), simd_andc(tmp3, basis_bits.bit_5));
        tmp242 = simd_and(tmp239, tmp241);
        tmp243 = simd_or(tmp238, tmp242);
        tmp244 = simd_and(tmp28, tmp36);
        tmp245 = simd_or(tmp243, tmp244);
        tmp246 = simd_and(tmp28, tmp38);
        tmp247 = simd_or(tmp245, tmp246);
        tmp248 = simd_and(tmp28, tmp41);
        tmp249 = simd_or(tmp247, tmp248);
        tmp250 = simd_and(tmp28, tmp43);
        cc_range_241_24e_2 = simd_or(tmp249, tmp250);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(byte_c9, carryQ.get_carry_in(6), byte_c9_adv));
        tmp251 = simd_and(byte_c9_adv, cc_range_241_24e_2);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp251);
        byte_cd = simd_and(tmp13, tmp97);
        tmp252 = simd_andc(tmp31, tmp33);
        cc_range_370_376_2 = simd_andc(tmp81, tmp252);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(byte_cd, carryQ.get_carry_in(7), byte_cd_adv));
        tmp253 = simd_and(byte_cd_adv, cc_range_370_376_2);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp253);
        byte_ce = simd_and(tmp13, tmp43);
        tmp254 = simd_and(tmp28, tmp33);
        tmp255 = simd_andc(tmp146, tmp3);
        tmp256 = simd_or(tmp254, tmp255);
        tmp257 = simd_or(tmp256, tmp248);
        tmp258 = simd_and(tmp28, tmp151);
        tmp259 = simd_or(tmp257, tmp258);
        tmp260 = simd_or(basis_bits.bit_3, tmp149);
        tmp261 = simd_not(tmp260);
        tmp262 = simd_and(basis_bits.bit_3, tmp9);
        tmp263 = simd_or(simd_and(basis_bits.bit_2, tmp261), simd_andc(tmp262, basis_bits.bit_2));
        tmp264 = simd_and(tmp15, tmp263);
        tmp265 = simd_or(tmp259, tmp264);
        tmp266 = simd_not(basis_bits.bit_5);
        tmp267 = simd_or(simd_and(basis_bits.bit_4, tmp266), simd_andc(tmp4, basis_bits.bit_4));
        tmp268 = simd_and(tmp63, tmp267);
        cc_range_386_3a3_2 = simd_or(tmp265, tmp268);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(byte_ce, carryQ.get_carry_in(8), byte_ce_adv));
        tmp269 = simd_and(byte_ce_adv, cc_range_386_3a3_2);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp269);
        byte_cf = simd_and(tmp13, tmp100);
        tmp270 = simd_and(tmp28, tmp100);
        tmp271 = simd_or(simd_and(basis_bits.bit_5, tmp156), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        tmp272 = simd_and(tmp155, tmp271);
        tmp273 = simd_or(tmp270, tmp272);
        tmp274 = simd_or(tmp273, tmp54);
        tmp275 = simd_or(tmp274, tmp56);
        tmp276 = simd_or(tmp275, tmp58);
        tmp277 = simd_or(tmp276, tmp60);
        tmp278 = simd_or(tmp277, tmp64);
        tmp279 = simd_or(tmp278, tmp66);
        tmp280 = simd_or(tmp279, tmp68);
        tmp281 = simd_or(tmp280, tmp70);
        tmp282 = simd_or(tmp281, tmp72);
        tmp283 = simd_or(tmp282, tmp74);
        tmp284 = simd_or(tmp283, tmp76);
        tmp285 = simd_or(tmp284, tmp78);
        tmp286 = simd_or(tmp285, tmp86);
        tmp287 = simd_and(tmp81, tmp106);
        tmp288 = simd_or(tmp286, tmp287);
        tmp289 = simd_and(tmp81, tmp35);
        tmp290 = simd_and(tmp289, tmp139);
        tmp291 = simd_or(tmp288, tmp290);
        tmp292 = simd_and(tmp235, tmp8);
        cc_range_3cf_3fd_2 = simd_or(tmp291, tmp292);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(byte_cf, carryQ.get_carry_in(9), byte_cf_adv));
        tmp293 = simd_and(byte_cf_adv, cc_range_3cf_3fd_2);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp293);
        tmp294 = simd_and(tmp11, tmp21);
        byte_d0 = simd_andc(tmp294, tmp9);
        byte_range_80_af = simd_andc(tmp15, tmp80);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(byte_d0, carryQ.get_carry_in(10), byte_d0_adv));
        tmp295 = simd_and(byte_d0_adv, byte_range_80_af);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp295);
        byte_d1 = simd_and(tmp294, tmp200);
        tmp296 = simd_and(tmp15, basis_bits.bit_2);
        cc_range_460_47e_2 = simd_andc(tmp296, basis_bits.bit_7);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(byte_d1, carryQ.get_carry_in(11), byte_d1_adv));
        tmp297 = simd_and(byte_d1_adv, cc_range_460_47e_2);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp297);
        byte_d2 = simd_and(tmp294, tmp30);
        tmp298 = simd_andc(tmp9, tmp38);
        tmp299 = simd_andc(tmp298, tmp41);
        tmp300 = simd_andc(tmp299, tmp43);
        tmp301 = simd_andc(tmp28, tmp300);
        tmp302 = simd_or(tmp301, tmp46);
        tmp303 = simd_or(tmp302, tmp48);
        tmp304 = simd_or(tmp303, tmp50);
        tmp305 = simd_or(tmp304, tmp52);
        tmp306 = simd_or(tmp305, tmp54);
        tmp307 = simd_or(tmp306, tmp56);
        tmp308 = simd_or(tmp307, tmp58);
        tmp309 = simd_or(tmp308, tmp60);
        tmp310 = simd_or(tmp309, tmp64);
        tmp311 = simd_or(tmp310, tmp66);
        tmp312 = simd_or(tmp311, tmp68);
        tmp313 = simd_or(tmp312, tmp70);
        tmp314 = simd_or(tmp313, tmp72);
        tmp315 = simd_or(tmp314, tmp74);
        tmp316 = simd_or(tmp315, tmp76);
        tmp317 = simd_or(tmp316, tmp78);
        tmp318 = simd_or(tmp317, tmp82);
        tmp319 = simd_or(tmp318, tmp84);
        tmp320 = simd_or(tmp319, tmp86);
        tmp321 = simd_or(tmp320, tmp88);
        tmp322 = simd_and(tmp81, tmp36);
        tmp323 = simd_or(tmp321, tmp322);
        tmp324 = simd_or(tmp323, tmp227);
        tmp325 = simd_or(tmp324, tmp192);
        cc_range_480_4be_2 = simd_or(tmp325, tmp230);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(byte_d2, carryQ.get_carry_in(12), byte_d2_adv));
        tmp326 = simd_and(byte_d2_adv, cc_range_480_4be_2);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp326);
        byte_d3 = simd_and(tmp294, tmp14);
        tmp327 = simd_andc(tmp149, tmp14);
        tmp328 = simd_andc(tmp327, tmp103);
        tmp329 = simd_andc(tmp328, tmp106);
        tmp330 = simd_andc(tmp329, tmp91);
        tmp331 = simd_andc(tmp330, tmp94);
        tmp332 = simd_andc(tmp331, tmp97);
        tmp333 = simd_andc(tmp28, tmp332);
        tmp334 = simd_or(tmp333, tmp46);
        tmp335 = simd_or(tmp334, tmp48);
        tmp336 = simd_or(tmp335, tmp50);
        tmp337 = simd_or(tmp336, tmp52);
        tmp338 = simd_or(tmp337, tmp54);
        tmp339 = simd_or(tmp338, tmp56);
        tmp340 = simd_or(tmp339, tmp58);
        tmp341 = simd_or(tmp340, tmp60);
        tmp342 = simd_or(tmp341, tmp64);
        tmp343 = simd_or(tmp342, tmp66);
        tmp344 = simd_or(tmp343, tmp68);
        tmp345 = simd_or(tmp344, tmp70);
        tmp346 = simd_or(tmp345, tmp72);
        tmp347 = simd_or(tmp346, tmp74);
        tmp348 = simd_or(tmp347, tmp76);
        tmp349 = simd_or(tmp348, tmp78);
        tmp350 = simd_or(tmp349, tmp82);
        tmp351 = simd_or(tmp350, tmp84);
        tmp352 = simd_or(tmp351, tmp86);
        tmp353 = simd_or(tmp352, tmp88);
        tmp354 = simd_or(tmp353, tmp322);
        tmp355 = simd_or(tmp354, tmp227);
        tmp356 = simd_or(tmp355, tmp192);
        cc_range_4c0_4fe_2 = simd_or(tmp356, tmp230);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(byte_d3, carryQ.get_carry_in(13), byte_d3_adv));
        tmp357 = simd_and(byte_d3_adv, cc_range_4c0_4fe_2);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp357);
        byte_d4 = simd_and(tmp294, tmp27);
        tmp358 = simd_or(basis_bits.bit_4, tmp160);
        tmp359 = simd_and(tmp81, tmp358);
        cc_range_500_531_2 = simd_or(tmp71, tmp359);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(byte_d4, carryQ.get_carry_in(14), byte_d4_adv));
        tmp360 = simd_and(byte_d4_adv, cc_range_500_531_2);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp360);
        byte_d5 = simd_and(tmp294, tmp103);
        byte_range_80_96 = simd_andc(tmp16, tmp19);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(byte_d5, carryQ.get_carry_in(15), byte_d5_adv));
        tmp361 = simd_and(byte_d5_adv, byte_range_80_96);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp361);
        tmp362 = simd_and(tmp11, tmp62);
        byte_e1 = simd_and(tmp362, tmp200);
        byte_82 = simd_and(tmp28, tmp30);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(16), tmp363));
        sequence_e1_82 = simd_and(tmp363, byte_82);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(17), byte_e1_adv));
        byte_range_a0_bf = simd_and(tmp15, basis_bits.bit_2);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(sequence_e1_82, carryQ.get_carry_in(18), sequence_e1_82_adv));
        tmp364 = simd_and(sequence_e1_82_adv, byte_range_a0_bf);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp364);
        byte_83 = simd_and(tmp28, tmp14);
        sequence_e1_83 = simd_and(byte_e1_adv, byte_83);
        tmp365 = simd_andc(tmp239, tmp162);
        tmp366 = simd_and(tmp28, tmp106);
        tmp367 = simd_or(tmp365, tmp366);
        tmp368 = simd_and(tmp28, tmp97);
        cc_range_10c0_10cd_3 = simd_or(tmp367, tmp368);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(sequence_e1_83, carryQ.get_carry_in(19), sequence_e1_83_adv));
        tmp369 = simd_and(sequence_e1_83_adv, cc_range_10c0_10cd_3);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp369);
        byte_b8 = simd_and(tmp81, tmp36);
        sequence_e1_b8 = simd_and(byte_e1_adv, byte_b8);
        cc_range_1e00_1e3e_3 = simd_andc(tmp15, basis_bits.bit_7);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(sequence_e1_b8, carryQ.get_carry_in(20), sequence_e1_b8_adv));
        tmp370 = simd_and(sequence_e1_b8_adv, cc_range_1e00_1e3e_3);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp370);
        byte_b9 = simd_and(tmp81, tmp91);
        sequence_e1_b9 = simd_and(byte_e1_adv, byte_b9);
        cc_range_1e40_1e7e_3 = simd_andc(tmp15, basis_bits.bit_7);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(sequence_e1_b9, carryQ.get_carry_in(21), sequence_e1_b9_adv));
        tmp371 = simd_and(sequence_e1_b9_adv, cc_range_1e40_1e7e_3);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp371);
        byte_ba = simd_and(tmp81, tmp38);
        sequence_e1_ba = simd_and(byte_e1_adv, byte_ba);
        tmp372 = simd_or(tmp51, tmp60);
        tmp373 = simd_or(tmp372, tmp64);
        tmp374 = simd_or(tmp373, tmp66);
        tmp375 = simd_or(tmp374, tmp68);
        tmp376 = simd_or(tmp375, tmp70);
        tmp377 = simd_or(tmp376, tmp72);
        tmp378 = simd_or(tmp377, tmp74);
        tmp379 = simd_or(tmp378, tmp76);
        tmp380 = simd_or(tmp379, tmp78);
        tmp381 = simd_or(tmp380, tmp82);
        tmp382 = simd_or(tmp381, tmp84);
        tmp383 = simd_or(tmp382, tmp86);
        tmp384 = simd_or(tmp383, tmp88);
        tmp385 = simd_or(tmp384, byte_b8);
        tmp386 = simd_or(tmp385, byte_ba);
        tmp387 = simd_or(tmp386, tmp192);
        cc_range_1e80_1ebe_3 = simd_or(tmp387, tmp230);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(sequence_e1_ba, carryQ.get_carry_in(22), sequence_e1_ba_adv));
        tmp388 = simd_and(sequence_e1_ba_adv, cc_range_1e80_1ebe_3);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp388);
        byte_bb = simd_and(tmp81, tmp94);
        sequence_e1_bb = simd_and(byte_e1_adv, byte_bb);
        cc_range_1ec0_1efe_3 = simd_andc(tmp15, basis_bits.bit_7);
        carryQ.cq[23] = carryout2carry(pablo_blk_Advance(sequence_e1_bb, carryQ.get_carry_in(23), sequence_e1_bb_adv));
        tmp389 = simd_and(sequence_e1_bb_adv, cc_range_1ec0_1efe_3);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp389);
        byte_bc = simd_and(tmp81, tmp41);
        sequence_e1_bc = simd_and(byte_e1_adv, byte_bc);
        tmp390 = simd_and(tmp28, basis_bits.bit_4);
        tmp391 = simd_andc(tmp23, tmp162);
        tmp392 = simd_or(tmp390, tmp391);
        tmp393 = simd_and(tmp63, basis_bits.bit_4);
        tmp394 = simd_or(tmp392, tmp393);
        tmp395 = simd_and(tmp81, basis_bits.bit_4);
        cc_range_1f08_1f38_3 = simd_or(tmp394, tmp395);
        carryQ.cq[24] = carryout2carry(pablo_blk_Advance(sequence_e1_bc, carryQ.get_carry_in(24), sequence_e1_bc_adv));
        tmp396 = simd_and(sequence_e1_bc_adv, cc_range_1f08_1f38_3);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp396);
        byte_bd = simd_and(tmp81, tmp97);
        sequence_e1_bd = simd_and(byte_e1_adv, byte_bd);
        tmp397 = simd_andc(tmp390, tmp162);
        tmp398 = simd_or(tmp397, tmp209);
        tmp399 = simd_or(tmp398, tmp211);
        tmp400 = simd_and(tmp22, tmp97);
        tmp401 = simd_or(tmp399, tmp400);
        tmp402 = simd_and(tmp22, tmp100);
        tmp403 = simd_or(tmp401, tmp402);
        cc_range_1f48_1f68_3 = simd_or(tmp403, tmp393);
        carryQ.cq[25] = carryout2carry(pablo_blk_Advance(sequence_e1_bd, carryQ.get_carry_in(25), sequence_e1_bd_adv));
        tmp404 = simd_and(sequence_e1_bd_adv, cc_range_1f48_1f68_3);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp404);
        byte_be = simd_and(tmp81, tmp43);
        sequence_e1_be = simd_and(byte_e1_adv, byte_be);
        byte_range_b8_bb = simd_and(tmp81, tmp35);
        carryQ.cq[26] = carryout2carry(pablo_blk_Advance(sequence_e1_be, carryQ.get_carry_in(26), sequence_e1_be_adv));
        tmp405 = simd_and(sequence_e1_be_adv, byte_range_b8_bb);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp405);
        byte_bf = simd_and(tmp81, tmp100);
        sequence_e1_bf = simd_and(byte_e1_adv, byte_bf);
        tmp406 = simd_andc(tmp12, tmp21);
        tmp407 = simd_andc(tmp15, tmp406);
        tmp408 = simd_and(tmp35, tmp407);
        tmp409 = simd_and(basis_bits.bit_5, tmp8);
        tmp410 = simd_andc(tmp393, tmp409);
        tmp411 = simd_or(tmp408, tmp410);
        cc_range_1fc8_1ff8_3 = simd_or(tmp411, byte_range_b8_bb);
        carryQ.cq[27] = carryout2carry(pablo_blk_Advance(sequence_e1_bf, carryQ.get_carry_in(27), sequence_e1_bf_adv));
        tmp412 = simd_and(sequence_e1_bf_adv, cc_range_1fc8_1ff8_3);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp412);
        byte_e2 = simd_and(tmp362, tmp30);
        byte_84 = simd_and(tmp28, tmp27);
        carryQ.cq[28] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(28), tmp413));
        sequence_e2_84 = simd_and(tmp413, byte_84);
        carryQ.cq[29] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(29), byte_e2_adv));
        tmp414 = simd_or(tmp30, tmp106);
        tmp415 = simd_and(tmp28, tmp414);
        tmp416 = simd_not(basis_bits.bit_6);
        tmp417 = simd_or(simd_and(basis_bits.bit_5, tmp416), simd_andc(tmp3, basis_bits.bit_5));
        tmp418 = simd_and(tmp390, tmp417);
        tmp419 = simd_or(tmp415, tmp418);
        tmp420 = simd_andc(tmp22, tmp7);
        tmp421 = simd_andc(tmp420, tmp3);
        tmp422 = simd_or(tmp419, tmp421);
        tmp423 = simd_or(tmp422, tmp205);
        tmp424 = simd_or(simd_and(basis_bits.bit_5, tmp416), simd_andc(tmp8, basis_bits.bit_5));
        tmp425 = simd_and(tmp23, tmp424);
        tmp426 = simd_or(tmp423, tmp425);
        tmp427 = simd_or(tmp426, tmp68);
        tmp428 = simd_or(tmp427, tmp70);
        tmp429 = simd_or(tmp428, tmp72);
        tmp430 = simd_or(simd_and(basis_bits.bit_5, tmp416), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        tmp431 = simd_and(tmp393, tmp430);
        tmp432 = simd_or(tmp429, tmp431);
        tmp433 = simd_or(tmp432, tmp184);
        tmp434 = simd_and(tmp81, tmp151);
        cc_range_2102_213e_3 = simd_or(tmp433, tmp434);
        carryQ.cq[30] = carryout2carry(pablo_blk_Advance(sequence_e2_84, carryQ.get_carry_in(30), sequence_e2_84_adv));
        tmp435 = simd_and(sequence_e2_84_adv, cc_range_2102_213e_3);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp435);
        byte_85 = simd_and(tmp28, tmp103);
        sequence_e2_85 = simd_and(byte_e2_adv, byte_85);
        carryQ.cq[31] = carryout2carry(pablo_blk_Advance(sequence_e2_85, carryQ.get_carry_in(31), sequence_e2_85_adv));
        tmp436 = simd_and(sequence_e2_85_adv, byte_85);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp436);
        byte_86 = simd_and(tmp28, tmp33);
        sequence_e2_86 = simd_and(byte_e2_adv, byte_86);
        carryQ.cq[32] = carryout2carry(pablo_blk_Advance(sequence_e2_86, carryQ.get_carry_in(32), sequence_e2_86_adv));
        tmp437 = simd_and(sequence_e2_86_adv, byte_83);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp437);
        byte_b0 = simd_andc(tmp81, tmp9);
        sequence_e2_b0 = simd_and(byte_e2_adv, byte_b0);
        tmp438 = simd_or(basis_bits.bit_3, tmp100);
        tmp439 = simd_and(basis_bits.bit_2, tmp438);
        byte_range_80_ae = simd_andc(tmp15, tmp439);
        carryQ.cq[33] = carryout2carry(pablo_blk_Advance(sequence_e2_b0, carryQ.get_carry_in(33), sequence_e2_b0_adv));
        tmp440 = simd_and(sequence_e2_b0_adv, byte_range_80_ae);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp440);
        byte_b1 = simd_and(tmp81, tmp200);
        sequence_e2_b1 = simd_and(byte_e2_adv, byte_b1);
        tmp441 = simd_andc(tmp63, basis_bits.bit_4);
        tmp442 = simd_and(tmp441, tmp271);
        tmp443 = simd_or(tmp64, tmp442);
        tmp444 = simd_and(tmp63, tmp106);
        tmp445 = simd_or(tmp443, tmp444);
        tmp446 = simd_or(tmp445, tmp179);
        tmp447 = simd_and(tmp63, tmp94);
        tmp448 = simd_or(tmp446, tmp447);
        tmp449 = simd_not(tmp9);
        tmp450 = simd_and(tmp40, tmp8);
        tmp451 = simd_or(simd_and(basis_bits.bit_3, tmp449), simd_andc(tmp450, basis_bits.bit_3));
        tmp452 = simd_and(byte_range_a0_bf, tmp451);
        tmp453 = simd_or(tmp448, tmp452);
        tmp454 = simd_or(tmp453, tmp84);
        tmp455 = simd_or(tmp454, tmp187);
        cc_range_2c60_2c7e_3 = simd_or(tmp455, tmp434);
        carryQ.cq[34] = carryout2carry(pablo_blk_Advance(sequence_e2_b1, carryQ.get_carry_in(34), sequence_e2_b1_adv));
        tmp456 = simd_and(sequence_e2_b1_adv, cc_range_2c60_2c7e_3);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp456);
        byte_b2 = simd_and(tmp81, tmp30);
        sequence_e2_b2 = simd_and(byte_e2_adv, byte_b2);
        cc_range_2c80_2cbe_3 = simd_andc(tmp15, basis_bits.bit_7);
        carryQ.cq[35] = carryout2carry(pablo_blk_Advance(sequence_e2_b2, carryQ.get_carry_in(35), sequence_e2_b2_adv));
        tmp457 = simd_and(sequence_e2_b2_adv, cc_range_2c80_2cbe_3);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp457);
        byte_b3 = simd_and(tmp81, tmp14);
        sequence_e2_b3 = simd_and(byte_e2_adv, byte_b3);
        tmp458 = simd_or(tmp67, tmp447);
        tmp459 = simd_and(tmp63, tmp97);
        tmp460 = simd_or(tmp458, tmp459);
        cc_range_2cc0_2cf2_3 = simd_or(tmp460, byte_b2);
        carryQ.cq[36] = carryout2carry(pablo_blk_Advance(sequence_e2_b3, carryQ.get_carry_in(36), sequence_e2_b3_adv));
        tmp461 = simd_and(sequence_e2_b3_adv, cc_range_2cc0_2cf2_3);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp461);
        byte_ea = simd_and(tmp362, tmp38);
        byte_99 = simd_and(tmp22, tmp91);
        carryQ.cq[37] = carryout2carry(pablo_blk_Advance(byte_ea, carryQ.get_carry_in(37), tmp462));
        sequence_ea_99 = simd_and(tmp462, byte_99);
        carryQ.cq[38] = carryout2carry(pablo_blk_Advance(byte_ea, carryQ.get_carry_in(38), byte_ea_adv));
        tmp463 = simd_or(basis_bits.bit_3, tmp151);
        tmp464 = simd_and(basis_bits.bit_2, tmp463);
        tmp465 = simd_andc(tmp15, tmp464);
        cc_range_a640_a66c_3 = simd_andc(tmp465, basis_bits.bit_7);
        carryQ.cq[39] = carryout2carry(pablo_blk_Advance(sequence_ea_99, carryQ.get_carry_in(39), sequence_ea_99_adv));
        tmp466 = simd_and(sequence_ea_99_adv, cc_range_a640_a66c_3);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp466);
        byte_9a = simd_and(tmp22, tmp38);
        sequence_ea_9a = simd_and(byte_ea_adv, byte_9a);
        tmp467 = simd_and(basis_bits.bit_3, basis_bits.bit_4);
        tmp468 = simd_andc(tmp16, tmp467);
        cc_range_a680_a696_3 = simd_andc(tmp468, basis_bits.bit_7);
        carryQ.cq[40] = carryout2carry(pablo_blk_Advance(sequence_ea_9a, carryQ.get_carry_in(40), sequence_ea_9a_adv));
        tmp469 = simd_and(sequence_ea_9a_adv, cc_range_a680_a696_3);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp469);
        byte_9c = simd_and(tmp22, tmp41);
        sequence_ea_9c = simd_and(byte_ea_adv, byte_9c);
        tmp470 = simd_or(tmp30, tmp27);
        tmp471 = simd_or(tmp470, tmp33);
        tmp472 = simd_or(tmp471, tmp36);
        tmp473 = simd_or(tmp472, tmp38);
        tmp474 = simd_or(tmp473, tmp41);
        tmp475 = simd_or(tmp474, tmp43);
        tmp476 = simd_and(tmp63, tmp475);
        tmp477 = simd_or(tmp476, byte_b2);
        tmp478 = simd_or(tmp477, tmp86);
        tmp479 = simd_or(tmp478, tmp88);
        tmp480 = simd_or(tmp479, byte_b8);
        tmp481 = simd_or(tmp480, byte_ba);
        tmp482 = simd_or(tmp481, byte_bc);
        cc_range_a722_a73e_3 = simd_or(tmp482, byte_be);
        carryQ.cq[41] = carryout2carry(pablo_blk_Advance(sequence_ea_9c, carryQ.get_carry_in(41), sequence_ea_9c_adv));
        tmp483 = simd_and(sequence_ea_9c_adv, cc_range_a722_a73e_3);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp483);
        byte_9d = simd_and(tmp22, tmp97);
        sequence_ea_9d = simd_and(byte_ea_adv, byte_9d);
        tmp484 = simd_or(tmp55, byte_9a);
        tmp485 = simd_or(tmp484, byte_9c);
        tmp486 = simd_or(tmp485, tmp60);
        tmp487 = simd_or(tmp486, tmp64);
        tmp488 = simd_or(tmp487, tmp66);
        tmp489 = simd_or(tmp488, tmp68);
        tmp490 = simd_or(tmp489, tmp70);
        tmp491 = simd_or(tmp490, tmp72);
        tmp492 = simd_or(tmp491, tmp74);
        tmp493 = simd_or(tmp492, tmp76);
        tmp494 = simd_or(tmp493, tmp78);
        tmp495 = simd_or(tmp494, byte_b9);
        tmp496 = simd_or(tmp495, byte_bb);
        cc_range_a740_a77d_3 = simd_or(tmp496, tmp236);
        carryQ.cq[42] = carryout2carry(pablo_blk_Advance(sequence_ea_9d, carryQ.get_carry_in(42), sequence_ea_9d_adv));
        tmp497 = simd_and(sequence_ea_9d_adv, cc_range_a740_a77d_3);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp497);
        byte_9e = simd_and(tmp22, tmp43);
        sequence_ea_9e = simd_and(byte_ea_adv, byte_9e);
        tmp498 = simd_andc(tmp34, tmp94);
        tmp499 = simd_andc(tmp498, tmp97);
        tmp500 = simd_andc(tmp28, tmp499);
        tmp501 = simd_or(tmp500, tmp46);
        tmp502 = simd_or(tmp501, tmp48);
        tmp503 = simd_or(tmp502, tmp64);
        tmp504 = simd_or(tmp503, tmp66);
        tmp505 = simd_or(tmp504, tmp68);
        tmp506 = simd_or(tmp505, tmp70);
        tmp507 = simd_or(tmp506, tmp72);
        cc_range_a780_a7aa_3 = simd_or(tmp507, tmp74);
        carryQ.cq[43] = carryout2carry(pablo_blk_Advance(sequence_ea_9e, carryQ.get_carry_in(43), sequence_ea_9e_adv));
        tmp508 = simd_and(sequence_ea_9e_adv, cc_range_a780_a7aa_3);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp508);
        byte_ef = simd_and(tmp362, tmp100);
        carryQ.cq[44] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(44), tmp509));
        sequence_ef_bc = simd_and(tmp509, byte_bc);
        carryQ.cq[45] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(45), byte_ef_adv));
        byte_range_a1_ba = simd_and(byte_range_a0_bf, tmp10);
        carryQ.cq[46] = carryout2carry(pablo_blk_Advance(sequence_ef_bc, carryQ.get_carry_in(46), sequence_ef_bc_adv));
        tmp510 = simd_and(sequence_ef_bc_adv, byte_range_a1_ba);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp510);
        tmp511 = simd_and(tmp11, tmp80);
        byte_f0 = simd_andc(tmp511, tmp9);
        byte_90 = simd_andc(tmp22, tmp9);
        carryQ.cq[47] = carryout2carry(pablo_blk_Advance(byte_f0, carryQ.get_carry_in(47), tmp512));
        sequence_f0_90 = simd_and(tmp512, byte_90);
        carryQ.cq[48] = carryout2carry(pablo_blk_Advance(byte_f0, carryQ.get_carry_in(48), byte_f0_adv));
        carryQ.cq[49] = carryout2carry(pablo_blk_Advance(sequence_f0_90, carryQ.get_carry_in(49), tmp513));
        sequence_f0_90_90 = simd_and(tmp513, byte_90);
        carryQ.cq[50] = carryout2carry(pablo_blk_Advance(sequence_f0_90, carryQ.get_carry_in(50), sequence_f0_90_adv));
        tmp514 = simd_or(basis_bits.bit_3, basis_bits.bit_4);
        tmp515 = simd_and(basis_bits.bit_2, tmp514);
        byte_range_80_a7 = simd_andc(tmp15, tmp515);
        carryQ.cq[51] = carryout2carry(pablo_blk_Advance(sequence_f0_90_90, carryQ.get_carry_in(51), sequence_f0_90_90_adv));
        tmp516 = simd_and(sequence_f0_90_90_adv, byte_range_80_a7);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp516);
        sequence_f0_9d = simd_and(byte_f0_adv, byte_9d);
        carryQ.cq[52] = carryout2carry(pablo_blk_Advance(sequence_f0_9d, carryQ.get_carry_in(52), tmp517));
        sequence_f0_9d_90 = simd_and(tmp517, byte_90);
        carryQ.cq[53] = carryout2carry(pablo_blk_Advance(sequence_f0_9d, carryQ.get_carry_in(53), sequence_f0_9d_adv));
        tmp518 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
        tmp519 = simd_and(basis_bits.bit_4, tmp518);
        tmp520 = simd_and(basis_bits.bit_3, tmp519);
        tmp521 = simd_andc(tmp16, tmp520);
        tmp522 = simd_and(tmp81, tmp7);
        cc_range_1d400_1d434_4 = simd_or(tmp521, tmp522);
        carryQ.cq[54] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_90, carryQ.get_carry_in(54), sequence_f0_9d_90_adv));
        tmp523 = simd_and(sequence_f0_9d_90_adv, cc_range_1d400_1d434_4);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp523);
        byte_91 = simd_and(tmp22, tmp200);
        sequence_f0_9d_91 = simd_and(sequence_f0_9d_adv, byte_91);
        tmp524 = simd_and(basis_bits.bit_4, tmp162);
        tmp525 = simd_andc(tmp28, tmp524);
        tmp526 = simd_and(byte_range_a0_bf, tmp514);
        cc_range_1d440_1d468_4 = simd_or(tmp525, tmp526);
        carryQ.cq[55] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_91, carryQ.get_carry_in(55), sequence_f0_9d_91_adv));
        tmp527 = simd_and(sequence_f0_9d_91_adv, cc_range_1d440_1d468_4);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp527);
        byte_92 = simd_and(tmp22, tmp30);
        sequence_f0_9d_92 = simd_and(sequence_f0_9d_adv, byte_92);
        tmp528 = simd_andc(tmp28, tmp149);
        tmp529 = simd_or(tmp528, byte_9c);
        tmp530 = simd_and(tmp22, tmp151);
        tmp531 = simd_or(tmp529, tmp530);
        tmp532 = simd_or(tmp531, tmp66);
        tmp533 = simd_and(tmp63, tmp26);
        tmp534 = simd_and(tmp533, tmp139);
        tmp535 = simd_or(tmp532, tmp534);
        tmp536 = simd_or(simd_and(basis_bits.bit_5, tmp156), simd_andc(tmp8, basis_bits.bit_5));
        tmp537 = simd_and(tmp393, tmp536);
        tmp538 = simd_or(tmp535, tmp537);
        tmp539 = simd_or(basis_bits.bit_4, tmp162);
        tmp540 = simd_not(tmp539);
        tmp541 = simd_or(simd_and(basis_bits.bit_3, tmp540), simd_andc(tmp151, basis_bits.bit_3));
        tmp542 = simd_and(byte_range_a0_bf, tmp541);
        cc_range_1d480_1d4ae_4 = simd_or(tmp538, tmp542);
        carryQ.cq[56] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_92, carryQ.get_carry_in(56), sequence_f0_9d_92_adv));
        tmp543 = simd_and(sequence_f0_9d_92_adv, cc_range_1d480_1d4ae_4);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp543);
        byte_93 = simd_and(tmp22, tmp14);
        sequence_f0_9d_93 = simd_and(sequence_f0_9d_adv, byte_93);
        tmp544 = simd_or(basis_bits.bit_3, tmp519);
        tmp545 = simd_not(tmp544);
        tmp546 = simd_or(simd_and(basis_bits.bit_2, tmp545), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
        byte_range_90_a9 = simd_and(tmp15, tmp546);
        carryQ.cq[57] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_93, carryQ.get_carry_in(57), sequence_f0_9d_93_adv));
        tmp547 = simd_and(sequence_f0_9d_93_adv, byte_range_90_a9);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp547);
        byte_94 = simd_and(tmp22, tmp27);
        sequence_f0_9d_94 = simd_and(sequence_f0_9d_adv, byte_94);
        tmp548 = simd_andc(tmp26, basis_bits.bit_6);
        tmp549 = simd_not(tmp4);
        tmp550 = simd_or(simd_and(basis_bits.bit_4, tmp549), simd_andc(tmp17, basis_bits.bit_4));
        tmp551 = simd_or(tmp548, tmp550);
        tmp552 = simd_and(tmp28, tmp551);
        tmp553 = simd_or(basis_bits.bit_4, tmp409);
        tmp554 = simd_not(tmp553);
        tmp555 = simd_or(simd_and(basis_bits.bit_3, tmp554), simd_andc(tmp450, basis_bits.bit_3));
        tmp556 = simd_and(tmp16, tmp555);
        tmp557 = simd_or(tmp552, tmp556);
        tmp558 = simd_not(tmp409);
        tmp559 = simd_or(simd_and(basis_bits.bit_4, tmp558), simd_andc(tmp162, basis_bits.bit_4));
        tmp560 = simd_and(tmp22, tmp559);
        tmp561 = simd_or(tmp557, tmp560);
        tmp562 = simd_or(tmp561, tmp133);
        tmp563 = simd_and(tmp395, tmp241);
        cc_range_1d504_1d53b_4 = simd_or(tmp562, tmp563);
        carryQ.cq[58] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_94, carryQ.get_carry_in(58), sequence_f0_9d_94_adv));
        tmp564 = simd_and(sequence_f0_9d_94_adv, cc_range_1d504_1d53b_4);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp564);
        byte_95 = simd_and(tmp22, tmp103);
        sequence_f0_9d_95 = simd_and(sequence_f0_9d_adv, byte_95);
        tmp565 = simd_andc(tmp239, tmp409);
        tmp566 = simd_or(tmp565, byte_86);
        tmp567 = simd_or(simd_and(basis_bits.bit_3, tmp449), simd_andc(tmp519, basis_bits.bit_3));
        tmp568 = simd_and(tmp16, tmp567);
        tmp569 = simd_or(tmp566, tmp568);
        tmp570 = simd_or(basis_bits.bit_3, tmp40);
        tmp571 = simd_and(byte_range_a0_bf, tmp570);
        cc_range_1d540_1d56c_4 = simd_or(tmp569, tmp571);
        carryQ.cq[59] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_95, carryQ.get_carry_in(59), sequence_f0_9d_95_adv));
        tmp572 = simd_and(sequence_f0_9d_95_adv, cc_range_1d540_1d56c_4);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp572);
        byte_96 = simd_and(tmp22, tmp33);
        sequence_f0_9d_96 = simd_and(sequence_f0_9d_adv, byte_96);
        tmp573 = simd_andc(byte_range_a0_bf, tmp520);
        cc_range_1d580_1d5a0_4 = simd_or(tmp365, tmp573);
        carryQ.cq[60] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_96, carryQ.get_carry_in(60), sequence_f0_9d_96_adv));
        tmp574 = simd_and(sequence_f0_9d_96_adv, cc_range_1d580_1d5a0_4);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp574);
        byte_97 = simd_and(tmp22, tmp106);
        sequence_f0_9d_97 = simd_and(sequence_f0_9d_adv, byte_97);
        tmp575 = simd_not(tmp463);
        tmp576 = simd_and(basis_bits.bit_3, tmp7);
        tmp577 = simd_or(simd_and(basis_bits.bit_2, tmp575), simd_andc(tmp576, basis_bits.bit_2));
        byte_range_94_ad = simd_and(tmp15, tmp577);
        carryQ.cq[61] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_97, carryQ.get_carry_in(61), sequence_f0_9d_97_adv));
        tmp578 = simd_and(sequence_f0_9d_97_adv, byte_range_94_ad);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp578);
        byte_98 = simd_and(tmp22, tmp36);
        sequence_f0_9d_98 = simd_and(sequence_f0_9d_adv, byte_98);
        tmp579 = simd_or(simd_and(basis_bits.bit_2, tmp261), simd_andc(tmp514, basis_bits.bit_2));
        tmp580 = simd_and(tmp15, tmp579);
        cc_range_1d608_1d63c_4 = simd_or(tmp580, tmp235);
        carryQ.cq[62] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_98, carryQ.get_carry_in(62), sequence_f0_9d_98_adv));
        tmp581 = simd_and(sequence_f0_9d_98_adv, cc_range_1d608_1d63c_4);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp581);
        sequence_f0_9d_99 = simd_and(sequence_f0_9d_adv, byte_99);
        tmp582 = simd_and(basis_bits.bit_3, tmp539);
        tmp583 = simd_andc(tmp16, tmp582);
        cc_range_1d640_1d670_4 = simd_or(tmp583, tmp81);
        carryQ.cq[63] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_99, carryQ.get_carry_in(63), sequence_f0_9d_99_adv));
        tmp584 = simd_and(sequence_f0_9d_99_adv, cc_range_1d640_1d670_4);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp584);
        sequence_f0_9d_9a = simd_and(sequence_f0_9d_adv, byte_9a);
        tmp585 = simd_andc(tmp28, tmp519);
        cc_range_1d680_1d6a8_4 = simd_or(tmp585, tmp526);
        carryQ.cq[64] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_9a, carryQ.get_carry_in(64), sequence_f0_9d_9a_adv));
        tmp586 = simd_and(sequence_f0_9d_9a_adv, cc_range_1d680_1d6a8_4);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp586);
        byte_9b = simd_and(tmp22, tmp94);
        sequence_f0_9d_9b = simd_and(sequence_f0_9d_adv, byte_9b);
        tmp587 = simd_andc(tmp28, tmp9);
        tmp588 = simd_or(simd_and(basis_bits.bit_3, tmp6), simd_andc(tmp149, basis_bits.bit_3));
        tmp589 = simd_and(byte_range_a0_bf, tmp588);
        cc_range_1d6c0_1d6e2_4 = simd_or(tmp587, tmp589);
        carryQ.cq[65] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_9b, carryQ.get_carry_in(65), sequence_f0_9d_9b_adv));
        tmp590 = simd_and(sequence_f0_9d_9b_adv, cc_range_1d6c0_1d6e2_4);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp590);
        sequence_f0_9d_9c = simd_and(sequence_f0_9d_adv, byte_9c);
        tmp591 = simd_and(basis_bits.bit_3, tmp553);
        tmp592 = simd_not(tmp591);
        tmp593 = simd_and(basis_bits.bit_3, tmp40);
        tmp594 = simd_or(simd_and(basis_bits.bit_2, tmp592), simd_andc(tmp593, basis_bits.bit_2));
        byte_range_9c_b4 = simd_and(tmp15, tmp594);
        carryQ.cq[66] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_9c, carryQ.get_carry_in(66), sequence_f0_9d_9c_adv));
        tmp595 = simd_and(sequence_f0_9d_9c_adv, byte_range_9c_b4);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp595);
        sequence_f0_9d_9d = simd_and(sequence_f0_9d_adv, byte_9d);
        tmp596 = simd_not(tmp438);
        tmp597 = simd_or(simd_and(basis_bits.bit_2, tmp596), simd_andc(tmp582, basis_bits.bit_2));
        byte_range_96_ae = simd_and(tmp15, tmp597);
        carryQ.cq[67] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_9d, carryQ.get_carry_in(67), sequence_f0_9d_9d_adv));
        tmp598 = simd_and(sequence_f0_9d_9d_adv, byte_range_96_ae);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp598);
        sequence_f0_9d_9e = simd_and(sequence_f0_9d_adv, byte_9e);
        tmp599 = simd_and(basis_bits.bit_4, tmp160);
        tmp600 = simd_or(basis_bits.bit_3, tmp599);
        tmp601 = simd_not(tmp600);
        tmp602 = simd_or(simd_and(basis_bits.bit_2, tmp601), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
        byte_range_90_a8 = simd_and(tmp15, tmp602);
        carryQ.cq[68] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_9e, carryQ.get_carry_in(68), sequence_f0_9d_9e_adv));
        tmp603 = simd_and(sequence_f0_9d_9e_adv, byte_range_90_a8);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp603);
        byte_9f = simd_and(tmp22, tmp100);
        sequence_f0_9d_9f = simd_and(sequence_f0_9d_adv, byte_9f);
        byte_8a = simd_and(tmp28, tmp38);
        carryQ.cq[69] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_9f, carryQ.get_carry_in(69), sequence_f0_9d_9f_adv));
        tmp604 = simd_and(sequence_f0_9d_9f_adv, byte_8a);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp604);
        carryQ.CarryQ_Adjust(70);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Lu & struct_Lu, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, tmp7, tmp8, tmp9, tmp10;
		BitBlock byte_range_41_5a, tmp11, tmp12, tmp13, tmp14, byte_c3, tmp15, tmp16;
		BitBlock tmp17, tmp18, tmp19, tmp20, tmp21, tmp22, tmp23, tmp24;
		BitBlock cc_range_c0_d8_2, byte_c3_adv, tmp25, tmp26, tmp27, byte_c4, tmp28;
		BitBlock tmp29, tmp30, tmp31, tmp32, tmp33, tmp34, tmp35, tmp36, tmp37, tmp38;
		BitBlock tmp39, tmp40, tmp41, tmp42, tmp43, tmp44, tmp45, tmp46, tmp47, tmp48;
		BitBlock tmp49, tmp50, tmp51, tmp52, tmp53, tmp54, tmp55, tmp56, tmp57, tmp58;
		BitBlock tmp59, tmp60, tmp61, tmp62, tmp63, tmp64, tmp65, tmp66, tmp67, tmp68;
		BitBlock tmp69, tmp70, tmp71, tmp72, tmp73, tmp74, tmp75, tmp76, tmp77, tmp78;
		BitBlock tmp79, tmp80, tmp81, tmp82, tmp83, tmp84, tmp85, tmp86, tmp87, tmp88;
		BitBlock tmp89, tmp90, tmp91, tmp92, tmp93, tmp94, tmp95, tmp96, tmp97, tmp98;
		BitBlock tmp99, tmp100, tmp101, cc_range_100_13f_2, byte_c4_adv, tmp102;
		BitBlock tmp103, byte_c5, tmp104, tmp105, tmp106, tmp107, tmp108, tmp109;
		BitBlock tmp110, tmp111, tmp112, tmp113, tmp114, tmp115, tmp116, tmp117;
		BitBlock tmp118, tmp119, tmp120, tmp121, tmp122, tmp123, tmp124, tmp125;
		BitBlock tmp126, tmp127, tmp128, tmp129, tmp130, tmp131, tmp132, tmp133;
		BitBlock tmp134, tmp135, cc_range_141_17d_2, byte_c5_adv, tmp136, byte_c6;
		BitBlock tmp137, tmp138, tmp139, tmp140, tmp141, tmp142, tmp143, tmp144;
		BitBlock tmp145, tmp146, tmp147, tmp148, tmp149, tmp150, tmp151, tmp152;
		BitBlock tmp153, tmp154, tmp155, tmp156, tmp157, tmp158, tmp159, tmp160;
		BitBlock tmp161, tmp162, tmp163, tmp164, tmp165, tmp166, tmp167, tmp168;
		BitBlock tmp169, tmp170, tmp171, tmp172, tmp173, tmp174, tmp175, tmp176;
		BitBlock tmp177, tmp178, tmp179, tmp180, tmp181, tmp182, tmp183, tmp184;
		BitBlock tmp185, tmp186, tmp187, tmp188, tmp189, tmp190, tmp191, tmp192;
		BitBlock cc_range_181_1bc_2, byte_c6_adv, tmp193, byte_c7, tmp194, tmp195;
		BitBlock tmp196, tmp197, tmp198, tmp199, tmp200, tmp201, tmp202, tmp203;
		BitBlock tmp204, tmp205, tmp206, tmp207, tmp208, tmp209, tmp210, tmp211;
		BitBlock tmp212, tmp213, tmp214, tmp215, tmp216, tmp217, tmp218, tmp219;
		BitBlock tmp220, tmp221, tmp222, tmp223, tmp224, tmp225, tmp226, tmp227;
		BitBlock tmp228, tmp229, tmp230, cc_range_1c4_1fe_2, byte_c7_adv, tmp231;
		BitBlock byte_c8, tmp232, tmp233, tmp234, tmp235, tmp236, cc_range_200_23d_2;
		BitBlock byte_c8_adv, tmp237, byte_c9, tmp238, tmp239, tmp240, tmp241, tmp242;
		BitBlock tmp243, tmp244, tmp245, tmp246, tmp247, tmp248, tmp249, tmp250;
		BitBlock cc_range_241_24e_2, byte_c9_adv, tmp251, byte_cd, tmp252;
		BitBlock cc_range_370_376_2, byte_cd_adv, tmp253, byte_ce, tmp254, tmp255;
		BitBlock tmp256, tmp257, tmp258, tmp259, tmp260, tmp261, tmp262, tmp263;
		BitBlock tmp264, tmp265, tmp266, tmp267, tmp268, cc_range_386_3a3_2;
		BitBlock byte_ce_adv, tmp269, byte_cf, tmp270, tmp271, tmp272, tmp273, tmp274;
		BitBlock tmp275, tmp276, tmp277, tmp278, tmp279, tmp280, tmp281, tmp282;
		BitBlock tmp283, tmp284, tmp285, tmp286, tmp287, tmp288, tmp289, tmp290;
		BitBlock tmp291, tmp292, cc_range_3cf_3fd_2, byte_cf_adv, tmp293, tmp294;
		BitBlock byte_d0, byte_range_80_af, byte_d0_adv, tmp295, byte_d1, tmp296;
		BitBlock cc_range_460_47e_2, byte_d1_adv, tmp297, byte_d2, tmp298, tmp299;
		BitBlock tmp300, tmp301, tmp302, tmp303, tmp304, tmp305, tmp306, tmp307;
		BitBlock tmp308, tmp309, tmp310, tmp311, tmp312, tmp313, tmp314, tmp315;
		BitBlock tmp316, tmp317, tmp318, tmp319, tmp320, tmp321, tmp322, tmp323;
		BitBlock tmp324, tmp325, cc_range_480_4be_2, byte_d2_adv, tmp326, byte_d3;
		BitBlock tmp327, tmp328, tmp329, tmp330, tmp331, tmp332, tmp333, tmp334;
		BitBlock tmp335, tmp336, tmp337, tmp338, tmp339, tmp340, tmp341, tmp342;
		BitBlock tmp343, tmp344, tmp345, tmp346, tmp347, tmp348, tmp349, tmp350;
		BitBlock tmp351, tmp352, tmp353, tmp354, tmp355, tmp356, cc_range_4c0_4fe_2;
		BitBlock byte_d3_adv, tmp357, byte_d4, tmp358, tmp359, cc_range_500_531_2;
		BitBlock byte_d4_adv, tmp360, byte_d5, byte_range_80_96, byte_d5_adv, tmp361;
		BitBlock tmp362, byte_e1, byte_82, tmp363, sequence_e1_82, byte_e1_adv;
		BitBlock byte_range_a0_bf, sequence_e1_82_adv, tmp364, byte_83, sequence_e1_83;
		BitBlock tmp365, tmp366, tmp367, tmp368, cc_range_10c0_10cd_3;
		BitBlock sequence_e1_83_adv, tmp369, byte_b8, sequence_e1_b8;
		BitBlock cc_range_1e00_1e3e_3, sequence_e1_b8_adv, tmp370, byte_b9;
		BitBlock sequence_e1_b9, cc_range_1e40_1e7e_3, sequence_e1_b9_adv, tmp371;
		BitBlock byte_ba, sequence_e1_ba, tmp372, tmp373, tmp374, tmp375, tmp376;
		BitBlock tmp377, tmp378, tmp379, tmp380, tmp381, tmp382, tmp383, tmp384;
		BitBlock tmp385, tmp386, tmp387, cc_range_1e80_1ebe_3, sequence_e1_ba_adv;
		BitBlock tmp388, byte_bb, sequence_e1_bb, cc_range_1ec0_1efe_3;
		BitBlock sequence_e1_bb_adv, tmp389, byte_bc, sequence_e1_bc, tmp390, tmp391;
		BitBlock tmp392, tmp393, tmp394, tmp395, cc_range_1f08_1f38_3;
		BitBlock sequence_e1_bc_adv, tmp396, byte_bd, sequence_e1_bd, tmp397, tmp398;
		BitBlock tmp399, tmp400, tmp401, tmp402, tmp403, cc_range_1f48_1f68_3;
		BitBlock sequence_e1_bd_adv, tmp404, byte_be, sequence_e1_be, byte_range_b8_bb;
		BitBlock sequence_e1_be_adv, tmp405, byte_bf, sequence_e1_bf, tmp406, tmp407;
		BitBlock tmp408, tmp409, tmp410, tmp411, cc_range_1fc8_1ff8_3;
		BitBlock sequence_e1_bf_adv, tmp412, byte_e2, byte_84, tmp413, sequence_e2_84;
		BitBlock byte_e2_adv, tmp414, tmp415, tmp416, tmp417, tmp418, tmp419, tmp420;
		BitBlock tmp421, tmp422, tmp423, tmp424, tmp425, tmp426, tmp427, tmp428;
		BitBlock tmp429, tmp430, tmp431, tmp432, tmp433, tmp434, cc_range_2102_213e_3;
		BitBlock sequence_e2_84_adv, tmp435, byte_85, sequence_e2_85;
		BitBlock sequence_e2_85_adv, tmp436, byte_86, sequence_e2_86;
		BitBlock sequence_e2_86_adv, tmp437, byte_b0, sequence_e2_b0, tmp438, tmp439;
		BitBlock byte_range_80_ae, sequence_e2_b0_adv, tmp440, byte_b1, sequence_e2_b1;
		BitBlock tmp441, tmp442, tmp443, tmp444, tmp445, tmp446, tmp447, tmp448;
		BitBlock tmp449, tmp450, tmp451, tmp452, tmp453, tmp454, tmp455;
		BitBlock cc_range_2c60_2c7e_3, sequence_e2_b1_adv, tmp456, byte_b2;
		BitBlock sequence_e2_b2, cc_range_2c80_2cbe_3, sequence_e2_b2_adv, tmp457;
		BitBlock byte_b3, sequence_e2_b3, tmp458, tmp459, tmp460, cc_range_2cc0_2cf2_3;
		BitBlock sequence_e2_b3_adv, tmp461, byte_ea, byte_99, tmp462, sequence_ea_99;
		BitBlock byte_ea_adv, tmp463, tmp464, tmp465, cc_range_a640_a66c_3;
		BitBlock sequence_ea_99_adv, tmp466, byte_9a, sequence_ea_9a, tmp467, tmp468;
		BitBlock cc_range_a680_a696_3, sequence_ea_9a_adv, tmp469, byte_9c;
		BitBlock sequence_ea_9c, tmp470, tmp471, tmp472, tmp473, tmp474, tmp475;
		BitBlock tmp476, tmp477, tmp478, tmp479, tmp480, tmp481, tmp482;
		BitBlock cc_range_a722_a73e_3, sequence_ea_9c_adv, tmp483, byte_9d;
		BitBlock sequence_ea_9d, tmp484, tmp485, tmp486, tmp487, tmp488, tmp489;
		BitBlock tmp490, tmp491, tmp492, tmp493, tmp494, tmp495, tmp496;
		BitBlock cc_range_a740_a77d_3, sequence_ea_9d_adv, tmp497, byte_9e;
		BitBlock sequence_ea_9e, tmp498, tmp499, tmp500, tmp501, tmp502, tmp503;
		BitBlock tmp504, tmp505, tmp506, tmp507, cc_range_a780_a7aa_3;
		BitBlock sequence_ea_9e_adv, tmp508, byte_ef, tmp509, sequence_ef_bc;
		BitBlock byte_ef_adv, byte_range_a1_ba, sequence_ef_bc_adv, tmp510, tmp511;
		BitBlock byte_f0, byte_90, tmp512, sequence_f0_90, byte_f0_adv, tmp513;
		BitBlock sequence_f0_90_90, sequence_f0_90_adv, tmp514, tmp515;
		BitBlock byte_range_80_a7, sequence_f0_90_90_adv, tmp516, sequence_f0_9d;
		BitBlock tmp517, sequence_f0_9d_90, sequence_f0_9d_adv, tmp518, tmp519, tmp520;
		BitBlock tmp521, tmp522, cc_range_1d400_1d434_4, sequence_f0_9d_90_adv, tmp523;
		BitBlock byte_91, sequence_f0_9d_91, tmp524, tmp525, tmp526;
		BitBlock cc_range_1d440_1d468_4, sequence_f0_9d_91_adv, tmp527, byte_92;
		BitBlock sequence_f0_9d_92, tmp528, tmp529, tmp530, tmp531, tmp532, tmp533;
		BitBlock tmp534, tmp535, tmp536, tmp537, tmp538, tmp539, tmp540, tmp541;
		BitBlock tmp542, cc_range_1d480_1d4ae_4, sequence_f0_9d_92_adv, tmp543;
		BitBlock byte_93, sequence_f0_9d_93, tmp544, tmp545, tmp546, byte_range_90_a9;
		BitBlock sequence_f0_9d_93_adv, tmp547, byte_94, sequence_f0_9d_94, tmp548;
		BitBlock tmp549, tmp550, tmp551, tmp552, tmp553, tmp554, tmp555, tmp556;
		BitBlock tmp557, tmp558, tmp559, tmp560, tmp561, tmp562, tmp563;
		BitBlock cc_range_1d504_1d53b_4, sequence_f0_9d_94_adv, tmp564, byte_95;
		BitBlock sequence_f0_9d_95, tmp565, tmp566, tmp567, tmp568, tmp569, tmp570;
		BitBlock tmp571, cc_range_1d540_1d56c_4, sequence_f0_9d_95_adv, tmp572;
		BitBlock byte_96, sequence_f0_9d_96, tmp573, cc_range_1d580_1d5a0_4;
		BitBlock sequence_f0_9d_96_adv, tmp574, byte_97, sequence_f0_9d_97, tmp575;
		BitBlock tmp576, tmp577, byte_range_94_ad, sequence_f0_9d_97_adv, tmp578;
		BitBlock byte_98, sequence_f0_9d_98, tmp579, tmp580, cc_range_1d608_1d63c_4;
		BitBlock sequence_f0_9d_98_adv, tmp581, sequence_f0_9d_99, tmp582, tmp583;
		BitBlock cc_range_1d640_1d670_4, sequence_f0_9d_99_adv, tmp584;
		BitBlock sequence_f0_9d_9a, tmp585, cc_range_1d680_1d6a8_4;
		BitBlock sequence_f0_9d_9a_adv, tmp586, byte_9b, sequence_f0_9d_9b, tmp587;
		BitBlock tmp588, tmp589, cc_range_1d6c0_1d6e2_4, sequence_f0_9d_9b_adv, tmp590;
		BitBlock sequence_f0_9d_9c, tmp591, tmp592, tmp593, tmp594, byte_range_9c_b4;
		BitBlock sequence_f0_9d_9c_adv, tmp595, sequence_f0_9d_9d, tmp596, tmp597;
		BitBlock byte_range_96_ae, sequence_f0_9d_9d_adv, tmp598, sequence_f0_9d_9e;
		BitBlock tmp599, tmp600, tmp601, tmp602, byte_range_90_a8;
		BitBlock sequence_f0_9d_9e_adv, tmp603, byte_9f, sequence_f0_9d_9f, byte_8a;
		BitBlock sequence_f0_9d_9f_adv, tmp604;




        struct_Lu.cc = simd<1>::constant<0>();
        tmp1 = simd_andc(basis_bits.bit_1, basis_bits.bit_0);
        tmp2 = simd_andc(tmp1, basis_bits.bit_2);
        tmp3 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp4 = simd_or(basis_bits.bit_5, tmp3);
        tmp5 = simd_and(basis_bits.bit_4, tmp4);
        tmp6 = simd_not(tmp5);
        tmp7 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp8 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp9 = simd_or(tmp7, tmp8);
        tmp10 = simd_or(simd_and(basis_bits.bit_3, tmp6), simd_andc(tmp9, basis_bits.bit_3));
        byte_range_41_5a = simd_and(tmp2, tmp10);
        struct_Lu.cc = simd_or(struct_Lu.cc, byte_range_41_5a);
        tmp11 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp12 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp13 = simd_andc(tmp11, tmp12);
        tmp14 = simd_andc(tmp3, tmp7);
        byte_c3 = simd_and(tmp13, tmp14);
        tmp15 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp16 = simd_andc(tmp15, basis_bits.bit_2);
        tmp17 = simd_and(basis_bits.bit_5, tmp3);
        tmp18 = simd_or(basis_bits.bit_4, tmp17);
        tmp19 = simd_and(basis_bits.bit_3, tmp18);
        tmp20 = simd_andc(tmp16, tmp19);
        tmp21 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp22 = simd_and(tmp15, tmp21);
        tmp23 = simd_and(tmp22, basis_bits.bit_4);
        tmp24 = simd_andc(tmp23, tmp17);
        cc_range_c0_d8_2 = simd_or(tmp20, tmp24);
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(byte_c3, carryQ.get_carry_in(0), byte_c3_adv));
        tmp25 = simd_and(byte_c3_adv, cc_range_c0_d8_2);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp25);
        tmp26 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp27 = simd_andc(tmp26, tmp8);
        byte_c4 = simd_and(tmp13, tmp27);
        tmp28 = simd_andc(tmp15, tmp12);
        tmp29 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp30 = simd_andc(tmp29, tmp7);
        tmp31 = simd_andc(tmp9, tmp30);
        tmp32 = simd_andc(tmp31, tmp27);
        tmp33 = simd_and(tmp26, tmp29);
        tmp34 = simd_andc(tmp32, tmp33);
        tmp35 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp36 = simd_andc(tmp35, tmp8);
        tmp37 = simd_andc(tmp34, tmp36);
        tmp38 = simd_and(tmp35, tmp29);
        tmp39 = simd_andc(tmp37, tmp38);
        tmp40 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp41 = simd_andc(tmp40, tmp8);
        tmp42 = simd_andc(tmp39, tmp41);
        tmp43 = simd_and(tmp40, tmp29);
        tmp44 = simd_andc(tmp42, tmp43);
        tmp45 = simd_andc(tmp28, tmp44);
        tmp46 = simd_andc(tmp22, tmp9);
        tmp47 = simd_or(tmp45, tmp46);
        tmp48 = simd_and(tmp22, tmp30);
        tmp49 = simd_or(tmp47, tmp48);
        tmp50 = simd_and(tmp22, tmp27);
        tmp51 = simd_or(tmp49, tmp50);
        tmp52 = simd_and(tmp22, tmp33);
        tmp53 = simd_or(tmp51, tmp52);
        tmp54 = simd_and(tmp22, tmp36);
        tmp55 = simd_or(tmp53, tmp54);
        tmp56 = simd_and(tmp22, tmp38);
        tmp57 = simd_or(tmp55, tmp56);
        tmp58 = simd_and(tmp22, tmp41);
        tmp59 = simd_or(tmp57, tmp58);
        tmp60 = simd_and(tmp22, tmp43);
        tmp61 = simd_or(tmp59, tmp60);
        tmp62 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp63 = simd_and(tmp15, tmp62);
        tmp64 = simd_andc(tmp63, tmp9);
        tmp65 = simd_or(tmp61, tmp64);
        tmp66 = simd_and(tmp63, tmp30);
        tmp67 = simd_or(tmp65, tmp66);
        tmp68 = simd_and(tmp63, tmp27);
        tmp69 = simd_or(tmp67, tmp68);
        tmp70 = simd_and(tmp63, tmp33);
        tmp71 = simd_or(tmp69, tmp70);
        tmp72 = simd_and(tmp63, tmp36);
        tmp73 = simd_or(tmp71, tmp72);
        tmp74 = simd_and(tmp63, tmp38);
        tmp75 = simd_or(tmp73, tmp74);
        tmp76 = simd_and(tmp63, tmp41);
        tmp77 = simd_or(tmp75, tmp76);
        tmp78 = simd_and(tmp63, tmp43);
        tmp79 = simd_or(tmp77, tmp78);
        tmp80 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp81 = simd_and(tmp15, tmp80);
        tmp82 = simd_andc(tmp81, tmp9);
        tmp83 = simd_or(tmp79, tmp82);
        tmp84 = simd_and(tmp81, tmp30);
        tmp85 = simd_or(tmp83, tmp84);
        tmp86 = simd_and(tmp81, tmp27);
        tmp87 = simd_or(tmp85, tmp86);
        tmp88 = simd_and(tmp81, tmp33);
        tmp89 = simd_or(tmp87, tmp88);
        tmp90 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp91 = simd_and(tmp35, tmp90);
        tmp92 = simd_and(tmp81, tmp91);
        tmp93 = simd_or(tmp89, tmp92);
        tmp94 = simd_and(tmp35, tmp3);
        tmp95 = simd_and(tmp81, tmp94);
        tmp96 = simd_or(tmp93, tmp95);
        tmp97 = simd_and(tmp40, tmp90);
        tmp98 = simd_and(tmp81, tmp97);
        tmp99 = simd_or(tmp96, tmp98);
        tmp100 = simd_and(tmp40, tmp3);
        tmp101 = simd_and(tmp81, tmp100);
        cc_range_100_13f_2 = simd_or(tmp99, tmp101);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(byte_c4, carryQ.get_carry_in(1), byte_c4_adv));
        tmp102 = simd_and(byte_c4_adv, cc_range_100_13f_2);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp102);
        tmp103 = simd_and(tmp26, tmp90);
        byte_c5 = simd_and(tmp13, tmp103);
        tmp104 = simd_andc(basis_bits.bit_7, tmp7);
        tmp105 = simd_or(tmp104, tmp103);
        tmp106 = simd_and(tmp26, tmp3);
        tmp107 = simd_or(tmp105, tmp106);
        tmp108 = simd_or(tmp107, tmp38);
        tmp109 = simd_or(tmp108, tmp41);
        tmp110 = simd_or(tmp109, tmp43);
        tmp111 = simd_and(tmp28, tmp110);
        tmp112 = simd_or(tmp111, tmp46);
        tmp113 = simd_or(tmp112, tmp48);
        tmp114 = simd_or(tmp113, tmp50);
        tmp115 = simd_or(tmp114, tmp52);
        tmp116 = simd_or(tmp115, tmp54);
        tmp117 = simd_or(tmp116, tmp56);
        tmp118 = simd_or(tmp117, tmp58);
        tmp119 = simd_or(tmp118, tmp60);
        tmp120 = simd_or(tmp119, tmp64);
        tmp121 = simd_or(tmp120, tmp66);
        tmp122 = simd_or(tmp121, tmp68);
        tmp123 = simd_or(tmp122, tmp70);
        tmp124 = simd_or(tmp123, tmp72);
        tmp125 = simd_or(tmp124, tmp74);
        tmp126 = simd_or(tmp125, tmp76);
        tmp127 = simd_or(tmp126, tmp78);
        tmp128 = simd_or(tmp127, tmp82);
        tmp129 = simd_or(tmp128, tmp84);
        tmp130 = simd_or(tmp129, tmp86);
        tmp131 = simd_or(tmp130, tmp88);
        tmp132 = simd_andc(tmp35, basis_bits.bit_6);
        tmp133 = simd_and(tmp81, tmp132);
        tmp134 = simd_or(tmp131, tmp133);
        tmp135 = simd_or(tmp134, tmp95);
        cc_range_141_17d_2 = simd_or(tmp135, tmp98);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(byte_c5, carryQ.get_carry_in(2), byte_c5_adv));
        tmp136 = simd_and(byte_c5_adv, cc_range_141_17d_2);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp136);
        byte_c6 = simd_and(tmp13, tmp33);
        tmp137 = simd_andc(tmp28, tmp7);
        tmp138 = simd_not(basis_bits.bit_7);
        tmp139 = simd_or(simd_and(basis_bits.bit_6, tmp138), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
        tmp140 = simd_and(tmp137, tmp139);
        tmp141 = simd_and(tmp28, tmp27);
        tmp142 = simd_or(tmp140, tmp141);
        tmp143 = simd_and(tmp26, basis_bits.bit_6);
        tmp144 = simd_and(tmp28, tmp143);
        tmp145 = simd_or(tmp142, tmp144);
        tmp146 = simd_and(tmp28, tmp35);
        tmp147 = simd_and(tmp146, tmp8);
        tmp148 = simd_or(tmp145, tmp147);
        tmp149 = simd_or(tmp7, basis_bits.bit_6);
        tmp150 = simd_not(tmp149);
        tmp151 = simd_and(tmp40, basis_bits.bit_6);
        tmp152 = simd_or(simd_and(basis_bits.bit_3, tmp150), simd_andc(tmp151, basis_bits.bit_3));
        tmp153 = simd_and(tmp16, tmp152);
        tmp154 = simd_or(tmp148, tmp153);
        tmp155 = simd_andc(tmp22, basis_bits.bit_4);
        tmp156 = simd_not(tmp8);
        tmp157 = simd_or(simd_and(basis_bits.bit_5, tmp156), simd_andc(tmp3, basis_bits.bit_5));
        tmp158 = simd_and(tmp155, tmp157);
        tmp159 = simd_or(tmp154, tmp158);
        tmp160 = simd_or(basis_bits.bit_5, tmp8);
        tmp161 = simd_not(tmp160);
        tmp162 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp163 = simd_or(simd_and(basis_bits.bit_4, tmp161), simd_andc(tmp162, basis_bits.bit_4));
        tmp164 = simd_and(tmp22, tmp163);
        tmp165 = simd_or(tmp159, tmp164);
        tmp166 = simd_andc(tmp40, basis_bits.bit_6);
        tmp167 = simd_and(tmp22, tmp166);
        tmp168 = simd_or(tmp165, tmp167);
        tmp169 = simd_or(basis_bits.bit_3, tmp9);
        tmp170 = simd_not(tmp169);
        tmp171 = simd_and(basis_bits.bit_3, tmp100);
        tmp172 = simd_or(simd_and(basis_bits.bit_2, tmp170), simd_andc(tmp171, basis_bits.bit_2));
        tmp173 = simd_and(tmp15, tmp172);
        tmp174 = simd_or(tmp168, tmp173);
        tmp175 = simd_or(tmp174, tmp66);
        tmp176 = simd_or(tmp175, tmp68);
        tmp177 = simd_and(tmp63, tmp143);
        tmp178 = simd_or(tmp176, tmp177);
        tmp179 = simd_and(tmp63, tmp91);
        tmp180 = simd_or(tmp178, tmp179);
        tmp181 = simd_or(tmp180, tmp76);
        tmp182 = simd_and(tmp63, tmp151);
        tmp183 = simd_or(tmp181, tmp182);
        tmp184 = simd_andc(tmp81, tmp7);
        tmp185 = simd_and(tmp184, tmp8);
        tmp186 = simd_or(tmp183, tmp185);
        tmp187 = simd_and(tmp81, tmp103);
        tmp188 = simd_or(tmp186, tmp187);
        tmp189 = simd_or(simd_and(basis_bits.bit_4, tmp161), simd_andc(tmp17, basis_bits.bit_4));
        tmp190 = simd_and(tmp81, tmp189);
        tmp191 = simd_or(tmp188, tmp190);
        tmp192 = simd_and(tmp81, tmp41);
        cc_range_181_1bc_2 = simd_or(tmp191, tmp192);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(byte_c6, carryQ.get_carry_in(3), byte_c6_adv));
        tmp193 = simd_and(byte_c6_adv, cc_range_181_1bc_2);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp193);
        byte_c7 = simd_and(tmp13, tmp106);
        tmp194 = simd_andc(tmp8, tmp3);
        tmp195 = simd_andc(tmp26, tmp194);
        tmp196 = simd_or(tmp195, tmp38);
        tmp197 = simd_or(tmp196, tmp97);
        tmp198 = simd_or(tmp197, tmp100);
        tmp199 = simd_and(tmp28, tmp198);
        tmp200 = simd_andc(tmp90, tmp7);
        tmp201 = simd_and(tmp22, tmp200);
        tmp202 = simd_or(tmp199, tmp201);
        tmp203 = simd_and(tmp22, tmp14);
        tmp204 = simd_or(tmp202, tmp203);
        tmp205 = simd_and(tmp22, tmp103);
        tmp206 = simd_or(tmp204, tmp205);
        tmp207 = simd_and(tmp22, tmp106);
        tmp208 = simd_or(tmp206, tmp207);
        tmp209 = simd_and(tmp22, tmp91);
        tmp210 = simd_or(tmp208, tmp209);
        tmp211 = simd_and(tmp22, tmp94);
        tmp212 = simd_or(tmp210, tmp211);
        tmp213 = simd_or(tmp212, tmp60);
        tmp214 = simd_or(tmp213, tmp64);
        tmp215 = simd_or(tmp214, tmp66);
        tmp216 = simd_or(tmp215, tmp68);
        tmp217 = simd_or(tmp216, tmp70);
        tmp218 = simd_or(tmp217, tmp72);
        tmp219 = simd_or(tmp218, tmp74);
        tmp220 = simd_or(tmp219, tmp76);
        tmp221 = simd_or(tmp220, tmp78);
        tmp222 = simd_and(tmp81, tmp200);
        tmp223 = simd_or(tmp221, tmp222);
        tmp224 = simd_or(tmp223, tmp86);
        tmp225 = simd_and(tmp81, tmp163);
        tmp226 = simd_or(tmp224, tmp225);
        tmp227 = simd_and(tmp81, tmp38);
        tmp228 = simd_or(tmp226, tmp227);
        tmp229 = simd_or(tmp228, tmp192);
        tmp230 = simd_and(tmp81, tmp43);
        cc_range_1c4_1fe_2 = simd_or(tmp229, tmp230);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(byte_c7, carryQ.get_carry_in(4), byte_c7_adv));
        tmp231 = simd_and(byte_c7_adv, cc_range_1c4_1fe_2);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp231);
        byte_c8 = simd_and(tmp13, tmp36);
        tmp232 = simd_and(tmp35, basis_bits.bit_6);
        tmp233 = simd_and(tmp81, tmp232);
        tmp234 = simd_or(tmp85, tmp233);
        tmp235 = simd_and(tmp81, tmp40);
        tmp236 = simd_and(tmp235, tmp139);
        cc_range_200_23d_2 = simd_or(tmp234, tmp236);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(byte_c8, carryQ.get_carry_in(5), byte_c8_adv));
        tmp237 = simd_and(byte_c8_adv, cc_range_200_23d_2);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp237);
        byte_c9 = simd_and(tmp13, tmp91);
        tmp238 = simd_and(tmp28, tmp200);
        tmp239 = simd_andc(tmp28, basis_bits.bit_4);
        tmp240 = simd_not(tmp3);
        tmp241 = simd_or(simd_and(basis_bits.bit_5, tmp240), simd_andc(tmp3, basis_bits.bit_5));
        tmp242 = simd_and(tmp239, tmp241);
        tmp243 = simd_or(tmp238, tmp242);
        tmp244 = simd_and(tmp28, tmp36);
        tmp245 = simd_or(tmp243, tmp244);
        tmp246 = simd_and(tmp28, tmp38);
        tmp247 = simd_or(tmp245, tmp246);
        tmp248 = simd_and(tmp28, tmp41);
        tmp249 = simd_or(tmp247, tmp248);
        tmp250 = simd_and(tmp28, tmp43);
        cc_range_241_24e_2 = simd_or(tmp249, tmp250);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(byte_c9, carryQ.get_carry_in(6), byte_c9_adv));
        tmp251 = simd_and(byte_c9_adv, cc_range_241_24e_2);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp251);
        byte_cd = simd_and(tmp13, tmp97);
        tmp252 = simd_andc(tmp31, tmp33);
        cc_range_370_376_2 = simd_andc(tmp81, tmp252);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(byte_cd, carryQ.get_carry_in(7), byte_cd_adv));
        tmp253 = simd_and(byte_cd_adv, cc_range_370_376_2);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp253);
        byte_ce = simd_and(tmp13, tmp43);
        tmp254 = simd_and(tmp28, tmp33);
        tmp255 = simd_andc(tmp146, tmp3);
        tmp256 = simd_or(tmp254, tmp255);
        tmp257 = simd_or(tmp256, tmp248);
        tmp258 = simd_and(tmp28, tmp151);
        tmp259 = simd_or(tmp257, tmp258);
        tmp260 = simd_or(basis_bits.bit_3, tmp149);
        tmp261 = simd_not(tmp260);
        tmp262 = simd_and(basis_bits.bit_3, tmp9);
        tmp263 = simd_or(simd_and(basis_bits.bit_2, tmp261), simd_andc(tmp262, basis_bits.bit_2));
        tmp264 = simd_and(tmp15, tmp263);
        tmp265 = simd_or(tmp259, tmp264);
        tmp266 = simd_not(basis_bits.bit_5);
        tmp267 = simd_or(simd_and(basis_bits.bit_4, tmp266), simd_andc(tmp4, basis_bits.bit_4));
        tmp268 = simd_and(tmp63, tmp267);
        cc_range_386_3a3_2 = simd_or(tmp265, tmp268);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(byte_ce, carryQ.get_carry_in(8), byte_ce_adv));
        tmp269 = simd_and(byte_ce_adv, cc_range_386_3a3_2);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp269);
        byte_cf = simd_and(tmp13, tmp100);
        tmp270 = simd_and(tmp28, tmp100);
        tmp271 = simd_or(simd_and(basis_bits.bit_5, tmp156), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        tmp272 = simd_and(tmp155, tmp271);
        tmp273 = simd_or(tmp270, tmp272);
        tmp274 = simd_or(tmp273, tmp54);
        tmp275 = simd_or(tmp274, tmp56);
        tmp276 = simd_or(tmp275, tmp58);
        tmp277 = simd_or(tmp276, tmp60);
        tmp278 = simd_or(tmp277, tmp64);
        tmp279 = simd_or(tmp278, tmp66);
        tmp280 = simd_or(tmp279, tmp68);
        tmp281 = simd_or(tmp280, tmp70);
        tmp282 = simd_or(tmp281, tmp72);
        tmp283 = simd_or(tmp282, tmp74);
        tmp284 = simd_or(tmp283, tmp76);
        tmp285 = simd_or(tmp284, tmp78);
        tmp286 = simd_or(tmp285, tmp86);
        tmp287 = simd_and(tmp81, tmp106);
        tmp288 = simd_or(tmp286, tmp287);
        tmp289 = simd_and(tmp81, tmp35);
        tmp290 = simd_and(tmp289, tmp139);
        tmp291 = simd_or(tmp288, tmp290);
        tmp292 = simd_and(tmp235, tmp8);
        cc_range_3cf_3fd_2 = simd_or(tmp291, tmp292);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(byte_cf, carryQ.get_carry_in(9), byte_cf_adv));
        tmp293 = simd_and(byte_cf_adv, cc_range_3cf_3fd_2);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp293);
        tmp294 = simd_and(tmp11, tmp21);
        byte_d0 = simd_andc(tmp294, tmp9);
        byte_range_80_af = simd_andc(tmp15, tmp80);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(byte_d0, carryQ.get_carry_in(10), byte_d0_adv));
        tmp295 = simd_and(byte_d0_adv, byte_range_80_af);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp295);
        byte_d1 = simd_and(tmp294, tmp200);
        tmp296 = simd_and(tmp15, basis_bits.bit_2);
        cc_range_460_47e_2 = simd_andc(tmp296, basis_bits.bit_7);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(byte_d1, carryQ.get_carry_in(11), byte_d1_adv));
        tmp297 = simd_and(byte_d1_adv, cc_range_460_47e_2);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp297);
        byte_d2 = simd_and(tmp294, tmp30);
        tmp298 = simd_andc(tmp9, tmp38);
        tmp299 = simd_andc(tmp298, tmp41);
        tmp300 = simd_andc(tmp299, tmp43);
        tmp301 = simd_andc(tmp28, tmp300);
        tmp302 = simd_or(tmp301, tmp46);
        tmp303 = simd_or(tmp302, tmp48);
        tmp304 = simd_or(tmp303, tmp50);
        tmp305 = simd_or(tmp304, tmp52);
        tmp306 = simd_or(tmp305, tmp54);
        tmp307 = simd_or(tmp306, tmp56);
        tmp308 = simd_or(tmp307, tmp58);
        tmp309 = simd_or(tmp308, tmp60);
        tmp310 = simd_or(tmp309, tmp64);
        tmp311 = simd_or(tmp310, tmp66);
        tmp312 = simd_or(tmp311, tmp68);
        tmp313 = simd_or(tmp312, tmp70);
        tmp314 = simd_or(tmp313, tmp72);
        tmp315 = simd_or(tmp314, tmp74);
        tmp316 = simd_or(tmp315, tmp76);
        tmp317 = simd_or(tmp316, tmp78);
        tmp318 = simd_or(tmp317, tmp82);
        tmp319 = simd_or(tmp318, tmp84);
        tmp320 = simd_or(tmp319, tmp86);
        tmp321 = simd_or(tmp320, tmp88);
        tmp322 = simd_and(tmp81, tmp36);
        tmp323 = simd_or(tmp321, tmp322);
        tmp324 = simd_or(tmp323, tmp227);
        tmp325 = simd_or(tmp324, tmp192);
        cc_range_480_4be_2 = simd_or(tmp325, tmp230);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(byte_d2, carryQ.get_carry_in(12), byte_d2_adv));
        tmp326 = simd_and(byte_d2_adv, cc_range_480_4be_2);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp326);
        byte_d3 = simd_and(tmp294, tmp14);
        tmp327 = simd_andc(tmp149, tmp14);
        tmp328 = simd_andc(tmp327, tmp103);
        tmp329 = simd_andc(tmp328, tmp106);
        tmp330 = simd_andc(tmp329, tmp91);
        tmp331 = simd_andc(tmp330, tmp94);
        tmp332 = simd_andc(tmp331, tmp97);
        tmp333 = simd_andc(tmp28, tmp332);
        tmp334 = simd_or(tmp333, tmp46);
        tmp335 = simd_or(tmp334, tmp48);
        tmp336 = simd_or(tmp335, tmp50);
        tmp337 = simd_or(tmp336, tmp52);
        tmp338 = simd_or(tmp337, tmp54);
        tmp339 = simd_or(tmp338, tmp56);
        tmp340 = simd_or(tmp339, tmp58);
        tmp341 = simd_or(tmp340, tmp60);
        tmp342 = simd_or(tmp341, tmp64);
        tmp343 = simd_or(tmp342, tmp66);
        tmp344 = simd_or(tmp343, tmp68);
        tmp345 = simd_or(tmp344, tmp70);
        tmp346 = simd_or(tmp345, tmp72);
        tmp347 = simd_or(tmp346, tmp74);
        tmp348 = simd_or(tmp347, tmp76);
        tmp349 = simd_or(tmp348, tmp78);
        tmp350 = simd_or(tmp349, tmp82);
        tmp351 = simd_or(tmp350, tmp84);
        tmp352 = simd_or(tmp351, tmp86);
        tmp353 = simd_or(tmp352, tmp88);
        tmp354 = simd_or(tmp353, tmp322);
        tmp355 = simd_or(tmp354, tmp227);
        tmp356 = simd_or(tmp355, tmp192);
        cc_range_4c0_4fe_2 = simd_or(tmp356, tmp230);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(byte_d3, carryQ.get_carry_in(13), byte_d3_adv));
        tmp357 = simd_and(byte_d3_adv, cc_range_4c0_4fe_2);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp357);
        byte_d4 = simd_and(tmp294, tmp27);
        tmp358 = simd_or(basis_bits.bit_4, tmp160);
        tmp359 = simd_and(tmp81, tmp358);
        cc_range_500_531_2 = simd_or(tmp71, tmp359);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(byte_d4, carryQ.get_carry_in(14), byte_d4_adv));
        tmp360 = simd_and(byte_d4_adv, cc_range_500_531_2);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp360);
        byte_d5 = simd_and(tmp294, tmp103);
        byte_range_80_96 = simd_andc(tmp16, tmp19);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(byte_d5, carryQ.get_carry_in(15), byte_d5_adv));
        tmp361 = simd_and(byte_d5_adv, byte_range_80_96);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp361);
        tmp362 = simd_and(tmp11, tmp62);
        byte_e1 = simd_and(tmp362, tmp200);
        byte_82 = simd_and(tmp28, tmp30);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(16), tmp363));
        sequence_e1_82 = simd_and(tmp363, byte_82);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(17), byte_e1_adv));
        byte_range_a0_bf = simd_and(tmp15, basis_bits.bit_2);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(sequence_e1_82, carryQ.get_carry_in(18), sequence_e1_82_adv));
        tmp364 = simd_and(sequence_e1_82_adv, byte_range_a0_bf);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp364);
        byte_83 = simd_and(tmp28, tmp14);
        sequence_e1_83 = simd_and(byte_e1_adv, byte_83);
        tmp365 = simd_andc(tmp239, tmp162);
        tmp366 = simd_and(tmp28, tmp106);
        tmp367 = simd_or(tmp365, tmp366);
        tmp368 = simd_and(tmp28, tmp97);
        cc_range_10c0_10cd_3 = simd_or(tmp367, tmp368);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(sequence_e1_83, carryQ.get_carry_in(19), sequence_e1_83_adv));
        tmp369 = simd_and(sequence_e1_83_adv, cc_range_10c0_10cd_3);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp369);
        byte_b8 = simd_and(tmp81, tmp36);
        sequence_e1_b8 = simd_and(byte_e1_adv, byte_b8);
        cc_range_1e00_1e3e_3 = simd_andc(tmp15, basis_bits.bit_7);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(sequence_e1_b8, carryQ.get_carry_in(20), sequence_e1_b8_adv));
        tmp370 = simd_and(sequence_e1_b8_adv, cc_range_1e00_1e3e_3);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp370);
        byte_b9 = simd_and(tmp81, tmp91);
        sequence_e1_b9 = simd_and(byte_e1_adv, byte_b9);
        cc_range_1e40_1e7e_3 = simd_andc(tmp15, basis_bits.bit_7);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(sequence_e1_b9, carryQ.get_carry_in(21), sequence_e1_b9_adv));
        tmp371 = simd_and(sequence_e1_b9_adv, cc_range_1e40_1e7e_3);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp371);
        byte_ba = simd_and(tmp81, tmp38);
        sequence_e1_ba = simd_and(byte_e1_adv, byte_ba);
        tmp372 = simd_or(tmp51, tmp60);
        tmp373 = simd_or(tmp372, tmp64);
        tmp374 = simd_or(tmp373, tmp66);
        tmp375 = simd_or(tmp374, tmp68);
        tmp376 = simd_or(tmp375, tmp70);
        tmp377 = simd_or(tmp376, tmp72);
        tmp378 = simd_or(tmp377, tmp74);
        tmp379 = simd_or(tmp378, tmp76);
        tmp380 = simd_or(tmp379, tmp78);
        tmp381 = simd_or(tmp380, tmp82);
        tmp382 = simd_or(tmp381, tmp84);
        tmp383 = simd_or(tmp382, tmp86);
        tmp384 = simd_or(tmp383, tmp88);
        tmp385 = simd_or(tmp384, byte_b8);
        tmp386 = simd_or(tmp385, byte_ba);
        tmp387 = simd_or(tmp386, tmp192);
        cc_range_1e80_1ebe_3 = simd_or(tmp387, tmp230);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(sequence_e1_ba, carryQ.get_carry_in(22), sequence_e1_ba_adv));
        tmp388 = simd_and(sequence_e1_ba_adv, cc_range_1e80_1ebe_3);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp388);
        byte_bb = simd_and(tmp81, tmp94);
        sequence_e1_bb = simd_and(byte_e1_adv, byte_bb);
        cc_range_1ec0_1efe_3 = simd_andc(tmp15, basis_bits.bit_7);
        carryQ.cq[23] = carryout2carry(pablo_blk_Advance(sequence_e1_bb, carryQ.get_carry_in(23), sequence_e1_bb_adv));
        tmp389 = simd_and(sequence_e1_bb_adv, cc_range_1ec0_1efe_3);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp389);
        byte_bc = simd_and(tmp81, tmp41);
        sequence_e1_bc = simd_and(byte_e1_adv, byte_bc);
        tmp390 = simd_and(tmp28, basis_bits.bit_4);
        tmp391 = simd_andc(tmp23, tmp162);
        tmp392 = simd_or(tmp390, tmp391);
        tmp393 = simd_and(tmp63, basis_bits.bit_4);
        tmp394 = simd_or(tmp392, tmp393);
        tmp395 = simd_and(tmp81, basis_bits.bit_4);
        cc_range_1f08_1f38_3 = simd_or(tmp394, tmp395);
        carryQ.cq[24] = carryout2carry(pablo_blk_Advance(sequence_e1_bc, carryQ.get_carry_in(24), sequence_e1_bc_adv));
        tmp396 = simd_and(sequence_e1_bc_adv, cc_range_1f08_1f38_3);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp396);
        byte_bd = simd_and(tmp81, tmp97);
        sequence_e1_bd = simd_and(byte_e1_adv, byte_bd);
        tmp397 = simd_andc(tmp390, tmp162);
        tmp398 = simd_or(tmp397, tmp209);
        tmp399 = simd_or(tmp398, tmp211);
        tmp400 = simd_and(tmp22, tmp97);
        tmp401 = simd_or(tmp399, tmp400);
        tmp402 = simd_and(tmp22, tmp100);
        tmp403 = simd_or(tmp401, tmp402);
        cc_range_1f48_1f68_3 = simd_or(tmp403, tmp393);
        carryQ.cq[25] = carryout2carry(pablo_blk_Advance(sequence_e1_bd, carryQ.get_carry_in(25), sequence_e1_bd_adv));
        tmp404 = simd_and(sequence_e1_bd_adv, cc_range_1f48_1f68_3);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp404);
        byte_be = simd_and(tmp81, tmp43);
        sequence_e1_be = simd_and(byte_e1_adv, byte_be);
        byte_range_b8_bb = simd_and(tmp81, tmp35);
        carryQ.cq[26] = carryout2carry(pablo_blk_Advance(sequence_e1_be, carryQ.get_carry_in(26), sequence_e1_be_adv));
        tmp405 = simd_and(sequence_e1_be_adv, byte_range_b8_bb);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp405);
        byte_bf = simd_and(tmp81, tmp100);
        sequence_e1_bf = simd_and(byte_e1_adv, byte_bf);
        tmp406 = simd_andc(tmp12, tmp21);
        tmp407 = simd_andc(tmp15, tmp406);
        tmp408 = simd_and(tmp35, tmp407);
        tmp409 = simd_and(basis_bits.bit_5, tmp8);
        tmp410 = simd_andc(tmp393, tmp409);
        tmp411 = simd_or(tmp408, tmp410);
        cc_range_1fc8_1ff8_3 = simd_or(tmp411, byte_range_b8_bb);
        carryQ.cq[27] = carryout2carry(pablo_blk_Advance(sequence_e1_bf, carryQ.get_carry_in(27), sequence_e1_bf_adv));
        tmp412 = simd_and(sequence_e1_bf_adv, cc_range_1fc8_1ff8_3);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp412);
        byte_e2 = simd_and(tmp362, tmp30);
        byte_84 = simd_and(tmp28, tmp27);
        carryQ.cq[28] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(28), tmp413));
        sequence_e2_84 = simd_and(tmp413, byte_84);
        carryQ.cq[29] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(29), byte_e2_adv));
        tmp414 = simd_or(tmp30, tmp106);
        tmp415 = simd_and(tmp28, tmp414);
        tmp416 = simd_not(basis_bits.bit_6);
        tmp417 = simd_or(simd_and(basis_bits.bit_5, tmp416), simd_andc(tmp3, basis_bits.bit_5));
        tmp418 = simd_and(tmp390, tmp417);
        tmp419 = simd_or(tmp415, tmp418);
        tmp420 = simd_andc(tmp22, tmp7);
        tmp421 = simd_andc(tmp420, tmp3);
        tmp422 = simd_or(tmp419, tmp421);
        tmp423 = simd_or(tmp422, tmp205);
        tmp424 = simd_or(simd_and(basis_bits.bit_5, tmp416), simd_andc(tmp8, basis_bits.bit_5));
        tmp425 = simd_and(tmp23, tmp424);
        tmp426 = simd_or(tmp423, tmp425);
        tmp427 = simd_or(tmp426, tmp68);
        tmp428 = simd_or(tmp427, tmp70);
        tmp429 = simd_or(tmp428, tmp72);
        tmp430 = simd_or(simd_and(basis_bits.bit_5, tmp416), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        tmp431 = simd_and(tmp393, tmp430);
        tmp432 = simd_or(tmp429, tmp431);
        tmp433 = simd_or(tmp432, tmp184);
        tmp434 = simd_and(tmp81, tmp151);
        cc_range_2102_213e_3 = simd_or(tmp433, tmp434);
        carryQ.cq[30] = carryout2carry(pablo_blk_Advance(sequence_e2_84, carryQ.get_carry_in(30), sequence_e2_84_adv));
        tmp435 = simd_and(sequence_e2_84_adv, cc_range_2102_213e_3);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp435);
        byte_85 = simd_and(tmp28, tmp103);
        sequence_e2_85 = simd_and(byte_e2_adv, byte_85);
        carryQ.cq[31] = carryout2carry(pablo_blk_Advance(sequence_e2_85, carryQ.get_carry_in(31), sequence_e2_85_adv));
        tmp436 = simd_and(sequence_e2_85_adv, byte_85);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp436);
        byte_86 = simd_and(tmp28, tmp33);
        sequence_e2_86 = simd_and(byte_e2_adv, byte_86);
        carryQ.cq[32] = carryout2carry(pablo_blk_Advance(sequence_e2_86, carryQ.get_carry_in(32), sequence_e2_86_adv));
        tmp437 = simd_and(sequence_e2_86_adv, byte_83);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp437);
        byte_b0 = simd_andc(tmp81, tmp9);
        sequence_e2_b0 = simd_and(byte_e2_adv, byte_b0);
        tmp438 = simd_or(basis_bits.bit_3, tmp100);
        tmp439 = simd_and(basis_bits.bit_2, tmp438);
        byte_range_80_ae = simd_andc(tmp15, tmp439);
        carryQ.cq[33] = carryout2carry(pablo_blk_Advance(sequence_e2_b0, carryQ.get_carry_in(33), sequence_e2_b0_adv));
        tmp440 = simd_and(sequence_e2_b0_adv, byte_range_80_ae);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp440);
        byte_b1 = simd_and(tmp81, tmp200);
        sequence_e2_b1 = simd_and(byte_e2_adv, byte_b1);
        tmp441 = simd_andc(tmp63, basis_bits.bit_4);
        tmp442 = simd_and(tmp441, tmp271);
        tmp443 = simd_or(tmp64, tmp442);
        tmp444 = simd_and(tmp63, tmp106);
        tmp445 = simd_or(tmp443, tmp444);
        tmp446 = simd_or(tmp445, tmp179);
        tmp447 = simd_and(tmp63, tmp94);
        tmp448 = simd_or(tmp446, tmp447);
        tmp449 = simd_not(tmp9);
        tmp450 = simd_and(tmp40, tmp8);
        tmp451 = simd_or(simd_and(basis_bits.bit_3, tmp449), simd_andc(tmp450, basis_bits.bit_3));
        tmp452 = simd_and(byte_range_a0_bf, tmp451);
        tmp453 = simd_or(tmp448, tmp452);
        tmp454 = simd_or(tmp453, tmp84);
        tmp455 = simd_or(tmp454, tmp187);
        cc_range_2c60_2c7e_3 = simd_or(tmp455, tmp434);
        carryQ.cq[34] = carryout2carry(pablo_blk_Advance(sequence_e2_b1, carryQ.get_carry_in(34), sequence_e2_b1_adv));
        tmp456 = simd_and(sequence_e2_b1_adv, cc_range_2c60_2c7e_3);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp456);
        byte_b2 = simd_and(tmp81, tmp30);
        sequence_e2_b2 = simd_and(byte_e2_adv, byte_b2);
        cc_range_2c80_2cbe_3 = simd_andc(tmp15, basis_bits.bit_7);
        carryQ.cq[35] = carryout2carry(pablo_blk_Advance(sequence_e2_b2, carryQ.get_carry_in(35), sequence_e2_b2_adv));
        tmp457 = simd_and(sequence_e2_b2_adv, cc_range_2c80_2cbe_3);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp457);
        byte_b3 = simd_and(tmp81, tmp14);
        sequence_e2_b3 = simd_and(byte_e2_adv, byte_b3);
        tmp458 = simd_or(tmp67, tmp447);
        tmp459 = simd_and(tmp63, tmp97);
        tmp460 = simd_or(tmp458, tmp459);
        cc_range_2cc0_2cf2_3 = simd_or(tmp460, byte_b2);
        carryQ.cq[36] = carryout2carry(pablo_blk_Advance(sequence_e2_b3, carryQ.get_carry_in(36), sequence_e2_b3_adv));
        tmp461 = simd_and(sequence_e2_b3_adv, cc_range_2cc0_2cf2_3);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp461);
        byte_ea = simd_and(tmp362, tmp38);
        byte_99 = simd_and(tmp22, tmp91);
        carryQ.cq[37] = carryout2carry(pablo_blk_Advance(byte_ea, carryQ.get_carry_in(37), tmp462));
        sequence_ea_99 = simd_and(tmp462, byte_99);
        carryQ.cq[38] = carryout2carry(pablo_blk_Advance(byte_ea, carryQ.get_carry_in(38), byte_ea_adv));
        tmp463 = simd_or(basis_bits.bit_3, tmp151);
        tmp464 = simd_and(basis_bits.bit_2, tmp463);
        tmp465 = simd_andc(tmp15, tmp464);
        cc_range_a640_a66c_3 = simd_andc(tmp465, basis_bits.bit_7);
        carryQ.cq[39] = carryout2carry(pablo_blk_Advance(sequence_ea_99, carryQ.get_carry_in(39), sequence_ea_99_adv));
        tmp466 = simd_and(sequence_ea_99_adv, cc_range_a640_a66c_3);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp466);
        byte_9a = simd_and(tmp22, tmp38);
        sequence_ea_9a = simd_and(byte_ea_adv, byte_9a);
        tmp467 = simd_and(basis_bits.bit_3, basis_bits.bit_4);
        tmp468 = simd_andc(tmp16, tmp467);
        cc_range_a680_a696_3 = simd_andc(tmp468, basis_bits.bit_7);
        carryQ.cq[40] = carryout2carry(pablo_blk_Advance(sequence_ea_9a, carryQ.get_carry_in(40), sequence_ea_9a_adv));
        tmp469 = simd_and(sequence_ea_9a_adv, cc_range_a680_a696_3);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp469);
        byte_9c = simd_and(tmp22, tmp41);
        sequence_ea_9c = simd_and(byte_ea_adv, byte_9c);
        tmp470 = simd_or(tmp30, tmp27);
        tmp471 = simd_or(tmp470, tmp33);
        tmp472 = simd_or(tmp471, tmp36);
        tmp473 = simd_or(tmp472, tmp38);
        tmp474 = simd_or(tmp473, tmp41);
        tmp475 = simd_or(tmp474, tmp43);
        tmp476 = simd_and(tmp63, tmp475);
        tmp477 = simd_or(tmp476, byte_b2);
        tmp478 = simd_or(tmp477, tmp86);
        tmp479 = simd_or(tmp478, tmp88);
        tmp480 = simd_or(tmp479, byte_b8);
        tmp481 = simd_or(tmp480, byte_ba);
        tmp482 = simd_or(tmp481, byte_bc);
        cc_range_a722_a73e_3 = simd_or(tmp482, byte_be);
        carryQ.cq[41] = carryout2carry(pablo_blk_Advance(sequence_ea_9c, carryQ.get_carry_in(41), sequence_ea_9c_adv));
        tmp483 = simd_and(sequence_ea_9c_adv, cc_range_a722_a73e_3);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp483);
        byte_9d = simd_and(tmp22, tmp97);
        sequence_ea_9d = simd_and(byte_ea_adv, byte_9d);
        tmp484 = simd_or(tmp55, byte_9a);
        tmp485 = simd_or(tmp484, byte_9c);
        tmp486 = simd_or(tmp485, tmp60);
        tmp487 = simd_or(tmp486, tmp64);
        tmp488 = simd_or(tmp487, tmp66);
        tmp489 = simd_or(tmp488, tmp68);
        tmp490 = simd_or(tmp489, tmp70);
        tmp491 = simd_or(tmp490, tmp72);
        tmp492 = simd_or(tmp491, tmp74);
        tmp493 = simd_or(tmp492, tmp76);
        tmp494 = simd_or(tmp493, tmp78);
        tmp495 = simd_or(tmp494, byte_b9);
        tmp496 = simd_or(tmp495, byte_bb);
        cc_range_a740_a77d_3 = simd_or(tmp496, tmp236);
        carryQ.cq[42] = carryout2carry(pablo_blk_Advance(sequence_ea_9d, carryQ.get_carry_in(42), sequence_ea_9d_adv));
        tmp497 = simd_and(sequence_ea_9d_adv, cc_range_a740_a77d_3);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp497);
        byte_9e = simd_and(tmp22, tmp43);
        sequence_ea_9e = simd_and(byte_ea_adv, byte_9e);
        tmp498 = simd_andc(tmp34, tmp94);
        tmp499 = simd_andc(tmp498, tmp97);
        tmp500 = simd_andc(tmp28, tmp499);
        tmp501 = simd_or(tmp500, tmp46);
        tmp502 = simd_or(tmp501, tmp48);
        tmp503 = simd_or(tmp502, tmp64);
        tmp504 = simd_or(tmp503, tmp66);
        tmp505 = simd_or(tmp504, tmp68);
        tmp506 = simd_or(tmp505, tmp70);
        tmp507 = simd_or(tmp506, tmp72);
        cc_range_a780_a7aa_3 = simd_or(tmp507, tmp74);
        carryQ.cq[43] = carryout2carry(pablo_blk_Advance(sequence_ea_9e, carryQ.get_carry_in(43), sequence_ea_9e_adv));
        tmp508 = simd_and(sequence_ea_9e_adv, cc_range_a780_a7aa_3);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp508);
        byte_ef = simd_and(tmp362, tmp100);
        carryQ.cq[44] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(44), tmp509));
        sequence_ef_bc = simd_and(tmp509, byte_bc);
        carryQ.cq[45] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(45), byte_ef_adv));
        byte_range_a1_ba = simd_and(byte_range_a0_bf, tmp10);
        carryQ.cq[46] = carryout2carry(pablo_blk_Advance(sequence_ef_bc, carryQ.get_carry_in(46), sequence_ef_bc_adv));
        tmp510 = simd_and(sequence_ef_bc_adv, byte_range_a1_ba);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp510);
        tmp511 = simd_and(tmp11, tmp80);
        byte_f0 = simd_andc(tmp511, tmp9);
        byte_90 = simd_andc(tmp22, tmp9);
        carryQ.cq[47] = carryout2carry(pablo_blk_Advance(byte_f0, carryQ.get_carry_in(47), tmp512));
        sequence_f0_90 = simd_and(tmp512, byte_90);
        carryQ.cq[48] = carryout2carry(pablo_blk_Advance(byte_f0, carryQ.get_carry_in(48), byte_f0_adv));
        carryQ.cq[49] = carryout2carry(pablo_blk_Advance(sequence_f0_90, carryQ.get_carry_in(49), tmp513));
        sequence_f0_90_90 = simd_and(tmp513, byte_90);
        carryQ.cq[50] = carryout2carry(pablo_blk_Advance(sequence_f0_90, carryQ.get_carry_in(50), sequence_f0_90_adv));
        tmp514 = simd_or(basis_bits.bit_3, basis_bits.bit_4);
        tmp515 = simd_and(basis_bits.bit_2, tmp514);
        byte_range_80_a7 = simd_andc(tmp15, tmp515);
        carryQ.cq[51] = carryout2carry(pablo_blk_Advance(sequence_f0_90_90, carryQ.get_carry_in(51), sequence_f0_90_90_adv));
        tmp516 = simd_and(sequence_f0_90_90_adv, byte_range_80_a7);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp516);
        sequence_f0_9d = simd_and(byte_f0_adv, byte_9d);
        carryQ.cq[52] = carryout2carry(pablo_blk_Advance(sequence_f0_9d, carryQ.get_carry_in(52), tmp517));
        sequence_f0_9d_90 = simd_and(tmp517, byte_90);
        carryQ.cq[53] = carryout2carry(pablo_blk_Advance(sequence_f0_9d, carryQ.get_carry_in(53), sequence_f0_9d_adv));
        tmp518 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
        tmp519 = simd_and(basis_bits.bit_4, tmp518);
        tmp520 = simd_and(basis_bits.bit_3, tmp519);
        tmp521 = simd_andc(tmp16, tmp520);
        tmp522 = simd_and(tmp81, tmp7);
        cc_range_1d400_1d434_4 = simd_or(tmp521, tmp522);
        carryQ.cq[54] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_90, carryQ.get_carry_in(54), sequence_f0_9d_90_adv));
        tmp523 = simd_and(sequence_f0_9d_90_adv, cc_range_1d400_1d434_4);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp523);
        byte_91 = simd_and(tmp22, tmp200);
        sequence_f0_9d_91 = simd_and(sequence_f0_9d_adv, byte_91);
        tmp524 = simd_and(basis_bits.bit_4, tmp162);
        tmp525 = simd_andc(tmp28, tmp524);
        tmp526 = simd_and(byte_range_a0_bf, tmp514);
        cc_range_1d440_1d468_4 = simd_or(tmp525, tmp526);
        carryQ.cq[55] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_91, carryQ.get_carry_in(55), sequence_f0_9d_91_adv));
        tmp527 = simd_and(sequence_f0_9d_91_adv, cc_range_1d440_1d468_4);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp527);
        byte_92 = simd_and(tmp22, tmp30);
        sequence_f0_9d_92 = simd_and(sequence_f0_9d_adv, byte_92);
        tmp528 = simd_andc(tmp28, tmp149);
        tmp529 = simd_or(tmp528, byte_9c);
        tmp530 = simd_and(tmp22, tmp151);
        tmp531 = simd_or(tmp529, tmp530);
        tmp532 = simd_or(tmp531, tmp66);
        tmp533 = simd_and(tmp63, tmp26);
        tmp534 = simd_and(tmp533, tmp139);
        tmp535 = simd_or(tmp532, tmp534);
        tmp536 = simd_or(simd_and(basis_bits.bit_5, tmp156), simd_andc(tmp8, basis_bits.bit_5));
        tmp537 = simd_and(tmp393, tmp536);
        tmp538 = simd_or(tmp535, tmp537);
        tmp539 = simd_or(basis_bits.bit_4, tmp162);
        tmp540 = simd_not(tmp539);
        tmp541 = simd_or(simd_and(basis_bits.bit_3, tmp540), simd_andc(tmp151, basis_bits.bit_3));
        tmp542 = simd_and(byte_range_a0_bf, tmp541);
        cc_range_1d480_1d4ae_4 = simd_or(tmp538, tmp542);
        carryQ.cq[56] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_92, carryQ.get_carry_in(56), sequence_f0_9d_92_adv));
        tmp543 = simd_and(sequence_f0_9d_92_adv, cc_range_1d480_1d4ae_4);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp543);
        byte_93 = simd_and(tmp22, tmp14);
        sequence_f0_9d_93 = simd_and(sequence_f0_9d_adv, byte_93);
        tmp544 = simd_or(basis_bits.bit_3, tmp519);
        tmp545 = simd_not(tmp544);
        tmp546 = simd_or(simd_and(basis_bits.bit_2, tmp545), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
        byte_range_90_a9 = simd_and(tmp15, tmp546);
        carryQ.cq[57] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_93, carryQ.get_carry_in(57), sequence_f0_9d_93_adv));
        tmp547 = simd_and(sequence_f0_9d_93_adv, byte_range_90_a9);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp547);
        byte_94 = simd_and(tmp22, tmp27);
        sequence_f0_9d_94 = simd_and(sequence_f0_9d_adv, byte_94);
        tmp548 = simd_andc(tmp26, basis_bits.bit_6);
        tmp549 = simd_not(tmp4);
        tmp550 = simd_or(simd_and(basis_bits.bit_4, tmp549), simd_andc(tmp17, basis_bits.bit_4));
        tmp551 = simd_or(tmp548, tmp550);
        tmp552 = simd_and(tmp28, tmp551);
        tmp553 = simd_or(basis_bits.bit_4, tmp409);
        tmp554 = simd_not(tmp553);
        tmp555 = simd_or(simd_and(basis_bits.bit_3, tmp554), simd_andc(tmp450, basis_bits.bit_3));
        tmp556 = simd_and(tmp16, tmp555);
        tmp557 = simd_or(tmp552, tmp556);
        tmp558 = simd_not(tmp409);
        tmp559 = simd_or(simd_and(basis_bits.bit_4, tmp558), simd_andc(tmp162, basis_bits.bit_4));
        tmp560 = simd_and(tmp22, tmp559);
        tmp561 = simd_or(tmp557, tmp560);
        tmp562 = simd_or(tmp561, tmp133);
        tmp563 = simd_and(tmp395, tmp241);
        cc_range_1d504_1d53b_4 = simd_or(tmp562, tmp563);
        carryQ.cq[58] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_94, carryQ.get_carry_in(58), sequence_f0_9d_94_adv));
        tmp564 = simd_and(sequence_f0_9d_94_adv, cc_range_1d504_1d53b_4);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp564);
        byte_95 = simd_and(tmp22, tmp103);
        sequence_f0_9d_95 = simd_and(sequence_f0_9d_adv, byte_95);
        tmp565 = simd_andc(tmp239, tmp409);
        tmp566 = simd_or(tmp565, byte_86);
        tmp567 = simd_or(simd_and(basis_bits.bit_3, tmp449), simd_andc(tmp519, basis_bits.bit_3));
        tmp568 = simd_and(tmp16, tmp567);
        tmp569 = simd_or(tmp566, tmp568);
        tmp570 = simd_or(basis_bits.bit_3, tmp40);
        tmp571 = simd_and(byte_range_a0_bf, tmp570);
        cc_range_1d540_1d56c_4 = simd_or(tmp569, tmp571);
        carryQ.cq[59] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_95, carryQ.get_carry_in(59), sequence_f0_9d_95_adv));
        tmp572 = simd_and(sequence_f0_9d_95_adv, cc_range_1d540_1d56c_4);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp572);
        byte_96 = simd_and(tmp22, tmp33);
        sequence_f0_9d_96 = simd_and(sequence_f0_9d_adv, byte_96);
        tmp573 = simd_andc(byte_range_a0_bf, tmp520);
        cc_range_1d580_1d5a0_4 = simd_or(tmp365, tmp573);
        carryQ.cq[60] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_96, carryQ.get_carry_in(60), sequence_f0_9d_96_adv));
        tmp574 = simd_and(sequence_f0_9d_96_adv, cc_range_1d580_1d5a0_4);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp574);
        byte_97 = simd_and(tmp22, tmp106);
        sequence_f0_9d_97 = simd_and(sequence_f0_9d_adv, byte_97);
        tmp575 = simd_not(tmp463);
        tmp576 = simd_and(basis_bits.bit_3, tmp7);
        tmp577 = simd_or(simd_and(basis_bits.bit_2, tmp575), simd_andc(tmp576, basis_bits.bit_2));
        byte_range_94_ad = simd_and(tmp15, tmp577);
        carryQ.cq[61] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_97, carryQ.get_carry_in(61), sequence_f0_9d_97_adv));
        tmp578 = simd_and(sequence_f0_9d_97_adv, byte_range_94_ad);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp578);
        byte_98 = simd_and(tmp22, tmp36);
        sequence_f0_9d_98 = simd_and(sequence_f0_9d_adv, byte_98);
        tmp579 = simd_or(simd_and(basis_bits.bit_2, tmp261), simd_andc(tmp514, basis_bits.bit_2));
        tmp580 = simd_and(tmp15, tmp579);
        cc_range_1d608_1d63c_4 = simd_or(tmp580, tmp235);
        carryQ.cq[62] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_98, carryQ.get_carry_in(62), sequence_f0_9d_98_adv));
        tmp581 = simd_and(sequence_f0_9d_98_adv, cc_range_1d608_1d63c_4);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp581);
        sequence_f0_9d_99 = simd_and(sequence_f0_9d_adv, byte_99);
        tmp582 = simd_and(basis_bits.bit_3, tmp539);
        tmp583 = simd_andc(tmp16, tmp582);
        cc_range_1d640_1d670_4 = simd_or(tmp583, tmp81);
        carryQ.cq[63] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_99, carryQ.get_carry_in(63), sequence_f0_9d_99_adv));
        tmp584 = simd_and(sequence_f0_9d_99_adv, cc_range_1d640_1d670_4);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp584);
        sequence_f0_9d_9a = simd_and(sequence_f0_9d_adv, byte_9a);
        tmp585 = simd_andc(tmp28, tmp519);
        cc_range_1d680_1d6a8_4 = simd_or(tmp585, tmp526);
        carryQ.cq[64] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_9a, carryQ.get_carry_in(64), sequence_f0_9d_9a_adv));
        tmp586 = simd_and(sequence_f0_9d_9a_adv, cc_range_1d680_1d6a8_4);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp586);
        byte_9b = simd_and(tmp22, tmp94);
        sequence_f0_9d_9b = simd_and(sequence_f0_9d_adv, byte_9b);
        tmp587 = simd_andc(tmp28, tmp9);
        tmp588 = simd_or(simd_and(basis_bits.bit_3, tmp6), simd_andc(tmp149, basis_bits.bit_3));
        tmp589 = simd_and(byte_range_a0_bf, tmp588);
        cc_range_1d6c0_1d6e2_4 = simd_or(tmp587, tmp589);
        carryQ.cq[65] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_9b, carryQ.get_carry_in(65), sequence_f0_9d_9b_adv));
        tmp590 = simd_and(sequence_f0_9d_9b_adv, cc_range_1d6c0_1d6e2_4);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp590);
        sequence_f0_9d_9c = simd_and(sequence_f0_9d_adv, byte_9c);
        tmp591 = simd_and(basis_bits.bit_3, tmp553);
        tmp592 = simd_not(tmp591);
        tmp593 = simd_and(basis_bits.bit_3, tmp40);
        tmp594 = simd_or(simd_and(basis_bits.bit_2, tmp592), simd_andc(tmp593, basis_bits.bit_2));
        byte_range_9c_b4 = simd_and(tmp15, tmp594);
        carryQ.cq[66] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_9c, carryQ.get_carry_in(66), sequence_f0_9d_9c_adv));
        tmp595 = simd_and(sequence_f0_9d_9c_adv, byte_range_9c_b4);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp595);
        sequence_f0_9d_9d = simd_and(sequence_f0_9d_adv, byte_9d);
        tmp596 = simd_not(tmp438);
        tmp597 = simd_or(simd_and(basis_bits.bit_2, tmp596), simd_andc(tmp582, basis_bits.bit_2));
        byte_range_96_ae = simd_and(tmp15, tmp597);
        carryQ.cq[67] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_9d, carryQ.get_carry_in(67), sequence_f0_9d_9d_adv));
        tmp598 = simd_and(sequence_f0_9d_9d_adv, byte_range_96_ae);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp598);
        sequence_f0_9d_9e = simd_and(sequence_f0_9d_adv, byte_9e);
        tmp599 = simd_and(basis_bits.bit_4, tmp160);
        tmp600 = simd_or(basis_bits.bit_3, tmp599);
        tmp601 = simd_not(tmp600);
        tmp602 = simd_or(simd_and(basis_bits.bit_2, tmp601), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
        byte_range_90_a8 = simd_and(tmp15, tmp602);
        carryQ.cq[68] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_9e, carryQ.get_carry_in(68), sequence_f0_9d_9e_adv));
        tmp603 = simd_and(sequence_f0_9d_9e_adv, byte_range_90_a8);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp603);
        byte_9f = simd_and(tmp22, tmp100);
        sequence_f0_9d_9f = simd_and(sequence_f0_9d_adv, byte_9f);
        byte_8a = simd_and(tmp28, tmp38);
        carryQ.cq[69] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_9f, carryQ.get_carry_in(69), sequence_f0_9d_9f_adv));
        tmp604 = simd_and(sequence_f0_9d_9f_adv, byte_8a);
        struct_Lu.cc = simd_or(struct_Lu.cc, tmp604);
  }
  CarryArray<70, 0> carryQ;
  };

  struct Pf {
  Pf() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Pf & struct_Pf) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, byte_c2, tmp7, tmp8, tmp9, tmp10;
		BitBlock tmp11, tmp12, byte_bb, byte_c2_adv, tmp13, tmp14, tmp15, byte_e2;
		BitBlock tmp16, tmp17, tmp18, byte_80, tmp19, sequence_e2_80, byte_e2_adv;
		BitBlock tmp20, tmp21, tmp22, tmp23, tmp24, tmp25, tmp26, cc_range_2019_203a_3;
		BitBlock sequence_e2_80_adv, tmp27, tmp28, byte_b8, sequence_e2_b8, tmp29;
		BitBlock tmp30, tmp31, tmp32, tmp33, tmp34, tmp35, tmp36, tmp37, tmp38, tmp39;
		BitBlock tmp40, tmp41, tmp42, cc_range_2e03_2e21_3, sequence_e2_b8_adv, tmp43;




        struct_Pf.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_andc(tmp5, tmp4);
        byte_c2 = simd_and(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp11 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp12 = simd_and(tmp10, tmp11);
        byte_bb = simd_and(tmp9, tmp12);
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(byte_c2, carryQ.get_carry_in(0), byte_c2_adv));
        tmp13 = simd_and(byte_c2_adv, byte_bb);
        struct_Pf.cc = simd_or(struct_Pf.cc, tmp13);
        tmp14 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp15 = simd_and(tmp1, tmp14);
        byte_e2 = simd_and(tmp15, tmp6);
        tmp16 = simd_andc(tmp7, tmp2);
        tmp17 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp18 = simd_or(tmp4, tmp17);
        byte_80 = simd_andc(tmp16, tmp18);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(1), tmp19));
        sequence_e2_80 = simd_and(tmp19, byte_80);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(2), byte_e2_adv));
        tmp20 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp21 = simd_and(tmp7, tmp20);
        tmp22 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp23 = simd_and(tmp22, basis_bits.bit_4);
        tmp24 = simd_and(tmp21, tmp23);
        tmp25 = simd_and(tmp10, tmp5);
        tmp26 = simd_and(tmp9, tmp25);
        cc_range_2019_203a_3 = simd_or(tmp24, tmp26);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(sequence_e2_80, carryQ.get_carry_in(3), sequence_e2_80_adv));
        tmp27 = simd_and(sequence_e2_80_adv, cc_range_2019_203a_3);
        struct_Pf.cc = simd_or(struct_Pf.cc, tmp27);
        tmp28 = simd_andc(tmp10, tmp17);
        byte_b8 = simd_and(tmp9, tmp28);
        sequence_e2_b8 = simd_and(byte_e2_adv, byte_b8);
        tmp29 = simd_andc(tmp11, tmp4);
        tmp30 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp31 = simd_and(tmp30, tmp22);
        tmp32 = simd_or(tmp29, tmp31);
        tmp33 = simd_or(tmp32, tmp25);
        tmp34 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp35 = simd_and(tmp34, tmp22);
        tmp36 = simd_or(tmp33, tmp35);
        tmp37 = simd_and(tmp16, tmp36);
        tmp38 = simd_and(tmp21, tmp35);
        tmp39 = simd_or(tmp37, tmp38);
        tmp40 = simd_and(tmp7, tmp14);
        tmp41 = simd_andc(tmp22, tmp4);
        tmp42 = simd_and(tmp40, tmp41);
        cc_range_2e03_2e21_3 = simd_or(tmp39, tmp42);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(sequence_e2_b8, carryQ.get_carry_in(4), sequence_e2_b8_adv));
        tmp43 = simd_and(sequence_e2_b8_adv, cc_range_2e03_2e21_3);
        struct_Pf.cc = simd_or(struct_Pf.cc, tmp43);
        carryQ.CarryQ_Adjust(5);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Pf & struct_Pf, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, byte_c2, tmp7, tmp8, tmp9, tmp10;
		BitBlock tmp11, tmp12, byte_bb, byte_c2_adv, tmp13, tmp14, tmp15, byte_e2;
		BitBlock tmp16, tmp17, tmp18, byte_80, tmp19, sequence_e2_80, byte_e2_adv;
		BitBlock tmp20, tmp21, tmp22, tmp23, tmp24, tmp25, tmp26, cc_range_2019_203a_3;
		BitBlock sequence_e2_80_adv, tmp27, tmp28, byte_b8, sequence_e2_b8, tmp29;
		BitBlock tmp30, tmp31, tmp32, tmp33, tmp34, tmp35, tmp36, tmp37, tmp38, tmp39;
		BitBlock tmp40, tmp41, tmp42, cc_range_2e03_2e21_3, sequence_e2_b8_adv, tmp43;




        struct_Pf.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_andc(tmp5, tmp4);
        byte_c2 = simd_and(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp11 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp12 = simd_and(tmp10, tmp11);
        byte_bb = simd_and(tmp9, tmp12);
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(byte_c2, carryQ.get_carry_in(0), byte_c2_adv));
        tmp13 = simd_and(byte_c2_adv, byte_bb);
        struct_Pf.cc = simd_or(struct_Pf.cc, tmp13);
        tmp14 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp15 = simd_and(tmp1, tmp14);
        byte_e2 = simd_and(tmp15, tmp6);
        tmp16 = simd_andc(tmp7, tmp2);
        tmp17 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp18 = simd_or(tmp4, tmp17);
        byte_80 = simd_andc(tmp16, tmp18);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(1), tmp19));
        sequence_e2_80 = simd_and(tmp19, byte_80);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(2), byte_e2_adv));
        tmp20 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp21 = simd_and(tmp7, tmp20);
        tmp22 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp23 = simd_and(tmp22, basis_bits.bit_4);
        tmp24 = simd_and(tmp21, tmp23);
        tmp25 = simd_and(tmp10, tmp5);
        tmp26 = simd_and(tmp9, tmp25);
        cc_range_2019_203a_3 = simd_or(tmp24, tmp26);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(sequence_e2_80, carryQ.get_carry_in(3), sequence_e2_80_adv));
        tmp27 = simd_and(sequence_e2_80_adv, cc_range_2019_203a_3);
        struct_Pf.cc = simd_or(struct_Pf.cc, tmp27);
        tmp28 = simd_andc(tmp10, tmp17);
        byte_b8 = simd_and(tmp9, tmp28);
        sequence_e2_b8 = simd_and(byte_e2_adv, byte_b8);
        tmp29 = simd_andc(tmp11, tmp4);
        tmp30 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp31 = simd_and(tmp30, tmp22);
        tmp32 = simd_or(tmp29, tmp31);
        tmp33 = simd_or(tmp32, tmp25);
        tmp34 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp35 = simd_and(tmp34, tmp22);
        tmp36 = simd_or(tmp33, tmp35);
        tmp37 = simd_and(tmp16, tmp36);
        tmp38 = simd_and(tmp21, tmp35);
        tmp39 = simd_or(tmp37, tmp38);
        tmp40 = simd_and(tmp7, tmp14);
        tmp41 = simd_andc(tmp22, tmp4);
        tmp42 = simd_and(tmp40, tmp41);
        cc_range_2e03_2e21_3 = simd_or(tmp39, tmp42);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(sequence_e2_b8, carryQ.get_carry_in(4), sequence_e2_b8_adv));
        tmp43 = simd_and(sequence_e2_b8_adv, cc_range_2e03_2e21_3);
        struct_Pf.cc = simd_or(struct_Pf.cc, tmp43);
  }
  CarryArray<5, 0> carryQ;
  };

  struct Pd {
  Pd() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Pd & struct_Pd) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, byte_2d, tmp7, tmp8, tmp9, tmp10;
		BitBlock tmp11, tmp12, byte_d6, tmp13, tmp14, tmp15, tmp16, tmp17, tmp18;
		BitBlock tmp19, tmp20, tmp21, tmp22, cc_range_58a_5be_2, byte_d6_adv, tmp23;
		BitBlock tmp24, tmp25, tmp26, byte_e1, tmp27, tmp28, tmp29, byte_90, tmp30;
		BitBlock sequence_e1_90, byte_e1_adv, byte_80, sequence_e1_90_adv, tmp31;
		BitBlock tmp32, byte_a0, sequence_e1_a0, byte_86, sequence_e1_a0_adv, tmp33;
		BitBlock tmp34, byte_e2, tmp35, sequence_e2_80, byte_e2_adv, tmp36, tmp37;
		BitBlock byte_range_90_95, sequence_e2_80_adv, tmp38, tmp39, byte_b8;
		BitBlock sequence_e2_b8, tmp40, tmp41, tmp42, tmp43, tmp44, tmp45;
		BitBlock cc_range_2e17_2e3a_3, sequence_e2_b8_adv, tmp46, tmp47, byte_e3;
		BitBlock tmp48, sequence_e3_80, byte_e3_adv, tmp49, tmp50, tmp51;
		BitBlock cc_range_301c_3030_3, sequence_e3_80_adv, tmp52, byte_82;
		BitBlock sequence_e3_82, sequence_e3_82_adv, tmp53, tmp54, byte_ef, tmp55;
		BitBlock sequence_ef_b8, byte_ef_adv, tmp56, tmp57, tmp58, byte_range_b1_b2;
		BitBlock sequence_ef_b8_adv, tmp59, tmp60, byte_b9, sequence_ef_b9, tmp61;
		BitBlock tmp62, cc_range_fe58_fe63_3, sequence_ef_b9_adv, tmp63, byte_bc;
		BitBlock sequence_ef_bc, byte_8d, sequence_ef_bc_adv, tmp64;




        struct_Pd.cc = simd<1>::constant<0>();
        tmp1 = simd_or(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp2, tmp1);
        tmp4 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp6 = simd_and(tmp4, tmp5);
        byte_2d = simd_and(tmp3, tmp6);
        struct_Pd.cc = simd_or(struct_Pd.cc, byte_2d);
        tmp7 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp11 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp12 = simd_and(tmp10, tmp11);
        byte_d6 = simd_and(tmp9, tmp12);
        tmp13 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp14 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp15 = simd_andc(tmp13, tmp14);
        tmp16 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp17 = simd_and(tmp16, tmp11);
        tmp18 = simd_and(tmp15, tmp17);
        tmp19 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp20 = simd_and(tmp13, tmp19);
        tmp21 = simd_and(tmp4, tmp11);
        tmp22 = simd_and(tmp20, tmp21);
        cc_range_58a_5be_2 = simd_or(tmp18, tmp22);
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(byte_d6, carryQ.get_carry_in(0), byte_d6_adv));
        tmp23 = simd_and(byte_d6_adv, cc_range_58a_5be_2);
        struct_Pd.cc = simd_or(struct_Pd.cc, tmp23);
        tmp24 = simd_and(tmp7, tmp2);
        tmp25 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp26 = simd_andc(tmp5, tmp25);
        byte_e1 = simd_and(tmp24, tmp26);
        tmp27 = simd_and(tmp13, tmp8);
        tmp28 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp29 = simd_or(tmp25, tmp28);
        byte_90 = simd_andc(tmp27, tmp29);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(1), tmp30));
        sequence_e1_90 = simd_and(tmp30, byte_90);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(2), byte_e1_adv));
        byte_80 = simd_andc(tmp15, tmp29);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(sequence_e1_90, carryQ.get_carry_in(3), sequence_e1_90_adv));
        tmp31 = simd_and(sequence_e1_90_adv, byte_80);
        struct_Pd.cc = simd_or(struct_Pd.cc, tmp31);
        tmp32 = simd_and(tmp13, tmp2);
        byte_a0 = simd_andc(tmp32, tmp29);
        sequence_e1_a0 = simd_and(byte_e1_adv, byte_a0);
        byte_86 = simd_and(tmp15, tmp12);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(sequence_e1_a0, carryQ.get_carry_in(4), sequence_e1_a0_adv));
        tmp33 = simd_and(sequence_e1_a0_adv, byte_86);
        struct_Pd.cc = simd_or(struct_Pd.cc, tmp33);
        tmp34 = simd_andc(tmp11, tmp25);
        byte_e2 = simd_and(tmp24, tmp34);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(5), tmp35));
        sequence_e2_80 = simd_and(tmp35, byte_80);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(6), byte_e2_adv));
        tmp36 = simd_andc(tmp27, basis_bits.bit_4);
        tmp37 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        byte_range_90_95 = simd_andc(tmp36, tmp37);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(sequence_e2_80, carryQ.get_carry_in(7), sequence_e2_80_adv));
        tmp38 = simd_and(sequence_e2_80_adv, byte_range_90_95);
        struct_Pd.cc = simd_or(struct_Pd.cc, tmp38);
        tmp39 = simd_andc(tmp16, tmp28);
        byte_b8 = simd_and(tmp20, tmp39);
        sequence_e2_b8 = simd_and(byte_e2_adv, byte_b8);
        tmp40 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp41 = simd_and(tmp10, tmp40);
        tmp42 = simd_or(tmp41, tmp17);
        tmp43 = simd_and(tmp27, tmp42);
        tmp44 = simd_and(tmp16, basis_bits.bit_6);
        tmp45 = simd_and(tmp20, tmp44);
        cc_range_2e17_2e3a_3 = simd_or(tmp43, tmp45);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(sequence_e2_b8, carryQ.get_carry_in(8), sequence_e2_b8_adv));
        tmp46 = simd_and(sequence_e2_b8_adv, cc_range_2e17_2e3a_3);
        struct_Pd.cc = simd_or(struct_Pd.cc, tmp46);
        tmp47 = simd_andc(tmp40, tmp25);
        byte_e3 = simd_and(tmp24, tmp47);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(byte_e3, carryQ.get_carry_in(9), tmp48));
        sequence_e3_80 = simd_and(tmp48, byte_80);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(byte_e3, carryQ.get_carry_in(10), byte_e3_adv));
        tmp49 = simd_andc(tmp4, tmp28);
        tmp50 = simd_and(tmp27, tmp49);
        tmp51 = simd_andc(tmp20, tmp29);
        cc_range_301c_3030_3 = simd_or(tmp50, tmp51);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(sequence_e3_80, carryQ.get_carry_in(11), sequence_e3_80_adv));
        tmp52 = simd_and(sequence_e3_80_adv, cc_range_301c_3030_3);
        struct_Pd.cc = simd_or(struct_Pd.cc, tmp52);
        byte_82 = simd_and(tmp15, tmp34);
        sequence_e3_82 = simd_and(byte_e3_adv, byte_82);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(sequence_e3_82, carryQ.get_carry_in(12), sequence_e3_82_adv));
        tmp53 = simd_and(sequence_e3_82_adv, byte_a0);
        struct_Pd.cc = simd_or(struct_Pd.cc, tmp53);
        tmp54 = simd_and(tmp4, tmp40);
        byte_ef = simd_and(tmp24, tmp54);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(13), tmp55));
        sequence_ef_b8 = simd_and(tmp55, byte_b8);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(14), byte_ef_adv));
        tmp56 = simd_andc(tmp20, tmp25);
        tmp57 = simd_not(basis_bits.bit_7);
        tmp58 = simd_or(simd_and(basis_bits.bit_6, tmp57), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
        byte_range_b1_b2 = simd_and(tmp56, tmp58);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(sequence_ef_b8, carryQ.get_carry_in(15), sequence_ef_b8_adv));
        tmp59 = simd_and(sequence_ef_b8_adv, byte_range_b1_b2);
        struct_Pd.cc = simd_or(struct_Pd.cc, tmp59);
        tmp60 = simd_and(tmp16, tmp5);
        byte_b9 = simd_and(tmp20, tmp60);
        sequence_ef_b9 = simd_and(byte_ef_adv, byte_b9);
        tmp61 = simd_and(tmp27, tmp39);
        tmp62 = simd_and(tmp32, tmp47);
        cc_range_fe58_fe63_3 = simd_or(tmp61, tmp62);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(sequence_ef_b9, carryQ.get_carry_in(16), sequence_ef_b9_adv));
        tmp63 = simd_and(sequence_ef_b9_adv, cc_range_fe58_fe63_3);
        struct_Pd.cc = simd_or(struct_Pd.cc, tmp63);
        byte_bc = simd_and(tmp20, tmp49);
        sequence_ef_bc = simd_and(byte_ef_adv, byte_bc);
        byte_8d = simd_and(tmp15, tmp6);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(sequence_ef_bc, carryQ.get_carry_in(17), sequence_ef_bc_adv));
        tmp64 = simd_and(sequence_ef_bc_adv, byte_8d);
        struct_Pd.cc = simd_or(struct_Pd.cc, tmp64);
        carryQ.CarryQ_Adjust(18);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Pd & struct_Pd, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, byte_2d, tmp7, tmp8, tmp9, tmp10;
		BitBlock tmp11, tmp12, byte_d6, tmp13, tmp14, tmp15, tmp16, tmp17, tmp18;
		BitBlock tmp19, tmp20, tmp21, tmp22, cc_range_58a_5be_2, byte_d6_adv, tmp23;
		BitBlock tmp24, tmp25, tmp26, byte_e1, tmp27, tmp28, tmp29, byte_90, tmp30;
		BitBlock sequence_e1_90, byte_e1_adv, byte_80, sequence_e1_90_adv, tmp31;
		BitBlock tmp32, byte_a0, sequence_e1_a0, byte_86, sequence_e1_a0_adv, tmp33;
		BitBlock tmp34, byte_e2, tmp35, sequence_e2_80, byte_e2_adv, tmp36, tmp37;
		BitBlock byte_range_90_95, sequence_e2_80_adv, tmp38, tmp39, byte_b8;
		BitBlock sequence_e2_b8, tmp40, tmp41, tmp42, tmp43, tmp44, tmp45;
		BitBlock cc_range_2e17_2e3a_3, sequence_e2_b8_adv, tmp46, tmp47, byte_e3;
		BitBlock tmp48, sequence_e3_80, byte_e3_adv, tmp49, tmp50, tmp51;
		BitBlock cc_range_301c_3030_3, sequence_e3_80_adv, tmp52, byte_82;
		BitBlock sequence_e3_82, sequence_e3_82_adv, tmp53, tmp54, byte_ef, tmp55;
		BitBlock sequence_ef_b8, byte_ef_adv, tmp56, tmp57, tmp58, byte_range_b1_b2;
		BitBlock sequence_ef_b8_adv, tmp59, tmp60, byte_b9, sequence_ef_b9, tmp61;
		BitBlock tmp62, cc_range_fe58_fe63_3, sequence_ef_b9_adv, tmp63, byte_bc;
		BitBlock sequence_ef_bc, byte_8d, sequence_ef_bc_adv, tmp64;




        struct_Pd.cc = simd<1>::constant<0>();
        tmp1 = simd_or(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp2, tmp1);
        tmp4 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp6 = simd_and(tmp4, tmp5);
        byte_2d = simd_and(tmp3, tmp6);
        struct_Pd.cc = simd_or(struct_Pd.cc, byte_2d);
        tmp7 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp11 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp12 = simd_and(tmp10, tmp11);
        byte_d6 = simd_and(tmp9, tmp12);
        tmp13 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp14 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp15 = simd_andc(tmp13, tmp14);
        tmp16 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp17 = simd_and(tmp16, tmp11);
        tmp18 = simd_and(tmp15, tmp17);
        tmp19 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp20 = simd_and(tmp13, tmp19);
        tmp21 = simd_and(tmp4, tmp11);
        tmp22 = simd_and(tmp20, tmp21);
        cc_range_58a_5be_2 = simd_or(tmp18, tmp22);
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(byte_d6, carryQ.get_carry_in(0), byte_d6_adv));
        tmp23 = simd_and(byte_d6_adv, cc_range_58a_5be_2);
        struct_Pd.cc = simd_or(struct_Pd.cc, tmp23);
        tmp24 = simd_and(tmp7, tmp2);
        tmp25 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp26 = simd_andc(tmp5, tmp25);
        byte_e1 = simd_and(tmp24, tmp26);
        tmp27 = simd_and(tmp13, tmp8);
        tmp28 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp29 = simd_or(tmp25, tmp28);
        byte_90 = simd_andc(tmp27, tmp29);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(1), tmp30));
        sequence_e1_90 = simd_and(tmp30, byte_90);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(2), byte_e1_adv));
        byte_80 = simd_andc(tmp15, tmp29);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(sequence_e1_90, carryQ.get_carry_in(3), sequence_e1_90_adv));
        tmp31 = simd_and(sequence_e1_90_adv, byte_80);
        struct_Pd.cc = simd_or(struct_Pd.cc, tmp31);
        tmp32 = simd_and(tmp13, tmp2);
        byte_a0 = simd_andc(tmp32, tmp29);
        sequence_e1_a0 = simd_and(byte_e1_adv, byte_a0);
        byte_86 = simd_and(tmp15, tmp12);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(sequence_e1_a0, carryQ.get_carry_in(4), sequence_e1_a0_adv));
        tmp33 = simd_and(sequence_e1_a0_adv, byte_86);
        struct_Pd.cc = simd_or(struct_Pd.cc, tmp33);
        tmp34 = simd_andc(tmp11, tmp25);
        byte_e2 = simd_and(tmp24, tmp34);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(5), tmp35));
        sequence_e2_80 = simd_and(tmp35, byte_80);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(6), byte_e2_adv));
        tmp36 = simd_andc(tmp27, basis_bits.bit_4);
        tmp37 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        byte_range_90_95 = simd_andc(tmp36, tmp37);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(sequence_e2_80, carryQ.get_carry_in(7), sequence_e2_80_adv));
        tmp38 = simd_and(sequence_e2_80_adv, byte_range_90_95);
        struct_Pd.cc = simd_or(struct_Pd.cc, tmp38);
        tmp39 = simd_andc(tmp16, tmp28);
        byte_b8 = simd_and(tmp20, tmp39);
        sequence_e2_b8 = simd_and(byte_e2_adv, byte_b8);
        tmp40 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp41 = simd_and(tmp10, tmp40);
        tmp42 = simd_or(tmp41, tmp17);
        tmp43 = simd_and(tmp27, tmp42);
        tmp44 = simd_and(tmp16, basis_bits.bit_6);
        tmp45 = simd_and(tmp20, tmp44);
        cc_range_2e17_2e3a_3 = simd_or(tmp43, tmp45);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(sequence_e2_b8, carryQ.get_carry_in(8), sequence_e2_b8_adv));
        tmp46 = simd_and(sequence_e2_b8_adv, cc_range_2e17_2e3a_3);
        struct_Pd.cc = simd_or(struct_Pd.cc, tmp46);
        tmp47 = simd_andc(tmp40, tmp25);
        byte_e3 = simd_and(tmp24, tmp47);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(byte_e3, carryQ.get_carry_in(9), tmp48));
        sequence_e3_80 = simd_and(tmp48, byte_80);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(byte_e3, carryQ.get_carry_in(10), byte_e3_adv));
        tmp49 = simd_andc(tmp4, tmp28);
        tmp50 = simd_and(tmp27, tmp49);
        tmp51 = simd_andc(tmp20, tmp29);
        cc_range_301c_3030_3 = simd_or(tmp50, tmp51);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(sequence_e3_80, carryQ.get_carry_in(11), sequence_e3_80_adv));
        tmp52 = simd_and(sequence_e3_80_adv, cc_range_301c_3030_3);
        struct_Pd.cc = simd_or(struct_Pd.cc, tmp52);
        byte_82 = simd_and(tmp15, tmp34);
        sequence_e3_82 = simd_and(byte_e3_adv, byte_82);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(sequence_e3_82, carryQ.get_carry_in(12), sequence_e3_82_adv));
        tmp53 = simd_and(sequence_e3_82_adv, byte_a0);
        struct_Pd.cc = simd_or(struct_Pd.cc, tmp53);
        tmp54 = simd_and(tmp4, tmp40);
        byte_ef = simd_and(tmp24, tmp54);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(13), tmp55));
        sequence_ef_b8 = simd_and(tmp55, byte_b8);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(14), byte_ef_adv));
        tmp56 = simd_andc(tmp20, tmp25);
        tmp57 = simd_not(basis_bits.bit_7);
        tmp58 = simd_or(simd_and(basis_bits.bit_6, tmp57), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
        byte_range_b1_b2 = simd_and(tmp56, tmp58);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(sequence_ef_b8, carryQ.get_carry_in(15), sequence_ef_b8_adv));
        tmp59 = simd_and(sequence_ef_b8_adv, byte_range_b1_b2);
        struct_Pd.cc = simd_or(struct_Pd.cc, tmp59);
        tmp60 = simd_and(tmp16, tmp5);
        byte_b9 = simd_and(tmp20, tmp60);
        sequence_ef_b9 = simd_and(byte_ef_adv, byte_b9);
        tmp61 = simd_and(tmp27, tmp39);
        tmp62 = simd_and(tmp32, tmp47);
        cc_range_fe58_fe63_3 = simd_or(tmp61, tmp62);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(sequence_ef_b9, carryQ.get_carry_in(16), sequence_ef_b9_adv));
        tmp63 = simd_and(sequence_ef_b9_adv, cc_range_fe58_fe63_3);
        struct_Pd.cc = simd_or(struct_Pd.cc, tmp63);
        byte_bc = simd_and(tmp20, tmp49);
        sequence_ef_bc = simd_and(byte_ef_adv, byte_bc);
        byte_8d = simd_and(tmp15, tmp6);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(sequence_ef_bc, carryQ.get_carry_in(17), sequence_ef_bc_adv));
        tmp64 = simd_and(sequence_ef_bc_adv, byte_8d);
        struct_Pd.cc = simd_or(struct_Pd.cc, tmp64);
  }
  CarryArray<18, 0> carryQ;
  };

  struct Pe {
  Pe() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Pe & struct_Pe) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, tmp7, tmp8, tmp9, tmp10, tmp11;
		BitBlock tmp12, tmp13, tmp14, tmp15, tmp16, tmp17, cc_range_29_7d_1, tmp18;
		BitBlock tmp19, tmp20, tmp21, tmp22, byte_e0, tmp23, tmp24, tmp25, byte_bc;
		BitBlock tmp26, sequence_e0_bc, byte_e0_adv, tmp27, tmp28, tmp29;
		BitBlock cc_range_f3b_f3d_3, sequence_e0_bc_adv, tmp30, tmp31, byte_e1, tmp32;
		BitBlock tmp33, tmp34, byte_9a, tmp35, sequence_e1_9a, byte_e1_adv, byte_9c;
		BitBlock sequence_e1_9a_adv, tmp36, tmp37, byte_e2, tmp38, tmp39, byte_81;
		BitBlock tmp40, sequence_e2_81, byte_e2_adv, tmp41, tmp42, tmp43, tmp44, tmp45;
		BitBlock cc_range_2046_207e_3, sequence_e2_81_adv, tmp46, byte_82;
		BitBlock sequence_e2_82, byte_8e, sequence_e2_82_adv, tmp47, byte_8c;
		BitBlock sequence_e2_8c, tmp48, tmp49, tmp50, tmp51, cc_range_2309_232a_3;
		BitBlock sequence_e2_8c_adv, tmp52, byte_9d, sequence_e2_9d, tmp53, tmp54;
		BitBlock tmp55, tmp56, tmp57, tmp58, cc_range_2769_2775_3, sequence_e2_9d_adv;
		BitBlock tmp59, tmp60, byte_9f, sequence_e2_9f, tmp61, tmp62, tmp63, tmp64;
		BitBlock tmp65, tmp66, tmp67, tmp68, tmp69, tmp70, cc_range_27c6_27ef_3;
		BitBlock sequence_e2_9f_adv, tmp71, byte_a6, sequence_e2_a6, tmp72, tmp73;
		BitBlock tmp74, tmp75, tmp76, tmp77, cc_range_2984_2998_3, sequence_e2_a6_adv;
		BitBlock tmp78, byte_a7, sequence_e2_a7, tmp79, tmp80, cc_range_29d9_29fd_3;
		BitBlock sequence_e2_a7_adv, tmp81, tmp82, byte_b8, sequence_e2_b8, tmp83;
		BitBlock tmp84, tmp85, cc_range_2e23_2e29_3, sequence_e2_b8_adv, tmp86, tmp87;
		BitBlock byte_e3, byte_80, tmp88, sequence_e3_80, byte_e3_adv, tmp89, tmp90;
		BitBlock tmp91, tmp92, tmp93, tmp94, tmp95, tmp96, tmp97, tmp98, tmp99, tmp100;
		BitBlock tmp101, tmp102, tmp103, tmp104, cc_range_3009_301e_3;
		BitBlock sequence_e3_80_adv, tmp105, byte_ef, tmp106, byte_b4, tmp107;
		BitBlock sequence_ef_b4, byte_ef_adv, byte_bf, sequence_ef_b4_adv, tmp108;
		BitBlock sequence_ef_b8, tmp109, tmp110, tmp111, tmp112, tmp113, tmp114;
		BitBlock tmp115, cc_range_fe18_fe3e_3, sequence_ef_b8_adv, tmp116, byte_b9;
		BitBlock sequence_ef_b9, tmp117, tmp118, tmp119, tmp120, tmp121, tmp122;
		BitBlock tmp123, cc_range_fe40_fe5e_3, sequence_ef_b9_adv, tmp124;
		BitBlock sequence_ef_bc, tmp125, cc_range_ff09_ff3d_3, sequence_ef_bc_adv;
		BitBlock tmp126, byte_bd, sequence_ef_bd, tmp127, tmp128, tmp129;
		BitBlock cc_range_ff5d_ff63_3, sequence_ef_bd_adv, tmp130;




        struct_Pe.cc = simd<1>::constant<0>();
        tmp1 = simd_or(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp2, tmp1);
        tmp4 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp6 = simd_and(tmp4, tmp5);
        tmp7 = simd_and(tmp3, tmp6);
        tmp8 = simd_andc(basis_bits.bit_1, basis_bits.bit_0);
        tmp9 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp10 = simd_and(tmp8, tmp9);
        tmp11 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp12 = simd_and(tmp11, tmp5);
        tmp13 = simd_and(tmp10, tmp12);
        tmp14 = simd_or(tmp7, tmp13);
        tmp15 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp16 = simd_and(tmp8, tmp15);
        tmp17 = simd_and(tmp16, tmp12);
        cc_range_29_7d_1 = simd_or(tmp14, tmp17);
        struct_Pe.cc = simd_or(struct_Pe.cc, cc_range_29_7d_1);
        tmp18 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp19 = simd_and(tmp18, tmp2);
        tmp20 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp21 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp22 = simd_or(tmp20, tmp21);
        byte_e0 = simd_andc(tmp19, tmp22);
        tmp23 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp24 = simd_and(tmp23, tmp15);
        tmp25 = simd_andc(tmp11, tmp21);
        byte_bc = simd_and(tmp24, tmp25);
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(byte_e0, carryQ.get_carry_in(0), tmp26));
        sequence_e0_bc = simd_and(tmp26, byte_bc);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(byte_e0, carryQ.get_carry_in(1), byte_e0_adv));
        tmp27 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp28 = simd_and(tmp4, tmp27);
        tmp29 = simd_or(tmp28, tmp12);
        cc_range_f3b_f3d_3 = simd_and(tmp24, tmp29);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(sequence_e0_bc, carryQ.get_carry_in(2), sequence_e0_bc_adv));
        tmp30 = simd_and(sequence_e0_bc_adv, cc_range_f3b_f3d_3);
        struct_Pe.cc = simd_or(struct_Pe.cc, tmp30);
        tmp31 = simd_andc(tmp5, tmp20);
        byte_e1 = simd_and(tmp19, tmp31);
        tmp32 = simd_and(tmp23, tmp9);
        tmp33 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp34 = simd_and(tmp4, tmp33);
        byte_9a = simd_and(tmp32, tmp34);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(3), tmp35));
        sequence_e1_9a = simd_and(tmp35, byte_9a);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(4), byte_e1_adv));
        byte_9c = simd_and(tmp32, tmp25);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(sequence_e1_9a, carryQ.get_carry_in(5), sequence_e1_9a_adv));
        tmp36 = simd_and(sequence_e1_9a_adv, byte_9c);
        struct_Pe.cc = simd_or(struct_Pe.cc, tmp36);
        tmp37 = simd_andc(tmp33, tmp20);
        byte_e2 = simd_and(tmp19, tmp37);
        tmp38 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp39 = simd_andc(tmp23, tmp38);
        byte_81 = simd_and(tmp39, tmp31);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(6), tmp40));
        sequence_e2_81 = simd_and(tmp40, byte_81);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(7), byte_e2_adv));
        tmp41 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp42 = simd_and(tmp41, tmp33);
        tmp43 = simd_and(tmp39, tmp42);
        tmp44 = simd_and(tmp11, tmp33);
        tmp45 = simd_and(tmp24, tmp44);
        cc_range_2046_207e_3 = simd_or(tmp43, tmp45);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(sequence_e2_81, carryQ.get_carry_in(8), sequence_e2_81_adv));
        tmp46 = simd_and(sequence_e2_81_adv, cc_range_2046_207e_3);
        struct_Pe.cc = simd_or(struct_Pe.cc, tmp46);
        byte_82 = simd_and(tmp39, tmp37);
        sequence_e2_82 = simd_and(byte_e2_adv, byte_82);
        byte_8e = simd_and(tmp39, tmp44);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(sequence_e2_82, carryQ.get_carry_in(9), sequence_e2_82_adv));
        tmp47 = simd_and(sequence_e2_82_adv, byte_8e);
        struct_Pe.cc = simd_or(struct_Pe.cc, tmp47);
        byte_8c = simd_and(tmp39, tmp25);
        sequence_e2_8c = simd_and(byte_e2_adv, byte_8c);
        tmp48 = simd_and(tmp4, basis_bits.bit_7);
        tmp49 = simd_and(tmp39, tmp48);
        tmp50 = simd_and(tmp23, tmp2);
        tmp51 = simd_and(tmp50, tmp34);
        cc_range_2309_232a_3 = simd_or(tmp49, tmp51);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(sequence_e2_8c, carryQ.get_carry_in(10), sequence_e2_8c_adv));
        tmp52 = simd_and(sequence_e2_8c_adv, cc_range_2309_232a_3);
        struct_Pe.cc = simd_or(struct_Pe.cc, tmp52);
        byte_9d = simd_and(tmp32, tmp12);
        sequence_e2_9d = simd_and(byte_e2_adv, byte_9d);
        tmp53 = simd_and(tmp23, basis_bits.bit_2);
        tmp54 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp55 = simd_or(basis_bits.bit_4, tmp54);
        tmp56 = simd_not(tmp55);
        tmp57 = simd_or(simd_and(basis_bits.bit_3, tmp56), simd_andc(basis_bits.bit_4, basis_bits.bit_3));
        tmp58 = simd_and(tmp53, tmp57);
        cc_range_2769_2775_3 = simd_andc(tmp58, basis_bits.bit_7);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(sequence_e2_9d, carryQ.get_carry_in(11), sequence_e2_9d_adv));
        tmp59 = simd_and(sequence_e2_9d_adv, cc_range_2769_2775_3);
        struct_Pe.cc = simd_or(struct_Pe.cc, tmp59);
        tmp60 = simd_and(tmp11, tmp27);
        byte_9f = simd_and(tmp32, tmp60);
        sequence_e2_9f = simd_and(byte_e2_adv, byte_9f);
        tmp61 = simd_and(tmp41, tmp27);
        tmp62 = simd_and(tmp50, tmp61);
        tmp63 = simd_or(tmp43, tmp62);
        tmp64 = simd_and(tmp50, tmp6);
        tmp65 = simd_or(tmp63, tmp64);
        tmp66 = simd_and(tmp50, tmp28);
        tmp67 = simd_or(tmp65, tmp66);
        tmp68 = simd_and(tmp50, tmp12);
        tmp69 = simd_or(tmp67, tmp68);
        tmp70 = simd_and(tmp50, tmp60);
        cc_range_27c6_27ef_3 = simd_or(tmp69, tmp70);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(sequence_e2_9f, carryQ.get_carry_in(12), sequence_e2_9f_adv));
        tmp71 = simd_and(sequence_e2_9f_adv, cc_range_27c6_27ef_3);
        struct_Pe.cc = simd_or(struct_Pe.cc, tmp71);
        byte_a6 = simd_and(tmp50, tmp42);
        sequence_e2_a6 = simd_and(byte_e2_adv, byte_a6);
        tmp72 = simd_andc(tmp23, basis_bits.bit_2);
        tmp73 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
        tmp74 = simd_and(basis_bits.bit_4, tmp73);
        tmp75 = simd_not(tmp74);
        tmp76 = simd_or(simd_and(basis_bits.bit_3, tmp75), simd_andc(tmp20, basis_bits.bit_3));
        tmp77 = simd_and(tmp72, tmp76);
        cc_range_2984_2998_3 = simd_andc(tmp77, basis_bits.bit_7);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(sequence_e2_a6, carryQ.get_carry_in(13), sequence_e2_a6_adv));
        tmp78 = simd_and(sequence_e2_a6_adv, cc_range_2984_2998_3);
        struct_Pe.cc = simd_or(struct_Pe.cc, tmp78);
        byte_a7 = simd_and(tmp50, tmp61);
        sequence_e2_a7 = simd_and(byte_e2_adv, byte_a7);
        tmp79 = simd_and(tmp32, tmp48);
        tmp80 = simd_and(tmp24, tmp12);
        cc_range_29d9_29fd_3 = simd_or(tmp79, tmp80);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(sequence_e2_a7, carryQ.get_carry_in(14), sequence_e2_a7_adv));
        tmp81 = simd_and(sequence_e2_a7_adv, cc_range_29d9_29fd_3);
        struct_Pe.cc = simd_or(struct_Pe.cc, tmp81);
        tmp82 = simd_andc(tmp4, tmp21);
        byte_b8 = simd_and(tmp24, tmp82);
        sequence_e2_b8 = simd_and(byte_e2_adv, byte_b8);
        tmp83 = simd_not(tmp73);
        tmp84 = simd_or(simd_and(basis_bits.bit_4, tmp83), simd_andc(tmp73, basis_bits.bit_4));
        tmp85 = simd_and(tmp50, tmp84);
        cc_range_2e23_2e29_3 = simd_andc(tmp85, basis_bits.bit_7);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(sequence_e2_b8, carryQ.get_carry_in(15), sequence_e2_b8_adv));
        tmp86 = simd_and(sequence_e2_b8_adv, cc_range_2e23_2e29_3);
        struct_Pe.cc = simd_or(struct_Pe.cc, tmp86);
        tmp87 = simd_andc(tmp27, tmp20);
        byte_e3 = simd_and(tmp19, tmp87);
        byte_80 = simd_andc(tmp39, tmp22);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(byte_e3, carryQ.get_carry_in(16), tmp88));
        sequence_e3_80 = simd_and(tmp88, byte_80);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(byte_e3, carryQ.get_carry_in(17), byte_e3_adv));
        tmp89 = simd_or(tmp48, tmp12);
        tmp90 = simd_or(tmp89, tmp60);
        tmp91 = simd_and(tmp39, tmp90);
        tmp92 = simd_and(tmp32, tmp31);
        tmp93 = simd_or(tmp91, tmp92);
        tmp94 = simd_and(tmp41, tmp5);
        tmp95 = simd_and(tmp32, tmp94);
        tmp96 = simd_or(tmp93, tmp95);
        tmp97 = simd_and(tmp32, tmp61);
        tmp98 = simd_or(tmp96, tmp97);
        tmp99 = simd_and(tmp32, tmp6);
        tmp100 = simd_or(tmp98, tmp99);
        tmp101 = simd_and(tmp32, tmp28);
        tmp102 = simd_or(tmp100, tmp101);
        tmp103 = simd_and(tmp11, basis_bits.bit_6);
        tmp104 = simd_and(tmp32, tmp103);
        cc_range_3009_301e_3 = simd_or(tmp102, tmp104);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(sequence_e3_80, carryQ.get_carry_in(18), sequence_e3_80_adv));
        tmp105 = simd_and(sequence_e3_80_adv, cc_range_3009_301e_3);
        struct_Pe.cc = simd_or(struct_Pe.cc, tmp105);
        byte_ef = simd_and(tmp19, tmp60);
        tmp106 = simd_andc(tmp41, tmp21);
        byte_b4 = simd_and(tmp24, tmp106);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(19), tmp107));
        sequence_ef_b4 = simd_and(tmp107, byte_b4);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(20), byte_ef_adv));
        byte_bf = simd_and(tmp24, tmp60);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(sequence_ef_b4, carryQ.get_carry_in(21), sequence_ef_b4_adv));
        tmp108 = simd_and(sequence_ef_b4_adv, byte_bf);
        struct_Pe.cc = simd_or(struct_Pe.cc, tmp108);
        sequence_ef_b8 = simd_and(byte_ef_adv, byte_b8);
        tmp109 = simd_and(tmp32, tmp82);
        tmp110 = simd_and(tmp24, tmp42);
        tmp111 = simd_or(tmp109, tmp110);
        tmp112 = simd_or(tmp111, byte_b8);
        tmp113 = simd_and(tmp24, tmp34);
        tmp114 = simd_or(tmp112, tmp113);
        tmp115 = simd_or(tmp114, byte_bc);
        cc_range_fe18_fe3e_3 = simd_or(tmp115, tmp45);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(sequence_ef_b8, carryQ.get_carry_in(22), sequence_ef_b8_adv));
        tmp116 = simd_and(sequence_ef_b8_adv, cc_range_fe18_fe3e_3);
        struct_Pe.cc = simd_or(struct_Pe.cc, tmp116);
        byte_b9 = simd_and(tmp24, tmp6);
        sequence_ef_b9 = simd_and(byte_ef_adv, byte_b9);
        tmp117 = simd_andc(tmp22, tmp37);
        tmp118 = simd_andc(tmp117, tmp106);
        tmp119 = simd_andc(tmp118, tmp82);
        tmp120 = simd_andc(tmp39, tmp119);
        tmp121 = simd_or(tmp120, byte_9a);
        tmp122 = simd_or(tmp121, byte_9c);
        tmp123 = simd_and(tmp32, tmp44);
        cc_range_fe40_fe5e_3 = simd_or(tmp122, tmp123);
        carryQ.cq[23] = carryout2carry(pablo_blk_Advance(sequence_ef_b9, carryQ.get_carry_in(23), sequence_ef_b9_adv));
        tmp124 = simd_and(sequence_ef_b9_adv, cc_range_fe40_fe5e_3);
        struct_Pe.cc = simd_or(struct_Pe.cc, tmp124);
        sequence_ef_bc = simd_and(byte_ef_adv, byte_bc);
        tmp125 = simd_and(tmp39, tmp6);
        cc_range_ff09_ff3d_3 = simd_or(tmp125, tmp80);
        carryQ.cq[24] = carryout2carry(pablo_blk_Advance(sequence_ef_bc, carryQ.get_carry_in(24), sequence_ef_bc_adv));
        tmp126 = simd_and(sequence_ef_bc_adv, cc_range_ff09_ff3d_3);
        struct_Pe.cc = simd_or(struct_Pe.cc, tmp126);
        byte_bd = simd_and(tmp24, tmp12);
        sequence_ef_bd = simd_and(byte_ef_adv, byte_bd);
        tmp127 = simd_andc(tmp50, tmp22);
        tmp128 = simd_or(byte_9d, tmp127);
        tmp129 = simd_and(tmp50, tmp87);
        cc_range_ff5d_ff63_3 = simd_or(tmp128, tmp129);
        carryQ.cq[25] = carryout2carry(pablo_blk_Advance(sequence_ef_bd, carryQ.get_carry_in(25), sequence_ef_bd_adv));
        tmp130 = simd_and(sequence_ef_bd_adv, cc_range_ff5d_ff63_3);
        struct_Pe.cc = simd_or(struct_Pe.cc, tmp130);
        carryQ.CarryQ_Adjust(26);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Pe & struct_Pe, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, tmp7, tmp8, tmp9, tmp10, tmp11;
		BitBlock tmp12, tmp13, tmp14, tmp15, tmp16, tmp17, cc_range_29_7d_1, tmp18;
		BitBlock tmp19, tmp20, tmp21, tmp22, byte_e0, tmp23, tmp24, tmp25, byte_bc;
		BitBlock tmp26, sequence_e0_bc, byte_e0_adv, tmp27, tmp28, tmp29;
		BitBlock cc_range_f3b_f3d_3, sequence_e0_bc_adv, tmp30, tmp31, byte_e1, tmp32;
		BitBlock tmp33, tmp34, byte_9a, tmp35, sequence_e1_9a, byte_e1_adv, byte_9c;
		BitBlock sequence_e1_9a_adv, tmp36, tmp37, byte_e2, tmp38, tmp39, byte_81;
		BitBlock tmp40, sequence_e2_81, byte_e2_adv, tmp41, tmp42, tmp43, tmp44, tmp45;
		BitBlock cc_range_2046_207e_3, sequence_e2_81_adv, tmp46, byte_82;
		BitBlock sequence_e2_82, byte_8e, sequence_e2_82_adv, tmp47, byte_8c;
		BitBlock sequence_e2_8c, tmp48, tmp49, tmp50, tmp51, cc_range_2309_232a_3;
		BitBlock sequence_e2_8c_adv, tmp52, byte_9d, sequence_e2_9d, tmp53, tmp54;
		BitBlock tmp55, tmp56, tmp57, tmp58, cc_range_2769_2775_3, sequence_e2_9d_adv;
		BitBlock tmp59, tmp60, byte_9f, sequence_e2_9f, tmp61, tmp62, tmp63, tmp64;
		BitBlock tmp65, tmp66, tmp67, tmp68, tmp69, tmp70, cc_range_27c6_27ef_3;
		BitBlock sequence_e2_9f_adv, tmp71, byte_a6, sequence_e2_a6, tmp72, tmp73;
		BitBlock tmp74, tmp75, tmp76, tmp77, cc_range_2984_2998_3, sequence_e2_a6_adv;
		BitBlock tmp78, byte_a7, sequence_e2_a7, tmp79, tmp80, cc_range_29d9_29fd_3;
		BitBlock sequence_e2_a7_adv, tmp81, tmp82, byte_b8, sequence_e2_b8, tmp83;
		BitBlock tmp84, tmp85, cc_range_2e23_2e29_3, sequence_e2_b8_adv, tmp86, tmp87;
		BitBlock byte_e3, byte_80, tmp88, sequence_e3_80, byte_e3_adv, tmp89, tmp90;
		BitBlock tmp91, tmp92, tmp93, tmp94, tmp95, tmp96, tmp97, tmp98, tmp99, tmp100;
		BitBlock tmp101, tmp102, tmp103, tmp104, cc_range_3009_301e_3;
		BitBlock sequence_e3_80_adv, tmp105, byte_ef, tmp106, byte_b4, tmp107;
		BitBlock sequence_ef_b4, byte_ef_adv, byte_bf, sequence_ef_b4_adv, tmp108;
		BitBlock sequence_ef_b8, tmp109, tmp110, tmp111, tmp112, tmp113, tmp114;
		BitBlock tmp115, cc_range_fe18_fe3e_3, sequence_ef_b8_adv, tmp116, byte_b9;
		BitBlock sequence_ef_b9, tmp117, tmp118, tmp119, tmp120, tmp121, tmp122;
		BitBlock tmp123, cc_range_fe40_fe5e_3, sequence_ef_b9_adv, tmp124;
		BitBlock sequence_ef_bc, tmp125, cc_range_ff09_ff3d_3, sequence_ef_bc_adv;
		BitBlock tmp126, byte_bd, sequence_ef_bd, tmp127, tmp128, tmp129;
		BitBlock cc_range_ff5d_ff63_3, sequence_ef_bd_adv, tmp130;




        struct_Pe.cc = simd<1>::constant<0>();
        tmp1 = simd_or(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp2, tmp1);
        tmp4 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp6 = simd_and(tmp4, tmp5);
        tmp7 = simd_and(tmp3, tmp6);
        tmp8 = simd_andc(basis_bits.bit_1, basis_bits.bit_0);
        tmp9 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp10 = simd_and(tmp8, tmp9);
        tmp11 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp12 = simd_and(tmp11, tmp5);
        tmp13 = simd_and(tmp10, tmp12);
        tmp14 = simd_or(tmp7, tmp13);
        tmp15 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp16 = simd_and(tmp8, tmp15);
        tmp17 = simd_and(tmp16, tmp12);
        cc_range_29_7d_1 = simd_or(tmp14, tmp17);
        struct_Pe.cc = simd_or(struct_Pe.cc, cc_range_29_7d_1);
        tmp18 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp19 = simd_and(tmp18, tmp2);
        tmp20 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp21 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp22 = simd_or(tmp20, tmp21);
        byte_e0 = simd_andc(tmp19, tmp22);
        tmp23 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp24 = simd_and(tmp23, tmp15);
        tmp25 = simd_andc(tmp11, tmp21);
        byte_bc = simd_and(tmp24, tmp25);
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(byte_e0, carryQ.get_carry_in(0), tmp26));
        sequence_e0_bc = simd_and(tmp26, byte_bc);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(byte_e0, carryQ.get_carry_in(1), byte_e0_adv));
        tmp27 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp28 = simd_and(tmp4, tmp27);
        tmp29 = simd_or(tmp28, tmp12);
        cc_range_f3b_f3d_3 = simd_and(tmp24, tmp29);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(sequence_e0_bc, carryQ.get_carry_in(2), sequence_e0_bc_adv));
        tmp30 = simd_and(sequence_e0_bc_adv, cc_range_f3b_f3d_3);
        struct_Pe.cc = simd_or(struct_Pe.cc, tmp30);
        tmp31 = simd_andc(tmp5, tmp20);
        byte_e1 = simd_and(tmp19, tmp31);
        tmp32 = simd_and(tmp23, tmp9);
        tmp33 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp34 = simd_and(tmp4, tmp33);
        byte_9a = simd_and(tmp32, tmp34);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(3), tmp35));
        sequence_e1_9a = simd_and(tmp35, byte_9a);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(4), byte_e1_adv));
        byte_9c = simd_and(tmp32, tmp25);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(sequence_e1_9a, carryQ.get_carry_in(5), sequence_e1_9a_adv));
        tmp36 = simd_and(sequence_e1_9a_adv, byte_9c);
        struct_Pe.cc = simd_or(struct_Pe.cc, tmp36);
        tmp37 = simd_andc(tmp33, tmp20);
        byte_e2 = simd_and(tmp19, tmp37);
        tmp38 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp39 = simd_andc(tmp23, tmp38);
        byte_81 = simd_and(tmp39, tmp31);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(6), tmp40));
        sequence_e2_81 = simd_and(tmp40, byte_81);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(7), byte_e2_adv));
        tmp41 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp42 = simd_and(tmp41, tmp33);
        tmp43 = simd_and(tmp39, tmp42);
        tmp44 = simd_and(tmp11, tmp33);
        tmp45 = simd_and(tmp24, tmp44);
        cc_range_2046_207e_3 = simd_or(tmp43, tmp45);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(sequence_e2_81, carryQ.get_carry_in(8), sequence_e2_81_adv));
        tmp46 = simd_and(sequence_e2_81_adv, cc_range_2046_207e_3);
        struct_Pe.cc = simd_or(struct_Pe.cc, tmp46);
        byte_82 = simd_and(tmp39, tmp37);
        sequence_e2_82 = simd_and(byte_e2_adv, byte_82);
        byte_8e = simd_and(tmp39, tmp44);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(sequence_e2_82, carryQ.get_carry_in(9), sequence_e2_82_adv));
        tmp47 = simd_and(sequence_e2_82_adv, byte_8e);
        struct_Pe.cc = simd_or(struct_Pe.cc, tmp47);
        byte_8c = simd_and(tmp39, tmp25);
        sequence_e2_8c = simd_and(byte_e2_adv, byte_8c);
        tmp48 = simd_and(tmp4, basis_bits.bit_7);
        tmp49 = simd_and(tmp39, tmp48);
        tmp50 = simd_and(tmp23, tmp2);
        tmp51 = simd_and(tmp50, tmp34);
        cc_range_2309_232a_3 = simd_or(tmp49, tmp51);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(sequence_e2_8c, carryQ.get_carry_in(10), sequence_e2_8c_adv));
        tmp52 = simd_and(sequence_e2_8c_adv, cc_range_2309_232a_3);
        struct_Pe.cc = simd_or(struct_Pe.cc, tmp52);
        byte_9d = simd_and(tmp32, tmp12);
        sequence_e2_9d = simd_and(byte_e2_adv, byte_9d);
        tmp53 = simd_and(tmp23, basis_bits.bit_2);
        tmp54 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp55 = simd_or(basis_bits.bit_4, tmp54);
        tmp56 = simd_not(tmp55);
        tmp57 = simd_or(simd_and(basis_bits.bit_3, tmp56), simd_andc(basis_bits.bit_4, basis_bits.bit_3));
        tmp58 = simd_and(tmp53, tmp57);
        cc_range_2769_2775_3 = simd_andc(tmp58, basis_bits.bit_7);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(sequence_e2_9d, carryQ.get_carry_in(11), sequence_e2_9d_adv));
        tmp59 = simd_and(sequence_e2_9d_adv, cc_range_2769_2775_3);
        struct_Pe.cc = simd_or(struct_Pe.cc, tmp59);
        tmp60 = simd_and(tmp11, tmp27);
        byte_9f = simd_and(tmp32, tmp60);
        sequence_e2_9f = simd_and(byte_e2_adv, byte_9f);
        tmp61 = simd_and(tmp41, tmp27);
        tmp62 = simd_and(tmp50, tmp61);
        tmp63 = simd_or(tmp43, tmp62);
        tmp64 = simd_and(tmp50, tmp6);
        tmp65 = simd_or(tmp63, tmp64);
        tmp66 = simd_and(tmp50, tmp28);
        tmp67 = simd_or(tmp65, tmp66);
        tmp68 = simd_and(tmp50, tmp12);
        tmp69 = simd_or(tmp67, tmp68);
        tmp70 = simd_and(tmp50, tmp60);
        cc_range_27c6_27ef_3 = simd_or(tmp69, tmp70);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(sequence_e2_9f, carryQ.get_carry_in(12), sequence_e2_9f_adv));
        tmp71 = simd_and(sequence_e2_9f_adv, cc_range_27c6_27ef_3);
        struct_Pe.cc = simd_or(struct_Pe.cc, tmp71);
        byte_a6 = simd_and(tmp50, tmp42);
        sequence_e2_a6 = simd_and(byte_e2_adv, byte_a6);
        tmp72 = simd_andc(tmp23, basis_bits.bit_2);
        tmp73 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
        tmp74 = simd_and(basis_bits.bit_4, tmp73);
        tmp75 = simd_not(tmp74);
        tmp76 = simd_or(simd_and(basis_bits.bit_3, tmp75), simd_andc(tmp20, basis_bits.bit_3));
        tmp77 = simd_and(tmp72, tmp76);
        cc_range_2984_2998_3 = simd_andc(tmp77, basis_bits.bit_7);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(sequence_e2_a6, carryQ.get_carry_in(13), sequence_e2_a6_adv));
        tmp78 = simd_and(sequence_e2_a6_adv, cc_range_2984_2998_3);
        struct_Pe.cc = simd_or(struct_Pe.cc, tmp78);
        byte_a7 = simd_and(tmp50, tmp61);
        sequence_e2_a7 = simd_and(byte_e2_adv, byte_a7);
        tmp79 = simd_and(tmp32, tmp48);
        tmp80 = simd_and(tmp24, tmp12);
        cc_range_29d9_29fd_3 = simd_or(tmp79, tmp80);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(sequence_e2_a7, carryQ.get_carry_in(14), sequence_e2_a7_adv));
        tmp81 = simd_and(sequence_e2_a7_adv, cc_range_29d9_29fd_3);
        struct_Pe.cc = simd_or(struct_Pe.cc, tmp81);
        tmp82 = simd_andc(tmp4, tmp21);
        byte_b8 = simd_and(tmp24, tmp82);
        sequence_e2_b8 = simd_and(byte_e2_adv, byte_b8);
        tmp83 = simd_not(tmp73);
        tmp84 = simd_or(simd_and(basis_bits.bit_4, tmp83), simd_andc(tmp73, basis_bits.bit_4));
        tmp85 = simd_and(tmp50, tmp84);
        cc_range_2e23_2e29_3 = simd_andc(tmp85, basis_bits.bit_7);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(sequence_e2_b8, carryQ.get_carry_in(15), sequence_e2_b8_adv));
        tmp86 = simd_and(sequence_e2_b8_adv, cc_range_2e23_2e29_3);
        struct_Pe.cc = simd_or(struct_Pe.cc, tmp86);
        tmp87 = simd_andc(tmp27, tmp20);
        byte_e3 = simd_and(tmp19, tmp87);
        byte_80 = simd_andc(tmp39, tmp22);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(byte_e3, carryQ.get_carry_in(16), tmp88));
        sequence_e3_80 = simd_and(tmp88, byte_80);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(byte_e3, carryQ.get_carry_in(17), byte_e3_adv));
        tmp89 = simd_or(tmp48, tmp12);
        tmp90 = simd_or(tmp89, tmp60);
        tmp91 = simd_and(tmp39, tmp90);
        tmp92 = simd_and(tmp32, tmp31);
        tmp93 = simd_or(tmp91, tmp92);
        tmp94 = simd_and(tmp41, tmp5);
        tmp95 = simd_and(tmp32, tmp94);
        tmp96 = simd_or(tmp93, tmp95);
        tmp97 = simd_and(tmp32, tmp61);
        tmp98 = simd_or(tmp96, tmp97);
        tmp99 = simd_and(tmp32, tmp6);
        tmp100 = simd_or(tmp98, tmp99);
        tmp101 = simd_and(tmp32, tmp28);
        tmp102 = simd_or(tmp100, tmp101);
        tmp103 = simd_and(tmp11, basis_bits.bit_6);
        tmp104 = simd_and(tmp32, tmp103);
        cc_range_3009_301e_3 = simd_or(tmp102, tmp104);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(sequence_e3_80, carryQ.get_carry_in(18), sequence_e3_80_adv));
        tmp105 = simd_and(sequence_e3_80_adv, cc_range_3009_301e_3);
        struct_Pe.cc = simd_or(struct_Pe.cc, tmp105);
        byte_ef = simd_and(tmp19, tmp60);
        tmp106 = simd_andc(tmp41, tmp21);
        byte_b4 = simd_and(tmp24, tmp106);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(19), tmp107));
        sequence_ef_b4 = simd_and(tmp107, byte_b4);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(20), byte_ef_adv));
        byte_bf = simd_and(tmp24, tmp60);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(sequence_ef_b4, carryQ.get_carry_in(21), sequence_ef_b4_adv));
        tmp108 = simd_and(sequence_ef_b4_adv, byte_bf);
        struct_Pe.cc = simd_or(struct_Pe.cc, tmp108);
        sequence_ef_b8 = simd_and(byte_ef_adv, byte_b8);
        tmp109 = simd_and(tmp32, tmp82);
        tmp110 = simd_and(tmp24, tmp42);
        tmp111 = simd_or(tmp109, tmp110);
        tmp112 = simd_or(tmp111, byte_b8);
        tmp113 = simd_and(tmp24, tmp34);
        tmp114 = simd_or(tmp112, tmp113);
        tmp115 = simd_or(tmp114, byte_bc);
        cc_range_fe18_fe3e_3 = simd_or(tmp115, tmp45);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(sequence_ef_b8, carryQ.get_carry_in(22), sequence_ef_b8_adv));
        tmp116 = simd_and(sequence_ef_b8_adv, cc_range_fe18_fe3e_3);
        struct_Pe.cc = simd_or(struct_Pe.cc, tmp116);
        byte_b9 = simd_and(tmp24, tmp6);
        sequence_ef_b9 = simd_and(byte_ef_adv, byte_b9);
        tmp117 = simd_andc(tmp22, tmp37);
        tmp118 = simd_andc(tmp117, tmp106);
        tmp119 = simd_andc(tmp118, tmp82);
        tmp120 = simd_andc(tmp39, tmp119);
        tmp121 = simd_or(tmp120, byte_9a);
        tmp122 = simd_or(tmp121, byte_9c);
        tmp123 = simd_and(tmp32, tmp44);
        cc_range_fe40_fe5e_3 = simd_or(tmp122, tmp123);
        carryQ.cq[23] = carryout2carry(pablo_blk_Advance(sequence_ef_b9, carryQ.get_carry_in(23), sequence_ef_b9_adv));
        tmp124 = simd_and(sequence_ef_b9_adv, cc_range_fe40_fe5e_3);
        struct_Pe.cc = simd_or(struct_Pe.cc, tmp124);
        sequence_ef_bc = simd_and(byte_ef_adv, byte_bc);
        tmp125 = simd_and(tmp39, tmp6);
        cc_range_ff09_ff3d_3 = simd_or(tmp125, tmp80);
        carryQ.cq[24] = carryout2carry(pablo_blk_Advance(sequence_ef_bc, carryQ.get_carry_in(24), sequence_ef_bc_adv));
        tmp126 = simd_and(sequence_ef_bc_adv, cc_range_ff09_ff3d_3);
        struct_Pe.cc = simd_or(struct_Pe.cc, tmp126);
        byte_bd = simd_and(tmp24, tmp12);
        sequence_ef_bd = simd_and(byte_ef_adv, byte_bd);
        tmp127 = simd_andc(tmp50, tmp22);
        tmp128 = simd_or(byte_9d, tmp127);
        tmp129 = simd_and(tmp50, tmp87);
        cc_range_ff5d_ff63_3 = simd_or(tmp128, tmp129);
        carryQ.cq[25] = carryout2carry(pablo_blk_Advance(sequence_ef_bd, carryQ.get_carry_in(25), sequence_ef_bd_adv));
        tmp130 = simd_and(sequence_ef_bd_adv, cc_range_ff5d_ff63_3);
        struct_Pe.cc = simd_or(struct_Pe.cc, tmp130);
  }
  CarryArray<26, 0> carryQ;
  };

  struct Pi {
  Pi() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Pi & struct_Pi) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, byte_c2, tmp7, tmp8, tmp9, tmp10;
		BitBlock tmp11, tmp12, byte_ab, byte_c2_adv, tmp13, tmp14, byte_e2, tmp15;
		BitBlock tmp16, tmp17, byte_80, tmp18, sequence_e2_80, byte_e2_adv, tmp19;
		BitBlock tmp20, tmp21, tmp22, tmp23, tmp24, tmp25, tmp26, tmp27, tmp28, tmp29;
		BitBlock tmp30, tmp31, tmp32, tmp33, tmp34, tmp35, tmp36, cc_range_2018_2039_3;
		BitBlock sequence_e2_80_adv, tmp37, byte_b8, sequence_e2_b8, tmp38, tmp39;
		BitBlock tmp40, tmp41, tmp42, tmp43, tmp44, tmp45, tmp46, tmp47;
		BitBlock cc_range_2e02_2e20_3, sequence_e2_b8_adv, tmp48;




        struct_Pi.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_andc(tmp5, tmp4);
        byte_c2 = simd_and(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp11 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp12 = simd_and(tmp10, tmp11);
        byte_ab = simd_and(tmp9, tmp12);
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(byte_c2, carryQ.get_carry_in(0), byte_c2_adv));
        tmp13 = simd_and(byte_c2_adv, byte_ab);
        struct_Pi.cc = simd_or(struct_Pi.cc, tmp13);
        tmp14 = simd_and(tmp1, tmp8);
        byte_e2 = simd_and(tmp14, tmp6);
        tmp15 = simd_andc(tmp7, tmp2);
        tmp16 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp17 = simd_or(tmp4, tmp16);
        byte_80 = simd_andc(tmp15, tmp17);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(1), tmp18));
        sequence_e2_80 = simd_and(tmp18, byte_80);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(2), byte_e2_adv));
        tmp19 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp20 = simd_and(tmp7, tmp19);
        tmp21 = simd_andc(tmp10, tmp16);
        tmp22 = simd_and(tmp20, tmp21);
        tmp23 = simd_and(tmp20, basis_bits.bit_4);
        tmp24 = simd_not(tmp16);
        tmp25 = simd_or(simd_and(basis_bits.bit_5, tmp24), simd_andc(tmp11, basis_bits.bit_5));
        tmp26 = simd_and(tmp23, tmp25);
        tmp27 = simd_or(tmp22, tmp26);
        tmp28 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp29 = simd_and(tmp28, tmp11);
        tmp30 = simd_and(tmp20, tmp29);
        tmp31 = simd_or(tmp27, tmp30);
        tmp32 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp33 = simd_and(tmp7, tmp32);
        tmp34 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp35 = simd_and(tmp10, tmp34);
        tmp36 = simd_and(tmp33, tmp35);
        cc_range_2018_2039_3 = simd_or(tmp31, tmp36);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(sequence_e2_80, carryQ.get_carry_in(3), sequence_e2_80_adv));
        tmp37 = simd_and(sequence_e2_80_adv, cc_range_2018_2039_3);
        struct_Pi.cc = simd_or(struct_Pi.cc, tmp37);
        byte_b8 = simd_and(tmp33, tmp21);
        sequence_e2_b8 = simd_and(byte_e2_adv, byte_b8);
        tmp38 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp39 = simd_andc(tmp38, tmp16);
        tmp40 = simd_or(tmp6, tmp39);
        tmp41 = simd_or(tmp40, tmp35);
        tmp42 = simd_andc(tmp28, tmp16);
        tmp43 = simd_or(tmp41, tmp42);
        tmp44 = simd_and(tmp15, tmp43);
        tmp45 = simd_and(tmp20, tmp42);
        tmp46 = simd_or(tmp44, tmp45);
        tmp47 = simd_andc(tmp9, tmp17);
        cc_range_2e02_2e20_3 = simd_or(tmp46, tmp47);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(sequence_e2_b8, carryQ.get_carry_in(4), sequence_e2_b8_adv));
        tmp48 = simd_and(sequence_e2_b8_adv, cc_range_2e02_2e20_3);
        struct_Pi.cc = simd_or(struct_Pi.cc, tmp48);
        carryQ.CarryQ_Adjust(5);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Pi & struct_Pi, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, byte_c2, tmp7, tmp8, tmp9, tmp10;
		BitBlock tmp11, tmp12, byte_ab, byte_c2_adv, tmp13, tmp14, byte_e2, tmp15;
		BitBlock tmp16, tmp17, byte_80, tmp18, sequence_e2_80, byte_e2_adv, tmp19;
		BitBlock tmp20, tmp21, tmp22, tmp23, tmp24, tmp25, tmp26, tmp27, tmp28, tmp29;
		BitBlock tmp30, tmp31, tmp32, tmp33, tmp34, tmp35, tmp36, cc_range_2018_2039_3;
		BitBlock sequence_e2_80_adv, tmp37, byte_b8, sequence_e2_b8, tmp38, tmp39;
		BitBlock tmp40, tmp41, tmp42, tmp43, tmp44, tmp45, tmp46, tmp47;
		BitBlock cc_range_2e02_2e20_3, sequence_e2_b8_adv, tmp48;




        struct_Pi.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_andc(tmp5, tmp4);
        byte_c2 = simd_and(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp11 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp12 = simd_and(tmp10, tmp11);
        byte_ab = simd_and(tmp9, tmp12);
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(byte_c2, carryQ.get_carry_in(0), byte_c2_adv));
        tmp13 = simd_and(byte_c2_adv, byte_ab);
        struct_Pi.cc = simd_or(struct_Pi.cc, tmp13);
        tmp14 = simd_and(tmp1, tmp8);
        byte_e2 = simd_and(tmp14, tmp6);
        tmp15 = simd_andc(tmp7, tmp2);
        tmp16 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp17 = simd_or(tmp4, tmp16);
        byte_80 = simd_andc(tmp15, tmp17);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(1), tmp18));
        sequence_e2_80 = simd_and(tmp18, byte_80);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(2), byte_e2_adv));
        tmp19 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp20 = simd_and(tmp7, tmp19);
        tmp21 = simd_andc(tmp10, tmp16);
        tmp22 = simd_and(tmp20, tmp21);
        tmp23 = simd_and(tmp20, basis_bits.bit_4);
        tmp24 = simd_not(tmp16);
        tmp25 = simd_or(simd_and(basis_bits.bit_5, tmp24), simd_andc(tmp11, basis_bits.bit_5));
        tmp26 = simd_and(tmp23, tmp25);
        tmp27 = simd_or(tmp22, tmp26);
        tmp28 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp29 = simd_and(tmp28, tmp11);
        tmp30 = simd_and(tmp20, tmp29);
        tmp31 = simd_or(tmp27, tmp30);
        tmp32 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp33 = simd_and(tmp7, tmp32);
        tmp34 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp35 = simd_and(tmp10, tmp34);
        tmp36 = simd_and(tmp33, tmp35);
        cc_range_2018_2039_3 = simd_or(tmp31, tmp36);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(sequence_e2_80, carryQ.get_carry_in(3), sequence_e2_80_adv));
        tmp37 = simd_and(sequence_e2_80_adv, cc_range_2018_2039_3);
        struct_Pi.cc = simd_or(struct_Pi.cc, tmp37);
        byte_b8 = simd_and(tmp33, tmp21);
        sequence_e2_b8 = simd_and(byte_e2_adv, byte_b8);
        tmp38 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp39 = simd_andc(tmp38, tmp16);
        tmp40 = simd_or(tmp6, tmp39);
        tmp41 = simd_or(tmp40, tmp35);
        tmp42 = simd_andc(tmp28, tmp16);
        tmp43 = simd_or(tmp41, tmp42);
        tmp44 = simd_and(tmp15, tmp43);
        tmp45 = simd_and(tmp20, tmp42);
        tmp46 = simd_or(tmp44, tmp45);
        tmp47 = simd_andc(tmp9, tmp17);
        cc_range_2e02_2e20_3 = simd_or(tmp46, tmp47);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(sequence_e2_b8, carryQ.get_carry_in(4), sequence_e2_b8_adv));
        tmp48 = simd_and(sequence_e2_b8_adv, cc_range_2e02_2e20_3);
        struct_Pi.cc = simd_or(struct_Pi.cc, tmp48);
  }
  CarryArray<5, 0> carryQ;
  };

  struct Po {
  Po() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Po & struct_Po) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, tmp7, tmp8, tmp9, tmp10, tmp11;
		BitBlock tmp12, tmp13, tmp14, tmp15, tmp16, tmp17, tmp18, tmp19, tmp20, tmp21;
		BitBlock tmp22, tmp23, tmp24, tmp25, tmp26, tmp27, tmp28, tmp29, tmp30, tmp31;
		BitBlock tmp32, tmp33, tmp34, tmp35, tmp36, tmp37, tmp38, tmp39, tmp40;
		BitBlock cc_range_21_5c_1, tmp41, tmp42, tmp43, byte_c2, tmp44, tmp45, tmp46;
		BitBlock tmp47, tmp48, tmp49, tmp50, tmp51, tmp52, tmp53, tmp54, tmp55;
		BitBlock cc_range_a1_bf_2, byte_c2_adv, tmp56, tmp57, byte_cd, tmp58, byte_be;
		BitBlock byte_cd_adv, tmp59, byte_ce, tmp60, byte_87, byte_ce_adv, tmp61;
		BitBlock tmp62, tmp63, byte_d5, tmp64, tmp65, tmp66, byte_range_9a_9f;
		BitBlock byte_d5_adv, tmp67, tmp68, byte_d6, tmp69, byte_89, byte_d6_adv;
		BitBlock tmp70, byte_d7, tmp71, tmp72, tmp73, tmp74, tmp75, tmp76, tmp77;
		BitBlock tmp78, cc_range_5c0_5f3_2, byte_d7_adv, tmp79, tmp80, byte_d8, tmp81;
		BitBlock tmp82, tmp83, tmp84, tmp85, tmp86, tmp87, tmp88, tmp89, tmp90, tmp91;
		BitBlock cc_range_609_61e_2, byte_d8_adv, tmp92, byte_d9, tmp93, tmp94, tmp95;
		BitBlock byte_range_aa_ad, byte_d9_adv, tmp96, byte_db, tmp97, byte_94;
		BitBlock byte_db_adv, tmp98, byte_dc, tmp99, tmp100, byte_range_80_8d;
		BitBlock byte_dc_adv, tmp101, byte_df, tmp102, tmp103, tmp104;
		BitBlock byte_range_b7_b9, byte_df_adv, tmp105, tmp106, byte_e0, byte_a0;
		BitBlock tmp107, sequence_e0_a0, byte_e0_adv, tmp108, byte_range_b0_be;
		BitBlock sequence_e0_a0_adv, tmp109, byte_a1, sequence_e0_a1, byte_9e;
		BitBlock sequence_e0_a1_adv, tmp110, byte_a5, sequence_e0_a5, tmp111, tmp112;
		BitBlock tmp113, cc_range_964_970_3, sequence_e0_a5_adv, tmp114, byte_ab;
		BitBlock sequence_e0_ab, byte_b0, sequence_e0_ab_adv, tmp115, byte_b7;
		BitBlock sequence_e0_b7, byte_b4, sequence_e0_b7_adv, tmp116, byte_b9;
		BitBlock sequence_e0_b9, tmp117, tmp118, cc_range_e4f_e5a_3;
		BitBlock sequence_e0_b9_adv, tmp119, byte_bc, sequence_e0_bc, tmp120, tmp121;
		BitBlock tmp122, tmp123, tmp124, cc_range_f04_f14_3, sequence_e0_bc_adv;
		BitBlock tmp125, sequence_e0_be, byte_85, sequence_e0_be_adv, tmp126, byte_bf;
		BitBlock sequence_e0_bf, tmp127, tmp128, tmp129, tmp130, tmp131;
		BitBlock cc_range_fd0_fd9_3, sequence_e0_bf_adv, tmp132, byte_e1, byte_81;
		BitBlock tmp133, sequence_e1_81, byte_e1_adv, tmp134, byte_range_8a_8f;
		BitBlock sequence_e1_81_adv, tmp135, byte_83, sequence_e1_83, byte_bb;
		BitBlock sequence_e1_83_adv, tmp136, byte_8d, sequence_e1_8d, tmp137, tmp138;
		BitBlock byte_range_a0_a8, sequence_e1_8d_adv, tmp139, byte_99, sequence_e1_99;
		BitBlock tmp140, byte_range_ad_ae, sequence_e1_99_adv, tmp141, byte_9b;
		BitBlock sequence_e1_9b, tmp142, byte_range_ab_ad, sequence_e1_9b_adv, tmp143;
		BitBlock byte_9c, sequence_e1_9c, tmp144, byte_range_b5_b6, sequence_e1_9c_adv;
		BitBlock tmp145, byte_9f, sequence_e1_9f, tmp146, tmp147, cc_range_17d4_17d8_3;
		BitBlock sequence_e1_9f_adv, tmp148, sequence_e1_a0, tmp149, tmp150, tmp151;
		BitBlock tmp152, tmp153, tmp154, cc_range_1800_1807_3, sequence_e1_a0_adv;
		BitBlock tmp155, sequence_e1_a5, byte_range_84_85, sequence_e1_a5_adv, tmp156;
		BitBlock byte_a8, sequence_e1_a8, byte_range_9e_9f, sequence_e1_a8_adv, tmp157;
		BitBlock byte_aa, sequence_e1_aa, tmp158, tmp159, tmp160, cc_range_1aa0_1aa8_3;
		BitBlock sequence_e1_aa_adv, tmp161, byte_ad, sequence_e1_ad, tmp162, tmp163;
		BitBlock tmp164, tmp165, tmp166, byte_range_9a_a0, sequence_e1_ad_adv, tmp167;
		BitBlock byte_af, sequence_e1_af, byte_range_bc_bf, sequence_e1_af_adv, tmp168;
		BitBlock sequence_e1_b0, tmp169, byte_range_bb_bf, sequence_e1_b0_adv, tmp170;
		BitBlock byte_b1, sequence_e1_b1, byte_range_be_bf, sequence_e1_b1_adv, tmp171;
		BitBlock byte_b3, sequence_e1_b3, tmp172, cc_range_1cc0_1cd3_3;
		BitBlock sequence_e1_b3_adv, tmp173, byte_e2, byte_80, tmp174, sequence_e2_80;
		BitBlock byte_e2_adv, tmp175, tmp176, tmp177, tmp178, tmp179, tmp180, tmp181;
		BitBlock cc_range_2016_203b_3, sequence_e2_80_adv, tmp182, sequence_e2_81;
		BitBlock tmp183, tmp184, tmp185, tmp186, tmp187, tmp188, tmp189, tmp190;
		BitBlock tmp191, tmp192, tmp193, tmp194, cc_range_2041_2055_3;
		BitBlock sequence_e2_81_adv, tmp195, sequence_e2_b3, tmp196, tmp197;
		BitBlock cc_range_2cf9_2cfe_3, sequence_e2_b3_adv, tmp198, byte_b5;
		BitBlock sequence_e2_b5, sequence_e2_b5_adv, tmp199, byte_b8, sequence_e2_b8;
		BitBlock tmp200, tmp201, tmp202, tmp203, tmp204, tmp205, tmp206, tmp207;
		BitBlock tmp208, tmp209, tmp210, tmp211, tmp212, tmp213, tmp214, tmp215;
		BitBlock tmp216, tmp217, cc_range_2e00_2e30_3, sequence_e2_b8_adv, tmp218;
		BitBlock byte_e3, tmp219, sequence_e3_80, byte_e3_adv, tmp220;
		BitBlock cc_range_3001_303d_3, sequence_e3_80_adv, tmp221, sequence_e3_83;
		BitBlock sequence_e3_83_adv, tmp222, byte_ea, byte_93, tmp223, sequence_ea_93;
		BitBlock byte_ea_adv, sequence_ea_93_adv, tmp224, byte_98, sequence_ea_98;
		BitBlock tmp225, byte_range_8d_8f, sequence_ea_98_adv, tmp226, sequence_ea_99;
		BitBlock tmp227, cc_range_a673_a67e_3, sequence_ea_99_adv, tmp228;
		BitBlock sequence_ea_9b, byte_range_b2_b7, sequence_ea_9b_adv, tmp229;
		BitBlock sequence_ea_a1, byte_range_b4_b7, sequence_ea_a1_adv, tmp230, byte_a3;
		BitBlock sequence_ea_a3, tmp231, tmp232, tmp233, cc_range_a8ce_a8f8_3;
		BitBlock sequence_ea_a3_adv, tmp234, byte_a4, sequence_ea_a4, byte_range_ae_af;
		BitBlock sequence_ea_a4_adv, tmp235, sequence_ea_a5, sequence_ea_a5_adv;
		BitBlock tmp236, byte_a7, sequence_ea_a7, tmp237, tmp238, tmp239;
		BitBlock cc_range_a9c1_a9de_3, sequence_ea_a7_adv, tmp240, byte_a9;
		BitBlock sequence_ea_a9, byte_range_9c_9f, sequence_ea_a9_adv, tmp241;
		BitBlock sequence_ea_ab, tmp242, cc_range_aade_aaf0_3, sequence_ea_ab_adv;
		BitBlock tmp243, sequence_ea_af, sequence_ea_af_adv, tmp244, byte_ef, tmp245;
		BitBlock sequence_ef_b8, byte_ef_adv, tmp246, tmp247, cc_range_fe10_fe30_3;
		BitBlock sequence_ef_b8_adv, tmp248, sequence_ef_b9, tmp249, tmp250, tmp251;
		BitBlock tmp252, tmp253, tmp254, tmp255, tmp256, tmp257, tmp258, tmp259;
		BitBlock tmp260, tmp261, tmp262, tmp263, tmp264, tmp265, cc_range_fe45_fe6a_3;
		BitBlock sequence_ef_b9_adv, tmp266, sequence_ef_bc, tmp267, tmp268, tmp269;
		BitBlock tmp270, tmp271, tmp272, tmp273, tmp274, tmp275, tmp276, tmp277;
		BitBlock cc_range_ff01_ff3c_3, sequence_ef_bc_adv, tmp278, byte_bd;
		BitBlock sequence_ef_bd, tmp279, cc_range_ff61_ff64_3, sequence_ef_bd_adv;
		BitBlock tmp280, tmp281, byte_f0, byte_90, tmp282, sequence_f0_90, byte_f0_adv;
		BitBlock byte_84, tmp283, sequence_f0_90_84, sequence_f0_90_adv;
		BitBlock byte_range_80_82, sequence_f0_90_84_adv, tmp284, byte_8e;
		BitBlock sequence_f0_90_8e, sequence_f0_90_8e_adv, tmp285, byte_8f;
		BitBlock sequence_f0_90_8f, sequence_f0_90_8f_adv, tmp286, sequence_f0_90_a1;
		BitBlock byte_97, sequence_f0_90_a1_adv, tmp287, sequence_f0_90_a4, tmp288;
		BitBlock cc_range_1091f_1093f_4, sequence_f0_90_a4_adv, tmp289;
		BitBlock sequence_f0_90_a9, tmp290, cc_range_10a50_10a7f_4;
		BitBlock sequence_f0_90_a9_adv, tmp291, byte_ac, sequence_f0_90_ac;
		BitBlock byte_range_b9_bf, sequence_f0_90_ac_adv, tmp292, byte_91;
		BitBlock sequence_f0_91, tmp293, sequence_f0_91_81, sequence_f0_91_adv, tmp294;
		BitBlock byte_range_87_8d, sequence_f0_91_81_adv, tmp295, byte_82;
		BitBlock sequence_f0_91_82, tmp296, cc_range_110bb_110be_4;
		BitBlock sequence_f0_91_82_adv, tmp297, sequence_f0_91_83, byte_range_80_81;
		BitBlock sequence_f0_91_83_adv, tmp298, sequence_f0_91_85, byte_range_80_83;
		BitBlock sequence_f0_91_85_adv, tmp299, sequence_f0_91_87, tmp300;
		BitBlock byte_range_85_88, sequence_f0_91_87_adv, tmp301, byte_92;
		BitBlock sequence_f0_92, tmp302, sequence_f0_92_91, sequence_f0_92_adv;
		BitBlock byte_range_b0_b3, sequence_f0_92_91_adv, tmp303;




        struct_Po.cc = simd<1>::constant<0>();
        tmp1 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp2 = simd_or(basis_bits.bit_0, basis_bits.bit_1);
        tmp3 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp4 = simd_andc(tmp3, tmp2);
        tmp5 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp6 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp7 = simd_andc(tmp5, tmp6);
        tmp8 = simd_andc(tmp4, tmp7);
        tmp9 = simd_and(tmp1, tmp8);
        tmp10 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp11 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp12 = simd_and(tmp10, tmp11);
        tmp13 = simd_and(tmp4, tmp12);
        tmp14 = simd_or(tmp9, tmp13);
        tmp15 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp16 = simd_andc(tmp15, tmp1);
        tmp17 = simd_and(tmp4, tmp16);
        tmp18 = simd_or(tmp14, tmp17);
        tmp19 = simd_and(tmp15, basis_bits.bit_6);
        tmp20 = simd_and(tmp4, tmp19);
        tmp21 = simd_or(tmp18, tmp20);
        tmp22 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp23 = simd_andc(tmp22, tmp2);
        tmp24 = simd_and(tmp10, basis_bits.bit_6);
        tmp25 = simd_and(tmp23, tmp24);
        tmp26 = simd_or(tmp21, tmp25);
        tmp27 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp28 = simd_or(tmp5, tmp1);
        tmp29 = simd_or(tmp27, tmp28);
        tmp30 = simd_not(tmp29);
        tmp31 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp32 = simd_and(tmp15, tmp31);
        tmp33 = simd_and(tmp22, tmp32);
        tmp34 = simd_or(simd_and(basis_bits.bit_1, tmp30), simd_andc(tmp33, basis_bits.bit_1));
        tmp35 = simd_andc(tmp34, basis_bits.bit_0);
        tmp36 = simd_or(tmp26, tmp35);
        tmp37 = simd_andc(basis_bits.bit_1, basis_bits.bit_0);
        tmp38 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp39 = simd_and(tmp37, tmp38);
        tmp40 = simd_and(tmp39, tmp16);
        cc_range_21_5c_1 = simd_or(tmp36, tmp40);
        struct_Po.cc = simd_or(struct_Po.cc, cc_range_21_5c_1);
        tmp41 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp42 = simd_andc(tmp41, tmp27);
        tmp43 = simd_andc(tmp11, tmp5);
        byte_c2 = simd_and(tmp42, tmp43);
        tmp44 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp45 = simd_and(tmp44, tmp3);
        tmp46 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp47 = simd_andc(tmp46, tmp5);
        tmp48 = simd_and(tmp6, tmp31);
        tmp49 = simd_or(tmp47, tmp48);
        tmp50 = simd_and(tmp45, tmp49);
        tmp51 = simd_and(tmp44, tmp22);
        tmp52 = simd_and(tmp6, basis_bits.bit_6);
        tmp53 = simd_and(tmp51, tmp52);
        tmp54 = simd_or(tmp50, tmp53);
        tmp55 = simd_and(tmp51, tmp32);
        cc_range_a1_bf_2 = simd_or(tmp54, tmp55);
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(byte_c2, carryQ.get_carry_in(0), byte_c2_adv));
        tmp56 = simd_and(byte_c2_adv, cc_range_a1_bf_2);
        struct_Po.cc = simd_or(struct_Po.cc, tmp56);
        tmp57 = simd_and(tmp15, tmp46);
        byte_cd = simd_and(tmp42, tmp57);
        tmp58 = simd_and(tmp15, tmp11);
        byte_be = simd_and(tmp51, tmp58);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(byte_cd, carryQ.get_carry_in(1), byte_cd_adv));
        tmp59 = simd_and(byte_cd_adv, byte_be);
        struct_Po.cc = simd_or(struct_Po.cc, tmp59);
        byte_ce = simd_and(tmp42, tmp58);
        tmp60 = simd_andc(tmp44, tmp27);
        byte_87 = simd_and(tmp60, tmp48);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(byte_ce, carryQ.get_carry_in(2), byte_ce_adv));
        tmp61 = simd_and(byte_ce_adv, byte_87);
        struct_Po.cc = simd_or(struct_Po.cc, tmp61);
        tmp62 = simd_and(tmp41, tmp38);
        tmp63 = simd_and(tmp6, tmp46);
        byte_d5 = simd_and(tmp62, tmp63);
        tmp64 = simd_and(tmp44, tmp38);
        tmp65 = simd_and(tmp64, basis_bits.bit_4);
        tmp66 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
        byte_range_9a_9f = simd_and(tmp65, tmp66);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(byte_d5, carryQ.get_carry_in(3), byte_d5_adv));
        tmp67 = simd_and(byte_d5_adv, byte_range_9a_9f);
        struct_Po.cc = simd_or(struct_Po.cc, tmp67);
        tmp68 = simd_and(tmp6, tmp11);
        byte_d6 = simd_and(tmp62, tmp68);
        tmp69 = simd_and(tmp10, tmp46);
        byte_89 = simd_and(tmp60, tmp69);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(byte_d6, carryQ.get_carry_in(4), byte_d6_adv));
        tmp70 = simd_and(byte_d6_adv, byte_89);
        struct_Po.cc = simd_or(struct_Po.cc, tmp70);
        byte_d7 = simd_and(tmp62, tmp48);
        tmp71 = simd_andc(tmp31, tmp5);
        tmp72 = simd_andc(tmp28, tmp71);
        tmp73 = simd_andc(tmp72, tmp68);
        tmp74 = simd_andc(tmp60, tmp73);
        tmp75 = simd_andc(tmp51, basis_bits.bit_4);
        tmp76 = simd_not(tmp1);
        tmp77 = simd_or(simd_and(basis_bits.bit_5, tmp76), simd_andc(tmp31, basis_bits.bit_5));
        tmp78 = simd_and(tmp75, tmp77);
        cc_range_5c0_5f3_2 = simd_or(tmp74, tmp78);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(byte_d7, carryQ.get_carry_in(5), byte_d7_adv));
        tmp79 = simd_and(byte_d7_adv, cc_range_5c0_5f3_2);
        struct_Po.cc = simd_or(struct_Po.cc, tmp79);
        tmp80 = simd_andc(tmp10, tmp1);
        byte_d8 = simd_and(tmp62, tmp80);
        tmp81 = simd_and(tmp60, tmp10);
        tmp82 = simd_not(basis_bits.bit_7);
        tmp83 = simd_or(simd_and(basis_bits.bit_6, tmp82), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
        tmp84 = simd_and(tmp81, tmp83);
        tmp85 = simd_andc(tmp15, basis_bits.bit_6);
        tmp86 = simd_and(tmp60, tmp85);
        tmp87 = simd_or(tmp84, tmp86);
        tmp88 = simd_and(tmp10, tmp31);
        tmp89 = simd_and(tmp64, tmp88);
        tmp90 = simd_or(tmp87, tmp89);
        tmp91 = simd_and(tmp64, tmp19);
        cc_range_609_61e_2 = simd_or(tmp90, tmp91);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(byte_d8, carryQ.get_carry_in(6), byte_d8_adv));
        tmp92 = simd_and(byte_d8_adv, cc_range_609_61e_2);
        struct_Po.cc = simd_or(struct_Po.cc, tmp92);
        byte_d9 = simd_and(tmp62, tmp69);
        tmp93 = simd_and(tmp45, basis_bits.bit_4);
        tmp94 = simd_not(basis_bits.bit_6);
        tmp95 = simd_or(simd_and(basis_bits.bit_5, tmp94), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        byte_range_aa_ad = simd_and(tmp93, tmp95);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(byte_d9, carryQ.get_carry_in(7), byte_d9_adv));
        tmp96 = simd_and(byte_d9_adv, byte_range_aa_ad);
        struct_Po.cc = simd_or(struct_Po.cc, tmp96);
        byte_db = simd_and(tmp62, tmp88);
        tmp97 = simd_andc(tmp6, tmp1);
        byte_94 = simd_and(tmp64, tmp97);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(byte_db, carryQ.get_carry_in(8), byte_db_adv));
        tmp98 = simd_and(byte_db_adv, byte_94);
        struct_Po.cc = simd_or(struct_Po.cc, tmp98);
        byte_dc = simd_and(tmp62, tmp16);
        tmp99 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp100 = simd_and(basis_bits.bit_4, tmp99);
        byte_range_80_8d = simd_andc(tmp60, tmp100);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(byte_dc, carryQ.get_carry_in(9), byte_dc_adv));
        tmp101 = simd_and(byte_dc_adv, byte_range_80_8d);
        struct_Po.cc = simd_or(struct_Po.cc, tmp101);
        byte_df = simd_and(tmp62, tmp32);
        tmp102 = simd_not(tmp66);
        tmp103 = simd_and(basis_bits.bit_5, tmp31);
        tmp104 = simd_or(simd_and(basis_bits.bit_4, tmp102), simd_andc(tmp103, basis_bits.bit_4));
        byte_range_b7_b9 = simd_and(tmp51, tmp104);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(byte_df, carryQ.get_carry_in(10), byte_df_adv));
        tmp105 = simd_and(byte_df_adv, byte_range_b7_b9);
        struct_Po.cc = simd_or(struct_Po.cc, tmp105);
        tmp106 = simd_and(tmp41, tmp3);
        byte_e0 = simd_andc(tmp106, tmp28);
        byte_a0 = simd_andc(tmp45, tmp28);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(byte_e0, carryQ.get_carry_in(11), tmp107));
        sequence_e0_a0 = simd_and(tmp107, byte_a0);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(byte_e0, carryQ.get_carry_in(12), byte_e0_adv));
        tmp108 = simd_and(basis_bits.bit_4, tmp103);
        byte_range_b0_be = simd_andc(tmp51, tmp108);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(sequence_e0_a0, carryQ.get_carry_in(13), sequence_e0_a0_adv));
        tmp109 = simd_and(sequence_e0_a0_adv, byte_range_b0_be);
        struct_Po.cc = simd_or(struct_Po.cc, tmp109);
        byte_a1 = simd_and(tmp45, tmp47);
        sequence_e0_a1 = simd_and(byte_e0_adv, byte_a1);
        byte_9e = simd_and(tmp64, tmp58);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(sequence_e0_a1, carryQ.get_carry_in(14), sequence_e0_a1_adv));
        tmp110 = simd_and(sequence_e0_a1_adv, byte_9e);
        struct_Po.cc = simd_or(struct_Po.cc, tmp110);
        byte_a5 = simd_and(tmp45, tmp63);
        sequence_e0_a5 = simd_and(byte_e0_adv, byte_a5);
        tmp111 = simd_andc(tmp6, basis_bits.bit_6);
        tmp112 = simd_and(tmp45, tmp111);
        tmp113 = simd_andc(tmp51, tmp28);
        cc_range_964_970_3 = simd_or(tmp112, tmp113);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(sequence_e0_a5, carryQ.get_carry_in(15), sequence_e0_a5_adv));
        tmp114 = simd_and(sequence_e0_a5_adv, cc_range_964_970_3);
        struct_Po.cc = simd_or(struct_Po.cc, tmp114);
        byte_ab = simd_and(tmp45, tmp88);
        sequence_e0_ab = simd_and(byte_e0_adv, byte_ab);
        byte_b0 = simd_andc(tmp51, tmp28);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(sequence_e0_ab, carryQ.get_carry_in(16), sequence_e0_ab_adv));
        tmp115 = simd_and(sequence_e0_ab_adv, byte_b0);
        struct_Po.cc = simd_or(struct_Po.cc, tmp115);
        byte_b7 = simd_and(tmp51, tmp48);
        sequence_e0_b7 = simd_and(byte_e0_adv, byte_b7);
        byte_b4 = simd_and(tmp51, tmp97);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(sequence_e0_b7, carryQ.get_carry_in(17), sequence_e0_b7_adv));
        tmp116 = simd_and(sequence_e0_b7_adv, byte_b4);
        struct_Po.cc = simd_or(struct_Po.cc, tmp116);
        byte_b9 = simd_and(tmp51, tmp69);
        sequence_e0_b9 = simd_and(byte_e0_adv, byte_b9);
        tmp117 = simd_and(tmp60, tmp32);
        tmp118 = simd_and(tmp64, tmp24);
        cc_range_e4f_e5a_3 = simd_or(tmp117, tmp118);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(sequence_e0_b9, carryQ.get_carry_in(18), sequence_e0_b9_adv));
        tmp119 = simd_and(sequence_e0_b9_adv, cc_range_e4f_e5a_3);
        struct_Po.cc = simd_or(struct_Po.cc, tmp119);
        byte_bc = simd_and(tmp51, tmp16);
        sequence_e0_bc = simd_and(byte_e0_adv, byte_bc);
        tmp120 = simd_andc(tmp44, basis_bits.bit_2);
        tmp121 = simd_or(tmp5, tmp31);
        tmp122 = simd_not(tmp121);
        tmp123 = simd_or(simd_and(basis_bits.bit_3, tmp122), simd_andc(tmp5, basis_bits.bit_3));
        tmp124 = simd_and(tmp120, tmp123);
        cc_range_f04_f14_3 = simd_or(tmp124, byte_94);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(sequence_e0_bc, carryQ.get_carry_in(19), sequence_e0_bc_adv));
        tmp125 = simd_and(sequence_e0_bc_adv, cc_range_f04_f14_3);
        struct_Po.cc = simd_or(struct_Po.cc, tmp125);
        sequence_e0_be = simd_and(byte_e0_adv, byte_be);
        byte_85 = simd_and(tmp60, tmp63);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(sequence_e0_be, carryQ.get_carry_in(20), sequence_e0_be_adv));
        tmp126 = simd_and(sequence_e0_be_adv, byte_85);
        struct_Po.cc = simd_or(struct_Po.cc, tmp126);
        byte_bf = simd_and(tmp51, tmp32);
        sequence_e0_bf = simd_and(byte_e0_adv, byte_bf);
        tmp127 = simd_andc(tmp64, basis_bits.bit_4);
        tmp128 = simd_and(basis_bits.bit_5, tmp1);
        tmp129 = simd_andc(tmp127, tmp128);
        tmp130 = simd_and(tmp64, tmp10);
        tmp131 = simd_and(tmp130, tmp83);
        cc_range_fd0_fd9_3 = simd_or(tmp129, tmp131);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(sequence_e0_bf, carryQ.get_carry_in(21), sequence_e0_bf_adv));
        tmp132 = simd_and(sequence_e0_bf_adv, cc_range_fd0_fd9_3);
        struct_Po.cc = simd_or(struct_Po.cc, tmp132);
        byte_e1 = simd_and(tmp106, tmp47);
        byte_81 = simd_and(tmp60, tmp47);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(22), tmp133));
        sequence_e1_81 = simd_and(tmp133, byte_81);
        carryQ.cq[23] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(23), byte_e1_adv));
        tmp134 = simd_and(tmp60, basis_bits.bit_4);
        byte_range_8a_8f = simd_and(tmp134, tmp66);
        carryQ.cq[24] = carryout2carry(pablo_blk_Advance(sequence_e1_81, carryQ.get_carry_in(24), sequence_e1_81_adv));
        tmp135 = simd_and(sequence_e1_81_adv, byte_range_8a_8f);
        struct_Po.cc = simd_or(struct_Po.cc, tmp135);
        byte_83 = simd_and(tmp60, tmp71);
        sequence_e1_83 = simd_and(byte_e1_adv, byte_83);
        byte_bb = simd_and(tmp51, tmp88);
        carryQ.cq[25] = carryout2carry(pablo_blk_Advance(sequence_e1_83, carryQ.get_carry_in(25), sequence_e1_83_adv));
        tmp136 = simd_and(sequence_e1_83_adv, byte_bb);
        struct_Po.cc = simd_or(struct_Po.cc, tmp136);
        byte_8d = simd_and(tmp60, tmp57);
        sequence_e1_8d = simd_and(byte_e1_adv, byte_8d);
        tmp137 = simd_or(basis_bits.bit_5, tmp1);
        tmp138 = simd_and(basis_bits.bit_4, tmp137);
        byte_range_a0_a8 = simd_andc(tmp45, tmp138);
        carryQ.cq[26] = carryout2carry(pablo_blk_Advance(sequence_e1_8d, carryQ.get_carry_in(26), sequence_e1_8d_adv));
        tmp139 = simd_and(sequence_e1_8d_adv, byte_range_a0_a8);
        struct_Po.cc = simd_or(struct_Po.cc, tmp139);
        byte_99 = simd_and(tmp64, tmp69);
        sequence_e1_99 = simd_and(byte_e1_adv, byte_99);
        tmp140 = simd_and(tmp45, tmp15);
        byte_range_ad_ae = simd_and(tmp140, tmp83);
        carryQ.cq[27] = carryout2carry(pablo_blk_Advance(sequence_e1_99, carryQ.get_carry_in(27), sequence_e1_99_adv));
        tmp141 = simd_and(sequence_e1_99_adv, byte_range_ad_ae);
        struct_Po.cc = simd_or(struct_Po.cc, tmp141);
        byte_9b = simd_and(tmp64, tmp88);
        sequence_e1_9b = simd_and(byte_e1_adv, byte_9b);
        tmp142 = simd_or(simd_and(basis_bits.bit_5, tmp94), simd_andc(tmp31, basis_bits.bit_5));
        byte_range_ab_ad = simd_and(tmp93, tmp142);
        carryQ.cq[28] = carryout2carry(pablo_blk_Advance(sequence_e1_9b, carryQ.get_carry_in(28), sequence_e1_9b_adv));
        tmp143 = simd_and(sequence_e1_9b_adv, byte_range_ab_ad);
        struct_Po.cc = simd_or(struct_Po.cc, tmp143);
        byte_9c = simd_and(tmp64, tmp16);
        sequence_e1_9c = simd_and(byte_e1_adv, byte_9c);
        tmp144 = simd_and(tmp51, tmp6);
        byte_range_b5_b6 = simd_and(tmp144, tmp83);
        carryQ.cq[29] = carryout2carry(pablo_blk_Advance(sequence_e1_9c, carryQ.get_carry_in(29), sequence_e1_9c_adv));
        tmp145 = simd_and(sequence_e1_9c_adv, byte_range_b5_b6);
        struct_Po.cc = simd_or(struct_Po.cc, tmp145);
        byte_9f = simd_and(tmp64, tmp32);
        sequence_e1_9f = simd_and(byte_e1_adv, byte_9f);
        tmp146 = simd_or(tmp6, tmp10);
        tmp147 = simd_and(tmp64, tmp146);
        cc_range_17d4_17d8_3 = simd_andc(tmp147, tmp31);
        carryQ.cq[30] = carryout2carry(pablo_blk_Advance(sequence_e1_9f, carryQ.get_carry_in(30), sequence_e1_9f_adv));
        tmp148 = simd_and(sequence_e1_9f_adv, cc_range_17d4_17d8_3);
        struct_Po.cc = simd_or(struct_Po.cc, tmp148);
        sequence_e1_a0 = simd_and(byte_e1_adv, byte_a0);
        tmp149 = simd_andc(tmp60, basis_bits.bit_4);
        tmp150 = simd_andc(tmp149, tmp99);
        tmp151 = simd_or(basis_bits.bit_5, tmp31);
        tmp152 = simd_not(tmp151);
        tmp153 = simd_or(simd_and(basis_bits.bit_4, tmp152), simd_andc(tmp103, basis_bits.bit_4));
        tmp154 = simd_and(tmp60, tmp153);
        cc_range_1800_1807_3 = simd_or(tmp150, tmp154);
        carryQ.cq[31] = carryout2carry(pablo_blk_Advance(sequence_e1_a0, carryQ.get_carry_in(31), sequence_e1_a0_adv));
        tmp155 = simd_and(sequence_e1_a0_adv, cc_range_1800_1807_3);
        struct_Po.cc = simd_or(struct_Po.cc, tmp155);
        sequence_e1_a5 = simd_and(byte_e1_adv, byte_a5);
        byte_range_84_85 = simd_and(tmp60, tmp111);
        carryQ.cq[32] = carryout2carry(pablo_blk_Advance(sequence_e1_a5, carryQ.get_carry_in(32), sequence_e1_a5_adv));
        tmp156 = simd_and(sequence_e1_a5_adv, byte_range_84_85);
        struct_Po.cc = simd_or(struct_Po.cc, tmp156);
        byte_a8 = simd_and(tmp45, tmp80);
        sequence_e1_a8 = simd_and(byte_e1_adv, byte_a8);
        byte_range_9e_9f = simd_and(tmp64, tmp19);
        carryQ.cq[33] = carryout2carry(pablo_blk_Advance(sequence_e1_a8, carryQ.get_carry_in(33), sequence_e1_a8_adv));
        tmp157 = simd_and(sequence_e1_a8_adv, byte_range_9e_9f);
        struct_Po.cc = simd_or(struct_Po.cc, tmp157);
        byte_aa = simd_and(tmp45, tmp12);
        sequence_e1_aa = simd_and(byte_e1_adv, byte_aa);
        tmp158 = simd_andc(tmp45, basis_bits.bit_4);
        tmp159 = simd_andc(tmp158, tmp103);
        tmp160 = simd_andc(tmp93, tmp99);
        cc_range_1aa0_1aa8_3 = simd_or(tmp159, tmp160);
        carryQ.cq[34] = carryout2carry(pablo_blk_Advance(sequence_e1_aa, carryQ.get_carry_in(34), sequence_e1_aa_adv));
        tmp161 = simd_and(sequence_e1_aa_adv, cc_range_1aa0_1aa8_3);
        struct_Po.cc = simd_or(struct_Po.cc, tmp161);
        byte_ad = simd_and(tmp45, tmp57);
        sequence_e1_ad = simd_and(byte_e1_adv, byte_ad);
        tmp162 = simd_or(basis_bits.bit_3, tmp28);
        tmp163 = simd_not(tmp162);
        tmp164 = simd_and(basis_bits.bit_4, tmp66);
        tmp165 = simd_and(basis_bits.bit_3, tmp164);
        tmp166 = simd_or(simd_and(basis_bits.bit_2, tmp163), simd_andc(tmp165, basis_bits.bit_2));
        byte_range_9a_a0 = simd_and(tmp44, tmp166);
        carryQ.cq[35] = carryout2carry(pablo_blk_Advance(sequence_e1_ad, carryQ.get_carry_in(35), sequence_e1_ad_adv));
        tmp167 = simd_and(sequence_e1_ad_adv, byte_range_9a_a0);
        struct_Po.cc = simd_or(struct_Po.cc, tmp167);
        byte_af = simd_and(tmp45, tmp32);
        sequence_e1_af = simd_and(byte_e1_adv, byte_af);
        byte_range_bc_bf = simd_and(tmp51, tmp15);
        carryQ.cq[36] = carryout2carry(pablo_blk_Advance(sequence_e1_af, carryQ.get_carry_in(36), sequence_e1_af_adv));
        tmp168 = simd_and(sequence_e1_af_adv, byte_range_bc_bf);
        struct_Po.cc = simd_or(struct_Po.cc, tmp168);
        sequence_e1_b0 = simd_and(byte_e1_adv, byte_b0);
        tmp169 = simd_and(tmp51, basis_bits.bit_4);
        byte_range_bb_bf = simd_and(tmp169, tmp151);
        carryQ.cq[37] = carryout2carry(pablo_blk_Advance(sequence_e1_b0, carryQ.get_carry_in(37), sequence_e1_b0_adv));
        tmp170 = simd_and(sequence_e1_b0_adv, byte_range_bb_bf);
        struct_Po.cc = simd_or(struct_Po.cc, tmp170);
        byte_b1 = simd_and(tmp51, tmp47);
        sequence_e1_b1 = simd_and(byte_e1_adv, byte_b1);
        byte_range_be_bf = simd_and(tmp51, tmp19);
        carryQ.cq[38] = carryout2carry(pablo_blk_Advance(sequence_e1_b1, carryQ.get_carry_in(38), sequence_e1_b1_adv));
        tmp171 = simd_and(sequence_e1_b1_adv, byte_range_be_bf);
        struct_Po.cc = simd_or(struct_Po.cc, tmp171);
        byte_b3 = simd_and(tmp51, tmp71);
        sequence_e1_b3 = simd_and(byte_e1_adv, byte_b3);
        tmp172 = simd_and(tmp64, tmp71);
        cc_range_1cc0_1cd3_3 = simd_or(tmp149, tmp172);
        carryQ.cq[39] = carryout2carry(pablo_blk_Advance(sequence_e1_b3, carryQ.get_carry_in(39), sequence_e1_b3_adv));
        tmp173 = simd_and(sequence_e1_b3_adv, cc_range_1cc0_1cd3_3);
        struct_Po.cc = simd_or(struct_Po.cc, tmp173);
        byte_e2 = simd_and(tmp106, tmp43);
        byte_80 = simd_andc(tmp60, tmp28);
        carryQ.cq[40] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(40), tmp174));
        sequence_e2_80 = simd_and(tmp174, byte_80);
        carryQ.cq[41] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(41), byte_e2_adv));
        tmp175 = simd_and(tmp64, tmp52);
        tmp176 = simd_or(tmp175, tmp158);
        tmp177 = simd_andc(tmp51, tmp138);
        tmp178 = simd_or(tmp176, tmp177);
        tmp179 = simd_not(tmp31);
        tmp180 = simd_or(simd_and(basis_bits.bit_5, tmp179), simd_andc(tmp31, basis_bits.bit_5));
        tmp181 = simd_and(tmp169, tmp180);
        cc_range_2016_203b_3 = simd_or(tmp178, tmp181);
        carryQ.cq[42] = carryout2carry(pablo_blk_Advance(sequence_e2_80, carryQ.get_carry_in(42), sequence_e2_80_adv));
        tmp182 = simd_and(sequence_e2_80_adv, cc_range_2016_203b_3);
        struct_Po.cc = simd_or(struct_Po.cc, tmp182);
        sequence_e2_81 = simd_and(byte_e2_adv, byte_81);
        tmp183 = simd_andc(tmp60, tmp5);
        tmp184 = simd_and(tmp183, tmp1);
        tmp185 = simd_or(tmp5, basis_bits.bit_6);
        tmp186 = simd_not(tmp185);
        tmp187 = simd_or(basis_bits.bit_4, tmp103);
        tmp188 = simd_or(simd_and(basis_bits.bit_3, tmp186), simd_andc(tmp187, basis_bits.bit_3));
        tmp189 = simd_and(tmp120, tmp188);
        tmp190 = simd_or(tmp184, tmp189);
        tmp191 = simd_or(tmp190, tmp172);
        tmp192 = simd_not(tmp103);
        tmp193 = simd_or(simd_and(basis_bits.bit_4, tmp192), simd_andc(tmp128, basis_bits.bit_4));
        tmp194 = simd_and(tmp64, tmp193);
        cc_range_2041_2055_3 = simd_or(tmp191, tmp194);
        carryQ.cq[43] = carryout2carry(pablo_blk_Advance(sequence_e2_81, carryQ.get_carry_in(43), sequence_e2_81_adv));
        tmp195 = simd_and(sequence_e2_81_adv, cc_range_2041_2055_3);
        struct_Po.cc = simd_or(struct_Po.cc, tmp195);
        sequence_e2_b3 = simd_and(byte_e2_adv, byte_b3);
        tmp196 = simd_or(simd_and(basis_bits.bit_5, tmp76), simd_andc(tmp1, basis_bits.bit_5));
        tmp197 = simd_and(tmp169, tmp196);
        cc_range_2cf9_2cfe_3 = simd_or(tmp197, byte_range_be_bf);
        carryQ.cq[44] = carryout2carry(pablo_blk_Advance(sequence_e2_b3, carryQ.get_carry_in(44), sequence_e2_b3_adv));
        tmp198 = simd_and(sequence_e2_b3_adv, cc_range_2cf9_2cfe_3);
        struct_Po.cc = simd_or(struct_Po.cc, tmp198);
        byte_b5 = simd_and(tmp51, tmp63);
        sequence_e2_b5 = simd_and(byte_e2_adv, byte_b5);
        carryQ.cq[45] = carryout2carry(pablo_blk_Advance(sequence_e2_b5, carryQ.get_carry_in(45), sequence_e2_b5_adv));
        tmp199 = simd_and(sequence_e2_b5_adv, byte_b0);
        struct_Po.cc = simd_or(struct_Po.cc, tmp199);
        byte_b8 = simd_and(tmp51, tmp80);
        sequence_e2_b8 = simd_and(byte_e2_adv, byte_b8);
        tmp200 = simd_not(tmp137);
        tmp201 = simd_or(simd_and(basis_bits.bit_4, tmp200), simd_andc(tmp99, basis_bits.bit_4));
        tmp202 = simd_andc(tmp185, tmp201);
        tmp203 = simd_andc(tmp202, tmp88);
        tmp204 = simd_andc(tmp60, tmp203);
        tmp205 = simd_not(tmp187);
        tmp206 = simd_or(simd_and(basis_bits.bit_3, tmp205), simd_andc(tmp19, basis_bits.bit_3));
        tmp207 = simd_and(tmp120, tmp206);
        tmp208 = simd_or(tmp204, tmp207);
        tmp209 = simd_andc(tmp10, basis_bits.bit_6);
        tmp210 = simd_and(tmp64, tmp209);
        tmp211 = simd_or(tmp208, tmp210);
        tmp212 = simd_or(tmp211, byte_9b);
        tmp213 = simd_or(tmp212, byte_range_9e_9f);
        tmp214 = simd_or(simd_and(basis_bits.bit_5, tmp179), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        tmp215 = simd_and(tmp93, tmp214);
        tmp216 = simd_or(tmp213, tmp215);
        tmp217 = simd_andc(tmp51, tmp164);
        cc_range_2e00_2e30_3 = simd_or(tmp216, tmp217);
        carryQ.cq[46] = carryout2carry(pablo_blk_Advance(sequence_e2_b8, carryQ.get_carry_in(46), sequence_e2_b8_adv));
        tmp218 = simd_and(sequence_e2_b8_adv, cc_range_2e00_2e30_3);
        struct_Po.cc = simd_or(struct_Po.cc, tmp218);
        byte_e3 = simd_and(tmp106, tmp71);
        carryQ.cq[47] = carryout2carry(pablo_blk_Advance(byte_e3, carryQ.get_carry_in(47), tmp219));
        sequence_e3_80 = simd_and(tmp219, byte_80);
        carryQ.cq[48] = carryout2carry(pablo_blk_Advance(byte_e3, carryQ.get_carry_in(48), byte_e3_adv));
        tmp220 = simd_and(tmp51, tmp57);
        cc_range_3001_303d_3 = simd_or(tmp184, tmp220);
        carryQ.cq[49] = carryout2carry(pablo_blk_Advance(sequence_e3_80, carryQ.get_carry_in(49), sequence_e3_80_adv));
        tmp221 = simd_and(sequence_e3_80_adv, cc_range_3001_303d_3);
        struct_Po.cc = simd_or(struct_Po.cc, tmp221);
        sequence_e3_83 = simd_and(byte_e3_adv, byte_83);
        carryQ.cq[50] = carryout2carry(pablo_blk_Advance(sequence_e3_83, carryQ.get_carry_in(50), sequence_e3_83_adv));
        tmp222 = simd_and(sequence_e3_83_adv, byte_bb);
        struct_Po.cc = simd_or(struct_Po.cc, tmp222);
        byte_ea = simd_and(tmp106, tmp12);
        byte_93 = simd_and(tmp64, tmp71);
        carryQ.cq[51] = carryout2carry(pablo_blk_Advance(byte_ea, carryQ.get_carry_in(51), tmp223));
        sequence_ea_93 = simd_and(tmp223, byte_93);
        carryQ.cq[52] = carryout2carry(pablo_blk_Advance(byte_ea, carryQ.get_carry_in(52), byte_ea_adv));
        carryQ.cq[53] = carryout2carry(pablo_blk_Advance(sequence_ea_93, carryQ.get_carry_in(53), sequence_ea_93_adv));
        tmp224 = simd_and(sequence_ea_93_adv, byte_range_be_bf);
        struct_Po.cc = simd_or(struct_Po.cc, tmp224);
        byte_98 = simd_and(tmp64, tmp80);
        sequence_ea_98 = simd_and(byte_ea_adv, byte_98);
        tmp225 = simd_and(tmp60, tmp15);
        byte_range_8d_8f = simd_and(tmp225, tmp1);
        carryQ.cq[54] = carryout2carry(pablo_blk_Advance(sequence_ea_98, carryQ.get_carry_in(54), sequence_ea_98_adv));
        tmp226 = simd_and(sequence_ea_98_adv, byte_range_8d_8f);
        struct_Po.cc = simd_or(struct_Po.cc, tmp226);
        sequence_ea_99 = simd_and(byte_ea_adv, byte_99);
        tmp227 = simd_or(tmp71, tmp58);
        cc_range_a673_a67e_3 = simd_and(tmp51, tmp227);
        carryQ.cq[55] = carryout2carry(pablo_blk_Advance(sequence_ea_99, carryQ.get_carry_in(55), sequence_ea_99_adv));
        tmp228 = simd_and(sequence_ea_99_adv, cc_range_a673_a67e_3);
        struct_Po.cc = simd_or(struct_Po.cc, tmp228);
        sequence_ea_9b = simd_and(byte_ea_adv, byte_9b);
        byte_range_b2_b7 = simd_and(tmp75, tmp66);
        carryQ.cq[56] = carryout2carry(pablo_blk_Advance(sequence_ea_9b, carryQ.get_carry_in(56), sequence_ea_9b_adv));
        tmp229 = simd_and(sequence_ea_9b_adv, byte_range_b2_b7);
        struct_Po.cc = simd_or(struct_Po.cc, tmp229);
        sequence_ea_a1 = simd_and(byte_ea_adv, byte_a1);
        byte_range_b4_b7 = simd_and(tmp51, tmp6);
        carryQ.cq[57] = carryout2carry(pablo_blk_Advance(sequence_ea_a1, carryQ.get_carry_in(57), sequence_ea_a1_adv));
        tmp230 = simd_and(sequence_ea_a1_adv, byte_range_b4_b7);
        struct_Po.cc = simd_or(struct_Po.cc, tmp230);
        byte_a3 = simd_and(tmp45, tmp71);
        sequence_ea_a3 = simd_and(byte_ea_adv, byte_a3);
        tmp231 = simd_and(tmp60, tmp19);
        tmp232 = simd_and(tmp51, tmp10);
        tmp233 = simd_andc(tmp232, tmp31);
        cc_range_a8ce_a8f8_3 = simd_or(tmp231, tmp233);
        carryQ.cq[58] = carryout2carry(pablo_blk_Advance(sequence_ea_a3, carryQ.get_carry_in(58), sequence_ea_a3_adv));
        tmp234 = simd_and(sequence_ea_a3_adv, cc_range_a8ce_a8f8_3);
        struct_Po.cc = simd_or(struct_Po.cc, tmp234);
        byte_a4 = simd_and(tmp45, tmp97);
        sequence_ea_a4 = simd_and(byte_ea_adv, byte_a4);
        byte_range_ae_af = simd_and(tmp45, tmp19);
        carryQ.cq[59] = carryout2carry(pablo_blk_Advance(sequence_ea_a4, carryQ.get_carry_in(59), sequence_ea_a4_adv));
        tmp235 = simd_and(sequence_ea_a4_adv, byte_range_ae_af);
        struct_Po.cc = simd_or(struct_Po.cc, tmp235);
        sequence_ea_a5 = simd_and(byte_ea_adv, byte_a5);
        carryQ.cq[60] = carryout2carry(pablo_blk_Advance(sequence_ea_a5, carryQ.get_carry_in(60), sequence_ea_a5_adv));
        tmp236 = simd_and(sequence_ea_a5_adv, byte_9f);
        struct_Po.cc = simd_or(struct_Po.cc, tmp236);
        byte_a7 = simd_and(tmp45, tmp48);
        sequence_ea_a7 = simd_and(byte_ea_adv, byte_a7);
        tmp237 = simd_not(tmp99);
        tmp238 = simd_or(simd_and(basis_bits.bit_4, tmp237), simd_andc(tmp137, basis_bits.bit_4));
        tmp239 = simd_and(tmp60, tmp238);
        cc_range_a9c1_a9de_3 = simd_or(tmp239, byte_range_9e_9f);
        carryQ.cq[61] = carryout2carry(pablo_blk_Advance(sequence_ea_a7, carryQ.get_carry_in(61), sequence_ea_a7_adv));
        tmp240 = simd_and(sequence_ea_a7_adv, cc_range_a9c1_a9de_3);
        struct_Po.cc = simd_or(struct_Po.cc, tmp240);
        byte_a9 = simd_and(tmp45, tmp69);
        sequence_ea_a9 = simd_and(byte_ea_adv, byte_a9);
        byte_range_9c_9f = simd_and(tmp64, tmp15);
        carryQ.cq[62] = carryout2carry(pablo_blk_Advance(sequence_ea_a9, carryQ.get_carry_in(62), sequence_ea_a9_adv));
        tmp241 = simd_and(sequence_ea_a9_adv, byte_range_9c_9f);
        struct_Po.cc = simd_or(struct_Po.cc, tmp241);
        sequence_ea_ab = simd_and(byte_ea_adv, byte_ab);
        tmp242 = simd_andc(tmp51, tmp185);
        cc_range_aade_aaf0_3 = simd_or(byte_range_9e_9f, tmp242);
        carryQ.cq[63] = carryout2carry(pablo_blk_Advance(sequence_ea_ab, carryQ.get_carry_in(63), sequence_ea_ab_adv));
        tmp243 = simd_and(sequence_ea_ab_adv, cc_range_aade_aaf0_3);
        struct_Po.cc = simd_or(struct_Po.cc, tmp243);
        sequence_ea_af = simd_and(byte_ea_adv, byte_af);
        carryQ.cq[64] = carryout2carry(pablo_blk_Advance(sequence_ea_af, carryQ.get_carry_in(64), sequence_ea_af_adv));
        tmp244 = simd_and(sequence_ea_af_adv, byte_ab);
        struct_Po.cc = simd_or(struct_Po.cc, tmp244);
        byte_ef = simd_and(tmp106, tmp32);
        carryQ.cq[65] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(65), tmp245));
        sequence_ef_b8 = simd_and(tmp245, byte_b8);
        carryQ.cq[66] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(66), byte_ef_adv));
        tmp246 = simd_andc(tmp127, tmp103);
        tmp247 = simd_or(tmp246, byte_99);
        cc_range_fe10_fe30_3 = simd_or(tmp247, byte_b0);
        carryQ.cq[67] = carryout2carry(pablo_blk_Advance(sequence_ef_b8, carryQ.get_carry_in(67), sequence_ef_b8_adv));
        tmp248 = simd_and(sequence_ef_b8_adv, cc_range_fe10_fe30_3);
        struct_Po.cc = simd_or(struct_Po.cc, tmp248);
        sequence_ef_b9 = simd_and(byte_ef_adv, byte_b9);
        tmp249 = simd_and(tmp60, tmp6);
        tmp250 = simd_and(tmp249, tmp83);
        tmp251 = simd_and(tmp134, tmp196);
        tmp252 = simd_or(tmp250, tmp251);
        tmp253 = simd_andc(tmp64, tmp5);
        tmp254 = simd_andc(tmp253, tmp31);
        tmp255 = simd_or(tmp252, tmp254);
        tmp256 = simd_and(tmp64, tmp6);
        tmp257 = simd_or(tmp255, tmp256);
        tmp258 = simd_or(basis_bits.bit_3, tmp185);
        tmp259 = simd_not(tmp258);
        tmp260 = simd_and(basis_bits.bit_3, tmp32);
        tmp261 = simd_or(simd_and(basis_bits.bit_2, tmp259), simd_andc(tmp260, basis_bits.bit_2));
        tmp262 = simd_and(tmp44, tmp261);
        tmp263 = simd_or(tmp257, tmp262);
        tmp264 = simd_or(tmp263, byte_a8);
        tmp265 = simd_and(tmp45, tmp24);
        cc_range_fe45_fe6a_3 = simd_or(tmp264, tmp265);
        carryQ.cq[68] = carryout2carry(pablo_blk_Advance(sequence_ef_b9, carryQ.get_carry_in(68), sequence_ef_b9_adv));
        tmp266 = simd_and(sequence_ef_b9_adv, cc_range_fe45_fe6a_3);
        struct_Po.cc = simd_or(struct_Po.cc, tmp266);
        sequence_ef_bc = simd_and(byte_ef_adv, byte_bc);
        tmp267 = simd_andc(tmp60, tmp7);
        tmp268 = simd_and(tmp1, tmp267);
        tmp269 = simd_and(tmp60, tmp12);
        tmp270 = simd_or(tmp268, tmp269);
        tmp271 = simd_and(tmp60, tmp16);
        tmp272 = simd_or(tmp270, tmp271);
        tmp273 = simd_or(tmp272, tmp231);
        tmp274 = simd_or(tmp273, tmp118);
        tmp275 = simd_or(simd_and(basis_bits.bit_2, tmp163), simd_andc(tmp260, basis_bits.bit_2));
        tmp276 = simd_and(tmp44, tmp275);
        tmp277 = simd_or(tmp274, tmp276);
        cc_range_ff01_ff3c_3 = simd_or(tmp277, byte_bc);
        carryQ.cq[69] = carryout2carry(pablo_blk_Advance(sequence_ef_bc, carryQ.get_carry_in(69), sequence_ef_bc_adv));
        tmp278 = simd_and(sequence_ef_bc_adv, cc_range_ff01_ff3c_3);
        struct_Po.cc = simd_or(struct_Po.cc, tmp278);
        byte_bd = simd_and(tmp51, tmp57);
        sequence_ef_bd = simd_and(byte_ef_adv, byte_bd);
        tmp279 = simd_or(tmp47, tmp111);
        cc_range_ff61_ff64_3 = simd_and(tmp45, tmp279);
        carryQ.cq[70] = carryout2carry(pablo_blk_Advance(sequence_ef_bd, carryQ.get_carry_in(70), sequence_ef_bd_adv));
        tmp280 = simd_and(sequence_ef_bd_adv, cc_range_ff61_ff64_3);
        struct_Po.cc = simd_or(struct_Po.cc, tmp280);
        tmp281 = simd_and(tmp41, tmp22);
        byte_f0 = simd_andc(tmp281, tmp28);
        byte_90 = simd_andc(tmp64, tmp28);
        carryQ.cq[71] = carryout2carry(pablo_blk_Advance(byte_f0, carryQ.get_carry_in(71), tmp282));
        sequence_f0_90 = simd_and(tmp282, byte_90);
        carryQ.cq[72] = carryout2carry(pablo_blk_Advance(byte_f0, carryQ.get_carry_in(72), byte_f0_adv));
        byte_84 = simd_and(tmp60, tmp97);
        carryQ.cq[73] = carryout2carry(pablo_blk_Advance(sequence_f0_90, carryQ.get_carry_in(73), tmp283));
        sequence_f0_90_84 = simd_and(tmp283, byte_84);
        carryQ.cq[74] = carryout2carry(pablo_blk_Advance(sequence_f0_90, carryQ.get_carry_in(74), sequence_f0_90_adv));
        byte_range_80_82 = simd_andc(tmp183, tmp31);
        carryQ.cq[75] = carryout2carry(pablo_blk_Advance(sequence_f0_90_84, carryQ.get_carry_in(75), sequence_f0_90_84_adv));
        tmp284 = simd_and(sequence_f0_90_84_adv, byte_range_80_82);
        struct_Po.cc = simd_or(struct_Po.cc, tmp284);
        byte_8e = simd_and(tmp60, tmp58);
        sequence_f0_90_8e = simd_and(sequence_f0_90_adv, byte_8e);
        carryQ.cq[76] = carryout2carry(pablo_blk_Advance(sequence_f0_90_8e, carryQ.get_carry_in(76), sequence_f0_90_8e_adv));
        tmp285 = simd_and(sequence_f0_90_8e_adv, byte_9f);
        struct_Po.cc = simd_or(struct_Po.cc, tmp285);
        byte_8f = simd_and(tmp60, tmp32);
        sequence_f0_90_8f = simd_and(sequence_f0_90_adv, byte_8f);
        carryQ.cq[77] = carryout2carry(pablo_blk_Advance(sequence_f0_90_8f, carryQ.get_carry_in(77), sequence_f0_90_8f_adv));
        tmp286 = simd_and(sequence_f0_90_8f_adv, byte_90);
        struct_Po.cc = simd_or(struct_Po.cc, tmp286);
        sequence_f0_90_a1 = simd_and(sequence_f0_90_adv, byte_a1);
        byte_97 = simd_and(tmp64, tmp48);
        carryQ.cq[78] = carryout2carry(pablo_blk_Advance(sequence_f0_90_a1, carryQ.get_carry_in(78), sequence_f0_90_a1_adv));
        tmp287 = simd_and(sequence_f0_90_a1_adv, byte_97);
        struct_Po.cc = simd_or(struct_Po.cc, tmp287);
        sequence_f0_90_a4 = simd_and(sequence_f0_90_adv, byte_a4);
        tmp288 = simd_and(tmp44, basis_bits.bit_3);
        cc_range_1091f_1093f_4 = simd_and(tmp32, tmp288);
        carryQ.cq[79] = carryout2carry(pablo_blk_Advance(sequence_f0_90_a4, carryQ.get_carry_in(79), sequence_f0_90_a4_adv));
        tmp289 = simd_and(sequence_f0_90_a4_adv, cc_range_1091f_1093f_4);
        struct_Po.cc = simd_or(struct_Po.cc, tmp289);
        sequence_f0_90_a9 = simd_and(sequence_f0_90_adv, byte_a9);
        tmp290 = simd_andc(tmp64, tmp138);
        cc_range_10a50_10a7f_4 = simd_or(tmp290, byte_bf);
        carryQ.cq[80] = carryout2carry(pablo_blk_Advance(sequence_f0_90_a9, carryQ.get_carry_in(80), sequence_f0_90_a9_adv));
        tmp291 = simd_and(sequence_f0_90_a9_adv, cc_range_10a50_10a7f_4);
        struct_Po.cc = simd_or(struct_Po.cc, tmp291);
        byte_ac = simd_and(tmp45, tmp16);
        sequence_f0_90_ac = simd_and(sequence_f0_90_adv, byte_ac);
        byte_range_b9_bf = simd_and(tmp169, tmp137);
        carryQ.cq[81] = carryout2carry(pablo_blk_Advance(sequence_f0_90_ac, carryQ.get_carry_in(81), sequence_f0_90_ac_adv));
        tmp292 = simd_and(sequence_f0_90_ac_adv, byte_range_b9_bf);
        struct_Po.cc = simd_or(struct_Po.cc, tmp292);
        byte_91 = simd_and(tmp64, tmp47);
        sequence_f0_91 = simd_and(byte_f0_adv, byte_91);
        carryQ.cq[82] = carryout2carry(pablo_blk_Advance(sequence_f0_91, carryQ.get_carry_in(82), tmp293));
        sequence_f0_91_81 = simd_and(tmp293, byte_81);
        carryQ.cq[83] = carryout2carry(pablo_blk_Advance(sequence_f0_91, carryQ.get_carry_in(83), sequence_f0_91_adv));
        tmp294 = simd_or(simd_and(basis_bits.bit_4, tmp237), simd_andc(tmp103, basis_bits.bit_4));
        byte_range_87_8d = simd_and(tmp60, tmp294);
        carryQ.cq[84] = carryout2carry(pablo_blk_Advance(sequence_f0_91_81, carryQ.get_carry_in(84), sequence_f0_91_81_adv));
        tmp295 = simd_and(sequence_f0_91_81_adv, byte_range_87_8d);
        struct_Po.cc = simd_or(struct_Po.cc, tmp295);
        byte_82 = simd_and(tmp60, tmp43);
        sequence_f0_91_82 = simd_and(sequence_f0_91_adv, byte_82);
        tmp296 = simd_and(tmp169, tmp77);
        cc_range_110bb_110be_4 = simd_or(tmp296, byte_range_be_bf);
        carryQ.cq[85] = carryout2carry(pablo_blk_Advance(sequence_f0_91_82, carryQ.get_carry_in(85), sequence_f0_91_82_adv));
        tmp297 = simd_and(sequence_f0_91_82_adv, cc_range_110bb_110be_4);
        struct_Po.cc = simd_or(struct_Po.cc, tmp297);
        sequence_f0_91_83 = simd_and(sequence_f0_91_adv, byte_83);
        byte_range_80_81 = simd_andc(tmp60, tmp185);
        carryQ.cq[86] = carryout2carry(pablo_blk_Advance(sequence_f0_91_83, carryQ.get_carry_in(86), sequence_f0_91_83_adv));
        tmp298 = simd_and(sequence_f0_91_83_adv, byte_range_80_81);
        struct_Po.cc = simd_or(struct_Po.cc, tmp298);
        sequence_f0_91_85 = simd_and(sequence_f0_91_adv, byte_85);
        byte_range_80_83 = simd_andc(tmp60, tmp5);
        carryQ.cq[87] = carryout2carry(pablo_blk_Advance(sequence_f0_91_85, carryQ.get_carry_in(87), sequence_f0_91_85_adv));
        tmp299 = simd_and(sequence_f0_91_85_adv, byte_range_80_83);
        struct_Po.cc = simd_or(struct_Po.cc, tmp299);
        sequence_f0_91_87 = simd_and(sequence_f0_91_adv, byte_87);
        tmp300 = simd_or(simd_and(basis_bits.bit_4, tmp200), simd_andc(tmp128, basis_bits.bit_4));
        byte_range_85_88 = simd_and(tmp60, tmp300);
        carryQ.cq[88] = carryout2carry(pablo_blk_Advance(sequence_f0_91_87, carryQ.get_carry_in(88), sequence_f0_91_87_adv));
        tmp301 = simd_and(sequence_f0_91_87_adv, byte_range_85_88);
        struct_Po.cc = simd_or(struct_Po.cc, tmp301);
        byte_92 = simd_and(tmp64, tmp43);
        sequence_f0_92 = simd_and(byte_f0_adv, byte_92);
        carryQ.cq[89] = carryout2carry(pablo_blk_Advance(sequence_f0_92, carryQ.get_carry_in(89), tmp302));
        sequence_f0_92_91 = simd_and(tmp302, byte_91);
        carryQ.cq[90] = carryout2carry(pablo_blk_Advance(sequence_f0_92, carryQ.get_carry_in(90), sequence_f0_92_adv));
        byte_range_b0_b3 = simd_andc(tmp51, tmp5);
        carryQ.cq[91] = carryout2carry(pablo_blk_Advance(sequence_f0_92_91, carryQ.get_carry_in(91), sequence_f0_92_91_adv));
        tmp303 = simd_and(sequence_f0_92_91_adv, byte_range_b0_b3);
        struct_Po.cc = simd_or(struct_Po.cc, tmp303);
        carryQ.CarryQ_Adjust(92);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Po & struct_Po, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, tmp7, tmp8, tmp9, tmp10, tmp11;
		BitBlock tmp12, tmp13, tmp14, tmp15, tmp16, tmp17, tmp18, tmp19, tmp20, tmp21;
		BitBlock tmp22, tmp23, tmp24, tmp25, tmp26, tmp27, tmp28, tmp29, tmp30, tmp31;
		BitBlock tmp32, tmp33, tmp34, tmp35, tmp36, tmp37, tmp38, tmp39, tmp40;
		BitBlock cc_range_21_5c_1, tmp41, tmp42, tmp43, byte_c2, tmp44, tmp45, tmp46;
		BitBlock tmp47, tmp48, tmp49, tmp50, tmp51, tmp52, tmp53, tmp54, tmp55;
		BitBlock cc_range_a1_bf_2, byte_c2_adv, tmp56, tmp57, byte_cd, tmp58, byte_be;
		BitBlock byte_cd_adv, tmp59, byte_ce, tmp60, byte_87, byte_ce_adv, tmp61;
		BitBlock tmp62, tmp63, byte_d5, tmp64, tmp65, tmp66, byte_range_9a_9f;
		BitBlock byte_d5_adv, tmp67, tmp68, byte_d6, tmp69, byte_89, byte_d6_adv;
		BitBlock tmp70, byte_d7, tmp71, tmp72, tmp73, tmp74, tmp75, tmp76, tmp77;
		BitBlock tmp78, cc_range_5c0_5f3_2, byte_d7_adv, tmp79, tmp80, byte_d8, tmp81;
		BitBlock tmp82, tmp83, tmp84, tmp85, tmp86, tmp87, tmp88, tmp89, tmp90, tmp91;
		BitBlock cc_range_609_61e_2, byte_d8_adv, tmp92, byte_d9, tmp93, tmp94, tmp95;
		BitBlock byte_range_aa_ad, byte_d9_adv, tmp96, byte_db, tmp97, byte_94;
		BitBlock byte_db_adv, tmp98, byte_dc, tmp99, tmp100, byte_range_80_8d;
		BitBlock byte_dc_adv, tmp101, byte_df, tmp102, tmp103, tmp104;
		BitBlock byte_range_b7_b9, byte_df_adv, tmp105, tmp106, byte_e0, byte_a0;
		BitBlock tmp107, sequence_e0_a0, byte_e0_adv, tmp108, byte_range_b0_be;
		BitBlock sequence_e0_a0_adv, tmp109, byte_a1, sequence_e0_a1, byte_9e;
		BitBlock sequence_e0_a1_adv, tmp110, byte_a5, sequence_e0_a5, tmp111, tmp112;
		BitBlock tmp113, cc_range_964_970_3, sequence_e0_a5_adv, tmp114, byte_ab;
		BitBlock sequence_e0_ab, byte_b0, sequence_e0_ab_adv, tmp115, byte_b7;
		BitBlock sequence_e0_b7, byte_b4, sequence_e0_b7_adv, tmp116, byte_b9;
		BitBlock sequence_e0_b9, tmp117, tmp118, cc_range_e4f_e5a_3;
		BitBlock sequence_e0_b9_adv, tmp119, byte_bc, sequence_e0_bc, tmp120, tmp121;
		BitBlock tmp122, tmp123, tmp124, cc_range_f04_f14_3, sequence_e0_bc_adv;
		BitBlock tmp125, sequence_e0_be, byte_85, sequence_e0_be_adv, tmp126, byte_bf;
		BitBlock sequence_e0_bf, tmp127, tmp128, tmp129, tmp130, tmp131;
		BitBlock cc_range_fd0_fd9_3, sequence_e0_bf_adv, tmp132, byte_e1, byte_81;
		BitBlock tmp133, sequence_e1_81, byte_e1_adv, tmp134, byte_range_8a_8f;
		BitBlock sequence_e1_81_adv, tmp135, byte_83, sequence_e1_83, byte_bb;
		BitBlock sequence_e1_83_adv, tmp136, byte_8d, sequence_e1_8d, tmp137, tmp138;
		BitBlock byte_range_a0_a8, sequence_e1_8d_adv, tmp139, byte_99, sequence_e1_99;
		BitBlock tmp140, byte_range_ad_ae, sequence_e1_99_adv, tmp141, byte_9b;
		BitBlock sequence_e1_9b, tmp142, byte_range_ab_ad, sequence_e1_9b_adv, tmp143;
		BitBlock byte_9c, sequence_e1_9c, tmp144, byte_range_b5_b6, sequence_e1_9c_adv;
		BitBlock tmp145, byte_9f, sequence_e1_9f, tmp146, tmp147, cc_range_17d4_17d8_3;
		BitBlock sequence_e1_9f_adv, tmp148, sequence_e1_a0, tmp149, tmp150, tmp151;
		BitBlock tmp152, tmp153, tmp154, cc_range_1800_1807_3, sequence_e1_a0_adv;
		BitBlock tmp155, sequence_e1_a5, byte_range_84_85, sequence_e1_a5_adv, tmp156;
		BitBlock byte_a8, sequence_e1_a8, byte_range_9e_9f, sequence_e1_a8_adv, tmp157;
		BitBlock byte_aa, sequence_e1_aa, tmp158, tmp159, tmp160, cc_range_1aa0_1aa8_3;
		BitBlock sequence_e1_aa_adv, tmp161, byte_ad, sequence_e1_ad, tmp162, tmp163;
		BitBlock tmp164, tmp165, tmp166, byte_range_9a_a0, sequence_e1_ad_adv, tmp167;
		BitBlock byte_af, sequence_e1_af, byte_range_bc_bf, sequence_e1_af_adv, tmp168;
		BitBlock sequence_e1_b0, tmp169, byte_range_bb_bf, sequence_e1_b0_adv, tmp170;
		BitBlock byte_b1, sequence_e1_b1, byte_range_be_bf, sequence_e1_b1_adv, tmp171;
		BitBlock byte_b3, sequence_e1_b3, tmp172, cc_range_1cc0_1cd3_3;
		BitBlock sequence_e1_b3_adv, tmp173, byte_e2, byte_80, tmp174, sequence_e2_80;
		BitBlock byte_e2_adv, tmp175, tmp176, tmp177, tmp178, tmp179, tmp180, tmp181;
		BitBlock cc_range_2016_203b_3, sequence_e2_80_adv, tmp182, sequence_e2_81;
		BitBlock tmp183, tmp184, tmp185, tmp186, tmp187, tmp188, tmp189, tmp190;
		BitBlock tmp191, tmp192, tmp193, tmp194, cc_range_2041_2055_3;
		BitBlock sequence_e2_81_adv, tmp195, sequence_e2_b3, tmp196, tmp197;
		BitBlock cc_range_2cf9_2cfe_3, sequence_e2_b3_adv, tmp198, byte_b5;
		BitBlock sequence_e2_b5, sequence_e2_b5_adv, tmp199, byte_b8, sequence_e2_b8;
		BitBlock tmp200, tmp201, tmp202, tmp203, tmp204, tmp205, tmp206, tmp207;
		BitBlock tmp208, tmp209, tmp210, tmp211, tmp212, tmp213, tmp214, tmp215;
		BitBlock tmp216, tmp217, cc_range_2e00_2e30_3, sequence_e2_b8_adv, tmp218;
		BitBlock byte_e3, tmp219, sequence_e3_80, byte_e3_adv, tmp220;
		BitBlock cc_range_3001_303d_3, sequence_e3_80_adv, tmp221, sequence_e3_83;
		BitBlock sequence_e3_83_adv, tmp222, byte_ea, byte_93, tmp223, sequence_ea_93;
		BitBlock byte_ea_adv, sequence_ea_93_adv, tmp224, byte_98, sequence_ea_98;
		BitBlock tmp225, byte_range_8d_8f, sequence_ea_98_adv, tmp226, sequence_ea_99;
		BitBlock tmp227, cc_range_a673_a67e_3, sequence_ea_99_adv, tmp228;
		BitBlock sequence_ea_9b, byte_range_b2_b7, sequence_ea_9b_adv, tmp229;
		BitBlock sequence_ea_a1, byte_range_b4_b7, sequence_ea_a1_adv, tmp230, byte_a3;
		BitBlock sequence_ea_a3, tmp231, tmp232, tmp233, cc_range_a8ce_a8f8_3;
		BitBlock sequence_ea_a3_adv, tmp234, byte_a4, sequence_ea_a4, byte_range_ae_af;
		BitBlock sequence_ea_a4_adv, tmp235, sequence_ea_a5, sequence_ea_a5_adv;
		BitBlock tmp236, byte_a7, sequence_ea_a7, tmp237, tmp238, tmp239;
		BitBlock cc_range_a9c1_a9de_3, sequence_ea_a7_adv, tmp240, byte_a9;
		BitBlock sequence_ea_a9, byte_range_9c_9f, sequence_ea_a9_adv, tmp241;
		BitBlock sequence_ea_ab, tmp242, cc_range_aade_aaf0_3, sequence_ea_ab_adv;
		BitBlock tmp243, sequence_ea_af, sequence_ea_af_adv, tmp244, byte_ef, tmp245;
		BitBlock sequence_ef_b8, byte_ef_adv, tmp246, tmp247, cc_range_fe10_fe30_3;
		BitBlock sequence_ef_b8_adv, tmp248, sequence_ef_b9, tmp249, tmp250, tmp251;
		BitBlock tmp252, tmp253, tmp254, tmp255, tmp256, tmp257, tmp258, tmp259;
		BitBlock tmp260, tmp261, tmp262, tmp263, tmp264, tmp265, cc_range_fe45_fe6a_3;
		BitBlock sequence_ef_b9_adv, tmp266, sequence_ef_bc, tmp267, tmp268, tmp269;
		BitBlock tmp270, tmp271, tmp272, tmp273, tmp274, tmp275, tmp276, tmp277;
		BitBlock cc_range_ff01_ff3c_3, sequence_ef_bc_adv, tmp278, byte_bd;
		BitBlock sequence_ef_bd, tmp279, cc_range_ff61_ff64_3, sequence_ef_bd_adv;
		BitBlock tmp280, tmp281, byte_f0, byte_90, tmp282, sequence_f0_90, byte_f0_adv;
		BitBlock byte_84, tmp283, sequence_f0_90_84, sequence_f0_90_adv;
		BitBlock byte_range_80_82, sequence_f0_90_84_adv, tmp284, byte_8e;
		BitBlock sequence_f0_90_8e, sequence_f0_90_8e_adv, tmp285, byte_8f;
		BitBlock sequence_f0_90_8f, sequence_f0_90_8f_adv, tmp286, sequence_f0_90_a1;
		BitBlock byte_97, sequence_f0_90_a1_adv, tmp287, sequence_f0_90_a4, tmp288;
		BitBlock cc_range_1091f_1093f_4, sequence_f0_90_a4_adv, tmp289;
		BitBlock sequence_f0_90_a9, tmp290, cc_range_10a50_10a7f_4;
		BitBlock sequence_f0_90_a9_adv, tmp291, byte_ac, sequence_f0_90_ac;
		BitBlock byte_range_b9_bf, sequence_f0_90_ac_adv, tmp292, byte_91;
		BitBlock sequence_f0_91, tmp293, sequence_f0_91_81, sequence_f0_91_adv, tmp294;
		BitBlock byte_range_87_8d, sequence_f0_91_81_adv, tmp295, byte_82;
		BitBlock sequence_f0_91_82, tmp296, cc_range_110bb_110be_4;
		BitBlock sequence_f0_91_82_adv, tmp297, sequence_f0_91_83, byte_range_80_81;
		BitBlock sequence_f0_91_83_adv, tmp298, sequence_f0_91_85, byte_range_80_83;
		BitBlock sequence_f0_91_85_adv, tmp299, sequence_f0_91_87, tmp300;
		BitBlock byte_range_85_88, sequence_f0_91_87_adv, tmp301, byte_92;
		BitBlock sequence_f0_92, tmp302, sequence_f0_92_91, sequence_f0_92_adv;
		BitBlock byte_range_b0_b3, sequence_f0_92_91_adv, tmp303;




        struct_Po.cc = simd<1>::constant<0>();
        tmp1 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp2 = simd_or(basis_bits.bit_0, basis_bits.bit_1);
        tmp3 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp4 = simd_andc(tmp3, tmp2);
        tmp5 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp6 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp7 = simd_andc(tmp5, tmp6);
        tmp8 = simd_andc(tmp4, tmp7);
        tmp9 = simd_and(tmp1, tmp8);
        tmp10 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp11 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp12 = simd_and(tmp10, tmp11);
        tmp13 = simd_and(tmp4, tmp12);
        tmp14 = simd_or(tmp9, tmp13);
        tmp15 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp16 = simd_andc(tmp15, tmp1);
        tmp17 = simd_and(tmp4, tmp16);
        tmp18 = simd_or(tmp14, tmp17);
        tmp19 = simd_and(tmp15, basis_bits.bit_6);
        tmp20 = simd_and(tmp4, tmp19);
        tmp21 = simd_or(tmp18, tmp20);
        tmp22 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp23 = simd_andc(tmp22, tmp2);
        tmp24 = simd_and(tmp10, basis_bits.bit_6);
        tmp25 = simd_and(tmp23, tmp24);
        tmp26 = simd_or(tmp21, tmp25);
        tmp27 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp28 = simd_or(tmp5, tmp1);
        tmp29 = simd_or(tmp27, tmp28);
        tmp30 = simd_not(tmp29);
        tmp31 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp32 = simd_and(tmp15, tmp31);
        tmp33 = simd_and(tmp22, tmp32);
        tmp34 = simd_or(simd_and(basis_bits.bit_1, tmp30), simd_andc(tmp33, basis_bits.bit_1));
        tmp35 = simd_andc(tmp34, basis_bits.bit_0);
        tmp36 = simd_or(tmp26, tmp35);
        tmp37 = simd_andc(basis_bits.bit_1, basis_bits.bit_0);
        tmp38 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp39 = simd_and(tmp37, tmp38);
        tmp40 = simd_and(tmp39, tmp16);
        cc_range_21_5c_1 = simd_or(tmp36, tmp40);
        struct_Po.cc = simd_or(struct_Po.cc, cc_range_21_5c_1);
        tmp41 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp42 = simd_andc(tmp41, tmp27);
        tmp43 = simd_andc(tmp11, tmp5);
        byte_c2 = simd_and(tmp42, tmp43);
        tmp44 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp45 = simd_and(tmp44, tmp3);
        tmp46 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp47 = simd_andc(tmp46, tmp5);
        tmp48 = simd_and(tmp6, tmp31);
        tmp49 = simd_or(tmp47, tmp48);
        tmp50 = simd_and(tmp45, tmp49);
        tmp51 = simd_and(tmp44, tmp22);
        tmp52 = simd_and(tmp6, basis_bits.bit_6);
        tmp53 = simd_and(tmp51, tmp52);
        tmp54 = simd_or(tmp50, tmp53);
        tmp55 = simd_and(tmp51, tmp32);
        cc_range_a1_bf_2 = simd_or(tmp54, tmp55);
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(byte_c2, carryQ.get_carry_in(0), byte_c2_adv));
        tmp56 = simd_and(byte_c2_adv, cc_range_a1_bf_2);
        struct_Po.cc = simd_or(struct_Po.cc, tmp56);
        tmp57 = simd_and(tmp15, tmp46);
        byte_cd = simd_and(tmp42, tmp57);
        tmp58 = simd_and(tmp15, tmp11);
        byte_be = simd_and(tmp51, tmp58);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(byte_cd, carryQ.get_carry_in(1), byte_cd_adv));
        tmp59 = simd_and(byte_cd_adv, byte_be);
        struct_Po.cc = simd_or(struct_Po.cc, tmp59);
        byte_ce = simd_and(tmp42, tmp58);
        tmp60 = simd_andc(tmp44, tmp27);
        byte_87 = simd_and(tmp60, tmp48);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(byte_ce, carryQ.get_carry_in(2), byte_ce_adv));
        tmp61 = simd_and(byte_ce_adv, byte_87);
        struct_Po.cc = simd_or(struct_Po.cc, tmp61);
        tmp62 = simd_and(tmp41, tmp38);
        tmp63 = simd_and(tmp6, tmp46);
        byte_d5 = simd_and(tmp62, tmp63);
        tmp64 = simd_and(tmp44, tmp38);
        tmp65 = simd_and(tmp64, basis_bits.bit_4);
        tmp66 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
        byte_range_9a_9f = simd_and(tmp65, tmp66);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(byte_d5, carryQ.get_carry_in(3), byte_d5_adv));
        tmp67 = simd_and(byte_d5_adv, byte_range_9a_9f);
        struct_Po.cc = simd_or(struct_Po.cc, tmp67);
        tmp68 = simd_and(tmp6, tmp11);
        byte_d6 = simd_and(tmp62, tmp68);
        tmp69 = simd_and(tmp10, tmp46);
        byte_89 = simd_and(tmp60, tmp69);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(byte_d6, carryQ.get_carry_in(4), byte_d6_adv));
        tmp70 = simd_and(byte_d6_adv, byte_89);
        struct_Po.cc = simd_or(struct_Po.cc, tmp70);
        byte_d7 = simd_and(tmp62, tmp48);
        tmp71 = simd_andc(tmp31, tmp5);
        tmp72 = simd_andc(tmp28, tmp71);
        tmp73 = simd_andc(tmp72, tmp68);
        tmp74 = simd_andc(tmp60, tmp73);
        tmp75 = simd_andc(tmp51, basis_bits.bit_4);
        tmp76 = simd_not(tmp1);
        tmp77 = simd_or(simd_and(basis_bits.bit_5, tmp76), simd_andc(tmp31, basis_bits.bit_5));
        tmp78 = simd_and(tmp75, tmp77);
        cc_range_5c0_5f3_2 = simd_or(tmp74, tmp78);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(byte_d7, carryQ.get_carry_in(5), byte_d7_adv));
        tmp79 = simd_and(byte_d7_adv, cc_range_5c0_5f3_2);
        struct_Po.cc = simd_or(struct_Po.cc, tmp79);
        tmp80 = simd_andc(tmp10, tmp1);
        byte_d8 = simd_and(tmp62, tmp80);
        tmp81 = simd_and(tmp60, tmp10);
        tmp82 = simd_not(basis_bits.bit_7);
        tmp83 = simd_or(simd_and(basis_bits.bit_6, tmp82), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
        tmp84 = simd_and(tmp81, tmp83);
        tmp85 = simd_andc(tmp15, basis_bits.bit_6);
        tmp86 = simd_and(tmp60, tmp85);
        tmp87 = simd_or(tmp84, tmp86);
        tmp88 = simd_and(tmp10, tmp31);
        tmp89 = simd_and(tmp64, tmp88);
        tmp90 = simd_or(tmp87, tmp89);
        tmp91 = simd_and(tmp64, tmp19);
        cc_range_609_61e_2 = simd_or(tmp90, tmp91);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(byte_d8, carryQ.get_carry_in(6), byte_d8_adv));
        tmp92 = simd_and(byte_d8_adv, cc_range_609_61e_2);
        struct_Po.cc = simd_or(struct_Po.cc, tmp92);
        byte_d9 = simd_and(tmp62, tmp69);
        tmp93 = simd_and(tmp45, basis_bits.bit_4);
        tmp94 = simd_not(basis_bits.bit_6);
        tmp95 = simd_or(simd_and(basis_bits.bit_5, tmp94), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        byte_range_aa_ad = simd_and(tmp93, tmp95);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(byte_d9, carryQ.get_carry_in(7), byte_d9_adv));
        tmp96 = simd_and(byte_d9_adv, byte_range_aa_ad);
        struct_Po.cc = simd_or(struct_Po.cc, tmp96);
        byte_db = simd_and(tmp62, tmp88);
        tmp97 = simd_andc(tmp6, tmp1);
        byte_94 = simd_and(tmp64, tmp97);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(byte_db, carryQ.get_carry_in(8), byte_db_adv));
        tmp98 = simd_and(byte_db_adv, byte_94);
        struct_Po.cc = simd_or(struct_Po.cc, tmp98);
        byte_dc = simd_and(tmp62, tmp16);
        tmp99 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp100 = simd_and(basis_bits.bit_4, tmp99);
        byte_range_80_8d = simd_andc(tmp60, tmp100);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(byte_dc, carryQ.get_carry_in(9), byte_dc_adv));
        tmp101 = simd_and(byte_dc_adv, byte_range_80_8d);
        struct_Po.cc = simd_or(struct_Po.cc, tmp101);
        byte_df = simd_and(tmp62, tmp32);
        tmp102 = simd_not(tmp66);
        tmp103 = simd_and(basis_bits.bit_5, tmp31);
        tmp104 = simd_or(simd_and(basis_bits.bit_4, tmp102), simd_andc(tmp103, basis_bits.bit_4));
        byte_range_b7_b9 = simd_and(tmp51, tmp104);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(byte_df, carryQ.get_carry_in(10), byte_df_adv));
        tmp105 = simd_and(byte_df_adv, byte_range_b7_b9);
        struct_Po.cc = simd_or(struct_Po.cc, tmp105);
        tmp106 = simd_and(tmp41, tmp3);
        byte_e0 = simd_andc(tmp106, tmp28);
        byte_a0 = simd_andc(tmp45, tmp28);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(byte_e0, carryQ.get_carry_in(11), tmp107));
        sequence_e0_a0 = simd_and(tmp107, byte_a0);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(byte_e0, carryQ.get_carry_in(12), byte_e0_adv));
        tmp108 = simd_and(basis_bits.bit_4, tmp103);
        byte_range_b0_be = simd_andc(tmp51, tmp108);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(sequence_e0_a0, carryQ.get_carry_in(13), sequence_e0_a0_adv));
        tmp109 = simd_and(sequence_e0_a0_adv, byte_range_b0_be);
        struct_Po.cc = simd_or(struct_Po.cc, tmp109);
        byte_a1 = simd_and(tmp45, tmp47);
        sequence_e0_a1 = simd_and(byte_e0_adv, byte_a1);
        byte_9e = simd_and(tmp64, tmp58);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(sequence_e0_a1, carryQ.get_carry_in(14), sequence_e0_a1_adv));
        tmp110 = simd_and(sequence_e0_a1_adv, byte_9e);
        struct_Po.cc = simd_or(struct_Po.cc, tmp110);
        byte_a5 = simd_and(tmp45, tmp63);
        sequence_e0_a5 = simd_and(byte_e0_adv, byte_a5);
        tmp111 = simd_andc(tmp6, basis_bits.bit_6);
        tmp112 = simd_and(tmp45, tmp111);
        tmp113 = simd_andc(tmp51, tmp28);
        cc_range_964_970_3 = simd_or(tmp112, tmp113);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(sequence_e0_a5, carryQ.get_carry_in(15), sequence_e0_a5_adv));
        tmp114 = simd_and(sequence_e0_a5_adv, cc_range_964_970_3);
        struct_Po.cc = simd_or(struct_Po.cc, tmp114);
        byte_ab = simd_and(tmp45, tmp88);
        sequence_e0_ab = simd_and(byte_e0_adv, byte_ab);
        byte_b0 = simd_andc(tmp51, tmp28);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(sequence_e0_ab, carryQ.get_carry_in(16), sequence_e0_ab_adv));
        tmp115 = simd_and(sequence_e0_ab_adv, byte_b0);
        struct_Po.cc = simd_or(struct_Po.cc, tmp115);
        byte_b7 = simd_and(tmp51, tmp48);
        sequence_e0_b7 = simd_and(byte_e0_adv, byte_b7);
        byte_b4 = simd_and(tmp51, tmp97);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(sequence_e0_b7, carryQ.get_carry_in(17), sequence_e0_b7_adv));
        tmp116 = simd_and(sequence_e0_b7_adv, byte_b4);
        struct_Po.cc = simd_or(struct_Po.cc, tmp116);
        byte_b9 = simd_and(tmp51, tmp69);
        sequence_e0_b9 = simd_and(byte_e0_adv, byte_b9);
        tmp117 = simd_and(tmp60, tmp32);
        tmp118 = simd_and(tmp64, tmp24);
        cc_range_e4f_e5a_3 = simd_or(tmp117, tmp118);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(sequence_e0_b9, carryQ.get_carry_in(18), sequence_e0_b9_adv));
        tmp119 = simd_and(sequence_e0_b9_adv, cc_range_e4f_e5a_3);
        struct_Po.cc = simd_or(struct_Po.cc, tmp119);
        byte_bc = simd_and(tmp51, tmp16);
        sequence_e0_bc = simd_and(byte_e0_adv, byte_bc);
        tmp120 = simd_andc(tmp44, basis_bits.bit_2);
        tmp121 = simd_or(tmp5, tmp31);
        tmp122 = simd_not(tmp121);
        tmp123 = simd_or(simd_and(basis_bits.bit_3, tmp122), simd_andc(tmp5, basis_bits.bit_3));
        tmp124 = simd_and(tmp120, tmp123);
        cc_range_f04_f14_3 = simd_or(tmp124, byte_94);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(sequence_e0_bc, carryQ.get_carry_in(19), sequence_e0_bc_adv));
        tmp125 = simd_and(sequence_e0_bc_adv, cc_range_f04_f14_3);
        struct_Po.cc = simd_or(struct_Po.cc, tmp125);
        sequence_e0_be = simd_and(byte_e0_adv, byte_be);
        byte_85 = simd_and(tmp60, tmp63);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(sequence_e0_be, carryQ.get_carry_in(20), sequence_e0_be_adv));
        tmp126 = simd_and(sequence_e0_be_adv, byte_85);
        struct_Po.cc = simd_or(struct_Po.cc, tmp126);
        byte_bf = simd_and(tmp51, tmp32);
        sequence_e0_bf = simd_and(byte_e0_adv, byte_bf);
        tmp127 = simd_andc(tmp64, basis_bits.bit_4);
        tmp128 = simd_and(basis_bits.bit_5, tmp1);
        tmp129 = simd_andc(tmp127, tmp128);
        tmp130 = simd_and(tmp64, tmp10);
        tmp131 = simd_and(tmp130, tmp83);
        cc_range_fd0_fd9_3 = simd_or(tmp129, tmp131);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(sequence_e0_bf, carryQ.get_carry_in(21), sequence_e0_bf_adv));
        tmp132 = simd_and(sequence_e0_bf_adv, cc_range_fd0_fd9_3);
        struct_Po.cc = simd_or(struct_Po.cc, tmp132);
        byte_e1 = simd_and(tmp106, tmp47);
        byte_81 = simd_and(tmp60, tmp47);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(22), tmp133));
        sequence_e1_81 = simd_and(tmp133, byte_81);
        carryQ.cq[23] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(23), byte_e1_adv));
        tmp134 = simd_and(tmp60, basis_bits.bit_4);
        byte_range_8a_8f = simd_and(tmp134, tmp66);
        carryQ.cq[24] = carryout2carry(pablo_blk_Advance(sequence_e1_81, carryQ.get_carry_in(24), sequence_e1_81_adv));
        tmp135 = simd_and(sequence_e1_81_adv, byte_range_8a_8f);
        struct_Po.cc = simd_or(struct_Po.cc, tmp135);
        byte_83 = simd_and(tmp60, tmp71);
        sequence_e1_83 = simd_and(byte_e1_adv, byte_83);
        byte_bb = simd_and(tmp51, tmp88);
        carryQ.cq[25] = carryout2carry(pablo_blk_Advance(sequence_e1_83, carryQ.get_carry_in(25), sequence_e1_83_adv));
        tmp136 = simd_and(sequence_e1_83_adv, byte_bb);
        struct_Po.cc = simd_or(struct_Po.cc, tmp136);
        byte_8d = simd_and(tmp60, tmp57);
        sequence_e1_8d = simd_and(byte_e1_adv, byte_8d);
        tmp137 = simd_or(basis_bits.bit_5, tmp1);
        tmp138 = simd_and(basis_bits.bit_4, tmp137);
        byte_range_a0_a8 = simd_andc(tmp45, tmp138);
        carryQ.cq[26] = carryout2carry(pablo_blk_Advance(sequence_e1_8d, carryQ.get_carry_in(26), sequence_e1_8d_adv));
        tmp139 = simd_and(sequence_e1_8d_adv, byte_range_a0_a8);
        struct_Po.cc = simd_or(struct_Po.cc, tmp139);
        byte_99 = simd_and(tmp64, tmp69);
        sequence_e1_99 = simd_and(byte_e1_adv, byte_99);
        tmp140 = simd_and(tmp45, tmp15);
        byte_range_ad_ae = simd_and(tmp140, tmp83);
        carryQ.cq[27] = carryout2carry(pablo_blk_Advance(sequence_e1_99, carryQ.get_carry_in(27), sequence_e1_99_adv));
        tmp141 = simd_and(sequence_e1_99_adv, byte_range_ad_ae);
        struct_Po.cc = simd_or(struct_Po.cc, tmp141);
        byte_9b = simd_and(tmp64, tmp88);
        sequence_e1_9b = simd_and(byte_e1_adv, byte_9b);
        tmp142 = simd_or(simd_and(basis_bits.bit_5, tmp94), simd_andc(tmp31, basis_bits.bit_5));
        byte_range_ab_ad = simd_and(tmp93, tmp142);
        carryQ.cq[28] = carryout2carry(pablo_blk_Advance(sequence_e1_9b, carryQ.get_carry_in(28), sequence_e1_9b_adv));
        tmp143 = simd_and(sequence_e1_9b_adv, byte_range_ab_ad);
        struct_Po.cc = simd_or(struct_Po.cc, tmp143);
        byte_9c = simd_and(tmp64, tmp16);
        sequence_e1_9c = simd_and(byte_e1_adv, byte_9c);
        tmp144 = simd_and(tmp51, tmp6);
        byte_range_b5_b6 = simd_and(tmp144, tmp83);
        carryQ.cq[29] = carryout2carry(pablo_blk_Advance(sequence_e1_9c, carryQ.get_carry_in(29), sequence_e1_9c_adv));
        tmp145 = simd_and(sequence_e1_9c_adv, byte_range_b5_b6);
        struct_Po.cc = simd_or(struct_Po.cc, tmp145);
        byte_9f = simd_and(tmp64, tmp32);
        sequence_e1_9f = simd_and(byte_e1_adv, byte_9f);
        tmp146 = simd_or(tmp6, tmp10);
        tmp147 = simd_and(tmp64, tmp146);
        cc_range_17d4_17d8_3 = simd_andc(tmp147, tmp31);
        carryQ.cq[30] = carryout2carry(pablo_blk_Advance(sequence_e1_9f, carryQ.get_carry_in(30), sequence_e1_9f_adv));
        tmp148 = simd_and(sequence_e1_9f_adv, cc_range_17d4_17d8_3);
        struct_Po.cc = simd_or(struct_Po.cc, tmp148);
        sequence_e1_a0 = simd_and(byte_e1_adv, byte_a0);
        tmp149 = simd_andc(tmp60, basis_bits.bit_4);
        tmp150 = simd_andc(tmp149, tmp99);
        tmp151 = simd_or(basis_bits.bit_5, tmp31);
        tmp152 = simd_not(tmp151);
        tmp153 = simd_or(simd_and(basis_bits.bit_4, tmp152), simd_andc(tmp103, basis_bits.bit_4));
        tmp154 = simd_and(tmp60, tmp153);
        cc_range_1800_1807_3 = simd_or(tmp150, tmp154);
        carryQ.cq[31] = carryout2carry(pablo_blk_Advance(sequence_e1_a0, carryQ.get_carry_in(31), sequence_e1_a0_adv));
        tmp155 = simd_and(sequence_e1_a0_adv, cc_range_1800_1807_3);
        struct_Po.cc = simd_or(struct_Po.cc, tmp155);
        sequence_e1_a5 = simd_and(byte_e1_adv, byte_a5);
        byte_range_84_85 = simd_and(tmp60, tmp111);
        carryQ.cq[32] = carryout2carry(pablo_blk_Advance(sequence_e1_a5, carryQ.get_carry_in(32), sequence_e1_a5_adv));
        tmp156 = simd_and(sequence_e1_a5_adv, byte_range_84_85);
        struct_Po.cc = simd_or(struct_Po.cc, tmp156);
        byte_a8 = simd_and(tmp45, tmp80);
        sequence_e1_a8 = simd_and(byte_e1_adv, byte_a8);
        byte_range_9e_9f = simd_and(tmp64, tmp19);
        carryQ.cq[33] = carryout2carry(pablo_blk_Advance(sequence_e1_a8, carryQ.get_carry_in(33), sequence_e1_a8_adv));
        tmp157 = simd_and(sequence_e1_a8_adv, byte_range_9e_9f);
        struct_Po.cc = simd_or(struct_Po.cc, tmp157);
        byte_aa = simd_and(tmp45, tmp12);
        sequence_e1_aa = simd_and(byte_e1_adv, byte_aa);
        tmp158 = simd_andc(tmp45, basis_bits.bit_4);
        tmp159 = simd_andc(tmp158, tmp103);
        tmp160 = simd_andc(tmp93, tmp99);
        cc_range_1aa0_1aa8_3 = simd_or(tmp159, tmp160);
        carryQ.cq[34] = carryout2carry(pablo_blk_Advance(sequence_e1_aa, carryQ.get_carry_in(34), sequence_e1_aa_adv));
        tmp161 = simd_and(sequence_e1_aa_adv, cc_range_1aa0_1aa8_3);
        struct_Po.cc = simd_or(struct_Po.cc, tmp161);
        byte_ad = simd_and(tmp45, tmp57);
        sequence_e1_ad = simd_and(byte_e1_adv, byte_ad);
        tmp162 = simd_or(basis_bits.bit_3, tmp28);
        tmp163 = simd_not(tmp162);
        tmp164 = simd_and(basis_bits.bit_4, tmp66);
        tmp165 = simd_and(basis_bits.bit_3, tmp164);
        tmp166 = simd_or(simd_and(basis_bits.bit_2, tmp163), simd_andc(tmp165, basis_bits.bit_2));
        byte_range_9a_a0 = simd_and(tmp44, tmp166);
        carryQ.cq[35] = carryout2carry(pablo_blk_Advance(sequence_e1_ad, carryQ.get_carry_in(35), sequence_e1_ad_adv));
        tmp167 = simd_and(sequence_e1_ad_adv, byte_range_9a_a0);
        struct_Po.cc = simd_or(struct_Po.cc, tmp167);
        byte_af = simd_and(tmp45, tmp32);
        sequence_e1_af = simd_and(byte_e1_adv, byte_af);
        byte_range_bc_bf = simd_and(tmp51, tmp15);
        carryQ.cq[36] = carryout2carry(pablo_blk_Advance(sequence_e1_af, carryQ.get_carry_in(36), sequence_e1_af_adv));
        tmp168 = simd_and(sequence_e1_af_adv, byte_range_bc_bf);
        struct_Po.cc = simd_or(struct_Po.cc, tmp168);
        sequence_e1_b0 = simd_and(byte_e1_adv, byte_b0);
        tmp169 = simd_and(tmp51, basis_bits.bit_4);
        byte_range_bb_bf = simd_and(tmp169, tmp151);
        carryQ.cq[37] = carryout2carry(pablo_blk_Advance(sequence_e1_b0, carryQ.get_carry_in(37), sequence_e1_b0_adv));
        tmp170 = simd_and(sequence_e1_b0_adv, byte_range_bb_bf);
        struct_Po.cc = simd_or(struct_Po.cc, tmp170);
        byte_b1 = simd_and(tmp51, tmp47);
        sequence_e1_b1 = simd_and(byte_e1_adv, byte_b1);
        byte_range_be_bf = simd_and(tmp51, tmp19);
        carryQ.cq[38] = carryout2carry(pablo_blk_Advance(sequence_e1_b1, carryQ.get_carry_in(38), sequence_e1_b1_adv));
        tmp171 = simd_and(sequence_e1_b1_adv, byte_range_be_bf);
        struct_Po.cc = simd_or(struct_Po.cc, tmp171);
        byte_b3 = simd_and(tmp51, tmp71);
        sequence_e1_b3 = simd_and(byte_e1_adv, byte_b3);
        tmp172 = simd_and(tmp64, tmp71);
        cc_range_1cc0_1cd3_3 = simd_or(tmp149, tmp172);
        carryQ.cq[39] = carryout2carry(pablo_blk_Advance(sequence_e1_b3, carryQ.get_carry_in(39), sequence_e1_b3_adv));
        tmp173 = simd_and(sequence_e1_b3_adv, cc_range_1cc0_1cd3_3);
        struct_Po.cc = simd_or(struct_Po.cc, tmp173);
        byte_e2 = simd_and(tmp106, tmp43);
        byte_80 = simd_andc(tmp60, tmp28);
        carryQ.cq[40] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(40), tmp174));
        sequence_e2_80 = simd_and(tmp174, byte_80);
        carryQ.cq[41] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(41), byte_e2_adv));
        tmp175 = simd_and(tmp64, tmp52);
        tmp176 = simd_or(tmp175, tmp158);
        tmp177 = simd_andc(tmp51, tmp138);
        tmp178 = simd_or(tmp176, tmp177);
        tmp179 = simd_not(tmp31);
        tmp180 = simd_or(simd_and(basis_bits.bit_5, tmp179), simd_andc(tmp31, basis_bits.bit_5));
        tmp181 = simd_and(tmp169, tmp180);
        cc_range_2016_203b_3 = simd_or(tmp178, tmp181);
        carryQ.cq[42] = carryout2carry(pablo_blk_Advance(sequence_e2_80, carryQ.get_carry_in(42), sequence_e2_80_adv));
        tmp182 = simd_and(sequence_e2_80_adv, cc_range_2016_203b_3);
        struct_Po.cc = simd_or(struct_Po.cc, tmp182);
        sequence_e2_81 = simd_and(byte_e2_adv, byte_81);
        tmp183 = simd_andc(tmp60, tmp5);
        tmp184 = simd_and(tmp183, tmp1);
        tmp185 = simd_or(tmp5, basis_bits.bit_6);
        tmp186 = simd_not(tmp185);
        tmp187 = simd_or(basis_bits.bit_4, tmp103);
        tmp188 = simd_or(simd_and(basis_bits.bit_3, tmp186), simd_andc(tmp187, basis_bits.bit_3));
        tmp189 = simd_and(tmp120, tmp188);
        tmp190 = simd_or(tmp184, tmp189);
        tmp191 = simd_or(tmp190, tmp172);
        tmp192 = simd_not(tmp103);
        tmp193 = simd_or(simd_and(basis_bits.bit_4, tmp192), simd_andc(tmp128, basis_bits.bit_4));
        tmp194 = simd_and(tmp64, tmp193);
        cc_range_2041_2055_3 = simd_or(tmp191, tmp194);
        carryQ.cq[43] = carryout2carry(pablo_blk_Advance(sequence_e2_81, carryQ.get_carry_in(43), sequence_e2_81_adv));
        tmp195 = simd_and(sequence_e2_81_adv, cc_range_2041_2055_3);
        struct_Po.cc = simd_or(struct_Po.cc, tmp195);
        sequence_e2_b3 = simd_and(byte_e2_adv, byte_b3);
        tmp196 = simd_or(simd_and(basis_bits.bit_5, tmp76), simd_andc(tmp1, basis_bits.bit_5));
        tmp197 = simd_and(tmp169, tmp196);
        cc_range_2cf9_2cfe_3 = simd_or(tmp197, byte_range_be_bf);
        carryQ.cq[44] = carryout2carry(pablo_blk_Advance(sequence_e2_b3, carryQ.get_carry_in(44), sequence_e2_b3_adv));
        tmp198 = simd_and(sequence_e2_b3_adv, cc_range_2cf9_2cfe_3);
        struct_Po.cc = simd_or(struct_Po.cc, tmp198);
        byte_b5 = simd_and(tmp51, tmp63);
        sequence_e2_b5 = simd_and(byte_e2_adv, byte_b5);
        carryQ.cq[45] = carryout2carry(pablo_blk_Advance(sequence_e2_b5, carryQ.get_carry_in(45), sequence_e2_b5_adv));
        tmp199 = simd_and(sequence_e2_b5_adv, byte_b0);
        struct_Po.cc = simd_or(struct_Po.cc, tmp199);
        byte_b8 = simd_and(tmp51, tmp80);
        sequence_e2_b8 = simd_and(byte_e2_adv, byte_b8);
        tmp200 = simd_not(tmp137);
        tmp201 = simd_or(simd_and(basis_bits.bit_4, tmp200), simd_andc(tmp99, basis_bits.bit_4));
        tmp202 = simd_andc(tmp185, tmp201);
        tmp203 = simd_andc(tmp202, tmp88);
        tmp204 = simd_andc(tmp60, tmp203);
        tmp205 = simd_not(tmp187);
        tmp206 = simd_or(simd_and(basis_bits.bit_3, tmp205), simd_andc(tmp19, basis_bits.bit_3));
        tmp207 = simd_and(tmp120, tmp206);
        tmp208 = simd_or(tmp204, tmp207);
        tmp209 = simd_andc(tmp10, basis_bits.bit_6);
        tmp210 = simd_and(tmp64, tmp209);
        tmp211 = simd_or(tmp208, tmp210);
        tmp212 = simd_or(tmp211, byte_9b);
        tmp213 = simd_or(tmp212, byte_range_9e_9f);
        tmp214 = simd_or(simd_and(basis_bits.bit_5, tmp179), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        tmp215 = simd_and(tmp93, tmp214);
        tmp216 = simd_or(tmp213, tmp215);
        tmp217 = simd_andc(tmp51, tmp164);
        cc_range_2e00_2e30_3 = simd_or(tmp216, tmp217);
        carryQ.cq[46] = carryout2carry(pablo_blk_Advance(sequence_e2_b8, carryQ.get_carry_in(46), sequence_e2_b8_adv));
        tmp218 = simd_and(sequence_e2_b8_adv, cc_range_2e00_2e30_3);
        struct_Po.cc = simd_or(struct_Po.cc, tmp218);
        byte_e3 = simd_and(tmp106, tmp71);
        carryQ.cq[47] = carryout2carry(pablo_blk_Advance(byte_e3, carryQ.get_carry_in(47), tmp219));
        sequence_e3_80 = simd_and(tmp219, byte_80);
        carryQ.cq[48] = carryout2carry(pablo_blk_Advance(byte_e3, carryQ.get_carry_in(48), byte_e3_adv));
        tmp220 = simd_and(tmp51, tmp57);
        cc_range_3001_303d_3 = simd_or(tmp184, tmp220);
        carryQ.cq[49] = carryout2carry(pablo_blk_Advance(sequence_e3_80, carryQ.get_carry_in(49), sequence_e3_80_adv));
        tmp221 = simd_and(sequence_e3_80_adv, cc_range_3001_303d_3);
        struct_Po.cc = simd_or(struct_Po.cc, tmp221);
        sequence_e3_83 = simd_and(byte_e3_adv, byte_83);
        carryQ.cq[50] = carryout2carry(pablo_blk_Advance(sequence_e3_83, carryQ.get_carry_in(50), sequence_e3_83_adv));
        tmp222 = simd_and(sequence_e3_83_adv, byte_bb);
        struct_Po.cc = simd_or(struct_Po.cc, tmp222);
        byte_ea = simd_and(tmp106, tmp12);
        byte_93 = simd_and(tmp64, tmp71);
        carryQ.cq[51] = carryout2carry(pablo_blk_Advance(byte_ea, carryQ.get_carry_in(51), tmp223));
        sequence_ea_93 = simd_and(tmp223, byte_93);
        carryQ.cq[52] = carryout2carry(pablo_blk_Advance(byte_ea, carryQ.get_carry_in(52), byte_ea_adv));
        carryQ.cq[53] = carryout2carry(pablo_blk_Advance(sequence_ea_93, carryQ.get_carry_in(53), sequence_ea_93_adv));
        tmp224 = simd_and(sequence_ea_93_adv, byte_range_be_bf);
        struct_Po.cc = simd_or(struct_Po.cc, tmp224);
        byte_98 = simd_and(tmp64, tmp80);
        sequence_ea_98 = simd_and(byte_ea_adv, byte_98);
        tmp225 = simd_and(tmp60, tmp15);
        byte_range_8d_8f = simd_and(tmp225, tmp1);
        carryQ.cq[54] = carryout2carry(pablo_blk_Advance(sequence_ea_98, carryQ.get_carry_in(54), sequence_ea_98_adv));
        tmp226 = simd_and(sequence_ea_98_adv, byte_range_8d_8f);
        struct_Po.cc = simd_or(struct_Po.cc, tmp226);
        sequence_ea_99 = simd_and(byte_ea_adv, byte_99);
        tmp227 = simd_or(tmp71, tmp58);
        cc_range_a673_a67e_3 = simd_and(tmp51, tmp227);
        carryQ.cq[55] = carryout2carry(pablo_blk_Advance(sequence_ea_99, carryQ.get_carry_in(55), sequence_ea_99_adv));
        tmp228 = simd_and(sequence_ea_99_adv, cc_range_a673_a67e_3);
        struct_Po.cc = simd_or(struct_Po.cc, tmp228);
        sequence_ea_9b = simd_and(byte_ea_adv, byte_9b);
        byte_range_b2_b7 = simd_and(tmp75, tmp66);
        carryQ.cq[56] = carryout2carry(pablo_blk_Advance(sequence_ea_9b, carryQ.get_carry_in(56), sequence_ea_9b_adv));
        tmp229 = simd_and(sequence_ea_9b_adv, byte_range_b2_b7);
        struct_Po.cc = simd_or(struct_Po.cc, tmp229);
        sequence_ea_a1 = simd_and(byte_ea_adv, byte_a1);
        byte_range_b4_b7 = simd_and(tmp51, tmp6);
        carryQ.cq[57] = carryout2carry(pablo_blk_Advance(sequence_ea_a1, carryQ.get_carry_in(57), sequence_ea_a1_adv));
        tmp230 = simd_and(sequence_ea_a1_adv, byte_range_b4_b7);
        struct_Po.cc = simd_or(struct_Po.cc, tmp230);
        byte_a3 = simd_and(tmp45, tmp71);
        sequence_ea_a3 = simd_and(byte_ea_adv, byte_a3);
        tmp231 = simd_and(tmp60, tmp19);
        tmp232 = simd_and(tmp51, tmp10);
        tmp233 = simd_andc(tmp232, tmp31);
        cc_range_a8ce_a8f8_3 = simd_or(tmp231, tmp233);
        carryQ.cq[58] = carryout2carry(pablo_blk_Advance(sequence_ea_a3, carryQ.get_carry_in(58), sequence_ea_a3_adv));
        tmp234 = simd_and(sequence_ea_a3_adv, cc_range_a8ce_a8f8_3);
        struct_Po.cc = simd_or(struct_Po.cc, tmp234);
        byte_a4 = simd_and(tmp45, tmp97);
        sequence_ea_a4 = simd_and(byte_ea_adv, byte_a4);
        byte_range_ae_af = simd_and(tmp45, tmp19);
        carryQ.cq[59] = carryout2carry(pablo_blk_Advance(sequence_ea_a4, carryQ.get_carry_in(59), sequence_ea_a4_adv));
        tmp235 = simd_and(sequence_ea_a4_adv, byte_range_ae_af);
        struct_Po.cc = simd_or(struct_Po.cc, tmp235);
        sequence_ea_a5 = simd_and(byte_ea_adv, byte_a5);
        carryQ.cq[60] = carryout2carry(pablo_blk_Advance(sequence_ea_a5, carryQ.get_carry_in(60), sequence_ea_a5_adv));
        tmp236 = simd_and(sequence_ea_a5_adv, byte_9f);
        struct_Po.cc = simd_or(struct_Po.cc, tmp236);
        byte_a7 = simd_and(tmp45, tmp48);
        sequence_ea_a7 = simd_and(byte_ea_adv, byte_a7);
        tmp237 = simd_not(tmp99);
        tmp238 = simd_or(simd_and(basis_bits.bit_4, tmp237), simd_andc(tmp137, basis_bits.bit_4));
        tmp239 = simd_and(tmp60, tmp238);
        cc_range_a9c1_a9de_3 = simd_or(tmp239, byte_range_9e_9f);
        carryQ.cq[61] = carryout2carry(pablo_blk_Advance(sequence_ea_a7, carryQ.get_carry_in(61), sequence_ea_a7_adv));
        tmp240 = simd_and(sequence_ea_a7_adv, cc_range_a9c1_a9de_3);
        struct_Po.cc = simd_or(struct_Po.cc, tmp240);
        byte_a9 = simd_and(tmp45, tmp69);
        sequence_ea_a9 = simd_and(byte_ea_adv, byte_a9);
        byte_range_9c_9f = simd_and(tmp64, tmp15);
        carryQ.cq[62] = carryout2carry(pablo_blk_Advance(sequence_ea_a9, carryQ.get_carry_in(62), sequence_ea_a9_adv));
        tmp241 = simd_and(sequence_ea_a9_adv, byte_range_9c_9f);
        struct_Po.cc = simd_or(struct_Po.cc, tmp241);
        sequence_ea_ab = simd_and(byte_ea_adv, byte_ab);
        tmp242 = simd_andc(tmp51, tmp185);
        cc_range_aade_aaf0_3 = simd_or(byte_range_9e_9f, tmp242);
        carryQ.cq[63] = carryout2carry(pablo_blk_Advance(sequence_ea_ab, carryQ.get_carry_in(63), sequence_ea_ab_adv));
        tmp243 = simd_and(sequence_ea_ab_adv, cc_range_aade_aaf0_3);
        struct_Po.cc = simd_or(struct_Po.cc, tmp243);
        sequence_ea_af = simd_and(byte_ea_adv, byte_af);
        carryQ.cq[64] = carryout2carry(pablo_blk_Advance(sequence_ea_af, carryQ.get_carry_in(64), sequence_ea_af_adv));
        tmp244 = simd_and(sequence_ea_af_adv, byte_ab);
        struct_Po.cc = simd_or(struct_Po.cc, tmp244);
        byte_ef = simd_and(tmp106, tmp32);
        carryQ.cq[65] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(65), tmp245));
        sequence_ef_b8 = simd_and(tmp245, byte_b8);
        carryQ.cq[66] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(66), byte_ef_adv));
        tmp246 = simd_andc(tmp127, tmp103);
        tmp247 = simd_or(tmp246, byte_99);
        cc_range_fe10_fe30_3 = simd_or(tmp247, byte_b0);
        carryQ.cq[67] = carryout2carry(pablo_blk_Advance(sequence_ef_b8, carryQ.get_carry_in(67), sequence_ef_b8_adv));
        tmp248 = simd_and(sequence_ef_b8_adv, cc_range_fe10_fe30_3);
        struct_Po.cc = simd_or(struct_Po.cc, tmp248);
        sequence_ef_b9 = simd_and(byte_ef_adv, byte_b9);
        tmp249 = simd_and(tmp60, tmp6);
        tmp250 = simd_and(tmp249, tmp83);
        tmp251 = simd_and(tmp134, tmp196);
        tmp252 = simd_or(tmp250, tmp251);
        tmp253 = simd_andc(tmp64, tmp5);
        tmp254 = simd_andc(tmp253, tmp31);
        tmp255 = simd_or(tmp252, tmp254);
        tmp256 = simd_and(tmp64, tmp6);
        tmp257 = simd_or(tmp255, tmp256);
        tmp258 = simd_or(basis_bits.bit_3, tmp185);
        tmp259 = simd_not(tmp258);
        tmp260 = simd_and(basis_bits.bit_3, tmp32);
        tmp261 = simd_or(simd_and(basis_bits.bit_2, tmp259), simd_andc(tmp260, basis_bits.bit_2));
        tmp262 = simd_and(tmp44, tmp261);
        tmp263 = simd_or(tmp257, tmp262);
        tmp264 = simd_or(tmp263, byte_a8);
        tmp265 = simd_and(tmp45, tmp24);
        cc_range_fe45_fe6a_3 = simd_or(tmp264, tmp265);
        carryQ.cq[68] = carryout2carry(pablo_blk_Advance(sequence_ef_b9, carryQ.get_carry_in(68), sequence_ef_b9_adv));
        tmp266 = simd_and(sequence_ef_b9_adv, cc_range_fe45_fe6a_3);
        struct_Po.cc = simd_or(struct_Po.cc, tmp266);
        sequence_ef_bc = simd_and(byte_ef_adv, byte_bc);
        tmp267 = simd_andc(tmp60, tmp7);
        tmp268 = simd_and(tmp1, tmp267);
        tmp269 = simd_and(tmp60, tmp12);
        tmp270 = simd_or(tmp268, tmp269);
        tmp271 = simd_and(tmp60, tmp16);
        tmp272 = simd_or(tmp270, tmp271);
        tmp273 = simd_or(tmp272, tmp231);
        tmp274 = simd_or(tmp273, tmp118);
        tmp275 = simd_or(simd_and(basis_bits.bit_2, tmp163), simd_andc(tmp260, basis_bits.bit_2));
        tmp276 = simd_and(tmp44, tmp275);
        tmp277 = simd_or(tmp274, tmp276);
        cc_range_ff01_ff3c_3 = simd_or(tmp277, byte_bc);
        carryQ.cq[69] = carryout2carry(pablo_blk_Advance(sequence_ef_bc, carryQ.get_carry_in(69), sequence_ef_bc_adv));
        tmp278 = simd_and(sequence_ef_bc_adv, cc_range_ff01_ff3c_3);
        struct_Po.cc = simd_or(struct_Po.cc, tmp278);
        byte_bd = simd_and(tmp51, tmp57);
        sequence_ef_bd = simd_and(byte_ef_adv, byte_bd);
        tmp279 = simd_or(tmp47, tmp111);
        cc_range_ff61_ff64_3 = simd_and(tmp45, tmp279);
        carryQ.cq[70] = carryout2carry(pablo_blk_Advance(sequence_ef_bd, carryQ.get_carry_in(70), sequence_ef_bd_adv));
        tmp280 = simd_and(sequence_ef_bd_adv, cc_range_ff61_ff64_3);
        struct_Po.cc = simd_or(struct_Po.cc, tmp280);
        tmp281 = simd_and(tmp41, tmp22);
        byte_f0 = simd_andc(tmp281, tmp28);
        byte_90 = simd_andc(tmp64, tmp28);
        carryQ.cq[71] = carryout2carry(pablo_blk_Advance(byte_f0, carryQ.get_carry_in(71), tmp282));
        sequence_f0_90 = simd_and(tmp282, byte_90);
        carryQ.cq[72] = carryout2carry(pablo_blk_Advance(byte_f0, carryQ.get_carry_in(72), byte_f0_adv));
        byte_84 = simd_and(tmp60, tmp97);
        carryQ.cq[73] = carryout2carry(pablo_blk_Advance(sequence_f0_90, carryQ.get_carry_in(73), tmp283));
        sequence_f0_90_84 = simd_and(tmp283, byte_84);
        carryQ.cq[74] = carryout2carry(pablo_blk_Advance(sequence_f0_90, carryQ.get_carry_in(74), sequence_f0_90_adv));
        byte_range_80_82 = simd_andc(tmp183, tmp31);
        carryQ.cq[75] = carryout2carry(pablo_blk_Advance(sequence_f0_90_84, carryQ.get_carry_in(75), sequence_f0_90_84_adv));
        tmp284 = simd_and(sequence_f0_90_84_adv, byte_range_80_82);
        struct_Po.cc = simd_or(struct_Po.cc, tmp284);
        byte_8e = simd_and(tmp60, tmp58);
        sequence_f0_90_8e = simd_and(sequence_f0_90_adv, byte_8e);
        carryQ.cq[76] = carryout2carry(pablo_blk_Advance(sequence_f0_90_8e, carryQ.get_carry_in(76), sequence_f0_90_8e_adv));
        tmp285 = simd_and(sequence_f0_90_8e_adv, byte_9f);
        struct_Po.cc = simd_or(struct_Po.cc, tmp285);
        byte_8f = simd_and(tmp60, tmp32);
        sequence_f0_90_8f = simd_and(sequence_f0_90_adv, byte_8f);
        carryQ.cq[77] = carryout2carry(pablo_blk_Advance(sequence_f0_90_8f, carryQ.get_carry_in(77), sequence_f0_90_8f_adv));
        tmp286 = simd_and(sequence_f0_90_8f_adv, byte_90);
        struct_Po.cc = simd_or(struct_Po.cc, tmp286);
        sequence_f0_90_a1 = simd_and(sequence_f0_90_adv, byte_a1);
        byte_97 = simd_and(tmp64, tmp48);
        carryQ.cq[78] = carryout2carry(pablo_blk_Advance(sequence_f0_90_a1, carryQ.get_carry_in(78), sequence_f0_90_a1_adv));
        tmp287 = simd_and(sequence_f0_90_a1_adv, byte_97);
        struct_Po.cc = simd_or(struct_Po.cc, tmp287);
        sequence_f0_90_a4 = simd_and(sequence_f0_90_adv, byte_a4);
        tmp288 = simd_and(tmp44, basis_bits.bit_3);
        cc_range_1091f_1093f_4 = simd_and(tmp32, tmp288);
        carryQ.cq[79] = carryout2carry(pablo_blk_Advance(sequence_f0_90_a4, carryQ.get_carry_in(79), sequence_f0_90_a4_adv));
        tmp289 = simd_and(sequence_f0_90_a4_adv, cc_range_1091f_1093f_4);
        struct_Po.cc = simd_or(struct_Po.cc, tmp289);
        sequence_f0_90_a9 = simd_and(sequence_f0_90_adv, byte_a9);
        tmp290 = simd_andc(tmp64, tmp138);
        cc_range_10a50_10a7f_4 = simd_or(tmp290, byte_bf);
        carryQ.cq[80] = carryout2carry(pablo_blk_Advance(sequence_f0_90_a9, carryQ.get_carry_in(80), sequence_f0_90_a9_adv));
        tmp291 = simd_and(sequence_f0_90_a9_adv, cc_range_10a50_10a7f_4);
        struct_Po.cc = simd_or(struct_Po.cc, tmp291);
        byte_ac = simd_and(tmp45, tmp16);
        sequence_f0_90_ac = simd_and(sequence_f0_90_adv, byte_ac);
        byte_range_b9_bf = simd_and(tmp169, tmp137);
        carryQ.cq[81] = carryout2carry(pablo_blk_Advance(sequence_f0_90_ac, carryQ.get_carry_in(81), sequence_f0_90_ac_adv));
        tmp292 = simd_and(sequence_f0_90_ac_adv, byte_range_b9_bf);
        struct_Po.cc = simd_or(struct_Po.cc, tmp292);
        byte_91 = simd_and(tmp64, tmp47);
        sequence_f0_91 = simd_and(byte_f0_adv, byte_91);
        carryQ.cq[82] = carryout2carry(pablo_blk_Advance(sequence_f0_91, carryQ.get_carry_in(82), tmp293));
        sequence_f0_91_81 = simd_and(tmp293, byte_81);
        carryQ.cq[83] = carryout2carry(pablo_blk_Advance(sequence_f0_91, carryQ.get_carry_in(83), sequence_f0_91_adv));
        tmp294 = simd_or(simd_and(basis_bits.bit_4, tmp237), simd_andc(tmp103, basis_bits.bit_4));
        byte_range_87_8d = simd_and(tmp60, tmp294);
        carryQ.cq[84] = carryout2carry(pablo_blk_Advance(sequence_f0_91_81, carryQ.get_carry_in(84), sequence_f0_91_81_adv));
        tmp295 = simd_and(sequence_f0_91_81_adv, byte_range_87_8d);
        struct_Po.cc = simd_or(struct_Po.cc, tmp295);
        byte_82 = simd_and(tmp60, tmp43);
        sequence_f0_91_82 = simd_and(sequence_f0_91_adv, byte_82);
        tmp296 = simd_and(tmp169, tmp77);
        cc_range_110bb_110be_4 = simd_or(tmp296, byte_range_be_bf);
        carryQ.cq[85] = carryout2carry(pablo_blk_Advance(sequence_f0_91_82, carryQ.get_carry_in(85), sequence_f0_91_82_adv));
        tmp297 = simd_and(sequence_f0_91_82_adv, cc_range_110bb_110be_4);
        struct_Po.cc = simd_or(struct_Po.cc, tmp297);
        sequence_f0_91_83 = simd_and(sequence_f0_91_adv, byte_83);
        byte_range_80_81 = simd_andc(tmp60, tmp185);
        carryQ.cq[86] = carryout2carry(pablo_blk_Advance(sequence_f0_91_83, carryQ.get_carry_in(86), sequence_f0_91_83_adv));
        tmp298 = simd_and(sequence_f0_91_83_adv, byte_range_80_81);
        struct_Po.cc = simd_or(struct_Po.cc, tmp298);
        sequence_f0_91_85 = simd_and(sequence_f0_91_adv, byte_85);
        byte_range_80_83 = simd_andc(tmp60, tmp5);
        carryQ.cq[87] = carryout2carry(pablo_blk_Advance(sequence_f0_91_85, carryQ.get_carry_in(87), sequence_f0_91_85_adv));
        tmp299 = simd_and(sequence_f0_91_85_adv, byte_range_80_83);
        struct_Po.cc = simd_or(struct_Po.cc, tmp299);
        sequence_f0_91_87 = simd_and(sequence_f0_91_adv, byte_87);
        tmp300 = simd_or(simd_and(basis_bits.bit_4, tmp200), simd_andc(tmp128, basis_bits.bit_4));
        byte_range_85_88 = simd_and(tmp60, tmp300);
        carryQ.cq[88] = carryout2carry(pablo_blk_Advance(sequence_f0_91_87, carryQ.get_carry_in(88), sequence_f0_91_87_adv));
        tmp301 = simd_and(sequence_f0_91_87_adv, byte_range_85_88);
        struct_Po.cc = simd_or(struct_Po.cc, tmp301);
        byte_92 = simd_and(tmp64, tmp43);
        sequence_f0_92 = simd_and(byte_f0_adv, byte_92);
        carryQ.cq[89] = carryout2carry(pablo_blk_Advance(sequence_f0_92, carryQ.get_carry_in(89), tmp302));
        sequence_f0_92_91 = simd_and(tmp302, byte_91);
        carryQ.cq[90] = carryout2carry(pablo_blk_Advance(sequence_f0_92, carryQ.get_carry_in(90), sequence_f0_92_adv));
        byte_range_b0_b3 = simd_andc(tmp51, tmp5);
        carryQ.cq[91] = carryout2carry(pablo_blk_Advance(sequence_f0_92_91, carryQ.get_carry_in(91), sequence_f0_92_91_adv));
        tmp303 = simd_and(sequence_f0_92_91_adv, byte_range_b0_b3);
        struct_Po.cc = simd_or(struct_Po.cc, tmp303);
  }
  CarryArray<92, 0> carryQ;
  };

  struct Me {
  Me() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Me & struct_Me) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, byte_d2, tmp7, tmp8, tmp9, tmp10;
		BitBlock tmp11, byte_range_88_89, byte_d2_adv, tmp12, tmp13, tmp14, byte_e2;
		BitBlock tmp15, tmp16, byte_83, tmp17, sequence_e2_83, byte_e2_adv, tmp18;
		BitBlock tmp19, tmp20, tmp21, tmp22, tmp23, tmp24, tmp25, tmp26, tmp27, tmp28;
		BitBlock tmp29, tmp30, tmp31, cc_range_20dd_20e2_3, sequence_e2_83_adv, tmp32;
		BitBlock tmp33, byte_ea, tmp34, tmp35, tmp36, byte_99, tmp37, sequence_ea_99;
		BitBlock byte_ea_adv, tmp38, tmp39, tmp40, byte_range_b0_b2;
		BitBlock sequence_ea_99_adv, tmp41;




        struct_Me.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp3 = simd_and(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_andc(tmp5, tmp4);
        byte_d2 = simd_and(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp9 = simd_andc(tmp7, tmp8);
        tmp10 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp11 = simd_andc(tmp10, basis_bits.bit_6);
        byte_range_88_89 = simd_and(tmp9, tmp11);
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(byte_d2, carryQ.get_carry_in(0), byte_d2_adv));
        tmp12 = simd_and(byte_d2_adv, byte_range_88_89);
        struct_Me.cc = simd_or(struct_Me.cc, tmp12);
        tmp13 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp14 = simd_and(tmp1, tmp13);
        byte_e2 = simd_and(tmp14, tmp6);
        tmp15 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp16 = simd_andc(tmp15, tmp4);
        byte_83 = simd_and(tmp9, tmp16);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(1), tmp17));
        sequence_e2_83 = simd_and(tmp17, byte_83);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(2), byte_e2_adv));
        tmp18 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp19 = simd_or(tmp4, tmp18);
        tmp20 = simd_or(basis_bits.bit_3, tmp19);
        tmp21 = simd_not(tmp20);
        tmp22 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp23 = simd_and(tmp22, tmp18);
        tmp24 = simd_and(basis_bits.bit_3, tmp23);
        tmp25 = simd_or(simd_and(basis_bits.bit_2, tmp21), simd_andc(tmp24, basis_bits.bit_2));
        tmp26 = simd_and(tmp7, tmp25);
        tmp27 = simd_and(tmp7, tmp13);
        tmp28 = simd_andc(tmp27, basis_bits.bit_4);
        tmp29 = simd_not(tmp18);
        tmp30 = simd_or(simd_and(basis_bits.bit_5, tmp29), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        tmp31 = simd_and(tmp28, tmp30);
        cc_range_20dd_20e2_3 = simd_or(tmp26, tmp31);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(sequence_e2_83, carryQ.get_carry_in(3), sequence_e2_83_adv));
        tmp32 = simd_and(sequence_e2_83_adv, cc_range_20dd_20e2_3);
        struct_Me.cc = simd_or(struct_Me.cc, tmp32);
        tmp33 = simd_and(tmp10, tmp5);
        byte_ea = simd_and(tmp14, tmp33);
        tmp34 = simd_and(tmp7, tmp2);
        tmp35 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp36 = simd_and(tmp10, tmp35);
        byte_99 = simd_and(tmp34, tmp36);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(byte_ea, carryQ.get_carry_in(4), tmp37));
        sequence_ea_99 = simd_and(tmp37, byte_99);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(byte_ea, carryQ.get_carry_in(5), byte_ea_adv));
        tmp38 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp39 = simd_and(tmp7, tmp38);
        tmp40 = simd_andc(tmp39, tmp4);
        byte_range_b0_b2 = simd_andc(tmp40, tmp15);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(sequence_ea_99, carryQ.get_carry_in(6), sequence_ea_99_adv));
        tmp41 = simd_and(sequence_ea_99_adv, byte_range_b0_b2);
        struct_Me.cc = simd_or(struct_Me.cc, tmp41);
        carryQ.CarryQ_Adjust(7);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Me & struct_Me, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, byte_d2, tmp7, tmp8, tmp9, tmp10;
		BitBlock tmp11, byte_range_88_89, byte_d2_adv, tmp12, tmp13, tmp14, byte_e2;
		BitBlock tmp15, tmp16, byte_83, tmp17, sequence_e2_83, byte_e2_adv, tmp18;
		BitBlock tmp19, tmp20, tmp21, tmp22, tmp23, tmp24, tmp25, tmp26, tmp27, tmp28;
		BitBlock tmp29, tmp30, tmp31, cc_range_20dd_20e2_3, sequence_e2_83_adv, tmp32;
		BitBlock tmp33, byte_ea, tmp34, tmp35, tmp36, byte_99, tmp37, sequence_ea_99;
		BitBlock byte_ea_adv, tmp38, tmp39, tmp40, byte_range_b0_b2;
		BitBlock sequence_ea_99_adv, tmp41;




        struct_Me.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp3 = simd_and(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_andc(tmp5, tmp4);
        byte_d2 = simd_and(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp9 = simd_andc(tmp7, tmp8);
        tmp10 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp11 = simd_andc(tmp10, basis_bits.bit_6);
        byte_range_88_89 = simd_and(tmp9, tmp11);
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(byte_d2, carryQ.get_carry_in(0), byte_d2_adv));
        tmp12 = simd_and(byte_d2_adv, byte_range_88_89);
        struct_Me.cc = simd_or(struct_Me.cc, tmp12);
        tmp13 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp14 = simd_and(tmp1, tmp13);
        byte_e2 = simd_and(tmp14, tmp6);
        tmp15 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp16 = simd_andc(tmp15, tmp4);
        byte_83 = simd_and(tmp9, tmp16);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(1), tmp17));
        sequence_e2_83 = simd_and(tmp17, byte_83);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(2), byte_e2_adv));
        tmp18 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp19 = simd_or(tmp4, tmp18);
        tmp20 = simd_or(basis_bits.bit_3, tmp19);
        tmp21 = simd_not(tmp20);
        tmp22 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp23 = simd_and(tmp22, tmp18);
        tmp24 = simd_and(basis_bits.bit_3, tmp23);
        tmp25 = simd_or(simd_and(basis_bits.bit_2, tmp21), simd_andc(tmp24, basis_bits.bit_2));
        tmp26 = simd_and(tmp7, tmp25);
        tmp27 = simd_and(tmp7, tmp13);
        tmp28 = simd_andc(tmp27, basis_bits.bit_4);
        tmp29 = simd_not(tmp18);
        tmp30 = simd_or(simd_and(basis_bits.bit_5, tmp29), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        tmp31 = simd_and(tmp28, tmp30);
        cc_range_20dd_20e2_3 = simd_or(tmp26, tmp31);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(sequence_e2_83, carryQ.get_carry_in(3), sequence_e2_83_adv));
        tmp32 = simd_and(sequence_e2_83_adv, cc_range_20dd_20e2_3);
        struct_Me.cc = simd_or(struct_Me.cc, tmp32);
        tmp33 = simd_and(tmp10, tmp5);
        byte_ea = simd_and(tmp14, tmp33);
        tmp34 = simd_and(tmp7, tmp2);
        tmp35 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp36 = simd_and(tmp10, tmp35);
        byte_99 = simd_and(tmp34, tmp36);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(byte_ea, carryQ.get_carry_in(4), tmp37));
        sequence_ea_99 = simd_and(tmp37, byte_99);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(byte_ea, carryQ.get_carry_in(5), byte_ea_adv));
        tmp38 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp39 = simd_and(tmp7, tmp38);
        tmp40 = simd_andc(tmp39, tmp4);
        byte_range_b0_b2 = simd_andc(tmp40, tmp15);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(sequence_ea_99, carryQ.get_carry_in(6), sequence_ea_99_adv));
        tmp41 = simd_and(sequence_ea_99_adv, byte_range_b0_b2);
        struct_Me.cc = simd_or(struct_Me.cc, tmp41);
  }
  CarryArray<7, 0> carryQ;
  };

  struct Mc {
  Mc() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Mc & struct_Mc) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, byte_e0, tmp7, tmp8, tmp9, tmp10;
		BitBlock byte_a4, tmp11, sequence_e0_a4, byte_e0_adv, tmp12, tmp13, tmp14;
		BitBlock tmp15, tmp16, tmp17, tmp18, tmp19, tmp20, tmp21, tmp22, tmp23, tmp24;
		BitBlock tmp25, cc_range_903_93e_3, sequence_e0_a4_adv, tmp26, tmp27, tmp28;
		BitBlock byte_a5, sequence_e0_a5, tmp29, tmp30, tmp31, tmp32, tmp33, tmp34;
		BitBlock tmp35, cc_range_940_94e_3, sequence_e0_a5_adv, tmp36, tmp37, tmp38;
		BitBlock byte_a6, sequence_e0_a6, tmp39, tmp40, cc_range_982_9be_3;
		BitBlock sequence_e0_a6_adv, tmp41, tmp42, byte_a7, sequence_e0_a7, tmp43;
		BitBlock tmp44, tmp45, tmp46, tmp47, tmp48, tmp49, tmp50, tmp51, tmp52, tmp53;
		BitBlock tmp54, cc_range_9c0_9d7_3, sequence_e0_a7_adv, tmp55, tmp56, byte_a8;
		BitBlock sequence_e0_a8, cc_range_a03_a3e_3, sequence_e0_a8_adv, tmp57, tmp58;
		BitBlock byte_a9, sequence_e0_a9, byte_80, sequence_e0_a9_adv, tmp59, tmp60;
		BitBlock byte_aa, sequence_e0_aa, cc_range_a83_abe_3, sequence_e0_aa_adv;
		BitBlock tmp61, byte_ab, sequence_e0_ab, tmp62, tmp63, cc_range_ac0_acb_3;
		BitBlock sequence_e0_ab_adv, tmp64, tmp65, byte_ac, sequence_e0_ac, tmp66;
		BitBlock tmp67, cc_range_b02_b3e_3, sequence_e0_ac_adv, tmp68, tmp69, byte_ad;
		BitBlock sequence_e0_ad, cc_range_b40_b57_3, sequence_e0_ad_adv, tmp70;
		BitBlock byte_ae, sequence_e0_ae, byte_range_be_bf, sequence_e0_ae_adv, tmp71;
		BitBlock tmp72, byte_af, sequence_e0_af, tmp73, tmp74, tmp75, tmp76, tmp77;
		BitBlock tmp78, tmp79, tmp80, tmp81, tmp82, tmp83, cc_range_bc1_bd7_3;
		BitBlock sequence_e0_af_adv, tmp84, byte_b0, sequence_e0_b0, byte_range_81_83;
		BitBlock sequence_e0_b0_adv, tmp85, tmp86, byte_b1, sequence_e0_b1, tmp87;
		BitBlock byte_range_81_84, sequence_e0_b1_adv, tmp88, tmp89, byte_b2;
		BitBlock sequence_e0_b2, cc_range_c82_cbe_3, sequence_e0_b2_adv, tmp90;
		BitBlock byte_b3, sequence_e0_b3, tmp91, tmp92, tmp93, tmp94, tmp95, tmp96;
		BitBlock tmp97, tmp98, tmp99, cc_range_cc0_cd5_3, sequence_e0_b3_adv, tmp100;
		BitBlock byte_b4, sequence_e0_b4, cc_range_d02_d3e_3, sequence_e0_b4_adv;
		BitBlock tmp101, byte_b5, sequence_e0_b5, tmp102, tmp103, tmp104;
		BitBlock cc_range_d40_d57_3, sequence_e0_b5_adv, tmp105, byte_b6;
		BitBlock sequence_e0_b6, byte_range_82_83, sequence_e0_b6_adv, tmp106, byte_b7;
		BitBlock sequence_e0_b7, tmp107, tmp108, tmp109, tmp110, tmp111, tmp112;
		BitBlock tmp113, tmp114, cc_range_dcf_df2_3, sequence_e0_b7_adv, tmp115;
		BitBlock byte_bc, sequence_e0_bc, sequence_e0_bc_adv, tmp116, byte_bd;
		BitBlock sequence_e0_bd, byte_bf, sequence_e0_bd_adv, tmp117, byte_e1, tmp118;
		BitBlock sequence_e1_80, byte_e1_adv, tmp119, tmp120, tmp121, tmp122, tmp123;
		BitBlock tmp124, tmp125, cc_range_102b_103b_3, sequence_e1_80_adv, tmp126;
		BitBlock byte_81, sequence_e1_81, tmp127, tmp128, tmp129, tmp130, tmp131;
		BitBlock tmp132, tmp133, tmp134, cc_range_1056_1067_3, sequence_e1_81_adv;
		BitBlock tmp135, byte_82, sequence_e1_82, tmp136, tmp137, tmp138, tmp139;
		BitBlock tmp140, tmp141, tmp142, tmp143, cc_range_1083_109a_3;
		BitBlock sequence_e1_82_adv, tmp144, byte_9e, sequence_e1_9e, tmp145;
		BitBlock cc_range_17b6_17be_3, sequence_e1_9e_adv, tmp146, byte_9f;
		BitBlock sequence_e1_9f, tmp147, cc_range_17c0_17c7_3, sequence_e1_9f_adv;
		BitBlock tmp148, sequence_e1_a4, tmp149, tmp150, tmp151, tmp152, tmp153;
		BitBlock tmp154, tmp155, tmp156, tmp157, tmp158, tmp159, cc_range_1923_1933_3;
		BitBlock sequence_e1_a4_adv, tmp160, sequence_e1_a6, byte_range_b0_bf;
		BitBlock sequence_e1_a6_adv, tmp161, sequence_e1_a7, tmp162, tmp163;
		BitBlock cc_range_19c0_19c8_3, sequence_e1_a7_adv, tmp164, sequence_e1_a8;
		BitBlock tmp165, byte_range_99_9a, sequence_e1_a8_adv, tmp166, sequence_e1_a9;
		BitBlock tmp167, tmp168, tmp169, tmp170, tmp171, tmp172, tmp173, tmp174;
		BitBlock tmp175, tmp176, tmp177, tmp178, cc_range_1a55_1a6d_3;
		BitBlock sequence_e1_a9_adv, tmp179, sequence_e1_ac, tmp180, tmp181, tmp182;
		BitBlock tmp183, tmp184, tmp185, tmp186, cc_range_1b04_1b3d_3;
		BitBlock sequence_e1_ac_adv, tmp187, sequence_e1_ad, tmp188;
		BitBlock cc_range_1b40_1b43_3, sequence_e1_ad_adv, tmp189, sequence_e1_ae;
		BitBlock tmp190, tmp191, tmp192, tmp193, tmp194, tmp195, cc_range_1b82_1bac_3;
		BitBlock sequence_e1_ae_adv, tmp196, sequence_e1_af, tmp197, tmp198, tmp199;
		BitBlock tmp200, cc_range_1be7_1bf2_3, sequence_e1_af_adv, tmp201;
		BitBlock sequence_e1_b0, tmp202, tmp203, tmp204, tmp205, tmp206;
		BitBlock cc_range_1c24_1c34_3, sequence_e1_b0_adv, tmp207, sequence_e1_b3;
		BitBlock cc_range_1ce1_1cf2_3, sequence_e1_b3_adv, tmp208, byte_e3, tmp209;
		BitBlock sequence_e3_80, byte_e3_adv, byte_range_ae_af, sequence_e3_80_adv;
		BitBlock tmp210, byte_ea, byte_a0, tmp211, sequence_ea_a0, byte_ea_adv;
		BitBlock cc_range_a823_a827_3, sequence_ea_a0_adv, tmp212, byte_a2;
		BitBlock sequence_ea_a2, tmp213, cc_range_a880_a8b4_3, sequence_ea_a2_adv;
		BitBlock tmp214, byte_a3, sequence_ea_a3, byte_range_80_83, sequence_ea_a3_adv;
		BitBlock tmp215, sequence_ea_a5, byte_range_92_93, sequence_ea_a5_adv, tmp216;
		BitBlock sequence_ea_a6, tmp217, tmp218, tmp219, cc_range_a983_a9bd_3;
		BitBlock sequence_ea_a6_adv, tmp220, sequence_ea_a7, sequence_ea_a7_adv;
		BitBlock tmp221, sequence_ea_a8, tmp222, tmp223, tmp224, tmp225, tmp226;
		BitBlock cc_range_aa2f_aa33_3, sequence_ea_a8_adv, tmp227, sequence_ea_a9;
		BitBlock tmp228, cc_range_aa4d_aa7b_3, sequence_ea_a9_adv, tmp229;
		BitBlock sequence_ea_ab, tmp230, tmp231, cc_range_aaeb_aaf5_3;
		BitBlock sequence_ea_ab_adv, tmp232, sequence_ea_af, tmp233, tmp234, tmp235;
		BitBlock cc_range_abe3_abec_3, sequence_ea_af_adv, tmp236, tmp237, byte_f0;
		BitBlock byte_91, tmp238, sequence_f0_91, byte_f0_adv, tmp239;
		BitBlock sequence_f0_91_80, sequence_f0_91_adv, tmp240, cc_range_11000_11002_4;
		BitBlock sequence_f0_91_80_adv, tmp241, sequence_f0_91_82, tmp242, tmp243;
		BitBlock tmp244, tmp245, cc_range_11082_110b7_4, sequence_f0_91_82_adv, tmp246;
		BitBlock byte_84, sequence_f0_91_84, sequence_f0_91_84_adv, tmp247, byte_86;
		BitBlock sequence_f0_91_86, tmp248, tmp249, tmp250, tmp251, tmp252;
		BitBlock cc_range_11182_111bf_4, sequence_f0_91_86_adv, tmp253, byte_87;
		BitBlock sequence_f0_91_87, sequence_f0_91_87_adv, tmp254, byte_9a;
		BitBlock sequence_f0_91_9a, tmp255, tmp256, tmp257, tmp258;
		BitBlock cc_range_116ac_116b6_4, sequence_f0_91_9a_adv, tmp259, byte_96;
		BitBlock sequence_f0_96, tmp260, sequence_f0_96_bd, sequence_f0_96_adv, tmp261;
		BitBlock tmp262, tmp263, tmp264, byte_range_91_be, sequence_f0_96_bd_adv;
		BitBlock tmp265, byte_9d, sequence_f0_9d, byte_85, tmp266, sequence_f0_9d_85;
		BitBlock sequence_f0_9d_adv, tmp267, tmp268, cc_range_1d165_1d16d_4;
		BitBlock sequence_f0_9d_85_adv, tmp269;




        struct_Mc.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_and(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_or(tmp4, tmp5);
        byte_e0 = simd_andc(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_and(tmp7, tmp2);
        tmp9 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp10 = simd_andc(tmp9, tmp5);
        byte_a4 = simd_and(tmp8, tmp10);
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(byte_e0, carryQ.get_carry_in(0), tmp11));
        sequence_e0_a4 = simd_and(tmp11, byte_a4);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(byte_e0, carryQ.get_carry_in(1), byte_e0_adv));
        tmp12 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp13 = simd_andc(tmp7, tmp12);
        tmp14 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp15 = simd_andc(tmp14, tmp4);
        tmp16 = simd_and(tmp13, tmp15);
        tmp17 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp18 = simd_and(tmp7, tmp17);
        tmp19 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp20 = simd_and(tmp19, tmp14);
        tmp21 = simd_and(tmp18, tmp20);
        tmp22 = simd_or(tmp16, tmp21);
        tmp23 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp24 = simd_and(tmp23, basis_bits.bit_6);
        tmp25 = simd_and(tmp18, tmp24);
        cc_range_903_93e_3 = simd_or(tmp22, tmp25);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(sequence_e0_a4, carryQ.get_carry_in(2), sequence_e0_a4_adv));
        tmp26 = simd_and(sequence_e0_a4_adv, cc_range_903_93e_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp26);
        tmp27 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp28 = simd_and(tmp9, tmp27);
        byte_a5 = simd_and(tmp8, tmp28);
        sequence_e0_a5 = simd_and(byte_e0_adv, byte_a5);
        tmp29 = simd_andc(tmp13, tmp6);
        tmp30 = simd_and(tmp13, basis_bits.bit_4);
        tmp31 = simd_not(tmp5);
        tmp32 = simd_or(simd_and(basis_bits.bit_5, tmp31), simd_andc(tmp5, basis_bits.bit_5));
        tmp33 = simd_and(tmp30, tmp32);
        tmp34 = simd_or(tmp29, tmp33);
        tmp35 = simd_and(tmp13, tmp24);
        cc_range_940_94e_3 = simd_or(tmp34, tmp35);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(sequence_e0_a5, carryQ.get_carry_in(3), sequence_e0_a5_adv));
        tmp36 = simd_and(sequence_e0_a5_adv, cc_range_940_94e_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp36);
        tmp37 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp38 = simd_and(tmp9, tmp37);
        byte_a6 = simd_and(tmp8, tmp38);
        sequence_e0_a6 = simd_and(byte_e0_adv, byte_a6);
        tmp39 = simd_andc(basis_bits.bit_6, tmp4);
        tmp40 = simd_and(tmp13, tmp39);
        cc_range_982_9be_3 = simd_or(tmp40, tmp25);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(sequence_e0_a6, carryQ.get_carry_in(4), sequence_e0_a6_adv));
        tmp41 = simd_and(sequence_e0_a6_adv, cc_range_982_9be_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp41);
        tmp42 = simd_and(tmp9, tmp14);
        byte_a7 = simd_and(tmp8, tmp42);
        sequence_e0_a7 = simd_and(byte_e0_adv, byte_a7);
        tmp43 = simd_or(basis_bits.bit_5, tmp5);
        tmp44 = simd_not(tmp43);
        tmp45 = simd_and(basis_bits.bit_5, tmp14);
        tmp46 = simd_or(simd_and(basis_bits.bit_4, tmp44), simd_andc(tmp45, basis_bits.bit_4));
        tmp47 = simd_andc(tmp6, tmp46);
        tmp48 = simd_andc(tmp13, tmp47);
        tmp49 = simd_or(simd_and(basis_bits.bit_5, tmp31), simd_andc(tmp14, basis_bits.bit_5));
        tmp50 = simd_and(tmp30, tmp49);
        tmp51 = simd_or(tmp48, tmp50);
        tmp52 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp53 = simd_and(tmp7, tmp52);
        tmp54 = simd_and(tmp53, tmp42);
        cc_range_9c0_9d7_3 = simd_or(tmp51, tmp54);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(sequence_e0_a7, carryQ.get_carry_in(5), sequence_e0_a7_adv));
        tmp55 = simd_and(sequence_e0_a7_adv, cc_range_9c0_9d7_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp55);
        tmp56 = simd_andc(tmp19, tmp5);
        byte_a8 = simd_and(tmp8, tmp56);
        sequence_e0_a8 = simd_and(byte_e0_adv, byte_a8);
        cc_range_a03_a3e_3 = simd_or(tmp16, tmp25);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(sequence_e0_a8, carryQ.get_carry_in(6), sequence_e0_a8_adv));
        tmp57 = simd_and(sequence_e0_a8_adv, cc_range_a03_a3e_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp57);
        tmp58 = simd_and(tmp19, tmp27);
        byte_a9 = simd_and(tmp8, tmp58);
        sequence_e0_a9 = simd_and(byte_e0_adv, byte_a9);
        byte_80 = simd_andc(tmp13, tmp6);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(sequence_e0_a9, carryQ.get_carry_in(7), sequence_e0_a9_adv));
        tmp59 = simd_and(sequence_e0_a9_adv, byte_80);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp59);
        tmp60 = simd_and(tmp19, tmp37);
        byte_aa = simd_and(tmp8, tmp60);
        sequence_e0_aa = simd_and(byte_e0_adv, byte_aa);
        cc_range_a83_abe_3 = simd_or(tmp16, tmp25);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(sequence_e0_aa, carryQ.get_carry_in(8), sequence_e0_aa_adv));
        tmp61 = simd_and(sequence_e0_aa_adv, cc_range_a83_abe_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp61);
        byte_ab = simd_and(tmp8, tmp20);
        sequence_e0_ab = simd_and(byte_e0_adv, byte_ab);
        tmp62 = simd_andc(tmp6, tmp58);
        tmp63 = simd_andc(tmp13, tmp62);
        cc_range_ac0_acb_3 = simd_or(tmp63, tmp50);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(sequence_e0_ab, carryQ.get_carry_in(9), sequence_e0_ab_adv));
        tmp64 = simd_and(sequence_e0_ab_adv, cc_range_ac0_acb_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp64);
        tmp65 = simd_andc(tmp23, tmp5);
        byte_ac = simd_and(tmp8, tmp65);
        sequence_e0_ac = simd_and(byte_e0_adv, byte_ac);
        tmp66 = simd_and(tmp23, tmp37);
        tmp67 = simd_and(tmp18, tmp66);
        cc_range_b02_b3e_3 = simd_or(tmp40, tmp67);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(sequence_e0_ac, carryQ.get_carry_in(10), sequence_e0_ac_adv));
        tmp68 = simd_and(sequence_e0_ac_adv, cc_range_b02_b3e_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp68);
        tmp69 = simd_and(tmp23, tmp27);
        byte_ad = simd_and(tmp8, tmp69);
        sequence_e0_ad = simd_and(byte_e0_adv, byte_ad);
        cc_range_b40_b57_3 = simd_or(tmp51, tmp54);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(sequence_e0_ad, carryQ.get_carry_in(11), sequence_e0_ad_adv));
        tmp70 = simd_and(sequence_e0_ad_adv, cc_range_b40_b57_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp70);
        byte_ae = simd_and(tmp8, tmp66);
        sequence_e0_ae = simd_and(byte_e0_adv, byte_ae);
        byte_range_be_bf = simd_and(tmp18, tmp24);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(sequence_e0_ae, carryQ.get_carry_in(12), sequence_e0_ae_adv));
        tmp71 = simd_and(sequence_e0_ae_adv, byte_range_be_bf);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp71);
        tmp72 = simd_and(tmp23, tmp14);
        byte_af = simd_and(tmp8, tmp72);
        sequence_e0_af = simd_and(byte_e0_adv, byte_af);
        tmp73 = simd_andc(tmp13, tmp4);
        tmp74 = simd_not(basis_bits.bit_7);
        tmp75 = simd_or(simd_and(basis_bits.bit_6, tmp74), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
        tmp76 = simd_and(tmp73, tmp75);
        tmp77 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp78 = simd_or(simd_and(basis_bits.bit_4, tmp44), simd_andc(tmp77, basis_bits.bit_4));
        tmp79 = simd_and(tmp13, tmp78);
        tmp80 = simd_or(tmp76, tmp79);
        tmp81 = simd_or(simd_and(basis_bits.bit_5, tmp31), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        tmp82 = simd_and(tmp30, tmp81);
        tmp83 = simd_or(tmp80, tmp82);
        cc_range_bc1_bd7_3 = simd_or(tmp83, tmp54);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(sequence_e0_af, carryQ.get_carry_in(13), sequence_e0_af_adv));
        tmp84 = simd_and(sequence_e0_af_adv, cc_range_bc1_bd7_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp84);
        byte_b0 = simd_andc(tmp18, tmp6);
        sequence_e0_b0 = simd_and(byte_e0_adv, byte_b0);
        byte_range_81_83 = simd_and(tmp73, tmp5);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(sequence_e0_b0, carryQ.get_carry_in(14), sequence_e0_b0_adv));
        tmp85 = simd_and(sequence_e0_b0_adv, byte_range_81_83);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp85);
        tmp86 = simd_andc(tmp27, tmp4);
        byte_b1 = simd_and(tmp18, tmp86);
        sequence_e0_b1 = simd_and(byte_e0_adv, byte_b1);
        tmp87 = simd_andc(tmp13, basis_bits.bit_4);
        byte_range_81_84 = simd_and(tmp87, tmp32);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(sequence_e0_b1, carryQ.get_carry_in(15), sequence_e0_b1_adv));
        tmp88 = simd_and(sequence_e0_b1_adv, byte_range_81_84);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp88);
        tmp89 = simd_andc(tmp37, tmp4);
        byte_b2 = simd_and(tmp18, tmp89);
        sequence_e0_b2 = simd_and(byte_e0_adv, byte_b2);
        cc_range_c82_cbe_3 = simd_or(tmp40, tmp67);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(sequence_e0_b2, carryQ.get_carry_in(16), sequence_e0_b2_adv));
        tmp90 = simd_and(sequence_e0_b2_adv, cc_range_c82_cbe_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp90);
        byte_b3 = simd_and(tmp18, tmp15);
        sequence_e0_b3 = simd_and(byte_e0_adv, byte_b3);
        tmp91 = simd_and(basis_bits.bit_5, tmp5);
        tmp92 = simd_andc(tmp87, tmp91);
        tmp93 = simd_and(tmp13, tmp46);
        tmp94 = simd_or(tmp92, tmp93);
        tmp95 = simd_and(tmp19, basis_bits.bit_6);
        tmp96 = simd_and(tmp13, tmp95);
        tmp97 = simd_or(tmp94, tmp96);
        tmp98 = simd_and(tmp53, tmp9);
        tmp99 = simd_and(tmp98, tmp75);
        cc_range_cc0_cd5_3 = simd_or(tmp97, tmp99);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(sequence_e0_b3, carryQ.get_carry_in(17), sequence_e0_b3_adv));
        tmp100 = simd_and(sequence_e0_b3_adv, cc_range_cc0_cd5_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp100);
        byte_b4 = simd_and(tmp18, tmp10);
        sequence_e0_b4 = simd_and(byte_e0_adv, byte_b4);
        cc_range_d02_d3e_3 = simd_or(tmp40, byte_range_be_bf);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(sequence_e0_b4, carryQ.get_carry_in(18), sequence_e0_b4_adv));
        tmp101 = simd_and(sequence_e0_b4_adv, cc_range_d02_d3e_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp101);
        byte_b5 = simd_and(tmp18, tmp28);
        sequence_e0_b5 = simd_and(byte_e0_adv, byte_b5);
        tmp102 = simd_andc(tmp6, tmp78);
        tmp103 = simd_andc(tmp13, tmp102);
        tmp104 = simd_or(tmp103, tmp82);
        cc_range_d40_d57_3 = simd_or(tmp104, tmp54);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(sequence_e0_b5, carryQ.get_carry_in(19), sequence_e0_b5_adv));
        tmp105 = simd_and(sequence_e0_b5_adv, cc_range_d40_d57_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp105);
        byte_b6 = simd_and(tmp18, tmp38);
        sequence_e0_b6 = simd_and(byte_e0_adv, byte_b6);
        byte_range_82_83 = simd_and(tmp13, tmp39);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(sequence_e0_b6, carryQ.get_carry_in(20), sequence_e0_b6_adv));
        tmp106 = simd_and(sequence_e0_b6_adv, byte_range_82_83);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp106);
        byte_b7 = simd_and(tmp18, tmp42);
        sequence_e0_b7 = simd_and(byte_e0_adv, byte_b7);
        tmp107 = simd_andc(tmp7, basis_bits.bit_2);
        tmp108 = simd_or(tmp4, basis_bits.bit_6);
        tmp109 = simd_not(tmp108);
        tmp110 = simd_or(simd_and(basis_bits.bit_3, tmp109), simd_andc(tmp72, basis_bits.bit_3));
        tmp111 = simd_and(tmp107, tmp110);
        tmp112 = simd_and(tmp53, basis_bits.bit_4);
        tmp113 = simd_or(tmp111, tmp112);
        tmp114 = simd_and(tmp18, tmp39);
        cc_range_dcf_df2_3 = simd_or(tmp113, tmp114);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(sequence_e0_b7, carryQ.get_carry_in(21), sequence_e0_b7_adv));
        tmp115 = simd_and(sequence_e0_b7_adv, cc_range_dcf_df2_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp115);
        byte_bc = simd_and(tmp18, tmp65);
        sequence_e0_bc = simd_and(byte_e0_adv, byte_bc);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(sequence_e0_bc, carryQ.get_carry_in(22), sequence_e0_bc_adv));
        tmp116 = simd_and(sequence_e0_bc_adv, byte_range_be_bf);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp116);
        byte_bd = simd_and(tmp18, tmp69);
        sequence_e0_bd = simd_and(byte_e0_adv, byte_bd);
        byte_bf = simd_and(tmp18, tmp72);
        carryQ.cq[23] = carryout2carry(pablo_blk_Advance(sequence_e0_bd, carryQ.get_carry_in(23), sequence_e0_bd_adv));
        tmp117 = simd_and(sequence_e0_bd_adv, byte_bf);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp117);
        byte_e1 = simd_and(tmp3, tmp86);
        carryQ.cq[24] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(24), tmp118));
        sequence_e1_80 = simd_and(tmp118, byte_80);
        carryQ.cq[25] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(25), byte_e1_adv));
        tmp119 = simd_and(tmp8, basis_bits.bit_4);
        tmp120 = simd_and(tmp119, tmp49);
        tmp121 = simd_or(tmp120, byte_b1);
        tmp122 = simd_and(tmp18, tmp56);
        tmp123 = simd_or(tmp121, tmp122);
        tmp124 = simd_and(tmp18, basis_bits.bit_4);
        tmp125 = simd_and(tmp124, tmp49);
        cc_range_102b_103b_3 = simd_or(tmp123, tmp125);
        carryQ.cq[26] = carryout2carry(pablo_blk_Advance(sequence_e1_80, carryQ.get_carry_in(26), sequence_e1_80_adv));
        tmp126 = simd_and(sequence_e1_80_adv, cc_range_102b_103b_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp126);
        byte_81 = simd_and(tmp13, tmp86);
        sequence_e1_81 = simd_and(byte_e1_adv, byte_81);
        tmp127 = simd_and(tmp9, basis_bits.bit_6);
        tmp128 = simd_and(tmp53, tmp127);
        tmp129 = simd_andc(tmp8, basis_bits.bit_4);
        tmp130 = simd_and(tmp129, tmp81);
        tmp131 = simd_or(tmp128, tmp130);
        tmp132 = simd_not(tmp77);
        tmp133 = simd_or(simd_and(basis_bits.bit_4, tmp132), simd_andc(tmp45, basis_bits.bit_4));
        tmp134 = simd_and(tmp8, tmp133);
        cc_range_1056_1067_3 = simd_or(tmp131, tmp134);
        carryQ.cq[27] = carryout2carry(pablo_blk_Advance(sequence_e1_81, carryQ.get_carry_in(27), sequence_e1_81_adv));
        tmp135 = simd_and(sequence_e1_81_adv, cc_range_1056_1067_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp135);
        byte_82 = simd_and(tmp13, tmp89);
        sequence_e1_82 = simd_and(byte_e1_adv, byte_82);
        tmp136 = simd_and(tmp87, tmp49);
        tmp137 = simd_not(tmp91);
        tmp138 = simd_or(simd_and(basis_bits.bit_4, tmp137), simd_andc(tmp45, basis_bits.bit_4));
        tmp139 = simd_and(tmp13, tmp138);
        tmp140 = simd_or(tmp136, tmp139);
        tmp141 = simd_and(tmp13, tmp72);
        tmp142 = simd_or(tmp140, tmp141);
        tmp143 = simd_and(tmp112, tmp81);
        cc_range_1083_109a_3 = simd_or(tmp142, tmp143);
        carryQ.cq[28] = carryout2carry(pablo_blk_Advance(sequence_e1_82, carryQ.get_carry_in(28), sequence_e1_82_adv));
        tmp144 = simd_and(sequence_e1_82_adv, cc_range_1083_109a_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp144);
        byte_9e = simd_and(tmp53, tmp66);
        sequence_e1_9e = simd_and(byte_e1_adv, byte_9e);
        tmp145 = simd_or(tmp38, tmp24);
        cc_range_17b6_17be_3 = simd_and(tmp18, tmp145);
        carryQ.cq[29] = carryout2carry(pablo_blk_Advance(sequence_e1_9e, carryQ.get_carry_in(29), sequence_e1_9e_adv));
        tmp146 = simd_and(sequence_e1_9e_adv, cc_range_17b6_17be_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp146);
        byte_9f = simd_and(tmp53, tmp72);
        sequence_e1_9f = simd_and(byte_e1_adv, byte_9f);
        tmp147 = simd_andc(tmp87, tmp77);
        cc_range_17c0_17c7_3 = simd_or(tmp147, tmp93);
        carryQ.cq[30] = carryout2carry(pablo_blk_Advance(sequence_e1_9f, carryQ.get_carry_in(30), sequence_e1_9f_adv));
        tmp148 = simd_and(sequence_e1_9f_adv, cc_range_17c0_17c7_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp148);
        sequence_e1_a4 = simd_and(byte_e1_adv, byte_a4);
        tmp149 = simd_not(tmp14);
        tmp150 = simd_or(simd_and(basis_bits.bit_5, tmp149), simd_andc(tmp14, basis_bits.bit_5));
        tmp151 = simd_and(tmp129, tmp150);
        tmp152 = simd_and(tmp8, tmp19);
        tmp153 = simd_and(tmp152, tmp5);
        tmp154 = simd_or(tmp151, tmp153);
        tmp155 = simd_andc(tmp18, tmp108);
        tmp156 = simd_or(tmp154, tmp155);
        tmp157 = simd_or(basis_bits.bit_5, tmp14);
        tmp158 = simd_or(simd_and(basis_bits.bit_4, tmp44), simd_andc(tmp157, basis_bits.bit_4));
        tmp159 = simd_and(tmp18, tmp158);
        cc_range_1923_1933_3 = simd_or(tmp156, tmp159);
        carryQ.cq[31] = carryout2carry(pablo_blk_Advance(sequence_e1_a4, carryQ.get_carry_in(31), sequence_e1_a4_adv));
        tmp160 = simd_and(sequence_e1_a4_adv, cc_range_1923_1933_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp160);
        sequence_e1_a6 = simd_and(byte_e1_adv, byte_a6);
        byte_range_b0_bf = simd_and(tmp7, tmp17);
        carryQ.cq[32] = carryout2carry(pablo_blk_Advance(sequence_e1_a6, carryQ.get_carry_in(32), sequence_e1_a6_adv));
        tmp161 = simd_and(sequence_e1_a6_adv, byte_range_b0_bf);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp161);
        sequence_e1_a7 = simd_and(byte_e1_adv, byte_a7);
        tmp162 = simd_andc(tmp19, basis_bits.bit_6);
        tmp163 = simd_andc(tmp6, tmp162);
        cc_range_19c0_19c8_3 = simd_andc(tmp13, tmp163);
        carryQ.cq[33] = carryout2carry(pablo_blk_Advance(sequence_e1_a7, carryQ.get_carry_in(33), sequence_e1_a7_adv));
        tmp164 = simd_and(sequence_e1_a7_adv, cc_range_19c0_19c8_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp164);
        sequence_e1_a8 = simd_and(byte_e1_adv, byte_a8);
        tmp165 = simd_and(tmp53, tmp19);
        byte_range_99_9a = simd_and(tmp165, tmp75);
        carryQ.cq[34] = carryout2carry(pablo_blk_Advance(sequence_e1_a8, carryQ.get_carry_in(34), sequence_e1_a8_adv));
        tmp166 = simd_and(sequence_e1_a8_adv, byte_range_99_9a);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp166);
        sequence_e1_a9 = simd_and(byte_e1_adv, byte_a9);
        tmp167 = simd_and(tmp9, basis_bits.bit_7);
        tmp168 = simd_and(tmp53, tmp167);
        tmp169 = simd_and(tmp8, tmp86);
        tmp170 = simd_or(tmp168, tmp169);
        tmp171 = simd_and(tmp129, tmp49);
        tmp172 = simd_or(tmp170, tmp171);
        tmp173 = simd_and(tmp7, basis_bits.bit_2);
        tmp174 = simd_or(tmp4, tmp14);
        tmp175 = simd_not(tmp174);
        tmp176 = simd_and(tmp23, tmp5);
        tmp177 = simd_or(simd_and(basis_bits.bit_3, tmp175), simd_andc(tmp176, basis_bits.bit_3));
        tmp178 = simd_and(tmp173, tmp177);
        cc_range_1a55_1a6d_3 = simd_or(tmp172, tmp178);
        carryQ.cq[35] = carryout2carry(pablo_blk_Advance(sequence_e1_a9, carryQ.get_carry_in(35), sequence_e1_a9_adv));
        tmp179 = simd_and(sequence_e1_a9_adv, cc_range_1a55_1a6d_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp179);
        sequence_e1_ac = simd_and(byte_e1_adv, byte_ac);
        tmp180 = simd_and(tmp13, tmp10);
        tmp181 = simd_and(byte_range_b0_bf, tmp28);
        tmp182 = simd_or(tmp180, tmp181);
        tmp183 = simd_and(byte_range_b0_bf, tmp20);
        tmp184 = simd_or(tmp182, tmp183);
        tmp185 = simd_and(byte_range_b0_bf, tmp23);
        tmp186 = simd_and(tmp185, tmp5);
        cc_range_1b04_1b3d_3 = simd_or(tmp184, tmp186);
        carryQ.cq[36] = carryout2carry(pablo_blk_Advance(sequence_e1_ac, carryQ.get_carry_in(36), sequence_e1_ac_adv));
        tmp187 = simd_and(sequence_e1_ac_adv, cc_range_1b04_1b3d_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp187);
        sequence_e1_ad = simd_and(byte_e1_adv, byte_ad);
        tmp188 = simd_andc(tmp13, tmp108);
        cc_range_1b40_1b43_3 = simd_or(tmp188, tmp136);
        carryQ.cq[37] = carryout2carry(pablo_blk_Advance(sequence_e1_ad, carryQ.get_carry_in(37), sequence_e1_ad_adv));
        tmp189 = simd_and(sequence_e1_ad_adv, cc_range_1b40_1b43_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp189);
        sequence_e1_ae = simd_and(byte_e1_adv, byte_ae);
        tmp190 = simd_or(byte_82, tmp169);
        tmp191 = simd_and(tmp8, tmp127);
        tmp192 = simd_or(tmp190, tmp191);
        tmp193 = simd_or(tmp192, byte_aa);
        tmp194 = simd_andc(tmp23, basis_bits.bit_6);
        tmp195 = simd_and(tmp8, tmp194);
        cc_range_1b82_1bac_3 = simd_or(tmp193, tmp195);
        carryQ.cq[38] = carryout2carry(pablo_blk_Advance(sequence_e1_ae, carryQ.get_carry_in(38), sequence_e1_ae_adv));
        tmp196 = simd_and(sequence_e1_ae_adv, cc_range_1b82_1bac_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp196);
        sequence_e1_af = simd_and(byte_e1_adv, byte_af);
        tmp197 = simd_and(tmp119, tmp81);
        tmp198 = simd_or(byte_a7, tmp197);
        tmp199 = simd_or(tmp198, byte_ae);
        tmp200 = simd_and(byte_range_b0_bf, tmp39);
        cc_range_1be7_1bf2_3 = simd_or(tmp199, tmp200);
        carryQ.cq[39] = carryout2carry(pablo_blk_Advance(sequence_e1_af, carryQ.get_carry_in(39), sequence_e1_af_adv));
        tmp201 = simd_and(sequence_e1_af_adv, cc_range_1be7_1bf2_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp201);
        sequence_e1_b0 = simd_and(byte_e1_adv, byte_b0);
        tmp202 = simd_not(basis_bits.bit_5);
        tmp203 = simd_or(simd_and(basis_bits.bit_4, tmp202), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
        tmp204 = simd_and(tmp8, tmp203);
        tmp205 = simd_andc(tmp9, basis_bits.bit_6);
        tmp206 = simd_and(byte_range_b0_bf, tmp205);
        cc_range_1c24_1c34_3 = simd_or(tmp204, tmp206);
        carryQ.cq[40] = carryout2carry(pablo_blk_Advance(sequence_e1_b0, carryQ.get_carry_in(40), sequence_e1_b0_adv));
        tmp207 = simd_and(sequence_e1_b0_adv, cc_range_1c24_1c34_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp207);
        sequence_e1_b3 = simd_and(byte_e1_adv, byte_b3);
        cc_range_1ce1_1cf2_3 = simd_or(tmp169, tmp200);
        carryQ.cq[41] = carryout2carry(pablo_blk_Advance(sequence_e1_b3, carryQ.get_carry_in(41), sequence_e1_b3_adv));
        tmp208 = simd_and(sequence_e1_b3_adv, cc_range_1ce1_1cf2_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp208);
        byte_e3 = simd_and(tmp3, tmp15);
        carryQ.cq[42] = carryout2carry(pablo_blk_Advance(byte_e3, carryQ.get_carry_in(42), tmp209));
        sequence_e3_80 = simd_and(tmp209, byte_80);
        carryQ.cq[43] = carryout2carry(pablo_blk_Advance(byte_e3, carryQ.get_carry_in(43), byte_e3_adv));
        byte_range_ae_af = simd_and(tmp8, tmp24);
        carryQ.cq[44] = carryout2carry(pablo_blk_Advance(sequence_e3_80, carryQ.get_carry_in(44), sequence_e3_80_adv));
        tmp210 = simd_and(sequence_e3_80_adv, byte_range_ae_af);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp210);
        byte_ea = simd_and(tmp3, tmp60);
        byte_a0 = simd_andc(tmp8, tmp6);
        carryQ.cq[45] = carryout2carry(pablo_blk_Advance(byte_ea, carryQ.get_carry_in(45), tmp211));
        sequence_ea_a0 = simd_and(tmp211, byte_a0);
        carryQ.cq[46] = carryout2carry(pablo_blk_Advance(byte_ea, carryQ.get_carry_in(46), byte_ea_adv));
        cc_range_a823_a827_3 = simd_or(tmp171, byte_a7);
        carryQ.cq[47] = carryout2carry(pablo_blk_Advance(sequence_ea_a0, carryQ.get_carry_in(47), sequence_ea_a0_adv));
        tmp212 = simd_and(sequence_ea_a0_adv, cc_range_a823_a827_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp212);
        byte_a2 = simd_and(tmp8, tmp89);
        sequence_ea_a2 = simd_and(byte_ea_adv, byte_a2);
        tmp213 = simd_and(byte_range_b0_bf, tmp4);
        cc_range_a880_a8b4_3 = simd_or(tmp188, tmp213);
        carryQ.cq[48] = carryout2carry(pablo_blk_Advance(sequence_ea_a2, carryQ.get_carry_in(48), sequence_ea_a2_adv));
        tmp214 = simd_and(sequence_ea_a2_adv, cc_range_a880_a8b4_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp214);
        byte_a3 = simd_and(tmp8, tmp15);
        sequence_ea_a3 = simd_and(byte_ea_adv, byte_a3);
        byte_range_80_83 = simd_andc(tmp13, tmp4);
        carryQ.cq[49] = carryout2carry(pablo_blk_Advance(sequence_ea_a3, carryQ.get_carry_in(49), sequence_ea_a3_adv));
        tmp215 = simd_and(sequence_ea_a3_adv, byte_range_80_83);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp215);
        sequence_ea_a5 = simd_and(byte_ea_adv, byte_a5);
        byte_range_92_93 = simd_and(tmp53, tmp39);
        carryQ.cq[50] = carryout2carry(pablo_blk_Advance(sequence_ea_a5, carryQ.get_carry_in(50), sequence_ea_a5_adv));
        tmp216 = simd_and(sequence_ea_a5_adv, byte_range_92_93);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp216);
        sequence_ea_a6 = simd_and(byte_ea_adv, byte_a6);
        tmp217 = simd_or(tmp16, tmp206);
        tmp218 = simd_and(byte_range_b0_bf, tmp95);
        tmp219 = simd_or(tmp217, tmp218);
        cc_range_a983_a9bd_3 = simd_or(tmp219, tmp186);
        carryQ.cq[51] = carryout2carry(pablo_blk_Advance(sequence_ea_a6, carryQ.get_carry_in(51), sequence_ea_a6_adv));
        tmp220 = simd_and(sequence_ea_a6_adv, cc_range_a983_a9bd_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp220);
        sequence_ea_a7 = simd_and(byte_ea_adv, byte_a7);
        carryQ.cq[52] = carryout2carry(pablo_blk_Advance(sequence_ea_a7, carryQ.get_carry_in(52), sequence_ea_a7_adv));
        tmp221 = simd_and(sequence_ea_a7_adv, byte_80);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp221);
        sequence_ea_a8 = simd_and(byte_ea_adv, byte_a8);
        tmp222 = simd_not(tmp6);
        tmp223 = simd_or(simd_and(basis_bits.bit_3, tmp222), simd_andc(tmp72, basis_bits.bit_3));
        tmp224 = simd_and(tmp173, tmp223);
        tmp225 = simd_andc(byte_range_b0_bf, basis_bits.bit_4);
        tmp226 = simd_and(tmp225, tmp49);
        cc_range_aa2f_aa33_3 = simd_or(tmp224, tmp226);
        carryQ.cq[53] = carryout2carry(pablo_blk_Advance(sequence_ea_a8, carryQ.get_carry_in(53), sequence_ea_a8_adv));
        tmp227 = simd_and(sequence_ea_a8_adv, cc_range_aa2f_aa33_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp227);
        sequence_ea_a9 = simd_and(byte_ea_adv, byte_a9);
        tmp228 = simd_and(tmp13, tmp69);
        cc_range_aa4d_aa7b_3 = simd_or(tmp228, tmp183);
        carryQ.cq[54] = carryout2carry(pablo_blk_Advance(sequence_ea_a9, carryQ.get_carry_in(54), sequence_ea_a9_adv));
        tmp229 = simd_and(sequence_ea_a9_adv, cc_range_aa4d_aa7b_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp229);
        sequence_ea_ab = simd_and(byte_ea_adv, byte_ab);
        tmp230 = simd_or(tmp20, tmp24);
        tmp231 = simd_and(tmp8, tmp230);
        cc_range_aaeb_aaf5_3 = simd_or(tmp231, tmp181);
        carryQ.cq[55] = carryout2carry(pablo_blk_Advance(sequence_ea_ab, carryQ.get_carry_in(55), sequence_ea_ab_adv));
        tmp232 = simd_and(sequence_ea_ab_adv, cc_range_aaeb_aaf5_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp232);
        sequence_ea_af = simd_and(byte_ea_adv, byte_af);
        tmp233 = simd_or(tmp171, tmp191);
        tmp234 = simd_and(tmp152, tmp75);
        tmp235 = simd_or(tmp233, tmp234);
        cc_range_abe3_abec_3 = simd_or(tmp235, byte_ac);
        carryQ.cq[56] = carryout2carry(pablo_blk_Advance(sequence_ea_af, carryQ.get_carry_in(56), sequence_ea_af_adv));
        tmp236 = simd_and(sequence_ea_af_adv, cc_range_abe3_abec_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp236);
        tmp237 = simd_and(tmp1, tmp17);
        byte_f0 = simd_andc(tmp237, tmp6);
        byte_91 = simd_and(tmp53, tmp86);
        carryQ.cq[57] = carryout2carry(pablo_blk_Advance(byte_f0, carryQ.get_carry_in(57), tmp238));
        sequence_f0_91 = simd_and(tmp238, byte_91);
        carryQ.cq[58] = carryout2carry(pablo_blk_Advance(byte_f0, carryQ.get_carry_in(58), byte_f0_adv));
        carryQ.cq[59] = carryout2carry(pablo_blk_Advance(sequence_f0_91, carryQ.get_carry_in(59), tmp239));
        sequence_f0_91_80 = simd_and(tmp239, byte_80);
        carryQ.cq[60] = carryout2carry(pablo_blk_Advance(sequence_f0_91, carryQ.get_carry_in(60), sequence_f0_91_adv));
        tmp240 = simd_andc(tmp6, tmp89);
        cc_range_11000_11002_4 = simd_andc(tmp13, tmp240);
        carryQ.cq[61] = carryout2carry(pablo_blk_Advance(sequence_f0_91_80, carryQ.get_carry_in(61), sequence_f0_91_80_adv));
        tmp241 = simd_and(sequence_f0_91_80_adv, cc_range_11000_11002_4);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp241);
        sequence_f0_91_82 = simd_and(sequence_f0_91_adv, byte_82);
        tmp242 = simd_andc(byte_range_b0_bf, tmp4);
        tmp243 = simd_andc(tmp242, tmp14);
        tmp244 = simd_or(byte_82, tmp243);
        tmp245 = simd_and(byte_range_b0_bf, tmp46);
        cc_range_11082_110b7_4 = simd_or(tmp244, tmp245);
        carryQ.cq[62] = carryout2carry(pablo_blk_Advance(sequence_f0_91_82, carryQ.get_carry_in(62), sequence_f0_91_82_adv));
        tmp246 = simd_and(sequence_f0_91_82_adv, cc_range_11082_110b7_4);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp246);
        byte_84 = simd_and(tmp13, tmp10);
        sequence_f0_91_84 = simd_and(sequence_f0_91_adv, byte_84);
        carryQ.cq[63] = carryout2carry(pablo_blk_Advance(sequence_f0_91_84, carryQ.get_carry_in(63), sequence_f0_91_84_adv));
        tmp247 = simd_and(sequence_f0_91_84_adv, byte_ac);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp247);
        byte_86 = simd_and(tmp13, tmp38);
        sequence_f0_91_86 = simd_and(sequence_f0_91_adv, byte_86);
        tmp248 = simd_not(basis_bits.bit_6);
        tmp249 = simd_or(simd_and(basis_bits.bit_5, tmp248), simd_andc(tmp14, basis_bits.bit_5));
        tmp250 = simd_and(tmp225, tmp249);
        tmp251 = simd_or(byte_82, tmp250);
        tmp252 = simd_and(byte_range_b0_bf, tmp72);
        cc_range_11182_111bf_4 = simd_or(tmp251, tmp252);
        carryQ.cq[64] = carryout2carry(pablo_blk_Advance(sequence_f0_91_86, carryQ.get_carry_in(64), sequence_f0_91_86_adv));
        tmp253 = simd_and(sequence_f0_91_86_adv, cc_range_11182_111bf_4);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp253);
        byte_87 = simd_and(tmp13, tmp42);
        sequence_f0_91_87 = simd_and(sequence_f0_91_adv, byte_87);
        carryQ.cq[65] = carryout2carry(pablo_blk_Advance(sequence_f0_91_87, carryQ.get_carry_in(65), sequence_f0_91_87_adv));
        tmp254 = simd_and(sequence_f0_91_87_adv, byte_80);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp254);
        byte_9a = simd_and(tmp53, tmp60);
        sequence_f0_91_9a = simd_and(sequence_f0_91_adv, byte_9a);
        tmp255 = simd_andc(tmp5, basis_bits.bit_6);
        tmp256 = simd_andc(tmp23, tmp255);
        tmp257 = simd_and(tmp8, tmp256);
        tmp258 = simd_and(byte_range_b0_bf, tmp38);
        cc_range_116ac_116b6_4 = simd_or(tmp257, tmp258);
        carryQ.cq[66] = carryout2carry(pablo_blk_Advance(sequence_f0_91_9a, carryQ.get_carry_in(66), sequence_f0_91_9a_adv));
        tmp259 = simd_and(sequence_f0_91_9a_adv, cc_range_116ac_116b6_4);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp259);
        byte_96 = simd_and(tmp53, tmp38);
        sequence_f0_96 = simd_and(byte_f0_adv, byte_96);
        carryQ.cq[67] = carryout2carry(pablo_blk_Advance(sequence_f0_96, carryQ.get_carry_in(67), tmp260));
        sequence_f0_96_bd = simd_and(tmp260, byte_bd);
        carryQ.cq[68] = carryout2carry(pablo_blk_Advance(sequence_f0_96, carryQ.get_carry_in(68), sequence_f0_96_adv));
        tmp261 = simd_and(basis_bits.bit_3, tmp72);
        tmp262 = simd_not(tmp261);
        tmp263 = simd_and(basis_bits.bit_3, tmp6);
        tmp264 = simd_or(simd_and(basis_bits.bit_2, tmp262), simd_andc(tmp263, basis_bits.bit_2));
        byte_range_91_be = simd_and(tmp7, tmp264);
        carryQ.cq[69] = carryout2carry(pablo_blk_Advance(sequence_f0_96_bd, carryQ.get_carry_in(69), sequence_f0_96_bd_adv));
        tmp265 = simd_and(sequence_f0_96_bd_adv, byte_range_91_be);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp265);
        byte_9d = simd_and(tmp53, tmp69);
        sequence_f0_9d = simd_and(byte_f0_adv, byte_9d);
        byte_85 = simd_and(tmp13, tmp28);
        carryQ.cq[70] = carryout2carry(pablo_blk_Advance(sequence_f0_9d, carryQ.get_carry_in(70), tmp266));
        sequence_f0_9d_85 = simd_and(tmp266, byte_85);
        carryQ.cq[71] = carryout2carry(pablo_blk_Advance(sequence_f0_9d, carryQ.get_carry_in(71), sequence_f0_9d_adv));
        tmp267 = simd_and(tmp8, tmp9);
        tmp268 = simd_and(tmp267, tmp75);
        cc_range_1d165_1d16d_4 = simd_or(tmp268, tmp178);
        carryQ.cq[72] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_85, carryQ.get_carry_in(72), sequence_f0_9d_85_adv));
        tmp269 = simd_and(sequence_f0_9d_85_adv, cc_range_1d165_1d16d_4);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp269);
        carryQ.CarryQ_Adjust(73);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Mc & struct_Mc, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, byte_e0, tmp7, tmp8, tmp9, tmp10;
		BitBlock byte_a4, tmp11, sequence_e0_a4, byte_e0_adv, tmp12, tmp13, tmp14;
		BitBlock tmp15, tmp16, tmp17, tmp18, tmp19, tmp20, tmp21, tmp22, tmp23, tmp24;
		BitBlock tmp25, cc_range_903_93e_3, sequence_e0_a4_adv, tmp26, tmp27, tmp28;
		BitBlock byte_a5, sequence_e0_a5, tmp29, tmp30, tmp31, tmp32, tmp33, tmp34;
		BitBlock tmp35, cc_range_940_94e_3, sequence_e0_a5_adv, tmp36, tmp37, tmp38;
		BitBlock byte_a6, sequence_e0_a6, tmp39, tmp40, cc_range_982_9be_3;
		BitBlock sequence_e0_a6_adv, tmp41, tmp42, byte_a7, sequence_e0_a7, tmp43;
		BitBlock tmp44, tmp45, tmp46, tmp47, tmp48, tmp49, tmp50, tmp51, tmp52, tmp53;
		BitBlock tmp54, cc_range_9c0_9d7_3, sequence_e0_a7_adv, tmp55, tmp56, byte_a8;
		BitBlock sequence_e0_a8, cc_range_a03_a3e_3, sequence_e0_a8_adv, tmp57, tmp58;
		BitBlock byte_a9, sequence_e0_a9, byte_80, sequence_e0_a9_adv, tmp59, tmp60;
		BitBlock byte_aa, sequence_e0_aa, cc_range_a83_abe_3, sequence_e0_aa_adv;
		BitBlock tmp61, byte_ab, sequence_e0_ab, tmp62, tmp63, cc_range_ac0_acb_3;
		BitBlock sequence_e0_ab_adv, tmp64, tmp65, byte_ac, sequence_e0_ac, tmp66;
		BitBlock tmp67, cc_range_b02_b3e_3, sequence_e0_ac_adv, tmp68, tmp69, byte_ad;
		BitBlock sequence_e0_ad, cc_range_b40_b57_3, sequence_e0_ad_adv, tmp70;
		BitBlock byte_ae, sequence_e0_ae, byte_range_be_bf, sequence_e0_ae_adv, tmp71;
		BitBlock tmp72, byte_af, sequence_e0_af, tmp73, tmp74, tmp75, tmp76, tmp77;
		BitBlock tmp78, tmp79, tmp80, tmp81, tmp82, tmp83, cc_range_bc1_bd7_3;
		BitBlock sequence_e0_af_adv, tmp84, byte_b0, sequence_e0_b0, byte_range_81_83;
		BitBlock sequence_e0_b0_adv, tmp85, tmp86, byte_b1, sequence_e0_b1, tmp87;
		BitBlock byte_range_81_84, sequence_e0_b1_adv, tmp88, tmp89, byte_b2;
		BitBlock sequence_e0_b2, cc_range_c82_cbe_3, sequence_e0_b2_adv, tmp90;
		BitBlock byte_b3, sequence_e0_b3, tmp91, tmp92, tmp93, tmp94, tmp95, tmp96;
		BitBlock tmp97, tmp98, tmp99, cc_range_cc0_cd5_3, sequence_e0_b3_adv, tmp100;
		BitBlock byte_b4, sequence_e0_b4, cc_range_d02_d3e_3, sequence_e0_b4_adv;
		BitBlock tmp101, byte_b5, sequence_e0_b5, tmp102, tmp103, tmp104;
		BitBlock cc_range_d40_d57_3, sequence_e0_b5_adv, tmp105, byte_b6;
		BitBlock sequence_e0_b6, byte_range_82_83, sequence_e0_b6_adv, tmp106, byte_b7;
		BitBlock sequence_e0_b7, tmp107, tmp108, tmp109, tmp110, tmp111, tmp112;
		BitBlock tmp113, tmp114, cc_range_dcf_df2_3, sequence_e0_b7_adv, tmp115;
		BitBlock byte_bc, sequence_e0_bc, sequence_e0_bc_adv, tmp116, byte_bd;
		BitBlock sequence_e0_bd, byte_bf, sequence_e0_bd_adv, tmp117, byte_e1, tmp118;
		BitBlock sequence_e1_80, byte_e1_adv, tmp119, tmp120, tmp121, tmp122, tmp123;
		BitBlock tmp124, tmp125, cc_range_102b_103b_3, sequence_e1_80_adv, tmp126;
		BitBlock byte_81, sequence_e1_81, tmp127, tmp128, tmp129, tmp130, tmp131;
		BitBlock tmp132, tmp133, tmp134, cc_range_1056_1067_3, sequence_e1_81_adv;
		BitBlock tmp135, byte_82, sequence_e1_82, tmp136, tmp137, tmp138, tmp139;
		BitBlock tmp140, tmp141, tmp142, tmp143, cc_range_1083_109a_3;
		BitBlock sequence_e1_82_adv, tmp144, byte_9e, sequence_e1_9e, tmp145;
		BitBlock cc_range_17b6_17be_3, sequence_e1_9e_adv, tmp146, byte_9f;
		BitBlock sequence_e1_9f, tmp147, cc_range_17c0_17c7_3, sequence_e1_9f_adv;
		BitBlock tmp148, sequence_e1_a4, tmp149, tmp150, tmp151, tmp152, tmp153;
		BitBlock tmp154, tmp155, tmp156, tmp157, tmp158, tmp159, cc_range_1923_1933_3;
		BitBlock sequence_e1_a4_adv, tmp160, sequence_e1_a6, byte_range_b0_bf;
		BitBlock sequence_e1_a6_adv, tmp161, sequence_e1_a7, tmp162, tmp163;
		BitBlock cc_range_19c0_19c8_3, sequence_e1_a7_adv, tmp164, sequence_e1_a8;
		BitBlock tmp165, byte_range_99_9a, sequence_e1_a8_adv, tmp166, sequence_e1_a9;
		BitBlock tmp167, tmp168, tmp169, tmp170, tmp171, tmp172, tmp173, tmp174;
		BitBlock tmp175, tmp176, tmp177, tmp178, cc_range_1a55_1a6d_3;
		BitBlock sequence_e1_a9_adv, tmp179, sequence_e1_ac, tmp180, tmp181, tmp182;
		BitBlock tmp183, tmp184, tmp185, tmp186, cc_range_1b04_1b3d_3;
		BitBlock sequence_e1_ac_adv, tmp187, sequence_e1_ad, tmp188;
		BitBlock cc_range_1b40_1b43_3, sequence_e1_ad_adv, tmp189, sequence_e1_ae;
		BitBlock tmp190, tmp191, tmp192, tmp193, tmp194, tmp195, cc_range_1b82_1bac_3;
		BitBlock sequence_e1_ae_adv, tmp196, sequence_e1_af, tmp197, tmp198, tmp199;
		BitBlock tmp200, cc_range_1be7_1bf2_3, sequence_e1_af_adv, tmp201;
		BitBlock sequence_e1_b0, tmp202, tmp203, tmp204, tmp205, tmp206;
		BitBlock cc_range_1c24_1c34_3, sequence_e1_b0_adv, tmp207, sequence_e1_b3;
		BitBlock cc_range_1ce1_1cf2_3, sequence_e1_b3_adv, tmp208, byte_e3, tmp209;
		BitBlock sequence_e3_80, byte_e3_adv, byte_range_ae_af, sequence_e3_80_adv;
		BitBlock tmp210, byte_ea, byte_a0, tmp211, sequence_ea_a0, byte_ea_adv;
		BitBlock cc_range_a823_a827_3, sequence_ea_a0_adv, tmp212, byte_a2;
		BitBlock sequence_ea_a2, tmp213, cc_range_a880_a8b4_3, sequence_ea_a2_adv;
		BitBlock tmp214, byte_a3, sequence_ea_a3, byte_range_80_83, sequence_ea_a3_adv;
		BitBlock tmp215, sequence_ea_a5, byte_range_92_93, sequence_ea_a5_adv, tmp216;
		BitBlock sequence_ea_a6, tmp217, tmp218, tmp219, cc_range_a983_a9bd_3;
		BitBlock sequence_ea_a6_adv, tmp220, sequence_ea_a7, sequence_ea_a7_adv;
		BitBlock tmp221, sequence_ea_a8, tmp222, tmp223, tmp224, tmp225, tmp226;
		BitBlock cc_range_aa2f_aa33_3, sequence_ea_a8_adv, tmp227, sequence_ea_a9;
		BitBlock tmp228, cc_range_aa4d_aa7b_3, sequence_ea_a9_adv, tmp229;
		BitBlock sequence_ea_ab, tmp230, tmp231, cc_range_aaeb_aaf5_3;
		BitBlock sequence_ea_ab_adv, tmp232, sequence_ea_af, tmp233, tmp234, tmp235;
		BitBlock cc_range_abe3_abec_3, sequence_ea_af_adv, tmp236, tmp237, byte_f0;
		BitBlock byte_91, tmp238, sequence_f0_91, byte_f0_adv, tmp239;
		BitBlock sequence_f0_91_80, sequence_f0_91_adv, tmp240, cc_range_11000_11002_4;
		BitBlock sequence_f0_91_80_adv, tmp241, sequence_f0_91_82, tmp242, tmp243;
		BitBlock tmp244, tmp245, cc_range_11082_110b7_4, sequence_f0_91_82_adv, tmp246;
		BitBlock byte_84, sequence_f0_91_84, sequence_f0_91_84_adv, tmp247, byte_86;
		BitBlock sequence_f0_91_86, tmp248, tmp249, tmp250, tmp251, tmp252;
		BitBlock cc_range_11182_111bf_4, sequence_f0_91_86_adv, tmp253, byte_87;
		BitBlock sequence_f0_91_87, sequence_f0_91_87_adv, tmp254, byte_9a;
		BitBlock sequence_f0_91_9a, tmp255, tmp256, tmp257, tmp258;
		BitBlock cc_range_116ac_116b6_4, sequence_f0_91_9a_adv, tmp259, byte_96;
		BitBlock sequence_f0_96, tmp260, sequence_f0_96_bd, sequence_f0_96_adv, tmp261;
		BitBlock tmp262, tmp263, tmp264, byte_range_91_be, sequence_f0_96_bd_adv;
		BitBlock tmp265, byte_9d, sequence_f0_9d, byte_85, tmp266, sequence_f0_9d_85;
		BitBlock sequence_f0_9d_adv, tmp267, tmp268, cc_range_1d165_1d16d_4;
		BitBlock sequence_f0_9d_85_adv, tmp269;




        struct_Mc.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_and(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_or(tmp4, tmp5);
        byte_e0 = simd_andc(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_and(tmp7, tmp2);
        tmp9 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp10 = simd_andc(tmp9, tmp5);
        byte_a4 = simd_and(tmp8, tmp10);
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(byte_e0, carryQ.get_carry_in(0), tmp11));
        sequence_e0_a4 = simd_and(tmp11, byte_a4);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(byte_e0, carryQ.get_carry_in(1), byte_e0_adv));
        tmp12 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp13 = simd_andc(tmp7, tmp12);
        tmp14 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp15 = simd_andc(tmp14, tmp4);
        tmp16 = simd_and(tmp13, tmp15);
        tmp17 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp18 = simd_and(tmp7, tmp17);
        tmp19 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp20 = simd_and(tmp19, tmp14);
        tmp21 = simd_and(tmp18, tmp20);
        tmp22 = simd_or(tmp16, tmp21);
        tmp23 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp24 = simd_and(tmp23, basis_bits.bit_6);
        tmp25 = simd_and(tmp18, tmp24);
        cc_range_903_93e_3 = simd_or(tmp22, tmp25);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(sequence_e0_a4, carryQ.get_carry_in(2), sequence_e0_a4_adv));
        tmp26 = simd_and(sequence_e0_a4_adv, cc_range_903_93e_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp26);
        tmp27 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp28 = simd_and(tmp9, tmp27);
        byte_a5 = simd_and(tmp8, tmp28);
        sequence_e0_a5 = simd_and(byte_e0_adv, byte_a5);
        tmp29 = simd_andc(tmp13, tmp6);
        tmp30 = simd_and(tmp13, basis_bits.bit_4);
        tmp31 = simd_not(tmp5);
        tmp32 = simd_or(simd_and(basis_bits.bit_5, tmp31), simd_andc(tmp5, basis_bits.bit_5));
        tmp33 = simd_and(tmp30, tmp32);
        tmp34 = simd_or(tmp29, tmp33);
        tmp35 = simd_and(tmp13, tmp24);
        cc_range_940_94e_3 = simd_or(tmp34, tmp35);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(sequence_e0_a5, carryQ.get_carry_in(3), sequence_e0_a5_adv));
        tmp36 = simd_and(sequence_e0_a5_adv, cc_range_940_94e_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp36);
        tmp37 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp38 = simd_and(tmp9, tmp37);
        byte_a6 = simd_and(tmp8, tmp38);
        sequence_e0_a6 = simd_and(byte_e0_adv, byte_a6);
        tmp39 = simd_andc(basis_bits.bit_6, tmp4);
        tmp40 = simd_and(tmp13, tmp39);
        cc_range_982_9be_3 = simd_or(tmp40, tmp25);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(sequence_e0_a6, carryQ.get_carry_in(4), sequence_e0_a6_adv));
        tmp41 = simd_and(sequence_e0_a6_adv, cc_range_982_9be_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp41);
        tmp42 = simd_and(tmp9, tmp14);
        byte_a7 = simd_and(tmp8, tmp42);
        sequence_e0_a7 = simd_and(byte_e0_adv, byte_a7);
        tmp43 = simd_or(basis_bits.bit_5, tmp5);
        tmp44 = simd_not(tmp43);
        tmp45 = simd_and(basis_bits.bit_5, tmp14);
        tmp46 = simd_or(simd_and(basis_bits.bit_4, tmp44), simd_andc(tmp45, basis_bits.bit_4));
        tmp47 = simd_andc(tmp6, tmp46);
        tmp48 = simd_andc(tmp13, tmp47);
        tmp49 = simd_or(simd_and(basis_bits.bit_5, tmp31), simd_andc(tmp14, basis_bits.bit_5));
        tmp50 = simd_and(tmp30, tmp49);
        tmp51 = simd_or(tmp48, tmp50);
        tmp52 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp53 = simd_and(tmp7, tmp52);
        tmp54 = simd_and(tmp53, tmp42);
        cc_range_9c0_9d7_3 = simd_or(tmp51, tmp54);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(sequence_e0_a7, carryQ.get_carry_in(5), sequence_e0_a7_adv));
        tmp55 = simd_and(sequence_e0_a7_adv, cc_range_9c0_9d7_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp55);
        tmp56 = simd_andc(tmp19, tmp5);
        byte_a8 = simd_and(tmp8, tmp56);
        sequence_e0_a8 = simd_and(byte_e0_adv, byte_a8);
        cc_range_a03_a3e_3 = simd_or(tmp16, tmp25);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(sequence_e0_a8, carryQ.get_carry_in(6), sequence_e0_a8_adv));
        tmp57 = simd_and(sequence_e0_a8_adv, cc_range_a03_a3e_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp57);
        tmp58 = simd_and(tmp19, tmp27);
        byte_a9 = simd_and(tmp8, tmp58);
        sequence_e0_a9 = simd_and(byte_e0_adv, byte_a9);
        byte_80 = simd_andc(tmp13, tmp6);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(sequence_e0_a9, carryQ.get_carry_in(7), sequence_e0_a9_adv));
        tmp59 = simd_and(sequence_e0_a9_adv, byte_80);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp59);
        tmp60 = simd_and(tmp19, tmp37);
        byte_aa = simd_and(tmp8, tmp60);
        sequence_e0_aa = simd_and(byte_e0_adv, byte_aa);
        cc_range_a83_abe_3 = simd_or(tmp16, tmp25);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(sequence_e0_aa, carryQ.get_carry_in(8), sequence_e0_aa_adv));
        tmp61 = simd_and(sequence_e0_aa_adv, cc_range_a83_abe_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp61);
        byte_ab = simd_and(tmp8, tmp20);
        sequence_e0_ab = simd_and(byte_e0_adv, byte_ab);
        tmp62 = simd_andc(tmp6, tmp58);
        tmp63 = simd_andc(tmp13, tmp62);
        cc_range_ac0_acb_3 = simd_or(tmp63, tmp50);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(sequence_e0_ab, carryQ.get_carry_in(9), sequence_e0_ab_adv));
        tmp64 = simd_and(sequence_e0_ab_adv, cc_range_ac0_acb_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp64);
        tmp65 = simd_andc(tmp23, tmp5);
        byte_ac = simd_and(tmp8, tmp65);
        sequence_e0_ac = simd_and(byte_e0_adv, byte_ac);
        tmp66 = simd_and(tmp23, tmp37);
        tmp67 = simd_and(tmp18, tmp66);
        cc_range_b02_b3e_3 = simd_or(tmp40, tmp67);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(sequence_e0_ac, carryQ.get_carry_in(10), sequence_e0_ac_adv));
        tmp68 = simd_and(sequence_e0_ac_adv, cc_range_b02_b3e_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp68);
        tmp69 = simd_and(tmp23, tmp27);
        byte_ad = simd_and(tmp8, tmp69);
        sequence_e0_ad = simd_and(byte_e0_adv, byte_ad);
        cc_range_b40_b57_3 = simd_or(tmp51, tmp54);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(sequence_e0_ad, carryQ.get_carry_in(11), sequence_e0_ad_adv));
        tmp70 = simd_and(sequence_e0_ad_adv, cc_range_b40_b57_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp70);
        byte_ae = simd_and(tmp8, tmp66);
        sequence_e0_ae = simd_and(byte_e0_adv, byte_ae);
        byte_range_be_bf = simd_and(tmp18, tmp24);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(sequence_e0_ae, carryQ.get_carry_in(12), sequence_e0_ae_adv));
        tmp71 = simd_and(sequence_e0_ae_adv, byte_range_be_bf);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp71);
        tmp72 = simd_and(tmp23, tmp14);
        byte_af = simd_and(tmp8, tmp72);
        sequence_e0_af = simd_and(byte_e0_adv, byte_af);
        tmp73 = simd_andc(tmp13, tmp4);
        tmp74 = simd_not(basis_bits.bit_7);
        tmp75 = simd_or(simd_and(basis_bits.bit_6, tmp74), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
        tmp76 = simd_and(tmp73, tmp75);
        tmp77 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp78 = simd_or(simd_and(basis_bits.bit_4, tmp44), simd_andc(tmp77, basis_bits.bit_4));
        tmp79 = simd_and(tmp13, tmp78);
        tmp80 = simd_or(tmp76, tmp79);
        tmp81 = simd_or(simd_and(basis_bits.bit_5, tmp31), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        tmp82 = simd_and(tmp30, tmp81);
        tmp83 = simd_or(tmp80, tmp82);
        cc_range_bc1_bd7_3 = simd_or(tmp83, tmp54);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(sequence_e0_af, carryQ.get_carry_in(13), sequence_e0_af_adv));
        tmp84 = simd_and(sequence_e0_af_adv, cc_range_bc1_bd7_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp84);
        byte_b0 = simd_andc(tmp18, tmp6);
        sequence_e0_b0 = simd_and(byte_e0_adv, byte_b0);
        byte_range_81_83 = simd_and(tmp73, tmp5);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(sequence_e0_b0, carryQ.get_carry_in(14), sequence_e0_b0_adv));
        tmp85 = simd_and(sequence_e0_b0_adv, byte_range_81_83);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp85);
        tmp86 = simd_andc(tmp27, tmp4);
        byte_b1 = simd_and(tmp18, tmp86);
        sequence_e0_b1 = simd_and(byte_e0_adv, byte_b1);
        tmp87 = simd_andc(tmp13, basis_bits.bit_4);
        byte_range_81_84 = simd_and(tmp87, tmp32);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(sequence_e0_b1, carryQ.get_carry_in(15), sequence_e0_b1_adv));
        tmp88 = simd_and(sequence_e0_b1_adv, byte_range_81_84);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp88);
        tmp89 = simd_andc(tmp37, tmp4);
        byte_b2 = simd_and(tmp18, tmp89);
        sequence_e0_b2 = simd_and(byte_e0_adv, byte_b2);
        cc_range_c82_cbe_3 = simd_or(tmp40, tmp67);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(sequence_e0_b2, carryQ.get_carry_in(16), sequence_e0_b2_adv));
        tmp90 = simd_and(sequence_e0_b2_adv, cc_range_c82_cbe_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp90);
        byte_b3 = simd_and(tmp18, tmp15);
        sequence_e0_b3 = simd_and(byte_e0_adv, byte_b3);
        tmp91 = simd_and(basis_bits.bit_5, tmp5);
        tmp92 = simd_andc(tmp87, tmp91);
        tmp93 = simd_and(tmp13, tmp46);
        tmp94 = simd_or(tmp92, tmp93);
        tmp95 = simd_and(tmp19, basis_bits.bit_6);
        tmp96 = simd_and(tmp13, tmp95);
        tmp97 = simd_or(tmp94, tmp96);
        tmp98 = simd_and(tmp53, tmp9);
        tmp99 = simd_and(tmp98, tmp75);
        cc_range_cc0_cd5_3 = simd_or(tmp97, tmp99);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(sequence_e0_b3, carryQ.get_carry_in(17), sequence_e0_b3_adv));
        tmp100 = simd_and(sequence_e0_b3_adv, cc_range_cc0_cd5_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp100);
        byte_b4 = simd_and(tmp18, tmp10);
        sequence_e0_b4 = simd_and(byte_e0_adv, byte_b4);
        cc_range_d02_d3e_3 = simd_or(tmp40, byte_range_be_bf);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(sequence_e0_b4, carryQ.get_carry_in(18), sequence_e0_b4_adv));
        tmp101 = simd_and(sequence_e0_b4_adv, cc_range_d02_d3e_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp101);
        byte_b5 = simd_and(tmp18, tmp28);
        sequence_e0_b5 = simd_and(byte_e0_adv, byte_b5);
        tmp102 = simd_andc(tmp6, tmp78);
        tmp103 = simd_andc(tmp13, tmp102);
        tmp104 = simd_or(tmp103, tmp82);
        cc_range_d40_d57_3 = simd_or(tmp104, tmp54);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(sequence_e0_b5, carryQ.get_carry_in(19), sequence_e0_b5_adv));
        tmp105 = simd_and(sequence_e0_b5_adv, cc_range_d40_d57_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp105);
        byte_b6 = simd_and(tmp18, tmp38);
        sequence_e0_b6 = simd_and(byte_e0_adv, byte_b6);
        byte_range_82_83 = simd_and(tmp13, tmp39);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(sequence_e0_b6, carryQ.get_carry_in(20), sequence_e0_b6_adv));
        tmp106 = simd_and(sequence_e0_b6_adv, byte_range_82_83);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp106);
        byte_b7 = simd_and(tmp18, tmp42);
        sequence_e0_b7 = simd_and(byte_e0_adv, byte_b7);
        tmp107 = simd_andc(tmp7, basis_bits.bit_2);
        tmp108 = simd_or(tmp4, basis_bits.bit_6);
        tmp109 = simd_not(tmp108);
        tmp110 = simd_or(simd_and(basis_bits.bit_3, tmp109), simd_andc(tmp72, basis_bits.bit_3));
        tmp111 = simd_and(tmp107, tmp110);
        tmp112 = simd_and(tmp53, basis_bits.bit_4);
        tmp113 = simd_or(tmp111, tmp112);
        tmp114 = simd_and(tmp18, tmp39);
        cc_range_dcf_df2_3 = simd_or(tmp113, tmp114);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(sequence_e0_b7, carryQ.get_carry_in(21), sequence_e0_b7_adv));
        tmp115 = simd_and(sequence_e0_b7_adv, cc_range_dcf_df2_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp115);
        byte_bc = simd_and(tmp18, tmp65);
        sequence_e0_bc = simd_and(byte_e0_adv, byte_bc);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(sequence_e0_bc, carryQ.get_carry_in(22), sequence_e0_bc_adv));
        tmp116 = simd_and(sequence_e0_bc_adv, byte_range_be_bf);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp116);
        byte_bd = simd_and(tmp18, tmp69);
        sequence_e0_bd = simd_and(byte_e0_adv, byte_bd);
        byte_bf = simd_and(tmp18, tmp72);
        carryQ.cq[23] = carryout2carry(pablo_blk_Advance(sequence_e0_bd, carryQ.get_carry_in(23), sequence_e0_bd_adv));
        tmp117 = simd_and(sequence_e0_bd_adv, byte_bf);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp117);
        byte_e1 = simd_and(tmp3, tmp86);
        carryQ.cq[24] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(24), tmp118));
        sequence_e1_80 = simd_and(tmp118, byte_80);
        carryQ.cq[25] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(25), byte_e1_adv));
        tmp119 = simd_and(tmp8, basis_bits.bit_4);
        tmp120 = simd_and(tmp119, tmp49);
        tmp121 = simd_or(tmp120, byte_b1);
        tmp122 = simd_and(tmp18, tmp56);
        tmp123 = simd_or(tmp121, tmp122);
        tmp124 = simd_and(tmp18, basis_bits.bit_4);
        tmp125 = simd_and(tmp124, tmp49);
        cc_range_102b_103b_3 = simd_or(tmp123, tmp125);
        carryQ.cq[26] = carryout2carry(pablo_blk_Advance(sequence_e1_80, carryQ.get_carry_in(26), sequence_e1_80_adv));
        tmp126 = simd_and(sequence_e1_80_adv, cc_range_102b_103b_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp126);
        byte_81 = simd_and(tmp13, tmp86);
        sequence_e1_81 = simd_and(byte_e1_adv, byte_81);
        tmp127 = simd_and(tmp9, basis_bits.bit_6);
        tmp128 = simd_and(tmp53, tmp127);
        tmp129 = simd_andc(tmp8, basis_bits.bit_4);
        tmp130 = simd_and(tmp129, tmp81);
        tmp131 = simd_or(tmp128, tmp130);
        tmp132 = simd_not(tmp77);
        tmp133 = simd_or(simd_and(basis_bits.bit_4, tmp132), simd_andc(tmp45, basis_bits.bit_4));
        tmp134 = simd_and(tmp8, tmp133);
        cc_range_1056_1067_3 = simd_or(tmp131, tmp134);
        carryQ.cq[27] = carryout2carry(pablo_blk_Advance(sequence_e1_81, carryQ.get_carry_in(27), sequence_e1_81_adv));
        tmp135 = simd_and(sequence_e1_81_adv, cc_range_1056_1067_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp135);
        byte_82 = simd_and(tmp13, tmp89);
        sequence_e1_82 = simd_and(byte_e1_adv, byte_82);
        tmp136 = simd_and(tmp87, tmp49);
        tmp137 = simd_not(tmp91);
        tmp138 = simd_or(simd_and(basis_bits.bit_4, tmp137), simd_andc(tmp45, basis_bits.bit_4));
        tmp139 = simd_and(tmp13, tmp138);
        tmp140 = simd_or(tmp136, tmp139);
        tmp141 = simd_and(tmp13, tmp72);
        tmp142 = simd_or(tmp140, tmp141);
        tmp143 = simd_and(tmp112, tmp81);
        cc_range_1083_109a_3 = simd_or(tmp142, tmp143);
        carryQ.cq[28] = carryout2carry(pablo_blk_Advance(sequence_e1_82, carryQ.get_carry_in(28), sequence_e1_82_adv));
        tmp144 = simd_and(sequence_e1_82_adv, cc_range_1083_109a_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp144);
        byte_9e = simd_and(tmp53, tmp66);
        sequence_e1_9e = simd_and(byte_e1_adv, byte_9e);
        tmp145 = simd_or(tmp38, tmp24);
        cc_range_17b6_17be_3 = simd_and(tmp18, tmp145);
        carryQ.cq[29] = carryout2carry(pablo_blk_Advance(sequence_e1_9e, carryQ.get_carry_in(29), sequence_e1_9e_adv));
        tmp146 = simd_and(sequence_e1_9e_adv, cc_range_17b6_17be_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp146);
        byte_9f = simd_and(tmp53, tmp72);
        sequence_e1_9f = simd_and(byte_e1_adv, byte_9f);
        tmp147 = simd_andc(tmp87, tmp77);
        cc_range_17c0_17c7_3 = simd_or(tmp147, tmp93);
        carryQ.cq[30] = carryout2carry(pablo_blk_Advance(sequence_e1_9f, carryQ.get_carry_in(30), sequence_e1_9f_adv));
        tmp148 = simd_and(sequence_e1_9f_adv, cc_range_17c0_17c7_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp148);
        sequence_e1_a4 = simd_and(byte_e1_adv, byte_a4);
        tmp149 = simd_not(tmp14);
        tmp150 = simd_or(simd_and(basis_bits.bit_5, tmp149), simd_andc(tmp14, basis_bits.bit_5));
        tmp151 = simd_and(tmp129, tmp150);
        tmp152 = simd_and(tmp8, tmp19);
        tmp153 = simd_and(tmp152, tmp5);
        tmp154 = simd_or(tmp151, tmp153);
        tmp155 = simd_andc(tmp18, tmp108);
        tmp156 = simd_or(tmp154, tmp155);
        tmp157 = simd_or(basis_bits.bit_5, tmp14);
        tmp158 = simd_or(simd_and(basis_bits.bit_4, tmp44), simd_andc(tmp157, basis_bits.bit_4));
        tmp159 = simd_and(tmp18, tmp158);
        cc_range_1923_1933_3 = simd_or(tmp156, tmp159);
        carryQ.cq[31] = carryout2carry(pablo_blk_Advance(sequence_e1_a4, carryQ.get_carry_in(31), sequence_e1_a4_adv));
        tmp160 = simd_and(sequence_e1_a4_adv, cc_range_1923_1933_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp160);
        sequence_e1_a6 = simd_and(byte_e1_adv, byte_a6);
        byte_range_b0_bf = simd_and(tmp7, tmp17);
        carryQ.cq[32] = carryout2carry(pablo_blk_Advance(sequence_e1_a6, carryQ.get_carry_in(32), sequence_e1_a6_adv));
        tmp161 = simd_and(sequence_e1_a6_adv, byte_range_b0_bf);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp161);
        sequence_e1_a7 = simd_and(byte_e1_adv, byte_a7);
        tmp162 = simd_andc(tmp19, basis_bits.bit_6);
        tmp163 = simd_andc(tmp6, tmp162);
        cc_range_19c0_19c8_3 = simd_andc(tmp13, tmp163);
        carryQ.cq[33] = carryout2carry(pablo_blk_Advance(sequence_e1_a7, carryQ.get_carry_in(33), sequence_e1_a7_adv));
        tmp164 = simd_and(sequence_e1_a7_adv, cc_range_19c0_19c8_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp164);
        sequence_e1_a8 = simd_and(byte_e1_adv, byte_a8);
        tmp165 = simd_and(tmp53, tmp19);
        byte_range_99_9a = simd_and(tmp165, tmp75);
        carryQ.cq[34] = carryout2carry(pablo_blk_Advance(sequence_e1_a8, carryQ.get_carry_in(34), sequence_e1_a8_adv));
        tmp166 = simd_and(sequence_e1_a8_adv, byte_range_99_9a);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp166);
        sequence_e1_a9 = simd_and(byte_e1_adv, byte_a9);
        tmp167 = simd_and(tmp9, basis_bits.bit_7);
        tmp168 = simd_and(tmp53, tmp167);
        tmp169 = simd_and(tmp8, tmp86);
        tmp170 = simd_or(tmp168, tmp169);
        tmp171 = simd_and(tmp129, tmp49);
        tmp172 = simd_or(tmp170, tmp171);
        tmp173 = simd_and(tmp7, basis_bits.bit_2);
        tmp174 = simd_or(tmp4, tmp14);
        tmp175 = simd_not(tmp174);
        tmp176 = simd_and(tmp23, tmp5);
        tmp177 = simd_or(simd_and(basis_bits.bit_3, tmp175), simd_andc(tmp176, basis_bits.bit_3));
        tmp178 = simd_and(tmp173, tmp177);
        cc_range_1a55_1a6d_3 = simd_or(tmp172, tmp178);
        carryQ.cq[35] = carryout2carry(pablo_blk_Advance(sequence_e1_a9, carryQ.get_carry_in(35), sequence_e1_a9_adv));
        tmp179 = simd_and(sequence_e1_a9_adv, cc_range_1a55_1a6d_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp179);
        sequence_e1_ac = simd_and(byte_e1_adv, byte_ac);
        tmp180 = simd_and(tmp13, tmp10);
        tmp181 = simd_and(byte_range_b0_bf, tmp28);
        tmp182 = simd_or(tmp180, tmp181);
        tmp183 = simd_and(byte_range_b0_bf, tmp20);
        tmp184 = simd_or(tmp182, tmp183);
        tmp185 = simd_and(byte_range_b0_bf, tmp23);
        tmp186 = simd_and(tmp185, tmp5);
        cc_range_1b04_1b3d_3 = simd_or(tmp184, tmp186);
        carryQ.cq[36] = carryout2carry(pablo_blk_Advance(sequence_e1_ac, carryQ.get_carry_in(36), sequence_e1_ac_adv));
        tmp187 = simd_and(sequence_e1_ac_adv, cc_range_1b04_1b3d_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp187);
        sequence_e1_ad = simd_and(byte_e1_adv, byte_ad);
        tmp188 = simd_andc(tmp13, tmp108);
        cc_range_1b40_1b43_3 = simd_or(tmp188, tmp136);
        carryQ.cq[37] = carryout2carry(pablo_blk_Advance(sequence_e1_ad, carryQ.get_carry_in(37), sequence_e1_ad_adv));
        tmp189 = simd_and(sequence_e1_ad_adv, cc_range_1b40_1b43_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp189);
        sequence_e1_ae = simd_and(byte_e1_adv, byte_ae);
        tmp190 = simd_or(byte_82, tmp169);
        tmp191 = simd_and(tmp8, tmp127);
        tmp192 = simd_or(tmp190, tmp191);
        tmp193 = simd_or(tmp192, byte_aa);
        tmp194 = simd_andc(tmp23, basis_bits.bit_6);
        tmp195 = simd_and(tmp8, tmp194);
        cc_range_1b82_1bac_3 = simd_or(tmp193, tmp195);
        carryQ.cq[38] = carryout2carry(pablo_blk_Advance(sequence_e1_ae, carryQ.get_carry_in(38), sequence_e1_ae_adv));
        tmp196 = simd_and(sequence_e1_ae_adv, cc_range_1b82_1bac_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp196);
        sequence_e1_af = simd_and(byte_e1_adv, byte_af);
        tmp197 = simd_and(tmp119, tmp81);
        tmp198 = simd_or(byte_a7, tmp197);
        tmp199 = simd_or(tmp198, byte_ae);
        tmp200 = simd_and(byte_range_b0_bf, tmp39);
        cc_range_1be7_1bf2_3 = simd_or(tmp199, tmp200);
        carryQ.cq[39] = carryout2carry(pablo_blk_Advance(sequence_e1_af, carryQ.get_carry_in(39), sequence_e1_af_adv));
        tmp201 = simd_and(sequence_e1_af_adv, cc_range_1be7_1bf2_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp201);
        sequence_e1_b0 = simd_and(byte_e1_adv, byte_b0);
        tmp202 = simd_not(basis_bits.bit_5);
        tmp203 = simd_or(simd_and(basis_bits.bit_4, tmp202), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
        tmp204 = simd_and(tmp8, tmp203);
        tmp205 = simd_andc(tmp9, basis_bits.bit_6);
        tmp206 = simd_and(byte_range_b0_bf, tmp205);
        cc_range_1c24_1c34_3 = simd_or(tmp204, tmp206);
        carryQ.cq[40] = carryout2carry(pablo_blk_Advance(sequence_e1_b0, carryQ.get_carry_in(40), sequence_e1_b0_adv));
        tmp207 = simd_and(sequence_e1_b0_adv, cc_range_1c24_1c34_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp207);
        sequence_e1_b3 = simd_and(byte_e1_adv, byte_b3);
        cc_range_1ce1_1cf2_3 = simd_or(tmp169, tmp200);
        carryQ.cq[41] = carryout2carry(pablo_blk_Advance(sequence_e1_b3, carryQ.get_carry_in(41), sequence_e1_b3_adv));
        tmp208 = simd_and(sequence_e1_b3_adv, cc_range_1ce1_1cf2_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp208);
        byte_e3 = simd_and(tmp3, tmp15);
        carryQ.cq[42] = carryout2carry(pablo_blk_Advance(byte_e3, carryQ.get_carry_in(42), tmp209));
        sequence_e3_80 = simd_and(tmp209, byte_80);
        carryQ.cq[43] = carryout2carry(pablo_blk_Advance(byte_e3, carryQ.get_carry_in(43), byte_e3_adv));
        byte_range_ae_af = simd_and(tmp8, tmp24);
        carryQ.cq[44] = carryout2carry(pablo_blk_Advance(sequence_e3_80, carryQ.get_carry_in(44), sequence_e3_80_adv));
        tmp210 = simd_and(sequence_e3_80_adv, byte_range_ae_af);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp210);
        byte_ea = simd_and(tmp3, tmp60);
        byte_a0 = simd_andc(tmp8, tmp6);
        carryQ.cq[45] = carryout2carry(pablo_blk_Advance(byte_ea, carryQ.get_carry_in(45), tmp211));
        sequence_ea_a0 = simd_and(tmp211, byte_a0);
        carryQ.cq[46] = carryout2carry(pablo_blk_Advance(byte_ea, carryQ.get_carry_in(46), byte_ea_adv));
        cc_range_a823_a827_3 = simd_or(tmp171, byte_a7);
        carryQ.cq[47] = carryout2carry(pablo_blk_Advance(sequence_ea_a0, carryQ.get_carry_in(47), sequence_ea_a0_adv));
        tmp212 = simd_and(sequence_ea_a0_adv, cc_range_a823_a827_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp212);
        byte_a2 = simd_and(tmp8, tmp89);
        sequence_ea_a2 = simd_and(byte_ea_adv, byte_a2);
        tmp213 = simd_and(byte_range_b0_bf, tmp4);
        cc_range_a880_a8b4_3 = simd_or(tmp188, tmp213);
        carryQ.cq[48] = carryout2carry(pablo_blk_Advance(sequence_ea_a2, carryQ.get_carry_in(48), sequence_ea_a2_adv));
        tmp214 = simd_and(sequence_ea_a2_adv, cc_range_a880_a8b4_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp214);
        byte_a3 = simd_and(tmp8, tmp15);
        sequence_ea_a3 = simd_and(byte_ea_adv, byte_a3);
        byte_range_80_83 = simd_andc(tmp13, tmp4);
        carryQ.cq[49] = carryout2carry(pablo_blk_Advance(sequence_ea_a3, carryQ.get_carry_in(49), sequence_ea_a3_adv));
        tmp215 = simd_and(sequence_ea_a3_adv, byte_range_80_83);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp215);
        sequence_ea_a5 = simd_and(byte_ea_adv, byte_a5);
        byte_range_92_93 = simd_and(tmp53, tmp39);
        carryQ.cq[50] = carryout2carry(pablo_blk_Advance(sequence_ea_a5, carryQ.get_carry_in(50), sequence_ea_a5_adv));
        tmp216 = simd_and(sequence_ea_a5_adv, byte_range_92_93);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp216);
        sequence_ea_a6 = simd_and(byte_ea_adv, byte_a6);
        tmp217 = simd_or(tmp16, tmp206);
        tmp218 = simd_and(byte_range_b0_bf, tmp95);
        tmp219 = simd_or(tmp217, tmp218);
        cc_range_a983_a9bd_3 = simd_or(tmp219, tmp186);
        carryQ.cq[51] = carryout2carry(pablo_blk_Advance(sequence_ea_a6, carryQ.get_carry_in(51), sequence_ea_a6_adv));
        tmp220 = simd_and(sequence_ea_a6_adv, cc_range_a983_a9bd_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp220);
        sequence_ea_a7 = simd_and(byte_ea_adv, byte_a7);
        carryQ.cq[52] = carryout2carry(pablo_blk_Advance(sequence_ea_a7, carryQ.get_carry_in(52), sequence_ea_a7_adv));
        tmp221 = simd_and(sequence_ea_a7_adv, byte_80);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp221);
        sequence_ea_a8 = simd_and(byte_ea_adv, byte_a8);
        tmp222 = simd_not(tmp6);
        tmp223 = simd_or(simd_and(basis_bits.bit_3, tmp222), simd_andc(tmp72, basis_bits.bit_3));
        tmp224 = simd_and(tmp173, tmp223);
        tmp225 = simd_andc(byte_range_b0_bf, basis_bits.bit_4);
        tmp226 = simd_and(tmp225, tmp49);
        cc_range_aa2f_aa33_3 = simd_or(tmp224, tmp226);
        carryQ.cq[53] = carryout2carry(pablo_blk_Advance(sequence_ea_a8, carryQ.get_carry_in(53), sequence_ea_a8_adv));
        tmp227 = simd_and(sequence_ea_a8_adv, cc_range_aa2f_aa33_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp227);
        sequence_ea_a9 = simd_and(byte_ea_adv, byte_a9);
        tmp228 = simd_and(tmp13, tmp69);
        cc_range_aa4d_aa7b_3 = simd_or(tmp228, tmp183);
        carryQ.cq[54] = carryout2carry(pablo_blk_Advance(sequence_ea_a9, carryQ.get_carry_in(54), sequence_ea_a9_adv));
        tmp229 = simd_and(sequence_ea_a9_adv, cc_range_aa4d_aa7b_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp229);
        sequence_ea_ab = simd_and(byte_ea_adv, byte_ab);
        tmp230 = simd_or(tmp20, tmp24);
        tmp231 = simd_and(tmp8, tmp230);
        cc_range_aaeb_aaf5_3 = simd_or(tmp231, tmp181);
        carryQ.cq[55] = carryout2carry(pablo_blk_Advance(sequence_ea_ab, carryQ.get_carry_in(55), sequence_ea_ab_adv));
        tmp232 = simd_and(sequence_ea_ab_adv, cc_range_aaeb_aaf5_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp232);
        sequence_ea_af = simd_and(byte_ea_adv, byte_af);
        tmp233 = simd_or(tmp171, tmp191);
        tmp234 = simd_and(tmp152, tmp75);
        tmp235 = simd_or(tmp233, tmp234);
        cc_range_abe3_abec_3 = simd_or(tmp235, byte_ac);
        carryQ.cq[56] = carryout2carry(pablo_blk_Advance(sequence_ea_af, carryQ.get_carry_in(56), sequence_ea_af_adv));
        tmp236 = simd_and(sequence_ea_af_adv, cc_range_abe3_abec_3);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp236);
        tmp237 = simd_and(tmp1, tmp17);
        byte_f0 = simd_andc(tmp237, tmp6);
        byte_91 = simd_and(tmp53, tmp86);
        carryQ.cq[57] = carryout2carry(pablo_blk_Advance(byte_f0, carryQ.get_carry_in(57), tmp238));
        sequence_f0_91 = simd_and(tmp238, byte_91);
        carryQ.cq[58] = carryout2carry(pablo_blk_Advance(byte_f0, carryQ.get_carry_in(58), byte_f0_adv));
        carryQ.cq[59] = carryout2carry(pablo_blk_Advance(sequence_f0_91, carryQ.get_carry_in(59), tmp239));
        sequence_f0_91_80 = simd_and(tmp239, byte_80);
        carryQ.cq[60] = carryout2carry(pablo_blk_Advance(sequence_f0_91, carryQ.get_carry_in(60), sequence_f0_91_adv));
        tmp240 = simd_andc(tmp6, tmp89);
        cc_range_11000_11002_4 = simd_andc(tmp13, tmp240);
        carryQ.cq[61] = carryout2carry(pablo_blk_Advance(sequence_f0_91_80, carryQ.get_carry_in(61), sequence_f0_91_80_adv));
        tmp241 = simd_and(sequence_f0_91_80_adv, cc_range_11000_11002_4);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp241);
        sequence_f0_91_82 = simd_and(sequence_f0_91_adv, byte_82);
        tmp242 = simd_andc(byte_range_b0_bf, tmp4);
        tmp243 = simd_andc(tmp242, tmp14);
        tmp244 = simd_or(byte_82, tmp243);
        tmp245 = simd_and(byte_range_b0_bf, tmp46);
        cc_range_11082_110b7_4 = simd_or(tmp244, tmp245);
        carryQ.cq[62] = carryout2carry(pablo_blk_Advance(sequence_f0_91_82, carryQ.get_carry_in(62), sequence_f0_91_82_adv));
        tmp246 = simd_and(sequence_f0_91_82_adv, cc_range_11082_110b7_4);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp246);
        byte_84 = simd_and(tmp13, tmp10);
        sequence_f0_91_84 = simd_and(sequence_f0_91_adv, byte_84);
        carryQ.cq[63] = carryout2carry(pablo_blk_Advance(sequence_f0_91_84, carryQ.get_carry_in(63), sequence_f0_91_84_adv));
        tmp247 = simd_and(sequence_f0_91_84_adv, byte_ac);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp247);
        byte_86 = simd_and(tmp13, tmp38);
        sequence_f0_91_86 = simd_and(sequence_f0_91_adv, byte_86);
        tmp248 = simd_not(basis_bits.bit_6);
        tmp249 = simd_or(simd_and(basis_bits.bit_5, tmp248), simd_andc(tmp14, basis_bits.bit_5));
        tmp250 = simd_and(tmp225, tmp249);
        tmp251 = simd_or(byte_82, tmp250);
        tmp252 = simd_and(byte_range_b0_bf, tmp72);
        cc_range_11182_111bf_4 = simd_or(tmp251, tmp252);
        carryQ.cq[64] = carryout2carry(pablo_blk_Advance(sequence_f0_91_86, carryQ.get_carry_in(64), sequence_f0_91_86_adv));
        tmp253 = simd_and(sequence_f0_91_86_adv, cc_range_11182_111bf_4);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp253);
        byte_87 = simd_and(tmp13, tmp42);
        sequence_f0_91_87 = simd_and(sequence_f0_91_adv, byte_87);
        carryQ.cq[65] = carryout2carry(pablo_blk_Advance(sequence_f0_91_87, carryQ.get_carry_in(65), sequence_f0_91_87_adv));
        tmp254 = simd_and(sequence_f0_91_87_adv, byte_80);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp254);
        byte_9a = simd_and(tmp53, tmp60);
        sequence_f0_91_9a = simd_and(sequence_f0_91_adv, byte_9a);
        tmp255 = simd_andc(tmp5, basis_bits.bit_6);
        tmp256 = simd_andc(tmp23, tmp255);
        tmp257 = simd_and(tmp8, tmp256);
        tmp258 = simd_and(byte_range_b0_bf, tmp38);
        cc_range_116ac_116b6_4 = simd_or(tmp257, tmp258);
        carryQ.cq[66] = carryout2carry(pablo_blk_Advance(sequence_f0_91_9a, carryQ.get_carry_in(66), sequence_f0_91_9a_adv));
        tmp259 = simd_and(sequence_f0_91_9a_adv, cc_range_116ac_116b6_4);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp259);
        byte_96 = simd_and(tmp53, tmp38);
        sequence_f0_96 = simd_and(byte_f0_adv, byte_96);
        carryQ.cq[67] = carryout2carry(pablo_blk_Advance(sequence_f0_96, carryQ.get_carry_in(67), tmp260));
        sequence_f0_96_bd = simd_and(tmp260, byte_bd);
        carryQ.cq[68] = carryout2carry(pablo_blk_Advance(sequence_f0_96, carryQ.get_carry_in(68), sequence_f0_96_adv));
        tmp261 = simd_and(basis_bits.bit_3, tmp72);
        tmp262 = simd_not(tmp261);
        tmp263 = simd_and(basis_bits.bit_3, tmp6);
        tmp264 = simd_or(simd_and(basis_bits.bit_2, tmp262), simd_andc(tmp263, basis_bits.bit_2));
        byte_range_91_be = simd_and(tmp7, tmp264);
        carryQ.cq[69] = carryout2carry(pablo_blk_Advance(sequence_f0_96_bd, carryQ.get_carry_in(69), sequence_f0_96_bd_adv));
        tmp265 = simd_and(sequence_f0_96_bd_adv, byte_range_91_be);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp265);
        byte_9d = simd_and(tmp53, tmp69);
        sequence_f0_9d = simd_and(byte_f0_adv, byte_9d);
        byte_85 = simd_and(tmp13, tmp28);
        carryQ.cq[70] = carryout2carry(pablo_blk_Advance(sequence_f0_9d, carryQ.get_carry_in(70), tmp266));
        sequence_f0_9d_85 = simd_and(tmp266, byte_85);
        carryQ.cq[71] = carryout2carry(pablo_blk_Advance(sequence_f0_9d, carryQ.get_carry_in(71), sequence_f0_9d_adv));
        tmp267 = simd_and(tmp8, tmp9);
        tmp268 = simd_and(tmp267, tmp75);
        cc_range_1d165_1d16d_4 = simd_or(tmp268, tmp178);
        carryQ.cq[72] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_85, carryQ.get_carry_in(72), sequence_f0_9d_85_adv));
        tmp269 = simd_and(sequence_f0_9d_85_adv, cc_range_1d165_1d16d_4);
        struct_Mc.cc = simd_or(struct_Mc.cc, tmp269);
  }
  CarryArray<73, 0> carryQ;
  };

  struct Mn {
  Mn() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Mn & struct_Mn) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, byte_cc, byte_range_80_bf;
		BitBlock byte_cc_adv, tmp7, tmp8, tmp9, byte_cd, tmp10, byte_range_80_af;
		BitBlock byte_cd_adv, tmp11, tmp12, tmp13, tmp14, tmp15, tmp16, byte_d2, tmp17;
		BitBlock tmp18, tmp19, tmp20, byte_range_83_87, byte_d2_adv, tmp21, tmp22;
		BitBlock tmp23, byte_d6, tmp24, tmp25, tmp26, tmp27, tmp28, tmp29, tmp30;
		BitBlock tmp31, tmp32, tmp33, cc_range_591_5bf_2, byte_d6_adv, tmp34, tmp35;
		BitBlock byte_d7, tmp36, tmp37, tmp38, tmp39, tmp40, tmp41, tmp42, tmp43;
		BitBlock cc_range_5c1_5c7_2, byte_d7_adv, tmp44, tmp45, tmp46, byte_d8, tmp47;
		BitBlock tmp48, byte_range_90_9a, byte_d8_adv, tmp49, tmp50, byte_d9, tmp51;
		BitBlock tmp52, tmp53, tmp54, cc_range_64b_670_2, byte_d9_adv, tmp55, tmp56;
		BitBlock byte_db, tmp57, tmp58, tmp59, tmp60, tmp61, tmp62, tmp63, tmp64;
		BitBlock tmp65, tmp66, tmp67, tmp68, tmp69, tmp70, tmp71, tmp72, tmp73, tmp74;
		BitBlock tmp75, tmp76, tmp77, tmp78, tmp79, tmp80, cc_range_6d6_6ea_2;
		BitBlock byte_db_adv, tmp81, byte_dc, tmp82, tmp83, cc_range_711_730_2;
		BitBlock byte_dc_adv, tmp84, byte_dd, byte_range_80_8a, byte_dd_adv, tmp85;
		BitBlock tmp86, byte_de, tmp87, tmp88, tmp89, tmp90, byte_range_a6_b0;
		BitBlock byte_de_adv, tmp91, byte_df, tmp92, tmp93, byte_range_ab_b3;
		BitBlock byte_df_adv, tmp94, tmp95, byte_e0, byte_a0, tmp96, sequence_e0_a0;
		BitBlock byte_e0_adv, tmp97, tmp98, tmp99, tmp100, tmp101, tmp102, tmp103;
		BitBlock tmp104, tmp105, tmp106, tmp107, tmp108, tmp109, tmp110, tmp111;
		BitBlock cc_range_816_829_3, sequence_e0_a0_adv, tmp112, byte_a1;
		BitBlock sequence_e0_a1, tmp113, byte_range_99_9b, sequence_e0_a1_adv, tmp114;
		BitBlock tmp115, byte_a3, sequence_e0_a3, tmp116, tmp117, byte_range_a4_be;
		BitBlock sequence_e0_a3_adv, tmp118, tmp119, byte_a4, sequence_e0_a4, tmp120;
		BitBlock tmp121, tmp122, tmp123, tmp124, cc_range_900_93c_3;
		BitBlock sequence_e0_a4_adv, tmp125, tmp126, byte_a5, sequence_e0_a5, tmp127;
		BitBlock tmp128, tmp129, tmp130, tmp131, tmp132, tmp133, tmp134;
		BitBlock cc_range_941_962_3, sequence_e0_a5_adv, tmp135, byte_a6;
		BitBlock sequence_e0_a6, tmp136, cc_range_981_9bc_3, sequence_e0_a6_adv;
		BitBlock tmp137, byte_a7, sequence_e0_a7, tmp138, tmp139, tmp140, tmp141;
		BitBlock tmp142, cc_range_9c1_9e2_3, sequence_e0_a7_adv, tmp143, byte_a8;
		BitBlock sequence_e0_a8, cc_range_a01_a3c_3, sequence_e0_a8_adv, tmp144;
		BitBlock byte_a9, sequence_e0_a9, tmp145, tmp146, tmp147, tmp148, tmp149;
		BitBlock tmp150, tmp151, tmp152, tmp153, tmp154, tmp155, cc_range_a41_a75_3;
		BitBlock sequence_e0_a9_adv, tmp156, byte_aa, sequence_e0_aa;
		BitBlock cc_range_a81_abc_3, sequence_e0_aa_adv, tmp157, byte_ab;
		BitBlock sequence_e0_ab, tmp158, tmp159, tmp160, cc_range_ac1_ae2_3;
		BitBlock sequence_e0_ab_adv, tmp161, byte_ac, sequence_e0_ac;
		BitBlock cc_range_b01_b3f_3, sequence_e0_ac_adv, tmp162, byte_ad;
		BitBlock sequence_e0_ad, tmp163, tmp164, cc_range_b41_b62_3;
		BitBlock sequence_e0_ad_adv, tmp165, byte_ae, sequence_e0_ae, byte_82;
		BitBlock sequence_e0_ae_adv, tmp166, byte_af, sequence_e0_af, tmp167;
		BitBlock cc_range_bc0_bcd_3, sequence_e0_af_adv, tmp168, byte_b0;
		BitBlock sequence_e0_b0, byte_range_be_bf, sequence_e0_b0_adv, tmp169, byte_b1;
		BitBlock sequence_e0_b1, tmp170, tmp171, tmp172, tmp173, tmp174, tmp175;
		BitBlock tmp176, tmp177, cc_range_c40_c62_3, sequence_e0_b1_adv, tmp178;
		BitBlock byte_b2, sequence_e0_b2, tmp179, tmp180, cc_range_cbc_cbf_3;
		BitBlock sequence_e0_b2_adv, tmp181, byte_b3, sequence_e0_b3, tmp182, tmp183;
		BitBlock tmp184, cc_range_cc6_ce2_3, sequence_e0_b3_adv, tmp185, byte_b5;
		BitBlock sequence_e0_b5, cc_range_d41_d62_3, sequence_e0_b5_adv, tmp186;
		BitBlock byte_b7, sequence_e0_b7, tmp187, tmp188, tmp189, tmp190;
		BitBlock cc_range_dca_dd6_3, sequence_e0_b7_adv, tmp191, byte_b8;
		BitBlock sequence_e0_b8, tmp192, tmp193, tmp194, cc_range_e31_e34_3;
		BitBlock sequence_e0_b8_adv, tmp195, byte_b9, sequence_e0_b9, tmp196, tmp197;
		BitBlock byte_range_87_8e, sequence_e0_b9_adv, tmp198, byte_ba, sequence_e0_ba;
		BitBlock tmp199, tmp200, tmp201, tmp202, tmp203, tmp204, cc_range_eb1_ebb_3;
		BitBlock sequence_e0_ba_adv, tmp205, byte_bb, sequence_e0_bb, byte_range_88_8d;
		BitBlock sequence_e0_bb_adv, tmp206, byte_bc, sequence_e0_bc, tmp207, tmp208;
		BitBlock tmp209, tmp210, cc_range_f18_f39_3, sequence_e0_bc_adv, tmp211;
		BitBlock byte_bd, sequence_e0_bd, tmp212, byte_range_b1_be, sequence_e0_bd_adv;
		BitBlock tmp213, byte_be, sequence_e0_be, tmp214, tmp215, tmp216, tmp217;
		BitBlock tmp218, tmp219, tmp220, tmp221, tmp222, tmp223, tmp224, tmp225;
		BitBlock tmp226, tmp227, tmp228, cc_range_f80_f99_3, sequence_e0_be_adv;
		BitBlock tmp229, byte_bf, sequence_e0_bf, byte_86, sequence_e0_bf_adv, tmp230;
		BitBlock byte_e1, byte_80, tmp231, sequence_e1_80, byte_e1_adv, tmp232, tmp233;
		BitBlock tmp234, tmp235, tmp236, tmp237, tmp238, tmp239, tmp240, tmp241;
		BitBlock cc_range_102d_103d_3, sequence_e1_80_adv, tmp242, byte_81;
		BitBlock sequence_e1_81, tmp243, tmp244, tmp245, tmp246, tmp247, tmp248;
		BitBlock cc_range_1058_1071_3, sequence_e1_81_adv, tmp249, sequence_e1_82;
		BitBlock tmp250, tmp251, tmp252, tmp253, tmp254, cc_range_1082_109d_3;
		BitBlock sequence_e1_82_adv, tmp255, byte_8d, sequence_e1_8d, tmp256;
		BitBlock byte_range_9d_9f, sequence_e1_8d_adv, tmp257, byte_9c, sequence_e1_9c;
		BitBlock tmp258, tmp259, cc_range_1712_1732_3, sequence_e1_9c_adv, tmp260;
		BitBlock byte_9d, sequence_e1_9d, cc_range_1752_1772_3, sequence_e1_9d_adv;
		BitBlock tmp261, byte_9e, sequence_e1_9e, tmp262, tmp263, tmp264;
		BitBlock cc_range_17b4_17b7_3, sequence_e1_9e_adv, tmp265, byte_9f;
		BitBlock sequence_e1_9f, tmp266, tmp267, tmp268, cc_range_17c6_17dd_3;
		BitBlock sequence_e1_9f_adv, tmp269, sequence_e1_a0, byte_range_8b_8d;
		BitBlock sequence_e1_a0_adv, tmp270, byte_a2, sequence_e1_a2;
		BitBlock sequence_e1_a2_adv, tmp271, sequence_e1_a4, tmp272, tmp273, tmp274;
		BitBlock tmp275, tmp276, cc_range_1920_1939_3, sequence_e1_a4_adv, tmp277;
		BitBlock sequence_e1_a8, tmp278, cc_range_1a17_1a1b_3, sequence_e1_a8_adv;
		BitBlock tmp279, sequence_e1_a9, tmp280, tmp281, tmp282, tmp283, tmp284;
		BitBlock tmp285, tmp286, tmp287, tmp288, tmp289, tmp290, cc_range_1a56_1a7f_3;
		BitBlock sequence_e1_a9_adv, tmp291, sequence_e1_ac, tmp292, tmp293, tmp294;
		BitBlock tmp295, tmp296, cc_range_1b00_1b3c_3, sequence_e1_ac_adv, tmp297;
		BitBlock sequence_e1_ad, cc_range_1b42_1b6b_3, sequence_e1_ad_adv, tmp298;
		BitBlock sequence_e1_ae, tmp299, tmp300, tmp301, tmp302, tmp303, tmp304;
		BitBlock cc_range_1b80_1bab_3, sequence_e1_ae_adv, tmp305, sequence_e1_af;
		BitBlock tmp306, tmp307, tmp308, tmp309, tmp310, tmp311, cc_range_1be6_1bef_3;
		BitBlock sequence_e1_af_adv, tmp312, sequence_e1_b0, tmp313, tmp314, tmp315;
		BitBlock cc_range_1c2c_1c36_3, sequence_e1_b0_adv, tmp316, sequence_e1_b3;
		BitBlock tmp317, tmp318, tmp319, tmp320, tmp321, tmp322, tmp323, tmp324;
		BitBlock tmp325, tmp326, cc_range_1cd0_1cf4_3, sequence_e1_b3_adv, tmp327;
		BitBlock sequence_e1_b7, tmp328, tmp329, tmp330, tmp331, cc_range_1dc0_1dfc_3;
		BitBlock sequence_e1_b7_adv, tmp332, byte_e2, byte_83, tmp333, sequence_e2_83;
		BitBlock byte_e2_adv, tmp334, tmp335, tmp336, tmp337, tmp338;
		BitBlock cc_range_20d0_20e5_3, sequence_e2_83_adv, tmp339, sequence_e2_b3;
		BitBlock byte_range_af_b1, sequence_e2_b3_adv, tmp340, sequence_e2_b5;
		BitBlock sequence_e2_b5_adv, tmp341, sequence_e2_b7, byte_range_a0_bf;
		BitBlock sequence_e2_b7_adv, tmp342, byte_e3, tmp343, sequence_e3_80;
		BitBlock byte_e3_adv, byte_range_aa_ad, sequence_e3_80_adv, tmp344;
		BitBlock sequence_e3_82, byte_range_99_9a, sequence_e3_82_adv, tmp345, byte_ea;
		BitBlock byte_99, tmp346, sequence_ea_99, byte_ea_adv, tmp347, tmp348;
		BitBlock cc_range_a66f_a674_3, sequence_ea_99_adv, tmp349, byte_9a;
		BitBlock sequence_ea_9a, sequence_ea_9a_adv, tmp350, byte_9b, sequence_ea_9b;
		BitBlock byte_range_b0_b1, sequence_ea_9b_adv, tmp351, sequence_ea_a0, tmp352;
		BitBlock tmp353, tmp354, tmp355, tmp356, cc_range_a802_a825_3;
		BitBlock sequence_ea_a0_adv, tmp357, sequence_ea_a3, tmp358, tmp359, tmp360;
		BitBlock cc_range_a8c4_a8e0_3, sequence_ea_a3_adv, tmp361, sequence_ea_a4;
		BitBlock tmp362, byte_range_a6_ad, sequence_ea_a4_adv, tmp363, sequence_ea_a5;
		BitBlock tmp364, byte_range_87_91, sequence_ea_a5_adv, tmp365, sequence_ea_a6;
		BitBlock tmp366, tmp367, tmp368, cc_range_a980_a9bc_3, sequence_ea_a6_adv;
		BitBlock tmp369, sequence_ea_a8, tmp370, tmp371, tmp372, tmp373, tmp374;
		BitBlock tmp375, tmp376, tmp377, cc_range_aa29_aa35_3, sequence_ea_a8_adv;
		BitBlock tmp378, sequence_ea_a9, tmp379, cc_range_aa43_aa4c_3;
		BitBlock sequence_ea_a9_adv, tmp380, sequence_ea_aa, tmp381, tmp382, tmp383;
		BitBlock tmp384, cc_range_aab0_aabe_3, sequence_ea_aa_adv, tmp385;
		BitBlock sequence_ea_ab, tmp386, tmp387, tmp388, cc_range_aac1_aaf6_3;
		BitBlock sequence_ea_ab_adv, tmp389, sequence_ea_af, tmp390, tmp391;
		BitBlock cc_range_abe5_abed_3, sequence_ea_af_adv, tmp392, byte_ef, tmp393;
		BitBlock sequence_ef_ac, byte_ef_adv, sequence_ef_ac_adv, tmp394;
		BitBlock sequence_ef_b8, tmp395, cc_range_fe00_fe20_3, sequence_ef_b8_adv;
		BitBlock tmp396, tmp397, byte_f0, byte_90, tmp398, sequence_f0_90, byte_f0_adv;
		BitBlock byte_87, tmp399, sequence_f0_90_87, sequence_f0_90_adv;
		BitBlock sequence_f0_90_87_adv, tmp400, sequence_f0_90_a8, tmp401, tmp402;
		BitBlock tmp403, tmp404, tmp405, tmp406, cc_range_10a01_10a3f_4;
		BitBlock sequence_f0_90_a8_adv, tmp407, byte_91, sequence_f0_91, tmp408;
		BitBlock sequence_f0_91_80, sequence_f0_91_adv, cc_range_11001_11038_4;
		BitBlock sequence_f0_91_80_adv, tmp409, sequence_f0_91_81, byte_range_80_86;
		BitBlock sequence_f0_91_81_adv, tmp410, sequence_f0_91_82, tmp411, tmp412;
		BitBlock tmp413, cc_range_11080_110b9_4, sequence_f0_91_82_adv, tmp414;
		BitBlock byte_84, sequence_f0_91_84, tmp415, tmp416, tmp417, tmp418, tmp419;
		BitBlock tmp420, tmp421, cc_range_11100_1112d_4, sequence_f0_91_84_adv, tmp422;
		BitBlock sequence_f0_91_86, tmp423, tmp424, cc_range_11180_111b6_4;
		BitBlock sequence_f0_91_86_adv, tmp425, sequence_f0_91_9a, tmp426, tmp427;
		BitBlock tmp428, tmp429, cc_range_116ab_116b7_4, sequence_f0_91_9a_adv, tmp430;
		BitBlock byte_96, sequence_f0_96, tmp431, sequence_f0_96_be;
		BitBlock sequence_f0_96_adv, tmp432, tmp433, tmp434, byte_range_8f_92;
		BitBlock sequence_f0_96_be_adv, tmp435, sequence_f0_9d, byte_85, tmp436;
		BitBlock sequence_f0_9d_85, sequence_f0_9d_adv, tmp437, tmp438, tmp439;
		BitBlock cc_range_1d167_1d17b_4, sequence_f0_9d_85_adv, tmp440;
		BitBlock sequence_f0_9d_86, tmp441, tmp442, tmp443, cc_range_1d180_1d1aa_4;
		BitBlock sequence_f0_9d_86_adv, tmp444, byte_89, sequence_f0_9d_89;
		BitBlock byte_range_82_84, sequence_f0_9d_89_adv, tmp445, byte_f3, tmp446;
		BitBlock sequence_f3_a0, byte_f3_adv, byte_range_84_86, tmp447;
		BitBlock sequence_f3_a0_byte_range_84_86, tmp448;
		BitBlock sequence_f3_a0_byte_range_84_86_sfx, sequence_f3_a0_adv;
		BitBlock sequence_f3_a0_87, tmp449, sequence_f3_a0_87_byte_range_80_af;




        struct_Mn.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp1, tmp2);
        tmp4 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_andc(tmp4, tmp5);
        byte_cc = simd_and(tmp3, tmp6);
        byte_range_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(byte_cc, carryQ.get_carry_in(0), byte_cc_adv));
        tmp7 = simd_and(byte_cc_adv, byte_range_80_bf);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp7);
        tmp8 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp9 = simd_and(tmp4, tmp8);
        byte_cd = simd_and(tmp3, tmp9);
        tmp10 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        byte_range_80_af = simd_andc(byte_range_80_bf, tmp10);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(byte_cd, carryQ.get_carry_in(1), byte_cd_adv));
        tmp11 = simd_and(byte_cd_adv, byte_range_80_af);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp11);
        tmp12 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp13 = simd_and(tmp1, tmp12);
        tmp14 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp15 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp16 = simd_andc(tmp15, tmp14);
        byte_d2 = simd_and(tmp13, tmp16);
        tmp17 = simd_andc(byte_range_80_bf, tmp2);
        tmp18 = simd_andc(tmp17, basis_bits.bit_4);
        tmp19 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp20 = simd_or(basis_bits.bit_5, tmp19);
        byte_range_83_87 = simd_and(tmp18, tmp20);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(byte_d2, carryQ.get_carry_in(2), byte_d2_adv));
        tmp21 = simd_and(byte_d2_adv, byte_range_83_87);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp21);
        tmp22 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp23 = simd_and(tmp22, tmp15);
        byte_d6 = simd_and(tmp13, tmp23);
        tmp24 = simd_and(tmp4, basis_bits.bit_6);
        tmp25 = simd_and(basis_bits.bit_3, tmp24);
        tmp26 = simd_not(tmp25);
        tmp27 = simd_or(tmp14, tmp5);
        tmp28 = simd_and(basis_bits.bit_3, tmp27);
        tmp29 = simd_or(simd_and(basis_bits.bit_2, tmp26), simd_andc(tmp28, basis_bits.bit_2));
        tmp30 = simd_and(byte_range_80_bf, tmp29);
        tmp31 = simd_and(byte_range_80_bf, tmp10);
        tmp32 = simd_and(tmp4, tmp19);
        tmp33 = simd_and(tmp31, tmp32);
        cc_range_591_5bf_2 = simd_or(tmp30, tmp33);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(byte_d6, carryQ.get_carry_in(3), byte_d6_adv));
        tmp34 = simd_and(byte_d6_adv, cc_range_591_5bf_2);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp34);
        tmp35 = simd_and(tmp22, tmp19);
        byte_d7 = simd_and(tmp13, tmp35);
        tmp36 = simd_andc(tmp17, tmp14);
        tmp37 = simd_not(basis_bits.bit_7);
        tmp38 = simd_or(simd_and(basis_bits.bit_6, tmp37), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
        tmp39 = simd_and(tmp36, tmp38);
        tmp40 = simd_andc(tmp22, basis_bits.bit_6);
        tmp41 = simd_and(tmp17, tmp40);
        tmp42 = simd_or(tmp39, tmp41);
        tmp43 = simd_and(tmp17, tmp35);
        cc_range_5c1_5c7_2 = simd_or(tmp42, tmp43);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(byte_d7, carryQ.get_carry_in(4), byte_d7_adv));
        tmp44 = simd_and(byte_d7_adv, cc_range_5c1_5c7_2);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp44);
        tmp45 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp46 = simd_andc(tmp45, tmp5);
        byte_d8 = simd_and(tmp13, tmp46);
        tmp47 = simd_and(byte_range_80_bf, tmp12);
        tmp48 = simd_and(basis_bits.bit_4, tmp20);
        byte_range_90_9a = simd_andc(tmp47, tmp48);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(byte_d8, carryQ.get_carry_in(5), byte_d8_adv));
        tmp49 = simd_and(byte_d8_adv, byte_range_90_9a);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp49);
        tmp50 = simd_and(tmp45, tmp8);
        byte_d9 = simd_and(tmp13, tmp50);
        tmp51 = simd_andc(byte_range_80_bf, basis_bits.bit_2);
        tmp52 = simd_or(basis_bits.bit_3, tmp48);
        tmp53 = simd_and(tmp51, tmp52);
        tmp54 = simd_andc(tmp31, tmp27);
        cc_range_64b_670_2 = simd_or(tmp53, tmp54);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(byte_d9, carryQ.get_carry_in(6), byte_d9_adv));
        tmp55 = simd_and(byte_d9_adv, cc_range_64b_670_2);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp55);
        tmp56 = simd_and(tmp45, tmp19);
        byte_db = simd_and(tmp13, tmp56);
        tmp57 = simd_and(basis_bits.bit_5, tmp5);
        tmp58 = simd_not(tmp57);
        tmp59 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp60 = simd_or(simd_and(basis_bits.bit_4, tmp58), simd_andc(tmp59, basis_bits.bit_4));
        tmp61 = simd_and(tmp47, tmp60);
        tmp62 = simd_or(basis_bits.bit_4, tmp57);
        tmp63 = simd_or(basis_bits.bit_3, tmp62);
        tmp64 = simd_not(tmp63);
        tmp65 = simd_and(basis_bits.bit_3, tmp32);
        tmp66 = simd_or(simd_and(basis_bits.bit_2, tmp64), simd_andc(tmp65, basis_bits.bit_2));
        tmp67 = simd_and(byte_range_80_bf, tmp66);
        tmp68 = simd_or(tmp61, tmp67);
        tmp69 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp70 = simd_and(byte_range_80_bf, tmp69);
        tmp71 = simd_or(basis_bits.bit_5, tmp5);
        tmp72 = simd_not(tmp71);
        tmp73 = simd_and(basis_bits.bit_5, tmp19);
        tmp74 = simd_or(simd_and(basis_bits.bit_4, tmp72), simd_andc(tmp73, basis_bits.bit_4));
        tmp75 = simd_and(tmp70, tmp74);
        tmp76 = simd_or(tmp68, tmp75);
        tmp77 = simd_and(tmp70, basis_bits.bit_4);
        tmp78 = simd_not(basis_bits.bit_6);
        tmp79 = simd_or(simd_and(basis_bits.bit_5, tmp78), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        tmp80 = simd_and(tmp77, tmp79);
        cc_range_6d6_6ea_2 = simd_or(tmp76, tmp80);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(byte_db, carryQ.get_carry_in(7), byte_db_adv));
        tmp81 = simd_and(byte_db_adv, cc_range_6d6_6ea_2);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp81);
        byte_dc = simd_and(tmp13, tmp6);
        tmp82 = simd_andc(tmp8, tmp14);
        tmp83 = simd_and(tmp47, tmp82);
        cc_range_711_730_2 = simd_or(tmp83, tmp31);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(byte_dc, carryQ.get_carry_in(8), byte_dc_adv));
        tmp84 = simd_and(byte_dc_adv, cc_range_711_730_2);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp84);
        byte_dd = simd_and(tmp13, tmp9);
        byte_range_80_8a = simd_andc(tmp17, tmp48);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(byte_dd, carryQ.get_carry_in(9), byte_dd_adv));
        tmp85 = simd_and(byte_dd_adv, byte_range_80_8a);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp85);
        tmp86 = simd_and(tmp4, tmp15);
        byte_de = simd_and(tmp13, tmp86);
        tmp87 = simd_and(byte_range_80_bf, basis_bits.bit_2);
        tmp88 = simd_not(tmp27);
        tmp89 = simd_or(basis_bits.bit_4, tmp59);
        tmp90 = simd_or(simd_and(basis_bits.bit_3, tmp88), simd_andc(tmp89, basis_bits.bit_3));
        byte_range_a6_b0 = simd_and(tmp87, tmp90);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(byte_de, carryQ.get_carry_in(10), byte_de_adv));
        tmp91 = simd_and(byte_de_adv, byte_range_a6_b0);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp91);
        byte_df = simd_and(tmp13, tmp32);
        tmp92 = simd_not(tmp14);
        tmp93 = simd_or(simd_and(basis_bits.bit_3, tmp92), simd_andc(tmp48, basis_bits.bit_3));
        byte_range_ab_b3 = simd_and(tmp87, tmp93);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(byte_df, carryQ.get_carry_in(11), byte_df_adv));
        tmp94 = simd_and(byte_df_adv, byte_range_ab_b3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp94);
        tmp95 = simd_and(tmp1, tmp69);
        byte_e0 = simd_andc(tmp95, tmp27);
        byte_a0 = simd_andc(tmp70, tmp27);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(byte_e0, carryQ.get_carry_in(12), tmp96));
        sequence_e0_a0 = simd_and(tmp96, byte_a0);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(byte_e0, carryQ.get_carry_in(13), byte_e0_adv));
        tmp97 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
        tmp98 = simd_not(tmp97);
        tmp99 = simd_or(simd_and(basis_bits.bit_4, tmp98), simd_andc(tmp59, basis_bits.bit_4));
        tmp100 = simd_and(tmp47, tmp99);
        tmp101 = simd_or(basis_bits.bit_3, tmp14);
        tmp102 = simd_not(tmp101);
        tmp103 = simd_and(basis_bits.bit_3, tmp48);
        tmp104 = simd_or(simd_and(basis_bits.bit_2, tmp102), simd_andc(tmp103, basis_bits.bit_2));
        tmp105 = simd_and(byte_range_80_bf, tmp104);
        tmp106 = simd_or(tmp100, tmp105);
        tmp107 = simd_and(tmp70, tmp22);
        tmp108 = simd_and(tmp107, tmp5);
        tmp109 = simd_or(tmp106, tmp108);
        tmp110 = simd_or(simd_and(basis_bits.bit_5, tmp78), simd_andc(tmp5, basis_bits.bit_5));
        tmp111 = simd_and(tmp77, tmp110);
        cc_range_816_829_3 = simd_or(tmp109, tmp111);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(sequence_e0_a0, carryQ.get_carry_in(14), sequence_e0_a0_adv));
        tmp112 = simd_and(sequence_e0_a0_adv, cc_range_816_829_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp112);
        byte_a1 = simd_and(tmp70, tmp82);
        sequence_e0_a1 = simd_and(byte_e0_adv, byte_a1);
        tmp113 = simd_and(tmp47, tmp45);
        byte_range_99_9b = simd_and(tmp113, tmp5);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(sequence_e0_a1, carryQ.get_carry_in(15), sequence_e0_a1_adv));
        tmp114 = simd_and(sequence_e0_a1_adv, byte_range_99_9b);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp114);
        tmp115 = simd_andc(tmp19, tmp14);
        byte_a3 = simd_and(tmp70, tmp115);
        sequence_e0_a3 = simd_and(byte_e0_adv, byte_a3);
        tmp116 = simd_not(tmp32);
        tmp117 = simd_or(simd_and(basis_bits.bit_3, tmp116), simd_andc(tmp14, basis_bits.bit_3));
        byte_range_a4_be = simd_and(tmp87, tmp117);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(sequence_e0_a3, carryQ.get_carry_in(16), sequence_e0_a3_adv));
        tmp118 = simd_and(sequence_e0_a3_adv, byte_range_a4_be);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp118);
        tmp119 = simd_andc(tmp22, tmp5);
        byte_a4 = simd_and(tmp70, tmp119);
        sequence_e0_a4 = simd_and(byte_e0_adv, byte_a4);
        tmp120 = simd_andc(tmp36, tmp19);
        tmp121 = simd_and(tmp45, tmp15);
        tmp122 = simd_and(tmp31, tmp121);
        tmp123 = simd_or(tmp120, tmp122);
        tmp124 = simd_and(tmp31, tmp6);
        cc_range_900_93c_3 = simd_or(tmp123, tmp124);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(sequence_e0_a4, carryQ.get_carry_in(17), sequence_e0_a4_adv));
        tmp125 = simd_and(sequence_e0_a4_adv, cc_range_900_93c_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp125);
        tmp126 = simd_and(tmp22, tmp8);
        byte_a5 = simd_and(tmp70, tmp126);
        sequence_e0_a5 = simd_and(byte_e0_adv, byte_a5);
        tmp127 = simd_or(simd_and(basis_bits.bit_4, tmp72), simd_andc(tmp71, basis_bits.bit_4));
        tmp128 = simd_or(tmp127, tmp9);
        tmp129 = simd_and(tmp17, tmp128);
        tmp130 = simd_andc(tmp47, basis_bits.bit_4);
        tmp131 = simd_and(tmp130, tmp71);
        tmp132 = simd_or(tmp129, tmp131);
        tmp133 = simd_andc(basis_bits.bit_6, tmp14);
        tmp134 = simd_and(tmp70, tmp133);
        cc_range_941_962_3 = simd_or(tmp132, tmp134);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(sequence_e0_a5, carryQ.get_carry_in(18), sequence_e0_a5_adv));
        tmp135 = simd_and(sequence_e0_a5_adv, cc_range_941_962_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp135);
        byte_a6 = simd_and(tmp70, tmp23);
        sequence_e0_a6 = simd_and(byte_e0_adv, byte_a6);
        tmp136 = simd_and(tmp17, tmp82);
        cc_range_981_9bc_3 = simd_or(tmp136, tmp124);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(sequence_e0_a6, carryQ.get_carry_in(19), sequence_e0_a6_adv));
        tmp137 = simd_and(sequence_e0_a6_adv, cc_range_981_9bc_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp137);
        byte_a7 = simd_and(tmp70, tmp35);
        sequence_e0_a7 = simd_and(byte_e0_adv, byte_a7);
        tmp138 = simd_not(tmp5);
        tmp139 = simd_or(simd_and(basis_bits.bit_5, tmp138), simd_andc(tmp5, basis_bits.bit_5));
        tmp140 = simd_and(tmp18, tmp139);
        tmp141 = simd_and(tmp17, tmp9);
        tmp142 = simd_or(tmp140, tmp141);
        cc_range_9c1_9e2_3 = simd_or(tmp142, tmp134);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(sequence_e0_a7, carryQ.get_carry_in(20), sequence_e0_a7_adv));
        tmp143 = simd_and(sequence_e0_a7_adv, cc_range_9c1_9e2_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp143);
        byte_a8 = simd_and(tmp70, tmp46);
        sequence_e0_a8 = simd_and(byte_e0_adv, byte_a8);
        cc_range_a01_a3c_3 = simd_or(tmp39, tmp124);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(sequence_e0_a8, carryQ.get_carry_in(21), sequence_e0_a8_adv));
        tmp144 = simd_and(sequence_e0_a8_adv, cc_range_a01_a3c_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp144);
        byte_a9 = simd_and(tmp70, tmp50);
        sequence_e0_a9 = simd_and(byte_e0_adv, byte_a9);
        tmp145 = simd_and(tmp17, tmp74);
        tmp146 = simd_or(tmp39, tmp145);
        tmp147 = simd_and(tmp17, basis_bits.bit_4);
        tmp148 = simd_or(simd_and(basis_bits.bit_5, tmp78), simd_andc(tmp19, basis_bits.bit_5));
        tmp149 = simd_and(tmp147, tmp148);
        tmp150 = simd_or(tmp146, tmp149);
        tmp151 = simd_or(tmp150, tmp83);
        tmp152 = simd_or(tmp14, basis_bits.bit_6);
        tmp153 = simd_andc(tmp31, tmp152);
        tmp154 = simd_or(tmp151, tmp153);
        tmp155 = simd_and(tmp31, tmp126);
        cc_range_a41_a75_3 = simd_or(tmp154, tmp155);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(sequence_e0_a9, carryQ.get_carry_in(22), sequence_e0_a9_adv));
        tmp156 = simd_and(sequence_e0_a9_adv, cc_range_a41_a75_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp156);
        byte_aa = simd_and(tmp70, tmp121);
        sequence_e0_aa = simd_and(byte_e0_adv, byte_aa);
        cc_range_a81_abc_3 = simd_or(tmp39, tmp124);
        carryQ.cq[23] = carryout2carry(pablo_blk_Advance(sequence_e0_aa, carryQ.get_carry_in(23), sequence_e0_aa_adv));
        tmp157 = simd_and(sequence_e0_aa_adv, cc_range_a81_abc_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp157);
        byte_ab = simd_and(tmp70, tmp56);
        sequence_e0_ab = simd_and(byte_e0_adv, byte_ab);
        tmp158 = simd_and(tmp18, tmp110);
        tmp159 = simd_or(tmp158, tmp145);
        tmp160 = simd_or(tmp159, tmp141);
        cc_range_ac1_ae2_3 = simd_or(tmp160, tmp134);
        carryQ.cq[24] = carryout2carry(pablo_blk_Advance(sequence_e0_ab, carryQ.get_carry_in(24), sequence_e0_ab_adv));
        tmp161 = simd_and(sequence_e0_ab_adv, cc_range_ac1_ae2_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp161);
        byte_ac = simd_and(tmp70, tmp6);
        sequence_e0_ac = simd_and(byte_e0_adv, byte_ac);
        cc_range_b01_b3f_3 = simd_or(cc_range_981_9bc_3, tmp33);
        carryQ.cq[25] = carryout2carry(pablo_blk_Advance(sequence_e0_ac, carryQ.get_carry_in(25), sequence_e0_ac_adv));
        tmp162 = simd_and(sequence_e0_ac_adv, cc_range_b01_b3f_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp162);
        byte_ad = simd_and(tmp70, tmp9);
        sequence_e0_ad = simd_and(byte_e0_adv, byte_ad);
        tmp163 = simd_and(tmp47, tmp23);
        tmp164 = simd_or(tmp142, tmp163);
        cc_range_b41_b62_3 = simd_or(tmp164, tmp134);
        carryQ.cq[26] = carryout2carry(pablo_blk_Advance(sequence_e0_ad, carryQ.get_carry_in(26), sequence_e0_ad_adv));
        tmp165 = simd_and(sequence_e0_ad_adv, cc_range_b41_b62_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp165);
        byte_ae = simd_and(tmp70, tmp86);
        sequence_e0_ae = simd_and(byte_e0_adv, byte_ae);
        byte_82 = simd_and(tmp17, tmp16);
        carryQ.cq[27] = carryout2carry(pablo_blk_Advance(sequence_e0_ae, carryQ.get_carry_in(27), sequence_e0_ae_adv));
        tmp166 = simd_and(sequence_e0_ae_adv, byte_82);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp166);
        byte_af = simd_and(tmp70, tmp32);
        sequence_e0_af = simd_and(byte_e0_adv, byte_af);
        tmp167 = simd_andc(tmp27, tmp9);
        cc_range_bc0_bcd_3 = simd_andc(tmp17, tmp167);
        carryQ.cq[28] = carryout2carry(pablo_blk_Advance(sequence_e0_af, carryQ.get_carry_in(28), sequence_e0_af_adv));
        tmp168 = simd_and(sequence_e0_af_adv, cc_range_bc0_bcd_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp168);
        byte_b0 = simd_andc(tmp31, tmp27);
        sequence_e0_b0 = simd_and(byte_e0_adv, byte_b0);
        byte_range_be_bf = simd_and(tmp31, tmp24);
        carryQ.cq[29] = carryout2carry(pablo_blk_Advance(sequence_e0_b0, carryQ.get_carry_in(29), sequence_e0_b0_adv));
        tmp169 = simd_and(sequence_e0_b0_adv, byte_range_be_bf);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp169);
        byte_b1 = simd_and(tmp31, tmp82);
        sequence_e0_b1 = simd_and(byte_e0_adv, byte_b1);
        tmp170 = simd_or(simd_and(basis_bits.bit_4, tmp72), simd_andc(tmp59, basis_bits.bit_4));
        tmp171 = simd_andc(tmp27, tmp170);
        tmp172 = simd_andc(tmp17, tmp171);
        tmp173 = simd_and(tmp147, tmp79);
        tmp174 = simd_or(tmp172, tmp173);
        tmp175 = simd_and(tmp47, tmp22);
        tmp176 = simd_and(tmp175, tmp38);
        tmp177 = simd_or(tmp174, tmp176);
        cc_range_c40_c62_3 = simd_or(tmp177, tmp134);
        carryQ.cq[30] = carryout2carry(pablo_blk_Advance(sequence_e0_b1, carryQ.get_carry_in(30), sequence_e0_b1_adv));
        tmp178 = simd_and(sequence_e0_b1_adv, cc_range_c40_c62_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp178);
        byte_b2 = simd_and(tmp31, tmp16);
        sequence_e0_b2 = simd_and(byte_e0_adv, byte_b2);
        tmp179 = simd_andc(tmp5, tmp19);
        tmp180 = simd_andc(tmp4, tmp179);
        cc_range_cbc_cbf_3 = simd_and(tmp31, tmp180);
        carryQ.cq[31] = carryout2carry(pablo_blk_Advance(sequence_e0_b2, carryQ.get_carry_in(31), sequence_e0_b2_adv));
        tmp181 = simd_and(sequence_e0_b2_adv, cc_range_cbc_cbf_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp181);
        byte_b3 = simd_and(tmp31, tmp115);
        sequence_e0_b3 = simd_and(byte_e0_adv, byte_b3);
        tmp182 = simd_andc(tmp4, basis_bits.bit_6);
        tmp183 = simd_or(tmp23, tmp182);
        tmp184 = simd_and(tmp17, tmp183);
        cc_range_cc6_ce2_3 = simd_or(tmp184, tmp134);
        carryQ.cq[32] = carryout2carry(pablo_blk_Advance(sequence_e0_b3, carryQ.get_carry_in(32), sequence_e0_b3_adv));
        tmp185 = simd_and(sequence_e0_b3_adv, cc_range_cc6_ce2_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp185);
        byte_b5 = simd_and(tmp31, tmp126);
        sequence_e0_b5 = simd_and(byte_e0_adv, byte_b5);
        cc_range_d41_d62_3 = simd_or(tmp142, tmp134);
        carryQ.cq[33] = carryout2carry(pablo_blk_Advance(sequence_e0_b5, carryQ.get_carry_in(33), sequence_e0_b5_adv));
        tmp186 = simd_and(sequence_e0_b5_adv, cc_range_d41_d62_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp186);
        byte_b7 = simd_and(tmp31, tmp35);
        sequence_e0_b7 = simd_and(byte_e0_adv, byte_b7);
        tmp187 = simd_and(tmp17, tmp121);
        tmp188 = simd_or(simd_and(basis_bits.bit_5, tmp138), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        tmp189 = simd_and(tmp130, tmp188);
        tmp190 = simd_or(tmp187, tmp189);
        cc_range_dca_dd6_3 = simd_or(tmp190, tmp163);
        carryQ.cq[34] = carryout2carry(pablo_blk_Advance(sequence_e0_b7, carryQ.get_carry_in(34), sequence_e0_b7_adv));
        tmp191 = simd_and(sequence_e0_b7_adv, cc_range_dca_dd6_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp191);
        byte_b8 = simd_and(tmp31, tmp46);
        sequence_e0_b8 = simd_and(byte_e0_adv, byte_b8);
        tmp192 = simd_not(tmp20);
        tmp193 = simd_or(simd_and(basis_bits.bit_4, tmp192), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
        tmp194 = simd_or(tmp82, tmp193);
        cc_range_e31_e34_3 = simd_and(tmp31, tmp194);
        carryQ.cq[35] = carryout2carry(pablo_blk_Advance(sequence_e0_b8, carryQ.get_carry_in(35), sequence_e0_b8_adv));
        tmp195 = simd_and(sequence_e0_b8_adv, cc_range_e31_e34_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp195);
        byte_b9 = simd_and(tmp31, tmp50);
        sequence_e0_b9 = simd_and(byte_e0_adv, byte_b9);
        tmp196 = simd_not(tmp73);
        tmp197 = simd_or(simd_and(basis_bits.bit_4, tmp196), simd_andc(tmp73, basis_bits.bit_4));
        byte_range_87_8e = simd_and(tmp17, tmp197);
        carryQ.cq[36] = carryout2carry(pablo_blk_Advance(sequence_e0_b9, carryQ.get_carry_in(36), sequence_e0_b9_adv));
        tmp198 = simd_and(sequence_e0_b9_adv, byte_range_87_8e);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp198);
        byte_ba = simd_and(tmp31, tmp121);
        sequence_e0_ba = simd_and(byte_e0_adv, byte_ba);
        tmp199 = simd_or(simd_and(basis_bits.bit_4, tmp98), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
        tmp200 = simd_or(tmp82, tmp199);
        tmp201 = simd_and(tmp31, tmp200);
        tmp202 = simd_and(tmp31, basis_bits.bit_4);
        tmp203 = simd_or(simd_and(basis_bits.bit_5, tmp138), simd_andc(tmp19, basis_bits.bit_5));
        tmp204 = simd_and(tmp202, tmp203);
        cc_range_eb1_ebb_3 = simd_or(tmp201, tmp204);
        carryQ.cq[37] = carryout2carry(pablo_blk_Advance(sequence_e0_ba, carryQ.get_carry_in(37), sequence_e0_ba_adv));
        tmp205 = simd_and(sequence_e0_ba_adv, cc_range_eb1_ebb_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp205);
        byte_bb = simd_and(tmp31, tmp56);
        sequence_e0_bb = simd_and(byte_e0_adv, byte_bb);
        byte_range_88_8d = simd_andc(tmp147, tmp59);
        carryQ.cq[38] = carryout2carry(pablo_blk_Advance(sequence_e0_bb, carryQ.get_carry_in(38), sequence_e0_bb_adv));
        tmp206 = simd_and(sequence_e0_bb_adv, byte_range_88_8d);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp206);
        byte_bc = simd_and(tmp31, tmp6);
        sequence_e0_bc = simd_and(byte_e0_adv, byte_bc);
        tmp207 = simd_andc(tmp45, basis_bits.bit_6);
        tmp208 = simd_and(tmp47, tmp207);
        tmp209 = simd_or(tmp208, byte_b5);
        tmp210 = simd_or(tmp209, byte_b7);
        cc_range_f18_f39_3 = simd_or(tmp210, byte_b9);
        carryQ.cq[39] = carryout2carry(pablo_blk_Advance(sequence_e0_bc, carryQ.get_carry_in(39), sequence_e0_bc_adv));
        tmp211 = simd_and(sequence_e0_bc_adv, cc_range_f18_f39_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp211);
        byte_bd = simd_and(tmp31, tmp9);
        sequence_e0_bd = simd_and(byte_e0_adv, byte_bd);
        tmp212 = simd_or(simd_and(basis_bits.bit_4, tmp196), simd_andc(tmp71, basis_bits.bit_4));
        byte_range_b1_be = simd_and(tmp31, tmp212);
        carryQ.cq[40] = carryout2carry(pablo_blk_Advance(sequence_e0_bd, carryQ.get_carry_in(40), sequence_e0_bd_adv));
        tmp213 = simd_and(sequence_e0_bd_adv, byte_range_b1_be);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp213);
        byte_be = simd_and(tmp31, tmp86);
        sequence_e0_be = simd_and(byte_e0_adv, byte_be);
        tmp214 = simd_andc(tmp18, tmp57);
        tmp215 = simd_and(tmp22, basis_bits.bit_6);
        tmp216 = simd_and(tmp17, tmp215);
        tmp217 = simd_or(tmp214, tmp216);
        tmp218 = simd_not(basis_bits.bit_4);
        tmp219 = simd_and(tmp4, tmp5);
        tmp220 = simd_or(simd_and(basis_bits.bit_3, tmp218), simd_andc(tmp219, basis_bits.bit_3));
        tmp221 = simd_and(tmp51, tmp220);
        tmp222 = simd_or(tmp217, tmp221);
        tmp223 = simd_and(basis_bits.bit_3, tmp219);
        tmp224 = simd_not(tmp223);
        tmp225 = simd_and(basis_bits.bit_4, tmp71);
        tmp226 = simd_and(basis_bits.bit_3, tmp225);
        tmp227 = simd_or(simd_and(basis_bits.bit_2, tmp224), simd_andc(tmp226, basis_bits.bit_2));
        tmp228 = simd_and(byte_range_80_bf, tmp227);
        cc_range_f80_f99_3 = simd_or(tmp222, tmp228);
        carryQ.cq[41] = carryout2carry(pablo_blk_Advance(sequence_e0_be, carryQ.get_carry_in(41), sequence_e0_be_adv));
        tmp229 = simd_and(sequence_e0_be_adv, cc_range_f80_f99_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp229);
        byte_bf = simd_and(tmp31, tmp32);
        sequence_e0_bf = simd_and(byte_e0_adv, byte_bf);
        byte_86 = simd_and(tmp17, tmp23);
        carryQ.cq[42] = carryout2carry(pablo_blk_Advance(sequence_e0_bf, carryQ.get_carry_in(42), sequence_e0_bf_adv));
        tmp230 = simd_and(sequence_e0_bf_adv, byte_86);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp230);
        byte_e1 = simd_and(tmp95, tmp82);
        byte_80 = simd_andc(tmp17, tmp27);
        carryQ.cq[43] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(43), tmp231));
        sequence_e1_80 = simd_and(tmp231, byte_80);
        carryQ.cq[44] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(44), byte_e1_adv));
        tmp232 = simd_or(simd_and(basis_bits.bit_3, tmp88), simd_andc(tmp219, basis_bits.bit_3));
        tmp233 = simd_and(tmp87, tmp232);
        tmp234 = simd_andc(tmp31, basis_bits.bit_4);
        tmp235 = simd_and(tmp234, tmp97);
        tmp236 = simd_or(tmp233, tmp235);
        tmp237 = simd_and(tmp31, tmp45);
        tmp238 = simd_and(tmp237, tmp38);
        tmp239 = simd_or(tmp236, tmp238);
        tmp240 = simd_and(tmp31, tmp4);
        tmp241 = simd_and(tmp240, tmp38);
        cc_range_102d_103d_3 = simd_or(tmp239, tmp241);
        carryQ.cq[45] = carryout2carry(pablo_blk_Advance(sequence_e1_80, carryQ.get_carry_in(45), sequence_e1_80_adv));
        tmp242 = simd_and(sequence_e1_80_adv, cc_range_102d_103d_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp242);
        byte_81 = simd_and(tmp17, tmp82);
        sequence_e1_81 = simd_and(byte_e1_adv, byte_81);
        tmp243 = simd_or(basis_bits.bit_3, tmp27);
        tmp244 = simd_not(tmp243);
        tmp245 = simd_or(simd_and(basis_bits.bit_2, tmp244), simd_andc(tmp25, basis_bits.bit_2));
        tmp246 = simd_and(byte_range_80_bf, tmp245);
        tmp247 = simd_or(tmp208, tmp246);
        tmp248 = simd_and(tmp234, tmp139);
        cc_range_1058_1071_3 = simd_or(tmp247, tmp248);
        carryQ.cq[46] = carryout2carry(pablo_blk_Advance(sequence_e1_81, carryQ.get_carry_in(46), sequence_e1_81_adv));
        tmp249 = simd_and(sequence_e1_81_adv, cc_range_1058_1071_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp249);
        sequence_e1_82 = simd_and(byte_e1_adv, byte_82);
        tmp250 = simd_and(tmp17, tmp22);
        tmp251 = simd_and(tmp250, tmp38);
        tmp252 = simd_or(byte_82, tmp251);
        tmp253 = simd_or(tmp252, tmp141);
        tmp254 = simd_and(tmp47, tmp9);
        cc_range_1082_109d_3 = simd_or(tmp253, tmp254);
        carryQ.cq[47] = carryout2carry(pablo_blk_Advance(sequence_e1_82, carryQ.get_carry_in(47), sequence_e1_82_adv));
        tmp255 = simd_and(sequence_e1_82_adv, cc_range_1082_109d_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp255);
        byte_8d = simd_and(tmp17, tmp9);
        sequence_e1_8d = simd_and(byte_e1_adv, byte_8d);
        tmp256 = simd_and(tmp47, tmp4);
        byte_range_9d_9f = simd_and(tmp256, tmp5);
        carryQ.cq[48] = carryout2carry(pablo_blk_Advance(sequence_e1_8d, carryQ.get_carry_in(48), sequence_e1_8d_adv));
        tmp257 = simd_and(sequence_e1_8d_adv, byte_range_9d_9f);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp257);
        byte_9c = simd_and(tmp47, tmp6);
        sequence_e1_9c = simd_and(byte_e1_adv, byte_9c);
        tmp258 = simd_and(byte_range_80_bf, basis_bits.bit_3);
        tmp259 = simd_andc(tmp258, basis_bits.bit_4);
        cc_range_1712_1732_3 = simd_and(tmp188, tmp259);
        carryQ.cq[49] = carryout2carry(pablo_blk_Advance(sequence_e1_9c, carryQ.get_carry_in(49), sequence_e1_9c_adv));
        tmp260 = simd_and(sequence_e1_9c_adv, cc_range_1712_1732_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp260);
        byte_9d = simd_and(tmp47, tmp9);
        sequence_e1_9d = simd_and(byte_e1_adv, byte_9d);
        cc_range_1752_1772_3 = simd_and(tmp133, tmp258);
        carryQ.cq[50] = carryout2carry(pablo_blk_Advance(sequence_e1_9d, carryQ.get_carry_in(50), sequence_e1_9d_adv));
        tmp261 = simd_and(sequence_e1_9d_adv, cc_range_1752_1772_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp261);
        byte_9e = simd_and(tmp47, tmp86);
        sequence_e1_9e = simd_and(byte_e1_adv, byte_9e);
        tmp262 = simd_not(tmp59);
        tmp263 = simd_or(simd_and(basis_bits.bit_4, tmp262), simd_andc(tmp73, basis_bits.bit_4));
        tmp264 = simd_or(tmp40, tmp263);
        cc_range_17b4_17b7_3 = simd_and(tmp31, tmp264);
        carryQ.cq[51] = carryout2carry(pablo_blk_Advance(sequence_e1_9e, carryQ.get_carry_in(51), sequence_e1_9e_adv));
        tmp265 = simd_and(sequence_e1_9e_adv, cc_range_17b4_17b7_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp265);
        byte_9f = simd_and(tmp47, tmp32);
        sequence_e1_9f = simd_and(byte_e1_adv, byte_9f);
        tmp266 = simd_or(simd_and(basis_bits.bit_3, tmp92), simd_andc(tmp225, basis_bits.bit_3));
        tmp267 = simd_and(tmp51, tmp266);
        tmp268 = simd_or(byte_86, tmp267);
        cc_range_17c6_17dd_3 = simd_or(tmp268, byte_9d);
        carryQ.cq[52] = carryout2carry(pablo_blk_Advance(sequence_e1_9f, carryQ.get_carry_in(52), sequence_e1_9f_adv));
        tmp269 = simd_and(sequence_e1_9f_adv, cc_range_17c6_17dd_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp269);
        sequence_e1_a0 = simd_and(byte_e1_adv, byte_a0);
        byte_range_8b_8d = simd_and(tmp147, tmp148);
        carryQ.cq[53] = carryout2carry(pablo_blk_Advance(sequence_e1_a0, carryQ.get_carry_in(53), sequence_e1_a0_adv));
        tmp270 = simd_and(sequence_e1_a0_adv, byte_range_8b_8d);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp270);
        byte_a2 = simd_and(tmp70, tmp16);
        sequence_e1_a2 = simd_and(byte_e1_adv, byte_a2);
        carryQ.cq[54] = carryout2carry(pablo_blk_Advance(sequence_e1_a2, carryQ.get_carry_in(54), sequence_e1_a2_adv));
        tmp271 = simd_and(sequence_e1_a2_adv, byte_a9);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp271);
        sequence_e1_a4 = simd_and(byte_e1_adv, byte_a4);
        tmp272 = simd_andc(tmp70, tmp14);
        tmp273 = simd_andc(tmp272, tmp19);
        tmp274 = simd_or(tmp273, tmp75);
        tmp275 = simd_or(tmp274, byte_b2);
        tmp276 = simd_and(tmp237, tmp5);
        cc_range_1920_1939_3 = simd_or(tmp275, tmp276);
        carryQ.cq[55] = carryout2carry(pablo_blk_Advance(sequence_e1_a4, carryQ.get_carry_in(55), sequence_e1_a4_adv));
        tmp277 = simd_and(sequence_e1_a4_adv, cc_range_1920_1939_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp277);
        sequence_e1_a8 = simd_and(byte_e1_adv, byte_a8);
        tmp278 = simd_or(tmp74, tmp56);
        cc_range_1a17_1a1b_3 = simd_and(tmp47, tmp278);
        carryQ.cq[56] = carryout2carry(pablo_blk_Advance(sequence_e1_a8, carryQ.get_carry_in(56), sequence_e1_a8_adv));
        tmp279 = simd_and(sequence_e1_a8_adv, cc_range_1a17_1a1b_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp279);
        sequence_e1_a9 = simd_and(byte_e1_adv, byte_a9);
        tmp280 = simd_and(tmp47, basis_bits.bit_4);
        tmp281 = simd_andc(tmp280, tmp73);
        tmp282 = simd_or(tmp163, tmp281);
        tmp283 = simd_or(tmp282, byte_a0);
        tmp284 = simd_or(tmp283, byte_a2);
        tmp285 = simd_or(simd_and(basis_bits.bit_4, tmp58), simd_andc(tmp57, basis_bits.bit_4));
        tmp286 = simd_and(tmp70, tmp285);
        tmp287 = simd_or(tmp284, tmp286);
        tmp288 = simd_or(simd_and(basis_bits.bit_4, tmp58), simd_andc(tmp20, basis_bits.bit_4));
        tmp289 = simd_and(tmp31, tmp288);
        tmp290 = simd_or(tmp287, tmp289);
        cc_range_1a56_1a7f_3 = simd_or(tmp290, byte_bf);
        carryQ.cq[57] = carryout2carry(pablo_blk_Advance(sequence_e1_a9, carryQ.get_carry_in(57), sequence_e1_a9_adv));
        tmp291 = simd_and(sequence_e1_a9_adv, cc_range_1a56_1a7f_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp291);
        sequence_e1_ac = simd_and(byte_e1_adv, byte_ac);
        tmp292 = simd_and(tmp31, tmp119);
        tmp293 = simd_or(tmp36, tmp292);
        tmp294 = simd_or(simd_and(basis_bits.bit_4, tmp192), simd_andc(tmp59, basis_bits.bit_4));
        tmp295 = simd_and(tmp31, tmp294);
        tmp296 = simd_or(tmp293, tmp295);
        cc_range_1b00_1b3c_3 = simd_or(tmp296, byte_bc);
        carryQ.cq[58] = carryout2carry(pablo_blk_Advance(sequence_e1_ac, carryQ.get_carry_in(58), sequence_e1_ac_adv));
        tmp297 = simd_and(sequence_e1_ac_adv, cc_range_1b00_1b3c_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp297);
        sequence_e1_ad = simd_and(byte_e1_adv, byte_ad);
        cc_range_1b42_1b6b_3 = simd_or(byte_82, byte_range_ab_b3);
        carryQ.cq[59] = carryout2carry(pablo_blk_Advance(sequence_e1_ad, carryQ.get_carry_in(59), sequence_e1_ad_adv));
        tmp298 = simd_and(sequence_e1_ad_adv, cc_range_1b42_1b6b_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp298);
        sequence_e1_ae = simd_and(byte_e1_adv, byte_ae);
        tmp299 = simd_andc(tmp17, tmp152);
        tmp300 = simd_andc(tmp70, basis_bits.bit_4);
        tmp301 = simd_and(tmp300, tmp79);
        tmp302 = simd_or(tmp299, tmp301);
        tmp303 = simd_and(tmp70, tmp207);
        tmp304 = simd_or(tmp302, tmp303);
        cc_range_1b80_1bab_3 = simd_or(tmp304, byte_ab);
        carryQ.cq[60] = carryout2carry(pablo_blk_Advance(sequence_e1_ae, carryQ.get_carry_in(60), sequence_e1_ae_adv));
        tmp305 = simd_and(sequence_e1_ae_adv, cc_range_1b80_1bab_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp305);
        sequence_e1_af = simd_and(byte_e1_adv, byte_af);
        tmp306 = simd_or(tmp23, tmp207);
        tmp307 = simd_or(tmp306, tmp9);
        tmp308 = simd_and(tmp70, tmp307);
        tmp309 = simd_not(tmp152);
        tmp310 = simd_or(simd_and(basis_bits.bit_3, tmp309), simd_andc(tmp32, basis_bits.bit_3));
        tmp311 = simd_and(tmp87, tmp310);
        cc_range_1be6_1bef_3 = simd_or(tmp308, tmp311);
        carryQ.cq[61] = carryout2carry(pablo_blk_Advance(sequence_e1_af, carryQ.get_carry_in(61), sequence_e1_af_adv));
        tmp312 = simd_and(sequence_e1_af_adv, cc_range_1be6_1bef_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp312);
        sequence_e1_b0 = simd_and(byte_e1_adv, byte_b0);
        tmp313 = simd_or(simd_and(basis_bits.bit_3, tmp92), simd_andc(tmp4, basis_bits.bit_3));
        tmp314 = simd_and(tmp87, tmp313);
        tmp315 = simd_and(tmp31, tmp215);
        cc_range_1c2c_1c36_3 = simd_or(tmp314, tmp315);
        carryQ.cq[62] = carryout2carry(pablo_blk_Advance(sequence_e1_b0, carryQ.get_carry_in(62), sequence_e1_b0_adv));
        tmp316 = simd_and(sequence_e1_b0_adv, cc_range_1c2c_1c36_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp316);
        sequence_e1_b3 = simd_and(byte_e1_adv, byte_b3);
        tmp317 = simd_andc(tmp47, tmp14);
        tmp318 = simd_andc(tmp317, tmp19);
        tmp319 = simd_and(basis_bits.bit_3, tmp14);
        tmp320 = simd_or(simd_and(basis_bits.bit_2, tmp244), simd_andc(tmp319, basis_bits.bit_2));
        tmp321 = simd_and(byte_range_80_bf, tmp320);
        tmp322 = simd_or(tmp318, tmp321);
        tmp323 = simd_or(simd_and(basis_bits.bit_4, tmp72), simd_andc(tmp97, basis_bits.bit_4));
        tmp324 = simd_and(tmp70, tmp323);
        tmp325 = simd_or(tmp322, tmp324);
        tmp326 = simd_or(tmp325, byte_ad);
        cc_range_1cd0_1cf4_3 = simd_or(tmp326, tmp292);
        carryQ.cq[63] = carryout2carry(pablo_blk_Advance(sequence_e1_b3, carryQ.get_carry_in(63), sequence_e1_b3_adv));
        tmp327 = simd_and(sequence_e1_b3_adv, cc_range_1cd0_1cf4_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp327);
        sequence_e1_b7 = simd_and(byte_e1_adv, byte_b7);
        tmp328 = simd_or(basis_bits.bit_4, tmp73);
        tmp329 = simd_or(basis_bits.bit_3, tmp328);
        tmp330 = simd_and(basis_bits.bit_2, tmp329);
        tmp331 = simd_andc(byte_range_80_bf, tmp330);
        cc_range_1dc0_1dfc_3 = simd_or(tmp331, tmp240);
        carryQ.cq[64] = carryout2carry(pablo_blk_Advance(sequence_e1_b7, carryQ.get_carry_in(64), sequence_e1_b7_adv));
        tmp332 = simd_and(sequence_e1_b7_adv, cc_range_1dc0_1dfc_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp332);
        byte_e2 = simd_and(tmp95, tmp16);
        byte_83 = simd_and(tmp17, tmp115);
        carryQ.cq[65] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(65), tmp333));
        sequence_e2_83 = simd_and(tmp333, byte_83);
        carryQ.cq[66] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(66), byte_e2_adv));
        tmp334 = simd_and(basis_bits.bit_4, tmp57);
        tmp335 = simd_andc(tmp47, tmp334);
        tmp336 = simd_or(tmp335, byte_a1);
        tmp337 = simd_or(simd_and(basis_bits.bit_3, tmp88), simd_andc(tmp62, basis_bits.bit_3));
        tmp338 = simd_and(tmp87, tmp337);
        cc_range_20d0_20e5_3 = simd_or(tmp336, tmp338);
        carryQ.cq[67] = carryout2carry(pablo_blk_Advance(sequence_e2_83, carryQ.get_carry_in(67), sequence_e2_83_adv));
        tmp339 = simd_and(sequence_e2_83_adv, cc_range_20d0_20e5_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp339);
        sequence_e2_b3 = simd_and(byte_e2_adv, byte_b3);
        byte_range_af_b1 = simd_and(tmp87, tmp310);
        carryQ.cq[68] = carryout2carry(pablo_blk_Advance(sequence_e2_b3, carryQ.get_carry_in(68), sequence_e2_b3_adv));
        tmp340 = simd_and(sequence_e2_b3_adv, byte_range_af_b1);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp340);
        sequence_e2_b5 = simd_and(byte_e2_adv, byte_b5);
        carryQ.cq[69] = carryout2carry(pablo_blk_Advance(sequence_e2_b5, carryQ.get_carry_in(69), sequence_e2_b5_adv));
        tmp341 = simd_and(sequence_e2_b5_adv, byte_bf);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp341);
        sequence_e2_b7 = simd_and(byte_e2_adv, byte_b7);
        byte_range_a0_bf = simd_and(byte_range_80_bf, basis_bits.bit_2);
        carryQ.cq[70] = carryout2carry(pablo_blk_Advance(sequence_e2_b7, carryQ.get_carry_in(70), sequence_e2_b7_adv));
        tmp342 = simd_and(sequence_e2_b7_adv, byte_range_a0_bf);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp342);
        byte_e3 = simd_and(tmp95, tmp115);
        carryQ.cq[71] = carryout2carry(pablo_blk_Advance(byte_e3, carryQ.get_carry_in(71), tmp343));
        sequence_e3_80 = simd_and(tmp343, byte_80);
        carryQ.cq[72] = carryout2carry(pablo_blk_Advance(byte_e3, carryQ.get_carry_in(72), byte_e3_adv));
        byte_range_aa_ad = simd_and(tmp77, tmp79);
        carryQ.cq[73] = carryout2carry(pablo_blk_Advance(sequence_e3_80, carryQ.get_carry_in(73), sequence_e3_80_adv));
        tmp344 = simd_and(sequence_e3_80_adv, byte_range_aa_ad);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp344);
        sequence_e3_82 = simd_and(byte_e3_adv, byte_82);
        byte_range_99_9a = simd_and(tmp113, tmp38);
        carryQ.cq[74] = carryout2carry(pablo_blk_Advance(sequence_e3_82, carryQ.get_carry_in(74), sequence_e3_82_adv));
        tmp345 = simd_and(sequence_e3_82_adv, byte_range_99_9a);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp345);
        byte_ea = simd_and(tmp95, tmp121);
        byte_99 = simd_and(tmp47, tmp50);
        carryQ.cq[75] = carryout2carry(pablo_blk_Advance(byte_ea, carryQ.get_carry_in(75), tmp346));
        sequence_ea_99 = simd_and(tmp346, byte_99);
        carryQ.cq[76] = carryout2carry(pablo_blk_Advance(byte_ea, carryQ.get_carry_in(76), byte_ea_adv));
        tmp347 = simd_or(simd_and(basis_bits.bit_4, tmp262), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
        tmp348 = simd_and(tmp31, tmp347);
        cc_range_a66f_a674_3 = simd_or(byte_af, tmp348);
        carryQ.cq[77] = carryout2carry(pablo_blk_Advance(sequence_ea_99, carryQ.get_carry_in(77), sequence_ea_99_adv));
        tmp349 = simd_and(sequence_ea_99_adv, cc_range_a66f_a674_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp349);
        byte_9a = simd_and(tmp47, tmp121);
        sequence_ea_9a = simd_and(byte_ea_adv, byte_9a);
        carryQ.cq[78] = carryout2carry(pablo_blk_Advance(sequence_ea_9a, carryQ.get_carry_in(78), sequence_ea_9a_adv));
        tmp350 = simd_and(sequence_ea_9a_adv, byte_9f);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp350);
        byte_9b = simd_and(tmp47, tmp56);
        sequence_ea_9b = simd_and(byte_ea_adv, byte_9b);
        byte_range_b0_b1 = simd_andc(tmp31, tmp152);
        carryQ.cq[79] = carryout2carry(pablo_blk_Advance(sequence_ea_9b, carryQ.get_carry_in(79), sequence_ea_9b_adv));
        tmp351 = simd_and(sequence_ea_9b_adv, byte_range_b0_b1);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp351);
        sequence_ea_a0 = simd_and(byte_ea_adv, byte_a0);
        tmp352 = simd_andc(tmp14, tmp22);
        tmp353 = simd_andc(tmp15, tmp352);
        tmp354 = simd_or(tmp353, tmp56);
        tmp355 = simd_and(tmp17, tmp354);
        tmp356 = simd_and(tmp107, tmp38);
        cc_range_a802_a825_3 = simd_or(tmp355, tmp356);
        carryQ.cq[80] = carryout2carry(pablo_blk_Advance(sequence_ea_a0, carryQ.get_carry_in(80), sequence_ea_a0_adv));
        tmp357 = simd_and(sequence_ea_a0_adv, cc_range_a802_a825_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp357);
        sequence_ea_a3 = simd_and(byte_ea_adv, byte_a3);
        tmp358 = simd_and(tmp17, tmp119);
        tmp359 = simd_and(basis_bits.bit_3, tmp152);
        tmp360 = simd_andc(byte_range_a0_bf, tmp359);
        cc_range_a8c4_a8e0_3 = simd_or(tmp358, tmp360);
        carryQ.cq[81] = carryout2carry(pablo_blk_Advance(sequence_ea_a3, carryQ.get_carry_in(81), sequence_ea_a3_adv));
        tmp361 = simd_and(sequence_ea_a3_adv, cc_range_a8c4_a8e0_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp361);
        sequence_ea_a4 = simd_and(byte_ea_adv, byte_a4);
        tmp362 = simd_or(simd_and(basis_bits.bit_4, tmp262), simd_andc(tmp59, basis_bits.bit_4));
        byte_range_a6_ad = simd_and(tmp70, tmp362);
        carryQ.cq[82] = carryout2carry(pablo_blk_Advance(sequence_ea_a4, carryQ.get_carry_in(82), sequence_ea_a4_adv));
        tmp363 = simd_and(sequence_ea_a4_adv, byte_range_a6_ad);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp363);
        sequence_ea_a5 = simd_and(byte_ea_adv, byte_a5);
        tmp364 = simd_or(simd_and(basis_bits.bit_3, tmp309), simd_andc(tmp328, basis_bits.bit_3));
        byte_range_87_91 = simd_and(tmp51, tmp364);
        carryQ.cq[83] = carryout2carry(pablo_blk_Advance(sequence_ea_a5, carryQ.get_carry_in(83), sequence_ea_a5_adv));
        tmp365 = simd_and(sequence_ea_a5_adv, byte_range_87_91);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp365);
        sequence_ea_a6 = simd_and(byte_ea_adv, byte_a6);
        tmp366 = simd_or(tmp120, byte_b3);
        tmp367 = simd_and(tmp31, tmp99);
        tmp368 = simd_or(tmp366, tmp367);
        cc_range_a980_a9bc_3 = simd_or(tmp368, byte_bc);
        carryQ.cq[84] = carryout2carry(pablo_blk_Advance(sequence_ea_a6, carryQ.get_carry_in(84), sequence_ea_a6_adv));
        tmp369 = simd_and(sequence_ea_a6_adv, cc_range_a980_a9bc_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp369);
        sequence_ea_a8 = simd_and(byte_ea_adv, byte_a8);
        tmp370 = simd_not(tmp19);
        tmp371 = simd_or(simd_and(basis_bits.bit_5, tmp370), simd_andc(tmp5, basis_bits.bit_5));
        tmp372 = simd_and(tmp77, tmp371);
        tmp373 = simd_andc(tmp31, tmp14);
        tmp374 = simd_and(tmp373, tmp38);
        tmp375 = simd_or(tmp372, tmp374);
        tmp376 = simd_and(tmp31, tmp22);
        tmp377 = simd_and(tmp376, tmp38);
        cc_range_aa29_aa35_3 = simd_or(tmp375, tmp377);
        carryQ.cq[85] = carryout2carry(pablo_blk_Advance(sequence_ea_a8, carryQ.get_carry_in(85), sequence_ea_a8_adv));
        tmp378 = simd_and(sequence_ea_a8_adv, cc_range_aa29_aa35_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp378);
        sequence_ea_a9 = simd_and(byte_ea_adv, byte_a9);
        tmp379 = simd_or(tmp115, tmp6);
        cc_range_aa43_aa4c_3 = simd_and(tmp17, tmp379);
        carryQ.cq[86] = carryout2carry(pablo_blk_Advance(sequence_ea_a9, carryQ.get_carry_in(86), sequence_ea_a9_adv));
        tmp380 = simd_and(sequence_ea_a9_adv, cc_range_aa43_aa4c_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp380);
        sequence_ea_aa = simd_and(byte_ea_adv, byte_aa);
        tmp381 = simd_and(tmp234, tmp188);
        tmp382 = simd_or(byte_b0, tmp381);
        tmp383 = simd_and(tmp31, tmp74);
        tmp384 = simd_or(tmp382, tmp383);
        cc_range_aab0_aabe_3 = simd_or(tmp384, byte_range_be_bf);
        carryQ.cq[87] = carryout2carry(pablo_blk_Advance(sequence_ea_aa, carryQ.get_carry_in(87), sequence_ea_aa_adv));
        tmp385 = simd_and(sequence_ea_aa_adv, cc_range_aab0_aabe_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp385);
        sequence_ea_ab = simd_and(byte_ea_adv, byte_ab);
        tmp386 = simd_and(tmp70, tmp182);
        tmp387 = simd_or(byte_81, tmp386);
        tmp388 = simd_and(tmp31, tmp23);
        cc_range_aac1_aaf6_3 = simd_or(tmp387, tmp388);
        carryQ.cq[88] = carryout2carry(pablo_blk_Advance(sequence_ea_ab, carryQ.get_carry_in(88), sequence_ea_ab_adv));
        tmp389 = simd_and(sequence_ea_ab_adv, cc_range_aac1_aaf6_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp389);
        sequence_ea_af = simd_and(byte_ea_adv, byte_af);
        tmp390 = simd_or(tmp126, tmp46);
        tmp391 = simd_or(tmp390, tmp9);
        cc_range_abe5_abed_3 = simd_and(tmp70, tmp391);
        carryQ.cq[89] = carryout2carry(pablo_blk_Advance(sequence_ea_af, carryQ.get_carry_in(89), sequence_ea_af_adv));
        tmp392 = simd_and(sequence_ea_af_adv, cc_range_abe5_abed_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp392);
        byte_ef = simd_and(tmp95, tmp32);
        carryQ.cq[90] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(90), tmp393));
        sequence_ef_ac = simd_and(tmp393, byte_ac);
        carryQ.cq[91] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(91), byte_ef_adv));
        carryQ.cq[92] = carryout2carry(pablo_blk_Advance(sequence_ef_ac, carryQ.get_carry_in(92), sequence_ef_ac_adv));
        tmp394 = simd_and(sequence_ef_ac_adv, byte_9e);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp394);
        sequence_ef_b8 = simd_and(byte_ef_adv, byte_b8);
        tmp395 = simd_andc(tmp300, tmp73);
        cc_range_fe00_fe20_3 = simd_or(tmp17, tmp395);
        carryQ.cq[93] = carryout2carry(pablo_blk_Advance(sequence_ef_b8, carryQ.get_carry_in(93), sequence_ef_b8_adv));
        tmp396 = simd_and(sequence_ef_b8_adv, cc_range_fe00_fe20_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp396);
        tmp397 = simd_and(tmp1, tmp10);
        byte_f0 = simd_andc(tmp397, tmp27);
        byte_90 = simd_andc(tmp47, tmp27);
        carryQ.cq[94] = carryout2carry(pablo_blk_Advance(byte_f0, carryQ.get_carry_in(94), tmp398));
        sequence_f0_90 = simd_and(tmp398, byte_90);
        carryQ.cq[95] = carryout2carry(pablo_blk_Advance(byte_f0, carryQ.get_carry_in(95), byte_f0_adv));
        byte_87 = simd_and(tmp17, tmp35);
        carryQ.cq[96] = carryout2carry(pablo_blk_Advance(sequence_f0_90, carryQ.get_carry_in(96), tmp399));
        sequence_f0_90_87 = simd_and(tmp399, byte_87);
        carryQ.cq[97] = carryout2carry(pablo_blk_Advance(sequence_f0_90, carryQ.get_carry_in(97), sequence_f0_90_adv));
        carryQ.cq[98] = carryout2carry(pablo_blk_Advance(sequence_f0_90_87, carryQ.get_carry_in(98), sequence_f0_90_87_adv));
        tmp400 = simd_and(sequence_f0_90_87_adv, byte_bd);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp400);
        sequence_f0_90_a8 = simd_and(sequence_f0_90_adv, byte_a8);
        tmp401 = simd_and(tmp36, tmp5);
        tmp402 = simd_or(tmp401, tmp251);
        tmp403 = simd_and(tmp17, tmp4);
        tmp404 = simd_or(tmp402, tmp403);
        tmp405 = simd_andc(tmp237, tmp19);
        tmp406 = simd_or(tmp404, tmp405);
        cc_range_10a01_10a3f_4 = simd_or(tmp406, byte_bf);
        carryQ.cq[99] = carryout2carry(pablo_blk_Advance(sequence_f0_90_a8, carryQ.get_carry_in(99), sequence_f0_90_a8_adv));
        tmp407 = simd_and(sequence_f0_90_a8_adv, cc_range_10a01_10a3f_4);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp407);
        byte_91 = simd_and(tmp47, tmp82);
        sequence_f0_91 = simd_and(byte_f0_adv, byte_91);
        carryQ.cq[100] = carryout2carry(pablo_blk_Advance(sequence_f0_91, carryQ.get_carry_in(100), tmp408));
        sequence_f0_91_80 = simd_and(tmp408, byte_80);
        carryQ.cq[101] = carryout2carry(pablo_blk_Advance(sequence_f0_91, carryQ.get_carry_in(101), sequence_f0_91_adv));
        cc_range_11001_11038_4 = simd_or(byte_81, tmp202);
        carryQ.cq[102] = carryout2carry(pablo_blk_Advance(sequence_f0_91_80, carryQ.get_carry_in(102), sequence_f0_91_80_adv));
        tmp409 = simd_and(sequence_f0_91_80_adv, cc_range_11001_11038_4);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp409);
        sequence_f0_91_81 = simd_and(sequence_f0_91_adv, byte_81);
        byte_range_80_86 = simd_andc(tmp18, tmp73);
        carryQ.cq[103] = carryout2carry(pablo_blk_Advance(sequence_f0_91_81, carryQ.get_carry_in(103), sequence_f0_91_81_adv));
        tmp410 = simd_and(sequence_f0_91_81_adv, byte_range_80_86);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp410);
        sequence_f0_91_82 = simd_and(sequence_f0_91_adv, byte_82);
        tmp411 = simd_or(simd_and(basis_bits.bit_5, tmp370), simd_andc(tmp19, basis_bits.bit_5));
        tmp412 = simd_and(tmp234, tmp411);
        tmp413 = simd_or(tmp299, tmp412);
        cc_range_11080_110b9_4 = simd_or(tmp413, tmp238);
        carryQ.cq[104] = carryout2carry(pablo_blk_Advance(sequence_f0_91_82, carryQ.get_carry_in(104), sequence_f0_91_82_adv));
        tmp414 = simd_and(sequence_f0_91_82_adv, cc_range_11080_110b9_4);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp414);
        byte_84 = simd_and(tmp17, tmp119);
        sequence_f0_91_84 = simd_and(sequence_f0_91_adv, byte_84);
        tmp415 = simd_not(basis_bits.bit_5);
        tmp416 = simd_or(simd_and(basis_bits.bit_4, tmp415), simd_andc(tmp73, basis_bits.bit_4));
        tmp417 = simd_and(tmp70, tmp416);
        tmp418 = simd_or(tmp120, tmp417);
        tmp419 = simd_not(tmp62);
        tmp420 = simd_or(simd_and(basis_bits.bit_3, tmp419), simd_andc(tmp219, basis_bits.bit_3));
        tmp421 = simd_and(byte_range_a0_bf, tmp420);
        cc_range_11100_1112d_4 = simd_or(tmp418, tmp421);
        carryQ.cq[105] = carryout2carry(pablo_blk_Advance(sequence_f0_91_84, carryQ.get_carry_in(105), sequence_f0_91_84_adv));
        tmp422 = simd_and(sequence_f0_91_84_adv, cc_range_11100_1112d_4);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp422);
        sequence_f0_91_86 = simd_and(sequence_f0_91_adv, byte_86);
        tmp423 = simd_or(simd_and(basis_bits.bit_4, tmp196), simd_andc(tmp59, basis_bits.bit_4));
        tmp424 = simd_and(tmp31, tmp423);
        cc_range_11180_111b6_4 = simd_or(tmp299, tmp424);
        carryQ.cq[106] = carryout2carry(pablo_blk_Advance(sequence_f0_91_86, carryQ.get_carry_in(106), sequence_f0_91_86_adv));
        tmp425 = simd_and(sequence_f0_91_86_adv, cc_range_11180_111b6_4);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp425);
        sequence_f0_91_9a = simd_and(sequence_f0_91_adv, byte_9a);
        tmp426 = simd_or(tmp56, tmp9);
        tmp427 = simd_and(tmp70, tmp426);
        tmp428 = simd_andc(tmp234, tmp59);
        tmp429 = simd_or(tmp427, tmp428);
        cc_range_116ab_116b7_4 = simd_or(tmp429, byte_b7);
        carryQ.cq[107] = carryout2carry(pablo_blk_Advance(sequence_f0_91_9a, carryQ.get_carry_in(107), sequence_f0_91_9a_adv));
        tmp430 = simd_and(sequence_f0_91_9a_adv, cc_range_116ab_116b7_4);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp430);
        byte_96 = simd_and(tmp47, tmp23);
        sequence_f0_96 = simd_and(byte_f0_adv, byte_96);
        carryQ.cq[108] = carryout2carry(pablo_blk_Advance(sequence_f0_96, carryQ.get_carry_in(108), tmp431));
        sequence_f0_96_be = simd_and(tmp431, byte_be);
        carryQ.cq[109] = carryout2carry(pablo_blk_Advance(sequence_f0_96, carryQ.get_carry_in(109), sequence_f0_96_adv));
        tmp432 = simd_or(tmp14, tmp19);
        tmp433 = simd_not(tmp432);
        tmp434 = simd_or(simd_and(basis_bits.bit_3, tmp433), simd_andc(tmp32, basis_bits.bit_3));
        byte_range_8f_92 = simd_and(tmp51, tmp434);
        carryQ.cq[110] = carryout2carry(pablo_blk_Advance(sequence_f0_96_be, carryQ.get_carry_in(110), sequence_f0_96_be_adv));
        tmp435 = simd_and(sequence_f0_96_be_adv, byte_range_8f_92);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp435);
        sequence_f0_9d = simd_and(byte_f0_adv, byte_9d);
        byte_85 = simd_and(tmp17, tmp126);
        carryQ.cq[111] = carryout2carry(pablo_blk_Advance(sequence_f0_9d, carryQ.get_carry_in(111), tmp436));
        sequence_f0_9d_85 = simd_and(tmp436, byte_85);
        carryQ.cq[112] = carryout2carry(pablo_blk_Advance(sequence_f0_9d, carryQ.get_carry_in(112), sequence_f0_9d_adv));
        tmp437 = simd_or(simd_and(basis_bits.bit_4, tmp98), simd_andc(tmp73, basis_bits.bit_4));
        tmp438 = simd_and(tmp70, tmp437);
        tmp439 = simd_and(tmp202, tmp20);
        cc_range_1d167_1d17b_4 = simd_or(tmp438, tmp439);
        carryQ.cq[113] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_85, carryQ.get_carry_in(113), sequence_f0_9d_85_adv));
        tmp440 = simd_and(sequence_f0_9d_85_adv, cc_range_1d167_1d17b_4);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp440);
        sequence_f0_9d_86 = simd_and(sequence_f0_9d_adv, byte_86);
        tmp441 = simd_or(simd_and(basis_bits.bit_4, tmp415), simd_andc(tmp57, basis_bits.bit_4));
        tmp442 = simd_and(tmp17, tmp441);
        tmp443 = simd_or(tmp120, tmp442);
        cc_range_1d180_1d1aa_4 = simd_or(tmp443, byte_range_aa_ad);
        carryQ.cq[114] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_86, carryQ.get_carry_in(114), sequence_f0_9d_86_adv));
        tmp444 = simd_and(sequence_f0_9d_86_adv, cc_range_1d180_1d1aa_4);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp444);
        byte_89 = simd_and(tmp17, tmp50);
        sequence_f0_9d_89 = simd_and(sequence_f0_9d_adv, byte_89);
        byte_range_82_84 = simd_and(tmp18, tmp188);
        carryQ.cq[115] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_89, carryQ.get_carry_in(115), sequence_f0_9d_89_adv));
        tmp445 = simd_and(sequence_f0_9d_89_adv, byte_range_82_84);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp445);
        byte_f3 = simd_and(tmp397, tmp115);
        carryQ.cq[116] = carryout2carry(pablo_blk_Advance(byte_f3, carryQ.get_carry_in(116), tmp446));
        sequence_f3_a0 = simd_and(tmp446, byte_a0);
        carryQ.cq[117] = carryout2carry(pablo_blk_Advance(byte_f3, carryQ.get_carry_in(117), byte_f3_adv));
        byte_range_84_86 = simd_andc(tmp250, tmp19);
        carryQ.cq[118] = carryout2carry(pablo_blk_Advance(sequence_f3_a0, carryQ.get_carry_in(118), tmp447));
        sequence_f3_a0_byte_range_84_86 = simd_and(tmp447, byte_range_84_86);
        carryQ.cq[119] = carryout2carry(pablo_blk_Advance(sequence_f3_a0_byte_range_84_86, carryQ.get_carry_in(119), tmp448));
        sequence_f3_a0_byte_range_84_86_sfx = simd_and(tmp448, byte_range_80_bf);
        struct_Mn.cc = simd_or(struct_Mn.cc, sequence_f3_a0_byte_range_84_86_sfx);
        carryQ.cq[120] = carryout2carry(pablo_blk_Advance(sequence_f3_a0, carryQ.get_carry_in(120), sequence_f3_a0_adv));
        sequence_f3_a0_87 = simd_and(sequence_f3_a0_adv, byte_87);
        carryQ.cq[121] = carryout2carry(pablo_blk_Advance(sequence_f3_a0_87, carryQ.get_carry_in(121), tmp449));
        sequence_f3_a0_87_byte_range_80_af = simd_and(tmp449, byte_range_80_af);
        struct_Mn.cc = simd_or(struct_Mn.cc, sequence_f3_a0_87_byte_range_80_af);
        carryQ.CarryQ_Adjust(122);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Mn & struct_Mn, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, byte_cc, byte_range_80_bf;
		BitBlock byte_cc_adv, tmp7, tmp8, tmp9, byte_cd, tmp10, byte_range_80_af;
		BitBlock byte_cd_adv, tmp11, tmp12, tmp13, tmp14, tmp15, tmp16, byte_d2, tmp17;
		BitBlock tmp18, tmp19, tmp20, byte_range_83_87, byte_d2_adv, tmp21, tmp22;
		BitBlock tmp23, byte_d6, tmp24, tmp25, tmp26, tmp27, tmp28, tmp29, tmp30;
		BitBlock tmp31, tmp32, tmp33, cc_range_591_5bf_2, byte_d6_adv, tmp34, tmp35;
		BitBlock byte_d7, tmp36, tmp37, tmp38, tmp39, tmp40, tmp41, tmp42, tmp43;
		BitBlock cc_range_5c1_5c7_2, byte_d7_adv, tmp44, tmp45, tmp46, byte_d8, tmp47;
		BitBlock tmp48, byte_range_90_9a, byte_d8_adv, tmp49, tmp50, byte_d9, tmp51;
		BitBlock tmp52, tmp53, tmp54, cc_range_64b_670_2, byte_d9_adv, tmp55, tmp56;
		BitBlock byte_db, tmp57, tmp58, tmp59, tmp60, tmp61, tmp62, tmp63, tmp64;
		BitBlock tmp65, tmp66, tmp67, tmp68, tmp69, tmp70, tmp71, tmp72, tmp73, tmp74;
		BitBlock tmp75, tmp76, tmp77, tmp78, tmp79, tmp80, cc_range_6d6_6ea_2;
		BitBlock byte_db_adv, tmp81, byte_dc, tmp82, tmp83, cc_range_711_730_2;
		BitBlock byte_dc_adv, tmp84, byte_dd, byte_range_80_8a, byte_dd_adv, tmp85;
		BitBlock tmp86, byte_de, tmp87, tmp88, tmp89, tmp90, byte_range_a6_b0;
		BitBlock byte_de_adv, tmp91, byte_df, tmp92, tmp93, byte_range_ab_b3;
		BitBlock byte_df_adv, tmp94, tmp95, byte_e0, byte_a0, tmp96, sequence_e0_a0;
		BitBlock byte_e0_adv, tmp97, tmp98, tmp99, tmp100, tmp101, tmp102, tmp103;
		BitBlock tmp104, tmp105, tmp106, tmp107, tmp108, tmp109, tmp110, tmp111;
		BitBlock cc_range_816_829_3, sequence_e0_a0_adv, tmp112, byte_a1;
		BitBlock sequence_e0_a1, tmp113, byte_range_99_9b, sequence_e0_a1_adv, tmp114;
		BitBlock tmp115, byte_a3, sequence_e0_a3, tmp116, tmp117, byte_range_a4_be;
		BitBlock sequence_e0_a3_adv, tmp118, tmp119, byte_a4, sequence_e0_a4, tmp120;
		BitBlock tmp121, tmp122, tmp123, tmp124, cc_range_900_93c_3;
		BitBlock sequence_e0_a4_adv, tmp125, tmp126, byte_a5, sequence_e0_a5, tmp127;
		BitBlock tmp128, tmp129, tmp130, tmp131, tmp132, tmp133, tmp134;
		BitBlock cc_range_941_962_3, sequence_e0_a5_adv, tmp135, byte_a6;
		BitBlock sequence_e0_a6, tmp136, cc_range_981_9bc_3, sequence_e0_a6_adv;
		BitBlock tmp137, byte_a7, sequence_e0_a7, tmp138, tmp139, tmp140, tmp141;
		BitBlock tmp142, cc_range_9c1_9e2_3, sequence_e0_a7_adv, tmp143, byte_a8;
		BitBlock sequence_e0_a8, cc_range_a01_a3c_3, sequence_e0_a8_adv, tmp144;
		BitBlock byte_a9, sequence_e0_a9, tmp145, tmp146, tmp147, tmp148, tmp149;
		BitBlock tmp150, tmp151, tmp152, tmp153, tmp154, tmp155, cc_range_a41_a75_3;
		BitBlock sequence_e0_a9_adv, tmp156, byte_aa, sequence_e0_aa;
		BitBlock cc_range_a81_abc_3, sequence_e0_aa_adv, tmp157, byte_ab;
		BitBlock sequence_e0_ab, tmp158, tmp159, tmp160, cc_range_ac1_ae2_3;
		BitBlock sequence_e0_ab_adv, tmp161, byte_ac, sequence_e0_ac;
		BitBlock cc_range_b01_b3f_3, sequence_e0_ac_adv, tmp162, byte_ad;
		BitBlock sequence_e0_ad, tmp163, tmp164, cc_range_b41_b62_3;
		BitBlock sequence_e0_ad_adv, tmp165, byte_ae, sequence_e0_ae, byte_82;
		BitBlock sequence_e0_ae_adv, tmp166, byte_af, sequence_e0_af, tmp167;
		BitBlock cc_range_bc0_bcd_3, sequence_e0_af_adv, tmp168, byte_b0;
		BitBlock sequence_e0_b0, byte_range_be_bf, sequence_e0_b0_adv, tmp169, byte_b1;
		BitBlock sequence_e0_b1, tmp170, tmp171, tmp172, tmp173, tmp174, tmp175;
		BitBlock tmp176, tmp177, cc_range_c40_c62_3, sequence_e0_b1_adv, tmp178;
		BitBlock byte_b2, sequence_e0_b2, tmp179, tmp180, cc_range_cbc_cbf_3;
		BitBlock sequence_e0_b2_adv, tmp181, byte_b3, sequence_e0_b3, tmp182, tmp183;
		BitBlock tmp184, cc_range_cc6_ce2_3, sequence_e0_b3_adv, tmp185, byte_b5;
		BitBlock sequence_e0_b5, cc_range_d41_d62_3, sequence_e0_b5_adv, tmp186;
		BitBlock byte_b7, sequence_e0_b7, tmp187, tmp188, tmp189, tmp190;
		BitBlock cc_range_dca_dd6_3, sequence_e0_b7_adv, tmp191, byte_b8;
		BitBlock sequence_e0_b8, tmp192, tmp193, tmp194, cc_range_e31_e34_3;
		BitBlock sequence_e0_b8_adv, tmp195, byte_b9, sequence_e0_b9, tmp196, tmp197;
		BitBlock byte_range_87_8e, sequence_e0_b9_adv, tmp198, byte_ba, sequence_e0_ba;
		BitBlock tmp199, tmp200, tmp201, tmp202, tmp203, tmp204, cc_range_eb1_ebb_3;
		BitBlock sequence_e0_ba_adv, tmp205, byte_bb, sequence_e0_bb, byte_range_88_8d;
		BitBlock sequence_e0_bb_adv, tmp206, byte_bc, sequence_e0_bc, tmp207, tmp208;
		BitBlock tmp209, tmp210, cc_range_f18_f39_3, sequence_e0_bc_adv, tmp211;
		BitBlock byte_bd, sequence_e0_bd, tmp212, byte_range_b1_be, sequence_e0_bd_adv;
		BitBlock tmp213, byte_be, sequence_e0_be, tmp214, tmp215, tmp216, tmp217;
		BitBlock tmp218, tmp219, tmp220, tmp221, tmp222, tmp223, tmp224, tmp225;
		BitBlock tmp226, tmp227, tmp228, cc_range_f80_f99_3, sequence_e0_be_adv;
		BitBlock tmp229, byte_bf, sequence_e0_bf, byte_86, sequence_e0_bf_adv, tmp230;
		BitBlock byte_e1, byte_80, tmp231, sequence_e1_80, byte_e1_adv, tmp232, tmp233;
		BitBlock tmp234, tmp235, tmp236, tmp237, tmp238, tmp239, tmp240, tmp241;
		BitBlock cc_range_102d_103d_3, sequence_e1_80_adv, tmp242, byte_81;
		BitBlock sequence_e1_81, tmp243, tmp244, tmp245, tmp246, tmp247, tmp248;
		BitBlock cc_range_1058_1071_3, sequence_e1_81_adv, tmp249, sequence_e1_82;
		BitBlock tmp250, tmp251, tmp252, tmp253, tmp254, cc_range_1082_109d_3;
		BitBlock sequence_e1_82_adv, tmp255, byte_8d, sequence_e1_8d, tmp256;
		BitBlock byte_range_9d_9f, sequence_e1_8d_adv, tmp257, byte_9c, sequence_e1_9c;
		BitBlock tmp258, tmp259, cc_range_1712_1732_3, sequence_e1_9c_adv, tmp260;
		BitBlock byte_9d, sequence_e1_9d, cc_range_1752_1772_3, sequence_e1_9d_adv;
		BitBlock tmp261, byte_9e, sequence_e1_9e, tmp262, tmp263, tmp264;
		BitBlock cc_range_17b4_17b7_3, sequence_e1_9e_adv, tmp265, byte_9f;
		BitBlock sequence_e1_9f, tmp266, tmp267, tmp268, cc_range_17c6_17dd_3;
		BitBlock sequence_e1_9f_adv, tmp269, sequence_e1_a0, byte_range_8b_8d;
		BitBlock sequence_e1_a0_adv, tmp270, byte_a2, sequence_e1_a2;
		BitBlock sequence_e1_a2_adv, tmp271, sequence_e1_a4, tmp272, tmp273, tmp274;
		BitBlock tmp275, tmp276, cc_range_1920_1939_3, sequence_e1_a4_adv, tmp277;
		BitBlock sequence_e1_a8, tmp278, cc_range_1a17_1a1b_3, sequence_e1_a8_adv;
		BitBlock tmp279, sequence_e1_a9, tmp280, tmp281, tmp282, tmp283, tmp284;
		BitBlock tmp285, tmp286, tmp287, tmp288, tmp289, tmp290, cc_range_1a56_1a7f_3;
		BitBlock sequence_e1_a9_adv, tmp291, sequence_e1_ac, tmp292, tmp293, tmp294;
		BitBlock tmp295, tmp296, cc_range_1b00_1b3c_3, sequence_e1_ac_adv, tmp297;
		BitBlock sequence_e1_ad, cc_range_1b42_1b6b_3, sequence_e1_ad_adv, tmp298;
		BitBlock sequence_e1_ae, tmp299, tmp300, tmp301, tmp302, tmp303, tmp304;
		BitBlock cc_range_1b80_1bab_3, sequence_e1_ae_adv, tmp305, sequence_e1_af;
		BitBlock tmp306, tmp307, tmp308, tmp309, tmp310, tmp311, cc_range_1be6_1bef_3;
		BitBlock sequence_e1_af_adv, tmp312, sequence_e1_b0, tmp313, tmp314, tmp315;
		BitBlock cc_range_1c2c_1c36_3, sequence_e1_b0_adv, tmp316, sequence_e1_b3;
		BitBlock tmp317, tmp318, tmp319, tmp320, tmp321, tmp322, tmp323, tmp324;
		BitBlock tmp325, tmp326, cc_range_1cd0_1cf4_3, sequence_e1_b3_adv, tmp327;
		BitBlock sequence_e1_b7, tmp328, tmp329, tmp330, tmp331, cc_range_1dc0_1dfc_3;
		BitBlock sequence_e1_b7_adv, tmp332, byte_e2, byte_83, tmp333, sequence_e2_83;
		BitBlock byte_e2_adv, tmp334, tmp335, tmp336, tmp337, tmp338;
		BitBlock cc_range_20d0_20e5_3, sequence_e2_83_adv, tmp339, sequence_e2_b3;
		BitBlock byte_range_af_b1, sequence_e2_b3_adv, tmp340, sequence_e2_b5;
		BitBlock sequence_e2_b5_adv, tmp341, sequence_e2_b7, byte_range_a0_bf;
		BitBlock sequence_e2_b7_adv, tmp342, byte_e3, tmp343, sequence_e3_80;
		BitBlock byte_e3_adv, byte_range_aa_ad, sequence_e3_80_adv, tmp344;
		BitBlock sequence_e3_82, byte_range_99_9a, sequence_e3_82_adv, tmp345, byte_ea;
		BitBlock byte_99, tmp346, sequence_ea_99, byte_ea_adv, tmp347, tmp348;
		BitBlock cc_range_a66f_a674_3, sequence_ea_99_adv, tmp349, byte_9a;
		BitBlock sequence_ea_9a, sequence_ea_9a_adv, tmp350, byte_9b, sequence_ea_9b;
		BitBlock byte_range_b0_b1, sequence_ea_9b_adv, tmp351, sequence_ea_a0, tmp352;
		BitBlock tmp353, tmp354, tmp355, tmp356, cc_range_a802_a825_3;
		BitBlock sequence_ea_a0_adv, tmp357, sequence_ea_a3, tmp358, tmp359, tmp360;
		BitBlock cc_range_a8c4_a8e0_3, sequence_ea_a3_adv, tmp361, sequence_ea_a4;
		BitBlock tmp362, byte_range_a6_ad, sequence_ea_a4_adv, tmp363, sequence_ea_a5;
		BitBlock tmp364, byte_range_87_91, sequence_ea_a5_adv, tmp365, sequence_ea_a6;
		BitBlock tmp366, tmp367, tmp368, cc_range_a980_a9bc_3, sequence_ea_a6_adv;
		BitBlock tmp369, sequence_ea_a8, tmp370, tmp371, tmp372, tmp373, tmp374;
		BitBlock tmp375, tmp376, tmp377, cc_range_aa29_aa35_3, sequence_ea_a8_adv;
		BitBlock tmp378, sequence_ea_a9, tmp379, cc_range_aa43_aa4c_3;
		BitBlock sequence_ea_a9_adv, tmp380, sequence_ea_aa, tmp381, tmp382, tmp383;
		BitBlock tmp384, cc_range_aab0_aabe_3, sequence_ea_aa_adv, tmp385;
		BitBlock sequence_ea_ab, tmp386, tmp387, tmp388, cc_range_aac1_aaf6_3;
		BitBlock sequence_ea_ab_adv, tmp389, sequence_ea_af, tmp390, tmp391;
		BitBlock cc_range_abe5_abed_3, sequence_ea_af_adv, tmp392, byte_ef, tmp393;
		BitBlock sequence_ef_ac, byte_ef_adv, sequence_ef_ac_adv, tmp394;
		BitBlock sequence_ef_b8, tmp395, cc_range_fe00_fe20_3, sequence_ef_b8_adv;
		BitBlock tmp396, tmp397, byte_f0, byte_90, tmp398, sequence_f0_90, byte_f0_adv;
		BitBlock byte_87, tmp399, sequence_f0_90_87, sequence_f0_90_adv;
		BitBlock sequence_f0_90_87_adv, tmp400, sequence_f0_90_a8, tmp401, tmp402;
		BitBlock tmp403, tmp404, tmp405, tmp406, cc_range_10a01_10a3f_4;
		BitBlock sequence_f0_90_a8_adv, tmp407, byte_91, sequence_f0_91, tmp408;
		BitBlock sequence_f0_91_80, sequence_f0_91_adv, cc_range_11001_11038_4;
		BitBlock sequence_f0_91_80_adv, tmp409, sequence_f0_91_81, byte_range_80_86;
		BitBlock sequence_f0_91_81_adv, tmp410, sequence_f0_91_82, tmp411, tmp412;
		BitBlock tmp413, cc_range_11080_110b9_4, sequence_f0_91_82_adv, tmp414;
		BitBlock byte_84, sequence_f0_91_84, tmp415, tmp416, tmp417, tmp418, tmp419;
		BitBlock tmp420, tmp421, cc_range_11100_1112d_4, sequence_f0_91_84_adv, tmp422;
		BitBlock sequence_f0_91_86, tmp423, tmp424, cc_range_11180_111b6_4;
		BitBlock sequence_f0_91_86_adv, tmp425, sequence_f0_91_9a, tmp426, tmp427;
		BitBlock tmp428, tmp429, cc_range_116ab_116b7_4, sequence_f0_91_9a_adv, tmp430;
		BitBlock byte_96, sequence_f0_96, tmp431, sequence_f0_96_be;
		BitBlock sequence_f0_96_adv, tmp432, tmp433, tmp434, byte_range_8f_92;
		BitBlock sequence_f0_96_be_adv, tmp435, sequence_f0_9d, byte_85, tmp436;
		BitBlock sequence_f0_9d_85, sequence_f0_9d_adv, tmp437, tmp438, tmp439;
		BitBlock cc_range_1d167_1d17b_4, sequence_f0_9d_85_adv, tmp440;
		BitBlock sequence_f0_9d_86, tmp441, tmp442, tmp443, cc_range_1d180_1d1aa_4;
		BitBlock sequence_f0_9d_86_adv, tmp444, byte_89, sequence_f0_9d_89;
		BitBlock byte_range_82_84, sequence_f0_9d_89_adv, tmp445, byte_f3, tmp446;
		BitBlock sequence_f3_a0, byte_f3_adv, byte_range_84_86, tmp447;
		BitBlock sequence_f3_a0_byte_range_84_86, tmp448;
		BitBlock sequence_f3_a0_byte_range_84_86_sfx, sequence_f3_a0_adv;
		BitBlock sequence_f3_a0_87, tmp449, sequence_f3_a0_87_byte_range_80_af;




        struct_Mn.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp1, tmp2);
        tmp4 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_andc(tmp4, tmp5);
        byte_cc = simd_and(tmp3, tmp6);
        byte_range_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(byte_cc, carryQ.get_carry_in(0), byte_cc_adv));
        tmp7 = simd_and(byte_cc_adv, byte_range_80_bf);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp7);
        tmp8 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp9 = simd_and(tmp4, tmp8);
        byte_cd = simd_and(tmp3, tmp9);
        tmp10 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        byte_range_80_af = simd_andc(byte_range_80_bf, tmp10);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(byte_cd, carryQ.get_carry_in(1), byte_cd_adv));
        tmp11 = simd_and(byte_cd_adv, byte_range_80_af);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp11);
        tmp12 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp13 = simd_and(tmp1, tmp12);
        tmp14 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp15 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp16 = simd_andc(tmp15, tmp14);
        byte_d2 = simd_and(tmp13, tmp16);
        tmp17 = simd_andc(byte_range_80_bf, tmp2);
        tmp18 = simd_andc(tmp17, basis_bits.bit_4);
        tmp19 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp20 = simd_or(basis_bits.bit_5, tmp19);
        byte_range_83_87 = simd_and(tmp18, tmp20);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(byte_d2, carryQ.get_carry_in(2), byte_d2_adv));
        tmp21 = simd_and(byte_d2_adv, byte_range_83_87);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp21);
        tmp22 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp23 = simd_and(tmp22, tmp15);
        byte_d6 = simd_and(tmp13, tmp23);
        tmp24 = simd_and(tmp4, basis_bits.bit_6);
        tmp25 = simd_and(basis_bits.bit_3, tmp24);
        tmp26 = simd_not(tmp25);
        tmp27 = simd_or(tmp14, tmp5);
        tmp28 = simd_and(basis_bits.bit_3, tmp27);
        tmp29 = simd_or(simd_and(basis_bits.bit_2, tmp26), simd_andc(tmp28, basis_bits.bit_2));
        tmp30 = simd_and(byte_range_80_bf, tmp29);
        tmp31 = simd_and(byte_range_80_bf, tmp10);
        tmp32 = simd_and(tmp4, tmp19);
        tmp33 = simd_and(tmp31, tmp32);
        cc_range_591_5bf_2 = simd_or(tmp30, tmp33);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(byte_d6, carryQ.get_carry_in(3), byte_d6_adv));
        tmp34 = simd_and(byte_d6_adv, cc_range_591_5bf_2);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp34);
        tmp35 = simd_and(tmp22, tmp19);
        byte_d7 = simd_and(tmp13, tmp35);
        tmp36 = simd_andc(tmp17, tmp14);
        tmp37 = simd_not(basis_bits.bit_7);
        tmp38 = simd_or(simd_and(basis_bits.bit_6, tmp37), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
        tmp39 = simd_and(tmp36, tmp38);
        tmp40 = simd_andc(tmp22, basis_bits.bit_6);
        tmp41 = simd_and(tmp17, tmp40);
        tmp42 = simd_or(tmp39, tmp41);
        tmp43 = simd_and(tmp17, tmp35);
        cc_range_5c1_5c7_2 = simd_or(tmp42, tmp43);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(byte_d7, carryQ.get_carry_in(4), byte_d7_adv));
        tmp44 = simd_and(byte_d7_adv, cc_range_5c1_5c7_2);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp44);
        tmp45 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp46 = simd_andc(tmp45, tmp5);
        byte_d8 = simd_and(tmp13, tmp46);
        tmp47 = simd_and(byte_range_80_bf, tmp12);
        tmp48 = simd_and(basis_bits.bit_4, tmp20);
        byte_range_90_9a = simd_andc(tmp47, tmp48);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(byte_d8, carryQ.get_carry_in(5), byte_d8_adv));
        tmp49 = simd_and(byte_d8_adv, byte_range_90_9a);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp49);
        tmp50 = simd_and(tmp45, tmp8);
        byte_d9 = simd_and(tmp13, tmp50);
        tmp51 = simd_andc(byte_range_80_bf, basis_bits.bit_2);
        tmp52 = simd_or(basis_bits.bit_3, tmp48);
        tmp53 = simd_and(tmp51, tmp52);
        tmp54 = simd_andc(tmp31, tmp27);
        cc_range_64b_670_2 = simd_or(tmp53, tmp54);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(byte_d9, carryQ.get_carry_in(6), byte_d9_adv));
        tmp55 = simd_and(byte_d9_adv, cc_range_64b_670_2);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp55);
        tmp56 = simd_and(tmp45, tmp19);
        byte_db = simd_and(tmp13, tmp56);
        tmp57 = simd_and(basis_bits.bit_5, tmp5);
        tmp58 = simd_not(tmp57);
        tmp59 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp60 = simd_or(simd_and(basis_bits.bit_4, tmp58), simd_andc(tmp59, basis_bits.bit_4));
        tmp61 = simd_and(tmp47, tmp60);
        tmp62 = simd_or(basis_bits.bit_4, tmp57);
        tmp63 = simd_or(basis_bits.bit_3, tmp62);
        tmp64 = simd_not(tmp63);
        tmp65 = simd_and(basis_bits.bit_3, tmp32);
        tmp66 = simd_or(simd_and(basis_bits.bit_2, tmp64), simd_andc(tmp65, basis_bits.bit_2));
        tmp67 = simd_and(byte_range_80_bf, tmp66);
        tmp68 = simd_or(tmp61, tmp67);
        tmp69 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp70 = simd_and(byte_range_80_bf, tmp69);
        tmp71 = simd_or(basis_bits.bit_5, tmp5);
        tmp72 = simd_not(tmp71);
        tmp73 = simd_and(basis_bits.bit_5, tmp19);
        tmp74 = simd_or(simd_and(basis_bits.bit_4, tmp72), simd_andc(tmp73, basis_bits.bit_4));
        tmp75 = simd_and(tmp70, tmp74);
        tmp76 = simd_or(tmp68, tmp75);
        tmp77 = simd_and(tmp70, basis_bits.bit_4);
        tmp78 = simd_not(basis_bits.bit_6);
        tmp79 = simd_or(simd_and(basis_bits.bit_5, tmp78), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        tmp80 = simd_and(tmp77, tmp79);
        cc_range_6d6_6ea_2 = simd_or(tmp76, tmp80);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(byte_db, carryQ.get_carry_in(7), byte_db_adv));
        tmp81 = simd_and(byte_db_adv, cc_range_6d6_6ea_2);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp81);
        byte_dc = simd_and(tmp13, tmp6);
        tmp82 = simd_andc(tmp8, tmp14);
        tmp83 = simd_and(tmp47, tmp82);
        cc_range_711_730_2 = simd_or(tmp83, tmp31);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(byte_dc, carryQ.get_carry_in(8), byte_dc_adv));
        tmp84 = simd_and(byte_dc_adv, cc_range_711_730_2);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp84);
        byte_dd = simd_and(tmp13, tmp9);
        byte_range_80_8a = simd_andc(tmp17, tmp48);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(byte_dd, carryQ.get_carry_in(9), byte_dd_adv));
        tmp85 = simd_and(byte_dd_adv, byte_range_80_8a);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp85);
        tmp86 = simd_and(tmp4, tmp15);
        byte_de = simd_and(tmp13, tmp86);
        tmp87 = simd_and(byte_range_80_bf, basis_bits.bit_2);
        tmp88 = simd_not(tmp27);
        tmp89 = simd_or(basis_bits.bit_4, tmp59);
        tmp90 = simd_or(simd_and(basis_bits.bit_3, tmp88), simd_andc(tmp89, basis_bits.bit_3));
        byte_range_a6_b0 = simd_and(tmp87, tmp90);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(byte_de, carryQ.get_carry_in(10), byte_de_adv));
        tmp91 = simd_and(byte_de_adv, byte_range_a6_b0);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp91);
        byte_df = simd_and(tmp13, tmp32);
        tmp92 = simd_not(tmp14);
        tmp93 = simd_or(simd_and(basis_bits.bit_3, tmp92), simd_andc(tmp48, basis_bits.bit_3));
        byte_range_ab_b3 = simd_and(tmp87, tmp93);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(byte_df, carryQ.get_carry_in(11), byte_df_adv));
        tmp94 = simd_and(byte_df_adv, byte_range_ab_b3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp94);
        tmp95 = simd_and(tmp1, tmp69);
        byte_e0 = simd_andc(tmp95, tmp27);
        byte_a0 = simd_andc(tmp70, tmp27);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(byte_e0, carryQ.get_carry_in(12), tmp96));
        sequence_e0_a0 = simd_and(tmp96, byte_a0);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(byte_e0, carryQ.get_carry_in(13), byte_e0_adv));
        tmp97 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
        tmp98 = simd_not(tmp97);
        tmp99 = simd_or(simd_and(basis_bits.bit_4, tmp98), simd_andc(tmp59, basis_bits.bit_4));
        tmp100 = simd_and(tmp47, tmp99);
        tmp101 = simd_or(basis_bits.bit_3, tmp14);
        tmp102 = simd_not(tmp101);
        tmp103 = simd_and(basis_bits.bit_3, tmp48);
        tmp104 = simd_or(simd_and(basis_bits.bit_2, tmp102), simd_andc(tmp103, basis_bits.bit_2));
        tmp105 = simd_and(byte_range_80_bf, tmp104);
        tmp106 = simd_or(tmp100, tmp105);
        tmp107 = simd_and(tmp70, tmp22);
        tmp108 = simd_and(tmp107, tmp5);
        tmp109 = simd_or(tmp106, tmp108);
        tmp110 = simd_or(simd_and(basis_bits.bit_5, tmp78), simd_andc(tmp5, basis_bits.bit_5));
        tmp111 = simd_and(tmp77, tmp110);
        cc_range_816_829_3 = simd_or(tmp109, tmp111);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(sequence_e0_a0, carryQ.get_carry_in(14), sequence_e0_a0_adv));
        tmp112 = simd_and(sequence_e0_a0_adv, cc_range_816_829_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp112);
        byte_a1 = simd_and(tmp70, tmp82);
        sequence_e0_a1 = simd_and(byte_e0_adv, byte_a1);
        tmp113 = simd_and(tmp47, tmp45);
        byte_range_99_9b = simd_and(tmp113, tmp5);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(sequence_e0_a1, carryQ.get_carry_in(15), sequence_e0_a1_adv));
        tmp114 = simd_and(sequence_e0_a1_adv, byte_range_99_9b);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp114);
        tmp115 = simd_andc(tmp19, tmp14);
        byte_a3 = simd_and(tmp70, tmp115);
        sequence_e0_a3 = simd_and(byte_e0_adv, byte_a3);
        tmp116 = simd_not(tmp32);
        tmp117 = simd_or(simd_and(basis_bits.bit_3, tmp116), simd_andc(tmp14, basis_bits.bit_3));
        byte_range_a4_be = simd_and(tmp87, tmp117);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(sequence_e0_a3, carryQ.get_carry_in(16), sequence_e0_a3_adv));
        tmp118 = simd_and(sequence_e0_a3_adv, byte_range_a4_be);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp118);
        tmp119 = simd_andc(tmp22, tmp5);
        byte_a4 = simd_and(tmp70, tmp119);
        sequence_e0_a4 = simd_and(byte_e0_adv, byte_a4);
        tmp120 = simd_andc(tmp36, tmp19);
        tmp121 = simd_and(tmp45, tmp15);
        tmp122 = simd_and(tmp31, tmp121);
        tmp123 = simd_or(tmp120, tmp122);
        tmp124 = simd_and(tmp31, tmp6);
        cc_range_900_93c_3 = simd_or(tmp123, tmp124);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(sequence_e0_a4, carryQ.get_carry_in(17), sequence_e0_a4_adv));
        tmp125 = simd_and(sequence_e0_a4_adv, cc_range_900_93c_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp125);
        tmp126 = simd_and(tmp22, tmp8);
        byte_a5 = simd_and(tmp70, tmp126);
        sequence_e0_a5 = simd_and(byte_e0_adv, byte_a5);
        tmp127 = simd_or(simd_and(basis_bits.bit_4, tmp72), simd_andc(tmp71, basis_bits.bit_4));
        tmp128 = simd_or(tmp127, tmp9);
        tmp129 = simd_and(tmp17, tmp128);
        tmp130 = simd_andc(tmp47, basis_bits.bit_4);
        tmp131 = simd_and(tmp130, tmp71);
        tmp132 = simd_or(tmp129, tmp131);
        tmp133 = simd_andc(basis_bits.bit_6, tmp14);
        tmp134 = simd_and(tmp70, tmp133);
        cc_range_941_962_3 = simd_or(tmp132, tmp134);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(sequence_e0_a5, carryQ.get_carry_in(18), sequence_e0_a5_adv));
        tmp135 = simd_and(sequence_e0_a5_adv, cc_range_941_962_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp135);
        byte_a6 = simd_and(tmp70, tmp23);
        sequence_e0_a6 = simd_and(byte_e0_adv, byte_a6);
        tmp136 = simd_and(tmp17, tmp82);
        cc_range_981_9bc_3 = simd_or(tmp136, tmp124);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(sequence_e0_a6, carryQ.get_carry_in(19), sequence_e0_a6_adv));
        tmp137 = simd_and(sequence_e0_a6_adv, cc_range_981_9bc_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp137);
        byte_a7 = simd_and(tmp70, tmp35);
        sequence_e0_a7 = simd_and(byte_e0_adv, byte_a7);
        tmp138 = simd_not(tmp5);
        tmp139 = simd_or(simd_and(basis_bits.bit_5, tmp138), simd_andc(tmp5, basis_bits.bit_5));
        tmp140 = simd_and(tmp18, tmp139);
        tmp141 = simd_and(tmp17, tmp9);
        tmp142 = simd_or(tmp140, tmp141);
        cc_range_9c1_9e2_3 = simd_or(tmp142, tmp134);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(sequence_e0_a7, carryQ.get_carry_in(20), sequence_e0_a7_adv));
        tmp143 = simd_and(sequence_e0_a7_adv, cc_range_9c1_9e2_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp143);
        byte_a8 = simd_and(tmp70, tmp46);
        sequence_e0_a8 = simd_and(byte_e0_adv, byte_a8);
        cc_range_a01_a3c_3 = simd_or(tmp39, tmp124);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(sequence_e0_a8, carryQ.get_carry_in(21), sequence_e0_a8_adv));
        tmp144 = simd_and(sequence_e0_a8_adv, cc_range_a01_a3c_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp144);
        byte_a9 = simd_and(tmp70, tmp50);
        sequence_e0_a9 = simd_and(byte_e0_adv, byte_a9);
        tmp145 = simd_and(tmp17, tmp74);
        tmp146 = simd_or(tmp39, tmp145);
        tmp147 = simd_and(tmp17, basis_bits.bit_4);
        tmp148 = simd_or(simd_and(basis_bits.bit_5, tmp78), simd_andc(tmp19, basis_bits.bit_5));
        tmp149 = simd_and(tmp147, tmp148);
        tmp150 = simd_or(tmp146, tmp149);
        tmp151 = simd_or(tmp150, tmp83);
        tmp152 = simd_or(tmp14, basis_bits.bit_6);
        tmp153 = simd_andc(tmp31, tmp152);
        tmp154 = simd_or(tmp151, tmp153);
        tmp155 = simd_and(tmp31, tmp126);
        cc_range_a41_a75_3 = simd_or(tmp154, tmp155);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(sequence_e0_a9, carryQ.get_carry_in(22), sequence_e0_a9_adv));
        tmp156 = simd_and(sequence_e0_a9_adv, cc_range_a41_a75_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp156);
        byte_aa = simd_and(tmp70, tmp121);
        sequence_e0_aa = simd_and(byte_e0_adv, byte_aa);
        cc_range_a81_abc_3 = simd_or(tmp39, tmp124);
        carryQ.cq[23] = carryout2carry(pablo_blk_Advance(sequence_e0_aa, carryQ.get_carry_in(23), sequence_e0_aa_adv));
        tmp157 = simd_and(sequence_e0_aa_adv, cc_range_a81_abc_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp157);
        byte_ab = simd_and(tmp70, tmp56);
        sequence_e0_ab = simd_and(byte_e0_adv, byte_ab);
        tmp158 = simd_and(tmp18, tmp110);
        tmp159 = simd_or(tmp158, tmp145);
        tmp160 = simd_or(tmp159, tmp141);
        cc_range_ac1_ae2_3 = simd_or(tmp160, tmp134);
        carryQ.cq[24] = carryout2carry(pablo_blk_Advance(sequence_e0_ab, carryQ.get_carry_in(24), sequence_e0_ab_adv));
        tmp161 = simd_and(sequence_e0_ab_adv, cc_range_ac1_ae2_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp161);
        byte_ac = simd_and(tmp70, tmp6);
        sequence_e0_ac = simd_and(byte_e0_adv, byte_ac);
        cc_range_b01_b3f_3 = simd_or(cc_range_981_9bc_3, tmp33);
        carryQ.cq[25] = carryout2carry(pablo_blk_Advance(sequence_e0_ac, carryQ.get_carry_in(25), sequence_e0_ac_adv));
        tmp162 = simd_and(sequence_e0_ac_adv, cc_range_b01_b3f_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp162);
        byte_ad = simd_and(tmp70, tmp9);
        sequence_e0_ad = simd_and(byte_e0_adv, byte_ad);
        tmp163 = simd_and(tmp47, tmp23);
        tmp164 = simd_or(tmp142, tmp163);
        cc_range_b41_b62_3 = simd_or(tmp164, tmp134);
        carryQ.cq[26] = carryout2carry(pablo_blk_Advance(sequence_e0_ad, carryQ.get_carry_in(26), sequence_e0_ad_adv));
        tmp165 = simd_and(sequence_e0_ad_adv, cc_range_b41_b62_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp165);
        byte_ae = simd_and(tmp70, tmp86);
        sequence_e0_ae = simd_and(byte_e0_adv, byte_ae);
        byte_82 = simd_and(tmp17, tmp16);
        carryQ.cq[27] = carryout2carry(pablo_blk_Advance(sequence_e0_ae, carryQ.get_carry_in(27), sequence_e0_ae_adv));
        tmp166 = simd_and(sequence_e0_ae_adv, byte_82);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp166);
        byte_af = simd_and(tmp70, tmp32);
        sequence_e0_af = simd_and(byte_e0_adv, byte_af);
        tmp167 = simd_andc(tmp27, tmp9);
        cc_range_bc0_bcd_3 = simd_andc(tmp17, tmp167);
        carryQ.cq[28] = carryout2carry(pablo_blk_Advance(sequence_e0_af, carryQ.get_carry_in(28), sequence_e0_af_adv));
        tmp168 = simd_and(sequence_e0_af_adv, cc_range_bc0_bcd_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp168);
        byte_b0 = simd_andc(tmp31, tmp27);
        sequence_e0_b0 = simd_and(byte_e0_adv, byte_b0);
        byte_range_be_bf = simd_and(tmp31, tmp24);
        carryQ.cq[29] = carryout2carry(pablo_blk_Advance(sequence_e0_b0, carryQ.get_carry_in(29), sequence_e0_b0_adv));
        tmp169 = simd_and(sequence_e0_b0_adv, byte_range_be_bf);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp169);
        byte_b1 = simd_and(tmp31, tmp82);
        sequence_e0_b1 = simd_and(byte_e0_adv, byte_b1);
        tmp170 = simd_or(simd_and(basis_bits.bit_4, tmp72), simd_andc(tmp59, basis_bits.bit_4));
        tmp171 = simd_andc(tmp27, tmp170);
        tmp172 = simd_andc(tmp17, tmp171);
        tmp173 = simd_and(tmp147, tmp79);
        tmp174 = simd_or(tmp172, tmp173);
        tmp175 = simd_and(tmp47, tmp22);
        tmp176 = simd_and(tmp175, tmp38);
        tmp177 = simd_or(tmp174, tmp176);
        cc_range_c40_c62_3 = simd_or(tmp177, tmp134);
        carryQ.cq[30] = carryout2carry(pablo_blk_Advance(sequence_e0_b1, carryQ.get_carry_in(30), sequence_e0_b1_adv));
        tmp178 = simd_and(sequence_e0_b1_adv, cc_range_c40_c62_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp178);
        byte_b2 = simd_and(tmp31, tmp16);
        sequence_e0_b2 = simd_and(byte_e0_adv, byte_b2);
        tmp179 = simd_andc(tmp5, tmp19);
        tmp180 = simd_andc(tmp4, tmp179);
        cc_range_cbc_cbf_3 = simd_and(tmp31, tmp180);
        carryQ.cq[31] = carryout2carry(pablo_blk_Advance(sequence_e0_b2, carryQ.get_carry_in(31), sequence_e0_b2_adv));
        tmp181 = simd_and(sequence_e0_b2_adv, cc_range_cbc_cbf_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp181);
        byte_b3 = simd_and(tmp31, tmp115);
        sequence_e0_b3 = simd_and(byte_e0_adv, byte_b3);
        tmp182 = simd_andc(tmp4, basis_bits.bit_6);
        tmp183 = simd_or(tmp23, tmp182);
        tmp184 = simd_and(tmp17, tmp183);
        cc_range_cc6_ce2_3 = simd_or(tmp184, tmp134);
        carryQ.cq[32] = carryout2carry(pablo_blk_Advance(sequence_e0_b3, carryQ.get_carry_in(32), sequence_e0_b3_adv));
        tmp185 = simd_and(sequence_e0_b3_adv, cc_range_cc6_ce2_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp185);
        byte_b5 = simd_and(tmp31, tmp126);
        sequence_e0_b5 = simd_and(byte_e0_adv, byte_b5);
        cc_range_d41_d62_3 = simd_or(tmp142, tmp134);
        carryQ.cq[33] = carryout2carry(pablo_blk_Advance(sequence_e0_b5, carryQ.get_carry_in(33), sequence_e0_b5_adv));
        tmp186 = simd_and(sequence_e0_b5_adv, cc_range_d41_d62_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp186);
        byte_b7 = simd_and(tmp31, tmp35);
        sequence_e0_b7 = simd_and(byte_e0_adv, byte_b7);
        tmp187 = simd_and(tmp17, tmp121);
        tmp188 = simd_or(simd_and(basis_bits.bit_5, tmp138), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        tmp189 = simd_and(tmp130, tmp188);
        tmp190 = simd_or(tmp187, tmp189);
        cc_range_dca_dd6_3 = simd_or(tmp190, tmp163);
        carryQ.cq[34] = carryout2carry(pablo_blk_Advance(sequence_e0_b7, carryQ.get_carry_in(34), sequence_e0_b7_adv));
        tmp191 = simd_and(sequence_e0_b7_adv, cc_range_dca_dd6_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp191);
        byte_b8 = simd_and(tmp31, tmp46);
        sequence_e0_b8 = simd_and(byte_e0_adv, byte_b8);
        tmp192 = simd_not(tmp20);
        tmp193 = simd_or(simd_and(basis_bits.bit_4, tmp192), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
        tmp194 = simd_or(tmp82, tmp193);
        cc_range_e31_e34_3 = simd_and(tmp31, tmp194);
        carryQ.cq[35] = carryout2carry(pablo_blk_Advance(sequence_e0_b8, carryQ.get_carry_in(35), sequence_e0_b8_adv));
        tmp195 = simd_and(sequence_e0_b8_adv, cc_range_e31_e34_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp195);
        byte_b9 = simd_and(tmp31, tmp50);
        sequence_e0_b9 = simd_and(byte_e0_adv, byte_b9);
        tmp196 = simd_not(tmp73);
        tmp197 = simd_or(simd_and(basis_bits.bit_4, tmp196), simd_andc(tmp73, basis_bits.bit_4));
        byte_range_87_8e = simd_and(tmp17, tmp197);
        carryQ.cq[36] = carryout2carry(pablo_blk_Advance(sequence_e0_b9, carryQ.get_carry_in(36), sequence_e0_b9_adv));
        tmp198 = simd_and(sequence_e0_b9_adv, byte_range_87_8e);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp198);
        byte_ba = simd_and(tmp31, tmp121);
        sequence_e0_ba = simd_and(byte_e0_adv, byte_ba);
        tmp199 = simd_or(simd_and(basis_bits.bit_4, tmp98), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
        tmp200 = simd_or(tmp82, tmp199);
        tmp201 = simd_and(tmp31, tmp200);
        tmp202 = simd_and(tmp31, basis_bits.bit_4);
        tmp203 = simd_or(simd_and(basis_bits.bit_5, tmp138), simd_andc(tmp19, basis_bits.bit_5));
        tmp204 = simd_and(tmp202, tmp203);
        cc_range_eb1_ebb_3 = simd_or(tmp201, tmp204);
        carryQ.cq[37] = carryout2carry(pablo_blk_Advance(sequence_e0_ba, carryQ.get_carry_in(37), sequence_e0_ba_adv));
        tmp205 = simd_and(sequence_e0_ba_adv, cc_range_eb1_ebb_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp205);
        byte_bb = simd_and(tmp31, tmp56);
        sequence_e0_bb = simd_and(byte_e0_adv, byte_bb);
        byte_range_88_8d = simd_andc(tmp147, tmp59);
        carryQ.cq[38] = carryout2carry(pablo_blk_Advance(sequence_e0_bb, carryQ.get_carry_in(38), sequence_e0_bb_adv));
        tmp206 = simd_and(sequence_e0_bb_adv, byte_range_88_8d);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp206);
        byte_bc = simd_and(tmp31, tmp6);
        sequence_e0_bc = simd_and(byte_e0_adv, byte_bc);
        tmp207 = simd_andc(tmp45, basis_bits.bit_6);
        tmp208 = simd_and(tmp47, tmp207);
        tmp209 = simd_or(tmp208, byte_b5);
        tmp210 = simd_or(tmp209, byte_b7);
        cc_range_f18_f39_3 = simd_or(tmp210, byte_b9);
        carryQ.cq[39] = carryout2carry(pablo_blk_Advance(sequence_e0_bc, carryQ.get_carry_in(39), sequence_e0_bc_adv));
        tmp211 = simd_and(sequence_e0_bc_adv, cc_range_f18_f39_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp211);
        byte_bd = simd_and(tmp31, tmp9);
        sequence_e0_bd = simd_and(byte_e0_adv, byte_bd);
        tmp212 = simd_or(simd_and(basis_bits.bit_4, tmp196), simd_andc(tmp71, basis_bits.bit_4));
        byte_range_b1_be = simd_and(tmp31, tmp212);
        carryQ.cq[40] = carryout2carry(pablo_blk_Advance(sequence_e0_bd, carryQ.get_carry_in(40), sequence_e0_bd_adv));
        tmp213 = simd_and(sequence_e0_bd_adv, byte_range_b1_be);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp213);
        byte_be = simd_and(tmp31, tmp86);
        sequence_e0_be = simd_and(byte_e0_adv, byte_be);
        tmp214 = simd_andc(tmp18, tmp57);
        tmp215 = simd_and(tmp22, basis_bits.bit_6);
        tmp216 = simd_and(tmp17, tmp215);
        tmp217 = simd_or(tmp214, tmp216);
        tmp218 = simd_not(basis_bits.bit_4);
        tmp219 = simd_and(tmp4, tmp5);
        tmp220 = simd_or(simd_and(basis_bits.bit_3, tmp218), simd_andc(tmp219, basis_bits.bit_3));
        tmp221 = simd_and(tmp51, tmp220);
        tmp222 = simd_or(tmp217, tmp221);
        tmp223 = simd_and(basis_bits.bit_3, tmp219);
        tmp224 = simd_not(tmp223);
        tmp225 = simd_and(basis_bits.bit_4, tmp71);
        tmp226 = simd_and(basis_bits.bit_3, tmp225);
        tmp227 = simd_or(simd_and(basis_bits.bit_2, tmp224), simd_andc(tmp226, basis_bits.bit_2));
        tmp228 = simd_and(byte_range_80_bf, tmp227);
        cc_range_f80_f99_3 = simd_or(tmp222, tmp228);
        carryQ.cq[41] = carryout2carry(pablo_blk_Advance(sequence_e0_be, carryQ.get_carry_in(41), sequence_e0_be_adv));
        tmp229 = simd_and(sequence_e0_be_adv, cc_range_f80_f99_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp229);
        byte_bf = simd_and(tmp31, tmp32);
        sequence_e0_bf = simd_and(byte_e0_adv, byte_bf);
        byte_86 = simd_and(tmp17, tmp23);
        carryQ.cq[42] = carryout2carry(pablo_blk_Advance(sequence_e0_bf, carryQ.get_carry_in(42), sequence_e0_bf_adv));
        tmp230 = simd_and(sequence_e0_bf_adv, byte_86);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp230);
        byte_e1 = simd_and(tmp95, tmp82);
        byte_80 = simd_andc(tmp17, tmp27);
        carryQ.cq[43] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(43), tmp231));
        sequence_e1_80 = simd_and(tmp231, byte_80);
        carryQ.cq[44] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(44), byte_e1_adv));
        tmp232 = simd_or(simd_and(basis_bits.bit_3, tmp88), simd_andc(tmp219, basis_bits.bit_3));
        tmp233 = simd_and(tmp87, tmp232);
        tmp234 = simd_andc(tmp31, basis_bits.bit_4);
        tmp235 = simd_and(tmp234, tmp97);
        tmp236 = simd_or(tmp233, tmp235);
        tmp237 = simd_and(tmp31, tmp45);
        tmp238 = simd_and(tmp237, tmp38);
        tmp239 = simd_or(tmp236, tmp238);
        tmp240 = simd_and(tmp31, tmp4);
        tmp241 = simd_and(tmp240, tmp38);
        cc_range_102d_103d_3 = simd_or(tmp239, tmp241);
        carryQ.cq[45] = carryout2carry(pablo_blk_Advance(sequence_e1_80, carryQ.get_carry_in(45), sequence_e1_80_adv));
        tmp242 = simd_and(sequence_e1_80_adv, cc_range_102d_103d_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp242);
        byte_81 = simd_and(tmp17, tmp82);
        sequence_e1_81 = simd_and(byte_e1_adv, byte_81);
        tmp243 = simd_or(basis_bits.bit_3, tmp27);
        tmp244 = simd_not(tmp243);
        tmp245 = simd_or(simd_and(basis_bits.bit_2, tmp244), simd_andc(tmp25, basis_bits.bit_2));
        tmp246 = simd_and(byte_range_80_bf, tmp245);
        tmp247 = simd_or(tmp208, tmp246);
        tmp248 = simd_and(tmp234, tmp139);
        cc_range_1058_1071_3 = simd_or(tmp247, tmp248);
        carryQ.cq[46] = carryout2carry(pablo_blk_Advance(sequence_e1_81, carryQ.get_carry_in(46), sequence_e1_81_adv));
        tmp249 = simd_and(sequence_e1_81_adv, cc_range_1058_1071_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp249);
        sequence_e1_82 = simd_and(byte_e1_adv, byte_82);
        tmp250 = simd_and(tmp17, tmp22);
        tmp251 = simd_and(tmp250, tmp38);
        tmp252 = simd_or(byte_82, tmp251);
        tmp253 = simd_or(tmp252, tmp141);
        tmp254 = simd_and(tmp47, tmp9);
        cc_range_1082_109d_3 = simd_or(tmp253, tmp254);
        carryQ.cq[47] = carryout2carry(pablo_blk_Advance(sequence_e1_82, carryQ.get_carry_in(47), sequence_e1_82_adv));
        tmp255 = simd_and(sequence_e1_82_adv, cc_range_1082_109d_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp255);
        byte_8d = simd_and(tmp17, tmp9);
        sequence_e1_8d = simd_and(byte_e1_adv, byte_8d);
        tmp256 = simd_and(tmp47, tmp4);
        byte_range_9d_9f = simd_and(tmp256, tmp5);
        carryQ.cq[48] = carryout2carry(pablo_blk_Advance(sequence_e1_8d, carryQ.get_carry_in(48), sequence_e1_8d_adv));
        tmp257 = simd_and(sequence_e1_8d_adv, byte_range_9d_9f);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp257);
        byte_9c = simd_and(tmp47, tmp6);
        sequence_e1_9c = simd_and(byte_e1_adv, byte_9c);
        tmp258 = simd_and(byte_range_80_bf, basis_bits.bit_3);
        tmp259 = simd_andc(tmp258, basis_bits.bit_4);
        cc_range_1712_1732_3 = simd_and(tmp188, tmp259);
        carryQ.cq[49] = carryout2carry(pablo_blk_Advance(sequence_e1_9c, carryQ.get_carry_in(49), sequence_e1_9c_adv));
        tmp260 = simd_and(sequence_e1_9c_adv, cc_range_1712_1732_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp260);
        byte_9d = simd_and(tmp47, tmp9);
        sequence_e1_9d = simd_and(byte_e1_adv, byte_9d);
        cc_range_1752_1772_3 = simd_and(tmp133, tmp258);
        carryQ.cq[50] = carryout2carry(pablo_blk_Advance(sequence_e1_9d, carryQ.get_carry_in(50), sequence_e1_9d_adv));
        tmp261 = simd_and(sequence_e1_9d_adv, cc_range_1752_1772_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp261);
        byte_9e = simd_and(tmp47, tmp86);
        sequence_e1_9e = simd_and(byte_e1_adv, byte_9e);
        tmp262 = simd_not(tmp59);
        tmp263 = simd_or(simd_and(basis_bits.bit_4, tmp262), simd_andc(tmp73, basis_bits.bit_4));
        tmp264 = simd_or(tmp40, tmp263);
        cc_range_17b4_17b7_3 = simd_and(tmp31, tmp264);
        carryQ.cq[51] = carryout2carry(pablo_blk_Advance(sequence_e1_9e, carryQ.get_carry_in(51), sequence_e1_9e_adv));
        tmp265 = simd_and(sequence_e1_9e_adv, cc_range_17b4_17b7_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp265);
        byte_9f = simd_and(tmp47, tmp32);
        sequence_e1_9f = simd_and(byte_e1_adv, byte_9f);
        tmp266 = simd_or(simd_and(basis_bits.bit_3, tmp92), simd_andc(tmp225, basis_bits.bit_3));
        tmp267 = simd_and(tmp51, tmp266);
        tmp268 = simd_or(byte_86, tmp267);
        cc_range_17c6_17dd_3 = simd_or(tmp268, byte_9d);
        carryQ.cq[52] = carryout2carry(pablo_blk_Advance(sequence_e1_9f, carryQ.get_carry_in(52), sequence_e1_9f_adv));
        tmp269 = simd_and(sequence_e1_9f_adv, cc_range_17c6_17dd_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp269);
        sequence_e1_a0 = simd_and(byte_e1_adv, byte_a0);
        byte_range_8b_8d = simd_and(tmp147, tmp148);
        carryQ.cq[53] = carryout2carry(pablo_blk_Advance(sequence_e1_a0, carryQ.get_carry_in(53), sequence_e1_a0_adv));
        tmp270 = simd_and(sequence_e1_a0_adv, byte_range_8b_8d);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp270);
        byte_a2 = simd_and(tmp70, tmp16);
        sequence_e1_a2 = simd_and(byte_e1_adv, byte_a2);
        carryQ.cq[54] = carryout2carry(pablo_blk_Advance(sequence_e1_a2, carryQ.get_carry_in(54), sequence_e1_a2_adv));
        tmp271 = simd_and(sequence_e1_a2_adv, byte_a9);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp271);
        sequence_e1_a4 = simd_and(byte_e1_adv, byte_a4);
        tmp272 = simd_andc(tmp70, tmp14);
        tmp273 = simd_andc(tmp272, tmp19);
        tmp274 = simd_or(tmp273, tmp75);
        tmp275 = simd_or(tmp274, byte_b2);
        tmp276 = simd_and(tmp237, tmp5);
        cc_range_1920_1939_3 = simd_or(tmp275, tmp276);
        carryQ.cq[55] = carryout2carry(pablo_blk_Advance(sequence_e1_a4, carryQ.get_carry_in(55), sequence_e1_a4_adv));
        tmp277 = simd_and(sequence_e1_a4_adv, cc_range_1920_1939_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp277);
        sequence_e1_a8 = simd_and(byte_e1_adv, byte_a8);
        tmp278 = simd_or(tmp74, tmp56);
        cc_range_1a17_1a1b_3 = simd_and(tmp47, tmp278);
        carryQ.cq[56] = carryout2carry(pablo_blk_Advance(sequence_e1_a8, carryQ.get_carry_in(56), sequence_e1_a8_adv));
        tmp279 = simd_and(sequence_e1_a8_adv, cc_range_1a17_1a1b_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp279);
        sequence_e1_a9 = simd_and(byte_e1_adv, byte_a9);
        tmp280 = simd_and(tmp47, basis_bits.bit_4);
        tmp281 = simd_andc(tmp280, tmp73);
        tmp282 = simd_or(tmp163, tmp281);
        tmp283 = simd_or(tmp282, byte_a0);
        tmp284 = simd_or(tmp283, byte_a2);
        tmp285 = simd_or(simd_and(basis_bits.bit_4, tmp58), simd_andc(tmp57, basis_bits.bit_4));
        tmp286 = simd_and(tmp70, tmp285);
        tmp287 = simd_or(tmp284, tmp286);
        tmp288 = simd_or(simd_and(basis_bits.bit_4, tmp58), simd_andc(tmp20, basis_bits.bit_4));
        tmp289 = simd_and(tmp31, tmp288);
        tmp290 = simd_or(tmp287, tmp289);
        cc_range_1a56_1a7f_3 = simd_or(tmp290, byte_bf);
        carryQ.cq[57] = carryout2carry(pablo_blk_Advance(sequence_e1_a9, carryQ.get_carry_in(57), sequence_e1_a9_adv));
        tmp291 = simd_and(sequence_e1_a9_adv, cc_range_1a56_1a7f_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp291);
        sequence_e1_ac = simd_and(byte_e1_adv, byte_ac);
        tmp292 = simd_and(tmp31, tmp119);
        tmp293 = simd_or(tmp36, tmp292);
        tmp294 = simd_or(simd_and(basis_bits.bit_4, tmp192), simd_andc(tmp59, basis_bits.bit_4));
        tmp295 = simd_and(tmp31, tmp294);
        tmp296 = simd_or(tmp293, tmp295);
        cc_range_1b00_1b3c_3 = simd_or(tmp296, byte_bc);
        carryQ.cq[58] = carryout2carry(pablo_blk_Advance(sequence_e1_ac, carryQ.get_carry_in(58), sequence_e1_ac_adv));
        tmp297 = simd_and(sequence_e1_ac_adv, cc_range_1b00_1b3c_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp297);
        sequence_e1_ad = simd_and(byte_e1_adv, byte_ad);
        cc_range_1b42_1b6b_3 = simd_or(byte_82, byte_range_ab_b3);
        carryQ.cq[59] = carryout2carry(pablo_blk_Advance(sequence_e1_ad, carryQ.get_carry_in(59), sequence_e1_ad_adv));
        tmp298 = simd_and(sequence_e1_ad_adv, cc_range_1b42_1b6b_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp298);
        sequence_e1_ae = simd_and(byte_e1_adv, byte_ae);
        tmp299 = simd_andc(tmp17, tmp152);
        tmp300 = simd_andc(tmp70, basis_bits.bit_4);
        tmp301 = simd_and(tmp300, tmp79);
        tmp302 = simd_or(tmp299, tmp301);
        tmp303 = simd_and(tmp70, tmp207);
        tmp304 = simd_or(tmp302, tmp303);
        cc_range_1b80_1bab_3 = simd_or(tmp304, byte_ab);
        carryQ.cq[60] = carryout2carry(pablo_blk_Advance(sequence_e1_ae, carryQ.get_carry_in(60), sequence_e1_ae_adv));
        tmp305 = simd_and(sequence_e1_ae_adv, cc_range_1b80_1bab_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp305);
        sequence_e1_af = simd_and(byte_e1_adv, byte_af);
        tmp306 = simd_or(tmp23, tmp207);
        tmp307 = simd_or(tmp306, tmp9);
        tmp308 = simd_and(tmp70, tmp307);
        tmp309 = simd_not(tmp152);
        tmp310 = simd_or(simd_and(basis_bits.bit_3, tmp309), simd_andc(tmp32, basis_bits.bit_3));
        tmp311 = simd_and(tmp87, tmp310);
        cc_range_1be6_1bef_3 = simd_or(tmp308, tmp311);
        carryQ.cq[61] = carryout2carry(pablo_blk_Advance(sequence_e1_af, carryQ.get_carry_in(61), sequence_e1_af_adv));
        tmp312 = simd_and(sequence_e1_af_adv, cc_range_1be6_1bef_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp312);
        sequence_e1_b0 = simd_and(byte_e1_adv, byte_b0);
        tmp313 = simd_or(simd_and(basis_bits.bit_3, tmp92), simd_andc(tmp4, basis_bits.bit_3));
        tmp314 = simd_and(tmp87, tmp313);
        tmp315 = simd_and(tmp31, tmp215);
        cc_range_1c2c_1c36_3 = simd_or(tmp314, tmp315);
        carryQ.cq[62] = carryout2carry(pablo_blk_Advance(sequence_e1_b0, carryQ.get_carry_in(62), sequence_e1_b0_adv));
        tmp316 = simd_and(sequence_e1_b0_adv, cc_range_1c2c_1c36_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp316);
        sequence_e1_b3 = simd_and(byte_e1_adv, byte_b3);
        tmp317 = simd_andc(tmp47, tmp14);
        tmp318 = simd_andc(tmp317, tmp19);
        tmp319 = simd_and(basis_bits.bit_3, tmp14);
        tmp320 = simd_or(simd_and(basis_bits.bit_2, tmp244), simd_andc(tmp319, basis_bits.bit_2));
        tmp321 = simd_and(byte_range_80_bf, tmp320);
        tmp322 = simd_or(tmp318, tmp321);
        tmp323 = simd_or(simd_and(basis_bits.bit_4, tmp72), simd_andc(tmp97, basis_bits.bit_4));
        tmp324 = simd_and(tmp70, tmp323);
        tmp325 = simd_or(tmp322, tmp324);
        tmp326 = simd_or(tmp325, byte_ad);
        cc_range_1cd0_1cf4_3 = simd_or(tmp326, tmp292);
        carryQ.cq[63] = carryout2carry(pablo_blk_Advance(sequence_e1_b3, carryQ.get_carry_in(63), sequence_e1_b3_adv));
        tmp327 = simd_and(sequence_e1_b3_adv, cc_range_1cd0_1cf4_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp327);
        sequence_e1_b7 = simd_and(byte_e1_adv, byte_b7);
        tmp328 = simd_or(basis_bits.bit_4, tmp73);
        tmp329 = simd_or(basis_bits.bit_3, tmp328);
        tmp330 = simd_and(basis_bits.bit_2, tmp329);
        tmp331 = simd_andc(byte_range_80_bf, tmp330);
        cc_range_1dc0_1dfc_3 = simd_or(tmp331, tmp240);
        carryQ.cq[64] = carryout2carry(pablo_blk_Advance(sequence_e1_b7, carryQ.get_carry_in(64), sequence_e1_b7_adv));
        tmp332 = simd_and(sequence_e1_b7_adv, cc_range_1dc0_1dfc_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp332);
        byte_e2 = simd_and(tmp95, tmp16);
        byte_83 = simd_and(tmp17, tmp115);
        carryQ.cq[65] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(65), tmp333));
        sequence_e2_83 = simd_and(tmp333, byte_83);
        carryQ.cq[66] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(66), byte_e2_adv));
        tmp334 = simd_and(basis_bits.bit_4, tmp57);
        tmp335 = simd_andc(tmp47, tmp334);
        tmp336 = simd_or(tmp335, byte_a1);
        tmp337 = simd_or(simd_and(basis_bits.bit_3, tmp88), simd_andc(tmp62, basis_bits.bit_3));
        tmp338 = simd_and(tmp87, tmp337);
        cc_range_20d0_20e5_3 = simd_or(tmp336, tmp338);
        carryQ.cq[67] = carryout2carry(pablo_blk_Advance(sequence_e2_83, carryQ.get_carry_in(67), sequence_e2_83_adv));
        tmp339 = simd_and(sequence_e2_83_adv, cc_range_20d0_20e5_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp339);
        sequence_e2_b3 = simd_and(byte_e2_adv, byte_b3);
        byte_range_af_b1 = simd_and(tmp87, tmp310);
        carryQ.cq[68] = carryout2carry(pablo_blk_Advance(sequence_e2_b3, carryQ.get_carry_in(68), sequence_e2_b3_adv));
        tmp340 = simd_and(sequence_e2_b3_adv, byte_range_af_b1);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp340);
        sequence_e2_b5 = simd_and(byte_e2_adv, byte_b5);
        carryQ.cq[69] = carryout2carry(pablo_blk_Advance(sequence_e2_b5, carryQ.get_carry_in(69), sequence_e2_b5_adv));
        tmp341 = simd_and(sequence_e2_b5_adv, byte_bf);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp341);
        sequence_e2_b7 = simd_and(byte_e2_adv, byte_b7);
        byte_range_a0_bf = simd_and(byte_range_80_bf, basis_bits.bit_2);
        carryQ.cq[70] = carryout2carry(pablo_blk_Advance(sequence_e2_b7, carryQ.get_carry_in(70), sequence_e2_b7_adv));
        tmp342 = simd_and(sequence_e2_b7_adv, byte_range_a0_bf);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp342);
        byte_e3 = simd_and(tmp95, tmp115);
        carryQ.cq[71] = carryout2carry(pablo_blk_Advance(byte_e3, carryQ.get_carry_in(71), tmp343));
        sequence_e3_80 = simd_and(tmp343, byte_80);
        carryQ.cq[72] = carryout2carry(pablo_blk_Advance(byte_e3, carryQ.get_carry_in(72), byte_e3_adv));
        byte_range_aa_ad = simd_and(tmp77, tmp79);
        carryQ.cq[73] = carryout2carry(pablo_blk_Advance(sequence_e3_80, carryQ.get_carry_in(73), sequence_e3_80_adv));
        tmp344 = simd_and(sequence_e3_80_adv, byte_range_aa_ad);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp344);
        sequence_e3_82 = simd_and(byte_e3_adv, byte_82);
        byte_range_99_9a = simd_and(tmp113, tmp38);
        carryQ.cq[74] = carryout2carry(pablo_blk_Advance(sequence_e3_82, carryQ.get_carry_in(74), sequence_e3_82_adv));
        tmp345 = simd_and(sequence_e3_82_adv, byte_range_99_9a);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp345);
        byte_ea = simd_and(tmp95, tmp121);
        byte_99 = simd_and(tmp47, tmp50);
        carryQ.cq[75] = carryout2carry(pablo_blk_Advance(byte_ea, carryQ.get_carry_in(75), tmp346));
        sequence_ea_99 = simd_and(tmp346, byte_99);
        carryQ.cq[76] = carryout2carry(pablo_blk_Advance(byte_ea, carryQ.get_carry_in(76), byte_ea_adv));
        tmp347 = simd_or(simd_and(basis_bits.bit_4, tmp262), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
        tmp348 = simd_and(tmp31, tmp347);
        cc_range_a66f_a674_3 = simd_or(byte_af, tmp348);
        carryQ.cq[77] = carryout2carry(pablo_blk_Advance(sequence_ea_99, carryQ.get_carry_in(77), sequence_ea_99_adv));
        tmp349 = simd_and(sequence_ea_99_adv, cc_range_a66f_a674_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp349);
        byte_9a = simd_and(tmp47, tmp121);
        sequence_ea_9a = simd_and(byte_ea_adv, byte_9a);
        carryQ.cq[78] = carryout2carry(pablo_blk_Advance(sequence_ea_9a, carryQ.get_carry_in(78), sequence_ea_9a_adv));
        tmp350 = simd_and(sequence_ea_9a_adv, byte_9f);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp350);
        byte_9b = simd_and(tmp47, tmp56);
        sequence_ea_9b = simd_and(byte_ea_adv, byte_9b);
        byte_range_b0_b1 = simd_andc(tmp31, tmp152);
        carryQ.cq[79] = carryout2carry(pablo_blk_Advance(sequence_ea_9b, carryQ.get_carry_in(79), sequence_ea_9b_adv));
        tmp351 = simd_and(sequence_ea_9b_adv, byte_range_b0_b1);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp351);
        sequence_ea_a0 = simd_and(byte_ea_adv, byte_a0);
        tmp352 = simd_andc(tmp14, tmp22);
        tmp353 = simd_andc(tmp15, tmp352);
        tmp354 = simd_or(tmp353, tmp56);
        tmp355 = simd_and(tmp17, tmp354);
        tmp356 = simd_and(tmp107, tmp38);
        cc_range_a802_a825_3 = simd_or(tmp355, tmp356);
        carryQ.cq[80] = carryout2carry(pablo_blk_Advance(sequence_ea_a0, carryQ.get_carry_in(80), sequence_ea_a0_adv));
        tmp357 = simd_and(sequence_ea_a0_adv, cc_range_a802_a825_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp357);
        sequence_ea_a3 = simd_and(byte_ea_adv, byte_a3);
        tmp358 = simd_and(tmp17, tmp119);
        tmp359 = simd_and(basis_bits.bit_3, tmp152);
        tmp360 = simd_andc(byte_range_a0_bf, tmp359);
        cc_range_a8c4_a8e0_3 = simd_or(tmp358, tmp360);
        carryQ.cq[81] = carryout2carry(pablo_blk_Advance(sequence_ea_a3, carryQ.get_carry_in(81), sequence_ea_a3_adv));
        tmp361 = simd_and(sequence_ea_a3_adv, cc_range_a8c4_a8e0_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp361);
        sequence_ea_a4 = simd_and(byte_ea_adv, byte_a4);
        tmp362 = simd_or(simd_and(basis_bits.bit_4, tmp262), simd_andc(tmp59, basis_bits.bit_4));
        byte_range_a6_ad = simd_and(tmp70, tmp362);
        carryQ.cq[82] = carryout2carry(pablo_blk_Advance(sequence_ea_a4, carryQ.get_carry_in(82), sequence_ea_a4_adv));
        tmp363 = simd_and(sequence_ea_a4_adv, byte_range_a6_ad);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp363);
        sequence_ea_a5 = simd_and(byte_ea_adv, byte_a5);
        tmp364 = simd_or(simd_and(basis_bits.bit_3, tmp309), simd_andc(tmp328, basis_bits.bit_3));
        byte_range_87_91 = simd_and(tmp51, tmp364);
        carryQ.cq[83] = carryout2carry(pablo_blk_Advance(sequence_ea_a5, carryQ.get_carry_in(83), sequence_ea_a5_adv));
        tmp365 = simd_and(sequence_ea_a5_adv, byte_range_87_91);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp365);
        sequence_ea_a6 = simd_and(byte_ea_adv, byte_a6);
        tmp366 = simd_or(tmp120, byte_b3);
        tmp367 = simd_and(tmp31, tmp99);
        tmp368 = simd_or(tmp366, tmp367);
        cc_range_a980_a9bc_3 = simd_or(tmp368, byte_bc);
        carryQ.cq[84] = carryout2carry(pablo_blk_Advance(sequence_ea_a6, carryQ.get_carry_in(84), sequence_ea_a6_adv));
        tmp369 = simd_and(sequence_ea_a6_adv, cc_range_a980_a9bc_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp369);
        sequence_ea_a8 = simd_and(byte_ea_adv, byte_a8);
        tmp370 = simd_not(tmp19);
        tmp371 = simd_or(simd_and(basis_bits.bit_5, tmp370), simd_andc(tmp5, basis_bits.bit_5));
        tmp372 = simd_and(tmp77, tmp371);
        tmp373 = simd_andc(tmp31, tmp14);
        tmp374 = simd_and(tmp373, tmp38);
        tmp375 = simd_or(tmp372, tmp374);
        tmp376 = simd_and(tmp31, tmp22);
        tmp377 = simd_and(tmp376, tmp38);
        cc_range_aa29_aa35_3 = simd_or(tmp375, tmp377);
        carryQ.cq[85] = carryout2carry(pablo_blk_Advance(sequence_ea_a8, carryQ.get_carry_in(85), sequence_ea_a8_adv));
        tmp378 = simd_and(sequence_ea_a8_adv, cc_range_aa29_aa35_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp378);
        sequence_ea_a9 = simd_and(byte_ea_adv, byte_a9);
        tmp379 = simd_or(tmp115, tmp6);
        cc_range_aa43_aa4c_3 = simd_and(tmp17, tmp379);
        carryQ.cq[86] = carryout2carry(pablo_blk_Advance(sequence_ea_a9, carryQ.get_carry_in(86), sequence_ea_a9_adv));
        tmp380 = simd_and(sequence_ea_a9_adv, cc_range_aa43_aa4c_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp380);
        sequence_ea_aa = simd_and(byte_ea_adv, byte_aa);
        tmp381 = simd_and(tmp234, tmp188);
        tmp382 = simd_or(byte_b0, tmp381);
        tmp383 = simd_and(tmp31, tmp74);
        tmp384 = simd_or(tmp382, tmp383);
        cc_range_aab0_aabe_3 = simd_or(tmp384, byte_range_be_bf);
        carryQ.cq[87] = carryout2carry(pablo_blk_Advance(sequence_ea_aa, carryQ.get_carry_in(87), sequence_ea_aa_adv));
        tmp385 = simd_and(sequence_ea_aa_adv, cc_range_aab0_aabe_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp385);
        sequence_ea_ab = simd_and(byte_ea_adv, byte_ab);
        tmp386 = simd_and(tmp70, tmp182);
        tmp387 = simd_or(byte_81, tmp386);
        tmp388 = simd_and(tmp31, tmp23);
        cc_range_aac1_aaf6_3 = simd_or(tmp387, tmp388);
        carryQ.cq[88] = carryout2carry(pablo_blk_Advance(sequence_ea_ab, carryQ.get_carry_in(88), sequence_ea_ab_adv));
        tmp389 = simd_and(sequence_ea_ab_adv, cc_range_aac1_aaf6_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp389);
        sequence_ea_af = simd_and(byte_ea_adv, byte_af);
        tmp390 = simd_or(tmp126, tmp46);
        tmp391 = simd_or(tmp390, tmp9);
        cc_range_abe5_abed_3 = simd_and(tmp70, tmp391);
        carryQ.cq[89] = carryout2carry(pablo_blk_Advance(sequence_ea_af, carryQ.get_carry_in(89), sequence_ea_af_adv));
        tmp392 = simd_and(sequence_ea_af_adv, cc_range_abe5_abed_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp392);
        byte_ef = simd_and(tmp95, tmp32);
        carryQ.cq[90] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(90), tmp393));
        sequence_ef_ac = simd_and(tmp393, byte_ac);
        carryQ.cq[91] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(91), byte_ef_adv));
        carryQ.cq[92] = carryout2carry(pablo_blk_Advance(sequence_ef_ac, carryQ.get_carry_in(92), sequence_ef_ac_adv));
        tmp394 = simd_and(sequence_ef_ac_adv, byte_9e);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp394);
        sequence_ef_b8 = simd_and(byte_ef_adv, byte_b8);
        tmp395 = simd_andc(tmp300, tmp73);
        cc_range_fe00_fe20_3 = simd_or(tmp17, tmp395);
        carryQ.cq[93] = carryout2carry(pablo_blk_Advance(sequence_ef_b8, carryQ.get_carry_in(93), sequence_ef_b8_adv));
        tmp396 = simd_and(sequence_ef_b8_adv, cc_range_fe00_fe20_3);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp396);
        tmp397 = simd_and(tmp1, tmp10);
        byte_f0 = simd_andc(tmp397, tmp27);
        byte_90 = simd_andc(tmp47, tmp27);
        carryQ.cq[94] = carryout2carry(pablo_blk_Advance(byte_f0, carryQ.get_carry_in(94), tmp398));
        sequence_f0_90 = simd_and(tmp398, byte_90);
        carryQ.cq[95] = carryout2carry(pablo_blk_Advance(byte_f0, carryQ.get_carry_in(95), byte_f0_adv));
        byte_87 = simd_and(tmp17, tmp35);
        carryQ.cq[96] = carryout2carry(pablo_blk_Advance(sequence_f0_90, carryQ.get_carry_in(96), tmp399));
        sequence_f0_90_87 = simd_and(tmp399, byte_87);
        carryQ.cq[97] = carryout2carry(pablo_blk_Advance(sequence_f0_90, carryQ.get_carry_in(97), sequence_f0_90_adv));
        carryQ.cq[98] = carryout2carry(pablo_blk_Advance(sequence_f0_90_87, carryQ.get_carry_in(98), sequence_f0_90_87_adv));
        tmp400 = simd_and(sequence_f0_90_87_adv, byte_bd);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp400);
        sequence_f0_90_a8 = simd_and(sequence_f0_90_adv, byte_a8);
        tmp401 = simd_and(tmp36, tmp5);
        tmp402 = simd_or(tmp401, tmp251);
        tmp403 = simd_and(tmp17, tmp4);
        tmp404 = simd_or(tmp402, tmp403);
        tmp405 = simd_andc(tmp237, tmp19);
        tmp406 = simd_or(tmp404, tmp405);
        cc_range_10a01_10a3f_4 = simd_or(tmp406, byte_bf);
        carryQ.cq[99] = carryout2carry(pablo_blk_Advance(sequence_f0_90_a8, carryQ.get_carry_in(99), sequence_f0_90_a8_adv));
        tmp407 = simd_and(sequence_f0_90_a8_adv, cc_range_10a01_10a3f_4);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp407);
        byte_91 = simd_and(tmp47, tmp82);
        sequence_f0_91 = simd_and(byte_f0_adv, byte_91);
        carryQ.cq[100] = carryout2carry(pablo_blk_Advance(sequence_f0_91, carryQ.get_carry_in(100), tmp408));
        sequence_f0_91_80 = simd_and(tmp408, byte_80);
        carryQ.cq[101] = carryout2carry(pablo_blk_Advance(sequence_f0_91, carryQ.get_carry_in(101), sequence_f0_91_adv));
        cc_range_11001_11038_4 = simd_or(byte_81, tmp202);
        carryQ.cq[102] = carryout2carry(pablo_blk_Advance(sequence_f0_91_80, carryQ.get_carry_in(102), sequence_f0_91_80_adv));
        tmp409 = simd_and(sequence_f0_91_80_adv, cc_range_11001_11038_4);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp409);
        sequence_f0_91_81 = simd_and(sequence_f0_91_adv, byte_81);
        byte_range_80_86 = simd_andc(tmp18, tmp73);
        carryQ.cq[103] = carryout2carry(pablo_blk_Advance(sequence_f0_91_81, carryQ.get_carry_in(103), sequence_f0_91_81_adv));
        tmp410 = simd_and(sequence_f0_91_81_adv, byte_range_80_86);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp410);
        sequence_f0_91_82 = simd_and(sequence_f0_91_adv, byte_82);
        tmp411 = simd_or(simd_and(basis_bits.bit_5, tmp370), simd_andc(tmp19, basis_bits.bit_5));
        tmp412 = simd_and(tmp234, tmp411);
        tmp413 = simd_or(tmp299, tmp412);
        cc_range_11080_110b9_4 = simd_or(tmp413, tmp238);
        carryQ.cq[104] = carryout2carry(pablo_blk_Advance(sequence_f0_91_82, carryQ.get_carry_in(104), sequence_f0_91_82_adv));
        tmp414 = simd_and(sequence_f0_91_82_adv, cc_range_11080_110b9_4);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp414);
        byte_84 = simd_and(tmp17, tmp119);
        sequence_f0_91_84 = simd_and(sequence_f0_91_adv, byte_84);
        tmp415 = simd_not(basis_bits.bit_5);
        tmp416 = simd_or(simd_and(basis_bits.bit_4, tmp415), simd_andc(tmp73, basis_bits.bit_4));
        tmp417 = simd_and(tmp70, tmp416);
        tmp418 = simd_or(tmp120, tmp417);
        tmp419 = simd_not(tmp62);
        tmp420 = simd_or(simd_and(basis_bits.bit_3, tmp419), simd_andc(tmp219, basis_bits.bit_3));
        tmp421 = simd_and(byte_range_a0_bf, tmp420);
        cc_range_11100_1112d_4 = simd_or(tmp418, tmp421);
        carryQ.cq[105] = carryout2carry(pablo_blk_Advance(sequence_f0_91_84, carryQ.get_carry_in(105), sequence_f0_91_84_adv));
        tmp422 = simd_and(sequence_f0_91_84_adv, cc_range_11100_1112d_4);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp422);
        sequence_f0_91_86 = simd_and(sequence_f0_91_adv, byte_86);
        tmp423 = simd_or(simd_and(basis_bits.bit_4, tmp196), simd_andc(tmp59, basis_bits.bit_4));
        tmp424 = simd_and(tmp31, tmp423);
        cc_range_11180_111b6_4 = simd_or(tmp299, tmp424);
        carryQ.cq[106] = carryout2carry(pablo_blk_Advance(sequence_f0_91_86, carryQ.get_carry_in(106), sequence_f0_91_86_adv));
        tmp425 = simd_and(sequence_f0_91_86_adv, cc_range_11180_111b6_4);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp425);
        sequence_f0_91_9a = simd_and(sequence_f0_91_adv, byte_9a);
        tmp426 = simd_or(tmp56, tmp9);
        tmp427 = simd_and(tmp70, tmp426);
        tmp428 = simd_andc(tmp234, tmp59);
        tmp429 = simd_or(tmp427, tmp428);
        cc_range_116ab_116b7_4 = simd_or(tmp429, byte_b7);
        carryQ.cq[107] = carryout2carry(pablo_blk_Advance(sequence_f0_91_9a, carryQ.get_carry_in(107), sequence_f0_91_9a_adv));
        tmp430 = simd_and(sequence_f0_91_9a_adv, cc_range_116ab_116b7_4);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp430);
        byte_96 = simd_and(tmp47, tmp23);
        sequence_f0_96 = simd_and(byte_f0_adv, byte_96);
        carryQ.cq[108] = carryout2carry(pablo_blk_Advance(sequence_f0_96, carryQ.get_carry_in(108), tmp431));
        sequence_f0_96_be = simd_and(tmp431, byte_be);
        carryQ.cq[109] = carryout2carry(pablo_blk_Advance(sequence_f0_96, carryQ.get_carry_in(109), sequence_f0_96_adv));
        tmp432 = simd_or(tmp14, tmp19);
        tmp433 = simd_not(tmp432);
        tmp434 = simd_or(simd_and(basis_bits.bit_3, tmp433), simd_andc(tmp32, basis_bits.bit_3));
        byte_range_8f_92 = simd_and(tmp51, tmp434);
        carryQ.cq[110] = carryout2carry(pablo_blk_Advance(sequence_f0_96_be, carryQ.get_carry_in(110), sequence_f0_96_be_adv));
        tmp435 = simd_and(sequence_f0_96_be_adv, byte_range_8f_92);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp435);
        sequence_f0_9d = simd_and(byte_f0_adv, byte_9d);
        byte_85 = simd_and(tmp17, tmp126);
        carryQ.cq[111] = carryout2carry(pablo_blk_Advance(sequence_f0_9d, carryQ.get_carry_in(111), tmp436));
        sequence_f0_9d_85 = simd_and(tmp436, byte_85);
        carryQ.cq[112] = carryout2carry(pablo_blk_Advance(sequence_f0_9d, carryQ.get_carry_in(112), sequence_f0_9d_adv));
        tmp437 = simd_or(simd_and(basis_bits.bit_4, tmp98), simd_andc(tmp73, basis_bits.bit_4));
        tmp438 = simd_and(tmp70, tmp437);
        tmp439 = simd_and(tmp202, tmp20);
        cc_range_1d167_1d17b_4 = simd_or(tmp438, tmp439);
        carryQ.cq[113] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_85, carryQ.get_carry_in(113), sequence_f0_9d_85_adv));
        tmp440 = simd_and(sequence_f0_9d_85_adv, cc_range_1d167_1d17b_4);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp440);
        sequence_f0_9d_86 = simd_and(sequence_f0_9d_adv, byte_86);
        tmp441 = simd_or(simd_and(basis_bits.bit_4, tmp415), simd_andc(tmp57, basis_bits.bit_4));
        tmp442 = simd_and(tmp17, tmp441);
        tmp443 = simd_or(tmp120, tmp442);
        cc_range_1d180_1d1aa_4 = simd_or(tmp443, byte_range_aa_ad);
        carryQ.cq[114] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_86, carryQ.get_carry_in(114), sequence_f0_9d_86_adv));
        tmp444 = simd_and(sequence_f0_9d_86_adv, cc_range_1d180_1d1aa_4);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp444);
        byte_89 = simd_and(tmp17, tmp50);
        sequence_f0_9d_89 = simd_and(sequence_f0_9d_adv, byte_89);
        byte_range_82_84 = simd_and(tmp18, tmp188);
        carryQ.cq[115] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_89, carryQ.get_carry_in(115), sequence_f0_9d_89_adv));
        tmp445 = simd_and(sequence_f0_9d_89_adv, byte_range_82_84);
        struct_Mn.cc = simd_or(struct_Mn.cc, tmp445);
        byte_f3 = simd_and(tmp397, tmp115);
        carryQ.cq[116] = carryout2carry(pablo_blk_Advance(byte_f3, carryQ.get_carry_in(116), tmp446));
        sequence_f3_a0 = simd_and(tmp446, byte_a0);
        carryQ.cq[117] = carryout2carry(pablo_blk_Advance(byte_f3, carryQ.get_carry_in(117), byte_f3_adv));
        byte_range_84_86 = simd_andc(tmp250, tmp19);
        carryQ.cq[118] = carryout2carry(pablo_blk_Advance(sequence_f3_a0, carryQ.get_carry_in(118), tmp447));
        sequence_f3_a0_byte_range_84_86 = simd_and(tmp447, byte_range_84_86);
        carryQ.cq[119] = carryout2carry(pablo_blk_Advance(sequence_f3_a0_byte_range_84_86, carryQ.get_carry_in(119), tmp448));
        sequence_f3_a0_byte_range_84_86_sfx = simd_and(tmp448, byte_range_80_bf);
        struct_Mn.cc = simd_or(struct_Mn.cc, sequence_f3_a0_byte_range_84_86_sfx);
        carryQ.cq[120] = carryout2carry(pablo_blk_Advance(sequence_f3_a0, carryQ.get_carry_in(120), sequence_f3_a0_adv));
        sequence_f3_a0_87 = simd_and(sequence_f3_a0_adv, byte_87);
        carryQ.cq[121] = carryout2carry(pablo_blk_Advance(sequence_f3_a0_87, carryQ.get_carry_in(121), tmp449));
        sequence_f3_a0_87_byte_range_80_af = simd_and(tmp449, byte_range_80_af);
        struct_Mn.cc = simd_or(struct_Mn.cc, sequence_f3_a0_87_byte_range_80_af);
  }
  CarryArray<122, 0> carryQ;
  };

  struct Sk {
  Sk() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Sk & struct_Sk) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, tmp7, tmp8, tmp9, tmp10, tmp11;
		BitBlock tmp12, tmp13, cc_range_5e_60_1, tmp14, tmp15, tmp16, tmp17, byte_c2;
		BitBlock tmp18, tmp19, tmp20, tmp21, tmp22, tmp23, tmp24, tmp25, tmp26, tmp27;
		BitBlock tmp28, tmp29, tmp30, tmp31, tmp32, cc_range_a8_b8_2, byte_c2_adv;
		BitBlock tmp33, tmp34, byte_cb, tmp35, tmp36, tmp37, tmp38, tmp39, tmp40;
		BitBlock tmp41, tmp42, tmp43, tmp44, tmp45, tmp46, tmp47, tmp48, tmp49, tmp50;
		BitBlock tmp51, tmp52, tmp53, tmp54, tmp55, tmp56, cc_range_2c2_2ef_2;
		BitBlock byte_cb_adv, tmp57, byte_cd, tmp58, byte_b5, byte_cd_adv, tmp59;
		BitBlock byte_ce, tmp60, byte_range_84_85, byte_ce_adv, tmp61, tmp62, tmp63;
		BitBlock byte_e1, byte_be, tmp64, sequence_e1_be, byte_e1_adv, tmp65;
		BitBlock cc_range_1fbd_1fbf_3, sequence_e1_be_adv, tmp66, byte_bf;
		BitBlock sequence_e1_bf, tmp67, tmp68, tmp69, tmp70, tmp71, tmp72, tmp73;
		BitBlock tmp74, tmp75, tmp76, tmp77, tmp78, tmp79, tmp80, tmp81;
		BitBlock cc_range_1fc0_1ffd_3, sequence_e1_bf_adv, tmp82, tmp83, byte_e3;
		BitBlock byte_82, tmp84, sequence_e3_82, byte_e3_adv, tmp85, tmp86, tmp87;
		BitBlock byte_range_9b_9c, sequence_e3_82_adv, tmp88, tmp89, byte_ea, tmp90;
		BitBlock byte_9c, tmp91, sequence_ea_9c, byte_ea_adv, tmp92, tmp93, tmp94;
		BitBlock tmp95, tmp96, tmp97, cc_range_a700_a720_3, sequence_ea_9c_adv, tmp98;
		BitBlock byte_9e, sequence_ea_9e, tmp99, byte_range_89_8a, sequence_ea_9e_adv;
		BitBlock tmp100, byte_ef, byte_ae, tmp101, sequence_ef_ae, byte_ef_adv;
		BitBlock byte_range_b2_bf, sequence_ef_ae_adv, tmp102, byte_af, sequence_ef_af;
		BitBlock byte_range_80_81, sequence_ef_af_adv, tmp103, byte_bc, sequence_ef_bc;
		BitBlock sequence_ef_bc_adv, tmp104, byte_bd, sequence_ef_bd, byte_80;
		BitBlock sequence_ef_bd_adv, tmp105, sequence_ef_bf, byte_a3;
		BitBlock sequence_ef_bf_adv, tmp106;




        struct_Sk.cc = simd<1>::constant<0>();
        tmp1 = simd_andc(basis_bits.bit_1, basis_bits.bit_0);
        tmp2 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp3 = simd_and(tmp1, tmp2);
        tmp4 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_and(tmp4, tmp5);
        tmp7 = simd_and(tmp3, tmp6);
        tmp8 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp9 = simd_and(tmp1, tmp8);
        tmp10 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp11 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp12 = simd_or(tmp10, tmp11);
        tmp13 = simd_andc(tmp9, tmp12);
        cc_range_5e_60_1 = simd_or(tmp7, tmp13);
        struct_Sk.cc = simd_or(struct_Sk.cc, cc_range_5e_60_1);
        tmp14 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp15 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp16 = simd_andc(tmp14, tmp15);
        tmp17 = simd_andc(tmp5, tmp10);
        byte_c2 = simd_and(tmp16, tmp17);
        tmp18 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp19 = simd_and(tmp18, tmp8);
        tmp20 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp21 = simd_andc(tmp20, tmp11);
        tmp22 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp23 = simd_and(tmp4, tmp22);
        tmp24 = simd_or(tmp21, tmp23);
        tmp25 = simd_and(tmp19, tmp24);
        tmp26 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp27 = simd_and(tmp18, tmp26);
        tmp28 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp29 = simd_andc(tmp28, tmp11);
        tmp30 = simd_and(tmp27, tmp29);
        tmp31 = simd_or(tmp25, tmp30);
        tmp32 = simd_and(tmp27, tmp21);
        cc_range_a8_b8_2 = simd_or(tmp31, tmp32);
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(byte_c2, carryQ.get_carry_in(0), byte_c2_adv));
        tmp33 = simd_and(byte_c2_adv, cc_range_a8_b8_2);
        struct_Sk.cc = simd_or(struct_Sk.cc, tmp33);
        tmp34 = simd_and(tmp20, tmp22);
        byte_cb = simd_and(tmp16, tmp34);
        tmp35 = simd_andc(tmp18, tmp15);
        tmp36 = simd_andc(tmp35, basis_bits.bit_4);
        tmp37 = simd_not(basis_bits.bit_6);
        tmp38 = simd_or(simd_and(basis_bits.bit_5, tmp37), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        tmp39 = simd_and(tmp36, tmp38);
        tmp40 = simd_and(tmp18, tmp2);
        tmp41 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
        tmp42 = simd_or(basis_bits.bit_4, tmp41);
        tmp43 = simd_and(tmp40, tmp42);
        tmp44 = simd_or(tmp39, tmp43);
        tmp45 = simd_not(basis_bits.bit_5);
        tmp46 = simd_and(basis_bits.bit_5, tmp11);
        tmp47 = simd_or(simd_and(basis_bits.bit_4, tmp45), simd_andc(tmp46, basis_bits.bit_4));
        tmp48 = simd_and(tmp19, tmp47);
        tmp49 = simd_or(tmp44, tmp48);
        tmp50 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp51 = simd_and(tmp4, tmp50);
        tmp52 = simd_and(tmp19, tmp51);
        tmp53 = simd_or(tmp49, tmp52);
        tmp54 = simd_and(tmp18, basis_bits.bit_2);
        tmp55 = simd_or(basis_bits.bit_3, tmp23);
        tmp56 = simd_and(tmp54, tmp55);
        cc_range_2c2_2ef_2 = simd_or(tmp53, tmp56);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(byte_cb, carryQ.get_carry_in(1), byte_cb_adv));
        tmp57 = simd_and(byte_cb_adv, cc_range_2c2_2ef_2);
        struct_Sk.cc = simd_or(struct_Sk.cc, tmp57);
        byte_cd = simd_and(tmp16, tmp51);
        tmp58 = simd_and(tmp28, tmp50);
        byte_b5 = simd_and(tmp27, tmp58);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(byte_cd, carryQ.get_carry_in(2), byte_cd_adv));
        tmp59 = simd_and(byte_cd_adv, byte_b5);
        struct_Sk.cc = simd_or(struct_Sk.cc, tmp59);
        byte_ce = simd_and(tmp16, tmp6);
        tmp60 = simd_andc(tmp28, basis_bits.bit_6);
        byte_range_84_85 = simd_and(tmp35, tmp60);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(byte_ce, carryQ.get_carry_in(3), byte_ce_adv));
        tmp61 = simd_and(byte_ce_adv, byte_range_84_85);
        struct_Sk.cc = simd_or(struct_Sk.cc, tmp61);
        tmp62 = simd_and(tmp14, tmp8);
        tmp63 = simd_andc(tmp50, tmp10);
        byte_e1 = simd_and(tmp62, tmp63);
        byte_be = simd_and(tmp27, tmp6);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(4), tmp64));
        sequence_e1_be = simd_and(tmp64, byte_be);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(5), byte_e1_adv));
        tmp65 = simd_and(tmp4, basis_bits.bit_7);
        cc_range_1fbd_1fbf_3 = simd_and(tmp27, tmp65);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(sequence_e1_be, carryQ.get_carry_in(6), sequence_e1_be_adv));
        tmp66 = simd_and(sequence_e1_be_adv, cc_range_1fbd_1fbf_3);
        struct_Sk.cc = simd_or(struct_Sk.cc, tmp66);
        byte_bf = simd_and(tmp27, tmp23);
        sequence_e1_bf = simd_and(byte_e1_adv, byte_bf);
        tmp67 = simd_or(tmp10, basis_bits.bit_6);
        tmp68 = simd_andc(tmp35, tmp67);
        tmp69 = simd_and(tmp35, tmp4);
        tmp70 = simd_and(tmp69, tmp11);
        tmp71 = simd_or(tmp68, tmp70);
        tmp72 = simd_and(tmp40, tmp4);
        tmp73 = simd_and(tmp72, tmp11);
        tmp74 = simd_or(tmp71, tmp73);
        tmp75 = simd_and(tmp19, tmp4);
        tmp76 = simd_and(tmp75, tmp11);
        tmp77 = simd_or(tmp74, tmp76);
        tmp78 = simd_and(tmp27, tmp4);
        tmp79 = simd_not(basis_bits.bit_7);
        tmp80 = simd_or(simd_and(basis_bits.bit_6, tmp79), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
        tmp81 = simd_and(tmp78, tmp80);
        cc_range_1fc0_1ffd_3 = simd_or(tmp77, tmp81);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(sequence_e1_bf, carryQ.get_carry_in(7), sequence_e1_bf_adv));
        tmp82 = simd_and(sequence_e1_bf_adv, cc_range_1fc0_1ffd_3);
        struct_Sk.cc = simd_or(struct_Sk.cc, tmp82);
        tmp83 = simd_andc(tmp22, tmp10);
        byte_e3 = simd_and(tmp62, tmp83);
        byte_82 = simd_and(tmp35, tmp17);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(byte_e3, carryQ.get_carry_in(8), tmp84));
        sequence_e3_82 = simd_and(tmp84, byte_82);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(byte_e3, carryQ.get_carry_in(9), byte_e3_adv));
        tmp85 = simd_and(tmp40, basis_bits.bit_4);
        tmp86 = simd_not(tmp11);
        tmp87 = simd_or(simd_and(basis_bits.bit_5, tmp86), simd_andc(tmp22, basis_bits.bit_5));
        byte_range_9b_9c = simd_and(tmp85, tmp87);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(sequence_e3_82, carryQ.get_carry_in(10), sequence_e3_82_adv));
        tmp88 = simd_and(sequence_e3_82_adv, byte_range_9b_9c);
        struct_Sk.cc = simd_or(struct_Sk.cc, tmp88);
        tmp89 = simd_and(tmp20, tmp5);
        byte_ea = simd_and(tmp62, tmp89);
        tmp90 = simd_andc(tmp4, tmp11);
        byte_9c = simd_and(tmp40, tmp90);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(byte_ea, carryQ.get_carry_in(11), tmp91));
        sequence_ea_9c = simd_and(tmp91, byte_9c);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(byte_ea, carryQ.get_carry_in(12), byte_ea_adv));
        tmp92 = simd_andc(tmp18, basis_bits.bit_2);
        tmp93 = simd_and(basis_bits.bit_5, tmp22);
        tmp94 = simd_or(basis_bits.bit_4, tmp93);
        tmp95 = simd_and(basis_bits.bit_3, tmp94);
        tmp96 = simd_andc(tmp92, tmp95);
        tmp97 = simd_andc(tmp19, tmp67);
        cc_range_a700_a720_3 = simd_or(tmp96, tmp97);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(sequence_ea_9c, carryQ.get_carry_in(13), sequence_ea_9c_adv));
        tmp98 = simd_and(sequence_ea_9c_adv, cc_range_a700_a720_3);
        struct_Sk.cc = simd_or(struct_Sk.cc, tmp98);
        byte_9e = simd_and(tmp40, tmp6);
        sequence_ea_9e = simd_and(byte_ea_adv, byte_9e);
        tmp99 = simd_and(tmp35, tmp20);
        byte_range_89_8a = simd_and(tmp99, tmp80);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(sequence_ea_9e, carryQ.get_carry_in(14), sequence_ea_9e_adv));
        tmp100 = simd_and(sequence_ea_9e_adv, byte_range_89_8a);
        struct_Sk.cc = simd_or(struct_Sk.cc, tmp100);
        byte_ef = simd_and(tmp62, tmp23);
        byte_ae = simd_and(tmp19, tmp6);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(15), tmp101));
        sequence_ef_ae = simd_and(tmp101, byte_ae);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(16), byte_ef_adv));
        byte_range_b2_bf = simd_and(tmp27, tmp42);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(sequence_ef_ae, carryQ.get_carry_in(17), sequence_ef_ae_adv));
        tmp102 = simd_and(sequence_ef_ae_adv, byte_range_b2_bf);
        struct_Sk.cc = simd_or(struct_Sk.cc, tmp102);
        byte_af = simd_and(tmp19, tmp23);
        sequence_ef_af = simd_and(byte_ef_adv, byte_af);
        byte_range_80_81 = simd_andc(tmp35, tmp67);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(sequence_ef_af, carryQ.get_carry_in(18), sequence_ef_af_adv));
        tmp103 = simd_and(sequence_ef_af_adv, byte_range_80_81);
        struct_Sk.cc = simd_or(struct_Sk.cc, tmp103);
        byte_bc = simd_and(tmp27, tmp90);
        sequence_ef_bc = simd_and(byte_ef_adv, byte_bc);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(sequence_ef_bc, carryQ.get_carry_in(19), sequence_ef_bc_adv));
        tmp104 = simd_and(sequence_ef_bc_adv, byte_be);
        struct_Sk.cc = simd_or(struct_Sk.cc, tmp104);
        byte_bd = simd_and(tmp27, tmp51);
        sequence_ef_bd = simd_and(byte_ef_adv, byte_bd);
        byte_80 = simd_andc(tmp35, tmp12);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(sequence_ef_bd, carryQ.get_carry_in(20), sequence_ef_bd_adv));
        tmp105 = simd_and(sequence_ef_bd_adv, byte_80);
        struct_Sk.cc = simd_or(struct_Sk.cc, tmp105);
        sequence_ef_bf = simd_and(byte_ef_adv, byte_bf);
        byte_a3 = simd_and(tmp19, tmp83);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(sequence_ef_bf, carryQ.get_carry_in(21), sequence_ef_bf_adv));
        tmp106 = simd_and(sequence_ef_bf_adv, byte_a3);
        struct_Sk.cc = simd_or(struct_Sk.cc, tmp106);
        carryQ.CarryQ_Adjust(22);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Sk & struct_Sk, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, tmp7, tmp8, tmp9, tmp10, tmp11;
		BitBlock tmp12, tmp13, cc_range_5e_60_1, tmp14, tmp15, tmp16, tmp17, byte_c2;
		BitBlock tmp18, tmp19, tmp20, tmp21, tmp22, tmp23, tmp24, tmp25, tmp26, tmp27;
		BitBlock tmp28, tmp29, tmp30, tmp31, tmp32, cc_range_a8_b8_2, byte_c2_adv;
		BitBlock tmp33, tmp34, byte_cb, tmp35, tmp36, tmp37, tmp38, tmp39, tmp40;
		BitBlock tmp41, tmp42, tmp43, tmp44, tmp45, tmp46, tmp47, tmp48, tmp49, tmp50;
		BitBlock tmp51, tmp52, tmp53, tmp54, tmp55, tmp56, cc_range_2c2_2ef_2;
		BitBlock byte_cb_adv, tmp57, byte_cd, tmp58, byte_b5, byte_cd_adv, tmp59;
		BitBlock byte_ce, tmp60, byte_range_84_85, byte_ce_adv, tmp61, tmp62, tmp63;
		BitBlock byte_e1, byte_be, tmp64, sequence_e1_be, byte_e1_adv, tmp65;
		BitBlock cc_range_1fbd_1fbf_3, sequence_e1_be_adv, tmp66, byte_bf;
		BitBlock sequence_e1_bf, tmp67, tmp68, tmp69, tmp70, tmp71, tmp72, tmp73;
		BitBlock tmp74, tmp75, tmp76, tmp77, tmp78, tmp79, tmp80, tmp81;
		BitBlock cc_range_1fc0_1ffd_3, sequence_e1_bf_adv, tmp82, tmp83, byte_e3;
		BitBlock byte_82, tmp84, sequence_e3_82, byte_e3_adv, tmp85, tmp86, tmp87;
		BitBlock byte_range_9b_9c, sequence_e3_82_adv, tmp88, tmp89, byte_ea, tmp90;
		BitBlock byte_9c, tmp91, sequence_ea_9c, byte_ea_adv, tmp92, tmp93, tmp94;
		BitBlock tmp95, tmp96, tmp97, cc_range_a700_a720_3, sequence_ea_9c_adv, tmp98;
		BitBlock byte_9e, sequence_ea_9e, tmp99, byte_range_89_8a, sequence_ea_9e_adv;
		BitBlock tmp100, byte_ef, byte_ae, tmp101, sequence_ef_ae, byte_ef_adv;
		BitBlock byte_range_b2_bf, sequence_ef_ae_adv, tmp102, byte_af, sequence_ef_af;
		BitBlock byte_range_80_81, sequence_ef_af_adv, tmp103, byte_bc, sequence_ef_bc;
		BitBlock sequence_ef_bc_adv, tmp104, byte_bd, sequence_ef_bd, byte_80;
		BitBlock sequence_ef_bd_adv, tmp105, sequence_ef_bf, byte_a3;
		BitBlock sequence_ef_bf_adv, tmp106;




        struct_Sk.cc = simd<1>::constant<0>();
        tmp1 = simd_andc(basis_bits.bit_1, basis_bits.bit_0);
        tmp2 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp3 = simd_and(tmp1, tmp2);
        tmp4 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_and(tmp4, tmp5);
        tmp7 = simd_and(tmp3, tmp6);
        tmp8 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp9 = simd_and(tmp1, tmp8);
        tmp10 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp11 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp12 = simd_or(tmp10, tmp11);
        tmp13 = simd_andc(tmp9, tmp12);
        cc_range_5e_60_1 = simd_or(tmp7, tmp13);
        struct_Sk.cc = simd_or(struct_Sk.cc, cc_range_5e_60_1);
        tmp14 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp15 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp16 = simd_andc(tmp14, tmp15);
        tmp17 = simd_andc(tmp5, tmp10);
        byte_c2 = simd_and(tmp16, tmp17);
        tmp18 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp19 = simd_and(tmp18, tmp8);
        tmp20 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp21 = simd_andc(tmp20, tmp11);
        tmp22 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp23 = simd_and(tmp4, tmp22);
        tmp24 = simd_or(tmp21, tmp23);
        tmp25 = simd_and(tmp19, tmp24);
        tmp26 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp27 = simd_and(tmp18, tmp26);
        tmp28 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp29 = simd_andc(tmp28, tmp11);
        tmp30 = simd_and(tmp27, tmp29);
        tmp31 = simd_or(tmp25, tmp30);
        tmp32 = simd_and(tmp27, tmp21);
        cc_range_a8_b8_2 = simd_or(tmp31, tmp32);
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(byte_c2, carryQ.get_carry_in(0), byte_c2_adv));
        tmp33 = simd_and(byte_c2_adv, cc_range_a8_b8_2);
        struct_Sk.cc = simd_or(struct_Sk.cc, tmp33);
        tmp34 = simd_and(tmp20, tmp22);
        byte_cb = simd_and(tmp16, tmp34);
        tmp35 = simd_andc(tmp18, tmp15);
        tmp36 = simd_andc(tmp35, basis_bits.bit_4);
        tmp37 = simd_not(basis_bits.bit_6);
        tmp38 = simd_or(simd_and(basis_bits.bit_5, tmp37), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        tmp39 = simd_and(tmp36, tmp38);
        tmp40 = simd_and(tmp18, tmp2);
        tmp41 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
        tmp42 = simd_or(basis_bits.bit_4, tmp41);
        tmp43 = simd_and(tmp40, tmp42);
        tmp44 = simd_or(tmp39, tmp43);
        tmp45 = simd_not(basis_bits.bit_5);
        tmp46 = simd_and(basis_bits.bit_5, tmp11);
        tmp47 = simd_or(simd_and(basis_bits.bit_4, tmp45), simd_andc(tmp46, basis_bits.bit_4));
        tmp48 = simd_and(tmp19, tmp47);
        tmp49 = simd_or(tmp44, tmp48);
        tmp50 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp51 = simd_and(tmp4, tmp50);
        tmp52 = simd_and(tmp19, tmp51);
        tmp53 = simd_or(tmp49, tmp52);
        tmp54 = simd_and(tmp18, basis_bits.bit_2);
        tmp55 = simd_or(basis_bits.bit_3, tmp23);
        tmp56 = simd_and(tmp54, tmp55);
        cc_range_2c2_2ef_2 = simd_or(tmp53, tmp56);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(byte_cb, carryQ.get_carry_in(1), byte_cb_adv));
        tmp57 = simd_and(byte_cb_adv, cc_range_2c2_2ef_2);
        struct_Sk.cc = simd_or(struct_Sk.cc, tmp57);
        byte_cd = simd_and(tmp16, tmp51);
        tmp58 = simd_and(tmp28, tmp50);
        byte_b5 = simd_and(tmp27, tmp58);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(byte_cd, carryQ.get_carry_in(2), byte_cd_adv));
        tmp59 = simd_and(byte_cd_adv, byte_b5);
        struct_Sk.cc = simd_or(struct_Sk.cc, tmp59);
        byte_ce = simd_and(tmp16, tmp6);
        tmp60 = simd_andc(tmp28, basis_bits.bit_6);
        byte_range_84_85 = simd_and(tmp35, tmp60);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(byte_ce, carryQ.get_carry_in(3), byte_ce_adv));
        tmp61 = simd_and(byte_ce_adv, byte_range_84_85);
        struct_Sk.cc = simd_or(struct_Sk.cc, tmp61);
        tmp62 = simd_and(tmp14, tmp8);
        tmp63 = simd_andc(tmp50, tmp10);
        byte_e1 = simd_and(tmp62, tmp63);
        byte_be = simd_and(tmp27, tmp6);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(4), tmp64));
        sequence_e1_be = simd_and(tmp64, byte_be);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(5), byte_e1_adv));
        tmp65 = simd_and(tmp4, basis_bits.bit_7);
        cc_range_1fbd_1fbf_3 = simd_and(tmp27, tmp65);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(sequence_e1_be, carryQ.get_carry_in(6), sequence_e1_be_adv));
        tmp66 = simd_and(sequence_e1_be_adv, cc_range_1fbd_1fbf_3);
        struct_Sk.cc = simd_or(struct_Sk.cc, tmp66);
        byte_bf = simd_and(tmp27, tmp23);
        sequence_e1_bf = simd_and(byte_e1_adv, byte_bf);
        tmp67 = simd_or(tmp10, basis_bits.bit_6);
        tmp68 = simd_andc(tmp35, tmp67);
        tmp69 = simd_and(tmp35, tmp4);
        tmp70 = simd_and(tmp69, tmp11);
        tmp71 = simd_or(tmp68, tmp70);
        tmp72 = simd_and(tmp40, tmp4);
        tmp73 = simd_and(tmp72, tmp11);
        tmp74 = simd_or(tmp71, tmp73);
        tmp75 = simd_and(tmp19, tmp4);
        tmp76 = simd_and(tmp75, tmp11);
        tmp77 = simd_or(tmp74, tmp76);
        tmp78 = simd_and(tmp27, tmp4);
        tmp79 = simd_not(basis_bits.bit_7);
        tmp80 = simd_or(simd_and(basis_bits.bit_6, tmp79), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
        tmp81 = simd_and(tmp78, tmp80);
        cc_range_1fc0_1ffd_3 = simd_or(tmp77, tmp81);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(sequence_e1_bf, carryQ.get_carry_in(7), sequence_e1_bf_adv));
        tmp82 = simd_and(sequence_e1_bf_adv, cc_range_1fc0_1ffd_3);
        struct_Sk.cc = simd_or(struct_Sk.cc, tmp82);
        tmp83 = simd_andc(tmp22, tmp10);
        byte_e3 = simd_and(tmp62, tmp83);
        byte_82 = simd_and(tmp35, tmp17);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(byte_e3, carryQ.get_carry_in(8), tmp84));
        sequence_e3_82 = simd_and(tmp84, byte_82);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(byte_e3, carryQ.get_carry_in(9), byte_e3_adv));
        tmp85 = simd_and(tmp40, basis_bits.bit_4);
        tmp86 = simd_not(tmp11);
        tmp87 = simd_or(simd_and(basis_bits.bit_5, tmp86), simd_andc(tmp22, basis_bits.bit_5));
        byte_range_9b_9c = simd_and(tmp85, tmp87);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(sequence_e3_82, carryQ.get_carry_in(10), sequence_e3_82_adv));
        tmp88 = simd_and(sequence_e3_82_adv, byte_range_9b_9c);
        struct_Sk.cc = simd_or(struct_Sk.cc, tmp88);
        tmp89 = simd_and(tmp20, tmp5);
        byte_ea = simd_and(tmp62, tmp89);
        tmp90 = simd_andc(tmp4, tmp11);
        byte_9c = simd_and(tmp40, tmp90);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(byte_ea, carryQ.get_carry_in(11), tmp91));
        sequence_ea_9c = simd_and(tmp91, byte_9c);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(byte_ea, carryQ.get_carry_in(12), byte_ea_adv));
        tmp92 = simd_andc(tmp18, basis_bits.bit_2);
        tmp93 = simd_and(basis_bits.bit_5, tmp22);
        tmp94 = simd_or(basis_bits.bit_4, tmp93);
        tmp95 = simd_and(basis_bits.bit_3, tmp94);
        tmp96 = simd_andc(tmp92, tmp95);
        tmp97 = simd_andc(tmp19, tmp67);
        cc_range_a700_a720_3 = simd_or(tmp96, tmp97);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(sequence_ea_9c, carryQ.get_carry_in(13), sequence_ea_9c_adv));
        tmp98 = simd_and(sequence_ea_9c_adv, cc_range_a700_a720_3);
        struct_Sk.cc = simd_or(struct_Sk.cc, tmp98);
        byte_9e = simd_and(tmp40, tmp6);
        sequence_ea_9e = simd_and(byte_ea_adv, byte_9e);
        tmp99 = simd_and(tmp35, tmp20);
        byte_range_89_8a = simd_and(tmp99, tmp80);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(sequence_ea_9e, carryQ.get_carry_in(14), sequence_ea_9e_adv));
        tmp100 = simd_and(sequence_ea_9e_adv, byte_range_89_8a);
        struct_Sk.cc = simd_or(struct_Sk.cc, tmp100);
        byte_ef = simd_and(tmp62, tmp23);
        byte_ae = simd_and(tmp19, tmp6);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(15), tmp101));
        sequence_ef_ae = simd_and(tmp101, byte_ae);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(16), byte_ef_adv));
        byte_range_b2_bf = simd_and(tmp27, tmp42);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(sequence_ef_ae, carryQ.get_carry_in(17), sequence_ef_ae_adv));
        tmp102 = simd_and(sequence_ef_ae_adv, byte_range_b2_bf);
        struct_Sk.cc = simd_or(struct_Sk.cc, tmp102);
        byte_af = simd_and(tmp19, tmp23);
        sequence_ef_af = simd_and(byte_ef_adv, byte_af);
        byte_range_80_81 = simd_andc(tmp35, tmp67);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(sequence_ef_af, carryQ.get_carry_in(18), sequence_ef_af_adv));
        tmp103 = simd_and(sequence_ef_af_adv, byte_range_80_81);
        struct_Sk.cc = simd_or(struct_Sk.cc, tmp103);
        byte_bc = simd_and(tmp27, tmp90);
        sequence_ef_bc = simd_and(byte_ef_adv, byte_bc);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(sequence_ef_bc, carryQ.get_carry_in(19), sequence_ef_bc_adv));
        tmp104 = simd_and(sequence_ef_bc_adv, byte_be);
        struct_Sk.cc = simd_or(struct_Sk.cc, tmp104);
        byte_bd = simd_and(tmp27, tmp51);
        sequence_ef_bd = simd_and(byte_ef_adv, byte_bd);
        byte_80 = simd_andc(tmp35, tmp12);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(sequence_ef_bd, carryQ.get_carry_in(20), sequence_ef_bd_adv));
        tmp105 = simd_and(sequence_ef_bd_adv, byte_80);
        struct_Sk.cc = simd_or(struct_Sk.cc, tmp105);
        sequence_ef_bf = simd_and(byte_ef_adv, byte_bf);
        byte_a3 = simd_and(tmp19, tmp83);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(sequence_ef_bf, carryQ.get_carry_in(21), sequence_ef_bf_adv));
        tmp106 = simd_and(sequence_ef_bf_adv, byte_a3);
        struct_Sk.cc = simd_or(struct_Sk.cc, tmp106);
  }
  CarryArray<22, 0> carryQ;
  };

  struct So {
  So() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_So & struct_So) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, byte_c2, tmp7, tmp8, tmp9, tmp10;
		BitBlock tmp11, tmp12, tmp13, tmp14, tmp15, tmp16, tmp17, tmp18, tmp19, tmp20;
		BitBlock tmp21, tmp22, tmp23, tmp24, cc_range_a6_b0_2, byte_c2_adv, tmp25;
		BitBlock tmp26, tmp27, byte_d2, tmp28, byte_82, byte_d2_adv, tmp29, tmp30;
		BitBlock byte_d8, tmp31, byte_range_8e_8f, byte_d8_adv, tmp32, tmp33, tmp34;
		BitBlock byte_db, tmp35, tmp36, tmp37, tmp38, tmp39, tmp40, tmp41, tmp42;
		BitBlock cc_range_6de_6fd_2, byte_db_adv, tmp43, tmp44, byte_df, byte_b6;
		BitBlock byte_df_adv, tmp45, tmp46, byte_e0, tmp47, byte_a7, tmp48;
		BitBlock sequence_e0_a7, byte_e0_adv, tmp49, byte_ba, sequence_e0_a7_adv;
		BitBlock tmp50, tmp51, byte_ad, sequence_e0_ad, byte_b0, sequence_e0_ad_adv;
		BitBlock tmp52, byte_af, sequence_e0_af, tmp53, tmp54, tmp55, tmp56, tmp57;
		BitBlock cc_range_bf3_bfa_3, sequence_e0_af_adv, tmp58, tmp59, byte_b1;
		BitBlock sequence_e0_b1, byte_bf, sequence_e0_b1_adv, tmp60, tmp61, byte_b5;
		BitBlock sequence_e0_b5, byte_b9, sequence_e0_b5_adv, tmp62, tmp63, byte_bc;
		BitBlock sequence_e0_bc, tmp64, tmp65, tmp66, tmp67, tmp68, tmp69, tmp70;
		BitBlock tmp71, tmp72, tmp73, tmp74, tmp75, tmp76, tmp77, tmp78, tmp79, tmp80;
		BitBlock cc_range_f01_f38_3, sequence_e0_bc_adv, tmp81, byte_be;
		BitBlock sequence_e0_be, byte_range_be_bf, sequence_e0_be_adv, tmp82;
		BitBlock sequence_e0_bf, tmp83, tmp84, tmp85, tmp86, tmp87, tmp88, tmp89;
		BitBlock tmp90, tmp91, tmp92, tmp93, tmp94, cc_range_fc0_fd5_3;
		BitBlock sequence_e0_bf_adv, tmp95, byte_e1, tmp96, sequence_e1_82;
		BitBlock byte_e1_adv, byte_range_9e_9f, sequence_e1_82_adv, tmp97, byte_8e;
		BitBlock sequence_e1_8e, tmp98, byte_range_90_99, sequence_e1_8e_adv, tmp99;
		BitBlock byte_a5, sequence_e1_a5, byte_80, sequence_e1_a5_adv, tmp100;
		BitBlock sequence_e1_a7, tmp101, tmp102, byte_range_9e_bf, sequence_e1_a7_adv;
		BitBlock tmp103, sequence_e1_ad, tmp104, tmp105, tmp106, tmp107, tmp108;
		BitBlock cc_range_1b61_1b74_3, sequence_e1_ad_adv, tmp109, byte_e2, byte_84;
		BitBlock tmp110, sequence_e2_84, byte_e2_adv, tmp111, tmp112, tmp113, tmp114;
		BitBlock tmp115, tmp116, tmp117, tmp118, tmp119, tmp120, tmp121, tmp122;
		BitBlock tmp123, tmp124, tmp125, tmp126, tmp127, tmp128, tmp129, tmp130;
		BitBlock tmp131, tmp132, tmp133, tmp134, tmp135, tmp136, cc_range_2100_213a_3;
		BitBlock sequence_e2_84_adv, tmp137, byte_85, sequence_e2_85, tmp138, tmp139;
		BitBlock tmp140, cc_range_214a_214f_3, sequence_e2_85_adv, tmp141, byte_86;
		BitBlock sequence_e2_86, tmp142, tmp143, tmp144, tmp145, tmp146, tmp147;
		BitBlock tmp148, tmp149, tmp150, tmp151, tmp152, tmp153, tmp154, tmp155;
		BitBlock tmp156, tmp157, tmp158, cc_range_2195_21af_3, sequence_e2_86_adv;
		BitBlock tmp159, byte_87, sequence_e2_87, tmp160, tmp161, tmp162, tmp163;
		BitBlock tmp164, tmp165, tmp166, tmp167, tmp168, tmp169, tmp170;
		BitBlock cc_range_21c0_21d5_3, sequence_e2_87_adv, tmp171, byte_8c;
		BitBlock sequence_e2_8c, tmp172, tmp173, tmp174, tmp175, tmp176, tmp177;
		BitBlock tmp178, tmp179, tmp180, tmp181, cc_range_2300_232b_3;
		BitBlock sequence_e2_8c_adv, tmp182, byte_8d, sequence_e2_8d, tmp183, tmp184;
		BitBlock tmp185, tmp186, cc_range_2340_237d_3, sequence_e2_8d_adv, tmp187;
		BitBlock sequence_e2_8e, tmp188, tmp189, tmp190, cc_range_2380_23b4_3;
		BitBlock sequence_e2_8e_adv, tmp191, byte_8f, sequence_e2_8f, tmp192, tmp193;
		BitBlock tmp194, tmp195, cc_range_23c0_23e2_3, sequence_e2_8f_adv, tmp196;
		BitBlock byte_90, sequence_e2_90, tmp197, tmp198, tmp199, byte_range_80_a6;
		BitBlock sequence_e2_90_adv, tmp200, byte_91, sequence_e2_91, byte_range_80_8a;
		BitBlock sequence_e2_91_adv, tmp201, byte_92, sequence_e2_92, tmp202;
		BitBlock byte_range_9c_bf, sequence_e2_92_adv, tmp203, byte_93, sequence_e2_93;
		BitBlock tmp204, tmp205, byte_range_80_a9, sequence_e2_93_adv, tmp206;
		BitBlock byte_range_94_95, byte_e2_byte_range_94_95, byte_range_80_bf, tmp207;
		BitBlock byte_e2_byte_range_94_95_sfx, tmp208, byte_96, sequence_e2_96, tmp209;
		BitBlock tmp210, byte_range_80_b6, tmp211, sequence_e2_96_byte_range_80_b6;
		BitBlock byte_97, sequence_e2_97, tmp212, tmp213, sequence_e2_97_80, byte_98;
		BitBlock sequence_e2_98, tmp214, sequence_e2_98_byte_range_80_bf, byte_99;
		BitBlock sequence_e2_99, tmp215, byte_range_80_ae, tmp216;
		BitBlock sequence_e2_99_byte_range_80_ae, byte_9a, sequence_e2_9a, tmp217;
		BitBlock sequence_e2_9a_byte_range_80_bf, byte_9c, sequence_e2_9c, tmp218;
		BitBlock tmp219, byte_range_81_bf, tmp220, sequence_e2_9c_byte_range_81_bf;
		BitBlock byte_9d, sequence_e2_9d, tmp221, tmp222, byte_range_80_a7, tmp223;
		BitBlock sequence_e2_9d_byte_range_80_a7, byte_9e, sequence_e2_9e, tmp224;
		BitBlock byte_range_94_bf, tmp225, sequence_e2_9e_byte_range_94_bf, tmp226;
		BitBlock byte_a0, sequence_e2_a0, tmp227, sequence_e2_a0_byte_range_80_bf;
		BitBlock byte_ac, sequence_e2_ac, byte_range_80_af, tmp228;
		BitBlock sequence_e2_ac_byte_range_80_af, sequence_e2_ad, tmp229;
		BitBlock byte_range_85_86, tmp230, sequence_e2_ad_byte_range_85_86, tmp231;
		BitBlock byte_b3, sequence_e2_b3, tmp232, byte_range_a5_aa, tmp233;
		BitBlock sequence_e2_b3_byte_range_a5_aa, sequence_e2_ba, tmp234, tmp235;
		BitBlock byte_range_80_99, tmp236, sequence_e2_ba_byte_range_80_99, byte_bb;
		BitBlock sequence_e2_bb, tmp237, byte_range_80_b3, tmp238;
		BitBlock sequence_e2_bb_byte_range_80_b3, sequence_e2_bc, tmp239;
		BitBlock sequence_e2_bc_byte_range_80_bf, sequence_e2_bf, tmp240, tmp241;
		BitBlock byte_range_80_95, tmp242, sequence_e2_bf_byte_range_80_95, byte_e3;
		BitBlock tmp243, sequence_e3_80, byte_e3_adv, tmp244, tmp245, tmp246, tmp247;
		BitBlock tmp248, tmp249, tmp250, tmp251, cc_range_3004_303e_3;
		BitBlock sequence_e3_80_adv, tmp252, sequence_e3_86, tmp253;
		BitBlock cc_range_3190_3196_3, sequence_e3_86_adv, tmp254, sequence_e3_87;
		BitBlock tmp255, byte_range_80_a3, sequence_e3_87_adv, tmp256, byte_88;
		BitBlock sequence_e3_88, tmp257, tmp258, tmp259, tmp260, cc_range_3200_322a_3;
		BitBlock sequence_e3_88_adv, tmp261, byte_89, sequence_e3_89, tmp262, tmp263;
		BitBlock tmp264, cc_range_3240_3260_3, sequence_e3_89_adv, tmp265, byte_8a;
		BitBlock sequence_e3_8a, tmp266, tmp267, tmp268, byte_range_8a_b0;
		BitBlock sequence_e3_8a_adv, tmp269, byte_8b, sequence_e3_8b, tmp270;
		BitBlock byte_range_80_be, sequence_e3_8b_adv, tmp271, byte_range_8c_8f;
		BitBlock byte_e3_byte_range_8c_8f, tmp272, byte_e3_byte_range_8c_8f_sfx;
		BitBlock byte_e4, byte_b7, tmp273, sequence_e4_b7, byte_e4_adv;
		BitBlock sequence_e4_b7_adv, tmp274, byte_ea, tmp275, sequence_ea_92;
		BitBlock byte_ea_adv, byte_range_90_bf, sequence_ea_92_adv, tmp276;
		BitBlock sequence_ea_93, byte_range_80_86, sequence_ea_93_adv, tmp277;
		BitBlock sequence_ea_a0, tmp278, tmp279, tmp280, cc_range_a828_a839_3;
		BitBlock sequence_ea_a0_adv, tmp281, byte_a9, sequence_ea_a9, tmp282;
		BitBlock byte_range_b7_b9, sequence_ea_a9_adv, tmp283, byte_ef, tmp284;
		BitBlock sequence_ef_b7, byte_ef_adv, byte_bd, sequence_ef_b7_adv, tmp285;
		BitBlock sequence_ef_bf, tmp286, tmp287, tmp288, tmp289, tmp290, tmp291;
		BitBlock tmp292, cc_range_ffe4_fffc_3, sequence_ef_bf_adv, tmp293, tmp294;
		BitBlock byte_f0, tmp295, sequence_f0_90, byte_f0_adv, tmp296;
		BitBlock sequence_f0_90_84, sequence_f0_90_adv, byte_range_b7_bf;
		BitBlock sequence_f0_90_84_adv, tmp297, sequence_f0_90_85, tmp298;
		BitBlock byte_range_b9_bf, sequence_f0_90_85_adv, tmp299, sequence_f0_90_86;
		BitBlock tmp300, tmp301, cc_range_10180_10190_4, sequence_f0_90_86_adv, tmp302;
		BitBlock sequence_f0_90_87, tmp303, tmp304, tmp305, tmp306, byte_range_90_bc;
		BitBlock sequence_f0_90_87_adv, tmp307, sequence_f0_9d, tmp308;
		BitBlock byte_range_80_82, tmp309, sequence_f0_9d_byte_range_80_82, tmp310;
		BitBlock sequence_f0_9d_byte_range_80_82_sfx, byte_83, sequence_f0_9d_adv;
		BitBlock sequence_f0_9d_83, tmp311, byte_range_80_b5, tmp312;
		BitBlock sequence_f0_9d_83_byte_range_80_b5, sequence_f0_9d_84, tmp313;
		BitBlock sequence_f0_9d_84_byte_range_80_a6, sequence_f0_9d_85, tmp314, tmp315;
		BitBlock byte_range_80_a4, tmp316, sequence_f0_9d_85_byte_range_80_a4;
		BitBlock sequence_f0_9d_86, tmp317, tmp318, byte_range_83_84, tmp319;
		BitBlock sequence_f0_9d_86_byte_range_83_84, sequence_f0_9d_87;
		BitBlock byte_range_80_9d, tmp320, sequence_f0_9d_87_byte_range_80_9d;
		BitBlock sequence_f0_9d_88, tmp321, sequence_f0_9d_88_byte_range_80_bf;
		BitBlock sequence_f0_9d_89, byte_range_80_81, tmp322;
		BitBlock sequence_f0_9d_89_byte_range_80_81, sequence_f0_9d_8c, tmp323;
		BitBlock sequence_f0_9d_8c_byte_range_80_bf, sequence_f0_9d_8d;
		BitBlock byte_range_80_96, tmp324, sequence_f0_9d_8d_byte_range_80_96, byte_9f;
		BitBlock sequence_f0_9f, tmp325, sequence_f0_9f_80, sequence_f0_9f_adv, tmp326;
		BitBlock tmp327, cc_range_1f000_1f030_4, sequence_f0_9f_80_adv, tmp328;
		BitBlock byte_81, sequence_f0_9f_81, sequence_f0_9f_81_adv, tmp329;
		BitBlock sequence_f0_9f_82, tmp330, tmp331, tmp332, tmp333, tmp334, tmp335;
		BitBlock tmp336, cc_range_1f080_1f0b1_4, sequence_f0_9f_82_adv, tmp337;
		BitBlock sequence_f0_9f_83, tmp338, tmp339, tmp340, cc_range_1f0c1_1f0d1_4;
		BitBlock sequence_f0_9f_83_adv, tmp341, sequence_f0_9f_84, tmp342, tmp343;
		BitBlock tmp344, cc_range_1f110_1f130_4, sequence_f0_9f_84_adv, tmp345;
		BitBlock sequence_f0_9f_85, cc_range_1f140_1f170_4, sequence_f0_9f_85_adv;
		BitBlock tmp346, sequence_f0_9f_86, byte_range_80_9a, sequence_f0_9f_86_adv;
		BitBlock tmp347, sequence_f0_9f_87, tmp348, byte_range_a6_bf;
		BitBlock sequence_f0_9f_87_adv, tmp349, sequence_f0_9f_88, tmp350, tmp351;
		BitBlock tmp352, cc_range_1f200_1f210_4, sequence_f0_9f_88_adv, tmp353;
		BitBlock sequence_f0_9f_89, tmp354, tmp355, tmp356, cc_range_1f240_1f250_4;
		BitBlock sequence_f0_9f_89_adv, tmp357, sequence_f0_9f_8c, tmp358, tmp359;
		BitBlock tmp360, tmp361, tmp362, cc_range_1f300_1f337_4, sequence_f0_9f_8c_adv;
		BitBlock tmp363, sequence_f0_9f_8d, tmp364, byte_range_80_bc;
		BitBlock sequence_f0_9f_8d_adv, tmp365, sequence_f0_9f_8e;
		BitBlock cc_range_1f380_1f3a0_4, sequence_f0_9f_8e_adv, tmp366;
		BitBlock sequence_f0_9f_8f, tmp367, tmp368, tmp369, tmp370, tmp371;
		BitBlock cc_range_1f3c0_1f3e0_4, sequence_f0_9f_8f_adv, tmp372;
		BitBlock sequence_f0_9f_90, sequence_f0_9f_90_adv, tmp373, sequence_f0_9f_91;
		BitBlock tmp374, tmp375, tmp376, tmp377, cc_range_1f440_1f442_4;
		BitBlock sequence_f0_9f_91_adv, tmp378, sequence_f0_9f_92;
		BitBlock sequence_f0_9f_92_adv, tmp379, sequence_f0_9f_93, tmp380, tmp381;
		BitBlock tmp382, tmp383, tmp384, cc_range_1f4c0_1f4f9_4, sequence_f0_9f_93_adv;
		BitBlock tmp385, byte_94, sequence_f0_9f_94, tmp386, byte_range_80_bd;
		BitBlock sequence_f0_9f_94_adv, tmp387, byte_95, sequence_f0_9f_95, tmp388;
		BitBlock tmp389, tmp390, cc_range_1f540_1f550_4, sequence_f0_9f_95_adv, tmp391;
		BitBlock sequence_f0_9f_97, byte_range_bb_bf, sequence_f0_9f_97_adv, tmp392;
		BitBlock sequence_f0_9f_98, sequence_f0_9f_98_adv, tmp393, sequence_f0_9f_99;
		BitBlock tmp394, cc_range_1f640_1f645_4, sequence_f0_9f_99_adv, tmp395;
		BitBlock sequence_f0_9f_9a, sequence_f0_9f_9a_adv, tmp396, byte_9b;
		BitBlock sequence_f0_9f_9b, byte_range_80_85, sequence_f0_9f_9b_adv, tmp397;
		BitBlock sequence_f0_9f_9c, sequence_f0_9f_9c_adv, tmp398, sequence_f0_9f_9d;
		BitBlock sequence_f0_9f_9d_adv, tmp399;




        struct_So.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_andc(tmp5, tmp4);
        byte_c2 = simd_and(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp11 = simd_and(tmp10, tmp5);
        tmp12 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp13 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp14 = simd_and(tmp12, tmp13);
        tmp15 = simd_or(tmp11, tmp14);
        tmp16 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp17 = simd_and(tmp16, tmp5);
        tmp18 = simd_or(tmp15, tmp17);
        tmp19 = simd_and(tmp9, tmp18);
        tmp20 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp21 = simd_and(tmp7, tmp20);
        tmp22 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp23 = simd_or(tmp4, tmp22);
        tmp24 = simd_andc(tmp21, tmp23);
        cc_range_a6_b0_2 = simd_or(tmp19, tmp24);
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(byte_c2, carryQ.get_carry_in(0), byte_c2_adv));
        tmp25 = simd_and(byte_c2_adv, cc_range_a6_b0_2);
        struct_So.cc = simd_or(struct_So.cc, tmp25);
        tmp26 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp27 = simd_and(tmp1, tmp26);
        byte_d2 = simd_and(tmp27, tmp6);
        tmp28 = simd_andc(tmp7, tmp2);
        byte_82 = simd_and(tmp28, tmp6);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(byte_d2, carryQ.get_carry_in(1), byte_d2_adv));
        tmp29 = simd_and(byte_d2_adv, byte_82);
        struct_So.cc = simd_or(struct_So.cc, tmp29);
        tmp30 = simd_andc(tmp12, tmp22);
        byte_d8 = simd_and(tmp27, tmp30);
        tmp31 = simd_and(tmp16, basis_bits.bit_6);
        byte_range_8e_8f = simd_and(tmp28, tmp31);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(byte_d8, carryQ.get_carry_in(2), byte_d8_adv));
        tmp32 = simd_and(byte_d8_adv, byte_range_8e_8f);
        struct_So.cc = simd_or(struct_So.cc, tmp32);
        tmp33 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp34 = simd_and(tmp12, tmp33);
        byte_db = simd_and(tmp27, tmp34);
        tmp35 = simd_and(tmp7, tmp26);
        tmp36 = simd_and(tmp35, tmp17);
        tmp37 = simd_and(tmp9, tmp14);
        tmp38 = simd_or(tmp36, tmp37);
        tmp39 = simd_and(tmp21, tmp16);
        tmp40 = simd_not(basis_bits.bit_7);
        tmp41 = simd_or(simd_and(basis_bits.bit_6, tmp40), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
        tmp42 = simd_and(tmp39, tmp41);
        cc_range_6de_6fd_2 = simd_or(tmp38, tmp42);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(byte_db, carryQ.get_carry_in(3), byte_db_adv));
        tmp43 = simd_and(byte_db_adv, cc_range_6de_6fd_2);
        struct_So.cc = simd_or(struct_So.cc, tmp43);
        tmp44 = simd_and(tmp16, tmp33);
        byte_df = simd_and(tmp27, tmp44);
        byte_b6 = simd_and(tmp21, tmp11);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(byte_df, carryQ.get_carry_in(4), byte_df_adv));
        tmp45 = simd_and(byte_df_adv, byte_b6);
        struct_So.cc = simd_or(struct_So.cc, tmp45);
        tmp46 = simd_and(tmp1, tmp8);
        byte_e0 = simd_andc(tmp46, tmp23);
        tmp47 = simd_and(tmp10, tmp33);
        byte_a7 = simd_and(tmp9, tmp47);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(byte_e0, carryQ.get_carry_in(5), tmp48));
        sequence_e0_a7 = simd_and(tmp48, byte_a7);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(byte_e0, carryQ.get_carry_in(6), byte_e0_adv));
        tmp49 = simd_and(tmp12, tmp5);
        byte_ba = simd_and(tmp21, tmp49);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(sequence_e0_a7, carryQ.get_carry_in(7), sequence_e0_a7_adv));
        tmp50 = simd_and(sequence_e0_a7_adv, byte_ba);
        struct_So.cc = simd_or(struct_So.cc, tmp50);
        tmp51 = simd_and(tmp16, tmp13);
        byte_ad = simd_and(tmp9, tmp51);
        sequence_e0_ad = simd_and(byte_e0_adv, byte_ad);
        byte_b0 = simd_andc(tmp21, tmp23);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(sequence_e0_ad, carryQ.get_carry_in(8), sequence_e0_ad_adv));
        tmp52 = simd_and(sequence_e0_ad_adv, byte_b0);
        struct_So.cc = simd_or(struct_So.cc, tmp52);
        byte_af = simd_and(tmp9, tmp44);
        sequence_e0_af = simd_and(byte_e0_adv, byte_af);
        tmp53 = simd_or(basis_bits.bit_5, tmp22);
        tmp54 = simd_not(tmp53);
        tmp55 = simd_or(basis_bits.bit_5, tmp33);
        tmp56 = simd_or(simd_and(basis_bits.bit_4, tmp54), simd_andc(tmp55, basis_bits.bit_4));
        tmp57 = simd_or(tmp56, tmp49);
        cc_range_bf3_bfa_3 = simd_and(tmp21, tmp57);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(sequence_e0_af, carryQ.get_carry_in(9), sequence_e0_af_adv));
        tmp58 = simd_and(sequence_e0_af_adv, cc_range_bf3_bfa_3);
        struct_So.cc = simd_or(struct_So.cc, tmp58);
        tmp59 = simd_andc(tmp13, tmp4);
        byte_b1 = simd_and(tmp21, tmp59);
        sequence_e0_b1 = simd_and(byte_e0_adv, byte_b1);
        byte_bf = simd_and(tmp21, tmp44);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(sequence_e0_b1, carryQ.get_carry_in(10), sequence_e0_b1_adv));
        tmp60 = simd_and(sequence_e0_b1_adv, byte_bf);
        struct_So.cc = simd_or(struct_So.cc, tmp60);
        tmp61 = simd_and(tmp10, tmp13);
        byte_b5 = simd_and(tmp21, tmp61);
        sequence_e0_b5 = simd_and(byte_e0_adv, byte_b5);
        byte_b9 = simd_and(tmp21, tmp14);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(sequence_e0_b5, carryQ.get_carry_in(11), sequence_e0_b5_adv));
        tmp62 = simd_and(sequence_e0_b5_adv, byte_b9);
        struct_So.cc = simd_or(struct_So.cc, tmp62);
        tmp63 = simd_andc(tmp16, tmp22);
        byte_bc = simd_and(tmp21, tmp63);
        sequence_e0_bc = simd_and(byte_e0_adv, byte_bc);
        tmp64 = simd_andc(tmp28, tmp4);
        tmp65 = simd_and(tmp64, tmp22);
        tmp66 = simd_andc(tmp33, tmp4);
        tmp67 = simd_and(tmp35, tmp66);
        tmp68 = simd_or(tmp65, tmp67);
        tmp69 = simd_and(tmp35, tmp10);
        tmp70 = simd_and(tmp69, tmp22);
        tmp71 = simd_or(tmp68, tmp70);
        tmp72 = simd_and(tmp35, basis_bits.bit_4);
        tmp73 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
        tmp74 = simd_and(tmp72, tmp73);
        tmp75 = simd_or(tmp71, tmp74);
        tmp76 = simd_andc(tmp10, tmp22);
        tmp77 = simd_and(tmp21, tmp76);
        tmp78 = simd_or(tmp75, tmp77);
        tmp79 = simd_or(tmp78, byte_b6);
        tmp80 = simd_and(tmp21, tmp30);
        cc_range_f01_f38_3 = simd_or(tmp79, tmp80);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(sequence_e0_bc, carryQ.get_carry_in(12), sequence_e0_bc_adv));
        tmp81 = simd_and(sequence_e0_bc_adv, cc_range_f01_f38_3);
        struct_So.cc = simd_or(struct_So.cc, tmp81);
        byte_be = simd_and(tmp21, tmp17);
        sequence_e0_be = simd_and(byte_e0_adv, byte_be);
        byte_range_be_bf = simd_and(tmp21, tmp31);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(sequence_e0_be, carryQ.get_carry_in(13), sequence_e0_be_adv));
        tmp82 = simd_and(sequence_e0_be_adv, byte_range_be_bf);
        struct_So.cc = simd_or(struct_So.cc, tmp82);
        sequence_e0_bf = simd_and(byte_e0_adv, byte_bf);
        tmp83 = simd_andc(tmp28, basis_bits.bit_4);
        tmp84 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp85 = simd_andc(tmp83, tmp84);
        tmp86 = simd_and(basis_bits.bit_5, tmp22);
        tmp87 = simd_not(tmp86);
        tmp88 = simd_and(basis_bits.bit_5, tmp33);
        tmp89 = simd_or(simd_and(basis_bits.bit_4, tmp87), simd_andc(tmp88, basis_bits.bit_4));
        tmp90 = simd_and(tmp28, tmp89);
        tmp91 = simd_or(tmp85, tmp90);
        tmp92 = simd_or(tmp91, byte_range_8e_8f);
        tmp93 = simd_or(simd_and(basis_bits.bit_4, tmp54), simd_andc(tmp86, basis_bits.bit_4));
        tmp94 = simd_and(tmp35, tmp93);
        cc_range_fc0_fd5_3 = simd_or(tmp92, tmp94);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(sequence_e0_bf, carryQ.get_carry_in(14), sequence_e0_bf_adv));
        tmp95 = simd_and(sequence_e0_bf_adv, cc_range_fc0_fd5_3);
        struct_So.cc = simd_or(struct_So.cc, tmp95);
        byte_e1 = simd_and(tmp46, tmp59);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(15), tmp96));
        sequence_e1_82 = simd_and(tmp96, byte_82);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(16), byte_e1_adv));
        byte_range_9e_9f = simd_and(tmp35, tmp31);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(sequence_e1_82, carryQ.get_carry_in(17), sequence_e1_82_adv));
        tmp97 = simd_and(sequence_e1_82_adv, byte_range_9e_9f);
        struct_So.cc = simd_or(struct_So.cc, tmp97);
        byte_8e = simd_and(tmp28, tmp17);
        sequence_e1_8e = simd_and(byte_e1_adv, byte_8e);
        tmp98 = simd_and(basis_bits.bit_4, tmp73);
        byte_range_90_99 = simd_andc(tmp35, tmp98);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(sequence_e1_8e, carryQ.get_carry_in(18), sequence_e1_8e_adv));
        tmp99 = simd_and(sequence_e1_8e_adv, byte_range_90_99);
        struct_So.cc = simd_or(struct_So.cc, tmp99);
        byte_a5 = simd_and(tmp9, tmp61);
        sequence_e1_a5 = simd_and(byte_e1_adv, byte_a5);
        byte_80 = simd_andc(tmp28, tmp23);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(sequence_e1_a5, carryQ.get_carry_in(19), sequence_e1_a5_adv));
        tmp100 = simd_and(sequence_e1_a5_adv, byte_80);
        struct_So.cc = simd_or(struct_So.cc, tmp100);
        sequence_e1_a7 = simd_and(byte_e1_adv, byte_a7);
        tmp101 = simd_and(basis_bits.bit_3, tmp31);
        tmp102 = simd_or(basis_bits.bit_2, tmp101);
        byte_range_9e_bf = simd_and(tmp7, tmp102);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(sequence_e1_a7, carryQ.get_carry_in(20), sequence_e1_a7_adv));
        tmp103 = simd_and(sequence_e1_a7_adv, byte_range_9e_bf);
        struct_So.cc = simd_or(struct_So.cc, tmp103);
        sequence_e1_ad = simd_and(byte_e1_adv, byte_ad);
        tmp104 = simd_not(tmp55);
        tmp105 = simd_or(simd_and(basis_bits.bit_4, tmp104), simd_andc(tmp53, basis_bits.bit_4));
        tmp106 = simd_and(tmp9, tmp105);
        tmp107 = simd_or(simd_and(basis_bits.bit_4, tmp87), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
        tmp108 = simd_and(tmp21, tmp107);
        cc_range_1b61_1b74_3 = simd_or(tmp106, tmp108);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(sequence_e1_ad, carryQ.get_carry_in(21), sequence_e1_ad_adv));
        tmp109 = simd_and(sequence_e1_ad_adv, cc_range_1b61_1b74_3);
        struct_So.cc = simd_or(struct_So.cc, tmp109);
        byte_e2 = simd_and(tmp46, tmp6);
        byte_84 = simd_and(tmp28, tmp76);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(22), tmp110));
        sequence_e2_84 = simd_and(tmp110, byte_84);
        carryQ.cq[23] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(23), byte_e2_adv));
        tmp111 = simd_or(tmp4, basis_bits.bit_6);
        tmp112 = simd_andc(tmp28, tmp111);
        tmp113 = simd_not(tmp33);
        tmp114 = simd_or(simd_and(basis_bits.bit_5, tmp113), simd_andc(tmp33, basis_bits.bit_5));
        tmp115 = simd_and(tmp83, tmp114);
        tmp116 = simd_or(tmp112, tmp115);
        tmp117 = simd_andc(tmp12, basis_bits.bit_6);
        tmp118 = simd_and(tmp28, tmp117);
        tmp119 = simd_or(tmp116, tmp118);
        tmp120 = simd_and(tmp35, tmp76);
        tmp121 = simd_or(tmp119, tmp120);
        tmp122 = simd_and(tmp10, basis_bits.bit_6);
        tmp123 = simd_and(tmp35, tmp122);
        tmp124 = simd_or(tmp121, tmp123);
        tmp125 = simd_or(basis_bits.bit_3, tmp4);
        tmp126 = simd_not(tmp125);
        tmp127 = simd_or(simd_and(basis_bits.bit_2, tmp126), simd_andc(tmp101, basis_bits.bit_2));
        tmp128 = simd_and(tmp7, tmp127);
        tmp129 = simd_or(tmp124, tmp128);
        tmp130 = simd_or(tmp129, byte_a5);
        tmp131 = simd_or(tmp130, byte_a7);
        tmp132 = simd_or(tmp131, tmp37);
        tmp133 = simd_and(tmp9, tmp17);
        tmp134 = simd_or(tmp132, tmp133);
        tmp135 = simd_and(tmp12, basis_bits.bit_6);
        tmp136 = simd_and(tmp21, tmp135);
        cc_range_2100_213a_3 = simd_or(tmp134, tmp136);
        carryQ.cq[24] = carryout2carry(pablo_blk_Advance(sequence_e2_84, carryQ.get_carry_in(24), sequence_e2_84_adv));
        tmp137 = simd_and(sequence_e2_84_adv, cc_range_2100_213a_3);
        struct_So.cc = simd_or(struct_So.cc, tmp137);
        byte_85 = simd_and(tmp28, tmp61);
        sequence_e2_85 = simd_and(byte_e2_adv, byte_85);
        tmp138 = simd_andc(tmp16, basis_bits.bit_6);
        tmp139 = simd_or(tmp49, tmp138);
        tmp140 = simd_or(tmp139, tmp44);
        cc_range_214a_214f_3 = simd_and(tmp28, tmp140);
        carryQ.cq[25] = carryout2carry(pablo_blk_Advance(sequence_e2_85, carryQ.get_carry_in(25), sequence_e2_85_adv));
        tmp141 = simd_and(sequence_e2_85_adv, cc_range_214a_214f_3);
        struct_So.cc = simd_or(struct_So.cc, tmp141);
        byte_86 = simd_and(tmp28, tmp11);
        sequence_e2_86 = simd_and(byte_e2_adv, byte_86);
        tmp142 = simd_not(tmp73);
        tmp143 = simd_or(simd_and(basis_bits.bit_4, tmp142), simd_andc(tmp86, basis_bits.bit_4));
        tmp144 = simd_or(tmp143, tmp16);
        tmp145 = simd_and(tmp35, tmp144);
        tmp146 = simd_andc(tmp9, tmp4);
        tmp147 = simd_and(tmp146, tmp41);
        tmp148 = simd_or(tmp145, tmp147);
        tmp149 = simd_andc(tmp10, basis_bits.bit_6);
        tmp150 = simd_and(tmp9, tmp149);
        tmp151 = simd_or(tmp148, tmp150);
        tmp152 = simd_not(tmp84);
        tmp153 = simd_or(simd_and(basis_bits.bit_4, tmp152), simd_andc(tmp88, basis_bits.bit_4));
        tmp154 = simd_and(tmp9, tmp153);
        tmp155 = simd_or(tmp151, tmp154);
        tmp156 = simd_and(tmp7, basis_bits.bit_2);
        tmp157 = simd_or(basis_bits.bit_3, tmp44);
        tmp158 = simd_and(tmp156, tmp157);
        cc_range_2195_21af_3 = simd_or(tmp155, tmp158);
        carryQ.cq[26] = carryout2carry(pablo_blk_Advance(sequence_e2_86, carryQ.get_carry_in(26), sequence_e2_86_adv));
        tmp159 = simd_and(sequence_e2_86_adv, cc_range_2195_21af_3);
        struct_So.cc = simd_or(struct_So.cc, tmp159);
        byte_87 = simd_and(tmp28, tmp47);
        sequence_e2_87 = simd_and(byte_e2_adv, byte_87);
        tmp160 = simd_and(basis_bits.bit_4, tmp84);
        tmp161 = simd_andc(tmp28, tmp160);
        tmp162 = simd_andc(tmp35, tmp111);
        tmp163 = simd_or(tmp161, tmp162);
        tmp164 = simd_or(tmp163, tmp67);
        tmp165 = simd_and(basis_bits.bit_3, tmp4);
        tmp166 = simd_not(tmp165);
        tmp167 = simd_or(basis_bits.bit_4, tmp86);
        tmp168 = simd_and(basis_bits.bit_3, tmp167);
        tmp169 = simd_or(simd_and(basis_bits.bit_2, tmp166), simd_andc(tmp168, basis_bits.bit_2));
        tmp170 = simd_and(tmp7, tmp169);
        cc_range_21c0_21d5_3 = simd_or(tmp164, tmp170);
        carryQ.cq[27] = carryout2carry(pablo_blk_Advance(sequence_e2_87, carryQ.get_carry_in(27), sequence_e2_87_adv));
        tmp171 = simd_and(sequence_e2_87_adv, cc_range_21c0_21d5_3);
        struct_So.cc = simd_or(struct_So.cc, tmp171);
        byte_8c = simd_and(tmp28, tmp63);
        sequence_e2_8c = simd_and(byte_e2_adv, byte_8c);
        tmp172 = simd_andc(tmp7, basis_bits.bit_2);
        tmp173 = simd_or(basis_bits.bit_3, tmp16);
        tmp174 = simd_and(tmp172, tmp173);
        tmp175 = simd_or(tmp83, tmp174);
        tmp176 = simd_or(simd_and(basis_bits.bit_4, tmp54), simd_andc(tmp73, basis_bits.bit_4));
        tmp177 = simd_and(tmp9, tmp176);
        tmp178 = simd_or(tmp175, tmp177);
        tmp179 = simd_and(basis_bits.bit_4, tmp55);
        tmp180 = simd_or(basis_bits.bit_3, tmp179);
        tmp181 = simd_and(tmp156, tmp180);
        cc_range_2300_232b_3 = simd_or(tmp178, tmp181);
        carryQ.cq[28] = carryout2carry(pablo_blk_Advance(sequence_e2_8c, carryQ.get_carry_in(28), sequence_e2_8c_adv));
        tmp182 = simd_and(sequence_e2_8c_adv, cc_range_2300_232b_3);
        struct_So.cc = simd_or(struct_So.cc, tmp182);
        byte_8d = simd_and(tmp28, tmp51);
        sequence_e2_8d = simd_and(byte_e2_adv, byte_8d);
        tmp183 = simd_and(basis_bits.bit_3, tmp16);
        tmp184 = simd_and(basis_bits.bit_2, tmp183);
        tmp185 = simd_andc(tmp7, tmp184);
        tmp186 = simd_and(tmp39, tmp22);
        cc_range_2340_237d_3 = simd_or(tmp185, tmp186);
        carryQ.cq[29] = carryout2carry(pablo_blk_Advance(sequence_e2_8d, carryQ.get_carry_in(29), sequence_e2_8d_adv));
        tmp187 = simd_and(sequence_e2_8d_adv, cc_range_2340_237d_3);
        struct_So.cc = simd_or(struct_So.cc, tmp187);
        sequence_e2_8e = simd_and(byte_e2_adv, byte_8e);
        tmp188 = simd_and(basis_bits.bit_3, tmp179);
        tmp189 = simd_andc(tmp172, tmp188);
        tmp190 = simd_and(tmp21, tmp4);
        cc_range_2380_23b4_3 = simd_or(tmp189, tmp190);
        carryQ.cq[30] = carryout2carry(pablo_blk_Advance(sequence_e2_8e, carryQ.get_carry_in(30), sequence_e2_8e_adv));
        tmp191 = simd_and(sequence_e2_8e_adv, cc_range_2380_23b4_3);
        struct_So.cc = simd_or(struct_So.cc, tmp191);
        byte_8f = simd_and(tmp28, tmp44);
        sequence_e2_8f = simd_and(byte_e2_adv, byte_8f);
        tmp192 = simd_andc(tmp172, tmp183);
        tmp193 = simd_not(tmp4);
        tmp194 = simd_or(simd_and(basis_bits.bit_3, tmp193), simd_andc(tmp111, basis_bits.bit_3));
        tmp195 = simd_and(tmp156, tmp194);
        cc_range_23c0_23e2_3 = simd_or(tmp192, tmp195);
        carryQ.cq[31] = carryout2carry(pablo_blk_Advance(sequence_e2_8f, carryQ.get_carry_in(31), sequence_e2_8f_adv));
        tmp196 = simd_and(sequence_e2_8f_adv, cc_range_23c0_23e2_3);
        struct_So.cc = simd_or(struct_So.cc, tmp196);
        byte_90 = simd_andc(tmp35, tmp23);
        sequence_e2_90 = simd_and(byte_e2_adv, byte_90);
        tmp197 = simd_or(basis_bits.bit_4, tmp88);
        tmp198 = simd_or(basis_bits.bit_3, tmp197);
        tmp199 = simd_and(basis_bits.bit_2, tmp198);
        byte_range_80_a6 = simd_andc(tmp7, tmp199);
        carryQ.cq[32] = carryout2carry(pablo_blk_Advance(sequence_e2_90, carryQ.get_carry_in(32), sequence_e2_90_adv));
        tmp200 = simd_and(sequence_e2_90_adv, byte_range_80_a6);
        struct_So.cc = simd_or(struct_So.cc, tmp200);
        byte_91 = simd_and(tmp35, tmp59);
        sequence_e2_91 = simd_and(byte_e2_adv, byte_91);
        byte_range_80_8a = simd_andc(tmp28, tmp179);
        carryQ.cq[33] = carryout2carry(pablo_blk_Advance(sequence_e2_91, carryQ.get_carry_in(33), sequence_e2_91_adv));
        tmp201 = simd_and(sequence_e2_91_adv, byte_range_80_8a);
        struct_So.cc = simd_or(struct_So.cc, tmp201);
        byte_92 = simd_and(tmp35, tmp6);
        sequence_e2_92 = simd_and(byte_e2_adv, byte_92);
        tmp202 = simd_or(basis_bits.bit_2, tmp183);
        byte_range_9c_bf = simd_and(tmp7, tmp202);
        carryQ.cq[34] = carryout2carry(pablo_blk_Advance(sequence_e2_92, carryQ.get_carry_in(34), sequence_e2_92_adv));
        tmp203 = simd_and(sequence_e2_92_adv, byte_range_9c_bf);
        struct_So.cc = simd_or(struct_So.cc, tmp203);
        byte_93 = simd_and(tmp35, tmp66);
        sequence_e2_93 = simd_and(byte_e2_adv, byte_93);
        tmp204 = simd_or(basis_bits.bit_3, tmp98);
        tmp205 = simd_and(basis_bits.bit_2, tmp204);
        byte_range_80_a9 = simd_andc(tmp7, tmp205);
        carryQ.cq[35] = carryout2carry(pablo_blk_Advance(sequence_e2_93, carryQ.get_carry_in(35), sequence_e2_93_adv));
        tmp206 = simd_and(sequence_e2_93_adv, byte_range_80_a9);
        struct_So.cc = simd_or(struct_So.cc, tmp206);
        byte_range_94_95 = simd_and(tmp35, tmp149);
        byte_e2_byte_range_94_95 = simd_and(byte_e2_adv, byte_range_94_95);
        byte_range_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        carryQ.cq[36] = carryout2carry(pablo_blk_Advance(byte_e2_byte_range_94_95, carryQ.get_carry_in(36), tmp207));
        byte_e2_byte_range_94_95_sfx = simd_and(tmp207, byte_range_80_bf);
        struct_So.cc = simd_or(struct_So.cc, byte_e2_byte_range_94_95_sfx);
        tmp208 = simd_and(byte_range_80_bf, tmp26);
        byte_96 = simd_and(tmp208, tmp11);
        sequence_e2_96 = simd_and(byte_e2_adv, byte_96);
        tmp209 = simd_and(basis_bits.bit_3, tmp197);
        tmp210 = simd_and(basis_bits.bit_2, tmp209);
        byte_range_80_b6 = simd_andc(byte_range_80_bf, tmp210);
        carryQ.cq[37] = carryout2carry(pablo_blk_Advance(sequence_e2_96, carryQ.get_carry_in(37), tmp211));
        sequence_e2_96_byte_range_80_b6 = simd_and(tmp211, byte_range_80_b6);
        struct_So.cc = simd_or(struct_So.cc, sequence_e2_96_byte_range_80_b6);
        byte_97 = simd_and(tmp208, tmp47);
        sequence_e2_97 = simd_and(byte_e2_adv, byte_97);
        tmp212 = simd_andc(byte_range_80_bf, tmp2);
        carryQ.cq[38] = carryout2carry(pablo_blk_Advance(sequence_e2_97, carryQ.get_carry_in(38), tmp213));
        sequence_e2_97_80 = simd_and(tmp213, byte_80);
        byte_98 = simd_and(tmp208, tmp30);
        sequence_e2_98 = simd_and(byte_e2_adv, byte_98);
        carryQ.cq[39] = carryout2carry(pablo_blk_Advance(sequence_e2_98, carryQ.get_carry_in(39), tmp214));
        sequence_e2_98_byte_range_80_bf = simd_and(tmp214, byte_range_80_bf);
        struct_So.cc = simd_or(struct_So.cc, sequence_e2_98_byte_range_80_bf);
        byte_99 = simd_and(tmp208, tmp14);
        sequence_e2_99 = simd_and(byte_e2_adv, byte_99);
        tmp215 = simd_and(basis_bits.bit_2, tmp157);
        byte_range_80_ae = simd_andc(byte_range_80_bf, tmp215);
        carryQ.cq[40] = carryout2carry(pablo_blk_Advance(sequence_e2_99, carryQ.get_carry_in(40), tmp216));
        sequence_e2_99_byte_range_80_ae = simd_and(tmp216, byte_range_80_ae);
        struct_So.cc = simd_or(struct_So.cc, sequence_e2_99_byte_range_80_ae);
        byte_9a = simd_and(tmp208, tmp49);
        sequence_e2_9a = simd_and(byte_e2_adv, byte_9a);
        carryQ.cq[41] = carryout2carry(pablo_blk_Advance(sequence_e2_9a, carryQ.get_carry_in(41), tmp217));
        sequence_e2_9a_byte_range_80_bf = simd_and(tmp217, byte_range_80_bf);
        struct_So.cc = simd_or(struct_So.cc, sequence_e2_9a_byte_range_80_bf);
        byte_9c = simd_and(tmp208, tmp63);
        sequence_e2_9c = simd_and(byte_e2_adv, byte_9c);
        tmp218 = simd_or(basis_bits.bit_3, tmp23);
        tmp219 = simd_or(basis_bits.bit_2, tmp218);
        byte_range_81_bf = simd_and(byte_range_80_bf, tmp219);
        carryQ.cq[42] = carryout2carry(pablo_blk_Advance(sequence_e2_9c, carryQ.get_carry_in(42), tmp220));
        sequence_e2_9c_byte_range_81_bf = simd_and(tmp220, byte_range_81_bf);
        struct_So.cc = simd_or(struct_So.cc, sequence_e2_9c_byte_range_81_bf);
        byte_9d = simd_and(tmp208, tmp51);
        sequence_e2_9d = simd_and(byte_e2_adv, byte_9d);
        tmp221 = simd_or(basis_bits.bit_3, basis_bits.bit_4);
        tmp222 = simd_and(basis_bits.bit_2, tmp221);
        byte_range_80_a7 = simd_andc(byte_range_80_bf, tmp222);
        carryQ.cq[43] = carryout2carry(pablo_blk_Advance(sequence_e2_9d, carryQ.get_carry_in(43), tmp223));
        sequence_e2_9d_byte_range_80_a7 = simd_and(tmp223, byte_range_80_a7);
        struct_So.cc = simd_or(struct_So.cc, sequence_e2_9d_byte_range_80_a7);
        byte_9e = simd_and(tmp208, tmp17);
        sequence_e2_9e = simd_and(byte_e2_adv, byte_9e);
        tmp224 = simd_or(basis_bits.bit_2, tmp165);
        byte_range_94_bf = simd_and(byte_range_80_bf, tmp224);
        carryQ.cq[44] = carryout2carry(pablo_blk_Advance(sequence_e2_9e, carryQ.get_carry_in(44), tmp225));
        sequence_e2_9e_byte_range_94_bf = simd_and(tmp225, byte_range_94_bf);
        struct_So.cc = simd_or(struct_So.cc, sequence_e2_9e_byte_range_94_bf);
        tmp226 = simd_and(byte_range_80_bf, tmp8);
        byte_a0 = simd_andc(tmp226, tmp23);
        sequence_e2_a0 = simd_and(byte_e2_adv, byte_a0);
        carryQ.cq[45] = carryout2carry(pablo_blk_Advance(sequence_e2_a0, carryQ.get_carry_in(45), tmp227));
        sequence_e2_a0_byte_range_80_bf = simd_and(tmp227, byte_range_80_bf);
        struct_So.cc = simd_or(struct_So.cc, sequence_e2_a0_byte_range_80_bf);
        byte_ac = simd_and(tmp226, tmp63);
        sequence_e2_ac = simd_and(byte_e2_adv, byte_ac);
        byte_range_80_af = simd_andc(byte_range_80_bf, tmp20);
        carryQ.cq[46] = carryout2carry(pablo_blk_Advance(sequence_e2_ac, carryQ.get_carry_in(46), tmp228));
        sequence_e2_ac_byte_range_80_af = simd_and(tmp228, byte_range_80_af);
        struct_So.cc = simd_or(struct_So.cc, sequence_e2_ac_byte_range_80_af);
        sequence_e2_ad = simd_and(byte_e2_adv, byte_ad);
        tmp229 = simd_and(tmp212, tmp10);
        byte_range_85_86 = simd_and(tmp229, tmp41);
        carryQ.cq[47] = carryout2carry(pablo_blk_Advance(sequence_e2_ad, carryQ.get_carry_in(47), tmp230));
        sequence_e2_ad_byte_range_85_86 = simd_and(tmp230, byte_range_85_86);
        struct_So.cc = simd_or(struct_So.cc, sequence_e2_ad_byte_range_85_86);
        tmp231 = simd_and(byte_range_80_bf, tmp20);
        byte_b3 = simd_and(tmp231, tmp66);
        sequence_e2_b3 = simd_and(byte_e2_adv, byte_b3);
        tmp232 = simd_or(simd_and(basis_bits.bit_4, tmp104), simd_andc(tmp86, basis_bits.bit_4));
        byte_range_a5_aa = simd_and(tmp226, tmp232);
        carryQ.cq[48] = carryout2carry(pablo_blk_Advance(sequence_e2_b3, carryQ.get_carry_in(48), tmp233));
        sequence_e2_b3_byte_range_a5_aa = simd_and(tmp233, byte_range_a5_aa);
        struct_So.cc = simd_or(struct_So.cc, sequence_e2_b3_byte_range_a5_aa);
        sequence_e2_ba = simd_and(byte_e2_adv, byte_ba);
        tmp234 = simd_andc(byte_range_80_bf, basis_bits.bit_2);
        tmp235 = simd_and(basis_bits.bit_3, tmp98);
        byte_range_80_99 = simd_andc(tmp234, tmp235);
        carryQ.cq[49] = carryout2carry(pablo_blk_Advance(sequence_e2_ba, carryQ.get_carry_in(49), tmp236));
        sequence_e2_ba_byte_range_80_99 = simd_and(tmp236, byte_range_80_99);
        struct_So.cc = simd_or(struct_So.cc, sequence_e2_ba_byte_range_80_99);
        byte_bb = simd_and(tmp231, tmp34);
        sequence_e2_bb = simd_and(byte_e2_adv, byte_bb);
        tmp237 = simd_and(basis_bits.bit_2, tmp165);
        byte_range_80_b3 = simd_andc(byte_range_80_bf, tmp237);
        carryQ.cq[50] = carryout2carry(pablo_blk_Advance(sequence_e2_bb, carryQ.get_carry_in(50), tmp238));
        sequence_e2_bb_byte_range_80_b3 = simd_and(tmp238, byte_range_80_b3);
        struct_So.cc = simd_or(struct_So.cc, sequence_e2_bb_byte_range_80_b3);
        sequence_e2_bc = simd_and(byte_e2_adv, byte_bc);
        carryQ.cq[51] = carryout2carry(pablo_blk_Advance(sequence_e2_bc, carryQ.get_carry_in(51), tmp239));
        sequence_e2_bc_byte_range_80_bf = simd_and(tmp239, byte_range_80_bf);
        struct_So.cc = simd_or(struct_So.cc, sequence_e2_bc_byte_range_80_bf);
        sequence_e2_bf = simd_and(byte_e2_adv, byte_bf);
        tmp240 = simd_or(basis_bits.bit_4, tmp84);
        tmp241 = simd_and(basis_bits.bit_3, tmp240);
        byte_range_80_95 = simd_andc(tmp234, tmp241);
        carryQ.cq[52] = carryout2carry(pablo_blk_Advance(sequence_e2_bf, carryQ.get_carry_in(52), tmp242));
        sequence_e2_bf_byte_range_80_95 = simd_and(tmp242, byte_range_80_95);
        struct_So.cc = simd_or(struct_So.cc, sequence_e2_bf_byte_range_80_95);
        byte_e3 = simd_and(tmp46, tmp66);
        carryQ.cq[53] = carryout2carry(pablo_blk_Advance(byte_e3, carryQ.get_carry_in(53), tmp243));
        sequence_e3_80 = simd_and(tmp243, byte_80);
        carryQ.cq[54] = carryout2carry(pablo_blk_Advance(byte_e3, carryQ.get_carry_in(54), byte_e3_adv));
        tmp244 = simd_and(tmp212, tmp76);
        tmp245 = simd_andc(basis_bits.bit_6, tmp4);
        tmp246 = simd_and(tmp208, tmp245);
        tmp247 = simd_or(tmp244, tmp246);
        tmp248 = simd_or(tmp247, byte_a0);
        tmp249 = simd_and(tmp231, tmp122);
        tmp250 = simd_or(tmp248, tmp249);
        tmp251 = simd_and(tmp231, tmp31);
        cc_range_3004_303e_3 = simd_or(tmp250, tmp251);
        carryQ.cq[55] = carryout2carry(pablo_blk_Advance(sequence_e3_80, carryQ.get_carry_in(55), sequence_e3_80_adv));
        tmp252 = simd_and(sequence_e3_80_adv, cc_range_3004_303e_3);
        struct_So.cc = simd_or(struct_So.cc, tmp252);
        sequence_e3_86 = simd_and(byte_e3_adv, byte_86);
        tmp253 = simd_andc(tmp111, tmp240);
        cc_range_3190_3196_3 = simd_andc(tmp208, tmp253);
        carryQ.cq[56] = carryout2carry(pablo_blk_Advance(sequence_e3_86, carryQ.get_carry_in(56), sequence_e3_86_adv));
        tmp254 = simd_and(sequence_e3_86_adv, cc_range_3190_3196_3);
        struct_So.cc = simd_or(struct_So.cc, tmp254);
        sequence_e3_87 = simd_and(byte_e3_adv, byte_87);
        tmp255 = simd_and(basis_bits.bit_2, tmp125);
        byte_range_80_a3 = simd_andc(byte_range_80_bf, tmp255);
        carryQ.cq[57] = carryout2carry(pablo_blk_Advance(sequence_e3_87, carryQ.get_carry_in(57), sequence_e3_87_adv));
        tmp256 = simd_and(sequence_e3_87_adv, byte_range_80_a3);
        struct_So.cc = simd_or(struct_So.cc, tmp256);
        byte_88 = simd_and(tmp212, tmp30);
        sequence_e3_88 = simd_and(byte_e3_adv, byte_88);
        tmp257 = simd_and(basis_bits.bit_3, tmp44);
        tmp258 = simd_andc(tmp234, tmp257);
        tmp259 = simd_and(byte_range_80_bf, basis_bits.bit_2);
        tmp260 = simd_and(tmp259, tmp204);
        cc_range_3200_322a_3 = simd_or(tmp258, tmp260);
        carryQ.cq[58] = carryout2carry(pablo_blk_Advance(sequence_e3_88, carryQ.get_carry_in(58), sequence_e3_88_adv));
        tmp261 = simd_and(sequence_e3_88_adv, cc_range_3200_322a_3);
        struct_So.cc = simd_or(struct_So.cc, tmp261);
        byte_89 = simd_and(tmp212, tmp14);
        sequence_e3_89 = simd_and(byte_e3_adv, byte_89);
        tmp262 = simd_andc(tmp212, basis_bits.bit_4);
        tmp263 = simd_andc(tmp208, tmp23);
        tmp264 = simd_or(tmp262, tmp263);
        cc_range_3240_3260_3 = simd_or(tmp264, tmp259);
        carryQ.cq[59] = carryout2carry(pablo_blk_Advance(sequence_e3_89, carryQ.get_carry_in(59), sequence_e3_89_adv));
        tmp265 = simd_and(sequence_e3_89_adv, cc_range_3240_3260_3);
        struct_So.cc = simd_or(struct_So.cc, tmp265);
        byte_8a = simd_and(tmp212, tmp49);
        sequence_e3_8a = simd_and(byte_e3_adv, byte_8a);
        tmp266 = simd_and(basis_bits.bit_3, tmp23);
        tmp267 = simd_not(tmp266);
        tmp268 = simd_or(simd_and(basis_bits.bit_2, tmp267), simd_andc(tmp204, basis_bits.bit_2));
        byte_range_8a_b0 = simd_and(byte_range_80_bf, tmp268);
        carryQ.cq[60] = carryout2carry(pablo_blk_Advance(sequence_e3_8a, carryQ.get_carry_in(60), sequence_e3_8a_adv));
        tmp269 = simd_and(sequence_e3_8a_adv, byte_range_8a_b0);
        struct_So.cc = simd_or(struct_So.cc, tmp269);
        byte_8b = simd_and(tmp212, tmp34);
        sequence_e3_8b = simd_and(byte_e3_adv, byte_8b);
        tmp270 = simd_and(basis_bits.bit_2, tmp257);
        byte_range_80_be = simd_andc(byte_range_80_bf, tmp270);
        carryQ.cq[61] = carryout2carry(pablo_blk_Advance(sequence_e3_8b, carryQ.get_carry_in(61), sequence_e3_8b_adv));
        tmp271 = simd_and(sequence_e3_8b_adv, byte_range_80_be);
        struct_So.cc = simd_or(struct_So.cc, tmp271);
        byte_range_8c_8f = simd_and(tmp212, tmp16);
        byte_e3_byte_range_8c_8f = simd_and(byte_e3_adv, byte_range_8c_8f);
        carryQ.cq[62] = carryout2carry(pablo_blk_Advance(byte_e3_byte_range_8c_8f, carryQ.get_carry_in(62), tmp272));
        byte_e3_byte_range_8c_8f_sfx = simd_and(tmp272, byte_range_80_bf);
        struct_So.cc = simd_or(struct_So.cc, byte_e3_byte_range_8c_8f_sfx);
        byte_e4 = simd_and(tmp46, tmp76);
        byte_b7 = simd_and(tmp231, tmp47);
        carryQ.cq[63] = carryout2carry(pablo_blk_Advance(byte_e4, carryQ.get_carry_in(63), tmp273));
        sequence_e4_b7 = simd_and(tmp273, byte_b7);
        carryQ.cq[64] = carryout2carry(pablo_blk_Advance(byte_e4, carryQ.get_carry_in(64), byte_e4_adv));
        carryQ.cq[65] = carryout2carry(pablo_blk_Advance(sequence_e4_b7, carryQ.get_carry_in(65), sequence_e4_b7_adv));
        tmp274 = simd_and(sequence_e4_b7_adv, byte_range_80_bf);
        struct_So.cc = simd_or(struct_So.cc, tmp274);
        byte_ea = simd_and(tmp46, tmp49);
        carryQ.cq[66] = carryout2carry(pablo_blk_Advance(byte_ea, carryQ.get_carry_in(66), tmp275));
        sequence_ea_92 = simd_and(tmp275, byte_92);
        carryQ.cq[67] = carryout2carry(pablo_blk_Advance(byte_ea, carryQ.get_carry_in(67), byte_ea_adv));
        byte_range_90_bf = simd_and(byte_range_80_bf, tmp2);
        carryQ.cq[68] = carryout2carry(pablo_blk_Advance(sequence_ea_92, carryQ.get_carry_in(68), sequence_ea_92_adv));
        tmp276 = simd_and(sequence_ea_92_adv, byte_range_90_bf);
        struct_So.cc = simd_or(struct_So.cc, tmp276);
        sequence_ea_93 = simd_and(byte_ea_adv, byte_93);
        byte_range_80_86 = simd_andc(tmp262, tmp88);
        carryQ.cq[69] = carryout2carry(pablo_blk_Advance(sequence_ea_93, carryQ.get_carry_in(69), sequence_ea_93_adv));
        tmp277 = simd_and(sequence_ea_93_adv, byte_range_80_86);
        struct_So.cc = simd_or(struct_So.cc, tmp277);
        sequence_ea_a0 = simd_and(byte_ea_adv, byte_a0);
        tmp278 = simd_and(tmp226, tmp12);
        tmp279 = simd_or(tmp278, tmp249);
        tmp280 = simd_and(tmp231, tmp14);
        cc_range_a828_a839_3 = simd_or(tmp279, tmp280);
        carryQ.cq[70] = carryout2carry(pablo_blk_Advance(sequence_ea_a0, carryQ.get_carry_in(70), sequence_ea_a0_adv));
        tmp281 = simd_and(sequence_ea_a0_adv, cc_range_a828_a839_3);
        struct_So.cc = simd_or(struct_So.cc, tmp281);
        byte_a9 = simd_and(tmp226, tmp14);
        sequence_ea_a9 = simd_and(byte_ea_adv, byte_a9);
        tmp282 = simd_or(simd_and(basis_bits.bit_4, tmp142), simd_andc(tmp88, basis_bits.bit_4));
        byte_range_b7_b9 = simd_and(tmp231, tmp282);
        carryQ.cq[71] = carryout2carry(pablo_blk_Advance(sequence_ea_a9, carryQ.get_carry_in(71), sequence_ea_a9_adv));
        tmp283 = simd_and(sequence_ea_a9_adv, byte_range_b7_b9);
        struct_So.cc = simd_or(struct_So.cc, tmp283);
        byte_ef = simd_and(tmp46, tmp44);
        carryQ.cq[72] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(72), tmp284));
        sequence_ef_b7 = simd_and(tmp284, byte_b7);
        carryQ.cq[73] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(73), byte_ef_adv));
        byte_bd = simd_and(tmp231, tmp51);
        carryQ.cq[74] = carryout2carry(pablo_blk_Advance(sequence_ef_b7, carryQ.get_carry_in(74), sequence_ef_b7_adv));
        tmp285 = simd_and(sequence_ef_b7_adv, byte_bd);
        struct_So.cc = simd_or(struct_So.cc, tmp285);
        sequence_ef_bf = simd_and(byte_ef_adv, byte_bf);
        tmp286 = simd_or(tmp10, tmp12);
        tmp287 = simd_andc(tmp286, tmp22);
        tmp288 = simd_and(tmp226, tmp287);
        tmp289 = simd_and(tmp226, tmp16);
        tmp290 = simd_and(tmp289, tmp41);
        tmp291 = simd_or(tmp288, tmp290);
        tmp292 = simd_and(tmp231, tmp138);
        cc_range_ffe4_fffc_3 = simd_or(tmp291, tmp292);
        carryQ.cq[75] = carryout2carry(pablo_blk_Advance(sequence_ef_bf, carryQ.get_carry_in(75), sequence_ef_bf_adv));
        tmp293 = simd_and(sequence_ef_bf_adv, cc_range_ffe4_fffc_3);
        struct_So.cc = simd_or(struct_So.cc, tmp293);
        tmp294 = simd_and(tmp1, tmp20);
        byte_f0 = simd_andc(tmp294, tmp23);
        carryQ.cq[76] = carryout2carry(pablo_blk_Advance(byte_f0, carryQ.get_carry_in(76), tmp295));
        sequence_f0_90 = simd_and(tmp295, byte_90);
        carryQ.cq[77] = carryout2carry(pablo_blk_Advance(byte_f0, carryQ.get_carry_in(77), byte_f0_adv));
        carryQ.cq[78] = carryout2carry(pablo_blk_Advance(sequence_f0_90, carryQ.get_carry_in(78), tmp296));
        sequence_f0_90_84 = simd_and(tmp296, byte_84);
        carryQ.cq[79] = carryout2carry(pablo_blk_Advance(sequence_f0_90, carryQ.get_carry_in(79), sequence_f0_90_adv));
        byte_range_b7_bf = simd_and(tmp231, tmp197);
        carryQ.cq[80] = carryout2carry(pablo_blk_Advance(sequence_f0_90_84, carryQ.get_carry_in(80), sequence_f0_90_84_adv));
        tmp297 = simd_and(sequence_f0_90_84_adv, byte_range_b7_bf);
        struct_So.cc = simd_or(struct_So.cc, tmp297);
        sequence_f0_90_85 = simd_and(sequence_f0_90_adv, byte_85);
        tmp298 = simd_and(tmp231, basis_bits.bit_4);
        byte_range_b9_bf = simd_and(tmp298, tmp53);
        carryQ.cq[81] = carryout2carry(pablo_blk_Advance(sequence_f0_90_85, carryQ.get_carry_in(81), sequence_f0_90_85_adv));
        tmp299 = simd_and(sequence_f0_90_85_adv, byte_range_b9_bf);
        struct_So.cc = simd_or(struct_So.cc, tmp299);
        sequence_f0_90_86 = simd_and(sequence_f0_90_adv, byte_86);
        tmp300 = simd_andc(tmp212, tmp98);
        tmp301 = simd_andc(tmp208, tmp16);
        cc_range_10180_10190_4 = simd_or(tmp300, tmp301);
        carryQ.cq[82] = carryout2carry(pablo_blk_Advance(sequence_f0_90_86, carryQ.get_carry_in(82), sequence_f0_90_86_adv));
        tmp302 = simd_and(sequence_f0_90_86_adv, cc_range_10180_10190_4);
        struct_So.cc = simd_or(struct_So.cc, tmp302);
        sequence_f0_90_87 = simd_and(sequence_f0_90_adv, byte_87);
        tmp303 = simd_and(tmp16, tmp22);
        tmp304 = simd_and(basis_bits.bit_3, tmp303);
        tmp305 = simd_not(tmp304);
        tmp306 = simd_or(simd_and(basis_bits.bit_2, tmp305), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
        byte_range_90_bc = simd_and(byte_range_80_bf, tmp306);
        carryQ.cq[83] = carryout2carry(pablo_blk_Advance(sequence_f0_90_87, carryQ.get_carry_in(83), sequence_f0_90_87_adv));
        tmp307 = simd_and(sequence_f0_90_87_adv, byte_range_90_bc);
        struct_So.cc = simd_or(struct_So.cc, tmp307);
        sequence_f0_9d = simd_and(byte_f0_adv, byte_9d);
        tmp308 = simd_andc(tmp212, tmp4);
        byte_range_80_82 = simd_andc(tmp308, tmp33);
        carryQ.cq[84] = carryout2carry(pablo_blk_Advance(sequence_f0_9d, carryQ.get_carry_in(84), tmp309));
        sequence_f0_9d_byte_range_80_82 = simd_and(tmp309, byte_range_80_82);
        carryQ.cq[85] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_byte_range_80_82, carryQ.get_carry_in(85), tmp310));
        sequence_f0_9d_byte_range_80_82_sfx = simd_and(tmp310, byte_range_80_bf);
        struct_So.cc = simd_or(struct_So.cc, sequence_f0_9d_byte_range_80_82_sfx);
        byte_83 = simd_and(tmp212, tmp66);
        carryQ.cq[86] = carryout2carry(pablo_blk_Advance(sequence_f0_9d, carryQ.get_carry_in(86), sequence_f0_9d_adv));
        sequence_f0_9d_83 = simd_and(sequence_f0_9d_adv, byte_83);
        tmp311 = simd_and(basis_bits.bit_2, tmp241);
        byte_range_80_b5 = simd_andc(byte_range_80_bf, tmp311);
        carryQ.cq[87] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_83, carryQ.get_carry_in(87), tmp312));
        sequence_f0_9d_83_byte_range_80_b5 = simd_and(tmp312, byte_range_80_b5);
        struct_So.cc = simd_or(struct_So.cc, sequence_f0_9d_83_byte_range_80_b5);
        sequence_f0_9d_84 = simd_and(sequence_f0_9d_adv, byte_84);
        carryQ.cq[88] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_84, carryQ.get_carry_in(88), tmp313));
        sequence_f0_9d_84_byte_range_80_a6 = simd_and(tmp313, byte_range_80_a6);
        struct_So.cc = simd_or(struct_So.cc, sequence_f0_9d_84_byte_range_80_a6);
        sequence_f0_9d_85 = simd_and(sequence_f0_9d_adv, byte_85);
        tmp314 = simd_or(basis_bits.bit_3, tmp167);
        tmp315 = simd_and(basis_bits.bit_2, tmp314);
        byte_range_80_a4 = simd_andc(byte_range_80_bf, tmp315);
        carryQ.cq[89] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_85, carryQ.get_carry_in(89), tmp316));
        sequence_f0_9d_85_byte_range_80_a4 = simd_and(tmp316, byte_range_80_a4);
        struct_So.cc = simd_or(struct_So.cc, sequence_f0_9d_85_byte_range_80_a4);
        sequence_f0_9d_86 = simd_and(sequence_f0_9d_adv, byte_86);
        tmp317 = simd_not(tmp22);
        tmp318 = simd_or(simd_and(basis_bits.bit_5, tmp317), simd_andc(tmp33, basis_bits.bit_5));
        byte_range_83_84 = simd_and(tmp262, tmp318);
        carryQ.cq[90] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_86, carryQ.get_carry_in(90), tmp319));
        sequence_f0_9d_86_byte_range_83_84 = simd_and(tmp319, byte_range_83_84);
        struct_So.cc = simd_or(struct_So.cc, sequence_f0_9d_86_byte_range_83_84);
        sequence_f0_9d_87 = simd_and(sequence_f0_9d_adv, byte_87);
        byte_range_80_9d = simd_andc(tmp234, tmp101);
        carryQ.cq[91] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_87, carryQ.get_carry_in(91), tmp320));
        sequence_f0_9d_87_byte_range_80_9d = simd_and(tmp320, byte_range_80_9d);
        struct_So.cc = simd_or(struct_So.cc, sequence_f0_9d_87_byte_range_80_9d);
        sequence_f0_9d_88 = simd_and(sequence_f0_9d_adv, byte_88);
        carryQ.cq[92] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_88, carryQ.get_carry_in(92), tmp321));
        sequence_f0_9d_88_byte_range_80_bf = simd_and(tmp321, byte_range_80_bf);
        struct_So.cc = simd_or(struct_So.cc, sequence_f0_9d_88_byte_range_80_bf);
        sequence_f0_9d_89 = simd_and(sequence_f0_9d_adv, byte_89);
        byte_range_80_81 = simd_andc(tmp212, tmp111);
        carryQ.cq[93] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_89, carryQ.get_carry_in(93), tmp322));
        sequence_f0_9d_89_byte_range_80_81 = simd_and(tmp322, byte_range_80_81);
        struct_So.cc = simd_or(struct_So.cc, sequence_f0_9d_89_byte_range_80_81);
        sequence_f0_9d_8c = simd_and(sequence_f0_9d_adv, byte_8c);
        carryQ.cq[94] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_8c, carryQ.get_carry_in(94), tmp323));
        sequence_f0_9d_8c_byte_range_80_bf = simd_and(tmp323, byte_range_80_bf);
        struct_So.cc = simd_or(struct_So.cc, sequence_f0_9d_8c_byte_range_80_bf);
        sequence_f0_9d_8d = simd_and(sequence_f0_9d_adv, byte_8d);
        byte_range_80_96 = simd_andc(tmp234, tmp209);
        carryQ.cq[95] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_8d, carryQ.get_carry_in(95), tmp324));
        sequence_f0_9d_8d_byte_range_80_96 = simd_and(tmp324, byte_range_80_96);
        struct_So.cc = simd_or(struct_So.cc, sequence_f0_9d_8d_byte_range_80_96);
        byte_9f = simd_and(tmp208, tmp44);
        sequence_f0_9f = simd_and(byte_f0_adv, byte_9f);
        carryQ.cq[96] = carryout2carry(pablo_blk_Advance(sequence_f0_9f, carryQ.get_carry_in(96), tmp325));
        sequence_f0_9f_80 = simd_and(tmp325, byte_80);
        carryQ.cq[97] = carryout2carry(pablo_blk_Advance(sequence_f0_9f, carryQ.get_carry_in(97), sequence_f0_9f_adv));
        tmp326 = simd_and(basis_bits.bit_2, tmp173);
        tmp327 = simd_andc(tmp326, tmp20);
        cc_range_1f000_1f030_4 = simd_andc(byte_range_80_bf, tmp327);
        carryQ.cq[98] = carryout2carry(pablo_blk_Advance(sequence_f0_9f_80, carryQ.get_carry_in(98), sequence_f0_9f_80_adv));
        tmp328 = simd_and(sequence_f0_9f_80_adv, cc_range_1f000_1f030_4);
        struct_So.cc = simd_or(struct_So.cc, tmp328);
        byte_81 = simd_and(tmp212, tmp59);
        sequence_f0_9f_81 = simd_and(sequence_f0_9f_adv, byte_81);
        carryQ.cq[99] = carryout2carry(pablo_blk_Advance(sequence_f0_9f_81, carryQ.get_carry_in(99), sequence_f0_9f_81_adv));
        tmp329 = simd_and(sequence_f0_9f_81_adv, byte_range_80_bf);
        struct_So.cc = simd_or(struct_So.cc, tmp329);
        sequence_f0_9f_82 = simd_and(sequence_f0_9f_adv, byte_82);
        tmp330 = simd_andc(tmp234, tmp165);
        tmp331 = simd_and(basis_bits.bit_4, tmp88);
        tmp332 = simd_andc(tmp226, tmp331);
        tmp333 = simd_or(tmp330, tmp332);
        tmp334 = simd_not(tmp88);
        tmp335 = simd_or(simd_and(basis_bits.bit_4, tmp334), simd_andc(tmp53, basis_bits.bit_4));
        tmp336 = simd_and(tmp231, tmp335);
        cc_range_1f080_1f0b1_4 = simd_or(tmp333, tmp336);
        carryQ.cq[100] = carryout2carry(pablo_blk_Advance(sequence_f0_9f_82, carryQ.get_carry_in(100), sequence_f0_9f_82_adv));
        tmp337 = simd_and(sequence_f0_9f_82_adv, cc_range_1f080_1f0b1_4);
        struct_So.cc = simd_or(struct_So.cc, tmp337);
        sequence_f0_9f_83 = simd_and(sequence_f0_9f_adv, byte_83);
        tmp338 = simd_or(basis_bits.bit_4, tmp53);
        tmp339 = simd_andc(tmp2, tmp26);
        tmp340 = simd_andc(byte_range_80_bf, tmp339);
        cc_range_1f0c1_1f0d1_4 = simd_and(tmp338, tmp340);
        carryQ.cq[101] = carryout2carry(pablo_blk_Advance(sequence_f0_9f_83, carryQ.get_carry_in(101), sequence_f0_9f_83_adv));
        tmp341 = simd_and(sequence_f0_9f_83_adv, cc_range_1f0c1_1f0d1_4);
        struct_So.cc = simd_or(struct_So.cc, tmp341);
        sequence_f0_9f_84 = simd_and(sequence_f0_9f_adv, byte_84);
        tmp342 = simd_not(tmp157);
        tmp343 = simd_or(simd_and(basis_bits.bit_2, tmp342), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
        tmp344 = simd_or(tmp343, tmp20);
        cc_range_1f110_1f130_4 = simd_and(byte_range_80_bf, tmp344);
        carryQ.cq[102] = carryout2carry(pablo_blk_Advance(sequence_f0_9f_84, carryQ.get_carry_in(102), sequence_f0_9f_84_adv));
        tmp345 = simd_and(sequence_f0_9f_84_adv, cc_range_1f110_1f130_4);
        struct_So.cc = simd_or(struct_So.cc, tmp345);
        sequence_f0_9f_85 = simd_and(sequence_f0_9f_adv, byte_85);
        cc_range_1f140_1f170_4 = simd_andc(byte_range_80_bf, tmp327);
        carryQ.cq[103] = carryout2carry(pablo_blk_Advance(sequence_f0_9f_85, carryQ.get_carry_in(103), sequence_f0_9f_85_adv));
        tmp346 = simd_and(sequence_f0_9f_85_adv, cc_range_1f140_1f170_4);
        struct_So.cc = simd_or(struct_So.cc, tmp346);
        sequence_f0_9f_86 = simd_and(sequence_f0_9f_adv, byte_86);
        byte_range_80_9a = simd_andc(tmp234, tmp188);
        carryQ.cq[104] = carryout2carry(pablo_blk_Advance(sequence_f0_9f_86, carryQ.get_carry_in(104), sequence_f0_9f_86_adv));
        tmp347 = simd_and(sequence_f0_9f_86_adv, byte_range_80_9a);
        struct_So.cc = simd_or(struct_So.cc, tmp347);
        sequence_f0_9f_87 = simd_and(sequence_f0_9f_adv, byte_87);
        tmp348 = simd_or(basis_bits.bit_3, tmp240);
        byte_range_a6_bf = simd_and(tmp259, tmp348);
        carryQ.cq[105] = carryout2carry(pablo_blk_Advance(sequence_f0_9f_87, carryQ.get_carry_in(105), sequence_f0_9f_87_adv));
        tmp349 = simd_and(sequence_f0_9f_87_adv, byte_range_a6_bf);
        struct_So.cc = simd_or(struct_So.cc, tmp349);
        sequence_f0_9f_88 = simd_and(sequence_f0_9f_adv, byte_88);
        tmp350 = simd_not(tmp188);
        tmp351 = simd_or(simd_and(basis_bits.bit_2, tmp350), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
        tmp352 = simd_and(byte_range_80_bf, tmp351);
        cc_range_1f200_1f210_4 = simd_or(byte_range_80_82, tmp352);
        carryQ.cq[106] = carryout2carry(pablo_blk_Advance(sequence_f0_9f_88, carryQ.get_carry_in(106), sequence_f0_9f_88_adv));
        tmp353 = simd_and(sequence_f0_9f_88_adv, cc_range_1f200_1f210_4);
        struct_So.cc = simd_or(struct_So.cc, tmp353);
        sequence_f0_9f_89 = simd_and(sequence_f0_9f_adv, byte_89);
        tmp354 = simd_and(basis_bits.bit_4, tmp53);
        tmp355 = simd_andc(tmp212, tmp354);
        tmp356 = simd_andc(tmp208, tmp111);
        cc_range_1f240_1f250_4 = simd_or(tmp355, tmp356);
        carryQ.cq[107] = carryout2carry(pablo_blk_Advance(sequence_f0_9f_89, carryQ.get_carry_in(107), sequence_f0_9f_89_adv));
        tmp357 = simd_and(sequence_f0_9f_89_adv, cc_range_1f240_1f250_4);
        struct_So.cc = simd_or(struct_So.cc, tmp357);
        sequence_f0_9f_8c = simd_and(sequence_f0_9f_adv, byte_8c);
        tmp358 = simd_and(basis_bits.bit_2, tmp218);
        tmp359 = simd_andc(byte_range_80_bf, tmp358);
        tmp360 = simd_andc(tmp231, basis_bits.bit_4);
        tmp361 = simd_andc(tmp360, tmp84);
        tmp362 = simd_or(tmp359, tmp361);
        cc_range_1f300_1f337_4 = simd_or(tmp362, byte_range_b7_bf);
        carryQ.cq[108] = carryout2carry(pablo_blk_Advance(sequence_f0_9f_8c, carryQ.get_carry_in(108), sequence_f0_9f_8c_adv));
        tmp363 = simd_and(sequence_f0_9f_8c_adv, cc_range_1f300_1f337_4);
        struct_So.cc = simd_or(struct_So.cc, tmp363);
        sequence_f0_9f_8d = simd_and(sequence_f0_9f_adv, byte_8d);
        tmp364 = simd_and(basis_bits.bit_2, tmp304);
        byte_range_80_bc = simd_andc(byte_range_80_bf, tmp364);
        carryQ.cq[109] = carryout2carry(pablo_blk_Advance(sequence_f0_9f_8d, carryQ.get_carry_in(109), sequence_f0_9f_8d_adv));
        tmp365 = simd_and(sequence_f0_9f_8d_adv, byte_range_80_bc);
        struct_So.cc = simd_or(struct_So.cc, tmp365);
        sequence_f0_9f_8e = simd_and(sequence_f0_9f_adv, byte_8e);
        cc_range_1f380_1f3a0_4 = simd_or(tmp330, tmp259);
        carryQ.cq[110] = carryout2carry(pablo_blk_Advance(sequence_f0_9f_8e, carryQ.get_carry_in(110), sequence_f0_9f_8e_adv));
        tmp366 = simd_and(sequence_f0_9f_8e_adv, cc_range_1f380_1f3a0_4);
        struct_So.cc = simd_or(struct_So.cc, tmp366);
        sequence_f0_9f_8f = simd_and(sequence_f0_9f_adv, byte_8f);
        tmp367 = simd_andc(tmp262, tmp86);
        tmp368 = simd_or(simd_and(basis_bits.bit_4, tmp104), simd_andc(tmp84, basis_bits.bit_4));
        tmp369 = simd_and(tmp212, tmp368);
        tmp370 = simd_or(tmp367, tmp369);
        tmp371 = simd_andc(tmp259, tmp266);
        cc_range_1f3c0_1f3e0_4 = simd_or(tmp370, tmp371);
        carryQ.cq[111] = carryout2carry(pablo_blk_Advance(sequence_f0_9f_8f, carryQ.get_carry_in(111), sequence_f0_9f_8f_adv));
        tmp372 = simd_and(sequence_f0_9f_8f_adv, cc_range_1f3c0_1f3e0_4);
        struct_So.cc = simd_or(struct_So.cc, tmp372);
        sequence_f0_9f_90 = simd_and(sequence_f0_9f_adv, byte_90);
        carryQ.cq[112] = carryout2carry(pablo_blk_Advance(sequence_f0_9f_90, carryQ.get_carry_in(112), sequence_f0_9f_90_adv));
        tmp373 = simd_and(sequence_f0_9f_90_adv, byte_range_80_be);
        struct_So.cc = simd_or(struct_So.cc, tmp373);
        sequence_f0_9f_91 = simd_and(sequence_f0_9f_adv, byte_91);
        tmp374 = simd_andc(tmp212, tmp23);
        tmp375 = simd_or(basis_bits.bit_3, tmp111);
        tmp376 = simd_or(basis_bits.bit_2, tmp375);
        tmp377 = simd_and(byte_range_80_bf, tmp376);
        cc_range_1f440_1f442_4 = simd_or(tmp374, tmp377);
        carryQ.cq[113] = carryout2carry(pablo_blk_Advance(sequence_f0_9f_91, carryQ.get_carry_in(113), sequence_f0_9f_91_adv));
        tmp378 = simd_and(sequence_f0_9f_91_adv, cc_range_1f440_1f442_4);
        struct_So.cc = simd_or(struct_So.cc, tmp378);
        sequence_f0_9f_92 = simd_and(sequence_f0_9f_adv, byte_92);
        carryQ.cq[114] = carryout2carry(pablo_blk_Advance(sequence_f0_9f_92, carryQ.get_carry_in(114), sequence_f0_9f_92_adv));
        tmp379 = simd_and(sequence_f0_9f_92_adv, byte_range_80_bf);
        struct_So.cc = simd_or(struct_So.cc, tmp379);
        sequence_f0_9f_93 = simd_and(sequence_f0_9f_adv, byte_93);
        tmp380 = simd_and(basis_bits.bit_3, basis_bits.bit_4);
        tmp381 = simd_and(basis_bits.bit_2, tmp380);
        tmp382 = simd_andc(byte_range_80_bf, tmp381);
        tmp383 = simd_or(simd_and(basis_bits.bit_5, tmp317), simd_andc(tmp22, basis_bits.bit_5));
        tmp384 = simd_and(tmp298, tmp383);
        cc_range_1f4c0_1f4f9_4 = simd_or(tmp382, tmp384);
        carryQ.cq[115] = carryout2carry(pablo_blk_Advance(sequence_f0_9f_93, carryQ.get_carry_in(115), sequence_f0_9f_93_adv));
        tmp385 = simd_and(sequence_f0_9f_93_adv, cc_range_1f4c0_1f4f9_4);
        struct_So.cc = simd_or(struct_So.cc, tmp385);
        byte_94 = simd_and(tmp208, tmp76);
        sequence_f0_9f_94 = simd_and(sequence_f0_9f_adv, byte_94);
        tmp386 = simd_and(basis_bits.bit_2, tmp101);
        byte_range_80_bd = simd_andc(byte_range_80_bf, tmp386);
        carryQ.cq[116] = carryout2carry(pablo_blk_Advance(sequence_f0_9f_94, carryQ.get_carry_in(116), sequence_f0_9f_94_adv));
        tmp387 = simd_and(sequence_f0_9f_94_adv, byte_range_80_bd);
        struct_So.cc = simd_or(struct_So.cc, tmp387);
        byte_95 = simd_and(tmp208, tmp61);
        sequence_f0_9f_95 = simd_and(sequence_f0_9f_adv, byte_95);
        tmp388 = simd_not(tmp221);
        tmp389 = simd_or(simd_and(basis_bits.bit_2, tmp388), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
        tmp390 = simd_and(byte_range_80_bf, tmp389);
        cc_range_1f540_1f550_4 = simd_or(tmp308, tmp390);
        carryQ.cq[117] = carryout2carry(pablo_blk_Advance(sequence_f0_9f_95, carryQ.get_carry_in(117), sequence_f0_9f_95_adv));
        tmp391 = simd_and(sequence_f0_9f_95_adv, cc_range_1f540_1f550_4);
        struct_So.cc = simd_or(struct_So.cc, tmp391);
        sequence_f0_9f_97 = simd_and(sequence_f0_9f_adv, byte_97);
        byte_range_bb_bf = simd_and(tmp298, tmp55);
        carryQ.cq[118] = carryout2carry(pablo_blk_Advance(sequence_f0_9f_97, carryQ.get_carry_in(118), sequence_f0_9f_97_adv));
        tmp392 = simd_and(sequence_f0_9f_97_adv, byte_range_bb_bf);
        struct_So.cc = simd_or(struct_So.cc, tmp392);
        sequence_f0_9f_98 = simd_and(sequence_f0_9f_adv, byte_98);
        carryQ.cq[119] = carryout2carry(pablo_blk_Advance(sequence_f0_9f_98, carryQ.get_carry_in(119), sequence_f0_9f_98_adv));
        tmp393 = simd_and(sequence_f0_9f_98_adv, byte_range_80_bf);
        struct_So.cc = simd_or(struct_So.cc, tmp393);
        sequence_f0_9f_99 = simd_and(sequence_f0_9f_adv, byte_99);
        tmp394 = simd_andc(tmp23, tmp167);
        cc_range_1f640_1f645_4 = simd_andc(tmp212, tmp394);
        carryQ.cq[120] = carryout2carry(pablo_blk_Advance(sequence_f0_9f_99, carryQ.get_carry_in(120), sequence_f0_9f_99_adv));
        tmp395 = simd_and(sequence_f0_9f_99_adv, cc_range_1f640_1f645_4);
        struct_So.cc = simd_or(struct_So.cc, tmp395);
        sequence_f0_9f_9a = simd_and(sequence_f0_9f_adv, byte_9a);
        carryQ.cq[121] = carryout2carry(pablo_blk_Advance(sequence_f0_9f_9a, carryQ.get_carry_in(121), sequence_f0_9f_9a_adv));
        tmp396 = simd_and(sequence_f0_9f_9a_adv, byte_range_80_bf);
        struct_So.cc = simd_or(struct_So.cc, tmp396);
        byte_9b = simd_and(tmp208, tmp34);
        sequence_f0_9f_9b = simd_and(sequence_f0_9f_adv, byte_9b);
        byte_range_80_85 = simd_andc(tmp262, tmp84);
        carryQ.cq[122] = carryout2carry(pablo_blk_Advance(sequence_f0_9f_9b, carryQ.get_carry_in(122), sequence_f0_9f_9b_adv));
        tmp397 = simd_and(sequence_f0_9f_9b_adv, byte_range_80_85);
        struct_So.cc = simd_or(struct_So.cc, tmp397);
        sequence_f0_9f_9c = simd_and(sequence_f0_9f_adv, byte_9c);
        carryQ.cq[123] = carryout2carry(pablo_blk_Advance(sequence_f0_9f_9c, carryQ.get_carry_in(123), sequence_f0_9f_9c_adv));
        tmp398 = simd_and(sequence_f0_9f_9c_adv, byte_range_80_bf);
        struct_So.cc = simd_or(struct_So.cc, tmp398);
        sequence_f0_9f_9d = simd_and(sequence_f0_9f_adv, byte_9d);
        carryQ.cq[124] = carryout2carry(pablo_blk_Advance(sequence_f0_9f_9d, carryQ.get_carry_in(124), sequence_f0_9f_9d_adv));
        tmp399 = simd_and(sequence_f0_9f_9d_adv, byte_range_80_b3);
        struct_So.cc = simd_or(struct_So.cc, tmp399);
        carryQ.CarryQ_Adjust(125);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_So & struct_So, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, byte_c2, tmp7, tmp8, tmp9, tmp10;
		BitBlock tmp11, tmp12, tmp13, tmp14, tmp15, tmp16, tmp17, tmp18, tmp19, tmp20;
		BitBlock tmp21, tmp22, tmp23, tmp24, cc_range_a6_b0_2, byte_c2_adv, tmp25;
		BitBlock tmp26, tmp27, byte_d2, tmp28, byte_82, byte_d2_adv, tmp29, tmp30;
		BitBlock byte_d8, tmp31, byte_range_8e_8f, byte_d8_adv, tmp32, tmp33, tmp34;
		BitBlock byte_db, tmp35, tmp36, tmp37, tmp38, tmp39, tmp40, tmp41, tmp42;
		BitBlock cc_range_6de_6fd_2, byte_db_adv, tmp43, tmp44, byte_df, byte_b6;
		BitBlock byte_df_adv, tmp45, tmp46, byte_e0, tmp47, byte_a7, tmp48;
		BitBlock sequence_e0_a7, byte_e0_adv, tmp49, byte_ba, sequence_e0_a7_adv;
		BitBlock tmp50, tmp51, byte_ad, sequence_e0_ad, byte_b0, sequence_e0_ad_adv;
		BitBlock tmp52, byte_af, sequence_e0_af, tmp53, tmp54, tmp55, tmp56, tmp57;
		BitBlock cc_range_bf3_bfa_3, sequence_e0_af_adv, tmp58, tmp59, byte_b1;
		BitBlock sequence_e0_b1, byte_bf, sequence_e0_b1_adv, tmp60, tmp61, byte_b5;
		BitBlock sequence_e0_b5, byte_b9, sequence_e0_b5_adv, tmp62, tmp63, byte_bc;
		BitBlock sequence_e0_bc, tmp64, tmp65, tmp66, tmp67, tmp68, tmp69, tmp70;
		BitBlock tmp71, tmp72, tmp73, tmp74, tmp75, tmp76, tmp77, tmp78, tmp79, tmp80;
		BitBlock cc_range_f01_f38_3, sequence_e0_bc_adv, tmp81, byte_be;
		BitBlock sequence_e0_be, byte_range_be_bf, sequence_e0_be_adv, tmp82;
		BitBlock sequence_e0_bf, tmp83, tmp84, tmp85, tmp86, tmp87, tmp88, tmp89;
		BitBlock tmp90, tmp91, tmp92, tmp93, tmp94, cc_range_fc0_fd5_3;
		BitBlock sequence_e0_bf_adv, tmp95, byte_e1, tmp96, sequence_e1_82;
		BitBlock byte_e1_adv, byte_range_9e_9f, sequence_e1_82_adv, tmp97, byte_8e;
		BitBlock sequence_e1_8e, tmp98, byte_range_90_99, sequence_e1_8e_adv, tmp99;
		BitBlock byte_a5, sequence_e1_a5, byte_80, sequence_e1_a5_adv, tmp100;
		BitBlock sequence_e1_a7, tmp101, tmp102, byte_range_9e_bf, sequence_e1_a7_adv;
		BitBlock tmp103, sequence_e1_ad, tmp104, tmp105, tmp106, tmp107, tmp108;
		BitBlock cc_range_1b61_1b74_3, sequence_e1_ad_adv, tmp109, byte_e2, byte_84;
		BitBlock tmp110, sequence_e2_84, byte_e2_adv, tmp111, tmp112, tmp113, tmp114;
		BitBlock tmp115, tmp116, tmp117, tmp118, tmp119, tmp120, tmp121, tmp122;
		BitBlock tmp123, tmp124, tmp125, tmp126, tmp127, tmp128, tmp129, tmp130;
		BitBlock tmp131, tmp132, tmp133, tmp134, tmp135, tmp136, cc_range_2100_213a_3;
		BitBlock sequence_e2_84_adv, tmp137, byte_85, sequence_e2_85, tmp138, tmp139;
		BitBlock tmp140, cc_range_214a_214f_3, sequence_e2_85_adv, tmp141, byte_86;
		BitBlock sequence_e2_86, tmp142, tmp143, tmp144, tmp145, tmp146, tmp147;
		BitBlock tmp148, tmp149, tmp150, tmp151, tmp152, tmp153, tmp154, tmp155;
		BitBlock tmp156, tmp157, tmp158, cc_range_2195_21af_3, sequence_e2_86_adv;
		BitBlock tmp159, byte_87, sequence_e2_87, tmp160, tmp161, tmp162, tmp163;
		BitBlock tmp164, tmp165, tmp166, tmp167, tmp168, tmp169, tmp170;
		BitBlock cc_range_21c0_21d5_3, sequence_e2_87_adv, tmp171, byte_8c;
		BitBlock sequence_e2_8c, tmp172, tmp173, tmp174, tmp175, tmp176, tmp177;
		BitBlock tmp178, tmp179, tmp180, tmp181, cc_range_2300_232b_3;
		BitBlock sequence_e2_8c_adv, tmp182, byte_8d, sequence_e2_8d, tmp183, tmp184;
		BitBlock tmp185, tmp186, cc_range_2340_237d_3, sequence_e2_8d_adv, tmp187;
		BitBlock sequence_e2_8e, tmp188, tmp189, tmp190, cc_range_2380_23b4_3;
		BitBlock sequence_e2_8e_adv, tmp191, byte_8f, sequence_e2_8f, tmp192, tmp193;
		BitBlock tmp194, tmp195, cc_range_23c0_23e2_3, sequence_e2_8f_adv, tmp196;
		BitBlock byte_90, sequence_e2_90, tmp197, tmp198, tmp199, byte_range_80_a6;
		BitBlock sequence_e2_90_adv, tmp200, byte_91, sequence_e2_91, byte_range_80_8a;
		BitBlock sequence_e2_91_adv, tmp201, byte_92, sequence_e2_92, tmp202;
		BitBlock byte_range_9c_bf, sequence_e2_92_adv, tmp203, byte_93, sequence_e2_93;
		BitBlock tmp204, tmp205, byte_range_80_a9, sequence_e2_93_adv, tmp206;
		BitBlock byte_range_94_95, byte_e2_byte_range_94_95, byte_range_80_bf, tmp207;
		BitBlock byte_e2_byte_range_94_95_sfx, tmp208, byte_96, sequence_e2_96, tmp209;
		BitBlock tmp210, byte_range_80_b6, tmp211, sequence_e2_96_byte_range_80_b6;
		BitBlock byte_97, sequence_e2_97, tmp212, tmp213, sequence_e2_97_80, byte_98;
		BitBlock sequence_e2_98, tmp214, sequence_e2_98_byte_range_80_bf, byte_99;
		BitBlock sequence_e2_99, tmp215, byte_range_80_ae, tmp216;
		BitBlock sequence_e2_99_byte_range_80_ae, byte_9a, sequence_e2_9a, tmp217;
		BitBlock sequence_e2_9a_byte_range_80_bf, byte_9c, sequence_e2_9c, tmp218;
		BitBlock tmp219, byte_range_81_bf, tmp220, sequence_e2_9c_byte_range_81_bf;
		BitBlock byte_9d, sequence_e2_9d, tmp221, tmp222, byte_range_80_a7, tmp223;
		BitBlock sequence_e2_9d_byte_range_80_a7, byte_9e, sequence_e2_9e, tmp224;
		BitBlock byte_range_94_bf, tmp225, sequence_e2_9e_byte_range_94_bf, tmp226;
		BitBlock byte_a0, sequence_e2_a0, tmp227, sequence_e2_a0_byte_range_80_bf;
		BitBlock byte_ac, sequence_e2_ac, byte_range_80_af, tmp228;
		BitBlock sequence_e2_ac_byte_range_80_af, sequence_e2_ad, tmp229;
		BitBlock byte_range_85_86, tmp230, sequence_e2_ad_byte_range_85_86, tmp231;
		BitBlock byte_b3, sequence_e2_b3, tmp232, byte_range_a5_aa, tmp233;
		BitBlock sequence_e2_b3_byte_range_a5_aa, sequence_e2_ba, tmp234, tmp235;
		BitBlock byte_range_80_99, tmp236, sequence_e2_ba_byte_range_80_99, byte_bb;
		BitBlock sequence_e2_bb, tmp237, byte_range_80_b3, tmp238;
		BitBlock sequence_e2_bb_byte_range_80_b3, sequence_e2_bc, tmp239;
		BitBlock sequence_e2_bc_byte_range_80_bf, sequence_e2_bf, tmp240, tmp241;
		BitBlock byte_range_80_95, tmp242, sequence_e2_bf_byte_range_80_95, byte_e3;
		BitBlock tmp243, sequence_e3_80, byte_e3_adv, tmp244, tmp245, tmp246, tmp247;
		BitBlock tmp248, tmp249, tmp250, tmp251, cc_range_3004_303e_3;
		BitBlock sequence_e3_80_adv, tmp252, sequence_e3_86, tmp253;
		BitBlock cc_range_3190_3196_3, sequence_e3_86_adv, tmp254, sequence_e3_87;
		BitBlock tmp255, byte_range_80_a3, sequence_e3_87_adv, tmp256, byte_88;
		BitBlock sequence_e3_88, tmp257, tmp258, tmp259, tmp260, cc_range_3200_322a_3;
		BitBlock sequence_e3_88_adv, tmp261, byte_89, sequence_e3_89, tmp262, tmp263;
		BitBlock tmp264, cc_range_3240_3260_3, sequence_e3_89_adv, tmp265, byte_8a;
		BitBlock sequence_e3_8a, tmp266, tmp267, tmp268, byte_range_8a_b0;
		BitBlock sequence_e3_8a_adv, tmp269, byte_8b, sequence_e3_8b, tmp270;
		BitBlock byte_range_80_be, sequence_e3_8b_adv, tmp271, byte_range_8c_8f;
		BitBlock byte_e3_byte_range_8c_8f, tmp272, byte_e3_byte_range_8c_8f_sfx;
		BitBlock byte_e4, byte_b7, tmp273, sequence_e4_b7, byte_e4_adv;
		BitBlock sequence_e4_b7_adv, tmp274, byte_ea, tmp275, sequence_ea_92;
		BitBlock byte_ea_adv, byte_range_90_bf, sequence_ea_92_adv, tmp276;
		BitBlock sequence_ea_93, byte_range_80_86, sequence_ea_93_adv, tmp277;
		BitBlock sequence_ea_a0, tmp278, tmp279, tmp280, cc_range_a828_a839_3;
		BitBlock sequence_ea_a0_adv, tmp281, byte_a9, sequence_ea_a9, tmp282;
		BitBlock byte_range_b7_b9, sequence_ea_a9_adv, tmp283, byte_ef, tmp284;
		BitBlock sequence_ef_b7, byte_ef_adv, byte_bd, sequence_ef_b7_adv, tmp285;
		BitBlock sequence_ef_bf, tmp286, tmp287, tmp288, tmp289, tmp290, tmp291;
		BitBlock tmp292, cc_range_ffe4_fffc_3, sequence_ef_bf_adv, tmp293, tmp294;
		BitBlock byte_f0, tmp295, sequence_f0_90, byte_f0_adv, tmp296;
		BitBlock sequence_f0_90_84, sequence_f0_90_adv, byte_range_b7_bf;
		BitBlock sequence_f0_90_84_adv, tmp297, sequence_f0_90_85, tmp298;
		BitBlock byte_range_b9_bf, sequence_f0_90_85_adv, tmp299, sequence_f0_90_86;
		BitBlock tmp300, tmp301, cc_range_10180_10190_4, sequence_f0_90_86_adv, tmp302;
		BitBlock sequence_f0_90_87, tmp303, tmp304, tmp305, tmp306, byte_range_90_bc;
		BitBlock sequence_f0_90_87_adv, tmp307, sequence_f0_9d, tmp308;
		BitBlock byte_range_80_82, tmp309, sequence_f0_9d_byte_range_80_82, tmp310;
		BitBlock sequence_f0_9d_byte_range_80_82_sfx, byte_83, sequence_f0_9d_adv;
		BitBlock sequence_f0_9d_83, tmp311, byte_range_80_b5, tmp312;
		BitBlock sequence_f0_9d_83_byte_range_80_b5, sequence_f0_9d_84, tmp313;
		BitBlock sequence_f0_9d_84_byte_range_80_a6, sequence_f0_9d_85, tmp314, tmp315;
		BitBlock byte_range_80_a4, tmp316, sequence_f0_9d_85_byte_range_80_a4;
		BitBlock sequence_f0_9d_86, tmp317, tmp318, byte_range_83_84, tmp319;
		BitBlock sequence_f0_9d_86_byte_range_83_84, sequence_f0_9d_87;
		BitBlock byte_range_80_9d, tmp320, sequence_f0_9d_87_byte_range_80_9d;
		BitBlock sequence_f0_9d_88, tmp321, sequence_f0_9d_88_byte_range_80_bf;
		BitBlock sequence_f0_9d_89, byte_range_80_81, tmp322;
		BitBlock sequence_f0_9d_89_byte_range_80_81, sequence_f0_9d_8c, tmp323;
		BitBlock sequence_f0_9d_8c_byte_range_80_bf, sequence_f0_9d_8d;
		BitBlock byte_range_80_96, tmp324, sequence_f0_9d_8d_byte_range_80_96, byte_9f;
		BitBlock sequence_f0_9f, tmp325, sequence_f0_9f_80, sequence_f0_9f_adv, tmp326;
		BitBlock tmp327, cc_range_1f000_1f030_4, sequence_f0_9f_80_adv, tmp328;
		BitBlock byte_81, sequence_f0_9f_81, sequence_f0_9f_81_adv, tmp329;
		BitBlock sequence_f0_9f_82, tmp330, tmp331, tmp332, tmp333, tmp334, tmp335;
		BitBlock tmp336, cc_range_1f080_1f0b1_4, sequence_f0_9f_82_adv, tmp337;
		BitBlock sequence_f0_9f_83, tmp338, tmp339, tmp340, cc_range_1f0c1_1f0d1_4;
		BitBlock sequence_f0_9f_83_adv, tmp341, sequence_f0_9f_84, tmp342, tmp343;
		BitBlock tmp344, cc_range_1f110_1f130_4, sequence_f0_9f_84_adv, tmp345;
		BitBlock sequence_f0_9f_85, cc_range_1f140_1f170_4, sequence_f0_9f_85_adv;
		BitBlock tmp346, sequence_f0_9f_86, byte_range_80_9a, sequence_f0_9f_86_adv;
		BitBlock tmp347, sequence_f0_9f_87, tmp348, byte_range_a6_bf;
		BitBlock sequence_f0_9f_87_adv, tmp349, sequence_f0_9f_88, tmp350, tmp351;
		BitBlock tmp352, cc_range_1f200_1f210_4, sequence_f0_9f_88_adv, tmp353;
		BitBlock sequence_f0_9f_89, tmp354, tmp355, tmp356, cc_range_1f240_1f250_4;
		BitBlock sequence_f0_9f_89_adv, tmp357, sequence_f0_9f_8c, tmp358, tmp359;
		BitBlock tmp360, tmp361, tmp362, cc_range_1f300_1f337_4, sequence_f0_9f_8c_adv;
		BitBlock tmp363, sequence_f0_9f_8d, tmp364, byte_range_80_bc;
		BitBlock sequence_f0_9f_8d_adv, tmp365, sequence_f0_9f_8e;
		BitBlock cc_range_1f380_1f3a0_4, sequence_f0_9f_8e_adv, tmp366;
		BitBlock sequence_f0_9f_8f, tmp367, tmp368, tmp369, tmp370, tmp371;
		BitBlock cc_range_1f3c0_1f3e0_4, sequence_f0_9f_8f_adv, tmp372;
		BitBlock sequence_f0_9f_90, sequence_f0_9f_90_adv, tmp373, sequence_f0_9f_91;
		BitBlock tmp374, tmp375, tmp376, tmp377, cc_range_1f440_1f442_4;
		BitBlock sequence_f0_9f_91_adv, tmp378, sequence_f0_9f_92;
		BitBlock sequence_f0_9f_92_adv, tmp379, sequence_f0_9f_93, tmp380, tmp381;
		BitBlock tmp382, tmp383, tmp384, cc_range_1f4c0_1f4f9_4, sequence_f0_9f_93_adv;
		BitBlock tmp385, byte_94, sequence_f0_9f_94, tmp386, byte_range_80_bd;
		BitBlock sequence_f0_9f_94_adv, tmp387, byte_95, sequence_f0_9f_95, tmp388;
		BitBlock tmp389, tmp390, cc_range_1f540_1f550_4, sequence_f0_9f_95_adv, tmp391;
		BitBlock sequence_f0_9f_97, byte_range_bb_bf, sequence_f0_9f_97_adv, tmp392;
		BitBlock sequence_f0_9f_98, sequence_f0_9f_98_adv, tmp393, sequence_f0_9f_99;
		BitBlock tmp394, cc_range_1f640_1f645_4, sequence_f0_9f_99_adv, tmp395;
		BitBlock sequence_f0_9f_9a, sequence_f0_9f_9a_adv, tmp396, byte_9b;
		BitBlock sequence_f0_9f_9b, byte_range_80_85, sequence_f0_9f_9b_adv, tmp397;
		BitBlock sequence_f0_9f_9c, sequence_f0_9f_9c_adv, tmp398, sequence_f0_9f_9d;
		BitBlock sequence_f0_9f_9d_adv, tmp399;




        struct_So.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_andc(tmp5, tmp4);
        byte_c2 = simd_and(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp11 = simd_and(tmp10, tmp5);
        tmp12 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp13 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp14 = simd_and(tmp12, tmp13);
        tmp15 = simd_or(tmp11, tmp14);
        tmp16 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp17 = simd_and(tmp16, tmp5);
        tmp18 = simd_or(tmp15, tmp17);
        tmp19 = simd_and(tmp9, tmp18);
        tmp20 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp21 = simd_and(tmp7, tmp20);
        tmp22 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp23 = simd_or(tmp4, tmp22);
        tmp24 = simd_andc(tmp21, tmp23);
        cc_range_a6_b0_2 = simd_or(tmp19, tmp24);
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(byte_c2, carryQ.get_carry_in(0), byte_c2_adv));
        tmp25 = simd_and(byte_c2_adv, cc_range_a6_b0_2);
        struct_So.cc = simd_or(struct_So.cc, tmp25);
        tmp26 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp27 = simd_and(tmp1, tmp26);
        byte_d2 = simd_and(tmp27, tmp6);
        tmp28 = simd_andc(tmp7, tmp2);
        byte_82 = simd_and(tmp28, tmp6);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(byte_d2, carryQ.get_carry_in(1), byte_d2_adv));
        tmp29 = simd_and(byte_d2_adv, byte_82);
        struct_So.cc = simd_or(struct_So.cc, tmp29);
        tmp30 = simd_andc(tmp12, tmp22);
        byte_d8 = simd_and(tmp27, tmp30);
        tmp31 = simd_and(tmp16, basis_bits.bit_6);
        byte_range_8e_8f = simd_and(tmp28, tmp31);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(byte_d8, carryQ.get_carry_in(2), byte_d8_adv));
        tmp32 = simd_and(byte_d8_adv, byte_range_8e_8f);
        struct_So.cc = simd_or(struct_So.cc, tmp32);
        tmp33 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp34 = simd_and(tmp12, tmp33);
        byte_db = simd_and(tmp27, tmp34);
        tmp35 = simd_and(tmp7, tmp26);
        tmp36 = simd_and(tmp35, tmp17);
        tmp37 = simd_and(tmp9, tmp14);
        tmp38 = simd_or(tmp36, tmp37);
        tmp39 = simd_and(tmp21, tmp16);
        tmp40 = simd_not(basis_bits.bit_7);
        tmp41 = simd_or(simd_and(basis_bits.bit_6, tmp40), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
        tmp42 = simd_and(tmp39, tmp41);
        cc_range_6de_6fd_2 = simd_or(tmp38, tmp42);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(byte_db, carryQ.get_carry_in(3), byte_db_adv));
        tmp43 = simd_and(byte_db_adv, cc_range_6de_6fd_2);
        struct_So.cc = simd_or(struct_So.cc, tmp43);
        tmp44 = simd_and(tmp16, tmp33);
        byte_df = simd_and(tmp27, tmp44);
        byte_b6 = simd_and(tmp21, tmp11);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(byte_df, carryQ.get_carry_in(4), byte_df_adv));
        tmp45 = simd_and(byte_df_adv, byte_b6);
        struct_So.cc = simd_or(struct_So.cc, tmp45);
        tmp46 = simd_and(tmp1, tmp8);
        byte_e0 = simd_andc(tmp46, tmp23);
        tmp47 = simd_and(tmp10, tmp33);
        byte_a7 = simd_and(tmp9, tmp47);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(byte_e0, carryQ.get_carry_in(5), tmp48));
        sequence_e0_a7 = simd_and(tmp48, byte_a7);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(byte_e0, carryQ.get_carry_in(6), byte_e0_adv));
        tmp49 = simd_and(tmp12, tmp5);
        byte_ba = simd_and(tmp21, tmp49);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(sequence_e0_a7, carryQ.get_carry_in(7), sequence_e0_a7_adv));
        tmp50 = simd_and(sequence_e0_a7_adv, byte_ba);
        struct_So.cc = simd_or(struct_So.cc, tmp50);
        tmp51 = simd_and(tmp16, tmp13);
        byte_ad = simd_and(tmp9, tmp51);
        sequence_e0_ad = simd_and(byte_e0_adv, byte_ad);
        byte_b0 = simd_andc(tmp21, tmp23);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(sequence_e0_ad, carryQ.get_carry_in(8), sequence_e0_ad_adv));
        tmp52 = simd_and(sequence_e0_ad_adv, byte_b0);
        struct_So.cc = simd_or(struct_So.cc, tmp52);
        byte_af = simd_and(tmp9, tmp44);
        sequence_e0_af = simd_and(byte_e0_adv, byte_af);
        tmp53 = simd_or(basis_bits.bit_5, tmp22);
        tmp54 = simd_not(tmp53);
        tmp55 = simd_or(basis_bits.bit_5, tmp33);
        tmp56 = simd_or(simd_and(basis_bits.bit_4, tmp54), simd_andc(tmp55, basis_bits.bit_4));
        tmp57 = simd_or(tmp56, tmp49);
        cc_range_bf3_bfa_3 = simd_and(tmp21, tmp57);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(sequence_e0_af, carryQ.get_carry_in(9), sequence_e0_af_adv));
        tmp58 = simd_and(sequence_e0_af_adv, cc_range_bf3_bfa_3);
        struct_So.cc = simd_or(struct_So.cc, tmp58);
        tmp59 = simd_andc(tmp13, tmp4);
        byte_b1 = simd_and(tmp21, tmp59);
        sequence_e0_b1 = simd_and(byte_e0_adv, byte_b1);
        byte_bf = simd_and(tmp21, tmp44);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(sequence_e0_b1, carryQ.get_carry_in(10), sequence_e0_b1_adv));
        tmp60 = simd_and(sequence_e0_b1_adv, byte_bf);
        struct_So.cc = simd_or(struct_So.cc, tmp60);
        tmp61 = simd_and(tmp10, tmp13);
        byte_b5 = simd_and(tmp21, tmp61);
        sequence_e0_b5 = simd_and(byte_e0_adv, byte_b5);
        byte_b9 = simd_and(tmp21, tmp14);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(sequence_e0_b5, carryQ.get_carry_in(11), sequence_e0_b5_adv));
        tmp62 = simd_and(sequence_e0_b5_adv, byte_b9);
        struct_So.cc = simd_or(struct_So.cc, tmp62);
        tmp63 = simd_andc(tmp16, tmp22);
        byte_bc = simd_and(tmp21, tmp63);
        sequence_e0_bc = simd_and(byte_e0_adv, byte_bc);
        tmp64 = simd_andc(tmp28, tmp4);
        tmp65 = simd_and(tmp64, tmp22);
        tmp66 = simd_andc(tmp33, tmp4);
        tmp67 = simd_and(tmp35, tmp66);
        tmp68 = simd_or(tmp65, tmp67);
        tmp69 = simd_and(tmp35, tmp10);
        tmp70 = simd_and(tmp69, tmp22);
        tmp71 = simd_or(tmp68, tmp70);
        tmp72 = simd_and(tmp35, basis_bits.bit_4);
        tmp73 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
        tmp74 = simd_and(tmp72, tmp73);
        tmp75 = simd_or(tmp71, tmp74);
        tmp76 = simd_andc(tmp10, tmp22);
        tmp77 = simd_and(tmp21, tmp76);
        tmp78 = simd_or(tmp75, tmp77);
        tmp79 = simd_or(tmp78, byte_b6);
        tmp80 = simd_and(tmp21, tmp30);
        cc_range_f01_f38_3 = simd_or(tmp79, tmp80);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(sequence_e0_bc, carryQ.get_carry_in(12), sequence_e0_bc_adv));
        tmp81 = simd_and(sequence_e0_bc_adv, cc_range_f01_f38_3);
        struct_So.cc = simd_or(struct_So.cc, tmp81);
        byte_be = simd_and(tmp21, tmp17);
        sequence_e0_be = simd_and(byte_e0_adv, byte_be);
        byte_range_be_bf = simd_and(tmp21, tmp31);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(sequence_e0_be, carryQ.get_carry_in(13), sequence_e0_be_adv));
        tmp82 = simd_and(sequence_e0_be_adv, byte_range_be_bf);
        struct_So.cc = simd_or(struct_So.cc, tmp82);
        sequence_e0_bf = simd_and(byte_e0_adv, byte_bf);
        tmp83 = simd_andc(tmp28, basis_bits.bit_4);
        tmp84 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp85 = simd_andc(tmp83, tmp84);
        tmp86 = simd_and(basis_bits.bit_5, tmp22);
        tmp87 = simd_not(tmp86);
        tmp88 = simd_and(basis_bits.bit_5, tmp33);
        tmp89 = simd_or(simd_and(basis_bits.bit_4, tmp87), simd_andc(tmp88, basis_bits.bit_4));
        tmp90 = simd_and(tmp28, tmp89);
        tmp91 = simd_or(tmp85, tmp90);
        tmp92 = simd_or(tmp91, byte_range_8e_8f);
        tmp93 = simd_or(simd_and(basis_bits.bit_4, tmp54), simd_andc(tmp86, basis_bits.bit_4));
        tmp94 = simd_and(tmp35, tmp93);
        cc_range_fc0_fd5_3 = simd_or(tmp92, tmp94);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(sequence_e0_bf, carryQ.get_carry_in(14), sequence_e0_bf_adv));
        tmp95 = simd_and(sequence_e0_bf_adv, cc_range_fc0_fd5_3);
        struct_So.cc = simd_or(struct_So.cc, tmp95);
        byte_e1 = simd_and(tmp46, tmp59);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(15), tmp96));
        sequence_e1_82 = simd_and(tmp96, byte_82);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(16), byte_e1_adv));
        byte_range_9e_9f = simd_and(tmp35, tmp31);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(sequence_e1_82, carryQ.get_carry_in(17), sequence_e1_82_adv));
        tmp97 = simd_and(sequence_e1_82_adv, byte_range_9e_9f);
        struct_So.cc = simd_or(struct_So.cc, tmp97);
        byte_8e = simd_and(tmp28, tmp17);
        sequence_e1_8e = simd_and(byte_e1_adv, byte_8e);
        tmp98 = simd_and(basis_bits.bit_4, tmp73);
        byte_range_90_99 = simd_andc(tmp35, tmp98);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(sequence_e1_8e, carryQ.get_carry_in(18), sequence_e1_8e_adv));
        tmp99 = simd_and(sequence_e1_8e_adv, byte_range_90_99);
        struct_So.cc = simd_or(struct_So.cc, tmp99);
        byte_a5 = simd_and(tmp9, tmp61);
        sequence_e1_a5 = simd_and(byte_e1_adv, byte_a5);
        byte_80 = simd_andc(tmp28, tmp23);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(sequence_e1_a5, carryQ.get_carry_in(19), sequence_e1_a5_adv));
        tmp100 = simd_and(sequence_e1_a5_adv, byte_80);
        struct_So.cc = simd_or(struct_So.cc, tmp100);
        sequence_e1_a7 = simd_and(byte_e1_adv, byte_a7);
        tmp101 = simd_and(basis_bits.bit_3, tmp31);
        tmp102 = simd_or(basis_bits.bit_2, tmp101);
        byte_range_9e_bf = simd_and(tmp7, tmp102);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(sequence_e1_a7, carryQ.get_carry_in(20), sequence_e1_a7_adv));
        tmp103 = simd_and(sequence_e1_a7_adv, byte_range_9e_bf);
        struct_So.cc = simd_or(struct_So.cc, tmp103);
        sequence_e1_ad = simd_and(byte_e1_adv, byte_ad);
        tmp104 = simd_not(tmp55);
        tmp105 = simd_or(simd_and(basis_bits.bit_4, tmp104), simd_andc(tmp53, basis_bits.bit_4));
        tmp106 = simd_and(tmp9, tmp105);
        tmp107 = simd_or(simd_and(basis_bits.bit_4, tmp87), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
        tmp108 = simd_and(tmp21, tmp107);
        cc_range_1b61_1b74_3 = simd_or(tmp106, tmp108);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(sequence_e1_ad, carryQ.get_carry_in(21), sequence_e1_ad_adv));
        tmp109 = simd_and(sequence_e1_ad_adv, cc_range_1b61_1b74_3);
        struct_So.cc = simd_or(struct_So.cc, tmp109);
        byte_e2 = simd_and(tmp46, tmp6);
        byte_84 = simd_and(tmp28, tmp76);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(22), tmp110));
        sequence_e2_84 = simd_and(tmp110, byte_84);
        carryQ.cq[23] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(23), byte_e2_adv));
        tmp111 = simd_or(tmp4, basis_bits.bit_6);
        tmp112 = simd_andc(tmp28, tmp111);
        tmp113 = simd_not(tmp33);
        tmp114 = simd_or(simd_and(basis_bits.bit_5, tmp113), simd_andc(tmp33, basis_bits.bit_5));
        tmp115 = simd_and(tmp83, tmp114);
        tmp116 = simd_or(tmp112, tmp115);
        tmp117 = simd_andc(tmp12, basis_bits.bit_6);
        tmp118 = simd_and(tmp28, tmp117);
        tmp119 = simd_or(tmp116, tmp118);
        tmp120 = simd_and(tmp35, tmp76);
        tmp121 = simd_or(tmp119, tmp120);
        tmp122 = simd_and(tmp10, basis_bits.bit_6);
        tmp123 = simd_and(tmp35, tmp122);
        tmp124 = simd_or(tmp121, tmp123);
        tmp125 = simd_or(basis_bits.bit_3, tmp4);
        tmp126 = simd_not(tmp125);
        tmp127 = simd_or(simd_and(basis_bits.bit_2, tmp126), simd_andc(tmp101, basis_bits.bit_2));
        tmp128 = simd_and(tmp7, tmp127);
        tmp129 = simd_or(tmp124, tmp128);
        tmp130 = simd_or(tmp129, byte_a5);
        tmp131 = simd_or(tmp130, byte_a7);
        tmp132 = simd_or(tmp131, tmp37);
        tmp133 = simd_and(tmp9, tmp17);
        tmp134 = simd_or(tmp132, tmp133);
        tmp135 = simd_and(tmp12, basis_bits.bit_6);
        tmp136 = simd_and(tmp21, tmp135);
        cc_range_2100_213a_3 = simd_or(tmp134, tmp136);
        carryQ.cq[24] = carryout2carry(pablo_blk_Advance(sequence_e2_84, carryQ.get_carry_in(24), sequence_e2_84_adv));
        tmp137 = simd_and(sequence_e2_84_adv, cc_range_2100_213a_3);
        struct_So.cc = simd_or(struct_So.cc, tmp137);
        byte_85 = simd_and(tmp28, tmp61);
        sequence_e2_85 = simd_and(byte_e2_adv, byte_85);
        tmp138 = simd_andc(tmp16, basis_bits.bit_6);
        tmp139 = simd_or(tmp49, tmp138);
        tmp140 = simd_or(tmp139, tmp44);
        cc_range_214a_214f_3 = simd_and(tmp28, tmp140);
        carryQ.cq[25] = carryout2carry(pablo_blk_Advance(sequence_e2_85, carryQ.get_carry_in(25), sequence_e2_85_adv));
        tmp141 = simd_and(sequence_e2_85_adv, cc_range_214a_214f_3);
        struct_So.cc = simd_or(struct_So.cc, tmp141);
        byte_86 = simd_and(tmp28, tmp11);
        sequence_e2_86 = simd_and(byte_e2_adv, byte_86);
        tmp142 = simd_not(tmp73);
        tmp143 = simd_or(simd_and(basis_bits.bit_4, tmp142), simd_andc(tmp86, basis_bits.bit_4));
        tmp144 = simd_or(tmp143, tmp16);
        tmp145 = simd_and(tmp35, tmp144);
        tmp146 = simd_andc(tmp9, tmp4);
        tmp147 = simd_and(tmp146, tmp41);
        tmp148 = simd_or(tmp145, tmp147);
        tmp149 = simd_andc(tmp10, basis_bits.bit_6);
        tmp150 = simd_and(tmp9, tmp149);
        tmp151 = simd_or(tmp148, tmp150);
        tmp152 = simd_not(tmp84);
        tmp153 = simd_or(simd_and(basis_bits.bit_4, tmp152), simd_andc(tmp88, basis_bits.bit_4));
        tmp154 = simd_and(tmp9, tmp153);
        tmp155 = simd_or(tmp151, tmp154);
        tmp156 = simd_and(tmp7, basis_bits.bit_2);
        tmp157 = simd_or(basis_bits.bit_3, tmp44);
        tmp158 = simd_and(tmp156, tmp157);
        cc_range_2195_21af_3 = simd_or(tmp155, tmp158);
        carryQ.cq[26] = carryout2carry(pablo_blk_Advance(sequence_e2_86, carryQ.get_carry_in(26), sequence_e2_86_adv));
        tmp159 = simd_and(sequence_e2_86_adv, cc_range_2195_21af_3);
        struct_So.cc = simd_or(struct_So.cc, tmp159);
        byte_87 = simd_and(tmp28, tmp47);
        sequence_e2_87 = simd_and(byte_e2_adv, byte_87);
        tmp160 = simd_and(basis_bits.bit_4, tmp84);
        tmp161 = simd_andc(tmp28, tmp160);
        tmp162 = simd_andc(tmp35, tmp111);
        tmp163 = simd_or(tmp161, tmp162);
        tmp164 = simd_or(tmp163, tmp67);
        tmp165 = simd_and(basis_bits.bit_3, tmp4);
        tmp166 = simd_not(tmp165);
        tmp167 = simd_or(basis_bits.bit_4, tmp86);
        tmp168 = simd_and(basis_bits.bit_3, tmp167);
        tmp169 = simd_or(simd_and(basis_bits.bit_2, tmp166), simd_andc(tmp168, basis_bits.bit_2));
        tmp170 = simd_and(tmp7, tmp169);
        cc_range_21c0_21d5_3 = simd_or(tmp164, tmp170);
        carryQ.cq[27] = carryout2carry(pablo_blk_Advance(sequence_e2_87, carryQ.get_carry_in(27), sequence_e2_87_adv));
        tmp171 = simd_and(sequence_e2_87_adv, cc_range_21c0_21d5_3);
        struct_So.cc = simd_or(struct_So.cc, tmp171);
        byte_8c = simd_and(tmp28, tmp63);
        sequence_e2_8c = simd_and(byte_e2_adv, byte_8c);
        tmp172 = simd_andc(tmp7, basis_bits.bit_2);
        tmp173 = simd_or(basis_bits.bit_3, tmp16);
        tmp174 = simd_and(tmp172, tmp173);
        tmp175 = simd_or(tmp83, tmp174);
        tmp176 = simd_or(simd_and(basis_bits.bit_4, tmp54), simd_andc(tmp73, basis_bits.bit_4));
        tmp177 = simd_and(tmp9, tmp176);
        tmp178 = simd_or(tmp175, tmp177);
        tmp179 = simd_and(basis_bits.bit_4, tmp55);
        tmp180 = simd_or(basis_bits.bit_3, tmp179);
        tmp181 = simd_and(tmp156, tmp180);
        cc_range_2300_232b_3 = simd_or(tmp178, tmp181);
        carryQ.cq[28] = carryout2carry(pablo_blk_Advance(sequence_e2_8c, carryQ.get_carry_in(28), sequence_e2_8c_adv));
        tmp182 = simd_and(sequence_e2_8c_adv, cc_range_2300_232b_3);
        struct_So.cc = simd_or(struct_So.cc, tmp182);
        byte_8d = simd_and(tmp28, tmp51);
        sequence_e2_8d = simd_and(byte_e2_adv, byte_8d);
        tmp183 = simd_and(basis_bits.bit_3, tmp16);
        tmp184 = simd_and(basis_bits.bit_2, tmp183);
        tmp185 = simd_andc(tmp7, tmp184);
        tmp186 = simd_and(tmp39, tmp22);
        cc_range_2340_237d_3 = simd_or(tmp185, tmp186);
        carryQ.cq[29] = carryout2carry(pablo_blk_Advance(sequence_e2_8d, carryQ.get_carry_in(29), sequence_e2_8d_adv));
        tmp187 = simd_and(sequence_e2_8d_adv, cc_range_2340_237d_3);
        struct_So.cc = simd_or(struct_So.cc, tmp187);
        sequence_e2_8e = simd_and(byte_e2_adv, byte_8e);
        tmp188 = simd_and(basis_bits.bit_3, tmp179);
        tmp189 = simd_andc(tmp172, tmp188);
        tmp190 = simd_and(tmp21, tmp4);
        cc_range_2380_23b4_3 = simd_or(tmp189, tmp190);
        carryQ.cq[30] = carryout2carry(pablo_blk_Advance(sequence_e2_8e, carryQ.get_carry_in(30), sequence_e2_8e_adv));
        tmp191 = simd_and(sequence_e2_8e_adv, cc_range_2380_23b4_3);
        struct_So.cc = simd_or(struct_So.cc, tmp191);
        byte_8f = simd_and(tmp28, tmp44);
        sequence_e2_8f = simd_and(byte_e2_adv, byte_8f);
        tmp192 = simd_andc(tmp172, tmp183);
        tmp193 = simd_not(tmp4);
        tmp194 = simd_or(simd_and(basis_bits.bit_3, tmp193), simd_andc(tmp111, basis_bits.bit_3));
        tmp195 = simd_and(tmp156, tmp194);
        cc_range_23c0_23e2_3 = simd_or(tmp192, tmp195);
        carryQ.cq[31] = carryout2carry(pablo_blk_Advance(sequence_e2_8f, carryQ.get_carry_in(31), sequence_e2_8f_adv));
        tmp196 = simd_and(sequence_e2_8f_adv, cc_range_23c0_23e2_3);
        struct_So.cc = simd_or(struct_So.cc, tmp196);
        byte_90 = simd_andc(tmp35, tmp23);
        sequence_e2_90 = simd_and(byte_e2_adv, byte_90);
        tmp197 = simd_or(basis_bits.bit_4, tmp88);
        tmp198 = simd_or(basis_bits.bit_3, tmp197);
        tmp199 = simd_and(basis_bits.bit_2, tmp198);
        byte_range_80_a6 = simd_andc(tmp7, tmp199);
        carryQ.cq[32] = carryout2carry(pablo_blk_Advance(sequence_e2_90, carryQ.get_carry_in(32), sequence_e2_90_adv));
        tmp200 = simd_and(sequence_e2_90_adv, byte_range_80_a6);
        struct_So.cc = simd_or(struct_So.cc, tmp200);
        byte_91 = simd_and(tmp35, tmp59);
        sequence_e2_91 = simd_and(byte_e2_adv, byte_91);
        byte_range_80_8a = simd_andc(tmp28, tmp179);
        carryQ.cq[33] = carryout2carry(pablo_blk_Advance(sequence_e2_91, carryQ.get_carry_in(33), sequence_e2_91_adv));
        tmp201 = simd_and(sequence_e2_91_adv, byte_range_80_8a);
        struct_So.cc = simd_or(struct_So.cc, tmp201);
        byte_92 = simd_and(tmp35, tmp6);
        sequence_e2_92 = simd_and(byte_e2_adv, byte_92);
        tmp202 = simd_or(basis_bits.bit_2, tmp183);
        byte_range_9c_bf = simd_and(tmp7, tmp202);
        carryQ.cq[34] = carryout2carry(pablo_blk_Advance(sequence_e2_92, carryQ.get_carry_in(34), sequence_e2_92_adv));
        tmp203 = simd_and(sequence_e2_92_adv, byte_range_9c_bf);
        struct_So.cc = simd_or(struct_So.cc, tmp203);
        byte_93 = simd_and(tmp35, tmp66);
        sequence_e2_93 = simd_and(byte_e2_adv, byte_93);
        tmp204 = simd_or(basis_bits.bit_3, tmp98);
        tmp205 = simd_and(basis_bits.bit_2, tmp204);
        byte_range_80_a9 = simd_andc(tmp7, tmp205);
        carryQ.cq[35] = carryout2carry(pablo_blk_Advance(sequence_e2_93, carryQ.get_carry_in(35), sequence_e2_93_adv));
        tmp206 = simd_and(sequence_e2_93_adv, byte_range_80_a9);
        struct_So.cc = simd_or(struct_So.cc, tmp206);
        byte_range_94_95 = simd_and(tmp35, tmp149);
        byte_e2_byte_range_94_95 = simd_and(byte_e2_adv, byte_range_94_95);
        byte_range_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        carryQ.cq[36] = carryout2carry(pablo_blk_Advance(byte_e2_byte_range_94_95, carryQ.get_carry_in(36), tmp207));
        byte_e2_byte_range_94_95_sfx = simd_and(tmp207, byte_range_80_bf);
        struct_So.cc = simd_or(struct_So.cc, byte_e2_byte_range_94_95_sfx);
        tmp208 = simd_and(byte_range_80_bf, tmp26);
        byte_96 = simd_and(tmp208, tmp11);
        sequence_e2_96 = simd_and(byte_e2_adv, byte_96);
        tmp209 = simd_and(basis_bits.bit_3, tmp197);
        tmp210 = simd_and(basis_bits.bit_2, tmp209);
        byte_range_80_b6 = simd_andc(byte_range_80_bf, tmp210);
        carryQ.cq[37] = carryout2carry(pablo_blk_Advance(sequence_e2_96, carryQ.get_carry_in(37), tmp211));
        sequence_e2_96_byte_range_80_b6 = simd_and(tmp211, byte_range_80_b6);
        struct_So.cc = simd_or(struct_So.cc, sequence_e2_96_byte_range_80_b6);
        byte_97 = simd_and(tmp208, tmp47);
        sequence_e2_97 = simd_and(byte_e2_adv, byte_97);
        tmp212 = simd_andc(byte_range_80_bf, tmp2);
        carryQ.cq[38] = carryout2carry(pablo_blk_Advance(sequence_e2_97, carryQ.get_carry_in(38), tmp213));
        sequence_e2_97_80 = simd_and(tmp213, byte_80);
        byte_98 = simd_and(tmp208, tmp30);
        sequence_e2_98 = simd_and(byte_e2_adv, byte_98);
        carryQ.cq[39] = carryout2carry(pablo_blk_Advance(sequence_e2_98, carryQ.get_carry_in(39), tmp214));
        sequence_e2_98_byte_range_80_bf = simd_and(tmp214, byte_range_80_bf);
        struct_So.cc = simd_or(struct_So.cc, sequence_e2_98_byte_range_80_bf);
        byte_99 = simd_and(tmp208, tmp14);
        sequence_e2_99 = simd_and(byte_e2_adv, byte_99);
        tmp215 = simd_and(basis_bits.bit_2, tmp157);
        byte_range_80_ae = simd_andc(byte_range_80_bf, tmp215);
        carryQ.cq[40] = carryout2carry(pablo_blk_Advance(sequence_e2_99, carryQ.get_carry_in(40), tmp216));
        sequence_e2_99_byte_range_80_ae = simd_and(tmp216, byte_range_80_ae);
        struct_So.cc = simd_or(struct_So.cc, sequence_e2_99_byte_range_80_ae);
        byte_9a = simd_and(tmp208, tmp49);
        sequence_e2_9a = simd_and(byte_e2_adv, byte_9a);
        carryQ.cq[41] = carryout2carry(pablo_blk_Advance(sequence_e2_9a, carryQ.get_carry_in(41), tmp217));
        sequence_e2_9a_byte_range_80_bf = simd_and(tmp217, byte_range_80_bf);
        struct_So.cc = simd_or(struct_So.cc, sequence_e2_9a_byte_range_80_bf);
        byte_9c = simd_and(tmp208, tmp63);
        sequence_e2_9c = simd_and(byte_e2_adv, byte_9c);
        tmp218 = simd_or(basis_bits.bit_3, tmp23);
        tmp219 = simd_or(basis_bits.bit_2, tmp218);
        byte_range_81_bf = simd_and(byte_range_80_bf, tmp219);
        carryQ.cq[42] = carryout2carry(pablo_blk_Advance(sequence_e2_9c, carryQ.get_carry_in(42), tmp220));
        sequence_e2_9c_byte_range_81_bf = simd_and(tmp220, byte_range_81_bf);
        struct_So.cc = simd_or(struct_So.cc, sequence_e2_9c_byte_range_81_bf);
        byte_9d = simd_and(tmp208, tmp51);
        sequence_e2_9d = simd_and(byte_e2_adv, byte_9d);
        tmp221 = simd_or(basis_bits.bit_3, basis_bits.bit_4);
        tmp222 = simd_and(basis_bits.bit_2, tmp221);
        byte_range_80_a7 = simd_andc(byte_range_80_bf, tmp222);
        carryQ.cq[43] = carryout2carry(pablo_blk_Advance(sequence_e2_9d, carryQ.get_carry_in(43), tmp223));
        sequence_e2_9d_byte_range_80_a7 = simd_and(tmp223, byte_range_80_a7);
        struct_So.cc = simd_or(struct_So.cc, sequence_e2_9d_byte_range_80_a7);
        byte_9e = simd_and(tmp208, tmp17);
        sequence_e2_9e = simd_and(byte_e2_adv, byte_9e);
        tmp224 = simd_or(basis_bits.bit_2, tmp165);
        byte_range_94_bf = simd_and(byte_range_80_bf, tmp224);
        carryQ.cq[44] = carryout2carry(pablo_blk_Advance(sequence_e2_9e, carryQ.get_carry_in(44), tmp225));
        sequence_e2_9e_byte_range_94_bf = simd_and(tmp225, byte_range_94_bf);
        struct_So.cc = simd_or(struct_So.cc, sequence_e2_9e_byte_range_94_bf);
        tmp226 = simd_and(byte_range_80_bf, tmp8);
        byte_a0 = simd_andc(tmp226, tmp23);
        sequence_e2_a0 = simd_and(byte_e2_adv, byte_a0);
        carryQ.cq[45] = carryout2carry(pablo_blk_Advance(sequence_e2_a0, carryQ.get_carry_in(45), tmp227));
        sequence_e2_a0_byte_range_80_bf = simd_and(tmp227, byte_range_80_bf);
        struct_So.cc = simd_or(struct_So.cc, sequence_e2_a0_byte_range_80_bf);
        byte_ac = simd_and(tmp226, tmp63);
        sequence_e2_ac = simd_and(byte_e2_adv, byte_ac);
        byte_range_80_af = simd_andc(byte_range_80_bf, tmp20);
        carryQ.cq[46] = carryout2carry(pablo_blk_Advance(sequence_e2_ac, carryQ.get_carry_in(46), tmp228));
        sequence_e2_ac_byte_range_80_af = simd_and(tmp228, byte_range_80_af);
        struct_So.cc = simd_or(struct_So.cc, sequence_e2_ac_byte_range_80_af);
        sequence_e2_ad = simd_and(byte_e2_adv, byte_ad);
        tmp229 = simd_and(tmp212, tmp10);
        byte_range_85_86 = simd_and(tmp229, tmp41);
        carryQ.cq[47] = carryout2carry(pablo_blk_Advance(sequence_e2_ad, carryQ.get_carry_in(47), tmp230));
        sequence_e2_ad_byte_range_85_86 = simd_and(tmp230, byte_range_85_86);
        struct_So.cc = simd_or(struct_So.cc, sequence_e2_ad_byte_range_85_86);
        tmp231 = simd_and(byte_range_80_bf, tmp20);
        byte_b3 = simd_and(tmp231, tmp66);
        sequence_e2_b3 = simd_and(byte_e2_adv, byte_b3);
        tmp232 = simd_or(simd_and(basis_bits.bit_4, tmp104), simd_andc(tmp86, basis_bits.bit_4));
        byte_range_a5_aa = simd_and(tmp226, tmp232);
        carryQ.cq[48] = carryout2carry(pablo_blk_Advance(sequence_e2_b3, carryQ.get_carry_in(48), tmp233));
        sequence_e2_b3_byte_range_a5_aa = simd_and(tmp233, byte_range_a5_aa);
        struct_So.cc = simd_or(struct_So.cc, sequence_e2_b3_byte_range_a5_aa);
        sequence_e2_ba = simd_and(byte_e2_adv, byte_ba);
        tmp234 = simd_andc(byte_range_80_bf, basis_bits.bit_2);
        tmp235 = simd_and(basis_bits.bit_3, tmp98);
        byte_range_80_99 = simd_andc(tmp234, tmp235);
        carryQ.cq[49] = carryout2carry(pablo_blk_Advance(sequence_e2_ba, carryQ.get_carry_in(49), tmp236));
        sequence_e2_ba_byte_range_80_99 = simd_and(tmp236, byte_range_80_99);
        struct_So.cc = simd_or(struct_So.cc, sequence_e2_ba_byte_range_80_99);
        byte_bb = simd_and(tmp231, tmp34);
        sequence_e2_bb = simd_and(byte_e2_adv, byte_bb);
        tmp237 = simd_and(basis_bits.bit_2, tmp165);
        byte_range_80_b3 = simd_andc(byte_range_80_bf, tmp237);
        carryQ.cq[50] = carryout2carry(pablo_blk_Advance(sequence_e2_bb, carryQ.get_carry_in(50), tmp238));
        sequence_e2_bb_byte_range_80_b3 = simd_and(tmp238, byte_range_80_b3);
        struct_So.cc = simd_or(struct_So.cc, sequence_e2_bb_byte_range_80_b3);
        sequence_e2_bc = simd_and(byte_e2_adv, byte_bc);
        carryQ.cq[51] = carryout2carry(pablo_blk_Advance(sequence_e2_bc, carryQ.get_carry_in(51), tmp239));
        sequence_e2_bc_byte_range_80_bf = simd_and(tmp239, byte_range_80_bf);
        struct_So.cc = simd_or(struct_So.cc, sequence_e2_bc_byte_range_80_bf);
        sequence_e2_bf = simd_and(byte_e2_adv, byte_bf);
        tmp240 = simd_or(basis_bits.bit_4, tmp84);
        tmp241 = simd_and(basis_bits.bit_3, tmp240);
        byte_range_80_95 = simd_andc(tmp234, tmp241);
        carryQ.cq[52] = carryout2carry(pablo_blk_Advance(sequence_e2_bf, carryQ.get_carry_in(52), tmp242));
        sequence_e2_bf_byte_range_80_95 = simd_and(tmp242, byte_range_80_95);
        struct_So.cc = simd_or(struct_So.cc, sequence_e2_bf_byte_range_80_95);
        byte_e3 = simd_and(tmp46, tmp66);
        carryQ.cq[53] = carryout2carry(pablo_blk_Advance(byte_e3, carryQ.get_carry_in(53), tmp243));
        sequence_e3_80 = simd_and(tmp243, byte_80);
        carryQ.cq[54] = carryout2carry(pablo_blk_Advance(byte_e3, carryQ.get_carry_in(54), byte_e3_adv));
        tmp244 = simd_and(tmp212, tmp76);
        tmp245 = simd_andc(basis_bits.bit_6, tmp4);
        tmp246 = simd_and(tmp208, tmp245);
        tmp247 = simd_or(tmp244, tmp246);
        tmp248 = simd_or(tmp247, byte_a0);
        tmp249 = simd_and(tmp231, tmp122);
        tmp250 = simd_or(tmp248, tmp249);
        tmp251 = simd_and(tmp231, tmp31);
        cc_range_3004_303e_3 = simd_or(tmp250, tmp251);
        carryQ.cq[55] = carryout2carry(pablo_blk_Advance(sequence_e3_80, carryQ.get_carry_in(55), sequence_e3_80_adv));
        tmp252 = simd_and(sequence_e3_80_adv, cc_range_3004_303e_3);
        struct_So.cc = simd_or(struct_So.cc, tmp252);
        sequence_e3_86 = simd_and(byte_e3_adv, byte_86);
        tmp253 = simd_andc(tmp111, tmp240);
        cc_range_3190_3196_3 = simd_andc(tmp208, tmp253);
        carryQ.cq[56] = carryout2carry(pablo_blk_Advance(sequence_e3_86, carryQ.get_carry_in(56), sequence_e3_86_adv));
        tmp254 = simd_and(sequence_e3_86_adv, cc_range_3190_3196_3);
        struct_So.cc = simd_or(struct_So.cc, tmp254);
        sequence_e3_87 = simd_and(byte_e3_adv, byte_87);
        tmp255 = simd_and(basis_bits.bit_2, tmp125);
        byte_range_80_a3 = simd_andc(byte_range_80_bf, tmp255);
        carryQ.cq[57] = carryout2carry(pablo_blk_Advance(sequence_e3_87, carryQ.get_carry_in(57), sequence_e3_87_adv));
        tmp256 = simd_and(sequence_e3_87_adv, byte_range_80_a3);
        struct_So.cc = simd_or(struct_So.cc, tmp256);
        byte_88 = simd_and(tmp212, tmp30);
        sequence_e3_88 = simd_and(byte_e3_adv, byte_88);
        tmp257 = simd_and(basis_bits.bit_3, tmp44);
        tmp258 = simd_andc(tmp234, tmp257);
        tmp259 = simd_and(byte_range_80_bf, basis_bits.bit_2);
        tmp260 = simd_and(tmp259, tmp204);
        cc_range_3200_322a_3 = simd_or(tmp258, tmp260);
        carryQ.cq[58] = carryout2carry(pablo_blk_Advance(sequence_e3_88, carryQ.get_carry_in(58), sequence_e3_88_adv));
        tmp261 = simd_and(sequence_e3_88_adv, cc_range_3200_322a_3);
        struct_So.cc = simd_or(struct_So.cc, tmp261);
        byte_89 = simd_and(tmp212, tmp14);
        sequence_e3_89 = simd_and(byte_e3_adv, byte_89);
        tmp262 = simd_andc(tmp212, basis_bits.bit_4);
        tmp263 = simd_andc(tmp208, tmp23);
        tmp264 = simd_or(tmp262, tmp263);
        cc_range_3240_3260_3 = simd_or(tmp264, tmp259);
        carryQ.cq[59] = carryout2carry(pablo_blk_Advance(sequence_e3_89, carryQ.get_carry_in(59), sequence_e3_89_adv));
        tmp265 = simd_and(sequence_e3_89_adv, cc_range_3240_3260_3);
        struct_So.cc = simd_or(struct_So.cc, tmp265);
        byte_8a = simd_and(tmp212, tmp49);
        sequence_e3_8a = simd_and(byte_e3_adv, byte_8a);
        tmp266 = simd_and(basis_bits.bit_3, tmp23);
        tmp267 = simd_not(tmp266);
        tmp268 = simd_or(simd_and(basis_bits.bit_2, tmp267), simd_andc(tmp204, basis_bits.bit_2));
        byte_range_8a_b0 = simd_and(byte_range_80_bf, tmp268);
        carryQ.cq[60] = carryout2carry(pablo_blk_Advance(sequence_e3_8a, carryQ.get_carry_in(60), sequence_e3_8a_adv));
        tmp269 = simd_and(sequence_e3_8a_adv, byte_range_8a_b0);
        struct_So.cc = simd_or(struct_So.cc, tmp269);
        byte_8b = simd_and(tmp212, tmp34);
        sequence_e3_8b = simd_and(byte_e3_adv, byte_8b);
        tmp270 = simd_and(basis_bits.bit_2, tmp257);
        byte_range_80_be = simd_andc(byte_range_80_bf, tmp270);
        carryQ.cq[61] = carryout2carry(pablo_blk_Advance(sequence_e3_8b, carryQ.get_carry_in(61), sequence_e3_8b_adv));
        tmp271 = simd_and(sequence_e3_8b_adv, byte_range_80_be);
        struct_So.cc = simd_or(struct_So.cc, tmp271);
        byte_range_8c_8f = simd_and(tmp212, tmp16);
        byte_e3_byte_range_8c_8f = simd_and(byte_e3_adv, byte_range_8c_8f);
        carryQ.cq[62] = carryout2carry(pablo_blk_Advance(byte_e3_byte_range_8c_8f, carryQ.get_carry_in(62), tmp272));
        byte_e3_byte_range_8c_8f_sfx = simd_and(tmp272, byte_range_80_bf);
        struct_So.cc = simd_or(struct_So.cc, byte_e3_byte_range_8c_8f_sfx);
        byte_e4 = simd_and(tmp46, tmp76);
        byte_b7 = simd_and(tmp231, tmp47);
        carryQ.cq[63] = carryout2carry(pablo_blk_Advance(byte_e4, carryQ.get_carry_in(63), tmp273));
        sequence_e4_b7 = simd_and(tmp273, byte_b7);
        carryQ.cq[64] = carryout2carry(pablo_blk_Advance(byte_e4, carryQ.get_carry_in(64), byte_e4_adv));
        carryQ.cq[65] = carryout2carry(pablo_blk_Advance(sequence_e4_b7, carryQ.get_carry_in(65), sequence_e4_b7_adv));
        tmp274 = simd_and(sequence_e4_b7_adv, byte_range_80_bf);
        struct_So.cc = simd_or(struct_So.cc, tmp274);
        byte_ea = simd_and(tmp46, tmp49);
        carryQ.cq[66] = carryout2carry(pablo_blk_Advance(byte_ea, carryQ.get_carry_in(66), tmp275));
        sequence_ea_92 = simd_and(tmp275, byte_92);
        carryQ.cq[67] = carryout2carry(pablo_blk_Advance(byte_ea, carryQ.get_carry_in(67), byte_ea_adv));
        byte_range_90_bf = simd_and(byte_range_80_bf, tmp2);
        carryQ.cq[68] = carryout2carry(pablo_blk_Advance(sequence_ea_92, carryQ.get_carry_in(68), sequence_ea_92_adv));
        tmp276 = simd_and(sequence_ea_92_adv, byte_range_90_bf);
        struct_So.cc = simd_or(struct_So.cc, tmp276);
        sequence_ea_93 = simd_and(byte_ea_adv, byte_93);
        byte_range_80_86 = simd_andc(tmp262, tmp88);
        carryQ.cq[69] = carryout2carry(pablo_blk_Advance(sequence_ea_93, carryQ.get_carry_in(69), sequence_ea_93_adv));
        tmp277 = simd_and(sequence_ea_93_adv, byte_range_80_86);
        struct_So.cc = simd_or(struct_So.cc, tmp277);
        sequence_ea_a0 = simd_and(byte_ea_adv, byte_a0);
        tmp278 = simd_and(tmp226, tmp12);
        tmp279 = simd_or(tmp278, tmp249);
        tmp280 = simd_and(tmp231, tmp14);
        cc_range_a828_a839_3 = simd_or(tmp279, tmp280);
        carryQ.cq[70] = carryout2carry(pablo_blk_Advance(sequence_ea_a0, carryQ.get_carry_in(70), sequence_ea_a0_adv));
        tmp281 = simd_and(sequence_ea_a0_adv, cc_range_a828_a839_3);
        struct_So.cc = simd_or(struct_So.cc, tmp281);
        byte_a9 = simd_and(tmp226, tmp14);
        sequence_ea_a9 = simd_and(byte_ea_adv, byte_a9);
        tmp282 = simd_or(simd_and(basis_bits.bit_4, tmp142), simd_andc(tmp88, basis_bits.bit_4));
        byte_range_b7_b9 = simd_and(tmp231, tmp282);
        carryQ.cq[71] = carryout2carry(pablo_blk_Advance(sequence_ea_a9, carryQ.get_carry_in(71), sequence_ea_a9_adv));
        tmp283 = simd_and(sequence_ea_a9_adv, byte_range_b7_b9);
        struct_So.cc = simd_or(struct_So.cc, tmp283);
        byte_ef = simd_and(tmp46, tmp44);
        carryQ.cq[72] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(72), tmp284));
        sequence_ef_b7 = simd_and(tmp284, byte_b7);
        carryQ.cq[73] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(73), byte_ef_adv));
        byte_bd = simd_and(tmp231, tmp51);
        carryQ.cq[74] = carryout2carry(pablo_blk_Advance(sequence_ef_b7, carryQ.get_carry_in(74), sequence_ef_b7_adv));
        tmp285 = simd_and(sequence_ef_b7_adv, byte_bd);
        struct_So.cc = simd_or(struct_So.cc, tmp285);
        sequence_ef_bf = simd_and(byte_ef_adv, byte_bf);
        tmp286 = simd_or(tmp10, tmp12);
        tmp287 = simd_andc(tmp286, tmp22);
        tmp288 = simd_and(tmp226, tmp287);
        tmp289 = simd_and(tmp226, tmp16);
        tmp290 = simd_and(tmp289, tmp41);
        tmp291 = simd_or(tmp288, tmp290);
        tmp292 = simd_and(tmp231, tmp138);
        cc_range_ffe4_fffc_3 = simd_or(tmp291, tmp292);
        carryQ.cq[75] = carryout2carry(pablo_blk_Advance(sequence_ef_bf, carryQ.get_carry_in(75), sequence_ef_bf_adv));
        tmp293 = simd_and(sequence_ef_bf_adv, cc_range_ffe4_fffc_3);
        struct_So.cc = simd_or(struct_So.cc, tmp293);
        tmp294 = simd_and(tmp1, tmp20);
        byte_f0 = simd_andc(tmp294, tmp23);
        carryQ.cq[76] = carryout2carry(pablo_blk_Advance(byte_f0, carryQ.get_carry_in(76), tmp295));
        sequence_f0_90 = simd_and(tmp295, byte_90);
        carryQ.cq[77] = carryout2carry(pablo_blk_Advance(byte_f0, carryQ.get_carry_in(77), byte_f0_adv));
        carryQ.cq[78] = carryout2carry(pablo_blk_Advance(sequence_f0_90, carryQ.get_carry_in(78), tmp296));
        sequence_f0_90_84 = simd_and(tmp296, byte_84);
        carryQ.cq[79] = carryout2carry(pablo_blk_Advance(sequence_f0_90, carryQ.get_carry_in(79), sequence_f0_90_adv));
        byte_range_b7_bf = simd_and(tmp231, tmp197);
        carryQ.cq[80] = carryout2carry(pablo_blk_Advance(sequence_f0_90_84, carryQ.get_carry_in(80), sequence_f0_90_84_adv));
        tmp297 = simd_and(sequence_f0_90_84_adv, byte_range_b7_bf);
        struct_So.cc = simd_or(struct_So.cc, tmp297);
        sequence_f0_90_85 = simd_and(sequence_f0_90_adv, byte_85);
        tmp298 = simd_and(tmp231, basis_bits.bit_4);
        byte_range_b9_bf = simd_and(tmp298, tmp53);
        carryQ.cq[81] = carryout2carry(pablo_blk_Advance(sequence_f0_90_85, carryQ.get_carry_in(81), sequence_f0_90_85_adv));
        tmp299 = simd_and(sequence_f0_90_85_adv, byte_range_b9_bf);
        struct_So.cc = simd_or(struct_So.cc, tmp299);
        sequence_f0_90_86 = simd_and(sequence_f0_90_adv, byte_86);
        tmp300 = simd_andc(tmp212, tmp98);
        tmp301 = simd_andc(tmp208, tmp16);
        cc_range_10180_10190_4 = simd_or(tmp300, tmp301);
        carryQ.cq[82] = carryout2carry(pablo_blk_Advance(sequence_f0_90_86, carryQ.get_carry_in(82), sequence_f0_90_86_adv));
        tmp302 = simd_and(sequence_f0_90_86_adv, cc_range_10180_10190_4);
        struct_So.cc = simd_or(struct_So.cc, tmp302);
        sequence_f0_90_87 = simd_and(sequence_f0_90_adv, byte_87);
        tmp303 = simd_and(tmp16, tmp22);
        tmp304 = simd_and(basis_bits.bit_3, tmp303);
        tmp305 = simd_not(tmp304);
        tmp306 = simd_or(simd_and(basis_bits.bit_2, tmp305), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
        byte_range_90_bc = simd_and(byte_range_80_bf, tmp306);
        carryQ.cq[83] = carryout2carry(pablo_blk_Advance(sequence_f0_90_87, carryQ.get_carry_in(83), sequence_f0_90_87_adv));
        tmp307 = simd_and(sequence_f0_90_87_adv, byte_range_90_bc);
        struct_So.cc = simd_or(struct_So.cc, tmp307);
        sequence_f0_9d = simd_and(byte_f0_adv, byte_9d);
        tmp308 = simd_andc(tmp212, tmp4);
        byte_range_80_82 = simd_andc(tmp308, tmp33);
        carryQ.cq[84] = carryout2carry(pablo_blk_Advance(sequence_f0_9d, carryQ.get_carry_in(84), tmp309));
        sequence_f0_9d_byte_range_80_82 = simd_and(tmp309, byte_range_80_82);
        carryQ.cq[85] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_byte_range_80_82, carryQ.get_carry_in(85), tmp310));
        sequence_f0_9d_byte_range_80_82_sfx = simd_and(tmp310, byte_range_80_bf);
        struct_So.cc = simd_or(struct_So.cc, sequence_f0_9d_byte_range_80_82_sfx);
        byte_83 = simd_and(tmp212, tmp66);
        carryQ.cq[86] = carryout2carry(pablo_blk_Advance(sequence_f0_9d, carryQ.get_carry_in(86), sequence_f0_9d_adv));
        sequence_f0_9d_83 = simd_and(sequence_f0_9d_adv, byte_83);
        tmp311 = simd_and(basis_bits.bit_2, tmp241);
        byte_range_80_b5 = simd_andc(byte_range_80_bf, tmp311);
        carryQ.cq[87] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_83, carryQ.get_carry_in(87), tmp312));
        sequence_f0_9d_83_byte_range_80_b5 = simd_and(tmp312, byte_range_80_b5);
        struct_So.cc = simd_or(struct_So.cc, sequence_f0_9d_83_byte_range_80_b5);
        sequence_f0_9d_84 = simd_and(sequence_f0_9d_adv, byte_84);
        carryQ.cq[88] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_84, carryQ.get_carry_in(88), tmp313));
        sequence_f0_9d_84_byte_range_80_a6 = simd_and(tmp313, byte_range_80_a6);
        struct_So.cc = simd_or(struct_So.cc, sequence_f0_9d_84_byte_range_80_a6);
        sequence_f0_9d_85 = simd_and(sequence_f0_9d_adv, byte_85);
        tmp314 = simd_or(basis_bits.bit_3, tmp167);
        tmp315 = simd_and(basis_bits.bit_2, tmp314);
        byte_range_80_a4 = simd_andc(byte_range_80_bf, tmp315);
        carryQ.cq[89] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_85, carryQ.get_carry_in(89), tmp316));
        sequence_f0_9d_85_byte_range_80_a4 = simd_and(tmp316, byte_range_80_a4);
        struct_So.cc = simd_or(struct_So.cc, sequence_f0_9d_85_byte_range_80_a4);
        sequence_f0_9d_86 = simd_and(sequence_f0_9d_adv, byte_86);
        tmp317 = simd_not(tmp22);
        tmp318 = simd_or(simd_and(basis_bits.bit_5, tmp317), simd_andc(tmp33, basis_bits.bit_5));
        byte_range_83_84 = simd_and(tmp262, tmp318);
        carryQ.cq[90] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_86, carryQ.get_carry_in(90), tmp319));
        sequence_f0_9d_86_byte_range_83_84 = simd_and(tmp319, byte_range_83_84);
        struct_So.cc = simd_or(struct_So.cc, sequence_f0_9d_86_byte_range_83_84);
        sequence_f0_9d_87 = simd_and(sequence_f0_9d_adv, byte_87);
        byte_range_80_9d = simd_andc(tmp234, tmp101);
        carryQ.cq[91] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_87, carryQ.get_carry_in(91), tmp320));
        sequence_f0_9d_87_byte_range_80_9d = simd_and(tmp320, byte_range_80_9d);
        struct_So.cc = simd_or(struct_So.cc, sequence_f0_9d_87_byte_range_80_9d);
        sequence_f0_9d_88 = simd_and(sequence_f0_9d_adv, byte_88);
        carryQ.cq[92] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_88, carryQ.get_carry_in(92), tmp321));
        sequence_f0_9d_88_byte_range_80_bf = simd_and(tmp321, byte_range_80_bf);
        struct_So.cc = simd_or(struct_So.cc, sequence_f0_9d_88_byte_range_80_bf);
        sequence_f0_9d_89 = simd_and(sequence_f0_9d_adv, byte_89);
        byte_range_80_81 = simd_andc(tmp212, tmp111);
        carryQ.cq[93] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_89, carryQ.get_carry_in(93), tmp322));
        sequence_f0_9d_89_byte_range_80_81 = simd_and(tmp322, byte_range_80_81);
        struct_So.cc = simd_or(struct_So.cc, sequence_f0_9d_89_byte_range_80_81);
        sequence_f0_9d_8c = simd_and(sequence_f0_9d_adv, byte_8c);
        carryQ.cq[94] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_8c, carryQ.get_carry_in(94), tmp323));
        sequence_f0_9d_8c_byte_range_80_bf = simd_and(tmp323, byte_range_80_bf);
        struct_So.cc = simd_or(struct_So.cc, sequence_f0_9d_8c_byte_range_80_bf);
        sequence_f0_9d_8d = simd_and(sequence_f0_9d_adv, byte_8d);
        byte_range_80_96 = simd_andc(tmp234, tmp209);
        carryQ.cq[95] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_8d, carryQ.get_carry_in(95), tmp324));
        sequence_f0_9d_8d_byte_range_80_96 = simd_and(tmp324, byte_range_80_96);
        struct_So.cc = simd_or(struct_So.cc, sequence_f0_9d_8d_byte_range_80_96);
        byte_9f = simd_and(tmp208, tmp44);
        sequence_f0_9f = simd_and(byte_f0_adv, byte_9f);
        carryQ.cq[96] = carryout2carry(pablo_blk_Advance(sequence_f0_9f, carryQ.get_carry_in(96), tmp325));
        sequence_f0_9f_80 = simd_and(tmp325, byte_80);
        carryQ.cq[97] = carryout2carry(pablo_blk_Advance(sequence_f0_9f, carryQ.get_carry_in(97), sequence_f0_9f_adv));
        tmp326 = simd_and(basis_bits.bit_2, tmp173);
        tmp327 = simd_andc(tmp326, tmp20);
        cc_range_1f000_1f030_4 = simd_andc(byte_range_80_bf, tmp327);
        carryQ.cq[98] = carryout2carry(pablo_blk_Advance(sequence_f0_9f_80, carryQ.get_carry_in(98), sequence_f0_9f_80_adv));
        tmp328 = simd_and(sequence_f0_9f_80_adv, cc_range_1f000_1f030_4);
        struct_So.cc = simd_or(struct_So.cc, tmp328);
        byte_81 = simd_and(tmp212, tmp59);
        sequence_f0_9f_81 = simd_and(sequence_f0_9f_adv, byte_81);
        carryQ.cq[99] = carryout2carry(pablo_blk_Advance(sequence_f0_9f_81, carryQ.get_carry_in(99), sequence_f0_9f_81_adv));
        tmp329 = simd_and(sequence_f0_9f_81_adv, byte_range_80_bf);
        struct_So.cc = simd_or(struct_So.cc, tmp329);
        sequence_f0_9f_82 = simd_and(sequence_f0_9f_adv, byte_82);
        tmp330 = simd_andc(tmp234, tmp165);
        tmp331 = simd_and(basis_bits.bit_4, tmp88);
        tmp332 = simd_andc(tmp226, tmp331);
        tmp333 = simd_or(tmp330, tmp332);
        tmp334 = simd_not(tmp88);
        tmp335 = simd_or(simd_and(basis_bits.bit_4, tmp334), simd_andc(tmp53, basis_bits.bit_4));
        tmp336 = simd_and(tmp231, tmp335);
        cc_range_1f080_1f0b1_4 = simd_or(tmp333, tmp336);
        carryQ.cq[100] = carryout2carry(pablo_blk_Advance(sequence_f0_9f_82, carryQ.get_carry_in(100), sequence_f0_9f_82_adv));
        tmp337 = simd_and(sequence_f0_9f_82_adv, cc_range_1f080_1f0b1_4);
        struct_So.cc = simd_or(struct_So.cc, tmp337);
        sequence_f0_9f_83 = simd_and(sequence_f0_9f_adv, byte_83);
        tmp338 = simd_or(basis_bits.bit_4, tmp53);
        tmp339 = simd_andc(tmp2, tmp26);
        tmp340 = simd_andc(byte_range_80_bf, tmp339);
        cc_range_1f0c1_1f0d1_4 = simd_and(tmp338, tmp340);
        carryQ.cq[101] = carryout2carry(pablo_blk_Advance(sequence_f0_9f_83, carryQ.get_carry_in(101), sequence_f0_9f_83_adv));
        tmp341 = simd_and(sequence_f0_9f_83_adv, cc_range_1f0c1_1f0d1_4);
        struct_So.cc = simd_or(struct_So.cc, tmp341);
        sequence_f0_9f_84 = simd_and(sequence_f0_9f_adv, byte_84);
        tmp342 = simd_not(tmp157);
        tmp343 = simd_or(simd_and(basis_bits.bit_2, tmp342), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
        tmp344 = simd_or(tmp343, tmp20);
        cc_range_1f110_1f130_4 = simd_and(byte_range_80_bf, tmp344);
        carryQ.cq[102] = carryout2carry(pablo_blk_Advance(sequence_f0_9f_84, carryQ.get_carry_in(102), sequence_f0_9f_84_adv));
        tmp345 = simd_and(sequence_f0_9f_84_adv, cc_range_1f110_1f130_4);
        struct_So.cc = simd_or(struct_So.cc, tmp345);
        sequence_f0_9f_85 = simd_and(sequence_f0_9f_adv, byte_85);
        cc_range_1f140_1f170_4 = simd_andc(byte_range_80_bf, tmp327);
        carryQ.cq[103] = carryout2carry(pablo_blk_Advance(sequence_f0_9f_85, carryQ.get_carry_in(103), sequence_f0_9f_85_adv));
        tmp346 = simd_and(sequence_f0_9f_85_adv, cc_range_1f140_1f170_4);
        struct_So.cc = simd_or(struct_So.cc, tmp346);
        sequence_f0_9f_86 = simd_and(sequence_f0_9f_adv, byte_86);
        byte_range_80_9a = simd_andc(tmp234, tmp188);
        carryQ.cq[104] = carryout2carry(pablo_blk_Advance(sequence_f0_9f_86, carryQ.get_carry_in(104), sequence_f0_9f_86_adv));
        tmp347 = simd_and(sequence_f0_9f_86_adv, byte_range_80_9a);
        struct_So.cc = simd_or(struct_So.cc, tmp347);
        sequence_f0_9f_87 = simd_and(sequence_f0_9f_adv, byte_87);
        tmp348 = simd_or(basis_bits.bit_3, tmp240);
        byte_range_a6_bf = simd_and(tmp259, tmp348);
        carryQ.cq[105] = carryout2carry(pablo_blk_Advance(sequence_f0_9f_87, carryQ.get_carry_in(105), sequence_f0_9f_87_adv));
        tmp349 = simd_and(sequence_f0_9f_87_adv, byte_range_a6_bf);
        struct_So.cc = simd_or(struct_So.cc, tmp349);
        sequence_f0_9f_88 = simd_and(sequence_f0_9f_adv, byte_88);
        tmp350 = simd_not(tmp188);
        tmp351 = simd_or(simd_and(basis_bits.bit_2, tmp350), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
        tmp352 = simd_and(byte_range_80_bf, tmp351);
        cc_range_1f200_1f210_4 = simd_or(byte_range_80_82, tmp352);
        carryQ.cq[106] = carryout2carry(pablo_blk_Advance(sequence_f0_9f_88, carryQ.get_carry_in(106), sequence_f0_9f_88_adv));
        tmp353 = simd_and(sequence_f0_9f_88_adv, cc_range_1f200_1f210_4);
        struct_So.cc = simd_or(struct_So.cc, tmp353);
        sequence_f0_9f_89 = simd_and(sequence_f0_9f_adv, byte_89);
        tmp354 = simd_and(basis_bits.bit_4, tmp53);
        tmp355 = simd_andc(tmp212, tmp354);
        tmp356 = simd_andc(tmp208, tmp111);
        cc_range_1f240_1f250_4 = simd_or(tmp355, tmp356);
        carryQ.cq[107] = carryout2carry(pablo_blk_Advance(sequence_f0_9f_89, carryQ.get_carry_in(107), sequence_f0_9f_89_adv));
        tmp357 = simd_and(sequence_f0_9f_89_adv, cc_range_1f240_1f250_4);
        struct_So.cc = simd_or(struct_So.cc, tmp357);
        sequence_f0_9f_8c = simd_and(sequence_f0_9f_adv, byte_8c);
        tmp358 = simd_and(basis_bits.bit_2, tmp218);
        tmp359 = simd_andc(byte_range_80_bf, tmp358);
        tmp360 = simd_andc(tmp231, basis_bits.bit_4);
        tmp361 = simd_andc(tmp360, tmp84);
        tmp362 = simd_or(tmp359, tmp361);
        cc_range_1f300_1f337_4 = simd_or(tmp362, byte_range_b7_bf);
        carryQ.cq[108] = carryout2carry(pablo_blk_Advance(sequence_f0_9f_8c, carryQ.get_carry_in(108), sequence_f0_9f_8c_adv));
        tmp363 = simd_and(sequence_f0_9f_8c_adv, cc_range_1f300_1f337_4);
        struct_So.cc = simd_or(struct_So.cc, tmp363);
        sequence_f0_9f_8d = simd_and(sequence_f0_9f_adv, byte_8d);
        tmp364 = simd_and(basis_bits.bit_2, tmp304);
        byte_range_80_bc = simd_andc(byte_range_80_bf, tmp364);
        carryQ.cq[109] = carryout2carry(pablo_blk_Advance(sequence_f0_9f_8d, carryQ.get_carry_in(109), sequence_f0_9f_8d_adv));
        tmp365 = simd_and(sequence_f0_9f_8d_adv, byte_range_80_bc);
        struct_So.cc = simd_or(struct_So.cc, tmp365);
        sequence_f0_9f_8e = simd_and(sequence_f0_9f_adv, byte_8e);
        cc_range_1f380_1f3a0_4 = simd_or(tmp330, tmp259);
        carryQ.cq[110] = carryout2carry(pablo_blk_Advance(sequence_f0_9f_8e, carryQ.get_carry_in(110), sequence_f0_9f_8e_adv));
        tmp366 = simd_and(sequence_f0_9f_8e_adv, cc_range_1f380_1f3a0_4);
        struct_So.cc = simd_or(struct_So.cc, tmp366);
        sequence_f0_9f_8f = simd_and(sequence_f0_9f_adv, byte_8f);
        tmp367 = simd_andc(tmp262, tmp86);
        tmp368 = simd_or(simd_and(basis_bits.bit_4, tmp104), simd_andc(tmp84, basis_bits.bit_4));
        tmp369 = simd_and(tmp212, tmp368);
        tmp370 = simd_or(tmp367, tmp369);
        tmp371 = simd_andc(tmp259, tmp266);
        cc_range_1f3c0_1f3e0_4 = simd_or(tmp370, tmp371);
        carryQ.cq[111] = carryout2carry(pablo_blk_Advance(sequence_f0_9f_8f, carryQ.get_carry_in(111), sequence_f0_9f_8f_adv));
        tmp372 = simd_and(sequence_f0_9f_8f_adv, cc_range_1f3c0_1f3e0_4);
        struct_So.cc = simd_or(struct_So.cc, tmp372);
        sequence_f0_9f_90 = simd_and(sequence_f0_9f_adv, byte_90);
        carryQ.cq[112] = carryout2carry(pablo_blk_Advance(sequence_f0_9f_90, carryQ.get_carry_in(112), sequence_f0_9f_90_adv));
        tmp373 = simd_and(sequence_f0_9f_90_adv, byte_range_80_be);
        struct_So.cc = simd_or(struct_So.cc, tmp373);
        sequence_f0_9f_91 = simd_and(sequence_f0_9f_adv, byte_91);
        tmp374 = simd_andc(tmp212, tmp23);
        tmp375 = simd_or(basis_bits.bit_3, tmp111);
        tmp376 = simd_or(basis_bits.bit_2, tmp375);
        tmp377 = simd_and(byte_range_80_bf, tmp376);
        cc_range_1f440_1f442_4 = simd_or(tmp374, tmp377);
        carryQ.cq[113] = carryout2carry(pablo_blk_Advance(sequence_f0_9f_91, carryQ.get_carry_in(113), sequence_f0_9f_91_adv));
        tmp378 = simd_and(sequence_f0_9f_91_adv, cc_range_1f440_1f442_4);
        struct_So.cc = simd_or(struct_So.cc, tmp378);
        sequence_f0_9f_92 = simd_and(sequence_f0_9f_adv, byte_92);
        carryQ.cq[114] = carryout2carry(pablo_blk_Advance(sequence_f0_9f_92, carryQ.get_carry_in(114), sequence_f0_9f_92_adv));
        tmp379 = simd_and(sequence_f0_9f_92_adv, byte_range_80_bf);
        struct_So.cc = simd_or(struct_So.cc, tmp379);
        sequence_f0_9f_93 = simd_and(sequence_f0_9f_adv, byte_93);
        tmp380 = simd_and(basis_bits.bit_3, basis_bits.bit_4);
        tmp381 = simd_and(basis_bits.bit_2, tmp380);
        tmp382 = simd_andc(byte_range_80_bf, tmp381);
        tmp383 = simd_or(simd_and(basis_bits.bit_5, tmp317), simd_andc(tmp22, basis_bits.bit_5));
        tmp384 = simd_and(tmp298, tmp383);
        cc_range_1f4c0_1f4f9_4 = simd_or(tmp382, tmp384);
        carryQ.cq[115] = carryout2carry(pablo_blk_Advance(sequence_f0_9f_93, carryQ.get_carry_in(115), sequence_f0_9f_93_adv));
        tmp385 = simd_and(sequence_f0_9f_93_adv, cc_range_1f4c0_1f4f9_4);
        struct_So.cc = simd_or(struct_So.cc, tmp385);
        byte_94 = simd_and(tmp208, tmp76);
        sequence_f0_9f_94 = simd_and(sequence_f0_9f_adv, byte_94);
        tmp386 = simd_and(basis_bits.bit_2, tmp101);
        byte_range_80_bd = simd_andc(byte_range_80_bf, tmp386);
        carryQ.cq[116] = carryout2carry(pablo_blk_Advance(sequence_f0_9f_94, carryQ.get_carry_in(116), sequence_f0_9f_94_adv));
        tmp387 = simd_and(sequence_f0_9f_94_adv, byte_range_80_bd);
        struct_So.cc = simd_or(struct_So.cc, tmp387);
        byte_95 = simd_and(tmp208, tmp61);
        sequence_f0_9f_95 = simd_and(sequence_f0_9f_adv, byte_95);
        tmp388 = simd_not(tmp221);
        tmp389 = simd_or(simd_and(basis_bits.bit_2, tmp388), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
        tmp390 = simd_and(byte_range_80_bf, tmp389);
        cc_range_1f540_1f550_4 = simd_or(tmp308, tmp390);
        carryQ.cq[117] = carryout2carry(pablo_blk_Advance(sequence_f0_9f_95, carryQ.get_carry_in(117), sequence_f0_9f_95_adv));
        tmp391 = simd_and(sequence_f0_9f_95_adv, cc_range_1f540_1f550_4);
        struct_So.cc = simd_or(struct_So.cc, tmp391);
        sequence_f0_9f_97 = simd_and(sequence_f0_9f_adv, byte_97);
        byte_range_bb_bf = simd_and(tmp298, tmp55);
        carryQ.cq[118] = carryout2carry(pablo_blk_Advance(sequence_f0_9f_97, carryQ.get_carry_in(118), sequence_f0_9f_97_adv));
        tmp392 = simd_and(sequence_f0_9f_97_adv, byte_range_bb_bf);
        struct_So.cc = simd_or(struct_So.cc, tmp392);
        sequence_f0_9f_98 = simd_and(sequence_f0_9f_adv, byte_98);
        carryQ.cq[119] = carryout2carry(pablo_blk_Advance(sequence_f0_9f_98, carryQ.get_carry_in(119), sequence_f0_9f_98_adv));
        tmp393 = simd_and(sequence_f0_9f_98_adv, byte_range_80_bf);
        struct_So.cc = simd_or(struct_So.cc, tmp393);
        sequence_f0_9f_99 = simd_and(sequence_f0_9f_adv, byte_99);
        tmp394 = simd_andc(tmp23, tmp167);
        cc_range_1f640_1f645_4 = simd_andc(tmp212, tmp394);
        carryQ.cq[120] = carryout2carry(pablo_blk_Advance(sequence_f0_9f_99, carryQ.get_carry_in(120), sequence_f0_9f_99_adv));
        tmp395 = simd_and(sequence_f0_9f_99_adv, cc_range_1f640_1f645_4);
        struct_So.cc = simd_or(struct_So.cc, tmp395);
        sequence_f0_9f_9a = simd_and(sequence_f0_9f_adv, byte_9a);
        carryQ.cq[121] = carryout2carry(pablo_blk_Advance(sequence_f0_9f_9a, carryQ.get_carry_in(121), sequence_f0_9f_9a_adv));
        tmp396 = simd_and(sequence_f0_9f_9a_adv, byte_range_80_bf);
        struct_So.cc = simd_or(struct_So.cc, tmp396);
        byte_9b = simd_and(tmp208, tmp34);
        sequence_f0_9f_9b = simd_and(sequence_f0_9f_adv, byte_9b);
        byte_range_80_85 = simd_andc(tmp262, tmp84);
        carryQ.cq[122] = carryout2carry(pablo_blk_Advance(sequence_f0_9f_9b, carryQ.get_carry_in(122), sequence_f0_9f_9b_adv));
        tmp397 = simd_and(sequence_f0_9f_9b_adv, byte_range_80_85);
        struct_So.cc = simd_or(struct_So.cc, tmp397);
        sequence_f0_9f_9c = simd_and(sequence_f0_9f_adv, byte_9c);
        carryQ.cq[123] = carryout2carry(pablo_blk_Advance(sequence_f0_9f_9c, carryQ.get_carry_in(123), sequence_f0_9f_9c_adv));
        tmp398 = simd_and(sequence_f0_9f_9c_adv, byte_range_80_bf);
        struct_So.cc = simd_or(struct_So.cc, tmp398);
        sequence_f0_9f_9d = simd_and(sequence_f0_9f_adv, byte_9d);
        carryQ.cq[124] = carryout2carry(pablo_blk_Advance(sequence_f0_9f_9d, carryQ.get_carry_in(124), sequence_f0_9f_9d_adv));
        tmp399 = simd_and(sequence_f0_9f_9d_adv, byte_range_80_b3);
        struct_So.cc = simd_or(struct_So.cc, tmp399);
  }
  CarryArray<125, 0> carryQ;
  };

  struct Sm {
  Sm() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Sm & struct_Sm) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, tmp7, tmp8, tmp9, tmp10, tmp11;
		BitBlock tmp12, tmp13, tmp14, tmp15, tmp16, tmp17, tmp18, tmp19, tmp20, tmp21;
		BitBlock tmp22, cc_range_2b_7e_1, tmp23, tmp24, tmp25, tmp26, tmp27, byte_c2;
		BitBlock tmp28, tmp29, tmp30, tmp31, tmp32, tmp33, tmp34, cc_range_ac_b1_2;
		BitBlock byte_c2_adv, tmp35, tmp36, byte_c3, tmp37, tmp38, tmp39;
		BitBlock cc_range_d7_f7_2, byte_c3_adv, tmp40, tmp41, byte_cf, tmp42, byte_b6;
		BitBlock byte_cf_adv, tmp43, tmp44, tmp45, tmp46, byte_d8, tmp47, tmp48, tmp49;
		BitBlock tmp50, tmp51, byte_range_86_88, byte_d8_adv, tmp52, tmp53, byte_e2;
		BitBlock byte_81, tmp54, sequence_e2_81, byte_e2_adv, tmp55, tmp56, tmp57;
		BitBlock tmp58, tmp59, tmp60, tmp61, tmp62, tmp63, cc_range_2044_207a_3;
		BitBlock sequence_e2_81_adv, tmp64, byte_82, sequence_e2_82, tmp65;
		BitBlock byte_range_8a_8c, sequence_e2_82_adv, tmp66, byte_84, sequence_e2_84;
		BitBlock byte_98, sequence_e2_84_adv, tmp67, tmp68, byte_85, sequence_e2_85;
		BitBlock tmp69, tmp70, tmp71, tmp72, cc_range_2140_214b_3, sequence_e2_85_adv;
		BitBlock tmp73, byte_86, sequence_e2_86, tmp74, tmp75, tmp76, tmp77, tmp78;
		BitBlock tmp79, tmp80, tmp81, tmp82, tmp83, tmp84, tmp85, tmp86;
		BitBlock cc_range_2190_21ae_3, sequence_e2_86_adv, tmp87, byte_87;
		BitBlock sequence_e2_87, tmp88, tmp89, tmp90, tmp91, tmp92, tmp93;
		BitBlock cc_range_21ce_21f4_3, sequence_e2_87_adv, tmp94, byte_range_88_8b;
		BitBlock byte_e2_byte_range_88_8b, byte_range_80_bf, tmp95;
		BitBlock byte_e2_byte_range_88_8b_sfx, tmp96, byte_8c, sequence_e2_8c, tmp97;
		BitBlock tmp98, byte_range_a0_a1, tmp99, sequence_e2_8c_byte_range_a0_a1;
		BitBlock tmp100, byte_8d, sequence_e2_8d, tmp101, byte_bc, tmp102;
		BitBlock sequence_e2_8d_bc, byte_8e, sequence_e2_8e, tmp103, tmp104, tmp105;
		BitBlock tmp106, tmp107, tmp108, byte_range_9b_b3, tmp109;
		BitBlock sequence_e2_8e_byte_range_9b_b3, byte_8f, sequence_e2_8f, tmp110;
		BitBlock tmp111, tmp112, tmp113, byte_range_9c_a1, tmp114;
		BitBlock sequence_e2_8f_byte_range_9c_a1, tmp115, byte_96, sequence_e2_96;
		BitBlock byte_b7, tmp116, sequence_e2_96_b7, byte_97, sequence_e2_97, tmp117;
		BitBlock sequence_e2_97_81, tmp118, byte_99, sequence_e2_99, byte_af, tmp119;
		BitBlock sequence_e2_99_af, byte_9f, sequence_e2_9f, tmp120, byte_range_80_84;
		BitBlock tmp121, sequence_e2_9f_byte_range_80_84, byte_a4, sequence_e2_a4;
		BitBlock tmp122, sequence_e2_a4_byte_range_80_bf, byte_a6, sequence_e2_a6;
		BitBlock tmp123, byte_range_80_82, tmp124, sequence_e2_a6_byte_range_80_82;
		BitBlock byte_a7, sequence_e2_a7, tmp125, tmp126, byte_range_80_97, tmp127;
		BitBlock sequence_e2_a7_byte_range_80_97, byte_a8, sequence_e2_a8, tmp128;
		BitBlock sequence_e2_a8_byte_range_80_bf, byte_ac, sequence_e2_ac;
		BitBlock byte_range_b0_bf, tmp129, sequence_e2_ac_byte_range_b0_bf, byte_ad;
		BitBlock sequence_e2_ad, tmp130, sequence_e2_ad_byte_range_80_84, byte_ef;
		BitBlock tmp131, sequence_ef_ac, byte_ef_adv, byte_a9, sequence_ef_ac_adv;
		BitBlock tmp132, byte_b9, sequence_ef_b9, tmp133, tmp134, tmp135;
		BitBlock cc_range_fe62_fe64_3, sequence_ef_b9_adv, tmp136, sequence_ef_bc;
		BitBlock tmp137, tmp138, tmp139, cc_range_ff0b_ff1c_3, sequence_ef_bc_adv;
		BitBlock tmp140, byte_bd, sequence_ef_bd, tmp141, tmp142, cc_range_ff5c_ff5e_3;
		BitBlock sequence_ef_bd_adv, tmp143, byte_bf, sequence_ef_bf, tmp144, tmp145;
		BitBlock tmp146, cc_range_ffe2_ffe9_3, sequence_ef_bf_adv, tmp147, tmp148;
		BitBlock byte_f0, byte_9d, tmp149, sequence_f0_9d, byte_f0_adv, byte_9b;
		BitBlock tmp150, sequence_f0_9d_9b, sequence_f0_9d_adv, tmp151, tmp152, tmp153;
		BitBlock cc_range_1d6c1_1d6fb_4, sequence_f0_9d_9b_adv, tmp154, byte_9c;
		BitBlock sequence_f0_9d_9c, tmp155, cc_range_1d715_1d735_4;
		BitBlock sequence_f0_9d_9c_adv, tmp156, sequence_f0_9d_9d, tmp157, tmp158;
		BitBlock cc_range_1d74f_1d76f_4, sequence_f0_9d_9d_adv, tmp159, byte_9e;
		BitBlock sequence_f0_9d_9e, cc_range_1d789_1d7a9_4, sequence_f0_9d_9e_adv;
		BitBlock tmp160, sequence_f0_9d_9f, byte_83, sequence_f0_9d_9f_adv, tmp161;
		BitBlock sequence_f0_9e, byte_bb, tmp162, sequence_f0_9e_bb;
		BitBlock sequence_f0_9e_adv, byte_range_b0_b1, sequence_f0_9e_bb_adv, tmp163;




        struct_Sm.cc = simd<1>::constant<0>();
        tmp1 = simd_or(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp2, tmp1);
        tmp4 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_and(tmp4, tmp5);
        tmp7 = simd_and(tmp3, tmp6);
        tmp8 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp9 = simd_andc(tmp8, tmp1);
        tmp10 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp11 = simd_and(tmp9, tmp10);
        tmp12 = simd_andc(tmp11, tmp5);
        tmp13 = simd_or(tmp7, tmp12);
        tmp14 = simd_andc(basis_bits.bit_1, basis_bits.bit_0);
        tmp15 = simd_and(tmp14, tmp8);
        tmp16 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp17 = simd_andc(tmp10, tmp16);
        tmp18 = simd_and(tmp15, tmp17);
        tmp19 = simd_or(tmp13, tmp18);
        tmp20 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp21 = simd_and(tmp10, tmp20);
        tmp22 = simd_and(tmp15, tmp21);
        cc_range_2b_7e_1 = simd_or(tmp19, tmp22);
        struct_Sm.cc = simd_or(struct_Sm.cc, cc_range_2b_7e_1);
        tmp23 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp24 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp25 = simd_andc(tmp23, tmp24);
        tmp26 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp27 = simd_andc(tmp20, tmp26);
        byte_c2 = simd_and(tmp25, tmp27);
        tmp28 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp29 = simd_and(tmp28, tmp2);
        tmp30 = simd_and(tmp29, tmp17);
        tmp31 = simd_and(tmp28, tmp8);
        tmp32 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp33 = simd_andc(tmp32, tmp26);
        tmp34 = simd_and(tmp31, tmp33);
        cc_range_ac_b1_2 = simd_or(tmp30, tmp34);
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(byte_c2, carryQ.get_carry_in(0), byte_c2_adv));
        tmp35 = simd_and(byte_c2_adv, cc_range_ac_b1_2);
        struct_Sm.cc = simd_or(struct_Sm.cc, tmp35);
        tmp36 = simd_andc(tmp5, tmp26);
        byte_c3 = simd_and(tmp25, tmp36);
        tmp37 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp38 = simd_and(tmp37, tmp5);
        tmp39 = simd_and(tmp28, basis_bits.bit_3);
        cc_range_d7_f7_2 = simd_and(tmp38, tmp39);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(byte_c3, carryQ.get_carry_in(1), byte_c3_adv));
        tmp40 = simd_and(byte_c3_adv, cc_range_d7_f7_2);
        struct_Sm.cc = simd_or(struct_Sm.cc, tmp40);
        tmp41 = simd_and(tmp10, tmp5);
        byte_cf = simd_and(tmp25, tmp41);
        tmp42 = simd_and(tmp37, tmp20);
        byte_b6 = simd_and(tmp31, tmp42);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(byte_cf, carryQ.get_carry_in(2), byte_cf_adv));
        tmp43 = simd_and(byte_cf_adv, byte_b6);
        struct_Sm.cc = simd_or(struct_Sm.cc, tmp43);
        tmp44 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp45 = simd_and(tmp23, tmp44);
        tmp46 = simd_andc(tmp4, tmp16);
        byte_d8 = simd_and(tmp45, tmp46);
        tmp47 = simd_andc(tmp28, tmp24);
        tmp48 = simd_or(basis_bits.bit_5, tmp16);
        tmp49 = simd_not(tmp48);
        tmp50 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp51 = simd_or(simd_and(basis_bits.bit_4, tmp49), simd_andc(tmp50, basis_bits.bit_4));
        byte_range_86_88 = simd_and(tmp47, tmp51);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(byte_d8, carryQ.get_carry_in(3), byte_d8_adv));
        tmp52 = simd_and(byte_d8_adv, byte_range_86_88);
        struct_Sm.cc = simd_or(struct_Sm.cc, tmp52);
        tmp53 = simd_and(tmp23, tmp2);
        byte_e2 = simd_and(tmp53, tmp27);
        byte_81 = simd_and(tmp47, tmp33);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(4), tmp54));
        sequence_e2_81 = simd_and(tmp54, byte_81);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(5), byte_e2_adv));
        tmp55 = simd_andc(tmp37, tmp16);
        tmp56 = simd_and(tmp47, tmp55);
        tmp57 = simd_and(tmp28, tmp44);
        tmp58 = simd_and(tmp57, tmp27);
        tmp59 = simd_or(tmp56, tmp58);
        tmp60 = simd_and(tmp31, basis_bits.bit_4);
        tmp61 = simd_not(tmp16);
        tmp62 = simd_or(simd_and(basis_bits.bit_5, tmp61), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        tmp63 = simd_and(tmp60, tmp62);
        cc_range_2044_207a_3 = simd_or(tmp59, tmp63);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(sequence_e2_81, carryQ.get_carry_in(6), sequence_e2_81_adv));
        tmp64 = simd_and(sequence_e2_81_adv, cc_range_2044_207a_3);
        struct_Sm.cc = simd_or(struct_Sm.cc, tmp64);
        byte_82 = simd_and(tmp47, tmp27);
        sequence_e2_82 = simd_and(byte_e2_adv, byte_82);
        tmp65 = simd_and(tmp47, basis_bits.bit_4);
        byte_range_8a_8c = simd_and(tmp65, tmp62);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(sequence_e2_82, carryQ.get_carry_in(7), sequence_e2_82_adv));
        tmp66 = simd_and(sequence_e2_82_adv, byte_range_8a_8c);
        struct_Sm.cc = simd_or(struct_Sm.cc, tmp66);
        byte_84 = simd_and(tmp47, tmp55);
        sequence_e2_84 = simd_and(byte_e2_adv, byte_84);
        byte_98 = simd_and(tmp57, tmp46);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(sequence_e2_84, carryQ.get_carry_in(8), sequence_e2_84_adv));
        tmp67 = simd_and(sequence_e2_84_adv, byte_98);
        struct_Sm.cc = simd_or(struct_Sm.cc, tmp67);
        tmp68 = simd_and(tmp37, tmp32);
        byte_85 = simd_and(tmp47, tmp68);
        sequence_e2_85 = simd_and(byte_e2_adv, byte_85);
        tmp69 = simd_andc(tmp47, basis_bits.bit_4);
        tmp70 = simd_and(basis_bits.bit_5, tmp16);
        tmp71 = simd_andc(tmp69, tmp70);
        tmp72 = simd_and(tmp47, tmp6);
        cc_range_2140_214b_3 = simd_or(tmp71, tmp72);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(sequence_e2_85, carryQ.get_carry_in(9), sequence_e2_85_adv));
        tmp73 = simd_and(sequence_e2_85_adv, cc_range_2140_214b_3);
        struct_Sm.cc = simd_or(struct_Sm.cc, tmp73);
        byte_86 = simd_and(tmp47, tmp42);
        sequence_e2_86 = simd_and(byte_e2_adv, byte_86);
        tmp74 = simd_andc(tmp57, basis_bits.bit_4);
        tmp75 = simd_andc(tmp74, tmp70);
        tmp76 = simd_and(tmp4, basis_bits.bit_6);
        tmp77 = simd_and(tmp57, tmp76);
        tmp78 = simd_or(tmp75, tmp77);
        tmp79 = simd_or(tmp26, tmp16);
        tmp80 = simd_andc(tmp29, tmp79);
        tmp81 = simd_or(tmp78, tmp80);
        tmp82 = simd_and(tmp29, tmp36);
        tmp83 = simd_or(tmp81, tmp82);
        tmp84 = simd_and(tmp29, tmp42);
        tmp85 = simd_or(tmp83, tmp84);
        tmp86 = simd_and(tmp29, tmp21);
        cc_range_2190_21ae_3 = simd_or(tmp85, tmp86);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(sequence_e2_86, carryQ.get_carry_in(10), sequence_e2_86_adv));
        tmp87 = simd_and(sequence_e2_86_adv, cc_range_2190_21ae_3);
        struct_Sm.cc = simd_or(struct_Sm.cc, tmp87);
        byte_87 = simd_and(tmp47, tmp38);
        sequence_e2_87 = simd_and(byte_e2_adv, byte_87);
        tmp88 = simd_and(tmp10, basis_bits.bit_6);
        tmp89 = simd_and(tmp47, tmp88);
        tmp90 = simd_or(tmp89, tmp58);
        tmp91 = simd_and(tmp57, tmp55);
        tmp92 = simd_or(tmp90, tmp91);
        tmp93 = simd_and(tmp31, tmp26);
        cc_range_21ce_21f4_3 = simd_or(tmp92, tmp93);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(sequence_e2_87, carryQ.get_carry_in(11), sequence_e2_87_adv));
        tmp94 = simd_and(sequence_e2_87_adv, cc_range_21ce_21f4_3);
        struct_Sm.cc = simd_or(struct_Sm.cc, tmp94);
        byte_range_88_8b = simd_and(tmp47, tmp4);
        byte_e2_byte_range_88_8b = simd_and(byte_e2_adv, byte_range_88_8b);
        byte_range_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(byte_e2_byte_range_88_8b, carryQ.get_carry_in(12), tmp95));
        byte_e2_byte_range_88_8b_sfx = simd_and(tmp95, byte_range_80_bf);
        struct_Sm.cc = simd_or(struct_Sm.cc, byte_e2_byte_range_88_8b_sfx);
        tmp96 = simd_andc(byte_range_80_bf, tmp24);
        byte_8c = simd_and(tmp96, tmp17);
        sequence_e2_8c = simd_and(byte_e2_adv, byte_8c);
        tmp97 = simd_and(byte_range_80_bf, tmp2);
        tmp98 = simd_or(tmp26, basis_bits.bit_6);
        byte_range_a0_a1 = simd_andc(tmp97, tmp98);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(sequence_e2_8c, carryQ.get_carry_in(13), tmp99));
        sequence_e2_8c_byte_range_a0_a1 = simd_and(tmp99, byte_range_a0_a1);
        struct_Sm.cc = simd_or(struct_Sm.cc, sequence_e2_8c_byte_range_a0_a1);
        tmp100 = simd_and(tmp10, tmp32);
        byte_8d = simd_and(tmp96, tmp100);
        sequence_e2_8d = simd_and(byte_e2_adv, byte_8d);
        tmp101 = simd_and(byte_range_80_bf, tmp8);
        byte_bc = simd_and(tmp101, tmp17);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(sequence_e2_8d, carryQ.get_carry_in(14), tmp102));
        sequence_e2_8d_bc = simd_and(tmp102, byte_bc);
        byte_8e = simd_and(tmp96, tmp21);
        sequence_e2_8e = simd_and(byte_e2_adv, byte_8e);
        tmp103 = simd_and(basis_bits.bit_3, tmp26);
        tmp104 = simd_not(tmp103);
        tmp105 = simd_or(basis_bits.bit_5, tmp5);
        tmp106 = simd_and(basis_bits.bit_4, tmp105);
        tmp107 = simd_and(basis_bits.bit_3, tmp106);
        tmp108 = simd_or(simd_and(basis_bits.bit_2, tmp104), simd_andc(tmp107, basis_bits.bit_2));
        byte_range_9b_b3 = simd_and(byte_range_80_bf, tmp108);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(sequence_e2_8e, carryQ.get_carry_in(15), tmp109));
        sequence_e2_8e_byte_range_9b_b3 = simd_and(tmp109, byte_range_9b_b3);
        struct_Sm.cc = simd_or(struct_Sm.cc, sequence_e2_8e_byte_range_9b_b3);
        byte_8f = simd_and(tmp96, tmp41);
        sequence_e2_8f = simd_and(byte_e2_adv, byte_8f);
        tmp110 = simd_or(basis_bits.bit_3, tmp98);
        tmp111 = simd_not(tmp110);
        tmp112 = simd_and(basis_bits.bit_3, tmp10);
        tmp113 = simd_or(simd_and(basis_bits.bit_2, tmp111), simd_andc(tmp112, basis_bits.bit_2));
        byte_range_9c_a1 = simd_and(byte_range_80_bf, tmp113);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(sequence_e2_8f, carryQ.get_carry_in(16), tmp114));
        sequence_e2_8f_byte_range_9c_a1 = simd_and(tmp114, byte_range_9c_a1);
        struct_Sm.cc = simd_or(struct_Sm.cc, sequence_e2_8f_byte_range_9c_a1);
        tmp115 = simd_and(byte_range_80_bf, tmp44);
        byte_96 = simd_and(tmp115, tmp42);
        sequence_e2_96 = simd_and(byte_e2_adv, byte_96);
        byte_b7 = simd_and(tmp101, tmp38);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(sequence_e2_96, carryQ.get_carry_in(17), tmp116));
        sequence_e2_96_b7 = simd_and(tmp116, byte_b7);
        byte_97 = simd_and(tmp115, tmp38);
        sequence_e2_97 = simd_and(byte_e2_adv, byte_97);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(sequence_e2_97, carryQ.get_carry_in(18), tmp117));
        sequence_e2_97_81 = simd_and(tmp117, byte_81);
        tmp118 = simd_and(tmp4, tmp32);
        byte_99 = simd_and(tmp115, tmp118);
        sequence_e2_99 = simd_and(byte_e2_adv, byte_99);
        byte_af = simd_and(tmp97, tmp41);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(sequence_e2_99, carryQ.get_carry_in(19), tmp119));
        sequence_e2_99_af = simd_and(tmp119, byte_af);
        byte_9f = simd_and(tmp115, tmp41);
        sequence_e2_9f = simd_and(byte_e2_adv, byte_9f);
        tmp120 = simd_andc(tmp96, basis_bits.bit_4);
        byte_range_80_84 = simd_andc(tmp120, tmp70);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(sequence_e2_9f, carryQ.get_carry_in(20), tmp121));
        sequence_e2_9f_byte_range_80_84 = simd_and(tmp121, byte_range_80_84);
        struct_Sm.cc = simd_or(struct_Sm.cc, sequence_e2_9f_byte_range_80_84);
        byte_a4 = simd_and(tmp97, tmp55);
        sequence_e2_a4 = simd_and(byte_e2_adv, byte_a4);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(sequence_e2_a4, carryQ.get_carry_in(21), tmp122));
        sequence_e2_a4_byte_range_80_bf = simd_and(tmp122, byte_range_80_bf);
        struct_Sm.cc = simd_or(struct_Sm.cc, sequence_e2_a4_byte_range_80_bf);
        byte_a6 = simd_and(tmp97, tmp42);
        sequence_e2_a6 = simd_and(byte_e2_adv, byte_a6);
        tmp123 = simd_andc(tmp96, tmp26);
        byte_range_80_82 = simd_andc(tmp123, tmp5);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(sequence_e2_a6, carryQ.get_carry_in(22), tmp124));
        sequence_e2_a6_byte_range_80_82 = simd_and(tmp124, byte_range_80_82);
        struct_Sm.cc = simd_or(struct_Sm.cc, sequence_e2_a6_byte_range_80_82);
        byte_a7 = simd_and(tmp97, tmp38);
        sequence_e2_a7 = simd_and(byte_e2_adv, byte_a7);
        tmp125 = simd_andc(byte_range_80_bf, basis_bits.bit_2);
        tmp126 = simd_and(basis_bits.bit_3, basis_bits.bit_4);
        byte_range_80_97 = simd_andc(tmp125, tmp126);
        carryQ.cq[23] = carryout2carry(pablo_blk_Advance(sequence_e2_a7, carryQ.get_carry_in(23), tmp127));
        sequence_e2_a7_byte_range_80_97 = simd_and(tmp127, byte_range_80_97);
        struct_Sm.cc = simd_or(struct_Sm.cc, sequence_e2_a7_byte_range_80_97);
        byte_a8 = simd_and(tmp97, tmp46);
        sequence_e2_a8 = simd_and(byte_e2_adv, byte_a8);
        carryQ.cq[24] = carryout2carry(pablo_blk_Advance(sequence_e2_a8, carryQ.get_carry_in(24), tmp128));
        sequence_e2_a8_byte_range_80_bf = simd_and(tmp128, byte_range_80_bf);
        struct_Sm.cc = simd_or(struct_Sm.cc, sequence_e2_a8_byte_range_80_bf);
        byte_ac = simd_and(tmp97, tmp17);
        sequence_e2_ac = simd_and(byte_e2_adv, byte_ac);
        byte_range_b0_bf = simd_and(byte_range_80_bf, tmp8);
        carryQ.cq[25] = carryout2carry(pablo_blk_Advance(sequence_e2_ac, carryQ.get_carry_in(25), tmp129));
        sequence_e2_ac_byte_range_b0_bf = simd_and(tmp129, byte_range_b0_bf);
        struct_Sm.cc = simd_or(struct_Sm.cc, sequence_e2_ac_byte_range_b0_bf);
        byte_ad = simd_and(tmp97, tmp100);
        sequence_e2_ad = simd_and(byte_e2_adv, byte_ad);
        carryQ.cq[26] = carryout2carry(pablo_blk_Advance(sequence_e2_ad, carryQ.get_carry_in(26), tmp130));
        sequence_e2_ad_byte_range_80_84 = simd_and(tmp130, byte_range_80_84);
        struct_Sm.cc = simd_or(struct_Sm.cc, sequence_e2_ad_byte_range_80_84);
        byte_ef = simd_and(tmp53, tmp41);
        carryQ.cq[27] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(27), tmp131));
        sequence_ef_ac = simd_and(tmp131, byte_ac);
        carryQ.cq[28] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(28), byte_ef_adv));
        byte_a9 = simd_and(tmp97, tmp118);
        carryQ.cq[29] = carryout2carry(pablo_blk_Advance(sequence_ef_ac, carryQ.get_carry_in(29), sequence_ef_ac_adv));
        tmp132 = simd_and(sequence_ef_ac_adv, byte_a9);
        struct_Sm.cc = simd_or(struct_Sm.cc, tmp132);
        byte_b9 = simd_and(byte_range_b0_bf, tmp118);
        sequence_ef_b9 = simd_and(byte_ef_adv, byte_b9);
        tmp133 = simd_and(tmp97, tmp27);
        tmp134 = simd_and(tmp97, tmp37);
        tmp135 = simd_andc(tmp134, tmp5);
        cc_range_fe62_fe64_3 = simd_or(tmp133, tmp135);
        carryQ.cq[30] = carryout2carry(pablo_blk_Advance(sequence_ef_b9, carryQ.get_carry_in(30), sequence_ef_b9_adv));
        tmp136 = simd_and(sequence_ef_b9_adv, cc_range_fe62_fe64_3);
        struct_Sm.cc = simd_or(struct_Sm.cc, tmp136);
        sequence_ef_bc = simd_and(byte_ef_adv, byte_bc);
        tmp137 = simd_and(tmp96, tmp6);
        tmp138 = simd_and(tmp115, tmp10);
        tmp139 = simd_andc(tmp138, tmp5);
        cc_range_ff0b_ff1c_3 = simd_or(tmp137, tmp139);
        carryQ.cq[31] = carryout2carry(pablo_blk_Advance(sequence_ef_bc, carryQ.get_carry_in(31), sequence_ef_bc_adv));
        tmp140 = simd_and(sequence_ef_bc_adv, cc_range_ff0b_ff1c_3);
        struct_Sm.cc = simd_or(struct_Sm.cc, tmp140);
        byte_bd = simd_and(byte_range_b0_bf, tmp100);
        sequence_ef_bd = simd_and(byte_ef_adv, byte_bd);
        tmp141 = simd_andc(tmp16, tmp20);
        tmp142 = simd_andc(tmp10, tmp141);
        cc_range_ff5c_ff5e_3 = simd_and(tmp115, tmp142);
        carryQ.cq[32] = carryout2carry(pablo_blk_Advance(sequence_ef_bd, carryQ.get_carry_in(32), sequence_ef_bd_adv));
        tmp143 = simd_and(sequence_ef_bd_adv, cc_range_ff5c_ff5e_3);
        struct_Sm.cc = simd_or(struct_Sm.cc, tmp143);
        byte_bf = simd_and(byte_range_b0_bf, tmp41);
        sequence_ef_bf = simd_and(byte_ef_adv, byte_bf);
        tmp144 = simd_and(tmp97, basis_bits.bit_4);
        tmp145 = simd_or(simd_and(basis_bits.bit_5, tmp61), simd_andc(tmp16, basis_bits.bit_5));
        tmp146 = simd_and(tmp144, tmp145);
        cc_range_ffe2_ffe9_3 = simd_or(tmp133, tmp146);
        carryQ.cq[33] = carryout2carry(pablo_blk_Advance(sequence_ef_bf, carryQ.get_carry_in(33), sequence_ef_bf_adv));
        tmp147 = simd_and(sequence_ef_bf_adv, cc_range_ffe2_ffe9_3);
        struct_Sm.cc = simd_or(struct_Sm.cc, tmp147);
        tmp148 = simd_and(tmp23, tmp8);
        byte_f0 = simd_andc(tmp148, tmp79);
        byte_9d = simd_and(tmp115, tmp100);
        carryQ.cq[34] = carryout2carry(pablo_blk_Advance(byte_f0, carryQ.get_carry_in(34), tmp149));
        sequence_f0_9d = simd_and(tmp149, byte_9d);
        carryQ.cq[35] = carryout2carry(pablo_blk_Advance(byte_f0, carryQ.get_carry_in(35), byte_f0_adv));
        byte_9b = simd_and(tmp115, tmp6);
        carryQ.cq[36] = carryout2carry(pablo_blk_Advance(sequence_f0_9d, carryQ.get_carry_in(36), tmp150));
        sequence_f0_9d_9b = simd_and(tmp150, byte_9b);
        carryQ.cq[37] = carryout2carry(pablo_blk_Advance(sequence_f0_9d, carryQ.get_carry_in(37), sequence_f0_9d_adv));
        tmp151 = simd_and(tmp96, tmp33);
        tmp152 = simd_or(tmp151, byte_9b);
        tmp153 = simd_and(byte_range_b0_bf, tmp6);
        cc_range_1d6c1_1d6fb_4 = simd_or(tmp152, tmp153);
        carryQ.cq[38] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_9b, carryQ.get_carry_in(38), sequence_f0_9d_9b_adv));
        tmp154 = simd_and(sequence_f0_9d_9b_adv, cc_range_1d6c1_1d6fb_4);
        struct_Sm.cc = simd_or(struct_Sm.cc, tmp154);
        byte_9c = simd_and(tmp115, tmp17);
        sequence_f0_9d_9c = simd_and(sequence_f0_9d_adv, byte_9c);
        tmp155 = simd_and(byte_range_80_bf, basis_bits.bit_3);
        cc_range_1d715_1d735_4 = simd_and(tmp68, tmp155);
        carryQ.cq[39] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_9c, carryQ.get_carry_in(39), sequence_f0_9d_9c_adv));
        tmp156 = simd_and(sequence_f0_9d_9c_adv, cc_range_1d715_1d735_4);
        struct_Sm.cc = simd_or(struct_Sm.cc, tmp156);
        sequence_f0_9d_9d = simd_and(sequence_f0_9d_adv, byte_9d);
        tmp157 = simd_andc(tmp24, tmp2);
        tmp158 = simd_andc(byte_range_80_bf, tmp157);
        cc_range_1d74f_1d76f_4 = simd_and(tmp41, tmp158);
        carryQ.cq[40] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_9d, carryQ.get_carry_in(40), sequence_f0_9d_9d_adv));
        tmp159 = simd_and(sequence_f0_9d_9d_adv, cc_range_1d74f_1d76f_4);
        struct_Sm.cc = simd_or(struct_Sm.cc, tmp159);
        byte_9e = simd_and(tmp115, tmp21);
        sequence_f0_9d_9e = simd_and(sequence_f0_9d_adv, byte_9e);
        cc_range_1d789_1d7a9_4 = simd_and(tmp118, tmp158);
        carryQ.cq[41] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_9e, carryQ.get_carry_in(41), sequence_f0_9d_9e_adv));
        tmp160 = simd_and(sequence_f0_9d_9e_adv, cc_range_1d789_1d7a9_4);
        struct_Sm.cc = simd_or(struct_Sm.cc, tmp160);
        sequence_f0_9d_9f = simd_and(sequence_f0_9d_adv, byte_9f);
        byte_83 = simd_and(tmp96, tmp36);
        carryQ.cq[42] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_9f, carryQ.get_carry_in(42), sequence_f0_9d_9f_adv));
        tmp161 = simd_and(sequence_f0_9d_9f_adv, byte_83);
        struct_Sm.cc = simd_or(struct_Sm.cc, tmp161);
        sequence_f0_9e = simd_and(byte_f0_adv, byte_9e);
        byte_bb = simd_and(byte_range_b0_bf, tmp6);
        carryQ.cq[43] = carryout2carry(pablo_blk_Advance(sequence_f0_9e, carryQ.get_carry_in(43), tmp162));
        sequence_f0_9e_bb = simd_and(tmp162, byte_bb);
        carryQ.cq[44] = carryout2carry(pablo_blk_Advance(sequence_f0_9e, carryQ.get_carry_in(44), sequence_f0_9e_adv));
        byte_range_b0_b1 = simd_andc(byte_range_b0_bf, tmp98);
        carryQ.cq[45] = carryout2carry(pablo_blk_Advance(sequence_f0_9e_bb, carryQ.get_carry_in(45), sequence_f0_9e_bb_adv));
        tmp163 = simd_and(sequence_f0_9e_bb_adv, byte_range_b0_b1);
        struct_Sm.cc = simd_or(struct_Sm.cc, tmp163);
        carryQ.CarryQ_Adjust(46);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Sm & struct_Sm, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, tmp7, tmp8, tmp9, tmp10, tmp11;
		BitBlock tmp12, tmp13, tmp14, tmp15, tmp16, tmp17, tmp18, tmp19, tmp20, tmp21;
		BitBlock tmp22, cc_range_2b_7e_1, tmp23, tmp24, tmp25, tmp26, tmp27, byte_c2;
		BitBlock tmp28, tmp29, tmp30, tmp31, tmp32, tmp33, tmp34, cc_range_ac_b1_2;
		BitBlock byte_c2_adv, tmp35, tmp36, byte_c3, tmp37, tmp38, tmp39;
		BitBlock cc_range_d7_f7_2, byte_c3_adv, tmp40, tmp41, byte_cf, tmp42, byte_b6;
		BitBlock byte_cf_adv, tmp43, tmp44, tmp45, tmp46, byte_d8, tmp47, tmp48, tmp49;
		BitBlock tmp50, tmp51, byte_range_86_88, byte_d8_adv, tmp52, tmp53, byte_e2;
		BitBlock byte_81, tmp54, sequence_e2_81, byte_e2_adv, tmp55, tmp56, tmp57;
		BitBlock tmp58, tmp59, tmp60, tmp61, tmp62, tmp63, cc_range_2044_207a_3;
		BitBlock sequence_e2_81_adv, tmp64, byte_82, sequence_e2_82, tmp65;
		BitBlock byte_range_8a_8c, sequence_e2_82_adv, tmp66, byte_84, sequence_e2_84;
		BitBlock byte_98, sequence_e2_84_adv, tmp67, tmp68, byte_85, sequence_e2_85;
		BitBlock tmp69, tmp70, tmp71, tmp72, cc_range_2140_214b_3, sequence_e2_85_adv;
		BitBlock tmp73, byte_86, sequence_e2_86, tmp74, tmp75, tmp76, tmp77, tmp78;
		BitBlock tmp79, tmp80, tmp81, tmp82, tmp83, tmp84, tmp85, tmp86;
		BitBlock cc_range_2190_21ae_3, sequence_e2_86_adv, tmp87, byte_87;
		BitBlock sequence_e2_87, tmp88, tmp89, tmp90, tmp91, tmp92, tmp93;
		BitBlock cc_range_21ce_21f4_3, sequence_e2_87_adv, tmp94, byte_range_88_8b;
		BitBlock byte_e2_byte_range_88_8b, byte_range_80_bf, tmp95;
		BitBlock byte_e2_byte_range_88_8b_sfx, tmp96, byte_8c, sequence_e2_8c, tmp97;
		BitBlock tmp98, byte_range_a0_a1, tmp99, sequence_e2_8c_byte_range_a0_a1;
		BitBlock tmp100, byte_8d, sequence_e2_8d, tmp101, byte_bc, tmp102;
		BitBlock sequence_e2_8d_bc, byte_8e, sequence_e2_8e, tmp103, tmp104, tmp105;
		BitBlock tmp106, tmp107, tmp108, byte_range_9b_b3, tmp109;
		BitBlock sequence_e2_8e_byte_range_9b_b3, byte_8f, sequence_e2_8f, tmp110;
		BitBlock tmp111, tmp112, tmp113, byte_range_9c_a1, tmp114;
		BitBlock sequence_e2_8f_byte_range_9c_a1, tmp115, byte_96, sequence_e2_96;
		BitBlock byte_b7, tmp116, sequence_e2_96_b7, byte_97, sequence_e2_97, tmp117;
		BitBlock sequence_e2_97_81, tmp118, byte_99, sequence_e2_99, byte_af, tmp119;
		BitBlock sequence_e2_99_af, byte_9f, sequence_e2_9f, tmp120, byte_range_80_84;
		BitBlock tmp121, sequence_e2_9f_byte_range_80_84, byte_a4, sequence_e2_a4;
		BitBlock tmp122, sequence_e2_a4_byte_range_80_bf, byte_a6, sequence_e2_a6;
		BitBlock tmp123, byte_range_80_82, tmp124, sequence_e2_a6_byte_range_80_82;
		BitBlock byte_a7, sequence_e2_a7, tmp125, tmp126, byte_range_80_97, tmp127;
		BitBlock sequence_e2_a7_byte_range_80_97, byte_a8, sequence_e2_a8, tmp128;
		BitBlock sequence_e2_a8_byte_range_80_bf, byte_ac, sequence_e2_ac;
		BitBlock byte_range_b0_bf, tmp129, sequence_e2_ac_byte_range_b0_bf, byte_ad;
		BitBlock sequence_e2_ad, tmp130, sequence_e2_ad_byte_range_80_84, byte_ef;
		BitBlock tmp131, sequence_ef_ac, byte_ef_adv, byte_a9, sequence_ef_ac_adv;
		BitBlock tmp132, byte_b9, sequence_ef_b9, tmp133, tmp134, tmp135;
		BitBlock cc_range_fe62_fe64_3, sequence_ef_b9_adv, tmp136, sequence_ef_bc;
		BitBlock tmp137, tmp138, tmp139, cc_range_ff0b_ff1c_3, sequence_ef_bc_adv;
		BitBlock tmp140, byte_bd, sequence_ef_bd, tmp141, tmp142, cc_range_ff5c_ff5e_3;
		BitBlock sequence_ef_bd_adv, tmp143, byte_bf, sequence_ef_bf, tmp144, tmp145;
		BitBlock tmp146, cc_range_ffe2_ffe9_3, sequence_ef_bf_adv, tmp147, tmp148;
		BitBlock byte_f0, byte_9d, tmp149, sequence_f0_9d, byte_f0_adv, byte_9b;
		BitBlock tmp150, sequence_f0_9d_9b, sequence_f0_9d_adv, tmp151, tmp152, tmp153;
		BitBlock cc_range_1d6c1_1d6fb_4, sequence_f0_9d_9b_adv, tmp154, byte_9c;
		BitBlock sequence_f0_9d_9c, tmp155, cc_range_1d715_1d735_4;
		BitBlock sequence_f0_9d_9c_adv, tmp156, sequence_f0_9d_9d, tmp157, tmp158;
		BitBlock cc_range_1d74f_1d76f_4, sequence_f0_9d_9d_adv, tmp159, byte_9e;
		BitBlock sequence_f0_9d_9e, cc_range_1d789_1d7a9_4, sequence_f0_9d_9e_adv;
		BitBlock tmp160, sequence_f0_9d_9f, byte_83, sequence_f0_9d_9f_adv, tmp161;
		BitBlock sequence_f0_9e, byte_bb, tmp162, sequence_f0_9e_bb;
		BitBlock sequence_f0_9e_adv, byte_range_b0_b1, sequence_f0_9e_bb_adv, tmp163;




        struct_Sm.cc = simd<1>::constant<0>();
        tmp1 = simd_or(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp2, tmp1);
        tmp4 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_and(tmp4, tmp5);
        tmp7 = simd_and(tmp3, tmp6);
        tmp8 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp9 = simd_andc(tmp8, tmp1);
        tmp10 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp11 = simd_and(tmp9, tmp10);
        tmp12 = simd_andc(tmp11, tmp5);
        tmp13 = simd_or(tmp7, tmp12);
        tmp14 = simd_andc(basis_bits.bit_1, basis_bits.bit_0);
        tmp15 = simd_and(tmp14, tmp8);
        tmp16 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp17 = simd_andc(tmp10, tmp16);
        tmp18 = simd_and(tmp15, tmp17);
        tmp19 = simd_or(tmp13, tmp18);
        tmp20 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp21 = simd_and(tmp10, tmp20);
        tmp22 = simd_and(tmp15, tmp21);
        cc_range_2b_7e_1 = simd_or(tmp19, tmp22);
        struct_Sm.cc = simd_or(struct_Sm.cc, cc_range_2b_7e_1);
        tmp23 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp24 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp25 = simd_andc(tmp23, tmp24);
        tmp26 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp27 = simd_andc(tmp20, tmp26);
        byte_c2 = simd_and(tmp25, tmp27);
        tmp28 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp29 = simd_and(tmp28, tmp2);
        tmp30 = simd_and(tmp29, tmp17);
        tmp31 = simd_and(tmp28, tmp8);
        tmp32 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp33 = simd_andc(tmp32, tmp26);
        tmp34 = simd_and(tmp31, tmp33);
        cc_range_ac_b1_2 = simd_or(tmp30, tmp34);
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(byte_c2, carryQ.get_carry_in(0), byte_c2_adv));
        tmp35 = simd_and(byte_c2_adv, cc_range_ac_b1_2);
        struct_Sm.cc = simd_or(struct_Sm.cc, tmp35);
        tmp36 = simd_andc(tmp5, tmp26);
        byte_c3 = simd_and(tmp25, tmp36);
        tmp37 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp38 = simd_and(tmp37, tmp5);
        tmp39 = simd_and(tmp28, basis_bits.bit_3);
        cc_range_d7_f7_2 = simd_and(tmp38, tmp39);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(byte_c3, carryQ.get_carry_in(1), byte_c3_adv));
        tmp40 = simd_and(byte_c3_adv, cc_range_d7_f7_2);
        struct_Sm.cc = simd_or(struct_Sm.cc, tmp40);
        tmp41 = simd_and(tmp10, tmp5);
        byte_cf = simd_and(tmp25, tmp41);
        tmp42 = simd_and(tmp37, tmp20);
        byte_b6 = simd_and(tmp31, tmp42);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(byte_cf, carryQ.get_carry_in(2), byte_cf_adv));
        tmp43 = simd_and(byte_cf_adv, byte_b6);
        struct_Sm.cc = simd_or(struct_Sm.cc, tmp43);
        tmp44 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp45 = simd_and(tmp23, tmp44);
        tmp46 = simd_andc(tmp4, tmp16);
        byte_d8 = simd_and(tmp45, tmp46);
        tmp47 = simd_andc(tmp28, tmp24);
        tmp48 = simd_or(basis_bits.bit_5, tmp16);
        tmp49 = simd_not(tmp48);
        tmp50 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp51 = simd_or(simd_and(basis_bits.bit_4, tmp49), simd_andc(tmp50, basis_bits.bit_4));
        byte_range_86_88 = simd_and(tmp47, tmp51);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(byte_d8, carryQ.get_carry_in(3), byte_d8_adv));
        tmp52 = simd_and(byte_d8_adv, byte_range_86_88);
        struct_Sm.cc = simd_or(struct_Sm.cc, tmp52);
        tmp53 = simd_and(tmp23, tmp2);
        byte_e2 = simd_and(tmp53, tmp27);
        byte_81 = simd_and(tmp47, tmp33);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(4), tmp54));
        sequence_e2_81 = simd_and(tmp54, byte_81);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(5), byte_e2_adv));
        tmp55 = simd_andc(tmp37, tmp16);
        tmp56 = simd_and(tmp47, tmp55);
        tmp57 = simd_and(tmp28, tmp44);
        tmp58 = simd_and(tmp57, tmp27);
        tmp59 = simd_or(tmp56, tmp58);
        tmp60 = simd_and(tmp31, basis_bits.bit_4);
        tmp61 = simd_not(tmp16);
        tmp62 = simd_or(simd_and(basis_bits.bit_5, tmp61), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        tmp63 = simd_and(tmp60, tmp62);
        cc_range_2044_207a_3 = simd_or(tmp59, tmp63);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(sequence_e2_81, carryQ.get_carry_in(6), sequence_e2_81_adv));
        tmp64 = simd_and(sequence_e2_81_adv, cc_range_2044_207a_3);
        struct_Sm.cc = simd_or(struct_Sm.cc, tmp64);
        byte_82 = simd_and(tmp47, tmp27);
        sequence_e2_82 = simd_and(byte_e2_adv, byte_82);
        tmp65 = simd_and(tmp47, basis_bits.bit_4);
        byte_range_8a_8c = simd_and(tmp65, tmp62);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(sequence_e2_82, carryQ.get_carry_in(7), sequence_e2_82_adv));
        tmp66 = simd_and(sequence_e2_82_adv, byte_range_8a_8c);
        struct_Sm.cc = simd_or(struct_Sm.cc, tmp66);
        byte_84 = simd_and(tmp47, tmp55);
        sequence_e2_84 = simd_and(byte_e2_adv, byte_84);
        byte_98 = simd_and(tmp57, tmp46);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(sequence_e2_84, carryQ.get_carry_in(8), sequence_e2_84_adv));
        tmp67 = simd_and(sequence_e2_84_adv, byte_98);
        struct_Sm.cc = simd_or(struct_Sm.cc, tmp67);
        tmp68 = simd_and(tmp37, tmp32);
        byte_85 = simd_and(tmp47, tmp68);
        sequence_e2_85 = simd_and(byte_e2_adv, byte_85);
        tmp69 = simd_andc(tmp47, basis_bits.bit_4);
        tmp70 = simd_and(basis_bits.bit_5, tmp16);
        tmp71 = simd_andc(tmp69, tmp70);
        tmp72 = simd_and(tmp47, tmp6);
        cc_range_2140_214b_3 = simd_or(tmp71, tmp72);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(sequence_e2_85, carryQ.get_carry_in(9), sequence_e2_85_adv));
        tmp73 = simd_and(sequence_e2_85_adv, cc_range_2140_214b_3);
        struct_Sm.cc = simd_or(struct_Sm.cc, tmp73);
        byte_86 = simd_and(tmp47, tmp42);
        sequence_e2_86 = simd_and(byte_e2_adv, byte_86);
        tmp74 = simd_andc(tmp57, basis_bits.bit_4);
        tmp75 = simd_andc(tmp74, tmp70);
        tmp76 = simd_and(tmp4, basis_bits.bit_6);
        tmp77 = simd_and(tmp57, tmp76);
        tmp78 = simd_or(tmp75, tmp77);
        tmp79 = simd_or(tmp26, tmp16);
        tmp80 = simd_andc(tmp29, tmp79);
        tmp81 = simd_or(tmp78, tmp80);
        tmp82 = simd_and(tmp29, tmp36);
        tmp83 = simd_or(tmp81, tmp82);
        tmp84 = simd_and(tmp29, tmp42);
        tmp85 = simd_or(tmp83, tmp84);
        tmp86 = simd_and(tmp29, tmp21);
        cc_range_2190_21ae_3 = simd_or(tmp85, tmp86);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(sequence_e2_86, carryQ.get_carry_in(10), sequence_e2_86_adv));
        tmp87 = simd_and(sequence_e2_86_adv, cc_range_2190_21ae_3);
        struct_Sm.cc = simd_or(struct_Sm.cc, tmp87);
        byte_87 = simd_and(tmp47, tmp38);
        sequence_e2_87 = simd_and(byte_e2_adv, byte_87);
        tmp88 = simd_and(tmp10, basis_bits.bit_6);
        tmp89 = simd_and(tmp47, tmp88);
        tmp90 = simd_or(tmp89, tmp58);
        tmp91 = simd_and(tmp57, tmp55);
        tmp92 = simd_or(tmp90, tmp91);
        tmp93 = simd_and(tmp31, tmp26);
        cc_range_21ce_21f4_3 = simd_or(tmp92, tmp93);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(sequence_e2_87, carryQ.get_carry_in(11), sequence_e2_87_adv));
        tmp94 = simd_and(sequence_e2_87_adv, cc_range_21ce_21f4_3);
        struct_Sm.cc = simd_or(struct_Sm.cc, tmp94);
        byte_range_88_8b = simd_and(tmp47, tmp4);
        byte_e2_byte_range_88_8b = simd_and(byte_e2_adv, byte_range_88_8b);
        byte_range_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(byte_e2_byte_range_88_8b, carryQ.get_carry_in(12), tmp95));
        byte_e2_byte_range_88_8b_sfx = simd_and(tmp95, byte_range_80_bf);
        struct_Sm.cc = simd_or(struct_Sm.cc, byte_e2_byte_range_88_8b_sfx);
        tmp96 = simd_andc(byte_range_80_bf, tmp24);
        byte_8c = simd_and(tmp96, tmp17);
        sequence_e2_8c = simd_and(byte_e2_adv, byte_8c);
        tmp97 = simd_and(byte_range_80_bf, tmp2);
        tmp98 = simd_or(tmp26, basis_bits.bit_6);
        byte_range_a0_a1 = simd_andc(tmp97, tmp98);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(sequence_e2_8c, carryQ.get_carry_in(13), tmp99));
        sequence_e2_8c_byte_range_a0_a1 = simd_and(tmp99, byte_range_a0_a1);
        struct_Sm.cc = simd_or(struct_Sm.cc, sequence_e2_8c_byte_range_a0_a1);
        tmp100 = simd_and(tmp10, tmp32);
        byte_8d = simd_and(tmp96, tmp100);
        sequence_e2_8d = simd_and(byte_e2_adv, byte_8d);
        tmp101 = simd_and(byte_range_80_bf, tmp8);
        byte_bc = simd_and(tmp101, tmp17);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(sequence_e2_8d, carryQ.get_carry_in(14), tmp102));
        sequence_e2_8d_bc = simd_and(tmp102, byte_bc);
        byte_8e = simd_and(tmp96, tmp21);
        sequence_e2_8e = simd_and(byte_e2_adv, byte_8e);
        tmp103 = simd_and(basis_bits.bit_3, tmp26);
        tmp104 = simd_not(tmp103);
        tmp105 = simd_or(basis_bits.bit_5, tmp5);
        tmp106 = simd_and(basis_bits.bit_4, tmp105);
        tmp107 = simd_and(basis_bits.bit_3, tmp106);
        tmp108 = simd_or(simd_and(basis_bits.bit_2, tmp104), simd_andc(tmp107, basis_bits.bit_2));
        byte_range_9b_b3 = simd_and(byte_range_80_bf, tmp108);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(sequence_e2_8e, carryQ.get_carry_in(15), tmp109));
        sequence_e2_8e_byte_range_9b_b3 = simd_and(tmp109, byte_range_9b_b3);
        struct_Sm.cc = simd_or(struct_Sm.cc, sequence_e2_8e_byte_range_9b_b3);
        byte_8f = simd_and(tmp96, tmp41);
        sequence_e2_8f = simd_and(byte_e2_adv, byte_8f);
        tmp110 = simd_or(basis_bits.bit_3, tmp98);
        tmp111 = simd_not(tmp110);
        tmp112 = simd_and(basis_bits.bit_3, tmp10);
        tmp113 = simd_or(simd_and(basis_bits.bit_2, tmp111), simd_andc(tmp112, basis_bits.bit_2));
        byte_range_9c_a1 = simd_and(byte_range_80_bf, tmp113);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(sequence_e2_8f, carryQ.get_carry_in(16), tmp114));
        sequence_e2_8f_byte_range_9c_a1 = simd_and(tmp114, byte_range_9c_a1);
        struct_Sm.cc = simd_or(struct_Sm.cc, sequence_e2_8f_byte_range_9c_a1);
        tmp115 = simd_and(byte_range_80_bf, tmp44);
        byte_96 = simd_and(tmp115, tmp42);
        sequence_e2_96 = simd_and(byte_e2_adv, byte_96);
        byte_b7 = simd_and(tmp101, tmp38);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(sequence_e2_96, carryQ.get_carry_in(17), tmp116));
        sequence_e2_96_b7 = simd_and(tmp116, byte_b7);
        byte_97 = simd_and(tmp115, tmp38);
        sequence_e2_97 = simd_and(byte_e2_adv, byte_97);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(sequence_e2_97, carryQ.get_carry_in(18), tmp117));
        sequence_e2_97_81 = simd_and(tmp117, byte_81);
        tmp118 = simd_and(tmp4, tmp32);
        byte_99 = simd_and(tmp115, tmp118);
        sequence_e2_99 = simd_and(byte_e2_adv, byte_99);
        byte_af = simd_and(tmp97, tmp41);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(sequence_e2_99, carryQ.get_carry_in(19), tmp119));
        sequence_e2_99_af = simd_and(tmp119, byte_af);
        byte_9f = simd_and(tmp115, tmp41);
        sequence_e2_9f = simd_and(byte_e2_adv, byte_9f);
        tmp120 = simd_andc(tmp96, basis_bits.bit_4);
        byte_range_80_84 = simd_andc(tmp120, tmp70);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(sequence_e2_9f, carryQ.get_carry_in(20), tmp121));
        sequence_e2_9f_byte_range_80_84 = simd_and(tmp121, byte_range_80_84);
        struct_Sm.cc = simd_or(struct_Sm.cc, sequence_e2_9f_byte_range_80_84);
        byte_a4 = simd_and(tmp97, tmp55);
        sequence_e2_a4 = simd_and(byte_e2_adv, byte_a4);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(sequence_e2_a4, carryQ.get_carry_in(21), tmp122));
        sequence_e2_a4_byte_range_80_bf = simd_and(tmp122, byte_range_80_bf);
        struct_Sm.cc = simd_or(struct_Sm.cc, sequence_e2_a4_byte_range_80_bf);
        byte_a6 = simd_and(tmp97, tmp42);
        sequence_e2_a6 = simd_and(byte_e2_adv, byte_a6);
        tmp123 = simd_andc(tmp96, tmp26);
        byte_range_80_82 = simd_andc(tmp123, tmp5);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(sequence_e2_a6, carryQ.get_carry_in(22), tmp124));
        sequence_e2_a6_byte_range_80_82 = simd_and(tmp124, byte_range_80_82);
        struct_Sm.cc = simd_or(struct_Sm.cc, sequence_e2_a6_byte_range_80_82);
        byte_a7 = simd_and(tmp97, tmp38);
        sequence_e2_a7 = simd_and(byte_e2_adv, byte_a7);
        tmp125 = simd_andc(byte_range_80_bf, basis_bits.bit_2);
        tmp126 = simd_and(basis_bits.bit_3, basis_bits.bit_4);
        byte_range_80_97 = simd_andc(tmp125, tmp126);
        carryQ.cq[23] = carryout2carry(pablo_blk_Advance(sequence_e2_a7, carryQ.get_carry_in(23), tmp127));
        sequence_e2_a7_byte_range_80_97 = simd_and(tmp127, byte_range_80_97);
        struct_Sm.cc = simd_or(struct_Sm.cc, sequence_e2_a7_byte_range_80_97);
        byte_a8 = simd_and(tmp97, tmp46);
        sequence_e2_a8 = simd_and(byte_e2_adv, byte_a8);
        carryQ.cq[24] = carryout2carry(pablo_blk_Advance(sequence_e2_a8, carryQ.get_carry_in(24), tmp128));
        sequence_e2_a8_byte_range_80_bf = simd_and(tmp128, byte_range_80_bf);
        struct_Sm.cc = simd_or(struct_Sm.cc, sequence_e2_a8_byte_range_80_bf);
        byte_ac = simd_and(tmp97, tmp17);
        sequence_e2_ac = simd_and(byte_e2_adv, byte_ac);
        byte_range_b0_bf = simd_and(byte_range_80_bf, tmp8);
        carryQ.cq[25] = carryout2carry(pablo_blk_Advance(sequence_e2_ac, carryQ.get_carry_in(25), tmp129));
        sequence_e2_ac_byte_range_b0_bf = simd_and(tmp129, byte_range_b0_bf);
        struct_Sm.cc = simd_or(struct_Sm.cc, sequence_e2_ac_byte_range_b0_bf);
        byte_ad = simd_and(tmp97, tmp100);
        sequence_e2_ad = simd_and(byte_e2_adv, byte_ad);
        carryQ.cq[26] = carryout2carry(pablo_blk_Advance(sequence_e2_ad, carryQ.get_carry_in(26), tmp130));
        sequence_e2_ad_byte_range_80_84 = simd_and(tmp130, byte_range_80_84);
        struct_Sm.cc = simd_or(struct_Sm.cc, sequence_e2_ad_byte_range_80_84);
        byte_ef = simd_and(tmp53, tmp41);
        carryQ.cq[27] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(27), tmp131));
        sequence_ef_ac = simd_and(tmp131, byte_ac);
        carryQ.cq[28] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(28), byte_ef_adv));
        byte_a9 = simd_and(tmp97, tmp118);
        carryQ.cq[29] = carryout2carry(pablo_blk_Advance(sequence_ef_ac, carryQ.get_carry_in(29), sequence_ef_ac_adv));
        tmp132 = simd_and(sequence_ef_ac_adv, byte_a9);
        struct_Sm.cc = simd_or(struct_Sm.cc, tmp132);
        byte_b9 = simd_and(byte_range_b0_bf, tmp118);
        sequence_ef_b9 = simd_and(byte_ef_adv, byte_b9);
        tmp133 = simd_and(tmp97, tmp27);
        tmp134 = simd_and(tmp97, tmp37);
        tmp135 = simd_andc(tmp134, tmp5);
        cc_range_fe62_fe64_3 = simd_or(tmp133, tmp135);
        carryQ.cq[30] = carryout2carry(pablo_blk_Advance(sequence_ef_b9, carryQ.get_carry_in(30), sequence_ef_b9_adv));
        tmp136 = simd_and(sequence_ef_b9_adv, cc_range_fe62_fe64_3);
        struct_Sm.cc = simd_or(struct_Sm.cc, tmp136);
        sequence_ef_bc = simd_and(byte_ef_adv, byte_bc);
        tmp137 = simd_and(tmp96, tmp6);
        tmp138 = simd_and(tmp115, tmp10);
        tmp139 = simd_andc(tmp138, tmp5);
        cc_range_ff0b_ff1c_3 = simd_or(tmp137, tmp139);
        carryQ.cq[31] = carryout2carry(pablo_blk_Advance(sequence_ef_bc, carryQ.get_carry_in(31), sequence_ef_bc_adv));
        tmp140 = simd_and(sequence_ef_bc_adv, cc_range_ff0b_ff1c_3);
        struct_Sm.cc = simd_or(struct_Sm.cc, tmp140);
        byte_bd = simd_and(byte_range_b0_bf, tmp100);
        sequence_ef_bd = simd_and(byte_ef_adv, byte_bd);
        tmp141 = simd_andc(tmp16, tmp20);
        tmp142 = simd_andc(tmp10, tmp141);
        cc_range_ff5c_ff5e_3 = simd_and(tmp115, tmp142);
        carryQ.cq[32] = carryout2carry(pablo_blk_Advance(sequence_ef_bd, carryQ.get_carry_in(32), sequence_ef_bd_adv));
        tmp143 = simd_and(sequence_ef_bd_adv, cc_range_ff5c_ff5e_3);
        struct_Sm.cc = simd_or(struct_Sm.cc, tmp143);
        byte_bf = simd_and(byte_range_b0_bf, tmp41);
        sequence_ef_bf = simd_and(byte_ef_adv, byte_bf);
        tmp144 = simd_and(tmp97, basis_bits.bit_4);
        tmp145 = simd_or(simd_and(basis_bits.bit_5, tmp61), simd_andc(tmp16, basis_bits.bit_5));
        tmp146 = simd_and(tmp144, tmp145);
        cc_range_ffe2_ffe9_3 = simd_or(tmp133, tmp146);
        carryQ.cq[33] = carryout2carry(pablo_blk_Advance(sequence_ef_bf, carryQ.get_carry_in(33), sequence_ef_bf_adv));
        tmp147 = simd_and(sequence_ef_bf_adv, cc_range_ffe2_ffe9_3);
        struct_Sm.cc = simd_or(struct_Sm.cc, tmp147);
        tmp148 = simd_and(tmp23, tmp8);
        byte_f0 = simd_andc(tmp148, tmp79);
        byte_9d = simd_and(tmp115, tmp100);
        carryQ.cq[34] = carryout2carry(pablo_blk_Advance(byte_f0, carryQ.get_carry_in(34), tmp149));
        sequence_f0_9d = simd_and(tmp149, byte_9d);
        carryQ.cq[35] = carryout2carry(pablo_blk_Advance(byte_f0, carryQ.get_carry_in(35), byte_f0_adv));
        byte_9b = simd_and(tmp115, tmp6);
        carryQ.cq[36] = carryout2carry(pablo_blk_Advance(sequence_f0_9d, carryQ.get_carry_in(36), tmp150));
        sequence_f0_9d_9b = simd_and(tmp150, byte_9b);
        carryQ.cq[37] = carryout2carry(pablo_blk_Advance(sequence_f0_9d, carryQ.get_carry_in(37), sequence_f0_9d_adv));
        tmp151 = simd_and(tmp96, tmp33);
        tmp152 = simd_or(tmp151, byte_9b);
        tmp153 = simd_and(byte_range_b0_bf, tmp6);
        cc_range_1d6c1_1d6fb_4 = simd_or(tmp152, tmp153);
        carryQ.cq[38] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_9b, carryQ.get_carry_in(38), sequence_f0_9d_9b_adv));
        tmp154 = simd_and(sequence_f0_9d_9b_adv, cc_range_1d6c1_1d6fb_4);
        struct_Sm.cc = simd_or(struct_Sm.cc, tmp154);
        byte_9c = simd_and(tmp115, tmp17);
        sequence_f0_9d_9c = simd_and(sequence_f0_9d_adv, byte_9c);
        tmp155 = simd_and(byte_range_80_bf, basis_bits.bit_3);
        cc_range_1d715_1d735_4 = simd_and(tmp68, tmp155);
        carryQ.cq[39] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_9c, carryQ.get_carry_in(39), sequence_f0_9d_9c_adv));
        tmp156 = simd_and(sequence_f0_9d_9c_adv, cc_range_1d715_1d735_4);
        struct_Sm.cc = simd_or(struct_Sm.cc, tmp156);
        sequence_f0_9d_9d = simd_and(sequence_f0_9d_adv, byte_9d);
        tmp157 = simd_andc(tmp24, tmp2);
        tmp158 = simd_andc(byte_range_80_bf, tmp157);
        cc_range_1d74f_1d76f_4 = simd_and(tmp41, tmp158);
        carryQ.cq[40] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_9d, carryQ.get_carry_in(40), sequence_f0_9d_9d_adv));
        tmp159 = simd_and(sequence_f0_9d_9d_adv, cc_range_1d74f_1d76f_4);
        struct_Sm.cc = simd_or(struct_Sm.cc, tmp159);
        byte_9e = simd_and(tmp115, tmp21);
        sequence_f0_9d_9e = simd_and(sequence_f0_9d_adv, byte_9e);
        cc_range_1d789_1d7a9_4 = simd_and(tmp118, tmp158);
        carryQ.cq[41] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_9e, carryQ.get_carry_in(41), sequence_f0_9d_9e_adv));
        tmp160 = simd_and(sequence_f0_9d_9e_adv, cc_range_1d789_1d7a9_4);
        struct_Sm.cc = simd_or(struct_Sm.cc, tmp160);
        sequence_f0_9d_9f = simd_and(sequence_f0_9d_adv, byte_9f);
        byte_83 = simd_and(tmp96, tmp36);
        carryQ.cq[42] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_9f, carryQ.get_carry_in(42), sequence_f0_9d_9f_adv));
        tmp161 = simd_and(sequence_f0_9d_9f_adv, byte_83);
        struct_Sm.cc = simd_or(struct_Sm.cc, tmp161);
        sequence_f0_9e = simd_and(byte_f0_adv, byte_9e);
        byte_bb = simd_and(byte_range_b0_bf, tmp6);
        carryQ.cq[43] = carryout2carry(pablo_blk_Advance(sequence_f0_9e, carryQ.get_carry_in(43), tmp162));
        sequence_f0_9e_bb = simd_and(tmp162, byte_bb);
        carryQ.cq[44] = carryout2carry(pablo_blk_Advance(sequence_f0_9e, carryQ.get_carry_in(44), sequence_f0_9e_adv));
        byte_range_b0_b1 = simd_andc(byte_range_b0_bf, tmp98);
        carryQ.cq[45] = carryout2carry(pablo_blk_Advance(sequence_f0_9e_bb, carryQ.get_carry_in(45), sequence_f0_9e_bb_adv));
        tmp163 = simd_and(sequence_f0_9e_bb_adv, byte_range_b0_b1);
        struct_Sm.cc = simd_or(struct_Sm.cc, tmp163);
  }
  CarryArray<46, 0> carryQ;
  };

  struct Sc {
  Sc() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Sc & struct_Sc) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, byte_24, tmp7, tmp8, tmp9, tmp10;
		BitBlock tmp11, tmp12, byte_c2, tmp13, tmp14, tmp15, tmp16, tmp17;
		BitBlock byte_range_a2_a5, byte_c2_adv, tmp18, tmp19, tmp20, tmp21, byte_d6;
		BitBlock tmp22, tmp23, tmp24, tmp25, byte_8f, byte_d6_adv, tmp26, tmp27, tmp28;
		BitBlock byte_d8, tmp29, byte_8b, byte_d8_adv, tmp30, tmp31, tmp32, byte_e0;
		BitBlock tmp33, byte_a7, tmp34, sequence_e0_a7, byte_e0_adv, tmp35, tmp36;
		BitBlock tmp37, tmp38, cc_range_9f2_9fb_3, sequence_e0_a7_adv, tmp39, byte_ab;
		BitBlock sequence_e0_ab, tmp40, tmp41, byte_b1, sequence_e0_ab_adv, tmp42;
		BitBlock byte_af, sequence_e0_af, tmp43, byte_b9, sequence_e0_af_adv, tmp44;
		BitBlock byte_b8, sequence_e0_b8, byte_bf, sequence_e0_b8_adv, tmp45, byte_e1;
		BitBlock tmp46, byte_9f, tmp47, sequence_e1_9f, byte_e1_adv, byte_9b;
		BitBlock sequence_e1_9f_adv, tmp48, byte_e2, byte_82, tmp49, sequence_e2_82;
		BitBlock byte_e2_adv, tmp50, tmp51, tmp52, tmp53, byte_range_a0_ba;
		BitBlock sequence_e2_82_adv, tmp54, tmp55, byte_ea, byte_a0, tmp56;
		BitBlock sequence_ea_a0, byte_ea_adv, sequence_ea_a0_adv, tmp57, byte_ef;
		BitBlock byte_b7, tmp58, sequence_ef_b7, byte_ef_adv, tmp59, byte_bc;
		BitBlock sequence_ef_b7_adv, tmp60, sequence_ef_b9, byte_a9;
		BitBlock sequence_ef_b9_adv, tmp61, sequence_ef_bc, byte_84;
		BitBlock sequence_ef_bc_adv, tmp62, sequence_ef_bf, tmp63, tmp64, tmp65, tmp66;
		BitBlock tmp67, tmp68, cc_range_ffe0_ffe5_3, sequence_ef_bf_adv, tmp69;




        struct_Sc.cc = simd<1>::constant<0>();
        tmp1 = simd_or(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp2, tmp1);
        tmp4 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp5 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_andc(tmp4, tmp5);
        byte_24 = simd_and(tmp3, tmp6);
        struct_Sc.cc = simd_or(struct_Sc.cc, byte_24);
        tmp7 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp9 = simd_andc(tmp7, tmp8);
        tmp10 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp11 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp12 = simd_andc(tmp11, tmp10);
        byte_c2 = simd_and(tmp9, tmp12);
        tmp13 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp14 = simd_and(tmp13, tmp2);
        tmp15 = simd_andc(tmp14, basis_bits.bit_4);
        tmp16 = simd_not(basis_bits.bit_6);
        tmp17 = simd_or(simd_and(basis_bits.bit_5, tmp16), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        byte_range_a2_a5 = simd_and(tmp15, tmp17);
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(byte_c2, carryQ.get_carry_in(0), byte_c2_adv));
        tmp18 = simd_and(byte_c2_adv, byte_range_a2_a5);
        struct_Sc.cc = simd_or(struct_Sc.cc, tmp18);
        tmp19 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp20 = simd_and(tmp7, tmp19);
        tmp21 = simd_and(tmp4, tmp11);
        byte_d6 = simd_and(tmp20, tmp21);
        tmp22 = simd_andc(tmp13, tmp8);
        tmp23 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp24 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp25 = simd_and(tmp23, tmp24);
        byte_8f = simd_and(tmp22, tmp25);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(byte_d6, carryQ.get_carry_in(1), byte_d6_adv));
        tmp26 = simd_and(byte_d6_adv, byte_8f);
        struct_Sc.cc = simd_or(struct_Sc.cc, tmp26);
        tmp27 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp28 = simd_andc(tmp27, tmp5);
        byte_d8 = simd_and(tmp20, tmp28);
        tmp29 = simd_and(tmp27, tmp24);
        byte_8b = simd_and(tmp22, tmp29);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(byte_d8, carryQ.get_carry_in(2), byte_d8_adv));
        tmp30 = simd_and(byte_d8_adv, byte_8b);
        struct_Sc.cc = simd_or(struct_Sc.cc, tmp30);
        tmp31 = simd_and(tmp7, tmp2);
        tmp32 = simd_or(tmp10, tmp5);
        byte_e0 = simd_andc(tmp31, tmp32);
        tmp33 = simd_and(tmp4, tmp24);
        byte_a7 = simd_and(tmp14, tmp33);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(byte_e0, carryQ.get_carry_in(3), tmp34));
        sequence_e0_a7 = simd_and(tmp34, byte_a7);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(byte_e0, carryQ.get_carry_in(4), byte_e0_adv));
        tmp35 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp36 = simd_and(tmp13, tmp35);
        tmp37 = simd_andc(basis_bits.bit_6, tmp10);
        tmp38 = simd_or(tmp37, tmp29);
        cc_range_9f2_9fb_3 = simd_and(tmp36, tmp38);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(sequence_e0_a7, carryQ.get_carry_in(5), sequence_e0_a7_adv));
        tmp39 = simd_and(sequence_e0_a7_adv, cc_range_9f2_9fb_3);
        struct_Sc.cc = simd_or(struct_Sc.cc, tmp39);
        byte_ab = simd_and(tmp14, tmp29);
        sequence_e0_ab = simd_and(byte_e0_adv, byte_ab);
        tmp40 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp41 = simd_andc(tmp40, tmp10);
        byte_b1 = simd_and(tmp36, tmp41);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(sequence_e0_ab, carryQ.get_carry_in(6), sequence_e0_ab_adv));
        tmp42 = simd_and(sequence_e0_ab_adv, byte_b1);
        struct_Sc.cc = simd_or(struct_Sc.cc, tmp42);
        byte_af = simd_and(tmp14, tmp25);
        sequence_e0_af = simd_and(byte_e0_adv, byte_af);
        tmp43 = simd_and(tmp27, tmp40);
        byte_b9 = simd_and(tmp36, tmp43);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(sequence_e0_af, carryQ.get_carry_in(7), sequence_e0_af_adv));
        tmp44 = simd_and(sequence_e0_af_adv, byte_b9);
        struct_Sc.cc = simd_or(struct_Sc.cc, tmp44);
        byte_b8 = simd_and(tmp36, tmp28);
        sequence_e0_b8 = simd_and(byte_e0_adv, byte_b8);
        byte_bf = simd_and(tmp36, tmp25);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(sequence_e0_b8, carryQ.get_carry_in(8), sequence_e0_b8_adv));
        tmp45 = simd_and(sequence_e0_b8_adv, byte_bf);
        struct_Sc.cc = simd_or(struct_Sc.cc, tmp45);
        byte_e1 = simd_and(tmp31, tmp41);
        tmp46 = simd_and(tmp13, tmp19);
        byte_9f = simd_and(tmp46, tmp25);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(9), tmp47));
        sequence_e1_9f = simd_and(tmp47, byte_9f);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(10), byte_e1_adv));
        byte_9b = simd_and(tmp46, tmp29);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(sequence_e1_9f, carryQ.get_carry_in(11), sequence_e1_9f_adv));
        tmp48 = simd_and(sequence_e1_9f_adv, byte_9b);
        struct_Sc.cc = simd_or(struct_Sc.cc, tmp48);
        byte_e2 = simd_and(tmp31, tmp12);
        byte_82 = simd_and(tmp22, tmp12);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(12), tmp49));
        sequence_e2_82 = simd_and(tmp49, byte_82);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(13), byte_e2_adv));
        tmp50 = simd_and(tmp13, basis_bits.bit_2);
        tmp51 = simd_or(basis_bits.bit_5, tmp24);
        tmp52 = simd_and(basis_bits.bit_4, tmp51);
        tmp53 = simd_and(basis_bits.bit_3, tmp52);
        byte_range_a0_ba = simd_andc(tmp50, tmp53);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(sequence_e2_82, carryQ.get_carry_in(14), sequence_e2_82_adv));
        tmp54 = simd_and(sequence_e2_82_adv, byte_range_a0_ba);
        struct_Sc.cc = simd_or(struct_Sc.cc, tmp54);
        tmp55 = simd_and(tmp27, tmp11);
        byte_ea = simd_and(tmp31, tmp55);
        byte_a0 = simd_andc(tmp14, tmp32);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(byte_ea, carryQ.get_carry_in(15), tmp56));
        sequence_ea_a0 = simd_and(tmp56, byte_a0);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(byte_ea, carryQ.get_carry_in(16), byte_ea_adv));
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(sequence_ea_a0, carryQ.get_carry_in(17), sequence_ea_a0_adv));
        tmp57 = simd_and(sequence_ea_a0_adv, byte_b8);
        struct_Sc.cc = simd_or(struct_Sc.cc, tmp57);
        byte_ef = simd_and(tmp31, tmp25);
        byte_b7 = simd_and(tmp36, tmp33);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(18), tmp58));
        sequence_ef_b7 = simd_and(tmp58, byte_b7);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(19), byte_ef_adv));
        tmp59 = simd_andc(tmp23, tmp5);
        byte_bc = simd_and(tmp36, tmp59);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(sequence_ef_b7, carryQ.get_carry_in(20), sequence_ef_b7_adv));
        tmp60 = simd_and(sequence_ef_b7_adv, byte_bc);
        struct_Sc.cc = simd_or(struct_Sc.cc, tmp60);
        sequence_ef_b9 = simd_and(byte_ef_adv, byte_b9);
        byte_a9 = simd_and(tmp14, tmp43);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(sequence_ef_b9, carryQ.get_carry_in(21), sequence_ef_b9_adv));
        tmp61 = simd_and(sequence_ef_b9_adv, byte_a9);
        struct_Sc.cc = simd_or(struct_Sc.cc, tmp61);
        sequence_ef_bc = simd_and(byte_ef_adv, byte_bc);
        byte_84 = simd_and(tmp22, tmp6);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(sequence_ef_bc, carryQ.get_carry_in(22), sequence_ef_bc_adv));
        tmp62 = simd_and(sequence_ef_bc_adv, byte_84);
        struct_Sc.cc = simd_or(struct_Sc.cc, tmp62);
        sequence_ef_bf = simd_and(byte_ef_adv, byte_bf);
        tmp63 = simd_or(tmp10, basis_bits.bit_6);
        tmp64 = simd_andc(tmp14, tmp63);
        tmp65 = simd_and(tmp14, tmp4);
        tmp66 = simd_not(basis_bits.bit_7);
        tmp67 = simd_or(simd_and(basis_bits.bit_6, tmp66), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
        tmp68 = simd_and(tmp65, tmp67);
        cc_range_ffe0_ffe5_3 = simd_or(tmp64, tmp68);
        carryQ.cq[23] = carryout2carry(pablo_blk_Advance(sequence_ef_bf, carryQ.get_carry_in(23), sequence_ef_bf_adv));
        tmp69 = simd_and(sequence_ef_bf_adv, cc_range_ffe0_ffe5_3);
        struct_Sc.cc = simd_or(struct_Sc.cc, tmp69);
        carryQ.CarryQ_Adjust(24);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Sc & struct_Sc, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, byte_24, tmp7, tmp8, tmp9, tmp10;
		BitBlock tmp11, tmp12, byte_c2, tmp13, tmp14, tmp15, tmp16, tmp17;
		BitBlock byte_range_a2_a5, byte_c2_adv, tmp18, tmp19, tmp20, tmp21, byte_d6;
		BitBlock tmp22, tmp23, tmp24, tmp25, byte_8f, byte_d6_adv, tmp26, tmp27, tmp28;
		BitBlock byte_d8, tmp29, byte_8b, byte_d8_adv, tmp30, tmp31, tmp32, byte_e0;
		BitBlock tmp33, byte_a7, tmp34, sequence_e0_a7, byte_e0_adv, tmp35, tmp36;
		BitBlock tmp37, tmp38, cc_range_9f2_9fb_3, sequence_e0_a7_adv, tmp39, byte_ab;
		BitBlock sequence_e0_ab, tmp40, tmp41, byte_b1, sequence_e0_ab_adv, tmp42;
		BitBlock byte_af, sequence_e0_af, tmp43, byte_b9, sequence_e0_af_adv, tmp44;
		BitBlock byte_b8, sequence_e0_b8, byte_bf, sequence_e0_b8_adv, tmp45, byte_e1;
		BitBlock tmp46, byte_9f, tmp47, sequence_e1_9f, byte_e1_adv, byte_9b;
		BitBlock sequence_e1_9f_adv, tmp48, byte_e2, byte_82, tmp49, sequence_e2_82;
		BitBlock byte_e2_adv, tmp50, tmp51, tmp52, tmp53, byte_range_a0_ba;
		BitBlock sequence_e2_82_adv, tmp54, tmp55, byte_ea, byte_a0, tmp56;
		BitBlock sequence_ea_a0, byte_ea_adv, sequence_ea_a0_adv, tmp57, byte_ef;
		BitBlock byte_b7, tmp58, sequence_ef_b7, byte_ef_adv, tmp59, byte_bc;
		BitBlock sequence_ef_b7_adv, tmp60, sequence_ef_b9, byte_a9;
		BitBlock sequence_ef_b9_adv, tmp61, sequence_ef_bc, byte_84;
		BitBlock sequence_ef_bc_adv, tmp62, sequence_ef_bf, tmp63, tmp64, tmp65, tmp66;
		BitBlock tmp67, tmp68, cc_range_ffe0_ffe5_3, sequence_ef_bf_adv, tmp69;




        struct_Sc.cc = simd<1>::constant<0>();
        tmp1 = simd_or(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp2, tmp1);
        tmp4 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp5 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_andc(tmp4, tmp5);
        byte_24 = simd_and(tmp3, tmp6);
        struct_Sc.cc = simd_or(struct_Sc.cc, byte_24);
        tmp7 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp9 = simd_andc(tmp7, tmp8);
        tmp10 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp11 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp12 = simd_andc(tmp11, tmp10);
        byte_c2 = simd_and(tmp9, tmp12);
        tmp13 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp14 = simd_and(tmp13, tmp2);
        tmp15 = simd_andc(tmp14, basis_bits.bit_4);
        tmp16 = simd_not(basis_bits.bit_6);
        tmp17 = simd_or(simd_and(basis_bits.bit_5, tmp16), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        byte_range_a2_a5 = simd_and(tmp15, tmp17);
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(byte_c2, carryQ.get_carry_in(0), byte_c2_adv));
        tmp18 = simd_and(byte_c2_adv, byte_range_a2_a5);
        struct_Sc.cc = simd_or(struct_Sc.cc, tmp18);
        tmp19 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp20 = simd_and(tmp7, tmp19);
        tmp21 = simd_and(tmp4, tmp11);
        byte_d6 = simd_and(tmp20, tmp21);
        tmp22 = simd_andc(tmp13, tmp8);
        tmp23 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp24 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp25 = simd_and(tmp23, tmp24);
        byte_8f = simd_and(tmp22, tmp25);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(byte_d6, carryQ.get_carry_in(1), byte_d6_adv));
        tmp26 = simd_and(byte_d6_adv, byte_8f);
        struct_Sc.cc = simd_or(struct_Sc.cc, tmp26);
        tmp27 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp28 = simd_andc(tmp27, tmp5);
        byte_d8 = simd_and(tmp20, tmp28);
        tmp29 = simd_and(tmp27, tmp24);
        byte_8b = simd_and(tmp22, tmp29);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(byte_d8, carryQ.get_carry_in(2), byte_d8_adv));
        tmp30 = simd_and(byte_d8_adv, byte_8b);
        struct_Sc.cc = simd_or(struct_Sc.cc, tmp30);
        tmp31 = simd_and(tmp7, tmp2);
        tmp32 = simd_or(tmp10, tmp5);
        byte_e0 = simd_andc(tmp31, tmp32);
        tmp33 = simd_and(tmp4, tmp24);
        byte_a7 = simd_and(tmp14, tmp33);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(byte_e0, carryQ.get_carry_in(3), tmp34));
        sequence_e0_a7 = simd_and(tmp34, byte_a7);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(byte_e0, carryQ.get_carry_in(4), byte_e0_adv));
        tmp35 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp36 = simd_and(tmp13, tmp35);
        tmp37 = simd_andc(basis_bits.bit_6, tmp10);
        tmp38 = simd_or(tmp37, tmp29);
        cc_range_9f2_9fb_3 = simd_and(tmp36, tmp38);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(sequence_e0_a7, carryQ.get_carry_in(5), sequence_e0_a7_adv));
        tmp39 = simd_and(sequence_e0_a7_adv, cc_range_9f2_9fb_3);
        struct_Sc.cc = simd_or(struct_Sc.cc, tmp39);
        byte_ab = simd_and(tmp14, tmp29);
        sequence_e0_ab = simd_and(byte_e0_adv, byte_ab);
        tmp40 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp41 = simd_andc(tmp40, tmp10);
        byte_b1 = simd_and(tmp36, tmp41);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(sequence_e0_ab, carryQ.get_carry_in(6), sequence_e0_ab_adv));
        tmp42 = simd_and(sequence_e0_ab_adv, byte_b1);
        struct_Sc.cc = simd_or(struct_Sc.cc, tmp42);
        byte_af = simd_and(tmp14, tmp25);
        sequence_e0_af = simd_and(byte_e0_adv, byte_af);
        tmp43 = simd_and(tmp27, tmp40);
        byte_b9 = simd_and(tmp36, tmp43);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(sequence_e0_af, carryQ.get_carry_in(7), sequence_e0_af_adv));
        tmp44 = simd_and(sequence_e0_af_adv, byte_b9);
        struct_Sc.cc = simd_or(struct_Sc.cc, tmp44);
        byte_b8 = simd_and(tmp36, tmp28);
        sequence_e0_b8 = simd_and(byte_e0_adv, byte_b8);
        byte_bf = simd_and(tmp36, tmp25);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(sequence_e0_b8, carryQ.get_carry_in(8), sequence_e0_b8_adv));
        tmp45 = simd_and(sequence_e0_b8_adv, byte_bf);
        struct_Sc.cc = simd_or(struct_Sc.cc, tmp45);
        byte_e1 = simd_and(tmp31, tmp41);
        tmp46 = simd_and(tmp13, tmp19);
        byte_9f = simd_and(tmp46, tmp25);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(9), tmp47));
        sequence_e1_9f = simd_and(tmp47, byte_9f);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(10), byte_e1_adv));
        byte_9b = simd_and(tmp46, tmp29);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(sequence_e1_9f, carryQ.get_carry_in(11), sequence_e1_9f_adv));
        tmp48 = simd_and(sequence_e1_9f_adv, byte_9b);
        struct_Sc.cc = simd_or(struct_Sc.cc, tmp48);
        byte_e2 = simd_and(tmp31, tmp12);
        byte_82 = simd_and(tmp22, tmp12);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(12), tmp49));
        sequence_e2_82 = simd_and(tmp49, byte_82);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(13), byte_e2_adv));
        tmp50 = simd_and(tmp13, basis_bits.bit_2);
        tmp51 = simd_or(basis_bits.bit_5, tmp24);
        tmp52 = simd_and(basis_bits.bit_4, tmp51);
        tmp53 = simd_and(basis_bits.bit_3, tmp52);
        byte_range_a0_ba = simd_andc(tmp50, tmp53);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(sequence_e2_82, carryQ.get_carry_in(14), sequence_e2_82_adv));
        tmp54 = simd_and(sequence_e2_82_adv, byte_range_a0_ba);
        struct_Sc.cc = simd_or(struct_Sc.cc, tmp54);
        tmp55 = simd_and(tmp27, tmp11);
        byte_ea = simd_and(tmp31, tmp55);
        byte_a0 = simd_andc(tmp14, tmp32);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(byte_ea, carryQ.get_carry_in(15), tmp56));
        sequence_ea_a0 = simd_and(tmp56, byte_a0);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(byte_ea, carryQ.get_carry_in(16), byte_ea_adv));
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(sequence_ea_a0, carryQ.get_carry_in(17), sequence_ea_a0_adv));
        tmp57 = simd_and(sequence_ea_a0_adv, byte_b8);
        struct_Sc.cc = simd_or(struct_Sc.cc, tmp57);
        byte_ef = simd_and(tmp31, tmp25);
        byte_b7 = simd_and(tmp36, tmp33);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(18), tmp58));
        sequence_ef_b7 = simd_and(tmp58, byte_b7);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(19), byte_ef_adv));
        tmp59 = simd_andc(tmp23, tmp5);
        byte_bc = simd_and(tmp36, tmp59);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(sequence_ef_b7, carryQ.get_carry_in(20), sequence_ef_b7_adv));
        tmp60 = simd_and(sequence_ef_b7_adv, byte_bc);
        struct_Sc.cc = simd_or(struct_Sc.cc, tmp60);
        sequence_ef_b9 = simd_and(byte_ef_adv, byte_b9);
        byte_a9 = simd_and(tmp14, tmp43);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(sequence_ef_b9, carryQ.get_carry_in(21), sequence_ef_b9_adv));
        tmp61 = simd_and(sequence_ef_b9_adv, byte_a9);
        struct_Sc.cc = simd_or(struct_Sc.cc, tmp61);
        sequence_ef_bc = simd_and(byte_ef_adv, byte_bc);
        byte_84 = simd_and(tmp22, tmp6);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(sequence_ef_bc, carryQ.get_carry_in(22), sequence_ef_bc_adv));
        tmp62 = simd_and(sequence_ef_bc_adv, byte_84);
        struct_Sc.cc = simd_or(struct_Sc.cc, tmp62);
        sequence_ef_bf = simd_and(byte_ef_adv, byte_bf);
        tmp63 = simd_or(tmp10, basis_bits.bit_6);
        tmp64 = simd_andc(tmp14, tmp63);
        tmp65 = simd_and(tmp14, tmp4);
        tmp66 = simd_not(basis_bits.bit_7);
        tmp67 = simd_or(simd_and(basis_bits.bit_6, tmp66), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
        tmp68 = simd_and(tmp65, tmp67);
        cc_range_ffe0_ffe5_3 = simd_or(tmp64, tmp68);
        carryQ.cq[23] = carryout2carry(pablo_blk_Advance(sequence_ef_bf, carryQ.get_carry_in(23), sequence_ef_bf_adv));
        tmp69 = simd_and(sequence_ef_bf_adv, cc_range_ffe0_ffe5_3);
        struct_Sc.cc = simd_or(struct_Sc.cc, tmp69);
  }
  CarryArray<24, 0> carryQ;
  };

  struct Zl {
  Zl() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Zl & struct_Zl) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, byte_e2, tmp7, tmp8, tmp9, tmp10;
		BitBlock tmp11, byte_80, tmp12, sequence_e2_80, byte_e2_adv, tmp13, tmp14;
		BitBlock tmp15, byte_a8, sequence_e2_80_adv, tmp16;




        struct_Zl.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_and(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_andc(tmp5, tmp4);
        byte_e2 = simd_and(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp9 = simd_andc(tmp7, tmp8);
        tmp10 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp11 = simd_or(tmp4, tmp10);
        byte_80 = simd_andc(tmp9, tmp11);
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(0), tmp12));
        sequence_e2_80 = simd_and(tmp12, byte_80);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(1), byte_e2_adv));
        tmp13 = simd_and(tmp7, tmp2);
        tmp14 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp15 = simd_andc(tmp14, tmp10);
        byte_a8 = simd_and(tmp13, tmp15);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(sequence_e2_80, carryQ.get_carry_in(2), sequence_e2_80_adv));
        tmp16 = simd_and(sequence_e2_80_adv, byte_a8);
        struct_Zl.cc = simd_or(struct_Zl.cc, tmp16);
        carryQ.CarryQ_Adjust(3);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Zl & struct_Zl, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, byte_e2, tmp7, tmp8, tmp9, tmp10;
		BitBlock tmp11, byte_80, tmp12, sequence_e2_80, byte_e2_adv, tmp13, tmp14;
		BitBlock tmp15, byte_a8, sequence_e2_80_adv, tmp16;




        struct_Zl.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_and(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_andc(tmp5, tmp4);
        byte_e2 = simd_and(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp9 = simd_andc(tmp7, tmp8);
        tmp10 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp11 = simd_or(tmp4, tmp10);
        byte_80 = simd_andc(tmp9, tmp11);
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(0), tmp12));
        sequence_e2_80 = simd_and(tmp12, byte_80);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(1), byte_e2_adv));
        tmp13 = simd_and(tmp7, tmp2);
        tmp14 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp15 = simd_andc(tmp14, tmp10);
        byte_a8 = simd_and(tmp13, tmp15);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(sequence_e2_80, carryQ.get_carry_in(2), sequence_e2_80_adv));
        tmp16 = simd_and(sequence_e2_80_adv, byte_a8);
        struct_Zl.cc = simd_or(struct_Zl.cc, tmp16);
  }
  CarryArray<3, 0> carryQ;
  };

  struct Co {
  Co() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Co & struct_Co) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, byte_ee, byte_range_80_bf, tmp7;
		BitBlock byte_ee_byte_range_80_bf, tmp8, byte_ee_byte_range_80_bf_sfx, tmp9;
		BitBlock tmp10, byte_ef, tmp11, tmp12, tmp13, byte_range_80_a3, tmp14;
		BitBlock byte_ef_byte_range_80_a3, tmp15, byte_ef_byte_range_80_a3_sfx, tmp16;
		BitBlock tmp17, tmp18, byte_f3, tmp19, tmp20, tmp21, byte_range_b0_be, tmp22;
		BitBlock byte_f3_byte_range_b0_be, tmp23, byte_f3_byte_range_b0_be_sfx, tmp24;
		BitBlock byte_f3_byte_range_b0_be_sfx_sfx, byte_bf, byte_f3_adv;
		BitBlock sequence_f3_bf, tmp25, tmp26, tmp27, tmp28, byte_80;
		BitBlock sequence_f3_bf_adv, sequence_f3_bf_80, tmp29, tmp30, tmp31;
		BitBlock byte_range_80_bd, tmp32, sequence_f3_bf_80_byte_range_80_bd;




        struct_Co.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_and(tmp1, tmp2);
        tmp4 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_and(tmp4, tmp5);
        byte_ee = simd_and(tmp3, tmp6);
        byte_range_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(byte_ee, carryQ.get_carry_in(0), tmp7));
        byte_ee_byte_range_80_bf = simd_and(tmp7, byte_range_80_bf);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(byte_ee_byte_range_80_bf, carryQ.get_carry_in(1), tmp8));
        byte_ee_byte_range_80_bf_sfx = simd_and(tmp8, byte_range_80_bf);
        struct_Co.cc = simd_or(struct_Co.cc, byte_ee_byte_range_80_bf_sfx);
        tmp9 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp10 = simd_and(tmp4, tmp9);
        byte_ef = simd_and(tmp3, tmp10);
        tmp11 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp12 = simd_or(basis_bits.bit_3, tmp11);
        tmp13 = simd_and(basis_bits.bit_2, tmp12);
        byte_range_80_a3 = simd_andc(byte_range_80_bf, tmp13);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(2), tmp14));
        byte_ef_byte_range_80_a3 = simd_and(tmp14, byte_range_80_a3);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(byte_ef_byte_range_80_a3, carryQ.get_carry_in(3), tmp15));
        byte_ef_byte_range_80_a3_sfx = simd_and(tmp15, byte_range_80_bf);
        struct_Co.cc = simd_or(struct_Co.cc, byte_ef_byte_range_80_a3_sfx);
        tmp16 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp17 = simd_and(tmp1, tmp16);
        tmp18 = simd_andc(tmp9, tmp11);
        byte_f3 = simd_and(tmp17, tmp18);
        tmp19 = simd_and(byte_range_80_bf, tmp16);
        tmp20 = simd_and(basis_bits.bit_5, tmp9);
        tmp21 = simd_and(basis_bits.bit_4, tmp20);
        byte_range_b0_be = simd_andc(tmp19, tmp21);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(byte_f3, carryQ.get_carry_in(4), tmp22));
        byte_f3_byte_range_b0_be = simd_and(tmp22, byte_range_b0_be);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(byte_f3_byte_range_b0_be, carryQ.get_carry_in(5), tmp23));
        byte_f3_byte_range_b0_be_sfx = simd_and(tmp23, byte_range_80_bf);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(byte_f3_byte_range_b0_be_sfx, carryQ.get_carry_in(6), tmp24));
        byte_f3_byte_range_b0_be_sfx_sfx = simd_and(tmp24, byte_range_80_bf);
        struct_Co.cc = simd_or(struct_Co.cc, byte_f3_byte_range_b0_be_sfx_sfx);
        byte_bf = simd_and(tmp19, tmp10);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(byte_f3, carryQ.get_carry_in(7), byte_f3_adv));
        sequence_f3_bf = simd_and(byte_f3_adv, byte_bf);
        tmp25 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp26 = simd_andc(byte_range_80_bf, tmp25);
        tmp27 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp28 = simd_or(tmp11, tmp27);
        byte_80 = simd_andc(tmp26, tmp28);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(sequence_f3_bf, carryQ.get_carry_in(8), sequence_f3_bf_adv));
        sequence_f3_bf_80 = simd_and(sequence_f3_bf_adv, byte_80);
        tmp29 = simd_and(tmp4, basis_bits.bit_6);
        tmp30 = simd_and(basis_bits.bit_3, tmp29);
        tmp31 = simd_and(basis_bits.bit_2, tmp30);
        byte_range_80_bd = simd_andc(byte_range_80_bf, tmp31);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(sequence_f3_bf_80, carryQ.get_carry_in(9), tmp32));
        sequence_f3_bf_80_byte_range_80_bd = simd_and(tmp32, byte_range_80_bd);
        struct_Co.cc = simd_or(struct_Co.cc, sequence_f3_bf_80_byte_range_80_bd);
        carryQ.CarryQ_Adjust(10);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Co & struct_Co, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, byte_ee, byte_range_80_bf, tmp7;
		BitBlock byte_ee_byte_range_80_bf, tmp8, byte_ee_byte_range_80_bf_sfx, tmp9;
		BitBlock tmp10, byte_ef, tmp11, tmp12, tmp13, byte_range_80_a3, tmp14;
		BitBlock byte_ef_byte_range_80_a3, tmp15, byte_ef_byte_range_80_a3_sfx, tmp16;
		BitBlock tmp17, tmp18, byte_f3, tmp19, tmp20, tmp21, byte_range_b0_be, tmp22;
		BitBlock byte_f3_byte_range_b0_be, tmp23, byte_f3_byte_range_b0_be_sfx, tmp24;
		BitBlock byte_f3_byte_range_b0_be_sfx_sfx, byte_bf, byte_f3_adv;
		BitBlock sequence_f3_bf, tmp25, tmp26, tmp27, tmp28, byte_80;
		BitBlock sequence_f3_bf_adv, sequence_f3_bf_80, tmp29, tmp30, tmp31;
		BitBlock byte_range_80_bd, tmp32, sequence_f3_bf_80_byte_range_80_bd;




        struct_Co.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_and(tmp1, tmp2);
        tmp4 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_and(tmp4, tmp5);
        byte_ee = simd_and(tmp3, tmp6);
        byte_range_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(byte_ee, carryQ.get_carry_in(0), tmp7));
        byte_ee_byte_range_80_bf = simd_and(tmp7, byte_range_80_bf);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(byte_ee_byte_range_80_bf, carryQ.get_carry_in(1), tmp8));
        byte_ee_byte_range_80_bf_sfx = simd_and(tmp8, byte_range_80_bf);
        struct_Co.cc = simd_or(struct_Co.cc, byte_ee_byte_range_80_bf_sfx);
        tmp9 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp10 = simd_and(tmp4, tmp9);
        byte_ef = simd_and(tmp3, tmp10);
        tmp11 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp12 = simd_or(basis_bits.bit_3, tmp11);
        tmp13 = simd_and(basis_bits.bit_2, tmp12);
        byte_range_80_a3 = simd_andc(byte_range_80_bf, tmp13);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(2), tmp14));
        byte_ef_byte_range_80_a3 = simd_and(tmp14, byte_range_80_a3);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(byte_ef_byte_range_80_a3, carryQ.get_carry_in(3), tmp15));
        byte_ef_byte_range_80_a3_sfx = simd_and(tmp15, byte_range_80_bf);
        struct_Co.cc = simd_or(struct_Co.cc, byte_ef_byte_range_80_a3_sfx);
        tmp16 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp17 = simd_and(tmp1, tmp16);
        tmp18 = simd_andc(tmp9, tmp11);
        byte_f3 = simd_and(tmp17, tmp18);
        tmp19 = simd_and(byte_range_80_bf, tmp16);
        tmp20 = simd_and(basis_bits.bit_5, tmp9);
        tmp21 = simd_and(basis_bits.bit_4, tmp20);
        byte_range_b0_be = simd_andc(tmp19, tmp21);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(byte_f3, carryQ.get_carry_in(4), tmp22));
        byte_f3_byte_range_b0_be = simd_and(tmp22, byte_range_b0_be);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(byte_f3_byte_range_b0_be, carryQ.get_carry_in(5), tmp23));
        byte_f3_byte_range_b0_be_sfx = simd_and(tmp23, byte_range_80_bf);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(byte_f3_byte_range_b0_be_sfx, carryQ.get_carry_in(6), tmp24));
        byte_f3_byte_range_b0_be_sfx_sfx = simd_and(tmp24, byte_range_80_bf);
        struct_Co.cc = simd_or(struct_Co.cc, byte_f3_byte_range_b0_be_sfx_sfx);
        byte_bf = simd_and(tmp19, tmp10);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(byte_f3, carryQ.get_carry_in(7), byte_f3_adv));
        sequence_f3_bf = simd_and(byte_f3_adv, byte_bf);
        tmp25 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp26 = simd_andc(byte_range_80_bf, tmp25);
        tmp27 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp28 = simd_or(tmp11, tmp27);
        byte_80 = simd_andc(tmp26, tmp28);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(sequence_f3_bf, carryQ.get_carry_in(8), sequence_f3_bf_adv));
        sequence_f3_bf_80 = simd_and(sequence_f3_bf_adv, byte_80);
        tmp29 = simd_and(tmp4, basis_bits.bit_6);
        tmp30 = simd_and(basis_bits.bit_3, tmp29);
        tmp31 = simd_and(basis_bits.bit_2, tmp30);
        byte_range_80_bd = simd_andc(byte_range_80_bf, tmp31);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(sequence_f3_bf_80, carryQ.get_carry_in(9), tmp32));
        sequence_f3_bf_80_byte_range_80_bd = simd_and(tmp32, byte_range_80_bd);
        struct_Co.cc = simd_or(struct_Co.cc, sequence_f3_bf_80_byte_range_80_bd);
  }
  CarryArray<10, 0> carryQ;
  };

  struct Cn {
  Cn() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Cn & struct_Cn) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, byte_cd, tmp7, tmp8, tmp9, tmp10;
		BitBlock tmp11, tmp12, tmp13, tmp14, cc_range_378_37f_2, byte_cd_adv, tmp15;
		BitBlock tmp16, tmp17, byte_ce, tmp18, tmp19, tmp20, tmp21, tmp22, tmp23;
		BitBlock tmp24, tmp25, tmp26, tmp27, cc_range_380_3a2_2, byte_ce_adv, tmp28;
		BitBlock tmp29, tmp30, tmp31, tmp32, tmp33, byte_d4, tmp34, tmp35, tmp36;
		BitBlock tmp37, byte_range_a8_b0, byte_d4_adv, tmp38, tmp39, byte_d5, tmp40;
		BitBlock tmp41, tmp42, tmp43, tmp44, tmp45, tmp46, cc_range_557_560_2;
		BitBlock byte_d5_adv, tmp47, tmp48, byte_d6, tmp49, tmp50, tmp51, tmp52, tmp53;
		BitBlock tmp54, tmp55, tmp56, cc_range_588_590_2, byte_d6_adv, tmp57, tmp58;
		BitBlock byte_d7, tmp59, tmp60, tmp61, tmp62, tmp63, tmp64, tmp65;
		BitBlock cc_range_5c8_5f5_2, byte_d7_adv, tmp66, byte_d8, tmp67, tmp68;
		BitBlock cc_range_605_61d_2, byte_d8_adv, tmp69, tmp70, byte_dc, byte_8e;
		BitBlock byte_dc_adv, tmp71, byte_dd, tmp72, tmp73, byte_range_8b_8c;
		BitBlock byte_dd_adv, tmp74, byte_de, tmp75, tmp76, byte_range_b2_bf;
		BitBlock byte_de_adv, tmp77, byte_df, tmp78, byte_range_bb_bf, byte_df_adv;
		BitBlock tmp79, tmp80, byte_e0, byte_a0, tmp81, sequence_e0_a0, byte_e0_adv;
		BitBlock tmp82, tmp83, tmp84, cc_range_82e_83f_3, sequence_e0_a0_adv, tmp85;
		BitBlock tmp86, byte_a1, sequence_e0_a1, tmp87, tmp88, tmp89, tmp90, tmp91;
		BitBlock cc_range_85c_85f_3, sequence_e0_a1_adv, tmp92, byte_a2;
		BitBlock sequence_e0_a2, tmp93, tmp94, tmp95, tmp96, tmp97, cc_range_880_8ad_3;
		BitBlock sequence_e0_a2_adv, tmp98, tmp99, byte_a3, sequence_e0_a3, tmp100;
		BitBlock tmp101, tmp102, cc_range_8c0_8ff_3, sequence_e0_a3_adv, tmp103;
		BitBlock byte_a5, sequence_e0_a5, byte_b8, sequence_e0_a5_adv, tmp104, byte_a6;
		BitBlock sequence_e0_a6, tmp105, tmp106, tmp107, tmp108, tmp109, tmp110;
		BitBlock tmp111, tmp112, tmp113, tmp114, tmp115, tmp116, tmp117, tmp118;
		BitBlock tmp119, tmp120, tmp121, tmp122, tmp123, tmp124, tmp125, tmp126;
		BitBlock cc_range_980_9ba_3, sequence_e0_a6_adv, tmp127, byte_a7;
		BitBlock sequence_e0_a7, tmp128, tmp129, tmp130, tmp131, tmp132, tmp133;
		BitBlock tmp134, tmp135, tmp136, tmp137, tmp138, tmp139, tmp140, tmp141;
		BitBlock tmp142, tmp143, cc_range_9c5_9fc_3, sequence_e0_a7_adv, tmp144;
		BitBlock byte_a8, sequence_e0_a8, tmp145, tmp146, tmp147, tmp148, tmp149;
		BitBlock tmp150, tmp151, tmp152, tmp153, tmp154, cc_range_a00_a3d_3;
		BitBlock sequence_e0_a8_adv, tmp155, byte_a9, sequence_e0_a9, tmp156, tmp157;
		BitBlock tmp158, tmp159, tmp160, tmp161, tmp162, tmp163, tmp164, tmp165;
		BitBlock tmp166, tmp167, tmp168, tmp169, tmp170, tmp171, tmp172, tmp173;
		BitBlock tmp174, tmp175, cc_range_a43_a76_3, sequence_e0_a9_adv, tmp176;
		BitBlock tmp177, byte_aa, sequence_e0_aa, tmp178, tmp179, tmp180, tmp181;
		BitBlock tmp182, tmp183, tmp184, cc_range_a80_aba_3, sequence_e0_aa_adv;
		BitBlock tmp185, byte_ab, sequence_e0_ab, tmp186, tmp187, tmp188, tmp189;
		BitBlock tmp190, tmp191, tmp192, cc_range_ac6_af2_3, sequence_e0_ab_adv;
		BitBlock tmp193, byte_ac, sequence_e0_ac, tmp194, tmp195, tmp196;
		BitBlock cc_range_b00_b3a_3, sequence_e0_ac_adv, tmp197, byte_ad;
		BitBlock sequence_e0_ad, tmp198, tmp199, tmp200, tmp201, tmp202, tmp203;
		BitBlock tmp204, cc_range_b45_b78_3, sequence_e0_ad_adv, tmp205, byte_ae;
		BitBlock sequence_e0_ae, tmp206, tmp207, tmp208, tmp209, tmp210, tmp211;
		BitBlock tmp212, tmp213, tmp214, tmp215, tmp216, tmp217, tmp218, tmp219;
		BitBlock tmp220, tmp221, tmp222, tmp223, tmp224, tmp225, tmp226, tmp227;
		BitBlock tmp228, cc_range_b80_bba_3, sequence_e0_ae_adv, tmp229, byte_af;
		BitBlock sequence_e0_af, tmp230, tmp231, tmp232, tmp233, tmp234, tmp235;
		BitBlock tmp236, tmp237, tmp238, tmp239, tmp240, tmp241, tmp242;
		BitBlock cc_range_bc3_bfb_3, sequence_e0_af_adv, tmp243, byte_b0;
		BitBlock sequence_e0_b0, tmp244, tmp245, tmp246, tmp247, tmp248, tmp249;
		BitBlock tmp250, cc_range_c00_c3a_3, sequence_e0_b0_adv, tmp251, byte_b1;
		BitBlock sequence_e0_b1, tmp252, tmp253, tmp254, tmp255, tmp256, tmp257;
		BitBlock tmp258, tmp259, tmp260, tmp261, tmp262, tmp263, cc_range_c45_c70_3;
		BitBlock sequence_e0_b1_adv, tmp264, byte_b2, sequence_e0_b2, tmp265, tmp266;
		BitBlock tmp267, tmp268, tmp269, cc_range_c80_cba_3, sequence_e0_b2_adv;
		BitBlock tmp270, byte_b3, sequence_e0_b3, tmp271, tmp272, tmp273, tmp274;
		BitBlock tmp275, tmp276, tmp277, tmp278, tmp279, tmp280, cc_range_cc5_cf3_3;
		BitBlock sequence_e0_b3_adv, tmp281, byte_b4, sequence_e0_b4, tmp282;
		BitBlock cc_range_d00_d3b_3, sequence_e0_b4_adv, tmp283, byte_b5;
		BitBlock sequence_e0_b5, tmp284, tmp285, tmp286, tmp287, cc_range_d45_d76_3;
		BitBlock sequence_e0_b5_adv, tmp288, byte_b6, sequence_e0_b6, tmp289, tmp290;
		BitBlock tmp291, tmp292, tmp293, tmp294, tmp295, tmp296, cc_range_d80_dbe_3;
		BitBlock sequence_e0_b6_adv, tmp297, byte_b7, sequence_e0_b7, tmp298, tmp299;
		BitBlock tmp300, tmp301, tmp302, tmp303, tmp304, tmp305, cc_range_dc7_df5_3;
		BitBlock sequence_e0_b7_adv, tmp306, sequence_e0_b8, tmp307, tmp308;
		BitBlock cc_range_e00_e3b_3, sequence_e0_b8_adv, tmp309, byte_b9;
		BitBlock sequence_e0_b9, tmp310, tmp311, byte_range_9c_bf, sequence_e0_b9_adv;
		BitBlock tmp312, byte_ba, sequence_e0_ba, tmp313, tmp314, tmp315, tmp316;
		BitBlock tmp317, tmp318, tmp319, tmp320, tmp321, tmp322, tmp323, tmp324;
		BitBlock tmp325, tmp326, tmp327, tmp328, tmp329, tmp330, tmp331, tmp332;
		BitBlock tmp333, cc_range_e80_ebe_3, sequence_e0_ba_adv, tmp334, byte_bb;
		BitBlock sequence_e0_bb, tmp335, tmp336, tmp337, tmp338, tmp339;
		BitBlock cc_range_ec5_ee0_3, sequence_e0_bb_adv, tmp340, byte_bd;
		BitBlock sequence_e0_bd, tmp341, tmp342, cc_range_f48_f6d_3;
		BitBlock sequence_e0_bd_adv, tmp343, byte_be, sequence_e0_be;
		BitBlock cc_range_f98_fbd_3, sequence_e0_be_adv, tmp344, byte_bf;
		BitBlock sequence_e0_bf, tmp345, tmp346, tmp347, tmp348, tmp349;
		BitBlock cc_range_fcd_fdb_3, sequence_e0_bf_adv, tmp350, byte_e1, byte_83;
		BitBlock tmp351, sequence_e1_83, byte_e1_adv, tmp352, tmp353, tmp354;
		BitBlock cc_range_10c6_10ce_3, sequence_e1_83_adv, tmp355, byte_89;
		BitBlock sequence_e1_89, tmp356, tmp357, tmp358, tmp359, tmp360, tmp361;
		BitBlock cc_range_1249_125e_3, sequence_e1_89_adv, tmp362, byte_8a;
		BitBlock sequence_e1_8a, tmp363, tmp364, tmp365, tmp366, cc_range_1289_12bf_3;
		BitBlock sequence_e1_8a_adv, tmp367, byte_8b, sequence_e1_8b, tmp368, tmp369;
		BitBlock cc_range_12c1_12d7_3, sequence_e1_8b_adv, tmp370, byte_8c;
		BitBlock sequence_e1_8c, cc_range_1311_1316_3, sequence_e1_8c_adv, tmp371;
		BitBlock byte_8d, sequence_e1_8d, tmp372, tmp373, cc_range_135b_137d_3;
		BitBlock sequence_e1_8d_adv, tmp374, sequence_e1_8e, byte_range_9a_9f;
		BitBlock sequence_e1_8e_adv, tmp375, byte_8f, sequence_e1_8f, byte_range_b5_bf;
		BitBlock sequence_e1_8f_adv, tmp376, byte_9a, sequence_e1_9a, tmp377;
		BitBlock byte_range_9d_9f, sequence_e1_9a_adv, tmp378, byte_9b, sequence_e1_9b;
		BitBlock byte_range_b1_bf, sequence_e1_9b_adv, tmp379, byte_9c, sequence_e1_9c;
		BitBlock tmp380, tmp381, tmp382, cc_range_170d_1737_3, sequence_e1_9c_adv;
		BitBlock tmp383, byte_9d, sequence_e1_9d, tmp384, tmp385, tmp386, tmp387;
		BitBlock cc_range_1754_1774_3, sequence_e1_9d_adv, tmp388, byte_9f;
		BitBlock sequence_e1_9f, tmp389, tmp390, tmp391, cc_range_17de_17fa_3;
		BitBlock sequence_e1_9f_adv, tmp392, sequence_e1_a0, cc_range_180f_181a_3;
		BitBlock sequence_e1_a0_adv, tmp393, sequence_e1_a1, byte_range_b8_bf;
		BitBlock sequence_e1_a1_adv, tmp394, sequence_e1_a2, byte_range_ab_af;
		BitBlock sequence_e1_a2_adv, tmp395, sequence_e1_a3, byte_range_b6_bf;
		BitBlock sequence_e1_a3_adv, tmp396, byte_a4, sequence_e1_a4, tmp397, tmp398;
		BitBlock cc_range_191d_193c_3, sequence_e1_a4_adv, tmp399, sequence_e1_a5;
		BitBlock tmp400, tmp401, tmp402, cc_range_1941_1975_3, sequence_e1_a5_adv;
		BitBlock tmp403, sequence_e1_a6, byte_range_ac_af, sequence_e1_a6_adv, tmp404;
		BitBlock sequence_e1_a7, tmp405, tmp406, cc_range_19ca_19db_3;
		BitBlock sequence_e1_a7_adv, tmp407, sequence_e1_a8, byte_range_9c_9d;
		BitBlock sequence_e1_a8_adv, tmp408, sequence_e1_a9, tmp409;
		BitBlock cc_range_1a5f_1a7d_3, sequence_e1_a9_adv, tmp410, sequence_e1_aa;
		BitBlock tmp411, tmp412, tmp413, tmp414, tmp415, tmp416, cc_range_1a8a_1aae_3;
		BitBlock sequence_e1_aa_adv, tmp417, sequence_e1_ab, byte_range_80_bf;
		BitBlock sequence_e1_ab_adv, tmp418, tmp419, sequence_e1_ad, tmp420, tmp421;
		BitBlock tmp422, tmp423, tmp424, cc_range_1b4c_1b7d_3, sequence_e1_ad_adv;
		BitBlock tmp425, sequence_e1_af, tmp426, tmp427, byte_range_b4_bb;
		BitBlock sequence_e1_af_adv, tmp428, sequence_e1_b0, tmp429, byte_range_b8_ba;
		BitBlock sequence_e1_b0_adv, tmp430, sequence_e1_b1, tmp431, byte_range_8a_8c;
		BitBlock sequence_e1_b1_adv, tmp432, sequence_e1_b2, sequence_e1_b2_adv;
		BitBlock tmp433, sequence_e1_b3, tmp434, cc_range_1cc8_1cf7_3;
		BitBlock sequence_e1_b3_adv, tmp435, sequence_e1_b7, tmp436, tmp437, tmp438;
		BitBlock byte_range_a7_bb, sequence_e1_b7_adv, tmp439, byte_bc, sequence_e1_bc;
		BitBlock tmp440, tmp441, cc_range_1f16_1f1e_3, sequence_e1_bc_adv, tmp442;
		BitBlock sequence_e1_bd, tmp443, tmp444, tmp445, tmp446, tmp447, tmp448;
		BitBlock tmp449, tmp450, tmp451, tmp452, cc_range_1f46_1f7e_3;
		BitBlock sequence_e1_bd_adv, tmp453, sequence_e1_be, sequence_e1_be_adv;
		BitBlock tmp454, sequence_e1_bf, tmp455, tmp456, tmp457, tmp458, tmp459;
		BitBlock tmp460, tmp461, tmp462, tmp463, cc_range_1fc5_1fff_3;
		BitBlock sequence_e1_bf_adv, tmp464, byte_e2, byte_81, tmp465, sequence_e2_81;
		BitBlock byte_e2_adv, tmp466, tmp467, tmp468, cc_range_2065_2072_3;
		BitBlock sequence_e2_81_adv, tmp469, byte_82, sequence_e2_82, tmp470, tmp471;
		BitBlock tmp472, tmp473, tmp474, tmp475, cc_range_208f_20bb_3;
		BitBlock sequence_e2_82_adv, tmp476, sequence_e2_83, tmp477;
		BitBlock cc_range_20c0_20f1_3, sequence_e2_83_adv, tmp478, byte_86;
		BitBlock sequence_e2_86, byte_range_8a_8f, sequence_e2_86_adv, tmp479;
		BitBlock sequence_e2_8f, byte_range_b4_bf, sequence_e2_8f_adv, tmp480, byte_90;
		BitBlock sequence_e2_90, tmp481, byte_range_a7_bf, sequence_e2_90_adv, tmp482;
		BitBlock byte_91, sequence_e2_91, tmp483, tmp484, byte_range_8b_9f;
		BitBlock sequence_e2_91_adv, tmp485, sequence_e2_9c, byte_80;
		BitBlock sequence_e2_9c_adv, tmp486, sequence_e2_ad, tmp487, tmp488, tmp489;
		BitBlock tmp490, tmp491, cc_range_2b4d_2b5a_3, sequence_e2_ad_adv, tmp492;
		BitBlock byte_range_ae_af, byte_e2_byte_range_ae_af, tmp493;
		BitBlock byte_e2_byte_range_ae_af_sfx, sequence_e2_b0, tmp494;
		BitBlock sequence_e2_b0_af, sequence_e2_b1, tmp495, sequence_e2_b1_9f;
		BitBlock sequence_e2_b3, tmp496, byte_range_b4_b8, tmp497;
		BitBlock sequence_e2_b3_byte_range_b4_b8, sequence_e2_b4, tmp498;
		BitBlock sequence_e2_b4_a6, sequence_e2_b5, tmp499, byte_range_a8_ae, tmp500;
		BitBlock sequence_e2_b5_byte_range_a8_ae, sequence_e2_b6, byte_range_97_9f;
		BitBlock tmp501, sequence_e2_b6_byte_range_97_9f, sequence_e2_b7, byte_87;
		BitBlock tmp502, sequence_e2_b7_87, sequence_e2_b8, byte_range_bc_bf, tmp503;
		BitBlock sequence_e2_b8_byte_range_bc_bf, sequence_e2_b9, tmp504;
		BitBlock sequence_e2_b9_byte_range_80_bf, sequence_e2_ba, tmp505;
		BitBlock sequence_e2_ba_9a, sequence_e2_bb, tmp506;
		BitBlock sequence_e2_bb_byte_range_b4_bf, sequence_e2_bf, tmp507, tmp508;
		BitBlock tmp509, byte_range_96_af, tmp510, sequence_e2_bf_byte_range_96_af;
		BitBlock byte_e3, tmp511, sequence_e3_81, byte_e3_adv, sequence_e3_81_adv;
		BitBlock tmp512, sequence_e3_82, byte_range_97_98, sequence_e3_82_adv, tmp513;
		BitBlock byte_84, sequence_e3_84, tmp514, tmp515, tmp516, cc_range_3100_312e_3;
		BitBlock sequence_e3_84_adv, tmp517, sequence_e3_86, cc_range_318f_31bb_3;
		BitBlock sequence_e3_86_adv, tmp518, sequence_e3_87, byte_range_a4_af;
		BitBlock sequence_e3_87_adv, tmp519, byte_88, sequence_e3_88;
		BitBlock sequence_e3_88_adv, tmp520, sequence_e3_8b, sequence_e3_8b_adv;
		BitBlock tmp521, byte_e4, tmp522, sequence_e4_b6, byte_e4_adv;
		BitBlock sequence_e4_b6_adv, tmp523, byte_e9, tmp524, sequence_e9_bf;
		BitBlock byte_e9_adv, tmp525, byte_range_8d_bf, sequence_e9_bf_adv, tmp526;
		BitBlock byte_ea, byte_92, tmp527, sequence_ea_92, byte_ea_adv;
		BitBlock byte_range_8d_8f, sequence_ea_92_adv, tmp528, byte_93, sequence_ea_93;
		BitBlock byte_range_87_8f, sequence_ea_93_adv, tmp529, byte_98, sequence_ea_98;
		BitBlock tmp530, byte_range_ac_bf, sequence_ea_98_adv, tmp531, sequence_ea_9a;
		BitBlock tmp532, byte_range_98_9e, sequence_ea_9a_adv, tmp533, sequence_ea_9b;
		BitBlock sequence_ea_9b_adv, tmp534, byte_9e, sequence_ea_9e, tmp535, tmp536;
		BitBlock tmp537, cc_range_a78f_a7ab_3, sequence_ea_9e_adv, tmp538;
		BitBlock sequence_ea_9f, tmp539, byte_range_80_b7, sequence_ea_9f_adv, tmp540;
		BitBlock sequence_ea_a0, tmp541, tmp542, cc_range_a82c_a83a_3;
		BitBlock sequence_ea_a0_adv, tmp543, sequence_ea_a1, sequence_ea_a1_adv;
		BitBlock tmp544, sequence_ea_a3, tmp545, tmp546, tmp547, tmp548;
		BitBlock cc_range_a8c5_a8fc_3, sequence_ea_a3_adv, tmp549, sequence_ea_a5;
		BitBlock tmp550, tmp551, tmp552, tmp553, cc_range_a954_a97d_3;
		BitBlock sequence_ea_a5_adv, tmp554, sequence_ea_a7, tmp555, tmp556, tmp557;
		BitBlock cc_range_a9ce_a9e0_3, sequence_ea_a7_adv, tmp558, sequence_ea_a8;
		BitBlock byte_range_b7_bf, sequence_ea_a8_adv, tmp559, sequence_ea_a9, tmp560;
		BitBlock tmp561, tmp562, cc_range_aa4e_aa7c_3, sequence_ea_a9_adv, tmp563;
		BitBlock sequence_ea_ab, tmp564, tmp565, tmp566, tmp567, cc_range_aac3_aaf7_3;
		BitBlock sequence_ea_ab_adv, tmp568, sequence_ea_ac, tmp569, tmp570, tmp571;
		BitBlock tmp572, tmp573, tmp574, tmp575, tmp576, tmp577, tmp578;
		BitBlock cc_range_ab00_ab2f_3, sequence_ea_ac_adv, tmp579, byte_range_ad_ae;
		BitBlock byte_ea_byte_range_ad_ae, tmp580, byte_ea_byte_range_ad_ae_sfx;
		BitBlock sequence_ea_af, tmp581, sequence_ea_af_byte_range_ae_af, byte_ed;
		BitBlock tmp582, sequence_ed_9e, byte_ed_adv, sequence_ed_9e_adv, tmp583;
		BitBlock sequence_ed_9f, tmp584, tmp585, tmp586, cc_range_d7c7_d7fc_3;
		BitBlock sequence_ed_9f_adv, tmp587, byte_ef, tmp588, sequence_ef_a9;
		BitBlock byte_ef_adv, sequence_ef_a9_adv, tmp589, sequence_ef_ab;
		BitBlock byte_range_9a_bf, sequence_ef_ab_adv, tmp590, sequence_ef_ac, tmp591;
		BitBlock tmp592, tmp593, tmp594, tmp595, tmp596, tmp597, tmp598, tmp599;
		BitBlock cc_range_fb07_fb3f_3, sequence_ef_ac_adv, tmp600, sequence_ef_ad;
		BitBlock tmp601, cc_range_fb42_fb45_3, sequence_ef_ad_adv, tmp602;
		BitBlock sequence_ef_af, tmp603, byte_range_82_92, sequence_ef_af_adv, tmp604;
		BitBlock sequence_ef_b5, byte_range_80_8f, sequence_ef_b5_adv, tmp605;
		BitBlock sequence_ef_b6, byte_range_90_91, sequence_ef_b6_adv, tmp606;
		BitBlock sequence_ef_b7, tmp607, tmp608, tmp609, cc_range_fdc8_fdfe_3;
		BitBlock sequence_ef_b7_adv, tmp610, sequence_ef_b8, tmp611;
		BitBlock cc_range_fe1a_fe27_3, sequence_ef_b8_adv, tmp612, sequence_ef_b9;
		BitBlock tmp613, tmp614, cc_range_fe53_fe75_3, sequence_ef_b9_adv, tmp615;
		BitBlock sequence_ef_bb, byte_range_bd_be, sequence_ef_bb_adv, tmp616;
		BitBlock sequence_ef_bc, sequence_ef_bc_adv, tmp617, sequence_ef_be;
		BitBlock sequence_ef_be_adv, tmp618, sequence_ef_bf, tmp619, tmp620, tmp621;
		BitBlock tmp622, tmp623, tmp624, tmp625, tmp626, tmp627, tmp628, tmp629;
		BitBlock tmp630, cc_range_ffc0_fffe_3, sequence_ef_bf_adv, tmp631, tmp632;
		BitBlock byte_f0, tmp633, sequence_f0_90, byte_f0_adv, tmp634;
		BitBlock sequence_f0_90_80, sequence_f0_90_adv, tmp635, tmp636, tmp637, tmp638;
		BitBlock tmp639, cc_range_1000c_1003e_4, sequence_f0_90_80_adv, tmp640;
		BitBlock sequence_f0_90_81, tmp641, tmp642, tmp643, tmp644;
		BitBlock cc_range_1004e_1005e_4, sequence_f0_90_81_adv, tmp645;
		BitBlock sequence_f0_90_83, sequence_f0_90_83_adv, tmp646, sequence_f0_90_84;
		BitBlock tmp647, tmp648, tmp649, tmp650, cc_range_10103_10134_4;
		BitBlock sequence_f0_90_84_adv, tmp651, sequence_f0_90_86, tmp652, tmp653;
		BitBlock tmp654, cc_range_1018b_1019c_4, sequence_f0_90_86_adv, tmp655;
		BitBlock sequence_f0_90_87, cc_range_101c0_101fe_4, sequence_f0_90_87_adv;
		BitBlock tmp656, byte_range_88_89, sequence_f0_90_byte_range_88_89, tmp657;
		BitBlock sequence_f0_90_byte_range_88_89_sfx, sequence_f0_90_8a, tmp658;
		BitBlock sequence_f0_90_8a_byte_range_9d_9f, sequence_f0_90_8b, tmp659, tmp660;
		BitBlock byte_range_91_bf, tmp661, sequence_f0_90_8b_byte_range_91_bf;
		BitBlock sequence_f0_90_8c, tmp662, sequence_f0_90_8c_9f, sequence_f0_90_8d;
		BitBlock tmp663, byte_range_8b_bf, tmp664, sequence_f0_90_8d_byte_range_8b_bf;
		BitBlock sequence_f0_90_8e, tmp665, sequence_f0_90_8e_9e, sequence_f0_90_8f;
		BitBlock byte_range_84_87, tmp666, sequence_f0_90_8f_byte_range_84_87;
		BitBlock sequence_f0_90_92, byte_range_9e_9f, tmp667;
		BitBlock sequence_f0_90_92_byte_range_9e_9f, sequence_f0_90_93, tmp668;
		BitBlock sequence_f0_90_93_byte_range_80_bf, sequence_f0_90_a0;
		BitBlock byte_range_86_87, tmp669, sequence_f0_90_a0_byte_range_86_87;
		BitBlock sequence_f0_90_a1, byte_96, tmp670, sequence_f0_90_a1_96;
		BitBlock sequence_f0_90_a2, tmp671, sequence_f0_90_a2_byte_range_80_bf;
		BitBlock sequence_f0_90_a4, byte_range_9c_9e, tmp672;
		BitBlock sequence_f0_90_a4_byte_range_9c_9e, sequence_f0_90_a5, tmp673;
		BitBlock sequence_f0_90_a5_byte_range_80_bf, sequence_f0_90_a6;
		BitBlock byte_range_b8_bd, tmp674, sequence_f0_90_a6_byte_range_b8_bd;
		BitBlock sequence_f0_90_a7, tmp675, sequence_f0_90_a7_byte_range_80_bf;
		BitBlock sequence_f0_90_a8, tmp676, sequence_f0_90_a8_84, sequence_f0_90_a9;
		BitBlock byte_range_88_8f, tmp677, sequence_f0_90_a9_byte_range_88_8f;
		BitBlock sequence_f0_90_aa, tmp678, sequence_f0_90_aa_byte_range_80_bf;
		BitBlock sequence_f0_90_ac, byte_range_b6_b8, tmp679;
		BitBlock sequence_f0_90_ac_byte_range_b6_b8, sequence_f0_90_ad;
		BitBlock byte_range_96_97, tmp680, sequence_f0_90_ad_byte_range_96_97;
		BitBlock sequence_f0_90_ae, tmp681, sequence_f0_90_ae_byte_range_80_bf;
		BitBlock sequence_f0_90_b1, tmp682, tmp683, byte_range_89_bf, tmp684;
		BitBlock sequence_f0_90_b1_byte_range_89_bf, sequence_f0_90_b2, tmp685;
		BitBlock sequence_f0_90_b2_byte_range_80_bf, sequence_f0_90_b9;
		BitBlock byte_range_80_9f, tmp686, sequence_f0_90_b9_byte_range_80_9f;
		BitBlock sequence_f0_90_ba, tmp687, sequence_f0_90_ba_byte_range_80_bf;
		BitBlock sequence_f0_91, tmp688, sequence_f0_91_81, sequence_f0_91_adv, tmp689;
		BitBlock tmp690, tmp691, cc_range_1104e_11070_4, sequence_f0_91_81_adv, tmp692;
		BitBlock sequence_f0_91_83, tmp693, tmp694, tmp695, cc_range_110c2_110fa_4;
		BitBlock sequence_f0_91_83_adv, tmp696, sequence_f0_91_84;
		BitBlock sequence_f0_91_84_adv, tmp697, byte_85, sequence_f0_91_85, tmp698;
		BitBlock byte_range_84_bf, sequence_f0_91_85_adv, tmp699, sequence_f0_91_87;
		BitBlock tmp700, cc_range_111c9_111da_4, sequence_f0_91_87_adv, tmp701, tmp702;
		BitBlock tmp703, byte_range_88_99, sequence_f0_91_byte_range_88_99, tmp704;
		BitBlock sequence_f0_91_byte_range_88_99_sfx, sequence_f0_91_9a, tmp705;
		BitBlock sequence_f0_91_9a_byte_range_b8_bf, sequence_f0_91_9b, tmp706, tmp707;
		BitBlock byte_range_8a_bf, tmp708, sequence_f0_91_9b_byte_range_8a_bf;
		BitBlock sequence_f0_91_9c, tmp709, sequence_f0_91_9c_byte_range_80_bf;
		BitBlock sequence_f0_92, tmp710, sequence_f0_92_8d, sequence_f0_92_adv;
		BitBlock byte_range_af_bf, sequence_f0_92_8d_adv, tmp711, byte_range_8e_8f;
		BitBlock sequence_f0_92_byte_range_8e_8f, tmp712;
		BitBlock sequence_f0_92_byte_range_8e_8f_sfx, sequence_f0_92_91;
		BitBlock byte_range_a3_af, tmp713, sequence_f0_92_91_byte_range_a3_af;
		BitBlock sequence_f0_92_92, tmp714, sequence_f0_92_92_byte_range_80_bf;
		BitBlock sequence_f0_93, tmp715, sequence_f0_93_90, sequence_f0_93_adv;
		BitBlock sequence_f0_93_90_adv, tmp716, sequence_f0_93_byte_range_91_bf;
		BitBlock tmp717, sequence_f0_93_byte_range_91_bf_sfx, byte_range_94_95;
		BitBlock byte_f0_byte_range_94_95, tmp718, byte_f0_byte_range_94_95_sfx;
		BitBlock tmp719, byte_f0_byte_range_94_95_sfx_sfx, sequence_f0_96;
		BitBlock sequence_f0_96_adv, sequence_f0_96_80, tmp720;
		BitBlock sequence_f0_96_80_byte_range_80_bf, byte_97, sequence_f0_97;
		BitBlock sequence_f0_97_adv, sequence_f0_97_80, tmp721;
		BitBlock sequence_f0_97_80_byte_range_80_bf, sequence_f0_9b;
		BitBlock sequence_f0_9b_adv, sequence_f0_9b_80, tmp722, tmp723;
		BitBlock byte_range_82_bf, tmp724, sequence_f0_9b_80_byte_range_82_bf;
		BitBlock sequence_f0_9c, sequence_f0_9c_adv, sequence_f0_9c_80, tmp725;
		BitBlock sequence_f0_9c_80_byte_range_80_bf, sequence_f0_9d;
		BitBlock sequence_f0_9d_adv, sequence_f0_9d_83, tmp726;
		BitBlock sequence_f0_9d_83_byte_range_b6_bf, sequence_f0_9e;
		BitBlock sequence_f0_9e_adv, sequence_f0_9e_80, tmp727;
		BitBlock sequence_f0_9e_80_byte_range_80_bf, sequence_f0_9f;
		BitBlock sequence_f0_9f_adv, sequence_f0_9f_80, tmp728;
		BitBlock sequence_f0_9f_80_byte_range_ac_af, sequence_f0_aa;
		BitBlock sequence_f0_aa_adv, sequence_f0_aa_9b, tmp729, tmp730;
		BitBlock byte_range_97_bf, tmp731, sequence_f0_aa_9b_byte_range_97_bf;
		BitBlock sequence_f0_ab, sequence_f0_ab_adv, sequence_f0_ab_9c, tmp732;
		BitBlock sequence_f0_ab_9c_byte_range_b5_bf, sequence_f0_ac;
		BitBlock sequence_f0_ac_adv, sequence_f0_ac_80, tmp733;
		BitBlock sequence_f0_ac_80_byte_range_80_bf, sequence_f0_af;
		BitBlock sequence_f0_af_adv, sequence_f0_af_80, tmp734;
		BitBlock sequence_f0_af_80_byte_range_80_bf, sequence_f0_b0;
		BitBlock sequence_f0_b0_adv, sequence_f0_b0_80, tmp735;
		BitBlock sequence_f0_b0_80_byte_range_80_bf, tmp736, byte_range_f1_f2, tmp737;
		BitBlock byte_range_f1_f2_sfx, tmp738, byte_range_f1_f2_sfx_sfx, tmp739;
		BitBlock byte_range_f1_f2_sfx_sfx_sfx, byte_f3, byte_f3_adv, sequence_f3_80;
		BitBlock sequence_f3_80_adv, sequence_f3_80_80, tmp740, sequence_f3_80_80_80;




        struct_Cn.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp1, tmp2);
        tmp4 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp6 = simd_and(tmp4, tmp5);
        byte_cd = simd_and(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp11 = simd_andc(tmp10, basis_bits.bit_6);
        tmp12 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp13 = simd_and(tmp4, tmp12);
        tmp14 = simd_or(tmp11, tmp13);
        cc_range_378_37f_2 = simd_and(tmp9, tmp14);
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(byte_cd, carryQ.get_carry_in(0), byte_cd_adv));
        tmp15 = simd_and(byte_cd_adv, cc_range_378_37f_2);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp15);
        tmp16 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp17 = simd_and(tmp4, tmp16);
        byte_ce = simd_and(tmp3, tmp17);
        tmp18 = simd_andc(tmp7, tmp2);
        tmp19 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp20 = simd_and(tmp10, tmp12);
        tmp21 = simd_andc(tmp19, tmp20);
        tmp22 = simd_andc(tmp21, tmp6);
        tmp23 = simd_andc(tmp18, tmp22);
        tmp24 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp25 = simd_and(tmp7, tmp24);
        tmp26 = simd_andc(tmp16, tmp19);
        tmp27 = simd_and(tmp25, tmp26);
        cc_range_380_3a2_2 = simd_or(tmp23, tmp27);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(byte_ce, carryQ.get_carry_in(1), byte_ce_adv));
        tmp28 = simd_and(byte_ce_adv, cc_range_380_3a2_2);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp28);
        tmp29 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp30 = simd_and(tmp1, tmp29);
        tmp31 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp32 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp33 = simd_andc(tmp31, tmp32);
        byte_d4 = simd_and(tmp30, tmp33);
        tmp34 = simd_and(tmp7, basis_bits.bit_2);
        tmp35 = simd_or(tmp19, tmp32);
        tmp36 = simd_not(tmp35);
        tmp37 = simd_or(simd_and(basis_bits.bit_3, tmp36), simd_andc(basis_bits.bit_4, basis_bits.bit_3));
        byte_range_a8_b0 = simd_and(tmp34, tmp37);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(byte_d4, carryQ.get_carry_in(2), byte_d4_adv));
        tmp38 = simd_and(byte_d4_adv, byte_range_a8_b0);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp38);
        tmp39 = simd_and(tmp31, tmp5);
        byte_d5 = simd_and(tmp30, tmp39);
        tmp40 = simd_and(tmp7, tmp29);
        tmp41 = simd_or(basis_bits.bit_5, tmp32);
        tmp42 = simd_not(tmp41);
        tmp43 = simd_and(basis_bits.bit_5, tmp12);
        tmp44 = simd_or(simd_and(basis_bits.bit_4, tmp42), simd_andc(tmp43, basis_bits.bit_4));
        tmp45 = simd_and(tmp40, tmp44);
        tmp46 = simd_andc(tmp25, tmp35);
        cc_range_557_560_2 = simd_or(tmp45, tmp46);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(byte_d5, carryQ.get_carry_in(3), byte_d5_adv));
        tmp47 = simd_and(byte_d5_adv, cc_range_557_560_2);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp47);
        tmp48 = simd_and(tmp31, tmp16);
        byte_d6 = simd_and(tmp30, tmp48);
        tmp49 = simd_andc(tmp10, tmp32);
        tmp50 = simd_and(tmp18, tmp49);
        tmp51 = simd_and(tmp18, basis_bits.bit_4);
        tmp52 = simd_not(tmp12);
        tmp53 = simd_or(simd_and(basis_bits.bit_5, tmp52), simd_andc(tmp12, basis_bits.bit_5));
        tmp54 = simd_and(tmp51, tmp53);
        tmp55 = simd_or(tmp50, tmp54);
        tmp56 = simd_andc(tmp40, tmp35);
        cc_range_588_590_2 = simd_or(tmp55, tmp56);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(byte_d6, carryQ.get_carry_in(4), byte_d6_adv));
        tmp57 = simd_and(byte_d6_adv, cc_range_588_590_2);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp57);
        tmp58 = simd_and(tmp31, tmp12);
        byte_d7 = simd_and(tmp30, tmp58);
        tmp59 = simd_and(tmp25, basis_bits.bit_4);
        tmp60 = simd_or(basis_bits.bit_5, tmp12);
        tmp61 = simd_and(tmp59, tmp60);
        tmp62 = simd_or(tmp51, tmp61);
        tmp63 = simd_and(basis_bits.bit_5, tmp32);
        tmp64 = simd_or(basis_bits.bit_4, tmp63);
        tmp65 = simd_and(tmp9, tmp64);
        cc_range_5c8_5f5_2 = simd_or(tmp62, tmp65);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(byte_d7, carryQ.get_carry_in(5), byte_d7_adv));
        tmp66 = simd_and(byte_d7_adv, cc_range_5c8_5f5_2);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp66);
        byte_d8 = simd_and(tmp30, tmp49);
        tmp67 = simd_and(tmp18, tmp39);
        tmp68 = simd_and(tmp40, tmp6);
        cc_range_605_61d_2 = simd_or(tmp67, tmp68);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(byte_d8, carryQ.get_carry_in(6), byte_d8_adv));
        tmp69 = simd_and(byte_d8_adv, cc_range_605_61d_2);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp69);
        tmp70 = simd_andc(tmp4, tmp32);
        byte_dc = simd_and(tmp30, tmp70);
        byte_8e = simd_and(tmp18, tmp17);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(byte_dc, carryQ.get_carry_in(7), byte_dc_adv));
        tmp71 = simd_and(byte_dc_adv, byte_8e);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp71);
        byte_dd = simd_and(tmp30, tmp6);
        tmp72 = simd_not(tmp32);
        tmp73 = simd_or(simd_and(basis_bits.bit_5, tmp72), simd_andc(tmp12, basis_bits.bit_5));
        byte_range_8b_8c = simd_and(tmp51, tmp73);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(byte_dd, carryQ.get_carry_in(8), byte_dd_adv));
        tmp74 = simd_and(byte_dd_adv, byte_range_8b_8c);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp74);
        byte_de = simd_and(tmp30, tmp17);
        tmp75 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
        tmp76 = simd_or(basis_bits.bit_4, tmp75);
        byte_range_b2_bf = simd_and(tmp9, tmp76);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(byte_de, carryQ.get_carry_in(9), byte_de_adv));
        tmp77 = simd_and(byte_de_adv, byte_range_b2_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp77);
        byte_df = simd_and(tmp30, tmp13);
        tmp78 = simd_and(tmp9, basis_bits.bit_4);
        byte_range_bb_bf = simd_and(tmp78, tmp60);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(byte_df, carryQ.get_carry_in(10), byte_df_adv));
        tmp79 = simd_and(byte_df_adv, byte_range_bb_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp79);
        tmp80 = simd_and(tmp1, tmp24);
        byte_e0 = simd_andc(tmp80, tmp35);
        byte_a0 = simd_andc(tmp25, tmp35);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(byte_e0, carryQ.get_carry_in(11), tmp81));
        sequence_e0_a0 = simd_and(tmp81, byte_a0);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(byte_e0, carryQ.get_carry_in(12), byte_e0_adv));
        tmp82 = simd_and(tmp4, basis_bits.bit_6);
        tmp83 = simd_and(tmp25, tmp82);
        tmp84 = simd_and(tmp9, tmp13);
        cc_range_82e_83f_3 = simd_or(tmp83, tmp84);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(sequence_e0_a0, carryQ.get_carry_in(13), sequence_e0_a0_adv));
        tmp85 = simd_and(sequence_e0_a0_adv, cc_range_82e_83f_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp85);
        tmp86 = simd_andc(tmp5, tmp19);
        byte_a1 = simd_and(tmp25, tmp86);
        sequence_e0_a1 = simd_and(byte_e0_adv, byte_a1);
        tmp87 = simd_andc(tmp4, basis_bits.bit_6);
        tmp88 = simd_and(tmp40, tmp87);
        tmp89 = simd_and(basis_bits.bit_3, tmp13);
        tmp90 = simd_or(basis_bits.bit_2, tmp89);
        tmp91 = simd_and(tmp7, tmp90);
        cc_range_85c_85f_3 = simd_or(tmp88, tmp91);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(sequence_e0_a1, carryQ.get_carry_in(14), sequence_e0_a1_adv));
        tmp92 = simd_and(sequence_e0_a1_adv, cc_range_85c_85f_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp92);
        byte_a2 = simd_and(tmp25, tmp26);
        sequence_e0_a2 = simd_and(byte_e0_adv, byte_a2);
        tmp93 = simd_andc(tmp7, basis_bits.bit_2);
        tmp94 = simd_or(tmp93, byte_a1);
        tmp95 = simd_and(tmp4, tmp32);
        tmp96 = simd_or(basis_bits.bit_3, tmp95);
        tmp97 = simd_and(tmp34, tmp96);
        cc_range_880_8ad_3 = simd_or(tmp94, tmp97);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(sequence_e0_a2, carryQ.get_carry_in(15), sequence_e0_a2_adv));
        tmp98 = simd_and(sequence_e0_a2_adv, cc_range_880_8ad_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp98);
        tmp99 = simd_andc(tmp12, tmp19);
        byte_a3 = simd_and(tmp25, tmp99);
        sequence_e0_a3 = simd_and(byte_e0_adv, byte_a3);
        tmp100 = simd_or(basis_bits.bit_3, tmp19);
        tmp101 = simd_and(basis_bits.bit_2, tmp100);
        tmp102 = simd_andc(tmp7, tmp101);
        cc_range_8c0_8ff_3 = simd_or(tmp102, tmp84);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(sequence_e0_a3, carryQ.get_carry_in(16), sequence_e0_a3_adv));
        tmp103 = simd_and(sequence_e0_a3_adv, cc_range_8c0_8ff_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp103);
        byte_a5 = simd_and(tmp25, tmp39);
        sequence_e0_a5 = simd_and(byte_e0_adv, byte_a5);
        byte_b8 = simd_and(tmp9, tmp49);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(sequence_e0_a5, carryQ.get_carry_in(17), sequence_e0_a5_adv));
        tmp104 = simd_and(sequence_e0_a5_adv, byte_b8);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp104);
        byte_a6 = simd_and(tmp25, tmp48);
        sequence_e0_a6 = simd_and(byte_e0_adv, byte_a6);
        tmp105 = simd_andc(tmp35, tmp33);
        tmp106 = simd_andc(tmp18, tmp105);
        tmp107 = simd_and(tmp18, tmp4);
        tmp108 = simd_not(basis_bits.bit_7);
        tmp109 = simd_or(simd_and(basis_bits.bit_6, tmp108), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
        tmp110 = simd_and(tmp107, tmp109);
        tmp111 = simd_or(tmp106, tmp110);
        tmp112 = simd_andc(tmp40, tmp19);
        tmp113 = simd_and(tmp112, tmp109);
        tmp114 = simd_or(tmp111, tmp113);
        tmp115 = simd_and(tmp10, tmp5);
        tmp116 = simd_and(tmp25, tmp115);
        tmp117 = simd_or(tmp114, tmp116);
        tmp118 = simd_and(tmp9, tmp86);
        tmp119 = simd_or(tmp117, tmp118);
        tmp120 = simd_andc(tmp9, basis_bits.bit_4);
        tmp121 = simd_not(basis_bits.bit_6);
        tmp122 = simd_or(simd_and(basis_bits.bit_5, tmp121), simd_andc(tmp12, basis_bits.bit_5));
        tmp123 = simd_and(tmp120, tmp122);
        tmp124 = simd_or(tmp119, tmp123);
        tmp125 = simd_and(tmp10, basis_bits.bit_6);
        tmp126 = simd_and(tmp9, tmp125);
        cc_range_980_9ba_3 = simd_or(tmp124, tmp126);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(sequence_e0_a6, carryQ.get_carry_in(18), sequence_e0_a6_adv));
        tmp127 = simd_and(sequence_e0_a6_adv, cc_range_980_9ba_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp127);
        byte_a7 = simd_and(tmp25, tmp58);
        sequence_e0_a7 = simd_and(byte_e0_adv, byte_a7);
        tmp128 = simd_or(tmp31, tmp10);
        tmp129 = simd_and(tmp18, tmp128);
        tmp130 = simd_and(tmp109, tmp129);
        tmp131 = simd_or(basis_bits.bit_4, tmp43);
        tmp132 = simd_not(tmp131);
        tmp133 = simd_or(simd_and(basis_bits.bit_3, tmp132), simd_andc(tmp13, basis_bits.bit_3));
        tmp134 = simd_and(tmp93, tmp133);
        tmp135 = simd_or(tmp130, tmp134);
        tmp136 = simd_and(tmp40, tmp10);
        tmp137 = simd_or(tmp135, tmp136);
        tmp138 = simd_and(tmp40, tmp17);
        tmp139 = simd_or(tmp137, tmp138);
        tmp140 = simd_andc(tmp31, basis_bits.bit_6);
        tmp141 = simd_and(tmp25, tmp140);
        tmp142 = simd_or(tmp139, tmp141);
        tmp143 = simd_and(tmp9, tmp4);
        cc_range_9c5_9fc_3 = simd_or(tmp142, tmp143);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(sequence_e0_a7, carryQ.get_carry_in(19), sequence_e0_a7_adv));
        tmp144 = simd_and(sequence_e0_a7_adv, cc_range_9c5_9fc_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp144);
        byte_a8 = simd_and(tmp25, tmp49);
        sequence_e0_a8 = simd_and(byte_e0_adv, byte_a8);
        tmp145 = simd_or(tmp106, tmp54);
        tmp146 = simd_or(tmp145, tmp113);
        tmp147 = simd_or(tmp146, tmp116);
        tmp148 = simd_or(tmp147, tmp118);
        tmp149 = simd_and(tmp9, tmp33);
        tmp150 = simd_or(tmp148, tmp149);
        tmp151 = simd_and(tmp9, tmp58);
        tmp152 = simd_or(tmp150, tmp151);
        tmp153 = simd_or(tmp152, tmp126);
        tmp154 = simd_and(tmp9, tmp6);
        cc_range_a00_a3d_3 = simd_or(tmp153, tmp154);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(sequence_e0_a8, carryQ.get_carry_in(20), sequence_e0_a8_adv));
        tmp155 = simd_and(sequence_e0_a8_adv, cc_range_a00_a3d_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp155);
        byte_a9 = simd_and(tmp25, tmp115);
        sequence_e0_a9 = simd_and(byte_e0_adv, byte_a9);
        tmp156 = simd_andc(tmp18, basis_bits.bit_4);
        tmp157 = simd_and(tmp156, tmp53);
        tmp158 = simd_and(tmp18, tmp10);
        tmp159 = simd_and(tmp158, tmp109);
        tmp160 = simd_or(tmp157, tmp159);
        tmp161 = simd_or(simd_and(basis_bits.bit_3, tmp36), simd_andc(tmp82, basis_bits.bit_3));
        tmp162 = simd_and(tmp93, tmp161);
        tmp163 = simd_or(tmp160, tmp162);
        tmp164 = simd_or(simd_and(basis_bits.bit_4, tmp42), simd_andc(tmp75, basis_bits.bit_4));
        tmp165 = simd_and(tmp40, tmp164);
        tmp166 = simd_or(tmp163, tmp165);
        tmp167 = simd_or(tmp166, tmp68);
        tmp168 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp169 = simd_or(basis_bits.bit_4, tmp168);
        tmp170 = simd_or(basis_bits.bit_3, tmp169);
        tmp171 = simd_not(tmp170);
        tmp172 = simd_or(simd_and(basis_bits.bit_2, tmp171), simd_andc(tmp89, basis_bits.bit_2));
        tmp173 = simd_and(tmp7, tmp172);
        tmp174 = simd_or(tmp167, tmp173);
        tmp175 = simd_and(tmp9, tmp169);
        cc_range_a43_a76_3 = simd_or(tmp174, tmp175);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(sequence_e0_a9, carryQ.get_carry_in(21), sequence_e0_a9_adv));
        tmp176 = simd_and(sequence_e0_a9_adv, cc_range_a43_a76_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp176);
        tmp177 = simd_and(tmp10, tmp16);
        byte_aa = simd_and(tmp25, tmp177);
        sequence_e0_aa = simd_and(byte_e0_adv, byte_aa);
        tmp178 = simd_andc(tmp105, tmp17);
        tmp179 = simd_andc(tmp18, tmp178);
        tmp180 = simd_and(tmp40, tmp26);
        tmp181 = simd_or(tmp179, tmp180);
        tmp182 = simd_or(tmp181, byte_a9);
        tmp183 = simd_or(tmp182, tmp118);
        tmp184 = simd_or(tmp183, tmp149);
        cc_range_a80_aba_3 = simd_or(tmp184, tmp126);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(sequence_e0_aa, carryQ.get_carry_in(22), sequence_e0_aa_adv));
        tmp185 = simd_and(sequence_e0_aa_adv, cc_range_a80_aba_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp185);
        byte_ab = simd_and(tmp25, tmp20);
        sequence_e0_ab = simd_and(byte_e0_adv, byte_ab);
        tmp186 = simd_and(tmp16, tmp128);
        tmp187 = simd_or(tmp186, tmp82);
        tmp188 = simd_and(tmp18, tmp187);
        tmp189 = simd_or(basis_bits.bit_4, tmp41);
        tmp190 = simd_and(tmp40, tmp189);
        tmp191 = simd_or(tmp188, tmp190);
        tmp192 = simd_or(tmp191, tmp141);
        cc_range_ac6_af2_3 = simd_or(tmp192, byte_range_b2_bf);
        carryQ.cq[23] = carryout2carry(pablo_blk_Advance(sequence_e0_ab, carryQ.get_carry_in(23), sequence_e0_ab_adv));
        tmp193 = simd_and(sequence_e0_ab_adv, cc_range_ac6_af2_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp193);
        byte_ac = simd_and(tmp25, tmp70);
        sequence_e0_ac = simd_and(byte_e0_adv, byte_ac);
        tmp194 = simd_or(tmp114, byte_a9);
        tmp195 = simd_or(tmp194, tmp118);
        tmp196 = simd_or(tmp195, tmp149);
        cc_range_b00_b3a_3 = simd_or(tmp196, tmp126);
        carryQ.cq[24] = carryout2carry(pablo_blk_Advance(sequence_e0_ac, carryQ.get_carry_in(24), sequence_e0_ac_adv));
        tmp197 = simd_and(sequence_e0_ac_adv, cc_range_b00_b3a_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp197);
        byte_ad = simd_and(tmp25, tmp6);
        sequence_e0_ad = simd_and(byte_e0_adv, byte_ad);
        tmp198 = simd_not(tmp169);
        tmp199 = simd_or(simd_and(basis_bits.bit_3, tmp198), simd_andc(tmp82, basis_bits.bit_3));
        tmp200 = simd_and(tmp93, tmp199);
        tmp201 = simd_or(tmp130, tmp200);
        tmp202 = simd_or(tmp201, tmp136);
        tmp203 = simd_or(tmp202, tmp138);
        tmp204 = simd_or(tmp203, tmp141);
        cc_range_b45_b78_3 = simd_or(tmp204, tmp78);
        carryQ.cq[25] = carryout2carry(pablo_blk_Advance(sequence_e0_ad, carryQ.get_carry_in(25), sequence_e0_ad_adv));
        tmp205 = simd_and(sequence_e0_ad_adv, cc_range_b45_b78_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp205);
        byte_ae = simd_and(tmp25, tmp17);
        sequence_e0_ae = simd_and(byte_e0_adv, byte_ae);
        tmp206 = simd_or(tmp19, basis_bits.bit_6);
        tmp207 = simd_andc(tmp206, tmp33);
        tmp208 = simd_andc(tmp18, tmp207);
        tmp209 = simd_and(tmp51, tmp122);
        tmp210 = simd_or(tmp208, tmp209);
        tmp211 = simd_and(tmp40, tmp86);
        tmp212 = simd_or(tmp210, tmp211);
        tmp213 = simd_or(simd_and(basis_bits.bit_4, tmp42), simd_andc(tmp168, basis_bits.bit_4));
        tmp214 = simd_and(tmp40, tmp213);
        tmp215 = simd_or(tmp212, tmp214);
        tmp216 = simd_and(tmp40, tmp20);
        tmp217 = simd_or(tmp215, tmp216);
        tmp218 = simd_or(tmp217, tmp68);
        tmp219 = simd_andc(tmp25, tmp19);
        tmp220 = simd_andc(tmp219, tmp12);
        tmp221 = simd_or(tmp218, tmp220);
        tmp222 = simd_and(tmp25, tmp31);
        tmp223 = simd_and(tmp222, tmp32);
        tmp224 = simd_or(tmp221, tmp223);
        tmp225 = simd_and(tmp59, tmp122);
        tmp226 = simd_or(tmp224, tmp225);
        tmp227 = simd_or(simd_and(basis_bits.bit_5, tmp121), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        tmp228 = simd_and(tmp78, tmp227);
        cc_range_b80_bba_3 = simd_or(tmp226, tmp228);
        carryQ.cq[26] = carryout2carry(pablo_blk_Advance(sequence_e0_ae, carryQ.get_carry_in(26), sequence_e0_ae_adv));
        tmp229 = simd_and(sequence_e0_ae_adv, cc_range_b80_bba_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp229);
        byte_af = simd_and(tmp25, tmp13);
        sequence_e0_af = simd_and(byte_e0_adv, byte_af);
        tmp230 = simd_and(tmp156, tmp122);
        tmp231 = simd_and(tmp18, tmp115);
        tmp232 = simd_or(tmp230, tmp231);
        tmp233 = simd_and(tmp18, tmp82);
        tmp234 = simd_or(tmp232, tmp233);
        tmp235 = simd_andc(tmp40, basis_bits.bit_4);
        tmp236 = simd_or(simd_and(basis_bits.bit_5, tmp52), simd_andc(tmp32, basis_bits.bit_5));
        tmp237 = simd_and(tmp235, tmp236);
        tmp238 = simd_or(tmp234, tmp237);
        tmp239 = simd_and(basis_bits.bit_3, basis_bits.bit_4);
        tmp240 = simd_or(simd_and(basis_bits.bit_2, tmp171), simd_andc(tmp239, basis_bits.bit_2));
        tmp241 = simd_and(tmp7, tmp240);
        tmp242 = simd_or(tmp238, tmp241);
        cc_range_bc3_bfb_3 = simd_or(tmp242, byte_range_bb_bf);
        carryQ.cq[27] = carryout2carry(pablo_blk_Advance(sequence_e0_af, carryQ.get_carry_in(27), sequence_e0_af_adv));
        tmp243 = simd_and(sequence_e0_af_adv, cc_range_bc3_bfb_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp243);
        byte_b0 = simd_andc(tmp9, tmp35);
        sequence_e0_b0 = simd_and(byte_e0_adv, byte_b0);
        tmp244 = simd_andc(tmp105, tmp6);
        tmp245 = simd_andc(tmp18, tmp244);
        tmp246 = simd_or(tmp245, tmp211);
        tmp247 = simd_or(tmp246, byte_a9);
        tmp248 = simd_or(tmp247, tmp149);
        tmp249 = simd_or(simd_and(basis_bits.bit_5, tmp72), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        tmp250 = simd_and(tmp78, tmp249);
        cc_range_c00_c3a_3 = simd_or(tmp248, tmp250);
        carryQ.cq[28] = carryout2carry(pablo_blk_Advance(sequence_e0_b0, carryQ.get_carry_in(28), sequence_e0_b0_adv));
        tmp251 = simd_and(sequence_e0_b0_adv, cc_range_c00_c3a_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp251);
        byte_b1 = simd_and(tmp9, tmp86);
        sequence_e0_b1 = simd_and(byte_e0_adv, byte_b1);
        tmp252 = simd_and(tmp5, tmp128);
        tmp253 = simd_and(tmp18, tmp252);
        tmp254 = simd_not(tmp64);
        tmp255 = simd_or(simd_and(basis_bits.bit_3, tmp254), simd_andc(tmp82, basis_bits.bit_3));
        tmp256 = simd_and(tmp93, tmp255);
        tmp257 = simd_or(tmp253, tmp256);
        tmp258 = simd_and(tmp40, tmp58);
        tmp259 = simd_or(tmp257, tmp258);
        tmp260 = simd_and(tmp40, basis_bits.bit_4);
        tmp261 = simd_and(tmp260, tmp75);
        tmp262 = simd_or(tmp259, tmp261);
        tmp263 = simd_or(tmp262, tmp141);
        cc_range_c45_c70_3 = simd_or(tmp263, tmp120);
        carryQ.cq[29] = carryout2carry(pablo_blk_Advance(sequence_e0_b1, carryQ.get_carry_in(29), sequence_e0_b1_adv));
        tmp264 = simd_and(sequence_e0_b1_adv, cc_range_c45_c70_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp264);
        byte_b2 = simd_and(tmp9, tmp26);
        sequence_e0_b2 = simd_and(byte_e0_adv, byte_b2);
        tmp265 = simd_andc(tmp207, tmp6);
        tmp266 = simd_andc(tmp18, tmp265);
        tmp267 = simd_or(tmp266, tmp211);
        tmp268 = simd_or(tmp267, byte_a9);
        tmp269 = simd_or(tmp268, tmp149);
        cc_range_c80_cba_3 = simd_or(tmp269, tmp126);
        carryQ.cq[30] = carryout2carry(pablo_blk_Advance(sequence_e0_b2, carryQ.get_carry_in(30), sequence_e0_b2_adv));
        tmp270 = simd_and(sequence_e0_b2_adv, cc_range_c80_cba_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp270);
        byte_b3 = simd_and(tmp9, tmp99);
        sequence_e0_b3 = simd_and(byte_e0_adv, byte_b3);
        tmp271 = simd_not(tmp168);
        tmp272 = simd_or(simd_and(basis_bits.bit_4, tmp271), simd_andc(tmp43, basis_bits.bit_4));
        tmp273 = simd_and(tmp40, tmp272);
        tmp274 = simd_or(tmp257, tmp273);
        tmp275 = simd_and(tmp40, tmp13);
        tmp276 = simd_or(tmp274, tmp275);
        tmp277 = simd_or(tmp276, tmp141);
        tmp278 = simd_or(tmp277, byte_b0);
        tmp279 = simd_or(basis_bits.bit_4, tmp60);
        tmp280 = simd_and(tmp9, tmp279);
        cc_range_cc5_cf3_3 = simd_or(tmp278, tmp280);
        carryQ.cq[31] = carryout2carry(pablo_blk_Advance(sequence_e0_b3, carryQ.get_carry_in(31), sequence_e0_b3_adv));
        tmp281 = simd_and(sequence_e0_b3_adv, cc_range_cc5_cf3_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp281);
        byte_b4 = simd_and(tmp9, tmp33);
        sequence_e0_b4 = simd_and(byte_e0_adv, byte_b4);
        tmp282 = simd_and(tmp78, tmp73);
        cc_range_d00_d3b_3 = simd_or(tmp267, tmp282);
        carryQ.cq[32] = carryout2carry(pablo_blk_Advance(sequence_e0_b4, carryQ.get_carry_in(32), sequence_e0_b4_adv));
        tmp283 = simd_and(sequence_e0_b4_adv, cc_range_d00_d3b_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp283);
        byte_b5 = simd_and(tmp9, tmp39);
        sequence_e0_b5 = simd_and(byte_e0_adv, byte_b5);
        tmp284 = simd_or(tmp253, tmp134);
        tmp285 = simd_or(tmp284, tmp260);
        tmp286 = simd_or(tmp285, tmp141);
        tmp287 = simd_and(tmp9, tmp213);
        cc_range_d45_d76_3 = simd_or(tmp286, tmp287);
        carryQ.cq[33] = carryout2carry(pablo_blk_Advance(sequence_e0_b5, carryQ.get_carry_in(33), sequence_e0_b5_adv));
        tmp288 = simd_and(sequence_e0_b5_adv, cc_range_d45_d76_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp288);
        byte_b6 = simd_and(tmp9, tmp48);
        sequence_e0_b6 = simd_and(byte_e0_adv, byte_b6);
        tmp289 = simd_not(tmp75);
        tmp290 = simd_or(simd_and(basis_bits.bit_4, tmp289), simd_andc(tmp43, basis_bits.bit_4));
        tmp291 = simd_and(tmp40, tmp290);
        tmp292 = simd_or(tmp208, tmp291);
        tmp293 = simd_or(tmp292, byte_b2);
        tmp294 = simd_and(tmp9, tmp70);
        tmp295 = simd_or(tmp293, tmp294);
        tmp296 = simd_and(tmp9, tmp82);
        cc_range_d80_dbe_3 = simd_or(tmp295, tmp296);
        carryQ.cq[34] = carryout2carry(pablo_blk_Advance(sequence_e0_b6, carryQ.get_carry_in(34), sequence_e0_b6_adv));
        tmp297 = simd_and(sequence_e0_b6_adv, cc_range_d80_dbe_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp297);
        byte_b7 = simd_and(tmp9, tmp58);
        sequence_e0_b7 = simd_and(byte_e0_adv, byte_b7);
        tmp298 = simd_and(tmp18, tmp290);
        tmp299 = simd_or(tmp298, tmp54);
        tmp300 = simd_and(tmp40, tmp39);
        tmp301 = simd_or(tmp299, tmp300);
        tmp302 = simd_or(tmp301, tmp258);
        tmp303 = simd_and(basis_bits.bit_3, tmp206);
        tmp304 = simd_andc(tmp34, tmp303);
        tmp305 = simd_or(tmp302, tmp304);
        cc_range_dc7_df5_3 = simd_or(tmp305, tmp65);
        carryQ.cq[35] = carryout2carry(pablo_blk_Advance(sequence_e0_b7, carryQ.get_carry_in(35), sequence_e0_b7_adv));
        tmp306 = simd_and(sequence_e0_b7_adv, cc_range_dc7_df5_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp306);
        sequence_e0_b8 = simd_and(byte_e0_adv, byte_b8);
        tmp307 = simd_andc(tmp18, tmp35);
        tmp308 = simd_and(tmp78, tmp53);
        cc_range_e00_e3b_3 = simd_or(tmp307, tmp308);
        carryQ.cq[36] = carryout2carry(pablo_blk_Advance(sequence_e0_b8, carryQ.get_carry_in(36), sequence_e0_b8_adv));
        tmp309 = simd_and(sequence_e0_b8_adv, cc_range_e00_e3b_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp309);
        byte_b9 = simd_and(tmp9, tmp115);
        sequence_e0_b9 = simd_and(byte_e0_adv, byte_b9);
        tmp310 = simd_and(basis_bits.bit_3, tmp4);
        tmp311 = simd_or(basis_bits.bit_2, tmp310);
        byte_range_9c_bf = simd_and(tmp7, tmp311);
        carryQ.cq[37] = carryout2carry(pablo_blk_Advance(sequence_e0_b9, carryQ.get_carry_in(37), sequence_e0_b9_adv));
        tmp312 = simd_and(sequence_e0_b9_adv, byte_range_9c_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp312);
        byte_ba = simd_and(tmp9, tmp177);
        sequence_e0_ba = simd_and(byte_e0_adv, byte_ba);
        tmp313 = simd_andc(tmp35, tmp99);
        tmp314 = simd_andc(tmp18, tmp313);
        tmp315 = simd_and(tmp18, tmp31);
        tmp316 = simd_and(tmp315, tmp109);
        tmp317 = simd_or(tmp314, tmp316);
        tmp318 = simd_or(tmp317, tmp231);
        tmp319 = simd_or(tmp318, byte_range_8b_8c);
        tmp320 = simd_not(tmp19);
        tmp321 = simd_or(simd_and(basis_bits.bit_3, tmp320), simd_andc(tmp82, basis_bits.bit_3));
        tmp322 = simd_and(tmp93, tmp321);
        tmp323 = simd_or(tmp319, tmp322);
        tmp324 = simd_and(tmp40, tmp49);
        tmp325 = simd_or(tmp323, tmp324);
        tmp326 = simd_or(tmp325, byte_a0);
        tmp327 = simd_and(tmp25, tmp33);
        tmp328 = simd_or(tmp326, tmp327);
        tmp329 = simd_or(tmp328, byte_a6);
        tmp330 = simd_and(tmp25, tmp11);
        tmp331 = simd_or(tmp329, tmp330);
        tmp332 = simd_or(tmp331, byte_ac);
        tmp333 = simd_or(tmp332, byte_ba);
        cc_range_e80_ebe_3 = simd_or(tmp333, tmp296);
        carryQ.cq[38] = carryout2carry(pablo_blk_Advance(sequence_e0_ba, carryQ.get_carry_in(38), sequence_e0_ba_adv));
        tmp334 = simd_and(sequence_e0_ba_adv, cc_range_e80_ebe_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp334);
        byte_bb = simd_and(tmp9, tmp20);
        sequence_e0_bb = simd_and(byte_e0_adv, byte_bb);
        tmp335 = simd_and(tmp31, basis_bits.bit_7);
        tmp336 = simd_or(tmp335, tmp82);
        tmp337 = simd_and(tmp18, tmp336);
        tmp338 = simd_and(tmp40, tmp125);
        tmp339 = simd_or(tmp337, tmp338);
        cc_range_ec5_ee0_3 = simd_or(tmp339, tmp34);
        carryQ.cq[39] = carryout2carry(pablo_blk_Advance(sequence_e0_bb, carryQ.get_carry_in(39), sequence_e0_bb_adv));
        tmp340 = simd_and(sequence_e0_bb_adv, cc_range_ec5_ee0_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp340);
        byte_bd = simd_and(tmp9, tmp6);
        sequence_e0_bd = simd_and(byte_e0_adv, byte_bd);
        tmp341 = simd_or(simd_and(basis_bits.bit_3, tmp36), simd_andc(tmp95, basis_bits.bit_3));
        tmp342 = simd_and(tmp34, tmp341);
        cc_range_f48_f6d_3 = simd_or(tmp50, tmp342);
        carryQ.cq[40] = carryout2carry(pablo_blk_Advance(sequence_e0_bd, carryQ.get_carry_in(40), sequence_e0_bd_adv));
        tmp343 = simd_and(sequence_e0_bd_adv, cc_range_f48_f6d_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp343);
        byte_be = simd_and(tmp9, tmp17);
        sequence_e0_be = simd_and(byte_e0_adv, byte_be);
        cc_range_f98_fbd_3 = simd_or(tmp324, byte_bd);
        carryQ.cq[41] = carryout2carry(pablo_blk_Advance(sequence_e0_be, carryQ.get_carry_in(41), sequence_e0_be_adv));
        tmp344 = simd_and(sequence_e0_be_adv, cc_range_f98_fbd_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp344);
        byte_bf = simd_and(tmp9, tmp13);
        sequence_e0_bf = simd_and(byte_e0_adv, byte_bf);
        tmp345 = simd_and(tmp18, tmp6);
        tmp346 = simd_and(basis_bits.bit_4, tmp60);
        tmp347 = simd_and(basis_bits.bit_3, tmp346);
        tmp348 = simd_or(basis_bits.bit_2, tmp347);
        tmp349 = simd_and(tmp7, tmp348);
        cc_range_fcd_fdb_3 = simd_or(tmp345, tmp349);
        carryQ.cq[42] = carryout2carry(pablo_blk_Advance(sequence_e0_bf, carryQ.get_carry_in(42), sequence_e0_bf_adv));
        tmp350 = simd_and(sequence_e0_bf_adv, cc_range_fcd_fdb_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp350);
        byte_e1 = simd_and(tmp80, tmp86);
        byte_83 = simd_and(tmp18, tmp99);
        carryQ.cq[43] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(43), tmp351));
        sequence_e1_83 = simd_and(tmp351, byte_83);
        carryQ.cq[44] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(44), byte_e1_adv));
        tmp352 = simd_and(tmp18, tmp48);
        tmp353 = simd_andc(tmp51, tmp63);
        tmp354 = simd_or(tmp352, tmp353);
        cc_range_10c6_10ce_3 = simd_or(tmp354, tmp233);
        carryQ.cq[45] = carryout2carry(pablo_blk_Advance(sequence_e1_83, carryQ.get_carry_in(45), sequence_e1_83_adv));
        tmp355 = simd_and(sequence_e1_83_adv, cc_range_10c6_10ce_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp355);
        byte_89 = simd_and(tmp18, tmp115);
        sequence_e1_89 = simd_and(byte_e1_adv, byte_89);
        tmp356 = simd_or(tmp115, tmp82);
        tmp357 = simd_and(tmp18, tmp356);
        tmp358 = simd_or(tmp357, tmp258);
        tmp359 = simd_and(tmp40, tmp115);
        tmp360 = simd_or(tmp358, tmp359);
        tmp361 = simd_and(tmp40, tmp82);
        cc_range_1249_125e_3 = simd_or(tmp360, tmp361);
        carryQ.cq[46] = carryout2carry(pablo_blk_Advance(sequence_e1_89, carryQ.get_carry_in(46), sequence_e1_89_adv));
        tmp362 = simd_and(sequence_e1_89_adv, cc_range_1249_125e_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp362);
        byte_8a = simd_and(tmp18, tmp177);
        sequence_e1_8a = simd_and(byte_e1_adv, byte_8a);
        tmp363 = simd_or(tmp357, byte_b1);
        tmp364 = simd_and(tmp31, basis_bits.bit_6);
        tmp365 = simd_and(tmp9, tmp364);
        tmp366 = simd_or(tmp363, tmp365);
        cc_range_1289_12bf_3 = simd_or(tmp366, byte_bf);
        carryQ.cq[47] = carryout2carry(pablo_blk_Advance(sequence_e1_8a, carryQ.get_carry_in(47), sequence_e1_8a_adv));
        tmp367 = simd_and(sequence_e1_8a_adv, cc_range_1289_12bf_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp367);
        byte_8b = simd_and(tmp18, tmp20);
        sequence_e1_8b = simd_and(byte_e1_adv, byte_8b);
        tmp368 = simd_or(tmp86, tmp364);
        tmp369 = simd_and(tmp18, tmp368);
        cc_range_12c1_12d7_3 = simd_or(tmp369, tmp258);
        carryQ.cq[48] = carryout2carry(pablo_blk_Advance(sequence_e1_8b, carryQ.get_carry_in(48), sequence_e1_8b_adv));
        tmp370 = simd_and(sequence_e1_8b_adv, cc_range_12c1_12d7_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp370);
        byte_8c = simd_and(tmp18, tmp70);
        sequence_e1_8c = simd_and(byte_e1_adv, byte_8c);
        cc_range_1311_1316_3 = simd_and(tmp40, tmp368);
        carryQ.cq[49] = carryout2carry(pablo_blk_Advance(sequence_e1_8c, carryQ.get_carry_in(49), sequence_e1_8c_adv));
        tmp371 = simd_and(sequence_e1_8c_adv, cc_range_1311_1316_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp371);
        byte_8d = simd_and(tmp18, tmp6);
        sequence_e1_8d = simd_and(byte_e1_adv, byte_8d);
        tmp372 = simd_and(tmp260, tmp73);
        tmp373 = simd_and(tmp143, tmp32);
        cc_range_135b_137d_3 = simd_or(tmp372, tmp373);
        carryQ.cq[50] = carryout2carry(pablo_blk_Advance(sequence_e1_8d, carryQ.get_carry_in(50), sequence_e1_8d_adv));
        tmp374 = simd_and(sequence_e1_8d_adv, cc_range_135b_137d_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp374);
        sequence_e1_8e = simd_and(byte_e1_adv, byte_8e);
        byte_range_9a_9f = simd_and(tmp260, tmp75);
        carryQ.cq[51] = carryout2carry(pablo_blk_Advance(sequence_e1_8e, carryQ.get_carry_in(51), sequence_e1_8e_adv));
        tmp375 = simd_and(sequence_e1_8e_adv, byte_range_9a_9f);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp375);
        byte_8f = simd_and(tmp18, tmp13);
        sequence_e1_8f = simd_and(byte_e1_adv, byte_8f);
        byte_range_b5_bf = simd_and(tmp9, tmp64);
        carryQ.cq[52] = carryout2carry(pablo_blk_Advance(sequence_e1_8f, carryQ.get_carry_in(52), sequence_e1_8f_adv));
        tmp376 = simd_and(sequence_e1_8f_adv, byte_range_b5_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp376);
        byte_9a = simd_and(tmp40, tmp177);
        sequence_e1_9a = simd_and(byte_e1_adv, byte_9a);
        tmp377 = simd_and(tmp40, tmp4);
        byte_range_9d_9f = simd_and(tmp377, tmp32);
        carryQ.cq[53] = carryout2carry(pablo_blk_Advance(sequence_e1_9a, carryQ.get_carry_in(53), sequence_e1_9a_adv));
        tmp378 = simd_and(sequence_e1_9a_adv, byte_range_9d_9f);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp378);
        byte_9b = simd_and(tmp40, tmp20);
        sequence_e1_9b = simd_and(byte_e1_adv, byte_9b);
        byte_range_b1_bf = simd_and(tmp9, tmp189);
        carryQ.cq[54] = carryout2carry(pablo_blk_Advance(sequence_e1_9b, carryQ.get_carry_in(54), sequence_e1_9b_adv));
        tmp379 = simd_and(sequence_e1_9b_adv, byte_range_b1_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp379);
        byte_9c = simd_and(tmp40, tmp70);
        sequence_e1_9c = simd_and(byte_e1_adv, byte_9c);
        tmp380 = simd_and(tmp40, tmp64);
        tmp381 = simd_or(byte_8d, tmp380);
        tmp382 = simd_and(tmp9, tmp131);
        cc_range_170d_1737_3 = simd_or(tmp381, tmp382);
        carryQ.cq[55] = carryout2carry(pablo_blk_Advance(sequence_e1_9c, carryQ.get_carry_in(55), sequence_e1_9c_adv));
        tmp383 = simd_and(sequence_e1_9c_adv, cc_range_170d_1737_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp383);
        byte_9d = simd_and(tmp40, tmp6);
        sequence_e1_9d = simd_and(byte_e1_adv, byte_9d);
        tmp384 = simd_and(tmp40, tmp19);
        tmp385 = simd_or(tmp384, byte_ad);
        tmp386 = simd_or(tmp385, byte_b1);
        tmp387 = simd_and(tmp9, tmp19);
        cc_range_1754_1774_3 = simd_or(tmp386, tmp387);
        carryQ.cq[56] = carryout2carry(pablo_blk_Advance(sequence_e1_9d, carryQ.get_carry_in(56), sequence_e1_9d_adv));
        tmp388 = simd_and(sequence_e1_9d_adv, cc_range_1754_1774_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp388);
        byte_9f = simd_and(tmp40, tmp13);
        sequence_e1_9f = simd_and(byte_e1_adv, byte_9f);
        tmp389 = simd_and(tmp59, tmp75);
        tmp390 = simd_or(tmp361, tmp389);
        tmp391 = simd_and(tmp78, tmp75);
        cc_range_17de_17fa_3 = simd_or(tmp390, tmp391);
        carryQ.cq[57] = carryout2carry(pablo_blk_Advance(sequence_e1_9f, carryQ.get_carry_in(57), sequence_e1_9f_adv));
        tmp392 = simd_and(sequence_e1_9f_adv, cc_range_17de_17fa_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp392);
        sequence_e1_a0 = simd_and(byte_e1_adv, byte_a0);
        cc_range_180f_181a_3 = simd_or(byte_8f, byte_range_9a_9f);
        carryQ.cq[58] = carryout2carry(pablo_blk_Advance(sequence_e1_a0, carryQ.get_carry_in(58), sequence_e1_a0_adv));
        tmp393 = simd_and(sequence_e1_a0_adv, cc_range_180f_181a_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp393);
        sequence_e1_a1 = simd_and(byte_e1_adv, byte_a1);
        byte_range_b8_bf = simd_and(tmp9, basis_bits.bit_4);
        carryQ.cq[59] = carryout2carry(pablo_blk_Advance(sequence_e1_a1, carryQ.get_carry_in(59), sequence_e1_a1_adv));
        tmp394 = simd_and(sequence_e1_a1_adv, byte_range_b8_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp394);
        sequence_e1_a2 = simd_and(byte_e1_adv, byte_a2);
        byte_range_ab_af = simd_and(tmp59, tmp60);
        carryQ.cq[60] = carryout2carry(pablo_blk_Advance(sequence_e1_a2, carryQ.get_carry_in(60), sequence_e1_a2_adv));
        tmp395 = simd_and(sequence_e1_a2_adv, byte_range_ab_af);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp395);
        sequence_e1_a3 = simd_and(byte_e1_adv, byte_a3);
        byte_range_b6_bf = simd_and(tmp9, tmp169);
        carryQ.cq[61] = carryout2carry(pablo_blk_Advance(sequence_e1_a3, carryQ.get_carry_in(61), sequence_e1_a3_adv));
        tmp396 = simd_and(sequence_e1_a3_adv, byte_range_b6_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp396);
        byte_a4 = simd_and(tmp25, tmp33);
        sequence_e1_a4 = simd_and(byte_e1_adv, byte_a4);
        tmp397 = simd_and(tmp25, tmp4);
        tmp398 = simd_or(byte_range_9d_9f, tmp397);
        cc_range_191d_193c_3 = simd_or(tmp398, tmp143);
        carryQ.cq[62] = carryout2carry(pablo_blk_Advance(sequence_e1_a4, carryQ.get_carry_in(62), sequence_e1_a4_adv));
        tmp399 = simd_and(sequence_e1_a4_adv, cc_range_191d_193c_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp399);
        sequence_e1_a5 = simd_and(byte_e1_adv, byte_a5);
        tmp400 = simd_andc(tmp18, tmp19);
        tmp401 = simd_and(tmp400, tmp32);
        tmp402 = simd_or(tmp401, tmp83);
        cc_range_1941_1975_3 = simd_or(tmp402, byte_range_b5_bf);
        carryQ.cq[63] = carryout2carry(pablo_blk_Advance(sequence_e1_a5, carryQ.get_carry_in(63), sequence_e1_a5_adv));
        tmp403 = simd_and(sequence_e1_a5_adv, cc_range_1941_1975_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp403);
        sequence_e1_a6 = simd_and(byte_e1_adv, byte_a6);
        byte_range_ac_af = simd_and(tmp25, tmp4);
        carryQ.cq[64] = carryout2carry(pablo_blk_Advance(sequence_e1_a6, carryQ.get_carry_in(64), sequence_e1_a6_adv));
        tmp404 = simd_and(sequence_e1_a6_adv, byte_range_ac_af);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp404);
        sequence_e1_a7 = simd_and(byte_e1_adv, byte_a7);
        tmp405 = simd_and(tmp51, tmp75);
        tmp406 = simd_and(tmp260, tmp122);
        cc_range_19ca_19db_3 = simd_or(tmp405, tmp406);
        carryQ.cq[65] = carryout2carry(pablo_blk_Advance(sequence_e1_a7, carryQ.get_carry_in(65), sequence_e1_a7_adv));
        tmp407 = simd_and(sequence_e1_a7_adv, cc_range_19ca_19db_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp407);
        sequence_e1_a8 = simd_and(byte_e1_adv, byte_a8);
        byte_range_9c_9d = simd_and(tmp40, tmp87);
        carryQ.cq[66] = carryout2carry(pablo_blk_Advance(sequence_e1_a8, carryQ.get_carry_in(66), sequence_e1_a8_adv));
        tmp408 = simd_and(sequence_e1_a8_adv, byte_range_9c_9d);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp408);
        sequence_e1_a9 = simd_and(byte_e1_adv, byte_a9);
        tmp409 = simd_and(tmp143, tmp109);
        cc_range_1a5f_1a7d_3 = simd_or(byte_9f, tmp409);
        carryQ.cq[67] = carryout2carry(pablo_blk_Advance(sequence_e1_a9, carryQ.get_carry_in(67), sequence_e1_a9_adv));
        tmp410 = simd_and(sequence_e1_a9_adv, cc_range_1a5f_1a7d_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp410);
        sequence_e1_aa = simd_and(byte_e1_adv, byte_aa);
        tmp411 = simd_andc(tmp2, tmp29);
        tmp412 = simd_andc(tmp7, tmp411);
        tmp413 = simd_and(basis_bits.bit_4, tmp412);
        tmp414 = simd_and(tmp75, tmp413);
        tmp415 = simd_or(basis_bits.bit_3, tmp82);
        tmp416 = simd_and(tmp34, tmp415);
        cc_range_1a8a_1aae_3 = simd_or(tmp414, tmp416);
        carryQ.cq[68] = carryout2carry(pablo_blk_Advance(sequence_e1_aa, carryQ.get_carry_in(68), sequence_e1_aa_adv));
        tmp417 = simd_and(sequence_e1_aa_adv, cc_range_1a8a_1aae_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp417);
        sequence_e1_ab = simd_and(byte_e1_adv, byte_ab);
        byte_range_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        carryQ.cq[69] = carryout2carry(pablo_blk_Advance(sequence_e1_ab, carryQ.get_carry_in(69), sequence_e1_ab_adv));
        tmp418 = simd_and(sequence_e1_ab_adv, byte_range_80_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp418);
        tmp419 = simd_and(byte_range_80_bf, tmp24);
        sequence_e1_ad = simd_and(byte_e1_adv, byte_ad);
        tmp420 = simd_andc(byte_range_80_bf, tmp2);
        tmp421 = simd_and(tmp420, tmp4);
        tmp422 = simd_and(byte_range_80_bf, tmp8);
        tmp423 = simd_and(tmp422, tmp4);
        tmp424 = simd_and(tmp423, tmp32);
        cc_range_1b4c_1b7d_3 = simd_or(tmp421, tmp424);
        carryQ.cq[70] = carryout2carry(pablo_blk_Advance(sequence_e1_ad, carryQ.get_carry_in(70), sequence_e1_ad_adv));
        tmp425 = simd_and(sequence_e1_ad_adv, cc_range_1b4c_1b7d_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp425);
        sequence_e1_af = simd_and(byte_e1_adv, byte_af);
        tmp426 = simd_not(basis_bits.bit_5);
        tmp427 = simd_or(simd_and(basis_bits.bit_4, tmp426), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
        byte_range_b4_bb = simd_and(tmp422, tmp427);
        carryQ.cq[71] = carryout2carry(pablo_blk_Advance(sequence_e1_af, carryQ.get_carry_in(71), sequence_e1_af_adv));
        tmp428 = simd_and(sequence_e1_af_adv, byte_range_b4_bb);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp428);
        sequence_e1_b0 = simd_and(byte_e1_adv, byte_b0);
        tmp429 = simd_and(tmp422, tmp10);
        byte_range_b8_ba = simd_andc(tmp429, tmp12);
        carryQ.cq[72] = carryout2carry(pablo_blk_Advance(sequence_e1_b0, carryQ.get_carry_in(72), sequence_e1_b0_adv));
        tmp430 = simd_and(sequence_e1_b0_adv, byte_range_b8_ba);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp430);
        sequence_e1_b1 = simd_and(byte_e1_adv, byte_b1);
        tmp431 = simd_and(tmp420, basis_bits.bit_4);
        byte_range_8a_8c = simd_and(tmp431, tmp249);
        carryQ.cq[73] = carryout2carry(pablo_blk_Advance(sequence_e1_b1, carryQ.get_carry_in(73), sequence_e1_b1_adv));
        tmp432 = simd_and(sequence_e1_b1_adv, byte_range_8a_8c);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp432);
        sequence_e1_b2 = simd_and(byte_e1_adv, byte_b2);
        carryQ.cq[74] = carryout2carry(pablo_blk_Advance(sequence_e1_b2, carryQ.get_carry_in(74), sequence_e1_b2_adv));
        tmp433 = simd_and(sequence_e1_b2_adv, byte_range_80_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp433);
        sequence_e1_b3 = simd_and(byte_e1_adv, byte_b3);
        tmp434 = simd_and(tmp422, tmp131);
        cc_range_1cc8_1cf7_3 = simd_or(tmp431, tmp434);
        carryQ.cq[75] = carryout2carry(pablo_blk_Advance(sequence_e1_b3, carryQ.get_carry_in(75), sequence_e1_b3_adv));
        tmp435 = simd_and(sequence_e1_b3_adv, cc_range_1cc8_1cf7_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp435);
        sequence_e1_b7 = simd_and(byte_e1_adv, byte_b7);
        tmp436 = simd_and(byte_range_80_bf, basis_bits.bit_2);
        tmp437 = simd_not(tmp4);
        tmp438 = simd_or(simd_and(basis_bits.bit_3, tmp437), simd_andc(tmp131, basis_bits.bit_3));
        byte_range_a7_bb = simd_and(tmp436, tmp438);
        carryQ.cq[76] = carryout2carry(pablo_blk_Advance(sequence_e1_b7, carryQ.get_carry_in(76), sequence_e1_b7_adv));
        tmp439 = simd_and(sequence_e1_b7_adv, byte_range_a7_bb);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp439);
        byte_bc = simd_and(tmp422, tmp70);
        sequence_e1_bc = simd_and(byte_e1_adv, byte_bc);
        tmp440 = simd_and(byte_range_80_bf, tmp29);
        tmp441 = simd_and(basis_bits.bit_6, basis_bits.bit_5);
        cc_range_1f16_1f1e_3 = simd_and(tmp440, tmp441);
        carryQ.cq[77] = carryout2carry(pablo_blk_Advance(sequence_e1_bc, carryQ.get_carry_in(77), sequence_e1_bc_adv));
        tmp442 = simd_and(sequence_e1_bc_adv, cc_range_1f16_1f1e_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp442);
        sequence_e1_bd = simd_and(byte_e1_adv, byte_bd);
        tmp443 = simd_and(tmp420, tmp441);
        tmp444 = simd_and(tmp440, tmp49);
        tmp445 = simd_or(tmp443, tmp444);
        tmp446 = simd_and(tmp440, tmp177);
        tmp447 = simd_or(tmp445, tmp446);
        tmp448 = simd_and(tmp440, tmp70);
        tmp449 = simd_or(tmp447, tmp448);
        tmp450 = simd_and(tmp440, tmp17);
        tmp451 = simd_or(tmp449, tmp450);
        tmp452 = simd_and(tmp422, tmp82);
        cc_range_1f46_1f7e_3 = simd_or(tmp451, tmp452);
        carryQ.cq[78] = carryout2carry(pablo_blk_Advance(sequence_e1_bd, carryQ.get_carry_in(78), sequence_e1_bd_adv));
        tmp453 = simd_and(sequence_e1_bd_adv, cc_range_1f46_1f7e_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp453);
        sequence_e1_be = simd_and(byte_e1_adv, byte_be);
        carryQ.cq[79] = carryout2carry(pablo_blk_Advance(sequence_e1_be, carryQ.get_carry_in(79), sequence_e1_be_adv));
        tmp454 = simd_and(sequence_e1_be_adv, byte_b5);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp454);
        sequence_e1_bf = simd_and(byte_e1_adv, byte_bf);
        tmp455 = simd_and(tmp420, tmp39);
        tmp456 = simd_and(tmp440, tmp140);
        tmp457 = simd_or(tmp455, tmp456);
        tmp458 = simd_or(tmp457, tmp448);
        tmp459 = simd_andc(tmp422, tmp206);
        tmp460 = simd_or(tmp458, tmp459);
        tmp461 = simd_and(tmp422, tmp39);
        tmp462 = simd_or(tmp460, tmp461);
        tmp463 = simd_and(tmp422, tmp13);
        cc_range_1fc5_1fff_3 = simd_or(tmp462, tmp463);
        carryQ.cq[80] = carryout2carry(pablo_blk_Advance(sequence_e1_bf, carryQ.get_carry_in(80), sequence_e1_bf_adv));
        tmp464 = simd_and(sequence_e1_bf_adv, cc_range_1fc5_1fff_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp464);
        byte_e2 = simd_and(tmp80, tmp26);
        byte_81 = simd_and(tmp420, tmp86);
        carryQ.cq[81] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(81), tmp465));
        sequence_e2_81 = simd_and(tmp465, byte_81);
        carryQ.cq[82] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(82), byte_e2_adv));
        tmp466 = simd_and(tmp419, tmp39);
        tmp467 = simd_andc(basis_bits.bit_6, tmp19);
        tmp468 = simd_and(tmp422, tmp467);
        cc_range_2065_2072_3 = simd_or(tmp466, tmp468);
        carryQ.cq[83] = carryout2carry(pablo_blk_Advance(sequence_e2_81, carryQ.get_carry_in(83), sequence_e2_81_adv));
        tmp469 = simd_and(sequence_e2_81_adv, cc_range_2065_2072_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp469);
        byte_82 = simd_and(tmp420, tmp26);
        sequence_e2_82 = simd_and(byte_e2_adv, byte_82);
        tmp470 = simd_and(tmp420, tmp13);
        tmp471 = simd_and(tmp440, tmp4);
        tmp472 = simd_and(tmp471, tmp32);
        tmp473 = simd_or(tmp470, tmp472);
        tmp474 = simd_and(tmp422, basis_bits.bit_4);
        tmp475 = simd_and(tmp474, tmp60);
        cc_range_208f_20bb_3 = simd_or(tmp473, tmp475);
        carryQ.cq[84] = carryout2carry(pablo_blk_Advance(sequence_e2_82, carryQ.get_carry_in(84), sequence_e2_82_adv));
        tmp476 = simd_and(sequence_e2_82_adv, cc_range_208f_20bb_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp476);
        sequence_e2_83 = simd_and(byte_e2_adv, byte_83);
        tmp477 = simd_and(tmp422, tmp189);
        cc_range_20c0_20f1_3 = simd_or(tmp420, tmp477);
        carryQ.cq[85] = carryout2carry(pablo_blk_Advance(sequence_e2_83, carryQ.get_carry_in(85), sequence_e2_83_adv));
        tmp478 = simd_and(sequence_e2_83_adv, cc_range_20c0_20f1_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp478);
        byte_86 = simd_and(tmp420, tmp48);
        sequence_e2_86 = simd_and(byte_e2_adv, byte_86);
        byte_range_8a_8f = simd_and(tmp431, tmp75);
        carryQ.cq[86] = carryout2carry(pablo_blk_Advance(sequence_e2_86, carryQ.get_carry_in(86), sequence_e2_86_adv));
        tmp479 = simd_and(sequence_e2_86_adv, byte_range_8a_8f);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp479);
        sequence_e2_8f = simd_and(byte_e2_adv, byte_8f);
        byte_range_b4_bf = simd_and(tmp422, tmp19);
        carryQ.cq[87] = carryout2carry(pablo_blk_Advance(sequence_e2_8f, carryQ.get_carry_in(87), sequence_e2_8f_adv));
        tmp480 = simd_and(sequence_e2_8f_adv, byte_range_b4_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp480);
        byte_90 = simd_andc(tmp440, tmp35);
        sequence_e2_90 = simd_and(byte_e2_adv, byte_90);
        tmp481 = simd_or(basis_bits.bit_3, tmp131);
        byte_range_a7_bf = simd_and(tmp436, tmp481);
        carryQ.cq[88] = carryout2carry(pablo_blk_Advance(sequence_e2_90, carryQ.get_carry_in(88), sequence_e2_90_adv));
        tmp482 = simd_and(sequence_e2_90_adv, byte_range_a7_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp482);
        byte_91 = simd_and(tmp440, tmp86);
        sequence_e2_91 = simd_and(byte_e2_adv, byte_91);
        tmp483 = simd_andc(byte_range_80_bf, basis_bits.bit_2);
        tmp484 = simd_or(basis_bits.bit_3, tmp346);
        byte_range_8b_9f = simd_and(tmp483, tmp484);
        carryQ.cq[89] = carryout2carry(pablo_blk_Advance(sequence_e2_91, carryQ.get_carry_in(89), sequence_e2_91_adv));
        tmp485 = simd_and(sequence_e2_91_adv, byte_range_8b_9f);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp485);
        sequence_e2_9c = simd_and(byte_e2_adv, byte_9c);
        byte_80 = simd_andc(tmp420, tmp35);
        carryQ.cq[90] = carryout2carry(pablo_blk_Advance(sequence_e2_9c, carryQ.get_carry_in(90), sequence_e2_9c_adv));
        tmp486 = simd_and(sequence_e2_9c_adv, byte_80);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp486);
        sequence_e2_ad = simd_and(byte_e2_adv, byte_ad);
        tmp487 = simd_and(tmp421, tmp32);
        tmp488 = simd_and(basis_bits.bit_4, tmp75);
        tmp489 = simd_and(basis_bits.bit_3, tmp488);
        tmp490 = simd_or(basis_bits.bit_2, tmp489);
        tmp491 = simd_and(byte_range_80_bf, tmp490);
        cc_range_2b4d_2b5a_3 = simd_or(tmp487, tmp491);
        carryQ.cq[91] = carryout2carry(pablo_blk_Advance(sequence_e2_ad, carryQ.get_carry_in(91), sequence_e2_ad_adv));
        tmp492 = simd_and(sequence_e2_ad_adv, cc_range_2b4d_2b5a_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp492);
        byte_range_ae_af = simd_and(tmp419, tmp82);
        byte_e2_byte_range_ae_af = simd_and(byte_e2_adv, byte_range_ae_af);
        carryQ.cq[92] = carryout2carry(pablo_blk_Advance(byte_e2_byte_range_ae_af, carryQ.get_carry_in(92), tmp493));
        byte_e2_byte_range_ae_af_sfx = simd_and(tmp493, byte_range_80_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, byte_e2_byte_range_ae_af_sfx);
        sequence_e2_b0 = simd_and(byte_e2_adv, byte_b0);
        carryQ.cq[93] = carryout2carry(pablo_blk_Advance(sequence_e2_b0, carryQ.get_carry_in(93), tmp494));
        sequence_e2_b0_af = simd_and(tmp494, byte_af);
        sequence_e2_b1 = simd_and(byte_e2_adv, byte_b1);
        carryQ.cq[94] = carryout2carry(pablo_blk_Advance(sequence_e2_b1, carryQ.get_carry_in(94), tmp495));
        sequence_e2_b1_9f = simd_and(tmp495, byte_9f);
        sequence_e2_b3 = simd_and(byte_e2_adv, byte_b3);
        tmp496 = simd_or(simd_and(basis_bits.bit_4, tmp42), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
        byte_range_b4_b8 = simd_and(tmp422, tmp496);
        carryQ.cq[95] = carryout2carry(pablo_blk_Advance(sequence_e2_b3, carryQ.get_carry_in(95), tmp497));
        sequence_e2_b3_byte_range_b4_b8 = simd_and(tmp497, byte_range_b4_b8);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_e2_b3_byte_range_b4_b8);
        sequence_e2_b4 = simd_and(byte_e2_adv, byte_b4);
        carryQ.cq[96] = carryout2carry(pablo_blk_Advance(sequence_e2_b4, carryQ.get_carry_in(96), tmp498));
        sequence_e2_b4_a6 = simd_and(tmp498, byte_a6);
        sequence_e2_b5 = simd_and(byte_e2_adv, byte_b5);
        tmp499 = simd_and(tmp419, basis_bits.bit_4);
        byte_range_a8_ae = simd_andc(tmp499, tmp43);
        carryQ.cq[97] = carryout2carry(pablo_blk_Advance(sequence_e2_b5, carryQ.get_carry_in(97), tmp500));
        sequence_e2_b5_byte_range_a8_ae = simd_and(tmp500, byte_range_a8_ae);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_e2_b5_byte_range_a8_ae);
        sequence_e2_b6 = simd_and(byte_e2_adv, byte_b6);
        byte_range_97_9f = simd_and(tmp440, tmp131);
        carryQ.cq[98] = carryout2carry(pablo_blk_Advance(sequence_e2_b6, carryQ.get_carry_in(98), tmp501));
        sequence_e2_b6_byte_range_97_9f = simd_and(tmp501, byte_range_97_9f);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_e2_b6_byte_range_97_9f);
        sequence_e2_b7 = simd_and(byte_e2_adv, byte_b7);
        byte_87 = simd_and(tmp420, tmp58);
        carryQ.cq[99] = carryout2carry(pablo_blk_Advance(sequence_e2_b7, carryQ.get_carry_in(99), tmp502));
        sequence_e2_b7_87 = simd_and(tmp502, byte_87);
        sequence_e2_b8 = simd_and(byte_e2_adv, byte_b8);
        byte_range_bc_bf = simd_and(tmp422, tmp4);
        carryQ.cq[100] = carryout2carry(pablo_blk_Advance(sequence_e2_b8, carryQ.get_carry_in(100), tmp503));
        sequence_e2_b8_byte_range_bc_bf = simd_and(tmp503, byte_range_bc_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_e2_b8_byte_range_bc_bf);
        sequence_e2_b9 = simd_and(byte_e2_adv, byte_b9);
        carryQ.cq[101] = carryout2carry(pablo_blk_Advance(sequence_e2_b9, carryQ.get_carry_in(101), tmp504));
        sequence_e2_b9_byte_range_80_bf = simd_and(tmp504, byte_range_80_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_e2_b9_byte_range_80_bf);
        sequence_e2_ba = simd_and(byte_e2_adv, byte_ba);
        carryQ.cq[102] = carryout2carry(pablo_blk_Advance(sequence_e2_ba, carryQ.get_carry_in(102), tmp505));
        sequence_e2_ba_9a = simd_and(tmp505, byte_9a);
        sequence_e2_bb = simd_and(byte_e2_adv, byte_bb);
        carryQ.cq[103] = carryout2carry(pablo_blk_Advance(sequence_e2_bb, carryQ.get_carry_in(103), tmp506));
        sequence_e2_bb_byte_range_b4_bf = simd_and(tmp506, byte_range_b4_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_e2_bb_byte_range_b4_bf);
        sequence_e2_bf = simd_and(byte_e2_adv, byte_bf);
        tmp507 = simd_not(basis_bits.bit_3);
        tmp508 = simd_and(basis_bits.bit_3, tmp169);
        tmp509 = simd_or(simd_and(basis_bits.bit_2, tmp507), simd_andc(tmp508, basis_bits.bit_2));
        byte_range_96_af = simd_and(byte_range_80_bf, tmp509);
        carryQ.cq[104] = carryout2carry(pablo_blk_Advance(sequence_e2_bf, carryQ.get_carry_in(104), tmp510));
        sequence_e2_bf_byte_range_96_af = simd_and(tmp510, byte_range_96_af);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_e2_bf_byte_range_96_af);
        byte_e3 = simd_and(tmp80, tmp99);
        carryQ.cq[105] = carryout2carry(pablo_blk_Advance(byte_e3, carryQ.get_carry_in(105), tmp511));
        sequence_e3_81 = simd_and(tmp511, byte_81);
        carryQ.cq[106] = carryout2carry(pablo_blk_Advance(byte_e3, carryQ.get_carry_in(106), byte_e3_adv));
        carryQ.cq[107] = carryout2carry(pablo_blk_Advance(sequence_e3_81, carryQ.get_carry_in(107), sequence_e3_81_adv));
        tmp512 = simd_and(sequence_e3_81_adv, byte_80);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp512);
        sequence_e3_82 = simd_and(byte_e3_adv, byte_82);
        byte_range_97_98 = simd_and(tmp440, tmp44);
        carryQ.cq[108] = carryout2carry(pablo_blk_Advance(sequence_e3_82, carryQ.get_carry_in(108), sequence_e3_82_adv));
        tmp513 = simd_and(sequence_e3_82_adv, byte_range_97_98);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp513);
        byte_84 = simd_and(tmp420, tmp33);
        sequence_e3_84 = simd_and(byte_e3_adv, byte_84);
        tmp514 = simd_andc(tmp420, basis_bits.bit_4);
        tmp515 = simd_andc(tmp514, tmp63);
        tmp516 = simd_and(tmp436, tmp161);
        cc_range_3100_312e_3 = simd_or(tmp515, tmp516);
        carryQ.cq[109] = carryout2carry(pablo_blk_Advance(sequence_e3_84, carryQ.get_carry_in(109), sequence_e3_84_adv));
        tmp517 = simd_and(sequence_e3_84_adv, cc_range_3100_312e_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp517);
        sequence_e3_86 = simd_and(byte_e3_adv, byte_86);
        cc_range_318f_31bb_3 = simd_or(tmp470, tmp475);
        carryQ.cq[110] = carryout2carry(pablo_blk_Advance(sequence_e3_86, carryQ.get_carry_in(110), sequence_e3_86_adv));
        tmp518 = simd_and(sequence_e3_86_adv, cc_range_318f_31bb_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp518);
        sequence_e3_87 = simd_and(byte_e3_adv, byte_87);
        byte_range_a4_af = simd_and(tmp419, tmp19);
        carryQ.cq[111] = carryout2carry(pablo_blk_Advance(sequence_e3_87, carryQ.get_carry_in(111), sequence_e3_87_adv));
        tmp519 = simd_and(sequence_e3_87_adv, byte_range_a4_af);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp519);
        byte_88 = simd_and(tmp420, tmp49);
        sequence_e3_88 = simd_and(byte_e3_adv, byte_88);
        carryQ.cq[112] = carryout2carry(pablo_blk_Advance(sequence_e3_88, carryQ.get_carry_in(112), sequence_e3_88_adv));
        tmp520 = simd_and(sequence_e3_88_adv, byte_9f);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp520);
        sequence_e3_8b = simd_and(byte_e3_adv, byte_8b);
        carryQ.cq[113] = carryout2carry(pablo_blk_Advance(sequence_e3_8b, carryQ.get_carry_in(113), sequence_e3_8b_adv));
        tmp521 = simd_and(sequence_e3_8b_adv, byte_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp521);
        byte_e4 = simd_and(tmp80, tmp33);
        carryQ.cq[114] = carryout2carry(pablo_blk_Advance(byte_e4, carryQ.get_carry_in(114), tmp522));
        sequence_e4_b6 = simd_and(tmp522, byte_b6);
        carryQ.cq[115] = carryout2carry(pablo_blk_Advance(byte_e4, carryQ.get_carry_in(115), byte_e4_adv));
        carryQ.cq[116] = carryout2carry(pablo_blk_Advance(sequence_e4_b6, carryQ.get_carry_in(116), sequence_e4_b6_adv));
        tmp523 = simd_and(sequence_e4_b6_adv, byte_range_b6_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp523);
        byte_e9 = simd_and(tmp80, tmp115);
        carryQ.cq[117] = carryout2carry(pablo_blk_Advance(byte_e9, carryQ.get_carry_in(117), tmp524));
        sequence_e9_bf = simd_and(tmp524, byte_bf);
        carryQ.cq[118] = carryout2carry(pablo_blk_Advance(byte_e9, carryQ.get_carry_in(118), byte_e9_adv));
        tmp525 = simd_or(basis_bits.bit_2, tmp96);
        byte_range_8d_bf = simd_and(byte_range_80_bf, tmp525);
        carryQ.cq[119] = carryout2carry(pablo_blk_Advance(sequence_e9_bf, carryQ.get_carry_in(119), sequence_e9_bf_adv));
        tmp526 = simd_and(sequence_e9_bf_adv, byte_range_8d_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp526);
        byte_ea = simd_and(tmp80, tmp177);
        byte_92 = simd_and(tmp440, tmp26);
        carryQ.cq[120] = carryout2carry(pablo_blk_Advance(byte_ea, carryQ.get_carry_in(120), tmp527));
        sequence_ea_92 = simd_and(tmp527, byte_92);
        carryQ.cq[121] = carryout2carry(pablo_blk_Advance(byte_ea, carryQ.get_carry_in(121), byte_ea_adv));
        byte_range_8d_8f = simd_and(tmp421, tmp32);
        carryQ.cq[122] = carryout2carry(pablo_blk_Advance(sequence_ea_92, carryQ.get_carry_in(122), sequence_ea_92_adv));
        tmp528 = simd_and(sequence_ea_92_adv, byte_range_8d_8f);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp528);
        byte_93 = simd_and(tmp440, tmp99);
        sequence_ea_93 = simd_and(byte_ea_adv, byte_93);
        byte_range_87_8f = simd_and(tmp420, tmp131);
        carryQ.cq[123] = carryout2carry(pablo_blk_Advance(sequence_ea_93, carryQ.get_carry_in(123), sequence_ea_93_adv));
        tmp529 = simd_and(sequence_ea_93_adv, byte_range_87_8f);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp529);
        byte_98 = simd_and(tmp440, tmp49);
        sequence_ea_98 = simd_and(byte_ea_adv, byte_98);
        tmp530 = simd_or(basis_bits.bit_3, tmp4);
        byte_range_ac_bf = simd_and(tmp436, tmp530);
        carryQ.cq[124] = carryout2carry(pablo_blk_Advance(sequence_ea_98, carryQ.get_carry_in(124), sequence_ea_98_adv));
        tmp531 = simd_and(sequence_ea_98_adv, byte_range_ac_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp531);
        sequence_ea_9a = simd_and(byte_ea_adv, byte_9a);
        tmp532 = simd_and(tmp440, basis_bits.bit_4);
        byte_range_98_9e = simd_andc(tmp532, tmp43);
        carryQ.cq[125] = carryout2carry(pablo_blk_Advance(sequence_ea_9a, carryQ.get_carry_in(125), sequence_ea_9a_adv));
        tmp533 = simd_and(sequence_ea_9a_adv, byte_range_98_9e);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp533);
        sequence_ea_9b = simd_and(byte_ea_adv, byte_9b);
        carryQ.cq[126] = carryout2carry(pablo_blk_Advance(sequence_ea_9b, carryQ.get_carry_in(126), sequence_ea_9b_adv));
        tmp534 = simd_and(sequence_ea_9b_adv, byte_range_b8_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp534);
        byte_9e = simd_and(tmp440, tmp17);
        sequence_ea_9e = simd_and(byte_ea_adv, byte_9e);
        tmp535 = simd_and(tmp440, tmp19);
        tmp536 = simd_or(tmp470, tmp535);
        tmp537 = simd_and(tmp436, tmp484);
        cc_range_a78f_a7ab_3 = simd_or(tmp536, tmp537);
        carryQ.cq[127] = carryout2carry(pablo_blk_Advance(sequence_ea_9e, carryQ.get_carry_in(127), sequence_ea_9e_adv));
        tmp538 = simd_and(sequence_ea_9e_adv, cc_range_a78f_a7ab_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp538);
        sequence_ea_9f = simd_and(byte_ea_adv, byte_9f);
        tmp539 = simd_and(basis_bits.bit_2, tmp239);
        byte_range_80_b7 = simd_andc(byte_range_80_bf, tmp539);
        carryQ.cq[128] = carryout2carry(pablo_blk_Advance(sequence_ea_9f, carryQ.get_carry_in(128), sequence_ea_9f_adv));
        tmp540 = simd_and(sequence_ea_9f_adv, byte_range_80_b7);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp540);
        sequence_ea_a0 = simd_and(byte_ea_adv, byte_a0);
        tmp541 = simd_and(tmp419, tmp4);
        tmp542 = simd_and(tmp474, tmp75);
        cc_range_a82c_a83a_3 = simd_or(tmp541, tmp542);
        carryQ.cq[129] = carryout2carry(pablo_blk_Advance(sequence_ea_a0, carryQ.get_carry_in(129), sequence_ea_a0_adv));
        tmp543 = simd_and(sequence_ea_a0_adv, cc_range_a82c_a83a_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp543);
        sequence_ea_a1 = simd_and(byte_ea_adv, byte_a1);
        carryQ.cq[130] = carryout2carry(pablo_blk_Advance(sequence_ea_a1, carryQ.get_carry_in(130), sequence_ea_a1_adv));
        tmp544 = simd_and(sequence_ea_a1_adv, byte_range_b8_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp544);
        sequence_ea_a3 = simd_and(byte_ea_adv, byte_a3);
        tmp545 = simd_or(simd_and(basis_bits.bit_4, tmp271), simd_andc(tmp63, basis_bits.bit_4));
        tmp546 = simd_and(tmp420, tmp545);
        tmp547 = simd_and(tmp532, tmp75);
        tmp548 = simd_or(tmp546, tmp547);
        cc_range_a8c5_a8fc_3 = simd_or(tmp548, byte_range_bc_bf);
        carryQ.cq[131] = carryout2carry(pablo_blk_Advance(sequence_ea_a3, carryQ.get_carry_in(131), sequence_ea_a3_adv));
        tmp549 = simd_and(sequence_ea_a3_adv, cc_range_a8c5_a8fc_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp549);
        sequence_ea_a5 = simd_and(byte_ea_adv, byte_a5);
        tmp550 = simd_not(tmp43);
        tmp551 = simd_or(simd_and(basis_bits.bit_4, tmp550), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
        tmp552 = simd_and(tmp440, tmp551);
        tmp553 = simd_and(byte_range_bc_bf, tmp32);
        cc_range_a954_a97d_3 = simd_or(tmp552, tmp553);
        carryQ.cq[132] = carryout2carry(pablo_blk_Advance(sequence_ea_a5, carryQ.get_carry_in(132), sequence_ea_a5_adv));
        tmp554 = simd_and(sequence_ea_a5_adv, cc_range_a954_a97d_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp554);
        sequence_ea_a7 = simd_and(byte_ea_adv, byte_a7);
        tmp555 = simd_and(tmp420, tmp17);
        tmp556 = simd_and(tmp532, tmp227);
        tmp557 = simd_or(tmp555, tmp556);
        cc_range_a9ce_a9e0_3 = simd_or(tmp557, tmp436);
        carryQ.cq[133] = carryout2carry(pablo_blk_Advance(sequence_ea_a7, carryQ.get_carry_in(133), sequence_ea_a7_adv));
        tmp558 = simd_and(sequence_ea_a7_adv, cc_range_a9ce_a9e0_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp558);
        sequence_ea_a8 = simd_and(byte_ea_adv, byte_a8);
        byte_range_b7_bf = simd_and(tmp422, tmp131);
        carryQ.cq[134] = carryout2carry(pablo_blk_Advance(sequence_ea_a8, carryQ.get_carry_in(134), sequence_ea_a8_adv));
        tmp559 = simd_and(sequence_ea_a8_adv, byte_range_b7_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp559);
        sequence_ea_a9 = simd_and(byte_ea_adv, byte_a9);
        tmp560 = simd_and(tmp420, tmp82);
        tmp561 = simd_and(tmp440, tmp125);
        tmp562 = simd_or(tmp560, tmp561);
        cc_range_aa4e_aa7c_3 = simd_or(tmp562, byte_range_bc_bf);
        carryQ.cq[135] = carryout2carry(pablo_blk_Advance(sequence_ea_a9, carryQ.get_carry_in(135), sequence_ea_a9_adv));
        tmp563 = simd_and(sequence_ea_a9_adv, cc_range_aa4e_aa7c_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp563);
        sequence_ea_ab = simd_and(byte_ea_adv, byte_ab);
        tmp564 = simd_not(tmp346);
        tmp565 = simd_or(tmp19, tmp12);
        tmp566 = simd_or(simd_and(basis_bits.bit_3, tmp564), simd_andc(tmp565, basis_bits.bit_3));
        tmp567 = simd_and(tmp483, tmp566);
        cc_range_aac3_aaf7_3 = simd_or(tmp567, byte_range_b7_bf);
        carryQ.cq[136] = carryout2carry(pablo_blk_Advance(sequence_ea_ab, carryQ.get_carry_in(136), sequence_ea_ab_adv));
        tmp568 = simd_and(sequence_ea_ab_adv, cc_range_aac3_aaf7_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp568);
        sequence_ea_ac = simd_and(byte_ea_adv, byte_ac);
        tmp569 = simd_andc(tmp35, tmp44);
        tmp570 = simd_andc(tmp420, tmp569);
        tmp571 = simd_or(simd_and(basis_bits.bit_3, tmp36), simd_andc(tmp13, basis_bits.bit_3));
        tmp572 = simd_and(tmp483, tmp571);
        tmp573 = simd_or(tmp570, tmp572);
        tmp574 = simd_or(tmp573, byte_range_97_9f);
        tmp575 = simd_and(tmp419, tmp58);
        tmp576 = simd_or(tmp574, tmp575);
        tmp577 = simd_or(basis_bits.bit_3, tmp13);
        tmp578 = simd_and(tmp436, tmp577);
        cc_range_ab00_ab2f_3 = simd_or(tmp576, tmp578);
        carryQ.cq[137] = carryout2carry(pablo_blk_Advance(sequence_ea_ac, carryQ.get_carry_in(137), sequence_ea_ac_adv));
        tmp579 = simd_and(sequence_ea_ac_adv, cc_range_ab00_ab2f_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp579);
        byte_range_ad_ae = simd_and(tmp541, tmp109);
        byte_ea_byte_range_ad_ae = simd_and(byte_ea_adv, byte_range_ad_ae);
        carryQ.cq[138] = carryout2carry(pablo_blk_Advance(byte_ea_byte_range_ad_ae, carryQ.get_carry_in(138), tmp580));
        byte_ea_byte_range_ad_ae_sfx = simd_and(tmp580, byte_range_80_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, byte_ea_byte_range_ad_ae_sfx);
        sequence_ea_af = simd_and(byte_ea_adv, byte_af);
        carryQ.cq[139] = carryout2carry(pablo_blk_Advance(sequence_ea_af, carryQ.get_carry_in(139), tmp581));
        sequence_ea_af_byte_range_ae_af = simd_and(tmp581, byte_range_ae_af);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_ea_af_byte_range_ae_af);
        byte_ed = simd_and(tmp80, tmp6);
        carryQ.cq[140] = carryout2carry(pablo_blk_Advance(byte_ed, carryQ.get_carry_in(140), tmp582));
        sequence_ed_9e = simd_and(tmp582, byte_9e);
        carryQ.cq[141] = carryout2carry(pablo_blk_Advance(byte_ed, carryQ.get_carry_in(141), byte_ed_adv));
        carryQ.cq[142] = carryout2carry(pablo_blk_Advance(sequence_ed_9e, carryQ.get_carry_in(142), sequence_ed_9e_adv));
        tmp583 = simd_and(sequence_ed_9e_adv, byte_range_a4_af);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp583);
        sequence_ed_9f = simd_and(byte_ed_adv, byte_9f);
        tmp584 = simd_not(tmp60);
        tmp585 = simd_or(simd_and(basis_bits.bit_4, tmp584), simd_andc(tmp43, basis_bits.bit_4));
        tmp586 = simd_and(tmp420, tmp585);
        cc_range_d7c7_d7fc_3 = simd_or(tmp586, byte_range_bc_bf);
        carryQ.cq[143] = carryout2carry(pablo_blk_Advance(sequence_ed_9f, carryQ.get_carry_in(143), sequence_ed_9f_adv));
        tmp587 = simd_and(sequence_ed_9f_adv, cc_range_d7c7_d7fc_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp587);
        byte_ef = simd_and(tmp80, tmp13);
        carryQ.cq[144] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(144), tmp588));
        sequence_ef_a9 = simd_and(tmp588, byte_a9);
        carryQ.cq[145] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(145), byte_ef_adv));
        carryQ.cq[146] = carryout2carry(pablo_blk_Advance(sequence_ef_a9, carryQ.get_carry_in(146), sequence_ef_a9_adv));
        tmp589 = simd_and(sequence_ef_a9_adv, byte_range_ae_af);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp589);
        sequence_ef_ab = simd_and(byte_ef_adv, byte_ab);
        byte_range_9a_bf = simd_and(byte_range_80_bf, tmp490);
        carryQ.cq[147] = carryout2carry(pablo_blk_Advance(sequence_ef_ab, carryQ.get_carry_in(147), sequence_ef_ab_adv));
        tmp590 = simd_and(sequence_ef_ab_adv, byte_range_9a_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp590);
        sequence_ef_ac = simd_and(byte_ef_adv, byte_ac);
        tmp591 = simd_not(tmp565);
        tmp592 = simd_or(simd_and(basis_bits.bit_3, tmp591), simd_andc(tmp131, basis_bits.bit_3));
        tmp593 = simd_and(tmp483, tmp592);
        tmp594 = simd_andc(tmp532, tmp63);
        tmp595 = simd_or(tmp593, tmp594);
        tmp596 = simd_and(tmp422, tmp58);
        tmp597 = simd_or(tmp595, tmp596);
        tmp598 = simd_and(tmp422, tmp6);
        tmp599 = simd_or(tmp597, tmp598);
        cc_range_fb07_fb3f_3 = simd_or(tmp599, tmp463);
        carryQ.cq[148] = carryout2carry(pablo_blk_Advance(sequence_ef_ac, carryQ.get_carry_in(148), sequence_ef_ac_adv));
        tmp600 = simd_and(sequence_ef_ac_adv, cc_range_fb07_fb3f_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp600);
        sequence_ef_ad = simd_and(byte_ef_adv, byte_ad);
        tmp601 = simd_or(tmp26, tmp39);
        cc_range_fb42_fb45_3 = simd_and(tmp420, tmp601);
        carryQ.cq[149] = carryout2carry(pablo_blk_Advance(sequence_ef_ad, carryQ.get_carry_in(149), sequence_ef_ad_adv));
        tmp602 = simd_and(sequence_ef_ad_adv, cc_range_fb42_fb45_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp602);
        sequence_ef_af = simd_and(byte_ef_adv, byte_af);
        tmp603 = simd_or(simd_and(basis_bits.bit_3, tmp591), simd_andc(tmp206, basis_bits.bit_3));
        byte_range_82_92 = simd_and(tmp483, tmp603);
        carryQ.cq[150] = carryout2carry(pablo_blk_Advance(sequence_ef_af, carryQ.get_carry_in(150), sequence_ef_af_adv));
        tmp604 = simd_and(sequence_ef_af_adv, byte_range_82_92);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp604);
        sequence_ef_b5 = simd_and(byte_ef_adv, byte_b5);
        byte_range_80_8f = simd_andc(byte_range_80_bf, tmp2);
        carryQ.cq[151] = carryout2carry(pablo_blk_Advance(sequence_ef_b5, carryQ.get_carry_in(151), sequence_ef_b5_adv));
        tmp605 = simd_and(sequence_ef_b5_adv, byte_range_80_8f);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp605);
        sequence_ef_b6 = simd_and(byte_ef_adv, byte_b6);
        byte_range_90_91 = simd_andc(tmp440, tmp206);
        carryQ.cq[152] = carryout2carry(pablo_blk_Advance(sequence_ef_b6, carryQ.get_carry_in(152), sequence_ef_b6_adv));
        tmp606 = simd_and(sequence_ef_b6_adv, byte_range_90_91);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp606);
        sequence_ef_b7 = simd_and(byte_ef_adv, byte_b7);
        tmp607 = simd_or(basis_bits.bit_3, basis_bits.bit_4);
        tmp608 = simd_or(simd_and(basis_bits.bit_2, tmp507), simd_andc(tmp607, basis_bits.bit_2));
        tmp609 = simd_and(byte_range_80_bf, tmp608);
        cc_range_fdc8_fdfe_3 = simd_or(tmp609, tmp452);
        carryQ.cq[153] = carryout2carry(pablo_blk_Advance(sequence_ef_b7, carryQ.get_carry_in(153), sequence_ef_b7_adv));
        tmp610 = simd_and(sequence_ef_b7_adv, cc_range_fdc8_fdfe_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp610);
        sequence_ef_b8 = simd_and(byte_ef_adv, byte_b8);
        tmp611 = simd_and(tmp419, tmp131);
        cc_range_fe1a_fe27_3 = simd_or(tmp547, tmp611);
        carryQ.cq[154] = carryout2carry(pablo_blk_Advance(sequence_ef_b8, carryQ.get_carry_in(154), sequence_ef_b8_adv));
        tmp612 = simd_and(sequence_ef_b8_adv, cc_range_fe1a_fe27_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp612);
        sequence_ef_b9 = simd_and(byte_ef_adv, byte_b9);
        tmp613 = simd_or(byte_93, tmp575);
        tmp614 = simd_or(tmp613, tmp541);
        cc_range_fe53_fe75_3 = simd_or(tmp614, tmp461);
        carryQ.cq[155] = carryout2carry(pablo_blk_Advance(sequence_ef_b9, carryQ.get_carry_in(155), sequence_ef_b9_adv));
        tmp615 = simd_and(sequence_ef_b9_adv, cc_range_fe53_fe75_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp615);
        sequence_ef_bb = simd_and(byte_ef_adv, byte_bb);
        byte_range_bd_be = simd_and(byte_range_bc_bf, tmp109);
        carryQ.cq[156] = carryout2carry(pablo_blk_Advance(sequence_ef_bb, carryQ.get_carry_in(156), sequence_ef_bb_adv));
        tmp616 = simd_and(sequence_ef_bb_adv, byte_range_bd_be);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp616);
        sequence_ef_bc = simd_and(byte_ef_adv, byte_bc);
        carryQ.cq[157] = carryout2carry(pablo_blk_Advance(sequence_ef_bc, carryQ.get_carry_in(157), sequence_ef_bc_adv));
        tmp617 = simd_and(sequence_ef_bc_adv, byte_80);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp617);
        sequence_ef_be = simd_and(byte_ef_adv, byte_be);
        carryQ.cq[158] = carryout2carry(pablo_blk_Advance(sequence_ef_be, carryQ.get_carry_in(158), sequence_ef_be_adv));
        tmp618 = simd_and(sequence_ef_be_adv, byte_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp618);
        sequence_ef_bf = simd_and(byte_ef_adv, byte_bf);
        tmp619 = simd_andc(tmp206, tmp11);
        tmp620 = simd_andc(byte_range_80_8f, tmp619);
        tmp621 = simd_or(tmp620, byte_range_90_91);
        tmp622 = simd_and(tmp440, tmp11);
        tmp623 = simd_or(tmp621, tmp622);
        tmp624 = simd_or(tmp623, tmp472);
        tmp625 = simd_or(tmp624, tmp575);
        tmp626 = simd_and(basis_bits.bit_4, tmp41);
        tmp627 = simd_not(tmp626);
        tmp628 = simd_or(simd_and(basis_bits.bit_3, tmp627), simd_andc(tmp13, basis_bits.bit_3));
        tmp629 = simd_and(tmp436, tmp628);
        tmp630 = simd_or(tmp625, tmp629);
        cc_range_ffc0_fffe_3 = simd_or(tmp630, tmp452);
        carryQ.cq[159] = carryout2carry(pablo_blk_Advance(sequence_ef_bf, carryQ.get_carry_in(159), sequence_ef_bf_adv));
        tmp631 = simd_and(sequence_ef_bf_adv, cc_range_ffc0_fffe_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp631);
        tmp632 = simd_and(tmp1, tmp8);
        byte_f0 = simd_andc(tmp632, tmp35);
        carryQ.cq[160] = carryout2carry(pablo_blk_Advance(byte_f0, carryQ.get_carry_in(160), tmp633));
        sequence_f0_90 = simd_and(tmp633, byte_90);
        carryQ.cq[161] = carryout2carry(pablo_blk_Advance(byte_f0, carryQ.get_carry_in(161), byte_f0_adv));
        carryQ.cq[162] = carryout2carry(pablo_blk_Advance(sequence_f0_90, carryQ.get_carry_in(162), tmp634));
        sequence_f0_90_80 = simd_and(tmp634, byte_80);
        carryQ.cq[163] = carryout2carry(pablo_blk_Advance(sequence_f0_90, carryQ.get_carry_in(163), sequence_f0_90_adv));
        tmp635 = simd_and(byte_range_80_8f, tmp70);
        tmp636 = simd_or(tmp635, tmp575);
        tmp637 = simd_and(tmp422, tmp20);
        tmp638 = simd_or(tmp636, tmp637);
        tmp639 = simd_and(tmp422, tmp17);
        cc_range_1000c_1003e_4 = simd_or(tmp638, tmp639);
        carryQ.cq[164] = carryout2carry(pablo_blk_Advance(sequence_f0_90_80, carryQ.get_carry_in(164), sequence_f0_90_80_adv));
        tmp640 = simd_and(sequence_f0_90_80_adv, cc_range_1000c_1003e_4);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp640);
        sequence_f0_90_81 = simd_and(sequence_f0_90_adv, byte_81);
        tmp641 = simd_and(byte_range_80_8f, tmp82);
        tmp642 = simd_and(basis_bits.bit_3, tmp82);
        tmp643 = simd_or(basis_bits.bit_2, tmp642);
        tmp644 = simd_and(byte_range_80_bf, tmp643);
        cc_range_1004e_1005e_4 = simd_or(tmp641, tmp644);
        carryQ.cq[165] = carryout2carry(pablo_blk_Advance(sequence_f0_90_81, carryQ.get_carry_in(165), sequence_f0_90_81_adv));
        tmp645 = simd_and(sequence_f0_90_81_adv, cc_range_1004e_1005e_4);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp645);
        sequence_f0_90_83 = simd_and(sequence_f0_90_adv, byte_83);
        carryQ.cq[166] = carryout2carry(pablo_blk_Advance(sequence_f0_90_83, carryQ.get_carry_in(166), sequence_f0_90_83_adv));
        tmp646 = simd_and(sequence_f0_90_83_adv, byte_range_bb_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp646);
        sequence_f0_90_84 = simd_and(sequence_f0_90_adv, byte_84);
        tmp647 = simd_andc(byte_range_80_8f, basis_bits.bit_4);
        tmp648 = simd_and(tmp647, tmp53);
        tmp649 = simd_and(tmp422, tmp31);
        tmp650 = simd_andc(tmp649, tmp12);
        cc_range_10103_10134_4 = simd_or(tmp648, tmp650);
        carryQ.cq[167] = carryout2carry(pablo_blk_Advance(sequence_f0_90_84, carryQ.get_carry_in(167), sequence_f0_90_84_adv));
        tmp651 = simd_and(sequence_f0_90_84_adv, cc_range_10103_10134_4);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp651);
        sequence_f0_90_86 = simd_and(sequence_f0_90_adv, byte_86);
        tmp652 = simd_and(byte_range_80_8f, basis_bits.bit_4);
        tmp653 = simd_and(tmp652, tmp60);
        tmp654 = simd_and(byte_range_80_bf, tmp311);
        cc_range_1018b_1019c_4 = simd_or(tmp653, tmp654);
        carryQ.cq[168] = carryout2carry(pablo_blk_Advance(sequence_f0_90_86, carryQ.get_carry_in(168), sequence_f0_90_86_adv));
        tmp655 = simd_and(sequence_f0_90_86_adv, cc_range_1018b_1019c_4);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp655);
        sequence_f0_90_87 = simd_and(sequence_f0_90_adv, byte_87);
        cc_range_101c0_101fe_4 = simd_or(byte_range_80_8f, tmp452);
        carryQ.cq[169] = carryout2carry(pablo_blk_Advance(sequence_f0_90_87, carryQ.get_carry_in(169), sequence_f0_90_87_adv));
        tmp656 = simd_and(sequence_f0_90_87_adv, cc_range_101c0_101fe_4);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp656);
        byte_range_88_89 = simd_and(byte_range_80_8f, tmp11);
        sequence_f0_90_byte_range_88_89 = simd_and(sequence_f0_90_adv, byte_range_88_89);
        carryQ.cq[170] = carryout2carry(pablo_blk_Advance(sequence_f0_90_byte_range_88_89, carryQ.get_carry_in(170), tmp657));
        sequence_f0_90_byte_range_88_89_sfx = simd_and(tmp657, byte_range_80_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_90_byte_range_88_89_sfx);
        sequence_f0_90_8a = simd_and(sequence_f0_90_adv, byte_8a);
        carryQ.cq[171] = carryout2carry(pablo_blk_Advance(sequence_f0_90_8a, carryQ.get_carry_in(171), tmp658));
        sequence_f0_90_8a_byte_range_9d_9f = simd_and(tmp658, byte_range_9d_9f);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_90_8a_byte_range_9d_9f);
        sequence_f0_90_8b = simd_and(sequence_f0_90_adv, byte_8b);
        tmp659 = simd_and(basis_bits.bit_3, tmp35);
        tmp660 = simd_or(basis_bits.bit_2, tmp659);
        byte_range_91_bf = simd_and(byte_range_80_bf, tmp660);
        carryQ.cq[172] = carryout2carry(pablo_blk_Advance(sequence_f0_90_8b, carryQ.get_carry_in(172), tmp661));
        sequence_f0_90_8b_byte_range_91_bf = simd_and(tmp661, byte_range_91_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_90_8b_byte_range_91_bf);
        sequence_f0_90_8c = simd_and(sequence_f0_90_adv, byte_8c);
        carryQ.cq[173] = carryout2carry(pablo_blk_Advance(sequence_f0_90_8c, carryQ.get_carry_in(173), tmp662));
        sequence_f0_90_8c_9f = simd_and(tmp662, byte_9f);
        sequence_f0_90_8d = simd_and(sequence_f0_90_adv, byte_8d);
        tmp663 = simd_or(basis_bits.bit_2, tmp484);
        byte_range_8b_bf = simd_and(byte_range_80_bf, tmp663);
        carryQ.cq[174] = carryout2carry(pablo_blk_Advance(sequence_f0_90_8d, carryQ.get_carry_in(174), tmp664));
        sequence_f0_90_8d_byte_range_8b_bf = simd_and(tmp664, byte_range_8b_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_90_8d_byte_range_8b_bf);
        sequence_f0_90_8e = simd_and(sequence_f0_90_adv, byte_8e);
        carryQ.cq[175] = carryout2carry(pablo_blk_Advance(sequence_f0_90_8e, carryQ.get_carry_in(175), tmp665));
        sequence_f0_90_8e_9e = simd_and(tmp665, byte_9e);
        sequence_f0_90_8f = simd_and(sequence_f0_90_adv, byte_8f);
        byte_range_84_87 = simd_and(byte_range_80_8f, tmp31);
        carryQ.cq[176] = carryout2carry(pablo_blk_Advance(sequence_f0_90_8f, carryQ.get_carry_in(176), tmp666));
        sequence_f0_90_8f_byte_range_84_87 = simd_and(tmp666, byte_range_84_87);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_90_8f_byte_range_84_87);
        sequence_f0_90_92 = simd_and(sequence_f0_90_adv, byte_92);
        byte_range_9e_9f = simd_and(tmp440, tmp82);
        carryQ.cq[177] = carryout2carry(pablo_blk_Advance(sequence_f0_90_92, carryQ.get_carry_in(177), tmp667));
        sequence_f0_90_92_byte_range_9e_9f = simd_and(tmp667, byte_range_9e_9f);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_90_92_byte_range_9e_9f);
        sequence_f0_90_93 = simd_and(sequence_f0_90_adv, byte_93);
        carryQ.cq[178] = carryout2carry(pablo_blk_Advance(sequence_f0_90_93, carryQ.get_carry_in(178), tmp668));
        sequence_f0_90_93_byte_range_80_bf = simd_and(tmp668, byte_range_80_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_90_93_byte_range_80_bf);
        sequence_f0_90_a0 = simd_and(sequence_f0_90_adv, byte_a0);
        byte_range_86_87 = simd_and(byte_range_80_8f, tmp364);
        carryQ.cq[179] = carryout2carry(pablo_blk_Advance(sequence_f0_90_a0, carryQ.get_carry_in(179), tmp669));
        sequence_f0_90_a0_byte_range_86_87 = simd_and(tmp669, byte_range_86_87);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_90_a0_byte_range_86_87);
        sequence_f0_90_a1 = simd_and(sequence_f0_90_adv, byte_a1);
        byte_96 = simd_and(tmp440, tmp48);
        carryQ.cq[180] = carryout2carry(pablo_blk_Advance(sequence_f0_90_a1, carryQ.get_carry_in(180), tmp670));
        sequence_f0_90_a1_96 = simd_and(tmp670, byte_96);
        sequence_f0_90_a2 = simd_and(sequence_f0_90_adv, byte_a2);
        carryQ.cq[181] = carryout2carry(pablo_blk_Advance(sequence_f0_90_a2, carryQ.get_carry_in(181), tmp671));
        sequence_f0_90_a2_byte_range_80_bf = simd_and(tmp671, byte_range_80_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_90_a2_byte_range_80_bf);
        sequence_f0_90_a4 = simd_and(sequence_f0_90_adv, byte_a4);
        byte_range_9c_9e = simd_andc(tmp471, tmp12);
        carryQ.cq[182] = carryout2carry(pablo_blk_Advance(sequence_f0_90_a4, carryQ.get_carry_in(182), tmp672));
        sequence_f0_90_a4_byte_range_9c_9e = simd_and(tmp672, byte_range_9c_9e);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_90_a4_byte_range_9c_9e);
        sequence_f0_90_a5 = simd_and(sequence_f0_90_adv, byte_a5);
        carryQ.cq[183] = carryout2carry(pablo_blk_Advance(sequence_f0_90_a5, carryQ.get_carry_in(183), tmp673));
        sequence_f0_90_a5_byte_range_80_bf = simd_and(tmp673, byte_range_80_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_90_a5_byte_range_80_bf);
        sequence_f0_90_a6 = simd_and(sequence_f0_90_adv, byte_a6);
        byte_range_b8_bd = simd_andc(tmp474, tmp168);
        carryQ.cq[184] = carryout2carry(pablo_blk_Advance(sequence_f0_90_a6, carryQ.get_carry_in(184), tmp674));
        sequence_f0_90_a6_byte_range_b8_bd = simd_and(tmp674, byte_range_b8_bd);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_90_a6_byte_range_b8_bd);
        sequence_f0_90_a7 = simd_and(sequence_f0_90_adv, byte_a7);
        carryQ.cq[185] = carryout2carry(pablo_blk_Advance(sequence_f0_90_a7, carryQ.get_carry_in(185), tmp675));
        sequence_f0_90_a7_byte_range_80_bf = simd_and(tmp675, byte_range_80_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_90_a7_byte_range_80_bf);
        sequence_f0_90_a8 = simd_and(sequence_f0_90_adv, byte_a8);
        carryQ.cq[186] = carryout2carry(pablo_blk_Advance(sequence_f0_90_a8, carryQ.get_carry_in(186), tmp676));
        sequence_f0_90_a8_84 = simd_and(tmp676, byte_84);
        sequence_f0_90_a9 = simd_and(sequence_f0_90_adv, byte_a9);
        byte_range_88_8f = simd_and(byte_range_80_8f, basis_bits.bit_4);
        carryQ.cq[187] = carryout2carry(pablo_blk_Advance(sequence_f0_90_a9, carryQ.get_carry_in(187), tmp677));
        sequence_f0_90_a9_byte_range_88_8f = simd_and(tmp677, byte_range_88_8f);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_90_a9_byte_range_88_8f);
        sequence_f0_90_aa = simd_and(sequence_f0_90_adv, byte_aa);
        carryQ.cq[188] = carryout2carry(pablo_blk_Advance(sequence_f0_90_aa, carryQ.get_carry_in(188), tmp678));
        sequence_f0_90_aa_byte_range_80_bf = simd_and(tmp678, byte_range_80_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_90_aa_byte_range_80_bf);
        sequence_f0_90_ac = simd_and(sequence_f0_90_adv, byte_ac);
        byte_range_b6_b8 = simd_and(tmp422, tmp213);
        carryQ.cq[189] = carryout2carry(pablo_blk_Advance(sequence_f0_90_ac, carryQ.get_carry_in(189), tmp679));
        sequence_f0_90_ac_byte_range_b6_b8 = simd_and(tmp679, byte_range_b6_b8);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_90_ac_byte_range_b6_b8);
        sequence_f0_90_ad = simd_and(sequence_f0_90_adv, byte_ad);
        byte_range_96_97 = simd_and(tmp440, tmp364);
        carryQ.cq[190] = carryout2carry(pablo_blk_Advance(sequence_f0_90_ad, carryQ.get_carry_in(190), tmp680));
        sequence_f0_90_ad_byte_range_96_97 = simd_and(tmp680, byte_range_96_97);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_90_ad_byte_range_96_97);
        sequence_f0_90_ae = simd_and(sequence_f0_90_adv, byte_ae);
        carryQ.cq[191] = carryout2carry(pablo_blk_Advance(sequence_f0_90_ae, carryQ.get_carry_in(191), tmp681));
        sequence_f0_90_ae_byte_range_80_bf = simd_and(tmp681, byte_range_80_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_90_ae_byte_range_80_bf);
        sequence_f0_90_b1 = simd_and(sequence_f0_90_adv, byte_b1);
        tmp682 = simd_or(basis_bits.bit_3, tmp626);
        tmp683 = simd_or(basis_bits.bit_2, tmp682);
        byte_range_89_bf = simd_and(byte_range_80_bf, tmp683);
        carryQ.cq[192] = carryout2carry(pablo_blk_Advance(sequence_f0_90_b1, carryQ.get_carry_in(192), tmp684));
        sequence_f0_90_b1_byte_range_89_bf = simd_and(tmp684, byte_range_89_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_90_b1_byte_range_89_bf);
        sequence_f0_90_b2 = simd_and(sequence_f0_90_adv, byte_b2);
        carryQ.cq[193] = carryout2carry(pablo_blk_Advance(sequence_f0_90_b2, carryQ.get_carry_in(193), tmp685));
        sequence_f0_90_b2_byte_range_80_bf = simd_and(tmp685, byte_range_80_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_90_b2_byte_range_80_bf);
        sequence_f0_90_b9 = simd_and(sequence_f0_90_adv, byte_b9);
        byte_range_80_9f = simd_andc(byte_range_80_bf, basis_bits.bit_2);
        carryQ.cq[194] = carryout2carry(pablo_blk_Advance(sequence_f0_90_b9, carryQ.get_carry_in(194), tmp686));
        sequence_f0_90_b9_byte_range_80_9f = simd_and(tmp686, byte_range_80_9f);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_90_b9_byte_range_80_9f);
        sequence_f0_90_ba = simd_and(sequence_f0_90_adv, byte_ba);
        carryQ.cq[195] = carryout2carry(pablo_blk_Advance(sequence_f0_90_ba, carryQ.get_carry_in(195), tmp687));
        sequence_f0_90_ba_byte_range_80_bf = simd_and(tmp687, byte_range_80_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_90_ba_byte_range_80_bf);
        sequence_f0_91 = simd_and(byte_f0_adv, byte_91);
        carryQ.cq[196] = carryout2carry(pablo_blk_Advance(sequence_f0_91, carryQ.get_carry_in(196), tmp688));
        sequence_f0_91_81 = simd_and(tmp688, byte_81);
        carryQ.cq[197] = carryout2carry(pablo_blk_Advance(sequence_f0_91, carryQ.get_carry_in(197), sequence_f0_91_adv));
        tmp689 = simd_not(tmp206);
        tmp690 = simd_or(simd_and(basis_bits.bit_3, tmp689), simd_andc(tmp82, basis_bits.bit_3));
        tmp691 = simd_and(byte_range_80_9f, tmp690);
        cc_range_1104e_11070_4 = simd_or(tmp691, tmp422);
        carryQ.cq[198] = carryout2carry(pablo_blk_Advance(sequence_f0_91_81, carryQ.get_carry_in(198), sequence_f0_91_81_adv));
        tmp692 = simd_and(sequence_f0_91_81_adv, cc_range_1104e_11070_4);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp692);
        sequence_f0_91_83 = simd_and(sequence_f0_91_adv, byte_83);
        tmp693 = simd_and(byte_range_80_8f, tmp76);
        tmp694 = simd_and(tmp499, tmp41);
        tmp695 = simd_or(tmp693, tmp694);
        cc_range_110c2_110fa_4 = simd_or(tmp695, tmp542);
        carryQ.cq[199] = carryout2carry(pablo_blk_Advance(sequence_f0_91_83, carryQ.get_carry_in(199), sequence_f0_91_83_adv));
        tmp696 = simd_and(sequence_f0_91_83_adv, cc_range_110c2_110fa_4);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp696);
        sequence_f0_91_84 = simd_and(sequence_f0_91_adv, byte_84);
        carryQ.cq[200] = carryout2carry(pablo_blk_Advance(sequence_f0_91_84, carryQ.get_carry_in(200), sequence_f0_91_84_adv));
        tmp697 = simd_and(sequence_f0_91_84_adv, byte_b5);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp697);
        byte_85 = simd_and(byte_range_80_8f, tmp39);
        sequence_f0_91_85 = simd_and(sequence_f0_91_adv, byte_85);
        tmp698 = simd_or(basis_bits.bit_2, tmp100);
        byte_range_84_bf = simd_and(byte_range_80_bf, tmp698);
        carryQ.cq[201] = carryout2carry(pablo_blk_Advance(sequence_f0_91_85, carryQ.get_carry_in(201), sequence_f0_91_85_adv));
        tmp699 = simd_and(sequence_f0_91_85_adv, byte_range_84_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp699);
        sequence_f0_91_87 = simd_and(sequence_f0_91_adv, byte_87);
        tmp700 = simd_and(byte_range_88_8f, tmp41);
        cc_range_111c9_111da_4 = simd_or(tmp700, byte_range_9a_bf);
        carryQ.cq[202] = carryout2carry(pablo_blk_Advance(sequence_f0_91_87, carryQ.get_carry_in(202), sequence_f0_91_87_adv));
        tmp701 = simd_and(sequence_f0_91_87_adv, cc_range_111c9_111da_4);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp701);
        tmp702 = simd_not(tmp488);
        tmp703 = simd_or(simd_and(basis_bits.bit_3, tmp702), simd_andc(basis_bits.bit_4, basis_bits.bit_3));
        byte_range_88_99 = simd_and(byte_range_80_9f, tmp703);
        sequence_f0_91_byte_range_88_99 = simd_and(sequence_f0_91_adv, byte_range_88_99);
        carryQ.cq[203] = carryout2carry(pablo_blk_Advance(sequence_f0_91_byte_range_88_99, carryQ.get_carry_in(203), tmp704));
        sequence_f0_91_byte_range_88_99_sfx = simd_and(tmp704, byte_range_80_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_91_byte_range_88_99_sfx);
        sequence_f0_91_9a = simd_and(sequence_f0_91_adv, byte_9a);
        carryQ.cq[204] = carryout2carry(pablo_blk_Advance(sequence_f0_91_9a, carryQ.get_carry_in(204), tmp705));
        sequence_f0_91_9a_byte_range_b8_bf = simd_and(tmp705, byte_range_b8_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_91_9a_byte_range_b8_bf);
        sequence_f0_91_9b = simd_and(sequence_f0_91_adv, byte_9b);
        tmp706 = simd_or(basis_bits.bit_3, tmp488);
        tmp707 = simd_or(basis_bits.bit_2, tmp706);
        byte_range_8a_bf = simd_and(byte_range_80_bf, tmp707);
        carryQ.cq[205] = carryout2carry(pablo_blk_Advance(sequence_f0_91_9b, carryQ.get_carry_in(205), tmp708));
        sequence_f0_91_9b_byte_range_8a_bf = simd_and(tmp708, byte_range_8a_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_91_9b_byte_range_8a_bf);
        sequence_f0_91_9c = simd_and(sequence_f0_91_adv, byte_9c);
        carryQ.cq[206] = carryout2carry(pablo_blk_Advance(sequence_f0_91_9c, carryQ.get_carry_in(206), tmp709));
        sequence_f0_91_9c_byte_range_80_bf = simd_and(tmp709, byte_range_80_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_91_9c_byte_range_80_bf);
        sequence_f0_92 = simd_and(byte_f0_adv, byte_92);
        carryQ.cq[207] = carryout2carry(pablo_blk_Advance(sequence_f0_92, carryQ.get_carry_in(207), tmp710));
        sequence_f0_92_8d = simd_and(tmp710, byte_8d);
        carryQ.cq[208] = carryout2carry(pablo_blk_Advance(sequence_f0_92, carryQ.get_carry_in(208), sequence_f0_92_adv));
        byte_range_af_bf = simd_and(tmp436, tmp577);
        carryQ.cq[209] = carryout2carry(pablo_blk_Advance(sequence_f0_92_8d, carryQ.get_carry_in(209), sequence_f0_92_8d_adv));
        tmp711 = simd_and(sequence_f0_92_8d_adv, byte_range_af_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp711);
        byte_range_8e_8f = simd_and(byte_range_80_8f, tmp82);
        sequence_f0_92_byte_range_8e_8f = simd_and(sequence_f0_92_adv, byte_range_8e_8f);
        carryQ.cq[210] = carryout2carry(pablo_blk_Advance(sequence_f0_92_byte_range_8e_8f, carryQ.get_carry_in(210), tmp712));
        sequence_f0_92_byte_range_8e_8f_sfx = simd_and(tmp712, byte_range_80_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_92_byte_range_8e_8f_sfx);
        sequence_f0_92_91 = simd_and(sequence_f0_92_adv, byte_91);
        byte_range_a3_af = simd_and(tmp419, tmp279);
        carryQ.cq[211] = carryout2carry(pablo_blk_Advance(sequence_f0_92_91, carryQ.get_carry_in(211), tmp713));
        sequence_f0_92_91_byte_range_a3_af = simd_and(tmp713, byte_range_a3_af);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_92_91_byte_range_a3_af);
        sequence_f0_92_92 = simd_and(sequence_f0_92_adv, byte_92);
        carryQ.cq[212] = carryout2carry(pablo_blk_Advance(sequence_f0_92_92, carryQ.get_carry_in(212), tmp714));
        sequence_f0_92_92_byte_range_80_bf = simd_and(tmp714, byte_range_80_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_92_92_byte_range_80_bf);
        sequence_f0_93 = simd_and(byte_f0_adv, byte_93);
        carryQ.cq[213] = carryout2carry(pablo_blk_Advance(sequence_f0_93, carryQ.get_carry_in(213), tmp715));
        sequence_f0_93_90 = simd_and(tmp715, byte_90);
        carryQ.cq[214] = carryout2carry(pablo_blk_Advance(sequence_f0_93, carryQ.get_carry_in(214), sequence_f0_93_adv));
        carryQ.cq[215] = carryout2carry(pablo_blk_Advance(sequence_f0_93_90, carryQ.get_carry_in(215), sequence_f0_93_90_adv));
        tmp716 = simd_and(sequence_f0_93_90_adv, byte_range_af_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp716);
        sequence_f0_93_byte_range_91_bf = simd_and(sequence_f0_93_adv, byte_range_91_bf);
        carryQ.cq[216] = carryout2carry(pablo_blk_Advance(sequence_f0_93_byte_range_91_bf, carryQ.get_carry_in(216), tmp717));
        sequence_f0_93_byte_range_91_bf_sfx = simd_and(tmp717, byte_range_80_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_93_byte_range_91_bf_sfx);
        byte_range_94_95 = simd_and(tmp440, tmp140);
        byte_f0_byte_range_94_95 = simd_and(byte_f0_adv, byte_range_94_95);
        carryQ.cq[217] = carryout2carry(pablo_blk_Advance(byte_f0_byte_range_94_95, carryQ.get_carry_in(217), tmp718));
        byte_f0_byte_range_94_95_sfx = simd_and(tmp718, byte_range_80_bf);
        carryQ.cq[218] = carryout2carry(pablo_blk_Advance(byte_f0_byte_range_94_95_sfx, carryQ.get_carry_in(218), tmp719));
        byte_f0_byte_range_94_95_sfx_sfx = simd_and(tmp719, byte_range_80_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, byte_f0_byte_range_94_95_sfx_sfx);
        sequence_f0_96 = simd_and(byte_f0_adv, byte_96);
        carryQ.cq[219] = carryout2carry(pablo_blk_Advance(sequence_f0_96, carryQ.get_carry_in(219), sequence_f0_96_adv));
        sequence_f0_96_80 = simd_and(sequence_f0_96_adv, byte_80);
        carryQ.cq[220] = carryout2carry(pablo_blk_Advance(sequence_f0_96_80, carryQ.get_carry_in(220), tmp720));
        sequence_f0_96_80_byte_range_80_bf = simd_and(tmp720, byte_range_80_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_96_80_byte_range_80_bf);
        byte_97 = simd_and(tmp440, tmp58);
        sequence_f0_97 = simd_and(byte_f0_adv, byte_97);
        carryQ.cq[221] = carryout2carry(pablo_blk_Advance(sequence_f0_97, carryQ.get_carry_in(221), sequence_f0_97_adv));
        sequence_f0_97_80 = simd_and(sequence_f0_97_adv, byte_80);
        carryQ.cq[222] = carryout2carry(pablo_blk_Advance(sequence_f0_97_80, carryQ.get_carry_in(222), tmp721));
        sequence_f0_97_80_byte_range_80_bf = simd_and(tmp721, byte_range_80_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_97_80_byte_range_80_bf);
        sequence_f0_9b = simd_and(byte_f0_adv, byte_9b);
        carryQ.cq[223] = carryout2carry(pablo_blk_Advance(sequence_f0_9b, carryQ.get_carry_in(223), sequence_f0_9b_adv));
        sequence_f0_9b_80 = simd_and(sequence_f0_9b_adv, byte_80);
        tmp722 = simd_or(basis_bits.bit_3, tmp206);
        tmp723 = simd_or(basis_bits.bit_2, tmp722);
        byte_range_82_bf = simd_and(byte_range_80_bf, tmp723);
        carryQ.cq[224] = carryout2carry(pablo_blk_Advance(sequence_f0_9b_80, carryQ.get_carry_in(224), tmp724));
        sequence_f0_9b_80_byte_range_82_bf = simd_and(tmp724, byte_range_82_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_9b_80_byte_range_82_bf);
        sequence_f0_9c = simd_and(byte_f0_adv, byte_9c);
        carryQ.cq[225] = carryout2carry(pablo_blk_Advance(sequence_f0_9c, carryQ.get_carry_in(225), sequence_f0_9c_adv));
        sequence_f0_9c_80 = simd_and(sequence_f0_9c_adv, byte_80);
        carryQ.cq[226] = carryout2carry(pablo_blk_Advance(sequence_f0_9c_80, carryQ.get_carry_in(226), tmp725));
        sequence_f0_9c_80_byte_range_80_bf = simd_and(tmp725, byte_range_80_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_9c_80_byte_range_80_bf);
        sequence_f0_9d = simd_and(byte_f0_adv, byte_9d);
        carryQ.cq[227] = carryout2carry(pablo_blk_Advance(sequence_f0_9d, carryQ.get_carry_in(227), sequence_f0_9d_adv));
        sequence_f0_9d_83 = simd_and(sequence_f0_9d_adv, byte_83);
        carryQ.cq[228] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_83, carryQ.get_carry_in(228), tmp726));
        sequence_f0_9d_83_byte_range_b6_bf = simd_and(tmp726, byte_range_b6_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_9d_83_byte_range_b6_bf);
        sequence_f0_9e = simd_and(byte_f0_adv, byte_9e);
        carryQ.cq[229] = carryout2carry(pablo_blk_Advance(sequence_f0_9e, carryQ.get_carry_in(229), sequence_f0_9e_adv));
        sequence_f0_9e_80 = simd_and(sequence_f0_9e_adv, byte_80);
        carryQ.cq[230] = carryout2carry(pablo_blk_Advance(sequence_f0_9e_80, carryQ.get_carry_in(230), tmp727));
        sequence_f0_9e_80_byte_range_80_bf = simd_and(tmp727, byte_range_80_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_9e_80_byte_range_80_bf);
        sequence_f0_9f = simd_and(byte_f0_adv, byte_9f);
        carryQ.cq[231] = carryout2carry(pablo_blk_Advance(sequence_f0_9f, carryQ.get_carry_in(231), sequence_f0_9f_adv));
        sequence_f0_9f_80 = simd_and(sequence_f0_9f_adv, byte_80);
        carryQ.cq[232] = carryout2carry(pablo_blk_Advance(sequence_f0_9f_80, carryQ.get_carry_in(232), tmp728));
        sequence_f0_9f_80_byte_range_ac_af = simd_and(tmp728, byte_range_ac_af);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_9f_80_byte_range_ac_af);
        sequence_f0_aa = simd_and(byte_f0_adv, byte_aa);
        carryQ.cq[233] = carryout2carry(pablo_blk_Advance(sequence_f0_aa, carryQ.get_carry_in(233), sequence_f0_aa_adv));
        sequence_f0_aa_9b = simd_and(sequence_f0_aa_adv, byte_9b);
        tmp729 = simd_and(basis_bits.bit_3, tmp131);
        tmp730 = simd_or(basis_bits.bit_2, tmp729);
        byte_range_97_bf = simd_and(byte_range_80_bf, tmp730);
        carryQ.cq[234] = carryout2carry(pablo_blk_Advance(sequence_f0_aa_9b, carryQ.get_carry_in(234), tmp731));
        sequence_f0_aa_9b_byte_range_97_bf = simd_and(tmp731, byte_range_97_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_aa_9b_byte_range_97_bf);
        sequence_f0_ab = simd_and(byte_f0_adv, byte_ab);
        carryQ.cq[235] = carryout2carry(pablo_blk_Advance(sequence_f0_ab, carryQ.get_carry_in(235), sequence_f0_ab_adv));
        sequence_f0_ab_9c = simd_and(sequence_f0_ab_adv, byte_9c);
        carryQ.cq[236] = carryout2carry(pablo_blk_Advance(sequence_f0_ab_9c, carryQ.get_carry_in(236), tmp732));
        sequence_f0_ab_9c_byte_range_b5_bf = simd_and(tmp732, byte_range_b5_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_ab_9c_byte_range_b5_bf);
        sequence_f0_ac = simd_and(byte_f0_adv, byte_ac);
        carryQ.cq[237] = carryout2carry(pablo_blk_Advance(sequence_f0_ac, carryQ.get_carry_in(237), sequence_f0_ac_adv));
        sequence_f0_ac_80 = simd_and(sequence_f0_ac_adv, byte_80);
        carryQ.cq[238] = carryout2carry(pablo_blk_Advance(sequence_f0_ac_80, carryQ.get_carry_in(238), tmp733));
        sequence_f0_ac_80_byte_range_80_bf = simd_and(tmp733, byte_range_80_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_ac_80_byte_range_80_bf);
        sequence_f0_af = simd_and(byte_f0_adv, byte_af);
        carryQ.cq[239] = carryout2carry(pablo_blk_Advance(sequence_f0_af, carryQ.get_carry_in(239), sequence_f0_af_adv));
        sequence_f0_af_80 = simd_and(sequence_f0_af_adv, byte_80);
        carryQ.cq[240] = carryout2carry(pablo_blk_Advance(sequence_f0_af_80, carryQ.get_carry_in(240), tmp734));
        sequence_f0_af_80_byte_range_80_bf = simd_and(tmp734, byte_range_80_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_af_80_byte_range_80_bf);
        sequence_f0_b0 = simd_and(byte_f0_adv, byte_b0);
        carryQ.cq[241] = carryout2carry(pablo_blk_Advance(sequence_f0_b0, carryQ.get_carry_in(241), sequence_f0_b0_adv));
        sequence_f0_b0_80 = simd_and(sequence_f0_b0_adv, byte_80);
        carryQ.cq[242] = carryout2carry(pablo_blk_Advance(sequence_f0_b0_80, carryQ.get_carry_in(242), tmp735));
        sequence_f0_b0_80_byte_range_80_bf = simd_and(tmp735, byte_range_80_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_b0_80_byte_range_80_bf);
        tmp736 = simd_andc(tmp632, tmp19);
        byte_range_f1_f2 = simd_and(tmp736, tmp109);
        carryQ.cq[243] = carryout2carry(pablo_blk_Advance(byte_range_f1_f2, carryQ.get_carry_in(243), tmp737));
        byte_range_f1_f2_sfx = simd_and(tmp737, byte_range_80_bf);
        carryQ.cq[244] = carryout2carry(pablo_blk_Advance(byte_range_f1_f2_sfx, carryQ.get_carry_in(244), tmp738));
        byte_range_f1_f2_sfx_sfx = simd_and(tmp738, byte_range_80_bf);
        carryQ.cq[245] = carryout2carry(pablo_blk_Advance(byte_range_f1_f2_sfx_sfx, carryQ.get_carry_in(245), tmp739));
        byte_range_f1_f2_sfx_sfx_sfx = simd_and(tmp739, byte_range_80_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, byte_range_f1_f2_sfx_sfx_sfx);
        byte_f3 = simd_and(tmp632, tmp99);
        carryQ.cq[246] = carryout2carry(pablo_blk_Advance(byte_f3, carryQ.get_carry_in(246), byte_f3_adv));
        sequence_f3_80 = simd_and(byte_f3_adv, byte_80);
        carryQ.cq[247] = carryout2carry(pablo_blk_Advance(sequence_f3_80, carryQ.get_carry_in(247), sequence_f3_80_adv));
        sequence_f3_80_80 = simd_and(sequence_f3_80_adv, byte_80);
        carryQ.cq[248] = carryout2carry(pablo_blk_Advance(sequence_f3_80_80, carryQ.get_carry_in(248), tmp740));
        sequence_f3_80_80_80 = simd_and(tmp740, byte_80);
        carryQ.CarryQ_Adjust(249);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Cn & struct_Cn, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, byte_cd, tmp7, tmp8, tmp9, tmp10;
		BitBlock tmp11, tmp12, tmp13, tmp14, cc_range_378_37f_2, byte_cd_adv, tmp15;
		BitBlock tmp16, tmp17, byte_ce, tmp18, tmp19, tmp20, tmp21, tmp22, tmp23;
		BitBlock tmp24, tmp25, tmp26, tmp27, cc_range_380_3a2_2, byte_ce_adv, tmp28;
		BitBlock tmp29, tmp30, tmp31, tmp32, tmp33, byte_d4, tmp34, tmp35, tmp36;
		BitBlock tmp37, byte_range_a8_b0, byte_d4_adv, tmp38, tmp39, byte_d5, tmp40;
		BitBlock tmp41, tmp42, tmp43, tmp44, tmp45, tmp46, cc_range_557_560_2;
		BitBlock byte_d5_adv, tmp47, tmp48, byte_d6, tmp49, tmp50, tmp51, tmp52, tmp53;
		BitBlock tmp54, tmp55, tmp56, cc_range_588_590_2, byte_d6_adv, tmp57, tmp58;
		BitBlock byte_d7, tmp59, tmp60, tmp61, tmp62, tmp63, tmp64, tmp65;
		BitBlock cc_range_5c8_5f5_2, byte_d7_adv, tmp66, byte_d8, tmp67, tmp68;
		BitBlock cc_range_605_61d_2, byte_d8_adv, tmp69, tmp70, byte_dc, byte_8e;
		BitBlock byte_dc_adv, tmp71, byte_dd, tmp72, tmp73, byte_range_8b_8c;
		BitBlock byte_dd_adv, tmp74, byte_de, tmp75, tmp76, byte_range_b2_bf;
		BitBlock byte_de_adv, tmp77, byte_df, tmp78, byte_range_bb_bf, byte_df_adv;
		BitBlock tmp79, tmp80, byte_e0, byte_a0, tmp81, sequence_e0_a0, byte_e0_adv;
		BitBlock tmp82, tmp83, tmp84, cc_range_82e_83f_3, sequence_e0_a0_adv, tmp85;
		BitBlock tmp86, byte_a1, sequence_e0_a1, tmp87, tmp88, tmp89, tmp90, tmp91;
		BitBlock cc_range_85c_85f_3, sequence_e0_a1_adv, tmp92, byte_a2;
		BitBlock sequence_e0_a2, tmp93, tmp94, tmp95, tmp96, tmp97, cc_range_880_8ad_3;
		BitBlock sequence_e0_a2_adv, tmp98, tmp99, byte_a3, sequence_e0_a3, tmp100;
		BitBlock tmp101, tmp102, cc_range_8c0_8ff_3, sequence_e0_a3_adv, tmp103;
		BitBlock byte_a5, sequence_e0_a5, byte_b8, sequence_e0_a5_adv, tmp104, byte_a6;
		BitBlock sequence_e0_a6, tmp105, tmp106, tmp107, tmp108, tmp109, tmp110;
		BitBlock tmp111, tmp112, tmp113, tmp114, tmp115, tmp116, tmp117, tmp118;
		BitBlock tmp119, tmp120, tmp121, tmp122, tmp123, tmp124, tmp125, tmp126;
		BitBlock cc_range_980_9ba_3, sequence_e0_a6_adv, tmp127, byte_a7;
		BitBlock sequence_e0_a7, tmp128, tmp129, tmp130, tmp131, tmp132, tmp133;
		BitBlock tmp134, tmp135, tmp136, tmp137, tmp138, tmp139, tmp140, tmp141;
		BitBlock tmp142, tmp143, cc_range_9c5_9fc_3, sequence_e0_a7_adv, tmp144;
		BitBlock byte_a8, sequence_e0_a8, tmp145, tmp146, tmp147, tmp148, tmp149;
		BitBlock tmp150, tmp151, tmp152, tmp153, tmp154, cc_range_a00_a3d_3;
		BitBlock sequence_e0_a8_adv, tmp155, byte_a9, sequence_e0_a9, tmp156, tmp157;
		BitBlock tmp158, tmp159, tmp160, tmp161, tmp162, tmp163, tmp164, tmp165;
		BitBlock tmp166, tmp167, tmp168, tmp169, tmp170, tmp171, tmp172, tmp173;
		BitBlock tmp174, tmp175, cc_range_a43_a76_3, sequence_e0_a9_adv, tmp176;
		BitBlock tmp177, byte_aa, sequence_e0_aa, tmp178, tmp179, tmp180, tmp181;
		BitBlock tmp182, tmp183, tmp184, cc_range_a80_aba_3, sequence_e0_aa_adv;
		BitBlock tmp185, byte_ab, sequence_e0_ab, tmp186, tmp187, tmp188, tmp189;
		BitBlock tmp190, tmp191, tmp192, cc_range_ac6_af2_3, sequence_e0_ab_adv;
		BitBlock tmp193, byte_ac, sequence_e0_ac, tmp194, tmp195, tmp196;
		BitBlock cc_range_b00_b3a_3, sequence_e0_ac_adv, tmp197, byte_ad;
		BitBlock sequence_e0_ad, tmp198, tmp199, tmp200, tmp201, tmp202, tmp203;
		BitBlock tmp204, cc_range_b45_b78_3, sequence_e0_ad_adv, tmp205, byte_ae;
		BitBlock sequence_e0_ae, tmp206, tmp207, tmp208, tmp209, tmp210, tmp211;
		BitBlock tmp212, tmp213, tmp214, tmp215, tmp216, tmp217, tmp218, tmp219;
		BitBlock tmp220, tmp221, tmp222, tmp223, tmp224, tmp225, tmp226, tmp227;
		BitBlock tmp228, cc_range_b80_bba_3, sequence_e0_ae_adv, tmp229, byte_af;
		BitBlock sequence_e0_af, tmp230, tmp231, tmp232, tmp233, tmp234, tmp235;
		BitBlock tmp236, tmp237, tmp238, tmp239, tmp240, tmp241, tmp242;
		BitBlock cc_range_bc3_bfb_3, sequence_e0_af_adv, tmp243, byte_b0;
		BitBlock sequence_e0_b0, tmp244, tmp245, tmp246, tmp247, tmp248, tmp249;
		BitBlock tmp250, cc_range_c00_c3a_3, sequence_e0_b0_adv, tmp251, byte_b1;
		BitBlock sequence_e0_b1, tmp252, tmp253, tmp254, tmp255, tmp256, tmp257;
		BitBlock tmp258, tmp259, tmp260, tmp261, tmp262, tmp263, cc_range_c45_c70_3;
		BitBlock sequence_e0_b1_adv, tmp264, byte_b2, sequence_e0_b2, tmp265, tmp266;
		BitBlock tmp267, tmp268, tmp269, cc_range_c80_cba_3, sequence_e0_b2_adv;
		BitBlock tmp270, byte_b3, sequence_e0_b3, tmp271, tmp272, tmp273, tmp274;
		BitBlock tmp275, tmp276, tmp277, tmp278, tmp279, tmp280, cc_range_cc5_cf3_3;
		BitBlock sequence_e0_b3_adv, tmp281, byte_b4, sequence_e0_b4, tmp282;
		BitBlock cc_range_d00_d3b_3, sequence_e0_b4_adv, tmp283, byte_b5;
		BitBlock sequence_e0_b5, tmp284, tmp285, tmp286, tmp287, cc_range_d45_d76_3;
		BitBlock sequence_e0_b5_adv, tmp288, byte_b6, sequence_e0_b6, tmp289, tmp290;
		BitBlock tmp291, tmp292, tmp293, tmp294, tmp295, tmp296, cc_range_d80_dbe_3;
		BitBlock sequence_e0_b6_adv, tmp297, byte_b7, sequence_e0_b7, tmp298, tmp299;
		BitBlock tmp300, tmp301, tmp302, tmp303, tmp304, tmp305, cc_range_dc7_df5_3;
		BitBlock sequence_e0_b7_adv, tmp306, sequence_e0_b8, tmp307, tmp308;
		BitBlock cc_range_e00_e3b_3, sequence_e0_b8_adv, tmp309, byte_b9;
		BitBlock sequence_e0_b9, tmp310, tmp311, byte_range_9c_bf, sequence_e0_b9_adv;
		BitBlock tmp312, byte_ba, sequence_e0_ba, tmp313, tmp314, tmp315, tmp316;
		BitBlock tmp317, tmp318, tmp319, tmp320, tmp321, tmp322, tmp323, tmp324;
		BitBlock tmp325, tmp326, tmp327, tmp328, tmp329, tmp330, tmp331, tmp332;
		BitBlock tmp333, cc_range_e80_ebe_3, sequence_e0_ba_adv, tmp334, byte_bb;
		BitBlock sequence_e0_bb, tmp335, tmp336, tmp337, tmp338, tmp339;
		BitBlock cc_range_ec5_ee0_3, sequence_e0_bb_adv, tmp340, byte_bd;
		BitBlock sequence_e0_bd, tmp341, tmp342, cc_range_f48_f6d_3;
		BitBlock sequence_e0_bd_adv, tmp343, byte_be, sequence_e0_be;
		BitBlock cc_range_f98_fbd_3, sequence_e0_be_adv, tmp344, byte_bf;
		BitBlock sequence_e0_bf, tmp345, tmp346, tmp347, tmp348, tmp349;
		BitBlock cc_range_fcd_fdb_3, sequence_e0_bf_adv, tmp350, byte_e1, byte_83;
		BitBlock tmp351, sequence_e1_83, byte_e1_adv, tmp352, tmp353, tmp354;
		BitBlock cc_range_10c6_10ce_3, sequence_e1_83_adv, tmp355, byte_89;
		BitBlock sequence_e1_89, tmp356, tmp357, tmp358, tmp359, tmp360, tmp361;
		BitBlock cc_range_1249_125e_3, sequence_e1_89_adv, tmp362, byte_8a;
		BitBlock sequence_e1_8a, tmp363, tmp364, tmp365, tmp366, cc_range_1289_12bf_3;
		BitBlock sequence_e1_8a_adv, tmp367, byte_8b, sequence_e1_8b, tmp368, tmp369;
		BitBlock cc_range_12c1_12d7_3, sequence_e1_8b_adv, tmp370, byte_8c;
		BitBlock sequence_e1_8c, cc_range_1311_1316_3, sequence_e1_8c_adv, tmp371;
		BitBlock byte_8d, sequence_e1_8d, tmp372, tmp373, cc_range_135b_137d_3;
		BitBlock sequence_e1_8d_adv, tmp374, sequence_e1_8e, byte_range_9a_9f;
		BitBlock sequence_e1_8e_adv, tmp375, byte_8f, sequence_e1_8f, byte_range_b5_bf;
		BitBlock sequence_e1_8f_adv, tmp376, byte_9a, sequence_e1_9a, tmp377;
		BitBlock byte_range_9d_9f, sequence_e1_9a_adv, tmp378, byte_9b, sequence_e1_9b;
		BitBlock byte_range_b1_bf, sequence_e1_9b_adv, tmp379, byte_9c, sequence_e1_9c;
		BitBlock tmp380, tmp381, tmp382, cc_range_170d_1737_3, sequence_e1_9c_adv;
		BitBlock tmp383, byte_9d, sequence_e1_9d, tmp384, tmp385, tmp386, tmp387;
		BitBlock cc_range_1754_1774_3, sequence_e1_9d_adv, tmp388, byte_9f;
		BitBlock sequence_e1_9f, tmp389, tmp390, tmp391, cc_range_17de_17fa_3;
		BitBlock sequence_e1_9f_adv, tmp392, sequence_e1_a0, cc_range_180f_181a_3;
		BitBlock sequence_e1_a0_adv, tmp393, sequence_e1_a1, byte_range_b8_bf;
		BitBlock sequence_e1_a1_adv, tmp394, sequence_e1_a2, byte_range_ab_af;
		BitBlock sequence_e1_a2_adv, tmp395, sequence_e1_a3, byte_range_b6_bf;
		BitBlock sequence_e1_a3_adv, tmp396, byte_a4, sequence_e1_a4, tmp397, tmp398;
		BitBlock cc_range_191d_193c_3, sequence_e1_a4_adv, tmp399, sequence_e1_a5;
		BitBlock tmp400, tmp401, tmp402, cc_range_1941_1975_3, sequence_e1_a5_adv;
		BitBlock tmp403, sequence_e1_a6, byte_range_ac_af, sequence_e1_a6_adv, tmp404;
		BitBlock sequence_e1_a7, tmp405, tmp406, cc_range_19ca_19db_3;
		BitBlock sequence_e1_a7_adv, tmp407, sequence_e1_a8, byte_range_9c_9d;
		BitBlock sequence_e1_a8_adv, tmp408, sequence_e1_a9, tmp409;
		BitBlock cc_range_1a5f_1a7d_3, sequence_e1_a9_adv, tmp410, sequence_e1_aa;
		BitBlock tmp411, tmp412, tmp413, tmp414, tmp415, tmp416, cc_range_1a8a_1aae_3;
		BitBlock sequence_e1_aa_adv, tmp417, sequence_e1_ab, byte_range_80_bf;
		BitBlock sequence_e1_ab_adv, tmp418, tmp419, sequence_e1_ad, tmp420, tmp421;
		BitBlock tmp422, tmp423, tmp424, cc_range_1b4c_1b7d_3, sequence_e1_ad_adv;
		BitBlock tmp425, sequence_e1_af, tmp426, tmp427, byte_range_b4_bb;
		BitBlock sequence_e1_af_adv, tmp428, sequence_e1_b0, tmp429, byte_range_b8_ba;
		BitBlock sequence_e1_b0_adv, tmp430, sequence_e1_b1, tmp431, byte_range_8a_8c;
		BitBlock sequence_e1_b1_adv, tmp432, sequence_e1_b2, sequence_e1_b2_adv;
		BitBlock tmp433, sequence_e1_b3, tmp434, cc_range_1cc8_1cf7_3;
		BitBlock sequence_e1_b3_adv, tmp435, sequence_e1_b7, tmp436, tmp437, tmp438;
		BitBlock byte_range_a7_bb, sequence_e1_b7_adv, tmp439, byte_bc, sequence_e1_bc;
		BitBlock tmp440, tmp441, cc_range_1f16_1f1e_3, sequence_e1_bc_adv, tmp442;
		BitBlock sequence_e1_bd, tmp443, tmp444, tmp445, tmp446, tmp447, tmp448;
		BitBlock tmp449, tmp450, tmp451, tmp452, cc_range_1f46_1f7e_3;
		BitBlock sequence_e1_bd_adv, tmp453, sequence_e1_be, sequence_e1_be_adv;
		BitBlock tmp454, sequence_e1_bf, tmp455, tmp456, tmp457, tmp458, tmp459;
		BitBlock tmp460, tmp461, tmp462, tmp463, cc_range_1fc5_1fff_3;
		BitBlock sequence_e1_bf_adv, tmp464, byte_e2, byte_81, tmp465, sequence_e2_81;
		BitBlock byte_e2_adv, tmp466, tmp467, tmp468, cc_range_2065_2072_3;
		BitBlock sequence_e2_81_adv, tmp469, byte_82, sequence_e2_82, tmp470, tmp471;
		BitBlock tmp472, tmp473, tmp474, tmp475, cc_range_208f_20bb_3;
		BitBlock sequence_e2_82_adv, tmp476, sequence_e2_83, tmp477;
		BitBlock cc_range_20c0_20f1_3, sequence_e2_83_adv, tmp478, byte_86;
		BitBlock sequence_e2_86, byte_range_8a_8f, sequence_e2_86_adv, tmp479;
		BitBlock sequence_e2_8f, byte_range_b4_bf, sequence_e2_8f_adv, tmp480, byte_90;
		BitBlock sequence_e2_90, tmp481, byte_range_a7_bf, sequence_e2_90_adv, tmp482;
		BitBlock byte_91, sequence_e2_91, tmp483, tmp484, byte_range_8b_9f;
		BitBlock sequence_e2_91_adv, tmp485, sequence_e2_9c, byte_80;
		BitBlock sequence_e2_9c_adv, tmp486, sequence_e2_ad, tmp487, tmp488, tmp489;
		BitBlock tmp490, tmp491, cc_range_2b4d_2b5a_3, sequence_e2_ad_adv, tmp492;
		BitBlock byte_range_ae_af, byte_e2_byte_range_ae_af, tmp493;
		BitBlock byte_e2_byte_range_ae_af_sfx, sequence_e2_b0, tmp494;
		BitBlock sequence_e2_b0_af, sequence_e2_b1, tmp495, sequence_e2_b1_9f;
		BitBlock sequence_e2_b3, tmp496, byte_range_b4_b8, tmp497;
		BitBlock sequence_e2_b3_byte_range_b4_b8, sequence_e2_b4, tmp498;
		BitBlock sequence_e2_b4_a6, sequence_e2_b5, tmp499, byte_range_a8_ae, tmp500;
		BitBlock sequence_e2_b5_byte_range_a8_ae, sequence_e2_b6, byte_range_97_9f;
		BitBlock tmp501, sequence_e2_b6_byte_range_97_9f, sequence_e2_b7, byte_87;
		BitBlock tmp502, sequence_e2_b7_87, sequence_e2_b8, byte_range_bc_bf, tmp503;
		BitBlock sequence_e2_b8_byte_range_bc_bf, sequence_e2_b9, tmp504;
		BitBlock sequence_e2_b9_byte_range_80_bf, sequence_e2_ba, tmp505;
		BitBlock sequence_e2_ba_9a, sequence_e2_bb, tmp506;
		BitBlock sequence_e2_bb_byte_range_b4_bf, sequence_e2_bf, tmp507, tmp508;
		BitBlock tmp509, byte_range_96_af, tmp510, sequence_e2_bf_byte_range_96_af;
		BitBlock byte_e3, tmp511, sequence_e3_81, byte_e3_adv, sequence_e3_81_adv;
		BitBlock tmp512, sequence_e3_82, byte_range_97_98, sequence_e3_82_adv, tmp513;
		BitBlock byte_84, sequence_e3_84, tmp514, tmp515, tmp516, cc_range_3100_312e_3;
		BitBlock sequence_e3_84_adv, tmp517, sequence_e3_86, cc_range_318f_31bb_3;
		BitBlock sequence_e3_86_adv, tmp518, sequence_e3_87, byte_range_a4_af;
		BitBlock sequence_e3_87_adv, tmp519, byte_88, sequence_e3_88;
		BitBlock sequence_e3_88_adv, tmp520, sequence_e3_8b, sequence_e3_8b_adv;
		BitBlock tmp521, byte_e4, tmp522, sequence_e4_b6, byte_e4_adv;
		BitBlock sequence_e4_b6_adv, tmp523, byte_e9, tmp524, sequence_e9_bf;
		BitBlock byte_e9_adv, tmp525, byte_range_8d_bf, sequence_e9_bf_adv, tmp526;
		BitBlock byte_ea, byte_92, tmp527, sequence_ea_92, byte_ea_adv;
		BitBlock byte_range_8d_8f, sequence_ea_92_adv, tmp528, byte_93, sequence_ea_93;
		BitBlock byte_range_87_8f, sequence_ea_93_adv, tmp529, byte_98, sequence_ea_98;
		BitBlock tmp530, byte_range_ac_bf, sequence_ea_98_adv, tmp531, sequence_ea_9a;
		BitBlock tmp532, byte_range_98_9e, sequence_ea_9a_adv, tmp533, sequence_ea_9b;
		BitBlock sequence_ea_9b_adv, tmp534, byte_9e, sequence_ea_9e, tmp535, tmp536;
		BitBlock tmp537, cc_range_a78f_a7ab_3, sequence_ea_9e_adv, tmp538;
		BitBlock sequence_ea_9f, tmp539, byte_range_80_b7, sequence_ea_9f_adv, tmp540;
		BitBlock sequence_ea_a0, tmp541, tmp542, cc_range_a82c_a83a_3;
		BitBlock sequence_ea_a0_adv, tmp543, sequence_ea_a1, sequence_ea_a1_adv;
		BitBlock tmp544, sequence_ea_a3, tmp545, tmp546, tmp547, tmp548;
		BitBlock cc_range_a8c5_a8fc_3, sequence_ea_a3_adv, tmp549, sequence_ea_a5;
		BitBlock tmp550, tmp551, tmp552, tmp553, cc_range_a954_a97d_3;
		BitBlock sequence_ea_a5_adv, tmp554, sequence_ea_a7, tmp555, tmp556, tmp557;
		BitBlock cc_range_a9ce_a9e0_3, sequence_ea_a7_adv, tmp558, sequence_ea_a8;
		BitBlock byte_range_b7_bf, sequence_ea_a8_adv, tmp559, sequence_ea_a9, tmp560;
		BitBlock tmp561, tmp562, cc_range_aa4e_aa7c_3, sequence_ea_a9_adv, tmp563;
		BitBlock sequence_ea_ab, tmp564, tmp565, tmp566, tmp567, cc_range_aac3_aaf7_3;
		BitBlock sequence_ea_ab_adv, tmp568, sequence_ea_ac, tmp569, tmp570, tmp571;
		BitBlock tmp572, tmp573, tmp574, tmp575, tmp576, tmp577, tmp578;
		BitBlock cc_range_ab00_ab2f_3, sequence_ea_ac_adv, tmp579, byte_range_ad_ae;
		BitBlock byte_ea_byte_range_ad_ae, tmp580, byte_ea_byte_range_ad_ae_sfx;
		BitBlock sequence_ea_af, tmp581, sequence_ea_af_byte_range_ae_af, byte_ed;
		BitBlock tmp582, sequence_ed_9e, byte_ed_adv, sequence_ed_9e_adv, tmp583;
		BitBlock sequence_ed_9f, tmp584, tmp585, tmp586, cc_range_d7c7_d7fc_3;
		BitBlock sequence_ed_9f_adv, tmp587, byte_ef, tmp588, sequence_ef_a9;
		BitBlock byte_ef_adv, sequence_ef_a9_adv, tmp589, sequence_ef_ab;
		BitBlock byte_range_9a_bf, sequence_ef_ab_adv, tmp590, sequence_ef_ac, tmp591;
		BitBlock tmp592, tmp593, tmp594, tmp595, tmp596, tmp597, tmp598, tmp599;
		BitBlock cc_range_fb07_fb3f_3, sequence_ef_ac_adv, tmp600, sequence_ef_ad;
		BitBlock tmp601, cc_range_fb42_fb45_3, sequence_ef_ad_adv, tmp602;
		BitBlock sequence_ef_af, tmp603, byte_range_82_92, sequence_ef_af_adv, tmp604;
		BitBlock sequence_ef_b5, byte_range_80_8f, sequence_ef_b5_adv, tmp605;
		BitBlock sequence_ef_b6, byte_range_90_91, sequence_ef_b6_adv, tmp606;
		BitBlock sequence_ef_b7, tmp607, tmp608, tmp609, cc_range_fdc8_fdfe_3;
		BitBlock sequence_ef_b7_adv, tmp610, sequence_ef_b8, tmp611;
		BitBlock cc_range_fe1a_fe27_3, sequence_ef_b8_adv, tmp612, sequence_ef_b9;
		BitBlock tmp613, tmp614, cc_range_fe53_fe75_3, sequence_ef_b9_adv, tmp615;
		BitBlock sequence_ef_bb, byte_range_bd_be, sequence_ef_bb_adv, tmp616;
		BitBlock sequence_ef_bc, sequence_ef_bc_adv, tmp617, sequence_ef_be;
		BitBlock sequence_ef_be_adv, tmp618, sequence_ef_bf, tmp619, tmp620, tmp621;
		BitBlock tmp622, tmp623, tmp624, tmp625, tmp626, tmp627, tmp628, tmp629;
		BitBlock tmp630, cc_range_ffc0_fffe_3, sequence_ef_bf_adv, tmp631, tmp632;
		BitBlock byte_f0, tmp633, sequence_f0_90, byte_f0_adv, tmp634;
		BitBlock sequence_f0_90_80, sequence_f0_90_adv, tmp635, tmp636, tmp637, tmp638;
		BitBlock tmp639, cc_range_1000c_1003e_4, sequence_f0_90_80_adv, tmp640;
		BitBlock sequence_f0_90_81, tmp641, tmp642, tmp643, tmp644;
		BitBlock cc_range_1004e_1005e_4, sequence_f0_90_81_adv, tmp645;
		BitBlock sequence_f0_90_83, sequence_f0_90_83_adv, tmp646, sequence_f0_90_84;
		BitBlock tmp647, tmp648, tmp649, tmp650, cc_range_10103_10134_4;
		BitBlock sequence_f0_90_84_adv, tmp651, sequence_f0_90_86, tmp652, tmp653;
		BitBlock tmp654, cc_range_1018b_1019c_4, sequence_f0_90_86_adv, tmp655;
		BitBlock sequence_f0_90_87, cc_range_101c0_101fe_4, sequence_f0_90_87_adv;
		BitBlock tmp656, byte_range_88_89, sequence_f0_90_byte_range_88_89, tmp657;
		BitBlock sequence_f0_90_byte_range_88_89_sfx, sequence_f0_90_8a, tmp658;
		BitBlock sequence_f0_90_8a_byte_range_9d_9f, sequence_f0_90_8b, tmp659, tmp660;
		BitBlock byte_range_91_bf, tmp661, sequence_f0_90_8b_byte_range_91_bf;
		BitBlock sequence_f0_90_8c, tmp662, sequence_f0_90_8c_9f, sequence_f0_90_8d;
		BitBlock tmp663, byte_range_8b_bf, tmp664, sequence_f0_90_8d_byte_range_8b_bf;
		BitBlock sequence_f0_90_8e, tmp665, sequence_f0_90_8e_9e, sequence_f0_90_8f;
		BitBlock byte_range_84_87, tmp666, sequence_f0_90_8f_byte_range_84_87;
		BitBlock sequence_f0_90_92, byte_range_9e_9f, tmp667;
		BitBlock sequence_f0_90_92_byte_range_9e_9f, sequence_f0_90_93, tmp668;
		BitBlock sequence_f0_90_93_byte_range_80_bf, sequence_f0_90_a0;
		BitBlock byte_range_86_87, tmp669, sequence_f0_90_a0_byte_range_86_87;
		BitBlock sequence_f0_90_a1, byte_96, tmp670, sequence_f0_90_a1_96;
		BitBlock sequence_f0_90_a2, tmp671, sequence_f0_90_a2_byte_range_80_bf;
		BitBlock sequence_f0_90_a4, byte_range_9c_9e, tmp672;
		BitBlock sequence_f0_90_a4_byte_range_9c_9e, sequence_f0_90_a5, tmp673;
		BitBlock sequence_f0_90_a5_byte_range_80_bf, sequence_f0_90_a6;
		BitBlock byte_range_b8_bd, tmp674, sequence_f0_90_a6_byte_range_b8_bd;
		BitBlock sequence_f0_90_a7, tmp675, sequence_f0_90_a7_byte_range_80_bf;
		BitBlock sequence_f0_90_a8, tmp676, sequence_f0_90_a8_84, sequence_f0_90_a9;
		BitBlock byte_range_88_8f, tmp677, sequence_f0_90_a9_byte_range_88_8f;
		BitBlock sequence_f0_90_aa, tmp678, sequence_f0_90_aa_byte_range_80_bf;
		BitBlock sequence_f0_90_ac, byte_range_b6_b8, tmp679;
		BitBlock sequence_f0_90_ac_byte_range_b6_b8, sequence_f0_90_ad;
		BitBlock byte_range_96_97, tmp680, sequence_f0_90_ad_byte_range_96_97;
		BitBlock sequence_f0_90_ae, tmp681, sequence_f0_90_ae_byte_range_80_bf;
		BitBlock sequence_f0_90_b1, tmp682, tmp683, byte_range_89_bf, tmp684;
		BitBlock sequence_f0_90_b1_byte_range_89_bf, sequence_f0_90_b2, tmp685;
		BitBlock sequence_f0_90_b2_byte_range_80_bf, sequence_f0_90_b9;
		BitBlock byte_range_80_9f, tmp686, sequence_f0_90_b9_byte_range_80_9f;
		BitBlock sequence_f0_90_ba, tmp687, sequence_f0_90_ba_byte_range_80_bf;
		BitBlock sequence_f0_91, tmp688, sequence_f0_91_81, sequence_f0_91_adv, tmp689;
		BitBlock tmp690, tmp691, cc_range_1104e_11070_4, sequence_f0_91_81_adv, tmp692;
		BitBlock sequence_f0_91_83, tmp693, tmp694, tmp695, cc_range_110c2_110fa_4;
		BitBlock sequence_f0_91_83_adv, tmp696, sequence_f0_91_84;
		BitBlock sequence_f0_91_84_adv, tmp697, byte_85, sequence_f0_91_85, tmp698;
		BitBlock byte_range_84_bf, sequence_f0_91_85_adv, tmp699, sequence_f0_91_87;
		BitBlock tmp700, cc_range_111c9_111da_4, sequence_f0_91_87_adv, tmp701, tmp702;
		BitBlock tmp703, byte_range_88_99, sequence_f0_91_byte_range_88_99, tmp704;
		BitBlock sequence_f0_91_byte_range_88_99_sfx, sequence_f0_91_9a, tmp705;
		BitBlock sequence_f0_91_9a_byte_range_b8_bf, sequence_f0_91_9b, tmp706, tmp707;
		BitBlock byte_range_8a_bf, tmp708, sequence_f0_91_9b_byte_range_8a_bf;
		BitBlock sequence_f0_91_9c, tmp709, sequence_f0_91_9c_byte_range_80_bf;
		BitBlock sequence_f0_92, tmp710, sequence_f0_92_8d, sequence_f0_92_adv;
		BitBlock byte_range_af_bf, sequence_f0_92_8d_adv, tmp711, byte_range_8e_8f;
		BitBlock sequence_f0_92_byte_range_8e_8f, tmp712;
		BitBlock sequence_f0_92_byte_range_8e_8f_sfx, sequence_f0_92_91;
		BitBlock byte_range_a3_af, tmp713, sequence_f0_92_91_byte_range_a3_af;
		BitBlock sequence_f0_92_92, tmp714, sequence_f0_92_92_byte_range_80_bf;
		BitBlock sequence_f0_93, tmp715, sequence_f0_93_90, sequence_f0_93_adv;
		BitBlock sequence_f0_93_90_adv, tmp716, sequence_f0_93_byte_range_91_bf;
		BitBlock tmp717, sequence_f0_93_byte_range_91_bf_sfx, byte_range_94_95;
		BitBlock byte_f0_byte_range_94_95, tmp718, byte_f0_byte_range_94_95_sfx;
		BitBlock tmp719, byte_f0_byte_range_94_95_sfx_sfx, sequence_f0_96;
		BitBlock sequence_f0_96_adv, sequence_f0_96_80, tmp720;
		BitBlock sequence_f0_96_80_byte_range_80_bf, byte_97, sequence_f0_97;
		BitBlock sequence_f0_97_adv, sequence_f0_97_80, tmp721;
		BitBlock sequence_f0_97_80_byte_range_80_bf, sequence_f0_9b;
		BitBlock sequence_f0_9b_adv, sequence_f0_9b_80, tmp722, tmp723;
		BitBlock byte_range_82_bf, tmp724, sequence_f0_9b_80_byte_range_82_bf;
		BitBlock sequence_f0_9c, sequence_f0_9c_adv, sequence_f0_9c_80, tmp725;
		BitBlock sequence_f0_9c_80_byte_range_80_bf, sequence_f0_9d;
		BitBlock sequence_f0_9d_adv, sequence_f0_9d_83, tmp726;
		BitBlock sequence_f0_9d_83_byte_range_b6_bf, sequence_f0_9e;
		BitBlock sequence_f0_9e_adv, sequence_f0_9e_80, tmp727;
		BitBlock sequence_f0_9e_80_byte_range_80_bf, sequence_f0_9f;
		BitBlock sequence_f0_9f_adv, sequence_f0_9f_80, tmp728;
		BitBlock sequence_f0_9f_80_byte_range_ac_af, sequence_f0_aa;
		BitBlock sequence_f0_aa_adv, sequence_f0_aa_9b, tmp729, tmp730;
		BitBlock byte_range_97_bf, tmp731, sequence_f0_aa_9b_byte_range_97_bf;
		BitBlock sequence_f0_ab, sequence_f0_ab_adv, sequence_f0_ab_9c, tmp732;
		BitBlock sequence_f0_ab_9c_byte_range_b5_bf, sequence_f0_ac;
		BitBlock sequence_f0_ac_adv, sequence_f0_ac_80, tmp733;
		BitBlock sequence_f0_ac_80_byte_range_80_bf, sequence_f0_af;
		BitBlock sequence_f0_af_adv, sequence_f0_af_80, tmp734;
		BitBlock sequence_f0_af_80_byte_range_80_bf, sequence_f0_b0;
		BitBlock sequence_f0_b0_adv, sequence_f0_b0_80, tmp735;
		BitBlock sequence_f0_b0_80_byte_range_80_bf, tmp736, byte_range_f1_f2, tmp737;
		BitBlock byte_range_f1_f2_sfx, tmp738, byte_range_f1_f2_sfx_sfx, tmp739;
		BitBlock byte_range_f1_f2_sfx_sfx_sfx, byte_f3, byte_f3_adv, sequence_f3_80;
		BitBlock sequence_f3_80_adv, sequence_f3_80_80, tmp740, sequence_f3_80_80_80;




        struct_Cn.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp1, tmp2);
        tmp4 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp6 = simd_and(tmp4, tmp5);
        byte_cd = simd_and(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp11 = simd_andc(tmp10, basis_bits.bit_6);
        tmp12 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp13 = simd_and(tmp4, tmp12);
        tmp14 = simd_or(tmp11, tmp13);
        cc_range_378_37f_2 = simd_and(tmp9, tmp14);
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(byte_cd, carryQ.get_carry_in(0), byte_cd_adv));
        tmp15 = simd_and(byte_cd_adv, cc_range_378_37f_2);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp15);
        tmp16 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp17 = simd_and(tmp4, tmp16);
        byte_ce = simd_and(tmp3, tmp17);
        tmp18 = simd_andc(tmp7, tmp2);
        tmp19 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp20 = simd_and(tmp10, tmp12);
        tmp21 = simd_andc(tmp19, tmp20);
        tmp22 = simd_andc(tmp21, tmp6);
        tmp23 = simd_andc(tmp18, tmp22);
        tmp24 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp25 = simd_and(tmp7, tmp24);
        tmp26 = simd_andc(tmp16, tmp19);
        tmp27 = simd_and(tmp25, tmp26);
        cc_range_380_3a2_2 = simd_or(tmp23, tmp27);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(byte_ce, carryQ.get_carry_in(1), byte_ce_adv));
        tmp28 = simd_and(byte_ce_adv, cc_range_380_3a2_2);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp28);
        tmp29 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp30 = simd_and(tmp1, tmp29);
        tmp31 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp32 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp33 = simd_andc(tmp31, tmp32);
        byte_d4 = simd_and(tmp30, tmp33);
        tmp34 = simd_and(tmp7, basis_bits.bit_2);
        tmp35 = simd_or(tmp19, tmp32);
        tmp36 = simd_not(tmp35);
        tmp37 = simd_or(simd_and(basis_bits.bit_3, tmp36), simd_andc(basis_bits.bit_4, basis_bits.bit_3));
        byte_range_a8_b0 = simd_and(tmp34, tmp37);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(byte_d4, carryQ.get_carry_in(2), byte_d4_adv));
        tmp38 = simd_and(byte_d4_adv, byte_range_a8_b0);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp38);
        tmp39 = simd_and(tmp31, tmp5);
        byte_d5 = simd_and(tmp30, tmp39);
        tmp40 = simd_and(tmp7, tmp29);
        tmp41 = simd_or(basis_bits.bit_5, tmp32);
        tmp42 = simd_not(tmp41);
        tmp43 = simd_and(basis_bits.bit_5, tmp12);
        tmp44 = simd_or(simd_and(basis_bits.bit_4, tmp42), simd_andc(tmp43, basis_bits.bit_4));
        tmp45 = simd_and(tmp40, tmp44);
        tmp46 = simd_andc(tmp25, tmp35);
        cc_range_557_560_2 = simd_or(tmp45, tmp46);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(byte_d5, carryQ.get_carry_in(3), byte_d5_adv));
        tmp47 = simd_and(byte_d5_adv, cc_range_557_560_2);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp47);
        tmp48 = simd_and(tmp31, tmp16);
        byte_d6 = simd_and(tmp30, tmp48);
        tmp49 = simd_andc(tmp10, tmp32);
        tmp50 = simd_and(tmp18, tmp49);
        tmp51 = simd_and(tmp18, basis_bits.bit_4);
        tmp52 = simd_not(tmp12);
        tmp53 = simd_or(simd_and(basis_bits.bit_5, tmp52), simd_andc(tmp12, basis_bits.bit_5));
        tmp54 = simd_and(tmp51, tmp53);
        tmp55 = simd_or(tmp50, tmp54);
        tmp56 = simd_andc(tmp40, tmp35);
        cc_range_588_590_2 = simd_or(tmp55, tmp56);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(byte_d6, carryQ.get_carry_in(4), byte_d6_adv));
        tmp57 = simd_and(byte_d6_adv, cc_range_588_590_2);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp57);
        tmp58 = simd_and(tmp31, tmp12);
        byte_d7 = simd_and(tmp30, tmp58);
        tmp59 = simd_and(tmp25, basis_bits.bit_4);
        tmp60 = simd_or(basis_bits.bit_5, tmp12);
        tmp61 = simd_and(tmp59, tmp60);
        tmp62 = simd_or(tmp51, tmp61);
        tmp63 = simd_and(basis_bits.bit_5, tmp32);
        tmp64 = simd_or(basis_bits.bit_4, tmp63);
        tmp65 = simd_and(tmp9, tmp64);
        cc_range_5c8_5f5_2 = simd_or(tmp62, tmp65);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(byte_d7, carryQ.get_carry_in(5), byte_d7_adv));
        tmp66 = simd_and(byte_d7_adv, cc_range_5c8_5f5_2);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp66);
        byte_d8 = simd_and(tmp30, tmp49);
        tmp67 = simd_and(tmp18, tmp39);
        tmp68 = simd_and(tmp40, tmp6);
        cc_range_605_61d_2 = simd_or(tmp67, tmp68);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(byte_d8, carryQ.get_carry_in(6), byte_d8_adv));
        tmp69 = simd_and(byte_d8_adv, cc_range_605_61d_2);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp69);
        tmp70 = simd_andc(tmp4, tmp32);
        byte_dc = simd_and(tmp30, tmp70);
        byte_8e = simd_and(tmp18, tmp17);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(byte_dc, carryQ.get_carry_in(7), byte_dc_adv));
        tmp71 = simd_and(byte_dc_adv, byte_8e);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp71);
        byte_dd = simd_and(tmp30, tmp6);
        tmp72 = simd_not(tmp32);
        tmp73 = simd_or(simd_and(basis_bits.bit_5, tmp72), simd_andc(tmp12, basis_bits.bit_5));
        byte_range_8b_8c = simd_and(tmp51, tmp73);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(byte_dd, carryQ.get_carry_in(8), byte_dd_adv));
        tmp74 = simd_and(byte_dd_adv, byte_range_8b_8c);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp74);
        byte_de = simd_and(tmp30, tmp17);
        tmp75 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
        tmp76 = simd_or(basis_bits.bit_4, tmp75);
        byte_range_b2_bf = simd_and(tmp9, tmp76);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(byte_de, carryQ.get_carry_in(9), byte_de_adv));
        tmp77 = simd_and(byte_de_adv, byte_range_b2_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp77);
        byte_df = simd_and(tmp30, tmp13);
        tmp78 = simd_and(tmp9, basis_bits.bit_4);
        byte_range_bb_bf = simd_and(tmp78, tmp60);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(byte_df, carryQ.get_carry_in(10), byte_df_adv));
        tmp79 = simd_and(byte_df_adv, byte_range_bb_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp79);
        tmp80 = simd_and(tmp1, tmp24);
        byte_e0 = simd_andc(tmp80, tmp35);
        byte_a0 = simd_andc(tmp25, tmp35);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(byte_e0, carryQ.get_carry_in(11), tmp81));
        sequence_e0_a0 = simd_and(tmp81, byte_a0);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(byte_e0, carryQ.get_carry_in(12), byte_e0_adv));
        tmp82 = simd_and(tmp4, basis_bits.bit_6);
        tmp83 = simd_and(tmp25, tmp82);
        tmp84 = simd_and(tmp9, tmp13);
        cc_range_82e_83f_3 = simd_or(tmp83, tmp84);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(sequence_e0_a0, carryQ.get_carry_in(13), sequence_e0_a0_adv));
        tmp85 = simd_and(sequence_e0_a0_adv, cc_range_82e_83f_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp85);
        tmp86 = simd_andc(tmp5, tmp19);
        byte_a1 = simd_and(tmp25, tmp86);
        sequence_e0_a1 = simd_and(byte_e0_adv, byte_a1);
        tmp87 = simd_andc(tmp4, basis_bits.bit_6);
        tmp88 = simd_and(tmp40, tmp87);
        tmp89 = simd_and(basis_bits.bit_3, tmp13);
        tmp90 = simd_or(basis_bits.bit_2, tmp89);
        tmp91 = simd_and(tmp7, tmp90);
        cc_range_85c_85f_3 = simd_or(tmp88, tmp91);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(sequence_e0_a1, carryQ.get_carry_in(14), sequence_e0_a1_adv));
        tmp92 = simd_and(sequence_e0_a1_adv, cc_range_85c_85f_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp92);
        byte_a2 = simd_and(tmp25, tmp26);
        sequence_e0_a2 = simd_and(byte_e0_adv, byte_a2);
        tmp93 = simd_andc(tmp7, basis_bits.bit_2);
        tmp94 = simd_or(tmp93, byte_a1);
        tmp95 = simd_and(tmp4, tmp32);
        tmp96 = simd_or(basis_bits.bit_3, tmp95);
        tmp97 = simd_and(tmp34, tmp96);
        cc_range_880_8ad_3 = simd_or(tmp94, tmp97);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(sequence_e0_a2, carryQ.get_carry_in(15), sequence_e0_a2_adv));
        tmp98 = simd_and(sequence_e0_a2_adv, cc_range_880_8ad_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp98);
        tmp99 = simd_andc(tmp12, tmp19);
        byte_a3 = simd_and(tmp25, tmp99);
        sequence_e0_a3 = simd_and(byte_e0_adv, byte_a3);
        tmp100 = simd_or(basis_bits.bit_3, tmp19);
        tmp101 = simd_and(basis_bits.bit_2, tmp100);
        tmp102 = simd_andc(tmp7, tmp101);
        cc_range_8c0_8ff_3 = simd_or(tmp102, tmp84);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(sequence_e0_a3, carryQ.get_carry_in(16), sequence_e0_a3_adv));
        tmp103 = simd_and(sequence_e0_a3_adv, cc_range_8c0_8ff_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp103);
        byte_a5 = simd_and(tmp25, tmp39);
        sequence_e0_a5 = simd_and(byte_e0_adv, byte_a5);
        byte_b8 = simd_and(tmp9, tmp49);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(sequence_e0_a5, carryQ.get_carry_in(17), sequence_e0_a5_adv));
        tmp104 = simd_and(sequence_e0_a5_adv, byte_b8);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp104);
        byte_a6 = simd_and(tmp25, tmp48);
        sequence_e0_a6 = simd_and(byte_e0_adv, byte_a6);
        tmp105 = simd_andc(tmp35, tmp33);
        tmp106 = simd_andc(tmp18, tmp105);
        tmp107 = simd_and(tmp18, tmp4);
        tmp108 = simd_not(basis_bits.bit_7);
        tmp109 = simd_or(simd_and(basis_bits.bit_6, tmp108), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
        tmp110 = simd_and(tmp107, tmp109);
        tmp111 = simd_or(tmp106, tmp110);
        tmp112 = simd_andc(tmp40, tmp19);
        tmp113 = simd_and(tmp112, tmp109);
        tmp114 = simd_or(tmp111, tmp113);
        tmp115 = simd_and(tmp10, tmp5);
        tmp116 = simd_and(tmp25, tmp115);
        tmp117 = simd_or(tmp114, tmp116);
        tmp118 = simd_and(tmp9, tmp86);
        tmp119 = simd_or(tmp117, tmp118);
        tmp120 = simd_andc(tmp9, basis_bits.bit_4);
        tmp121 = simd_not(basis_bits.bit_6);
        tmp122 = simd_or(simd_and(basis_bits.bit_5, tmp121), simd_andc(tmp12, basis_bits.bit_5));
        tmp123 = simd_and(tmp120, tmp122);
        tmp124 = simd_or(tmp119, tmp123);
        tmp125 = simd_and(tmp10, basis_bits.bit_6);
        tmp126 = simd_and(tmp9, tmp125);
        cc_range_980_9ba_3 = simd_or(tmp124, tmp126);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(sequence_e0_a6, carryQ.get_carry_in(18), sequence_e0_a6_adv));
        tmp127 = simd_and(sequence_e0_a6_adv, cc_range_980_9ba_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp127);
        byte_a7 = simd_and(tmp25, tmp58);
        sequence_e0_a7 = simd_and(byte_e0_adv, byte_a7);
        tmp128 = simd_or(tmp31, tmp10);
        tmp129 = simd_and(tmp18, tmp128);
        tmp130 = simd_and(tmp109, tmp129);
        tmp131 = simd_or(basis_bits.bit_4, tmp43);
        tmp132 = simd_not(tmp131);
        tmp133 = simd_or(simd_and(basis_bits.bit_3, tmp132), simd_andc(tmp13, basis_bits.bit_3));
        tmp134 = simd_and(tmp93, tmp133);
        tmp135 = simd_or(tmp130, tmp134);
        tmp136 = simd_and(tmp40, tmp10);
        tmp137 = simd_or(tmp135, tmp136);
        tmp138 = simd_and(tmp40, tmp17);
        tmp139 = simd_or(tmp137, tmp138);
        tmp140 = simd_andc(tmp31, basis_bits.bit_6);
        tmp141 = simd_and(tmp25, tmp140);
        tmp142 = simd_or(tmp139, tmp141);
        tmp143 = simd_and(tmp9, tmp4);
        cc_range_9c5_9fc_3 = simd_or(tmp142, tmp143);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(sequence_e0_a7, carryQ.get_carry_in(19), sequence_e0_a7_adv));
        tmp144 = simd_and(sequence_e0_a7_adv, cc_range_9c5_9fc_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp144);
        byte_a8 = simd_and(tmp25, tmp49);
        sequence_e0_a8 = simd_and(byte_e0_adv, byte_a8);
        tmp145 = simd_or(tmp106, tmp54);
        tmp146 = simd_or(tmp145, tmp113);
        tmp147 = simd_or(tmp146, tmp116);
        tmp148 = simd_or(tmp147, tmp118);
        tmp149 = simd_and(tmp9, tmp33);
        tmp150 = simd_or(tmp148, tmp149);
        tmp151 = simd_and(tmp9, tmp58);
        tmp152 = simd_or(tmp150, tmp151);
        tmp153 = simd_or(tmp152, tmp126);
        tmp154 = simd_and(tmp9, tmp6);
        cc_range_a00_a3d_3 = simd_or(tmp153, tmp154);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(sequence_e0_a8, carryQ.get_carry_in(20), sequence_e0_a8_adv));
        tmp155 = simd_and(sequence_e0_a8_adv, cc_range_a00_a3d_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp155);
        byte_a9 = simd_and(tmp25, tmp115);
        sequence_e0_a9 = simd_and(byte_e0_adv, byte_a9);
        tmp156 = simd_andc(tmp18, basis_bits.bit_4);
        tmp157 = simd_and(tmp156, tmp53);
        tmp158 = simd_and(tmp18, tmp10);
        tmp159 = simd_and(tmp158, tmp109);
        tmp160 = simd_or(tmp157, tmp159);
        tmp161 = simd_or(simd_and(basis_bits.bit_3, tmp36), simd_andc(tmp82, basis_bits.bit_3));
        tmp162 = simd_and(tmp93, tmp161);
        tmp163 = simd_or(tmp160, tmp162);
        tmp164 = simd_or(simd_and(basis_bits.bit_4, tmp42), simd_andc(tmp75, basis_bits.bit_4));
        tmp165 = simd_and(tmp40, tmp164);
        tmp166 = simd_or(tmp163, tmp165);
        tmp167 = simd_or(tmp166, tmp68);
        tmp168 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp169 = simd_or(basis_bits.bit_4, tmp168);
        tmp170 = simd_or(basis_bits.bit_3, tmp169);
        tmp171 = simd_not(tmp170);
        tmp172 = simd_or(simd_and(basis_bits.bit_2, tmp171), simd_andc(tmp89, basis_bits.bit_2));
        tmp173 = simd_and(tmp7, tmp172);
        tmp174 = simd_or(tmp167, tmp173);
        tmp175 = simd_and(tmp9, tmp169);
        cc_range_a43_a76_3 = simd_or(tmp174, tmp175);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(sequence_e0_a9, carryQ.get_carry_in(21), sequence_e0_a9_adv));
        tmp176 = simd_and(sequence_e0_a9_adv, cc_range_a43_a76_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp176);
        tmp177 = simd_and(tmp10, tmp16);
        byte_aa = simd_and(tmp25, tmp177);
        sequence_e0_aa = simd_and(byte_e0_adv, byte_aa);
        tmp178 = simd_andc(tmp105, tmp17);
        tmp179 = simd_andc(tmp18, tmp178);
        tmp180 = simd_and(tmp40, tmp26);
        tmp181 = simd_or(tmp179, tmp180);
        tmp182 = simd_or(tmp181, byte_a9);
        tmp183 = simd_or(tmp182, tmp118);
        tmp184 = simd_or(tmp183, tmp149);
        cc_range_a80_aba_3 = simd_or(tmp184, tmp126);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(sequence_e0_aa, carryQ.get_carry_in(22), sequence_e0_aa_adv));
        tmp185 = simd_and(sequence_e0_aa_adv, cc_range_a80_aba_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp185);
        byte_ab = simd_and(tmp25, tmp20);
        sequence_e0_ab = simd_and(byte_e0_adv, byte_ab);
        tmp186 = simd_and(tmp16, tmp128);
        tmp187 = simd_or(tmp186, tmp82);
        tmp188 = simd_and(tmp18, tmp187);
        tmp189 = simd_or(basis_bits.bit_4, tmp41);
        tmp190 = simd_and(tmp40, tmp189);
        tmp191 = simd_or(tmp188, tmp190);
        tmp192 = simd_or(tmp191, tmp141);
        cc_range_ac6_af2_3 = simd_or(tmp192, byte_range_b2_bf);
        carryQ.cq[23] = carryout2carry(pablo_blk_Advance(sequence_e0_ab, carryQ.get_carry_in(23), sequence_e0_ab_adv));
        tmp193 = simd_and(sequence_e0_ab_adv, cc_range_ac6_af2_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp193);
        byte_ac = simd_and(tmp25, tmp70);
        sequence_e0_ac = simd_and(byte_e0_adv, byte_ac);
        tmp194 = simd_or(tmp114, byte_a9);
        tmp195 = simd_or(tmp194, tmp118);
        tmp196 = simd_or(tmp195, tmp149);
        cc_range_b00_b3a_3 = simd_or(tmp196, tmp126);
        carryQ.cq[24] = carryout2carry(pablo_blk_Advance(sequence_e0_ac, carryQ.get_carry_in(24), sequence_e0_ac_adv));
        tmp197 = simd_and(sequence_e0_ac_adv, cc_range_b00_b3a_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp197);
        byte_ad = simd_and(tmp25, tmp6);
        sequence_e0_ad = simd_and(byte_e0_adv, byte_ad);
        tmp198 = simd_not(tmp169);
        tmp199 = simd_or(simd_and(basis_bits.bit_3, tmp198), simd_andc(tmp82, basis_bits.bit_3));
        tmp200 = simd_and(tmp93, tmp199);
        tmp201 = simd_or(tmp130, tmp200);
        tmp202 = simd_or(tmp201, tmp136);
        tmp203 = simd_or(tmp202, tmp138);
        tmp204 = simd_or(tmp203, tmp141);
        cc_range_b45_b78_3 = simd_or(tmp204, tmp78);
        carryQ.cq[25] = carryout2carry(pablo_blk_Advance(sequence_e0_ad, carryQ.get_carry_in(25), sequence_e0_ad_adv));
        tmp205 = simd_and(sequence_e0_ad_adv, cc_range_b45_b78_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp205);
        byte_ae = simd_and(tmp25, tmp17);
        sequence_e0_ae = simd_and(byte_e0_adv, byte_ae);
        tmp206 = simd_or(tmp19, basis_bits.bit_6);
        tmp207 = simd_andc(tmp206, tmp33);
        tmp208 = simd_andc(tmp18, tmp207);
        tmp209 = simd_and(tmp51, tmp122);
        tmp210 = simd_or(tmp208, tmp209);
        tmp211 = simd_and(tmp40, tmp86);
        tmp212 = simd_or(tmp210, tmp211);
        tmp213 = simd_or(simd_and(basis_bits.bit_4, tmp42), simd_andc(tmp168, basis_bits.bit_4));
        tmp214 = simd_and(tmp40, tmp213);
        tmp215 = simd_or(tmp212, tmp214);
        tmp216 = simd_and(tmp40, tmp20);
        tmp217 = simd_or(tmp215, tmp216);
        tmp218 = simd_or(tmp217, tmp68);
        tmp219 = simd_andc(tmp25, tmp19);
        tmp220 = simd_andc(tmp219, tmp12);
        tmp221 = simd_or(tmp218, tmp220);
        tmp222 = simd_and(tmp25, tmp31);
        tmp223 = simd_and(tmp222, tmp32);
        tmp224 = simd_or(tmp221, tmp223);
        tmp225 = simd_and(tmp59, tmp122);
        tmp226 = simd_or(tmp224, tmp225);
        tmp227 = simd_or(simd_and(basis_bits.bit_5, tmp121), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        tmp228 = simd_and(tmp78, tmp227);
        cc_range_b80_bba_3 = simd_or(tmp226, tmp228);
        carryQ.cq[26] = carryout2carry(pablo_blk_Advance(sequence_e0_ae, carryQ.get_carry_in(26), sequence_e0_ae_adv));
        tmp229 = simd_and(sequence_e0_ae_adv, cc_range_b80_bba_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp229);
        byte_af = simd_and(tmp25, tmp13);
        sequence_e0_af = simd_and(byte_e0_adv, byte_af);
        tmp230 = simd_and(tmp156, tmp122);
        tmp231 = simd_and(tmp18, tmp115);
        tmp232 = simd_or(tmp230, tmp231);
        tmp233 = simd_and(tmp18, tmp82);
        tmp234 = simd_or(tmp232, tmp233);
        tmp235 = simd_andc(tmp40, basis_bits.bit_4);
        tmp236 = simd_or(simd_and(basis_bits.bit_5, tmp52), simd_andc(tmp32, basis_bits.bit_5));
        tmp237 = simd_and(tmp235, tmp236);
        tmp238 = simd_or(tmp234, tmp237);
        tmp239 = simd_and(basis_bits.bit_3, basis_bits.bit_4);
        tmp240 = simd_or(simd_and(basis_bits.bit_2, tmp171), simd_andc(tmp239, basis_bits.bit_2));
        tmp241 = simd_and(tmp7, tmp240);
        tmp242 = simd_or(tmp238, tmp241);
        cc_range_bc3_bfb_3 = simd_or(tmp242, byte_range_bb_bf);
        carryQ.cq[27] = carryout2carry(pablo_blk_Advance(sequence_e0_af, carryQ.get_carry_in(27), sequence_e0_af_adv));
        tmp243 = simd_and(sequence_e0_af_adv, cc_range_bc3_bfb_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp243);
        byte_b0 = simd_andc(tmp9, tmp35);
        sequence_e0_b0 = simd_and(byte_e0_adv, byte_b0);
        tmp244 = simd_andc(tmp105, tmp6);
        tmp245 = simd_andc(tmp18, tmp244);
        tmp246 = simd_or(tmp245, tmp211);
        tmp247 = simd_or(tmp246, byte_a9);
        tmp248 = simd_or(tmp247, tmp149);
        tmp249 = simd_or(simd_and(basis_bits.bit_5, tmp72), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        tmp250 = simd_and(tmp78, tmp249);
        cc_range_c00_c3a_3 = simd_or(tmp248, tmp250);
        carryQ.cq[28] = carryout2carry(pablo_blk_Advance(sequence_e0_b0, carryQ.get_carry_in(28), sequence_e0_b0_adv));
        tmp251 = simd_and(sequence_e0_b0_adv, cc_range_c00_c3a_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp251);
        byte_b1 = simd_and(tmp9, tmp86);
        sequence_e0_b1 = simd_and(byte_e0_adv, byte_b1);
        tmp252 = simd_and(tmp5, tmp128);
        tmp253 = simd_and(tmp18, tmp252);
        tmp254 = simd_not(tmp64);
        tmp255 = simd_or(simd_and(basis_bits.bit_3, tmp254), simd_andc(tmp82, basis_bits.bit_3));
        tmp256 = simd_and(tmp93, tmp255);
        tmp257 = simd_or(tmp253, tmp256);
        tmp258 = simd_and(tmp40, tmp58);
        tmp259 = simd_or(tmp257, tmp258);
        tmp260 = simd_and(tmp40, basis_bits.bit_4);
        tmp261 = simd_and(tmp260, tmp75);
        tmp262 = simd_or(tmp259, tmp261);
        tmp263 = simd_or(tmp262, tmp141);
        cc_range_c45_c70_3 = simd_or(tmp263, tmp120);
        carryQ.cq[29] = carryout2carry(pablo_blk_Advance(sequence_e0_b1, carryQ.get_carry_in(29), sequence_e0_b1_adv));
        tmp264 = simd_and(sequence_e0_b1_adv, cc_range_c45_c70_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp264);
        byte_b2 = simd_and(tmp9, tmp26);
        sequence_e0_b2 = simd_and(byte_e0_adv, byte_b2);
        tmp265 = simd_andc(tmp207, tmp6);
        tmp266 = simd_andc(tmp18, tmp265);
        tmp267 = simd_or(tmp266, tmp211);
        tmp268 = simd_or(tmp267, byte_a9);
        tmp269 = simd_or(tmp268, tmp149);
        cc_range_c80_cba_3 = simd_or(tmp269, tmp126);
        carryQ.cq[30] = carryout2carry(pablo_blk_Advance(sequence_e0_b2, carryQ.get_carry_in(30), sequence_e0_b2_adv));
        tmp270 = simd_and(sequence_e0_b2_adv, cc_range_c80_cba_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp270);
        byte_b3 = simd_and(tmp9, tmp99);
        sequence_e0_b3 = simd_and(byte_e0_adv, byte_b3);
        tmp271 = simd_not(tmp168);
        tmp272 = simd_or(simd_and(basis_bits.bit_4, tmp271), simd_andc(tmp43, basis_bits.bit_4));
        tmp273 = simd_and(tmp40, tmp272);
        tmp274 = simd_or(tmp257, tmp273);
        tmp275 = simd_and(tmp40, tmp13);
        tmp276 = simd_or(tmp274, tmp275);
        tmp277 = simd_or(tmp276, tmp141);
        tmp278 = simd_or(tmp277, byte_b0);
        tmp279 = simd_or(basis_bits.bit_4, tmp60);
        tmp280 = simd_and(tmp9, tmp279);
        cc_range_cc5_cf3_3 = simd_or(tmp278, tmp280);
        carryQ.cq[31] = carryout2carry(pablo_blk_Advance(sequence_e0_b3, carryQ.get_carry_in(31), sequence_e0_b3_adv));
        tmp281 = simd_and(sequence_e0_b3_adv, cc_range_cc5_cf3_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp281);
        byte_b4 = simd_and(tmp9, tmp33);
        sequence_e0_b4 = simd_and(byte_e0_adv, byte_b4);
        tmp282 = simd_and(tmp78, tmp73);
        cc_range_d00_d3b_3 = simd_or(tmp267, tmp282);
        carryQ.cq[32] = carryout2carry(pablo_blk_Advance(sequence_e0_b4, carryQ.get_carry_in(32), sequence_e0_b4_adv));
        tmp283 = simd_and(sequence_e0_b4_adv, cc_range_d00_d3b_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp283);
        byte_b5 = simd_and(tmp9, tmp39);
        sequence_e0_b5 = simd_and(byte_e0_adv, byte_b5);
        tmp284 = simd_or(tmp253, tmp134);
        tmp285 = simd_or(tmp284, tmp260);
        tmp286 = simd_or(tmp285, tmp141);
        tmp287 = simd_and(tmp9, tmp213);
        cc_range_d45_d76_3 = simd_or(tmp286, tmp287);
        carryQ.cq[33] = carryout2carry(pablo_blk_Advance(sequence_e0_b5, carryQ.get_carry_in(33), sequence_e0_b5_adv));
        tmp288 = simd_and(sequence_e0_b5_adv, cc_range_d45_d76_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp288);
        byte_b6 = simd_and(tmp9, tmp48);
        sequence_e0_b6 = simd_and(byte_e0_adv, byte_b6);
        tmp289 = simd_not(tmp75);
        tmp290 = simd_or(simd_and(basis_bits.bit_4, tmp289), simd_andc(tmp43, basis_bits.bit_4));
        tmp291 = simd_and(tmp40, tmp290);
        tmp292 = simd_or(tmp208, tmp291);
        tmp293 = simd_or(tmp292, byte_b2);
        tmp294 = simd_and(tmp9, tmp70);
        tmp295 = simd_or(tmp293, tmp294);
        tmp296 = simd_and(tmp9, tmp82);
        cc_range_d80_dbe_3 = simd_or(tmp295, tmp296);
        carryQ.cq[34] = carryout2carry(pablo_blk_Advance(sequence_e0_b6, carryQ.get_carry_in(34), sequence_e0_b6_adv));
        tmp297 = simd_and(sequence_e0_b6_adv, cc_range_d80_dbe_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp297);
        byte_b7 = simd_and(tmp9, tmp58);
        sequence_e0_b7 = simd_and(byte_e0_adv, byte_b7);
        tmp298 = simd_and(tmp18, tmp290);
        tmp299 = simd_or(tmp298, tmp54);
        tmp300 = simd_and(tmp40, tmp39);
        tmp301 = simd_or(tmp299, tmp300);
        tmp302 = simd_or(tmp301, tmp258);
        tmp303 = simd_and(basis_bits.bit_3, tmp206);
        tmp304 = simd_andc(tmp34, tmp303);
        tmp305 = simd_or(tmp302, tmp304);
        cc_range_dc7_df5_3 = simd_or(tmp305, tmp65);
        carryQ.cq[35] = carryout2carry(pablo_blk_Advance(sequence_e0_b7, carryQ.get_carry_in(35), sequence_e0_b7_adv));
        tmp306 = simd_and(sequence_e0_b7_adv, cc_range_dc7_df5_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp306);
        sequence_e0_b8 = simd_and(byte_e0_adv, byte_b8);
        tmp307 = simd_andc(tmp18, tmp35);
        tmp308 = simd_and(tmp78, tmp53);
        cc_range_e00_e3b_3 = simd_or(tmp307, tmp308);
        carryQ.cq[36] = carryout2carry(pablo_blk_Advance(sequence_e0_b8, carryQ.get_carry_in(36), sequence_e0_b8_adv));
        tmp309 = simd_and(sequence_e0_b8_adv, cc_range_e00_e3b_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp309);
        byte_b9 = simd_and(tmp9, tmp115);
        sequence_e0_b9 = simd_and(byte_e0_adv, byte_b9);
        tmp310 = simd_and(basis_bits.bit_3, tmp4);
        tmp311 = simd_or(basis_bits.bit_2, tmp310);
        byte_range_9c_bf = simd_and(tmp7, tmp311);
        carryQ.cq[37] = carryout2carry(pablo_blk_Advance(sequence_e0_b9, carryQ.get_carry_in(37), sequence_e0_b9_adv));
        tmp312 = simd_and(sequence_e0_b9_adv, byte_range_9c_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp312);
        byte_ba = simd_and(tmp9, tmp177);
        sequence_e0_ba = simd_and(byte_e0_adv, byte_ba);
        tmp313 = simd_andc(tmp35, tmp99);
        tmp314 = simd_andc(tmp18, tmp313);
        tmp315 = simd_and(tmp18, tmp31);
        tmp316 = simd_and(tmp315, tmp109);
        tmp317 = simd_or(tmp314, tmp316);
        tmp318 = simd_or(tmp317, tmp231);
        tmp319 = simd_or(tmp318, byte_range_8b_8c);
        tmp320 = simd_not(tmp19);
        tmp321 = simd_or(simd_and(basis_bits.bit_3, tmp320), simd_andc(tmp82, basis_bits.bit_3));
        tmp322 = simd_and(tmp93, tmp321);
        tmp323 = simd_or(tmp319, tmp322);
        tmp324 = simd_and(tmp40, tmp49);
        tmp325 = simd_or(tmp323, tmp324);
        tmp326 = simd_or(tmp325, byte_a0);
        tmp327 = simd_and(tmp25, tmp33);
        tmp328 = simd_or(tmp326, tmp327);
        tmp329 = simd_or(tmp328, byte_a6);
        tmp330 = simd_and(tmp25, tmp11);
        tmp331 = simd_or(tmp329, tmp330);
        tmp332 = simd_or(tmp331, byte_ac);
        tmp333 = simd_or(tmp332, byte_ba);
        cc_range_e80_ebe_3 = simd_or(tmp333, tmp296);
        carryQ.cq[38] = carryout2carry(pablo_blk_Advance(sequence_e0_ba, carryQ.get_carry_in(38), sequence_e0_ba_adv));
        tmp334 = simd_and(sequence_e0_ba_adv, cc_range_e80_ebe_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp334);
        byte_bb = simd_and(tmp9, tmp20);
        sequence_e0_bb = simd_and(byte_e0_adv, byte_bb);
        tmp335 = simd_and(tmp31, basis_bits.bit_7);
        tmp336 = simd_or(tmp335, tmp82);
        tmp337 = simd_and(tmp18, tmp336);
        tmp338 = simd_and(tmp40, tmp125);
        tmp339 = simd_or(tmp337, tmp338);
        cc_range_ec5_ee0_3 = simd_or(tmp339, tmp34);
        carryQ.cq[39] = carryout2carry(pablo_blk_Advance(sequence_e0_bb, carryQ.get_carry_in(39), sequence_e0_bb_adv));
        tmp340 = simd_and(sequence_e0_bb_adv, cc_range_ec5_ee0_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp340);
        byte_bd = simd_and(tmp9, tmp6);
        sequence_e0_bd = simd_and(byte_e0_adv, byte_bd);
        tmp341 = simd_or(simd_and(basis_bits.bit_3, tmp36), simd_andc(tmp95, basis_bits.bit_3));
        tmp342 = simd_and(tmp34, tmp341);
        cc_range_f48_f6d_3 = simd_or(tmp50, tmp342);
        carryQ.cq[40] = carryout2carry(pablo_blk_Advance(sequence_e0_bd, carryQ.get_carry_in(40), sequence_e0_bd_adv));
        tmp343 = simd_and(sequence_e0_bd_adv, cc_range_f48_f6d_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp343);
        byte_be = simd_and(tmp9, tmp17);
        sequence_e0_be = simd_and(byte_e0_adv, byte_be);
        cc_range_f98_fbd_3 = simd_or(tmp324, byte_bd);
        carryQ.cq[41] = carryout2carry(pablo_blk_Advance(sequence_e0_be, carryQ.get_carry_in(41), sequence_e0_be_adv));
        tmp344 = simd_and(sequence_e0_be_adv, cc_range_f98_fbd_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp344);
        byte_bf = simd_and(tmp9, tmp13);
        sequence_e0_bf = simd_and(byte_e0_adv, byte_bf);
        tmp345 = simd_and(tmp18, tmp6);
        tmp346 = simd_and(basis_bits.bit_4, tmp60);
        tmp347 = simd_and(basis_bits.bit_3, tmp346);
        tmp348 = simd_or(basis_bits.bit_2, tmp347);
        tmp349 = simd_and(tmp7, tmp348);
        cc_range_fcd_fdb_3 = simd_or(tmp345, tmp349);
        carryQ.cq[42] = carryout2carry(pablo_blk_Advance(sequence_e0_bf, carryQ.get_carry_in(42), sequence_e0_bf_adv));
        tmp350 = simd_and(sequence_e0_bf_adv, cc_range_fcd_fdb_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp350);
        byte_e1 = simd_and(tmp80, tmp86);
        byte_83 = simd_and(tmp18, tmp99);
        carryQ.cq[43] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(43), tmp351));
        sequence_e1_83 = simd_and(tmp351, byte_83);
        carryQ.cq[44] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(44), byte_e1_adv));
        tmp352 = simd_and(tmp18, tmp48);
        tmp353 = simd_andc(tmp51, tmp63);
        tmp354 = simd_or(tmp352, tmp353);
        cc_range_10c6_10ce_3 = simd_or(tmp354, tmp233);
        carryQ.cq[45] = carryout2carry(pablo_blk_Advance(sequence_e1_83, carryQ.get_carry_in(45), sequence_e1_83_adv));
        tmp355 = simd_and(sequence_e1_83_adv, cc_range_10c6_10ce_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp355);
        byte_89 = simd_and(tmp18, tmp115);
        sequence_e1_89 = simd_and(byte_e1_adv, byte_89);
        tmp356 = simd_or(tmp115, tmp82);
        tmp357 = simd_and(tmp18, tmp356);
        tmp358 = simd_or(tmp357, tmp258);
        tmp359 = simd_and(tmp40, tmp115);
        tmp360 = simd_or(tmp358, tmp359);
        tmp361 = simd_and(tmp40, tmp82);
        cc_range_1249_125e_3 = simd_or(tmp360, tmp361);
        carryQ.cq[46] = carryout2carry(pablo_blk_Advance(sequence_e1_89, carryQ.get_carry_in(46), sequence_e1_89_adv));
        tmp362 = simd_and(sequence_e1_89_adv, cc_range_1249_125e_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp362);
        byte_8a = simd_and(tmp18, tmp177);
        sequence_e1_8a = simd_and(byte_e1_adv, byte_8a);
        tmp363 = simd_or(tmp357, byte_b1);
        tmp364 = simd_and(tmp31, basis_bits.bit_6);
        tmp365 = simd_and(tmp9, tmp364);
        tmp366 = simd_or(tmp363, tmp365);
        cc_range_1289_12bf_3 = simd_or(tmp366, byte_bf);
        carryQ.cq[47] = carryout2carry(pablo_blk_Advance(sequence_e1_8a, carryQ.get_carry_in(47), sequence_e1_8a_adv));
        tmp367 = simd_and(sequence_e1_8a_adv, cc_range_1289_12bf_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp367);
        byte_8b = simd_and(tmp18, tmp20);
        sequence_e1_8b = simd_and(byte_e1_adv, byte_8b);
        tmp368 = simd_or(tmp86, tmp364);
        tmp369 = simd_and(tmp18, tmp368);
        cc_range_12c1_12d7_3 = simd_or(tmp369, tmp258);
        carryQ.cq[48] = carryout2carry(pablo_blk_Advance(sequence_e1_8b, carryQ.get_carry_in(48), sequence_e1_8b_adv));
        tmp370 = simd_and(sequence_e1_8b_adv, cc_range_12c1_12d7_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp370);
        byte_8c = simd_and(tmp18, tmp70);
        sequence_e1_8c = simd_and(byte_e1_adv, byte_8c);
        cc_range_1311_1316_3 = simd_and(tmp40, tmp368);
        carryQ.cq[49] = carryout2carry(pablo_blk_Advance(sequence_e1_8c, carryQ.get_carry_in(49), sequence_e1_8c_adv));
        tmp371 = simd_and(sequence_e1_8c_adv, cc_range_1311_1316_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp371);
        byte_8d = simd_and(tmp18, tmp6);
        sequence_e1_8d = simd_and(byte_e1_adv, byte_8d);
        tmp372 = simd_and(tmp260, tmp73);
        tmp373 = simd_and(tmp143, tmp32);
        cc_range_135b_137d_3 = simd_or(tmp372, tmp373);
        carryQ.cq[50] = carryout2carry(pablo_blk_Advance(sequence_e1_8d, carryQ.get_carry_in(50), sequence_e1_8d_adv));
        tmp374 = simd_and(sequence_e1_8d_adv, cc_range_135b_137d_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp374);
        sequence_e1_8e = simd_and(byte_e1_adv, byte_8e);
        byte_range_9a_9f = simd_and(tmp260, tmp75);
        carryQ.cq[51] = carryout2carry(pablo_blk_Advance(sequence_e1_8e, carryQ.get_carry_in(51), sequence_e1_8e_adv));
        tmp375 = simd_and(sequence_e1_8e_adv, byte_range_9a_9f);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp375);
        byte_8f = simd_and(tmp18, tmp13);
        sequence_e1_8f = simd_and(byte_e1_adv, byte_8f);
        byte_range_b5_bf = simd_and(tmp9, tmp64);
        carryQ.cq[52] = carryout2carry(pablo_blk_Advance(sequence_e1_8f, carryQ.get_carry_in(52), sequence_e1_8f_adv));
        tmp376 = simd_and(sequence_e1_8f_adv, byte_range_b5_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp376);
        byte_9a = simd_and(tmp40, tmp177);
        sequence_e1_9a = simd_and(byte_e1_adv, byte_9a);
        tmp377 = simd_and(tmp40, tmp4);
        byte_range_9d_9f = simd_and(tmp377, tmp32);
        carryQ.cq[53] = carryout2carry(pablo_blk_Advance(sequence_e1_9a, carryQ.get_carry_in(53), sequence_e1_9a_adv));
        tmp378 = simd_and(sequence_e1_9a_adv, byte_range_9d_9f);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp378);
        byte_9b = simd_and(tmp40, tmp20);
        sequence_e1_9b = simd_and(byte_e1_adv, byte_9b);
        byte_range_b1_bf = simd_and(tmp9, tmp189);
        carryQ.cq[54] = carryout2carry(pablo_blk_Advance(sequence_e1_9b, carryQ.get_carry_in(54), sequence_e1_9b_adv));
        tmp379 = simd_and(sequence_e1_9b_adv, byte_range_b1_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp379);
        byte_9c = simd_and(tmp40, tmp70);
        sequence_e1_9c = simd_and(byte_e1_adv, byte_9c);
        tmp380 = simd_and(tmp40, tmp64);
        tmp381 = simd_or(byte_8d, tmp380);
        tmp382 = simd_and(tmp9, tmp131);
        cc_range_170d_1737_3 = simd_or(tmp381, tmp382);
        carryQ.cq[55] = carryout2carry(pablo_blk_Advance(sequence_e1_9c, carryQ.get_carry_in(55), sequence_e1_9c_adv));
        tmp383 = simd_and(sequence_e1_9c_adv, cc_range_170d_1737_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp383);
        byte_9d = simd_and(tmp40, tmp6);
        sequence_e1_9d = simd_and(byte_e1_adv, byte_9d);
        tmp384 = simd_and(tmp40, tmp19);
        tmp385 = simd_or(tmp384, byte_ad);
        tmp386 = simd_or(tmp385, byte_b1);
        tmp387 = simd_and(tmp9, tmp19);
        cc_range_1754_1774_3 = simd_or(tmp386, tmp387);
        carryQ.cq[56] = carryout2carry(pablo_blk_Advance(sequence_e1_9d, carryQ.get_carry_in(56), sequence_e1_9d_adv));
        tmp388 = simd_and(sequence_e1_9d_adv, cc_range_1754_1774_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp388);
        byte_9f = simd_and(tmp40, tmp13);
        sequence_e1_9f = simd_and(byte_e1_adv, byte_9f);
        tmp389 = simd_and(tmp59, tmp75);
        tmp390 = simd_or(tmp361, tmp389);
        tmp391 = simd_and(tmp78, tmp75);
        cc_range_17de_17fa_3 = simd_or(tmp390, tmp391);
        carryQ.cq[57] = carryout2carry(pablo_blk_Advance(sequence_e1_9f, carryQ.get_carry_in(57), sequence_e1_9f_adv));
        tmp392 = simd_and(sequence_e1_9f_adv, cc_range_17de_17fa_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp392);
        sequence_e1_a0 = simd_and(byte_e1_adv, byte_a0);
        cc_range_180f_181a_3 = simd_or(byte_8f, byte_range_9a_9f);
        carryQ.cq[58] = carryout2carry(pablo_blk_Advance(sequence_e1_a0, carryQ.get_carry_in(58), sequence_e1_a0_adv));
        tmp393 = simd_and(sequence_e1_a0_adv, cc_range_180f_181a_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp393);
        sequence_e1_a1 = simd_and(byte_e1_adv, byte_a1);
        byte_range_b8_bf = simd_and(tmp9, basis_bits.bit_4);
        carryQ.cq[59] = carryout2carry(pablo_blk_Advance(sequence_e1_a1, carryQ.get_carry_in(59), sequence_e1_a1_adv));
        tmp394 = simd_and(sequence_e1_a1_adv, byte_range_b8_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp394);
        sequence_e1_a2 = simd_and(byte_e1_adv, byte_a2);
        byte_range_ab_af = simd_and(tmp59, tmp60);
        carryQ.cq[60] = carryout2carry(pablo_blk_Advance(sequence_e1_a2, carryQ.get_carry_in(60), sequence_e1_a2_adv));
        tmp395 = simd_and(sequence_e1_a2_adv, byte_range_ab_af);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp395);
        sequence_e1_a3 = simd_and(byte_e1_adv, byte_a3);
        byte_range_b6_bf = simd_and(tmp9, tmp169);
        carryQ.cq[61] = carryout2carry(pablo_blk_Advance(sequence_e1_a3, carryQ.get_carry_in(61), sequence_e1_a3_adv));
        tmp396 = simd_and(sequence_e1_a3_adv, byte_range_b6_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp396);
        byte_a4 = simd_and(tmp25, tmp33);
        sequence_e1_a4 = simd_and(byte_e1_adv, byte_a4);
        tmp397 = simd_and(tmp25, tmp4);
        tmp398 = simd_or(byte_range_9d_9f, tmp397);
        cc_range_191d_193c_3 = simd_or(tmp398, tmp143);
        carryQ.cq[62] = carryout2carry(pablo_blk_Advance(sequence_e1_a4, carryQ.get_carry_in(62), sequence_e1_a4_adv));
        tmp399 = simd_and(sequence_e1_a4_adv, cc_range_191d_193c_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp399);
        sequence_e1_a5 = simd_and(byte_e1_adv, byte_a5);
        tmp400 = simd_andc(tmp18, tmp19);
        tmp401 = simd_and(tmp400, tmp32);
        tmp402 = simd_or(tmp401, tmp83);
        cc_range_1941_1975_3 = simd_or(tmp402, byte_range_b5_bf);
        carryQ.cq[63] = carryout2carry(pablo_blk_Advance(sequence_e1_a5, carryQ.get_carry_in(63), sequence_e1_a5_adv));
        tmp403 = simd_and(sequence_e1_a5_adv, cc_range_1941_1975_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp403);
        sequence_e1_a6 = simd_and(byte_e1_adv, byte_a6);
        byte_range_ac_af = simd_and(tmp25, tmp4);
        carryQ.cq[64] = carryout2carry(pablo_blk_Advance(sequence_e1_a6, carryQ.get_carry_in(64), sequence_e1_a6_adv));
        tmp404 = simd_and(sequence_e1_a6_adv, byte_range_ac_af);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp404);
        sequence_e1_a7 = simd_and(byte_e1_adv, byte_a7);
        tmp405 = simd_and(tmp51, tmp75);
        tmp406 = simd_and(tmp260, tmp122);
        cc_range_19ca_19db_3 = simd_or(tmp405, tmp406);
        carryQ.cq[65] = carryout2carry(pablo_blk_Advance(sequence_e1_a7, carryQ.get_carry_in(65), sequence_e1_a7_adv));
        tmp407 = simd_and(sequence_e1_a7_adv, cc_range_19ca_19db_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp407);
        sequence_e1_a8 = simd_and(byte_e1_adv, byte_a8);
        byte_range_9c_9d = simd_and(tmp40, tmp87);
        carryQ.cq[66] = carryout2carry(pablo_blk_Advance(sequence_e1_a8, carryQ.get_carry_in(66), sequence_e1_a8_adv));
        tmp408 = simd_and(sequence_e1_a8_adv, byte_range_9c_9d);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp408);
        sequence_e1_a9 = simd_and(byte_e1_adv, byte_a9);
        tmp409 = simd_and(tmp143, tmp109);
        cc_range_1a5f_1a7d_3 = simd_or(byte_9f, tmp409);
        carryQ.cq[67] = carryout2carry(pablo_blk_Advance(sequence_e1_a9, carryQ.get_carry_in(67), sequence_e1_a9_adv));
        tmp410 = simd_and(sequence_e1_a9_adv, cc_range_1a5f_1a7d_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp410);
        sequence_e1_aa = simd_and(byte_e1_adv, byte_aa);
        tmp411 = simd_andc(tmp2, tmp29);
        tmp412 = simd_andc(tmp7, tmp411);
        tmp413 = simd_and(basis_bits.bit_4, tmp412);
        tmp414 = simd_and(tmp75, tmp413);
        tmp415 = simd_or(basis_bits.bit_3, tmp82);
        tmp416 = simd_and(tmp34, tmp415);
        cc_range_1a8a_1aae_3 = simd_or(tmp414, tmp416);
        carryQ.cq[68] = carryout2carry(pablo_blk_Advance(sequence_e1_aa, carryQ.get_carry_in(68), sequence_e1_aa_adv));
        tmp417 = simd_and(sequence_e1_aa_adv, cc_range_1a8a_1aae_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp417);
        sequence_e1_ab = simd_and(byte_e1_adv, byte_ab);
        byte_range_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        carryQ.cq[69] = carryout2carry(pablo_blk_Advance(sequence_e1_ab, carryQ.get_carry_in(69), sequence_e1_ab_adv));
        tmp418 = simd_and(sequence_e1_ab_adv, byte_range_80_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp418);
        tmp419 = simd_and(byte_range_80_bf, tmp24);
        sequence_e1_ad = simd_and(byte_e1_adv, byte_ad);
        tmp420 = simd_andc(byte_range_80_bf, tmp2);
        tmp421 = simd_and(tmp420, tmp4);
        tmp422 = simd_and(byte_range_80_bf, tmp8);
        tmp423 = simd_and(tmp422, tmp4);
        tmp424 = simd_and(tmp423, tmp32);
        cc_range_1b4c_1b7d_3 = simd_or(tmp421, tmp424);
        carryQ.cq[70] = carryout2carry(pablo_blk_Advance(sequence_e1_ad, carryQ.get_carry_in(70), sequence_e1_ad_adv));
        tmp425 = simd_and(sequence_e1_ad_adv, cc_range_1b4c_1b7d_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp425);
        sequence_e1_af = simd_and(byte_e1_adv, byte_af);
        tmp426 = simd_not(basis_bits.bit_5);
        tmp427 = simd_or(simd_and(basis_bits.bit_4, tmp426), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
        byte_range_b4_bb = simd_and(tmp422, tmp427);
        carryQ.cq[71] = carryout2carry(pablo_blk_Advance(sequence_e1_af, carryQ.get_carry_in(71), sequence_e1_af_adv));
        tmp428 = simd_and(sequence_e1_af_adv, byte_range_b4_bb);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp428);
        sequence_e1_b0 = simd_and(byte_e1_adv, byte_b0);
        tmp429 = simd_and(tmp422, tmp10);
        byte_range_b8_ba = simd_andc(tmp429, tmp12);
        carryQ.cq[72] = carryout2carry(pablo_blk_Advance(sequence_e1_b0, carryQ.get_carry_in(72), sequence_e1_b0_adv));
        tmp430 = simd_and(sequence_e1_b0_adv, byte_range_b8_ba);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp430);
        sequence_e1_b1 = simd_and(byte_e1_adv, byte_b1);
        tmp431 = simd_and(tmp420, basis_bits.bit_4);
        byte_range_8a_8c = simd_and(tmp431, tmp249);
        carryQ.cq[73] = carryout2carry(pablo_blk_Advance(sequence_e1_b1, carryQ.get_carry_in(73), sequence_e1_b1_adv));
        tmp432 = simd_and(sequence_e1_b1_adv, byte_range_8a_8c);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp432);
        sequence_e1_b2 = simd_and(byte_e1_adv, byte_b2);
        carryQ.cq[74] = carryout2carry(pablo_blk_Advance(sequence_e1_b2, carryQ.get_carry_in(74), sequence_e1_b2_adv));
        tmp433 = simd_and(sequence_e1_b2_adv, byte_range_80_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp433);
        sequence_e1_b3 = simd_and(byte_e1_adv, byte_b3);
        tmp434 = simd_and(tmp422, tmp131);
        cc_range_1cc8_1cf7_3 = simd_or(tmp431, tmp434);
        carryQ.cq[75] = carryout2carry(pablo_blk_Advance(sequence_e1_b3, carryQ.get_carry_in(75), sequence_e1_b3_adv));
        tmp435 = simd_and(sequence_e1_b3_adv, cc_range_1cc8_1cf7_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp435);
        sequence_e1_b7 = simd_and(byte_e1_adv, byte_b7);
        tmp436 = simd_and(byte_range_80_bf, basis_bits.bit_2);
        tmp437 = simd_not(tmp4);
        tmp438 = simd_or(simd_and(basis_bits.bit_3, tmp437), simd_andc(tmp131, basis_bits.bit_3));
        byte_range_a7_bb = simd_and(tmp436, tmp438);
        carryQ.cq[76] = carryout2carry(pablo_blk_Advance(sequence_e1_b7, carryQ.get_carry_in(76), sequence_e1_b7_adv));
        tmp439 = simd_and(sequence_e1_b7_adv, byte_range_a7_bb);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp439);
        byte_bc = simd_and(tmp422, tmp70);
        sequence_e1_bc = simd_and(byte_e1_adv, byte_bc);
        tmp440 = simd_and(byte_range_80_bf, tmp29);
        tmp441 = simd_and(basis_bits.bit_6, basis_bits.bit_5);
        cc_range_1f16_1f1e_3 = simd_and(tmp440, tmp441);
        carryQ.cq[77] = carryout2carry(pablo_blk_Advance(sequence_e1_bc, carryQ.get_carry_in(77), sequence_e1_bc_adv));
        tmp442 = simd_and(sequence_e1_bc_adv, cc_range_1f16_1f1e_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp442);
        sequence_e1_bd = simd_and(byte_e1_adv, byte_bd);
        tmp443 = simd_and(tmp420, tmp441);
        tmp444 = simd_and(tmp440, tmp49);
        tmp445 = simd_or(tmp443, tmp444);
        tmp446 = simd_and(tmp440, tmp177);
        tmp447 = simd_or(tmp445, tmp446);
        tmp448 = simd_and(tmp440, tmp70);
        tmp449 = simd_or(tmp447, tmp448);
        tmp450 = simd_and(tmp440, tmp17);
        tmp451 = simd_or(tmp449, tmp450);
        tmp452 = simd_and(tmp422, tmp82);
        cc_range_1f46_1f7e_3 = simd_or(tmp451, tmp452);
        carryQ.cq[78] = carryout2carry(pablo_blk_Advance(sequence_e1_bd, carryQ.get_carry_in(78), sequence_e1_bd_adv));
        tmp453 = simd_and(sequence_e1_bd_adv, cc_range_1f46_1f7e_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp453);
        sequence_e1_be = simd_and(byte_e1_adv, byte_be);
        carryQ.cq[79] = carryout2carry(pablo_blk_Advance(sequence_e1_be, carryQ.get_carry_in(79), sequence_e1_be_adv));
        tmp454 = simd_and(sequence_e1_be_adv, byte_b5);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp454);
        sequence_e1_bf = simd_and(byte_e1_adv, byte_bf);
        tmp455 = simd_and(tmp420, tmp39);
        tmp456 = simd_and(tmp440, tmp140);
        tmp457 = simd_or(tmp455, tmp456);
        tmp458 = simd_or(tmp457, tmp448);
        tmp459 = simd_andc(tmp422, tmp206);
        tmp460 = simd_or(tmp458, tmp459);
        tmp461 = simd_and(tmp422, tmp39);
        tmp462 = simd_or(tmp460, tmp461);
        tmp463 = simd_and(tmp422, tmp13);
        cc_range_1fc5_1fff_3 = simd_or(tmp462, tmp463);
        carryQ.cq[80] = carryout2carry(pablo_blk_Advance(sequence_e1_bf, carryQ.get_carry_in(80), sequence_e1_bf_adv));
        tmp464 = simd_and(sequence_e1_bf_adv, cc_range_1fc5_1fff_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp464);
        byte_e2 = simd_and(tmp80, tmp26);
        byte_81 = simd_and(tmp420, tmp86);
        carryQ.cq[81] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(81), tmp465));
        sequence_e2_81 = simd_and(tmp465, byte_81);
        carryQ.cq[82] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(82), byte_e2_adv));
        tmp466 = simd_and(tmp419, tmp39);
        tmp467 = simd_andc(basis_bits.bit_6, tmp19);
        tmp468 = simd_and(tmp422, tmp467);
        cc_range_2065_2072_3 = simd_or(tmp466, tmp468);
        carryQ.cq[83] = carryout2carry(pablo_blk_Advance(sequence_e2_81, carryQ.get_carry_in(83), sequence_e2_81_adv));
        tmp469 = simd_and(sequence_e2_81_adv, cc_range_2065_2072_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp469);
        byte_82 = simd_and(tmp420, tmp26);
        sequence_e2_82 = simd_and(byte_e2_adv, byte_82);
        tmp470 = simd_and(tmp420, tmp13);
        tmp471 = simd_and(tmp440, tmp4);
        tmp472 = simd_and(tmp471, tmp32);
        tmp473 = simd_or(tmp470, tmp472);
        tmp474 = simd_and(tmp422, basis_bits.bit_4);
        tmp475 = simd_and(tmp474, tmp60);
        cc_range_208f_20bb_3 = simd_or(tmp473, tmp475);
        carryQ.cq[84] = carryout2carry(pablo_blk_Advance(sequence_e2_82, carryQ.get_carry_in(84), sequence_e2_82_adv));
        tmp476 = simd_and(sequence_e2_82_adv, cc_range_208f_20bb_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp476);
        sequence_e2_83 = simd_and(byte_e2_adv, byte_83);
        tmp477 = simd_and(tmp422, tmp189);
        cc_range_20c0_20f1_3 = simd_or(tmp420, tmp477);
        carryQ.cq[85] = carryout2carry(pablo_blk_Advance(sequence_e2_83, carryQ.get_carry_in(85), sequence_e2_83_adv));
        tmp478 = simd_and(sequence_e2_83_adv, cc_range_20c0_20f1_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp478);
        byte_86 = simd_and(tmp420, tmp48);
        sequence_e2_86 = simd_and(byte_e2_adv, byte_86);
        byte_range_8a_8f = simd_and(tmp431, tmp75);
        carryQ.cq[86] = carryout2carry(pablo_blk_Advance(sequence_e2_86, carryQ.get_carry_in(86), sequence_e2_86_adv));
        tmp479 = simd_and(sequence_e2_86_adv, byte_range_8a_8f);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp479);
        sequence_e2_8f = simd_and(byte_e2_adv, byte_8f);
        byte_range_b4_bf = simd_and(tmp422, tmp19);
        carryQ.cq[87] = carryout2carry(pablo_blk_Advance(sequence_e2_8f, carryQ.get_carry_in(87), sequence_e2_8f_adv));
        tmp480 = simd_and(sequence_e2_8f_adv, byte_range_b4_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp480);
        byte_90 = simd_andc(tmp440, tmp35);
        sequence_e2_90 = simd_and(byte_e2_adv, byte_90);
        tmp481 = simd_or(basis_bits.bit_3, tmp131);
        byte_range_a7_bf = simd_and(tmp436, tmp481);
        carryQ.cq[88] = carryout2carry(pablo_blk_Advance(sequence_e2_90, carryQ.get_carry_in(88), sequence_e2_90_adv));
        tmp482 = simd_and(sequence_e2_90_adv, byte_range_a7_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp482);
        byte_91 = simd_and(tmp440, tmp86);
        sequence_e2_91 = simd_and(byte_e2_adv, byte_91);
        tmp483 = simd_andc(byte_range_80_bf, basis_bits.bit_2);
        tmp484 = simd_or(basis_bits.bit_3, tmp346);
        byte_range_8b_9f = simd_and(tmp483, tmp484);
        carryQ.cq[89] = carryout2carry(pablo_blk_Advance(sequence_e2_91, carryQ.get_carry_in(89), sequence_e2_91_adv));
        tmp485 = simd_and(sequence_e2_91_adv, byte_range_8b_9f);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp485);
        sequence_e2_9c = simd_and(byte_e2_adv, byte_9c);
        byte_80 = simd_andc(tmp420, tmp35);
        carryQ.cq[90] = carryout2carry(pablo_blk_Advance(sequence_e2_9c, carryQ.get_carry_in(90), sequence_e2_9c_adv));
        tmp486 = simd_and(sequence_e2_9c_adv, byte_80);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp486);
        sequence_e2_ad = simd_and(byte_e2_adv, byte_ad);
        tmp487 = simd_and(tmp421, tmp32);
        tmp488 = simd_and(basis_bits.bit_4, tmp75);
        tmp489 = simd_and(basis_bits.bit_3, tmp488);
        tmp490 = simd_or(basis_bits.bit_2, tmp489);
        tmp491 = simd_and(byte_range_80_bf, tmp490);
        cc_range_2b4d_2b5a_3 = simd_or(tmp487, tmp491);
        carryQ.cq[91] = carryout2carry(pablo_blk_Advance(sequence_e2_ad, carryQ.get_carry_in(91), sequence_e2_ad_adv));
        tmp492 = simd_and(sequence_e2_ad_adv, cc_range_2b4d_2b5a_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp492);
        byte_range_ae_af = simd_and(tmp419, tmp82);
        byte_e2_byte_range_ae_af = simd_and(byte_e2_adv, byte_range_ae_af);
        carryQ.cq[92] = carryout2carry(pablo_blk_Advance(byte_e2_byte_range_ae_af, carryQ.get_carry_in(92), tmp493));
        byte_e2_byte_range_ae_af_sfx = simd_and(tmp493, byte_range_80_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, byte_e2_byte_range_ae_af_sfx);
        sequence_e2_b0 = simd_and(byte_e2_adv, byte_b0);
        carryQ.cq[93] = carryout2carry(pablo_blk_Advance(sequence_e2_b0, carryQ.get_carry_in(93), tmp494));
        sequence_e2_b0_af = simd_and(tmp494, byte_af);
        sequence_e2_b1 = simd_and(byte_e2_adv, byte_b1);
        carryQ.cq[94] = carryout2carry(pablo_blk_Advance(sequence_e2_b1, carryQ.get_carry_in(94), tmp495));
        sequence_e2_b1_9f = simd_and(tmp495, byte_9f);
        sequence_e2_b3 = simd_and(byte_e2_adv, byte_b3);
        tmp496 = simd_or(simd_and(basis_bits.bit_4, tmp42), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
        byte_range_b4_b8 = simd_and(tmp422, tmp496);
        carryQ.cq[95] = carryout2carry(pablo_blk_Advance(sequence_e2_b3, carryQ.get_carry_in(95), tmp497));
        sequence_e2_b3_byte_range_b4_b8 = simd_and(tmp497, byte_range_b4_b8);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_e2_b3_byte_range_b4_b8);
        sequence_e2_b4 = simd_and(byte_e2_adv, byte_b4);
        carryQ.cq[96] = carryout2carry(pablo_blk_Advance(sequence_e2_b4, carryQ.get_carry_in(96), tmp498));
        sequence_e2_b4_a6 = simd_and(tmp498, byte_a6);
        sequence_e2_b5 = simd_and(byte_e2_adv, byte_b5);
        tmp499 = simd_and(tmp419, basis_bits.bit_4);
        byte_range_a8_ae = simd_andc(tmp499, tmp43);
        carryQ.cq[97] = carryout2carry(pablo_blk_Advance(sequence_e2_b5, carryQ.get_carry_in(97), tmp500));
        sequence_e2_b5_byte_range_a8_ae = simd_and(tmp500, byte_range_a8_ae);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_e2_b5_byte_range_a8_ae);
        sequence_e2_b6 = simd_and(byte_e2_adv, byte_b6);
        byte_range_97_9f = simd_and(tmp440, tmp131);
        carryQ.cq[98] = carryout2carry(pablo_blk_Advance(sequence_e2_b6, carryQ.get_carry_in(98), tmp501));
        sequence_e2_b6_byte_range_97_9f = simd_and(tmp501, byte_range_97_9f);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_e2_b6_byte_range_97_9f);
        sequence_e2_b7 = simd_and(byte_e2_adv, byte_b7);
        byte_87 = simd_and(tmp420, tmp58);
        carryQ.cq[99] = carryout2carry(pablo_blk_Advance(sequence_e2_b7, carryQ.get_carry_in(99), tmp502));
        sequence_e2_b7_87 = simd_and(tmp502, byte_87);
        sequence_e2_b8 = simd_and(byte_e2_adv, byte_b8);
        byte_range_bc_bf = simd_and(tmp422, tmp4);
        carryQ.cq[100] = carryout2carry(pablo_blk_Advance(sequence_e2_b8, carryQ.get_carry_in(100), tmp503));
        sequence_e2_b8_byte_range_bc_bf = simd_and(tmp503, byte_range_bc_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_e2_b8_byte_range_bc_bf);
        sequence_e2_b9 = simd_and(byte_e2_adv, byte_b9);
        carryQ.cq[101] = carryout2carry(pablo_blk_Advance(sequence_e2_b9, carryQ.get_carry_in(101), tmp504));
        sequence_e2_b9_byte_range_80_bf = simd_and(tmp504, byte_range_80_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_e2_b9_byte_range_80_bf);
        sequence_e2_ba = simd_and(byte_e2_adv, byte_ba);
        carryQ.cq[102] = carryout2carry(pablo_blk_Advance(sequence_e2_ba, carryQ.get_carry_in(102), tmp505));
        sequence_e2_ba_9a = simd_and(tmp505, byte_9a);
        sequence_e2_bb = simd_and(byte_e2_adv, byte_bb);
        carryQ.cq[103] = carryout2carry(pablo_blk_Advance(sequence_e2_bb, carryQ.get_carry_in(103), tmp506));
        sequence_e2_bb_byte_range_b4_bf = simd_and(tmp506, byte_range_b4_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_e2_bb_byte_range_b4_bf);
        sequence_e2_bf = simd_and(byte_e2_adv, byte_bf);
        tmp507 = simd_not(basis_bits.bit_3);
        tmp508 = simd_and(basis_bits.bit_3, tmp169);
        tmp509 = simd_or(simd_and(basis_bits.bit_2, tmp507), simd_andc(tmp508, basis_bits.bit_2));
        byte_range_96_af = simd_and(byte_range_80_bf, tmp509);
        carryQ.cq[104] = carryout2carry(pablo_blk_Advance(sequence_e2_bf, carryQ.get_carry_in(104), tmp510));
        sequence_e2_bf_byte_range_96_af = simd_and(tmp510, byte_range_96_af);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_e2_bf_byte_range_96_af);
        byte_e3 = simd_and(tmp80, tmp99);
        carryQ.cq[105] = carryout2carry(pablo_blk_Advance(byte_e3, carryQ.get_carry_in(105), tmp511));
        sequence_e3_81 = simd_and(tmp511, byte_81);
        carryQ.cq[106] = carryout2carry(pablo_blk_Advance(byte_e3, carryQ.get_carry_in(106), byte_e3_adv));
        carryQ.cq[107] = carryout2carry(pablo_blk_Advance(sequence_e3_81, carryQ.get_carry_in(107), sequence_e3_81_adv));
        tmp512 = simd_and(sequence_e3_81_adv, byte_80);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp512);
        sequence_e3_82 = simd_and(byte_e3_adv, byte_82);
        byte_range_97_98 = simd_and(tmp440, tmp44);
        carryQ.cq[108] = carryout2carry(pablo_blk_Advance(sequence_e3_82, carryQ.get_carry_in(108), sequence_e3_82_adv));
        tmp513 = simd_and(sequence_e3_82_adv, byte_range_97_98);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp513);
        byte_84 = simd_and(tmp420, tmp33);
        sequence_e3_84 = simd_and(byte_e3_adv, byte_84);
        tmp514 = simd_andc(tmp420, basis_bits.bit_4);
        tmp515 = simd_andc(tmp514, tmp63);
        tmp516 = simd_and(tmp436, tmp161);
        cc_range_3100_312e_3 = simd_or(tmp515, tmp516);
        carryQ.cq[109] = carryout2carry(pablo_blk_Advance(sequence_e3_84, carryQ.get_carry_in(109), sequence_e3_84_adv));
        tmp517 = simd_and(sequence_e3_84_adv, cc_range_3100_312e_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp517);
        sequence_e3_86 = simd_and(byte_e3_adv, byte_86);
        cc_range_318f_31bb_3 = simd_or(tmp470, tmp475);
        carryQ.cq[110] = carryout2carry(pablo_blk_Advance(sequence_e3_86, carryQ.get_carry_in(110), sequence_e3_86_adv));
        tmp518 = simd_and(sequence_e3_86_adv, cc_range_318f_31bb_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp518);
        sequence_e3_87 = simd_and(byte_e3_adv, byte_87);
        byte_range_a4_af = simd_and(tmp419, tmp19);
        carryQ.cq[111] = carryout2carry(pablo_blk_Advance(sequence_e3_87, carryQ.get_carry_in(111), sequence_e3_87_adv));
        tmp519 = simd_and(sequence_e3_87_adv, byte_range_a4_af);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp519);
        byte_88 = simd_and(tmp420, tmp49);
        sequence_e3_88 = simd_and(byte_e3_adv, byte_88);
        carryQ.cq[112] = carryout2carry(pablo_blk_Advance(sequence_e3_88, carryQ.get_carry_in(112), sequence_e3_88_adv));
        tmp520 = simd_and(sequence_e3_88_adv, byte_9f);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp520);
        sequence_e3_8b = simd_and(byte_e3_adv, byte_8b);
        carryQ.cq[113] = carryout2carry(pablo_blk_Advance(sequence_e3_8b, carryQ.get_carry_in(113), sequence_e3_8b_adv));
        tmp521 = simd_and(sequence_e3_8b_adv, byte_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp521);
        byte_e4 = simd_and(tmp80, tmp33);
        carryQ.cq[114] = carryout2carry(pablo_blk_Advance(byte_e4, carryQ.get_carry_in(114), tmp522));
        sequence_e4_b6 = simd_and(tmp522, byte_b6);
        carryQ.cq[115] = carryout2carry(pablo_blk_Advance(byte_e4, carryQ.get_carry_in(115), byte_e4_adv));
        carryQ.cq[116] = carryout2carry(pablo_blk_Advance(sequence_e4_b6, carryQ.get_carry_in(116), sequence_e4_b6_adv));
        tmp523 = simd_and(sequence_e4_b6_adv, byte_range_b6_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp523);
        byte_e9 = simd_and(tmp80, tmp115);
        carryQ.cq[117] = carryout2carry(pablo_blk_Advance(byte_e9, carryQ.get_carry_in(117), tmp524));
        sequence_e9_bf = simd_and(tmp524, byte_bf);
        carryQ.cq[118] = carryout2carry(pablo_blk_Advance(byte_e9, carryQ.get_carry_in(118), byte_e9_adv));
        tmp525 = simd_or(basis_bits.bit_2, tmp96);
        byte_range_8d_bf = simd_and(byte_range_80_bf, tmp525);
        carryQ.cq[119] = carryout2carry(pablo_blk_Advance(sequence_e9_bf, carryQ.get_carry_in(119), sequence_e9_bf_adv));
        tmp526 = simd_and(sequence_e9_bf_adv, byte_range_8d_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp526);
        byte_ea = simd_and(tmp80, tmp177);
        byte_92 = simd_and(tmp440, tmp26);
        carryQ.cq[120] = carryout2carry(pablo_blk_Advance(byte_ea, carryQ.get_carry_in(120), tmp527));
        sequence_ea_92 = simd_and(tmp527, byte_92);
        carryQ.cq[121] = carryout2carry(pablo_blk_Advance(byte_ea, carryQ.get_carry_in(121), byte_ea_adv));
        byte_range_8d_8f = simd_and(tmp421, tmp32);
        carryQ.cq[122] = carryout2carry(pablo_blk_Advance(sequence_ea_92, carryQ.get_carry_in(122), sequence_ea_92_adv));
        tmp528 = simd_and(sequence_ea_92_adv, byte_range_8d_8f);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp528);
        byte_93 = simd_and(tmp440, tmp99);
        sequence_ea_93 = simd_and(byte_ea_adv, byte_93);
        byte_range_87_8f = simd_and(tmp420, tmp131);
        carryQ.cq[123] = carryout2carry(pablo_blk_Advance(sequence_ea_93, carryQ.get_carry_in(123), sequence_ea_93_adv));
        tmp529 = simd_and(sequence_ea_93_adv, byte_range_87_8f);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp529);
        byte_98 = simd_and(tmp440, tmp49);
        sequence_ea_98 = simd_and(byte_ea_adv, byte_98);
        tmp530 = simd_or(basis_bits.bit_3, tmp4);
        byte_range_ac_bf = simd_and(tmp436, tmp530);
        carryQ.cq[124] = carryout2carry(pablo_blk_Advance(sequence_ea_98, carryQ.get_carry_in(124), sequence_ea_98_adv));
        tmp531 = simd_and(sequence_ea_98_adv, byte_range_ac_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp531);
        sequence_ea_9a = simd_and(byte_ea_adv, byte_9a);
        tmp532 = simd_and(tmp440, basis_bits.bit_4);
        byte_range_98_9e = simd_andc(tmp532, tmp43);
        carryQ.cq[125] = carryout2carry(pablo_blk_Advance(sequence_ea_9a, carryQ.get_carry_in(125), sequence_ea_9a_adv));
        tmp533 = simd_and(sequence_ea_9a_adv, byte_range_98_9e);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp533);
        sequence_ea_9b = simd_and(byte_ea_adv, byte_9b);
        carryQ.cq[126] = carryout2carry(pablo_blk_Advance(sequence_ea_9b, carryQ.get_carry_in(126), sequence_ea_9b_adv));
        tmp534 = simd_and(sequence_ea_9b_adv, byte_range_b8_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp534);
        byte_9e = simd_and(tmp440, tmp17);
        sequence_ea_9e = simd_and(byte_ea_adv, byte_9e);
        tmp535 = simd_and(tmp440, tmp19);
        tmp536 = simd_or(tmp470, tmp535);
        tmp537 = simd_and(tmp436, tmp484);
        cc_range_a78f_a7ab_3 = simd_or(tmp536, tmp537);
        carryQ.cq[127] = carryout2carry(pablo_blk_Advance(sequence_ea_9e, carryQ.get_carry_in(127), sequence_ea_9e_adv));
        tmp538 = simd_and(sequence_ea_9e_adv, cc_range_a78f_a7ab_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp538);
        sequence_ea_9f = simd_and(byte_ea_adv, byte_9f);
        tmp539 = simd_and(basis_bits.bit_2, tmp239);
        byte_range_80_b7 = simd_andc(byte_range_80_bf, tmp539);
        carryQ.cq[128] = carryout2carry(pablo_blk_Advance(sequence_ea_9f, carryQ.get_carry_in(128), sequence_ea_9f_adv));
        tmp540 = simd_and(sequence_ea_9f_adv, byte_range_80_b7);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp540);
        sequence_ea_a0 = simd_and(byte_ea_adv, byte_a0);
        tmp541 = simd_and(tmp419, tmp4);
        tmp542 = simd_and(tmp474, tmp75);
        cc_range_a82c_a83a_3 = simd_or(tmp541, tmp542);
        carryQ.cq[129] = carryout2carry(pablo_blk_Advance(sequence_ea_a0, carryQ.get_carry_in(129), sequence_ea_a0_adv));
        tmp543 = simd_and(sequence_ea_a0_adv, cc_range_a82c_a83a_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp543);
        sequence_ea_a1 = simd_and(byte_ea_adv, byte_a1);
        carryQ.cq[130] = carryout2carry(pablo_blk_Advance(sequence_ea_a1, carryQ.get_carry_in(130), sequence_ea_a1_adv));
        tmp544 = simd_and(sequence_ea_a1_adv, byte_range_b8_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp544);
        sequence_ea_a3 = simd_and(byte_ea_adv, byte_a3);
        tmp545 = simd_or(simd_and(basis_bits.bit_4, tmp271), simd_andc(tmp63, basis_bits.bit_4));
        tmp546 = simd_and(tmp420, tmp545);
        tmp547 = simd_and(tmp532, tmp75);
        tmp548 = simd_or(tmp546, tmp547);
        cc_range_a8c5_a8fc_3 = simd_or(tmp548, byte_range_bc_bf);
        carryQ.cq[131] = carryout2carry(pablo_blk_Advance(sequence_ea_a3, carryQ.get_carry_in(131), sequence_ea_a3_adv));
        tmp549 = simd_and(sequence_ea_a3_adv, cc_range_a8c5_a8fc_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp549);
        sequence_ea_a5 = simd_and(byte_ea_adv, byte_a5);
        tmp550 = simd_not(tmp43);
        tmp551 = simd_or(simd_and(basis_bits.bit_4, tmp550), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
        tmp552 = simd_and(tmp440, tmp551);
        tmp553 = simd_and(byte_range_bc_bf, tmp32);
        cc_range_a954_a97d_3 = simd_or(tmp552, tmp553);
        carryQ.cq[132] = carryout2carry(pablo_blk_Advance(sequence_ea_a5, carryQ.get_carry_in(132), sequence_ea_a5_adv));
        tmp554 = simd_and(sequence_ea_a5_adv, cc_range_a954_a97d_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp554);
        sequence_ea_a7 = simd_and(byte_ea_adv, byte_a7);
        tmp555 = simd_and(tmp420, tmp17);
        tmp556 = simd_and(tmp532, tmp227);
        tmp557 = simd_or(tmp555, tmp556);
        cc_range_a9ce_a9e0_3 = simd_or(tmp557, tmp436);
        carryQ.cq[133] = carryout2carry(pablo_blk_Advance(sequence_ea_a7, carryQ.get_carry_in(133), sequence_ea_a7_adv));
        tmp558 = simd_and(sequence_ea_a7_adv, cc_range_a9ce_a9e0_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp558);
        sequence_ea_a8 = simd_and(byte_ea_adv, byte_a8);
        byte_range_b7_bf = simd_and(tmp422, tmp131);
        carryQ.cq[134] = carryout2carry(pablo_blk_Advance(sequence_ea_a8, carryQ.get_carry_in(134), sequence_ea_a8_adv));
        tmp559 = simd_and(sequence_ea_a8_adv, byte_range_b7_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp559);
        sequence_ea_a9 = simd_and(byte_ea_adv, byte_a9);
        tmp560 = simd_and(tmp420, tmp82);
        tmp561 = simd_and(tmp440, tmp125);
        tmp562 = simd_or(tmp560, tmp561);
        cc_range_aa4e_aa7c_3 = simd_or(tmp562, byte_range_bc_bf);
        carryQ.cq[135] = carryout2carry(pablo_blk_Advance(sequence_ea_a9, carryQ.get_carry_in(135), sequence_ea_a9_adv));
        tmp563 = simd_and(sequence_ea_a9_adv, cc_range_aa4e_aa7c_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp563);
        sequence_ea_ab = simd_and(byte_ea_adv, byte_ab);
        tmp564 = simd_not(tmp346);
        tmp565 = simd_or(tmp19, tmp12);
        tmp566 = simd_or(simd_and(basis_bits.bit_3, tmp564), simd_andc(tmp565, basis_bits.bit_3));
        tmp567 = simd_and(tmp483, tmp566);
        cc_range_aac3_aaf7_3 = simd_or(tmp567, byte_range_b7_bf);
        carryQ.cq[136] = carryout2carry(pablo_blk_Advance(sequence_ea_ab, carryQ.get_carry_in(136), sequence_ea_ab_adv));
        tmp568 = simd_and(sequence_ea_ab_adv, cc_range_aac3_aaf7_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp568);
        sequence_ea_ac = simd_and(byte_ea_adv, byte_ac);
        tmp569 = simd_andc(tmp35, tmp44);
        tmp570 = simd_andc(tmp420, tmp569);
        tmp571 = simd_or(simd_and(basis_bits.bit_3, tmp36), simd_andc(tmp13, basis_bits.bit_3));
        tmp572 = simd_and(tmp483, tmp571);
        tmp573 = simd_or(tmp570, tmp572);
        tmp574 = simd_or(tmp573, byte_range_97_9f);
        tmp575 = simd_and(tmp419, tmp58);
        tmp576 = simd_or(tmp574, tmp575);
        tmp577 = simd_or(basis_bits.bit_3, tmp13);
        tmp578 = simd_and(tmp436, tmp577);
        cc_range_ab00_ab2f_3 = simd_or(tmp576, tmp578);
        carryQ.cq[137] = carryout2carry(pablo_blk_Advance(sequence_ea_ac, carryQ.get_carry_in(137), sequence_ea_ac_adv));
        tmp579 = simd_and(sequence_ea_ac_adv, cc_range_ab00_ab2f_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp579);
        byte_range_ad_ae = simd_and(tmp541, tmp109);
        byte_ea_byte_range_ad_ae = simd_and(byte_ea_adv, byte_range_ad_ae);
        carryQ.cq[138] = carryout2carry(pablo_blk_Advance(byte_ea_byte_range_ad_ae, carryQ.get_carry_in(138), tmp580));
        byte_ea_byte_range_ad_ae_sfx = simd_and(tmp580, byte_range_80_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, byte_ea_byte_range_ad_ae_sfx);
        sequence_ea_af = simd_and(byte_ea_adv, byte_af);
        carryQ.cq[139] = carryout2carry(pablo_blk_Advance(sequence_ea_af, carryQ.get_carry_in(139), tmp581));
        sequence_ea_af_byte_range_ae_af = simd_and(tmp581, byte_range_ae_af);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_ea_af_byte_range_ae_af);
        byte_ed = simd_and(tmp80, tmp6);
        carryQ.cq[140] = carryout2carry(pablo_blk_Advance(byte_ed, carryQ.get_carry_in(140), tmp582));
        sequence_ed_9e = simd_and(tmp582, byte_9e);
        carryQ.cq[141] = carryout2carry(pablo_blk_Advance(byte_ed, carryQ.get_carry_in(141), byte_ed_adv));
        carryQ.cq[142] = carryout2carry(pablo_blk_Advance(sequence_ed_9e, carryQ.get_carry_in(142), sequence_ed_9e_adv));
        tmp583 = simd_and(sequence_ed_9e_adv, byte_range_a4_af);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp583);
        sequence_ed_9f = simd_and(byte_ed_adv, byte_9f);
        tmp584 = simd_not(tmp60);
        tmp585 = simd_or(simd_and(basis_bits.bit_4, tmp584), simd_andc(tmp43, basis_bits.bit_4));
        tmp586 = simd_and(tmp420, tmp585);
        cc_range_d7c7_d7fc_3 = simd_or(tmp586, byte_range_bc_bf);
        carryQ.cq[143] = carryout2carry(pablo_blk_Advance(sequence_ed_9f, carryQ.get_carry_in(143), sequence_ed_9f_adv));
        tmp587 = simd_and(sequence_ed_9f_adv, cc_range_d7c7_d7fc_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp587);
        byte_ef = simd_and(tmp80, tmp13);
        carryQ.cq[144] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(144), tmp588));
        sequence_ef_a9 = simd_and(tmp588, byte_a9);
        carryQ.cq[145] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(145), byte_ef_adv));
        carryQ.cq[146] = carryout2carry(pablo_blk_Advance(sequence_ef_a9, carryQ.get_carry_in(146), sequence_ef_a9_adv));
        tmp589 = simd_and(sequence_ef_a9_adv, byte_range_ae_af);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp589);
        sequence_ef_ab = simd_and(byte_ef_adv, byte_ab);
        byte_range_9a_bf = simd_and(byte_range_80_bf, tmp490);
        carryQ.cq[147] = carryout2carry(pablo_blk_Advance(sequence_ef_ab, carryQ.get_carry_in(147), sequence_ef_ab_adv));
        tmp590 = simd_and(sequence_ef_ab_adv, byte_range_9a_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp590);
        sequence_ef_ac = simd_and(byte_ef_adv, byte_ac);
        tmp591 = simd_not(tmp565);
        tmp592 = simd_or(simd_and(basis_bits.bit_3, tmp591), simd_andc(tmp131, basis_bits.bit_3));
        tmp593 = simd_and(tmp483, tmp592);
        tmp594 = simd_andc(tmp532, tmp63);
        tmp595 = simd_or(tmp593, tmp594);
        tmp596 = simd_and(tmp422, tmp58);
        tmp597 = simd_or(tmp595, tmp596);
        tmp598 = simd_and(tmp422, tmp6);
        tmp599 = simd_or(tmp597, tmp598);
        cc_range_fb07_fb3f_3 = simd_or(tmp599, tmp463);
        carryQ.cq[148] = carryout2carry(pablo_blk_Advance(sequence_ef_ac, carryQ.get_carry_in(148), sequence_ef_ac_adv));
        tmp600 = simd_and(sequence_ef_ac_adv, cc_range_fb07_fb3f_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp600);
        sequence_ef_ad = simd_and(byte_ef_adv, byte_ad);
        tmp601 = simd_or(tmp26, tmp39);
        cc_range_fb42_fb45_3 = simd_and(tmp420, tmp601);
        carryQ.cq[149] = carryout2carry(pablo_blk_Advance(sequence_ef_ad, carryQ.get_carry_in(149), sequence_ef_ad_adv));
        tmp602 = simd_and(sequence_ef_ad_adv, cc_range_fb42_fb45_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp602);
        sequence_ef_af = simd_and(byte_ef_adv, byte_af);
        tmp603 = simd_or(simd_and(basis_bits.bit_3, tmp591), simd_andc(tmp206, basis_bits.bit_3));
        byte_range_82_92 = simd_and(tmp483, tmp603);
        carryQ.cq[150] = carryout2carry(pablo_blk_Advance(sequence_ef_af, carryQ.get_carry_in(150), sequence_ef_af_adv));
        tmp604 = simd_and(sequence_ef_af_adv, byte_range_82_92);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp604);
        sequence_ef_b5 = simd_and(byte_ef_adv, byte_b5);
        byte_range_80_8f = simd_andc(byte_range_80_bf, tmp2);
        carryQ.cq[151] = carryout2carry(pablo_blk_Advance(sequence_ef_b5, carryQ.get_carry_in(151), sequence_ef_b5_adv));
        tmp605 = simd_and(sequence_ef_b5_adv, byte_range_80_8f);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp605);
        sequence_ef_b6 = simd_and(byte_ef_adv, byte_b6);
        byte_range_90_91 = simd_andc(tmp440, tmp206);
        carryQ.cq[152] = carryout2carry(pablo_blk_Advance(sequence_ef_b6, carryQ.get_carry_in(152), sequence_ef_b6_adv));
        tmp606 = simd_and(sequence_ef_b6_adv, byte_range_90_91);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp606);
        sequence_ef_b7 = simd_and(byte_ef_adv, byte_b7);
        tmp607 = simd_or(basis_bits.bit_3, basis_bits.bit_4);
        tmp608 = simd_or(simd_and(basis_bits.bit_2, tmp507), simd_andc(tmp607, basis_bits.bit_2));
        tmp609 = simd_and(byte_range_80_bf, tmp608);
        cc_range_fdc8_fdfe_3 = simd_or(tmp609, tmp452);
        carryQ.cq[153] = carryout2carry(pablo_blk_Advance(sequence_ef_b7, carryQ.get_carry_in(153), sequence_ef_b7_adv));
        tmp610 = simd_and(sequence_ef_b7_adv, cc_range_fdc8_fdfe_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp610);
        sequence_ef_b8 = simd_and(byte_ef_adv, byte_b8);
        tmp611 = simd_and(tmp419, tmp131);
        cc_range_fe1a_fe27_3 = simd_or(tmp547, tmp611);
        carryQ.cq[154] = carryout2carry(pablo_blk_Advance(sequence_ef_b8, carryQ.get_carry_in(154), sequence_ef_b8_adv));
        tmp612 = simd_and(sequence_ef_b8_adv, cc_range_fe1a_fe27_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp612);
        sequence_ef_b9 = simd_and(byte_ef_adv, byte_b9);
        tmp613 = simd_or(byte_93, tmp575);
        tmp614 = simd_or(tmp613, tmp541);
        cc_range_fe53_fe75_3 = simd_or(tmp614, tmp461);
        carryQ.cq[155] = carryout2carry(pablo_blk_Advance(sequence_ef_b9, carryQ.get_carry_in(155), sequence_ef_b9_adv));
        tmp615 = simd_and(sequence_ef_b9_adv, cc_range_fe53_fe75_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp615);
        sequence_ef_bb = simd_and(byte_ef_adv, byte_bb);
        byte_range_bd_be = simd_and(byte_range_bc_bf, tmp109);
        carryQ.cq[156] = carryout2carry(pablo_blk_Advance(sequence_ef_bb, carryQ.get_carry_in(156), sequence_ef_bb_adv));
        tmp616 = simd_and(sequence_ef_bb_adv, byte_range_bd_be);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp616);
        sequence_ef_bc = simd_and(byte_ef_adv, byte_bc);
        carryQ.cq[157] = carryout2carry(pablo_blk_Advance(sequence_ef_bc, carryQ.get_carry_in(157), sequence_ef_bc_adv));
        tmp617 = simd_and(sequence_ef_bc_adv, byte_80);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp617);
        sequence_ef_be = simd_and(byte_ef_adv, byte_be);
        carryQ.cq[158] = carryout2carry(pablo_blk_Advance(sequence_ef_be, carryQ.get_carry_in(158), sequence_ef_be_adv));
        tmp618 = simd_and(sequence_ef_be_adv, byte_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp618);
        sequence_ef_bf = simd_and(byte_ef_adv, byte_bf);
        tmp619 = simd_andc(tmp206, tmp11);
        tmp620 = simd_andc(byte_range_80_8f, tmp619);
        tmp621 = simd_or(tmp620, byte_range_90_91);
        tmp622 = simd_and(tmp440, tmp11);
        tmp623 = simd_or(tmp621, tmp622);
        tmp624 = simd_or(tmp623, tmp472);
        tmp625 = simd_or(tmp624, tmp575);
        tmp626 = simd_and(basis_bits.bit_4, tmp41);
        tmp627 = simd_not(tmp626);
        tmp628 = simd_or(simd_and(basis_bits.bit_3, tmp627), simd_andc(tmp13, basis_bits.bit_3));
        tmp629 = simd_and(tmp436, tmp628);
        tmp630 = simd_or(tmp625, tmp629);
        cc_range_ffc0_fffe_3 = simd_or(tmp630, tmp452);
        carryQ.cq[159] = carryout2carry(pablo_blk_Advance(sequence_ef_bf, carryQ.get_carry_in(159), sequence_ef_bf_adv));
        tmp631 = simd_and(sequence_ef_bf_adv, cc_range_ffc0_fffe_3);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp631);
        tmp632 = simd_and(tmp1, tmp8);
        byte_f0 = simd_andc(tmp632, tmp35);
        carryQ.cq[160] = carryout2carry(pablo_blk_Advance(byte_f0, carryQ.get_carry_in(160), tmp633));
        sequence_f0_90 = simd_and(tmp633, byte_90);
        carryQ.cq[161] = carryout2carry(pablo_blk_Advance(byte_f0, carryQ.get_carry_in(161), byte_f0_adv));
        carryQ.cq[162] = carryout2carry(pablo_blk_Advance(sequence_f0_90, carryQ.get_carry_in(162), tmp634));
        sequence_f0_90_80 = simd_and(tmp634, byte_80);
        carryQ.cq[163] = carryout2carry(pablo_blk_Advance(sequence_f0_90, carryQ.get_carry_in(163), sequence_f0_90_adv));
        tmp635 = simd_and(byte_range_80_8f, tmp70);
        tmp636 = simd_or(tmp635, tmp575);
        tmp637 = simd_and(tmp422, tmp20);
        tmp638 = simd_or(tmp636, tmp637);
        tmp639 = simd_and(tmp422, tmp17);
        cc_range_1000c_1003e_4 = simd_or(tmp638, tmp639);
        carryQ.cq[164] = carryout2carry(pablo_blk_Advance(sequence_f0_90_80, carryQ.get_carry_in(164), sequence_f0_90_80_adv));
        tmp640 = simd_and(sequence_f0_90_80_adv, cc_range_1000c_1003e_4);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp640);
        sequence_f0_90_81 = simd_and(sequence_f0_90_adv, byte_81);
        tmp641 = simd_and(byte_range_80_8f, tmp82);
        tmp642 = simd_and(basis_bits.bit_3, tmp82);
        tmp643 = simd_or(basis_bits.bit_2, tmp642);
        tmp644 = simd_and(byte_range_80_bf, tmp643);
        cc_range_1004e_1005e_4 = simd_or(tmp641, tmp644);
        carryQ.cq[165] = carryout2carry(pablo_blk_Advance(sequence_f0_90_81, carryQ.get_carry_in(165), sequence_f0_90_81_adv));
        tmp645 = simd_and(sequence_f0_90_81_adv, cc_range_1004e_1005e_4);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp645);
        sequence_f0_90_83 = simd_and(sequence_f0_90_adv, byte_83);
        carryQ.cq[166] = carryout2carry(pablo_blk_Advance(sequence_f0_90_83, carryQ.get_carry_in(166), sequence_f0_90_83_adv));
        tmp646 = simd_and(sequence_f0_90_83_adv, byte_range_bb_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp646);
        sequence_f0_90_84 = simd_and(sequence_f0_90_adv, byte_84);
        tmp647 = simd_andc(byte_range_80_8f, basis_bits.bit_4);
        tmp648 = simd_and(tmp647, tmp53);
        tmp649 = simd_and(tmp422, tmp31);
        tmp650 = simd_andc(tmp649, tmp12);
        cc_range_10103_10134_4 = simd_or(tmp648, tmp650);
        carryQ.cq[167] = carryout2carry(pablo_blk_Advance(sequence_f0_90_84, carryQ.get_carry_in(167), sequence_f0_90_84_adv));
        tmp651 = simd_and(sequence_f0_90_84_adv, cc_range_10103_10134_4);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp651);
        sequence_f0_90_86 = simd_and(sequence_f0_90_adv, byte_86);
        tmp652 = simd_and(byte_range_80_8f, basis_bits.bit_4);
        tmp653 = simd_and(tmp652, tmp60);
        tmp654 = simd_and(byte_range_80_bf, tmp311);
        cc_range_1018b_1019c_4 = simd_or(tmp653, tmp654);
        carryQ.cq[168] = carryout2carry(pablo_blk_Advance(sequence_f0_90_86, carryQ.get_carry_in(168), sequence_f0_90_86_adv));
        tmp655 = simd_and(sequence_f0_90_86_adv, cc_range_1018b_1019c_4);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp655);
        sequence_f0_90_87 = simd_and(sequence_f0_90_adv, byte_87);
        cc_range_101c0_101fe_4 = simd_or(byte_range_80_8f, tmp452);
        carryQ.cq[169] = carryout2carry(pablo_blk_Advance(sequence_f0_90_87, carryQ.get_carry_in(169), sequence_f0_90_87_adv));
        tmp656 = simd_and(sequence_f0_90_87_adv, cc_range_101c0_101fe_4);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp656);
        byte_range_88_89 = simd_and(byte_range_80_8f, tmp11);
        sequence_f0_90_byte_range_88_89 = simd_and(sequence_f0_90_adv, byte_range_88_89);
        carryQ.cq[170] = carryout2carry(pablo_blk_Advance(sequence_f0_90_byte_range_88_89, carryQ.get_carry_in(170), tmp657));
        sequence_f0_90_byte_range_88_89_sfx = simd_and(tmp657, byte_range_80_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_90_byte_range_88_89_sfx);
        sequence_f0_90_8a = simd_and(sequence_f0_90_adv, byte_8a);
        carryQ.cq[171] = carryout2carry(pablo_blk_Advance(sequence_f0_90_8a, carryQ.get_carry_in(171), tmp658));
        sequence_f0_90_8a_byte_range_9d_9f = simd_and(tmp658, byte_range_9d_9f);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_90_8a_byte_range_9d_9f);
        sequence_f0_90_8b = simd_and(sequence_f0_90_adv, byte_8b);
        tmp659 = simd_and(basis_bits.bit_3, tmp35);
        tmp660 = simd_or(basis_bits.bit_2, tmp659);
        byte_range_91_bf = simd_and(byte_range_80_bf, tmp660);
        carryQ.cq[172] = carryout2carry(pablo_blk_Advance(sequence_f0_90_8b, carryQ.get_carry_in(172), tmp661));
        sequence_f0_90_8b_byte_range_91_bf = simd_and(tmp661, byte_range_91_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_90_8b_byte_range_91_bf);
        sequence_f0_90_8c = simd_and(sequence_f0_90_adv, byte_8c);
        carryQ.cq[173] = carryout2carry(pablo_blk_Advance(sequence_f0_90_8c, carryQ.get_carry_in(173), tmp662));
        sequence_f0_90_8c_9f = simd_and(tmp662, byte_9f);
        sequence_f0_90_8d = simd_and(sequence_f0_90_adv, byte_8d);
        tmp663 = simd_or(basis_bits.bit_2, tmp484);
        byte_range_8b_bf = simd_and(byte_range_80_bf, tmp663);
        carryQ.cq[174] = carryout2carry(pablo_blk_Advance(sequence_f0_90_8d, carryQ.get_carry_in(174), tmp664));
        sequence_f0_90_8d_byte_range_8b_bf = simd_and(tmp664, byte_range_8b_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_90_8d_byte_range_8b_bf);
        sequence_f0_90_8e = simd_and(sequence_f0_90_adv, byte_8e);
        carryQ.cq[175] = carryout2carry(pablo_blk_Advance(sequence_f0_90_8e, carryQ.get_carry_in(175), tmp665));
        sequence_f0_90_8e_9e = simd_and(tmp665, byte_9e);
        sequence_f0_90_8f = simd_and(sequence_f0_90_adv, byte_8f);
        byte_range_84_87 = simd_and(byte_range_80_8f, tmp31);
        carryQ.cq[176] = carryout2carry(pablo_blk_Advance(sequence_f0_90_8f, carryQ.get_carry_in(176), tmp666));
        sequence_f0_90_8f_byte_range_84_87 = simd_and(tmp666, byte_range_84_87);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_90_8f_byte_range_84_87);
        sequence_f0_90_92 = simd_and(sequence_f0_90_adv, byte_92);
        byte_range_9e_9f = simd_and(tmp440, tmp82);
        carryQ.cq[177] = carryout2carry(pablo_blk_Advance(sequence_f0_90_92, carryQ.get_carry_in(177), tmp667));
        sequence_f0_90_92_byte_range_9e_9f = simd_and(tmp667, byte_range_9e_9f);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_90_92_byte_range_9e_9f);
        sequence_f0_90_93 = simd_and(sequence_f0_90_adv, byte_93);
        carryQ.cq[178] = carryout2carry(pablo_blk_Advance(sequence_f0_90_93, carryQ.get_carry_in(178), tmp668));
        sequence_f0_90_93_byte_range_80_bf = simd_and(tmp668, byte_range_80_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_90_93_byte_range_80_bf);
        sequence_f0_90_a0 = simd_and(sequence_f0_90_adv, byte_a0);
        byte_range_86_87 = simd_and(byte_range_80_8f, tmp364);
        carryQ.cq[179] = carryout2carry(pablo_blk_Advance(sequence_f0_90_a0, carryQ.get_carry_in(179), tmp669));
        sequence_f0_90_a0_byte_range_86_87 = simd_and(tmp669, byte_range_86_87);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_90_a0_byte_range_86_87);
        sequence_f0_90_a1 = simd_and(sequence_f0_90_adv, byte_a1);
        byte_96 = simd_and(tmp440, tmp48);
        carryQ.cq[180] = carryout2carry(pablo_blk_Advance(sequence_f0_90_a1, carryQ.get_carry_in(180), tmp670));
        sequence_f0_90_a1_96 = simd_and(tmp670, byte_96);
        sequence_f0_90_a2 = simd_and(sequence_f0_90_adv, byte_a2);
        carryQ.cq[181] = carryout2carry(pablo_blk_Advance(sequence_f0_90_a2, carryQ.get_carry_in(181), tmp671));
        sequence_f0_90_a2_byte_range_80_bf = simd_and(tmp671, byte_range_80_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_90_a2_byte_range_80_bf);
        sequence_f0_90_a4 = simd_and(sequence_f0_90_adv, byte_a4);
        byte_range_9c_9e = simd_andc(tmp471, tmp12);
        carryQ.cq[182] = carryout2carry(pablo_blk_Advance(sequence_f0_90_a4, carryQ.get_carry_in(182), tmp672));
        sequence_f0_90_a4_byte_range_9c_9e = simd_and(tmp672, byte_range_9c_9e);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_90_a4_byte_range_9c_9e);
        sequence_f0_90_a5 = simd_and(sequence_f0_90_adv, byte_a5);
        carryQ.cq[183] = carryout2carry(pablo_blk_Advance(sequence_f0_90_a5, carryQ.get_carry_in(183), tmp673));
        sequence_f0_90_a5_byte_range_80_bf = simd_and(tmp673, byte_range_80_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_90_a5_byte_range_80_bf);
        sequence_f0_90_a6 = simd_and(sequence_f0_90_adv, byte_a6);
        byte_range_b8_bd = simd_andc(tmp474, tmp168);
        carryQ.cq[184] = carryout2carry(pablo_blk_Advance(sequence_f0_90_a6, carryQ.get_carry_in(184), tmp674));
        sequence_f0_90_a6_byte_range_b8_bd = simd_and(tmp674, byte_range_b8_bd);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_90_a6_byte_range_b8_bd);
        sequence_f0_90_a7 = simd_and(sequence_f0_90_adv, byte_a7);
        carryQ.cq[185] = carryout2carry(pablo_blk_Advance(sequence_f0_90_a7, carryQ.get_carry_in(185), tmp675));
        sequence_f0_90_a7_byte_range_80_bf = simd_and(tmp675, byte_range_80_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_90_a7_byte_range_80_bf);
        sequence_f0_90_a8 = simd_and(sequence_f0_90_adv, byte_a8);
        carryQ.cq[186] = carryout2carry(pablo_blk_Advance(sequence_f0_90_a8, carryQ.get_carry_in(186), tmp676));
        sequence_f0_90_a8_84 = simd_and(tmp676, byte_84);
        sequence_f0_90_a9 = simd_and(sequence_f0_90_adv, byte_a9);
        byte_range_88_8f = simd_and(byte_range_80_8f, basis_bits.bit_4);
        carryQ.cq[187] = carryout2carry(pablo_blk_Advance(sequence_f0_90_a9, carryQ.get_carry_in(187), tmp677));
        sequence_f0_90_a9_byte_range_88_8f = simd_and(tmp677, byte_range_88_8f);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_90_a9_byte_range_88_8f);
        sequence_f0_90_aa = simd_and(sequence_f0_90_adv, byte_aa);
        carryQ.cq[188] = carryout2carry(pablo_blk_Advance(sequence_f0_90_aa, carryQ.get_carry_in(188), tmp678));
        sequence_f0_90_aa_byte_range_80_bf = simd_and(tmp678, byte_range_80_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_90_aa_byte_range_80_bf);
        sequence_f0_90_ac = simd_and(sequence_f0_90_adv, byte_ac);
        byte_range_b6_b8 = simd_and(tmp422, tmp213);
        carryQ.cq[189] = carryout2carry(pablo_blk_Advance(sequence_f0_90_ac, carryQ.get_carry_in(189), tmp679));
        sequence_f0_90_ac_byte_range_b6_b8 = simd_and(tmp679, byte_range_b6_b8);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_90_ac_byte_range_b6_b8);
        sequence_f0_90_ad = simd_and(sequence_f0_90_adv, byte_ad);
        byte_range_96_97 = simd_and(tmp440, tmp364);
        carryQ.cq[190] = carryout2carry(pablo_blk_Advance(sequence_f0_90_ad, carryQ.get_carry_in(190), tmp680));
        sequence_f0_90_ad_byte_range_96_97 = simd_and(tmp680, byte_range_96_97);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_90_ad_byte_range_96_97);
        sequence_f0_90_ae = simd_and(sequence_f0_90_adv, byte_ae);
        carryQ.cq[191] = carryout2carry(pablo_blk_Advance(sequence_f0_90_ae, carryQ.get_carry_in(191), tmp681));
        sequence_f0_90_ae_byte_range_80_bf = simd_and(tmp681, byte_range_80_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_90_ae_byte_range_80_bf);
        sequence_f0_90_b1 = simd_and(sequence_f0_90_adv, byte_b1);
        tmp682 = simd_or(basis_bits.bit_3, tmp626);
        tmp683 = simd_or(basis_bits.bit_2, tmp682);
        byte_range_89_bf = simd_and(byte_range_80_bf, tmp683);
        carryQ.cq[192] = carryout2carry(pablo_blk_Advance(sequence_f0_90_b1, carryQ.get_carry_in(192), tmp684));
        sequence_f0_90_b1_byte_range_89_bf = simd_and(tmp684, byte_range_89_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_90_b1_byte_range_89_bf);
        sequence_f0_90_b2 = simd_and(sequence_f0_90_adv, byte_b2);
        carryQ.cq[193] = carryout2carry(pablo_blk_Advance(sequence_f0_90_b2, carryQ.get_carry_in(193), tmp685));
        sequence_f0_90_b2_byte_range_80_bf = simd_and(tmp685, byte_range_80_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_90_b2_byte_range_80_bf);
        sequence_f0_90_b9 = simd_and(sequence_f0_90_adv, byte_b9);
        byte_range_80_9f = simd_andc(byte_range_80_bf, basis_bits.bit_2);
        carryQ.cq[194] = carryout2carry(pablo_blk_Advance(sequence_f0_90_b9, carryQ.get_carry_in(194), tmp686));
        sequence_f0_90_b9_byte_range_80_9f = simd_and(tmp686, byte_range_80_9f);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_90_b9_byte_range_80_9f);
        sequence_f0_90_ba = simd_and(sequence_f0_90_adv, byte_ba);
        carryQ.cq[195] = carryout2carry(pablo_blk_Advance(sequence_f0_90_ba, carryQ.get_carry_in(195), tmp687));
        sequence_f0_90_ba_byte_range_80_bf = simd_and(tmp687, byte_range_80_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_90_ba_byte_range_80_bf);
        sequence_f0_91 = simd_and(byte_f0_adv, byte_91);
        carryQ.cq[196] = carryout2carry(pablo_blk_Advance(sequence_f0_91, carryQ.get_carry_in(196), tmp688));
        sequence_f0_91_81 = simd_and(tmp688, byte_81);
        carryQ.cq[197] = carryout2carry(pablo_blk_Advance(sequence_f0_91, carryQ.get_carry_in(197), sequence_f0_91_adv));
        tmp689 = simd_not(tmp206);
        tmp690 = simd_or(simd_and(basis_bits.bit_3, tmp689), simd_andc(tmp82, basis_bits.bit_3));
        tmp691 = simd_and(byte_range_80_9f, tmp690);
        cc_range_1104e_11070_4 = simd_or(tmp691, tmp422);
        carryQ.cq[198] = carryout2carry(pablo_blk_Advance(sequence_f0_91_81, carryQ.get_carry_in(198), sequence_f0_91_81_adv));
        tmp692 = simd_and(sequence_f0_91_81_adv, cc_range_1104e_11070_4);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp692);
        sequence_f0_91_83 = simd_and(sequence_f0_91_adv, byte_83);
        tmp693 = simd_and(byte_range_80_8f, tmp76);
        tmp694 = simd_and(tmp499, tmp41);
        tmp695 = simd_or(tmp693, tmp694);
        cc_range_110c2_110fa_4 = simd_or(tmp695, tmp542);
        carryQ.cq[199] = carryout2carry(pablo_blk_Advance(sequence_f0_91_83, carryQ.get_carry_in(199), sequence_f0_91_83_adv));
        tmp696 = simd_and(sequence_f0_91_83_adv, cc_range_110c2_110fa_4);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp696);
        sequence_f0_91_84 = simd_and(sequence_f0_91_adv, byte_84);
        carryQ.cq[200] = carryout2carry(pablo_blk_Advance(sequence_f0_91_84, carryQ.get_carry_in(200), sequence_f0_91_84_adv));
        tmp697 = simd_and(sequence_f0_91_84_adv, byte_b5);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp697);
        byte_85 = simd_and(byte_range_80_8f, tmp39);
        sequence_f0_91_85 = simd_and(sequence_f0_91_adv, byte_85);
        tmp698 = simd_or(basis_bits.bit_2, tmp100);
        byte_range_84_bf = simd_and(byte_range_80_bf, tmp698);
        carryQ.cq[201] = carryout2carry(pablo_blk_Advance(sequence_f0_91_85, carryQ.get_carry_in(201), sequence_f0_91_85_adv));
        tmp699 = simd_and(sequence_f0_91_85_adv, byte_range_84_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp699);
        sequence_f0_91_87 = simd_and(sequence_f0_91_adv, byte_87);
        tmp700 = simd_and(byte_range_88_8f, tmp41);
        cc_range_111c9_111da_4 = simd_or(tmp700, byte_range_9a_bf);
        carryQ.cq[202] = carryout2carry(pablo_blk_Advance(sequence_f0_91_87, carryQ.get_carry_in(202), sequence_f0_91_87_adv));
        tmp701 = simd_and(sequence_f0_91_87_adv, cc_range_111c9_111da_4);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp701);
        tmp702 = simd_not(tmp488);
        tmp703 = simd_or(simd_and(basis_bits.bit_3, tmp702), simd_andc(basis_bits.bit_4, basis_bits.bit_3));
        byte_range_88_99 = simd_and(byte_range_80_9f, tmp703);
        sequence_f0_91_byte_range_88_99 = simd_and(sequence_f0_91_adv, byte_range_88_99);
        carryQ.cq[203] = carryout2carry(pablo_blk_Advance(sequence_f0_91_byte_range_88_99, carryQ.get_carry_in(203), tmp704));
        sequence_f0_91_byte_range_88_99_sfx = simd_and(tmp704, byte_range_80_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_91_byte_range_88_99_sfx);
        sequence_f0_91_9a = simd_and(sequence_f0_91_adv, byte_9a);
        carryQ.cq[204] = carryout2carry(pablo_blk_Advance(sequence_f0_91_9a, carryQ.get_carry_in(204), tmp705));
        sequence_f0_91_9a_byte_range_b8_bf = simd_and(tmp705, byte_range_b8_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_91_9a_byte_range_b8_bf);
        sequence_f0_91_9b = simd_and(sequence_f0_91_adv, byte_9b);
        tmp706 = simd_or(basis_bits.bit_3, tmp488);
        tmp707 = simd_or(basis_bits.bit_2, tmp706);
        byte_range_8a_bf = simd_and(byte_range_80_bf, tmp707);
        carryQ.cq[205] = carryout2carry(pablo_blk_Advance(sequence_f0_91_9b, carryQ.get_carry_in(205), tmp708));
        sequence_f0_91_9b_byte_range_8a_bf = simd_and(tmp708, byte_range_8a_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_91_9b_byte_range_8a_bf);
        sequence_f0_91_9c = simd_and(sequence_f0_91_adv, byte_9c);
        carryQ.cq[206] = carryout2carry(pablo_blk_Advance(sequence_f0_91_9c, carryQ.get_carry_in(206), tmp709));
        sequence_f0_91_9c_byte_range_80_bf = simd_and(tmp709, byte_range_80_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_91_9c_byte_range_80_bf);
        sequence_f0_92 = simd_and(byte_f0_adv, byte_92);
        carryQ.cq[207] = carryout2carry(pablo_blk_Advance(sequence_f0_92, carryQ.get_carry_in(207), tmp710));
        sequence_f0_92_8d = simd_and(tmp710, byte_8d);
        carryQ.cq[208] = carryout2carry(pablo_blk_Advance(sequence_f0_92, carryQ.get_carry_in(208), sequence_f0_92_adv));
        byte_range_af_bf = simd_and(tmp436, tmp577);
        carryQ.cq[209] = carryout2carry(pablo_blk_Advance(sequence_f0_92_8d, carryQ.get_carry_in(209), sequence_f0_92_8d_adv));
        tmp711 = simd_and(sequence_f0_92_8d_adv, byte_range_af_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp711);
        byte_range_8e_8f = simd_and(byte_range_80_8f, tmp82);
        sequence_f0_92_byte_range_8e_8f = simd_and(sequence_f0_92_adv, byte_range_8e_8f);
        carryQ.cq[210] = carryout2carry(pablo_blk_Advance(sequence_f0_92_byte_range_8e_8f, carryQ.get_carry_in(210), tmp712));
        sequence_f0_92_byte_range_8e_8f_sfx = simd_and(tmp712, byte_range_80_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_92_byte_range_8e_8f_sfx);
        sequence_f0_92_91 = simd_and(sequence_f0_92_adv, byte_91);
        byte_range_a3_af = simd_and(tmp419, tmp279);
        carryQ.cq[211] = carryout2carry(pablo_blk_Advance(sequence_f0_92_91, carryQ.get_carry_in(211), tmp713));
        sequence_f0_92_91_byte_range_a3_af = simd_and(tmp713, byte_range_a3_af);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_92_91_byte_range_a3_af);
        sequence_f0_92_92 = simd_and(sequence_f0_92_adv, byte_92);
        carryQ.cq[212] = carryout2carry(pablo_blk_Advance(sequence_f0_92_92, carryQ.get_carry_in(212), tmp714));
        sequence_f0_92_92_byte_range_80_bf = simd_and(tmp714, byte_range_80_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_92_92_byte_range_80_bf);
        sequence_f0_93 = simd_and(byte_f0_adv, byte_93);
        carryQ.cq[213] = carryout2carry(pablo_blk_Advance(sequence_f0_93, carryQ.get_carry_in(213), tmp715));
        sequence_f0_93_90 = simd_and(tmp715, byte_90);
        carryQ.cq[214] = carryout2carry(pablo_blk_Advance(sequence_f0_93, carryQ.get_carry_in(214), sequence_f0_93_adv));
        carryQ.cq[215] = carryout2carry(pablo_blk_Advance(sequence_f0_93_90, carryQ.get_carry_in(215), sequence_f0_93_90_adv));
        tmp716 = simd_and(sequence_f0_93_90_adv, byte_range_af_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, tmp716);
        sequence_f0_93_byte_range_91_bf = simd_and(sequence_f0_93_adv, byte_range_91_bf);
        carryQ.cq[216] = carryout2carry(pablo_blk_Advance(sequence_f0_93_byte_range_91_bf, carryQ.get_carry_in(216), tmp717));
        sequence_f0_93_byte_range_91_bf_sfx = simd_and(tmp717, byte_range_80_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_93_byte_range_91_bf_sfx);
        byte_range_94_95 = simd_and(tmp440, tmp140);
        byte_f0_byte_range_94_95 = simd_and(byte_f0_adv, byte_range_94_95);
        carryQ.cq[217] = carryout2carry(pablo_blk_Advance(byte_f0_byte_range_94_95, carryQ.get_carry_in(217), tmp718));
        byte_f0_byte_range_94_95_sfx = simd_and(tmp718, byte_range_80_bf);
        carryQ.cq[218] = carryout2carry(pablo_blk_Advance(byte_f0_byte_range_94_95_sfx, carryQ.get_carry_in(218), tmp719));
        byte_f0_byte_range_94_95_sfx_sfx = simd_and(tmp719, byte_range_80_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, byte_f0_byte_range_94_95_sfx_sfx);
        sequence_f0_96 = simd_and(byte_f0_adv, byte_96);
        carryQ.cq[219] = carryout2carry(pablo_blk_Advance(sequence_f0_96, carryQ.get_carry_in(219), sequence_f0_96_adv));
        sequence_f0_96_80 = simd_and(sequence_f0_96_adv, byte_80);
        carryQ.cq[220] = carryout2carry(pablo_blk_Advance(sequence_f0_96_80, carryQ.get_carry_in(220), tmp720));
        sequence_f0_96_80_byte_range_80_bf = simd_and(tmp720, byte_range_80_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_96_80_byte_range_80_bf);
        byte_97 = simd_and(tmp440, tmp58);
        sequence_f0_97 = simd_and(byte_f0_adv, byte_97);
        carryQ.cq[221] = carryout2carry(pablo_blk_Advance(sequence_f0_97, carryQ.get_carry_in(221), sequence_f0_97_adv));
        sequence_f0_97_80 = simd_and(sequence_f0_97_adv, byte_80);
        carryQ.cq[222] = carryout2carry(pablo_blk_Advance(sequence_f0_97_80, carryQ.get_carry_in(222), tmp721));
        sequence_f0_97_80_byte_range_80_bf = simd_and(tmp721, byte_range_80_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_97_80_byte_range_80_bf);
        sequence_f0_9b = simd_and(byte_f0_adv, byte_9b);
        carryQ.cq[223] = carryout2carry(pablo_blk_Advance(sequence_f0_9b, carryQ.get_carry_in(223), sequence_f0_9b_adv));
        sequence_f0_9b_80 = simd_and(sequence_f0_9b_adv, byte_80);
        tmp722 = simd_or(basis_bits.bit_3, tmp206);
        tmp723 = simd_or(basis_bits.bit_2, tmp722);
        byte_range_82_bf = simd_and(byte_range_80_bf, tmp723);
        carryQ.cq[224] = carryout2carry(pablo_blk_Advance(sequence_f0_9b_80, carryQ.get_carry_in(224), tmp724));
        sequence_f0_9b_80_byte_range_82_bf = simd_and(tmp724, byte_range_82_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_9b_80_byte_range_82_bf);
        sequence_f0_9c = simd_and(byte_f0_adv, byte_9c);
        carryQ.cq[225] = carryout2carry(pablo_blk_Advance(sequence_f0_9c, carryQ.get_carry_in(225), sequence_f0_9c_adv));
        sequence_f0_9c_80 = simd_and(sequence_f0_9c_adv, byte_80);
        carryQ.cq[226] = carryout2carry(pablo_blk_Advance(sequence_f0_9c_80, carryQ.get_carry_in(226), tmp725));
        sequence_f0_9c_80_byte_range_80_bf = simd_and(tmp725, byte_range_80_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_9c_80_byte_range_80_bf);
        sequence_f0_9d = simd_and(byte_f0_adv, byte_9d);
        carryQ.cq[227] = carryout2carry(pablo_blk_Advance(sequence_f0_9d, carryQ.get_carry_in(227), sequence_f0_9d_adv));
        sequence_f0_9d_83 = simd_and(sequence_f0_9d_adv, byte_83);
        carryQ.cq[228] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_83, carryQ.get_carry_in(228), tmp726));
        sequence_f0_9d_83_byte_range_b6_bf = simd_and(tmp726, byte_range_b6_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_9d_83_byte_range_b6_bf);
        sequence_f0_9e = simd_and(byte_f0_adv, byte_9e);
        carryQ.cq[229] = carryout2carry(pablo_blk_Advance(sequence_f0_9e, carryQ.get_carry_in(229), sequence_f0_9e_adv));
        sequence_f0_9e_80 = simd_and(sequence_f0_9e_adv, byte_80);
        carryQ.cq[230] = carryout2carry(pablo_blk_Advance(sequence_f0_9e_80, carryQ.get_carry_in(230), tmp727));
        sequence_f0_9e_80_byte_range_80_bf = simd_and(tmp727, byte_range_80_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_9e_80_byte_range_80_bf);
        sequence_f0_9f = simd_and(byte_f0_adv, byte_9f);
        carryQ.cq[231] = carryout2carry(pablo_blk_Advance(sequence_f0_9f, carryQ.get_carry_in(231), sequence_f0_9f_adv));
        sequence_f0_9f_80 = simd_and(sequence_f0_9f_adv, byte_80);
        carryQ.cq[232] = carryout2carry(pablo_blk_Advance(sequence_f0_9f_80, carryQ.get_carry_in(232), tmp728));
        sequence_f0_9f_80_byte_range_ac_af = simd_and(tmp728, byte_range_ac_af);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_9f_80_byte_range_ac_af);
        sequence_f0_aa = simd_and(byte_f0_adv, byte_aa);
        carryQ.cq[233] = carryout2carry(pablo_blk_Advance(sequence_f0_aa, carryQ.get_carry_in(233), sequence_f0_aa_adv));
        sequence_f0_aa_9b = simd_and(sequence_f0_aa_adv, byte_9b);
        tmp729 = simd_and(basis_bits.bit_3, tmp131);
        tmp730 = simd_or(basis_bits.bit_2, tmp729);
        byte_range_97_bf = simd_and(byte_range_80_bf, tmp730);
        carryQ.cq[234] = carryout2carry(pablo_blk_Advance(sequence_f0_aa_9b, carryQ.get_carry_in(234), tmp731));
        sequence_f0_aa_9b_byte_range_97_bf = simd_and(tmp731, byte_range_97_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_aa_9b_byte_range_97_bf);
        sequence_f0_ab = simd_and(byte_f0_adv, byte_ab);
        carryQ.cq[235] = carryout2carry(pablo_blk_Advance(sequence_f0_ab, carryQ.get_carry_in(235), sequence_f0_ab_adv));
        sequence_f0_ab_9c = simd_and(sequence_f0_ab_adv, byte_9c);
        carryQ.cq[236] = carryout2carry(pablo_blk_Advance(sequence_f0_ab_9c, carryQ.get_carry_in(236), tmp732));
        sequence_f0_ab_9c_byte_range_b5_bf = simd_and(tmp732, byte_range_b5_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_ab_9c_byte_range_b5_bf);
        sequence_f0_ac = simd_and(byte_f0_adv, byte_ac);
        carryQ.cq[237] = carryout2carry(pablo_blk_Advance(sequence_f0_ac, carryQ.get_carry_in(237), sequence_f0_ac_adv));
        sequence_f0_ac_80 = simd_and(sequence_f0_ac_adv, byte_80);
        carryQ.cq[238] = carryout2carry(pablo_blk_Advance(sequence_f0_ac_80, carryQ.get_carry_in(238), tmp733));
        sequence_f0_ac_80_byte_range_80_bf = simd_and(tmp733, byte_range_80_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_ac_80_byte_range_80_bf);
        sequence_f0_af = simd_and(byte_f0_adv, byte_af);
        carryQ.cq[239] = carryout2carry(pablo_blk_Advance(sequence_f0_af, carryQ.get_carry_in(239), sequence_f0_af_adv));
        sequence_f0_af_80 = simd_and(sequence_f0_af_adv, byte_80);
        carryQ.cq[240] = carryout2carry(pablo_blk_Advance(sequence_f0_af_80, carryQ.get_carry_in(240), tmp734));
        sequence_f0_af_80_byte_range_80_bf = simd_and(tmp734, byte_range_80_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_af_80_byte_range_80_bf);
        sequence_f0_b0 = simd_and(byte_f0_adv, byte_b0);
        carryQ.cq[241] = carryout2carry(pablo_blk_Advance(sequence_f0_b0, carryQ.get_carry_in(241), sequence_f0_b0_adv));
        sequence_f0_b0_80 = simd_and(sequence_f0_b0_adv, byte_80);
        carryQ.cq[242] = carryout2carry(pablo_blk_Advance(sequence_f0_b0_80, carryQ.get_carry_in(242), tmp735));
        sequence_f0_b0_80_byte_range_80_bf = simd_and(tmp735, byte_range_80_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, sequence_f0_b0_80_byte_range_80_bf);
        tmp736 = simd_andc(tmp632, tmp19);
        byte_range_f1_f2 = simd_and(tmp736, tmp109);
        carryQ.cq[243] = carryout2carry(pablo_blk_Advance(byte_range_f1_f2, carryQ.get_carry_in(243), tmp737));
        byte_range_f1_f2_sfx = simd_and(tmp737, byte_range_80_bf);
        carryQ.cq[244] = carryout2carry(pablo_blk_Advance(byte_range_f1_f2_sfx, carryQ.get_carry_in(244), tmp738));
        byte_range_f1_f2_sfx_sfx = simd_and(tmp738, byte_range_80_bf);
        carryQ.cq[245] = carryout2carry(pablo_blk_Advance(byte_range_f1_f2_sfx_sfx, carryQ.get_carry_in(245), tmp739));
        byte_range_f1_f2_sfx_sfx_sfx = simd_and(tmp739, byte_range_80_bf);
        struct_Cn.cc = simd_or(struct_Cn.cc, byte_range_f1_f2_sfx_sfx_sfx);
        byte_f3 = simd_and(tmp632, tmp99);
        carryQ.cq[246] = carryout2carry(pablo_blk_Advance(byte_f3, carryQ.get_carry_in(246), byte_f3_adv));
        sequence_f3_80 = simd_and(byte_f3_adv, byte_80);
        carryQ.cq[247] = carryout2carry(pablo_blk_Advance(sequence_f3_80, carryQ.get_carry_in(247), sequence_f3_80_adv));
        sequence_f3_80_80 = simd_and(sequence_f3_80_adv, byte_80);
        carryQ.cq[248] = carryout2carry(pablo_blk_Advance(sequence_f3_80_80, carryQ.get_carry_in(248), tmp740));
        sequence_f3_80_80_80 = simd_and(tmp740, byte_80);
  }
  CarryArray<249, 0> carryQ;
  };

  struct Cc {
  Cc() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Cc & struct_Cc) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, tmp7, tmp8, tmp9, tmp10;
		BitBlock cc_range_0_7f_1, tmp11, tmp12, tmp13, tmp14, tmp15, tmp16, byte_c2;
		BitBlock tmp17, byte_range_80_9f, byte_c2_adv, tmp18;




        struct_Cc.cc = simd<1>::constant<0>();
        tmp1 = simd_or(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_or(tmp1, basis_bits.bit_2);
        tmp3 = simd_andc(basis_bits.bit_1, basis_bits.bit_0);
        tmp4 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp5 = simd_and(tmp3, tmp4);
        tmp6 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp7 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp8 = simd_and(tmp6, tmp7);
        tmp9 = simd_and(tmp5, tmp8);
        tmp10 = simd_andc(tmp2, tmp9);
        cc_range_0_7f_1 = simd_not(tmp10);
        struct_Cc.cc = simd_or(struct_Cc.cc, cc_range_0_7f_1);
        tmp11 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp12 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp13 = simd_andc(tmp11, tmp12);
        tmp14 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp15 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp16 = simd_andc(tmp15, tmp14);
        byte_c2 = simd_and(tmp13, tmp16);
        tmp17 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        byte_range_80_9f = simd_andc(tmp17, basis_bits.bit_2);
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(byte_c2, carryQ.get_carry_in(0), byte_c2_adv));
        tmp18 = simd_and(byte_c2_adv, byte_range_80_9f);
        struct_Cc.cc = simd_or(struct_Cc.cc, tmp18);
        carryQ.CarryQ_Adjust(1);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Cc & struct_Cc, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, tmp7, tmp8, tmp9, tmp10;
		BitBlock cc_range_0_7f_1, tmp11, tmp12, tmp13, tmp14, tmp15, tmp16, byte_c2;
		BitBlock tmp17, byte_range_80_9f, byte_c2_adv, tmp18;




        struct_Cc.cc = simd<1>::constant<0>();
        tmp1 = simd_or(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_or(tmp1, basis_bits.bit_2);
        tmp3 = simd_andc(basis_bits.bit_1, basis_bits.bit_0);
        tmp4 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp5 = simd_and(tmp3, tmp4);
        tmp6 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp7 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp8 = simd_and(tmp6, tmp7);
        tmp9 = simd_and(tmp5, tmp8);
        tmp10 = simd_andc(tmp2, tmp9);
        cc_range_0_7f_1 = simd_not(tmp10);
        struct_Cc.cc = simd_or(struct_Cc.cc, cc_range_0_7f_1);
        tmp11 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp12 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp13 = simd_andc(tmp11, tmp12);
        tmp14 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp15 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp16 = simd_andc(tmp15, tmp14);
        byte_c2 = simd_and(tmp13, tmp16);
        tmp17 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        byte_range_80_9f = simd_andc(tmp17, basis_bits.bit_2);
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(byte_c2, carryQ.get_carry_in(0), byte_c2_adv));
        tmp18 = simd_and(byte_c2_adv, byte_range_80_9f);
        struct_Cc.cc = simd_or(struct_Cc.cc, tmp18);
  }
  CarryArray<1, 0> carryQ;
  };

  struct Cf {
  Cf() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Cf & struct_Cf) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, byte_c2, tmp7, tmp8, tmp9, tmp10;
		BitBlock tmp11, tmp12, byte_ad, byte_c2_adv, tmp13, tmp14, tmp15, tmp16, tmp17;
		BitBlock tmp18, byte_d8, tmp19, tmp20, tmp21, tmp22, tmp23, tmp24, tmp25;
		BitBlock cc_range_600_61c_2, byte_d8_adv, tmp26, tmp27, tmp28, byte_db;
		BitBlock byte_9d, byte_db_adv, tmp29, byte_dc, tmp30, byte_8f, byte_dc_adv;
		BitBlock tmp31, tmp32, tmp33, byte_e1, tmp34, byte_a0, tmp35, sequence_e1_a0;
		BitBlock byte_e1_adv, tmp36, byte_8e, sequence_e1_a0_adv, tmp37, byte_e2;
		BitBlock byte_80, tmp38, sequence_e2_80, byte_e2_adv, tmp39, tmp40, tmp41;
		BitBlock tmp42, tmp43, tmp44, tmp45, cc_range_200b_202a_3, sequence_e2_80_adv;
		BitBlock tmp46, byte_81, sequence_e2_81, tmp47, tmp48, tmp49, tmp50, tmp51;
		BitBlock cc_range_2060_2066_3, sequence_e2_81_adv, tmp52, byte_ef, tmp53;
		BitBlock tmp54, byte_bb, tmp55, sequence_ef_bb, byte_ef_adv, byte_bf;
		BitBlock sequence_ef_bb_adv, tmp56, sequence_ef_bf, tmp57, byte_range_b9_bb;
		BitBlock sequence_ef_bf_adv, tmp58, tmp59, byte_f0, byte_91, tmp60;
		BitBlock sequence_f0_91, byte_f0_adv, byte_82, tmp61, sequence_f0_91_82;
		BitBlock sequence_f0_91_adv, byte_bd, sequence_f0_91_82_adv, tmp62;
		BitBlock sequence_f0_9d, tmp63, tmp64, byte_85, tmp65, sequence_f0_9d_85;
		BitBlock sequence_f0_9d_adv, tmp66, tmp67, byte_range_b3_ba;
		BitBlock sequence_f0_9d_85_adv, tmp68, tmp69, byte_f3, tmp70, sequence_f3_a0;
		BitBlock byte_f3_adv, tmp71, sequence_f3_a0_80, sequence_f3_a0_adv, tmp72;
		BitBlock cc_range_e0001_e0020_4, sequence_f3_a0_80_adv, tmp73;
		BitBlock sequence_f3_a0_81, byte_range_80_bf, sequence_f3_a0_81_adv, tmp74;




        struct_Cf.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_andc(tmp5, tmp4);
        byte_c2 = simd_and(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp11 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp12 = simd_and(tmp10, tmp11);
        byte_ad = simd_and(tmp9, tmp12);
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(byte_c2, carryQ.get_carry_in(0), byte_c2_adv));
        tmp13 = simd_and(byte_c2_adv, byte_ad);
        struct_Cf.cc = simd_or(struct_Cf.cc, tmp13);
        tmp14 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp15 = simd_and(tmp1, tmp14);
        tmp16 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp17 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp18 = simd_andc(tmp16, tmp17);
        byte_d8 = simd_and(tmp15, tmp18);
        tmp19 = simd_andc(tmp7, tmp2);
        tmp20 = simd_andc(tmp19, basis_bits.bit_4);
        tmp21 = simd_and(basis_bits.bit_5, tmp17);
        tmp22 = simd_andc(tmp20, tmp21);
        tmp23 = simd_and(tmp7, tmp14);
        tmp24 = simd_andc(tmp10, tmp17);
        tmp25 = simd_and(tmp23, tmp24);
        cc_range_600_61c_2 = simd_or(tmp22, tmp25);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(byte_d8, carryQ.get_carry_in(1), byte_d8_adv));
        tmp26 = simd_and(byte_d8_adv, cc_range_600_61c_2);
        struct_Cf.cc = simd_or(struct_Cf.cc, tmp26);
        tmp27 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp28 = simd_and(tmp16, tmp27);
        byte_db = simd_and(tmp15, tmp28);
        byte_9d = simd_and(tmp23, tmp12);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(byte_db, carryQ.get_carry_in(2), byte_db_adv));
        tmp29 = simd_and(byte_db_adv, byte_9d);
        struct_Cf.cc = simd_or(struct_Cf.cc, tmp29);
        byte_dc = simd_and(tmp15, tmp24);
        tmp30 = simd_and(tmp10, tmp27);
        byte_8f = simd_and(tmp19, tmp30);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(byte_dc, carryQ.get_carry_in(3), byte_dc_adv));
        tmp31 = simd_and(byte_dc_adv, byte_8f);
        struct_Cf.cc = simd_or(struct_Cf.cc, tmp31);
        tmp32 = simd_and(tmp1, tmp8);
        tmp33 = simd_andc(tmp11, tmp4);
        byte_e1 = simd_and(tmp32, tmp33);
        tmp34 = simd_or(tmp4, tmp17);
        byte_a0 = simd_andc(tmp9, tmp34);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(4), tmp35));
        sequence_e1_a0 = simd_and(tmp35, byte_a0);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(5), byte_e1_adv));
        tmp36 = simd_and(tmp10, tmp5);
        byte_8e = simd_and(tmp19, tmp36);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(sequence_e1_a0, carryQ.get_carry_in(6), sequence_e1_a0_adv));
        tmp37 = simd_and(sequence_e1_a0_adv, byte_8e);
        struct_Cf.cc = simd_or(struct_Cf.cc, tmp37);
        byte_e2 = simd_and(tmp32, tmp6);
        byte_80 = simd_andc(tmp19, tmp34);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(7), tmp38));
        sequence_e2_80 = simd_and(tmp38, byte_80);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(8), byte_e2_adv));
        tmp39 = simd_and(tmp19, basis_bits.bit_4);
        tmp40 = simd_or(basis_bits.bit_5, tmp27);
        tmp41 = simd_and(tmp39, tmp40);
        tmp42 = simd_and(tmp9, basis_bits.bit_4);
        tmp43 = simd_not(tmp27);
        tmp44 = simd_or(simd_and(basis_bits.bit_5, tmp43), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        tmp45 = simd_and(tmp42, tmp44);
        cc_range_200b_202a_3 = simd_or(tmp41, tmp45);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(sequence_e2_80, carryQ.get_carry_in(9), sequence_e2_80_adv));
        tmp46 = simd_and(sequence_e2_80_adv, cc_range_200b_202a_3);
        struct_Cf.cc = simd_or(struct_Cf.cc, tmp46);
        byte_81 = simd_and(tmp19, tmp33);
        sequence_e2_81 = simd_and(byte_e2_adv, byte_81);
        tmp47 = simd_andc(tmp9, basis_bits.bit_4);
        tmp48 = simd_andc(tmp47, tmp21);
        tmp49 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp50 = simd_or(basis_bits.bit_4, tmp49);
        tmp51 = simd_and(tmp9, tmp50);
        cc_range_2060_2066_3 = simd_or(tmp48, tmp51);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(sequence_e2_81, carryQ.get_carry_in(10), sequence_e2_81_adv));
        tmp52 = simd_and(sequence_e2_81_adv, cc_range_2060_2066_3);
        struct_Cf.cc = simd_or(struct_Cf.cc, tmp52);
        byte_ef = simd_and(tmp32, tmp30);
        tmp53 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp54 = simd_and(tmp7, tmp53);
        byte_bb = simd_and(tmp54, tmp28);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(11), tmp55));
        sequence_ef_bb = simd_and(tmp55, byte_bb);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(12), byte_ef_adv));
        byte_bf = simd_and(tmp54, tmp30);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(sequence_ef_bb, carryQ.get_carry_in(13), sequence_ef_bb_adv));
        tmp56 = simd_and(sequence_ef_bb_adv, byte_bf);
        struct_Cf.cc = simd_or(struct_Cf.cc, tmp56);
        sequence_ef_bf = simd_and(byte_ef_adv, byte_bf);
        tmp57 = simd_and(tmp54, tmp16);
        byte_range_b9_bb = simd_and(tmp57, tmp17);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(sequence_ef_bf, carryQ.get_carry_in(14), sequence_ef_bf_adv));
        tmp58 = simd_and(sequence_ef_bf_adv, byte_range_b9_bb);
        struct_Cf.cc = simd_or(struct_Cf.cc, tmp58);
        tmp59 = simd_and(tmp1, tmp53);
        byte_f0 = simd_andc(tmp59, tmp34);
        byte_91 = simd_and(tmp23, tmp33);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(byte_f0, carryQ.get_carry_in(15), tmp60));
        sequence_f0_91 = simd_and(tmp60, byte_91);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(byte_f0, carryQ.get_carry_in(16), byte_f0_adv));
        byte_82 = simd_and(tmp19, tmp6);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(sequence_f0_91, carryQ.get_carry_in(17), tmp61));
        sequence_f0_91_82 = simd_and(tmp61, byte_82);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(sequence_f0_91, carryQ.get_carry_in(18), sequence_f0_91_adv));
        byte_bd = simd_and(tmp54, tmp12);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(sequence_f0_91_82, carryQ.get_carry_in(19), sequence_f0_91_82_adv));
        tmp62 = simd_and(sequence_f0_91_82_adv, byte_bd);
        struct_Cf.cc = simd_or(struct_Cf.cc, tmp62);
        sequence_f0_9d = simd_and(byte_f0_adv, byte_9d);
        tmp63 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp64 = simd_and(tmp63, tmp11);
        byte_85 = simd_and(tmp19, tmp64);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(sequence_f0_9d, carryQ.get_carry_in(20), tmp65));
        sequence_f0_9d_85 = simd_and(tmp65, byte_85);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(sequence_f0_9d, carryQ.get_carry_in(21), sequence_f0_9d_adv));
        tmp66 = simd_not(tmp40);
        tmp67 = simd_or(simd_and(basis_bits.bit_4, tmp66), simd_andc(tmp40, basis_bits.bit_4));
        byte_range_b3_ba = simd_and(tmp54, tmp67);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_85, carryQ.get_carry_in(22), sequence_f0_9d_85_adv));
        tmp68 = simd_and(sequence_f0_9d_85_adv, byte_range_b3_ba);
        struct_Cf.cc = simd_or(struct_Cf.cc, tmp68);
        tmp69 = simd_andc(tmp27, tmp4);
        byte_f3 = simd_and(tmp59, tmp69);
        carryQ.cq[23] = carryout2carry(pablo_blk_Advance(byte_f3, carryQ.get_carry_in(23), tmp70));
        sequence_f3_a0 = simd_and(tmp70, byte_a0);
        carryQ.cq[24] = carryout2carry(pablo_blk_Advance(byte_f3, carryQ.get_carry_in(24), byte_f3_adv));
        carryQ.cq[25] = carryout2carry(pablo_blk_Advance(sequence_f3_a0, carryQ.get_carry_in(25), tmp71));
        sequence_f3_a0_80 = simd_and(tmp71, byte_80);
        carryQ.cq[26] = carryout2carry(pablo_blk_Advance(sequence_f3_a0, carryQ.get_carry_in(26), sequence_f3_a0_adv));
        tmp72 = simd_and(tmp7, basis_bits.bit_2);
        cc_range_e0001_e0020_4 = simd_or(byte_81, tmp72);
        carryQ.cq[27] = carryout2carry(pablo_blk_Advance(sequence_f3_a0_80, carryQ.get_carry_in(27), sequence_f3_a0_80_adv));
        tmp73 = simd_and(sequence_f3_a0_80_adv, cc_range_e0001_e0020_4);
        struct_Cf.cc = simd_or(struct_Cf.cc, tmp73);
        sequence_f3_a0_81 = simd_and(sequence_f3_a0_adv, byte_81);
        byte_range_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        carryQ.cq[28] = carryout2carry(pablo_blk_Advance(sequence_f3_a0_81, carryQ.get_carry_in(28), sequence_f3_a0_81_adv));
        tmp74 = simd_and(sequence_f3_a0_81_adv, byte_range_80_bf);
        struct_Cf.cc = simd_or(struct_Cf.cc, tmp74);
        carryQ.CarryQ_Adjust(29);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Cf & struct_Cf, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, byte_c2, tmp7, tmp8, tmp9, tmp10;
		BitBlock tmp11, tmp12, byte_ad, byte_c2_adv, tmp13, tmp14, tmp15, tmp16, tmp17;
		BitBlock tmp18, byte_d8, tmp19, tmp20, tmp21, tmp22, tmp23, tmp24, tmp25;
		BitBlock cc_range_600_61c_2, byte_d8_adv, tmp26, tmp27, tmp28, byte_db;
		BitBlock byte_9d, byte_db_adv, tmp29, byte_dc, tmp30, byte_8f, byte_dc_adv;
		BitBlock tmp31, tmp32, tmp33, byte_e1, tmp34, byte_a0, tmp35, sequence_e1_a0;
		BitBlock byte_e1_adv, tmp36, byte_8e, sequence_e1_a0_adv, tmp37, byte_e2;
		BitBlock byte_80, tmp38, sequence_e2_80, byte_e2_adv, tmp39, tmp40, tmp41;
		BitBlock tmp42, tmp43, tmp44, tmp45, cc_range_200b_202a_3, sequence_e2_80_adv;
		BitBlock tmp46, byte_81, sequence_e2_81, tmp47, tmp48, tmp49, tmp50, tmp51;
		BitBlock cc_range_2060_2066_3, sequence_e2_81_adv, tmp52, byte_ef, tmp53;
		BitBlock tmp54, byte_bb, tmp55, sequence_ef_bb, byte_ef_adv, byte_bf;
		BitBlock sequence_ef_bb_adv, tmp56, sequence_ef_bf, tmp57, byte_range_b9_bb;
		BitBlock sequence_ef_bf_adv, tmp58, tmp59, byte_f0, byte_91, tmp60;
		BitBlock sequence_f0_91, byte_f0_adv, byte_82, tmp61, sequence_f0_91_82;
		BitBlock sequence_f0_91_adv, byte_bd, sequence_f0_91_82_adv, tmp62;
		BitBlock sequence_f0_9d, tmp63, tmp64, byte_85, tmp65, sequence_f0_9d_85;
		BitBlock sequence_f0_9d_adv, tmp66, tmp67, byte_range_b3_ba;
		BitBlock sequence_f0_9d_85_adv, tmp68, tmp69, byte_f3, tmp70, sequence_f3_a0;
		BitBlock byte_f3_adv, tmp71, sequence_f3_a0_80, sequence_f3_a0_adv, tmp72;
		BitBlock cc_range_e0001_e0020_4, sequence_f3_a0_80_adv, tmp73;
		BitBlock sequence_f3_a0_81, byte_range_80_bf, sequence_f3_a0_81_adv, tmp74;




        struct_Cf.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_andc(tmp5, tmp4);
        byte_c2 = simd_and(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp11 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp12 = simd_and(tmp10, tmp11);
        byte_ad = simd_and(tmp9, tmp12);
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(byte_c2, carryQ.get_carry_in(0), byte_c2_adv));
        tmp13 = simd_and(byte_c2_adv, byte_ad);
        struct_Cf.cc = simd_or(struct_Cf.cc, tmp13);
        tmp14 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp15 = simd_and(tmp1, tmp14);
        tmp16 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp17 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp18 = simd_andc(tmp16, tmp17);
        byte_d8 = simd_and(tmp15, tmp18);
        tmp19 = simd_andc(tmp7, tmp2);
        tmp20 = simd_andc(tmp19, basis_bits.bit_4);
        tmp21 = simd_and(basis_bits.bit_5, tmp17);
        tmp22 = simd_andc(tmp20, tmp21);
        tmp23 = simd_and(tmp7, tmp14);
        tmp24 = simd_andc(tmp10, tmp17);
        tmp25 = simd_and(tmp23, tmp24);
        cc_range_600_61c_2 = simd_or(tmp22, tmp25);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(byte_d8, carryQ.get_carry_in(1), byte_d8_adv));
        tmp26 = simd_and(byte_d8_adv, cc_range_600_61c_2);
        struct_Cf.cc = simd_or(struct_Cf.cc, tmp26);
        tmp27 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp28 = simd_and(tmp16, tmp27);
        byte_db = simd_and(tmp15, tmp28);
        byte_9d = simd_and(tmp23, tmp12);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(byte_db, carryQ.get_carry_in(2), byte_db_adv));
        tmp29 = simd_and(byte_db_adv, byte_9d);
        struct_Cf.cc = simd_or(struct_Cf.cc, tmp29);
        byte_dc = simd_and(tmp15, tmp24);
        tmp30 = simd_and(tmp10, tmp27);
        byte_8f = simd_and(tmp19, tmp30);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(byte_dc, carryQ.get_carry_in(3), byte_dc_adv));
        tmp31 = simd_and(byte_dc_adv, byte_8f);
        struct_Cf.cc = simd_or(struct_Cf.cc, tmp31);
        tmp32 = simd_and(tmp1, tmp8);
        tmp33 = simd_andc(tmp11, tmp4);
        byte_e1 = simd_and(tmp32, tmp33);
        tmp34 = simd_or(tmp4, tmp17);
        byte_a0 = simd_andc(tmp9, tmp34);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(4), tmp35));
        sequence_e1_a0 = simd_and(tmp35, byte_a0);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(5), byte_e1_adv));
        tmp36 = simd_and(tmp10, tmp5);
        byte_8e = simd_and(tmp19, tmp36);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(sequence_e1_a0, carryQ.get_carry_in(6), sequence_e1_a0_adv));
        tmp37 = simd_and(sequence_e1_a0_adv, byte_8e);
        struct_Cf.cc = simd_or(struct_Cf.cc, tmp37);
        byte_e2 = simd_and(tmp32, tmp6);
        byte_80 = simd_andc(tmp19, tmp34);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(7), tmp38));
        sequence_e2_80 = simd_and(tmp38, byte_80);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(8), byte_e2_adv));
        tmp39 = simd_and(tmp19, basis_bits.bit_4);
        tmp40 = simd_or(basis_bits.bit_5, tmp27);
        tmp41 = simd_and(tmp39, tmp40);
        tmp42 = simd_and(tmp9, basis_bits.bit_4);
        tmp43 = simd_not(tmp27);
        tmp44 = simd_or(simd_and(basis_bits.bit_5, tmp43), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        tmp45 = simd_and(tmp42, tmp44);
        cc_range_200b_202a_3 = simd_or(tmp41, tmp45);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(sequence_e2_80, carryQ.get_carry_in(9), sequence_e2_80_adv));
        tmp46 = simd_and(sequence_e2_80_adv, cc_range_200b_202a_3);
        struct_Cf.cc = simd_or(struct_Cf.cc, tmp46);
        byte_81 = simd_and(tmp19, tmp33);
        sequence_e2_81 = simd_and(byte_e2_adv, byte_81);
        tmp47 = simd_andc(tmp9, basis_bits.bit_4);
        tmp48 = simd_andc(tmp47, tmp21);
        tmp49 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp50 = simd_or(basis_bits.bit_4, tmp49);
        tmp51 = simd_and(tmp9, tmp50);
        cc_range_2060_2066_3 = simd_or(tmp48, tmp51);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(sequence_e2_81, carryQ.get_carry_in(10), sequence_e2_81_adv));
        tmp52 = simd_and(sequence_e2_81_adv, cc_range_2060_2066_3);
        struct_Cf.cc = simd_or(struct_Cf.cc, tmp52);
        byte_ef = simd_and(tmp32, tmp30);
        tmp53 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp54 = simd_and(tmp7, tmp53);
        byte_bb = simd_and(tmp54, tmp28);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(11), tmp55));
        sequence_ef_bb = simd_and(tmp55, byte_bb);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(byte_ef, carryQ.get_carry_in(12), byte_ef_adv));
        byte_bf = simd_and(tmp54, tmp30);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(sequence_ef_bb, carryQ.get_carry_in(13), sequence_ef_bb_adv));
        tmp56 = simd_and(sequence_ef_bb_adv, byte_bf);
        struct_Cf.cc = simd_or(struct_Cf.cc, tmp56);
        sequence_ef_bf = simd_and(byte_ef_adv, byte_bf);
        tmp57 = simd_and(tmp54, tmp16);
        byte_range_b9_bb = simd_and(tmp57, tmp17);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(sequence_ef_bf, carryQ.get_carry_in(14), sequence_ef_bf_adv));
        tmp58 = simd_and(sequence_ef_bf_adv, byte_range_b9_bb);
        struct_Cf.cc = simd_or(struct_Cf.cc, tmp58);
        tmp59 = simd_and(tmp1, tmp53);
        byte_f0 = simd_andc(tmp59, tmp34);
        byte_91 = simd_and(tmp23, tmp33);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(byte_f0, carryQ.get_carry_in(15), tmp60));
        sequence_f0_91 = simd_and(tmp60, byte_91);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(byte_f0, carryQ.get_carry_in(16), byte_f0_adv));
        byte_82 = simd_and(tmp19, tmp6);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(sequence_f0_91, carryQ.get_carry_in(17), tmp61));
        sequence_f0_91_82 = simd_and(tmp61, byte_82);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(sequence_f0_91, carryQ.get_carry_in(18), sequence_f0_91_adv));
        byte_bd = simd_and(tmp54, tmp12);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(sequence_f0_91_82, carryQ.get_carry_in(19), sequence_f0_91_82_adv));
        tmp62 = simd_and(sequence_f0_91_82_adv, byte_bd);
        struct_Cf.cc = simd_or(struct_Cf.cc, tmp62);
        sequence_f0_9d = simd_and(byte_f0_adv, byte_9d);
        tmp63 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp64 = simd_and(tmp63, tmp11);
        byte_85 = simd_and(tmp19, tmp64);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(sequence_f0_9d, carryQ.get_carry_in(20), tmp65));
        sequence_f0_9d_85 = simd_and(tmp65, byte_85);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(sequence_f0_9d, carryQ.get_carry_in(21), sequence_f0_9d_adv));
        tmp66 = simd_not(tmp40);
        tmp67 = simd_or(simd_and(basis_bits.bit_4, tmp66), simd_andc(tmp40, basis_bits.bit_4));
        byte_range_b3_ba = simd_and(tmp54, tmp67);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(sequence_f0_9d_85, carryQ.get_carry_in(22), sequence_f0_9d_85_adv));
        tmp68 = simd_and(sequence_f0_9d_85_adv, byte_range_b3_ba);
        struct_Cf.cc = simd_or(struct_Cf.cc, tmp68);
        tmp69 = simd_andc(tmp27, tmp4);
        byte_f3 = simd_and(tmp59, tmp69);
        carryQ.cq[23] = carryout2carry(pablo_blk_Advance(byte_f3, carryQ.get_carry_in(23), tmp70));
        sequence_f3_a0 = simd_and(tmp70, byte_a0);
        carryQ.cq[24] = carryout2carry(pablo_blk_Advance(byte_f3, carryQ.get_carry_in(24), byte_f3_adv));
        carryQ.cq[25] = carryout2carry(pablo_blk_Advance(sequence_f3_a0, carryQ.get_carry_in(25), tmp71));
        sequence_f3_a0_80 = simd_and(tmp71, byte_80);
        carryQ.cq[26] = carryout2carry(pablo_blk_Advance(sequence_f3_a0, carryQ.get_carry_in(26), sequence_f3_a0_adv));
        tmp72 = simd_and(tmp7, basis_bits.bit_2);
        cc_range_e0001_e0020_4 = simd_or(byte_81, tmp72);
        carryQ.cq[27] = carryout2carry(pablo_blk_Advance(sequence_f3_a0_80, carryQ.get_carry_in(27), sequence_f3_a0_80_adv));
        tmp73 = simd_and(sequence_f3_a0_80_adv, cc_range_e0001_e0020_4);
        struct_Cf.cc = simd_or(struct_Cf.cc, tmp73);
        sequence_f3_a0_81 = simd_and(sequence_f3_a0_adv, byte_81);
        byte_range_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        carryQ.cq[28] = carryout2carry(pablo_blk_Advance(sequence_f3_a0_81, carryQ.get_carry_in(28), sequence_f3_a0_81_adv));
        tmp74 = simd_and(sequence_f3_a0_81_adv, byte_range_80_bf);
        struct_Cf.cc = simd_or(struct_Cf.cc, tmp74);
  }
  CarryArray<29, 0> carryQ;
  };

  struct Cs {
  
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Cs & struct_Cs) {





        struct_Cs.cc = simd<1>::constant<0>();
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Cs & struct_Cs, BitBlock EOF_mask) {





        struct_Cs.cc = simd<1>::constant<0>();
  }
  
  };

  struct Zp {
  Zp() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Zp & struct_Zp) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, byte_e2, tmp7, tmp8, tmp9, tmp10;
		BitBlock tmp11, byte_80, tmp12, sequence_e2_80, byte_e2_adv, tmp13, tmp14;
		BitBlock tmp15, tmp16, byte_a9, sequence_e2_80_adv, tmp17;




        struct_Zp.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_and(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_andc(tmp5, tmp4);
        byte_e2 = simd_and(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp9 = simd_andc(tmp7, tmp8);
        tmp10 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp11 = simd_or(tmp4, tmp10);
        byte_80 = simd_andc(tmp9, tmp11);
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(0), tmp12));
        sequence_e2_80 = simd_and(tmp12, byte_80);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(1), byte_e2_adv));
        tmp13 = simd_and(tmp7, tmp2);
        tmp14 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp15 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp16 = simd_and(tmp14, tmp15);
        byte_a9 = simd_and(tmp13, tmp16);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(sequence_e2_80, carryQ.get_carry_in(2), sequence_e2_80_adv));
        tmp17 = simd_and(sequence_e2_80_adv, byte_a9);
        struct_Zp.cc = simd_or(struct_Zp.cc, tmp17);
        carryQ.CarryQ_Adjust(3);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Zp & struct_Zp, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, byte_e2, tmp7, tmp8, tmp9, tmp10;
		BitBlock tmp11, byte_80, tmp12, sequence_e2_80, byte_e2_adv, tmp13, tmp14;
		BitBlock tmp15, tmp16, byte_a9, sequence_e2_80_adv, tmp17;




        struct_Zp.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_and(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_andc(tmp5, tmp4);
        byte_e2 = simd_and(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp9 = simd_andc(tmp7, tmp8);
        tmp10 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp11 = simd_or(tmp4, tmp10);
        byte_80 = simd_andc(tmp9, tmp11);
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(0), tmp12));
        sequence_e2_80 = simd_and(tmp12, byte_80);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(1), byte_e2_adv));
        tmp13 = simd_and(tmp7, tmp2);
        tmp14 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp15 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp16 = simd_and(tmp14, tmp15);
        byte_a9 = simd_and(tmp13, tmp16);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(sequence_e2_80, carryQ.get_carry_in(2), sequence_e2_80_adv));
        tmp17 = simd_and(sequence_e2_80_adv, byte_a9);
        struct_Zp.cc = simd_or(struct_Zp.cc, tmp17);
  }
  CarryArray<3, 0> carryQ;
  };

  struct Zs {
  Zs() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Zs & struct_Zs) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, byte_20, tmp7, tmp8, tmp9, tmp10;
		BitBlock tmp11, byte_c2, tmp12, tmp13, byte_a0, byte_c2_adv, tmp14, tmp15;
		BitBlock tmp16, tmp17, byte_e1, tmp18, tmp19, tmp20, tmp21, byte_9a, tmp22;
		BitBlock sequence_e1_9a, byte_e1_adv, tmp23, byte_80, sequence_e1_9a_adv;
		BitBlock tmp24, byte_e2, tmp25, sequence_e2_80, byte_e2_adv, tmp26, tmp27;
		BitBlock tmp28, tmp29, tmp30, tmp31, tmp32, cc_range_2000_202f_3;
		BitBlock sequence_e2_80_adv, tmp33, byte_81, sequence_e2_81, byte_9f;
		BitBlock sequence_e2_81_adv, tmp34, tmp35, byte_e3, tmp36, sequence_e3_80;
		BitBlock byte_e3_adv, sequence_e3_80_adv, tmp37;




        struct_Zs.cc = simd<1>::constant<0>();
        tmp1 = simd_or(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp2, tmp1);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_or(tmp4, tmp5);
        byte_20 = simd_andc(tmp3, tmp6);
        struct_Zs.cc = simd_or(struct_Zs.cc, byte_20);
        tmp7 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp9 = simd_andc(tmp7, tmp8);
        tmp10 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp11 = simd_andc(tmp10, tmp4);
        byte_c2 = simd_and(tmp9, tmp11);
        tmp12 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp13 = simd_and(tmp12, tmp2);
        byte_a0 = simd_andc(tmp13, tmp6);
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(byte_c2, carryQ.get_carry_in(0), byte_c2_adv));
        tmp14 = simd_and(byte_c2_adv, byte_a0);
        struct_Zs.cc = simd_or(struct_Zs.cc, tmp14);
        tmp15 = simd_and(tmp7, tmp2);
        tmp16 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp17 = simd_andc(tmp16, tmp4);
        byte_e1 = simd_and(tmp15, tmp17);
        tmp18 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp19 = simd_and(tmp12, tmp18);
        tmp20 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp21 = simd_and(tmp20, tmp10);
        byte_9a = simd_and(tmp19, tmp21);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(1), tmp22));
        sequence_e1_9a = simd_and(tmp22, byte_9a);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(2), byte_e1_adv));
        tmp23 = simd_andc(tmp12, tmp8);
        byte_80 = simd_andc(tmp23, tmp6);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(sequence_e1_9a, carryQ.get_carry_in(3), sequence_e1_9a_adv));
        tmp24 = simd_and(sequence_e1_9a_adv, byte_80);
        struct_Zs.cc = simd_or(struct_Zs.cc, tmp24);
        byte_e2 = simd_and(tmp15, tmp11);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(4), tmp25));
        sequence_e2_80 = simd_and(tmp25, byte_80);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(5), byte_e2_adv));
        tmp26 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp27 = simd_or(basis_bits.bit_5, tmp26);
        tmp28 = simd_and(basis_bits.bit_4, tmp27);
        tmp29 = simd_andc(tmp23, tmp28);
        tmp30 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp31 = simd_and(tmp30, tmp26);
        tmp32 = simd_and(tmp13, tmp31);
        cc_range_2000_202f_3 = simd_or(tmp29, tmp32);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(sequence_e2_80, carryQ.get_carry_in(6), sequence_e2_80_adv));
        tmp33 = simd_and(sequence_e2_80_adv, cc_range_2000_202f_3);
        struct_Zs.cc = simd_or(struct_Zs.cc, tmp33);
        byte_81 = simd_and(tmp23, tmp17);
        sequence_e2_81 = simd_and(byte_e2_adv, byte_81);
        byte_9f = simd_and(tmp19, tmp31);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(sequence_e2_81, carryQ.get_carry_in(7), sequence_e2_81_adv));
        tmp34 = simd_and(sequence_e2_81_adv, byte_9f);
        struct_Zs.cc = simd_or(struct_Zs.cc, tmp34);
        tmp35 = simd_andc(tmp26, tmp4);
        byte_e3 = simd_and(tmp15, tmp35);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(byte_e3, carryQ.get_carry_in(8), tmp36));
        sequence_e3_80 = simd_and(tmp36, byte_80);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(byte_e3, carryQ.get_carry_in(9), byte_e3_adv));
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(sequence_e3_80, carryQ.get_carry_in(10), sequence_e3_80_adv));
        tmp37 = simd_and(sequence_e3_80_adv, byte_80);
        struct_Zs.cc = simd_or(struct_Zs.cc, tmp37);
        carryQ.CarryQ_Adjust(11);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Zs & struct_Zs, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, byte_20, tmp7, tmp8, tmp9, tmp10;
		BitBlock tmp11, byte_c2, tmp12, tmp13, byte_a0, byte_c2_adv, tmp14, tmp15;
		BitBlock tmp16, tmp17, byte_e1, tmp18, tmp19, tmp20, tmp21, byte_9a, tmp22;
		BitBlock sequence_e1_9a, byte_e1_adv, tmp23, byte_80, sequence_e1_9a_adv;
		BitBlock tmp24, byte_e2, tmp25, sequence_e2_80, byte_e2_adv, tmp26, tmp27;
		BitBlock tmp28, tmp29, tmp30, tmp31, tmp32, cc_range_2000_202f_3;
		BitBlock sequence_e2_80_adv, tmp33, byte_81, sequence_e2_81, byte_9f;
		BitBlock sequence_e2_81_adv, tmp34, tmp35, byte_e3, tmp36, sequence_e3_80;
		BitBlock byte_e3_adv, sequence_e3_80_adv, tmp37;




        struct_Zs.cc = simd<1>::constant<0>();
        tmp1 = simd_or(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp2, tmp1);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_or(tmp4, tmp5);
        byte_20 = simd_andc(tmp3, tmp6);
        struct_Zs.cc = simd_or(struct_Zs.cc, byte_20);
        tmp7 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp9 = simd_andc(tmp7, tmp8);
        tmp10 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp11 = simd_andc(tmp10, tmp4);
        byte_c2 = simd_and(tmp9, tmp11);
        tmp12 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp13 = simd_and(tmp12, tmp2);
        byte_a0 = simd_andc(tmp13, tmp6);
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(byte_c2, carryQ.get_carry_in(0), byte_c2_adv));
        tmp14 = simd_and(byte_c2_adv, byte_a0);
        struct_Zs.cc = simd_or(struct_Zs.cc, tmp14);
        tmp15 = simd_and(tmp7, tmp2);
        tmp16 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp17 = simd_andc(tmp16, tmp4);
        byte_e1 = simd_and(tmp15, tmp17);
        tmp18 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp19 = simd_and(tmp12, tmp18);
        tmp20 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp21 = simd_and(tmp20, tmp10);
        byte_9a = simd_and(tmp19, tmp21);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(1), tmp22));
        sequence_e1_9a = simd_and(tmp22, byte_9a);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(byte_e1, carryQ.get_carry_in(2), byte_e1_adv));
        tmp23 = simd_andc(tmp12, tmp8);
        byte_80 = simd_andc(tmp23, tmp6);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(sequence_e1_9a, carryQ.get_carry_in(3), sequence_e1_9a_adv));
        tmp24 = simd_and(sequence_e1_9a_adv, byte_80);
        struct_Zs.cc = simd_or(struct_Zs.cc, tmp24);
        byte_e2 = simd_and(tmp15, tmp11);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(4), tmp25));
        sequence_e2_80 = simd_and(tmp25, byte_80);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(byte_e2, carryQ.get_carry_in(5), byte_e2_adv));
        tmp26 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp27 = simd_or(basis_bits.bit_5, tmp26);
        tmp28 = simd_and(basis_bits.bit_4, tmp27);
        tmp29 = simd_andc(tmp23, tmp28);
        tmp30 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp31 = simd_and(tmp30, tmp26);
        tmp32 = simd_and(tmp13, tmp31);
        cc_range_2000_202f_3 = simd_or(tmp29, tmp32);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(sequence_e2_80, carryQ.get_carry_in(6), sequence_e2_80_adv));
        tmp33 = simd_and(sequence_e2_80_adv, cc_range_2000_202f_3);
        struct_Zs.cc = simd_or(struct_Zs.cc, tmp33);
        byte_81 = simd_and(tmp23, tmp17);
        sequence_e2_81 = simd_and(byte_e2_adv, byte_81);
        byte_9f = simd_and(tmp19, tmp31);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(sequence_e2_81, carryQ.get_carry_in(7), sequence_e2_81_adv));
        tmp34 = simd_and(sequence_e2_81_adv, byte_9f);
        struct_Zs.cc = simd_or(struct_Zs.cc, tmp34);
        tmp35 = simd_andc(tmp26, tmp4);
        byte_e3 = simd_and(tmp15, tmp35);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(byte_e3, carryQ.get_carry_in(8), tmp36));
        sequence_e3_80 = simd_and(tmp36, byte_80);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(byte_e3, carryQ.get_carry_in(9), byte_e3_adv));
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(sequence_e3_80, carryQ.get_carry_in(10), sequence_e3_80_adv));
        tmp37 = simd_and(sequence_e3_80_adv, byte_80);
        struct_Zs.cc = simd_or(struct_Zs.cc, tmp37);
  }
  CarryArray<11, 0> carryQ;
  };



#endif // UNICODE_CATEGORIES_H

