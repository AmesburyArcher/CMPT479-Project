/*
 *  Copyright (c) 2014 International Characters.
 *  This software is licensed to the public under the Open Software License 3.0.
 *  icgrep is a trademark of International Characters.
 *
 *  This is a generated file, produced by unicode_category_compiler.py.
 *  
 */

#ifndef UNICODE_CATEGORIES_H
#define UNICODE_CATEGORIES_H


#include "icgrep.h"

#define LocalCarryDeclare(name, count)\
CarryArray<count, 0> name;\



  struct Struct_Ps {
  BitBlock cc;
};

  struct Struct_Nl {
  BitBlock cc;
};

  struct Struct_No {
  BitBlock cc;
};

  struct Struct_Lo {
  BitBlock cc;
};

  struct Struct_Ll {
  BitBlock cc;
};

  struct Struct_Lm {
  BitBlock cc;
};

  struct Struct_Nd {
  BitBlock cc;
};

  struct Struct_Pc {
  BitBlock cc;
};

  struct Struct_Lt {
  BitBlock cc;
};

  struct Struct_Lu {
  BitBlock cc;
};

  struct Struct_Pf {
  BitBlock cc;
};

  struct Struct_Pd {
  BitBlock cc;
};

  struct Struct_Pe {
  BitBlock cc;
};

  struct Struct_Pi {
  BitBlock cc;
};

  struct Struct_Po {
  BitBlock cc;
};

  struct Struct_Me {
  BitBlock cc;
};

  struct Struct_Mc {
  BitBlock cc;
};

  struct Struct_Mn {
  BitBlock cc;
};

  struct Struct_Sk {
  BitBlock cc;
};

  struct Struct_So {
  BitBlock cc;
};

  struct Struct_Sm {
  BitBlock cc;
};

  struct Struct_Sc {
  BitBlock cc;
};

  struct Struct_Zl {
  BitBlock cc;
};

  struct Struct_Co {
  BitBlock cc;
};

  struct Struct_Cn {
  BitBlock cc;
};

  struct Struct_Cc {
  BitBlock cc;
};

  struct Struct_Cf {
  BitBlock cc;
};

  struct Struct_Cs {
  BitBlock cc;
};

  struct Struct_Zp {
  BitBlock cc;
};

  struct Struct_Zs {
  BitBlock cc;
};

  struct Ps {
  Ps() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Ps & struct_Ps) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_28_28, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, bytetest_5b_5b, tmp12, tmp13, bytetest_7b_7b, tmp14;
		BitBlock tmp15, tmp16, tmp17, bytetest_e0, tmp18, tmp19, tmp20, tmp21;
		BitBlock bytetest_bc, tmp22, tmp23, bytetest_ba_ba, tmp24, tmp25, tmp26, tmp27;
		BitBlock tmp28, tmp29, tmp30, bytetest_bc_bc, tmp31, tmp32, tmp33, bytetest_e1;
		BitBlock tmp34, bytetest_9a, bytetest_9b_9b, tmp35, tmp36, tmp37, tmp38, tmp39;
		BitBlock tmp40, bytetest_e2, tmp41, tmp42, bytetest_80, bytetest_9a_9a, tmp43;
		BitBlock tmp44, tmp45, tmp46, tmp47, tmp48, bytetest_9e_9e, tmp49, bytetest_81;
		BitBlock tmp50, tmp51, bytetest_85_85, tmp52, tmp53, tmp54, tmp55;
		BitBlock bytetest_bd_bd, tmp56, bytetest_82, bytetest_8d_8d, tmp57, tmp58;
		BitBlock tmp59, bytetest_8c, bytetest_88_88, tmp60, tmp61, tmp62;
		BitBlock bytetest_8a_8a, tmp63, tmp64, tmp65, bytetest_a9_a9, tmp66;
		BitBlock bytetest_9d, bytetest_a8_a8, tmp67, tmp68, tmp69, bytetest_aa_aa;
		BitBlock tmp70, bytetest_ac_ac, tmp71, bytetest_ae_ae, tmp72, bytetest_b0_b0;
		BitBlock tmp73, bytetest_b2_b2, tmp74, tmp75, bytetest_b4_b4, tmp76, tmp77;
		BitBlock bytetest_9f, tmp78, tmp79, tmp80, tmp81, bytetest_a6_a6, tmp82, tmp83;
		BitBlock tmp84, tmp85, tmp86, bytetest_a6, tmp87, bytetest_83_83, tmp88, tmp89;
		BitBlock tmp90, tmp91, tmp92, bytetest_87_87, tmp93, bytetest_89_89, tmp94;
		BitBlock bytetest_8b_8b, tmp95, tmp96, bytetest_8f_8f, tmp97, bytetest_91_91;
		BitBlock tmp98, bytetest_93_93, tmp99, bytetest_95_95, tmp100, bytetest_97_97;
		BitBlock tmp101, bytetest_a7, bytetest_98_98, tmp102, tmp103, tmp104, tmp105;
		BitBlock tmp106, bytetest_b8, bytetest_a2_a2, tmp107, tmp108, tmp109;
		BitBlock bytetest_a4_a4, tmp110, tmp111, tmp112, bytetest_e3, tmp113, tmp114;
		BitBlock tmp115, tmp116, tmp117, tmp118, bytetest_8c_8c, tmp119;
		BitBlock bytetest_8e_8e, tmp120, bytetest_90_90, tmp121, bytetest_94_94;
		BitBlock tmp122, bytetest_96_96, tmp123, tmp124, tmp125, bytetest_9d_9d;
		BitBlock tmp126, bytetest_ef, bytetest_b4, bytetest_be_be, tmp127, tmp128;
		BitBlock tmp129, tmp130, tmp131, tmp132, tmp133, tmp134, bytetest_b5_b5;
		BitBlock tmp135, bytetest_b7_b7, tmp136, bytetest_b9_b9, tmp137;
		BitBlock bytetest_bb_bb, tmp138, tmp139, bytetest_bf_bf, tmp140, bytetest_b9;
		BitBlock bytetest_81_81, tmp141, tmp142, tmp143, tmp144, tmp145;
		BitBlock bytetest_99_99, tmp146, tmp147, tmp148, tmp149, tmp150, tmp151;
		BitBlock tmp152, bytetest_bd, tmp153, tmp154, tmp155, bytetest_9f_9f, tmp156;
		BitBlock tmp157;




        struct_Ps.cc = simd<1>::constant<0>();
        tmp1 = simd_or(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp2, tmp1);
        tmp4 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_andc(tmp4, tmp5);
        bytetest_28_28 = simd_and(tmp3, tmp6);
        struct_Ps.cc = simd_or(bytetest_28_28, struct_Ps.cc);
        tmp7 = simd_andc(basis_bits.bit_1, basis_bits.bit_0);
        tmp8 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp11 = simd_and(tmp4, tmp10);
        bytetest_5b_5b = simd_and(tmp9, tmp11);
        struct_Ps.cc = simd_or(bytetest_5b_5b, struct_Ps.cc);
        tmp12 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp13 = simd_and(tmp7, tmp12);
        bytetest_7b_7b = simd_and(tmp13, tmp11);
        struct_Ps.cc = simd_or(bytetest_7b_7b, struct_Ps.cc);
        tmp14 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp15 = simd_and(tmp14, tmp2);
        tmp16 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp17 = simd_or(tmp16, tmp5);
        bytetest_e0 = simd_andc(tmp15, tmp17);
        tmp18 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp19 = simd_and(tmp18, tmp12);
        tmp20 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp21 = simd_andc(tmp20, tmp5);
        bytetest_bc = simd_and(tmp19, tmp21);
        tmp22 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp23 = simd_and(tmp4, tmp22);
        bytetest_ba_ba = simd_and(tmp19, tmp23);
        tmp24 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp24, carryQ.get_carry_in(0), tmp25));
        tmp26 = simd_and(tmp25, bytetest_e0);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp26, carryQ.get_carry_in(1), tmp27));
        tmp28 = simd_and(tmp27, bytetest_bc);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp28, carryQ.get_carry_in(2), tmp29));
        tmp30 = simd_and(tmp29, bytetest_ba_ba);
        struct_Ps.cc = simd_or(tmp30, struct_Ps.cc);
        bytetest_e0 = simd_andc(tmp15, tmp17);
        bytetest_bc = simd_and(tmp19, tmp21);
        bytetest_bc_bc = simd_and(tmp19, tmp21);
        tmp31 = simd_and(tmp29, bytetest_bc_bc);
        struct_Ps.cc = simd_or(tmp31, struct_Ps.cc);
        tmp32 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp33 = simd_andc(tmp32, tmp16);
        bytetest_e1 = simd_and(tmp15, tmp33);
        tmp34 = simd_and(tmp18, tmp8);
        bytetest_9a = simd_and(tmp34, tmp23);
        bytetest_9b_9b = simd_and(tmp34, tmp11);
        tmp35 = simd_and(tmp25, bytetest_e1);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp35, carryQ.get_carry_in(3), tmp36));
        tmp37 = simd_and(tmp36, bytetest_9a);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp37, carryQ.get_carry_in(4), tmp38));
        tmp39 = simd_and(tmp38, bytetest_9b_9b);
        struct_Ps.cc = simd_or(tmp39, struct_Ps.cc);
        tmp40 = simd_andc(tmp22, tmp16);
        bytetest_e2 = simd_and(tmp15, tmp40);
        tmp41 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp42 = simd_andc(tmp18, tmp41);
        bytetest_80 = simd_andc(tmp42, tmp17);
        bytetest_9a_9a = simd_and(tmp34, tmp23);
        tmp43 = simd_and(tmp25, bytetest_e2);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp43, carryQ.get_carry_in(5), tmp44));
        tmp45 = simd_and(tmp44, bytetest_80);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp45, carryQ.get_carry_in(6), tmp46));
        tmp47 = simd_and(tmp46, bytetest_9a_9a);
        struct_Ps.cc = simd_or(tmp47, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_80 = simd_andc(tmp42, tmp17);
        tmp48 = simd_and(tmp20, tmp22);
        bytetest_9e_9e = simd_and(tmp34, tmp48);
        tmp49 = simd_and(tmp46, bytetest_9e_9e);
        struct_Ps.cc = simd_or(tmp49, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_81 = simd_and(tmp42, tmp33);
        tmp50 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp51 = simd_and(tmp50, tmp32);
        bytetest_85_85 = simd_and(tmp42, tmp51);
        tmp52 = simd_and(tmp44, bytetest_81);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp52, carryQ.get_carry_in(7), tmp53));
        tmp54 = simd_and(tmp53, bytetest_85_85);
        struct_Ps.cc = simd_or(tmp54, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_81 = simd_and(tmp42, tmp33);
        tmp55 = simd_and(tmp20, tmp32);
        bytetest_bd_bd = simd_and(tmp19, tmp55);
        tmp56 = simd_and(tmp53, bytetest_bd_bd);
        struct_Ps.cc = simd_or(tmp56, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_82 = simd_and(tmp42, tmp40);
        bytetest_8d_8d = simd_and(tmp42, tmp55);
        tmp57 = simd_and(tmp44, bytetest_82);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(tmp57, carryQ.get_carry_in(8), tmp58));
        tmp59 = simd_and(tmp58, bytetest_8d_8d);
        struct_Ps.cc = simd_or(tmp59, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_8c = simd_and(tmp42, tmp21);
        bytetest_88_88 = simd_and(tmp42, tmp6);
        tmp60 = simd_and(tmp44, bytetest_8c);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(tmp60, carryQ.get_carry_in(9), tmp61));
        tmp62 = simd_and(tmp61, bytetest_88_88);
        struct_Ps.cc = simd_or(tmp62, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_8c = simd_and(tmp42, tmp21);
        bytetest_8a_8a = simd_and(tmp42, tmp23);
        tmp63 = simd_and(tmp61, bytetest_8a_8a);
        struct_Ps.cc = simd_or(tmp63, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_8c = simd_and(tmp42, tmp21);
        tmp64 = simd_and(tmp18, tmp2);
        tmp65 = simd_and(tmp4, tmp32);
        bytetest_a9_a9 = simd_and(tmp64, tmp65);
        tmp66 = simd_and(tmp61, bytetest_a9_a9);
        struct_Ps.cc = simd_or(tmp66, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_9d = simd_and(tmp34, tmp55);
        bytetest_a8_a8 = simd_and(tmp64, tmp6);
        tmp67 = simd_and(tmp44, bytetest_9d);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(tmp67, carryQ.get_carry_in(10), tmp68));
        tmp69 = simd_and(tmp68, bytetest_a8_a8);
        struct_Ps.cc = simd_or(tmp69, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_9d = simd_and(tmp34, tmp55);
        bytetest_aa_aa = simd_and(tmp64, tmp23);
        tmp70 = simd_and(tmp68, bytetest_aa_aa);
        struct_Ps.cc = simd_or(tmp70, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_9d = simd_and(tmp34, tmp55);
        bytetest_ac_ac = simd_and(tmp64, tmp21);
        tmp71 = simd_and(tmp68, bytetest_ac_ac);
        struct_Ps.cc = simd_or(tmp71, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_9d = simd_and(tmp34, tmp55);
        bytetest_ae_ae = simd_and(tmp64, tmp48);
        tmp72 = simd_and(tmp68, bytetest_ae_ae);
        struct_Ps.cc = simd_or(tmp72, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_9d = simd_and(tmp34, tmp55);
        bytetest_b0_b0 = simd_andc(tmp19, tmp17);
        tmp73 = simd_and(tmp68, bytetest_b0_b0);
        struct_Ps.cc = simd_or(tmp73, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_9d = simd_and(tmp34, tmp55);
        bytetest_b2_b2 = simd_and(tmp19, tmp40);
        tmp74 = simd_and(tmp68, bytetest_b2_b2);
        struct_Ps.cc = simd_or(tmp74, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_9d = simd_and(tmp34, tmp55);
        tmp75 = simd_andc(tmp50, tmp5);
        bytetest_b4_b4 = simd_and(tmp19, tmp75);
        tmp76 = simd_and(tmp68, bytetest_b4_b4);
        struct_Ps.cc = simd_or(tmp76, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        tmp77 = simd_and(tmp20, tmp10);
        bytetest_9f = simd_and(tmp34, tmp77);
        bytetest_85_85 = simd_and(tmp42, tmp51);
        tmp78 = simd_and(tmp44, bytetest_9f);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(tmp78, carryQ.get_carry_in(11), tmp79));
        tmp80 = simd_and(tmp79, bytetest_85_85);
        struct_Ps.cc = simd_or(tmp80, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_9f = simd_and(tmp34, tmp77);
        tmp81 = simd_and(tmp50, tmp22);
        bytetest_a6_a6 = simd_and(tmp64, tmp81);
        tmp82 = simd_and(tmp79, bytetest_a6_a6);
        struct_Ps.cc = simd_or(tmp82, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_9f = simd_and(tmp34, tmp77);
        bytetest_a8_a8 = simd_and(tmp64, tmp6);
        tmp83 = simd_and(tmp79, bytetest_a8_a8);
        struct_Ps.cc = simd_or(tmp83, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_9f = simd_and(tmp34, tmp77);
        bytetest_aa_aa = simd_and(tmp64, tmp23);
        tmp84 = simd_and(tmp79, bytetest_aa_aa);
        struct_Ps.cc = simd_or(tmp84, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_9f = simd_and(tmp34, tmp77);
        bytetest_ac_ac = simd_and(tmp64, tmp21);
        tmp85 = simd_and(tmp79, bytetest_ac_ac);
        struct_Ps.cc = simd_or(tmp85, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_9f = simd_and(tmp34, tmp77);
        bytetest_ae_ae = simd_and(tmp64, tmp48);
        tmp86 = simd_and(tmp79, bytetest_ae_ae);
        struct_Ps.cc = simd_or(tmp86, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_a6 = simd_and(tmp64, tmp81);
        tmp87 = simd_andc(tmp10, tmp16);
        bytetest_83_83 = simd_and(tmp42, tmp87);
        tmp88 = simd_and(tmp44, bytetest_a6);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(tmp88, carryQ.get_carry_in(12), tmp89));
        tmp90 = simd_and(tmp89, bytetest_83_83);
        struct_Ps.cc = simd_or(tmp90, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_a6 = simd_and(tmp64, tmp81);
        bytetest_85_85 = simd_and(tmp42, tmp51);
        tmp91 = simd_and(tmp89, bytetest_85_85);
        struct_Ps.cc = simd_or(tmp91, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_a6 = simd_and(tmp64, tmp81);
        tmp92 = simd_and(tmp50, tmp10);
        bytetest_87_87 = simd_and(tmp42, tmp92);
        tmp93 = simd_and(tmp89, bytetest_87_87);
        struct_Ps.cc = simd_or(tmp93, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_a6 = simd_and(tmp64, tmp81);
        bytetest_89_89 = simd_and(tmp42, tmp65);
        tmp94 = simd_and(tmp89, bytetest_89_89);
        struct_Ps.cc = simd_or(tmp94, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_a6 = simd_and(tmp64, tmp81);
        bytetest_8b_8b = simd_and(tmp42, tmp11);
        tmp95 = simd_and(tmp89, bytetest_8b_8b);
        struct_Ps.cc = simd_or(tmp95, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_a6 = simd_and(tmp64, tmp81);
        bytetest_8d_8d = simd_and(tmp42, tmp55);
        tmp96 = simd_and(tmp89, bytetest_8d_8d);
        struct_Ps.cc = simd_or(tmp96, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_a6 = simd_and(tmp64, tmp81);
        bytetest_8f_8f = simd_and(tmp42, tmp77);
        tmp97 = simd_and(tmp89, bytetest_8f_8f);
        struct_Ps.cc = simd_or(tmp97, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_a6 = simd_and(tmp64, tmp81);
        bytetest_91_91 = simd_and(tmp34, tmp33);
        tmp98 = simd_and(tmp89, bytetest_91_91);
        struct_Ps.cc = simd_or(tmp98, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_a6 = simd_and(tmp64, tmp81);
        bytetest_93_93 = simd_and(tmp34, tmp87);
        tmp99 = simd_and(tmp89, bytetest_93_93);
        struct_Ps.cc = simd_or(tmp99, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_a6 = simd_and(tmp64, tmp81);
        bytetest_95_95 = simd_and(tmp34, tmp51);
        tmp100 = simd_and(tmp89, bytetest_95_95);
        struct_Ps.cc = simd_or(tmp100, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_a6 = simd_and(tmp64, tmp81);
        bytetest_97_97 = simd_and(tmp34, tmp92);
        tmp101 = simd_and(tmp89, bytetest_97_97);
        struct_Ps.cc = simd_or(tmp101, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_a7 = simd_and(tmp64, tmp92);
        bytetest_98_98 = simd_and(tmp34, tmp6);
        tmp102 = simd_and(tmp44, bytetest_a7);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(tmp102, carryQ.get_carry_in(13), tmp103));
        tmp104 = simd_and(tmp103, bytetest_98_98);
        struct_Ps.cc = simd_or(tmp104, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_a7 = simd_and(tmp64, tmp92);
        bytetest_9a_9a = simd_and(tmp34, tmp23);
        tmp105 = simd_and(tmp103, bytetest_9a_9a);
        struct_Ps.cc = simd_or(tmp105, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_a7 = simd_and(tmp64, tmp92);
        bytetest_bc_bc = simd_and(tmp19, tmp21);
        tmp106 = simd_and(tmp103, bytetest_bc_bc);
        struct_Ps.cc = simd_or(tmp106, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_b8 = simd_and(tmp19, tmp6);
        bytetest_a2_a2 = simd_and(tmp64, tmp40);
        tmp107 = simd_and(tmp44, bytetest_b8);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(tmp107, carryQ.get_carry_in(14), tmp108));
        tmp109 = simd_and(tmp108, bytetest_a2_a2);
        struct_Ps.cc = simd_or(tmp109, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_b8 = simd_and(tmp19, tmp6);
        bytetest_a4_a4 = simd_and(tmp64, tmp75);
        tmp110 = simd_and(tmp108, bytetest_a4_a4);
        struct_Ps.cc = simd_or(tmp110, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_b8 = simd_and(tmp19, tmp6);
        bytetest_a6_a6 = simd_and(tmp64, tmp81);
        tmp111 = simd_and(tmp108, bytetest_a6_a6);
        struct_Ps.cc = simd_or(tmp111, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_b8 = simd_and(tmp19, tmp6);
        bytetest_a8_a8 = simd_and(tmp64, tmp6);
        tmp112 = simd_and(tmp108, bytetest_a8_a8);
        struct_Ps.cc = simd_or(tmp112, struct_Ps.cc);
        bytetest_e3 = simd_and(tmp15, tmp87);
        bytetest_80 = simd_andc(tmp42, tmp17);
        bytetest_88_88 = simd_and(tmp42, tmp6);
        tmp113 = simd_and(tmp25, bytetest_e3);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(tmp113, carryQ.get_carry_in(15), tmp114));
        tmp115 = simd_and(tmp114, bytetest_80);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(tmp115, carryQ.get_carry_in(16), tmp116));
        tmp117 = simd_and(tmp116, bytetest_88_88);
        struct_Ps.cc = simd_or(tmp117, struct_Ps.cc);
        bytetest_e3 = simd_and(tmp15, tmp87);
        bytetest_80 = simd_andc(tmp42, tmp17);
        bytetest_8a_8a = simd_and(tmp42, tmp23);
        tmp118 = simd_and(tmp116, bytetest_8a_8a);
        struct_Ps.cc = simd_or(tmp118, struct_Ps.cc);
        bytetest_e3 = simd_and(tmp15, tmp87);
        bytetest_80 = simd_andc(tmp42, tmp17);
        bytetest_8c_8c = simd_and(tmp42, tmp21);
        tmp119 = simd_and(tmp116, bytetest_8c_8c);
        struct_Ps.cc = simd_or(tmp119, struct_Ps.cc);
        bytetest_e3 = simd_and(tmp15, tmp87);
        bytetest_80 = simd_andc(tmp42, tmp17);
        bytetest_8e_8e = simd_and(tmp42, tmp48);
        tmp120 = simd_and(tmp116, bytetest_8e_8e);
        struct_Ps.cc = simd_or(tmp120, struct_Ps.cc);
        bytetest_e3 = simd_and(tmp15, tmp87);
        bytetest_80 = simd_andc(tmp42, tmp17);
        bytetest_90_90 = simd_andc(tmp34, tmp17);
        tmp121 = simd_and(tmp116, bytetest_90_90);
        struct_Ps.cc = simd_or(tmp121, struct_Ps.cc);
        bytetest_e3 = simd_and(tmp15, tmp87);
        bytetest_80 = simd_andc(tmp42, tmp17);
        bytetest_94_94 = simd_and(tmp34, tmp75);
        tmp122 = simd_and(tmp116, bytetest_94_94);
        struct_Ps.cc = simd_or(tmp122, struct_Ps.cc);
        bytetest_e3 = simd_and(tmp15, tmp87);
        bytetest_80 = simd_andc(tmp42, tmp17);
        bytetest_96_96 = simd_and(tmp34, tmp81);
        tmp123 = simd_and(tmp116, bytetest_96_96);
        struct_Ps.cc = simd_or(tmp123, struct_Ps.cc);
        bytetest_e3 = simd_and(tmp15, tmp87);
        bytetest_80 = simd_andc(tmp42, tmp17);
        bytetest_98_98 = simd_and(tmp34, tmp6);
        tmp124 = simd_and(tmp116, bytetest_98_98);
        struct_Ps.cc = simd_or(tmp124, struct_Ps.cc);
        bytetest_e3 = simd_and(tmp15, tmp87);
        bytetest_80 = simd_andc(tmp42, tmp17);
        bytetest_9a_9a = simd_and(tmp34, tmp23);
        tmp125 = simd_and(tmp116, bytetest_9a_9a);
        struct_Ps.cc = simd_or(tmp125, struct_Ps.cc);
        bytetest_e3 = simd_and(tmp15, tmp87);
        bytetest_80 = simd_andc(tmp42, tmp17);
        bytetest_9d_9d = simd_and(tmp34, tmp55);
        tmp126 = simd_and(tmp116, bytetest_9d_9d);
        struct_Ps.cc = simd_or(tmp126, struct_Ps.cc);
        bytetest_ef = simd_and(tmp15, tmp77);
        bytetest_b4 = simd_and(tmp19, tmp75);
        bytetest_be_be = simd_and(tmp19, tmp48);
        tmp127 = simd_and(tmp25, bytetest_ef);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(tmp127, carryQ.get_carry_in(17), tmp128));
        tmp129 = simd_and(tmp128, bytetest_b4);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(tmp129, carryQ.get_carry_in(18), tmp130));
        tmp131 = simd_and(tmp130, bytetest_be_be);
        struct_Ps.cc = simd_or(tmp131, struct_Ps.cc);
        bytetest_ef = simd_and(tmp15, tmp77);
        bytetest_b8 = simd_and(tmp19, tmp6);
        bytetest_97_97 = simd_and(tmp34, tmp92);
        tmp132 = simd_and(tmp128, bytetest_b8);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(tmp132, carryQ.get_carry_in(19), tmp133));
        tmp134 = simd_and(tmp133, bytetest_97_97);
        struct_Ps.cc = simd_or(tmp134, struct_Ps.cc);
        bytetest_ef = simd_and(tmp15, tmp77);
        bytetest_b8 = simd_and(tmp19, tmp6);
        bytetest_b5_b5 = simd_and(tmp19, tmp51);
        tmp135 = simd_and(tmp133, bytetest_b5_b5);
        struct_Ps.cc = simd_or(tmp135, struct_Ps.cc);
        bytetest_ef = simd_and(tmp15, tmp77);
        bytetest_b8 = simd_and(tmp19, tmp6);
        bytetest_b7_b7 = simd_and(tmp19, tmp92);
        tmp136 = simd_and(tmp133, bytetest_b7_b7);
        struct_Ps.cc = simd_or(tmp136, struct_Ps.cc);
        bytetest_ef = simd_and(tmp15, tmp77);
        bytetest_b8 = simd_and(tmp19, tmp6);
        bytetest_b9_b9 = simd_and(tmp19, tmp65);
        tmp137 = simd_and(tmp133, bytetest_b9_b9);
        struct_Ps.cc = simd_or(tmp137, struct_Ps.cc);
        bytetest_ef = simd_and(tmp15, tmp77);
        bytetest_b8 = simd_and(tmp19, tmp6);
        bytetest_bb_bb = simd_and(tmp19, tmp11);
        tmp138 = simd_and(tmp133, bytetest_bb_bb);
        struct_Ps.cc = simd_or(tmp138, struct_Ps.cc);
        bytetest_ef = simd_and(tmp15, tmp77);
        bytetest_b8 = simd_and(tmp19, tmp6);
        bytetest_bd_bd = simd_and(tmp19, tmp55);
        tmp139 = simd_and(tmp133, bytetest_bd_bd);
        struct_Ps.cc = simd_or(tmp139, struct_Ps.cc);
        bytetest_ef = simd_and(tmp15, tmp77);
        bytetest_b8 = simd_and(tmp19, tmp6);
        bytetest_bf_bf = simd_and(tmp19, tmp77);
        tmp140 = simd_and(tmp133, bytetest_bf_bf);
        struct_Ps.cc = simd_or(tmp140, struct_Ps.cc);
        bytetest_ef = simd_and(tmp15, tmp77);
        bytetest_b9 = simd_and(tmp19, tmp65);
        bytetest_81_81 = simd_and(tmp42, tmp33);
        tmp141 = simd_and(tmp128, bytetest_b9);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(tmp141, carryQ.get_carry_in(20), tmp142));
        tmp143 = simd_and(tmp142, bytetest_81_81);
        struct_Ps.cc = simd_or(tmp143, struct_Ps.cc);
        bytetest_ef = simd_and(tmp15, tmp77);
        bytetest_b9 = simd_and(tmp19, tmp65);
        bytetest_83_83 = simd_and(tmp42, tmp87);
        tmp144 = simd_and(tmp142, bytetest_83_83);
        struct_Ps.cc = simd_or(tmp144, struct_Ps.cc);
        bytetest_ef = simd_and(tmp15, tmp77);
        bytetest_b9 = simd_and(tmp19, tmp65);
        bytetest_87_87 = simd_and(tmp42, tmp92);
        tmp145 = simd_and(tmp142, bytetest_87_87);
        struct_Ps.cc = simd_or(tmp145, struct_Ps.cc);
        bytetest_ef = simd_and(tmp15, tmp77);
        bytetest_b9 = simd_and(tmp19, tmp65);
        bytetest_99_99 = simd_and(tmp34, tmp65);
        tmp146 = simd_and(tmp142, bytetest_99_99);
        struct_Ps.cc = simd_or(tmp146, struct_Ps.cc);
        bytetest_ef = simd_and(tmp15, tmp77);
        bytetest_b9 = simd_and(tmp19, tmp65);
        bytetest_9b_9b = simd_and(tmp34, tmp11);
        tmp147 = simd_and(tmp142, bytetest_9b_9b);
        struct_Ps.cc = simd_or(tmp147, struct_Ps.cc);
        bytetest_ef = simd_and(tmp15, tmp77);
        bytetest_b9 = simd_and(tmp19, tmp65);
        bytetest_9d_9d = simd_and(tmp34, tmp55);
        tmp148 = simd_and(tmp142, bytetest_9d_9d);
        struct_Ps.cc = simd_or(tmp148, struct_Ps.cc);
        bytetest_ef = simd_and(tmp15, tmp77);
        bytetest_bc = simd_and(tmp19, tmp21);
        bytetest_88_88 = simd_and(tmp42, tmp6);
        tmp149 = simd_and(tmp128, bytetest_bc);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(tmp149, carryQ.get_carry_in(21), tmp150));
        tmp151 = simd_and(tmp150, bytetest_88_88);
        struct_Ps.cc = simd_or(tmp151, struct_Ps.cc);
        bytetest_ef = simd_and(tmp15, tmp77);
        bytetest_bc = simd_and(tmp19, tmp21);
        bytetest_bb_bb = simd_and(tmp19, tmp11);
        tmp152 = simd_and(tmp150, bytetest_bb_bb);
        struct_Ps.cc = simd_or(tmp152, struct_Ps.cc);
        bytetest_ef = simd_and(tmp15, tmp77);
        bytetest_bd = simd_and(tmp19, tmp55);
        bytetest_9b_9b = simd_and(tmp34, tmp11);
        tmp153 = simd_and(tmp128, bytetest_bd);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(tmp153, carryQ.get_carry_in(22), tmp154));
        tmp155 = simd_and(tmp154, bytetest_9b_9b);
        struct_Ps.cc = simd_or(tmp155, struct_Ps.cc);
        bytetest_ef = simd_and(tmp15, tmp77);
        bytetest_bd = simd_and(tmp19, tmp55);
        bytetest_9f_9f = simd_and(tmp34, tmp77);
        tmp156 = simd_and(tmp154, bytetest_9f_9f);
        struct_Ps.cc = simd_or(tmp156, struct_Ps.cc);
        bytetest_ef = simd_and(tmp15, tmp77);
        bytetest_bd = simd_and(tmp19, tmp55);
        bytetest_a2_a2 = simd_and(tmp64, tmp40);
        tmp157 = simd_and(tmp154, bytetest_a2_a2);
        struct_Ps.cc = simd_or(tmp157, struct_Ps.cc);
        carryQ.CarryQ_Adjust(23);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Ps & struct_Ps, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_28_28, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, bytetest_5b_5b, tmp12, tmp13, bytetest_7b_7b, tmp14;
		BitBlock tmp15, tmp16, tmp17, bytetest_e0, tmp18, tmp19, tmp20, tmp21;
		BitBlock bytetest_bc, tmp22, tmp23, bytetest_ba_ba, tmp24, tmp25, tmp26, tmp27;
		BitBlock tmp28, tmp29, tmp30, bytetest_bc_bc, tmp31, tmp32, tmp33, bytetest_e1;
		BitBlock tmp34, bytetest_9a, bytetest_9b_9b, tmp35, tmp36, tmp37, tmp38, tmp39;
		BitBlock tmp40, bytetest_e2, tmp41, tmp42, bytetest_80, bytetest_9a_9a, tmp43;
		BitBlock tmp44, tmp45, tmp46, tmp47, tmp48, bytetest_9e_9e, tmp49, bytetest_81;
		BitBlock tmp50, tmp51, bytetest_85_85, tmp52, tmp53, tmp54, tmp55;
		BitBlock bytetest_bd_bd, tmp56, bytetest_82, bytetest_8d_8d, tmp57, tmp58;
		BitBlock tmp59, bytetest_8c, bytetest_88_88, tmp60, tmp61, tmp62;
		BitBlock bytetest_8a_8a, tmp63, tmp64, tmp65, bytetest_a9_a9, tmp66;
		BitBlock bytetest_9d, bytetest_a8_a8, tmp67, tmp68, tmp69, bytetest_aa_aa;
		BitBlock tmp70, bytetest_ac_ac, tmp71, bytetest_ae_ae, tmp72, bytetest_b0_b0;
		BitBlock tmp73, bytetest_b2_b2, tmp74, tmp75, bytetest_b4_b4, tmp76, tmp77;
		BitBlock bytetest_9f, tmp78, tmp79, tmp80, tmp81, bytetest_a6_a6, tmp82, tmp83;
		BitBlock tmp84, tmp85, tmp86, bytetest_a6, tmp87, bytetest_83_83, tmp88, tmp89;
		BitBlock tmp90, tmp91, tmp92, bytetest_87_87, tmp93, bytetest_89_89, tmp94;
		BitBlock bytetest_8b_8b, tmp95, tmp96, bytetest_8f_8f, tmp97, bytetest_91_91;
		BitBlock tmp98, bytetest_93_93, tmp99, bytetest_95_95, tmp100, bytetest_97_97;
		BitBlock tmp101, bytetest_a7, bytetest_98_98, tmp102, tmp103, tmp104, tmp105;
		BitBlock tmp106, bytetest_b8, bytetest_a2_a2, tmp107, tmp108, tmp109;
		BitBlock bytetest_a4_a4, tmp110, tmp111, tmp112, bytetest_e3, tmp113, tmp114;
		BitBlock tmp115, tmp116, tmp117, tmp118, bytetest_8c_8c, tmp119;
		BitBlock bytetest_8e_8e, tmp120, bytetest_90_90, tmp121, bytetest_94_94;
		BitBlock tmp122, bytetest_96_96, tmp123, tmp124, tmp125, bytetest_9d_9d;
		BitBlock tmp126, bytetest_ef, bytetest_b4, bytetest_be_be, tmp127, tmp128;
		BitBlock tmp129, tmp130, tmp131, tmp132, tmp133, tmp134, bytetest_b5_b5;
		BitBlock tmp135, bytetest_b7_b7, tmp136, bytetest_b9_b9, tmp137;
		BitBlock bytetest_bb_bb, tmp138, tmp139, bytetest_bf_bf, tmp140, bytetest_b9;
		BitBlock bytetest_81_81, tmp141, tmp142, tmp143, tmp144, tmp145;
		BitBlock bytetest_99_99, tmp146, tmp147, tmp148, tmp149, tmp150, tmp151;
		BitBlock tmp152, bytetest_bd, tmp153, tmp154, tmp155, bytetest_9f_9f, tmp156;
		BitBlock tmp157;




        struct_Ps.cc = simd<1>::constant<0>();
        tmp1 = simd_or(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp2, tmp1);
        tmp4 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_andc(tmp4, tmp5);
        bytetest_28_28 = simd_and(tmp3, tmp6);
        struct_Ps.cc = simd_or(bytetest_28_28, struct_Ps.cc);
        tmp7 = simd_andc(basis_bits.bit_1, basis_bits.bit_0);
        tmp8 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp11 = simd_and(tmp4, tmp10);
        bytetest_5b_5b = simd_and(tmp9, tmp11);
        struct_Ps.cc = simd_or(bytetest_5b_5b, struct_Ps.cc);
        tmp12 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp13 = simd_and(tmp7, tmp12);
        bytetest_7b_7b = simd_and(tmp13, tmp11);
        struct_Ps.cc = simd_or(bytetest_7b_7b, struct_Ps.cc);
        tmp14 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp15 = simd_and(tmp14, tmp2);
        tmp16 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp17 = simd_or(tmp16, tmp5);
        bytetest_e0 = simd_andc(tmp15, tmp17);
        tmp18 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp19 = simd_and(tmp18, tmp12);
        tmp20 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp21 = simd_andc(tmp20, tmp5);
        bytetest_bc = simd_and(tmp19, tmp21);
        tmp22 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp23 = simd_and(tmp4, tmp22);
        bytetest_ba_ba = simd_and(tmp19, tmp23);
        tmp24 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp24, carryQ.get_carry_in(0), tmp25));
        tmp26 = simd_and(tmp25, bytetest_e0);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp26, carryQ.get_carry_in(1), tmp27));
        tmp28 = simd_and(tmp27, bytetest_bc);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp28, carryQ.get_carry_in(2), tmp29));
        tmp30 = simd_and(tmp29, bytetest_ba_ba);
        struct_Ps.cc = simd_or(tmp30, struct_Ps.cc);
        bytetest_e0 = simd_andc(tmp15, tmp17);
        bytetest_bc = simd_and(tmp19, tmp21);
        bytetest_bc_bc = simd_and(tmp19, tmp21);
        tmp31 = simd_and(tmp29, bytetest_bc_bc);
        struct_Ps.cc = simd_or(tmp31, struct_Ps.cc);
        tmp32 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp33 = simd_andc(tmp32, tmp16);
        bytetest_e1 = simd_and(tmp15, tmp33);
        tmp34 = simd_and(tmp18, tmp8);
        bytetest_9a = simd_and(tmp34, tmp23);
        bytetest_9b_9b = simd_and(tmp34, tmp11);
        tmp35 = simd_and(tmp25, bytetest_e1);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp35, carryQ.get_carry_in(3), tmp36));
        tmp37 = simd_and(tmp36, bytetest_9a);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp37, carryQ.get_carry_in(4), tmp38));
        tmp39 = simd_and(tmp38, bytetest_9b_9b);
        struct_Ps.cc = simd_or(tmp39, struct_Ps.cc);
        tmp40 = simd_andc(tmp22, tmp16);
        bytetest_e2 = simd_and(tmp15, tmp40);
        tmp41 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp42 = simd_andc(tmp18, tmp41);
        bytetest_80 = simd_andc(tmp42, tmp17);
        bytetest_9a_9a = simd_and(tmp34, tmp23);
        tmp43 = simd_and(tmp25, bytetest_e2);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp43, carryQ.get_carry_in(5), tmp44));
        tmp45 = simd_and(tmp44, bytetest_80);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp45, carryQ.get_carry_in(6), tmp46));
        tmp47 = simd_and(tmp46, bytetest_9a_9a);
        struct_Ps.cc = simd_or(tmp47, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_80 = simd_andc(tmp42, tmp17);
        tmp48 = simd_and(tmp20, tmp22);
        bytetest_9e_9e = simd_and(tmp34, tmp48);
        tmp49 = simd_and(tmp46, bytetest_9e_9e);
        struct_Ps.cc = simd_or(tmp49, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_81 = simd_and(tmp42, tmp33);
        tmp50 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp51 = simd_and(tmp50, tmp32);
        bytetest_85_85 = simd_and(tmp42, tmp51);
        tmp52 = simd_and(tmp44, bytetest_81);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp52, carryQ.get_carry_in(7), tmp53));
        tmp54 = simd_and(tmp53, bytetest_85_85);
        struct_Ps.cc = simd_or(tmp54, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_81 = simd_and(tmp42, tmp33);
        tmp55 = simd_and(tmp20, tmp32);
        bytetest_bd_bd = simd_and(tmp19, tmp55);
        tmp56 = simd_and(tmp53, bytetest_bd_bd);
        struct_Ps.cc = simd_or(tmp56, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_82 = simd_and(tmp42, tmp40);
        bytetest_8d_8d = simd_and(tmp42, tmp55);
        tmp57 = simd_and(tmp44, bytetest_82);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(tmp57, carryQ.get_carry_in(8), tmp58));
        tmp59 = simd_and(tmp58, bytetest_8d_8d);
        struct_Ps.cc = simd_or(tmp59, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_8c = simd_and(tmp42, tmp21);
        bytetest_88_88 = simd_and(tmp42, tmp6);
        tmp60 = simd_and(tmp44, bytetest_8c);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(tmp60, carryQ.get_carry_in(9), tmp61));
        tmp62 = simd_and(tmp61, bytetest_88_88);
        struct_Ps.cc = simd_or(tmp62, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_8c = simd_and(tmp42, tmp21);
        bytetest_8a_8a = simd_and(tmp42, tmp23);
        tmp63 = simd_and(tmp61, bytetest_8a_8a);
        struct_Ps.cc = simd_or(tmp63, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_8c = simd_and(tmp42, tmp21);
        tmp64 = simd_and(tmp18, tmp2);
        tmp65 = simd_and(tmp4, tmp32);
        bytetest_a9_a9 = simd_and(tmp64, tmp65);
        tmp66 = simd_and(tmp61, bytetest_a9_a9);
        struct_Ps.cc = simd_or(tmp66, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_9d = simd_and(tmp34, tmp55);
        bytetest_a8_a8 = simd_and(tmp64, tmp6);
        tmp67 = simd_and(tmp44, bytetest_9d);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(tmp67, carryQ.get_carry_in(10), tmp68));
        tmp69 = simd_and(tmp68, bytetest_a8_a8);
        struct_Ps.cc = simd_or(tmp69, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_9d = simd_and(tmp34, tmp55);
        bytetest_aa_aa = simd_and(tmp64, tmp23);
        tmp70 = simd_and(tmp68, bytetest_aa_aa);
        struct_Ps.cc = simd_or(tmp70, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_9d = simd_and(tmp34, tmp55);
        bytetest_ac_ac = simd_and(tmp64, tmp21);
        tmp71 = simd_and(tmp68, bytetest_ac_ac);
        struct_Ps.cc = simd_or(tmp71, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_9d = simd_and(tmp34, tmp55);
        bytetest_ae_ae = simd_and(tmp64, tmp48);
        tmp72 = simd_and(tmp68, bytetest_ae_ae);
        struct_Ps.cc = simd_or(tmp72, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_9d = simd_and(tmp34, tmp55);
        bytetest_b0_b0 = simd_andc(tmp19, tmp17);
        tmp73 = simd_and(tmp68, bytetest_b0_b0);
        struct_Ps.cc = simd_or(tmp73, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_9d = simd_and(tmp34, tmp55);
        bytetest_b2_b2 = simd_and(tmp19, tmp40);
        tmp74 = simd_and(tmp68, bytetest_b2_b2);
        struct_Ps.cc = simd_or(tmp74, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_9d = simd_and(tmp34, tmp55);
        tmp75 = simd_andc(tmp50, tmp5);
        bytetest_b4_b4 = simd_and(tmp19, tmp75);
        tmp76 = simd_and(tmp68, bytetest_b4_b4);
        struct_Ps.cc = simd_or(tmp76, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        tmp77 = simd_and(tmp20, tmp10);
        bytetest_9f = simd_and(tmp34, tmp77);
        bytetest_85_85 = simd_and(tmp42, tmp51);
        tmp78 = simd_and(tmp44, bytetest_9f);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(tmp78, carryQ.get_carry_in(11), tmp79));
        tmp80 = simd_and(tmp79, bytetest_85_85);
        struct_Ps.cc = simd_or(tmp80, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_9f = simd_and(tmp34, tmp77);
        tmp81 = simd_and(tmp50, tmp22);
        bytetest_a6_a6 = simd_and(tmp64, tmp81);
        tmp82 = simd_and(tmp79, bytetest_a6_a6);
        struct_Ps.cc = simd_or(tmp82, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_9f = simd_and(tmp34, tmp77);
        bytetest_a8_a8 = simd_and(tmp64, tmp6);
        tmp83 = simd_and(tmp79, bytetest_a8_a8);
        struct_Ps.cc = simd_or(tmp83, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_9f = simd_and(tmp34, tmp77);
        bytetest_aa_aa = simd_and(tmp64, tmp23);
        tmp84 = simd_and(tmp79, bytetest_aa_aa);
        struct_Ps.cc = simd_or(tmp84, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_9f = simd_and(tmp34, tmp77);
        bytetest_ac_ac = simd_and(tmp64, tmp21);
        tmp85 = simd_and(tmp79, bytetest_ac_ac);
        struct_Ps.cc = simd_or(tmp85, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_9f = simd_and(tmp34, tmp77);
        bytetest_ae_ae = simd_and(tmp64, tmp48);
        tmp86 = simd_and(tmp79, bytetest_ae_ae);
        struct_Ps.cc = simd_or(tmp86, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_a6 = simd_and(tmp64, tmp81);
        tmp87 = simd_andc(tmp10, tmp16);
        bytetest_83_83 = simd_and(tmp42, tmp87);
        tmp88 = simd_and(tmp44, bytetest_a6);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(tmp88, carryQ.get_carry_in(12), tmp89));
        tmp90 = simd_and(tmp89, bytetest_83_83);
        struct_Ps.cc = simd_or(tmp90, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_a6 = simd_and(tmp64, tmp81);
        bytetest_85_85 = simd_and(tmp42, tmp51);
        tmp91 = simd_and(tmp89, bytetest_85_85);
        struct_Ps.cc = simd_or(tmp91, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_a6 = simd_and(tmp64, tmp81);
        tmp92 = simd_and(tmp50, tmp10);
        bytetest_87_87 = simd_and(tmp42, tmp92);
        tmp93 = simd_and(tmp89, bytetest_87_87);
        struct_Ps.cc = simd_or(tmp93, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_a6 = simd_and(tmp64, tmp81);
        bytetest_89_89 = simd_and(tmp42, tmp65);
        tmp94 = simd_and(tmp89, bytetest_89_89);
        struct_Ps.cc = simd_or(tmp94, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_a6 = simd_and(tmp64, tmp81);
        bytetest_8b_8b = simd_and(tmp42, tmp11);
        tmp95 = simd_and(tmp89, bytetest_8b_8b);
        struct_Ps.cc = simd_or(tmp95, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_a6 = simd_and(tmp64, tmp81);
        bytetest_8d_8d = simd_and(tmp42, tmp55);
        tmp96 = simd_and(tmp89, bytetest_8d_8d);
        struct_Ps.cc = simd_or(tmp96, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_a6 = simd_and(tmp64, tmp81);
        bytetest_8f_8f = simd_and(tmp42, tmp77);
        tmp97 = simd_and(tmp89, bytetest_8f_8f);
        struct_Ps.cc = simd_or(tmp97, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_a6 = simd_and(tmp64, tmp81);
        bytetest_91_91 = simd_and(tmp34, tmp33);
        tmp98 = simd_and(tmp89, bytetest_91_91);
        struct_Ps.cc = simd_or(tmp98, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_a6 = simd_and(tmp64, tmp81);
        bytetest_93_93 = simd_and(tmp34, tmp87);
        tmp99 = simd_and(tmp89, bytetest_93_93);
        struct_Ps.cc = simd_or(tmp99, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_a6 = simd_and(tmp64, tmp81);
        bytetest_95_95 = simd_and(tmp34, tmp51);
        tmp100 = simd_and(tmp89, bytetest_95_95);
        struct_Ps.cc = simd_or(tmp100, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_a6 = simd_and(tmp64, tmp81);
        bytetest_97_97 = simd_and(tmp34, tmp92);
        tmp101 = simd_and(tmp89, bytetest_97_97);
        struct_Ps.cc = simd_or(tmp101, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_a7 = simd_and(tmp64, tmp92);
        bytetest_98_98 = simd_and(tmp34, tmp6);
        tmp102 = simd_and(tmp44, bytetest_a7);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(tmp102, carryQ.get_carry_in(13), tmp103));
        tmp104 = simd_and(tmp103, bytetest_98_98);
        struct_Ps.cc = simd_or(tmp104, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_a7 = simd_and(tmp64, tmp92);
        bytetest_9a_9a = simd_and(tmp34, tmp23);
        tmp105 = simd_and(tmp103, bytetest_9a_9a);
        struct_Ps.cc = simd_or(tmp105, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_a7 = simd_and(tmp64, tmp92);
        bytetest_bc_bc = simd_and(tmp19, tmp21);
        tmp106 = simd_and(tmp103, bytetest_bc_bc);
        struct_Ps.cc = simd_or(tmp106, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_b8 = simd_and(tmp19, tmp6);
        bytetest_a2_a2 = simd_and(tmp64, tmp40);
        tmp107 = simd_and(tmp44, bytetest_b8);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(tmp107, carryQ.get_carry_in(14), tmp108));
        tmp109 = simd_and(tmp108, bytetest_a2_a2);
        struct_Ps.cc = simd_or(tmp109, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_b8 = simd_and(tmp19, tmp6);
        bytetest_a4_a4 = simd_and(tmp64, tmp75);
        tmp110 = simd_and(tmp108, bytetest_a4_a4);
        struct_Ps.cc = simd_or(tmp110, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_b8 = simd_and(tmp19, tmp6);
        bytetest_a6_a6 = simd_and(tmp64, tmp81);
        tmp111 = simd_and(tmp108, bytetest_a6_a6);
        struct_Ps.cc = simd_or(tmp111, struct_Ps.cc);
        bytetest_e2 = simd_and(tmp15, tmp40);
        bytetest_b8 = simd_and(tmp19, tmp6);
        bytetest_a8_a8 = simd_and(tmp64, tmp6);
        tmp112 = simd_and(tmp108, bytetest_a8_a8);
        struct_Ps.cc = simd_or(tmp112, struct_Ps.cc);
        bytetest_e3 = simd_and(tmp15, tmp87);
        bytetest_80 = simd_andc(tmp42, tmp17);
        bytetest_88_88 = simd_and(tmp42, tmp6);
        tmp113 = simd_and(tmp25, bytetest_e3);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(tmp113, carryQ.get_carry_in(15), tmp114));
        tmp115 = simd_and(tmp114, bytetest_80);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(tmp115, carryQ.get_carry_in(16), tmp116));
        tmp117 = simd_and(tmp116, bytetest_88_88);
        struct_Ps.cc = simd_or(tmp117, struct_Ps.cc);
        bytetest_e3 = simd_and(tmp15, tmp87);
        bytetest_80 = simd_andc(tmp42, tmp17);
        bytetest_8a_8a = simd_and(tmp42, tmp23);
        tmp118 = simd_and(tmp116, bytetest_8a_8a);
        struct_Ps.cc = simd_or(tmp118, struct_Ps.cc);
        bytetest_e3 = simd_and(tmp15, tmp87);
        bytetest_80 = simd_andc(tmp42, tmp17);
        bytetest_8c_8c = simd_and(tmp42, tmp21);
        tmp119 = simd_and(tmp116, bytetest_8c_8c);
        struct_Ps.cc = simd_or(tmp119, struct_Ps.cc);
        bytetest_e3 = simd_and(tmp15, tmp87);
        bytetest_80 = simd_andc(tmp42, tmp17);
        bytetest_8e_8e = simd_and(tmp42, tmp48);
        tmp120 = simd_and(tmp116, bytetest_8e_8e);
        struct_Ps.cc = simd_or(tmp120, struct_Ps.cc);
        bytetest_e3 = simd_and(tmp15, tmp87);
        bytetest_80 = simd_andc(tmp42, tmp17);
        bytetest_90_90 = simd_andc(tmp34, tmp17);
        tmp121 = simd_and(tmp116, bytetest_90_90);
        struct_Ps.cc = simd_or(tmp121, struct_Ps.cc);
        bytetest_e3 = simd_and(tmp15, tmp87);
        bytetest_80 = simd_andc(tmp42, tmp17);
        bytetest_94_94 = simd_and(tmp34, tmp75);
        tmp122 = simd_and(tmp116, bytetest_94_94);
        struct_Ps.cc = simd_or(tmp122, struct_Ps.cc);
        bytetest_e3 = simd_and(tmp15, tmp87);
        bytetest_80 = simd_andc(tmp42, tmp17);
        bytetest_96_96 = simd_and(tmp34, tmp81);
        tmp123 = simd_and(tmp116, bytetest_96_96);
        struct_Ps.cc = simd_or(tmp123, struct_Ps.cc);
        bytetest_e3 = simd_and(tmp15, tmp87);
        bytetest_80 = simd_andc(tmp42, tmp17);
        bytetest_98_98 = simd_and(tmp34, tmp6);
        tmp124 = simd_and(tmp116, bytetest_98_98);
        struct_Ps.cc = simd_or(tmp124, struct_Ps.cc);
        bytetest_e3 = simd_and(tmp15, tmp87);
        bytetest_80 = simd_andc(tmp42, tmp17);
        bytetest_9a_9a = simd_and(tmp34, tmp23);
        tmp125 = simd_and(tmp116, bytetest_9a_9a);
        struct_Ps.cc = simd_or(tmp125, struct_Ps.cc);
        bytetest_e3 = simd_and(tmp15, tmp87);
        bytetest_80 = simd_andc(tmp42, tmp17);
        bytetest_9d_9d = simd_and(tmp34, tmp55);
        tmp126 = simd_and(tmp116, bytetest_9d_9d);
        struct_Ps.cc = simd_or(tmp126, struct_Ps.cc);
        bytetest_ef = simd_and(tmp15, tmp77);
        bytetest_b4 = simd_and(tmp19, tmp75);
        bytetest_be_be = simd_and(tmp19, tmp48);
        tmp127 = simd_and(tmp25, bytetest_ef);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(tmp127, carryQ.get_carry_in(17), tmp128));
        tmp129 = simd_and(tmp128, bytetest_b4);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(tmp129, carryQ.get_carry_in(18), tmp130));
        tmp131 = simd_and(tmp130, bytetest_be_be);
        struct_Ps.cc = simd_or(tmp131, struct_Ps.cc);
        bytetest_ef = simd_and(tmp15, tmp77);
        bytetest_b8 = simd_and(tmp19, tmp6);
        bytetest_97_97 = simd_and(tmp34, tmp92);
        tmp132 = simd_and(tmp128, bytetest_b8);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(tmp132, carryQ.get_carry_in(19), tmp133));
        tmp134 = simd_and(tmp133, bytetest_97_97);
        struct_Ps.cc = simd_or(tmp134, struct_Ps.cc);
        bytetest_ef = simd_and(tmp15, tmp77);
        bytetest_b8 = simd_and(tmp19, tmp6);
        bytetest_b5_b5 = simd_and(tmp19, tmp51);
        tmp135 = simd_and(tmp133, bytetest_b5_b5);
        struct_Ps.cc = simd_or(tmp135, struct_Ps.cc);
        bytetest_ef = simd_and(tmp15, tmp77);
        bytetest_b8 = simd_and(tmp19, tmp6);
        bytetest_b7_b7 = simd_and(tmp19, tmp92);
        tmp136 = simd_and(tmp133, bytetest_b7_b7);
        struct_Ps.cc = simd_or(tmp136, struct_Ps.cc);
        bytetest_ef = simd_and(tmp15, tmp77);
        bytetest_b8 = simd_and(tmp19, tmp6);
        bytetest_b9_b9 = simd_and(tmp19, tmp65);
        tmp137 = simd_and(tmp133, bytetest_b9_b9);
        struct_Ps.cc = simd_or(tmp137, struct_Ps.cc);
        bytetest_ef = simd_and(tmp15, tmp77);
        bytetest_b8 = simd_and(tmp19, tmp6);
        bytetest_bb_bb = simd_and(tmp19, tmp11);
        tmp138 = simd_and(tmp133, bytetest_bb_bb);
        struct_Ps.cc = simd_or(tmp138, struct_Ps.cc);
        bytetest_ef = simd_and(tmp15, tmp77);
        bytetest_b8 = simd_and(tmp19, tmp6);
        bytetest_bd_bd = simd_and(tmp19, tmp55);
        tmp139 = simd_and(tmp133, bytetest_bd_bd);
        struct_Ps.cc = simd_or(tmp139, struct_Ps.cc);
        bytetest_ef = simd_and(tmp15, tmp77);
        bytetest_b8 = simd_and(tmp19, tmp6);
        bytetest_bf_bf = simd_and(tmp19, tmp77);
        tmp140 = simd_and(tmp133, bytetest_bf_bf);
        struct_Ps.cc = simd_or(tmp140, struct_Ps.cc);
        bytetest_ef = simd_and(tmp15, tmp77);
        bytetest_b9 = simd_and(tmp19, tmp65);
        bytetest_81_81 = simd_and(tmp42, tmp33);
        tmp141 = simd_and(tmp128, bytetest_b9);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(tmp141, carryQ.get_carry_in(20), tmp142));
        tmp143 = simd_and(tmp142, bytetest_81_81);
        struct_Ps.cc = simd_or(tmp143, struct_Ps.cc);
        bytetest_ef = simd_and(tmp15, tmp77);
        bytetest_b9 = simd_and(tmp19, tmp65);
        bytetest_83_83 = simd_and(tmp42, tmp87);
        tmp144 = simd_and(tmp142, bytetest_83_83);
        struct_Ps.cc = simd_or(tmp144, struct_Ps.cc);
        bytetest_ef = simd_and(tmp15, tmp77);
        bytetest_b9 = simd_and(tmp19, tmp65);
        bytetest_87_87 = simd_and(tmp42, tmp92);
        tmp145 = simd_and(tmp142, bytetest_87_87);
        struct_Ps.cc = simd_or(tmp145, struct_Ps.cc);
        bytetest_ef = simd_and(tmp15, tmp77);
        bytetest_b9 = simd_and(tmp19, tmp65);
        bytetest_99_99 = simd_and(tmp34, tmp65);
        tmp146 = simd_and(tmp142, bytetest_99_99);
        struct_Ps.cc = simd_or(tmp146, struct_Ps.cc);
        bytetest_ef = simd_and(tmp15, tmp77);
        bytetest_b9 = simd_and(tmp19, tmp65);
        bytetest_9b_9b = simd_and(tmp34, tmp11);
        tmp147 = simd_and(tmp142, bytetest_9b_9b);
        struct_Ps.cc = simd_or(tmp147, struct_Ps.cc);
        bytetest_ef = simd_and(tmp15, tmp77);
        bytetest_b9 = simd_and(tmp19, tmp65);
        bytetest_9d_9d = simd_and(tmp34, tmp55);
        tmp148 = simd_and(tmp142, bytetest_9d_9d);
        struct_Ps.cc = simd_or(tmp148, struct_Ps.cc);
        bytetest_ef = simd_and(tmp15, tmp77);
        bytetest_bc = simd_and(tmp19, tmp21);
        bytetest_88_88 = simd_and(tmp42, tmp6);
        tmp149 = simd_and(tmp128, bytetest_bc);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(tmp149, carryQ.get_carry_in(21), tmp150));
        tmp151 = simd_and(tmp150, bytetest_88_88);
        struct_Ps.cc = simd_or(tmp151, struct_Ps.cc);
        bytetest_ef = simd_and(tmp15, tmp77);
        bytetest_bc = simd_and(tmp19, tmp21);
        bytetest_bb_bb = simd_and(tmp19, tmp11);
        tmp152 = simd_and(tmp150, bytetest_bb_bb);
        struct_Ps.cc = simd_or(tmp152, struct_Ps.cc);
        bytetest_ef = simd_and(tmp15, tmp77);
        bytetest_bd = simd_and(tmp19, tmp55);
        bytetest_9b_9b = simd_and(tmp34, tmp11);
        tmp153 = simd_and(tmp128, bytetest_bd);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(tmp153, carryQ.get_carry_in(22), tmp154));
        tmp155 = simd_and(tmp154, bytetest_9b_9b);
        struct_Ps.cc = simd_or(tmp155, struct_Ps.cc);
        bytetest_ef = simd_and(tmp15, tmp77);
        bytetest_bd = simd_and(tmp19, tmp55);
        bytetest_9f_9f = simd_and(tmp34, tmp77);
        tmp156 = simd_and(tmp154, bytetest_9f_9f);
        struct_Ps.cc = simd_or(tmp156, struct_Ps.cc);
        bytetest_ef = simd_and(tmp15, tmp77);
        bytetest_bd = simd_and(tmp19, tmp55);
        bytetest_a2_a2 = simd_and(tmp64, tmp40);
        tmp157 = simd_and(tmp154, bytetest_a2_a2);
        struct_Ps.cc = simd_or(tmp157, struct_Ps.cc);
  }
  CarryArray<23, 0> carryQ;
  };

  struct Nl {
  Nl() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Nl & struct_Nl) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_e1, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, tmp12, bytetest_9b, tmp13, tmp14, tmp15, tmp16, tmp17;
		BitBlock tmp18, tmp19, bytetest_ae_b0, tmp20, tmp21, tmp22, tmp23, tmp24;
		BitBlock tmp25, tmp26, tmp27, tmp28, bytetest_e2, tmp29, tmp30, tmp31, tmp32;
		BitBlock bytetest_86, tmp33, bytetest_80_82, tmp34, tmp35, tmp36, tmp37, tmp38;
		BitBlock tmp39, bytetest_85, bytetest_a0_bf, tmp40, tmp41, tmp42, tmp43, tmp44;
		BitBlock tmp45, tmp46, tmp47, bytetest_85_88, tmp48, tmp49, bytetest_e3;
		BitBlock bytetest_80, tmp50, bytetest_87_87, tmp51, tmp52, tmp53, tmp54, tmp55;
		BitBlock tmp56, tmp57, tmp58, tmp59, bytetest_a1_a9, tmp60, tmp61, tmp62;
		BitBlock tmp63, bytetest_b8_ba, tmp64, tmp65, bytetest_ea, tmp66, tmp67;
		BitBlock bytetest_a6_af, tmp68, tmp69, tmp70, tmp71, tmp72, tmp73, bytetest_f0;
		BitBlock bytetest_90, tmp74, tmp75, tmp76, bytetest_80_b4, tmp77, tmp78, tmp79;
		BitBlock tmp80, tmp81, tmp82, tmp83, tmp84, bytetest_8d, bytetest_81_81, tmp85;
		BitBlock tmp86, tmp87, bytetest_8a_8a, tmp88, tmp89, bytetest_8f, tmp90, tmp91;
		BitBlock tmp92, bytetest_91_95, tmp93, tmp94, tmp95, bytetest_92, bytetest_91;
		BitBlock tmp96, tmp97, tmp98, bytetest_80_a2, tmp99, tmp100, tmp101, tmp102;
		BitBlock tmp103, bytetest_80_bf, tmp104, tmp105, tmp106, tmp107;




        struct_Nl.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_and(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp6 = simd_andc(tmp5, tmp4);
        bytetest_e1 = simd_and(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp11 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp12 = simd_and(tmp10, tmp11);
        bytetest_9b = simd_and(tmp9, tmp12);
        tmp13 = simd_and(tmp7, basis_bits.bit_2);
        tmp14 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp15 = simd_or(tmp4, tmp14);
        tmp16 = simd_not(tmp15);
        tmp17 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp18 = simd_and(tmp17, basis_bits.bit_6);
        tmp19 = simd_or(simd_and(basis_bits.bit_3, tmp16), simd_andc(tmp18, basis_bits.bit_3));
        bytetest_ae_b0 = simd_and(tmp13, tmp19);
        tmp20 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp20, carryQ.get_carry_in(0), tmp21));
        tmp22 = simd_and(tmp21, bytetest_e1);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp22, carryQ.get_carry_in(1), tmp23));
        tmp24 = simd_and(tmp23, bytetest_9b);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp24, carryQ.get_carry_in(2), tmp25));
        tmp26 = simd_and(tmp25, bytetest_ae_b0);
        struct_Nl.cc = simd_or(tmp26, struct_Nl.cc);
        tmp27 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp28 = simd_andc(tmp27, tmp4);
        bytetest_e2 = simd_and(tmp3, tmp28);
        tmp29 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp30 = simd_andc(tmp7, tmp29);
        tmp31 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp32 = simd_and(tmp31, tmp27);
        bytetest_86 = simd_and(tmp30, tmp32);
        tmp33 = simd_andc(tmp30, tmp4);
        bytetest_80_82 = simd_andc(tmp33, tmp11);
        tmp34 = simd_and(tmp21, bytetest_e2);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp34, carryQ.get_carry_in(3), tmp35));
        tmp36 = simd_and(tmp35, bytetest_86);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp36, carryQ.get_carry_in(4), tmp37));
        tmp38 = simd_and(tmp37, bytetest_80_82);
        tmp39 = simd_and(tmp31, tmp5);
        bytetest_85 = simd_and(tmp30, tmp39);
        bytetest_a0_bf = simd_and(tmp7, basis_bits.bit_2);
        tmp40 = simd_and(tmp35, bytetest_85);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp40, carryQ.get_carry_in(5), tmp41));
        tmp42 = simd_and(tmp41, bytetest_a0_bf);
        tmp43 = simd_or(tmp42, tmp38);
        struct_Nl.cc = simd_or(tmp43, struct_Nl.cc);
        bytetest_e2 = simd_and(tmp3, tmp28);
        bytetest_86 = simd_and(tmp30, tmp32);
        tmp44 = simd_or(basis_bits.bit_5, tmp14);
        tmp45 = simd_not(tmp44);
        tmp46 = simd_and(basis_bits.bit_5, tmp14);
        tmp47 = simd_or(simd_and(basis_bits.bit_4, tmp45), simd_andc(tmp46, basis_bits.bit_4));
        bytetest_85_88 = simd_and(tmp30, tmp47);
        tmp48 = simd_and(tmp37, bytetest_85_88);
        struct_Nl.cc = simd_or(tmp48, struct_Nl.cc);
        tmp49 = simd_andc(tmp11, tmp4);
        bytetest_e3 = simd_and(tmp3, tmp49);
        bytetest_80 = simd_andc(tmp30, tmp15);
        tmp50 = simd_and(tmp31, tmp11);
        bytetest_87_87 = simd_and(tmp30, tmp50);
        tmp51 = simd_and(tmp21, bytetest_e3);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp51, carryQ.get_carry_in(6), tmp52));
        tmp53 = simd_and(tmp52, bytetest_80);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp53, carryQ.get_carry_in(7), tmp54));
        tmp55 = simd_and(tmp54, bytetest_87_87);
        struct_Nl.cc = simd_or(tmp55, struct_Nl.cc);
        bytetest_e3 = simd_and(tmp3, tmp49);
        bytetest_80 = simd_andc(tmp30, tmp15);
        tmp56 = simd_and(tmp7, tmp2);
        tmp57 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
        tmp58 = simd_not(tmp57);
        tmp59 = simd_or(simd_and(basis_bits.bit_4, tmp58), simd_andc(tmp44, basis_bits.bit_4));
        bytetest_a1_a9 = simd_and(tmp56, tmp59);
        tmp60 = simd_and(tmp54, bytetest_a1_a9);
        struct_Nl.cc = simd_or(tmp60, struct_Nl.cc);
        bytetest_e3 = simd_and(tmp3, tmp49);
        bytetest_80 = simd_andc(tmp30, tmp15);
        tmp61 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp62 = simd_and(tmp7, tmp61);
        tmp63 = simd_and(tmp62, tmp10);
        bytetest_b8_ba = simd_andc(tmp63, tmp11);
        tmp64 = simd_and(tmp54, bytetest_b8_ba);
        struct_Nl.cc = simd_or(tmp64, struct_Nl.cc);
        tmp65 = simd_and(tmp10, tmp27);
        bytetest_ea = simd_and(tmp3, tmp65);
        bytetest_9b = simd_and(tmp9, tmp12);
        tmp66 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp67 = simd_or(basis_bits.bit_4, tmp66);
        bytetest_a6_af = simd_and(tmp56, tmp67);
        tmp68 = simd_and(tmp21, bytetest_ea);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(tmp68, carryQ.get_carry_in(8), tmp69));
        tmp70 = simd_and(tmp69, bytetest_9b);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(tmp70, carryQ.get_carry_in(9), tmp71));
        tmp72 = simd_and(tmp71, bytetest_a6_af);
        struct_Nl.cc = simd_or(tmp72, struct_Nl.cc);
        tmp73 = simd_and(tmp1, tmp61);
        bytetest_f0 = simd_andc(tmp73, tmp15);
        bytetest_90 = simd_andc(tmp9, tmp15);
        bytetest_85 = simd_and(tmp30, tmp39);
        tmp74 = simd_or(basis_bits.bit_4, tmp46);
        tmp75 = simd_and(basis_bits.bit_3, tmp74);
        tmp76 = simd_and(basis_bits.bit_2, tmp75);
        bytetest_80_b4 = simd_andc(tmp7, tmp76);
        tmp77 = simd_and(tmp21, bytetest_f0);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(tmp77, carryQ.get_carry_in(10), tmp78));
        tmp79 = simd_and(tmp78, bytetest_90);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(tmp79, carryQ.get_carry_in(11), tmp80));
        tmp81 = simd_and(tmp80, bytetest_85);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(tmp81, carryQ.get_carry_in(12), tmp82));
        tmp83 = simd_and(tmp82, bytetest_80_b4);
        struct_Nl.cc = simd_or(tmp83, struct_Nl.cc);
        bytetest_f0 = simd_andc(tmp73, tmp15);
        bytetest_90 = simd_andc(tmp9, tmp15);
        tmp84 = simd_and(tmp17, tmp5);
        bytetest_8d = simd_and(tmp30, tmp84);
        bytetest_81_81 = simd_and(tmp30, tmp6);
        tmp85 = simd_and(tmp80, bytetest_8d);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(tmp85, carryQ.get_carry_in(13), tmp86));
        tmp87 = simd_and(tmp86, bytetest_81_81);
        struct_Nl.cc = simd_or(tmp87, struct_Nl.cc);
        bytetest_f0 = simd_andc(tmp73, tmp15);
        bytetest_90 = simd_andc(tmp9, tmp15);
        bytetest_8d = simd_and(tmp30, tmp84);
        bytetest_8a_8a = simd_and(tmp30, tmp65);
        tmp88 = simd_and(tmp86, bytetest_8a_8a);
        struct_Nl.cc = simd_or(tmp88, struct_Nl.cc);
        bytetest_f0 = simd_andc(tmp73, tmp15);
        bytetest_90 = simd_andc(tmp9, tmp15);
        tmp89 = simd_and(tmp17, tmp11);
        bytetest_8f = simd_and(tmp30, tmp89);
        tmp90 = simd_andc(tmp9, basis_bits.bit_4);
        tmp91 = simd_not(basis_bits.bit_6);
        tmp92 = simd_or(simd_and(basis_bits.bit_5, tmp91), simd_andc(tmp14, basis_bits.bit_5));
        bytetest_91_95 = simd_and(tmp90, tmp92);
        tmp93 = simd_and(tmp80, bytetest_8f);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(tmp93, carryQ.get_carry_in(14), tmp94));
        tmp95 = simd_and(tmp94, bytetest_91_95);
        struct_Nl.cc = simd_or(tmp95, struct_Nl.cc);
        bytetest_f0 = simd_andc(tmp73, tmp15);
        bytetest_92 = simd_and(tmp9, tmp28);
        bytetest_91 = simd_and(tmp9, tmp6);
        tmp96 = simd_or(tmp4, tmp11);
        tmp97 = simd_or(basis_bits.bit_3, tmp96);
        tmp98 = simd_and(basis_bits.bit_2, tmp97);
        bytetest_80_a2 = simd_andc(tmp7, tmp98);
        tmp99 = simd_and(tmp78, bytetest_92);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(tmp99, carryQ.get_carry_in(15), tmp100));
        tmp101 = simd_and(tmp100, bytetest_91);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(tmp101, carryQ.get_carry_in(16), tmp102));
        tmp103 = simd_and(tmp102, bytetest_80_a2);
        bytetest_90 = simd_andc(tmp9, tmp15);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp104 = simd_and(tmp100, bytetest_90);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(tmp104, carryQ.get_carry_in(17), tmp105));
        tmp106 = simd_and(tmp105, bytetest_80_bf);
        tmp107 = simd_or(tmp106, tmp103);
        struct_Nl.cc = simd_or(tmp107, struct_Nl.cc);
        carryQ.CarryQ_Adjust(18);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Nl & struct_Nl, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_e1, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, tmp12, bytetest_9b, tmp13, tmp14, tmp15, tmp16, tmp17;
		BitBlock tmp18, tmp19, bytetest_ae_b0, tmp20, tmp21, tmp22, tmp23, tmp24;
		BitBlock tmp25, tmp26, tmp27, tmp28, bytetest_e2, tmp29, tmp30, tmp31, tmp32;
		BitBlock bytetest_86, tmp33, bytetest_80_82, tmp34, tmp35, tmp36, tmp37, tmp38;
		BitBlock tmp39, bytetest_85, bytetest_a0_bf, tmp40, tmp41, tmp42, tmp43, tmp44;
		BitBlock tmp45, tmp46, tmp47, bytetest_85_88, tmp48, tmp49, bytetest_e3;
		BitBlock bytetest_80, tmp50, bytetest_87_87, tmp51, tmp52, tmp53, tmp54, tmp55;
		BitBlock tmp56, tmp57, tmp58, tmp59, bytetest_a1_a9, tmp60, tmp61, tmp62;
		BitBlock tmp63, bytetest_b8_ba, tmp64, tmp65, bytetest_ea, tmp66, tmp67;
		BitBlock bytetest_a6_af, tmp68, tmp69, tmp70, tmp71, tmp72, tmp73, bytetest_f0;
		BitBlock bytetest_90, tmp74, tmp75, tmp76, bytetest_80_b4, tmp77, tmp78, tmp79;
		BitBlock tmp80, tmp81, tmp82, tmp83, tmp84, bytetest_8d, bytetest_81_81, tmp85;
		BitBlock tmp86, tmp87, bytetest_8a_8a, tmp88, tmp89, bytetest_8f, tmp90, tmp91;
		BitBlock tmp92, bytetest_91_95, tmp93, tmp94, tmp95, bytetest_92, bytetest_91;
		BitBlock tmp96, tmp97, tmp98, bytetest_80_a2, tmp99, tmp100, tmp101, tmp102;
		BitBlock tmp103, bytetest_80_bf, tmp104, tmp105, tmp106, tmp107;




        struct_Nl.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_and(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp6 = simd_andc(tmp5, tmp4);
        bytetest_e1 = simd_and(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp11 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp12 = simd_and(tmp10, tmp11);
        bytetest_9b = simd_and(tmp9, tmp12);
        tmp13 = simd_and(tmp7, basis_bits.bit_2);
        tmp14 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp15 = simd_or(tmp4, tmp14);
        tmp16 = simd_not(tmp15);
        tmp17 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp18 = simd_and(tmp17, basis_bits.bit_6);
        tmp19 = simd_or(simd_and(basis_bits.bit_3, tmp16), simd_andc(tmp18, basis_bits.bit_3));
        bytetest_ae_b0 = simd_and(tmp13, tmp19);
        tmp20 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp20, carryQ.get_carry_in(0), tmp21));
        tmp22 = simd_and(tmp21, bytetest_e1);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp22, carryQ.get_carry_in(1), tmp23));
        tmp24 = simd_and(tmp23, bytetest_9b);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp24, carryQ.get_carry_in(2), tmp25));
        tmp26 = simd_and(tmp25, bytetest_ae_b0);
        struct_Nl.cc = simd_or(tmp26, struct_Nl.cc);
        tmp27 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp28 = simd_andc(tmp27, tmp4);
        bytetest_e2 = simd_and(tmp3, tmp28);
        tmp29 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp30 = simd_andc(tmp7, tmp29);
        tmp31 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp32 = simd_and(tmp31, tmp27);
        bytetest_86 = simd_and(tmp30, tmp32);
        tmp33 = simd_andc(tmp30, tmp4);
        bytetest_80_82 = simd_andc(tmp33, tmp11);
        tmp34 = simd_and(tmp21, bytetest_e2);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp34, carryQ.get_carry_in(3), tmp35));
        tmp36 = simd_and(tmp35, bytetest_86);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp36, carryQ.get_carry_in(4), tmp37));
        tmp38 = simd_and(tmp37, bytetest_80_82);
        tmp39 = simd_and(tmp31, tmp5);
        bytetest_85 = simd_and(tmp30, tmp39);
        bytetest_a0_bf = simd_and(tmp7, basis_bits.bit_2);
        tmp40 = simd_and(tmp35, bytetest_85);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp40, carryQ.get_carry_in(5), tmp41));
        tmp42 = simd_and(tmp41, bytetest_a0_bf);
        tmp43 = simd_or(tmp42, tmp38);
        struct_Nl.cc = simd_or(tmp43, struct_Nl.cc);
        bytetest_e2 = simd_and(tmp3, tmp28);
        bytetest_86 = simd_and(tmp30, tmp32);
        tmp44 = simd_or(basis_bits.bit_5, tmp14);
        tmp45 = simd_not(tmp44);
        tmp46 = simd_and(basis_bits.bit_5, tmp14);
        tmp47 = simd_or(simd_and(basis_bits.bit_4, tmp45), simd_andc(tmp46, basis_bits.bit_4));
        bytetest_85_88 = simd_and(tmp30, tmp47);
        tmp48 = simd_and(tmp37, bytetest_85_88);
        struct_Nl.cc = simd_or(tmp48, struct_Nl.cc);
        tmp49 = simd_andc(tmp11, tmp4);
        bytetest_e3 = simd_and(tmp3, tmp49);
        bytetest_80 = simd_andc(tmp30, tmp15);
        tmp50 = simd_and(tmp31, tmp11);
        bytetest_87_87 = simd_and(tmp30, tmp50);
        tmp51 = simd_and(tmp21, bytetest_e3);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp51, carryQ.get_carry_in(6), tmp52));
        tmp53 = simd_and(tmp52, bytetest_80);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp53, carryQ.get_carry_in(7), tmp54));
        tmp55 = simd_and(tmp54, bytetest_87_87);
        struct_Nl.cc = simd_or(tmp55, struct_Nl.cc);
        bytetest_e3 = simd_and(tmp3, tmp49);
        bytetest_80 = simd_andc(tmp30, tmp15);
        tmp56 = simd_and(tmp7, tmp2);
        tmp57 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
        tmp58 = simd_not(tmp57);
        tmp59 = simd_or(simd_and(basis_bits.bit_4, tmp58), simd_andc(tmp44, basis_bits.bit_4));
        bytetest_a1_a9 = simd_and(tmp56, tmp59);
        tmp60 = simd_and(tmp54, bytetest_a1_a9);
        struct_Nl.cc = simd_or(tmp60, struct_Nl.cc);
        bytetest_e3 = simd_and(tmp3, tmp49);
        bytetest_80 = simd_andc(tmp30, tmp15);
        tmp61 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp62 = simd_and(tmp7, tmp61);
        tmp63 = simd_and(tmp62, tmp10);
        bytetest_b8_ba = simd_andc(tmp63, tmp11);
        tmp64 = simd_and(tmp54, bytetest_b8_ba);
        struct_Nl.cc = simd_or(tmp64, struct_Nl.cc);
        tmp65 = simd_and(tmp10, tmp27);
        bytetest_ea = simd_and(tmp3, tmp65);
        bytetest_9b = simd_and(tmp9, tmp12);
        tmp66 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp67 = simd_or(basis_bits.bit_4, tmp66);
        bytetest_a6_af = simd_and(tmp56, tmp67);
        tmp68 = simd_and(tmp21, bytetest_ea);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(tmp68, carryQ.get_carry_in(8), tmp69));
        tmp70 = simd_and(tmp69, bytetest_9b);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(tmp70, carryQ.get_carry_in(9), tmp71));
        tmp72 = simd_and(tmp71, bytetest_a6_af);
        struct_Nl.cc = simd_or(tmp72, struct_Nl.cc);
        tmp73 = simd_and(tmp1, tmp61);
        bytetest_f0 = simd_andc(tmp73, tmp15);
        bytetest_90 = simd_andc(tmp9, tmp15);
        bytetest_85 = simd_and(tmp30, tmp39);
        tmp74 = simd_or(basis_bits.bit_4, tmp46);
        tmp75 = simd_and(basis_bits.bit_3, tmp74);
        tmp76 = simd_and(basis_bits.bit_2, tmp75);
        bytetest_80_b4 = simd_andc(tmp7, tmp76);
        tmp77 = simd_and(tmp21, bytetest_f0);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(tmp77, carryQ.get_carry_in(10), tmp78));
        tmp79 = simd_and(tmp78, bytetest_90);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(tmp79, carryQ.get_carry_in(11), tmp80));
        tmp81 = simd_and(tmp80, bytetest_85);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(tmp81, carryQ.get_carry_in(12), tmp82));
        tmp83 = simd_and(tmp82, bytetest_80_b4);
        struct_Nl.cc = simd_or(tmp83, struct_Nl.cc);
        bytetest_f0 = simd_andc(tmp73, tmp15);
        bytetest_90 = simd_andc(tmp9, tmp15);
        tmp84 = simd_and(tmp17, tmp5);
        bytetest_8d = simd_and(tmp30, tmp84);
        bytetest_81_81 = simd_and(tmp30, tmp6);
        tmp85 = simd_and(tmp80, bytetest_8d);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(tmp85, carryQ.get_carry_in(13), tmp86));
        tmp87 = simd_and(tmp86, bytetest_81_81);
        struct_Nl.cc = simd_or(tmp87, struct_Nl.cc);
        bytetest_f0 = simd_andc(tmp73, tmp15);
        bytetest_90 = simd_andc(tmp9, tmp15);
        bytetest_8d = simd_and(tmp30, tmp84);
        bytetest_8a_8a = simd_and(tmp30, tmp65);
        tmp88 = simd_and(tmp86, bytetest_8a_8a);
        struct_Nl.cc = simd_or(tmp88, struct_Nl.cc);
        bytetest_f0 = simd_andc(tmp73, tmp15);
        bytetest_90 = simd_andc(tmp9, tmp15);
        tmp89 = simd_and(tmp17, tmp11);
        bytetest_8f = simd_and(tmp30, tmp89);
        tmp90 = simd_andc(tmp9, basis_bits.bit_4);
        tmp91 = simd_not(basis_bits.bit_6);
        tmp92 = simd_or(simd_and(basis_bits.bit_5, tmp91), simd_andc(tmp14, basis_bits.bit_5));
        bytetest_91_95 = simd_and(tmp90, tmp92);
        tmp93 = simd_and(tmp80, bytetest_8f);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(tmp93, carryQ.get_carry_in(14), tmp94));
        tmp95 = simd_and(tmp94, bytetest_91_95);
        struct_Nl.cc = simd_or(tmp95, struct_Nl.cc);
        bytetest_f0 = simd_andc(tmp73, tmp15);
        bytetest_92 = simd_and(tmp9, tmp28);
        bytetest_91 = simd_and(tmp9, tmp6);
        tmp96 = simd_or(tmp4, tmp11);
        tmp97 = simd_or(basis_bits.bit_3, tmp96);
        tmp98 = simd_and(basis_bits.bit_2, tmp97);
        bytetest_80_a2 = simd_andc(tmp7, tmp98);
        tmp99 = simd_and(tmp78, bytetest_92);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(tmp99, carryQ.get_carry_in(15), tmp100));
        tmp101 = simd_and(tmp100, bytetest_91);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(tmp101, carryQ.get_carry_in(16), tmp102));
        tmp103 = simd_and(tmp102, bytetest_80_a2);
        bytetest_90 = simd_andc(tmp9, tmp15);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp104 = simd_and(tmp100, bytetest_90);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(tmp104, carryQ.get_carry_in(17), tmp105));
        tmp106 = simd_and(tmp105, bytetest_80_bf);
        tmp107 = simd_or(tmp106, tmp103);
        struct_Nl.cc = simd_or(tmp107, struct_Nl.cc);
  }
  CarryArray<18, 0> carryQ;
  };

  struct No {
  No() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_No & struct_No) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_c2, tmp7, tmp8, tmp9;
		BitBlock tmp10, bytetest_b2_b3, tmp11, tmp12, tmp13, tmp14, tmp15, tmp16;
		BitBlock tmp17, tmp18, bytetest_b9_b9, tmp19, tmp20, tmp21, tmp22;
		BitBlock bytetest_bc_be, tmp23, tmp24, tmp25, tmp26, tmp27, bytetest_e0, tmp28;
		BitBlock tmp29, tmp30, bytetest_a7, tmp31, tmp32, tmp33, bytetest_b4_b9, tmp34;
		BitBlock tmp35, tmp36, tmp37, tmp38, tmp39, bytetest_ad, tmp40, bytetest_b2_b7;
		BitBlock tmp41, tmp42, tmp43, tmp44, bytetest_af, tmp45, bytetest_b0_b2, tmp46;
		BitBlock tmp47, tmp48, tmp49, bytetest_b1, tmp50, tmp51, bytetest_b8_be, tmp52;
		BitBlock tmp53, tmp54, tmp55, bytetest_b5, tmp56, bytetest_b0_b5, tmp57, tmp58;
		BitBlock tmp59, tmp60, bytetest_bc, tmp61, tmp62, tmp63, tmp64, bytetest_aa_b3;
		BitBlock tmp65, tmp66, tmp67, bytetest_e1, tmp68, bytetest_8d, tmp69, tmp70;
		BitBlock tmp71, tmp72, tmp73, bytetest_a9_bc, tmp74, tmp75, tmp76, tmp77;
		BitBlock tmp78, tmp79, tmp80, bytetest_9f, bytetest_b0_b9, tmp81, tmp82, tmp83;
		BitBlock tmp84, bytetest_9a_9a, tmp85, tmp86, tmp87, bytetest_e2, bytetest_81;
		BitBlock bytetest_b0_b0, tmp88, tmp89, tmp90, tmp91, tmp92, tmp93, bytetest_82;
		BitBlock bytetest_80_89, tmp94, tmp95, tmp96, bytetest_85, bytetest_90_9f;
		BitBlock tmp97, tmp98, tmp99, tmp100, bytetest_86, bytetest_89_89, tmp101;
		BitBlock tmp102, tmp103, bytetest_92, tmp104, tmp105, bytetest_80_9b, tmp106;
		BitBlock tmp107, tmp108, bytetest_91, bytetest_a0_bf, tmp109, tmp110, tmp111;
		BitBlock tmp112, tmp113, bytetest_93, tmp114, bytetest_aa_bf, tmp115, tmp116;
		BitBlock tmp117, tmp118, bytetest_9e, tmp119, bytetest_80_93, tmp120, tmp121;
		BitBlock tmp122, bytetest_9d, tmp123, bytetest_b6_bf, tmp124, tmp125, tmp126;
		BitBlock tmp127, bytetest_b3, bytetest_bd_bd, tmp128, tmp129, tmp130;
		BitBlock bytetest_e3, tmp131, tmp132, tmp133, bytetest_92_95, tmp134, tmp135;
		BitBlock tmp136, tmp137, tmp138, tmp139, bytetest_88, bytetest_a0_a9, tmp140;
		BitBlock tmp141, tmp142, bytetest_89, bytetest_88_8f, tmp143, tmp144, tmp145;
		BitBlock tmp146, bytetest_91_9f, tmp147, bytetest_8a, tmp148, tmp149, tmp150;
		BitBlock bytetest_b1_bf, tmp151, bytetest_ea, bytetest_a0, tmp152, tmp153;
		BitBlock tmp154, tmp155, tmp156, tmp157, bytetest_f0, bytetest_90, tmp158;
		BitBlock bytetest_84, tmp159, tmp160, tmp161, tmp162, bytetest_87_b3, tmp163;
		BitBlock tmp164, tmp165, tmp166, tmp167, tmp168, tmp169, tmp170, tmp171;
		BitBlock tmp172, bytetest_b5_b8, tmp173, tmp174, tmp175, bytetest_8a_8a;
		BitBlock tmp176, tmp177, tmp178, bytetest_8c, bytetest_a0_a3, tmp179, tmp180;
		BitBlock tmp181, bytetest_a1, bytetest_98_9f, tmp182, tmp183, tmp184;
		BitBlock bytetest_a4, tmp185, tmp186, bytetest_96_9b, tmp187, tmp188, tmp189;
		BitBlock bytetest_a9, bytetest_80_87, tmp190, tmp191, tmp192, tmp193, tmp194;
		BitBlock bytetest_bd_be, tmp195, tmp196, tmp197, tmp198, bytetest_b8_bf;
		BitBlock tmp199, bytetest_b9, tmp200, bytetest_a0_be, tmp201, tmp202, tmp203;
		BitBlock tmp204, tmp205, tmp206, tmp207, tmp208, bytetest_92_a5, tmp209;
		BitBlock tmp210, tmp211, tmp212, tmp213, bytetest_a0_b1, tmp214, tmp215;
		BitBlock tmp216, tmp217, tmp218, tmp219, tmp220, bytetest_80_8a, tmp221;
		BitBlock tmp222, tmp223, tmp224, tmp225;




        struct_No.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_andc(tmp5, tmp4);
        bytetest_c2 = simd_and(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_andc(basis_bits.bit_6, tmp4);
        bytetest_b2_b3 = simd_and(tmp9, tmp10);
        tmp11 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp11, carryQ.get_carry_in(0), tmp12));
        tmp13 = simd_and(tmp12, bytetest_c2);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp13, carryQ.get_carry_in(1), tmp14));
        tmp15 = simd_and(tmp14, bytetest_b2_b3);
        struct_No.cc = simd_or(tmp15, struct_No.cc);
        bytetest_c2 = simd_and(tmp3, tmp6);
        tmp16 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp17 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp18 = simd_and(tmp16, tmp17);
        bytetest_b9_b9 = simd_and(tmp9, tmp18);
        tmp19 = simd_and(tmp14, bytetest_b9_b9);
        struct_No.cc = simd_or(tmp19, struct_No.cc);
        bytetest_c2 = simd_and(tmp3, tmp6);
        tmp20 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp21 = simd_and(tmp9, tmp20);
        tmp22 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        bytetest_bc_be = simd_andc(tmp21, tmp22);
        tmp23 = simd_and(tmp14, bytetest_bc_be);
        struct_No.cc = simd_or(tmp23, struct_No.cc);
        tmp24 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp25 = simd_and(tmp1, tmp24);
        tmp26 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp27 = simd_or(tmp4, tmp26);
        bytetest_e0 = simd_andc(tmp25, tmp27);
        tmp28 = simd_and(tmp7, tmp24);
        tmp29 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp30 = simd_and(tmp29, tmp22);
        bytetest_a7 = simd_and(tmp28, tmp30);
        tmp31 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
        tmp32 = simd_not(tmp31);
        tmp33 = simd_or(simd_and(basis_bits.bit_4, tmp32), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
        bytetest_b4_b9 = simd_and(tmp9, tmp33);
        tmp34 = simd_and(tmp12, bytetest_e0);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp34, carryQ.get_carry_in(2), tmp35));
        tmp36 = simd_and(tmp35, bytetest_a7);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp36, carryQ.get_carry_in(3), tmp37));
        tmp38 = simd_and(tmp37, bytetest_b4_b9);
        struct_No.cc = simd_or(tmp38, struct_No.cc);
        bytetest_e0 = simd_andc(tmp25, tmp27);
        tmp39 = simd_and(tmp20, tmp17);
        bytetest_ad = simd_and(tmp28, tmp39);
        tmp40 = simd_andc(tmp9, basis_bits.bit_4);
        bytetest_b2_b7 = simd_and(tmp40, tmp31);
        tmp41 = simd_and(tmp35, bytetest_ad);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp41, carryQ.get_carry_in(4), tmp42));
        tmp43 = simd_and(tmp42, bytetest_b2_b7);
        struct_No.cc = simd_or(tmp43, struct_No.cc);
        bytetest_e0 = simd_andc(tmp25, tmp27);
        tmp44 = simd_and(tmp20, tmp22);
        bytetest_af = simd_and(tmp28, tmp44);
        tmp45 = simd_andc(tmp9, tmp4);
        bytetest_b0_b2 = simd_andc(tmp45, tmp22);
        tmp46 = simd_and(tmp35, bytetest_af);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp46, carryQ.get_carry_in(5), tmp47));
        tmp48 = simd_and(tmp47, bytetest_b0_b2);
        struct_No.cc = simd_or(tmp48, struct_No.cc);
        bytetest_e0 = simd_andc(tmp25, tmp27);
        tmp49 = simd_andc(tmp17, tmp4);
        bytetest_b1 = simd_and(tmp9, tmp49);
        tmp50 = simd_and(tmp9, basis_bits.bit_4);
        tmp51 = simd_and(basis_bits.bit_5, tmp22);
        bytetest_b8_be = simd_andc(tmp50, tmp51);
        tmp52 = simd_and(tmp35, bytetest_b1);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp52, carryQ.get_carry_in(6), tmp53));
        tmp54 = simd_and(tmp53, bytetest_b8_be);
        struct_No.cc = simd_or(tmp54, struct_No.cc);
        bytetest_e0 = simd_andc(tmp25, tmp27);
        tmp55 = simd_and(tmp29, tmp17);
        bytetest_b5 = simd_and(tmp9, tmp55);
        tmp56 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        bytetest_b0_b5 = simd_andc(tmp40, tmp56);
        tmp57 = simd_and(tmp35, bytetest_b5);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp57, carryQ.get_carry_in(7), tmp58));
        tmp59 = simd_and(tmp58, bytetest_b0_b5);
        struct_No.cc = simd_or(tmp59, struct_No.cc);
        bytetest_e0 = simd_andc(tmp25, tmp27);
        tmp60 = simd_andc(tmp20, tmp26);
        bytetest_bc = simd_and(tmp9, tmp60);
        tmp61 = simd_and(tmp7, basis_bits.bit_2);
        tmp62 = simd_not(tmp4);
        tmp63 = simd_and(basis_bits.bit_4, tmp31);
        tmp64 = simd_or(simd_and(basis_bits.bit_3, tmp62), simd_andc(tmp63, basis_bits.bit_3));
        bytetest_aa_b3 = simd_and(tmp61, tmp64);
        tmp65 = simd_and(tmp35, bytetest_bc);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(tmp65, carryQ.get_carry_in(8), tmp66));
        tmp67 = simd_and(tmp66, bytetest_aa_b3);
        struct_No.cc = simd_or(tmp67, struct_No.cc);
        bytetest_e1 = simd_and(tmp25, tmp49);
        tmp68 = simd_andc(tmp7, tmp2);
        bytetest_8d = simd_and(tmp68, tmp39);
        tmp69 = simd_and(tmp20, tmp26);
        tmp70 = simd_not(tmp69);
        tmp71 = simd_or(basis_bits.bit_5, tmp26);
        tmp72 = simd_and(basis_bits.bit_4, tmp71);
        tmp73 = simd_or(simd_and(basis_bits.bit_3, tmp70), simd_andc(tmp72, basis_bits.bit_3));
        bytetest_a9_bc = simd_and(tmp61, tmp73);
        tmp74 = simd_and(tmp12, bytetest_e1);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(tmp74, carryQ.get_carry_in(9), tmp75));
        tmp76 = simd_and(tmp75, bytetest_8d);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(tmp76, carryQ.get_carry_in(10), tmp77));
        tmp78 = simd_and(tmp77, bytetest_a9_bc);
        struct_No.cc = simd_or(tmp78, struct_No.cc);
        bytetest_e1 = simd_and(tmp25, tmp49);
        tmp79 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp80 = simd_and(tmp7, tmp79);
        bytetest_9f = simd_and(tmp80, tmp44);
        bytetest_b0_b9 = simd_andc(tmp9, tmp63);
        tmp81 = simd_and(tmp75, bytetest_9f);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(tmp81, carryQ.get_carry_in(11), tmp82));
        tmp83 = simd_and(tmp82, bytetest_b0_b9);
        struct_No.cc = simd_or(tmp83, struct_No.cc);
        bytetest_e1 = simd_and(tmp25, tmp49);
        bytetest_a7 = simd_and(tmp28, tmp30);
        tmp84 = simd_and(tmp16, tmp5);
        bytetest_9a_9a = simd_and(tmp80, tmp84);
        tmp85 = simd_and(tmp75, bytetest_a7);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(tmp85, carryQ.get_carry_in(12), tmp86));
        tmp87 = simd_and(tmp86, bytetest_9a_9a);
        struct_No.cc = simd_or(tmp87, struct_No.cc);
        bytetest_e2 = simd_and(tmp25, tmp6);
        bytetest_81 = simd_and(tmp68, tmp49);
        bytetest_b0_b0 = simd_andc(tmp9, tmp27);
        tmp88 = simd_and(tmp12, bytetest_e2);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(tmp88, carryQ.get_carry_in(13), tmp89));
        tmp90 = simd_and(tmp89, bytetest_81);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(tmp90, carryQ.get_carry_in(14), tmp91));
        tmp92 = simd_and(tmp91, bytetest_b0_b0);
        struct_No.cc = simd_or(tmp92, struct_No.cc);
        bytetest_e2 = simd_and(tmp25, tmp6);
        bytetest_81 = simd_and(tmp68, tmp49);
        bytetest_b4_b9 = simd_and(tmp9, tmp33);
        tmp93 = simd_and(tmp91, bytetest_b4_b9);
        struct_No.cc = simd_or(tmp93, struct_No.cc);
        bytetest_e2 = simd_and(tmp25, tmp6);
        bytetest_82 = simd_and(tmp68, tmp6);
        bytetest_80_89 = simd_andc(tmp68, tmp63);
        tmp94 = simd_and(tmp89, bytetest_82);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(tmp94, carryQ.get_carry_in(15), tmp95));
        tmp96 = simd_and(tmp95, bytetest_80_89);
        struct_No.cc = simd_or(tmp96, struct_No.cc);
        bytetest_e2 = simd_and(tmp25, tmp6);
        bytetest_85 = simd_and(tmp68, tmp55);
        bytetest_90_9f = simd_and(tmp7, tmp79);
        tmp97 = simd_and(tmp89, bytetest_85);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(tmp97, carryQ.get_carry_in(16), tmp98));
        tmp99 = simd_and(tmp98, bytetest_90_9f);
        struct_No.cc = simd_or(tmp99, struct_No.cc);
        bytetest_e2 = simd_and(tmp25, tmp6);
        tmp100 = simd_and(tmp29, tmp5);
        bytetest_86 = simd_and(tmp68, tmp100);
        bytetest_89_89 = simd_and(tmp68, tmp18);
        tmp101 = simd_and(tmp89, bytetest_86);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(tmp101, carryQ.get_carry_in(17), tmp102));
        tmp103 = simd_and(tmp102, bytetest_89_89);
        struct_No.cc = simd_or(tmp103, struct_No.cc);
        bytetest_e2 = simd_and(tmp25, tmp6);
        bytetest_92 = simd_and(bytetest_90_9f, tmp6);
        tmp104 = simd_andc(tmp7, basis_bits.bit_2);
        tmp105 = simd_and(basis_bits.bit_3, tmp20);
        bytetest_80_9b = simd_andc(tmp104, tmp105);
        tmp106 = simd_and(tmp89, bytetest_92);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(tmp106, carryQ.get_carry_in(18), tmp107));
        tmp108 = simd_and(tmp107, bytetest_80_9b);
        bytetest_91 = simd_and(bytetest_90_9f, tmp49);
        bytetest_a0_bf = simd_and(tmp7, basis_bits.bit_2);
        tmp109 = simd_and(tmp89, bytetest_91);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(tmp109, carryQ.get_carry_in(19), tmp110));
        tmp111 = simd_and(tmp110, bytetest_a0_bf);
        tmp112 = simd_or(tmp111, tmp108);
        struct_No.cc = simd_or(tmp112, struct_No.cc);
        bytetest_e2 = simd_and(tmp25, tmp6);
        tmp113 = simd_andc(tmp22, tmp4);
        bytetest_93 = simd_and(bytetest_90_9f, tmp113);
        tmp114 = simd_or(basis_bits.bit_3, tmp63);
        bytetest_aa_bf = simd_and(bytetest_a0_bf, tmp114);
        tmp115 = simd_and(tmp89, bytetest_93);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(tmp115, carryQ.get_carry_in(20), tmp116));
        tmp117 = simd_and(tmp116, bytetest_aa_bf);
        struct_No.cc = simd_or(tmp117, struct_No.cc);
        bytetest_e2 = simd_and(tmp25, tmp6);
        tmp118 = simd_and(tmp20, tmp5);
        bytetest_9e = simd_and(bytetest_90_9f, tmp118);
        tmp119 = simd_and(basis_bits.bit_3, tmp4);
        bytetest_80_93 = simd_andc(tmp104, tmp119);
        tmp120 = simd_and(tmp89, bytetest_9e);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(tmp120, carryQ.get_carry_in(21), tmp121));
        tmp122 = simd_and(tmp121, bytetest_80_93);
        bytetest_9d = simd_and(bytetest_90_9f, tmp39);
        tmp123 = simd_or(basis_bits.bit_4, tmp56);
        bytetest_b6_bf = simd_and(tmp9, tmp123);
        tmp124 = simd_and(tmp89, bytetest_9d);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(tmp124, carryQ.get_carry_in(22), tmp125));
        tmp126 = simd_and(tmp125, bytetest_b6_bf);
        tmp127 = simd_or(tmp126, tmp122);
        struct_No.cc = simd_or(tmp127, struct_No.cc);
        bytetest_e2 = simd_and(tmp25, tmp6);
        bytetest_b3 = simd_and(tmp9, tmp113);
        bytetest_bd_bd = simd_and(tmp9, tmp39);
        tmp128 = simd_and(tmp89, bytetest_b3);
        carryQ.cq[23] = carryout2carry(pablo_blk_Advance(tmp128, carryQ.get_carry_in(23), tmp129));
        tmp130 = simd_and(tmp129, bytetest_bd_bd);
        struct_No.cc = simd_or(tmp130, struct_No.cc);
        bytetest_e3 = simd_and(tmp25, tmp113);
        bytetest_86 = simd_and(tmp68, tmp100);
        tmp131 = simd_andc(bytetest_90_9f, basis_bits.bit_4);
        tmp132 = simd_not(basis_bits.bit_6);
        tmp133 = simd_or(simd_and(basis_bits.bit_5, tmp132), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        bytetest_92_95 = simd_and(tmp131, tmp133);
        tmp134 = simd_and(tmp12, bytetest_e3);
        carryQ.cq[24] = carryout2carry(pablo_blk_Advance(tmp134, carryQ.get_carry_in(24), tmp135));
        tmp136 = simd_and(tmp135, bytetest_86);
        carryQ.cq[25] = carryout2carry(pablo_blk_Advance(tmp136, carryQ.get_carry_in(25), tmp137));
        tmp138 = simd_and(tmp137, bytetest_92_95);
        struct_No.cc = simd_or(tmp138, struct_No.cc);
        bytetest_e3 = simd_and(tmp25, tmp113);
        tmp139 = simd_andc(tmp16, tmp26);
        bytetest_88 = simd_and(tmp68, tmp139);
        bytetest_a0_a9 = simd_andc(tmp28, tmp63);
        tmp140 = simd_and(tmp135, bytetest_88);
        carryQ.cq[26] = carryout2carry(pablo_blk_Advance(tmp140, carryQ.get_carry_in(26), tmp141));
        tmp142 = simd_and(tmp141, bytetest_a0_a9);
        struct_No.cc = simd_or(tmp142, struct_No.cc);
        bytetest_e3 = simd_and(tmp25, tmp113);
        bytetest_89 = simd_and(tmp68, tmp18);
        bytetest_88_8f = simd_and(tmp68, basis_bits.bit_4);
        tmp143 = simd_and(tmp135, bytetest_89);
        carryQ.cq[27] = carryout2carry(pablo_blk_Advance(tmp143, carryQ.get_carry_in(27), tmp144));
        tmp145 = simd_and(tmp144, bytetest_88_8f);
        struct_No.cc = simd_or(tmp145, struct_No.cc);
        bytetest_e3 = simd_and(tmp25, tmp113);
        bytetest_89 = simd_and(tmp68, tmp18);
        tmp146 = simd_or(basis_bits.bit_4, tmp71);
        bytetest_91_9f = simd_and(bytetest_90_9f, tmp146);
        tmp147 = simd_and(tmp144, bytetest_91_9f);
        struct_No.cc = simd_or(tmp147, struct_No.cc);
        bytetest_e3 = simd_and(tmp25, tmp113);
        bytetest_8a = simd_and(tmp68, tmp84);
        bytetest_80_89 = simd_andc(tmp68, tmp63);
        tmp148 = simd_and(tmp135, bytetest_8a);
        carryQ.cq[28] = carryout2carry(pablo_blk_Advance(tmp148, carryQ.get_carry_in(28), tmp149));
        tmp150 = simd_and(tmp149, bytetest_80_89);
        struct_No.cc = simd_or(tmp150, struct_No.cc);
        bytetest_e3 = simd_and(tmp25, tmp113);
        bytetest_8a = simd_and(tmp68, tmp84);
        bytetest_b1_bf = simd_and(tmp9, tmp146);
        tmp151 = simd_and(tmp149, bytetest_b1_bf);
        struct_No.cc = simd_or(tmp151, struct_No.cc);
        bytetest_ea = simd_and(tmp25, tmp84);
        bytetest_a0 = simd_andc(tmp28, tmp27);
        bytetest_b0_b5 = simd_andc(tmp40, tmp56);
        tmp152 = simd_and(tmp12, bytetest_ea);
        carryQ.cq[29] = carryout2carry(pablo_blk_Advance(tmp152, carryQ.get_carry_in(29), tmp153));
        tmp154 = simd_and(tmp153, bytetest_a0);
        carryQ.cq[30] = carryout2carry(pablo_blk_Advance(tmp154, carryQ.get_carry_in(30), tmp155));
        tmp156 = simd_and(tmp155, bytetest_b0_b5);
        struct_No.cc = simd_or(tmp156, struct_No.cc);
        tmp157 = simd_and(tmp1, tmp8);
        bytetest_f0 = simd_andc(tmp157, tmp27);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp27);
        tmp158 = simd_andc(tmp29, tmp26);
        bytetest_84 = simd_and(tmp68, tmp158);
        tmp159 = simd_not(tmp119);
        tmp160 = simd_or(basis_bits.bit_4, tmp51);
        tmp161 = simd_or(basis_bits.bit_3, tmp160);
        tmp162 = simd_or(simd_and(basis_bits.bit_2, tmp159), simd_andc(tmp161, basis_bits.bit_2));
        bytetest_87_b3 = simd_and(tmp7, tmp162);
        tmp163 = simd_and(tmp12, bytetest_f0);
        carryQ.cq[31] = carryout2carry(pablo_blk_Advance(tmp163, carryQ.get_carry_in(31), tmp164));
        tmp165 = simd_and(tmp164, bytetest_90);
        carryQ.cq[32] = carryout2carry(pablo_blk_Advance(tmp165, carryQ.get_carry_in(32), tmp166));
        tmp167 = simd_and(tmp166, bytetest_84);
        carryQ.cq[33] = carryout2carry(pablo_blk_Advance(tmp167, carryQ.get_carry_in(33), tmp168));
        tmp169 = simd_and(tmp168, bytetest_87_b3);
        struct_No.cc = simd_or(tmp169, struct_No.cc);
        bytetest_f0 = simd_andc(tmp157, tmp27);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp27);
        bytetest_85 = simd_and(tmp68, tmp55);
        tmp170 = simd_not(tmp71);
        tmp171 = simd_and(basis_bits.bit_5, tmp26);
        tmp172 = simd_or(simd_and(basis_bits.bit_4, tmp170), simd_andc(tmp171, basis_bits.bit_4));
        bytetest_b5_b8 = simd_and(tmp9, tmp172);
        tmp173 = simd_and(tmp166, bytetest_85);
        carryQ.cq[34] = carryout2carry(pablo_blk_Advance(tmp173, carryQ.get_carry_in(34), tmp174));
        tmp175 = simd_and(tmp174, bytetest_b5_b8);
        struct_No.cc = simd_or(tmp175, struct_No.cc);
        bytetest_f0 = simd_andc(tmp157, tmp27);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp27);
        bytetest_86 = simd_and(tmp68, tmp100);
        bytetest_8a_8a = simd_and(tmp68, tmp84);
        tmp176 = simd_and(tmp166, bytetest_86);
        carryQ.cq[35] = carryout2carry(pablo_blk_Advance(tmp176, carryQ.get_carry_in(35), tmp177));
        tmp178 = simd_and(tmp177, bytetest_8a_8a);
        struct_No.cc = simd_or(tmp178, struct_No.cc);
        bytetest_f0 = simd_andc(tmp157, tmp27);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp27);
        bytetest_8c = simd_and(tmp68, tmp60);
        bytetest_a0_a3 = simd_andc(tmp28, tmp4);
        tmp179 = simd_and(tmp166, bytetest_8c);
        carryQ.cq[36] = carryout2carry(pablo_blk_Advance(tmp179, carryQ.get_carry_in(36), tmp180));
        tmp181 = simd_and(tmp180, bytetest_a0_a3);
        struct_No.cc = simd_or(tmp181, struct_No.cc);
        bytetest_f0 = simd_andc(tmp157, tmp27);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp27);
        bytetest_a1 = simd_and(tmp28, tmp49);
        bytetest_98_9f = simd_and(bytetest_90_9f, basis_bits.bit_4);
        tmp182 = simd_and(tmp166, bytetest_a1);
        carryQ.cq[37] = carryout2carry(pablo_blk_Advance(tmp182, carryQ.get_carry_in(37), tmp183));
        tmp184 = simd_and(tmp183, bytetest_98_9f);
        struct_No.cc = simd_or(tmp184, struct_No.cc);
        bytetest_f0 = simd_andc(tmp157, tmp27);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp27);
        bytetest_a4 = simd_and(tmp28, tmp158);
        tmp185 = simd_not(basis_bits.bit_5);
        tmp186 = simd_or(simd_and(basis_bits.bit_4, tmp185), simd_andc(tmp56, basis_bits.bit_4));
        bytetest_96_9b = simd_and(bytetest_90_9f, tmp186);
        tmp187 = simd_and(tmp166, bytetest_a4);
        carryQ.cq[38] = carryout2carry(pablo_blk_Advance(tmp187, carryQ.get_carry_in(38), tmp188));
        tmp189 = simd_and(tmp188, bytetest_96_9b);
        struct_No.cc = simd_or(tmp189, struct_No.cc);
        bytetest_f0 = simd_andc(tmp157, tmp27);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp27);
        bytetest_a9 = simd_and(tmp28, tmp18);
        bytetest_80_87 = simd_andc(tmp68, basis_bits.bit_4);
        tmp190 = simd_and(tmp166, bytetest_a9);
        carryQ.cq[39] = carryout2carry(pablo_blk_Advance(tmp190, carryQ.get_carry_in(39), tmp191));
        tmp192 = simd_and(tmp191, bytetest_80_87);
        struct_No.cc = simd_or(tmp192, struct_No.cc);
        bytetest_f0 = simd_andc(tmp157, tmp27);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp27);
        bytetest_a9 = simd_and(tmp28, tmp18);
        tmp193 = simd_not(basis_bits.bit_7);
        tmp194 = simd_or(simd_and(basis_bits.bit_6, tmp193), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
        bytetest_bd_be = simd_and(tmp21, tmp194);
        tmp195 = simd_and(tmp191, bytetest_bd_be);
        struct_No.cc = simd_or(tmp195, struct_No.cc);
        bytetest_f0 = simd_andc(tmp157, tmp27);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp27);
        bytetest_ad = simd_and(tmp28, tmp39);
        bytetest_98_9f = simd_and(bytetest_90_9f, basis_bits.bit_4);
        tmp196 = simd_and(tmp166, bytetest_ad);
        carryQ.cq[40] = carryout2carry(pablo_blk_Advance(tmp196, carryQ.get_carry_in(40), tmp197));
        tmp198 = simd_and(tmp197, bytetest_98_9f);
        struct_No.cc = simd_or(tmp198, struct_No.cc);
        bytetest_f0 = simd_andc(tmp157, tmp27);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp27);
        bytetest_ad = simd_and(tmp28, tmp39);
        bytetest_b8_bf = simd_and(tmp9, basis_bits.bit_4);
        tmp199 = simd_and(tmp197, bytetest_b8_bf);
        struct_No.cc = simd_or(tmp199, struct_No.cc);
        bytetest_f0 = simd_andc(tmp157, tmp27);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp27);
        bytetest_b9 = simd_and(tmp9, tmp18);
        tmp200 = simd_and(basis_bits.bit_3, tmp44);
        bytetest_a0_be = simd_andc(bytetest_a0_bf, tmp200);
        tmp201 = simd_and(tmp166, bytetest_b9);
        carryQ.cq[41] = carryout2carry(pablo_blk_Advance(tmp201, carryQ.get_carry_in(41), tmp202));
        tmp203 = simd_and(tmp202, bytetest_a0_be);
        struct_No.cc = simd_or(tmp203, struct_No.cc);
        bytetest_f0 = simd_andc(tmp157, tmp27);
        bytetest_91 = simd_and(bytetest_90_9f, tmp49);
        bytetest_81 = simd_and(tmp68, tmp49);
        tmp204 = simd_or(basis_bits.bit_3, tmp123);
        tmp205 = simd_not(tmp204);
        tmp206 = simd_or(tmp4, basis_bits.bit_6);
        tmp207 = simd_and(basis_bits.bit_3, tmp206);
        tmp208 = simd_or(simd_and(basis_bits.bit_2, tmp205), simd_andc(tmp207, basis_bits.bit_2));
        bytetest_92_a5 = simd_and(tmp7, tmp208);
        tmp209 = simd_and(tmp164, bytetest_91);
        carryQ.cq[42] = carryout2carry(pablo_blk_Advance(tmp209, carryQ.get_carry_in(42), tmp210));
        tmp211 = simd_and(tmp210, bytetest_81);
        carryQ.cq[43] = carryout2carry(pablo_blk_Advance(tmp211, carryQ.get_carry_in(43), tmp212));
        tmp213 = simd_and(tmp212, bytetest_92_a5);
        struct_No.cc = simd_or(tmp213, struct_No.cc);
        bytetest_f0 = simd_andc(tmp157, tmp27);
        bytetest_9d = simd_and(bytetest_90_9f, tmp39);
        bytetest_8d = simd_and(tmp68, tmp39);
        bytetest_a0_b1 = simd_andc(bytetest_a0_bf, tmp207);
        tmp214 = simd_and(tmp164, bytetest_9d);
        carryQ.cq[44] = carryout2carry(pablo_blk_Advance(tmp214, carryQ.get_carry_in(44), tmp215));
        tmp216 = simd_and(tmp215, bytetest_8d);
        carryQ.cq[45] = carryout2carry(pablo_blk_Advance(tmp216, carryQ.get_carry_in(45), tmp217));
        tmp218 = simd_and(tmp217, bytetest_a0_b1);
        struct_No.cc = simd_or(tmp218, struct_No.cc);
        bytetest_f0 = simd_andc(tmp157, tmp27);
        bytetest_9f = simd_and(bytetest_90_9f, tmp44);
        bytetest_84 = simd_and(tmp68, tmp158);
        tmp219 = simd_or(basis_bits.bit_5, tmp22);
        tmp220 = simd_and(basis_bits.bit_4, tmp219);
        bytetest_80_8a = simd_andc(tmp68, tmp220);
        tmp221 = simd_and(tmp164, bytetest_9f);
        carryQ.cq[46] = carryout2carry(pablo_blk_Advance(tmp221, carryQ.get_carry_in(46), tmp222));
        tmp223 = simd_and(tmp222, bytetest_84);
        carryQ.cq[47] = carryout2carry(pablo_blk_Advance(tmp223, carryQ.get_carry_in(47), tmp224));
        tmp225 = simd_and(tmp224, bytetest_80_8a);
        struct_No.cc = simd_or(tmp225, struct_No.cc);
        carryQ.CarryQ_Adjust(48);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_No & struct_No, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_c2, tmp7, tmp8, tmp9;
		BitBlock tmp10, bytetest_b2_b3, tmp11, tmp12, tmp13, tmp14, tmp15, tmp16;
		BitBlock tmp17, tmp18, bytetest_b9_b9, tmp19, tmp20, tmp21, tmp22;
		BitBlock bytetest_bc_be, tmp23, tmp24, tmp25, tmp26, tmp27, bytetest_e0, tmp28;
		BitBlock tmp29, tmp30, bytetest_a7, tmp31, tmp32, tmp33, bytetest_b4_b9, tmp34;
		BitBlock tmp35, tmp36, tmp37, tmp38, tmp39, bytetest_ad, tmp40, bytetest_b2_b7;
		BitBlock tmp41, tmp42, tmp43, tmp44, bytetest_af, tmp45, bytetest_b0_b2, tmp46;
		BitBlock tmp47, tmp48, tmp49, bytetest_b1, tmp50, tmp51, bytetest_b8_be, tmp52;
		BitBlock tmp53, tmp54, tmp55, bytetest_b5, tmp56, bytetest_b0_b5, tmp57, tmp58;
		BitBlock tmp59, tmp60, bytetest_bc, tmp61, tmp62, tmp63, tmp64, bytetest_aa_b3;
		BitBlock tmp65, tmp66, tmp67, bytetest_e1, tmp68, bytetest_8d, tmp69, tmp70;
		BitBlock tmp71, tmp72, tmp73, bytetest_a9_bc, tmp74, tmp75, tmp76, tmp77;
		BitBlock tmp78, tmp79, tmp80, bytetest_9f, bytetest_b0_b9, tmp81, tmp82, tmp83;
		BitBlock tmp84, bytetest_9a_9a, tmp85, tmp86, tmp87, bytetest_e2, bytetest_81;
		BitBlock bytetest_b0_b0, tmp88, tmp89, tmp90, tmp91, tmp92, tmp93, bytetest_82;
		BitBlock bytetest_80_89, tmp94, tmp95, tmp96, bytetest_85, bytetest_90_9f;
		BitBlock tmp97, tmp98, tmp99, tmp100, bytetest_86, bytetest_89_89, tmp101;
		BitBlock tmp102, tmp103, bytetest_92, tmp104, tmp105, bytetest_80_9b, tmp106;
		BitBlock tmp107, tmp108, bytetest_91, bytetest_a0_bf, tmp109, tmp110, tmp111;
		BitBlock tmp112, tmp113, bytetest_93, tmp114, bytetest_aa_bf, tmp115, tmp116;
		BitBlock tmp117, tmp118, bytetest_9e, tmp119, bytetest_80_93, tmp120, tmp121;
		BitBlock tmp122, bytetest_9d, tmp123, bytetest_b6_bf, tmp124, tmp125, tmp126;
		BitBlock tmp127, bytetest_b3, bytetest_bd_bd, tmp128, tmp129, tmp130;
		BitBlock bytetest_e3, tmp131, tmp132, tmp133, bytetest_92_95, tmp134, tmp135;
		BitBlock tmp136, tmp137, tmp138, tmp139, bytetest_88, bytetest_a0_a9, tmp140;
		BitBlock tmp141, tmp142, bytetest_89, bytetest_88_8f, tmp143, tmp144, tmp145;
		BitBlock tmp146, bytetest_91_9f, tmp147, bytetest_8a, tmp148, tmp149, tmp150;
		BitBlock bytetest_b1_bf, tmp151, bytetest_ea, bytetest_a0, tmp152, tmp153;
		BitBlock tmp154, tmp155, tmp156, tmp157, bytetest_f0, bytetest_90, tmp158;
		BitBlock bytetest_84, tmp159, tmp160, tmp161, tmp162, bytetest_87_b3, tmp163;
		BitBlock tmp164, tmp165, tmp166, tmp167, tmp168, tmp169, tmp170, tmp171;
		BitBlock tmp172, bytetest_b5_b8, tmp173, tmp174, tmp175, bytetest_8a_8a;
		BitBlock tmp176, tmp177, tmp178, bytetest_8c, bytetest_a0_a3, tmp179, tmp180;
		BitBlock tmp181, bytetest_a1, bytetest_98_9f, tmp182, tmp183, tmp184;
		BitBlock bytetest_a4, tmp185, tmp186, bytetest_96_9b, tmp187, tmp188, tmp189;
		BitBlock bytetest_a9, bytetest_80_87, tmp190, tmp191, tmp192, tmp193, tmp194;
		BitBlock bytetest_bd_be, tmp195, tmp196, tmp197, tmp198, bytetest_b8_bf;
		BitBlock tmp199, bytetest_b9, tmp200, bytetest_a0_be, tmp201, tmp202, tmp203;
		BitBlock tmp204, tmp205, tmp206, tmp207, tmp208, bytetest_92_a5, tmp209;
		BitBlock tmp210, tmp211, tmp212, tmp213, bytetest_a0_b1, tmp214, tmp215;
		BitBlock tmp216, tmp217, tmp218, tmp219, tmp220, bytetest_80_8a, tmp221;
		BitBlock tmp222, tmp223, tmp224, tmp225;




        struct_No.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_andc(tmp5, tmp4);
        bytetest_c2 = simd_and(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_andc(basis_bits.bit_6, tmp4);
        bytetest_b2_b3 = simd_and(tmp9, tmp10);
        tmp11 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp11, carryQ.get_carry_in(0), tmp12));
        tmp13 = simd_and(tmp12, bytetest_c2);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp13, carryQ.get_carry_in(1), tmp14));
        tmp15 = simd_and(tmp14, bytetest_b2_b3);
        struct_No.cc = simd_or(tmp15, struct_No.cc);
        bytetest_c2 = simd_and(tmp3, tmp6);
        tmp16 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp17 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp18 = simd_and(tmp16, tmp17);
        bytetest_b9_b9 = simd_and(tmp9, tmp18);
        tmp19 = simd_and(tmp14, bytetest_b9_b9);
        struct_No.cc = simd_or(tmp19, struct_No.cc);
        bytetest_c2 = simd_and(tmp3, tmp6);
        tmp20 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp21 = simd_and(tmp9, tmp20);
        tmp22 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        bytetest_bc_be = simd_andc(tmp21, tmp22);
        tmp23 = simd_and(tmp14, bytetest_bc_be);
        struct_No.cc = simd_or(tmp23, struct_No.cc);
        tmp24 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp25 = simd_and(tmp1, tmp24);
        tmp26 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp27 = simd_or(tmp4, tmp26);
        bytetest_e0 = simd_andc(tmp25, tmp27);
        tmp28 = simd_and(tmp7, tmp24);
        tmp29 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp30 = simd_and(tmp29, tmp22);
        bytetest_a7 = simd_and(tmp28, tmp30);
        tmp31 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
        tmp32 = simd_not(tmp31);
        tmp33 = simd_or(simd_and(basis_bits.bit_4, tmp32), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
        bytetest_b4_b9 = simd_and(tmp9, tmp33);
        tmp34 = simd_and(tmp12, bytetest_e0);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp34, carryQ.get_carry_in(2), tmp35));
        tmp36 = simd_and(tmp35, bytetest_a7);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp36, carryQ.get_carry_in(3), tmp37));
        tmp38 = simd_and(tmp37, bytetest_b4_b9);
        struct_No.cc = simd_or(tmp38, struct_No.cc);
        bytetest_e0 = simd_andc(tmp25, tmp27);
        tmp39 = simd_and(tmp20, tmp17);
        bytetest_ad = simd_and(tmp28, tmp39);
        tmp40 = simd_andc(tmp9, basis_bits.bit_4);
        bytetest_b2_b7 = simd_and(tmp40, tmp31);
        tmp41 = simd_and(tmp35, bytetest_ad);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp41, carryQ.get_carry_in(4), tmp42));
        tmp43 = simd_and(tmp42, bytetest_b2_b7);
        struct_No.cc = simd_or(tmp43, struct_No.cc);
        bytetest_e0 = simd_andc(tmp25, tmp27);
        tmp44 = simd_and(tmp20, tmp22);
        bytetest_af = simd_and(tmp28, tmp44);
        tmp45 = simd_andc(tmp9, tmp4);
        bytetest_b0_b2 = simd_andc(tmp45, tmp22);
        tmp46 = simd_and(tmp35, bytetest_af);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp46, carryQ.get_carry_in(5), tmp47));
        tmp48 = simd_and(tmp47, bytetest_b0_b2);
        struct_No.cc = simd_or(tmp48, struct_No.cc);
        bytetest_e0 = simd_andc(tmp25, tmp27);
        tmp49 = simd_andc(tmp17, tmp4);
        bytetest_b1 = simd_and(tmp9, tmp49);
        tmp50 = simd_and(tmp9, basis_bits.bit_4);
        tmp51 = simd_and(basis_bits.bit_5, tmp22);
        bytetest_b8_be = simd_andc(tmp50, tmp51);
        tmp52 = simd_and(tmp35, bytetest_b1);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp52, carryQ.get_carry_in(6), tmp53));
        tmp54 = simd_and(tmp53, bytetest_b8_be);
        struct_No.cc = simd_or(tmp54, struct_No.cc);
        bytetest_e0 = simd_andc(tmp25, tmp27);
        tmp55 = simd_and(tmp29, tmp17);
        bytetest_b5 = simd_and(tmp9, tmp55);
        tmp56 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        bytetest_b0_b5 = simd_andc(tmp40, tmp56);
        tmp57 = simd_and(tmp35, bytetest_b5);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp57, carryQ.get_carry_in(7), tmp58));
        tmp59 = simd_and(tmp58, bytetest_b0_b5);
        struct_No.cc = simd_or(tmp59, struct_No.cc);
        bytetest_e0 = simd_andc(tmp25, tmp27);
        tmp60 = simd_andc(tmp20, tmp26);
        bytetest_bc = simd_and(tmp9, tmp60);
        tmp61 = simd_and(tmp7, basis_bits.bit_2);
        tmp62 = simd_not(tmp4);
        tmp63 = simd_and(basis_bits.bit_4, tmp31);
        tmp64 = simd_or(simd_and(basis_bits.bit_3, tmp62), simd_andc(tmp63, basis_bits.bit_3));
        bytetest_aa_b3 = simd_and(tmp61, tmp64);
        tmp65 = simd_and(tmp35, bytetest_bc);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(tmp65, carryQ.get_carry_in(8), tmp66));
        tmp67 = simd_and(tmp66, bytetest_aa_b3);
        struct_No.cc = simd_or(tmp67, struct_No.cc);
        bytetest_e1 = simd_and(tmp25, tmp49);
        tmp68 = simd_andc(tmp7, tmp2);
        bytetest_8d = simd_and(tmp68, tmp39);
        tmp69 = simd_and(tmp20, tmp26);
        tmp70 = simd_not(tmp69);
        tmp71 = simd_or(basis_bits.bit_5, tmp26);
        tmp72 = simd_and(basis_bits.bit_4, tmp71);
        tmp73 = simd_or(simd_and(basis_bits.bit_3, tmp70), simd_andc(tmp72, basis_bits.bit_3));
        bytetest_a9_bc = simd_and(tmp61, tmp73);
        tmp74 = simd_and(tmp12, bytetest_e1);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(tmp74, carryQ.get_carry_in(9), tmp75));
        tmp76 = simd_and(tmp75, bytetest_8d);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(tmp76, carryQ.get_carry_in(10), tmp77));
        tmp78 = simd_and(tmp77, bytetest_a9_bc);
        struct_No.cc = simd_or(tmp78, struct_No.cc);
        bytetest_e1 = simd_and(tmp25, tmp49);
        tmp79 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp80 = simd_and(tmp7, tmp79);
        bytetest_9f = simd_and(tmp80, tmp44);
        bytetest_b0_b9 = simd_andc(tmp9, tmp63);
        tmp81 = simd_and(tmp75, bytetest_9f);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(tmp81, carryQ.get_carry_in(11), tmp82));
        tmp83 = simd_and(tmp82, bytetest_b0_b9);
        struct_No.cc = simd_or(tmp83, struct_No.cc);
        bytetest_e1 = simd_and(tmp25, tmp49);
        bytetest_a7 = simd_and(tmp28, tmp30);
        tmp84 = simd_and(tmp16, tmp5);
        bytetest_9a_9a = simd_and(tmp80, tmp84);
        tmp85 = simd_and(tmp75, bytetest_a7);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(tmp85, carryQ.get_carry_in(12), tmp86));
        tmp87 = simd_and(tmp86, bytetest_9a_9a);
        struct_No.cc = simd_or(tmp87, struct_No.cc);
        bytetest_e2 = simd_and(tmp25, tmp6);
        bytetest_81 = simd_and(tmp68, tmp49);
        bytetest_b0_b0 = simd_andc(tmp9, tmp27);
        tmp88 = simd_and(tmp12, bytetest_e2);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(tmp88, carryQ.get_carry_in(13), tmp89));
        tmp90 = simd_and(tmp89, bytetest_81);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(tmp90, carryQ.get_carry_in(14), tmp91));
        tmp92 = simd_and(tmp91, bytetest_b0_b0);
        struct_No.cc = simd_or(tmp92, struct_No.cc);
        bytetest_e2 = simd_and(tmp25, tmp6);
        bytetest_81 = simd_and(tmp68, tmp49);
        bytetest_b4_b9 = simd_and(tmp9, tmp33);
        tmp93 = simd_and(tmp91, bytetest_b4_b9);
        struct_No.cc = simd_or(tmp93, struct_No.cc);
        bytetest_e2 = simd_and(tmp25, tmp6);
        bytetest_82 = simd_and(tmp68, tmp6);
        bytetest_80_89 = simd_andc(tmp68, tmp63);
        tmp94 = simd_and(tmp89, bytetest_82);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(tmp94, carryQ.get_carry_in(15), tmp95));
        tmp96 = simd_and(tmp95, bytetest_80_89);
        struct_No.cc = simd_or(tmp96, struct_No.cc);
        bytetest_e2 = simd_and(tmp25, tmp6);
        bytetest_85 = simd_and(tmp68, tmp55);
        bytetest_90_9f = simd_and(tmp7, tmp79);
        tmp97 = simd_and(tmp89, bytetest_85);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(tmp97, carryQ.get_carry_in(16), tmp98));
        tmp99 = simd_and(tmp98, bytetest_90_9f);
        struct_No.cc = simd_or(tmp99, struct_No.cc);
        bytetest_e2 = simd_and(tmp25, tmp6);
        tmp100 = simd_and(tmp29, tmp5);
        bytetest_86 = simd_and(tmp68, tmp100);
        bytetest_89_89 = simd_and(tmp68, tmp18);
        tmp101 = simd_and(tmp89, bytetest_86);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(tmp101, carryQ.get_carry_in(17), tmp102));
        tmp103 = simd_and(tmp102, bytetest_89_89);
        struct_No.cc = simd_or(tmp103, struct_No.cc);
        bytetest_e2 = simd_and(tmp25, tmp6);
        bytetest_92 = simd_and(bytetest_90_9f, tmp6);
        tmp104 = simd_andc(tmp7, basis_bits.bit_2);
        tmp105 = simd_and(basis_bits.bit_3, tmp20);
        bytetest_80_9b = simd_andc(tmp104, tmp105);
        tmp106 = simd_and(tmp89, bytetest_92);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(tmp106, carryQ.get_carry_in(18), tmp107));
        tmp108 = simd_and(tmp107, bytetest_80_9b);
        bytetest_91 = simd_and(bytetest_90_9f, tmp49);
        bytetest_a0_bf = simd_and(tmp7, basis_bits.bit_2);
        tmp109 = simd_and(tmp89, bytetest_91);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(tmp109, carryQ.get_carry_in(19), tmp110));
        tmp111 = simd_and(tmp110, bytetest_a0_bf);
        tmp112 = simd_or(tmp111, tmp108);
        struct_No.cc = simd_or(tmp112, struct_No.cc);
        bytetest_e2 = simd_and(tmp25, tmp6);
        tmp113 = simd_andc(tmp22, tmp4);
        bytetest_93 = simd_and(bytetest_90_9f, tmp113);
        tmp114 = simd_or(basis_bits.bit_3, tmp63);
        bytetest_aa_bf = simd_and(bytetest_a0_bf, tmp114);
        tmp115 = simd_and(tmp89, bytetest_93);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(tmp115, carryQ.get_carry_in(20), tmp116));
        tmp117 = simd_and(tmp116, bytetest_aa_bf);
        struct_No.cc = simd_or(tmp117, struct_No.cc);
        bytetest_e2 = simd_and(tmp25, tmp6);
        tmp118 = simd_and(tmp20, tmp5);
        bytetest_9e = simd_and(bytetest_90_9f, tmp118);
        tmp119 = simd_and(basis_bits.bit_3, tmp4);
        bytetest_80_93 = simd_andc(tmp104, tmp119);
        tmp120 = simd_and(tmp89, bytetest_9e);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(tmp120, carryQ.get_carry_in(21), tmp121));
        tmp122 = simd_and(tmp121, bytetest_80_93);
        bytetest_9d = simd_and(bytetest_90_9f, tmp39);
        tmp123 = simd_or(basis_bits.bit_4, tmp56);
        bytetest_b6_bf = simd_and(tmp9, tmp123);
        tmp124 = simd_and(tmp89, bytetest_9d);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(tmp124, carryQ.get_carry_in(22), tmp125));
        tmp126 = simd_and(tmp125, bytetest_b6_bf);
        tmp127 = simd_or(tmp126, tmp122);
        struct_No.cc = simd_or(tmp127, struct_No.cc);
        bytetest_e2 = simd_and(tmp25, tmp6);
        bytetest_b3 = simd_and(tmp9, tmp113);
        bytetest_bd_bd = simd_and(tmp9, tmp39);
        tmp128 = simd_and(tmp89, bytetest_b3);
        carryQ.cq[23] = carryout2carry(pablo_blk_Advance(tmp128, carryQ.get_carry_in(23), tmp129));
        tmp130 = simd_and(tmp129, bytetest_bd_bd);
        struct_No.cc = simd_or(tmp130, struct_No.cc);
        bytetest_e3 = simd_and(tmp25, tmp113);
        bytetest_86 = simd_and(tmp68, tmp100);
        tmp131 = simd_andc(bytetest_90_9f, basis_bits.bit_4);
        tmp132 = simd_not(basis_bits.bit_6);
        tmp133 = simd_or(simd_and(basis_bits.bit_5, tmp132), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        bytetest_92_95 = simd_and(tmp131, tmp133);
        tmp134 = simd_and(tmp12, bytetest_e3);
        carryQ.cq[24] = carryout2carry(pablo_blk_Advance(tmp134, carryQ.get_carry_in(24), tmp135));
        tmp136 = simd_and(tmp135, bytetest_86);
        carryQ.cq[25] = carryout2carry(pablo_blk_Advance(tmp136, carryQ.get_carry_in(25), tmp137));
        tmp138 = simd_and(tmp137, bytetest_92_95);
        struct_No.cc = simd_or(tmp138, struct_No.cc);
        bytetest_e3 = simd_and(tmp25, tmp113);
        tmp139 = simd_andc(tmp16, tmp26);
        bytetest_88 = simd_and(tmp68, tmp139);
        bytetest_a0_a9 = simd_andc(tmp28, tmp63);
        tmp140 = simd_and(tmp135, bytetest_88);
        carryQ.cq[26] = carryout2carry(pablo_blk_Advance(tmp140, carryQ.get_carry_in(26), tmp141));
        tmp142 = simd_and(tmp141, bytetest_a0_a9);
        struct_No.cc = simd_or(tmp142, struct_No.cc);
        bytetest_e3 = simd_and(tmp25, tmp113);
        bytetest_89 = simd_and(tmp68, tmp18);
        bytetest_88_8f = simd_and(tmp68, basis_bits.bit_4);
        tmp143 = simd_and(tmp135, bytetest_89);
        carryQ.cq[27] = carryout2carry(pablo_blk_Advance(tmp143, carryQ.get_carry_in(27), tmp144));
        tmp145 = simd_and(tmp144, bytetest_88_8f);
        struct_No.cc = simd_or(tmp145, struct_No.cc);
        bytetest_e3 = simd_and(tmp25, tmp113);
        bytetest_89 = simd_and(tmp68, tmp18);
        tmp146 = simd_or(basis_bits.bit_4, tmp71);
        bytetest_91_9f = simd_and(bytetest_90_9f, tmp146);
        tmp147 = simd_and(tmp144, bytetest_91_9f);
        struct_No.cc = simd_or(tmp147, struct_No.cc);
        bytetest_e3 = simd_and(tmp25, tmp113);
        bytetest_8a = simd_and(tmp68, tmp84);
        bytetest_80_89 = simd_andc(tmp68, tmp63);
        tmp148 = simd_and(tmp135, bytetest_8a);
        carryQ.cq[28] = carryout2carry(pablo_blk_Advance(tmp148, carryQ.get_carry_in(28), tmp149));
        tmp150 = simd_and(tmp149, bytetest_80_89);
        struct_No.cc = simd_or(tmp150, struct_No.cc);
        bytetest_e3 = simd_and(tmp25, tmp113);
        bytetest_8a = simd_and(tmp68, tmp84);
        bytetest_b1_bf = simd_and(tmp9, tmp146);
        tmp151 = simd_and(tmp149, bytetest_b1_bf);
        struct_No.cc = simd_or(tmp151, struct_No.cc);
        bytetest_ea = simd_and(tmp25, tmp84);
        bytetest_a0 = simd_andc(tmp28, tmp27);
        bytetest_b0_b5 = simd_andc(tmp40, tmp56);
        tmp152 = simd_and(tmp12, bytetest_ea);
        carryQ.cq[29] = carryout2carry(pablo_blk_Advance(tmp152, carryQ.get_carry_in(29), tmp153));
        tmp154 = simd_and(tmp153, bytetest_a0);
        carryQ.cq[30] = carryout2carry(pablo_blk_Advance(tmp154, carryQ.get_carry_in(30), tmp155));
        tmp156 = simd_and(tmp155, bytetest_b0_b5);
        struct_No.cc = simd_or(tmp156, struct_No.cc);
        tmp157 = simd_and(tmp1, tmp8);
        bytetest_f0 = simd_andc(tmp157, tmp27);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp27);
        tmp158 = simd_andc(tmp29, tmp26);
        bytetest_84 = simd_and(tmp68, tmp158);
        tmp159 = simd_not(tmp119);
        tmp160 = simd_or(basis_bits.bit_4, tmp51);
        tmp161 = simd_or(basis_bits.bit_3, tmp160);
        tmp162 = simd_or(simd_and(basis_bits.bit_2, tmp159), simd_andc(tmp161, basis_bits.bit_2));
        bytetest_87_b3 = simd_and(tmp7, tmp162);
        tmp163 = simd_and(tmp12, bytetest_f0);
        carryQ.cq[31] = carryout2carry(pablo_blk_Advance(tmp163, carryQ.get_carry_in(31), tmp164));
        tmp165 = simd_and(tmp164, bytetest_90);
        carryQ.cq[32] = carryout2carry(pablo_blk_Advance(tmp165, carryQ.get_carry_in(32), tmp166));
        tmp167 = simd_and(tmp166, bytetest_84);
        carryQ.cq[33] = carryout2carry(pablo_blk_Advance(tmp167, carryQ.get_carry_in(33), tmp168));
        tmp169 = simd_and(tmp168, bytetest_87_b3);
        struct_No.cc = simd_or(tmp169, struct_No.cc);
        bytetest_f0 = simd_andc(tmp157, tmp27);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp27);
        bytetest_85 = simd_and(tmp68, tmp55);
        tmp170 = simd_not(tmp71);
        tmp171 = simd_and(basis_bits.bit_5, tmp26);
        tmp172 = simd_or(simd_and(basis_bits.bit_4, tmp170), simd_andc(tmp171, basis_bits.bit_4));
        bytetest_b5_b8 = simd_and(tmp9, tmp172);
        tmp173 = simd_and(tmp166, bytetest_85);
        carryQ.cq[34] = carryout2carry(pablo_blk_Advance(tmp173, carryQ.get_carry_in(34), tmp174));
        tmp175 = simd_and(tmp174, bytetest_b5_b8);
        struct_No.cc = simd_or(tmp175, struct_No.cc);
        bytetest_f0 = simd_andc(tmp157, tmp27);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp27);
        bytetest_86 = simd_and(tmp68, tmp100);
        bytetest_8a_8a = simd_and(tmp68, tmp84);
        tmp176 = simd_and(tmp166, bytetest_86);
        carryQ.cq[35] = carryout2carry(pablo_blk_Advance(tmp176, carryQ.get_carry_in(35), tmp177));
        tmp178 = simd_and(tmp177, bytetest_8a_8a);
        struct_No.cc = simd_or(tmp178, struct_No.cc);
        bytetest_f0 = simd_andc(tmp157, tmp27);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp27);
        bytetest_8c = simd_and(tmp68, tmp60);
        bytetest_a0_a3 = simd_andc(tmp28, tmp4);
        tmp179 = simd_and(tmp166, bytetest_8c);
        carryQ.cq[36] = carryout2carry(pablo_blk_Advance(tmp179, carryQ.get_carry_in(36), tmp180));
        tmp181 = simd_and(tmp180, bytetest_a0_a3);
        struct_No.cc = simd_or(tmp181, struct_No.cc);
        bytetest_f0 = simd_andc(tmp157, tmp27);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp27);
        bytetest_a1 = simd_and(tmp28, tmp49);
        bytetest_98_9f = simd_and(bytetest_90_9f, basis_bits.bit_4);
        tmp182 = simd_and(tmp166, bytetest_a1);
        carryQ.cq[37] = carryout2carry(pablo_blk_Advance(tmp182, carryQ.get_carry_in(37), tmp183));
        tmp184 = simd_and(tmp183, bytetest_98_9f);
        struct_No.cc = simd_or(tmp184, struct_No.cc);
        bytetest_f0 = simd_andc(tmp157, tmp27);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp27);
        bytetest_a4 = simd_and(tmp28, tmp158);
        tmp185 = simd_not(basis_bits.bit_5);
        tmp186 = simd_or(simd_and(basis_bits.bit_4, tmp185), simd_andc(tmp56, basis_bits.bit_4));
        bytetest_96_9b = simd_and(bytetest_90_9f, tmp186);
        tmp187 = simd_and(tmp166, bytetest_a4);
        carryQ.cq[38] = carryout2carry(pablo_blk_Advance(tmp187, carryQ.get_carry_in(38), tmp188));
        tmp189 = simd_and(tmp188, bytetest_96_9b);
        struct_No.cc = simd_or(tmp189, struct_No.cc);
        bytetest_f0 = simd_andc(tmp157, tmp27);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp27);
        bytetest_a9 = simd_and(tmp28, tmp18);
        bytetest_80_87 = simd_andc(tmp68, basis_bits.bit_4);
        tmp190 = simd_and(tmp166, bytetest_a9);
        carryQ.cq[39] = carryout2carry(pablo_blk_Advance(tmp190, carryQ.get_carry_in(39), tmp191));
        tmp192 = simd_and(tmp191, bytetest_80_87);
        struct_No.cc = simd_or(tmp192, struct_No.cc);
        bytetest_f0 = simd_andc(tmp157, tmp27);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp27);
        bytetest_a9 = simd_and(tmp28, tmp18);
        tmp193 = simd_not(basis_bits.bit_7);
        tmp194 = simd_or(simd_and(basis_bits.bit_6, tmp193), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
        bytetest_bd_be = simd_and(tmp21, tmp194);
        tmp195 = simd_and(tmp191, bytetest_bd_be);
        struct_No.cc = simd_or(tmp195, struct_No.cc);
        bytetest_f0 = simd_andc(tmp157, tmp27);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp27);
        bytetest_ad = simd_and(tmp28, tmp39);
        bytetest_98_9f = simd_and(bytetest_90_9f, basis_bits.bit_4);
        tmp196 = simd_and(tmp166, bytetest_ad);
        carryQ.cq[40] = carryout2carry(pablo_blk_Advance(tmp196, carryQ.get_carry_in(40), tmp197));
        tmp198 = simd_and(tmp197, bytetest_98_9f);
        struct_No.cc = simd_or(tmp198, struct_No.cc);
        bytetest_f0 = simd_andc(tmp157, tmp27);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp27);
        bytetest_ad = simd_and(tmp28, tmp39);
        bytetest_b8_bf = simd_and(tmp9, basis_bits.bit_4);
        tmp199 = simd_and(tmp197, bytetest_b8_bf);
        struct_No.cc = simd_or(tmp199, struct_No.cc);
        bytetest_f0 = simd_andc(tmp157, tmp27);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp27);
        bytetest_b9 = simd_and(tmp9, tmp18);
        tmp200 = simd_and(basis_bits.bit_3, tmp44);
        bytetest_a0_be = simd_andc(bytetest_a0_bf, tmp200);
        tmp201 = simd_and(tmp166, bytetest_b9);
        carryQ.cq[41] = carryout2carry(pablo_blk_Advance(tmp201, carryQ.get_carry_in(41), tmp202));
        tmp203 = simd_and(tmp202, bytetest_a0_be);
        struct_No.cc = simd_or(tmp203, struct_No.cc);
        bytetest_f0 = simd_andc(tmp157, tmp27);
        bytetest_91 = simd_and(bytetest_90_9f, tmp49);
        bytetest_81 = simd_and(tmp68, tmp49);
        tmp204 = simd_or(basis_bits.bit_3, tmp123);
        tmp205 = simd_not(tmp204);
        tmp206 = simd_or(tmp4, basis_bits.bit_6);
        tmp207 = simd_and(basis_bits.bit_3, tmp206);
        tmp208 = simd_or(simd_and(basis_bits.bit_2, tmp205), simd_andc(tmp207, basis_bits.bit_2));
        bytetest_92_a5 = simd_and(tmp7, tmp208);
        tmp209 = simd_and(tmp164, bytetest_91);
        carryQ.cq[42] = carryout2carry(pablo_blk_Advance(tmp209, carryQ.get_carry_in(42), tmp210));
        tmp211 = simd_and(tmp210, bytetest_81);
        carryQ.cq[43] = carryout2carry(pablo_blk_Advance(tmp211, carryQ.get_carry_in(43), tmp212));
        tmp213 = simd_and(tmp212, bytetest_92_a5);
        struct_No.cc = simd_or(tmp213, struct_No.cc);
        bytetest_f0 = simd_andc(tmp157, tmp27);
        bytetest_9d = simd_and(bytetest_90_9f, tmp39);
        bytetest_8d = simd_and(tmp68, tmp39);
        bytetest_a0_b1 = simd_andc(bytetest_a0_bf, tmp207);
        tmp214 = simd_and(tmp164, bytetest_9d);
        carryQ.cq[44] = carryout2carry(pablo_blk_Advance(tmp214, carryQ.get_carry_in(44), tmp215));
        tmp216 = simd_and(tmp215, bytetest_8d);
        carryQ.cq[45] = carryout2carry(pablo_blk_Advance(tmp216, carryQ.get_carry_in(45), tmp217));
        tmp218 = simd_and(tmp217, bytetest_a0_b1);
        struct_No.cc = simd_or(tmp218, struct_No.cc);
        bytetest_f0 = simd_andc(tmp157, tmp27);
        bytetest_9f = simd_and(bytetest_90_9f, tmp44);
        bytetest_84 = simd_and(tmp68, tmp158);
        tmp219 = simd_or(basis_bits.bit_5, tmp22);
        tmp220 = simd_and(basis_bits.bit_4, tmp219);
        bytetest_80_8a = simd_andc(tmp68, tmp220);
        tmp221 = simd_and(tmp164, bytetest_9f);
        carryQ.cq[46] = carryout2carry(pablo_blk_Advance(tmp221, carryQ.get_carry_in(46), tmp222));
        tmp223 = simd_and(tmp222, bytetest_84);
        carryQ.cq[47] = carryout2carry(pablo_blk_Advance(tmp223, carryQ.get_carry_in(47), tmp224));
        tmp225 = simd_and(tmp224, bytetest_80_8a);
        struct_No.cc = simd_or(tmp225, struct_No.cc);
  }
  CarryArray<48, 0> carryQ;
  };

  struct Lo {
  Lo() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Lo & struct_Lo) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_c2, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, bytetest_aa_aa, tmp12, tmp13, tmp14, tmp15, tmp16;
		BitBlock tmp17, tmp18, bytetest_ba_ba, tmp19, tmp20, tmp21, bytetest_c6, tmp22;
		BitBlock tmp23, bytetest_bb_bb, tmp24, tmp25, tmp26, tmp27, bytetest_c7, tmp28;
		BitBlock bytetest_80_83, tmp29, tmp30, tmp31, bytetest_ca, tmp32, tmp33, tmp34;
		BitBlock tmp35, bytetest_94_94, tmp36, tmp37, tmp38, tmp39, bytetest_d7, tmp40;
		BitBlock tmp41, tmp42, tmp43, tmp44, bytetest_90_aa, tmp45, tmp46, tmp47;
		BitBlock tmp48, bytetest_b0_b2, tmp49, tmp50, bytetest_d8, bytetest_a0_bf;
		BitBlock tmp51, tmp52, tmp53, tmp54, tmp55, bytetest_d9, tmp56, tmp57, tmp58;
		BitBlock bytetest_81_8a, tmp59, tmp60, tmp61, tmp62, tmp63, bytetest_ae_af;
		BitBlock tmp64, bytetest_db, tmp65, tmp66, bytetest_80_93, tmp67, tmp68, tmp69;
		BitBlock bytetest_da, bytetest_80_bf, tmp70, tmp71, tmp72, tmp73, tmp74;
		BitBlock bytetest_b1_bf, tmp75, tmp76, tmp77, tmp78, tmp79, bytetest_95_95;
		BitBlock tmp80, tmp81, tmp82, tmp83, tmp84, tmp85, bytetest_ba_bc, tmp86;
		BitBlock tmp87, bytetest_bf_bf, tmp88, tmp89, bytetest_dc, tmp90;
		BitBlock bytetest_90_90, tmp91, tmp92, tmp93, tmp94, tmp95, tmp96, tmp97;
		BitBlock bytetest_92_af, tmp98, tmp99, bytetest_de, tmp100, tmp101, tmp102;
		BitBlock tmp103, bytetest_80_a5, tmp104, tmp105, tmp106, tmp107, bytetest_dd;
		BitBlock tmp108, tmp109, tmp110, bytetest_8d_bf, tmp111, tmp112, tmp113;
		BitBlock tmp114, tmp115, bytetest_b1_b1, tmp116, bytetest_df, tmp117, tmp118;
		BitBlock tmp119, tmp120, bytetest_8a_aa, tmp121, tmp122, tmp123, tmp124;
		BitBlock bytetest_e0, bytetest_a0, tmp125, tmp126, bytetest_80_95, tmp127;
		BitBlock tmp128, tmp129, tmp130, tmp131, bytetest_a1, tmp132, tmp133;
		BitBlock bytetest_80_98, tmp134, tmp135, tmp136, bytetest_a2, bytetest_a0_a0;
		BitBlock tmp137, tmp138, tmp139, tmp140, tmp141, tmp142, bytetest_a2_ac;
		BitBlock tmp143, bytetest_a4, tmp144, tmp145, tmp146, tmp147, bytetest_84_b9;
		BitBlock tmp148, tmp149, tmp150, bytetest_bd_bd, tmp151, bytetest_a5, tmp152;
		BitBlock tmp153, tmp154, tmp155, tmp156, tmp157, tmp158, bytetest_98_a1;
		BitBlock tmp159, tmp160, bytetest_b2_b7, tmp161, bytetest_b9_bf, tmp162;
		BitBlock bytetest_a6, tmp163, tmp164, bytetest_85_8c, tmp165, tmp166, tmp167;
		BitBlock tmp168, tmp169, bytetest_8f_90, tmp170, tmp171, tmp172, tmp173;
		BitBlock tmp174, tmp175, bytetest_93_a8, tmp176, tmp177, tmp178;
		BitBlock bytetest_aa_b0, tmp179, bytetest_b2_b2, tmp180, tmp181, tmp182;
		BitBlock bytetest_b6_b9, tmp183, tmp184, bytetest_a7, bytetest_8e_8e, tmp185;
		BitBlock tmp186, tmp187, tmp188, bytetest_9c_9d, tmp189, tmp190, tmp191;
		BitBlock bytetest_9f_a1, tmp192, bytetest_b0_b1, tmp193, bytetest_a8, tmp194;
		BitBlock bytetest_85_8a, tmp195, tmp196, tmp197, tmp198, tmp199, tmp200;
		BitBlock tmp201, bytetest_b2_b3, tmp202, tmp203, tmp204, tmp205;
		BitBlock bytetest_b5_b6, tmp206, tmp207, bytetest_b8_b9, tmp208, bytetest_a9;
		BitBlock tmp209, tmp210, bytetest_99_9c, tmp211, tmp212, tmp213;
		BitBlock bytetest_9e_9e, tmp214, bytetest_b2_b4, tmp215, bytetest_aa, tmp216;
		BitBlock tmp217, bytetest_85_8d, tmp218, tmp219, tmp220, tmp221, tmp222;
		BitBlock bytetest_8f_91, tmp223, tmp224, tmp225, tmp226, tmp227;
		BitBlock bytetest_b5_b9, tmp228, tmp229, bytetest_ab, tmp230, tmp231, tmp232;
		BitBlock bytetest_a0_a1, tmp233, bytetest_ac, tmp234, tmp235, tmp236, tmp237;
		BitBlock tmp238, tmp239, tmp240, tmp241, tmp242, bytetest_ad, tmp243, tmp244;
		BitBlock tmp245, tmp246, tmp247, bytetest_ae, tmp248, bytetest_83_83, tmp249;
		BitBlock tmp250, tmp251, tmp252, tmp253, bytetest_8e_90, tmp254, tmp255;
		BitBlock tmp256, tmp257, bytetest_92_95, tmp258, tmp259, bytetest_99_9a;
		BitBlock tmp260, bytetest_9c_9c, tmp261, bytetest_9e_9f, tmp262, tmp263;
		BitBlock tmp264, bytetest_a3_a4, tmp265, tmp266, bytetest_a8_aa, tmp267;
		BitBlock tmp268, tmp269, bytetest_ae_b9, tmp270, bytetest_af, tmp271, tmp272;
		BitBlock tmp273, bytetest_b0, tmp274, tmp275, tmp276, tmp277, tmp278;
		BitBlock bytetest_92_a8, tmp279, tmp280, tmp281, bytetest_aa_b3, tmp282;
		BitBlock tmp283, tmp284, bytetest_b1, bytetest_98_99, tmp285, tmp286, tmp287;
		BitBlock tmp288, bytetest_b2, tmp289, tmp290, tmp291, tmp292, tmp293, tmp294;
		BitBlock tmp295, tmp296, bytetest_b3, tmp297, tmp298, tmp299, tmp300, tmp301;
		BitBlock bytetest_b1_b2, tmp302, bytetest_b4, tmp303, tmp304, tmp305, tmp306;
		BitBlock tmp307, tmp308, tmp309, bytetest_92_ba, tmp310, tmp311, bytetest_b5;
		BitBlock tmp312, tmp313, tmp314, tmp315, bytetest_ba_bf, tmp316, bytetest_b6;
		BitBlock tmp317, tmp318, tmp319, tmp320, tmp321, bytetest_85_96, tmp322;
		BitBlock tmp323, tmp324, tmp325, tmp326, bytetest_9a_b1, tmp327, tmp328;
		BitBlock tmp329, bytetest_b3_bb, tmp330, tmp331, bytetest_b7, tmp332;
		BitBlock bytetest_80_86, tmp333, tmp334, tmp335, bytetest_b8, tmp336, tmp337;
		BitBlock tmp338, tmp339, bytetest_81_b0, tmp340, tmp341, tmp342, tmp343;
		BitBlock bytetest_b9, bytetest_80_85, tmp344, tmp345, tmp346, bytetest_ba;
		BitBlock tmp347, bytetest_81_82, tmp348, tmp349, tmp350, bytetest_84_84;
		BitBlock tmp351, tmp352, tmp353, bytetest_87_88, tmp354, bytetest_8a_8a;
		BitBlock tmp355, bytetest_8d_8d, tmp356, bytetest_94_97, tmp357;
		BitBlock bytetest_99_9f, tmp358, tmp359, bytetest_a1_a3, tmp360;
		BitBlock bytetest_a5_a5, tmp361, bytetest_a7_a7, tmp362, tmp363;
		BitBlock bytetest_aa_ab, tmp364, tmp365, bytetest_ad_b0, tmp366, tmp367;
		BitBlock tmp368, bytetest_bb, bytetest_80_84, tmp369, tmp370, tmp371;
		BitBlock bytetest_9c_9f, tmp372, bytetest_bc, bytetest_80_80, tmp373, tmp374;
		BitBlock tmp375, bytetest_bd, bytetest_80_87, tmp376, tmp377, tmp378, tmp379;
		BitBlock tmp380, bytetest_89_ac, tmp381, bytetest_be, tmp382, bytetest_88_8c;
		BitBlock tmp383, tmp384, tmp385, bytetest_e1, bytetest_80, tmp386;
		BitBlock bytetest_80_aa, tmp387, tmp388, tmp389, tmp390, tmp391, tmp392;
		BitBlock bytetest_81, bytetest_90_95, tmp393, tmp394, tmp395, bytetest_9a_9d;
		BitBlock tmp396, bytetest_a1_a1, tmp397, tmp398, bytetest_a5_a6, tmp399;
		BitBlock bytetest_ae_b0, tmp400, bytetest_82, bytetest_80_81, tmp401, tmp402;
		BitBlock tmp403, bytetest_b5_bf, tmp404, tmp405, tmp406, bytetest_83, tmp407;
		BitBlock bytetest_90_ba, tmp408, tmp409, tmp410, bytetest_89, bytetest_80_88;
		BitBlock tmp411, tmp412, tmp413, tmp414, bytetest_84_88, tmp415, tmp416;
		BitBlock tmp417, tmp418, bytetest_bd_bf, tmp419, tmp420, tmp421;
		BitBlock bytetest_8a_8d, tmp422, bytetest_90_96, tmp423, bytetest_98_98;
		BitBlock tmp424, tmp425, bytetest_8a, tmp426, tmp427, tmp428, tmp429, tmp430;
		BitBlock tmp431, tmp432, bytetest_90_b0, tmp433, bytetest_b2_b5, tmp434;
		BitBlock bytetest_b8_be, tmp435, bytetest_8b, tmp436, tmp437, tmp438;
		BitBlock bytetest_82_85, tmp439, tmp440, bytetest_88_96, tmp441, bytetest_8c;
		BitBlock bytetest_80_90, tmp442, tmp443, tmp444, tmp445, bytetest_98_bf;
		BitBlock tmp446, tmp447, tmp448, bytetest_8d, bytetest_80_9a, tmp449, tmp450;
		BitBlock tmp451, tmp452, tmp453, bytetest_8e, bytetest_80_8f, tmp454, tmp455;
		BitBlock tmp456, bytetest_8f, tmp457, tmp458, bytetest_80_b4, tmp459, tmp460;
		BitBlock tmp461, tmp462, tmp463, bytetest_99, tmp464, bytetest_80_ac, tmp465;
		BitBlock tmp466, tmp467, tmp468, bytetest_91_98, tmp469, tmp470, tmp471;
		BitBlock bytetest_90, tmp472, bytetest_81_bf, tmp473, tmp474, tmp475, tmp476;
		BitBlock tmp477, tmp478, bytetest_af_bf, tmp479, bytetest_9a, tmp480, tmp481;
		BitBlock bytetest_81_9a, tmp482, tmp483, tmp484, bytetest_9b, tmp485, tmp486;
		BitBlock tmp487, tmp488, tmp489, bytetest_9c, tmp490, bytetest_80_8c, tmp491;
		BitBlock tmp492, tmp493, tmp494, bytetest_8e_91, tmp495, bytetest_a0_b1;
		BitBlock tmp496, bytetest_9d, bytetest_80_91, tmp497, tmp498, tmp499;
		BitBlock bytetest_a0_ac, tmp500, tmp501, bytetest_9e, tmp502, bytetest_80_b3;
		BitBlock tmp503, tmp504, tmp505, bytetest_9f, tmp506, tmp507, tmp508, tmp509;
		BitBlock bytetest_80_82, tmp510, tmp511, tmp512, tmp513, tmp514, tmp515;
		BitBlock tmp516, tmp517, tmp518, bytetest_84_b7, tmp519, tmp520;
		BitBlock bytetest_80_a8, tmp521, tmp522, tmp523, tmp524, bytetest_a3, tmp525;
		BitBlock bytetest_80_b5, tmp526, tmp527, tmp528, bytetest_b0_bf, tmp529;
		BitBlock tmp530, tmp531, bytetest_80_9c, tmp532, tmp533, tmp534, tmp535;
		BitBlock tmp536, tmp537, bytetest_90_ad, tmp538, tmp539, tmp540, tmp541;
		BitBlock bytetest_b0_b4, tmp542, tmp543, tmp544, bytetest_80_ab, tmp545;
		BitBlock tmp546, tmp547, tmp548, bytetest_81_87, tmp549, tmp550, tmp551;
		BitBlock tmp552, bytetest_80_96, tmp553, tmp554, tmp555, bytetest_80_94;
		BitBlock tmp556, tmp557, tmp558, tmp559, tmp560, tmp561, tmp562, tmp563;
		BitBlock bytetest_85_b3, tmp564, tmp565, tmp566, tmp567, bytetest_85_8b;
		BitBlock tmp568, tmp569, tmp570, tmp571, tmp572, tmp573, bytetest_83_a0;
		BitBlock tmp574, tmp575, tmp576, tmp577, tmp578, tmp579, tmp580, tmp581;
		BitBlock tmp582, tmp583, tmp584, bytetest_80_a3, tmp585, tmp586, tmp587;
		BitBlock tmp588, bytetest_8d_8f, tmp589, tmp590, tmp591, tmp592;
		BitBlock bytetest_9a_b7, tmp593, tmp594, bytetest_a9_ac, tmp595, tmp596;
		BitBlock tmp597, bytetest_ae_b1, tmp598, tmp599, tmp600, bytetest_e2;
		BitBlock bytetest_84, tmp601, bytetest_b5_b8, tmp602, tmp603, tmp604, tmp605;
		BitBlock tmp606, tmp607, tmp608, bytetest_80_a7, tmp609, tmp610, tmp611;
		BitBlock tmp612, tmp613, tmp614, tmp615, tmp616, tmp617, tmp618;
		BitBlock bytetest_a0_a6, tmp619, bytetest_a8_ae, tmp620, bytetest_b0_b6;
		BitBlock tmp621, tmp622, tmp623, tmp624, tmp625, tmp626, bytetest_88_8e;
		BitBlock tmp627, tmp628, bytetest_98_9e, tmp629, bytetest_e3, bytetest_86_86;
		BitBlock tmp630, tmp631, tmp632, tmp633, tmp634, bytetest_bc_bc, tmp635;
		BitBlock tmp636, tmp637, tmp638, tmp639, tmp640, tmp641, tmp642;
		BitBlock bytetest_9f_9f, tmp643, tmp644, bytetest_80_ba, tmp645, tmp646;
		BitBlock tmp647, bytetest_a1_bf, tmp648, tmp649, tmp650, tmp651;
		BitBlock bytetest_85_ad, tmp652, tmp653, tmp654, bytetest_86, tmp655;
		BitBlock bytetest_80_8e, tmp656, tmp657, tmp658, bytetest_85, tmp659, tmp660;
		BitBlock tmp661, tmp662, tmp663, tmp664, bytetest_a0_ba, tmp665, bytetest_87;
		BitBlock tmp666, tmp667, tmp668, bytetest_e4, tmp669, tmp670, tmp671, tmp672;
		BitBlock tmp673, tmp674, tmp675, tmp676, tmp677, bytetest_90_bf, tmp678;
		BitBlock tmp679, tmp680, tmp681, bytetest_e9, bytetest_bf, tmp682, tmp683;
		BitBlock tmp684, tmp685, tmp686, tmp687, bytetest_80_be, tmp688, tmp689;
		BitBlock tmp690, tmp691, bytetest_e5_e8, bytetest_b8_bf, tmp692, tmp693;
		BitBlock tmp694, tmp695, tmp696, bytetest_ea, tmp697, tmp698, tmp699, tmp700;
		BitBlock tmp701, bytetest_92, tmp702, tmp703, tmp704, tmp705, bytetest_81_91;
		BitBlock tmp706, tmp707, tmp708, tmp709, bytetest_96_bf, tmp710, tmp711;
		BitBlock tmp712, bytetest_93, tmp713, bytetest_90_b7, tmp714, tmp715, tmp716;
		BitBlock bytetest_98, bytetest_80_8b, tmp717, tmp718, tmp719, tmp720, tmp721;
		BitBlock tmp722, tmp723, bytetest_90_9f, tmp724, tmp725, bytetest_ae_ae;
		BitBlock tmp726, tmp727, tmp728, tmp729, tmp730, tmp731, tmp732, tmp733;
		BitBlock tmp734, tmp735, tmp736, tmp737, tmp738, bytetest_bb_bf, tmp739;
		BitBlock tmp740, tmp741, tmp742, tmp743, bytetest_83_85, tmp744, tmp745;
		BitBlock bytetest_87_8a, tmp746, tmp747, tmp748, bytetest_8c_a2, tmp749;
		BitBlock tmp750, tmp751, tmp752, tmp753, bytetest_82_b3, tmp754, tmp755;
		BitBlock tmp756, tmp757, tmp758, tmp759, tmp760, tmp761, tmp762;
		BitBlock bytetest_8a_a5, tmp763, tmp764, tmp765, tmp766, tmp767, tmp768;
		BitBlock tmp769, tmp770, bytetest_a0_bc, tmp771, tmp772, tmp773;
		BitBlock bytetest_84_b2, tmp774, tmp775, tmp776, tmp777, tmp778, tmp779;
		BitBlock tmp780, tmp781, tmp782, tmp783, bytetest_84_8b, tmp784;
		BitBlock bytetest_a0_af, tmp785, tmp786, tmp787, bytetest_b1_b6, tmp788;
		BitBlock tmp789, bytetest_80_af, tmp790, tmp791, tmp792, tmp793, tmp794;
		BitBlock tmp795, bytetest_b9_bd, tmp796, tmp797, tmp798, tmp799;
		BitBlock bytetest_82_82, tmp800, tmp801, bytetest_9b_9c, tmp802;
		BitBlock bytetest_a0_aa, tmp803, tmp804, bytetest_81_86, tmp805, tmp806;
		BitBlock tmp807, bytetest_89_8e, tmp808, tmp809, bytetest_91_96, tmp810;
		BitBlock tmp811, tmp812, tmp813, tmp814, tmp815, bytetest_80_a2, tmp816;
		BitBlock tmp817, tmp818, bytetest_ed, tmp819, tmp820, tmp821, tmp822, tmp823;
		BitBlock tmp824, bytetest_80_9d, tmp825, tmp826, tmp827, tmp828, tmp829;
		BitBlock bytetest_eb_ec, tmp830, tmp831, tmp832, tmp833, tmp834, tmp835;
		BitBlock tmp836, tmp837, tmp838, tmp839, tmp840, tmp841, tmp842;
		BitBlock bytetest_8b_bb, tmp843, bytetest_ef, tmp844, bytetest_80_ad, tmp845;
		BitBlock tmp846, tmp847, tmp848, tmp849, bytetest_a4_a8, tmp850, tmp851;
		BitBlock tmp852, tmp853, bytetest_80_99, tmp854, tmp855, tmp856, tmp857;
		BitBlock tmp858, tmp859, tmp860, tmp861, tmp862, bytetest_9d_9d, tmp863;
		BitBlock tmp864, tmp865, tmp866, bytetest_9f_a8, tmp867, tmp868;
		BitBlock bytetest_aa_b6, tmp869, bytetest_b8_bc, tmp870, bytetest_be_be;
		BitBlock tmp871, tmp872, tmp873, tmp874, bytetest_83_84, tmp875, tmp876;
		BitBlock bytetest_80_b1, tmp877, tmp878, tmp879, tmp880, bytetest_86_bf;
		BitBlock tmp881, tmp882, tmp883, bytetest_80_bd, tmp884, tmp885, tmp886;
		BitBlock bytetest_b0_b3, tmp887, tmp888, tmp889, tmp890, bytetest_93_bf;
		BitBlock tmp891, tmp892, tmp893, tmp894, tmp895, tmp896, tmp897, tmp898;
		BitBlock tmp899, tmp900, tmp901, tmp902, tmp903, tmp904, tmp905, tmp906;
		BitBlock bytetest_92_bf, tmp907, tmp908, bytetest_b0_bb, tmp909, tmp910;
		BitBlock tmp911, tmp912, tmp913, bytetest_80_bc, tmp914, tmp915, tmp916;
		BitBlock tmp917, tmp918, tmp919, bytetest_b6_bf, tmp920, tmp921, tmp922;
		BitBlock bytetest_a6_af, tmp923, tmp924, tmp925, tmp926, tmp927, tmp928;
		BitBlock tmp929, tmp930, bytetest_a0_be, tmp931, bytetest_82_87, tmp932;
		BitBlock tmp933, tmp934, bytetest_8a_8f, tmp935, bytetest_92_97, tmp936;
		BitBlock bytetest_9a_9c, tmp937, tmp938, bytetest_f0, tmp939, tmp940, tmp941;
		BitBlock tmp942, tmp943, tmp944, tmp945, tmp946, tmp947, tmp948;
		BitBlock bytetest_8d_a6, tmp949, tmp950, bytetest_a8_ba, tmp951;
		BitBlock bytetest_bc_bd, tmp952, tmp953, bytetest_80_8d, tmp954, tmp955;
		BitBlock tmp956, tmp957, tmp958, bytetest_90_9d, tmp959, tmp960, tmp961;
		BitBlock tmp962, tmp963, tmp964, tmp965, tmp966, tmp967, tmp968, tmp969;
		BitBlock tmp970, tmp971, tmp972, tmp973, tmp974, bytetest_80_9e, tmp975;
		BitBlock tmp976, tmp977, tmp978, tmp979, tmp980, tmp981, tmp982, tmp983;
		BitBlock bytetest_82_89, tmp984, tmp985, tmp986, tmp987, tmp988, tmp989;
		BitBlock tmp990, tmp991, tmp992, bytetest_88_8f, tmp993, tmp994, tmp995;
		BitBlock tmp996, bytetest_91, tmp997, tmp998, tmp999, tmp1000, tmp1001;
		BitBlock tmp1002, tmp1003, bytetest_88_88, tmp1004, tmp1005, tmp1006;
		BitBlock bytetest_8a_b5, tmp1007, bytetest_b7_b8, tmp1008, tmp1009, tmp1010;
		BitBlock tmp1011, tmp1012, tmp1013, tmp1014, tmp1015, tmp1016, tmp1017;
		BitBlock bytetest_a0_b9, tmp1018, tmp1019, bytetest_80_b7, tmp1020, tmp1021;
		BitBlock tmp1022, bytetest_be_bf, tmp1023, tmp1024, tmp1025, tmp1026;
		BitBlock bytetest_90_93, tmp1027, tmp1028, bytetest_95_97, tmp1029, tmp1030;
		BitBlock bytetest_99_b3, tmp1031, tmp1032, tmp1033, tmp1034, tmp1035, tmp1036;
		BitBlock tmp1037, tmp1038, tmp1039, tmp1040, bytetest_a0_b2, tmp1041, tmp1042;
		BitBlock tmp1043, tmp1044, tmp1045, tmp1046, tmp1047, tmp1048, tmp1049;
		BitBlock bytetest_83_b7, tmp1050, tmp1051, tmp1052, tmp1053, tmp1054, tmp1055;
		BitBlock bytetest_83_af, tmp1056, tmp1057, tmp1058, tmp1059, bytetest_90_a8;
		BitBlock tmp1060, tmp1061, tmp1062, tmp1063, bytetest_83_a6, tmp1064, tmp1065;
		BitBlock tmp1066, tmp1067, bytetest_83_b2, tmp1068, tmp1069, tmp1070;
		BitBlock bytetest_81_84, tmp1071, tmp1072, tmp1073, tmp1074, tmp1075, tmp1076;
		BitBlock tmp1077, bytetest_80_ae, tmp1078, tmp1079, tmp1080, tmp1081, tmp1082;
		BitBlock tmp1083, tmp1084, tmp1085, tmp1086, tmp1087, tmp1088, tmp1089;
		BitBlock tmp1090, tmp1091, tmp1092, tmp1093, tmp1094, tmp1095, bytetest_96;
		BitBlock tmp1096, bytetest_80_b8, tmp1097, tmp1098, tmp1099, tmp1100, tmp1101;
		BitBlock bytetest_a0_a7, tmp1102, tmp1103, tmp1104, tmp1105, tmp1106, tmp1107;
		BitBlock tmp1108, tmp1109, tmp1110, tmp1111, tmp1112, tmp1113, tmp1114;
		BitBlock tmp1115, tmp1116, tmp1117, tmp1118, tmp1119, tmp1120, tmp1121;
		BitBlock tmp1122, tmp1123, bytetest_85_9f, tmp1124, tmp1125, bytetest_a1_a2;
		BitBlock tmp1126, bytetest_a4_a4, tmp1127, tmp1128, tmp1129, tmp1130;
		BitBlock bytetest_a9_b2, tmp1131, bytetest_b4_b7, tmp1132, bytetest_b9_b9;
		BitBlock tmp1133, tmp1134, tmp1135, tmp1136, tmp1137, bytetest_87_87, tmp1138;
		BitBlock bytetest_89_89, tmp1139, bytetest_8b_8b, tmp1140, tmp1141;
		BitBlock bytetest_91_92, tmp1142, tmp1143, bytetest_97_97, tmp1144;
		BitBlock bytetest_99_99, tmp1145, bytetest_9b_9b, tmp1146, tmp1147, tmp1148;
		BitBlock tmp1149, tmp1150, bytetest_a7_aa, tmp1151, tmp1152, bytetest_ac_b2;
		BitBlock tmp1153, tmp1154, bytetest_b9_bc, tmp1155, tmp1156, bytetest_80_89;
		BitBlock tmp1157, tmp1158, tmp1159, tmp1160, tmp1161, bytetest_8b_9b, tmp1162;
		BitBlock tmp1163, bytetest_a5_a9, tmp1164, bytetest_ab_bb, tmp1165, tmp1166;
		BitBlock tmp1167, tmp1168, tmp1169, tmp1170, tmp1171, tmp1172, tmp1173;
		BitBlock tmp1174, bytetest_a0_a9, tmp1175, tmp1176, tmp1177, tmp1178, tmp1179;
		BitBlock tmp1180, tmp1181, tmp1182, tmp1183, tmp1184, tmp1185, bytetest_80_9b;
		BitBlock tmp1186, tmp1187, tmp1188, tmp1189, tmp1190, bytetest_9c_bf, tmp1191;
		BitBlock tmp1192, tmp1193, tmp1194, tmp1195, tmp1196, tmp1197, tmp1198;
		BitBlock bytetest_9d_9f, tmp1199, tmp1200, tmp1201, tmp1202, tmp1203, tmp1204;
		BitBlock tmp1205, tmp1206, tmp1207, tmp1208, tmp1209, tmp1210, tmp1211;




        struct_Lo.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_andc(tmp5, tmp4);
        bytetest_c2 = simd_and(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp11 = simd_and(tmp10, tmp5);
        bytetest_aa_aa = simd_and(tmp9, tmp11);
        tmp12 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp12, carryQ.get_carry_in(0), tmp13));
        tmp14 = simd_and(tmp13, bytetest_c2);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp14, carryQ.get_carry_in(1), tmp15));
        tmp16 = simd_and(tmp15, bytetest_aa_aa);
        struct_Lo.cc = simd_or(tmp16, struct_Lo.cc);
        bytetest_c2 = simd_and(tmp3, tmp6);
        tmp17 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp18 = simd_and(tmp7, tmp17);
        bytetest_ba_ba = simd_and(tmp18, tmp11);
        tmp19 = simd_and(tmp15, bytetest_ba_ba);
        struct_Lo.cc = simd_or(tmp19, struct_Lo.cc);
        tmp20 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp21 = simd_and(tmp20, tmp5);
        bytetest_c6 = simd_and(tmp3, tmp21);
        tmp22 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp23 = simd_and(tmp10, tmp22);
        bytetest_bb_bb = simd_and(tmp18, tmp23);
        tmp24 = simd_and(tmp13, bytetest_c6);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp24, carryQ.get_carry_in(2), tmp25));
        tmp26 = simd_and(tmp25, bytetest_bb_bb);
        struct_Lo.cc = simd_or(tmp26, struct_Lo.cc);
        tmp27 = simd_and(tmp20, tmp22);
        bytetest_c7 = simd_and(tmp3, tmp27);
        tmp28 = simd_andc(tmp7, tmp2);
        bytetest_80_83 = simd_andc(tmp28, tmp4);
        tmp29 = simd_and(tmp13, bytetest_c7);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp29, carryQ.get_carry_in(3), tmp30));
        tmp31 = simd_and(tmp30, bytetest_80_83);
        struct_Lo.cc = simd_or(tmp31, struct_Lo.cc);
        bytetest_ca = simd_and(tmp3, tmp11);
        tmp32 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp33 = simd_and(tmp7, tmp32);
        tmp34 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp35 = simd_andc(tmp20, tmp34);
        bytetest_94_94 = simd_and(tmp33, tmp35);
        tmp36 = simd_and(tmp13, bytetest_ca);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp36, carryQ.get_carry_in(4), tmp37));
        tmp38 = simd_and(tmp37, bytetest_94_94);
        struct_Lo.cc = simd_or(tmp38, struct_Lo.cc);
        tmp39 = simd_and(tmp1, tmp32);
        bytetest_d7 = simd_and(tmp39, tmp27);
        tmp40 = simd_or(basis_bits.bit_5, tmp22);
        tmp41 = simd_and(basis_bits.bit_4, tmp40);
        tmp42 = simd_or(basis_bits.bit_3, tmp41);
        tmp43 = simd_not(tmp42);
        tmp44 = simd_or(simd_and(basis_bits.bit_2, tmp43), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
        bytetest_90_aa = simd_and(tmp7, tmp44);
        tmp45 = simd_and(tmp13, bytetest_d7);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp45, carryQ.get_carry_in(5), tmp46));
        tmp47 = simd_and(tmp46, bytetest_90_aa);
        struct_Lo.cc = simd_or(tmp47, struct_Lo.cc);
        bytetest_d7 = simd_and(tmp39, tmp27);
        tmp48 = simd_andc(tmp18, tmp4);
        bytetest_b0_b2 = simd_andc(tmp48, tmp22);
        tmp49 = simd_and(tmp46, bytetest_b0_b2);
        struct_Lo.cc = simd_or(tmp49, struct_Lo.cc);
        tmp50 = simd_andc(tmp10, tmp34);
        bytetest_d8 = simd_and(tmp39, tmp50);
        bytetest_a0_bf = simd_and(tmp7, basis_bits.bit_2);
        tmp51 = simd_and(tmp13, bytetest_d8);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp51, carryQ.get_carry_in(6), tmp52));
        tmp53 = simd_and(tmp52, bytetest_a0_bf);
        struct_Lo.cc = simd_or(tmp53, struct_Lo.cc);
        tmp54 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp55 = simd_and(tmp10, tmp54);
        bytetest_d9 = simd_and(tmp39, tmp55);
        tmp56 = simd_not(tmp40);
        tmp57 = simd_or(basis_bits.bit_5, tmp34);
        tmp58 = simd_or(simd_and(basis_bits.bit_4, tmp56), simd_andc(tmp57, basis_bits.bit_4));
        bytetest_81_8a = simd_and(tmp28, tmp58);
        tmp59 = simd_and(tmp13, bytetest_d9);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp59, carryQ.get_carry_in(7), tmp60));
        tmp61 = simd_and(tmp60, bytetest_81_8a);
        struct_Lo.cc = simd_or(tmp61, struct_Lo.cc);
        bytetest_d9 = simd_and(tmp39, tmp55);
        tmp62 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp63 = simd_and(tmp62, basis_bits.bit_6);
        bytetest_ae_af = simd_and(tmp9, tmp63);
        tmp64 = simd_and(tmp60, bytetest_ae_af);
        struct_Lo.cc = simd_or(tmp64, struct_Lo.cc);
        bytetest_db = simd_and(tmp39, tmp23);
        tmp65 = simd_andc(tmp7, basis_bits.bit_2);
        tmp66 = simd_and(basis_bits.bit_3, tmp4);
        bytetest_80_93 = simd_andc(tmp65, tmp66);
        tmp67 = simd_and(tmp13, bytetest_db);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(tmp67, carryQ.get_carry_in(8), tmp68));
        tmp69 = simd_and(tmp68, bytetest_80_93);
        bytetest_da = simd_and(tmp39, tmp11);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp70 = simd_and(tmp13, bytetest_da);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(tmp70, carryQ.get_carry_in(9), tmp71));
        tmp72 = simd_and(tmp71, bytetest_80_bf);
        bytetest_d9 = simd_and(tmp39, tmp55);
        tmp73 = simd_and(bytetest_80_bf, tmp17);
        tmp74 = simd_or(basis_bits.bit_4, tmp57);
        bytetest_b1_bf = simd_and(tmp73, tmp74);
        tmp75 = simd_and(tmp60, bytetest_b1_bf);
        tmp76 = simd_or(tmp75, tmp72);
        tmp77 = simd_or(tmp76, tmp69);
        struct_Lo.cc = simd_or(tmp77, struct_Lo.cc);
        bytetest_db = simd_and(tmp39, tmp23);
        tmp78 = simd_and(bytetest_80_bf, tmp32);
        tmp79 = simd_and(tmp20, tmp54);
        bytetest_95_95 = simd_and(tmp78, tmp79);
        tmp80 = simd_and(tmp68, bytetest_95_95);
        struct_Lo.cc = simd_or(tmp80, struct_Lo.cc);
        bytetest_db = simd_and(tmp39, tmp23);
        tmp81 = simd_and(bytetest_80_bf, tmp8);
        bytetest_ae_af = simd_and(tmp81, tmp63);
        tmp82 = simd_and(tmp68, bytetest_ae_af);
        struct_Lo.cc = simd_or(tmp82, struct_Lo.cc);
        bytetest_db = simd_and(tmp39, tmp23);
        tmp83 = simd_and(tmp73, basis_bits.bit_4);
        tmp84 = simd_not(tmp34);
        tmp85 = simd_or(simd_and(basis_bits.bit_5, tmp84), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        bytetest_ba_bc = simd_and(tmp83, tmp85);
        tmp86 = simd_and(tmp68, bytetest_ba_bc);
        struct_Lo.cc = simd_or(tmp86, struct_Lo.cc);
        bytetest_db = simd_and(tmp39, tmp23);
        tmp87 = simd_and(tmp62, tmp22);
        bytetest_bf_bf = simd_and(tmp73, tmp87);
        tmp88 = simd_and(tmp68, bytetest_bf_bf);
        struct_Lo.cc = simd_or(tmp88, struct_Lo.cc);
        tmp89 = simd_andc(tmp62, tmp34);
        bytetest_dc = simd_and(tmp39, tmp89);
        tmp90 = simd_or(tmp4, tmp34);
        bytetest_90_90 = simd_andc(tmp78, tmp90);
        tmp91 = simd_and(tmp13, bytetest_dc);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(tmp91, carryQ.get_carry_in(10), tmp92));
        tmp93 = simd_and(tmp92, bytetest_90_90);
        struct_Lo.cc = simd_or(tmp93, struct_Lo.cc);
        bytetest_dc = simd_and(tmp39, tmp89);
        tmp94 = simd_not(basis_bits.bit_3);
        tmp95 = simd_or(tmp4, basis_bits.bit_6);
        tmp96 = simd_and(basis_bits.bit_3, tmp95);
        tmp97 = simd_or(simd_and(basis_bits.bit_2, tmp94), simd_andc(tmp96, basis_bits.bit_2));
        bytetest_92_af = simd_and(bytetest_80_bf, tmp97);
        tmp98 = simd_and(tmp92, bytetest_92_af);
        struct_Lo.cc = simd_or(tmp98, struct_Lo.cc);
        tmp99 = simd_and(tmp62, tmp5);
        bytetest_de = simd_and(tmp39, tmp99);
        tmp100 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp101 = simd_or(basis_bits.bit_4, tmp100);
        tmp102 = simd_or(basis_bits.bit_3, tmp101);
        tmp103 = simd_and(basis_bits.bit_2, tmp102);
        bytetest_80_a5 = simd_andc(bytetest_80_bf, tmp103);
        tmp104 = simd_and(tmp13, bytetest_de);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(tmp104, carryQ.get_carry_in(11), tmp105));
        tmp106 = simd_and(tmp105, bytetest_80_a5);
        tmp107 = simd_and(tmp62, tmp54);
        bytetest_dd = simd_and(tmp39, tmp107);
        tmp108 = simd_and(tmp62, tmp34);
        tmp109 = simd_or(basis_bits.bit_3, tmp108);
        tmp110 = simd_or(basis_bits.bit_2, tmp109);
        bytetest_8d_bf = simd_and(bytetest_80_bf, tmp110);
        tmp111 = simd_and(tmp13, bytetest_dd);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(tmp111, carryQ.get_carry_in(12), tmp112));
        tmp113 = simd_and(tmp112, bytetest_8d_bf);
        tmp114 = simd_or(tmp113, tmp106);
        struct_Lo.cc = simd_or(tmp114, struct_Lo.cc);
        bytetest_de = simd_and(tmp39, tmp99);
        tmp115 = simd_andc(tmp54, tmp4);
        bytetest_b1_b1 = simd_and(tmp73, tmp115);
        tmp116 = simd_and(tmp105, bytetest_b1_b1);
        struct_Lo.cc = simd_or(tmp116, struct_Lo.cc);
        bytetest_df = simd_and(tmp39, tmp87);
        tmp117 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
        tmp118 = simd_and(basis_bits.bit_4, tmp117);
        tmp119 = simd_or(basis_bits.bit_3, tmp118);
        tmp120 = simd_or(simd_and(basis_bits.bit_2, tmp43), simd_andc(tmp119, basis_bits.bit_2));
        bytetest_8a_aa = simd_and(bytetest_80_bf, tmp120);
        tmp121 = simd_and(tmp13, bytetest_df);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(tmp121, carryQ.get_carry_in(13), tmp122));
        tmp123 = simd_and(tmp122, bytetest_8a_aa);
        struct_Lo.cc = simd_or(tmp123, struct_Lo.cc);
        tmp124 = simd_and(tmp1, tmp8);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_a0 = simd_andc(tmp81, tmp90);
        tmp125 = simd_andc(bytetest_80_bf, basis_bits.bit_2);
        tmp126 = simd_and(basis_bits.bit_3, tmp101);
        bytetest_80_95 = simd_andc(tmp125, tmp126);
        tmp127 = simd_and(tmp13, bytetest_e0);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(tmp127, carryQ.get_carry_in(14), tmp128));
        tmp129 = simd_and(tmp128, bytetest_a0);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(tmp129, carryQ.get_carry_in(15), tmp130));
        tmp131 = simd_and(tmp130, bytetest_80_95);
        struct_Lo.cc = simd_or(tmp131, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_a1 = simd_and(tmp81, tmp115);
        tmp132 = simd_and(basis_bits.bit_4, tmp57);
        tmp133 = simd_and(basis_bits.bit_3, tmp132);
        bytetest_80_98 = simd_andc(tmp125, tmp133);
        tmp134 = simd_and(tmp128, bytetest_a1);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(tmp134, carryQ.get_carry_in(16), tmp135));
        tmp136 = simd_and(tmp135, bytetest_80_98);
        struct_Lo.cc = simd_or(tmp136, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_a2 = simd_and(tmp81, tmp6);
        bytetest_a0_a0 = simd_andc(tmp81, tmp90);
        tmp137 = simd_and(tmp128, bytetest_a2);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(tmp137, carryQ.get_carry_in(17), tmp138));
        tmp139 = simd_and(tmp138, bytetest_a0_a0);
        struct_Lo.cc = simd_or(tmp139, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_a2 = simd_and(tmp81, tmp6);
        tmp140 = simd_and(basis_bits.bit_5, tmp34);
        tmp141 = simd_not(tmp140);
        tmp142 = simd_or(simd_and(basis_bits.bit_4, tmp141), simd_andc(tmp117, basis_bits.bit_4));
        bytetest_a2_ac = simd_and(tmp81, tmp142);
        tmp143 = simd_and(tmp138, bytetest_a2_ac);
        struct_Lo.cc = simd_or(tmp143, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_a4 = simd_and(tmp81, tmp35);
        tmp144 = simd_and(basis_bits.bit_3, tmp118);
        tmp145 = simd_not(tmp144);
        tmp146 = simd_or(basis_bits.bit_3, tmp4);
        tmp147 = simd_or(simd_and(basis_bits.bit_2, tmp145), simd_andc(tmp146, basis_bits.bit_2));
        bytetest_84_b9 = simd_and(bytetest_80_bf, tmp147);
        tmp148 = simd_and(tmp128, bytetest_a4);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(tmp148, carryQ.get_carry_in(18), tmp149));
        tmp150 = simd_and(tmp149, bytetest_84_b9);
        struct_Lo.cc = simd_or(tmp150, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_a4 = simd_and(tmp81, tmp35);
        bytetest_bd_bd = simd_and(tmp73, tmp107);
        tmp151 = simd_and(tmp149, bytetest_bd_bd);
        struct_Lo.cc = simd_or(tmp151, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_a5 = simd_and(tmp81, tmp79);
        bytetest_90_90 = simd_andc(tmp78, tmp90);
        tmp152 = simd_and(tmp128, bytetest_a5);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(tmp152, carryQ.get_carry_in(19), tmp153));
        tmp154 = simd_and(tmp153, bytetest_90_90);
        struct_Lo.cc = simd_or(tmp154, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_a5 = simd_and(tmp81, tmp79);
        tmp155 = simd_or(basis_bits.bit_3, tmp95);
        tmp156 = simd_not(tmp155);
        tmp157 = simd_and(basis_bits.bit_3, basis_bits.bit_4);
        tmp158 = simd_or(simd_and(basis_bits.bit_2, tmp156), simd_andc(tmp157, basis_bits.bit_2));
        bytetest_98_a1 = simd_and(bytetest_80_bf, tmp158);
        tmp159 = simd_and(tmp153, bytetest_98_a1);
        struct_Lo.cc = simd_or(tmp159, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_a5 = simd_and(tmp81, tmp79);
        tmp160 = simd_andc(tmp73, basis_bits.bit_4);
        bytetest_b2_b7 = simd_and(tmp160, tmp117);
        tmp161 = simd_and(tmp153, bytetest_b2_b7);
        struct_Lo.cc = simd_or(tmp161, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_a5 = simd_and(tmp81, tmp79);
        bytetest_b9_bf = simd_and(tmp83, tmp57);
        tmp162 = simd_and(tmp153, bytetest_b9_bf);
        struct_Lo.cc = simd_or(tmp162, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_a6 = simd_and(tmp81, tmp21);
        tmp163 = simd_andc(bytetest_80_bf, tmp2);
        tmp164 = simd_or(simd_and(basis_bits.bit_4, tmp141), simd_andc(tmp140, basis_bits.bit_4));
        bytetest_85_8c = simd_and(tmp163, tmp164);
        tmp165 = simd_and(tmp128, bytetest_a6);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(tmp165, carryQ.get_carry_in(20), tmp166));
        tmp167 = simd_and(tmp166, bytetest_85_8c);
        struct_Lo.cc = simd_or(tmp167, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_a6 = simd_and(tmp81, tmp21);
        tmp168 = simd_not(tmp90);
        tmp169 = simd_or(simd_and(basis_bits.bit_3, tmp168), simd_andc(tmp87, basis_bits.bit_3));
        bytetest_8f_90 = simd_and(tmp125, tmp169);
        tmp170 = simd_and(tmp166, bytetest_8f_90);
        struct_Lo.cc = simd_or(tmp170, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_a6 = simd_and(tmp81, tmp21);
        tmp171 = simd_or(basis_bits.bit_3, tmp132);
        tmp172 = simd_not(tmp171);
        tmp173 = simd_or(tmp4, tmp22);
        tmp174 = simd_and(basis_bits.bit_3, tmp173);
        tmp175 = simd_or(simd_and(basis_bits.bit_2, tmp172), simd_andc(tmp174, basis_bits.bit_2));
        bytetest_93_a8 = simd_and(bytetest_80_bf, tmp175);
        tmp176 = simd_and(tmp166, bytetest_93_a8);
        struct_Lo.cc = simd_or(tmp176, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_a6 = simd_and(tmp81, tmp21);
        tmp177 = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp178 = simd_or(simd_and(basis_bits.bit_3, tmp168), simd_andc(tmp118, basis_bits.bit_3));
        bytetest_aa_b0 = simd_and(tmp177, tmp178);
        tmp179 = simd_and(tmp166, bytetest_aa_b0);
        struct_Lo.cc = simd_or(tmp179, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_a6 = simd_and(tmp81, tmp21);
        bytetest_b2_b2 = simd_and(tmp73, tmp6);
        tmp180 = simd_and(tmp166, bytetest_b2_b2);
        struct_Lo.cc = simd_or(tmp180, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_a6 = simd_and(tmp81, tmp21);
        tmp181 = simd_not(tmp117);
        tmp182 = simd_or(simd_and(basis_bits.bit_4, tmp181), simd_andc(tmp100, basis_bits.bit_4));
        bytetest_b6_b9 = simd_and(tmp73, tmp182);
        tmp183 = simd_and(tmp166, bytetest_b6_b9);
        struct_Lo.cc = simd_or(tmp183, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_a6 = simd_and(tmp81, tmp21);
        bytetest_bd_bd = simd_and(tmp73, tmp107);
        tmp184 = simd_and(tmp166, bytetest_bd_bd);
        struct_Lo.cc = simd_or(tmp184, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_a7 = simd_and(tmp81, tmp27);
        bytetest_8e_8e = simd_and(tmp163, tmp99);
        tmp185 = simd_and(tmp128, bytetest_a7);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(tmp185, carryQ.get_carry_in(21), tmp186));
        tmp187 = simd_and(tmp186, bytetest_8e_8e);
        struct_Lo.cc = simd_or(tmp187, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_a7 = simd_and(tmp81, tmp27);
        tmp188 = simd_andc(tmp62, basis_bits.bit_6);
        bytetest_9c_9d = simd_and(tmp78, tmp188);
        tmp189 = simd_and(tmp186, bytetest_9c_9d);
        struct_Lo.cc = simd_or(tmp189, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_a7 = simd_and(tmp81, tmp27);
        tmp190 = simd_and(basis_bits.bit_3, tmp87);
        tmp191 = simd_or(simd_and(basis_bits.bit_2, tmp156), simd_andc(tmp190, basis_bits.bit_2));
        bytetest_9f_a1 = simd_and(bytetest_80_bf, tmp191);
        tmp192 = simd_and(tmp186, bytetest_9f_a1);
        struct_Lo.cc = simd_or(tmp192, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_a7 = simd_and(tmp81, tmp27);
        bytetest_b0_b1 = simd_andc(tmp73, tmp95);
        tmp193 = simd_and(tmp186, bytetest_b0_b1);
        struct_Lo.cc = simd_or(tmp193, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_a8 = simd_and(tmp81, tmp50);
        tmp194 = simd_or(simd_and(basis_bits.bit_4, tmp56), simd_andc(tmp140, basis_bits.bit_4));
        bytetest_85_8a = simd_and(tmp163, tmp194);
        tmp195 = simd_and(tmp128, bytetest_a8);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(tmp195, carryQ.get_carry_in(22), tmp196));
        tmp197 = simd_and(tmp196, bytetest_85_8a);
        struct_Lo.cc = simd_or(tmp197, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_a8 = simd_and(tmp81, tmp50);
        bytetest_8f_90 = simd_and(tmp125, tmp169);
        tmp198 = simd_and(tmp196, bytetest_8f_90);
        struct_Lo.cc = simd_or(tmp198, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_a8 = simd_and(tmp81, tmp50);
        bytetest_93_a8 = simd_and(bytetest_80_bf, tmp175);
        tmp199 = simd_and(tmp196, bytetest_93_a8);
        struct_Lo.cc = simd_or(tmp199, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_a8 = simd_and(tmp81, tmp50);
        bytetest_aa_b0 = simd_and(tmp177, tmp178);
        tmp200 = simd_and(tmp196, bytetest_aa_b0);
        struct_Lo.cc = simd_or(tmp200, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_a8 = simd_and(tmp81, tmp50);
        tmp201 = simd_andc(basis_bits.bit_6, tmp4);
        bytetest_b2_b3 = simd_and(tmp73, tmp201);
        tmp202 = simd_and(tmp196, bytetest_b2_b3);
        struct_Lo.cc = simd_or(tmp202, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_a8 = simd_and(tmp81, tmp50);
        tmp203 = simd_and(tmp73, tmp20);
        tmp204 = simd_not(basis_bits.bit_7);
        tmp205 = simd_or(simd_and(basis_bits.bit_6, tmp204), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
        bytetest_b5_b6 = simd_and(tmp203, tmp205);
        tmp206 = simd_and(tmp196, bytetest_b5_b6);
        struct_Lo.cc = simd_or(tmp206, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_a8 = simd_and(tmp81, tmp50);
        tmp207 = simd_andc(tmp10, basis_bits.bit_6);
        bytetest_b8_b9 = simd_and(tmp73, tmp207);
        tmp208 = simd_and(tmp196, bytetest_b8_b9);
        struct_Lo.cc = simd_or(tmp208, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_a9 = simd_and(tmp81, tmp55);
        tmp209 = simd_and(tmp78, basis_bits.bit_4);
        tmp210 = simd_or(simd_and(basis_bits.bit_5, tmp84), simd_andc(tmp34, basis_bits.bit_5));
        bytetest_99_9c = simd_and(tmp209, tmp210);
        tmp211 = simd_and(tmp128, bytetest_a9);
        carryQ.cq[23] = carryout2carry(pablo_blk_Advance(tmp211, carryQ.get_carry_in(23), tmp212));
        tmp213 = simd_and(tmp212, bytetest_99_9c);
        struct_Lo.cc = simd_or(tmp213, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_a9 = simd_and(tmp81, tmp55);
        bytetest_9e_9e = simd_and(tmp78, tmp99);
        tmp214 = simd_and(tmp212, bytetest_9e_9e);
        struct_Lo.cc = simd_or(tmp214, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_a9 = simd_and(tmp81, tmp55);
        bytetest_b2_b4 = simd_and(tmp160, tmp85);
        tmp215 = simd_and(tmp212, bytetest_b2_b4);
        struct_Lo.cc = simd_or(tmp215, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_aa = simd_and(tmp81, tmp11);
        tmp216 = simd_not(tmp100);
        tmp217 = simd_or(simd_and(basis_bits.bit_4, tmp216), simd_andc(tmp140, basis_bits.bit_4));
        bytetest_85_8d = simd_and(tmp163, tmp217);
        tmp218 = simd_and(tmp128, bytetest_aa);
        carryQ.cq[24] = carryout2carry(pablo_blk_Advance(tmp218, carryQ.get_carry_in(24), tmp219));
        tmp220 = simd_and(tmp219, bytetest_85_8d);
        struct_Lo.cc = simd_or(tmp220, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_aa = simd_and(tmp81, tmp11);
        tmp221 = simd_not(tmp95);
        tmp222 = simd_or(simd_and(basis_bits.bit_3, tmp221), simd_andc(tmp87, basis_bits.bit_3));
        bytetest_8f_91 = simd_and(tmp125, tmp222);
        tmp223 = simd_and(tmp219, bytetest_8f_91);
        struct_Lo.cc = simd_or(tmp223, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_aa = simd_and(tmp81, tmp11);
        bytetest_93_a8 = simd_and(bytetest_80_bf, tmp175);
        tmp224 = simd_and(tmp219, bytetest_93_a8);
        struct_Lo.cc = simd_or(tmp224, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_aa = simd_and(tmp81, tmp11);
        bytetest_aa_b0 = simd_and(tmp177, tmp178);
        tmp225 = simd_and(tmp219, bytetest_aa_b0);
        struct_Lo.cc = simd_or(tmp225, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_aa = simd_and(tmp81, tmp11);
        bytetest_b2_b3 = simd_and(tmp73, tmp201);
        tmp226 = simd_and(tmp219, bytetest_b2_b3);
        struct_Lo.cc = simd_or(tmp226, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_aa = simd_and(tmp81, tmp11);
        tmp227 = simd_or(simd_and(basis_bits.bit_4, tmp181), simd_andc(tmp140, basis_bits.bit_4));
        bytetest_b5_b9 = simd_and(tmp73, tmp227);
        tmp228 = simd_and(tmp219, bytetest_b5_b9);
        struct_Lo.cc = simd_or(tmp228, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_aa = simd_and(tmp81, tmp11);
        bytetest_bd_bd = simd_and(tmp73, tmp107);
        tmp229 = simd_and(tmp219, bytetest_bd_bd);
        struct_Lo.cc = simd_or(tmp229, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ab = simd_and(tmp81, tmp23);
        bytetest_90_90 = simd_andc(tmp78, tmp90);
        tmp230 = simd_and(tmp128, bytetest_ab);
        carryQ.cq[25] = carryout2carry(pablo_blk_Advance(tmp230, carryQ.get_carry_in(25), tmp231));
        tmp232 = simd_and(tmp231, bytetest_90_90);
        struct_Lo.cc = simd_or(tmp232, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ab = simd_and(tmp81, tmp23);
        bytetest_a0_a1 = simd_andc(tmp81, tmp95);
        tmp233 = simd_and(tmp231, bytetest_a0_a1);
        struct_Lo.cc = simd_or(tmp233, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ac = simd_and(tmp81, tmp89);
        bytetest_85_8c = simd_and(tmp163, tmp164);
        tmp234 = simd_and(tmp128, bytetest_ac);
        carryQ.cq[26] = carryout2carry(pablo_blk_Advance(tmp234, carryQ.get_carry_in(26), tmp235));
        tmp236 = simd_and(tmp235, bytetest_85_8c);
        struct_Lo.cc = simd_or(tmp236, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ac = simd_and(tmp81, tmp89);
        bytetest_8f_90 = simd_and(tmp125, tmp169);
        tmp237 = simd_and(tmp235, bytetest_8f_90);
        struct_Lo.cc = simd_or(tmp237, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ac = simd_and(tmp81, tmp89);
        bytetest_93_a8 = simd_and(bytetest_80_bf, tmp175);
        tmp238 = simd_and(tmp235, bytetest_93_a8);
        struct_Lo.cc = simd_or(tmp238, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ac = simd_and(tmp81, tmp89);
        bytetest_aa_b0 = simd_and(tmp177, tmp178);
        tmp239 = simd_and(tmp235, bytetest_aa_b0);
        struct_Lo.cc = simd_or(tmp239, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ac = simd_and(tmp81, tmp89);
        bytetest_b2_b3 = simd_and(tmp73, tmp201);
        tmp240 = simd_and(tmp235, bytetest_b2_b3);
        struct_Lo.cc = simd_or(tmp240, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ac = simd_and(tmp81, tmp89);
        bytetest_b5_b9 = simd_and(tmp73, tmp227);
        tmp241 = simd_and(tmp235, bytetest_b5_b9);
        struct_Lo.cc = simd_or(tmp241, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ac = simd_and(tmp81, tmp89);
        bytetest_bd_bd = simd_and(tmp73, tmp107);
        tmp242 = simd_and(tmp235, bytetest_bd_bd);
        struct_Lo.cc = simd_or(tmp242, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ad = simd_and(tmp81, tmp107);
        bytetest_9c_9d = simd_and(tmp78, tmp188);
        tmp243 = simd_and(tmp128, bytetest_ad);
        carryQ.cq[27] = carryout2carry(pablo_blk_Advance(tmp243, carryQ.get_carry_in(27), tmp244));
        tmp245 = simd_and(tmp244, bytetest_9c_9d);
        struct_Lo.cc = simd_or(tmp245, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ad = simd_and(tmp81, tmp107);
        bytetest_9f_a1 = simd_and(bytetest_80_bf, tmp191);
        tmp246 = simd_and(tmp244, bytetest_9f_a1);
        struct_Lo.cc = simd_or(tmp246, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ad = simd_and(tmp81, tmp107);
        bytetest_b1_b1 = simd_and(tmp73, tmp115);
        tmp247 = simd_and(tmp244, bytetest_b1_b1);
        struct_Lo.cc = simd_or(tmp247, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ae = simd_and(tmp81, tmp99);
        tmp248 = simd_andc(tmp22, tmp4);
        bytetest_83_83 = simd_and(tmp163, tmp248);
        tmp249 = simd_and(tmp128, bytetest_ae);
        carryQ.cq[28] = carryout2carry(pablo_blk_Advance(tmp249, carryQ.get_carry_in(28), tmp250));
        tmp251 = simd_and(tmp250, bytetest_83_83);
        struct_Lo.cc = simd_or(tmp251, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ae = simd_and(tmp81, tmp99);
        bytetest_85_8a = simd_and(tmp163, tmp194);
        tmp252 = simd_and(tmp250, bytetest_85_8a);
        struct_Lo.cc = simd_or(tmp252, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ae = simd_and(tmp81, tmp99);
        tmp253 = simd_or(simd_and(basis_bits.bit_3, tmp168), simd_andc(tmp63, basis_bits.bit_3));
        bytetest_8e_90 = simd_and(tmp125, tmp253);
        tmp254 = simd_and(tmp250, bytetest_8e_90);
        struct_Lo.cc = simd_or(tmp254, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ae = simd_and(tmp81, tmp99);
        tmp255 = simd_andc(tmp78, basis_bits.bit_4);
        tmp256 = simd_not(basis_bits.bit_6);
        tmp257 = simd_or(simd_and(basis_bits.bit_5, tmp256), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        bytetest_92_95 = simd_and(tmp255, tmp257);
        tmp258 = simd_and(tmp250, bytetest_92_95);
        struct_Lo.cc = simd_or(tmp258, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ae = simd_and(tmp81, tmp99);
        tmp259 = simd_and(tmp78, tmp10);
        bytetest_99_9a = simd_and(tmp259, tmp205);
        tmp260 = simd_and(tmp250, bytetest_99_9a);
        struct_Lo.cc = simd_or(tmp260, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ae = simd_and(tmp81, tmp99);
        bytetest_9c_9c = simd_and(tmp78, tmp89);
        tmp261 = simd_and(tmp250, bytetest_9c_9c);
        struct_Lo.cc = simd_or(tmp261, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ae = simd_and(tmp81, tmp99);
        bytetest_9e_9f = simd_and(tmp78, tmp63);
        tmp262 = simd_and(tmp250, bytetest_9e_9f);
        struct_Lo.cc = simd_or(tmp262, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ae = simd_and(tmp81, tmp99);
        tmp263 = simd_andc(tmp81, basis_bits.bit_4);
        tmp264 = simd_or(simd_and(basis_bits.bit_5, tmp84), simd_andc(tmp22, basis_bits.bit_5));
        bytetest_a3_a4 = simd_and(tmp263, tmp264);
        tmp265 = simd_and(tmp250, bytetest_a3_a4);
        struct_Lo.cc = simd_or(tmp265, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ae = simd_and(tmp81, tmp99);
        tmp266 = simd_and(tmp81, tmp10);
        bytetest_a8_aa = simd_andc(tmp266, tmp22);
        tmp267 = simd_and(tmp250, bytetest_a8_aa);
        struct_Lo.cc = simd_or(tmp267, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ae = simd_and(tmp81, tmp99);
        tmp268 = simd_not(tmp118);
        tmp269 = simd_or(simd_and(basis_bits.bit_3, tmp268), simd_andc(tmp63, basis_bits.bit_3));
        bytetest_ae_b9 = simd_and(tmp177, tmp269);
        tmp270 = simd_and(tmp250, bytetest_ae_b9);
        struct_Lo.cc = simd_or(tmp270, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_af = simd_and(tmp81, tmp87);
        bytetest_90_90 = simd_andc(tmp78, tmp90);
        tmp271 = simd_and(tmp128, bytetest_af);
        carryQ.cq[29] = carryout2carry(pablo_blk_Advance(tmp271, carryQ.get_carry_in(29), tmp272));
        tmp273 = simd_and(tmp272, bytetest_90_90);
        struct_Lo.cc = simd_or(tmp273, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_b0 = simd_andc(tmp73, tmp90);
        bytetest_85_8c = simd_and(tmp163, tmp164);
        tmp274 = simd_and(tmp128, bytetest_b0);
        carryQ.cq[30] = carryout2carry(pablo_blk_Advance(tmp274, carryQ.get_carry_in(30), tmp275));
        tmp276 = simd_and(tmp275, bytetest_85_8c);
        struct_Lo.cc = simd_or(tmp276, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_b0 = simd_andc(tmp73, tmp90);
        bytetest_8e_90 = simd_and(tmp125, tmp253);
        tmp277 = simd_and(tmp275, bytetest_8e_90);
        struct_Lo.cc = simd_or(tmp277, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_b0 = simd_andc(tmp73, tmp90);
        tmp278 = simd_or(simd_and(basis_bits.bit_2, tmp172), simd_andc(tmp96, basis_bits.bit_2));
        bytetest_92_a8 = simd_and(bytetest_80_bf, tmp278);
        tmp279 = simd_and(tmp275, bytetest_92_a8);
        struct_Lo.cc = simd_or(tmp279, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_b0 = simd_andc(tmp73, tmp90);
        tmp280 = simd_not(tmp4);
        tmp281 = simd_or(simd_and(basis_bits.bit_3, tmp280), simd_andc(tmp118, basis_bits.bit_3));
        bytetest_aa_b3 = simd_and(tmp177, tmp281);
        tmp282 = simd_and(tmp275, bytetest_aa_b3);
        struct_Lo.cc = simd_or(tmp282, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_b0 = simd_andc(tmp73, tmp90);
        bytetest_b5_b9 = simd_and(tmp73, tmp227);
        tmp283 = simd_and(tmp275, bytetest_b5_b9);
        struct_Lo.cc = simd_or(tmp283, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_b0 = simd_andc(tmp73, tmp90);
        bytetest_bd_bd = simd_and(tmp73, tmp107);
        tmp284 = simd_and(tmp275, bytetest_bd_bd);
        struct_Lo.cc = simd_or(tmp284, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_b1 = simd_and(tmp73, tmp115);
        bytetest_98_99 = simd_and(tmp78, tmp207);
        tmp285 = simd_and(tmp128, bytetest_b1);
        carryQ.cq[31] = carryout2carry(pablo_blk_Advance(tmp285, carryQ.get_carry_in(31), tmp286));
        tmp287 = simd_and(tmp286, bytetest_98_99);
        struct_Lo.cc = simd_or(tmp287, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_b1 = simd_and(tmp73, tmp115);
        bytetest_a0_a1 = simd_andc(tmp81, tmp95);
        tmp288 = simd_and(tmp286, bytetest_a0_a1);
        struct_Lo.cc = simd_or(tmp288, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_b2 = simd_and(tmp73, tmp6);
        bytetest_85_8c = simd_and(tmp163, tmp164);
        tmp289 = simd_and(tmp128, bytetest_b2);
        carryQ.cq[32] = carryout2carry(pablo_blk_Advance(tmp289, carryQ.get_carry_in(32), tmp290));
        tmp291 = simd_and(tmp290, bytetest_85_8c);
        struct_Lo.cc = simd_or(tmp291, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_b2 = simd_and(tmp73, tmp6);
        bytetest_8e_90 = simd_and(tmp125, tmp253);
        tmp292 = simd_and(tmp290, bytetest_8e_90);
        struct_Lo.cc = simd_or(tmp292, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_b2 = simd_and(tmp73, tmp6);
        bytetest_92_a8 = simd_and(bytetest_80_bf, tmp278);
        tmp293 = simd_and(tmp290, bytetest_92_a8);
        struct_Lo.cc = simd_or(tmp293, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_b2 = simd_and(tmp73, tmp6);
        bytetest_aa_b3 = simd_and(tmp177, tmp281);
        tmp294 = simd_and(tmp290, bytetest_aa_b3);
        struct_Lo.cc = simd_or(tmp294, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_b2 = simd_and(tmp73, tmp6);
        bytetest_b5_b9 = simd_and(tmp73, tmp227);
        tmp295 = simd_and(tmp290, bytetest_b5_b9);
        struct_Lo.cc = simd_or(tmp295, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_b2 = simd_and(tmp73, tmp6);
        bytetest_bd_bd = simd_and(tmp73, tmp107);
        tmp296 = simd_and(tmp290, bytetest_bd_bd);
        struct_Lo.cc = simd_or(tmp296, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_b3 = simd_and(tmp73, tmp248);
        bytetest_9e_9e = simd_and(tmp78, tmp99);
        tmp297 = simd_and(tmp128, bytetest_b3);
        carryQ.cq[33] = carryout2carry(pablo_blk_Advance(tmp297, carryQ.get_carry_in(33), tmp298));
        tmp299 = simd_and(tmp298, bytetest_9e_9e);
        struct_Lo.cc = simd_or(tmp299, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_b3 = simd_and(tmp73, tmp248);
        bytetest_a0_a1 = simd_andc(tmp81, tmp95);
        tmp300 = simd_and(tmp298, bytetest_a0_a1);
        struct_Lo.cc = simd_or(tmp300, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_b3 = simd_and(tmp73, tmp248);
        tmp301 = simd_andc(tmp73, tmp4);
        bytetest_b1_b2 = simd_and(tmp301, tmp205);
        tmp302 = simd_and(tmp298, bytetest_b1_b2);
        struct_Lo.cc = simd_or(tmp302, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_b4 = simd_and(tmp73, tmp35);
        bytetest_85_8c = simd_and(tmp163, tmp164);
        tmp303 = simd_and(tmp128, bytetest_b4);
        carryQ.cq[34] = carryout2carry(pablo_blk_Advance(tmp303, carryQ.get_carry_in(34), tmp304));
        tmp305 = simd_and(tmp304, bytetest_85_8c);
        struct_Lo.cc = simd_or(tmp305, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_b4 = simd_and(tmp73, tmp35);
        bytetest_8e_90 = simd_and(tmp125, tmp253);
        tmp306 = simd_and(tmp304, bytetest_8e_90);
        struct_Lo.cc = simd_or(tmp306, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_b4 = simd_and(tmp73, tmp35);
        tmp307 = simd_and(basis_bits.bit_3, tmp41);
        tmp308 = simd_not(tmp307);
        tmp309 = simd_or(simd_and(basis_bits.bit_2, tmp308), simd_andc(tmp96, basis_bits.bit_2));
        bytetest_92_ba = simd_and(bytetest_80_bf, tmp309);
        tmp310 = simd_and(tmp304, bytetest_92_ba);
        struct_Lo.cc = simd_or(tmp310, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_b4 = simd_and(tmp73, tmp35);
        bytetest_bd_bd = simd_and(tmp73, tmp107);
        tmp311 = simd_and(tmp304, bytetest_bd_bd);
        struct_Lo.cc = simd_or(tmp311, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_b5 = simd_and(tmp73, tmp79);
        bytetest_8e_8e = simd_and(tmp163, tmp99);
        tmp312 = simd_and(tmp128, bytetest_b5);
        carryQ.cq[35] = carryout2carry(pablo_blk_Advance(tmp312, carryQ.get_carry_in(35), tmp313));
        tmp314 = simd_and(tmp313, bytetest_8e_8e);
        struct_Lo.cc = simd_or(tmp314, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_b5 = simd_and(tmp73, tmp79);
        bytetest_a0_a1 = simd_andc(tmp81, tmp95);
        tmp315 = simd_and(tmp313, bytetest_a0_a1);
        struct_Lo.cc = simd_or(tmp315, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_b5 = simd_and(tmp73, tmp79);
        bytetest_ba_bf = simd_and(tmp83, tmp117);
        tmp316 = simd_and(tmp313, bytetest_ba_bf);
        struct_Lo.cc = simd_or(tmp316, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_b6 = simd_and(tmp73, tmp21);
        tmp317 = simd_and(basis_bits.bit_5, tmp22);
        tmp318 = simd_or(basis_bits.bit_4, tmp317);
        tmp319 = simd_not(tmp318);
        tmp320 = simd_or(basis_bits.bit_4, tmp140);
        tmp321 = simd_or(simd_and(basis_bits.bit_3, tmp319), simd_andc(tmp320, basis_bits.bit_3));
        bytetest_85_96 = simd_and(tmp125, tmp321);
        tmp322 = simd_and(tmp128, bytetest_b6);
        carryQ.cq[36] = carryout2carry(pablo_blk_Advance(tmp322, carryQ.get_carry_in(36), tmp323));
        tmp324 = simd_and(tmp323, bytetest_85_96);
        struct_Lo.cc = simd_or(tmp324, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_b6 = simd_and(tmp73, tmp21);
        tmp325 = simd_not(tmp96);
        tmp326 = simd_or(simd_and(basis_bits.bit_2, tmp325), simd_andc(tmp144, basis_bits.bit_2));
        bytetest_9a_b1 = simd_and(bytetest_80_bf, tmp326);
        tmp327 = simd_and(tmp323, bytetest_9a_b1);
        struct_Lo.cc = simd_or(tmp327, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_b6 = simd_and(tmp73, tmp21);
        tmp328 = simd_not(basis_bits.bit_5);
        tmp329 = simd_or(simd_and(basis_bits.bit_4, tmp328), simd_andc(tmp40, basis_bits.bit_4));
        bytetest_b3_bb = simd_and(tmp73, tmp329);
        tmp330 = simd_and(tmp323, bytetest_b3_bb);
        struct_Lo.cc = simd_or(tmp330, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_b6 = simd_and(tmp73, tmp21);
        bytetest_bd_bd = simd_and(tmp73, tmp107);
        tmp331 = simd_and(tmp323, bytetest_bd_bd);
        struct_Lo.cc = simd_or(tmp331, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_b7 = simd_and(tmp73, tmp27);
        tmp332 = simd_andc(tmp163, basis_bits.bit_4);
        bytetest_80_86 = simd_andc(tmp332, tmp317);
        tmp333 = simd_and(tmp128, bytetest_b7);
        carryQ.cq[37] = carryout2carry(pablo_blk_Advance(tmp333, carryQ.get_carry_in(37), tmp334));
        tmp335 = simd_and(tmp334, bytetest_80_86);
        struct_Lo.cc = simd_or(tmp335, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_b8 = simd_and(tmp73, tmp50);
        tmp336 = simd_and(basis_bits.bit_3, tmp90);
        tmp337 = simd_not(tmp336);
        tmp338 = simd_or(basis_bits.bit_3, tmp90);
        tmp339 = simd_or(simd_and(basis_bits.bit_2, tmp337), simd_andc(tmp338, basis_bits.bit_2));
        bytetest_81_b0 = simd_and(bytetest_80_bf, tmp339);
        tmp340 = simd_and(tmp128, bytetest_b8);
        carryQ.cq[38] = carryout2carry(pablo_blk_Advance(tmp340, carryQ.get_carry_in(38), tmp341));
        tmp342 = simd_and(tmp341, bytetest_81_b0);
        struct_Lo.cc = simd_or(tmp342, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_b8 = simd_and(tmp73, tmp50);
        bytetest_b2_b3 = simd_and(tmp73, tmp201);
        tmp343 = simd_and(tmp341, bytetest_b2_b3);
        struct_Lo.cc = simd_or(tmp343, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_b9 = simd_and(tmp73, tmp55);
        bytetest_80_85 = simd_andc(tmp332, tmp100);
        tmp344 = simd_and(tmp128, bytetest_b9);
        carryQ.cq[39] = carryout2carry(pablo_blk_Advance(tmp344, carryQ.get_carry_in(39), tmp345));
        tmp346 = simd_and(tmp345, bytetest_80_85);
        struct_Lo.cc = simd_or(tmp346, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ba = simd_and(tmp73, tmp11);
        tmp347 = simd_andc(tmp163, tmp4);
        bytetest_81_82 = simd_and(tmp347, tmp205);
        tmp348 = simd_and(tmp128, bytetest_ba);
        carryQ.cq[40] = carryout2carry(pablo_blk_Advance(tmp348, carryQ.get_carry_in(40), tmp349));
        tmp350 = simd_and(tmp349, bytetest_81_82);
        struct_Lo.cc = simd_or(tmp350, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ba = simd_and(tmp73, tmp11);
        bytetest_84_84 = simd_and(tmp163, tmp35);
        tmp351 = simd_and(tmp349, bytetest_84_84);
        struct_Lo.cc = simd_or(tmp351, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ba = simd_and(tmp73, tmp11);
        tmp352 = simd_not(tmp57);
        tmp353 = simd_or(simd_and(basis_bits.bit_4, tmp352), simd_andc(tmp317, basis_bits.bit_4));
        bytetest_87_88 = simd_and(tmp163, tmp353);
        tmp354 = simd_and(tmp349, bytetest_87_88);
        struct_Lo.cc = simd_or(tmp354, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ba = simd_and(tmp73, tmp11);
        bytetest_8a_8a = simd_and(tmp163, tmp11);
        tmp355 = simd_and(tmp349, bytetest_8a_8a);
        struct_Lo.cc = simd_or(tmp355, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ba = simd_and(tmp73, tmp11);
        bytetest_8d_8d = simd_and(tmp163, tmp107);
        tmp356 = simd_and(tmp349, bytetest_8d_8d);
        struct_Lo.cc = simd_or(tmp356, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ba = simd_and(tmp73, tmp11);
        bytetest_94_97 = simd_and(tmp78, tmp20);
        tmp357 = simd_and(tmp349, bytetest_94_97);
        struct_Lo.cc = simd_or(tmp357, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ba = simd_and(tmp73, tmp11);
        bytetest_99_9f = simd_and(tmp209, tmp57);
        tmp358 = simd_and(tmp349, bytetest_99_9f);
        struct_Lo.cc = simd_or(tmp358, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ba = simd_and(tmp73, tmp11);
        tmp359 = simd_andc(tmp81, tmp4);
        bytetest_a1_a3 = simd_and(tmp359, tmp34);
        tmp360 = simd_and(tmp349, bytetest_a1_a3);
        struct_Lo.cc = simd_or(tmp360, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ba = simd_and(tmp73, tmp11);
        bytetest_a5_a5 = simd_and(tmp81, tmp79);
        tmp361 = simd_and(tmp349, bytetest_a5_a5);
        struct_Lo.cc = simd_or(tmp361, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ba = simd_and(tmp73, tmp11);
        bytetest_a7_a7 = simd_and(tmp81, tmp27);
        tmp362 = simd_and(tmp349, bytetest_a7_a7);
        struct_Lo.cc = simd_or(tmp362, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ba = simd_and(tmp73, tmp11);
        tmp363 = simd_and(tmp10, basis_bits.bit_6);
        bytetest_aa_ab = simd_and(tmp81, tmp363);
        tmp364 = simd_and(tmp349, bytetest_aa_ab);
        struct_Lo.cc = simd_or(tmp364, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ba = simd_and(tmp73, tmp11);
        tmp365 = simd_or(simd_and(basis_bits.bit_3, tmp168), simd_andc(tmp108, basis_bits.bit_3));
        bytetest_ad_b0 = simd_and(tmp177, tmp365);
        tmp366 = simd_and(tmp349, bytetest_ad_b0);
        struct_Lo.cc = simd_or(tmp366, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ba = simd_and(tmp73, tmp11);
        bytetest_b2_b3 = simd_and(tmp73, tmp201);
        tmp367 = simd_and(tmp349, bytetest_b2_b3);
        struct_Lo.cc = simd_or(tmp367, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ba = simd_and(tmp73, tmp11);
        bytetest_bd_bd = simd_and(tmp73, tmp107);
        tmp368 = simd_and(tmp349, bytetest_bd_bd);
        struct_Lo.cc = simd_or(tmp368, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_bb = simd_and(tmp73, tmp23);
        bytetest_80_84 = simd_andc(tmp332, tmp140);
        tmp369 = simd_and(tmp128, bytetest_bb);
        carryQ.cq[41] = carryout2carry(pablo_blk_Advance(tmp369, carryQ.get_carry_in(41), tmp370));
        tmp371 = simd_and(tmp370, bytetest_80_84);
        struct_Lo.cc = simd_or(tmp371, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_bb = simd_and(tmp73, tmp23);
        bytetest_9c_9f = simd_and(tmp78, tmp62);
        tmp372 = simd_and(tmp370, bytetest_9c_9f);
        struct_Lo.cc = simd_or(tmp372, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_bc = simd_and(tmp73, tmp89);
        bytetest_80_80 = simd_andc(tmp163, tmp90);
        tmp373 = simd_and(tmp128, bytetest_bc);
        carryQ.cq[42] = carryout2carry(pablo_blk_Advance(tmp373, carryQ.get_carry_in(42), tmp374));
        tmp375 = simd_and(tmp374, bytetest_80_80);
        struct_Lo.cc = simd_or(tmp375, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_bd = simd_and(tmp73, tmp107);
        bytetest_80_87 = simd_andc(tmp163, basis_bits.bit_4);
        tmp376 = simd_and(tmp128, bytetest_bd);
        carryQ.cq[43] = carryout2carry(pablo_blk_Advance(tmp376, carryQ.get_carry_in(43), tmp377));
        tmp378 = simd_and(tmp377, bytetest_80_87);
        struct_Lo.cc = simd_or(tmp378, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_bd = simd_and(tmp73, tmp107);
        tmp379 = simd_not(tmp109);
        tmp380 = simd_or(simd_and(basis_bits.bit_2, tmp379), simd_andc(tmp171, basis_bits.bit_2));
        bytetest_89_ac = simd_and(bytetest_80_bf, tmp380);
        tmp381 = simd_and(tmp377, bytetest_89_ac);
        struct_Lo.cc = simd_or(tmp381, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_be = simd_and(tmp73, tmp99);
        tmp382 = simd_and(tmp163, basis_bits.bit_4);
        bytetest_88_8c = simd_andc(tmp382, tmp140);
        tmp383 = simd_and(tmp128, bytetest_be);
        carryQ.cq[44] = carryout2carry(pablo_blk_Advance(tmp383, carryQ.get_carry_in(44), tmp384));
        tmp385 = simd_and(tmp384, bytetest_88_8c);
        struct_Lo.cc = simd_or(tmp385, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_80 = simd_andc(tmp163, tmp90);
        tmp386 = simd_and(basis_bits.bit_2, tmp42);
        bytetest_80_aa = simd_andc(bytetest_80_bf, tmp386);
        tmp387 = simd_and(tmp13, bytetest_e1);
        carryQ.cq[45] = carryout2carry(pablo_blk_Advance(tmp387, carryQ.get_carry_in(45), tmp388));
        tmp389 = simd_and(tmp388, bytetest_80);
        carryQ.cq[46] = carryout2carry(pablo_blk_Advance(tmp389, carryQ.get_carry_in(46), tmp390));
        tmp391 = simd_and(tmp390, bytetest_80_aa);
        struct_Lo.cc = simd_or(tmp391, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_80 = simd_andc(tmp163, tmp90);
        bytetest_bf_bf = simd_and(tmp73, tmp87);
        tmp392 = simd_and(tmp390, bytetest_bf_bf);
        struct_Lo.cc = simd_or(tmp392, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_81 = simd_and(tmp163, tmp115);
        bytetest_90_95 = simd_andc(tmp255, tmp100);
        tmp393 = simd_and(tmp388, bytetest_81);
        carryQ.cq[47] = carryout2carry(pablo_blk_Advance(tmp393, carryQ.get_carry_in(47), tmp394));
        tmp395 = simd_and(tmp394, bytetest_90_95);
        struct_Lo.cc = simd_or(tmp395, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_81 = simd_and(tmp163, tmp115);
        bytetest_9a_9d = simd_and(tmp209, tmp257);
        tmp396 = simd_and(tmp394, bytetest_9a_9d);
        struct_Lo.cc = simd_or(tmp396, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_81 = simd_and(tmp163, tmp115);
        bytetest_a1_a1 = simd_and(tmp81, tmp115);
        tmp397 = simd_and(tmp394, bytetest_a1_a1);
        struct_Lo.cc = simd_or(tmp397, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_81 = simd_and(tmp163, tmp115);
        tmp398 = simd_and(tmp81, tmp20);
        bytetest_a5_a6 = simd_and(tmp398, tmp205);
        tmp399 = simd_and(tmp394, bytetest_a5_a6);
        struct_Lo.cc = simd_or(tmp399, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_81 = simd_and(tmp163, tmp115);
        bytetest_ae_b0 = simd_and(tmp177, tmp253);
        tmp400 = simd_and(tmp394, bytetest_ae_b0);
        struct_Lo.cc = simd_or(tmp400, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_82 = simd_and(tmp163, tmp6);
        bytetest_80_81 = simd_andc(tmp163, tmp95);
        tmp401 = simd_and(tmp388, bytetest_82);
        carryQ.cq[48] = carryout2carry(pablo_blk_Advance(tmp401, carryQ.get_carry_in(48), tmp402));
        tmp403 = simd_and(tmp402, bytetest_80_81);
        bytetest_81 = simd_and(tmp163, tmp115);
        bytetest_b5_bf = simd_and(tmp73, tmp320);
        tmp404 = simd_and(tmp394, bytetest_b5_bf);
        tmp405 = simd_or(tmp404, tmp403);
        struct_Lo.cc = simd_or(tmp405, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_82 = simd_and(tmp163, tmp6);
        bytetest_8e_8e = simd_and(tmp163, tmp99);
        tmp406 = simd_and(tmp402, bytetest_8e_8e);
        struct_Lo.cc = simd_or(tmp406, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_83 = simd_and(tmp163, tmp248);
        tmp407 = simd_or(simd_and(basis_bits.bit_2, tmp308), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
        bytetest_90_ba = simd_and(bytetest_80_bf, tmp407);
        tmp408 = simd_and(tmp388, bytetest_83);
        carryQ.cq[49] = carryout2carry(pablo_blk_Advance(tmp408, carryQ.get_carry_in(49), tmp409));
        tmp410 = simd_and(tmp409, bytetest_90_ba);
        struct_Lo.cc = simd_or(tmp410, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_89 = simd_and(tmp163, tmp55);
        bytetest_80_88 = simd_andc(tmp163, tmp132);
        tmp411 = simd_and(tmp388, bytetest_89);
        carryQ.cq[50] = carryout2carry(pablo_blk_Advance(tmp411, carryQ.get_carry_in(50), tmp412));
        tmp413 = simd_and(tmp412, bytetest_80_88);
        tmp414 = simd_or(simd_and(basis_bits.bit_4, tmp352), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
        bytetest_84_88 = simd_and(tmp163, tmp414);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp415 = simd_and(tmp388, bytetest_84_88);
        carryQ.cq[51] = carryout2carry(pablo_blk_Advance(tmp415, carryQ.get_carry_in(51), tmp416));
        tmp417 = simd_and(tmp416, bytetest_80_bf);
        bytetest_83 = simd_and(tmp163, tmp248);
        tmp418 = simd_and(tmp73, tmp62);
        bytetest_bd_bf = simd_and(tmp418, tmp34);
        tmp419 = simd_and(tmp409, bytetest_bd_bf);
        tmp420 = simd_or(tmp419, tmp417);
        tmp421 = simd_or(tmp420, tmp413);
        struct_Lo.cc = simd_or(tmp421, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_89 = simd_and(tmp163, tmp55);
        bytetest_8a_8d = simd_and(tmp382, tmp257);
        tmp422 = simd_and(tmp412, bytetest_8a_8d);
        struct_Lo.cc = simd_or(tmp422, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_89 = simd_and(tmp163, tmp55);
        bytetest_90_96 = simd_andc(tmp255, tmp317);
        tmp423 = simd_and(tmp412, bytetest_90_96);
        struct_Lo.cc = simd_or(tmp423, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_89 = simd_and(tmp163, tmp55);
        bytetest_98_98 = simd_and(tmp78, tmp50);
        tmp424 = simd_and(tmp412, bytetest_98_98);
        struct_Lo.cc = simd_or(tmp424, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_89 = simd_and(tmp163, tmp55);
        bytetest_9a_9d = simd_and(tmp209, tmp257);
        tmp425 = simd_and(tmp412, bytetest_9a_9d);
        struct_Lo.cc = simd_or(tmp425, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_8a = simd_and(tmp163, tmp11);
        bytetest_80_88 = simd_andc(tmp163, tmp132);
        tmp426 = simd_and(tmp388, bytetest_8a);
        carryQ.cq[52] = carryout2carry(pablo_blk_Advance(tmp426, carryQ.get_carry_in(52), tmp427));
        tmp428 = simd_and(tmp427, bytetest_80_88);
        bytetest_89 = simd_and(tmp163, tmp55);
        bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp429 = simd_and(tmp412, bytetest_a0_bf);
        tmp430 = simd_or(tmp429, tmp428);
        struct_Lo.cc = simd_or(tmp430, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_8a = simd_and(tmp163, tmp11);
        bytetest_8a_8d = simd_and(tmp382, tmp257);
        tmp431 = simd_and(tmp427, bytetest_8a_8d);
        struct_Lo.cc = simd_or(tmp431, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_8a = simd_and(tmp163, tmp11);
        tmp432 = simd_or(simd_and(basis_bits.bit_2, tmp337), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
        bytetest_90_b0 = simd_and(bytetest_80_bf, tmp432);
        tmp433 = simd_and(tmp427, bytetest_90_b0);
        struct_Lo.cc = simd_or(tmp433, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_8a = simd_and(tmp163, tmp11);
        bytetest_b2_b5 = simd_and(tmp160, tmp257);
        tmp434 = simd_and(tmp427, bytetest_b2_b5);
        struct_Lo.cc = simd_or(tmp434, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_8a = simd_and(tmp163, tmp11);
        bytetest_b8_be = simd_andc(tmp83, tmp317);
        tmp435 = simd_and(tmp427, bytetest_b8_be);
        struct_Lo.cc = simd_or(tmp435, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_8b = simd_and(tmp163, tmp23);
        bytetest_80_80 = simd_andc(tmp163, tmp90);
        tmp436 = simd_and(tmp388, bytetest_8b);
        carryQ.cq[53] = carryout2carry(pablo_blk_Advance(tmp436, carryQ.get_carry_in(53), tmp437));
        tmp438 = simd_and(tmp437, bytetest_80_80);
        struct_Lo.cc = simd_or(tmp438, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_8b = simd_and(tmp163, tmp23);
        bytetest_82_85 = simd_and(bytetest_80_87, tmp257);
        tmp439 = simd_and(tmp437, bytetest_82_85);
        struct_Lo.cc = simd_or(tmp439, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_8b = simd_and(tmp163, tmp23);
        tmp440 = simd_or(simd_and(basis_bits.bit_3, tmp319), simd_andc(basis_bits.bit_4, basis_bits.bit_3));
        bytetest_88_96 = simd_and(tmp125, tmp440);
        tmp441 = simd_and(tmp437, bytetest_88_96);
        struct_Lo.cc = simd_or(tmp441, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_8c = simd_and(tmp163, tmp89);
        bytetest_80_90 = simd_andc(tmp125, tmp336);
        tmp442 = simd_and(tmp388, bytetest_8c);
        carryQ.cq[54] = carryout2carry(pablo_blk_Advance(tmp442, carryQ.get_carry_in(54), tmp443));
        tmp444 = simd_and(tmp443, bytetest_80_90);
        bytetest_8b = simd_and(tmp163, tmp23);
        tmp445 = simd_or(basis_bits.bit_2, tmp157);
        bytetest_98_bf = simd_and(bytetest_80_bf, tmp445);
        tmp446 = simd_and(tmp437, bytetest_98_bf);
        tmp447 = simd_or(tmp446, tmp444);
        struct_Lo.cc = simd_or(tmp447, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_8c = simd_and(tmp163, tmp89);
        bytetest_92_95 = simd_and(tmp255, tmp257);
        tmp448 = simd_and(tmp443, bytetest_92_95);
        struct_Lo.cc = simd_or(tmp448, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_8d = simd_and(tmp163, tmp107);
        bytetest_80_9a = simd_andc(tmp125, tmp307);
        tmp449 = simd_and(tmp388, bytetest_8d);
        carryQ.cq[55] = carryout2carry(pablo_blk_Advance(tmp449, carryQ.get_carry_in(55), tmp450));
        tmp451 = simd_and(tmp450, bytetest_80_9a);
        bytetest_8c = simd_and(tmp163, tmp89);
        bytetest_98_bf = simd_and(bytetest_80_bf, tmp445);
        tmp452 = simd_and(tmp443, bytetest_98_bf);
        tmp453 = simd_or(tmp452, tmp451);
        struct_Lo.cc = simd_or(tmp453, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_8e = simd_and(tmp163, tmp99);
        bytetest_80_8f = simd_andc(bytetest_80_bf, tmp2);
        tmp454 = simd_and(tmp388, bytetest_8e);
        carryQ.cq[56] = carryout2carry(pablo_blk_Advance(tmp454, carryQ.get_carry_in(56), tmp455));
        tmp456 = simd_and(tmp455, bytetest_80_8f);
        struct_Lo.cc = simd_or(tmp456, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_8f = simd_and(bytetest_80_8f, tmp87);
        tmp457 = simd_and(basis_bits.bit_3, tmp320);
        tmp458 = simd_and(basis_bits.bit_2, tmp457);
        bytetest_80_b4 = simd_andc(bytetest_80_bf, tmp458);
        tmp459 = simd_and(tmp388, bytetest_8f);
        carryQ.cq[57] = carryout2carry(pablo_blk_Advance(tmp459, carryQ.get_carry_in(57), tmp460));
        tmp461 = simd_and(tmp460, bytetest_80_b4);
        bytetest_8e = simd_and(bytetest_80_8f, tmp99);
        bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp462 = simd_and(tmp455, bytetest_a0_bf);
        tmp463 = simd_or(tmp462, tmp461);
        struct_Lo.cc = simd_or(tmp463, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_99 = simd_and(tmp78, tmp55);
        tmp464 = simd_and(basis_bits.bit_2, tmp109);
        bytetest_80_ac = simd_andc(bytetest_80_bf, tmp464);
        tmp465 = simd_and(tmp388, bytetest_99);
        carryQ.cq[58] = carryout2carry(pablo_blk_Advance(tmp465, carryQ.get_carry_in(58), tmp466));
        tmp467 = simd_and(tmp466, bytetest_80_ac);
        tmp468 = simd_or(simd_and(basis_bits.bit_4, tmp352), simd_andc(tmp57, basis_bits.bit_4));
        bytetest_91_98 = simd_and(tmp78, tmp468);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp469 = simd_and(tmp388, bytetest_91_98);
        carryQ.cq[59] = carryout2carry(pablo_blk_Advance(tmp469, carryQ.get_carry_in(59), tmp470));
        tmp471 = simd_and(tmp470, bytetest_80_bf);
        bytetest_90 = simd_andc(tmp78, tmp90);
        tmp472 = simd_or(basis_bits.bit_2, tmp338);
        bytetest_81_bf = simd_and(bytetest_80_bf, tmp472);
        tmp473 = simd_and(tmp388, bytetest_90);
        carryQ.cq[60] = carryout2carry(pablo_blk_Advance(tmp473, carryQ.get_carry_in(60), tmp474));
        tmp475 = simd_and(tmp474, bytetest_81_bf);
        tmp476 = simd_or(tmp475, tmp471);
        tmp477 = simd_or(tmp476, tmp467);
        struct_Lo.cc = simd_or(tmp477, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_99 = simd_and(tmp78, tmp55);
        tmp478 = simd_or(basis_bits.bit_3, tmp87);
        bytetest_af_bf = simd_and(bytetest_a0_bf, tmp478);
        tmp479 = simd_and(tmp466, bytetest_af_bf);
        struct_Lo.cc = simd_or(tmp479, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_9a = simd_and(tmp78, tmp11);
        tmp480 = simd_not(tmp41);
        tmp481 = simd_or(simd_and(basis_bits.bit_3, tmp480), simd_andc(tmp90, basis_bits.bit_3));
        bytetest_81_9a = simd_and(tmp125, tmp481);
        tmp482 = simd_and(tmp388, bytetest_9a);
        carryQ.cq[61] = carryout2carry(pablo_blk_Advance(tmp482, carryQ.get_carry_in(61), tmp483));
        tmp484 = simd_and(tmp483, bytetest_81_9a);
        struct_Lo.cc = simd_or(tmp484, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_9b = simd_and(tmp78, tmp23);
        bytetest_80_aa = simd_andc(bytetest_80_bf, tmp386);
        tmp485 = simd_and(tmp388, bytetest_9b);
        carryQ.cq[62] = carryout2carry(pablo_blk_Advance(tmp485, carryQ.get_carry_in(62), tmp486));
        tmp487 = simd_and(tmp486, bytetest_80_aa);
        bytetest_9a = simd_and(tmp78, tmp11);
        bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp488 = simd_and(tmp483, bytetest_a0_bf);
        tmp489 = simd_or(tmp488, tmp487);
        struct_Lo.cc = simd_or(tmp489, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_9c = simd_and(tmp78, tmp89);
        tmp490 = simd_and(basis_bits.bit_4, tmp140);
        bytetest_80_8c = simd_andc(bytetest_80_8f, tmp490);
        tmp491 = simd_and(tmp388, bytetest_9c);
        carryQ.cq[63] = carryout2carry(pablo_blk_Advance(tmp491, carryQ.get_carry_in(63), tmp492));
        tmp493 = simd_and(tmp492, bytetest_80_8c);
        struct_Lo.cc = simd_or(tmp493, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_9c = simd_and(tmp78, tmp89);
        tmp494 = simd_or(simd_and(basis_bits.bit_3, tmp221), simd_andc(tmp63, basis_bits.bit_3));
        bytetest_8e_91 = simd_and(tmp125, tmp494);
        tmp495 = simd_and(tmp492, bytetest_8e_91);
        struct_Lo.cc = simd_or(tmp495, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_9c = simd_and(tmp78, tmp89);
        bytetest_a0_b1 = simd_andc(bytetest_a0_bf, tmp96);
        tmp496 = simd_and(tmp492, bytetest_a0_b1);
        struct_Lo.cc = simd_or(tmp496, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_9d = simd_and(tmp78, tmp107);
        bytetest_80_91 = simd_andc(tmp125, tmp96);
        tmp497 = simd_and(tmp388, bytetest_9d);
        carryQ.cq[64] = carryout2carry(pablo_blk_Advance(tmp497, carryQ.get_carry_in(64), tmp498));
        tmp499 = simd_and(tmp498, bytetest_80_91);
        struct_Lo.cc = simd_or(tmp499, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_9d = simd_and(tmp78, tmp107);
        bytetest_a0_ac = simd_andc(tmp81, tmp490);
        tmp500 = simd_and(tmp498, bytetest_a0_ac);
        struct_Lo.cc = simd_or(tmp500, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_9d = simd_and(tmp78, tmp107);
        bytetest_ae_b0 = simd_and(bytetest_a0_bf, tmp253);
        tmp501 = simd_and(tmp498, bytetest_ae_b0);
        struct_Lo.cc = simd_or(tmp501, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_9e = simd_and(tmp78, tmp99);
        tmp502 = simd_and(basis_bits.bit_2, tmp66);
        bytetest_80_b3 = simd_andc(bytetest_80_bf, tmp502);
        tmp503 = simd_and(tmp388, bytetest_9e);
        carryQ.cq[65] = carryout2carry(pablo_blk_Advance(tmp503, carryQ.get_carry_in(65), tmp504));
        tmp505 = simd_and(tmp504, bytetest_80_b3);
        struct_Lo.cc = simd_or(tmp505, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_9f = simd_and(tmp78, tmp87);
        bytetest_9c_9c = simd_and(tmp78, tmp89);
        tmp506 = simd_and(tmp388, bytetest_9f);
        carryQ.cq[66] = carryout2carry(pablo_blk_Advance(tmp506, carryQ.get_carry_in(66), tmp507));
        tmp508 = simd_and(tmp507, bytetest_9c_9c);
        struct_Lo.cc = simd_or(tmp508, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_a1 = simd_and(tmp81, tmp115);
        tmp509 = simd_andc(bytetest_80_8f, tmp4);
        bytetest_80_82 = simd_andc(tmp509, tmp22);
        tmp510 = simd_and(tmp388, bytetest_a1);
        carryQ.cq[67] = carryout2carry(pablo_blk_Advance(tmp510, carryQ.get_carry_in(67), tmp511));
        tmp512 = simd_and(tmp511, bytetest_80_82);
        bytetest_a0 = simd_andc(tmp81, tmp90);
        bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp513 = simd_and(tmp388, bytetest_a0);
        carryQ.cq[68] = carryout2carry(pablo_blk_Advance(tmp513, carryQ.get_carry_in(68), tmp514));
        tmp515 = simd_and(tmp514, bytetest_a0_bf);
        tmp516 = simd_or(tmp515, tmp512);
        struct_Lo.cc = simd_or(tmp516, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_a1 = simd_and(tmp81, tmp115);
        tmp517 = simd_not(tmp157);
        tmp518 = simd_or(simd_and(basis_bits.bit_2, tmp517), simd_andc(tmp146, basis_bits.bit_2));
        bytetest_84_b7 = simd_and(bytetest_80_bf, tmp518);
        tmp519 = simd_and(tmp511, bytetest_84_b7);
        struct_Lo.cc = simd_or(tmp519, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_a2 = simd_and(tmp81, tmp6);
        tmp520 = simd_and(basis_bits.bit_2, tmp171);
        bytetest_80_a8 = simd_andc(bytetest_80_bf, tmp520);
        tmp521 = simd_and(tmp388, bytetest_a2);
        carryQ.cq[69] = carryout2carry(pablo_blk_Advance(tmp521, carryQ.get_carry_in(69), tmp522));
        tmp523 = simd_and(tmp522, bytetest_80_a8);
        struct_Lo.cc = simd_or(tmp523, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_a2 = simd_and(tmp81, tmp6);
        bytetest_aa_aa = simd_and(tmp81, tmp11);
        tmp524 = simd_and(tmp522, bytetest_aa_aa);
        struct_Lo.cc = simd_or(tmp524, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_a3 = simd_and(tmp81, tmp248);
        tmp525 = simd_and(basis_bits.bit_2, tmp126);
        bytetest_80_b5 = simd_andc(bytetest_80_bf, tmp525);
        tmp526 = simd_and(tmp388, bytetest_a3);
        carryQ.cq[70] = carryout2carry(pablo_blk_Advance(tmp526, carryQ.get_carry_in(70), tmp527));
        tmp528 = simd_and(tmp527, bytetest_80_b5);
        bytetest_a2 = simd_and(tmp81, tmp6);
        bytetest_b0_bf = simd_and(bytetest_80_bf, tmp17);
        tmp529 = simd_and(tmp522, bytetest_b0_bf);
        tmp530 = simd_or(tmp529, tmp528);
        struct_Lo.cc = simd_or(tmp530, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_a4 = simd_and(tmp81, tmp35);
        tmp531 = simd_and(basis_bits.bit_3, tmp108);
        bytetest_80_9c = simd_andc(tmp125, tmp531);
        tmp532 = simd_and(tmp388, bytetest_a4);
        carryQ.cq[71] = carryout2carry(pablo_blk_Advance(tmp532, carryQ.get_carry_in(71), tmp533));
        tmp534 = simd_and(tmp533, bytetest_80_9c);
        struct_Lo.cc = simd_or(tmp534, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_a5 = simd_and(tmp81, tmp79);
        tmp535 = simd_or(basis_bits.bit_3, tmp63);
        tmp536 = simd_not(tmp535);
        tmp537 = simd_or(simd_and(basis_bits.bit_2, tmp536), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
        bytetest_90_ad = simd_and(bytetest_80_bf, tmp537);
        tmp538 = simd_and(tmp388, bytetest_a5);
        carryQ.cq[72] = carryout2carry(pablo_blk_Advance(tmp538, carryQ.get_carry_in(72), tmp539));
        tmp540 = simd_and(tmp539, bytetest_90_ad);
        struct_Lo.cc = simd_or(tmp540, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_a5 = simd_and(tmp81, tmp79);
        tmp541 = simd_andc(bytetest_b0_bf, basis_bits.bit_4);
        bytetest_b0_b4 = simd_andc(tmp541, tmp140);
        tmp542 = simd_and(tmp539, bytetest_b0_b4);
        struct_Lo.cc = simd_or(tmp542, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_a6 = simd_and(tmp81, tmp21);
        tmp543 = simd_or(basis_bits.bit_3, tmp62);
        tmp544 = simd_and(basis_bits.bit_2, tmp543);
        bytetest_80_ab = simd_andc(bytetest_80_bf, tmp544);
        tmp545 = simd_and(tmp388, bytetest_a6);
        carryQ.cq[73] = carryout2carry(pablo_blk_Advance(tmp545, carryQ.get_carry_in(73), tmp546));
        tmp547 = simd_and(tmp546, bytetest_80_ab);
        struct_Lo.cc = simd_or(tmp547, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_a7 = simd_and(tmp81, tmp27);
        tmp548 = simd_andc(bytetest_80_8f, basis_bits.bit_4);
        bytetest_81_87 = simd_and(tmp548, tmp57);
        tmp549 = simd_and(tmp388, bytetest_a7);
        carryQ.cq[74] = carryout2carry(pablo_blk_Advance(tmp549, carryQ.get_carry_in(74), tmp550));
        tmp551 = simd_and(tmp550, bytetest_81_87);
        struct_Lo.cc = simd_or(tmp551, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_a8 = simd_and(tmp81, tmp50);
        tmp552 = simd_and(basis_bits.bit_3, tmp318);
        bytetest_80_96 = simd_andc(tmp125, tmp552);
        tmp553 = simd_and(tmp388, bytetest_a8);
        carryQ.cq[75] = carryout2carry(pablo_blk_Advance(tmp553, carryQ.get_carry_in(75), tmp554));
        tmp555 = simd_and(tmp554, bytetest_80_96);
        struct_Lo.cc = simd_or(tmp555, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_a9 = simd_and(tmp81, tmp55);
        bytetest_80_94 = simd_andc(tmp125, tmp457);
        tmp556 = simd_and(tmp388, bytetest_a9);
        carryQ.cq[76] = carryout2carry(pablo_blk_Advance(tmp556, carryQ.get_carry_in(76), tmp557));
        tmp558 = simd_and(tmp557, bytetest_80_94);
        bytetest_a8 = simd_and(tmp81, tmp50);
        bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp559 = simd_and(tmp554, bytetest_a0_bf);
        tmp560 = simd_or(tmp559, tmp558);
        struct_Lo.cc = simd_or(tmp560, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_ac = simd_and(tmp81, tmp89);
        tmp561 = simd_not(tmp66);
        tmp562 = simd_or(basis_bits.bit_3, tmp320);
        tmp563 = simd_or(simd_and(basis_bits.bit_2, tmp561), simd_andc(tmp562, basis_bits.bit_2));
        bytetest_85_b3 = simd_and(bytetest_80_bf, tmp563);
        tmp564 = simd_and(tmp388, bytetest_ac);
        carryQ.cq[77] = carryout2carry(pablo_blk_Advance(tmp564, carryQ.get_carry_in(77), tmp565));
        tmp566 = simd_and(tmp565, bytetest_85_b3);
        struct_Lo.cc = simd_or(tmp566, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_ad = simd_and(tmp81, tmp107);
        tmp567 = simd_or(simd_and(basis_bits.bit_4, tmp328), simd_andc(tmp140, basis_bits.bit_4));
        bytetest_85_8b = simd_and(bytetest_80_8f, tmp567);
        tmp568 = simd_and(tmp388, bytetest_ad);
        carryQ.cq[78] = carryout2carry(pablo_blk_Advance(tmp568, carryQ.get_carry_in(78), tmp569));
        tmp570 = simd_and(tmp569, bytetest_85_8b);
        struct_Lo.cc = simd_or(tmp570, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_ae = simd_and(tmp81, tmp99);
        tmp571 = simd_not(tmp338);
        tmp572 = simd_or(basis_bits.bit_3, tmp173);
        tmp573 = simd_or(simd_and(basis_bits.bit_2, tmp571), simd_andc(tmp572, basis_bits.bit_2));
        bytetest_83_a0 = simd_and(bytetest_80_bf, tmp573);
        tmp574 = simd_and(tmp388, bytetest_ae);
        carryQ.cq[79] = carryout2carry(pablo_blk_Advance(tmp574, carryQ.get_carry_in(79), tmp575));
        tmp576 = simd_and(tmp575, bytetest_83_a0);
        struct_Lo.cc = simd_or(tmp576, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_ae = simd_and(tmp81, tmp99);
        bytetest_ae_af = simd_and(tmp81, tmp63);
        tmp577 = simd_and(tmp575, bytetest_ae_af);
        struct_Lo.cc = simd_or(tmp577, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_af = simd_and(tmp81, tmp87);
        bytetest_80_a5 = simd_andc(bytetest_80_bf, tmp103);
        tmp578 = simd_and(tmp388, bytetest_af);
        carryQ.cq[80] = carryout2carry(pablo_blk_Advance(tmp578, carryQ.get_carry_in(80), tmp579));
        tmp580 = simd_and(tmp579, bytetest_80_a5);
        bytetest_ae = simd_and(tmp81, tmp99);
        tmp581 = simd_and(bytetest_b0_bf, basis_bits.bit_4);
        bytetest_ba_bf = simd_and(tmp581, tmp117);
        tmp582 = simd_and(tmp575, bytetest_ba_bf);
        tmp583 = simd_or(tmp582, tmp580);
        struct_Lo.cc = simd_or(tmp583, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_b0 = simd_andc(bytetest_b0_bf, tmp90);
        tmp584 = simd_and(basis_bits.bit_2, tmp146);
        bytetest_80_a3 = simd_andc(bytetest_80_bf, tmp584);
        tmp585 = simd_and(tmp388, bytetest_b0);
        carryQ.cq[81] = carryout2carry(pablo_blk_Advance(tmp585, carryQ.get_carry_in(81), tmp586));
        tmp587 = simd_and(tmp586, bytetest_80_a3);
        struct_Lo.cc = simd_or(tmp587, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_b1 = simd_and(bytetest_b0_bf, tmp115);
        tmp588 = simd_and(bytetest_80_8f, tmp62);
        bytetest_8d_8f = simd_and(tmp588, tmp34);
        tmp589 = simd_and(tmp388, bytetest_b1);
        carryQ.cq[82] = carryout2carry(pablo_blk_Advance(tmp589, carryQ.get_carry_in(82), tmp590));
        tmp591 = simd_and(tmp590, bytetest_8d_8f);
        struct_Lo.cc = simd_or(tmp591, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_b1 = simd_and(bytetest_b0_bf, tmp115);
        tmp592 = simd_or(simd_and(basis_bits.bit_2, tmp517), simd_andc(tmp144, basis_bits.bit_2));
        bytetest_9a_b7 = simd_and(bytetest_80_bf, tmp592);
        tmp593 = simd_and(tmp590, bytetest_9a_b7);
        struct_Lo.cc = simd_or(tmp593, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp248);
        tmp594 = simd_and(tmp81, basis_bits.bit_4);
        bytetest_a9_ac = simd_and(tmp594, tmp210);
        tmp595 = simd_and(tmp388, bytetest_b3);
        carryQ.cq[83] = carryout2carry(pablo_blk_Advance(tmp595, carryQ.get_carry_in(83), tmp596));
        tmp597 = simd_and(tmp596, bytetest_a9_ac);
        struct_Lo.cc = simd_or(tmp597, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp248);
        bytetest_ae_b1 = simd_and(bytetest_a0_bf, tmp494);
        tmp598 = simd_and(tmp596, bytetest_ae_b1);
        struct_Lo.cc = simd_or(tmp598, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp248);
        tmp599 = simd_and(bytetest_b0_bf, tmp20);
        bytetest_b5_b6 = simd_and(tmp599, tmp205);
        tmp600 = simd_and(tmp596, bytetest_b5_b6);
        struct_Lo.cc = simd_or(tmp600, struct_Lo.cc);
        bytetest_e2 = simd_and(tmp124, tmp6);
        bytetest_84 = simd_and(bytetest_80_8f, tmp35);
        tmp601 = simd_or(simd_and(basis_bits.bit_4, tmp352), simd_andc(tmp140, basis_bits.bit_4));
        bytetest_b5_b8 = simd_and(bytetest_b0_bf, tmp601);
        tmp602 = simd_and(tmp13, bytetest_e2);
        carryQ.cq[84] = carryout2carry(pablo_blk_Advance(tmp602, carryQ.get_carry_in(84), tmp603));
        tmp604 = simd_and(tmp603, bytetest_84);
        carryQ.cq[85] = carryout2carry(pablo_blk_Advance(tmp604, carryQ.get_carry_in(85), tmp605));
        tmp606 = simd_and(tmp605, bytetest_b5_b8);
        struct_Lo.cc = simd_or(tmp606, struct_Lo.cc);
        bytetest_e2 = simd_and(tmp124, tmp6);
        bytetest_b5 = simd_and(bytetest_b0_bf, tmp79);
        tmp607 = simd_or(basis_bits.bit_3, basis_bits.bit_4);
        tmp608 = simd_and(basis_bits.bit_2, tmp607);
        bytetest_80_a7 = simd_andc(bytetest_80_bf, tmp608);
        tmp609 = simd_and(tmp603, bytetest_b5);
        carryQ.cq[86] = carryout2carry(pablo_blk_Advance(tmp609, carryQ.get_carry_in(86), tmp610));
        tmp611 = simd_and(tmp610, bytetest_80_a7);
        bytetest_b4 = simd_and(bytetest_b0_bf, tmp35);
        bytetest_b0_bf = simd_and(bytetest_80_bf, tmp17);
        tmp612 = simd_and(tmp603, bytetest_b4);
        carryQ.cq[87] = carryout2carry(pablo_blk_Advance(tmp612, carryQ.get_carry_in(87), tmp613));
        tmp614 = simd_and(tmp613, bytetest_b0_bf);
        tmp615 = simd_or(tmp614, tmp611);
        struct_Lo.cc = simd_or(tmp615, struct_Lo.cc);
        bytetest_e2 = simd_and(tmp124, tmp6);
        bytetest_b6 = simd_and(bytetest_b0_bf, tmp21);
        bytetest_80_96 = simd_andc(tmp125, tmp552);
        tmp616 = simd_and(tmp603, bytetest_b6);
        carryQ.cq[88] = carryout2carry(pablo_blk_Advance(tmp616, carryQ.get_carry_in(88), tmp617));
        tmp618 = simd_and(tmp617, bytetest_80_96);
        struct_Lo.cc = simd_or(tmp618, struct_Lo.cc);
        bytetest_e2 = simd_and(tmp124, tmp6);
        bytetest_b6 = simd_and(bytetest_b0_bf, tmp21);
        bytetest_a0_a6 = simd_andc(tmp263, tmp317);
        tmp619 = simd_and(tmp617, bytetest_a0_a6);
        struct_Lo.cc = simd_or(tmp619, struct_Lo.cc);
        bytetest_e2 = simd_and(tmp124, tmp6);
        bytetest_b6 = simd_and(bytetest_b0_bf, tmp21);
        bytetest_a8_ae = simd_andc(tmp594, tmp317);
        tmp620 = simd_and(tmp617, bytetest_a8_ae);
        struct_Lo.cc = simd_or(tmp620, struct_Lo.cc);
        bytetest_e2 = simd_and(tmp124, tmp6);
        bytetest_b6 = simd_and(bytetest_b0_bf, tmp21);
        bytetest_b0_b6 = simd_andc(tmp541, tmp317);
        tmp621 = simd_and(tmp617, bytetest_b0_b6);
        struct_Lo.cc = simd_or(tmp621, struct_Lo.cc);
        bytetest_e2 = simd_and(tmp124, tmp6);
        bytetest_b6 = simd_and(bytetest_b0_bf, tmp21);
        bytetest_b8_be = simd_andc(tmp581, tmp317);
        tmp622 = simd_and(tmp617, bytetest_b8_be);
        struct_Lo.cc = simd_or(tmp622, struct_Lo.cc);
        bytetest_e2 = simd_and(tmp124, tmp6);
        bytetest_b7 = simd_and(bytetest_b0_bf, tmp27);
        bytetest_80_86 = simd_andc(tmp548, tmp317);
        tmp623 = simd_and(tmp603, bytetest_b7);
        carryQ.cq[89] = carryout2carry(pablo_blk_Advance(tmp623, carryQ.get_carry_in(89), tmp624));
        tmp625 = simd_and(tmp624, bytetest_80_86);
        struct_Lo.cc = simd_or(tmp625, struct_Lo.cc);
        bytetest_e2 = simd_and(tmp124, tmp6);
        bytetest_b7 = simd_and(bytetest_b0_bf, tmp27);
        tmp626 = simd_and(bytetest_80_8f, basis_bits.bit_4);
        bytetest_88_8e = simd_andc(tmp626, tmp317);
        tmp627 = simd_and(tmp624, bytetest_88_8e);
        struct_Lo.cc = simd_or(tmp627, struct_Lo.cc);
        bytetest_e2 = simd_and(tmp124, tmp6);
        bytetest_b7 = simd_and(bytetest_b0_bf, tmp27);
        bytetest_90_96 = simd_andc(tmp255, tmp317);
        tmp628 = simd_and(tmp624, bytetest_90_96);
        struct_Lo.cc = simd_or(tmp628, struct_Lo.cc);
        bytetest_e2 = simd_and(tmp124, tmp6);
        bytetest_b7 = simd_and(bytetest_b0_bf, tmp27);
        bytetest_98_9e = simd_andc(tmp209, tmp317);
        tmp629 = simd_and(tmp624, bytetest_98_9e);
        struct_Lo.cc = simd_or(tmp629, struct_Lo.cc);
        bytetest_e3 = simd_and(tmp124, tmp248);
        bytetest_80 = simd_andc(bytetest_80_8f, tmp90);
        bytetest_86_86 = simd_and(bytetest_80_8f, tmp21);
        tmp630 = simd_and(tmp13, bytetest_e3);
        carryQ.cq[90] = carryout2carry(pablo_blk_Advance(tmp630, carryQ.get_carry_in(90), tmp631));
        tmp632 = simd_and(tmp631, bytetest_80);
        carryQ.cq[91] = carryout2carry(pablo_blk_Advance(tmp632, carryQ.get_carry_in(91), tmp633));
        tmp634 = simd_and(tmp633, bytetest_86_86);
        struct_Lo.cc = simd_or(tmp634, struct_Lo.cc);
        bytetest_e3 = simd_and(tmp124, tmp248);
        bytetest_80 = simd_andc(bytetest_80_8f, tmp90);
        bytetest_bc_bc = simd_and(bytetest_b0_bf, tmp89);
        tmp635 = simd_and(tmp633, bytetest_bc_bc);
        struct_Lo.cc = simd_or(tmp635, struct_Lo.cc);
        bytetest_e3 = simd_and(tmp124, tmp248);
        bytetest_82 = simd_and(bytetest_80_8f, tmp6);
        bytetest_80_96 = simd_andc(tmp125, tmp552);
        tmp636 = simd_and(tmp631, bytetest_82);
        carryQ.cq[92] = carryout2carry(pablo_blk_Advance(tmp636, carryQ.get_carry_in(92), tmp637));
        tmp638 = simd_and(tmp637, bytetest_80_96);
        bytetest_81 = simd_and(bytetest_80_8f, tmp115);
        bytetest_81_bf = simd_and(bytetest_80_bf, tmp472);
        tmp639 = simd_and(tmp631, bytetest_81);
        carryQ.cq[93] = carryout2carry(pablo_blk_Advance(tmp639, carryQ.get_carry_in(93), tmp640));
        tmp641 = simd_and(tmp640, bytetest_81_bf);
        tmp642 = simd_or(tmp641, tmp638);
        struct_Lo.cc = simd_or(tmp642, struct_Lo.cc);
        bytetest_e3 = simd_and(tmp124, tmp248);
        bytetest_82 = simd_and(bytetest_80_8f, tmp6);
        bytetest_9f_9f = simd_and(tmp78, tmp87);
        tmp643 = simd_and(tmp637, bytetest_9f_9f);
        struct_Lo.cc = simd_or(tmp643, struct_Lo.cc);
        bytetest_e3 = simd_and(tmp124, tmp248);
        bytetest_83 = simd_and(bytetest_80_8f, tmp248);
        tmp644 = simd_and(basis_bits.bit_2, tmp307);
        bytetest_80_ba = simd_andc(bytetest_80_bf, tmp644);
        tmp645 = simd_and(tmp631, bytetest_83);
        carryQ.cq[94] = carryout2carry(pablo_blk_Advance(tmp645, carryQ.get_carry_in(94), tmp646));
        tmp647 = simd_and(tmp646, bytetest_80_ba);
        bytetest_82 = simd_and(bytetest_80_8f, tmp6);
        bytetest_a1_bf = simd_and(bytetest_a0_bf, tmp338);
        tmp648 = simd_and(tmp637, bytetest_a1_bf);
        tmp649 = simd_or(tmp648, tmp647);
        struct_Lo.cc = simd_or(tmp649, struct_Lo.cc);
        bytetest_e3 = simd_and(tmp124, tmp248);
        bytetest_83 = simd_and(bytetest_80_8f, tmp248);
        bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp87);
        tmp650 = simd_and(tmp646, bytetest_bf_bf);
        struct_Lo.cc = simd_or(tmp650, struct_Lo.cc);
        bytetest_e3 = simd_and(tmp124, tmp248);
        bytetest_84 = simd_and(bytetest_80_8f, tmp35);
        tmp651 = simd_or(simd_and(basis_bits.bit_2, tmp536), simd_andc(tmp562, basis_bits.bit_2));
        bytetest_85_ad = simd_and(bytetest_80_bf, tmp651);
        tmp652 = simd_and(tmp631, bytetest_84);
        carryQ.cq[95] = carryout2carry(pablo_blk_Advance(tmp652, carryQ.get_carry_in(95), tmp653));
        tmp654 = simd_and(tmp653, bytetest_85_ad);
        struct_Lo.cc = simd_or(tmp654, struct_Lo.cc);
        bytetest_e3 = simd_and(tmp124, tmp248);
        bytetest_86 = simd_and(bytetest_80_8f, tmp21);
        tmp655 = simd_and(basis_bits.bit_4, tmp317);
        bytetest_80_8e = simd_andc(bytetest_80_8f, tmp655);
        tmp656 = simd_and(tmp631, bytetest_86);
        carryQ.cq[96] = carryout2carry(pablo_blk_Advance(tmp656, carryQ.get_carry_in(96), tmp657));
        tmp658 = simd_and(tmp657, bytetest_80_8e);
        bytetest_85 = simd_and(bytetest_80_8f, tmp79);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp659 = simd_and(tmp631, bytetest_85);
        carryQ.cq[97] = carryout2carry(pablo_blk_Advance(tmp659, carryQ.get_carry_in(97), tmp660));
        tmp661 = simd_and(tmp660, bytetest_80_bf);
        bytetest_84 = simd_and(bytetest_80_8f, tmp35);
        bytetest_b1_bf = simd_and(bytetest_b0_bf, tmp74);
        tmp662 = simd_and(tmp653, bytetest_b1_bf);
        tmp663 = simd_or(tmp662, tmp661);
        tmp664 = simd_or(tmp663, tmp658);
        struct_Lo.cc = simd_or(tmp664, struct_Lo.cc);
        bytetest_e3 = simd_and(tmp124, tmp248);
        bytetest_86 = simd_and(bytetest_80_8f, tmp21);
        bytetest_a0_ba = simd_andc(bytetest_a0_bf, tmp307);
        tmp665 = simd_and(tmp657, bytetest_a0_ba);
        struct_Lo.cc = simd_or(tmp665, struct_Lo.cc);
        bytetest_e3 = simd_and(tmp124, tmp248);
        bytetest_87 = simd_and(bytetest_80_8f, tmp27);
        bytetest_b0_bf = simd_and(bytetest_80_bf, tmp17);
        tmp666 = simd_and(tmp631, bytetest_87);
        carryQ.cq[98] = carryout2carry(pablo_blk_Advance(tmp666, carryQ.get_carry_in(98), tmp667));
        tmp668 = simd_and(tmp667, bytetest_b0_bf);
        struct_Lo.cc = simd_or(tmp668, struct_Lo.cc);
        bytetest_e4 = simd_and(tmp124, tmp35);
        bytetest_b6 = simd_and(bytetest_b0_bf, tmp21);
        bytetest_80_b5 = simd_andc(bytetest_80_bf, tmp525);
        tmp669 = simd_and(tmp13, bytetest_e4);
        carryQ.cq[99] = carryout2carry(pablo_blk_Advance(tmp669, carryQ.get_carry_in(99), tmp670));
        tmp671 = simd_and(tmp670, bytetest_b6);
        carryQ.cq[100] = carryout2carry(pablo_blk_Advance(tmp671, carryQ.get_carry_in(100), tmp672));
        tmp673 = simd_and(tmp672, bytetest_80_b5);
        bytetest_80_b5 = simd_andc(bytetest_80_bf, tmp525);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp674 = simd_and(tmp670, bytetest_80_b5);
        carryQ.cq[101] = carryout2carry(pablo_blk_Advance(tmp674, carryQ.get_carry_in(101), tmp675));
        tmp676 = simd_and(tmp675, bytetest_80_bf);
        tmp677 = simd_or(tmp676, tmp673);
        bytetest_e3 = simd_and(tmp124, tmp248);
        bytetest_90_bf = simd_and(bytetest_80_bf, tmp2);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp678 = simd_and(tmp631, bytetest_90_bf);
        carryQ.cq[102] = carryout2carry(pablo_blk_Advance(tmp678, carryQ.get_carry_in(102), tmp679));
        tmp680 = simd_and(tmp679, bytetest_80_bf);
        tmp681 = simd_or(tmp680, tmp677);
        struct_Lo.cc = simd_or(tmp681, struct_Lo.cc);
        bytetest_e9 = simd_and(tmp124, tmp55);
        bytetest_bf = simd_and(bytetest_b0_bf, tmp87);
        bytetest_80_8c = simd_andc(bytetest_80_8f, tmp490);
        tmp682 = simd_and(tmp13, bytetest_e9);
        carryQ.cq[103] = carryout2carry(pablo_blk_Advance(tmp682, carryQ.get_carry_in(103), tmp683));
        tmp684 = simd_and(tmp683, bytetest_bf);
        carryQ.cq[104] = carryout2carry(pablo_blk_Advance(tmp684, carryQ.get_carry_in(104), tmp685));
        tmp686 = simd_and(tmp685, bytetest_80_8c);
        tmp687 = simd_and(basis_bits.bit_2, tmp190);
        bytetest_80_be = simd_andc(bytetest_80_bf, tmp687);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp688 = simd_and(tmp683, bytetest_80_be);
        carryQ.cq[105] = carryout2carry(pablo_blk_Advance(tmp688, carryQ.get_carry_in(105), tmp689));
        tmp690 = simd_and(tmp689, bytetest_80_bf);
        tmp691 = simd_or(tmp690, tmp686);
        bytetest_e5_e8 = simd_and(tmp124, tmp601);
        bytetest_e4 = simd_and(tmp124, tmp35);
        bytetest_b8_bf = simd_and(bytetest_b0_bf, basis_bits.bit_4);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp692 = simd_and(tmp670, bytetest_b8_bf);
        carryQ.cq[106] = carryout2carry(pablo_blk_Advance(tmp692, carryQ.get_carry_in(106), tmp693));
        tmp694 = simd_and(tmp693, bytetest_80_bf);
        tmp695 = simd_or(tmp694, bytetest_e5_e8);
        tmp696 = simd_or(tmp695, tmp691);
        struct_Lo.cc = simd_or(tmp696, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_80 = simd_andc(bytetest_80_8f, tmp90);
        bytetest_80_94 = simd_andc(tmp125, tmp457);
        tmp697 = simd_and(tmp13, bytetest_ea);
        carryQ.cq[107] = carryout2carry(pablo_blk_Advance(tmp697, carryQ.get_carry_in(107), tmp698));
        tmp699 = simd_and(tmp698, bytetest_80);
        carryQ.cq[108] = carryout2carry(pablo_blk_Advance(tmp699, carryQ.get_carry_in(108), tmp700));
        tmp701 = simd_and(tmp700, bytetest_80_94);
        struct_Lo.cc = simd_or(tmp701, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_92 = simd_and(tmp78, tmp6);
        bytetest_80_8c = simd_andc(bytetest_80_8f, tmp490);
        tmp702 = simd_and(tmp698, bytetest_92);
        carryQ.cq[109] = carryout2carry(pablo_blk_Advance(tmp702, carryQ.get_carry_in(109), tmp703));
        tmp704 = simd_and(tmp703, bytetest_80_8c);
        tmp705 = simd_or(simd_and(basis_bits.bit_3, tmp221), simd_andc(tmp90, basis_bits.bit_3));
        bytetest_81_91 = simd_and(tmp125, tmp705);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp706 = simd_and(tmp698, bytetest_81_91);
        carryQ.cq[110] = carryout2carry(pablo_blk_Advance(tmp706, carryQ.get_carry_in(110), tmp707));
        tmp708 = simd_and(tmp707, bytetest_80_bf);
        bytetest_80 = simd_andc(bytetest_80_8f, tmp90);
        tmp709 = simd_or(basis_bits.bit_2, tmp126);
        bytetest_96_bf = simd_and(bytetest_80_bf, tmp709);
        tmp710 = simd_and(tmp700, bytetest_96_bf);
        tmp711 = simd_or(tmp710, tmp708);
        tmp712 = simd_or(tmp711, tmp704);
        struct_Lo.cc = simd_or(tmp712, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_93 = simd_and(tmp78, tmp248);
        tmp713 = simd_or(simd_and(basis_bits.bit_2, tmp517), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
        bytetest_90_b7 = simd_and(bytetest_80_bf, tmp713);
        tmp714 = simd_and(tmp698, bytetest_93);
        carryQ.cq[111] = carryout2carry(pablo_blk_Advance(tmp714, carryQ.get_carry_in(111), tmp715));
        tmp716 = simd_and(tmp715, bytetest_90_b7);
        struct_Lo.cc = simd_or(tmp716, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_98 = simd_and(tmp78, tmp50);
        bytetest_80_8b = simd_andc(bytetest_80_8f, tmp62);
        tmp717 = simd_and(tmp698, bytetest_98);
        carryQ.cq[112] = carryout2carry(pablo_blk_Advance(tmp717, carryQ.get_carry_in(112), tmp718));
        tmp719 = simd_and(tmp718, bytetest_80_8b);
        bytetest_94_97 = simd_and(tmp78, tmp20);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp720 = simd_and(tmp698, bytetest_94_97);
        carryQ.cq[113] = carryout2carry(pablo_blk_Advance(tmp720, carryQ.get_carry_in(113), tmp721));
        tmp722 = simd_and(tmp721, bytetest_80_bf);
        tmp723 = simd_or(tmp722, tmp719);
        struct_Lo.cc = simd_or(tmp723, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_98 = simd_and(tmp78, tmp50);
        bytetest_90_9f = simd_and(bytetest_80_bf, tmp32);
        tmp724 = simd_and(tmp718, bytetest_90_9f);
        struct_Lo.cc = simd_or(tmp724, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_98 = simd_and(bytetest_90_9f, tmp50);
        bytetest_aa_ab = simd_and(tmp81, tmp363);
        tmp725 = simd_and(tmp718, bytetest_aa_ab);
        struct_Lo.cc = simd_or(tmp725, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_99 = simd_and(bytetest_90_9f, tmp55);
        bytetest_ae_ae = simd_and(tmp81, tmp99);
        tmp726 = simd_and(tmp698, bytetest_99);
        carryQ.cq[114] = carryout2carry(pablo_blk_Advance(tmp726, carryQ.get_carry_in(114), tmp727));
        tmp728 = simd_and(tmp727, bytetest_ae_ae);
        struct_Lo.cc = simd_or(tmp728, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_9b = simd_and(bytetest_90_9f, tmp23);
        bytetest_80_a5 = simd_andc(bytetest_80_bf, tmp103);
        tmp729 = simd_and(tmp698, bytetest_9b);
        carryQ.cq[115] = carryout2carry(pablo_blk_Advance(tmp729, carryQ.get_carry_in(115), tmp730));
        tmp731 = simd_and(tmp730, bytetest_80_a5);
        bytetest_9a = simd_and(bytetest_90_9f, tmp11);
        bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp732 = simd_and(tmp698, bytetest_9a);
        carryQ.cq[116] = carryout2carry(pablo_blk_Advance(tmp732, carryQ.get_carry_in(116), tmp733));
        tmp734 = simd_and(tmp733, bytetest_a0_bf);
        tmp735 = simd_or(tmp734, tmp731);
        struct_Lo.cc = simd_or(tmp735, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_a0 = simd_andc(tmp81, tmp90);
        bytetest_80_81 = simd_andc(bytetest_80_8f, tmp95);
        tmp736 = simd_and(tmp698, bytetest_a0);
        carryQ.cq[117] = carryout2carry(pablo_blk_Advance(tmp736, carryQ.get_carry_in(117), tmp737));
        tmp738 = simd_and(tmp737, bytetest_80_81);
        bytetest_9f = simd_and(bytetest_90_9f, tmp87);
        bytetest_bb_bf = simd_and(bytetest_b8_bf, tmp40);
        tmp739 = simd_and(tmp698, bytetest_9f);
        carryQ.cq[118] = carryout2carry(pablo_blk_Advance(tmp739, carryQ.get_carry_in(118), tmp740));
        tmp741 = simd_and(tmp740, bytetest_bb_bf);
        tmp742 = simd_or(tmp741, tmp738);
        struct_Lo.cc = simd_or(tmp742, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_a0 = simd_andc(tmp81, tmp90);
        tmp743 = simd_or(simd_and(basis_bits.bit_5, tmp256), simd_andc(tmp22, basis_bits.bit_5));
        bytetest_83_85 = simd_and(tmp548, tmp743);
        tmp744 = simd_and(tmp737, bytetest_83_85);
        struct_Lo.cc = simd_or(tmp744, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_a0 = simd_andc(tmp81, tmp90);
        tmp745 = simd_or(simd_and(basis_bits.bit_4, tmp56), simd_andc(tmp317, basis_bits.bit_4));
        bytetest_87_8a = simd_and(bytetest_80_8f, tmp745);
        tmp746 = simd_and(tmp737, bytetest_87_8a);
        struct_Lo.cc = simd_or(tmp746, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_a0 = simd_andc(tmp81, tmp90);
        tmp747 = simd_not(tmp572);
        tmp748 = simd_or(simd_and(basis_bits.bit_2, tmp747), simd_andc(tmp543, basis_bits.bit_2));
        bytetest_8c_a2 = simd_and(bytetest_80_bf, tmp748);
        tmp749 = simd_and(tmp737, bytetest_8c_a2);
        struct_Lo.cc = simd_or(tmp749, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_a1 = simd_and(tmp81, tmp115);
        bytetest_80_b3 = simd_andc(bytetest_80_bf, tmp502);
        tmp750 = simd_and(tmp698, bytetest_a1);
        carryQ.cq[119] = carryout2carry(pablo_blk_Advance(tmp750, carryQ.get_carry_in(119), tmp751));
        tmp752 = simd_and(tmp751, bytetest_80_b3);
        struct_Lo.cc = simd_or(tmp752, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_a2 = simd_and(tmp81, tmp6);
        tmp753 = simd_or(simd_and(basis_bits.bit_2, tmp561), simd_andc(tmp155, basis_bits.bit_2));
        bytetest_82_b3 = simd_and(bytetest_80_bf, tmp753);
        tmp754 = simd_and(tmp698, bytetest_a2);
        carryQ.cq[120] = carryout2carry(pablo_blk_Advance(tmp754, carryQ.get_carry_in(120), tmp755));
        tmp756 = simd_and(tmp755, bytetest_82_b3);
        struct_Lo.cc = simd_or(tmp756, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_a3 = simd_and(tmp81, tmp248);
        bytetest_b2_b7 = simd_and(tmp541, tmp117);
        tmp757 = simd_and(tmp698, bytetest_a3);
        carryQ.cq[121] = carryout2carry(pablo_blk_Advance(tmp757, carryQ.get_carry_in(121), tmp758));
        tmp759 = simd_and(tmp758, bytetest_b2_b7);
        struct_Lo.cc = simd_or(tmp759, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_a3 = simd_and(tmp81, tmp248);
        bytetest_bb_bb = simd_and(bytetest_b0_bf, tmp23);
        tmp760 = simd_and(tmp758, bytetest_bb_bb);
        struct_Lo.cc = simd_or(tmp760, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_a4 = simd_and(tmp81, tmp35);
        tmp761 = simd_not(tmp102);
        tmp762 = simd_or(simd_and(basis_bits.bit_2, tmp761), simd_andc(tmp119, basis_bits.bit_2));
        bytetest_8a_a5 = simd_and(bytetest_80_bf, tmp762);
        tmp763 = simd_and(tmp698, bytetest_a4);
        carryQ.cq[122] = carryout2carry(pablo_blk_Advance(tmp763, carryQ.get_carry_in(122), tmp764));
        tmp765 = simd_and(tmp764, bytetest_8a_a5);
        struct_Lo.cc = simd_or(tmp765, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_a5 = simd_and(tmp81, tmp79);
        bytetest_80_86 = simd_andc(tmp548, tmp317);
        tmp766 = simd_and(tmp698, bytetest_a5);
        carryQ.cq[123] = carryout2carry(pablo_blk_Advance(tmp766, carryQ.get_carry_in(123), tmp767));
        tmp768 = simd_and(tmp767, bytetest_80_86);
        bytetest_a4 = simd_and(tmp81, tmp35);
        bytetest_b0_bf = simd_and(bytetest_80_bf, tmp17);
        tmp769 = simd_and(tmp764, bytetest_b0_bf);
        tmp770 = simd_or(tmp769, tmp768);
        struct_Lo.cc = simd_or(tmp770, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_a5 = simd_and(tmp81, tmp79);
        bytetest_a0_bc = simd_andc(bytetest_a0_bf, tmp531);
        tmp771 = simd_and(tmp767, bytetest_a0_bc);
        struct_Lo.cc = simd_or(tmp771, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_a6 = simd_and(tmp81, tmp21);
        tmp772 = simd_not(tmp174);
        tmp773 = simd_or(simd_and(basis_bits.bit_2, tmp772), simd_andc(tmp146, basis_bits.bit_2));
        bytetest_84_b2 = simd_and(bytetest_80_bf, tmp773);
        tmp774 = simd_and(tmp698, bytetest_a6);
        carryQ.cq[124] = carryout2carry(pablo_blk_Advance(tmp774, carryQ.get_carry_in(124), tmp775));
        tmp776 = simd_and(tmp775, bytetest_84_b2);
        struct_Lo.cc = simd_or(tmp776, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_a8 = simd_and(tmp81, tmp50);
        bytetest_80_a8 = simd_andc(bytetest_80_bf, tmp520);
        tmp777 = simd_and(tmp698, bytetest_a8);
        carryQ.cq[125] = carryout2carry(pablo_blk_Advance(tmp777, carryQ.get_carry_in(125), tmp778));
        tmp779 = simd_and(tmp778, bytetest_80_a8);
        struct_Lo.cc = simd_or(tmp779, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_a9 = simd_and(tmp81, tmp55);
        bytetest_80_82 = simd_andc(tmp509, tmp22);
        tmp780 = simd_and(tmp698, bytetest_a9);
        carryQ.cq[126] = carryout2carry(pablo_blk_Advance(tmp780, carryQ.get_carry_in(126), tmp781));
        tmp782 = simd_and(tmp781, bytetest_80_82);
        struct_Lo.cc = simd_or(tmp782, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_a9 = simd_and(tmp81, tmp55);
        tmp783 = simd_or(simd_and(basis_bits.bit_4, tmp328), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
        bytetest_84_8b = simd_and(bytetest_80_8f, tmp783);
        tmp784 = simd_and(tmp781, bytetest_84_8b);
        struct_Lo.cc = simd_or(tmp784, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_a9 = simd_and(tmp81, tmp55);
        bytetest_a0_af = simd_and(bytetest_80_bf, tmp8);
        tmp785 = simd_and(tmp781, bytetest_a0_af);
        struct_Lo.cc = simd_or(tmp785, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_a9 = simd_and(bytetest_a0_af, tmp55);
        tmp786 = simd_not(tmp22);
        tmp787 = simd_or(simd_and(basis_bits.bit_5, tmp786), simd_andc(tmp34, basis_bits.bit_5));
        bytetest_b1_b6 = simd_and(tmp541, tmp787);
        tmp788 = simd_and(tmp781, bytetest_b1_b6);
        struct_Lo.cc = simd_or(tmp788, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_a9 = simd_and(bytetest_a0_af, tmp55);
        bytetest_ba_ba = simd_and(bytetest_b0_bf, tmp11);
        tmp789 = simd_and(tmp781, bytetest_ba_ba);
        struct_Lo.cc = simd_or(tmp789, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_aa = simd_and(bytetest_a0_af, tmp11);
        bytetest_80_af = simd_andc(bytetest_80_bf, tmp17);
        tmp790 = simd_and(tmp698, bytetest_aa);
        carryQ.cq[127] = carryout2carry(pablo_blk_Advance(tmp790, carryQ.get_carry_in(127), tmp791));
        tmp792 = simd_and(tmp791, bytetest_80_af);
        struct_Lo.cc = simd_or(tmp792, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_aa = simd_and(bytetest_a0_af, tmp11);
        bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp115);
        tmp793 = simd_and(tmp791, bytetest_b1_b1);
        struct_Lo.cc = simd_or(tmp793, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_aa = simd_and(bytetest_a0_af, tmp11);
        bytetest_b5_b6 = simd_and(tmp599, tmp205);
        tmp794 = simd_and(tmp791, bytetest_b5_b6);
        struct_Lo.cc = simd_or(tmp794, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_aa = simd_and(bytetest_a0_af, tmp11);
        tmp795 = simd_or(simd_and(basis_bits.bit_5, tmp256), simd_andc(tmp34, basis_bits.bit_5));
        bytetest_b9_bd = simd_and(bytetest_b8_bf, tmp795);
        tmp796 = simd_and(tmp791, bytetest_b9_bd);
        struct_Lo.cc = simd_or(tmp796, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_ab = simd_and(bytetest_a0_af, tmp23);
        bytetest_80_80 = simd_andc(bytetest_80_8f, tmp90);
        tmp797 = simd_and(tmp698, bytetest_ab);
        carryQ.cq[128] = carryout2carry(pablo_blk_Advance(tmp797, carryQ.get_carry_in(128), tmp798));
        tmp799 = simd_and(tmp798, bytetest_80_80);
        struct_Lo.cc = simd_or(tmp799, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_ab = simd_and(bytetest_a0_af, tmp23);
        bytetest_82_82 = simd_and(bytetest_80_8f, tmp6);
        tmp800 = simd_and(tmp798, bytetest_82_82);
        struct_Lo.cc = simd_or(tmp800, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_ab = simd_and(bytetest_a0_af, tmp23);
        tmp801 = simd_and(bytetest_90_9f, basis_bits.bit_4);
        bytetest_9b_9c = simd_and(tmp801, tmp264);
        tmp802 = simd_and(tmp798, bytetest_9b_9c);
        struct_Lo.cc = simd_or(tmp802, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_ab = simd_and(bytetest_a0_af, tmp23);
        bytetest_a0_aa = simd_andc(bytetest_a0_af, tmp41);
        tmp803 = simd_and(tmp798, bytetest_a0_aa);
        struct_Lo.cc = simd_or(tmp803, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_ab = simd_and(bytetest_a0_af, tmp23);
        bytetest_b2_b2 = simd_and(bytetest_b0_bf, tmp6);
        tmp804 = simd_and(tmp798, bytetest_b2_b2);
        struct_Lo.cc = simd_or(tmp804, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_ac = simd_and(bytetest_a0_af, tmp89);
        bytetest_81_86 = simd_and(tmp548, tmp787);
        tmp805 = simd_and(tmp698, bytetest_ac);
        carryQ.cq[129] = carryout2carry(pablo_blk_Advance(tmp805, carryQ.get_carry_in(129), tmp806));
        tmp807 = simd_and(tmp806, bytetest_81_86);
        struct_Lo.cc = simd_or(tmp807, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_ac = simd_and(bytetest_a0_af, tmp89);
        bytetest_89_8e = simd_and(tmp626, tmp787);
        tmp808 = simd_and(tmp806, bytetest_89_8e);
        struct_Lo.cc = simd_or(tmp808, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_ac = simd_and(bytetest_a0_af, tmp89);
        tmp809 = simd_andc(bytetest_90_9f, basis_bits.bit_4);
        bytetest_91_96 = simd_and(tmp809, tmp787);
        tmp810 = simd_and(tmp806, bytetest_91_96);
        struct_Lo.cc = simd_or(tmp810, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_ac = simd_and(bytetest_a0_af, tmp89);
        tmp811 = simd_andc(bytetest_a0_af, basis_bits.bit_4);
        bytetest_a0_a6 = simd_andc(tmp811, tmp317);
        tmp812 = simd_and(tmp806, bytetest_a0_a6);
        struct_Lo.cc = simd_or(tmp812, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_ac = simd_and(bytetest_a0_af, tmp89);
        tmp813 = simd_and(bytetest_a0_af, basis_bits.bit_4);
        bytetest_a8_ae = simd_andc(tmp813, tmp317);
        tmp814 = simd_and(tmp806, bytetest_a8_ae);
        struct_Lo.cc = simd_or(tmp814, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_af = simd_and(bytetest_a0_af, tmp87);
        tmp815 = simd_and(basis_bits.bit_2, tmp572);
        bytetest_80_a2 = simd_andc(bytetest_80_bf, tmp815);
        tmp816 = simd_and(tmp698, bytetest_af);
        carryQ.cq[130] = carryout2carry(pablo_blk_Advance(tmp816, carryQ.get_carry_in(130), tmp817));
        tmp818 = simd_and(tmp817, bytetest_80_a2);
        struct_Lo.cc = simd_or(tmp818, struct_Lo.cc);
        bytetest_ed = simd_and(tmp124, tmp107);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_80_a3 = simd_andc(bytetest_80_bf, tmp584);
        tmp819 = simd_and(tmp13, bytetest_ed);
        carryQ.cq[131] = carryout2carry(pablo_blk_Advance(tmp819, carryQ.get_carry_in(131), tmp820));
        tmp821 = simd_and(tmp820, bytetest_9e);
        carryQ.cq[132] = carryout2carry(pablo_blk_Advance(tmp821, carryQ.get_carry_in(132), tmp822));
        tmp823 = simd_and(tmp822, bytetest_80_a3);
        tmp824 = simd_and(basis_bits.bit_3, tmp63);
        bytetest_80_9d = simd_andc(tmp125, tmp824);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp825 = simd_and(tmp820, bytetest_80_9d);
        carryQ.cq[133] = carryout2carry(pablo_blk_Advance(tmp825, carryQ.get_carry_in(133), tmp826));
        tmp827 = simd_and(tmp826, bytetest_80_bf);
        tmp828 = simd_or(tmp827, tmp823);
        tmp829 = simd_and(tmp124, basis_bits.bit_4);
        bytetest_eb_ec = simd_and(tmp829, tmp264);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_b0_bf = simd_and(bytetest_80_bf, tmp17);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp830 = simd_and(tmp698, bytetest_b0_bf);
        carryQ.cq[134] = carryout2carry(pablo_blk_Advance(tmp830, carryQ.get_carry_in(134), tmp831));
        tmp832 = simd_and(tmp831, bytetest_80_bf);
        tmp833 = simd_or(tmp832, bytetest_eb_ec);
        tmp834 = simd_or(tmp833, tmp828);
        struct_Lo.cc = simd_or(tmp834, struct_Lo.cc);
        bytetest_ed = simd_and(tmp124, tmp107);
        bytetest_9f = simd_and(bytetest_90_9f, tmp87);
        bytetest_80_86 = simd_andc(tmp548, tmp317);
        tmp835 = simd_and(tmp820, bytetest_9f);
        carryQ.cq[135] = carryout2carry(pablo_blk_Advance(tmp835, carryQ.get_carry_in(135), tmp836));
        tmp837 = simd_and(tmp836, bytetest_80_86);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_b0_bf = simd_and(bytetest_80_bf, tmp17);
        tmp838 = simd_and(tmp822, bytetest_b0_bf);
        tmp839 = simd_or(tmp838, tmp837);
        struct_Lo.cc = simd_or(tmp839, struct_Lo.cc);
        bytetest_ed = simd_and(tmp124, tmp107);
        bytetest_9f = simd_and(bytetest_90_9f, tmp87);
        tmp840 = simd_and(basis_bits.bit_3, tmp62);
        tmp841 = simd_not(tmp840);
        tmp842 = simd_or(simd_and(basis_bits.bit_2, tmp841), simd_andc(tmp42, basis_bits.bit_2));
        bytetest_8b_bb = simd_and(bytetest_80_bf, tmp842);
        tmp843 = simd_and(tmp836, bytetest_8b_bb);
        struct_Lo.cc = simd_or(tmp843, struct_Lo.cc);
        bytetest_ef = simd_and(tmp124, tmp87);
        bytetest_a9 = simd_and(bytetest_a0_af, tmp55);
        tmp844 = simd_and(basis_bits.bit_2, tmp535);
        bytetest_80_ad = simd_andc(bytetest_80_bf, tmp844);
        tmp845 = simd_and(tmp13, bytetest_ef);
        carryQ.cq[136] = carryout2carry(pablo_blk_Advance(tmp845, carryQ.get_carry_in(136), tmp846));
        tmp847 = simd_and(tmp846, bytetest_a9);
        carryQ.cq[137] = carryout2carry(pablo_blk_Advance(tmp847, carryQ.get_carry_in(137), tmp848));
        tmp849 = simd_and(tmp848, bytetest_80_ad);
        bytetest_a4_a8 = simd_and(bytetest_a0_af, tmp414);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp850 = simd_and(tmp846, bytetest_a4_a8);
        carryQ.cq[138] = carryout2carry(pablo_blk_Advance(tmp850, carryQ.get_carry_in(138), tmp851));
        tmp852 = simd_and(tmp851, bytetest_80_bf);
        tmp853 = simd_or(tmp852, tmp849);
        struct_Lo.cc = simd_or(tmp853, struct_Lo.cc);
        bytetest_ef = simd_and(tmp124, tmp87);
        bytetest_ab = simd_and(bytetest_a0_af, tmp23);
        bytetest_80_99 = simd_andc(tmp125, tmp144);
        tmp854 = simd_and(tmp846, bytetest_ab);
        carryQ.cq[139] = carryout2carry(pablo_blk_Advance(tmp854, carryQ.get_carry_in(139), tmp855));
        tmp856 = simd_and(tmp855, bytetest_80_99);
        bytetest_aa = simd_and(bytetest_a0_af, tmp11);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp857 = simd_and(tmp846, bytetest_aa);
        carryQ.cq[140] = carryout2carry(pablo_blk_Advance(tmp857, carryQ.get_carry_in(140), tmp858));
        tmp859 = simd_and(tmp858, bytetest_80_bf);
        bytetest_a9 = simd_and(bytetest_a0_af, tmp55);
        bytetest_b0_bf = simd_and(bytetest_80_bf, tmp17);
        tmp860 = simd_and(tmp848, bytetest_b0_bf);
        tmp861 = simd_or(tmp860, tmp859);
        tmp862 = simd_or(tmp861, tmp856);
        struct_Lo.cc = simd_or(tmp862, struct_Lo.cc);
        bytetest_ef = simd_and(tmp124, tmp87);
        bytetest_ac = simd_and(bytetest_a0_af, tmp89);
        bytetest_9d_9d = simd_and(bytetest_90_9f, tmp107);
        tmp863 = simd_and(tmp846, bytetest_ac);
        carryQ.cq[141] = carryout2carry(pablo_blk_Advance(tmp863, carryQ.get_carry_in(141), tmp864));
        tmp865 = simd_and(tmp864, bytetest_9d_9d);
        struct_Lo.cc = simd_or(tmp865, struct_Lo.cc);
        bytetest_ef = simd_and(tmp124, tmp87);
        bytetest_ac = simd_and(bytetest_a0_af, tmp89);
        tmp866 = simd_or(simd_and(basis_bits.bit_2, tmp172), simd_andc(tmp190, basis_bits.bit_2));
        bytetest_9f_a8 = simd_and(bytetest_80_bf, tmp866);
        tmp867 = simd_and(tmp864, bytetest_9f_a8);
        struct_Lo.cc = simd_or(tmp867, struct_Lo.cc);
        bytetest_ef = simd_and(tmp124, tmp87);
        bytetest_ac = simd_and(bytetest_a0_af, tmp89);
        tmp868 = simd_or(simd_and(basis_bits.bit_3, tmp319), simd_andc(tmp118, basis_bits.bit_3));
        bytetest_aa_b6 = simd_and(bytetest_a0_bf, tmp868);
        tmp869 = simd_and(tmp864, bytetest_aa_b6);
        struct_Lo.cc = simd_or(tmp869, struct_Lo.cc);
        bytetest_ef = simd_and(tmp124, tmp87);
        bytetest_ac = simd_and(bytetest_a0_af, tmp89);
        bytetest_b8_bc = simd_andc(bytetest_b8_bf, tmp140);
        tmp870 = simd_and(tmp864, bytetest_b8_bc);
        struct_Lo.cc = simd_or(tmp870, struct_Lo.cc);
        bytetest_ef = simd_and(tmp124, tmp87);
        bytetest_ac = simd_and(bytetest_a0_af, tmp89);
        bytetest_be_be = simd_and(bytetest_b0_bf, tmp99);
        tmp871 = simd_and(tmp864, bytetest_be_be);
        struct_Lo.cc = simd_or(tmp871, struct_Lo.cc);
        bytetest_ef = simd_and(tmp124, tmp87);
        bytetest_ad = simd_and(bytetest_a0_af, tmp107);
        bytetest_80_81 = simd_andc(bytetest_80_8f, tmp95);
        tmp872 = simd_and(tmp846, bytetest_ad);
        carryQ.cq[142] = carryout2carry(pablo_blk_Advance(tmp872, carryQ.get_carry_in(142), tmp873));
        tmp874 = simd_and(tmp873, bytetest_80_81);
        struct_Lo.cc = simd_or(tmp874, struct_Lo.cc);
        bytetest_ef = simd_and(tmp124, tmp87);
        bytetest_ad = simd_and(bytetest_a0_af, tmp107);
        bytetest_83_84 = simd_and(tmp548, tmp264);
        tmp875 = simd_and(tmp873, bytetest_83_84);
        struct_Lo.cc = simd_or(tmp875, struct_Lo.cc);
        bytetest_ef = simd_and(tmp124, tmp87);
        bytetest_ae = simd_and(bytetest_a0_af, tmp99);
        tmp876 = simd_and(basis_bits.bit_2, tmp96);
        bytetest_80_b1 = simd_andc(bytetest_80_bf, tmp876);
        tmp877 = simd_and(tmp846, bytetest_ae);
        carryQ.cq[143] = carryout2carry(pablo_blk_Advance(tmp877, carryQ.get_carry_in(143), tmp878));
        tmp879 = simd_and(tmp878, bytetest_80_b1);
        bytetest_ad = simd_and(bytetest_a0_af, tmp107);
        tmp880 = simd_or(basis_bits.bit_2, tmp102);
        bytetest_86_bf = simd_and(bytetest_80_bf, tmp880);
        tmp881 = simd_and(tmp873, bytetest_86_bf);
        tmp882 = simd_or(tmp881, tmp879);
        struct_Lo.cc = simd_or(tmp882, struct_Lo.cc);
        bytetest_ef = simd_and(tmp124, tmp87);
        bytetest_b4 = simd_and(bytetest_b0_bf, tmp35);
        tmp883 = simd_and(basis_bits.bit_2, tmp824);
        bytetest_80_bd = simd_andc(bytetest_80_bf, tmp883);
        tmp884 = simd_and(tmp846, bytetest_b4);
        carryQ.cq[144] = carryout2carry(pablo_blk_Advance(tmp884, carryQ.get_carry_in(144), tmp885));
        tmp886 = simd_and(tmp885, bytetest_80_bd);
        bytetest_b0_b3 = simd_andc(bytetest_b0_bf, tmp4);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp887 = simd_and(tmp846, bytetest_b0_b3);
        carryQ.cq[145] = carryout2carry(pablo_blk_Advance(tmp887, carryQ.get_carry_in(145), tmp888));
        tmp889 = simd_and(tmp888, bytetest_80_bf);
        bytetest_af = simd_and(bytetest_a0_af, tmp87);
        tmp890 = simd_or(basis_bits.bit_2, tmp174);
        bytetest_93_bf = simd_and(bytetest_80_bf, tmp890);
        tmp891 = simd_and(tmp846, bytetest_af);
        carryQ.cq[146] = carryout2carry(pablo_blk_Advance(tmp891, carryQ.get_carry_in(146), tmp892));
        tmp893 = simd_and(tmp892, bytetest_93_bf);
        tmp894 = simd_or(tmp893, tmp889);
        tmp895 = simd_or(tmp894, tmp886);
        struct_Lo.cc = simd_or(tmp895, struct_Lo.cc);
        bytetest_ef = simd_and(tmp124, tmp87);
        bytetest_b6 = simd_and(bytetest_b0_bf, tmp21);
        bytetest_80_8f = simd_andc(bytetest_80_bf, tmp2);
        tmp896 = simd_and(tmp846, bytetest_b6);
        carryQ.cq[147] = carryout2carry(pablo_blk_Advance(tmp896, carryQ.get_carry_in(147), tmp897));
        tmp898 = simd_and(tmp897, bytetest_80_8f);
        bytetest_b5 = simd_and(bytetest_b0_bf, tmp79);
        bytetest_90_bf = simd_and(bytetest_80_bf, tmp2);
        tmp899 = simd_and(tmp846, bytetest_b5);
        carryQ.cq[148] = carryout2carry(pablo_blk_Advance(tmp899, carryQ.get_carry_in(148), tmp900));
        tmp901 = simd_and(tmp900, bytetest_90_bf);
        tmp902 = simd_or(tmp901, tmp898);
        struct_Lo.cc = simd_or(tmp902, struct_Lo.cc);
        bytetest_ef = simd_and(tmp124, tmp87);
        bytetest_b7 = simd_and(bytetest_b0_bf, tmp27);
        bytetest_80_87 = simd_andc(bytetest_80_8f, basis_bits.bit_4);
        tmp903 = simd_and(tmp846, bytetest_b7);
        carryQ.cq[149] = carryout2carry(pablo_blk_Advance(tmp903, carryQ.get_carry_in(149), tmp904));
        tmp905 = simd_and(tmp904, bytetest_80_87);
        bytetest_b6 = simd_and(bytetest_b0_bf, tmp21);
        tmp906 = simd_or(basis_bits.bit_2, tmp96);
        bytetest_92_bf = simd_and(bytetest_80_bf, tmp906);
        tmp907 = simd_and(tmp897, bytetest_92_bf);
        tmp908 = simd_or(tmp907, tmp905);
        struct_Lo.cc = simd_or(tmp908, struct_Lo.cc);
        bytetest_ef = simd_and(tmp124, tmp87);
        bytetest_b7 = simd_and(bytetest_b0_bf, tmp27);
        bytetest_b0_bb = simd_andc(bytetest_b0_bf, tmp62);
        tmp909 = simd_and(tmp904, bytetest_b0_bb);
        struct_Lo.cc = simd_or(tmp909, struct_Lo.cc);
        bytetest_ef = simd_and(tmp124, tmp87);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp55);
        bytetest_b0_b4 = simd_andc(tmp541, tmp140);
        tmp910 = simd_and(tmp846, bytetest_b9);
        carryQ.cq[150] = carryout2carry(pablo_blk_Advance(tmp910, carryQ.get_carry_in(150), tmp911));
        tmp912 = simd_and(tmp911, bytetest_b0_b4);
        struct_Lo.cc = simd_or(tmp912, struct_Lo.cc);
        bytetest_ef = simd_and(tmp124, tmp87);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp23);
        tmp913 = simd_and(basis_bits.bit_2, tmp531);
        bytetest_80_bc = simd_andc(bytetest_80_bf, tmp913);
        tmp914 = simd_and(tmp846, bytetest_bb);
        carryQ.cq[151] = carryout2carry(pablo_blk_Advance(tmp914, carryQ.get_carry_in(151), tmp915));
        tmp916 = simd_and(tmp915, bytetest_80_bc);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp11);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp917 = simd_and(tmp846, bytetest_ba);
        carryQ.cq[152] = carryout2carry(pablo_blk_Advance(tmp917, carryQ.get_carry_in(152), tmp918));
        tmp919 = simd_and(tmp918, bytetest_80_bf);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp55);
        bytetest_b6_bf = simd_and(bytetest_b0_bf, tmp101);
        tmp920 = simd_and(tmp911, bytetest_b6_bf);
        tmp921 = simd_or(tmp920, tmp919);
        tmp922 = simd_or(tmp921, tmp916);
        struct_Lo.cc = simd_or(tmp922, struct_Lo.cc);
        bytetest_ef = simd_and(tmp124, tmp87);
        bytetest_bd = simd_and(bytetest_b0_bf, tmp107);
        bytetest_a6_af = simd_and(bytetest_a0_af, tmp101);
        tmp923 = simd_and(tmp846, bytetest_bd);
        carryQ.cq[153] = carryout2carry(pablo_blk_Advance(tmp923, carryQ.get_carry_in(153), tmp924));
        tmp925 = simd_and(tmp924, bytetest_a6_af);
        struct_Lo.cc = simd_or(tmp925, struct_Lo.cc);
        bytetest_ef = simd_and(tmp124, tmp87);
        bytetest_be = simd_and(bytetest_b0_bf, tmp99);
        bytetest_80_9d = simd_andc(tmp125, tmp824);
        tmp926 = simd_and(tmp846, bytetest_be);
        carryQ.cq[154] = carryout2carry(pablo_blk_Advance(tmp926, carryQ.get_carry_in(154), tmp927));
        tmp928 = simd_and(tmp927, bytetest_80_9d);
        bytetest_bd = simd_and(bytetest_b0_bf, tmp107);
        bytetest_b1_bf = simd_and(bytetest_b0_bf, tmp74);
        tmp929 = simd_and(tmp924, bytetest_b1_bf);
        tmp930 = simd_or(tmp929, tmp928);
        struct_Lo.cc = simd_or(tmp930, struct_Lo.cc);
        bytetest_ef = simd_and(tmp124, tmp87);
        bytetest_be = simd_and(bytetest_b0_bf, tmp99);
        bytetest_a0_be = simd_andc(bytetest_a0_bf, tmp190);
        tmp931 = simd_and(tmp927, bytetest_a0_be);
        struct_Lo.cc = simd_or(tmp931, struct_Lo.cc);
        bytetest_ef = simd_and(tmp124, tmp87);
        bytetest_bf = simd_and(bytetest_b0_bf, tmp87);
        bytetest_82_87 = simd_and(bytetest_80_87, tmp117);
        tmp932 = simd_and(tmp846, bytetest_bf);
        carryQ.cq[155] = carryout2carry(pablo_blk_Advance(tmp932, carryQ.get_carry_in(155), tmp933));
        tmp934 = simd_and(tmp933, bytetest_82_87);
        struct_Lo.cc = simd_or(tmp934, struct_Lo.cc);
        bytetest_ef = simd_and(tmp124, tmp87);
        bytetest_bf = simd_and(bytetest_b0_bf, tmp87);
        bytetest_8a_8f = simd_and(tmp626, tmp117);
        tmp935 = simd_and(tmp933, bytetest_8a_8f);
        struct_Lo.cc = simd_or(tmp935, struct_Lo.cc);
        bytetest_ef = simd_and(tmp124, tmp87);
        bytetest_bf = simd_and(bytetest_b0_bf, tmp87);
        bytetest_92_97 = simd_and(tmp809, tmp117);
        tmp936 = simd_and(tmp933, bytetest_92_97);
        struct_Lo.cc = simd_or(tmp936, struct_Lo.cc);
        bytetest_ef = simd_and(tmp124, tmp87);
        bytetest_bf = simd_and(bytetest_b0_bf, tmp87);
        bytetest_9a_9c = simd_and(tmp801, tmp85);
        tmp937 = simd_and(tmp933, bytetest_9a_9c);
        struct_Lo.cc = simd_or(tmp937, struct_Lo.cc);
        tmp938 = simd_and(tmp1, tmp17);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_80 = simd_andc(bytetest_80_8f, tmp90);
        bytetest_80_8b = simd_andc(bytetest_80_8f, tmp62);
        tmp939 = simd_and(tmp13, bytetest_f0);
        carryQ.cq[156] = carryout2carry(pablo_blk_Advance(tmp939, carryQ.get_carry_in(156), tmp940));
        tmp941 = simd_and(tmp940, bytetest_90);
        carryQ.cq[157] = carryout2carry(pablo_blk_Advance(tmp941, carryQ.get_carry_in(157), tmp942));
        tmp943 = simd_and(tmp942, bytetest_80);
        carryQ.cq[158] = carryout2carry(pablo_blk_Advance(tmp943, carryQ.get_carry_in(158), tmp944));
        tmp945 = simd_and(tmp944, bytetest_80_8b);
        struct_Lo.cc = simd_or(tmp945, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_80 = simd_andc(bytetest_80_8f, tmp90);
        tmp946 = simd_or(basis_bits.bit_3, tmp318);
        tmp947 = simd_not(tmp946);
        tmp948 = simd_or(simd_and(basis_bits.bit_2, tmp947), simd_andc(tmp109, basis_bits.bit_2));
        bytetest_8d_a6 = simd_and(bytetest_80_bf, tmp948);
        tmp949 = simd_and(tmp944, bytetest_8d_a6);
        struct_Lo.cc = simd_or(tmp949, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_80 = simd_andc(bytetest_80_8f, tmp90);
        tmp950 = simd_or(simd_and(basis_bits.bit_3, tmp480), simd_andc(basis_bits.bit_4, basis_bits.bit_3));
        bytetest_a8_ba = simd_and(bytetest_a0_bf, tmp950);
        tmp951 = simd_and(tmp944, bytetest_a8_ba);
        struct_Lo.cc = simd_or(tmp951, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_80 = simd_andc(bytetest_80_8f, tmp90);
        bytetest_bc_bd = simd_and(bytetest_b0_bf, tmp188);
        tmp952 = simd_and(tmp944, bytetest_bc_bd);
        struct_Lo.cc = simd_or(tmp952, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_81 = simd_and(bytetest_80_8f, tmp115);
        tmp953 = simd_and(basis_bits.bit_4, tmp100);
        bytetest_80_8d = simd_andc(bytetest_80_8f, tmp953);
        tmp954 = simd_and(tmp942, bytetest_81);
        carryQ.cq[159] = carryout2carry(pablo_blk_Advance(tmp954, carryQ.get_carry_in(159), tmp955));
        tmp956 = simd_and(tmp955, bytetest_80_8d);
        bytetest_80 = simd_andc(bytetest_80_8f, tmp90);
        bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp87);
        tmp957 = simd_and(tmp944, bytetest_bf_bf);
        tmp958 = simd_or(tmp957, tmp956);
        struct_Lo.cc = simd_or(tmp958, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_81 = simd_and(bytetest_80_8f, tmp115);
        bytetest_90_9d = simd_andc(bytetest_90_9f, tmp953);
        tmp959 = simd_and(tmp955, bytetest_90_9d);
        struct_Lo.cc = simd_or(tmp959, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_83 = simd_and(bytetest_80_8f, tmp248);
        bytetest_80_ba = simd_andc(bytetest_80_bf, tmp644);
        tmp960 = simd_and(tmp942, bytetest_83);
        carryQ.cq[160] = carryout2carry(pablo_blk_Advance(tmp960, carryQ.get_carry_in(160), tmp961));
        tmp962 = simd_and(tmp961, bytetest_80_ba);
        bytetest_82 = simd_and(bytetest_80_8f, tmp6);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp963 = simd_and(tmp942, bytetest_82);
        carryQ.cq[161] = carryout2carry(pablo_blk_Advance(tmp963, carryQ.get_carry_in(161), tmp964));
        tmp965 = simd_and(tmp964, bytetest_80_bf);
        tmp966 = simd_or(tmp965, tmp962);
        struct_Lo.cc = simd_or(tmp966, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_8a = simd_and(bytetest_80_8f, tmp11);
        bytetest_80_9c = simd_andc(tmp125, tmp531);
        tmp967 = simd_and(tmp942, bytetest_8a);
        carryQ.cq[162] = carryout2carry(pablo_blk_Advance(tmp967, carryQ.get_carry_in(162), tmp968));
        tmp969 = simd_and(tmp968, bytetest_80_9c);
        struct_Lo.cc = simd_or(tmp969, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_8b = simd_and(bytetest_80_8f, tmp23);
        bytetest_80_90 = simd_andc(tmp125, tmp336);
        tmp970 = simd_and(tmp942, bytetest_8b);
        carryQ.cq[163] = carryout2carry(pablo_blk_Advance(tmp970, carryQ.get_carry_in(163), tmp971));
        tmp972 = simd_and(tmp971, bytetest_80_90);
        bytetest_8a = simd_and(bytetest_80_8f, tmp11);
        bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp973 = simd_and(tmp968, bytetest_a0_bf);
        tmp974 = simd_or(tmp973, tmp972);
        struct_Lo.cc = simd_or(tmp974, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_8c = simd_and(bytetest_80_8f, tmp89);
        bytetest_80_9e = simd_andc(tmp125, tmp190);
        tmp975 = simd_and(tmp942, bytetest_8c);
        carryQ.cq[164] = carryout2carry(pablo_blk_Advance(tmp975, carryQ.get_carry_in(164), tmp976));
        tmp977 = simd_and(tmp976, bytetest_80_9e);
        struct_Lo.cc = simd_or(tmp977, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_8d = simd_and(bytetest_80_8f, tmp107);
        bytetest_80_80 = simd_andc(bytetest_80_8f, tmp90);
        tmp978 = simd_and(tmp942, bytetest_8d);
        carryQ.cq[165] = carryout2carry(pablo_blk_Advance(tmp978, carryQ.get_carry_in(165), tmp979));
        tmp980 = simd_and(tmp979, bytetest_80_80);
        bytetest_8c = simd_and(bytetest_80_8f, tmp89);
        bytetest_b0_bf = simd_and(bytetest_80_bf, tmp17);
        tmp981 = simd_and(tmp976, bytetest_b0_bf);
        tmp982 = simd_or(tmp981, tmp980);
        struct_Lo.cc = simd_or(tmp982, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_8d = simd_and(bytetest_80_8f, tmp107);
        tmp983 = simd_or(simd_and(basis_bits.bit_4, tmp181), simd_andc(tmp117, basis_bits.bit_4));
        bytetest_82_89 = simd_and(bytetest_80_8f, tmp983);
        tmp984 = simd_and(tmp979, bytetest_82_89);
        struct_Lo.cc = simd_or(tmp984, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_8e = simd_and(bytetest_80_8f, tmp99);
        bytetest_80_9d = simd_andc(tmp125, tmp824);
        tmp985 = simd_and(tmp942, bytetest_8e);
        carryQ.cq[166] = carryout2carry(pablo_blk_Advance(tmp985, carryQ.get_carry_in(166), tmp986));
        tmp987 = simd_and(tmp986, bytetest_80_9d);
        struct_Lo.cc = simd_or(tmp987, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_8f = simd_and(bytetest_80_8f, tmp87);
        bytetest_80_83 = simd_andc(bytetest_80_8f, tmp4);
        tmp988 = simd_and(tmp942, bytetest_8f);
        carryQ.cq[167] = carryout2carry(pablo_blk_Advance(tmp988, carryQ.get_carry_in(167), tmp989));
        tmp990 = simd_and(tmp989, bytetest_80_83);
        bytetest_8e = simd_and(bytetest_80_8f, tmp99);
        bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp991 = simd_and(tmp986, bytetest_a0_bf);
        tmp992 = simd_or(tmp991, tmp990);
        struct_Lo.cc = simd_or(tmp992, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_8f = simd_and(bytetest_80_8f, tmp87);
        bytetest_88_8f = simd_and(bytetest_80_8f, basis_bits.bit_4);
        tmp993 = simd_and(tmp989, bytetest_88_8f);
        struct_Lo.cc = simd_or(tmp993, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_92 = simd_and(bytetest_90_9f, tmp6);
        bytetest_80_9d = simd_andc(tmp125, tmp824);
        tmp994 = simd_and(tmp942, bytetest_92);
        carryQ.cq[168] = carryout2carry(pablo_blk_Advance(tmp994, carryQ.get_carry_in(168), tmp995));
        tmp996 = simd_and(tmp995, bytetest_80_9d);
        bytetest_91 = simd_and(bytetest_90_9f, tmp115);
        bytetest_90_bf = simd_and(bytetest_80_bf, tmp2);
        tmp997 = simd_and(tmp942, bytetest_91);
        carryQ.cq[169] = carryout2carry(pablo_blk_Advance(tmp997, carryQ.get_carry_in(169), tmp998));
        tmp999 = simd_and(tmp998, bytetest_90_bf);
        tmp1000 = simd_or(tmp999, tmp996);
        struct_Lo.cc = simd_or(tmp1000, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_a0 = simd_andc(bytetest_a0_af, tmp90);
        bytetest_80_85 = simd_andc(bytetest_80_87, tmp100);
        tmp1001 = simd_and(tmp942, bytetest_a0);
        carryQ.cq[170] = carryout2carry(pablo_blk_Advance(tmp1001, carryQ.get_carry_in(170), tmp1002));
        tmp1003 = simd_and(tmp1002, bytetest_80_85);
        struct_Lo.cc = simd_or(tmp1003, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_a0 = simd_andc(bytetest_a0_af, tmp90);
        bytetest_88_88 = simd_and(bytetest_80_8f, tmp50);
        tmp1004 = simd_and(tmp1002, bytetest_88_88);
        struct_Lo.cc = simd_or(tmp1004, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_a0 = simd_andc(bytetest_a0_af, tmp90);
        tmp1005 = simd_not(tmp126);
        tmp1006 = simd_or(simd_and(basis_bits.bit_2, tmp1005), simd_andc(tmp119, basis_bits.bit_2));
        bytetest_8a_b5 = simd_and(bytetest_80_bf, tmp1006);
        tmp1007 = simd_and(tmp1002, bytetest_8a_b5);
        struct_Lo.cc = simd_or(tmp1007, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_a0 = simd_andc(bytetest_a0_af, tmp90);
        bytetest_b7_b8 = simd_and(bytetest_b0_bf, tmp353);
        tmp1008 = simd_and(tmp1002, bytetest_b7_b8);
        struct_Lo.cc = simd_or(tmp1008, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_a0 = simd_andc(bytetest_a0_af, tmp90);
        bytetest_bc_bc = simd_and(bytetest_b0_bf, tmp89);
        tmp1009 = simd_and(tmp1002, bytetest_bc_bc);
        struct_Lo.cc = simd_or(tmp1009, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_a1 = simd_and(bytetest_a0_af, tmp115);
        bytetest_80_95 = simd_andc(tmp125, tmp126);
        tmp1010 = simd_and(tmp942, bytetest_a1);
        carryQ.cq[171] = carryout2carry(pablo_blk_Advance(tmp1010, carryQ.get_carry_in(171), tmp1011));
        tmp1012 = simd_and(tmp1011, bytetest_80_95);
        bytetest_a0 = simd_andc(bytetest_a0_af, tmp90);
        bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp87);
        tmp1013 = simd_and(tmp1002, bytetest_bf_bf);
        tmp1014 = simd_or(tmp1013, tmp1012);
        struct_Lo.cc = simd_or(tmp1014, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_a4 = simd_and(bytetest_a0_af, tmp35);
        bytetest_80_95 = simd_andc(tmp125, tmp126);
        tmp1015 = simd_and(tmp942, bytetest_a4);
        carryQ.cq[172] = carryout2carry(pablo_blk_Advance(tmp1015, carryQ.get_carry_in(172), tmp1016));
        tmp1017 = simd_and(tmp1016, bytetest_80_95);
        struct_Lo.cc = simd_or(tmp1017, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_a4 = simd_and(bytetest_a0_af, tmp35);
        bytetest_a0_b9 = simd_andc(bytetest_a0_bf, tmp144);
        tmp1018 = simd_and(tmp1016, bytetest_a0_b9);
        struct_Lo.cc = simd_or(tmp1018, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_a6 = simd_and(bytetest_a0_af, tmp21);
        tmp1019 = simd_and(basis_bits.bit_2, tmp157);
        bytetest_80_b7 = simd_andc(bytetest_80_bf, tmp1019);
        tmp1020 = simd_and(tmp942, bytetest_a6);
        carryQ.cq[173] = carryout2carry(pablo_blk_Advance(tmp1020, carryQ.get_carry_in(173), tmp1021));
        tmp1022 = simd_and(tmp1021, bytetest_80_b7);
        struct_Lo.cc = simd_or(tmp1022, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_a6 = simd_and(bytetest_a0_af, tmp21);
        bytetest_be_bf = simd_and(bytetest_b0_bf, tmp63);
        tmp1023 = simd_and(tmp1021, bytetest_be_bf);
        struct_Lo.cc = simd_or(tmp1023, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_a8 = simd_and(bytetest_a0_af, tmp50);
        bytetest_80_80 = simd_andc(bytetest_80_8f, tmp90);
        tmp1024 = simd_and(tmp942, bytetest_a8);
        carryQ.cq[174] = carryout2carry(pablo_blk_Advance(tmp1024, carryQ.get_carry_in(174), tmp1025));
        tmp1026 = simd_and(tmp1025, bytetest_80_80);
        struct_Lo.cc = simd_or(tmp1026, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_a8 = simd_and(bytetest_a0_af, tmp50);
        bytetest_90_93 = simd_andc(bytetest_90_9f, tmp4);
        tmp1027 = simd_and(tmp1025, bytetest_90_93);
        struct_Lo.cc = simd_or(tmp1027, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_a8 = simd_and(bytetest_a0_af, tmp50);
        tmp1028 = simd_and(bytetest_90_9f, tmp20);
        bytetest_95_97 = simd_and(tmp1028, tmp34);
        tmp1029 = simd_and(tmp1025, bytetest_95_97);
        struct_Lo.cc = simd_or(tmp1029, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_a8 = simd_and(bytetest_a0_af, tmp50);
        tmp1030 = simd_or(simd_and(basis_bits.bit_2, tmp561), simd_andc(tmp133, basis_bits.bit_2));
        bytetest_99_b3 = simd_and(bytetest_80_bf, tmp1030);
        tmp1031 = simd_and(tmp1025, bytetest_99_b3);
        struct_Lo.cc = simd_or(tmp1031, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_a9 = simd_and(bytetest_a0_af, tmp55);
        bytetest_a0_bc = simd_andc(bytetest_a0_bf, tmp531);
        tmp1032 = simd_and(tmp942, bytetest_a9);
        carryQ.cq[175] = carryout2carry(pablo_blk_Advance(tmp1032, carryQ.get_carry_in(175), tmp1033));
        tmp1034 = simd_and(tmp1033, bytetest_a0_bc);
        struct_Lo.cc = simd_or(tmp1034, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_ac = simd_and(bytetest_a0_af, tmp89);
        bytetest_80_b5 = simd_andc(bytetest_80_bf, tmp525);
        tmp1035 = simd_and(tmp942, bytetest_ac);
        carryQ.cq[176] = carryout2carry(pablo_blk_Advance(tmp1035, carryQ.get_carry_in(176), tmp1036));
        tmp1037 = simd_and(tmp1036, bytetest_80_b5);
        struct_Lo.cc = simd_or(tmp1037, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_ad = simd_and(bytetest_a0_af, tmp107);
        bytetest_80_95 = simd_andc(tmp125, tmp126);
        tmp1038 = simd_and(tmp942, bytetest_ad);
        carryQ.cq[177] = carryout2carry(pablo_blk_Advance(tmp1038, carryQ.get_carry_in(177), tmp1039));
        tmp1040 = simd_and(tmp1039, bytetest_80_95);
        struct_Lo.cc = simd_or(tmp1040, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_ad = simd_and(bytetest_a0_af, tmp107);
        bytetest_a0_b2 = simd_andc(bytetest_a0_bf, tmp174);
        tmp1041 = simd_and(tmp1039, bytetest_a0_b2);
        struct_Lo.cc = simd_or(tmp1041, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_b1 = simd_and(bytetest_b0_bf, tmp115);
        bytetest_80_88 = simd_andc(bytetest_80_8f, tmp132);
        tmp1042 = simd_and(tmp942, bytetest_b1);
        carryQ.cq[178] = carryout2carry(pablo_blk_Advance(tmp1042, carryQ.get_carry_in(178), tmp1043));
        tmp1044 = simd_and(tmp1043, bytetest_80_88);
        bytetest_b0 = simd_andc(bytetest_b0_bf, tmp90);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1045 = simd_and(tmp942, bytetest_b0);
        carryQ.cq[179] = carryout2carry(pablo_blk_Advance(tmp1045, carryQ.get_carry_in(179), tmp1046));
        tmp1047 = simd_and(tmp1046, bytetest_80_bf);
        tmp1048 = simd_or(tmp1047, tmp1044);
        struct_Lo.cc = simd_or(tmp1048, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_91 = simd_and(bytetest_90_9f, tmp115);
        bytetest_80 = simd_andc(bytetest_80_8f, tmp90);
        tmp1049 = simd_or(simd_and(basis_bits.bit_2, tmp517), simd_andc(tmp572, basis_bits.bit_2));
        bytetest_83_b7 = simd_and(bytetest_80_bf, tmp1049);
        tmp1050 = simd_and(tmp940, bytetest_91);
        carryQ.cq[180] = carryout2carry(pablo_blk_Advance(tmp1050, carryQ.get_carry_in(180), tmp1051));
        tmp1052 = simd_and(tmp1051, bytetest_80);
        carryQ.cq[181] = carryout2carry(pablo_blk_Advance(tmp1052, carryQ.get_carry_in(181), tmp1053));
        tmp1054 = simd_and(tmp1053, bytetest_83_b7);
        struct_Lo.cc = simd_or(tmp1054, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_91 = simd_and(bytetest_90_9f, tmp115);
        bytetest_82 = simd_and(bytetest_80_8f, tmp6);
        tmp1055 = simd_or(simd_and(basis_bits.bit_2, tmp94), simd_andc(tmp572, basis_bits.bit_2));
        bytetest_83_af = simd_and(bytetest_80_bf, tmp1055);
        tmp1056 = simd_and(tmp1051, bytetest_82);
        carryQ.cq[182] = carryout2carry(pablo_blk_Advance(tmp1056, carryQ.get_carry_in(182), tmp1057));
        tmp1058 = simd_and(tmp1057, bytetest_83_af);
        struct_Lo.cc = simd_or(tmp1058, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_91 = simd_and(bytetest_90_9f, tmp115);
        bytetest_83 = simd_and(bytetest_80_8f, tmp248);
        tmp1059 = simd_or(simd_and(basis_bits.bit_2, tmp172), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
        bytetest_90_a8 = simd_and(bytetest_80_bf, tmp1059);
        tmp1060 = simd_and(tmp1051, bytetest_83);
        carryQ.cq[183] = carryout2carry(pablo_blk_Advance(tmp1060, carryQ.get_carry_in(183), tmp1061));
        tmp1062 = simd_and(tmp1061, bytetest_90_a8);
        struct_Lo.cc = simd_or(tmp1062, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_91 = simd_and(bytetest_90_9f, tmp115);
        bytetest_84 = simd_and(bytetest_80_8f, tmp35);
        tmp1063 = simd_or(simd_and(basis_bits.bit_2, tmp947), simd_andc(tmp572, basis_bits.bit_2));
        bytetest_83_a6 = simd_and(bytetest_80_bf, tmp1063);
        tmp1064 = simd_and(tmp1051, bytetest_84);
        carryQ.cq[184] = carryout2carry(pablo_blk_Advance(tmp1064, carryQ.get_carry_in(184), tmp1065));
        tmp1066 = simd_and(tmp1065, bytetest_83_a6);
        struct_Lo.cc = simd_or(tmp1066, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_91 = simd_and(bytetest_90_9f, tmp115);
        bytetest_86 = simd_and(bytetest_80_8f, tmp21);
        tmp1067 = simd_or(simd_and(basis_bits.bit_2, tmp772), simd_andc(tmp572, basis_bits.bit_2));
        bytetest_83_b2 = simd_and(bytetest_80_bf, tmp1067);
        tmp1068 = simd_and(tmp1051, bytetest_86);
        carryQ.cq[185] = carryout2carry(pablo_blk_Advance(tmp1068, carryQ.get_carry_in(185), tmp1069));
        tmp1070 = simd_and(tmp1069, bytetest_83_b2);
        struct_Lo.cc = simd_or(tmp1070, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_91 = simd_and(bytetest_90_9f, tmp115);
        bytetest_87 = simd_and(bytetest_80_8f, tmp27);
        bytetest_81_84 = simd_and(bytetest_80_87, tmp210);
        tmp1071 = simd_and(tmp1051, bytetest_87);
        carryQ.cq[186] = carryout2carry(pablo_blk_Advance(tmp1071, carryQ.get_carry_in(186), tmp1072));
        tmp1073 = simd_and(tmp1072, bytetest_81_84);
        struct_Lo.cc = simd_or(tmp1073, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_91 = simd_and(bytetest_90_9f, tmp115);
        bytetest_9a = simd_and(bytetest_90_9f, tmp11);
        bytetest_80_aa = simd_andc(bytetest_80_bf, tmp386);
        tmp1074 = simd_and(tmp1051, bytetest_9a);
        carryQ.cq[187] = carryout2carry(pablo_blk_Advance(tmp1074, carryQ.get_carry_in(187), tmp1075));
        tmp1076 = simd_and(tmp1075, bytetest_80_aa);
        struct_Lo.cc = simd_or(tmp1076, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_92 = simd_and(bytetest_90_9f, tmp6);
        bytetest_8d = simd_and(bytetest_80_8f, tmp107);
        tmp1077 = simd_and(basis_bits.bit_2, tmp478);
        bytetest_80_ae = simd_andc(bytetest_80_bf, tmp1077);
        tmp1078 = simd_and(tmp940, bytetest_92);
        carryQ.cq[188] = carryout2carry(pablo_blk_Advance(tmp1078, carryQ.get_carry_in(188), tmp1079));
        tmp1080 = simd_and(tmp1079, bytetest_8d);
        carryQ.cq[189] = carryout2carry(pablo_blk_Advance(tmp1080, carryQ.get_carry_in(189), tmp1081));
        tmp1082 = simd_and(tmp1081, bytetest_80_ae);
        bytetest_80_8c = simd_andc(bytetest_80_8f, tmp490);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1083 = simd_and(tmp1079, bytetest_80_8c);
        carryQ.cq[190] = carryout2carry(pablo_blk_Advance(tmp1083, carryQ.get_carry_in(190), tmp1084));
        tmp1085 = simd_and(tmp1084, bytetest_80_bf);
        tmp1086 = simd_or(tmp1085, tmp1082);
        struct_Lo.cc = simd_or(tmp1086, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_93 = simd_and(bytetest_90_9f, tmp248);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_80_ae = simd_andc(bytetest_80_bf, tmp1077);
        tmp1087 = simd_and(tmp940, bytetest_93);
        carryQ.cq[191] = carryout2carry(pablo_blk_Advance(tmp1087, carryQ.get_carry_in(191), tmp1088));
        tmp1089 = simd_and(tmp1088, bytetest_90);
        carryQ.cq[192] = carryout2carry(pablo_blk_Advance(tmp1089, carryQ.get_carry_in(192), tmp1090));
        tmp1091 = simd_and(tmp1090, bytetest_80_ae);
        bytetest_80_8f = simd_andc(bytetest_80_bf, tmp2);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1092 = simd_and(tmp1088, bytetest_80_8f);
        carryQ.cq[193] = carryout2carry(pablo_blk_Advance(tmp1092, carryQ.get_carry_in(193), tmp1093));
        tmp1094 = simd_and(tmp1093, bytetest_80_bf);
        tmp1095 = simd_or(tmp1094, tmp1091);
        struct_Lo.cc = simd_or(tmp1095, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_96 = simd_and(bytetest_90_9f, tmp21);
        bytetest_a8 = simd_and(bytetest_a0_af, tmp50);
        tmp1096 = simd_and(basis_bits.bit_2, tmp133);
        bytetest_80_b8 = simd_andc(bytetest_80_bf, tmp1096);
        tmp1097 = simd_and(tmp940, bytetest_96);
        carryQ.cq[194] = carryout2carry(pablo_blk_Advance(tmp1097, carryQ.get_carry_in(194), tmp1098));
        tmp1099 = simd_and(tmp1098, bytetest_a8);
        carryQ.cq[195] = carryout2carry(pablo_blk_Advance(tmp1099, carryQ.get_carry_in(195), tmp1100));
        tmp1101 = simd_and(tmp1100, bytetest_80_b8);
        bytetest_a0_a7 = simd_andc(bytetest_a0_af, basis_bits.bit_4);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1102 = simd_and(tmp1098, bytetest_a0_a7);
        carryQ.cq[196] = carryout2carry(pablo_blk_Advance(tmp1102, carryQ.get_carry_in(196), tmp1103));
        tmp1104 = simd_and(tmp1103, bytetest_80_bf);
        tmp1105 = simd_or(tmp1104, tmp1101);
        struct_Lo.cc = simd_or(tmp1105, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_96 = simd_and(bytetest_90_9f, tmp21);
        bytetest_bd = simd_and(bytetest_b0_bf, tmp107);
        bytetest_80_84 = simd_andc(bytetest_80_87, tmp140);
        tmp1106 = simd_and(tmp1098, bytetest_bd);
        carryQ.cq[197] = carryout2carry(pablo_blk_Advance(tmp1106, carryQ.get_carry_in(197), tmp1107));
        tmp1108 = simd_and(tmp1107, bytetest_80_84);
        bytetest_bc = simd_and(bytetest_b0_bf, tmp89);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1109 = simd_and(tmp1098, bytetest_bc);
        carryQ.cq[198] = carryout2carry(pablo_blk_Advance(tmp1109, carryQ.get_carry_in(198), tmp1110));
        tmp1111 = simd_and(tmp1110, bytetest_80_bf);
        tmp1112 = simd_or(tmp1111, tmp1108);
        struct_Lo.cc = simd_or(tmp1112, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_96 = simd_and(bytetest_90_9f, tmp21);
        bytetest_bd = simd_and(bytetest_b0_bf, tmp107);
        bytetest_90_90 = simd_andc(bytetest_90_9f, tmp90);
        tmp1113 = simd_and(tmp1107, bytetest_90_90);
        struct_Lo.cc = simd_or(tmp1113, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9b = simd_and(bytetest_90_9f, tmp23);
        bytetest_80 = simd_andc(bytetest_80_8f, tmp90);
        bytetest_80_81 = simd_andc(bytetest_80_8f, tmp95);
        tmp1114 = simd_and(tmp940, bytetest_9b);
        carryQ.cq[199] = carryout2carry(pablo_blk_Advance(tmp1114, carryQ.get_carry_in(199), tmp1115));
        tmp1116 = simd_and(tmp1115, bytetest_80);
        carryQ.cq[200] = carryout2carry(pablo_blk_Advance(tmp1116, carryQ.get_carry_in(200), tmp1117));
        tmp1118 = simd_and(tmp1117, bytetest_80_81);
        struct_Lo.cc = simd_or(tmp1118, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp50);
        bytetest_80_83 = simd_andc(bytetest_80_8f, tmp4);
        tmp1119 = simd_and(tmp940, bytetest_9e);
        carryQ.cq[201] = carryout2carry(pablo_blk_Advance(tmp1119, carryQ.get_carry_in(201), tmp1120));
        tmp1121 = simd_and(tmp1120, bytetest_b8);
        carryQ.cq[202] = carryout2carry(pablo_blk_Advance(tmp1121, carryQ.get_carry_in(202), tmp1122));
        tmp1123 = simd_and(tmp1122, bytetest_80_83);
        struct_Lo.cc = simd_or(tmp1123, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp50);
        bytetest_85_9f = simd_and(tmp125, tmp562);
        tmp1124 = simd_and(tmp1122, bytetest_85_9f);
        struct_Lo.cc = simd_or(tmp1124, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp50);
        tmp1125 = simd_andc(bytetest_a0_af, tmp4);
        bytetest_a1_a2 = simd_and(tmp1125, tmp205);
        tmp1126 = simd_and(tmp1122, bytetest_a1_a2);
        struct_Lo.cc = simd_or(tmp1126, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp50);
        bytetest_a4_a4 = simd_and(bytetest_a0_af, tmp35);
        tmp1127 = simd_and(tmp1122, bytetest_a4_a4);
        struct_Lo.cc = simd_or(tmp1127, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp50);
        bytetest_a7_a7 = simd_and(bytetest_a0_af, tmp27);
        tmp1128 = simd_and(tmp1122, bytetest_a7_a7);
        struct_Lo.cc = simd_or(tmp1128, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp50);
        tmp1129 = simd_not(tmp173);
        tmp1130 = simd_or(simd_and(basis_bits.bit_3, tmp1129), simd_andc(tmp132, basis_bits.bit_3));
        bytetest_a9_b2 = simd_and(bytetest_a0_bf, tmp1130);
        tmp1131 = simd_and(tmp1122, bytetest_a9_b2);
        struct_Lo.cc = simd_or(tmp1131, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp50);
        bytetest_b4_b7 = simd_and(bytetest_b0_bf, tmp20);
        tmp1132 = simd_and(tmp1122, bytetest_b4_b7);
        struct_Lo.cc = simd_or(tmp1132, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp50);
        bytetest_b9_b9 = simd_and(bytetest_b0_bf, tmp55);
        tmp1133 = simd_and(tmp1122, bytetest_b9_b9);
        struct_Lo.cc = simd_or(tmp1133, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp50);
        bytetest_bb_bb = simd_and(bytetest_b0_bf, tmp23);
        tmp1134 = simd_and(tmp1122, bytetest_bb_bb);
        struct_Lo.cc = simd_or(tmp1134, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp55);
        bytetest_82_82 = simd_and(bytetest_80_8f, tmp6);
        tmp1135 = simd_and(tmp1120, bytetest_b9);
        carryQ.cq[203] = carryout2carry(pablo_blk_Advance(tmp1135, carryQ.get_carry_in(203), tmp1136));
        tmp1137 = simd_and(tmp1136, bytetest_82_82);
        struct_Lo.cc = simd_or(tmp1137, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp55);
        bytetest_87_87 = simd_and(bytetest_80_8f, tmp27);
        tmp1138 = simd_and(tmp1136, bytetest_87_87);
        struct_Lo.cc = simd_or(tmp1138, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp55);
        bytetest_89_89 = simd_and(bytetest_80_8f, tmp55);
        tmp1139 = simd_and(tmp1136, bytetest_89_89);
        struct_Lo.cc = simd_or(tmp1139, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp55);
        bytetest_8b_8b = simd_and(bytetest_80_8f, tmp23);
        tmp1140 = simd_and(tmp1136, bytetest_8b_8b);
        struct_Lo.cc = simd_or(tmp1140, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp55);
        bytetest_8d_8f = simd_and(tmp588, tmp34);
        tmp1141 = simd_and(tmp1136, bytetest_8d_8f);
        struct_Lo.cc = simd_or(tmp1141, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp55);
        bytetest_91_92 = simd_and(bytetest_90_93, tmp205);
        tmp1142 = simd_and(tmp1136, bytetest_91_92);
        struct_Lo.cc = simd_or(tmp1142, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp55);
        bytetest_94_94 = simd_and(bytetest_90_9f, tmp35);
        tmp1143 = simd_and(tmp1136, bytetest_94_94);
        struct_Lo.cc = simd_or(tmp1143, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp55);
        bytetest_97_97 = simd_and(bytetest_90_9f, tmp27);
        tmp1144 = simd_and(tmp1136, bytetest_97_97);
        struct_Lo.cc = simd_or(tmp1144, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp55);
        bytetest_99_99 = simd_and(bytetest_90_9f, tmp55);
        tmp1145 = simd_and(tmp1136, bytetest_99_99);
        struct_Lo.cc = simd_or(tmp1145, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp55);
        bytetest_9b_9b = simd_and(bytetest_90_9f, tmp23);
        tmp1146 = simd_and(tmp1136, bytetest_9b_9b);
        struct_Lo.cc = simd_or(tmp1146, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp55);
        bytetest_9d_9d = simd_and(bytetest_90_9f, tmp107);
        tmp1147 = simd_and(tmp1136, bytetest_9d_9d);
        struct_Lo.cc = simd_or(tmp1147, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp55);
        bytetest_9f_9f = simd_and(bytetest_90_9f, tmp87);
        tmp1148 = simd_and(tmp1136, bytetest_9f_9f);
        struct_Lo.cc = simd_or(tmp1148, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp55);
        bytetest_a1_a2 = simd_and(tmp1125, tmp205);
        tmp1149 = simd_and(tmp1136, bytetest_a1_a2);
        struct_Lo.cc = simd_or(tmp1149, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp55);
        bytetest_a4_a4 = simd_and(bytetest_a0_af, tmp35);
        tmp1150 = simd_and(tmp1136, bytetest_a4_a4);
        struct_Lo.cc = simd_or(tmp1150, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp55);
        bytetest_a7_aa = simd_and(bytetest_a0_af, tmp745);
        tmp1151 = simd_and(tmp1136, bytetest_a7_aa);
        struct_Lo.cc = simd_or(tmp1151, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp55);
        tmp1152 = simd_or(simd_and(basis_bits.bit_3, tmp1129), simd_andc(tmp62, basis_bits.bit_3));
        bytetest_ac_b2 = simd_and(bytetest_a0_bf, tmp1152);
        tmp1153 = simd_and(tmp1136, bytetest_ac_b2);
        struct_Lo.cc = simd_or(tmp1153, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp55);
        bytetest_b4_b7 = simd_and(bytetest_b0_bf, tmp20);
        tmp1154 = simd_and(tmp1136, bytetest_b4_b7);
        struct_Lo.cc = simd_or(tmp1154, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp55);
        bytetest_b9_bc = simd_and(bytetest_b8_bf, tmp210);
        tmp1155 = simd_and(tmp1136, bytetest_b9_bc);
        struct_Lo.cc = simd_or(tmp1155, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp55);
        bytetest_be_be = simd_and(bytetest_b0_bf, tmp99);
        tmp1156 = simd_and(tmp1136, bytetest_be_be);
        struct_Lo.cc = simd_or(tmp1156, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp11);
        bytetest_80_89 = simd_andc(bytetest_80_8f, tmp118);
        tmp1157 = simd_and(tmp1120, bytetest_ba);
        carryQ.cq[204] = carryout2carry(pablo_blk_Advance(tmp1157, carryQ.get_carry_in(204), tmp1158));
        tmp1159 = simd_and(tmp1158, bytetest_80_89);
        struct_Lo.cc = simd_or(tmp1159, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp11);
        tmp1160 = simd_not(tmp62);
        tmp1161 = simd_or(simd_and(basis_bits.bit_3, tmp1160), simd_andc(tmp41, basis_bits.bit_3));
        bytetest_8b_9b = simd_and(tmp125, tmp1161);
        tmp1162 = simd_and(tmp1158, bytetest_8b_9b);
        struct_Lo.cc = simd_or(tmp1162, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp11);
        bytetest_a1_a3 = simd_and(tmp1125, tmp34);
        tmp1163 = simd_and(tmp1158, bytetest_a1_a3);
        struct_Lo.cc = simd_or(tmp1163, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp11);
        bytetest_a5_a9 = simd_and(bytetest_a0_af, tmp227);
        tmp1164 = simd_and(tmp1158, bytetest_a5_a9);
        struct_Lo.cc = simd_or(tmp1164, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp11);
        bytetest_ab_bb = simd_and(bytetest_a0_bf, tmp1161);
        tmp1165 = simd_and(tmp1158, bytetest_ab_bb);
        struct_Lo.cc = simd_or(tmp1165, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_aa = simd_and(bytetest_a0_af, tmp11);
        bytetest_9b = simd_and(bytetest_90_9f, tmp23);
        bytetest_80_96 = simd_andc(tmp125, tmp552);
        tmp1166 = simd_and(tmp940, bytetest_aa);
        carryQ.cq[205] = carryout2carry(pablo_blk_Advance(tmp1166, carryQ.get_carry_in(205), tmp1167));
        tmp1168 = simd_and(tmp1167, bytetest_9b);
        carryQ.cq[206] = carryout2carry(pablo_blk_Advance(tmp1168, carryQ.get_carry_in(206), tmp1169));
        tmp1170 = simd_and(tmp1169, bytetest_80_96);
        bytetest_80_9a = simd_andc(tmp125, tmp307);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1171 = simd_and(tmp1167, bytetest_80_9a);
        carryQ.cq[207] = carryout2carry(pablo_blk_Advance(tmp1171, carryQ.get_carry_in(207), tmp1172));
        tmp1173 = simd_and(tmp1172, bytetest_80_bf);
        tmp1174 = simd_or(tmp1173, tmp1170);
        bytetest_a0_a9 = simd_andc(bytetest_a0_af, tmp118);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1175 = simd_and(tmp940, bytetest_a0_a9);
        carryQ.cq[208] = carryout2carry(pablo_blk_Advance(tmp1175, carryQ.get_carry_in(208), tmp1176));
        tmp1177 = simd_and(tmp1176, bytetest_80_bf);
        carryQ.cq[209] = carryout2carry(pablo_blk_Advance(tmp1177, carryQ.get_carry_in(209), tmp1178));
        tmp1179 = simd_and(tmp1178, bytetest_80_bf);
        tmp1180 = simd_or(tmp1179, tmp1174);
        struct_Lo.cc = simd_or(tmp1180, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_ab = simd_and(bytetest_a0_af, tmp23);
        bytetest_9c = simd_and(bytetest_90_9f, tmp89);
        bytetest_80_b4 = simd_andc(bytetest_80_bf, tmp458);
        tmp1181 = simd_and(tmp940, bytetest_ab);
        carryQ.cq[210] = carryout2carry(pablo_blk_Advance(tmp1181, carryQ.get_carry_in(210), tmp1182));
        tmp1183 = simd_and(tmp1182, bytetest_9c);
        carryQ.cq[211] = carryout2carry(pablo_blk_Advance(tmp1183, carryQ.get_carry_in(211), tmp1184));
        tmp1185 = simd_and(tmp1184, bytetest_80_b4);
        bytetest_80_9b = simd_andc(tmp125, tmp840);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1186 = simd_and(tmp1182, bytetest_80_9b);
        carryQ.cq[212] = carryout2carry(pablo_blk_Advance(tmp1186, carryQ.get_carry_in(212), tmp1187));
        tmp1188 = simd_and(tmp1187, bytetest_80_bf);
        tmp1189 = simd_or(tmp1188, tmp1185);
        bytetest_aa = simd_and(bytetest_a0_af, tmp11);
        tmp1190 = simd_or(basis_bits.bit_2, tmp840);
        bytetest_9c_bf = simd_and(bytetest_80_bf, tmp1190);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1191 = simd_and(tmp1167, bytetest_9c_bf);
        carryQ.cq[213] = carryout2carry(pablo_blk_Advance(tmp1191, carryQ.get_carry_in(213), tmp1192));
        tmp1193 = simd_and(tmp1192, bytetest_80_bf);
        tmp1194 = simd_or(tmp1193, tmp1189);
        struct_Lo.cc = simd_or(tmp1194, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_ab = simd_and(bytetest_a0_af, tmp23);
        bytetest_a0 = simd_andc(bytetest_a0_af, tmp90);
        bytetest_80_9d = simd_andc(tmp125, tmp824);
        tmp1195 = simd_and(tmp1182, bytetest_a0);
        carryQ.cq[214] = carryout2carry(pablo_blk_Advance(tmp1195, carryQ.get_carry_in(214), tmp1196));
        tmp1197 = simd_and(tmp1196, bytetest_80_9d);
        tmp1198 = simd_and(bytetest_90_9f, tmp62);
        bytetest_9d_9f = simd_and(tmp1198, tmp34);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1199 = simd_and(tmp1182, bytetest_9d_9f);
        carryQ.cq[215] = carryout2carry(pablo_blk_Advance(tmp1199, carryQ.get_carry_in(215), tmp1200));
        tmp1201 = simd_and(tmp1200, bytetest_80_bf);
        tmp1202 = simd_or(tmp1201, tmp1197);
        struct_Lo.cc = simd_or(tmp1202, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_af = simd_and(bytetest_a0_af, tmp87);
        bytetest_a8 = simd_and(bytetest_a0_af, tmp50);
        bytetest_80_9d = simd_andc(tmp125, tmp824);
        tmp1203 = simd_and(tmp940, bytetest_af);
        carryQ.cq[216] = carryout2carry(pablo_blk_Advance(tmp1203, carryQ.get_carry_in(216), tmp1204));
        tmp1205 = simd_and(tmp1204, bytetest_a8);
        carryQ.cq[217] = carryout2carry(pablo_blk_Advance(tmp1205, carryQ.get_carry_in(217), tmp1206));
        tmp1207 = simd_and(tmp1206, bytetest_80_9d);
        bytetest_a0_a7 = simd_andc(bytetest_a0_af, basis_bits.bit_4);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1208 = simd_and(tmp1204, bytetest_a0_a7);
        carryQ.cq[218] = carryout2carry(pablo_blk_Advance(tmp1208, carryQ.get_carry_in(218), tmp1209));
        tmp1210 = simd_and(tmp1209, bytetest_80_bf);
        tmp1211 = simd_or(tmp1210, tmp1207);
        struct_Lo.cc = simd_or(tmp1211, struct_Lo.cc);
        carryQ.CarryQ_Adjust(219);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Lo & struct_Lo, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_c2, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, bytetest_aa_aa, tmp12, tmp13, tmp14, tmp15, tmp16;
		BitBlock tmp17, tmp18, bytetest_ba_ba, tmp19, tmp20, tmp21, bytetest_c6, tmp22;
		BitBlock tmp23, bytetest_bb_bb, tmp24, tmp25, tmp26, tmp27, bytetest_c7, tmp28;
		BitBlock bytetest_80_83, tmp29, tmp30, tmp31, bytetest_ca, tmp32, tmp33, tmp34;
		BitBlock tmp35, bytetest_94_94, tmp36, tmp37, tmp38, tmp39, bytetest_d7, tmp40;
		BitBlock tmp41, tmp42, tmp43, tmp44, bytetest_90_aa, tmp45, tmp46, tmp47;
		BitBlock tmp48, bytetest_b0_b2, tmp49, tmp50, bytetest_d8, bytetest_a0_bf;
		BitBlock tmp51, tmp52, tmp53, tmp54, tmp55, bytetest_d9, tmp56, tmp57, tmp58;
		BitBlock bytetest_81_8a, tmp59, tmp60, tmp61, tmp62, tmp63, bytetest_ae_af;
		BitBlock tmp64, bytetest_db, tmp65, tmp66, bytetest_80_93, tmp67, tmp68, tmp69;
		BitBlock bytetest_da, bytetest_80_bf, tmp70, tmp71, tmp72, tmp73, tmp74;
		BitBlock bytetest_b1_bf, tmp75, tmp76, tmp77, tmp78, tmp79, bytetest_95_95;
		BitBlock tmp80, tmp81, tmp82, tmp83, tmp84, tmp85, bytetest_ba_bc, tmp86;
		BitBlock tmp87, bytetest_bf_bf, tmp88, tmp89, bytetest_dc, tmp90;
		BitBlock bytetest_90_90, tmp91, tmp92, tmp93, tmp94, tmp95, tmp96, tmp97;
		BitBlock bytetest_92_af, tmp98, tmp99, bytetest_de, tmp100, tmp101, tmp102;
		BitBlock tmp103, bytetest_80_a5, tmp104, tmp105, tmp106, tmp107, bytetest_dd;
		BitBlock tmp108, tmp109, tmp110, bytetest_8d_bf, tmp111, tmp112, tmp113;
		BitBlock tmp114, tmp115, bytetest_b1_b1, tmp116, bytetest_df, tmp117, tmp118;
		BitBlock tmp119, tmp120, bytetest_8a_aa, tmp121, tmp122, tmp123, tmp124;
		BitBlock bytetest_e0, bytetest_a0, tmp125, tmp126, bytetest_80_95, tmp127;
		BitBlock tmp128, tmp129, tmp130, tmp131, bytetest_a1, tmp132, tmp133;
		BitBlock bytetest_80_98, tmp134, tmp135, tmp136, bytetest_a2, bytetest_a0_a0;
		BitBlock tmp137, tmp138, tmp139, tmp140, tmp141, tmp142, bytetest_a2_ac;
		BitBlock tmp143, bytetest_a4, tmp144, tmp145, tmp146, tmp147, bytetest_84_b9;
		BitBlock tmp148, tmp149, tmp150, bytetest_bd_bd, tmp151, bytetest_a5, tmp152;
		BitBlock tmp153, tmp154, tmp155, tmp156, tmp157, tmp158, bytetest_98_a1;
		BitBlock tmp159, tmp160, bytetest_b2_b7, tmp161, bytetest_b9_bf, tmp162;
		BitBlock bytetest_a6, tmp163, tmp164, bytetest_85_8c, tmp165, tmp166, tmp167;
		BitBlock tmp168, tmp169, bytetest_8f_90, tmp170, tmp171, tmp172, tmp173;
		BitBlock tmp174, tmp175, bytetest_93_a8, tmp176, tmp177, tmp178;
		BitBlock bytetest_aa_b0, tmp179, bytetest_b2_b2, tmp180, tmp181, tmp182;
		BitBlock bytetest_b6_b9, tmp183, tmp184, bytetest_a7, bytetest_8e_8e, tmp185;
		BitBlock tmp186, tmp187, tmp188, bytetest_9c_9d, tmp189, tmp190, tmp191;
		BitBlock bytetest_9f_a1, tmp192, bytetest_b0_b1, tmp193, bytetest_a8, tmp194;
		BitBlock bytetest_85_8a, tmp195, tmp196, tmp197, tmp198, tmp199, tmp200;
		BitBlock tmp201, bytetest_b2_b3, tmp202, tmp203, tmp204, tmp205;
		BitBlock bytetest_b5_b6, tmp206, tmp207, bytetest_b8_b9, tmp208, bytetest_a9;
		BitBlock tmp209, tmp210, bytetest_99_9c, tmp211, tmp212, tmp213;
		BitBlock bytetest_9e_9e, tmp214, bytetest_b2_b4, tmp215, bytetest_aa, tmp216;
		BitBlock tmp217, bytetest_85_8d, tmp218, tmp219, tmp220, tmp221, tmp222;
		BitBlock bytetest_8f_91, tmp223, tmp224, tmp225, tmp226, tmp227;
		BitBlock bytetest_b5_b9, tmp228, tmp229, bytetest_ab, tmp230, tmp231, tmp232;
		BitBlock bytetest_a0_a1, tmp233, bytetest_ac, tmp234, tmp235, tmp236, tmp237;
		BitBlock tmp238, tmp239, tmp240, tmp241, tmp242, bytetest_ad, tmp243, tmp244;
		BitBlock tmp245, tmp246, tmp247, bytetest_ae, tmp248, bytetest_83_83, tmp249;
		BitBlock tmp250, tmp251, tmp252, tmp253, bytetest_8e_90, tmp254, tmp255;
		BitBlock tmp256, tmp257, bytetest_92_95, tmp258, tmp259, bytetest_99_9a;
		BitBlock tmp260, bytetest_9c_9c, tmp261, bytetest_9e_9f, tmp262, tmp263;
		BitBlock tmp264, bytetest_a3_a4, tmp265, tmp266, bytetest_a8_aa, tmp267;
		BitBlock tmp268, tmp269, bytetest_ae_b9, tmp270, bytetest_af, tmp271, tmp272;
		BitBlock tmp273, bytetest_b0, tmp274, tmp275, tmp276, tmp277, tmp278;
		BitBlock bytetest_92_a8, tmp279, tmp280, tmp281, bytetest_aa_b3, tmp282;
		BitBlock tmp283, tmp284, bytetest_b1, bytetest_98_99, tmp285, tmp286, tmp287;
		BitBlock tmp288, bytetest_b2, tmp289, tmp290, tmp291, tmp292, tmp293, tmp294;
		BitBlock tmp295, tmp296, bytetest_b3, tmp297, tmp298, tmp299, tmp300, tmp301;
		BitBlock bytetest_b1_b2, tmp302, bytetest_b4, tmp303, tmp304, tmp305, tmp306;
		BitBlock tmp307, tmp308, tmp309, bytetest_92_ba, tmp310, tmp311, bytetest_b5;
		BitBlock tmp312, tmp313, tmp314, tmp315, bytetest_ba_bf, tmp316, bytetest_b6;
		BitBlock tmp317, tmp318, tmp319, tmp320, tmp321, bytetest_85_96, tmp322;
		BitBlock tmp323, tmp324, tmp325, tmp326, bytetest_9a_b1, tmp327, tmp328;
		BitBlock tmp329, bytetest_b3_bb, tmp330, tmp331, bytetest_b7, tmp332;
		BitBlock bytetest_80_86, tmp333, tmp334, tmp335, bytetest_b8, tmp336, tmp337;
		BitBlock tmp338, tmp339, bytetest_81_b0, tmp340, tmp341, tmp342, tmp343;
		BitBlock bytetest_b9, bytetest_80_85, tmp344, tmp345, tmp346, bytetest_ba;
		BitBlock tmp347, bytetest_81_82, tmp348, tmp349, tmp350, bytetest_84_84;
		BitBlock tmp351, tmp352, tmp353, bytetest_87_88, tmp354, bytetest_8a_8a;
		BitBlock tmp355, bytetest_8d_8d, tmp356, bytetest_94_97, tmp357;
		BitBlock bytetest_99_9f, tmp358, tmp359, bytetest_a1_a3, tmp360;
		BitBlock bytetest_a5_a5, tmp361, bytetest_a7_a7, tmp362, tmp363;
		BitBlock bytetest_aa_ab, tmp364, tmp365, bytetest_ad_b0, tmp366, tmp367;
		BitBlock tmp368, bytetest_bb, bytetest_80_84, tmp369, tmp370, tmp371;
		BitBlock bytetest_9c_9f, tmp372, bytetest_bc, bytetest_80_80, tmp373, tmp374;
		BitBlock tmp375, bytetest_bd, bytetest_80_87, tmp376, tmp377, tmp378, tmp379;
		BitBlock tmp380, bytetest_89_ac, tmp381, bytetest_be, tmp382, bytetest_88_8c;
		BitBlock tmp383, tmp384, tmp385, bytetest_e1, bytetest_80, tmp386;
		BitBlock bytetest_80_aa, tmp387, tmp388, tmp389, tmp390, tmp391, tmp392;
		BitBlock bytetest_81, bytetest_90_95, tmp393, tmp394, tmp395, bytetest_9a_9d;
		BitBlock tmp396, bytetest_a1_a1, tmp397, tmp398, bytetest_a5_a6, tmp399;
		BitBlock bytetest_ae_b0, tmp400, bytetest_82, bytetest_80_81, tmp401, tmp402;
		BitBlock tmp403, bytetest_b5_bf, tmp404, tmp405, tmp406, bytetest_83, tmp407;
		BitBlock bytetest_90_ba, tmp408, tmp409, tmp410, bytetest_89, bytetest_80_88;
		BitBlock tmp411, tmp412, tmp413, tmp414, bytetest_84_88, tmp415, tmp416;
		BitBlock tmp417, tmp418, bytetest_bd_bf, tmp419, tmp420, tmp421;
		BitBlock bytetest_8a_8d, tmp422, bytetest_90_96, tmp423, bytetest_98_98;
		BitBlock tmp424, tmp425, bytetest_8a, tmp426, tmp427, tmp428, tmp429, tmp430;
		BitBlock tmp431, tmp432, bytetest_90_b0, tmp433, bytetest_b2_b5, tmp434;
		BitBlock bytetest_b8_be, tmp435, bytetest_8b, tmp436, tmp437, tmp438;
		BitBlock bytetest_82_85, tmp439, tmp440, bytetest_88_96, tmp441, bytetest_8c;
		BitBlock bytetest_80_90, tmp442, tmp443, tmp444, tmp445, bytetest_98_bf;
		BitBlock tmp446, tmp447, tmp448, bytetest_8d, bytetest_80_9a, tmp449, tmp450;
		BitBlock tmp451, tmp452, tmp453, bytetest_8e, bytetest_80_8f, tmp454, tmp455;
		BitBlock tmp456, bytetest_8f, tmp457, tmp458, bytetest_80_b4, tmp459, tmp460;
		BitBlock tmp461, tmp462, tmp463, bytetest_99, tmp464, bytetest_80_ac, tmp465;
		BitBlock tmp466, tmp467, tmp468, bytetest_91_98, tmp469, tmp470, tmp471;
		BitBlock bytetest_90, tmp472, bytetest_81_bf, tmp473, tmp474, tmp475, tmp476;
		BitBlock tmp477, tmp478, bytetest_af_bf, tmp479, bytetest_9a, tmp480, tmp481;
		BitBlock bytetest_81_9a, tmp482, tmp483, tmp484, bytetest_9b, tmp485, tmp486;
		BitBlock tmp487, tmp488, tmp489, bytetest_9c, tmp490, bytetest_80_8c, tmp491;
		BitBlock tmp492, tmp493, tmp494, bytetest_8e_91, tmp495, bytetest_a0_b1;
		BitBlock tmp496, bytetest_9d, bytetest_80_91, tmp497, tmp498, tmp499;
		BitBlock bytetest_a0_ac, tmp500, tmp501, bytetest_9e, tmp502, bytetest_80_b3;
		BitBlock tmp503, tmp504, tmp505, bytetest_9f, tmp506, tmp507, tmp508, tmp509;
		BitBlock bytetest_80_82, tmp510, tmp511, tmp512, tmp513, tmp514, tmp515;
		BitBlock tmp516, tmp517, tmp518, bytetest_84_b7, tmp519, tmp520;
		BitBlock bytetest_80_a8, tmp521, tmp522, tmp523, tmp524, bytetest_a3, tmp525;
		BitBlock bytetest_80_b5, tmp526, tmp527, tmp528, bytetest_b0_bf, tmp529;
		BitBlock tmp530, tmp531, bytetest_80_9c, tmp532, tmp533, tmp534, tmp535;
		BitBlock tmp536, tmp537, bytetest_90_ad, tmp538, tmp539, tmp540, tmp541;
		BitBlock bytetest_b0_b4, tmp542, tmp543, tmp544, bytetest_80_ab, tmp545;
		BitBlock tmp546, tmp547, tmp548, bytetest_81_87, tmp549, tmp550, tmp551;
		BitBlock tmp552, bytetest_80_96, tmp553, tmp554, tmp555, bytetest_80_94;
		BitBlock tmp556, tmp557, tmp558, tmp559, tmp560, tmp561, tmp562, tmp563;
		BitBlock bytetest_85_b3, tmp564, tmp565, tmp566, tmp567, bytetest_85_8b;
		BitBlock tmp568, tmp569, tmp570, tmp571, tmp572, tmp573, bytetest_83_a0;
		BitBlock tmp574, tmp575, tmp576, tmp577, tmp578, tmp579, tmp580, tmp581;
		BitBlock tmp582, tmp583, tmp584, bytetest_80_a3, tmp585, tmp586, tmp587;
		BitBlock tmp588, bytetest_8d_8f, tmp589, tmp590, tmp591, tmp592;
		BitBlock bytetest_9a_b7, tmp593, tmp594, bytetest_a9_ac, tmp595, tmp596;
		BitBlock tmp597, bytetest_ae_b1, tmp598, tmp599, tmp600, bytetest_e2;
		BitBlock bytetest_84, tmp601, bytetest_b5_b8, tmp602, tmp603, tmp604, tmp605;
		BitBlock tmp606, tmp607, tmp608, bytetest_80_a7, tmp609, tmp610, tmp611;
		BitBlock tmp612, tmp613, tmp614, tmp615, tmp616, tmp617, tmp618;
		BitBlock bytetest_a0_a6, tmp619, bytetest_a8_ae, tmp620, bytetest_b0_b6;
		BitBlock tmp621, tmp622, tmp623, tmp624, tmp625, tmp626, bytetest_88_8e;
		BitBlock tmp627, tmp628, bytetest_98_9e, tmp629, bytetest_e3, bytetest_86_86;
		BitBlock tmp630, tmp631, tmp632, tmp633, tmp634, bytetest_bc_bc, tmp635;
		BitBlock tmp636, tmp637, tmp638, tmp639, tmp640, tmp641, tmp642;
		BitBlock bytetest_9f_9f, tmp643, tmp644, bytetest_80_ba, tmp645, tmp646;
		BitBlock tmp647, bytetest_a1_bf, tmp648, tmp649, tmp650, tmp651;
		BitBlock bytetest_85_ad, tmp652, tmp653, tmp654, bytetest_86, tmp655;
		BitBlock bytetest_80_8e, tmp656, tmp657, tmp658, bytetest_85, tmp659, tmp660;
		BitBlock tmp661, tmp662, tmp663, tmp664, bytetest_a0_ba, tmp665, bytetest_87;
		BitBlock tmp666, tmp667, tmp668, bytetest_e4, tmp669, tmp670, tmp671, tmp672;
		BitBlock tmp673, tmp674, tmp675, tmp676, tmp677, bytetest_90_bf, tmp678;
		BitBlock tmp679, tmp680, tmp681, bytetest_e9, bytetest_bf, tmp682, tmp683;
		BitBlock tmp684, tmp685, tmp686, tmp687, bytetest_80_be, tmp688, tmp689;
		BitBlock tmp690, tmp691, bytetest_e5_e8, bytetest_b8_bf, tmp692, tmp693;
		BitBlock tmp694, tmp695, tmp696, bytetest_ea, tmp697, tmp698, tmp699, tmp700;
		BitBlock tmp701, bytetest_92, tmp702, tmp703, tmp704, tmp705, bytetest_81_91;
		BitBlock tmp706, tmp707, tmp708, tmp709, bytetest_96_bf, tmp710, tmp711;
		BitBlock tmp712, bytetest_93, tmp713, bytetest_90_b7, tmp714, tmp715, tmp716;
		BitBlock bytetest_98, bytetest_80_8b, tmp717, tmp718, tmp719, tmp720, tmp721;
		BitBlock tmp722, tmp723, bytetest_90_9f, tmp724, tmp725, bytetest_ae_ae;
		BitBlock tmp726, tmp727, tmp728, tmp729, tmp730, tmp731, tmp732, tmp733;
		BitBlock tmp734, tmp735, tmp736, tmp737, tmp738, bytetest_bb_bf, tmp739;
		BitBlock tmp740, tmp741, tmp742, tmp743, bytetest_83_85, tmp744, tmp745;
		BitBlock bytetest_87_8a, tmp746, tmp747, tmp748, bytetest_8c_a2, tmp749;
		BitBlock tmp750, tmp751, tmp752, tmp753, bytetest_82_b3, tmp754, tmp755;
		BitBlock tmp756, tmp757, tmp758, tmp759, tmp760, tmp761, tmp762;
		BitBlock bytetest_8a_a5, tmp763, tmp764, tmp765, tmp766, tmp767, tmp768;
		BitBlock tmp769, tmp770, bytetest_a0_bc, tmp771, tmp772, tmp773;
		BitBlock bytetest_84_b2, tmp774, tmp775, tmp776, tmp777, tmp778, tmp779;
		BitBlock tmp780, tmp781, tmp782, tmp783, bytetest_84_8b, tmp784;
		BitBlock bytetest_a0_af, tmp785, tmp786, tmp787, bytetest_b1_b6, tmp788;
		BitBlock tmp789, bytetest_80_af, tmp790, tmp791, tmp792, tmp793, tmp794;
		BitBlock tmp795, bytetest_b9_bd, tmp796, tmp797, tmp798, tmp799;
		BitBlock bytetest_82_82, tmp800, tmp801, bytetest_9b_9c, tmp802;
		BitBlock bytetest_a0_aa, tmp803, tmp804, bytetest_81_86, tmp805, tmp806;
		BitBlock tmp807, bytetest_89_8e, tmp808, tmp809, bytetest_91_96, tmp810;
		BitBlock tmp811, tmp812, tmp813, tmp814, tmp815, bytetest_80_a2, tmp816;
		BitBlock tmp817, tmp818, bytetest_ed, tmp819, tmp820, tmp821, tmp822, tmp823;
		BitBlock tmp824, bytetest_80_9d, tmp825, tmp826, tmp827, tmp828, tmp829;
		BitBlock bytetest_eb_ec, tmp830, tmp831, tmp832, tmp833, tmp834, tmp835;
		BitBlock tmp836, tmp837, tmp838, tmp839, tmp840, tmp841, tmp842;
		BitBlock bytetest_8b_bb, tmp843, bytetest_ef, tmp844, bytetest_80_ad, tmp845;
		BitBlock tmp846, tmp847, tmp848, tmp849, bytetest_a4_a8, tmp850, tmp851;
		BitBlock tmp852, tmp853, bytetest_80_99, tmp854, tmp855, tmp856, tmp857;
		BitBlock tmp858, tmp859, tmp860, tmp861, tmp862, bytetest_9d_9d, tmp863;
		BitBlock tmp864, tmp865, tmp866, bytetest_9f_a8, tmp867, tmp868;
		BitBlock bytetest_aa_b6, tmp869, bytetest_b8_bc, tmp870, bytetest_be_be;
		BitBlock tmp871, tmp872, tmp873, tmp874, bytetest_83_84, tmp875, tmp876;
		BitBlock bytetest_80_b1, tmp877, tmp878, tmp879, tmp880, bytetest_86_bf;
		BitBlock tmp881, tmp882, tmp883, bytetest_80_bd, tmp884, tmp885, tmp886;
		BitBlock bytetest_b0_b3, tmp887, tmp888, tmp889, tmp890, bytetest_93_bf;
		BitBlock tmp891, tmp892, tmp893, tmp894, tmp895, tmp896, tmp897, tmp898;
		BitBlock tmp899, tmp900, tmp901, tmp902, tmp903, tmp904, tmp905, tmp906;
		BitBlock bytetest_92_bf, tmp907, tmp908, bytetest_b0_bb, tmp909, tmp910;
		BitBlock tmp911, tmp912, tmp913, bytetest_80_bc, tmp914, tmp915, tmp916;
		BitBlock tmp917, tmp918, tmp919, bytetest_b6_bf, tmp920, tmp921, tmp922;
		BitBlock bytetest_a6_af, tmp923, tmp924, tmp925, tmp926, tmp927, tmp928;
		BitBlock tmp929, tmp930, bytetest_a0_be, tmp931, bytetest_82_87, tmp932;
		BitBlock tmp933, tmp934, bytetest_8a_8f, tmp935, bytetest_92_97, tmp936;
		BitBlock bytetest_9a_9c, tmp937, tmp938, bytetest_f0, tmp939, tmp940, tmp941;
		BitBlock tmp942, tmp943, tmp944, tmp945, tmp946, tmp947, tmp948;
		BitBlock bytetest_8d_a6, tmp949, tmp950, bytetest_a8_ba, tmp951;
		BitBlock bytetest_bc_bd, tmp952, tmp953, bytetest_80_8d, tmp954, tmp955;
		BitBlock tmp956, tmp957, tmp958, bytetest_90_9d, tmp959, tmp960, tmp961;
		BitBlock tmp962, tmp963, tmp964, tmp965, tmp966, tmp967, tmp968, tmp969;
		BitBlock tmp970, tmp971, tmp972, tmp973, tmp974, bytetest_80_9e, tmp975;
		BitBlock tmp976, tmp977, tmp978, tmp979, tmp980, tmp981, tmp982, tmp983;
		BitBlock bytetest_82_89, tmp984, tmp985, tmp986, tmp987, tmp988, tmp989;
		BitBlock tmp990, tmp991, tmp992, bytetest_88_8f, tmp993, tmp994, tmp995;
		BitBlock tmp996, bytetest_91, tmp997, tmp998, tmp999, tmp1000, tmp1001;
		BitBlock tmp1002, tmp1003, bytetest_88_88, tmp1004, tmp1005, tmp1006;
		BitBlock bytetest_8a_b5, tmp1007, bytetest_b7_b8, tmp1008, tmp1009, tmp1010;
		BitBlock tmp1011, tmp1012, tmp1013, tmp1014, tmp1015, tmp1016, tmp1017;
		BitBlock bytetest_a0_b9, tmp1018, tmp1019, bytetest_80_b7, tmp1020, tmp1021;
		BitBlock tmp1022, bytetest_be_bf, tmp1023, tmp1024, tmp1025, tmp1026;
		BitBlock bytetest_90_93, tmp1027, tmp1028, bytetest_95_97, tmp1029, tmp1030;
		BitBlock bytetest_99_b3, tmp1031, tmp1032, tmp1033, tmp1034, tmp1035, tmp1036;
		BitBlock tmp1037, tmp1038, tmp1039, tmp1040, bytetest_a0_b2, tmp1041, tmp1042;
		BitBlock tmp1043, tmp1044, tmp1045, tmp1046, tmp1047, tmp1048, tmp1049;
		BitBlock bytetest_83_b7, tmp1050, tmp1051, tmp1052, tmp1053, tmp1054, tmp1055;
		BitBlock bytetest_83_af, tmp1056, tmp1057, tmp1058, tmp1059, bytetest_90_a8;
		BitBlock tmp1060, tmp1061, tmp1062, tmp1063, bytetest_83_a6, tmp1064, tmp1065;
		BitBlock tmp1066, tmp1067, bytetest_83_b2, tmp1068, tmp1069, tmp1070;
		BitBlock bytetest_81_84, tmp1071, tmp1072, tmp1073, tmp1074, tmp1075, tmp1076;
		BitBlock tmp1077, bytetest_80_ae, tmp1078, tmp1079, tmp1080, tmp1081, tmp1082;
		BitBlock tmp1083, tmp1084, tmp1085, tmp1086, tmp1087, tmp1088, tmp1089;
		BitBlock tmp1090, tmp1091, tmp1092, tmp1093, tmp1094, tmp1095, bytetest_96;
		BitBlock tmp1096, bytetest_80_b8, tmp1097, tmp1098, tmp1099, tmp1100, tmp1101;
		BitBlock bytetest_a0_a7, tmp1102, tmp1103, tmp1104, tmp1105, tmp1106, tmp1107;
		BitBlock tmp1108, tmp1109, tmp1110, tmp1111, tmp1112, tmp1113, tmp1114;
		BitBlock tmp1115, tmp1116, tmp1117, tmp1118, tmp1119, tmp1120, tmp1121;
		BitBlock tmp1122, tmp1123, bytetest_85_9f, tmp1124, tmp1125, bytetest_a1_a2;
		BitBlock tmp1126, bytetest_a4_a4, tmp1127, tmp1128, tmp1129, tmp1130;
		BitBlock bytetest_a9_b2, tmp1131, bytetest_b4_b7, tmp1132, bytetest_b9_b9;
		BitBlock tmp1133, tmp1134, tmp1135, tmp1136, tmp1137, bytetest_87_87, tmp1138;
		BitBlock bytetest_89_89, tmp1139, bytetest_8b_8b, tmp1140, tmp1141;
		BitBlock bytetest_91_92, tmp1142, tmp1143, bytetest_97_97, tmp1144;
		BitBlock bytetest_99_99, tmp1145, bytetest_9b_9b, tmp1146, tmp1147, tmp1148;
		BitBlock tmp1149, tmp1150, bytetest_a7_aa, tmp1151, tmp1152, bytetest_ac_b2;
		BitBlock tmp1153, tmp1154, bytetest_b9_bc, tmp1155, tmp1156, bytetest_80_89;
		BitBlock tmp1157, tmp1158, tmp1159, tmp1160, tmp1161, bytetest_8b_9b, tmp1162;
		BitBlock tmp1163, bytetest_a5_a9, tmp1164, bytetest_ab_bb, tmp1165, tmp1166;
		BitBlock tmp1167, tmp1168, tmp1169, tmp1170, tmp1171, tmp1172, tmp1173;
		BitBlock tmp1174, bytetest_a0_a9, tmp1175, tmp1176, tmp1177, tmp1178, tmp1179;
		BitBlock tmp1180, tmp1181, tmp1182, tmp1183, tmp1184, tmp1185, bytetest_80_9b;
		BitBlock tmp1186, tmp1187, tmp1188, tmp1189, tmp1190, bytetest_9c_bf, tmp1191;
		BitBlock tmp1192, tmp1193, tmp1194, tmp1195, tmp1196, tmp1197, tmp1198;
		BitBlock bytetest_9d_9f, tmp1199, tmp1200, tmp1201, tmp1202, tmp1203, tmp1204;
		BitBlock tmp1205, tmp1206, tmp1207, tmp1208, tmp1209, tmp1210, tmp1211;




        struct_Lo.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_andc(tmp5, tmp4);
        bytetest_c2 = simd_and(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp11 = simd_and(tmp10, tmp5);
        bytetest_aa_aa = simd_and(tmp9, tmp11);
        tmp12 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp12, carryQ.get_carry_in(0), tmp13));
        tmp14 = simd_and(tmp13, bytetest_c2);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp14, carryQ.get_carry_in(1), tmp15));
        tmp16 = simd_and(tmp15, bytetest_aa_aa);
        struct_Lo.cc = simd_or(tmp16, struct_Lo.cc);
        bytetest_c2 = simd_and(tmp3, tmp6);
        tmp17 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp18 = simd_and(tmp7, tmp17);
        bytetest_ba_ba = simd_and(tmp18, tmp11);
        tmp19 = simd_and(tmp15, bytetest_ba_ba);
        struct_Lo.cc = simd_or(tmp19, struct_Lo.cc);
        tmp20 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp21 = simd_and(tmp20, tmp5);
        bytetest_c6 = simd_and(tmp3, tmp21);
        tmp22 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp23 = simd_and(tmp10, tmp22);
        bytetest_bb_bb = simd_and(tmp18, tmp23);
        tmp24 = simd_and(tmp13, bytetest_c6);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp24, carryQ.get_carry_in(2), tmp25));
        tmp26 = simd_and(tmp25, bytetest_bb_bb);
        struct_Lo.cc = simd_or(tmp26, struct_Lo.cc);
        tmp27 = simd_and(tmp20, tmp22);
        bytetest_c7 = simd_and(tmp3, tmp27);
        tmp28 = simd_andc(tmp7, tmp2);
        bytetest_80_83 = simd_andc(tmp28, tmp4);
        tmp29 = simd_and(tmp13, bytetest_c7);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp29, carryQ.get_carry_in(3), tmp30));
        tmp31 = simd_and(tmp30, bytetest_80_83);
        struct_Lo.cc = simd_or(tmp31, struct_Lo.cc);
        bytetest_ca = simd_and(tmp3, tmp11);
        tmp32 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp33 = simd_and(tmp7, tmp32);
        tmp34 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp35 = simd_andc(tmp20, tmp34);
        bytetest_94_94 = simd_and(tmp33, tmp35);
        tmp36 = simd_and(tmp13, bytetest_ca);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp36, carryQ.get_carry_in(4), tmp37));
        tmp38 = simd_and(tmp37, bytetest_94_94);
        struct_Lo.cc = simd_or(tmp38, struct_Lo.cc);
        tmp39 = simd_and(tmp1, tmp32);
        bytetest_d7 = simd_and(tmp39, tmp27);
        tmp40 = simd_or(basis_bits.bit_5, tmp22);
        tmp41 = simd_and(basis_bits.bit_4, tmp40);
        tmp42 = simd_or(basis_bits.bit_3, tmp41);
        tmp43 = simd_not(tmp42);
        tmp44 = simd_or(simd_and(basis_bits.bit_2, tmp43), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
        bytetest_90_aa = simd_and(tmp7, tmp44);
        tmp45 = simd_and(tmp13, bytetest_d7);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp45, carryQ.get_carry_in(5), tmp46));
        tmp47 = simd_and(tmp46, bytetest_90_aa);
        struct_Lo.cc = simd_or(tmp47, struct_Lo.cc);
        bytetest_d7 = simd_and(tmp39, tmp27);
        tmp48 = simd_andc(tmp18, tmp4);
        bytetest_b0_b2 = simd_andc(tmp48, tmp22);
        tmp49 = simd_and(tmp46, bytetest_b0_b2);
        struct_Lo.cc = simd_or(tmp49, struct_Lo.cc);
        tmp50 = simd_andc(tmp10, tmp34);
        bytetest_d8 = simd_and(tmp39, tmp50);
        bytetest_a0_bf = simd_and(tmp7, basis_bits.bit_2);
        tmp51 = simd_and(tmp13, bytetest_d8);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp51, carryQ.get_carry_in(6), tmp52));
        tmp53 = simd_and(tmp52, bytetest_a0_bf);
        struct_Lo.cc = simd_or(tmp53, struct_Lo.cc);
        tmp54 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp55 = simd_and(tmp10, tmp54);
        bytetest_d9 = simd_and(tmp39, tmp55);
        tmp56 = simd_not(tmp40);
        tmp57 = simd_or(basis_bits.bit_5, tmp34);
        tmp58 = simd_or(simd_and(basis_bits.bit_4, tmp56), simd_andc(tmp57, basis_bits.bit_4));
        bytetest_81_8a = simd_and(tmp28, tmp58);
        tmp59 = simd_and(tmp13, bytetest_d9);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp59, carryQ.get_carry_in(7), tmp60));
        tmp61 = simd_and(tmp60, bytetest_81_8a);
        struct_Lo.cc = simd_or(tmp61, struct_Lo.cc);
        bytetest_d9 = simd_and(tmp39, tmp55);
        tmp62 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp63 = simd_and(tmp62, basis_bits.bit_6);
        bytetest_ae_af = simd_and(tmp9, tmp63);
        tmp64 = simd_and(tmp60, bytetest_ae_af);
        struct_Lo.cc = simd_or(tmp64, struct_Lo.cc);
        bytetest_db = simd_and(tmp39, tmp23);
        tmp65 = simd_andc(tmp7, basis_bits.bit_2);
        tmp66 = simd_and(basis_bits.bit_3, tmp4);
        bytetest_80_93 = simd_andc(tmp65, tmp66);
        tmp67 = simd_and(tmp13, bytetest_db);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(tmp67, carryQ.get_carry_in(8), tmp68));
        tmp69 = simd_and(tmp68, bytetest_80_93);
        bytetest_da = simd_and(tmp39, tmp11);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp70 = simd_and(tmp13, bytetest_da);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(tmp70, carryQ.get_carry_in(9), tmp71));
        tmp72 = simd_and(tmp71, bytetest_80_bf);
        bytetest_d9 = simd_and(tmp39, tmp55);
        tmp73 = simd_and(bytetest_80_bf, tmp17);
        tmp74 = simd_or(basis_bits.bit_4, tmp57);
        bytetest_b1_bf = simd_and(tmp73, tmp74);
        tmp75 = simd_and(tmp60, bytetest_b1_bf);
        tmp76 = simd_or(tmp75, tmp72);
        tmp77 = simd_or(tmp76, tmp69);
        struct_Lo.cc = simd_or(tmp77, struct_Lo.cc);
        bytetest_db = simd_and(tmp39, tmp23);
        tmp78 = simd_and(bytetest_80_bf, tmp32);
        tmp79 = simd_and(tmp20, tmp54);
        bytetest_95_95 = simd_and(tmp78, tmp79);
        tmp80 = simd_and(tmp68, bytetest_95_95);
        struct_Lo.cc = simd_or(tmp80, struct_Lo.cc);
        bytetest_db = simd_and(tmp39, tmp23);
        tmp81 = simd_and(bytetest_80_bf, tmp8);
        bytetest_ae_af = simd_and(tmp81, tmp63);
        tmp82 = simd_and(tmp68, bytetest_ae_af);
        struct_Lo.cc = simd_or(tmp82, struct_Lo.cc);
        bytetest_db = simd_and(tmp39, tmp23);
        tmp83 = simd_and(tmp73, basis_bits.bit_4);
        tmp84 = simd_not(tmp34);
        tmp85 = simd_or(simd_and(basis_bits.bit_5, tmp84), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        bytetest_ba_bc = simd_and(tmp83, tmp85);
        tmp86 = simd_and(tmp68, bytetest_ba_bc);
        struct_Lo.cc = simd_or(tmp86, struct_Lo.cc);
        bytetest_db = simd_and(tmp39, tmp23);
        tmp87 = simd_and(tmp62, tmp22);
        bytetest_bf_bf = simd_and(tmp73, tmp87);
        tmp88 = simd_and(tmp68, bytetest_bf_bf);
        struct_Lo.cc = simd_or(tmp88, struct_Lo.cc);
        tmp89 = simd_andc(tmp62, tmp34);
        bytetest_dc = simd_and(tmp39, tmp89);
        tmp90 = simd_or(tmp4, tmp34);
        bytetest_90_90 = simd_andc(tmp78, tmp90);
        tmp91 = simd_and(tmp13, bytetest_dc);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(tmp91, carryQ.get_carry_in(10), tmp92));
        tmp93 = simd_and(tmp92, bytetest_90_90);
        struct_Lo.cc = simd_or(tmp93, struct_Lo.cc);
        bytetest_dc = simd_and(tmp39, tmp89);
        tmp94 = simd_not(basis_bits.bit_3);
        tmp95 = simd_or(tmp4, basis_bits.bit_6);
        tmp96 = simd_and(basis_bits.bit_3, tmp95);
        tmp97 = simd_or(simd_and(basis_bits.bit_2, tmp94), simd_andc(tmp96, basis_bits.bit_2));
        bytetest_92_af = simd_and(bytetest_80_bf, tmp97);
        tmp98 = simd_and(tmp92, bytetest_92_af);
        struct_Lo.cc = simd_or(tmp98, struct_Lo.cc);
        tmp99 = simd_and(tmp62, tmp5);
        bytetest_de = simd_and(tmp39, tmp99);
        tmp100 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp101 = simd_or(basis_bits.bit_4, tmp100);
        tmp102 = simd_or(basis_bits.bit_3, tmp101);
        tmp103 = simd_and(basis_bits.bit_2, tmp102);
        bytetest_80_a5 = simd_andc(bytetest_80_bf, tmp103);
        tmp104 = simd_and(tmp13, bytetest_de);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(tmp104, carryQ.get_carry_in(11), tmp105));
        tmp106 = simd_and(tmp105, bytetest_80_a5);
        tmp107 = simd_and(tmp62, tmp54);
        bytetest_dd = simd_and(tmp39, tmp107);
        tmp108 = simd_and(tmp62, tmp34);
        tmp109 = simd_or(basis_bits.bit_3, tmp108);
        tmp110 = simd_or(basis_bits.bit_2, tmp109);
        bytetest_8d_bf = simd_and(bytetest_80_bf, tmp110);
        tmp111 = simd_and(tmp13, bytetest_dd);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(tmp111, carryQ.get_carry_in(12), tmp112));
        tmp113 = simd_and(tmp112, bytetest_8d_bf);
        tmp114 = simd_or(tmp113, tmp106);
        struct_Lo.cc = simd_or(tmp114, struct_Lo.cc);
        bytetest_de = simd_and(tmp39, tmp99);
        tmp115 = simd_andc(tmp54, tmp4);
        bytetest_b1_b1 = simd_and(tmp73, tmp115);
        tmp116 = simd_and(tmp105, bytetest_b1_b1);
        struct_Lo.cc = simd_or(tmp116, struct_Lo.cc);
        bytetest_df = simd_and(tmp39, tmp87);
        tmp117 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
        tmp118 = simd_and(basis_bits.bit_4, tmp117);
        tmp119 = simd_or(basis_bits.bit_3, tmp118);
        tmp120 = simd_or(simd_and(basis_bits.bit_2, tmp43), simd_andc(tmp119, basis_bits.bit_2));
        bytetest_8a_aa = simd_and(bytetest_80_bf, tmp120);
        tmp121 = simd_and(tmp13, bytetest_df);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(tmp121, carryQ.get_carry_in(13), tmp122));
        tmp123 = simd_and(tmp122, bytetest_8a_aa);
        struct_Lo.cc = simd_or(tmp123, struct_Lo.cc);
        tmp124 = simd_and(tmp1, tmp8);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_a0 = simd_andc(tmp81, tmp90);
        tmp125 = simd_andc(bytetest_80_bf, basis_bits.bit_2);
        tmp126 = simd_and(basis_bits.bit_3, tmp101);
        bytetest_80_95 = simd_andc(tmp125, tmp126);
        tmp127 = simd_and(tmp13, bytetest_e0);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(tmp127, carryQ.get_carry_in(14), tmp128));
        tmp129 = simd_and(tmp128, bytetest_a0);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(tmp129, carryQ.get_carry_in(15), tmp130));
        tmp131 = simd_and(tmp130, bytetest_80_95);
        struct_Lo.cc = simd_or(tmp131, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_a1 = simd_and(tmp81, tmp115);
        tmp132 = simd_and(basis_bits.bit_4, tmp57);
        tmp133 = simd_and(basis_bits.bit_3, tmp132);
        bytetest_80_98 = simd_andc(tmp125, tmp133);
        tmp134 = simd_and(tmp128, bytetest_a1);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(tmp134, carryQ.get_carry_in(16), tmp135));
        tmp136 = simd_and(tmp135, bytetest_80_98);
        struct_Lo.cc = simd_or(tmp136, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_a2 = simd_and(tmp81, tmp6);
        bytetest_a0_a0 = simd_andc(tmp81, tmp90);
        tmp137 = simd_and(tmp128, bytetest_a2);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(tmp137, carryQ.get_carry_in(17), tmp138));
        tmp139 = simd_and(tmp138, bytetest_a0_a0);
        struct_Lo.cc = simd_or(tmp139, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_a2 = simd_and(tmp81, tmp6);
        tmp140 = simd_and(basis_bits.bit_5, tmp34);
        tmp141 = simd_not(tmp140);
        tmp142 = simd_or(simd_and(basis_bits.bit_4, tmp141), simd_andc(tmp117, basis_bits.bit_4));
        bytetest_a2_ac = simd_and(tmp81, tmp142);
        tmp143 = simd_and(tmp138, bytetest_a2_ac);
        struct_Lo.cc = simd_or(tmp143, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_a4 = simd_and(tmp81, tmp35);
        tmp144 = simd_and(basis_bits.bit_3, tmp118);
        tmp145 = simd_not(tmp144);
        tmp146 = simd_or(basis_bits.bit_3, tmp4);
        tmp147 = simd_or(simd_and(basis_bits.bit_2, tmp145), simd_andc(tmp146, basis_bits.bit_2));
        bytetest_84_b9 = simd_and(bytetest_80_bf, tmp147);
        tmp148 = simd_and(tmp128, bytetest_a4);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(tmp148, carryQ.get_carry_in(18), tmp149));
        tmp150 = simd_and(tmp149, bytetest_84_b9);
        struct_Lo.cc = simd_or(tmp150, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_a4 = simd_and(tmp81, tmp35);
        bytetest_bd_bd = simd_and(tmp73, tmp107);
        tmp151 = simd_and(tmp149, bytetest_bd_bd);
        struct_Lo.cc = simd_or(tmp151, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_a5 = simd_and(tmp81, tmp79);
        bytetest_90_90 = simd_andc(tmp78, tmp90);
        tmp152 = simd_and(tmp128, bytetest_a5);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(tmp152, carryQ.get_carry_in(19), tmp153));
        tmp154 = simd_and(tmp153, bytetest_90_90);
        struct_Lo.cc = simd_or(tmp154, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_a5 = simd_and(tmp81, tmp79);
        tmp155 = simd_or(basis_bits.bit_3, tmp95);
        tmp156 = simd_not(tmp155);
        tmp157 = simd_and(basis_bits.bit_3, basis_bits.bit_4);
        tmp158 = simd_or(simd_and(basis_bits.bit_2, tmp156), simd_andc(tmp157, basis_bits.bit_2));
        bytetest_98_a1 = simd_and(bytetest_80_bf, tmp158);
        tmp159 = simd_and(tmp153, bytetest_98_a1);
        struct_Lo.cc = simd_or(tmp159, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_a5 = simd_and(tmp81, tmp79);
        tmp160 = simd_andc(tmp73, basis_bits.bit_4);
        bytetest_b2_b7 = simd_and(tmp160, tmp117);
        tmp161 = simd_and(tmp153, bytetest_b2_b7);
        struct_Lo.cc = simd_or(tmp161, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_a5 = simd_and(tmp81, tmp79);
        bytetest_b9_bf = simd_and(tmp83, tmp57);
        tmp162 = simd_and(tmp153, bytetest_b9_bf);
        struct_Lo.cc = simd_or(tmp162, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_a6 = simd_and(tmp81, tmp21);
        tmp163 = simd_andc(bytetest_80_bf, tmp2);
        tmp164 = simd_or(simd_and(basis_bits.bit_4, tmp141), simd_andc(tmp140, basis_bits.bit_4));
        bytetest_85_8c = simd_and(tmp163, tmp164);
        tmp165 = simd_and(tmp128, bytetest_a6);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(tmp165, carryQ.get_carry_in(20), tmp166));
        tmp167 = simd_and(tmp166, bytetest_85_8c);
        struct_Lo.cc = simd_or(tmp167, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_a6 = simd_and(tmp81, tmp21);
        tmp168 = simd_not(tmp90);
        tmp169 = simd_or(simd_and(basis_bits.bit_3, tmp168), simd_andc(tmp87, basis_bits.bit_3));
        bytetest_8f_90 = simd_and(tmp125, tmp169);
        tmp170 = simd_and(tmp166, bytetest_8f_90);
        struct_Lo.cc = simd_or(tmp170, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_a6 = simd_and(tmp81, tmp21);
        tmp171 = simd_or(basis_bits.bit_3, tmp132);
        tmp172 = simd_not(tmp171);
        tmp173 = simd_or(tmp4, tmp22);
        tmp174 = simd_and(basis_bits.bit_3, tmp173);
        tmp175 = simd_or(simd_and(basis_bits.bit_2, tmp172), simd_andc(tmp174, basis_bits.bit_2));
        bytetest_93_a8 = simd_and(bytetest_80_bf, tmp175);
        tmp176 = simd_and(tmp166, bytetest_93_a8);
        struct_Lo.cc = simd_or(tmp176, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_a6 = simd_and(tmp81, tmp21);
        tmp177 = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp178 = simd_or(simd_and(basis_bits.bit_3, tmp168), simd_andc(tmp118, basis_bits.bit_3));
        bytetest_aa_b0 = simd_and(tmp177, tmp178);
        tmp179 = simd_and(tmp166, bytetest_aa_b0);
        struct_Lo.cc = simd_or(tmp179, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_a6 = simd_and(tmp81, tmp21);
        bytetest_b2_b2 = simd_and(tmp73, tmp6);
        tmp180 = simd_and(tmp166, bytetest_b2_b2);
        struct_Lo.cc = simd_or(tmp180, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_a6 = simd_and(tmp81, tmp21);
        tmp181 = simd_not(tmp117);
        tmp182 = simd_or(simd_and(basis_bits.bit_4, tmp181), simd_andc(tmp100, basis_bits.bit_4));
        bytetest_b6_b9 = simd_and(tmp73, tmp182);
        tmp183 = simd_and(tmp166, bytetest_b6_b9);
        struct_Lo.cc = simd_or(tmp183, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_a6 = simd_and(tmp81, tmp21);
        bytetest_bd_bd = simd_and(tmp73, tmp107);
        tmp184 = simd_and(tmp166, bytetest_bd_bd);
        struct_Lo.cc = simd_or(tmp184, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_a7 = simd_and(tmp81, tmp27);
        bytetest_8e_8e = simd_and(tmp163, tmp99);
        tmp185 = simd_and(tmp128, bytetest_a7);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(tmp185, carryQ.get_carry_in(21), tmp186));
        tmp187 = simd_and(tmp186, bytetest_8e_8e);
        struct_Lo.cc = simd_or(tmp187, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_a7 = simd_and(tmp81, tmp27);
        tmp188 = simd_andc(tmp62, basis_bits.bit_6);
        bytetest_9c_9d = simd_and(tmp78, tmp188);
        tmp189 = simd_and(tmp186, bytetest_9c_9d);
        struct_Lo.cc = simd_or(tmp189, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_a7 = simd_and(tmp81, tmp27);
        tmp190 = simd_and(basis_bits.bit_3, tmp87);
        tmp191 = simd_or(simd_and(basis_bits.bit_2, tmp156), simd_andc(tmp190, basis_bits.bit_2));
        bytetest_9f_a1 = simd_and(bytetest_80_bf, tmp191);
        tmp192 = simd_and(tmp186, bytetest_9f_a1);
        struct_Lo.cc = simd_or(tmp192, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_a7 = simd_and(tmp81, tmp27);
        bytetest_b0_b1 = simd_andc(tmp73, tmp95);
        tmp193 = simd_and(tmp186, bytetest_b0_b1);
        struct_Lo.cc = simd_or(tmp193, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_a8 = simd_and(tmp81, tmp50);
        tmp194 = simd_or(simd_and(basis_bits.bit_4, tmp56), simd_andc(tmp140, basis_bits.bit_4));
        bytetest_85_8a = simd_and(tmp163, tmp194);
        tmp195 = simd_and(tmp128, bytetest_a8);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(tmp195, carryQ.get_carry_in(22), tmp196));
        tmp197 = simd_and(tmp196, bytetest_85_8a);
        struct_Lo.cc = simd_or(tmp197, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_a8 = simd_and(tmp81, tmp50);
        bytetest_8f_90 = simd_and(tmp125, tmp169);
        tmp198 = simd_and(tmp196, bytetest_8f_90);
        struct_Lo.cc = simd_or(tmp198, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_a8 = simd_and(tmp81, tmp50);
        bytetest_93_a8 = simd_and(bytetest_80_bf, tmp175);
        tmp199 = simd_and(tmp196, bytetest_93_a8);
        struct_Lo.cc = simd_or(tmp199, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_a8 = simd_and(tmp81, tmp50);
        bytetest_aa_b0 = simd_and(tmp177, tmp178);
        tmp200 = simd_and(tmp196, bytetest_aa_b0);
        struct_Lo.cc = simd_or(tmp200, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_a8 = simd_and(tmp81, tmp50);
        tmp201 = simd_andc(basis_bits.bit_6, tmp4);
        bytetest_b2_b3 = simd_and(tmp73, tmp201);
        tmp202 = simd_and(tmp196, bytetest_b2_b3);
        struct_Lo.cc = simd_or(tmp202, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_a8 = simd_and(tmp81, tmp50);
        tmp203 = simd_and(tmp73, tmp20);
        tmp204 = simd_not(basis_bits.bit_7);
        tmp205 = simd_or(simd_and(basis_bits.bit_6, tmp204), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
        bytetest_b5_b6 = simd_and(tmp203, tmp205);
        tmp206 = simd_and(tmp196, bytetest_b5_b6);
        struct_Lo.cc = simd_or(tmp206, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_a8 = simd_and(tmp81, tmp50);
        tmp207 = simd_andc(tmp10, basis_bits.bit_6);
        bytetest_b8_b9 = simd_and(tmp73, tmp207);
        tmp208 = simd_and(tmp196, bytetest_b8_b9);
        struct_Lo.cc = simd_or(tmp208, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_a9 = simd_and(tmp81, tmp55);
        tmp209 = simd_and(tmp78, basis_bits.bit_4);
        tmp210 = simd_or(simd_and(basis_bits.bit_5, tmp84), simd_andc(tmp34, basis_bits.bit_5));
        bytetest_99_9c = simd_and(tmp209, tmp210);
        tmp211 = simd_and(tmp128, bytetest_a9);
        carryQ.cq[23] = carryout2carry(pablo_blk_Advance(tmp211, carryQ.get_carry_in(23), tmp212));
        tmp213 = simd_and(tmp212, bytetest_99_9c);
        struct_Lo.cc = simd_or(tmp213, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_a9 = simd_and(tmp81, tmp55);
        bytetest_9e_9e = simd_and(tmp78, tmp99);
        tmp214 = simd_and(tmp212, bytetest_9e_9e);
        struct_Lo.cc = simd_or(tmp214, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_a9 = simd_and(tmp81, tmp55);
        bytetest_b2_b4 = simd_and(tmp160, tmp85);
        tmp215 = simd_and(tmp212, bytetest_b2_b4);
        struct_Lo.cc = simd_or(tmp215, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_aa = simd_and(tmp81, tmp11);
        tmp216 = simd_not(tmp100);
        tmp217 = simd_or(simd_and(basis_bits.bit_4, tmp216), simd_andc(tmp140, basis_bits.bit_4));
        bytetest_85_8d = simd_and(tmp163, tmp217);
        tmp218 = simd_and(tmp128, bytetest_aa);
        carryQ.cq[24] = carryout2carry(pablo_blk_Advance(tmp218, carryQ.get_carry_in(24), tmp219));
        tmp220 = simd_and(tmp219, bytetest_85_8d);
        struct_Lo.cc = simd_or(tmp220, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_aa = simd_and(tmp81, tmp11);
        tmp221 = simd_not(tmp95);
        tmp222 = simd_or(simd_and(basis_bits.bit_3, tmp221), simd_andc(tmp87, basis_bits.bit_3));
        bytetest_8f_91 = simd_and(tmp125, tmp222);
        tmp223 = simd_and(tmp219, bytetest_8f_91);
        struct_Lo.cc = simd_or(tmp223, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_aa = simd_and(tmp81, tmp11);
        bytetest_93_a8 = simd_and(bytetest_80_bf, tmp175);
        tmp224 = simd_and(tmp219, bytetest_93_a8);
        struct_Lo.cc = simd_or(tmp224, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_aa = simd_and(tmp81, tmp11);
        bytetest_aa_b0 = simd_and(tmp177, tmp178);
        tmp225 = simd_and(tmp219, bytetest_aa_b0);
        struct_Lo.cc = simd_or(tmp225, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_aa = simd_and(tmp81, tmp11);
        bytetest_b2_b3 = simd_and(tmp73, tmp201);
        tmp226 = simd_and(tmp219, bytetest_b2_b3);
        struct_Lo.cc = simd_or(tmp226, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_aa = simd_and(tmp81, tmp11);
        tmp227 = simd_or(simd_and(basis_bits.bit_4, tmp181), simd_andc(tmp140, basis_bits.bit_4));
        bytetest_b5_b9 = simd_and(tmp73, tmp227);
        tmp228 = simd_and(tmp219, bytetest_b5_b9);
        struct_Lo.cc = simd_or(tmp228, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_aa = simd_and(tmp81, tmp11);
        bytetest_bd_bd = simd_and(tmp73, tmp107);
        tmp229 = simd_and(tmp219, bytetest_bd_bd);
        struct_Lo.cc = simd_or(tmp229, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ab = simd_and(tmp81, tmp23);
        bytetest_90_90 = simd_andc(tmp78, tmp90);
        tmp230 = simd_and(tmp128, bytetest_ab);
        carryQ.cq[25] = carryout2carry(pablo_blk_Advance(tmp230, carryQ.get_carry_in(25), tmp231));
        tmp232 = simd_and(tmp231, bytetest_90_90);
        struct_Lo.cc = simd_or(tmp232, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ab = simd_and(tmp81, tmp23);
        bytetest_a0_a1 = simd_andc(tmp81, tmp95);
        tmp233 = simd_and(tmp231, bytetest_a0_a1);
        struct_Lo.cc = simd_or(tmp233, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ac = simd_and(tmp81, tmp89);
        bytetest_85_8c = simd_and(tmp163, tmp164);
        tmp234 = simd_and(tmp128, bytetest_ac);
        carryQ.cq[26] = carryout2carry(pablo_blk_Advance(tmp234, carryQ.get_carry_in(26), tmp235));
        tmp236 = simd_and(tmp235, bytetest_85_8c);
        struct_Lo.cc = simd_or(tmp236, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ac = simd_and(tmp81, tmp89);
        bytetest_8f_90 = simd_and(tmp125, tmp169);
        tmp237 = simd_and(tmp235, bytetest_8f_90);
        struct_Lo.cc = simd_or(tmp237, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ac = simd_and(tmp81, tmp89);
        bytetest_93_a8 = simd_and(bytetest_80_bf, tmp175);
        tmp238 = simd_and(tmp235, bytetest_93_a8);
        struct_Lo.cc = simd_or(tmp238, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ac = simd_and(tmp81, tmp89);
        bytetest_aa_b0 = simd_and(tmp177, tmp178);
        tmp239 = simd_and(tmp235, bytetest_aa_b0);
        struct_Lo.cc = simd_or(tmp239, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ac = simd_and(tmp81, tmp89);
        bytetest_b2_b3 = simd_and(tmp73, tmp201);
        tmp240 = simd_and(tmp235, bytetest_b2_b3);
        struct_Lo.cc = simd_or(tmp240, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ac = simd_and(tmp81, tmp89);
        bytetest_b5_b9 = simd_and(tmp73, tmp227);
        tmp241 = simd_and(tmp235, bytetest_b5_b9);
        struct_Lo.cc = simd_or(tmp241, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ac = simd_and(tmp81, tmp89);
        bytetest_bd_bd = simd_and(tmp73, tmp107);
        tmp242 = simd_and(tmp235, bytetest_bd_bd);
        struct_Lo.cc = simd_or(tmp242, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ad = simd_and(tmp81, tmp107);
        bytetest_9c_9d = simd_and(tmp78, tmp188);
        tmp243 = simd_and(tmp128, bytetest_ad);
        carryQ.cq[27] = carryout2carry(pablo_blk_Advance(tmp243, carryQ.get_carry_in(27), tmp244));
        tmp245 = simd_and(tmp244, bytetest_9c_9d);
        struct_Lo.cc = simd_or(tmp245, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ad = simd_and(tmp81, tmp107);
        bytetest_9f_a1 = simd_and(bytetest_80_bf, tmp191);
        tmp246 = simd_and(tmp244, bytetest_9f_a1);
        struct_Lo.cc = simd_or(tmp246, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ad = simd_and(tmp81, tmp107);
        bytetest_b1_b1 = simd_and(tmp73, tmp115);
        tmp247 = simd_and(tmp244, bytetest_b1_b1);
        struct_Lo.cc = simd_or(tmp247, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ae = simd_and(tmp81, tmp99);
        tmp248 = simd_andc(tmp22, tmp4);
        bytetest_83_83 = simd_and(tmp163, tmp248);
        tmp249 = simd_and(tmp128, bytetest_ae);
        carryQ.cq[28] = carryout2carry(pablo_blk_Advance(tmp249, carryQ.get_carry_in(28), tmp250));
        tmp251 = simd_and(tmp250, bytetest_83_83);
        struct_Lo.cc = simd_or(tmp251, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ae = simd_and(tmp81, tmp99);
        bytetest_85_8a = simd_and(tmp163, tmp194);
        tmp252 = simd_and(tmp250, bytetest_85_8a);
        struct_Lo.cc = simd_or(tmp252, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ae = simd_and(tmp81, tmp99);
        tmp253 = simd_or(simd_and(basis_bits.bit_3, tmp168), simd_andc(tmp63, basis_bits.bit_3));
        bytetest_8e_90 = simd_and(tmp125, tmp253);
        tmp254 = simd_and(tmp250, bytetest_8e_90);
        struct_Lo.cc = simd_or(tmp254, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ae = simd_and(tmp81, tmp99);
        tmp255 = simd_andc(tmp78, basis_bits.bit_4);
        tmp256 = simd_not(basis_bits.bit_6);
        tmp257 = simd_or(simd_and(basis_bits.bit_5, tmp256), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        bytetest_92_95 = simd_and(tmp255, tmp257);
        tmp258 = simd_and(tmp250, bytetest_92_95);
        struct_Lo.cc = simd_or(tmp258, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ae = simd_and(tmp81, tmp99);
        tmp259 = simd_and(tmp78, tmp10);
        bytetest_99_9a = simd_and(tmp259, tmp205);
        tmp260 = simd_and(tmp250, bytetest_99_9a);
        struct_Lo.cc = simd_or(tmp260, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ae = simd_and(tmp81, tmp99);
        bytetest_9c_9c = simd_and(tmp78, tmp89);
        tmp261 = simd_and(tmp250, bytetest_9c_9c);
        struct_Lo.cc = simd_or(tmp261, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ae = simd_and(tmp81, tmp99);
        bytetest_9e_9f = simd_and(tmp78, tmp63);
        tmp262 = simd_and(tmp250, bytetest_9e_9f);
        struct_Lo.cc = simd_or(tmp262, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ae = simd_and(tmp81, tmp99);
        tmp263 = simd_andc(tmp81, basis_bits.bit_4);
        tmp264 = simd_or(simd_and(basis_bits.bit_5, tmp84), simd_andc(tmp22, basis_bits.bit_5));
        bytetest_a3_a4 = simd_and(tmp263, tmp264);
        tmp265 = simd_and(tmp250, bytetest_a3_a4);
        struct_Lo.cc = simd_or(tmp265, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ae = simd_and(tmp81, tmp99);
        tmp266 = simd_and(tmp81, tmp10);
        bytetest_a8_aa = simd_andc(tmp266, tmp22);
        tmp267 = simd_and(tmp250, bytetest_a8_aa);
        struct_Lo.cc = simd_or(tmp267, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ae = simd_and(tmp81, tmp99);
        tmp268 = simd_not(tmp118);
        tmp269 = simd_or(simd_and(basis_bits.bit_3, tmp268), simd_andc(tmp63, basis_bits.bit_3));
        bytetest_ae_b9 = simd_and(tmp177, tmp269);
        tmp270 = simd_and(tmp250, bytetest_ae_b9);
        struct_Lo.cc = simd_or(tmp270, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_af = simd_and(tmp81, tmp87);
        bytetest_90_90 = simd_andc(tmp78, tmp90);
        tmp271 = simd_and(tmp128, bytetest_af);
        carryQ.cq[29] = carryout2carry(pablo_blk_Advance(tmp271, carryQ.get_carry_in(29), tmp272));
        tmp273 = simd_and(tmp272, bytetest_90_90);
        struct_Lo.cc = simd_or(tmp273, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_b0 = simd_andc(tmp73, tmp90);
        bytetest_85_8c = simd_and(tmp163, tmp164);
        tmp274 = simd_and(tmp128, bytetest_b0);
        carryQ.cq[30] = carryout2carry(pablo_blk_Advance(tmp274, carryQ.get_carry_in(30), tmp275));
        tmp276 = simd_and(tmp275, bytetest_85_8c);
        struct_Lo.cc = simd_or(tmp276, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_b0 = simd_andc(tmp73, tmp90);
        bytetest_8e_90 = simd_and(tmp125, tmp253);
        tmp277 = simd_and(tmp275, bytetest_8e_90);
        struct_Lo.cc = simd_or(tmp277, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_b0 = simd_andc(tmp73, tmp90);
        tmp278 = simd_or(simd_and(basis_bits.bit_2, tmp172), simd_andc(tmp96, basis_bits.bit_2));
        bytetest_92_a8 = simd_and(bytetest_80_bf, tmp278);
        tmp279 = simd_and(tmp275, bytetest_92_a8);
        struct_Lo.cc = simd_or(tmp279, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_b0 = simd_andc(tmp73, tmp90);
        tmp280 = simd_not(tmp4);
        tmp281 = simd_or(simd_and(basis_bits.bit_3, tmp280), simd_andc(tmp118, basis_bits.bit_3));
        bytetest_aa_b3 = simd_and(tmp177, tmp281);
        tmp282 = simd_and(tmp275, bytetest_aa_b3);
        struct_Lo.cc = simd_or(tmp282, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_b0 = simd_andc(tmp73, tmp90);
        bytetest_b5_b9 = simd_and(tmp73, tmp227);
        tmp283 = simd_and(tmp275, bytetest_b5_b9);
        struct_Lo.cc = simd_or(tmp283, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_b0 = simd_andc(tmp73, tmp90);
        bytetest_bd_bd = simd_and(tmp73, tmp107);
        tmp284 = simd_and(tmp275, bytetest_bd_bd);
        struct_Lo.cc = simd_or(tmp284, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_b1 = simd_and(tmp73, tmp115);
        bytetest_98_99 = simd_and(tmp78, tmp207);
        tmp285 = simd_and(tmp128, bytetest_b1);
        carryQ.cq[31] = carryout2carry(pablo_blk_Advance(tmp285, carryQ.get_carry_in(31), tmp286));
        tmp287 = simd_and(tmp286, bytetest_98_99);
        struct_Lo.cc = simd_or(tmp287, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_b1 = simd_and(tmp73, tmp115);
        bytetest_a0_a1 = simd_andc(tmp81, tmp95);
        tmp288 = simd_and(tmp286, bytetest_a0_a1);
        struct_Lo.cc = simd_or(tmp288, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_b2 = simd_and(tmp73, tmp6);
        bytetest_85_8c = simd_and(tmp163, tmp164);
        tmp289 = simd_and(tmp128, bytetest_b2);
        carryQ.cq[32] = carryout2carry(pablo_blk_Advance(tmp289, carryQ.get_carry_in(32), tmp290));
        tmp291 = simd_and(tmp290, bytetest_85_8c);
        struct_Lo.cc = simd_or(tmp291, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_b2 = simd_and(tmp73, tmp6);
        bytetest_8e_90 = simd_and(tmp125, tmp253);
        tmp292 = simd_and(tmp290, bytetest_8e_90);
        struct_Lo.cc = simd_or(tmp292, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_b2 = simd_and(tmp73, tmp6);
        bytetest_92_a8 = simd_and(bytetest_80_bf, tmp278);
        tmp293 = simd_and(tmp290, bytetest_92_a8);
        struct_Lo.cc = simd_or(tmp293, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_b2 = simd_and(tmp73, tmp6);
        bytetest_aa_b3 = simd_and(tmp177, tmp281);
        tmp294 = simd_and(tmp290, bytetest_aa_b3);
        struct_Lo.cc = simd_or(tmp294, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_b2 = simd_and(tmp73, tmp6);
        bytetest_b5_b9 = simd_and(tmp73, tmp227);
        tmp295 = simd_and(tmp290, bytetest_b5_b9);
        struct_Lo.cc = simd_or(tmp295, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_b2 = simd_and(tmp73, tmp6);
        bytetest_bd_bd = simd_and(tmp73, tmp107);
        tmp296 = simd_and(tmp290, bytetest_bd_bd);
        struct_Lo.cc = simd_or(tmp296, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_b3 = simd_and(tmp73, tmp248);
        bytetest_9e_9e = simd_and(tmp78, tmp99);
        tmp297 = simd_and(tmp128, bytetest_b3);
        carryQ.cq[33] = carryout2carry(pablo_blk_Advance(tmp297, carryQ.get_carry_in(33), tmp298));
        tmp299 = simd_and(tmp298, bytetest_9e_9e);
        struct_Lo.cc = simd_or(tmp299, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_b3 = simd_and(tmp73, tmp248);
        bytetest_a0_a1 = simd_andc(tmp81, tmp95);
        tmp300 = simd_and(tmp298, bytetest_a0_a1);
        struct_Lo.cc = simd_or(tmp300, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_b3 = simd_and(tmp73, tmp248);
        tmp301 = simd_andc(tmp73, tmp4);
        bytetest_b1_b2 = simd_and(tmp301, tmp205);
        tmp302 = simd_and(tmp298, bytetest_b1_b2);
        struct_Lo.cc = simd_or(tmp302, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_b4 = simd_and(tmp73, tmp35);
        bytetest_85_8c = simd_and(tmp163, tmp164);
        tmp303 = simd_and(tmp128, bytetest_b4);
        carryQ.cq[34] = carryout2carry(pablo_blk_Advance(tmp303, carryQ.get_carry_in(34), tmp304));
        tmp305 = simd_and(tmp304, bytetest_85_8c);
        struct_Lo.cc = simd_or(tmp305, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_b4 = simd_and(tmp73, tmp35);
        bytetest_8e_90 = simd_and(tmp125, tmp253);
        tmp306 = simd_and(tmp304, bytetest_8e_90);
        struct_Lo.cc = simd_or(tmp306, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_b4 = simd_and(tmp73, tmp35);
        tmp307 = simd_and(basis_bits.bit_3, tmp41);
        tmp308 = simd_not(tmp307);
        tmp309 = simd_or(simd_and(basis_bits.bit_2, tmp308), simd_andc(tmp96, basis_bits.bit_2));
        bytetest_92_ba = simd_and(bytetest_80_bf, tmp309);
        tmp310 = simd_and(tmp304, bytetest_92_ba);
        struct_Lo.cc = simd_or(tmp310, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_b4 = simd_and(tmp73, tmp35);
        bytetest_bd_bd = simd_and(tmp73, tmp107);
        tmp311 = simd_and(tmp304, bytetest_bd_bd);
        struct_Lo.cc = simd_or(tmp311, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_b5 = simd_and(tmp73, tmp79);
        bytetest_8e_8e = simd_and(tmp163, tmp99);
        tmp312 = simd_and(tmp128, bytetest_b5);
        carryQ.cq[35] = carryout2carry(pablo_blk_Advance(tmp312, carryQ.get_carry_in(35), tmp313));
        tmp314 = simd_and(tmp313, bytetest_8e_8e);
        struct_Lo.cc = simd_or(tmp314, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_b5 = simd_and(tmp73, tmp79);
        bytetest_a0_a1 = simd_andc(tmp81, tmp95);
        tmp315 = simd_and(tmp313, bytetest_a0_a1);
        struct_Lo.cc = simd_or(tmp315, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_b5 = simd_and(tmp73, tmp79);
        bytetest_ba_bf = simd_and(tmp83, tmp117);
        tmp316 = simd_and(tmp313, bytetest_ba_bf);
        struct_Lo.cc = simd_or(tmp316, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_b6 = simd_and(tmp73, tmp21);
        tmp317 = simd_and(basis_bits.bit_5, tmp22);
        tmp318 = simd_or(basis_bits.bit_4, tmp317);
        tmp319 = simd_not(tmp318);
        tmp320 = simd_or(basis_bits.bit_4, tmp140);
        tmp321 = simd_or(simd_and(basis_bits.bit_3, tmp319), simd_andc(tmp320, basis_bits.bit_3));
        bytetest_85_96 = simd_and(tmp125, tmp321);
        tmp322 = simd_and(tmp128, bytetest_b6);
        carryQ.cq[36] = carryout2carry(pablo_blk_Advance(tmp322, carryQ.get_carry_in(36), tmp323));
        tmp324 = simd_and(tmp323, bytetest_85_96);
        struct_Lo.cc = simd_or(tmp324, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_b6 = simd_and(tmp73, tmp21);
        tmp325 = simd_not(tmp96);
        tmp326 = simd_or(simd_and(basis_bits.bit_2, tmp325), simd_andc(tmp144, basis_bits.bit_2));
        bytetest_9a_b1 = simd_and(bytetest_80_bf, tmp326);
        tmp327 = simd_and(tmp323, bytetest_9a_b1);
        struct_Lo.cc = simd_or(tmp327, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_b6 = simd_and(tmp73, tmp21);
        tmp328 = simd_not(basis_bits.bit_5);
        tmp329 = simd_or(simd_and(basis_bits.bit_4, tmp328), simd_andc(tmp40, basis_bits.bit_4));
        bytetest_b3_bb = simd_and(tmp73, tmp329);
        tmp330 = simd_and(tmp323, bytetest_b3_bb);
        struct_Lo.cc = simd_or(tmp330, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_b6 = simd_and(tmp73, tmp21);
        bytetest_bd_bd = simd_and(tmp73, tmp107);
        tmp331 = simd_and(tmp323, bytetest_bd_bd);
        struct_Lo.cc = simd_or(tmp331, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_b7 = simd_and(tmp73, tmp27);
        tmp332 = simd_andc(tmp163, basis_bits.bit_4);
        bytetest_80_86 = simd_andc(tmp332, tmp317);
        tmp333 = simd_and(tmp128, bytetest_b7);
        carryQ.cq[37] = carryout2carry(pablo_blk_Advance(tmp333, carryQ.get_carry_in(37), tmp334));
        tmp335 = simd_and(tmp334, bytetest_80_86);
        struct_Lo.cc = simd_or(tmp335, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_b8 = simd_and(tmp73, tmp50);
        tmp336 = simd_and(basis_bits.bit_3, tmp90);
        tmp337 = simd_not(tmp336);
        tmp338 = simd_or(basis_bits.bit_3, tmp90);
        tmp339 = simd_or(simd_and(basis_bits.bit_2, tmp337), simd_andc(tmp338, basis_bits.bit_2));
        bytetest_81_b0 = simd_and(bytetest_80_bf, tmp339);
        tmp340 = simd_and(tmp128, bytetest_b8);
        carryQ.cq[38] = carryout2carry(pablo_blk_Advance(tmp340, carryQ.get_carry_in(38), tmp341));
        tmp342 = simd_and(tmp341, bytetest_81_b0);
        struct_Lo.cc = simd_or(tmp342, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_b8 = simd_and(tmp73, tmp50);
        bytetest_b2_b3 = simd_and(tmp73, tmp201);
        tmp343 = simd_and(tmp341, bytetest_b2_b3);
        struct_Lo.cc = simd_or(tmp343, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_b9 = simd_and(tmp73, tmp55);
        bytetest_80_85 = simd_andc(tmp332, tmp100);
        tmp344 = simd_and(tmp128, bytetest_b9);
        carryQ.cq[39] = carryout2carry(pablo_blk_Advance(tmp344, carryQ.get_carry_in(39), tmp345));
        tmp346 = simd_and(tmp345, bytetest_80_85);
        struct_Lo.cc = simd_or(tmp346, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ba = simd_and(tmp73, tmp11);
        tmp347 = simd_andc(tmp163, tmp4);
        bytetest_81_82 = simd_and(tmp347, tmp205);
        tmp348 = simd_and(tmp128, bytetest_ba);
        carryQ.cq[40] = carryout2carry(pablo_blk_Advance(tmp348, carryQ.get_carry_in(40), tmp349));
        tmp350 = simd_and(tmp349, bytetest_81_82);
        struct_Lo.cc = simd_or(tmp350, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ba = simd_and(tmp73, tmp11);
        bytetest_84_84 = simd_and(tmp163, tmp35);
        tmp351 = simd_and(tmp349, bytetest_84_84);
        struct_Lo.cc = simd_or(tmp351, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ba = simd_and(tmp73, tmp11);
        tmp352 = simd_not(tmp57);
        tmp353 = simd_or(simd_and(basis_bits.bit_4, tmp352), simd_andc(tmp317, basis_bits.bit_4));
        bytetest_87_88 = simd_and(tmp163, tmp353);
        tmp354 = simd_and(tmp349, bytetest_87_88);
        struct_Lo.cc = simd_or(tmp354, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ba = simd_and(tmp73, tmp11);
        bytetest_8a_8a = simd_and(tmp163, tmp11);
        tmp355 = simd_and(tmp349, bytetest_8a_8a);
        struct_Lo.cc = simd_or(tmp355, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ba = simd_and(tmp73, tmp11);
        bytetest_8d_8d = simd_and(tmp163, tmp107);
        tmp356 = simd_and(tmp349, bytetest_8d_8d);
        struct_Lo.cc = simd_or(tmp356, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ba = simd_and(tmp73, tmp11);
        bytetest_94_97 = simd_and(tmp78, tmp20);
        tmp357 = simd_and(tmp349, bytetest_94_97);
        struct_Lo.cc = simd_or(tmp357, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ba = simd_and(tmp73, tmp11);
        bytetest_99_9f = simd_and(tmp209, tmp57);
        tmp358 = simd_and(tmp349, bytetest_99_9f);
        struct_Lo.cc = simd_or(tmp358, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ba = simd_and(tmp73, tmp11);
        tmp359 = simd_andc(tmp81, tmp4);
        bytetest_a1_a3 = simd_and(tmp359, tmp34);
        tmp360 = simd_and(tmp349, bytetest_a1_a3);
        struct_Lo.cc = simd_or(tmp360, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ba = simd_and(tmp73, tmp11);
        bytetest_a5_a5 = simd_and(tmp81, tmp79);
        tmp361 = simd_and(tmp349, bytetest_a5_a5);
        struct_Lo.cc = simd_or(tmp361, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ba = simd_and(tmp73, tmp11);
        bytetest_a7_a7 = simd_and(tmp81, tmp27);
        tmp362 = simd_and(tmp349, bytetest_a7_a7);
        struct_Lo.cc = simd_or(tmp362, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ba = simd_and(tmp73, tmp11);
        tmp363 = simd_and(tmp10, basis_bits.bit_6);
        bytetest_aa_ab = simd_and(tmp81, tmp363);
        tmp364 = simd_and(tmp349, bytetest_aa_ab);
        struct_Lo.cc = simd_or(tmp364, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ba = simd_and(tmp73, tmp11);
        tmp365 = simd_or(simd_and(basis_bits.bit_3, tmp168), simd_andc(tmp108, basis_bits.bit_3));
        bytetest_ad_b0 = simd_and(tmp177, tmp365);
        tmp366 = simd_and(tmp349, bytetest_ad_b0);
        struct_Lo.cc = simd_or(tmp366, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ba = simd_and(tmp73, tmp11);
        bytetest_b2_b3 = simd_and(tmp73, tmp201);
        tmp367 = simd_and(tmp349, bytetest_b2_b3);
        struct_Lo.cc = simd_or(tmp367, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_ba = simd_and(tmp73, tmp11);
        bytetest_bd_bd = simd_and(tmp73, tmp107);
        tmp368 = simd_and(tmp349, bytetest_bd_bd);
        struct_Lo.cc = simd_or(tmp368, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_bb = simd_and(tmp73, tmp23);
        bytetest_80_84 = simd_andc(tmp332, tmp140);
        tmp369 = simd_and(tmp128, bytetest_bb);
        carryQ.cq[41] = carryout2carry(pablo_blk_Advance(tmp369, carryQ.get_carry_in(41), tmp370));
        tmp371 = simd_and(tmp370, bytetest_80_84);
        struct_Lo.cc = simd_or(tmp371, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_bb = simd_and(tmp73, tmp23);
        bytetest_9c_9f = simd_and(tmp78, tmp62);
        tmp372 = simd_and(tmp370, bytetest_9c_9f);
        struct_Lo.cc = simd_or(tmp372, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_bc = simd_and(tmp73, tmp89);
        bytetest_80_80 = simd_andc(tmp163, tmp90);
        tmp373 = simd_and(tmp128, bytetest_bc);
        carryQ.cq[42] = carryout2carry(pablo_blk_Advance(tmp373, carryQ.get_carry_in(42), tmp374));
        tmp375 = simd_and(tmp374, bytetest_80_80);
        struct_Lo.cc = simd_or(tmp375, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_bd = simd_and(tmp73, tmp107);
        bytetest_80_87 = simd_andc(tmp163, basis_bits.bit_4);
        tmp376 = simd_and(tmp128, bytetest_bd);
        carryQ.cq[43] = carryout2carry(pablo_blk_Advance(tmp376, carryQ.get_carry_in(43), tmp377));
        tmp378 = simd_and(tmp377, bytetest_80_87);
        struct_Lo.cc = simd_or(tmp378, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_bd = simd_and(tmp73, tmp107);
        tmp379 = simd_not(tmp109);
        tmp380 = simd_or(simd_and(basis_bits.bit_2, tmp379), simd_andc(tmp171, basis_bits.bit_2));
        bytetest_89_ac = simd_and(bytetest_80_bf, tmp380);
        tmp381 = simd_and(tmp377, bytetest_89_ac);
        struct_Lo.cc = simd_or(tmp381, struct_Lo.cc);
        bytetest_e0 = simd_andc(tmp124, tmp90);
        bytetest_be = simd_and(tmp73, tmp99);
        tmp382 = simd_and(tmp163, basis_bits.bit_4);
        bytetest_88_8c = simd_andc(tmp382, tmp140);
        tmp383 = simd_and(tmp128, bytetest_be);
        carryQ.cq[44] = carryout2carry(pablo_blk_Advance(tmp383, carryQ.get_carry_in(44), tmp384));
        tmp385 = simd_and(tmp384, bytetest_88_8c);
        struct_Lo.cc = simd_or(tmp385, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_80 = simd_andc(tmp163, tmp90);
        tmp386 = simd_and(basis_bits.bit_2, tmp42);
        bytetest_80_aa = simd_andc(bytetest_80_bf, tmp386);
        tmp387 = simd_and(tmp13, bytetest_e1);
        carryQ.cq[45] = carryout2carry(pablo_blk_Advance(tmp387, carryQ.get_carry_in(45), tmp388));
        tmp389 = simd_and(tmp388, bytetest_80);
        carryQ.cq[46] = carryout2carry(pablo_blk_Advance(tmp389, carryQ.get_carry_in(46), tmp390));
        tmp391 = simd_and(tmp390, bytetest_80_aa);
        struct_Lo.cc = simd_or(tmp391, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_80 = simd_andc(tmp163, tmp90);
        bytetest_bf_bf = simd_and(tmp73, tmp87);
        tmp392 = simd_and(tmp390, bytetest_bf_bf);
        struct_Lo.cc = simd_or(tmp392, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_81 = simd_and(tmp163, tmp115);
        bytetest_90_95 = simd_andc(tmp255, tmp100);
        tmp393 = simd_and(tmp388, bytetest_81);
        carryQ.cq[47] = carryout2carry(pablo_blk_Advance(tmp393, carryQ.get_carry_in(47), tmp394));
        tmp395 = simd_and(tmp394, bytetest_90_95);
        struct_Lo.cc = simd_or(tmp395, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_81 = simd_and(tmp163, tmp115);
        bytetest_9a_9d = simd_and(tmp209, tmp257);
        tmp396 = simd_and(tmp394, bytetest_9a_9d);
        struct_Lo.cc = simd_or(tmp396, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_81 = simd_and(tmp163, tmp115);
        bytetest_a1_a1 = simd_and(tmp81, tmp115);
        tmp397 = simd_and(tmp394, bytetest_a1_a1);
        struct_Lo.cc = simd_or(tmp397, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_81 = simd_and(tmp163, tmp115);
        tmp398 = simd_and(tmp81, tmp20);
        bytetest_a5_a6 = simd_and(tmp398, tmp205);
        tmp399 = simd_and(tmp394, bytetest_a5_a6);
        struct_Lo.cc = simd_or(tmp399, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_81 = simd_and(tmp163, tmp115);
        bytetest_ae_b0 = simd_and(tmp177, tmp253);
        tmp400 = simd_and(tmp394, bytetest_ae_b0);
        struct_Lo.cc = simd_or(tmp400, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_82 = simd_and(tmp163, tmp6);
        bytetest_80_81 = simd_andc(tmp163, tmp95);
        tmp401 = simd_and(tmp388, bytetest_82);
        carryQ.cq[48] = carryout2carry(pablo_blk_Advance(tmp401, carryQ.get_carry_in(48), tmp402));
        tmp403 = simd_and(tmp402, bytetest_80_81);
        bytetest_81 = simd_and(tmp163, tmp115);
        bytetest_b5_bf = simd_and(tmp73, tmp320);
        tmp404 = simd_and(tmp394, bytetest_b5_bf);
        tmp405 = simd_or(tmp404, tmp403);
        struct_Lo.cc = simd_or(tmp405, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_82 = simd_and(tmp163, tmp6);
        bytetest_8e_8e = simd_and(tmp163, tmp99);
        tmp406 = simd_and(tmp402, bytetest_8e_8e);
        struct_Lo.cc = simd_or(tmp406, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_83 = simd_and(tmp163, tmp248);
        tmp407 = simd_or(simd_and(basis_bits.bit_2, tmp308), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
        bytetest_90_ba = simd_and(bytetest_80_bf, tmp407);
        tmp408 = simd_and(tmp388, bytetest_83);
        carryQ.cq[49] = carryout2carry(pablo_blk_Advance(tmp408, carryQ.get_carry_in(49), tmp409));
        tmp410 = simd_and(tmp409, bytetest_90_ba);
        struct_Lo.cc = simd_or(tmp410, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_89 = simd_and(tmp163, tmp55);
        bytetest_80_88 = simd_andc(tmp163, tmp132);
        tmp411 = simd_and(tmp388, bytetest_89);
        carryQ.cq[50] = carryout2carry(pablo_blk_Advance(tmp411, carryQ.get_carry_in(50), tmp412));
        tmp413 = simd_and(tmp412, bytetest_80_88);
        tmp414 = simd_or(simd_and(basis_bits.bit_4, tmp352), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
        bytetest_84_88 = simd_and(tmp163, tmp414);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp415 = simd_and(tmp388, bytetest_84_88);
        carryQ.cq[51] = carryout2carry(pablo_blk_Advance(tmp415, carryQ.get_carry_in(51), tmp416));
        tmp417 = simd_and(tmp416, bytetest_80_bf);
        bytetest_83 = simd_and(tmp163, tmp248);
        tmp418 = simd_and(tmp73, tmp62);
        bytetest_bd_bf = simd_and(tmp418, tmp34);
        tmp419 = simd_and(tmp409, bytetest_bd_bf);
        tmp420 = simd_or(tmp419, tmp417);
        tmp421 = simd_or(tmp420, tmp413);
        struct_Lo.cc = simd_or(tmp421, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_89 = simd_and(tmp163, tmp55);
        bytetest_8a_8d = simd_and(tmp382, tmp257);
        tmp422 = simd_and(tmp412, bytetest_8a_8d);
        struct_Lo.cc = simd_or(tmp422, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_89 = simd_and(tmp163, tmp55);
        bytetest_90_96 = simd_andc(tmp255, tmp317);
        tmp423 = simd_and(tmp412, bytetest_90_96);
        struct_Lo.cc = simd_or(tmp423, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_89 = simd_and(tmp163, tmp55);
        bytetest_98_98 = simd_and(tmp78, tmp50);
        tmp424 = simd_and(tmp412, bytetest_98_98);
        struct_Lo.cc = simd_or(tmp424, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_89 = simd_and(tmp163, tmp55);
        bytetest_9a_9d = simd_and(tmp209, tmp257);
        tmp425 = simd_and(tmp412, bytetest_9a_9d);
        struct_Lo.cc = simd_or(tmp425, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_8a = simd_and(tmp163, tmp11);
        bytetest_80_88 = simd_andc(tmp163, tmp132);
        tmp426 = simd_and(tmp388, bytetest_8a);
        carryQ.cq[52] = carryout2carry(pablo_blk_Advance(tmp426, carryQ.get_carry_in(52), tmp427));
        tmp428 = simd_and(tmp427, bytetest_80_88);
        bytetest_89 = simd_and(tmp163, tmp55);
        bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp429 = simd_and(tmp412, bytetest_a0_bf);
        tmp430 = simd_or(tmp429, tmp428);
        struct_Lo.cc = simd_or(tmp430, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_8a = simd_and(tmp163, tmp11);
        bytetest_8a_8d = simd_and(tmp382, tmp257);
        tmp431 = simd_and(tmp427, bytetest_8a_8d);
        struct_Lo.cc = simd_or(tmp431, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_8a = simd_and(tmp163, tmp11);
        tmp432 = simd_or(simd_and(basis_bits.bit_2, tmp337), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
        bytetest_90_b0 = simd_and(bytetest_80_bf, tmp432);
        tmp433 = simd_and(tmp427, bytetest_90_b0);
        struct_Lo.cc = simd_or(tmp433, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_8a = simd_and(tmp163, tmp11);
        bytetest_b2_b5 = simd_and(tmp160, tmp257);
        tmp434 = simd_and(tmp427, bytetest_b2_b5);
        struct_Lo.cc = simd_or(tmp434, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_8a = simd_and(tmp163, tmp11);
        bytetest_b8_be = simd_andc(tmp83, tmp317);
        tmp435 = simd_and(tmp427, bytetest_b8_be);
        struct_Lo.cc = simd_or(tmp435, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_8b = simd_and(tmp163, tmp23);
        bytetest_80_80 = simd_andc(tmp163, tmp90);
        tmp436 = simd_and(tmp388, bytetest_8b);
        carryQ.cq[53] = carryout2carry(pablo_blk_Advance(tmp436, carryQ.get_carry_in(53), tmp437));
        tmp438 = simd_and(tmp437, bytetest_80_80);
        struct_Lo.cc = simd_or(tmp438, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_8b = simd_and(tmp163, tmp23);
        bytetest_82_85 = simd_and(bytetest_80_87, tmp257);
        tmp439 = simd_and(tmp437, bytetest_82_85);
        struct_Lo.cc = simd_or(tmp439, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_8b = simd_and(tmp163, tmp23);
        tmp440 = simd_or(simd_and(basis_bits.bit_3, tmp319), simd_andc(basis_bits.bit_4, basis_bits.bit_3));
        bytetest_88_96 = simd_and(tmp125, tmp440);
        tmp441 = simd_and(tmp437, bytetest_88_96);
        struct_Lo.cc = simd_or(tmp441, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_8c = simd_and(tmp163, tmp89);
        bytetest_80_90 = simd_andc(tmp125, tmp336);
        tmp442 = simd_and(tmp388, bytetest_8c);
        carryQ.cq[54] = carryout2carry(pablo_blk_Advance(tmp442, carryQ.get_carry_in(54), tmp443));
        tmp444 = simd_and(tmp443, bytetest_80_90);
        bytetest_8b = simd_and(tmp163, tmp23);
        tmp445 = simd_or(basis_bits.bit_2, tmp157);
        bytetest_98_bf = simd_and(bytetest_80_bf, tmp445);
        tmp446 = simd_and(tmp437, bytetest_98_bf);
        tmp447 = simd_or(tmp446, tmp444);
        struct_Lo.cc = simd_or(tmp447, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_8c = simd_and(tmp163, tmp89);
        bytetest_92_95 = simd_and(tmp255, tmp257);
        tmp448 = simd_and(tmp443, bytetest_92_95);
        struct_Lo.cc = simd_or(tmp448, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_8d = simd_and(tmp163, tmp107);
        bytetest_80_9a = simd_andc(tmp125, tmp307);
        tmp449 = simd_and(tmp388, bytetest_8d);
        carryQ.cq[55] = carryout2carry(pablo_blk_Advance(tmp449, carryQ.get_carry_in(55), tmp450));
        tmp451 = simd_and(tmp450, bytetest_80_9a);
        bytetest_8c = simd_and(tmp163, tmp89);
        bytetest_98_bf = simd_and(bytetest_80_bf, tmp445);
        tmp452 = simd_and(tmp443, bytetest_98_bf);
        tmp453 = simd_or(tmp452, tmp451);
        struct_Lo.cc = simd_or(tmp453, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_8e = simd_and(tmp163, tmp99);
        bytetest_80_8f = simd_andc(bytetest_80_bf, tmp2);
        tmp454 = simd_and(tmp388, bytetest_8e);
        carryQ.cq[56] = carryout2carry(pablo_blk_Advance(tmp454, carryQ.get_carry_in(56), tmp455));
        tmp456 = simd_and(tmp455, bytetest_80_8f);
        struct_Lo.cc = simd_or(tmp456, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_8f = simd_and(bytetest_80_8f, tmp87);
        tmp457 = simd_and(basis_bits.bit_3, tmp320);
        tmp458 = simd_and(basis_bits.bit_2, tmp457);
        bytetest_80_b4 = simd_andc(bytetest_80_bf, tmp458);
        tmp459 = simd_and(tmp388, bytetest_8f);
        carryQ.cq[57] = carryout2carry(pablo_blk_Advance(tmp459, carryQ.get_carry_in(57), tmp460));
        tmp461 = simd_and(tmp460, bytetest_80_b4);
        bytetest_8e = simd_and(bytetest_80_8f, tmp99);
        bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp462 = simd_and(tmp455, bytetest_a0_bf);
        tmp463 = simd_or(tmp462, tmp461);
        struct_Lo.cc = simd_or(tmp463, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_99 = simd_and(tmp78, tmp55);
        tmp464 = simd_and(basis_bits.bit_2, tmp109);
        bytetest_80_ac = simd_andc(bytetest_80_bf, tmp464);
        tmp465 = simd_and(tmp388, bytetest_99);
        carryQ.cq[58] = carryout2carry(pablo_blk_Advance(tmp465, carryQ.get_carry_in(58), tmp466));
        tmp467 = simd_and(tmp466, bytetest_80_ac);
        tmp468 = simd_or(simd_and(basis_bits.bit_4, tmp352), simd_andc(tmp57, basis_bits.bit_4));
        bytetest_91_98 = simd_and(tmp78, tmp468);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp469 = simd_and(tmp388, bytetest_91_98);
        carryQ.cq[59] = carryout2carry(pablo_blk_Advance(tmp469, carryQ.get_carry_in(59), tmp470));
        tmp471 = simd_and(tmp470, bytetest_80_bf);
        bytetest_90 = simd_andc(tmp78, tmp90);
        tmp472 = simd_or(basis_bits.bit_2, tmp338);
        bytetest_81_bf = simd_and(bytetest_80_bf, tmp472);
        tmp473 = simd_and(tmp388, bytetest_90);
        carryQ.cq[60] = carryout2carry(pablo_blk_Advance(tmp473, carryQ.get_carry_in(60), tmp474));
        tmp475 = simd_and(tmp474, bytetest_81_bf);
        tmp476 = simd_or(tmp475, tmp471);
        tmp477 = simd_or(tmp476, tmp467);
        struct_Lo.cc = simd_or(tmp477, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_99 = simd_and(tmp78, tmp55);
        tmp478 = simd_or(basis_bits.bit_3, tmp87);
        bytetest_af_bf = simd_and(bytetest_a0_bf, tmp478);
        tmp479 = simd_and(tmp466, bytetest_af_bf);
        struct_Lo.cc = simd_or(tmp479, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_9a = simd_and(tmp78, tmp11);
        tmp480 = simd_not(tmp41);
        tmp481 = simd_or(simd_and(basis_bits.bit_3, tmp480), simd_andc(tmp90, basis_bits.bit_3));
        bytetest_81_9a = simd_and(tmp125, tmp481);
        tmp482 = simd_and(tmp388, bytetest_9a);
        carryQ.cq[61] = carryout2carry(pablo_blk_Advance(tmp482, carryQ.get_carry_in(61), tmp483));
        tmp484 = simd_and(tmp483, bytetest_81_9a);
        struct_Lo.cc = simd_or(tmp484, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_9b = simd_and(tmp78, tmp23);
        bytetest_80_aa = simd_andc(bytetest_80_bf, tmp386);
        tmp485 = simd_and(tmp388, bytetest_9b);
        carryQ.cq[62] = carryout2carry(pablo_blk_Advance(tmp485, carryQ.get_carry_in(62), tmp486));
        tmp487 = simd_and(tmp486, bytetest_80_aa);
        bytetest_9a = simd_and(tmp78, tmp11);
        bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp488 = simd_and(tmp483, bytetest_a0_bf);
        tmp489 = simd_or(tmp488, tmp487);
        struct_Lo.cc = simd_or(tmp489, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_9c = simd_and(tmp78, tmp89);
        tmp490 = simd_and(basis_bits.bit_4, tmp140);
        bytetest_80_8c = simd_andc(bytetest_80_8f, tmp490);
        tmp491 = simd_and(tmp388, bytetest_9c);
        carryQ.cq[63] = carryout2carry(pablo_blk_Advance(tmp491, carryQ.get_carry_in(63), tmp492));
        tmp493 = simd_and(tmp492, bytetest_80_8c);
        struct_Lo.cc = simd_or(tmp493, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_9c = simd_and(tmp78, tmp89);
        tmp494 = simd_or(simd_and(basis_bits.bit_3, tmp221), simd_andc(tmp63, basis_bits.bit_3));
        bytetest_8e_91 = simd_and(tmp125, tmp494);
        tmp495 = simd_and(tmp492, bytetest_8e_91);
        struct_Lo.cc = simd_or(tmp495, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_9c = simd_and(tmp78, tmp89);
        bytetest_a0_b1 = simd_andc(bytetest_a0_bf, tmp96);
        tmp496 = simd_and(tmp492, bytetest_a0_b1);
        struct_Lo.cc = simd_or(tmp496, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_9d = simd_and(tmp78, tmp107);
        bytetest_80_91 = simd_andc(tmp125, tmp96);
        tmp497 = simd_and(tmp388, bytetest_9d);
        carryQ.cq[64] = carryout2carry(pablo_blk_Advance(tmp497, carryQ.get_carry_in(64), tmp498));
        tmp499 = simd_and(tmp498, bytetest_80_91);
        struct_Lo.cc = simd_or(tmp499, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_9d = simd_and(tmp78, tmp107);
        bytetest_a0_ac = simd_andc(tmp81, tmp490);
        tmp500 = simd_and(tmp498, bytetest_a0_ac);
        struct_Lo.cc = simd_or(tmp500, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_9d = simd_and(tmp78, tmp107);
        bytetest_ae_b0 = simd_and(bytetest_a0_bf, tmp253);
        tmp501 = simd_and(tmp498, bytetest_ae_b0);
        struct_Lo.cc = simd_or(tmp501, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_9e = simd_and(tmp78, tmp99);
        tmp502 = simd_and(basis_bits.bit_2, tmp66);
        bytetest_80_b3 = simd_andc(bytetest_80_bf, tmp502);
        tmp503 = simd_and(tmp388, bytetest_9e);
        carryQ.cq[65] = carryout2carry(pablo_blk_Advance(tmp503, carryQ.get_carry_in(65), tmp504));
        tmp505 = simd_and(tmp504, bytetest_80_b3);
        struct_Lo.cc = simd_or(tmp505, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_9f = simd_and(tmp78, tmp87);
        bytetest_9c_9c = simd_and(tmp78, tmp89);
        tmp506 = simd_and(tmp388, bytetest_9f);
        carryQ.cq[66] = carryout2carry(pablo_blk_Advance(tmp506, carryQ.get_carry_in(66), tmp507));
        tmp508 = simd_and(tmp507, bytetest_9c_9c);
        struct_Lo.cc = simd_or(tmp508, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_a1 = simd_and(tmp81, tmp115);
        tmp509 = simd_andc(bytetest_80_8f, tmp4);
        bytetest_80_82 = simd_andc(tmp509, tmp22);
        tmp510 = simd_and(tmp388, bytetest_a1);
        carryQ.cq[67] = carryout2carry(pablo_blk_Advance(tmp510, carryQ.get_carry_in(67), tmp511));
        tmp512 = simd_and(tmp511, bytetest_80_82);
        bytetest_a0 = simd_andc(tmp81, tmp90);
        bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp513 = simd_and(tmp388, bytetest_a0);
        carryQ.cq[68] = carryout2carry(pablo_blk_Advance(tmp513, carryQ.get_carry_in(68), tmp514));
        tmp515 = simd_and(tmp514, bytetest_a0_bf);
        tmp516 = simd_or(tmp515, tmp512);
        struct_Lo.cc = simd_or(tmp516, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_a1 = simd_and(tmp81, tmp115);
        tmp517 = simd_not(tmp157);
        tmp518 = simd_or(simd_and(basis_bits.bit_2, tmp517), simd_andc(tmp146, basis_bits.bit_2));
        bytetest_84_b7 = simd_and(bytetest_80_bf, tmp518);
        tmp519 = simd_and(tmp511, bytetest_84_b7);
        struct_Lo.cc = simd_or(tmp519, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_a2 = simd_and(tmp81, tmp6);
        tmp520 = simd_and(basis_bits.bit_2, tmp171);
        bytetest_80_a8 = simd_andc(bytetest_80_bf, tmp520);
        tmp521 = simd_and(tmp388, bytetest_a2);
        carryQ.cq[69] = carryout2carry(pablo_blk_Advance(tmp521, carryQ.get_carry_in(69), tmp522));
        tmp523 = simd_and(tmp522, bytetest_80_a8);
        struct_Lo.cc = simd_or(tmp523, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_a2 = simd_and(tmp81, tmp6);
        bytetest_aa_aa = simd_and(tmp81, tmp11);
        tmp524 = simd_and(tmp522, bytetest_aa_aa);
        struct_Lo.cc = simd_or(tmp524, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_a3 = simd_and(tmp81, tmp248);
        tmp525 = simd_and(basis_bits.bit_2, tmp126);
        bytetest_80_b5 = simd_andc(bytetest_80_bf, tmp525);
        tmp526 = simd_and(tmp388, bytetest_a3);
        carryQ.cq[70] = carryout2carry(pablo_blk_Advance(tmp526, carryQ.get_carry_in(70), tmp527));
        tmp528 = simd_and(tmp527, bytetest_80_b5);
        bytetest_a2 = simd_and(tmp81, tmp6);
        bytetest_b0_bf = simd_and(bytetest_80_bf, tmp17);
        tmp529 = simd_and(tmp522, bytetest_b0_bf);
        tmp530 = simd_or(tmp529, tmp528);
        struct_Lo.cc = simd_or(tmp530, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_a4 = simd_and(tmp81, tmp35);
        tmp531 = simd_and(basis_bits.bit_3, tmp108);
        bytetest_80_9c = simd_andc(tmp125, tmp531);
        tmp532 = simd_and(tmp388, bytetest_a4);
        carryQ.cq[71] = carryout2carry(pablo_blk_Advance(tmp532, carryQ.get_carry_in(71), tmp533));
        tmp534 = simd_and(tmp533, bytetest_80_9c);
        struct_Lo.cc = simd_or(tmp534, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_a5 = simd_and(tmp81, tmp79);
        tmp535 = simd_or(basis_bits.bit_3, tmp63);
        tmp536 = simd_not(tmp535);
        tmp537 = simd_or(simd_and(basis_bits.bit_2, tmp536), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
        bytetest_90_ad = simd_and(bytetest_80_bf, tmp537);
        tmp538 = simd_and(tmp388, bytetest_a5);
        carryQ.cq[72] = carryout2carry(pablo_blk_Advance(tmp538, carryQ.get_carry_in(72), tmp539));
        tmp540 = simd_and(tmp539, bytetest_90_ad);
        struct_Lo.cc = simd_or(tmp540, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_a5 = simd_and(tmp81, tmp79);
        tmp541 = simd_andc(bytetest_b0_bf, basis_bits.bit_4);
        bytetest_b0_b4 = simd_andc(tmp541, tmp140);
        tmp542 = simd_and(tmp539, bytetest_b0_b4);
        struct_Lo.cc = simd_or(tmp542, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_a6 = simd_and(tmp81, tmp21);
        tmp543 = simd_or(basis_bits.bit_3, tmp62);
        tmp544 = simd_and(basis_bits.bit_2, tmp543);
        bytetest_80_ab = simd_andc(bytetest_80_bf, tmp544);
        tmp545 = simd_and(tmp388, bytetest_a6);
        carryQ.cq[73] = carryout2carry(pablo_blk_Advance(tmp545, carryQ.get_carry_in(73), tmp546));
        tmp547 = simd_and(tmp546, bytetest_80_ab);
        struct_Lo.cc = simd_or(tmp547, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_a7 = simd_and(tmp81, tmp27);
        tmp548 = simd_andc(bytetest_80_8f, basis_bits.bit_4);
        bytetest_81_87 = simd_and(tmp548, tmp57);
        tmp549 = simd_and(tmp388, bytetest_a7);
        carryQ.cq[74] = carryout2carry(pablo_blk_Advance(tmp549, carryQ.get_carry_in(74), tmp550));
        tmp551 = simd_and(tmp550, bytetest_81_87);
        struct_Lo.cc = simd_or(tmp551, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_a8 = simd_and(tmp81, tmp50);
        tmp552 = simd_and(basis_bits.bit_3, tmp318);
        bytetest_80_96 = simd_andc(tmp125, tmp552);
        tmp553 = simd_and(tmp388, bytetest_a8);
        carryQ.cq[75] = carryout2carry(pablo_blk_Advance(tmp553, carryQ.get_carry_in(75), tmp554));
        tmp555 = simd_and(tmp554, bytetest_80_96);
        struct_Lo.cc = simd_or(tmp555, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_a9 = simd_and(tmp81, tmp55);
        bytetest_80_94 = simd_andc(tmp125, tmp457);
        tmp556 = simd_and(tmp388, bytetest_a9);
        carryQ.cq[76] = carryout2carry(pablo_blk_Advance(tmp556, carryQ.get_carry_in(76), tmp557));
        tmp558 = simd_and(tmp557, bytetest_80_94);
        bytetest_a8 = simd_and(tmp81, tmp50);
        bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp559 = simd_and(tmp554, bytetest_a0_bf);
        tmp560 = simd_or(tmp559, tmp558);
        struct_Lo.cc = simd_or(tmp560, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_ac = simd_and(tmp81, tmp89);
        tmp561 = simd_not(tmp66);
        tmp562 = simd_or(basis_bits.bit_3, tmp320);
        tmp563 = simd_or(simd_and(basis_bits.bit_2, tmp561), simd_andc(tmp562, basis_bits.bit_2));
        bytetest_85_b3 = simd_and(bytetest_80_bf, tmp563);
        tmp564 = simd_and(tmp388, bytetest_ac);
        carryQ.cq[77] = carryout2carry(pablo_blk_Advance(tmp564, carryQ.get_carry_in(77), tmp565));
        tmp566 = simd_and(tmp565, bytetest_85_b3);
        struct_Lo.cc = simd_or(tmp566, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_ad = simd_and(tmp81, tmp107);
        tmp567 = simd_or(simd_and(basis_bits.bit_4, tmp328), simd_andc(tmp140, basis_bits.bit_4));
        bytetest_85_8b = simd_and(bytetest_80_8f, tmp567);
        tmp568 = simd_and(tmp388, bytetest_ad);
        carryQ.cq[78] = carryout2carry(pablo_blk_Advance(tmp568, carryQ.get_carry_in(78), tmp569));
        tmp570 = simd_and(tmp569, bytetest_85_8b);
        struct_Lo.cc = simd_or(tmp570, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_ae = simd_and(tmp81, tmp99);
        tmp571 = simd_not(tmp338);
        tmp572 = simd_or(basis_bits.bit_3, tmp173);
        tmp573 = simd_or(simd_and(basis_bits.bit_2, tmp571), simd_andc(tmp572, basis_bits.bit_2));
        bytetest_83_a0 = simd_and(bytetest_80_bf, tmp573);
        tmp574 = simd_and(tmp388, bytetest_ae);
        carryQ.cq[79] = carryout2carry(pablo_blk_Advance(tmp574, carryQ.get_carry_in(79), tmp575));
        tmp576 = simd_and(tmp575, bytetest_83_a0);
        struct_Lo.cc = simd_or(tmp576, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_ae = simd_and(tmp81, tmp99);
        bytetest_ae_af = simd_and(tmp81, tmp63);
        tmp577 = simd_and(tmp575, bytetest_ae_af);
        struct_Lo.cc = simd_or(tmp577, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_af = simd_and(tmp81, tmp87);
        bytetest_80_a5 = simd_andc(bytetest_80_bf, tmp103);
        tmp578 = simd_and(tmp388, bytetest_af);
        carryQ.cq[80] = carryout2carry(pablo_blk_Advance(tmp578, carryQ.get_carry_in(80), tmp579));
        tmp580 = simd_and(tmp579, bytetest_80_a5);
        bytetest_ae = simd_and(tmp81, tmp99);
        tmp581 = simd_and(bytetest_b0_bf, basis_bits.bit_4);
        bytetest_ba_bf = simd_and(tmp581, tmp117);
        tmp582 = simd_and(tmp575, bytetest_ba_bf);
        tmp583 = simd_or(tmp582, tmp580);
        struct_Lo.cc = simd_or(tmp583, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_b0 = simd_andc(bytetest_b0_bf, tmp90);
        tmp584 = simd_and(basis_bits.bit_2, tmp146);
        bytetest_80_a3 = simd_andc(bytetest_80_bf, tmp584);
        tmp585 = simd_and(tmp388, bytetest_b0);
        carryQ.cq[81] = carryout2carry(pablo_blk_Advance(tmp585, carryQ.get_carry_in(81), tmp586));
        tmp587 = simd_and(tmp586, bytetest_80_a3);
        struct_Lo.cc = simd_or(tmp587, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_b1 = simd_and(bytetest_b0_bf, tmp115);
        tmp588 = simd_and(bytetest_80_8f, tmp62);
        bytetest_8d_8f = simd_and(tmp588, tmp34);
        tmp589 = simd_and(tmp388, bytetest_b1);
        carryQ.cq[82] = carryout2carry(pablo_blk_Advance(tmp589, carryQ.get_carry_in(82), tmp590));
        tmp591 = simd_and(tmp590, bytetest_8d_8f);
        struct_Lo.cc = simd_or(tmp591, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_b1 = simd_and(bytetest_b0_bf, tmp115);
        tmp592 = simd_or(simd_and(basis_bits.bit_2, tmp517), simd_andc(tmp144, basis_bits.bit_2));
        bytetest_9a_b7 = simd_and(bytetest_80_bf, tmp592);
        tmp593 = simd_and(tmp590, bytetest_9a_b7);
        struct_Lo.cc = simd_or(tmp593, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp248);
        tmp594 = simd_and(tmp81, basis_bits.bit_4);
        bytetest_a9_ac = simd_and(tmp594, tmp210);
        tmp595 = simd_and(tmp388, bytetest_b3);
        carryQ.cq[83] = carryout2carry(pablo_blk_Advance(tmp595, carryQ.get_carry_in(83), tmp596));
        tmp597 = simd_and(tmp596, bytetest_a9_ac);
        struct_Lo.cc = simd_or(tmp597, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp248);
        bytetest_ae_b1 = simd_and(bytetest_a0_bf, tmp494);
        tmp598 = simd_and(tmp596, bytetest_ae_b1);
        struct_Lo.cc = simd_or(tmp598, struct_Lo.cc);
        bytetest_e1 = simd_and(tmp124, tmp115);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp248);
        tmp599 = simd_and(bytetest_b0_bf, tmp20);
        bytetest_b5_b6 = simd_and(tmp599, tmp205);
        tmp600 = simd_and(tmp596, bytetest_b5_b6);
        struct_Lo.cc = simd_or(tmp600, struct_Lo.cc);
        bytetest_e2 = simd_and(tmp124, tmp6);
        bytetest_84 = simd_and(bytetest_80_8f, tmp35);
        tmp601 = simd_or(simd_and(basis_bits.bit_4, tmp352), simd_andc(tmp140, basis_bits.bit_4));
        bytetest_b5_b8 = simd_and(bytetest_b0_bf, tmp601);
        tmp602 = simd_and(tmp13, bytetest_e2);
        carryQ.cq[84] = carryout2carry(pablo_blk_Advance(tmp602, carryQ.get_carry_in(84), tmp603));
        tmp604 = simd_and(tmp603, bytetest_84);
        carryQ.cq[85] = carryout2carry(pablo_blk_Advance(tmp604, carryQ.get_carry_in(85), tmp605));
        tmp606 = simd_and(tmp605, bytetest_b5_b8);
        struct_Lo.cc = simd_or(tmp606, struct_Lo.cc);
        bytetest_e2 = simd_and(tmp124, tmp6);
        bytetest_b5 = simd_and(bytetest_b0_bf, tmp79);
        tmp607 = simd_or(basis_bits.bit_3, basis_bits.bit_4);
        tmp608 = simd_and(basis_bits.bit_2, tmp607);
        bytetest_80_a7 = simd_andc(bytetest_80_bf, tmp608);
        tmp609 = simd_and(tmp603, bytetest_b5);
        carryQ.cq[86] = carryout2carry(pablo_blk_Advance(tmp609, carryQ.get_carry_in(86), tmp610));
        tmp611 = simd_and(tmp610, bytetest_80_a7);
        bytetest_b4 = simd_and(bytetest_b0_bf, tmp35);
        bytetest_b0_bf = simd_and(bytetest_80_bf, tmp17);
        tmp612 = simd_and(tmp603, bytetest_b4);
        carryQ.cq[87] = carryout2carry(pablo_blk_Advance(tmp612, carryQ.get_carry_in(87), tmp613));
        tmp614 = simd_and(tmp613, bytetest_b0_bf);
        tmp615 = simd_or(tmp614, tmp611);
        struct_Lo.cc = simd_or(tmp615, struct_Lo.cc);
        bytetest_e2 = simd_and(tmp124, tmp6);
        bytetest_b6 = simd_and(bytetest_b0_bf, tmp21);
        bytetest_80_96 = simd_andc(tmp125, tmp552);
        tmp616 = simd_and(tmp603, bytetest_b6);
        carryQ.cq[88] = carryout2carry(pablo_blk_Advance(tmp616, carryQ.get_carry_in(88), tmp617));
        tmp618 = simd_and(tmp617, bytetest_80_96);
        struct_Lo.cc = simd_or(tmp618, struct_Lo.cc);
        bytetest_e2 = simd_and(tmp124, tmp6);
        bytetest_b6 = simd_and(bytetest_b0_bf, tmp21);
        bytetest_a0_a6 = simd_andc(tmp263, tmp317);
        tmp619 = simd_and(tmp617, bytetest_a0_a6);
        struct_Lo.cc = simd_or(tmp619, struct_Lo.cc);
        bytetest_e2 = simd_and(tmp124, tmp6);
        bytetest_b6 = simd_and(bytetest_b0_bf, tmp21);
        bytetest_a8_ae = simd_andc(tmp594, tmp317);
        tmp620 = simd_and(tmp617, bytetest_a8_ae);
        struct_Lo.cc = simd_or(tmp620, struct_Lo.cc);
        bytetest_e2 = simd_and(tmp124, tmp6);
        bytetest_b6 = simd_and(bytetest_b0_bf, tmp21);
        bytetest_b0_b6 = simd_andc(tmp541, tmp317);
        tmp621 = simd_and(tmp617, bytetest_b0_b6);
        struct_Lo.cc = simd_or(tmp621, struct_Lo.cc);
        bytetest_e2 = simd_and(tmp124, tmp6);
        bytetest_b6 = simd_and(bytetest_b0_bf, tmp21);
        bytetest_b8_be = simd_andc(tmp581, tmp317);
        tmp622 = simd_and(tmp617, bytetest_b8_be);
        struct_Lo.cc = simd_or(tmp622, struct_Lo.cc);
        bytetest_e2 = simd_and(tmp124, tmp6);
        bytetest_b7 = simd_and(bytetest_b0_bf, tmp27);
        bytetest_80_86 = simd_andc(tmp548, tmp317);
        tmp623 = simd_and(tmp603, bytetest_b7);
        carryQ.cq[89] = carryout2carry(pablo_blk_Advance(tmp623, carryQ.get_carry_in(89), tmp624));
        tmp625 = simd_and(tmp624, bytetest_80_86);
        struct_Lo.cc = simd_or(tmp625, struct_Lo.cc);
        bytetest_e2 = simd_and(tmp124, tmp6);
        bytetest_b7 = simd_and(bytetest_b0_bf, tmp27);
        tmp626 = simd_and(bytetest_80_8f, basis_bits.bit_4);
        bytetest_88_8e = simd_andc(tmp626, tmp317);
        tmp627 = simd_and(tmp624, bytetest_88_8e);
        struct_Lo.cc = simd_or(tmp627, struct_Lo.cc);
        bytetest_e2 = simd_and(tmp124, tmp6);
        bytetest_b7 = simd_and(bytetest_b0_bf, tmp27);
        bytetest_90_96 = simd_andc(tmp255, tmp317);
        tmp628 = simd_and(tmp624, bytetest_90_96);
        struct_Lo.cc = simd_or(tmp628, struct_Lo.cc);
        bytetest_e2 = simd_and(tmp124, tmp6);
        bytetest_b7 = simd_and(bytetest_b0_bf, tmp27);
        bytetest_98_9e = simd_andc(tmp209, tmp317);
        tmp629 = simd_and(tmp624, bytetest_98_9e);
        struct_Lo.cc = simd_or(tmp629, struct_Lo.cc);
        bytetest_e3 = simd_and(tmp124, tmp248);
        bytetest_80 = simd_andc(bytetest_80_8f, tmp90);
        bytetest_86_86 = simd_and(bytetest_80_8f, tmp21);
        tmp630 = simd_and(tmp13, bytetest_e3);
        carryQ.cq[90] = carryout2carry(pablo_blk_Advance(tmp630, carryQ.get_carry_in(90), tmp631));
        tmp632 = simd_and(tmp631, bytetest_80);
        carryQ.cq[91] = carryout2carry(pablo_blk_Advance(tmp632, carryQ.get_carry_in(91), tmp633));
        tmp634 = simd_and(tmp633, bytetest_86_86);
        struct_Lo.cc = simd_or(tmp634, struct_Lo.cc);
        bytetest_e3 = simd_and(tmp124, tmp248);
        bytetest_80 = simd_andc(bytetest_80_8f, tmp90);
        bytetest_bc_bc = simd_and(bytetest_b0_bf, tmp89);
        tmp635 = simd_and(tmp633, bytetest_bc_bc);
        struct_Lo.cc = simd_or(tmp635, struct_Lo.cc);
        bytetest_e3 = simd_and(tmp124, tmp248);
        bytetest_82 = simd_and(bytetest_80_8f, tmp6);
        bytetest_80_96 = simd_andc(tmp125, tmp552);
        tmp636 = simd_and(tmp631, bytetest_82);
        carryQ.cq[92] = carryout2carry(pablo_blk_Advance(tmp636, carryQ.get_carry_in(92), tmp637));
        tmp638 = simd_and(tmp637, bytetest_80_96);
        bytetest_81 = simd_and(bytetest_80_8f, tmp115);
        bytetest_81_bf = simd_and(bytetest_80_bf, tmp472);
        tmp639 = simd_and(tmp631, bytetest_81);
        carryQ.cq[93] = carryout2carry(pablo_blk_Advance(tmp639, carryQ.get_carry_in(93), tmp640));
        tmp641 = simd_and(tmp640, bytetest_81_bf);
        tmp642 = simd_or(tmp641, tmp638);
        struct_Lo.cc = simd_or(tmp642, struct_Lo.cc);
        bytetest_e3 = simd_and(tmp124, tmp248);
        bytetest_82 = simd_and(bytetest_80_8f, tmp6);
        bytetest_9f_9f = simd_and(tmp78, tmp87);
        tmp643 = simd_and(tmp637, bytetest_9f_9f);
        struct_Lo.cc = simd_or(tmp643, struct_Lo.cc);
        bytetest_e3 = simd_and(tmp124, tmp248);
        bytetest_83 = simd_and(bytetest_80_8f, tmp248);
        tmp644 = simd_and(basis_bits.bit_2, tmp307);
        bytetest_80_ba = simd_andc(bytetest_80_bf, tmp644);
        tmp645 = simd_and(tmp631, bytetest_83);
        carryQ.cq[94] = carryout2carry(pablo_blk_Advance(tmp645, carryQ.get_carry_in(94), tmp646));
        tmp647 = simd_and(tmp646, bytetest_80_ba);
        bytetest_82 = simd_and(bytetest_80_8f, tmp6);
        bytetest_a1_bf = simd_and(bytetest_a0_bf, tmp338);
        tmp648 = simd_and(tmp637, bytetest_a1_bf);
        tmp649 = simd_or(tmp648, tmp647);
        struct_Lo.cc = simd_or(tmp649, struct_Lo.cc);
        bytetest_e3 = simd_and(tmp124, tmp248);
        bytetest_83 = simd_and(bytetest_80_8f, tmp248);
        bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp87);
        tmp650 = simd_and(tmp646, bytetest_bf_bf);
        struct_Lo.cc = simd_or(tmp650, struct_Lo.cc);
        bytetest_e3 = simd_and(tmp124, tmp248);
        bytetest_84 = simd_and(bytetest_80_8f, tmp35);
        tmp651 = simd_or(simd_and(basis_bits.bit_2, tmp536), simd_andc(tmp562, basis_bits.bit_2));
        bytetest_85_ad = simd_and(bytetest_80_bf, tmp651);
        tmp652 = simd_and(tmp631, bytetest_84);
        carryQ.cq[95] = carryout2carry(pablo_blk_Advance(tmp652, carryQ.get_carry_in(95), tmp653));
        tmp654 = simd_and(tmp653, bytetest_85_ad);
        struct_Lo.cc = simd_or(tmp654, struct_Lo.cc);
        bytetest_e3 = simd_and(tmp124, tmp248);
        bytetest_86 = simd_and(bytetest_80_8f, tmp21);
        tmp655 = simd_and(basis_bits.bit_4, tmp317);
        bytetest_80_8e = simd_andc(bytetest_80_8f, tmp655);
        tmp656 = simd_and(tmp631, bytetest_86);
        carryQ.cq[96] = carryout2carry(pablo_blk_Advance(tmp656, carryQ.get_carry_in(96), tmp657));
        tmp658 = simd_and(tmp657, bytetest_80_8e);
        bytetest_85 = simd_and(bytetest_80_8f, tmp79);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp659 = simd_and(tmp631, bytetest_85);
        carryQ.cq[97] = carryout2carry(pablo_blk_Advance(tmp659, carryQ.get_carry_in(97), tmp660));
        tmp661 = simd_and(tmp660, bytetest_80_bf);
        bytetest_84 = simd_and(bytetest_80_8f, tmp35);
        bytetest_b1_bf = simd_and(bytetest_b0_bf, tmp74);
        tmp662 = simd_and(tmp653, bytetest_b1_bf);
        tmp663 = simd_or(tmp662, tmp661);
        tmp664 = simd_or(tmp663, tmp658);
        struct_Lo.cc = simd_or(tmp664, struct_Lo.cc);
        bytetest_e3 = simd_and(tmp124, tmp248);
        bytetest_86 = simd_and(bytetest_80_8f, tmp21);
        bytetest_a0_ba = simd_andc(bytetest_a0_bf, tmp307);
        tmp665 = simd_and(tmp657, bytetest_a0_ba);
        struct_Lo.cc = simd_or(tmp665, struct_Lo.cc);
        bytetest_e3 = simd_and(tmp124, tmp248);
        bytetest_87 = simd_and(bytetest_80_8f, tmp27);
        bytetest_b0_bf = simd_and(bytetest_80_bf, tmp17);
        tmp666 = simd_and(tmp631, bytetest_87);
        carryQ.cq[98] = carryout2carry(pablo_blk_Advance(tmp666, carryQ.get_carry_in(98), tmp667));
        tmp668 = simd_and(tmp667, bytetest_b0_bf);
        struct_Lo.cc = simd_or(tmp668, struct_Lo.cc);
        bytetest_e4 = simd_and(tmp124, tmp35);
        bytetest_b6 = simd_and(bytetest_b0_bf, tmp21);
        bytetest_80_b5 = simd_andc(bytetest_80_bf, tmp525);
        tmp669 = simd_and(tmp13, bytetest_e4);
        carryQ.cq[99] = carryout2carry(pablo_blk_Advance(tmp669, carryQ.get_carry_in(99), tmp670));
        tmp671 = simd_and(tmp670, bytetest_b6);
        carryQ.cq[100] = carryout2carry(pablo_blk_Advance(tmp671, carryQ.get_carry_in(100), tmp672));
        tmp673 = simd_and(tmp672, bytetest_80_b5);
        bytetest_80_b5 = simd_andc(bytetest_80_bf, tmp525);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp674 = simd_and(tmp670, bytetest_80_b5);
        carryQ.cq[101] = carryout2carry(pablo_blk_Advance(tmp674, carryQ.get_carry_in(101), tmp675));
        tmp676 = simd_and(tmp675, bytetest_80_bf);
        tmp677 = simd_or(tmp676, tmp673);
        bytetest_e3 = simd_and(tmp124, tmp248);
        bytetest_90_bf = simd_and(bytetest_80_bf, tmp2);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp678 = simd_and(tmp631, bytetest_90_bf);
        carryQ.cq[102] = carryout2carry(pablo_blk_Advance(tmp678, carryQ.get_carry_in(102), tmp679));
        tmp680 = simd_and(tmp679, bytetest_80_bf);
        tmp681 = simd_or(tmp680, tmp677);
        struct_Lo.cc = simd_or(tmp681, struct_Lo.cc);
        bytetest_e9 = simd_and(tmp124, tmp55);
        bytetest_bf = simd_and(bytetest_b0_bf, tmp87);
        bytetest_80_8c = simd_andc(bytetest_80_8f, tmp490);
        tmp682 = simd_and(tmp13, bytetest_e9);
        carryQ.cq[103] = carryout2carry(pablo_blk_Advance(tmp682, carryQ.get_carry_in(103), tmp683));
        tmp684 = simd_and(tmp683, bytetest_bf);
        carryQ.cq[104] = carryout2carry(pablo_blk_Advance(tmp684, carryQ.get_carry_in(104), tmp685));
        tmp686 = simd_and(tmp685, bytetest_80_8c);
        tmp687 = simd_and(basis_bits.bit_2, tmp190);
        bytetest_80_be = simd_andc(bytetest_80_bf, tmp687);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp688 = simd_and(tmp683, bytetest_80_be);
        carryQ.cq[105] = carryout2carry(pablo_blk_Advance(tmp688, carryQ.get_carry_in(105), tmp689));
        tmp690 = simd_and(tmp689, bytetest_80_bf);
        tmp691 = simd_or(tmp690, tmp686);
        bytetest_e5_e8 = simd_and(tmp124, tmp601);
        bytetest_e4 = simd_and(tmp124, tmp35);
        bytetest_b8_bf = simd_and(bytetest_b0_bf, basis_bits.bit_4);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp692 = simd_and(tmp670, bytetest_b8_bf);
        carryQ.cq[106] = carryout2carry(pablo_blk_Advance(tmp692, carryQ.get_carry_in(106), tmp693));
        tmp694 = simd_and(tmp693, bytetest_80_bf);
        tmp695 = simd_or(tmp694, bytetest_e5_e8);
        tmp696 = simd_or(tmp695, tmp691);
        struct_Lo.cc = simd_or(tmp696, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_80 = simd_andc(bytetest_80_8f, tmp90);
        bytetest_80_94 = simd_andc(tmp125, tmp457);
        tmp697 = simd_and(tmp13, bytetest_ea);
        carryQ.cq[107] = carryout2carry(pablo_blk_Advance(tmp697, carryQ.get_carry_in(107), tmp698));
        tmp699 = simd_and(tmp698, bytetest_80);
        carryQ.cq[108] = carryout2carry(pablo_blk_Advance(tmp699, carryQ.get_carry_in(108), tmp700));
        tmp701 = simd_and(tmp700, bytetest_80_94);
        struct_Lo.cc = simd_or(tmp701, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_92 = simd_and(tmp78, tmp6);
        bytetest_80_8c = simd_andc(bytetest_80_8f, tmp490);
        tmp702 = simd_and(tmp698, bytetest_92);
        carryQ.cq[109] = carryout2carry(pablo_blk_Advance(tmp702, carryQ.get_carry_in(109), tmp703));
        tmp704 = simd_and(tmp703, bytetest_80_8c);
        tmp705 = simd_or(simd_and(basis_bits.bit_3, tmp221), simd_andc(tmp90, basis_bits.bit_3));
        bytetest_81_91 = simd_and(tmp125, tmp705);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp706 = simd_and(tmp698, bytetest_81_91);
        carryQ.cq[110] = carryout2carry(pablo_blk_Advance(tmp706, carryQ.get_carry_in(110), tmp707));
        tmp708 = simd_and(tmp707, bytetest_80_bf);
        bytetest_80 = simd_andc(bytetest_80_8f, tmp90);
        tmp709 = simd_or(basis_bits.bit_2, tmp126);
        bytetest_96_bf = simd_and(bytetest_80_bf, tmp709);
        tmp710 = simd_and(tmp700, bytetest_96_bf);
        tmp711 = simd_or(tmp710, tmp708);
        tmp712 = simd_or(tmp711, tmp704);
        struct_Lo.cc = simd_or(tmp712, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_93 = simd_and(tmp78, tmp248);
        tmp713 = simd_or(simd_and(basis_bits.bit_2, tmp517), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
        bytetest_90_b7 = simd_and(bytetest_80_bf, tmp713);
        tmp714 = simd_and(tmp698, bytetest_93);
        carryQ.cq[111] = carryout2carry(pablo_blk_Advance(tmp714, carryQ.get_carry_in(111), tmp715));
        tmp716 = simd_and(tmp715, bytetest_90_b7);
        struct_Lo.cc = simd_or(tmp716, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_98 = simd_and(tmp78, tmp50);
        bytetest_80_8b = simd_andc(bytetest_80_8f, tmp62);
        tmp717 = simd_and(tmp698, bytetest_98);
        carryQ.cq[112] = carryout2carry(pablo_blk_Advance(tmp717, carryQ.get_carry_in(112), tmp718));
        tmp719 = simd_and(tmp718, bytetest_80_8b);
        bytetest_94_97 = simd_and(tmp78, tmp20);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp720 = simd_and(tmp698, bytetest_94_97);
        carryQ.cq[113] = carryout2carry(pablo_blk_Advance(tmp720, carryQ.get_carry_in(113), tmp721));
        tmp722 = simd_and(tmp721, bytetest_80_bf);
        tmp723 = simd_or(tmp722, tmp719);
        struct_Lo.cc = simd_or(tmp723, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_98 = simd_and(tmp78, tmp50);
        bytetest_90_9f = simd_and(bytetest_80_bf, tmp32);
        tmp724 = simd_and(tmp718, bytetest_90_9f);
        struct_Lo.cc = simd_or(tmp724, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_98 = simd_and(bytetest_90_9f, tmp50);
        bytetest_aa_ab = simd_and(tmp81, tmp363);
        tmp725 = simd_and(tmp718, bytetest_aa_ab);
        struct_Lo.cc = simd_or(tmp725, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_99 = simd_and(bytetest_90_9f, tmp55);
        bytetest_ae_ae = simd_and(tmp81, tmp99);
        tmp726 = simd_and(tmp698, bytetest_99);
        carryQ.cq[114] = carryout2carry(pablo_blk_Advance(tmp726, carryQ.get_carry_in(114), tmp727));
        tmp728 = simd_and(tmp727, bytetest_ae_ae);
        struct_Lo.cc = simd_or(tmp728, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_9b = simd_and(bytetest_90_9f, tmp23);
        bytetest_80_a5 = simd_andc(bytetest_80_bf, tmp103);
        tmp729 = simd_and(tmp698, bytetest_9b);
        carryQ.cq[115] = carryout2carry(pablo_blk_Advance(tmp729, carryQ.get_carry_in(115), tmp730));
        tmp731 = simd_and(tmp730, bytetest_80_a5);
        bytetest_9a = simd_and(bytetest_90_9f, tmp11);
        bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp732 = simd_and(tmp698, bytetest_9a);
        carryQ.cq[116] = carryout2carry(pablo_blk_Advance(tmp732, carryQ.get_carry_in(116), tmp733));
        tmp734 = simd_and(tmp733, bytetest_a0_bf);
        tmp735 = simd_or(tmp734, tmp731);
        struct_Lo.cc = simd_or(tmp735, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_a0 = simd_andc(tmp81, tmp90);
        bytetest_80_81 = simd_andc(bytetest_80_8f, tmp95);
        tmp736 = simd_and(tmp698, bytetest_a0);
        carryQ.cq[117] = carryout2carry(pablo_blk_Advance(tmp736, carryQ.get_carry_in(117), tmp737));
        tmp738 = simd_and(tmp737, bytetest_80_81);
        bytetest_9f = simd_and(bytetest_90_9f, tmp87);
        bytetest_bb_bf = simd_and(bytetest_b8_bf, tmp40);
        tmp739 = simd_and(tmp698, bytetest_9f);
        carryQ.cq[118] = carryout2carry(pablo_blk_Advance(tmp739, carryQ.get_carry_in(118), tmp740));
        tmp741 = simd_and(tmp740, bytetest_bb_bf);
        tmp742 = simd_or(tmp741, tmp738);
        struct_Lo.cc = simd_or(tmp742, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_a0 = simd_andc(tmp81, tmp90);
        tmp743 = simd_or(simd_and(basis_bits.bit_5, tmp256), simd_andc(tmp22, basis_bits.bit_5));
        bytetest_83_85 = simd_and(tmp548, tmp743);
        tmp744 = simd_and(tmp737, bytetest_83_85);
        struct_Lo.cc = simd_or(tmp744, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_a0 = simd_andc(tmp81, tmp90);
        tmp745 = simd_or(simd_and(basis_bits.bit_4, tmp56), simd_andc(tmp317, basis_bits.bit_4));
        bytetest_87_8a = simd_and(bytetest_80_8f, tmp745);
        tmp746 = simd_and(tmp737, bytetest_87_8a);
        struct_Lo.cc = simd_or(tmp746, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_a0 = simd_andc(tmp81, tmp90);
        tmp747 = simd_not(tmp572);
        tmp748 = simd_or(simd_and(basis_bits.bit_2, tmp747), simd_andc(tmp543, basis_bits.bit_2));
        bytetest_8c_a2 = simd_and(bytetest_80_bf, tmp748);
        tmp749 = simd_and(tmp737, bytetest_8c_a2);
        struct_Lo.cc = simd_or(tmp749, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_a1 = simd_and(tmp81, tmp115);
        bytetest_80_b3 = simd_andc(bytetest_80_bf, tmp502);
        tmp750 = simd_and(tmp698, bytetest_a1);
        carryQ.cq[119] = carryout2carry(pablo_blk_Advance(tmp750, carryQ.get_carry_in(119), tmp751));
        tmp752 = simd_and(tmp751, bytetest_80_b3);
        struct_Lo.cc = simd_or(tmp752, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_a2 = simd_and(tmp81, tmp6);
        tmp753 = simd_or(simd_and(basis_bits.bit_2, tmp561), simd_andc(tmp155, basis_bits.bit_2));
        bytetest_82_b3 = simd_and(bytetest_80_bf, tmp753);
        tmp754 = simd_and(tmp698, bytetest_a2);
        carryQ.cq[120] = carryout2carry(pablo_blk_Advance(tmp754, carryQ.get_carry_in(120), tmp755));
        tmp756 = simd_and(tmp755, bytetest_82_b3);
        struct_Lo.cc = simd_or(tmp756, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_a3 = simd_and(tmp81, tmp248);
        bytetest_b2_b7 = simd_and(tmp541, tmp117);
        tmp757 = simd_and(tmp698, bytetest_a3);
        carryQ.cq[121] = carryout2carry(pablo_blk_Advance(tmp757, carryQ.get_carry_in(121), tmp758));
        tmp759 = simd_and(tmp758, bytetest_b2_b7);
        struct_Lo.cc = simd_or(tmp759, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_a3 = simd_and(tmp81, tmp248);
        bytetest_bb_bb = simd_and(bytetest_b0_bf, tmp23);
        tmp760 = simd_and(tmp758, bytetest_bb_bb);
        struct_Lo.cc = simd_or(tmp760, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_a4 = simd_and(tmp81, tmp35);
        tmp761 = simd_not(tmp102);
        tmp762 = simd_or(simd_and(basis_bits.bit_2, tmp761), simd_andc(tmp119, basis_bits.bit_2));
        bytetest_8a_a5 = simd_and(bytetest_80_bf, tmp762);
        tmp763 = simd_and(tmp698, bytetest_a4);
        carryQ.cq[122] = carryout2carry(pablo_blk_Advance(tmp763, carryQ.get_carry_in(122), tmp764));
        tmp765 = simd_and(tmp764, bytetest_8a_a5);
        struct_Lo.cc = simd_or(tmp765, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_a5 = simd_and(tmp81, tmp79);
        bytetest_80_86 = simd_andc(tmp548, tmp317);
        tmp766 = simd_and(tmp698, bytetest_a5);
        carryQ.cq[123] = carryout2carry(pablo_blk_Advance(tmp766, carryQ.get_carry_in(123), tmp767));
        tmp768 = simd_and(tmp767, bytetest_80_86);
        bytetest_a4 = simd_and(tmp81, tmp35);
        bytetest_b0_bf = simd_and(bytetest_80_bf, tmp17);
        tmp769 = simd_and(tmp764, bytetest_b0_bf);
        tmp770 = simd_or(tmp769, tmp768);
        struct_Lo.cc = simd_or(tmp770, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_a5 = simd_and(tmp81, tmp79);
        bytetest_a0_bc = simd_andc(bytetest_a0_bf, tmp531);
        tmp771 = simd_and(tmp767, bytetest_a0_bc);
        struct_Lo.cc = simd_or(tmp771, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_a6 = simd_and(tmp81, tmp21);
        tmp772 = simd_not(tmp174);
        tmp773 = simd_or(simd_and(basis_bits.bit_2, tmp772), simd_andc(tmp146, basis_bits.bit_2));
        bytetest_84_b2 = simd_and(bytetest_80_bf, tmp773);
        tmp774 = simd_and(tmp698, bytetest_a6);
        carryQ.cq[124] = carryout2carry(pablo_blk_Advance(tmp774, carryQ.get_carry_in(124), tmp775));
        tmp776 = simd_and(tmp775, bytetest_84_b2);
        struct_Lo.cc = simd_or(tmp776, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_a8 = simd_and(tmp81, tmp50);
        bytetest_80_a8 = simd_andc(bytetest_80_bf, tmp520);
        tmp777 = simd_and(tmp698, bytetest_a8);
        carryQ.cq[125] = carryout2carry(pablo_blk_Advance(tmp777, carryQ.get_carry_in(125), tmp778));
        tmp779 = simd_and(tmp778, bytetest_80_a8);
        struct_Lo.cc = simd_or(tmp779, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_a9 = simd_and(tmp81, tmp55);
        bytetest_80_82 = simd_andc(tmp509, tmp22);
        tmp780 = simd_and(tmp698, bytetest_a9);
        carryQ.cq[126] = carryout2carry(pablo_blk_Advance(tmp780, carryQ.get_carry_in(126), tmp781));
        tmp782 = simd_and(tmp781, bytetest_80_82);
        struct_Lo.cc = simd_or(tmp782, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_a9 = simd_and(tmp81, tmp55);
        tmp783 = simd_or(simd_and(basis_bits.bit_4, tmp328), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
        bytetest_84_8b = simd_and(bytetest_80_8f, tmp783);
        tmp784 = simd_and(tmp781, bytetest_84_8b);
        struct_Lo.cc = simd_or(tmp784, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_a9 = simd_and(tmp81, tmp55);
        bytetest_a0_af = simd_and(bytetest_80_bf, tmp8);
        tmp785 = simd_and(tmp781, bytetest_a0_af);
        struct_Lo.cc = simd_or(tmp785, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_a9 = simd_and(bytetest_a0_af, tmp55);
        tmp786 = simd_not(tmp22);
        tmp787 = simd_or(simd_and(basis_bits.bit_5, tmp786), simd_andc(tmp34, basis_bits.bit_5));
        bytetest_b1_b6 = simd_and(tmp541, tmp787);
        tmp788 = simd_and(tmp781, bytetest_b1_b6);
        struct_Lo.cc = simd_or(tmp788, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_a9 = simd_and(bytetest_a0_af, tmp55);
        bytetest_ba_ba = simd_and(bytetest_b0_bf, tmp11);
        tmp789 = simd_and(tmp781, bytetest_ba_ba);
        struct_Lo.cc = simd_or(tmp789, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_aa = simd_and(bytetest_a0_af, tmp11);
        bytetest_80_af = simd_andc(bytetest_80_bf, tmp17);
        tmp790 = simd_and(tmp698, bytetest_aa);
        carryQ.cq[127] = carryout2carry(pablo_blk_Advance(tmp790, carryQ.get_carry_in(127), tmp791));
        tmp792 = simd_and(tmp791, bytetest_80_af);
        struct_Lo.cc = simd_or(tmp792, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_aa = simd_and(bytetest_a0_af, tmp11);
        bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp115);
        tmp793 = simd_and(tmp791, bytetest_b1_b1);
        struct_Lo.cc = simd_or(tmp793, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_aa = simd_and(bytetest_a0_af, tmp11);
        bytetest_b5_b6 = simd_and(tmp599, tmp205);
        tmp794 = simd_and(tmp791, bytetest_b5_b6);
        struct_Lo.cc = simd_or(tmp794, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_aa = simd_and(bytetest_a0_af, tmp11);
        tmp795 = simd_or(simd_and(basis_bits.bit_5, tmp256), simd_andc(tmp34, basis_bits.bit_5));
        bytetest_b9_bd = simd_and(bytetest_b8_bf, tmp795);
        tmp796 = simd_and(tmp791, bytetest_b9_bd);
        struct_Lo.cc = simd_or(tmp796, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_ab = simd_and(bytetest_a0_af, tmp23);
        bytetest_80_80 = simd_andc(bytetest_80_8f, tmp90);
        tmp797 = simd_and(tmp698, bytetest_ab);
        carryQ.cq[128] = carryout2carry(pablo_blk_Advance(tmp797, carryQ.get_carry_in(128), tmp798));
        tmp799 = simd_and(tmp798, bytetest_80_80);
        struct_Lo.cc = simd_or(tmp799, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_ab = simd_and(bytetest_a0_af, tmp23);
        bytetest_82_82 = simd_and(bytetest_80_8f, tmp6);
        tmp800 = simd_and(tmp798, bytetest_82_82);
        struct_Lo.cc = simd_or(tmp800, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_ab = simd_and(bytetest_a0_af, tmp23);
        tmp801 = simd_and(bytetest_90_9f, basis_bits.bit_4);
        bytetest_9b_9c = simd_and(tmp801, tmp264);
        tmp802 = simd_and(tmp798, bytetest_9b_9c);
        struct_Lo.cc = simd_or(tmp802, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_ab = simd_and(bytetest_a0_af, tmp23);
        bytetest_a0_aa = simd_andc(bytetest_a0_af, tmp41);
        tmp803 = simd_and(tmp798, bytetest_a0_aa);
        struct_Lo.cc = simd_or(tmp803, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_ab = simd_and(bytetest_a0_af, tmp23);
        bytetest_b2_b2 = simd_and(bytetest_b0_bf, tmp6);
        tmp804 = simd_and(tmp798, bytetest_b2_b2);
        struct_Lo.cc = simd_or(tmp804, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_ac = simd_and(bytetest_a0_af, tmp89);
        bytetest_81_86 = simd_and(tmp548, tmp787);
        tmp805 = simd_and(tmp698, bytetest_ac);
        carryQ.cq[129] = carryout2carry(pablo_blk_Advance(tmp805, carryQ.get_carry_in(129), tmp806));
        tmp807 = simd_and(tmp806, bytetest_81_86);
        struct_Lo.cc = simd_or(tmp807, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_ac = simd_and(bytetest_a0_af, tmp89);
        bytetest_89_8e = simd_and(tmp626, tmp787);
        tmp808 = simd_and(tmp806, bytetest_89_8e);
        struct_Lo.cc = simd_or(tmp808, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_ac = simd_and(bytetest_a0_af, tmp89);
        tmp809 = simd_andc(bytetest_90_9f, basis_bits.bit_4);
        bytetest_91_96 = simd_and(tmp809, tmp787);
        tmp810 = simd_and(tmp806, bytetest_91_96);
        struct_Lo.cc = simd_or(tmp810, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_ac = simd_and(bytetest_a0_af, tmp89);
        tmp811 = simd_andc(bytetest_a0_af, basis_bits.bit_4);
        bytetest_a0_a6 = simd_andc(tmp811, tmp317);
        tmp812 = simd_and(tmp806, bytetest_a0_a6);
        struct_Lo.cc = simd_or(tmp812, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_ac = simd_and(bytetest_a0_af, tmp89);
        tmp813 = simd_and(bytetest_a0_af, basis_bits.bit_4);
        bytetest_a8_ae = simd_andc(tmp813, tmp317);
        tmp814 = simd_and(tmp806, bytetest_a8_ae);
        struct_Lo.cc = simd_or(tmp814, struct_Lo.cc);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_af = simd_and(bytetest_a0_af, tmp87);
        tmp815 = simd_and(basis_bits.bit_2, tmp572);
        bytetest_80_a2 = simd_andc(bytetest_80_bf, tmp815);
        tmp816 = simd_and(tmp698, bytetest_af);
        carryQ.cq[130] = carryout2carry(pablo_blk_Advance(tmp816, carryQ.get_carry_in(130), tmp817));
        tmp818 = simd_and(tmp817, bytetest_80_a2);
        struct_Lo.cc = simd_or(tmp818, struct_Lo.cc);
        bytetest_ed = simd_and(tmp124, tmp107);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_80_a3 = simd_andc(bytetest_80_bf, tmp584);
        tmp819 = simd_and(tmp13, bytetest_ed);
        carryQ.cq[131] = carryout2carry(pablo_blk_Advance(tmp819, carryQ.get_carry_in(131), tmp820));
        tmp821 = simd_and(tmp820, bytetest_9e);
        carryQ.cq[132] = carryout2carry(pablo_blk_Advance(tmp821, carryQ.get_carry_in(132), tmp822));
        tmp823 = simd_and(tmp822, bytetest_80_a3);
        tmp824 = simd_and(basis_bits.bit_3, tmp63);
        bytetest_80_9d = simd_andc(tmp125, tmp824);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp825 = simd_and(tmp820, bytetest_80_9d);
        carryQ.cq[133] = carryout2carry(pablo_blk_Advance(tmp825, carryQ.get_carry_in(133), tmp826));
        tmp827 = simd_and(tmp826, bytetest_80_bf);
        tmp828 = simd_or(tmp827, tmp823);
        tmp829 = simd_and(tmp124, basis_bits.bit_4);
        bytetest_eb_ec = simd_and(tmp829, tmp264);
        bytetest_ea = simd_and(tmp124, tmp11);
        bytetest_b0_bf = simd_and(bytetest_80_bf, tmp17);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp830 = simd_and(tmp698, bytetest_b0_bf);
        carryQ.cq[134] = carryout2carry(pablo_blk_Advance(tmp830, carryQ.get_carry_in(134), tmp831));
        tmp832 = simd_and(tmp831, bytetest_80_bf);
        tmp833 = simd_or(tmp832, bytetest_eb_ec);
        tmp834 = simd_or(tmp833, tmp828);
        struct_Lo.cc = simd_or(tmp834, struct_Lo.cc);
        bytetest_ed = simd_and(tmp124, tmp107);
        bytetest_9f = simd_and(bytetest_90_9f, tmp87);
        bytetest_80_86 = simd_andc(tmp548, tmp317);
        tmp835 = simd_and(tmp820, bytetest_9f);
        carryQ.cq[135] = carryout2carry(pablo_blk_Advance(tmp835, carryQ.get_carry_in(135), tmp836));
        tmp837 = simd_and(tmp836, bytetest_80_86);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_b0_bf = simd_and(bytetest_80_bf, tmp17);
        tmp838 = simd_and(tmp822, bytetest_b0_bf);
        tmp839 = simd_or(tmp838, tmp837);
        struct_Lo.cc = simd_or(tmp839, struct_Lo.cc);
        bytetest_ed = simd_and(tmp124, tmp107);
        bytetest_9f = simd_and(bytetest_90_9f, tmp87);
        tmp840 = simd_and(basis_bits.bit_3, tmp62);
        tmp841 = simd_not(tmp840);
        tmp842 = simd_or(simd_and(basis_bits.bit_2, tmp841), simd_andc(tmp42, basis_bits.bit_2));
        bytetest_8b_bb = simd_and(bytetest_80_bf, tmp842);
        tmp843 = simd_and(tmp836, bytetest_8b_bb);
        struct_Lo.cc = simd_or(tmp843, struct_Lo.cc);
        bytetest_ef = simd_and(tmp124, tmp87);
        bytetest_a9 = simd_and(bytetest_a0_af, tmp55);
        tmp844 = simd_and(basis_bits.bit_2, tmp535);
        bytetest_80_ad = simd_andc(bytetest_80_bf, tmp844);
        tmp845 = simd_and(tmp13, bytetest_ef);
        carryQ.cq[136] = carryout2carry(pablo_blk_Advance(tmp845, carryQ.get_carry_in(136), tmp846));
        tmp847 = simd_and(tmp846, bytetest_a9);
        carryQ.cq[137] = carryout2carry(pablo_blk_Advance(tmp847, carryQ.get_carry_in(137), tmp848));
        tmp849 = simd_and(tmp848, bytetest_80_ad);
        bytetest_a4_a8 = simd_and(bytetest_a0_af, tmp414);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp850 = simd_and(tmp846, bytetest_a4_a8);
        carryQ.cq[138] = carryout2carry(pablo_blk_Advance(tmp850, carryQ.get_carry_in(138), tmp851));
        tmp852 = simd_and(tmp851, bytetest_80_bf);
        tmp853 = simd_or(tmp852, tmp849);
        struct_Lo.cc = simd_or(tmp853, struct_Lo.cc);
        bytetest_ef = simd_and(tmp124, tmp87);
        bytetest_ab = simd_and(bytetest_a0_af, tmp23);
        bytetest_80_99 = simd_andc(tmp125, tmp144);
        tmp854 = simd_and(tmp846, bytetest_ab);
        carryQ.cq[139] = carryout2carry(pablo_blk_Advance(tmp854, carryQ.get_carry_in(139), tmp855));
        tmp856 = simd_and(tmp855, bytetest_80_99);
        bytetest_aa = simd_and(bytetest_a0_af, tmp11);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp857 = simd_and(tmp846, bytetest_aa);
        carryQ.cq[140] = carryout2carry(pablo_blk_Advance(tmp857, carryQ.get_carry_in(140), tmp858));
        tmp859 = simd_and(tmp858, bytetest_80_bf);
        bytetest_a9 = simd_and(bytetest_a0_af, tmp55);
        bytetest_b0_bf = simd_and(bytetest_80_bf, tmp17);
        tmp860 = simd_and(tmp848, bytetest_b0_bf);
        tmp861 = simd_or(tmp860, tmp859);
        tmp862 = simd_or(tmp861, tmp856);
        struct_Lo.cc = simd_or(tmp862, struct_Lo.cc);
        bytetest_ef = simd_and(tmp124, tmp87);
        bytetest_ac = simd_and(bytetest_a0_af, tmp89);
        bytetest_9d_9d = simd_and(bytetest_90_9f, tmp107);
        tmp863 = simd_and(tmp846, bytetest_ac);
        carryQ.cq[141] = carryout2carry(pablo_blk_Advance(tmp863, carryQ.get_carry_in(141), tmp864));
        tmp865 = simd_and(tmp864, bytetest_9d_9d);
        struct_Lo.cc = simd_or(tmp865, struct_Lo.cc);
        bytetest_ef = simd_and(tmp124, tmp87);
        bytetest_ac = simd_and(bytetest_a0_af, tmp89);
        tmp866 = simd_or(simd_and(basis_bits.bit_2, tmp172), simd_andc(tmp190, basis_bits.bit_2));
        bytetest_9f_a8 = simd_and(bytetest_80_bf, tmp866);
        tmp867 = simd_and(tmp864, bytetest_9f_a8);
        struct_Lo.cc = simd_or(tmp867, struct_Lo.cc);
        bytetest_ef = simd_and(tmp124, tmp87);
        bytetest_ac = simd_and(bytetest_a0_af, tmp89);
        tmp868 = simd_or(simd_and(basis_bits.bit_3, tmp319), simd_andc(tmp118, basis_bits.bit_3));
        bytetest_aa_b6 = simd_and(bytetest_a0_bf, tmp868);
        tmp869 = simd_and(tmp864, bytetest_aa_b6);
        struct_Lo.cc = simd_or(tmp869, struct_Lo.cc);
        bytetest_ef = simd_and(tmp124, tmp87);
        bytetest_ac = simd_and(bytetest_a0_af, tmp89);
        bytetest_b8_bc = simd_andc(bytetest_b8_bf, tmp140);
        tmp870 = simd_and(tmp864, bytetest_b8_bc);
        struct_Lo.cc = simd_or(tmp870, struct_Lo.cc);
        bytetest_ef = simd_and(tmp124, tmp87);
        bytetest_ac = simd_and(bytetest_a0_af, tmp89);
        bytetest_be_be = simd_and(bytetest_b0_bf, tmp99);
        tmp871 = simd_and(tmp864, bytetest_be_be);
        struct_Lo.cc = simd_or(tmp871, struct_Lo.cc);
        bytetest_ef = simd_and(tmp124, tmp87);
        bytetest_ad = simd_and(bytetest_a0_af, tmp107);
        bytetest_80_81 = simd_andc(bytetest_80_8f, tmp95);
        tmp872 = simd_and(tmp846, bytetest_ad);
        carryQ.cq[142] = carryout2carry(pablo_blk_Advance(tmp872, carryQ.get_carry_in(142), tmp873));
        tmp874 = simd_and(tmp873, bytetest_80_81);
        struct_Lo.cc = simd_or(tmp874, struct_Lo.cc);
        bytetest_ef = simd_and(tmp124, tmp87);
        bytetest_ad = simd_and(bytetest_a0_af, tmp107);
        bytetest_83_84 = simd_and(tmp548, tmp264);
        tmp875 = simd_and(tmp873, bytetest_83_84);
        struct_Lo.cc = simd_or(tmp875, struct_Lo.cc);
        bytetest_ef = simd_and(tmp124, tmp87);
        bytetest_ae = simd_and(bytetest_a0_af, tmp99);
        tmp876 = simd_and(basis_bits.bit_2, tmp96);
        bytetest_80_b1 = simd_andc(bytetest_80_bf, tmp876);
        tmp877 = simd_and(tmp846, bytetest_ae);
        carryQ.cq[143] = carryout2carry(pablo_blk_Advance(tmp877, carryQ.get_carry_in(143), tmp878));
        tmp879 = simd_and(tmp878, bytetest_80_b1);
        bytetest_ad = simd_and(bytetest_a0_af, tmp107);
        tmp880 = simd_or(basis_bits.bit_2, tmp102);
        bytetest_86_bf = simd_and(bytetest_80_bf, tmp880);
        tmp881 = simd_and(tmp873, bytetest_86_bf);
        tmp882 = simd_or(tmp881, tmp879);
        struct_Lo.cc = simd_or(tmp882, struct_Lo.cc);
        bytetest_ef = simd_and(tmp124, tmp87);
        bytetest_b4 = simd_and(bytetest_b0_bf, tmp35);
        tmp883 = simd_and(basis_bits.bit_2, tmp824);
        bytetest_80_bd = simd_andc(bytetest_80_bf, tmp883);
        tmp884 = simd_and(tmp846, bytetest_b4);
        carryQ.cq[144] = carryout2carry(pablo_blk_Advance(tmp884, carryQ.get_carry_in(144), tmp885));
        tmp886 = simd_and(tmp885, bytetest_80_bd);
        bytetest_b0_b3 = simd_andc(bytetest_b0_bf, tmp4);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp887 = simd_and(tmp846, bytetest_b0_b3);
        carryQ.cq[145] = carryout2carry(pablo_blk_Advance(tmp887, carryQ.get_carry_in(145), tmp888));
        tmp889 = simd_and(tmp888, bytetest_80_bf);
        bytetest_af = simd_and(bytetest_a0_af, tmp87);
        tmp890 = simd_or(basis_bits.bit_2, tmp174);
        bytetest_93_bf = simd_and(bytetest_80_bf, tmp890);
        tmp891 = simd_and(tmp846, bytetest_af);
        carryQ.cq[146] = carryout2carry(pablo_blk_Advance(tmp891, carryQ.get_carry_in(146), tmp892));
        tmp893 = simd_and(tmp892, bytetest_93_bf);
        tmp894 = simd_or(tmp893, tmp889);
        tmp895 = simd_or(tmp894, tmp886);
        struct_Lo.cc = simd_or(tmp895, struct_Lo.cc);
        bytetest_ef = simd_and(tmp124, tmp87);
        bytetest_b6 = simd_and(bytetest_b0_bf, tmp21);
        bytetest_80_8f = simd_andc(bytetest_80_bf, tmp2);
        tmp896 = simd_and(tmp846, bytetest_b6);
        carryQ.cq[147] = carryout2carry(pablo_blk_Advance(tmp896, carryQ.get_carry_in(147), tmp897));
        tmp898 = simd_and(tmp897, bytetest_80_8f);
        bytetest_b5 = simd_and(bytetest_b0_bf, tmp79);
        bytetest_90_bf = simd_and(bytetest_80_bf, tmp2);
        tmp899 = simd_and(tmp846, bytetest_b5);
        carryQ.cq[148] = carryout2carry(pablo_blk_Advance(tmp899, carryQ.get_carry_in(148), tmp900));
        tmp901 = simd_and(tmp900, bytetest_90_bf);
        tmp902 = simd_or(tmp901, tmp898);
        struct_Lo.cc = simd_or(tmp902, struct_Lo.cc);
        bytetest_ef = simd_and(tmp124, tmp87);
        bytetest_b7 = simd_and(bytetest_b0_bf, tmp27);
        bytetest_80_87 = simd_andc(bytetest_80_8f, basis_bits.bit_4);
        tmp903 = simd_and(tmp846, bytetest_b7);
        carryQ.cq[149] = carryout2carry(pablo_blk_Advance(tmp903, carryQ.get_carry_in(149), tmp904));
        tmp905 = simd_and(tmp904, bytetest_80_87);
        bytetest_b6 = simd_and(bytetest_b0_bf, tmp21);
        tmp906 = simd_or(basis_bits.bit_2, tmp96);
        bytetest_92_bf = simd_and(bytetest_80_bf, tmp906);
        tmp907 = simd_and(tmp897, bytetest_92_bf);
        tmp908 = simd_or(tmp907, tmp905);
        struct_Lo.cc = simd_or(tmp908, struct_Lo.cc);
        bytetest_ef = simd_and(tmp124, tmp87);
        bytetest_b7 = simd_and(bytetest_b0_bf, tmp27);
        bytetest_b0_bb = simd_andc(bytetest_b0_bf, tmp62);
        tmp909 = simd_and(tmp904, bytetest_b0_bb);
        struct_Lo.cc = simd_or(tmp909, struct_Lo.cc);
        bytetest_ef = simd_and(tmp124, tmp87);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp55);
        bytetest_b0_b4 = simd_andc(tmp541, tmp140);
        tmp910 = simd_and(tmp846, bytetest_b9);
        carryQ.cq[150] = carryout2carry(pablo_blk_Advance(tmp910, carryQ.get_carry_in(150), tmp911));
        tmp912 = simd_and(tmp911, bytetest_b0_b4);
        struct_Lo.cc = simd_or(tmp912, struct_Lo.cc);
        bytetest_ef = simd_and(tmp124, tmp87);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp23);
        tmp913 = simd_and(basis_bits.bit_2, tmp531);
        bytetest_80_bc = simd_andc(bytetest_80_bf, tmp913);
        tmp914 = simd_and(tmp846, bytetest_bb);
        carryQ.cq[151] = carryout2carry(pablo_blk_Advance(tmp914, carryQ.get_carry_in(151), tmp915));
        tmp916 = simd_and(tmp915, bytetest_80_bc);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp11);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp917 = simd_and(tmp846, bytetest_ba);
        carryQ.cq[152] = carryout2carry(pablo_blk_Advance(tmp917, carryQ.get_carry_in(152), tmp918));
        tmp919 = simd_and(tmp918, bytetest_80_bf);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp55);
        bytetest_b6_bf = simd_and(bytetest_b0_bf, tmp101);
        tmp920 = simd_and(tmp911, bytetest_b6_bf);
        tmp921 = simd_or(tmp920, tmp919);
        tmp922 = simd_or(tmp921, tmp916);
        struct_Lo.cc = simd_or(tmp922, struct_Lo.cc);
        bytetest_ef = simd_and(tmp124, tmp87);
        bytetest_bd = simd_and(bytetest_b0_bf, tmp107);
        bytetest_a6_af = simd_and(bytetest_a0_af, tmp101);
        tmp923 = simd_and(tmp846, bytetest_bd);
        carryQ.cq[153] = carryout2carry(pablo_blk_Advance(tmp923, carryQ.get_carry_in(153), tmp924));
        tmp925 = simd_and(tmp924, bytetest_a6_af);
        struct_Lo.cc = simd_or(tmp925, struct_Lo.cc);
        bytetest_ef = simd_and(tmp124, tmp87);
        bytetest_be = simd_and(bytetest_b0_bf, tmp99);
        bytetest_80_9d = simd_andc(tmp125, tmp824);
        tmp926 = simd_and(tmp846, bytetest_be);
        carryQ.cq[154] = carryout2carry(pablo_blk_Advance(tmp926, carryQ.get_carry_in(154), tmp927));
        tmp928 = simd_and(tmp927, bytetest_80_9d);
        bytetest_bd = simd_and(bytetest_b0_bf, tmp107);
        bytetest_b1_bf = simd_and(bytetest_b0_bf, tmp74);
        tmp929 = simd_and(tmp924, bytetest_b1_bf);
        tmp930 = simd_or(tmp929, tmp928);
        struct_Lo.cc = simd_or(tmp930, struct_Lo.cc);
        bytetest_ef = simd_and(tmp124, tmp87);
        bytetest_be = simd_and(bytetest_b0_bf, tmp99);
        bytetest_a0_be = simd_andc(bytetest_a0_bf, tmp190);
        tmp931 = simd_and(tmp927, bytetest_a0_be);
        struct_Lo.cc = simd_or(tmp931, struct_Lo.cc);
        bytetest_ef = simd_and(tmp124, tmp87);
        bytetest_bf = simd_and(bytetest_b0_bf, tmp87);
        bytetest_82_87 = simd_and(bytetest_80_87, tmp117);
        tmp932 = simd_and(tmp846, bytetest_bf);
        carryQ.cq[155] = carryout2carry(pablo_blk_Advance(tmp932, carryQ.get_carry_in(155), tmp933));
        tmp934 = simd_and(tmp933, bytetest_82_87);
        struct_Lo.cc = simd_or(tmp934, struct_Lo.cc);
        bytetest_ef = simd_and(tmp124, tmp87);
        bytetest_bf = simd_and(bytetest_b0_bf, tmp87);
        bytetest_8a_8f = simd_and(tmp626, tmp117);
        tmp935 = simd_and(tmp933, bytetest_8a_8f);
        struct_Lo.cc = simd_or(tmp935, struct_Lo.cc);
        bytetest_ef = simd_and(tmp124, tmp87);
        bytetest_bf = simd_and(bytetest_b0_bf, tmp87);
        bytetest_92_97 = simd_and(tmp809, tmp117);
        tmp936 = simd_and(tmp933, bytetest_92_97);
        struct_Lo.cc = simd_or(tmp936, struct_Lo.cc);
        bytetest_ef = simd_and(tmp124, tmp87);
        bytetest_bf = simd_and(bytetest_b0_bf, tmp87);
        bytetest_9a_9c = simd_and(tmp801, tmp85);
        tmp937 = simd_and(tmp933, bytetest_9a_9c);
        struct_Lo.cc = simd_or(tmp937, struct_Lo.cc);
        tmp938 = simd_and(tmp1, tmp17);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_80 = simd_andc(bytetest_80_8f, tmp90);
        bytetest_80_8b = simd_andc(bytetest_80_8f, tmp62);
        tmp939 = simd_and(tmp13, bytetest_f0);
        carryQ.cq[156] = carryout2carry(pablo_blk_Advance(tmp939, carryQ.get_carry_in(156), tmp940));
        tmp941 = simd_and(tmp940, bytetest_90);
        carryQ.cq[157] = carryout2carry(pablo_blk_Advance(tmp941, carryQ.get_carry_in(157), tmp942));
        tmp943 = simd_and(tmp942, bytetest_80);
        carryQ.cq[158] = carryout2carry(pablo_blk_Advance(tmp943, carryQ.get_carry_in(158), tmp944));
        tmp945 = simd_and(tmp944, bytetest_80_8b);
        struct_Lo.cc = simd_or(tmp945, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_80 = simd_andc(bytetest_80_8f, tmp90);
        tmp946 = simd_or(basis_bits.bit_3, tmp318);
        tmp947 = simd_not(tmp946);
        tmp948 = simd_or(simd_and(basis_bits.bit_2, tmp947), simd_andc(tmp109, basis_bits.bit_2));
        bytetest_8d_a6 = simd_and(bytetest_80_bf, tmp948);
        tmp949 = simd_and(tmp944, bytetest_8d_a6);
        struct_Lo.cc = simd_or(tmp949, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_80 = simd_andc(bytetest_80_8f, tmp90);
        tmp950 = simd_or(simd_and(basis_bits.bit_3, tmp480), simd_andc(basis_bits.bit_4, basis_bits.bit_3));
        bytetest_a8_ba = simd_and(bytetest_a0_bf, tmp950);
        tmp951 = simd_and(tmp944, bytetest_a8_ba);
        struct_Lo.cc = simd_or(tmp951, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_80 = simd_andc(bytetest_80_8f, tmp90);
        bytetest_bc_bd = simd_and(bytetest_b0_bf, tmp188);
        tmp952 = simd_and(tmp944, bytetest_bc_bd);
        struct_Lo.cc = simd_or(tmp952, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_81 = simd_and(bytetest_80_8f, tmp115);
        tmp953 = simd_and(basis_bits.bit_4, tmp100);
        bytetest_80_8d = simd_andc(bytetest_80_8f, tmp953);
        tmp954 = simd_and(tmp942, bytetest_81);
        carryQ.cq[159] = carryout2carry(pablo_blk_Advance(tmp954, carryQ.get_carry_in(159), tmp955));
        tmp956 = simd_and(tmp955, bytetest_80_8d);
        bytetest_80 = simd_andc(bytetest_80_8f, tmp90);
        bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp87);
        tmp957 = simd_and(tmp944, bytetest_bf_bf);
        tmp958 = simd_or(tmp957, tmp956);
        struct_Lo.cc = simd_or(tmp958, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_81 = simd_and(bytetest_80_8f, tmp115);
        bytetest_90_9d = simd_andc(bytetest_90_9f, tmp953);
        tmp959 = simd_and(tmp955, bytetest_90_9d);
        struct_Lo.cc = simd_or(tmp959, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_83 = simd_and(bytetest_80_8f, tmp248);
        bytetest_80_ba = simd_andc(bytetest_80_bf, tmp644);
        tmp960 = simd_and(tmp942, bytetest_83);
        carryQ.cq[160] = carryout2carry(pablo_blk_Advance(tmp960, carryQ.get_carry_in(160), tmp961));
        tmp962 = simd_and(tmp961, bytetest_80_ba);
        bytetest_82 = simd_and(bytetest_80_8f, tmp6);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp963 = simd_and(tmp942, bytetest_82);
        carryQ.cq[161] = carryout2carry(pablo_blk_Advance(tmp963, carryQ.get_carry_in(161), tmp964));
        tmp965 = simd_and(tmp964, bytetest_80_bf);
        tmp966 = simd_or(tmp965, tmp962);
        struct_Lo.cc = simd_or(tmp966, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_8a = simd_and(bytetest_80_8f, tmp11);
        bytetest_80_9c = simd_andc(tmp125, tmp531);
        tmp967 = simd_and(tmp942, bytetest_8a);
        carryQ.cq[162] = carryout2carry(pablo_blk_Advance(tmp967, carryQ.get_carry_in(162), tmp968));
        tmp969 = simd_and(tmp968, bytetest_80_9c);
        struct_Lo.cc = simd_or(tmp969, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_8b = simd_and(bytetest_80_8f, tmp23);
        bytetest_80_90 = simd_andc(tmp125, tmp336);
        tmp970 = simd_and(tmp942, bytetest_8b);
        carryQ.cq[163] = carryout2carry(pablo_blk_Advance(tmp970, carryQ.get_carry_in(163), tmp971));
        tmp972 = simd_and(tmp971, bytetest_80_90);
        bytetest_8a = simd_and(bytetest_80_8f, tmp11);
        bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp973 = simd_and(tmp968, bytetest_a0_bf);
        tmp974 = simd_or(tmp973, tmp972);
        struct_Lo.cc = simd_or(tmp974, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_8c = simd_and(bytetest_80_8f, tmp89);
        bytetest_80_9e = simd_andc(tmp125, tmp190);
        tmp975 = simd_and(tmp942, bytetest_8c);
        carryQ.cq[164] = carryout2carry(pablo_blk_Advance(tmp975, carryQ.get_carry_in(164), tmp976));
        tmp977 = simd_and(tmp976, bytetest_80_9e);
        struct_Lo.cc = simd_or(tmp977, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_8d = simd_and(bytetest_80_8f, tmp107);
        bytetest_80_80 = simd_andc(bytetest_80_8f, tmp90);
        tmp978 = simd_and(tmp942, bytetest_8d);
        carryQ.cq[165] = carryout2carry(pablo_blk_Advance(tmp978, carryQ.get_carry_in(165), tmp979));
        tmp980 = simd_and(tmp979, bytetest_80_80);
        bytetest_8c = simd_and(bytetest_80_8f, tmp89);
        bytetest_b0_bf = simd_and(bytetest_80_bf, tmp17);
        tmp981 = simd_and(tmp976, bytetest_b0_bf);
        tmp982 = simd_or(tmp981, tmp980);
        struct_Lo.cc = simd_or(tmp982, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_8d = simd_and(bytetest_80_8f, tmp107);
        tmp983 = simd_or(simd_and(basis_bits.bit_4, tmp181), simd_andc(tmp117, basis_bits.bit_4));
        bytetest_82_89 = simd_and(bytetest_80_8f, tmp983);
        tmp984 = simd_and(tmp979, bytetest_82_89);
        struct_Lo.cc = simd_or(tmp984, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_8e = simd_and(bytetest_80_8f, tmp99);
        bytetest_80_9d = simd_andc(tmp125, tmp824);
        tmp985 = simd_and(tmp942, bytetest_8e);
        carryQ.cq[166] = carryout2carry(pablo_blk_Advance(tmp985, carryQ.get_carry_in(166), tmp986));
        tmp987 = simd_and(tmp986, bytetest_80_9d);
        struct_Lo.cc = simd_or(tmp987, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_8f = simd_and(bytetest_80_8f, tmp87);
        bytetest_80_83 = simd_andc(bytetest_80_8f, tmp4);
        tmp988 = simd_and(tmp942, bytetest_8f);
        carryQ.cq[167] = carryout2carry(pablo_blk_Advance(tmp988, carryQ.get_carry_in(167), tmp989));
        tmp990 = simd_and(tmp989, bytetest_80_83);
        bytetest_8e = simd_and(bytetest_80_8f, tmp99);
        bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp991 = simd_and(tmp986, bytetest_a0_bf);
        tmp992 = simd_or(tmp991, tmp990);
        struct_Lo.cc = simd_or(tmp992, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_8f = simd_and(bytetest_80_8f, tmp87);
        bytetest_88_8f = simd_and(bytetest_80_8f, basis_bits.bit_4);
        tmp993 = simd_and(tmp989, bytetest_88_8f);
        struct_Lo.cc = simd_or(tmp993, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_92 = simd_and(bytetest_90_9f, tmp6);
        bytetest_80_9d = simd_andc(tmp125, tmp824);
        tmp994 = simd_and(tmp942, bytetest_92);
        carryQ.cq[168] = carryout2carry(pablo_blk_Advance(tmp994, carryQ.get_carry_in(168), tmp995));
        tmp996 = simd_and(tmp995, bytetest_80_9d);
        bytetest_91 = simd_and(bytetest_90_9f, tmp115);
        bytetest_90_bf = simd_and(bytetest_80_bf, tmp2);
        tmp997 = simd_and(tmp942, bytetest_91);
        carryQ.cq[169] = carryout2carry(pablo_blk_Advance(tmp997, carryQ.get_carry_in(169), tmp998));
        tmp999 = simd_and(tmp998, bytetest_90_bf);
        tmp1000 = simd_or(tmp999, tmp996);
        struct_Lo.cc = simd_or(tmp1000, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_a0 = simd_andc(bytetest_a0_af, tmp90);
        bytetest_80_85 = simd_andc(bytetest_80_87, tmp100);
        tmp1001 = simd_and(tmp942, bytetest_a0);
        carryQ.cq[170] = carryout2carry(pablo_blk_Advance(tmp1001, carryQ.get_carry_in(170), tmp1002));
        tmp1003 = simd_and(tmp1002, bytetest_80_85);
        struct_Lo.cc = simd_or(tmp1003, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_a0 = simd_andc(bytetest_a0_af, tmp90);
        bytetest_88_88 = simd_and(bytetest_80_8f, tmp50);
        tmp1004 = simd_and(tmp1002, bytetest_88_88);
        struct_Lo.cc = simd_or(tmp1004, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_a0 = simd_andc(bytetest_a0_af, tmp90);
        tmp1005 = simd_not(tmp126);
        tmp1006 = simd_or(simd_and(basis_bits.bit_2, tmp1005), simd_andc(tmp119, basis_bits.bit_2));
        bytetest_8a_b5 = simd_and(bytetest_80_bf, tmp1006);
        tmp1007 = simd_and(tmp1002, bytetest_8a_b5);
        struct_Lo.cc = simd_or(tmp1007, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_a0 = simd_andc(bytetest_a0_af, tmp90);
        bytetest_b7_b8 = simd_and(bytetest_b0_bf, tmp353);
        tmp1008 = simd_and(tmp1002, bytetest_b7_b8);
        struct_Lo.cc = simd_or(tmp1008, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_a0 = simd_andc(bytetest_a0_af, tmp90);
        bytetest_bc_bc = simd_and(bytetest_b0_bf, tmp89);
        tmp1009 = simd_and(tmp1002, bytetest_bc_bc);
        struct_Lo.cc = simd_or(tmp1009, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_a1 = simd_and(bytetest_a0_af, tmp115);
        bytetest_80_95 = simd_andc(tmp125, tmp126);
        tmp1010 = simd_and(tmp942, bytetest_a1);
        carryQ.cq[171] = carryout2carry(pablo_blk_Advance(tmp1010, carryQ.get_carry_in(171), tmp1011));
        tmp1012 = simd_and(tmp1011, bytetest_80_95);
        bytetest_a0 = simd_andc(bytetest_a0_af, tmp90);
        bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp87);
        tmp1013 = simd_and(tmp1002, bytetest_bf_bf);
        tmp1014 = simd_or(tmp1013, tmp1012);
        struct_Lo.cc = simd_or(tmp1014, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_a4 = simd_and(bytetest_a0_af, tmp35);
        bytetest_80_95 = simd_andc(tmp125, tmp126);
        tmp1015 = simd_and(tmp942, bytetest_a4);
        carryQ.cq[172] = carryout2carry(pablo_blk_Advance(tmp1015, carryQ.get_carry_in(172), tmp1016));
        tmp1017 = simd_and(tmp1016, bytetest_80_95);
        struct_Lo.cc = simd_or(tmp1017, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_a4 = simd_and(bytetest_a0_af, tmp35);
        bytetest_a0_b9 = simd_andc(bytetest_a0_bf, tmp144);
        tmp1018 = simd_and(tmp1016, bytetest_a0_b9);
        struct_Lo.cc = simd_or(tmp1018, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_a6 = simd_and(bytetest_a0_af, tmp21);
        tmp1019 = simd_and(basis_bits.bit_2, tmp157);
        bytetest_80_b7 = simd_andc(bytetest_80_bf, tmp1019);
        tmp1020 = simd_and(tmp942, bytetest_a6);
        carryQ.cq[173] = carryout2carry(pablo_blk_Advance(tmp1020, carryQ.get_carry_in(173), tmp1021));
        tmp1022 = simd_and(tmp1021, bytetest_80_b7);
        struct_Lo.cc = simd_or(tmp1022, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_a6 = simd_and(bytetest_a0_af, tmp21);
        bytetest_be_bf = simd_and(bytetest_b0_bf, tmp63);
        tmp1023 = simd_and(tmp1021, bytetest_be_bf);
        struct_Lo.cc = simd_or(tmp1023, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_a8 = simd_and(bytetest_a0_af, tmp50);
        bytetest_80_80 = simd_andc(bytetest_80_8f, tmp90);
        tmp1024 = simd_and(tmp942, bytetest_a8);
        carryQ.cq[174] = carryout2carry(pablo_blk_Advance(tmp1024, carryQ.get_carry_in(174), tmp1025));
        tmp1026 = simd_and(tmp1025, bytetest_80_80);
        struct_Lo.cc = simd_or(tmp1026, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_a8 = simd_and(bytetest_a0_af, tmp50);
        bytetest_90_93 = simd_andc(bytetest_90_9f, tmp4);
        tmp1027 = simd_and(tmp1025, bytetest_90_93);
        struct_Lo.cc = simd_or(tmp1027, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_a8 = simd_and(bytetest_a0_af, tmp50);
        tmp1028 = simd_and(bytetest_90_9f, tmp20);
        bytetest_95_97 = simd_and(tmp1028, tmp34);
        tmp1029 = simd_and(tmp1025, bytetest_95_97);
        struct_Lo.cc = simd_or(tmp1029, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_a8 = simd_and(bytetest_a0_af, tmp50);
        tmp1030 = simd_or(simd_and(basis_bits.bit_2, tmp561), simd_andc(tmp133, basis_bits.bit_2));
        bytetest_99_b3 = simd_and(bytetest_80_bf, tmp1030);
        tmp1031 = simd_and(tmp1025, bytetest_99_b3);
        struct_Lo.cc = simd_or(tmp1031, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_a9 = simd_and(bytetest_a0_af, tmp55);
        bytetest_a0_bc = simd_andc(bytetest_a0_bf, tmp531);
        tmp1032 = simd_and(tmp942, bytetest_a9);
        carryQ.cq[175] = carryout2carry(pablo_blk_Advance(tmp1032, carryQ.get_carry_in(175), tmp1033));
        tmp1034 = simd_and(tmp1033, bytetest_a0_bc);
        struct_Lo.cc = simd_or(tmp1034, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_ac = simd_and(bytetest_a0_af, tmp89);
        bytetest_80_b5 = simd_andc(bytetest_80_bf, tmp525);
        tmp1035 = simd_and(tmp942, bytetest_ac);
        carryQ.cq[176] = carryout2carry(pablo_blk_Advance(tmp1035, carryQ.get_carry_in(176), tmp1036));
        tmp1037 = simd_and(tmp1036, bytetest_80_b5);
        struct_Lo.cc = simd_or(tmp1037, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_ad = simd_and(bytetest_a0_af, tmp107);
        bytetest_80_95 = simd_andc(tmp125, tmp126);
        tmp1038 = simd_and(tmp942, bytetest_ad);
        carryQ.cq[177] = carryout2carry(pablo_blk_Advance(tmp1038, carryQ.get_carry_in(177), tmp1039));
        tmp1040 = simd_and(tmp1039, bytetest_80_95);
        struct_Lo.cc = simd_or(tmp1040, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_ad = simd_and(bytetest_a0_af, tmp107);
        bytetest_a0_b2 = simd_andc(bytetest_a0_bf, tmp174);
        tmp1041 = simd_and(tmp1039, bytetest_a0_b2);
        struct_Lo.cc = simd_or(tmp1041, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_b1 = simd_and(bytetest_b0_bf, tmp115);
        bytetest_80_88 = simd_andc(bytetest_80_8f, tmp132);
        tmp1042 = simd_and(tmp942, bytetest_b1);
        carryQ.cq[178] = carryout2carry(pablo_blk_Advance(tmp1042, carryQ.get_carry_in(178), tmp1043));
        tmp1044 = simd_and(tmp1043, bytetest_80_88);
        bytetest_b0 = simd_andc(bytetest_b0_bf, tmp90);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1045 = simd_and(tmp942, bytetest_b0);
        carryQ.cq[179] = carryout2carry(pablo_blk_Advance(tmp1045, carryQ.get_carry_in(179), tmp1046));
        tmp1047 = simd_and(tmp1046, bytetest_80_bf);
        tmp1048 = simd_or(tmp1047, tmp1044);
        struct_Lo.cc = simd_or(tmp1048, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_91 = simd_and(bytetest_90_9f, tmp115);
        bytetest_80 = simd_andc(bytetest_80_8f, tmp90);
        tmp1049 = simd_or(simd_and(basis_bits.bit_2, tmp517), simd_andc(tmp572, basis_bits.bit_2));
        bytetest_83_b7 = simd_and(bytetest_80_bf, tmp1049);
        tmp1050 = simd_and(tmp940, bytetest_91);
        carryQ.cq[180] = carryout2carry(pablo_blk_Advance(tmp1050, carryQ.get_carry_in(180), tmp1051));
        tmp1052 = simd_and(tmp1051, bytetest_80);
        carryQ.cq[181] = carryout2carry(pablo_blk_Advance(tmp1052, carryQ.get_carry_in(181), tmp1053));
        tmp1054 = simd_and(tmp1053, bytetest_83_b7);
        struct_Lo.cc = simd_or(tmp1054, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_91 = simd_and(bytetest_90_9f, tmp115);
        bytetest_82 = simd_and(bytetest_80_8f, tmp6);
        tmp1055 = simd_or(simd_and(basis_bits.bit_2, tmp94), simd_andc(tmp572, basis_bits.bit_2));
        bytetest_83_af = simd_and(bytetest_80_bf, tmp1055);
        tmp1056 = simd_and(tmp1051, bytetest_82);
        carryQ.cq[182] = carryout2carry(pablo_blk_Advance(tmp1056, carryQ.get_carry_in(182), tmp1057));
        tmp1058 = simd_and(tmp1057, bytetest_83_af);
        struct_Lo.cc = simd_or(tmp1058, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_91 = simd_and(bytetest_90_9f, tmp115);
        bytetest_83 = simd_and(bytetest_80_8f, tmp248);
        tmp1059 = simd_or(simd_and(basis_bits.bit_2, tmp172), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
        bytetest_90_a8 = simd_and(bytetest_80_bf, tmp1059);
        tmp1060 = simd_and(tmp1051, bytetest_83);
        carryQ.cq[183] = carryout2carry(pablo_blk_Advance(tmp1060, carryQ.get_carry_in(183), tmp1061));
        tmp1062 = simd_and(tmp1061, bytetest_90_a8);
        struct_Lo.cc = simd_or(tmp1062, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_91 = simd_and(bytetest_90_9f, tmp115);
        bytetest_84 = simd_and(bytetest_80_8f, tmp35);
        tmp1063 = simd_or(simd_and(basis_bits.bit_2, tmp947), simd_andc(tmp572, basis_bits.bit_2));
        bytetest_83_a6 = simd_and(bytetest_80_bf, tmp1063);
        tmp1064 = simd_and(tmp1051, bytetest_84);
        carryQ.cq[184] = carryout2carry(pablo_blk_Advance(tmp1064, carryQ.get_carry_in(184), tmp1065));
        tmp1066 = simd_and(tmp1065, bytetest_83_a6);
        struct_Lo.cc = simd_or(tmp1066, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_91 = simd_and(bytetest_90_9f, tmp115);
        bytetest_86 = simd_and(bytetest_80_8f, tmp21);
        tmp1067 = simd_or(simd_and(basis_bits.bit_2, tmp772), simd_andc(tmp572, basis_bits.bit_2));
        bytetest_83_b2 = simd_and(bytetest_80_bf, tmp1067);
        tmp1068 = simd_and(tmp1051, bytetest_86);
        carryQ.cq[185] = carryout2carry(pablo_blk_Advance(tmp1068, carryQ.get_carry_in(185), tmp1069));
        tmp1070 = simd_and(tmp1069, bytetest_83_b2);
        struct_Lo.cc = simd_or(tmp1070, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_91 = simd_and(bytetest_90_9f, tmp115);
        bytetest_87 = simd_and(bytetest_80_8f, tmp27);
        bytetest_81_84 = simd_and(bytetest_80_87, tmp210);
        tmp1071 = simd_and(tmp1051, bytetest_87);
        carryQ.cq[186] = carryout2carry(pablo_blk_Advance(tmp1071, carryQ.get_carry_in(186), tmp1072));
        tmp1073 = simd_and(tmp1072, bytetest_81_84);
        struct_Lo.cc = simd_or(tmp1073, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_91 = simd_and(bytetest_90_9f, tmp115);
        bytetest_9a = simd_and(bytetest_90_9f, tmp11);
        bytetest_80_aa = simd_andc(bytetest_80_bf, tmp386);
        tmp1074 = simd_and(tmp1051, bytetest_9a);
        carryQ.cq[187] = carryout2carry(pablo_blk_Advance(tmp1074, carryQ.get_carry_in(187), tmp1075));
        tmp1076 = simd_and(tmp1075, bytetest_80_aa);
        struct_Lo.cc = simd_or(tmp1076, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_92 = simd_and(bytetest_90_9f, tmp6);
        bytetest_8d = simd_and(bytetest_80_8f, tmp107);
        tmp1077 = simd_and(basis_bits.bit_2, tmp478);
        bytetest_80_ae = simd_andc(bytetest_80_bf, tmp1077);
        tmp1078 = simd_and(tmp940, bytetest_92);
        carryQ.cq[188] = carryout2carry(pablo_blk_Advance(tmp1078, carryQ.get_carry_in(188), tmp1079));
        tmp1080 = simd_and(tmp1079, bytetest_8d);
        carryQ.cq[189] = carryout2carry(pablo_blk_Advance(tmp1080, carryQ.get_carry_in(189), tmp1081));
        tmp1082 = simd_and(tmp1081, bytetest_80_ae);
        bytetest_80_8c = simd_andc(bytetest_80_8f, tmp490);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1083 = simd_and(tmp1079, bytetest_80_8c);
        carryQ.cq[190] = carryout2carry(pablo_blk_Advance(tmp1083, carryQ.get_carry_in(190), tmp1084));
        tmp1085 = simd_and(tmp1084, bytetest_80_bf);
        tmp1086 = simd_or(tmp1085, tmp1082);
        struct_Lo.cc = simd_or(tmp1086, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_93 = simd_and(bytetest_90_9f, tmp248);
        bytetest_90 = simd_andc(bytetest_90_9f, tmp90);
        bytetest_80_ae = simd_andc(bytetest_80_bf, tmp1077);
        tmp1087 = simd_and(tmp940, bytetest_93);
        carryQ.cq[191] = carryout2carry(pablo_blk_Advance(tmp1087, carryQ.get_carry_in(191), tmp1088));
        tmp1089 = simd_and(tmp1088, bytetest_90);
        carryQ.cq[192] = carryout2carry(pablo_blk_Advance(tmp1089, carryQ.get_carry_in(192), tmp1090));
        tmp1091 = simd_and(tmp1090, bytetest_80_ae);
        bytetest_80_8f = simd_andc(bytetest_80_bf, tmp2);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1092 = simd_and(tmp1088, bytetest_80_8f);
        carryQ.cq[193] = carryout2carry(pablo_blk_Advance(tmp1092, carryQ.get_carry_in(193), tmp1093));
        tmp1094 = simd_and(tmp1093, bytetest_80_bf);
        tmp1095 = simd_or(tmp1094, tmp1091);
        struct_Lo.cc = simd_or(tmp1095, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_96 = simd_and(bytetest_90_9f, tmp21);
        bytetest_a8 = simd_and(bytetest_a0_af, tmp50);
        tmp1096 = simd_and(basis_bits.bit_2, tmp133);
        bytetest_80_b8 = simd_andc(bytetest_80_bf, tmp1096);
        tmp1097 = simd_and(tmp940, bytetest_96);
        carryQ.cq[194] = carryout2carry(pablo_blk_Advance(tmp1097, carryQ.get_carry_in(194), tmp1098));
        tmp1099 = simd_and(tmp1098, bytetest_a8);
        carryQ.cq[195] = carryout2carry(pablo_blk_Advance(tmp1099, carryQ.get_carry_in(195), tmp1100));
        tmp1101 = simd_and(tmp1100, bytetest_80_b8);
        bytetest_a0_a7 = simd_andc(bytetest_a0_af, basis_bits.bit_4);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1102 = simd_and(tmp1098, bytetest_a0_a7);
        carryQ.cq[196] = carryout2carry(pablo_blk_Advance(tmp1102, carryQ.get_carry_in(196), tmp1103));
        tmp1104 = simd_and(tmp1103, bytetest_80_bf);
        tmp1105 = simd_or(tmp1104, tmp1101);
        struct_Lo.cc = simd_or(tmp1105, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_96 = simd_and(bytetest_90_9f, tmp21);
        bytetest_bd = simd_and(bytetest_b0_bf, tmp107);
        bytetest_80_84 = simd_andc(bytetest_80_87, tmp140);
        tmp1106 = simd_and(tmp1098, bytetest_bd);
        carryQ.cq[197] = carryout2carry(pablo_blk_Advance(tmp1106, carryQ.get_carry_in(197), tmp1107));
        tmp1108 = simd_and(tmp1107, bytetest_80_84);
        bytetest_bc = simd_and(bytetest_b0_bf, tmp89);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1109 = simd_and(tmp1098, bytetest_bc);
        carryQ.cq[198] = carryout2carry(pablo_blk_Advance(tmp1109, carryQ.get_carry_in(198), tmp1110));
        tmp1111 = simd_and(tmp1110, bytetest_80_bf);
        tmp1112 = simd_or(tmp1111, tmp1108);
        struct_Lo.cc = simd_or(tmp1112, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_96 = simd_and(bytetest_90_9f, tmp21);
        bytetest_bd = simd_and(bytetest_b0_bf, tmp107);
        bytetest_90_90 = simd_andc(bytetest_90_9f, tmp90);
        tmp1113 = simd_and(tmp1107, bytetest_90_90);
        struct_Lo.cc = simd_or(tmp1113, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9b = simd_and(bytetest_90_9f, tmp23);
        bytetest_80 = simd_andc(bytetest_80_8f, tmp90);
        bytetest_80_81 = simd_andc(bytetest_80_8f, tmp95);
        tmp1114 = simd_and(tmp940, bytetest_9b);
        carryQ.cq[199] = carryout2carry(pablo_blk_Advance(tmp1114, carryQ.get_carry_in(199), tmp1115));
        tmp1116 = simd_and(tmp1115, bytetest_80);
        carryQ.cq[200] = carryout2carry(pablo_blk_Advance(tmp1116, carryQ.get_carry_in(200), tmp1117));
        tmp1118 = simd_and(tmp1117, bytetest_80_81);
        struct_Lo.cc = simd_or(tmp1118, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp50);
        bytetest_80_83 = simd_andc(bytetest_80_8f, tmp4);
        tmp1119 = simd_and(tmp940, bytetest_9e);
        carryQ.cq[201] = carryout2carry(pablo_blk_Advance(tmp1119, carryQ.get_carry_in(201), tmp1120));
        tmp1121 = simd_and(tmp1120, bytetest_b8);
        carryQ.cq[202] = carryout2carry(pablo_blk_Advance(tmp1121, carryQ.get_carry_in(202), tmp1122));
        tmp1123 = simd_and(tmp1122, bytetest_80_83);
        struct_Lo.cc = simd_or(tmp1123, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp50);
        bytetest_85_9f = simd_and(tmp125, tmp562);
        tmp1124 = simd_and(tmp1122, bytetest_85_9f);
        struct_Lo.cc = simd_or(tmp1124, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp50);
        tmp1125 = simd_andc(bytetest_a0_af, tmp4);
        bytetest_a1_a2 = simd_and(tmp1125, tmp205);
        tmp1126 = simd_and(tmp1122, bytetest_a1_a2);
        struct_Lo.cc = simd_or(tmp1126, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp50);
        bytetest_a4_a4 = simd_and(bytetest_a0_af, tmp35);
        tmp1127 = simd_and(tmp1122, bytetest_a4_a4);
        struct_Lo.cc = simd_or(tmp1127, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp50);
        bytetest_a7_a7 = simd_and(bytetest_a0_af, tmp27);
        tmp1128 = simd_and(tmp1122, bytetest_a7_a7);
        struct_Lo.cc = simd_or(tmp1128, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp50);
        tmp1129 = simd_not(tmp173);
        tmp1130 = simd_or(simd_and(basis_bits.bit_3, tmp1129), simd_andc(tmp132, basis_bits.bit_3));
        bytetest_a9_b2 = simd_and(bytetest_a0_bf, tmp1130);
        tmp1131 = simd_and(tmp1122, bytetest_a9_b2);
        struct_Lo.cc = simd_or(tmp1131, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp50);
        bytetest_b4_b7 = simd_and(bytetest_b0_bf, tmp20);
        tmp1132 = simd_and(tmp1122, bytetest_b4_b7);
        struct_Lo.cc = simd_or(tmp1132, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp50);
        bytetest_b9_b9 = simd_and(bytetest_b0_bf, tmp55);
        tmp1133 = simd_and(tmp1122, bytetest_b9_b9);
        struct_Lo.cc = simd_or(tmp1133, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp50);
        bytetest_bb_bb = simd_and(bytetest_b0_bf, tmp23);
        tmp1134 = simd_and(tmp1122, bytetest_bb_bb);
        struct_Lo.cc = simd_or(tmp1134, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp55);
        bytetest_82_82 = simd_and(bytetest_80_8f, tmp6);
        tmp1135 = simd_and(tmp1120, bytetest_b9);
        carryQ.cq[203] = carryout2carry(pablo_blk_Advance(tmp1135, carryQ.get_carry_in(203), tmp1136));
        tmp1137 = simd_and(tmp1136, bytetest_82_82);
        struct_Lo.cc = simd_or(tmp1137, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp55);
        bytetest_87_87 = simd_and(bytetest_80_8f, tmp27);
        tmp1138 = simd_and(tmp1136, bytetest_87_87);
        struct_Lo.cc = simd_or(tmp1138, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp55);
        bytetest_89_89 = simd_and(bytetest_80_8f, tmp55);
        tmp1139 = simd_and(tmp1136, bytetest_89_89);
        struct_Lo.cc = simd_or(tmp1139, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp55);
        bytetest_8b_8b = simd_and(bytetest_80_8f, tmp23);
        tmp1140 = simd_and(tmp1136, bytetest_8b_8b);
        struct_Lo.cc = simd_or(tmp1140, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp55);
        bytetest_8d_8f = simd_and(tmp588, tmp34);
        tmp1141 = simd_and(tmp1136, bytetest_8d_8f);
        struct_Lo.cc = simd_or(tmp1141, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp55);
        bytetest_91_92 = simd_and(bytetest_90_93, tmp205);
        tmp1142 = simd_and(tmp1136, bytetest_91_92);
        struct_Lo.cc = simd_or(tmp1142, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp55);
        bytetest_94_94 = simd_and(bytetest_90_9f, tmp35);
        tmp1143 = simd_and(tmp1136, bytetest_94_94);
        struct_Lo.cc = simd_or(tmp1143, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp55);
        bytetest_97_97 = simd_and(bytetest_90_9f, tmp27);
        tmp1144 = simd_and(tmp1136, bytetest_97_97);
        struct_Lo.cc = simd_or(tmp1144, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp55);
        bytetest_99_99 = simd_and(bytetest_90_9f, tmp55);
        tmp1145 = simd_and(tmp1136, bytetest_99_99);
        struct_Lo.cc = simd_or(tmp1145, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp55);
        bytetest_9b_9b = simd_and(bytetest_90_9f, tmp23);
        tmp1146 = simd_and(tmp1136, bytetest_9b_9b);
        struct_Lo.cc = simd_or(tmp1146, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp55);
        bytetest_9d_9d = simd_and(bytetest_90_9f, tmp107);
        tmp1147 = simd_and(tmp1136, bytetest_9d_9d);
        struct_Lo.cc = simd_or(tmp1147, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp55);
        bytetest_9f_9f = simd_and(bytetest_90_9f, tmp87);
        tmp1148 = simd_and(tmp1136, bytetest_9f_9f);
        struct_Lo.cc = simd_or(tmp1148, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp55);
        bytetest_a1_a2 = simd_and(tmp1125, tmp205);
        tmp1149 = simd_and(tmp1136, bytetest_a1_a2);
        struct_Lo.cc = simd_or(tmp1149, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp55);
        bytetest_a4_a4 = simd_and(bytetest_a0_af, tmp35);
        tmp1150 = simd_and(tmp1136, bytetest_a4_a4);
        struct_Lo.cc = simd_or(tmp1150, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp55);
        bytetest_a7_aa = simd_and(bytetest_a0_af, tmp745);
        tmp1151 = simd_and(tmp1136, bytetest_a7_aa);
        struct_Lo.cc = simd_or(tmp1151, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp55);
        tmp1152 = simd_or(simd_and(basis_bits.bit_3, tmp1129), simd_andc(tmp62, basis_bits.bit_3));
        bytetest_ac_b2 = simd_and(bytetest_a0_bf, tmp1152);
        tmp1153 = simd_and(tmp1136, bytetest_ac_b2);
        struct_Lo.cc = simd_or(tmp1153, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp55);
        bytetest_b4_b7 = simd_and(bytetest_b0_bf, tmp20);
        tmp1154 = simd_and(tmp1136, bytetest_b4_b7);
        struct_Lo.cc = simd_or(tmp1154, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp55);
        bytetest_b9_bc = simd_and(bytetest_b8_bf, tmp210);
        tmp1155 = simd_and(tmp1136, bytetest_b9_bc);
        struct_Lo.cc = simd_or(tmp1155, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp55);
        bytetest_be_be = simd_and(bytetest_b0_bf, tmp99);
        tmp1156 = simd_and(tmp1136, bytetest_be_be);
        struct_Lo.cc = simd_or(tmp1156, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp11);
        bytetest_80_89 = simd_andc(bytetest_80_8f, tmp118);
        tmp1157 = simd_and(tmp1120, bytetest_ba);
        carryQ.cq[204] = carryout2carry(pablo_blk_Advance(tmp1157, carryQ.get_carry_in(204), tmp1158));
        tmp1159 = simd_and(tmp1158, bytetest_80_89);
        struct_Lo.cc = simd_or(tmp1159, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp11);
        tmp1160 = simd_not(tmp62);
        tmp1161 = simd_or(simd_and(basis_bits.bit_3, tmp1160), simd_andc(tmp41, basis_bits.bit_3));
        bytetest_8b_9b = simd_and(tmp125, tmp1161);
        tmp1162 = simd_and(tmp1158, bytetest_8b_9b);
        struct_Lo.cc = simd_or(tmp1162, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp11);
        bytetest_a1_a3 = simd_and(tmp1125, tmp34);
        tmp1163 = simd_and(tmp1158, bytetest_a1_a3);
        struct_Lo.cc = simd_or(tmp1163, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp11);
        bytetest_a5_a9 = simd_and(bytetest_a0_af, tmp227);
        tmp1164 = simd_and(tmp1158, bytetest_a5_a9);
        struct_Lo.cc = simd_or(tmp1164, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_9e = simd_and(bytetest_90_9f, tmp99);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp11);
        bytetest_ab_bb = simd_and(bytetest_a0_bf, tmp1161);
        tmp1165 = simd_and(tmp1158, bytetest_ab_bb);
        struct_Lo.cc = simd_or(tmp1165, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_aa = simd_and(bytetest_a0_af, tmp11);
        bytetest_9b = simd_and(bytetest_90_9f, tmp23);
        bytetest_80_96 = simd_andc(tmp125, tmp552);
        tmp1166 = simd_and(tmp940, bytetest_aa);
        carryQ.cq[205] = carryout2carry(pablo_blk_Advance(tmp1166, carryQ.get_carry_in(205), tmp1167));
        tmp1168 = simd_and(tmp1167, bytetest_9b);
        carryQ.cq[206] = carryout2carry(pablo_blk_Advance(tmp1168, carryQ.get_carry_in(206), tmp1169));
        tmp1170 = simd_and(tmp1169, bytetest_80_96);
        bytetest_80_9a = simd_andc(tmp125, tmp307);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1171 = simd_and(tmp1167, bytetest_80_9a);
        carryQ.cq[207] = carryout2carry(pablo_blk_Advance(tmp1171, carryQ.get_carry_in(207), tmp1172));
        tmp1173 = simd_and(tmp1172, bytetest_80_bf);
        tmp1174 = simd_or(tmp1173, tmp1170);
        bytetest_a0_a9 = simd_andc(bytetest_a0_af, tmp118);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1175 = simd_and(tmp940, bytetest_a0_a9);
        carryQ.cq[208] = carryout2carry(pablo_blk_Advance(tmp1175, carryQ.get_carry_in(208), tmp1176));
        tmp1177 = simd_and(tmp1176, bytetest_80_bf);
        carryQ.cq[209] = carryout2carry(pablo_blk_Advance(tmp1177, carryQ.get_carry_in(209), tmp1178));
        tmp1179 = simd_and(tmp1178, bytetest_80_bf);
        tmp1180 = simd_or(tmp1179, tmp1174);
        struct_Lo.cc = simd_or(tmp1180, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_ab = simd_and(bytetest_a0_af, tmp23);
        bytetest_9c = simd_and(bytetest_90_9f, tmp89);
        bytetest_80_b4 = simd_andc(bytetest_80_bf, tmp458);
        tmp1181 = simd_and(tmp940, bytetest_ab);
        carryQ.cq[210] = carryout2carry(pablo_blk_Advance(tmp1181, carryQ.get_carry_in(210), tmp1182));
        tmp1183 = simd_and(tmp1182, bytetest_9c);
        carryQ.cq[211] = carryout2carry(pablo_blk_Advance(tmp1183, carryQ.get_carry_in(211), tmp1184));
        tmp1185 = simd_and(tmp1184, bytetest_80_b4);
        bytetest_80_9b = simd_andc(tmp125, tmp840);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1186 = simd_and(tmp1182, bytetest_80_9b);
        carryQ.cq[212] = carryout2carry(pablo_blk_Advance(tmp1186, carryQ.get_carry_in(212), tmp1187));
        tmp1188 = simd_and(tmp1187, bytetest_80_bf);
        tmp1189 = simd_or(tmp1188, tmp1185);
        bytetest_aa = simd_and(bytetest_a0_af, tmp11);
        tmp1190 = simd_or(basis_bits.bit_2, tmp840);
        bytetest_9c_bf = simd_and(bytetest_80_bf, tmp1190);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1191 = simd_and(tmp1167, bytetest_9c_bf);
        carryQ.cq[213] = carryout2carry(pablo_blk_Advance(tmp1191, carryQ.get_carry_in(213), tmp1192));
        tmp1193 = simd_and(tmp1192, bytetest_80_bf);
        tmp1194 = simd_or(tmp1193, tmp1189);
        struct_Lo.cc = simd_or(tmp1194, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_ab = simd_and(bytetest_a0_af, tmp23);
        bytetest_a0 = simd_andc(bytetest_a0_af, tmp90);
        bytetest_80_9d = simd_andc(tmp125, tmp824);
        tmp1195 = simd_and(tmp1182, bytetest_a0);
        carryQ.cq[214] = carryout2carry(pablo_blk_Advance(tmp1195, carryQ.get_carry_in(214), tmp1196));
        tmp1197 = simd_and(tmp1196, bytetest_80_9d);
        tmp1198 = simd_and(bytetest_90_9f, tmp62);
        bytetest_9d_9f = simd_and(tmp1198, tmp34);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1199 = simd_and(tmp1182, bytetest_9d_9f);
        carryQ.cq[215] = carryout2carry(pablo_blk_Advance(tmp1199, carryQ.get_carry_in(215), tmp1200));
        tmp1201 = simd_and(tmp1200, bytetest_80_bf);
        tmp1202 = simd_or(tmp1201, tmp1197);
        struct_Lo.cc = simd_or(tmp1202, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp938, tmp90);
        bytetest_af = simd_and(bytetest_a0_af, tmp87);
        bytetest_a8 = simd_and(bytetest_a0_af, tmp50);
        bytetest_80_9d = simd_andc(tmp125, tmp824);
        tmp1203 = simd_and(tmp940, bytetest_af);
        carryQ.cq[216] = carryout2carry(pablo_blk_Advance(tmp1203, carryQ.get_carry_in(216), tmp1204));
        tmp1205 = simd_and(tmp1204, bytetest_a8);
        carryQ.cq[217] = carryout2carry(pablo_blk_Advance(tmp1205, carryQ.get_carry_in(217), tmp1206));
        tmp1207 = simd_and(tmp1206, bytetest_80_9d);
        bytetest_a0_a7 = simd_andc(bytetest_a0_af, basis_bits.bit_4);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1208 = simd_and(tmp1204, bytetest_a0_a7);
        carryQ.cq[218] = carryout2carry(pablo_blk_Advance(tmp1208, carryQ.get_carry_in(218), tmp1209));
        tmp1210 = simd_and(tmp1209, bytetest_80_bf);
        tmp1211 = simd_or(tmp1210, tmp1207);
        struct_Lo.cc = simd_or(tmp1211, struct_Lo.cc);
  }
  CarryArray<219, 0> carryQ;
  };

  struct Ll {
  Ll() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Ll & struct_Ll) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, tmp7, tmp8, tmp9, tmp10;
		BitBlock bytetest_61_7a, tmp11, tmp12, tmp13, tmp14, tmp15, bytetest_c2, tmp16;
		BitBlock tmp17, tmp18, tmp19, tmp20, tmp21, bytetest_b5_b5, tmp22, tmp23;
		BitBlock tmp24, tmp25, tmp26, tmp27, bytetest_c3, tmp28, tmp29, tmp30, tmp31;
		BitBlock tmp32, tmp33, tmp34, tmp35, bytetest_9f_b6, tmp36, tmp37, tmp38;
		BitBlock bytetest_b8_bf, tmp39, tmp40, bytetest_c4, tmp41, tmp42;
		BitBlock bytetest_81_81, tmp43, tmp44, tmp45, bytetest_83_83, tmp46;
		BitBlock bytetest_85_85, tmp47, tmp48, bytetest_87_87, tmp49, tmp50, tmp51;
		BitBlock bytetest_89_89, tmp52, tmp53, bytetest_8b_8b, tmp54, tmp55;
		BitBlock bytetest_8d_8d, tmp56, bytetest_8f_8f, tmp57, tmp58, tmp59;
		BitBlock bytetest_91_91, tmp60, bytetest_93_93, tmp61, bytetest_95_95, tmp62;
		BitBlock bytetest_97_97, tmp63, bytetest_99_99, tmp64, bytetest_9b_9b, tmp65;
		BitBlock bytetest_9d_9d, tmp66, bytetest_9f_9f, tmp67, tmp68, tmp69;
		BitBlock bytetest_a1_a1, tmp70, bytetest_a3_a3, tmp71, bytetest_a5_a5, tmp72;
		BitBlock bytetest_a7_a7, tmp73, bytetest_a9_a9, tmp74, bytetest_ab_ab, tmp75;
		BitBlock bytetest_ad_ad, tmp76, bytetest_af_af, tmp77, bytetest_b1_b1, tmp78;
		BitBlock bytetest_b3_b3, tmp79, tmp80, tmp81, tmp82, tmp83, bytetest_b7_b8;
		BitBlock tmp84, tmp85, bytetest_ba_ba, tmp86, tmp87, bytetest_bc_bc, tmp88;
		BitBlock tmp89, bytetest_be_be, tmp90, bytetest_c5, bytetest_80_80, tmp91;
		BitBlock tmp92, tmp93, bytetest_82_82, tmp94, bytetest_84_84, tmp95, tmp96;
		BitBlock bytetest_86_86, tmp97, tmp98, bytetest_88_89, tmp99, tmp100, tmp101;
		BitBlock tmp102, tmp103, tmp104, tmp105, tmp106, tmp107, tmp108, tmp109;
		BitBlock tmp110, tmp111, tmp112, tmp113, tmp114, tmp115, tmp116, tmp117;
		BitBlock tmp118, tmp119, tmp120, tmp121, bytetest_b7_b7, tmp122, tmp123;
		BitBlock tmp124, bytetest_c6, tmp125, tmp126, tmp127, tmp128, bytetest_be_bf;
		BitBlock tmp129, tmp130, tmp131, tmp132, tmp133, bytetest_88_88, tmp134;
		BitBlock tmp135, bytetest_8c_8d, tmp136, bytetest_92_92, tmp137, tmp138;
		BitBlock tmp139, bytetest_99_9b, tmp140, bytetest_9e_9e, tmp141, tmp142;
		BitBlock tmp143, tmp144, bytetest_a8_a8, tmp145, tmp146, bytetest_aa_ab;
		BitBlock tmp147, tmp148, bytetest_b0_b0, tmp149, bytetest_b4_b4, tmp150;
		BitBlock bytetest_b6_b6, tmp151, tmp152, tmp153, tmp154, bytetest_b9_ba;
		BitBlock tmp155, tmp156, bytetest_bd_bf, tmp157, bytetest_c7, tmp158, tmp159;
		BitBlock tmp160, tmp161, bytetest_8c_8c, tmp162, bytetest_8e_8e, tmp163;
		BitBlock bytetest_90_90, tmp164, tmp165, bytetest_94_94, tmp166;
		BitBlock bytetest_96_96, tmp167, bytetest_98_98, tmp168, bytetest_9a_9a;
		BitBlock tmp169, bytetest_9c_9d, tmp170, tmp171, tmp172, tmp173, tmp174;
		BitBlock tmp175, tmp176, tmp177, tmp178, tmp179, tmp180, tmp181;
		BitBlock bytetest_af_b0, tmp182, tmp183, tmp184, bytetest_b9_b9, tmp185;
		BitBlock bytetest_bb_bb, tmp186, bytetest_bd_bd, tmp187, bytetest_bf_bf;
		BitBlock tmp188, bytetest_c8, tmp189, tmp190, tmp191, tmp192, tmp193, tmp194;
		BitBlock tmp195, tmp196, tmp197, tmp198, tmp199, tmp200, tmp201, tmp202;
		BitBlock tmp203, tmp204, tmp205, tmp206, tmp207, tmp208, tmp209, tmp210;
		BitBlock tmp211, tmp212, tmp213, tmp214, tmp215, tmp216, tmp217, tmp218;
		BitBlock bytetest_b3_b9, tmp219, tmp220, bytetest_c9, tmp221, tmp222, tmp223;
		BitBlock tmp224, tmp225, tmp226, tmp227, tmp228, tmp229, tmp230, bytetest_ca;
		BitBlock tmp231, tmp232, bytetest_80_93, tmp233, tmp234, tmp235, tmp236;
		BitBlock tmp237, bytetest_8f_bf, tmp238, tmp239, tmp240, tmp241, tmp242;
		BitBlock tmp243, tmp244, bytetest_95_af, tmp245, bytetest_cd, tmp246, tmp247;
		BitBlock tmp248, tmp249, tmp250, tmp251, tmp252, bytetest_bb_bd, tmp253;
		BitBlock bytetest_ce, tmp254, tmp255, tmp256, bytetest_cf, tmp257;
		BitBlock bytetest_80_8e, tmp258, tmp259, tmp260, tmp261, bytetest_ac_bf;
		BitBlock tmp262, tmp263, tmp264, bytetest_90_91, tmp265, tmp266;
		BitBlock bytetest_95_97, tmp267, tmp268, tmp269, tmp270, tmp271, tmp272;
		BitBlock tmp273, tmp274, tmp275, tmp276, tmp277, tmp278, tmp279, tmp280;
		BitBlock bytetest_af_b3, tmp281, tmp282, bytetest_b8_b8, tmp283, tmp284;
		BitBlock tmp285, bytetest_bb_bc, tmp286, tmp287, bytetest_d1, bytetest_80_9f;
		BitBlock tmp288, tmp289, tmp290, bytetest_d0, bytetest_b0_bf, tmp291, tmp292;
		BitBlock tmp293, tmp294, tmp295, tmp296, tmp297, tmp298, tmp299, tmp300;
		BitBlock tmp301, tmp302, tmp303, tmp304, tmp305, tmp306, tmp307, tmp308;
		BitBlock tmp309, tmp310, bytetest_d2, tmp311, tmp312, tmp313, tmp314, tmp315;
		BitBlock tmp316, tmp317, tmp318, tmp319, tmp320, tmp321, tmp322, tmp323;
		BitBlock tmp324, tmp325, tmp326, tmp327, tmp328, tmp329, tmp330, tmp331;
		BitBlock tmp332, tmp333, tmp334, tmp335, tmp336, tmp337, tmp338, tmp339;
		BitBlock tmp340, bytetest_d3, tmp341, tmp342, tmp343, tmp344, tmp345, tmp346;
		BitBlock bytetest_8a_8a, tmp347, tmp348, bytetest_8e_8f, tmp349, tmp350;
		BitBlock tmp351, tmp352, tmp353, tmp354, tmp355, tmp356, tmp357, tmp358;
		BitBlock tmp359, tmp360, tmp361, tmp362, tmp363, tmp364, tmp365, tmp366;
		BitBlock tmp367, tmp368, tmp369, tmp370, tmp371, tmp372, tmp373, bytetest_d4;
		BitBlock tmp374, tmp375, tmp376, tmp377, tmp378, tmp379, tmp380, tmp381;
		BitBlock tmp382, tmp383, tmp384, tmp385, tmp386, tmp387, tmp388, tmp389;
		BitBlock tmp390, tmp391, tmp392, tmp393, tmp394, tmp395, bytetest_d6;
		BitBlock bytetest_80_87, tmp396, tmp397, tmp398, bytetest_d5, tmp399;
		BitBlock bytetest_a1_bf, tmp400, tmp401, tmp402, tmp403, tmp404, bytetest_e1;
		BitBlock bytetest_b4, tmp405, bytetest_80_ab, tmp406, tmp407, tmp408, tmp409;
		BitBlock tmp410, bytetest_b5, tmp411, tmp412, bytetest_ab_b7, tmp413, tmp414;
		BitBlock tmp415, bytetest_b6, tmp416, bytetest_80_9a, tmp417, tmp418, tmp419;
		BitBlock tmp420, bytetest_b9_bf, tmp421, tmp422, bytetest_b8, tmp423, tmp424;
		BitBlock tmp425, tmp426, tmp427, tmp428, tmp429, tmp430, tmp431, tmp432;
		BitBlock tmp433, tmp434, tmp435, tmp436, tmp437, tmp438, tmp439, tmp440;
		BitBlock tmp441, tmp442, tmp443, tmp444, tmp445, tmp446, tmp447, tmp448;
		BitBlock tmp449, tmp450, tmp451, tmp452, tmp453, tmp454, tmp455, tmp456;
		BitBlock bytetest_b9, tmp457, tmp458, tmp459, tmp460, tmp461, tmp462, tmp463;
		BitBlock tmp464, tmp465, tmp466, tmp467, tmp468, tmp469, tmp470, tmp471;
		BitBlock tmp472, tmp473, tmp474, tmp475, tmp476, tmp477, tmp478, tmp479;
		BitBlock tmp480, tmp481, tmp482, tmp483, tmp484, tmp485, tmp486, tmp487;
		BitBlock tmp488, tmp489, tmp490, bytetest_ba, tmp491, tmp492, tmp493, tmp494;
		BitBlock tmp495, tmp496, tmp497, tmp498, tmp499, tmp500, tmp501, tmp502;
		BitBlock tmp503, tmp504, tmp505, bytetest_95_9d, tmp506, tmp507, tmp508;
		BitBlock tmp509, tmp510, tmp511, tmp512, tmp513, tmp514, tmp515, tmp516;
		BitBlock tmp517, tmp518, tmp519, tmp520, tmp521, tmp522, tmp523, bytetest_bb;
		BitBlock tmp524, tmp525, tmp526, tmp527, tmp528, tmp529, tmp530, tmp531;
		BitBlock tmp532, tmp533, tmp534, tmp535, tmp536, tmp537, tmp538, tmp539;
		BitBlock tmp540, tmp541, tmp542, tmp543, tmp544, tmp545, tmp546, tmp547;
		BitBlock tmp548, tmp549, tmp550, tmp551, tmp552, tmp553, tmp554, tmp555;
		BitBlock tmp556, bytetest_bc, tmp557, tmp558, tmp559, tmp560, tmp561, tmp562;
		BitBlock bytetest_90_95, tmp563, bytetest_a0_a7, tmp564, bytetest_b0_b7;
		BitBlock tmp565, bytetest_bd, bytetest_80_85, tmp566, tmp567, tmp568;
		BitBlock bytetest_90_97, tmp569, tmp570, tmp571, bytetest_b0_bd, tmp572;
		BitBlock bytetest_be, tmp573, tmp574, tmp575, tmp576, tmp577, bytetest_b0_b4;
		BitBlock tmp578, tmp579, bytetest_b6_b7, tmp580, tmp581, bytetest_bf, tmp582;
		BitBlock bytetest_82_84, tmp583, tmp584, tmp585, bytetest_86_87, tmp586;
		BitBlock bytetest_90_93, tmp587, bytetest_96_97, tmp588, tmp589;
		BitBlock bytetest_b2_b4, tmp590, tmp591, bytetest_e2, bytetest_84, tmp592;
		BitBlock tmp593, tmp594, tmp595, tmp596, tmp597, tmp598, tmp599, tmp600;
		BitBlock tmp601, bytetest_bc_bd, tmp602, bytetest_85, tmp603, bytetest_86_89;
		BitBlock tmp604, tmp605, tmp606, tmp607, bytetest_86, tmp608, tmp609, tmp610;
		BitBlock bytetest_b1, bytetest_80_9e, tmp611, tmp612, tmp613, bytetest_b0;
		BitBlock tmp614, tmp615, tmp616, tmp617, tmp618, tmp619, bytetest_a5_a6;
		BitBlock tmp620, tmp621, bytetest_aa_aa, tmp622, bytetest_ac_ac, tmp623;
		BitBlock tmp624, bytetest_b3_b4, tmp625, tmp626, tmp627, bytetest_b6_bb;
		BitBlock tmp628, bytetest_b2, tmp629, tmp630, tmp631, tmp632, tmp633, tmp634;
		BitBlock tmp635, tmp636, tmp637, tmp638, tmp639, tmp640, tmp641, tmp642;
		BitBlock tmp643, tmp644, tmp645, tmp646, tmp647, tmp648, tmp649, tmp650;
		BitBlock tmp651, tmp652, tmp653, tmp654, tmp655, tmp656, tmp657, tmp658;
		BitBlock tmp659, tmp660, tmp661, tmp662, bytetest_b3, tmp663, tmp664, tmp665;
		BitBlock tmp666, tmp667, tmp668, tmp669, tmp670, tmp671, tmp672, tmp673;
		BitBlock tmp674, tmp675, tmp676, tmp677, tmp678, tmp679, tmp680, tmp681;
		BitBlock bytetest_a3_a4, tmp682, tmp683, bytetest_ae_ae, tmp684, tmp685;
		BitBlock tmp686, tmp687, tmp688, bytetest_80_a5, tmp689, tmp690, tmp691;
		BitBlock tmp692, tmp693, bytetest_ea, bytetest_99, tmp694, tmp695, tmp696;
		BitBlock tmp697, tmp698, tmp699, tmp700, tmp701, tmp702, tmp703, tmp704;
		BitBlock tmp705, tmp706, tmp707, tmp708, tmp709, tmp710, tmp711, tmp712;
		BitBlock tmp713, tmp714, tmp715, tmp716, tmp717, tmp718, tmp719, tmp720;
		BitBlock bytetest_9a, tmp721, tmp722, tmp723, tmp724, tmp725, tmp726, tmp727;
		BitBlock tmp728, tmp729, tmp730, tmp731, tmp732, tmp733, tmp734, bytetest_9c;
		BitBlock tmp735, tmp736, tmp737, tmp738, tmp739, tmp740, tmp741, tmp742;
		BitBlock tmp743, tmp744, bytetest_af_b1, tmp745, tmp746, tmp747, tmp748;
		BitBlock tmp749, tmp750, tmp751, tmp752, bytetest_9d, tmp753, tmp754, tmp755;
		BitBlock tmp756, tmp757, tmp758, tmp759, tmp760, tmp761, tmp762, tmp763;
		BitBlock tmp764, tmp765, tmp766, tmp767, tmp768, tmp769, tmp770, tmp771;
		BitBlock tmp772, tmp773, tmp774, tmp775, tmp776, tmp777, tmp778, tmp779;
		BitBlock bytetest_b1_b8, tmp780, tmp781, tmp782, tmp783, bytetest_9e, tmp784;
		BitBlock tmp785, tmp786, tmp787, tmp788, tmp789, tmp790, tmp791, tmp792;
		BitBlock tmp793, tmp794, tmp795, tmp796, tmp797, tmp798, bytetest_9f, tmp799;
		BitBlock tmp800, tmp801, bytetest_ef, bytetest_ac, bytetest_80_86, tmp802;
		BitBlock tmp803, tmp804, tmp805, tmp806, bytetest_93_97, tmp807;
		BitBlock bytetest_81_9a, tmp808, tmp809, tmp810, tmp811, bytetest_f0;
		BitBlock bytetest_90, bytetest_91, bytetest_80_8f, tmp812, tmp813, tmp814;
		BitBlock tmp815, tmp816, tmp817, tmp818, tmp819, bytetest_a8_bf, tmp820;
		BitBlock tmp821, tmp822, tmp823, tmp824, tmp825, tmp826, tmp827;
		BitBlock bytetest_9a_b3, tmp828, tmp829, tmp830, tmp831, tmp832, tmp833;
		BitBlock tmp834, bytetest_8e_94, tmp835, tmp836, tmp837, tmp838, tmp839;
		BitBlock tmp840, bytetest_96_a7, tmp841, bytetest_92, tmp842, tmp843;
		BitBlock bytetest_82_9b, tmp844, tmp845, tmp846, bytetest_b6_b9, tmp847;
		BitBlock tmp848, bytetest_93, bytetest_80_83, tmp849, tmp850, tmp851, tmp852;
		BitBlock tmp853, tmp854, bytetest_85_8f, tmp855, bytetest_94, tmp856, tmp857;
		BitBlock tmp858, tmp859, bytetest_aa_bf, tmp860, tmp861, tmp862, tmp863;
		BitBlock tmp864, tmp865, bytetest_9e_b7, tmp866, bytetest_95, tmp867, tmp868;
		BitBlock tmp869, bytetest_92_ab, tmp870, tmp871, tmp872, bytetest_96;
		BitBlock bytetest_86_9f, tmp873, tmp874, tmp875, bytetest_97, tmp876, tmp877;
		BitBlock tmp878, bytetest_ba_bf, tmp879, tmp880, bytetest_98, tmp881, tmp882;
		BitBlock tmp883, tmp884, bytetest_ae_bf, tmp885, tmp886, bytetest_a2_bb;
		BitBlock tmp887, tmp888, bytetest_96_af, tmp889, tmp890, tmp891, tmp892;
		BitBlock tmp893, bytetest_8a_a5, tmp894, tmp895, tmp896, bytetest_9b, tmp897;
		BitBlock bytetest_82_9a, tmp898, tmp899, tmp900, tmp901, tmp902, tmp903;
		BitBlock tmp904, bytetest_9c_a1, tmp905, bytetest_80_94, tmp906, tmp907;
		BitBlock tmp908, bytetest_bc_bf, tmp909, tmp910, bytetest_96_9b, tmp911;
		BitBlock tmp912, tmp913, tmp914, bytetest_b6_bf, tmp915, tmp916, tmp917;
		BitBlock tmp918, bytetest_80_88, tmp919, tmp920, tmp921, tmp922, tmp923;
		BitBlock tmp924, bytetest_8a_8f, tmp925, bytetest_80_82, tmp926, tmp927;
		BitBlock tmp928, tmp929, tmp930, tmp931, bytetest_84_89, tmp932, tmp933;




        struct_Ll.cc = simd<1>::constant<0>();
        tmp1 = simd_andc(basis_bits.bit_1, basis_bits.bit_0);
        tmp2 = simd_and(tmp1, basis_bits.bit_2);
        tmp3 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp4 = simd_or(basis_bits.bit_5, tmp3);
        tmp5 = simd_and(basis_bits.bit_4, tmp4);
        tmp6 = simd_not(tmp5);
        tmp7 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp8 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp9 = simd_or(tmp7, tmp8);
        tmp10 = simd_or(simd_and(basis_bits.bit_3, tmp6), simd_andc(tmp9, basis_bits.bit_3));
        bytetest_61_7a = simd_and(tmp2, tmp10);
        struct_Ll.cc = simd_or(bytetest_61_7a, struct_Ll.cc);
        tmp11 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp12 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp13 = simd_andc(tmp11, tmp12);
        tmp14 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp15 = simd_andc(tmp14, tmp7);
        bytetest_c2 = simd_and(tmp13, tmp15);
        tmp16 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp17 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp18 = simd_and(tmp16, tmp17);
        tmp19 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp20 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp21 = simd_and(tmp19, tmp20);
        bytetest_b5_b5 = simd_and(tmp18, tmp21);
        tmp22 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp22, carryQ.get_carry_in(0), tmp23));
        tmp24 = simd_and(tmp23, bytetest_c2);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp24, carryQ.get_carry_in(1), tmp25));
        tmp26 = simd_and(tmp25, bytetest_b5_b5);
        struct_Ll.cc = simd_or(tmp26, struct_Ll.cc);
        tmp27 = simd_andc(tmp3, tmp7);
        bytetest_c3 = simd_and(tmp13, tmp27);
        tmp28 = simd_and(basis_bits.bit_5, tmp3);
        tmp29 = simd_or(basis_bits.bit_4, tmp28);
        tmp30 = simd_and(basis_bits.bit_3, tmp29);
        tmp31 = simd_not(tmp30);
        tmp32 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp33 = simd_and(tmp32, tmp3);
        tmp34 = simd_and(basis_bits.bit_3, tmp33);
        tmp35 = simd_or(simd_and(basis_bits.bit_2, tmp31), simd_andc(tmp34, basis_bits.bit_2));
        bytetest_9f_b6 = simd_and(tmp16, tmp35);
        tmp36 = simd_and(tmp23, bytetest_c3);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp36, carryQ.get_carry_in(2), tmp37));
        tmp38 = simd_and(tmp37, bytetest_9f_b6);
        struct_Ll.cc = simd_or(tmp38, struct_Ll.cc);
        bytetest_c3 = simd_and(tmp13, tmp27);
        bytetest_b8_bf = simd_and(tmp18, basis_bits.bit_4);
        tmp39 = simd_and(tmp37, bytetest_b8_bf);
        struct_Ll.cc = simd_or(tmp39, struct_Ll.cc);
        tmp40 = simd_andc(tmp19, tmp8);
        bytetest_c4 = simd_and(tmp13, tmp40);
        tmp41 = simd_andc(tmp16, tmp12);
        tmp42 = simd_andc(tmp20, tmp7);
        bytetest_81_81 = simd_and(tmp41, tmp42);
        tmp43 = simd_and(tmp23, bytetest_c4);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp43, carryQ.get_carry_in(3), tmp44));
        tmp45 = simd_and(tmp44, bytetest_81_81);
        struct_Ll.cc = simd_or(tmp45, struct_Ll.cc);
        bytetest_c4 = simd_and(tmp13, tmp40);
        bytetest_83_83 = simd_and(tmp41, tmp27);
        tmp46 = simd_and(tmp44, bytetest_83_83);
        struct_Ll.cc = simd_or(tmp46, struct_Ll.cc);
        bytetest_c4 = simd_and(tmp13, tmp40);
        bytetest_85_85 = simd_and(tmp41, tmp21);
        tmp47 = simd_and(tmp44, bytetest_85_85);
        struct_Ll.cc = simd_or(tmp47, struct_Ll.cc);
        bytetest_c4 = simd_and(tmp13, tmp40);
        tmp48 = simd_and(tmp19, tmp3);
        bytetest_87_87 = simd_and(tmp41, tmp48);
        tmp49 = simd_and(tmp44, bytetest_87_87);
        struct_Ll.cc = simd_or(tmp49, struct_Ll.cc);
        bytetest_c4 = simd_and(tmp13, tmp40);
        tmp50 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp51 = simd_and(tmp50, tmp20);
        bytetest_89_89 = simd_and(tmp41, tmp51);
        tmp52 = simd_and(tmp44, bytetest_89_89);
        struct_Ll.cc = simd_or(tmp52, struct_Ll.cc);
        bytetest_c4 = simd_and(tmp13, tmp40);
        tmp53 = simd_and(tmp50, tmp3);
        bytetest_8b_8b = simd_and(tmp41, tmp53);
        tmp54 = simd_and(tmp44, bytetest_8b_8b);
        struct_Ll.cc = simd_or(tmp54, struct_Ll.cc);
        bytetest_c4 = simd_and(tmp13, tmp40);
        tmp55 = simd_and(tmp32, tmp20);
        bytetest_8d_8d = simd_and(tmp41, tmp55);
        tmp56 = simd_and(tmp44, bytetest_8d_8d);
        struct_Ll.cc = simd_or(tmp56, struct_Ll.cc);
        bytetest_c4 = simd_and(tmp13, tmp40);
        bytetest_8f_8f = simd_and(tmp41, tmp33);
        tmp57 = simd_and(tmp44, bytetest_8f_8f);
        struct_Ll.cc = simd_or(tmp57, struct_Ll.cc);
        bytetest_c4 = simd_and(tmp13, tmp40);
        tmp58 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp59 = simd_and(tmp16, tmp58);
        bytetest_91_91 = simd_and(tmp59, tmp42);
        tmp60 = simd_and(tmp44, bytetest_91_91);
        struct_Ll.cc = simd_or(tmp60, struct_Ll.cc);
        bytetest_c4 = simd_and(tmp13, tmp40);
        bytetest_93_93 = simd_and(tmp59, tmp27);
        tmp61 = simd_and(tmp44, bytetest_93_93);
        struct_Ll.cc = simd_or(tmp61, struct_Ll.cc);
        bytetest_c4 = simd_and(tmp13, tmp40);
        bytetest_95_95 = simd_and(tmp59, tmp21);
        tmp62 = simd_and(tmp44, bytetest_95_95);
        struct_Ll.cc = simd_or(tmp62, struct_Ll.cc);
        bytetest_c4 = simd_and(tmp13, tmp40);
        bytetest_97_97 = simd_and(tmp59, tmp48);
        tmp63 = simd_and(tmp44, bytetest_97_97);
        struct_Ll.cc = simd_or(tmp63, struct_Ll.cc);
        bytetest_c4 = simd_and(tmp13, tmp40);
        bytetest_99_99 = simd_and(tmp59, tmp51);
        tmp64 = simd_and(tmp44, bytetest_99_99);
        struct_Ll.cc = simd_or(tmp64, struct_Ll.cc);
        bytetest_c4 = simd_and(tmp13, tmp40);
        bytetest_9b_9b = simd_and(tmp59, tmp53);
        tmp65 = simd_and(tmp44, bytetest_9b_9b);
        struct_Ll.cc = simd_or(tmp65, struct_Ll.cc);
        bytetest_c4 = simd_and(tmp13, tmp40);
        bytetest_9d_9d = simd_and(tmp59, tmp55);
        tmp66 = simd_and(tmp44, bytetest_9d_9d);
        struct_Ll.cc = simd_or(tmp66, struct_Ll.cc);
        bytetest_c4 = simd_and(tmp13, tmp40);
        bytetest_9f_9f = simd_and(tmp59, tmp33);
        tmp67 = simd_and(tmp44, bytetest_9f_9f);
        struct_Ll.cc = simd_or(tmp67, struct_Ll.cc);
        bytetest_c4 = simd_and(tmp13, tmp40);
        tmp68 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp69 = simd_and(tmp16, tmp68);
        bytetest_a1_a1 = simd_and(tmp69, tmp42);
        tmp70 = simd_and(tmp44, bytetest_a1_a1);
        struct_Ll.cc = simd_or(tmp70, struct_Ll.cc);
        bytetest_c4 = simd_and(tmp13, tmp40);
        bytetest_a3_a3 = simd_and(tmp69, tmp27);
        tmp71 = simd_and(tmp44, bytetest_a3_a3);
        struct_Ll.cc = simd_or(tmp71, struct_Ll.cc);
        bytetest_c4 = simd_and(tmp13, tmp40);
        bytetest_a5_a5 = simd_and(tmp69, tmp21);
        tmp72 = simd_and(tmp44, bytetest_a5_a5);
        struct_Ll.cc = simd_or(tmp72, struct_Ll.cc);
        bytetest_c4 = simd_and(tmp13, tmp40);
        bytetest_a7_a7 = simd_and(tmp69, tmp48);
        tmp73 = simd_and(tmp44, bytetest_a7_a7);
        struct_Ll.cc = simd_or(tmp73, struct_Ll.cc);
        bytetest_c4 = simd_and(tmp13, tmp40);
        bytetest_a9_a9 = simd_and(tmp69, tmp51);
        tmp74 = simd_and(tmp44, bytetest_a9_a9);
        struct_Ll.cc = simd_or(tmp74, struct_Ll.cc);
        bytetest_c4 = simd_and(tmp13, tmp40);
        bytetest_ab_ab = simd_and(tmp69, tmp53);
        tmp75 = simd_and(tmp44, bytetest_ab_ab);
        struct_Ll.cc = simd_or(tmp75, struct_Ll.cc);
        bytetest_c4 = simd_and(tmp13, tmp40);
        bytetest_ad_ad = simd_and(tmp69, tmp55);
        tmp76 = simd_and(tmp44, bytetest_ad_ad);
        struct_Ll.cc = simd_or(tmp76, struct_Ll.cc);
        bytetest_c4 = simd_and(tmp13, tmp40);
        bytetest_af_af = simd_and(tmp69, tmp33);
        tmp77 = simd_and(tmp44, bytetest_af_af);
        struct_Ll.cc = simd_or(tmp77, struct_Ll.cc);
        bytetest_c4 = simd_and(tmp13, tmp40);
        bytetest_b1_b1 = simd_and(tmp18, tmp42);
        tmp78 = simd_and(tmp44, bytetest_b1_b1);
        struct_Ll.cc = simd_or(tmp78, struct_Ll.cc);
        bytetest_c4 = simd_and(tmp13, tmp40);
        bytetest_b3_b3 = simd_and(tmp18, tmp27);
        tmp79 = simd_and(tmp44, bytetest_b3_b3);
        struct_Ll.cc = simd_or(tmp79, struct_Ll.cc);
        bytetest_c4 = simd_and(tmp13, tmp40);
        bytetest_b5_b5 = simd_and(tmp18, tmp21);
        tmp80 = simd_and(tmp44, bytetest_b5_b5);
        struct_Ll.cc = simd_or(tmp80, struct_Ll.cc);
        bytetest_c4 = simd_and(tmp13, tmp40);
        tmp81 = simd_or(basis_bits.bit_5, tmp8);
        tmp82 = simd_not(tmp81);
        tmp83 = simd_or(simd_and(basis_bits.bit_4, tmp82), simd_andc(tmp28, basis_bits.bit_4));
        bytetest_b7_b8 = simd_and(tmp18, tmp83);
        tmp84 = simd_and(tmp44, bytetest_b7_b8);
        struct_Ll.cc = simd_or(tmp84, struct_Ll.cc);
        bytetest_c4 = simd_and(tmp13, tmp40);
        tmp85 = simd_and(tmp50, tmp14);
        bytetest_ba_ba = simd_and(tmp18, tmp85);
        tmp86 = simd_and(tmp44, bytetest_ba_ba);
        struct_Ll.cc = simd_or(tmp86, struct_Ll.cc);
        bytetest_c4 = simd_and(tmp13, tmp40);
        tmp87 = simd_andc(tmp32, tmp8);
        bytetest_bc_bc = simd_and(tmp18, tmp87);
        tmp88 = simd_and(tmp44, bytetest_bc_bc);
        struct_Ll.cc = simd_or(tmp88, struct_Ll.cc);
        bytetest_c4 = simd_and(tmp13, tmp40);
        tmp89 = simd_and(tmp32, tmp14);
        bytetest_be_be = simd_and(tmp18, tmp89);
        tmp90 = simd_and(tmp44, bytetest_be_be);
        struct_Ll.cc = simd_or(tmp90, struct_Ll.cc);
        bytetest_c5 = simd_and(tmp13, tmp21);
        bytetest_80_80 = simd_andc(tmp41, tmp9);
        tmp91 = simd_and(tmp23, bytetest_c5);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp91, carryQ.get_carry_in(4), tmp92));
        tmp93 = simd_and(tmp92, bytetest_80_80);
        struct_Ll.cc = simd_or(tmp93, struct_Ll.cc);
        bytetest_c5 = simd_and(tmp13, tmp21);
        bytetest_82_82 = simd_and(tmp41, tmp15);
        tmp94 = simd_and(tmp92, bytetest_82_82);
        struct_Ll.cc = simd_or(tmp94, struct_Ll.cc);
        bytetest_c5 = simd_and(tmp13, tmp21);
        bytetest_84_84 = simd_and(tmp41, tmp40);
        tmp95 = simd_and(tmp92, bytetest_84_84);
        struct_Ll.cc = simd_or(tmp95, struct_Ll.cc);
        bytetest_c5 = simd_and(tmp13, tmp21);
        tmp96 = simd_and(tmp19, tmp14);
        bytetest_86_86 = simd_and(tmp41, tmp96);
        tmp97 = simd_and(tmp92, bytetest_86_86);
        struct_Ll.cc = simd_or(tmp97, struct_Ll.cc);
        bytetest_c5 = simd_and(tmp13, tmp21);
        tmp98 = simd_andc(tmp50, basis_bits.bit_6);
        bytetest_88_89 = simd_and(tmp41, tmp98);
        tmp99 = simd_and(tmp92, bytetest_88_89);
        struct_Ll.cc = simd_or(tmp99, struct_Ll.cc);
        bytetest_c5 = simd_and(tmp13, tmp21);
        bytetest_8b_8b = simd_and(tmp41, tmp53);
        tmp100 = simd_and(tmp92, bytetest_8b_8b);
        struct_Ll.cc = simd_or(tmp100, struct_Ll.cc);
        bytetest_c5 = simd_and(tmp13, tmp21);
        bytetest_8d_8d = simd_and(tmp41, tmp55);
        tmp101 = simd_and(tmp92, bytetest_8d_8d);
        struct_Ll.cc = simd_or(tmp101, struct_Ll.cc);
        bytetest_c5 = simd_and(tmp13, tmp21);
        bytetest_8f_8f = simd_and(tmp41, tmp33);
        tmp102 = simd_and(tmp92, bytetest_8f_8f);
        struct_Ll.cc = simd_or(tmp102, struct_Ll.cc);
        bytetest_c5 = simd_and(tmp13, tmp21);
        bytetest_91_91 = simd_and(tmp59, tmp42);
        tmp103 = simd_and(tmp92, bytetest_91_91);
        struct_Ll.cc = simd_or(tmp103, struct_Ll.cc);
        bytetest_c5 = simd_and(tmp13, tmp21);
        bytetest_93_93 = simd_and(tmp59, tmp27);
        tmp104 = simd_and(tmp92, bytetest_93_93);
        struct_Ll.cc = simd_or(tmp104, struct_Ll.cc);
        bytetest_c5 = simd_and(tmp13, tmp21);
        bytetest_95_95 = simd_and(tmp59, tmp21);
        tmp105 = simd_and(tmp92, bytetest_95_95);
        struct_Ll.cc = simd_or(tmp105, struct_Ll.cc);
        bytetest_c5 = simd_and(tmp13, tmp21);
        bytetest_97_97 = simd_and(tmp59, tmp48);
        tmp106 = simd_and(tmp92, bytetest_97_97);
        struct_Ll.cc = simd_or(tmp106, struct_Ll.cc);
        bytetest_c5 = simd_and(tmp13, tmp21);
        bytetest_99_99 = simd_and(tmp59, tmp51);
        tmp107 = simd_and(tmp92, bytetest_99_99);
        struct_Ll.cc = simd_or(tmp107, struct_Ll.cc);
        bytetest_c5 = simd_and(tmp13, tmp21);
        bytetest_9b_9b = simd_and(tmp59, tmp53);
        tmp108 = simd_and(tmp92, bytetest_9b_9b);
        struct_Ll.cc = simd_or(tmp108, struct_Ll.cc);
        bytetest_c5 = simd_and(tmp13, tmp21);
        bytetest_9d_9d = simd_and(tmp59, tmp55);
        tmp109 = simd_and(tmp92, bytetest_9d_9d);
        struct_Ll.cc = simd_or(tmp109, struct_Ll.cc);
        bytetest_c5 = simd_and(tmp13, tmp21);
        bytetest_9f_9f = simd_and(tmp59, tmp33);
        tmp110 = simd_and(tmp92, bytetest_9f_9f);
        struct_Ll.cc = simd_or(tmp110, struct_Ll.cc);
        bytetest_c5 = simd_and(tmp13, tmp21);
        bytetest_a1_a1 = simd_and(tmp69, tmp42);
        tmp111 = simd_and(tmp92, bytetest_a1_a1);
        struct_Ll.cc = simd_or(tmp111, struct_Ll.cc);
        bytetest_c5 = simd_and(tmp13, tmp21);
        bytetest_a3_a3 = simd_and(tmp69, tmp27);
        tmp112 = simd_and(tmp92, bytetest_a3_a3);
        struct_Ll.cc = simd_or(tmp112, struct_Ll.cc);
        bytetest_c5 = simd_and(tmp13, tmp21);
        bytetest_a5_a5 = simd_and(tmp69, tmp21);
        tmp113 = simd_and(tmp92, bytetest_a5_a5);
        struct_Ll.cc = simd_or(tmp113, struct_Ll.cc);
        bytetest_c5 = simd_and(tmp13, tmp21);
        bytetest_a7_a7 = simd_and(tmp69, tmp48);
        tmp114 = simd_and(tmp92, bytetest_a7_a7);
        struct_Ll.cc = simd_or(tmp114, struct_Ll.cc);
        bytetest_c5 = simd_and(tmp13, tmp21);
        bytetest_a9_a9 = simd_and(tmp69, tmp51);
        tmp115 = simd_and(tmp92, bytetest_a9_a9);
        struct_Ll.cc = simd_or(tmp115, struct_Ll.cc);
        bytetest_c5 = simd_and(tmp13, tmp21);
        bytetest_ab_ab = simd_and(tmp69, tmp53);
        tmp116 = simd_and(tmp92, bytetest_ab_ab);
        struct_Ll.cc = simd_or(tmp116, struct_Ll.cc);
        bytetest_c5 = simd_and(tmp13, tmp21);
        bytetest_ad_ad = simd_and(tmp69, tmp55);
        tmp117 = simd_and(tmp92, bytetest_ad_ad);
        struct_Ll.cc = simd_or(tmp117, struct_Ll.cc);
        bytetest_c5 = simd_and(tmp13, tmp21);
        bytetest_af_af = simd_and(tmp69, tmp33);
        tmp118 = simd_and(tmp92, bytetest_af_af);
        struct_Ll.cc = simd_or(tmp118, struct_Ll.cc);
        bytetest_c5 = simd_and(tmp13, tmp21);
        bytetest_b1_b1 = simd_and(tmp18, tmp42);
        tmp119 = simd_and(tmp92, bytetest_b1_b1);
        struct_Ll.cc = simd_or(tmp119, struct_Ll.cc);
        bytetest_c5 = simd_and(tmp13, tmp21);
        bytetest_b3_b3 = simd_and(tmp18, tmp27);
        tmp120 = simd_and(tmp92, bytetest_b3_b3);
        struct_Ll.cc = simd_or(tmp120, struct_Ll.cc);
        bytetest_c5 = simd_and(tmp13, tmp21);
        bytetest_b5_b5 = simd_and(tmp18, tmp21);
        tmp121 = simd_and(tmp92, bytetest_b5_b5);
        struct_Ll.cc = simd_or(tmp121, struct_Ll.cc);
        bytetest_c5 = simd_and(tmp13, tmp21);
        bytetest_b7_b7 = simd_and(tmp18, tmp48);
        tmp122 = simd_and(tmp92, bytetest_b7_b7);
        struct_Ll.cc = simd_or(tmp122, struct_Ll.cc);
        bytetest_c5 = simd_and(tmp13, tmp21);
        bytetest_ba_ba = simd_and(tmp18, tmp85);
        tmp123 = simd_and(tmp92, bytetest_ba_ba);
        struct_Ll.cc = simd_or(tmp123, struct_Ll.cc);
        bytetest_c5 = simd_and(tmp13, tmp21);
        bytetest_bc_bc = simd_and(tmp18, tmp87);
        tmp124 = simd_and(tmp92, bytetest_bc_bc);
        struct_Ll.cc = simd_or(tmp124, struct_Ll.cc);
        bytetest_c6 = simd_and(tmp13, tmp96);
        bytetest_80_80 = simd_andc(tmp41, tmp9);
        tmp125 = simd_and(tmp23, bytetest_c6);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp125, carryQ.get_carry_in(5), tmp126));
        tmp127 = simd_and(tmp126, bytetest_80_80);
        bytetest_c5 = simd_and(tmp13, tmp21);
        tmp128 = simd_and(tmp32, basis_bits.bit_6);
        bytetest_be_bf = simd_and(tmp18, tmp128);
        tmp129 = simd_and(tmp92, bytetest_be_bf);
        tmp130 = simd_or(tmp129, tmp127);
        struct_Ll.cc = simd_or(tmp130, struct_Ll.cc);
        bytetest_c6 = simd_and(tmp13, tmp96);
        bytetest_83_83 = simd_and(tmp41, tmp27);
        tmp131 = simd_and(tmp126, bytetest_83_83);
        struct_Ll.cc = simd_or(tmp131, struct_Ll.cc);
        bytetest_c6 = simd_and(tmp13, tmp96);
        bytetest_85_85 = simd_and(tmp41, tmp21);
        tmp132 = simd_and(tmp126, bytetest_85_85);
        struct_Ll.cc = simd_or(tmp132, struct_Ll.cc);
        bytetest_c6 = simd_and(tmp13, tmp96);
        tmp133 = simd_andc(tmp50, tmp8);
        bytetest_88_88 = simd_and(tmp41, tmp133);
        tmp134 = simd_and(tmp126, bytetest_88_88);
        struct_Ll.cc = simd_or(tmp134, struct_Ll.cc);
        bytetest_c6 = simd_and(tmp13, tmp96);
        tmp135 = simd_andc(tmp32, basis_bits.bit_6);
        bytetest_8c_8d = simd_and(tmp41, tmp135);
        tmp136 = simd_and(tmp126, bytetest_8c_8d);
        struct_Ll.cc = simd_or(tmp136, struct_Ll.cc);
        bytetest_c6 = simd_and(tmp13, tmp96);
        bytetest_92_92 = simd_and(tmp59, tmp15);
        tmp137 = simd_and(tmp126, bytetest_92_92);
        struct_Ll.cc = simd_or(tmp137, struct_Ll.cc);
        bytetest_c6 = simd_and(tmp13, tmp96);
        bytetest_95_95 = simd_and(tmp59, tmp21);
        tmp138 = simd_and(tmp126, bytetest_95_95);
        struct_Ll.cc = simd_or(tmp138, struct_Ll.cc);
        bytetest_c6 = simd_and(tmp13, tmp96);
        tmp139 = simd_and(tmp59, tmp50);
        bytetest_99_9b = simd_and(tmp139, tmp8);
        tmp140 = simd_and(tmp126, bytetest_99_9b);
        struct_Ll.cc = simd_or(tmp140, struct_Ll.cc);
        bytetest_c6 = simd_and(tmp13, tmp96);
        bytetest_9e_9e = simd_and(tmp59, tmp89);
        tmp141 = simd_and(tmp126, bytetest_9e_9e);
        struct_Ll.cc = simd_or(tmp141, struct_Ll.cc);
        bytetest_c6 = simd_and(tmp13, tmp96);
        bytetest_a1_a1 = simd_and(tmp69, tmp42);
        tmp142 = simd_and(tmp126, bytetest_a1_a1);
        struct_Ll.cc = simd_or(tmp142, struct_Ll.cc);
        bytetest_c6 = simd_and(tmp13, tmp96);
        bytetest_a3_a3 = simd_and(tmp69, tmp27);
        tmp143 = simd_and(tmp126, bytetest_a3_a3);
        struct_Ll.cc = simd_or(tmp143, struct_Ll.cc);
        bytetest_c6 = simd_and(tmp13, tmp96);
        bytetest_a5_a5 = simd_and(tmp69, tmp21);
        tmp144 = simd_and(tmp126, bytetest_a5_a5);
        struct_Ll.cc = simd_or(tmp144, struct_Ll.cc);
        bytetest_c6 = simd_and(tmp13, tmp96);
        bytetest_a8_a8 = simd_and(tmp69, tmp133);
        tmp145 = simd_and(tmp126, bytetest_a8_a8);
        struct_Ll.cc = simd_or(tmp145, struct_Ll.cc);
        bytetest_c6 = simd_and(tmp13, tmp96);
        tmp146 = simd_and(tmp50, basis_bits.bit_6);
        bytetest_aa_ab = simd_and(tmp69, tmp146);
        tmp147 = simd_and(tmp126, bytetest_aa_ab);
        struct_Ll.cc = simd_or(tmp147, struct_Ll.cc);
        bytetest_c6 = simd_and(tmp13, tmp96);
        bytetest_ad_ad = simd_and(tmp69, tmp55);
        tmp148 = simd_and(tmp126, bytetest_ad_ad);
        struct_Ll.cc = simd_or(tmp148, struct_Ll.cc);
        bytetest_c6 = simd_and(tmp13, tmp96);
        bytetest_b0_b0 = simd_andc(tmp18, tmp9);
        tmp149 = simd_and(tmp126, bytetest_b0_b0);
        struct_Ll.cc = simd_or(tmp149, struct_Ll.cc);
        bytetest_c6 = simd_and(tmp13, tmp96);
        bytetest_b4_b4 = simd_and(tmp18, tmp40);
        tmp150 = simd_and(tmp126, bytetest_b4_b4);
        struct_Ll.cc = simd_or(tmp150, struct_Ll.cc);
        bytetest_c6 = simd_and(tmp13, tmp96);
        bytetest_b6_b6 = simd_and(tmp18, tmp96);
        tmp151 = simd_and(tmp126, bytetest_b6_b6);
        struct_Ll.cc = simd_or(tmp151, struct_Ll.cc);
        bytetest_c6 = simd_and(tmp13, tmp96);
        tmp152 = simd_and(tmp18, tmp50);
        tmp153 = simd_not(basis_bits.bit_7);
        tmp154 = simd_or(simd_and(basis_bits.bit_6, tmp153), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
        bytetest_b9_ba = simd_and(tmp152, tmp154);
        tmp155 = simd_and(tmp126, bytetest_b9_ba);
        struct_Ll.cc = simd_or(tmp155, struct_Ll.cc);
        bytetest_c6 = simd_and(tmp13, tmp96);
        tmp156 = simd_and(tmp18, tmp32);
        bytetest_bd_bf = simd_and(tmp156, tmp8);
        tmp157 = simd_and(tmp126, bytetest_bd_bf);
        struct_Ll.cc = simd_or(tmp157, struct_Ll.cc);
        bytetest_c7 = simd_and(tmp13, tmp48);
        bytetest_86_86 = simd_and(tmp41, tmp96);
        tmp158 = simd_and(tmp23, bytetest_c7);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp158, carryQ.get_carry_in(6), tmp159));
        tmp160 = simd_and(tmp159, bytetest_86_86);
        struct_Ll.cc = simd_or(tmp160, struct_Ll.cc);
        bytetest_c7 = simd_and(tmp13, tmp48);
        bytetest_89_89 = simd_and(tmp41, tmp51);
        tmp161 = simd_and(tmp159, bytetest_89_89);
        struct_Ll.cc = simd_or(tmp161, struct_Ll.cc);
        bytetest_c7 = simd_and(tmp13, tmp48);
        bytetest_8c_8c = simd_and(tmp41, tmp87);
        tmp162 = simd_and(tmp159, bytetest_8c_8c);
        struct_Ll.cc = simd_or(tmp162, struct_Ll.cc);
        bytetest_c7 = simd_and(tmp13, tmp48);
        bytetest_8e_8e = simd_and(tmp41, tmp89);
        tmp163 = simd_and(tmp159, bytetest_8e_8e);
        struct_Ll.cc = simd_or(tmp163, struct_Ll.cc);
        bytetest_c7 = simd_and(tmp13, tmp48);
        bytetest_90_90 = simd_andc(tmp59, tmp9);
        tmp164 = simd_and(tmp159, bytetest_90_90);
        struct_Ll.cc = simd_or(tmp164, struct_Ll.cc);
        bytetest_c7 = simd_and(tmp13, tmp48);
        bytetest_92_92 = simd_and(tmp59, tmp15);
        tmp165 = simd_and(tmp159, bytetest_92_92);
        struct_Ll.cc = simd_or(tmp165, struct_Ll.cc);
        bytetest_c7 = simd_and(tmp13, tmp48);
        bytetest_94_94 = simd_and(tmp59, tmp40);
        tmp166 = simd_and(tmp159, bytetest_94_94);
        struct_Ll.cc = simd_or(tmp166, struct_Ll.cc);
        bytetest_c7 = simd_and(tmp13, tmp48);
        bytetest_96_96 = simd_and(tmp59, tmp96);
        tmp167 = simd_and(tmp159, bytetest_96_96);
        struct_Ll.cc = simd_or(tmp167, struct_Ll.cc);
        bytetest_c7 = simd_and(tmp13, tmp48);
        bytetest_98_98 = simd_and(tmp59, tmp133);
        tmp168 = simd_and(tmp159, bytetest_98_98);
        struct_Ll.cc = simd_or(tmp168, struct_Ll.cc);
        bytetest_c7 = simd_and(tmp13, tmp48);
        bytetest_9a_9a = simd_and(tmp59, tmp85);
        tmp169 = simd_and(tmp159, bytetest_9a_9a);
        struct_Ll.cc = simd_or(tmp169, struct_Ll.cc);
        bytetest_c7 = simd_and(tmp13, tmp48);
        bytetest_9c_9d = simd_and(tmp59, tmp135);
        tmp170 = simd_and(tmp159, bytetest_9c_9d);
        struct_Ll.cc = simd_or(tmp170, struct_Ll.cc);
        bytetest_c7 = simd_and(tmp13, tmp48);
        bytetest_9f_9f = simd_and(tmp59, tmp33);
        tmp171 = simd_and(tmp159, bytetest_9f_9f);
        struct_Ll.cc = simd_or(tmp171, struct_Ll.cc);
        bytetest_c7 = simd_and(tmp13, tmp48);
        bytetest_a1_a1 = simd_and(tmp69, tmp42);
        tmp172 = simd_and(tmp159, bytetest_a1_a1);
        struct_Ll.cc = simd_or(tmp172, struct_Ll.cc);
        bytetest_c7 = simd_and(tmp13, tmp48);
        bytetest_a3_a3 = simd_and(tmp69, tmp27);
        tmp173 = simd_and(tmp159, bytetest_a3_a3);
        struct_Ll.cc = simd_or(tmp173, struct_Ll.cc);
        bytetest_c7 = simd_and(tmp13, tmp48);
        bytetest_a5_a5 = simd_and(tmp69, tmp21);
        tmp174 = simd_and(tmp159, bytetest_a5_a5);
        struct_Ll.cc = simd_or(tmp174, struct_Ll.cc);
        bytetest_c7 = simd_and(tmp13, tmp48);
        bytetest_a7_a7 = simd_and(tmp69, tmp48);
        tmp175 = simd_and(tmp159, bytetest_a7_a7);
        struct_Ll.cc = simd_or(tmp175, struct_Ll.cc);
        bytetest_c7 = simd_and(tmp13, tmp48);
        bytetest_a9_a9 = simd_and(tmp69, tmp51);
        tmp176 = simd_and(tmp159, bytetest_a9_a9);
        struct_Ll.cc = simd_or(tmp176, struct_Ll.cc);
        bytetest_c7 = simd_and(tmp13, tmp48);
        bytetest_ab_ab = simd_and(tmp69, tmp53);
        tmp177 = simd_and(tmp159, bytetest_ab_ab);
        struct_Ll.cc = simd_or(tmp177, struct_Ll.cc);
        bytetest_c7 = simd_and(tmp13, tmp48);
        bytetest_ad_ad = simd_and(tmp69, tmp55);
        tmp178 = simd_and(tmp159, bytetest_ad_ad);
        struct_Ll.cc = simd_or(tmp178, struct_Ll.cc);
        bytetest_c7 = simd_and(tmp13, tmp48);
        tmp179 = simd_and(tmp16, basis_bits.bit_2);
        tmp180 = simd_not(tmp9);
        tmp181 = simd_or(simd_and(basis_bits.bit_3, tmp180), simd_andc(tmp33, basis_bits.bit_3));
        bytetest_af_b0 = simd_and(tmp179, tmp181);
        tmp182 = simd_and(tmp159, bytetest_af_b0);
        struct_Ll.cc = simd_or(tmp182, struct_Ll.cc);
        bytetest_c7 = simd_and(tmp13, tmp48);
        bytetest_b3_b3 = simd_and(tmp18, tmp27);
        tmp183 = simd_and(tmp159, bytetest_b3_b3);
        struct_Ll.cc = simd_or(tmp183, struct_Ll.cc);
        bytetest_c7 = simd_and(tmp13, tmp48);
        bytetest_b5_b5 = simd_and(tmp18, tmp21);
        tmp184 = simd_and(tmp159, bytetest_b5_b5);
        struct_Ll.cc = simd_or(tmp184, struct_Ll.cc);
        bytetest_c7 = simd_and(tmp13, tmp48);
        bytetest_b9_b9 = simd_and(tmp18, tmp51);
        tmp185 = simd_and(tmp159, bytetest_b9_b9);
        struct_Ll.cc = simd_or(tmp185, struct_Ll.cc);
        bytetest_c7 = simd_and(tmp13, tmp48);
        bytetest_bb_bb = simd_and(tmp18, tmp53);
        tmp186 = simd_and(tmp159, bytetest_bb_bb);
        struct_Ll.cc = simd_or(tmp186, struct_Ll.cc);
        bytetest_c7 = simd_and(tmp13, tmp48);
        bytetest_bd_bd = simd_and(tmp18, tmp55);
        tmp187 = simd_and(tmp159, bytetest_bd_bd);
        struct_Ll.cc = simd_or(tmp187, struct_Ll.cc);
        bytetest_c7 = simd_and(tmp13, tmp48);
        bytetest_bf_bf = simd_and(tmp18, tmp33);
        tmp188 = simd_and(tmp159, bytetest_bf_bf);
        struct_Ll.cc = simd_or(tmp188, struct_Ll.cc);
        bytetest_c8 = simd_and(tmp13, tmp133);
        bytetest_81_81 = simd_and(tmp41, tmp42);
        tmp189 = simd_and(tmp23, bytetest_c8);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp189, carryQ.get_carry_in(7), tmp190));
        tmp191 = simd_and(tmp190, bytetest_81_81);
        struct_Ll.cc = simd_or(tmp191, struct_Ll.cc);
        bytetest_c8 = simd_and(tmp13, tmp133);
        bytetest_83_83 = simd_and(tmp41, tmp27);
        tmp192 = simd_and(tmp190, bytetest_83_83);
        struct_Ll.cc = simd_or(tmp192, struct_Ll.cc);
        bytetest_c8 = simd_and(tmp13, tmp133);
        bytetest_85_85 = simd_and(tmp41, tmp21);
        tmp193 = simd_and(tmp190, bytetest_85_85);
        struct_Ll.cc = simd_or(tmp193, struct_Ll.cc);
        bytetest_c8 = simd_and(tmp13, tmp133);
        bytetest_87_87 = simd_and(tmp41, tmp48);
        tmp194 = simd_and(tmp190, bytetest_87_87);
        struct_Ll.cc = simd_or(tmp194, struct_Ll.cc);
        bytetest_c8 = simd_and(tmp13, tmp133);
        bytetest_89_89 = simd_and(tmp41, tmp51);
        tmp195 = simd_and(tmp190, bytetest_89_89);
        struct_Ll.cc = simd_or(tmp195, struct_Ll.cc);
        bytetest_c8 = simd_and(tmp13, tmp133);
        bytetest_8b_8b = simd_and(tmp41, tmp53);
        tmp196 = simd_and(tmp190, bytetest_8b_8b);
        struct_Ll.cc = simd_or(tmp196, struct_Ll.cc);
        bytetest_c8 = simd_and(tmp13, tmp133);
        bytetest_8d_8d = simd_and(tmp41, tmp55);
        tmp197 = simd_and(tmp190, bytetest_8d_8d);
        struct_Ll.cc = simd_or(tmp197, struct_Ll.cc);
        bytetest_c8 = simd_and(tmp13, tmp133);
        bytetest_8f_8f = simd_and(tmp41, tmp33);
        tmp198 = simd_and(tmp190, bytetest_8f_8f);
        struct_Ll.cc = simd_or(tmp198, struct_Ll.cc);
        bytetest_c8 = simd_and(tmp13, tmp133);
        bytetest_91_91 = simd_and(tmp59, tmp42);
        tmp199 = simd_and(tmp190, bytetest_91_91);
        struct_Ll.cc = simd_or(tmp199, struct_Ll.cc);
        bytetest_c8 = simd_and(tmp13, tmp133);
        bytetest_93_93 = simd_and(tmp59, tmp27);
        tmp200 = simd_and(tmp190, bytetest_93_93);
        struct_Ll.cc = simd_or(tmp200, struct_Ll.cc);
        bytetest_c8 = simd_and(tmp13, tmp133);
        bytetest_95_95 = simd_and(tmp59, tmp21);
        tmp201 = simd_and(tmp190, bytetest_95_95);
        struct_Ll.cc = simd_or(tmp201, struct_Ll.cc);
        bytetest_c8 = simd_and(tmp13, tmp133);
        bytetest_97_97 = simd_and(tmp59, tmp48);
        tmp202 = simd_and(tmp190, bytetest_97_97);
        struct_Ll.cc = simd_or(tmp202, struct_Ll.cc);
        bytetest_c8 = simd_and(tmp13, tmp133);
        bytetest_99_99 = simd_and(tmp59, tmp51);
        tmp203 = simd_and(tmp190, bytetest_99_99);
        struct_Ll.cc = simd_or(tmp203, struct_Ll.cc);
        bytetest_c8 = simd_and(tmp13, tmp133);
        bytetest_9b_9b = simd_and(tmp59, tmp53);
        tmp204 = simd_and(tmp190, bytetest_9b_9b);
        struct_Ll.cc = simd_or(tmp204, struct_Ll.cc);
        bytetest_c8 = simd_and(tmp13, tmp133);
        bytetest_9d_9d = simd_and(tmp59, tmp55);
        tmp205 = simd_and(tmp190, bytetest_9d_9d);
        struct_Ll.cc = simd_or(tmp205, struct_Ll.cc);
        bytetest_c8 = simd_and(tmp13, tmp133);
        bytetest_9f_9f = simd_and(tmp59, tmp33);
        tmp206 = simd_and(tmp190, bytetest_9f_9f);
        struct_Ll.cc = simd_or(tmp206, struct_Ll.cc);
        bytetest_c8 = simd_and(tmp13, tmp133);
        bytetest_a1_a1 = simd_and(tmp69, tmp42);
        tmp207 = simd_and(tmp190, bytetest_a1_a1);
        struct_Ll.cc = simd_or(tmp207, struct_Ll.cc);
        bytetest_c8 = simd_and(tmp13, tmp133);
        bytetest_a3_a3 = simd_and(tmp69, tmp27);
        tmp208 = simd_and(tmp190, bytetest_a3_a3);
        struct_Ll.cc = simd_or(tmp208, struct_Ll.cc);
        bytetest_c8 = simd_and(tmp13, tmp133);
        bytetest_a5_a5 = simd_and(tmp69, tmp21);
        tmp209 = simd_and(tmp190, bytetest_a5_a5);
        struct_Ll.cc = simd_or(tmp209, struct_Ll.cc);
        bytetest_c8 = simd_and(tmp13, tmp133);
        bytetest_a7_a7 = simd_and(tmp69, tmp48);
        tmp210 = simd_and(tmp190, bytetest_a7_a7);
        struct_Ll.cc = simd_or(tmp210, struct_Ll.cc);
        bytetest_c8 = simd_and(tmp13, tmp133);
        bytetest_a9_a9 = simd_and(tmp69, tmp51);
        tmp211 = simd_and(tmp190, bytetest_a9_a9);
        struct_Ll.cc = simd_or(tmp211, struct_Ll.cc);
        bytetest_c8 = simd_and(tmp13, tmp133);
        bytetest_ab_ab = simd_and(tmp69, tmp53);
        tmp212 = simd_and(tmp190, bytetest_ab_ab);
        struct_Ll.cc = simd_or(tmp212, struct_Ll.cc);
        bytetest_c8 = simd_and(tmp13, tmp133);
        bytetest_ad_ad = simd_and(tmp69, tmp55);
        tmp213 = simd_and(tmp190, bytetest_ad_ad);
        struct_Ll.cc = simd_or(tmp213, struct_Ll.cc);
        bytetest_c8 = simd_and(tmp13, tmp133);
        bytetest_af_af = simd_and(tmp69, tmp33);
        tmp214 = simd_and(tmp190, bytetest_af_af);
        struct_Ll.cc = simd_or(tmp214, struct_Ll.cc);
        bytetest_c8 = simd_and(tmp13, tmp133);
        bytetest_b1_b1 = simd_and(tmp18, tmp42);
        tmp215 = simd_and(tmp190, bytetest_b1_b1);
        struct_Ll.cc = simd_or(tmp215, struct_Ll.cc);
        bytetest_c8 = simd_and(tmp13, tmp133);
        tmp216 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
        tmp217 = simd_not(tmp216);
        tmp218 = simd_or(simd_and(basis_bits.bit_4, tmp217), simd_andc(tmp4, basis_bits.bit_4));
        bytetest_b3_b9 = simd_and(tmp18, tmp218);
        tmp219 = simd_and(tmp190, bytetest_b3_b9);
        struct_Ll.cc = simd_or(tmp219, struct_Ll.cc);
        bytetest_c8 = simd_and(tmp13, tmp133);
        bytetest_bc_bc = simd_and(tmp18, tmp87);
        tmp220 = simd_and(tmp190, bytetest_bc_bc);
        struct_Ll.cc = simd_or(tmp220, struct_Ll.cc);
        bytetest_c9 = simd_and(tmp13, tmp51);
        bytetest_80_80 = simd_andc(tmp41, tmp9);
        tmp221 = simd_and(tmp23, bytetest_c9);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(tmp221, carryQ.get_carry_in(8), tmp222));
        tmp223 = simd_and(tmp222, bytetest_80_80);
        bytetest_c8 = simd_and(tmp13, tmp133);
        bytetest_bf_bf = simd_and(tmp18, tmp33);
        tmp224 = simd_and(tmp190, bytetest_bf_bf);
        tmp225 = simd_or(tmp224, tmp223);
        struct_Ll.cc = simd_or(tmp225, struct_Ll.cc);
        bytetest_c9 = simd_and(tmp13, tmp51);
        bytetest_82_82 = simd_and(tmp41, tmp15);
        tmp226 = simd_and(tmp222, bytetest_82_82);
        struct_Ll.cc = simd_or(tmp226, struct_Ll.cc);
        bytetest_c9 = simd_and(tmp13, tmp51);
        bytetest_87_87 = simd_and(tmp41, tmp48);
        tmp227 = simd_and(tmp222, bytetest_87_87);
        struct_Ll.cc = simd_or(tmp227, struct_Ll.cc);
        bytetest_c9 = simd_and(tmp13, tmp51);
        bytetest_89_89 = simd_and(tmp41, tmp51);
        tmp228 = simd_and(tmp222, bytetest_89_89);
        struct_Ll.cc = simd_or(tmp228, struct_Ll.cc);
        bytetest_c9 = simd_and(tmp13, tmp51);
        bytetest_8b_8b = simd_and(tmp41, tmp53);
        tmp229 = simd_and(tmp222, bytetest_8b_8b);
        struct_Ll.cc = simd_or(tmp229, struct_Ll.cc);
        bytetest_c9 = simd_and(tmp13, tmp51);
        bytetest_8d_8d = simd_and(tmp41, tmp55);
        tmp230 = simd_and(tmp222, bytetest_8d_8d);
        struct_Ll.cc = simd_or(tmp230, struct_Ll.cc);
        bytetest_ca = simd_and(tmp13, tmp85);
        tmp231 = simd_andc(tmp16, basis_bits.bit_2);
        tmp232 = simd_and(basis_bits.bit_3, tmp7);
        bytetest_80_93 = simd_andc(tmp231, tmp232);
        tmp233 = simd_and(tmp23, bytetest_ca);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(tmp233, carryQ.get_carry_in(9), tmp234));
        tmp235 = simd_and(tmp234, bytetest_80_93);
        bytetest_c9 = simd_and(tmp13, tmp51);
        tmp236 = simd_or(basis_bits.bit_3, tmp33);
        tmp237 = simd_or(basis_bits.bit_2, tmp236);
        bytetest_8f_bf = simd_and(tmp16, tmp237);
        tmp238 = simd_and(tmp222, bytetest_8f_bf);
        tmp239 = simd_or(tmp238, tmp235);
        struct_Ll.cc = simd_or(tmp239, struct_Ll.cc);
        bytetest_ca = simd_and(tmp13, tmp85);
        tmp240 = simd_not(basis_bits.bit_3);
        tmp241 = simd_and(basis_bits.bit_5, tmp8);
        tmp242 = simd_or(basis_bits.bit_4, tmp241);
        tmp243 = simd_and(basis_bits.bit_3, tmp242);
        tmp244 = simd_or(simd_and(basis_bits.bit_2, tmp240), simd_andc(tmp243, basis_bits.bit_2));
        bytetest_95_af = simd_and(tmp16, tmp244);
        tmp245 = simd_and(tmp234, bytetest_95_af);
        struct_Ll.cc = simd_or(tmp245, struct_Ll.cc);
        bytetest_cd = simd_and(tmp13, tmp55);
        bytetest_b1_b1 = simd_and(tmp18, tmp42);
        tmp246 = simd_and(tmp23, bytetest_cd);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(tmp246, carryQ.get_carry_in(10), tmp247));
        tmp248 = simd_and(tmp247, bytetest_b1_b1);
        struct_Ll.cc = simd_or(tmp248, struct_Ll.cc);
        bytetest_cd = simd_and(tmp13, tmp55);
        bytetest_b3_b3 = simd_and(tmp18, tmp27);
        tmp249 = simd_and(tmp247, bytetest_b3_b3);
        struct_Ll.cc = simd_or(tmp249, struct_Ll.cc);
        bytetest_cd = simd_and(tmp13, tmp55);
        bytetest_b7_b7 = simd_and(tmp18, tmp48);
        tmp250 = simd_and(tmp247, bytetest_b7_b7);
        struct_Ll.cc = simd_or(tmp250, struct_Ll.cc);
        bytetest_cd = simd_and(tmp13, tmp55);
        tmp251 = simd_not(basis_bits.bit_6);
        tmp252 = simd_or(simd_and(basis_bits.bit_5, tmp251), simd_andc(tmp3, basis_bits.bit_5));
        bytetest_bb_bd = simd_and(bytetest_b8_bf, tmp252);
        tmp253 = simd_and(tmp247, bytetest_bb_bd);
        struct_Ll.cc = simd_or(tmp253, struct_Ll.cc);
        bytetest_ce = simd_and(tmp13, tmp89);
        bytetest_90_90 = simd_andc(tmp59, tmp9);
        tmp254 = simd_and(tmp23, bytetest_ce);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(tmp254, carryQ.get_carry_in(11), tmp255));
        tmp256 = simd_and(tmp255, bytetest_90_90);
        struct_Ll.cc = simd_or(tmp256, struct_Ll.cc);
        bytetest_cf = simd_and(tmp13, tmp33);
        tmp257 = simd_and(basis_bits.bit_4, tmp28);
        bytetest_80_8e = simd_andc(tmp41, tmp257);
        tmp258 = simd_and(tmp23, bytetest_cf);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(tmp258, carryQ.get_carry_in(12), tmp259));
        tmp260 = simd_and(tmp259, bytetest_80_8e);
        bytetest_ce = simd_and(tmp13, tmp89);
        tmp261 = simd_or(basis_bits.bit_3, tmp32);
        bytetest_ac_bf = simd_and(tmp179, tmp261);
        tmp262 = simd_and(tmp255, bytetest_ac_bf);
        tmp263 = simd_or(tmp262, tmp260);
        struct_Ll.cc = simd_or(tmp263, struct_Ll.cc);
        bytetest_cf = simd_and(tmp13, tmp33);
        tmp264 = simd_or(tmp7, basis_bits.bit_6);
        bytetest_90_91 = simd_andc(tmp59, tmp264);
        tmp265 = simd_and(tmp259, bytetest_90_91);
        struct_Ll.cc = simd_or(tmp265, struct_Ll.cc);
        bytetest_cf = simd_and(tmp13, tmp33);
        tmp266 = simd_and(tmp59, tmp19);
        bytetest_95_97 = simd_and(tmp266, tmp8);
        tmp267 = simd_and(tmp259, bytetest_95_97);
        struct_Ll.cc = simd_or(tmp267, struct_Ll.cc);
        bytetest_cf = simd_and(tmp13, tmp33);
        bytetest_99_99 = simd_and(tmp59, tmp51);
        tmp268 = simd_and(tmp259, bytetest_99_99);
        struct_Ll.cc = simd_or(tmp268, struct_Ll.cc);
        bytetest_cf = simd_and(tmp13, tmp33);
        bytetest_9b_9b = simd_and(tmp59, tmp53);
        tmp269 = simd_and(tmp259, bytetest_9b_9b);
        struct_Ll.cc = simd_or(tmp269, struct_Ll.cc);
        bytetest_cf = simd_and(tmp13, tmp33);
        bytetest_9d_9d = simd_and(tmp59, tmp55);
        tmp270 = simd_and(tmp259, bytetest_9d_9d);
        struct_Ll.cc = simd_or(tmp270, struct_Ll.cc);
        bytetest_cf = simd_and(tmp13, tmp33);
        bytetest_9f_9f = simd_and(tmp59, tmp33);
        tmp271 = simd_and(tmp259, bytetest_9f_9f);
        struct_Ll.cc = simd_or(tmp271, struct_Ll.cc);
        bytetest_cf = simd_and(tmp13, tmp33);
        bytetest_a1_a1 = simd_and(tmp69, tmp42);
        tmp272 = simd_and(tmp259, bytetest_a1_a1);
        struct_Ll.cc = simd_or(tmp272, struct_Ll.cc);
        bytetest_cf = simd_and(tmp13, tmp33);
        bytetest_a3_a3 = simd_and(tmp69, tmp27);
        tmp273 = simd_and(tmp259, bytetest_a3_a3);
        struct_Ll.cc = simd_or(tmp273, struct_Ll.cc);
        bytetest_cf = simd_and(tmp13, tmp33);
        bytetest_a5_a5 = simd_and(tmp69, tmp21);
        tmp274 = simd_and(tmp259, bytetest_a5_a5);
        struct_Ll.cc = simd_or(tmp274, struct_Ll.cc);
        bytetest_cf = simd_and(tmp13, tmp33);
        bytetest_a7_a7 = simd_and(tmp69, tmp48);
        tmp275 = simd_and(tmp259, bytetest_a7_a7);
        struct_Ll.cc = simd_or(tmp275, struct_Ll.cc);
        bytetest_cf = simd_and(tmp13, tmp33);
        bytetest_a9_a9 = simd_and(tmp69, tmp51);
        tmp276 = simd_and(tmp259, bytetest_a9_a9);
        struct_Ll.cc = simd_or(tmp276, struct_Ll.cc);
        bytetest_cf = simd_and(tmp13, tmp33);
        bytetest_ab_ab = simd_and(tmp69, tmp53);
        tmp277 = simd_and(tmp259, bytetest_ab_ab);
        struct_Ll.cc = simd_or(tmp277, struct_Ll.cc);
        bytetest_cf = simd_and(tmp13, tmp33);
        bytetest_ad_ad = simd_and(tmp69, tmp55);
        tmp278 = simd_and(tmp259, bytetest_ad_ad);
        struct_Ll.cc = simd_or(tmp278, struct_Ll.cc);
        bytetest_cf = simd_and(tmp13, tmp33);
        tmp279 = simd_not(tmp7);
        tmp280 = simd_or(simd_and(basis_bits.bit_3, tmp279), simd_andc(tmp33, basis_bits.bit_3));
        bytetest_af_b3 = simd_and(tmp179, tmp280);
        tmp281 = simd_and(tmp259, bytetest_af_b3);
        struct_Ll.cc = simd_or(tmp281, struct_Ll.cc);
        bytetest_cf = simd_and(tmp13, tmp33);
        bytetest_b5_b5 = simd_and(tmp18, tmp21);
        tmp282 = simd_and(tmp259, bytetest_b5_b5);
        struct_Ll.cc = simd_or(tmp282, struct_Ll.cc);
        bytetest_cf = simd_and(tmp13, tmp33);
        bytetest_b8_b8 = simd_and(tmp18, tmp133);
        tmp283 = simd_and(tmp259, bytetest_b8_b8);
        struct_Ll.cc = simd_or(tmp283, struct_Ll.cc);
        bytetest_cf = simd_and(tmp13, tmp33);
        tmp284 = simd_not(tmp8);
        tmp285 = simd_or(simd_and(basis_bits.bit_5, tmp284), simd_andc(tmp3, basis_bits.bit_5));
        bytetest_bb_bc = simd_and(bytetest_b8_bf, tmp285);
        tmp286 = simd_and(tmp259, bytetest_bb_bc);
        struct_Ll.cc = simd_or(tmp286, struct_Ll.cc);
        tmp287 = simd_and(tmp11, tmp58);
        bytetest_d1 = simd_and(tmp287, tmp42);
        bytetest_80_9f = simd_andc(tmp16, basis_bits.bit_2);
        tmp288 = simd_and(tmp23, bytetest_d1);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(tmp288, carryQ.get_carry_in(13), tmp289));
        tmp290 = simd_and(tmp289, bytetest_80_9f);
        bytetest_d0 = simd_andc(tmp287, tmp9);
        bytetest_b0_bf = simd_and(tmp16, tmp17);
        tmp291 = simd_and(tmp23, bytetest_d0);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(tmp291, carryQ.get_carry_in(14), tmp292));
        tmp293 = simd_and(tmp292, bytetest_b0_bf);
        tmp294 = simd_or(tmp293, tmp290);
        struct_Ll.cc = simd_or(tmp294, struct_Ll.cc);
        bytetest_d1 = simd_and(tmp287, tmp42);
        bytetest_a1_a1 = simd_and(tmp69, tmp42);
        tmp295 = simd_and(tmp289, bytetest_a1_a1);
        struct_Ll.cc = simd_or(tmp295, struct_Ll.cc);
        bytetest_d1 = simd_and(tmp287, tmp42);
        bytetest_a3_a3 = simd_and(tmp69, tmp27);
        tmp296 = simd_and(tmp289, bytetest_a3_a3);
        struct_Ll.cc = simd_or(tmp296, struct_Ll.cc);
        bytetest_d1 = simd_and(tmp287, tmp42);
        bytetest_a5_a5 = simd_and(tmp69, tmp21);
        tmp297 = simd_and(tmp289, bytetest_a5_a5);
        struct_Ll.cc = simd_or(tmp297, struct_Ll.cc);
        bytetest_d1 = simd_and(tmp287, tmp42);
        bytetest_a7_a7 = simd_and(tmp69, tmp48);
        tmp298 = simd_and(tmp289, bytetest_a7_a7);
        struct_Ll.cc = simd_or(tmp298, struct_Ll.cc);
        bytetest_d1 = simd_and(tmp287, tmp42);
        bytetest_a9_a9 = simd_and(tmp69, tmp51);
        tmp299 = simd_and(tmp289, bytetest_a9_a9);
        struct_Ll.cc = simd_or(tmp299, struct_Ll.cc);
        bytetest_d1 = simd_and(tmp287, tmp42);
        bytetest_ab_ab = simd_and(tmp69, tmp53);
        tmp300 = simd_and(tmp289, bytetest_ab_ab);
        struct_Ll.cc = simd_or(tmp300, struct_Ll.cc);
        bytetest_d1 = simd_and(tmp287, tmp42);
        bytetest_ad_ad = simd_and(tmp69, tmp55);
        tmp301 = simd_and(tmp289, bytetest_ad_ad);
        struct_Ll.cc = simd_or(tmp301, struct_Ll.cc);
        bytetest_d1 = simd_and(tmp287, tmp42);
        bytetest_af_af = simd_and(tmp69, tmp33);
        tmp302 = simd_and(tmp289, bytetest_af_af);
        struct_Ll.cc = simd_or(tmp302, struct_Ll.cc);
        bytetest_d1 = simd_and(tmp287, tmp42);
        bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp42);
        tmp303 = simd_and(tmp289, bytetest_b1_b1);
        struct_Ll.cc = simd_or(tmp303, struct_Ll.cc);
        bytetest_d1 = simd_and(tmp287, tmp42);
        bytetest_b3_b3 = simd_and(bytetest_b0_bf, tmp27);
        tmp304 = simd_and(tmp289, bytetest_b3_b3);
        struct_Ll.cc = simd_or(tmp304, struct_Ll.cc);
        bytetest_d1 = simd_and(tmp287, tmp42);
        bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp21);
        tmp305 = simd_and(tmp289, bytetest_b5_b5);
        struct_Ll.cc = simd_or(tmp305, struct_Ll.cc);
        bytetest_d1 = simd_and(tmp287, tmp42);
        bytetest_b7_b7 = simd_and(bytetest_b0_bf, tmp48);
        tmp306 = simd_and(tmp289, bytetest_b7_b7);
        struct_Ll.cc = simd_or(tmp306, struct_Ll.cc);
        bytetest_d1 = simd_and(tmp287, tmp42);
        bytetest_b9_b9 = simd_and(bytetest_b0_bf, tmp51);
        tmp307 = simd_and(tmp289, bytetest_b9_b9);
        struct_Ll.cc = simd_or(tmp307, struct_Ll.cc);
        bytetest_d1 = simd_and(tmp287, tmp42);
        bytetest_bb_bb = simd_and(bytetest_b0_bf, tmp53);
        tmp308 = simd_and(tmp289, bytetest_bb_bb);
        struct_Ll.cc = simd_or(tmp308, struct_Ll.cc);
        bytetest_d1 = simd_and(tmp287, tmp42);
        bytetest_bd_bd = simd_and(bytetest_b0_bf, tmp55);
        tmp309 = simd_and(tmp289, bytetest_bd_bd);
        struct_Ll.cc = simd_or(tmp309, struct_Ll.cc);
        bytetest_d1 = simd_and(tmp287, tmp42);
        bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp33);
        tmp310 = simd_and(tmp289, bytetest_bf_bf);
        struct_Ll.cc = simd_or(tmp310, struct_Ll.cc);
        bytetest_d2 = simd_and(tmp287, tmp15);
        bytetest_81_81 = simd_and(tmp41, tmp42);
        tmp311 = simd_and(tmp23, bytetest_d2);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(tmp311, carryQ.get_carry_in(15), tmp312));
        tmp313 = simd_and(tmp312, bytetest_81_81);
        struct_Ll.cc = simd_or(tmp313, struct_Ll.cc);
        bytetest_d2 = simd_and(tmp287, tmp15);
        bytetest_8b_8b = simd_and(tmp41, tmp53);
        tmp314 = simd_and(tmp312, bytetest_8b_8b);
        struct_Ll.cc = simd_or(tmp314, struct_Ll.cc);
        bytetest_d2 = simd_and(tmp287, tmp15);
        bytetest_8d_8d = simd_and(tmp41, tmp55);
        tmp315 = simd_and(tmp312, bytetest_8d_8d);
        struct_Ll.cc = simd_or(tmp315, struct_Ll.cc);
        bytetest_d2 = simd_and(tmp287, tmp15);
        bytetest_8f_8f = simd_and(tmp41, tmp33);
        tmp316 = simd_and(tmp312, bytetest_8f_8f);
        struct_Ll.cc = simd_or(tmp316, struct_Ll.cc);
        bytetest_d2 = simd_and(tmp287, tmp15);
        bytetest_91_91 = simd_and(tmp59, tmp42);
        tmp317 = simd_and(tmp312, bytetest_91_91);
        struct_Ll.cc = simd_or(tmp317, struct_Ll.cc);
        bytetest_d2 = simd_and(tmp287, tmp15);
        bytetest_93_93 = simd_and(tmp59, tmp27);
        tmp318 = simd_and(tmp312, bytetest_93_93);
        struct_Ll.cc = simd_or(tmp318, struct_Ll.cc);
        bytetest_d2 = simd_and(tmp287, tmp15);
        bytetest_95_95 = simd_and(tmp59, tmp21);
        tmp319 = simd_and(tmp312, bytetest_95_95);
        struct_Ll.cc = simd_or(tmp319, struct_Ll.cc);
        bytetest_d2 = simd_and(tmp287, tmp15);
        bytetest_97_97 = simd_and(tmp59, tmp48);
        tmp320 = simd_and(tmp312, bytetest_97_97);
        struct_Ll.cc = simd_or(tmp320, struct_Ll.cc);
        bytetest_d2 = simd_and(tmp287, tmp15);
        bytetest_99_99 = simd_and(tmp59, tmp51);
        tmp321 = simd_and(tmp312, bytetest_99_99);
        struct_Ll.cc = simd_or(tmp321, struct_Ll.cc);
        bytetest_d2 = simd_and(tmp287, tmp15);
        bytetest_9b_9b = simd_and(tmp59, tmp53);
        tmp322 = simd_and(tmp312, bytetest_9b_9b);
        struct_Ll.cc = simd_or(tmp322, struct_Ll.cc);
        bytetest_d2 = simd_and(tmp287, tmp15);
        bytetest_9d_9d = simd_and(tmp59, tmp55);
        tmp323 = simd_and(tmp312, bytetest_9d_9d);
        struct_Ll.cc = simd_or(tmp323, struct_Ll.cc);
        bytetest_d2 = simd_and(tmp287, tmp15);
        bytetest_9f_9f = simd_and(tmp59, tmp33);
        tmp324 = simd_and(tmp312, bytetest_9f_9f);
        struct_Ll.cc = simd_or(tmp324, struct_Ll.cc);
        bytetest_d2 = simd_and(tmp287, tmp15);
        bytetest_a1_a1 = simd_and(tmp69, tmp42);
        tmp325 = simd_and(tmp312, bytetest_a1_a1);
        struct_Ll.cc = simd_or(tmp325, struct_Ll.cc);
        bytetest_d2 = simd_and(tmp287, tmp15);
        bytetest_a3_a3 = simd_and(tmp69, tmp27);
        tmp326 = simd_and(tmp312, bytetest_a3_a3);
        struct_Ll.cc = simd_or(tmp326, struct_Ll.cc);
        bytetest_d2 = simd_and(tmp287, tmp15);
        bytetest_a5_a5 = simd_and(tmp69, tmp21);
        tmp327 = simd_and(tmp312, bytetest_a5_a5);
        struct_Ll.cc = simd_or(tmp327, struct_Ll.cc);
        bytetest_d2 = simd_and(tmp287, tmp15);
        bytetest_a7_a7 = simd_and(tmp69, tmp48);
        tmp328 = simd_and(tmp312, bytetest_a7_a7);
        struct_Ll.cc = simd_or(tmp328, struct_Ll.cc);
        bytetest_d2 = simd_and(tmp287, tmp15);
        bytetest_a9_a9 = simd_and(tmp69, tmp51);
        tmp329 = simd_and(tmp312, bytetest_a9_a9);
        struct_Ll.cc = simd_or(tmp329, struct_Ll.cc);
        bytetest_d2 = simd_and(tmp287, tmp15);
        bytetest_ab_ab = simd_and(tmp69, tmp53);
        tmp330 = simd_and(tmp312, bytetest_ab_ab);
        struct_Ll.cc = simd_or(tmp330, struct_Ll.cc);
        bytetest_d2 = simd_and(tmp287, tmp15);
        bytetest_ad_ad = simd_and(tmp69, tmp55);
        tmp331 = simd_and(tmp312, bytetest_ad_ad);
        struct_Ll.cc = simd_or(tmp331, struct_Ll.cc);
        bytetest_d2 = simd_and(tmp287, tmp15);
        bytetest_af_af = simd_and(tmp69, tmp33);
        tmp332 = simd_and(tmp312, bytetest_af_af);
        struct_Ll.cc = simd_or(tmp332, struct_Ll.cc);
        bytetest_d2 = simd_and(tmp287, tmp15);
        bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp42);
        tmp333 = simd_and(tmp312, bytetest_b1_b1);
        struct_Ll.cc = simd_or(tmp333, struct_Ll.cc);
        bytetest_d2 = simd_and(tmp287, tmp15);
        bytetest_b3_b3 = simd_and(bytetest_b0_bf, tmp27);
        tmp334 = simd_and(tmp312, bytetest_b3_b3);
        struct_Ll.cc = simd_or(tmp334, struct_Ll.cc);
        bytetest_d2 = simd_and(tmp287, tmp15);
        bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp21);
        tmp335 = simd_and(tmp312, bytetest_b5_b5);
        struct_Ll.cc = simd_or(tmp335, struct_Ll.cc);
        bytetest_d2 = simd_and(tmp287, tmp15);
        bytetest_b7_b7 = simd_and(bytetest_b0_bf, tmp48);
        tmp336 = simd_and(tmp312, bytetest_b7_b7);
        struct_Ll.cc = simd_or(tmp336, struct_Ll.cc);
        bytetest_d2 = simd_and(tmp287, tmp15);
        bytetest_b9_b9 = simd_and(bytetest_b0_bf, tmp51);
        tmp337 = simd_and(tmp312, bytetest_b9_b9);
        struct_Ll.cc = simd_or(tmp337, struct_Ll.cc);
        bytetest_d2 = simd_and(tmp287, tmp15);
        bytetest_bb_bb = simd_and(bytetest_b0_bf, tmp53);
        tmp338 = simd_and(tmp312, bytetest_bb_bb);
        struct_Ll.cc = simd_or(tmp338, struct_Ll.cc);
        bytetest_d2 = simd_and(tmp287, tmp15);
        bytetest_bd_bd = simd_and(bytetest_b0_bf, tmp55);
        tmp339 = simd_and(tmp312, bytetest_bd_bd);
        struct_Ll.cc = simd_or(tmp339, struct_Ll.cc);
        bytetest_d2 = simd_and(tmp287, tmp15);
        bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp33);
        tmp340 = simd_and(tmp312, bytetest_bf_bf);
        struct_Ll.cc = simd_or(tmp340, struct_Ll.cc);
        bytetest_d3 = simd_and(tmp287, tmp27);
        bytetest_82_82 = simd_and(tmp41, tmp15);
        tmp341 = simd_and(tmp23, bytetest_d3);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(tmp341, carryQ.get_carry_in(16), tmp342));
        tmp343 = simd_and(tmp342, bytetest_82_82);
        struct_Ll.cc = simd_or(tmp343, struct_Ll.cc);
        bytetest_d3 = simd_and(tmp287, tmp27);
        bytetest_84_84 = simd_and(tmp41, tmp40);
        tmp344 = simd_and(tmp342, bytetest_84_84);
        struct_Ll.cc = simd_or(tmp344, struct_Ll.cc);
        bytetest_d3 = simd_and(tmp287, tmp27);
        bytetest_86_86 = simd_and(tmp41, tmp96);
        tmp345 = simd_and(tmp342, bytetest_86_86);
        struct_Ll.cc = simd_or(tmp345, struct_Ll.cc);
        bytetest_d3 = simd_and(tmp287, tmp27);
        bytetest_88_88 = simd_and(tmp41, tmp133);
        tmp346 = simd_and(tmp342, bytetest_88_88);
        struct_Ll.cc = simd_or(tmp346, struct_Ll.cc);
        bytetest_d3 = simd_and(tmp287, tmp27);
        bytetest_8a_8a = simd_and(tmp41, tmp85);
        tmp347 = simd_and(tmp342, bytetest_8a_8a);
        struct_Ll.cc = simd_or(tmp347, struct_Ll.cc);
        bytetest_d3 = simd_and(tmp287, tmp27);
        bytetest_8c_8c = simd_and(tmp41, tmp87);
        tmp348 = simd_and(tmp342, bytetest_8c_8c);
        struct_Ll.cc = simd_or(tmp348, struct_Ll.cc);
        bytetest_d3 = simd_and(tmp287, tmp27);
        bytetest_8e_8f = simd_and(tmp41, tmp128);
        tmp349 = simd_and(tmp342, bytetest_8e_8f);
        struct_Ll.cc = simd_or(tmp349, struct_Ll.cc);
        bytetest_d3 = simd_and(tmp287, tmp27);
        bytetest_91_91 = simd_and(tmp59, tmp42);
        tmp350 = simd_and(tmp342, bytetest_91_91);
        struct_Ll.cc = simd_or(tmp350, struct_Ll.cc);
        bytetest_d3 = simd_and(tmp287, tmp27);
        bytetest_93_93 = simd_and(tmp59, tmp27);
        tmp351 = simd_and(tmp342, bytetest_93_93);
        struct_Ll.cc = simd_or(tmp351, struct_Ll.cc);
        bytetest_d3 = simd_and(tmp287, tmp27);
        bytetest_95_95 = simd_and(tmp59, tmp21);
        tmp352 = simd_and(tmp342, bytetest_95_95);
        struct_Ll.cc = simd_or(tmp352, struct_Ll.cc);
        bytetest_d3 = simd_and(tmp287, tmp27);
        bytetest_97_97 = simd_and(tmp59, tmp48);
        tmp353 = simd_and(tmp342, bytetest_97_97);
        struct_Ll.cc = simd_or(tmp353, struct_Ll.cc);
        bytetest_d3 = simd_and(tmp287, tmp27);
        bytetest_99_99 = simd_and(tmp59, tmp51);
        tmp354 = simd_and(tmp342, bytetest_99_99);
        struct_Ll.cc = simd_or(tmp354, struct_Ll.cc);
        bytetest_d3 = simd_and(tmp287, tmp27);
        bytetest_9b_9b = simd_and(tmp59, tmp53);
        tmp355 = simd_and(tmp342, bytetest_9b_9b);
        struct_Ll.cc = simd_or(tmp355, struct_Ll.cc);
        bytetest_d3 = simd_and(tmp287, tmp27);
        bytetest_9d_9d = simd_and(tmp59, tmp55);
        tmp356 = simd_and(tmp342, bytetest_9d_9d);
        struct_Ll.cc = simd_or(tmp356, struct_Ll.cc);
        bytetest_d3 = simd_and(tmp287, tmp27);
        bytetest_9f_9f = simd_and(tmp59, tmp33);
        tmp357 = simd_and(tmp342, bytetest_9f_9f);
        struct_Ll.cc = simd_or(tmp357, struct_Ll.cc);
        bytetest_d3 = simd_and(tmp287, tmp27);
        bytetest_a1_a1 = simd_and(tmp69, tmp42);
        tmp358 = simd_and(tmp342, bytetest_a1_a1);
        struct_Ll.cc = simd_or(tmp358, struct_Ll.cc);
        bytetest_d3 = simd_and(tmp287, tmp27);
        bytetest_a3_a3 = simd_and(tmp69, tmp27);
        tmp359 = simd_and(tmp342, bytetest_a3_a3);
        struct_Ll.cc = simd_or(tmp359, struct_Ll.cc);
        bytetest_d3 = simd_and(tmp287, tmp27);
        bytetest_a5_a5 = simd_and(tmp69, tmp21);
        tmp360 = simd_and(tmp342, bytetest_a5_a5);
        struct_Ll.cc = simd_or(tmp360, struct_Ll.cc);
        bytetest_d3 = simd_and(tmp287, tmp27);
        bytetest_a7_a7 = simd_and(tmp69, tmp48);
        tmp361 = simd_and(tmp342, bytetest_a7_a7);
        struct_Ll.cc = simd_or(tmp361, struct_Ll.cc);
        bytetest_d3 = simd_and(tmp287, tmp27);
        bytetest_a9_a9 = simd_and(tmp69, tmp51);
        tmp362 = simd_and(tmp342, bytetest_a9_a9);
        struct_Ll.cc = simd_or(tmp362, struct_Ll.cc);
        bytetest_d3 = simd_and(tmp287, tmp27);
        bytetest_ab_ab = simd_and(tmp69, tmp53);
        tmp363 = simd_and(tmp342, bytetest_ab_ab);
        struct_Ll.cc = simd_or(tmp363, struct_Ll.cc);
        bytetest_d3 = simd_and(tmp287, tmp27);
        bytetest_ad_ad = simd_and(tmp69, tmp55);
        tmp364 = simd_and(tmp342, bytetest_ad_ad);
        struct_Ll.cc = simd_or(tmp364, struct_Ll.cc);
        bytetest_d3 = simd_and(tmp287, tmp27);
        bytetest_af_af = simd_and(tmp69, tmp33);
        tmp365 = simd_and(tmp342, bytetest_af_af);
        struct_Ll.cc = simd_or(tmp365, struct_Ll.cc);
        bytetest_d3 = simd_and(tmp287, tmp27);
        bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp42);
        tmp366 = simd_and(tmp342, bytetest_b1_b1);
        struct_Ll.cc = simd_or(tmp366, struct_Ll.cc);
        bytetest_d3 = simd_and(tmp287, tmp27);
        bytetest_b3_b3 = simd_and(bytetest_b0_bf, tmp27);
        tmp367 = simd_and(tmp342, bytetest_b3_b3);
        struct_Ll.cc = simd_or(tmp367, struct_Ll.cc);
        bytetest_d3 = simd_and(tmp287, tmp27);
        bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp21);
        tmp368 = simd_and(tmp342, bytetest_b5_b5);
        struct_Ll.cc = simd_or(tmp368, struct_Ll.cc);
        bytetest_d3 = simd_and(tmp287, tmp27);
        bytetest_b7_b7 = simd_and(bytetest_b0_bf, tmp48);
        tmp369 = simd_and(tmp342, bytetest_b7_b7);
        struct_Ll.cc = simd_or(tmp369, struct_Ll.cc);
        bytetest_d3 = simd_and(tmp287, tmp27);
        bytetest_b9_b9 = simd_and(bytetest_b0_bf, tmp51);
        tmp370 = simd_and(tmp342, bytetest_b9_b9);
        struct_Ll.cc = simd_or(tmp370, struct_Ll.cc);
        bytetest_d3 = simd_and(tmp287, tmp27);
        bytetest_bb_bb = simd_and(bytetest_b0_bf, tmp53);
        tmp371 = simd_and(tmp342, bytetest_bb_bb);
        struct_Ll.cc = simd_or(tmp371, struct_Ll.cc);
        bytetest_d3 = simd_and(tmp287, tmp27);
        bytetest_bd_bd = simd_and(bytetest_b0_bf, tmp55);
        tmp372 = simd_and(tmp342, bytetest_bd_bd);
        struct_Ll.cc = simd_or(tmp372, struct_Ll.cc);
        bytetest_d3 = simd_and(tmp287, tmp27);
        bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp33);
        tmp373 = simd_and(tmp342, bytetest_bf_bf);
        struct_Ll.cc = simd_or(tmp373, struct_Ll.cc);
        bytetest_d4 = simd_and(tmp287, tmp40);
        bytetest_81_81 = simd_and(tmp41, tmp42);
        tmp374 = simd_and(tmp23, bytetest_d4);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(tmp374, carryQ.get_carry_in(17), tmp375));
        tmp376 = simd_and(tmp375, bytetest_81_81);
        struct_Ll.cc = simd_or(tmp376, struct_Ll.cc);
        bytetest_d4 = simd_and(tmp287, tmp40);
        bytetest_83_83 = simd_and(tmp41, tmp27);
        tmp377 = simd_and(tmp375, bytetest_83_83);
        struct_Ll.cc = simd_or(tmp377, struct_Ll.cc);
        bytetest_d4 = simd_and(tmp287, tmp40);
        bytetest_85_85 = simd_and(tmp41, tmp21);
        tmp378 = simd_and(tmp375, bytetest_85_85);
        struct_Ll.cc = simd_or(tmp378, struct_Ll.cc);
        bytetest_d4 = simd_and(tmp287, tmp40);
        bytetest_87_87 = simd_and(tmp41, tmp48);
        tmp379 = simd_and(tmp375, bytetest_87_87);
        struct_Ll.cc = simd_or(tmp379, struct_Ll.cc);
        bytetest_d4 = simd_and(tmp287, tmp40);
        bytetest_89_89 = simd_and(tmp41, tmp51);
        tmp380 = simd_and(tmp375, bytetest_89_89);
        struct_Ll.cc = simd_or(tmp380, struct_Ll.cc);
        bytetest_d4 = simd_and(tmp287, tmp40);
        bytetest_8b_8b = simd_and(tmp41, tmp53);
        tmp381 = simd_and(tmp375, bytetest_8b_8b);
        struct_Ll.cc = simd_or(tmp381, struct_Ll.cc);
        bytetest_d4 = simd_and(tmp287, tmp40);
        bytetest_8d_8d = simd_and(tmp41, tmp55);
        tmp382 = simd_and(tmp375, bytetest_8d_8d);
        struct_Ll.cc = simd_or(tmp382, struct_Ll.cc);
        bytetest_d4 = simd_and(tmp287, tmp40);
        bytetest_8f_8f = simd_and(tmp41, tmp33);
        tmp383 = simd_and(tmp375, bytetest_8f_8f);
        struct_Ll.cc = simd_or(tmp383, struct_Ll.cc);
        bytetest_d4 = simd_and(tmp287, tmp40);
        bytetest_91_91 = simd_and(tmp59, tmp42);
        tmp384 = simd_and(tmp375, bytetest_91_91);
        struct_Ll.cc = simd_or(tmp384, struct_Ll.cc);
        bytetest_d4 = simd_and(tmp287, tmp40);
        bytetest_93_93 = simd_and(tmp59, tmp27);
        tmp385 = simd_and(tmp375, bytetest_93_93);
        struct_Ll.cc = simd_or(tmp385, struct_Ll.cc);
        bytetest_d4 = simd_and(tmp287, tmp40);
        bytetest_95_95 = simd_and(tmp59, tmp21);
        tmp386 = simd_and(tmp375, bytetest_95_95);
        struct_Ll.cc = simd_or(tmp386, struct_Ll.cc);
        bytetest_d4 = simd_and(tmp287, tmp40);
        bytetest_97_97 = simd_and(tmp59, tmp48);
        tmp387 = simd_and(tmp375, bytetest_97_97);
        struct_Ll.cc = simd_or(tmp387, struct_Ll.cc);
        bytetest_d4 = simd_and(tmp287, tmp40);
        bytetest_99_99 = simd_and(tmp59, tmp51);
        tmp388 = simd_and(tmp375, bytetest_99_99);
        struct_Ll.cc = simd_or(tmp388, struct_Ll.cc);
        bytetest_d4 = simd_and(tmp287, tmp40);
        bytetest_9b_9b = simd_and(tmp59, tmp53);
        tmp389 = simd_and(tmp375, bytetest_9b_9b);
        struct_Ll.cc = simd_or(tmp389, struct_Ll.cc);
        bytetest_d4 = simd_and(tmp287, tmp40);
        bytetest_9d_9d = simd_and(tmp59, tmp55);
        tmp390 = simd_and(tmp375, bytetest_9d_9d);
        struct_Ll.cc = simd_or(tmp390, struct_Ll.cc);
        bytetest_d4 = simd_and(tmp287, tmp40);
        bytetest_9f_9f = simd_and(tmp59, tmp33);
        tmp391 = simd_and(tmp375, bytetest_9f_9f);
        struct_Ll.cc = simd_or(tmp391, struct_Ll.cc);
        bytetest_d4 = simd_and(tmp287, tmp40);
        bytetest_a1_a1 = simd_and(tmp69, tmp42);
        tmp392 = simd_and(tmp375, bytetest_a1_a1);
        struct_Ll.cc = simd_or(tmp392, struct_Ll.cc);
        bytetest_d4 = simd_and(tmp287, tmp40);
        bytetest_a3_a3 = simd_and(tmp69, tmp27);
        tmp393 = simd_and(tmp375, bytetest_a3_a3);
        struct_Ll.cc = simd_or(tmp393, struct_Ll.cc);
        bytetest_d4 = simd_and(tmp287, tmp40);
        bytetest_a5_a5 = simd_and(tmp69, tmp21);
        tmp394 = simd_and(tmp375, bytetest_a5_a5);
        struct_Ll.cc = simd_or(tmp394, struct_Ll.cc);
        bytetest_d4 = simd_and(tmp287, tmp40);
        bytetest_a7_a7 = simd_and(tmp69, tmp48);
        tmp395 = simd_and(tmp375, bytetest_a7_a7);
        struct_Ll.cc = simd_or(tmp395, struct_Ll.cc);
        bytetest_d6 = simd_and(tmp287, tmp96);
        bytetest_80_87 = simd_andc(tmp41, basis_bits.bit_4);
        tmp396 = simd_and(tmp23, bytetest_d6);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(tmp396, carryQ.get_carry_in(18), tmp397));
        tmp398 = simd_and(tmp397, bytetest_80_87);
        bytetest_d5 = simd_and(tmp287, tmp21);
        tmp399 = simd_or(basis_bits.bit_3, tmp9);
        bytetest_a1_bf = simd_and(tmp179, tmp399);
        tmp400 = simd_and(tmp23, bytetest_d5);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(tmp400, carryQ.get_carry_in(19), tmp401));
        tmp402 = simd_and(tmp401, bytetest_a1_bf);
        tmp403 = simd_or(tmp402, tmp398);
        struct_Ll.cc = simd_or(tmp403, struct_Ll.cc);
        tmp404 = simd_and(tmp11, tmp68);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b4 = simd_and(bytetest_b0_bf, tmp40);
        tmp405 = simd_and(basis_bits.bit_2, tmp261);
        bytetest_80_ab = simd_andc(tmp16, tmp405);
        tmp406 = simd_and(tmp23, bytetest_e1);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(tmp406, carryQ.get_carry_in(20), tmp407));
        tmp408 = simd_and(tmp407, bytetest_b4);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(tmp408, carryQ.get_carry_in(21), tmp409));
        tmp410 = simd_and(tmp409, bytetest_80_ab);
        struct_Ll.cc = simd_or(tmp410, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b5 = simd_and(bytetest_b0_bf, tmp21);
        tmp411 = simd_not(basis_bits.bit_4);
        tmp412 = simd_or(simd_and(basis_bits.bit_3, tmp411), simd_andc(tmp5, basis_bits.bit_3));
        bytetest_ab_b7 = simd_and(tmp179, tmp412);
        tmp413 = simd_and(tmp407, bytetest_b5);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(tmp413, carryQ.get_carry_in(22), tmp414));
        tmp415 = simd_and(tmp414, bytetest_ab_b7);
        struct_Ll.cc = simd_or(tmp415, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b6 = simd_and(bytetest_b0_bf, tmp96);
        tmp416 = simd_and(basis_bits.bit_3, tmp5);
        bytetest_80_9a = simd_andc(bytetest_80_9f, tmp416);
        tmp417 = simd_and(tmp407, bytetest_b6);
        carryQ.cq[23] = carryout2carry(pablo_blk_Advance(tmp417, carryQ.get_carry_in(23), tmp418));
        tmp419 = simd_and(tmp418, bytetest_80_9a);
        bytetest_b5 = simd_and(bytetest_b0_bf, tmp21);
        tmp420 = simd_and(bytetest_b0_bf, basis_bits.bit_4);
        bytetest_b9_bf = simd_and(tmp420, tmp81);
        tmp421 = simd_and(tmp414, bytetest_b9_bf);
        tmp422 = simd_or(tmp421, tmp419);
        struct_Ll.cc = simd_or(tmp422, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp133);
        bytetest_81_81 = simd_and(tmp41, tmp42);
        tmp423 = simd_and(tmp407, bytetest_b8);
        carryQ.cq[24] = carryout2carry(pablo_blk_Advance(tmp423, carryQ.get_carry_in(24), tmp424));
        tmp425 = simd_and(tmp424, bytetest_81_81);
        struct_Ll.cc = simd_or(tmp425, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp133);
        bytetest_83_83 = simd_and(tmp41, tmp27);
        tmp426 = simd_and(tmp424, bytetest_83_83);
        struct_Ll.cc = simd_or(tmp426, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp133);
        bytetest_85_85 = simd_and(tmp41, tmp21);
        tmp427 = simd_and(tmp424, bytetest_85_85);
        struct_Ll.cc = simd_or(tmp427, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp133);
        bytetest_87_87 = simd_and(tmp41, tmp48);
        tmp428 = simd_and(tmp424, bytetest_87_87);
        struct_Ll.cc = simd_or(tmp428, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp133);
        bytetest_89_89 = simd_and(tmp41, tmp51);
        tmp429 = simd_and(tmp424, bytetest_89_89);
        struct_Ll.cc = simd_or(tmp429, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp133);
        bytetest_8b_8b = simd_and(tmp41, tmp53);
        tmp430 = simd_and(tmp424, bytetest_8b_8b);
        struct_Ll.cc = simd_or(tmp430, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp133);
        bytetest_8d_8d = simd_and(tmp41, tmp55);
        tmp431 = simd_and(tmp424, bytetest_8d_8d);
        struct_Ll.cc = simd_or(tmp431, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp133);
        bytetest_8f_8f = simd_and(tmp41, tmp33);
        tmp432 = simd_and(tmp424, bytetest_8f_8f);
        struct_Ll.cc = simd_or(tmp432, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp133);
        bytetest_91_91 = simd_and(tmp59, tmp42);
        tmp433 = simd_and(tmp424, bytetest_91_91);
        struct_Ll.cc = simd_or(tmp433, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp133);
        bytetest_93_93 = simd_and(tmp59, tmp27);
        tmp434 = simd_and(tmp424, bytetest_93_93);
        struct_Ll.cc = simd_or(tmp434, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp133);
        bytetest_95_95 = simd_and(tmp59, tmp21);
        tmp435 = simd_and(tmp424, bytetest_95_95);
        struct_Ll.cc = simd_or(tmp435, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp133);
        bytetest_97_97 = simd_and(tmp59, tmp48);
        tmp436 = simd_and(tmp424, bytetest_97_97);
        struct_Ll.cc = simd_or(tmp436, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp133);
        bytetest_99_99 = simd_and(tmp59, tmp51);
        tmp437 = simd_and(tmp424, bytetest_99_99);
        struct_Ll.cc = simd_or(tmp437, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp133);
        bytetest_9b_9b = simd_and(tmp59, tmp53);
        tmp438 = simd_and(tmp424, bytetest_9b_9b);
        struct_Ll.cc = simd_or(tmp438, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp133);
        bytetest_9d_9d = simd_and(tmp59, tmp55);
        tmp439 = simd_and(tmp424, bytetest_9d_9d);
        struct_Ll.cc = simd_or(tmp439, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp133);
        bytetest_9f_9f = simd_and(tmp59, tmp33);
        tmp440 = simd_and(tmp424, bytetest_9f_9f);
        struct_Ll.cc = simd_or(tmp440, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp133);
        bytetest_a1_a1 = simd_and(tmp69, tmp42);
        tmp441 = simd_and(tmp424, bytetest_a1_a1);
        struct_Ll.cc = simd_or(tmp441, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp133);
        bytetest_a3_a3 = simd_and(tmp69, tmp27);
        tmp442 = simd_and(tmp424, bytetest_a3_a3);
        struct_Ll.cc = simd_or(tmp442, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp133);
        bytetest_a5_a5 = simd_and(tmp69, tmp21);
        tmp443 = simd_and(tmp424, bytetest_a5_a5);
        struct_Ll.cc = simd_or(tmp443, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp133);
        bytetest_a7_a7 = simd_and(tmp69, tmp48);
        tmp444 = simd_and(tmp424, bytetest_a7_a7);
        struct_Ll.cc = simd_or(tmp444, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp133);
        bytetest_a9_a9 = simd_and(tmp69, tmp51);
        tmp445 = simd_and(tmp424, bytetest_a9_a9);
        struct_Ll.cc = simd_or(tmp445, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp133);
        bytetest_ab_ab = simd_and(tmp69, tmp53);
        tmp446 = simd_and(tmp424, bytetest_ab_ab);
        struct_Ll.cc = simd_or(tmp446, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp133);
        bytetest_ad_ad = simd_and(tmp69, tmp55);
        tmp447 = simd_and(tmp424, bytetest_ad_ad);
        struct_Ll.cc = simd_or(tmp447, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp133);
        bytetest_af_af = simd_and(tmp69, tmp33);
        tmp448 = simd_and(tmp424, bytetest_af_af);
        struct_Ll.cc = simd_or(tmp448, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp133);
        bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp42);
        tmp449 = simd_and(tmp424, bytetest_b1_b1);
        struct_Ll.cc = simd_or(tmp449, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp133);
        bytetest_b3_b3 = simd_and(bytetest_b0_bf, tmp27);
        tmp450 = simd_and(tmp424, bytetest_b3_b3);
        struct_Ll.cc = simd_or(tmp450, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp133);
        bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp21);
        tmp451 = simd_and(tmp424, bytetest_b5_b5);
        struct_Ll.cc = simd_or(tmp451, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp133);
        bytetest_b7_b7 = simd_and(bytetest_b0_bf, tmp48);
        tmp452 = simd_and(tmp424, bytetest_b7_b7);
        struct_Ll.cc = simd_or(tmp452, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp133);
        bytetest_b9_b9 = simd_and(bytetest_b0_bf, tmp51);
        tmp453 = simd_and(tmp424, bytetest_b9_b9);
        struct_Ll.cc = simd_or(tmp453, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp133);
        bytetest_bb_bb = simd_and(bytetest_b0_bf, tmp53);
        tmp454 = simd_and(tmp424, bytetest_bb_bb);
        struct_Ll.cc = simd_or(tmp454, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp133);
        bytetest_bd_bd = simd_and(bytetest_b0_bf, tmp55);
        tmp455 = simd_and(tmp424, bytetest_bd_bd);
        struct_Ll.cc = simd_or(tmp455, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp133);
        bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp33);
        tmp456 = simd_and(tmp424, bytetest_bf_bf);
        struct_Ll.cc = simd_or(tmp456, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp51);
        bytetest_81_81 = simd_and(tmp41, tmp42);
        tmp457 = simd_and(tmp407, bytetest_b9);
        carryQ.cq[25] = carryout2carry(pablo_blk_Advance(tmp457, carryQ.get_carry_in(25), tmp458));
        tmp459 = simd_and(tmp458, bytetest_81_81);
        struct_Ll.cc = simd_or(tmp459, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp51);
        bytetest_83_83 = simd_and(tmp41, tmp27);
        tmp460 = simd_and(tmp458, bytetest_83_83);
        struct_Ll.cc = simd_or(tmp460, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp51);
        bytetest_85_85 = simd_and(tmp41, tmp21);
        tmp461 = simd_and(tmp458, bytetest_85_85);
        struct_Ll.cc = simd_or(tmp461, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp51);
        bytetest_87_87 = simd_and(tmp41, tmp48);
        tmp462 = simd_and(tmp458, bytetest_87_87);
        struct_Ll.cc = simd_or(tmp462, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp51);
        bytetest_89_89 = simd_and(tmp41, tmp51);
        tmp463 = simd_and(tmp458, bytetest_89_89);
        struct_Ll.cc = simd_or(tmp463, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp51);
        bytetest_8b_8b = simd_and(tmp41, tmp53);
        tmp464 = simd_and(tmp458, bytetest_8b_8b);
        struct_Ll.cc = simd_or(tmp464, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp51);
        bytetest_8d_8d = simd_and(tmp41, tmp55);
        tmp465 = simd_and(tmp458, bytetest_8d_8d);
        struct_Ll.cc = simd_or(tmp465, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp51);
        bytetest_8f_8f = simd_and(tmp41, tmp33);
        tmp466 = simd_and(tmp458, bytetest_8f_8f);
        struct_Ll.cc = simd_or(tmp466, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp51);
        bytetest_91_91 = simd_and(tmp59, tmp42);
        tmp467 = simd_and(tmp458, bytetest_91_91);
        struct_Ll.cc = simd_or(tmp467, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp51);
        bytetest_93_93 = simd_and(tmp59, tmp27);
        tmp468 = simd_and(tmp458, bytetest_93_93);
        struct_Ll.cc = simd_or(tmp468, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp51);
        bytetest_95_95 = simd_and(tmp59, tmp21);
        tmp469 = simd_and(tmp458, bytetest_95_95);
        struct_Ll.cc = simd_or(tmp469, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp51);
        bytetest_97_97 = simd_and(tmp59, tmp48);
        tmp470 = simd_and(tmp458, bytetest_97_97);
        struct_Ll.cc = simd_or(tmp470, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp51);
        bytetest_99_99 = simd_and(tmp59, tmp51);
        tmp471 = simd_and(tmp458, bytetest_99_99);
        struct_Ll.cc = simd_or(tmp471, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp51);
        bytetest_9b_9b = simd_and(tmp59, tmp53);
        tmp472 = simd_and(tmp458, bytetest_9b_9b);
        struct_Ll.cc = simd_or(tmp472, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp51);
        bytetest_9d_9d = simd_and(tmp59, tmp55);
        tmp473 = simd_and(tmp458, bytetest_9d_9d);
        struct_Ll.cc = simd_or(tmp473, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp51);
        bytetest_9f_9f = simd_and(tmp59, tmp33);
        tmp474 = simd_and(tmp458, bytetest_9f_9f);
        struct_Ll.cc = simd_or(tmp474, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp51);
        bytetest_a1_a1 = simd_and(tmp69, tmp42);
        tmp475 = simd_and(tmp458, bytetest_a1_a1);
        struct_Ll.cc = simd_or(tmp475, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp51);
        bytetest_a3_a3 = simd_and(tmp69, tmp27);
        tmp476 = simd_and(tmp458, bytetest_a3_a3);
        struct_Ll.cc = simd_or(tmp476, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp51);
        bytetest_a5_a5 = simd_and(tmp69, tmp21);
        tmp477 = simd_and(tmp458, bytetest_a5_a5);
        struct_Ll.cc = simd_or(tmp477, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp51);
        bytetest_a7_a7 = simd_and(tmp69, tmp48);
        tmp478 = simd_and(tmp458, bytetest_a7_a7);
        struct_Ll.cc = simd_or(tmp478, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp51);
        bytetest_a9_a9 = simd_and(tmp69, tmp51);
        tmp479 = simd_and(tmp458, bytetest_a9_a9);
        struct_Ll.cc = simd_or(tmp479, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp51);
        bytetest_ab_ab = simd_and(tmp69, tmp53);
        tmp480 = simd_and(tmp458, bytetest_ab_ab);
        struct_Ll.cc = simd_or(tmp480, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp51);
        bytetest_ad_ad = simd_and(tmp69, tmp55);
        tmp481 = simd_and(tmp458, bytetest_ad_ad);
        struct_Ll.cc = simd_or(tmp481, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp51);
        bytetest_af_af = simd_and(tmp69, tmp33);
        tmp482 = simd_and(tmp458, bytetest_af_af);
        struct_Ll.cc = simd_or(tmp482, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp51);
        bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp42);
        tmp483 = simd_and(tmp458, bytetest_b1_b1);
        struct_Ll.cc = simd_or(tmp483, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp51);
        bytetest_b3_b3 = simd_and(bytetest_b0_bf, tmp27);
        tmp484 = simd_and(tmp458, bytetest_b3_b3);
        struct_Ll.cc = simd_or(tmp484, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp51);
        bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp21);
        tmp485 = simd_and(tmp458, bytetest_b5_b5);
        struct_Ll.cc = simd_or(tmp485, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp51);
        bytetest_b7_b7 = simd_and(bytetest_b0_bf, tmp48);
        tmp486 = simd_and(tmp458, bytetest_b7_b7);
        struct_Ll.cc = simd_or(tmp486, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp51);
        bytetest_b9_b9 = simd_and(bytetest_b0_bf, tmp51);
        tmp487 = simd_and(tmp458, bytetest_b9_b9);
        struct_Ll.cc = simd_or(tmp487, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp51);
        bytetest_bb_bb = simd_and(bytetest_b0_bf, tmp53);
        tmp488 = simd_and(tmp458, bytetest_bb_bb);
        struct_Ll.cc = simd_or(tmp488, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp51);
        bytetest_bd_bd = simd_and(bytetest_b0_bf, tmp55);
        tmp489 = simd_and(tmp458, bytetest_bd_bd);
        struct_Ll.cc = simd_or(tmp489, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp51);
        bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp33);
        tmp490 = simd_and(tmp458, bytetest_bf_bf);
        struct_Ll.cc = simd_or(tmp490, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp85);
        bytetest_81_81 = simd_and(tmp41, tmp42);
        tmp491 = simd_and(tmp407, bytetest_ba);
        carryQ.cq[26] = carryout2carry(pablo_blk_Advance(tmp491, carryQ.get_carry_in(26), tmp492));
        tmp493 = simd_and(tmp492, bytetest_81_81);
        struct_Ll.cc = simd_or(tmp493, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp85);
        bytetest_83_83 = simd_and(tmp41, tmp27);
        tmp494 = simd_and(tmp492, bytetest_83_83);
        struct_Ll.cc = simd_or(tmp494, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp85);
        bytetest_85_85 = simd_and(tmp41, tmp21);
        tmp495 = simd_and(tmp492, bytetest_85_85);
        struct_Ll.cc = simd_or(tmp495, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp85);
        bytetest_87_87 = simd_and(tmp41, tmp48);
        tmp496 = simd_and(tmp492, bytetest_87_87);
        struct_Ll.cc = simd_or(tmp496, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp85);
        bytetest_89_89 = simd_and(tmp41, tmp51);
        tmp497 = simd_and(tmp492, bytetest_89_89);
        struct_Ll.cc = simd_or(tmp497, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp85);
        bytetest_8b_8b = simd_and(tmp41, tmp53);
        tmp498 = simd_and(tmp492, bytetest_8b_8b);
        struct_Ll.cc = simd_or(tmp498, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp85);
        bytetest_8d_8d = simd_and(tmp41, tmp55);
        tmp499 = simd_and(tmp492, bytetest_8d_8d);
        struct_Ll.cc = simd_or(tmp499, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp85);
        bytetest_8f_8f = simd_and(tmp41, tmp33);
        tmp500 = simd_and(tmp492, bytetest_8f_8f);
        struct_Ll.cc = simd_or(tmp500, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp85);
        bytetest_91_91 = simd_and(tmp59, tmp42);
        tmp501 = simd_and(tmp492, bytetest_91_91);
        struct_Ll.cc = simd_or(tmp501, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp85);
        bytetest_93_93 = simd_and(tmp59, tmp27);
        tmp502 = simd_and(tmp492, bytetest_93_93);
        struct_Ll.cc = simd_or(tmp502, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp85);
        tmp503 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp504 = simd_not(tmp503);
        tmp505 = simd_or(simd_and(basis_bits.bit_4, tmp504), simd_andc(tmp241, basis_bits.bit_4));
        bytetest_95_9d = simd_and(tmp59, tmp505);
        tmp506 = simd_and(tmp492, bytetest_95_9d);
        struct_Ll.cc = simd_or(tmp506, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp85);
        bytetest_9f_9f = simd_and(tmp59, tmp33);
        tmp507 = simd_and(tmp492, bytetest_9f_9f);
        struct_Ll.cc = simd_or(tmp507, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp85);
        bytetest_a1_a1 = simd_and(tmp69, tmp42);
        tmp508 = simd_and(tmp492, bytetest_a1_a1);
        struct_Ll.cc = simd_or(tmp508, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp85);
        bytetest_a3_a3 = simd_and(tmp69, tmp27);
        tmp509 = simd_and(tmp492, bytetest_a3_a3);
        struct_Ll.cc = simd_or(tmp509, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp85);
        bytetest_a5_a5 = simd_and(tmp69, tmp21);
        tmp510 = simd_and(tmp492, bytetest_a5_a5);
        struct_Ll.cc = simd_or(tmp510, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp85);
        bytetest_a7_a7 = simd_and(tmp69, tmp48);
        tmp511 = simd_and(tmp492, bytetest_a7_a7);
        struct_Ll.cc = simd_or(tmp511, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp85);
        bytetest_a9_a9 = simd_and(tmp69, tmp51);
        tmp512 = simd_and(tmp492, bytetest_a9_a9);
        struct_Ll.cc = simd_or(tmp512, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp85);
        bytetest_ab_ab = simd_and(tmp69, tmp53);
        tmp513 = simd_and(tmp492, bytetest_ab_ab);
        struct_Ll.cc = simd_or(tmp513, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp85);
        bytetest_ad_ad = simd_and(tmp69, tmp55);
        tmp514 = simd_and(tmp492, bytetest_ad_ad);
        struct_Ll.cc = simd_or(tmp514, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp85);
        bytetest_af_af = simd_and(tmp69, tmp33);
        tmp515 = simd_and(tmp492, bytetest_af_af);
        struct_Ll.cc = simd_or(tmp515, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp85);
        bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp42);
        tmp516 = simd_and(tmp492, bytetest_b1_b1);
        struct_Ll.cc = simd_or(tmp516, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp85);
        bytetest_b3_b3 = simd_and(bytetest_b0_bf, tmp27);
        tmp517 = simd_and(tmp492, bytetest_b3_b3);
        struct_Ll.cc = simd_or(tmp517, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp85);
        bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp21);
        tmp518 = simd_and(tmp492, bytetest_b5_b5);
        struct_Ll.cc = simd_or(tmp518, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp85);
        bytetest_b7_b7 = simd_and(bytetest_b0_bf, tmp48);
        tmp519 = simd_and(tmp492, bytetest_b7_b7);
        struct_Ll.cc = simd_or(tmp519, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp85);
        bytetest_b9_b9 = simd_and(bytetest_b0_bf, tmp51);
        tmp520 = simd_and(tmp492, bytetest_b9_b9);
        struct_Ll.cc = simd_or(tmp520, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp85);
        bytetest_bb_bb = simd_and(bytetest_b0_bf, tmp53);
        tmp521 = simd_and(tmp492, bytetest_bb_bb);
        struct_Ll.cc = simd_or(tmp521, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp85);
        bytetest_bd_bd = simd_and(bytetest_b0_bf, tmp55);
        tmp522 = simd_and(tmp492, bytetest_bd_bd);
        struct_Ll.cc = simd_or(tmp522, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp85);
        bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp33);
        tmp523 = simd_and(tmp492, bytetest_bf_bf);
        struct_Ll.cc = simd_or(tmp523, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp53);
        bytetest_81_81 = simd_and(tmp41, tmp42);
        tmp524 = simd_and(tmp407, bytetest_bb);
        carryQ.cq[27] = carryout2carry(pablo_blk_Advance(tmp524, carryQ.get_carry_in(27), tmp525));
        tmp526 = simd_and(tmp525, bytetest_81_81);
        struct_Ll.cc = simd_or(tmp526, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp53);
        bytetest_83_83 = simd_and(tmp41, tmp27);
        tmp527 = simd_and(tmp525, bytetest_83_83);
        struct_Ll.cc = simd_or(tmp527, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp53);
        bytetest_85_85 = simd_and(tmp41, tmp21);
        tmp528 = simd_and(tmp525, bytetest_85_85);
        struct_Ll.cc = simd_or(tmp528, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp53);
        bytetest_87_87 = simd_and(tmp41, tmp48);
        tmp529 = simd_and(tmp525, bytetest_87_87);
        struct_Ll.cc = simd_or(tmp529, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp53);
        bytetest_89_89 = simd_and(tmp41, tmp51);
        tmp530 = simd_and(tmp525, bytetest_89_89);
        struct_Ll.cc = simd_or(tmp530, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp53);
        bytetest_8b_8b = simd_and(tmp41, tmp53);
        tmp531 = simd_and(tmp525, bytetest_8b_8b);
        struct_Ll.cc = simd_or(tmp531, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp53);
        bytetest_8d_8d = simd_and(tmp41, tmp55);
        tmp532 = simd_and(tmp525, bytetest_8d_8d);
        struct_Ll.cc = simd_or(tmp532, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp53);
        bytetest_8f_8f = simd_and(tmp41, tmp33);
        tmp533 = simd_and(tmp525, bytetest_8f_8f);
        struct_Ll.cc = simd_or(tmp533, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp53);
        bytetest_91_91 = simd_and(tmp59, tmp42);
        tmp534 = simd_and(tmp525, bytetest_91_91);
        struct_Ll.cc = simd_or(tmp534, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp53);
        bytetest_93_93 = simd_and(tmp59, tmp27);
        tmp535 = simd_and(tmp525, bytetest_93_93);
        struct_Ll.cc = simd_or(tmp535, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp53);
        bytetest_95_95 = simd_and(tmp59, tmp21);
        tmp536 = simd_and(tmp525, bytetest_95_95);
        struct_Ll.cc = simd_or(tmp536, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp53);
        bytetest_97_97 = simd_and(tmp59, tmp48);
        tmp537 = simd_and(tmp525, bytetest_97_97);
        struct_Ll.cc = simd_or(tmp537, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp53);
        bytetest_99_99 = simd_and(tmp59, tmp51);
        tmp538 = simd_and(tmp525, bytetest_99_99);
        struct_Ll.cc = simd_or(tmp538, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp53);
        bytetest_9b_9b = simd_and(tmp59, tmp53);
        tmp539 = simd_and(tmp525, bytetest_9b_9b);
        struct_Ll.cc = simd_or(tmp539, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp53);
        bytetest_9d_9d = simd_and(tmp59, tmp55);
        tmp540 = simd_and(tmp525, bytetest_9d_9d);
        struct_Ll.cc = simd_or(tmp540, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp53);
        bytetest_9f_9f = simd_and(tmp59, tmp33);
        tmp541 = simd_and(tmp525, bytetest_9f_9f);
        struct_Ll.cc = simd_or(tmp541, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp53);
        bytetest_a1_a1 = simd_and(tmp69, tmp42);
        tmp542 = simd_and(tmp525, bytetest_a1_a1);
        struct_Ll.cc = simd_or(tmp542, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp53);
        bytetest_a3_a3 = simd_and(tmp69, tmp27);
        tmp543 = simd_and(tmp525, bytetest_a3_a3);
        struct_Ll.cc = simd_or(tmp543, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp53);
        bytetest_a5_a5 = simd_and(tmp69, tmp21);
        tmp544 = simd_and(tmp525, bytetest_a5_a5);
        struct_Ll.cc = simd_or(tmp544, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp53);
        bytetest_a7_a7 = simd_and(tmp69, tmp48);
        tmp545 = simd_and(tmp525, bytetest_a7_a7);
        struct_Ll.cc = simd_or(tmp545, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp53);
        bytetest_a9_a9 = simd_and(tmp69, tmp51);
        tmp546 = simd_and(tmp525, bytetest_a9_a9);
        struct_Ll.cc = simd_or(tmp546, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp53);
        bytetest_ab_ab = simd_and(tmp69, tmp53);
        tmp547 = simd_and(tmp525, bytetest_ab_ab);
        struct_Ll.cc = simd_or(tmp547, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp53);
        bytetest_ad_ad = simd_and(tmp69, tmp55);
        tmp548 = simd_and(tmp525, bytetest_ad_ad);
        struct_Ll.cc = simd_or(tmp548, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp53);
        bytetest_af_af = simd_and(tmp69, tmp33);
        tmp549 = simd_and(tmp525, bytetest_af_af);
        struct_Ll.cc = simd_or(tmp549, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp53);
        bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp42);
        tmp550 = simd_and(tmp525, bytetest_b1_b1);
        struct_Ll.cc = simd_or(tmp550, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp53);
        bytetest_b3_b3 = simd_and(bytetest_b0_bf, tmp27);
        tmp551 = simd_and(tmp525, bytetest_b3_b3);
        struct_Ll.cc = simd_or(tmp551, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp53);
        bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp21);
        tmp552 = simd_and(tmp525, bytetest_b5_b5);
        struct_Ll.cc = simd_or(tmp552, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp53);
        bytetest_b7_b7 = simd_and(bytetest_b0_bf, tmp48);
        tmp553 = simd_and(tmp525, bytetest_b7_b7);
        struct_Ll.cc = simd_or(tmp553, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp53);
        bytetest_b9_b9 = simd_and(bytetest_b0_bf, tmp51);
        tmp554 = simd_and(tmp525, bytetest_b9_b9);
        struct_Ll.cc = simd_or(tmp554, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp53);
        bytetest_bb_bb = simd_and(bytetest_b0_bf, tmp53);
        tmp555 = simd_and(tmp525, bytetest_bb_bb);
        struct_Ll.cc = simd_or(tmp555, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp53);
        bytetest_bd_bd = simd_and(bytetest_b0_bf, tmp55);
        tmp556 = simd_and(tmp525, bytetest_bd_bd);
        struct_Ll.cc = simd_or(tmp556, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bc = simd_and(bytetest_b0_bf, tmp87);
        bytetest_80_87 = simd_andc(tmp41, basis_bits.bit_4);
        tmp557 = simd_and(tmp407, bytetest_bc);
        carryQ.cq[28] = carryout2carry(pablo_blk_Advance(tmp557, carryQ.get_carry_in(28), tmp558));
        tmp559 = simd_and(tmp558, bytetest_80_87);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp53);
        bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp33);
        tmp560 = simd_and(tmp525, bytetest_bf_bf);
        tmp561 = simd_or(tmp560, tmp559);
        struct_Ll.cc = simd_or(tmp561, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bc = simd_and(bytetest_b0_bf, tmp87);
        tmp562 = simd_andc(tmp59, basis_bits.bit_4);
        bytetest_90_95 = simd_andc(tmp562, tmp503);
        tmp563 = simd_and(tmp558, bytetest_90_95);
        struct_Ll.cc = simd_or(tmp563, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bc = simd_and(bytetest_b0_bf, tmp87);
        bytetest_a0_a7 = simd_andc(tmp69, basis_bits.bit_4);
        tmp564 = simd_and(tmp558, bytetest_a0_a7);
        struct_Ll.cc = simd_or(tmp564, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bc = simd_and(bytetest_b0_bf, tmp87);
        bytetest_b0_b7 = simd_andc(bytetest_b0_bf, basis_bits.bit_4);
        tmp565 = simd_and(tmp558, bytetest_b0_b7);
        struct_Ll.cc = simd_or(tmp565, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bd = simd_and(bytetest_b0_bf, tmp55);
        bytetest_80_85 = simd_andc(bytetest_80_87, tmp503);
        tmp566 = simd_and(tmp407, bytetest_bd);
        carryQ.cq[29] = carryout2carry(pablo_blk_Advance(tmp566, carryQ.get_carry_in(29), tmp567));
        tmp568 = simd_and(tmp567, bytetest_80_85);
        struct_Ll.cc = simd_or(tmp568, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bd = simd_and(bytetest_b0_bf, tmp55);
        bytetest_90_97 = simd_andc(tmp59, basis_bits.bit_4);
        tmp569 = simd_and(tmp567, bytetest_90_97);
        struct_Ll.cc = simd_or(tmp569, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bd = simd_and(bytetest_b0_bf, tmp55);
        bytetest_a0_a7 = simd_andc(tmp69, basis_bits.bit_4);
        tmp570 = simd_and(tmp567, bytetest_a0_a7);
        struct_Ll.cc = simd_or(tmp570, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bd = simd_and(bytetest_b0_bf, tmp55);
        tmp571 = simd_and(basis_bits.bit_4, tmp503);
        bytetest_b0_bd = simd_andc(bytetest_b0_bf, tmp571);
        tmp572 = simd_and(tmp567, bytetest_b0_bd);
        struct_Ll.cc = simd_or(tmp572, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_be = simd_and(bytetest_b0_bf, tmp89);
        bytetest_80_87 = simd_andc(tmp41, basis_bits.bit_4);
        tmp573 = simd_and(tmp407, bytetest_be);
        carryQ.cq[30] = carryout2carry(pablo_blk_Advance(tmp573, carryQ.get_carry_in(30), tmp574));
        tmp575 = simd_and(tmp574, bytetest_80_87);
        struct_Ll.cc = simd_or(tmp575, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_be = simd_and(bytetest_b0_bf, tmp89);
        bytetest_90_97 = simd_andc(tmp59, basis_bits.bit_4);
        tmp576 = simd_and(tmp574, bytetest_90_97);
        struct_Ll.cc = simd_or(tmp576, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_be = simd_and(bytetest_b0_bf, tmp89);
        bytetest_a0_a7 = simd_andc(tmp69, basis_bits.bit_4);
        tmp577 = simd_and(tmp574, bytetest_a0_a7);
        struct_Ll.cc = simd_or(tmp577, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_be = simd_and(bytetest_b0_bf, tmp89);
        bytetest_b0_b4 = simd_andc(bytetest_b0_b7, tmp241);
        tmp578 = simd_and(tmp574, bytetest_b0_b4);
        struct_Ll.cc = simd_or(tmp578, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_be = simd_and(bytetest_b0_bf, tmp89);
        tmp579 = simd_and(tmp19, basis_bits.bit_6);
        bytetest_b6_b7 = simd_and(bytetest_b0_bf, tmp579);
        tmp580 = simd_and(tmp574, bytetest_b6_b7);
        struct_Ll.cc = simd_or(tmp580, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_be = simd_and(bytetest_b0_bf, tmp89);
        bytetest_be_be = simd_and(bytetest_b0_bf, tmp89);
        tmp581 = simd_and(tmp574, bytetest_be_be);
        struct_Ll.cc = simd_or(tmp581, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bf = simd_and(bytetest_b0_bf, tmp33);
        tmp582 = simd_or(simd_and(basis_bits.bit_5, tmp284), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        bytetest_82_84 = simd_and(bytetest_80_87, tmp582);
        tmp583 = simd_and(tmp407, bytetest_bf);
        carryQ.cq[31] = carryout2carry(pablo_blk_Advance(tmp583, carryQ.get_carry_in(31), tmp584));
        tmp585 = simd_and(tmp584, bytetest_82_84);
        struct_Ll.cc = simd_or(tmp585, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bf = simd_and(bytetest_b0_bf, tmp33);
        bytetest_86_87 = simd_and(tmp41, tmp579);
        tmp586 = simd_and(tmp584, bytetest_86_87);
        struct_Ll.cc = simd_or(tmp586, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bf = simd_and(bytetest_b0_bf, tmp33);
        bytetest_90_93 = simd_andc(tmp59, tmp7);
        tmp587 = simd_and(tmp584, bytetest_90_93);
        struct_Ll.cc = simd_or(tmp587, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bf = simd_and(bytetest_b0_bf, tmp33);
        bytetest_96_97 = simd_and(tmp59, tmp579);
        tmp588 = simd_and(tmp584, bytetest_96_97);
        struct_Ll.cc = simd_or(tmp588, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bf = simd_and(bytetest_b0_bf, tmp33);
        bytetest_a0_a7 = simd_andc(tmp69, basis_bits.bit_4);
        tmp589 = simd_and(tmp584, bytetest_a0_a7);
        struct_Ll.cc = simd_or(tmp589, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bf = simd_and(bytetest_b0_bf, tmp33);
        bytetest_b2_b4 = simd_and(bytetest_b0_b7, tmp582);
        tmp590 = simd_and(tmp584, bytetest_b2_b4);
        struct_Ll.cc = simd_or(tmp590, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bf = simd_and(bytetest_b0_bf, tmp33);
        bytetest_b6_b7 = simd_and(bytetest_b0_bf, tmp579);
        tmp591 = simd_and(tmp584, bytetest_b6_b7);
        struct_Ll.cc = simd_or(tmp591, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_84 = simd_and(tmp41, tmp40);
        bytetest_8a_8a = simd_and(tmp41, tmp85);
        tmp592 = simd_and(tmp23, bytetest_e2);
        carryQ.cq[32] = carryout2carry(pablo_blk_Advance(tmp592, carryQ.get_carry_in(32), tmp593));
        tmp594 = simd_and(tmp593, bytetest_84);
        carryQ.cq[33] = carryout2carry(pablo_blk_Advance(tmp594, carryQ.get_carry_in(33), tmp595));
        tmp596 = simd_and(tmp595, bytetest_8a_8a);
        struct_Ll.cc = simd_or(tmp596, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_84 = simd_and(tmp41, tmp40);
        bytetest_8e_8f = simd_and(tmp41, tmp128);
        tmp597 = simd_and(tmp595, bytetest_8e_8f);
        struct_Ll.cc = simd_or(tmp597, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_84 = simd_and(tmp41, tmp40);
        bytetest_93_93 = simd_and(tmp59, tmp27);
        tmp598 = simd_and(tmp595, bytetest_93_93);
        struct_Ll.cc = simd_or(tmp598, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_84 = simd_and(tmp41, tmp40);
        bytetest_af_af = simd_and(tmp69, tmp33);
        tmp599 = simd_and(tmp595, bytetest_af_af);
        struct_Ll.cc = simd_or(tmp599, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_84 = simd_and(tmp41, tmp40);
        bytetest_b4_b4 = simd_and(bytetest_b0_bf, tmp40);
        tmp600 = simd_and(tmp595, bytetest_b4_b4);
        struct_Ll.cc = simd_or(tmp600, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_84 = simd_and(tmp41, tmp40);
        bytetest_b9_b9 = simd_and(bytetest_b0_bf, tmp51);
        tmp601 = simd_and(tmp595, bytetest_b9_b9);
        struct_Ll.cc = simd_or(tmp601, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_84 = simd_and(tmp41, tmp40);
        bytetest_bc_bd = simd_and(bytetest_b0_bf, tmp135);
        tmp602 = simd_and(tmp595, bytetest_bc_bd);
        struct_Ll.cc = simd_or(tmp602, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_85 = simd_and(tmp41, tmp21);
        tmp603 = simd_or(simd_and(basis_bits.bit_4, tmp217), simd_andc(tmp503, basis_bits.bit_4));
        bytetest_86_89 = simd_and(tmp41, tmp603);
        tmp604 = simd_and(tmp593, bytetest_85);
        carryQ.cq[34] = carryout2carry(pablo_blk_Advance(tmp604, carryQ.get_carry_in(34), tmp605));
        tmp606 = simd_and(tmp605, bytetest_86_89);
        struct_Ll.cc = simd_or(tmp606, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_85 = simd_and(tmp41, tmp21);
        bytetest_8e_8e = simd_and(tmp41, tmp89);
        tmp607 = simd_and(tmp605, bytetest_8e_8e);
        struct_Ll.cc = simd_or(tmp607, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_86 = simd_and(tmp41, tmp96);
        bytetest_84_84 = simd_and(tmp41, tmp40);
        tmp608 = simd_and(tmp593, bytetest_86);
        carryQ.cq[35] = carryout2carry(pablo_blk_Advance(tmp608, carryQ.get_carry_in(35), tmp609));
        tmp610 = simd_and(tmp609, bytetest_84_84);
        struct_Ll.cc = simd_or(tmp610, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b1 = simd_and(bytetest_b0_bf, tmp42);
        bytetest_80_9e = simd_andc(bytetest_80_9f, tmp34);
        tmp611 = simd_and(tmp593, bytetest_b1);
        carryQ.cq[36] = carryout2carry(pablo_blk_Advance(tmp611, carryQ.get_carry_in(36), tmp612));
        tmp613 = simd_and(tmp612, bytetest_80_9e);
        bytetest_b0 = simd_andc(bytetest_b0_bf, tmp9);
        bytetest_b0_bf = simd_and(tmp16, tmp17);
        tmp614 = simd_and(tmp593, bytetest_b0);
        carryQ.cq[37] = carryout2carry(pablo_blk_Advance(tmp614, carryQ.get_carry_in(37), tmp615));
        tmp616 = simd_and(tmp615, bytetest_b0_bf);
        tmp617 = simd_or(tmp616, tmp613);
        struct_Ll.cc = simd_or(tmp617, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b1 = simd_and(bytetest_b0_bf, tmp42);
        bytetest_a1_a1 = simd_and(tmp69, tmp42);
        tmp618 = simd_and(tmp612, bytetest_a1_a1);
        struct_Ll.cc = simd_or(tmp618, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b1 = simd_and(bytetest_b0_bf, tmp42);
        tmp619 = simd_and(tmp69, tmp19);
        bytetest_a5_a6 = simd_and(tmp619, tmp154);
        tmp620 = simd_and(tmp612, bytetest_a5_a6);
        struct_Ll.cc = simd_or(tmp620, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b1 = simd_and(bytetest_b0_bf, tmp42);
        bytetest_a8_a8 = simd_and(tmp69, tmp133);
        tmp621 = simd_and(tmp612, bytetest_a8_a8);
        struct_Ll.cc = simd_or(tmp621, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b1 = simd_and(bytetest_b0_bf, tmp42);
        bytetest_aa_aa = simd_and(tmp69, tmp85);
        tmp622 = simd_and(tmp612, bytetest_aa_aa);
        struct_Ll.cc = simd_or(tmp622, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b1 = simd_and(bytetest_b0_bf, tmp42);
        bytetest_ac_ac = simd_and(tmp69, tmp87);
        tmp623 = simd_and(tmp612, bytetest_ac_ac);
        struct_Ll.cc = simd_or(tmp623, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b1 = simd_and(bytetest_b0_bf, tmp42);
        bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp42);
        tmp624 = simd_and(tmp612, bytetest_b1_b1);
        struct_Ll.cc = simd_or(tmp624, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b1 = simd_and(bytetest_b0_bf, tmp42);
        bytetest_b3_b4 = simd_and(bytetest_b0_b7, tmp285);
        tmp625 = simd_and(tmp612, bytetest_b3_b4);
        struct_Ll.cc = simd_or(tmp625, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b1 = simd_and(bytetest_b0_bf, tmp42);
        tmp626 = simd_not(basis_bits.bit_5);
        tmp627 = simd_or(simd_and(basis_bits.bit_4, tmp626), simd_andc(tmp503, basis_bits.bit_4));
        bytetest_b6_bb = simd_and(bytetest_b0_bf, tmp627);
        tmp628 = simd_and(tmp612, bytetest_b6_bb);
        struct_Ll.cc = simd_or(tmp628, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp15);
        bytetest_81_81 = simd_and(tmp41, tmp42);
        tmp629 = simd_and(tmp593, bytetest_b2);
        carryQ.cq[38] = carryout2carry(pablo_blk_Advance(tmp629, carryQ.get_carry_in(38), tmp630));
        tmp631 = simd_and(tmp630, bytetest_81_81);
        struct_Ll.cc = simd_or(tmp631, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp15);
        bytetest_83_83 = simd_and(tmp41, tmp27);
        tmp632 = simd_and(tmp630, bytetest_83_83);
        struct_Ll.cc = simd_or(tmp632, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp15);
        bytetest_85_85 = simd_and(tmp41, tmp21);
        tmp633 = simd_and(tmp630, bytetest_85_85);
        struct_Ll.cc = simd_or(tmp633, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp15);
        bytetest_87_87 = simd_and(tmp41, tmp48);
        tmp634 = simd_and(tmp630, bytetest_87_87);
        struct_Ll.cc = simd_or(tmp634, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp15);
        bytetest_89_89 = simd_and(tmp41, tmp51);
        tmp635 = simd_and(tmp630, bytetest_89_89);
        struct_Ll.cc = simd_or(tmp635, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp15);
        bytetest_8b_8b = simd_and(tmp41, tmp53);
        tmp636 = simd_and(tmp630, bytetest_8b_8b);
        struct_Ll.cc = simd_or(tmp636, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp15);
        bytetest_8d_8d = simd_and(tmp41, tmp55);
        tmp637 = simd_and(tmp630, bytetest_8d_8d);
        struct_Ll.cc = simd_or(tmp637, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp15);
        bytetest_8f_8f = simd_and(tmp41, tmp33);
        tmp638 = simd_and(tmp630, bytetest_8f_8f);
        struct_Ll.cc = simd_or(tmp638, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp15);
        bytetest_91_91 = simd_and(tmp59, tmp42);
        tmp639 = simd_and(tmp630, bytetest_91_91);
        struct_Ll.cc = simd_or(tmp639, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp15);
        bytetest_93_93 = simd_and(tmp59, tmp27);
        tmp640 = simd_and(tmp630, bytetest_93_93);
        struct_Ll.cc = simd_or(tmp640, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp15);
        bytetest_95_95 = simd_and(tmp59, tmp21);
        tmp641 = simd_and(tmp630, bytetest_95_95);
        struct_Ll.cc = simd_or(tmp641, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp15);
        bytetest_97_97 = simd_and(tmp59, tmp48);
        tmp642 = simd_and(tmp630, bytetest_97_97);
        struct_Ll.cc = simd_or(tmp642, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp15);
        bytetest_99_99 = simd_and(tmp59, tmp51);
        tmp643 = simd_and(tmp630, bytetest_99_99);
        struct_Ll.cc = simd_or(tmp643, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp15);
        bytetest_9b_9b = simd_and(tmp59, tmp53);
        tmp644 = simd_and(tmp630, bytetest_9b_9b);
        struct_Ll.cc = simd_or(tmp644, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp15);
        bytetest_9d_9d = simd_and(tmp59, tmp55);
        tmp645 = simd_and(tmp630, bytetest_9d_9d);
        struct_Ll.cc = simd_or(tmp645, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp15);
        bytetest_9f_9f = simd_and(tmp59, tmp33);
        tmp646 = simd_and(tmp630, bytetest_9f_9f);
        struct_Ll.cc = simd_or(tmp646, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp15);
        bytetest_a1_a1 = simd_and(tmp69, tmp42);
        tmp647 = simd_and(tmp630, bytetest_a1_a1);
        struct_Ll.cc = simd_or(tmp647, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp15);
        bytetest_a3_a3 = simd_and(tmp69, tmp27);
        tmp648 = simd_and(tmp630, bytetest_a3_a3);
        struct_Ll.cc = simd_or(tmp648, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp15);
        bytetest_a5_a5 = simd_and(tmp69, tmp21);
        tmp649 = simd_and(tmp630, bytetest_a5_a5);
        struct_Ll.cc = simd_or(tmp649, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp15);
        bytetest_a7_a7 = simd_and(tmp69, tmp48);
        tmp650 = simd_and(tmp630, bytetest_a7_a7);
        struct_Ll.cc = simd_or(tmp650, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp15);
        bytetest_a9_a9 = simd_and(tmp69, tmp51);
        tmp651 = simd_and(tmp630, bytetest_a9_a9);
        struct_Ll.cc = simd_or(tmp651, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp15);
        bytetest_ab_ab = simd_and(tmp69, tmp53);
        tmp652 = simd_and(tmp630, bytetest_ab_ab);
        struct_Ll.cc = simd_or(tmp652, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp15);
        bytetest_ad_ad = simd_and(tmp69, tmp55);
        tmp653 = simd_and(tmp630, bytetest_ad_ad);
        struct_Ll.cc = simd_or(tmp653, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp15);
        bytetest_af_af = simd_and(tmp69, tmp33);
        tmp654 = simd_and(tmp630, bytetest_af_af);
        struct_Ll.cc = simd_or(tmp654, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp15);
        bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp42);
        tmp655 = simd_and(tmp630, bytetest_b1_b1);
        struct_Ll.cc = simd_or(tmp655, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp15);
        bytetest_b3_b3 = simd_and(bytetest_b0_bf, tmp27);
        tmp656 = simd_and(tmp630, bytetest_b3_b3);
        struct_Ll.cc = simd_or(tmp656, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp15);
        bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp21);
        tmp657 = simd_and(tmp630, bytetest_b5_b5);
        struct_Ll.cc = simd_or(tmp657, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp15);
        bytetest_b7_b7 = simd_and(bytetest_b0_bf, tmp48);
        tmp658 = simd_and(tmp630, bytetest_b7_b7);
        struct_Ll.cc = simd_or(tmp658, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp15);
        bytetest_b9_b9 = simd_and(bytetest_b0_bf, tmp51);
        tmp659 = simd_and(tmp630, bytetest_b9_b9);
        struct_Ll.cc = simd_or(tmp659, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp15);
        bytetest_bb_bb = simd_and(bytetest_b0_bf, tmp53);
        tmp660 = simd_and(tmp630, bytetest_bb_bb);
        struct_Ll.cc = simd_or(tmp660, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp15);
        bytetest_bd_bd = simd_and(bytetest_b0_bf, tmp55);
        tmp661 = simd_and(tmp630, bytetest_bd_bd);
        struct_Ll.cc = simd_or(tmp661, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp15);
        bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp33);
        tmp662 = simd_and(tmp630, bytetest_bf_bf);
        struct_Ll.cc = simd_or(tmp662, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp27);
        bytetest_81_81 = simd_and(tmp41, tmp42);
        tmp663 = simd_and(tmp593, bytetest_b3);
        carryQ.cq[39] = carryout2carry(pablo_blk_Advance(tmp663, carryQ.get_carry_in(39), tmp664));
        tmp665 = simd_and(tmp664, bytetest_81_81);
        struct_Ll.cc = simd_or(tmp665, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp27);
        bytetest_83_83 = simd_and(tmp41, tmp27);
        tmp666 = simd_and(tmp664, bytetest_83_83);
        struct_Ll.cc = simd_or(tmp666, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp27);
        bytetest_85_85 = simd_and(tmp41, tmp21);
        tmp667 = simd_and(tmp664, bytetest_85_85);
        struct_Ll.cc = simd_or(tmp667, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp27);
        bytetest_87_87 = simd_and(tmp41, tmp48);
        tmp668 = simd_and(tmp664, bytetest_87_87);
        struct_Ll.cc = simd_or(tmp668, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp27);
        bytetest_89_89 = simd_and(tmp41, tmp51);
        tmp669 = simd_and(tmp664, bytetest_89_89);
        struct_Ll.cc = simd_or(tmp669, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp27);
        bytetest_8b_8b = simd_and(tmp41, tmp53);
        tmp670 = simd_and(tmp664, bytetest_8b_8b);
        struct_Ll.cc = simd_or(tmp670, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp27);
        bytetest_8d_8d = simd_and(tmp41, tmp55);
        tmp671 = simd_and(tmp664, bytetest_8d_8d);
        struct_Ll.cc = simd_or(tmp671, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp27);
        bytetest_8f_8f = simd_and(tmp41, tmp33);
        tmp672 = simd_and(tmp664, bytetest_8f_8f);
        struct_Ll.cc = simd_or(tmp672, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp27);
        bytetest_91_91 = simd_and(tmp59, tmp42);
        tmp673 = simd_and(tmp664, bytetest_91_91);
        struct_Ll.cc = simd_or(tmp673, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp27);
        bytetest_93_93 = simd_and(tmp59, tmp27);
        tmp674 = simd_and(tmp664, bytetest_93_93);
        struct_Ll.cc = simd_or(tmp674, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp27);
        bytetest_95_95 = simd_and(tmp59, tmp21);
        tmp675 = simd_and(tmp664, bytetest_95_95);
        struct_Ll.cc = simd_or(tmp675, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp27);
        bytetest_97_97 = simd_and(tmp59, tmp48);
        tmp676 = simd_and(tmp664, bytetest_97_97);
        struct_Ll.cc = simd_or(tmp676, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp27);
        bytetest_99_99 = simd_and(tmp59, tmp51);
        tmp677 = simd_and(tmp664, bytetest_99_99);
        struct_Ll.cc = simd_or(tmp677, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp27);
        bytetest_9b_9b = simd_and(tmp59, tmp53);
        tmp678 = simd_and(tmp664, bytetest_9b_9b);
        struct_Ll.cc = simd_or(tmp678, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp27);
        bytetest_9d_9d = simd_and(tmp59, tmp55);
        tmp679 = simd_and(tmp664, bytetest_9d_9d);
        struct_Ll.cc = simd_or(tmp679, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp27);
        bytetest_9f_9f = simd_and(tmp59, tmp33);
        tmp680 = simd_and(tmp664, bytetest_9f_9f);
        struct_Ll.cc = simd_or(tmp680, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp27);
        bytetest_a1_a1 = simd_and(tmp69, tmp42);
        tmp681 = simd_and(tmp664, bytetest_a1_a1);
        struct_Ll.cc = simd_or(tmp681, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp27);
        bytetest_a3_a4 = simd_and(bytetest_a0_a7, tmp285);
        tmp682 = simd_and(tmp664, bytetest_a3_a4);
        struct_Ll.cc = simd_or(tmp682, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp27);
        bytetest_ac_ac = simd_and(tmp69, tmp87);
        tmp683 = simd_and(tmp664, bytetest_ac_ac);
        struct_Ll.cc = simd_or(tmp683, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp27);
        bytetest_ae_ae = simd_and(tmp69, tmp89);
        tmp684 = simd_and(tmp664, bytetest_ae_ae);
        struct_Ll.cc = simd_or(tmp684, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp27);
        bytetest_b3_b3 = simd_and(bytetest_b0_bf, tmp27);
        tmp685 = simd_and(tmp664, bytetest_b3_b3);
        struct_Ll.cc = simd_or(tmp685, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b4 = simd_and(bytetest_b0_bf, tmp40);
        tmp686 = simd_or(basis_bits.bit_4, tmp503);
        tmp687 = simd_or(basis_bits.bit_3, tmp686);
        tmp688 = simd_and(basis_bits.bit_2, tmp687);
        bytetest_80_a5 = simd_andc(tmp16, tmp688);
        tmp689 = simd_and(tmp593, bytetest_b4);
        carryQ.cq[40] = carryout2carry(pablo_blk_Advance(tmp689, carryQ.get_carry_in(40), tmp690));
        tmp691 = simd_and(tmp690, bytetest_80_a5);
        struct_Ll.cc = simd_or(tmp691, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b4 = simd_and(bytetest_b0_bf, tmp40);
        bytetest_a7_a7 = simd_and(tmp69, tmp48);
        tmp692 = simd_and(tmp690, bytetest_a7_a7);
        struct_Ll.cc = simd_or(tmp692, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b4 = simd_and(bytetest_b0_bf, tmp40);
        bytetest_ad_ad = simd_and(tmp69, tmp55);
        tmp693 = simd_and(tmp690, bytetest_ad_ad);
        struct_Ll.cc = simd_or(tmp693, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_99 = simd_and(tmp59, tmp51);
        bytetest_81_81 = simd_and(tmp41, tmp42);
        tmp694 = simd_and(tmp23, bytetest_ea);
        carryQ.cq[41] = carryout2carry(pablo_blk_Advance(tmp694, carryQ.get_carry_in(41), tmp695));
        tmp696 = simd_and(tmp695, bytetest_99);
        carryQ.cq[42] = carryout2carry(pablo_blk_Advance(tmp696, carryQ.get_carry_in(42), tmp697));
        tmp698 = simd_and(tmp697, bytetest_81_81);
        struct_Ll.cc = simd_or(tmp698, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_99 = simd_and(tmp59, tmp51);
        bytetest_83_83 = simd_and(tmp41, tmp27);
        tmp699 = simd_and(tmp697, bytetest_83_83);
        struct_Ll.cc = simd_or(tmp699, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_99 = simd_and(tmp59, tmp51);
        bytetest_85_85 = simd_and(tmp41, tmp21);
        tmp700 = simd_and(tmp697, bytetest_85_85);
        struct_Ll.cc = simd_or(tmp700, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_99 = simd_and(tmp59, tmp51);
        bytetest_87_87 = simd_and(tmp41, tmp48);
        tmp701 = simd_and(tmp697, bytetest_87_87);
        struct_Ll.cc = simd_or(tmp701, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_99 = simd_and(tmp59, tmp51);
        bytetest_89_89 = simd_and(tmp41, tmp51);
        tmp702 = simd_and(tmp697, bytetest_89_89);
        struct_Ll.cc = simd_or(tmp702, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_99 = simd_and(tmp59, tmp51);
        bytetest_8b_8b = simd_and(tmp41, tmp53);
        tmp703 = simd_and(tmp697, bytetest_8b_8b);
        struct_Ll.cc = simd_or(tmp703, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_99 = simd_and(tmp59, tmp51);
        bytetest_8d_8d = simd_and(tmp41, tmp55);
        tmp704 = simd_and(tmp697, bytetest_8d_8d);
        struct_Ll.cc = simd_or(tmp704, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_99 = simd_and(tmp59, tmp51);
        bytetest_8f_8f = simd_and(tmp41, tmp33);
        tmp705 = simd_and(tmp697, bytetest_8f_8f);
        struct_Ll.cc = simd_or(tmp705, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_99 = simd_and(tmp59, tmp51);
        bytetest_91_91 = simd_and(tmp59, tmp42);
        tmp706 = simd_and(tmp697, bytetest_91_91);
        struct_Ll.cc = simd_or(tmp706, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_99 = simd_and(tmp59, tmp51);
        bytetest_93_93 = simd_and(tmp59, tmp27);
        tmp707 = simd_and(tmp697, bytetest_93_93);
        struct_Ll.cc = simd_or(tmp707, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_99 = simd_and(tmp59, tmp51);
        bytetest_95_95 = simd_and(tmp59, tmp21);
        tmp708 = simd_and(tmp697, bytetest_95_95);
        struct_Ll.cc = simd_or(tmp708, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_99 = simd_and(tmp59, tmp51);
        bytetest_97_97 = simd_and(tmp59, tmp48);
        tmp709 = simd_and(tmp697, bytetest_97_97);
        struct_Ll.cc = simd_or(tmp709, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_99 = simd_and(tmp59, tmp51);
        bytetest_99_99 = simd_and(tmp59, tmp51);
        tmp710 = simd_and(tmp697, bytetest_99_99);
        struct_Ll.cc = simd_or(tmp710, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_99 = simd_and(tmp59, tmp51);
        bytetest_9b_9b = simd_and(tmp59, tmp53);
        tmp711 = simd_and(tmp697, bytetest_9b_9b);
        struct_Ll.cc = simd_or(tmp711, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_99 = simd_and(tmp59, tmp51);
        bytetest_9d_9d = simd_and(tmp59, tmp55);
        tmp712 = simd_and(tmp697, bytetest_9d_9d);
        struct_Ll.cc = simd_or(tmp712, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_99 = simd_and(tmp59, tmp51);
        bytetest_9f_9f = simd_and(tmp59, tmp33);
        tmp713 = simd_and(tmp697, bytetest_9f_9f);
        struct_Ll.cc = simd_or(tmp713, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_99 = simd_and(tmp59, tmp51);
        bytetest_a1_a1 = simd_and(tmp69, tmp42);
        tmp714 = simd_and(tmp697, bytetest_a1_a1);
        struct_Ll.cc = simd_or(tmp714, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_99 = simd_and(tmp59, tmp51);
        bytetest_a3_a3 = simd_and(tmp69, tmp27);
        tmp715 = simd_and(tmp697, bytetest_a3_a3);
        struct_Ll.cc = simd_or(tmp715, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_99 = simd_and(tmp59, tmp51);
        bytetest_a5_a5 = simd_and(tmp69, tmp21);
        tmp716 = simd_and(tmp697, bytetest_a5_a5);
        struct_Ll.cc = simd_or(tmp716, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_99 = simd_and(tmp59, tmp51);
        bytetest_a7_a7 = simd_and(tmp69, tmp48);
        tmp717 = simd_and(tmp697, bytetest_a7_a7);
        struct_Ll.cc = simd_or(tmp717, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_99 = simd_and(tmp59, tmp51);
        bytetest_a9_a9 = simd_and(tmp69, tmp51);
        tmp718 = simd_and(tmp697, bytetest_a9_a9);
        struct_Ll.cc = simd_or(tmp718, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_99 = simd_and(tmp59, tmp51);
        bytetest_ab_ab = simd_and(tmp69, tmp53);
        tmp719 = simd_and(tmp697, bytetest_ab_ab);
        struct_Ll.cc = simd_or(tmp719, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_99 = simd_and(tmp59, tmp51);
        bytetest_ad_ad = simd_and(tmp69, tmp55);
        tmp720 = simd_and(tmp697, bytetest_ad_ad);
        struct_Ll.cc = simd_or(tmp720, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9a = simd_and(tmp59, tmp85);
        bytetest_81_81 = simd_and(tmp41, tmp42);
        tmp721 = simd_and(tmp695, bytetest_9a);
        carryQ.cq[43] = carryout2carry(pablo_blk_Advance(tmp721, carryQ.get_carry_in(43), tmp722));
        tmp723 = simd_and(tmp722, bytetest_81_81);
        struct_Ll.cc = simd_or(tmp723, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9a = simd_and(tmp59, tmp85);
        bytetest_83_83 = simd_and(tmp41, tmp27);
        tmp724 = simd_and(tmp722, bytetest_83_83);
        struct_Ll.cc = simd_or(tmp724, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9a = simd_and(tmp59, tmp85);
        bytetest_85_85 = simd_and(tmp41, tmp21);
        tmp725 = simd_and(tmp722, bytetest_85_85);
        struct_Ll.cc = simd_or(tmp725, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9a = simd_and(tmp59, tmp85);
        bytetest_87_87 = simd_and(tmp41, tmp48);
        tmp726 = simd_and(tmp722, bytetest_87_87);
        struct_Ll.cc = simd_or(tmp726, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9a = simd_and(tmp59, tmp85);
        bytetest_89_89 = simd_and(tmp41, tmp51);
        tmp727 = simd_and(tmp722, bytetest_89_89);
        struct_Ll.cc = simd_or(tmp727, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9a = simd_and(tmp59, tmp85);
        bytetest_8b_8b = simd_and(tmp41, tmp53);
        tmp728 = simd_and(tmp722, bytetest_8b_8b);
        struct_Ll.cc = simd_or(tmp728, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9a = simd_and(tmp59, tmp85);
        bytetest_8d_8d = simd_and(tmp41, tmp55);
        tmp729 = simd_and(tmp722, bytetest_8d_8d);
        struct_Ll.cc = simd_or(tmp729, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9a = simd_and(tmp59, tmp85);
        bytetest_8f_8f = simd_and(tmp41, tmp33);
        tmp730 = simd_and(tmp722, bytetest_8f_8f);
        struct_Ll.cc = simd_or(tmp730, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9a = simd_and(tmp59, tmp85);
        bytetest_91_91 = simd_and(tmp59, tmp42);
        tmp731 = simd_and(tmp722, bytetest_91_91);
        struct_Ll.cc = simd_or(tmp731, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9a = simd_and(tmp59, tmp85);
        bytetest_93_93 = simd_and(tmp59, tmp27);
        tmp732 = simd_and(tmp722, bytetest_93_93);
        struct_Ll.cc = simd_or(tmp732, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9a = simd_and(tmp59, tmp85);
        bytetest_95_95 = simd_and(tmp59, tmp21);
        tmp733 = simd_and(tmp722, bytetest_95_95);
        struct_Ll.cc = simd_or(tmp733, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9a = simd_and(tmp59, tmp85);
        bytetest_97_97 = simd_and(tmp59, tmp48);
        tmp734 = simd_and(tmp722, bytetest_97_97);
        struct_Ll.cc = simd_or(tmp734, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9c = simd_and(tmp59, tmp87);
        bytetest_a3_a3 = simd_and(tmp69, tmp27);
        tmp735 = simd_and(tmp695, bytetest_9c);
        carryQ.cq[44] = carryout2carry(pablo_blk_Advance(tmp735, carryQ.get_carry_in(44), tmp736));
        tmp737 = simd_and(tmp736, bytetest_a3_a3);
        struct_Ll.cc = simd_or(tmp737, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9c = simd_and(tmp59, tmp87);
        bytetest_a5_a5 = simd_and(tmp69, tmp21);
        tmp738 = simd_and(tmp736, bytetest_a5_a5);
        struct_Ll.cc = simd_or(tmp738, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9c = simd_and(tmp59, tmp87);
        bytetest_a7_a7 = simd_and(tmp69, tmp48);
        tmp739 = simd_and(tmp736, bytetest_a7_a7);
        struct_Ll.cc = simd_or(tmp739, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9c = simd_and(tmp59, tmp87);
        bytetest_a9_a9 = simd_and(tmp69, tmp51);
        tmp740 = simd_and(tmp736, bytetest_a9_a9);
        struct_Ll.cc = simd_or(tmp740, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9c = simd_and(tmp59, tmp87);
        bytetest_ab_ab = simd_and(tmp69, tmp53);
        tmp741 = simd_and(tmp736, bytetest_ab_ab);
        struct_Ll.cc = simd_or(tmp741, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9c = simd_and(tmp59, tmp87);
        bytetest_ad_ad = simd_and(tmp69, tmp55);
        tmp742 = simd_and(tmp736, bytetest_ad_ad);
        struct_Ll.cc = simd_or(tmp742, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9c = simd_and(tmp59, tmp87);
        tmp743 = simd_not(tmp264);
        tmp744 = simd_or(simd_and(basis_bits.bit_3, tmp743), simd_andc(tmp33, basis_bits.bit_3));
        bytetest_af_b1 = simd_and(tmp179, tmp744);
        tmp745 = simd_and(tmp736, bytetest_af_b1);
        struct_Ll.cc = simd_or(tmp745, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9c = simd_and(tmp59, tmp87);
        bytetest_b3_b3 = simd_and(bytetest_b0_bf, tmp27);
        tmp746 = simd_and(tmp736, bytetest_b3_b3);
        struct_Ll.cc = simd_or(tmp746, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9c = simd_and(tmp59, tmp87);
        bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp21);
        tmp747 = simd_and(tmp736, bytetest_b5_b5);
        struct_Ll.cc = simd_or(tmp747, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9c = simd_and(tmp59, tmp87);
        bytetest_b7_b7 = simd_and(bytetest_b0_bf, tmp48);
        tmp748 = simd_and(tmp736, bytetest_b7_b7);
        struct_Ll.cc = simd_or(tmp748, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9c = simd_and(tmp59, tmp87);
        bytetest_b9_b9 = simd_and(bytetest_b0_bf, tmp51);
        tmp749 = simd_and(tmp736, bytetest_b9_b9);
        struct_Ll.cc = simd_or(tmp749, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9c = simd_and(tmp59, tmp87);
        bytetest_bb_bb = simd_and(bytetest_b0_bf, tmp53);
        tmp750 = simd_and(tmp736, bytetest_bb_bb);
        struct_Ll.cc = simd_or(tmp750, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9c = simd_and(tmp59, tmp87);
        bytetest_bd_bd = simd_and(bytetest_b0_bf, tmp55);
        tmp751 = simd_and(tmp736, bytetest_bd_bd);
        struct_Ll.cc = simd_or(tmp751, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9c = simd_and(tmp59, tmp87);
        bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp33);
        tmp752 = simd_and(tmp736, bytetest_bf_bf);
        struct_Ll.cc = simd_or(tmp752, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_81_81 = simd_and(tmp41, tmp42);
        tmp753 = simd_and(tmp695, bytetest_9d);
        carryQ.cq[45] = carryout2carry(pablo_blk_Advance(tmp753, carryQ.get_carry_in(45), tmp754));
        tmp755 = simd_and(tmp754, bytetest_81_81);
        struct_Ll.cc = simd_or(tmp755, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_83_83 = simd_and(tmp41, tmp27);
        tmp756 = simd_and(tmp754, bytetest_83_83);
        struct_Ll.cc = simd_or(tmp756, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_85_85 = simd_and(tmp41, tmp21);
        tmp757 = simd_and(tmp754, bytetest_85_85);
        struct_Ll.cc = simd_or(tmp757, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_87_87 = simd_and(tmp41, tmp48);
        tmp758 = simd_and(tmp754, bytetest_87_87);
        struct_Ll.cc = simd_or(tmp758, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_89_89 = simd_and(tmp41, tmp51);
        tmp759 = simd_and(tmp754, bytetest_89_89);
        struct_Ll.cc = simd_or(tmp759, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_8b_8b = simd_and(tmp41, tmp53);
        tmp760 = simd_and(tmp754, bytetest_8b_8b);
        struct_Ll.cc = simd_or(tmp760, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_8d_8d = simd_and(tmp41, tmp55);
        tmp761 = simd_and(tmp754, bytetest_8d_8d);
        struct_Ll.cc = simd_or(tmp761, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_8f_8f = simd_and(tmp41, tmp33);
        tmp762 = simd_and(tmp754, bytetest_8f_8f);
        struct_Ll.cc = simd_or(tmp762, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_91_91 = simd_and(tmp59, tmp42);
        tmp763 = simd_and(tmp754, bytetest_91_91);
        struct_Ll.cc = simd_or(tmp763, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_93_93 = simd_and(tmp59, tmp27);
        tmp764 = simd_and(tmp754, bytetest_93_93);
        struct_Ll.cc = simd_or(tmp764, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_95_95 = simd_and(tmp59, tmp21);
        tmp765 = simd_and(tmp754, bytetest_95_95);
        struct_Ll.cc = simd_or(tmp765, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_97_97 = simd_and(tmp59, tmp48);
        tmp766 = simd_and(tmp754, bytetest_97_97);
        struct_Ll.cc = simd_or(tmp766, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_99_99 = simd_and(tmp59, tmp51);
        tmp767 = simd_and(tmp754, bytetest_99_99);
        struct_Ll.cc = simd_or(tmp767, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_9b_9b = simd_and(tmp59, tmp53);
        tmp768 = simd_and(tmp754, bytetest_9b_9b);
        struct_Ll.cc = simd_or(tmp768, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_9d_9d = simd_and(tmp59, tmp55);
        tmp769 = simd_and(tmp754, bytetest_9d_9d);
        struct_Ll.cc = simd_or(tmp769, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_9f_9f = simd_and(tmp59, tmp33);
        tmp770 = simd_and(tmp754, bytetest_9f_9f);
        struct_Ll.cc = simd_or(tmp770, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_a1_a1 = simd_and(tmp69, tmp42);
        tmp771 = simd_and(tmp754, bytetest_a1_a1);
        struct_Ll.cc = simd_or(tmp771, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_a3_a3 = simd_and(tmp69, tmp27);
        tmp772 = simd_and(tmp754, bytetest_a3_a3);
        struct_Ll.cc = simd_or(tmp772, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_a5_a5 = simd_and(tmp69, tmp21);
        tmp773 = simd_and(tmp754, bytetest_a5_a5);
        struct_Ll.cc = simd_or(tmp773, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_a7_a7 = simd_and(tmp69, tmp48);
        tmp774 = simd_and(tmp754, bytetest_a7_a7);
        struct_Ll.cc = simd_or(tmp774, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_a9_a9 = simd_and(tmp69, tmp51);
        tmp775 = simd_and(tmp754, bytetest_a9_a9);
        struct_Ll.cc = simd_or(tmp775, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_ab_ab = simd_and(tmp69, tmp53);
        tmp776 = simd_and(tmp754, bytetest_ab_ab);
        struct_Ll.cc = simd_or(tmp776, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_ad_ad = simd_and(tmp69, tmp55);
        tmp777 = simd_and(tmp754, bytetest_ad_ad);
        struct_Ll.cc = simd_or(tmp777, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_af_af = simd_and(tmp69, tmp33);
        tmp778 = simd_and(tmp754, bytetest_af_af);
        struct_Ll.cc = simd_or(tmp778, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9d = simd_and(tmp59, tmp55);
        tmp779 = simd_or(simd_and(basis_bits.bit_4, tmp82), simd_andc(tmp81, basis_bits.bit_4));
        bytetest_b1_b8 = simd_and(bytetest_b0_bf, tmp779);
        tmp780 = simd_and(tmp754, bytetest_b1_b8);
        struct_Ll.cc = simd_or(tmp780, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_ba_ba = simd_and(bytetest_b0_bf, tmp85);
        tmp781 = simd_and(tmp754, bytetest_ba_ba);
        struct_Ll.cc = simd_or(tmp781, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_bc_bc = simd_and(bytetest_b0_bf, tmp87);
        tmp782 = simd_and(tmp754, bytetest_bc_bc);
        struct_Ll.cc = simd_or(tmp782, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp33);
        tmp783 = simd_and(tmp754, bytetest_bf_bf);
        struct_Ll.cc = simd_or(tmp783, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9e = simd_and(tmp59, tmp89);
        bytetest_81_81 = simd_and(tmp41, tmp42);
        tmp784 = simd_and(tmp695, bytetest_9e);
        carryQ.cq[46] = carryout2carry(pablo_blk_Advance(tmp784, carryQ.get_carry_in(46), tmp785));
        tmp786 = simd_and(tmp785, bytetest_81_81);
        struct_Ll.cc = simd_or(tmp786, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9e = simd_and(tmp59, tmp89);
        bytetest_83_83 = simd_and(tmp41, tmp27);
        tmp787 = simd_and(tmp785, bytetest_83_83);
        struct_Ll.cc = simd_or(tmp787, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9e = simd_and(tmp59, tmp89);
        bytetest_85_85 = simd_and(tmp41, tmp21);
        tmp788 = simd_and(tmp785, bytetest_85_85);
        struct_Ll.cc = simd_or(tmp788, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9e = simd_and(tmp59, tmp89);
        bytetest_87_87 = simd_and(tmp41, tmp48);
        tmp789 = simd_and(tmp785, bytetest_87_87);
        struct_Ll.cc = simd_or(tmp789, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9e = simd_and(tmp59, tmp89);
        bytetest_8c_8c = simd_and(tmp41, tmp87);
        tmp790 = simd_and(tmp785, bytetest_8c_8c);
        struct_Ll.cc = simd_or(tmp790, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9e = simd_and(tmp59, tmp89);
        bytetest_8e_8e = simd_and(tmp41, tmp89);
        tmp791 = simd_and(tmp785, bytetest_8e_8e);
        struct_Ll.cc = simd_or(tmp791, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9e = simd_and(tmp59, tmp89);
        bytetest_91_91 = simd_and(tmp59, tmp42);
        tmp792 = simd_and(tmp785, bytetest_91_91);
        struct_Ll.cc = simd_or(tmp792, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9e = simd_and(tmp59, tmp89);
        bytetest_93_93 = simd_and(tmp59, tmp27);
        tmp793 = simd_and(tmp785, bytetest_93_93);
        struct_Ll.cc = simd_or(tmp793, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9e = simd_and(tmp59, tmp89);
        bytetest_a1_a1 = simd_and(tmp69, tmp42);
        tmp794 = simd_and(tmp785, bytetest_a1_a1);
        struct_Ll.cc = simd_or(tmp794, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9e = simd_and(tmp59, tmp89);
        bytetest_a3_a3 = simd_and(tmp69, tmp27);
        tmp795 = simd_and(tmp785, bytetest_a3_a3);
        struct_Ll.cc = simd_or(tmp795, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9e = simd_and(tmp59, tmp89);
        bytetest_a5_a5 = simd_and(tmp69, tmp21);
        tmp796 = simd_and(tmp785, bytetest_a5_a5);
        struct_Ll.cc = simd_or(tmp796, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9e = simd_and(tmp59, tmp89);
        bytetest_a7_a7 = simd_and(tmp69, tmp48);
        tmp797 = simd_and(tmp785, bytetest_a7_a7);
        struct_Ll.cc = simd_or(tmp797, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9e = simd_and(tmp59, tmp89);
        bytetest_a9_a9 = simd_and(tmp69, tmp51);
        tmp798 = simd_and(tmp785, bytetest_a9_a9);
        struct_Ll.cc = simd_or(tmp798, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9f = simd_and(tmp59, tmp33);
        bytetest_ba_ba = simd_and(bytetest_b0_bf, tmp85);
        tmp799 = simd_and(tmp695, bytetest_9f);
        carryQ.cq[47] = carryout2carry(pablo_blk_Advance(tmp799, carryQ.get_carry_in(47), tmp800));
        tmp801 = simd_and(tmp800, bytetest_ba_ba);
        struct_Ll.cc = simd_or(tmp801, struct_Ll.cc);
        bytetest_ef = simd_and(tmp404, tmp33);
        bytetest_ac = simd_and(tmp69, tmp87);
        bytetest_80_86 = simd_andc(bytetest_80_87, tmp28);
        tmp802 = simd_and(tmp23, bytetest_ef);
        carryQ.cq[48] = carryout2carry(pablo_blk_Advance(tmp802, carryQ.get_carry_in(48), tmp803));
        tmp804 = simd_and(tmp803, bytetest_ac);
        carryQ.cq[49] = carryout2carry(pablo_blk_Advance(tmp804, carryQ.get_carry_in(49), tmp805));
        tmp806 = simd_and(tmp805, bytetest_80_86);
        struct_Ll.cc = simd_or(tmp806, struct_Ll.cc);
        bytetest_ef = simd_and(tmp404, tmp33);
        bytetest_ac = simd_and(tmp69, tmp87);
        bytetest_93_97 = simd_and(bytetest_90_97, tmp4);
        tmp807 = simd_and(tmp805, bytetest_93_97);
        struct_Ll.cc = simd_or(tmp807, struct_Ll.cc);
        bytetest_ef = simd_and(tmp404, tmp33);
        bytetest_bd = simd_and(bytetest_b0_bf, tmp55);
        bytetest_81_9a = simd_and(bytetest_80_9f, tmp10);
        tmp808 = simd_and(tmp803, bytetest_bd);
        carryQ.cq[50] = carryout2carry(pablo_blk_Advance(tmp808, carryQ.get_carry_in(50), tmp809));
        tmp810 = simd_and(tmp809, bytetest_81_9a);
        struct_Ll.cc = simd_or(tmp810, struct_Ll.cc);
        tmp811 = simd_and(tmp11, tmp17);
        bytetest_f0 = simd_andc(tmp811, tmp9);
        bytetest_90 = simd_andc(tmp59, tmp9);
        bytetest_91 = simd_and(tmp59, tmp42);
        bytetest_80_8f = simd_andc(tmp16, tmp12);
        tmp812 = simd_and(tmp23, bytetest_f0);
        carryQ.cq[51] = carryout2carry(pablo_blk_Advance(tmp812, carryQ.get_carry_in(51), tmp813));
        tmp814 = simd_and(tmp813, bytetest_90);
        carryQ.cq[52] = carryout2carry(pablo_blk_Advance(tmp814, carryQ.get_carry_in(52), tmp815));
        tmp816 = simd_and(tmp815, bytetest_91);
        carryQ.cq[53] = carryout2carry(pablo_blk_Advance(tmp816, carryQ.get_carry_in(53), tmp817));
        tmp818 = simd_and(tmp817, bytetest_80_8f);
        bytetest_90 = simd_andc(tmp59, tmp9);
        tmp819 = simd_or(basis_bits.bit_3, basis_bits.bit_4);
        bytetest_a8_bf = simd_and(tmp179, tmp819);
        tmp820 = simd_and(tmp815, bytetest_90);
        carryQ.cq[54] = carryout2carry(pablo_blk_Advance(tmp820, carryQ.get_carry_in(54), tmp821));
        tmp822 = simd_and(tmp821, bytetest_a8_bf);
        tmp823 = simd_or(tmp822, tmp818);
        struct_Ll.cc = simd_or(tmp823, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp811, tmp9);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_90 = simd_andc(tmp59, tmp9);
        tmp824 = simd_not(tmp232);
        tmp825 = simd_and(basis_bits.bit_4, tmp216);
        tmp826 = simd_and(basis_bits.bit_3, tmp825);
        tmp827 = simd_or(simd_and(basis_bits.bit_2, tmp824), simd_andc(tmp826, basis_bits.bit_2));
        bytetest_9a_b3 = simd_and(tmp16, tmp827);
        tmp828 = simd_and(tmp813, bytetest_9d);
        carryQ.cq[55] = carryout2carry(pablo_blk_Advance(tmp828, carryQ.get_carry_in(55), tmp829));
        tmp830 = simd_and(tmp829, bytetest_90);
        carryQ.cq[56] = carryout2carry(pablo_blk_Advance(tmp830, carryQ.get_carry_in(56), tmp831));
        tmp832 = simd_and(tmp831, bytetest_9a_b3);
        struct_Ll.cc = simd_or(tmp832, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp811, tmp9);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_91 = simd_and(tmp59, tmp42);
        tmp833 = simd_not(tmp242);
        tmp834 = simd_or(simd_and(basis_bits.bit_3, tmp833), simd_andc(tmp128, basis_bits.bit_3));
        bytetest_8e_94 = simd_and(bytetest_80_9f, tmp834);
        tmp835 = simd_and(tmp829, bytetest_91);
        carryQ.cq[57] = carryout2carry(pablo_blk_Advance(tmp835, carryQ.get_carry_in(57), tmp836));
        tmp837 = simd_and(tmp836, bytetest_8e_94);
        struct_Ll.cc = simd_or(tmp837, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp811, tmp9);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_91 = simd_and(tmp59, tmp42);
        tmp838 = simd_not(tmp819);
        tmp839 = simd_and(basis_bits.bit_3, tmp686);
        tmp840 = simd_or(simd_and(basis_bits.bit_2, tmp838), simd_andc(tmp839, basis_bits.bit_2));
        bytetest_96_a7 = simd_and(tmp16, tmp840);
        tmp841 = simd_and(tmp836, bytetest_96_a7);
        struct_Ll.cc = simd_or(tmp841, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp811, tmp9);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_92 = simd_and(tmp59, tmp15);
        tmp842 = simd_not(tmp32);
        tmp843 = simd_or(simd_and(basis_bits.bit_3, tmp842), simd_andc(tmp264, basis_bits.bit_3));
        bytetest_82_9b = simd_and(bytetest_80_9f, tmp843);
        tmp844 = simd_and(tmp829, bytetest_92);
        carryQ.cq[58] = carryout2carry(pablo_blk_Advance(tmp844, carryQ.get_carry_in(58), tmp845));
        tmp846 = simd_and(tmp845, bytetest_82_9b);
        struct_Ll.cc = simd_or(tmp846, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp811, tmp9);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_92 = simd_and(tmp59, tmp15);
        bytetest_b6_b9 = simd_and(bytetest_b0_bf, tmp603);
        tmp847 = simd_and(tmp845, bytetest_b6_b9);
        struct_Ll.cc = simd_or(tmp847, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp811, tmp9);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_92 = simd_and(tmp59, tmp15);
        bytetest_bb_bb = simd_and(bytetest_b0_bf, tmp53);
        tmp848 = simd_and(tmp845, bytetest_bb_bb);
        struct_Ll.cc = simd_or(tmp848, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp811, tmp9);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_93 = simd_and(tmp59, tmp27);
        bytetest_80_83 = simd_andc(bytetest_80_8f, tmp7);
        tmp849 = simd_and(tmp829, bytetest_93);
        carryQ.cq[59] = carryout2carry(pablo_blk_Advance(tmp849, carryQ.get_carry_in(59), tmp850));
        tmp851 = simd_and(tmp850, bytetest_80_83);
        bytetest_92 = simd_and(tmp59, tmp15);
        tmp852 = simd_and(bytetest_b0_bf, tmp32);
        bytetest_bd_bf = simd_and(tmp852, tmp8);
        tmp853 = simd_and(tmp845, bytetest_bd_bf);
        tmp854 = simd_or(tmp853, tmp851);
        struct_Ll.cc = simd_or(tmp854, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp811, tmp9);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_93 = simd_and(tmp59, tmp27);
        bytetest_85_8f = simd_and(bytetest_80_8f, tmp242);
        tmp855 = simd_and(tmp850, bytetest_85_8f);
        struct_Ll.cc = simd_or(tmp855, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp811, tmp9);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_94 = simd_and(tmp59, tmp40);
        bytetest_80_83 = simd_andc(bytetest_80_8f, tmp7);
        tmp856 = simd_and(tmp829, bytetest_94);
        carryQ.cq[60] = carryout2carry(pablo_blk_Advance(tmp856, carryQ.get_carry_in(60), tmp857));
        tmp858 = simd_and(tmp857, bytetest_80_83);
        bytetest_93 = simd_and(tmp59, tmp27);
        tmp859 = simd_or(basis_bits.bit_3, tmp825);
        bytetest_aa_bf = simd_and(tmp179, tmp859);
        tmp860 = simd_and(tmp850, bytetest_aa_bf);
        tmp861 = simd_or(tmp860, tmp858);
        struct_Ll.cc = simd_or(tmp861, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp811, tmp9);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_94 = simd_and(tmp59, tmp40);
        tmp862 = simd_and(basis_bits.bit_3, basis_bits.bit_4);
        tmp863 = simd_not(tmp862);
        tmp864 = simd_and(basis_bits.bit_3, tmp128);
        tmp865 = simd_or(simd_and(basis_bits.bit_2, tmp863), simd_andc(tmp864, basis_bits.bit_2));
        bytetest_9e_b7 = simd_and(tmp16, tmp865);
        tmp866 = simd_and(tmp857, bytetest_9e_b7);
        struct_Ll.cc = simd_or(tmp866, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp811, tmp9);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_95 = simd_and(tmp59, tmp21);
        tmp867 = simd_not(tmp261);
        tmp868 = simd_and(basis_bits.bit_3, tmp264);
        tmp869 = simd_or(simd_and(basis_bits.bit_2, tmp867), simd_andc(tmp868, basis_bits.bit_2));
        bytetest_92_ab = simd_and(tmp16, tmp869);
        tmp870 = simd_and(tmp829, bytetest_95);
        carryQ.cq[61] = carryout2carry(pablo_blk_Advance(tmp870, carryQ.get_carry_in(61), tmp871));
        tmp872 = simd_and(tmp871, bytetest_92_ab);
        struct_Ll.cc = simd_or(tmp872, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp811, tmp9);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_96 = simd_and(tmp59, tmp96);
        bytetest_86_9f = simd_and(bytetest_80_9f, tmp687);
        tmp873 = simd_and(tmp829, bytetest_96);
        carryQ.cq[62] = carryout2carry(pablo_blk_Advance(tmp873, carryQ.get_carry_in(62), tmp874));
        tmp875 = simd_and(tmp874, bytetest_86_9f);
        struct_Ll.cc = simd_or(tmp875, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp811, tmp9);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_97 = simd_and(tmp59, tmp48);
        bytetest_80_93 = simd_andc(bytetest_80_9f, tmp232);
        tmp876 = simd_and(tmp829, bytetest_97);
        carryQ.cq[63] = carryout2carry(pablo_blk_Advance(tmp876, carryQ.get_carry_in(63), tmp877));
        tmp878 = simd_and(tmp877, bytetest_80_93);
        bytetest_96 = simd_and(tmp59, tmp96);
        bytetest_ba_bf = simd_and(tmp420, tmp216);
        tmp879 = simd_and(tmp874, bytetest_ba_bf);
        tmp880 = simd_or(tmp879, tmp878);
        struct_Ll.cc = simd_or(tmp880, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp811, tmp9);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_98 = simd_and(tmp59, tmp133);
        bytetest_80_87 = simd_andc(bytetest_80_8f, basis_bits.bit_4);
        tmp881 = simd_and(tmp829, bytetest_98);
        carryQ.cq[64] = carryout2carry(pablo_blk_Advance(tmp881, carryQ.get_carry_in(64), tmp882));
        tmp883 = simd_and(tmp882, bytetest_80_87);
        bytetest_97 = simd_and(tmp59, tmp48);
        tmp884 = simd_or(basis_bits.bit_3, tmp128);
        bytetest_ae_bf = simd_and(tmp179, tmp884);
        tmp885 = simd_and(tmp877, bytetest_ae_bf);
        tmp886 = simd_or(tmp885, tmp883);
        struct_Ll.cc = simd_or(tmp886, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp811, tmp9);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_98 = simd_and(tmp59, tmp133);
        bytetest_a2_bb = simd_and(tmp179, tmp843);
        tmp887 = simd_and(tmp882, bytetest_a2_bb);
        struct_Ll.cc = simd_or(tmp887, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp811, tmp9);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_99 = simd_and(tmp59, tmp51);
        tmp888 = simd_or(simd_and(basis_bits.bit_2, tmp240), simd_andc(tmp839, basis_bits.bit_2));
        bytetest_96_af = simd_and(tmp16, tmp888);
        tmp889 = simd_and(tmp829, bytetest_99);
        carryQ.cq[65] = carryout2carry(pablo_blk_Advance(tmp889, carryQ.get_carry_in(65), tmp890));
        tmp891 = simd_and(tmp890, bytetest_96_af);
        struct_Ll.cc = simd_or(tmp891, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp811, tmp9);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_9a = simd_and(tmp59, tmp85);
        tmp892 = simd_not(tmp687);
        tmp893 = simd_or(simd_and(basis_bits.bit_2, tmp892), simd_andc(tmp859, basis_bits.bit_2));
        bytetest_8a_a5 = simd_and(tmp16, tmp893);
        tmp894 = simd_and(tmp829, bytetest_9a);
        carryQ.cq[66] = carryout2carry(pablo_blk_Advance(tmp894, carryQ.get_carry_in(66), tmp895));
        tmp896 = simd_and(tmp895, bytetest_8a_a5);
        struct_Ll.cc = simd_or(tmp896, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp811, tmp9);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_9b = simd_and(tmp59, tmp53);
        tmp897 = simd_or(simd_and(basis_bits.bit_3, tmp6), simd_andc(tmp264, basis_bits.bit_3));
        bytetest_82_9a = simd_and(bytetest_80_9f, tmp897);
        tmp898 = simd_and(tmp829, bytetest_9b);
        carryQ.cq[67] = carryout2carry(pablo_blk_Advance(tmp898, carryQ.get_carry_in(67), tmp899));
        tmp900 = simd_and(tmp899, bytetest_82_9a);
        struct_Ll.cc = simd_or(tmp900, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp811, tmp9);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_9b = simd_and(tmp59, tmp53);
        tmp901 = simd_or(basis_bits.bit_3, tmp264);
        tmp902 = simd_not(tmp901);
        tmp903 = simd_and(basis_bits.bit_3, tmp32);
        tmp904 = simd_or(simd_and(basis_bits.bit_2, tmp902), simd_andc(tmp903, basis_bits.bit_2));
        bytetest_9c_a1 = simd_and(tmp16, tmp904);
        tmp905 = simd_and(tmp899, bytetest_9c_a1);
        struct_Ll.cc = simd_or(tmp905, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp811, tmp9);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_9c = simd_and(tmp59, tmp87);
        bytetest_80_94 = simd_andc(bytetest_80_9f, tmp243);
        tmp906 = simd_and(tmp829, bytetest_9c);
        carryQ.cq[68] = carryout2carry(pablo_blk_Advance(tmp906, carryQ.get_carry_in(68), tmp907));
        tmp908 = simd_and(tmp907, bytetest_80_94);
        bytetest_9b = simd_and(tmp59, tmp53);
        bytetest_bc_bf = simd_and(bytetest_b0_bf, tmp32);
        tmp909 = simd_and(tmp899, bytetest_bc_bf);
        tmp910 = simd_or(tmp909, tmp908);
        struct_Ll.cc = simd_or(tmp910, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp811, tmp9);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_9c = simd_and(tmp59, tmp87);
        bytetest_96_9b = simd_and(tmp59, tmp627);
        tmp911 = simd_and(tmp907, bytetest_96_9b);
        struct_Ll.cc = simd_or(tmp911, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp811, tmp9);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_80_8e = simd_andc(bytetest_80_8f, tmp257);
        tmp912 = simd_and(tmp829, bytetest_9d);
        carryQ.cq[69] = carryout2carry(pablo_blk_Advance(tmp912, carryQ.get_carry_in(69), tmp913));
        tmp914 = simd_and(tmp913, bytetest_80_8e);
        bytetest_9c = simd_and(tmp59, tmp87);
        bytetest_b6_bf = simd_and(bytetest_b0_bf, tmp686);
        tmp915 = simd_and(tmp907, bytetest_b6_bf);
        tmp916 = simd_or(tmp915, tmp914);
        struct_Ll.cc = simd_or(tmp916, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp811, tmp9);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_90_95 = simd_andc(bytetest_90_97, tmp503);
        tmp917 = simd_and(tmp913, bytetest_90_95);
        struct_Ll.cc = simd_or(tmp917, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp811, tmp9);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_9e = simd_and(tmp59, tmp89);
        tmp918 = simd_and(basis_bits.bit_4, tmp81);
        bytetest_80_88 = simd_andc(bytetest_80_8f, tmp918);
        tmp919 = simd_and(tmp829, bytetest_9e);
        carryQ.cq[70] = carryout2carry(pablo_blk_Advance(tmp919, carryQ.get_carry_in(70), tmp920));
        tmp921 = simd_and(tmp920, bytetest_80_88);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_b0_bf = simd_and(tmp16, tmp17);
        tmp922 = simd_and(tmp913, bytetest_b0_bf);
        tmp923 = simd_or(tmp922, tmp921);
        struct_Ll.cc = simd_or(tmp923, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp811, tmp9);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_9e = simd_and(tmp59, tmp89);
        tmp924 = simd_and(bytetest_80_8f, basis_bits.bit_4);
        bytetest_8a_8f = simd_and(tmp924, tmp216);
        tmp925 = simd_and(tmp920, bytetest_8a_8f);
        struct_Ll.cc = simd_or(tmp925, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp811, tmp9);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_9f = simd_and(tmp59, tmp33);
        bytetest_80_82 = simd_andc(bytetest_80_83, tmp3);
        tmp926 = simd_and(tmp829, bytetest_9f);
        carryQ.cq[71] = carryout2carry(pablo_blk_Advance(tmp926, carryQ.get_carry_in(71), tmp927));
        tmp928 = simd_and(tmp927, bytetest_80_82);
        bytetest_9e = simd_and(tmp59, tmp89);
        bytetest_aa_bf = simd_and(tmp179, tmp859);
        tmp929 = simd_and(tmp920, bytetest_aa_bf);
        tmp930 = simd_or(tmp929, tmp928);
        struct_Ll.cc = simd_or(tmp930, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp811, tmp9);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_9f = simd_and(tmp59, tmp33);
        tmp931 = simd_or(simd_and(basis_bits.bit_4, tmp217), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
        bytetest_84_89 = simd_and(bytetest_80_8f, tmp931);
        tmp932 = simd_and(tmp927, bytetest_84_89);
        struct_Ll.cc = simd_or(tmp932, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp811, tmp9);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_9f = simd_and(tmp59, tmp33);
        bytetest_8b_8b = simd_and(bytetest_80_8f, tmp53);
        tmp933 = simd_and(tmp927, bytetest_8b_8b);
        struct_Ll.cc = simd_or(tmp933, struct_Ll.cc);
        carryQ.CarryQ_Adjust(72);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Ll & struct_Ll, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, tmp7, tmp8, tmp9, tmp10;
		BitBlock bytetest_61_7a, tmp11, tmp12, tmp13, tmp14, tmp15, bytetest_c2, tmp16;
		BitBlock tmp17, tmp18, tmp19, tmp20, tmp21, bytetest_b5_b5, tmp22, tmp23;
		BitBlock tmp24, tmp25, tmp26, tmp27, bytetest_c3, tmp28, tmp29, tmp30, tmp31;
		BitBlock tmp32, tmp33, tmp34, tmp35, bytetest_9f_b6, tmp36, tmp37, tmp38;
		BitBlock bytetest_b8_bf, tmp39, tmp40, bytetest_c4, tmp41, tmp42;
		BitBlock bytetest_81_81, tmp43, tmp44, tmp45, bytetest_83_83, tmp46;
		BitBlock bytetest_85_85, tmp47, tmp48, bytetest_87_87, tmp49, tmp50, tmp51;
		BitBlock bytetest_89_89, tmp52, tmp53, bytetest_8b_8b, tmp54, tmp55;
		BitBlock bytetest_8d_8d, tmp56, bytetest_8f_8f, tmp57, tmp58, tmp59;
		BitBlock bytetest_91_91, tmp60, bytetest_93_93, tmp61, bytetest_95_95, tmp62;
		BitBlock bytetest_97_97, tmp63, bytetest_99_99, tmp64, bytetest_9b_9b, tmp65;
		BitBlock bytetest_9d_9d, tmp66, bytetest_9f_9f, tmp67, tmp68, tmp69;
		BitBlock bytetest_a1_a1, tmp70, bytetest_a3_a3, tmp71, bytetest_a5_a5, tmp72;
		BitBlock bytetest_a7_a7, tmp73, bytetest_a9_a9, tmp74, bytetest_ab_ab, tmp75;
		BitBlock bytetest_ad_ad, tmp76, bytetest_af_af, tmp77, bytetest_b1_b1, tmp78;
		BitBlock bytetest_b3_b3, tmp79, tmp80, tmp81, tmp82, tmp83, bytetest_b7_b8;
		BitBlock tmp84, tmp85, bytetest_ba_ba, tmp86, tmp87, bytetest_bc_bc, tmp88;
		BitBlock tmp89, bytetest_be_be, tmp90, bytetest_c5, bytetest_80_80, tmp91;
		BitBlock tmp92, tmp93, bytetest_82_82, tmp94, bytetest_84_84, tmp95, tmp96;
		BitBlock bytetest_86_86, tmp97, tmp98, bytetest_88_89, tmp99, tmp100, tmp101;
		BitBlock tmp102, tmp103, tmp104, tmp105, tmp106, tmp107, tmp108, tmp109;
		BitBlock tmp110, tmp111, tmp112, tmp113, tmp114, tmp115, tmp116, tmp117;
		BitBlock tmp118, tmp119, tmp120, tmp121, bytetest_b7_b7, tmp122, tmp123;
		BitBlock tmp124, bytetest_c6, tmp125, tmp126, tmp127, tmp128, bytetest_be_bf;
		BitBlock tmp129, tmp130, tmp131, tmp132, tmp133, bytetest_88_88, tmp134;
		BitBlock tmp135, bytetest_8c_8d, tmp136, bytetest_92_92, tmp137, tmp138;
		BitBlock tmp139, bytetest_99_9b, tmp140, bytetest_9e_9e, tmp141, tmp142;
		BitBlock tmp143, tmp144, bytetest_a8_a8, tmp145, tmp146, bytetest_aa_ab;
		BitBlock tmp147, tmp148, bytetest_b0_b0, tmp149, bytetest_b4_b4, tmp150;
		BitBlock bytetest_b6_b6, tmp151, tmp152, tmp153, tmp154, bytetest_b9_ba;
		BitBlock tmp155, tmp156, bytetest_bd_bf, tmp157, bytetest_c7, tmp158, tmp159;
		BitBlock tmp160, tmp161, bytetest_8c_8c, tmp162, bytetest_8e_8e, tmp163;
		BitBlock bytetest_90_90, tmp164, tmp165, bytetest_94_94, tmp166;
		BitBlock bytetest_96_96, tmp167, bytetest_98_98, tmp168, bytetest_9a_9a;
		BitBlock tmp169, bytetest_9c_9d, tmp170, tmp171, tmp172, tmp173, tmp174;
		BitBlock tmp175, tmp176, tmp177, tmp178, tmp179, tmp180, tmp181;
		BitBlock bytetest_af_b0, tmp182, tmp183, tmp184, bytetest_b9_b9, tmp185;
		BitBlock bytetest_bb_bb, tmp186, bytetest_bd_bd, tmp187, bytetest_bf_bf;
		BitBlock tmp188, bytetest_c8, tmp189, tmp190, tmp191, tmp192, tmp193, tmp194;
		BitBlock tmp195, tmp196, tmp197, tmp198, tmp199, tmp200, tmp201, tmp202;
		BitBlock tmp203, tmp204, tmp205, tmp206, tmp207, tmp208, tmp209, tmp210;
		BitBlock tmp211, tmp212, tmp213, tmp214, tmp215, tmp216, tmp217, tmp218;
		BitBlock bytetest_b3_b9, tmp219, tmp220, bytetest_c9, tmp221, tmp222, tmp223;
		BitBlock tmp224, tmp225, tmp226, tmp227, tmp228, tmp229, tmp230, bytetest_ca;
		BitBlock tmp231, tmp232, bytetest_80_93, tmp233, tmp234, tmp235, tmp236;
		BitBlock tmp237, bytetest_8f_bf, tmp238, tmp239, tmp240, tmp241, tmp242;
		BitBlock tmp243, tmp244, bytetest_95_af, tmp245, bytetest_cd, tmp246, tmp247;
		BitBlock tmp248, tmp249, tmp250, tmp251, tmp252, bytetest_bb_bd, tmp253;
		BitBlock bytetest_ce, tmp254, tmp255, tmp256, bytetest_cf, tmp257;
		BitBlock bytetest_80_8e, tmp258, tmp259, tmp260, tmp261, bytetest_ac_bf;
		BitBlock tmp262, tmp263, tmp264, bytetest_90_91, tmp265, tmp266;
		BitBlock bytetest_95_97, tmp267, tmp268, tmp269, tmp270, tmp271, tmp272;
		BitBlock tmp273, tmp274, tmp275, tmp276, tmp277, tmp278, tmp279, tmp280;
		BitBlock bytetest_af_b3, tmp281, tmp282, bytetest_b8_b8, tmp283, tmp284;
		BitBlock tmp285, bytetest_bb_bc, tmp286, tmp287, bytetest_d1, bytetest_80_9f;
		BitBlock tmp288, tmp289, tmp290, bytetest_d0, bytetest_b0_bf, tmp291, tmp292;
		BitBlock tmp293, tmp294, tmp295, tmp296, tmp297, tmp298, tmp299, tmp300;
		BitBlock tmp301, tmp302, tmp303, tmp304, tmp305, tmp306, tmp307, tmp308;
		BitBlock tmp309, tmp310, bytetest_d2, tmp311, tmp312, tmp313, tmp314, tmp315;
		BitBlock tmp316, tmp317, tmp318, tmp319, tmp320, tmp321, tmp322, tmp323;
		BitBlock tmp324, tmp325, tmp326, tmp327, tmp328, tmp329, tmp330, tmp331;
		BitBlock tmp332, tmp333, tmp334, tmp335, tmp336, tmp337, tmp338, tmp339;
		BitBlock tmp340, bytetest_d3, tmp341, tmp342, tmp343, tmp344, tmp345, tmp346;
		BitBlock bytetest_8a_8a, tmp347, tmp348, bytetest_8e_8f, tmp349, tmp350;
		BitBlock tmp351, tmp352, tmp353, tmp354, tmp355, tmp356, tmp357, tmp358;
		BitBlock tmp359, tmp360, tmp361, tmp362, tmp363, tmp364, tmp365, tmp366;
		BitBlock tmp367, tmp368, tmp369, tmp370, tmp371, tmp372, tmp373, bytetest_d4;
		BitBlock tmp374, tmp375, tmp376, tmp377, tmp378, tmp379, tmp380, tmp381;
		BitBlock tmp382, tmp383, tmp384, tmp385, tmp386, tmp387, tmp388, tmp389;
		BitBlock tmp390, tmp391, tmp392, tmp393, tmp394, tmp395, bytetest_d6;
		BitBlock bytetest_80_87, tmp396, tmp397, tmp398, bytetest_d5, tmp399;
		BitBlock bytetest_a1_bf, tmp400, tmp401, tmp402, tmp403, tmp404, bytetest_e1;
		BitBlock bytetest_b4, tmp405, bytetest_80_ab, tmp406, tmp407, tmp408, tmp409;
		BitBlock tmp410, bytetest_b5, tmp411, tmp412, bytetest_ab_b7, tmp413, tmp414;
		BitBlock tmp415, bytetest_b6, tmp416, bytetest_80_9a, tmp417, tmp418, tmp419;
		BitBlock tmp420, bytetest_b9_bf, tmp421, tmp422, bytetest_b8, tmp423, tmp424;
		BitBlock tmp425, tmp426, tmp427, tmp428, tmp429, tmp430, tmp431, tmp432;
		BitBlock tmp433, tmp434, tmp435, tmp436, tmp437, tmp438, tmp439, tmp440;
		BitBlock tmp441, tmp442, tmp443, tmp444, tmp445, tmp446, tmp447, tmp448;
		BitBlock tmp449, tmp450, tmp451, tmp452, tmp453, tmp454, tmp455, tmp456;
		BitBlock bytetest_b9, tmp457, tmp458, tmp459, tmp460, tmp461, tmp462, tmp463;
		BitBlock tmp464, tmp465, tmp466, tmp467, tmp468, tmp469, tmp470, tmp471;
		BitBlock tmp472, tmp473, tmp474, tmp475, tmp476, tmp477, tmp478, tmp479;
		BitBlock tmp480, tmp481, tmp482, tmp483, tmp484, tmp485, tmp486, tmp487;
		BitBlock tmp488, tmp489, tmp490, bytetest_ba, tmp491, tmp492, tmp493, tmp494;
		BitBlock tmp495, tmp496, tmp497, tmp498, tmp499, tmp500, tmp501, tmp502;
		BitBlock tmp503, tmp504, tmp505, bytetest_95_9d, tmp506, tmp507, tmp508;
		BitBlock tmp509, tmp510, tmp511, tmp512, tmp513, tmp514, tmp515, tmp516;
		BitBlock tmp517, tmp518, tmp519, tmp520, tmp521, tmp522, tmp523, bytetest_bb;
		BitBlock tmp524, tmp525, tmp526, tmp527, tmp528, tmp529, tmp530, tmp531;
		BitBlock tmp532, tmp533, tmp534, tmp535, tmp536, tmp537, tmp538, tmp539;
		BitBlock tmp540, tmp541, tmp542, tmp543, tmp544, tmp545, tmp546, tmp547;
		BitBlock tmp548, tmp549, tmp550, tmp551, tmp552, tmp553, tmp554, tmp555;
		BitBlock tmp556, bytetest_bc, tmp557, tmp558, tmp559, tmp560, tmp561, tmp562;
		BitBlock bytetest_90_95, tmp563, bytetest_a0_a7, tmp564, bytetest_b0_b7;
		BitBlock tmp565, bytetest_bd, bytetest_80_85, tmp566, tmp567, tmp568;
		BitBlock bytetest_90_97, tmp569, tmp570, tmp571, bytetest_b0_bd, tmp572;
		BitBlock bytetest_be, tmp573, tmp574, tmp575, tmp576, tmp577, bytetest_b0_b4;
		BitBlock tmp578, tmp579, bytetest_b6_b7, tmp580, tmp581, bytetest_bf, tmp582;
		BitBlock bytetest_82_84, tmp583, tmp584, tmp585, bytetest_86_87, tmp586;
		BitBlock bytetest_90_93, tmp587, bytetest_96_97, tmp588, tmp589;
		BitBlock bytetest_b2_b4, tmp590, tmp591, bytetest_e2, bytetest_84, tmp592;
		BitBlock tmp593, tmp594, tmp595, tmp596, tmp597, tmp598, tmp599, tmp600;
		BitBlock tmp601, bytetest_bc_bd, tmp602, bytetest_85, tmp603, bytetest_86_89;
		BitBlock tmp604, tmp605, tmp606, tmp607, bytetest_86, tmp608, tmp609, tmp610;
		BitBlock bytetest_b1, bytetest_80_9e, tmp611, tmp612, tmp613, bytetest_b0;
		BitBlock tmp614, tmp615, tmp616, tmp617, tmp618, tmp619, bytetest_a5_a6;
		BitBlock tmp620, tmp621, bytetest_aa_aa, tmp622, bytetest_ac_ac, tmp623;
		BitBlock tmp624, bytetest_b3_b4, tmp625, tmp626, tmp627, bytetest_b6_bb;
		BitBlock tmp628, bytetest_b2, tmp629, tmp630, tmp631, tmp632, tmp633, tmp634;
		BitBlock tmp635, tmp636, tmp637, tmp638, tmp639, tmp640, tmp641, tmp642;
		BitBlock tmp643, tmp644, tmp645, tmp646, tmp647, tmp648, tmp649, tmp650;
		BitBlock tmp651, tmp652, tmp653, tmp654, tmp655, tmp656, tmp657, tmp658;
		BitBlock tmp659, tmp660, tmp661, tmp662, bytetest_b3, tmp663, tmp664, tmp665;
		BitBlock tmp666, tmp667, tmp668, tmp669, tmp670, tmp671, tmp672, tmp673;
		BitBlock tmp674, tmp675, tmp676, tmp677, tmp678, tmp679, tmp680, tmp681;
		BitBlock bytetest_a3_a4, tmp682, tmp683, bytetest_ae_ae, tmp684, tmp685;
		BitBlock tmp686, tmp687, tmp688, bytetest_80_a5, tmp689, tmp690, tmp691;
		BitBlock tmp692, tmp693, bytetest_ea, bytetest_99, tmp694, tmp695, tmp696;
		BitBlock tmp697, tmp698, tmp699, tmp700, tmp701, tmp702, tmp703, tmp704;
		BitBlock tmp705, tmp706, tmp707, tmp708, tmp709, tmp710, tmp711, tmp712;
		BitBlock tmp713, tmp714, tmp715, tmp716, tmp717, tmp718, tmp719, tmp720;
		BitBlock bytetest_9a, tmp721, tmp722, tmp723, tmp724, tmp725, tmp726, tmp727;
		BitBlock tmp728, tmp729, tmp730, tmp731, tmp732, tmp733, tmp734, bytetest_9c;
		BitBlock tmp735, tmp736, tmp737, tmp738, tmp739, tmp740, tmp741, tmp742;
		BitBlock tmp743, tmp744, bytetest_af_b1, tmp745, tmp746, tmp747, tmp748;
		BitBlock tmp749, tmp750, tmp751, tmp752, bytetest_9d, tmp753, tmp754, tmp755;
		BitBlock tmp756, tmp757, tmp758, tmp759, tmp760, tmp761, tmp762, tmp763;
		BitBlock tmp764, tmp765, tmp766, tmp767, tmp768, tmp769, tmp770, tmp771;
		BitBlock tmp772, tmp773, tmp774, tmp775, tmp776, tmp777, tmp778, tmp779;
		BitBlock bytetest_b1_b8, tmp780, tmp781, tmp782, tmp783, bytetest_9e, tmp784;
		BitBlock tmp785, tmp786, tmp787, tmp788, tmp789, tmp790, tmp791, tmp792;
		BitBlock tmp793, tmp794, tmp795, tmp796, tmp797, tmp798, bytetest_9f, tmp799;
		BitBlock tmp800, tmp801, bytetest_ef, bytetest_ac, bytetest_80_86, tmp802;
		BitBlock tmp803, tmp804, tmp805, tmp806, bytetest_93_97, tmp807;
		BitBlock bytetest_81_9a, tmp808, tmp809, tmp810, tmp811, bytetest_f0;
		BitBlock bytetest_90, bytetest_91, bytetest_80_8f, tmp812, tmp813, tmp814;
		BitBlock tmp815, tmp816, tmp817, tmp818, tmp819, bytetest_a8_bf, tmp820;
		BitBlock tmp821, tmp822, tmp823, tmp824, tmp825, tmp826, tmp827;
		BitBlock bytetest_9a_b3, tmp828, tmp829, tmp830, tmp831, tmp832, tmp833;
		BitBlock tmp834, bytetest_8e_94, tmp835, tmp836, tmp837, tmp838, tmp839;
		BitBlock tmp840, bytetest_96_a7, tmp841, bytetest_92, tmp842, tmp843;
		BitBlock bytetest_82_9b, tmp844, tmp845, tmp846, bytetest_b6_b9, tmp847;
		BitBlock tmp848, bytetest_93, bytetest_80_83, tmp849, tmp850, tmp851, tmp852;
		BitBlock tmp853, tmp854, bytetest_85_8f, tmp855, bytetest_94, tmp856, tmp857;
		BitBlock tmp858, tmp859, bytetest_aa_bf, tmp860, tmp861, tmp862, tmp863;
		BitBlock tmp864, tmp865, bytetest_9e_b7, tmp866, bytetest_95, tmp867, tmp868;
		BitBlock tmp869, bytetest_92_ab, tmp870, tmp871, tmp872, bytetest_96;
		BitBlock bytetest_86_9f, tmp873, tmp874, tmp875, bytetest_97, tmp876, tmp877;
		BitBlock tmp878, bytetest_ba_bf, tmp879, tmp880, bytetest_98, tmp881, tmp882;
		BitBlock tmp883, tmp884, bytetest_ae_bf, tmp885, tmp886, bytetest_a2_bb;
		BitBlock tmp887, tmp888, bytetest_96_af, tmp889, tmp890, tmp891, tmp892;
		BitBlock tmp893, bytetest_8a_a5, tmp894, tmp895, tmp896, bytetest_9b, tmp897;
		BitBlock bytetest_82_9a, tmp898, tmp899, tmp900, tmp901, tmp902, tmp903;
		BitBlock tmp904, bytetest_9c_a1, tmp905, bytetest_80_94, tmp906, tmp907;
		BitBlock tmp908, bytetest_bc_bf, tmp909, tmp910, bytetest_96_9b, tmp911;
		BitBlock tmp912, tmp913, tmp914, bytetest_b6_bf, tmp915, tmp916, tmp917;
		BitBlock tmp918, bytetest_80_88, tmp919, tmp920, tmp921, tmp922, tmp923;
		BitBlock tmp924, bytetest_8a_8f, tmp925, bytetest_80_82, tmp926, tmp927;
		BitBlock tmp928, tmp929, tmp930, tmp931, bytetest_84_89, tmp932, tmp933;




        struct_Ll.cc = simd<1>::constant<0>();
        tmp1 = simd_andc(basis_bits.bit_1, basis_bits.bit_0);
        tmp2 = simd_and(tmp1, basis_bits.bit_2);
        tmp3 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp4 = simd_or(basis_bits.bit_5, tmp3);
        tmp5 = simd_and(basis_bits.bit_4, tmp4);
        tmp6 = simd_not(tmp5);
        tmp7 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp8 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp9 = simd_or(tmp7, tmp8);
        tmp10 = simd_or(simd_and(basis_bits.bit_3, tmp6), simd_andc(tmp9, basis_bits.bit_3));
        bytetest_61_7a = simd_and(tmp2, tmp10);
        struct_Ll.cc = simd_or(bytetest_61_7a, struct_Ll.cc);
        tmp11 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp12 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp13 = simd_andc(tmp11, tmp12);
        tmp14 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp15 = simd_andc(tmp14, tmp7);
        bytetest_c2 = simd_and(tmp13, tmp15);
        tmp16 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp17 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp18 = simd_and(tmp16, tmp17);
        tmp19 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp20 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp21 = simd_and(tmp19, tmp20);
        bytetest_b5_b5 = simd_and(tmp18, tmp21);
        tmp22 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp22, carryQ.get_carry_in(0), tmp23));
        tmp24 = simd_and(tmp23, bytetest_c2);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp24, carryQ.get_carry_in(1), tmp25));
        tmp26 = simd_and(tmp25, bytetest_b5_b5);
        struct_Ll.cc = simd_or(tmp26, struct_Ll.cc);
        tmp27 = simd_andc(tmp3, tmp7);
        bytetest_c3 = simd_and(tmp13, tmp27);
        tmp28 = simd_and(basis_bits.bit_5, tmp3);
        tmp29 = simd_or(basis_bits.bit_4, tmp28);
        tmp30 = simd_and(basis_bits.bit_3, tmp29);
        tmp31 = simd_not(tmp30);
        tmp32 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp33 = simd_and(tmp32, tmp3);
        tmp34 = simd_and(basis_bits.bit_3, tmp33);
        tmp35 = simd_or(simd_and(basis_bits.bit_2, tmp31), simd_andc(tmp34, basis_bits.bit_2));
        bytetest_9f_b6 = simd_and(tmp16, tmp35);
        tmp36 = simd_and(tmp23, bytetest_c3);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp36, carryQ.get_carry_in(2), tmp37));
        tmp38 = simd_and(tmp37, bytetest_9f_b6);
        struct_Ll.cc = simd_or(tmp38, struct_Ll.cc);
        bytetest_c3 = simd_and(tmp13, tmp27);
        bytetest_b8_bf = simd_and(tmp18, basis_bits.bit_4);
        tmp39 = simd_and(tmp37, bytetest_b8_bf);
        struct_Ll.cc = simd_or(tmp39, struct_Ll.cc);
        tmp40 = simd_andc(tmp19, tmp8);
        bytetest_c4 = simd_and(tmp13, tmp40);
        tmp41 = simd_andc(tmp16, tmp12);
        tmp42 = simd_andc(tmp20, tmp7);
        bytetest_81_81 = simd_and(tmp41, tmp42);
        tmp43 = simd_and(tmp23, bytetest_c4);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp43, carryQ.get_carry_in(3), tmp44));
        tmp45 = simd_and(tmp44, bytetest_81_81);
        struct_Ll.cc = simd_or(tmp45, struct_Ll.cc);
        bytetest_c4 = simd_and(tmp13, tmp40);
        bytetest_83_83 = simd_and(tmp41, tmp27);
        tmp46 = simd_and(tmp44, bytetest_83_83);
        struct_Ll.cc = simd_or(tmp46, struct_Ll.cc);
        bytetest_c4 = simd_and(tmp13, tmp40);
        bytetest_85_85 = simd_and(tmp41, tmp21);
        tmp47 = simd_and(tmp44, bytetest_85_85);
        struct_Ll.cc = simd_or(tmp47, struct_Ll.cc);
        bytetest_c4 = simd_and(tmp13, tmp40);
        tmp48 = simd_and(tmp19, tmp3);
        bytetest_87_87 = simd_and(tmp41, tmp48);
        tmp49 = simd_and(tmp44, bytetest_87_87);
        struct_Ll.cc = simd_or(tmp49, struct_Ll.cc);
        bytetest_c4 = simd_and(tmp13, tmp40);
        tmp50 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp51 = simd_and(tmp50, tmp20);
        bytetest_89_89 = simd_and(tmp41, tmp51);
        tmp52 = simd_and(tmp44, bytetest_89_89);
        struct_Ll.cc = simd_or(tmp52, struct_Ll.cc);
        bytetest_c4 = simd_and(tmp13, tmp40);
        tmp53 = simd_and(tmp50, tmp3);
        bytetest_8b_8b = simd_and(tmp41, tmp53);
        tmp54 = simd_and(tmp44, bytetest_8b_8b);
        struct_Ll.cc = simd_or(tmp54, struct_Ll.cc);
        bytetest_c4 = simd_and(tmp13, tmp40);
        tmp55 = simd_and(tmp32, tmp20);
        bytetest_8d_8d = simd_and(tmp41, tmp55);
        tmp56 = simd_and(tmp44, bytetest_8d_8d);
        struct_Ll.cc = simd_or(tmp56, struct_Ll.cc);
        bytetest_c4 = simd_and(tmp13, tmp40);
        bytetest_8f_8f = simd_and(tmp41, tmp33);
        tmp57 = simd_and(tmp44, bytetest_8f_8f);
        struct_Ll.cc = simd_or(tmp57, struct_Ll.cc);
        bytetest_c4 = simd_and(tmp13, tmp40);
        tmp58 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp59 = simd_and(tmp16, tmp58);
        bytetest_91_91 = simd_and(tmp59, tmp42);
        tmp60 = simd_and(tmp44, bytetest_91_91);
        struct_Ll.cc = simd_or(tmp60, struct_Ll.cc);
        bytetest_c4 = simd_and(tmp13, tmp40);
        bytetest_93_93 = simd_and(tmp59, tmp27);
        tmp61 = simd_and(tmp44, bytetest_93_93);
        struct_Ll.cc = simd_or(tmp61, struct_Ll.cc);
        bytetest_c4 = simd_and(tmp13, tmp40);
        bytetest_95_95 = simd_and(tmp59, tmp21);
        tmp62 = simd_and(tmp44, bytetest_95_95);
        struct_Ll.cc = simd_or(tmp62, struct_Ll.cc);
        bytetest_c4 = simd_and(tmp13, tmp40);
        bytetest_97_97 = simd_and(tmp59, tmp48);
        tmp63 = simd_and(tmp44, bytetest_97_97);
        struct_Ll.cc = simd_or(tmp63, struct_Ll.cc);
        bytetest_c4 = simd_and(tmp13, tmp40);
        bytetest_99_99 = simd_and(tmp59, tmp51);
        tmp64 = simd_and(tmp44, bytetest_99_99);
        struct_Ll.cc = simd_or(tmp64, struct_Ll.cc);
        bytetest_c4 = simd_and(tmp13, tmp40);
        bytetest_9b_9b = simd_and(tmp59, tmp53);
        tmp65 = simd_and(tmp44, bytetest_9b_9b);
        struct_Ll.cc = simd_or(tmp65, struct_Ll.cc);
        bytetest_c4 = simd_and(tmp13, tmp40);
        bytetest_9d_9d = simd_and(tmp59, tmp55);
        tmp66 = simd_and(tmp44, bytetest_9d_9d);
        struct_Ll.cc = simd_or(tmp66, struct_Ll.cc);
        bytetest_c4 = simd_and(tmp13, tmp40);
        bytetest_9f_9f = simd_and(tmp59, tmp33);
        tmp67 = simd_and(tmp44, bytetest_9f_9f);
        struct_Ll.cc = simd_or(tmp67, struct_Ll.cc);
        bytetest_c4 = simd_and(tmp13, tmp40);
        tmp68 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp69 = simd_and(tmp16, tmp68);
        bytetest_a1_a1 = simd_and(tmp69, tmp42);
        tmp70 = simd_and(tmp44, bytetest_a1_a1);
        struct_Ll.cc = simd_or(tmp70, struct_Ll.cc);
        bytetest_c4 = simd_and(tmp13, tmp40);
        bytetest_a3_a3 = simd_and(tmp69, tmp27);
        tmp71 = simd_and(tmp44, bytetest_a3_a3);
        struct_Ll.cc = simd_or(tmp71, struct_Ll.cc);
        bytetest_c4 = simd_and(tmp13, tmp40);
        bytetest_a5_a5 = simd_and(tmp69, tmp21);
        tmp72 = simd_and(tmp44, bytetest_a5_a5);
        struct_Ll.cc = simd_or(tmp72, struct_Ll.cc);
        bytetest_c4 = simd_and(tmp13, tmp40);
        bytetest_a7_a7 = simd_and(tmp69, tmp48);
        tmp73 = simd_and(tmp44, bytetest_a7_a7);
        struct_Ll.cc = simd_or(tmp73, struct_Ll.cc);
        bytetest_c4 = simd_and(tmp13, tmp40);
        bytetest_a9_a9 = simd_and(tmp69, tmp51);
        tmp74 = simd_and(tmp44, bytetest_a9_a9);
        struct_Ll.cc = simd_or(tmp74, struct_Ll.cc);
        bytetest_c4 = simd_and(tmp13, tmp40);
        bytetest_ab_ab = simd_and(tmp69, tmp53);
        tmp75 = simd_and(tmp44, bytetest_ab_ab);
        struct_Ll.cc = simd_or(tmp75, struct_Ll.cc);
        bytetest_c4 = simd_and(tmp13, tmp40);
        bytetest_ad_ad = simd_and(tmp69, tmp55);
        tmp76 = simd_and(tmp44, bytetest_ad_ad);
        struct_Ll.cc = simd_or(tmp76, struct_Ll.cc);
        bytetest_c4 = simd_and(tmp13, tmp40);
        bytetest_af_af = simd_and(tmp69, tmp33);
        tmp77 = simd_and(tmp44, bytetest_af_af);
        struct_Ll.cc = simd_or(tmp77, struct_Ll.cc);
        bytetest_c4 = simd_and(tmp13, tmp40);
        bytetest_b1_b1 = simd_and(tmp18, tmp42);
        tmp78 = simd_and(tmp44, bytetest_b1_b1);
        struct_Ll.cc = simd_or(tmp78, struct_Ll.cc);
        bytetest_c4 = simd_and(tmp13, tmp40);
        bytetest_b3_b3 = simd_and(tmp18, tmp27);
        tmp79 = simd_and(tmp44, bytetest_b3_b3);
        struct_Ll.cc = simd_or(tmp79, struct_Ll.cc);
        bytetest_c4 = simd_and(tmp13, tmp40);
        bytetest_b5_b5 = simd_and(tmp18, tmp21);
        tmp80 = simd_and(tmp44, bytetest_b5_b5);
        struct_Ll.cc = simd_or(tmp80, struct_Ll.cc);
        bytetest_c4 = simd_and(tmp13, tmp40);
        tmp81 = simd_or(basis_bits.bit_5, tmp8);
        tmp82 = simd_not(tmp81);
        tmp83 = simd_or(simd_and(basis_bits.bit_4, tmp82), simd_andc(tmp28, basis_bits.bit_4));
        bytetest_b7_b8 = simd_and(tmp18, tmp83);
        tmp84 = simd_and(tmp44, bytetest_b7_b8);
        struct_Ll.cc = simd_or(tmp84, struct_Ll.cc);
        bytetest_c4 = simd_and(tmp13, tmp40);
        tmp85 = simd_and(tmp50, tmp14);
        bytetest_ba_ba = simd_and(tmp18, tmp85);
        tmp86 = simd_and(tmp44, bytetest_ba_ba);
        struct_Ll.cc = simd_or(tmp86, struct_Ll.cc);
        bytetest_c4 = simd_and(tmp13, tmp40);
        tmp87 = simd_andc(tmp32, tmp8);
        bytetest_bc_bc = simd_and(tmp18, tmp87);
        tmp88 = simd_and(tmp44, bytetest_bc_bc);
        struct_Ll.cc = simd_or(tmp88, struct_Ll.cc);
        bytetest_c4 = simd_and(tmp13, tmp40);
        tmp89 = simd_and(tmp32, tmp14);
        bytetest_be_be = simd_and(tmp18, tmp89);
        tmp90 = simd_and(tmp44, bytetest_be_be);
        struct_Ll.cc = simd_or(tmp90, struct_Ll.cc);
        bytetest_c5 = simd_and(tmp13, tmp21);
        bytetest_80_80 = simd_andc(tmp41, tmp9);
        tmp91 = simd_and(tmp23, bytetest_c5);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp91, carryQ.get_carry_in(4), tmp92));
        tmp93 = simd_and(tmp92, bytetest_80_80);
        struct_Ll.cc = simd_or(tmp93, struct_Ll.cc);
        bytetest_c5 = simd_and(tmp13, tmp21);
        bytetest_82_82 = simd_and(tmp41, tmp15);
        tmp94 = simd_and(tmp92, bytetest_82_82);
        struct_Ll.cc = simd_or(tmp94, struct_Ll.cc);
        bytetest_c5 = simd_and(tmp13, tmp21);
        bytetest_84_84 = simd_and(tmp41, tmp40);
        tmp95 = simd_and(tmp92, bytetest_84_84);
        struct_Ll.cc = simd_or(tmp95, struct_Ll.cc);
        bytetest_c5 = simd_and(tmp13, tmp21);
        tmp96 = simd_and(tmp19, tmp14);
        bytetest_86_86 = simd_and(tmp41, tmp96);
        tmp97 = simd_and(tmp92, bytetest_86_86);
        struct_Ll.cc = simd_or(tmp97, struct_Ll.cc);
        bytetest_c5 = simd_and(tmp13, tmp21);
        tmp98 = simd_andc(tmp50, basis_bits.bit_6);
        bytetest_88_89 = simd_and(tmp41, tmp98);
        tmp99 = simd_and(tmp92, bytetest_88_89);
        struct_Ll.cc = simd_or(tmp99, struct_Ll.cc);
        bytetest_c5 = simd_and(tmp13, tmp21);
        bytetest_8b_8b = simd_and(tmp41, tmp53);
        tmp100 = simd_and(tmp92, bytetest_8b_8b);
        struct_Ll.cc = simd_or(tmp100, struct_Ll.cc);
        bytetest_c5 = simd_and(tmp13, tmp21);
        bytetest_8d_8d = simd_and(tmp41, tmp55);
        tmp101 = simd_and(tmp92, bytetest_8d_8d);
        struct_Ll.cc = simd_or(tmp101, struct_Ll.cc);
        bytetest_c5 = simd_and(tmp13, tmp21);
        bytetest_8f_8f = simd_and(tmp41, tmp33);
        tmp102 = simd_and(tmp92, bytetest_8f_8f);
        struct_Ll.cc = simd_or(tmp102, struct_Ll.cc);
        bytetest_c5 = simd_and(tmp13, tmp21);
        bytetest_91_91 = simd_and(tmp59, tmp42);
        tmp103 = simd_and(tmp92, bytetest_91_91);
        struct_Ll.cc = simd_or(tmp103, struct_Ll.cc);
        bytetest_c5 = simd_and(tmp13, tmp21);
        bytetest_93_93 = simd_and(tmp59, tmp27);
        tmp104 = simd_and(tmp92, bytetest_93_93);
        struct_Ll.cc = simd_or(tmp104, struct_Ll.cc);
        bytetest_c5 = simd_and(tmp13, tmp21);
        bytetest_95_95 = simd_and(tmp59, tmp21);
        tmp105 = simd_and(tmp92, bytetest_95_95);
        struct_Ll.cc = simd_or(tmp105, struct_Ll.cc);
        bytetest_c5 = simd_and(tmp13, tmp21);
        bytetest_97_97 = simd_and(tmp59, tmp48);
        tmp106 = simd_and(tmp92, bytetest_97_97);
        struct_Ll.cc = simd_or(tmp106, struct_Ll.cc);
        bytetest_c5 = simd_and(tmp13, tmp21);
        bytetest_99_99 = simd_and(tmp59, tmp51);
        tmp107 = simd_and(tmp92, bytetest_99_99);
        struct_Ll.cc = simd_or(tmp107, struct_Ll.cc);
        bytetest_c5 = simd_and(tmp13, tmp21);
        bytetest_9b_9b = simd_and(tmp59, tmp53);
        tmp108 = simd_and(tmp92, bytetest_9b_9b);
        struct_Ll.cc = simd_or(tmp108, struct_Ll.cc);
        bytetest_c5 = simd_and(tmp13, tmp21);
        bytetest_9d_9d = simd_and(tmp59, tmp55);
        tmp109 = simd_and(tmp92, bytetest_9d_9d);
        struct_Ll.cc = simd_or(tmp109, struct_Ll.cc);
        bytetest_c5 = simd_and(tmp13, tmp21);
        bytetest_9f_9f = simd_and(tmp59, tmp33);
        tmp110 = simd_and(tmp92, bytetest_9f_9f);
        struct_Ll.cc = simd_or(tmp110, struct_Ll.cc);
        bytetest_c5 = simd_and(tmp13, tmp21);
        bytetest_a1_a1 = simd_and(tmp69, tmp42);
        tmp111 = simd_and(tmp92, bytetest_a1_a1);
        struct_Ll.cc = simd_or(tmp111, struct_Ll.cc);
        bytetest_c5 = simd_and(tmp13, tmp21);
        bytetest_a3_a3 = simd_and(tmp69, tmp27);
        tmp112 = simd_and(tmp92, bytetest_a3_a3);
        struct_Ll.cc = simd_or(tmp112, struct_Ll.cc);
        bytetest_c5 = simd_and(tmp13, tmp21);
        bytetest_a5_a5 = simd_and(tmp69, tmp21);
        tmp113 = simd_and(tmp92, bytetest_a5_a5);
        struct_Ll.cc = simd_or(tmp113, struct_Ll.cc);
        bytetest_c5 = simd_and(tmp13, tmp21);
        bytetest_a7_a7 = simd_and(tmp69, tmp48);
        tmp114 = simd_and(tmp92, bytetest_a7_a7);
        struct_Ll.cc = simd_or(tmp114, struct_Ll.cc);
        bytetest_c5 = simd_and(tmp13, tmp21);
        bytetest_a9_a9 = simd_and(tmp69, tmp51);
        tmp115 = simd_and(tmp92, bytetest_a9_a9);
        struct_Ll.cc = simd_or(tmp115, struct_Ll.cc);
        bytetest_c5 = simd_and(tmp13, tmp21);
        bytetest_ab_ab = simd_and(tmp69, tmp53);
        tmp116 = simd_and(tmp92, bytetest_ab_ab);
        struct_Ll.cc = simd_or(tmp116, struct_Ll.cc);
        bytetest_c5 = simd_and(tmp13, tmp21);
        bytetest_ad_ad = simd_and(tmp69, tmp55);
        tmp117 = simd_and(tmp92, bytetest_ad_ad);
        struct_Ll.cc = simd_or(tmp117, struct_Ll.cc);
        bytetest_c5 = simd_and(tmp13, tmp21);
        bytetest_af_af = simd_and(tmp69, tmp33);
        tmp118 = simd_and(tmp92, bytetest_af_af);
        struct_Ll.cc = simd_or(tmp118, struct_Ll.cc);
        bytetest_c5 = simd_and(tmp13, tmp21);
        bytetest_b1_b1 = simd_and(tmp18, tmp42);
        tmp119 = simd_and(tmp92, bytetest_b1_b1);
        struct_Ll.cc = simd_or(tmp119, struct_Ll.cc);
        bytetest_c5 = simd_and(tmp13, tmp21);
        bytetest_b3_b3 = simd_and(tmp18, tmp27);
        tmp120 = simd_and(tmp92, bytetest_b3_b3);
        struct_Ll.cc = simd_or(tmp120, struct_Ll.cc);
        bytetest_c5 = simd_and(tmp13, tmp21);
        bytetest_b5_b5 = simd_and(tmp18, tmp21);
        tmp121 = simd_and(tmp92, bytetest_b5_b5);
        struct_Ll.cc = simd_or(tmp121, struct_Ll.cc);
        bytetest_c5 = simd_and(tmp13, tmp21);
        bytetest_b7_b7 = simd_and(tmp18, tmp48);
        tmp122 = simd_and(tmp92, bytetest_b7_b7);
        struct_Ll.cc = simd_or(tmp122, struct_Ll.cc);
        bytetest_c5 = simd_and(tmp13, tmp21);
        bytetest_ba_ba = simd_and(tmp18, tmp85);
        tmp123 = simd_and(tmp92, bytetest_ba_ba);
        struct_Ll.cc = simd_or(tmp123, struct_Ll.cc);
        bytetest_c5 = simd_and(tmp13, tmp21);
        bytetest_bc_bc = simd_and(tmp18, tmp87);
        tmp124 = simd_and(tmp92, bytetest_bc_bc);
        struct_Ll.cc = simd_or(tmp124, struct_Ll.cc);
        bytetest_c6 = simd_and(tmp13, tmp96);
        bytetest_80_80 = simd_andc(tmp41, tmp9);
        tmp125 = simd_and(tmp23, bytetest_c6);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp125, carryQ.get_carry_in(5), tmp126));
        tmp127 = simd_and(tmp126, bytetest_80_80);
        bytetest_c5 = simd_and(tmp13, tmp21);
        tmp128 = simd_and(tmp32, basis_bits.bit_6);
        bytetest_be_bf = simd_and(tmp18, tmp128);
        tmp129 = simd_and(tmp92, bytetest_be_bf);
        tmp130 = simd_or(tmp129, tmp127);
        struct_Ll.cc = simd_or(tmp130, struct_Ll.cc);
        bytetest_c6 = simd_and(tmp13, tmp96);
        bytetest_83_83 = simd_and(tmp41, tmp27);
        tmp131 = simd_and(tmp126, bytetest_83_83);
        struct_Ll.cc = simd_or(tmp131, struct_Ll.cc);
        bytetest_c6 = simd_and(tmp13, tmp96);
        bytetest_85_85 = simd_and(tmp41, tmp21);
        tmp132 = simd_and(tmp126, bytetest_85_85);
        struct_Ll.cc = simd_or(tmp132, struct_Ll.cc);
        bytetest_c6 = simd_and(tmp13, tmp96);
        tmp133 = simd_andc(tmp50, tmp8);
        bytetest_88_88 = simd_and(tmp41, tmp133);
        tmp134 = simd_and(tmp126, bytetest_88_88);
        struct_Ll.cc = simd_or(tmp134, struct_Ll.cc);
        bytetest_c6 = simd_and(tmp13, tmp96);
        tmp135 = simd_andc(tmp32, basis_bits.bit_6);
        bytetest_8c_8d = simd_and(tmp41, tmp135);
        tmp136 = simd_and(tmp126, bytetest_8c_8d);
        struct_Ll.cc = simd_or(tmp136, struct_Ll.cc);
        bytetest_c6 = simd_and(tmp13, tmp96);
        bytetest_92_92 = simd_and(tmp59, tmp15);
        tmp137 = simd_and(tmp126, bytetest_92_92);
        struct_Ll.cc = simd_or(tmp137, struct_Ll.cc);
        bytetest_c6 = simd_and(tmp13, tmp96);
        bytetest_95_95 = simd_and(tmp59, tmp21);
        tmp138 = simd_and(tmp126, bytetest_95_95);
        struct_Ll.cc = simd_or(tmp138, struct_Ll.cc);
        bytetest_c6 = simd_and(tmp13, tmp96);
        tmp139 = simd_and(tmp59, tmp50);
        bytetest_99_9b = simd_and(tmp139, tmp8);
        tmp140 = simd_and(tmp126, bytetest_99_9b);
        struct_Ll.cc = simd_or(tmp140, struct_Ll.cc);
        bytetest_c6 = simd_and(tmp13, tmp96);
        bytetest_9e_9e = simd_and(tmp59, tmp89);
        tmp141 = simd_and(tmp126, bytetest_9e_9e);
        struct_Ll.cc = simd_or(tmp141, struct_Ll.cc);
        bytetest_c6 = simd_and(tmp13, tmp96);
        bytetest_a1_a1 = simd_and(tmp69, tmp42);
        tmp142 = simd_and(tmp126, bytetest_a1_a1);
        struct_Ll.cc = simd_or(tmp142, struct_Ll.cc);
        bytetest_c6 = simd_and(tmp13, tmp96);
        bytetest_a3_a3 = simd_and(tmp69, tmp27);
        tmp143 = simd_and(tmp126, bytetest_a3_a3);
        struct_Ll.cc = simd_or(tmp143, struct_Ll.cc);
        bytetest_c6 = simd_and(tmp13, tmp96);
        bytetest_a5_a5 = simd_and(tmp69, tmp21);
        tmp144 = simd_and(tmp126, bytetest_a5_a5);
        struct_Ll.cc = simd_or(tmp144, struct_Ll.cc);
        bytetest_c6 = simd_and(tmp13, tmp96);
        bytetest_a8_a8 = simd_and(tmp69, tmp133);
        tmp145 = simd_and(tmp126, bytetest_a8_a8);
        struct_Ll.cc = simd_or(tmp145, struct_Ll.cc);
        bytetest_c6 = simd_and(tmp13, tmp96);
        tmp146 = simd_and(tmp50, basis_bits.bit_6);
        bytetest_aa_ab = simd_and(tmp69, tmp146);
        tmp147 = simd_and(tmp126, bytetest_aa_ab);
        struct_Ll.cc = simd_or(tmp147, struct_Ll.cc);
        bytetest_c6 = simd_and(tmp13, tmp96);
        bytetest_ad_ad = simd_and(tmp69, tmp55);
        tmp148 = simd_and(tmp126, bytetest_ad_ad);
        struct_Ll.cc = simd_or(tmp148, struct_Ll.cc);
        bytetest_c6 = simd_and(tmp13, tmp96);
        bytetest_b0_b0 = simd_andc(tmp18, tmp9);
        tmp149 = simd_and(tmp126, bytetest_b0_b0);
        struct_Ll.cc = simd_or(tmp149, struct_Ll.cc);
        bytetest_c6 = simd_and(tmp13, tmp96);
        bytetest_b4_b4 = simd_and(tmp18, tmp40);
        tmp150 = simd_and(tmp126, bytetest_b4_b4);
        struct_Ll.cc = simd_or(tmp150, struct_Ll.cc);
        bytetest_c6 = simd_and(tmp13, tmp96);
        bytetest_b6_b6 = simd_and(tmp18, tmp96);
        tmp151 = simd_and(tmp126, bytetest_b6_b6);
        struct_Ll.cc = simd_or(tmp151, struct_Ll.cc);
        bytetest_c6 = simd_and(tmp13, tmp96);
        tmp152 = simd_and(tmp18, tmp50);
        tmp153 = simd_not(basis_bits.bit_7);
        tmp154 = simd_or(simd_and(basis_bits.bit_6, tmp153), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
        bytetest_b9_ba = simd_and(tmp152, tmp154);
        tmp155 = simd_and(tmp126, bytetest_b9_ba);
        struct_Ll.cc = simd_or(tmp155, struct_Ll.cc);
        bytetest_c6 = simd_and(tmp13, tmp96);
        tmp156 = simd_and(tmp18, tmp32);
        bytetest_bd_bf = simd_and(tmp156, tmp8);
        tmp157 = simd_and(tmp126, bytetest_bd_bf);
        struct_Ll.cc = simd_or(tmp157, struct_Ll.cc);
        bytetest_c7 = simd_and(tmp13, tmp48);
        bytetest_86_86 = simd_and(tmp41, tmp96);
        tmp158 = simd_and(tmp23, bytetest_c7);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp158, carryQ.get_carry_in(6), tmp159));
        tmp160 = simd_and(tmp159, bytetest_86_86);
        struct_Ll.cc = simd_or(tmp160, struct_Ll.cc);
        bytetest_c7 = simd_and(tmp13, tmp48);
        bytetest_89_89 = simd_and(tmp41, tmp51);
        tmp161 = simd_and(tmp159, bytetest_89_89);
        struct_Ll.cc = simd_or(tmp161, struct_Ll.cc);
        bytetest_c7 = simd_and(tmp13, tmp48);
        bytetest_8c_8c = simd_and(tmp41, tmp87);
        tmp162 = simd_and(tmp159, bytetest_8c_8c);
        struct_Ll.cc = simd_or(tmp162, struct_Ll.cc);
        bytetest_c7 = simd_and(tmp13, tmp48);
        bytetest_8e_8e = simd_and(tmp41, tmp89);
        tmp163 = simd_and(tmp159, bytetest_8e_8e);
        struct_Ll.cc = simd_or(tmp163, struct_Ll.cc);
        bytetest_c7 = simd_and(tmp13, tmp48);
        bytetest_90_90 = simd_andc(tmp59, tmp9);
        tmp164 = simd_and(tmp159, bytetest_90_90);
        struct_Ll.cc = simd_or(tmp164, struct_Ll.cc);
        bytetest_c7 = simd_and(tmp13, tmp48);
        bytetest_92_92 = simd_and(tmp59, tmp15);
        tmp165 = simd_and(tmp159, bytetest_92_92);
        struct_Ll.cc = simd_or(tmp165, struct_Ll.cc);
        bytetest_c7 = simd_and(tmp13, tmp48);
        bytetest_94_94 = simd_and(tmp59, tmp40);
        tmp166 = simd_and(tmp159, bytetest_94_94);
        struct_Ll.cc = simd_or(tmp166, struct_Ll.cc);
        bytetest_c7 = simd_and(tmp13, tmp48);
        bytetest_96_96 = simd_and(tmp59, tmp96);
        tmp167 = simd_and(tmp159, bytetest_96_96);
        struct_Ll.cc = simd_or(tmp167, struct_Ll.cc);
        bytetest_c7 = simd_and(tmp13, tmp48);
        bytetest_98_98 = simd_and(tmp59, tmp133);
        tmp168 = simd_and(tmp159, bytetest_98_98);
        struct_Ll.cc = simd_or(tmp168, struct_Ll.cc);
        bytetest_c7 = simd_and(tmp13, tmp48);
        bytetest_9a_9a = simd_and(tmp59, tmp85);
        tmp169 = simd_and(tmp159, bytetest_9a_9a);
        struct_Ll.cc = simd_or(tmp169, struct_Ll.cc);
        bytetest_c7 = simd_and(tmp13, tmp48);
        bytetest_9c_9d = simd_and(tmp59, tmp135);
        tmp170 = simd_and(tmp159, bytetest_9c_9d);
        struct_Ll.cc = simd_or(tmp170, struct_Ll.cc);
        bytetest_c7 = simd_and(tmp13, tmp48);
        bytetest_9f_9f = simd_and(tmp59, tmp33);
        tmp171 = simd_and(tmp159, bytetest_9f_9f);
        struct_Ll.cc = simd_or(tmp171, struct_Ll.cc);
        bytetest_c7 = simd_and(tmp13, tmp48);
        bytetest_a1_a1 = simd_and(tmp69, tmp42);
        tmp172 = simd_and(tmp159, bytetest_a1_a1);
        struct_Ll.cc = simd_or(tmp172, struct_Ll.cc);
        bytetest_c7 = simd_and(tmp13, tmp48);
        bytetest_a3_a3 = simd_and(tmp69, tmp27);
        tmp173 = simd_and(tmp159, bytetest_a3_a3);
        struct_Ll.cc = simd_or(tmp173, struct_Ll.cc);
        bytetest_c7 = simd_and(tmp13, tmp48);
        bytetest_a5_a5 = simd_and(tmp69, tmp21);
        tmp174 = simd_and(tmp159, bytetest_a5_a5);
        struct_Ll.cc = simd_or(tmp174, struct_Ll.cc);
        bytetest_c7 = simd_and(tmp13, tmp48);
        bytetest_a7_a7 = simd_and(tmp69, tmp48);
        tmp175 = simd_and(tmp159, bytetest_a7_a7);
        struct_Ll.cc = simd_or(tmp175, struct_Ll.cc);
        bytetest_c7 = simd_and(tmp13, tmp48);
        bytetest_a9_a9 = simd_and(tmp69, tmp51);
        tmp176 = simd_and(tmp159, bytetest_a9_a9);
        struct_Ll.cc = simd_or(tmp176, struct_Ll.cc);
        bytetest_c7 = simd_and(tmp13, tmp48);
        bytetest_ab_ab = simd_and(tmp69, tmp53);
        tmp177 = simd_and(tmp159, bytetest_ab_ab);
        struct_Ll.cc = simd_or(tmp177, struct_Ll.cc);
        bytetest_c7 = simd_and(tmp13, tmp48);
        bytetest_ad_ad = simd_and(tmp69, tmp55);
        tmp178 = simd_and(tmp159, bytetest_ad_ad);
        struct_Ll.cc = simd_or(tmp178, struct_Ll.cc);
        bytetest_c7 = simd_and(tmp13, tmp48);
        tmp179 = simd_and(tmp16, basis_bits.bit_2);
        tmp180 = simd_not(tmp9);
        tmp181 = simd_or(simd_and(basis_bits.bit_3, tmp180), simd_andc(tmp33, basis_bits.bit_3));
        bytetest_af_b0 = simd_and(tmp179, tmp181);
        tmp182 = simd_and(tmp159, bytetest_af_b0);
        struct_Ll.cc = simd_or(tmp182, struct_Ll.cc);
        bytetest_c7 = simd_and(tmp13, tmp48);
        bytetest_b3_b3 = simd_and(tmp18, tmp27);
        tmp183 = simd_and(tmp159, bytetest_b3_b3);
        struct_Ll.cc = simd_or(tmp183, struct_Ll.cc);
        bytetest_c7 = simd_and(tmp13, tmp48);
        bytetest_b5_b5 = simd_and(tmp18, tmp21);
        tmp184 = simd_and(tmp159, bytetest_b5_b5);
        struct_Ll.cc = simd_or(tmp184, struct_Ll.cc);
        bytetest_c7 = simd_and(tmp13, tmp48);
        bytetest_b9_b9 = simd_and(tmp18, tmp51);
        tmp185 = simd_and(tmp159, bytetest_b9_b9);
        struct_Ll.cc = simd_or(tmp185, struct_Ll.cc);
        bytetest_c7 = simd_and(tmp13, tmp48);
        bytetest_bb_bb = simd_and(tmp18, tmp53);
        tmp186 = simd_and(tmp159, bytetest_bb_bb);
        struct_Ll.cc = simd_or(tmp186, struct_Ll.cc);
        bytetest_c7 = simd_and(tmp13, tmp48);
        bytetest_bd_bd = simd_and(tmp18, tmp55);
        tmp187 = simd_and(tmp159, bytetest_bd_bd);
        struct_Ll.cc = simd_or(tmp187, struct_Ll.cc);
        bytetest_c7 = simd_and(tmp13, tmp48);
        bytetest_bf_bf = simd_and(tmp18, tmp33);
        tmp188 = simd_and(tmp159, bytetest_bf_bf);
        struct_Ll.cc = simd_or(tmp188, struct_Ll.cc);
        bytetest_c8 = simd_and(tmp13, tmp133);
        bytetest_81_81 = simd_and(tmp41, tmp42);
        tmp189 = simd_and(tmp23, bytetest_c8);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp189, carryQ.get_carry_in(7), tmp190));
        tmp191 = simd_and(tmp190, bytetest_81_81);
        struct_Ll.cc = simd_or(tmp191, struct_Ll.cc);
        bytetest_c8 = simd_and(tmp13, tmp133);
        bytetest_83_83 = simd_and(tmp41, tmp27);
        tmp192 = simd_and(tmp190, bytetest_83_83);
        struct_Ll.cc = simd_or(tmp192, struct_Ll.cc);
        bytetest_c8 = simd_and(tmp13, tmp133);
        bytetest_85_85 = simd_and(tmp41, tmp21);
        tmp193 = simd_and(tmp190, bytetest_85_85);
        struct_Ll.cc = simd_or(tmp193, struct_Ll.cc);
        bytetest_c8 = simd_and(tmp13, tmp133);
        bytetest_87_87 = simd_and(tmp41, tmp48);
        tmp194 = simd_and(tmp190, bytetest_87_87);
        struct_Ll.cc = simd_or(tmp194, struct_Ll.cc);
        bytetest_c8 = simd_and(tmp13, tmp133);
        bytetest_89_89 = simd_and(tmp41, tmp51);
        tmp195 = simd_and(tmp190, bytetest_89_89);
        struct_Ll.cc = simd_or(tmp195, struct_Ll.cc);
        bytetest_c8 = simd_and(tmp13, tmp133);
        bytetest_8b_8b = simd_and(tmp41, tmp53);
        tmp196 = simd_and(tmp190, bytetest_8b_8b);
        struct_Ll.cc = simd_or(tmp196, struct_Ll.cc);
        bytetest_c8 = simd_and(tmp13, tmp133);
        bytetest_8d_8d = simd_and(tmp41, tmp55);
        tmp197 = simd_and(tmp190, bytetest_8d_8d);
        struct_Ll.cc = simd_or(tmp197, struct_Ll.cc);
        bytetest_c8 = simd_and(tmp13, tmp133);
        bytetest_8f_8f = simd_and(tmp41, tmp33);
        tmp198 = simd_and(tmp190, bytetest_8f_8f);
        struct_Ll.cc = simd_or(tmp198, struct_Ll.cc);
        bytetest_c8 = simd_and(tmp13, tmp133);
        bytetest_91_91 = simd_and(tmp59, tmp42);
        tmp199 = simd_and(tmp190, bytetest_91_91);
        struct_Ll.cc = simd_or(tmp199, struct_Ll.cc);
        bytetest_c8 = simd_and(tmp13, tmp133);
        bytetest_93_93 = simd_and(tmp59, tmp27);
        tmp200 = simd_and(tmp190, bytetest_93_93);
        struct_Ll.cc = simd_or(tmp200, struct_Ll.cc);
        bytetest_c8 = simd_and(tmp13, tmp133);
        bytetest_95_95 = simd_and(tmp59, tmp21);
        tmp201 = simd_and(tmp190, bytetest_95_95);
        struct_Ll.cc = simd_or(tmp201, struct_Ll.cc);
        bytetest_c8 = simd_and(tmp13, tmp133);
        bytetest_97_97 = simd_and(tmp59, tmp48);
        tmp202 = simd_and(tmp190, bytetest_97_97);
        struct_Ll.cc = simd_or(tmp202, struct_Ll.cc);
        bytetest_c8 = simd_and(tmp13, tmp133);
        bytetest_99_99 = simd_and(tmp59, tmp51);
        tmp203 = simd_and(tmp190, bytetest_99_99);
        struct_Ll.cc = simd_or(tmp203, struct_Ll.cc);
        bytetest_c8 = simd_and(tmp13, tmp133);
        bytetest_9b_9b = simd_and(tmp59, tmp53);
        tmp204 = simd_and(tmp190, bytetest_9b_9b);
        struct_Ll.cc = simd_or(tmp204, struct_Ll.cc);
        bytetest_c8 = simd_and(tmp13, tmp133);
        bytetest_9d_9d = simd_and(tmp59, tmp55);
        tmp205 = simd_and(tmp190, bytetest_9d_9d);
        struct_Ll.cc = simd_or(tmp205, struct_Ll.cc);
        bytetest_c8 = simd_and(tmp13, tmp133);
        bytetest_9f_9f = simd_and(tmp59, tmp33);
        tmp206 = simd_and(tmp190, bytetest_9f_9f);
        struct_Ll.cc = simd_or(tmp206, struct_Ll.cc);
        bytetest_c8 = simd_and(tmp13, tmp133);
        bytetest_a1_a1 = simd_and(tmp69, tmp42);
        tmp207 = simd_and(tmp190, bytetest_a1_a1);
        struct_Ll.cc = simd_or(tmp207, struct_Ll.cc);
        bytetest_c8 = simd_and(tmp13, tmp133);
        bytetest_a3_a3 = simd_and(tmp69, tmp27);
        tmp208 = simd_and(tmp190, bytetest_a3_a3);
        struct_Ll.cc = simd_or(tmp208, struct_Ll.cc);
        bytetest_c8 = simd_and(tmp13, tmp133);
        bytetest_a5_a5 = simd_and(tmp69, tmp21);
        tmp209 = simd_and(tmp190, bytetest_a5_a5);
        struct_Ll.cc = simd_or(tmp209, struct_Ll.cc);
        bytetest_c8 = simd_and(tmp13, tmp133);
        bytetest_a7_a7 = simd_and(tmp69, tmp48);
        tmp210 = simd_and(tmp190, bytetest_a7_a7);
        struct_Ll.cc = simd_or(tmp210, struct_Ll.cc);
        bytetest_c8 = simd_and(tmp13, tmp133);
        bytetest_a9_a9 = simd_and(tmp69, tmp51);
        tmp211 = simd_and(tmp190, bytetest_a9_a9);
        struct_Ll.cc = simd_or(tmp211, struct_Ll.cc);
        bytetest_c8 = simd_and(tmp13, tmp133);
        bytetest_ab_ab = simd_and(tmp69, tmp53);
        tmp212 = simd_and(tmp190, bytetest_ab_ab);
        struct_Ll.cc = simd_or(tmp212, struct_Ll.cc);
        bytetest_c8 = simd_and(tmp13, tmp133);
        bytetest_ad_ad = simd_and(tmp69, tmp55);
        tmp213 = simd_and(tmp190, bytetest_ad_ad);
        struct_Ll.cc = simd_or(tmp213, struct_Ll.cc);
        bytetest_c8 = simd_and(tmp13, tmp133);
        bytetest_af_af = simd_and(tmp69, tmp33);
        tmp214 = simd_and(tmp190, bytetest_af_af);
        struct_Ll.cc = simd_or(tmp214, struct_Ll.cc);
        bytetest_c8 = simd_and(tmp13, tmp133);
        bytetest_b1_b1 = simd_and(tmp18, tmp42);
        tmp215 = simd_and(tmp190, bytetest_b1_b1);
        struct_Ll.cc = simd_or(tmp215, struct_Ll.cc);
        bytetest_c8 = simd_and(tmp13, tmp133);
        tmp216 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
        tmp217 = simd_not(tmp216);
        tmp218 = simd_or(simd_and(basis_bits.bit_4, tmp217), simd_andc(tmp4, basis_bits.bit_4));
        bytetest_b3_b9 = simd_and(tmp18, tmp218);
        tmp219 = simd_and(tmp190, bytetest_b3_b9);
        struct_Ll.cc = simd_or(tmp219, struct_Ll.cc);
        bytetest_c8 = simd_and(tmp13, tmp133);
        bytetest_bc_bc = simd_and(tmp18, tmp87);
        tmp220 = simd_and(tmp190, bytetest_bc_bc);
        struct_Ll.cc = simd_or(tmp220, struct_Ll.cc);
        bytetest_c9 = simd_and(tmp13, tmp51);
        bytetest_80_80 = simd_andc(tmp41, tmp9);
        tmp221 = simd_and(tmp23, bytetest_c9);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(tmp221, carryQ.get_carry_in(8), tmp222));
        tmp223 = simd_and(tmp222, bytetest_80_80);
        bytetest_c8 = simd_and(tmp13, tmp133);
        bytetest_bf_bf = simd_and(tmp18, tmp33);
        tmp224 = simd_and(tmp190, bytetest_bf_bf);
        tmp225 = simd_or(tmp224, tmp223);
        struct_Ll.cc = simd_or(tmp225, struct_Ll.cc);
        bytetest_c9 = simd_and(tmp13, tmp51);
        bytetest_82_82 = simd_and(tmp41, tmp15);
        tmp226 = simd_and(tmp222, bytetest_82_82);
        struct_Ll.cc = simd_or(tmp226, struct_Ll.cc);
        bytetest_c9 = simd_and(tmp13, tmp51);
        bytetest_87_87 = simd_and(tmp41, tmp48);
        tmp227 = simd_and(tmp222, bytetest_87_87);
        struct_Ll.cc = simd_or(tmp227, struct_Ll.cc);
        bytetest_c9 = simd_and(tmp13, tmp51);
        bytetest_89_89 = simd_and(tmp41, tmp51);
        tmp228 = simd_and(tmp222, bytetest_89_89);
        struct_Ll.cc = simd_or(tmp228, struct_Ll.cc);
        bytetest_c9 = simd_and(tmp13, tmp51);
        bytetest_8b_8b = simd_and(tmp41, tmp53);
        tmp229 = simd_and(tmp222, bytetest_8b_8b);
        struct_Ll.cc = simd_or(tmp229, struct_Ll.cc);
        bytetest_c9 = simd_and(tmp13, tmp51);
        bytetest_8d_8d = simd_and(tmp41, tmp55);
        tmp230 = simd_and(tmp222, bytetest_8d_8d);
        struct_Ll.cc = simd_or(tmp230, struct_Ll.cc);
        bytetest_ca = simd_and(tmp13, tmp85);
        tmp231 = simd_andc(tmp16, basis_bits.bit_2);
        tmp232 = simd_and(basis_bits.bit_3, tmp7);
        bytetest_80_93 = simd_andc(tmp231, tmp232);
        tmp233 = simd_and(tmp23, bytetest_ca);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(tmp233, carryQ.get_carry_in(9), tmp234));
        tmp235 = simd_and(tmp234, bytetest_80_93);
        bytetest_c9 = simd_and(tmp13, tmp51);
        tmp236 = simd_or(basis_bits.bit_3, tmp33);
        tmp237 = simd_or(basis_bits.bit_2, tmp236);
        bytetest_8f_bf = simd_and(tmp16, tmp237);
        tmp238 = simd_and(tmp222, bytetest_8f_bf);
        tmp239 = simd_or(tmp238, tmp235);
        struct_Ll.cc = simd_or(tmp239, struct_Ll.cc);
        bytetest_ca = simd_and(tmp13, tmp85);
        tmp240 = simd_not(basis_bits.bit_3);
        tmp241 = simd_and(basis_bits.bit_5, tmp8);
        tmp242 = simd_or(basis_bits.bit_4, tmp241);
        tmp243 = simd_and(basis_bits.bit_3, tmp242);
        tmp244 = simd_or(simd_and(basis_bits.bit_2, tmp240), simd_andc(tmp243, basis_bits.bit_2));
        bytetest_95_af = simd_and(tmp16, tmp244);
        tmp245 = simd_and(tmp234, bytetest_95_af);
        struct_Ll.cc = simd_or(tmp245, struct_Ll.cc);
        bytetest_cd = simd_and(tmp13, tmp55);
        bytetest_b1_b1 = simd_and(tmp18, tmp42);
        tmp246 = simd_and(tmp23, bytetest_cd);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(tmp246, carryQ.get_carry_in(10), tmp247));
        tmp248 = simd_and(tmp247, bytetest_b1_b1);
        struct_Ll.cc = simd_or(tmp248, struct_Ll.cc);
        bytetest_cd = simd_and(tmp13, tmp55);
        bytetest_b3_b3 = simd_and(tmp18, tmp27);
        tmp249 = simd_and(tmp247, bytetest_b3_b3);
        struct_Ll.cc = simd_or(tmp249, struct_Ll.cc);
        bytetest_cd = simd_and(tmp13, tmp55);
        bytetest_b7_b7 = simd_and(tmp18, tmp48);
        tmp250 = simd_and(tmp247, bytetest_b7_b7);
        struct_Ll.cc = simd_or(tmp250, struct_Ll.cc);
        bytetest_cd = simd_and(tmp13, tmp55);
        tmp251 = simd_not(basis_bits.bit_6);
        tmp252 = simd_or(simd_and(basis_bits.bit_5, tmp251), simd_andc(tmp3, basis_bits.bit_5));
        bytetest_bb_bd = simd_and(bytetest_b8_bf, tmp252);
        tmp253 = simd_and(tmp247, bytetest_bb_bd);
        struct_Ll.cc = simd_or(tmp253, struct_Ll.cc);
        bytetest_ce = simd_and(tmp13, tmp89);
        bytetest_90_90 = simd_andc(tmp59, tmp9);
        tmp254 = simd_and(tmp23, bytetest_ce);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(tmp254, carryQ.get_carry_in(11), tmp255));
        tmp256 = simd_and(tmp255, bytetest_90_90);
        struct_Ll.cc = simd_or(tmp256, struct_Ll.cc);
        bytetest_cf = simd_and(tmp13, tmp33);
        tmp257 = simd_and(basis_bits.bit_4, tmp28);
        bytetest_80_8e = simd_andc(tmp41, tmp257);
        tmp258 = simd_and(tmp23, bytetest_cf);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(tmp258, carryQ.get_carry_in(12), tmp259));
        tmp260 = simd_and(tmp259, bytetest_80_8e);
        bytetest_ce = simd_and(tmp13, tmp89);
        tmp261 = simd_or(basis_bits.bit_3, tmp32);
        bytetest_ac_bf = simd_and(tmp179, tmp261);
        tmp262 = simd_and(tmp255, bytetest_ac_bf);
        tmp263 = simd_or(tmp262, tmp260);
        struct_Ll.cc = simd_or(tmp263, struct_Ll.cc);
        bytetest_cf = simd_and(tmp13, tmp33);
        tmp264 = simd_or(tmp7, basis_bits.bit_6);
        bytetest_90_91 = simd_andc(tmp59, tmp264);
        tmp265 = simd_and(tmp259, bytetest_90_91);
        struct_Ll.cc = simd_or(tmp265, struct_Ll.cc);
        bytetest_cf = simd_and(tmp13, tmp33);
        tmp266 = simd_and(tmp59, tmp19);
        bytetest_95_97 = simd_and(tmp266, tmp8);
        tmp267 = simd_and(tmp259, bytetest_95_97);
        struct_Ll.cc = simd_or(tmp267, struct_Ll.cc);
        bytetest_cf = simd_and(tmp13, tmp33);
        bytetest_99_99 = simd_and(tmp59, tmp51);
        tmp268 = simd_and(tmp259, bytetest_99_99);
        struct_Ll.cc = simd_or(tmp268, struct_Ll.cc);
        bytetest_cf = simd_and(tmp13, tmp33);
        bytetest_9b_9b = simd_and(tmp59, tmp53);
        tmp269 = simd_and(tmp259, bytetest_9b_9b);
        struct_Ll.cc = simd_or(tmp269, struct_Ll.cc);
        bytetest_cf = simd_and(tmp13, tmp33);
        bytetest_9d_9d = simd_and(tmp59, tmp55);
        tmp270 = simd_and(tmp259, bytetest_9d_9d);
        struct_Ll.cc = simd_or(tmp270, struct_Ll.cc);
        bytetest_cf = simd_and(tmp13, tmp33);
        bytetest_9f_9f = simd_and(tmp59, tmp33);
        tmp271 = simd_and(tmp259, bytetest_9f_9f);
        struct_Ll.cc = simd_or(tmp271, struct_Ll.cc);
        bytetest_cf = simd_and(tmp13, tmp33);
        bytetest_a1_a1 = simd_and(tmp69, tmp42);
        tmp272 = simd_and(tmp259, bytetest_a1_a1);
        struct_Ll.cc = simd_or(tmp272, struct_Ll.cc);
        bytetest_cf = simd_and(tmp13, tmp33);
        bytetest_a3_a3 = simd_and(tmp69, tmp27);
        tmp273 = simd_and(tmp259, bytetest_a3_a3);
        struct_Ll.cc = simd_or(tmp273, struct_Ll.cc);
        bytetest_cf = simd_and(tmp13, tmp33);
        bytetest_a5_a5 = simd_and(tmp69, tmp21);
        tmp274 = simd_and(tmp259, bytetest_a5_a5);
        struct_Ll.cc = simd_or(tmp274, struct_Ll.cc);
        bytetest_cf = simd_and(tmp13, tmp33);
        bytetest_a7_a7 = simd_and(tmp69, tmp48);
        tmp275 = simd_and(tmp259, bytetest_a7_a7);
        struct_Ll.cc = simd_or(tmp275, struct_Ll.cc);
        bytetest_cf = simd_and(tmp13, tmp33);
        bytetest_a9_a9 = simd_and(tmp69, tmp51);
        tmp276 = simd_and(tmp259, bytetest_a9_a9);
        struct_Ll.cc = simd_or(tmp276, struct_Ll.cc);
        bytetest_cf = simd_and(tmp13, tmp33);
        bytetest_ab_ab = simd_and(tmp69, tmp53);
        tmp277 = simd_and(tmp259, bytetest_ab_ab);
        struct_Ll.cc = simd_or(tmp277, struct_Ll.cc);
        bytetest_cf = simd_and(tmp13, tmp33);
        bytetest_ad_ad = simd_and(tmp69, tmp55);
        tmp278 = simd_and(tmp259, bytetest_ad_ad);
        struct_Ll.cc = simd_or(tmp278, struct_Ll.cc);
        bytetest_cf = simd_and(tmp13, tmp33);
        tmp279 = simd_not(tmp7);
        tmp280 = simd_or(simd_and(basis_bits.bit_3, tmp279), simd_andc(tmp33, basis_bits.bit_3));
        bytetest_af_b3 = simd_and(tmp179, tmp280);
        tmp281 = simd_and(tmp259, bytetest_af_b3);
        struct_Ll.cc = simd_or(tmp281, struct_Ll.cc);
        bytetest_cf = simd_and(tmp13, tmp33);
        bytetest_b5_b5 = simd_and(tmp18, tmp21);
        tmp282 = simd_and(tmp259, bytetest_b5_b5);
        struct_Ll.cc = simd_or(tmp282, struct_Ll.cc);
        bytetest_cf = simd_and(tmp13, tmp33);
        bytetest_b8_b8 = simd_and(tmp18, tmp133);
        tmp283 = simd_and(tmp259, bytetest_b8_b8);
        struct_Ll.cc = simd_or(tmp283, struct_Ll.cc);
        bytetest_cf = simd_and(tmp13, tmp33);
        tmp284 = simd_not(tmp8);
        tmp285 = simd_or(simd_and(basis_bits.bit_5, tmp284), simd_andc(tmp3, basis_bits.bit_5));
        bytetest_bb_bc = simd_and(bytetest_b8_bf, tmp285);
        tmp286 = simd_and(tmp259, bytetest_bb_bc);
        struct_Ll.cc = simd_or(tmp286, struct_Ll.cc);
        tmp287 = simd_and(tmp11, tmp58);
        bytetest_d1 = simd_and(tmp287, tmp42);
        bytetest_80_9f = simd_andc(tmp16, basis_bits.bit_2);
        tmp288 = simd_and(tmp23, bytetest_d1);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(tmp288, carryQ.get_carry_in(13), tmp289));
        tmp290 = simd_and(tmp289, bytetest_80_9f);
        bytetest_d0 = simd_andc(tmp287, tmp9);
        bytetest_b0_bf = simd_and(tmp16, tmp17);
        tmp291 = simd_and(tmp23, bytetest_d0);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(tmp291, carryQ.get_carry_in(14), tmp292));
        tmp293 = simd_and(tmp292, bytetest_b0_bf);
        tmp294 = simd_or(tmp293, tmp290);
        struct_Ll.cc = simd_or(tmp294, struct_Ll.cc);
        bytetest_d1 = simd_and(tmp287, tmp42);
        bytetest_a1_a1 = simd_and(tmp69, tmp42);
        tmp295 = simd_and(tmp289, bytetest_a1_a1);
        struct_Ll.cc = simd_or(tmp295, struct_Ll.cc);
        bytetest_d1 = simd_and(tmp287, tmp42);
        bytetest_a3_a3 = simd_and(tmp69, tmp27);
        tmp296 = simd_and(tmp289, bytetest_a3_a3);
        struct_Ll.cc = simd_or(tmp296, struct_Ll.cc);
        bytetest_d1 = simd_and(tmp287, tmp42);
        bytetest_a5_a5 = simd_and(tmp69, tmp21);
        tmp297 = simd_and(tmp289, bytetest_a5_a5);
        struct_Ll.cc = simd_or(tmp297, struct_Ll.cc);
        bytetest_d1 = simd_and(tmp287, tmp42);
        bytetest_a7_a7 = simd_and(tmp69, tmp48);
        tmp298 = simd_and(tmp289, bytetest_a7_a7);
        struct_Ll.cc = simd_or(tmp298, struct_Ll.cc);
        bytetest_d1 = simd_and(tmp287, tmp42);
        bytetest_a9_a9 = simd_and(tmp69, tmp51);
        tmp299 = simd_and(tmp289, bytetest_a9_a9);
        struct_Ll.cc = simd_or(tmp299, struct_Ll.cc);
        bytetest_d1 = simd_and(tmp287, tmp42);
        bytetest_ab_ab = simd_and(tmp69, tmp53);
        tmp300 = simd_and(tmp289, bytetest_ab_ab);
        struct_Ll.cc = simd_or(tmp300, struct_Ll.cc);
        bytetest_d1 = simd_and(tmp287, tmp42);
        bytetest_ad_ad = simd_and(tmp69, tmp55);
        tmp301 = simd_and(tmp289, bytetest_ad_ad);
        struct_Ll.cc = simd_or(tmp301, struct_Ll.cc);
        bytetest_d1 = simd_and(tmp287, tmp42);
        bytetest_af_af = simd_and(tmp69, tmp33);
        tmp302 = simd_and(tmp289, bytetest_af_af);
        struct_Ll.cc = simd_or(tmp302, struct_Ll.cc);
        bytetest_d1 = simd_and(tmp287, tmp42);
        bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp42);
        tmp303 = simd_and(tmp289, bytetest_b1_b1);
        struct_Ll.cc = simd_or(tmp303, struct_Ll.cc);
        bytetest_d1 = simd_and(tmp287, tmp42);
        bytetest_b3_b3 = simd_and(bytetest_b0_bf, tmp27);
        tmp304 = simd_and(tmp289, bytetest_b3_b3);
        struct_Ll.cc = simd_or(tmp304, struct_Ll.cc);
        bytetest_d1 = simd_and(tmp287, tmp42);
        bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp21);
        tmp305 = simd_and(tmp289, bytetest_b5_b5);
        struct_Ll.cc = simd_or(tmp305, struct_Ll.cc);
        bytetest_d1 = simd_and(tmp287, tmp42);
        bytetest_b7_b7 = simd_and(bytetest_b0_bf, tmp48);
        tmp306 = simd_and(tmp289, bytetest_b7_b7);
        struct_Ll.cc = simd_or(tmp306, struct_Ll.cc);
        bytetest_d1 = simd_and(tmp287, tmp42);
        bytetest_b9_b9 = simd_and(bytetest_b0_bf, tmp51);
        tmp307 = simd_and(tmp289, bytetest_b9_b9);
        struct_Ll.cc = simd_or(tmp307, struct_Ll.cc);
        bytetest_d1 = simd_and(tmp287, tmp42);
        bytetest_bb_bb = simd_and(bytetest_b0_bf, tmp53);
        tmp308 = simd_and(tmp289, bytetest_bb_bb);
        struct_Ll.cc = simd_or(tmp308, struct_Ll.cc);
        bytetest_d1 = simd_and(tmp287, tmp42);
        bytetest_bd_bd = simd_and(bytetest_b0_bf, tmp55);
        tmp309 = simd_and(tmp289, bytetest_bd_bd);
        struct_Ll.cc = simd_or(tmp309, struct_Ll.cc);
        bytetest_d1 = simd_and(tmp287, tmp42);
        bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp33);
        tmp310 = simd_and(tmp289, bytetest_bf_bf);
        struct_Ll.cc = simd_or(tmp310, struct_Ll.cc);
        bytetest_d2 = simd_and(tmp287, tmp15);
        bytetest_81_81 = simd_and(tmp41, tmp42);
        tmp311 = simd_and(tmp23, bytetest_d2);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(tmp311, carryQ.get_carry_in(15), tmp312));
        tmp313 = simd_and(tmp312, bytetest_81_81);
        struct_Ll.cc = simd_or(tmp313, struct_Ll.cc);
        bytetest_d2 = simd_and(tmp287, tmp15);
        bytetest_8b_8b = simd_and(tmp41, tmp53);
        tmp314 = simd_and(tmp312, bytetest_8b_8b);
        struct_Ll.cc = simd_or(tmp314, struct_Ll.cc);
        bytetest_d2 = simd_and(tmp287, tmp15);
        bytetest_8d_8d = simd_and(tmp41, tmp55);
        tmp315 = simd_and(tmp312, bytetest_8d_8d);
        struct_Ll.cc = simd_or(tmp315, struct_Ll.cc);
        bytetest_d2 = simd_and(tmp287, tmp15);
        bytetest_8f_8f = simd_and(tmp41, tmp33);
        tmp316 = simd_and(tmp312, bytetest_8f_8f);
        struct_Ll.cc = simd_or(tmp316, struct_Ll.cc);
        bytetest_d2 = simd_and(tmp287, tmp15);
        bytetest_91_91 = simd_and(tmp59, tmp42);
        tmp317 = simd_and(tmp312, bytetest_91_91);
        struct_Ll.cc = simd_or(tmp317, struct_Ll.cc);
        bytetest_d2 = simd_and(tmp287, tmp15);
        bytetest_93_93 = simd_and(tmp59, tmp27);
        tmp318 = simd_and(tmp312, bytetest_93_93);
        struct_Ll.cc = simd_or(tmp318, struct_Ll.cc);
        bytetest_d2 = simd_and(tmp287, tmp15);
        bytetest_95_95 = simd_and(tmp59, tmp21);
        tmp319 = simd_and(tmp312, bytetest_95_95);
        struct_Ll.cc = simd_or(tmp319, struct_Ll.cc);
        bytetest_d2 = simd_and(tmp287, tmp15);
        bytetest_97_97 = simd_and(tmp59, tmp48);
        tmp320 = simd_and(tmp312, bytetest_97_97);
        struct_Ll.cc = simd_or(tmp320, struct_Ll.cc);
        bytetest_d2 = simd_and(tmp287, tmp15);
        bytetest_99_99 = simd_and(tmp59, tmp51);
        tmp321 = simd_and(tmp312, bytetest_99_99);
        struct_Ll.cc = simd_or(tmp321, struct_Ll.cc);
        bytetest_d2 = simd_and(tmp287, tmp15);
        bytetest_9b_9b = simd_and(tmp59, tmp53);
        tmp322 = simd_and(tmp312, bytetest_9b_9b);
        struct_Ll.cc = simd_or(tmp322, struct_Ll.cc);
        bytetest_d2 = simd_and(tmp287, tmp15);
        bytetest_9d_9d = simd_and(tmp59, tmp55);
        tmp323 = simd_and(tmp312, bytetest_9d_9d);
        struct_Ll.cc = simd_or(tmp323, struct_Ll.cc);
        bytetest_d2 = simd_and(tmp287, tmp15);
        bytetest_9f_9f = simd_and(tmp59, tmp33);
        tmp324 = simd_and(tmp312, bytetest_9f_9f);
        struct_Ll.cc = simd_or(tmp324, struct_Ll.cc);
        bytetest_d2 = simd_and(tmp287, tmp15);
        bytetest_a1_a1 = simd_and(tmp69, tmp42);
        tmp325 = simd_and(tmp312, bytetest_a1_a1);
        struct_Ll.cc = simd_or(tmp325, struct_Ll.cc);
        bytetest_d2 = simd_and(tmp287, tmp15);
        bytetest_a3_a3 = simd_and(tmp69, tmp27);
        tmp326 = simd_and(tmp312, bytetest_a3_a3);
        struct_Ll.cc = simd_or(tmp326, struct_Ll.cc);
        bytetest_d2 = simd_and(tmp287, tmp15);
        bytetest_a5_a5 = simd_and(tmp69, tmp21);
        tmp327 = simd_and(tmp312, bytetest_a5_a5);
        struct_Ll.cc = simd_or(tmp327, struct_Ll.cc);
        bytetest_d2 = simd_and(tmp287, tmp15);
        bytetest_a7_a7 = simd_and(tmp69, tmp48);
        tmp328 = simd_and(tmp312, bytetest_a7_a7);
        struct_Ll.cc = simd_or(tmp328, struct_Ll.cc);
        bytetest_d2 = simd_and(tmp287, tmp15);
        bytetest_a9_a9 = simd_and(tmp69, tmp51);
        tmp329 = simd_and(tmp312, bytetest_a9_a9);
        struct_Ll.cc = simd_or(tmp329, struct_Ll.cc);
        bytetest_d2 = simd_and(tmp287, tmp15);
        bytetest_ab_ab = simd_and(tmp69, tmp53);
        tmp330 = simd_and(tmp312, bytetest_ab_ab);
        struct_Ll.cc = simd_or(tmp330, struct_Ll.cc);
        bytetest_d2 = simd_and(tmp287, tmp15);
        bytetest_ad_ad = simd_and(tmp69, tmp55);
        tmp331 = simd_and(tmp312, bytetest_ad_ad);
        struct_Ll.cc = simd_or(tmp331, struct_Ll.cc);
        bytetest_d2 = simd_and(tmp287, tmp15);
        bytetest_af_af = simd_and(tmp69, tmp33);
        tmp332 = simd_and(tmp312, bytetest_af_af);
        struct_Ll.cc = simd_or(tmp332, struct_Ll.cc);
        bytetest_d2 = simd_and(tmp287, tmp15);
        bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp42);
        tmp333 = simd_and(tmp312, bytetest_b1_b1);
        struct_Ll.cc = simd_or(tmp333, struct_Ll.cc);
        bytetest_d2 = simd_and(tmp287, tmp15);
        bytetest_b3_b3 = simd_and(bytetest_b0_bf, tmp27);
        tmp334 = simd_and(tmp312, bytetest_b3_b3);
        struct_Ll.cc = simd_or(tmp334, struct_Ll.cc);
        bytetest_d2 = simd_and(tmp287, tmp15);
        bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp21);
        tmp335 = simd_and(tmp312, bytetest_b5_b5);
        struct_Ll.cc = simd_or(tmp335, struct_Ll.cc);
        bytetest_d2 = simd_and(tmp287, tmp15);
        bytetest_b7_b7 = simd_and(bytetest_b0_bf, tmp48);
        tmp336 = simd_and(tmp312, bytetest_b7_b7);
        struct_Ll.cc = simd_or(tmp336, struct_Ll.cc);
        bytetest_d2 = simd_and(tmp287, tmp15);
        bytetest_b9_b9 = simd_and(bytetest_b0_bf, tmp51);
        tmp337 = simd_and(tmp312, bytetest_b9_b9);
        struct_Ll.cc = simd_or(tmp337, struct_Ll.cc);
        bytetest_d2 = simd_and(tmp287, tmp15);
        bytetest_bb_bb = simd_and(bytetest_b0_bf, tmp53);
        tmp338 = simd_and(tmp312, bytetest_bb_bb);
        struct_Ll.cc = simd_or(tmp338, struct_Ll.cc);
        bytetest_d2 = simd_and(tmp287, tmp15);
        bytetest_bd_bd = simd_and(bytetest_b0_bf, tmp55);
        tmp339 = simd_and(tmp312, bytetest_bd_bd);
        struct_Ll.cc = simd_or(tmp339, struct_Ll.cc);
        bytetest_d2 = simd_and(tmp287, tmp15);
        bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp33);
        tmp340 = simd_and(tmp312, bytetest_bf_bf);
        struct_Ll.cc = simd_or(tmp340, struct_Ll.cc);
        bytetest_d3 = simd_and(tmp287, tmp27);
        bytetest_82_82 = simd_and(tmp41, tmp15);
        tmp341 = simd_and(tmp23, bytetest_d3);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(tmp341, carryQ.get_carry_in(16), tmp342));
        tmp343 = simd_and(tmp342, bytetest_82_82);
        struct_Ll.cc = simd_or(tmp343, struct_Ll.cc);
        bytetest_d3 = simd_and(tmp287, tmp27);
        bytetest_84_84 = simd_and(tmp41, tmp40);
        tmp344 = simd_and(tmp342, bytetest_84_84);
        struct_Ll.cc = simd_or(tmp344, struct_Ll.cc);
        bytetest_d3 = simd_and(tmp287, tmp27);
        bytetest_86_86 = simd_and(tmp41, tmp96);
        tmp345 = simd_and(tmp342, bytetest_86_86);
        struct_Ll.cc = simd_or(tmp345, struct_Ll.cc);
        bytetest_d3 = simd_and(tmp287, tmp27);
        bytetest_88_88 = simd_and(tmp41, tmp133);
        tmp346 = simd_and(tmp342, bytetest_88_88);
        struct_Ll.cc = simd_or(tmp346, struct_Ll.cc);
        bytetest_d3 = simd_and(tmp287, tmp27);
        bytetest_8a_8a = simd_and(tmp41, tmp85);
        tmp347 = simd_and(tmp342, bytetest_8a_8a);
        struct_Ll.cc = simd_or(tmp347, struct_Ll.cc);
        bytetest_d3 = simd_and(tmp287, tmp27);
        bytetest_8c_8c = simd_and(tmp41, tmp87);
        tmp348 = simd_and(tmp342, bytetest_8c_8c);
        struct_Ll.cc = simd_or(tmp348, struct_Ll.cc);
        bytetest_d3 = simd_and(tmp287, tmp27);
        bytetest_8e_8f = simd_and(tmp41, tmp128);
        tmp349 = simd_and(tmp342, bytetest_8e_8f);
        struct_Ll.cc = simd_or(tmp349, struct_Ll.cc);
        bytetest_d3 = simd_and(tmp287, tmp27);
        bytetest_91_91 = simd_and(tmp59, tmp42);
        tmp350 = simd_and(tmp342, bytetest_91_91);
        struct_Ll.cc = simd_or(tmp350, struct_Ll.cc);
        bytetest_d3 = simd_and(tmp287, tmp27);
        bytetest_93_93 = simd_and(tmp59, tmp27);
        tmp351 = simd_and(tmp342, bytetest_93_93);
        struct_Ll.cc = simd_or(tmp351, struct_Ll.cc);
        bytetest_d3 = simd_and(tmp287, tmp27);
        bytetest_95_95 = simd_and(tmp59, tmp21);
        tmp352 = simd_and(tmp342, bytetest_95_95);
        struct_Ll.cc = simd_or(tmp352, struct_Ll.cc);
        bytetest_d3 = simd_and(tmp287, tmp27);
        bytetest_97_97 = simd_and(tmp59, tmp48);
        tmp353 = simd_and(tmp342, bytetest_97_97);
        struct_Ll.cc = simd_or(tmp353, struct_Ll.cc);
        bytetest_d3 = simd_and(tmp287, tmp27);
        bytetest_99_99 = simd_and(tmp59, tmp51);
        tmp354 = simd_and(tmp342, bytetest_99_99);
        struct_Ll.cc = simd_or(tmp354, struct_Ll.cc);
        bytetest_d3 = simd_and(tmp287, tmp27);
        bytetest_9b_9b = simd_and(tmp59, tmp53);
        tmp355 = simd_and(tmp342, bytetest_9b_9b);
        struct_Ll.cc = simd_or(tmp355, struct_Ll.cc);
        bytetest_d3 = simd_and(tmp287, tmp27);
        bytetest_9d_9d = simd_and(tmp59, tmp55);
        tmp356 = simd_and(tmp342, bytetest_9d_9d);
        struct_Ll.cc = simd_or(tmp356, struct_Ll.cc);
        bytetest_d3 = simd_and(tmp287, tmp27);
        bytetest_9f_9f = simd_and(tmp59, tmp33);
        tmp357 = simd_and(tmp342, bytetest_9f_9f);
        struct_Ll.cc = simd_or(tmp357, struct_Ll.cc);
        bytetest_d3 = simd_and(tmp287, tmp27);
        bytetest_a1_a1 = simd_and(tmp69, tmp42);
        tmp358 = simd_and(tmp342, bytetest_a1_a1);
        struct_Ll.cc = simd_or(tmp358, struct_Ll.cc);
        bytetest_d3 = simd_and(tmp287, tmp27);
        bytetest_a3_a3 = simd_and(tmp69, tmp27);
        tmp359 = simd_and(tmp342, bytetest_a3_a3);
        struct_Ll.cc = simd_or(tmp359, struct_Ll.cc);
        bytetest_d3 = simd_and(tmp287, tmp27);
        bytetest_a5_a5 = simd_and(tmp69, tmp21);
        tmp360 = simd_and(tmp342, bytetest_a5_a5);
        struct_Ll.cc = simd_or(tmp360, struct_Ll.cc);
        bytetest_d3 = simd_and(tmp287, tmp27);
        bytetest_a7_a7 = simd_and(tmp69, tmp48);
        tmp361 = simd_and(tmp342, bytetest_a7_a7);
        struct_Ll.cc = simd_or(tmp361, struct_Ll.cc);
        bytetest_d3 = simd_and(tmp287, tmp27);
        bytetest_a9_a9 = simd_and(tmp69, tmp51);
        tmp362 = simd_and(tmp342, bytetest_a9_a9);
        struct_Ll.cc = simd_or(tmp362, struct_Ll.cc);
        bytetest_d3 = simd_and(tmp287, tmp27);
        bytetest_ab_ab = simd_and(tmp69, tmp53);
        tmp363 = simd_and(tmp342, bytetest_ab_ab);
        struct_Ll.cc = simd_or(tmp363, struct_Ll.cc);
        bytetest_d3 = simd_and(tmp287, tmp27);
        bytetest_ad_ad = simd_and(tmp69, tmp55);
        tmp364 = simd_and(tmp342, bytetest_ad_ad);
        struct_Ll.cc = simd_or(tmp364, struct_Ll.cc);
        bytetest_d3 = simd_and(tmp287, tmp27);
        bytetest_af_af = simd_and(tmp69, tmp33);
        tmp365 = simd_and(tmp342, bytetest_af_af);
        struct_Ll.cc = simd_or(tmp365, struct_Ll.cc);
        bytetest_d3 = simd_and(tmp287, tmp27);
        bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp42);
        tmp366 = simd_and(tmp342, bytetest_b1_b1);
        struct_Ll.cc = simd_or(tmp366, struct_Ll.cc);
        bytetest_d3 = simd_and(tmp287, tmp27);
        bytetest_b3_b3 = simd_and(bytetest_b0_bf, tmp27);
        tmp367 = simd_and(tmp342, bytetest_b3_b3);
        struct_Ll.cc = simd_or(tmp367, struct_Ll.cc);
        bytetest_d3 = simd_and(tmp287, tmp27);
        bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp21);
        tmp368 = simd_and(tmp342, bytetest_b5_b5);
        struct_Ll.cc = simd_or(tmp368, struct_Ll.cc);
        bytetest_d3 = simd_and(tmp287, tmp27);
        bytetest_b7_b7 = simd_and(bytetest_b0_bf, tmp48);
        tmp369 = simd_and(tmp342, bytetest_b7_b7);
        struct_Ll.cc = simd_or(tmp369, struct_Ll.cc);
        bytetest_d3 = simd_and(tmp287, tmp27);
        bytetest_b9_b9 = simd_and(bytetest_b0_bf, tmp51);
        tmp370 = simd_and(tmp342, bytetest_b9_b9);
        struct_Ll.cc = simd_or(tmp370, struct_Ll.cc);
        bytetest_d3 = simd_and(tmp287, tmp27);
        bytetest_bb_bb = simd_and(bytetest_b0_bf, tmp53);
        tmp371 = simd_and(tmp342, bytetest_bb_bb);
        struct_Ll.cc = simd_or(tmp371, struct_Ll.cc);
        bytetest_d3 = simd_and(tmp287, tmp27);
        bytetest_bd_bd = simd_and(bytetest_b0_bf, tmp55);
        tmp372 = simd_and(tmp342, bytetest_bd_bd);
        struct_Ll.cc = simd_or(tmp372, struct_Ll.cc);
        bytetest_d3 = simd_and(tmp287, tmp27);
        bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp33);
        tmp373 = simd_and(tmp342, bytetest_bf_bf);
        struct_Ll.cc = simd_or(tmp373, struct_Ll.cc);
        bytetest_d4 = simd_and(tmp287, tmp40);
        bytetest_81_81 = simd_and(tmp41, tmp42);
        tmp374 = simd_and(tmp23, bytetest_d4);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(tmp374, carryQ.get_carry_in(17), tmp375));
        tmp376 = simd_and(tmp375, bytetest_81_81);
        struct_Ll.cc = simd_or(tmp376, struct_Ll.cc);
        bytetest_d4 = simd_and(tmp287, tmp40);
        bytetest_83_83 = simd_and(tmp41, tmp27);
        tmp377 = simd_and(tmp375, bytetest_83_83);
        struct_Ll.cc = simd_or(tmp377, struct_Ll.cc);
        bytetest_d4 = simd_and(tmp287, tmp40);
        bytetest_85_85 = simd_and(tmp41, tmp21);
        tmp378 = simd_and(tmp375, bytetest_85_85);
        struct_Ll.cc = simd_or(tmp378, struct_Ll.cc);
        bytetest_d4 = simd_and(tmp287, tmp40);
        bytetest_87_87 = simd_and(tmp41, tmp48);
        tmp379 = simd_and(tmp375, bytetest_87_87);
        struct_Ll.cc = simd_or(tmp379, struct_Ll.cc);
        bytetest_d4 = simd_and(tmp287, tmp40);
        bytetest_89_89 = simd_and(tmp41, tmp51);
        tmp380 = simd_and(tmp375, bytetest_89_89);
        struct_Ll.cc = simd_or(tmp380, struct_Ll.cc);
        bytetest_d4 = simd_and(tmp287, tmp40);
        bytetest_8b_8b = simd_and(tmp41, tmp53);
        tmp381 = simd_and(tmp375, bytetest_8b_8b);
        struct_Ll.cc = simd_or(tmp381, struct_Ll.cc);
        bytetest_d4 = simd_and(tmp287, tmp40);
        bytetest_8d_8d = simd_and(tmp41, tmp55);
        tmp382 = simd_and(tmp375, bytetest_8d_8d);
        struct_Ll.cc = simd_or(tmp382, struct_Ll.cc);
        bytetest_d4 = simd_and(tmp287, tmp40);
        bytetest_8f_8f = simd_and(tmp41, tmp33);
        tmp383 = simd_and(tmp375, bytetest_8f_8f);
        struct_Ll.cc = simd_or(tmp383, struct_Ll.cc);
        bytetest_d4 = simd_and(tmp287, tmp40);
        bytetest_91_91 = simd_and(tmp59, tmp42);
        tmp384 = simd_and(tmp375, bytetest_91_91);
        struct_Ll.cc = simd_or(tmp384, struct_Ll.cc);
        bytetest_d4 = simd_and(tmp287, tmp40);
        bytetest_93_93 = simd_and(tmp59, tmp27);
        tmp385 = simd_and(tmp375, bytetest_93_93);
        struct_Ll.cc = simd_or(tmp385, struct_Ll.cc);
        bytetest_d4 = simd_and(tmp287, tmp40);
        bytetest_95_95 = simd_and(tmp59, tmp21);
        tmp386 = simd_and(tmp375, bytetest_95_95);
        struct_Ll.cc = simd_or(tmp386, struct_Ll.cc);
        bytetest_d4 = simd_and(tmp287, tmp40);
        bytetest_97_97 = simd_and(tmp59, tmp48);
        tmp387 = simd_and(tmp375, bytetest_97_97);
        struct_Ll.cc = simd_or(tmp387, struct_Ll.cc);
        bytetest_d4 = simd_and(tmp287, tmp40);
        bytetest_99_99 = simd_and(tmp59, tmp51);
        tmp388 = simd_and(tmp375, bytetest_99_99);
        struct_Ll.cc = simd_or(tmp388, struct_Ll.cc);
        bytetest_d4 = simd_and(tmp287, tmp40);
        bytetest_9b_9b = simd_and(tmp59, tmp53);
        tmp389 = simd_and(tmp375, bytetest_9b_9b);
        struct_Ll.cc = simd_or(tmp389, struct_Ll.cc);
        bytetest_d4 = simd_and(tmp287, tmp40);
        bytetest_9d_9d = simd_and(tmp59, tmp55);
        tmp390 = simd_and(tmp375, bytetest_9d_9d);
        struct_Ll.cc = simd_or(tmp390, struct_Ll.cc);
        bytetest_d4 = simd_and(tmp287, tmp40);
        bytetest_9f_9f = simd_and(tmp59, tmp33);
        tmp391 = simd_and(tmp375, bytetest_9f_9f);
        struct_Ll.cc = simd_or(tmp391, struct_Ll.cc);
        bytetest_d4 = simd_and(tmp287, tmp40);
        bytetest_a1_a1 = simd_and(tmp69, tmp42);
        tmp392 = simd_and(tmp375, bytetest_a1_a1);
        struct_Ll.cc = simd_or(tmp392, struct_Ll.cc);
        bytetest_d4 = simd_and(tmp287, tmp40);
        bytetest_a3_a3 = simd_and(tmp69, tmp27);
        tmp393 = simd_and(tmp375, bytetest_a3_a3);
        struct_Ll.cc = simd_or(tmp393, struct_Ll.cc);
        bytetest_d4 = simd_and(tmp287, tmp40);
        bytetest_a5_a5 = simd_and(tmp69, tmp21);
        tmp394 = simd_and(tmp375, bytetest_a5_a5);
        struct_Ll.cc = simd_or(tmp394, struct_Ll.cc);
        bytetest_d4 = simd_and(tmp287, tmp40);
        bytetest_a7_a7 = simd_and(tmp69, tmp48);
        tmp395 = simd_and(tmp375, bytetest_a7_a7);
        struct_Ll.cc = simd_or(tmp395, struct_Ll.cc);
        bytetest_d6 = simd_and(tmp287, tmp96);
        bytetest_80_87 = simd_andc(tmp41, basis_bits.bit_4);
        tmp396 = simd_and(tmp23, bytetest_d6);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(tmp396, carryQ.get_carry_in(18), tmp397));
        tmp398 = simd_and(tmp397, bytetest_80_87);
        bytetest_d5 = simd_and(tmp287, tmp21);
        tmp399 = simd_or(basis_bits.bit_3, tmp9);
        bytetest_a1_bf = simd_and(tmp179, tmp399);
        tmp400 = simd_and(tmp23, bytetest_d5);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(tmp400, carryQ.get_carry_in(19), tmp401));
        tmp402 = simd_and(tmp401, bytetest_a1_bf);
        tmp403 = simd_or(tmp402, tmp398);
        struct_Ll.cc = simd_or(tmp403, struct_Ll.cc);
        tmp404 = simd_and(tmp11, tmp68);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b4 = simd_and(bytetest_b0_bf, tmp40);
        tmp405 = simd_and(basis_bits.bit_2, tmp261);
        bytetest_80_ab = simd_andc(tmp16, tmp405);
        tmp406 = simd_and(tmp23, bytetest_e1);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(tmp406, carryQ.get_carry_in(20), tmp407));
        tmp408 = simd_and(tmp407, bytetest_b4);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(tmp408, carryQ.get_carry_in(21), tmp409));
        tmp410 = simd_and(tmp409, bytetest_80_ab);
        struct_Ll.cc = simd_or(tmp410, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b5 = simd_and(bytetest_b0_bf, tmp21);
        tmp411 = simd_not(basis_bits.bit_4);
        tmp412 = simd_or(simd_and(basis_bits.bit_3, tmp411), simd_andc(tmp5, basis_bits.bit_3));
        bytetest_ab_b7 = simd_and(tmp179, tmp412);
        tmp413 = simd_and(tmp407, bytetest_b5);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(tmp413, carryQ.get_carry_in(22), tmp414));
        tmp415 = simd_and(tmp414, bytetest_ab_b7);
        struct_Ll.cc = simd_or(tmp415, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b6 = simd_and(bytetest_b0_bf, tmp96);
        tmp416 = simd_and(basis_bits.bit_3, tmp5);
        bytetest_80_9a = simd_andc(bytetest_80_9f, tmp416);
        tmp417 = simd_and(tmp407, bytetest_b6);
        carryQ.cq[23] = carryout2carry(pablo_blk_Advance(tmp417, carryQ.get_carry_in(23), tmp418));
        tmp419 = simd_and(tmp418, bytetest_80_9a);
        bytetest_b5 = simd_and(bytetest_b0_bf, tmp21);
        tmp420 = simd_and(bytetest_b0_bf, basis_bits.bit_4);
        bytetest_b9_bf = simd_and(tmp420, tmp81);
        tmp421 = simd_and(tmp414, bytetest_b9_bf);
        tmp422 = simd_or(tmp421, tmp419);
        struct_Ll.cc = simd_or(tmp422, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp133);
        bytetest_81_81 = simd_and(tmp41, tmp42);
        tmp423 = simd_and(tmp407, bytetest_b8);
        carryQ.cq[24] = carryout2carry(pablo_blk_Advance(tmp423, carryQ.get_carry_in(24), tmp424));
        tmp425 = simd_and(tmp424, bytetest_81_81);
        struct_Ll.cc = simd_or(tmp425, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp133);
        bytetest_83_83 = simd_and(tmp41, tmp27);
        tmp426 = simd_and(tmp424, bytetest_83_83);
        struct_Ll.cc = simd_or(tmp426, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp133);
        bytetest_85_85 = simd_and(tmp41, tmp21);
        tmp427 = simd_and(tmp424, bytetest_85_85);
        struct_Ll.cc = simd_or(tmp427, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp133);
        bytetest_87_87 = simd_and(tmp41, tmp48);
        tmp428 = simd_and(tmp424, bytetest_87_87);
        struct_Ll.cc = simd_or(tmp428, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp133);
        bytetest_89_89 = simd_and(tmp41, tmp51);
        tmp429 = simd_and(tmp424, bytetest_89_89);
        struct_Ll.cc = simd_or(tmp429, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp133);
        bytetest_8b_8b = simd_and(tmp41, tmp53);
        tmp430 = simd_and(tmp424, bytetest_8b_8b);
        struct_Ll.cc = simd_or(tmp430, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp133);
        bytetest_8d_8d = simd_and(tmp41, tmp55);
        tmp431 = simd_and(tmp424, bytetest_8d_8d);
        struct_Ll.cc = simd_or(tmp431, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp133);
        bytetest_8f_8f = simd_and(tmp41, tmp33);
        tmp432 = simd_and(tmp424, bytetest_8f_8f);
        struct_Ll.cc = simd_or(tmp432, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp133);
        bytetest_91_91 = simd_and(tmp59, tmp42);
        tmp433 = simd_and(tmp424, bytetest_91_91);
        struct_Ll.cc = simd_or(tmp433, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp133);
        bytetest_93_93 = simd_and(tmp59, tmp27);
        tmp434 = simd_and(tmp424, bytetest_93_93);
        struct_Ll.cc = simd_or(tmp434, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp133);
        bytetest_95_95 = simd_and(tmp59, tmp21);
        tmp435 = simd_and(tmp424, bytetest_95_95);
        struct_Ll.cc = simd_or(tmp435, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp133);
        bytetest_97_97 = simd_and(tmp59, tmp48);
        tmp436 = simd_and(tmp424, bytetest_97_97);
        struct_Ll.cc = simd_or(tmp436, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp133);
        bytetest_99_99 = simd_and(tmp59, tmp51);
        tmp437 = simd_and(tmp424, bytetest_99_99);
        struct_Ll.cc = simd_or(tmp437, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp133);
        bytetest_9b_9b = simd_and(tmp59, tmp53);
        tmp438 = simd_and(tmp424, bytetest_9b_9b);
        struct_Ll.cc = simd_or(tmp438, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp133);
        bytetest_9d_9d = simd_and(tmp59, tmp55);
        tmp439 = simd_and(tmp424, bytetest_9d_9d);
        struct_Ll.cc = simd_or(tmp439, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp133);
        bytetest_9f_9f = simd_and(tmp59, tmp33);
        tmp440 = simd_and(tmp424, bytetest_9f_9f);
        struct_Ll.cc = simd_or(tmp440, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp133);
        bytetest_a1_a1 = simd_and(tmp69, tmp42);
        tmp441 = simd_and(tmp424, bytetest_a1_a1);
        struct_Ll.cc = simd_or(tmp441, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp133);
        bytetest_a3_a3 = simd_and(tmp69, tmp27);
        tmp442 = simd_and(tmp424, bytetest_a3_a3);
        struct_Ll.cc = simd_or(tmp442, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp133);
        bytetest_a5_a5 = simd_and(tmp69, tmp21);
        tmp443 = simd_and(tmp424, bytetest_a5_a5);
        struct_Ll.cc = simd_or(tmp443, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp133);
        bytetest_a7_a7 = simd_and(tmp69, tmp48);
        tmp444 = simd_and(tmp424, bytetest_a7_a7);
        struct_Ll.cc = simd_or(tmp444, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp133);
        bytetest_a9_a9 = simd_and(tmp69, tmp51);
        tmp445 = simd_and(tmp424, bytetest_a9_a9);
        struct_Ll.cc = simd_or(tmp445, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp133);
        bytetest_ab_ab = simd_and(tmp69, tmp53);
        tmp446 = simd_and(tmp424, bytetest_ab_ab);
        struct_Ll.cc = simd_or(tmp446, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp133);
        bytetest_ad_ad = simd_and(tmp69, tmp55);
        tmp447 = simd_and(tmp424, bytetest_ad_ad);
        struct_Ll.cc = simd_or(tmp447, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp133);
        bytetest_af_af = simd_and(tmp69, tmp33);
        tmp448 = simd_and(tmp424, bytetest_af_af);
        struct_Ll.cc = simd_or(tmp448, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp133);
        bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp42);
        tmp449 = simd_and(tmp424, bytetest_b1_b1);
        struct_Ll.cc = simd_or(tmp449, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp133);
        bytetest_b3_b3 = simd_and(bytetest_b0_bf, tmp27);
        tmp450 = simd_and(tmp424, bytetest_b3_b3);
        struct_Ll.cc = simd_or(tmp450, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp133);
        bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp21);
        tmp451 = simd_and(tmp424, bytetest_b5_b5);
        struct_Ll.cc = simd_or(tmp451, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp133);
        bytetest_b7_b7 = simd_and(bytetest_b0_bf, tmp48);
        tmp452 = simd_and(tmp424, bytetest_b7_b7);
        struct_Ll.cc = simd_or(tmp452, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp133);
        bytetest_b9_b9 = simd_and(bytetest_b0_bf, tmp51);
        tmp453 = simd_and(tmp424, bytetest_b9_b9);
        struct_Ll.cc = simd_or(tmp453, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp133);
        bytetest_bb_bb = simd_and(bytetest_b0_bf, tmp53);
        tmp454 = simd_and(tmp424, bytetest_bb_bb);
        struct_Ll.cc = simd_or(tmp454, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp133);
        bytetest_bd_bd = simd_and(bytetest_b0_bf, tmp55);
        tmp455 = simd_and(tmp424, bytetest_bd_bd);
        struct_Ll.cc = simd_or(tmp455, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp133);
        bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp33);
        tmp456 = simd_and(tmp424, bytetest_bf_bf);
        struct_Ll.cc = simd_or(tmp456, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp51);
        bytetest_81_81 = simd_and(tmp41, tmp42);
        tmp457 = simd_and(tmp407, bytetest_b9);
        carryQ.cq[25] = carryout2carry(pablo_blk_Advance(tmp457, carryQ.get_carry_in(25), tmp458));
        tmp459 = simd_and(tmp458, bytetest_81_81);
        struct_Ll.cc = simd_or(tmp459, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp51);
        bytetest_83_83 = simd_and(tmp41, tmp27);
        tmp460 = simd_and(tmp458, bytetest_83_83);
        struct_Ll.cc = simd_or(tmp460, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp51);
        bytetest_85_85 = simd_and(tmp41, tmp21);
        tmp461 = simd_and(tmp458, bytetest_85_85);
        struct_Ll.cc = simd_or(tmp461, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp51);
        bytetest_87_87 = simd_and(tmp41, tmp48);
        tmp462 = simd_and(tmp458, bytetest_87_87);
        struct_Ll.cc = simd_or(tmp462, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp51);
        bytetest_89_89 = simd_and(tmp41, tmp51);
        tmp463 = simd_and(tmp458, bytetest_89_89);
        struct_Ll.cc = simd_or(tmp463, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp51);
        bytetest_8b_8b = simd_and(tmp41, tmp53);
        tmp464 = simd_and(tmp458, bytetest_8b_8b);
        struct_Ll.cc = simd_or(tmp464, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp51);
        bytetest_8d_8d = simd_and(tmp41, tmp55);
        tmp465 = simd_and(tmp458, bytetest_8d_8d);
        struct_Ll.cc = simd_or(tmp465, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp51);
        bytetest_8f_8f = simd_and(tmp41, tmp33);
        tmp466 = simd_and(tmp458, bytetest_8f_8f);
        struct_Ll.cc = simd_or(tmp466, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp51);
        bytetest_91_91 = simd_and(tmp59, tmp42);
        tmp467 = simd_and(tmp458, bytetest_91_91);
        struct_Ll.cc = simd_or(tmp467, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp51);
        bytetest_93_93 = simd_and(tmp59, tmp27);
        tmp468 = simd_and(tmp458, bytetest_93_93);
        struct_Ll.cc = simd_or(tmp468, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp51);
        bytetest_95_95 = simd_and(tmp59, tmp21);
        tmp469 = simd_and(tmp458, bytetest_95_95);
        struct_Ll.cc = simd_or(tmp469, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp51);
        bytetest_97_97 = simd_and(tmp59, tmp48);
        tmp470 = simd_and(tmp458, bytetest_97_97);
        struct_Ll.cc = simd_or(tmp470, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp51);
        bytetest_99_99 = simd_and(tmp59, tmp51);
        tmp471 = simd_and(tmp458, bytetest_99_99);
        struct_Ll.cc = simd_or(tmp471, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp51);
        bytetest_9b_9b = simd_and(tmp59, tmp53);
        tmp472 = simd_and(tmp458, bytetest_9b_9b);
        struct_Ll.cc = simd_or(tmp472, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp51);
        bytetest_9d_9d = simd_and(tmp59, tmp55);
        tmp473 = simd_and(tmp458, bytetest_9d_9d);
        struct_Ll.cc = simd_or(tmp473, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp51);
        bytetest_9f_9f = simd_and(tmp59, tmp33);
        tmp474 = simd_and(tmp458, bytetest_9f_9f);
        struct_Ll.cc = simd_or(tmp474, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp51);
        bytetest_a1_a1 = simd_and(tmp69, tmp42);
        tmp475 = simd_and(tmp458, bytetest_a1_a1);
        struct_Ll.cc = simd_or(tmp475, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp51);
        bytetest_a3_a3 = simd_and(tmp69, tmp27);
        tmp476 = simd_and(tmp458, bytetest_a3_a3);
        struct_Ll.cc = simd_or(tmp476, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp51);
        bytetest_a5_a5 = simd_and(tmp69, tmp21);
        tmp477 = simd_and(tmp458, bytetest_a5_a5);
        struct_Ll.cc = simd_or(tmp477, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp51);
        bytetest_a7_a7 = simd_and(tmp69, tmp48);
        tmp478 = simd_and(tmp458, bytetest_a7_a7);
        struct_Ll.cc = simd_or(tmp478, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp51);
        bytetest_a9_a9 = simd_and(tmp69, tmp51);
        tmp479 = simd_and(tmp458, bytetest_a9_a9);
        struct_Ll.cc = simd_or(tmp479, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp51);
        bytetest_ab_ab = simd_and(tmp69, tmp53);
        tmp480 = simd_and(tmp458, bytetest_ab_ab);
        struct_Ll.cc = simd_or(tmp480, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp51);
        bytetest_ad_ad = simd_and(tmp69, tmp55);
        tmp481 = simd_and(tmp458, bytetest_ad_ad);
        struct_Ll.cc = simd_or(tmp481, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp51);
        bytetest_af_af = simd_and(tmp69, tmp33);
        tmp482 = simd_and(tmp458, bytetest_af_af);
        struct_Ll.cc = simd_or(tmp482, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp51);
        bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp42);
        tmp483 = simd_and(tmp458, bytetest_b1_b1);
        struct_Ll.cc = simd_or(tmp483, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp51);
        bytetest_b3_b3 = simd_and(bytetest_b0_bf, tmp27);
        tmp484 = simd_and(tmp458, bytetest_b3_b3);
        struct_Ll.cc = simd_or(tmp484, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp51);
        bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp21);
        tmp485 = simd_and(tmp458, bytetest_b5_b5);
        struct_Ll.cc = simd_or(tmp485, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp51);
        bytetest_b7_b7 = simd_and(bytetest_b0_bf, tmp48);
        tmp486 = simd_and(tmp458, bytetest_b7_b7);
        struct_Ll.cc = simd_or(tmp486, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp51);
        bytetest_b9_b9 = simd_and(bytetest_b0_bf, tmp51);
        tmp487 = simd_and(tmp458, bytetest_b9_b9);
        struct_Ll.cc = simd_or(tmp487, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp51);
        bytetest_bb_bb = simd_and(bytetest_b0_bf, tmp53);
        tmp488 = simd_and(tmp458, bytetest_bb_bb);
        struct_Ll.cc = simd_or(tmp488, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp51);
        bytetest_bd_bd = simd_and(bytetest_b0_bf, tmp55);
        tmp489 = simd_and(tmp458, bytetest_bd_bd);
        struct_Ll.cc = simd_or(tmp489, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp51);
        bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp33);
        tmp490 = simd_and(tmp458, bytetest_bf_bf);
        struct_Ll.cc = simd_or(tmp490, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp85);
        bytetest_81_81 = simd_and(tmp41, tmp42);
        tmp491 = simd_and(tmp407, bytetest_ba);
        carryQ.cq[26] = carryout2carry(pablo_blk_Advance(tmp491, carryQ.get_carry_in(26), tmp492));
        tmp493 = simd_and(tmp492, bytetest_81_81);
        struct_Ll.cc = simd_or(tmp493, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp85);
        bytetest_83_83 = simd_and(tmp41, tmp27);
        tmp494 = simd_and(tmp492, bytetest_83_83);
        struct_Ll.cc = simd_or(tmp494, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp85);
        bytetest_85_85 = simd_and(tmp41, tmp21);
        tmp495 = simd_and(tmp492, bytetest_85_85);
        struct_Ll.cc = simd_or(tmp495, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp85);
        bytetest_87_87 = simd_and(tmp41, tmp48);
        tmp496 = simd_and(tmp492, bytetest_87_87);
        struct_Ll.cc = simd_or(tmp496, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp85);
        bytetest_89_89 = simd_and(tmp41, tmp51);
        tmp497 = simd_and(tmp492, bytetest_89_89);
        struct_Ll.cc = simd_or(tmp497, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp85);
        bytetest_8b_8b = simd_and(tmp41, tmp53);
        tmp498 = simd_and(tmp492, bytetest_8b_8b);
        struct_Ll.cc = simd_or(tmp498, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp85);
        bytetest_8d_8d = simd_and(tmp41, tmp55);
        tmp499 = simd_and(tmp492, bytetest_8d_8d);
        struct_Ll.cc = simd_or(tmp499, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp85);
        bytetest_8f_8f = simd_and(tmp41, tmp33);
        tmp500 = simd_and(tmp492, bytetest_8f_8f);
        struct_Ll.cc = simd_or(tmp500, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp85);
        bytetest_91_91 = simd_and(tmp59, tmp42);
        tmp501 = simd_and(tmp492, bytetest_91_91);
        struct_Ll.cc = simd_or(tmp501, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp85);
        bytetest_93_93 = simd_and(tmp59, tmp27);
        tmp502 = simd_and(tmp492, bytetest_93_93);
        struct_Ll.cc = simd_or(tmp502, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp85);
        tmp503 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp504 = simd_not(tmp503);
        tmp505 = simd_or(simd_and(basis_bits.bit_4, tmp504), simd_andc(tmp241, basis_bits.bit_4));
        bytetest_95_9d = simd_and(tmp59, tmp505);
        tmp506 = simd_and(tmp492, bytetest_95_9d);
        struct_Ll.cc = simd_or(tmp506, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp85);
        bytetest_9f_9f = simd_and(tmp59, tmp33);
        tmp507 = simd_and(tmp492, bytetest_9f_9f);
        struct_Ll.cc = simd_or(tmp507, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp85);
        bytetest_a1_a1 = simd_and(tmp69, tmp42);
        tmp508 = simd_and(tmp492, bytetest_a1_a1);
        struct_Ll.cc = simd_or(tmp508, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp85);
        bytetest_a3_a3 = simd_and(tmp69, tmp27);
        tmp509 = simd_and(tmp492, bytetest_a3_a3);
        struct_Ll.cc = simd_or(tmp509, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp85);
        bytetest_a5_a5 = simd_and(tmp69, tmp21);
        tmp510 = simd_and(tmp492, bytetest_a5_a5);
        struct_Ll.cc = simd_or(tmp510, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp85);
        bytetest_a7_a7 = simd_and(tmp69, tmp48);
        tmp511 = simd_and(tmp492, bytetest_a7_a7);
        struct_Ll.cc = simd_or(tmp511, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp85);
        bytetest_a9_a9 = simd_and(tmp69, tmp51);
        tmp512 = simd_and(tmp492, bytetest_a9_a9);
        struct_Ll.cc = simd_or(tmp512, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp85);
        bytetest_ab_ab = simd_and(tmp69, tmp53);
        tmp513 = simd_and(tmp492, bytetest_ab_ab);
        struct_Ll.cc = simd_or(tmp513, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp85);
        bytetest_ad_ad = simd_and(tmp69, tmp55);
        tmp514 = simd_and(tmp492, bytetest_ad_ad);
        struct_Ll.cc = simd_or(tmp514, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp85);
        bytetest_af_af = simd_and(tmp69, tmp33);
        tmp515 = simd_and(tmp492, bytetest_af_af);
        struct_Ll.cc = simd_or(tmp515, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp85);
        bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp42);
        tmp516 = simd_and(tmp492, bytetest_b1_b1);
        struct_Ll.cc = simd_or(tmp516, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp85);
        bytetest_b3_b3 = simd_and(bytetest_b0_bf, tmp27);
        tmp517 = simd_and(tmp492, bytetest_b3_b3);
        struct_Ll.cc = simd_or(tmp517, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp85);
        bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp21);
        tmp518 = simd_and(tmp492, bytetest_b5_b5);
        struct_Ll.cc = simd_or(tmp518, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp85);
        bytetest_b7_b7 = simd_and(bytetest_b0_bf, tmp48);
        tmp519 = simd_and(tmp492, bytetest_b7_b7);
        struct_Ll.cc = simd_or(tmp519, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp85);
        bytetest_b9_b9 = simd_and(bytetest_b0_bf, tmp51);
        tmp520 = simd_and(tmp492, bytetest_b9_b9);
        struct_Ll.cc = simd_or(tmp520, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp85);
        bytetest_bb_bb = simd_and(bytetest_b0_bf, tmp53);
        tmp521 = simd_and(tmp492, bytetest_bb_bb);
        struct_Ll.cc = simd_or(tmp521, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp85);
        bytetest_bd_bd = simd_and(bytetest_b0_bf, tmp55);
        tmp522 = simd_and(tmp492, bytetest_bd_bd);
        struct_Ll.cc = simd_or(tmp522, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp85);
        bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp33);
        tmp523 = simd_and(tmp492, bytetest_bf_bf);
        struct_Ll.cc = simd_or(tmp523, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp53);
        bytetest_81_81 = simd_and(tmp41, tmp42);
        tmp524 = simd_and(tmp407, bytetest_bb);
        carryQ.cq[27] = carryout2carry(pablo_blk_Advance(tmp524, carryQ.get_carry_in(27), tmp525));
        tmp526 = simd_and(tmp525, bytetest_81_81);
        struct_Ll.cc = simd_or(tmp526, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp53);
        bytetest_83_83 = simd_and(tmp41, tmp27);
        tmp527 = simd_and(tmp525, bytetest_83_83);
        struct_Ll.cc = simd_or(tmp527, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp53);
        bytetest_85_85 = simd_and(tmp41, tmp21);
        tmp528 = simd_and(tmp525, bytetest_85_85);
        struct_Ll.cc = simd_or(tmp528, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp53);
        bytetest_87_87 = simd_and(tmp41, tmp48);
        tmp529 = simd_and(tmp525, bytetest_87_87);
        struct_Ll.cc = simd_or(tmp529, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp53);
        bytetest_89_89 = simd_and(tmp41, tmp51);
        tmp530 = simd_and(tmp525, bytetest_89_89);
        struct_Ll.cc = simd_or(tmp530, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp53);
        bytetest_8b_8b = simd_and(tmp41, tmp53);
        tmp531 = simd_and(tmp525, bytetest_8b_8b);
        struct_Ll.cc = simd_or(tmp531, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp53);
        bytetest_8d_8d = simd_and(tmp41, tmp55);
        tmp532 = simd_and(tmp525, bytetest_8d_8d);
        struct_Ll.cc = simd_or(tmp532, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp53);
        bytetest_8f_8f = simd_and(tmp41, tmp33);
        tmp533 = simd_and(tmp525, bytetest_8f_8f);
        struct_Ll.cc = simd_or(tmp533, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp53);
        bytetest_91_91 = simd_and(tmp59, tmp42);
        tmp534 = simd_and(tmp525, bytetest_91_91);
        struct_Ll.cc = simd_or(tmp534, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp53);
        bytetest_93_93 = simd_and(tmp59, tmp27);
        tmp535 = simd_and(tmp525, bytetest_93_93);
        struct_Ll.cc = simd_or(tmp535, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp53);
        bytetest_95_95 = simd_and(tmp59, tmp21);
        tmp536 = simd_and(tmp525, bytetest_95_95);
        struct_Ll.cc = simd_or(tmp536, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp53);
        bytetest_97_97 = simd_and(tmp59, tmp48);
        tmp537 = simd_and(tmp525, bytetest_97_97);
        struct_Ll.cc = simd_or(tmp537, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp53);
        bytetest_99_99 = simd_and(tmp59, tmp51);
        tmp538 = simd_and(tmp525, bytetest_99_99);
        struct_Ll.cc = simd_or(tmp538, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp53);
        bytetest_9b_9b = simd_and(tmp59, tmp53);
        tmp539 = simd_and(tmp525, bytetest_9b_9b);
        struct_Ll.cc = simd_or(tmp539, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp53);
        bytetest_9d_9d = simd_and(tmp59, tmp55);
        tmp540 = simd_and(tmp525, bytetest_9d_9d);
        struct_Ll.cc = simd_or(tmp540, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp53);
        bytetest_9f_9f = simd_and(tmp59, tmp33);
        tmp541 = simd_and(tmp525, bytetest_9f_9f);
        struct_Ll.cc = simd_or(tmp541, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp53);
        bytetest_a1_a1 = simd_and(tmp69, tmp42);
        tmp542 = simd_and(tmp525, bytetest_a1_a1);
        struct_Ll.cc = simd_or(tmp542, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp53);
        bytetest_a3_a3 = simd_and(tmp69, tmp27);
        tmp543 = simd_and(tmp525, bytetest_a3_a3);
        struct_Ll.cc = simd_or(tmp543, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp53);
        bytetest_a5_a5 = simd_and(tmp69, tmp21);
        tmp544 = simd_and(tmp525, bytetest_a5_a5);
        struct_Ll.cc = simd_or(tmp544, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp53);
        bytetest_a7_a7 = simd_and(tmp69, tmp48);
        tmp545 = simd_and(tmp525, bytetest_a7_a7);
        struct_Ll.cc = simd_or(tmp545, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp53);
        bytetest_a9_a9 = simd_and(tmp69, tmp51);
        tmp546 = simd_and(tmp525, bytetest_a9_a9);
        struct_Ll.cc = simd_or(tmp546, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp53);
        bytetest_ab_ab = simd_and(tmp69, tmp53);
        tmp547 = simd_and(tmp525, bytetest_ab_ab);
        struct_Ll.cc = simd_or(tmp547, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp53);
        bytetest_ad_ad = simd_and(tmp69, tmp55);
        tmp548 = simd_and(tmp525, bytetest_ad_ad);
        struct_Ll.cc = simd_or(tmp548, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp53);
        bytetest_af_af = simd_and(tmp69, tmp33);
        tmp549 = simd_and(tmp525, bytetest_af_af);
        struct_Ll.cc = simd_or(tmp549, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp53);
        bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp42);
        tmp550 = simd_and(tmp525, bytetest_b1_b1);
        struct_Ll.cc = simd_or(tmp550, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp53);
        bytetest_b3_b3 = simd_and(bytetest_b0_bf, tmp27);
        tmp551 = simd_and(tmp525, bytetest_b3_b3);
        struct_Ll.cc = simd_or(tmp551, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp53);
        bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp21);
        tmp552 = simd_and(tmp525, bytetest_b5_b5);
        struct_Ll.cc = simd_or(tmp552, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp53);
        bytetest_b7_b7 = simd_and(bytetest_b0_bf, tmp48);
        tmp553 = simd_and(tmp525, bytetest_b7_b7);
        struct_Ll.cc = simd_or(tmp553, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp53);
        bytetest_b9_b9 = simd_and(bytetest_b0_bf, tmp51);
        tmp554 = simd_and(tmp525, bytetest_b9_b9);
        struct_Ll.cc = simd_or(tmp554, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp53);
        bytetest_bb_bb = simd_and(bytetest_b0_bf, tmp53);
        tmp555 = simd_and(tmp525, bytetest_bb_bb);
        struct_Ll.cc = simd_or(tmp555, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp53);
        bytetest_bd_bd = simd_and(bytetest_b0_bf, tmp55);
        tmp556 = simd_and(tmp525, bytetest_bd_bd);
        struct_Ll.cc = simd_or(tmp556, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bc = simd_and(bytetest_b0_bf, tmp87);
        bytetest_80_87 = simd_andc(tmp41, basis_bits.bit_4);
        tmp557 = simd_and(tmp407, bytetest_bc);
        carryQ.cq[28] = carryout2carry(pablo_blk_Advance(tmp557, carryQ.get_carry_in(28), tmp558));
        tmp559 = simd_and(tmp558, bytetest_80_87);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp53);
        bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp33);
        tmp560 = simd_and(tmp525, bytetest_bf_bf);
        tmp561 = simd_or(tmp560, tmp559);
        struct_Ll.cc = simd_or(tmp561, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bc = simd_and(bytetest_b0_bf, tmp87);
        tmp562 = simd_andc(tmp59, basis_bits.bit_4);
        bytetest_90_95 = simd_andc(tmp562, tmp503);
        tmp563 = simd_and(tmp558, bytetest_90_95);
        struct_Ll.cc = simd_or(tmp563, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bc = simd_and(bytetest_b0_bf, tmp87);
        bytetest_a0_a7 = simd_andc(tmp69, basis_bits.bit_4);
        tmp564 = simd_and(tmp558, bytetest_a0_a7);
        struct_Ll.cc = simd_or(tmp564, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bc = simd_and(bytetest_b0_bf, tmp87);
        bytetest_b0_b7 = simd_andc(bytetest_b0_bf, basis_bits.bit_4);
        tmp565 = simd_and(tmp558, bytetest_b0_b7);
        struct_Ll.cc = simd_or(tmp565, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bd = simd_and(bytetest_b0_bf, tmp55);
        bytetest_80_85 = simd_andc(bytetest_80_87, tmp503);
        tmp566 = simd_and(tmp407, bytetest_bd);
        carryQ.cq[29] = carryout2carry(pablo_blk_Advance(tmp566, carryQ.get_carry_in(29), tmp567));
        tmp568 = simd_and(tmp567, bytetest_80_85);
        struct_Ll.cc = simd_or(tmp568, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bd = simd_and(bytetest_b0_bf, tmp55);
        bytetest_90_97 = simd_andc(tmp59, basis_bits.bit_4);
        tmp569 = simd_and(tmp567, bytetest_90_97);
        struct_Ll.cc = simd_or(tmp569, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bd = simd_and(bytetest_b0_bf, tmp55);
        bytetest_a0_a7 = simd_andc(tmp69, basis_bits.bit_4);
        tmp570 = simd_and(tmp567, bytetest_a0_a7);
        struct_Ll.cc = simd_or(tmp570, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bd = simd_and(bytetest_b0_bf, tmp55);
        tmp571 = simd_and(basis_bits.bit_4, tmp503);
        bytetest_b0_bd = simd_andc(bytetest_b0_bf, tmp571);
        tmp572 = simd_and(tmp567, bytetest_b0_bd);
        struct_Ll.cc = simd_or(tmp572, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_be = simd_and(bytetest_b0_bf, tmp89);
        bytetest_80_87 = simd_andc(tmp41, basis_bits.bit_4);
        tmp573 = simd_and(tmp407, bytetest_be);
        carryQ.cq[30] = carryout2carry(pablo_blk_Advance(tmp573, carryQ.get_carry_in(30), tmp574));
        tmp575 = simd_and(tmp574, bytetest_80_87);
        struct_Ll.cc = simd_or(tmp575, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_be = simd_and(bytetest_b0_bf, tmp89);
        bytetest_90_97 = simd_andc(tmp59, basis_bits.bit_4);
        tmp576 = simd_and(tmp574, bytetest_90_97);
        struct_Ll.cc = simd_or(tmp576, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_be = simd_and(bytetest_b0_bf, tmp89);
        bytetest_a0_a7 = simd_andc(tmp69, basis_bits.bit_4);
        tmp577 = simd_and(tmp574, bytetest_a0_a7);
        struct_Ll.cc = simd_or(tmp577, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_be = simd_and(bytetest_b0_bf, tmp89);
        bytetest_b0_b4 = simd_andc(bytetest_b0_b7, tmp241);
        tmp578 = simd_and(tmp574, bytetest_b0_b4);
        struct_Ll.cc = simd_or(tmp578, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_be = simd_and(bytetest_b0_bf, tmp89);
        tmp579 = simd_and(tmp19, basis_bits.bit_6);
        bytetest_b6_b7 = simd_and(bytetest_b0_bf, tmp579);
        tmp580 = simd_and(tmp574, bytetest_b6_b7);
        struct_Ll.cc = simd_or(tmp580, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_be = simd_and(bytetest_b0_bf, tmp89);
        bytetest_be_be = simd_and(bytetest_b0_bf, tmp89);
        tmp581 = simd_and(tmp574, bytetest_be_be);
        struct_Ll.cc = simd_or(tmp581, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bf = simd_and(bytetest_b0_bf, tmp33);
        tmp582 = simd_or(simd_and(basis_bits.bit_5, tmp284), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        bytetest_82_84 = simd_and(bytetest_80_87, tmp582);
        tmp583 = simd_and(tmp407, bytetest_bf);
        carryQ.cq[31] = carryout2carry(pablo_blk_Advance(tmp583, carryQ.get_carry_in(31), tmp584));
        tmp585 = simd_and(tmp584, bytetest_82_84);
        struct_Ll.cc = simd_or(tmp585, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bf = simd_and(bytetest_b0_bf, tmp33);
        bytetest_86_87 = simd_and(tmp41, tmp579);
        tmp586 = simd_and(tmp584, bytetest_86_87);
        struct_Ll.cc = simd_or(tmp586, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bf = simd_and(bytetest_b0_bf, tmp33);
        bytetest_90_93 = simd_andc(tmp59, tmp7);
        tmp587 = simd_and(tmp584, bytetest_90_93);
        struct_Ll.cc = simd_or(tmp587, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bf = simd_and(bytetest_b0_bf, tmp33);
        bytetest_96_97 = simd_and(tmp59, tmp579);
        tmp588 = simd_and(tmp584, bytetest_96_97);
        struct_Ll.cc = simd_or(tmp588, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bf = simd_and(bytetest_b0_bf, tmp33);
        bytetest_a0_a7 = simd_andc(tmp69, basis_bits.bit_4);
        tmp589 = simd_and(tmp584, bytetest_a0_a7);
        struct_Ll.cc = simd_or(tmp589, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bf = simd_and(bytetest_b0_bf, tmp33);
        bytetest_b2_b4 = simd_and(bytetest_b0_b7, tmp582);
        tmp590 = simd_and(tmp584, bytetest_b2_b4);
        struct_Ll.cc = simd_or(tmp590, struct_Ll.cc);
        bytetest_e1 = simd_and(tmp404, tmp42);
        bytetest_bf = simd_and(bytetest_b0_bf, tmp33);
        bytetest_b6_b7 = simd_and(bytetest_b0_bf, tmp579);
        tmp591 = simd_and(tmp584, bytetest_b6_b7);
        struct_Ll.cc = simd_or(tmp591, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_84 = simd_and(tmp41, tmp40);
        bytetest_8a_8a = simd_and(tmp41, tmp85);
        tmp592 = simd_and(tmp23, bytetest_e2);
        carryQ.cq[32] = carryout2carry(pablo_blk_Advance(tmp592, carryQ.get_carry_in(32), tmp593));
        tmp594 = simd_and(tmp593, bytetest_84);
        carryQ.cq[33] = carryout2carry(pablo_blk_Advance(tmp594, carryQ.get_carry_in(33), tmp595));
        tmp596 = simd_and(tmp595, bytetest_8a_8a);
        struct_Ll.cc = simd_or(tmp596, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_84 = simd_and(tmp41, tmp40);
        bytetest_8e_8f = simd_and(tmp41, tmp128);
        tmp597 = simd_and(tmp595, bytetest_8e_8f);
        struct_Ll.cc = simd_or(tmp597, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_84 = simd_and(tmp41, tmp40);
        bytetest_93_93 = simd_and(tmp59, tmp27);
        tmp598 = simd_and(tmp595, bytetest_93_93);
        struct_Ll.cc = simd_or(tmp598, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_84 = simd_and(tmp41, tmp40);
        bytetest_af_af = simd_and(tmp69, tmp33);
        tmp599 = simd_and(tmp595, bytetest_af_af);
        struct_Ll.cc = simd_or(tmp599, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_84 = simd_and(tmp41, tmp40);
        bytetest_b4_b4 = simd_and(bytetest_b0_bf, tmp40);
        tmp600 = simd_and(tmp595, bytetest_b4_b4);
        struct_Ll.cc = simd_or(tmp600, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_84 = simd_and(tmp41, tmp40);
        bytetest_b9_b9 = simd_and(bytetest_b0_bf, tmp51);
        tmp601 = simd_and(tmp595, bytetest_b9_b9);
        struct_Ll.cc = simd_or(tmp601, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_84 = simd_and(tmp41, tmp40);
        bytetest_bc_bd = simd_and(bytetest_b0_bf, tmp135);
        tmp602 = simd_and(tmp595, bytetest_bc_bd);
        struct_Ll.cc = simd_or(tmp602, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_85 = simd_and(tmp41, tmp21);
        tmp603 = simd_or(simd_and(basis_bits.bit_4, tmp217), simd_andc(tmp503, basis_bits.bit_4));
        bytetest_86_89 = simd_and(tmp41, tmp603);
        tmp604 = simd_and(tmp593, bytetest_85);
        carryQ.cq[34] = carryout2carry(pablo_blk_Advance(tmp604, carryQ.get_carry_in(34), tmp605));
        tmp606 = simd_and(tmp605, bytetest_86_89);
        struct_Ll.cc = simd_or(tmp606, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_85 = simd_and(tmp41, tmp21);
        bytetest_8e_8e = simd_and(tmp41, tmp89);
        tmp607 = simd_and(tmp605, bytetest_8e_8e);
        struct_Ll.cc = simd_or(tmp607, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_86 = simd_and(tmp41, tmp96);
        bytetest_84_84 = simd_and(tmp41, tmp40);
        tmp608 = simd_and(tmp593, bytetest_86);
        carryQ.cq[35] = carryout2carry(pablo_blk_Advance(tmp608, carryQ.get_carry_in(35), tmp609));
        tmp610 = simd_and(tmp609, bytetest_84_84);
        struct_Ll.cc = simd_or(tmp610, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b1 = simd_and(bytetest_b0_bf, tmp42);
        bytetest_80_9e = simd_andc(bytetest_80_9f, tmp34);
        tmp611 = simd_and(tmp593, bytetest_b1);
        carryQ.cq[36] = carryout2carry(pablo_blk_Advance(tmp611, carryQ.get_carry_in(36), tmp612));
        tmp613 = simd_and(tmp612, bytetest_80_9e);
        bytetest_b0 = simd_andc(bytetest_b0_bf, tmp9);
        bytetest_b0_bf = simd_and(tmp16, tmp17);
        tmp614 = simd_and(tmp593, bytetest_b0);
        carryQ.cq[37] = carryout2carry(pablo_blk_Advance(tmp614, carryQ.get_carry_in(37), tmp615));
        tmp616 = simd_and(tmp615, bytetest_b0_bf);
        tmp617 = simd_or(tmp616, tmp613);
        struct_Ll.cc = simd_or(tmp617, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b1 = simd_and(bytetest_b0_bf, tmp42);
        bytetest_a1_a1 = simd_and(tmp69, tmp42);
        tmp618 = simd_and(tmp612, bytetest_a1_a1);
        struct_Ll.cc = simd_or(tmp618, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b1 = simd_and(bytetest_b0_bf, tmp42);
        tmp619 = simd_and(tmp69, tmp19);
        bytetest_a5_a6 = simd_and(tmp619, tmp154);
        tmp620 = simd_and(tmp612, bytetest_a5_a6);
        struct_Ll.cc = simd_or(tmp620, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b1 = simd_and(bytetest_b0_bf, tmp42);
        bytetest_a8_a8 = simd_and(tmp69, tmp133);
        tmp621 = simd_and(tmp612, bytetest_a8_a8);
        struct_Ll.cc = simd_or(tmp621, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b1 = simd_and(bytetest_b0_bf, tmp42);
        bytetest_aa_aa = simd_and(tmp69, tmp85);
        tmp622 = simd_and(tmp612, bytetest_aa_aa);
        struct_Ll.cc = simd_or(tmp622, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b1 = simd_and(bytetest_b0_bf, tmp42);
        bytetest_ac_ac = simd_and(tmp69, tmp87);
        tmp623 = simd_and(tmp612, bytetest_ac_ac);
        struct_Ll.cc = simd_or(tmp623, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b1 = simd_and(bytetest_b0_bf, tmp42);
        bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp42);
        tmp624 = simd_and(tmp612, bytetest_b1_b1);
        struct_Ll.cc = simd_or(tmp624, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b1 = simd_and(bytetest_b0_bf, tmp42);
        bytetest_b3_b4 = simd_and(bytetest_b0_b7, tmp285);
        tmp625 = simd_and(tmp612, bytetest_b3_b4);
        struct_Ll.cc = simd_or(tmp625, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b1 = simd_and(bytetest_b0_bf, tmp42);
        tmp626 = simd_not(basis_bits.bit_5);
        tmp627 = simd_or(simd_and(basis_bits.bit_4, tmp626), simd_andc(tmp503, basis_bits.bit_4));
        bytetest_b6_bb = simd_and(bytetest_b0_bf, tmp627);
        tmp628 = simd_and(tmp612, bytetest_b6_bb);
        struct_Ll.cc = simd_or(tmp628, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp15);
        bytetest_81_81 = simd_and(tmp41, tmp42);
        tmp629 = simd_and(tmp593, bytetest_b2);
        carryQ.cq[38] = carryout2carry(pablo_blk_Advance(tmp629, carryQ.get_carry_in(38), tmp630));
        tmp631 = simd_and(tmp630, bytetest_81_81);
        struct_Ll.cc = simd_or(tmp631, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp15);
        bytetest_83_83 = simd_and(tmp41, tmp27);
        tmp632 = simd_and(tmp630, bytetest_83_83);
        struct_Ll.cc = simd_or(tmp632, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp15);
        bytetest_85_85 = simd_and(tmp41, tmp21);
        tmp633 = simd_and(tmp630, bytetest_85_85);
        struct_Ll.cc = simd_or(tmp633, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp15);
        bytetest_87_87 = simd_and(tmp41, tmp48);
        tmp634 = simd_and(tmp630, bytetest_87_87);
        struct_Ll.cc = simd_or(tmp634, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp15);
        bytetest_89_89 = simd_and(tmp41, tmp51);
        tmp635 = simd_and(tmp630, bytetest_89_89);
        struct_Ll.cc = simd_or(tmp635, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp15);
        bytetest_8b_8b = simd_and(tmp41, tmp53);
        tmp636 = simd_and(tmp630, bytetest_8b_8b);
        struct_Ll.cc = simd_or(tmp636, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp15);
        bytetest_8d_8d = simd_and(tmp41, tmp55);
        tmp637 = simd_and(tmp630, bytetest_8d_8d);
        struct_Ll.cc = simd_or(tmp637, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp15);
        bytetest_8f_8f = simd_and(tmp41, tmp33);
        tmp638 = simd_and(tmp630, bytetest_8f_8f);
        struct_Ll.cc = simd_or(tmp638, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp15);
        bytetest_91_91 = simd_and(tmp59, tmp42);
        tmp639 = simd_and(tmp630, bytetest_91_91);
        struct_Ll.cc = simd_or(tmp639, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp15);
        bytetest_93_93 = simd_and(tmp59, tmp27);
        tmp640 = simd_and(tmp630, bytetest_93_93);
        struct_Ll.cc = simd_or(tmp640, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp15);
        bytetest_95_95 = simd_and(tmp59, tmp21);
        tmp641 = simd_and(tmp630, bytetest_95_95);
        struct_Ll.cc = simd_or(tmp641, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp15);
        bytetest_97_97 = simd_and(tmp59, tmp48);
        tmp642 = simd_and(tmp630, bytetest_97_97);
        struct_Ll.cc = simd_or(tmp642, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp15);
        bytetest_99_99 = simd_and(tmp59, tmp51);
        tmp643 = simd_and(tmp630, bytetest_99_99);
        struct_Ll.cc = simd_or(tmp643, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp15);
        bytetest_9b_9b = simd_and(tmp59, tmp53);
        tmp644 = simd_and(tmp630, bytetest_9b_9b);
        struct_Ll.cc = simd_or(tmp644, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp15);
        bytetest_9d_9d = simd_and(tmp59, tmp55);
        tmp645 = simd_and(tmp630, bytetest_9d_9d);
        struct_Ll.cc = simd_or(tmp645, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp15);
        bytetest_9f_9f = simd_and(tmp59, tmp33);
        tmp646 = simd_and(tmp630, bytetest_9f_9f);
        struct_Ll.cc = simd_or(tmp646, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp15);
        bytetest_a1_a1 = simd_and(tmp69, tmp42);
        tmp647 = simd_and(tmp630, bytetest_a1_a1);
        struct_Ll.cc = simd_or(tmp647, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp15);
        bytetest_a3_a3 = simd_and(tmp69, tmp27);
        tmp648 = simd_and(tmp630, bytetest_a3_a3);
        struct_Ll.cc = simd_or(tmp648, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp15);
        bytetest_a5_a5 = simd_and(tmp69, tmp21);
        tmp649 = simd_and(tmp630, bytetest_a5_a5);
        struct_Ll.cc = simd_or(tmp649, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp15);
        bytetest_a7_a7 = simd_and(tmp69, tmp48);
        tmp650 = simd_and(tmp630, bytetest_a7_a7);
        struct_Ll.cc = simd_or(tmp650, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp15);
        bytetest_a9_a9 = simd_and(tmp69, tmp51);
        tmp651 = simd_and(tmp630, bytetest_a9_a9);
        struct_Ll.cc = simd_or(tmp651, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp15);
        bytetest_ab_ab = simd_and(tmp69, tmp53);
        tmp652 = simd_and(tmp630, bytetest_ab_ab);
        struct_Ll.cc = simd_or(tmp652, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp15);
        bytetest_ad_ad = simd_and(tmp69, tmp55);
        tmp653 = simd_and(tmp630, bytetest_ad_ad);
        struct_Ll.cc = simd_or(tmp653, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp15);
        bytetest_af_af = simd_and(tmp69, tmp33);
        tmp654 = simd_and(tmp630, bytetest_af_af);
        struct_Ll.cc = simd_or(tmp654, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp15);
        bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp42);
        tmp655 = simd_and(tmp630, bytetest_b1_b1);
        struct_Ll.cc = simd_or(tmp655, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp15);
        bytetest_b3_b3 = simd_and(bytetest_b0_bf, tmp27);
        tmp656 = simd_and(tmp630, bytetest_b3_b3);
        struct_Ll.cc = simd_or(tmp656, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp15);
        bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp21);
        tmp657 = simd_and(tmp630, bytetest_b5_b5);
        struct_Ll.cc = simd_or(tmp657, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp15);
        bytetest_b7_b7 = simd_and(bytetest_b0_bf, tmp48);
        tmp658 = simd_and(tmp630, bytetest_b7_b7);
        struct_Ll.cc = simd_or(tmp658, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp15);
        bytetest_b9_b9 = simd_and(bytetest_b0_bf, tmp51);
        tmp659 = simd_and(tmp630, bytetest_b9_b9);
        struct_Ll.cc = simd_or(tmp659, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp15);
        bytetest_bb_bb = simd_and(bytetest_b0_bf, tmp53);
        tmp660 = simd_and(tmp630, bytetest_bb_bb);
        struct_Ll.cc = simd_or(tmp660, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp15);
        bytetest_bd_bd = simd_and(bytetest_b0_bf, tmp55);
        tmp661 = simd_and(tmp630, bytetest_bd_bd);
        struct_Ll.cc = simd_or(tmp661, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp15);
        bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp33);
        tmp662 = simd_and(tmp630, bytetest_bf_bf);
        struct_Ll.cc = simd_or(tmp662, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp27);
        bytetest_81_81 = simd_and(tmp41, tmp42);
        tmp663 = simd_and(tmp593, bytetest_b3);
        carryQ.cq[39] = carryout2carry(pablo_blk_Advance(tmp663, carryQ.get_carry_in(39), tmp664));
        tmp665 = simd_and(tmp664, bytetest_81_81);
        struct_Ll.cc = simd_or(tmp665, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp27);
        bytetest_83_83 = simd_and(tmp41, tmp27);
        tmp666 = simd_and(tmp664, bytetest_83_83);
        struct_Ll.cc = simd_or(tmp666, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp27);
        bytetest_85_85 = simd_and(tmp41, tmp21);
        tmp667 = simd_and(tmp664, bytetest_85_85);
        struct_Ll.cc = simd_or(tmp667, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp27);
        bytetest_87_87 = simd_and(tmp41, tmp48);
        tmp668 = simd_and(tmp664, bytetest_87_87);
        struct_Ll.cc = simd_or(tmp668, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp27);
        bytetest_89_89 = simd_and(tmp41, tmp51);
        tmp669 = simd_and(tmp664, bytetest_89_89);
        struct_Ll.cc = simd_or(tmp669, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp27);
        bytetest_8b_8b = simd_and(tmp41, tmp53);
        tmp670 = simd_and(tmp664, bytetest_8b_8b);
        struct_Ll.cc = simd_or(tmp670, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp27);
        bytetest_8d_8d = simd_and(tmp41, tmp55);
        tmp671 = simd_and(tmp664, bytetest_8d_8d);
        struct_Ll.cc = simd_or(tmp671, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp27);
        bytetest_8f_8f = simd_and(tmp41, tmp33);
        tmp672 = simd_and(tmp664, bytetest_8f_8f);
        struct_Ll.cc = simd_or(tmp672, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp27);
        bytetest_91_91 = simd_and(tmp59, tmp42);
        tmp673 = simd_and(tmp664, bytetest_91_91);
        struct_Ll.cc = simd_or(tmp673, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp27);
        bytetest_93_93 = simd_and(tmp59, tmp27);
        tmp674 = simd_and(tmp664, bytetest_93_93);
        struct_Ll.cc = simd_or(tmp674, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp27);
        bytetest_95_95 = simd_and(tmp59, tmp21);
        tmp675 = simd_and(tmp664, bytetest_95_95);
        struct_Ll.cc = simd_or(tmp675, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp27);
        bytetest_97_97 = simd_and(tmp59, tmp48);
        tmp676 = simd_and(tmp664, bytetest_97_97);
        struct_Ll.cc = simd_or(tmp676, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp27);
        bytetest_99_99 = simd_and(tmp59, tmp51);
        tmp677 = simd_and(tmp664, bytetest_99_99);
        struct_Ll.cc = simd_or(tmp677, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp27);
        bytetest_9b_9b = simd_and(tmp59, tmp53);
        tmp678 = simd_and(tmp664, bytetest_9b_9b);
        struct_Ll.cc = simd_or(tmp678, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp27);
        bytetest_9d_9d = simd_and(tmp59, tmp55);
        tmp679 = simd_and(tmp664, bytetest_9d_9d);
        struct_Ll.cc = simd_or(tmp679, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp27);
        bytetest_9f_9f = simd_and(tmp59, tmp33);
        tmp680 = simd_and(tmp664, bytetest_9f_9f);
        struct_Ll.cc = simd_or(tmp680, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp27);
        bytetest_a1_a1 = simd_and(tmp69, tmp42);
        tmp681 = simd_and(tmp664, bytetest_a1_a1);
        struct_Ll.cc = simd_or(tmp681, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp27);
        bytetest_a3_a4 = simd_and(bytetest_a0_a7, tmp285);
        tmp682 = simd_and(tmp664, bytetest_a3_a4);
        struct_Ll.cc = simd_or(tmp682, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp27);
        bytetest_ac_ac = simd_and(tmp69, tmp87);
        tmp683 = simd_and(tmp664, bytetest_ac_ac);
        struct_Ll.cc = simd_or(tmp683, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp27);
        bytetest_ae_ae = simd_and(tmp69, tmp89);
        tmp684 = simd_and(tmp664, bytetest_ae_ae);
        struct_Ll.cc = simd_or(tmp684, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp27);
        bytetest_b3_b3 = simd_and(bytetest_b0_bf, tmp27);
        tmp685 = simd_and(tmp664, bytetest_b3_b3);
        struct_Ll.cc = simd_or(tmp685, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b4 = simd_and(bytetest_b0_bf, tmp40);
        tmp686 = simd_or(basis_bits.bit_4, tmp503);
        tmp687 = simd_or(basis_bits.bit_3, tmp686);
        tmp688 = simd_and(basis_bits.bit_2, tmp687);
        bytetest_80_a5 = simd_andc(tmp16, tmp688);
        tmp689 = simd_and(tmp593, bytetest_b4);
        carryQ.cq[40] = carryout2carry(pablo_blk_Advance(tmp689, carryQ.get_carry_in(40), tmp690));
        tmp691 = simd_and(tmp690, bytetest_80_a5);
        struct_Ll.cc = simd_or(tmp691, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b4 = simd_and(bytetest_b0_bf, tmp40);
        bytetest_a7_a7 = simd_and(tmp69, tmp48);
        tmp692 = simd_and(tmp690, bytetest_a7_a7);
        struct_Ll.cc = simd_or(tmp692, struct_Ll.cc);
        bytetest_e2 = simd_and(tmp404, tmp15);
        bytetest_b4 = simd_and(bytetest_b0_bf, tmp40);
        bytetest_ad_ad = simd_and(tmp69, tmp55);
        tmp693 = simd_and(tmp690, bytetest_ad_ad);
        struct_Ll.cc = simd_or(tmp693, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_99 = simd_and(tmp59, tmp51);
        bytetest_81_81 = simd_and(tmp41, tmp42);
        tmp694 = simd_and(tmp23, bytetest_ea);
        carryQ.cq[41] = carryout2carry(pablo_blk_Advance(tmp694, carryQ.get_carry_in(41), tmp695));
        tmp696 = simd_and(tmp695, bytetest_99);
        carryQ.cq[42] = carryout2carry(pablo_blk_Advance(tmp696, carryQ.get_carry_in(42), tmp697));
        tmp698 = simd_and(tmp697, bytetest_81_81);
        struct_Ll.cc = simd_or(tmp698, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_99 = simd_and(tmp59, tmp51);
        bytetest_83_83 = simd_and(tmp41, tmp27);
        tmp699 = simd_and(tmp697, bytetest_83_83);
        struct_Ll.cc = simd_or(tmp699, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_99 = simd_and(tmp59, tmp51);
        bytetest_85_85 = simd_and(tmp41, tmp21);
        tmp700 = simd_and(tmp697, bytetest_85_85);
        struct_Ll.cc = simd_or(tmp700, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_99 = simd_and(tmp59, tmp51);
        bytetest_87_87 = simd_and(tmp41, tmp48);
        tmp701 = simd_and(tmp697, bytetest_87_87);
        struct_Ll.cc = simd_or(tmp701, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_99 = simd_and(tmp59, tmp51);
        bytetest_89_89 = simd_and(tmp41, tmp51);
        tmp702 = simd_and(tmp697, bytetest_89_89);
        struct_Ll.cc = simd_or(tmp702, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_99 = simd_and(tmp59, tmp51);
        bytetest_8b_8b = simd_and(tmp41, tmp53);
        tmp703 = simd_and(tmp697, bytetest_8b_8b);
        struct_Ll.cc = simd_or(tmp703, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_99 = simd_and(tmp59, tmp51);
        bytetest_8d_8d = simd_and(tmp41, tmp55);
        tmp704 = simd_and(tmp697, bytetest_8d_8d);
        struct_Ll.cc = simd_or(tmp704, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_99 = simd_and(tmp59, tmp51);
        bytetest_8f_8f = simd_and(tmp41, tmp33);
        tmp705 = simd_and(tmp697, bytetest_8f_8f);
        struct_Ll.cc = simd_or(tmp705, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_99 = simd_and(tmp59, tmp51);
        bytetest_91_91 = simd_and(tmp59, tmp42);
        tmp706 = simd_and(tmp697, bytetest_91_91);
        struct_Ll.cc = simd_or(tmp706, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_99 = simd_and(tmp59, tmp51);
        bytetest_93_93 = simd_and(tmp59, tmp27);
        tmp707 = simd_and(tmp697, bytetest_93_93);
        struct_Ll.cc = simd_or(tmp707, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_99 = simd_and(tmp59, tmp51);
        bytetest_95_95 = simd_and(tmp59, tmp21);
        tmp708 = simd_and(tmp697, bytetest_95_95);
        struct_Ll.cc = simd_or(tmp708, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_99 = simd_and(tmp59, tmp51);
        bytetest_97_97 = simd_and(tmp59, tmp48);
        tmp709 = simd_and(tmp697, bytetest_97_97);
        struct_Ll.cc = simd_or(tmp709, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_99 = simd_and(tmp59, tmp51);
        bytetest_99_99 = simd_and(tmp59, tmp51);
        tmp710 = simd_and(tmp697, bytetest_99_99);
        struct_Ll.cc = simd_or(tmp710, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_99 = simd_and(tmp59, tmp51);
        bytetest_9b_9b = simd_and(tmp59, tmp53);
        tmp711 = simd_and(tmp697, bytetest_9b_9b);
        struct_Ll.cc = simd_or(tmp711, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_99 = simd_and(tmp59, tmp51);
        bytetest_9d_9d = simd_and(tmp59, tmp55);
        tmp712 = simd_and(tmp697, bytetest_9d_9d);
        struct_Ll.cc = simd_or(tmp712, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_99 = simd_and(tmp59, tmp51);
        bytetest_9f_9f = simd_and(tmp59, tmp33);
        tmp713 = simd_and(tmp697, bytetest_9f_9f);
        struct_Ll.cc = simd_or(tmp713, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_99 = simd_and(tmp59, tmp51);
        bytetest_a1_a1 = simd_and(tmp69, tmp42);
        tmp714 = simd_and(tmp697, bytetest_a1_a1);
        struct_Ll.cc = simd_or(tmp714, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_99 = simd_and(tmp59, tmp51);
        bytetest_a3_a3 = simd_and(tmp69, tmp27);
        tmp715 = simd_and(tmp697, bytetest_a3_a3);
        struct_Ll.cc = simd_or(tmp715, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_99 = simd_and(tmp59, tmp51);
        bytetest_a5_a5 = simd_and(tmp69, tmp21);
        tmp716 = simd_and(tmp697, bytetest_a5_a5);
        struct_Ll.cc = simd_or(tmp716, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_99 = simd_and(tmp59, tmp51);
        bytetest_a7_a7 = simd_and(tmp69, tmp48);
        tmp717 = simd_and(tmp697, bytetest_a7_a7);
        struct_Ll.cc = simd_or(tmp717, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_99 = simd_and(tmp59, tmp51);
        bytetest_a9_a9 = simd_and(tmp69, tmp51);
        tmp718 = simd_and(tmp697, bytetest_a9_a9);
        struct_Ll.cc = simd_or(tmp718, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_99 = simd_and(tmp59, tmp51);
        bytetest_ab_ab = simd_and(tmp69, tmp53);
        tmp719 = simd_and(tmp697, bytetest_ab_ab);
        struct_Ll.cc = simd_or(tmp719, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_99 = simd_and(tmp59, tmp51);
        bytetest_ad_ad = simd_and(tmp69, tmp55);
        tmp720 = simd_and(tmp697, bytetest_ad_ad);
        struct_Ll.cc = simd_or(tmp720, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9a = simd_and(tmp59, tmp85);
        bytetest_81_81 = simd_and(tmp41, tmp42);
        tmp721 = simd_and(tmp695, bytetest_9a);
        carryQ.cq[43] = carryout2carry(pablo_blk_Advance(tmp721, carryQ.get_carry_in(43), tmp722));
        tmp723 = simd_and(tmp722, bytetest_81_81);
        struct_Ll.cc = simd_or(tmp723, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9a = simd_and(tmp59, tmp85);
        bytetest_83_83 = simd_and(tmp41, tmp27);
        tmp724 = simd_and(tmp722, bytetest_83_83);
        struct_Ll.cc = simd_or(tmp724, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9a = simd_and(tmp59, tmp85);
        bytetest_85_85 = simd_and(tmp41, tmp21);
        tmp725 = simd_and(tmp722, bytetest_85_85);
        struct_Ll.cc = simd_or(tmp725, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9a = simd_and(tmp59, tmp85);
        bytetest_87_87 = simd_and(tmp41, tmp48);
        tmp726 = simd_and(tmp722, bytetest_87_87);
        struct_Ll.cc = simd_or(tmp726, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9a = simd_and(tmp59, tmp85);
        bytetest_89_89 = simd_and(tmp41, tmp51);
        tmp727 = simd_and(tmp722, bytetest_89_89);
        struct_Ll.cc = simd_or(tmp727, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9a = simd_and(tmp59, tmp85);
        bytetest_8b_8b = simd_and(tmp41, tmp53);
        tmp728 = simd_and(tmp722, bytetest_8b_8b);
        struct_Ll.cc = simd_or(tmp728, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9a = simd_and(tmp59, tmp85);
        bytetest_8d_8d = simd_and(tmp41, tmp55);
        tmp729 = simd_and(tmp722, bytetest_8d_8d);
        struct_Ll.cc = simd_or(tmp729, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9a = simd_and(tmp59, tmp85);
        bytetest_8f_8f = simd_and(tmp41, tmp33);
        tmp730 = simd_and(tmp722, bytetest_8f_8f);
        struct_Ll.cc = simd_or(tmp730, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9a = simd_and(tmp59, tmp85);
        bytetest_91_91 = simd_and(tmp59, tmp42);
        tmp731 = simd_and(tmp722, bytetest_91_91);
        struct_Ll.cc = simd_or(tmp731, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9a = simd_and(tmp59, tmp85);
        bytetest_93_93 = simd_and(tmp59, tmp27);
        tmp732 = simd_and(tmp722, bytetest_93_93);
        struct_Ll.cc = simd_or(tmp732, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9a = simd_and(tmp59, tmp85);
        bytetest_95_95 = simd_and(tmp59, tmp21);
        tmp733 = simd_and(tmp722, bytetest_95_95);
        struct_Ll.cc = simd_or(tmp733, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9a = simd_and(tmp59, tmp85);
        bytetest_97_97 = simd_and(tmp59, tmp48);
        tmp734 = simd_and(tmp722, bytetest_97_97);
        struct_Ll.cc = simd_or(tmp734, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9c = simd_and(tmp59, tmp87);
        bytetest_a3_a3 = simd_and(tmp69, tmp27);
        tmp735 = simd_and(tmp695, bytetest_9c);
        carryQ.cq[44] = carryout2carry(pablo_blk_Advance(tmp735, carryQ.get_carry_in(44), tmp736));
        tmp737 = simd_and(tmp736, bytetest_a3_a3);
        struct_Ll.cc = simd_or(tmp737, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9c = simd_and(tmp59, tmp87);
        bytetest_a5_a5 = simd_and(tmp69, tmp21);
        tmp738 = simd_and(tmp736, bytetest_a5_a5);
        struct_Ll.cc = simd_or(tmp738, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9c = simd_and(tmp59, tmp87);
        bytetest_a7_a7 = simd_and(tmp69, tmp48);
        tmp739 = simd_and(tmp736, bytetest_a7_a7);
        struct_Ll.cc = simd_or(tmp739, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9c = simd_and(tmp59, tmp87);
        bytetest_a9_a9 = simd_and(tmp69, tmp51);
        tmp740 = simd_and(tmp736, bytetest_a9_a9);
        struct_Ll.cc = simd_or(tmp740, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9c = simd_and(tmp59, tmp87);
        bytetest_ab_ab = simd_and(tmp69, tmp53);
        tmp741 = simd_and(tmp736, bytetest_ab_ab);
        struct_Ll.cc = simd_or(tmp741, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9c = simd_and(tmp59, tmp87);
        bytetest_ad_ad = simd_and(tmp69, tmp55);
        tmp742 = simd_and(tmp736, bytetest_ad_ad);
        struct_Ll.cc = simd_or(tmp742, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9c = simd_and(tmp59, tmp87);
        tmp743 = simd_not(tmp264);
        tmp744 = simd_or(simd_and(basis_bits.bit_3, tmp743), simd_andc(tmp33, basis_bits.bit_3));
        bytetest_af_b1 = simd_and(tmp179, tmp744);
        tmp745 = simd_and(tmp736, bytetest_af_b1);
        struct_Ll.cc = simd_or(tmp745, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9c = simd_and(tmp59, tmp87);
        bytetest_b3_b3 = simd_and(bytetest_b0_bf, tmp27);
        tmp746 = simd_and(tmp736, bytetest_b3_b3);
        struct_Ll.cc = simd_or(tmp746, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9c = simd_and(tmp59, tmp87);
        bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp21);
        tmp747 = simd_and(tmp736, bytetest_b5_b5);
        struct_Ll.cc = simd_or(tmp747, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9c = simd_and(tmp59, tmp87);
        bytetest_b7_b7 = simd_and(bytetest_b0_bf, tmp48);
        tmp748 = simd_and(tmp736, bytetest_b7_b7);
        struct_Ll.cc = simd_or(tmp748, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9c = simd_and(tmp59, tmp87);
        bytetest_b9_b9 = simd_and(bytetest_b0_bf, tmp51);
        tmp749 = simd_and(tmp736, bytetest_b9_b9);
        struct_Ll.cc = simd_or(tmp749, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9c = simd_and(tmp59, tmp87);
        bytetest_bb_bb = simd_and(bytetest_b0_bf, tmp53);
        tmp750 = simd_and(tmp736, bytetest_bb_bb);
        struct_Ll.cc = simd_or(tmp750, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9c = simd_and(tmp59, tmp87);
        bytetest_bd_bd = simd_and(bytetest_b0_bf, tmp55);
        tmp751 = simd_and(tmp736, bytetest_bd_bd);
        struct_Ll.cc = simd_or(tmp751, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9c = simd_and(tmp59, tmp87);
        bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp33);
        tmp752 = simd_and(tmp736, bytetest_bf_bf);
        struct_Ll.cc = simd_or(tmp752, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_81_81 = simd_and(tmp41, tmp42);
        tmp753 = simd_and(tmp695, bytetest_9d);
        carryQ.cq[45] = carryout2carry(pablo_blk_Advance(tmp753, carryQ.get_carry_in(45), tmp754));
        tmp755 = simd_and(tmp754, bytetest_81_81);
        struct_Ll.cc = simd_or(tmp755, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_83_83 = simd_and(tmp41, tmp27);
        tmp756 = simd_and(tmp754, bytetest_83_83);
        struct_Ll.cc = simd_or(tmp756, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_85_85 = simd_and(tmp41, tmp21);
        tmp757 = simd_and(tmp754, bytetest_85_85);
        struct_Ll.cc = simd_or(tmp757, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_87_87 = simd_and(tmp41, tmp48);
        tmp758 = simd_and(tmp754, bytetest_87_87);
        struct_Ll.cc = simd_or(tmp758, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_89_89 = simd_and(tmp41, tmp51);
        tmp759 = simd_and(tmp754, bytetest_89_89);
        struct_Ll.cc = simd_or(tmp759, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_8b_8b = simd_and(tmp41, tmp53);
        tmp760 = simd_and(tmp754, bytetest_8b_8b);
        struct_Ll.cc = simd_or(tmp760, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_8d_8d = simd_and(tmp41, tmp55);
        tmp761 = simd_and(tmp754, bytetest_8d_8d);
        struct_Ll.cc = simd_or(tmp761, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_8f_8f = simd_and(tmp41, tmp33);
        tmp762 = simd_and(tmp754, bytetest_8f_8f);
        struct_Ll.cc = simd_or(tmp762, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_91_91 = simd_and(tmp59, tmp42);
        tmp763 = simd_and(tmp754, bytetest_91_91);
        struct_Ll.cc = simd_or(tmp763, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_93_93 = simd_and(tmp59, tmp27);
        tmp764 = simd_and(tmp754, bytetest_93_93);
        struct_Ll.cc = simd_or(tmp764, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_95_95 = simd_and(tmp59, tmp21);
        tmp765 = simd_and(tmp754, bytetest_95_95);
        struct_Ll.cc = simd_or(tmp765, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_97_97 = simd_and(tmp59, tmp48);
        tmp766 = simd_and(tmp754, bytetest_97_97);
        struct_Ll.cc = simd_or(tmp766, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_99_99 = simd_and(tmp59, tmp51);
        tmp767 = simd_and(tmp754, bytetest_99_99);
        struct_Ll.cc = simd_or(tmp767, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_9b_9b = simd_and(tmp59, tmp53);
        tmp768 = simd_and(tmp754, bytetest_9b_9b);
        struct_Ll.cc = simd_or(tmp768, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_9d_9d = simd_and(tmp59, tmp55);
        tmp769 = simd_and(tmp754, bytetest_9d_9d);
        struct_Ll.cc = simd_or(tmp769, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_9f_9f = simd_and(tmp59, tmp33);
        tmp770 = simd_and(tmp754, bytetest_9f_9f);
        struct_Ll.cc = simd_or(tmp770, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_a1_a1 = simd_and(tmp69, tmp42);
        tmp771 = simd_and(tmp754, bytetest_a1_a1);
        struct_Ll.cc = simd_or(tmp771, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_a3_a3 = simd_and(tmp69, tmp27);
        tmp772 = simd_and(tmp754, bytetest_a3_a3);
        struct_Ll.cc = simd_or(tmp772, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_a5_a5 = simd_and(tmp69, tmp21);
        tmp773 = simd_and(tmp754, bytetest_a5_a5);
        struct_Ll.cc = simd_or(tmp773, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_a7_a7 = simd_and(tmp69, tmp48);
        tmp774 = simd_and(tmp754, bytetest_a7_a7);
        struct_Ll.cc = simd_or(tmp774, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_a9_a9 = simd_and(tmp69, tmp51);
        tmp775 = simd_and(tmp754, bytetest_a9_a9);
        struct_Ll.cc = simd_or(tmp775, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_ab_ab = simd_and(tmp69, tmp53);
        tmp776 = simd_and(tmp754, bytetest_ab_ab);
        struct_Ll.cc = simd_or(tmp776, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_ad_ad = simd_and(tmp69, tmp55);
        tmp777 = simd_and(tmp754, bytetest_ad_ad);
        struct_Ll.cc = simd_or(tmp777, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_af_af = simd_and(tmp69, tmp33);
        tmp778 = simd_and(tmp754, bytetest_af_af);
        struct_Ll.cc = simd_or(tmp778, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9d = simd_and(tmp59, tmp55);
        tmp779 = simd_or(simd_and(basis_bits.bit_4, tmp82), simd_andc(tmp81, basis_bits.bit_4));
        bytetest_b1_b8 = simd_and(bytetest_b0_bf, tmp779);
        tmp780 = simd_and(tmp754, bytetest_b1_b8);
        struct_Ll.cc = simd_or(tmp780, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_ba_ba = simd_and(bytetest_b0_bf, tmp85);
        tmp781 = simd_and(tmp754, bytetest_ba_ba);
        struct_Ll.cc = simd_or(tmp781, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_bc_bc = simd_and(bytetest_b0_bf, tmp87);
        tmp782 = simd_and(tmp754, bytetest_bc_bc);
        struct_Ll.cc = simd_or(tmp782, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp33);
        tmp783 = simd_and(tmp754, bytetest_bf_bf);
        struct_Ll.cc = simd_or(tmp783, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9e = simd_and(tmp59, tmp89);
        bytetest_81_81 = simd_and(tmp41, tmp42);
        tmp784 = simd_and(tmp695, bytetest_9e);
        carryQ.cq[46] = carryout2carry(pablo_blk_Advance(tmp784, carryQ.get_carry_in(46), tmp785));
        tmp786 = simd_and(tmp785, bytetest_81_81);
        struct_Ll.cc = simd_or(tmp786, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9e = simd_and(tmp59, tmp89);
        bytetest_83_83 = simd_and(tmp41, tmp27);
        tmp787 = simd_and(tmp785, bytetest_83_83);
        struct_Ll.cc = simd_or(tmp787, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9e = simd_and(tmp59, tmp89);
        bytetest_85_85 = simd_and(tmp41, tmp21);
        tmp788 = simd_and(tmp785, bytetest_85_85);
        struct_Ll.cc = simd_or(tmp788, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9e = simd_and(tmp59, tmp89);
        bytetest_87_87 = simd_and(tmp41, tmp48);
        tmp789 = simd_and(tmp785, bytetest_87_87);
        struct_Ll.cc = simd_or(tmp789, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9e = simd_and(tmp59, tmp89);
        bytetest_8c_8c = simd_and(tmp41, tmp87);
        tmp790 = simd_and(tmp785, bytetest_8c_8c);
        struct_Ll.cc = simd_or(tmp790, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9e = simd_and(tmp59, tmp89);
        bytetest_8e_8e = simd_and(tmp41, tmp89);
        tmp791 = simd_and(tmp785, bytetest_8e_8e);
        struct_Ll.cc = simd_or(tmp791, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9e = simd_and(tmp59, tmp89);
        bytetest_91_91 = simd_and(tmp59, tmp42);
        tmp792 = simd_and(tmp785, bytetest_91_91);
        struct_Ll.cc = simd_or(tmp792, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9e = simd_and(tmp59, tmp89);
        bytetest_93_93 = simd_and(tmp59, tmp27);
        tmp793 = simd_and(tmp785, bytetest_93_93);
        struct_Ll.cc = simd_or(tmp793, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9e = simd_and(tmp59, tmp89);
        bytetest_a1_a1 = simd_and(tmp69, tmp42);
        tmp794 = simd_and(tmp785, bytetest_a1_a1);
        struct_Ll.cc = simd_or(tmp794, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9e = simd_and(tmp59, tmp89);
        bytetest_a3_a3 = simd_and(tmp69, tmp27);
        tmp795 = simd_and(tmp785, bytetest_a3_a3);
        struct_Ll.cc = simd_or(tmp795, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9e = simd_and(tmp59, tmp89);
        bytetest_a5_a5 = simd_and(tmp69, tmp21);
        tmp796 = simd_and(tmp785, bytetest_a5_a5);
        struct_Ll.cc = simd_or(tmp796, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9e = simd_and(tmp59, tmp89);
        bytetest_a7_a7 = simd_and(tmp69, tmp48);
        tmp797 = simd_and(tmp785, bytetest_a7_a7);
        struct_Ll.cc = simd_or(tmp797, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9e = simd_and(tmp59, tmp89);
        bytetest_a9_a9 = simd_and(tmp69, tmp51);
        tmp798 = simd_and(tmp785, bytetest_a9_a9);
        struct_Ll.cc = simd_or(tmp798, struct_Ll.cc);
        bytetest_ea = simd_and(tmp404, tmp85);
        bytetest_9f = simd_and(tmp59, tmp33);
        bytetest_ba_ba = simd_and(bytetest_b0_bf, tmp85);
        tmp799 = simd_and(tmp695, bytetest_9f);
        carryQ.cq[47] = carryout2carry(pablo_blk_Advance(tmp799, carryQ.get_carry_in(47), tmp800));
        tmp801 = simd_and(tmp800, bytetest_ba_ba);
        struct_Ll.cc = simd_or(tmp801, struct_Ll.cc);
        bytetest_ef = simd_and(tmp404, tmp33);
        bytetest_ac = simd_and(tmp69, tmp87);
        bytetest_80_86 = simd_andc(bytetest_80_87, tmp28);
        tmp802 = simd_and(tmp23, bytetest_ef);
        carryQ.cq[48] = carryout2carry(pablo_blk_Advance(tmp802, carryQ.get_carry_in(48), tmp803));
        tmp804 = simd_and(tmp803, bytetest_ac);
        carryQ.cq[49] = carryout2carry(pablo_blk_Advance(tmp804, carryQ.get_carry_in(49), tmp805));
        tmp806 = simd_and(tmp805, bytetest_80_86);
        struct_Ll.cc = simd_or(tmp806, struct_Ll.cc);
        bytetest_ef = simd_and(tmp404, tmp33);
        bytetest_ac = simd_and(tmp69, tmp87);
        bytetest_93_97 = simd_and(bytetest_90_97, tmp4);
        tmp807 = simd_and(tmp805, bytetest_93_97);
        struct_Ll.cc = simd_or(tmp807, struct_Ll.cc);
        bytetest_ef = simd_and(tmp404, tmp33);
        bytetest_bd = simd_and(bytetest_b0_bf, tmp55);
        bytetest_81_9a = simd_and(bytetest_80_9f, tmp10);
        tmp808 = simd_and(tmp803, bytetest_bd);
        carryQ.cq[50] = carryout2carry(pablo_blk_Advance(tmp808, carryQ.get_carry_in(50), tmp809));
        tmp810 = simd_and(tmp809, bytetest_81_9a);
        struct_Ll.cc = simd_or(tmp810, struct_Ll.cc);
        tmp811 = simd_and(tmp11, tmp17);
        bytetest_f0 = simd_andc(tmp811, tmp9);
        bytetest_90 = simd_andc(tmp59, tmp9);
        bytetest_91 = simd_and(tmp59, tmp42);
        bytetest_80_8f = simd_andc(tmp16, tmp12);
        tmp812 = simd_and(tmp23, bytetest_f0);
        carryQ.cq[51] = carryout2carry(pablo_blk_Advance(tmp812, carryQ.get_carry_in(51), tmp813));
        tmp814 = simd_and(tmp813, bytetest_90);
        carryQ.cq[52] = carryout2carry(pablo_blk_Advance(tmp814, carryQ.get_carry_in(52), tmp815));
        tmp816 = simd_and(tmp815, bytetest_91);
        carryQ.cq[53] = carryout2carry(pablo_blk_Advance(tmp816, carryQ.get_carry_in(53), tmp817));
        tmp818 = simd_and(tmp817, bytetest_80_8f);
        bytetest_90 = simd_andc(tmp59, tmp9);
        tmp819 = simd_or(basis_bits.bit_3, basis_bits.bit_4);
        bytetest_a8_bf = simd_and(tmp179, tmp819);
        tmp820 = simd_and(tmp815, bytetest_90);
        carryQ.cq[54] = carryout2carry(pablo_blk_Advance(tmp820, carryQ.get_carry_in(54), tmp821));
        tmp822 = simd_and(tmp821, bytetest_a8_bf);
        tmp823 = simd_or(tmp822, tmp818);
        struct_Ll.cc = simd_or(tmp823, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp811, tmp9);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_90 = simd_andc(tmp59, tmp9);
        tmp824 = simd_not(tmp232);
        tmp825 = simd_and(basis_bits.bit_4, tmp216);
        tmp826 = simd_and(basis_bits.bit_3, tmp825);
        tmp827 = simd_or(simd_and(basis_bits.bit_2, tmp824), simd_andc(tmp826, basis_bits.bit_2));
        bytetest_9a_b3 = simd_and(tmp16, tmp827);
        tmp828 = simd_and(tmp813, bytetest_9d);
        carryQ.cq[55] = carryout2carry(pablo_blk_Advance(tmp828, carryQ.get_carry_in(55), tmp829));
        tmp830 = simd_and(tmp829, bytetest_90);
        carryQ.cq[56] = carryout2carry(pablo_blk_Advance(tmp830, carryQ.get_carry_in(56), tmp831));
        tmp832 = simd_and(tmp831, bytetest_9a_b3);
        struct_Ll.cc = simd_or(tmp832, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp811, tmp9);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_91 = simd_and(tmp59, tmp42);
        tmp833 = simd_not(tmp242);
        tmp834 = simd_or(simd_and(basis_bits.bit_3, tmp833), simd_andc(tmp128, basis_bits.bit_3));
        bytetest_8e_94 = simd_and(bytetest_80_9f, tmp834);
        tmp835 = simd_and(tmp829, bytetest_91);
        carryQ.cq[57] = carryout2carry(pablo_blk_Advance(tmp835, carryQ.get_carry_in(57), tmp836));
        tmp837 = simd_and(tmp836, bytetest_8e_94);
        struct_Ll.cc = simd_or(tmp837, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp811, tmp9);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_91 = simd_and(tmp59, tmp42);
        tmp838 = simd_not(tmp819);
        tmp839 = simd_and(basis_bits.bit_3, tmp686);
        tmp840 = simd_or(simd_and(basis_bits.bit_2, tmp838), simd_andc(tmp839, basis_bits.bit_2));
        bytetest_96_a7 = simd_and(tmp16, tmp840);
        tmp841 = simd_and(tmp836, bytetest_96_a7);
        struct_Ll.cc = simd_or(tmp841, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp811, tmp9);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_92 = simd_and(tmp59, tmp15);
        tmp842 = simd_not(tmp32);
        tmp843 = simd_or(simd_and(basis_bits.bit_3, tmp842), simd_andc(tmp264, basis_bits.bit_3));
        bytetest_82_9b = simd_and(bytetest_80_9f, tmp843);
        tmp844 = simd_and(tmp829, bytetest_92);
        carryQ.cq[58] = carryout2carry(pablo_blk_Advance(tmp844, carryQ.get_carry_in(58), tmp845));
        tmp846 = simd_and(tmp845, bytetest_82_9b);
        struct_Ll.cc = simd_or(tmp846, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp811, tmp9);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_92 = simd_and(tmp59, tmp15);
        bytetest_b6_b9 = simd_and(bytetest_b0_bf, tmp603);
        tmp847 = simd_and(tmp845, bytetest_b6_b9);
        struct_Ll.cc = simd_or(tmp847, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp811, tmp9);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_92 = simd_and(tmp59, tmp15);
        bytetest_bb_bb = simd_and(bytetest_b0_bf, tmp53);
        tmp848 = simd_and(tmp845, bytetest_bb_bb);
        struct_Ll.cc = simd_or(tmp848, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp811, tmp9);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_93 = simd_and(tmp59, tmp27);
        bytetest_80_83 = simd_andc(bytetest_80_8f, tmp7);
        tmp849 = simd_and(tmp829, bytetest_93);
        carryQ.cq[59] = carryout2carry(pablo_blk_Advance(tmp849, carryQ.get_carry_in(59), tmp850));
        tmp851 = simd_and(tmp850, bytetest_80_83);
        bytetest_92 = simd_and(tmp59, tmp15);
        tmp852 = simd_and(bytetest_b0_bf, tmp32);
        bytetest_bd_bf = simd_and(tmp852, tmp8);
        tmp853 = simd_and(tmp845, bytetest_bd_bf);
        tmp854 = simd_or(tmp853, tmp851);
        struct_Ll.cc = simd_or(tmp854, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp811, tmp9);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_93 = simd_and(tmp59, tmp27);
        bytetest_85_8f = simd_and(bytetest_80_8f, tmp242);
        tmp855 = simd_and(tmp850, bytetest_85_8f);
        struct_Ll.cc = simd_or(tmp855, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp811, tmp9);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_94 = simd_and(tmp59, tmp40);
        bytetest_80_83 = simd_andc(bytetest_80_8f, tmp7);
        tmp856 = simd_and(tmp829, bytetest_94);
        carryQ.cq[60] = carryout2carry(pablo_blk_Advance(tmp856, carryQ.get_carry_in(60), tmp857));
        tmp858 = simd_and(tmp857, bytetest_80_83);
        bytetest_93 = simd_and(tmp59, tmp27);
        tmp859 = simd_or(basis_bits.bit_3, tmp825);
        bytetest_aa_bf = simd_and(tmp179, tmp859);
        tmp860 = simd_and(tmp850, bytetest_aa_bf);
        tmp861 = simd_or(tmp860, tmp858);
        struct_Ll.cc = simd_or(tmp861, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp811, tmp9);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_94 = simd_and(tmp59, tmp40);
        tmp862 = simd_and(basis_bits.bit_3, basis_bits.bit_4);
        tmp863 = simd_not(tmp862);
        tmp864 = simd_and(basis_bits.bit_3, tmp128);
        tmp865 = simd_or(simd_and(basis_bits.bit_2, tmp863), simd_andc(tmp864, basis_bits.bit_2));
        bytetest_9e_b7 = simd_and(tmp16, tmp865);
        tmp866 = simd_and(tmp857, bytetest_9e_b7);
        struct_Ll.cc = simd_or(tmp866, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp811, tmp9);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_95 = simd_and(tmp59, tmp21);
        tmp867 = simd_not(tmp261);
        tmp868 = simd_and(basis_bits.bit_3, tmp264);
        tmp869 = simd_or(simd_and(basis_bits.bit_2, tmp867), simd_andc(tmp868, basis_bits.bit_2));
        bytetest_92_ab = simd_and(tmp16, tmp869);
        tmp870 = simd_and(tmp829, bytetest_95);
        carryQ.cq[61] = carryout2carry(pablo_blk_Advance(tmp870, carryQ.get_carry_in(61), tmp871));
        tmp872 = simd_and(tmp871, bytetest_92_ab);
        struct_Ll.cc = simd_or(tmp872, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp811, tmp9);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_96 = simd_and(tmp59, tmp96);
        bytetest_86_9f = simd_and(bytetest_80_9f, tmp687);
        tmp873 = simd_and(tmp829, bytetest_96);
        carryQ.cq[62] = carryout2carry(pablo_blk_Advance(tmp873, carryQ.get_carry_in(62), tmp874));
        tmp875 = simd_and(tmp874, bytetest_86_9f);
        struct_Ll.cc = simd_or(tmp875, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp811, tmp9);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_97 = simd_and(tmp59, tmp48);
        bytetest_80_93 = simd_andc(bytetest_80_9f, tmp232);
        tmp876 = simd_and(tmp829, bytetest_97);
        carryQ.cq[63] = carryout2carry(pablo_blk_Advance(tmp876, carryQ.get_carry_in(63), tmp877));
        tmp878 = simd_and(tmp877, bytetest_80_93);
        bytetest_96 = simd_and(tmp59, tmp96);
        bytetest_ba_bf = simd_and(tmp420, tmp216);
        tmp879 = simd_and(tmp874, bytetest_ba_bf);
        tmp880 = simd_or(tmp879, tmp878);
        struct_Ll.cc = simd_or(tmp880, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp811, tmp9);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_98 = simd_and(tmp59, tmp133);
        bytetest_80_87 = simd_andc(bytetest_80_8f, basis_bits.bit_4);
        tmp881 = simd_and(tmp829, bytetest_98);
        carryQ.cq[64] = carryout2carry(pablo_blk_Advance(tmp881, carryQ.get_carry_in(64), tmp882));
        tmp883 = simd_and(tmp882, bytetest_80_87);
        bytetest_97 = simd_and(tmp59, tmp48);
        tmp884 = simd_or(basis_bits.bit_3, tmp128);
        bytetest_ae_bf = simd_and(tmp179, tmp884);
        tmp885 = simd_and(tmp877, bytetest_ae_bf);
        tmp886 = simd_or(tmp885, tmp883);
        struct_Ll.cc = simd_or(tmp886, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp811, tmp9);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_98 = simd_and(tmp59, tmp133);
        bytetest_a2_bb = simd_and(tmp179, tmp843);
        tmp887 = simd_and(tmp882, bytetest_a2_bb);
        struct_Ll.cc = simd_or(tmp887, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp811, tmp9);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_99 = simd_and(tmp59, tmp51);
        tmp888 = simd_or(simd_and(basis_bits.bit_2, tmp240), simd_andc(tmp839, basis_bits.bit_2));
        bytetest_96_af = simd_and(tmp16, tmp888);
        tmp889 = simd_and(tmp829, bytetest_99);
        carryQ.cq[65] = carryout2carry(pablo_blk_Advance(tmp889, carryQ.get_carry_in(65), tmp890));
        tmp891 = simd_and(tmp890, bytetest_96_af);
        struct_Ll.cc = simd_or(tmp891, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp811, tmp9);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_9a = simd_and(tmp59, tmp85);
        tmp892 = simd_not(tmp687);
        tmp893 = simd_or(simd_and(basis_bits.bit_2, tmp892), simd_andc(tmp859, basis_bits.bit_2));
        bytetest_8a_a5 = simd_and(tmp16, tmp893);
        tmp894 = simd_and(tmp829, bytetest_9a);
        carryQ.cq[66] = carryout2carry(pablo_blk_Advance(tmp894, carryQ.get_carry_in(66), tmp895));
        tmp896 = simd_and(tmp895, bytetest_8a_a5);
        struct_Ll.cc = simd_or(tmp896, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp811, tmp9);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_9b = simd_and(tmp59, tmp53);
        tmp897 = simd_or(simd_and(basis_bits.bit_3, tmp6), simd_andc(tmp264, basis_bits.bit_3));
        bytetest_82_9a = simd_and(bytetest_80_9f, tmp897);
        tmp898 = simd_and(tmp829, bytetest_9b);
        carryQ.cq[67] = carryout2carry(pablo_blk_Advance(tmp898, carryQ.get_carry_in(67), tmp899));
        tmp900 = simd_and(tmp899, bytetest_82_9a);
        struct_Ll.cc = simd_or(tmp900, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp811, tmp9);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_9b = simd_and(tmp59, tmp53);
        tmp901 = simd_or(basis_bits.bit_3, tmp264);
        tmp902 = simd_not(tmp901);
        tmp903 = simd_and(basis_bits.bit_3, tmp32);
        tmp904 = simd_or(simd_and(basis_bits.bit_2, tmp902), simd_andc(tmp903, basis_bits.bit_2));
        bytetest_9c_a1 = simd_and(tmp16, tmp904);
        tmp905 = simd_and(tmp899, bytetest_9c_a1);
        struct_Ll.cc = simd_or(tmp905, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp811, tmp9);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_9c = simd_and(tmp59, tmp87);
        bytetest_80_94 = simd_andc(bytetest_80_9f, tmp243);
        tmp906 = simd_and(tmp829, bytetest_9c);
        carryQ.cq[68] = carryout2carry(pablo_blk_Advance(tmp906, carryQ.get_carry_in(68), tmp907));
        tmp908 = simd_and(tmp907, bytetest_80_94);
        bytetest_9b = simd_and(tmp59, tmp53);
        bytetest_bc_bf = simd_and(bytetest_b0_bf, tmp32);
        tmp909 = simd_and(tmp899, bytetest_bc_bf);
        tmp910 = simd_or(tmp909, tmp908);
        struct_Ll.cc = simd_or(tmp910, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp811, tmp9);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_9c = simd_and(tmp59, tmp87);
        bytetest_96_9b = simd_and(tmp59, tmp627);
        tmp911 = simd_and(tmp907, bytetest_96_9b);
        struct_Ll.cc = simd_or(tmp911, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp811, tmp9);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_80_8e = simd_andc(bytetest_80_8f, tmp257);
        tmp912 = simd_and(tmp829, bytetest_9d);
        carryQ.cq[69] = carryout2carry(pablo_blk_Advance(tmp912, carryQ.get_carry_in(69), tmp913));
        tmp914 = simd_and(tmp913, bytetest_80_8e);
        bytetest_9c = simd_and(tmp59, tmp87);
        bytetest_b6_bf = simd_and(bytetest_b0_bf, tmp686);
        tmp915 = simd_and(tmp907, bytetest_b6_bf);
        tmp916 = simd_or(tmp915, tmp914);
        struct_Ll.cc = simd_or(tmp916, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp811, tmp9);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_90_95 = simd_andc(bytetest_90_97, tmp503);
        tmp917 = simd_and(tmp913, bytetest_90_95);
        struct_Ll.cc = simd_or(tmp917, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp811, tmp9);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_9e = simd_and(tmp59, tmp89);
        tmp918 = simd_and(basis_bits.bit_4, tmp81);
        bytetest_80_88 = simd_andc(bytetest_80_8f, tmp918);
        tmp919 = simd_and(tmp829, bytetest_9e);
        carryQ.cq[70] = carryout2carry(pablo_blk_Advance(tmp919, carryQ.get_carry_in(70), tmp920));
        tmp921 = simd_and(tmp920, bytetest_80_88);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_b0_bf = simd_and(tmp16, tmp17);
        tmp922 = simd_and(tmp913, bytetest_b0_bf);
        tmp923 = simd_or(tmp922, tmp921);
        struct_Ll.cc = simd_or(tmp923, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp811, tmp9);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_9e = simd_and(tmp59, tmp89);
        tmp924 = simd_and(bytetest_80_8f, basis_bits.bit_4);
        bytetest_8a_8f = simd_and(tmp924, tmp216);
        tmp925 = simd_and(tmp920, bytetest_8a_8f);
        struct_Ll.cc = simd_or(tmp925, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp811, tmp9);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_9f = simd_and(tmp59, tmp33);
        bytetest_80_82 = simd_andc(bytetest_80_83, tmp3);
        tmp926 = simd_and(tmp829, bytetest_9f);
        carryQ.cq[71] = carryout2carry(pablo_blk_Advance(tmp926, carryQ.get_carry_in(71), tmp927));
        tmp928 = simd_and(tmp927, bytetest_80_82);
        bytetest_9e = simd_and(tmp59, tmp89);
        bytetest_aa_bf = simd_and(tmp179, tmp859);
        tmp929 = simd_and(tmp920, bytetest_aa_bf);
        tmp930 = simd_or(tmp929, tmp928);
        struct_Ll.cc = simd_or(tmp930, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp811, tmp9);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_9f = simd_and(tmp59, tmp33);
        tmp931 = simd_or(simd_and(basis_bits.bit_4, tmp217), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
        bytetest_84_89 = simd_and(bytetest_80_8f, tmp931);
        tmp932 = simd_and(tmp927, bytetest_84_89);
        struct_Ll.cc = simd_or(tmp932, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp811, tmp9);
        bytetest_9d = simd_and(tmp59, tmp55);
        bytetest_9f = simd_and(tmp59, tmp33);
        bytetest_8b_8b = simd_and(bytetest_80_8f, tmp53);
        tmp933 = simd_and(tmp927, bytetest_8b_8b);
        struct_Ll.cc = simd_or(tmp933, struct_Ll.cc);
  }
  CarryArray<72, 0> carryQ;
  };

  struct Lm {
  Lm() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Lm & struct_Lm) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_cb, tmp7, tmp8, tmp9;
		BitBlock tmp10, bytetest_80_81, tmp11, tmp12, tmp13, tmp14, tmp15, tmp16;
		BitBlock tmp17, bytetest_ca, tmp18, bytetest_b0_bf, tmp19, tmp20, tmp21, tmp22;
		BitBlock tmp23, tmp24, tmp25, tmp26, tmp27, bytetest_86_91, tmp28, tmp29;
		BitBlock tmp30, tmp31, tmp32, tmp33, bytetest_a0_a4, tmp34, tmp35, tmp36;
		BitBlock bytetest_ac_ac, tmp37, tmp38, bytetest_ae_ae, tmp39, tmp40, tmp41;
		BitBlock bytetest_cd, tmp42, tmp43, bytetest_b4_b4, tmp44, tmp45, tmp46;
		BitBlock bytetest_ba_ba, tmp47, tmp48, tmp49, tmp50, bytetest_d5, tmp51, tmp52;
		BitBlock bytetest_99_99, tmp53, tmp54, tmp55, bytetest_d9, tmp56;
		BitBlock bytetest_80_80, tmp57, tmp58, tmp59, bytetest_db, tmp60, tmp61, tmp62;
		BitBlock bytetest_a5_a6, tmp63, tmp64, tmp65, tmp66, bytetest_df, tmp67;
		BitBlock bytetest_b4_b5, tmp68, tmp69, tmp70, tmp71, tmp72, bytetest_e0;
		BitBlock bytetest_a0, bytetest_9a_9a, tmp73, tmp74, tmp75, tmp76, tmp77;
		BitBlock bytetest_a4_a4, tmp78, tmp79, bytetest_a8_a8, tmp80, bytetest_a5;
		BitBlock tmp81, bytetest_b1_b1, tmp82, tmp83, tmp84, bytetest_b9, tmp85;
		BitBlock bytetest_86_86, tmp86, tmp87, tmp88, bytetest_bb, tmp89, tmp90, tmp91;
		BitBlock bytetest_e1, tmp92, bytetest_83, bytetest_bc_bc, tmp93, tmp94, tmp95;
		BitBlock tmp96, tmp97, bytetest_9f, tmp98, bytetest_97_97, tmp99, tmp100;
		BitBlock tmp101, bytetest_a1, bytetest_83_83, tmp102, tmp103, tmp104;
		BitBlock bytetest_aa, bytetest_a7_a7, tmp105, tmp106, tmp107, bytetest_b1;
		BitBlock tmp108, bytetest_b8_bd, tmp109, tmp110, tmp111, bytetest_b5, tmp112;
		BitBlock tmp113, tmp114, tmp115, bytetest_80_aa, tmp116, tmp117, tmp118;
		BitBlock bytetest_b4, tmp119, tmp120, bytetest_ac_bf, tmp121, tmp122, tmp123;
		BitBlock tmp124, bytetest_b8_b8, tmp125, bytetest_b6, tmp126, tmp127;
		BitBlock bytetest_9b_bf, tmp128, tmp129, tmp130, tmp131, bytetest_e2;
		BitBlock bytetest_81, tmp132, tmp133, tmp134, tmp135, tmp136, bytetest_bf_bf;
		BitBlock tmp137, bytetest_82, tmp138, bytetest_90_9c, tmp139, tmp140, tmp141;
		BitBlock tmp142, bytetest_bc_bd, tmp143, tmp144, tmp145, bytetest_af_af;
		BitBlock tmp146, tmp147, tmp148, bytetest_b8, tmp149, tmp150, tmp151;
		BitBlock bytetest_e3, bytetest_80, bytetest_85_85, tmp152, tmp153, tmp154;
		BitBlock tmp155, tmp156, tmp157, tmp158, tmp159, bytetest_b1_b5, tmp160;
		BitBlock bytetest_bb_bb, tmp161, tmp162, bytetest_9d_9e, tmp163, tmp164;
		BitBlock tmp165, tmp166, bytetest_bc_be, tmp167, tmp168, tmp169, bytetest_ea;
		BitBlock bytetest_95_95, tmp170, tmp171, tmp172, tmp173, tmp174, bytetest_93;
		BitBlock tmp175, tmp176, tmp177, bytetest_98, bytetest_8c_8c, tmp178, tmp179;
		BitBlock tmp180, bytetest_99, tmp181, tmp182, tmp183, bytetest_9c, tmp184;
		BitBlock tmp185, bytetest_97_9f, tmp186, tmp187, tmp188, bytetest_9d;
		BitBlock bytetest_b0_b0, tmp189, tmp190, tmp191, bytetest_9e, bytetest_88_88;
		BitBlock tmp192, tmp193, tmp194, tmp195, bytetest_b8_b9, tmp196, tmp197;
		BitBlock tmp198, bytetest_a7, bytetest_8f_8f, tmp199, tmp200, tmp201;
		BitBlock bytetest_a9, tmp202, tmp203, tmp204, bytetest_ab, bytetest_9d_9d;
		BitBlock tmp205, tmp206, tmp207, tmp208, tmp209, bytetest_b3_b4, tmp210;
		BitBlock bytetest_ef, bytetest_bd, tmp211, tmp212, tmp213, tmp214, tmp215;
		BitBlock bytetest_be, tmp216, bytetest_9e_9f, tmp217, tmp218, tmp219, tmp220;
		BitBlock bytetest_f0, bytetest_96, tmp221, bytetest_93_9f, tmp222, tmp223;
		BitBlock tmp224, tmp225, tmp226, tmp227, tmp228;




        struct_Lm.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp1, tmp2);
        tmp4 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_and(tmp4, tmp5);
        bytetest_cb = simd_and(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_andc(tmp7, tmp2);
        tmp9 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp10 = simd_or(tmp9, basis_bits.bit_6);
        bytetest_80_81 = simd_andc(tmp8, tmp10);
        tmp11 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp11, carryQ.get_carry_in(0), tmp12));
        tmp13 = simd_and(tmp12, bytetest_cb);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp13, carryQ.get_carry_in(1), tmp14));
        tmp15 = simd_and(tmp14, bytetest_80_81);
        tmp16 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp17 = simd_and(tmp4, tmp16);
        bytetest_ca = simd_and(tmp3, tmp17);
        tmp18 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        bytetest_b0_bf = simd_and(tmp7, tmp18);
        tmp19 = simd_and(tmp12, bytetest_ca);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp19, carryQ.get_carry_in(2), tmp20));
        tmp21 = simd_and(tmp20, bytetest_b0_bf);
        tmp22 = simd_or(tmp21, tmp15);
        struct_Lm.cc = simd_or(tmp22, struct_Lm.cc);
        bytetest_cb = simd_and(tmp3, tmp6);
        tmp23 = simd_andc(tmp7, basis_bits.bit_2);
        tmp24 = simd_not(tmp10);
        tmp25 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp26 = simd_or(basis_bits.bit_4, tmp25);
        tmp27 = simd_or(simd_and(basis_bits.bit_3, tmp24), simd_andc(tmp26, basis_bits.bit_3));
        bytetest_86_91 = simd_and(tmp23, tmp27);
        tmp28 = simd_and(tmp14, bytetest_86_91);
        struct_Lm.cc = simd_or(tmp28, struct_Lm.cc);
        bytetest_cb = simd_and(tmp3, tmp6);
        tmp29 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp30 = simd_and(tmp7, tmp29);
        tmp31 = simd_andc(tmp30, basis_bits.bit_4);
        tmp32 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp33 = simd_and(basis_bits.bit_5, tmp32);
        bytetest_a0_a4 = simd_andc(tmp31, tmp33);
        tmp34 = simd_and(tmp14, bytetest_a0_a4);
        struct_Lm.cc = simd_or(tmp34, struct_Lm.cc);
        bytetest_cb = simd_and(tmp3, tmp6);
        tmp35 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp36 = simd_andc(tmp35, tmp32);
        bytetest_ac_ac = simd_and(tmp30, tmp36);
        tmp37 = simd_and(tmp14, bytetest_ac_ac);
        struct_Lm.cc = simd_or(tmp37, struct_Lm.cc);
        bytetest_cb = simd_and(tmp3, tmp6);
        tmp38 = simd_and(tmp35, tmp16);
        bytetest_ae_ae = simd_and(tmp30, tmp38);
        tmp39 = simd_and(tmp14, bytetest_ae_ae);
        struct_Lm.cc = simd_or(tmp39, struct_Lm.cc);
        tmp40 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp41 = simd_and(tmp35, tmp40);
        bytetest_cd = simd_and(tmp3, tmp41);
        tmp42 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp43 = simd_andc(tmp42, tmp32);
        bytetest_b4_b4 = simd_and(bytetest_b0_bf, tmp43);
        tmp44 = simd_and(tmp12, bytetest_cd);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp44, carryQ.get_carry_in(3), tmp45));
        tmp46 = simd_and(tmp45, bytetest_b4_b4);
        struct_Lm.cc = simd_or(tmp46, struct_Lm.cc);
        bytetest_cd = simd_and(tmp3, tmp41);
        bytetest_ba_ba = simd_and(bytetest_b0_bf, tmp17);
        tmp47 = simd_and(tmp45, bytetest_ba_ba);
        struct_Lm.cc = simd_or(tmp47, struct_Lm.cc);
        tmp48 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp49 = simd_and(tmp1, tmp48);
        tmp50 = simd_and(tmp42, tmp40);
        bytetest_d5 = simd_and(tmp49, tmp50);
        tmp51 = simd_and(tmp7, tmp48);
        tmp52 = simd_and(tmp4, tmp40);
        bytetest_99_99 = simd_and(tmp51, tmp52);
        tmp53 = simd_and(tmp12, bytetest_d5);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp53, carryQ.get_carry_in(4), tmp54));
        tmp55 = simd_and(tmp54, bytetest_99_99);
        struct_Lm.cc = simd_or(tmp55, struct_Lm.cc);
        bytetest_d9 = simd_and(tmp49, tmp52);
        tmp56 = simd_or(tmp9, tmp32);
        bytetest_80_80 = simd_andc(tmp8, tmp56);
        tmp57 = simd_and(tmp12, bytetest_d9);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp57, carryQ.get_carry_in(5), tmp58));
        tmp59 = simd_and(tmp58, bytetest_80_80);
        struct_Lm.cc = simd_or(tmp59, struct_Lm.cc);
        bytetest_db = simd_and(tmp49, tmp6);
        tmp60 = simd_and(tmp30, tmp42);
        tmp61 = simd_not(basis_bits.bit_7);
        tmp62 = simd_or(simd_and(basis_bits.bit_6, tmp61), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
        bytetest_a5_a6 = simd_and(tmp60, tmp62);
        tmp63 = simd_and(tmp12, bytetest_db);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp63, carryQ.get_carry_in(6), tmp64));
        tmp65 = simd_and(tmp64, bytetest_a5_a6);
        struct_Lm.cc = simd_or(tmp65, struct_Lm.cc);
        tmp66 = simd_and(tmp35, tmp5);
        bytetest_df = simd_and(tmp49, tmp66);
        tmp67 = simd_andc(tmp42, basis_bits.bit_6);
        bytetest_b4_b5 = simd_and(bytetest_b0_bf, tmp67);
        tmp68 = simd_and(tmp12, bytetest_df);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp68, carryQ.get_carry_in(7), tmp69));
        tmp70 = simd_and(tmp69, bytetest_b4_b5);
        struct_Lm.cc = simd_or(tmp70, struct_Lm.cc);
        bytetest_df = simd_and(tmp49, tmp66);
        bytetest_ba_ba = simd_and(bytetest_b0_bf, tmp17);
        tmp71 = simd_and(tmp69, bytetest_ba_ba);
        struct_Lm.cc = simd_or(tmp71, struct_Lm.cc);
        tmp72 = simd_and(tmp1, tmp29);
        bytetest_e0 = simd_andc(tmp72, tmp56);
        bytetest_a0 = simd_andc(tmp30, tmp56);
        bytetest_9a_9a = simd_and(tmp51, tmp17);
        tmp73 = simd_and(tmp12, bytetest_e0);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(tmp73, carryQ.get_carry_in(8), tmp74));
        tmp75 = simd_and(tmp74, bytetest_a0);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(tmp75, carryQ.get_carry_in(9), tmp76));
        tmp77 = simd_and(tmp76, bytetest_9a_9a);
        struct_Lm.cc = simd_or(tmp77, struct_Lm.cc);
        bytetest_e0 = simd_andc(tmp72, tmp56);
        bytetest_a0 = simd_andc(tmp30, tmp56);
        bytetest_a4_a4 = simd_and(tmp30, tmp43);
        tmp78 = simd_and(tmp76, bytetest_a4_a4);
        struct_Lm.cc = simd_or(tmp78, struct_Lm.cc);
        bytetest_e0 = simd_andc(tmp72, tmp56);
        bytetest_a0 = simd_andc(tmp30, tmp56);
        tmp79 = simd_andc(tmp4, tmp32);
        bytetest_a8_a8 = simd_and(tmp30, tmp79);
        tmp80 = simd_and(tmp76, bytetest_a8_a8);
        struct_Lm.cc = simd_or(tmp80, struct_Lm.cc);
        bytetest_e0 = simd_andc(tmp72, tmp56);
        bytetest_a5 = simd_and(tmp30, tmp50);
        tmp81 = simd_andc(tmp40, tmp9);
        bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp81);
        tmp82 = simd_and(tmp74, bytetest_a5);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(tmp82, carryQ.get_carry_in(10), tmp83));
        tmp84 = simd_and(tmp83, bytetest_b1_b1);
        struct_Lm.cc = simd_or(tmp84, struct_Lm.cc);
        bytetest_e0 = simd_andc(tmp72, tmp56);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp52);
        tmp85 = simd_and(tmp42, tmp16);
        bytetest_86_86 = simd_and(tmp8, tmp85);
        tmp86 = simd_and(tmp74, bytetest_b9);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(tmp86, carryQ.get_carry_in(11), tmp87));
        tmp88 = simd_and(tmp87, bytetest_86_86);
        struct_Lm.cc = simd_or(tmp88, struct_Lm.cc);
        bytetest_e0 = simd_andc(tmp72, tmp56);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp6);
        bytetest_86_86 = simd_and(tmp8, tmp85);
        tmp89 = simd_and(tmp74, bytetest_bb);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(tmp89, carryQ.get_carry_in(12), tmp90));
        tmp91 = simd_and(tmp90, bytetest_86_86);
        struct_Lm.cc = simd_or(tmp91, struct_Lm.cc);
        bytetest_e1 = simd_and(tmp72, tmp81);
        tmp92 = simd_andc(tmp5, tmp9);
        bytetest_83 = simd_and(tmp8, tmp92);
        bytetest_bc_bc = simd_and(bytetest_b0_bf, tmp36);
        tmp93 = simd_and(tmp12, bytetest_e1);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(tmp93, carryQ.get_carry_in(13), tmp94));
        tmp95 = simd_and(tmp94, bytetest_83);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(tmp95, carryQ.get_carry_in(14), tmp96));
        tmp97 = simd_and(tmp96, bytetest_bc_bc);
        struct_Lm.cc = simd_or(tmp97, struct_Lm.cc);
        bytetest_e1 = simd_and(tmp72, tmp81);
        bytetest_9f = simd_and(tmp51, tmp66);
        tmp98 = simd_and(tmp42, tmp5);
        bytetest_97_97 = simd_and(tmp51, tmp98);
        tmp99 = simd_and(tmp94, bytetest_9f);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(tmp99, carryQ.get_carry_in(15), tmp100));
        tmp101 = simd_and(tmp100, bytetest_97_97);
        struct_Lm.cc = simd_or(tmp101, struct_Lm.cc);
        bytetest_e1 = simd_and(tmp72, tmp81);
        bytetest_a1 = simd_and(tmp30, tmp81);
        bytetest_83_83 = simd_and(tmp8, tmp92);
        tmp102 = simd_and(tmp94, bytetest_a1);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(tmp102, carryQ.get_carry_in(16), tmp103));
        tmp104 = simd_and(tmp103, bytetest_83_83);
        struct_Lm.cc = simd_or(tmp104, struct_Lm.cc);
        bytetest_e1 = simd_and(tmp72, tmp81);
        bytetest_aa = simd_and(tmp30, tmp17);
        bytetest_a7_a7 = simd_and(tmp30, tmp98);
        tmp105 = simd_and(tmp94, bytetest_aa);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(tmp105, carryQ.get_carry_in(17), tmp106));
        tmp107 = simd_and(tmp106, bytetest_a7_a7);
        struct_Lm.cc = simd_or(tmp107, struct_Lm.cc);
        bytetest_e1 = simd_and(tmp72, tmp81);
        bytetest_b1 = simd_and(bytetest_b0_bf, tmp81);
        tmp108 = simd_and(bytetest_b0_bf, basis_bits.bit_4);
        bytetest_b8_bd = simd_andc(tmp108, tmp25);
        tmp109 = simd_and(tmp94, bytetest_b1);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(tmp109, carryQ.get_carry_in(18), tmp110));
        tmp111 = simd_and(tmp110, bytetest_b8_bd);
        struct_Lm.cc = simd_or(tmp111, struct_Lm.cc);
        bytetest_e1 = simd_and(tmp72, tmp81);
        bytetest_b5 = simd_and(bytetest_b0_bf, tmp50);
        tmp112 = simd_or(basis_bits.bit_5, tmp5);
        tmp113 = simd_and(basis_bits.bit_4, tmp112);
        tmp114 = simd_or(basis_bits.bit_3, tmp113);
        tmp115 = simd_and(basis_bits.bit_2, tmp114);
        bytetest_80_aa = simd_andc(tmp7, tmp115);
        tmp116 = simd_and(tmp94, bytetest_b5);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(tmp116, carryQ.get_carry_in(19), tmp117));
        tmp118 = simd_and(tmp117, bytetest_80_aa);
        bytetest_b4 = simd_and(bytetest_b0_bf, tmp43);
        tmp119 = simd_and(tmp7, basis_bits.bit_2);
        tmp120 = simd_or(basis_bits.bit_3, tmp35);
        bytetest_ac_bf = simd_and(tmp119, tmp120);
        tmp121 = simd_and(tmp94, bytetest_b4);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(tmp121, carryQ.get_carry_in(20), tmp122));
        tmp123 = simd_and(tmp122, bytetest_ac_bf);
        tmp124 = simd_or(tmp123, tmp118);
        struct_Lm.cc = simd_or(tmp124, struct_Lm.cc);
        bytetest_e1 = simd_and(tmp72, tmp81);
        bytetest_b5 = simd_and(bytetest_b0_bf, tmp50);
        bytetest_b8_b8 = simd_and(bytetest_b0_bf, tmp79);
        tmp125 = simd_and(tmp117, bytetest_b8_b8);
        struct_Lm.cc = simd_or(tmp125, struct_Lm.cc);
        bytetest_e1 = simd_and(tmp72, tmp81);
        bytetest_b6 = simd_and(bytetest_b0_bf, tmp85);
        tmp126 = simd_and(basis_bits.bit_3, tmp113);
        tmp127 = simd_or(basis_bits.bit_2, tmp126);
        bytetest_9b_bf = simd_and(tmp7, tmp127);
        tmp128 = simd_and(tmp94, bytetest_b6);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(tmp128, carryQ.get_carry_in(21), tmp129));
        tmp130 = simd_and(tmp129, bytetest_9b_bf);
        struct_Lm.cc = simd_or(tmp130, struct_Lm.cc);
        tmp131 = simd_andc(tmp16, tmp9);
        bytetest_e2 = simd_and(tmp72, tmp131);
        bytetest_81 = simd_and(tmp8, tmp81);
        bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp81);
        tmp132 = simd_and(tmp12, bytetest_e2);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(tmp132, carryQ.get_carry_in(22), tmp133));
        tmp134 = simd_and(tmp133, bytetest_81);
        carryQ.cq[23] = carryout2carry(pablo_blk_Advance(tmp134, carryQ.get_carry_in(23), tmp135));
        tmp136 = simd_and(tmp135, bytetest_b1_b1);
        struct_Lm.cc = simd_or(tmp136, struct_Lm.cc);
        bytetest_e2 = simd_and(tmp72, tmp131);
        bytetest_81 = simd_and(tmp8, tmp81);
        bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp66);
        tmp137 = simd_and(tmp135, bytetest_bf_bf);
        struct_Lm.cc = simd_or(tmp137, struct_Lm.cc);
        bytetest_e2 = simd_and(tmp72, tmp131);
        bytetest_82 = simd_and(tmp8, tmp131);
        tmp138 = simd_and(basis_bits.bit_4, tmp33);
        bytetest_90_9c = simd_andc(tmp51, tmp138);
        tmp139 = simd_and(tmp133, bytetest_82);
        carryQ.cq[24] = carryout2carry(pablo_blk_Advance(tmp139, carryQ.get_carry_in(24), tmp140));
        tmp141 = simd_and(tmp140, bytetest_90_9c);
        struct_Lm.cc = simd_or(tmp141, struct_Lm.cc);
        bytetest_e2 = simd_and(tmp72, tmp131);
        bytetest_b1 = simd_and(bytetest_b0_bf, tmp81);
        tmp142 = simd_andc(tmp35, basis_bits.bit_6);
        bytetest_bc_bd = simd_and(bytetest_b0_bf, tmp142);
        tmp143 = simd_and(tmp133, bytetest_b1);
        carryQ.cq[25] = carryout2carry(pablo_blk_Advance(tmp143, carryQ.get_carry_in(25), tmp144));
        tmp145 = simd_and(tmp144, bytetest_bc_bd);
        struct_Lm.cc = simd_or(tmp145, struct_Lm.cc);
        bytetest_e2 = simd_and(tmp72, tmp131);
        bytetest_b5 = simd_and(bytetest_b0_bf, tmp50);
        bytetest_af_af = simd_and(tmp30, tmp66);
        tmp146 = simd_and(tmp133, bytetest_b5);
        carryQ.cq[26] = carryout2carry(pablo_blk_Advance(tmp146, carryQ.get_carry_in(26), tmp147));
        tmp148 = simd_and(tmp147, bytetest_af_af);
        struct_Lm.cc = simd_or(tmp148, struct_Lm.cc);
        bytetest_e2 = simd_and(tmp72, tmp131);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp79);
        bytetest_af_af = simd_and(tmp30, tmp66);
        tmp149 = simd_and(tmp133, bytetest_b8);
        carryQ.cq[27] = carryout2carry(pablo_blk_Advance(tmp149, carryQ.get_carry_in(27), tmp150));
        tmp151 = simd_and(tmp150, bytetest_af_af);
        struct_Lm.cc = simd_or(tmp151, struct_Lm.cc);
        bytetest_e3 = simd_and(tmp72, tmp92);
        bytetest_80 = simd_andc(tmp8, tmp56);
        bytetest_85_85 = simd_and(tmp8, tmp50);
        tmp152 = simd_and(tmp12, bytetest_e3);
        carryQ.cq[28] = carryout2carry(pablo_blk_Advance(tmp152, carryQ.get_carry_in(28), tmp153));
        tmp154 = simd_and(tmp153, bytetest_80);
        carryQ.cq[29] = carryout2carry(pablo_blk_Advance(tmp154, carryQ.get_carry_in(29), tmp155));
        tmp156 = simd_and(tmp155, bytetest_85_85);
        struct_Lm.cc = simd_or(tmp156, struct_Lm.cc);
        bytetest_e3 = simd_and(tmp72, tmp92);
        bytetest_80 = simd_andc(tmp8, tmp56);
        tmp157 = simd_andc(bytetest_b0_bf, basis_bits.bit_4);
        tmp158 = simd_not(basis_bits.bit_6);
        tmp159 = simd_or(simd_and(basis_bits.bit_5, tmp158), simd_andc(tmp32, basis_bits.bit_5));
        bytetest_b1_b5 = simd_and(tmp157, tmp159);
        tmp160 = simd_and(tmp155, bytetest_b1_b5);
        struct_Lm.cc = simd_or(tmp160, struct_Lm.cc);
        bytetest_e3 = simd_and(tmp72, tmp92);
        bytetest_80 = simd_andc(tmp8, tmp56);
        bytetest_bb_bb = simd_and(bytetest_b0_bf, tmp6);
        tmp161 = simd_and(tmp155, bytetest_bb_bb);
        struct_Lm.cc = simd_or(tmp161, struct_Lm.cc);
        bytetest_e3 = simd_and(tmp72, tmp92);
        bytetest_82 = simd_and(tmp8, tmp131);
        tmp162 = simd_and(tmp51, tmp35);
        bytetest_9d_9e = simd_and(tmp162, tmp62);
        tmp163 = simd_and(tmp153, bytetest_82);
        carryQ.cq[30] = carryout2carry(pablo_blk_Advance(tmp163, carryQ.get_carry_in(30), tmp164));
        tmp165 = simd_and(tmp164, bytetest_9d_9e);
        struct_Lm.cc = simd_or(tmp165, struct_Lm.cc);
        bytetest_e3 = simd_and(tmp72, tmp92);
        bytetest_83 = simd_and(tmp8, tmp92);
        tmp166 = simd_and(bytetest_b0_bf, tmp35);
        bytetest_bc_be = simd_andc(tmp166, tmp5);
        tmp167 = simd_and(tmp153, bytetest_83);
        carryQ.cq[31] = carryout2carry(pablo_blk_Advance(tmp167, carryQ.get_carry_in(31), tmp168));
        tmp169 = simd_and(tmp168, bytetest_bc_be);
        struct_Lm.cc = simd_or(tmp169, struct_Lm.cc);
        bytetest_ea = simd_and(tmp72, tmp17);
        bytetest_80 = simd_andc(tmp8, tmp56);
        bytetest_95_95 = simd_and(tmp51, tmp50);
        tmp170 = simd_and(tmp12, bytetest_ea);
        carryQ.cq[32] = carryout2carry(pablo_blk_Advance(tmp170, carryQ.get_carry_in(32), tmp171));
        tmp172 = simd_and(tmp171, bytetest_80);
        carryQ.cq[33] = carryout2carry(pablo_blk_Advance(tmp172, carryQ.get_carry_in(33), tmp173));
        tmp174 = simd_and(tmp173, bytetest_95_95);
        struct_Lm.cc = simd_or(tmp174, struct_Lm.cc);
        bytetest_ea = simd_and(tmp72, tmp17);
        bytetest_93 = simd_and(tmp51, tmp92);
        bytetest_b8_bd = simd_andc(tmp108, tmp25);
        tmp175 = simd_and(tmp171, bytetest_93);
        carryQ.cq[34] = carryout2carry(pablo_blk_Advance(tmp175, carryQ.get_carry_in(34), tmp176));
        tmp177 = simd_and(tmp176, bytetest_b8_bd);
        struct_Lm.cc = simd_or(tmp177, struct_Lm.cc);
        bytetest_ea = simd_and(tmp72, tmp17);
        bytetest_98 = simd_and(tmp51, tmp79);
        bytetest_8c_8c = simd_and(tmp8, tmp36);
        tmp178 = simd_and(tmp171, bytetest_98);
        carryQ.cq[35] = carryout2carry(pablo_blk_Advance(tmp178, carryQ.get_carry_in(35), tmp179));
        tmp180 = simd_and(tmp179, bytetest_8c_8c);
        struct_Lm.cc = simd_or(tmp180, struct_Lm.cc);
        bytetest_ea = simd_and(tmp72, tmp17);
        bytetest_99 = simd_and(tmp51, tmp52);
        bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp66);
        tmp181 = simd_and(tmp171, bytetest_99);
        carryQ.cq[36] = carryout2carry(pablo_blk_Advance(tmp181, carryQ.get_carry_in(36), tmp182));
        tmp183 = simd_and(tmp182, bytetest_bf_bf);
        struct_Lm.cc = simd_or(tmp183, struct_Lm.cc);
        bytetest_ea = simd_and(tmp72, tmp17);
        bytetest_9c = simd_and(tmp51, tmp36);
        tmp184 = simd_and(basis_bits.bit_5, tmp5);
        tmp185 = simd_or(basis_bits.bit_4, tmp184);
        bytetest_97_9f = simd_and(tmp51, tmp185);
        tmp186 = simd_and(tmp171, bytetest_9c);
        carryQ.cq[37] = carryout2carry(pablo_blk_Advance(tmp186, carryQ.get_carry_in(37), tmp187));
        tmp188 = simd_and(tmp187, bytetest_97_9f);
        struct_Lm.cc = simd_or(tmp188, struct_Lm.cc);
        bytetest_ea = simd_and(tmp72, tmp17);
        bytetest_9d = simd_and(tmp51, tmp41);
        bytetest_b0_b0 = simd_andc(bytetest_b0_bf, tmp56);
        tmp189 = simd_and(tmp171, bytetest_9d);
        carryQ.cq[38] = carryout2carry(pablo_blk_Advance(tmp189, carryQ.get_carry_in(38), tmp190));
        tmp191 = simd_and(tmp190, bytetest_b0_b0);
        struct_Lm.cc = simd_or(tmp191, struct_Lm.cc);
        bytetest_ea = simd_and(tmp72, tmp17);
        bytetest_9e = simd_and(tmp51, tmp38);
        bytetest_88_88 = simd_and(tmp8, tmp79);
        tmp192 = simd_and(tmp171, bytetest_9e);
        carryQ.cq[39] = carryout2carry(pablo_blk_Advance(tmp192, carryQ.get_carry_in(39), tmp193));
        tmp194 = simd_and(tmp193, bytetest_88_88);
        struct_Lm.cc = simd_or(tmp194, struct_Lm.cc);
        bytetest_ea = simd_and(tmp72, tmp17);
        bytetest_9f = simd_and(tmp51, tmp66);
        tmp195 = simd_andc(tmp4, basis_bits.bit_6);
        bytetest_b8_b9 = simd_and(bytetest_b0_bf, tmp195);
        tmp196 = simd_and(tmp171, bytetest_9f);
        carryQ.cq[40] = carryout2carry(pablo_blk_Advance(tmp196, carryQ.get_carry_in(40), tmp197));
        tmp198 = simd_and(tmp197, bytetest_b8_b9);
        struct_Lm.cc = simd_or(tmp198, struct_Lm.cc);
        bytetest_ea = simd_and(tmp72, tmp17);
        bytetest_a7 = simd_and(tmp30, tmp98);
        bytetest_8f_8f = simd_and(tmp8, tmp66);
        tmp199 = simd_and(tmp171, bytetest_a7);
        carryQ.cq[41] = carryout2carry(pablo_blk_Advance(tmp199, carryQ.get_carry_in(41), tmp200));
        tmp201 = simd_and(tmp200, bytetest_8f_8f);
        struct_Lm.cc = simd_or(tmp201, struct_Lm.cc);
        bytetest_ea = simd_and(tmp72, tmp17);
        bytetest_a9 = simd_and(tmp30, tmp52);
        bytetest_b0_b0 = simd_andc(bytetest_b0_bf, tmp56);
        tmp202 = simd_and(tmp171, bytetest_a9);
        carryQ.cq[42] = carryout2carry(pablo_blk_Advance(tmp202, carryQ.get_carry_in(42), tmp203));
        tmp204 = simd_and(tmp203, bytetest_b0_b0);
        struct_Lm.cc = simd_or(tmp204, struct_Lm.cc);
        bytetest_ea = simd_and(tmp72, tmp17);
        bytetest_ab = simd_and(tmp30, tmp6);
        bytetest_9d_9d = simd_and(tmp51, tmp41);
        tmp205 = simd_and(tmp171, bytetest_ab);
        carryQ.cq[43] = carryout2carry(pablo_blk_Advance(tmp205, carryQ.get_carry_in(43), tmp206));
        tmp207 = simd_and(tmp206, bytetest_9d_9d);
        struct_Lm.cc = simd_or(tmp207, struct_Lm.cc);
        bytetest_ea = simd_and(tmp72, tmp17);
        bytetest_ab = simd_and(tmp30, tmp6);
        tmp208 = simd_not(tmp32);
        tmp209 = simd_or(simd_and(basis_bits.bit_5, tmp208), simd_andc(tmp5, basis_bits.bit_5));
        bytetest_b3_b4 = simd_and(tmp157, tmp209);
        tmp210 = simd_and(tmp206, bytetest_b3_b4);
        struct_Lm.cc = simd_or(tmp210, struct_Lm.cc);
        bytetest_ef = simd_and(tmp72, tmp66);
        bytetest_bd = simd_and(bytetest_b0_bf, tmp41);
        bytetest_b0_b0 = simd_andc(bytetest_b0_bf, tmp56);
        tmp211 = simd_and(tmp12, bytetest_ef);
        carryQ.cq[44] = carryout2carry(pablo_blk_Advance(tmp211, carryQ.get_carry_in(44), tmp212));
        tmp213 = simd_and(tmp212, bytetest_bd);
        carryQ.cq[45] = carryout2carry(pablo_blk_Advance(tmp213, carryQ.get_carry_in(45), tmp214));
        tmp215 = simd_and(tmp214, bytetest_b0_b0);
        struct_Lm.cc = simd_or(tmp215, struct_Lm.cc);
        bytetest_ef = simd_and(tmp72, tmp66);
        bytetest_be = simd_and(bytetest_b0_bf, tmp38);
        tmp216 = simd_and(tmp35, basis_bits.bit_6);
        bytetest_9e_9f = simd_and(tmp51, tmp216);
        tmp217 = simd_and(tmp212, bytetest_be);
        carryQ.cq[46] = carryout2carry(pablo_blk_Advance(tmp217, carryQ.get_carry_in(46), tmp218));
        tmp219 = simd_and(tmp218, bytetest_9e_9f);
        struct_Lm.cc = simd_or(tmp219, struct_Lm.cc);
        tmp220 = simd_and(tmp1, tmp18);
        bytetest_f0 = simd_andc(tmp220, tmp56);
        bytetest_96 = simd_and(tmp51, tmp85);
        bytetest_be = simd_and(bytetest_b0_bf, tmp38);
        tmp221 = simd_or(basis_bits.bit_4, tmp112);
        bytetest_93_9f = simd_and(tmp51, tmp221);
        tmp222 = simd_and(tmp12, bytetest_f0);
        carryQ.cq[47] = carryout2carry(pablo_blk_Advance(tmp222, carryQ.get_carry_in(47), tmp223));
        tmp224 = simd_and(tmp223, bytetest_96);
        carryQ.cq[48] = carryout2carry(pablo_blk_Advance(tmp224, carryQ.get_carry_in(48), tmp225));
        tmp226 = simd_and(tmp225, bytetest_be);
        carryQ.cq[49] = carryout2carry(pablo_blk_Advance(tmp226, carryQ.get_carry_in(49), tmp227));
        tmp228 = simd_and(tmp227, bytetest_93_9f);
        struct_Lm.cc = simd_or(tmp228, struct_Lm.cc);
        carryQ.CarryQ_Adjust(50);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Lm & struct_Lm, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_cb, tmp7, tmp8, tmp9;
		BitBlock tmp10, bytetest_80_81, tmp11, tmp12, tmp13, tmp14, tmp15, tmp16;
		BitBlock tmp17, bytetest_ca, tmp18, bytetest_b0_bf, tmp19, tmp20, tmp21, tmp22;
		BitBlock tmp23, tmp24, tmp25, tmp26, tmp27, bytetest_86_91, tmp28, tmp29;
		BitBlock tmp30, tmp31, tmp32, tmp33, bytetest_a0_a4, tmp34, tmp35, tmp36;
		BitBlock bytetest_ac_ac, tmp37, tmp38, bytetest_ae_ae, tmp39, tmp40, tmp41;
		BitBlock bytetest_cd, tmp42, tmp43, bytetest_b4_b4, tmp44, tmp45, tmp46;
		BitBlock bytetest_ba_ba, tmp47, tmp48, tmp49, tmp50, bytetest_d5, tmp51, tmp52;
		BitBlock bytetest_99_99, tmp53, tmp54, tmp55, bytetest_d9, tmp56;
		BitBlock bytetest_80_80, tmp57, tmp58, tmp59, bytetest_db, tmp60, tmp61, tmp62;
		BitBlock bytetest_a5_a6, tmp63, tmp64, tmp65, tmp66, bytetest_df, tmp67;
		BitBlock bytetest_b4_b5, tmp68, tmp69, tmp70, tmp71, tmp72, bytetest_e0;
		BitBlock bytetest_a0, bytetest_9a_9a, tmp73, tmp74, tmp75, tmp76, tmp77;
		BitBlock bytetest_a4_a4, tmp78, tmp79, bytetest_a8_a8, tmp80, bytetest_a5;
		BitBlock tmp81, bytetest_b1_b1, tmp82, tmp83, tmp84, bytetest_b9, tmp85;
		BitBlock bytetest_86_86, tmp86, tmp87, tmp88, bytetest_bb, tmp89, tmp90, tmp91;
		BitBlock bytetest_e1, tmp92, bytetest_83, bytetest_bc_bc, tmp93, tmp94, tmp95;
		BitBlock tmp96, tmp97, bytetest_9f, tmp98, bytetest_97_97, tmp99, tmp100;
		BitBlock tmp101, bytetest_a1, bytetest_83_83, tmp102, tmp103, tmp104;
		BitBlock bytetest_aa, bytetest_a7_a7, tmp105, tmp106, tmp107, bytetest_b1;
		BitBlock tmp108, bytetest_b8_bd, tmp109, tmp110, tmp111, bytetest_b5, tmp112;
		BitBlock tmp113, tmp114, tmp115, bytetest_80_aa, tmp116, tmp117, tmp118;
		BitBlock bytetest_b4, tmp119, tmp120, bytetest_ac_bf, tmp121, tmp122, tmp123;
		BitBlock tmp124, bytetest_b8_b8, tmp125, bytetest_b6, tmp126, tmp127;
		BitBlock bytetest_9b_bf, tmp128, tmp129, tmp130, tmp131, bytetest_e2;
		BitBlock bytetest_81, tmp132, tmp133, tmp134, tmp135, tmp136, bytetest_bf_bf;
		BitBlock tmp137, bytetest_82, tmp138, bytetest_90_9c, tmp139, tmp140, tmp141;
		BitBlock tmp142, bytetest_bc_bd, tmp143, tmp144, tmp145, bytetest_af_af;
		BitBlock tmp146, tmp147, tmp148, bytetest_b8, tmp149, tmp150, tmp151;
		BitBlock bytetest_e3, bytetest_80, bytetest_85_85, tmp152, tmp153, tmp154;
		BitBlock tmp155, tmp156, tmp157, tmp158, tmp159, bytetest_b1_b5, tmp160;
		BitBlock bytetest_bb_bb, tmp161, tmp162, bytetest_9d_9e, tmp163, tmp164;
		BitBlock tmp165, tmp166, bytetest_bc_be, tmp167, tmp168, tmp169, bytetest_ea;
		BitBlock bytetest_95_95, tmp170, tmp171, tmp172, tmp173, tmp174, bytetest_93;
		BitBlock tmp175, tmp176, tmp177, bytetest_98, bytetest_8c_8c, tmp178, tmp179;
		BitBlock tmp180, bytetest_99, tmp181, tmp182, tmp183, bytetest_9c, tmp184;
		BitBlock tmp185, bytetest_97_9f, tmp186, tmp187, tmp188, bytetest_9d;
		BitBlock bytetest_b0_b0, tmp189, tmp190, tmp191, bytetest_9e, bytetest_88_88;
		BitBlock tmp192, tmp193, tmp194, tmp195, bytetest_b8_b9, tmp196, tmp197;
		BitBlock tmp198, bytetest_a7, bytetest_8f_8f, tmp199, tmp200, tmp201;
		BitBlock bytetest_a9, tmp202, tmp203, tmp204, bytetest_ab, bytetest_9d_9d;
		BitBlock tmp205, tmp206, tmp207, tmp208, tmp209, bytetest_b3_b4, tmp210;
		BitBlock bytetest_ef, bytetest_bd, tmp211, tmp212, tmp213, tmp214, tmp215;
		BitBlock bytetest_be, tmp216, bytetest_9e_9f, tmp217, tmp218, tmp219, tmp220;
		BitBlock bytetest_f0, bytetest_96, tmp221, bytetest_93_9f, tmp222, tmp223;
		BitBlock tmp224, tmp225, tmp226, tmp227, tmp228;




        struct_Lm.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp1, tmp2);
        tmp4 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_and(tmp4, tmp5);
        bytetest_cb = simd_and(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_andc(tmp7, tmp2);
        tmp9 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp10 = simd_or(tmp9, basis_bits.bit_6);
        bytetest_80_81 = simd_andc(tmp8, tmp10);
        tmp11 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp11, carryQ.get_carry_in(0), tmp12));
        tmp13 = simd_and(tmp12, bytetest_cb);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp13, carryQ.get_carry_in(1), tmp14));
        tmp15 = simd_and(tmp14, bytetest_80_81);
        tmp16 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp17 = simd_and(tmp4, tmp16);
        bytetest_ca = simd_and(tmp3, tmp17);
        tmp18 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        bytetest_b0_bf = simd_and(tmp7, tmp18);
        tmp19 = simd_and(tmp12, bytetest_ca);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp19, carryQ.get_carry_in(2), tmp20));
        tmp21 = simd_and(tmp20, bytetest_b0_bf);
        tmp22 = simd_or(tmp21, tmp15);
        struct_Lm.cc = simd_or(tmp22, struct_Lm.cc);
        bytetest_cb = simd_and(tmp3, tmp6);
        tmp23 = simd_andc(tmp7, basis_bits.bit_2);
        tmp24 = simd_not(tmp10);
        tmp25 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp26 = simd_or(basis_bits.bit_4, tmp25);
        tmp27 = simd_or(simd_and(basis_bits.bit_3, tmp24), simd_andc(tmp26, basis_bits.bit_3));
        bytetest_86_91 = simd_and(tmp23, tmp27);
        tmp28 = simd_and(tmp14, bytetest_86_91);
        struct_Lm.cc = simd_or(tmp28, struct_Lm.cc);
        bytetest_cb = simd_and(tmp3, tmp6);
        tmp29 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp30 = simd_and(tmp7, tmp29);
        tmp31 = simd_andc(tmp30, basis_bits.bit_4);
        tmp32 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp33 = simd_and(basis_bits.bit_5, tmp32);
        bytetest_a0_a4 = simd_andc(tmp31, tmp33);
        tmp34 = simd_and(tmp14, bytetest_a0_a4);
        struct_Lm.cc = simd_or(tmp34, struct_Lm.cc);
        bytetest_cb = simd_and(tmp3, tmp6);
        tmp35 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp36 = simd_andc(tmp35, tmp32);
        bytetest_ac_ac = simd_and(tmp30, tmp36);
        tmp37 = simd_and(tmp14, bytetest_ac_ac);
        struct_Lm.cc = simd_or(tmp37, struct_Lm.cc);
        bytetest_cb = simd_and(tmp3, tmp6);
        tmp38 = simd_and(tmp35, tmp16);
        bytetest_ae_ae = simd_and(tmp30, tmp38);
        tmp39 = simd_and(tmp14, bytetest_ae_ae);
        struct_Lm.cc = simd_or(tmp39, struct_Lm.cc);
        tmp40 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp41 = simd_and(tmp35, tmp40);
        bytetest_cd = simd_and(tmp3, tmp41);
        tmp42 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp43 = simd_andc(tmp42, tmp32);
        bytetest_b4_b4 = simd_and(bytetest_b0_bf, tmp43);
        tmp44 = simd_and(tmp12, bytetest_cd);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp44, carryQ.get_carry_in(3), tmp45));
        tmp46 = simd_and(tmp45, bytetest_b4_b4);
        struct_Lm.cc = simd_or(tmp46, struct_Lm.cc);
        bytetest_cd = simd_and(tmp3, tmp41);
        bytetest_ba_ba = simd_and(bytetest_b0_bf, tmp17);
        tmp47 = simd_and(tmp45, bytetest_ba_ba);
        struct_Lm.cc = simd_or(tmp47, struct_Lm.cc);
        tmp48 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp49 = simd_and(tmp1, tmp48);
        tmp50 = simd_and(tmp42, tmp40);
        bytetest_d5 = simd_and(tmp49, tmp50);
        tmp51 = simd_and(tmp7, tmp48);
        tmp52 = simd_and(tmp4, tmp40);
        bytetest_99_99 = simd_and(tmp51, tmp52);
        tmp53 = simd_and(tmp12, bytetest_d5);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp53, carryQ.get_carry_in(4), tmp54));
        tmp55 = simd_and(tmp54, bytetest_99_99);
        struct_Lm.cc = simd_or(tmp55, struct_Lm.cc);
        bytetest_d9 = simd_and(tmp49, tmp52);
        tmp56 = simd_or(tmp9, tmp32);
        bytetest_80_80 = simd_andc(tmp8, tmp56);
        tmp57 = simd_and(tmp12, bytetest_d9);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp57, carryQ.get_carry_in(5), tmp58));
        tmp59 = simd_and(tmp58, bytetest_80_80);
        struct_Lm.cc = simd_or(tmp59, struct_Lm.cc);
        bytetest_db = simd_and(tmp49, tmp6);
        tmp60 = simd_and(tmp30, tmp42);
        tmp61 = simd_not(basis_bits.bit_7);
        tmp62 = simd_or(simd_and(basis_bits.bit_6, tmp61), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
        bytetest_a5_a6 = simd_and(tmp60, tmp62);
        tmp63 = simd_and(tmp12, bytetest_db);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp63, carryQ.get_carry_in(6), tmp64));
        tmp65 = simd_and(tmp64, bytetest_a5_a6);
        struct_Lm.cc = simd_or(tmp65, struct_Lm.cc);
        tmp66 = simd_and(tmp35, tmp5);
        bytetest_df = simd_and(tmp49, tmp66);
        tmp67 = simd_andc(tmp42, basis_bits.bit_6);
        bytetest_b4_b5 = simd_and(bytetest_b0_bf, tmp67);
        tmp68 = simd_and(tmp12, bytetest_df);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp68, carryQ.get_carry_in(7), tmp69));
        tmp70 = simd_and(tmp69, bytetest_b4_b5);
        struct_Lm.cc = simd_or(tmp70, struct_Lm.cc);
        bytetest_df = simd_and(tmp49, tmp66);
        bytetest_ba_ba = simd_and(bytetest_b0_bf, tmp17);
        tmp71 = simd_and(tmp69, bytetest_ba_ba);
        struct_Lm.cc = simd_or(tmp71, struct_Lm.cc);
        tmp72 = simd_and(tmp1, tmp29);
        bytetest_e0 = simd_andc(tmp72, tmp56);
        bytetest_a0 = simd_andc(tmp30, tmp56);
        bytetest_9a_9a = simd_and(tmp51, tmp17);
        tmp73 = simd_and(tmp12, bytetest_e0);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(tmp73, carryQ.get_carry_in(8), tmp74));
        tmp75 = simd_and(tmp74, bytetest_a0);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(tmp75, carryQ.get_carry_in(9), tmp76));
        tmp77 = simd_and(tmp76, bytetest_9a_9a);
        struct_Lm.cc = simd_or(tmp77, struct_Lm.cc);
        bytetest_e0 = simd_andc(tmp72, tmp56);
        bytetest_a0 = simd_andc(tmp30, tmp56);
        bytetest_a4_a4 = simd_and(tmp30, tmp43);
        tmp78 = simd_and(tmp76, bytetest_a4_a4);
        struct_Lm.cc = simd_or(tmp78, struct_Lm.cc);
        bytetest_e0 = simd_andc(tmp72, tmp56);
        bytetest_a0 = simd_andc(tmp30, tmp56);
        tmp79 = simd_andc(tmp4, tmp32);
        bytetest_a8_a8 = simd_and(tmp30, tmp79);
        tmp80 = simd_and(tmp76, bytetest_a8_a8);
        struct_Lm.cc = simd_or(tmp80, struct_Lm.cc);
        bytetest_e0 = simd_andc(tmp72, tmp56);
        bytetest_a5 = simd_and(tmp30, tmp50);
        tmp81 = simd_andc(tmp40, tmp9);
        bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp81);
        tmp82 = simd_and(tmp74, bytetest_a5);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(tmp82, carryQ.get_carry_in(10), tmp83));
        tmp84 = simd_and(tmp83, bytetest_b1_b1);
        struct_Lm.cc = simd_or(tmp84, struct_Lm.cc);
        bytetest_e0 = simd_andc(tmp72, tmp56);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp52);
        tmp85 = simd_and(tmp42, tmp16);
        bytetest_86_86 = simd_and(tmp8, tmp85);
        tmp86 = simd_and(tmp74, bytetest_b9);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(tmp86, carryQ.get_carry_in(11), tmp87));
        tmp88 = simd_and(tmp87, bytetest_86_86);
        struct_Lm.cc = simd_or(tmp88, struct_Lm.cc);
        bytetest_e0 = simd_andc(tmp72, tmp56);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp6);
        bytetest_86_86 = simd_and(tmp8, tmp85);
        tmp89 = simd_and(tmp74, bytetest_bb);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(tmp89, carryQ.get_carry_in(12), tmp90));
        tmp91 = simd_and(tmp90, bytetest_86_86);
        struct_Lm.cc = simd_or(tmp91, struct_Lm.cc);
        bytetest_e1 = simd_and(tmp72, tmp81);
        tmp92 = simd_andc(tmp5, tmp9);
        bytetest_83 = simd_and(tmp8, tmp92);
        bytetest_bc_bc = simd_and(bytetest_b0_bf, tmp36);
        tmp93 = simd_and(tmp12, bytetest_e1);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(tmp93, carryQ.get_carry_in(13), tmp94));
        tmp95 = simd_and(tmp94, bytetest_83);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(tmp95, carryQ.get_carry_in(14), tmp96));
        tmp97 = simd_and(tmp96, bytetest_bc_bc);
        struct_Lm.cc = simd_or(tmp97, struct_Lm.cc);
        bytetest_e1 = simd_and(tmp72, tmp81);
        bytetest_9f = simd_and(tmp51, tmp66);
        tmp98 = simd_and(tmp42, tmp5);
        bytetest_97_97 = simd_and(tmp51, tmp98);
        tmp99 = simd_and(tmp94, bytetest_9f);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(tmp99, carryQ.get_carry_in(15), tmp100));
        tmp101 = simd_and(tmp100, bytetest_97_97);
        struct_Lm.cc = simd_or(tmp101, struct_Lm.cc);
        bytetest_e1 = simd_and(tmp72, tmp81);
        bytetest_a1 = simd_and(tmp30, tmp81);
        bytetest_83_83 = simd_and(tmp8, tmp92);
        tmp102 = simd_and(tmp94, bytetest_a1);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(tmp102, carryQ.get_carry_in(16), tmp103));
        tmp104 = simd_and(tmp103, bytetest_83_83);
        struct_Lm.cc = simd_or(tmp104, struct_Lm.cc);
        bytetest_e1 = simd_and(tmp72, tmp81);
        bytetest_aa = simd_and(tmp30, tmp17);
        bytetest_a7_a7 = simd_and(tmp30, tmp98);
        tmp105 = simd_and(tmp94, bytetest_aa);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(tmp105, carryQ.get_carry_in(17), tmp106));
        tmp107 = simd_and(tmp106, bytetest_a7_a7);
        struct_Lm.cc = simd_or(tmp107, struct_Lm.cc);
        bytetest_e1 = simd_and(tmp72, tmp81);
        bytetest_b1 = simd_and(bytetest_b0_bf, tmp81);
        tmp108 = simd_and(bytetest_b0_bf, basis_bits.bit_4);
        bytetest_b8_bd = simd_andc(tmp108, tmp25);
        tmp109 = simd_and(tmp94, bytetest_b1);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(tmp109, carryQ.get_carry_in(18), tmp110));
        tmp111 = simd_and(tmp110, bytetest_b8_bd);
        struct_Lm.cc = simd_or(tmp111, struct_Lm.cc);
        bytetest_e1 = simd_and(tmp72, tmp81);
        bytetest_b5 = simd_and(bytetest_b0_bf, tmp50);
        tmp112 = simd_or(basis_bits.bit_5, tmp5);
        tmp113 = simd_and(basis_bits.bit_4, tmp112);
        tmp114 = simd_or(basis_bits.bit_3, tmp113);
        tmp115 = simd_and(basis_bits.bit_2, tmp114);
        bytetest_80_aa = simd_andc(tmp7, tmp115);
        tmp116 = simd_and(tmp94, bytetest_b5);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(tmp116, carryQ.get_carry_in(19), tmp117));
        tmp118 = simd_and(tmp117, bytetest_80_aa);
        bytetest_b4 = simd_and(bytetest_b0_bf, tmp43);
        tmp119 = simd_and(tmp7, basis_bits.bit_2);
        tmp120 = simd_or(basis_bits.bit_3, tmp35);
        bytetest_ac_bf = simd_and(tmp119, tmp120);
        tmp121 = simd_and(tmp94, bytetest_b4);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(tmp121, carryQ.get_carry_in(20), tmp122));
        tmp123 = simd_and(tmp122, bytetest_ac_bf);
        tmp124 = simd_or(tmp123, tmp118);
        struct_Lm.cc = simd_or(tmp124, struct_Lm.cc);
        bytetest_e1 = simd_and(tmp72, tmp81);
        bytetest_b5 = simd_and(bytetest_b0_bf, tmp50);
        bytetest_b8_b8 = simd_and(bytetest_b0_bf, tmp79);
        tmp125 = simd_and(tmp117, bytetest_b8_b8);
        struct_Lm.cc = simd_or(tmp125, struct_Lm.cc);
        bytetest_e1 = simd_and(tmp72, tmp81);
        bytetest_b6 = simd_and(bytetest_b0_bf, tmp85);
        tmp126 = simd_and(basis_bits.bit_3, tmp113);
        tmp127 = simd_or(basis_bits.bit_2, tmp126);
        bytetest_9b_bf = simd_and(tmp7, tmp127);
        tmp128 = simd_and(tmp94, bytetest_b6);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(tmp128, carryQ.get_carry_in(21), tmp129));
        tmp130 = simd_and(tmp129, bytetest_9b_bf);
        struct_Lm.cc = simd_or(tmp130, struct_Lm.cc);
        tmp131 = simd_andc(tmp16, tmp9);
        bytetest_e2 = simd_and(tmp72, tmp131);
        bytetest_81 = simd_and(tmp8, tmp81);
        bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp81);
        tmp132 = simd_and(tmp12, bytetest_e2);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(tmp132, carryQ.get_carry_in(22), tmp133));
        tmp134 = simd_and(tmp133, bytetest_81);
        carryQ.cq[23] = carryout2carry(pablo_blk_Advance(tmp134, carryQ.get_carry_in(23), tmp135));
        tmp136 = simd_and(tmp135, bytetest_b1_b1);
        struct_Lm.cc = simd_or(tmp136, struct_Lm.cc);
        bytetest_e2 = simd_and(tmp72, tmp131);
        bytetest_81 = simd_and(tmp8, tmp81);
        bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp66);
        tmp137 = simd_and(tmp135, bytetest_bf_bf);
        struct_Lm.cc = simd_or(tmp137, struct_Lm.cc);
        bytetest_e2 = simd_and(tmp72, tmp131);
        bytetest_82 = simd_and(tmp8, tmp131);
        tmp138 = simd_and(basis_bits.bit_4, tmp33);
        bytetest_90_9c = simd_andc(tmp51, tmp138);
        tmp139 = simd_and(tmp133, bytetest_82);
        carryQ.cq[24] = carryout2carry(pablo_blk_Advance(tmp139, carryQ.get_carry_in(24), tmp140));
        tmp141 = simd_and(tmp140, bytetest_90_9c);
        struct_Lm.cc = simd_or(tmp141, struct_Lm.cc);
        bytetest_e2 = simd_and(tmp72, tmp131);
        bytetest_b1 = simd_and(bytetest_b0_bf, tmp81);
        tmp142 = simd_andc(tmp35, basis_bits.bit_6);
        bytetest_bc_bd = simd_and(bytetest_b0_bf, tmp142);
        tmp143 = simd_and(tmp133, bytetest_b1);
        carryQ.cq[25] = carryout2carry(pablo_blk_Advance(tmp143, carryQ.get_carry_in(25), tmp144));
        tmp145 = simd_and(tmp144, bytetest_bc_bd);
        struct_Lm.cc = simd_or(tmp145, struct_Lm.cc);
        bytetest_e2 = simd_and(tmp72, tmp131);
        bytetest_b5 = simd_and(bytetest_b0_bf, tmp50);
        bytetest_af_af = simd_and(tmp30, tmp66);
        tmp146 = simd_and(tmp133, bytetest_b5);
        carryQ.cq[26] = carryout2carry(pablo_blk_Advance(tmp146, carryQ.get_carry_in(26), tmp147));
        tmp148 = simd_and(tmp147, bytetest_af_af);
        struct_Lm.cc = simd_or(tmp148, struct_Lm.cc);
        bytetest_e2 = simd_and(tmp72, tmp131);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp79);
        bytetest_af_af = simd_and(tmp30, tmp66);
        tmp149 = simd_and(tmp133, bytetest_b8);
        carryQ.cq[27] = carryout2carry(pablo_blk_Advance(tmp149, carryQ.get_carry_in(27), tmp150));
        tmp151 = simd_and(tmp150, bytetest_af_af);
        struct_Lm.cc = simd_or(tmp151, struct_Lm.cc);
        bytetest_e3 = simd_and(tmp72, tmp92);
        bytetest_80 = simd_andc(tmp8, tmp56);
        bytetest_85_85 = simd_and(tmp8, tmp50);
        tmp152 = simd_and(tmp12, bytetest_e3);
        carryQ.cq[28] = carryout2carry(pablo_blk_Advance(tmp152, carryQ.get_carry_in(28), tmp153));
        tmp154 = simd_and(tmp153, bytetest_80);
        carryQ.cq[29] = carryout2carry(pablo_blk_Advance(tmp154, carryQ.get_carry_in(29), tmp155));
        tmp156 = simd_and(tmp155, bytetest_85_85);
        struct_Lm.cc = simd_or(tmp156, struct_Lm.cc);
        bytetest_e3 = simd_and(tmp72, tmp92);
        bytetest_80 = simd_andc(tmp8, tmp56);
        tmp157 = simd_andc(bytetest_b0_bf, basis_bits.bit_4);
        tmp158 = simd_not(basis_bits.bit_6);
        tmp159 = simd_or(simd_and(basis_bits.bit_5, tmp158), simd_andc(tmp32, basis_bits.bit_5));
        bytetest_b1_b5 = simd_and(tmp157, tmp159);
        tmp160 = simd_and(tmp155, bytetest_b1_b5);
        struct_Lm.cc = simd_or(tmp160, struct_Lm.cc);
        bytetest_e3 = simd_and(tmp72, tmp92);
        bytetest_80 = simd_andc(tmp8, tmp56);
        bytetest_bb_bb = simd_and(bytetest_b0_bf, tmp6);
        tmp161 = simd_and(tmp155, bytetest_bb_bb);
        struct_Lm.cc = simd_or(tmp161, struct_Lm.cc);
        bytetest_e3 = simd_and(tmp72, tmp92);
        bytetest_82 = simd_and(tmp8, tmp131);
        tmp162 = simd_and(tmp51, tmp35);
        bytetest_9d_9e = simd_and(tmp162, tmp62);
        tmp163 = simd_and(tmp153, bytetest_82);
        carryQ.cq[30] = carryout2carry(pablo_blk_Advance(tmp163, carryQ.get_carry_in(30), tmp164));
        tmp165 = simd_and(tmp164, bytetest_9d_9e);
        struct_Lm.cc = simd_or(tmp165, struct_Lm.cc);
        bytetest_e3 = simd_and(tmp72, tmp92);
        bytetest_83 = simd_and(tmp8, tmp92);
        tmp166 = simd_and(bytetest_b0_bf, tmp35);
        bytetest_bc_be = simd_andc(tmp166, tmp5);
        tmp167 = simd_and(tmp153, bytetest_83);
        carryQ.cq[31] = carryout2carry(pablo_blk_Advance(tmp167, carryQ.get_carry_in(31), tmp168));
        tmp169 = simd_and(tmp168, bytetest_bc_be);
        struct_Lm.cc = simd_or(tmp169, struct_Lm.cc);
        bytetest_ea = simd_and(tmp72, tmp17);
        bytetest_80 = simd_andc(tmp8, tmp56);
        bytetest_95_95 = simd_and(tmp51, tmp50);
        tmp170 = simd_and(tmp12, bytetest_ea);
        carryQ.cq[32] = carryout2carry(pablo_blk_Advance(tmp170, carryQ.get_carry_in(32), tmp171));
        tmp172 = simd_and(tmp171, bytetest_80);
        carryQ.cq[33] = carryout2carry(pablo_blk_Advance(tmp172, carryQ.get_carry_in(33), tmp173));
        tmp174 = simd_and(tmp173, bytetest_95_95);
        struct_Lm.cc = simd_or(tmp174, struct_Lm.cc);
        bytetest_ea = simd_and(tmp72, tmp17);
        bytetest_93 = simd_and(tmp51, tmp92);
        bytetest_b8_bd = simd_andc(tmp108, tmp25);
        tmp175 = simd_and(tmp171, bytetest_93);
        carryQ.cq[34] = carryout2carry(pablo_blk_Advance(tmp175, carryQ.get_carry_in(34), tmp176));
        tmp177 = simd_and(tmp176, bytetest_b8_bd);
        struct_Lm.cc = simd_or(tmp177, struct_Lm.cc);
        bytetest_ea = simd_and(tmp72, tmp17);
        bytetest_98 = simd_and(tmp51, tmp79);
        bytetest_8c_8c = simd_and(tmp8, tmp36);
        tmp178 = simd_and(tmp171, bytetest_98);
        carryQ.cq[35] = carryout2carry(pablo_blk_Advance(tmp178, carryQ.get_carry_in(35), tmp179));
        tmp180 = simd_and(tmp179, bytetest_8c_8c);
        struct_Lm.cc = simd_or(tmp180, struct_Lm.cc);
        bytetest_ea = simd_and(tmp72, tmp17);
        bytetest_99 = simd_and(tmp51, tmp52);
        bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp66);
        tmp181 = simd_and(tmp171, bytetest_99);
        carryQ.cq[36] = carryout2carry(pablo_blk_Advance(tmp181, carryQ.get_carry_in(36), tmp182));
        tmp183 = simd_and(tmp182, bytetest_bf_bf);
        struct_Lm.cc = simd_or(tmp183, struct_Lm.cc);
        bytetest_ea = simd_and(tmp72, tmp17);
        bytetest_9c = simd_and(tmp51, tmp36);
        tmp184 = simd_and(basis_bits.bit_5, tmp5);
        tmp185 = simd_or(basis_bits.bit_4, tmp184);
        bytetest_97_9f = simd_and(tmp51, tmp185);
        tmp186 = simd_and(tmp171, bytetest_9c);
        carryQ.cq[37] = carryout2carry(pablo_blk_Advance(tmp186, carryQ.get_carry_in(37), tmp187));
        tmp188 = simd_and(tmp187, bytetest_97_9f);
        struct_Lm.cc = simd_or(tmp188, struct_Lm.cc);
        bytetest_ea = simd_and(tmp72, tmp17);
        bytetest_9d = simd_and(tmp51, tmp41);
        bytetest_b0_b0 = simd_andc(bytetest_b0_bf, tmp56);
        tmp189 = simd_and(tmp171, bytetest_9d);
        carryQ.cq[38] = carryout2carry(pablo_blk_Advance(tmp189, carryQ.get_carry_in(38), tmp190));
        tmp191 = simd_and(tmp190, bytetest_b0_b0);
        struct_Lm.cc = simd_or(tmp191, struct_Lm.cc);
        bytetest_ea = simd_and(tmp72, tmp17);
        bytetest_9e = simd_and(tmp51, tmp38);
        bytetest_88_88 = simd_and(tmp8, tmp79);
        tmp192 = simd_and(tmp171, bytetest_9e);
        carryQ.cq[39] = carryout2carry(pablo_blk_Advance(tmp192, carryQ.get_carry_in(39), tmp193));
        tmp194 = simd_and(tmp193, bytetest_88_88);
        struct_Lm.cc = simd_or(tmp194, struct_Lm.cc);
        bytetest_ea = simd_and(tmp72, tmp17);
        bytetest_9f = simd_and(tmp51, tmp66);
        tmp195 = simd_andc(tmp4, basis_bits.bit_6);
        bytetest_b8_b9 = simd_and(bytetest_b0_bf, tmp195);
        tmp196 = simd_and(tmp171, bytetest_9f);
        carryQ.cq[40] = carryout2carry(pablo_blk_Advance(tmp196, carryQ.get_carry_in(40), tmp197));
        tmp198 = simd_and(tmp197, bytetest_b8_b9);
        struct_Lm.cc = simd_or(tmp198, struct_Lm.cc);
        bytetest_ea = simd_and(tmp72, tmp17);
        bytetest_a7 = simd_and(tmp30, tmp98);
        bytetest_8f_8f = simd_and(tmp8, tmp66);
        tmp199 = simd_and(tmp171, bytetest_a7);
        carryQ.cq[41] = carryout2carry(pablo_blk_Advance(tmp199, carryQ.get_carry_in(41), tmp200));
        tmp201 = simd_and(tmp200, bytetest_8f_8f);
        struct_Lm.cc = simd_or(tmp201, struct_Lm.cc);
        bytetest_ea = simd_and(tmp72, tmp17);
        bytetest_a9 = simd_and(tmp30, tmp52);
        bytetest_b0_b0 = simd_andc(bytetest_b0_bf, tmp56);
        tmp202 = simd_and(tmp171, bytetest_a9);
        carryQ.cq[42] = carryout2carry(pablo_blk_Advance(tmp202, carryQ.get_carry_in(42), tmp203));
        tmp204 = simd_and(tmp203, bytetest_b0_b0);
        struct_Lm.cc = simd_or(tmp204, struct_Lm.cc);
        bytetest_ea = simd_and(tmp72, tmp17);
        bytetest_ab = simd_and(tmp30, tmp6);
        bytetest_9d_9d = simd_and(tmp51, tmp41);
        tmp205 = simd_and(tmp171, bytetest_ab);
        carryQ.cq[43] = carryout2carry(pablo_blk_Advance(tmp205, carryQ.get_carry_in(43), tmp206));
        tmp207 = simd_and(tmp206, bytetest_9d_9d);
        struct_Lm.cc = simd_or(tmp207, struct_Lm.cc);
        bytetest_ea = simd_and(tmp72, tmp17);
        bytetest_ab = simd_and(tmp30, tmp6);
        tmp208 = simd_not(tmp32);
        tmp209 = simd_or(simd_and(basis_bits.bit_5, tmp208), simd_andc(tmp5, basis_bits.bit_5));
        bytetest_b3_b4 = simd_and(tmp157, tmp209);
        tmp210 = simd_and(tmp206, bytetest_b3_b4);
        struct_Lm.cc = simd_or(tmp210, struct_Lm.cc);
        bytetest_ef = simd_and(tmp72, tmp66);
        bytetest_bd = simd_and(bytetest_b0_bf, tmp41);
        bytetest_b0_b0 = simd_andc(bytetest_b0_bf, tmp56);
        tmp211 = simd_and(tmp12, bytetest_ef);
        carryQ.cq[44] = carryout2carry(pablo_blk_Advance(tmp211, carryQ.get_carry_in(44), tmp212));
        tmp213 = simd_and(tmp212, bytetest_bd);
        carryQ.cq[45] = carryout2carry(pablo_blk_Advance(tmp213, carryQ.get_carry_in(45), tmp214));
        tmp215 = simd_and(tmp214, bytetest_b0_b0);
        struct_Lm.cc = simd_or(tmp215, struct_Lm.cc);
        bytetest_ef = simd_and(tmp72, tmp66);
        bytetest_be = simd_and(bytetest_b0_bf, tmp38);
        tmp216 = simd_and(tmp35, basis_bits.bit_6);
        bytetest_9e_9f = simd_and(tmp51, tmp216);
        tmp217 = simd_and(tmp212, bytetest_be);
        carryQ.cq[46] = carryout2carry(pablo_blk_Advance(tmp217, carryQ.get_carry_in(46), tmp218));
        tmp219 = simd_and(tmp218, bytetest_9e_9f);
        struct_Lm.cc = simd_or(tmp219, struct_Lm.cc);
        tmp220 = simd_and(tmp1, tmp18);
        bytetest_f0 = simd_andc(tmp220, tmp56);
        bytetest_96 = simd_and(tmp51, tmp85);
        bytetest_be = simd_and(bytetest_b0_bf, tmp38);
        tmp221 = simd_or(basis_bits.bit_4, tmp112);
        bytetest_93_9f = simd_and(tmp51, tmp221);
        tmp222 = simd_and(tmp12, bytetest_f0);
        carryQ.cq[47] = carryout2carry(pablo_blk_Advance(tmp222, carryQ.get_carry_in(47), tmp223));
        tmp224 = simd_and(tmp223, bytetest_96);
        carryQ.cq[48] = carryout2carry(pablo_blk_Advance(tmp224, carryQ.get_carry_in(48), tmp225));
        tmp226 = simd_and(tmp225, bytetest_be);
        carryQ.cq[49] = carryout2carry(pablo_blk_Advance(tmp226, carryQ.get_carry_in(49), tmp227));
        tmp228 = simd_and(tmp227, bytetest_93_9f);
        struct_Lm.cc = simd_or(tmp228, struct_Lm.cc);
  }
  CarryArray<50, 0> carryQ;
  };

  struct Nd {
  Nd() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Nd & struct_Nd) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, bytetest_30_39, tmp6, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, bytetest_d9, tmp12, tmp13, tmp14, bytetest_a0_a9, tmp15;
		BitBlock tmp16, tmp17, tmp18, tmp19, tmp20, tmp21, bytetest_db, tmp22;
		BitBlock bytetest_b0_b9, tmp23, tmp24, tmp25, tmp26, tmp27, bytetest_df, tmp28;
		BitBlock tmp29, bytetest_80_89, tmp30, tmp31, tmp32, tmp33, tmp34, tmp35;
		BitBlock tmp36, bytetest_e0, tmp37, tmp38, bytetest_a5, tmp39, tmp40;
		BitBlock bytetest_a6_af, tmp41, tmp42, tmp43, tmp44, tmp45, tmp46, bytetest_a7;
		BitBlock tmp47, tmp48, tmp49, bytetest_a9, tmp50, tmp51, tmp52, bytetest_ab;
		BitBlock tmp53, tmp54, tmp55, tmp56, bytetest_ad, tmp57, tmp58, tmp59;
		BitBlock bytetest_af, tmp60, tmp61, tmp62, tmp63, bytetest_b1, tmp64, tmp65;
		BitBlock tmp66, tmp67, bytetest_b3, tmp68, tmp69, tmp70, bytetest_b5, tmp71;
		BitBlock tmp72, tmp73, bytetest_b9, tmp74, bytetest_90_99, tmp75, tmp76, tmp77;
		BitBlock bytetest_bb, tmp78, tmp79, tmp80, tmp81, bytetest_bc, tmp82, tmp83;
		BitBlock tmp84, bytetest_e1, bytetest_81, tmp85, tmp86, tmp87, tmp88, tmp89;
		BitBlock tmp90, tmp91, bytetest_82, tmp92, tmp93, tmp94, bytetest_9f, tmp95;
		BitBlock tmp96, tmp97, bytetest_a0, tmp98, tmp99, tmp100, bytetest_86_8f;
		BitBlock tmp101, tmp102, tmp103, tmp104, tmp105, tmp106, tmp107, bytetest_aa;
		BitBlock tmp108, tmp109, tmp110, tmp111, tmp112, tmp113, tmp114, tmp115;
		BitBlock bytetest_ae, tmp116, tmp117, tmp118, tmp119, tmp120, tmp121, tmp122;
		BitBlock bytetest_ea, tmp123, bytetest_98, tmp124, tmp125, tmp126, tmp127;
		BitBlock tmp128, bytetest_a3, tmp129, tmp130, tmp131, tmp132, bytetest_a4;
		BitBlock tmp133, tmp134, tmp135, tmp136, tmp137, tmp138, tmp139, tmp140;
		BitBlock tmp141, tmp142, tmp143, tmp144, bytetest_ef, tmp145, tmp146, tmp147;
		BitBlock tmp148, tmp149, tmp150, bytetest_f0, bytetest_90, bytetest_92, tmp151;
		BitBlock tmp152, tmp153, tmp154, tmp155, tmp156, tmp157, bytetest_91, tmp158;
		BitBlock tmp159, tmp160, tmp161, tmp162, bytetest_83, tmp163, tmp164, tmp165;
		BitBlock bytetest_84, bytetest_b6_bf, tmp166, tmp167, tmp168, bytetest_87;
		BitBlock tmp169, tmp170, tmp171, bytetest_9b, tmp172, tmp173, tmp174;
		BitBlock bytetest_9d, tmp175, tmp176, tmp177, bytetest_8e_bf, tmp178, tmp179;
		BitBlock tmp180, tmp181, tmp182;




        struct_Nd.cc = simd<1>::constant<0>();
        tmp1 = simd_or(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp2, tmp1);
        tmp4 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
        tmp5 = simd_and(basis_bits.bit_4, tmp4);
        bytetest_30_39 = simd_andc(tmp3, tmp5);
        struct_Nd.cc = simd_or(bytetest_30_39, struct_Nd.cc);
        tmp6 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp7 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp8 = simd_and(tmp6, tmp7);
        tmp9 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp10 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp11 = simd_and(tmp9, tmp10);
        bytetest_d9 = simd_and(tmp8, tmp11);
        tmp12 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp13 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp14 = simd_and(tmp12, tmp13);
        bytetest_a0_a9 = simd_andc(tmp14, tmp5);
        tmp15 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp15, carryQ.get_carry_in(0), tmp16));
        tmp17 = simd_and(tmp16, bytetest_d9);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp17, carryQ.get_carry_in(1), tmp18));
        tmp19 = simd_and(tmp18, bytetest_a0_a9);
        struct_Nd.cc = simd_or(tmp19, struct_Nd.cc);
        tmp20 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp21 = simd_and(tmp9, tmp20);
        bytetest_db = simd_and(tmp8, tmp21);
        tmp22 = simd_and(tmp12, tmp2);
        bytetest_b0_b9 = simd_andc(tmp22, tmp5);
        tmp23 = simd_and(tmp16, bytetest_db);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp23, carryQ.get_carry_in(2), tmp24));
        tmp25 = simd_and(tmp24, bytetest_b0_b9);
        struct_Nd.cc = simd_or(tmp25, struct_Nd.cc);
        tmp26 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp27 = simd_and(tmp26, tmp20);
        bytetest_df = simd_and(tmp8, tmp27);
        tmp28 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp29 = simd_andc(tmp12, tmp28);
        bytetest_80_89 = simd_andc(tmp29, tmp5);
        tmp30 = simd_and(tmp16, bytetest_df);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp30, carryQ.get_carry_in(3), tmp31));
        tmp32 = simd_and(tmp31, bytetest_80_89);
        struct_Nd.cc = simd_or(tmp32, struct_Nd.cc);
        tmp33 = simd_and(tmp6, tmp13);
        tmp34 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp35 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp36 = simd_or(tmp34, tmp35);
        bytetest_e0 = simd_andc(tmp33, tmp36);
        tmp37 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp38 = simd_and(tmp37, tmp10);
        bytetest_a5 = simd_and(tmp14, tmp38);
        tmp39 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp40 = simd_or(basis_bits.bit_4, tmp39);
        bytetest_a6_af = simd_and(tmp14, tmp40);
        tmp41 = simd_and(tmp16, bytetest_e0);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp41, carryQ.get_carry_in(4), tmp42));
        tmp43 = simd_and(tmp42, bytetest_a5);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp43, carryQ.get_carry_in(5), tmp44));
        tmp45 = simd_and(tmp44, bytetest_a6_af);
        struct_Nd.cc = simd_or(tmp45, struct_Nd.cc);
        bytetest_e0 = simd_andc(tmp33, tmp36);
        tmp46 = simd_and(tmp37, tmp20);
        bytetest_a7 = simd_and(tmp14, tmp46);
        bytetest_a6_af = simd_and(tmp14, tmp40);
        tmp47 = simd_and(tmp42, bytetest_a7);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp47, carryQ.get_carry_in(6), tmp48));
        tmp49 = simd_and(tmp48, bytetest_a6_af);
        struct_Nd.cc = simd_or(tmp49, struct_Nd.cc);
        bytetest_e0 = simd_andc(tmp33, tmp36);
        bytetest_a9 = simd_and(tmp14, tmp11);
        bytetest_a6_af = simd_and(tmp14, tmp40);
        tmp50 = simd_and(tmp42, bytetest_a9);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp50, carryQ.get_carry_in(7), tmp51));
        tmp52 = simd_and(tmp51, bytetest_a6_af);
        struct_Nd.cc = simd_or(tmp52, struct_Nd.cc);
        bytetest_e0 = simd_andc(tmp33, tmp36);
        bytetest_ab = simd_and(tmp14, tmp21);
        bytetest_a6_af = simd_and(tmp14, tmp40);
        tmp53 = simd_and(tmp42, bytetest_ab);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(tmp53, carryQ.get_carry_in(8), tmp54));
        tmp55 = simd_and(tmp54, bytetest_a6_af);
        struct_Nd.cc = simd_or(tmp55, struct_Nd.cc);
        bytetest_e0 = simd_andc(tmp33, tmp36);
        tmp56 = simd_and(tmp26, tmp10);
        bytetest_ad = simd_and(tmp14, tmp56);
        bytetest_a6_af = simd_and(tmp14, tmp40);
        tmp57 = simd_and(tmp42, bytetest_ad);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(tmp57, carryQ.get_carry_in(9), tmp58));
        tmp59 = simd_and(tmp58, bytetest_a6_af);
        struct_Nd.cc = simd_or(tmp59, struct_Nd.cc);
        bytetest_e0 = simd_andc(tmp33, tmp36);
        bytetest_af = simd_and(tmp14, tmp27);
        bytetest_a6_af = simd_and(tmp14, tmp40);
        tmp60 = simd_and(tmp42, bytetest_af);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(tmp60, carryQ.get_carry_in(10), tmp61));
        tmp62 = simd_and(tmp61, bytetest_a6_af);
        struct_Nd.cc = simd_or(tmp62, struct_Nd.cc);
        bytetest_e0 = simd_andc(tmp33, tmp36);
        tmp63 = simd_andc(tmp10, tmp34);
        bytetest_b1 = simd_and(tmp22, tmp63);
        bytetest_a6_af = simd_and(tmp14, tmp40);
        tmp64 = simd_and(tmp42, bytetest_b1);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(tmp64, carryQ.get_carry_in(11), tmp65));
        tmp66 = simd_and(tmp65, bytetest_a6_af);
        struct_Nd.cc = simd_or(tmp66, struct_Nd.cc);
        bytetest_e0 = simd_andc(tmp33, tmp36);
        tmp67 = simd_andc(tmp20, tmp34);
        bytetest_b3 = simd_and(tmp22, tmp67);
        bytetest_a6_af = simd_and(tmp14, tmp40);
        tmp68 = simd_and(tmp42, bytetest_b3);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(tmp68, carryQ.get_carry_in(12), tmp69));
        tmp70 = simd_and(tmp69, bytetest_a6_af);
        struct_Nd.cc = simd_or(tmp70, struct_Nd.cc);
        bytetest_e0 = simd_andc(tmp33, tmp36);
        bytetest_b5 = simd_and(tmp22, tmp38);
        bytetest_a6_af = simd_and(tmp14, tmp40);
        tmp71 = simd_and(tmp42, bytetest_b5);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(tmp71, carryQ.get_carry_in(13), tmp72));
        tmp73 = simd_and(tmp72, bytetest_a6_af);
        struct_Nd.cc = simd_or(tmp73, struct_Nd.cc);
        bytetest_e0 = simd_andc(tmp33, tmp36);
        bytetest_b9 = simd_and(tmp22, tmp11);
        tmp74 = simd_and(tmp12, tmp7);
        bytetest_90_99 = simd_andc(tmp74, tmp5);
        tmp75 = simd_and(tmp42, bytetest_b9);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(tmp75, carryQ.get_carry_in(14), tmp76));
        tmp77 = simd_and(tmp76, bytetest_90_99);
        struct_Nd.cc = simd_or(tmp77, struct_Nd.cc);
        bytetest_e0 = simd_andc(tmp33, tmp36);
        bytetest_bb = simd_and(tmp22, tmp21);
        bytetest_90_99 = simd_andc(tmp74, tmp5);
        tmp78 = simd_and(tmp42, bytetest_bb);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(tmp78, carryQ.get_carry_in(15), tmp79));
        tmp80 = simd_and(tmp79, bytetest_90_99);
        struct_Nd.cc = simd_or(tmp80, struct_Nd.cc);
        bytetest_e0 = simd_andc(tmp33, tmp36);
        tmp81 = simd_andc(tmp26, tmp35);
        bytetest_bc = simd_and(tmp22, tmp81);
        bytetest_a0_a9 = simd_andc(tmp14, tmp5);
        tmp82 = simd_and(tmp42, bytetest_bc);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(tmp82, carryQ.get_carry_in(16), tmp83));
        tmp84 = simd_and(tmp83, bytetest_a0_a9);
        struct_Nd.cc = simd_or(tmp84, struct_Nd.cc);
        bytetest_e1 = simd_and(tmp33, tmp63);
        bytetest_81 = simd_and(tmp29, tmp63);
        bytetest_80_89 = simd_andc(tmp29, tmp5);
        tmp85 = simd_and(tmp16, bytetest_e1);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(tmp85, carryQ.get_carry_in(17), tmp86));
        tmp87 = simd_and(tmp86, bytetest_81);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(tmp87, carryQ.get_carry_in(18), tmp88));
        tmp89 = simd_and(tmp88, bytetest_80_89);
        struct_Nd.cc = simd_or(tmp89, struct_Nd.cc);
        bytetest_e1 = simd_and(tmp33, tmp63);
        tmp90 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp91 = simd_andc(tmp90, tmp34);
        bytetest_82 = simd_and(tmp29, tmp91);
        bytetest_90_99 = simd_andc(tmp74, tmp5);
        tmp92 = simd_and(tmp86, bytetest_82);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(tmp92, carryQ.get_carry_in(19), tmp93));
        tmp94 = simd_and(tmp93, bytetest_90_99);
        struct_Nd.cc = simd_or(tmp94, struct_Nd.cc);
        bytetest_e1 = simd_and(tmp33, tmp63);
        bytetest_9f = simd_and(tmp74, tmp27);
        bytetest_a0_a9 = simd_andc(tmp14, tmp5);
        tmp95 = simd_and(tmp86, bytetest_9f);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(tmp95, carryQ.get_carry_in(20), tmp96));
        tmp97 = simd_and(tmp96, bytetest_a0_a9);
        struct_Nd.cc = simd_or(tmp97, struct_Nd.cc);
        bytetest_e1 = simd_and(tmp33, tmp63);
        bytetest_a0 = simd_andc(tmp14, tmp36);
        bytetest_90_99 = simd_andc(tmp74, tmp5);
        tmp98 = simd_and(tmp86, bytetest_a0);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(tmp98, carryQ.get_carry_in(21), tmp99));
        tmp100 = simd_and(tmp99, bytetest_90_99);
        struct_Nd.cc = simd_or(tmp100, struct_Nd.cc);
        bytetest_e1 = simd_and(tmp33, tmp63);
        bytetest_a5 = simd_and(tmp14, tmp38);
        bytetest_86_8f = simd_and(tmp29, tmp40);
        tmp101 = simd_and(tmp86, bytetest_a5);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(tmp101, carryQ.get_carry_in(22), tmp102));
        tmp103 = simd_and(tmp102, bytetest_86_8f);
        struct_Nd.cc = simd_or(tmp103, struct_Nd.cc);
        bytetest_e1 = simd_and(tmp33, tmp63);
        bytetest_a7 = simd_and(tmp14, tmp46);
        bytetest_90_99 = simd_andc(tmp74, tmp5);
        tmp104 = simd_and(tmp86, bytetest_a7);
        carryQ.cq[23] = carryout2carry(pablo_blk_Advance(tmp104, carryQ.get_carry_in(23), tmp105));
        tmp106 = simd_and(tmp105, bytetest_90_99);
        struct_Nd.cc = simd_or(tmp106, struct_Nd.cc);
        bytetest_e1 = simd_and(tmp33, tmp63);
        tmp107 = simd_and(tmp9, tmp90);
        bytetest_aa = simd_and(tmp14, tmp107);
        bytetest_80_89 = simd_andc(tmp29, tmp5);
        tmp108 = simd_and(tmp86, bytetest_aa);
        carryQ.cq[24] = carryout2carry(pablo_blk_Advance(tmp108, carryQ.get_carry_in(24), tmp109));
        tmp110 = simd_and(tmp109, bytetest_80_89);
        struct_Nd.cc = simd_or(tmp110, struct_Nd.cc);
        bytetest_e1 = simd_and(tmp33, tmp63);
        bytetest_aa = simd_and(tmp14, tmp107);
        bytetest_90_99 = simd_andc(tmp74, tmp5);
        tmp111 = simd_and(tmp109, bytetest_90_99);
        struct_Nd.cc = simd_or(tmp111, struct_Nd.cc);
        bytetest_e1 = simd_and(tmp33, tmp63);
        bytetest_ad = simd_and(tmp14, tmp56);
        bytetest_90_99 = simd_andc(tmp74, tmp5);
        tmp112 = simd_and(tmp86, bytetest_ad);
        carryQ.cq[25] = carryout2carry(pablo_blk_Advance(tmp112, carryQ.get_carry_in(25), tmp113));
        tmp114 = simd_and(tmp113, bytetest_90_99);
        struct_Nd.cc = simd_or(tmp114, struct_Nd.cc);
        bytetest_e1 = simd_and(tmp33, tmp63);
        tmp115 = simd_and(tmp26, tmp90);
        bytetest_ae = simd_and(tmp14, tmp115);
        bytetest_b0_b9 = simd_andc(tmp22, tmp5);
        tmp116 = simd_and(tmp86, bytetest_ae);
        carryQ.cq[26] = carryout2carry(pablo_blk_Advance(tmp116, carryQ.get_carry_in(26), tmp117));
        tmp118 = simd_and(tmp117, bytetest_b0_b9);
        struct_Nd.cc = simd_or(tmp118, struct_Nd.cc);
        bytetest_e1 = simd_and(tmp33, tmp63);
        bytetest_b1 = simd_and(tmp22, tmp63);
        bytetest_80_89 = simd_andc(tmp29, tmp5);
        tmp119 = simd_and(tmp86, bytetest_b1);
        carryQ.cq[27] = carryout2carry(pablo_blk_Advance(tmp119, carryQ.get_carry_in(27), tmp120));
        tmp121 = simd_and(tmp120, bytetest_80_89);
        struct_Nd.cc = simd_or(tmp121, struct_Nd.cc);
        bytetest_e1 = simd_and(tmp33, tmp63);
        bytetest_b1 = simd_and(tmp22, tmp63);
        bytetest_90_99 = simd_andc(tmp74, tmp5);
        tmp122 = simd_and(tmp120, bytetest_90_99);
        struct_Nd.cc = simd_or(tmp122, struct_Nd.cc);
        bytetest_ea = simd_and(tmp33, tmp107);
        tmp123 = simd_andc(tmp9, tmp35);
        bytetest_98 = simd_and(tmp74, tmp123);
        bytetest_a0_a9 = simd_andc(tmp14, tmp5);
        tmp124 = simd_and(tmp16, bytetest_ea);
        carryQ.cq[28] = carryout2carry(pablo_blk_Advance(tmp124, carryQ.get_carry_in(28), tmp125));
        tmp126 = simd_and(tmp125, bytetest_98);
        carryQ.cq[29] = carryout2carry(pablo_blk_Advance(tmp126, carryQ.get_carry_in(29), tmp127));
        tmp128 = simd_and(tmp127, bytetest_a0_a9);
        struct_Nd.cc = simd_or(tmp128, struct_Nd.cc);
        bytetest_ea = simd_and(tmp33, tmp107);
        bytetest_a3 = simd_and(tmp14, tmp67);
        bytetest_90_99 = simd_andc(tmp74, tmp5);
        tmp129 = simd_and(tmp125, bytetest_a3);
        carryQ.cq[30] = carryout2carry(pablo_blk_Advance(tmp129, carryQ.get_carry_in(30), tmp130));
        tmp131 = simd_and(tmp130, bytetest_90_99);
        struct_Nd.cc = simd_or(tmp131, struct_Nd.cc);
        bytetest_ea = simd_and(tmp33, tmp107);
        tmp132 = simd_andc(tmp37, tmp35);
        bytetest_a4 = simd_and(tmp14, tmp132);
        bytetest_80_89 = simd_andc(tmp29, tmp5);
        tmp133 = simd_and(tmp125, bytetest_a4);
        carryQ.cq[31] = carryout2carry(pablo_blk_Advance(tmp133, carryQ.get_carry_in(31), tmp134));
        tmp135 = simd_and(tmp134, bytetest_80_89);
        struct_Nd.cc = simd_or(tmp135, struct_Nd.cc);
        bytetest_ea = simd_and(tmp33, tmp107);
        bytetest_a7 = simd_and(tmp14, tmp46);
        bytetest_90_99 = simd_andc(tmp74, tmp5);
        tmp136 = simd_and(tmp125, bytetest_a7);
        carryQ.cq[32] = carryout2carry(pablo_blk_Advance(tmp136, carryQ.get_carry_in(32), tmp137));
        tmp138 = simd_and(tmp137, bytetest_90_99);
        struct_Nd.cc = simd_or(tmp138, struct_Nd.cc);
        bytetest_ea = simd_and(tmp33, tmp107);
        bytetest_a9 = simd_and(tmp14, tmp11);
        bytetest_90_99 = simd_andc(tmp74, tmp5);
        tmp139 = simd_and(tmp125, bytetest_a9);
        carryQ.cq[33] = carryout2carry(pablo_blk_Advance(tmp139, carryQ.get_carry_in(33), tmp140));
        tmp141 = simd_and(tmp140, bytetest_90_99);
        struct_Nd.cc = simd_or(tmp141, struct_Nd.cc);
        bytetest_ea = simd_and(tmp33, tmp107);
        bytetest_af = simd_and(tmp14, tmp27);
        bytetest_b0_b9 = simd_andc(tmp22, tmp5);
        tmp142 = simd_and(tmp125, bytetest_af);
        carryQ.cq[34] = carryout2carry(pablo_blk_Advance(tmp142, carryQ.get_carry_in(34), tmp143));
        tmp144 = simd_and(tmp143, bytetest_b0_b9);
        struct_Nd.cc = simd_or(tmp144, struct_Nd.cc);
        bytetest_ef = simd_and(tmp33, tmp27);
        bytetest_bc = simd_and(tmp22, tmp81);
        bytetest_90_99 = simd_andc(tmp74, tmp5);
        tmp145 = simd_and(tmp16, bytetest_ef);
        carryQ.cq[35] = carryout2carry(pablo_blk_Advance(tmp145, carryQ.get_carry_in(35), tmp146));
        tmp147 = simd_and(tmp146, bytetest_bc);
        carryQ.cq[36] = carryout2carry(pablo_blk_Advance(tmp147, carryQ.get_carry_in(36), tmp148));
        tmp149 = simd_and(tmp148, bytetest_90_99);
        struct_Nd.cc = simd_or(tmp149, struct_Nd.cc);
        tmp150 = simd_and(tmp6, tmp2);
        bytetest_f0 = simd_andc(tmp150, tmp36);
        bytetest_90 = simd_andc(tmp74, tmp36);
        bytetest_92 = simd_and(tmp74, tmp91);
        bytetest_a0_a9 = simd_andc(tmp14, tmp5);
        tmp151 = simd_and(tmp16, bytetest_f0);
        carryQ.cq[37] = carryout2carry(pablo_blk_Advance(tmp151, carryQ.get_carry_in(37), tmp152));
        tmp153 = simd_and(tmp152, bytetest_90);
        carryQ.cq[38] = carryout2carry(pablo_blk_Advance(tmp153, carryQ.get_carry_in(38), tmp154));
        tmp155 = simd_and(tmp154, bytetest_92);
        carryQ.cq[39] = carryout2carry(pablo_blk_Advance(tmp155, carryQ.get_carry_in(39), tmp156));
        tmp157 = simd_and(tmp156, bytetest_a0_a9);
        struct_Nd.cc = simd_or(tmp157, struct_Nd.cc);
        bytetest_f0 = simd_andc(tmp150, tmp36);
        bytetest_91 = simd_and(tmp74, tmp63);
        bytetest_81 = simd_and(tmp29, tmp63);
        bytetest_a6_af = simd_and(tmp14, tmp40);
        tmp158 = simd_and(tmp152, bytetest_91);
        carryQ.cq[40] = carryout2carry(pablo_blk_Advance(tmp158, carryQ.get_carry_in(40), tmp159));
        tmp160 = simd_and(tmp159, bytetest_81);
        carryQ.cq[41] = carryout2carry(pablo_blk_Advance(tmp160, carryQ.get_carry_in(41), tmp161));
        tmp162 = simd_and(tmp161, bytetest_a6_af);
        struct_Nd.cc = simd_or(tmp162, struct_Nd.cc);
        bytetest_f0 = simd_andc(tmp150, tmp36);
        bytetest_91 = simd_and(tmp74, tmp63);
        bytetest_83 = simd_and(tmp29, tmp67);
        bytetest_b0_b9 = simd_andc(tmp22, tmp5);
        tmp163 = simd_and(tmp159, bytetest_83);
        carryQ.cq[42] = carryout2carry(pablo_blk_Advance(tmp163, carryQ.get_carry_in(42), tmp164));
        tmp165 = simd_and(tmp164, bytetest_b0_b9);
        struct_Nd.cc = simd_or(tmp165, struct_Nd.cc);
        bytetest_f0 = simd_andc(tmp150, tmp36);
        bytetest_91 = simd_and(tmp74, tmp63);
        bytetest_84 = simd_and(tmp29, tmp132);
        bytetest_b6_bf = simd_and(tmp22, tmp40);
        tmp166 = simd_and(tmp159, bytetest_84);
        carryQ.cq[43] = carryout2carry(pablo_blk_Advance(tmp166, carryQ.get_carry_in(43), tmp167));
        tmp168 = simd_and(tmp167, bytetest_b6_bf);
        struct_Nd.cc = simd_or(tmp168, struct_Nd.cc);
        bytetest_f0 = simd_andc(tmp150, tmp36);
        bytetest_91 = simd_and(tmp74, tmp63);
        bytetest_87 = simd_and(tmp29, tmp46);
        bytetest_90_99 = simd_andc(tmp74, tmp5);
        tmp169 = simd_and(tmp159, bytetest_87);
        carryQ.cq[44] = carryout2carry(pablo_blk_Advance(tmp169, carryQ.get_carry_in(44), tmp170));
        tmp171 = simd_and(tmp170, bytetest_90_99);
        struct_Nd.cc = simd_or(tmp171, struct_Nd.cc);
        bytetest_f0 = simd_andc(tmp150, tmp36);
        bytetest_91 = simd_and(tmp74, tmp63);
        bytetest_9b = simd_and(tmp74, tmp21);
        bytetest_80_89 = simd_andc(tmp29, tmp5);
        tmp172 = simd_and(tmp159, bytetest_9b);
        carryQ.cq[45] = carryout2carry(pablo_blk_Advance(tmp172, carryQ.get_carry_in(45), tmp173));
        tmp174 = simd_and(tmp173, bytetest_80_89);
        struct_Nd.cc = simd_or(tmp174, struct_Nd.cc);
        bytetest_f0 = simd_andc(tmp150, tmp36);
        bytetest_9d = simd_and(tmp74, tmp56);
        bytetest_9f = simd_and(tmp74, tmp27);
        tmp175 = simd_and(tmp26, basis_bits.bit_6);
        tmp176 = simd_or(basis_bits.bit_3, tmp175);
        tmp177 = simd_or(basis_bits.bit_2, tmp176);
        bytetest_8e_bf = simd_and(tmp12, tmp177);
        tmp178 = simd_and(tmp152, bytetest_9d);
        carryQ.cq[46] = carryout2carry(pablo_blk_Advance(tmp178, carryQ.get_carry_in(46), tmp179));
        tmp180 = simd_and(tmp179, bytetest_9f);
        carryQ.cq[47] = carryout2carry(pablo_blk_Advance(tmp180, carryQ.get_carry_in(47), tmp181));
        tmp182 = simd_and(tmp181, bytetest_8e_bf);
        struct_Nd.cc = simd_or(tmp182, struct_Nd.cc);
        carryQ.CarryQ_Adjust(48);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Nd & struct_Nd, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, bytetest_30_39, tmp6, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, bytetest_d9, tmp12, tmp13, tmp14, bytetest_a0_a9, tmp15;
		BitBlock tmp16, tmp17, tmp18, tmp19, tmp20, tmp21, bytetest_db, tmp22;
		BitBlock bytetest_b0_b9, tmp23, tmp24, tmp25, tmp26, tmp27, bytetest_df, tmp28;
		BitBlock tmp29, bytetest_80_89, tmp30, tmp31, tmp32, tmp33, tmp34, tmp35;
		BitBlock tmp36, bytetest_e0, tmp37, tmp38, bytetest_a5, tmp39, tmp40;
		BitBlock bytetest_a6_af, tmp41, tmp42, tmp43, tmp44, tmp45, tmp46, bytetest_a7;
		BitBlock tmp47, tmp48, tmp49, bytetest_a9, tmp50, tmp51, tmp52, bytetest_ab;
		BitBlock tmp53, tmp54, tmp55, tmp56, bytetest_ad, tmp57, tmp58, tmp59;
		BitBlock bytetest_af, tmp60, tmp61, tmp62, tmp63, bytetest_b1, tmp64, tmp65;
		BitBlock tmp66, tmp67, bytetest_b3, tmp68, tmp69, tmp70, bytetest_b5, tmp71;
		BitBlock tmp72, tmp73, bytetest_b9, tmp74, bytetest_90_99, tmp75, tmp76, tmp77;
		BitBlock bytetest_bb, tmp78, tmp79, tmp80, tmp81, bytetest_bc, tmp82, tmp83;
		BitBlock tmp84, bytetest_e1, bytetest_81, tmp85, tmp86, tmp87, tmp88, tmp89;
		BitBlock tmp90, tmp91, bytetest_82, tmp92, tmp93, tmp94, bytetest_9f, tmp95;
		BitBlock tmp96, tmp97, bytetest_a0, tmp98, tmp99, tmp100, bytetest_86_8f;
		BitBlock tmp101, tmp102, tmp103, tmp104, tmp105, tmp106, tmp107, bytetest_aa;
		BitBlock tmp108, tmp109, tmp110, tmp111, tmp112, tmp113, tmp114, tmp115;
		BitBlock bytetest_ae, tmp116, tmp117, tmp118, tmp119, tmp120, tmp121, tmp122;
		BitBlock bytetest_ea, tmp123, bytetest_98, tmp124, tmp125, tmp126, tmp127;
		BitBlock tmp128, bytetest_a3, tmp129, tmp130, tmp131, tmp132, bytetest_a4;
		BitBlock tmp133, tmp134, tmp135, tmp136, tmp137, tmp138, tmp139, tmp140;
		BitBlock tmp141, tmp142, tmp143, tmp144, bytetest_ef, tmp145, tmp146, tmp147;
		BitBlock tmp148, tmp149, tmp150, bytetest_f0, bytetest_90, bytetest_92, tmp151;
		BitBlock tmp152, tmp153, tmp154, tmp155, tmp156, tmp157, bytetest_91, tmp158;
		BitBlock tmp159, tmp160, tmp161, tmp162, bytetest_83, tmp163, tmp164, tmp165;
		BitBlock bytetest_84, bytetest_b6_bf, tmp166, tmp167, tmp168, bytetest_87;
		BitBlock tmp169, tmp170, tmp171, bytetest_9b, tmp172, tmp173, tmp174;
		BitBlock bytetest_9d, tmp175, tmp176, tmp177, bytetest_8e_bf, tmp178, tmp179;
		BitBlock tmp180, tmp181, tmp182;




        struct_Nd.cc = simd<1>::constant<0>();
        tmp1 = simd_or(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp2, tmp1);
        tmp4 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
        tmp5 = simd_and(basis_bits.bit_4, tmp4);
        bytetest_30_39 = simd_andc(tmp3, tmp5);
        struct_Nd.cc = simd_or(bytetest_30_39, struct_Nd.cc);
        tmp6 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp7 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp8 = simd_and(tmp6, tmp7);
        tmp9 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp10 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp11 = simd_and(tmp9, tmp10);
        bytetest_d9 = simd_and(tmp8, tmp11);
        tmp12 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp13 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp14 = simd_and(tmp12, tmp13);
        bytetest_a0_a9 = simd_andc(tmp14, tmp5);
        tmp15 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp15, carryQ.get_carry_in(0), tmp16));
        tmp17 = simd_and(tmp16, bytetest_d9);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp17, carryQ.get_carry_in(1), tmp18));
        tmp19 = simd_and(tmp18, bytetest_a0_a9);
        struct_Nd.cc = simd_or(tmp19, struct_Nd.cc);
        tmp20 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp21 = simd_and(tmp9, tmp20);
        bytetest_db = simd_and(tmp8, tmp21);
        tmp22 = simd_and(tmp12, tmp2);
        bytetest_b0_b9 = simd_andc(tmp22, tmp5);
        tmp23 = simd_and(tmp16, bytetest_db);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp23, carryQ.get_carry_in(2), tmp24));
        tmp25 = simd_and(tmp24, bytetest_b0_b9);
        struct_Nd.cc = simd_or(tmp25, struct_Nd.cc);
        tmp26 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp27 = simd_and(tmp26, tmp20);
        bytetest_df = simd_and(tmp8, tmp27);
        tmp28 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp29 = simd_andc(tmp12, tmp28);
        bytetest_80_89 = simd_andc(tmp29, tmp5);
        tmp30 = simd_and(tmp16, bytetest_df);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp30, carryQ.get_carry_in(3), tmp31));
        tmp32 = simd_and(tmp31, bytetest_80_89);
        struct_Nd.cc = simd_or(tmp32, struct_Nd.cc);
        tmp33 = simd_and(tmp6, tmp13);
        tmp34 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp35 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp36 = simd_or(tmp34, tmp35);
        bytetest_e0 = simd_andc(tmp33, tmp36);
        tmp37 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp38 = simd_and(tmp37, tmp10);
        bytetest_a5 = simd_and(tmp14, tmp38);
        tmp39 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp40 = simd_or(basis_bits.bit_4, tmp39);
        bytetest_a6_af = simd_and(tmp14, tmp40);
        tmp41 = simd_and(tmp16, bytetest_e0);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp41, carryQ.get_carry_in(4), tmp42));
        tmp43 = simd_and(tmp42, bytetest_a5);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp43, carryQ.get_carry_in(5), tmp44));
        tmp45 = simd_and(tmp44, bytetest_a6_af);
        struct_Nd.cc = simd_or(tmp45, struct_Nd.cc);
        bytetest_e0 = simd_andc(tmp33, tmp36);
        tmp46 = simd_and(tmp37, tmp20);
        bytetest_a7 = simd_and(tmp14, tmp46);
        bytetest_a6_af = simd_and(tmp14, tmp40);
        tmp47 = simd_and(tmp42, bytetest_a7);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp47, carryQ.get_carry_in(6), tmp48));
        tmp49 = simd_and(tmp48, bytetest_a6_af);
        struct_Nd.cc = simd_or(tmp49, struct_Nd.cc);
        bytetest_e0 = simd_andc(tmp33, tmp36);
        bytetest_a9 = simd_and(tmp14, tmp11);
        bytetest_a6_af = simd_and(tmp14, tmp40);
        tmp50 = simd_and(tmp42, bytetest_a9);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp50, carryQ.get_carry_in(7), tmp51));
        tmp52 = simd_and(tmp51, bytetest_a6_af);
        struct_Nd.cc = simd_or(tmp52, struct_Nd.cc);
        bytetest_e0 = simd_andc(tmp33, tmp36);
        bytetest_ab = simd_and(tmp14, tmp21);
        bytetest_a6_af = simd_and(tmp14, tmp40);
        tmp53 = simd_and(tmp42, bytetest_ab);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(tmp53, carryQ.get_carry_in(8), tmp54));
        tmp55 = simd_and(tmp54, bytetest_a6_af);
        struct_Nd.cc = simd_or(tmp55, struct_Nd.cc);
        bytetest_e0 = simd_andc(tmp33, tmp36);
        tmp56 = simd_and(tmp26, tmp10);
        bytetest_ad = simd_and(tmp14, tmp56);
        bytetest_a6_af = simd_and(tmp14, tmp40);
        tmp57 = simd_and(tmp42, bytetest_ad);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(tmp57, carryQ.get_carry_in(9), tmp58));
        tmp59 = simd_and(tmp58, bytetest_a6_af);
        struct_Nd.cc = simd_or(tmp59, struct_Nd.cc);
        bytetest_e0 = simd_andc(tmp33, tmp36);
        bytetest_af = simd_and(tmp14, tmp27);
        bytetest_a6_af = simd_and(tmp14, tmp40);
        tmp60 = simd_and(tmp42, bytetest_af);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(tmp60, carryQ.get_carry_in(10), tmp61));
        tmp62 = simd_and(tmp61, bytetest_a6_af);
        struct_Nd.cc = simd_or(tmp62, struct_Nd.cc);
        bytetest_e0 = simd_andc(tmp33, tmp36);
        tmp63 = simd_andc(tmp10, tmp34);
        bytetest_b1 = simd_and(tmp22, tmp63);
        bytetest_a6_af = simd_and(tmp14, tmp40);
        tmp64 = simd_and(tmp42, bytetest_b1);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(tmp64, carryQ.get_carry_in(11), tmp65));
        tmp66 = simd_and(tmp65, bytetest_a6_af);
        struct_Nd.cc = simd_or(tmp66, struct_Nd.cc);
        bytetest_e0 = simd_andc(tmp33, tmp36);
        tmp67 = simd_andc(tmp20, tmp34);
        bytetest_b3 = simd_and(tmp22, tmp67);
        bytetest_a6_af = simd_and(tmp14, tmp40);
        tmp68 = simd_and(tmp42, bytetest_b3);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(tmp68, carryQ.get_carry_in(12), tmp69));
        tmp70 = simd_and(tmp69, bytetest_a6_af);
        struct_Nd.cc = simd_or(tmp70, struct_Nd.cc);
        bytetest_e0 = simd_andc(tmp33, tmp36);
        bytetest_b5 = simd_and(tmp22, tmp38);
        bytetest_a6_af = simd_and(tmp14, tmp40);
        tmp71 = simd_and(tmp42, bytetest_b5);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(tmp71, carryQ.get_carry_in(13), tmp72));
        tmp73 = simd_and(tmp72, bytetest_a6_af);
        struct_Nd.cc = simd_or(tmp73, struct_Nd.cc);
        bytetest_e0 = simd_andc(tmp33, tmp36);
        bytetest_b9 = simd_and(tmp22, tmp11);
        tmp74 = simd_and(tmp12, tmp7);
        bytetest_90_99 = simd_andc(tmp74, tmp5);
        tmp75 = simd_and(tmp42, bytetest_b9);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(tmp75, carryQ.get_carry_in(14), tmp76));
        tmp77 = simd_and(tmp76, bytetest_90_99);
        struct_Nd.cc = simd_or(tmp77, struct_Nd.cc);
        bytetest_e0 = simd_andc(tmp33, tmp36);
        bytetest_bb = simd_and(tmp22, tmp21);
        bytetest_90_99 = simd_andc(tmp74, tmp5);
        tmp78 = simd_and(tmp42, bytetest_bb);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(tmp78, carryQ.get_carry_in(15), tmp79));
        tmp80 = simd_and(tmp79, bytetest_90_99);
        struct_Nd.cc = simd_or(tmp80, struct_Nd.cc);
        bytetest_e0 = simd_andc(tmp33, tmp36);
        tmp81 = simd_andc(tmp26, tmp35);
        bytetest_bc = simd_and(tmp22, tmp81);
        bytetest_a0_a9 = simd_andc(tmp14, tmp5);
        tmp82 = simd_and(tmp42, bytetest_bc);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(tmp82, carryQ.get_carry_in(16), tmp83));
        tmp84 = simd_and(tmp83, bytetest_a0_a9);
        struct_Nd.cc = simd_or(tmp84, struct_Nd.cc);
        bytetest_e1 = simd_and(tmp33, tmp63);
        bytetest_81 = simd_and(tmp29, tmp63);
        bytetest_80_89 = simd_andc(tmp29, tmp5);
        tmp85 = simd_and(tmp16, bytetest_e1);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(tmp85, carryQ.get_carry_in(17), tmp86));
        tmp87 = simd_and(tmp86, bytetest_81);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(tmp87, carryQ.get_carry_in(18), tmp88));
        tmp89 = simd_and(tmp88, bytetest_80_89);
        struct_Nd.cc = simd_or(tmp89, struct_Nd.cc);
        bytetest_e1 = simd_and(tmp33, tmp63);
        tmp90 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp91 = simd_andc(tmp90, tmp34);
        bytetest_82 = simd_and(tmp29, tmp91);
        bytetest_90_99 = simd_andc(tmp74, tmp5);
        tmp92 = simd_and(tmp86, bytetest_82);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(tmp92, carryQ.get_carry_in(19), tmp93));
        tmp94 = simd_and(tmp93, bytetest_90_99);
        struct_Nd.cc = simd_or(tmp94, struct_Nd.cc);
        bytetest_e1 = simd_and(tmp33, tmp63);
        bytetest_9f = simd_and(tmp74, tmp27);
        bytetest_a0_a9 = simd_andc(tmp14, tmp5);
        tmp95 = simd_and(tmp86, bytetest_9f);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(tmp95, carryQ.get_carry_in(20), tmp96));
        tmp97 = simd_and(tmp96, bytetest_a0_a9);
        struct_Nd.cc = simd_or(tmp97, struct_Nd.cc);
        bytetest_e1 = simd_and(tmp33, tmp63);
        bytetest_a0 = simd_andc(tmp14, tmp36);
        bytetest_90_99 = simd_andc(tmp74, tmp5);
        tmp98 = simd_and(tmp86, bytetest_a0);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(tmp98, carryQ.get_carry_in(21), tmp99));
        tmp100 = simd_and(tmp99, bytetest_90_99);
        struct_Nd.cc = simd_or(tmp100, struct_Nd.cc);
        bytetest_e1 = simd_and(tmp33, tmp63);
        bytetest_a5 = simd_and(tmp14, tmp38);
        bytetest_86_8f = simd_and(tmp29, tmp40);
        tmp101 = simd_and(tmp86, bytetest_a5);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(tmp101, carryQ.get_carry_in(22), tmp102));
        tmp103 = simd_and(tmp102, bytetest_86_8f);
        struct_Nd.cc = simd_or(tmp103, struct_Nd.cc);
        bytetest_e1 = simd_and(tmp33, tmp63);
        bytetest_a7 = simd_and(tmp14, tmp46);
        bytetest_90_99 = simd_andc(tmp74, tmp5);
        tmp104 = simd_and(tmp86, bytetest_a7);
        carryQ.cq[23] = carryout2carry(pablo_blk_Advance(tmp104, carryQ.get_carry_in(23), tmp105));
        tmp106 = simd_and(tmp105, bytetest_90_99);
        struct_Nd.cc = simd_or(tmp106, struct_Nd.cc);
        bytetest_e1 = simd_and(tmp33, tmp63);
        tmp107 = simd_and(tmp9, tmp90);
        bytetest_aa = simd_and(tmp14, tmp107);
        bytetest_80_89 = simd_andc(tmp29, tmp5);
        tmp108 = simd_and(tmp86, bytetest_aa);
        carryQ.cq[24] = carryout2carry(pablo_blk_Advance(tmp108, carryQ.get_carry_in(24), tmp109));
        tmp110 = simd_and(tmp109, bytetest_80_89);
        struct_Nd.cc = simd_or(tmp110, struct_Nd.cc);
        bytetest_e1 = simd_and(tmp33, tmp63);
        bytetest_aa = simd_and(tmp14, tmp107);
        bytetest_90_99 = simd_andc(tmp74, tmp5);
        tmp111 = simd_and(tmp109, bytetest_90_99);
        struct_Nd.cc = simd_or(tmp111, struct_Nd.cc);
        bytetest_e1 = simd_and(tmp33, tmp63);
        bytetest_ad = simd_and(tmp14, tmp56);
        bytetest_90_99 = simd_andc(tmp74, tmp5);
        tmp112 = simd_and(tmp86, bytetest_ad);
        carryQ.cq[25] = carryout2carry(pablo_blk_Advance(tmp112, carryQ.get_carry_in(25), tmp113));
        tmp114 = simd_and(tmp113, bytetest_90_99);
        struct_Nd.cc = simd_or(tmp114, struct_Nd.cc);
        bytetest_e1 = simd_and(tmp33, tmp63);
        tmp115 = simd_and(tmp26, tmp90);
        bytetest_ae = simd_and(tmp14, tmp115);
        bytetest_b0_b9 = simd_andc(tmp22, tmp5);
        tmp116 = simd_and(tmp86, bytetest_ae);
        carryQ.cq[26] = carryout2carry(pablo_blk_Advance(tmp116, carryQ.get_carry_in(26), tmp117));
        tmp118 = simd_and(tmp117, bytetest_b0_b9);
        struct_Nd.cc = simd_or(tmp118, struct_Nd.cc);
        bytetest_e1 = simd_and(tmp33, tmp63);
        bytetest_b1 = simd_and(tmp22, tmp63);
        bytetest_80_89 = simd_andc(tmp29, tmp5);
        tmp119 = simd_and(tmp86, bytetest_b1);
        carryQ.cq[27] = carryout2carry(pablo_blk_Advance(tmp119, carryQ.get_carry_in(27), tmp120));
        tmp121 = simd_and(tmp120, bytetest_80_89);
        struct_Nd.cc = simd_or(tmp121, struct_Nd.cc);
        bytetest_e1 = simd_and(tmp33, tmp63);
        bytetest_b1 = simd_and(tmp22, tmp63);
        bytetest_90_99 = simd_andc(tmp74, tmp5);
        tmp122 = simd_and(tmp120, bytetest_90_99);
        struct_Nd.cc = simd_or(tmp122, struct_Nd.cc);
        bytetest_ea = simd_and(tmp33, tmp107);
        tmp123 = simd_andc(tmp9, tmp35);
        bytetest_98 = simd_and(tmp74, tmp123);
        bytetest_a0_a9 = simd_andc(tmp14, tmp5);
        tmp124 = simd_and(tmp16, bytetest_ea);
        carryQ.cq[28] = carryout2carry(pablo_blk_Advance(tmp124, carryQ.get_carry_in(28), tmp125));
        tmp126 = simd_and(tmp125, bytetest_98);
        carryQ.cq[29] = carryout2carry(pablo_blk_Advance(tmp126, carryQ.get_carry_in(29), tmp127));
        tmp128 = simd_and(tmp127, bytetest_a0_a9);
        struct_Nd.cc = simd_or(tmp128, struct_Nd.cc);
        bytetest_ea = simd_and(tmp33, tmp107);
        bytetest_a3 = simd_and(tmp14, tmp67);
        bytetest_90_99 = simd_andc(tmp74, tmp5);
        tmp129 = simd_and(tmp125, bytetest_a3);
        carryQ.cq[30] = carryout2carry(pablo_blk_Advance(tmp129, carryQ.get_carry_in(30), tmp130));
        tmp131 = simd_and(tmp130, bytetest_90_99);
        struct_Nd.cc = simd_or(tmp131, struct_Nd.cc);
        bytetest_ea = simd_and(tmp33, tmp107);
        tmp132 = simd_andc(tmp37, tmp35);
        bytetest_a4 = simd_and(tmp14, tmp132);
        bytetest_80_89 = simd_andc(tmp29, tmp5);
        tmp133 = simd_and(tmp125, bytetest_a4);
        carryQ.cq[31] = carryout2carry(pablo_blk_Advance(tmp133, carryQ.get_carry_in(31), tmp134));
        tmp135 = simd_and(tmp134, bytetest_80_89);
        struct_Nd.cc = simd_or(tmp135, struct_Nd.cc);
        bytetest_ea = simd_and(tmp33, tmp107);
        bytetest_a7 = simd_and(tmp14, tmp46);
        bytetest_90_99 = simd_andc(tmp74, tmp5);
        tmp136 = simd_and(tmp125, bytetest_a7);
        carryQ.cq[32] = carryout2carry(pablo_blk_Advance(tmp136, carryQ.get_carry_in(32), tmp137));
        tmp138 = simd_and(tmp137, bytetest_90_99);
        struct_Nd.cc = simd_or(tmp138, struct_Nd.cc);
        bytetest_ea = simd_and(tmp33, tmp107);
        bytetest_a9 = simd_and(tmp14, tmp11);
        bytetest_90_99 = simd_andc(tmp74, tmp5);
        tmp139 = simd_and(tmp125, bytetest_a9);
        carryQ.cq[33] = carryout2carry(pablo_blk_Advance(tmp139, carryQ.get_carry_in(33), tmp140));
        tmp141 = simd_and(tmp140, bytetest_90_99);
        struct_Nd.cc = simd_or(tmp141, struct_Nd.cc);
        bytetest_ea = simd_and(tmp33, tmp107);
        bytetest_af = simd_and(tmp14, tmp27);
        bytetest_b0_b9 = simd_andc(tmp22, tmp5);
        tmp142 = simd_and(tmp125, bytetest_af);
        carryQ.cq[34] = carryout2carry(pablo_blk_Advance(tmp142, carryQ.get_carry_in(34), tmp143));
        tmp144 = simd_and(tmp143, bytetest_b0_b9);
        struct_Nd.cc = simd_or(tmp144, struct_Nd.cc);
        bytetest_ef = simd_and(tmp33, tmp27);
        bytetest_bc = simd_and(tmp22, tmp81);
        bytetest_90_99 = simd_andc(tmp74, tmp5);
        tmp145 = simd_and(tmp16, bytetest_ef);
        carryQ.cq[35] = carryout2carry(pablo_blk_Advance(tmp145, carryQ.get_carry_in(35), tmp146));
        tmp147 = simd_and(tmp146, bytetest_bc);
        carryQ.cq[36] = carryout2carry(pablo_blk_Advance(tmp147, carryQ.get_carry_in(36), tmp148));
        tmp149 = simd_and(tmp148, bytetest_90_99);
        struct_Nd.cc = simd_or(tmp149, struct_Nd.cc);
        tmp150 = simd_and(tmp6, tmp2);
        bytetest_f0 = simd_andc(tmp150, tmp36);
        bytetest_90 = simd_andc(tmp74, tmp36);
        bytetest_92 = simd_and(tmp74, tmp91);
        bytetest_a0_a9 = simd_andc(tmp14, tmp5);
        tmp151 = simd_and(tmp16, bytetest_f0);
        carryQ.cq[37] = carryout2carry(pablo_blk_Advance(tmp151, carryQ.get_carry_in(37), tmp152));
        tmp153 = simd_and(tmp152, bytetest_90);
        carryQ.cq[38] = carryout2carry(pablo_blk_Advance(tmp153, carryQ.get_carry_in(38), tmp154));
        tmp155 = simd_and(tmp154, bytetest_92);
        carryQ.cq[39] = carryout2carry(pablo_blk_Advance(tmp155, carryQ.get_carry_in(39), tmp156));
        tmp157 = simd_and(tmp156, bytetest_a0_a9);
        struct_Nd.cc = simd_or(tmp157, struct_Nd.cc);
        bytetest_f0 = simd_andc(tmp150, tmp36);
        bytetest_91 = simd_and(tmp74, tmp63);
        bytetest_81 = simd_and(tmp29, tmp63);
        bytetest_a6_af = simd_and(tmp14, tmp40);
        tmp158 = simd_and(tmp152, bytetest_91);
        carryQ.cq[40] = carryout2carry(pablo_blk_Advance(tmp158, carryQ.get_carry_in(40), tmp159));
        tmp160 = simd_and(tmp159, bytetest_81);
        carryQ.cq[41] = carryout2carry(pablo_blk_Advance(tmp160, carryQ.get_carry_in(41), tmp161));
        tmp162 = simd_and(tmp161, bytetest_a6_af);
        struct_Nd.cc = simd_or(tmp162, struct_Nd.cc);
        bytetest_f0 = simd_andc(tmp150, tmp36);
        bytetest_91 = simd_and(tmp74, tmp63);
        bytetest_83 = simd_and(tmp29, tmp67);
        bytetest_b0_b9 = simd_andc(tmp22, tmp5);
        tmp163 = simd_and(tmp159, bytetest_83);
        carryQ.cq[42] = carryout2carry(pablo_blk_Advance(tmp163, carryQ.get_carry_in(42), tmp164));
        tmp165 = simd_and(tmp164, bytetest_b0_b9);
        struct_Nd.cc = simd_or(tmp165, struct_Nd.cc);
        bytetest_f0 = simd_andc(tmp150, tmp36);
        bytetest_91 = simd_and(tmp74, tmp63);
        bytetest_84 = simd_and(tmp29, tmp132);
        bytetest_b6_bf = simd_and(tmp22, tmp40);
        tmp166 = simd_and(tmp159, bytetest_84);
        carryQ.cq[43] = carryout2carry(pablo_blk_Advance(tmp166, carryQ.get_carry_in(43), tmp167));
        tmp168 = simd_and(tmp167, bytetest_b6_bf);
        struct_Nd.cc = simd_or(tmp168, struct_Nd.cc);
        bytetest_f0 = simd_andc(tmp150, tmp36);
        bytetest_91 = simd_and(tmp74, tmp63);
        bytetest_87 = simd_and(tmp29, tmp46);
        bytetest_90_99 = simd_andc(tmp74, tmp5);
        tmp169 = simd_and(tmp159, bytetest_87);
        carryQ.cq[44] = carryout2carry(pablo_blk_Advance(tmp169, carryQ.get_carry_in(44), tmp170));
        tmp171 = simd_and(tmp170, bytetest_90_99);
        struct_Nd.cc = simd_or(tmp171, struct_Nd.cc);
        bytetest_f0 = simd_andc(tmp150, tmp36);
        bytetest_91 = simd_and(tmp74, tmp63);
        bytetest_9b = simd_and(tmp74, tmp21);
        bytetest_80_89 = simd_andc(tmp29, tmp5);
        tmp172 = simd_and(tmp159, bytetest_9b);
        carryQ.cq[45] = carryout2carry(pablo_blk_Advance(tmp172, carryQ.get_carry_in(45), tmp173));
        tmp174 = simd_and(tmp173, bytetest_80_89);
        struct_Nd.cc = simd_or(tmp174, struct_Nd.cc);
        bytetest_f0 = simd_andc(tmp150, tmp36);
        bytetest_9d = simd_and(tmp74, tmp56);
        bytetest_9f = simd_and(tmp74, tmp27);
        tmp175 = simd_and(tmp26, basis_bits.bit_6);
        tmp176 = simd_or(basis_bits.bit_3, tmp175);
        tmp177 = simd_or(basis_bits.bit_2, tmp176);
        bytetest_8e_bf = simd_and(tmp12, tmp177);
        tmp178 = simd_and(tmp152, bytetest_9d);
        carryQ.cq[46] = carryout2carry(pablo_blk_Advance(tmp178, carryQ.get_carry_in(46), tmp179));
        tmp180 = simd_and(tmp179, bytetest_9f);
        carryQ.cq[47] = carryout2carry(pablo_blk_Advance(tmp180, carryQ.get_carry_in(47), tmp181));
        tmp182 = simd_and(tmp181, bytetest_8e_bf);
        struct_Nd.cc = simd_or(tmp182, struct_Nd.cc);
  }
  CarryArray<48, 0> carryQ;
  };

  struct Pc {
  Pc() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Pc & struct_Pc) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_5f_5f, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, tmp12, bytetest_e2, tmp13, tmp14, tmp15, tmp16, tmp17;
		BitBlock bytetest_81, tmp18, tmp19, bytetest_80_80, tmp20, tmp21, tmp22, tmp23;
		BitBlock tmp24, tmp25, tmp26, bytetest_80, tmp27, tmp28, bytetest_bf_bf, tmp29;
		BitBlock tmp30, tmp31, tmp32, tmp33, tmp34, tmp35, bytetest_94_94, tmp36;
		BitBlock bytetest_ef, tmp37, tmp38, bytetest_b8, tmp39, tmp40, tmp41;
		BitBlock bytetest_b3_b4, tmp42, tmp43, tmp44, tmp45, tmp46, tmp47, bytetest_b9;
		BitBlock tmp48, bytetest_8d_8f, tmp49, tmp50, tmp51, tmp52, bytetest_bc, tmp53;
		BitBlock tmp54, tmp55;




        struct_Pc.cc = simd<1>::constant<0>();
        tmp1 = simd_andc(basis_bits.bit_1, basis_bits.bit_0);
        tmp2 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp3 = simd_and(tmp1, tmp2);
        tmp4 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_and(tmp4, tmp5);
        bytetest_5f_5f = simd_and(tmp3, tmp6);
        struct_Pc.cc = simd_or(bytetest_5f_5f, struct_Pc.cc);
        tmp7 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp11 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp12 = simd_andc(tmp11, tmp10);
        bytetest_e2 = simd_and(tmp9, tmp12);
        tmp13 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp14 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp15 = simd_andc(tmp13, tmp14);
        tmp16 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp17 = simd_andc(tmp16, tmp10);
        bytetest_81 = simd_and(tmp15, tmp17);
        tmp18 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp19 = simd_or(tmp10, tmp18);
        bytetest_80_80 = simd_andc(tmp15, tmp19);
        tmp20 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp20, carryQ.get_carry_in(0), tmp21));
        tmp22 = simd_and(tmp21, bytetest_e2);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp22, carryQ.get_carry_in(1), tmp23));
        tmp24 = simd_and(tmp23, bytetest_81);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp24, carryQ.get_carry_in(2), tmp25));
        tmp26 = simd_and(tmp25, bytetest_80_80);
        bytetest_80 = simd_andc(tmp15, tmp19);
        tmp27 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp28 = simd_and(tmp13, tmp27);
        bytetest_bf_bf = simd_and(tmp28, tmp6);
        tmp29 = simd_and(tmp23, bytetest_80);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp29, carryQ.get_carry_in(3), tmp30));
        tmp31 = simd_and(tmp30, bytetest_bf_bf);
        tmp32 = simd_or(tmp31, tmp26);
        struct_Pc.cc = simd_or(tmp32, struct_Pc.cc);
        bytetest_e2 = simd_and(tmp9, tmp12);
        bytetest_81 = simd_and(tmp15, tmp17);
        tmp33 = simd_and(tmp13, tmp2);
        tmp34 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp35 = simd_andc(tmp34, tmp18);
        bytetest_94_94 = simd_and(tmp33, tmp35);
        tmp36 = simd_and(tmp25, bytetest_94_94);
        struct_Pc.cc = simd_or(tmp36, struct_Pc.cc);
        bytetest_ef = simd_and(tmp9, tmp6);
        tmp37 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp38 = simd_andc(tmp37, tmp18);
        bytetest_b8 = simd_and(tmp28, tmp38);
        tmp39 = simd_andc(tmp28, basis_bits.bit_4);
        tmp40 = simd_not(tmp18);
        tmp41 = simd_or(simd_and(basis_bits.bit_5, tmp40), simd_andc(tmp5, basis_bits.bit_5));
        bytetest_b3_b4 = simd_and(tmp39, tmp41);
        tmp42 = simd_and(tmp21, bytetest_ef);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp42, carryQ.get_carry_in(4), tmp43));
        tmp44 = simd_and(tmp43, bytetest_b8);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp44, carryQ.get_carry_in(5), tmp45));
        tmp46 = simd_and(tmp45, bytetest_b3_b4);
        struct_Pc.cc = simd_or(tmp46, struct_Pc.cc);
        bytetest_ef = simd_and(tmp9, tmp6);
        tmp47 = simd_and(tmp37, tmp16);
        bytetest_b9 = simd_and(tmp28, tmp47);
        tmp48 = simd_and(tmp15, tmp4);
        bytetest_8d_8f = simd_and(tmp48, tmp18);
        tmp49 = simd_and(tmp43, bytetest_b9);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp49, carryQ.get_carry_in(6), tmp50));
        tmp51 = simd_and(tmp50, bytetest_8d_8f);
        struct_Pc.cc = simd_or(tmp51, struct_Pc.cc);
        bytetest_ef = simd_and(tmp9, tmp6);
        tmp52 = simd_andc(tmp4, tmp18);
        bytetest_bc = simd_and(tmp28, tmp52);
        bytetest_bf_bf = simd_and(tmp28, tmp6);
        tmp53 = simd_and(tmp43, bytetest_bc);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp53, carryQ.get_carry_in(7), tmp54));
        tmp55 = simd_and(tmp54, bytetest_bf_bf);
        struct_Pc.cc = simd_or(tmp55, struct_Pc.cc);
        carryQ.CarryQ_Adjust(8);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Pc & struct_Pc, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_5f_5f, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, tmp12, bytetest_e2, tmp13, tmp14, tmp15, tmp16, tmp17;
		BitBlock bytetest_81, tmp18, tmp19, bytetest_80_80, tmp20, tmp21, tmp22, tmp23;
		BitBlock tmp24, tmp25, tmp26, bytetest_80, tmp27, tmp28, bytetest_bf_bf, tmp29;
		BitBlock tmp30, tmp31, tmp32, tmp33, tmp34, tmp35, bytetest_94_94, tmp36;
		BitBlock bytetest_ef, tmp37, tmp38, bytetest_b8, tmp39, tmp40, tmp41;
		BitBlock bytetest_b3_b4, tmp42, tmp43, tmp44, tmp45, tmp46, tmp47, bytetest_b9;
		BitBlock tmp48, bytetest_8d_8f, tmp49, tmp50, tmp51, tmp52, bytetest_bc, tmp53;
		BitBlock tmp54, tmp55;




        struct_Pc.cc = simd<1>::constant<0>();
        tmp1 = simd_andc(basis_bits.bit_1, basis_bits.bit_0);
        tmp2 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp3 = simd_and(tmp1, tmp2);
        tmp4 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_and(tmp4, tmp5);
        bytetest_5f_5f = simd_and(tmp3, tmp6);
        struct_Pc.cc = simd_or(bytetest_5f_5f, struct_Pc.cc);
        tmp7 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp11 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp12 = simd_andc(tmp11, tmp10);
        bytetest_e2 = simd_and(tmp9, tmp12);
        tmp13 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp14 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp15 = simd_andc(tmp13, tmp14);
        tmp16 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp17 = simd_andc(tmp16, tmp10);
        bytetest_81 = simd_and(tmp15, tmp17);
        tmp18 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp19 = simd_or(tmp10, tmp18);
        bytetest_80_80 = simd_andc(tmp15, tmp19);
        tmp20 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp20, carryQ.get_carry_in(0), tmp21));
        tmp22 = simd_and(tmp21, bytetest_e2);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp22, carryQ.get_carry_in(1), tmp23));
        tmp24 = simd_and(tmp23, bytetest_81);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp24, carryQ.get_carry_in(2), tmp25));
        tmp26 = simd_and(tmp25, bytetest_80_80);
        bytetest_80 = simd_andc(tmp15, tmp19);
        tmp27 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp28 = simd_and(tmp13, tmp27);
        bytetest_bf_bf = simd_and(tmp28, tmp6);
        tmp29 = simd_and(tmp23, bytetest_80);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp29, carryQ.get_carry_in(3), tmp30));
        tmp31 = simd_and(tmp30, bytetest_bf_bf);
        tmp32 = simd_or(tmp31, tmp26);
        struct_Pc.cc = simd_or(tmp32, struct_Pc.cc);
        bytetest_e2 = simd_and(tmp9, tmp12);
        bytetest_81 = simd_and(tmp15, tmp17);
        tmp33 = simd_and(tmp13, tmp2);
        tmp34 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp35 = simd_andc(tmp34, tmp18);
        bytetest_94_94 = simd_and(tmp33, tmp35);
        tmp36 = simd_and(tmp25, bytetest_94_94);
        struct_Pc.cc = simd_or(tmp36, struct_Pc.cc);
        bytetest_ef = simd_and(tmp9, tmp6);
        tmp37 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp38 = simd_andc(tmp37, tmp18);
        bytetest_b8 = simd_and(tmp28, tmp38);
        tmp39 = simd_andc(tmp28, basis_bits.bit_4);
        tmp40 = simd_not(tmp18);
        tmp41 = simd_or(simd_and(basis_bits.bit_5, tmp40), simd_andc(tmp5, basis_bits.bit_5));
        bytetest_b3_b4 = simd_and(tmp39, tmp41);
        tmp42 = simd_and(tmp21, bytetest_ef);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp42, carryQ.get_carry_in(4), tmp43));
        tmp44 = simd_and(tmp43, bytetest_b8);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp44, carryQ.get_carry_in(5), tmp45));
        tmp46 = simd_and(tmp45, bytetest_b3_b4);
        struct_Pc.cc = simd_or(tmp46, struct_Pc.cc);
        bytetest_ef = simd_and(tmp9, tmp6);
        tmp47 = simd_and(tmp37, tmp16);
        bytetest_b9 = simd_and(tmp28, tmp47);
        tmp48 = simd_and(tmp15, tmp4);
        bytetest_8d_8f = simd_and(tmp48, tmp18);
        tmp49 = simd_and(tmp43, bytetest_b9);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp49, carryQ.get_carry_in(6), tmp50));
        tmp51 = simd_and(tmp50, bytetest_8d_8f);
        struct_Pc.cc = simd_or(tmp51, struct_Pc.cc);
        bytetest_ef = simd_and(tmp9, tmp6);
        tmp52 = simd_andc(tmp4, tmp18);
        bytetest_bc = simd_and(tmp28, tmp52);
        bytetest_bf_bf = simd_and(tmp28, tmp6);
        tmp53 = simd_and(tmp43, bytetest_bc);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp53, carryQ.get_carry_in(7), tmp54));
        tmp55 = simd_and(tmp54, bytetest_bf_bf);
        struct_Pc.cc = simd_or(tmp55, struct_Pc.cc);
  }
  CarryArray<8, 0> carryQ;
  };

  struct Lt {
  Lt() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Lt & struct_Lt) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_c7, tmp7, tmp8, tmp9;
		BitBlock tmp10, bytetest_85_85, tmp11, tmp12, tmp13, tmp14, tmp15, tmp16;
		BitBlock tmp17, tmp18, bytetest_88_88, tmp19, tmp20, bytetest_8b_8b, tmp21;
		BitBlock tmp22, tmp23, tmp24, tmp25, tmp26, bytetest_b2_b2, tmp27, tmp28;
		BitBlock tmp29, tmp30, bytetest_e1, tmp31, tmp32, bytetest_be, bytetest_88_8f;
		BitBlock tmp33, tmp34, tmp35, tmp36, tmp37, tmp38, tmp39, bytetest_98_9f;
		BitBlock tmp40, tmp41, bytetest_a8_af, tmp42, tmp43, bytetest_bc_bc, tmp44;
		BitBlock tmp45, bytetest_bf, bytetest_8c_8c, tmp46, tmp47, tmp48, tmp49;




        struct_Lt.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp1, tmp2);
        tmp4 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp5 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_and(tmp4, tmp5);
        bytetest_c7 = simd_and(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_andc(tmp7, tmp2);
        tmp9 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp10 = simd_and(tmp4, tmp9);
        bytetest_85_85 = simd_and(tmp8, tmp10);
        tmp11 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp11, carryQ.get_carry_in(0), tmp12));
        tmp13 = simd_and(tmp12, bytetest_c7);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp13, carryQ.get_carry_in(1), tmp14));
        tmp15 = simd_and(tmp14, bytetest_85_85);
        struct_Lt.cc = simd_or(tmp15, struct_Lt.cc);
        bytetest_c7 = simd_and(tmp3, tmp6);
        tmp16 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp17 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp18 = simd_andc(tmp16, tmp17);
        bytetest_88_88 = simd_and(tmp8, tmp18);
        tmp19 = simd_and(tmp14, bytetest_88_88);
        struct_Lt.cc = simd_or(tmp19, struct_Lt.cc);
        bytetest_c7 = simd_and(tmp3, tmp6);
        tmp20 = simd_and(tmp16, tmp5);
        bytetest_8b_8b = simd_and(tmp8, tmp20);
        tmp21 = simd_and(tmp14, bytetest_8b_8b);
        struct_Lt.cc = simd_or(tmp21, struct_Lt.cc);
        bytetest_c7 = simd_and(tmp3, tmp6);
        tmp22 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp23 = simd_and(tmp7, tmp22);
        tmp24 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp25 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp26 = simd_andc(tmp25, tmp24);
        bytetest_b2_b2 = simd_and(tmp23, tmp26);
        tmp27 = simd_and(tmp14, bytetest_b2_b2);
        struct_Lt.cc = simd_or(tmp27, struct_Lt.cc);
        tmp28 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp29 = simd_and(tmp1, tmp28);
        tmp30 = simd_andc(tmp9, tmp24);
        bytetest_e1 = simd_and(tmp29, tmp30);
        tmp31 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp32 = simd_and(tmp31, tmp25);
        bytetest_be = simd_and(tmp23, tmp32);
        bytetest_88_8f = simd_and(tmp8, basis_bits.bit_4);
        tmp33 = simd_and(tmp12, bytetest_e1);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp33, carryQ.get_carry_in(2), tmp34));
        tmp35 = simd_and(tmp34, bytetest_be);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp35, carryQ.get_carry_in(3), tmp36));
        tmp37 = simd_and(tmp36, bytetest_88_8f);
        struct_Lt.cc = simd_or(tmp37, struct_Lt.cc);
        bytetest_e1 = simd_and(tmp29, tmp30);
        bytetest_be = simd_and(tmp23, tmp32);
        tmp38 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp39 = simd_and(tmp7, tmp38);
        bytetest_98_9f = simd_and(tmp39, basis_bits.bit_4);
        tmp40 = simd_and(tmp36, bytetest_98_9f);
        struct_Lt.cc = simd_or(tmp40, struct_Lt.cc);
        bytetest_e1 = simd_and(tmp29, tmp30);
        bytetest_be = simd_and(tmp23, tmp32);
        tmp41 = simd_and(tmp7, tmp28);
        bytetest_a8_af = simd_and(tmp41, basis_bits.bit_4);
        tmp42 = simd_and(tmp36, bytetest_a8_af);
        struct_Lt.cc = simd_or(tmp42, struct_Lt.cc);
        bytetest_e1 = simd_and(tmp29, tmp30);
        bytetest_be = simd_and(tmp23, tmp32);
        tmp43 = simd_andc(tmp31, tmp17);
        bytetest_bc_bc = simd_and(tmp23, tmp43);
        tmp44 = simd_and(tmp36, bytetest_bc_bc);
        struct_Lt.cc = simd_or(tmp44, struct_Lt.cc);
        bytetest_e1 = simd_and(tmp29, tmp30);
        tmp45 = simd_and(tmp31, tmp5);
        bytetest_bf = simd_and(tmp23, tmp45);
        bytetest_8c_8c = simd_and(tmp8, tmp43);
        tmp46 = simd_and(tmp34, bytetest_bf);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp46, carryQ.get_carry_in(4), tmp47));
        tmp48 = simd_and(tmp47, bytetest_8c_8c);
        struct_Lt.cc = simd_or(tmp48, struct_Lt.cc);
        bytetest_e1 = simd_and(tmp29, tmp30);
        bytetest_bf = simd_and(tmp23, tmp45);
        bytetest_bc_bc = simd_and(tmp23, tmp43);
        tmp49 = simd_and(tmp47, bytetest_bc_bc);
        struct_Lt.cc = simd_or(tmp49, struct_Lt.cc);
        carryQ.CarryQ_Adjust(5);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Lt & struct_Lt, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_c7, tmp7, tmp8, tmp9;
		BitBlock tmp10, bytetest_85_85, tmp11, tmp12, tmp13, tmp14, tmp15, tmp16;
		BitBlock tmp17, tmp18, bytetest_88_88, tmp19, tmp20, bytetest_8b_8b, tmp21;
		BitBlock tmp22, tmp23, tmp24, tmp25, tmp26, bytetest_b2_b2, tmp27, tmp28;
		BitBlock tmp29, tmp30, bytetest_e1, tmp31, tmp32, bytetest_be, bytetest_88_8f;
		BitBlock tmp33, tmp34, tmp35, tmp36, tmp37, tmp38, tmp39, bytetest_98_9f;
		BitBlock tmp40, tmp41, bytetest_a8_af, tmp42, tmp43, bytetest_bc_bc, tmp44;
		BitBlock tmp45, bytetest_bf, bytetest_8c_8c, tmp46, tmp47, tmp48, tmp49;




        struct_Lt.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp1, tmp2);
        tmp4 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp5 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_and(tmp4, tmp5);
        bytetest_c7 = simd_and(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_andc(tmp7, tmp2);
        tmp9 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp10 = simd_and(tmp4, tmp9);
        bytetest_85_85 = simd_and(tmp8, tmp10);
        tmp11 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp11, carryQ.get_carry_in(0), tmp12));
        tmp13 = simd_and(tmp12, bytetest_c7);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp13, carryQ.get_carry_in(1), tmp14));
        tmp15 = simd_and(tmp14, bytetest_85_85);
        struct_Lt.cc = simd_or(tmp15, struct_Lt.cc);
        bytetest_c7 = simd_and(tmp3, tmp6);
        tmp16 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp17 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp18 = simd_andc(tmp16, tmp17);
        bytetest_88_88 = simd_and(tmp8, tmp18);
        tmp19 = simd_and(tmp14, bytetest_88_88);
        struct_Lt.cc = simd_or(tmp19, struct_Lt.cc);
        bytetest_c7 = simd_and(tmp3, tmp6);
        tmp20 = simd_and(tmp16, tmp5);
        bytetest_8b_8b = simd_and(tmp8, tmp20);
        tmp21 = simd_and(tmp14, bytetest_8b_8b);
        struct_Lt.cc = simd_or(tmp21, struct_Lt.cc);
        bytetest_c7 = simd_and(tmp3, tmp6);
        tmp22 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp23 = simd_and(tmp7, tmp22);
        tmp24 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp25 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp26 = simd_andc(tmp25, tmp24);
        bytetest_b2_b2 = simd_and(tmp23, tmp26);
        tmp27 = simd_and(tmp14, bytetest_b2_b2);
        struct_Lt.cc = simd_or(tmp27, struct_Lt.cc);
        tmp28 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp29 = simd_and(tmp1, tmp28);
        tmp30 = simd_andc(tmp9, tmp24);
        bytetest_e1 = simd_and(tmp29, tmp30);
        tmp31 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp32 = simd_and(tmp31, tmp25);
        bytetest_be = simd_and(tmp23, tmp32);
        bytetest_88_8f = simd_and(tmp8, basis_bits.bit_4);
        tmp33 = simd_and(tmp12, bytetest_e1);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp33, carryQ.get_carry_in(2), tmp34));
        tmp35 = simd_and(tmp34, bytetest_be);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp35, carryQ.get_carry_in(3), tmp36));
        tmp37 = simd_and(tmp36, bytetest_88_8f);
        struct_Lt.cc = simd_or(tmp37, struct_Lt.cc);
        bytetest_e1 = simd_and(tmp29, tmp30);
        bytetest_be = simd_and(tmp23, tmp32);
        tmp38 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp39 = simd_and(tmp7, tmp38);
        bytetest_98_9f = simd_and(tmp39, basis_bits.bit_4);
        tmp40 = simd_and(tmp36, bytetest_98_9f);
        struct_Lt.cc = simd_or(tmp40, struct_Lt.cc);
        bytetest_e1 = simd_and(tmp29, tmp30);
        bytetest_be = simd_and(tmp23, tmp32);
        tmp41 = simd_and(tmp7, tmp28);
        bytetest_a8_af = simd_and(tmp41, basis_bits.bit_4);
        tmp42 = simd_and(tmp36, bytetest_a8_af);
        struct_Lt.cc = simd_or(tmp42, struct_Lt.cc);
        bytetest_e1 = simd_and(tmp29, tmp30);
        bytetest_be = simd_and(tmp23, tmp32);
        tmp43 = simd_andc(tmp31, tmp17);
        bytetest_bc_bc = simd_and(tmp23, tmp43);
        tmp44 = simd_and(tmp36, bytetest_bc_bc);
        struct_Lt.cc = simd_or(tmp44, struct_Lt.cc);
        bytetest_e1 = simd_and(tmp29, tmp30);
        tmp45 = simd_and(tmp31, tmp5);
        bytetest_bf = simd_and(tmp23, tmp45);
        bytetest_8c_8c = simd_and(tmp8, tmp43);
        tmp46 = simd_and(tmp34, bytetest_bf);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp46, carryQ.get_carry_in(4), tmp47));
        tmp48 = simd_and(tmp47, bytetest_8c_8c);
        struct_Lt.cc = simd_or(tmp48, struct_Lt.cc);
        bytetest_e1 = simd_and(tmp29, tmp30);
        bytetest_bf = simd_and(tmp23, tmp45);
        bytetest_bc_bc = simd_and(tmp23, tmp43);
        tmp49 = simd_and(tmp47, bytetest_bc_bc);
        struct_Lt.cc = simd_or(tmp49, struct_Lt.cc);
  }
  CarryArray<5, 0> carryQ;
  };

  struct Lu {
  Lu() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Lu & struct_Lu) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, tmp7, tmp8, tmp9, tmp10;
		BitBlock bytetest_41_5a, tmp11, tmp12, tmp13, tmp14, bytetest_c3, tmp15, tmp16;
		BitBlock tmp17, tmp18, tmp19, bytetest_80_96, tmp20, tmp21, tmp22, tmp23;
		BitBlock tmp24, tmp25, tmp26, tmp27, bytetest_98_9e, tmp28, tmp29, tmp30;
		BitBlock bytetest_c4, tmp31, bytetest_80_80, tmp32, tmp33, tmp34, tmp35, tmp36;
		BitBlock bytetest_82_82, tmp37, bytetest_84_84, tmp38, tmp39, bytetest_86_86;
		BitBlock tmp40, tmp41, tmp42, bytetest_88_88, tmp43, tmp44, bytetest_8a_8a;
		BitBlock tmp45, tmp46, tmp47, bytetest_8c_8c, tmp48, tmp49, bytetest_8e_8e;
		BitBlock tmp50, bytetest_90_90, tmp51, bytetest_92_92, tmp52, bytetest_94_94;
		BitBlock tmp53, bytetest_96_96, tmp54, bytetest_98_98, tmp55, bytetest_9a_9a;
		BitBlock tmp56, bytetest_9c_9c, tmp57, bytetest_9e_9e, tmp58, tmp59, tmp60;
		BitBlock bytetest_a0_a0, tmp61, bytetest_a2_a2, tmp62, bytetest_a4_a4, tmp63;
		BitBlock bytetest_a6_a6, tmp64, bytetest_a8_a8, tmp65, bytetest_aa_aa, tmp66;
		BitBlock bytetest_ac_ac, tmp67, bytetest_ae_ae, tmp68, tmp69, tmp70;
		BitBlock bytetest_b0_b0, tmp71, bytetest_b2_b2, tmp72, bytetest_b4_b4, tmp73;
		BitBlock bytetest_b6_b6, tmp74, tmp75, tmp76, bytetest_b9_b9, tmp77, tmp78;
		BitBlock bytetest_bb_bb, tmp79, tmp80, bytetest_bd_bd, tmp81, tmp82;
		BitBlock bytetest_bf_bf, tmp83, tmp84, bytetest_c5, tmp85, bytetest_81_81;
		BitBlock tmp86, tmp87, tmp88, bytetest_83_83, tmp89, bytetest_85_85, tmp90;
		BitBlock tmp91, bytetest_87_87, tmp92, tmp93, tmp94, tmp95, tmp96, tmp97;
		BitBlock tmp98, tmp99, tmp100, tmp101, tmp102, tmp103, tmp104, tmp105, tmp106;
		BitBlock tmp107, tmp108, tmp109, tmp110, tmp111, tmp112, tmp113, tmp114;
		BitBlock tmp115, tmp116, bytetest_b8_b9, tmp117, tmp118, tmp119, bytetest_c6;
		BitBlock tmp120, tmp121, tmp122, bytetest_81_82, tmp123, tmp124, tmp125;
		BitBlock tmp126, tmp127, bytetest_86_87, tmp128, tmp129, bytetest_89_8b;
		BitBlock tmp130, tmp131, tmp132, tmp133, tmp134, bytetest_8e_91, tmp135;
		BitBlock tmp136, tmp137, tmp138, bytetest_93_94, tmp139, tmp140, tmp141;
		BitBlock tmp142, tmp143, bytetest_96_98, tmp144, tmp145, bytetest_9c_9d;
		BitBlock tmp146, tmp147, tmp148, tmp149, tmp150, bytetest_9f_a0, tmp151;
		BitBlock tmp152, tmp153, bytetest_a6_a7, tmp154, bytetest_a9_a9, tmp155;
		BitBlock tmp156, bytetest_ae_af, tmp157, tmp158, bytetest_b1_b3, tmp159;
		BitBlock bytetest_b5_b5, tmp160, tmp161, bytetest_b7_b8, tmp162;
		BitBlock bytetest_bc_bc, tmp163, bytetest_c7, tmp164, tmp165, tmp166, tmp167;
		BitBlock tmp168, bytetest_8d_8d, tmp169, bytetest_8f_8f, tmp170;
		BitBlock bytetest_91_91, tmp171, bytetest_93_93, tmp172, bytetest_95_95;
		BitBlock tmp173, bytetest_97_97, tmp174, bytetest_99_99, tmp175;
		BitBlock bytetest_9b_9b, tmp176, tmp177, tmp178, tmp179, tmp180, tmp181;
		BitBlock tmp182, tmp183, tmp184, tmp185, bytetest_b1_b1, tmp186, tmp187;
		BitBlock bytetest_b6_b8, tmp188, bytetest_ba_ba, tmp189, tmp190;
		BitBlock bytetest_be_be, tmp191, bytetest_c8, tmp192, tmp193, tmp194, tmp195;
		BitBlock tmp196, tmp197, tmp198, tmp199, tmp200, tmp201, tmp202, tmp203;
		BitBlock tmp204, tmp205, tmp206, tmp207, tmp208, tmp209, tmp210, tmp211;
		BitBlock tmp212, tmp213, tmp214, tmp215, tmp216, tmp217, tmp218, tmp219;
		BitBlock tmp220, bytetest_ba_bb, tmp221, tmp222, bytetest_bd_be, tmp223;
		BitBlock bytetest_c9, tmp224, tmp225, tmp226, tmp227, tmp228, tmp229;
		BitBlock bytetest_83_86, tmp230, tmp231, tmp232, tmp233, tmp234, bytetest_cd;
		BitBlock tmp235, tmp236, tmp237, tmp238, tmp239, bytetest_ce, tmp240, tmp241;
		BitBlock tmp242, bytetest_88_8a, tmp243, tmp244, bytetest_8e_8f, tmp245;
		BitBlock tmp246, tmp247, tmp248, tmp249, bytetest_91_a1, tmp250, tmp251;
		BitBlock tmp252, bytetest_a3_ab, tmp253, bytetest_cf, tmp254, tmp255, tmp256;
		BitBlock tmp257, bytetest_92_94, tmp258, tmp259, tmp260, tmp261, tmp262;
		BitBlock tmp263, tmp264, tmp265, tmp266, tmp267, tmp268, tmp269, tmp270;
		BitBlock tmp271, bytetest_b7_b7, tmp272, tmp273, bytetest_b9_ba, tmp274;
		BitBlock tmp275, bytetest_d0, bytetest_80_af, tmp276, tmp277, tmp278;
		BitBlock bytetest_bd_bf, tmp279, tmp280, bytetest_d1, tmp281, tmp282, tmp283;
		BitBlock tmp284, tmp285, tmp286, tmp287, tmp288, tmp289, tmp290, tmp291;
		BitBlock tmp292, tmp293, tmp294, bytetest_b8_b8, tmp295, tmp296, tmp297;
		BitBlock tmp298, bytetest_d2, tmp299, tmp300, tmp301, tmp302, tmp303, tmp304;
		BitBlock tmp305, tmp306, tmp307, tmp308, tmp309, tmp310, tmp311, tmp312;
		BitBlock tmp313, tmp314, tmp315, tmp316, tmp317, tmp318, tmp319, tmp320;
		BitBlock tmp321, tmp322, tmp323, tmp324, tmp325, tmp326, tmp327, tmp328;
		BitBlock bytetest_d3, bytetest_80_81, tmp329, tmp330, tmp331, tmp332, tmp333;
		BitBlock tmp334, bytetest_89_89, tmp335, bytetest_8b_8b, tmp336, tmp337;
		BitBlock tmp338, tmp339, tmp340, tmp341, tmp342, tmp343, tmp344, tmp345;
		BitBlock tmp346, tmp347, tmp348, tmp349, tmp350, tmp351, tmp352, tmp353;
		BitBlock tmp354, tmp355, tmp356, tmp357, tmp358, tmp359, tmp360, tmp361;
		BitBlock bytetest_d4, tmp362, tmp363, tmp364, tmp365, tmp366, tmp367, tmp368;
		BitBlock tmp369, tmp370, tmp371, tmp372, tmp373, tmp374, tmp375, tmp376;
		BitBlock tmp377, tmp378, tmp379, tmp380, tmp381, tmp382, tmp383, bytetest_d5;
		BitBlock tmp384, tmp385, tmp386, tmp387, bytetest_b1_bf, tmp388, tmp389;
		BitBlock tmp390, bytetest_e1, bytetest_83, bytetest_80_85, tmp391, tmp392;
		BitBlock tmp393, tmp394, tmp395, bytetest_82, bytetest_a0_bf, tmp396, tmp397;
		BitBlock tmp398, tmp399, tmp400, tmp401, bytetest_b8, tmp402, tmp403, tmp404;
		BitBlock tmp405, tmp406, tmp407, tmp408, tmp409, tmp410, tmp411, tmp412;
		BitBlock tmp413, tmp414, tmp415, tmp416, tmp417, tmp418, tmp419, tmp420;
		BitBlock tmp421, tmp422, tmp423, tmp424, tmp425, tmp426, tmp427, tmp428;
		BitBlock tmp429, tmp430, tmp431, tmp432, tmp433, tmp434, tmp435, bytetest_b9;
		BitBlock tmp436, tmp437, tmp438, tmp439, tmp440, tmp441, tmp442, tmp443;
		BitBlock tmp444, tmp445, tmp446, tmp447, tmp448, tmp449, tmp450, tmp451;
		BitBlock tmp452, tmp453, tmp454, tmp455, tmp456, tmp457, tmp458, tmp459;
		BitBlock tmp460, tmp461, tmp462, tmp463, tmp464, tmp465, tmp466, tmp467;
		BitBlock tmp468, tmp469, bytetest_ba, tmp470, tmp471, tmp472, tmp473, tmp474;
		BitBlock tmp475, tmp476, tmp477, tmp478, tmp479, tmp480, tmp481, tmp482;
		BitBlock tmp483, tmp484, tmp485, tmp486, tmp487, tmp488, tmp489, tmp490;
		BitBlock tmp491, tmp492, tmp493, tmp494, tmp495, tmp496, tmp497, tmp498;
		BitBlock tmp499, bytetest_bb, tmp500, tmp501, tmp502, tmp503, tmp504, tmp505;
		BitBlock tmp506, tmp507, tmp508, tmp509, tmp510, tmp511, tmp512, tmp513;
		BitBlock tmp514, tmp515, tmp516, tmp517, tmp518, tmp519, tmp520, tmp521;
		BitBlock tmp522, tmp523, tmp524, tmp525, tmp526, tmp527, tmp528, tmp529;
		BitBlock tmp530, tmp531, tmp532, tmp533, bytetest_bc, bytetest_88_8f, tmp534;
		BitBlock tmp535, tmp536, bytetest_98_9d, tmp537, bytetest_a8_af, tmp538;
		BitBlock bytetest_b8_bf, tmp539, bytetest_bd, bytetest_88_8d, tmp540, tmp541;
		BitBlock tmp542, tmp543, tmp544, bytetest_9d_9d, tmp545, bytetest_9f_9f;
		BitBlock tmp546, tmp547, bytetest_be, bytetest_b8_bb, tmp548, tmp549, tmp550;
		BitBlock bytetest_bf, bytetest_88_8b, tmp551, tmp552, tmp553, bytetest_98_9b;
		BitBlock tmp554, tmp555, bytetest_a8_ac, tmp556, tmp557, bytetest_e2;
		BitBlock bytetest_84, tmp558, tmp559, tmp560, tmp561, tmp562, tmp563, tmp564;
		BitBlock tmp565, bytetest_8b_8d, tmp566, tmp567, bytetest_90_92, tmp568;
		BitBlock tmp569, tmp570, bytetest_99_9d, tmp571, tmp572, tmp573, tmp574;
		BitBlock tmp575, bytetest_aa_ad, tmp576, bytetest_b0_b3, tmp577;
		BitBlock bytetest_be_bf, tmp578, bytetest_85, tmp579, tmp580, tmp581;
		BitBlock bytetest_86, tmp582, tmp583, tmp584, bytetest_b0, tmp585, tmp586;
		BitBlock bytetest_80_ae, tmp587, tmp588, tmp589, bytetest_b1, tmp590, tmp591;
		BitBlock tmp592, tmp593, bytetest_a2_a4, tmp594, bytetest_a7_a7, tmp595;
		BitBlock tmp596, bytetest_ab_ab, tmp597, tmp598, tmp599, tmp600;
		BitBlock bytetest_ad_b0, tmp601, tmp602, tmp603, bytetest_b2, tmp604, tmp605;
		BitBlock tmp606, tmp607, tmp608, tmp609, tmp610, tmp611, tmp612, tmp613;
		BitBlock tmp614, tmp615, tmp616, tmp617, tmp618, tmp619, tmp620, tmp621;
		BitBlock tmp622, tmp623, tmp624, tmp625, tmp626, tmp627, tmp628, tmp629;
		BitBlock tmp630, tmp631, tmp632, tmp633, tmp634, tmp635, tmp636, tmp637;
		BitBlock tmp638, tmp639, bytetest_b3, tmp640, tmp641, tmp642, tmp643, tmp644;
		BitBlock tmp645, tmp646, tmp647, tmp648, tmp649, tmp650, tmp651, tmp652;
		BitBlock tmp653, tmp654, tmp655, tmp656, tmp657, tmp658, tmp659, tmp660;
		BitBlock bytetest_ad_ad, tmp661, tmp662, bytetest_ea, bytetest_99, tmp663;
		BitBlock tmp664, tmp665, tmp666, tmp667, tmp668, tmp669, tmp670, tmp671;
		BitBlock tmp672, tmp673, tmp674, tmp675, tmp676, tmp677, tmp678, tmp679;
		BitBlock tmp680, tmp681, tmp682, tmp683, tmp684, tmp685, tmp686, tmp687;
		BitBlock tmp688, tmp689, bytetest_9a, tmp690, tmp691, tmp692, tmp693, tmp694;
		BitBlock tmp695, tmp696, tmp697, tmp698, tmp699, tmp700, tmp701, tmp702;
		BitBlock tmp703, bytetest_9c, tmp704, tmp705, tmp706, tmp707, tmp708, tmp709;
		BitBlock tmp710, tmp711, tmp712, tmp713, tmp714, tmp715, tmp716, tmp717;
		BitBlock tmp718, tmp719, bytetest_9d, tmp720, tmp721, tmp722, tmp723, tmp724;
		BitBlock tmp725, tmp726, tmp727, tmp728, tmp729, tmp730, tmp731, tmp732;
		BitBlock tmp733, tmp734, tmp735, tmp736, tmp737, tmp738, tmp739, tmp740;
		BitBlock tmp741, tmp742, tmp743, tmp744, tmp745, tmp746, tmp747, tmp748;
		BitBlock bytetest_9e, tmp749, tmp750, tmp751, tmp752, tmp753, tmp754, tmp755;
		BitBlock tmp756, tmp757, tmp758, tmp759, tmp760, tmp761, tmp762, tmp763;
		BitBlock tmp764, bytetest_ef, bytetest_a1_ba, tmp765, tmp766, tmp767, tmp768;
		BitBlock tmp769, tmp770, bytetest_f0, bytetest_90, tmp771, tmp772;
		BitBlock bytetest_80_a7, tmp773, tmp774, tmp775, tmp776, tmp777, tmp778;
		BitBlock tmp779, tmp780, tmp781, tmp782, bytetest_80_99, tmp783, tmp784;
		BitBlock tmp785, tmp786, tmp787, bytetest_91, tmp788, bytetest_80_8d, tmp789;
		BitBlock tmp790, tmp791, bytetest_b4_bf, tmp792, tmp793, bytetest_92, tmp794;
		BitBlock tmp795, tmp796, bytetest_a8_bf, tmp797, tmp798, tmp799;
		BitBlock bytetest_9e_9f, tmp800, tmp801, tmp802, bytetest_a5_a6, tmp803;
		BitBlock tmp804, bytetest_a9_ac, tmp805, tmp806, tmp807, tmp808;
		BitBlock bytetest_ae_b5, tmp809, bytetest_93, tmp810, tmp811, tmp812;
		BitBlock bytetest_90_a9, tmp813, tmp814, tmp815, bytetest_94, tmp816;
		BitBlock bytetest_84_85, tmp817, tmp818, tmp819, tmp820, tmp821;
		BitBlock bytetest_87_8a, tmp822, tmp823, tmp824, tmp825, bytetest_8d_94;
		BitBlock tmp826, tmp827, tmp828, bytetest_96_9c, tmp829, tmp830;
		BitBlock bytetest_bb_be, tmp831, bytetest_95, bytetest_80_84, tmp832, tmp833;
		BitBlock tmp834, tmp835, tmp836, bytetest_8a_90, tmp837, bytetest_96, tmp838;
		BitBlock tmp839, tmp840, tmp841, bytetest_ac_bf, tmp842, tmp843;
		BitBlock bytetest_a0_b9, tmp844, bytetest_97, tmp845, tmp846, tmp847, tmp848;
		BitBlock bytetest_94_ad, tmp849, tmp850, tmp851, bytetest_98, tmp852;
		BitBlock bytetest_88_a1, tmp853, tmp854, tmp855, tmp856, bytetest_80_95;
		BitBlock tmp857, tmp858, tmp859, bytetest_bc_bf, tmp860, tmp861;
		BitBlock bytetest_80_89, tmp862, tmp863, tmp864, bytetest_b0_bf, tmp865;
		BitBlock tmp866, bytetest_9b, tmp867, tmp868, tmp869, tmp870, tmp871, tmp872;
		BitBlock bytetest_a2_ba, tmp873, tmp874, tmp875, tmp876, tmp877;
		BitBlock bytetest_9c_b4, tmp878, tmp879, tmp880, tmp881, tmp882;
		BitBlock bytetest_96_ae, tmp883, tmp884, tmp885, tmp886, tmp887, tmp888;
		BitBlock tmp889, bytetest_90_a8, tmp890, tmp891, tmp892, bytetest_9f, tmp893;
		BitBlock tmp894, tmp895;




        struct_Lu.cc = simd<1>::constant<0>();
        tmp1 = simd_andc(basis_bits.bit_1, basis_bits.bit_0);
        tmp2 = simd_andc(tmp1, basis_bits.bit_2);
        tmp3 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp4 = simd_or(basis_bits.bit_5, tmp3);
        tmp5 = simd_and(basis_bits.bit_4, tmp4);
        tmp6 = simd_not(tmp5);
        tmp7 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp8 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp9 = simd_or(tmp7, tmp8);
        tmp10 = simd_or(simd_and(basis_bits.bit_3, tmp6), simd_andc(tmp9, basis_bits.bit_3));
        bytetest_41_5a = simd_and(tmp2, tmp10);
        struct_Lu.cc = simd_or(bytetest_41_5a, struct_Lu.cc);
        tmp11 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp12 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp13 = simd_andc(tmp11, tmp12);
        tmp14 = simd_andc(tmp3, tmp7);
        bytetest_c3 = simd_and(tmp13, tmp14);
        tmp15 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp16 = simd_andc(tmp15, basis_bits.bit_2);
        tmp17 = simd_and(basis_bits.bit_5, tmp3);
        tmp18 = simd_or(basis_bits.bit_4, tmp17);
        tmp19 = simd_and(basis_bits.bit_3, tmp18);
        bytetest_80_96 = simd_andc(tmp16, tmp19);
        tmp20 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp20, carryQ.get_carry_in(0), tmp21));
        tmp22 = simd_and(tmp21, bytetest_c3);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp22, carryQ.get_carry_in(1), tmp23));
        tmp24 = simd_and(tmp23, bytetest_80_96);
        struct_Lu.cc = simd_or(tmp24, struct_Lu.cc);
        bytetest_c3 = simd_and(tmp13, tmp14);
        tmp25 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp26 = simd_and(tmp15, tmp25);
        tmp27 = simd_and(tmp26, basis_bits.bit_4);
        bytetest_98_9e = simd_andc(tmp27, tmp17);
        tmp28 = simd_and(tmp23, bytetest_98_9e);
        struct_Lu.cc = simd_or(tmp28, struct_Lu.cc);
        tmp29 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp30 = simd_andc(tmp29, tmp8);
        bytetest_c4 = simd_and(tmp13, tmp30);
        tmp31 = simd_andc(tmp15, tmp12);
        bytetest_80_80 = simd_andc(tmp31, tmp9);
        tmp32 = simd_and(tmp21, bytetest_c4);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp32, carryQ.get_carry_in(2), tmp33));
        tmp34 = simd_and(tmp33, bytetest_80_80);
        struct_Lu.cc = simd_or(tmp34, struct_Lu.cc);
        bytetest_c4 = simd_and(tmp13, tmp30);
        tmp35 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp36 = simd_andc(tmp35, tmp7);
        bytetest_82_82 = simd_and(tmp31, tmp36);
        tmp37 = simd_and(tmp33, bytetest_82_82);
        struct_Lu.cc = simd_or(tmp37, struct_Lu.cc);
        bytetest_c4 = simd_and(tmp13, tmp30);
        bytetest_84_84 = simd_and(tmp31, tmp30);
        tmp38 = simd_and(tmp33, bytetest_84_84);
        struct_Lu.cc = simd_or(tmp38, struct_Lu.cc);
        bytetest_c4 = simd_and(tmp13, tmp30);
        tmp39 = simd_and(tmp29, tmp35);
        bytetest_86_86 = simd_and(tmp31, tmp39);
        tmp40 = simd_and(tmp33, bytetest_86_86);
        struct_Lu.cc = simd_or(tmp40, struct_Lu.cc);
        bytetest_c4 = simd_and(tmp13, tmp30);
        tmp41 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp42 = simd_andc(tmp41, tmp8);
        bytetest_88_88 = simd_and(tmp31, tmp42);
        tmp43 = simd_and(tmp33, bytetest_88_88);
        struct_Lu.cc = simd_or(tmp43, struct_Lu.cc);
        bytetest_c4 = simd_and(tmp13, tmp30);
        tmp44 = simd_and(tmp41, tmp35);
        bytetest_8a_8a = simd_and(tmp31, tmp44);
        tmp45 = simd_and(tmp33, bytetest_8a_8a);
        struct_Lu.cc = simd_or(tmp45, struct_Lu.cc);
        bytetest_c4 = simd_and(tmp13, tmp30);
        tmp46 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp47 = simd_andc(tmp46, tmp8);
        bytetest_8c_8c = simd_and(tmp31, tmp47);
        tmp48 = simd_and(tmp33, bytetest_8c_8c);
        struct_Lu.cc = simd_or(tmp48, struct_Lu.cc);
        bytetest_c4 = simd_and(tmp13, tmp30);
        tmp49 = simd_and(tmp46, tmp35);
        bytetest_8e_8e = simd_and(tmp31, tmp49);
        tmp50 = simd_and(tmp33, bytetest_8e_8e);
        struct_Lu.cc = simd_or(tmp50, struct_Lu.cc);
        bytetest_c4 = simd_and(tmp13, tmp30);
        bytetest_90_90 = simd_andc(tmp26, tmp9);
        tmp51 = simd_and(tmp33, bytetest_90_90);
        struct_Lu.cc = simd_or(tmp51, struct_Lu.cc);
        bytetest_c4 = simd_and(tmp13, tmp30);
        bytetest_92_92 = simd_and(tmp26, tmp36);
        tmp52 = simd_and(tmp33, bytetest_92_92);
        struct_Lu.cc = simd_or(tmp52, struct_Lu.cc);
        bytetest_c4 = simd_and(tmp13, tmp30);
        bytetest_94_94 = simd_and(tmp26, tmp30);
        tmp53 = simd_and(tmp33, bytetest_94_94);
        struct_Lu.cc = simd_or(tmp53, struct_Lu.cc);
        bytetest_c4 = simd_and(tmp13, tmp30);
        bytetest_96_96 = simd_and(tmp26, tmp39);
        tmp54 = simd_and(tmp33, bytetest_96_96);
        struct_Lu.cc = simd_or(tmp54, struct_Lu.cc);
        bytetest_c4 = simd_and(tmp13, tmp30);
        bytetest_98_98 = simd_and(tmp26, tmp42);
        tmp55 = simd_and(tmp33, bytetest_98_98);
        struct_Lu.cc = simd_or(tmp55, struct_Lu.cc);
        bytetest_c4 = simd_and(tmp13, tmp30);
        bytetest_9a_9a = simd_and(tmp26, tmp44);
        tmp56 = simd_and(tmp33, bytetest_9a_9a);
        struct_Lu.cc = simd_or(tmp56, struct_Lu.cc);
        bytetest_c4 = simd_and(tmp13, tmp30);
        bytetest_9c_9c = simd_and(tmp26, tmp47);
        tmp57 = simd_and(tmp33, bytetest_9c_9c);
        struct_Lu.cc = simd_or(tmp57, struct_Lu.cc);
        bytetest_c4 = simd_and(tmp13, tmp30);
        bytetest_9e_9e = simd_and(tmp26, tmp49);
        tmp58 = simd_and(tmp33, bytetest_9e_9e);
        struct_Lu.cc = simd_or(tmp58, struct_Lu.cc);
        bytetest_c4 = simd_and(tmp13, tmp30);
        tmp59 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp60 = simd_and(tmp15, tmp59);
        bytetest_a0_a0 = simd_andc(tmp60, tmp9);
        tmp61 = simd_and(tmp33, bytetest_a0_a0);
        struct_Lu.cc = simd_or(tmp61, struct_Lu.cc);
        bytetest_c4 = simd_and(tmp13, tmp30);
        bytetest_a2_a2 = simd_and(tmp60, tmp36);
        tmp62 = simd_and(tmp33, bytetest_a2_a2);
        struct_Lu.cc = simd_or(tmp62, struct_Lu.cc);
        bytetest_c4 = simd_and(tmp13, tmp30);
        bytetest_a4_a4 = simd_and(tmp60, tmp30);
        tmp63 = simd_and(tmp33, bytetest_a4_a4);
        struct_Lu.cc = simd_or(tmp63, struct_Lu.cc);
        bytetest_c4 = simd_and(tmp13, tmp30);
        bytetest_a6_a6 = simd_and(tmp60, tmp39);
        tmp64 = simd_and(tmp33, bytetest_a6_a6);
        struct_Lu.cc = simd_or(tmp64, struct_Lu.cc);
        bytetest_c4 = simd_and(tmp13, tmp30);
        bytetest_a8_a8 = simd_and(tmp60, tmp42);
        tmp65 = simd_and(tmp33, bytetest_a8_a8);
        struct_Lu.cc = simd_or(tmp65, struct_Lu.cc);
        bytetest_c4 = simd_and(tmp13, tmp30);
        bytetest_aa_aa = simd_and(tmp60, tmp44);
        tmp66 = simd_and(tmp33, bytetest_aa_aa);
        struct_Lu.cc = simd_or(tmp66, struct_Lu.cc);
        bytetest_c4 = simd_and(tmp13, tmp30);
        bytetest_ac_ac = simd_and(tmp60, tmp47);
        tmp67 = simd_and(tmp33, bytetest_ac_ac);
        struct_Lu.cc = simd_or(tmp67, struct_Lu.cc);
        bytetest_c4 = simd_and(tmp13, tmp30);
        bytetest_ae_ae = simd_and(tmp60, tmp49);
        tmp68 = simd_and(tmp33, bytetest_ae_ae);
        struct_Lu.cc = simd_or(tmp68, struct_Lu.cc);
        bytetest_c4 = simd_and(tmp13, tmp30);
        tmp69 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp70 = simd_and(tmp15, tmp69);
        bytetest_b0_b0 = simd_andc(tmp70, tmp9);
        tmp71 = simd_and(tmp33, bytetest_b0_b0);
        struct_Lu.cc = simd_or(tmp71, struct_Lu.cc);
        bytetest_c4 = simd_and(tmp13, tmp30);
        bytetest_b2_b2 = simd_and(tmp70, tmp36);
        tmp72 = simd_and(tmp33, bytetest_b2_b2);
        struct_Lu.cc = simd_or(tmp72, struct_Lu.cc);
        bytetest_c4 = simd_and(tmp13, tmp30);
        bytetest_b4_b4 = simd_and(tmp70, tmp30);
        tmp73 = simd_and(tmp33, bytetest_b4_b4);
        struct_Lu.cc = simd_or(tmp73, struct_Lu.cc);
        bytetest_c4 = simd_and(tmp13, tmp30);
        bytetest_b6_b6 = simd_and(tmp70, tmp39);
        tmp74 = simd_and(tmp33, bytetest_b6_b6);
        struct_Lu.cc = simd_or(tmp74, struct_Lu.cc);
        bytetest_c4 = simd_and(tmp13, tmp30);
        tmp75 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp76 = simd_and(tmp41, tmp75);
        bytetest_b9_b9 = simd_and(tmp70, tmp76);
        tmp77 = simd_and(tmp33, bytetest_b9_b9);
        struct_Lu.cc = simd_or(tmp77, struct_Lu.cc);
        bytetest_c4 = simd_and(tmp13, tmp30);
        tmp78 = simd_and(tmp41, tmp3);
        bytetest_bb_bb = simd_and(tmp70, tmp78);
        tmp79 = simd_and(tmp33, bytetest_bb_bb);
        struct_Lu.cc = simd_or(tmp79, struct_Lu.cc);
        bytetest_c4 = simd_and(tmp13, tmp30);
        tmp80 = simd_and(tmp46, tmp75);
        bytetest_bd_bd = simd_and(tmp70, tmp80);
        tmp81 = simd_and(tmp33, bytetest_bd_bd);
        struct_Lu.cc = simd_or(tmp81, struct_Lu.cc);
        bytetest_c4 = simd_and(tmp13, tmp30);
        tmp82 = simd_and(tmp46, tmp3);
        bytetest_bf_bf = simd_and(tmp70, tmp82);
        tmp83 = simd_and(tmp33, bytetest_bf_bf);
        struct_Lu.cc = simd_or(tmp83, struct_Lu.cc);
        tmp84 = simd_and(tmp29, tmp75);
        bytetest_c5 = simd_and(tmp13, tmp84);
        tmp85 = simd_andc(tmp75, tmp7);
        bytetest_81_81 = simd_and(tmp31, tmp85);
        tmp86 = simd_and(tmp21, bytetest_c5);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp86, carryQ.get_carry_in(3), tmp87));
        tmp88 = simd_and(tmp87, bytetest_81_81);
        struct_Lu.cc = simd_or(tmp88, struct_Lu.cc);
        bytetest_c5 = simd_and(tmp13, tmp84);
        bytetest_83_83 = simd_and(tmp31, tmp14);
        tmp89 = simd_and(tmp87, bytetest_83_83);
        struct_Lu.cc = simd_or(tmp89, struct_Lu.cc);
        bytetest_c5 = simd_and(tmp13, tmp84);
        bytetest_85_85 = simd_and(tmp31, tmp84);
        tmp90 = simd_and(tmp87, bytetest_85_85);
        struct_Lu.cc = simd_or(tmp90, struct_Lu.cc);
        bytetest_c5 = simd_and(tmp13, tmp84);
        tmp91 = simd_and(tmp29, tmp3);
        bytetest_87_87 = simd_and(tmp31, tmp91);
        tmp92 = simd_and(tmp87, bytetest_87_87);
        struct_Lu.cc = simd_or(tmp92, struct_Lu.cc);
        bytetest_c5 = simd_and(tmp13, tmp84);
        bytetest_8a_8a = simd_and(tmp31, tmp44);
        tmp93 = simd_and(tmp87, bytetest_8a_8a);
        struct_Lu.cc = simd_or(tmp93, struct_Lu.cc);
        bytetest_c5 = simd_and(tmp13, tmp84);
        bytetest_8c_8c = simd_and(tmp31, tmp47);
        tmp94 = simd_and(tmp87, bytetest_8c_8c);
        struct_Lu.cc = simd_or(tmp94, struct_Lu.cc);
        bytetest_c5 = simd_and(tmp13, tmp84);
        bytetest_8e_8e = simd_and(tmp31, tmp49);
        tmp95 = simd_and(tmp87, bytetest_8e_8e);
        struct_Lu.cc = simd_or(tmp95, struct_Lu.cc);
        bytetest_c5 = simd_and(tmp13, tmp84);
        bytetest_90_90 = simd_andc(tmp26, tmp9);
        tmp96 = simd_and(tmp87, bytetest_90_90);
        struct_Lu.cc = simd_or(tmp96, struct_Lu.cc);
        bytetest_c5 = simd_and(tmp13, tmp84);
        bytetest_92_92 = simd_and(tmp26, tmp36);
        tmp97 = simd_and(tmp87, bytetest_92_92);
        struct_Lu.cc = simd_or(tmp97, struct_Lu.cc);
        bytetest_c5 = simd_and(tmp13, tmp84);
        bytetest_94_94 = simd_and(tmp26, tmp30);
        tmp98 = simd_and(tmp87, bytetest_94_94);
        struct_Lu.cc = simd_or(tmp98, struct_Lu.cc);
        bytetest_c5 = simd_and(tmp13, tmp84);
        bytetest_96_96 = simd_and(tmp26, tmp39);
        tmp99 = simd_and(tmp87, bytetest_96_96);
        struct_Lu.cc = simd_or(tmp99, struct_Lu.cc);
        bytetest_c5 = simd_and(tmp13, tmp84);
        bytetest_98_98 = simd_and(tmp26, tmp42);
        tmp100 = simd_and(tmp87, bytetest_98_98);
        struct_Lu.cc = simd_or(tmp100, struct_Lu.cc);
        bytetest_c5 = simd_and(tmp13, tmp84);
        bytetest_9a_9a = simd_and(tmp26, tmp44);
        tmp101 = simd_and(tmp87, bytetest_9a_9a);
        struct_Lu.cc = simd_or(tmp101, struct_Lu.cc);
        bytetest_c5 = simd_and(tmp13, tmp84);
        bytetest_9c_9c = simd_and(tmp26, tmp47);
        tmp102 = simd_and(tmp87, bytetest_9c_9c);
        struct_Lu.cc = simd_or(tmp102, struct_Lu.cc);
        bytetest_c5 = simd_and(tmp13, tmp84);
        bytetest_9e_9e = simd_and(tmp26, tmp49);
        tmp103 = simd_and(tmp87, bytetest_9e_9e);
        struct_Lu.cc = simd_or(tmp103, struct_Lu.cc);
        bytetest_c5 = simd_and(tmp13, tmp84);
        bytetest_a0_a0 = simd_andc(tmp60, tmp9);
        tmp104 = simd_and(tmp87, bytetest_a0_a0);
        struct_Lu.cc = simd_or(tmp104, struct_Lu.cc);
        bytetest_c5 = simd_and(tmp13, tmp84);
        bytetest_a2_a2 = simd_and(tmp60, tmp36);
        tmp105 = simd_and(tmp87, bytetest_a2_a2);
        struct_Lu.cc = simd_or(tmp105, struct_Lu.cc);
        bytetest_c5 = simd_and(tmp13, tmp84);
        bytetest_a4_a4 = simd_and(tmp60, tmp30);
        tmp106 = simd_and(tmp87, bytetest_a4_a4);
        struct_Lu.cc = simd_or(tmp106, struct_Lu.cc);
        bytetest_c5 = simd_and(tmp13, tmp84);
        bytetest_a6_a6 = simd_and(tmp60, tmp39);
        tmp107 = simd_and(tmp87, bytetest_a6_a6);
        struct_Lu.cc = simd_or(tmp107, struct_Lu.cc);
        bytetest_c5 = simd_and(tmp13, tmp84);
        bytetest_a8_a8 = simd_and(tmp60, tmp42);
        tmp108 = simd_and(tmp87, bytetest_a8_a8);
        struct_Lu.cc = simd_or(tmp108, struct_Lu.cc);
        bytetest_c5 = simd_and(tmp13, tmp84);
        bytetest_aa_aa = simd_and(tmp60, tmp44);
        tmp109 = simd_and(tmp87, bytetest_aa_aa);
        struct_Lu.cc = simd_or(tmp109, struct_Lu.cc);
        bytetest_c5 = simd_and(tmp13, tmp84);
        bytetest_ac_ac = simd_and(tmp60, tmp47);
        tmp110 = simd_and(tmp87, bytetest_ac_ac);
        struct_Lu.cc = simd_or(tmp110, struct_Lu.cc);
        bytetest_c5 = simd_and(tmp13, tmp84);
        bytetest_ae_ae = simd_and(tmp60, tmp49);
        tmp111 = simd_and(tmp87, bytetest_ae_ae);
        struct_Lu.cc = simd_or(tmp111, struct_Lu.cc);
        bytetest_c5 = simd_and(tmp13, tmp84);
        bytetest_b0_b0 = simd_andc(tmp70, tmp9);
        tmp112 = simd_and(tmp87, bytetest_b0_b0);
        struct_Lu.cc = simd_or(tmp112, struct_Lu.cc);
        bytetest_c5 = simd_and(tmp13, tmp84);
        bytetest_b2_b2 = simd_and(tmp70, tmp36);
        tmp113 = simd_and(tmp87, bytetest_b2_b2);
        struct_Lu.cc = simd_or(tmp113, struct_Lu.cc);
        bytetest_c5 = simd_and(tmp13, tmp84);
        bytetest_b4_b4 = simd_and(tmp70, tmp30);
        tmp114 = simd_and(tmp87, bytetest_b4_b4);
        struct_Lu.cc = simd_or(tmp114, struct_Lu.cc);
        bytetest_c5 = simd_and(tmp13, tmp84);
        bytetest_b6_b6 = simd_and(tmp70, tmp39);
        tmp115 = simd_and(tmp87, bytetest_b6_b6);
        struct_Lu.cc = simd_or(tmp115, struct_Lu.cc);
        bytetest_c5 = simd_and(tmp13, tmp84);
        tmp116 = simd_andc(tmp41, basis_bits.bit_6);
        bytetest_b8_b9 = simd_and(tmp70, tmp116);
        tmp117 = simd_and(tmp87, bytetest_b8_b9);
        struct_Lu.cc = simd_or(tmp117, struct_Lu.cc);
        bytetest_c5 = simd_and(tmp13, tmp84);
        bytetest_bb_bb = simd_and(tmp70, tmp78);
        tmp118 = simd_and(tmp87, bytetest_bb_bb);
        struct_Lu.cc = simd_or(tmp118, struct_Lu.cc);
        bytetest_c5 = simd_and(tmp13, tmp84);
        bytetest_bd_bd = simd_and(tmp70, tmp80);
        tmp119 = simd_and(tmp87, bytetest_bd_bd);
        struct_Lu.cc = simd_or(tmp119, struct_Lu.cc);
        bytetest_c6 = simd_and(tmp13, tmp39);
        tmp120 = simd_andc(tmp31, tmp7);
        tmp121 = simd_not(basis_bits.bit_7);
        tmp122 = simd_or(simd_and(basis_bits.bit_6, tmp121), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
        bytetest_81_82 = simd_and(tmp120, tmp122);
        tmp123 = simd_and(tmp21, bytetest_c6);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp123, carryQ.get_carry_in(4), tmp124));
        tmp125 = simd_and(tmp124, bytetest_81_82);
        struct_Lu.cc = simd_or(tmp125, struct_Lu.cc);
        bytetest_c6 = simd_and(tmp13, tmp39);
        bytetest_84_84 = simd_and(tmp31, tmp30);
        tmp126 = simd_and(tmp124, bytetest_84_84);
        struct_Lu.cc = simd_or(tmp126, struct_Lu.cc);
        bytetest_c6 = simd_and(tmp13, tmp39);
        tmp127 = simd_and(tmp29, basis_bits.bit_6);
        bytetest_86_87 = simd_and(tmp31, tmp127);
        tmp128 = simd_and(tmp124, bytetest_86_87);
        struct_Lu.cc = simd_or(tmp128, struct_Lu.cc);
        bytetest_c6 = simd_and(tmp13, tmp39);
        tmp129 = simd_and(tmp31, tmp41);
        bytetest_89_8b = simd_and(tmp129, tmp8);
        tmp130 = simd_and(tmp124, bytetest_89_8b);
        struct_Lu.cc = simd_or(tmp130, struct_Lu.cc);
        bytetest_c6 = simd_and(tmp13, tmp39);
        tmp131 = simd_or(tmp7, basis_bits.bit_6);
        tmp132 = simd_not(tmp131);
        tmp133 = simd_and(tmp46, basis_bits.bit_6);
        tmp134 = simd_or(simd_and(basis_bits.bit_3, tmp132), simd_andc(tmp133, basis_bits.bit_3));
        bytetest_8e_91 = simd_and(tmp16, tmp134);
        tmp135 = simd_and(tmp124, bytetest_8e_91);
        struct_Lu.cc = simd_or(tmp135, struct_Lu.cc);
        bytetest_c6 = simd_and(tmp13, tmp39);
        tmp136 = simd_andc(tmp26, basis_bits.bit_4);
        tmp137 = simd_not(tmp8);
        tmp138 = simd_or(simd_and(basis_bits.bit_5, tmp137), simd_andc(tmp3, basis_bits.bit_5));
        bytetest_93_94 = simd_and(tmp136, tmp138);
        tmp139 = simd_and(tmp124, bytetest_93_94);
        struct_Lu.cc = simd_or(tmp139, struct_Lu.cc);
        bytetest_c6 = simd_and(tmp13, tmp39);
        tmp140 = simd_or(basis_bits.bit_5, tmp8);
        tmp141 = simd_not(tmp140);
        tmp142 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp143 = simd_or(simd_and(basis_bits.bit_4, tmp141), simd_andc(tmp142, basis_bits.bit_4));
        bytetest_96_98 = simd_and(tmp26, tmp143);
        tmp144 = simd_and(tmp124, bytetest_96_98);
        struct_Lu.cc = simd_or(tmp144, struct_Lu.cc);
        bytetest_c6 = simd_and(tmp13, tmp39);
        tmp145 = simd_andc(tmp46, basis_bits.bit_6);
        bytetest_9c_9d = simd_and(tmp26, tmp145);
        tmp146 = simd_and(tmp124, bytetest_9c_9d);
        struct_Lu.cc = simd_or(tmp146, struct_Lu.cc);
        bytetest_c6 = simd_and(tmp13, tmp39);
        tmp147 = simd_or(basis_bits.bit_3, tmp9);
        tmp148 = simd_not(tmp147);
        tmp149 = simd_and(basis_bits.bit_3, tmp82);
        tmp150 = simd_or(simd_and(basis_bits.bit_2, tmp148), simd_andc(tmp149, basis_bits.bit_2));
        bytetest_9f_a0 = simd_and(tmp15, tmp150);
        tmp151 = simd_and(tmp124, bytetest_9f_a0);
        struct_Lu.cc = simd_or(tmp151, struct_Lu.cc);
        bytetest_c6 = simd_and(tmp13, tmp39);
        bytetest_a2_a2 = simd_and(tmp60, tmp36);
        tmp152 = simd_and(tmp124, bytetest_a2_a2);
        struct_Lu.cc = simd_or(tmp152, struct_Lu.cc);
        bytetest_c6 = simd_and(tmp13, tmp39);
        bytetest_a4_a4 = simd_and(tmp60, tmp30);
        tmp153 = simd_and(tmp124, bytetest_a4_a4);
        struct_Lu.cc = simd_or(tmp153, struct_Lu.cc);
        bytetest_c6 = simd_and(tmp13, tmp39);
        bytetest_a6_a7 = simd_and(tmp60, tmp127);
        tmp154 = simd_and(tmp124, bytetest_a6_a7);
        struct_Lu.cc = simd_or(tmp154, struct_Lu.cc);
        bytetest_c6 = simd_and(tmp13, tmp39);
        bytetest_a9_a9 = simd_and(tmp60, tmp76);
        tmp155 = simd_and(tmp124, bytetest_a9_a9);
        struct_Lu.cc = simd_or(tmp155, struct_Lu.cc);
        bytetest_c6 = simd_and(tmp13, tmp39);
        bytetest_ac_ac = simd_and(tmp60, tmp47);
        tmp156 = simd_and(tmp124, bytetest_ac_ac);
        struct_Lu.cc = simd_or(tmp156, struct_Lu.cc);
        bytetest_c6 = simd_and(tmp13, tmp39);
        bytetest_ae_af = simd_and(tmp60, tmp133);
        tmp157 = simd_and(tmp124, bytetest_ae_af);
        struct_Lu.cc = simd_or(tmp157, struct_Lu.cc);
        bytetest_c6 = simd_and(tmp13, tmp39);
        tmp158 = simd_andc(tmp70, tmp7);
        bytetest_b1_b3 = simd_and(tmp158, tmp8);
        tmp159 = simd_and(tmp124, bytetest_b1_b3);
        struct_Lu.cc = simd_or(tmp159, struct_Lu.cc);
        bytetest_c6 = simd_and(tmp13, tmp39);
        bytetest_b5_b5 = simd_and(tmp70, tmp84);
        tmp160 = simd_and(tmp124, bytetest_b5_b5);
        struct_Lu.cc = simd_or(tmp160, struct_Lu.cc);
        bytetest_c6 = simd_and(tmp13, tmp39);
        tmp161 = simd_or(simd_and(basis_bits.bit_4, tmp141), simd_andc(tmp17, basis_bits.bit_4));
        bytetest_b7_b8 = simd_and(tmp70, tmp161);
        tmp162 = simd_and(tmp124, bytetest_b7_b8);
        struct_Lu.cc = simd_or(tmp162, struct_Lu.cc);
        bytetest_c6 = simd_and(tmp13, tmp39);
        bytetest_bc_bc = simd_and(tmp70, tmp47);
        tmp163 = simd_and(tmp124, bytetest_bc_bc);
        struct_Lu.cc = simd_or(tmp163, struct_Lu.cc);
        bytetest_c7 = simd_and(tmp13, tmp91);
        bytetest_84_84 = simd_and(tmp31, tmp30);
        tmp164 = simd_and(tmp21, bytetest_c7);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp164, carryQ.get_carry_in(5), tmp165));
        tmp166 = simd_and(tmp165, bytetest_84_84);
        struct_Lu.cc = simd_or(tmp166, struct_Lu.cc);
        bytetest_c7 = simd_and(tmp13, tmp91);
        bytetest_87_87 = simd_and(tmp31, tmp91);
        tmp167 = simd_and(tmp165, bytetest_87_87);
        struct_Lu.cc = simd_or(tmp167, struct_Lu.cc);
        bytetest_c7 = simd_and(tmp13, tmp91);
        bytetest_8a_8a = simd_and(tmp31, tmp44);
        tmp168 = simd_and(tmp165, bytetest_8a_8a);
        struct_Lu.cc = simd_or(tmp168, struct_Lu.cc);
        bytetest_c7 = simd_and(tmp13, tmp91);
        bytetest_8d_8d = simd_and(tmp31, tmp80);
        tmp169 = simd_and(tmp165, bytetest_8d_8d);
        struct_Lu.cc = simd_or(tmp169, struct_Lu.cc);
        bytetest_c7 = simd_and(tmp13, tmp91);
        bytetest_8f_8f = simd_and(tmp31, tmp82);
        tmp170 = simd_and(tmp165, bytetest_8f_8f);
        struct_Lu.cc = simd_or(tmp170, struct_Lu.cc);
        bytetest_c7 = simd_and(tmp13, tmp91);
        bytetest_91_91 = simd_and(tmp26, tmp85);
        tmp171 = simd_and(tmp165, bytetest_91_91);
        struct_Lu.cc = simd_or(tmp171, struct_Lu.cc);
        bytetest_c7 = simd_and(tmp13, tmp91);
        bytetest_93_93 = simd_and(tmp26, tmp14);
        tmp172 = simd_and(tmp165, bytetest_93_93);
        struct_Lu.cc = simd_or(tmp172, struct_Lu.cc);
        bytetest_c7 = simd_and(tmp13, tmp91);
        bytetest_95_95 = simd_and(tmp26, tmp84);
        tmp173 = simd_and(tmp165, bytetest_95_95);
        struct_Lu.cc = simd_or(tmp173, struct_Lu.cc);
        bytetest_c7 = simd_and(tmp13, tmp91);
        bytetest_97_97 = simd_and(tmp26, tmp91);
        tmp174 = simd_and(tmp165, bytetest_97_97);
        struct_Lu.cc = simd_or(tmp174, struct_Lu.cc);
        bytetest_c7 = simd_and(tmp13, tmp91);
        bytetest_99_99 = simd_and(tmp26, tmp76);
        tmp175 = simd_and(tmp165, bytetest_99_99);
        struct_Lu.cc = simd_or(tmp175, struct_Lu.cc);
        bytetest_c7 = simd_and(tmp13, tmp91);
        bytetest_9b_9b = simd_and(tmp26, tmp78);
        tmp176 = simd_and(tmp165, bytetest_9b_9b);
        struct_Lu.cc = simd_or(tmp176, struct_Lu.cc);
        bytetest_c7 = simd_and(tmp13, tmp91);
        bytetest_9e_9e = simd_and(tmp26, tmp49);
        tmp177 = simd_and(tmp165, bytetest_9e_9e);
        struct_Lu.cc = simd_or(tmp177, struct_Lu.cc);
        bytetest_c7 = simd_and(tmp13, tmp91);
        bytetest_a0_a0 = simd_andc(tmp60, tmp9);
        tmp178 = simd_and(tmp165, bytetest_a0_a0);
        struct_Lu.cc = simd_or(tmp178, struct_Lu.cc);
        bytetest_c7 = simd_and(tmp13, tmp91);
        bytetest_a2_a2 = simd_and(tmp60, tmp36);
        tmp179 = simd_and(tmp165, bytetest_a2_a2);
        struct_Lu.cc = simd_or(tmp179, struct_Lu.cc);
        bytetest_c7 = simd_and(tmp13, tmp91);
        bytetest_a4_a4 = simd_and(tmp60, tmp30);
        tmp180 = simd_and(tmp165, bytetest_a4_a4);
        struct_Lu.cc = simd_or(tmp180, struct_Lu.cc);
        bytetest_c7 = simd_and(tmp13, tmp91);
        bytetest_a6_a6 = simd_and(tmp60, tmp39);
        tmp181 = simd_and(tmp165, bytetest_a6_a6);
        struct_Lu.cc = simd_or(tmp181, struct_Lu.cc);
        bytetest_c7 = simd_and(tmp13, tmp91);
        bytetest_a8_a8 = simd_and(tmp60, tmp42);
        tmp182 = simd_and(tmp165, bytetest_a8_a8);
        struct_Lu.cc = simd_or(tmp182, struct_Lu.cc);
        bytetest_c7 = simd_and(tmp13, tmp91);
        bytetest_aa_aa = simd_and(tmp60, tmp44);
        tmp183 = simd_and(tmp165, bytetest_aa_aa);
        struct_Lu.cc = simd_or(tmp183, struct_Lu.cc);
        bytetest_c7 = simd_and(tmp13, tmp91);
        bytetest_ac_ac = simd_and(tmp60, tmp47);
        tmp184 = simd_and(tmp165, bytetest_ac_ac);
        struct_Lu.cc = simd_or(tmp184, struct_Lu.cc);
        bytetest_c7 = simd_and(tmp13, tmp91);
        bytetest_ae_ae = simd_and(tmp60, tmp49);
        tmp185 = simd_and(tmp165, bytetest_ae_ae);
        struct_Lu.cc = simd_or(tmp185, struct_Lu.cc);
        bytetest_c7 = simd_and(tmp13, tmp91);
        bytetest_b1_b1 = simd_and(tmp70, tmp85);
        tmp186 = simd_and(tmp165, bytetest_b1_b1);
        struct_Lu.cc = simd_or(tmp186, struct_Lu.cc);
        bytetest_c7 = simd_and(tmp13, tmp91);
        bytetest_b4_b4 = simd_and(tmp70, tmp30);
        tmp187 = simd_and(tmp165, bytetest_b4_b4);
        struct_Lu.cc = simd_or(tmp187, struct_Lu.cc);
        bytetest_c7 = simd_and(tmp13, tmp91);
        bytetest_b6_b8 = simd_and(tmp70, tmp143);
        tmp188 = simd_and(tmp165, bytetest_b6_b8);
        struct_Lu.cc = simd_or(tmp188, struct_Lu.cc);
        bytetest_c7 = simd_and(tmp13, tmp91);
        bytetest_ba_ba = simd_and(tmp70, tmp44);
        tmp189 = simd_and(tmp165, bytetest_ba_ba);
        struct_Lu.cc = simd_or(tmp189, struct_Lu.cc);
        bytetest_c7 = simd_and(tmp13, tmp91);
        bytetest_bc_bc = simd_and(tmp70, tmp47);
        tmp190 = simd_and(tmp165, bytetest_bc_bc);
        struct_Lu.cc = simd_or(tmp190, struct_Lu.cc);
        bytetest_c7 = simd_and(tmp13, tmp91);
        bytetest_be_be = simd_and(tmp70, tmp49);
        tmp191 = simd_and(tmp165, bytetest_be_be);
        struct_Lu.cc = simd_or(tmp191, struct_Lu.cc);
        bytetest_c8 = simd_and(tmp13, tmp42);
        bytetest_80_80 = simd_andc(tmp31, tmp9);
        tmp192 = simd_and(tmp21, bytetest_c8);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp192, carryQ.get_carry_in(6), tmp193));
        tmp194 = simd_and(tmp193, bytetest_80_80);
        struct_Lu.cc = simd_or(tmp194, struct_Lu.cc);
        bytetest_c8 = simd_and(tmp13, tmp42);
        bytetest_82_82 = simd_and(tmp31, tmp36);
        tmp195 = simd_and(tmp193, bytetest_82_82);
        struct_Lu.cc = simd_or(tmp195, struct_Lu.cc);
        bytetest_c8 = simd_and(tmp13, tmp42);
        bytetest_84_84 = simd_and(tmp31, tmp30);
        tmp196 = simd_and(tmp193, bytetest_84_84);
        struct_Lu.cc = simd_or(tmp196, struct_Lu.cc);
        bytetest_c8 = simd_and(tmp13, tmp42);
        bytetest_86_86 = simd_and(tmp31, tmp39);
        tmp197 = simd_and(tmp193, bytetest_86_86);
        struct_Lu.cc = simd_or(tmp197, struct_Lu.cc);
        bytetest_c8 = simd_and(tmp13, tmp42);
        bytetest_88_88 = simd_and(tmp31, tmp42);
        tmp198 = simd_and(tmp193, bytetest_88_88);
        struct_Lu.cc = simd_or(tmp198, struct_Lu.cc);
        bytetest_c8 = simd_and(tmp13, tmp42);
        bytetest_8a_8a = simd_and(tmp31, tmp44);
        tmp199 = simd_and(tmp193, bytetest_8a_8a);
        struct_Lu.cc = simd_or(tmp199, struct_Lu.cc);
        bytetest_c8 = simd_and(tmp13, tmp42);
        bytetest_8c_8c = simd_and(tmp31, tmp47);
        tmp200 = simd_and(tmp193, bytetest_8c_8c);
        struct_Lu.cc = simd_or(tmp200, struct_Lu.cc);
        bytetest_c8 = simd_and(tmp13, tmp42);
        bytetest_8e_8e = simd_and(tmp31, tmp49);
        tmp201 = simd_and(tmp193, bytetest_8e_8e);
        struct_Lu.cc = simd_or(tmp201, struct_Lu.cc);
        bytetest_c8 = simd_and(tmp13, tmp42);
        bytetest_90_90 = simd_andc(tmp26, tmp9);
        tmp202 = simd_and(tmp193, bytetest_90_90);
        struct_Lu.cc = simd_or(tmp202, struct_Lu.cc);
        bytetest_c8 = simd_and(tmp13, tmp42);
        bytetest_92_92 = simd_and(tmp26, tmp36);
        tmp203 = simd_and(tmp193, bytetest_92_92);
        struct_Lu.cc = simd_or(tmp203, struct_Lu.cc);
        bytetest_c8 = simd_and(tmp13, tmp42);
        bytetest_94_94 = simd_and(tmp26, tmp30);
        tmp204 = simd_and(tmp193, bytetest_94_94);
        struct_Lu.cc = simd_or(tmp204, struct_Lu.cc);
        bytetest_c8 = simd_and(tmp13, tmp42);
        bytetest_96_96 = simd_and(tmp26, tmp39);
        tmp205 = simd_and(tmp193, bytetest_96_96);
        struct_Lu.cc = simd_or(tmp205, struct_Lu.cc);
        bytetest_c8 = simd_and(tmp13, tmp42);
        bytetest_98_98 = simd_and(tmp26, tmp42);
        tmp206 = simd_and(tmp193, bytetest_98_98);
        struct_Lu.cc = simd_or(tmp206, struct_Lu.cc);
        bytetest_c8 = simd_and(tmp13, tmp42);
        bytetest_9a_9a = simd_and(tmp26, tmp44);
        tmp207 = simd_and(tmp193, bytetest_9a_9a);
        struct_Lu.cc = simd_or(tmp207, struct_Lu.cc);
        bytetest_c8 = simd_and(tmp13, tmp42);
        bytetest_9c_9c = simd_and(tmp26, tmp47);
        tmp208 = simd_and(tmp193, bytetest_9c_9c);
        struct_Lu.cc = simd_or(tmp208, struct_Lu.cc);
        bytetest_c8 = simd_and(tmp13, tmp42);
        bytetest_9e_9e = simd_and(tmp26, tmp49);
        tmp209 = simd_and(tmp193, bytetest_9e_9e);
        struct_Lu.cc = simd_or(tmp209, struct_Lu.cc);
        bytetest_c8 = simd_and(tmp13, tmp42);
        bytetest_a0_a0 = simd_andc(tmp60, tmp9);
        tmp210 = simd_and(tmp193, bytetest_a0_a0);
        struct_Lu.cc = simd_or(tmp210, struct_Lu.cc);
        bytetest_c8 = simd_and(tmp13, tmp42);
        bytetest_a2_a2 = simd_and(tmp60, tmp36);
        tmp211 = simd_and(tmp193, bytetest_a2_a2);
        struct_Lu.cc = simd_or(tmp211, struct_Lu.cc);
        bytetest_c8 = simd_and(tmp13, tmp42);
        bytetest_a4_a4 = simd_and(tmp60, tmp30);
        tmp212 = simd_and(tmp193, bytetest_a4_a4);
        struct_Lu.cc = simd_or(tmp212, struct_Lu.cc);
        bytetest_c8 = simd_and(tmp13, tmp42);
        bytetest_a6_a6 = simd_and(tmp60, tmp39);
        tmp213 = simd_and(tmp193, bytetest_a6_a6);
        struct_Lu.cc = simd_or(tmp213, struct_Lu.cc);
        bytetest_c8 = simd_and(tmp13, tmp42);
        bytetest_a8_a8 = simd_and(tmp60, tmp42);
        tmp214 = simd_and(tmp193, bytetest_a8_a8);
        struct_Lu.cc = simd_or(tmp214, struct_Lu.cc);
        bytetest_c8 = simd_and(tmp13, tmp42);
        bytetest_aa_aa = simd_and(tmp60, tmp44);
        tmp215 = simd_and(tmp193, bytetest_aa_aa);
        struct_Lu.cc = simd_or(tmp215, struct_Lu.cc);
        bytetest_c8 = simd_and(tmp13, tmp42);
        bytetest_ac_ac = simd_and(tmp60, tmp47);
        tmp216 = simd_and(tmp193, bytetest_ac_ac);
        struct_Lu.cc = simd_or(tmp216, struct_Lu.cc);
        bytetest_c8 = simd_and(tmp13, tmp42);
        bytetest_ae_ae = simd_and(tmp60, tmp49);
        tmp217 = simd_and(tmp193, bytetest_ae_ae);
        struct_Lu.cc = simd_or(tmp217, struct_Lu.cc);
        bytetest_c8 = simd_and(tmp13, tmp42);
        bytetest_b0_b0 = simd_andc(tmp70, tmp9);
        tmp218 = simd_and(tmp193, bytetest_b0_b0);
        struct_Lu.cc = simd_or(tmp218, struct_Lu.cc);
        bytetest_c8 = simd_and(tmp13, tmp42);
        bytetest_b2_b2 = simd_and(tmp70, tmp36);
        tmp219 = simd_and(tmp193, bytetest_b2_b2);
        struct_Lu.cc = simd_or(tmp219, struct_Lu.cc);
        bytetest_c8 = simd_and(tmp13, tmp42);
        tmp220 = simd_and(tmp41, basis_bits.bit_6);
        bytetest_ba_bb = simd_and(tmp70, tmp220);
        tmp221 = simd_and(tmp193, bytetest_ba_bb);
        struct_Lu.cc = simd_or(tmp221, struct_Lu.cc);
        bytetest_c8 = simd_and(tmp13, tmp42);
        tmp222 = simd_and(tmp70, tmp46);
        bytetest_bd_be = simd_and(tmp222, tmp122);
        tmp223 = simd_and(tmp193, bytetest_bd_be);
        struct_Lu.cc = simd_or(tmp223, struct_Lu.cc);
        bytetest_c9 = simd_and(tmp13, tmp76);
        bytetest_81_81 = simd_and(tmp31, tmp85);
        tmp224 = simd_and(tmp21, bytetest_c9);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp224, carryQ.get_carry_in(7), tmp225));
        tmp226 = simd_and(tmp225, bytetest_81_81);
        struct_Lu.cc = simd_or(tmp226, struct_Lu.cc);
        bytetest_c9 = simd_and(tmp13, tmp76);
        tmp227 = simd_andc(tmp31, basis_bits.bit_4);
        tmp228 = simd_not(tmp3);
        tmp229 = simd_or(simd_and(basis_bits.bit_5, tmp228), simd_andc(tmp3, basis_bits.bit_5));
        bytetest_83_86 = simd_and(tmp227, tmp229);
        tmp230 = simd_and(tmp225, bytetest_83_86);
        struct_Lu.cc = simd_or(tmp230, struct_Lu.cc);
        bytetest_c9 = simd_and(tmp13, tmp76);
        bytetest_88_88 = simd_and(tmp31, tmp42);
        tmp231 = simd_and(tmp225, bytetest_88_88);
        struct_Lu.cc = simd_or(tmp231, struct_Lu.cc);
        bytetest_c9 = simd_and(tmp13, tmp76);
        bytetest_8a_8a = simd_and(tmp31, tmp44);
        tmp232 = simd_and(tmp225, bytetest_8a_8a);
        struct_Lu.cc = simd_or(tmp232, struct_Lu.cc);
        bytetest_c9 = simd_and(tmp13, tmp76);
        bytetest_8c_8c = simd_and(tmp31, tmp47);
        tmp233 = simd_and(tmp225, bytetest_8c_8c);
        struct_Lu.cc = simd_or(tmp233, struct_Lu.cc);
        bytetest_c9 = simd_and(tmp13, tmp76);
        bytetest_8e_8e = simd_and(tmp31, tmp49);
        tmp234 = simd_and(tmp225, bytetest_8e_8e);
        struct_Lu.cc = simd_or(tmp234, struct_Lu.cc);
        bytetest_cd = simd_and(tmp13, tmp80);
        bytetest_b0_b0 = simd_andc(tmp70, tmp9);
        tmp235 = simd_and(tmp21, bytetest_cd);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(tmp235, carryQ.get_carry_in(8), tmp236));
        tmp237 = simd_and(tmp236, bytetest_b0_b0);
        struct_Lu.cc = simd_or(tmp237, struct_Lu.cc);
        bytetest_cd = simd_and(tmp13, tmp80);
        bytetest_b2_b2 = simd_and(tmp70, tmp36);
        tmp238 = simd_and(tmp236, bytetest_b2_b2);
        struct_Lu.cc = simd_or(tmp238, struct_Lu.cc);
        bytetest_cd = simd_and(tmp13, tmp80);
        bytetest_b6_b6 = simd_and(tmp70, tmp39);
        tmp239 = simd_and(tmp236, bytetest_b6_b6);
        struct_Lu.cc = simd_or(tmp239, struct_Lu.cc);
        bytetest_ce = simd_and(tmp13, tmp49);
        bytetest_86_86 = simd_and(tmp31, tmp39);
        tmp240 = simd_and(tmp21, bytetest_ce);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(tmp240, carryQ.get_carry_in(9), tmp241));
        tmp242 = simd_and(tmp241, bytetest_86_86);
        struct_Lu.cc = simd_or(tmp242, struct_Lu.cc);
        bytetest_ce = simd_and(tmp13, tmp49);
        bytetest_88_8a = simd_andc(tmp129, tmp3);
        tmp243 = simd_and(tmp241, bytetest_88_8a);
        struct_Lu.cc = simd_or(tmp243, struct_Lu.cc);
        bytetest_ce = simd_and(tmp13, tmp49);
        bytetest_8c_8c = simd_and(tmp31, tmp47);
        tmp244 = simd_and(tmp241, bytetest_8c_8c);
        struct_Lu.cc = simd_or(tmp244, struct_Lu.cc);
        bytetest_ce = simd_and(tmp13, tmp49);
        bytetest_8e_8f = simd_and(tmp31, tmp133);
        tmp245 = simd_and(tmp241, bytetest_8e_8f);
        struct_Lu.cc = simd_or(tmp245, struct_Lu.cc);
        bytetest_ce = simd_and(tmp13, tmp49);
        tmp246 = simd_or(basis_bits.bit_3, tmp131);
        tmp247 = simd_not(tmp246);
        tmp248 = simd_and(basis_bits.bit_3, tmp9);
        tmp249 = simd_or(simd_and(basis_bits.bit_2, tmp247), simd_andc(tmp248, basis_bits.bit_2));
        bytetest_91_a1 = simd_and(tmp15, tmp249);
        tmp250 = simd_and(tmp241, bytetest_91_a1);
        struct_Lu.cc = simd_or(tmp250, struct_Lu.cc);
        bytetest_ce = simd_and(tmp13, tmp49);
        tmp251 = simd_not(basis_bits.bit_5);
        tmp252 = simd_or(simd_and(basis_bits.bit_4, tmp251), simd_andc(tmp4, basis_bits.bit_4));
        bytetest_a3_ab = simd_and(tmp60, tmp252);
        tmp253 = simd_and(tmp241, bytetest_a3_ab);
        struct_Lu.cc = simd_or(tmp253, struct_Lu.cc);
        bytetest_cf = simd_and(tmp13, tmp82);
        bytetest_8f_8f = simd_and(tmp31, tmp82);
        tmp254 = simd_and(tmp21, bytetest_cf);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(tmp254, carryQ.get_carry_in(10), tmp255));
        tmp256 = simd_and(tmp255, bytetest_8f_8f);
        struct_Lu.cc = simd_or(tmp256, struct_Lu.cc);
        bytetest_cf = simd_and(tmp13, tmp82);
        tmp257 = simd_or(simd_and(basis_bits.bit_5, tmp137), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        bytetest_92_94 = simd_and(tmp136, tmp257);
        tmp258 = simd_and(tmp255, bytetest_92_94);
        struct_Lu.cc = simd_or(tmp258, struct_Lu.cc);
        bytetest_cf = simd_and(tmp13, tmp82);
        bytetest_98_98 = simd_and(tmp26, tmp42);
        tmp259 = simd_and(tmp255, bytetest_98_98);
        struct_Lu.cc = simd_or(tmp259, struct_Lu.cc);
        bytetest_cf = simd_and(tmp13, tmp82);
        bytetest_9a_9a = simd_and(tmp26, tmp44);
        tmp260 = simd_and(tmp255, bytetest_9a_9a);
        struct_Lu.cc = simd_or(tmp260, struct_Lu.cc);
        bytetest_cf = simd_and(tmp13, tmp82);
        bytetest_9c_9c = simd_and(tmp26, tmp47);
        tmp261 = simd_and(tmp255, bytetest_9c_9c);
        struct_Lu.cc = simd_or(tmp261, struct_Lu.cc);
        bytetest_cf = simd_and(tmp13, tmp82);
        bytetest_9e_9e = simd_and(tmp26, tmp49);
        tmp262 = simd_and(tmp255, bytetest_9e_9e);
        struct_Lu.cc = simd_or(tmp262, struct_Lu.cc);
        bytetest_cf = simd_and(tmp13, tmp82);
        bytetest_a0_a0 = simd_andc(tmp60, tmp9);
        tmp263 = simd_and(tmp255, bytetest_a0_a0);
        struct_Lu.cc = simd_or(tmp263, struct_Lu.cc);
        bytetest_cf = simd_and(tmp13, tmp82);
        bytetest_a2_a2 = simd_and(tmp60, tmp36);
        tmp264 = simd_and(tmp255, bytetest_a2_a2);
        struct_Lu.cc = simd_or(tmp264, struct_Lu.cc);
        bytetest_cf = simd_and(tmp13, tmp82);
        bytetest_a4_a4 = simd_and(tmp60, tmp30);
        tmp265 = simd_and(tmp255, bytetest_a4_a4);
        struct_Lu.cc = simd_or(tmp265, struct_Lu.cc);
        bytetest_cf = simd_and(tmp13, tmp82);
        bytetest_a6_a6 = simd_and(tmp60, tmp39);
        tmp266 = simd_and(tmp255, bytetest_a6_a6);
        struct_Lu.cc = simd_or(tmp266, struct_Lu.cc);
        bytetest_cf = simd_and(tmp13, tmp82);
        bytetest_a8_a8 = simd_and(tmp60, tmp42);
        tmp267 = simd_and(tmp255, bytetest_a8_a8);
        struct_Lu.cc = simd_or(tmp267, struct_Lu.cc);
        bytetest_cf = simd_and(tmp13, tmp82);
        bytetest_aa_aa = simd_and(tmp60, tmp44);
        tmp268 = simd_and(tmp255, bytetest_aa_aa);
        struct_Lu.cc = simd_or(tmp268, struct_Lu.cc);
        bytetest_cf = simd_and(tmp13, tmp82);
        bytetest_ac_ac = simd_and(tmp60, tmp47);
        tmp269 = simd_and(tmp255, bytetest_ac_ac);
        struct_Lu.cc = simd_or(tmp269, struct_Lu.cc);
        bytetest_cf = simd_and(tmp13, tmp82);
        bytetest_ae_ae = simd_and(tmp60, tmp49);
        tmp270 = simd_and(tmp255, bytetest_ae_ae);
        struct_Lu.cc = simd_or(tmp270, struct_Lu.cc);
        bytetest_cf = simd_and(tmp13, tmp82);
        bytetest_b4_b4 = simd_and(tmp70, tmp30);
        tmp271 = simd_and(tmp255, bytetest_b4_b4);
        struct_Lu.cc = simd_or(tmp271, struct_Lu.cc);
        bytetest_cf = simd_and(tmp13, tmp82);
        bytetest_b7_b7 = simd_and(tmp70, tmp91);
        tmp272 = simd_and(tmp255, bytetest_b7_b7);
        struct_Lu.cc = simd_or(tmp272, struct_Lu.cc);
        bytetest_cf = simd_and(tmp13, tmp82);
        tmp273 = simd_and(tmp70, tmp41);
        bytetest_b9_ba = simd_and(tmp273, tmp122);
        tmp274 = simd_and(tmp255, bytetest_b9_ba);
        struct_Lu.cc = simd_or(tmp274, struct_Lu.cc);
        tmp275 = simd_and(tmp11, tmp25);
        bytetest_d0 = simd_andc(tmp275, tmp9);
        bytetest_80_af = simd_andc(tmp15, tmp69);
        tmp276 = simd_and(tmp21, bytetest_d0);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(tmp276, carryQ.get_carry_in(11), tmp277));
        tmp278 = simd_and(tmp277, bytetest_80_af);
        bytetest_cf = simd_and(tmp13, tmp82);
        bytetest_bd_bf = simd_and(tmp222, tmp8);
        tmp279 = simd_and(tmp255, bytetest_bd_bf);
        tmp280 = simd_or(tmp279, tmp278);
        struct_Lu.cc = simd_or(tmp280, struct_Lu.cc);
        bytetest_d1 = simd_and(tmp275, tmp85);
        bytetest_a0_a0 = simd_andc(tmp60, tmp9);
        tmp281 = simd_and(tmp21, bytetest_d1);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(tmp281, carryQ.get_carry_in(12), tmp282));
        tmp283 = simd_and(tmp282, bytetest_a0_a0);
        struct_Lu.cc = simd_or(tmp283, struct_Lu.cc);
        bytetest_d1 = simd_and(tmp275, tmp85);
        bytetest_a2_a2 = simd_and(tmp60, tmp36);
        tmp284 = simd_and(tmp282, bytetest_a2_a2);
        struct_Lu.cc = simd_or(tmp284, struct_Lu.cc);
        bytetest_d1 = simd_and(tmp275, tmp85);
        bytetest_a4_a4 = simd_and(tmp60, tmp30);
        tmp285 = simd_and(tmp282, bytetest_a4_a4);
        struct_Lu.cc = simd_or(tmp285, struct_Lu.cc);
        bytetest_d1 = simd_and(tmp275, tmp85);
        bytetest_a6_a6 = simd_and(tmp60, tmp39);
        tmp286 = simd_and(tmp282, bytetest_a6_a6);
        struct_Lu.cc = simd_or(tmp286, struct_Lu.cc);
        bytetest_d1 = simd_and(tmp275, tmp85);
        bytetest_a8_a8 = simd_and(tmp60, tmp42);
        tmp287 = simd_and(tmp282, bytetest_a8_a8);
        struct_Lu.cc = simd_or(tmp287, struct_Lu.cc);
        bytetest_d1 = simd_and(tmp275, tmp85);
        bytetest_aa_aa = simd_and(tmp60, tmp44);
        tmp288 = simd_and(tmp282, bytetest_aa_aa);
        struct_Lu.cc = simd_or(tmp288, struct_Lu.cc);
        bytetest_d1 = simd_and(tmp275, tmp85);
        bytetest_ac_ac = simd_and(tmp60, tmp47);
        tmp289 = simd_and(tmp282, bytetest_ac_ac);
        struct_Lu.cc = simd_or(tmp289, struct_Lu.cc);
        bytetest_d1 = simd_and(tmp275, tmp85);
        bytetest_ae_ae = simd_and(tmp60, tmp49);
        tmp290 = simd_and(tmp282, bytetest_ae_ae);
        struct_Lu.cc = simd_or(tmp290, struct_Lu.cc);
        bytetest_d1 = simd_and(tmp275, tmp85);
        bytetest_b0_b0 = simd_andc(tmp70, tmp9);
        tmp291 = simd_and(tmp282, bytetest_b0_b0);
        struct_Lu.cc = simd_or(tmp291, struct_Lu.cc);
        bytetest_d1 = simd_and(tmp275, tmp85);
        bytetest_b2_b2 = simd_and(tmp70, tmp36);
        tmp292 = simd_and(tmp282, bytetest_b2_b2);
        struct_Lu.cc = simd_or(tmp292, struct_Lu.cc);
        bytetest_d1 = simd_and(tmp275, tmp85);
        bytetest_b4_b4 = simd_and(tmp70, tmp30);
        tmp293 = simd_and(tmp282, bytetest_b4_b4);
        struct_Lu.cc = simd_or(tmp293, struct_Lu.cc);
        bytetest_d1 = simd_and(tmp275, tmp85);
        bytetest_b6_b6 = simd_and(tmp70, tmp39);
        tmp294 = simd_and(tmp282, bytetest_b6_b6);
        struct_Lu.cc = simd_or(tmp294, struct_Lu.cc);
        bytetest_d1 = simd_and(tmp275, tmp85);
        bytetest_b8_b8 = simd_and(tmp70, tmp42);
        tmp295 = simd_and(tmp282, bytetest_b8_b8);
        struct_Lu.cc = simd_or(tmp295, struct_Lu.cc);
        bytetest_d1 = simd_and(tmp275, tmp85);
        bytetest_ba_ba = simd_and(tmp70, tmp44);
        tmp296 = simd_and(tmp282, bytetest_ba_ba);
        struct_Lu.cc = simd_or(tmp296, struct_Lu.cc);
        bytetest_d1 = simd_and(tmp275, tmp85);
        bytetest_bc_bc = simd_and(tmp70, tmp47);
        tmp297 = simd_and(tmp282, bytetest_bc_bc);
        struct_Lu.cc = simd_or(tmp297, struct_Lu.cc);
        bytetest_d1 = simd_and(tmp275, tmp85);
        bytetest_be_be = simd_and(tmp70, tmp49);
        tmp298 = simd_and(tmp282, bytetest_be_be);
        struct_Lu.cc = simd_or(tmp298, struct_Lu.cc);
        bytetest_d2 = simd_and(tmp275, tmp36);
        bytetest_80_80 = simd_andc(tmp31, tmp9);
        tmp299 = simd_and(tmp21, bytetest_d2);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(tmp299, carryQ.get_carry_in(13), tmp300));
        tmp301 = simd_and(tmp300, bytetest_80_80);
        struct_Lu.cc = simd_or(tmp301, struct_Lu.cc);
        bytetest_d2 = simd_and(tmp275, tmp36);
        bytetest_8a_8a = simd_and(tmp31, tmp44);
        tmp302 = simd_and(tmp300, bytetest_8a_8a);
        struct_Lu.cc = simd_or(tmp302, struct_Lu.cc);
        bytetest_d2 = simd_and(tmp275, tmp36);
        bytetest_8c_8c = simd_and(tmp31, tmp47);
        tmp303 = simd_and(tmp300, bytetest_8c_8c);
        struct_Lu.cc = simd_or(tmp303, struct_Lu.cc);
        bytetest_d2 = simd_and(tmp275, tmp36);
        bytetest_8e_8e = simd_and(tmp31, tmp49);
        tmp304 = simd_and(tmp300, bytetest_8e_8e);
        struct_Lu.cc = simd_or(tmp304, struct_Lu.cc);
        bytetest_d2 = simd_and(tmp275, tmp36);
        bytetest_90_90 = simd_andc(tmp26, tmp9);
        tmp305 = simd_and(tmp300, bytetest_90_90);
        struct_Lu.cc = simd_or(tmp305, struct_Lu.cc);
        bytetest_d2 = simd_and(tmp275, tmp36);
        bytetest_92_92 = simd_and(tmp26, tmp36);
        tmp306 = simd_and(tmp300, bytetest_92_92);
        struct_Lu.cc = simd_or(tmp306, struct_Lu.cc);
        bytetest_d2 = simd_and(tmp275, tmp36);
        bytetest_94_94 = simd_and(tmp26, tmp30);
        tmp307 = simd_and(tmp300, bytetest_94_94);
        struct_Lu.cc = simd_or(tmp307, struct_Lu.cc);
        bytetest_d2 = simd_and(tmp275, tmp36);
        bytetest_96_96 = simd_and(tmp26, tmp39);
        tmp308 = simd_and(tmp300, bytetest_96_96);
        struct_Lu.cc = simd_or(tmp308, struct_Lu.cc);
        bytetest_d2 = simd_and(tmp275, tmp36);
        bytetest_98_98 = simd_and(tmp26, tmp42);
        tmp309 = simd_and(tmp300, bytetest_98_98);
        struct_Lu.cc = simd_or(tmp309, struct_Lu.cc);
        bytetest_d2 = simd_and(tmp275, tmp36);
        bytetest_9a_9a = simd_and(tmp26, tmp44);
        tmp310 = simd_and(tmp300, bytetest_9a_9a);
        struct_Lu.cc = simd_or(tmp310, struct_Lu.cc);
        bytetest_d2 = simd_and(tmp275, tmp36);
        bytetest_9c_9c = simd_and(tmp26, tmp47);
        tmp311 = simd_and(tmp300, bytetest_9c_9c);
        struct_Lu.cc = simd_or(tmp311, struct_Lu.cc);
        bytetest_d2 = simd_and(tmp275, tmp36);
        bytetest_9e_9e = simd_and(tmp26, tmp49);
        tmp312 = simd_and(tmp300, bytetest_9e_9e);
        struct_Lu.cc = simd_or(tmp312, struct_Lu.cc);
        bytetest_d2 = simd_and(tmp275, tmp36);
        bytetest_a0_a0 = simd_andc(tmp60, tmp9);
        tmp313 = simd_and(tmp300, bytetest_a0_a0);
        struct_Lu.cc = simd_or(tmp313, struct_Lu.cc);
        bytetest_d2 = simd_and(tmp275, tmp36);
        bytetest_a2_a2 = simd_and(tmp60, tmp36);
        tmp314 = simd_and(tmp300, bytetest_a2_a2);
        struct_Lu.cc = simd_or(tmp314, struct_Lu.cc);
        bytetest_d2 = simd_and(tmp275, tmp36);
        bytetest_a4_a4 = simd_and(tmp60, tmp30);
        tmp315 = simd_and(tmp300, bytetest_a4_a4);
        struct_Lu.cc = simd_or(tmp315, struct_Lu.cc);
        bytetest_d2 = simd_and(tmp275, tmp36);
        bytetest_a6_a6 = simd_and(tmp60, tmp39);
        tmp316 = simd_and(tmp300, bytetest_a6_a6);
        struct_Lu.cc = simd_or(tmp316, struct_Lu.cc);
        bytetest_d2 = simd_and(tmp275, tmp36);
        bytetest_a8_a8 = simd_and(tmp60, tmp42);
        tmp317 = simd_and(tmp300, bytetest_a8_a8);
        struct_Lu.cc = simd_or(tmp317, struct_Lu.cc);
        bytetest_d2 = simd_and(tmp275, tmp36);
        bytetest_aa_aa = simd_and(tmp60, tmp44);
        tmp318 = simd_and(tmp300, bytetest_aa_aa);
        struct_Lu.cc = simd_or(tmp318, struct_Lu.cc);
        bytetest_d2 = simd_and(tmp275, tmp36);
        bytetest_ac_ac = simd_and(tmp60, tmp47);
        tmp319 = simd_and(tmp300, bytetest_ac_ac);
        struct_Lu.cc = simd_or(tmp319, struct_Lu.cc);
        bytetest_d2 = simd_and(tmp275, tmp36);
        bytetest_ae_ae = simd_and(tmp60, tmp49);
        tmp320 = simd_and(tmp300, bytetest_ae_ae);
        struct_Lu.cc = simd_or(tmp320, struct_Lu.cc);
        bytetest_d2 = simd_and(tmp275, tmp36);
        bytetest_b0_b0 = simd_andc(tmp70, tmp9);
        tmp321 = simd_and(tmp300, bytetest_b0_b0);
        struct_Lu.cc = simd_or(tmp321, struct_Lu.cc);
        bytetest_d2 = simd_and(tmp275, tmp36);
        bytetest_b2_b2 = simd_and(tmp70, tmp36);
        tmp322 = simd_and(tmp300, bytetest_b2_b2);
        struct_Lu.cc = simd_or(tmp322, struct_Lu.cc);
        bytetest_d2 = simd_and(tmp275, tmp36);
        bytetest_b4_b4 = simd_and(tmp70, tmp30);
        tmp323 = simd_and(tmp300, bytetest_b4_b4);
        struct_Lu.cc = simd_or(tmp323, struct_Lu.cc);
        bytetest_d2 = simd_and(tmp275, tmp36);
        bytetest_b6_b6 = simd_and(tmp70, tmp39);
        tmp324 = simd_and(tmp300, bytetest_b6_b6);
        struct_Lu.cc = simd_or(tmp324, struct_Lu.cc);
        bytetest_d2 = simd_and(tmp275, tmp36);
        bytetest_b8_b8 = simd_and(tmp70, tmp42);
        tmp325 = simd_and(tmp300, bytetest_b8_b8);
        struct_Lu.cc = simd_or(tmp325, struct_Lu.cc);
        bytetest_d2 = simd_and(tmp275, tmp36);
        bytetest_ba_ba = simd_and(tmp70, tmp44);
        tmp326 = simd_and(tmp300, bytetest_ba_ba);
        struct_Lu.cc = simd_or(tmp326, struct_Lu.cc);
        bytetest_d2 = simd_and(tmp275, tmp36);
        bytetest_bc_bc = simd_and(tmp70, tmp47);
        tmp327 = simd_and(tmp300, bytetest_bc_bc);
        struct_Lu.cc = simd_or(tmp327, struct_Lu.cc);
        bytetest_d2 = simd_and(tmp275, tmp36);
        bytetest_be_be = simd_and(tmp70, tmp49);
        tmp328 = simd_and(tmp300, bytetest_be_be);
        struct_Lu.cc = simd_or(tmp328, struct_Lu.cc);
        bytetest_d3 = simd_and(tmp275, tmp14);
        bytetest_80_81 = simd_andc(tmp31, tmp131);
        tmp329 = simd_and(tmp21, bytetest_d3);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(tmp329, carryQ.get_carry_in(14), tmp330));
        tmp331 = simd_and(tmp330, bytetest_80_81);
        struct_Lu.cc = simd_or(tmp331, struct_Lu.cc);
        bytetest_d3 = simd_and(tmp275, tmp14);
        bytetest_83_83 = simd_and(tmp31, tmp14);
        tmp332 = simd_and(tmp330, bytetest_83_83);
        struct_Lu.cc = simd_or(tmp332, struct_Lu.cc);
        bytetest_d3 = simd_and(tmp275, tmp14);
        bytetest_85_85 = simd_and(tmp31, tmp84);
        tmp333 = simd_and(tmp330, bytetest_85_85);
        struct_Lu.cc = simd_or(tmp333, struct_Lu.cc);
        bytetest_d3 = simd_and(tmp275, tmp14);
        bytetest_87_87 = simd_and(tmp31, tmp91);
        tmp334 = simd_and(tmp330, bytetest_87_87);
        struct_Lu.cc = simd_or(tmp334, struct_Lu.cc);
        bytetest_d3 = simd_and(tmp275, tmp14);
        bytetest_89_89 = simd_and(tmp31, tmp76);
        tmp335 = simd_and(tmp330, bytetest_89_89);
        struct_Lu.cc = simd_or(tmp335, struct_Lu.cc);
        bytetest_d3 = simd_and(tmp275, tmp14);
        bytetest_8b_8b = simd_and(tmp31, tmp78);
        tmp336 = simd_and(tmp330, bytetest_8b_8b);
        struct_Lu.cc = simd_or(tmp336, struct_Lu.cc);
        bytetest_d3 = simd_and(tmp275, tmp14);
        bytetest_8d_8d = simd_and(tmp31, tmp80);
        tmp337 = simd_and(tmp330, bytetest_8d_8d);
        struct_Lu.cc = simd_or(tmp337, struct_Lu.cc);
        bytetest_d3 = simd_and(tmp275, tmp14);
        bytetest_90_90 = simd_andc(tmp26, tmp9);
        tmp338 = simd_and(tmp330, bytetest_90_90);
        struct_Lu.cc = simd_or(tmp338, struct_Lu.cc);
        bytetest_d3 = simd_and(tmp275, tmp14);
        bytetest_92_92 = simd_and(tmp26, tmp36);
        tmp339 = simd_and(tmp330, bytetest_92_92);
        struct_Lu.cc = simd_or(tmp339, struct_Lu.cc);
        bytetest_d3 = simd_and(tmp275, tmp14);
        bytetest_94_94 = simd_and(tmp26, tmp30);
        tmp340 = simd_and(tmp330, bytetest_94_94);
        struct_Lu.cc = simd_or(tmp340, struct_Lu.cc);
        bytetest_d3 = simd_and(tmp275, tmp14);
        bytetest_96_96 = simd_and(tmp26, tmp39);
        tmp341 = simd_and(tmp330, bytetest_96_96);
        struct_Lu.cc = simd_or(tmp341, struct_Lu.cc);
        bytetest_d3 = simd_and(tmp275, tmp14);
        bytetest_98_98 = simd_and(tmp26, tmp42);
        tmp342 = simd_and(tmp330, bytetest_98_98);
        struct_Lu.cc = simd_or(tmp342, struct_Lu.cc);
        bytetest_d3 = simd_and(tmp275, tmp14);
        bytetest_9a_9a = simd_and(tmp26, tmp44);
        tmp343 = simd_and(tmp330, bytetest_9a_9a);
        struct_Lu.cc = simd_or(tmp343, struct_Lu.cc);
        bytetest_d3 = simd_and(tmp275, tmp14);
        bytetest_9c_9c = simd_and(tmp26, tmp47);
        tmp344 = simd_and(tmp330, bytetest_9c_9c);
        struct_Lu.cc = simd_or(tmp344, struct_Lu.cc);
        bytetest_d3 = simd_and(tmp275, tmp14);
        bytetest_9e_9e = simd_and(tmp26, tmp49);
        tmp345 = simd_and(tmp330, bytetest_9e_9e);
        struct_Lu.cc = simd_or(tmp345, struct_Lu.cc);
        bytetest_d3 = simd_and(tmp275, tmp14);
        bytetest_a0_a0 = simd_andc(tmp60, tmp9);
        tmp346 = simd_and(tmp330, bytetest_a0_a0);
        struct_Lu.cc = simd_or(tmp346, struct_Lu.cc);
        bytetest_d3 = simd_and(tmp275, tmp14);
        bytetest_a2_a2 = simd_and(tmp60, tmp36);
        tmp347 = simd_and(tmp330, bytetest_a2_a2);
        struct_Lu.cc = simd_or(tmp347, struct_Lu.cc);
        bytetest_d3 = simd_and(tmp275, tmp14);
        bytetest_a4_a4 = simd_and(tmp60, tmp30);
        tmp348 = simd_and(tmp330, bytetest_a4_a4);
        struct_Lu.cc = simd_or(tmp348, struct_Lu.cc);
        bytetest_d3 = simd_and(tmp275, tmp14);
        bytetest_a6_a6 = simd_and(tmp60, tmp39);
        tmp349 = simd_and(tmp330, bytetest_a6_a6);
        struct_Lu.cc = simd_or(tmp349, struct_Lu.cc);
        bytetest_d3 = simd_and(tmp275, tmp14);
        bytetest_a8_a8 = simd_and(tmp60, tmp42);
        tmp350 = simd_and(tmp330, bytetest_a8_a8);
        struct_Lu.cc = simd_or(tmp350, struct_Lu.cc);
        bytetest_d3 = simd_and(tmp275, tmp14);
        bytetest_aa_aa = simd_and(tmp60, tmp44);
        tmp351 = simd_and(tmp330, bytetest_aa_aa);
        struct_Lu.cc = simd_or(tmp351, struct_Lu.cc);
        bytetest_d3 = simd_and(tmp275, tmp14);
        bytetest_ac_ac = simd_and(tmp60, tmp47);
        tmp352 = simd_and(tmp330, bytetest_ac_ac);
        struct_Lu.cc = simd_or(tmp352, struct_Lu.cc);
        bytetest_d3 = simd_and(tmp275, tmp14);
        bytetest_ae_ae = simd_and(tmp60, tmp49);
        tmp353 = simd_and(tmp330, bytetest_ae_ae);
        struct_Lu.cc = simd_or(tmp353, struct_Lu.cc);
        bytetest_d3 = simd_and(tmp275, tmp14);
        bytetest_b0_b0 = simd_andc(tmp70, tmp9);
        tmp354 = simd_and(tmp330, bytetest_b0_b0);
        struct_Lu.cc = simd_or(tmp354, struct_Lu.cc);
        bytetest_d3 = simd_and(tmp275, tmp14);
        bytetest_b2_b2 = simd_and(tmp70, tmp36);
        tmp355 = simd_and(tmp330, bytetest_b2_b2);
        struct_Lu.cc = simd_or(tmp355, struct_Lu.cc);
        bytetest_d3 = simd_and(tmp275, tmp14);
        bytetest_b4_b4 = simd_and(tmp70, tmp30);
        tmp356 = simd_and(tmp330, bytetest_b4_b4);
        struct_Lu.cc = simd_or(tmp356, struct_Lu.cc);
        bytetest_d3 = simd_and(tmp275, tmp14);
        bytetest_b6_b6 = simd_and(tmp70, tmp39);
        tmp357 = simd_and(tmp330, bytetest_b6_b6);
        struct_Lu.cc = simd_or(tmp357, struct_Lu.cc);
        bytetest_d3 = simd_and(tmp275, tmp14);
        bytetest_b8_b8 = simd_and(tmp70, tmp42);
        tmp358 = simd_and(tmp330, bytetest_b8_b8);
        struct_Lu.cc = simd_or(tmp358, struct_Lu.cc);
        bytetest_d3 = simd_and(tmp275, tmp14);
        bytetest_ba_ba = simd_and(tmp70, tmp44);
        tmp359 = simd_and(tmp330, bytetest_ba_ba);
        struct_Lu.cc = simd_or(tmp359, struct_Lu.cc);
        bytetest_d3 = simd_and(tmp275, tmp14);
        bytetest_bc_bc = simd_and(tmp70, tmp47);
        tmp360 = simd_and(tmp330, bytetest_bc_bc);
        struct_Lu.cc = simd_or(tmp360, struct_Lu.cc);
        bytetest_d3 = simd_and(tmp275, tmp14);
        bytetest_be_be = simd_and(tmp70, tmp49);
        tmp361 = simd_and(tmp330, bytetest_be_be);
        struct_Lu.cc = simd_or(tmp361, struct_Lu.cc);
        bytetest_d4 = simd_and(tmp275, tmp30);
        bytetest_80_80 = simd_andc(tmp31, tmp9);
        tmp362 = simd_and(tmp21, bytetest_d4);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(tmp362, carryQ.get_carry_in(15), tmp363));
        tmp364 = simd_and(tmp363, bytetest_80_80);
        struct_Lu.cc = simd_or(tmp364, struct_Lu.cc);
        bytetest_d4 = simd_and(tmp275, tmp30);
        bytetest_82_82 = simd_and(tmp31, tmp36);
        tmp365 = simd_and(tmp363, bytetest_82_82);
        struct_Lu.cc = simd_or(tmp365, struct_Lu.cc);
        bytetest_d4 = simd_and(tmp275, tmp30);
        bytetest_84_84 = simd_and(tmp31, tmp30);
        tmp366 = simd_and(tmp363, bytetest_84_84);
        struct_Lu.cc = simd_or(tmp366, struct_Lu.cc);
        bytetest_d4 = simd_and(tmp275, tmp30);
        bytetest_86_86 = simd_and(tmp31, tmp39);
        tmp367 = simd_and(tmp363, bytetest_86_86);
        struct_Lu.cc = simd_or(tmp367, struct_Lu.cc);
        bytetest_d4 = simd_and(tmp275, tmp30);
        bytetest_88_88 = simd_and(tmp31, tmp42);
        tmp368 = simd_and(tmp363, bytetest_88_88);
        struct_Lu.cc = simd_or(tmp368, struct_Lu.cc);
        bytetest_d4 = simd_and(tmp275, tmp30);
        bytetest_8a_8a = simd_and(tmp31, tmp44);
        tmp369 = simd_and(tmp363, bytetest_8a_8a);
        struct_Lu.cc = simd_or(tmp369, struct_Lu.cc);
        bytetest_d4 = simd_and(tmp275, tmp30);
        bytetest_8c_8c = simd_and(tmp31, tmp47);
        tmp370 = simd_and(tmp363, bytetest_8c_8c);
        struct_Lu.cc = simd_or(tmp370, struct_Lu.cc);
        bytetest_d4 = simd_and(tmp275, tmp30);
        bytetest_8e_8e = simd_and(tmp31, tmp49);
        tmp371 = simd_and(tmp363, bytetest_8e_8e);
        struct_Lu.cc = simd_or(tmp371, struct_Lu.cc);
        bytetest_d4 = simd_and(tmp275, tmp30);
        bytetest_90_90 = simd_andc(tmp26, tmp9);
        tmp372 = simd_and(tmp363, bytetest_90_90);
        struct_Lu.cc = simd_or(tmp372, struct_Lu.cc);
        bytetest_d4 = simd_and(tmp275, tmp30);
        bytetest_92_92 = simd_and(tmp26, tmp36);
        tmp373 = simd_and(tmp363, bytetest_92_92);
        struct_Lu.cc = simd_or(tmp373, struct_Lu.cc);
        bytetest_d4 = simd_and(tmp275, tmp30);
        bytetest_94_94 = simd_and(tmp26, tmp30);
        tmp374 = simd_and(tmp363, bytetest_94_94);
        struct_Lu.cc = simd_or(tmp374, struct_Lu.cc);
        bytetest_d4 = simd_and(tmp275, tmp30);
        bytetest_96_96 = simd_and(tmp26, tmp39);
        tmp375 = simd_and(tmp363, bytetest_96_96);
        struct_Lu.cc = simd_or(tmp375, struct_Lu.cc);
        bytetest_d4 = simd_and(tmp275, tmp30);
        bytetest_98_98 = simd_and(tmp26, tmp42);
        tmp376 = simd_and(tmp363, bytetest_98_98);
        struct_Lu.cc = simd_or(tmp376, struct_Lu.cc);
        bytetest_d4 = simd_and(tmp275, tmp30);
        bytetest_9a_9a = simd_and(tmp26, tmp44);
        tmp377 = simd_and(tmp363, bytetest_9a_9a);
        struct_Lu.cc = simd_or(tmp377, struct_Lu.cc);
        bytetest_d4 = simd_and(tmp275, tmp30);
        bytetest_9c_9c = simd_and(tmp26, tmp47);
        tmp378 = simd_and(tmp363, bytetest_9c_9c);
        struct_Lu.cc = simd_or(tmp378, struct_Lu.cc);
        bytetest_d4 = simd_and(tmp275, tmp30);
        bytetest_9e_9e = simd_and(tmp26, tmp49);
        tmp379 = simd_and(tmp363, bytetest_9e_9e);
        struct_Lu.cc = simd_or(tmp379, struct_Lu.cc);
        bytetest_d4 = simd_and(tmp275, tmp30);
        bytetest_a0_a0 = simd_andc(tmp60, tmp9);
        tmp380 = simd_and(tmp363, bytetest_a0_a0);
        struct_Lu.cc = simd_or(tmp380, struct_Lu.cc);
        bytetest_d4 = simd_and(tmp275, tmp30);
        bytetest_a2_a2 = simd_and(tmp60, tmp36);
        tmp381 = simd_and(tmp363, bytetest_a2_a2);
        struct_Lu.cc = simd_or(tmp381, struct_Lu.cc);
        bytetest_d4 = simd_and(tmp275, tmp30);
        bytetest_a4_a4 = simd_and(tmp60, tmp30);
        tmp382 = simd_and(tmp363, bytetest_a4_a4);
        struct_Lu.cc = simd_or(tmp382, struct_Lu.cc);
        bytetest_d4 = simd_and(tmp275, tmp30);
        bytetest_a6_a6 = simd_and(tmp60, tmp39);
        tmp383 = simd_and(tmp363, bytetest_a6_a6);
        struct_Lu.cc = simd_or(tmp383, struct_Lu.cc);
        bytetest_d5 = simd_and(tmp275, tmp84);
        bytetest_80_96 = simd_andc(tmp16, tmp19);
        tmp384 = simd_and(tmp21, bytetest_d5);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(tmp384, carryQ.get_carry_in(16), tmp385));
        tmp386 = simd_and(tmp385, bytetest_80_96);
        bytetest_d4 = simd_and(tmp275, tmp30);
        tmp387 = simd_or(basis_bits.bit_4, tmp140);
        bytetest_b1_bf = simd_and(tmp70, tmp387);
        tmp388 = simd_and(tmp363, bytetest_b1_bf);
        tmp389 = simd_or(tmp388, tmp386);
        struct_Lu.cc = simd_or(tmp389, struct_Lu.cc);
        tmp390 = simd_and(tmp11, tmp59);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_83 = simd_and(tmp31, tmp14);
        bytetest_80_85 = simd_andc(tmp227, tmp142);
        tmp391 = simd_and(tmp21, bytetest_e1);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(tmp391, carryQ.get_carry_in(17), tmp392));
        tmp393 = simd_and(tmp392, bytetest_83);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(tmp393, carryQ.get_carry_in(18), tmp394));
        tmp395 = simd_and(tmp394, bytetest_80_85);
        bytetest_82 = simd_and(tmp31, tmp36);
        bytetest_a0_bf = simd_and(tmp15, basis_bits.bit_2);
        tmp396 = simd_and(tmp392, bytetest_82);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(tmp396, carryQ.get_carry_in(19), tmp397));
        tmp398 = simd_and(tmp397, bytetest_a0_bf);
        tmp399 = simd_or(tmp398, tmp395);
        struct_Lu.cc = simd_or(tmp399, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_83 = simd_and(tmp31, tmp14);
        bytetest_87_87 = simd_and(tmp31, tmp91);
        tmp400 = simd_and(tmp394, bytetest_87_87);
        struct_Lu.cc = simd_or(tmp400, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_83 = simd_and(tmp31, tmp14);
        bytetest_8d_8d = simd_and(tmp31, tmp80);
        tmp401 = simd_and(tmp394, bytetest_8d_8d);
        struct_Lu.cc = simd_or(tmp401, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b8 = simd_and(tmp70, tmp42);
        bytetest_80_80 = simd_andc(tmp31, tmp9);
        tmp402 = simd_and(tmp392, bytetest_b8);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(tmp402, carryQ.get_carry_in(20), tmp403));
        tmp404 = simd_and(tmp403, bytetest_80_80);
        struct_Lu.cc = simd_or(tmp404, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b8 = simd_and(tmp70, tmp42);
        bytetest_82_82 = simd_and(tmp31, tmp36);
        tmp405 = simd_and(tmp403, bytetest_82_82);
        struct_Lu.cc = simd_or(tmp405, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b8 = simd_and(tmp70, tmp42);
        bytetest_84_84 = simd_and(tmp31, tmp30);
        tmp406 = simd_and(tmp403, bytetest_84_84);
        struct_Lu.cc = simd_or(tmp406, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b8 = simd_and(tmp70, tmp42);
        bytetest_86_86 = simd_and(tmp31, tmp39);
        tmp407 = simd_and(tmp403, bytetest_86_86);
        struct_Lu.cc = simd_or(tmp407, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b8 = simd_and(tmp70, tmp42);
        bytetest_88_88 = simd_and(tmp31, tmp42);
        tmp408 = simd_and(tmp403, bytetest_88_88);
        struct_Lu.cc = simd_or(tmp408, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b8 = simd_and(tmp70, tmp42);
        bytetest_8a_8a = simd_and(tmp31, tmp44);
        tmp409 = simd_and(tmp403, bytetest_8a_8a);
        struct_Lu.cc = simd_or(tmp409, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b8 = simd_and(tmp70, tmp42);
        bytetest_8c_8c = simd_and(tmp31, tmp47);
        tmp410 = simd_and(tmp403, bytetest_8c_8c);
        struct_Lu.cc = simd_or(tmp410, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b8 = simd_and(tmp70, tmp42);
        bytetest_8e_8e = simd_and(tmp31, tmp49);
        tmp411 = simd_and(tmp403, bytetest_8e_8e);
        struct_Lu.cc = simd_or(tmp411, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b8 = simd_and(tmp70, tmp42);
        bytetest_90_90 = simd_andc(tmp26, tmp9);
        tmp412 = simd_and(tmp403, bytetest_90_90);
        struct_Lu.cc = simd_or(tmp412, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b8 = simd_and(tmp70, tmp42);
        bytetest_92_92 = simd_and(tmp26, tmp36);
        tmp413 = simd_and(tmp403, bytetest_92_92);
        struct_Lu.cc = simd_or(tmp413, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b8 = simd_and(tmp70, tmp42);
        bytetest_94_94 = simd_and(tmp26, tmp30);
        tmp414 = simd_and(tmp403, bytetest_94_94);
        struct_Lu.cc = simd_or(tmp414, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b8 = simd_and(tmp70, tmp42);
        bytetest_96_96 = simd_and(tmp26, tmp39);
        tmp415 = simd_and(tmp403, bytetest_96_96);
        struct_Lu.cc = simd_or(tmp415, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b8 = simd_and(tmp70, tmp42);
        bytetest_98_98 = simd_and(tmp26, tmp42);
        tmp416 = simd_and(tmp403, bytetest_98_98);
        struct_Lu.cc = simd_or(tmp416, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b8 = simd_and(tmp70, tmp42);
        bytetest_9a_9a = simd_and(tmp26, tmp44);
        tmp417 = simd_and(tmp403, bytetest_9a_9a);
        struct_Lu.cc = simd_or(tmp417, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b8 = simd_and(tmp70, tmp42);
        bytetest_9c_9c = simd_and(tmp26, tmp47);
        tmp418 = simd_and(tmp403, bytetest_9c_9c);
        struct_Lu.cc = simd_or(tmp418, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b8 = simd_and(tmp70, tmp42);
        bytetest_9e_9e = simd_and(tmp26, tmp49);
        tmp419 = simd_and(tmp403, bytetest_9e_9e);
        struct_Lu.cc = simd_or(tmp419, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b8 = simd_and(tmp70, tmp42);
        bytetest_a0_a0 = simd_andc(tmp60, tmp9);
        tmp420 = simd_and(tmp403, bytetest_a0_a0);
        struct_Lu.cc = simd_or(tmp420, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b8 = simd_and(tmp70, tmp42);
        bytetest_a2_a2 = simd_and(tmp60, tmp36);
        tmp421 = simd_and(tmp403, bytetest_a2_a2);
        struct_Lu.cc = simd_or(tmp421, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b8 = simd_and(tmp70, tmp42);
        bytetest_a4_a4 = simd_and(tmp60, tmp30);
        tmp422 = simd_and(tmp403, bytetest_a4_a4);
        struct_Lu.cc = simd_or(tmp422, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b8 = simd_and(tmp70, tmp42);
        bytetest_a6_a6 = simd_and(tmp60, tmp39);
        tmp423 = simd_and(tmp403, bytetest_a6_a6);
        struct_Lu.cc = simd_or(tmp423, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b8 = simd_and(tmp70, tmp42);
        bytetest_a8_a8 = simd_and(tmp60, tmp42);
        tmp424 = simd_and(tmp403, bytetest_a8_a8);
        struct_Lu.cc = simd_or(tmp424, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b8 = simd_and(tmp70, tmp42);
        bytetest_aa_aa = simd_and(tmp60, tmp44);
        tmp425 = simd_and(tmp403, bytetest_aa_aa);
        struct_Lu.cc = simd_or(tmp425, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b8 = simd_and(tmp70, tmp42);
        bytetest_ac_ac = simd_and(tmp60, tmp47);
        tmp426 = simd_and(tmp403, bytetest_ac_ac);
        struct_Lu.cc = simd_or(tmp426, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b8 = simd_and(tmp70, tmp42);
        bytetest_ae_ae = simd_and(tmp60, tmp49);
        tmp427 = simd_and(tmp403, bytetest_ae_ae);
        struct_Lu.cc = simd_or(tmp427, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b8 = simd_and(tmp70, tmp42);
        bytetest_b0_b0 = simd_andc(tmp70, tmp9);
        tmp428 = simd_and(tmp403, bytetest_b0_b0);
        struct_Lu.cc = simd_or(tmp428, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b8 = simd_and(tmp70, tmp42);
        bytetest_b2_b2 = simd_and(tmp70, tmp36);
        tmp429 = simd_and(tmp403, bytetest_b2_b2);
        struct_Lu.cc = simd_or(tmp429, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b8 = simd_and(tmp70, tmp42);
        bytetest_b4_b4 = simd_and(tmp70, tmp30);
        tmp430 = simd_and(tmp403, bytetest_b4_b4);
        struct_Lu.cc = simd_or(tmp430, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b8 = simd_and(tmp70, tmp42);
        bytetest_b6_b6 = simd_and(tmp70, tmp39);
        tmp431 = simd_and(tmp403, bytetest_b6_b6);
        struct_Lu.cc = simd_or(tmp431, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b8 = simd_and(tmp70, tmp42);
        bytetest_b8_b8 = simd_and(tmp70, tmp42);
        tmp432 = simd_and(tmp403, bytetest_b8_b8);
        struct_Lu.cc = simd_or(tmp432, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b8 = simd_and(tmp70, tmp42);
        bytetest_ba_ba = simd_and(tmp70, tmp44);
        tmp433 = simd_and(tmp403, bytetest_ba_ba);
        struct_Lu.cc = simd_or(tmp433, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b8 = simd_and(tmp70, tmp42);
        bytetest_bc_bc = simd_and(tmp70, tmp47);
        tmp434 = simd_and(tmp403, bytetest_bc_bc);
        struct_Lu.cc = simd_or(tmp434, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b8 = simd_and(tmp70, tmp42);
        bytetest_be_be = simd_and(tmp70, tmp49);
        tmp435 = simd_and(tmp403, bytetest_be_be);
        struct_Lu.cc = simd_or(tmp435, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b9 = simd_and(tmp70, tmp76);
        bytetest_80_80 = simd_andc(tmp31, tmp9);
        tmp436 = simd_and(tmp392, bytetest_b9);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(tmp436, carryQ.get_carry_in(21), tmp437));
        tmp438 = simd_and(tmp437, bytetest_80_80);
        struct_Lu.cc = simd_or(tmp438, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b9 = simd_and(tmp70, tmp76);
        bytetest_82_82 = simd_and(tmp31, tmp36);
        tmp439 = simd_and(tmp437, bytetest_82_82);
        struct_Lu.cc = simd_or(tmp439, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b9 = simd_and(tmp70, tmp76);
        bytetest_84_84 = simd_and(tmp31, tmp30);
        tmp440 = simd_and(tmp437, bytetest_84_84);
        struct_Lu.cc = simd_or(tmp440, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b9 = simd_and(tmp70, tmp76);
        bytetest_86_86 = simd_and(tmp31, tmp39);
        tmp441 = simd_and(tmp437, bytetest_86_86);
        struct_Lu.cc = simd_or(tmp441, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b9 = simd_and(tmp70, tmp76);
        bytetest_88_88 = simd_and(tmp31, tmp42);
        tmp442 = simd_and(tmp437, bytetest_88_88);
        struct_Lu.cc = simd_or(tmp442, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b9 = simd_and(tmp70, tmp76);
        bytetest_8a_8a = simd_and(tmp31, tmp44);
        tmp443 = simd_and(tmp437, bytetest_8a_8a);
        struct_Lu.cc = simd_or(tmp443, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b9 = simd_and(tmp70, tmp76);
        bytetest_8c_8c = simd_and(tmp31, tmp47);
        tmp444 = simd_and(tmp437, bytetest_8c_8c);
        struct_Lu.cc = simd_or(tmp444, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b9 = simd_and(tmp70, tmp76);
        bytetest_8e_8e = simd_and(tmp31, tmp49);
        tmp445 = simd_and(tmp437, bytetest_8e_8e);
        struct_Lu.cc = simd_or(tmp445, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b9 = simd_and(tmp70, tmp76);
        bytetest_90_90 = simd_andc(tmp26, tmp9);
        tmp446 = simd_and(tmp437, bytetest_90_90);
        struct_Lu.cc = simd_or(tmp446, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b9 = simd_and(tmp70, tmp76);
        bytetest_92_92 = simd_and(tmp26, tmp36);
        tmp447 = simd_and(tmp437, bytetest_92_92);
        struct_Lu.cc = simd_or(tmp447, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b9 = simd_and(tmp70, tmp76);
        bytetest_94_94 = simd_and(tmp26, tmp30);
        tmp448 = simd_and(tmp437, bytetest_94_94);
        struct_Lu.cc = simd_or(tmp448, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b9 = simd_and(tmp70, tmp76);
        bytetest_96_96 = simd_and(tmp26, tmp39);
        tmp449 = simd_and(tmp437, bytetest_96_96);
        struct_Lu.cc = simd_or(tmp449, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b9 = simd_and(tmp70, tmp76);
        bytetest_98_98 = simd_and(tmp26, tmp42);
        tmp450 = simd_and(tmp437, bytetest_98_98);
        struct_Lu.cc = simd_or(tmp450, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b9 = simd_and(tmp70, tmp76);
        bytetest_9a_9a = simd_and(tmp26, tmp44);
        tmp451 = simd_and(tmp437, bytetest_9a_9a);
        struct_Lu.cc = simd_or(tmp451, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b9 = simd_and(tmp70, tmp76);
        bytetest_9c_9c = simd_and(tmp26, tmp47);
        tmp452 = simd_and(tmp437, bytetest_9c_9c);
        struct_Lu.cc = simd_or(tmp452, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b9 = simd_and(tmp70, tmp76);
        bytetest_9e_9e = simd_and(tmp26, tmp49);
        tmp453 = simd_and(tmp437, bytetest_9e_9e);
        struct_Lu.cc = simd_or(tmp453, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b9 = simd_and(tmp70, tmp76);
        bytetest_a0_a0 = simd_andc(tmp60, tmp9);
        tmp454 = simd_and(tmp437, bytetest_a0_a0);
        struct_Lu.cc = simd_or(tmp454, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b9 = simd_and(tmp70, tmp76);
        bytetest_a2_a2 = simd_and(tmp60, tmp36);
        tmp455 = simd_and(tmp437, bytetest_a2_a2);
        struct_Lu.cc = simd_or(tmp455, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b9 = simd_and(tmp70, tmp76);
        bytetest_a4_a4 = simd_and(tmp60, tmp30);
        tmp456 = simd_and(tmp437, bytetest_a4_a4);
        struct_Lu.cc = simd_or(tmp456, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b9 = simd_and(tmp70, tmp76);
        bytetest_a6_a6 = simd_and(tmp60, tmp39);
        tmp457 = simd_and(tmp437, bytetest_a6_a6);
        struct_Lu.cc = simd_or(tmp457, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b9 = simd_and(tmp70, tmp76);
        bytetest_a8_a8 = simd_and(tmp60, tmp42);
        tmp458 = simd_and(tmp437, bytetest_a8_a8);
        struct_Lu.cc = simd_or(tmp458, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b9 = simd_and(tmp70, tmp76);
        bytetest_aa_aa = simd_and(tmp60, tmp44);
        tmp459 = simd_and(tmp437, bytetest_aa_aa);
        struct_Lu.cc = simd_or(tmp459, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b9 = simd_and(tmp70, tmp76);
        bytetest_ac_ac = simd_and(tmp60, tmp47);
        tmp460 = simd_and(tmp437, bytetest_ac_ac);
        struct_Lu.cc = simd_or(tmp460, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b9 = simd_and(tmp70, tmp76);
        bytetest_ae_ae = simd_and(tmp60, tmp49);
        tmp461 = simd_and(tmp437, bytetest_ae_ae);
        struct_Lu.cc = simd_or(tmp461, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b9 = simd_and(tmp70, tmp76);
        bytetest_b0_b0 = simd_andc(tmp70, tmp9);
        tmp462 = simd_and(tmp437, bytetest_b0_b0);
        struct_Lu.cc = simd_or(tmp462, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b9 = simd_and(tmp70, tmp76);
        bytetest_b2_b2 = simd_and(tmp70, tmp36);
        tmp463 = simd_and(tmp437, bytetest_b2_b2);
        struct_Lu.cc = simd_or(tmp463, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b9 = simd_and(tmp70, tmp76);
        bytetest_b4_b4 = simd_and(tmp70, tmp30);
        tmp464 = simd_and(tmp437, bytetest_b4_b4);
        struct_Lu.cc = simd_or(tmp464, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b9 = simd_and(tmp70, tmp76);
        bytetest_b6_b6 = simd_and(tmp70, tmp39);
        tmp465 = simd_and(tmp437, bytetest_b6_b6);
        struct_Lu.cc = simd_or(tmp465, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b9 = simd_and(tmp70, tmp76);
        bytetest_b8_b8 = simd_and(tmp70, tmp42);
        tmp466 = simd_and(tmp437, bytetest_b8_b8);
        struct_Lu.cc = simd_or(tmp466, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b9 = simd_and(tmp70, tmp76);
        bytetest_ba_ba = simd_and(tmp70, tmp44);
        tmp467 = simd_and(tmp437, bytetest_ba_ba);
        struct_Lu.cc = simd_or(tmp467, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b9 = simd_and(tmp70, tmp76);
        bytetest_bc_bc = simd_and(tmp70, tmp47);
        tmp468 = simd_and(tmp437, bytetest_bc_bc);
        struct_Lu.cc = simd_or(tmp468, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b9 = simd_and(tmp70, tmp76);
        bytetest_be_be = simd_and(tmp70, tmp49);
        tmp469 = simd_and(tmp437, bytetest_be_be);
        struct_Lu.cc = simd_or(tmp469, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_ba = simd_and(tmp70, tmp44);
        bytetest_80_80 = simd_andc(tmp31, tmp9);
        tmp470 = simd_and(tmp392, bytetest_ba);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(tmp470, carryQ.get_carry_in(22), tmp471));
        tmp472 = simd_and(tmp471, bytetest_80_80);
        struct_Lu.cc = simd_or(tmp472, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_ba = simd_and(tmp70, tmp44);
        bytetest_82_82 = simd_and(tmp31, tmp36);
        tmp473 = simd_and(tmp471, bytetest_82_82);
        struct_Lu.cc = simd_or(tmp473, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_ba = simd_and(tmp70, tmp44);
        bytetest_84_84 = simd_and(tmp31, tmp30);
        tmp474 = simd_and(tmp471, bytetest_84_84);
        struct_Lu.cc = simd_or(tmp474, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_ba = simd_and(tmp70, tmp44);
        bytetest_86_86 = simd_and(tmp31, tmp39);
        tmp475 = simd_and(tmp471, bytetest_86_86);
        struct_Lu.cc = simd_or(tmp475, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_ba = simd_and(tmp70, tmp44);
        bytetest_88_88 = simd_and(tmp31, tmp42);
        tmp476 = simd_and(tmp471, bytetest_88_88);
        struct_Lu.cc = simd_or(tmp476, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_ba = simd_and(tmp70, tmp44);
        bytetest_8a_8a = simd_and(tmp31, tmp44);
        tmp477 = simd_and(tmp471, bytetest_8a_8a);
        struct_Lu.cc = simd_or(tmp477, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_ba = simd_and(tmp70, tmp44);
        bytetest_8c_8c = simd_and(tmp31, tmp47);
        tmp478 = simd_and(tmp471, bytetest_8c_8c);
        struct_Lu.cc = simd_or(tmp478, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_ba = simd_and(tmp70, tmp44);
        bytetest_8e_8e = simd_and(tmp31, tmp49);
        tmp479 = simd_and(tmp471, bytetest_8e_8e);
        struct_Lu.cc = simd_or(tmp479, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_ba = simd_and(tmp70, tmp44);
        bytetest_90_90 = simd_andc(tmp26, tmp9);
        tmp480 = simd_and(tmp471, bytetest_90_90);
        struct_Lu.cc = simd_or(tmp480, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_ba = simd_and(tmp70, tmp44);
        bytetest_92_92 = simd_and(tmp26, tmp36);
        tmp481 = simd_and(tmp471, bytetest_92_92);
        struct_Lu.cc = simd_or(tmp481, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_ba = simd_and(tmp70, tmp44);
        bytetest_94_94 = simd_and(tmp26, tmp30);
        tmp482 = simd_and(tmp471, bytetest_94_94);
        struct_Lu.cc = simd_or(tmp482, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_ba = simd_and(tmp70, tmp44);
        bytetest_9e_9e = simd_and(tmp26, tmp49);
        tmp483 = simd_and(tmp471, bytetest_9e_9e);
        struct_Lu.cc = simd_or(tmp483, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_ba = simd_and(tmp70, tmp44);
        bytetest_a0_a0 = simd_andc(tmp60, tmp9);
        tmp484 = simd_and(tmp471, bytetest_a0_a0);
        struct_Lu.cc = simd_or(tmp484, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_ba = simd_and(tmp70, tmp44);
        bytetest_a2_a2 = simd_and(tmp60, tmp36);
        tmp485 = simd_and(tmp471, bytetest_a2_a2);
        struct_Lu.cc = simd_or(tmp485, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_ba = simd_and(tmp70, tmp44);
        bytetest_a4_a4 = simd_and(tmp60, tmp30);
        tmp486 = simd_and(tmp471, bytetest_a4_a4);
        struct_Lu.cc = simd_or(tmp486, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_ba = simd_and(tmp70, tmp44);
        bytetest_a6_a6 = simd_and(tmp60, tmp39);
        tmp487 = simd_and(tmp471, bytetest_a6_a6);
        struct_Lu.cc = simd_or(tmp487, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_ba = simd_and(tmp70, tmp44);
        bytetest_a8_a8 = simd_and(tmp60, tmp42);
        tmp488 = simd_and(tmp471, bytetest_a8_a8);
        struct_Lu.cc = simd_or(tmp488, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_ba = simd_and(tmp70, tmp44);
        bytetest_aa_aa = simd_and(tmp60, tmp44);
        tmp489 = simd_and(tmp471, bytetest_aa_aa);
        struct_Lu.cc = simd_or(tmp489, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_ba = simd_and(tmp70, tmp44);
        bytetest_ac_ac = simd_and(tmp60, tmp47);
        tmp490 = simd_and(tmp471, bytetest_ac_ac);
        struct_Lu.cc = simd_or(tmp490, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_ba = simd_and(tmp70, tmp44);
        bytetest_ae_ae = simd_and(tmp60, tmp49);
        tmp491 = simd_and(tmp471, bytetest_ae_ae);
        struct_Lu.cc = simd_or(tmp491, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_ba = simd_and(tmp70, tmp44);
        bytetest_b0_b0 = simd_andc(tmp70, tmp9);
        tmp492 = simd_and(tmp471, bytetest_b0_b0);
        struct_Lu.cc = simd_or(tmp492, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_ba = simd_and(tmp70, tmp44);
        bytetest_b2_b2 = simd_and(tmp70, tmp36);
        tmp493 = simd_and(tmp471, bytetest_b2_b2);
        struct_Lu.cc = simd_or(tmp493, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_ba = simd_and(tmp70, tmp44);
        bytetest_b4_b4 = simd_and(tmp70, tmp30);
        tmp494 = simd_and(tmp471, bytetest_b4_b4);
        struct_Lu.cc = simd_or(tmp494, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_ba = simd_and(tmp70, tmp44);
        bytetest_b6_b6 = simd_and(tmp70, tmp39);
        tmp495 = simd_and(tmp471, bytetest_b6_b6);
        struct_Lu.cc = simd_or(tmp495, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_ba = simd_and(tmp70, tmp44);
        bytetest_b8_b8 = simd_and(tmp70, tmp42);
        tmp496 = simd_and(tmp471, bytetest_b8_b8);
        struct_Lu.cc = simd_or(tmp496, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_ba = simd_and(tmp70, tmp44);
        bytetest_ba_ba = simd_and(tmp70, tmp44);
        tmp497 = simd_and(tmp471, bytetest_ba_ba);
        struct_Lu.cc = simd_or(tmp497, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_ba = simd_and(tmp70, tmp44);
        bytetest_bc_bc = simd_and(tmp70, tmp47);
        tmp498 = simd_and(tmp471, bytetest_bc_bc);
        struct_Lu.cc = simd_or(tmp498, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_ba = simd_and(tmp70, tmp44);
        bytetest_be_be = simd_and(tmp70, tmp49);
        tmp499 = simd_and(tmp471, bytetest_be_be);
        struct_Lu.cc = simd_or(tmp499, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bb = simd_and(tmp70, tmp78);
        bytetest_80_80 = simd_andc(tmp31, tmp9);
        tmp500 = simd_and(tmp392, bytetest_bb);
        carryQ.cq[23] = carryout2carry(pablo_blk_Advance(tmp500, carryQ.get_carry_in(23), tmp501));
        tmp502 = simd_and(tmp501, bytetest_80_80);
        struct_Lu.cc = simd_or(tmp502, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bb = simd_and(tmp70, tmp78);
        bytetest_82_82 = simd_and(tmp31, tmp36);
        tmp503 = simd_and(tmp501, bytetest_82_82);
        struct_Lu.cc = simd_or(tmp503, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bb = simd_and(tmp70, tmp78);
        bytetest_84_84 = simd_and(tmp31, tmp30);
        tmp504 = simd_and(tmp501, bytetest_84_84);
        struct_Lu.cc = simd_or(tmp504, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bb = simd_and(tmp70, tmp78);
        bytetest_86_86 = simd_and(tmp31, tmp39);
        tmp505 = simd_and(tmp501, bytetest_86_86);
        struct_Lu.cc = simd_or(tmp505, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bb = simd_and(tmp70, tmp78);
        bytetest_88_88 = simd_and(tmp31, tmp42);
        tmp506 = simd_and(tmp501, bytetest_88_88);
        struct_Lu.cc = simd_or(tmp506, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bb = simd_and(tmp70, tmp78);
        bytetest_8a_8a = simd_and(tmp31, tmp44);
        tmp507 = simd_and(tmp501, bytetest_8a_8a);
        struct_Lu.cc = simd_or(tmp507, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bb = simd_and(tmp70, tmp78);
        bytetest_8c_8c = simd_and(tmp31, tmp47);
        tmp508 = simd_and(tmp501, bytetest_8c_8c);
        struct_Lu.cc = simd_or(tmp508, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bb = simd_and(tmp70, tmp78);
        bytetest_8e_8e = simd_and(tmp31, tmp49);
        tmp509 = simd_and(tmp501, bytetest_8e_8e);
        struct_Lu.cc = simd_or(tmp509, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bb = simd_and(tmp70, tmp78);
        bytetest_90_90 = simd_andc(tmp26, tmp9);
        tmp510 = simd_and(tmp501, bytetest_90_90);
        struct_Lu.cc = simd_or(tmp510, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bb = simd_and(tmp70, tmp78);
        bytetest_92_92 = simd_and(tmp26, tmp36);
        tmp511 = simd_and(tmp501, bytetest_92_92);
        struct_Lu.cc = simd_or(tmp511, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bb = simd_and(tmp70, tmp78);
        bytetest_94_94 = simd_and(tmp26, tmp30);
        tmp512 = simd_and(tmp501, bytetest_94_94);
        struct_Lu.cc = simd_or(tmp512, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bb = simd_and(tmp70, tmp78);
        bytetest_96_96 = simd_and(tmp26, tmp39);
        tmp513 = simd_and(tmp501, bytetest_96_96);
        struct_Lu.cc = simd_or(tmp513, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bb = simd_and(tmp70, tmp78);
        bytetest_98_98 = simd_and(tmp26, tmp42);
        tmp514 = simd_and(tmp501, bytetest_98_98);
        struct_Lu.cc = simd_or(tmp514, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bb = simd_and(tmp70, tmp78);
        bytetest_9a_9a = simd_and(tmp26, tmp44);
        tmp515 = simd_and(tmp501, bytetest_9a_9a);
        struct_Lu.cc = simd_or(tmp515, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bb = simd_and(tmp70, tmp78);
        bytetest_9c_9c = simd_and(tmp26, tmp47);
        tmp516 = simd_and(tmp501, bytetest_9c_9c);
        struct_Lu.cc = simd_or(tmp516, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bb = simd_and(tmp70, tmp78);
        bytetest_9e_9e = simd_and(tmp26, tmp49);
        tmp517 = simd_and(tmp501, bytetest_9e_9e);
        struct_Lu.cc = simd_or(tmp517, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bb = simd_and(tmp70, tmp78);
        bytetest_a0_a0 = simd_andc(tmp60, tmp9);
        tmp518 = simd_and(tmp501, bytetest_a0_a0);
        struct_Lu.cc = simd_or(tmp518, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bb = simd_and(tmp70, tmp78);
        bytetest_a2_a2 = simd_and(tmp60, tmp36);
        tmp519 = simd_and(tmp501, bytetest_a2_a2);
        struct_Lu.cc = simd_or(tmp519, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bb = simd_and(tmp70, tmp78);
        bytetest_a4_a4 = simd_and(tmp60, tmp30);
        tmp520 = simd_and(tmp501, bytetest_a4_a4);
        struct_Lu.cc = simd_or(tmp520, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bb = simd_and(tmp70, tmp78);
        bytetest_a6_a6 = simd_and(tmp60, tmp39);
        tmp521 = simd_and(tmp501, bytetest_a6_a6);
        struct_Lu.cc = simd_or(tmp521, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bb = simd_and(tmp70, tmp78);
        bytetest_a8_a8 = simd_and(tmp60, tmp42);
        tmp522 = simd_and(tmp501, bytetest_a8_a8);
        struct_Lu.cc = simd_or(tmp522, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bb = simd_and(tmp70, tmp78);
        bytetest_aa_aa = simd_and(tmp60, tmp44);
        tmp523 = simd_and(tmp501, bytetest_aa_aa);
        struct_Lu.cc = simd_or(tmp523, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bb = simd_and(tmp70, tmp78);
        bytetest_ac_ac = simd_and(tmp60, tmp47);
        tmp524 = simd_and(tmp501, bytetest_ac_ac);
        struct_Lu.cc = simd_or(tmp524, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bb = simd_and(tmp70, tmp78);
        bytetest_ae_ae = simd_and(tmp60, tmp49);
        tmp525 = simd_and(tmp501, bytetest_ae_ae);
        struct_Lu.cc = simd_or(tmp525, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bb = simd_and(tmp70, tmp78);
        bytetest_b0_b0 = simd_andc(tmp70, tmp9);
        tmp526 = simd_and(tmp501, bytetest_b0_b0);
        struct_Lu.cc = simd_or(tmp526, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bb = simd_and(tmp70, tmp78);
        bytetest_b2_b2 = simd_and(tmp70, tmp36);
        tmp527 = simd_and(tmp501, bytetest_b2_b2);
        struct_Lu.cc = simd_or(tmp527, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bb = simd_and(tmp70, tmp78);
        bytetest_b4_b4 = simd_and(tmp70, tmp30);
        tmp528 = simd_and(tmp501, bytetest_b4_b4);
        struct_Lu.cc = simd_or(tmp528, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bb = simd_and(tmp70, tmp78);
        bytetest_b6_b6 = simd_and(tmp70, tmp39);
        tmp529 = simd_and(tmp501, bytetest_b6_b6);
        struct_Lu.cc = simd_or(tmp529, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bb = simd_and(tmp70, tmp78);
        bytetest_b8_b8 = simd_and(tmp70, tmp42);
        tmp530 = simd_and(tmp501, bytetest_b8_b8);
        struct_Lu.cc = simd_or(tmp530, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bb = simd_and(tmp70, tmp78);
        bytetest_ba_ba = simd_and(tmp70, tmp44);
        tmp531 = simd_and(tmp501, bytetest_ba_ba);
        struct_Lu.cc = simd_or(tmp531, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bb = simd_and(tmp70, tmp78);
        bytetest_bc_bc = simd_and(tmp70, tmp47);
        tmp532 = simd_and(tmp501, bytetest_bc_bc);
        struct_Lu.cc = simd_or(tmp532, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bb = simd_and(tmp70, tmp78);
        bytetest_be_be = simd_and(tmp70, tmp49);
        tmp533 = simd_and(tmp501, bytetest_be_be);
        struct_Lu.cc = simd_or(tmp533, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bc = simd_and(tmp70, tmp47);
        bytetest_88_8f = simd_and(tmp31, basis_bits.bit_4);
        tmp534 = simd_and(tmp392, bytetest_bc);
        carryQ.cq[24] = carryout2carry(pablo_blk_Advance(tmp534, carryQ.get_carry_in(24), tmp535));
        tmp536 = simd_and(tmp535, bytetest_88_8f);
        struct_Lu.cc = simd_or(tmp536, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bc = simd_and(tmp70, tmp47);
        bytetest_98_9d = simd_andc(tmp27, tmp142);
        tmp537 = simd_and(tmp535, bytetest_98_9d);
        struct_Lu.cc = simd_or(tmp537, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bc = simd_and(tmp70, tmp47);
        bytetest_a8_af = simd_and(tmp60, basis_bits.bit_4);
        tmp538 = simd_and(tmp535, bytetest_a8_af);
        struct_Lu.cc = simd_or(tmp538, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bc = simd_and(tmp70, tmp47);
        bytetest_b8_bf = simd_and(tmp70, basis_bits.bit_4);
        tmp539 = simd_and(tmp535, bytetest_b8_bf);
        struct_Lu.cc = simd_or(tmp539, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bd = simd_and(tmp70, tmp80);
        bytetest_88_8d = simd_andc(bytetest_88_8f, tmp142);
        tmp540 = simd_and(tmp392, bytetest_bd);
        carryQ.cq[25] = carryout2carry(pablo_blk_Advance(tmp540, carryQ.get_carry_in(25), tmp541));
        tmp542 = simd_and(tmp541, bytetest_88_8d);
        struct_Lu.cc = simd_or(tmp542, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bd = simd_and(tmp70, tmp80);
        bytetest_99_99 = simd_and(tmp26, tmp76);
        tmp543 = simd_and(tmp541, bytetest_99_99);
        struct_Lu.cc = simd_or(tmp543, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bd = simd_and(tmp70, tmp80);
        bytetest_9b_9b = simd_and(tmp26, tmp78);
        tmp544 = simd_and(tmp541, bytetest_9b_9b);
        struct_Lu.cc = simd_or(tmp544, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bd = simd_and(tmp70, tmp80);
        bytetest_9d_9d = simd_and(tmp26, tmp80);
        tmp545 = simd_and(tmp541, bytetest_9d_9d);
        struct_Lu.cc = simd_or(tmp545, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bd = simd_and(tmp70, tmp80);
        bytetest_9f_9f = simd_and(tmp26, tmp82);
        tmp546 = simd_and(tmp541, bytetest_9f_9f);
        struct_Lu.cc = simd_or(tmp546, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bd = simd_and(tmp70, tmp80);
        bytetest_a8_af = simd_and(tmp60, basis_bits.bit_4);
        tmp547 = simd_and(tmp541, bytetest_a8_af);
        struct_Lu.cc = simd_or(tmp547, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_be = simd_and(tmp70, tmp49);
        bytetest_b8_bb = simd_and(tmp70, tmp41);
        tmp548 = simd_and(tmp392, bytetest_be);
        carryQ.cq[26] = carryout2carry(pablo_blk_Advance(tmp548, carryQ.get_carry_in(26), tmp549));
        tmp550 = simd_and(tmp549, bytetest_b8_bb);
        struct_Lu.cc = simd_or(tmp550, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bf = simd_and(tmp70, tmp82);
        bytetest_88_8b = simd_and(tmp31, tmp41);
        tmp551 = simd_and(tmp392, bytetest_bf);
        carryQ.cq[27] = carryout2carry(pablo_blk_Advance(tmp551, carryQ.get_carry_in(27), tmp552));
        tmp553 = simd_and(tmp552, bytetest_88_8b);
        struct_Lu.cc = simd_or(tmp553, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bf = simd_and(tmp70, tmp82);
        bytetest_98_9b = simd_and(tmp26, tmp41);
        tmp554 = simd_and(tmp552, bytetest_98_9b);
        struct_Lu.cc = simd_or(tmp554, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bf = simd_and(tmp70, tmp82);
        tmp555 = simd_and(basis_bits.bit_5, tmp8);
        bytetest_a8_ac = simd_andc(bytetest_a8_af, tmp555);
        tmp556 = simd_and(tmp552, bytetest_a8_ac);
        struct_Lu.cc = simd_or(tmp556, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bf = simd_and(tmp70, tmp82);
        bytetest_b8_bb = simd_and(tmp70, tmp41);
        tmp557 = simd_and(tmp552, bytetest_b8_bb);
        struct_Lu.cc = simd_or(tmp557, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_84 = simd_and(tmp31, tmp30);
        bytetest_82_82 = simd_and(tmp31, tmp36);
        tmp558 = simd_and(tmp21, bytetest_e2);
        carryQ.cq[28] = carryout2carry(pablo_blk_Advance(tmp558, carryQ.get_carry_in(28), tmp559));
        tmp560 = simd_and(tmp559, bytetest_84);
        carryQ.cq[29] = carryout2carry(pablo_blk_Advance(tmp560, carryQ.get_carry_in(29), tmp561));
        tmp562 = simd_and(tmp561, bytetest_82_82);
        struct_Lu.cc = simd_or(tmp562, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_84 = simd_and(tmp31, tmp30);
        bytetest_87_87 = simd_and(tmp31, tmp91);
        tmp563 = simd_and(tmp561, bytetest_87_87);
        struct_Lu.cc = simd_or(tmp563, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_84 = simd_and(tmp31, tmp30);
        tmp564 = simd_not(basis_bits.bit_6);
        tmp565 = simd_or(simd_and(basis_bits.bit_5, tmp564), simd_andc(tmp3, basis_bits.bit_5));
        bytetest_8b_8d = simd_and(bytetest_88_8f, tmp565);
        tmp566 = simd_and(tmp561, bytetest_8b_8d);
        struct_Lu.cc = simd_or(tmp566, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_84 = simd_and(tmp31, tmp30);
        tmp567 = simd_andc(tmp26, tmp7);
        bytetest_90_92 = simd_andc(tmp567, tmp3);
        tmp568 = simd_and(tmp561, bytetest_90_92);
        struct_Lu.cc = simd_or(tmp568, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_84 = simd_and(tmp31, tmp30);
        bytetest_95_95 = simd_and(tmp26, tmp84);
        tmp569 = simd_and(tmp561, bytetest_95_95);
        struct_Lu.cc = simd_or(tmp569, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_84 = simd_and(tmp31, tmp30);
        tmp570 = simd_or(simd_and(basis_bits.bit_5, tmp564), simd_andc(tmp8, basis_bits.bit_5));
        bytetest_99_9d = simd_and(tmp27, tmp570);
        tmp571 = simd_and(tmp561, bytetest_99_9d);
        struct_Lu.cc = simd_or(tmp571, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_84 = simd_and(tmp31, tmp30);
        bytetest_a4_a4 = simd_and(tmp60, tmp30);
        tmp572 = simd_and(tmp561, bytetest_a4_a4);
        struct_Lu.cc = simd_or(tmp572, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_84 = simd_and(tmp31, tmp30);
        bytetest_a6_a6 = simd_and(tmp60, tmp39);
        tmp573 = simd_and(tmp561, bytetest_a6_a6);
        struct_Lu.cc = simd_or(tmp573, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_84 = simd_and(tmp31, tmp30);
        bytetest_a8_a8 = simd_and(tmp60, tmp42);
        tmp574 = simd_and(tmp561, bytetest_a8_a8);
        struct_Lu.cc = simd_or(tmp574, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_84 = simd_and(tmp31, tmp30);
        tmp575 = simd_or(simd_and(basis_bits.bit_5, tmp564), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        bytetest_aa_ad = simd_and(bytetest_a8_af, tmp575);
        tmp576 = simd_and(tmp561, bytetest_aa_ad);
        struct_Lu.cc = simd_or(tmp576, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_84 = simd_and(tmp31, tmp30);
        bytetest_b0_b3 = simd_andc(tmp70, tmp7);
        tmp577 = simd_and(tmp561, bytetest_b0_b3);
        struct_Lu.cc = simd_or(tmp577, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_84 = simd_and(tmp31, tmp30);
        bytetest_be_bf = simd_and(tmp70, tmp133);
        tmp578 = simd_and(tmp561, bytetest_be_bf);
        struct_Lu.cc = simd_or(tmp578, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_85 = simd_and(tmp31, tmp84);
        bytetest_85_85 = simd_and(tmp31, tmp84);
        tmp579 = simd_and(tmp559, bytetest_85);
        carryQ.cq[30] = carryout2carry(pablo_blk_Advance(tmp579, carryQ.get_carry_in(30), tmp580));
        tmp581 = simd_and(tmp580, bytetest_85_85);
        struct_Lu.cc = simd_or(tmp581, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_86 = simd_and(tmp31, tmp39);
        bytetest_83_83 = simd_and(tmp31, tmp14);
        tmp582 = simd_and(tmp559, bytetest_86);
        carryQ.cq[31] = carryout2carry(pablo_blk_Advance(tmp582, carryQ.get_carry_in(31), tmp583));
        tmp584 = simd_and(tmp583, bytetest_83_83);
        struct_Lu.cc = simd_or(tmp584, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b0 = simd_andc(tmp70, tmp9);
        tmp585 = simd_or(basis_bits.bit_3, tmp82);
        tmp586 = simd_and(basis_bits.bit_2, tmp585);
        bytetest_80_ae = simd_andc(tmp15, tmp586);
        tmp587 = simd_and(tmp559, bytetest_b0);
        carryQ.cq[32] = carryout2carry(pablo_blk_Advance(tmp587, carryQ.get_carry_in(32), tmp588));
        tmp589 = simd_and(tmp588, bytetest_80_ae);
        struct_Lu.cc = simd_or(tmp589, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b1 = simd_and(tmp70, tmp85);
        bytetest_a0_a0 = simd_andc(tmp60, tmp9);
        tmp590 = simd_and(tmp559, bytetest_b1);
        carryQ.cq[33] = carryout2carry(pablo_blk_Advance(tmp590, carryQ.get_carry_in(33), tmp591));
        tmp592 = simd_and(tmp591, bytetest_a0_a0);
        struct_Lu.cc = simd_or(tmp592, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b1 = simd_and(tmp70, tmp85);
        tmp593 = simd_andc(tmp60, basis_bits.bit_4);
        bytetest_a2_a4 = simd_and(tmp593, tmp257);
        tmp594 = simd_and(tmp591, bytetest_a2_a4);
        struct_Lu.cc = simd_or(tmp594, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b1 = simd_and(tmp70, tmp85);
        bytetest_a7_a7 = simd_and(tmp60, tmp91);
        tmp595 = simd_and(tmp591, bytetest_a7_a7);
        struct_Lu.cc = simd_or(tmp595, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b1 = simd_and(tmp70, tmp85);
        bytetest_a9_a9 = simd_and(tmp60, tmp76);
        tmp596 = simd_and(tmp591, bytetest_a9_a9);
        struct_Lu.cc = simd_or(tmp596, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b1 = simd_and(tmp70, tmp85);
        bytetest_ab_ab = simd_and(tmp60, tmp78);
        tmp597 = simd_and(tmp591, bytetest_ab_ab);
        struct_Lu.cc = simd_or(tmp597, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b1 = simd_and(tmp70, tmp85);
        tmp598 = simd_not(tmp9);
        tmp599 = simd_and(tmp46, tmp8);
        tmp600 = simd_or(simd_and(basis_bits.bit_3, tmp598), simd_andc(tmp599, basis_bits.bit_3));
        bytetest_ad_b0 = simd_and(bytetest_a0_bf, tmp600);
        tmp601 = simd_and(tmp591, bytetest_ad_b0);
        struct_Lu.cc = simd_or(tmp601, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b1 = simd_and(tmp70, tmp85);
        bytetest_b2_b2 = simd_and(tmp70, tmp36);
        tmp602 = simd_and(tmp591, bytetest_b2_b2);
        struct_Lu.cc = simd_or(tmp602, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b1 = simd_and(tmp70, tmp85);
        bytetest_b5_b5 = simd_and(tmp70, tmp84);
        tmp603 = simd_and(tmp591, bytetest_b5_b5);
        struct_Lu.cc = simd_or(tmp603, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b2 = simd_and(tmp70, tmp36);
        bytetest_80_80 = simd_andc(tmp31, tmp9);
        tmp604 = simd_and(tmp559, bytetest_b2);
        carryQ.cq[34] = carryout2carry(pablo_blk_Advance(tmp604, carryQ.get_carry_in(34), tmp605));
        tmp606 = simd_and(tmp605, bytetest_80_80);
        bytetest_b1 = simd_and(tmp70, tmp85);
        bytetest_be_bf = simd_and(tmp70, tmp133);
        tmp607 = simd_and(tmp591, bytetest_be_bf);
        tmp608 = simd_or(tmp607, tmp606);
        struct_Lu.cc = simd_or(tmp608, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b2 = simd_and(tmp70, tmp36);
        bytetest_82_82 = simd_and(tmp31, tmp36);
        tmp609 = simd_and(tmp605, bytetest_82_82);
        struct_Lu.cc = simd_or(tmp609, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b2 = simd_and(tmp70, tmp36);
        bytetest_84_84 = simd_and(tmp31, tmp30);
        tmp610 = simd_and(tmp605, bytetest_84_84);
        struct_Lu.cc = simd_or(tmp610, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b2 = simd_and(tmp70, tmp36);
        bytetest_86_86 = simd_and(tmp31, tmp39);
        tmp611 = simd_and(tmp605, bytetest_86_86);
        struct_Lu.cc = simd_or(tmp611, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b2 = simd_and(tmp70, tmp36);
        bytetest_88_88 = simd_and(tmp31, tmp42);
        tmp612 = simd_and(tmp605, bytetest_88_88);
        struct_Lu.cc = simd_or(tmp612, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b2 = simd_and(tmp70, tmp36);
        bytetest_8a_8a = simd_and(tmp31, tmp44);
        tmp613 = simd_and(tmp605, bytetest_8a_8a);
        struct_Lu.cc = simd_or(tmp613, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b2 = simd_and(tmp70, tmp36);
        bytetest_8c_8c = simd_and(tmp31, tmp47);
        tmp614 = simd_and(tmp605, bytetest_8c_8c);
        struct_Lu.cc = simd_or(tmp614, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b2 = simd_and(tmp70, tmp36);
        bytetest_8e_8e = simd_and(tmp31, tmp49);
        tmp615 = simd_and(tmp605, bytetest_8e_8e);
        struct_Lu.cc = simd_or(tmp615, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b2 = simd_and(tmp70, tmp36);
        bytetest_90_90 = simd_andc(tmp26, tmp9);
        tmp616 = simd_and(tmp605, bytetest_90_90);
        struct_Lu.cc = simd_or(tmp616, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b2 = simd_and(tmp70, tmp36);
        bytetest_92_92 = simd_and(tmp26, tmp36);
        tmp617 = simd_and(tmp605, bytetest_92_92);
        struct_Lu.cc = simd_or(tmp617, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b2 = simd_and(tmp70, tmp36);
        bytetest_94_94 = simd_and(tmp26, tmp30);
        tmp618 = simd_and(tmp605, bytetest_94_94);
        struct_Lu.cc = simd_or(tmp618, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b2 = simd_and(tmp70, tmp36);
        bytetest_96_96 = simd_and(tmp26, tmp39);
        tmp619 = simd_and(tmp605, bytetest_96_96);
        struct_Lu.cc = simd_or(tmp619, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b2 = simd_and(tmp70, tmp36);
        bytetest_98_98 = simd_and(tmp26, tmp42);
        tmp620 = simd_and(tmp605, bytetest_98_98);
        struct_Lu.cc = simd_or(tmp620, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b2 = simd_and(tmp70, tmp36);
        bytetest_9a_9a = simd_and(tmp26, tmp44);
        tmp621 = simd_and(tmp605, bytetest_9a_9a);
        struct_Lu.cc = simd_or(tmp621, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b2 = simd_and(tmp70, tmp36);
        bytetest_9c_9c = simd_and(tmp26, tmp47);
        tmp622 = simd_and(tmp605, bytetest_9c_9c);
        struct_Lu.cc = simd_or(tmp622, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b2 = simd_and(tmp70, tmp36);
        bytetest_9e_9e = simd_and(tmp26, tmp49);
        tmp623 = simd_and(tmp605, bytetest_9e_9e);
        struct_Lu.cc = simd_or(tmp623, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b2 = simd_and(tmp70, tmp36);
        bytetest_a0_a0 = simd_andc(tmp60, tmp9);
        tmp624 = simd_and(tmp605, bytetest_a0_a0);
        struct_Lu.cc = simd_or(tmp624, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b2 = simd_and(tmp70, tmp36);
        bytetest_a2_a2 = simd_and(tmp60, tmp36);
        tmp625 = simd_and(tmp605, bytetest_a2_a2);
        struct_Lu.cc = simd_or(tmp625, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b2 = simd_and(tmp70, tmp36);
        bytetest_a4_a4 = simd_and(tmp60, tmp30);
        tmp626 = simd_and(tmp605, bytetest_a4_a4);
        struct_Lu.cc = simd_or(tmp626, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b2 = simd_and(tmp70, tmp36);
        bytetest_a6_a6 = simd_and(tmp60, tmp39);
        tmp627 = simd_and(tmp605, bytetest_a6_a6);
        struct_Lu.cc = simd_or(tmp627, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b2 = simd_and(tmp70, tmp36);
        bytetest_a8_a8 = simd_and(tmp60, tmp42);
        tmp628 = simd_and(tmp605, bytetest_a8_a8);
        struct_Lu.cc = simd_or(tmp628, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b2 = simd_and(tmp70, tmp36);
        bytetest_aa_aa = simd_and(tmp60, tmp44);
        tmp629 = simd_and(tmp605, bytetest_aa_aa);
        struct_Lu.cc = simd_or(tmp629, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b2 = simd_and(tmp70, tmp36);
        bytetest_ac_ac = simd_and(tmp60, tmp47);
        tmp630 = simd_and(tmp605, bytetest_ac_ac);
        struct_Lu.cc = simd_or(tmp630, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b2 = simd_and(tmp70, tmp36);
        bytetest_ae_ae = simd_and(tmp60, tmp49);
        tmp631 = simd_and(tmp605, bytetest_ae_ae);
        struct_Lu.cc = simd_or(tmp631, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b2 = simd_and(tmp70, tmp36);
        bytetest_b0_b0 = simd_andc(tmp70, tmp9);
        tmp632 = simd_and(tmp605, bytetest_b0_b0);
        struct_Lu.cc = simd_or(tmp632, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b2 = simd_and(tmp70, tmp36);
        bytetest_b2_b2 = simd_and(tmp70, tmp36);
        tmp633 = simd_and(tmp605, bytetest_b2_b2);
        struct_Lu.cc = simd_or(tmp633, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b2 = simd_and(tmp70, tmp36);
        bytetest_b4_b4 = simd_and(tmp70, tmp30);
        tmp634 = simd_and(tmp605, bytetest_b4_b4);
        struct_Lu.cc = simd_or(tmp634, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b2 = simd_and(tmp70, tmp36);
        bytetest_b6_b6 = simd_and(tmp70, tmp39);
        tmp635 = simd_and(tmp605, bytetest_b6_b6);
        struct_Lu.cc = simd_or(tmp635, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b2 = simd_and(tmp70, tmp36);
        bytetest_b8_b8 = simd_and(tmp70, tmp42);
        tmp636 = simd_and(tmp605, bytetest_b8_b8);
        struct_Lu.cc = simd_or(tmp636, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b2 = simd_and(tmp70, tmp36);
        bytetest_ba_ba = simd_and(tmp70, tmp44);
        tmp637 = simd_and(tmp605, bytetest_ba_ba);
        struct_Lu.cc = simd_or(tmp637, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b2 = simd_and(tmp70, tmp36);
        bytetest_bc_bc = simd_and(tmp70, tmp47);
        tmp638 = simd_and(tmp605, bytetest_bc_bc);
        struct_Lu.cc = simd_or(tmp638, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b2 = simd_and(tmp70, tmp36);
        bytetest_be_be = simd_and(tmp70, tmp49);
        tmp639 = simd_and(tmp605, bytetest_be_be);
        struct_Lu.cc = simd_or(tmp639, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b3 = simd_and(tmp70, tmp14);
        bytetest_80_80 = simd_andc(tmp31, tmp9);
        tmp640 = simd_and(tmp559, bytetest_b3);
        carryQ.cq[35] = carryout2carry(pablo_blk_Advance(tmp640, carryQ.get_carry_in(35), tmp641));
        tmp642 = simd_and(tmp641, bytetest_80_80);
        struct_Lu.cc = simd_or(tmp642, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b3 = simd_and(tmp70, tmp14);
        bytetest_82_82 = simd_and(tmp31, tmp36);
        tmp643 = simd_and(tmp641, bytetest_82_82);
        struct_Lu.cc = simd_or(tmp643, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b3 = simd_and(tmp70, tmp14);
        bytetest_84_84 = simd_and(tmp31, tmp30);
        tmp644 = simd_and(tmp641, bytetest_84_84);
        struct_Lu.cc = simd_or(tmp644, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b3 = simd_and(tmp70, tmp14);
        bytetest_86_86 = simd_and(tmp31, tmp39);
        tmp645 = simd_and(tmp641, bytetest_86_86);
        struct_Lu.cc = simd_or(tmp645, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b3 = simd_and(tmp70, tmp14);
        bytetest_88_88 = simd_and(tmp31, tmp42);
        tmp646 = simd_and(tmp641, bytetest_88_88);
        struct_Lu.cc = simd_or(tmp646, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b3 = simd_and(tmp70, tmp14);
        bytetest_8a_8a = simd_and(tmp31, tmp44);
        tmp647 = simd_and(tmp641, bytetest_8a_8a);
        struct_Lu.cc = simd_or(tmp647, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b3 = simd_and(tmp70, tmp14);
        bytetest_8c_8c = simd_and(tmp31, tmp47);
        tmp648 = simd_and(tmp641, bytetest_8c_8c);
        struct_Lu.cc = simd_or(tmp648, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b3 = simd_and(tmp70, tmp14);
        bytetest_8e_8e = simd_and(tmp31, tmp49);
        tmp649 = simd_and(tmp641, bytetest_8e_8e);
        struct_Lu.cc = simd_or(tmp649, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b3 = simd_and(tmp70, tmp14);
        bytetest_90_90 = simd_andc(tmp26, tmp9);
        tmp650 = simd_and(tmp641, bytetest_90_90);
        struct_Lu.cc = simd_or(tmp650, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b3 = simd_and(tmp70, tmp14);
        bytetest_92_92 = simd_and(tmp26, tmp36);
        tmp651 = simd_and(tmp641, bytetest_92_92);
        struct_Lu.cc = simd_or(tmp651, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b3 = simd_and(tmp70, tmp14);
        bytetest_94_94 = simd_and(tmp26, tmp30);
        tmp652 = simd_and(tmp641, bytetest_94_94);
        struct_Lu.cc = simd_or(tmp652, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b3 = simd_and(tmp70, tmp14);
        bytetest_96_96 = simd_and(tmp26, tmp39);
        tmp653 = simd_and(tmp641, bytetest_96_96);
        struct_Lu.cc = simd_or(tmp653, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b3 = simd_and(tmp70, tmp14);
        bytetest_98_98 = simd_and(tmp26, tmp42);
        tmp654 = simd_and(tmp641, bytetest_98_98);
        struct_Lu.cc = simd_or(tmp654, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b3 = simd_and(tmp70, tmp14);
        bytetest_9a_9a = simd_and(tmp26, tmp44);
        tmp655 = simd_and(tmp641, bytetest_9a_9a);
        struct_Lu.cc = simd_or(tmp655, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b3 = simd_and(tmp70, tmp14);
        bytetest_9c_9c = simd_and(tmp26, tmp47);
        tmp656 = simd_and(tmp641, bytetest_9c_9c);
        struct_Lu.cc = simd_or(tmp656, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b3 = simd_and(tmp70, tmp14);
        bytetest_9e_9e = simd_and(tmp26, tmp49);
        tmp657 = simd_and(tmp641, bytetest_9e_9e);
        struct_Lu.cc = simd_or(tmp657, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b3 = simd_and(tmp70, tmp14);
        bytetest_a0_a0 = simd_andc(tmp60, tmp9);
        tmp658 = simd_and(tmp641, bytetest_a0_a0);
        struct_Lu.cc = simd_or(tmp658, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b3 = simd_and(tmp70, tmp14);
        bytetest_a2_a2 = simd_and(tmp60, tmp36);
        tmp659 = simd_and(tmp641, bytetest_a2_a2);
        struct_Lu.cc = simd_or(tmp659, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b3 = simd_and(tmp70, tmp14);
        bytetest_ab_ab = simd_and(tmp60, tmp78);
        tmp660 = simd_and(tmp641, bytetest_ab_ab);
        struct_Lu.cc = simd_or(tmp660, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b3 = simd_and(tmp70, tmp14);
        bytetest_ad_ad = simd_and(tmp60, tmp80);
        tmp661 = simd_and(tmp641, bytetest_ad_ad);
        struct_Lu.cc = simd_or(tmp661, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b3 = simd_and(tmp70, tmp14);
        bytetest_b2_b2 = simd_and(tmp70, tmp36);
        tmp662 = simd_and(tmp641, bytetest_b2_b2);
        struct_Lu.cc = simd_or(tmp662, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_99 = simd_and(tmp26, tmp76);
        bytetest_80_80 = simd_andc(tmp31, tmp9);
        tmp663 = simd_and(tmp21, bytetest_ea);
        carryQ.cq[36] = carryout2carry(pablo_blk_Advance(tmp663, carryQ.get_carry_in(36), tmp664));
        tmp665 = simd_and(tmp664, bytetest_99);
        carryQ.cq[37] = carryout2carry(pablo_blk_Advance(tmp665, carryQ.get_carry_in(37), tmp666));
        tmp667 = simd_and(tmp666, bytetest_80_80);
        struct_Lu.cc = simd_or(tmp667, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_99 = simd_and(tmp26, tmp76);
        bytetest_82_82 = simd_and(tmp31, tmp36);
        tmp668 = simd_and(tmp666, bytetest_82_82);
        struct_Lu.cc = simd_or(tmp668, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_99 = simd_and(tmp26, tmp76);
        bytetest_84_84 = simd_and(tmp31, tmp30);
        tmp669 = simd_and(tmp666, bytetest_84_84);
        struct_Lu.cc = simd_or(tmp669, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_99 = simd_and(tmp26, tmp76);
        bytetest_86_86 = simd_and(tmp31, tmp39);
        tmp670 = simd_and(tmp666, bytetest_86_86);
        struct_Lu.cc = simd_or(tmp670, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_99 = simd_and(tmp26, tmp76);
        bytetest_88_88 = simd_and(tmp31, tmp42);
        tmp671 = simd_and(tmp666, bytetest_88_88);
        struct_Lu.cc = simd_or(tmp671, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_99 = simd_and(tmp26, tmp76);
        bytetest_8a_8a = simd_and(tmp31, tmp44);
        tmp672 = simd_and(tmp666, bytetest_8a_8a);
        struct_Lu.cc = simd_or(tmp672, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_99 = simd_and(tmp26, tmp76);
        bytetest_8c_8c = simd_and(tmp31, tmp47);
        tmp673 = simd_and(tmp666, bytetest_8c_8c);
        struct_Lu.cc = simd_or(tmp673, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_99 = simd_and(tmp26, tmp76);
        bytetest_8e_8e = simd_and(tmp31, tmp49);
        tmp674 = simd_and(tmp666, bytetest_8e_8e);
        struct_Lu.cc = simd_or(tmp674, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_99 = simd_and(tmp26, tmp76);
        bytetest_90_90 = simd_andc(tmp26, tmp9);
        tmp675 = simd_and(tmp666, bytetest_90_90);
        struct_Lu.cc = simd_or(tmp675, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_99 = simd_and(tmp26, tmp76);
        bytetest_92_92 = simd_and(tmp26, tmp36);
        tmp676 = simd_and(tmp666, bytetest_92_92);
        struct_Lu.cc = simd_or(tmp676, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_99 = simd_and(tmp26, tmp76);
        bytetest_94_94 = simd_and(tmp26, tmp30);
        tmp677 = simd_and(tmp666, bytetest_94_94);
        struct_Lu.cc = simd_or(tmp677, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_99 = simd_and(tmp26, tmp76);
        bytetest_96_96 = simd_and(tmp26, tmp39);
        tmp678 = simd_and(tmp666, bytetest_96_96);
        struct_Lu.cc = simd_or(tmp678, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_99 = simd_and(tmp26, tmp76);
        bytetest_98_98 = simd_and(tmp26, tmp42);
        tmp679 = simd_and(tmp666, bytetest_98_98);
        struct_Lu.cc = simd_or(tmp679, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_99 = simd_and(tmp26, tmp76);
        bytetest_9a_9a = simd_and(tmp26, tmp44);
        tmp680 = simd_and(tmp666, bytetest_9a_9a);
        struct_Lu.cc = simd_or(tmp680, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_99 = simd_and(tmp26, tmp76);
        bytetest_9c_9c = simd_and(tmp26, tmp47);
        tmp681 = simd_and(tmp666, bytetest_9c_9c);
        struct_Lu.cc = simd_or(tmp681, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_99 = simd_and(tmp26, tmp76);
        bytetest_9e_9e = simd_and(tmp26, tmp49);
        tmp682 = simd_and(tmp666, bytetest_9e_9e);
        struct_Lu.cc = simd_or(tmp682, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_99 = simd_and(tmp26, tmp76);
        bytetest_a0_a0 = simd_andc(tmp60, tmp9);
        tmp683 = simd_and(tmp666, bytetest_a0_a0);
        struct_Lu.cc = simd_or(tmp683, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_99 = simd_and(tmp26, tmp76);
        bytetest_a2_a2 = simd_and(tmp60, tmp36);
        tmp684 = simd_and(tmp666, bytetest_a2_a2);
        struct_Lu.cc = simd_or(tmp684, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_99 = simd_and(tmp26, tmp76);
        bytetest_a4_a4 = simd_and(tmp60, tmp30);
        tmp685 = simd_and(tmp666, bytetest_a4_a4);
        struct_Lu.cc = simd_or(tmp685, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_99 = simd_and(tmp26, tmp76);
        bytetest_a6_a6 = simd_and(tmp60, tmp39);
        tmp686 = simd_and(tmp666, bytetest_a6_a6);
        struct_Lu.cc = simd_or(tmp686, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_99 = simd_and(tmp26, tmp76);
        bytetest_a8_a8 = simd_and(tmp60, tmp42);
        tmp687 = simd_and(tmp666, bytetest_a8_a8);
        struct_Lu.cc = simd_or(tmp687, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_99 = simd_and(tmp26, tmp76);
        bytetest_aa_aa = simd_and(tmp60, tmp44);
        tmp688 = simd_and(tmp666, bytetest_aa_aa);
        struct_Lu.cc = simd_or(tmp688, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_99 = simd_and(tmp26, tmp76);
        bytetest_ac_ac = simd_and(tmp60, tmp47);
        tmp689 = simd_and(tmp666, bytetest_ac_ac);
        struct_Lu.cc = simd_or(tmp689, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9a = simd_and(tmp26, tmp44);
        bytetest_80_80 = simd_andc(tmp31, tmp9);
        tmp690 = simd_and(tmp664, bytetest_9a);
        carryQ.cq[38] = carryout2carry(pablo_blk_Advance(tmp690, carryQ.get_carry_in(38), tmp691));
        tmp692 = simd_and(tmp691, bytetest_80_80);
        struct_Lu.cc = simd_or(tmp692, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9a = simd_and(tmp26, tmp44);
        bytetest_82_82 = simd_and(tmp31, tmp36);
        tmp693 = simd_and(tmp691, bytetest_82_82);
        struct_Lu.cc = simd_or(tmp693, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9a = simd_and(tmp26, tmp44);
        bytetest_84_84 = simd_and(tmp31, tmp30);
        tmp694 = simd_and(tmp691, bytetest_84_84);
        struct_Lu.cc = simd_or(tmp694, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9a = simd_and(tmp26, tmp44);
        bytetest_86_86 = simd_and(tmp31, tmp39);
        tmp695 = simd_and(tmp691, bytetest_86_86);
        struct_Lu.cc = simd_or(tmp695, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9a = simd_and(tmp26, tmp44);
        bytetest_88_88 = simd_and(tmp31, tmp42);
        tmp696 = simd_and(tmp691, bytetest_88_88);
        struct_Lu.cc = simd_or(tmp696, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9a = simd_and(tmp26, tmp44);
        bytetest_8a_8a = simd_and(tmp31, tmp44);
        tmp697 = simd_and(tmp691, bytetest_8a_8a);
        struct_Lu.cc = simd_or(tmp697, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9a = simd_and(tmp26, tmp44);
        bytetest_8c_8c = simd_and(tmp31, tmp47);
        tmp698 = simd_and(tmp691, bytetest_8c_8c);
        struct_Lu.cc = simd_or(tmp698, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9a = simd_and(tmp26, tmp44);
        bytetest_8e_8e = simd_and(tmp31, tmp49);
        tmp699 = simd_and(tmp691, bytetest_8e_8e);
        struct_Lu.cc = simd_or(tmp699, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9a = simd_and(tmp26, tmp44);
        bytetest_90_90 = simd_andc(tmp26, tmp9);
        tmp700 = simd_and(tmp691, bytetest_90_90);
        struct_Lu.cc = simd_or(tmp700, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9a = simd_and(tmp26, tmp44);
        bytetest_92_92 = simd_and(tmp26, tmp36);
        tmp701 = simd_and(tmp691, bytetest_92_92);
        struct_Lu.cc = simd_or(tmp701, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9a = simd_and(tmp26, tmp44);
        bytetest_94_94 = simd_and(tmp26, tmp30);
        tmp702 = simd_and(tmp691, bytetest_94_94);
        struct_Lu.cc = simd_or(tmp702, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9a = simd_and(tmp26, tmp44);
        bytetest_96_96 = simd_and(tmp26, tmp39);
        tmp703 = simd_and(tmp691, bytetest_96_96);
        struct_Lu.cc = simd_or(tmp703, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9c = simd_and(tmp26, tmp47);
        bytetest_a2_a2 = simd_and(tmp60, tmp36);
        tmp704 = simd_and(tmp664, bytetest_9c);
        carryQ.cq[39] = carryout2carry(pablo_blk_Advance(tmp704, carryQ.get_carry_in(39), tmp705));
        tmp706 = simd_and(tmp705, bytetest_a2_a2);
        struct_Lu.cc = simd_or(tmp706, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9c = simd_and(tmp26, tmp47);
        bytetest_a4_a4 = simd_and(tmp60, tmp30);
        tmp707 = simd_and(tmp705, bytetest_a4_a4);
        struct_Lu.cc = simd_or(tmp707, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9c = simd_and(tmp26, tmp47);
        bytetest_a6_a6 = simd_and(tmp60, tmp39);
        tmp708 = simd_and(tmp705, bytetest_a6_a6);
        struct_Lu.cc = simd_or(tmp708, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9c = simd_and(tmp26, tmp47);
        bytetest_a8_a8 = simd_and(tmp60, tmp42);
        tmp709 = simd_and(tmp705, bytetest_a8_a8);
        struct_Lu.cc = simd_or(tmp709, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9c = simd_and(tmp26, tmp47);
        bytetest_aa_aa = simd_and(tmp60, tmp44);
        tmp710 = simd_and(tmp705, bytetest_aa_aa);
        struct_Lu.cc = simd_or(tmp710, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9c = simd_and(tmp26, tmp47);
        bytetest_ac_ac = simd_and(tmp60, tmp47);
        tmp711 = simd_and(tmp705, bytetest_ac_ac);
        struct_Lu.cc = simd_or(tmp711, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9c = simd_and(tmp26, tmp47);
        bytetest_ae_ae = simd_and(tmp60, tmp49);
        tmp712 = simd_and(tmp705, bytetest_ae_ae);
        struct_Lu.cc = simd_or(tmp712, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9c = simd_and(tmp26, tmp47);
        bytetest_b2_b2 = simd_and(tmp70, tmp36);
        tmp713 = simd_and(tmp705, bytetest_b2_b2);
        struct_Lu.cc = simd_or(tmp713, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9c = simd_and(tmp26, tmp47);
        bytetest_b4_b4 = simd_and(tmp70, tmp30);
        tmp714 = simd_and(tmp705, bytetest_b4_b4);
        struct_Lu.cc = simd_or(tmp714, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9c = simd_and(tmp26, tmp47);
        bytetest_b6_b6 = simd_and(tmp70, tmp39);
        tmp715 = simd_and(tmp705, bytetest_b6_b6);
        struct_Lu.cc = simd_or(tmp715, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9c = simd_and(tmp26, tmp47);
        bytetest_b8_b8 = simd_and(tmp70, tmp42);
        tmp716 = simd_and(tmp705, bytetest_b8_b8);
        struct_Lu.cc = simd_or(tmp716, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9c = simd_and(tmp26, tmp47);
        bytetest_ba_ba = simd_and(tmp70, tmp44);
        tmp717 = simd_and(tmp705, bytetest_ba_ba);
        struct_Lu.cc = simd_or(tmp717, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9c = simd_and(tmp26, tmp47);
        bytetest_bc_bc = simd_and(tmp70, tmp47);
        tmp718 = simd_and(tmp705, bytetest_bc_bc);
        struct_Lu.cc = simd_or(tmp718, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9c = simd_and(tmp26, tmp47);
        bytetest_be_be = simd_and(tmp70, tmp49);
        tmp719 = simd_and(tmp705, bytetest_be_be);
        struct_Lu.cc = simd_or(tmp719, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_80_80 = simd_andc(tmp31, tmp9);
        tmp720 = simd_and(tmp664, bytetest_9d);
        carryQ.cq[40] = carryout2carry(pablo_blk_Advance(tmp720, carryQ.get_carry_in(40), tmp721));
        tmp722 = simd_and(tmp721, bytetest_80_80);
        struct_Lu.cc = simd_or(tmp722, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_82_82 = simd_and(tmp31, tmp36);
        tmp723 = simd_and(tmp721, bytetest_82_82);
        struct_Lu.cc = simd_or(tmp723, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_84_84 = simd_and(tmp31, tmp30);
        tmp724 = simd_and(tmp721, bytetest_84_84);
        struct_Lu.cc = simd_or(tmp724, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_86_86 = simd_and(tmp31, tmp39);
        tmp725 = simd_and(tmp721, bytetest_86_86);
        struct_Lu.cc = simd_or(tmp725, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_88_88 = simd_and(tmp31, tmp42);
        tmp726 = simd_and(tmp721, bytetest_88_88);
        struct_Lu.cc = simd_or(tmp726, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_8a_8a = simd_and(tmp31, tmp44);
        tmp727 = simd_and(tmp721, bytetest_8a_8a);
        struct_Lu.cc = simd_or(tmp727, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_8c_8c = simd_and(tmp31, tmp47);
        tmp728 = simd_and(tmp721, bytetest_8c_8c);
        struct_Lu.cc = simd_or(tmp728, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_8e_8e = simd_and(tmp31, tmp49);
        tmp729 = simd_and(tmp721, bytetest_8e_8e);
        struct_Lu.cc = simd_or(tmp729, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_90_90 = simd_andc(tmp26, tmp9);
        tmp730 = simd_and(tmp721, bytetest_90_90);
        struct_Lu.cc = simd_or(tmp730, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_92_92 = simd_and(tmp26, tmp36);
        tmp731 = simd_and(tmp721, bytetest_92_92);
        struct_Lu.cc = simd_or(tmp731, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_94_94 = simd_and(tmp26, tmp30);
        tmp732 = simd_and(tmp721, bytetest_94_94);
        struct_Lu.cc = simd_or(tmp732, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_96_96 = simd_and(tmp26, tmp39);
        tmp733 = simd_and(tmp721, bytetest_96_96);
        struct_Lu.cc = simd_or(tmp733, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_98_98 = simd_and(tmp26, tmp42);
        tmp734 = simd_and(tmp721, bytetest_98_98);
        struct_Lu.cc = simd_or(tmp734, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_9a_9a = simd_and(tmp26, tmp44);
        tmp735 = simd_and(tmp721, bytetest_9a_9a);
        struct_Lu.cc = simd_or(tmp735, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_9c_9c = simd_and(tmp26, tmp47);
        tmp736 = simd_and(tmp721, bytetest_9c_9c);
        struct_Lu.cc = simd_or(tmp736, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_9e_9e = simd_and(tmp26, tmp49);
        tmp737 = simd_and(tmp721, bytetest_9e_9e);
        struct_Lu.cc = simd_or(tmp737, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_a0_a0 = simd_andc(tmp60, tmp9);
        tmp738 = simd_and(tmp721, bytetest_a0_a0);
        struct_Lu.cc = simd_or(tmp738, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_a2_a2 = simd_and(tmp60, tmp36);
        tmp739 = simd_and(tmp721, bytetest_a2_a2);
        struct_Lu.cc = simd_or(tmp739, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_a4_a4 = simd_and(tmp60, tmp30);
        tmp740 = simd_and(tmp721, bytetest_a4_a4);
        struct_Lu.cc = simd_or(tmp740, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_a6_a6 = simd_and(tmp60, tmp39);
        tmp741 = simd_and(tmp721, bytetest_a6_a6);
        struct_Lu.cc = simd_or(tmp741, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_a8_a8 = simd_and(tmp60, tmp42);
        tmp742 = simd_and(tmp721, bytetest_a8_a8);
        struct_Lu.cc = simd_or(tmp742, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_aa_aa = simd_and(tmp60, tmp44);
        tmp743 = simd_and(tmp721, bytetest_aa_aa);
        struct_Lu.cc = simd_or(tmp743, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_ac_ac = simd_and(tmp60, tmp47);
        tmp744 = simd_and(tmp721, bytetest_ac_ac);
        struct_Lu.cc = simd_or(tmp744, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_ae_ae = simd_and(tmp60, tmp49);
        tmp745 = simd_and(tmp721, bytetest_ae_ae);
        struct_Lu.cc = simd_or(tmp745, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_b9_b9 = simd_and(tmp70, tmp76);
        tmp746 = simd_and(tmp721, bytetest_b9_b9);
        struct_Lu.cc = simd_or(tmp746, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_bb_bb = simd_and(tmp70, tmp78);
        tmp747 = simd_and(tmp721, bytetest_bb_bb);
        struct_Lu.cc = simd_or(tmp747, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_bd_be = simd_and(tmp222, tmp122);
        tmp748 = simd_and(tmp721, bytetest_bd_be);
        struct_Lu.cc = simd_or(tmp748, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9e = simd_and(tmp26, tmp49);
        bytetest_80_80 = simd_andc(tmp31, tmp9);
        tmp749 = simd_and(tmp664, bytetest_9e);
        carryQ.cq[41] = carryout2carry(pablo_blk_Advance(tmp749, carryQ.get_carry_in(41), tmp750));
        tmp751 = simd_and(tmp750, bytetest_80_80);
        struct_Lu.cc = simd_or(tmp751, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9e = simd_and(tmp26, tmp49);
        bytetest_82_82 = simd_and(tmp31, tmp36);
        tmp752 = simd_and(tmp750, bytetest_82_82);
        struct_Lu.cc = simd_or(tmp752, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9e = simd_and(tmp26, tmp49);
        bytetest_84_84 = simd_and(tmp31, tmp30);
        tmp753 = simd_and(tmp750, bytetest_84_84);
        struct_Lu.cc = simd_or(tmp753, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9e = simd_and(tmp26, tmp49);
        bytetest_86_86 = simd_and(tmp31, tmp39);
        tmp754 = simd_and(tmp750, bytetest_86_86);
        struct_Lu.cc = simd_or(tmp754, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9e = simd_and(tmp26, tmp49);
        bytetest_8b_8b = simd_and(tmp31, tmp78);
        tmp755 = simd_and(tmp750, bytetest_8b_8b);
        struct_Lu.cc = simd_or(tmp755, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9e = simd_and(tmp26, tmp49);
        bytetest_8d_8d = simd_and(tmp31, tmp80);
        tmp756 = simd_and(tmp750, bytetest_8d_8d);
        struct_Lu.cc = simd_or(tmp756, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9e = simd_and(tmp26, tmp49);
        bytetest_90_90 = simd_andc(tmp26, tmp9);
        tmp757 = simd_and(tmp750, bytetest_90_90);
        struct_Lu.cc = simd_or(tmp757, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9e = simd_and(tmp26, tmp49);
        bytetest_92_92 = simd_and(tmp26, tmp36);
        tmp758 = simd_and(tmp750, bytetest_92_92);
        struct_Lu.cc = simd_or(tmp758, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9e = simd_and(tmp26, tmp49);
        bytetest_a0_a0 = simd_andc(tmp60, tmp9);
        tmp759 = simd_and(tmp750, bytetest_a0_a0);
        struct_Lu.cc = simd_or(tmp759, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9e = simd_and(tmp26, tmp49);
        bytetest_a2_a2 = simd_and(tmp60, tmp36);
        tmp760 = simd_and(tmp750, bytetest_a2_a2);
        struct_Lu.cc = simd_or(tmp760, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9e = simd_and(tmp26, tmp49);
        bytetest_a4_a4 = simd_and(tmp60, tmp30);
        tmp761 = simd_and(tmp750, bytetest_a4_a4);
        struct_Lu.cc = simd_or(tmp761, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9e = simd_and(tmp26, tmp49);
        bytetest_a6_a6 = simd_and(tmp60, tmp39);
        tmp762 = simd_and(tmp750, bytetest_a6_a6);
        struct_Lu.cc = simd_or(tmp762, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9e = simd_and(tmp26, tmp49);
        bytetest_a8_a8 = simd_and(tmp60, tmp42);
        tmp763 = simd_and(tmp750, bytetest_a8_a8);
        struct_Lu.cc = simd_or(tmp763, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9e = simd_and(tmp26, tmp49);
        bytetest_aa_aa = simd_and(tmp60, tmp44);
        tmp764 = simd_and(tmp750, bytetest_aa_aa);
        struct_Lu.cc = simd_or(tmp764, struct_Lu.cc);
        bytetest_ef = simd_and(tmp390, tmp82);
        bytetest_bc = simd_and(tmp70, tmp47);
        bytetest_a1_ba = simd_and(bytetest_a0_bf, tmp10);
        tmp765 = simd_and(tmp21, bytetest_ef);
        carryQ.cq[42] = carryout2carry(pablo_blk_Advance(tmp765, carryQ.get_carry_in(42), tmp766));
        tmp767 = simd_and(tmp766, bytetest_bc);
        carryQ.cq[43] = carryout2carry(pablo_blk_Advance(tmp767, carryQ.get_carry_in(43), tmp768));
        tmp769 = simd_and(tmp768, bytetest_a1_ba);
        struct_Lu.cc = simd_or(tmp769, struct_Lu.cc);
        tmp770 = simd_and(tmp11, tmp69);
        bytetest_f0 = simd_andc(tmp770, tmp9);
        bytetest_90 = simd_andc(tmp26, tmp9);
        bytetest_90 = simd_andc(tmp26, tmp9);
        tmp771 = simd_or(basis_bits.bit_3, basis_bits.bit_4);
        tmp772 = simd_and(basis_bits.bit_2, tmp771);
        bytetest_80_a7 = simd_andc(tmp15, tmp772);
        tmp773 = simd_and(tmp21, bytetest_f0);
        carryQ.cq[44] = carryout2carry(pablo_blk_Advance(tmp773, carryQ.get_carry_in(44), tmp774));
        tmp775 = simd_and(tmp774, bytetest_90);
        carryQ.cq[45] = carryout2carry(pablo_blk_Advance(tmp775, carryQ.get_carry_in(45), tmp776));
        tmp777 = simd_and(tmp776, bytetest_90);
        carryQ.cq[46] = carryout2carry(pablo_blk_Advance(tmp777, carryQ.get_carry_in(46), tmp778));
        tmp779 = simd_and(tmp778, bytetest_80_a7);
        struct_Lu.cc = simd_or(tmp779, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp770, tmp9);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_90 = simd_andc(tmp26, tmp9);
        tmp780 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
        tmp781 = simd_and(basis_bits.bit_4, tmp780);
        tmp782 = simd_and(basis_bits.bit_3, tmp781);
        bytetest_80_99 = simd_andc(tmp16, tmp782);
        tmp783 = simd_and(tmp774, bytetest_9d);
        carryQ.cq[47] = carryout2carry(pablo_blk_Advance(tmp783, carryQ.get_carry_in(47), tmp784));
        tmp785 = simd_and(tmp784, bytetest_90);
        carryQ.cq[48] = carryout2carry(pablo_blk_Advance(tmp785, carryQ.get_carry_in(48), tmp786));
        tmp787 = simd_and(tmp786, bytetest_80_99);
        struct_Lu.cc = simd_or(tmp787, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp770, tmp9);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_91 = simd_and(tmp26, tmp85);
        tmp788 = simd_and(basis_bits.bit_4, tmp142);
        bytetest_80_8d = simd_andc(tmp31, tmp788);
        tmp789 = simd_and(tmp784, bytetest_91);
        carryQ.cq[49] = carryout2carry(pablo_blk_Advance(tmp789, carryQ.get_carry_in(49), tmp790));
        tmp791 = simd_and(tmp790, bytetest_80_8d);
        bytetest_90 = simd_andc(tmp26, tmp9);
        bytetest_b4_bf = simd_and(tmp70, tmp7);
        tmp792 = simd_and(tmp786, bytetest_b4_bf);
        tmp793 = simd_or(tmp792, tmp791);
        struct_Lu.cc = simd_or(tmp793, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp770, tmp9);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_92 = simd_and(tmp26, tmp36);
        bytetest_80_81 = simd_andc(tmp31, tmp131);
        tmp794 = simd_and(tmp784, bytetest_92);
        carryQ.cq[50] = carryout2carry(pablo_blk_Advance(tmp794, carryQ.get_carry_in(50), tmp795));
        tmp796 = simd_and(tmp795, bytetest_80_81);
        bytetest_91 = simd_and(tmp26, tmp85);
        bytetest_a8_bf = simd_and(bytetest_a0_bf, tmp771);
        tmp797 = simd_and(tmp790, bytetest_a8_bf);
        tmp798 = simd_or(tmp797, tmp796);
        struct_Lu.cc = simd_or(tmp798, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp770, tmp9);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_92 = simd_and(tmp26, tmp36);
        bytetest_9c_9c = simd_and(tmp26, tmp47);
        tmp799 = simd_and(tmp795, bytetest_9c_9c);
        struct_Lu.cc = simd_or(tmp799, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp770, tmp9);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_92 = simd_and(tmp26, tmp36);
        bytetest_9e_9f = simd_and(tmp26, tmp133);
        tmp800 = simd_and(tmp795, bytetest_9e_9f);
        struct_Lu.cc = simd_or(tmp800, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp770, tmp9);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_92 = simd_and(tmp26, tmp36);
        bytetest_a2_a2 = simd_and(tmp60, tmp36);
        tmp801 = simd_and(tmp795, bytetest_a2_a2);
        struct_Lu.cc = simd_or(tmp801, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp770, tmp9);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_92 = simd_and(tmp26, tmp36);
        tmp802 = simd_and(tmp60, tmp29);
        bytetest_a5_a6 = simd_and(tmp802, tmp122);
        tmp803 = simd_and(tmp795, bytetest_a5_a6);
        struct_Lu.cc = simd_or(tmp803, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp770, tmp9);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_92 = simd_and(tmp26, tmp36);
        tmp804 = simd_or(simd_and(basis_bits.bit_5, tmp137), simd_andc(tmp8, basis_bits.bit_5));
        bytetest_a9_ac = simd_and(bytetest_a8_af, tmp804);
        tmp805 = simd_and(tmp795, bytetest_a9_ac);
        struct_Lu.cc = simd_or(tmp805, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp770, tmp9);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_92 = simd_and(tmp26, tmp36);
        tmp806 = simd_or(basis_bits.bit_4, tmp142);
        tmp807 = simd_not(tmp806);
        tmp808 = simd_or(simd_and(basis_bits.bit_3, tmp807), simd_andc(tmp133, basis_bits.bit_3));
        bytetest_ae_b5 = simd_and(bytetest_a0_bf, tmp808);
        tmp809 = simd_and(tmp795, bytetest_ae_b5);
        struct_Lu.cc = simd_or(tmp809, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp770, tmp9);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_93 = simd_and(tmp26, tmp14);
        tmp810 = simd_or(basis_bits.bit_3, tmp781);
        tmp811 = simd_not(tmp810);
        tmp812 = simd_or(simd_and(basis_bits.bit_2, tmp811), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
        bytetest_90_a9 = simd_and(tmp15, tmp812);
        tmp813 = simd_and(tmp784, bytetest_93);
        carryQ.cq[51] = carryout2carry(pablo_blk_Advance(tmp813, carryQ.get_carry_in(51), tmp814));
        tmp815 = simd_and(tmp814, bytetest_90_a9);
        struct_Lu.cc = simd_or(tmp815, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp770, tmp9);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_94 = simd_and(tmp26, tmp30);
        tmp816 = simd_andc(tmp29, basis_bits.bit_6);
        bytetest_84_85 = simd_and(tmp31, tmp816);
        tmp817 = simd_and(tmp784, bytetest_94);
        carryQ.cq[52] = carryout2carry(pablo_blk_Advance(tmp817, carryQ.get_carry_in(52), tmp818));
        tmp819 = simd_and(tmp818, bytetest_84_85);
        struct_Lu.cc = simd_or(tmp819, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp770, tmp9);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_94 = simd_and(tmp26, tmp30);
        tmp820 = simd_not(tmp4);
        tmp821 = simd_or(simd_and(basis_bits.bit_4, tmp820), simd_andc(tmp17, basis_bits.bit_4));
        bytetest_87_8a = simd_and(tmp31, tmp821);
        tmp822 = simd_and(tmp818, bytetest_87_8a);
        struct_Lu.cc = simd_or(tmp822, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp770, tmp9);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_94 = simd_and(tmp26, tmp30);
        tmp823 = simd_or(basis_bits.bit_4, tmp555);
        tmp824 = simd_not(tmp823);
        tmp825 = simd_or(simd_and(basis_bits.bit_3, tmp824), simd_andc(tmp599, basis_bits.bit_3));
        bytetest_8d_94 = simd_and(tmp16, tmp825);
        tmp826 = simd_and(tmp818, bytetest_8d_94);
        struct_Lu.cc = simd_or(tmp826, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp770, tmp9);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_94 = simd_and(tmp26, tmp30);
        tmp827 = simd_not(tmp555);
        tmp828 = simd_or(simd_and(basis_bits.bit_4, tmp827), simd_andc(tmp142, basis_bits.bit_4));
        bytetest_96_9c = simd_and(tmp26, tmp828);
        tmp829 = simd_and(tmp818, bytetest_96_9c);
        struct_Lu.cc = simd_or(tmp829, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp770, tmp9);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_94 = simd_and(tmp26, tmp30);
        bytetest_b8_b9 = simd_and(tmp70, tmp116);
        tmp830 = simd_and(tmp818, bytetest_b8_b9);
        struct_Lu.cc = simd_or(tmp830, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp770, tmp9);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_94 = simd_and(tmp26, tmp30);
        bytetest_bb_be = simd_and(bytetest_b8_bf, tmp229);
        tmp831 = simd_and(tmp818, bytetest_bb_be);
        struct_Lu.cc = simd_or(tmp831, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp770, tmp9);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_95 = simd_and(tmp26, tmp84);
        bytetest_80_84 = simd_andc(tmp227, tmp555);
        tmp832 = simd_and(tmp784, bytetest_95);
        carryQ.cq[53] = carryout2carry(pablo_blk_Advance(tmp832, carryQ.get_carry_in(53), tmp833));
        tmp834 = simd_and(tmp833, bytetest_80_84);
        struct_Lu.cc = simd_or(tmp834, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp770, tmp9);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_95 = simd_and(tmp26, tmp84);
        bytetest_86_86 = simd_and(tmp31, tmp39);
        tmp835 = simd_and(tmp833, bytetest_86_86);
        struct_Lu.cc = simd_or(tmp835, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp770, tmp9);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_95 = simd_and(tmp26, tmp84);
        tmp836 = simd_or(simd_and(basis_bits.bit_3, tmp598), simd_andc(tmp781, basis_bits.bit_3));
        bytetest_8a_90 = simd_and(tmp16, tmp836);
        tmp837 = simd_and(tmp833, bytetest_8a_90);
        struct_Lu.cc = simd_or(tmp837, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp770, tmp9);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_96 = simd_and(tmp26, tmp39);
        bytetest_80_85 = simd_andc(tmp227, tmp142);
        tmp838 = simd_and(tmp784, bytetest_96);
        carryQ.cq[54] = carryout2carry(pablo_blk_Advance(tmp838, carryQ.get_carry_in(54), tmp839));
        tmp840 = simd_and(tmp839, bytetest_80_85);
        bytetest_95 = simd_and(tmp26, tmp84);
        tmp841 = simd_or(basis_bits.bit_3, tmp46);
        bytetest_ac_bf = simd_and(bytetest_a0_bf, tmp841);
        tmp842 = simd_and(tmp833, bytetest_ac_bf);
        tmp843 = simd_or(tmp842, tmp840);
        struct_Lu.cc = simd_or(tmp843, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp770, tmp9);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_96 = simd_and(tmp26, tmp39);
        bytetest_a0_b9 = simd_andc(bytetest_a0_bf, tmp782);
        tmp844 = simd_and(tmp839, bytetest_a0_b9);
        struct_Lu.cc = simd_or(tmp844, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp770, tmp9);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_97 = simd_and(tmp26, tmp91);
        tmp845 = simd_or(basis_bits.bit_3, tmp133);
        tmp846 = simd_not(tmp845);
        tmp847 = simd_and(basis_bits.bit_3, tmp7);
        tmp848 = simd_or(simd_and(basis_bits.bit_2, tmp846), simd_andc(tmp847, basis_bits.bit_2));
        bytetest_94_ad = simd_and(tmp15, tmp848);
        tmp849 = simd_and(tmp784, bytetest_97);
        carryQ.cq[55] = carryout2carry(pablo_blk_Advance(tmp849, carryQ.get_carry_in(55), tmp850));
        tmp851 = simd_and(tmp850, bytetest_94_ad);
        struct_Lu.cc = simd_or(tmp851, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp770, tmp9);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_98 = simd_and(tmp26, tmp42);
        tmp852 = simd_or(simd_and(basis_bits.bit_2, tmp247), simd_andc(tmp771, basis_bits.bit_2));
        bytetest_88_a1 = simd_and(tmp15, tmp852);
        tmp853 = simd_and(tmp784, bytetest_98);
        carryQ.cq[56] = carryout2carry(pablo_blk_Advance(tmp853, carryQ.get_carry_in(56), tmp854));
        tmp855 = simd_and(tmp854, bytetest_88_a1);
        struct_Lu.cc = simd_or(tmp855, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp770, tmp9);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_99 = simd_and(tmp26, tmp76);
        tmp856 = simd_and(basis_bits.bit_3, tmp806);
        bytetest_80_95 = simd_andc(tmp16, tmp856);
        tmp857 = simd_and(tmp784, bytetest_99);
        carryQ.cq[57] = carryout2carry(pablo_blk_Advance(tmp857, carryQ.get_carry_in(57), tmp858));
        tmp859 = simd_and(tmp858, bytetest_80_95);
        bytetest_98 = simd_and(tmp26, tmp42);
        bytetest_bc_bf = simd_and(tmp70, tmp46);
        tmp860 = simd_and(tmp854, bytetest_bc_bf);
        tmp861 = simd_or(tmp860, tmp859);
        struct_Lu.cc = simd_or(tmp861, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp770, tmp9);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_9a = simd_and(tmp26, tmp44);
        bytetest_80_89 = simd_andc(tmp31, tmp781);
        tmp862 = simd_and(tmp784, bytetest_9a);
        carryQ.cq[58] = carryout2carry(pablo_blk_Advance(tmp862, carryQ.get_carry_in(58), tmp863));
        tmp864 = simd_and(tmp863, bytetest_80_89);
        bytetest_99 = simd_and(tmp26, tmp76);
        bytetest_b0_bf = simd_and(tmp15, tmp69);
        tmp865 = simd_and(tmp858, bytetest_b0_bf);
        tmp866 = simd_or(tmp865, tmp864);
        struct_Lu.cc = simd_or(tmp866, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp770, tmp9);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_9b = simd_and(tmp26, tmp78);
        bytetest_80_80 = simd_andc(tmp31, tmp9);
        tmp867 = simd_and(tmp784, bytetest_9b);
        carryQ.cq[59] = carryout2carry(pablo_blk_Advance(tmp867, carryQ.get_carry_in(59), tmp868));
        tmp869 = simd_and(tmp868, bytetest_80_80);
        bytetest_9a = simd_and(tmp26, tmp44);
        bytetest_a8_bf = simd_and(bytetest_a0_bf, tmp771);
        tmp870 = simd_and(tmp863, bytetest_a8_bf);
        tmp871 = simd_or(tmp870, tmp869);
        struct_Lu.cc = simd_or(tmp871, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp770, tmp9);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_9b = simd_and(tmp26, tmp78);
        tmp872 = simd_or(simd_and(basis_bits.bit_3, tmp6), simd_andc(tmp131, basis_bits.bit_3));
        bytetest_a2_ba = simd_and(bytetest_a0_bf, tmp872);
        tmp873 = simd_and(tmp868, bytetest_a2_ba);
        struct_Lu.cc = simd_or(tmp873, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp770, tmp9);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_9c = simd_and(tmp26, tmp47);
        tmp874 = simd_and(basis_bits.bit_3, tmp823);
        tmp875 = simd_not(tmp874);
        tmp876 = simd_and(basis_bits.bit_3, tmp46);
        tmp877 = simd_or(simd_and(basis_bits.bit_2, tmp875), simd_andc(tmp876, basis_bits.bit_2));
        bytetest_9c_b4 = simd_and(tmp15, tmp877);
        tmp878 = simd_and(tmp784, bytetest_9c);
        carryQ.cq[60] = carryout2carry(pablo_blk_Advance(tmp878, carryQ.get_carry_in(60), tmp879));
        tmp880 = simd_and(tmp879, bytetest_9c_b4);
        struct_Lu.cc = simd_or(tmp880, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp770, tmp9);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_9d = simd_and(tmp26, tmp80);
        tmp881 = simd_not(tmp585);
        tmp882 = simd_or(simd_and(basis_bits.bit_2, tmp881), simd_andc(tmp856, basis_bits.bit_2));
        bytetest_96_ae = simd_and(tmp15, tmp882);
        tmp883 = simd_and(tmp784, bytetest_9d);
        carryQ.cq[61] = carryout2carry(pablo_blk_Advance(tmp883, carryQ.get_carry_in(61), tmp884));
        tmp885 = simd_and(tmp884, bytetest_96_ae);
        struct_Lu.cc = simd_or(tmp885, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp770, tmp9);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_9e = simd_and(tmp26, tmp49);
        tmp886 = simd_and(basis_bits.bit_4, tmp140);
        tmp887 = simd_or(basis_bits.bit_3, tmp886);
        tmp888 = simd_not(tmp887);
        tmp889 = simd_or(simd_and(basis_bits.bit_2, tmp888), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
        bytetest_90_a8 = simd_and(tmp15, tmp889);
        tmp890 = simd_and(tmp784, bytetest_9e);
        carryQ.cq[62] = carryout2carry(pablo_blk_Advance(tmp890, carryQ.get_carry_in(62), tmp891));
        tmp892 = simd_and(tmp891, bytetest_90_a8);
        struct_Lu.cc = simd_or(tmp892, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp770, tmp9);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_9f = simd_and(tmp26, tmp82);
        bytetest_8a_8a = simd_and(tmp31, tmp44);
        tmp893 = simd_and(tmp784, bytetest_9f);
        carryQ.cq[63] = carryout2carry(pablo_blk_Advance(tmp893, carryQ.get_carry_in(63), tmp894));
        tmp895 = simd_and(tmp894, bytetest_8a_8a);
        struct_Lu.cc = simd_or(tmp895, struct_Lu.cc);
        carryQ.CarryQ_Adjust(64);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Lu & struct_Lu, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, tmp7, tmp8, tmp9, tmp10;
		BitBlock bytetest_41_5a, tmp11, tmp12, tmp13, tmp14, bytetest_c3, tmp15, tmp16;
		BitBlock tmp17, tmp18, tmp19, bytetest_80_96, tmp20, tmp21, tmp22, tmp23;
		BitBlock tmp24, tmp25, tmp26, tmp27, bytetest_98_9e, tmp28, tmp29, tmp30;
		BitBlock bytetest_c4, tmp31, bytetest_80_80, tmp32, tmp33, tmp34, tmp35, tmp36;
		BitBlock bytetest_82_82, tmp37, bytetest_84_84, tmp38, tmp39, bytetest_86_86;
		BitBlock tmp40, tmp41, tmp42, bytetest_88_88, tmp43, tmp44, bytetest_8a_8a;
		BitBlock tmp45, tmp46, tmp47, bytetest_8c_8c, tmp48, tmp49, bytetest_8e_8e;
		BitBlock tmp50, bytetest_90_90, tmp51, bytetest_92_92, tmp52, bytetest_94_94;
		BitBlock tmp53, bytetest_96_96, tmp54, bytetest_98_98, tmp55, bytetest_9a_9a;
		BitBlock tmp56, bytetest_9c_9c, tmp57, bytetest_9e_9e, tmp58, tmp59, tmp60;
		BitBlock bytetest_a0_a0, tmp61, bytetest_a2_a2, tmp62, bytetest_a4_a4, tmp63;
		BitBlock bytetest_a6_a6, tmp64, bytetest_a8_a8, tmp65, bytetest_aa_aa, tmp66;
		BitBlock bytetest_ac_ac, tmp67, bytetest_ae_ae, tmp68, tmp69, tmp70;
		BitBlock bytetest_b0_b0, tmp71, bytetest_b2_b2, tmp72, bytetest_b4_b4, tmp73;
		BitBlock bytetest_b6_b6, tmp74, tmp75, tmp76, bytetest_b9_b9, tmp77, tmp78;
		BitBlock bytetest_bb_bb, tmp79, tmp80, bytetest_bd_bd, tmp81, tmp82;
		BitBlock bytetest_bf_bf, tmp83, tmp84, bytetest_c5, tmp85, bytetest_81_81;
		BitBlock tmp86, tmp87, tmp88, bytetest_83_83, tmp89, bytetest_85_85, tmp90;
		BitBlock tmp91, bytetest_87_87, tmp92, tmp93, tmp94, tmp95, tmp96, tmp97;
		BitBlock tmp98, tmp99, tmp100, tmp101, tmp102, tmp103, tmp104, tmp105, tmp106;
		BitBlock tmp107, tmp108, tmp109, tmp110, tmp111, tmp112, tmp113, tmp114;
		BitBlock tmp115, tmp116, bytetest_b8_b9, tmp117, tmp118, tmp119, bytetest_c6;
		BitBlock tmp120, tmp121, tmp122, bytetest_81_82, tmp123, tmp124, tmp125;
		BitBlock tmp126, tmp127, bytetest_86_87, tmp128, tmp129, bytetest_89_8b;
		BitBlock tmp130, tmp131, tmp132, tmp133, tmp134, bytetest_8e_91, tmp135;
		BitBlock tmp136, tmp137, tmp138, bytetest_93_94, tmp139, tmp140, tmp141;
		BitBlock tmp142, tmp143, bytetest_96_98, tmp144, tmp145, bytetest_9c_9d;
		BitBlock tmp146, tmp147, tmp148, tmp149, tmp150, bytetest_9f_a0, tmp151;
		BitBlock tmp152, tmp153, bytetest_a6_a7, tmp154, bytetest_a9_a9, tmp155;
		BitBlock tmp156, bytetest_ae_af, tmp157, tmp158, bytetest_b1_b3, tmp159;
		BitBlock bytetest_b5_b5, tmp160, tmp161, bytetest_b7_b8, tmp162;
		BitBlock bytetest_bc_bc, tmp163, bytetest_c7, tmp164, tmp165, tmp166, tmp167;
		BitBlock tmp168, bytetest_8d_8d, tmp169, bytetest_8f_8f, tmp170;
		BitBlock bytetest_91_91, tmp171, bytetest_93_93, tmp172, bytetest_95_95;
		BitBlock tmp173, bytetest_97_97, tmp174, bytetest_99_99, tmp175;
		BitBlock bytetest_9b_9b, tmp176, tmp177, tmp178, tmp179, tmp180, tmp181;
		BitBlock tmp182, tmp183, tmp184, tmp185, bytetest_b1_b1, tmp186, tmp187;
		BitBlock bytetest_b6_b8, tmp188, bytetest_ba_ba, tmp189, tmp190;
		BitBlock bytetest_be_be, tmp191, bytetest_c8, tmp192, tmp193, tmp194, tmp195;
		BitBlock tmp196, tmp197, tmp198, tmp199, tmp200, tmp201, tmp202, tmp203;
		BitBlock tmp204, tmp205, tmp206, tmp207, tmp208, tmp209, tmp210, tmp211;
		BitBlock tmp212, tmp213, tmp214, tmp215, tmp216, tmp217, tmp218, tmp219;
		BitBlock tmp220, bytetest_ba_bb, tmp221, tmp222, bytetest_bd_be, tmp223;
		BitBlock bytetest_c9, tmp224, tmp225, tmp226, tmp227, tmp228, tmp229;
		BitBlock bytetest_83_86, tmp230, tmp231, tmp232, tmp233, tmp234, bytetest_cd;
		BitBlock tmp235, tmp236, tmp237, tmp238, tmp239, bytetest_ce, tmp240, tmp241;
		BitBlock tmp242, bytetest_88_8a, tmp243, tmp244, bytetest_8e_8f, tmp245;
		BitBlock tmp246, tmp247, tmp248, tmp249, bytetest_91_a1, tmp250, tmp251;
		BitBlock tmp252, bytetest_a3_ab, tmp253, bytetest_cf, tmp254, tmp255, tmp256;
		BitBlock tmp257, bytetest_92_94, tmp258, tmp259, tmp260, tmp261, tmp262;
		BitBlock tmp263, tmp264, tmp265, tmp266, tmp267, tmp268, tmp269, tmp270;
		BitBlock tmp271, bytetest_b7_b7, tmp272, tmp273, bytetest_b9_ba, tmp274;
		BitBlock tmp275, bytetest_d0, bytetest_80_af, tmp276, tmp277, tmp278;
		BitBlock bytetest_bd_bf, tmp279, tmp280, bytetest_d1, tmp281, tmp282, tmp283;
		BitBlock tmp284, tmp285, tmp286, tmp287, tmp288, tmp289, tmp290, tmp291;
		BitBlock tmp292, tmp293, tmp294, bytetest_b8_b8, tmp295, tmp296, tmp297;
		BitBlock tmp298, bytetest_d2, tmp299, tmp300, tmp301, tmp302, tmp303, tmp304;
		BitBlock tmp305, tmp306, tmp307, tmp308, tmp309, tmp310, tmp311, tmp312;
		BitBlock tmp313, tmp314, tmp315, tmp316, tmp317, tmp318, tmp319, tmp320;
		BitBlock tmp321, tmp322, tmp323, tmp324, tmp325, tmp326, tmp327, tmp328;
		BitBlock bytetest_d3, bytetest_80_81, tmp329, tmp330, tmp331, tmp332, tmp333;
		BitBlock tmp334, bytetest_89_89, tmp335, bytetest_8b_8b, tmp336, tmp337;
		BitBlock tmp338, tmp339, tmp340, tmp341, tmp342, tmp343, tmp344, tmp345;
		BitBlock tmp346, tmp347, tmp348, tmp349, tmp350, tmp351, tmp352, tmp353;
		BitBlock tmp354, tmp355, tmp356, tmp357, tmp358, tmp359, tmp360, tmp361;
		BitBlock bytetest_d4, tmp362, tmp363, tmp364, tmp365, tmp366, tmp367, tmp368;
		BitBlock tmp369, tmp370, tmp371, tmp372, tmp373, tmp374, tmp375, tmp376;
		BitBlock tmp377, tmp378, tmp379, tmp380, tmp381, tmp382, tmp383, bytetest_d5;
		BitBlock tmp384, tmp385, tmp386, tmp387, bytetest_b1_bf, tmp388, tmp389;
		BitBlock tmp390, bytetest_e1, bytetest_83, bytetest_80_85, tmp391, tmp392;
		BitBlock tmp393, tmp394, tmp395, bytetest_82, bytetest_a0_bf, tmp396, tmp397;
		BitBlock tmp398, tmp399, tmp400, tmp401, bytetest_b8, tmp402, tmp403, tmp404;
		BitBlock tmp405, tmp406, tmp407, tmp408, tmp409, tmp410, tmp411, tmp412;
		BitBlock tmp413, tmp414, tmp415, tmp416, tmp417, tmp418, tmp419, tmp420;
		BitBlock tmp421, tmp422, tmp423, tmp424, tmp425, tmp426, tmp427, tmp428;
		BitBlock tmp429, tmp430, tmp431, tmp432, tmp433, tmp434, tmp435, bytetest_b9;
		BitBlock tmp436, tmp437, tmp438, tmp439, tmp440, tmp441, tmp442, tmp443;
		BitBlock tmp444, tmp445, tmp446, tmp447, tmp448, tmp449, tmp450, tmp451;
		BitBlock tmp452, tmp453, tmp454, tmp455, tmp456, tmp457, tmp458, tmp459;
		BitBlock tmp460, tmp461, tmp462, tmp463, tmp464, tmp465, tmp466, tmp467;
		BitBlock tmp468, tmp469, bytetest_ba, tmp470, tmp471, tmp472, tmp473, tmp474;
		BitBlock tmp475, tmp476, tmp477, tmp478, tmp479, tmp480, tmp481, tmp482;
		BitBlock tmp483, tmp484, tmp485, tmp486, tmp487, tmp488, tmp489, tmp490;
		BitBlock tmp491, tmp492, tmp493, tmp494, tmp495, tmp496, tmp497, tmp498;
		BitBlock tmp499, bytetest_bb, tmp500, tmp501, tmp502, tmp503, tmp504, tmp505;
		BitBlock tmp506, tmp507, tmp508, tmp509, tmp510, tmp511, tmp512, tmp513;
		BitBlock tmp514, tmp515, tmp516, tmp517, tmp518, tmp519, tmp520, tmp521;
		BitBlock tmp522, tmp523, tmp524, tmp525, tmp526, tmp527, tmp528, tmp529;
		BitBlock tmp530, tmp531, tmp532, tmp533, bytetest_bc, bytetest_88_8f, tmp534;
		BitBlock tmp535, tmp536, bytetest_98_9d, tmp537, bytetest_a8_af, tmp538;
		BitBlock bytetest_b8_bf, tmp539, bytetest_bd, bytetest_88_8d, tmp540, tmp541;
		BitBlock tmp542, tmp543, tmp544, bytetest_9d_9d, tmp545, bytetest_9f_9f;
		BitBlock tmp546, tmp547, bytetest_be, bytetest_b8_bb, tmp548, tmp549, tmp550;
		BitBlock bytetest_bf, bytetest_88_8b, tmp551, tmp552, tmp553, bytetest_98_9b;
		BitBlock tmp554, tmp555, bytetest_a8_ac, tmp556, tmp557, bytetest_e2;
		BitBlock bytetest_84, tmp558, tmp559, tmp560, tmp561, tmp562, tmp563, tmp564;
		BitBlock tmp565, bytetest_8b_8d, tmp566, tmp567, bytetest_90_92, tmp568;
		BitBlock tmp569, tmp570, bytetest_99_9d, tmp571, tmp572, tmp573, tmp574;
		BitBlock tmp575, bytetest_aa_ad, tmp576, bytetest_b0_b3, tmp577;
		BitBlock bytetest_be_bf, tmp578, bytetest_85, tmp579, tmp580, tmp581;
		BitBlock bytetest_86, tmp582, tmp583, tmp584, bytetest_b0, tmp585, tmp586;
		BitBlock bytetest_80_ae, tmp587, tmp588, tmp589, bytetest_b1, tmp590, tmp591;
		BitBlock tmp592, tmp593, bytetest_a2_a4, tmp594, bytetest_a7_a7, tmp595;
		BitBlock tmp596, bytetest_ab_ab, tmp597, tmp598, tmp599, tmp600;
		BitBlock bytetest_ad_b0, tmp601, tmp602, tmp603, bytetest_b2, tmp604, tmp605;
		BitBlock tmp606, tmp607, tmp608, tmp609, tmp610, tmp611, tmp612, tmp613;
		BitBlock tmp614, tmp615, tmp616, tmp617, tmp618, tmp619, tmp620, tmp621;
		BitBlock tmp622, tmp623, tmp624, tmp625, tmp626, tmp627, tmp628, tmp629;
		BitBlock tmp630, tmp631, tmp632, tmp633, tmp634, tmp635, tmp636, tmp637;
		BitBlock tmp638, tmp639, bytetest_b3, tmp640, tmp641, tmp642, tmp643, tmp644;
		BitBlock tmp645, tmp646, tmp647, tmp648, tmp649, tmp650, tmp651, tmp652;
		BitBlock tmp653, tmp654, tmp655, tmp656, tmp657, tmp658, tmp659, tmp660;
		BitBlock bytetest_ad_ad, tmp661, tmp662, bytetest_ea, bytetest_99, tmp663;
		BitBlock tmp664, tmp665, tmp666, tmp667, tmp668, tmp669, tmp670, tmp671;
		BitBlock tmp672, tmp673, tmp674, tmp675, tmp676, tmp677, tmp678, tmp679;
		BitBlock tmp680, tmp681, tmp682, tmp683, tmp684, tmp685, tmp686, tmp687;
		BitBlock tmp688, tmp689, bytetest_9a, tmp690, tmp691, tmp692, tmp693, tmp694;
		BitBlock tmp695, tmp696, tmp697, tmp698, tmp699, tmp700, tmp701, tmp702;
		BitBlock tmp703, bytetest_9c, tmp704, tmp705, tmp706, tmp707, tmp708, tmp709;
		BitBlock tmp710, tmp711, tmp712, tmp713, tmp714, tmp715, tmp716, tmp717;
		BitBlock tmp718, tmp719, bytetest_9d, tmp720, tmp721, tmp722, tmp723, tmp724;
		BitBlock tmp725, tmp726, tmp727, tmp728, tmp729, tmp730, tmp731, tmp732;
		BitBlock tmp733, tmp734, tmp735, tmp736, tmp737, tmp738, tmp739, tmp740;
		BitBlock tmp741, tmp742, tmp743, tmp744, tmp745, tmp746, tmp747, tmp748;
		BitBlock bytetest_9e, tmp749, tmp750, tmp751, tmp752, tmp753, tmp754, tmp755;
		BitBlock tmp756, tmp757, tmp758, tmp759, tmp760, tmp761, tmp762, tmp763;
		BitBlock tmp764, bytetest_ef, bytetest_a1_ba, tmp765, tmp766, tmp767, tmp768;
		BitBlock tmp769, tmp770, bytetest_f0, bytetest_90, tmp771, tmp772;
		BitBlock bytetest_80_a7, tmp773, tmp774, tmp775, tmp776, tmp777, tmp778;
		BitBlock tmp779, tmp780, tmp781, tmp782, bytetest_80_99, tmp783, tmp784;
		BitBlock tmp785, tmp786, tmp787, bytetest_91, tmp788, bytetest_80_8d, tmp789;
		BitBlock tmp790, tmp791, bytetest_b4_bf, tmp792, tmp793, bytetest_92, tmp794;
		BitBlock tmp795, tmp796, bytetest_a8_bf, tmp797, tmp798, tmp799;
		BitBlock bytetest_9e_9f, tmp800, tmp801, tmp802, bytetest_a5_a6, tmp803;
		BitBlock tmp804, bytetest_a9_ac, tmp805, tmp806, tmp807, tmp808;
		BitBlock bytetest_ae_b5, tmp809, bytetest_93, tmp810, tmp811, tmp812;
		BitBlock bytetest_90_a9, tmp813, tmp814, tmp815, bytetest_94, tmp816;
		BitBlock bytetest_84_85, tmp817, tmp818, tmp819, tmp820, tmp821;
		BitBlock bytetest_87_8a, tmp822, tmp823, tmp824, tmp825, bytetest_8d_94;
		BitBlock tmp826, tmp827, tmp828, bytetest_96_9c, tmp829, tmp830;
		BitBlock bytetest_bb_be, tmp831, bytetest_95, bytetest_80_84, tmp832, tmp833;
		BitBlock tmp834, tmp835, tmp836, bytetest_8a_90, tmp837, bytetest_96, tmp838;
		BitBlock tmp839, tmp840, tmp841, bytetest_ac_bf, tmp842, tmp843;
		BitBlock bytetest_a0_b9, tmp844, bytetest_97, tmp845, tmp846, tmp847, tmp848;
		BitBlock bytetest_94_ad, tmp849, tmp850, tmp851, bytetest_98, tmp852;
		BitBlock bytetest_88_a1, tmp853, tmp854, tmp855, tmp856, bytetest_80_95;
		BitBlock tmp857, tmp858, tmp859, bytetest_bc_bf, tmp860, tmp861;
		BitBlock bytetest_80_89, tmp862, tmp863, tmp864, bytetest_b0_bf, tmp865;
		BitBlock tmp866, bytetest_9b, tmp867, tmp868, tmp869, tmp870, tmp871, tmp872;
		BitBlock bytetest_a2_ba, tmp873, tmp874, tmp875, tmp876, tmp877;
		BitBlock bytetest_9c_b4, tmp878, tmp879, tmp880, tmp881, tmp882;
		BitBlock bytetest_96_ae, tmp883, tmp884, tmp885, tmp886, tmp887, tmp888;
		BitBlock tmp889, bytetest_90_a8, tmp890, tmp891, tmp892, bytetest_9f, tmp893;
		BitBlock tmp894, tmp895;




        struct_Lu.cc = simd<1>::constant<0>();
        tmp1 = simd_andc(basis_bits.bit_1, basis_bits.bit_0);
        tmp2 = simd_andc(tmp1, basis_bits.bit_2);
        tmp3 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp4 = simd_or(basis_bits.bit_5, tmp3);
        tmp5 = simd_and(basis_bits.bit_4, tmp4);
        tmp6 = simd_not(tmp5);
        tmp7 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp8 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp9 = simd_or(tmp7, tmp8);
        tmp10 = simd_or(simd_and(basis_bits.bit_3, tmp6), simd_andc(tmp9, basis_bits.bit_3));
        bytetest_41_5a = simd_and(tmp2, tmp10);
        struct_Lu.cc = simd_or(bytetest_41_5a, struct_Lu.cc);
        tmp11 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp12 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp13 = simd_andc(tmp11, tmp12);
        tmp14 = simd_andc(tmp3, tmp7);
        bytetest_c3 = simd_and(tmp13, tmp14);
        tmp15 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp16 = simd_andc(tmp15, basis_bits.bit_2);
        tmp17 = simd_and(basis_bits.bit_5, tmp3);
        tmp18 = simd_or(basis_bits.bit_4, tmp17);
        tmp19 = simd_and(basis_bits.bit_3, tmp18);
        bytetest_80_96 = simd_andc(tmp16, tmp19);
        tmp20 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp20, carryQ.get_carry_in(0), tmp21));
        tmp22 = simd_and(tmp21, bytetest_c3);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp22, carryQ.get_carry_in(1), tmp23));
        tmp24 = simd_and(tmp23, bytetest_80_96);
        struct_Lu.cc = simd_or(tmp24, struct_Lu.cc);
        bytetest_c3 = simd_and(tmp13, tmp14);
        tmp25 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp26 = simd_and(tmp15, tmp25);
        tmp27 = simd_and(tmp26, basis_bits.bit_4);
        bytetest_98_9e = simd_andc(tmp27, tmp17);
        tmp28 = simd_and(tmp23, bytetest_98_9e);
        struct_Lu.cc = simd_or(tmp28, struct_Lu.cc);
        tmp29 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp30 = simd_andc(tmp29, tmp8);
        bytetest_c4 = simd_and(tmp13, tmp30);
        tmp31 = simd_andc(tmp15, tmp12);
        bytetest_80_80 = simd_andc(tmp31, tmp9);
        tmp32 = simd_and(tmp21, bytetest_c4);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp32, carryQ.get_carry_in(2), tmp33));
        tmp34 = simd_and(tmp33, bytetest_80_80);
        struct_Lu.cc = simd_or(tmp34, struct_Lu.cc);
        bytetest_c4 = simd_and(tmp13, tmp30);
        tmp35 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp36 = simd_andc(tmp35, tmp7);
        bytetest_82_82 = simd_and(tmp31, tmp36);
        tmp37 = simd_and(tmp33, bytetest_82_82);
        struct_Lu.cc = simd_or(tmp37, struct_Lu.cc);
        bytetest_c4 = simd_and(tmp13, tmp30);
        bytetest_84_84 = simd_and(tmp31, tmp30);
        tmp38 = simd_and(tmp33, bytetest_84_84);
        struct_Lu.cc = simd_or(tmp38, struct_Lu.cc);
        bytetest_c4 = simd_and(tmp13, tmp30);
        tmp39 = simd_and(tmp29, tmp35);
        bytetest_86_86 = simd_and(tmp31, tmp39);
        tmp40 = simd_and(tmp33, bytetest_86_86);
        struct_Lu.cc = simd_or(tmp40, struct_Lu.cc);
        bytetest_c4 = simd_and(tmp13, tmp30);
        tmp41 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp42 = simd_andc(tmp41, tmp8);
        bytetest_88_88 = simd_and(tmp31, tmp42);
        tmp43 = simd_and(tmp33, bytetest_88_88);
        struct_Lu.cc = simd_or(tmp43, struct_Lu.cc);
        bytetest_c4 = simd_and(tmp13, tmp30);
        tmp44 = simd_and(tmp41, tmp35);
        bytetest_8a_8a = simd_and(tmp31, tmp44);
        tmp45 = simd_and(tmp33, bytetest_8a_8a);
        struct_Lu.cc = simd_or(tmp45, struct_Lu.cc);
        bytetest_c4 = simd_and(tmp13, tmp30);
        tmp46 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp47 = simd_andc(tmp46, tmp8);
        bytetest_8c_8c = simd_and(tmp31, tmp47);
        tmp48 = simd_and(tmp33, bytetest_8c_8c);
        struct_Lu.cc = simd_or(tmp48, struct_Lu.cc);
        bytetest_c4 = simd_and(tmp13, tmp30);
        tmp49 = simd_and(tmp46, tmp35);
        bytetest_8e_8e = simd_and(tmp31, tmp49);
        tmp50 = simd_and(tmp33, bytetest_8e_8e);
        struct_Lu.cc = simd_or(tmp50, struct_Lu.cc);
        bytetest_c4 = simd_and(tmp13, tmp30);
        bytetest_90_90 = simd_andc(tmp26, tmp9);
        tmp51 = simd_and(tmp33, bytetest_90_90);
        struct_Lu.cc = simd_or(tmp51, struct_Lu.cc);
        bytetest_c4 = simd_and(tmp13, tmp30);
        bytetest_92_92 = simd_and(tmp26, tmp36);
        tmp52 = simd_and(tmp33, bytetest_92_92);
        struct_Lu.cc = simd_or(tmp52, struct_Lu.cc);
        bytetest_c4 = simd_and(tmp13, tmp30);
        bytetest_94_94 = simd_and(tmp26, tmp30);
        tmp53 = simd_and(tmp33, bytetest_94_94);
        struct_Lu.cc = simd_or(tmp53, struct_Lu.cc);
        bytetest_c4 = simd_and(tmp13, tmp30);
        bytetest_96_96 = simd_and(tmp26, tmp39);
        tmp54 = simd_and(tmp33, bytetest_96_96);
        struct_Lu.cc = simd_or(tmp54, struct_Lu.cc);
        bytetest_c4 = simd_and(tmp13, tmp30);
        bytetest_98_98 = simd_and(tmp26, tmp42);
        tmp55 = simd_and(tmp33, bytetest_98_98);
        struct_Lu.cc = simd_or(tmp55, struct_Lu.cc);
        bytetest_c4 = simd_and(tmp13, tmp30);
        bytetest_9a_9a = simd_and(tmp26, tmp44);
        tmp56 = simd_and(tmp33, bytetest_9a_9a);
        struct_Lu.cc = simd_or(tmp56, struct_Lu.cc);
        bytetest_c4 = simd_and(tmp13, tmp30);
        bytetest_9c_9c = simd_and(tmp26, tmp47);
        tmp57 = simd_and(tmp33, bytetest_9c_9c);
        struct_Lu.cc = simd_or(tmp57, struct_Lu.cc);
        bytetest_c4 = simd_and(tmp13, tmp30);
        bytetest_9e_9e = simd_and(tmp26, tmp49);
        tmp58 = simd_and(tmp33, bytetest_9e_9e);
        struct_Lu.cc = simd_or(tmp58, struct_Lu.cc);
        bytetest_c4 = simd_and(tmp13, tmp30);
        tmp59 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp60 = simd_and(tmp15, tmp59);
        bytetest_a0_a0 = simd_andc(tmp60, tmp9);
        tmp61 = simd_and(tmp33, bytetest_a0_a0);
        struct_Lu.cc = simd_or(tmp61, struct_Lu.cc);
        bytetest_c4 = simd_and(tmp13, tmp30);
        bytetest_a2_a2 = simd_and(tmp60, tmp36);
        tmp62 = simd_and(tmp33, bytetest_a2_a2);
        struct_Lu.cc = simd_or(tmp62, struct_Lu.cc);
        bytetest_c4 = simd_and(tmp13, tmp30);
        bytetest_a4_a4 = simd_and(tmp60, tmp30);
        tmp63 = simd_and(tmp33, bytetest_a4_a4);
        struct_Lu.cc = simd_or(tmp63, struct_Lu.cc);
        bytetest_c4 = simd_and(tmp13, tmp30);
        bytetest_a6_a6 = simd_and(tmp60, tmp39);
        tmp64 = simd_and(tmp33, bytetest_a6_a6);
        struct_Lu.cc = simd_or(tmp64, struct_Lu.cc);
        bytetest_c4 = simd_and(tmp13, tmp30);
        bytetest_a8_a8 = simd_and(tmp60, tmp42);
        tmp65 = simd_and(tmp33, bytetest_a8_a8);
        struct_Lu.cc = simd_or(tmp65, struct_Lu.cc);
        bytetest_c4 = simd_and(tmp13, tmp30);
        bytetest_aa_aa = simd_and(tmp60, tmp44);
        tmp66 = simd_and(tmp33, bytetest_aa_aa);
        struct_Lu.cc = simd_or(tmp66, struct_Lu.cc);
        bytetest_c4 = simd_and(tmp13, tmp30);
        bytetest_ac_ac = simd_and(tmp60, tmp47);
        tmp67 = simd_and(tmp33, bytetest_ac_ac);
        struct_Lu.cc = simd_or(tmp67, struct_Lu.cc);
        bytetest_c4 = simd_and(tmp13, tmp30);
        bytetest_ae_ae = simd_and(tmp60, tmp49);
        tmp68 = simd_and(tmp33, bytetest_ae_ae);
        struct_Lu.cc = simd_or(tmp68, struct_Lu.cc);
        bytetest_c4 = simd_and(tmp13, tmp30);
        tmp69 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp70 = simd_and(tmp15, tmp69);
        bytetest_b0_b0 = simd_andc(tmp70, tmp9);
        tmp71 = simd_and(tmp33, bytetest_b0_b0);
        struct_Lu.cc = simd_or(tmp71, struct_Lu.cc);
        bytetest_c4 = simd_and(tmp13, tmp30);
        bytetest_b2_b2 = simd_and(tmp70, tmp36);
        tmp72 = simd_and(tmp33, bytetest_b2_b2);
        struct_Lu.cc = simd_or(tmp72, struct_Lu.cc);
        bytetest_c4 = simd_and(tmp13, tmp30);
        bytetest_b4_b4 = simd_and(tmp70, tmp30);
        tmp73 = simd_and(tmp33, bytetest_b4_b4);
        struct_Lu.cc = simd_or(tmp73, struct_Lu.cc);
        bytetest_c4 = simd_and(tmp13, tmp30);
        bytetest_b6_b6 = simd_and(tmp70, tmp39);
        tmp74 = simd_and(tmp33, bytetest_b6_b6);
        struct_Lu.cc = simd_or(tmp74, struct_Lu.cc);
        bytetest_c4 = simd_and(tmp13, tmp30);
        tmp75 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp76 = simd_and(tmp41, tmp75);
        bytetest_b9_b9 = simd_and(tmp70, tmp76);
        tmp77 = simd_and(tmp33, bytetest_b9_b9);
        struct_Lu.cc = simd_or(tmp77, struct_Lu.cc);
        bytetest_c4 = simd_and(tmp13, tmp30);
        tmp78 = simd_and(tmp41, tmp3);
        bytetest_bb_bb = simd_and(tmp70, tmp78);
        tmp79 = simd_and(tmp33, bytetest_bb_bb);
        struct_Lu.cc = simd_or(tmp79, struct_Lu.cc);
        bytetest_c4 = simd_and(tmp13, tmp30);
        tmp80 = simd_and(tmp46, tmp75);
        bytetest_bd_bd = simd_and(tmp70, tmp80);
        tmp81 = simd_and(tmp33, bytetest_bd_bd);
        struct_Lu.cc = simd_or(tmp81, struct_Lu.cc);
        bytetest_c4 = simd_and(tmp13, tmp30);
        tmp82 = simd_and(tmp46, tmp3);
        bytetest_bf_bf = simd_and(tmp70, tmp82);
        tmp83 = simd_and(tmp33, bytetest_bf_bf);
        struct_Lu.cc = simd_or(tmp83, struct_Lu.cc);
        tmp84 = simd_and(tmp29, tmp75);
        bytetest_c5 = simd_and(tmp13, tmp84);
        tmp85 = simd_andc(tmp75, tmp7);
        bytetest_81_81 = simd_and(tmp31, tmp85);
        tmp86 = simd_and(tmp21, bytetest_c5);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp86, carryQ.get_carry_in(3), tmp87));
        tmp88 = simd_and(tmp87, bytetest_81_81);
        struct_Lu.cc = simd_or(tmp88, struct_Lu.cc);
        bytetest_c5 = simd_and(tmp13, tmp84);
        bytetest_83_83 = simd_and(tmp31, tmp14);
        tmp89 = simd_and(tmp87, bytetest_83_83);
        struct_Lu.cc = simd_or(tmp89, struct_Lu.cc);
        bytetest_c5 = simd_and(tmp13, tmp84);
        bytetest_85_85 = simd_and(tmp31, tmp84);
        tmp90 = simd_and(tmp87, bytetest_85_85);
        struct_Lu.cc = simd_or(tmp90, struct_Lu.cc);
        bytetest_c5 = simd_and(tmp13, tmp84);
        tmp91 = simd_and(tmp29, tmp3);
        bytetest_87_87 = simd_and(tmp31, tmp91);
        tmp92 = simd_and(tmp87, bytetest_87_87);
        struct_Lu.cc = simd_or(tmp92, struct_Lu.cc);
        bytetest_c5 = simd_and(tmp13, tmp84);
        bytetest_8a_8a = simd_and(tmp31, tmp44);
        tmp93 = simd_and(tmp87, bytetest_8a_8a);
        struct_Lu.cc = simd_or(tmp93, struct_Lu.cc);
        bytetest_c5 = simd_and(tmp13, tmp84);
        bytetest_8c_8c = simd_and(tmp31, tmp47);
        tmp94 = simd_and(tmp87, bytetest_8c_8c);
        struct_Lu.cc = simd_or(tmp94, struct_Lu.cc);
        bytetest_c5 = simd_and(tmp13, tmp84);
        bytetest_8e_8e = simd_and(tmp31, tmp49);
        tmp95 = simd_and(tmp87, bytetest_8e_8e);
        struct_Lu.cc = simd_or(tmp95, struct_Lu.cc);
        bytetest_c5 = simd_and(tmp13, tmp84);
        bytetest_90_90 = simd_andc(tmp26, tmp9);
        tmp96 = simd_and(tmp87, bytetest_90_90);
        struct_Lu.cc = simd_or(tmp96, struct_Lu.cc);
        bytetest_c5 = simd_and(tmp13, tmp84);
        bytetest_92_92 = simd_and(tmp26, tmp36);
        tmp97 = simd_and(tmp87, bytetest_92_92);
        struct_Lu.cc = simd_or(tmp97, struct_Lu.cc);
        bytetest_c5 = simd_and(tmp13, tmp84);
        bytetest_94_94 = simd_and(tmp26, tmp30);
        tmp98 = simd_and(tmp87, bytetest_94_94);
        struct_Lu.cc = simd_or(tmp98, struct_Lu.cc);
        bytetest_c5 = simd_and(tmp13, tmp84);
        bytetest_96_96 = simd_and(tmp26, tmp39);
        tmp99 = simd_and(tmp87, bytetest_96_96);
        struct_Lu.cc = simd_or(tmp99, struct_Lu.cc);
        bytetest_c5 = simd_and(tmp13, tmp84);
        bytetest_98_98 = simd_and(tmp26, tmp42);
        tmp100 = simd_and(tmp87, bytetest_98_98);
        struct_Lu.cc = simd_or(tmp100, struct_Lu.cc);
        bytetest_c5 = simd_and(tmp13, tmp84);
        bytetest_9a_9a = simd_and(tmp26, tmp44);
        tmp101 = simd_and(tmp87, bytetest_9a_9a);
        struct_Lu.cc = simd_or(tmp101, struct_Lu.cc);
        bytetest_c5 = simd_and(tmp13, tmp84);
        bytetest_9c_9c = simd_and(tmp26, tmp47);
        tmp102 = simd_and(tmp87, bytetest_9c_9c);
        struct_Lu.cc = simd_or(tmp102, struct_Lu.cc);
        bytetest_c5 = simd_and(tmp13, tmp84);
        bytetest_9e_9e = simd_and(tmp26, tmp49);
        tmp103 = simd_and(tmp87, bytetest_9e_9e);
        struct_Lu.cc = simd_or(tmp103, struct_Lu.cc);
        bytetest_c5 = simd_and(tmp13, tmp84);
        bytetest_a0_a0 = simd_andc(tmp60, tmp9);
        tmp104 = simd_and(tmp87, bytetest_a0_a0);
        struct_Lu.cc = simd_or(tmp104, struct_Lu.cc);
        bytetest_c5 = simd_and(tmp13, tmp84);
        bytetest_a2_a2 = simd_and(tmp60, tmp36);
        tmp105 = simd_and(tmp87, bytetest_a2_a2);
        struct_Lu.cc = simd_or(tmp105, struct_Lu.cc);
        bytetest_c5 = simd_and(tmp13, tmp84);
        bytetest_a4_a4 = simd_and(tmp60, tmp30);
        tmp106 = simd_and(tmp87, bytetest_a4_a4);
        struct_Lu.cc = simd_or(tmp106, struct_Lu.cc);
        bytetest_c5 = simd_and(tmp13, tmp84);
        bytetest_a6_a6 = simd_and(tmp60, tmp39);
        tmp107 = simd_and(tmp87, bytetest_a6_a6);
        struct_Lu.cc = simd_or(tmp107, struct_Lu.cc);
        bytetest_c5 = simd_and(tmp13, tmp84);
        bytetest_a8_a8 = simd_and(tmp60, tmp42);
        tmp108 = simd_and(tmp87, bytetest_a8_a8);
        struct_Lu.cc = simd_or(tmp108, struct_Lu.cc);
        bytetest_c5 = simd_and(tmp13, tmp84);
        bytetest_aa_aa = simd_and(tmp60, tmp44);
        tmp109 = simd_and(tmp87, bytetest_aa_aa);
        struct_Lu.cc = simd_or(tmp109, struct_Lu.cc);
        bytetest_c5 = simd_and(tmp13, tmp84);
        bytetest_ac_ac = simd_and(tmp60, tmp47);
        tmp110 = simd_and(tmp87, bytetest_ac_ac);
        struct_Lu.cc = simd_or(tmp110, struct_Lu.cc);
        bytetest_c5 = simd_and(tmp13, tmp84);
        bytetest_ae_ae = simd_and(tmp60, tmp49);
        tmp111 = simd_and(tmp87, bytetest_ae_ae);
        struct_Lu.cc = simd_or(tmp111, struct_Lu.cc);
        bytetest_c5 = simd_and(tmp13, tmp84);
        bytetest_b0_b0 = simd_andc(tmp70, tmp9);
        tmp112 = simd_and(tmp87, bytetest_b0_b0);
        struct_Lu.cc = simd_or(tmp112, struct_Lu.cc);
        bytetest_c5 = simd_and(tmp13, tmp84);
        bytetest_b2_b2 = simd_and(tmp70, tmp36);
        tmp113 = simd_and(tmp87, bytetest_b2_b2);
        struct_Lu.cc = simd_or(tmp113, struct_Lu.cc);
        bytetest_c5 = simd_and(tmp13, tmp84);
        bytetest_b4_b4 = simd_and(tmp70, tmp30);
        tmp114 = simd_and(tmp87, bytetest_b4_b4);
        struct_Lu.cc = simd_or(tmp114, struct_Lu.cc);
        bytetest_c5 = simd_and(tmp13, tmp84);
        bytetest_b6_b6 = simd_and(tmp70, tmp39);
        tmp115 = simd_and(tmp87, bytetest_b6_b6);
        struct_Lu.cc = simd_or(tmp115, struct_Lu.cc);
        bytetest_c5 = simd_and(tmp13, tmp84);
        tmp116 = simd_andc(tmp41, basis_bits.bit_6);
        bytetest_b8_b9 = simd_and(tmp70, tmp116);
        tmp117 = simd_and(tmp87, bytetest_b8_b9);
        struct_Lu.cc = simd_or(tmp117, struct_Lu.cc);
        bytetest_c5 = simd_and(tmp13, tmp84);
        bytetest_bb_bb = simd_and(tmp70, tmp78);
        tmp118 = simd_and(tmp87, bytetest_bb_bb);
        struct_Lu.cc = simd_or(tmp118, struct_Lu.cc);
        bytetest_c5 = simd_and(tmp13, tmp84);
        bytetest_bd_bd = simd_and(tmp70, tmp80);
        tmp119 = simd_and(tmp87, bytetest_bd_bd);
        struct_Lu.cc = simd_or(tmp119, struct_Lu.cc);
        bytetest_c6 = simd_and(tmp13, tmp39);
        tmp120 = simd_andc(tmp31, tmp7);
        tmp121 = simd_not(basis_bits.bit_7);
        tmp122 = simd_or(simd_and(basis_bits.bit_6, tmp121), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
        bytetest_81_82 = simd_and(tmp120, tmp122);
        tmp123 = simd_and(tmp21, bytetest_c6);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp123, carryQ.get_carry_in(4), tmp124));
        tmp125 = simd_and(tmp124, bytetest_81_82);
        struct_Lu.cc = simd_or(tmp125, struct_Lu.cc);
        bytetest_c6 = simd_and(tmp13, tmp39);
        bytetest_84_84 = simd_and(tmp31, tmp30);
        tmp126 = simd_and(tmp124, bytetest_84_84);
        struct_Lu.cc = simd_or(tmp126, struct_Lu.cc);
        bytetest_c6 = simd_and(tmp13, tmp39);
        tmp127 = simd_and(tmp29, basis_bits.bit_6);
        bytetest_86_87 = simd_and(tmp31, tmp127);
        tmp128 = simd_and(tmp124, bytetest_86_87);
        struct_Lu.cc = simd_or(tmp128, struct_Lu.cc);
        bytetest_c6 = simd_and(tmp13, tmp39);
        tmp129 = simd_and(tmp31, tmp41);
        bytetest_89_8b = simd_and(tmp129, tmp8);
        tmp130 = simd_and(tmp124, bytetest_89_8b);
        struct_Lu.cc = simd_or(tmp130, struct_Lu.cc);
        bytetest_c6 = simd_and(tmp13, tmp39);
        tmp131 = simd_or(tmp7, basis_bits.bit_6);
        tmp132 = simd_not(tmp131);
        tmp133 = simd_and(tmp46, basis_bits.bit_6);
        tmp134 = simd_or(simd_and(basis_bits.bit_3, tmp132), simd_andc(tmp133, basis_bits.bit_3));
        bytetest_8e_91 = simd_and(tmp16, tmp134);
        tmp135 = simd_and(tmp124, bytetest_8e_91);
        struct_Lu.cc = simd_or(tmp135, struct_Lu.cc);
        bytetest_c6 = simd_and(tmp13, tmp39);
        tmp136 = simd_andc(tmp26, basis_bits.bit_4);
        tmp137 = simd_not(tmp8);
        tmp138 = simd_or(simd_and(basis_bits.bit_5, tmp137), simd_andc(tmp3, basis_bits.bit_5));
        bytetest_93_94 = simd_and(tmp136, tmp138);
        tmp139 = simd_and(tmp124, bytetest_93_94);
        struct_Lu.cc = simd_or(tmp139, struct_Lu.cc);
        bytetest_c6 = simd_and(tmp13, tmp39);
        tmp140 = simd_or(basis_bits.bit_5, tmp8);
        tmp141 = simd_not(tmp140);
        tmp142 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp143 = simd_or(simd_and(basis_bits.bit_4, tmp141), simd_andc(tmp142, basis_bits.bit_4));
        bytetest_96_98 = simd_and(tmp26, tmp143);
        tmp144 = simd_and(tmp124, bytetest_96_98);
        struct_Lu.cc = simd_or(tmp144, struct_Lu.cc);
        bytetest_c6 = simd_and(tmp13, tmp39);
        tmp145 = simd_andc(tmp46, basis_bits.bit_6);
        bytetest_9c_9d = simd_and(tmp26, tmp145);
        tmp146 = simd_and(tmp124, bytetest_9c_9d);
        struct_Lu.cc = simd_or(tmp146, struct_Lu.cc);
        bytetest_c6 = simd_and(tmp13, tmp39);
        tmp147 = simd_or(basis_bits.bit_3, tmp9);
        tmp148 = simd_not(tmp147);
        tmp149 = simd_and(basis_bits.bit_3, tmp82);
        tmp150 = simd_or(simd_and(basis_bits.bit_2, tmp148), simd_andc(tmp149, basis_bits.bit_2));
        bytetest_9f_a0 = simd_and(tmp15, tmp150);
        tmp151 = simd_and(tmp124, bytetest_9f_a0);
        struct_Lu.cc = simd_or(tmp151, struct_Lu.cc);
        bytetest_c6 = simd_and(tmp13, tmp39);
        bytetest_a2_a2 = simd_and(tmp60, tmp36);
        tmp152 = simd_and(tmp124, bytetest_a2_a2);
        struct_Lu.cc = simd_or(tmp152, struct_Lu.cc);
        bytetest_c6 = simd_and(tmp13, tmp39);
        bytetest_a4_a4 = simd_and(tmp60, tmp30);
        tmp153 = simd_and(tmp124, bytetest_a4_a4);
        struct_Lu.cc = simd_or(tmp153, struct_Lu.cc);
        bytetest_c6 = simd_and(tmp13, tmp39);
        bytetest_a6_a7 = simd_and(tmp60, tmp127);
        tmp154 = simd_and(tmp124, bytetest_a6_a7);
        struct_Lu.cc = simd_or(tmp154, struct_Lu.cc);
        bytetest_c6 = simd_and(tmp13, tmp39);
        bytetest_a9_a9 = simd_and(tmp60, tmp76);
        tmp155 = simd_and(tmp124, bytetest_a9_a9);
        struct_Lu.cc = simd_or(tmp155, struct_Lu.cc);
        bytetest_c6 = simd_and(tmp13, tmp39);
        bytetest_ac_ac = simd_and(tmp60, tmp47);
        tmp156 = simd_and(tmp124, bytetest_ac_ac);
        struct_Lu.cc = simd_or(tmp156, struct_Lu.cc);
        bytetest_c6 = simd_and(tmp13, tmp39);
        bytetest_ae_af = simd_and(tmp60, tmp133);
        tmp157 = simd_and(tmp124, bytetest_ae_af);
        struct_Lu.cc = simd_or(tmp157, struct_Lu.cc);
        bytetest_c6 = simd_and(tmp13, tmp39);
        tmp158 = simd_andc(tmp70, tmp7);
        bytetest_b1_b3 = simd_and(tmp158, tmp8);
        tmp159 = simd_and(tmp124, bytetest_b1_b3);
        struct_Lu.cc = simd_or(tmp159, struct_Lu.cc);
        bytetest_c6 = simd_and(tmp13, tmp39);
        bytetest_b5_b5 = simd_and(tmp70, tmp84);
        tmp160 = simd_and(tmp124, bytetest_b5_b5);
        struct_Lu.cc = simd_or(tmp160, struct_Lu.cc);
        bytetest_c6 = simd_and(tmp13, tmp39);
        tmp161 = simd_or(simd_and(basis_bits.bit_4, tmp141), simd_andc(tmp17, basis_bits.bit_4));
        bytetest_b7_b8 = simd_and(tmp70, tmp161);
        tmp162 = simd_and(tmp124, bytetest_b7_b8);
        struct_Lu.cc = simd_or(tmp162, struct_Lu.cc);
        bytetest_c6 = simd_and(tmp13, tmp39);
        bytetest_bc_bc = simd_and(tmp70, tmp47);
        tmp163 = simd_and(tmp124, bytetest_bc_bc);
        struct_Lu.cc = simd_or(tmp163, struct_Lu.cc);
        bytetest_c7 = simd_and(tmp13, tmp91);
        bytetest_84_84 = simd_and(tmp31, tmp30);
        tmp164 = simd_and(tmp21, bytetest_c7);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp164, carryQ.get_carry_in(5), tmp165));
        tmp166 = simd_and(tmp165, bytetest_84_84);
        struct_Lu.cc = simd_or(tmp166, struct_Lu.cc);
        bytetest_c7 = simd_and(tmp13, tmp91);
        bytetest_87_87 = simd_and(tmp31, tmp91);
        tmp167 = simd_and(tmp165, bytetest_87_87);
        struct_Lu.cc = simd_or(tmp167, struct_Lu.cc);
        bytetest_c7 = simd_and(tmp13, tmp91);
        bytetest_8a_8a = simd_and(tmp31, tmp44);
        tmp168 = simd_and(tmp165, bytetest_8a_8a);
        struct_Lu.cc = simd_or(tmp168, struct_Lu.cc);
        bytetest_c7 = simd_and(tmp13, tmp91);
        bytetest_8d_8d = simd_and(tmp31, tmp80);
        tmp169 = simd_and(tmp165, bytetest_8d_8d);
        struct_Lu.cc = simd_or(tmp169, struct_Lu.cc);
        bytetest_c7 = simd_and(tmp13, tmp91);
        bytetest_8f_8f = simd_and(tmp31, tmp82);
        tmp170 = simd_and(tmp165, bytetest_8f_8f);
        struct_Lu.cc = simd_or(tmp170, struct_Lu.cc);
        bytetest_c7 = simd_and(tmp13, tmp91);
        bytetest_91_91 = simd_and(tmp26, tmp85);
        tmp171 = simd_and(tmp165, bytetest_91_91);
        struct_Lu.cc = simd_or(tmp171, struct_Lu.cc);
        bytetest_c7 = simd_and(tmp13, tmp91);
        bytetest_93_93 = simd_and(tmp26, tmp14);
        tmp172 = simd_and(tmp165, bytetest_93_93);
        struct_Lu.cc = simd_or(tmp172, struct_Lu.cc);
        bytetest_c7 = simd_and(tmp13, tmp91);
        bytetest_95_95 = simd_and(tmp26, tmp84);
        tmp173 = simd_and(tmp165, bytetest_95_95);
        struct_Lu.cc = simd_or(tmp173, struct_Lu.cc);
        bytetest_c7 = simd_and(tmp13, tmp91);
        bytetest_97_97 = simd_and(tmp26, tmp91);
        tmp174 = simd_and(tmp165, bytetest_97_97);
        struct_Lu.cc = simd_or(tmp174, struct_Lu.cc);
        bytetest_c7 = simd_and(tmp13, tmp91);
        bytetest_99_99 = simd_and(tmp26, tmp76);
        tmp175 = simd_and(tmp165, bytetest_99_99);
        struct_Lu.cc = simd_or(tmp175, struct_Lu.cc);
        bytetest_c7 = simd_and(tmp13, tmp91);
        bytetest_9b_9b = simd_and(tmp26, tmp78);
        tmp176 = simd_and(tmp165, bytetest_9b_9b);
        struct_Lu.cc = simd_or(tmp176, struct_Lu.cc);
        bytetest_c7 = simd_and(tmp13, tmp91);
        bytetest_9e_9e = simd_and(tmp26, tmp49);
        tmp177 = simd_and(tmp165, bytetest_9e_9e);
        struct_Lu.cc = simd_or(tmp177, struct_Lu.cc);
        bytetest_c7 = simd_and(tmp13, tmp91);
        bytetest_a0_a0 = simd_andc(tmp60, tmp9);
        tmp178 = simd_and(tmp165, bytetest_a0_a0);
        struct_Lu.cc = simd_or(tmp178, struct_Lu.cc);
        bytetest_c7 = simd_and(tmp13, tmp91);
        bytetest_a2_a2 = simd_and(tmp60, tmp36);
        tmp179 = simd_and(tmp165, bytetest_a2_a2);
        struct_Lu.cc = simd_or(tmp179, struct_Lu.cc);
        bytetest_c7 = simd_and(tmp13, tmp91);
        bytetest_a4_a4 = simd_and(tmp60, tmp30);
        tmp180 = simd_and(tmp165, bytetest_a4_a4);
        struct_Lu.cc = simd_or(tmp180, struct_Lu.cc);
        bytetest_c7 = simd_and(tmp13, tmp91);
        bytetest_a6_a6 = simd_and(tmp60, tmp39);
        tmp181 = simd_and(tmp165, bytetest_a6_a6);
        struct_Lu.cc = simd_or(tmp181, struct_Lu.cc);
        bytetest_c7 = simd_and(tmp13, tmp91);
        bytetest_a8_a8 = simd_and(tmp60, tmp42);
        tmp182 = simd_and(tmp165, bytetest_a8_a8);
        struct_Lu.cc = simd_or(tmp182, struct_Lu.cc);
        bytetest_c7 = simd_and(tmp13, tmp91);
        bytetest_aa_aa = simd_and(tmp60, tmp44);
        tmp183 = simd_and(tmp165, bytetest_aa_aa);
        struct_Lu.cc = simd_or(tmp183, struct_Lu.cc);
        bytetest_c7 = simd_and(tmp13, tmp91);
        bytetest_ac_ac = simd_and(tmp60, tmp47);
        tmp184 = simd_and(tmp165, bytetest_ac_ac);
        struct_Lu.cc = simd_or(tmp184, struct_Lu.cc);
        bytetest_c7 = simd_and(tmp13, tmp91);
        bytetest_ae_ae = simd_and(tmp60, tmp49);
        tmp185 = simd_and(tmp165, bytetest_ae_ae);
        struct_Lu.cc = simd_or(tmp185, struct_Lu.cc);
        bytetest_c7 = simd_and(tmp13, tmp91);
        bytetest_b1_b1 = simd_and(tmp70, tmp85);
        tmp186 = simd_and(tmp165, bytetest_b1_b1);
        struct_Lu.cc = simd_or(tmp186, struct_Lu.cc);
        bytetest_c7 = simd_and(tmp13, tmp91);
        bytetest_b4_b4 = simd_and(tmp70, tmp30);
        tmp187 = simd_and(tmp165, bytetest_b4_b4);
        struct_Lu.cc = simd_or(tmp187, struct_Lu.cc);
        bytetest_c7 = simd_and(tmp13, tmp91);
        bytetest_b6_b8 = simd_and(tmp70, tmp143);
        tmp188 = simd_and(tmp165, bytetest_b6_b8);
        struct_Lu.cc = simd_or(tmp188, struct_Lu.cc);
        bytetest_c7 = simd_and(tmp13, tmp91);
        bytetest_ba_ba = simd_and(tmp70, tmp44);
        tmp189 = simd_and(tmp165, bytetest_ba_ba);
        struct_Lu.cc = simd_or(tmp189, struct_Lu.cc);
        bytetest_c7 = simd_and(tmp13, tmp91);
        bytetest_bc_bc = simd_and(tmp70, tmp47);
        tmp190 = simd_and(tmp165, bytetest_bc_bc);
        struct_Lu.cc = simd_or(tmp190, struct_Lu.cc);
        bytetest_c7 = simd_and(tmp13, tmp91);
        bytetest_be_be = simd_and(tmp70, tmp49);
        tmp191 = simd_and(tmp165, bytetest_be_be);
        struct_Lu.cc = simd_or(tmp191, struct_Lu.cc);
        bytetest_c8 = simd_and(tmp13, tmp42);
        bytetest_80_80 = simd_andc(tmp31, tmp9);
        tmp192 = simd_and(tmp21, bytetest_c8);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp192, carryQ.get_carry_in(6), tmp193));
        tmp194 = simd_and(tmp193, bytetest_80_80);
        struct_Lu.cc = simd_or(tmp194, struct_Lu.cc);
        bytetest_c8 = simd_and(tmp13, tmp42);
        bytetest_82_82 = simd_and(tmp31, tmp36);
        tmp195 = simd_and(tmp193, bytetest_82_82);
        struct_Lu.cc = simd_or(tmp195, struct_Lu.cc);
        bytetest_c8 = simd_and(tmp13, tmp42);
        bytetest_84_84 = simd_and(tmp31, tmp30);
        tmp196 = simd_and(tmp193, bytetest_84_84);
        struct_Lu.cc = simd_or(tmp196, struct_Lu.cc);
        bytetest_c8 = simd_and(tmp13, tmp42);
        bytetest_86_86 = simd_and(tmp31, tmp39);
        tmp197 = simd_and(tmp193, bytetest_86_86);
        struct_Lu.cc = simd_or(tmp197, struct_Lu.cc);
        bytetest_c8 = simd_and(tmp13, tmp42);
        bytetest_88_88 = simd_and(tmp31, tmp42);
        tmp198 = simd_and(tmp193, bytetest_88_88);
        struct_Lu.cc = simd_or(tmp198, struct_Lu.cc);
        bytetest_c8 = simd_and(tmp13, tmp42);
        bytetest_8a_8a = simd_and(tmp31, tmp44);
        tmp199 = simd_and(tmp193, bytetest_8a_8a);
        struct_Lu.cc = simd_or(tmp199, struct_Lu.cc);
        bytetest_c8 = simd_and(tmp13, tmp42);
        bytetest_8c_8c = simd_and(tmp31, tmp47);
        tmp200 = simd_and(tmp193, bytetest_8c_8c);
        struct_Lu.cc = simd_or(tmp200, struct_Lu.cc);
        bytetest_c8 = simd_and(tmp13, tmp42);
        bytetest_8e_8e = simd_and(tmp31, tmp49);
        tmp201 = simd_and(tmp193, bytetest_8e_8e);
        struct_Lu.cc = simd_or(tmp201, struct_Lu.cc);
        bytetest_c8 = simd_and(tmp13, tmp42);
        bytetest_90_90 = simd_andc(tmp26, tmp9);
        tmp202 = simd_and(tmp193, bytetest_90_90);
        struct_Lu.cc = simd_or(tmp202, struct_Lu.cc);
        bytetest_c8 = simd_and(tmp13, tmp42);
        bytetest_92_92 = simd_and(tmp26, tmp36);
        tmp203 = simd_and(tmp193, bytetest_92_92);
        struct_Lu.cc = simd_or(tmp203, struct_Lu.cc);
        bytetest_c8 = simd_and(tmp13, tmp42);
        bytetest_94_94 = simd_and(tmp26, tmp30);
        tmp204 = simd_and(tmp193, bytetest_94_94);
        struct_Lu.cc = simd_or(tmp204, struct_Lu.cc);
        bytetest_c8 = simd_and(tmp13, tmp42);
        bytetest_96_96 = simd_and(tmp26, tmp39);
        tmp205 = simd_and(tmp193, bytetest_96_96);
        struct_Lu.cc = simd_or(tmp205, struct_Lu.cc);
        bytetest_c8 = simd_and(tmp13, tmp42);
        bytetest_98_98 = simd_and(tmp26, tmp42);
        tmp206 = simd_and(tmp193, bytetest_98_98);
        struct_Lu.cc = simd_or(tmp206, struct_Lu.cc);
        bytetest_c8 = simd_and(tmp13, tmp42);
        bytetest_9a_9a = simd_and(tmp26, tmp44);
        tmp207 = simd_and(tmp193, bytetest_9a_9a);
        struct_Lu.cc = simd_or(tmp207, struct_Lu.cc);
        bytetest_c8 = simd_and(tmp13, tmp42);
        bytetest_9c_9c = simd_and(tmp26, tmp47);
        tmp208 = simd_and(tmp193, bytetest_9c_9c);
        struct_Lu.cc = simd_or(tmp208, struct_Lu.cc);
        bytetest_c8 = simd_and(tmp13, tmp42);
        bytetest_9e_9e = simd_and(tmp26, tmp49);
        tmp209 = simd_and(tmp193, bytetest_9e_9e);
        struct_Lu.cc = simd_or(tmp209, struct_Lu.cc);
        bytetest_c8 = simd_and(tmp13, tmp42);
        bytetest_a0_a0 = simd_andc(tmp60, tmp9);
        tmp210 = simd_and(tmp193, bytetest_a0_a0);
        struct_Lu.cc = simd_or(tmp210, struct_Lu.cc);
        bytetest_c8 = simd_and(tmp13, tmp42);
        bytetest_a2_a2 = simd_and(tmp60, tmp36);
        tmp211 = simd_and(tmp193, bytetest_a2_a2);
        struct_Lu.cc = simd_or(tmp211, struct_Lu.cc);
        bytetest_c8 = simd_and(tmp13, tmp42);
        bytetest_a4_a4 = simd_and(tmp60, tmp30);
        tmp212 = simd_and(tmp193, bytetest_a4_a4);
        struct_Lu.cc = simd_or(tmp212, struct_Lu.cc);
        bytetest_c8 = simd_and(tmp13, tmp42);
        bytetest_a6_a6 = simd_and(tmp60, tmp39);
        tmp213 = simd_and(tmp193, bytetest_a6_a6);
        struct_Lu.cc = simd_or(tmp213, struct_Lu.cc);
        bytetest_c8 = simd_and(tmp13, tmp42);
        bytetest_a8_a8 = simd_and(tmp60, tmp42);
        tmp214 = simd_and(tmp193, bytetest_a8_a8);
        struct_Lu.cc = simd_or(tmp214, struct_Lu.cc);
        bytetest_c8 = simd_and(tmp13, tmp42);
        bytetest_aa_aa = simd_and(tmp60, tmp44);
        tmp215 = simd_and(tmp193, bytetest_aa_aa);
        struct_Lu.cc = simd_or(tmp215, struct_Lu.cc);
        bytetest_c8 = simd_and(tmp13, tmp42);
        bytetest_ac_ac = simd_and(tmp60, tmp47);
        tmp216 = simd_and(tmp193, bytetest_ac_ac);
        struct_Lu.cc = simd_or(tmp216, struct_Lu.cc);
        bytetest_c8 = simd_and(tmp13, tmp42);
        bytetest_ae_ae = simd_and(tmp60, tmp49);
        tmp217 = simd_and(tmp193, bytetest_ae_ae);
        struct_Lu.cc = simd_or(tmp217, struct_Lu.cc);
        bytetest_c8 = simd_and(tmp13, tmp42);
        bytetest_b0_b0 = simd_andc(tmp70, tmp9);
        tmp218 = simd_and(tmp193, bytetest_b0_b0);
        struct_Lu.cc = simd_or(tmp218, struct_Lu.cc);
        bytetest_c8 = simd_and(tmp13, tmp42);
        bytetest_b2_b2 = simd_and(tmp70, tmp36);
        tmp219 = simd_and(tmp193, bytetest_b2_b2);
        struct_Lu.cc = simd_or(tmp219, struct_Lu.cc);
        bytetest_c8 = simd_and(tmp13, tmp42);
        tmp220 = simd_and(tmp41, basis_bits.bit_6);
        bytetest_ba_bb = simd_and(tmp70, tmp220);
        tmp221 = simd_and(tmp193, bytetest_ba_bb);
        struct_Lu.cc = simd_or(tmp221, struct_Lu.cc);
        bytetest_c8 = simd_and(tmp13, tmp42);
        tmp222 = simd_and(tmp70, tmp46);
        bytetest_bd_be = simd_and(tmp222, tmp122);
        tmp223 = simd_and(tmp193, bytetest_bd_be);
        struct_Lu.cc = simd_or(tmp223, struct_Lu.cc);
        bytetest_c9 = simd_and(tmp13, tmp76);
        bytetest_81_81 = simd_and(tmp31, tmp85);
        tmp224 = simd_and(tmp21, bytetest_c9);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp224, carryQ.get_carry_in(7), tmp225));
        tmp226 = simd_and(tmp225, bytetest_81_81);
        struct_Lu.cc = simd_or(tmp226, struct_Lu.cc);
        bytetest_c9 = simd_and(tmp13, tmp76);
        tmp227 = simd_andc(tmp31, basis_bits.bit_4);
        tmp228 = simd_not(tmp3);
        tmp229 = simd_or(simd_and(basis_bits.bit_5, tmp228), simd_andc(tmp3, basis_bits.bit_5));
        bytetest_83_86 = simd_and(tmp227, tmp229);
        tmp230 = simd_and(tmp225, bytetest_83_86);
        struct_Lu.cc = simd_or(tmp230, struct_Lu.cc);
        bytetest_c9 = simd_and(tmp13, tmp76);
        bytetest_88_88 = simd_and(tmp31, tmp42);
        tmp231 = simd_and(tmp225, bytetest_88_88);
        struct_Lu.cc = simd_or(tmp231, struct_Lu.cc);
        bytetest_c9 = simd_and(tmp13, tmp76);
        bytetest_8a_8a = simd_and(tmp31, tmp44);
        tmp232 = simd_and(tmp225, bytetest_8a_8a);
        struct_Lu.cc = simd_or(tmp232, struct_Lu.cc);
        bytetest_c9 = simd_and(tmp13, tmp76);
        bytetest_8c_8c = simd_and(tmp31, tmp47);
        tmp233 = simd_and(tmp225, bytetest_8c_8c);
        struct_Lu.cc = simd_or(tmp233, struct_Lu.cc);
        bytetest_c9 = simd_and(tmp13, tmp76);
        bytetest_8e_8e = simd_and(tmp31, tmp49);
        tmp234 = simd_and(tmp225, bytetest_8e_8e);
        struct_Lu.cc = simd_or(tmp234, struct_Lu.cc);
        bytetest_cd = simd_and(tmp13, tmp80);
        bytetest_b0_b0 = simd_andc(tmp70, tmp9);
        tmp235 = simd_and(tmp21, bytetest_cd);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(tmp235, carryQ.get_carry_in(8), tmp236));
        tmp237 = simd_and(tmp236, bytetest_b0_b0);
        struct_Lu.cc = simd_or(tmp237, struct_Lu.cc);
        bytetest_cd = simd_and(tmp13, tmp80);
        bytetest_b2_b2 = simd_and(tmp70, tmp36);
        tmp238 = simd_and(tmp236, bytetest_b2_b2);
        struct_Lu.cc = simd_or(tmp238, struct_Lu.cc);
        bytetest_cd = simd_and(tmp13, tmp80);
        bytetest_b6_b6 = simd_and(tmp70, tmp39);
        tmp239 = simd_and(tmp236, bytetest_b6_b6);
        struct_Lu.cc = simd_or(tmp239, struct_Lu.cc);
        bytetest_ce = simd_and(tmp13, tmp49);
        bytetest_86_86 = simd_and(tmp31, tmp39);
        tmp240 = simd_and(tmp21, bytetest_ce);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(tmp240, carryQ.get_carry_in(9), tmp241));
        tmp242 = simd_and(tmp241, bytetest_86_86);
        struct_Lu.cc = simd_or(tmp242, struct_Lu.cc);
        bytetest_ce = simd_and(tmp13, tmp49);
        bytetest_88_8a = simd_andc(tmp129, tmp3);
        tmp243 = simd_and(tmp241, bytetest_88_8a);
        struct_Lu.cc = simd_or(tmp243, struct_Lu.cc);
        bytetest_ce = simd_and(tmp13, tmp49);
        bytetest_8c_8c = simd_and(tmp31, tmp47);
        tmp244 = simd_and(tmp241, bytetest_8c_8c);
        struct_Lu.cc = simd_or(tmp244, struct_Lu.cc);
        bytetest_ce = simd_and(tmp13, tmp49);
        bytetest_8e_8f = simd_and(tmp31, tmp133);
        tmp245 = simd_and(tmp241, bytetest_8e_8f);
        struct_Lu.cc = simd_or(tmp245, struct_Lu.cc);
        bytetest_ce = simd_and(tmp13, tmp49);
        tmp246 = simd_or(basis_bits.bit_3, tmp131);
        tmp247 = simd_not(tmp246);
        tmp248 = simd_and(basis_bits.bit_3, tmp9);
        tmp249 = simd_or(simd_and(basis_bits.bit_2, tmp247), simd_andc(tmp248, basis_bits.bit_2));
        bytetest_91_a1 = simd_and(tmp15, tmp249);
        tmp250 = simd_and(tmp241, bytetest_91_a1);
        struct_Lu.cc = simd_or(tmp250, struct_Lu.cc);
        bytetest_ce = simd_and(tmp13, tmp49);
        tmp251 = simd_not(basis_bits.bit_5);
        tmp252 = simd_or(simd_and(basis_bits.bit_4, tmp251), simd_andc(tmp4, basis_bits.bit_4));
        bytetest_a3_ab = simd_and(tmp60, tmp252);
        tmp253 = simd_and(tmp241, bytetest_a3_ab);
        struct_Lu.cc = simd_or(tmp253, struct_Lu.cc);
        bytetest_cf = simd_and(tmp13, tmp82);
        bytetest_8f_8f = simd_and(tmp31, tmp82);
        tmp254 = simd_and(tmp21, bytetest_cf);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(tmp254, carryQ.get_carry_in(10), tmp255));
        tmp256 = simd_and(tmp255, bytetest_8f_8f);
        struct_Lu.cc = simd_or(tmp256, struct_Lu.cc);
        bytetest_cf = simd_and(tmp13, tmp82);
        tmp257 = simd_or(simd_and(basis_bits.bit_5, tmp137), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        bytetest_92_94 = simd_and(tmp136, tmp257);
        tmp258 = simd_and(tmp255, bytetest_92_94);
        struct_Lu.cc = simd_or(tmp258, struct_Lu.cc);
        bytetest_cf = simd_and(tmp13, tmp82);
        bytetest_98_98 = simd_and(tmp26, tmp42);
        tmp259 = simd_and(tmp255, bytetest_98_98);
        struct_Lu.cc = simd_or(tmp259, struct_Lu.cc);
        bytetest_cf = simd_and(tmp13, tmp82);
        bytetest_9a_9a = simd_and(tmp26, tmp44);
        tmp260 = simd_and(tmp255, bytetest_9a_9a);
        struct_Lu.cc = simd_or(tmp260, struct_Lu.cc);
        bytetest_cf = simd_and(tmp13, tmp82);
        bytetest_9c_9c = simd_and(tmp26, tmp47);
        tmp261 = simd_and(tmp255, bytetest_9c_9c);
        struct_Lu.cc = simd_or(tmp261, struct_Lu.cc);
        bytetest_cf = simd_and(tmp13, tmp82);
        bytetest_9e_9e = simd_and(tmp26, tmp49);
        tmp262 = simd_and(tmp255, bytetest_9e_9e);
        struct_Lu.cc = simd_or(tmp262, struct_Lu.cc);
        bytetest_cf = simd_and(tmp13, tmp82);
        bytetest_a0_a0 = simd_andc(tmp60, tmp9);
        tmp263 = simd_and(tmp255, bytetest_a0_a0);
        struct_Lu.cc = simd_or(tmp263, struct_Lu.cc);
        bytetest_cf = simd_and(tmp13, tmp82);
        bytetest_a2_a2 = simd_and(tmp60, tmp36);
        tmp264 = simd_and(tmp255, bytetest_a2_a2);
        struct_Lu.cc = simd_or(tmp264, struct_Lu.cc);
        bytetest_cf = simd_and(tmp13, tmp82);
        bytetest_a4_a4 = simd_and(tmp60, tmp30);
        tmp265 = simd_and(tmp255, bytetest_a4_a4);
        struct_Lu.cc = simd_or(tmp265, struct_Lu.cc);
        bytetest_cf = simd_and(tmp13, tmp82);
        bytetest_a6_a6 = simd_and(tmp60, tmp39);
        tmp266 = simd_and(tmp255, bytetest_a6_a6);
        struct_Lu.cc = simd_or(tmp266, struct_Lu.cc);
        bytetest_cf = simd_and(tmp13, tmp82);
        bytetest_a8_a8 = simd_and(tmp60, tmp42);
        tmp267 = simd_and(tmp255, bytetest_a8_a8);
        struct_Lu.cc = simd_or(tmp267, struct_Lu.cc);
        bytetest_cf = simd_and(tmp13, tmp82);
        bytetest_aa_aa = simd_and(tmp60, tmp44);
        tmp268 = simd_and(tmp255, bytetest_aa_aa);
        struct_Lu.cc = simd_or(tmp268, struct_Lu.cc);
        bytetest_cf = simd_and(tmp13, tmp82);
        bytetest_ac_ac = simd_and(tmp60, tmp47);
        tmp269 = simd_and(tmp255, bytetest_ac_ac);
        struct_Lu.cc = simd_or(tmp269, struct_Lu.cc);
        bytetest_cf = simd_and(tmp13, tmp82);
        bytetest_ae_ae = simd_and(tmp60, tmp49);
        tmp270 = simd_and(tmp255, bytetest_ae_ae);
        struct_Lu.cc = simd_or(tmp270, struct_Lu.cc);
        bytetest_cf = simd_and(tmp13, tmp82);
        bytetest_b4_b4 = simd_and(tmp70, tmp30);
        tmp271 = simd_and(tmp255, bytetest_b4_b4);
        struct_Lu.cc = simd_or(tmp271, struct_Lu.cc);
        bytetest_cf = simd_and(tmp13, tmp82);
        bytetest_b7_b7 = simd_and(tmp70, tmp91);
        tmp272 = simd_and(tmp255, bytetest_b7_b7);
        struct_Lu.cc = simd_or(tmp272, struct_Lu.cc);
        bytetest_cf = simd_and(tmp13, tmp82);
        tmp273 = simd_and(tmp70, tmp41);
        bytetest_b9_ba = simd_and(tmp273, tmp122);
        tmp274 = simd_and(tmp255, bytetest_b9_ba);
        struct_Lu.cc = simd_or(tmp274, struct_Lu.cc);
        tmp275 = simd_and(tmp11, tmp25);
        bytetest_d0 = simd_andc(tmp275, tmp9);
        bytetest_80_af = simd_andc(tmp15, tmp69);
        tmp276 = simd_and(tmp21, bytetest_d0);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(tmp276, carryQ.get_carry_in(11), tmp277));
        tmp278 = simd_and(tmp277, bytetest_80_af);
        bytetest_cf = simd_and(tmp13, tmp82);
        bytetest_bd_bf = simd_and(tmp222, tmp8);
        tmp279 = simd_and(tmp255, bytetest_bd_bf);
        tmp280 = simd_or(tmp279, tmp278);
        struct_Lu.cc = simd_or(tmp280, struct_Lu.cc);
        bytetest_d1 = simd_and(tmp275, tmp85);
        bytetest_a0_a0 = simd_andc(tmp60, tmp9);
        tmp281 = simd_and(tmp21, bytetest_d1);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(tmp281, carryQ.get_carry_in(12), tmp282));
        tmp283 = simd_and(tmp282, bytetest_a0_a0);
        struct_Lu.cc = simd_or(tmp283, struct_Lu.cc);
        bytetest_d1 = simd_and(tmp275, tmp85);
        bytetest_a2_a2 = simd_and(tmp60, tmp36);
        tmp284 = simd_and(tmp282, bytetest_a2_a2);
        struct_Lu.cc = simd_or(tmp284, struct_Lu.cc);
        bytetest_d1 = simd_and(tmp275, tmp85);
        bytetest_a4_a4 = simd_and(tmp60, tmp30);
        tmp285 = simd_and(tmp282, bytetest_a4_a4);
        struct_Lu.cc = simd_or(tmp285, struct_Lu.cc);
        bytetest_d1 = simd_and(tmp275, tmp85);
        bytetest_a6_a6 = simd_and(tmp60, tmp39);
        tmp286 = simd_and(tmp282, bytetest_a6_a6);
        struct_Lu.cc = simd_or(tmp286, struct_Lu.cc);
        bytetest_d1 = simd_and(tmp275, tmp85);
        bytetest_a8_a8 = simd_and(tmp60, tmp42);
        tmp287 = simd_and(tmp282, bytetest_a8_a8);
        struct_Lu.cc = simd_or(tmp287, struct_Lu.cc);
        bytetest_d1 = simd_and(tmp275, tmp85);
        bytetest_aa_aa = simd_and(tmp60, tmp44);
        tmp288 = simd_and(tmp282, bytetest_aa_aa);
        struct_Lu.cc = simd_or(tmp288, struct_Lu.cc);
        bytetest_d1 = simd_and(tmp275, tmp85);
        bytetest_ac_ac = simd_and(tmp60, tmp47);
        tmp289 = simd_and(tmp282, bytetest_ac_ac);
        struct_Lu.cc = simd_or(tmp289, struct_Lu.cc);
        bytetest_d1 = simd_and(tmp275, tmp85);
        bytetest_ae_ae = simd_and(tmp60, tmp49);
        tmp290 = simd_and(tmp282, bytetest_ae_ae);
        struct_Lu.cc = simd_or(tmp290, struct_Lu.cc);
        bytetest_d1 = simd_and(tmp275, tmp85);
        bytetest_b0_b0 = simd_andc(tmp70, tmp9);
        tmp291 = simd_and(tmp282, bytetest_b0_b0);
        struct_Lu.cc = simd_or(tmp291, struct_Lu.cc);
        bytetest_d1 = simd_and(tmp275, tmp85);
        bytetest_b2_b2 = simd_and(tmp70, tmp36);
        tmp292 = simd_and(tmp282, bytetest_b2_b2);
        struct_Lu.cc = simd_or(tmp292, struct_Lu.cc);
        bytetest_d1 = simd_and(tmp275, tmp85);
        bytetest_b4_b4 = simd_and(tmp70, tmp30);
        tmp293 = simd_and(tmp282, bytetest_b4_b4);
        struct_Lu.cc = simd_or(tmp293, struct_Lu.cc);
        bytetest_d1 = simd_and(tmp275, tmp85);
        bytetest_b6_b6 = simd_and(tmp70, tmp39);
        tmp294 = simd_and(tmp282, bytetest_b6_b6);
        struct_Lu.cc = simd_or(tmp294, struct_Lu.cc);
        bytetest_d1 = simd_and(tmp275, tmp85);
        bytetest_b8_b8 = simd_and(tmp70, tmp42);
        tmp295 = simd_and(tmp282, bytetest_b8_b8);
        struct_Lu.cc = simd_or(tmp295, struct_Lu.cc);
        bytetest_d1 = simd_and(tmp275, tmp85);
        bytetest_ba_ba = simd_and(tmp70, tmp44);
        tmp296 = simd_and(tmp282, bytetest_ba_ba);
        struct_Lu.cc = simd_or(tmp296, struct_Lu.cc);
        bytetest_d1 = simd_and(tmp275, tmp85);
        bytetest_bc_bc = simd_and(tmp70, tmp47);
        tmp297 = simd_and(tmp282, bytetest_bc_bc);
        struct_Lu.cc = simd_or(tmp297, struct_Lu.cc);
        bytetest_d1 = simd_and(tmp275, tmp85);
        bytetest_be_be = simd_and(tmp70, tmp49);
        tmp298 = simd_and(tmp282, bytetest_be_be);
        struct_Lu.cc = simd_or(tmp298, struct_Lu.cc);
        bytetest_d2 = simd_and(tmp275, tmp36);
        bytetest_80_80 = simd_andc(tmp31, tmp9);
        tmp299 = simd_and(tmp21, bytetest_d2);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(tmp299, carryQ.get_carry_in(13), tmp300));
        tmp301 = simd_and(tmp300, bytetest_80_80);
        struct_Lu.cc = simd_or(tmp301, struct_Lu.cc);
        bytetest_d2 = simd_and(tmp275, tmp36);
        bytetest_8a_8a = simd_and(tmp31, tmp44);
        tmp302 = simd_and(tmp300, bytetest_8a_8a);
        struct_Lu.cc = simd_or(tmp302, struct_Lu.cc);
        bytetest_d2 = simd_and(tmp275, tmp36);
        bytetest_8c_8c = simd_and(tmp31, tmp47);
        tmp303 = simd_and(tmp300, bytetest_8c_8c);
        struct_Lu.cc = simd_or(tmp303, struct_Lu.cc);
        bytetest_d2 = simd_and(tmp275, tmp36);
        bytetest_8e_8e = simd_and(tmp31, tmp49);
        tmp304 = simd_and(tmp300, bytetest_8e_8e);
        struct_Lu.cc = simd_or(tmp304, struct_Lu.cc);
        bytetest_d2 = simd_and(tmp275, tmp36);
        bytetest_90_90 = simd_andc(tmp26, tmp9);
        tmp305 = simd_and(tmp300, bytetest_90_90);
        struct_Lu.cc = simd_or(tmp305, struct_Lu.cc);
        bytetest_d2 = simd_and(tmp275, tmp36);
        bytetest_92_92 = simd_and(tmp26, tmp36);
        tmp306 = simd_and(tmp300, bytetest_92_92);
        struct_Lu.cc = simd_or(tmp306, struct_Lu.cc);
        bytetest_d2 = simd_and(tmp275, tmp36);
        bytetest_94_94 = simd_and(tmp26, tmp30);
        tmp307 = simd_and(tmp300, bytetest_94_94);
        struct_Lu.cc = simd_or(tmp307, struct_Lu.cc);
        bytetest_d2 = simd_and(tmp275, tmp36);
        bytetest_96_96 = simd_and(tmp26, tmp39);
        tmp308 = simd_and(tmp300, bytetest_96_96);
        struct_Lu.cc = simd_or(tmp308, struct_Lu.cc);
        bytetest_d2 = simd_and(tmp275, tmp36);
        bytetest_98_98 = simd_and(tmp26, tmp42);
        tmp309 = simd_and(tmp300, bytetest_98_98);
        struct_Lu.cc = simd_or(tmp309, struct_Lu.cc);
        bytetest_d2 = simd_and(tmp275, tmp36);
        bytetest_9a_9a = simd_and(tmp26, tmp44);
        tmp310 = simd_and(tmp300, bytetest_9a_9a);
        struct_Lu.cc = simd_or(tmp310, struct_Lu.cc);
        bytetest_d2 = simd_and(tmp275, tmp36);
        bytetest_9c_9c = simd_and(tmp26, tmp47);
        tmp311 = simd_and(tmp300, bytetest_9c_9c);
        struct_Lu.cc = simd_or(tmp311, struct_Lu.cc);
        bytetest_d2 = simd_and(tmp275, tmp36);
        bytetest_9e_9e = simd_and(tmp26, tmp49);
        tmp312 = simd_and(tmp300, bytetest_9e_9e);
        struct_Lu.cc = simd_or(tmp312, struct_Lu.cc);
        bytetest_d2 = simd_and(tmp275, tmp36);
        bytetest_a0_a0 = simd_andc(tmp60, tmp9);
        tmp313 = simd_and(tmp300, bytetest_a0_a0);
        struct_Lu.cc = simd_or(tmp313, struct_Lu.cc);
        bytetest_d2 = simd_and(tmp275, tmp36);
        bytetest_a2_a2 = simd_and(tmp60, tmp36);
        tmp314 = simd_and(tmp300, bytetest_a2_a2);
        struct_Lu.cc = simd_or(tmp314, struct_Lu.cc);
        bytetest_d2 = simd_and(tmp275, tmp36);
        bytetest_a4_a4 = simd_and(tmp60, tmp30);
        tmp315 = simd_and(tmp300, bytetest_a4_a4);
        struct_Lu.cc = simd_or(tmp315, struct_Lu.cc);
        bytetest_d2 = simd_and(tmp275, tmp36);
        bytetest_a6_a6 = simd_and(tmp60, tmp39);
        tmp316 = simd_and(tmp300, bytetest_a6_a6);
        struct_Lu.cc = simd_or(tmp316, struct_Lu.cc);
        bytetest_d2 = simd_and(tmp275, tmp36);
        bytetest_a8_a8 = simd_and(tmp60, tmp42);
        tmp317 = simd_and(tmp300, bytetest_a8_a8);
        struct_Lu.cc = simd_or(tmp317, struct_Lu.cc);
        bytetest_d2 = simd_and(tmp275, tmp36);
        bytetest_aa_aa = simd_and(tmp60, tmp44);
        tmp318 = simd_and(tmp300, bytetest_aa_aa);
        struct_Lu.cc = simd_or(tmp318, struct_Lu.cc);
        bytetest_d2 = simd_and(tmp275, tmp36);
        bytetest_ac_ac = simd_and(tmp60, tmp47);
        tmp319 = simd_and(tmp300, bytetest_ac_ac);
        struct_Lu.cc = simd_or(tmp319, struct_Lu.cc);
        bytetest_d2 = simd_and(tmp275, tmp36);
        bytetest_ae_ae = simd_and(tmp60, tmp49);
        tmp320 = simd_and(tmp300, bytetest_ae_ae);
        struct_Lu.cc = simd_or(tmp320, struct_Lu.cc);
        bytetest_d2 = simd_and(tmp275, tmp36);
        bytetest_b0_b0 = simd_andc(tmp70, tmp9);
        tmp321 = simd_and(tmp300, bytetest_b0_b0);
        struct_Lu.cc = simd_or(tmp321, struct_Lu.cc);
        bytetest_d2 = simd_and(tmp275, tmp36);
        bytetest_b2_b2 = simd_and(tmp70, tmp36);
        tmp322 = simd_and(tmp300, bytetest_b2_b2);
        struct_Lu.cc = simd_or(tmp322, struct_Lu.cc);
        bytetest_d2 = simd_and(tmp275, tmp36);
        bytetest_b4_b4 = simd_and(tmp70, tmp30);
        tmp323 = simd_and(tmp300, bytetest_b4_b4);
        struct_Lu.cc = simd_or(tmp323, struct_Lu.cc);
        bytetest_d2 = simd_and(tmp275, tmp36);
        bytetest_b6_b6 = simd_and(tmp70, tmp39);
        tmp324 = simd_and(tmp300, bytetest_b6_b6);
        struct_Lu.cc = simd_or(tmp324, struct_Lu.cc);
        bytetest_d2 = simd_and(tmp275, tmp36);
        bytetest_b8_b8 = simd_and(tmp70, tmp42);
        tmp325 = simd_and(tmp300, bytetest_b8_b8);
        struct_Lu.cc = simd_or(tmp325, struct_Lu.cc);
        bytetest_d2 = simd_and(tmp275, tmp36);
        bytetest_ba_ba = simd_and(tmp70, tmp44);
        tmp326 = simd_and(tmp300, bytetest_ba_ba);
        struct_Lu.cc = simd_or(tmp326, struct_Lu.cc);
        bytetest_d2 = simd_and(tmp275, tmp36);
        bytetest_bc_bc = simd_and(tmp70, tmp47);
        tmp327 = simd_and(tmp300, bytetest_bc_bc);
        struct_Lu.cc = simd_or(tmp327, struct_Lu.cc);
        bytetest_d2 = simd_and(tmp275, tmp36);
        bytetest_be_be = simd_and(tmp70, tmp49);
        tmp328 = simd_and(tmp300, bytetest_be_be);
        struct_Lu.cc = simd_or(tmp328, struct_Lu.cc);
        bytetest_d3 = simd_and(tmp275, tmp14);
        bytetest_80_81 = simd_andc(tmp31, tmp131);
        tmp329 = simd_and(tmp21, bytetest_d3);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(tmp329, carryQ.get_carry_in(14), tmp330));
        tmp331 = simd_and(tmp330, bytetest_80_81);
        struct_Lu.cc = simd_or(tmp331, struct_Lu.cc);
        bytetest_d3 = simd_and(tmp275, tmp14);
        bytetest_83_83 = simd_and(tmp31, tmp14);
        tmp332 = simd_and(tmp330, bytetest_83_83);
        struct_Lu.cc = simd_or(tmp332, struct_Lu.cc);
        bytetest_d3 = simd_and(tmp275, tmp14);
        bytetest_85_85 = simd_and(tmp31, tmp84);
        tmp333 = simd_and(tmp330, bytetest_85_85);
        struct_Lu.cc = simd_or(tmp333, struct_Lu.cc);
        bytetest_d3 = simd_and(tmp275, tmp14);
        bytetest_87_87 = simd_and(tmp31, tmp91);
        tmp334 = simd_and(tmp330, bytetest_87_87);
        struct_Lu.cc = simd_or(tmp334, struct_Lu.cc);
        bytetest_d3 = simd_and(tmp275, tmp14);
        bytetest_89_89 = simd_and(tmp31, tmp76);
        tmp335 = simd_and(tmp330, bytetest_89_89);
        struct_Lu.cc = simd_or(tmp335, struct_Lu.cc);
        bytetest_d3 = simd_and(tmp275, tmp14);
        bytetest_8b_8b = simd_and(tmp31, tmp78);
        tmp336 = simd_and(tmp330, bytetest_8b_8b);
        struct_Lu.cc = simd_or(tmp336, struct_Lu.cc);
        bytetest_d3 = simd_and(tmp275, tmp14);
        bytetest_8d_8d = simd_and(tmp31, tmp80);
        tmp337 = simd_and(tmp330, bytetest_8d_8d);
        struct_Lu.cc = simd_or(tmp337, struct_Lu.cc);
        bytetest_d3 = simd_and(tmp275, tmp14);
        bytetest_90_90 = simd_andc(tmp26, tmp9);
        tmp338 = simd_and(tmp330, bytetest_90_90);
        struct_Lu.cc = simd_or(tmp338, struct_Lu.cc);
        bytetest_d3 = simd_and(tmp275, tmp14);
        bytetest_92_92 = simd_and(tmp26, tmp36);
        tmp339 = simd_and(tmp330, bytetest_92_92);
        struct_Lu.cc = simd_or(tmp339, struct_Lu.cc);
        bytetest_d3 = simd_and(tmp275, tmp14);
        bytetest_94_94 = simd_and(tmp26, tmp30);
        tmp340 = simd_and(tmp330, bytetest_94_94);
        struct_Lu.cc = simd_or(tmp340, struct_Lu.cc);
        bytetest_d3 = simd_and(tmp275, tmp14);
        bytetest_96_96 = simd_and(tmp26, tmp39);
        tmp341 = simd_and(tmp330, bytetest_96_96);
        struct_Lu.cc = simd_or(tmp341, struct_Lu.cc);
        bytetest_d3 = simd_and(tmp275, tmp14);
        bytetest_98_98 = simd_and(tmp26, tmp42);
        tmp342 = simd_and(tmp330, bytetest_98_98);
        struct_Lu.cc = simd_or(tmp342, struct_Lu.cc);
        bytetest_d3 = simd_and(tmp275, tmp14);
        bytetest_9a_9a = simd_and(tmp26, tmp44);
        tmp343 = simd_and(tmp330, bytetest_9a_9a);
        struct_Lu.cc = simd_or(tmp343, struct_Lu.cc);
        bytetest_d3 = simd_and(tmp275, tmp14);
        bytetest_9c_9c = simd_and(tmp26, tmp47);
        tmp344 = simd_and(tmp330, bytetest_9c_9c);
        struct_Lu.cc = simd_or(tmp344, struct_Lu.cc);
        bytetest_d3 = simd_and(tmp275, tmp14);
        bytetest_9e_9e = simd_and(tmp26, tmp49);
        tmp345 = simd_and(tmp330, bytetest_9e_9e);
        struct_Lu.cc = simd_or(tmp345, struct_Lu.cc);
        bytetest_d3 = simd_and(tmp275, tmp14);
        bytetest_a0_a0 = simd_andc(tmp60, tmp9);
        tmp346 = simd_and(tmp330, bytetest_a0_a0);
        struct_Lu.cc = simd_or(tmp346, struct_Lu.cc);
        bytetest_d3 = simd_and(tmp275, tmp14);
        bytetest_a2_a2 = simd_and(tmp60, tmp36);
        tmp347 = simd_and(tmp330, bytetest_a2_a2);
        struct_Lu.cc = simd_or(tmp347, struct_Lu.cc);
        bytetest_d3 = simd_and(tmp275, tmp14);
        bytetest_a4_a4 = simd_and(tmp60, tmp30);
        tmp348 = simd_and(tmp330, bytetest_a4_a4);
        struct_Lu.cc = simd_or(tmp348, struct_Lu.cc);
        bytetest_d3 = simd_and(tmp275, tmp14);
        bytetest_a6_a6 = simd_and(tmp60, tmp39);
        tmp349 = simd_and(tmp330, bytetest_a6_a6);
        struct_Lu.cc = simd_or(tmp349, struct_Lu.cc);
        bytetest_d3 = simd_and(tmp275, tmp14);
        bytetest_a8_a8 = simd_and(tmp60, tmp42);
        tmp350 = simd_and(tmp330, bytetest_a8_a8);
        struct_Lu.cc = simd_or(tmp350, struct_Lu.cc);
        bytetest_d3 = simd_and(tmp275, tmp14);
        bytetest_aa_aa = simd_and(tmp60, tmp44);
        tmp351 = simd_and(tmp330, bytetest_aa_aa);
        struct_Lu.cc = simd_or(tmp351, struct_Lu.cc);
        bytetest_d3 = simd_and(tmp275, tmp14);
        bytetest_ac_ac = simd_and(tmp60, tmp47);
        tmp352 = simd_and(tmp330, bytetest_ac_ac);
        struct_Lu.cc = simd_or(tmp352, struct_Lu.cc);
        bytetest_d3 = simd_and(tmp275, tmp14);
        bytetest_ae_ae = simd_and(tmp60, tmp49);
        tmp353 = simd_and(tmp330, bytetest_ae_ae);
        struct_Lu.cc = simd_or(tmp353, struct_Lu.cc);
        bytetest_d3 = simd_and(tmp275, tmp14);
        bytetest_b0_b0 = simd_andc(tmp70, tmp9);
        tmp354 = simd_and(tmp330, bytetest_b0_b0);
        struct_Lu.cc = simd_or(tmp354, struct_Lu.cc);
        bytetest_d3 = simd_and(tmp275, tmp14);
        bytetest_b2_b2 = simd_and(tmp70, tmp36);
        tmp355 = simd_and(tmp330, bytetest_b2_b2);
        struct_Lu.cc = simd_or(tmp355, struct_Lu.cc);
        bytetest_d3 = simd_and(tmp275, tmp14);
        bytetest_b4_b4 = simd_and(tmp70, tmp30);
        tmp356 = simd_and(tmp330, bytetest_b4_b4);
        struct_Lu.cc = simd_or(tmp356, struct_Lu.cc);
        bytetest_d3 = simd_and(tmp275, tmp14);
        bytetest_b6_b6 = simd_and(tmp70, tmp39);
        tmp357 = simd_and(tmp330, bytetest_b6_b6);
        struct_Lu.cc = simd_or(tmp357, struct_Lu.cc);
        bytetest_d3 = simd_and(tmp275, tmp14);
        bytetest_b8_b8 = simd_and(tmp70, tmp42);
        tmp358 = simd_and(tmp330, bytetest_b8_b8);
        struct_Lu.cc = simd_or(tmp358, struct_Lu.cc);
        bytetest_d3 = simd_and(tmp275, tmp14);
        bytetest_ba_ba = simd_and(tmp70, tmp44);
        tmp359 = simd_and(tmp330, bytetest_ba_ba);
        struct_Lu.cc = simd_or(tmp359, struct_Lu.cc);
        bytetest_d3 = simd_and(tmp275, tmp14);
        bytetest_bc_bc = simd_and(tmp70, tmp47);
        tmp360 = simd_and(tmp330, bytetest_bc_bc);
        struct_Lu.cc = simd_or(tmp360, struct_Lu.cc);
        bytetest_d3 = simd_and(tmp275, tmp14);
        bytetest_be_be = simd_and(tmp70, tmp49);
        tmp361 = simd_and(tmp330, bytetest_be_be);
        struct_Lu.cc = simd_or(tmp361, struct_Lu.cc);
        bytetest_d4 = simd_and(tmp275, tmp30);
        bytetest_80_80 = simd_andc(tmp31, tmp9);
        tmp362 = simd_and(tmp21, bytetest_d4);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(tmp362, carryQ.get_carry_in(15), tmp363));
        tmp364 = simd_and(tmp363, bytetest_80_80);
        struct_Lu.cc = simd_or(tmp364, struct_Lu.cc);
        bytetest_d4 = simd_and(tmp275, tmp30);
        bytetest_82_82 = simd_and(tmp31, tmp36);
        tmp365 = simd_and(tmp363, bytetest_82_82);
        struct_Lu.cc = simd_or(tmp365, struct_Lu.cc);
        bytetest_d4 = simd_and(tmp275, tmp30);
        bytetest_84_84 = simd_and(tmp31, tmp30);
        tmp366 = simd_and(tmp363, bytetest_84_84);
        struct_Lu.cc = simd_or(tmp366, struct_Lu.cc);
        bytetest_d4 = simd_and(tmp275, tmp30);
        bytetest_86_86 = simd_and(tmp31, tmp39);
        tmp367 = simd_and(tmp363, bytetest_86_86);
        struct_Lu.cc = simd_or(tmp367, struct_Lu.cc);
        bytetest_d4 = simd_and(tmp275, tmp30);
        bytetest_88_88 = simd_and(tmp31, tmp42);
        tmp368 = simd_and(tmp363, bytetest_88_88);
        struct_Lu.cc = simd_or(tmp368, struct_Lu.cc);
        bytetest_d4 = simd_and(tmp275, tmp30);
        bytetest_8a_8a = simd_and(tmp31, tmp44);
        tmp369 = simd_and(tmp363, bytetest_8a_8a);
        struct_Lu.cc = simd_or(tmp369, struct_Lu.cc);
        bytetest_d4 = simd_and(tmp275, tmp30);
        bytetest_8c_8c = simd_and(tmp31, tmp47);
        tmp370 = simd_and(tmp363, bytetest_8c_8c);
        struct_Lu.cc = simd_or(tmp370, struct_Lu.cc);
        bytetest_d4 = simd_and(tmp275, tmp30);
        bytetest_8e_8e = simd_and(tmp31, tmp49);
        tmp371 = simd_and(tmp363, bytetest_8e_8e);
        struct_Lu.cc = simd_or(tmp371, struct_Lu.cc);
        bytetest_d4 = simd_and(tmp275, tmp30);
        bytetest_90_90 = simd_andc(tmp26, tmp9);
        tmp372 = simd_and(tmp363, bytetest_90_90);
        struct_Lu.cc = simd_or(tmp372, struct_Lu.cc);
        bytetest_d4 = simd_and(tmp275, tmp30);
        bytetest_92_92 = simd_and(tmp26, tmp36);
        tmp373 = simd_and(tmp363, bytetest_92_92);
        struct_Lu.cc = simd_or(tmp373, struct_Lu.cc);
        bytetest_d4 = simd_and(tmp275, tmp30);
        bytetest_94_94 = simd_and(tmp26, tmp30);
        tmp374 = simd_and(tmp363, bytetest_94_94);
        struct_Lu.cc = simd_or(tmp374, struct_Lu.cc);
        bytetest_d4 = simd_and(tmp275, tmp30);
        bytetest_96_96 = simd_and(tmp26, tmp39);
        tmp375 = simd_and(tmp363, bytetest_96_96);
        struct_Lu.cc = simd_or(tmp375, struct_Lu.cc);
        bytetest_d4 = simd_and(tmp275, tmp30);
        bytetest_98_98 = simd_and(tmp26, tmp42);
        tmp376 = simd_and(tmp363, bytetest_98_98);
        struct_Lu.cc = simd_or(tmp376, struct_Lu.cc);
        bytetest_d4 = simd_and(tmp275, tmp30);
        bytetest_9a_9a = simd_and(tmp26, tmp44);
        tmp377 = simd_and(tmp363, bytetest_9a_9a);
        struct_Lu.cc = simd_or(tmp377, struct_Lu.cc);
        bytetest_d4 = simd_and(tmp275, tmp30);
        bytetest_9c_9c = simd_and(tmp26, tmp47);
        tmp378 = simd_and(tmp363, bytetest_9c_9c);
        struct_Lu.cc = simd_or(tmp378, struct_Lu.cc);
        bytetest_d4 = simd_and(tmp275, tmp30);
        bytetest_9e_9e = simd_and(tmp26, tmp49);
        tmp379 = simd_and(tmp363, bytetest_9e_9e);
        struct_Lu.cc = simd_or(tmp379, struct_Lu.cc);
        bytetest_d4 = simd_and(tmp275, tmp30);
        bytetest_a0_a0 = simd_andc(tmp60, tmp9);
        tmp380 = simd_and(tmp363, bytetest_a0_a0);
        struct_Lu.cc = simd_or(tmp380, struct_Lu.cc);
        bytetest_d4 = simd_and(tmp275, tmp30);
        bytetest_a2_a2 = simd_and(tmp60, tmp36);
        tmp381 = simd_and(tmp363, bytetest_a2_a2);
        struct_Lu.cc = simd_or(tmp381, struct_Lu.cc);
        bytetest_d4 = simd_and(tmp275, tmp30);
        bytetest_a4_a4 = simd_and(tmp60, tmp30);
        tmp382 = simd_and(tmp363, bytetest_a4_a4);
        struct_Lu.cc = simd_or(tmp382, struct_Lu.cc);
        bytetest_d4 = simd_and(tmp275, tmp30);
        bytetest_a6_a6 = simd_and(tmp60, tmp39);
        tmp383 = simd_and(tmp363, bytetest_a6_a6);
        struct_Lu.cc = simd_or(tmp383, struct_Lu.cc);
        bytetest_d5 = simd_and(tmp275, tmp84);
        bytetest_80_96 = simd_andc(tmp16, tmp19);
        tmp384 = simd_and(tmp21, bytetest_d5);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(tmp384, carryQ.get_carry_in(16), tmp385));
        tmp386 = simd_and(tmp385, bytetest_80_96);
        bytetest_d4 = simd_and(tmp275, tmp30);
        tmp387 = simd_or(basis_bits.bit_4, tmp140);
        bytetest_b1_bf = simd_and(tmp70, tmp387);
        tmp388 = simd_and(tmp363, bytetest_b1_bf);
        tmp389 = simd_or(tmp388, tmp386);
        struct_Lu.cc = simd_or(tmp389, struct_Lu.cc);
        tmp390 = simd_and(tmp11, tmp59);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_83 = simd_and(tmp31, tmp14);
        bytetest_80_85 = simd_andc(tmp227, tmp142);
        tmp391 = simd_and(tmp21, bytetest_e1);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(tmp391, carryQ.get_carry_in(17), tmp392));
        tmp393 = simd_and(tmp392, bytetest_83);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(tmp393, carryQ.get_carry_in(18), tmp394));
        tmp395 = simd_and(tmp394, bytetest_80_85);
        bytetest_82 = simd_and(tmp31, tmp36);
        bytetest_a0_bf = simd_and(tmp15, basis_bits.bit_2);
        tmp396 = simd_and(tmp392, bytetest_82);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(tmp396, carryQ.get_carry_in(19), tmp397));
        tmp398 = simd_and(tmp397, bytetest_a0_bf);
        tmp399 = simd_or(tmp398, tmp395);
        struct_Lu.cc = simd_or(tmp399, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_83 = simd_and(tmp31, tmp14);
        bytetest_87_87 = simd_and(tmp31, tmp91);
        tmp400 = simd_and(tmp394, bytetest_87_87);
        struct_Lu.cc = simd_or(tmp400, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_83 = simd_and(tmp31, tmp14);
        bytetest_8d_8d = simd_and(tmp31, tmp80);
        tmp401 = simd_and(tmp394, bytetest_8d_8d);
        struct_Lu.cc = simd_or(tmp401, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b8 = simd_and(tmp70, tmp42);
        bytetest_80_80 = simd_andc(tmp31, tmp9);
        tmp402 = simd_and(tmp392, bytetest_b8);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(tmp402, carryQ.get_carry_in(20), tmp403));
        tmp404 = simd_and(tmp403, bytetest_80_80);
        struct_Lu.cc = simd_or(tmp404, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b8 = simd_and(tmp70, tmp42);
        bytetest_82_82 = simd_and(tmp31, tmp36);
        tmp405 = simd_and(tmp403, bytetest_82_82);
        struct_Lu.cc = simd_or(tmp405, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b8 = simd_and(tmp70, tmp42);
        bytetest_84_84 = simd_and(tmp31, tmp30);
        tmp406 = simd_and(tmp403, bytetest_84_84);
        struct_Lu.cc = simd_or(tmp406, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b8 = simd_and(tmp70, tmp42);
        bytetest_86_86 = simd_and(tmp31, tmp39);
        tmp407 = simd_and(tmp403, bytetest_86_86);
        struct_Lu.cc = simd_or(tmp407, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b8 = simd_and(tmp70, tmp42);
        bytetest_88_88 = simd_and(tmp31, tmp42);
        tmp408 = simd_and(tmp403, bytetest_88_88);
        struct_Lu.cc = simd_or(tmp408, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b8 = simd_and(tmp70, tmp42);
        bytetest_8a_8a = simd_and(tmp31, tmp44);
        tmp409 = simd_and(tmp403, bytetest_8a_8a);
        struct_Lu.cc = simd_or(tmp409, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b8 = simd_and(tmp70, tmp42);
        bytetest_8c_8c = simd_and(tmp31, tmp47);
        tmp410 = simd_and(tmp403, bytetest_8c_8c);
        struct_Lu.cc = simd_or(tmp410, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b8 = simd_and(tmp70, tmp42);
        bytetest_8e_8e = simd_and(tmp31, tmp49);
        tmp411 = simd_and(tmp403, bytetest_8e_8e);
        struct_Lu.cc = simd_or(tmp411, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b8 = simd_and(tmp70, tmp42);
        bytetest_90_90 = simd_andc(tmp26, tmp9);
        tmp412 = simd_and(tmp403, bytetest_90_90);
        struct_Lu.cc = simd_or(tmp412, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b8 = simd_and(tmp70, tmp42);
        bytetest_92_92 = simd_and(tmp26, tmp36);
        tmp413 = simd_and(tmp403, bytetest_92_92);
        struct_Lu.cc = simd_or(tmp413, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b8 = simd_and(tmp70, tmp42);
        bytetest_94_94 = simd_and(tmp26, tmp30);
        tmp414 = simd_and(tmp403, bytetest_94_94);
        struct_Lu.cc = simd_or(tmp414, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b8 = simd_and(tmp70, tmp42);
        bytetest_96_96 = simd_and(tmp26, tmp39);
        tmp415 = simd_and(tmp403, bytetest_96_96);
        struct_Lu.cc = simd_or(tmp415, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b8 = simd_and(tmp70, tmp42);
        bytetest_98_98 = simd_and(tmp26, tmp42);
        tmp416 = simd_and(tmp403, bytetest_98_98);
        struct_Lu.cc = simd_or(tmp416, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b8 = simd_and(tmp70, tmp42);
        bytetest_9a_9a = simd_and(tmp26, tmp44);
        tmp417 = simd_and(tmp403, bytetest_9a_9a);
        struct_Lu.cc = simd_or(tmp417, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b8 = simd_and(tmp70, tmp42);
        bytetest_9c_9c = simd_and(tmp26, tmp47);
        tmp418 = simd_and(tmp403, bytetest_9c_9c);
        struct_Lu.cc = simd_or(tmp418, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b8 = simd_and(tmp70, tmp42);
        bytetest_9e_9e = simd_and(tmp26, tmp49);
        tmp419 = simd_and(tmp403, bytetest_9e_9e);
        struct_Lu.cc = simd_or(tmp419, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b8 = simd_and(tmp70, tmp42);
        bytetest_a0_a0 = simd_andc(tmp60, tmp9);
        tmp420 = simd_and(tmp403, bytetest_a0_a0);
        struct_Lu.cc = simd_or(tmp420, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b8 = simd_and(tmp70, tmp42);
        bytetest_a2_a2 = simd_and(tmp60, tmp36);
        tmp421 = simd_and(tmp403, bytetest_a2_a2);
        struct_Lu.cc = simd_or(tmp421, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b8 = simd_and(tmp70, tmp42);
        bytetest_a4_a4 = simd_and(tmp60, tmp30);
        tmp422 = simd_and(tmp403, bytetest_a4_a4);
        struct_Lu.cc = simd_or(tmp422, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b8 = simd_and(tmp70, tmp42);
        bytetest_a6_a6 = simd_and(tmp60, tmp39);
        tmp423 = simd_and(tmp403, bytetest_a6_a6);
        struct_Lu.cc = simd_or(tmp423, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b8 = simd_and(tmp70, tmp42);
        bytetest_a8_a8 = simd_and(tmp60, tmp42);
        tmp424 = simd_and(tmp403, bytetest_a8_a8);
        struct_Lu.cc = simd_or(tmp424, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b8 = simd_and(tmp70, tmp42);
        bytetest_aa_aa = simd_and(tmp60, tmp44);
        tmp425 = simd_and(tmp403, bytetest_aa_aa);
        struct_Lu.cc = simd_or(tmp425, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b8 = simd_and(tmp70, tmp42);
        bytetest_ac_ac = simd_and(tmp60, tmp47);
        tmp426 = simd_and(tmp403, bytetest_ac_ac);
        struct_Lu.cc = simd_or(tmp426, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b8 = simd_and(tmp70, tmp42);
        bytetest_ae_ae = simd_and(tmp60, tmp49);
        tmp427 = simd_and(tmp403, bytetest_ae_ae);
        struct_Lu.cc = simd_or(tmp427, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b8 = simd_and(tmp70, tmp42);
        bytetest_b0_b0 = simd_andc(tmp70, tmp9);
        tmp428 = simd_and(tmp403, bytetest_b0_b0);
        struct_Lu.cc = simd_or(tmp428, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b8 = simd_and(tmp70, tmp42);
        bytetest_b2_b2 = simd_and(tmp70, tmp36);
        tmp429 = simd_and(tmp403, bytetest_b2_b2);
        struct_Lu.cc = simd_or(tmp429, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b8 = simd_and(tmp70, tmp42);
        bytetest_b4_b4 = simd_and(tmp70, tmp30);
        tmp430 = simd_and(tmp403, bytetest_b4_b4);
        struct_Lu.cc = simd_or(tmp430, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b8 = simd_and(tmp70, tmp42);
        bytetest_b6_b6 = simd_and(tmp70, tmp39);
        tmp431 = simd_and(tmp403, bytetest_b6_b6);
        struct_Lu.cc = simd_or(tmp431, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b8 = simd_and(tmp70, tmp42);
        bytetest_b8_b8 = simd_and(tmp70, tmp42);
        tmp432 = simd_and(tmp403, bytetest_b8_b8);
        struct_Lu.cc = simd_or(tmp432, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b8 = simd_and(tmp70, tmp42);
        bytetest_ba_ba = simd_and(tmp70, tmp44);
        tmp433 = simd_and(tmp403, bytetest_ba_ba);
        struct_Lu.cc = simd_or(tmp433, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b8 = simd_and(tmp70, tmp42);
        bytetest_bc_bc = simd_and(tmp70, tmp47);
        tmp434 = simd_and(tmp403, bytetest_bc_bc);
        struct_Lu.cc = simd_or(tmp434, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b8 = simd_and(tmp70, tmp42);
        bytetest_be_be = simd_and(tmp70, tmp49);
        tmp435 = simd_and(tmp403, bytetest_be_be);
        struct_Lu.cc = simd_or(tmp435, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b9 = simd_and(tmp70, tmp76);
        bytetest_80_80 = simd_andc(tmp31, tmp9);
        tmp436 = simd_and(tmp392, bytetest_b9);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(tmp436, carryQ.get_carry_in(21), tmp437));
        tmp438 = simd_and(tmp437, bytetest_80_80);
        struct_Lu.cc = simd_or(tmp438, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b9 = simd_and(tmp70, tmp76);
        bytetest_82_82 = simd_and(tmp31, tmp36);
        tmp439 = simd_and(tmp437, bytetest_82_82);
        struct_Lu.cc = simd_or(tmp439, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b9 = simd_and(tmp70, tmp76);
        bytetest_84_84 = simd_and(tmp31, tmp30);
        tmp440 = simd_and(tmp437, bytetest_84_84);
        struct_Lu.cc = simd_or(tmp440, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b9 = simd_and(tmp70, tmp76);
        bytetest_86_86 = simd_and(tmp31, tmp39);
        tmp441 = simd_and(tmp437, bytetest_86_86);
        struct_Lu.cc = simd_or(tmp441, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b9 = simd_and(tmp70, tmp76);
        bytetest_88_88 = simd_and(tmp31, tmp42);
        tmp442 = simd_and(tmp437, bytetest_88_88);
        struct_Lu.cc = simd_or(tmp442, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b9 = simd_and(tmp70, tmp76);
        bytetest_8a_8a = simd_and(tmp31, tmp44);
        tmp443 = simd_and(tmp437, bytetest_8a_8a);
        struct_Lu.cc = simd_or(tmp443, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b9 = simd_and(tmp70, tmp76);
        bytetest_8c_8c = simd_and(tmp31, tmp47);
        tmp444 = simd_and(tmp437, bytetest_8c_8c);
        struct_Lu.cc = simd_or(tmp444, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b9 = simd_and(tmp70, tmp76);
        bytetest_8e_8e = simd_and(tmp31, tmp49);
        tmp445 = simd_and(tmp437, bytetest_8e_8e);
        struct_Lu.cc = simd_or(tmp445, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b9 = simd_and(tmp70, tmp76);
        bytetest_90_90 = simd_andc(tmp26, tmp9);
        tmp446 = simd_and(tmp437, bytetest_90_90);
        struct_Lu.cc = simd_or(tmp446, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b9 = simd_and(tmp70, tmp76);
        bytetest_92_92 = simd_and(tmp26, tmp36);
        tmp447 = simd_and(tmp437, bytetest_92_92);
        struct_Lu.cc = simd_or(tmp447, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b9 = simd_and(tmp70, tmp76);
        bytetest_94_94 = simd_and(tmp26, tmp30);
        tmp448 = simd_and(tmp437, bytetest_94_94);
        struct_Lu.cc = simd_or(tmp448, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b9 = simd_and(tmp70, tmp76);
        bytetest_96_96 = simd_and(tmp26, tmp39);
        tmp449 = simd_and(tmp437, bytetest_96_96);
        struct_Lu.cc = simd_or(tmp449, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b9 = simd_and(tmp70, tmp76);
        bytetest_98_98 = simd_and(tmp26, tmp42);
        tmp450 = simd_and(tmp437, bytetest_98_98);
        struct_Lu.cc = simd_or(tmp450, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b9 = simd_and(tmp70, tmp76);
        bytetest_9a_9a = simd_and(tmp26, tmp44);
        tmp451 = simd_and(tmp437, bytetest_9a_9a);
        struct_Lu.cc = simd_or(tmp451, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b9 = simd_and(tmp70, tmp76);
        bytetest_9c_9c = simd_and(tmp26, tmp47);
        tmp452 = simd_and(tmp437, bytetest_9c_9c);
        struct_Lu.cc = simd_or(tmp452, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b9 = simd_and(tmp70, tmp76);
        bytetest_9e_9e = simd_and(tmp26, tmp49);
        tmp453 = simd_and(tmp437, bytetest_9e_9e);
        struct_Lu.cc = simd_or(tmp453, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b9 = simd_and(tmp70, tmp76);
        bytetest_a0_a0 = simd_andc(tmp60, tmp9);
        tmp454 = simd_and(tmp437, bytetest_a0_a0);
        struct_Lu.cc = simd_or(tmp454, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b9 = simd_and(tmp70, tmp76);
        bytetest_a2_a2 = simd_and(tmp60, tmp36);
        tmp455 = simd_and(tmp437, bytetest_a2_a2);
        struct_Lu.cc = simd_or(tmp455, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b9 = simd_and(tmp70, tmp76);
        bytetest_a4_a4 = simd_and(tmp60, tmp30);
        tmp456 = simd_and(tmp437, bytetest_a4_a4);
        struct_Lu.cc = simd_or(tmp456, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b9 = simd_and(tmp70, tmp76);
        bytetest_a6_a6 = simd_and(tmp60, tmp39);
        tmp457 = simd_and(tmp437, bytetest_a6_a6);
        struct_Lu.cc = simd_or(tmp457, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b9 = simd_and(tmp70, tmp76);
        bytetest_a8_a8 = simd_and(tmp60, tmp42);
        tmp458 = simd_and(tmp437, bytetest_a8_a8);
        struct_Lu.cc = simd_or(tmp458, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b9 = simd_and(tmp70, tmp76);
        bytetest_aa_aa = simd_and(tmp60, tmp44);
        tmp459 = simd_and(tmp437, bytetest_aa_aa);
        struct_Lu.cc = simd_or(tmp459, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b9 = simd_and(tmp70, tmp76);
        bytetest_ac_ac = simd_and(tmp60, tmp47);
        tmp460 = simd_and(tmp437, bytetest_ac_ac);
        struct_Lu.cc = simd_or(tmp460, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b9 = simd_and(tmp70, tmp76);
        bytetest_ae_ae = simd_and(tmp60, tmp49);
        tmp461 = simd_and(tmp437, bytetest_ae_ae);
        struct_Lu.cc = simd_or(tmp461, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b9 = simd_and(tmp70, tmp76);
        bytetest_b0_b0 = simd_andc(tmp70, tmp9);
        tmp462 = simd_and(tmp437, bytetest_b0_b0);
        struct_Lu.cc = simd_or(tmp462, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b9 = simd_and(tmp70, tmp76);
        bytetest_b2_b2 = simd_and(tmp70, tmp36);
        tmp463 = simd_and(tmp437, bytetest_b2_b2);
        struct_Lu.cc = simd_or(tmp463, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b9 = simd_and(tmp70, tmp76);
        bytetest_b4_b4 = simd_and(tmp70, tmp30);
        tmp464 = simd_and(tmp437, bytetest_b4_b4);
        struct_Lu.cc = simd_or(tmp464, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b9 = simd_and(tmp70, tmp76);
        bytetest_b6_b6 = simd_and(tmp70, tmp39);
        tmp465 = simd_and(tmp437, bytetest_b6_b6);
        struct_Lu.cc = simd_or(tmp465, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b9 = simd_and(tmp70, tmp76);
        bytetest_b8_b8 = simd_and(tmp70, tmp42);
        tmp466 = simd_and(tmp437, bytetest_b8_b8);
        struct_Lu.cc = simd_or(tmp466, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b9 = simd_and(tmp70, tmp76);
        bytetest_ba_ba = simd_and(tmp70, tmp44);
        tmp467 = simd_and(tmp437, bytetest_ba_ba);
        struct_Lu.cc = simd_or(tmp467, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b9 = simd_and(tmp70, tmp76);
        bytetest_bc_bc = simd_and(tmp70, tmp47);
        tmp468 = simd_and(tmp437, bytetest_bc_bc);
        struct_Lu.cc = simd_or(tmp468, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_b9 = simd_and(tmp70, tmp76);
        bytetest_be_be = simd_and(tmp70, tmp49);
        tmp469 = simd_and(tmp437, bytetest_be_be);
        struct_Lu.cc = simd_or(tmp469, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_ba = simd_and(tmp70, tmp44);
        bytetest_80_80 = simd_andc(tmp31, tmp9);
        tmp470 = simd_and(tmp392, bytetest_ba);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(tmp470, carryQ.get_carry_in(22), tmp471));
        tmp472 = simd_and(tmp471, bytetest_80_80);
        struct_Lu.cc = simd_or(tmp472, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_ba = simd_and(tmp70, tmp44);
        bytetest_82_82 = simd_and(tmp31, tmp36);
        tmp473 = simd_and(tmp471, bytetest_82_82);
        struct_Lu.cc = simd_or(tmp473, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_ba = simd_and(tmp70, tmp44);
        bytetest_84_84 = simd_and(tmp31, tmp30);
        tmp474 = simd_and(tmp471, bytetest_84_84);
        struct_Lu.cc = simd_or(tmp474, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_ba = simd_and(tmp70, tmp44);
        bytetest_86_86 = simd_and(tmp31, tmp39);
        tmp475 = simd_and(tmp471, bytetest_86_86);
        struct_Lu.cc = simd_or(tmp475, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_ba = simd_and(tmp70, tmp44);
        bytetest_88_88 = simd_and(tmp31, tmp42);
        tmp476 = simd_and(tmp471, bytetest_88_88);
        struct_Lu.cc = simd_or(tmp476, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_ba = simd_and(tmp70, tmp44);
        bytetest_8a_8a = simd_and(tmp31, tmp44);
        tmp477 = simd_and(tmp471, bytetest_8a_8a);
        struct_Lu.cc = simd_or(tmp477, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_ba = simd_and(tmp70, tmp44);
        bytetest_8c_8c = simd_and(tmp31, tmp47);
        tmp478 = simd_and(tmp471, bytetest_8c_8c);
        struct_Lu.cc = simd_or(tmp478, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_ba = simd_and(tmp70, tmp44);
        bytetest_8e_8e = simd_and(tmp31, tmp49);
        tmp479 = simd_and(tmp471, bytetest_8e_8e);
        struct_Lu.cc = simd_or(tmp479, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_ba = simd_and(tmp70, tmp44);
        bytetest_90_90 = simd_andc(tmp26, tmp9);
        tmp480 = simd_and(tmp471, bytetest_90_90);
        struct_Lu.cc = simd_or(tmp480, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_ba = simd_and(tmp70, tmp44);
        bytetest_92_92 = simd_and(tmp26, tmp36);
        tmp481 = simd_and(tmp471, bytetest_92_92);
        struct_Lu.cc = simd_or(tmp481, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_ba = simd_and(tmp70, tmp44);
        bytetest_94_94 = simd_and(tmp26, tmp30);
        tmp482 = simd_and(tmp471, bytetest_94_94);
        struct_Lu.cc = simd_or(tmp482, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_ba = simd_and(tmp70, tmp44);
        bytetest_9e_9e = simd_and(tmp26, tmp49);
        tmp483 = simd_and(tmp471, bytetest_9e_9e);
        struct_Lu.cc = simd_or(tmp483, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_ba = simd_and(tmp70, tmp44);
        bytetest_a0_a0 = simd_andc(tmp60, tmp9);
        tmp484 = simd_and(tmp471, bytetest_a0_a0);
        struct_Lu.cc = simd_or(tmp484, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_ba = simd_and(tmp70, tmp44);
        bytetest_a2_a2 = simd_and(tmp60, tmp36);
        tmp485 = simd_and(tmp471, bytetest_a2_a2);
        struct_Lu.cc = simd_or(tmp485, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_ba = simd_and(tmp70, tmp44);
        bytetest_a4_a4 = simd_and(tmp60, tmp30);
        tmp486 = simd_and(tmp471, bytetest_a4_a4);
        struct_Lu.cc = simd_or(tmp486, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_ba = simd_and(tmp70, tmp44);
        bytetest_a6_a6 = simd_and(tmp60, tmp39);
        tmp487 = simd_and(tmp471, bytetest_a6_a6);
        struct_Lu.cc = simd_or(tmp487, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_ba = simd_and(tmp70, tmp44);
        bytetest_a8_a8 = simd_and(tmp60, tmp42);
        tmp488 = simd_and(tmp471, bytetest_a8_a8);
        struct_Lu.cc = simd_or(tmp488, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_ba = simd_and(tmp70, tmp44);
        bytetest_aa_aa = simd_and(tmp60, tmp44);
        tmp489 = simd_and(tmp471, bytetest_aa_aa);
        struct_Lu.cc = simd_or(tmp489, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_ba = simd_and(tmp70, tmp44);
        bytetest_ac_ac = simd_and(tmp60, tmp47);
        tmp490 = simd_and(tmp471, bytetest_ac_ac);
        struct_Lu.cc = simd_or(tmp490, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_ba = simd_and(tmp70, tmp44);
        bytetest_ae_ae = simd_and(tmp60, tmp49);
        tmp491 = simd_and(tmp471, bytetest_ae_ae);
        struct_Lu.cc = simd_or(tmp491, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_ba = simd_and(tmp70, tmp44);
        bytetest_b0_b0 = simd_andc(tmp70, tmp9);
        tmp492 = simd_and(tmp471, bytetest_b0_b0);
        struct_Lu.cc = simd_or(tmp492, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_ba = simd_and(tmp70, tmp44);
        bytetest_b2_b2 = simd_and(tmp70, tmp36);
        tmp493 = simd_and(tmp471, bytetest_b2_b2);
        struct_Lu.cc = simd_or(tmp493, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_ba = simd_and(tmp70, tmp44);
        bytetest_b4_b4 = simd_and(tmp70, tmp30);
        tmp494 = simd_and(tmp471, bytetest_b4_b4);
        struct_Lu.cc = simd_or(tmp494, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_ba = simd_and(tmp70, tmp44);
        bytetest_b6_b6 = simd_and(tmp70, tmp39);
        tmp495 = simd_and(tmp471, bytetest_b6_b6);
        struct_Lu.cc = simd_or(tmp495, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_ba = simd_and(tmp70, tmp44);
        bytetest_b8_b8 = simd_and(tmp70, tmp42);
        tmp496 = simd_and(tmp471, bytetest_b8_b8);
        struct_Lu.cc = simd_or(tmp496, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_ba = simd_and(tmp70, tmp44);
        bytetest_ba_ba = simd_and(tmp70, tmp44);
        tmp497 = simd_and(tmp471, bytetest_ba_ba);
        struct_Lu.cc = simd_or(tmp497, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_ba = simd_and(tmp70, tmp44);
        bytetest_bc_bc = simd_and(tmp70, tmp47);
        tmp498 = simd_and(tmp471, bytetest_bc_bc);
        struct_Lu.cc = simd_or(tmp498, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_ba = simd_and(tmp70, tmp44);
        bytetest_be_be = simd_and(tmp70, tmp49);
        tmp499 = simd_and(tmp471, bytetest_be_be);
        struct_Lu.cc = simd_or(tmp499, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bb = simd_and(tmp70, tmp78);
        bytetest_80_80 = simd_andc(tmp31, tmp9);
        tmp500 = simd_and(tmp392, bytetest_bb);
        carryQ.cq[23] = carryout2carry(pablo_blk_Advance(tmp500, carryQ.get_carry_in(23), tmp501));
        tmp502 = simd_and(tmp501, bytetest_80_80);
        struct_Lu.cc = simd_or(tmp502, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bb = simd_and(tmp70, tmp78);
        bytetest_82_82 = simd_and(tmp31, tmp36);
        tmp503 = simd_and(tmp501, bytetest_82_82);
        struct_Lu.cc = simd_or(tmp503, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bb = simd_and(tmp70, tmp78);
        bytetest_84_84 = simd_and(tmp31, tmp30);
        tmp504 = simd_and(tmp501, bytetest_84_84);
        struct_Lu.cc = simd_or(tmp504, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bb = simd_and(tmp70, tmp78);
        bytetest_86_86 = simd_and(tmp31, tmp39);
        tmp505 = simd_and(tmp501, bytetest_86_86);
        struct_Lu.cc = simd_or(tmp505, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bb = simd_and(tmp70, tmp78);
        bytetest_88_88 = simd_and(tmp31, tmp42);
        tmp506 = simd_and(tmp501, bytetest_88_88);
        struct_Lu.cc = simd_or(tmp506, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bb = simd_and(tmp70, tmp78);
        bytetest_8a_8a = simd_and(tmp31, tmp44);
        tmp507 = simd_and(tmp501, bytetest_8a_8a);
        struct_Lu.cc = simd_or(tmp507, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bb = simd_and(tmp70, tmp78);
        bytetest_8c_8c = simd_and(tmp31, tmp47);
        tmp508 = simd_and(tmp501, bytetest_8c_8c);
        struct_Lu.cc = simd_or(tmp508, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bb = simd_and(tmp70, tmp78);
        bytetest_8e_8e = simd_and(tmp31, tmp49);
        tmp509 = simd_and(tmp501, bytetest_8e_8e);
        struct_Lu.cc = simd_or(tmp509, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bb = simd_and(tmp70, tmp78);
        bytetest_90_90 = simd_andc(tmp26, tmp9);
        tmp510 = simd_and(tmp501, bytetest_90_90);
        struct_Lu.cc = simd_or(tmp510, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bb = simd_and(tmp70, tmp78);
        bytetest_92_92 = simd_and(tmp26, tmp36);
        tmp511 = simd_and(tmp501, bytetest_92_92);
        struct_Lu.cc = simd_or(tmp511, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bb = simd_and(tmp70, tmp78);
        bytetest_94_94 = simd_and(tmp26, tmp30);
        tmp512 = simd_and(tmp501, bytetest_94_94);
        struct_Lu.cc = simd_or(tmp512, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bb = simd_and(tmp70, tmp78);
        bytetest_96_96 = simd_and(tmp26, tmp39);
        tmp513 = simd_and(tmp501, bytetest_96_96);
        struct_Lu.cc = simd_or(tmp513, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bb = simd_and(tmp70, tmp78);
        bytetest_98_98 = simd_and(tmp26, tmp42);
        tmp514 = simd_and(tmp501, bytetest_98_98);
        struct_Lu.cc = simd_or(tmp514, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bb = simd_and(tmp70, tmp78);
        bytetest_9a_9a = simd_and(tmp26, tmp44);
        tmp515 = simd_and(tmp501, bytetest_9a_9a);
        struct_Lu.cc = simd_or(tmp515, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bb = simd_and(tmp70, tmp78);
        bytetest_9c_9c = simd_and(tmp26, tmp47);
        tmp516 = simd_and(tmp501, bytetest_9c_9c);
        struct_Lu.cc = simd_or(tmp516, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bb = simd_and(tmp70, tmp78);
        bytetest_9e_9e = simd_and(tmp26, tmp49);
        tmp517 = simd_and(tmp501, bytetest_9e_9e);
        struct_Lu.cc = simd_or(tmp517, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bb = simd_and(tmp70, tmp78);
        bytetest_a0_a0 = simd_andc(tmp60, tmp9);
        tmp518 = simd_and(tmp501, bytetest_a0_a0);
        struct_Lu.cc = simd_or(tmp518, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bb = simd_and(tmp70, tmp78);
        bytetest_a2_a2 = simd_and(tmp60, tmp36);
        tmp519 = simd_and(tmp501, bytetest_a2_a2);
        struct_Lu.cc = simd_or(tmp519, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bb = simd_and(tmp70, tmp78);
        bytetest_a4_a4 = simd_and(tmp60, tmp30);
        tmp520 = simd_and(tmp501, bytetest_a4_a4);
        struct_Lu.cc = simd_or(tmp520, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bb = simd_and(tmp70, tmp78);
        bytetest_a6_a6 = simd_and(tmp60, tmp39);
        tmp521 = simd_and(tmp501, bytetest_a6_a6);
        struct_Lu.cc = simd_or(tmp521, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bb = simd_and(tmp70, tmp78);
        bytetest_a8_a8 = simd_and(tmp60, tmp42);
        tmp522 = simd_and(tmp501, bytetest_a8_a8);
        struct_Lu.cc = simd_or(tmp522, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bb = simd_and(tmp70, tmp78);
        bytetest_aa_aa = simd_and(tmp60, tmp44);
        tmp523 = simd_and(tmp501, bytetest_aa_aa);
        struct_Lu.cc = simd_or(tmp523, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bb = simd_and(tmp70, tmp78);
        bytetest_ac_ac = simd_and(tmp60, tmp47);
        tmp524 = simd_and(tmp501, bytetest_ac_ac);
        struct_Lu.cc = simd_or(tmp524, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bb = simd_and(tmp70, tmp78);
        bytetest_ae_ae = simd_and(tmp60, tmp49);
        tmp525 = simd_and(tmp501, bytetest_ae_ae);
        struct_Lu.cc = simd_or(tmp525, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bb = simd_and(tmp70, tmp78);
        bytetest_b0_b0 = simd_andc(tmp70, tmp9);
        tmp526 = simd_and(tmp501, bytetest_b0_b0);
        struct_Lu.cc = simd_or(tmp526, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bb = simd_and(tmp70, tmp78);
        bytetest_b2_b2 = simd_and(tmp70, tmp36);
        tmp527 = simd_and(tmp501, bytetest_b2_b2);
        struct_Lu.cc = simd_or(tmp527, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bb = simd_and(tmp70, tmp78);
        bytetest_b4_b4 = simd_and(tmp70, tmp30);
        tmp528 = simd_and(tmp501, bytetest_b4_b4);
        struct_Lu.cc = simd_or(tmp528, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bb = simd_and(tmp70, tmp78);
        bytetest_b6_b6 = simd_and(tmp70, tmp39);
        tmp529 = simd_and(tmp501, bytetest_b6_b6);
        struct_Lu.cc = simd_or(tmp529, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bb = simd_and(tmp70, tmp78);
        bytetest_b8_b8 = simd_and(tmp70, tmp42);
        tmp530 = simd_and(tmp501, bytetest_b8_b8);
        struct_Lu.cc = simd_or(tmp530, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bb = simd_and(tmp70, tmp78);
        bytetest_ba_ba = simd_and(tmp70, tmp44);
        tmp531 = simd_and(tmp501, bytetest_ba_ba);
        struct_Lu.cc = simd_or(tmp531, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bb = simd_and(tmp70, tmp78);
        bytetest_bc_bc = simd_and(tmp70, tmp47);
        tmp532 = simd_and(tmp501, bytetest_bc_bc);
        struct_Lu.cc = simd_or(tmp532, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bb = simd_and(tmp70, tmp78);
        bytetest_be_be = simd_and(tmp70, tmp49);
        tmp533 = simd_and(tmp501, bytetest_be_be);
        struct_Lu.cc = simd_or(tmp533, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bc = simd_and(tmp70, tmp47);
        bytetest_88_8f = simd_and(tmp31, basis_bits.bit_4);
        tmp534 = simd_and(tmp392, bytetest_bc);
        carryQ.cq[24] = carryout2carry(pablo_blk_Advance(tmp534, carryQ.get_carry_in(24), tmp535));
        tmp536 = simd_and(tmp535, bytetest_88_8f);
        struct_Lu.cc = simd_or(tmp536, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bc = simd_and(tmp70, tmp47);
        bytetest_98_9d = simd_andc(tmp27, tmp142);
        tmp537 = simd_and(tmp535, bytetest_98_9d);
        struct_Lu.cc = simd_or(tmp537, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bc = simd_and(tmp70, tmp47);
        bytetest_a8_af = simd_and(tmp60, basis_bits.bit_4);
        tmp538 = simd_and(tmp535, bytetest_a8_af);
        struct_Lu.cc = simd_or(tmp538, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bc = simd_and(tmp70, tmp47);
        bytetest_b8_bf = simd_and(tmp70, basis_bits.bit_4);
        tmp539 = simd_and(tmp535, bytetest_b8_bf);
        struct_Lu.cc = simd_or(tmp539, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bd = simd_and(tmp70, tmp80);
        bytetest_88_8d = simd_andc(bytetest_88_8f, tmp142);
        tmp540 = simd_and(tmp392, bytetest_bd);
        carryQ.cq[25] = carryout2carry(pablo_blk_Advance(tmp540, carryQ.get_carry_in(25), tmp541));
        tmp542 = simd_and(tmp541, bytetest_88_8d);
        struct_Lu.cc = simd_or(tmp542, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bd = simd_and(tmp70, tmp80);
        bytetest_99_99 = simd_and(tmp26, tmp76);
        tmp543 = simd_and(tmp541, bytetest_99_99);
        struct_Lu.cc = simd_or(tmp543, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bd = simd_and(tmp70, tmp80);
        bytetest_9b_9b = simd_and(tmp26, tmp78);
        tmp544 = simd_and(tmp541, bytetest_9b_9b);
        struct_Lu.cc = simd_or(tmp544, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bd = simd_and(tmp70, tmp80);
        bytetest_9d_9d = simd_and(tmp26, tmp80);
        tmp545 = simd_and(tmp541, bytetest_9d_9d);
        struct_Lu.cc = simd_or(tmp545, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bd = simd_and(tmp70, tmp80);
        bytetest_9f_9f = simd_and(tmp26, tmp82);
        tmp546 = simd_and(tmp541, bytetest_9f_9f);
        struct_Lu.cc = simd_or(tmp546, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bd = simd_and(tmp70, tmp80);
        bytetest_a8_af = simd_and(tmp60, basis_bits.bit_4);
        tmp547 = simd_and(tmp541, bytetest_a8_af);
        struct_Lu.cc = simd_or(tmp547, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_be = simd_and(tmp70, tmp49);
        bytetest_b8_bb = simd_and(tmp70, tmp41);
        tmp548 = simd_and(tmp392, bytetest_be);
        carryQ.cq[26] = carryout2carry(pablo_blk_Advance(tmp548, carryQ.get_carry_in(26), tmp549));
        tmp550 = simd_and(tmp549, bytetest_b8_bb);
        struct_Lu.cc = simd_or(tmp550, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bf = simd_and(tmp70, tmp82);
        bytetest_88_8b = simd_and(tmp31, tmp41);
        tmp551 = simd_and(tmp392, bytetest_bf);
        carryQ.cq[27] = carryout2carry(pablo_blk_Advance(tmp551, carryQ.get_carry_in(27), tmp552));
        tmp553 = simd_and(tmp552, bytetest_88_8b);
        struct_Lu.cc = simd_or(tmp553, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bf = simd_and(tmp70, tmp82);
        bytetest_98_9b = simd_and(tmp26, tmp41);
        tmp554 = simd_and(tmp552, bytetest_98_9b);
        struct_Lu.cc = simd_or(tmp554, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bf = simd_and(tmp70, tmp82);
        tmp555 = simd_and(basis_bits.bit_5, tmp8);
        bytetest_a8_ac = simd_andc(bytetest_a8_af, tmp555);
        tmp556 = simd_and(tmp552, bytetest_a8_ac);
        struct_Lu.cc = simd_or(tmp556, struct_Lu.cc);
        bytetest_e1 = simd_and(tmp390, tmp85);
        bytetest_bf = simd_and(tmp70, tmp82);
        bytetest_b8_bb = simd_and(tmp70, tmp41);
        tmp557 = simd_and(tmp552, bytetest_b8_bb);
        struct_Lu.cc = simd_or(tmp557, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_84 = simd_and(tmp31, tmp30);
        bytetest_82_82 = simd_and(tmp31, tmp36);
        tmp558 = simd_and(tmp21, bytetest_e2);
        carryQ.cq[28] = carryout2carry(pablo_blk_Advance(tmp558, carryQ.get_carry_in(28), tmp559));
        tmp560 = simd_and(tmp559, bytetest_84);
        carryQ.cq[29] = carryout2carry(pablo_blk_Advance(tmp560, carryQ.get_carry_in(29), tmp561));
        tmp562 = simd_and(tmp561, bytetest_82_82);
        struct_Lu.cc = simd_or(tmp562, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_84 = simd_and(tmp31, tmp30);
        bytetest_87_87 = simd_and(tmp31, tmp91);
        tmp563 = simd_and(tmp561, bytetest_87_87);
        struct_Lu.cc = simd_or(tmp563, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_84 = simd_and(tmp31, tmp30);
        tmp564 = simd_not(basis_bits.bit_6);
        tmp565 = simd_or(simd_and(basis_bits.bit_5, tmp564), simd_andc(tmp3, basis_bits.bit_5));
        bytetest_8b_8d = simd_and(bytetest_88_8f, tmp565);
        tmp566 = simd_and(tmp561, bytetest_8b_8d);
        struct_Lu.cc = simd_or(tmp566, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_84 = simd_and(tmp31, tmp30);
        tmp567 = simd_andc(tmp26, tmp7);
        bytetest_90_92 = simd_andc(tmp567, tmp3);
        tmp568 = simd_and(tmp561, bytetest_90_92);
        struct_Lu.cc = simd_or(tmp568, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_84 = simd_and(tmp31, tmp30);
        bytetest_95_95 = simd_and(tmp26, tmp84);
        tmp569 = simd_and(tmp561, bytetest_95_95);
        struct_Lu.cc = simd_or(tmp569, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_84 = simd_and(tmp31, tmp30);
        tmp570 = simd_or(simd_and(basis_bits.bit_5, tmp564), simd_andc(tmp8, basis_bits.bit_5));
        bytetest_99_9d = simd_and(tmp27, tmp570);
        tmp571 = simd_and(tmp561, bytetest_99_9d);
        struct_Lu.cc = simd_or(tmp571, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_84 = simd_and(tmp31, tmp30);
        bytetest_a4_a4 = simd_and(tmp60, tmp30);
        tmp572 = simd_and(tmp561, bytetest_a4_a4);
        struct_Lu.cc = simd_or(tmp572, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_84 = simd_and(tmp31, tmp30);
        bytetest_a6_a6 = simd_and(tmp60, tmp39);
        tmp573 = simd_and(tmp561, bytetest_a6_a6);
        struct_Lu.cc = simd_or(tmp573, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_84 = simd_and(tmp31, tmp30);
        bytetest_a8_a8 = simd_and(tmp60, tmp42);
        tmp574 = simd_and(tmp561, bytetest_a8_a8);
        struct_Lu.cc = simd_or(tmp574, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_84 = simd_and(tmp31, tmp30);
        tmp575 = simd_or(simd_and(basis_bits.bit_5, tmp564), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        bytetest_aa_ad = simd_and(bytetest_a8_af, tmp575);
        tmp576 = simd_and(tmp561, bytetest_aa_ad);
        struct_Lu.cc = simd_or(tmp576, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_84 = simd_and(tmp31, tmp30);
        bytetest_b0_b3 = simd_andc(tmp70, tmp7);
        tmp577 = simd_and(tmp561, bytetest_b0_b3);
        struct_Lu.cc = simd_or(tmp577, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_84 = simd_and(tmp31, tmp30);
        bytetest_be_bf = simd_and(tmp70, tmp133);
        tmp578 = simd_and(tmp561, bytetest_be_bf);
        struct_Lu.cc = simd_or(tmp578, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_85 = simd_and(tmp31, tmp84);
        bytetest_85_85 = simd_and(tmp31, tmp84);
        tmp579 = simd_and(tmp559, bytetest_85);
        carryQ.cq[30] = carryout2carry(pablo_blk_Advance(tmp579, carryQ.get_carry_in(30), tmp580));
        tmp581 = simd_and(tmp580, bytetest_85_85);
        struct_Lu.cc = simd_or(tmp581, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_86 = simd_and(tmp31, tmp39);
        bytetest_83_83 = simd_and(tmp31, tmp14);
        tmp582 = simd_and(tmp559, bytetest_86);
        carryQ.cq[31] = carryout2carry(pablo_blk_Advance(tmp582, carryQ.get_carry_in(31), tmp583));
        tmp584 = simd_and(tmp583, bytetest_83_83);
        struct_Lu.cc = simd_or(tmp584, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b0 = simd_andc(tmp70, tmp9);
        tmp585 = simd_or(basis_bits.bit_3, tmp82);
        tmp586 = simd_and(basis_bits.bit_2, tmp585);
        bytetest_80_ae = simd_andc(tmp15, tmp586);
        tmp587 = simd_and(tmp559, bytetest_b0);
        carryQ.cq[32] = carryout2carry(pablo_blk_Advance(tmp587, carryQ.get_carry_in(32), tmp588));
        tmp589 = simd_and(tmp588, bytetest_80_ae);
        struct_Lu.cc = simd_or(tmp589, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b1 = simd_and(tmp70, tmp85);
        bytetest_a0_a0 = simd_andc(tmp60, tmp9);
        tmp590 = simd_and(tmp559, bytetest_b1);
        carryQ.cq[33] = carryout2carry(pablo_blk_Advance(tmp590, carryQ.get_carry_in(33), tmp591));
        tmp592 = simd_and(tmp591, bytetest_a0_a0);
        struct_Lu.cc = simd_or(tmp592, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b1 = simd_and(tmp70, tmp85);
        tmp593 = simd_andc(tmp60, basis_bits.bit_4);
        bytetest_a2_a4 = simd_and(tmp593, tmp257);
        tmp594 = simd_and(tmp591, bytetest_a2_a4);
        struct_Lu.cc = simd_or(tmp594, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b1 = simd_and(tmp70, tmp85);
        bytetest_a7_a7 = simd_and(tmp60, tmp91);
        tmp595 = simd_and(tmp591, bytetest_a7_a7);
        struct_Lu.cc = simd_or(tmp595, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b1 = simd_and(tmp70, tmp85);
        bytetest_a9_a9 = simd_and(tmp60, tmp76);
        tmp596 = simd_and(tmp591, bytetest_a9_a9);
        struct_Lu.cc = simd_or(tmp596, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b1 = simd_and(tmp70, tmp85);
        bytetest_ab_ab = simd_and(tmp60, tmp78);
        tmp597 = simd_and(tmp591, bytetest_ab_ab);
        struct_Lu.cc = simd_or(tmp597, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b1 = simd_and(tmp70, tmp85);
        tmp598 = simd_not(tmp9);
        tmp599 = simd_and(tmp46, tmp8);
        tmp600 = simd_or(simd_and(basis_bits.bit_3, tmp598), simd_andc(tmp599, basis_bits.bit_3));
        bytetest_ad_b0 = simd_and(bytetest_a0_bf, tmp600);
        tmp601 = simd_and(tmp591, bytetest_ad_b0);
        struct_Lu.cc = simd_or(tmp601, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b1 = simd_and(tmp70, tmp85);
        bytetest_b2_b2 = simd_and(tmp70, tmp36);
        tmp602 = simd_and(tmp591, bytetest_b2_b2);
        struct_Lu.cc = simd_or(tmp602, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b1 = simd_and(tmp70, tmp85);
        bytetest_b5_b5 = simd_and(tmp70, tmp84);
        tmp603 = simd_and(tmp591, bytetest_b5_b5);
        struct_Lu.cc = simd_or(tmp603, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b2 = simd_and(tmp70, tmp36);
        bytetest_80_80 = simd_andc(tmp31, tmp9);
        tmp604 = simd_and(tmp559, bytetest_b2);
        carryQ.cq[34] = carryout2carry(pablo_blk_Advance(tmp604, carryQ.get_carry_in(34), tmp605));
        tmp606 = simd_and(tmp605, bytetest_80_80);
        bytetest_b1 = simd_and(tmp70, tmp85);
        bytetest_be_bf = simd_and(tmp70, tmp133);
        tmp607 = simd_and(tmp591, bytetest_be_bf);
        tmp608 = simd_or(tmp607, tmp606);
        struct_Lu.cc = simd_or(tmp608, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b2 = simd_and(tmp70, tmp36);
        bytetest_82_82 = simd_and(tmp31, tmp36);
        tmp609 = simd_and(tmp605, bytetest_82_82);
        struct_Lu.cc = simd_or(tmp609, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b2 = simd_and(tmp70, tmp36);
        bytetest_84_84 = simd_and(tmp31, tmp30);
        tmp610 = simd_and(tmp605, bytetest_84_84);
        struct_Lu.cc = simd_or(tmp610, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b2 = simd_and(tmp70, tmp36);
        bytetest_86_86 = simd_and(tmp31, tmp39);
        tmp611 = simd_and(tmp605, bytetest_86_86);
        struct_Lu.cc = simd_or(tmp611, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b2 = simd_and(tmp70, tmp36);
        bytetest_88_88 = simd_and(tmp31, tmp42);
        tmp612 = simd_and(tmp605, bytetest_88_88);
        struct_Lu.cc = simd_or(tmp612, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b2 = simd_and(tmp70, tmp36);
        bytetest_8a_8a = simd_and(tmp31, tmp44);
        tmp613 = simd_and(tmp605, bytetest_8a_8a);
        struct_Lu.cc = simd_or(tmp613, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b2 = simd_and(tmp70, tmp36);
        bytetest_8c_8c = simd_and(tmp31, tmp47);
        tmp614 = simd_and(tmp605, bytetest_8c_8c);
        struct_Lu.cc = simd_or(tmp614, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b2 = simd_and(tmp70, tmp36);
        bytetest_8e_8e = simd_and(tmp31, tmp49);
        tmp615 = simd_and(tmp605, bytetest_8e_8e);
        struct_Lu.cc = simd_or(tmp615, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b2 = simd_and(tmp70, tmp36);
        bytetest_90_90 = simd_andc(tmp26, tmp9);
        tmp616 = simd_and(tmp605, bytetest_90_90);
        struct_Lu.cc = simd_or(tmp616, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b2 = simd_and(tmp70, tmp36);
        bytetest_92_92 = simd_and(tmp26, tmp36);
        tmp617 = simd_and(tmp605, bytetest_92_92);
        struct_Lu.cc = simd_or(tmp617, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b2 = simd_and(tmp70, tmp36);
        bytetest_94_94 = simd_and(tmp26, tmp30);
        tmp618 = simd_and(tmp605, bytetest_94_94);
        struct_Lu.cc = simd_or(tmp618, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b2 = simd_and(tmp70, tmp36);
        bytetest_96_96 = simd_and(tmp26, tmp39);
        tmp619 = simd_and(tmp605, bytetest_96_96);
        struct_Lu.cc = simd_or(tmp619, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b2 = simd_and(tmp70, tmp36);
        bytetest_98_98 = simd_and(tmp26, tmp42);
        tmp620 = simd_and(tmp605, bytetest_98_98);
        struct_Lu.cc = simd_or(tmp620, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b2 = simd_and(tmp70, tmp36);
        bytetest_9a_9a = simd_and(tmp26, tmp44);
        tmp621 = simd_and(tmp605, bytetest_9a_9a);
        struct_Lu.cc = simd_or(tmp621, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b2 = simd_and(tmp70, tmp36);
        bytetest_9c_9c = simd_and(tmp26, tmp47);
        tmp622 = simd_and(tmp605, bytetest_9c_9c);
        struct_Lu.cc = simd_or(tmp622, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b2 = simd_and(tmp70, tmp36);
        bytetest_9e_9e = simd_and(tmp26, tmp49);
        tmp623 = simd_and(tmp605, bytetest_9e_9e);
        struct_Lu.cc = simd_or(tmp623, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b2 = simd_and(tmp70, tmp36);
        bytetest_a0_a0 = simd_andc(tmp60, tmp9);
        tmp624 = simd_and(tmp605, bytetest_a0_a0);
        struct_Lu.cc = simd_or(tmp624, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b2 = simd_and(tmp70, tmp36);
        bytetest_a2_a2 = simd_and(tmp60, tmp36);
        tmp625 = simd_and(tmp605, bytetest_a2_a2);
        struct_Lu.cc = simd_or(tmp625, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b2 = simd_and(tmp70, tmp36);
        bytetest_a4_a4 = simd_and(tmp60, tmp30);
        tmp626 = simd_and(tmp605, bytetest_a4_a4);
        struct_Lu.cc = simd_or(tmp626, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b2 = simd_and(tmp70, tmp36);
        bytetest_a6_a6 = simd_and(tmp60, tmp39);
        tmp627 = simd_and(tmp605, bytetest_a6_a6);
        struct_Lu.cc = simd_or(tmp627, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b2 = simd_and(tmp70, tmp36);
        bytetest_a8_a8 = simd_and(tmp60, tmp42);
        tmp628 = simd_and(tmp605, bytetest_a8_a8);
        struct_Lu.cc = simd_or(tmp628, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b2 = simd_and(tmp70, tmp36);
        bytetest_aa_aa = simd_and(tmp60, tmp44);
        tmp629 = simd_and(tmp605, bytetest_aa_aa);
        struct_Lu.cc = simd_or(tmp629, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b2 = simd_and(tmp70, tmp36);
        bytetest_ac_ac = simd_and(tmp60, tmp47);
        tmp630 = simd_and(tmp605, bytetest_ac_ac);
        struct_Lu.cc = simd_or(tmp630, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b2 = simd_and(tmp70, tmp36);
        bytetest_ae_ae = simd_and(tmp60, tmp49);
        tmp631 = simd_and(tmp605, bytetest_ae_ae);
        struct_Lu.cc = simd_or(tmp631, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b2 = simd_and(tmp70, tmp36);
        bytetest_b0_b0 = simd_andc(tmp70, tmp9);
        tmp632 = simd_and(tmp605, bytetest_b0_b0);
        struct_Lu.cc = simd_or(tmp632, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b2 = simd_and(tmp70, tmp36);
        bytetest_b2_b2 = simd_and(tmp70, tmp36);
        tmp633 = simd_and(tmp605, bytetest_b2_b2);
        struct_Lu.cc = simd_or(tmp633, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b2 = simd_and(tmp70, tmp36);
        bytetest_b4_b4 = simd_and(tmp70, tmp30);
        tmp634 = simd_and(tmp605, bytetest_b4_b4);
        struct_Lu.cc = simd_or(tmp634, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b2 = simd_and(tmp70, tmp36);
        bytetest_b6_b6 = simd_and(tmp70, tmp39);
        tmp635 = simd_and(tmp605, bytetest_b6_b6);
        struct_Lu.cc = simd_or(tmp635, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b2 = simd_and(tmp70, tmp36);
        bytetest_b8_b8 = simd_and(tmp70, tmp42);
        tmp636 = simd_and(tmp605, bytetest_b8_b8);
        struct_Lu.cc = simd_or(tmp636, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b2 = simd_and(tmp70, tmp36);
        bytetest_ba_ba = simd_and(tmp70, tmp44);
        tmp637 = simd_and(tmp605, bytetest_ba_ba);
        struct_Lu.cc = simd_or(tmp637, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b2 = simd_and(tmp70, tmp36);
        bytetest_bc_bc = simd_and(tmp70, tmp47);
        tmp638 = simd_and(tmp605, bytetest_bc_bc);
        struct_Lu.cc = simd_or(tmp638, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b2 = simd_and(tmp70, tmp36);
        bytetest_be_be = simd_and(tmp70, tmp49);
        tmp639 = simd_and(tmp605, bytetest_be_be);
        struct_Lu.cc = simd_or(tmp639, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b3 = simd_and(tmp70, tmp14);
        bytetest_80_80 = simd_andc(tmp31, tmp9);
        tmp640 = simd_and(tmp559, bytetest_b3);
        carryQ.cq[35] = carryout2carry(pablo_blk_Advance(tmp640, carryQ.get_carry_in(35), tmp641));
        tmp642 = simd_and(tmp641, bytetest_80_80);
        struct_Lu.cc = simd_or(tmp642, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b3 = simd_and(tmp70, tmp14);
        bytetest_82_82 = simd_and(tmp31, tmp36);
        tmp643 = simd_and(tmp641, bytetest_82_82);
        struct_Lu.cc = simd_or(tmp643, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b3 = simd_and(tmp70, tmp14);
        bytetest_84_84 = simd_and(tmp31, tmp30);
        tmp644 = simd_and(tmp641, bytetest_84_84);
        struct_Lu.cc = simd_or(tmp644, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b3 = simd_and(tmp70, tmp14);
        bytetest_86_86 = simd_and(tmp31, tmp39);
        tmp645 = simd_and(tmp641, bytetest_86_86);
        struct_Lu.cc = simd_or(tmp645, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b3 = simd_and(tmp70, tmp14);
        bytetest_88_88 = simd_and(tmp31, tmp42);
        tmp646 = simd_and(tmp641, bytetest_88_88);
        struct_Lu.cc = simd_or(tmp646, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b3 = simd_and(tmp70, tmp14);
        bytetest_8a_8a = simd_and(tmp31, tmp44);
        tmp647 = simd_and(tmp641, bytetest_8a_8a);
        struct_Lu.cc = simd_or(tmp647, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b3 = simd_and(tmp70, tmp14);
        bytetest_8c_8c = simd_and(tmp31, tmp47);
        tmp648 = simd_and(tmp641, bytetest_8c_8c);
        struct_Lu.cc = simd_or(tmp648, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b3 = simd_and(tmp70, tmp14);
        bytetest_8e_8e = simd_and(tmp31, tmp49);
        tmp649 = simd_and(tmp641, bytetest_8e_8e);
        struct_Lu.cc = simd_or(tmp649, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b3 = simd_and(tmp70, tmp14);
        bytetest_90_90 = simd_andc(tmp26, tmp9);
        tmp650 = simd_and(tmp641, bytetest_90_90);
        struct_Lu.cc = simd_or(tmp650, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b3 = simd_and(tmp70, tmp14);
        bytetest_92_92 = simd_and(tmp26, tmp36);
        tmp651 = simd_and(tmp641, bytetest_92_92);
        struct_Lu.cc = simd_or(tmp651, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b3 = simd_and(tmp70, tmp14);
        bytetest_94_94 = simd_and(tmp26, tmp30);
        tmp652 = simd_and(tmp641, bytetest_94_94);
        struct_Lu.cc = simd_or(tmp652, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b3 = simd_and(tmp70, tmp14);
        bytetest_96_96 = simd_and(tmp26, tmp39);
        tmp653 = simd_and(tmp641, bytetest_96_96);
        struct_Lu.cc = simd_or(tmp653, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b3 = simd_and(tmp70, tmp14);
        bytetest_98_98 = simd_and(tmp26, tmp42);
        tmp654 = simd_and(tmp641, bytetest_98_98);
        struct_Lu.cc = simd_or(tmp654, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b3 = simd_and(tmp70, tmp14);
        bytetest_9a_9a = simd_and(tmp26, tmp44);
        tmp655 = simd_and(tmp641, bytetest_9a_9a);
        struct_Lu.cc = simd_or(tmp655, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b3 = simd_and(tmp70, tmp14);
        bytetest_9c_9c = simd_and(tmp26, tmp47);
        tmp656 = simd_and(tmp641, bytetest_9c_9c);
        struct_Lu.cc = simd_or(tmp656, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b3 = simd_and(tmp70, tmp14);
        bytetest_9e_9e = simd_and(tmp26, tmp49);
        tmp657 = simd_and(tmp641, bytetest_9e_9e);
        struct_Lu.cc = simd_or(tmp657, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b3 = simd_and(tmp70, tmp14);
        bytetest_a0_a0 = simd_andc(tmp60, tmp9);
        tmp658 = simd_and(tmp641, bytetest_a0_a0);
        struct_Lu.cc = simd_or(tmp658, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b3 = simd_and(tmp70, tmp14);
        bytetest_a2_a2 = simd_and(tmp60, tmp36);
        tmp659 = simd_and(tmp641, bytetest_a2_a2);
        struct_Lu.cc = simd_or(tmp659, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b3 = simd_and(tmp70, tmp14);
        bytetest_ab_ab = simd_and(tmp60, tmp78);
        tmp660 = simd_and(tmp641, bytetest_ab_ab);
        struct_Lu.cc = simd_or(tmp660, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b3 = simd_and(tmp70, tmp14);
        bytetest_ad_ad = simd_and(tmp60, tmp80);
        tmp661 = simd_and(tmp641, bytetest_ad_ad);
        struct_Lu.cc = simd_or(tmp661, struct_Lu.cc);
        bytetest_e2 = simd_and(tmp390, tmp36);
        bytetest_b3 = simd_and(tmp70, tmp14);
        bytetest_b2_b2 = simd_and(tmp70, tmp36);
        tmp662 = simd_and(tmp641, bytetest_b2_b2);
        struct_Lu.cc = simd_or(tmp662, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_99 = simd_and(tmp26, tmp76);
        bytetest_80_80 = simd_andc(tmp31, tmp9);
        tmp663 = simd_and(tmp21, bytetest_ea);
        carryQ.cq[36] = carryout2carry(pablo_blk_Advance(tmp663, carryQ.get_carry_in(36), tmp664));
        tmp665 = simd_and(tmp664, bytetest_99);
        carryQ.cq[37] = carryout2carry(pablo_blk_Advance(tmp665, carryQ.get_carry_in(37), tmp666));
        tmp667 = simd_and(tmp666, bytetest_80_80);
        struct_Lu.cc = simd_or(tmp667, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_99 = simd_and(tmp26, tmp76);
        bytetest_82_82 = simd_and(tmp31, tmp36);
        tmp668 = simd_and(tmp666, bytetest_82_82);
        struct_Lu.cc = simd_or(tmp668, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_99 = simd_and(tmp26, tmp76);
        bytetest_84_84 = simd_and(tmp31, tmp30);
        tmp669 = simd_and(tmp666, bytetest_84_84);
        struct_Lu.cc = simd_or(tmp669, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_99 = simd_and(tmp26, tmp76);
        bytetest_86_86 = simd_and(tmp31, tmp39);
        tmp670 = simd_and(tmp666, bytetest_86_86);
        struct_Lu.cc = simd_or(tmp670, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_99 = simd_and(tmp26, tmp76);
        bytetest_88_88 = simd_and(tmp31, tmp42);
        tmp671 = simd_and(tmp666, bytetest_88_88);
        struct_Lu.cc = simd_or(tmp671, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_99 = simd_and(tmp26, tmp76);
        bytetest_8a_8a = simd_and(tmp31, tmp44);
        tmp672 = simd_and(tmp666, bytetest_8a_8a);
        struct_Lu.cc = simd_or(tmp672, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_99 = simd_and(tmp26, tmp76);
        bytetest_8c_8c = simd_and(tmp31, tmp47);
        tmp673 = simd_and(tmp666, bytetest_8c_8c);
        struct_Lu.cc = simd_or(tmp673, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_99 = simd_and(tmp26, tmp76);
        bytetest_8e_8e = simd_and(tmp31, tmp49);
        tmp674 = simd_and(tmp666, bytetest_8e_8e);
        struct_Lu.cc = simd_or(tmp674, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_99 = simd_and(tmp26, tmp76);
        bytetest_90_90 = simd_andc(tmp26, tmp9);
        tmp675 = simd_and(tmp666, bytetest_90_90);
        struct_Lu.cc = simd_or(tmp675, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_99 = simd_and(tmp26, tmp76);
        bytetest_92_92 = simd_and(tmp26, tmp36);
        tmp676 = simd_and(tmp666, bytetest_92_92);
        struct_Lu.cc = simd_or(tmp676, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_99 = simd_and(tmp26, tmp76);
        bytetest_94_94 = simd_and(tmp26, tmp30);
        tmp677 = simd_and(tmp666, bytetest_94_94);
        struct_Lu.cc = simd_or(tmp677, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_99 = simd_and(tmp26, tmp76);
        bytetest_96_96 = simd_and(tmp26, tmp39);
        tmp678 = simd_and(tmp666, bytetest_96_96);
        struct_Lu.cc = simd_or(tmp678, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_99 = simd_and(tmp26, tmp76);
        bytetest_98_98 = simd_and(tmp26, tmp42);
        tmp679 = simd_and(tmp666, bytetest_98_98);
        struct_Lu.cc = simd_or(tmp679, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_99 = simd_and(tmp26, tmp76);
        bytetest_9a_9a = simd_and(tmp26, tmp44);
        tmp680 = simd_and(tmp666, bytetest_9a_9a);
        struct_Lu.cc = simd_or(tmp680, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_99 = simd_and(tmp26, tmp76);
        bytetest_9c_9c = simd_and(tmp26, tmp47);
        tmp681 = simd_and(tmp666, bytetest_9c_9c);
        struct_Lu.cc = simd_or(tmp681, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_99 = simd_and(tmp26, tmp76);
        bytetest_9e_9e = simd_and(tmp26, tmp49);
        tmp682 = simd_and(tmp666, bytetest_9e_9e);
        struct_Lu.cc = simd_or(tmp682, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_99 = simd_and(tmp26, tmp76);
        bytetest_a0_a0 = simd_andc(tmp60, tmp9);
        tmp683 = simd_and(tmp666, bytetest_a0_a0);
        struct_Lu.cc = simd_or(tmp683, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_99 = simd_and(tmp26, tmp76);
        bytetest_a2_a2 = simd_and(tmp60, tmp36);
        tmp684 = simd_and(tmp666, bytetest_a2_a2);
        struct_Lu.cc = simd_or(tmp684, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_99 = simd_and(tmp26, tmp76);
        bytetest_a4_a4 = simd_and(tmp60, tmp30);
        tmp685 = simd_and(tmp666, bytetest_a4_a4);
        struct_Lu.cc = simd_or(tmp685, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_99 = simd_and(tmp26, tmp76);
        bytetest_a6_a6 = simd_and(tmp60, tmp39);
        tmp686 = simd_and(tmp666, bytetest_a6_a6);
        struct_Lu.cc = simd_or(tmp686, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_99 = simd_and(tmp26, tmp76);
        bytetest_a8_a8 = simd_and(tmp60, tmp42);
        tmp687 = simd_and(tmp666, bytetest_a8_a8);
        struct_Lu.cc = simd_or(tmp687, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_99 = simd_and(tmp26, tmp76);
        bytetest_aa_aa = simd_and(tmp60, tmp44);
        tmp688 = simd_and(tmp666, bytetest_aa_aa);
        struct_Lu.cc = simd_or(tmp688, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_99 = simd_and(tmp26, tmp76);
        bytetest_ac_ac = simd_and(tmp60, tmp47);
        tmp689 = simd_and(tmp666, bytetest_ac_ac);
        struct_Lu.cc = simd_or(tmp689, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9a = simd_and(tmp26, tmp44);
        bytetest_80_80 = simd_andc(tmp31, tmp9);
        tmp690 = simd_and(tmp664, bytetest_9a);
        carryQ.cq[38] = carryout2carry(pablo_blk_Advance(tmp690, carryQ.get_carry_in(38), tmp691));
        tmp692 = simd_and(tmp691, bytetest_80_80);
        struct_Lu.cc = simd_or(tmp692, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9a = simd_and(tmp26, tmp44);
        bytetest_82_82 = simd_and(tmp31, tmp36);
        tmp693 = simd_and(tmp691, bytetest_82_82);
        struct_Lu.cc = simd_or(tmp693, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9a = simd_and(tmp26, tmp44);
        bytetest_84_84 = simd_and(tmp31, tmp30);
        tmp694 = simd_and(tmp691, bytetest_84_84);
        struct_Lu.cc = simd_or(tmp694, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9a = simd_and(tmp26, tmp44);
        bytetest_86_86 = simd_and(tmp31, tmp39);
        tmp695 = simd_and(tmp691, bytetest_86_86);
        struct_Lu.cc = simd_or(tmp695, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9a = simd_and(tmp26, tmp44);
        bytetest_88_88 = simd_and(tmp31, tmp42);
        tmp696 = simd_and(tmp691, bytetest_88_88);
        struct_Lu.cc = simd_or(tmp696, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9a = simd_and(tmp26, tmp44);
        bytetest_8a_8a = simd_and(tmp31, tmp44);
        tmp697 = simd_and(tmp691, bytetest_8a_8a);
        struct_Lu.cc = simd_or(tmp697, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9a = simd_and(tmp26, tmp44);
        bytetest_8c_8c = simd_and(tmp31, tmp47);
        tmp698 = simd_and(tmp691, bytetest_8c_8c);
        struct_Lu.cc = simd_or(tmp698, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9a = simd_and(tmp26, tmp44);
        bytetest_8e_8e = simd_and(tmp31, tmp49);
        tmp699 = simd_and(tmp691, bytetest_8e_8e);
        struct_Lu.cc = simd_or(tmp699, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9a = simd_and(tmp26, tmp44);
        bytetest_90_90 = simd_andc(tmp26, tmp9);
        tmp700 = simd_and(tmp691, bytetest_90_90);
        struct_Lu.cc = simd_or(tmp700, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9a = simd_and(tmp26, tmp44);
        bytetest_92_92 = simd_and(tmp26, tmp36);
        tmp701 = simd_and(tmp691, bytetest_92_92);
        struct_Lu.cc = simd_or(tmp701, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9a = simd_and(tmp26, tmp44);
        bytetest_94_94 = simd_and(tmp26, tmp30);
        tmp702 = simd_and(tmp691, bytetest_94_94);
        struct_Lu.cc = simd_or(tmp702, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9a = simd_and(tmp26, tmp44);
        bytetest_96_96 = simd_and(tmp26, tmp39);
        tmp703 = simd_and(tmp691, bytetest_96_96);
        struct_Lu.cc = simd_or(tmp703, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9c = simd_and(tmp26, tmp47);
        bytetest_a2_a2 = simd_and(tmp60, tmp36);
        tmp704 = simd_and(tmp664, bytetest_9c);
        carryQ.cq[39] = carryout2carry(pablo_blk_Advance(tmp704, carryQ.get_carry_in(39), tmp705));
        tmp706 = simd_and(tmp705, bytetest_a2_a2);
        struct_Lu.cc = simd_or(tmp706, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9c = simd_and(tmp26, tmp47);
        bytetest_a4_a4 = simd_and(tmp60, tmp30);
        tmp707 = simd_and(tmp705, bytetest_a4_a4);
        struct_Lu.cc = simd_or(tmp707, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9c = simd_and(tmp26, tmp47);
        bytetest_a6_a6 = simd_and(tmp60, tmp39);
        tmp708 = simd_and(tmp705, bytetest_a6_a6);
        struct_Lu.cc = simd_or(tmp708, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9c = simd_and(tmp26, tmp47);
        bytetest_a8_a8 = simd_and(tmp60, tmp42);
        tmp709 = simd_and(tmp705, bytetest_a8_a8);
        struct_Lu.cc = simd_or(tmp709, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9c = simd_and(tmp26, tmp47);
        bytetest_aa_aa = simd_and(tmp60, tmp44);
        tmp710 = simd_and(tmp705, bytetest_aa_aa);
        struct_Lu.cc = simd_or(tmp710, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9c = simd_and(tmp26, tmp47);
        bytetest_ac_ac = simd_and(tmp60, tmp47);
        tmp711 = simd_and(tmp705, bytetest_ac_ac);
        struct_Lu.cc = simd_or(tmp711, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9c = simd_and(tmp26, tmp47);
        bytetest_ae_ae = simd_and(tmp60, tmp49);
        tmp712 = simd_and(tmp705, bytetest_ae_ae);
        struct_Lu.cc = simd_or(tmp712, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9c = simd_and(tmp26, tmp47);
        bytetest_b2_b2 = simd_and(tmp70, tmp36);
        tmp713 = simd_and(tmp705, bytetest_b2_b2);
        struct_Lu.cc = simd_or(tmp713, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9c = simd_and(tmp26, tmp47);
        bytetest_b4_b4 = simd_and(tmp70, tmp30);
        tmp714 = simd_and(tmp705, bytetest_b4_b4);
        struct_Lu.cc = simd_or(tmp714, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9c = simd_and(tmp26, tmp47);
        bytetest_b6_b6 = simd_and(tmp70, tmp39);
        tmp715 = simd_and(tmp705, bytetest_b6_b6);
        struct_Lu.cc = simd_or(tmp715, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9c = simd_and(tmp26, tmp47);
        bytetest_b8_b8 = simd_and(tmp70, tmp42);
        tmp716 = simd_and(tmp705, bytetest_b8_b8);
        struct_Lu.cc = simd_or(tmp716, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9c = simd_and(tmp26, tmp47);
        bytetest_ba_ba = simd_and(tmp70, tmp44);
        tmp717 = simd_and(tmp705, bytetest_ba_ba);
        struct_Lu.cc = simd_or(tmp717, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9c = simd_and(tmp26, tmp47);
        bytetest_bc_bc = simd_and(tmp70, tmp47);
        tmp718 = simd_and(tmp705, bytetest_bc_bc);
        struct_Lu.cc = simd_or(tmp718, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9c = simd_and(tmp26, tmp47);
        bytetest_be_be = simd_and(tmp70, tmp49);
        tmp719 = simd_and(tmp705, bytetest_be_be);
        struct_Lu.cc = simd_or(tmp719, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_80_80 = simd_andc(tmp31, tmp9);
        tmp720 = simd_and(tmp664, bytetest_9d);
        carryQ.cq[40] = carryout2carry(pablo_blk_Advance(tmp720, carryQ.get_carry_in(40), tmp721));
        tmp722 = simd_and(tmp721, bytetest_80_80);
        struct_Lu.cc = simd_or(tmp722, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_82_82 = simd_and(tmp31, tmp36);
        tmp723 = simd_and(tmp721, bytetest_82_82);
        struct_Lu.cc = simd_or(tmp723, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_84_84 = simd_and(tmp31, tmp30);
        tmp724 = simd_and(tmp721, bytetest_84_84);
        struct_Lu.cc = simd_or(tmp724, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_86_86 = simd_and(tmp31, tmp39);
        tmp725 = simd_and(tmp721, bytetest_86_86);
        struct_Lu.cc = simd_or(tmp725, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_88_88 = simd_and(tmp31, tmp42);
        tmp726 = simd_and(tmp721, bytetest_88_88);
        struct_Lu.cc = simd_or(tmp726, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_8a_8a = simd_and(tmp31, tmp44);
        tmp727 = simd_and(tmp721, bytetest_8a_8a);
        struct_Lu.cc = simd_or(tmp727, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_8c_8c = simd_and(tmp31, tmp47);
        tmp728 = simd_and(tmp721, bytetest_8c_8c);
        struct_Lu.cc = simd_or(tmp728, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_8e_8e = simd_and(tmp31, tmp49);
        tmp729 = simd_and(tmp721, bytetest_8e_8e);
        struct_Lu.cc = simd_or(tmp729, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_90_90 = simd_andc(tmp26, tmp9);
        tmp730 = simd_and(tmp721, bytetest_90_90);
        struct_Lu.cc = simd_or(tmp730, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_92_92 = simd_and(tmp26, tmp36);
        tmp731 = simd_and(tmp721, bytetest_92_92);
        struct_Lu.cc = simd_or(tmp731, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_94_94 = simd_and(tmp26, tmp30);
        tmp732 = simd_and(tmp721, bytetest_94_94);
        struct_Lu.cc = simd_or(tmp732, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_96_96 = simd_and(tmp26, tmp39);
        tmp733 = simd_and(tmp721, bytetest_96_96);
        struct_Lu.cc = simd_or(tmp733, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_98_98 = simd_and(tmp26, tmp42);
        tmp734 = simd_and(tmp721, bytetest_98_98);
        struct_Lu.cc = simd_or(tmp734, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_9a_9a = simd_and(tmp26, tmp44);
        tmp735 = simd_and(tmp721, bytetest_9a_9a);
        struct_Lu.cc = simd_or(tmp735, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_9c_9c = simd_and(tmp26, tmp47);
        tmp736 = simd_and(tmp721, bytetest_9c_9c);
        struct_Lu.cc = simd_or(tmp736, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_9e_9e = simd_and(tmp26, tmp49);
        tmp737 = simd_and(tmp721, bytetest_9e_9e);
        struct_Lu.cc = simd_or(tmp737, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_a0_a0 = simd_andc(tmp60, tmp9);
        tmp738 = simd_and(tmp721, bytetest_a0_a0);
        struct_Lu.cc = simd_or(tmp738, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_a2_a2 = simd_and(tmp60, tmp36);
        tmp739 = simd_and(tmp721, bytetest_a2_a2);
        struct_Lu.cc = simd_or(tmp739, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_a4_a4 = simd_and(tmp60, tmp30);
        tmp740 = simd_and(tmp721, bytetest_a4_a4);
        struct_Lu.cc = simd_or(tmp740, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_a6_a6 = simd_and(tmp60, tmp39);
        tmp741 = simd_and(tmp721, bytetest_a6_a6);
        struct_Lu.cc = simd_or(tmp741, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_a8_a8 = simd_and(tmp60, tmp42);
        tmp742 = simd_and(tmp721, bytetest_a8_a8);
        struct_Lu.cc = simd_or(tmp742, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_aa_aa = simd_and(tmp60, tmp44);
        tmp743 = simd_and(tmp721, bytetest_aa_aa);
        struct_Lu.cc = simd_or(tmp743, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_ac_ac = simd_and(tmp60, tmp47);
        tmp744 = simd_and(tmp721, bytetest_ac_ac);
        struct_Lu.cc = simd_or(tmp744, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_ae_ae = simd_and(tmp60, tmp49);
        tmp745 = simd_and(tmp721, bytetest_ae_ae);
        struct_Lu.cc = simd_or(tmp745, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_b9_b9 = simd_and(tmp70, tmp76);
        tmp746 = simd_and(tmp721, bytetest_b9_b9);
        struct_Lu.cc = simd_or(tmp746, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_bb_bb = simd_and(tmp70, tmp78);
        tmp747 = simd_and(tmp721, bytetest_bb_bb);
        struct_Lu.cc = simd_or(tmp747, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_bd_be = simd_and(tmp222, tmp122);
        tmp748 = simd_and(tmp721, bytetest_bd_be);
        struct_Lu.cc = simd_or(tmp748, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9e = simd_and(tmp26, tmp49);
        bytetest_80_80 = simd_andc(tmp31, tmp9);
        tmp749 = simd_and(tmp664, bytetest_9e);
        carryQ.cq[41] = carryout2carry(pablo_blk_Advance(tmp749, carryQ.get_carry_in(41), tmp750));
        tmp751 = simd_and(tmp750, bytetest_80_80);
        struct_Lu.cc = simd_or(tmp751, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9e = simd_and(tmp26, tmp49);
        bytetest_82_82 = simd_and(tmp31, tmp36);
        tmp752 = simd_and(tmp750, bytetest_82_82);
        struct_Lu.cc = simd_or(tmp752, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9e = simd_and(tmp26, tmp49);
        bytetest_84_84 = simd_and(tmp31, tmp30);
        tmp753 = simd_and(tmp750, bytetest_84_84);
        struct_Lu.cc = simd_or(tmp753, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9e = simd_and(tmp26, tmp49);
        bytetest_86_86 = simd_and(tmp31, tmp39);
        tmp754 = simd_and(tmp750, bytetest_86_86);
        struct_Lu.cc = simd_or(tmp754, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9e = simd_and(tmp26, tmp49);
        bytetest_8b_8b = simd_and(tmp31, tmp78);
        tmp755 = simd_and(tmp750, bytetest_8b_8b);
        struct_Lu.cc = simd_or(tmp755, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9e = simd_and(tmp26, tmp49);
        bytetest_8d_8d = simd_and(tmp31, tmp80);
        tmp756 = simd_and(tmp750, bytetest_8d_8d);
        struct_Lu.cc = simd_or(tmp756, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9e = simd_and(tmp26, tmp49);
        bytetest_90_90 = simd_andc(tmp26, tmp9);
        tmp757 = simd_and(tmp750, bytetest_90_90);
        struct_Lu.cc = simd_or(tmp757, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9e = simd_and(tmp26, tmp49);
        bytetest_92_92 = simd_and(tmp26, tmp36);
        tmp758 = simd_and(tmp750, bytetest_92_92);
        struct_Lu.cc = simd_or(tmp758, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9e = simd_and(tmp26, tmp49);
        bytetest_a0_a0 = simd_andc(tmp60, tmp9);
        tmp759 = simd_and(tmp750, bytetest_a0_a0);
        struct_Lu.cc = simd_or(tmp759, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9e = simd_and(tmp26, tmp49);
        bytetest_a2_a2 = simd_and(tmp60, tmp36);
        tmp760 = simd_and(tmp750, bytetest_a2_a2);
        struct_Lu.cc = simd_or(tmp760, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9e = simd_and(tmp26, tmp49);
        bytetest_a4_a4 = simd_and(tmp60, tmp30);
        tmp761 = simd_and(tmp750, bytetest_a4_a4);
        struct_Lu.cc = simd_or(tmp761, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9e = simd_and(tmp26, tmp49);
        bytetest_a6_a6 = simd_and(tmp60, tmp39);
        tmp762 = simd_and(tmp750, bytetest_a6_a6);
        struct_Lu.cc = simd_or(tmp762, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9e = simd_and(tmp26, tmp49);
        bytetest_a8_a8 = simd_and(tmp60, tmp42);
        tmp763 = simd_and(tmp750, bytetest_a8_a8);
        struct_Lu.cc = simd_or(tmp763, struct_Lu.cc);
        bytetest_ea = simd_and(tmp390, tmp44);
        bytetest_9e = simd_and(tmp26, tmp49);
        bytetest_aa_aa = simd_and(tmp60, tmp44);
        tmp764 = simd_and(tmp750, bytetest_aa_aa);
        struct_Lu.cc = simd_or(tmp764, struct_Lu.cc);
        bytetest_ef = simd_and(tmp390, tmp82);
        bytetest_bc = simd_and(tmp70, tmp47);
        bytetest_a1_ba = simd_and(bytetest_a0_bf, tmp10);
        tmp765 = simd_and(tmp21, bytetest_ef);
        carryQ.cq[42] = carryout2carry(pablo_blk_Advance(tmp765, carryQ.get_carry_in(42), tmp766));
        tmp767 = simd_and(tmp766, bytetest_bc);
        carryQ.cq[43] = carryout2carry(pablo_blk_Advance(tmp767, carryQ.get_carry_in(43), tmp768));
        tmp769 = simd_and(tmp768, bytetest_a1_ba);
        struct_Lu.cc = simd_or(tmp769, struct_Lu.cc);
        tmp770 = simd_and(tmp11, tmp69);
        bytetest_f0 = simd_andc(tmp770, tmp9);
        bytetest_90 = simd_andc(tmp26, tmp9);
        bytetest_90 = simd_andc(tmp26, tmp9);
        tmp771 = simd_or(basis_bits.bit_3, basis_bits.bit_4);
        tmp772 = simd_and(basis_bits.bit_2, tmp771);
        bytetest_80_a7 = simd_andc(tmp15, tmp772);
        tmp773 = simd_and(tmp21, bytetest_f0);
        carryQ.cq[44] = carryout2carry(pablo_blk_Advance(tmp773, carryQ.get_carry_in(44), tmp774));
        tmp775 = simd_and(tmp774, bytetest_90);
        carryQ.cq[45] = carryout2carry(pablo_blk_Advance(tmp775, carryQ.get_carry_in(45), tmp776));
        tmp777 = simd_and(tmp776, bytetest_90);
        carryQ.cq[46] = carryout2carry(pablo_blk_Advance(tmp777, carryQ.get_carry_in(46), tmp778));
        tmp779 = simd_and(tmp778, bytetest_80_a7);
        struct_Lu.cc = simd_or(tmp779, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp770, tmp9);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_90 = simd_andc(tmp26, tmp9);
        tmp780 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
        tmp781 = simd_and(basis_bits.bit_4, tmp780);
        tmp782 = simd_and(basis_bits.bit_3, tmp781);
        bytetest_80_99 = simd_andc(tmp16, tmp782);
        tmp783 = simd_and(tmp774, bytetest_9d);
        carryQ.cq[47] = carryout2carry(pablo_blk_Advance(tmp783, carryQ.get_carry_in(47), tmp784));
        tmp785 = simd_and(tmp784, bytetest_90);
        carryQ.cq[48] = carryout2carry(pablo_blk_Advance(tmp785, carryQ.get_carry_in(48), tmp786));
        tmp787 = simd_and(tmp786, bytetest_80_99);
        struct_Lu.cc = simd_or(tmp787, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp770, tmp9);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_91 = simd_and(tmp26, tmp85);
        tmp788 = simd_and(basis_bits.bit_4, tmp142);
        bytetest_80_8d = simd_andc(tmp31, tmp788);
        tmp789 = simd_and(tmp784, bytetest_91);
        carryQ.cq[49] = carryout2carry(pablo_blk_Advance(tmp789, carryQ.get_carry_in(49), tmp790));
        tmp791 = simd_and(tmp790, bytetest_80_8d);
        bytetest_90 = simd_andc(tmp26, tmp9);
        bytetest_b4_bf = simd_and(tmp70, tmp7);
        tmp792 = simd_and(tmp786, bytetest_b4_bf);
        tmp793 = simd_or(tmp792, tmp791);
        struct_Lu.cc = simd_or(tmp793, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp770, tmp9);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_92 = simd_and(tmp26, tmp36);
        bytetest_80_81 = simd_andc(tmp31, tmp131);
        tmp794 = simd_and(tmp784, bytetest_92);
        carryQ.cq[50] = carryout2carry(pablo_blk_Advance(tmp794, carryQ.get_carry_in(50), tmp795));
        tmp796 = simd_and(tmp795, bytetest_80_81);
        bytetest_91 = simd_and(tmp26, tmp85);
        bytetest_a8_bf = simd_and(bytetest_a0_bf, tmp771);
        tmp797 = simd_and(tmp790, bytetest_a8_bf);
        tmp798 = simd_or(tmp797, tmp796);
        struct_Lu.cc = simd_or(tmp798, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp770, tmp9);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_92 = simd_and(tmp26, tmp36);
        bytetest_9c_9c = simd_and(tmp26, tmp47);
        tmp799 = simd_and(tmp795, bytetest_9c_9c);
        struct_Lu.cc = simd_or(tmp799, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp770, tmp9);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_92 = simd_and(tmp26, tmp36);
        bytetest_9e_9f = simd_and(tmp26, tmp133);
        tmp800 = simd_and(tmp795, bytetest_9e_9f);
        struct_Lu.cc = simd_or(tmp800, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp770, tmp9);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_92 = simd_and(tmp26, tmp36);
        bytetest_a2_a2 = simd_and(tmp60, tmp36);
        tmp801 = simd_and(tmp795, bytetest_a2_a2);
        struct_Lu.cc = simd_or(tmp801, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp770, tmp9);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_92 = simd_and(tmp26, tmp36);
        tmp802 = simd_and(tmp60, tmp29);
        bytetest_a5_a6 = simd_and(tmp802, tmp122);
        tmp803 = simd_and(tmp795, bytetest_a5_a6);
        struct_Lu.cc = simd_or(tmp803, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp770, tmp9);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_92 = simd_and(tmp26, tmp36);
        tmp804 = simd_or(simd_and(basis_bits.bit_5, tmp137), simd_andc(tmp8, basis_bits.bit_5));
        bytetest_a9_ac = simd_and(bytetest_a8_af, tmp804);
        tmp805 = simd_and(tmp795, bytetest_a9_ac);
        struct_Lu.cc = simd_or(tmp805, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp770, tmp9);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_92 = simd_and(tmp26, tmp36);
        tmp806 = simd_or(basis_bits.bit_4, tmp142);
        tmp807 = simd_not(tmp806);
        tmp808 = simd_or(simd_and(basis_bits.bit_3, tmp807), simd_andc(tmp133, basis_bits.bit_3));
        bytetest_ae_b5 = simd_and(bytetest_a0_bf, tmp808);
        tmp809 = simd_and(tmp795, bytetest_ae_b5);
        struct_Lu.cc = simd_or(tmp809, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp770, tmp9);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_93 = simd_and(tmp26, tmp14);
        tmp810 = simd_or(basis_bits.bit_3, tmp781);
        tmp811 = simd_not(tmp810);
        tmp812 = simd_or(simd_and(basis_bits.bit_2, tmp811), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
        bytetest_90_a9 = simd_and(tmp15, tmp812);
        tmp813 = simd_and(tmp784, bytetest_93);
        carryQ.cq[51] = carryout2carry(pablo_blk_Advance(tmp813, carryQ.get_carry_in(51), tmp814));
        tmp815 = simd_and(tmp814, bytetest_90_a9);
        struct_Lu.cc = simd_or(tmp815, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp770, tmp9);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_94 = simd_and(tmp26, tmp30);
        tmp816 = simd_andc(tmp29, basis_bits.bit_6);
        bytetest_84_85 = simd_and(tmp31, tmp816);
        tmp817 = simd_and(tmp784, bytetest_94);
        carryQ.cq[52] = carryout2carry(pablo_blk_Advance(tmp817, carryQ.get_carry_in(52), tmp818));
        tmp819 = simd_and(tmp818, bytetest_84_85);
        struct_Lu.cc = simd_or(tmp819, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp770, tmp9);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_94 = simd_and(tmp26, tmp30);
        tmp820 = simd_not(tmp4);
        tmp821 = simd_or(simd_and(basis_bits.bit_4, tmp820), simd_andc(tmp17, basis_bits.bit_4));
        bytetest_87_8a = simd_and(tmp31, tmp821);
        tmp822 = simd_and(tmp818, bytetest_87_8a);
        struct_Lu.cc = simd_or(tmp822, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp770, tmp9);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_94 = simd_and(tmp26, tmp30);
        tmp823 = simd_or(basis_bits.bit_4, tmp555);
        tmp824 = simd_not(tmp823);
        tmp825 = simd_or(simd_and(basis_bits.bit_3, tmp824), simd_andc(tmp599, basis_bits.bit_3));
        bytetest_8d_94 = simd_and(tmp16, tmp825);
        tmp826 = simd_and(tmp818, bytetest_8d_94);
        struct_Lu.cc = simd_or(tmp826, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp770, tmp9);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_94 = simd_and(tmp26, tmp30);
        tmp827 = simd_not(tmp555);
        tmp828 = simd_or(simd_and(basis_bits.bit_4, tmp827), simd_andc(tmp142, basis_bits.bit_4));
        bytetest_96_9c = simd_and(tmp26, tmp828);
        tmp829 = simd_and(tmp818, bytetest_96_9c);
        struct_Lu.cc = simd_or(tmp829, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp770, tmp9);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_94 = simd_and(tmp26, tmp30);
        bytetest_b8_b9 = simd_and(tmp70, tmp116);
        tmp830 = simd_and(tmp818, bytetest_b8_b9);
        struct_Lu.cc = simd_or(tmp830, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp770, tmp9);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_94 = simd_and(tmp26, tmp30);
        bytetest_bb_be = simd_and(bytetest_b8_bf, tmp229);
        tmp831 = simd_and(tmp818, bytetest_bb_be);
        struct_Lu.cc = simd_or(tmp831, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp770, tmp9);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_95 = simd_and(tmp26, tmp84);
        bytetest_80_84 = simd_andc(tmp227, tmp555);
        tmp832 = simd_and(tmp784, bytetest_95);
        carryQ.cq[53] = carryout2carry(pablo_blk_Advance(tmp832, carryQ.get_carry_in(53), tmp833));
        tmp834 = simd_and(tmp833, bytetest_80_84);
        struct_Lu.cc = simd_or(tmp834, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp770, tmp9);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_95 = simd_and(tmp26, tmp84);
        bytetest_86_86 = simd_and(tmp31, tmp39);
        tmp835 = simd_and(tmp833, bytetest_86_86);
        struct_Lu.cc = simd_or(tmp835, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp770, tmp9);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_95 = simd_and(tmp26, tmp84);
        tmp836 = simd_or(simd_and(basis_bits.bit_3, tmp598), simd_andc(tmp781, basis_bits.bit_3));
        bytetest_8a_90 = simd_and(tmp16, tmp836);
        tmp837 = simd_and(tmp833, bytetest_8a_90);
        struct_Lu.cc = simd_or(tmp837, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp770, tmp9);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_96 = simd_and(tmp26, tmp39);
        bytetest_80_85 = simd_andc(tmp227, tmp142);
        tmp838 = simd_and(tmp784, bytetest_96);
        carryQ.cq[54] = carryout2carry(pablo_blk_Advance(tmp838, carryQ.get_carry_in(54), tmp839));
        tmp840 = simd_and(tmp839, bytetest_80_85);
        bytetest_95 = simd_and(tmp26, tmp84);
        tmp841 = simd_or(basis_bits.bit_3, tmp46);
        bytetest_ac_bf = simd_and(bytetest_a0_bf, tmp841);
        tmp842 = simd_and(tmp833, bytetest_ac_bf);
        tmp843 = simd_or(tmp842, tmp840);
        struct_Lu.cc = simd_or(tmp843, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp770, tmp9);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_96 = simd_and(tmp26, tmp39);
        bytetest_a0_b9 = simd_andc(bytetest_a0_bf, tmp782);
        tmp844 = simd_and(tmp839, bytetest_a0_b9);
        struct_Lu.cc = simd_or(tmp844, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp770, tmp9);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_97 = simd_and(tmp26, tmp91);
        tmp845 = simd_or(basis_bits.bit_3, tmp133);
        tmp846 = simd_not(tmp845);
        tmp847 = simd_and(basis_bits.bit_3, tmp7);
        tmp848 = simd_or(simd_and(basis_bits.bit_2, tmp846), simd_andc(tmp847, basis_bits.bit_2));
        bytetest_94_ad = simd_and(tmp15, tmp848);
        tmp849 = simd_and(tmp784, bytetest_97);
        carryQ.cq[55] = carryout2carry(pablo_blk_Advance(tmp849, carryQ.get_carry_in(55), tmp850));
        tmp851 = simd_and(tmp850, bytetest_94_ad);
        struct_Lu.cc = simd_or(tmp851, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp770, tmp9);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_98 = simd_and(tmp26, tmp42);
        tmp852 = simd_or(simd_and(basis_bits.bit_2, tmp247), simd_andc(tmp771, basis_bits.bit_2));
        bytetest_88_a1 = simd_and(tmp15, tmp852);
        tmp853 = simd_and(tmp784, bytetest_98);
        carryQ.cq[56] = carryout2carry(pablo_blk_Advance(tmp853, carryQ.get_carry_in(56), tmp854));
        tmp855 = simd_and(tmp854, bytetest_88_a1);
        struct_Lu.cc = simd_or(tmp855, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp770, tmp9);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_99 = simd_and(tmp26, tmp76);
        tmp856 = simd_and(basis_bits.bit_3, tmp806);
        bytetest_80_95 = simd_andc(tmp16, tmp856);
        tmp857 = simd_and(tmp784, bytetest_99);
        carryQ.cq[57] = carryout2carry(pablo_blk_Advance(tmp857, carryQ.get_carry_in(57), tmp858));
        tmp859 = simd_and(tmp858, bytetest_80_95);
        bytetest_98 = simd_and(tmp26, tmp42);
        bytetest_bc_bf = simd_and(tmp70, tmp46);
        tmp860 = simd_and(tmp854, bytetest_bc_bf);
        tmp861 = simd_or(tmp860, tmp859);
        struct_Lu.cc = simd_or(tmp861, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp770, tmp9);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_9a = simd_and(tmp26, tmp44);
        bytetest_80_89 = simd_andc(tmp31, tmp781);
        tmp862 = simd_and(tmp784, bytetest_9a);
        carryQ.cq[58] = carryout2carry(pablo_blk_Advance(tmp862, carryQ.get_carry_in(58), tmp863));
        tmp864 = simd_and(tmp863, bytetest_80_89);
        bytetest_99 = simd_and(tmp26, tmp76);
        bytetest_b0_bf = simd_and(tmp15, tmp69);
        tmp865 = simd_and(tmp858, bytetest_b0_bf);
        tmp866 = simd_or(tmp865, tmp864);
        struct_Lu.cc = simd_or(tmp866, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp770, tmp9);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_9b = simd_and(tmp26, tmp78);
        bytetest_80_80 = simd_andc(tmp31, tmp9);
        tmp867 = simd_and(tmp784, bytetest_9b);
        carryQ.cq[59] = carryout2carry(pablo_blk_Advance(tmp867, carryQ.get_carry_in(59), tmp868));
        tmp869 = simd_and(tmp868, bytetest_80_80);
        bytetest_9a = simd_and(tmp26, tmp44);
        bytetest_a8_bf = simd_and(bytetest_a0_bf, tmp771);
        tmp870 = simd_and(tmp863, bytetest_a8_bf);
        tmp871 = simd_or(tmp870, tmp869);
        struct_Lu.cc = simd_or(tmp871, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp770, tmp9);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_9b = simd_and(tmp26, tmp78);
        tmp872 = simd_or(simd_and(basis_bits.bit_3, tmp6), simd_andc(tmp131, basis_bits.bit_3));
        bytetest_a2_ba = simd_and(bytetest_a0_bf, tmp872);
        tmp873 = simd_and(tmp868, bytetest_a2_ba);
        struct_Lu.cc = simd_or(tmp873, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp770, tmp9);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_9c = simd_and(tmp26, tmp47);
        tmp874 = simd_and(basis_bits.bit_3, tmp823);
        tmp875 = simd_not(tmp874);
        tmp876 = simd_and(basis_bits.bit_3, tmp46);
        tmp877 = simd_or(simd_and(basis_bits.bit_2, tmp875), simd_andc(tmp876, basis_bits.bit_2));
        bytetest_9c_b4 = simd_and(tmp15, tmp877);
        tmp878 = simd_and(tmp784, bytetest_9c);
        carryQ.cq[60] = carryout2carry(pablo_blk_Advance(tmp878, carryQ.get_carry_in(60), tmp879));
        tmp880 = simd_and(tmp879, bytetest_9c_b4);
        struct_Lu.cc = simd_or(tmp880, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp770, tmp9);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_9d = simd_and(tmp26, tmp80);
        tmp881 = simd_not(tmp585);
        tmp882 = simd_or(simd_and(basis_bits.bit_2, tmp881), simd_andc(tmp856, basis_bits.bit_2));
        bytetest_96_ae = simd_and(tmp15, tmp882);
        tmp883 = simd_and(tmp784, bytetest_9d);
        carryQ.cq[61] = carryout2carry(pablo_blk_Advance(tmp883, carryQ.get_carry_in(61), tmp884));
        tmp885 = simd_and(tmp884, bytetest_96_ae);
        struct_Lu.cc = simd_or(tmp885, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp770, tmp9);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_9e = simd_and(tmp26, tmp49);
        tmp886 = simd_and(basis_bits.bit_4, tmp140);
        tmp887 = simd_or(basis_bits.bit_3, tmp886);
        tmp888 = simd_not(tmp887);
        tmp889 = simd_or(simd_and(basis_bits.bit_2, tmp888), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
        bytetest_90_a8 = simd_and(tmp15, tmp889);
        tmp890 = simd_and(tmp784, bytetest_9e);
        carryQ.cq[62] = carryout2carry(pablo_blk_Advance(tmp890, carryQ.get_carry_in(62), tmp891));
        tmp892 = simd_and(tmp891, bytetest_90_a8);
        struct_Lu.cc = simd_or(tmp892, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp770, tmp9);
        bytetest_9d = simd_and(tmp26, tmp80);
        bytetest_9f = simd_and(tmp26, tmp82);
        bytetest_8a_8a = simd_and(tmp31, tmp44);
        tmp893 = simd_and(tmp784, bytetest_9f);
        carryQ.cq[63] = carryout2carry(pablo_blk_Advance(tmp893, carryQ.get_carry_in(63), tmp894));
        tmp895 = simd_and(tmp894, bytetest_8a_8a);
        struct_Lu.cc = simd_or(tmp895, struct_Lu.cc);
  }
  CarryArray<64, 0> carryQ;
  };

  struct Pf {
  Pf() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Pf & struct_Pf) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_c2, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, tmp12, bytetest_bb_bb, tmp13, tmp14, tmp15, tmp16;
		BitBlock tmp17, tmp18, tmp19, bytetest_e2, tmp20, tmp21, tmp22, bytetest_80;
		BitBlock tmp23, tmp24, tmp25, tmp26, bytetest_99_99, tmp27, tmp28, tmp29;
		BitBlock tmp30, tmp31, tmp32, tmp33, bytetest_9d_9d, tmp34, tmp35;
		BitBlock bytetest_ba_ba, tmp36, tmp37, bytetest_b8, tmp38, bytetest_83_83;
		BitBlock tmp39, tmp40, tmp41, tmp42, tmp43, bytetest_85_85, tmp44;
		BitBlock bytetest_8a_8a, tmp45, bytetest_8d_8d, tmp46, tmp47, tmp48, tmp49;
		BitBlock bytetest_a1_a1, tmp50;




        struct_Pf.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_andc(tmp5, tmp4);
        bytetest_c2 = simd_and(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp11 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp12 = simd_and(tmp10, tmp11);
        bytetest_bb_bb = simd_and(tmp9, tmp12);
        tmp13 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp13, carryQ.get_carry_in(0), tmp14));
        tmp15 = simd_and(tmp14, bytetest_c2);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp15, carryQ.get_carry_in(1), tmp16));
        tmp17 = simd_and(tmp16, bytetest_bb_bb);
        struct_Pf.cc = simd_or(tmp17, struct_Pf.cc);
        tmp18 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp19 = simd_and(tmp1, tmp18);
        bytetest_e2 = simd_and(tmp19, tmp6);
        tmp20 = simd_andc(tmp7, tmp2);
        tmp21 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp22 = simd_or(tmp4, tmp21);
        bytetest_80 = simd_andc(tmp20, tmp22);
        tmp23 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp24 = simd_and(tmp7, tmp23);
        tmp25 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp26 = simd_and(tmp10, tmp25);
        bytetest_99_99 = simd_and(tmp24, tmp26);
        tmp27 = simd_and(tmp14, bytetest_e2);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp27, carryQ.get_carry_in(2), tmp28));
        tmp29 = simd_and(tmp28, bytetest_80);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp29, carryQ.get_carry_in(3), tmp30));
        tmp31 = simd_and(tmp30, bytetest_99_99);
        struct_Pf.cc = simd_or(tmp31, struct_Pf.cc);
        bytetest_e2 = simd_and(tmp19, tmp6);
        bytetest_80 = simd_andc(tmp20, tmp22);
        tmp32 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp33 = simd_and(tmp32, tmp25);
        bytetest_9d_9d = simd_and(tmp24, tmp33);
        tmp34 = simd_and(tmp30, bytetest_9d_9d);
        struct_Pf.cc = simd_or(tmp34, struct_Pf.cc);
        bytetest_e2 = simd_and(tmp19, tmp6);
        bytetest_80 = simd_andc(tmp20, tmp22);
        tmp35 = simd_and(tmp10, tmp5);
        bytetest_ba_ba = simd_and(tmp9, tmp35);
        tmp36 = simd_and(tmp30, bytetest_ba_ba);
        struct_Pf.cc = simd_or(tmp36, struct_Pf.cc);
        bytetest_e2 = simd_and(tmp19, tmp6);
        tmp37 = simd_andc(tmp10, tmp21);
        bytetest_b8 = simd_and(tmp9, tmp37);
        tmp38 = simd_andc(tmp11, tmp4);
        bytetest_83_83 = simd_and(tmp20, tmp38);
        tmp39 = simd_and(tmp28, bytetest_b8);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp39, carryQ.get_carry_in(4), tmp40));
        tmp41 = simd_and(tmp40, bytetest_83_83);
        struct_Pf.cc = simd_or(tmp41, struct_Pf.cc);
        bytetest_e2 = simd_and(tmp19, tmp6);
        bytetest_b8 = simd_and(tmp9, tmp37);
        tmp42 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp43 = simd_and(tmp42, tmp25);
        bytetest_85_85 = simd_and(tmp20, tmp43);
        tmp44 = simd_and(tmp40, bytetest_85_85);
        struct_Pf.cc = simd_or(tmp44, struct_Pf.cc);
        bytetest_e2 = simd_and(tmp19, tmp6);
        bytetest_b8 = simd_and(tmp9, tmp37);
        bytetest_8a_8a = simd_and(tmp20, tmp35);
        tmp45 = simd_and(tmp40, bytetest_8a_8a);
        struct_Pf.cc = simd_or(tmp45, struct_Pf.cc);
        bytetest_e2 = simd_and(tmp19, tmp6);
        bytetest_b8 = simd_and(tmp9, tmp37);
        bytetest_8d_8d = simd_and(tmp20, tmp33);
        tmp46 = simd_and(tmp40, bytetest_8d_8d);
        struct_Pf.cc = simd_or(tmp46, struct_Pf.cc);
        bytetest_e2 = simd_and(tmp19, tmp6);
        bytetest_b8 = simd_and(tmp9, tmp37);
        bytetest_9d_9d = simd_and(tmp24, tmp33);
        tmp47 = simd_and(tmp40, bytetest_9d_9d);
        struct_Pf.cc = simd_or(tmp47, struct_Pf.cc);
        bytetest_e2 = simd_and(tmp19, tmp6);
        bytetest_b8 = simd_and(tmp9, tmp37);
        tmp48 = simd_and(tmp7, tmp18);
        tmp49 = simd_andc(tmp25, tmp4);
        bytetest_a1_a1 = simd_and(tmp48, tmp49);
        tmp50 = simd_and(tmp40, bytetest_a1_a1);
        struct_Pf.cc = simd_or(tmp50, struct_Pf.cc);
        carryQ.CarryQ_Adjust(5);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Pf & struct_Pf, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_c2, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, tmp12, bytetest_bb_bb, tmp13, tmp14, tmp15, tmp16;
		BitBlock tmp17, tmp18, tmp19, bytetest_e2, tmp20, tmp21, tmp22, bytetest_80;
		BitBlock tmp23, tmp24, tmp25, tmp26, bytetest_99_99, tmp27, tmp28, tmp29;
		BitBlock tmp30, tmp31, tmp32, tmp33, bytetest_9d_9d, tmp34, tmp35;
		BitBlock bytetest_ba_ba, tmp36, tmp37, bytetest_b8, tmp38, bytetest_83_83;
		BitBlock tmp39, tmp40, tmp41, tmp42, tmp43, bytetest_85_85, tmp44;
		BitBlock bytetest_8a_8a, tmp45, bytetest_8d_8d, tmp46, tmp47, tmp48, tmp49;
		BitBlock bytetest_a1_a1, tmp50;




        struct_Pf.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_andc(tmp5, tmp4);
        bytetest_c2 = simd_and(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp11 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp12 = simd_and(tmp10, tmp11);
        bytetest_bb_bb = simd_and(tmp9, tmp12);
        tmp13 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp13, carryQ.get_carry_in(0), tmp14));
        tmp15 = simd_and(tmp14, bytetest_c2);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp15, carryQ.get_carry_in(1), tmp16));
        tmp17 = simd_and(tmp16, bytetest_bb_bb);
        struct_Pf.cc = simd_or(tmp17, struct_Pf.cc);
        tmp18 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp19 = simd_and(tmp1, tmp18);
        bytetest_e2 = simd_and(tmp19, tmp6);
        tmp20 = simd_andc(tmp7, tmp2);
        tmp21 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp22 = simd_or(tmp4, tmp21);
        bytetest_80 = simd_andc(tmp20, tmp22);
        tmp23 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp24 = simd_and(tmp7, tmp23);
        tmp25 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp26 = simd_and(tmp10, tmp25);
        bytetest_99_99 = simd_and(tmp24, tmp26);
        tmp27 = simd_and(tmp14, bytetest_e2);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp27, carryQ.get_carry_in(2), tmp28));
        tmp29 = simd_and(tmp28, bytetest_80);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp29, carryQ.get_carry_in(3), tmp30));
        tmp31 = simd_and(tmp30, bytetest_99_99);
        struct_Pf.cc = simd_or(tmp31, struct_Pf.cc);
        bytetest_e2 = simd_and(tmp19, tmp6);
        bytetest_80 = simd_andc(tmp20, tmp22);
        tmp32 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp33 = simd_and(tmp32, tmp25);
        bytetest_9d_9d = simd_and(tmp24, tmp33);
        tmp34 = simd_and(tmp30, bytetest_9d_9d);
        struct_Pf.cc = simd_or(tmp34, struct_Pf.cc);
        bytetest_e2 = simd_and(tmp19, tmp6);
        bytetest_80 = simd_andc(tmp20, tmp22);
        tmp35 = simd_and(tmp10, tmp5);
        bytetest_ba_ba = simd_and(tmp9, tmp35);
        tmp36 = simd_and(tmp30, bytetest_ba_ba);
        struct_Pf.cc = simd_or(tmp36, struct_Pf.cc);
        bytetest_e2 = simd_and(tmp19, tmp6);
        tmp37 = simd_andc(tmp10, tmp21);
        bytetest_b8 = simd_and(tmp9, tmp37);
        tmp38 = simd_andc(tmp11, tmp4);
        bytetest_83_83 = simd_and(tmp20, tmp38);
        tmp39 = simd_and(tmp28, bytetest_b8);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp39, carryQ.get_carry_in(4), tmp40));
        tmp41 = simd_and(tmp40, bytetest_83_83);
        struct_Pf.cc = simd_or(tmp41, struct_Pf.cc);
        bytetest_e2 = simd_and(tmp19, tmp6);
        bytetest_b8 = simd_and(tmp9, tmp37);
        tmp42 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp43 = simd_and(tmp42, tmp25);
        bytetest_85_85 = simd_and(tmp20, tmp43);
        tmp44 = simd_and(tmp40, bytetest_85_85);
        struct_Pf.cc = simd_or(tmp44, struct_Pf.cc);
        bytetest_e2 = simd_and(tmp19, tmp6);
        bytetest_b8 = simd_and(tmp9, tmp37);
        bytetest_8a_8a = simd_and(tmp20, tmp35);
        tmp45 = simd_and(tmp40, bytetest_8a_8a);
        struct_Pf.cc = simd_or(tmp45, struct_Pf.cc);
        bytetest_e2 = simd_and(tmp19, tmp6);
        bytetest_b8 = simd_and(tmp9, tmp37);
        bytetest_8d_8d = simd_and(tmp20, tmp33);
        tmp46 = simd_and(tmp40, bytetest_8d_8d);
        struct_Pf.cc = simd_or(tmp46, struct_Pf.cc);
        bytetest_e2 = simd_and(tmp19, tmp6);
        bytetest_b8 = simd_and(tmp9, tmp37);
        bytetest_9d_9d = simd_and(tmp24, tmp33);
        tmp47 = simd_and(tmp40, bytetest_9d_9d);
        struct_Pf.cc = simd_or(tmp47, struct_Pf.cc);
        bytetest_e2 = simd_and(tmp19, tmp6);
        bytetest_b8 = simd_and(tmp9, tmp37);
        tmp48 = simd_and(tmp7, tmp18);
        tmp49 = simd_andc(tmp25, tmp4);
        bytetest_a1_a1 = simd_and(tmp48, tmp49);
        tmp50 = simd_and(tmp40, bytetest_a1_a1);
        struct_Pf.cc = simd_or(tmp50, struct_Pf.cc);
  }
  CarryArray<5, 0> carryQ;
  };

  struct Pd {
  Pd() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Pd & struct_Pd) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_2d_2d, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, tmp12, bytetest_d6, tmp13, tmp14, tmp15, tmp16, tmp17;
		BitBlock bytetest_8a_8a, tmp18, tmp19, tmp20, tmp21, tmp22, tmp23, tmp24;
		BitBlock tmp25, bytetest_be_be, tmp26, tmp27, tmp28, tmp29, bytetest_e1, tmp30;
		BitBlock tmp31, tmp32, bytetest_90, bytetest_80_80, tmp33, tmp34, tmp35, tmp36;
		BitBlock tmp37, tmp38, bytetest_a0, bytetest_86_86, tmp39, tmp40, tmp41, tmp42;
		BitBlock bytetest_e2, bytetest_80, tmp43, tmp44, bytetest_90_95, tmp45, tmp46;
		BitBlock tmp47, tmp48, tmp49, tmp50, bytetest_b8, tmp51, tmp52, bytetest_97_97;
		BitBlock tmp53, tmp54, tmp55, bytetest_9a_9a, tmp56, tmp57, bytetest_ba_bb;
		BitBlock tmp58, tmp59, bytetest_e3, tmp60, bytetest_9c_9c, tmp61, tmp62, tmp63;
		BitBlock tmp64, tmp65, bytetest_b0_b0, tmp66, bytetest_82, bytetest_a0_a0;
		BitBlock tmp67, tmp68, tmp69, tmp70, bytetest_ef, tmp71, tmp72, tmp73;
		BitBlock bytetest_b1_b2, tmp74, tmp75, tmp76, tmp77, tmp78, tmp79, bytetest_b9;
		BitBlock bytetest_98_98, tmp80, tmp81, tmp82, bytetest_a3_a3, tmp83;
		BitBlock bytetest_bc, bytetest_8d_8d, tmp84, tmp85, tmp86;




        struct_Pd.cc = simd<1>::constant<0>();
        tmp1 = simd_or(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp2, tmp1);
        tmp4 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp6 = simd_and(tmp4, tmp5);
        bytetest_2d_2d = simd_and(tmp3, tmp6);
        struct_Pd.cc = simd_or(bytetest_2d_2d, struct_Pd.cc);
        tmp7 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp11 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp12 = simd_and(tmp10, tmp11);
        bytetest_d6 = simd_and(tmp9, tmp12);
        tmp13 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp14 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp15 = simd_andc(tmp13, tmp14);
        tmp16 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp17 = simd_and(tmp16, tmp11);
        bytetest_8a_8a = simd_and(tmp15, tmp17);
        tmp18 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp18, carryQ.get_carry_in(0), tmp19));
        tmp20 = simd_and(tmp19, bytetest_d6);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp20, carryQ.get_carry_in(1), tmp21));
        tmp22 = simd_and(tmp21, bytetest_8a_8a);
        struct_Pd.cc = simd_or(tmp22, struct_Pd.cc);
        bytetest_d6 = simd_and(tmp9, tmp12);
        tmp23 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp24 = simd_and(tmp13, tmp23);
        tmp25 = simd_and(tmp4, tmp11);
        bytetest_be_be = simd_and(tmp24, tmp25);
        tmp26 = simd_and(tmp21, bytetest_be_be);
        struct_Pd.cc = simd_or(tmp26, struct_Pd.cc);
        tmp27 = simd_and(tmp7, tmp2);
        tmp28 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp29 = simd_andc(tmp5, tmp28);
        bytetest_e1 = simd_and(tmp27, tmp29);
        tmp30 = simd_and(tmp13, tmp8);
        tmp31 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp32 = simd_or(tmp28, tmp31);
        bytetest_90 = simd_andc(tmp30, tmp32);
        bytetest_80_80 = simd_andc(tmp15, tmp32);
        tmp33 = simd_and(tmp19, bytetest_e1);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp33, carryQ.get_carry_in(2), tmp34));
        tmp35 = simd_and(tmp34, bytetest_90);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp35, carryQ.get_carry_in(3), tmp36));
        tmp37 = simd_and(tmp36, bytetest_80_80);
        struct_Pd.cc = simd_or(tmp37, struct_Pd.cc);
        bytetest_e1 = simd_and(tmp27, tmp29);
        tmp38 = simd_and(tmp13, tmp2);
        bytetest_a0 = simd_andc(tmp38, tmp32);
        bytetest_86_86 = simd_and(tmp15, tmp12);
        tmp39 = simd_and(tmp34, bytetest_a0);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp39, carryQ.get_carry_in(4), tmp40));
        tmp41 = simd_and(tmp40, bytetest_86_86);
        struct_Pd.cc = simd_or(tmp41, struct_Pd.cc);
        tmp42 = simd_andc(tmp11, tmp28);
        bytetest_e2 = simd_and(tmp27, tmp42);
        bytetest_80 = simd_andc(tmp15, tmp32);
        tmp43 = simd_andc(tmp30, basis_bits.bit_4);
        tmp44 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        bytetest_90_95 = simd_andc(tmp43, tmp44);
        tmp45 = simd_and(tmp19, bytetest_e2);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp45, carryQ.get_carry_in(5), tmp46));
        tmp47 = simd_and(tmp46, bytetest_80);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp47, carryQ.get_carry_in(6), tmp48));
        tmp49 = simd_and(tmp48, bytetest_90_95);
        struct_Pd.cc = simd_or(tmp49, struct_Pd.cc);
        bytetest_e2 = simd_and(tmp27, tmp42);
        tmp50 = simd_andc(tmp16, tmp31);
        bytetest_b8 = simd_and(tmp24, tmp50);
        tmp51 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp52 = simd_and(tmp10, tmp51);
        bytetest_97_97 = simd_and(tmp30, tmp52);
        tmp53 = simd_and(tmp46, bytetest_b8);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp53, carryQ.get_carry_in(7), tmp54));
        tmp55 = simd_and(tmp54, bytetest_97_97);
        struct_Pd.cc = simd_or(tmp55, struct_Pd.cc);
        bytetest_e2 = simd_and(tmp27, tmp42);
        bytetest_b8 = simd_and(tmp24, tmp50);
        bytetest_9a_9a = simd_and(tmp30, tmp17);
        tmp56 = simd_and(tmp54, bytetest_9a_9a);
        struct_Pd.cc = simd_or(tmp56, struct_Pd.cc);
        bytetest_e2 = simd_and(tmp27, tmp42);
        bytetest_b8 = simd_and(tmp24, tmp50);
        tmp57 = simd_and(tmp16, basis_bits.bit_6);
        bytetest_ba_bb = simd_and(tmp24, tmp57);
        tmp58 = simd_and(tmp54, bytetest_ba_bb);
        struct_Pd.cc = simd_or(tmp58, struct_Pd.cc);
        tmp59 = simd_andc(tmp51, tmp28);
        bytetest_e3 = simd_and(tmp27, tmp59);
        bytetest_80 = simd_andc(tmp15, tmp32);
        tmp60 = simd_andc(tmp4, tmp31);
        bytetest_9c_9c = simd_and(tmp30, tmp60);
        tmp61 = simd_and(tmp19, bytetest_e3);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(tmp61, carryQ.get_carry_in(8), tmp62));
        tmp63 = simd_and(tmp62, bytetest_80);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(tmp63, carryQ.get_carry_in(9), tmp64));
        tmp65 = simd_and(tmp64, bytetest_9c_9c);
        struct_Pd.cc = simd_or(tmp65, struct_Pd.cc);
        bytetest_e3 = simd_and(tmp27, tmp59);
        bytetest_80 = simd_andc(tmp15, tmp32);
        bytetest_b0_b0 = simd_andc(tmp24, tmp32);
        tmp66 = simd_and(tmp64, bytetest_b0_b0);
        struct_Pd.cc = simd_or(tmp66, struct_Pd.cc);
        bytetest_e3 = simd_and(tmp27, tmp59);
        bytetest_82 = simd_and(tmp15, tmp42);
        bytetest_a0_a0 = simd_andc(tmp38, tmp32);
        tmp67 = simd_and(tmp62, bytetest_82);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(tmp67, carryQ.get_carry_in(10), tmp68));
        tmp69 = simd_and(tmp68, bytetest_a0_a0);
        struct_Pd.cc = simd_or(tmp69, struct_Pd.cc);
        tmp70 = simd_and(tmp4, tmp51);
        bytetest_ef = simd_and(tmp27, tmp70);
        bytetest_b8 = simd_and(tmp24, tmp50);
        tmp71 = simd_andc(tmp24, tmp28);
        tmp72 = simd_not(basis_bits.bit_7);
        tmp73 = simd_or(simd_and(basis_bits.bit_6, tmp72), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
        bytetest_b1_b2 = simd_and(tmp71, tmp73);
        tmp74 = simd_and(tmp19, bytetest_ef);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(tmp74, carryQ.get_carry_in(11), tmp75));
        tmp76 = simd_and(tmp75, bytetest_b8);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(tmp76, carryQ.get_carry_in(12), tmp77));
        tmp78 = simd_and(tmp77, bytetest_b1_b2);
        struct_Pd.cc = simd_or(tmp78, struct_Pd.cc);
        bytetest_ef = simd_and(tmp27, tmp70);
        tmp79 = simd_and(tmp16, tmp5);
        bytetest_b9 = simd_and(tmp24, tmp79);
        bytetest_98_98 = simd_and(tmp30, tmp50);
        tmp80 = simd_and(tmp75, bytetest_b9);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(tmp80, carryQ.get_carry_in(13), tmp81));
        tmp82 = simd_and(tmp81, bytetest_98_98);
        struct_Pd.cc = simd_or(tmp82, struct_Pd.cc);
        bytetest_ef = simd_and(tmp27, tmp70);
        bytetest_b9 = simd_and(tmp24, tmp79);
        bytetest_a3_a3 = simd_and(tmp38, tmp59);
        tmp83 = simd_and(tmp81, bytetest_a3_a3);
        struct_Pd.cc = simd_or(tmp83, struct_Pd.cc);
        bytetest_ef = simd_and(tmp27, tmp70);
        bytetest_bc = simd_and(tmp24, tmp60);
        bytetest_8d_8d = simd_and(tmp15, tmp6);
        tmp84 = simd_and(tmp75, bytetest_bc);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(tmp84, carryQ.get_carry_in(14), tmp85));
        tmp86 = simd_and(tmp85, bytetest_8d_8d);
        struct_Pd.cc = simd_or(tmp86, struct_Pd.cc);
        carryQ.CarryQ_Adjust(15);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Pd & struct_Pd, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_2d_2d, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, tmp12, bytetest_d6, tmp13, tmp14, tmp15, tmp16, tmp17;
		BitBlock bytetest_8a_8a, tmp18, tmp19, tmp20, tmp21, tmp22, tmp23, tmp24;
		BitBlock tmp25, bytetest_be_be, tmp26, tmp27, tmp28, tmp29, bytetest_e1, tmp30;
		BitBlock tmp31, tmp32, bytetest_90, bytetest_80_80, tmp33, tmp34, tmp35, tmp36;
		BitBlock tmp37, tmp38, bytetest_a0, bytetest_86_86, tmp39, tmp40, tmp41, tmp42;
		BitBlock bytetest_e2, bytetest_80, tmp43, tmp44, bytetest_90_95, tmp45, tmp46;
		BitBlock tmp47, tmp48, tmp49, tmp50, bytetest_b8, tmp51, tmp52, bytetest_97_97;
		BitBlock tmp53, tmp54, tmp55, bytetest_9a_9a, tmp56, tmp57, bytetest_ba_bb;
		BitBlock tmp58, tmp59, bytetest_e3, tmp60, bytetest_9c_9c, tmp61, tmp62, tmp63;
		BitBlock tmp64, tmp65, bytetest_b0_b0, tmp66, bytetest_82, bytetest_a0_a0;
		BitBlock tmp67, tmp68, tmp69, tmp70, bytetest_ef, tmp71, tmp72, tmp73;
		BitBlock bytetest_b1_b2, tmp74, tmp75, tmp76, tmp77, tmp78, tmp79, bytetest_b9;
		BitBlock bytetest_98_98, tmp80, tmp81, tmp82, bytetest_a3_a3, tmp83;
		BitBlock bytetest_bc, bytetest_8d_8d, tmp84, tmp85, tmp86;




        struct_Pd.cc = simd<1>::constant<0>();
        tmp1 = simd_or(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp2, tmp1);
        tmp4 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp6 = simd_and(tmp4, tmp5);
        bytetest_2d_2d = simd_and(tmp3, tmp6);
        struct_Pd.cc = simd_or(bytetest_2d_2d, struct_Pd.cc);
        tmp7 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp11 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp12 = simd_and(tmp10, tmp11);
        bytetest_d6 = simd_and(tmp9, tmp12);
        tmp13 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp14 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp15 = simd_andc(tmp13, tmp14);
        tmp16 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp17 = simd_and(tmp16, tmp11);
        bytetest_8a_8a = simd_and(tmp15, tmp17);
        tmp18 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp18, carryQ.get_carry_in(0), tmp19));
        tmp20 = simd_and(tmp19, bytetest_d6);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp20, carryQ.get_carry_in(1), tmp21));
        tmp22 = simd_and(tmp21, bytetest_8a_8a);
        struct_Pd.cc = simd_or(tmp22, struct_Pd.cc);
        bytetest_d6 = simd_and(tmp9, tmp12);
        tmp23 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp24 = simd_and(tmp13, tmp23);
        tmp25 = simd_and(tmp4, tmp11);
        bytetest_be_be = simd_and(tmp24, tmp25);
        tmp26 = simd_and(tmp21, bytetest_be_be);
        struct_Pd.cc = simd_or(tmp26, struct_Pd.cc);
        tmp27 = simd_and(tmp7, tmp2);
        tmp28 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp29 = simd_andc(tmp5, tmp28);
        bytetest_e1 = simd_and(tmp27, tmp29);
        tmp30 = simd_and(tmp13, tmp8);
        tmp31 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp32 = simd_or(tmp28, tmp31);
        bytetest_90 = simd_andc(tmp30, tmp32);
        bytetest_80_80 = simd_andc(tmp15, tmp32);
        tmp33 = simd_and(tmp19, bytetest_e1);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp33, carryQ.get_carry_in(2), tmp34));
        tmp35 = simd_and(tmp34, bytetest_90);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp35, carryQ.get_carry_in(3), tmp36));
        tmp37 = simd_and(tmp36, bytetest_80_80);
        struct_Pd.cc = simd_or(tmp37, struct_Pd.cc);
        bytetest_e1 = simd_and(tmp27, tmp29);
        tmp38 = simd_and(tmp13, tmp2);
        bytetest_a0 = simd_andc(tmp38, tmp32);
        bytetest_86_86 = simd_and(tmp15, tmp12);
        tmp39 = simd_and(tmp34, bytetest_a0);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp39, carryQ.get_carry_in(4), tmp40));
        tmp41 = simd_and(tmp40, bytetest_86_86);
        struct_Pd.cc = simd_or(tmp41, struct_Pd.cc);
        tmp42 = simd_andc(tmp11, tmp28);
        bytetest_e2 = simd_and(tmp27, tmp42);
        bytetest_80 = simd_andc(tmp15, tmp32);
        tmp43 = simd_andc(tmp30, basis_bits.bit_4);
        tmp44 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        bytetest_90_95 = simd_andc(tmp43, tmp44);
        tmp45 = simd_and(tmp19, bytetest_e2);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp45, carryQ.get_carry_in(5), tmp46));
        tmp47 = simd_and(tmp46, bytetest_80);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp47, carryQ.get_carry_in(6), tmp48));
        tmp49 = simd_and(tmp48, bytetest_90_95);
        struct_Pd.cc = simd_or(tmp49, struct_Pd.cc);
        bytetest_e2 = simd_and(tmp27, tmp42);
        tmp50 = simd_andc(tmp16, tmp31);
        bytetest_b8 = simd_and(tmp24, tmp50);
        tmp51 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp52 = simd_and(tmp10, tmp51);
        bytetest_97_97 = simd_and(tmp30, tmp52);
        tmp53 = simd_and(tmp46, bytetest_b8);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp53, carryQ.get_carry_in(7), tmp54));
        tmp55 = simd_and(tmp54, bytetest_97_97);
        struct_Pd.cc = simd_or(tmp55, struct_Pd.cc);
        bytetest_e2 = simd_and(tmp27, tmp42);
        bytetest_b8 = simd_and(tmp24, tmp50);
        bytetest_9a_9a = simd_and(tmp30, tmp17);
        tmp56 = simd_and(tmp54, bytetest_9a_9a);
        struct_Pd.cc = simd_or(tmp56, struct_Pd.cc);
        bytetest_e2 = simd_and(tmp27, tmp42);
        bytetest_b8 = simd_and(tmp24, tmp50);
        tmp57 = simd_and(tmp16, basis_bits.bit_6);
        bytetest_ba_bb = simd_and(tmp24, tmp57);
        tmp58 = simd_and(tmp54, bytetest_ba_bb);
        struct_Pd.cc = simd_or(tmp58, struct_Pd.cc);
        tmp59 = simd_andc(tmp51, tmp28);
        bytetest_e3 = simd_and(tmp27, tmp59);
        bytetest_80 = simd_andc(tmp15, tmp32);
        tmp60 = simd_andc(tmp4, tmp31);
        bytetest_9c_9c = simd_and(tmp30, tmp60);
        tmp61 = simd_and(tmp19, bytetest_e3);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(tmp61, carryQ.get_carry_in(8), tmp62));
        tmp63 = simd_and(tmp62, bytetest_80);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(tmp63, carryQ.get_carry_in(9), tmp64));
        tmp65 = simd_and(tmp64, bytetest_9c_9c);
        struct_Pd.cc = simd_or(tmp65, struct_Pd.cc);
        bytetest_e3 = simd_and(tmp27, tmp59);
        bytetest_80 = simd_andc(tmp15, tmp32);
        bytetest_b0_b0 = simd_andc(tmp24, tmp32);
        tmp66 = simd_and(tmp64, bytetest_b0_b0);
        struct_Pd.cc = simd_or(tmp66, struct_Pd.cc);
        bytetest_e3 = simd_and(tmp27, tmp59);
        bytetest_82 = simd_and(tmp15, tmp42);
        bytetest_a0_a0 = simd_andc(tmp38, tmp32);
        tmp67 = simd_and(tmp62, bytetest_82);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(tmp67, carryQ.get_carry_in(10), tmp68));
        tmp69 = simd_and(tmp68, bytetest_a0_a0);
        struct_Pd.cc = simd_or(tmp69, struct_Pd.cc);
        tmp70 = simd_and(tmp4, tmp51);
        bytetest_ef = simd_and(tmp27, tmp70);
        bytetest_b8 = simd_and(tmp24, tmp50);
        tmp71 = simd_andc(tmp24, tmp28);
        tmp72 = simd_not(basis_bits.bit_7);
        tmp73 = simd_or(simd_and(basis_bits.bit_6, tmp72), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
        bytetest_b1_b2 = simd_and(tmp71, tmp73);
        tmp74 = simd_and(tmp19, bytetest_ef);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(tmp74, carryQ.get_carry_in(11), tmp75));
        tmp76 = simd_and(tmp75, bytetest_b8);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(tmp76, carryQ.get_carry_in(12), tmp77));
        tmp78 = simd_and(tmp77, bytetest_b1_b2);
        struct_Pd.cc = simd_or(tmp78, struct_Pd.cc);
        bytetest_ef = simd_and(tmp27, tmp70);
        tmp79 = simd_and(tmp16, tmp5);
        bytetest_b9 = simd_and(tmp24, tmp79);
        bytetest_98_98 = simd_and(tmp30, tmp50);
        tmp80 = simd_and(tmp75, bytetest_b9);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(tmp80, carryQ.get_carry_in(13), tmp81));
        tmp82 = simd_and(tmp81, bytetest_98_98);
        struct_Pd.cc = simd_or(tmp82, struct_Pd.cc);
        bytetest_ef = simd_and(tmp27, tmp70);
        bytetest_b9 = simd_and(tmp24, tmp79);
        bytetest_a3_a3 = simd_and(tmp38, tmp59);
        tmp83 = simd_and(tmp81, bytetest_a3_a3);
        struct_Pd.cc = simd_or(tmp83, struct_Pd.cc);
        bytetest_ef = simd_and(tmp27, tmp70);
        bytetest_bc = simd_and(tmp24, tmp60);
        bytetest_8d_8d = simd_and(tmp15, tmp6);
        tmp84 = simd_and(tmp75, bytetest_bc);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(tmp84, carryQ.get_carry_in(14), tmp85));
        tmp86 = simd_and(tmp85, bytetest_8d_8d);
        struct_Pd.cc = simd_or(tmp86, struct_Pd.cc);
  }
  CarryArray<15, 0> carryQ;
  };

  struct Pe {
  Pe() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Pe & struct_Pe) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_29_29, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, bytetest_5d_5d, tmp12, tmp13, bytetest_7d_7d, tmp14;
		BitBlock tmp15, tmp16, tmp17, tmp18, bytetest_e0, tmp19, tmp20, tmp21;
		BitBlock bytetest_bc, tmp22, tmp23, bytetest_bb_bb, tmp24, tmp25, tmp26, tmp27;
		BitBlock tmp28, tmp29, tmp30, bytetest_bd_bd, tmp31, tmp32, bytetest_e1, tmp33;
		BitBlock tmp34, tmp35, bytetest_9a, bytetest_9c_9c, tmp36, tmp37, tmp38, tmp39;
		BitBlock tmp40, tmp41, bytetest_e2, tmp42, tmp43, bytetest_81, tmp44, tmp45;
		BitBlock bytetest_86_86, tmp46, tmp47, tmp48, tmp49, tmp50, tmp51;
		BitBlock bytetest_be_be, tmp52, bytetest_82, bytetest_8e_8e, tmp53, tmp54;
		BitBlock tmp55, bytetest_8c, bytetest_89_89, tmp56, tmp57, tmp58;
		BitBlock bytetest_8b_8b, tmp59, tmp60, bytetest_aa_aa, tmp61, bytetest_9d;
		BitBlock bytetest_a9_a9, tmp62, tmp63, tmp64, bytetest_ab_ab, tmp65;
		BitBlock bytetest_ad_ad, tmp66, tmp67, bytetest_af_af, tmp68, bytetest_b1_b1;
		BitBlock tmp69, tmp70, bytetest_b3_b3, tmp71, tmp72, bytetest_b5_b5, tmp73;
		BitBlock bytetest_9f, tmp74, tmp75, tmp76, tmp77, bytetest_a7_a7, tmp78, tmp79;
		BitBlock tmp80, tmp81, tmp82, bytetest_a6, tmp83, bytetest_84_84, tmp84, tmp85;
		BitBlock tmp86, tmp87, tmp88, bytetest_88_88, tmp89, bytetest_8a_8a, tmp90;
		BitBlock bytetest_8c_8c, tmp91, tmp92, bytetest_90_90, tmp93, bytetest_92_92;
		BitBlock tmp94, bytetest_94_94, tmp95, bytetest_96_96, tmp96, bytetest_98_98;
		BitBlock tmp97, bytetest_a7, bytetest_99_99, tmp98, tmp99, tmp100;
		BitBlock bytetest_9b_9b, tmp101, tmp102, bytetest_b8, bytetest_a3_a3, tmp103;
		BitBlock tmp104, tmp105, bytetest_a5_a5, tmp106, tmp107, tmp108, bytetest_e3;
		BitBlock bytetest_80, tmp109, tmp110, tmp111, tmp112, tmp113, tmp114;
		BitBlock bytetest_8d_8d, tmp115, bytetest_8f_8f, tmp116, bytetest_91_91;
		BitBlock tmp117, bytetest_95_95, tmp118, bytetest_97_97, tmp119, tmp120;
		BitBlock tmp121, tmp122, bytetest_9e_9f, tmp123, bytetest_ef, bytetest_b4;
		BitBlock bytetest_bf_bf, tmp124, tmp125, tmp126, tmp127, tmp128, tmp129;
		BitBlock tmp130, tmp131, bytetest_b6_b6, tmp132, bytetest_b8_b8, tmp133;
		BitBlock bytetest_ba_ba, tmp134, bytetest_bc_bc, tmp135, tmp136, bytetest_b9;
		BitBlock bytetest_80_80, tmp137, tmp138, tmp139, bytetest_82_82, tmp140;
		BitBlock tmp141, tmp142, bytetest_9a_9a, tmp143, tmp144, bytetest_9e_9e;
		BitBlock tmp145, tmp146, tmp147, tmp148, tmp149, bytetest_bd, bytetest_9d_9d;
		BitBlock tmp150, tmp151, tmp152, bytetest_a0_a0, tmp153, tmp154;




        struct_Pe.cc = simd<1>::constant<0>();
        tmp1 = simd_or(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp2, tmp1);
        tmp4 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp6 = simd_and(tmp4, tmp5);
        bytetest_29_29 = simd_and(tmp3, tmp6);
        struct_Pe.cc = simd_or(bytetest_29_29, struct_Pe.cc);
        tmp7 = simd_andc(basis_bits.bit_1, basis_bits.bit_0);
        tmp8 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp11 = simd_and(tmp10, tmp5);
        bytetest_5d_5d = simd_and(tmp9, tmp11);
        struct_Pe.cc = simd_or(bytetest_5d_5d, struct_Pe.cc);
        tmp12 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp13 = simd_and(tmp7, tmp12);
        bytetest_7d_7d = simd_and(tmp13, tmp11);
        struct_Pe.cc = simd_or(bytetest_7d_7d, struct_Pe.cc);
        tmp14 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp15 = simd_and(tmp14, tmp2);
        tmp16 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp17 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp18 = simd_or(tmp16, tmp17);
        bytetest_e0 = simd_andc(tmp15, tmp18);
        tmp19 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp20 = simd_and(tmp19, tmp12);
        tmp21 = simd_andc(tmp10, tmp17);
        bytetest_bc = simd_and(tmp20, tmp21);
        tmp22 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp23 = simd_and(tmp4, tmp22);
        bytetest_bb_bb = simd_and(tmp20, tmp23);
        tmp24 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp24, carryQ.get_carry_in(0), tmp25));
        tmp26 = simd_and(tmp25, bytetest_e0);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp26, carryQ.get_carry_in(1), tmp27));
        tmp28 = simd_and(tmp27, bytetest_bc);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp28, carryQ.get_carry_in(2), tmp29));
        tmp30 = simd_and(tmp29, bytetest_bb_bb);
        struct_Pe.cc = simd_or(tmp30, struct_Pe.cc);
        bytetest_e0 = simd_andc(tmp15, tmp18);
        bytetest_bc = simd_and(tmp20, tmp21);
        bytetest_bd_bd = simd_and(tmp20, tmp11);
        tmp31 = simd_and(tmp29, bytetest_bd_bd);
        struct_Pe.cc = simd_or(tmp31, struct_Pe.cc);
        tmp32 = simd_andc(tmp5, tmp16);
        bytetest_e1 = simd_and(tmp15, tmp32);
        tmp33 = simd_and(tmp19, tmp8);
        tmp34 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp35 = simd_and(tmp4, tmp34);
        bytetest_9a = simd_and(tmp33, tmp35);
        bytetest_9c_9c = simd_and(tmp33, tmp21);
        tmp36 = simd_and(tmp25, bytetest_e1);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp36, carryQ.get_carry_in(3), tmp37));
        tmp38 = simd_and(tmp37, bytetest_9a);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp38, carryQ.get_carry_in(4), tmp39));
        tmp40 = simd_and(tmp39, bytetest_9c_9c);
        struct_Pe.cc = simd_or(tmp40, struct_Pe.cc);
        tmp41 = simd_andc(tmp34, tmp16);
        bytetest_e2 = simd_and(tmp15, tmp41);
        tmp42 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp43 = simd_andc(tmp19, tmp42);
        bytetest_81 = simd_and(tmp43, tmp32);
        tmp44 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp45 = simd_and(tmp44, tmp34);
        bytetest_86_86 = simd_and(tmp43, tmp45);
        tmp46 = simd_and(tmp25, bytetest_e2);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp46, carryQ.get_carry_in(5), tmp47));
        tmp48 = simd_and(tmp47, bytetest_81);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp48, carryQ.get_carry_in(6), tmp49));
        tmp50 = simd_and(tmp49, bytetest_86_86);
        struct_Pe.cc = simd_or(tmp50, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_81 = simd_and(tmp43, tmp32);
        tmp51 = simd_and(tmp10, tmp34);
        bytetest_be_be = simd_and(tmp20, tmp51);
        tmp52 = simd_and(tmp49, bytetest_be_be);
        struct_Pe.cc = simd_or(tmp52, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_82 = simd_and(tmp43, tmp41);
        bytetest_8e_8e = simd_and(tmp43, tmp51);
        tmp53 = simd_and(tmp47, bytetest_82);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp53, carryQ.get_carry_in(7), tmp54));
        tmp55 = simd_and(tmp54, bytetest_8e_8e);
        struct_Pe.cc = simd_or(tmp55, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_8c = simd_and(tmp43, tmp21);
        bytetest_89_89 = simd_and(tmp43, tmp6);
        tmp56 = simd_and(tmp47, bytetest_8c);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(tmp56, carryQ.get_carry_in(8), tmp57));
        tmp58 = simd_and(tmp57, bytetest_89_89);
        struct_Pe.cc = simd_or(tmp58, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_8c = simd_and(tmp43, tmp21);
        bytetest_8b_8b = simd_and(tmp43, tmp23);
        tmp59 = simd_and(tmp57, bytetest_8b_8b);
        struct_Pe.cc = simd_or(tmp59, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_8c = simd_and(tmp43, tmp21);
        tmp60 = simd_and(tmp19, tmp2);
        bytetest_aa_aa = simd_and(tmp60, tmp35);
        tmp61 = simd_and(tmp57, bytetest_aa_aa);
        struct_Pe.cc = simd_or(tmp61, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_9d = simd_and(tmp33, tmp11);
        bytetest_a9_a9 = simd_and(tmp60, tmp6);
        tmp62 = simd_and(tmp47, bytetest_9d);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(tmp62, carryQ.get_carry_in(9), tmp63));
        tmp64 = simd_and(tmp63, bytetest_a9_a9);
        struct_Pe.cc = simd_or(tmp64, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_9d = simd_and(tmp33, tmp11);
        bytetest_ab_ab = simd_and(tmp60, tmp23);
        tmp65 = simd_and(tmp63, bytetest_ab_ab);
        struct_Pe.cc = simd_or(tmp65, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_9d = simd_and(tmp33, tmp11);
        bytetest_ad_ad = simd_and(tmp60, tmp11);
        tmp66 = simd_and(tmp63, bytetest_ad_ad);
        struct_Pe.cc = simd_or(tmp66, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_9d = simd_and(tmp33, tmp11);
        tmp67 = simd_and(tmp10, tmp22);
        bytetest_af_af = simd_and(tmp60, tmp67);
        tmp68 = simd_and(tmp63, bytetest_af_af);
        struct_Pe.cc = simd_or(tmp68, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_9d = simd_and(tmp33, tmp11);
        bytetest_b1_b1 = simd_and(tmp20, tmp32);
        tmp69 = simd_and(tmp63, bytetest_b1_b1);
        struct_Pe.cc = simd_or(tmp69, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_9d = simd_and(tmp33, tmp11);
        tmp70 = simd_andc(tmp22, tmp16);
        bytetest_b3_b3 = simd_and(tmp20, tmp70);
        tmp71 = simd_and(tmp63, bytetest_b3_b3);
        struct_Pe.cc = simd_or(tmp71, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_9d = simd_and(tmp33, tmp11);
        tmp72 = simd_and(tmp44, tmp5);
        bytetest_b5_b5 = simd_and(tmp20, tmp72);
        tmp73 = simd_and(tmp63, bytetest_b5_b5);
        struct_Pe.cc = simd_or(tmp73, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_9f = simd_and(tmp33, tmp67);
        bytetest_86_86 = simd_and(tmp43, tmp45);
        tmp74 = simd_and(tmp47, bytetest_9f);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(tmp74, carryQ.get_carry_in(10), tmp75));
        tmp76 = simd_and(tmp75, bytetest_86_86);
        struct_Pe.cc = simd_or(tmp76, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_9f = simd_and(tmp33, tmp67);
        tmp77 = simd_and(tmp44, tmp22);
        bytetest_a7_a7 = simd_and(tmp60, tmp77);
        tmp78 = simd_and(tmp75, bytetest_a7_a7);
        struct_Pe.cc = simd_or(tmp78, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_9f = simd_and(tmp33, tmp67);
        bytetest_a9_a9 = simd_and(tmp60, tmp6);
        tmp79 = simd_and(tmp75, bytetest_a9_a9);
        struct_Pe.cc = simd_or(tmp79, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_9f = simd_and(tmp33, tmp67);
        bytetest_ab_ab = simd_and(tmp60, tmp23);
        tmp80 = simd_and(tmp75, bytetest_ab_ab);
        struct_Pe.cc = simd_or(tmp80, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_9f = simd_and(tmp33, tmp67);
        bytetest_ad_ad = simd_and(tmp60, tmp11);
        tmp81 = simd_and(tmp75, bytetest_ad_ad);
        struct_Pe.cc = simd_or(tmp81, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_9f = simd_and(tmp33, tmp67);
        bytetest_af_af = simd_and(tmp60, tmp67);
        tmp82 = simd_and(tmp75, bytetest_af_af);
        struct_Pe.cc = simd_or(tmp82, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_a6 = simd_and(tmp60, tmp45);
        tmp83 = simd_andc(tmp44, tmp17);
        bytetest_84_84 = simd_and(tmp43, tmp83);
        tmp84 = simd_and(tmp47, bytetest_a6);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(tmp84, carryQ.get_carry_in(11), tmp85));
        tmp86 = simd_and(tmp85, bytetest_84_84);
        struct_Pe.cc = simd_or(tmp86, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_a6 = simd_and(tmp60, tmp45);
        bytetest_86_86 = simd_and(tmp43, tmp45);
        tmp87 = simd_and(tmp85, bytetest_86_86);
        struct_Pe.cc = simd_or(tmp87, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_a6 = simd_and(tmp60, tmp45);
        tmp88 = simd_andc(tmp4, tmp17);
        bytetest_88_88 = simd_and(tmp43, tmp88);
        tmp89 = simd_and(tmp85, bytetest_88_88);
        struct_Pe.cc = simd_or(tmp89, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_a6 = simd_and(tmp60, tmp45);
        bytetest_8a_8a = simd_and(tmp43, tmp35);
        tmp90 = simd_and(tmp85, bytetest_8a_8a);
        struct_Pe.cc = simd_or(tmp90, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_a6 = simd_and(tmp60, tmp45);
        bytetest_8c_8c = simd_and(tmp43, tmp21);
        tmp91 = simd_and(tmp85, bytetest_8c_8c);
        struct_Pe.cc = simd_or(tmp91, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_a6 = simd_and(tmp60, tmp45);
        bytetest_8e_8e = simd_and(tmp43, tmp51);
        tmp92 = simd_and(tmp85, bytetest_8e_8e);
        struct_Pe.cc = simd_or(tmp92, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_a6 = simd_and(tmp60, tmp45);
        bytetest_90_90 = simd_andc(tmp33, tmp18);
        tmp93 = simd_and(tmp85, bytetest_90_90);
        struct_Pe.cc = simd_or(tmp93, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_a6 = simd_and(tmp60, tmp45);
        bytetest_92_92 = simd_and(tmp33, tmp41);
        tmp94 = simd_and(tmp85, bytetest_92_92);
        struct_Pe.cc = simd_or(tmp94, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_a6 = simd_and(tmp60, tmp45);
        bytetest_94_94 = simd_and(tmp33, tmp83);
        tmp95 = simd_and(tmp85, bytetest_94_94);
        struct_Pe.cc = simd_or(tmp95, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_a6 = simd_and(tmp60, tmp45);
        bytetest_96_96 = simd_and(tmp33, tmp45);
        tmp96 = simd_and(tmp85, bytetest_96_96);
        struct_Pe.cc = simd_or(tmp96, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_a6 = simd_and(tmp60, tmp45);
        bytetest_98_98 = simd_and(tmp33, tmp88);
        tmp97 = simd_and(tmp85, bytetest_98_98);
        struct_Pe.cc = simd_or(tmp97, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_a7 = simd_and(tmp60, tmp77);
        bytetest_99_99 = simd_and(tmp33, tmp6);
        tmp98 = simd_and(tmp47, bytetest_a7);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(tmp98, carryQ.get_carry_in(12), tmp99));
        tmp100 = simd_and(tmp99, bytetest_99_99);
        struct_Pe.cc = simd_or(tmp100, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_a7 = simd_and(tmp60, tmp77);
        bytetest_9b_9b = simd_and(tmp33, tmp23);
        tmp101 = simd_and(tmp99, bytetest_9b_9b);
        struct_Pe.cc = simd_or(tmp101, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_a7 = simd_and(tmp60, tmp77);
        bytetest_bd_bd = simd_and(tmp20, tmp11);
        tmp102 = simd_and(tmp99, bytetest_bd_bd);
        struct_Pe.cc = simd_or(tmp102, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_b8 = simd_and(tmp20, tmp88);
        bytetest_a3_a3 = simd_and(tmp60, tmp70);
        tmp103 = simd_and(tmp47, bytetest_b8);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(tmp103, carryQ.get_carry_in(13), tmp104));
        tmp105 = simd_and(tmp104, bytetest_a3_a3);
        struct_Pe.cc = simd_or(tmp105, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_b8 = simd_and(tmp20, tmp88);
        bytetest_a5_a5 = simd_and(tmp60, tmp72);
        tmp106 = simd_and(tmp104, bytetest_a5_a5);
        struct_Pe.cc = simd_or(tmp106, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_b8 = simd_and(tmp20, tmp88);
        bytetest_a7_a7 = simd_and(tmp60, tmp77);
        tmp107 = simd_and(tmp104, bytetest_a7_a7);
        struct_Pe.cc = simd_or(tmp107, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_b8 = simd_and(tmp20, tmp88);
        bytetest_a9_a9 = simd_and(tmp60, tmp6);
        tmp108 = simd_and(tmp104, bytetest_a9_a9);
        struct_Pe.cc = simd_or(tmp108, struct_Pe.cc);
        bytetest_e3 = simd_and(tmp15, tmp70);
        bytetest_80 = simd_andc(tmp43, tmp18);
        bytetest_89_89 = simd_and(tmp43, tmp6);
        tmp109 = simd_and(tmp25, bytetest_e3);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(tmp109, carryQ.get_carry_in(14), tmp110));
        tmp111 = simd_and(tmp110, bytetest_80);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(tmp111, carryQ.get_carry_in(15), tmp112));
        tmp113 = simd_and(tmp112, bytetest_89_89);
        struct_Pe.cc = simd_or(tmp113, struct_Pe.cc);
        bytetest_e3 = simd_and(tmp15, tmp70);
        bytetest_80 = simd_andc(tmp43, tmp18);
        bytetest_8b_8b = simd_and(tmp43, tmp23);
        tmp114 = simd_and(tmp112, bytetest_8b_8b);
        struct_Pe.cc = simd_or(tmp114, struct_Pe.cc);
        bytetest_e3 = simd_and(tmp15, tmp70);
        bytetest_80 = simd_andc(tmp43, tmp18);
        bytetest_8d_8d = simd_and(tmp43, tmp11);
        tmp115 = simd_and(tmp112, bytetest_8d_8d);
        struct_Pe.cc = simd_or(tmp115, struct_Pe.cc);
        bytetest_e3 = simd_and(tmp15, tmp70);
        bytetest_80 = simd_andc(tmp43, tmp18);
        bytetest_8f_8f = simd_and(tmp43, tmp67);
        tmp116 = simd_and(tmp112, bytetest_8f_8f);
        struct_Pe.cc = simd_or(tmp116, struct_Pe.cc);
        bytetest_e3 = simd_and(tmp15, tmp70);
        bytetest_80 = simd_andc(tmp43, tmp18);
        bytetest_91_91 = simd_and(tmp33, tmp32);
        tmp117 = simd_and(tmp112, bytetest_91_91);
        struct_Pe.cc = simd_or(tmp117, struct_Pe.cc);
        bytetest_e3 = simd_and(tmp15, tmp70);
        bytetest_80 = simd_andc(tmp43, tmp18);
        bytetest_95_95 = simd_and(tmp33, tmp72);
        tmp118 = simd_and(tmp112, bytetest_95_95);
        struct_Pe.cc = simd_or(tmp118, struct_Pe.cc);
        bytetest_e3 = simd_and(tmp15, tmp70);
        bytetest_80 = simd_andc(tmp43, tmp18);
        bytetest_97_97 = simd_and(tmp33, tmp77);
        tmp119 = simd_and(tmp112, bytetest_97_97);
        struct_Pe.cc = simd_or(tmp119, struct_Pe.cc);
        bytetest_e3 = simd_and(tmp15, tmp70);
        bytetest_80 = simd_andc(tmp43, tmp18);
        bytetest_99_99 = simd_and(tmp33, tmp6);
        tmp120 = simd_and(tmp112, bytetest_99_99);
        struct_Pe.cc = simd_or(tmp120, struct_Pe.cc);
        bytetest_e3 = simd_and(tmp15, tmp70);
        bytetest_80 = simd_andc(tmp43, tmp18);
        bytetest_9b_9b = simd_and(tmp33, tmp23);
        tmp121 = simd_and(tmp112, bytetest_9b_9b);
        struct_Pe.cc = simd_or(tmp121, struct_Pe.cc);
        bytetest_e3 = simd_and(tmp15, tmp70);
        bytetest_80 = simd_andc(tmp43, tmp18);
        tmp122 = simd_and(tmp10, basis_bits.bit_6);
        bytetest_9e_9f = simd_and(tmp33, tmp122);
        tmp123 = simd_and(tmp112, bytetest_9e_9f);
        struct_Pe.cc = simd_or(tmp123, struct_Pe.cc);
        bytetest_ef = simd_and(tmp15, tmp67);
        bytetest_b4 = simd_and(tmp20, tmp83);
        bytetest_bf_bf = simd_and(tmp20, tmp67);
        tmp124 = simd_and(tmp25, bytetest_ef);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(tmp124, carryQ.get_carry_in(16), tmp125));
        tmp126 = simd_and(tmp125, bytetest_b4);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(tmp126, carryQ.get_carry_in(17), tmp127));
        tmp128 = simd_and(tmp127, bytetest_bf_bf);
        struct_Pe.cc = simd_or(tmp128, struct_Pe.cc);
        bytetest_ef = simd_and(tmp15, tmp67);
        bytetest_b8 = simd_and(tmp20, tmp88);
        bytetest_98_98 = simd_and(tmp33, tmp88);
        tmp129 = simd_and(tmp125, bytetest_b8);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(tmp129, carryQ.get_carry_in(18), tmp130));
        tmp131 = simd_and(tmp130, bytetest_98_98);
        struct_Pe.cc = simd_or(tmp131, struct_Pe.cc);
        bytetest_ef = simd_and(tmp15, tmp67);
        bytetest_b8 = simd_and(tmp20, tmp88);
        bytetest_b6_b6 = simd_and(tmp20, tmp45);
        tmp132 = simd_and(tmp130, bytetest_b6_b6);
        struct_Pe.cc = simd_or(tmp132, struct_Pe.cc);
        bytetest_ef = simd_and(tmp15, tmp67);
        bytetest_b8 = simd_and(tmp20, tmp88);
        bytetest_b8_b8 = simd_and(tmp20, tmp88);
        tmp133 = simd_and(tmp130, bytetest_b8_b8);
        struct_Pe.cc = simd_or(tmp133, struct_Pe.cc);
        bytetest_ef = simd_and(tmp15, tmp67);
        bytetest_b8 = simd_and(tmp20, tmp88);
        bytetest_ba_ba = simd_and(tmp20, tmp35);
        tmp134 = simd_and(tmp130, bytetest_ba_ba);
        struct_Pe.cc = simd_or(tmp134, struct_Pe.cc);
        bytetest_ef = simd_and(tmp15, tmp67);
        bytetest_b8 = simd_and(tmp20, tmp88);
        bytetest_bc_bc = simd_and(tmp20, tmp21);
        tmp135 = simd_and(tmp130, bytetest_bc_bc);
        struct_Pe.cc = simd_or(tmp135, struct_Pe.cc);
        bytetest_ef = simd_and(tmp15, tmp67);
        bytetest_b8 = simd_and(tmp20, tmp88);
        bytetest_be_be = simd_and(tmp20, tmp51);
        tmp136 = simd_and(tmp130, bytetest_be_be);
        struct_Pe.cc = simd_or(tmp136, struct_Pe.cc);
        bytetest_ef = simd_and(tmp15, tmp67);
        bytetest_b9 = simd_and(tmp20, tmp6);
        bytetest_80_80 = simd_andc(tmp43, tmp18);
        tmp137 = simd_and(tmp125, bytetest_b9);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(tmp137, carryQ.get_carry_in(19), tmp138));
        tmp139 = simd_and(tmp138, bytetest_80_80);
        struct_Pe.cc = simd_or(tmp139, struct_Pe.cc);
        bytetest_ef = simd_and(tmp15, tmp67);
        bytetest_b9 = simd_and(tmp20, tmp6);
        bytetest_82_82 = simd_and(tmp43, tmp41);
        tmp140 = simd_and(tmp138, bytetest_82_82);
        struct_Pe.cc = simd_or(tmp140, struct_Pe.cc);
        bytetest_ef = simd_and(tmp15, tmp67);
        bytetest_b9 = simd_and(tmp20, tmp6);
        bytetest_84_84 = simd_and(tmp43, tmp83);
        tmp141 = simd_and(tmp138, bytetest_84_84);
        struct_Pe.cc = simd_or(tmp141, struct_Pe.cc);
        bytetest_ef = simd_and(tmp15, tmp67);
        bytetest_b9 = simd_and(tmp20, tmp6);
        bytetest_88_88 = simd_and(tmp43, tmp88);
        tmp142 = simd_and(tmp138, bytetest_88_88);
        struct_Pe.cc = simd_or(tmp142, struct_Pe.cc);
        bytetest_ef = simd_and(tmp15, tmp67);
        bytetest_b9 = simd_and(tmp20, tmp6);
        bytetest_9a_9a = simd_and(tmp33, tmp35);
        tmp143 = simd_and(tmp138, bytetest_9a_9a);
        struct_Pe.cc = simd_or(tmp143, struct_Pe.cc);
        bytetest_ef = simd_and(tmp15, tmp67);
        bytetest_b9 = simd_and(tmp20, tmp6);
        bytetest_9c_9c = simd_and(tmp33, tmp21);
        tmp144 = simd_and(tmp138, bytetest_9c_9c);
        struct_Pe.cc = simd_or(tmp144, struct_Pe.cc);
        bytetest_ef = simd_and(tmp15, tmp67);
        bytetest_b9 = simd_and(tmp20, tmp6);
        bytetest_9e_9e = simd_and(tmp33, tmp51);
        tmp145 = simd_and(tmp138, bytetest_9e_9e);
        struct_Pe.cc = simd_or(tmp145, struct_Pe.cc);
        bytetest_ef = simd_and(tmp15, tmp67);
        bytetest_bc = simd_and(tmp20, tmp21);
        bytetest_89_89 = simd_and(tmp43, tmp6);
        tmp146 = simd_and(tmp125, bytetest_bc);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(tmp146, carryQ.get_carry_in(20), tmp147));
        tmp148 = simd_and(tmp147, bytetest_89_89);
        struct_Pe.cc = simd_or(tmp148, struct_Pe.cc);
        bytetest_ef = simd_and(tmp15, tmp67);
        bytetest_bc = simd_and(tmp20, tmp21);
        bytetest_bd_bd = simd_and(tmp20, tmp11);
        tmp149 = simd_and(tmp147, bytetest_bd_bd);
        struct_Pe.cc = simd_or(tmp149, struct_Pe.cc);
        bytetest_ef = simd_and(tmp15, tmp67);
        bytetest_bd = simd_and(tmp20, tmp11);
        bytetest_9d_9d = simd_and(tmp33, tmp11);
        tmp150 = simd_and(tmp125, bytetest_bd);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(tmp150, carryQ.get_carry_in(21), tmp151));
        tmp152 = simd_and(tmp151, bytetest_9d_9d);
        struct_Pe.cc = simd_or(tmp152, struct_Pe.cc);
        bytetest_ef = simd_and(tmp15, tmp67);
        bytetest_bd = simd_and(tmp20, tmp11);
        bytetest_a0_a0 = simd_andc(tmp60, tmp18);
        tmp153 = simd_and(tmp151, bytetest_a0_a0);
        struct_Pe.cc = simd_or(tmp153, struct_Pe.cc);
        bytetest_ef = simd_and(tmp15, tmp67);
        bytetest_bd = simd_and(tmp20, tmp11);
        bytetest_a3_a3 = simd_and(tmp60, tmp70);
        tmp154 = simd_and(tmp151, bytetest_a3_a3);
        struct_Pe.cc = simd_or(tmp154, struct_Pe.cc);
        carryQ.CarryQ_Adjust(22);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Pe & struct_Pe, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_29_29, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, bytetest_5d_5d, tmp12, tmp13, bytetest_7d_7d, tmp14;
		BitBlock tmp15, tmp16, tmp17, tmp18, bytetest_e0, tmp19, tmp20, tmp21;
		BitBlock bytetest_bc, tmp22, tmp23, bytetest_bb_bb, tmp24, tmp25, tmp26, tmp27;
		BitBlock tmp28, tmp29, tmp30, bytetest_bd_bd, tmp31, tmp32, bytetest_e1, tmp33;
		BitBlock tmp34, tmp35, bytetest_9a, bytetest_9c_9c, tmp36, tmp37, tmp38, tmp39;
		BitBlock tmp40, tmp41, bytetest_e2, tmp42, tmp43, bytetest_81, tmp44, tmp45;
		BitBlock bytetest_86_86, tmp46, tmp47, tmp48, tmp49, tmp50, tmp51;
		BitBlock bytetest_be_be, tmp52, bytetest_82, bytetest_8e_8e, tmp53, tmp54;
		BitBlock tmp55, bytetest_8c, bytetest_89_89, tmp56, tmp57, tmp58;
		BitBlock bytetest_8b_8b, tmp59, tmp60, bytetest_aa_aa, tmp61, bytetest_9d;
		BitBlock bytetest_a9_a9, tmp62, tmp63, tmp64, bytetest_ab_ab, tmp65;
		BitBlock bytetest_ad_ad, tmp66, tmp67, bytetest_af_af, tmp68, bytetest_b1_b1;
		BitBlock tmp69, tmp70, bytetest_b3_b3, tmp71, tmp72, bytetest_b5_b5, tmp73;
		BitBlock bytetest_9f, tmp74, tmp75, tmp76, tmp77, bytetest_a7_a7, tmp78, tmp79;
		BitBlock tmp80, tmp81, tmp82, bytetest_a6, tmp83, bytetest_84_84, tmp84, tmp85;
		BitBlock tmp86, tmp87, tmp88, bytetest_88_88, tmp89, bytetest_8a_8a, tmp90;
		BitBlock bytetest_8c_8c, tmp91, tmp92, bytetest_90_90, tmp93, bytetest_92_92;
		BitBlock tmp94, bytetest_94_94, tmp95, bytetest_96_96, tmp96, bytetest_98_98;
		BitBlock tmp97, bytetest_a7, bytetest_99_99, tmp98, tmp99, tmp100;
		BitBlock bytetest_9b_9b, tmp101, tmp102, bytetest_b8, bytetest_a3_a3, tmp103;
		BitBlock tmp104, tmp105, bytetest_a5_a5, tmp106, tmp107, tmp108, bytetest_e3;
		BitBlock bytetest_80, tmp109, tmp110, tmp111, tmp112, tmp113, tmp114;
		BitBlock bytetest_8d_8d, tmp115, bytetest_8f_8f, tmp116, bytetest_91_91;
		BitBlock tmp117, bytetest_95_95, tmp118, bytetest_97_97, tmp119, tmp120;
		BitBlock tmp121, tmp122, bytetest_9e_9f, tmp123, bytetest_ef, bytetest_b4;
		BitBlock bytetest_bf_bf, tmp124, tmp125, tmp126, tmp127, tmp128, tmp129;
		BitBlock tmp130, tmp131, bytetest_b6_b6, tmp132, bytetest_b8_b8, tmp133;
		BitBlock bytetest_ba_ba, tmp134, bytetest_bc_bc, tmp135, tmp136, bytetest_b9;
		BitBlock bytetest_80_80, tmp137, tmp138, tmp139, bytetest_82_82, tmp140;
		BitBlock tmp141, tmp142, bytetest_9a_9a, tmp143, tmp144, bytetest_9e_9e;
		BitBlock tmp145, tmp146, tmp147, tmp148, tmp149, bytetest_bd, bytetest_9d_9d;
		BitBlock tmp150, tmp151, tmp152, bytetest_a0_a0, tmp153, tmp154;




        struct_Pe.cc = simd<1>::constant<0>();
        tmp1 = simd_or(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp2, tmp1);
        tmp4 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp6 = simd_and(tmp4, tmp5);
        bytetest_29_29 = simd_and(tmp3, tmp6);
        struct_Pe.cc = simd_or(bytetest_29_29, struct_Pe.cc);
        tmp7 = simd_andc(basis_bits.bit_1, basis_bits.bit_0);
        tmp8 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp11 = simd_and(tmp10, tmp5);
        bytetest_5d_5d = simd_and(tmp9, tmp11);
        struct_Pe.cc = simd_or(bytetest_5d_5d, struct_Pe.cc);
        tmp12 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp13 = simd_and(tmp7, tmp12);
        bytetest_7d_7d = simd_and(tmp13, tmp11);
        struct_Pe.cc = simd_or(bytetest_7d_7d, struct_Pe.cc);
        tmp14 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp15 = simd_and(tmp14, tmp2);
        tmp16 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp17 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp18 = simd_or(tmp16, tmp17);
        bytetest_e0 = simd_andc(tmp15, tmp18);
        tmp19 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp20 = simd_and(tmp19, tmp12);
        tmp21 = simd_andc(tmp10, tmp17);
        bytetest_bc = simd_and(tmp20, tmp21);
        tmp22 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp23 = simd_and(tmp4, tmp22);
        bytetest_bb_bb = simd_and(tmp20, tmp23);
        tmp24 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp24, carryQ.get_carry_in(0), tmp25));
        tmp26 = simd_and(tmp25, bytetest_e0);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp26, carryQ.get_carry_in(1), tmp27));
        tmp28 = simd_and(tmp27, bytetest_bc);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp28, carryQ.get_carry_in(2), tmp29));
        tmp30 = simd_and(tmp29, bytetest_bb_bb);
        struct_Pe.cc = simd_or(tmp30, struct_Pe.cc);
        bytetest_e0 = simd_andc(tmp15, tmp18);
        bytetest_bc = simd_and(tmp20, tmp21);
        bytetest_bd_bd = simd_and(tmp20, tmp11);
        tmp31 = simd_and(tmp29, bytetest_bd_bd);
        struct_Pe.cc = simd_or(tmp31, struct_Pe.cc);
        tmp32 = simd_andc(tmp5, tmp16);
        bytetest_e1 = simd_and(tmp15, tmp32);
        tmp33 = simd_and(tmp19, tmp8);
        tmp34 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp35 = simd_and(tmp4, tmp34);
        bytetest_9a = simd_and(tmp33, tmp35);
        bytetest_9c_9c = simd_and(tmp33, tmp21);
        tmp36 = simd_and(tmp25, bytetest_e1);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp36, carryQ.get_carry_in(3), tmp37));
        tmp38 = simd_and(tmp37, bytetest_9a);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp38, carryQ.get_carry_in(4), tmp39));
        tmp40 = simd_and(tmp39, bytetest_9c_9c);
        struct_Pe.cc = simd_or(tmp40, struct_Pe.cc);
        tmp41 = simd_andc(tmp34, tmp16);
        bytetest_e2 = simd_and(tmp15, tmp41);
        tmp42 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp43 = simd_andc(tmp19, tmp42);
        bytetest_81 = simd_and(tmp43, tmp32);
        tmp44 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp45 = simd_and(tmp44, tmp34);
        bytetest_86_86 = simd_and(tmp43, tmp45);
        tmp46 = simd_and(tmp25, bytetest_e2);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp46, carryQ.get_carry_in(5), tmp47));
        tmp48 = simd_and(tmp47, bytetest_81);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp48, carryQ.get_carry_in(6), tmp49));
        tmp50 = simd_and(tmp49, bytetest_86_86);
        struct_Pe.cc = simd_or(tmp50, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_81 = simd_and(tmp43, tmp32);
        tmp51 = simd_and(tmp10, tmp34);
        bytetest_be_be = simd_and(tmp20, tmp51);
        tmp52 = simd_and(tmp49, bytetest_be_be);
        struct_Pe.cc = simd_or(tmp52, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_82 = simd_and(tmp43, tmp41);
        bytetest_8e_8e = simd_and(tmp43, tmp51);
        tmp53 = simd_and(tmp47, bytetest_82);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp53, carryQ.get_carry_in(7), tmp54));
        tmp55 = simd_and(tmp54, bytetest_8e_8e);
        struct_Pe.cc = simd_or(tmp55, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_8c = simd_and(tmp43, tmp21);
        bytetest_89_89 = simd_and(tmp43, tmp6);
        tmp56 = simd_and(tmp47, bytetest_8c);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(tmp56, carryQ.get_carry_in(8), tmp57));
        tmp58 = simd_and(tmp57, bytetest_89_89);
        struct_Pe.cc = simd_or(tmp58, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_8c = simd_and(tmp43, tmp21);
        bytetest_8b_8b = simd_and(tmp43, tmp23);
        tmp59 = simd_and(tmp57, bytetest_8b_8b);
        struct_Pe.cc = simd_or(tmp59, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_8c = simd_and(tmp43, tmp21);
        tmp60 = simd_and(tmp19, tmp2);
        bytetest_aa_aa = simd_and(tmp60, tmp35);
        tmp61 = simd_and(tmp57, bytetest_aa_aa);
        struct_Pe.cc = simd_or(tmp61, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_9d = simd_and(tmp33, tmp11);
        bytetest_a9_a9 = simd_and(tmp60, tmp6);
        tmp62 = simd_and(tmp47, bytetest_9d);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(tmp62, carryQ.get_carry_in(9), tmp63));
        tmp64 = simd_and(tmp63, bytetest_a9_a9);
        struct_Pe.cc = simd_or(tmp64, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_9d = simd_and(tmp33, tmp11);
        bytetest_ab_ab = simd_and(tmp60, tmp23);
        tmp65 = simd_and(tmp63, bytetest_ab_ab);
        struct_Pe.cc = simd_or(tmp65, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_9d = simd_and(tmp33, tmp11);
        bytetest_ad_ad = simd_and(tmp60, tmp11);
        tmp66 = simd_and(tmp63, bytetest_ad_ad);
        struct_Pe.cc = simd_or(tmp66, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_9d = simd_and(tmp33, tmp11);
        tmp67 = simd_and(tmp10, tmp22);
        bytetest_af_af = simd_and(tmp60, tmp67);
        tmp68 = simd_and(tmp63, bytetest_af_af);
        struct_Pe.cc = simd_or(tmp68, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_9d = simd_and(tmp33, tmp11);
        bytetest_b1_b1 = simd_and(tmp20, tmp32);
        tmp69 = simd_and(tmp63, bytetest_b1_b1);
        struct_Pe.cc = simd_or(tmp69, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_9d = simd_and(tmp33, tmp11);
        tmp70 = simd_andc(tmp22, tmp16);
        bytetest_b3_b3 = simd_and(tmp20, tmp70);
        tmp71 = simd_and(tmp63, bytetest_b3_b3);
        struct_Pe.cc = simd_or(tmp71, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_9d = simd_and(tmp33, tmp11);
        tmp72 = simd_and(tmp44, tmp5);
        bytetest_b5_b5 = simd_and(tmp20, tmp72);
        tmp73 = simd_and(tmp63, bytetest_b5_b5);
        struct_Pe.cc = simd_or(tmp73, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_9f = simd_and(tmp33, tmp67);
        bytetest_86_86 = simd_and(tmp43, tmp45);
        tmp74 = simd_and(tmp47, bytetest_9f);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(tmp74, carryQ.get_carry_in(10), tmp75));
        tmp76 = simd_and(tmp75, bytetest_86_86);
        struct_Pe.cc = simd_or(tmp76, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_9f = simd_and(tmp33, tmp67);
        tmp77 = simd_and(tmp44, tmp22);
        bytetest_a7_a7 = simd_and(tmp60, tmp77);
        tmp78 = simd_and(tmp75, bytetest_a7_a7);
        struct_Pe.cc = simd_or(tmp78, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_9f = simd_and(tmp33, tmp67);
        bytetest_a9_a9 = simd_and(tmp60, tmp6);
        tmp79 = simd_and(tmp75, bytetest_a9_a9);
        struct_Pe.cc = simd_or(tmp79, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_9f = simd_and(tmp33, tmp67);
        bytetest_ab_ab = simd_and(tmp60, tmp23);
        tmp80 = simd_and(tmp75, bytetest_ab_ab);
        struct_Pe.cc = simd_or(tmp80, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_9f = simd_and(tmp33, tmp67);
        bytetest_ad_ad = simd_and(tmp60, tmp11);
        tmp81 = simd_and(tmp75, bytetest_ad_ad);
        struct_Pe.cc = simd_or(tmp81, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_9f = simd_and(tmp33, tmp67);
        bytetest_af_af = simd_and(tmp60, tmp67);
        tmp82 = simd_and(tmp75, bytetest_af_af);
        struct_Pe.cc = simd_or(tmp82, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_a6 = simd_and(tmp60, tmp45);
        tmp83 = simd_andc(tmp44, tmp17);
        bytetest_84_84 = simd_and(tmp43, tmp83);
        tmp84 = simd_and(tmp47, bytetest_a6);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(tmp84, carryQ.get_carry_in(11), tmp85));
        tmp86 = simd_and(tmp85, bytetest_84_84);
        struct_Pe.cc = simd_or(tmp86, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_a6 = simd_and(tmp60, tmp45);
        bytetest_86_86 = simd_and(tmp43, tmp45);
        tmp87 = simd_and(tmp85, bytetest_86_86);
        struct_Pe.cc = simd_or(tmp87, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_a6 = simd_and(tmp60, tmp45);
        tmp88 = simd_andc(tmp4, tmp17);
        bytetest_88_88 = simd_and(tmp43, tmp88);
        tmp89 = simd_and(tmp85, bytetest_88_88);
        struct_Pe.cc = simd_or(tmp89, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_a6 = simd_and(tmp60, tmp45);
        bytetest_8a_8a = simd_and(tmp43, tmp35);
        tmp90 = simd_and(tmp85, bytetest_8a_8a);
        struct_Pe.cc = simd_or(tmp90, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_a6 = simd_and(tmp60, tmp45);
        bytetest_8c_8c = simd_and(tmp43, tmp21);
        tmp91 = simd_and(tmp85, bytetest_8c_8c);
        struct_Pe.cc = simd_or(tmp91, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_a6 = simd_and(tmp60, tmp45);
        bytetest_8e_8e = simd_and(tmp43, tmp51);
        tmp92 = simd_and(tmp85, bytetest_8e_8e);
        struct_Pe.cc = simd_or(tmp92, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_a6 = simd_and(tmp60, tmp45);
        bytetest_90_90 = simd_andc(tmp33, tmp18);
        tmp93 = simd_and(tmp85, bytetest_90_90);
        struct_Pe.cc = simd_or(tmp93, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_a6 = simd_and(tmp60, tmp45);
        bytetest_92_92 = simd_and(tmp33, tmp41);
        tmp94 = simd_and(tmp85, bytetest_92_92);
        struct_Pe.cc = simd_or(tmp94, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_a6 = simd_and(tmp60, tmp45);
        bytetest_94_94 = simd_and(tmp33, tmp83);
        tmp95 = simd_and(tmp85, bytetest_94_94);
        struct_Pe.cc = simd_or(tmp95, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_a6 = simd_and(tmp60, tmp45);
        bytetest_96_96 = simd_and(tmp33, tmp45);
        tmp96 = simd_and(tmp85, bytetest_96_96);
        struct_Pe.cc = simd_or(tmp96, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_a6 = simd_and(tmp60, tmp45);
        bytetest_98_98 = simd_and(tmp33, tmp88);
        tmp97 = simd_and(tmp85, bytetest_98_98);
        struct_Pe.cc = simd_or(tmp97, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_a7 = simd_and(tmp60, tmp77);
        bytetest_99_99 = simd_and(tmp33, tmp6);
        tmp98 = simd_and(tmp47, bytetest_a7);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(tmp98, carryQ.get_carry_in(12), tmp99));
        tmp100 = simd_and(tmp99, bytetest_99_99);
        struct_Pe.cc = simd_or(tmp100, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_a7 = simd_and(tmp60, tmp77);
        bytetest_9b_9b = simd_and(tmp33, tmp23);
        tmp101 = simd_and(tmp99, bytetest_9b_9b);
        struct_Pe.cc = simd_or(tmp101, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_a7 = simd_and(tmp60, tmp77);
        bytetest_bd_bd = simd_and(tmp20, tmp11);
        tmp102 = simd_and(tmp99, bytetest_bd_bd);
        struct_Pe.cc = simd_or(tmp102, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_b8 = simd_and(tmp20, tmp88);
        bytetest_a3_a3 = simd_and(tmp60, tmp70);
        tmp103 = simd_and(tmp47, bytetest_b8);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(tmp103, carryQ.get_carry_in(13), tmp104));
        tmp105 = simd_and(tmp104, bytetest_a3_a3);
        struct_Pe.cc = simd_or(tmp105, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_b8 = simd_and(tmp20, tmp88);
        bytetest_a5_a5 = simd_and(tmp60, tmp72);
        tmp106 = simd_and(tmp104, bytetest_a5_a5);
        struct_Pe.cc = simd_or(tmp106, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_b8 = simd_and(tmp20, tmp88);
        bytetest_a7_a7 = simd_and(tmp60, tmp77);
        tmp107 = simd_and(tmp104, bytetest_a7_a7);
        struct_Pe.cc = simd_or(tmp107, struct_Pe.cc);
        bytetest_e2 = simd_and(tmp15, tmp41);
        bytetest_b8 = simd_and(tmp20, tmp88);
        bytetest_a9_a9 = simd_and(tmp60, tmp6);
        tmp108 = simd_and(tmp104, bytetest_a9_a9);
        struct_Pe.cc = simd_or(tmp108, struct_Pe.cc);
        bytetest_e3 = simd_and(tmp15, tmp70);
        bytetest_80 = simd_andc(tmp43, tmp18);
        bytetest_89_89 = simd_and(tmp43, tmp6);
        tmp109 = simd_and(tmp25, bytetest_e3);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(tmp109, carryQ.get_carry_in(14), tmp110));
        tmp111 = simd_and(tmp110, bytetest_80);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(tmp111, carryQ.get_carry_in(15), tmp112));
        tmp113 = simd_and(tmp112, bytetest_89_89);
        struct_Pe.cc = simd_or(tmp113, struct_Pe.cc);
        bytetest_e3 = simd_and(tmp15, tmp70);
        bytetest_80 = simd_andc(tmp43, tmp18);
        bytetest_8b_8b = simd_and(tmp43, tmp23);
        tmp114 = simd_and(tmp112, bytetest_8b_8b);
        struct_Pe.cc = simd_or(tmp114, struct_Pe.cc);
        bytetest_e3 = simd_and(tmp15, tmp70);
        bytetest_80 = simd_andc(tmp43, tmp18);
        bytetest_8d_8d = simd_and(tmp43, tmp11);
        tmp115 = simd_and(tmp112, bytetest_8d_8d);
        struct_Pe.cc = simd_or(tmp115, struct_Pe.cc);
        bytetest_e3 = simd_and(tmp15, tmp70);
        bytetest_80 = simd_andc(tmp43, tmp18);
        bytetest_8f_8f = simd_and(tmp43, tmp67);
        tmp116 = simd_and(tmp112, bytetest_8f_8f);
        struct_Pe.cc = simd_or(tmp116, struct_Pe.cc);
        bytetest_e3 = simd_and(tmp15, tmp70);
        bytetest_80 = simd_andc(tmp43, tmp18);
        bytetest_91_91 = simd_and(tmp33, tmp32);
        tmp117 = simd_and(tmp112, bytetest_91_91);
        struct_Pe.cc = simd_or(tmp117, struct_Pe.cc);
        bytetest_e3 = simd_and(tmp15, tmp70);
        bytetest_80 = simd_andc(tmp43, tmp18);
        bytetest_95_95 = simd_and(tmp33, tmp72);
        tmp118 = simd_and(tmp112, bytetest_95_95);
        struct_Pe.cc = simd_or(tmp118, struct_Pe.cc);
        bytetest_e3 = simd_and(tmp15, tmp70);
        bytetest_80 = simd_andc(tmp43, tmp18);
        bytetest_97_97 = simd_and(tmp33, tmp77);
        tmp119 = simd_and(tmp112, bytetest_97_97);
        struct_Pe.cc = simd_or(tmp119, struct_Pe.cc);
        bytetest_e3 = simd_and(tmp15, tmp70);
        bytetest_80 = simd_andc(tmp43, tmp18);
        bytetest_99_99 = simd_and(tmp33, tmp6);
        tmp120 = simd_and(tmp112, bytetest_99_99);
        struct_Pe.cc = simd_or(tmp120, struct_Pe.cc);
        bytetest_e3 = simd_and(tmp15, tmp70);
        bytetest_80 = simd_andc(tmp43, tmp18);
        bytetest_9b_9b = simd_and(tmp33, tmp23);
        tmp121 = simd_and(tmp112, bytetest_9b_9b);
        struct_Pe.cc = simd_or(tmp121, struct_Pe.cc);
        bytetest_e3 = simd_and(tmp15, tmp70);
        bytetest_80 = simd_andc(tmp43, tmp18);
        tmp122 = simd_and(tmp10, basis_bits.bit_6);
        bytetest_9e_9f = simd_and(tmp33, tmp122);
        tmp123 = simd_and(tmp112, bytetest_9e_9f);
        struct_Pe.cc = simd_or(tmp123, struct_Pe.cc);
        bytetest_ef = simd_and(tmp15, tmp67);
        bytetest_b4 = simd_and(tmp20, tmp83);
        bytetest_bf_bf = simd_and(tmp20, tmp67);
        tmp124 = simd_and(tmp25, bytetest_ef);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(tmp124, carryQ.get_carry_in(16), tmp125));
        tmp126 = simd_and(tmp125, bytetest_b4);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(tmp126, carryQ.get_carry_in(17), tmp127));
        tmp128 = simd_and(tmp127, bytetest_bf_bf);
        struct_Pe.cc = simd_or(tmp128, struct_Pe.cc);
        bytetest_ef = simd_and(tmp15, tmp67);
        bytetest_b8 = simd_and(tmp20, tmp88);
        bytetest_98_98 = simd_and(tmp33, tmp88);
        tmp129 = simd_and(tmp125, bytetest_b8);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(tmp129, carryQ.get_carry_in(18), tmp130));
        tmp131 = simd_and(tmp130, bytetest_98_98);
        struct_Pe.cc = simd_or(tmp131, struct_Pe.cc);
        bytetest_ef = simd_and(tmp15, tmp67);
        bytetest_b8 = simd_and(tmp20, tmp88);
        bytetest_b6_b6 = simd_and(tmp20, tmp45);
        tmp132 = simd_and(tmp130, bytetest_b6_b6);
        struct_Pe.cc = simd_or(tmp132, struct_Pe.cc);
        bytetest_ef = simd_and(tmp15, tmp67);
        bytetest_b8 = simd_and(tmp20, tmp88);
        bytetest_b8_b8 = simd_and(tmp20, tmp88);
        tmp133 = simd_and(tmp130, bytetest_b8_b8);
        struct_Pe.cc = simd_or(tmp133, struct_Pe.cc);
        bytetest_ef = simd_and(tmp15, tmp67);
        bytetest_b8 = simd_and(tmp20, tmp88);
        bytetest_ba_ba = simd_and(tmp20, tmp35);
        tmp134 = simd_and(tmp130, bytetest_ba_ba);
        struct_Pe.cc = simd_or(tmp134, struct_Pe.cc);
        bytetest_ef = simd_and(tmp15, tmp67);
        bytetest_b8 = simd_and(tmp20, tmp88);
        bytetest_bc_bc = simd_and(tmp20, tmp21);
        tmp135 = simd_and(tmp130, bytetest_bc_bc);
        struct_Pe.cc = simd_or(tmp135, struct_Pe.cc);
        bytetest_ef = simd_and(tmp15, tmp67);
        bytetest_b8 = simd_and(tmp20, tmp88);
        bytetest_be_be = simd_and(tmp20, tmp51);
        tmp136 = simd_and(tmp130, bytetest_be_be);
        struct_Pe.cc = simd_or(tmp136, struct_Pe.cc);
        bytetest_ef = simd_and(tmp15, tmp67);
        bytetest_b9 = simd_and(tmp20, tmp6);
        bytetest_80_80 = simd_andc(tmp43, tmp18);
        tmp137 = simd_and(tmp125, bytetest_b9);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(tmp137, carryQ.get_carry_in(19), tmp138));
        tmp139 = simd_and(tmp138, bytetest_80_80);
        struct_Pe.cc = simd_or(tmp139, struct_Pe.cc);
        bytetest_ef = simd_and(tmp15, tmp67);
        bytetest_b9 = simd_and(tmp20, tmp6);
        bytetest_82_82 = simd_and(tmp43, tmp41);
        tmp140 = simd_and(tmp138, bytetest_82_82);
        struct_Pe.cc = simd_or(tmp140, struct_Pe.cc);
        bytetest_ef = simd_and(tmp15, tmp67);
        bytetest_b9 = simd_and(tmp20, tmp6);
        bytetest_84_84 = simd_and(tmp43, tmp83);
        tmp141 = simd_and(tmp138, bytetest_84_84);
        struct_Pe.cc = simd_or(tmp141, struct_Pe.cc);
        bytetest_ef = simd_and(tmp15, tmp67);
        bytetest_b9 = simd_and(tmp20, tmp6);
        bytetest_88_88 = simd_and(tmp43, tmp88);
        tmp142 = simd_and(tmp138, bytetest_88_88);
        struct_Pe.cc = simd_or(tmp142, struct_Pe.cc);
        bytetest_ef = simd_and(tmp15, tmp67);
        bytetest_b9 = simd_and(tmp20, tmp6);
        bytetest_9a_9a = simd_and(tmp33, tmp35);
        tmp143 = simd_and(tmp138, bytetest_9a_9a);
        struct_Pe.cc = simd_or(tmp143, struct_Pe.cc);
        bytetest_ef = simd_and(tmp15, tmp67);
        bytetest_b9 = simd_and(tmp20, tmp6);
        bytetest_9c_9c = simd_and(tmp33, tmp21);
        tmp144 = simd_and(tmp138, bytetest_9c_9c);
        struct_Pe.cc = simd_or(tmp144, struct_Pe.cc);
        bytetest_ef = simd_and(tmp15, tmp67);
        bytetest_b9 = simd_and(tmp20, tmp6);
        bytetest_9e_9e = simd_and(tmp33, tmp51);
        tmp145 = simd_and(tmp138, bytetest_9e_9e);
        struct_Pe.cc = simd_or(tmp145, struct_Pe.cc);
        bytetest_ef = simd_and(tmp15, tmp67);
        bytetest_bc = simd_and(tmp20, tmp21);
        bytetest_89_89 = simd_and(tmp43, tmp6);
        tmp146 = simd_and(tmp125, bytetest_bc);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(tmp146, carryQ.get_carry_in(20), tmp147));
        tmp148 = simd_and(tmp147, bytetest_89_89);
        struct_Pe.cc = simd_or(tmp148, struct_Pe.cc);
        bytetest_ef = simd_and(tmp15, tmp67);
        bytetest_bc = simd_and(tmp20, tmp21);
        bytetest_bd_bd = simd_and(tmp20, tmp11);
        tmp149 = simd_and(tmp147, bytetest_bd_bd);
        struct_Pe.cc = simd_or(tmp149, struct_Pe.cc);
        bytetest_ef = simd_and(tmp15, tmp67);
        bytetest_bd = simd_and(tmp20, tmp11);
        bytetest_9d_9d = simd_and(tmp33, tmp11);
        tmp150 = simd_and(tmp125, bytetest_bd);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(tmp150, carryQ.get_carry_in(21), tmp151));
        tmp152 = simd_and(tmp151, bytetest_9d_9d);
        struct_Pe.cc = simd_or(tmp152, struct_Pe.cc);
        bytetest_ef = simd_and(tmp15, tmp67);
        bytetest_bd = simd_and(tmp20, tmp11);
        bytetest_a0_a0 = simd_andc(tmp60, tmp18);
        tmp153 = simd_and(tmp151, bytetest_a0_a0);
        struct_Pe.cc = simd_or(tmp153, struct_Pe.cc);
        bytetest_ef = simd_and(tmp15, tmp67);
        bytetest_bd = simd_and(tmp20, tmp11);
        bytetest_a3_a3 = simd_and(tmp60, tmp70);
        tmp154 = simd_and(tmp151, bytetest_a3_a3);
        struct_Pe.cc = simd_or(tmp154, struct_Pe.cc);
  }
  CarryArray<22, 0> carryQ;
  };

  struct Pi {
  Pi() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Pi & struct_Pi) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_c2, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, tmp12, bytetest_ab_ab, tmp13, tmp14, tmp15, tmp16;
		BitBlock tmp17, tmp18, bytetest_e2, tmp19, tmp20, tmp21, bytetest_80, tmp22;
		BitBlock tmp23, tmp24, bytetest_98_98, tmp25, tmp26, tmp27, tmp28, tmp29;
		BitBlock tmp30, tmp31, tmp32, bytetest_9b_9c, tmp33, tmp34, tmp35;
		BitBlock bytetest_9f_9f, tmp36, tmp37, tmp38, tmp39, tmp40, bytetest_b9_b9;
		BitBlock tmp41, bytetest_b8, bytetest_82_82, tmp42, tmp43, tmp44, tmp45, tmp46;
		BitBlock bytetest_84_84, tmp47, bytetest_89_89, tmp48, tmp49, bytetest_8c_8c;
		BitBlock tmp50, bytetest_9c_9c, tmp51, bytetest_a0_a0, tmp52;




        struct_Pi.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_andc(tmp5, tmp4);
        bytetest_c2 = simd_and(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp11 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp12 = simd_and(tmp10, tmp11);
        bytetest_ab_ab = simd_and(tmp9, tmp12);
        tmp13 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp13, carryQ.get_carry_in(0), tmp14));
        tmp15 = simd_and(tmp14, bytetest_c2);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp15, carryQ.get_carry_in(1), tmp16));
        tmp17 = simd_and(tmp16, bytetest_ab_ab);
        struct_Pi.cc = simd_or(tmp17, struct_Pi.cc);
        tmp18 = simd_and(tmp1, tmp8);
        bytetest_e2 = simd_and(tmp18, tmp6);
        tmp19 = simd_andc(tmp7, tmp2);
        tmp20 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp21 = simd_or(tmp4, tmp20);
        bytetest_80 = simd_andc(tmp19, tmp21);
        tmp22 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp23 = simd_and(tmp7, tmp22);
        tmp24 = simd_andc(tmp10, tmp20);
        bytetest_98_98 = simd_and(tmp23, tmp24);
        tmp25 = simd_and(tmp14, bytetest_e2);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp25, carryQ.get_carry_in(2), tmp26));
        tmp27 = simd_and(tmp26, bytetest_80);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp27, carryQ.get_carry_in(3), tmp28));
        tmp29 = simd_and(tmp28, bytetest_98_98);
        struct_Pi.cc = simd_or(tmp29, struct_Pi.cc);
        bytetest_e2 = simd_and(tmp18, tmp6);
        bytetest_80 = simd_andc(tmp19, tmp21);
        tmp30 = simd_and(tmp23, basis_bits.bit_4);
        tmp31 = simd_not(tmp20);
        tmp32 = simd_or(simd_and(basis_bits.bit_5, tmp31), simd_andc(tmp11, basis_bits.bit_5));
        bytetest_9b_9c = simd_and(tmp30, tmp32);
        tmp33 = simd_and(tmp28, bytetest_9b_9c);
        struct_Pi.cc = simd_or(tmp33, struct_Pi.cc);
        bytetest_e2 = simd_and(tmp18, tmp6);
        bytetest_80 = simd_andc(tmp19, tmp21);
        tmp34 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp35 = simd_and(tmp34, tmp11);
        bytetest_9f_9f = simd_and(tmp23, tmp35);
        tmp36 = simd_and(tmp28, bytetest_9f_9f);
        struct_Pi.cc = simd_or(tmp36, struct_Pi.cc);
        bytetest_e2 = simd_and(tmp18, tmp6);
        bytetest_80 = simd_andc(tmp19, tmp21);
        tmp37 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp38 = simd_and(tmp7, tmp37);
        tmp39 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp40 = simd_and(tmp10, tmp39);
        bytetest_b9_b9 = simd_and(tmp38, tmp40);
        tmp41 = simd_and(tmp28, bytetest_b9_b9);
        struct_Pi.cc = simd_or(tmp41, struct_Pi.cc);
        bytetest_e2 = simd_and(tmp18, tmp6);
        bytetest_b8 = simd_and(tmp38, tmp24);
        bytetest_82_82 = simd_and(tmp19, tmp6);
        tmp42 = simd_and(tmp26, bytetest_b8);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp42, carryQ.get_carry_in(4), tmp43));
        tmp44 = simd_and(tmp43, bytetest_82_82);
        struct_Pi.cc = simd_or(tmp44, struct_Pi.cc);
        bytetest_e2 = simd_and(tmp18, tmp6);
        bytetest_b8 = simd_and(tmp38, tmp24);
        tmp45 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp46 = simd_andc(tmp45, tmp20);
        bytetest_84_84 = simd_and(tmp19, tmp46);
        tmp47 = simd_and(tmp43, bytetest_84_84);
        struct_Pi.cc = simd_or(tmp47, struct_Pi.cc);
        bytetest_e2 = simd_and(tmp18, tmp6);
        bytetest_b8 = simd_and(tmp38, tmp24);
        bytetest_89_89 = simd_and(tmp19, tmp40);
        tmp48 = simd_and(tmp43, bytetest_89_89);
        struct_Pi.cc = simd_or(tmp48, struct_Pi.cc);
        bytetest_e2 = simd_and(tmp18, tmp6);
        bytetest_b8 = simd_and(tmp38, tmp24);
        tmp49 = simd_andc(tmp34, tmp20);
        bytetest_8c_8c = simd_and(tmp19, tmp49);
        tmp50 = simd_and(tmp43, bytetest_8c_8c);
        struct_Pi.cc = simd_or(tmp50, struct_Pi.cc);
        bytetest_e2 = simd_and(tmp18, tmp6);
        bytetest_b8 = simd_and(tmp38, tmp24);
        bytetest_9c_9c = simd_and(tmp23, tmp49);
        tmp51 = simd_and(tmp43, bytetest_9c_9c);
        struct_Pi.cc = simd_or(tmp51, struct_Pi.cc);
        bytetest_e2 = simd_and(tmp18, tmp6);
        bytetest_b8 = simd_and(tmp38, tmp24);
        bytetest_a0_a0 = simd_andc(tmp9, tmp21);
        tmp52 = simd_and(tmp43, bytetest_a0_a0);
        struct_Pi.cc = simd_or(tmp52, struct_Pi.cc);
        carryQ.CarryQ_Adjust(5);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Pi & struct_Pi, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_c2, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, tmp12, bytetest_ab_ab, tmp13, tmp14, tmp15, tmp16;
		BitBlock tmp17, tmp18, bytetest_e2, tmp19, tmp20, tmp21, bytetest_80, tmp22;
		BitBlock tmp23, tmp24, bytetest_98_98, tmp25, tmp26, tmp27, tmp28, tmp29;
		BitBlock tmp30, tmp31, tmp32, bytetest_9b_9c, tmp33, tmp34, tmp35;
		BitBlock bytetest_9f_9f, tmp36, tmp37, tmp38, tmp39, tmp40, bytetest_b9_b9;
		BitBlock tmp41, bytetest_b8, bytetest_82_82, tmp42, tmp43, tmp44, tmp45, tmp46;
		BitBlock bytetest_84_84, tmp47, bytetest_89_89, tmp48, tmp49, bytetest_8c_8c;
		BitBlock tmp50, bytetest_9c_9c, tmp51, bytetest_a0_a0, tmp52;




        struct_Pi.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_andc(tmp5, tmp4);
        bytetest_c2 = simd_and(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp11 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp12 = simd_and(tmp10, tmp11);
        bytetest_ab_ab = simd_and(tmp9, tmp12);
        tmp13 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp13, carryQ.get_carry_in(0), tmp14));
        tmp15 = simd_and(tmp14, bytetest_c2);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp15, carryQ.get_carry_in(1), tmp16));
        tmp17 = simd_and(tmp16, bytetest_ab_ab);
        struct_Pi.cc = simd_or(tmp17, struct_Pi.cc);
        tmp18 = simd_and(tmp1, tmp8);
        bytetest_e2 = simd_and(tmp18, tmp6);
        tmp19 = simd_andc(tmp7, tmp2);
        tmp20 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp21 = simd_or(tmp4, tmp20);
        bytetest_80 = simd_andc(tmp19, tmp21);
        tmp22 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp23 = simd_and(tmp7, tmp22);
        tmp24 = simd_andc(tmp10, tmp20);
        bytetest_98_98 = simd_and(tmp23, tmp24);
        tmp25 = simd_and(tmp14, bytetest_e2);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp25, carryQ.get_carry_in(2), tmp26));
        tmp27 = simd_and(tmp26, bytetest_80);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp27, carryQ.get_carry_in(3), tmp28));
        tmp29 = simd_and(tmp28, bytetest_98_98);
        struct_Pi.cc = simd_or(tmp29, struct_Pi.cc);
        bytetest_e2 = simd_and(tmp18, tmp6);
        bytetest_80 = simd_andc(tmp19, tmp21);
        tmp30 = simd_and(tmp23, basis_bits.bit_4);
        tmp31 = simd_not(tmp20);
        tmp32 = simd_or(simd_and(basis_bits.bit_5, tmp31), simd_andc(tmp11, basis_bits.bit_5));
        bytetest_9b_9c = simd_and(tmp30, tmp32);
        tmp33 = simd_and(tmp28, bytetest_9b_9c);
        struct_Pi.cc = simd_or(tmp33, struct_Pi.cc);
        bytetest_e2 = simd_and(tmp18, tmp6);
        bytetest_80 = simd_andc(tmp19, tmp21);
        tmp34 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp35 = simd_and(tmp34, tmp11);
        bytetest_9f_9f = simd_and(tmp23, tmp35);
        tmp36 = simd_and(tmp28, bytetest_9f_9f);
        struct_Pi.cc = simd_or(tmp36, struct_Pi.cc);
        bytetest_e2 = simd_and(tmp18, tmp6);
        bytetest_80 = simd_andc(tmp19, tmp21);
        tmp37 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp38 = simd_and(tmp7, tmp37);
        tmp39 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp40 = simd_and(tmp10, tmp39);
        bytetest_b9_b9 = simd_and(tmp38, tmp40);
        tmp41 = simd_and(tmp28, bytetest_b9_b9);
        struct_Pi.cc = simd_or(tmp41, struct_Pi.cc);
        bytetest_e2 = simd_and(tmp18, tmp6);
        bytetest_b8 = simd_and(tmp38, tmp24);
        bytetest_82_82 = simd_and(tmp19, tmp6);
        tmp42 = simd_and(tmp26, bytetest_b8);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp42, carryQ.get_carry_in(4), tmp43));
        tmp44 = simd_and(tmp43, bytetest_82_82);
        struct_Pi.cc = simd_or(tmp44, struct_Pi.cc);
        bytetest_e2 = simd_and(tmp18, tmp6);
        bytetest_b8 = simd_and(tmp38, tmp24);
        tmp45 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp46 = simd_andc(tmp45, tmp20);
        bytetest_84_84 = simd_and(tmp19, tmp46);
        tmp47 = simd_and(tmp43, bytetest_84_84);
        struct_Pi.cc = simd_or(tmp47, struct_Pi.cc);
        bytetest_e2 = simd_and(tmp18, tmp6);
        bytetest_b8 = simd_and(tmp38, tmp24);
        bytetest_89_89 = simd_and(tmp19, tmp40);
        tmp48 = simd_and(tmp43, bytetest_89_89);
        struct_Pi.cc = simd_or(tmp48, struct_Pi.cc);
        bytetest_e2 = simd_and(tmp18, tmp6);
        bytetest_b8 = simd_and(tmp38, tmp24);
        tmp49 = simd_andc(tmp34, tmp20);
        bytetest_8c_8c = simd_and(tmp19, tmp49);
        tmp50 = simd_and(tmp43, bytetest_8c_8c);
        struct_Pi.cc = simd_or(tmp50, struct_Pi.cc);
        bytetest_e2 = simd_and(tmp18, tmp6);
        bytetest_b8 = simd_and(tmp38, tmp24);
        bytetest_9c_9c = simd_and(tmp23, tmp49);
        tmp51 = simd_and(tmp43, bytetest_9c_9c);
        struct_Pi.cc = simd_or(tmp51, struct_Pi.cc);
        bytetest_e2 = simd_and(tmp18, tmp6);
        bytetest_b8 = simd_and(tmp38, tmp24);
        bytetest_a0_a0 = simd_andc(tmp9, tmp21);
        tmp52 = simd_and(tmp43, bytetest_a0_a0);
        struct_Pi.cc = simd_or(tmp52, struct_Pi.cc);
  }
  CarryArray<5, 0> carryQ;
  };

  struct Po {
  Po() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Po & struct_Po) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_21_23, tmp7, tmp8;
		BitBlock bytetest_25_27, tmp9, tmp10, tmp11, bytetest_2a_2a, tmp12, tmp13;
		BitBlock bytetest_2c_2c, tmp14, bytetest_2e_2f, tmp15, tmp16, tmp17;
		BitBlock bytetest_3a_3b, tmp18, tmp19, tmp20, tmp21, tmp22, tmp23, tmp24;
		BitBlock tmp25, bytetest_3f_40, tmp26, tmp27, tmp28, bytetest_5c_5c, tmp29;
		BitBlock tmp30, tmp31, bytetest_c2, tmp32, tmp33, tmp34, tmp35, bytetest_a1_a1;
		BitBlock tmp36, tmp37, tmp38, tmp39, tmp40, tmp41, bytetest_a7_a7, tmp42;
		BitBlock tmp43, tmp44, bytetest_b6_b7, tmp45, bytetest_bf_bf, tmp46, tmp47;
		BitBlock bytetest_cd, tmp48, bytetest_be_be, tmp49, tmp50, tmp51, bytetest_ce;
		BitBlock tmp52, bytetest_87_87, tmp53, tmp54, tmp55, tmp56, tmp57, bytetest_d5;
		BitBlock tmp58, tmp59, tmp60, bytetest_9a_9f, tmp61, tmp62, tmp63, tmp64;
		BitBlock bytetest_d6, tmp65, bytetest_89_89, tmp66, tmp67, tmp68, bytetest_d7;
		BitBlock bytetest_80_80, tmp69, tmp70, tmp71, tmp72, bytetest_83_83, tmp73;
		BitBlock bytetest_86_86, tmp74, tmp75, tmp76, tmp77, bytetest_b3_b4, tmp78;
		BitBlock tmp79, bytetest_d8, tmp80, tmp81, tmp82, bytetest_89_8a, tmp83, tmp84;
		BitBlock tmp85, tmp86, bytetest_8c_8d, tmp87, tmp88, bytetest_9b_9b, tmp89;
		BitBlock bytetest_9e_9f, tmp90, bytetest_d9, tmp91, tmp92, tmp93;
		BitBlock bytetest_aa_ad, tmp94, tmp95, tmp96, bytetest_db, tmp97;
		BitBlock bytetest_94_94, tmp98, tmp99, tmp100, bytetest_dc, tmp101, tmp102;
		BitBlock bytetest_80_8d, tmp103, tmp104, tmp105, bytetest_df, tmp106, tmp107;
		BitBlock tmp108, bytetest_b7_b9, tmp109, tmp110, tmp111, tmp112, bytetest_e0;
		BitBlock bytetest_a0, tmp113, bytetest_b0_be, tmp114, tmp115, tmp116, tmp117;
		BitBlock tmp118, bytetest_a1, bytetest_9e_9e, tmp119, tmp120, tmp121;
		BitBlock bytetest_a5, tmp122, bytetest_a4_a5, tmp123, tmp124, tmp125;
		BitBlock bytetest_b0_b0, tmp126, bytetest_ab, tmp127, tmp128, tmp129;
		BitBlock bytetest_b7, bytetest_b4_b4, tmp130, tmp131, tmp132, bytetest_b9;
		BitBlock bytetest_8f_8f, tmp133, tmp134, tmp135, bytetest_9a_9b, tmp136;
		BitBlock bytetest_bc, tmp137, tmp138, tmp139, tmp140, bytetest_84_92, tmp141;
		BitBlock tmp142, tmp143, tmp144, bytetest_be, bytetest_85_85, tmp145, tmp146;
		BitBlock tmp147, bytetest_bf, tmp148, tmp149, bytetest_90_94, tmp150, tmp151;
		BitBlock tmp152, tmp153, bytetest_99_9a, tmp154, bytetest_e1, bytetest_81;
		BitBlock tmp155, bytetest_8a_8f, tmp156, tmp157, tmp158, tmp159, tmp160;
		BitBlock bytetest_83, bytetest_bb_bb, tmp161, tmp162, tmp163, bytetest_8d;
		BitBlock tmp164, tmp165, bytetest_a0_a8, tmp166, tmp167, tmp168, bytetest_99;
		BitBlock tmp169, bytetest_ad_ae, tmp170, tmp171, tmp172, bytetest_9b, tmp173;
		BitBlock bytetest_ab_ad, tmp174, tmp175, tmp176, bytetest_9c, tmp177;
		BitBlock bytetest_b5_b6, tmp178, tmp179, tmp180, bytetest_9f, tmp181;
		BitBlock bytetest_94_96, tmp182, tmp183, tmp184, bytetest_98_9a, tmp185;
		BitBlock tmp186, bytetest_80_85, tmp187, tmp188, tmp189, tmp190, tmp191;
		BitBlock tmp192, bytetest_87_8a, tmp193, bytetest_84_85, tmp194, tmp195;
		BitBlock tmp196, bytetest_a8, tmp197, tmp198, tmp199, bytetest_aa, tmp200;
		BitBlock bytetest_a0_a6, tmp201, tmp202, tmp203, bytetest_a8_ad, tmp204;
		BitBlock bytetest_ad, tmp205, tmp206, tmp207, tmp208, tmp209, bytetest_9a_a0;
		BitBlock tmp210, tmp211, tmp212, bytetest_af, bytetest_bc_bf, tmp213, tmp214;
		BitBlock tmp215, bytetest_b0, tmp216, bytetest_bb_bf, tmp217, tmp218, tmp219;
		BitBlock bytetest_b1, bytetest_be_bf, tmp220, tmp221, tmp222, bytetest_b3;
		BitBlock bytetest_80_87, tmp223, tmp224, tmp225, bytetest_93_93, tmp226;
		BitBlock bytetest_e2, bytetest_80, bytetest_96_97, tmp227, tmp228, tmp229;
		BitBlock tmp230, tmp231, bytetest_a0_a7, tmp232, bytetest_b0_b8, tmp233;
		BitBlock tmp234, tmp235, bytetest_bb_be, tmp236, tmp237, bytetest_81_83;
		BitBlock tmp238, tmp239, tmp240, tmp241, tmp242, tmp243, tmp244;
		BitBlock bytetest_87_91, tmp245, tmp246, tmp247, tmp248, bytetest_95_9e;
		BitBlock tmp249, tmp250, bytetest_b9_bc, tmp251, tmp252, tmp253, tmp254;
		BitBlock bytetest_b5, tmp255, tmp256, tmp257, bytetest_b8, bytetest_80_81;
		BitBlock tmp258, tmp259, tmp260, tmp261, tmp262, bytetest_86_88, tmp263;
		BitBlock bytetest_8b_8b, tmp264, tmp265, tmp266, bytetest_8e_96, tmp267;
		BitBlock tmp268, bytetest_98_99, tmp269, tmp270, tmp271, tmp272;
		BitBlock bytetest_aa_ae, tmp273, bytetest_b0_b9, tmp274, bytetest_e3, tmp275;
		BitBlock tmp276, tmp277, tmp278, tmp279, bytetest_bd_bd, tmp280, tmp281;
		BitBlock tmp282, tmp283, bytetest_ea, bytetest_93, tmp284, tmp285, tmp286;
		BitBlock tmp287, tmp288, bytetest_98, tmp289, bytetest_8d_8f, tmp290, tmp291;
		BitBlock tmp292, bytetest_b3_b3, tmp293, tmp294, tmp295, tmp296;
		BitBlock bytetest_b2_b7, tmp297, tmp298, tmp299, bytetest_b4_b7, tmp300;
		BitBlock tmp301, tmp302, bytetest_a3, bytetest_8e_8f, tmp303, tmp304, tmp305;
		BitBlock tmp306, bytetest_b8_ba, tmp307, bytetest_a4, bytetest_ae_af, tmp308;
		BitBlock tmp309, tmp310, bytetest_9f_9f, tmp311, tmp312, tmp313, bytetest_a7;
		BitBlock tmp314, tmp315, bytetest_81_8d, tmp316, tmp317, tmp318, tmp319;
		BitBlock bytetest_a9, bytetest_9c_9f, tmp320, tmp321, tmp322, tmp323, tmp324;
		BitBlock tmp325, bytetest_b0_b1, tmp326, bytetest_ab_ab, tmp327, tmp328;
		BitBlock tmp329, bytetest_ef, bytetest_90_96, tmp330, tmp331, tmp332, tmp333;
		BitBlock tmp334, bytetest_99_99, tmp335, tmp336, tmp337, bytetest_85_86;
		BitBlock tmp338, tmp339, tmp340, bytetest_89_8c, tmp341, tmp342;
		BitBlock bytetest_90_92, tmp343, bytetest_94_97, tmp344, tmp345, tmp346;
		BitBlock tmp347, tmp348, bytetest_9f_a1, tmp349, bytetest_a8_a8, tmp350;
		BitBlock bytetest_aa_ab, tmp351, tmp352, tmp353, tmp354, bytetest_85_87;
		BitBlock tmp355, bytetest_8a_8a, tmp356, bytetest_8c_8c, tmp357, tmp358;
		BitBlock tmp359, tmp360, bytetest_9f_a0, tmp361, bytetest_bc_bc, tmp362;
		BitBlock bytetest_bd, tmp363, tmp364, tmp365, tmp366, tmp367, bytetest_f0;
		BitBlock bytetest_90, bytetest_84, bytetest_80_82, tmp368, tmp369, tmp370;
		BitBlock tmp371, tmp372, tmp373, tmp374, bytetest_8e, tmp375, tmp376, tmp377;
		BitBlock bytetest_8f, bytetest_90_90, tmp378, tmp379, tmp380, bytetest_97_97;
		BitBlock tmp381, tmp382, tmp383, tmp384, tmp385, tmp386, tmp387;
		BitBlock bytetest_90_98, tmp388, tmp389, tmp390, tmp391, bytetest_ac;
		BitBlock bytetest_b9_bf, tmp392, tmp393, tmp394, bytetest_91, tmp395;
		BitBlock bytetest_87_8d, tmp396, tmp397, tmp398, tmp399, tmp400, bytetest_82;
		BitBlock bytetest_bb_bc, tmp401, tmp402, tmp403, tmp404, tmp405, tmp406;
		BitBlock tmp407, tmp408, bytetest_85, bytetest_80_83, tmp409, tmp410, tmp411;
		BitBlock bytetest_87, tmp412, bytetest_85_88, tmp413, tmp414, tmp415;
		BitBlock bytetest_92, bytetest_b0_b3, tmp416, tmp417, tmp418, tmp419, tmp420;




        struct_Po.cc = simd<1>::constant<0>();
        tmp1 = simd_or(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp2, tmp1);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(tmp3, tmp4);
        tmp6 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        bytetest_21_23 = simd_and(tmp5, tmp6);
        struct_Po.cc = simd_or(bytetest_21_23, struct_Po.cc);
        tmp7 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp8 = simd_and(tmp3, tmp7);
        bytetest_25_27 = simd_and(tmp8, tmp6);
        struct_Po.cc = simd_or(bytetest_25_27, struct_Po.cc);
        tmp9 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp10 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp11 = simd_and(tmp9, tmp10);
        bytetest_2a_2a = simd_and(tmp3, tmp11);
        struct_Po.cc = simd_or(bytetest_2a_2a, struct_Po.cc);
        tmp12 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp13 = simd_andc(tmp12, tmp6);
        bytetest_2c_2c = simd_and(tmp3, tmp13);
        struct_Po.cc = simd_or(bytetest_2c_2c, struct_Po.cc);
        tmp14 = simd_and(tmp12, basis_bits.bit_6);
        bytetest_2e_2f = simd_and(tmp3, tmp14);
        struct_Po.cc = simd_or(bytetest_2e_2f, struct_Po.cc);
        tmp15 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp16 = simd_andc(tmp15, tmp1);
        tmp17 = simd_and(tmp9, basis_bits.bit_6);
        bytetest_3a_3b = simd_and(tmp16, tmp17);
        struct_Po.cc = simd_or(bytetest_3a_3b, struct_Po.cc);
        tmp18 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp19 = simd_or(tmp4, tmp6);
        tmp20 = simd_or(tmp18, tmp19);
        tmp21 = simd_not(tmp20);
        tmp22 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp23 = simd_and(tmp12, tmp22);
        tmp24 = simd_and(tmp15, tmp23);
        tmp25 = simd_or(simd_and(basis_bits.bit_1, tmp21), simd_andc(tmp24, basis_bits.bit_1));
        bytetest_3f_40 = simd_andc(tmp25, basis_bits.bit_0);
        struct_Po.cc = simd_or(bytetest_3f_40, struct_Po.cc);
        tmp26 = simd_andc(basis_bits.bit_1, basis_bits.bit_0);
        tmp27 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp28 = simd_and(tmp26, tmp27);
        bytetest_5c_5c = simd_and(tmp28, tmp13);
        struct_Po.cc = simd_or(bytetest_5c_5c, struct_Po.cc);
        tmp29 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp30 = simd_andc(tmp29, tmp18);
        tmp31 = simd_andc(tmp10, tmp4);
        bytetest_c2 = simd_and(tmp30, tmp31);
        tmp32 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp33 = simd_and(tmp32, tmp2);
        tmp34 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp35 = simd_andc(tmp34, tmp4);
        bytetest_a1_a1 = simd_and(tmp33, tmp35);
        tmp36 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp36, carryQ.get_carry_in(0), tmp37));
        tmp38 = simd_and(tmp37, bytetest_c2);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp38, carryQ.get_carry_in(1), tmp39));
        tmp40 = simd_and(tmp39, bytetest_a1_a1);
        struct_Po.cc = simd_or(tmp40, struct_Po.cc);
        bytetest_c2 = simd_and(tmp30, tmp31);
        tmp41 = simd_and(tmp7, tmp22);
        bytetest_a7_a7 = simd_and(tmp33, tmp41);
        tmp42 = simd_and(tmp39, bytetest_a7_a7);
        struct_Po.cc = simd_or(tmp42, struct_Po.cc);
        bytetest_c2 = simd_and(tmp30, tmp31);
        tmp43 = simd_and(tmp32, tmp15);
        tmp44 = simd_and(tmp7, basis_bits.bit_6);
        bytetest_b6_b7 = simd_and(tmp43, tmp44);
        tmp45 = simd_and(tmp39, bytetest_b6_b7);
        struct_Po.cc = simd_or(tmp45, struct_Po.cc);
        bytetest_c2 = simd_and(tmp30, tmp31);
        bytetest_bf_bf = simd_and(tmp43, tmp23);
        tmp46 = simd_and(tmp39, bytetest_bf_bf);
        struct_Po.cc = simd_or(tmp46, struct_Po.cc);
        tmp47 = simd_and(tmp12, tmp34);
        bytetest_cd = simd_and(tmp30, tmp47);
        tmp48 = simd_and(tmp12, tmp10);
        bytetest_be_be = simd_and(tmp43, tmp48);
        tmp49 = simd_and(tmp37, bytetest_cd);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp49, carryQ.get_carry_in(2), tmp50));
        tmp51 = simd_and(tmp50, bytetest_be_be);
        struct_Po.cc = simd_or(tmp51, struct_Po.cc);
        bytetest_ce = simd_and(tmp30, tmp48);
        tmp52 = simd_andc(tmp32, tmp18);
        bytetest_87_87 = simd_and(tmp52, tmp41);
        tmp53 = simd_and(tmp37, bytetest_ce);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp53, carryQ.get_carry_in(3), tmp54));
        tmp55 = simd_and(tmp54, bytetest_87_87);
        struct_Po.cc = simd_or(tmp55, struct_Po.cc);
        tmp56 = simd_and(tmp29, tmp27);
        tmp57 = simd_and(tmp7, tmp34);
        bytetest_d5 = simd_and(tmp56, tmp57);
        tmp58 = simd_and(tmp32, tmp27);
        tmp59 = simd_and(tmp58, basis_bits.bit_4);
        tmp60 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
        bytetest_9a_9f = simd_and(tmp59, tmp60);
        tmp61 = simd_and(tmp37, bytetest_d5);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp61, carryQ.get_carry_in(4), tmp62));
        tmp63 = simd_and(tmp62, bytetest_9a_9f);
        struct_Po.cc = simd_or(tmp63, struct_Po.cc);
        tmp64 = simd_and(tmp7, tmp10);
        bytetest_d6 = simd_and(tmp56, tmp64);
        tmp65 = simd_and(tmp9, tmp34);
        bytetest_89_89 = simd_and(tmp52, tmp65);
        tmp66 = simd_and(tmp37, bytetest_d6);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp66, carryQ.get_carry_in(5), tmp67));
        tmp68 = simd_and(tmp67, bytetest_89_89);
        struct_Po.cc = simd_or(tmp68, struct_Po.cc);
        bytetest_d7 = simd_and(tmp56, tmp41);
        bytetest_80_80 = simd_andc(tmp52, tmp19);
        tmp69 = simd_and(tmp37, bytetest_d7);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp69, carryQ.get_carry_in(6), tmp70));
        tmp71 = simd_and(tmp70, bytetest_80_80);
        struct_Po.cc = simd_or(tmp71, struct_Po.cc);
        bytetest_d7 = simd_and(tmp56, tmp41);
        tmp72 = simd_andc(tmp22, tmp4);
        bytetest_83_83 = simd_and(tmp52, tmp72);
        tmp73 = simd_and(tmp70, bytetest_83_83);
        struct_Po.cc = simd_or(tmp73, struct_Po.cc);
        bytetest_d7 = simd_and(tmp56, tmp41);
        bytetest_86_86 = simd_and(tmp52, tmp64);
        tmp74 = simd_and(tmp70, bytetest_86_86);
        struct_Po.cc = simd_or(tmp74, struct_Po.cc);
        bytetest_d7 = simd_and(tmp56, tmp41);
        tmp75 = simd_andc(tmp43, basis_bits.bit_4);
        tmp76 = simd_not(tmp6);
        tmp77 = simd_or(simd_and(basis_bits.bit_5, tmp76), simd_andc(tmp22, basis_bits.bit_5));
        bytetest_b3_b4 = simd_and(tmp75, tmp77);
        tmp78 = simd_and(tmp70, bytetest_b3_b4);
        struct_Po.cc = simd_or(tmp78, struct_Po.cc);
        tmp79 = simd_andc(tmp9, tmp6);
        bytetest_d8 = simd_and(tmp56, tmp79);
        tmp80 = simd_and(tmp52, tmp9);
        tmp81 = simd_not(basis_bits.bit_7);
        tmp82 = simd_or(simd_and(basis_bits.bit_6, tmp81), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
        bytetest_89_8a = simd_and(tmp80, tmp82);
        tmp83 = simd_and(tmp37, bytetest_d8);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp83, carryQ.get_carry_in(7), tmp84));
        tmp85 = simd_and(tmp84, bytetest_89_8a);
        struct_Po.cc = simd_or(tmp85, struct_Po.cc);
        bytetest_d8 = simd_and(tmp56, tmp79);
        tmp86 = simd_andc(tmp12, basis_bits.bit_6);
        bytetest_8c_8d = simd_and(tmp52, tmp86);
        tmp87 = simd_and(tmp84, bytetest_8c_8d);
        struct_Po.cc = simd_or(tmp87, struct_Po.cc);
        bytetest_d8 = simd_and(tmp56, tmp79);
        tmp88 = simd_and(tmp9, tmp22);
        bytetest_9b_9b = simd_and(tmp58, tmp88);
        tmp89 = simd_and(tmp84, bytetest_9b_9b);
        struct_Po.cc = simd_or(tmp89, struct_Po.cc);
        bytetest_d8 = simd_and(tmp56, tmp79);
        bytetest_9e_9f = simd_and(tmp58, tmp14);
        tmp90 = simd_and(tmp84, bytetest_9e_9f);
        struct_Po.cc = simd_or(tmp90, struct_Po.cc);
        bytetest_d9 = simd_and(tmp56, tmp65);
        tmp91 = simd_and(tmp33, basis_bits.bit_4);
        tmp92 = simd_not(basis_bits.bit_6);
        tmp93 = simd_or(simd_and(basis_bits.bit_5, tmp92), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        bytetest_aa_ad = simd_and(tmp91, tmp93);
        tmp94 = simd_and(tmp37, bytetest_d9);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(tmp94, carryQ.get_carry_in(8), tmp95));
        tmp96 = simd_and(tmp95, bytetest_aa_ad);
        struct_Po.cc = simd_or(tmp96, struct_Po.cc);
        bytetest_db = simd_and(tmp56, tmp88);
        tmp97 = simd_andc(tmp7, tmp6);
        bytetest_94_94 = simd_and(tmp58, tmp97);
        tmp98 = simd_and(tmp37, bytetest_db);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(tmp98, carryQ.get_carry_in(9), tmp99));
        tmp100 = simd_and(tmp99, bytetest_94_94);
        struct_Po.cc = simd_or(tmp100, struct_Po.cc);
        bytetest_dc = simd_and(tmp56, tmp13);
        tmp101 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp102 = simd_and(basis_bits.bit_4, tmp101);
        bytetest_80_8d = simd_andc(tmp52, tmp102);
        tmp103 = simd_and(tmp37, bytetest_dc);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(tmp103, carryQ.get_carry_in(10), tmp104));
        tmp105 = simd_and(tmp104, bytetest_80_8d);
        struct_Po.cc = simd_or(tmp105, struct_Po.cc);
        bytetest_df = simd_and(tmp56, tmp23);
        tmp106 = simd_not(tmp60);
        tmp107 = simd_and(basis_bits.bit_5, tmp22);
        tmp108 = simd_or(simd_and(basis_bits.bit_4, tmp106), simd_andc(tmp107, basis_bits.bit_4));
        bytetest_b7_b9 = simd_and(tmp43, tmp108);
        tmp109 = simd_and(tmp37, bytetest_df);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(tmp109, carryQ.get_carry_in(11), tmp110));
        tmp111 = simd_and(tmp110, bytetest_b7_b9);
        struct_Po.cc = simd_or(tmp111, struct_Po.cc);
        tmp112 = simd_and(tmp29, tmp2);
        bytetest_e0 = simd_andc(tmp112, tmp19);
        bytetest_a0 = simd_andc(tmp33, tmp19);
        tmp113 = simd_and(basis_bits.bit_4, tmp107);
        bytetest_b0_be = simd_andc(tmp43, tmp113);
        tmp114 = simd_and(tmp37, bytetest_e0);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(tmp114, carryQ.get_carry_in(12), tmp115));
        tmp116 = simd_and(tmp115, bytetest_a0);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(tmp116, carryQ.get_carry_in(13), tmp117));
        tmp118 = simd_and(tmp117, bytetest_b0_be);
        struct_Po.cc = simd_or(tmp118, struct_Po.cc);
        bytetest_e0 = simd_andc(tmp112, tmp19);
        bytetest_a1 = simd_and(tmp33, tmp35);
        bytetest_9e_9e = simd_and(tmp58, tmp48);
        tmp119 = simd_and(tmp115, bytetest_a1);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(tmp119, carryQ.get_carry_in(14), tmp120));
        tmp121 = simd_and(tmp120, bytetest_9e_9e);
        struct_Po.cc = simd_or(tmp121, struct_Po.cc);
        bytetest_e0 = simd_andc(tmp112, tmp19);
        bytetest_a5 = simd_and(tmp33, tmp57);
        tmp122 = simd_andc(tmp7, basis_bits.bit_6);
        bytetest_a4_a5 = simd_and(tmp33, tmp122);
        tmp123 = simd_and(tmp115, bytetest_a5);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(tmp123, carryQ.get_carry_in(15), tmp124));
        tmp125 = simd_and(tmp124, bytetest_a4_a5);
        struct_Po.cc = simd_or(tmp125, struct_Po.cc);
        bytetest_e0 = simd_andc(tmp112, tmp19);
        bytetest_a5 = simd_and(tmp33, tmp57);
        bytetest_b0_b0 = simd_andc(tmp43, tmp19);
        tmp126 = simd_and(tmp124, bytetest_b0_b0);
        struct_Po.cc = simd_or(tmp126, struct_Po.cc);
        bytetest_e0 = simd_andc(tmp112, tmp19);
        bytetest_ab = simd_and(tmp33, tmp88);
        bytetest_b0_b0 = simd_andc(tmp43, tmp19);
        tmp127 = simd_and(tmp115, bytetest_ab);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(tmp127, carryQ.get_carry_in(16), tmp128));
        tmp129 = simd_and(tmp128, bytetest_b0_b0);
        struct_Po.cc = simd_or(tmp129, struct_Po.cc);
        bytetest_e0 = simd_andc(tmp112, tmp19);
        bytetest_b7 = simd_and(tmp43, tmp41);
        bytetest_b4_b4 = simd_and(tmp43, tmp97);
        tmp130 = simd_and(tmp115, bytetest_b7);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(tmp130, carryQ.get_carry_in(17), tmp131));
        tmp132 = simd_and(tmp131, bytetest_b4_b4);
        struct_Po.cc = simd_or(tmp132, struct_Po.cc);
        bytetest_e0 = simd_andc(tmp112, tmp19);
        bytetest_b9 = simd_and(tmp43, tmp65);
        bytetest_8f_8f = simd_and(tmp52, tmp23);
        tmp133 = simd_and(tmp115, bytetest_b9);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(tmp133, carryQ.get_carry_in(18), tmp134));
        tmp135 = simd_and(tmp134, bytetest_8f_8f);
        struct_Po.cc = simd_or(tmp135, struct_Po.cc);
        bytetest_e0 = simd_andc(tmp112, tmp19);
        bytetest_b9 = simd_and(tmp43, tmp65);
        bytetest_9a_9b = simd_and(tmp58, tmp17);
        tmp136 = simd_and(tmp134, bytetest_9a_9b);
        struct_Po.cc = simd_or(tmp136, struct_Po.cc);
        bytetest_e0 = simd_andc(tmp112, tmp19);
        bytetest_bc = simd_and(tmp43, tmp13);
        tmp137 = simd_andc(tmp32, basis_bits.bit_2);
        tmp138 = simd_or(tmp4, tmp22);
        tmp139 = simd_not(tmp138);
        tmp140 = simd_or(simd_and(basis_bits.bit_3, tmp139), simd_andc(tmp4, basis_bits.bit_3));
        bytetest_84_92 = simd_and(tmp137, tmp140);
        tmp141 = simd_and(tmp115, bytetest_bc);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(tmp141, carryQ.get_carry_in(19), tmp142));
        tmp143 = simd_and(tmp142, bytetest_84_92);
        struct_Po.cc = simd_or(tmp143, struct_Po.cc);
        bytetest_e0 = simd_andc(tmp112, tmp19);
        bytetest_bc = simd_and(tmp43, tmp13);
        bytetest_94_94 = simd_and(tmp58, tmp97);
        tmp144 = simd_and(tmp142, bytetest_94_94);
        struct_Po.cc = simd_or(tmp144, struct_Po.cc);
        bytetest_e0 = simd_andc(tmp112, tmp19);
        bytetest_be = simd_and(tmp43, tmp48);
        bytetest_85_85 = simd_and(tmp52, tmp57);
        tmp145 = simd_and(tmp115, bytetest_be);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(tmp145, carryQ.get_carry_in(20), tmp146));
        tmp147 = simd_and(tmp146, bytetest_85_85);
        struct_Po.cc = simd_or(tmp147, struct_Po.cc);
        bytetest_e0 = simd_andc(tmp112, tmp19);
        bytetest_bf = simd_and(tmp43, tmp23);
        tmp148 = simd_andc(tmp58, basis_bits.bit_4);
        tmp149 = simd_and(basis_bits.bit_5, tmp6);
        bytetest_90_94 = simd_andc(tmp148, tmp149);
        tmp150 = simd_and(tmp115, bytetest_bf);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(tmp150, carryQ.get_carry_in(21), tmp151));
        tmp152 = simd_and(tmp151, bytetest_90_94);
        struct_Po.cc = simd_or(tmp152, struct_Po.cc);
        bytetest_e0 = simd_andc(tmp112, tmp19);
        bytetest_bf = simd_and(tmp43, tmp23);
        tmp153 = simd_and(tmp58, tmp9);
        bytetest_99_9a = simd_and(tmp153, tmp82);
        tmp154 = simd_and(tmp151, bytetest_99_9a);
        struct_Po.cc = simd_or(tmp154, struct_Po.cc);
        bytetest_e1 = simd_and(tmp112, tmp35);
        bytetest_81 = simd_and(tmp52, tmp35);
        tmp155 = simd_and(tmp52, basis_bits.bit_4);
        bytetest_8a_8f = simd_and(tmp155, tmp60);
        tmp156 = simd_and(tmp37, bytetest_e1);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(tmp156, carryQ.get_carry_in(22), tmp157));
        tmp158 = simd_and(tmp157, bytetest_81);
        carryQ.cq[23] = carryout2carry(pablo_blk_Advance(tmp158, carryQ.get_carry_in(23), tmp159));
        tmp160 = simd_and(tmp159, bytetest_8a_8f);
        struct_Po.cc = simd_or(tmp160, struct_Po.cc);
        bytetest_e1 = simd_and(tmp112, tmp35);
        bytetest_83 = simd_and(tmp52, tmp72);
        bytetest_bb_bb = simd_and(tmp43, tmp88);
        tmp161 = simd_and(tmp157, bytetest_83);
        carryQ.cq[24] = carryout2carry(pablo_blk_Advance(tmp161, carryQ.get_carry_in(24), tmp162));
        tmp163 = simd_and(tmp162, bytetest_bb_bb);
        struct_Po.cc = simd_or(tmp163, struct_Po.cc);
        bytetest_e1 = simd_and(tmp112, tmp35);
        bytetest_8d = simd_and(tmp52, tmp47);
        tmp164 = simd_or(basis_bits.bit_5, tmp6);
        tmp165 = simd_and(basis_bits.bit_4, tmp164);
        bytetest_a0_a8 = simd_andc(tmp33, tmp165);
        tmp166 = simd_and(tmp157, bytetest_8d);
        carryQ.cq[25] = carryout2carry(pablo_blk_Advance(tmp166, carryQ.get_carry_in(25), tmp167));
        tmp168 = simd_and(tmp167, bytetest_a0_a8);
        struct_Po.cc = simd_or(tmp168, struct_Po.cc);
        bytetest_e1 = simd_and(tmp112, tmp35);
        bytetest_99 = simd_and(tmp58, tmp65);
        tmp169 = simd_and(tmp33, tmp12);
        bytetest_ad_ae = simd_and(tmp169, tmp82);
        tmp170 = simd_and(tmp157, bytetest_99);
        carryQ.cq[26] = carryout2carry(pablo_blk_Advance(tmp170, carryQ.get_carry_in(26), tmp171));
        tmp172 = simd_and(tmp171, bytetest_ad_ae);
        struct_Po.cc = simd_or(tmp172, struct_Po.cc);
        bytetest_e1 = simd_and(tmp112, tmp35);
        bytetest_9b = simd_and(tmp58, tmp88);
        tmp173 = simd_or(simd_and(basis_bits.bit_5, tmp92), simd_andc(tmp22, basis_bits.bit_5));
        bytetest_ab_ad = simd_and(tmp91, tmp173);
        tmp174 = simd_and(tmp157, bytetest_9b);
        carryQ.cq[27] = carryout2carry(pablo_blk_Advance(tmp174, carryQ.get_carry_in(27), tmp175));
        tmp176 = simd_and(tmp175, bytetest_ab_ad);
        struct_Po.cc = simd_or(tmp176, struct_Po.cc);
        bytetest_e1 = simd_and(tmp112, tmp35);
        bytetest_9c = simd_and(tmp58, tmp13);
        tmp177 = simd_and(tmp43, tmp7);
        bytetest_b5_b6 = simd_and(tmp177, tmp82);
        tmp178 = simd_and(tmp157, bytetest_9c);
        carryQ.cq[28] = carryout2carry(pablo_blk_Advance(tmp178, carryQ.get_carry_in(28), tmp179));
        tmp180 = simd_and(tmp179, bytetest_b5_b6);
        struct_Po.cc = simd_or(tmp180, struct_Po.cc);
        bytetest_e1 = simd_and(tmp112, tmp35);
        bytetest_9f = simd_and(tmp58, tmp23);
        tmp181 = simd_and(tmp58, tmp7);
        bytetest_94_96 = simd_andc(tmp181, tmp22);
        tmp182 = simd_and(tmp157, bytetest_9f);
        carryQ.cq[29] = carryout2carry(pablo_blk_Advance(tmp182, carryQ.get_carry_in(29), tmp183));
        tmp184 = simd_and(tmp183, bytetest_94_96);
        struct_Po.cc = simd_or(tmp184, struct_Po.cc);
        bytetest_e1 = simd_and(tmp112, tmp35);
        bytetest_9f = simd_and(tmp58, tmp23);
        bytetest_98_9a = simd_andc(tmp153, tmp22);
        tmp185 = simd_and(tmp183, bytetest_98_9a);
        struct_Po.cc = simd_or(tmp185, struct_Po.cc);
        bytetest_e1 = simd_and(tmp112, tmp35);
        bytetest_a0 = simd_andc(tmp33, tmp19);
        tmp186 = simd_andc(tmp52, basis_bits.bit_4);
        bytetest_80_85 = simd_andc(tmp186, tmp101);
        tmp187 = simd_and(tmp157, bytetest_a0);
        carryQ.cq[30] = carryout2carry(pablo_blk_Advance(tmp187, carryQ.get_carry_in(30), tmp188));
        tmp189 = simd_and(tmp188, bytetest_80_85);
        struct_Po.cc = simd_or(tmp189, struct_Po.cc);
        bytetest_e1 = simd_and(tmp112, tmp35);
        bytetest_a0 = simd_andc(tmp33, tmp19);
        tmp190 = simd_or(basis_bits.bit_5, tmp22);
        tmp191 = simd_not(tmp190);
        tmp192 = simd_or(simd_and(basis_bits.bit_4, tmp191), simd_andc(tmp107, basis_bits.bit_4));
        bytetest_87_8a = simd_and(tmp52, tmp192);
        tmp193 = simd_and(tmp188, bytetest_87_8a);
        struct_Po.cc = simd_or(tmp193, struct_Po.cc);
        bytetest_e1 = simd_and(tmp112, tmp35);
        bytetest_a5 = simd_and(tmp33, tmp57);
        bytetest_84_85 = simd_and(tmp52, tmp122);
        tmp194 = simd_and(tmp157, bytetest_a5);
        carryQ.cq[31] = carryout2carry(pablo_blk_Advance(tmp194, carryQ.get_carry_in(31), tmp195));
        tmp196 = simd_and(tmp195, bytetest_84_85);
        struct_Po.cc = simd_or(tmp196, struct_Po.cc);
        bytetest_e1 = simd_and(tmp112, tmp35);
        bytetest_a8 = simd_and(tmp33, tmp79);
        bytetest_9e_9f = simd_and(tmp58, tmp14);
        tmp197 = simd_and(tmp157, bytetest_a8);
        carryQ.cq[32] = carryout2carry(pablo_blk_Advance(tmp197, carryQ.get_carry_in(32), tmp198));
        tmp199 = simd_and(tmp198, bytetest_9e_9f);
        struct_Po.cc = simd_or(tmp199, struct_Po.cc);
        bytetest_e1 = simd_and(tmp112, tmp35);
        bytetest_aa = simd_and(tmp33, tmp11);
        tmp200 = simd_andc(tmp33, basis_bits.bit_4);
        bytetest_a0_a6 = simd_andc(tmp200, tmp107);
        tmp201 = simd_and(tmp157, bytetest_aa);
        carryQ.cq[33] = carryout2carry(pablo_blk_Advance(tmp201, carryQ.get_carry_in(33), tmp202));
        tmp203 = simd_and(tmp202, bytetest_a0_a6);
        struct_Po.cc = simd_or(tmp203, struct_Po.cc);
        bytetest_e1 = simd_and(tmp112, tmp35);
        bytetest_aa = simd_and(tmp33, tmp11);
        bytetest_a8_ad = simd_andc(tmp91, tmp101);
        tmp204 = simd_and(tmp202, bytetest_a8_ad);
        struct_Po.cc = simd_or(tmp204, struct_Po.cc);
        bytetest_e1 = simd_and(tmp112, tmp35);
        bytetest_ad = simd_and(tmp33, tmp47);
        tmp205 = simd_or(basis_bits.bit_3, tmp19);
        tmp206 = simd_not(tmp205);
        tmp207 = simd_and(basis_bits.bit_4, tmp60);
        tmp208 = simd_and(basis_bits.bit_3, tmp207);
        tmp209 = simd_or(simd_and(basis_bits.bit_2, tmp206), simd_andc(tmp208, basis_bits.bit_2));
        bytetest_9a_a0 = simd_and(tmp32, tmp209);
        tmp210 = simd_and(tmp157, bytetest_ad);
        carryQ.cq[34] = carryout2carry(pablo_blk_Advance(tmp210, carryQ.get_carry_in(34), tmp211));
        tmp212 = simd_and(tmp211, bytetest_9a_a0);
        struct_Po.cc = simd_or(tmp212, struct_Po.cc);
        bytetest_e1 = simd_and(tmp112, tmp35);
        bytetest_af = simd_and(tmp33, tmp23);
        bytetest_bc_bf = simd_and(tmp43, tmp12);
        tmp213 = simd_and(tmp157, bytetest_af);
        carryQ.cq[35] = carryout2carry(pablo_blk_Advance(tmp213, carryQ.get_carry_in(35), tmp214));
        tmp215 = simd_and(tmp214, bytetest_bc_bf);
        struct_Po.cc = simd_or(tmp215, struct_Po.cc);
        bytetest_e1 = simd_and(tmp112, tmp35);
        bytetest_b0 = simd_andc(tmp43, tmp19);
        tmp216 = simd_and(tmp43, basis_bits.bit_4);
        bytetest_bb_bf = simd_and(tmp216, tmp190);
        tmp217 = simd_and(tmp157, bytetest_b0);
        carryQ.cq[36] = carryout2carry(pablo_blk_Advance(tmp217, carryQ.get_carry_in(36), tmp218));
        tmp219 = simd_and(tmp218, bytetest_bb_bf);
        struct_Po.cc = simd_or(tmp219, struct_Po.cc);
        bytetest_e1 = simd_and(tmp112, tmp35);
        bytetest_b1 = simd_and(tmp43, tmp35);
        bytetest_be_bf = simd_and(tmp43, tmp14);
        tmp220 = simd_and(tmp157, bytetest_b1);
        carryQ.cq[37] = carryout2carry(pablo_blk_Advance(tmp220, carryQ.get_carry_in(37), tmp221));
        tmp222 = simd_and(tmp221, bytetest_be_bf);
        struct_Po.cc = simd_or(tmp222, struct_Po.cc);
        bytetest_e1 = simd_and(tmp112, tmp35);
        bytetest_b3 = simd_and(tmp43, tmp72);
        bytetest_80_87 = simd_andc(tmp52, basis_bits.bit_4);
        tmp223 = simd_and(tmp157, bytetest_b3);
        carryQ.cq[38] = carryout2carry(pablo_blk_Advance(tmp223, carryQ.get_carry_in(38), tmp224));
        tmp225 = simd_and(tmp224, bytetest_80_87);
        struct_Po.cc = simd_or(tmp225, struct_Po.cc);
        bytetest_e1 = simd_and(tmp112, tmp35);
        bytetest_b3 = simd_and(tmp43, tmp72);
        bytetest_93_93 = simd_and(tmp58, tmp72);
        tmp226 = simd_and(tmp224, bytetest_93_93);
        struct_Po.cc = simd_or(tmp226, struct_Po.cc);
        bytetest_e2 = simd_and(tmp112, tmp31);
        bytetest_80 = simd_andc(tmp52, tmp19);
        bytetest_96_97 = simd_and(tmp58, tmp44);
        tmp227 = simd_and(tmp37, bytetest_e2);
        carryQ.cq[39] = carryout2carry(pablo_blk_Advance(tmp227, carryQ.get_carry_in(39), tmp228));
        tmp229 = simd_and(tmp228, bytetest_80);
        carryQ.cq[40] = carryout2carry(pablo_blk_Advance(tmp229, carryQ.get_carry_in(40), tmp230));
        tmp231 = simd_and(tmp230, bytetest_96_97);
        struct_Po.cc = simd_or(tmp231, struct_Po.cc);
        bytetest_e2 = simd_and(tmp112, tmp31);
        bytetest_80 = simd_andc(tmp52, tmp19);
        bytetest_a0_a7 = simd_andc(tmp33, basis_bits.bit_4);
        tmp232 = simd_and(tmp230, bytetest_a0_a7);
        struct_Po.cc = simd_or(tmp232, struct_Po.cc);
        bytetest_e2 = simd_and(tmp112, tmp31);
        bytetest_80 = simd_andc(tmp52, tmp19);
        bytetest_b0_b8 = simd_andc(tmp43, tmp165);
        tmp233 = simd_and(tmp230, bytetest_b0_b8);
        struct_Po.cc = simd_or(tmp233, struct_Po.cc);
        bytetest_e2 = simd_and(tmp112, tmp31);
        bytetest_80 = simd_andc(tmp52, tmp19);
        tmp234 = simd_not(tmp22);
        tmp235 = simd_or(simd_and(basis_bits.bit_5, tmp234), simd_andc(tmp22, basis_bits.bit_5));
        bytetest_bb_be = simd_and(tmp216, tmp235);
        tmp236 = simd_and(tmp230, bytetest_bb_be);
        struct_Po.cc = simd_or(tmp236, struct_Po.cc);
        bytetest_e2 = simd_and(tmp112, tmp31);
        bytetest_81 = simd_and(tmp52, tmp35);
        tmp237 = simd_andc(tmp52, tmp4);
        bytetest_81_83 = simd_and(tmp237, tmp6);
        tmp238 = simd_and(tmp228, bytetest_81);
        carryQ.cq[41] = carryout2carry(pablo_blk_Advance(tmp238, carryQ.get_carry_in(41), tmp239));
        tmp240 = simd_and(tmp239, bytetest_81_83);
        struct_Po.cc = simd_or(tmp240, struct_Po.cc);
        bytetest_e2 = simd_and(tmp112, tmp31);
        bytetest_81 = simd_and(tmp52, tmp35);
        tmp241 = simd_or(tmp4, basis_bits.bit_6);
        tmp242 = simd_not(tmp241);
        tmp243 = simd_or(basis_bits.bit_4, tmp107);
        tmp244 = simd_or(simd_and(basis_bits.bit_3, tmp242), simd_andc(tmp243, basis_bits.bit_3));
        bytetest_87_91 = simd_and(tmp137, tmp244);
        tmp245 = simd_and(tmp239, bytetest_87_91);
        struct_Po.cc = simd_or(tmp245, struct_Po.cc);
        bytetest_e2 = simd_and(tmp112, tmp31);
        bytetest_81 = simd_and(tmp52, tmp35);
        bytetest_93_93 = simd_and(tmp58, tmp72);
        tmp246 = simd_and(tmp239, bytetest_93_93);
        struct_Po.cc = simd_or(tmp246, struct_Po.cc);
        bytetest_e2 = simd_and(tmp112, tmp31);
        bytetest_81 = simd_and(tmp52, tmp35);
        tmp247 = simd_not(tmp107);
        tmp248 = simd_or(simd_and(basis_bits.bit_4, tmp247), simd_andc(tmp149, basis_bits.bit_4));
        bytetest_95_9e = simd_and(tmp58, tmp248);
        tmp249 = simd_and(tmp239, bytetest_95_9e);
        struct_Po.cc = simd_or(tmp249, struct_Po.cc);
        bytetest_e2 = simd_and(tmp112, tmp31);
        bytetest_b3 = simd_and(tmp43, tmp72);
        tmp250 = simd_or(simd_and(basis_bits.bit_5, tmp76), simd_andc(tmp6, basis_bits.bit_5));
        bytetest_b9_bc = simd_and(tmp216, tmp250);
        tmp251 = simd_and(tmp228, bytetest_b3);
        carryQ.cq[42] = carryout2carry(pablo_blk_Advance(tmp251, carryQ.get_carry_in(42), tmp252));
        tmp253 = simd_and(tmp252, bytetest_b9_bc);
        struct_Po.cc = simd_or(tmp253, struct_Po.cc);
        bytetest_e2 = simd_and(tmp112, tmp31);
        bytetest_b3 = simd_and(tmp43, tmp72);
        bytetest_be_bf = simd_and(tmp43, tmp14);
        tmp254 = simd_and(tmp252, bytetest_be_bf);
        struct_Po.cc = simd_or(tmp254, struct_Po.cc);
        bytetest_e2 = simd_and(tmp112, tmp31);
        bytetest_b5 = simd_and(tmp43, tmp57);
        bytetest_b0_b0 = simd_andc(tmp43, tmp19);
        tmp255 = simd_and(tmp228, bytetest_b5);
        carryQ.cq[43] = carryout2carry(pablo_blk_Advance(tmp255, carryQ.get_carry_in(43), tmp256));
        tmp257 = simd_and(tmp256, bytetest_b0_b0);
        struct_Po.cc = simd_or(tmp257, struct_Po.cc);
        bytetest_e2 = simd_and(tmp112, tmp31);
        bytetest_b8 = simd_and(tmp43, tmp79);
        bytetest_80_81 = simd_andc(tmp52, tmp241);
        tmp258 = simd_and(tmp228, bytetest_b8);
        carryQ.cq[44] = carryout2carry(pablo_blk_Advance(tmp258, carryQ.get_carry_in(44), tmp259));
        tmp260 = simd_and(tmp259, bytetest_80_81);
        struct_Po.cc = simd_or(tmp260, struct_Po.cc);
        bytetest_e2 = simd_and(tmp112, tmp31);
        bytetest_b8 = simd_and(tmp43, tmp79);
        tmp261 = simd_not(tmp164);
        tmp262 = simd_or(simd_and(basis_bits.bit_4, tmp261), simd_andc(tmp101, basis_bits.bit_4));
        bytetest_86_88 = simd_and(tmp52, tmp262);
        tmp263 = simd_and(tmp259, bytetest_86_88);
        struct_Po.cc = simd_or(tmp263, struct_Po.cc);
        bytetest_e2 = simd_and(tmp112, tmp31);
        bytetest_b8 = simd_and(tmp43, tmp79);
        bytetest_8b_8b = simd_and(tmp52, tmp88);
        tmp264 = simd_and(tmp259, bytetest_8b_8b);
        struct_Po.cc = simd_or(tmp264, struct_Po.cc);
        bytetest_e2 = simd_and(tmp112, tmp31);
        bytetest_b8 = simd_and(tmp43, tmp79);
        tmp265 = simd_not(tmp243);
        tmp266 = simd_or(simd_and(basis_bits.bit_3, tmp265), simd_andc(tmp14, basis_bits.bit_3));
        bytetest_8e_96 = simd_and(tmp137, tmp266);
        tmp267 = simd_and(tmp259, bytetest_8e_96);
        struct_Po.cc = simd_or(tmp267, struct_Po.cc);
        bytetest_e2 = simd_and(tmp112, tmp31);
        bytetest_b8 = simd_and(tmp43, tmp79);
        tmp268 = simd_andc(tmp9, basis_bits.bit_6);
        bytetest_98_99 = simd_and(tmp58, tmp268);
        tmp269 = simd_and(tmp259, bytetest_98_99);
        struct_Po.cc = simd_or(tmp269, struct_Po.cc);
        bytetest_e2 = simd_and(tmp112, tmp31);
        bytetest_b8 = simd_and(tmp43, tmp79);
        bytetest_9b_9b = simd_and(tmp58, tmp88);
        tmp270 = simd_and(tmp259, bytetest_9b_9b);
        struct_Po.cc = simd_or(tmp270, struct_Po.cc);
        bytetest_e2 = simd_and(tmp112, tmp31);
        bytetest_b8 = simd_and(tmp43, tmp79);
        bytetest_9e_9f = simd_and(tmp58, tmp14);
        tmp271 = simd_and(tmp259, bytetest_9e_9f);
        struct_Po.cc = simd_or(tmp271, struct_Po.cc);
        bytetest_e2 = simd_and(tmp112, tmp31);
        bytetest_b8 = simd_and(tmp43, tmp79);
        tmp272 = simd_or(simd_and(basis_bits.bit_5, tmp234), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        bytetest_aa_ae = simd_and(tmp91, tmp272);
        tmp273 = simd_and(tmp259, bytetest_aa_ae);
        struct_Po.cc = simd_or(tmp273, struct_Po.cc);
        bytetest_e2 = simd_and(tmp112, tmp31);
        bytetest_b8 = simd_and(tmp43, tmp79);
        bytetest_b0_b9 = simd_andc(tmp43, tmp207);
        tmp274 = simd_and(tmp259, bytetest_b0_b9);
        struct_Po.cc = simd_or(tmp274, struct_Po.cc);
        bytetest_e3 = simd_and(tmp112, tmp72);
        bytetest_80 = simd_andc(tmp52, tmp19);
        bytetest_81_83 = simd_and(tmp237, tmp6);
        tmp275 = simd_and(tmp37, bytetest_e3);
        carryQ.cq[45] = carryout2carry(pablo_blk_Advance(tmp275, carryQ.get_carry_in(45), tmp276));
        tmp277 = simd_and(tmp276, bytetest_80);
        carryQ.cq[46] = carryout2carry(pablo_blk_Advance(tmp277, carryQ.get_carry_in(46), tmp278));
        tmp279 = simd_and(tmp278, bytetest_81_83);
        struct_Po.cc = simd_or(tmp279, struct_Po.cc);
        bytetest_e3 = simd_and(tmp112, tmp72);
        bytetest_80 = simd_andc(tmp52, tmp19);
        bytetest_bd_bd = simd_and(tmp43, tmp47);
        tmp280 = simd_and(tmp278, bytetest_bd_bd);
        struct_Po.cc = simd_or(tmp280, struct_Po.cc);
        bytetest_e3 = simd_and(tmp112, tmp72);
        bytetest_83 = simd_and(tmp52, tmp72);
        bytetest_bb_bb = simd_and(tmp43, tmp88);
        tmp281 = simd_and(tmp276, bytetest_83);
        carryQ.cq[47] = carryout2carry(pablo_blk_Advance(tmp281, carryQ.get_carry_in(47), tmp282));
        tmp283 = simd_and(tmp282, bytetest_bb_bb);
        struct_Po.cc = simd_or(tmp283, struct_Po.cc);
        bytetest_ea = simd_and(tmp112, tmp11);
        bytetest_93 = simd_and(tmp58, tmp72);
        bytetest_be_bf = simd_and(tmp43, tmp14);
        tmp284 = simd_and(tmp37, bytetest_ea);
        carryQ.cq[48] = carryout2carry(pablo_blk_Advance(tmp284, carryQ.get_carry_in(48), tmp285));
        tmp286 = simd_and(tmp285, bytetest_93);
        carryQ.cq[49] = carryout2carry(pablo_blk_Advance(tmp286, carryQ.get_carry_in(49), tmp287));
        tmp288 = simd_and(tmp287, bytetest_be_bf);
        struct_Po.cc = simd_or(tmp288, struct_Po.cc);
        bytetest_ea = simd_and(tmp112, tmp11);
        bytetest_98 = simd_and(tmp58, tmp79);
        tmp289 = simd_and(tmp52, tmp12);
        bytetest_8d_8f = simd_and(tmp289, tmp6);
        tmp290 = simd_and(tmp285, bytetest_98);
        carryQ.cq[50] = carryout2carry(pablo_blk_Advance(tmp290, carryQ.get_carry_in(50), tmp291));
        tmp292 = simd_and(tmp291, bytetest_8d_8f);
        struct_Po.cc = simd_or(tmp292, struct_Po.cc);
        bytetest_ea = simd_and(tmp112, tmp11);
        bytetest_99 = simd_and(tmp58, tmp65);
        bytetest_b3_b3 = simd_and(tmp43, tmp72);
        tmp293 = simd_and(tmp285, bytetest_99);
        carryQ.cq[51] = carryout2carry(pablo_blk_Advance(tmp293, carryQ.get_carry_in(51), tmp294));
        tmp295 = simd_and(tmp294, bytetest_b3_b3);
        struct_Po.cc = simd_or(tmp295, struct_Po.cc);
        bytetest_ea = simd_and(tmp112, tmp11);
        bytetest_99 = simd_and(tmp58, tmp65);
        bytetest_be_be = simd_and(tmp43, tmp48);
        tmp296 = simd_and(tmp294, bytetest_be_be);
        struct_Po.cc = simd_or(tmp296, struct_Po.cc);
        bytetest_ea = simd_and(tmp112, tmp11);
        bytetest_9b = simd_and(tmp58, tmp88);
        bytetest_b2_b7 = simd_and(tmp75, tmp60);
        tmp297 = simd_and(tmp285, bytetest_9b);
        carryQ.cq[52] = carryout2carry(pablo_blk_Advance(tmp297, carryQ.get_carry_in(52), tmp298));
        tmp299 = simd_and(tmp298, bytetest_b2_b7);
        struct_Po.cc = simd_or(tmp299, struct_Po.cc);
        bytetest_ea = simd_and(tmp112, tmp11);
        bytetest_a1 = simd_and(tmp33, tmp35);
        bytetest_b4_b7 = simd_and(tmp43, tmp7);
        tmp300 = simd_and(tmp285, bytetest_a1);
        carryQ.cq[53] = carryout2carry(pablo_blk_Advance(tmp300, carryQ.get_carry_in(53), tmp301));
        tmp302 = simd_and(tmp301, bytetest_b4_b7);
        struct_Po.cc = simd_or(tmp302, struct_Po.cc);
        bytetest_ea = simd_and(tmp112, tmp11);
        bytetest_a3 = simd_and(tmp33, tmp72);
        bytetest_8e_8f = simd_and(tmp52, tmp14);
        tmp303 = simd_and(tmp285, bytetest_a3);
        carryQ.cq[54] = carryout2carry(pablo_blk_Advance(tmp303, carryQ.get_carry_in(54), tmp304));
        tmp305 = simd_and(tmp304, bytetest_8e_8f);
        struct_Po.cc = simd_or(tmp305, struct_Po.cc);
        bytetest_ea = simd_and(tmp112, tmp11);
        bytetest_a3 = simd_and(tmp33, tmp72);
        tmp306 = simd_and(tmp43, tmp9);
        bytetest_b8_ba = simd_andc(tmp306, tmp22);
        tmp307 = simd_and(tmp304, bytetest_b8_ba);
        struct_Po.cc = simd_or(tmp307, struct_Po.cc);
        bytetest_ea = simd_and(tmp112, tmp11);
        bytetest_a4 = simd_and(tmp33, tmp97);
        bytetest_ae_af = simd_and(tmp33, tmp14);
        tmp308 = simd_and(tmp285, bytetest_a4);
        carryQ.cq[55] = carryout2carry(pablo_blk_Advance(tmp308, carryQ.get_carry_in(55), tmp309));
        tmp310 = simd_and(tmp309, bytetest_ae_af);
        struct_Po.cc = simd_or(tmp310, struct_Po.cc);
        bytetest_ea = simd_and(tmp112, tmp11);
        bytetest_a5 = simd_and(tmp33, tmp57);
        bytetest_9f_9f = simd_and(tmp58, tmp23);
        tmp311 = simd_and(tmp285, bytetest_a5);
        carryQ.cq[56] = carryout2carry(pablo_blk_Advance(tmp311, carryQ.get_carry_in(56), tmp312));
        tmp313 = simd_and(tmp312, bytetest_9f_9f);
        struct_Po.cc = simd_or(tmp313, struct_Po.cc);
        bytetest_ea = simd_and(tmp112, tmp11);
        bytetest_a7 = simd_and(tmp33, tmp41);
        tmp314 = simd_not(tmp101);
        tmp315 = simd_or(simd_and(basis_bits.bit_4, tmp314), simd_andc(tmp164, basis_bits.bit_4));
        bytetest_81_8d = simd_and(tmp52, tmp315);
        tmp316 = simd_and(tmp285, bytetest_a7);
        carryQ.cq[57] = carryout2carry(pablo_blk_Advance(tmp316, carryQ.get_carry_in(57), tmp317));
        tmp318 = simd_and(tmp317, bytetest_81_8d);
        struct_Po.cc = simd_or(tmp318, struct_Po.cc);
        bytetest_ea = simd_and(tmp112, tmp11);
        bytetest_a7 = simd_and(tmp33, tmp41);
        bytetest_9e_9f = simd_and(tmp58, tmp14);
        tmp319 = simd_and(tmp317, bytetest_9e_9f);
        struct_Po.cc = simd_or(tmp319, struct_Po.cc);
        bytetest_ea = simd_and(tmp112, tmp11);
        bytetest_a9 = simd_and(tmp33, tmp65);
        bytetest_9c_9f = simd_and(tmp58, tmp12);
        tmp320 = simd_and(tmp285, bytetest_a9);
        carryQ.cq[58] = carryout2carry(pablo_blk_Advance(tmp320, carryQ.get_carry_in(58), tmp321));
        tmp322 = simd_and(tmp321, bytetest_9c_9f);
        struct_Po.cc = simd_or(tmp322, struct_Po.cc);
        bytetest_ea = simd_and(tmp112, tmp11);
        bytetest_ab = simd_and(tmp33, tmp88);
        bytetest_9e_9f = simd_and(tmp58, tmp14);
        tmp323 = simd_and(tmp285, bytetest_ab);
        carryQ.cq[59] = carryout2carry(pablo_blk_Advance(tmp323, carryQ.get_carry_in(59), tmp324));
        tmp325 = simd_and(tmp324, bytetest_9e_9f);
        struct_Po.cc = simd_or(tmp325, struct_Po.cc);
        bytetest_ea = simd_and(tmp112, tmp11);
        bytetest_ab = simd_and(tmp33, tmp88);
        bytetest_b0_b1 = simd_andc(tmp43, tmp241);
        tmp326 = simd_and(tmp324, bytetest_b0_b1);
        struct_Po.cc = simd_or(tmp326, struct_Po.cc);
        bytetest_ea = simd_and(tmp112, tmp11);
        bytetest_af = simd_and(tmp33, tmp23);
        bytetest_ab_ab = simd_and(tmp33, tmp88);
        tmp327 = simd_and(tmp285, bytetest_af);
        carryQ.cq[60] = carryout2carry(pablo_blk_Advance(tmp327, carryQ.get_carry_in(60), tmp328));
        tmp329 = simd_and(tmp328, bytetest_ab_ab);
        struct_Po.cc = simd_or(tmp329, struct_Po.cc);
        bytetest_ef = simd_and(tmp112, tmp23);
        bytetest_b8 = simd_and(tmp43, tmp79);
        bytetest_90_96 = simd_andc(tmp148, tmp107);
        tmp330 = simd_and(tmp37, bytetest_ef);
        carryQ.cq[61] = carryout2carry(pablo_blk_Advance(tmp330, carryQ.get_carry_in(61), tmp331));
        tmp332 = simd_and(tmp331, bytetest_b8);
        carryQ.cq[62] = carryout2carry(pablo_blk_Advance(tmp332, carryQ.get_carry_in(62), tmp333));
        tmp334 = simd_and(tmp333, bytetest_90_96);
        struct_Po.cc = simd_or(tmp334, struct_Po.cc);
        bytetest_ef = simd_and(tmp112, tmp23);
        bytetest_b8 = simd_and(tmp43, tmp79);
        bytetest_99_99 = simd_and(tmp58, tmp65);
        tmp335 = simd_and(tmp333, bytetest_99_99);
        struct_Po.cc = simd_or(tmp335, struct_Po.cc);
        bytetest_ef = simd_and(tmp112, tmp23);
        bytetest_b8 = simd_and(tmp43, tmp79);
        bytetest_b0_b0 = simd_andc(tmp43, tmp19);
        tmp336 = simd_and(tmp333, bytetest_b0_b0);
        struct_Po.cc = simd_or(tmp336, struct_Po.cc);
        bytetest_ef = simd_and(tmp112, tmp23);
        bytetest_b9 = simd_and(tmp43, tmp65);
        tmp337 = simd_and(tmp52, tmp7);
        bytetest_85_86 = simd_and(tmp337, tmp82);
        tmp338 = simd_and(tmp331, bytetest_b9);
        carryQ.cq[63] = carryout2carry(pablo_blk_Advance(tmp338, carryQ.get_carry_in(63), tmp339));
        tmp340 = simd_and(tmp339, bytetest_85_86);
        struct_Po.cc = simd_or(tmp340, struct_Po.cc);
        bytetest_ef = simd_and(tmp112, tmp23);
        bytetest_b9 = simd_and(tmp43, tmp65);
        bytetest_89_8c = simd_and(tmp155, tmp250);
        tmp341 = simd_and(tmp339, bytetest_89_8c);
        struct_Po.cc = simd_or(tmp341, struct_Po.cc);
        bytetest_ef = simd_and(tmp112, tmp23);
        bytetest_b9 = simd_and(tmp43, tmp65);
        tmp342 = simd_andc(tmp58, tmp4);
        bytetest_90_92 = simd_andc(tmp342, tmp22);
        tmp343 = simd_and(tmp339, bytetest_90_92);
        struct_Po.cc = simd_or(tmp343, struct_Po.cc);
        bytetest_ef = simd_and(tmp112, tmp23);
        bytetest_b9 = simd_and(tmp43, tmp65);
        bytetest_94_97 = simd_and(tmp58, tmp7);
        tmp344 = simd_and(tmp339, bytetest_94_97);
        struct_Po.cc = simd_or(tmp344, struct_Po.cc);
        bytetest_ef = simd_and(tmp112, tmp23);
        bytetest_b9 = simd_and(tmp43, tmp65);
        tmp345 = simd_or(basis_bits.bit_3, tmp241);
        tmp346 = simd_not(tmp345);
        tmp347 = simd_and(basis_bits.bit_3, tmp23);
        tmp348 = simd_or(simd_and(basis_bits.bit_2, tmp346), simd_andc(tmp347, basis_bits.bit_2));
        bytetest_9f_a1 = simd_and(tmp32, tmp348);
        tmp349 = simd_and(tmp339, bytetest_9f_a1);
        struct_Po.cc = simd_or(tmp349, struct_Po.cc);
        bytetest_ef = simd_and(tmp112, tmp23);
        bytetest_b9 = simd_and(tmp43, tmp65);
        bytetest_a8_a8 = simd_and(tmp33, tmp79);
        tmp350 = simd_and(tmp339, bytetest_a8_a8);
        struct_Po.cc = simd_or(tmp350, struct_Po.cc);
        bytetest_ef = simd_and(tmp112, tmp23);
        bytetest_b9 = simd_and(tmp43, tmp65);
        bytetest_aa_ab = simd_and(tmp33, tmp17);
        tmp351 = simd_and(tmp339, bytetest_aa_ab);
        struct_Po.cc = simd_or(tmp351, struct_Po.cc);
        bytetest_ef = simd_and(tmp112, tmp23);
        bytetest_bc = simd_and(tmp43, tmp13);
        bytetest_81_83 = simd_and(tmp237, tmp6);
        tmp352 = simd_and(tmp331, bytetest_bc);
        carryQ.cq[64] = carryout2carry(pablo_blk_Advance(tmp352, carryQ.get_carry_in(64), tmp353));
        tmp354 = simd_and(tmp353, bytetest_81_83);
        struct_Po.cc = simd_or(tmp354, struct_Po.cc);
        bytetest_ef = simd_and(tmp112, tmp23);
        bytetest_bc = simd_and(tmp43, tmp13);
        bytetest_85_87 = simd_and(tmp337, tmp6);
        tmp355 = simd_and(tmp353, bytetest_85_87);
        struct_Po.cc = simd_or(tmp355, struct_Po.cc);
        bytetest_ef = simd_and(tmp112, tmp23);
        bytetest_bc = simd_and(tmp43, tmp13);
        bytetest_8a_8a = simd_and(tmp52, tmp11);
        tmp356 = simd_and(tmp353, bytetest_8a_8a);
        struct_Po.cc = simd_or(tmp356, struct_Po.cc);
        bytetest_ef = simd_and(tmp112, tmp23);
        bytetest_bc = simd_and(tmp43, tmp13);
        bytetest_8c_8c = simd_and(tmp52, tmp13);
        tmp357 = simd_and(tmp353, bytetest_8c_8c);
        struct_Po.cc = simd_or(tmp357, struct_Po.cc);
        bytetest_ef = simd_and(tmp112, tmp23);
        bytetest_bc = simd_and(tmp43, tmp13);
        bytetest_8e_8f = simd_and(tmp52, tmp14);
        tmp358 = simd_and(tmp353, bytetest_8e_8f);
        struct_Po.cc = simd_or(tmp358, struct_Po.cc);
        bytetest_ef = simd_and(tmp112, tmp23);
        bytetest_bc = simd_and(tmp43, tmp13);
        bytetest_9a_9b = simd_and(tmp58, tmp17);
        tmp359 = simd_and(tmp353, bytetest_9a_9b);
        struct_Po.cc = simd_or(tmp359, struct_Po.cc);
        bytetest_ef = simd_and(tmp112, tmp23);
        bytetest_bc = simd_and(tmp43, tmp13);
        tmp360 = simd_or(simd_and(basis_bits.bit_2, tmp206), simd_andc(tmp347, basis_bits.bit_2));
        bytetest_9f_a0 = simd_and(tmp32, tmp360);
        tmp361 = simd_and(tmp353, bytetest_9f_a0);
        struct_Po.cc = simd_or(tmp361, struct_Po.cc);
        bytetest_ef = simd_and(tmp112, tmp23);
        bytetest_bc = simd_and(tmp43, tmp13);
        bytetest_bc_bc = simd_and(tmp43, tmp13);
        tmp362 = simd_and(tmp353, bytetest_bc_bc);
        struct_Po.cc = simd_or(tmp362, struct_Po.cc);
        bytetest_ef = simd_and(tmp112, tmp23);
        bytetest_bd = simd_and(tmp43, tmp47);
        bytetest_a1_a1 = simd_and(tmp33, tmp35);
        tmp363 = simd_and(tmp331, bytetest_bd);
        carryQ.cq[65] = carryout2carry(pablo_blk_Advance(tmp363, carryQ.get_carry_in(65), tmp364));
        tmp365 = simd_and(tmp364, bytetest_a1_a1);
        struct_Po.cc = simd_or(tmp365, struct_Po.cc);
        bytetest_ef = simd_and(tmp112, tmp23);
        bytetest_bd = simd_and(tmp43, tmp47);
        bytetest_a4_a5 = simd_and(tmp33, tmp122);
        tmp366 = simd_and(tmp364, bytetest_a4_a5);
        struct_Po.cc = simd_or(tmp366, struct_Po.cc);
        tmp367 = simd_and(tmp29, tmp15);
        bytetest_f0 = simd_andc(tmp367, tmp19);
        bytetest_90 = simd_andc(tmp58, tmp19);
        bytetest_84 = simd_and(tmp52, tmp97);
        bytetest_80_82 = simd_andc(tmp237, tmp22);
        tmp368 = simd_and(tmp37, bytetest_f0);
        carryQ.cq[66] = carryout2carry(pablo_blk_Advance(tmp368, carryQ.get_carry_in(66), tmp369));
        tmp370 = simd_and(tmp369, bytetest_90);
        carryQ.cq[67] = carryout2carry(pablo_blk_Advance(tmp370, carryQ.get_carry_in(67), tmp371));
        tmp372 = simd_and(tmp371, bytetest_84);
        carryQ.cq[68] = carryout2carry(pablo_blk_Advance(tmp372, carryQ.get_carry_in(68), tmp373));
        tmp374 = simd_and(tmp373, bytetest_80_82);
        struct_Po.cc = simd_or(tmp374, struct_Po.cc);
        bytetest_f0 = simd_andc(tmp367, tmp19);
        bytetest_90 = simd_andc(tmp58, tmp19);
        bytetest_8e = simd_and(tmp52, tmp48);
        bytetest_9f_9f = simd_and(tmp58, tmp23);
        tmp375 = simd_and(tmp371, bytetest_8e);
        carryQ.cq[69] = carryout2carry(pablo_blk_Advance(tmp375, carryQ.get_carry_in(69), tmp376));
        tmp377 = simd_and(tmp376, bytetest_9f_9f);
        struct_Po.cc = simd_or(tmp377, struct_Po.cc);
        bytetest_f0 = simd_andc(tmp367, tmp19);
        bytetest_90 = simd_andc(tmp58, tmp19);
        bytetest_8f = simd_and(tmp52, tmp23);
        bytetest_90_90 = simd_andc(tmp58, tmp19);
        tmp378 = simd_and(tmp371, bytetest_8f);
        carryQ.cq[70] = carryout2carry(pablo_blk_Advance(tmp378, carryQ.get_carry_in(70), tmp379));
        tmp380 = simd_and(tmp379, bytetest_90_90);
        struct_Po.cc = simd_or(tmp380, struct_Po.cc);
        bytetest_f0 = simd_andc(tmp367, tmp19);
        bytetest_90 = simd_andc(tmp58, tmp19);
        bytetest_a1 = simd_and(tmp33, tmp35);
        bytetest_97_97 = simd_and(tmp58, tmp41);
        tmp381 = simd_and(tmp371, bytetest_a1);
        carryQ.cq[71] = carryout2carry(pablo_blk_Advance(tmp381, carryQ.get_carry_in(71), tmp382));
        tmp383 = simd_and(tmp382, bytetest_97_97);
        struct_Po.cc = simd_or(tmp383, struct_Po.cc);
        bytetest_f0 = simd_andc(tmp367, tmp19);
        bytetest_90 = simd_andc(tmp58, tmp19);
        bytetest_a4 = simd_and(tmp33, tmp97);
        bytetest_9f_9f = simd_and(tmp58, tmp23);
        tmp384 = simd_and(tmp371, bytetest_a4);
        carryQ.cq[72] = carryout2carry(pablo_blk_Advance(tmp384, carryQ.get_carry_in(72), tmp385));
        tmp386 = simd_and(tmp385, bytetest_9f_9f);
        struct_Po.cc = simd_or(tmp386, struct_Po.cc);
        bytetest_f0 = simd_andc(tmp367, tmp19);
        bytetest_90 = simd_andc(tmp58, tmp19);
        bytetest_a4 = simd_and(tmp33, tmp97);
        bytetest_bf_bf = simd_and(tmp43, tmp23);
        tmp387 = simd_and(tmp385, bytetest_bf_bf);
        struct_Po.cc = simd_or(tmp387, struct_Po.cc);
        bytetest_f0 = simd_andc(tmp367, tmp19);
        bytetest_90 = simd_andc(tmp58, tmp19);
        bytetest_a9 = simd_and(tmp33, tmp65);
        bytetest_90_98 = simd_andc(tmp58, tmp165);
        tmp388 = simd_and(tmp371, bytetest_a9);
        carryQ.cq[73] = carryout2carry(pablo_blk_Advance(tmp388, carryQ.get_carry_in(73), tmp389));
        tmp390 = simd_and(tmp389, bytetest_90_98);
        struct_Po.cc = simd_or(tmp390, struct_Po.cc);
        bytetest_f0 = simd_andc(tmp367, tmp19);
        bytetest_90 = simd_andc(tmp58, tmp19);
        bytetest_a9 = simd_and(tmp33, tmp65);
        bytetest_bf_bf = simd_and(tmp43, tmp23);
        tmp391 = simd_and(tmp389, bytetest_bf_bf);
        struct_Po.cc = simd_or(tmp391, struct_Po.cc);
        bytetest_f0 = simd_andc(tmp367, tmp19);
        bytetest_90 = simd_andc(tmp58, tmp19);
        bytetest_ac = simd_and(tmp33, tmp13);
        bytetest_b9_bf = simd_and(tmp216, tmp164);
        tmp392 = simd_and(tmp371, bytetest_ac);
        carryQ.cq[74] = carryout2carry(pablo_blk_Advance(tmp392, carryQ.get_carry_in(74), tmp393));
        tmp394 = simd_and(tmp393, bytetest_b9_bf);
        struct_Po.cc = simd_or(tmp394, struct_Po.cc);
        bytetest_f0 = simd_andc(tmp367, tmp19);
        bytetest_91 = simd_and(tmp58, tmp35);
        bytetest_81 = simd_and(tmp52, tmp35);
        tmp395 = simd_or(simd_and(basis_bits.bit_4, tmp314), simd_andc(tmp107, basis_bits.bit_4));
        bytetest_87_8d = simd_and(tmp52, tmp395);
        tmp396 = simd_and(tmp369, bytetest_91);
        carryQ.cq[75] = carryout2carry(pablo_blk_Advance(tmp396, carryQ.get_carry_in(75), tmp397));
        tmp398 = simd_and(tmp397, bytetest_81);
        carryQ.cq[76] = carryout2carry(pablo_blk_Advance(tmp398, carryQ.get_carry_in(76), tmp399));
        tmp400 = simd_and(tmp399, bytetest_87_8d);
        struct_Po.cc = simd_or(tmp400, struct_Po.cc);
        bytetest_f0 = simd_andc(tmp367, tmp19);
        bytetest_91 = simd_and(tmp58, tmp35);
        bytetest_82 = simd_and(tmp52, tmp31);
        bytetest_bb_bc = simd_and(tmp216, tmp77);
        tmp401 = simd_and(tmp397, bytetest_82);
        carryQ.cq[77] = carryout2carry(pablo_blk_Advance(tmp401, carryQ.get_carry_in(77), tmp402));
        tmp403 = simd_and(tmp402, bytetest_bb_bc);
        struct_Po.cc = simd_or(tmp403, struct_Po.cc);
        bytetest_f0 = simd_andc(tmp367, tmp19);
        bytetest_91 = simd_and(tmp58, tmp35);
        bytetest_83 = simd_and(tmp52, tmp72);
        bytetest_80_81 = simd_andc(tmp52, tmp241);
        tmp404 = simd_and(tmp397, bytetest_83);
        carryQ.cq[78] = carryout2carry(pablo_blk_Advance(tmp404, carryQ.get_carry_in(78), tmp405));
        tmp406 = simd_and(tmp405, bytetest_80_81);
        bytetest_82 = simd_and(tmp52, tmp31);
        bytetest_be_bf = simd_and(tmp43, tmp14);
        tmp407 = simd_and(tmp402, bytetest_be_bf);
        tmp408 = simd_or(tmp407, tmp406);
        struct_Po.cc = simd_or(tmp408, struct_Po.cc);
        bytetest_f0 = simd_andc(tmp367, tmp19);
        bytetest_91 = simd_and(tmp58, tmp35);
        bytetest_85 = simd_and(tmp52, tmp57);
        bytetest_80_83 = simd_andc(tmp52, tmp4);
        tmp409 = simd_and(tmp397, bytetest_85);
        carryQ.cq[79] = carryout2carry(pablo_blk_Advance(tmp409, carryQ.get_carry_in(79), tmp410));
        tmp411 = simd_and(tmp410, bytetest_80_83);
        struct_Po.cc = simd_or(tmp411, struct_Po.cc);
        bytetest_f0 = simd_andc(tmp367, tmp19);
        bytetest_91 = simd_and(tmp58, tmp35);
        bytetest_87 = simd_and(tmp52, tmp41);
        tmp412 = simd_or(simd_and(basis_bits.bit_4, tmp261), simd_andc(tmp149, basis_bits.bit_4));
        bytetest_85_88 = simd_and(tmp52, tmp412);
        tmp413 = simd_and(tmp397, bytetest_87);
        carryQ.cq[80] = carryout2carry(pablo_blk_Advance(tmp413, carryQ.get_carry_in(80), tmp414));
        tmp415 = simd_and(tmp414, bytetest_85_88);
        struct_Po.cc = simd_or(tmp415, struct_Po.cc);
        bytetest_f0 = simd_andc(tmp367, tmp19);
        bytetest_92 = simd_and(tmp58, tmp31);
        bytetest_91 = simd_and(tmp58, tmp35);
        bytetest_b0_b3 = simd_andc(tmp43, tmp4);
        tmp416 = simd_and(tmp369, bytetest_92);
        carryQ.cq[81] = carryout2carry(pablo_blk_Advance(tmp416, carryQ.get_carry_in(81), tmp417));
        tmp418 = simd_and(tmp417, bytetest_91);
        carryQ.cq[82] = carryout2carry(pablo_blk_Advance(tmp418, carryQ.get_carry_in(82), tmp419));
        tmp420 = simd_and(tmp419, bytetest_b0_b3);
        struct_Po.cc = simd_or(tmp420, struct_Po.cc);
        carryQ.CarryQ_Adjust(83);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Po & struct_Po, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_21_23, tmp7, tmp8;
		BitBlock bytetest_25_27, tmp9, tmp10, tmp11, bytetest_2a_2a, tmp12, tmp13;
		BitBlock bytetest_2c_2c, tmp14, bytetest_2e_2f, tmp15, tmp16, tmp17;
		BitBlock bytetest_3a_3b, tmp18, tmp19, tmp20, tmp21, tmp22, tmp23, tmp24;
		BitBlock tmp25, bytetest_3f_40, tmp26, tmp27, tmp28, bytetest_5c_5c, tmp29;
		BitBlock tmp30, tmp31, bytetest_c2, tmp32, tmp33, tmp34, tmp35, bytetest_a1_a1;
		BitBlock tmp36, tmp37, tmp38, tmp39, tmp40, tmp41, bytetest_a7_a7, tmp42;
		BitBlock tmp43, tmp44, bytetest_b6_b7, tmp45, bytetest_bf_bf, tmp46, tmp47;
		BitBlock bytetest_cd, tmp48, bytetest_be_be, tmp49, tmp50, tmp51, bytetest_ce;
		BitBlock tmp52, bytetest_87_87, tmp53, tmp54, tmp55, tmp56, tmp57, bytetest_d5;
		BitBlock tmp58, tmp59, tmp60, bytetest_9a_9f, tmp61, tmp62, tmp63, tmp64;
		BitBlock bytetest_d6, tmp65, bytetest_89_89, tmp66, tmp67, tmp68, bytetest_d7;
		BitBlock bytetest_80_80, tmp69, tmp70, tmp71, tmp72, bytetest_83_83, tmp73;
		BitBlock bytetest_86_86, tmp74, tmp75, tmp76, tmp77, bytetest_b3_b4, tmp78;
		BitBlock tmp79, bytetest_d8, tmp80, tmp81, tmp82, bytetest_89_8a, tmp83, tmp84;
		BitBlock tmp85, tmp86, bytetest_8c_8d, tmp87, tmp88, bytetest_9b_9b, tmp89;
		BitBlock bytetest_9e_9f, tmp90, bytetest_d9, tmp91, tmp92, tmp93;
		BitBlock bytetest_aa_ad, tmp94, tmp95, tmp96, bytetest_db, tmp97;
		BitBlock bytetest_94_94, tmp98, tmp99, tmp100, bytetest_dc, tmp101, tmp102;
		BitBlock bytetest_80_8d, tmp103, tmp104, tmp105, bytetest_df, tmp106, tmp107;
		BitBlock tmp108, bytetest_b7_b9, tmp109, tmp110, tmp111, tmp112, bytetest_e0;
		BitBlock bytetest_a0, tmp113, bytetest_b0_be, tmp114, tmp115, tmp116, tmp117;
		BitBlock tmp118, bytetest_a1, bytetest_9e_9e, tmp119, tmp120, tmp121;
		BitBlock bytetest_a5, tmp122, bytetest_a4_a5, tmp123, tmp124, tmp125;
		BitBlock bytetest_b0_b0, tmp126, bytetest_ab, tmp127, tmp128, tmp129;
		BitBlock bytetest_b7, bytetest_b4_b4, tmp130, tmp131, tmp132, bytetest_b9;
		BitBlock bytetest_8f_8f, tmp133, tmp134, tmp135, bytetest_9a_9b, tmp136;
		BitBlock bytetest_bc, tmp137, tmp138, tmp139, tmp140, bytetest_84_92, tmp141;
		BitBlock tmp142, tmp143, tmp144, bytetest_be, bytetest_85_85, tmp145, tmp146;
		BitBlock tmp147, bytetest_bf, tmp148, tmp149, bytetest_90_94, tmp150, tmp151;
		BitBlock tmp152, tmp153, bytetest_99_9a, tmp154, bytetest_e1, bytetest_81;
		BitBlock tmp155, bytetest_8a_8f, tmp156, tmp157, tmp158, tmp159, tmp160;
		BitBlock bytetest_83, bytetest_bb_bb, tmp161, tmp162, tmp163, bytetest_8d;
		BitBlock tmp164, tmp165, bytetest_a0_a8, tmp166, tmp167, tmp168, bytetest_99;
		BitBlock tmp169, bytetest_ad_ae, tmp170, tmp171, tmp172, bytetest_9b, tmp173;
		BitBlock bytetest_ab_ad, tmp174, tmp175, tmp176, bytetest_9c, tmp177;
		BitBlock bytetest_b5_b6, tmp178, tmp179, tmp180, bytetest_9f, tmp181;
		BitBlock bytetest_94_96, tmp182, tmp183, tmp184, bytetest_98_9a, tmp185;
		BitBlock tmp186, bytetest_80_85, tmp187, tmp188, tmp189, tmp190, tmp191;
		BitBlock tmp192, bytetest_87_8a, tmp193, bytetest_84_85, tmp194, tmp195;
		BitBlock tmp196, bytetest_a8, tmp197, tmp198, tmp199, bytetest_aa, tmp200;
		BitBlock bytetest_a0_a6, tmp201, tmp202, tmp203, bytetest_a8_ad, tmp204;
		BitBlock bytetest_ad, tmp205, tmp206, tmp207, tmp208, tmp209, bytetest_9a_a0;
		BitBlock tmp210, tmp211, tmp212, bytetest_af, bytetest_bc_bf, tmp213, tmp214;
		BitBlock tmp215, bytetest_b0, tmp216, bytetest_bb_bf, tmp217, tmp218, tmp219;
		BitBlock bytetest_b1, bytetest_be_bf, tmp220, tmp221, tmp222, bytetest_b3;
		BitBlock bytetest_80_87, tmp223, tmp224, tmp225, bytetest_93_93, tmp226;
		BitBlock bytetest_e2, bytetest_80, bytetest_96_97, tmp227, tmp228, tmp229;
		BitBlock tmp230, tmp231, bytetest_a0_a7, tmp232, bytetest_b0_b8, tmp233;
		BitBlock tmp234, tmp235, bytetest_bb_be, tmp236, tmp237, bytetest_81_83;
		BitBlock tmp238, tmp239, tmp240, tmp241, tmp242, tmp243, tmp244;
		BitBlock bytetest_87_91, tmp245, tmp246, tmp247, tmp248, bytetest_95_9e;
		BitBlock tmp249, tmp250, bytetest_b9_bc, tmp251, tmp252, tmp253, tmp254;
		BitBlock bytetest_b5, tmp255, tmp256, tmp257, bytetest_b8, bytetest_80_81;
		BitBlock tmp258, tmp259, tmp260, tmp261, tmp262, bytetest_86_88, tmp263;
		BitBlock bytetest_8b_8b, tmp264, tmp265, tmp266, bytetest_8e_96, tmp267;
		BitBlock tmp268, bytetest_98_99, tmp269, tmp270, tmp271, tmp272;
		BitBlock bytetest_aa_ae, tmp273, bytetest_b0_b9, tmp274, bytetest_e3, tmp275;
		BitBlock tmp276, tmp277, tmp278, tmp279, bytetest_bd_bd, tmp280, tmp281;
		BitBlock tmp282, tmp283, bytetest_ea, bytetest_93, tmp284, tmp285, tmp286;
		BitBlock tmp287, tmp288, bytetest_98, tmp289, bytetest_8d_8f, tmp290, tmp291;
		BitBlock tmp292, bytetest_b3_b3, tmp293, tmp294, tmp295, tmp296;
		BitBlock bytetest_b2_b7, tmp297, tmp298, tmp299, bytetest_b4_b7, tmp300;
		BitBlock tmp301, tmp302, bytetest_a3, bytetest_8e_8f, tmp303, tmp304, tmp305;
		BitBlock tmp306, bytetest_b8_ba, tmp307, bytetest_a4, bytetest_ae_af, tmp308;
		BitBlock tmp309, tmp310, bytetest_9f_9f, tmp311, tmp312, tmp313, bytetest_a7;
		BitBlock tmp314, tmp315, bytetest_81_8d, tmp316, tmp317, tmp318, tmp319;
		BitBlock bytetest_a9, bytetest_9c_9f, tmp320, tmp321, tmp322, tmp323, tmp324;
		BitBlock tmp325, bytetest_b0_b1, tmp326, bytetest_ab_ab, tmp327, tmp328;
		BitBlock tmp329, bytetest_ef, bytetest_90_96, tmp330, tmp331, tmp332, tmp333;
		BitBlock tmp334, bytetest_99_99, tmp335, tmp336, tmp337, bytetest_85_86;
		BitBlock tmp338, tmp339, tmp340, bytetest_89_8c, tmp341, tmp342;
		BitBlock bytetest_90_92, tmp343, bytetest_94_97, tmp344, tmp345, tmp346;
		BitBlock tmp347, tmp348, bytetest_9f_a1, tmp349, bytetest_a8_a8, tmp350;
		BitBlock bytetest_aa_ab, tmp351, tmp352, tmp353, tmp354, bytetest_85_87;
		BitBlock tmp355, bytetest_8a_8a, tmp356, bytetest_8c_8c, tmp357, tmp358;
		BitBlock tmp359, tmp360, bytetest_9f_a0, tmp361, bytetest_bc_bc, tmp362;
		BitBlock bytetest_bd, tmp363, tmp364, tmp365, tmp366, tmp367, bytetest_f0;
		BitBlock bytetest_90, bytetest_84, bytetest_80_82, tmp368, tmp369, tmp370;
		BitBlock tmp371, tmp372, tmp373, tmp374, bytetest_8e, tmp375, tmp376, tmp377;
		BitBlock bytetest_8f, bytetest_90_90, tmp378, tmp379, tmp380, bytetest_97_97;
		BitBlock tmp381, tmp382, tmp383, tmp384, tmp385, tmp386, tmp387;
		BitBlock bytetest_90_98, tmp388, tmp389, tmp390, tmp391, bytetest_ac;
		BitBlock bytetest_b9_bf, tmp392, tmp393, tmp394, bytetest_91, tmp395;
		BitBlock bytetest_87_8d, tmp396, tmp397, tmp398, tmp399, tmp400, bytetest_82;
		BitBlock bytetest_bb_bc, tmp401, tmp402, tmp403, tmp404, tmp405, tmp406;
		BitBlock tmp407, tmp408, bytetest_85, bytetest_80_83, tmp409, tmp410, tmp411;
		BitBlock bytetest_87, tmp412, bytetest_85_88, tmp413, tmp414, tmp415;
		BitBlock bytetest_92, bytetest_b0_b3, tmp416, tmp417, tmp418, tmp419, tmp420;




        struct_Po.cc = simd<1>::constant<0>();
        tmp1 = simd_or(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp2, tmp1);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(tmp3, tmp4);
        tmp6 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        bytetest_21_23 = simd_and(tmp5, tmp6);
        struct_Po.cc = simd_or(bytetest_21_23, struct_Po.cc);
        tmp7 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp8 = simd_and(tmp3, tmp7);
        bytetest_25_27 = simd_and(tmp8, tmp6);
        struct_Po.cc = simd_or(bytetest_25_27, struct_Po.cc);
        tmp9 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp10 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp11 = simd_and(tmp9, tmp10);
        bytetest_2a_2a = simd_and(tmp3, tmp11);
        struct_Po.cc = simd_or(bytetest_2a_2a, struct_Po.cc);
        tmp12 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp13 = simd_andc(tmp12, tmp6);
        bytetest_2c_2c = simd_and(tmp3, tmp13);
        struct_Po.cc = simd_or(bytetest_2c_2c, struct_Po.cc);
        tmp14 = simd_and(tmp12, basis_bits.bit_6);
        bytetest_2e_2f = simd_and(tmp3, tmp14);
        struct_Po.cc = simd_or(bytetest_2e_2f, struct_Po.cc);
        tmp15 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp16 = simd_andc(tmp15, tmp1);
        tmp17 = simd_and(tmp9, basis_bits.bit_6);
        bytetest_3a_3b = simd_and(tmp16, tmp17);
        struct_Po.cc = simd_or(bytetest_3a_3b, struct_Po.cc);
        tmp18 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp19 = simd_or(tmp4, tmp6);
        tmp20 = simd_or(tmp18, tmp19);
        tmp21 = simd_not(tmp20);
        tmp22 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp23 = simd_and(tmp12, tmp22);
        tmp24 = simd_and(tmp15, tmp23);
        tmp25 = simd_or(simd_and(basis_bits.bit_1, tmp21), simd_andc(tmp24, basis_bits.bit_1));
        bytetest_3f_40 = simd_andc(tmp25, basis_bits.bit_0);
        struct_Po.cc = simd_or(bytetest_3f_40, struct_Po.cc);
        tmp26 = simd_andc(basis_bits.bit_1, basis_bits.bit_0);
        tmp27 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp28 = simd_and(tmp26, tmp27);
        bytetest_5c_5c = simd_and(tmp28, tmp13);
        struct_Po.cc = simd_or(bytetest_5c_5c, struct_Po.cc);
        tmp29 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp30 = simd_andc(tmp29, tmp18);
        tmp31 = simd_andc(tmp10, tmp4);
        bytetest_c2 = simd_and(tmp30, tmp31);
        tmp32 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp33 = simd_and(tmp32, tmp2);
        tmp34 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp35 = simd_andc(tmp34, tmp4);
        bytetest_a1_a1 = simd_and(tmp33, tmp35);
        tmp36 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp36, carryQ.get_carry_in(0), tmp37));
        tmp38 = simd_and(tmp37, bytetest_c2);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp38, carryQ.get_carry_in(1), tmp39));
        tmp40 = simd_and(tmp39, bytetest_a1_a1);
        struct_Po.cc = simd_or(tmp40, struct_Po.cc);
        bytetest_c2 = simd_and(tmp30, tmp31);
        tmp41 = simd_and(tmp7, tmp22);
        bytetest_a7_a7 = simd_and(tmp33, tmp41);
        tmp42 = simd_and(tmp39, bytetest_a7_a7);
        struct_Po.cc = simd_or(tmp42, struct_Po.cc);
        bytetest_c2 = simd_and(tmp30, tmp31);
        tmp43 = simd_and(tmp32, tmp15);
        tmp44 = simd_and(tmp7, basis_bits.bit_6);
        bytetest_b6_b7 = simd_and(tmp43, tmp44);
        tmp45 = simd_and(tmp39, bytetest_b6_b7);
        struct_Po.cc = simd_or(tmp45, struct_Po.cc);
        bytetest_c2 = simd_and(tmp30, tmp31);
        bytetest_bf_bf = simd_and(tmp43, tmp23);
        tmp46 = simd_and(tmp39, bytetest_bf_bf);
        struct_Po.cc = simd_or(tmp46, struct_Po.cc);
        tmp47 = simd_and(tmp12, tmp34);
        bytetest_cd = simd_and(tmp30, tmp47);
        tmp48 = simd_and(tmp12, tmp10);
        bytetest_be_be = simd_and(tmp43, tmp48);
        tmp49 = simd_and(tmp37, bytetest_cd);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp49, carryQ.get_carry_in(2), tmp50));
        tmp51 = simd_and(tmp50, bytetest_be_be);
        struct_Po.cc = simd_or(tmp51, struct_Po.cc);
        bytetest_ce = simd_and(tmp30, tmp48);
        tmp52 = simd_andc(tmp32, tmp18);
        bytetest_87_87 = simd_and(tmp52, tmp41);
        tmp53 = simd_and(tmp37, bytetest_ce);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp53, carryQ.get_carry_in(3), tmp54));
        tmp55 = simd_and(tmp54, bytetest_87_87);
        struct_Po.cc = simd_or(tmp55, struct_Po.cc);
        tmp56 = simd_and(tmp29, tmp27);
        tmp57 = simd_and(tmp7, tmp34);
        bytetest_d5 = simd_and(tmp56, tmp57);
        tmp58 = simd_and(tmp32, tmp27);
        tmp59 = simd_and(tmp58, basis_bits.bit_4);
        tmp60 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
        bytetest_9a_9f = simd_and(tmp59, tmp60);
        tmp61 = simd_and(tmp37, bytetest_d5);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp61, carryQ.get_carry_in(4), tmp62));
        tmp63 = simd_and(tmp62, bytetest_9a_9f);
        struct_Po.cc = simd_or(tmp63, struct_Po.cc);
        tmp64 = simd_and(tmp7, tmp10);
        bytetest_d6 = simd_and(tmp56, tmp64);
        tmp65 = simd_and(tmp9, tmp34);
        bytetest_89_89 = simd_and(tmp52, tmp65);
        tmp66 = simd_and(tmp37, bytetest_d6);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp66, carryQ.get_carry_in(5), tmp67));
        tmp68 = simd_and(tmp67, bytetest_89_89);
        struct_Po.cc = simd_or(tmp68, struct_Po.cc);
        bytetest_d7 = simd_and(tmp56, tmp41);
        bytetest_80_80 = simd_andc(tmp52, tmp19);
        tmp69 = simd_and(tmp37, bytetest_d7);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp69, carryQ.get_carry_in(6), tmp70));
        tmp71 = simd_and(tmp70, bytetest_80_80);
        struct_Po.cc = simd_or(tmp71, struct_Po.cc);
        bytetest_d7 = simd_and(tmp56, tmp41);
        tmp72 = simd_andc(tmp22, tmp4);
        bytetest_83_83 = simd_and(tmp52, tmp72);
        tmp73 = simd_and(tmp70, bytetest_83_83);
        struct_Po.cc = simd_or(tmp73, struct_Po.cc);
        bytetest_d7 = simd_and(tmp56, tmp41);
        bytetest_86_86 = simd_and(tmp52, tmp64);
        tmp74 = simd_and(tmp70, bytetest_86_86);
        struct_Po.cc = simd_or(tmp74, struct_Po.cc);
        bytetest_d7 = simd_and(tmp56, tmp41);
        tmp75 = simd_andc(tmp43, basis_bits.bit_4);
        tmp76 = simd_not(tmp6);
        tmp77 = simd_or(simd_and(basis_bits.bit_5, tmp76), simd_andc(tmp22, basis_bits.bit_5));
        bytetest_b3_b4 = simd_and(tmp75, tmp77);
        tmp78 = simd_and(tmp70, bytetest_b3_b4);
        struct_Po.cc = simd_or(tmp78, struct_Po.cc);
        tmp79 = simd_andc(tmp9, tmp6);
        bytetest_d8 = simd_and(tmp56, tmp79);
        tmp80 = simd_and(tmp52, tmp9);
        tmp81 = simd_not(basis_bits.bit_7);
        tmp82 = simd_or(simd_and(basis_bits.bit_6, tmp81), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
        bytetest_89_8a = simd_and(tmp80, tmp82);
        tmp83 = simd_and(tmp37, bytetest_d8);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp83, carryQ.get_carry_in(7), tmp84));
        tmp85 = simd_and(tmp84, bytetest_89_8a);
        struct_Po.cc = simd_or(tmp85, struct_Po.cc);
        bytetest_d8 = simd_and(tmp56, tmp79);
        tmp86 = simd_andc(tmp12, basis_bits.bit_6);
        bytetest_8c_8d = simd_and(tmp52, tmp86);
        tmp87 = simd_and(tmp84, bytetest_8c_8d);
        struct_Po.cc = simd_or(tmp87, struct_Po.cc);
        bytetest_d8 = simd_and(tmp56, tmp79);
        tmp88 = simd_and(tmp9, tmp22);
        bytetest_9b_9b = simd_and(tmp58, tmp88);
        tmp89 = simd_and(tmp84, bytetest_9b_9b);
        struct_Po.cc = simd_or(tmp89, struct_Po.cc);
        bytetest_d8 = simd_and(tmp56, tmp79);
        bytetest_9e_9f = simd_and(tmp58, tmp14);
        tmp90 = simd_and(tmp84, bytetest_9e_9f);
        struct_Po.cc = simd_or(tmp90, struct_Po.cc);
        bytetest_d9 = simd_and(tmp56, tmp65);
        tmp91 = simd_and(tmp33, basis_bits.bit_4);
        tmp92 = simd_not(basis_bits.bit_6);
        tmp93 = simd_or(simd_and(basis_bits.bit_5, tmp92), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        bytetest_aa_ad = simd_and(tmp91, tmp93);
        tmp94 = simd_and(tmp37, bytetest_d9);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(tmp94, carryQ.get_carry_in(8), tmp95));
        tmp96 = simd_and(tmp95, bytetest_aa_ad);
        struct_Po.cc = simd_or(tmp96, struct_Po.cc);
        bytetest_db = simd_and(tmp56, tmp88);
        tmp97 = simd_andc(tmp7, tmp6);
        bytetest_94_94 = simd_and(tmp58, tmp97);
        tmp98 = simd_and(tmp37, bytetest_db);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(tmp98, carryQ.get_carry_in(9), tmp99));
        tmp100 = simd_and(tmp99, bytetest_94_94);
        struct_Po.cc = simd_or(tmp100, struct_Po.cc);
        bytetest_dc = simd_and(tmp56, tmp13);
        tmp101 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp102 = simd_and(basis_bits.bit_4, tmp101);
        bytetest_80_8d = simd_andc(tmp52, tmp102);
        tmp103 = simd_and(tmp37, bytetest_dc);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(tmp103, carryQ.get_carry_in(10), tmp104));
        tmp105 = simd_and(tmp104, bytetest_80_8d);
        struct_Po.cc = simd_or(tmp105, struct_Po.cc);
        bytetest_df = simd_and(tmp56, tmp23);
        tmp106 = simd_not(tmp60);
        tmp107 = simd_and(basis_bits.bit_5, tmp22);
        tmp108 = simd_or(simd_and(basis_bits.bit_4, tmp106), simd_andc(tmp107, basis_bits.bit_4));
        bytetest_b7_b9 = simd_and(tmp43, tmp108);
        tmp109 = simd_and(tmp37, bytetest_df);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(tmp109, carryQ.get_carry_in(11), tmp110));
        tmp111 = simd_and(tmp110, bytetest_b7_b9);
        struct_Po.cc = simd_or(tmp111, struct_Po.cc);
        tmp112 = simd_and(tmp29, tmp2);
        bytetest_e0 = simd_andc(tmp112, tmp19);
        bytetest_a0 = simd_andc(tmp33, tmp19);
        tmp113 = simd_and(basis_bits.bit_4, tmp107);
        bytetest_b0_be = simd_andc(tmp43, tmp113);
        tmp114 = simd_and(tmp37, bytetest_e0);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(tmp114, carryQ.get_carry_in(12), tmp115));
        tmp116 = simd_and(tmp115, bytetest_a0);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(tmp116, carryQ.get_carry_in(13), tmp117));
        tmp118 = simd_and(tmp117, bytetest_b0_be);
        struct_Po.cc = simd_or(tmp118, struct_Po.cc);
        bytetest_e0 = simd_andc(tmp112, tmp19);
        bytetest_a1 = simd_and(tmp33, tmp35);
        bytetest_9e_9e = simd_and(tmp58, tmp48);
        tmp119 = simd_and(tmp115, bytetest_a1);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(tmp119, carryQ.get_carry_in(14), tmp120));
        tmp121 = simd_and(tmp120, bytetest_9e_9e);
        struct_Po.cc = simd_or(tmp121, struct_Po.cc);
        bytetest_e0 = simd_andc(tmp112, tmp19);
        bytetest_a5 = simd_and(tmp33, tmp57);
        tmp122 = simd_andc(tmp7, basis_bits.bit_6);
        bytetest_a4_a5 = simd_and(tmp33, tmp122);
        tmp123 = simd_and(tmp115, bytetest_a5);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(tmp123, carryQ.get_carry_in(15), tmp124));
        tmp125 = simd_and(tmp124, bytetest_a4_a5);
        struct_Po.cc = simd_or(tmp125, struct_Po.cc);
        bytetest_e0 = simd_andc(tmp112, tmp19);
        bytetest_a5 = simd_and(tmp33, tmp57);
        bytetest_b0_b0 = simd_andc(tmp43, tmp19);
        tmp126 = simd_and(tmp124, bytetest_b0_b0);
        struct_Po.cc = simd_or(tmp126, struct_Po.cc);
        bytetest_e0 = simd_andc(tmp112, tmp19);
        bytetest_ab = simd_and(tmp33, tmp88);
        bytetest_b0_b0 = simd_andc(tmp43, tmp19);
        tmp127 = simd_and(tmp115, bytetest_ab);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(tmp127, carryQ.get_carry_in(16), tmp128));
        tmp129 = simd_and(tmp128, bytetest_b0_b0);
        struct_Po.cc = simd_or(tmp129, struct_Po.cc);
        bytetest_e0 = simd_andc(tmp112, tmp19);
        bytetest_b7 = simd_and(tmp43, tmp41);
        bytetest_b4_b4 = simd_and(tmp43, tmp97);
        tmp130 = simd_and(tmp115, bytetest_b7);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(tmp130, carryQ.get_carry_in(17), tmp131));
        tmp132 = simd_and(tmp131, bytetest_b4_b4);
        struct_Po.cc = simd_or(tmp132, struct_Po.cc);
        bytetest_e0 = simd_andc(tmp112, tmp19);
        bytetest_b9 = simd_and(tmp43, tmp65);
        bytetest_8f_8f = simd_and(tmp52, tmp23);
        tmp133 = simd_and(tmp115, bytetest_b9);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(tmp133, carryQ.get_carry_in(18), tmp134));
        tmp135 = simd_and(tmp134, bytetest_8f_8f);
        struct_Po.cc = simd_or(tmp135, struct_Po.cc);
        bytetest_e0 = simd_andc(tmp112, tmp19);
        bytetest_b9 = simd_and(tmp43, tmp65);
        bytetest_9a_9b = simd_and(tmp58, tmp17);
        tmp136 = simd_and(tmp134, bytetest_9a_9b);
        struct_Po.cc = simd_or(tmp136, struct_Po.cc);
        bytetest_e0 = simd_andc(tmp112, tmp19);
        bytetest_bc = simd_and(tmp43, tmp13);
        tmp137 = simd_andc(tmp32, basis_bits.bit_2);
        tmp138 = simd_or(tmp4, tmp22);
        tmp139 = simd_not(tmp138);
        tmp140 = simd_or(simd_and(basis_bits.bit_3, tmp139), simd_andc(tmp4, basis_bits.bit_3));
        bytetest_84_92 = simd_and(tmp137, tmp140);
        tmp141 = simd_and(tmp115, bytetest_bc);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(tmp141, carryQ.get_carry_in(19), tmp142));
        tmp143 = simd_and(tmp142, bytetest_84_92);
        struct_Po.cc = simd_or(tmp143, struct_Po.cc);
        bytetest_e0 = simd_andc(tmp112, tmp19);
        bytetest_bc = simd_and(tmp43, tmp13);
        bytetest_94_94 = simd_and(tmp58, tmp97);
        tmp144 = simd_and(tmp142, bytetest_94_94);
        struct_Po.cc = simd_or(tmp144, struct_Po.cc);
        bytetest_e0 = simd_andc(tmp112, tmp19);
        bytetest_be = simd_and(tmp43, tmp48);
        bytetest_85_85 = simd_and(tmp52, tmp57);
        tmp145 = simd_and(tmp115, bytetest_be);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(tmp145, carryQ.get_carry_in(20), tmp146));
        tmp147 = simd_and(tmp146, bytetest_85_85);
        struct_Po.cc = simd_or(tmp147, struct_Po.cc);
        bytetest_e0 = simd_andc(tmp112, tmp19);
        bytetest_bf = simd_and(tmp43, tmp23);
        tmp148 = simd_andc(tmp58, basis_bits.bit_4);
        tmp149 = simd_and(basis_bits.bit_5, tmp6);
        bytetest_90_94 = simd_andc(tmp148, tmp149);
        tmp150 = simd_and(tmp115, bytetest_bf);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(tmp150, carryQ.get_carry_in(21), tmp151));
        tmp152 = simd_and(tmp151, bytetest_90_94);
        struct_Po.cc = simd_or(tmp152, struct_Po.cc);
        bytetest_e0 = simd_andc(tmp112, tmp19);
        bytetest_bf = simd_and(tmp43, tmp23);
        tmp153 = simd_and(tmp58, tmp9);
        bytetest_99_9a = simd_and(tmp153, tmp82);
        tmp154 = simd_and(tmp151, bytetest_99_9a);
        struct_Po.cc = simd_or(tmp154, struct_Po.cc);
        bytetest_e1 = simd_and(tmp112, tmp35);
        bytetest_81 = simd_and(tmp52, tmp35);
        tmp155 = simd_and(tmp52, basis_bits.bit_4);
        bytetest_8a_8f = simd_and(tmp155, tmp60);
        tmp156 = simd_and(tmp37, bytetest_e1);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(tmp156, carryQ.get_carry_in(22), tmp157));
        tmp158 = simd_and(tmp157, bytetest_81);
        carryQ.cq[23] = carryout2carry(pablo_blk_Advance(tmp158, carryQ.get_carry_in(23), tmp159));
        tmp160 = simd_and(tmp159, bytetest_8a_8f);
        struct_Po.cc = simd_or(tmp160, struct_Po.cc);
        bytetest_e1 = simd_and(tmp112, tmp35);
        bytetest_83 = simd_and(tmp52, tmp72);
        bytetest_bb_bb = simd_and(tmp43, tmp88);
        tmp161 = simd_and(tmp157, bytetest_83);
        carryQ.cq[24] = carryout2carry(pablo_blk_Advance(tmp161, carryQ.get_carry_in(24), tmp162));
        tmp163 = simd_and(tmp162, bytetest_bb_bb);
        struct_Po.cc = simd_or(tmp163, struct_Po.cc);
        bytetest_e1 = simd_and(tmp112, tmp35);
        bytetest_8d = simd_and(tmp52, tmp47);
        tmp164 = simd_or(basis_bits.bit_5, tmp6);
        tmp165 = simd_and(basis_bits.bit_4, tmp164);
        bytetest_a0_a8 = simd_andc(tmp33, tmp165);
        tmp166 = simd_and(tmp157, bytetest_8d);
        carryQ.cq[25] = carryout2carry(pablo_blk_Advance(tmp166, carryQ.get_carry_in(25), tmp167));
        tmp168 = simd_and(tmp167, bytetest_a0_a8);
        struct_Po.cc = simd_or(tmp168, struct_Po.cc);
        bytetest_e1 = simd_and(tmp112, tmp35);
        bytetest_99 = simd_and(tmp58, tmp65);
        tmp169 = simd_and(tmp33, tmp12);
        bytetest_ad_ae = simd_and(tmp169, tmp82);
        tmp170 = simd_and(tmp157, bytetest_99);
        carryQ.cq[26] = carryout2carry(pablo_blk_Advance(tmp170, carryQ.get_carry_in(26), tmp171));
        tmp172 = simd_and(tmp171, bytetest_ad_ae);
        struct_Po.cc = simd_or(tmp172, struct_Po.cc);
        bytetest_e1 = simd_and(tmp112, tmp35);
        bytetest_9b = simd_and(tmp58, tmp88);
        tmp173 = simd_or(simd_and(basis_bits.bit_5, tmp92), simd_andc(tmp22, basis_bits.bit_5));
        bytetest_ab_ad = simd_and(tmp91, tmp173);
        tmp174 = simd_and(tmp157, bytetest_9b);
        carryQ.cq[27] = carryout2carry(pablo_blk_Advance(tmp174, carryQ.get_carry_in(27), tmp175));
        tmp176 = simd_and(tmp175, bytetest_ab_ad);
        struct_Po.cc = simd_or(tmp176, struct_Po.cc);
        bytetest_e1 = simd_and(tmp112, tmp35);
        bytetest_9c = simd_and(tmp58, tmp13);
        tmp177 = simd_and(tmp43, tmp7);
        bytetest_b5_b6 = simd_and(tmp177, tmp82);
        tmp178 = simd_and(tmp157, bytetest_9c);
        carryQ.cq[28] = carryout2carry(pablo_blk_Advance(tmp178, carryQ.get_carry_in(28), tmp179));
        tmp180 = simd_and(tmp179, bytetest_b5_b6);
        struct_Po.cc = simd_or(tmp180, struct_Po.cc);
        bytetest_e1 = simd_and(tmp112, tmp35);
        bytetest_9f = simd_and(tmp58, tmp23);
        tmp181 = simd_and(tmp58, tmp7);
        bytetest_94_96 = simd_andc(tmp181, tmp22);
        tmp182 = simd_and(tmp157, bytetest_9f);
        carryQ.cq[29] = carryout2carry(pablo_blk_Advance(tmp182, carryQ.get_carry_in(29), tmp183));
        tmp184 = simd_and(tmp183, bytetest_94_96);
        struct_Po.cc = simd_or(tmp184, struct_Po.cc);
        bytetest_e1 = simd_and(tmp112, tmp35);
        bytetest_9f = simd_and(tmp58, tmp23);
        bytetest_98_9a = simd_andc(tmp153, tmp22);
        tmp185 = simd_and(tmp183, bytetest_98_9a);
        struct_Po.cc = simd_or(tmp185, struct_Po.cc);
        bytetest_e1 = simd_and(tmp112, tmp35);
        bytetest_a0 = simd_andc(tmp33, tmp19);
        tmp186 = simd_andc(tmp52, basis_bits.bit_4);
        bytetest_80_85 = simd_andc(tmp186, tmp101);
        tmp187 = simd_and(tmp157, bytetest_a0);
        carryQ.cq[30] = carryout2carry(pablo_blk_Advance(tmp187, carryQ.get_carry_in(30), tmp188));
        tmp189 = simd_and(tmp188, bytetest_80_85);
        struct_Po.cc = simd_or(tmp189, struct_Po.cc);
        bytetest_e1 = simd_and(tmp112, tmp35);
        bytetest_a0 = simd_andc(tmp33, tmp19);
        tmp190 = simd_or(basis_bits.bit_5, tmp22);
        tmp191 = simd_not(tmp190);
        tmp192 = simd_or(simd_and(basis_bits.bit_4, tmp191), simd_andc(tmp107, basis_bits.bit_4));
        bytetest_87_8a = simd_and(tmp52, tmp192);
        tmp193 = simd_and(tmp188, bytetest_87_8a);
        struct_Po.cc = simd_or(tmp193, struct_Po.cc);
        bytetest_e1 = simd_and(tmp112, tmp35);
        bytetest_a5 = simd_and(tmp33, tmp57);
        bytetest_84_85 = simd_and(tmp52, tmp122);
        tmp194 = simd_and(tmp157, bytetest_a5);
        carryQ.cq[31] = carryout2carry(pablo_blk_Advance(tmp194, carryQ.get_carry_in(31), tmp195));
        tmp196 = simd_and(tmp195, bytetest_84_85);
        struct_Po.cc = simd_or(tmp196, struct_Po.cc);
        bytetest_e1 = simd_and(tmp112, tmp35);
        bytetest_a8 = simd_and(tmp33, tmp79);
        bytetest_9e_9f = simd_and(tmp58, tmp14);
        tmp197 = simd_and(tmp157, bytetest_a8);
        carryQ.cq[32] = carryout2carry(pablo_blk_Advance(tmp197, carryQ.get_carry_in(32), tmp198));
        tmp199 = simd_and(tmp198, bytetest_9e_9f);
        struct_Po.cc = simd_or(tmp199, struct_Po.cc);
        bytetest_e1 = simd_and(tmp112, tmp35);
        bytetest_aa = simd_and(tmp33, tmp11);
        tmp200 = simd_andc(tmp33, basis_bits.bit_4);
        bytetest_a0_a6 = simd_andc(tmp200, tmp107);
        tmp201 = simd_and(tmp157, bytetest_aa);
        carryQ.cq[33] = carryout2carry(pablo_blk_Advance(tmp201, carryQ.get_carry_in(33), tmp202));
        tmp203 = simd_and(tmp202, bytetest_a0_a6);
        struct_Po.cc = simd_or(tmp203, struct_Po.cc);
        bytetest_e1 = simd_and(tmp112, tmp35);
        bytetest_aa = simd_and(tmp33, tmp11);
        bytetest_a8_ad = simd_andc(tmp91, tmp101);
        tmp204 = simd_and(tmp202, bytetest_a8_ad);
        struct_Po.cc = simd_or(tmp204, struct_Po.cc);
        bytetest_e1 = simd_and(tmp112, tmp35);
        bytetest_ad = simd_and(tmp33, tmp47);
        tmp205 = simd_or(basis_bits.bit_3, tmp19);
        tmp206 = simd_not(tmp205);
        tmp207 = simd_and(basis_bits.bit_4, tmp60);
        tmp208 = simd_and(basis_bits.bit_3, tmp207);
        tmp209 = simd_or(simd_and(basis_bits.bit_2, tmp206), simd_andc(tmp208, basis_bits.bit_2));
        bytetest_9a_a0 = simd_and(tmp32, tmp209);
        tmp210 = simd_and(tmp157, bytetest_ad);
        carryQ.cq[34] = carryout2carry(pablo_blk_Advance(tmp210, carryQ.get_carry_in(34), tmp211));
        tmp212 = simd_and(tmp211, bytetest_9a_a0);
        struct_Po.cc = simd_or(tmp212, struct_Po.cc);
        bytetest_e1 = simd_and(tmp112, tmp35);
        bytetest_af = simd_and(tmp33, tmp23);
        bytetest_bc_bf = simd_and(tmp43, tmp12);
        tmp213 = simd_and(tmp157, bytetest_af);
        carryQ.cq[35] = carryout2carry(pablo_blk_Advance(tmp213, carryQ.get_carry_in(35), tmp214));
        tmp215 = simd_and(tmp214, bytetest_bc_bf);
        struct_Po.cc = simd_or(tmp215, struct_Po.cc);
        bytetest_e1 = simd_and(tmp112, tmp35);
        bytetest_b0 = simd_andc(tmp43, tmp19);
        tmp216 = simd_and(tmp43, basis_bits.bit_4);
        bytetest_bb_bf = simd_and(tmp216, tmp190);
        tmp217 = simd_and(tmp157, bytetest_b0);
        carryQ.cq[36] = carryout2carry(pablo_blk_Advance(tmp217, carryQ.get_carry_in(36), tmp218));
        tmp219 = simd_and(tmp218, bytetest_bb_bf);
        struct_Po.cc = simd_or(tmp219, struct_Po.cc);
        bytetest_e1 = simd_and(tmp112, tmp35);
        bytetest_b1 = simd_and(tmp43, tmp35);
        bytetest_be_bf = simd_and(tmp43, tmp14);
        tmp220 = simd_and(tmp157, bytetest_b1);
        carryQ.cq[37] = carryout2carry(pablo_blk_Advance(tmp220, carryQ.get_carry_in(37), tmp221));
        tmp222 = simd_and(tmp221, bytetest_be_bf);
        struct_Po.cc = simd_or(tmp222, struct_Po.cc);
        bytetest_e1 = simd_and(tmp112, tmp35);
        bytetest_b3 = simd_and(tmp43, tmp72);
        bytetest_80_87 = simd_andc(tmp52, basis_bits.bit_4);
        tmp223 = simd_and(tmp157, bytetest_b3);
        carryQ.cq[38] = carryout2carry(pablo_blk_Advance(tmp223, carryQ.get_carry_in(38), tmp224));
        tmp225 = simd_and(tmp224, bytetest_80_87);
        struct_Po.cc = simd_or(tmp225, struct_Po.cc);
        bytetest_e1 = simd_and(tmp112, tmp35);
        bytetest_b3 = simd_and(tmp43, tmp72);
        bytetest_93_93 = simd_and(tmp58, tmp72);
        tmp226 = simd_and(tmp224, bytetest_93_93);
        struct_Po.cc = simd_or(tmp226, struct_Po.cc);
        bytetest_e2 = simd_and(tmp112, tmp31);
        bytetest_80 = simd_andc(tmp52, tmp19);
        bytetest_96_97 = simd_and(tmp58, tmp44);
        tmp227 = simd_and(tmp37, bytetest_e2);
        carryQ.cq[39] = carryout2carry(pablo_blk_Advance(tmp227, carryQ.get_carry_in(39), tmp228));
        tmp229 = simd_and(tmp228, bytetest_80);
        carryQ.cq[40] = carryout2carry(pablo_blk_Advance(tmp229, carryQ.get_carry_in(40), tmp230));
        tmp231 = simd_and(tmp230, bytetest_96_97);
        struct_Po.cc = simd_or(tmp231, struct_Po.cc);
        bytetest_e2 = simd_and(tmp112, tmp31);
        bytetest_80 = simd_andc(tmp52, tmp19);
        bytetest_a0_a7 = simd_andc(tmp33, basis_bits.bit_4);
        tmp232 = simd_and(tmp230, bytetest_a0_a7);
        struct_Po.cc = simd_or(tmp232, struct_Po.cc);
        bytetest_e2 = simd_and(tmp112, tmp31);
        bytetest_80 = simd_andc(tmp52, tmp19);
        bytetest_b0_b8 = simd_andc(tmp43, tmp165);
        tmp233 = simd_and(tmp230, bytetest_b0_b8);
        struct_Po.cc = simd_or(tmp233, struct_Po.cc);
        bytetest_e2 = simd_and(tmp112, tmp31);
        bytetest_80 = simd_andc(tmp52, tmp19);
        tmp234 = simd_not(tmp22);
        tmp235 = simd_or(simd_and(basis_bits.bit_5, tmp234), simd_andc(tmp22, basis_bits.bit_5));
        bytetest_bb_be = simd_and(tmp216, tmp235);
        tmp236 = simd_and(tmp230, bytetest_bb_be);
        struct_Po.cc = simd_or(tmp236, struct_Po.cc);
        bytetest_e2 = simd_and(tmp112, tmp31);
        bytetest_81 = simd_and(tmp52, tmp35);
        tmp237 = simd_andc(tmp52, tmp4);
        bytetest_81_83 = simd_and(tmp237, tmp6);
        tmp238 = simd_and(tmp228, bytetest_81);
        carryQ.cq[41] = carryout2carry(pablo_blk_Advance(tmp238, carryQ.get_carry_in(41), tmp239));
        tmp240 = simd_and(tmp239, bytetest_81_83);
        struct_Po.cc = simd_or(tmp240, struct_Po.cc);
        bytetest_e2 = simd_and(tmp112, tmp31);
        bytetest_81 = simd_and(tmp52, tmp35);
        tmp241 = simd_or(tmp4, basis_bits.bit_6);
        tmp242 = simd_not(tmp241);
        tmp243 = simd_or(basis_bits.bit_4, tmp107);
        tmp244 = simd_or(simd_and(basis_bits.bit_3, tmp242), simd_andc(tmp243, basis_bits.bit_3));
        bytetest_87_91 = simd_and(tmp137, tmp244);
        tmp245 = simd_and(tmp239, bytetest_87_91);
        struct_Po.cc = simd_or(tmp245, struct_Po.cc);
        bytetest_e2 = simd_and(tmp112, tmp31);
        bytetest_81 = simd_and(tmp52, tmp35);
        bytetest_93_93 = simd_and(tmp58, tmp72);
        tmp246 = simd_and(tmp239, bytetest_93_93);
        struct_Po.cc = simd_or(tmp246, struct_Po.cc);
        bytetest_e2 = simd_and(tmp112, tmp31);
        bytetest_81 = simd_and(tmp52, tmp35);
        tmp247 = simd_not(tmp107);
        tmp248 = simd_or(simd_and(basis_bits.bit_4, tmp247), simd_andc(tmp149, basis_bits.bit_4));
        bytetest_95_9e = simd_and(tmp58, tmp248);
        tmp249 = simd_and(tmp239, bytetest_95_9e);
        struct_Po.cc = simd_or(tmp249, struct_Po.cc);
        bytetest_e2 = simd_and(tmp112, tmp31);
        bytetest_b3 = simd_and(tmp43, tmp72);
        tmp250 = simd_or(simd_and(basis_bits.bit_5, tmp76), simd_andc(tmp6, basis_bits.bit_5));
        bytetest_b9_bc = simd_and(tmp216, tmp250);
        tmp251 = simd_and(tmp228, bytetest_b3);
        carryQ.cq[42] = carryout2carry(pablo_blk_Advance(tmp251, carryQ.get_carry_in(42), tmp252));
        tmp253 = simd_and(tmp252, bytetest_b9_bc);
        struct_Po.cc = simd_or(tmp253, struct_Po.cc);
        bytetest_e2 = simd_and(tmp112, tmp31);
        bytetest_b3 = simd_and(tmp43, tmp72);
        bytetest_be_bf = simd_and(tmp43, tmp14);
        tmp254 = simd_and(tmp252, bytetest_be_bf);
        struct_Po.cc = simd_or(tmp254, struct_Po.cc);
        bytetest_e2 = simd_and(tmp112, tmp31);
        bytetest_b5 = simd_and(tmp43, tmp57);
        bytetest_b0_b0 = simd_andc(tmp43, tmp19);
        tmp255 = simd_and(tmp228, bytetest_b5);
        carryQ.cq[43] = carryout2carry(pablo_blk_Advance(tmp255, carryQ.get_carry_in(43), tmp256));
        tmp257 = simd_and(tmp256, bytetest_b0_b0);
        struct_Po.cc = simd_or(tmp257, struct_Po.cc);
        bytetest_e2 = simd_and(tmp112, tmp31);
        bytetest_b8 = simd_and(tmp43, tmp79);
        bytetest_80_81 = simd_andc(tmp52, tmp241);
        tmp258 = simd_and(tmp228, bytetest_b8);
        carryQ.cq[44] = carryout2carry(pablo_blk_Advance(tmp258, carryQ.get_carry_in(44), tmp259));
        tmp260 = simd_and(tmp259, bytetest_80_81);
        struct_Po.cc = simd_or(tmp260, struct_Po.cc);
        bytetest_e2 = simd_and(tmp112, tmp31);
        bytetest_b8 = simd_and(tmp43, tmp79);
        tmp261 = simd_not(tmp164);
        tmp262 = simd_or(simd_and(basis_bits.bit_4, tmp261), simd_andc(tmp101, basis_bits.bit_4));
        bytetest_86_88 = simd_and(tmp52, tmp262);
        tmp263 = simd_and(tmp259, bytetest_86_88);
        struct_Po.cc = simd_or(tmp263, struct_Po.cc);
        bytetest_e2 = simd_and(tmp112, tmp31);
        bytetest_b8 = simd_and(tmp43, tmp79);
        bytetest_8b_8b = simd_and(tmp52, tmp88);
        tmp264 = simd_and(tmp259, bytetest_8b_8b);
        struct_Po.cc = simd_or(tmp264, struct_Po.cc);
        bytetest_e2 = simd_and(tmp112, tmp31);
        bytetest_b8 = simd_and(tmp43, tmp79);
        tmp265 = simd_not(tmp243);
        tmp266 = simd_or(simd_and(basis_bits.bit_3, tmp265), simd_andc(tmp14, basis_bits.bit_3));
        bytetest_8e_96 = simd_and(tmp137, tmp266);
        tmp267 = simd_and(tmp259, bytetest_8e_96);
        struct_Po.cc = simd_or(tmp267, struct_Po.cc);
        bytetest_e2 = simd_and(tmp112, tmp31);
        bytetest_b8 = simd_and(tmp43, tmp79);
        tmp268 = simd_andc(tmp9, basis_bits.bit_6);
        bytetest_98_99 = simd_and(tmp58, tmp268);
        tmp269 = simd_and(tmp259, bytetest_98_99);
        struct_Po.cc = simd_or(tmp269, struct_Po.cc);
        bytetest_e2 = simd_and(tmp112, tmp31);
        bytetest_b8 = simd_and(tmp43, tmp79);
        bytetest_9b_9b = simd_and(tmp58, tmp88);
        tmp270 = simd_and(tmp259, bytetest_9b_9b);
        struct_Po.cc = simd_or(tmp270, struct_Po.cc);
        bytetest_e2 = simd_and(tmp112, tmp31);
        bytetest_b8 = simd_and(tmp43, tmp79);
        bytetest_9e_9f = simd_and(tmp58, tmp14);
        tmp271 = simd_and(tmp259, bytetest_9e_9f);
        struct_Po.cc = simd_or(tmp271, struct_Po.cc);
        bytetest_e2 = simd_and(tmp112, tmp31);
        bytetest_b8 = simd_and(tmp43, tmp79);
        tmp272 = simd_or(simd_and(basis_bits.bit_5, tmp234), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        bytetest_aa_ae = simd_and(tmp91, tmp272);
        tmp273 = simd_and(tmp259, bytetest_aa_ae);
        struct_Po.cc = simd_or(tmp273, struct_Po.cc);
        bytetest_e2 = simd_and(tmp112, tmp31);
        bytetest_b8 = simd_and(tmp43, tmp79);
        bytetest_b0_b9 = simd_andc(tmp43, tmp207);
        tmp274 = simd_and(tmp259, bytetest_b0_b9);
        struct_Po.cc = simd_or(tmp274, struct_Po.cc);
        bytetest_e3 = simd_and(tmp112, tmp72);
        bytetest_80 = simd_andc(tmp52, tmp19);
        bytetest_81_83 = simd_and(tmp237, tmp6);
        tmp275 = simd_and(tmp37, bytetest_e3);
        carryQ.cq[45] = carryout2carry(pablo_blk_Advance(tmp275, carryQ.get_carry_in(45), tmp276));
        tmp277 = simd_and(tmp276, bytetest_80);
        carryQ.cq[46] = carryout2carry(pablo_blk_Advance(tmp277, carryQ.get_carry_in(46), tmp278));
        tmp279 = simd_and(tmp278, bytetest_81_83);
        struct_Po.cc = simd_or(tmp279, struct_Po.cc);
        bytetest_e3 = simd_and(tmp112, tmp72);
        bytetest_80 = simd_andc(tmp52, tmp19);
        bytetest_bd_bd = simd_and(tmp43, tmp47);
        tmp280 = simd_and(tmp278, bytetest_bd_bd);
        struct_Po.cc = simd_or(tmp280, struct_Po.cc);
        bytetest_e3 = simd_and(tmp112, tmp72);
        bytetest_83 = simd_and(tmp52, tmp72);
        bytetest_bb_bb = simd_and(tmp43, tmp88);
        tmp281 = simd_and(tmp276, bytetest_83);
        carryQ.cq[47] = carryout2carry(pablo_blk_Advance(tmp281, carryQ.get_carry_in(47), tmp282));
        tmp283 = simd_and(tmp282, bytetest_bb_bb);
        struct_Po.cc = simd_or(tmp283, struct_Po.cc);
        bytetest_ea = simd_and(tmp112, tmp11);
        bytetest_93 = simd_and(tmp58, tmp72);
        bytetest_be_bf = simd_and(tmp43, tmp14);
        tmp284 = simd_and(tmp37, bytetest_ea);
        carryQ.cq[48] = carryout2carry(pablo_blk_Advance(tmp284, carryQ.get_carry_in(48), tmp285));
        tmp286 = simd_and(tmp285, bytetest_93);
        carryQ.cq[49] = carryout2carry(pablo_blk_Advance(tmp286, carryQ.get_carry_in(49), tmp287));
        tmp288 = simd_and(tmp287, bytetest_be_bf);
        struct_Po.cc = simd_or(tmp288, struct_Po.cc);
        bytetest_ea = simd_and(tmp112, tmp11);
        bytetest_98 = simd_and(tmp58, tmp79);
        tmp289 = simd_and(tmp52, tmp12);
        bytetest_8d_8f = simd_and(tmp289, tmp6);
        tmp290 = simd_and(tmp285, bytetest_98);
        carryQ.cq[50] = carryout2carry(pablo_blk_Advance(tmp290, carryQ.get_carry_in(50), tmp291));
        tmp292 = simd_and(tmp291, bytetest_8d_8f);
        struct_Po.cc = simd_or(tmp292, struct_Po.cc);
        bytetest_ea = simd_and(tmp112, tmp11);
        bytetest_99 = simd_and(tmp58, tmp65);
        bytetest_b3_b3 = simd_and(tmp43, tmp72);
        tmp293 = simd_and(tmp285, bytetest_99);
        carryQ.cq[51] = carryout2carry(pablo_blk_Advance(tmp293, carryQ.get_carry_in(51), tmp294));
        tmp295 = simd_and(tmp294, bytetest_b3_b3);
        struct_Po.cc = simd_or(tmp295, struct_Po.cc);
        bytetest_ea = simd_and(tmp112, tmp11);
        bytetest_99 = simd_and(tmp58, tmp65);
        bytetest_be_be = simd_and(tmp43, tmp48);
        tmp296 = simd_and(tmp294, bytetest_be_be);
        struct_Po.cc = simd_or(tmp296, struct_Po.cc);
        bytetest_ea = simd_and(tmp112, tmp11);
        bytetest_9b = simd_and(tmp58, tmp88);
        bytetest_b2_b7 = simd_and(tmp75, tmp60);
        tmp297 = simd_and(tmp285, bytetest_9b);
        carryQ.cq[52] = carryout2carry(pablo_blk_Advance(tmp297, carryQ.get_carry_in(52), tmp298));
        tmp299 = simd_and(tmp298, bytetest_b2_b7);
        struct_Po.cc = simd_or(tmp299, struct_Po.cc);
        bytetest_ea = simd_and(tmp112, tmp11);
        bytetest_a1 = simd_and(tmp33, tmp35);
        bytetest_b4_b7 = simd_and(tmp43, tmp7);
        tmp300 = simd_and(tmp285, bytetest_a1);
        carryQ.cq[53] = carryout2carry(pablo_blk_Advance(tmp300, carryQ.get_carry_in(53), tmp301));
        tmp302 = simd_and(tmp301, bytetest_b4_b7);
        struct_Po.cc = simd_or(tmp302, struct_Po.cc);
        bytetest_ea = simd_and(tmp112, tmp11);
        bytetest_a3 = simd_and(tmp33, tmp72);
        bytetest_8e_8f = simd_and(tmp52, tmp14);
        tmp303 = simd_and(tmp285, bytetest_a3);
        carryQ.cq[54] = carryout2carry(pablo_blk_Advance(tmp303, carryQ.get_carry_in(54), tmp304));
        tmp305 = simd_and(tmp304, bytetest_8e_8f);
        struct_Po.cc = simd_or(tmp305, struct_Po.cc);
        bytetest_ea = simd_and(tmp112, tmp11);
        bytetest_a3 = simd_and(tmp33, tmp72);
        tmp306 = simd_and(tmp43, tmp9);
        bytetest_b8_ba = simd_andc(tmp306, tmp22);
        tmp307 = simd_and(tmp304, bytetest_b8_ba);
        struct_Po.cc = simd_or(tmp307, struct_Po.cc);
        bytetest_ea = simd_and(tmp112, tmp11);
        bytetest_a4 = simd_and(tmp33, tmp97);
        bytetest_ae_af = simd_and(tmp33, tmp14);
        tmp308 = simd_and(tmp285, bytetest_a4);
        carryQ.cq[55] = carryout2carry(pablo_blk_Advance(tmp308, carryQ.get_carry_in(55), tmp309));
        tmp310 = simd_and(tmp309, bytetest_ae_af);
        struct_Po.cc = simd_or(tmp310, struct_Po.cc);
        bytetest_ea = simd_and(tmp112, tmp11);
        bytetest_a5 = simd_and(tmp33, tmp57);
        bytetest_9f_9f = simd_and(tmp58, tmp23);
        tmp311 = simd_and(tmp285, bytetest_a5);
        carryQ.cq[56] = carryout2carry(pablo_blk_Advance(tmp311, carryQ.get_carry_in(56), tmp312));
        tmp313 = simd_and(tmp312, bytetest_9f_9f);
        struct_Po.cc = simd_or(tmp313, struct_Po.cc);
        bytetest_ea = simd_and(tmp112, tmp11);
        bytetest_a7 = simd_and(tmp33, tmp41);
        tmp314 = simd_not(tmp101);
        tmp315 = simd_or(simd_and(basis_bits.bit_4, tmp314), simd_andc(tmp164, basis_bits.bit_4));
        bytetest_81_8d = simd_and(tmp52, tmp315);
        tmp316 = simd_and(tmp285, bytetest_a7);
        carryQ.cq[57] = carryout2carry(pablo_blk_Advance(tmp316, carryQ.get_carry_in(57), tmp317));
        tmp318 = simd_and(tmp317, bytetest_81_8d);
        struct_Po.cc = simd_or(tmp318, struct_Po.cc);
        bytetest_ea = simd_and(tmp112, tmp11);
        bytetest_a7 = simd_and(tmp33, tmp41);
        bytetest_9e_9f = simd_and(tmp58, tmp14);
        tmp319 = simd_and(tmp317, bytetest_9e_9f);
        struct_Po.cc = simd_or(tmp319, struct_Po.cc);
        bytetest_ea = simd_and(tmp112, tmp11);
        bytetest_a9 = simd_and(tmp33, tmp65);
        bytetest_9c_9f = simd_and(tmp58, tmp12);
        tmp320 = simd_and(tmp285, bytetest_a9);
        carryQ.cq[58] = carryout2carry(pablo_blk_Advance(tmp320, carryQ.get_carry_in(58), tmp321));
        tmp322 = simd_and(tmp321, bytetest_9c_9f);
        struct_Po.cc = simd_or(tmp322, struct_Po.cc);
        bytetest_ea = simd_and(tmp112, tmp11);
        bytetest_ab = simd_and(tmp33, tmp88);
        bytetest_9e_9f = simd_and(tmp58, tmp14);
        tmp323 = simd_and(tmp285, bytetest_ab);
        carryQ.cq[59] = carryout2carry(pablo_blk_Advance(tmp323, carryQ.get_carry_in(59), tmp324));
        tmp325 = simd_and(tmp324, bytetest_9e_9f);
        struct_Po.cc = simd_or(tmp325, struct_Po.cc);
        bytetest_ea = simd_and(tmp112, tmp11);
        bytetest_ab = simd_and(tmp33, tmp88);
        bytetest_b0_b1 = simd_andc(tmp43, tmp241);
        tmp326 = simd_and(tmp324, bytetest_b0_b1);
        struct_Po.cc = simd_or(tmp326, struct_Po.cc);
        bytetest_ea = simd_and(tmp112, tmp11);
        bytetest_af = simd_and(tmp33, tmp23);
        bytetest_ab_ab = simd_and(tmp33, tmp88);
        tmp327 = simd_and(tmp285, bytetest_af);
        carryQ.cq[60] = carryout2carry(pablo_blk_Advance(tmp327, carryQ.get_carry_in(60), tmp328));
        tmp329 = simd_and(tmp328, bytetest_ab_ab);
        struct_Po.cc = simd_or(tmp329, struct_Po.cc);
        bytetest_ef = simd_and(tmp112, tmp23);
        bytetest_b8 = simd_and(tmp43, tmp79);
        bytetest_90_96 = simd_andc(tmp148, tmp107);
        tmp330 = simd_and(tmp37, bytetest_ef);
        carryQ.cq[61] = carryout2carry(pablo_blk_Advance(tmp330, carryQ.get_carry_in(61), tmp331));
        tmp332 = simd_and(tmp331, bytetest_b8);
        carryQ.cq[62] = carryout2carry(pablo_blk_Advance(tmp332, carryQ.get_carry_in(62), tmp333));
        tmp334 = simd_and(tmp333, bytetest_90_96);
        struct_Po.cc = simd_or(tmp334, struct_Po.cc);
        bytetest_ef = simd_and(tmp112, tmp23);
        bytetest_b8 = simd_and(tmp43, tmp79);
        bytetest_99_99 = simd_and(tmp58, tmp65);
        tmp335 = simd_and(tmp333, bytetest_99_99);
        struct_Po.cc = simd_or(tmp335, struct_Po.cc);
        bytetest_ef = simd_and(tmp112, tmp23);
        bytetest_b8 = simd_and(tmp43, tmp79);
        bytetest_b0_b0 = simd_andc(tmp43, tmp19);
        tmp336 = simd_and(tmp333, bytetest_b0_b0);
        struct_Po.cc = simd_or(tmp336, struct_Po.cc);
        bytetest_ef = simd_and(tmp112, tmp23);
        bytetest_b9 = simd_and(tmp43, tmp65);
        tmp337 = simd_and(tmp52, tmp7);
        bytetest_85_86 = simd_and(tmp337, tmp82);
        tmp338 = simd_and(tmp331, bytetest_b9);
        carryQ.cq[63] = carryout2carry(pablo_blk_Advance(tmp338, carryQ.get_carry_in(63), tmp339));
        tmp340 = simd_and(tmp339, bytetest_85_86);
        struct_Po.cc = simd_or(tmp340, struct_Po.cc);
        bytetest_ef = simd_and(tmp112, tmp23);
        bytetest_b9 = simd_and(tmp43, tmp65);
        bytetest_89_8c = simd_and(tmp155, tmp250);
        tmp341 = simd_and(tmp339, bytetest_89_8c);
        struct_Po.cc = simd_or(tmp341, struct_Po.cc);
        bytetest_ef = simd_and(tmp112, tmp23);
        bytetest_b9 = simd_and(tmp43, tmp65);
        tmp342 = simd_andc(tmp58, tmp4);
        bytetest_90_92 = simd_andc(tmp342, tmp22);
        tmp343 = simd_and(tmp339, bytetest_90_92);
        struct_Po.cc = simd_or(tmp343, struct_Po.cc);
        bytetest_ef = simd_and(tmp112, tmp23);
        bytetest_b9 = simd_and(tmp43, tmp65);
        bytetest_94_97 = simd_and(tmp58, tmp7);
        tmp344 = simd_and(tmp339, bytetest_94_97);
        struct_Po.cc = simd_or(tmp344, struct_Po.cc);
        bytetest_ef = simd_and(tmp112, tmp23);
        bytetest_b9 = simd_and(tmp43, tmp65);
        tmp345 = simd_or(basis_bits.bit_3, tmp241);
        tmp346 = simd_not(tmp345);
        tmp347 = simd_and(basis_bits.bit_3, tmp23);
        tmp348 = simd_or(simd_and(basis_bits.bit_2, tmp346), simd_andc(tmp347, basis_bits.bit_2));
        bytetest_9f_a1 = simd_and(tmp32, tmp348);
        tmp349 = simd_and(tmp339, bytetest_9f_a1);
        struct_Po.cc = simd_or(tmp349, struct_Po.cc);
        bytetest_ef = simd_and(tmp112, tmp23);
        bytetest_b9 = simd_and(tmp43, tmp65);
        bytetest_a8_a8 = simd_and(tmp33, tmp79);
        tmp350 = simd_and(tmp339, bytetest_a8_a8);
        struct_Po.cc = simd_or(tmp350, struct_Po.cc);
        bytetest_ef = simd_and(tmp112, tmp23);
        bytetest_b9 = simd_and(tmp43, tmp65);
        bytetest_aa_ab = simd_and(tmp33, tmp17);
        tmp351 = simd_and(tmp339, bytetest_aa_ab);
        struct_Po.cc = simd_or(tmp351, struct_Po.cc);
        bytetest_ef = simd_and(tmp112, tmp23);
        bytetest_bc = simd_and(tmp43, tmp13);
        bytetest_81_83 = simd_and(tmp237, tmp6);
        tmp352 = simd_and(tmp331, bytetest_bc);
        carryQ.cq[64] = carryout2carry(pablo_blk_Advance(tmp352, carryQ.get_carry_in(64), tmp353));
        tmp354 = simd_and(tmp353, bytetest_81_83);
        struct_Po.cc = simd_or(tmp354, struct_Po.cc);
        bytetest_ef = simd_and(tmp112, tmp23);
        bytetest_bc = simd_and(tmp43, tmp13);
        bytetest_85_87 = simd_and(tmp337, tmp6);
        tmp355 = simd_and(tmp353, bytetest_85_87);
        struct_Po.cc = simd_or(tmp355, struct_Po.cc);
        bytetest_ef = simd_and(tmp112, tmp23);
        bytetest_bc = simd_and(tmp43, tmp13);
        bytetest_8a_8a = simd_and(tmp52, tmp11);
        tmp356 = simd_and(tmp353, bytetest_8a_8a);
        struct_Po.cc = simd_or(tmp356, struct_Po.cc);
        bytetest_ef = simd_and(tmp112, tmp23);
        bytetest_bc = simd_and(tmp43, tmp13);
        bytetest_8c_8c = simd_and(tmp52, tmp13);
        tmp357 = simd_and(tmp353, bytetest_8c_8c);
        struct_Po.cc = simd_or(tmp357, struct_Po.cc);
        bytetest_ef = simd_and(tmp112, tmp23);
        bytetest_bc = simd_and(tmp43, tmp13);
        bytetest_8e_8f = simd_and(tmp52, tmp14);
        tmp358 = simd_and(tmp353, bytetest_8e_8f);
        struct_Po.cc = simd_or(tmp358, struct_Po.cc);
        bytetest_ef = simd_and(tmp112, tmp23);
        bytetest_bc = simd_and(tmp43, tmp13);
        bytetest_9a_9b = simd_and(tmp58, tmp17);
        tmp359 = simd_and(tmp353, bytetest_9a_9b);
        struct_Po.cc = simd_or(tmp359, struct_Po.cc);
        bytetest_ef = simd_and(tmp112, tmp23);
        bytetest_bc = simd_and(tmp43, tmp13);
        tmp360 = simd_or(simd_and(basis_bits.bit_2, tmp206), simd_andc(tmp347, basis_bits.bit_2));
        bytetest_9f_a0 = simd_and(tmp32, tmp360);
        tmp361 = simd_and(tmp353, bytetest_9f_a0);
        struct_Po.cc = simd_or(tmp361, struct_Po.cc);
        bytetest_ef = simd_and(tmp112, tmp23);
        bytetest_bc = simd_and(tmp43, tmp13);
        bytetest_bc_bc = simd_and(tmp43, tmp13);
        tmp362 = simd_and(tmp353, bytetest_bc_bc);
        struct_Po.cc = simd_or(tmp362, struct_Po.cc);
        bytetest_ef = simd_and(tmp112, tmp23);
        bytetest_bd = simd_and(tmp43, tmp47);
        bytetest_a1_a1 = simd_and(tmp33, tmp35);
        tmp363 = simd_and(tmp331, bytetest_bd);
        carryQ.cq[65] = carryout2carry(pablo_blk_Advance(tmp363, carryQ.get_carry_in(65), tmp364));
        tmp365 = simd_and(tmp364, bytetest_a1_a1);
        struct_Po.cc = simd_or(tmp365, struct_Po.cc);
        bytetest_ef = simd_and(tmp112, tmp23);
        bytetest_bd = simd_and(tmp43, tmp47);
        bytetest_a4_a5 = simd_and(tmp33, tmp122);
        tmp366 = simd_and(tmp364, bytetest_a4_a5);
        struct_Po.cc = simd_or(tmp366, struct_Po.cc);
        tmp367 = simd_and(tmp29, tmp15);
        bytetest_f0 = simd_andc(tmp367, tmp19);
        bytetest_90 = simd_andc(tmp58, tmp19);
        bytetest_84 = simd_and(tmp52, tmp97);
        bytetest_80_82 = simd_andc(tmp237, tmp22);
        tmp368 = simd_and(tmp37, bytetest_f0);
        carryQ.cq[66] = carryout2carry(pablo_blk_Advance(tmp368, carryQ.get_carry_in(66), tmp369));
        tmp370 = simd_and(tmp369, bytetest_90);
        carryQ.cq[67] = carryout2carry(pablo_blk_Advance(tmp370, carryQ.get_carry_in(67), tmp371));
        tmp372 = simd_and(tmp371, bytetest_84);
        carryQ.cq[68] = carryout2carry(pablo_blk_Advance(tmp372, carryQ.get_carry_in(68), tmp373));
        tmp374 = simd_and(tmp373, bytetest_80_82);
        struct_Po.cc = simd_or(tmp374, struct_Po.cc);
        bytetest_f0 = simd_andc(tmp367, tmp19);
        bytetest_90 = simd_andc(tmp58, tmp19);
        bytetest_8e = simd_and(tmp52, tmp48);
        bytetest_9f_9f = simd_and(tmp58, tmp23);
        tmp375 = simd_and(tmp371, bytetest_8e);
        carryQ.cq[69] = carryout2carry(pablo_blk_Advance(tmp375, carryQ.get_carry_in(69), tmp376));
        tmp377 = simd_and(tmp376, bytetest_9f_9f);
        struct_Po.cc = simd_or(tmp377, struct_Po.cc);
        bytetest_f0 = simd_andc(tmp367, tmp19);
        bytetest_90 = simd_andc(tmp58, tmp19);
        bytetest_8f = simd_and(tmp52, tmp23);
        bytetest_90_90 = simd_andc(tmp58, tmp19);
        tmp378 = simd_and(tmp371, bytetest_8f);
        carryQ.cq[70] = carryout2carry(pablo_blk_Advance(tmp378, carryQ.get_carry_in(70), tmp379));
        tmp380 = simd_and(tmp379, bytetest_90_90);
        struct_Po.cc = simd_or(tmp380, struct_Po.cc);
        bytetest_f0 = simd_andc(tmp367, tmp19);
        bytetest_90 = simd_andc(tmp58, tmp19);
        bytetest_a1 = simd_and(tmp33, tmp35);
        bytetest_97_97 = simd_and(tmp58, tmp41);
        tmp381 = simd_and(tmp371, bytetest_a1);
        carryQ.cq[71] = carryout2carry(pablo_blk_Advance(tmp381, carryQ.get_carry_in(71), tmp382));
        tmp383 = simd_and(tmp382, bytetest_97_97);
        struct_Po.cc = simd_or(tmp383, struct_Po.cc);
        bytetest_f0 = simd_andc(tmp367, tmp19);
        bytetest_90 = simd_andc(tmp58, tmp19);
        bytetest_a4 = simd_and(tmp33, tmp97);
        bytetest_9f_9f = simd_and(tmp58, tmp23);
        tmp384 = simd_and(tmp371, bytetest_a4);
        carryQ.cq[72] = carryout2carry(pablo_blk_Advance(tmp384, carryQ.get_carry_in(72), tmp385));
        tmp386 = simd_and(tmp385, bytetest_9f_9f);
        struct_Po.cc = simd_or(tmp386, struct_Po.cc);
        bytetest_f0 = simd_andc(tmp367, tmp19);
        bytetest_90 = simd_andc(tmp58, tmp19);
        bytetest_a4 = simd_and(tmp33, tmp97);
        bytetest_bf_bf = simd_and(tmp43, tmp23);
        tmp387 = simd_and(tmp385, bytetest_bf_bf);
        struct_Po.cc = simd_or(tmp387, struct_Po.cc);
        bytetest_f0 = simd_andc(tmp367, tmp19);
        bytetest_90 = simd_andc(tmp58, tmp19);
        bytetest_a9 = simd_and(tmp33, tmp65);
        bytetest_90_98 = simd_andc(tmp58, tmp165);
        tmp388 = simd_and(tmp371, bytetest_a9);
        carryQ.cq[73] = carryout2carry(pablo_blk_Advance(tmp388, carryQ.get_carry_in(73), tmp389));
        tmp390 = simd_and(tmp389, bytetest_90_98);
        struct_Po.cc = simd_or(tmp390, struct_Po.cc);
        bytetest_f0 = simd_andc(tmp367, tmp19);
        bytetest_90 = simd_andc(tmp58, tmp19);
        bytetest_a9 = simd_and(tmp33, tmp65);
        bytetest_bf_bf = simd_and(tmp43, tmp23);
        tmp391 = simd_and(tmp389, bytetest_bf_bf);
        struct_Po.cc = simd_or(tmp391, struct_Po.cc);
        bytetest_f0 = simd_andc(tmp367, tmp19);
        bytetest_90 = simd_andc(tmp58, tmp19);
        bytetest_ac = simd_and(tmp33, tmp13);
        bytetest_b9_bf = simd_and(tmp216, tmp164);
        tmp392 = simd_and(tmp371, bytetest_ac);
        carryQ.cq[74] = carryout2carry(pablo_blk_Advance(tmp392, carryQ.get_carry_in(74), tmp393));
        tmp394 = simd_and(tmp393, bytetest_b9_bf);
        struct_Po.cc = simd_or(tmp394, struct_Po.cc);
        bytetest_f0 = simd_andc(tmp367, tmp19);
        bytetest_91 = simd_and(tmp58, tmp35);
        bytetest_81 = simd_and(tmp52, tmp35);
        tmp395 = simd_or(simd_and(basis_bits.bit_4, tmp314), simd_andc(tmp107, basis_bits.bit_4));
        bytetest_87_8d = simd_and(tmp52, tmp395);
        tmp396 = simd_and(tmp369, bytetest_91);
        carryQ.cq[75] = carryout2carry(pablo_blk_Advance(tmp396, carryQ.get_carry_in(75), tmp397));
        tmp398 = simd_and(tmp397, bytetest_81);
        carryQ.cq[76] = carryout2carry(pablo_blk_Advance(tmp398, carryQ.get_carry_in(76), tmp399));
        tmp400 = simd_and(tmp399, bytetest_87_8d);
        struct_Po.cc = simd_or(tmp400, struct_Po.cc);
        bytetest_f0 = simd_andc(tmp367, tmp19);
        bytetest_91 = simd_and(tmp58, tmp35);
        bytetest_82 = simd_and(tmp52, tmp31);
        bytetest_bb_bc = simd_and(tmp216, tmp77);
        tmp401 = simd_and(tmp397, bytetest_82);
        carryQ.cq[77] = carryout2carry(pablo_blk_Advance(tmp401, carryQ.get_carry_in(77), tmp402));
        tmp403 = simd_and(tmp402, bytetest_bb_bc);
        struct_Po.cc = simd_or(tmp403, struct_Po.cc);
        bytetest_f0 = simd_andc(tmp367, tmp19);
        bytetest_91 = simd_and(tmp58, tmp35);
        bytetest_83 = simd_and(tmp52, tmp72);
        bytetest_80_81 = simd_andc(tmp52, tmp241);
        tmp404 = simd_and(tmp397, bytetest_83);
        carryQ.cq[78] = carryout2carry(pablo_blk_Advance(tmp404, carryQ.get_carry_in(78), tmp405));
        tmp406 = simd_and(tmp405, bytetest_80_81);
        bytetest_82 = simd_and(tmp52, tmp31);
        bytetest_be_bf = simd_and(tmp43, tmp14);
        tmp407 = simd_and(tmp402, bytetest_be_bf);
        tmp408 = simd_or(tmp407, tmp406);
        struct_Po.cc = simd_or(tmp408, struct_Po.cc);
        bytetest_f0 = simd_andc(tmp367, tmp19);
        bytetest_91 = simd_and(tmp58, tmp35);
        bytetest_85 = simd_and(tmp52, tmp57);
        bytetest_80_83 = simd_andc(tmp52, tmp4);
        tmp409 = simd_and(tmp397, bytetest_85);
        carryQ.cq[79] = carryout2carry(pablo_blk_Advance(tmp409, carryQ.get_carry_in(79), tmp410));
        tmp411 = simd_and(tmp410, bytetest_80_83);
        struct_Po.cc = simd_or(tmp411, struct_Po.cc);
        bytetest_f0 = simd_andc(tmp367, tmp19);
        bytetest_91 = simd_and(tmp58, tmp35);
        bytetest_87 = simd_and(tmp52, tmp41);
        tmp412 = simd_or(simd_and(basis_bits.bit_4, tmp261), simd_andc(tmp149, basis_bits.bit_4));
        bytetest_85_88 = simd_and(tmp52, tmp412);
        tmp413 = simd_and(tmp397, bytetest_87);
        carryQ.cq[80] = carryout2carry(pablo_blk_Advance(tmp413, carryQ.get_carry_in(80), tmp414));
        tmp415 = simd_and(tmp414, bytetest_85_88);
        struct_Po.cc = simd_or(tmp415, struct_Po.cc);
        bytetest_f0 = simd_andc(tmp367, tmp19);
        bytetest_92 = simd_and(tmp58, tmp31);
        bytetest_91 = simd_and(tmp58, tmp35);
        bytetest_b0_b3 = simd_andc(tmp43, tmp4);
        tmp416 = simd_and(tmp369, bytetest_92);
        carryQ.cq[81] = carryout2carry(pablo_blk_Advance(tmp416, carryQ.get_carry_in(81), tmp417));
        tmp418 = simd_and(tmp417, bytetest_91);
        carryQ.cq[82] = carryout2carry(pablo_blk_Advance(tmp418, carryQ.get_carry_in(82), tmp419));
        tmp420 = simd_and(tmp419, bytetest_b0_b3);
        struct_Po.cc = simd_or(tmp420, struct_Po.cc);
  }
  CarryArray<83, 0> carryQ;
  };

  struct Me {
  Me() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Me & struct_Me) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_d2, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, bytetest_88_89, tmp12, tmp13, tmp14, tmp15, tmp16;
		BitBlock tmp17, tmp18, bytetest_e2, tmp19, tmp20, bytetest_83, tmp21, tmp22;
		BitBlock tmp23, tmp24, tmp25, tmp26, tmp27, tmp28, bytetest_9d_a0, tmp29;
		BitBlock tmp30, tmp31, tmp32, tmp33, tmp34, tmp35, tmp36, tmp37;
		BitBlock bytetest_a2_a4, tmp38, tmp39, bytetest_ea, tmp40, tmp41, tmp42;
		BitBlock bytetest_99, tmp43, tmp44, tmp45, bytetest_b0_b2, tmp46, tmp47, tmp48;
		BitBlock tmp49, tmp50;




        struct_Me.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp3 = simd_and(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_andc(tmp5, tmp4);
        bytetest_d2 = simd_and(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp9 = simd_andc(tmp7, tmp8);
        tmp10 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp11 = simd_andc(tmp10, basis_bits.bit_6);
        bytetest_88_89 = simd_and(tmp9, tmp11);
        tmp12 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp12, carryQ.get_carry_in(0), tmp13));
        tmp14 = simd_and(tmp13, bytetest_d2);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp14, carryQ.get_carry_in(1), tmp15));
        tmp16 = simd_and(tmp15, bytetest_88_89);
        struct_Me.cc = simd_or(tmp16, struct_Me.cc);
        tmp17 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp18 = simd_and(tmp1, tmp17);
        bytetest_e2 = simd_and(tmp18, tmp6);
        tmp19 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp20 = simd_andc(tmp19, tmp4);
        bytetest_83 = simd_and(tmp9, tmp20);
        tmp21 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp22 = simd_or(tmp4, tmp21);
        tmp23 = simd_or(basis_bits.bit_3, tmp22);
        tmp24 = simd_not(tmp23);
        tmp25 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp26 = simd_and(tmp25, tmp21);
        tmp27 = simd_and(basis_bits.bit_3, tmp26);
        tmp28 = simd_or(simd_and(basis_bits.bit_2, tmp24), simd_andc(tmp27, basis_bits.bit_2));
        bytetest_9d_a0 = simd_and(tmp7, tmp28);
        tmp29 = simd_and(tmp13, bytetest_e2);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp29, carryQ.get_carry_in(2), tmp30));
        tmp31 = simd_and(tmp30, bytetest_83);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp31, carryQ.get_carry_in(3), tmp32));
        tmp33 = simd_and(tmp32, bytetest_9d_a0);
        struct_Me.cc = simd_or(tmp33, struct_Me.cc);
        bytetest_e2 = simd_and(tmp18, tmp6);
        bytetest_83 = simd_and(tmp9, tmp20);
        tmp34 = simd_and(tmp7, tmp17);
        tmp35 = simd_andc(tmp34, basis_bits.bit_4);
        tmp36 = simd_not(tmp21);
        tmp37 = simd_or(simd_and(basis_bits.bit_5, tmp36), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        bytetest_a2_a4 = simd_and(tmp35, tmp37);
        tmp38 = simd_and(tmp32, bytetest_a2_a4);
        struct_Me.cc = simd_or(tmp38, struct_Me.cc);
        tmp39 = simd_and(tmp10, tmp5);
        bytetest_ea = simd_and(tmp18, tmp39);
        tmp40 = simd_and(tmp7, tmp2);
        tmp41 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp42 = simd_and(tmp10, tmp41);
        bytetest_99 = simd_and(tmp40, tmp42);
        tmp43 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp44 = simd_and(tmp7, tmp43);
        tmp45 = simd_andc(tmp44, tmp4);
        bytetest_b0_b2 = simd_andc(tmp45, tmp19);
        tmp46 = simd_and(tmp13, bytetest_ea);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp46, carryQ.get_carry_in(4), tmp47));
        tmp48 = simd_and(tmp47, bytetest_99);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp48, carryQ.get_carry_in(5), tmp49));
        tmp50 = simd_and(tmp49, bytetest_b0_b2);
        struct_Me.cc = simd_or(tmp50, struct_Me.cc);
        carryQ.CarryQ_Adjust(6);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Me & struct_Me, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_d2, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, bytetest_88_89, tmp12, tmp13, tmp14, tmp15, tmp16;
		BitBlock tmp17, tmp18, bytetest_e2, tmp19, tmp20, bytetest_83, tmp21, tmp22;
		BitBlock tmp23, tmp24, tmp25, tmp26, tmp27, tmp28, bytetest_9d_a0, tmp29;
		BitBlock tmp30, tmp31, tmp32, tmp33, tmp34, tmp35, tmp36, tmp37;
		BitBlock bytetest_a2_a4, tmp38, tmp39, bytetest_ea, tmp40, tmp41, tmp42;
		BitBlock bytetest_99, tmp43, tmp44, tmp45, bytetest_b0_b2, tmp46, tmp47, tmp48;
		BitBlock tmp49, tmp50;




        struct_Me.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp3 = simd_and(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_andc(tmp5, tmp4);
        bytetest_d2 = simd_and(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp9 = simd_andc(tmp7, tmp8);
        tmp10 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp11 = simd_andc(tmp10, basis_bits.bit_6);
        bytetest_88_89 = simd_and(tmp9, tmp11);
        tmp12 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp12, carryQ.get_carry_in(0), tmp13));
        tmp14 = simd_and(tmp13, bytetest_d2);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp14, carryQ.get_carry_in(1), tmp15));
        tmp16 = simd_and(tmp15, bytetest_88_89);
        struct_Me.cc = simd_or(tmp16, struct_Me.cc);
        tmp17 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp18 = simd_and(tmp1, tmp17);
        bytetest_e2 = simd_and(tmp18, tmp6);
        tmp19 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp20 = simd_andc(tmp19, tmp4);
        bytetest_83 = simd_and(tmp9, tmp20);
        tmp21 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp22 = simd_or(tmp4, tmp21);
        tmp23 = simd_or(basis_bits.bit_3, tmp22);
        tmp24 = simd_not(tmp23);
        tmp25 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp26 = simd_and(tmp25, tmp21);
        tmp27 = simd_and(basis_bits.bit_3, tmp26);
        tmp28 = simd_or(simd_and(basis_bits.bit_2, tmp24), simd_andc(tmp27, basis_bits.bit_2));
        bytetest_9d_a0 = simd_and(tmp7, tmp28);
        tmp29 = simd_and(tmp13, bytetest_e2);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp29, carryQ.get_carry_in(2), tmp30));
        tmp31 = simd_and(tmp30, bytetest_83);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp31, carryQ.get_carry_in(3), tmp32));
        tmp33 = simd_and(tmp32, bytetest_9d_a0);
        struct_Me.cc = simd_or(tmp33, struct_Me.cc);
        bytetest_e2 = simd_and(tmp18, tmp6);
        bytetest_83 = simd_and(tmp9, tmp20);
        tmp34 = simd_and(tmp7, tmp17);
        tmp35 = simd_andc(tmp34, basis_bits.bit_4);
        tmp36 = simd_not(tmp21);
        tmp37 = simd_or(simd_and(basis_bits.bit_5, tmp36), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        bytetest_a2_a4 = simd_and(tmp35, tmp37);
        tmp38 = simd_and(tmp32, bytetest_a2_a4);
        struct_Me.cc = simd_or(tmp38, struct_Me.cc);
        tmp39 = simd_and(tmp10, tmp5);
        bytetest_ea = simd_and(tmp18, tmp39);
        tmp40 = simd_and(tmp7, tmp2);
        tmp41 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp42 = simd_and(tmp10, tmp41);
        bytetest_99 = simd_and(tmp40, tmp42);
        tmp43 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp44 = simd_and(tmp7, tmp43);
        tmp45 = simd_andc(tmp44, tmp4);
        bytetest_b0_b2 = simd_andc(tmp45, tmp19);
        tmp46 = simd_and(tmp13, bytetest_ea);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp46, carryQ.get_carry_in(4), tmp47));
        tmp48 = simd_and(tmp47, bytetest_99);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp48, carryQ.get_carry_in(5), tmp49));
        tmp50 = simd_and(tmp49, bytetest_b0_b2);
        struct_Me.cc = simd_or(tmp50, struct_Me.cc);
  }
  CarryArray<6, 0> carryQ;
  };

  struct Mc {
  Mc() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Mc & struct_Mc) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_e0, tmp7, tmp8, tmp9;
		BitBlock tmp10, bytetest_a4, tmp11, tmp12, tmp13, tmp14, bytetest_83_83, tmp15;
		BitBlock tmp16, tmp17, tmp18, tmp19, tmp20, tmp21, tmp22, tmp23, tmp24, tmp25;
		BitBlock bytetest_bb_bb, tmp26, tmp27, tmp28, bytetest_a5, bytetest_80_80;
		BitBlock tmp29, tmp30, tmp31, tmp32, tmp33, bytetest_be_bf, tmp34, tmp35;
		BitBlock tmp36, tmp37, tmp38, bytetest_89_8c, tmp39, bytetest_8e_8f, tmp40;
		BitBlock tmp41, tmp42, bytetest_a6, tmp43, bytetest_82_83, tmp44, tmp45, tmp46;
		BitBlock tmp47, bytetest_a7, tmp48, tmp49, tmp50, tmp51, tmp52, tmp53, tmp54;
		BitBlock tmp55, tmp56, bytetest_87_88, tmp57, tmp58, bytetest_8b_8c, tmp59;
		BitBlock tmp60, tmp61, bytetest_97_97, tmp62, tmp63, bytetest_a8, tmp64, tmp65;
		BitBlock tmp66, tmp67, bytetest_a9, tmp68, tmp69, tmp70, tmp71, tmp72, tmp73;
		BitBlock bytetest_aa, tmp74, tmp75, tmp76, bytetest_ab, tmp77, tmp78, tmp79;
		BitBlock tmp80, tmp81, bytetest_89_89, tmp82, tmp83, tmp84, bytetest_ac, tmp85;
		BitBlock tmp86, tmp87, tmp88, bytetest_be_be, tmp89, tmp90, bytetest_ad, tmp91;
		BitBlock tmp92, tmp93, tmp94, tmp95, tmp96, bytetest_ae, tmp97, tmp98, tmp99;
		BitBlock tmp100, bytetest_af, tmp101, tmp102, tmp103, bytetest_81_82, tmp104;
		BitBlock tmp105, tmp106, tmp107, tmp108, bytetest_86_88, tmp109, tmp110;
		BitBlock bytetest_8a_8c, tmp111, tmp112, bytetest_b0, bytetest_81_83, tmp113;
		BitBlock tmp114, tmp115, tmp116, bytetest_b1, tmp117, bytetest_81_84, tmp118;
		BitBlock tmp119, tmp120, tmp121, bytetest_b2, tmp122, tmp123, tmp124, tmp125;
		BitBlock bytetest_b3, tmp126, bytetest_80_84, tmp127, tmp128, tmp129, tmp130;
		BitBlock tmp131, bytetest_8a_8b, tmp132, tmp133, bytetest_95_96, tmp134;
		BitBlock bytetest_b4, tmp135, tmp136, tmp137, bytetest_b5, tmp138, tmp139;
		BitBlock tmp140, tmp141, tmp142, tmp143, tmp144, tmp145, bytetest_b6, tmp146;
		BitBlock tmp147, tmp148, bytetest_b7, tmp149, tmp150, tmp151, tmp152;
		BitBlock bytetest_8f_91, tmp153, tmp154, tmp155, bytetest_98_9f, tmp156;
		BitBlock bytetest_b2_b3, tmp157, bytetest_bc, tmp158, tmp159, tmp160;
		BitBlock bytetest_bd, bytetest_bf_bf, tmp161, tmp162, tmp163, bytetest_e1;
		BitBlock bytetest_80, tmp164, bytetest_ab_ac, tmp165, tmp166, tmp167, tmp168;
		BitBlock tmp169, bytetest_b1_b1, tmp170, bytetest_b8_b8, tmp171, tmp172;
		BitBlock bytetest_bb_bc, tmp173, bytetest_81, tmp174, bytetest_96_97, tmp175;
		BitBlock tmp176, tmp177, tmp178, bytetest_a2_a4, tmp179, tmp180, tmp181;
		BitBlock bytetest_a7_ad, tmp182, bytetest_82, bytetest_83_84, tmp183, tmp184;
		BitBlock tmp185, tmp186, tmp187, bytetest_87_8c, tmp188, bytetest_8f_8f;
		BitBlock tmp189, bytetest_9a_9c, tmp190, bytetest_9e, bytetest_b6_b6, tmp191;
		BitBlock tmp192, tmp193, bytetest_9f, bytetest_80_85, tmp194, tmp195, tmp196;
		BitBlock tmp197, tmp198, tmp199, tmp200, tmp201, bytetest_a3_a6, tmp202;
		BitBlock tmp203, tmp204, tmp205, bytetest_a9_ab, tmp206, bytetest_b0_b1;
		BitBlock tmp207, tmp208, tmp209, bytetest_b3_b8, tmp210, tmp211, tmp212;
		BitBlock tmp213, bytetest_b0_bf, tmp214, tmp215, tmp216, tmp217, tmp218;
		BitBlock bytetest_88_89, tmp219, tmp220, bytetest_99_9a, tmp221, tmp222;
		BitBlock tmp223, bytetest_95_95, tmp224, tmp225, tmp226, tmp227;
		BitBlock bytetest_a1_a1, tmp228, bytetest_a3_a4, tmp229, tmp230, tmp231;
		BitBlock tmp232, tmp233, tmp234, bytetest_ad_b2, tmp235, bytetest_84_84;
		BitBlock tmp236, tmp237, tmp238, bytetest_b5_b5, tmp239, tmp240;
		BitBlock bytetest_80_81, tmp241, tmp242, tmp243, tmp244, bytetest_bd_bf;
		BitBlock tmp245, tmp246, tmp247, bytetest_82_82, tmp248, tmp249, tmp250;
		BitBlock tmp251, bytetest_a6_a7, tmp252, bytetest_aa_aa, tmp253, tmp254;
		BitBlock bytetest_ac_ad, tmp255, bytetest_a7_a7, tmp256, tmp257, tmp258;
		BitBlock bytetest_aa_ac, tmp259, bytetest_ae_ae, tmp260, tmp261, tmp262;
		BitBlock tmp263, bytetest_a4_ab, tmp264, tmp265, tmp266, tmp267;
		BitBlock bytetest_b4_b5, tmp268, tmp269, tmp270, tmp271, tmp272, bytetest_e3;
		BitBlock bytetest_ae_af, tmp273, tmp274, tmp275, tmp276, tmp277, bytetest_ea;
		BitBlock bytetest_a0, tmp278, tmp279, tmp280, tmp281, tmp282, tmp283;
		BitBlock bytetest_a2, tmp284, tmp285, tmp286, bytetest_a3, bytetest_80_83;
		BitBlock tmp287, tmp288, tmp289, bytetest_b4_bf, tmp290, tmp291;
		BitBlock bytetest_92_93, tmp292, tmp293, tmp294, tmp295, tmp296, tmp297;
		BitBlock tmp298, bytetest_ba_bb, tmp299, tmp300, tmp301, tmp302, tmp303;
		BitBlock tmp304, tmp305, tmp306, bytetest_af_b0, tmp307, tmp308, tmp309;
		BitBlock tmp310, bytetest_b3_b4, tmp311, bytetest_8d_8d, tmp312, tmp313;
		BitBlock tmp314, tmp315, bytetest_ab_ab, tmp316, tmp317, tmp318, tmp319;
		BitBlock tmp320, tmp321, tmp322, tmp323, tmp324, bytetest_a9_aa, tmp325;
		BitBlock bytetest_ac_ac, tmp326, tmp327, bytetest_f0, bytetest_91, tmp328;
		BitBlock tmp329, tmp330, tmp331, tmp332, tmp333, tmp334, tmp335, tmp336;
		BitBlock tmp337, tmp338, tmp339, bytetest_b0_b2, tmp340, bytetest_b7_b8;
		BitBlock tmp341, bytetest_84, tmp342, tmp343, tmp344, bytetest_86, tmp345;
		BitBlock tmp346, tmp347, tmp348, tmp349, bytetest_b3_b5, tmp350, bytetest_87;
		BitBlock tmp351, tmp352, tmp353, tmp354, tmp355, bytetest_9a, tmp356, tmp357;
		BitBlock tmp358, tmp359, tmp360, bytetest_96, tmp361, tmp362, tmp363, tmp364;
		BitBlock bytetest_91_be, tmp365, tmp366, tmp367, tmp368, tmp369, bytetest_9d;
		BitBlock bytetest_85, tmp370, bytetest_a5_a6, tmp371, tmp372, tmp373, tmp374;
		BitBlock tmp375, tmp376;




        struct_Mc.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_and(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_or(tmp4, tmp5);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_and(tmp7, tmp2);
        tmp9 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp10 = simd_andc(tmp9, tmp5);
        bytetest_a4 = simd_and(tmp8, tmp10);
        tmp11 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp12 = simd_andc(tmp7, tmp11);
        tmp13 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp14 = simd_andc(tmp13, tmp4);
        bytetest_83_83 = simd_and(tmp12, tmp14);
        tmp15 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp15, carryQ.get_carry_in(0), tmp16));
        tmp17 = simd_and(tmp16, bytetest_e0);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp17, carryQ.get_carry_in(1), tmp18));
        tmp19 = simd_and(tmp18, bytetest_a4);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp19, carryQ.get_carry_in(2), tmp20));
        tmp21 = simd_and(tmp20, bytetest_83_83);
        struct_Mc.cc = simd_or(tmp21, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_a4 = simd_and(tmp8, tmp10);
        tmp22 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp23 = simd_and(tmp7, tmp22);
        tmp24 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp25 = simd_and(tmp24, tmp13);
        bytetest_bb_bb = simd_and(tmp23, tmp25);
        tmp26 = simd_and(tmp20, bytetest_bb_bb);
        struct_Mc.cc = simd_or(tmp26, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        tmp27 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp28 = simd_and(tmp9, tmp27);
        bytetest_a5 = simd_and(tmp8, tmp28);
        bytetest_80_80 = simd_andc(tmp12, tmp6);
        tmp29 = simd_and(tmp18, bytetest_a5);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp29, carryQ.get_carry_in(3), tmp30));
        tmp31 = simd_and(tmp30, bytetest_80_80);
        bytetest_a4 = simd_and(tmp8, tmp10);
        tmp32 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp33 = simd_and(tmp32, basis_bits.bit_6);
        bytetest_be_bf = simd_and(tmp23, tmp33);
        tmp34 = simd_and(tmp20, bytetest_be_bf);
        tmp35 = simd_or(tmp34, tmp31);
        struct_Mc.cc = simd_or(tmp35, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_a5 = simd_and(tmp8, tmp28);
        tmp36 = simd_and(tmp12, basis_bits.bit_4);
        tmp37 = simd_not(tmp5);
        tmp38 = simd_or(simd_and(basis_bits.bit_5, tmp37), simd_andc(tmp5, basis_bits.bit_5));
        bytetest_89_8c = simd_and(tmp36, tmp38);
        tmp39 = simd_and(tmp30, bytetest_89_8c);
        struct_Mc.cc = simd_or(tmp39, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_a5 = simd_and(tmp8, tmp28);
        bytetest_8e_8f = simd_and(tmp12, tmp33);
        tmp40 = simd_and(tmp30, bytetest_8e_8f);
        struct_Mc.cc = simd_or(tmp40, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        tmp41 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp42 = simd_and(tmp9, tmp41);
        bytetest_a6 = simd_and(tmp8, tmp42);
        tmp43 = simd_andc(basis_bits.bit_6, tmp4);
        bytetest_82_83 = simd_and(tmp12, tmp43);
        tmp44 = simd_and(tmp18, bytetest_a6);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp44, carryQ.get_carry_in(4), tmp45));
        tmp46 = simd_and(tmp45, bytetest_82_83);
        struct_Mc.cc = simd_or(tmp46, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        tmp47 = simd_and(tmp9, tmp13);
        bytetest_a7 = simd_and(tmp8, tmp47);
        bytetest_80_80 = simd_andc(tmp12, tmp6);
        tmp48 = simd_and(tmp18, bytetest_a7);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp48, carryQ.get_carry_in(5), tmp49));
        tmp50 = simd_and(tmp49, bytetest_80_80);
        bytetest_a6 = simd_and(tmp8, tmp42);
        bytetest_be_bf = simd_and(tmp23, tmp33);
        tmp51 = simd_and(tmp45, bytetest_be_bf);
        tmp52 = simd_or(tmp51, tmp50);
        struct_Mc.cc = simd_or(tmp52, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_a7 = simd_and(tmp8, tmp47);
        tmp53 = simd_or(basis_bits.bit_5, tmp5);
        tmp54 = simd_not(tmp53);
        tmp55 = simd_and(basis_bits.bit_5, tmp13);
        tmp56 = simd_or(simd_and(basis_bits.bit_4, tmp54), simd_andc(tmp55, basis_bits.bit_4));
        bytetest_87_88 = simd_and(tmp12, tmp56);
        tmp57 = simd_and(tmp49, bytetest_87_88);
        struct_Mc.cc = simd_or(tmp57, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_a7 = simd_and(tmp8, tmp47);
        tmp58 = simd_or(simd_and(basis_bits.bit_5, tmp37), simd_andc(tmp13, basis_bits.bit_5));
        bytetest_8b_8c = simd_and(tmp36, tmp58);
        tmp59 = simd_and(tmp49, bytetest_8b_8c);
        struct_Mc.cc = simd_or(tmp59, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_a7 = simd_and(tmp8, tmp47);
        tmp60 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp61 = simd_and(tmp7, tmp60);
        bytetest_97_97 = simd_and(tmp61, tmp47);
        tmp62 = simd_and(tmp49, bytetest_97_97);
        struct_Mc.cc = simd_or(tmp62, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        tmp63 = simd_andc(tmp24, tmp5);
        bytetest_a8 = simd_and(tmp8, tmp63);
        bytetest_83_83 = simd_and(tmp12, tmp14);
        tmp64 = simd_and(tmp18, bytetest_a8);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp64, carryQ.get_carry_in(6), tmp65));
        tmp66 = simd_and(tmp65, bytetest_83_83);
        struct_Mc.cc = simd_or(tmp66, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        tmp67 = simd_and(tmp24, tmp27);
        bytetest_a9 = simd_and(tmp8, tmp67);
        bytetest_80_80 = simd_andc(tmp12, tmp6);
        tmp68 = simd_and(tmp18, bytetest_a9);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp68, carryQ.get_carry_in(7), tmp69));
        tmp70 = simd_and(tmp69, bytetest_80_80);
        bytetest_a8 = simd_and(tmp8, tmp63);
        bytetest_be_bf = simd_and(tmp23, tmp33);
        tmp71 = simd_and(tmp65, bytetest_be_bf);
        tmp72 = simd_or(tmp71, tmp70);
        struct_Mc.cc = simd_or(tmp72, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        tmp73 = simd_and(tmp24, tmp41);
        bytetest_aa = simd_and(tmp8, tmp73);
        bytetest_83_83 = simd_and(tmp12, tmp14);
        tmp74 = simd_and(tmp18, bytetest_aa);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(tmp74, carryQ.get_carry_in(8), tmp75));
        tmp76 = simd_and(tmp75, bytetest_83_83);
        struct_Mc.cc = simd_or(tmp76, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_ab = simd_and(tmp8, tmp25);
        bytetest_80_80 = simd_andc(tmp12, tmp6);
        tmp77 = simd_and(tmp18, bytetest_ab);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(tmp77, carryQ.get_carry_in(9), tmp78));
        tmp79 = simd_and(tmp78, bytetest_80_80);
        bytetest_aa = simd_and(tmp8, tmp73);
        bytetest_be_bf = simd_and(tmp23, tmp33);
        tmp80 = simd_and(tmp75, bytetest_be_bf);
        tmp81 = simd_or(tmp80, tmp79);
        struct_Mc.cc = simd_or(tmp81, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_ab = simd_and(tmp8, tmp25);
        bytetest_89_89 = simd_and(tmp12, tmp67);
        tmp82 = simd_and(tmp78, bytetest_89_89);
        struct_Mc.cc = simd_or(tmp82, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_ab = simd_and(tmp8, tmp25);
        bytetest_8b_8c = simd_and(tmp36, tmp58);
        tmp83 = simd_and(tmp78, bytetest_8b_8c);
        struct_Mc.cc = simd_or(tmp83, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        tmp84 = simd_andc(tmp32, tmp5);
        bytetest_ac = simd_and(tmp8, tmp84);
        bytetest_82_83 = simd_and(tmp12, tmp43);
        tmp85 = simd_and(tmp18, bytetest_ac);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(tmp85, carryQ.get_carry_in(10), tmp86));
        tmp87 = simd_and(tmp86, bytetest_82_83);
        struct_Mc.cc = simd_or(tmp87, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_ac = simd_and(tmp8, tmp84);
        tmp88 = simd_and(tmp32, tmp41);
        bytetest_be_be = simd_and(tmp23, tmp88);
        tmp89 = simd_and(tmp86, bytetest_be_be);
        struct_Mc.cc = simd_or(tmp89, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        tmp90 = simd_and(tmp32, tmp27);
        bytetest_ad = simd_and(tmp8, tmp90);
        bytetest_80_80 = simd_andc(tmp12, tmp6);
        tmp91 = simd_and(tmp18, bytetest_ad);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(tmp91, carryQ.get_carry_in(11), tmp92));
        tmp93 = simd_and(tmp92, bytetest_80_80);
        struct_Mc.cc = simd_or(tmp93, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_ad = simd_and(tmp8, tmp90);
        bytetest_87_88 = simd_and(tmp12, tmp56);
        tmp94 = simd_and(tmp92, bytetest_87_88);
        struct_Mc.cc = simd_or(tmp94, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_ad = simd_and(tmp8, tmp90);
        bytetest_8b_8c = simd_and(tmp36, tmp58);
        tmp95 = simd_and(tmp92, bytetest_8b_8c);
        struct_Mc.cc = simd_or(tmp95, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_ad = simd_and(tmp8, tmp90);
        bytetest_97_97 = simd_and(tmp61, tmp47);
        tmp96 = simd_and(tmp92, bytetest_97_97);
        struct_Mc.cc = simd_or(tmp96, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_ae = simd_and(tmp8, tmp88);
        bytetest_be_bf = simd_and(tmp23, tmp33);
        tmp97 = simd_and(tmp18, bytetest_ae);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(tmp97, carryQ.get_carry_in(12), tmp98));
        tmp99 = simd_and(tmp98, bytetest_be_bf);
        struct_Mc.cc = simd_or(tmp99, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        tmp100 = simd_and(tmp32, tmp13);
        bytetest_af = simd_and(tmp8, tmp100);
        tmp101 = simd_andc(tmp12, tmp4);
        tmp102 = simd_not(basis_bits.bit_7);
        tmp103 = simd_or(simd_and(basis_bits.bit_6, tmp102), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
        bytetest_81_82 = simd_and(tmp101, tmp103);
        tmp104 = simd_and(tmp18, bytetest_af);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(tmp104, carryQ.get_carry_in(13), tmp105));
        tmp106 = simd_and(tmp105, bytetest_81_82);
        struct_Mc.cc = simd_or(tmp106, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_af = simd_and(tmp8, tmp100);
        tmp107 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp108 = simd_or(simd_and(basis_bits.bit_4, tmp54), simd_andc(tmp107, basis_bits.bit_4));
        bytetest_86_88 = simd_and(tmp12, tmp108);
        tmp109 = simd_and(tmp105, bytetest_86_88);
        struct_Mc.cc = simd_or(tmp109, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_af = simd_and(tmp8, tmp100);
        tmp110 = simd_or(simd_and(basis_bits.bit_5, tmp37), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        bytetest_8a_8c = simd_and(tmp36, tmp110);
        tmp111 = simd_and(tmp105, bytetest_8a_8c);
        struct_Mc.cc = simd_or(tmp111, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_af = simd_and(tmp8, tmp100);
        bytetest_97_97 = simd_and(tmp61, tmp47);
        tmp112 = simd_and(tmp105, bytetest_97_97);
        struct_Mc.cc = simd_or(tmp112, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_b0 = simd_andc(tmp23, tmp6);
        bytetest_81_83 = simd_and(tmp101, tmp5);
        tmp113 = simd_and(tmp18, bytetest_b0);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(tmp113, carryQ.get_carry_in(14), tmp114));
        tmp115 = simd_and(tmp114, bytetest_81_83);
        struct_Mc.cc = simd_or(tmp115, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        tmp116 = simd_andc(tmp27, tmp4);
        bytetest_b1 = simd_and(tmp23, tmp116);
        tmp117 = simd_andc(tmp12, basis_bits.bit_4);
        bytetest_81_84 = simd_and(tmp117, tmp38);
        tmp118 = simd_and(tmp18, bytetest_b1);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(tmp118, carryQ.get_carry_in(15), tmp119));
        tmp120 = simd_and(tmp119, bytetest_81_84);
        struct_Mc.cc = simd_or(tmp120, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        tmp121 = simd_andc(tmp41, tmp4);
        bytetest_b2 = simd_and(tmp23, tmp121);
        bytetest_82_83 = simd_and(tmp12, tmp43);
        tmp122 = simd_and(tmp18, bytetest_b2);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(tmp122, carryQ.get_carry_in(16), tmp123));
        tmp124 = simd_and(tmp123, bytetest_82_83);
        struct_Mc.cc = simd_or(tmp124, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_b2 = simd_and(tmp23, tmp121);
        bytetest_be_be = simd_and(tmp23, tmp88);
        tmp125 = simd_and(tmp123, bytetest_be_be);
        struct_Mc.cc = simd_or(tmp125, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_b3 = simd_and(tmp23, tmp14);
        tmp126 = simd_and(basis_bits.bit_5, tmp5);
        bytetest_80_84 = simd_andc(tmp117, tmp126);
        tmp127 = simd_and(tmp18, bytetest_b3);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(tmp127, carryQ.get_carry_in(17), tmp128));
        tmp129 = simd_and(tmp128, bytetest_80_84);
        struct_Mc.cc = simd_or(tmp129, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_b3 = simd_and(tmp23, tmp14);
        bytetest_87_88 = simd_and(tmp12, tmp56);
        tmp130 = simd_and(tmp128, bytetest_87_88);
        struct_Mc.cc = simd_or(tmp130, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_b3 = simd_and(tmp23, tmp14);
        tmp131 = simd_and(tmp24, basis_bits.bit_6);
        bytetest_8a_8b = simd_and(tmp12, tmp131);
        tmp132 = simd_and(tmp128, bytetest_8a_8b);
        struct_Mc.cc = simd_or(tmp132, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_b3 = simd_and(tmp23, tmp14);
        tmp133 = simd_and(tmp61, tmp9);
        bytetest_95_96 = simd_and(tmp133, tmp103);
        tmp134 = simd_and(tmp128, bytetest_95_96);
        struct_Mc.cc = simd_or(tmp134, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_b4 = simd_and(tmp23, tmp10);
        bytetest_82_83 = simd_and(tmp12, tmp43);
        tmp135 = simd_and(tmp18, bytetest_b4);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(tmp135, carryQ.get_carry_in(18), tmp136));
        tmp137 = simd_and(tmp136, bytetest_82_83);
        struct_Mc.cc = simd_or(tmp137, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_b5 = simd_and(tmp23, tmp28);
        bytetest_80_80 = simd_andc(tmp12, tmp6);
        tmp138 = simd_and(tmp18, bytetest_b5);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(tmp138, carryQ.get_carry_in(19), tmp139));
        tmp140 = simd_and(tmp139, bytetest_80_80);
        bytetest_b4 = simd_and(tmp23, tmp10);
        bytetest_be_bf = simd_and(tmp23, tmp33);
        tmp141 = simd_and(tmp136, bytetest_be_bf);
        tmp142 = simd_or(tmp141, tmp140);
        struct_Mc.cc = simd_or(tmp142, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_b5 = simd_and(tmp23, tmp28);
        bytetest_86_88 = simd_and(tmp12, tmp108);
        tmp143 = simd_and(tmp139, bytetest_86_88);
        struct_Mc.cc = simd_or(tmp143, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_b5 = simd_and(tmp23, tmp28);
        bytetest_8a_8c = simd_and(tmp36, tmp110);
        tmp144 = simd_and(tmp139, bytetest_8a_8c);
        struct_Mc.cc = simd_or(tmp144, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_b5 = simd_and(tmp23, tmp28);
        bytetest_97_97 = simd_and(tmp61, tmp47);
        tmp145 = simd_and(tmp139, bytetest_97_97);
        struct_Mc.cc = simd_or(tmp145, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_b6 = simd_and(tmp23, tmp42);
        bytetest_82_83 = simd_and(tmp12, tmp43);
        tmp146 = simd_and(tmp18, bytetest_b6);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(tmp146, carryQ.get_carry_in(20), tmp147));
        tmp148 = simd_and(tmp147, bytetest_82_83);
        struct_Mc.cc = simd_or(tmp148, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_b7 = simd_and(tmp23, tmp47);
        tmp149 = simd_andc(tmp7, basis_bits.bit_2);
        tmp150 = simd_or(tmp4, basis_bits.bit_6);
        tmp151 = simd_not(tmp150);
        tmp152 = simd_or(simd_and(basis_bits.bit_3, tmp151), simd_andc(tmp100, basis_bits.bit_3));
        bytetest_8f_91 = simd_and(tmp149, tmp152);
        tmp153 = simd_and(tmp18, bytetest_b7);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(tmp153, carryQ.get_carry_in(21), tmp154));
        tmp155 = simd_and(tmp154, bytetest_8f_91);
        struct_Mc.cc = simd_or(tmp155, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_b7 = simd_and(tmp23, tmp47);
        bytetest_98_9f = simd_and(tmp61, basis_bits.bit_4);
        tmp156 = simd_and(tmp154, bytetest_98_9f);
        struct_Mc.cc = simd_or(tmp156, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_b7 = simd_and(tmp23, tmp47);
        bytetest_b2_b3 = simd_and(tmp23, tmp43);
        tmp157 = simd_and(tmp154, bytetest_b2_b3);
        struct_Mc.cc = simd_or(tmp157, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_bc = simd_and(tmp23, tmp84);
        bytetest_be_bf = simd_and(tmp23, tmp33);
        tmp158 = simd_and(tmp18, bytetest_bc);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(tmp158, carryQ.get_carry_in(22), tmp159));
        tmp160 = simd_and(tmp159, bytetest_be_bf);
        struct_Mc.cc = simd_or(tmp160, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_bd = simd_and(tmp23, tmp90);
        bytetest_bf_bf = simd_and(tmp23, tmp100);
        tmp161 = simd_and(tmp18, bytetest_bd);
        carryQ.cq[23] = carryout2carry(pablo_blk_Advance(tmp161, carryQ.get_carry_in(23), tmp162));
        tmp163 = simd_and(tmp162, bytetest_bf_bf);
        struct_Mc.cc = simd_or(tmp163, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_80 = simd_andc(tmp12, tmp6);
        tmp164 = simd_and(tmp8, basis_bits.bit_4);
        bytetest_ab_ac = simd_and(tmp164, tmp58);
        tmp165 = simd_and(tmp16, bytetest_e1);
        carryQ.cq[24] = carryout2carry(pablo_blk_Advance(tmp165, carryQ.get_carry_in(24), tmp166));
        tmp167 = simd_and(tmp166, bytetest_80);
        carryQ.cq[25] = carryout2carry(pablo_blk_Advance(tmp167, carryQ.get_carry_in(25), tmp168));
        tmp169 = simd_and(tmp168, bytetest_ab_ac);
        struct_Mc.cc = simd_or(tmp169, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_80 = simd_andc(tmp12, tmp6);
        bytetest_b1_b1 = simd_and(tmp23, tmp116);
        tmp170 = simd_and(tmp168, bytetest_b1_b1);
        struct_Mc.cc = simd_or(tmp170, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_80 = simd_andc(tmp12, tmp6);
        bytetest_b8_b8 = simd_and(tmp23, tmp63);
        tmp171 = simd_and(tmp168, bytetest_b8_b8);
        struct_Mc.cc = simd_or(tmp171, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_80 = simd_andc(tmp12, tmp6);
        tmp172 = simd_and(tmp23, basis_bits.bit_4);
        bytetest_bb_bc = simd_and(tmp172, tmp58);
        tmp173 = simd_and(tmp168, bytetest_bb_bc);
        struct_Mc.cc = simd_or(tmp173, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_81 = simd_and(tmp12, tmp116);
        tmp174 = simd_and(tmp9, basis_bits.bit_6);
        bytetest_96_97 = simd_and(tmp61, tmp174);
        tmp175 = simd_and(tmp166, bytetest_81);
        carryQ.cq[26] = carryout2carry(pablo_blk_Advance(tmp175, carryQ.get_carry_in(26), tmp176));
        tmp177 = simd_and(tmp176, bytetest_96_97);
        struct_Mc.cc = simd_or(tmp177, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_81 = simd_and(tmp12, tmp116);
        tmp178 = simd_andc(tmp8, basis_bits.bit_4);
        bytetest_a2_a4 = simd_and(tmp178, tmp110);
        tmp179 = simd_and(tmp176, bytetest_a2_a4);
        struct_Mc.cc = simd_or(tmp179, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_81 = simd_and(tmp12, tmp116);
        tmp180 = simd_not(tmp107);
        tmp181 = simd_or(simd_and(basis_bits.bit_4, tmp180), simd_andc(tmp55, basis_bits.bit_4));
        bytetest_a7_ad = simd_and(tmp8, tmp181);
        tmp182 = simd_and(tmp176, bytetest_a7_ad);
        struct_Mc.cc = simd_or(tmp182, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_82 = simd_and(tmp12, tmp121);
        bytetest_83_84 = simd_and(tmp117, tmp58);
        tmp183 = simd_and(tmp166, bytetest_82);
        carryQ.cq[27] = carryout2carry(pablo_blk_Advance(tmp183, carryQ.get_carry_in(27), tmp184));
        tmp185 = simd_and(tmp184, bytetest_83_84);
        struct_Mc.cc = simd_or(tmp185, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_82 = simd_and(tmp12, tmp121);
        tmp186 = simd_not(tmp126);
        tmp187 = simd_or(simd_and(basis_bits.bit_4, tmp186), simd_andc(tmp55, basis_bits.bit_4));
        bytetest_87_8c = simd_and(tmp12, tmp187);
        tmp188 = simd_and(tmp184, bytetest_87_8c);
        struct_Mc.cc = simd_or(tmp188, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_82 = simd_and(tmp12, tmp121);
        bytetest_8f_8f = simd_and(tmp12, tmp100);
        tmp189 = simd_and(tmp184, bytetest_8f_8f);
        struct_Mc.cc = simd_or(tmp189, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_82 = simd_and(tmp12, tmp121);
        bytetest_9a_9c = simd_and(bytetest_98_9f, tmp110);
        tmp190 = simd_and(tmp184, bytetest_9a_9c);
        struct_Mc.cc = simd_or(tmp190, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_9e = simd_and(tmp61, tmp88);
        bytetest_b6_b6 = simd_and(tmp23, tmp42);
        tmp191 = simd_and(tmp166, bytetest_9e);
        carryQ.cq[28] = carryout2carry(pablo_blk_Advance(tmp191, carryQ.get_carry_in(28), tmp192));
        tmp193 = simd_and(tmp192, bytetest_b6_b6);
        struct_Mc.cc = simd_or(tmp193, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_9f = simd_and(tmp61, tmp100);
        bytetest_80_85 = simd_andc(tmp117, tmp107);
        tmp194 = simd_and(tmp166, bytetest_9f);
        carryQ.cq[29] = carryout2carry(pablo_blk_Advance(tmp194, carryQ.get_carry_in(29), tmp195));
        tmp196 = simd_and(tmp195, bytetest_80_85);
        bytetest_9e = simd_and(tmp61, tmp88);
        bytetest_be_bf = simd_and(tmp23, tmp33);
        tmp197 = simd_and(tmp192, bytetest_be_bf);
        tmp198 = simd_or(tmp197, tmp196);
        struct_Mc.cc = simd_or(tmp198, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_9f = simd_and(tmp61, tmp100);
        bytetest_87_88 = simd_and(tmp12, tmp56);
        tmp199 = simd_and(tmp195, bytetest_87_88);
        struct_Mc.cc = simd_or(tmp199, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_a4 = simd_and(tmp8, tmp10);
        tmp200 = simd_not(tmp13);
        tmp201 = simd_or(simd_and(basis_bits.bit_5, tmp200), simd_andc(tmp13, basis_bits.bit_5));
        bytetest_a3_a6 = simd_and(tmp178, tmp201);
        tmp202 = simd_and(tmp166, bytetest_a4);
        carryQ.cq[30] = carryout2carry(pablo_blk_Advance(tmp202, carryQ.get_carry_in(30), tmp203));
        tmp204 = simd_and(tmp203, bytetest_a3_a6);
        struct_Mc.cc = simd_or(tmp204, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_a4 = simd_and(tmp8, tmp10);
        tmp205 = simd_and(tmp8, tmp24);
        bytetest_a9_ab = simd_and(tmp205, tmp5);
        tmp206 = simd_and(tmp203, bytetest_a9_ab);
        struct_Mc.cc = simd_or(tmp206, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_a4 = simd_and(tmp8, tmp10);
        bytetest_b0_b1 = simd_andc(tmp23, tmp150);
        tmp207 = simd_and(tmp203, bytetest_b0_b1);
        struct_Mc.cc = simd_or(tmp207, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_a4 = simd_and(tmp8, tmp10);
        tmp208 = simd_or(basis_bits.bit_5, tmp13);
        tmp209 = simd_or(simd_and(basis_bits.bit_4, tmp54), simd_andc(tmp208, basis_bits.bit_4));
        bytetest_b3_b8 = simd_and(tmp23, tmp209);
        tmp210 = simd_and(tmp203, bytetest_b3_b8);
        struct_Mc.cc = simd_or(tmp210, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_a7 = simd_and(tmp8, tmp47);
        bytetest_80_80 = simd_andc(tmp12, tmp6);
        tmp211 = simd_and(tmp166, bytetest_a7);
        carryQ.cq[31] = carryout2carry(pablo_blk_Advance(tmp211, carryQ.get_carry_in(31), tmp212));
        tmp213 = simd_and(tmp212, bytetest_80_80);
        bytetest_a6 = simd_and(tmp8, tmp42);
        bytetest_b0_bf = simd_and(tmp7, tmp22);
        tmp214 = simd_and(tmp166, bytetest_a6);
        carryQ.cq[32] = carryout2carry(pablo_blk_Advance(tmp214, carryQ.get_carry_in(32), tmp215));
        tmp216 = simd_and(tmp215, bytetest_b0_bf);
        tmp217 = simd_or(tmp216, tmp213);
        struct_Mc.cc = simd_or(tmp217, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_a7 = simd_and(tmp8, tmp47);
        tmp218 = simd_andc(tmp24, basis_bits.bit_6);
        bytetest_88_89 = simd_and(tmp12, tmp218);
        tmp219 = simd_and(tmp212, bytetest_88_89);
        struct_Mc.cc = simd_or(tmp219, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_a8 = simd_and(tmp8, tmp63);
        tmp220 = simd_and(tmp61, tmp24);
        bytetest_99_9a = simd_and(tmp220, tmp103);
        tmp221 = simd_and(tmp166, bytetest_a8);
        carryQ.cq[33] = carryout2carry(pablo_blk_Advance(tmp221, carryQ.get_carry_in(33), tmp222));
        tmp223 = simd_and(tmp222, bytetest_99_9a);
        struct_Mc.cc = simd_or(tmp223, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_a9 = simd_and(tmp8, tmp67);
        bytetest_95_95 = simd_and(tmp61, tmp28);
        tmp224 = simd_and(tmp166, bytetest_a9);
        carryQ.cq[34] = carryout2carry(pablo_blk_Advance(tmp224, carryQ.get_carry_in(34), tmp225));
        tmp226 = simd_and(tmp225, bytetest_95_95);
        struct_Mc.cc = simd_or(tmp226, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_a9 = simd_and(tmp8, tmp67);
        bytetest_97_97 = simd_and(tmp61, tmp47);
        tmp227 = simd_and(tmp225, bytetest_97_97);
        struct_Mc.cc = simd_or(tmp227, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_a9 = simd_and(tmp8, tmp67);
        bytetest_a1_a1 = simd_and(tmp8, tmp116);
        tmp228 = simd_and(tmp225, bytetest_a1_a1);
        struct_Mc.cc = simd_or(tmp228, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_a9 = simd_and(tmp8, tmp67);
        bytetest_a3_a4 = simd_and(tmp178, tmp58);
        tmp229 = simd_and(tmp225, bytetest_a3_a4);
        struct_Mc.cc = simd_or(tmp229, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_a9 = simd_and(tmp8, tmp67);
        tmp230 = simd_and(tmp7, basis_bits.bit_2);
        tmp231 = simd_or(tmp4, tmp13);
        tmp232 = simd_not(tmp231);
        tmp233 = simd_and(tmp32, tmp5);
        tmp234 = simd_or(simd_and(basis_bits.bit_3, tmp232), simd_andc(tmp233, basis_bits.bit_3));
        bytetest_ad_b2 = simd_and(tmp230, tmp234);
        tmp235 = simd_and(tmp225, bytetest_ad_b2);
        struct_Mc.cc = simd_or(tmp235, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_ac = simd_and(tmp8, tmp84);
        bytetest_84_84 = simd_and(tmp12, tmp10);
        tmp236 = simd_and(tmp166, bytetest_ac);
        carryQ.cq[35] = carryout2carry(pablo_blk_Advance(tmp236, carryQ.get_carry_in(35), tmp237));
        tmp238 = simd_and(tmp237, bytetest_84_84);
        struct_Mc.cc = simd_or(tmp238, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_ac = simd_and(tmp8, tmp84);
        bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp28);
        tmp239 = simd_and(tmp237, bytetest_b5_b5);
        struct_Mc.cc = simd_or(tmp239, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_ac = simd_and(tmp8, tmp84);
        bytetest_bb_bb = simd_and(bytetest_b0_bf, tmp25);
        tmp240 = simd_and(tmp237, bytetest_bb_bb);
        struct_Mc.cc = simd_or(tmp240, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_ad = simd_and(tmp8, tmp90);
        bytetest_80_81 = simd_andc(tmp12, tmp150);
        tmp241 = simd_and(tmp166, bytetest_ad);
        carryQ.cq[36] = carryout2carry(pablo_blk_Advance(tmp241, carryQ.get_carry_in(36), tmp242));
        tmp243 = simd_and(tmp242, bytetest_80_81);
        bytetest_ac = simd_and(tmp8, tmp84);
        tmp244 = simd_and(bytetest_b0_bf, tmp32);
        bytetest_bd_bf = simd_and(tmp244, tmp5);
        tmp245 = simd_and(tmp237, bytetest_bd_bf);
        tmp246 = simd_or(tmp245, tmp243);
        struct_Mc.cc = simd_or(tmp246, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_ad = simd_and(tmp8, tmp90);
        bytetest_83_84 = simd_and(tmp117, tmp58);
        tmp247 = simd_and(tmp242, bytetest_83_84);
        struct_Mc.cc = simd_or(tmp247, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_ae = simd_and(tmp8, tmp88);
        bytetest_82_82 = simd_and(tmp12, tmp121);
        tmp248 = simd_and(tmp166, bytetest_ae);
        carryQ.cq[37] = carryout2carry(pablo_blk_Advance(tmp248, carryQ.get_carry_in(37), tmp249));
        tmp250 = simd_and(tmp249, bytetest_82_82);
        struct_Mc.cc = simd_or(tmp250, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_ae = simd_and(tmp8, tmp88);
        bytetest_a1_a1 = simd_and(tmp8, tmp116);
        tmp251 = simd_and(tmp249, bytetest_a1_a1);
        struct_Mc.cc = simd_or(tmp251, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_ae = simd_and(tmp8, tmp88);
        bytetest_a6_a7 = simd_and(tmp8, tmp174);
        tmp252 = simd_and(tmp249, bytetest_a6_a7);
        struct_Mc.cc = simd_or(tmp252, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_ae = simd_and(tmp8, tmp88);
        bytetest_aa_aa = simd_and(tmp8, tmp73);
        tmp253 = simd_and(tmp249, bytetest_aa_aa);
        struct_Mc.cc = simd_or(tmp253, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_ae = simd_and(tmp8, tmp88);
        tmp254 = simd_andc(tmp32, basis_bits.bit_6);
        bytetest_ac_ad = simd_and(tmp8, tmp254);
        tmp255 = simd_and(tmp249, bytetest_ac_ad);
        struct_Mc.cc = simd_or(tmp255, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_af = simd_and(tmp8, tmp100);
        bytetest_a7_a7 = simd_and(tmp8, tmp47);
        tmp256 = simd_and(tmp166, bytetest_af);
        carryQ.cq[38] = carryout2carry(pablo_blk_Advance(tmp256, carryQ.get_carry_in(38), tmp257));
        tmp258 = simd_and(tmp257, bytetest_a7_a7);
        struct_Mc.cc = simd_or(tmp258, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_af = simd_and(tmp8, tmp100);
        bytetest_aa_ac = simd_and(tmp164, tmp110);
        tmp259 = simd_and(tmp257, bytetest_aa_ac);
        struct_Mc.cc = simd_or(tmp259, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_af = simd_and(tmp8, tmp100);
        bytetest_ae_ae = simd_and(tmp8, tmp88);
        tmp260 = simd_and(tmp257, bytetest_ae_ae);
        struct_Mc.cc = simd_or(tmp260, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_af = simd_and(tmp8, tmp100);
        bytetest_b2_b3 = simd_and(bytetest_b0_bf, tmp43);
        tmp261 = simd_and(tmp257, bytetest_b2_b3);
        struct_Mc.cc = simd_or(tmp261, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_b0 = simd_andc(bytetest_b0_bf, tmp6);
        tmp262 = simd_not(basis_bits.bit_5);
        tmp263 = simd_or(simd_and(basis_bits.bit_4, tmp262), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
        bytetest_a4_ab = simd_and(tmp8, tmp263);
        tmp264 = simd_and(tmp166, bytetest_b0);
        carryQ.cq[39] = carryout2carry(pablo_blk_Advance(tmp264, carryQ.get_carry_in(39), tmp265));
        tmp266 = simd_and(tmp265, bytetest_a4_ab);
        struct_Mc.cc = simd_or(tmp266, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_b0 = simd_andc(bytetest_b0_bf, tmp6);
        tmp267 = simd_andc(tmp9, basis_bits.bit_6);
        bytetest_b4_b5 = simd_and(bytetest_b0_bf, tmp267);
        tmp268 = simd_and(tmp265, bytetest_b4_b5);
        struct_Mc.cc = simd_or(tmp268, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp14);
        bytetest_a1_a1 = simd_and(tmp8, tmp116);
        tmp269 = simd_and(tmp166, bytetest_b3);
        carryQ.cq[40] = carryout2carry(pablo_blk_Advance(tmp269, carryQ.get_carry_in(40), tmp270));
        tmp271 = simd_and(tmp270, bytetest_a1_a1);
        struct_Mc.cc = simd_or(tmp271, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp14);
        bytetest_b2_b3 = simd_and(bytetest_b0_bf, tmp43);
        tmp272 = simd_and(tmp270, bytetest_b2_b3);
        struct_Mc.cc = simd_or(tmp272, struct_Mc.cc);
        bytetest_e3 = simd_and(tmp3, tmp14);
        bytetest_80 = simd_andc(tmp12, tmp6);
        bytetest_ae_af = simd_and(tmp8, tmp33);
        tmp273 = simd_and(tmp16, bytetest_e3);
        carryQ.cq[41] = carryout2carry(pablo_blk_Advance(tmp273, carryQ.get_carry_in(41), tmp274));
        tmp275 = simd_and(tmp274, bytetest_80);
        carryQ.cq[42] = carryout2carry(pablo_blk_Advance(tmp275, carryQ.get_carry_in(42), tmp276));
        tmp277 = simd_and(tmp276, bytetest_ae_af);
        struct_Mc.cc = simd_or(tmp277, struct_Mc.cc);
        bytetest_ea = simd_and(tmp3, tmp73);
        bytetest_a0 = simd_andc(tmp8, tmp6);
        bytetest_a3_a4 = simd_and(tmp178, tmp58);
        tmp278 = simd_and(tmp16, bytetest_ea);
        carryQ.cq[43] = carryout2carry(pablo_blk_Advance(tmp278, carryQ.get_carry_in(43), tmp279));
        tmp280 = simd_and(tmp279, bytetest_a0);
        carryQ.cq[44] = carryout2carry(pablo_blk_Advance(tmp280, carryQ.get_carry_in(44), tmp281));
        tmp282 = simd_and(tmp281, bytetest_a3_a4);
        struct_Mc.cc = simd_or(tmp282, struct_Mc.cc);
        bytetest_ea = simd_and(tmp3, tmp73);
        bytetest_a0 = simd_andc(tmp8, tmp6);
        bytetest_a7_a7 = simd_and(tmp8, tmp47);
        tmp283 = simd_and(tmp281, bytetest_a7_a7);
        struct_Mc.cc = simd_or(tmp283, struct_Mc.cc);
        bytetest_ea = simd_and(tmp3, tmp73);
        bytetest_a2 = simd_and(tmp8, tmp121);
        bytetest_80_81 = simd_andc(tmp12, tmp150);
        tmp284 = simd_and(tmp279, bytetest_a2);
        carryQ.cq[45] = carryout2carry(pablo_blk_Advance(tmp284, carryQ.get_carry_in(45), tmp285));
        tmp286 = simd_and(tmp285, bytetest_80_81);
        struct_Mc.cc = simd_or(tmp286, struct_Mc.cc);
        bytetest_ea = simd_and(tmp3, tmp73);
        bytetest_a3 = simd_and(tmp8, tmp14);
        bytetest_80_83 = simd_andc(tmp12, tmp4);
        tmp287 = simd_and(tmp279, bytetest_a3);
        carryQ.cq[46] = carryout2carry(pablo_blk_Advance(tmp287, carryQ.get_carry_in(46), tmp288));
        tmp289 = simd_and(tmp288, bytetest_80_83);
        bytetest_a2 = simd_and(tmp8, tmp121);
        bytetest_b4_bf = simd_and(bytetest_b0_bf, tmp4);
        tmp290 = simd_and(tmp285, bytetest_b4_bf);
        tmp291 = simd_or(tmp290, tmp289);
        struct_Mc.cc = simd_or(tmp291, struct_Mc.cc);
        bytetest_ea = simd_and(tmp3, tmp73);
        bytetest_a5 = simd_and(tmp8, tmp28);
        bytetest_92_93 = simd_and(tmp61, tmp43);
        tmp292 = simd_and(tmp279, bytetest_a5);
        carryQ.cq[47] = carryout2carry(pablo_blk_Advance(tmp292, carryQ.get_carry_in(47), tmp293));
        tmp294 = simd_and(tmp293, bytetest_92_93);
        struct_Mc.cc = simd_or(tmp294, struct_Mc.cc);
        bytetest_ea = simd_and(tmp3, tmp73);
        bytetest_a6 = simd_and(tmp8, tmp42);
        bytetest_83_83 = simd_and(tmp12, tmp14);
        tmp295 = simd_and(tmp279, bytetest_a6);
        carryQ.cq[48] = carryout2carry(pablo_blk_Advance(tmp295, carryQ.get_carry_in(48), tmp296));
        tmp297 = simd_and(tmp296, bytetest_83_83);
        struct_Mc.cc = simd_or(tmp297, struct_Mc.cc);
        bytetest_ea = simd_and(tmp3, tmp73);
        bytetest_a6 = simd_and(tmp8, tmp42);
        bytetest_b4_b5 = simd_and(bytetest_b0_bf, tmp267);
        tmp298 = simd_and(tmp296, bytetest_b4_b5);
        struct_Mc.cc = simd_or(tmp298, struct_Mc.cc);
        bytetest_ea = simd_and(tmp3, tmp73);
        bytetest_a6 = simd_and(tmp8, tmp42);
        bytetest_ba_bb = simd_and(bytetest_b0_bf, tmp131);
        tmp299 = simd_and(tmp296, bytetest_ba_bb);
        struct_Mc.cc = simd_or(tmp299, struct_Mc.cc);
        bytetest_ea = simd_and(tmp3, tmp73);
        bytetest_a7 = simd_and(tmp8, tmp47);
        bytetest_80_80 = simd_andc(tmp12, tmp6);
        tmp300 = simd_and(tmp279, bytetest_a7);
        carryQ.cq[49] = carryout2carry(pablo_blk_Advance(tmp300, carryQ.get_carry_in(49), tmp301));
        tmp302 = simd_and(tmp301, bytetest_80_80);
        bytetest_a6 = simd_and(tmp8, tmp42);
        bytetest_bd_bf = simd_and(tmp244, tmp5);
        tmp303 = simd_and(tmp296, bytetest_bd_bf);
        tmp304 = simd_or(tmp303, tmp302);
        struct_Mc.cc = simd_or(tmp304, struct_Mc.cc);
        bytetest_ea = simd_and(tmp3, tmp73);
        bytetest_a8 = simd_and(tmp8, tmp63);
        tmp305 = simd_not(tmp6);
        tmp306 = simd_or(simd_and(basis_bits.bit_3, tmp305), simd_andc(tmp100, basis_bits.bit_3));
        bytetest_af_b0 = simd_and(tmp230, tmp306);
        tmp307 = simd_and(tmp279, bytetest_a8);
        carryQ.cq[50] = carryout2carry(pablo_blk_Advance(tmp307, carryQ.get_carry_in(50), tmp308));
        tmp309 = simd_and(tmp308, bytetest_af_b0);
        struct_Mc.cc = simd_or(tmp309, struct_Mc.cc);
        bytetest_ea = simd_and(tmp3, tmp73);
        bytetest_a8 = simd_and(tmp8, tmp63);
        tmp310 = simd_andc(bytetest_b0_bf, basis_bits.bit_4);
        bytetest_b3_b4 = simd_and(tmp310, tmp58);
        tmp311 = simd_and(tmp308, bytetest_b3_b4);
        struct_Mc.cc = simd_or(tmp311, struct_Mc.cc);
        bytetest_ea = simd_and(tmp3, tmp73);
        bytetest_a9 = simd_and(tmp8, tmp67);
        bytetest_8d_8d = simd_and(tmp12, tmp90);
        tmp312 = simd_and(tmp279, bytetest_a9);
        carryQ.cq[51] = carryout2carry(pablo_blk_Advance(tmp312, carryQ.get_carry_in(51), tmp313));
        tmp314 = simd_and(tmp313, bytetest_8d_8d);
        struct_Mc.cc = simd_or(tmp314, struct_Mc.cc);
        bytetest_ea = simd_and(tmp3, tmp73);
        bytetest_a9 = simd_and(tmp8, tmp67);
        bytetest_bb_bb = simd_and(bytetest_b0_bf, tmp25);
        tmp315 = simd_and(tmp313, bytetest_bb_bb);
        struct_Mc.cc = simd_or(tmp315, struct_Mc.cc);
        bytetest_ea = simd_and(tmp3, tmp73);
        bytetest_ab = simd_and(tmp8, tmp25);
        bytetest_ab_ab = simd_and(tmp8, tmp25);
        tmp316 = simd_and(tmp279, bytetest_ab);
        carryQ.cq[52] = carryout2carry(pablo_blk_Advance(tmp316, carryQ.get_carry_in(52), tmp317));
        tmp318 = simd_and(tmp317, bytetest_ab_ab);
        struct_Mc.cc = simd_or(tmp318, struct_Mc.cc);
        bytetest_ea = simd_and(tmp3, tmp73);
        bytetest_ab = simd_and(tmp8, tmp25);
        bytetest_ae_af = simd_and(tmp8, tmp33);
        tmp319 = simd_and(tmp317, bytetest_ae_af);
        struct_Mc.cc = simd_or(tmp319, struct_Mc.cc);
        bytetest_ea = simd_and(tmp3, tmp73);
        bytetest_ab = simd_and(tmp8, tmp25);
        bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp28);
        tmp320 = simd_and(tmp317, bytetest_b5_b5);
        struct_Mc.cc = simd_or(tmp320, struct_Mc.cc);
        bytetest_ea = simd_and(tmp3, tmp73);
        bytetest_af = simd_and(tmp8, tmp100);
        bytetest_a3_a4 = simd_and(tmp178, tmp58);
        tmp321 = simd_and(tmp279, bytetest_af);
        carryQ.cq[53] = carryout2carry(pablo_blk_Advance(tmp321, carryQ.get_carry_in(53), tmp322));
        tmp323 = simd_and(tmp322, bytetest_a3_a4);
        struct_Mc.cc = simd_or(tmp323, struct_Mc.cc);
        bytetest_ea = simd_and(tmp3, tmp73);
        bytetest_af = simd_and(tmp8, tmp100);
        bytetest_a6_a7 = simd_and(tmp8, tmp174);
        tmp324 = simd_and(tmp322, bytetest_a6_a7);
        struct_Mc.cc = simd_or(tmp324, struct_Mc.cc);
        bytetest_ea = simd_and(tmp3, tmp73);
        bytetest_af = simd_and(tmp8, tmp100);
        bytetest_a9_aa = simd_and(tmp205, tmp103);
        tmp325 = simd_and(tmp322, bytetest_a9_aa);
        struct_Mc.cc = simd_or(tmp325, struct_Mc.cc);
        bytetest_ea = simd_and(tmp3, tmp73);
        bytetest_af = simd_and(tmp8, tmp100);
        bytetest_ac_ac = simd_and(tmp8, tmp84);
        tmp326 = simd_and(tmp322, bytetest_ac_ac);
        struct_Mc.cc = simd_or(tmp326, struct_Mc.cc);
        tmp327 = simd_and(tmp1, tmp22);
        bytetest_f0 = simd_andc(tmp327, tmp6);
        bytetest_91 = simd_and(tmp61, tmp116);
        bytetest_80 = simd_andc(tmp12, tmp6);
        bytetest_80_80 = simd_andc(tmp12, tmp6);
        tmp328 = simd_and(tmp16, bytetest_f0);
        carryQ.cq[54] = carryout2carry(pablo_blk_Advance(tmp328, carryQ.get_carry_in(54), tmp329));
        tmp330 = simd_and(tmp329, bytetest_91);
        carryQ.cq[55] = carryout2carry(pablo_blk_Advance(tmp330, carryQ.get_carry_in(55), tmp331));
        tmp332 = simd_and(tmp331, bytetest_80);
        carryQ.cq[56] = carryout2carry(pablo_blk_Advance(tmp332, carryQ.get_carry_in(56), tmp333));
        tmp334 = simd_and(tmp333, bytetest_80_80);
        struct_Mc.cc = simd_or(tmp334, struct_Mc.cc);
        bytetest_f0 = simd_andc(tmp327, tmp6);
        bytetest_91 = simd_and(tmp61, tmp116);
        bytetest_80 = simd_andc(tmp12, tmp6);
        bytetest_82_82 = simd_and(tmp12, tmp121);
        tmp335 = simd_and(tmp333, bytetest_82_82);
        struct_Mc.cc = simd_or(tmp335, struct_Mc.cc);
        bytetest_f0 = simd_andc(tmp327, tmp6);
        bytetest_91 = simd_and(tmp61, tmp116);
        bytetest_82 = simd_and(tmp12, tmp121);
        bytetest_82_82 = simd_and(tmp12, tmp121);
        tmp336 = simd_and(tmp331, bytetest_82);
        carryQ.cq[57] = carryout2carry(pablo_blk_Advance(tmp336, carryQ.get_carry_in(57), tmp337));
        tmp338 = simd_and(tmp337, bytetest_82_82);
        struct_Mc.cc = simd_or(tmp338, struct_Mc.cc);
        bytetest_f0 = simd_andc(tmp327, tmp6);
        bytetest_91 = simd_and(tmp61, tmp116);
        bytetest_82 = simd_and(tmp12, tmp121);
        tmp339 = simd_andc(bytetest_b0_bf, tmp4);
        bytetest_b0_b2 = simd_andc(tmp339, tmp13);
        tmp340 = simd_and(tmp337, bytetest_b0_b2);
        struct_Mc.cc = simd_or(tmp340, struct_Mc.cc);
        bytetest_f0 = simd_andc(tmp327, tmp6);
        bytetest_91 = simd_and(tmp61, tmp116);
        bytetest_82 = simd_and(tmp12, tmp121);
        bytetest_b7_b8 = simd_and(bytetest_b0_bf, tmp56);
        tmp341 = simd_and(tmp337, bytetest_b7_b8);
        struct_Mc.cc = simd_or(tmp341, struct_Mc.cc);
        bytetest_f0 = simd_andc(tmp327, tmp6);
        bytetest_91 = simd_and(tmp61, tmp116);
        bytetest_84 = simd_and(tmp12, tmp10);
        bytetest_ac_ac = simd_and(tmp8, tmp84);
        tmp342 = simd_and(tmp331, bytetest_84);
        carryQ.cq[58] = carryout2carry(pablo_blk_Advance(tmp342, carryQ.get_carry_in(58), tmp343));
        tmp344 = simd_and(tmp343, bytetest_ac_ac);
        struct_Mc.cc = simd_or(tmp344, struct_Mc.cc);
        bytetest_f0 = simd_andc(tmp327, tmp6);
        bytetest_91 = simd_and(tmp61, tmp116);
        bytetest_86 = simd_and(tmp12, tmp42);
        bytetest_82_82 = simd_and(tmp12, tmp121);
        tmp345 = simd_and(tmp331, bytetest_86);
        carryQ.cq[59] = carryout2carry(pablo_blk_Advance(tmp345, carryQ.get_carry_in(59), tmp346));
        tmp347 = simd_and(tmp346, bytetest_82_82);
        struct_Mc.cc = simd_or(tmp347, struct_Mc.cc);
        bytetest_f0 = simd_andc(tmp327, tmp6);
        bytetest_91 = simd_and(tmp61, tmp116);
        bytetest_86 = simd_and(tmp12, tmp42);
        tmp348 = simd_not(basis_bits.bit_6);
        tmp349 = simd_or(simd_and(basis_bits.bit_5, tmp348), simd_andc(tmp13, basis_bits.bit_5));
        bytetest_b3_b5 = simd_and(tmp310, tmp349);
        tmp350 = simd_and(tmp346, bytetest_b3_b5);
        struct_Mc.cc = simd_or(tmp350, struct_Mc.cc);
        bytetest_f0 = simd_andc(tmp327, tmp6);
        bytetest_91 = simd_and(tmp61, tmp116);
        bytetest_87 = simd_and(tmp12, tmp47);
        bytetest_80_80 = simd_andc(tmp12, tmp6);
        tmp351 = simd_and(tmp331, bytetest_87);
        carryQ.cq[60] = carryout2carry(pablo_blk_Advance(tmp351, carryQ.get_carry_in(60), tmp352));
        tmp353 = simd_and(tmp352, bytetest_80_80);
        bytetest_86 = simd_and(tmp12, tmp42);
        bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp100);
        tmp354 = simd_and(tmp346, bytetest_bf_bf);
        tmp355 = simd_or(tmp354, tmp353);
        struct_Mc.cc = simd_or(tmp355, struct_Mc.cc);
        bytetest_f0 = simd_andc(tmp327, tmp6);
        bytetest_91 = simd_and(tmp61, tmp116);
        bytetest_9a = simd_and(tmp61, tmp73);
        bytetest_ac_ac = simd_and(tmp8, tmp84);
        tmp356 = simd_and(tmp331, bytetest_9a);
        carryQ.cq[61] = carryout2carry(pablo_blk_Advance(tmp356, carryQ.get_carry_in(61), tmp357));
        tmp358 = simd_and(tmp357, bytetest_ac_ac);
        struct_Mc.cc = simd_or(tmp358, struct_Mc.cc);
        bytetest_f0 = simd_andc(tmp327, tmp6);
        bytetest_91 = simd_and(tmp61, tmp116);
        bytetest_9a = simd_and(tmp61, tmp73);
        bytetest_ae_af = simd_and(tmp8, tmp33);
        tmp359 = simd_and(tmp357, bytetest_ae_af);
        struct_Mc.cc = simd_or(tmp359, struct_Mc.cc);
        bytetest_f0 = simd_andc(tmp327, tmp6);
        bytetest_91 = simd_and(tmp61, tmp116);
        bytetest_9a = simd_and(tmp61, tmp73);
        bytetest_b6_b6 = simd_and(bytetest_b0_bf, tmp42);
        tmp360 = simd_and(tmp357, bytetest_b6_b6);
        struct_Mc.cc = simd_or(tmp360, struct_Mc.cc);
        bytetest_f0 = simd_andc(tmp327, tmp6);
        bytetest_96 = simd_and(tmp61, tmp42);
        bytetest_bd = simd_and(bytetest_b0_bf, tmp90);
        tmp361 = simd_and(basis_bits.bit_3, tmp100);
        tmp362 = simd_not(tmp361);
        tmp363 = simd_and(basis_bits.bit_3, tmp6);
        tmp364 = simd_or(simd_and(basis_bits.bit_2, tmp362), simd_andc(tmp363, basis_bits.bit_2));
        bytetest_91_be = simd_and(tmp7, tmp364);
        tmp365 = simd_and(tmp329, bytetest_96);
        carryQ.cq[62] = carryout2carry(pablo_blk_Advance(tmp365, carryQ.get_carry_in(62), tmp366));
        tmp367 = simd_and(tmp366, bytetest_bd);
        carryQ.cq[63] = carryout2carry(pablo_blk_Advance(tmp367, carryQ.get_carry_in(63), tmp368));
        tmp369 = simd_and(tmp368, bytetest_91_be);
        struct_Mc.cc = simd_or(tmp369, struct_Mc.cc);
        bytetest_f0 = simd_andc(tmp327, tmp6);
        bytetest_9d = simd_and(tmp61, tmp90);
        bytetest_85 = simd_and(tmp12, tmp28);
        tmp370 = simd_and(tmp8, tmp9);
        bytetest_a5_a6 = simd_and(tmp370, tmp103);
        tmp371 = simd_and(tmp329, bytetest_9d);
        carryQ.cq[64] = carryout2carry(pablo_blk_Advance(tmp371, carryQ.get_carry_in(64), tmp372));
        tmp373 = simd_and(tmp372, bytetest_85);
        carryQ.cq[65] = carryout2carry(pablo_blk_Advance(tmp373, carryQ.get_carry_in(65), tmp374));
        tmp375 = simd_and(tmp374, bytetest_a5_a6);
        struct_Mc.cc = simd_or(tmp375, struct_Mc.cc);
        bytetest_f0 = simd_andc(tmp327, tmp6);
        bytetest_9d = simd_and(tmp61, tmp90);
        bytetest_85 = simd_and(tmp12, tmp28);
        bytetest_ad_b2 = simd_and(tmp230, tmp234);
        tmp376 = simd_and(tmp374, bytetest_ad_b2);
        struct_Mc.cc = simd_or(tmp376, struct_Mc.cc);
        carryQ.CarryQ_Adjust(66);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Mc & struct_Mc, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_e0, tmp7, tmp8, tmp9;
		BitBlock tmp10, bytetest_a4, tmp11, tmp12, tmp13, tmp14, bytetest_83_83, tmp15;
		BitBlock tmp16, tmp17, tmp18, tmp19, tmp20, tmp21, tmp22, tmp23, tmp24, tmp25;
		BitBlock bytetest_bb_bb, tmp26, tmp27, tmp28, bytetest_a5, bytetest_80_80;
		BitBlock tmp29, tmp30, tmp31, tmp32, tmp33, bytetest_be_bf, tmp34, tmp35;
		BitBlock tmp36, tmp37, tmp38, bytetest_89_8c, tmp39, bytetest_8e_8f, tmp40;
		BitBlock tmp41, tmp42, bytetest_a6, tmp43, bytetest_82_83, tmp44, tmp45, tmp46;
		BitBlock tmp47, bytetest_a7, tmp48, tmp49, tmp50, tmp51, tmp52, tmp53, tmp54;
		BitBlock tmp55, tmp56, bytetest_87_88, tmp57, tmp58, bytetest_8b_8c, tmp59;
		BitBlock tmp60, tmp61, bytetest_97_97, tmp62, tmp63, bytetest_a8, tmp64, tmp65;
		BitBlock tmp66, tmp67, bytetest_a9, tmp68, tmp69, tmp70, tmp71, tmp72, tmp73;
		BitBlock bytetest_aa, tmp74, tmp75, tmp76, bytetest_ab, tmp77, tmp78, tmp79;
		BitBlock tmp80, tmp81, bytetest_89_89, tmp82, tmp83, tmp84, bytetest_ac, tmp85;
		BitBlock tmp86, tmp87, tmp88, bytetest_be_be, tmp89, tmp90, bytetest_ad, tmp91;
		BitBlock tmp92, tmp93, tmp94, tmp95, tmp96, bytetest_ae, tmp97, tmp98, tmp99;
		BitBlock tmp100, bytetest_af, tmp101, tmp102, tmp103, bytetest_81_82, tmp104;
		BitBlock tmp105, tmp106, tmp107, tmp108, bytetest_86_88, tmp109, tmp110;
		BitBlock bytetest_8a_8c, tmp111, tmp112, bytetest_b0, bytetest_81_83, tmp113;
		BitBlock tmp114, tmp115, tmp116, bytetest_b1, tmp117, bytetest_81_84, tmp118;
		BitBlock tmp119, tmp120, tmp121, bytetest_b2, tmp122, tmp123, tmp124, tmp125;
		BitBlock bytetest_b3, tmp126, bytetest_80_84, tmp127, tmp128, tmp129, tmp130;
		BitBlock tmp131, bytetest_8a_8b, tmp132, tmp133, bytetest_95_96, tmp134;
		BitBlock bytetest_b4, tmp135, tmp136, tmp137, bytetest_b5, tmp138, tmp139;
		BitBlock tmp140, tmp141, tmp142, tmp143, tmp144, tmp145, bytetest_b6, tmp146;
		BitBlock tmp147, tmp148, bytetest_b7, tmp149, tmp150, tmp151, tmp152;
		BitBlock bytetest_8f_91, tmp153, tmp154, tmp155, bytetest_98_9f, tmp156;
		BitBlock bytetest_b2_b3, tmp157, bytetest_bc, tmp158, tmp159, tmp160;
		BitBlock bytetest_bd, bytetest_bf_bf, tmp161, tmp162, tmp163, bytetest_e1;
		BitBlock bytetest_80, tmp164, bytetest_ab_ac, tmp165, tmp166, tmp167, tmp168;
		BitBlock tmp169, bytetest_b1_b1, tmp170, bytetest_b8_b8, tmp171, tmp172;
		BitBlock bytetest_bb_bc, tmp173, bytetest_81, tmp174, bytetest_96_97, tmp175;
		BitBlock tmp176, tmp177, tmp178, bytetest_a2_a4, tmp179, tmp180, tmp181;
		BitBlock bytetest_a7_ad, tmp182, bytetest_82, bytetest_83_84, tmp183, tmp184;
		BitBlock tmp185, tmp186, tmp187, bytetest_87_8c, tmp188, bytetest_8f_8f;
		BitBlock tmp189, bytetest_9a_9c, tmp190, bytetest_9e, bytetest_b6_b6, tmp191;
		BitBlock tmp192, tmp193, bytetest_9f, bytetest_80_85, tmp194, tmp195, tmp196;
		BitBlock tmp197, tmp198, tmp199, tmp200, tmp201, bytetest_a3_a6, tmp202;
		BitBlock tmp203, tmp204, tmp205, bytetest_a9_ab, tmp206, bytetest_b0_b1;
		BitBlock tmp207, tmp208, tmp209, bytetest_b3_b8, tmp210, tmp211, tmp212;
		BitBlock tmp213, bytetest_b0_bf, tmp214, tmp215, tmp216, tmp217, tmp218;
		BitBlock bytetest_88_89, tmp219, tmp220, bytetest_99_9a, tmp221, tmp222;
		BitBlock tmp223, bytetest_95_95, tmp224, tmp225, tmp226, tmp227;
		BitBlock bytetest_a1_a1, tmp228, bytetest_a3_a4, tmp229, tmp230, tmp231;
		BitBlock tmp232, tmp233, tmp234, bytetest_ad_b2, tmp235, bytetest_84_84;
		BitBlock tmp236, tmp237, tmp238, bytetest_b5_b5, tmp239, tmp240;
		BitBlock bytetest_80_81, tmp241, tmp242, tmp243, tmp244, bytetest_bd_bf;
		BitBlock tmp245, tmp246, tmp247, bytetest_82_82, tmp248, tmp249, tmp250;
		BitBlock tmp251, bytetest_a6_a7, tmp252, bytetest_aa_aa, tmp253, tmp254;
		BitBlock bytetest_ac_ad, tmp255, bytetest_a7_a7, tmp256, tmp257, tmp258;
		BitBlock bytetest_aa_ac, tmp259, bytetest_ae_ae, tmp260, tmp261, tmp262;
		BitBlock tmp263, bytetest_a4_ab, tmp264, tmp265, tmp266, tmp267;
		BitBlock bytetest_b4_b5, tmp268, tmp269, tmp270, tmp271, tmp272, bytetest_e3;
		BitBlock bytetest_ae_af, tmp273, tmp274, tmp275, tmp276, tmp277, bytetest_ea;
		BitBlock bytetest_a0, tmp278, tmp279, tmp280, tmp281, tmp282, tmp283;
		BitBlock bytetest_a2, tmp284, tmp285, tmp286, bytetest_a3, bytetest_80_83;
		BitBlock tmp287, tmp288, tmp289, bytetest_b4_bf, tmp290, tmp291;
		BitBlock bytetest_92_93, tmp292, tmp293, tmp294, tmp295, tmp296, tmp297;
		BitBlock tmp298, bytetest_ba_bb, tmp299, tmp300, tmp301, tmp302, tmp303;
		BitBlock tmp304, tmp305, tmp306, bytetest_af_b0, tmp307, tmp308, tmp309;
		BitBlock tmp310, bytetest_b3_b4, tmp311, bytetest_8d_8d, tmp312, tmp313;
		BitBlock tmp314, tmp315, bytetest_ab_ab, tmp316, tmp317, tmp318, tmp319;
		BitBlock tmp320, tmp321, tmp322, tmp323, tmp324, bytetest_a9_aa, tmp325;
		BitBlock bytetest_ac_ac, tmp326, tmp327, bytetest_f0, bytetest_91, tmp328;
		BitBlock tmp329, tmp330, tmp331, tmp332, tmp333, tmp334, tmp335, tmp336;
		BitBlock tmp337, tmp338, tmp339, bytetest_b0_b2, tmp340, bytetest_b7_b8;
		BitBlock tmp341, bytetest_84, tmp342, tmp343, tmp344, bytetest_86, tmp345;
		BitBlock tmp346, tmp347, tmp348, tmp349, bytetest_b3_b5, tmp350, bytetest_87;
		BitBlock tmp351, tmp352, tmp353, tmp354, tmp355, bytetest_9a, tmp356, tmp357;
		BitBlock tmp358, tmp359, tmp360, bytetest_96, tmp361, tmp362, tmp363, tmp364;
		BitBlock bytetest_91_be, tmp365, tmp366, tmp367, tmp368, tmp369, bytetest_9d;
		BitBlock bytetest_85, tmp370, bytetest_a5_a6, tmp371, tmp372, tmp373, tmp374;
		BitBlock tmp375, tmp376;




        struct_Mc.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_and(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_or(tmp4, tmp5);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_and(tmp7, tmp2);
        tmp9 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp10 = simd_andc(tmp9, tmp5);
        bytetest_a4 = simd_and(tmp8, tmp10);
        tmp11 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp12 = simd_andc(tmp7, tmp11);
        tmp13 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp14 = simd_andc(tmp13, tmp4);
        bytetest_83_83 = simd_and(tmp12, tmp14);
        tmp15 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp15, carryQ.get_carry_in(0), tmp16));
        tmp17 = simd_and(tmp16, bytetest_e0);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp17, carryQ.get_carry_in(1), tmp18));
        tmp19 = simd_and(tmp18, bytetest_a4);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp19, carryQ.get_carry_in(2), tmp20));
        tmp21 = simd_and(tmp20, bytetest_83_83);
        struct_Mc.cc = simd_or(tmp21, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_a4 = simd_and(tmp8, tmp10);
        tmp22 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp23 = simd_and(tmp7, tmp22);
        tmp24 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp25 = simd_and(tmp24, tmp13);
        bytetest_bb_bb = simd_and(tmp23, tmp25);
        tmp26 = simd_and(tmp20, bytetest_bb_bb);
        struct_Mc.cc = simd_or(tmp26, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        tmp27 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp28 = simd_and(tmp9, tmp27);
        bytetest_a5 = simd_and(tmp8, tmp28);
        bytetest_80_80 = simd_andc(tmp12, tmp6);
        tmp29 = simd_and(tmp18, bytetest_a5);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp29, carryQ.get_carry_in(3), tmp30));
        tmp31 = simd_and(tmp30, bytetest_80_80);
        bytetest_a4 = simd_and(tmp8, tmp10);
        tmp32 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp33 = simd_and(tmp32, basis_bits.bit_6);
        bytetest_be_bf = simd_and(tmp23, tmp33);
        tmp34 = simd_and(tmp20, bytetest_be_bf);
        tmp35 = simd_or(tmp34, tmp31);
        struct_Mc.cc = simd_or(tmp35, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_a5 = simd_and(tmp8, tmp28);
        tmp36 = simd_and(tmp12, basis_bits.bit_4);
        tmp37 = simd_not(tmp5);
        tmp38 = simd_or(simd_and(basis_bits.bit_5, tmp37), simd_andc(tmp5, basis_bits.bit_5));
        bytetest_89_8c = simd_and(tmp36, tmp38);
        tmp39 = simd_and(tmp30, bytetest_89_8c);
        struct_Mc.cc = simd_or(tmp39, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_a5 = simd_and(tmp8, tmp28);
        bytetest_8e_8f = simd_and(tmp12, tmp33);
        tmp40 = simd_and(tmp30, bytetest_8e_8f);
        struct_Mc.cc = simd_or(tmp40, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        tmp41 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp42 = simd_and(tmp9, tmp41);
        bytetest_a6 = simd_and(tmp8, tmp42);
        tmp43 = simd_andc(basis_bits.bit_6, tmp4);
        bytetest_82_83 = simd_and(tmp12, tmp43);
        tmp44 = simd_and(tmp18, bytetest_a6);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp44, carryQ.get_carry_in(4), tmp45));
        tmp46 = simd_and(tmp45, bytetest_82_83);
        struct_Mc.cc = simd_or(tmp46, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        tmp47 = simd_and(tmp9, tmp13);
        bytetest_a7 = simd_and(tmp8, tmp47);
        bytetest_80_80 = simd_andc(tmp12, tmp6);
        tmp48 = simd_and(tmp18, bytetest_a7);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp48, carryQ.get_carry_in(5), tmp49));
        tmp50 = simd_and(tmp49, bytetest_80_80);
        bytetest_a6 = simd_and(tmp8, tmp42);
        bytetest_be_bf = simd_and(tmp23, tmp33);
        tmp51 = simd_and(tmp45, bytetest_be_bf);
        tmp52 = simd_or(tmp51, tmp50);
        struct_Mc.cc = simd_or(tmp52, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_a7 = simd_and(tmp8, tmp47);
        tmp53 = simd_or(basis_bits.bit_5, tmp5);
        tmp54 = simd_not(tmp53);
        tmp55 = simd_and(basis_bits.bit_5, tmp13);
        tmp56 = simd_or(simd_and(basis_bits.bit_4, tmp54), simd_andc(tmp55, basis_bits.bit_4));
        bytetest_87_88 = simd_and(tmp12, tmp56);
        tmp57 = simd_and(tmp49, bytetest_87_88);
        struct_Mc.cc = simd_or(tmp57, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_a7 = simd_and(tmp8, tmp47);
        tmp58 = simd_or(simd_and(basis_bits.bit_5, tmp37), simd_andc(tmp13, basis_bits.bit_5));
        bytetest_8b_8c = simd_and(tmp36, tmp58);
        tmp59 = simd_and(tmp49, bytetest_8b_8c);
        struct_Mc.cc = simd_or(tmp59, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_a7 = simd_and(tmp8, tmp47);
        tmp60 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp61 = simd_and(tmp7, tmp60);
        bytetest_97_97 = simd_and(tmp61, tmp47);
        tmp62 = simd_and(tmp49, bytetest_97_97);
        struct_Mc.cc = simd_or(tmp62, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        tmp63 = simd_andc(tmp24, tmp5);
        bytetest_a8 = simd_and(tmp8, tmp63);
        bytetest_83_83 = simd_and(tmp12, tmp14);
        tmp64 = simd_and(tmp18, bytetest_a8);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp64, carryQ.get_carry_in(6), tmp65));
        tmp66 = simd_and(tmp65, bytetest_83_83);
        struct_Mc.cc = simd_or(tmp66, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        tmp67 = simd_and(tmp24, tmp27);
        bytetest_a9 = simd_and(tmp8, tmp67);
        bytetest_80_80 = simd_andc(tmp12, tmp6);
        tmp68 = simd_and(tmp18, bytetest_a9);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp68, carryQ.get_carry_in(7), tmp69));
        tmp70 = simd_and(tmp69, bytetest_80_80);
        bytetest_a8 = simd_and(tmp8, tmp63);
        bytetest_be_bf = simd_and(tmp23, tmp33);
        tmp71 = simd_and(tmp65, bytetest_be_bf);
        tmp72 = simd_or(tmp71, tmp70);
        struct_Mc.cc = simd_or(tmp72, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        tmp73 = simd_and(tmp24, tmp41);
        bytetest_aa = simd_and(tmp8, tmp73);
        bytetest_83_83 = simd_and(tmp12, tmp14);
        tmp74 = simd_and(tmp18, bytetest_aa);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(tmp74, carryQ.get_carry_in(8), tmp75));
        tmp76 = simd_and(tmp75, bytetest_83_83);
        struct_Mc.cc = simd_or(tmp76, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_ab = simd_and(tmp8, tmp25);
        bytetest_80_80 = simd_andc(tmp12, tmp6);
        tmp77 = simd_and(tmp18, bytetest_ab);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(tmp77, carryQ.get_carry_in(9), tmp78));
        tmp79 = simd_and(tmp78, bytetest_80_80);
        bytetest_aa = simd_and(tmp8, tmp73);
        bytetest_be_bf = simd_and(tmp23, tmp33);
        tmp80 = simd_and(tmp75, bytetest_be_bf);
        tmp81 = simd_or(tmp80, tmp79);
        struct_Mc.cc = simd_or(tmp81, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_ab = simd_and(tmp8, tmp25);
        bytetest_89_89 = simd_and(tmp12, tmp67);
        tmp82 = simd_and(tmp78, bytetest_89_89);
        struct_Mc.cc = simd_or(tmp82, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_ab = simd_and(tmp8, tmp25);
        bytetest_8b_8c = simd_and(tmp36, tmp58);
        tmp83 = simd_and(tmp78, bytetest_8b_8c);
        struct_Mc.cc = simd_or(tmp83, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        tmp84 = simd_andc(tmp32, tmp5);
        bytetest_ac = simd_and(tmp8, tmp84);
        bytetest_82_83 = simd_and(tmp12, tmp43);
        tmp85 = simd_and(tmp18, bytetest_ac);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(tmp85, carryQ.get_carry_in(10), tmp86));
        tmp87 = simd_and(tmp86, bytetest_82_83);
        struct_Mc.cc = simd_or(tmp87, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_ac = simd_and(tmp8, tmp84);
        tmp88 = simd_and(tmp32, tmp41);
        bytetest_be_be = simd_and(tmp23, tmp88);
        tmp89 = simd_and(tmp86, bytetest_be_be);
        struct_Mc.cc = simd_or(tmp89, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        tmp90 = simd_and(tmp32, tmp27);
        bytetest_ad = simd_and(tmp8, tmp90);
        bytetest_80_80 = simd_andc(tmp12, tmp6);
        tmp91 = simd_and(tmp18, bytetest_ad);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(tmp91, carryQ.get_carry_in(11), tmp92));
        tmp93 = simd_and(tmp92, bytetest_80_80);
        struct_Mc.cc = simd_or(tmp93, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_ad = simd_and(tmp8, tmp90);
        bytetest_87_88 = simd_and(tmp12, tmp56);
        tmp94 = simd_and(tmp92, bytetest_87_88);
        struct_Mc.cc = simd_or(tmp94, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_ad = simd_and(tmp8, tmp90);
        bytetest_8b_8c = simd_and(tmp36, tmp58);
        tmp95 = simd_and(tmp92, bytetest_8b_8c);
        struct_Mc.cc = simd_or(tmp95, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_ad = simd_and(tmp8, tmp90);
        bytetest_97_97 = simd_and(tmp61, tmp47);
        tmp96 = simd_and(tmp92, bytetest_97_97);
        struct_Mc.cc = simd_or(tmp96, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_ae = simd_and(tmp8, tmp88);
        bytetest_be_bf = simd_and(tmp23, tmp33);
        tmp97 = simd_and(tmp18, bytetest_ae);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(tmp97, carryQ.get_carry_in(12), tmp98));
        tmp99 = simd_and(tmp98, bytetest_be_bf);
        struct_Mc.cc = simd_or(tmp99, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        tmp100 = simd_and(tmp32, tmp13);
        bytetest_af = simd_and(tmp8, tmp100);
        tmp101 = simd_andc(tmp12, tmp4);
        tmp102 = simd_not(basis_bits.bit_7);
        tmp103 = simd_or(simd_and(basis_bits.bit_6, tmp102), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
        bytetest_81_82 = simd_and(tmp101, tmp103);
        tmp104 = simd_and(tmp18, bytetest_af);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(tmp104, carryQ.get_carry_in(13), tmp105));
        tmp106 = simd_and(tmp105, bytetest_81_82);
        struct_Mc.cc = simd_or(tmp106, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_af = simd_and(tmp8, tmp100);
        tmp107 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp108 = simd_or(simd_and(basis_bits.bit_4, tmp54), simd_andc(tmp107, basis_bits.bit_4));
        bytetest_86_88 = simd_and(tmp12, tmp108);
        tmp109 = simd_and(tmp105, bytetest_86_88);
        struct_Mc.cc = simd_or(tmp109, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_af = simd_and(tmp8, tmp100);
        tmp110 = simd_or(simd_and(basis_bits.bit_5, tmp37), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        bytetest_8a_8c = simd_and(tmp36, tmp110);
        tmp111 = simd_and(tmp105, bytetest_8a_8c);
        struct_Mc.cc = simd_or(tmp111, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_af = simd_and(tmp8, tmp100);
        bytetest_97_97 = simd_and(tmp61, tmp47);
        tmp112 = simd_and(tmp105, bytetest_97_97);
        struct_Mc.cc = simd_or(tmp112, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_b0 = simd_andc(tmp23, tmp6);
        bytetest_81_83 = simd_and(tmp101, tmp5);
        tmp113 = simd_and(tmp18, bytetest_b0);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(tmp113, carryQ.get_carry_in(14), tmp114));
        tmp115 = simd_and(tmp114, bytetest_81_83);
        struct_Mc.cc = simd_or(tmp115, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        tmp116 = simd_andc(tmp27, tmp4);
        bytetest_b1 = simd_and(tmp23, tmp116);
        tmp117 = simd_andc(tmp12, basis_bits.bit_4);
        bytetest_81_84 = simd_and(tmp117, tmp38);
        tmp118 = simd_and(tmp18, bytetest_b1);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(tmp118, carryQ.get_carry_in(15), tmp119));
        tmp120 = simd_and(tmp119, bytetest_81_84);
        struct_Mc.cc = simd_or(tmp120, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        tmp121 = simd_andc(tmp41, tmp4);
        bytetest_b2 = simd_and(tmp23, tmp121);
        bytetest_82_83 = simd_and(tmp12, tmp43);
        tmp122 = simd_and(tmp18, bytetest_b2);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(tmp122, carryQ.get_carry_in(16), tmp123));
        tmp124 = simd_and(tmp123, bytetest_82_83);
        struct_Mc.cc = simd_or(tmp124, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_b2 = simd_and(tmp23, tmp121);
        bytetest_be_be = simd_and(tmp23, tmp88);
        tmp125 = simd_and(tmp123, bytetest_be_be);
        struct_Mc.cc = simd_or(tmp125, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_b3 = simd_and(tmp23, tmp14);
        tmp126 = simd_and(basis_bits.bit_5, tmp5);
        bytetest_80_84 = simd_andc(tmp117, tmp126);
        tmp127 = simd_and(tmp18, bytetest_b3);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(tmp127, carryQ.get_carry_in(17), tmp128));
        tmp129 = simd_and(tmp128, bytetest_80_84);
        struct_Mc.cc = simd_or(tmp129, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_b3 = simd_and(tmp23, tmp14);
        bytetest_87_88 = simd_and(tmp12, tmp56);
        tmp130 = simd_and(tmp128, bytetest_87_88);
        struct_Mc.cc = simd_or(tmp130, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_b3 = simd_and(tmp23, tmp14);
        tmp131 = simd_and(tmp24, basis_bits.bit_6);
        bytetest_8a_8b = simd_and(tmp12, tmp131);
        tmp132 = simd_and(tmp128, bytetest_8a_8b);
        struct_Mc.cc = simd_or(tmp132, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_b3 = simd_and(tmp23, tmp14);
        tmp133 = simd_and(tmp61, tmp9);
        bytetest_95_96 = simd_and(tmp133, tmp103);
        tmp134 = simd_and(tmp128, bytetest_95_96);
        struct_Mc.cc = simd_or(tmp134, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_b4 = simd_and(tmp23, tmp10);
        bytetest_82_83 = simd_and(tmp12, tmp43);
        tmp135 = simd_and(tmp18, bytetest_b4);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(tmp135, carryQ.get_carry_in(18), tmp136));
        tmp137 = simd_and(tmp136, bytetest_82_83);
        struct_Mc.cc = simd_or(tmp137, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_b5 = simd_and(tmp23, tmp28);
        bytetest_80_80 = simd_andc(tmp12, tmp6);
        tmp138 = simd_and(tmp18, bytetest_b5);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(tmp138, carryQ.get_carry_in(19), tmp139));
        tmp140 = simd_and(tmp139, bytetest_80_80);
        bytetest_b4 = simd_and(tmp23, tmp10);
        bytetest_be_bf = simd_and(tmp23, tmp33);
        tmp141 = simd_and(tmp136, bytetest_be_bf);
        tmp142 = simd_or(tmp141, tmp140);
        struct_Mc.cc = simd_or(tmp142, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_b5 = simd_and(tmp23, tmp28);
        bytetest_86_88 = simd_and(tmp12, tmp108);
        tmp143 = simd_and(tmp139, bytetest_86_88);
        struct_Mc.cc = simd_or(tmp143, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_b5 = simd_and(tmp23, tmp28);
        bytetest_8a_8c = simd_and(tmp36, tmp110);
        tmp144 = simd_and(tmp139, bytetest_8a_8c);
        struct_Mc.cc = simd_or(tmp144, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_b5 = simd_and(tmp23, tmp28);
        bytetest_97_97 = simd_and(tmp61, tmp47);
        tmp145 = simd_and(tmp139, bytetest_97_97);
        struct_Mc.cc = simd_or(tmp145, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_b6 = simd_and(tmp23, tmp42);
        bytetest_82_83 = simd_and(tmp12, tmp43);
        tmp146 = simd_and(tmp18, bytetest_b6);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(tmp146, carryQ.get_carry_in(20), tmp147));
        tmp148 = simd_and(tmp147, bytetest_82_83);
        struct_Mc.cc = simd_or(tmp148, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_b7 = simd_and(tmp23, tmp47);
        tmp149 = simd_andc(tmp7, basis_bits.bit_2);
        tmp150 = simd_or(tmp4, basis_bits.bit_6);
        tmp151 = simd_not(tmp150);
        tmp152 = simd_or(simd_and(basis_bits.bit_3, tmp151), simd_andc(tmp100, basis_bits.bit_3));
        bytetest_8f_91 = simd_and(tmp149, tmp152);
        tmp153 = simd_and(tmp18, bytetest_b7);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(tmp153, carryQ.get_carry_in(21), tmp154));
        tmp155 = simd_and(tmp154, bytetest_8f_91);
        struct_Mc.cc = simd_or(tmp155, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_b7 = simd_and(tmp23, tmp47);
        bytetest_98_9f = simd_and(tmp61, basis_bits.bit_4);
        tmp156 = simd_and(tmp154, bytetest_98_9f);
        struct_Mc.cc = simd_or(tmp156, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_b7 = simd_and(tmp23, tmp47);
        bytetest_b2_b3 = simd_and(tmp23, tmp43);
        tmp157 = simd_and(tmp154, bytetest_b2_b3);
        struct_Mc.cc = simd_or(tmp157, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_bc = simd_and(tmp23, tmp84);
        bytetest_be_bf = simd_and(tmp23, tmp33);
        tmp158 = simd_and(tmp18, bytetest_bc);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(tmp158, carryQ.get_carry_in(22), tmp159));
        tmp160 = simd_and(tmp159, bytetest_be_bf);
        struct_Mc.cc = simd_or(tmp160, struct_Mc.cc);
        bytetest_e0 = simd_andc(tmp3, tmp6);
        bytetest_bd = simd_and(tmp23, tmp90);
        bytetest_bf_bf = simd_and(tmp23, tmp100);
        tmp161 = simd_and(tmp18, bytetest_bd);
        carryQ.cq[23] = carryout2carry(pablo_blk_Advance(tmp161, carryQ.get_carry_in(23), tmp162));
        tmp163 = simd_and(tmp162, bytetest_bf_bf);
        struct_Mc.cc = simd_or(tmp163, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_80 = simd_andc(tmp12, tmp6);
        tmp164 = simd_and(tmp8, basis_bits.bit_4);
        bytetest_ab_ac = simd_and(tmp164, tmp58);
        tmp165 = simd_and(tmp16, bytetest_e1);
        carryQ.cq[24] = carryout2carry(pablo_blk_Advance(tmp165, carryQ.get_carry_in(24), tmp166));
        tmp167 = simd_and(tmp166, bytetest_80);
        carryQ.cq[25] = carryout2carry(pablo_blk_Advance(tmp167, carryQ.get_carry_in(25), tmp168));
        tmp169 = simd_and(tmp168, bytetest_ab_ac);
        struct_Mc.cc = simd_or(tmp169, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_80 = simd_andc(tmp12, tmp6);
        bytetest_b1_b1 = simd_and(tmp23, tmp116);
        tmp170 = simd_and(tmp168, bytetest_b1_b1);
        struct_Mc.cc = simd_or(tmp170, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_80 = simd_andc(tmp12, tmp6);
        bytetest_b8_b8 = simd_and(tmp23, tmp63);
        tmp171 = simd_and(tmp168, bytetest_b8_b8);
        struct_Mc.cc = simd_or(tmp171, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_80 = simd_andc(tmp12, tmp6);
        tmp172 = simd_and(tmp23, basis_bits.bit_4);
        bytetest_bb_bc = simd_and(tmp172, tmp58);
        tmp173 = simd_and(tmp168, bytetest_bb_bc);
        struct_Mc.cc = simd_or(tmp173, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_81 = simd_and(tmp12, tmp116);
        tmp174 = simd_and(tmp9, basis_bits.bit_6);
        bytetest_96_97 = simd_and(tmp61, tmp174);
        tmp175 = simd_and(tmp166, bytetest_81);
        carryQ.cq[26] = carryout2carry(pablo_blk_Advance(tmp175, carryQ.get_carry_in(26), tmp176));
        tmp177 = simd_and(tmp176, bytetest_96_97);
        struct_Mc.cc = simd_or(tmp177, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_81 = simd_and(tmp12, tmp116);
        tmp178 = simd_andc(tmp8, basis_bits.bit_4);
        bytetest_a2_a4 = simd_and(tmp178, tmp110);
        tmp179 = simd_and(tmp176, bytetest_a2_a4);
        struct_Mc.cc = simd_or(tmp179, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_81 = simd_and(tmp12, tmp116);
        tmp180 = simd_not(tmp107);
        tmp181 = simd_or(simd_and(basis_bits.bit_4, tmp180), simd_andc(tmp55, basis_bits.bit_4));
        bytetest_a7_ad = simd_and(tmp8, tmp181);
        tmp182 = simd_and(tmp176, bytetest_a7_ad);
        struct_Mc.cc = simd_or(tmp182, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_82 = simd_and(tmp12, tmp121);
        bytetest_83_84 = simd_and(tmp117, tmp58);
        tmp183 = simd_and(tmp166, bytetest_82);
        carryQ.cq[27] = carryout2carry(pablo_blk_Advance(tmp183, carryQ.get_carry_in(27), tmp184));
        tmp185 = simd_and(tmp184, bytetest_83_84);
        struct_Mc.cc = simd_or(tmp185, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_82 = simd_and(tmp12, tmp121);
        tmp186 = simd_not(tmp126);
        tmp187 = simd_or(simd_and(basis_bits.bit_4, tmp186), simd_andc(tmp55, basis_bits.bit_4));
        bytetest_87_8c = simd_and(tmp12, tmp187);
        tmp188 = simd_and(tmp184, bytetest_87_8c);
        struct_Mc.cc = simd_or(tmp188, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_82 = simd_and(tmp12, tmp121);
        bytetest_8f_8f = simd_and(tmp12, tmp100);
        tmp189 = simd_and(tmp184, bytetest_8f_8f);
        struct_Mc.cc = simd_or(tmp189, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_82 = simd_and(tmp12, tmp121);
        bytetest_9a_9c = simd_and(bytetest_98_9f, tmp110);
        tmp190 = simd_and(tmp184, bytetest_9a_9c);
        struct_Mc.cc = simd_or(tmp190, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_9e = simd_and(tmp61, tmp88);
        bytetest_b6_b6 = simd_and(tmp23, tmp42);
        tmp191 = simd_and(tmp166, bytetest_9e);
        carryQ.cq[28] = carryout2carry(pablo_blk_Advance(tmp191, carryQ.get_carry_in(28), tmp192));
        tmp193 = simd_and(tmp192, bytetest_b6_b6);
        struct_Mc.cc = simd_or(tmp193, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_9f = simd_and(tmp61, tmp100);
        bytetest_80_85 = simd_andc(tmp117, tmp107);
        tmp194 = simd_and(tmp166, bytetest_9f);
        carryQ.cq[29] = carryout2carry(pablo_blk_Advance(tmp194, carryQ.get_carry_in(29), tmp195));
        tmp196 = simd_and(tmp195, bytetest_80_85);
        bytetest_9e = simd_and(tmp61, tmp88);
        bytetest_be_bf = simd_and(tmp23, tmp33);
        tmp197 = simd_and(tmp192, bytetest_be_bf);
        tmp198 = simd_or(tmp197, tmp196);
        struct_Mc.cc = simd_or(tmp198, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_9f = simd_and(tmp61, tmp100);
        bytetest_87_88 = simd_and(tmp12, tmp56);
        tmp199 = simd_and(tmp195, bytetest_87_88);
        struct_Mc.cc = simd_or(tmp199, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_a4 = simd_and(tmp8, tmp10);
        tmp200 = simd_not(tmp13);
        tmp201 = simd_or(simd_and(basis_bits.bit_5, tmp200), simd_andc(tmp13, basis_bits.bit_5));
        bytetest_a3_a6 = simd_and(tmp178, tmp201);
        tmp202 = simd_and(tmp166, bytetest_a4);
        carryQ.cq[30] = carryout2carry(pablo_blk_Advance(tmp202, carryQ.get_carry_in(30), tmp203));
        tmp204 = simd_and(tmp203, bytetest_a3_a6);
        struct_Mc.cc = simd_or(tmp204, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_a4 = simd_and(tmp8, tmp10);
        tmp205 = simd_and(tmp8, tmp24);
        bytetest_a9_ab = simd_and(tmp205, tmp5);
        tmp206 = simd_and(tmp203, bytetest_a9_ab);
        struct_Mc.cc = simd_or(tmp206, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_a4 = simd_and(tmp8, tmp10);
        bytetest_b0_b1 = simd_andc(tmp23, tmp150);
        tmp207 = simd_and(tmp203, bytetest_b0_b1);
        struct_Mc.cc = simd_or(tmp207, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_a4 = simd_and(tmp8, tmp10);
        tmp208 = simd_or(basis_bits.bit_5, tmp13);
        tmp209 = simd_or(simd_and(basis_bits.bit_4, tmp54), simd_andc(tmp208, basis_bits.bit_4));
        bytetest_b3_b8 = simd_and(tmp23, tmp209);
        tmp210 = simd_and(tmp203, bytetest_b3_b8);
        struct_Mc.cc = simd_or(tmp210, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_a7 = simd_and(tmp8, tmp47);
        bytetest_80_80 = simd_andc(tmp12, tmp6);
        tmp211 = simd_and(tmp166, bytetest_a7);
        carryQ.cq[31] = carryout2carry(pablo_blk_Advance(tmp211, carryQ.get_carry_in(31), tmp212));
        tmp213 = simd_and(tmp212, bytetest_80_80);
        bytetest_a6 = simd_and(tmp8, tmp42);
        bytetest_b0_bf = simd_and(tmp7, tmp22);
        tmp214 = simd_and(tmp166, bytetest_a6);
        carryQ.cq[32] = carryout2carry(pablo_blk_Advance(tmp214, carryQ.get_carry_in(32), tmp215));
        tmp216 = simd_and(tmp215, bytetest_b0_bf);
        tmp217 = simd_or(tmp216, tmp213);
        struct_Mc.cc = simd_or(tmp217, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_a7 = simd_and(tmp8, tmp47);
        tmp218 = simd_andc(tmp24, basis_bits.bit_6);
        bytetest_88_89 = simd_and(tmp12, tmp218);
        tmp219 = simd_and(tmp212, bytetest_88_89);
        struct_Mc.cc = simd_or(tmp219, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_a8 = simd_and(tmp8, tmp63);
        tmp220 = simd_and(tmp61, tmp24);
        bytetest_99_9a = simd_and(tmp220, tmp103);
        tmp221 = simd_and(tmp166, bytetest_a8);
        carryQ.cq[33] = carryout2carry(pablo_blk_Advance(tmp221, carryQ.get_carry_in(33), tmp222));
        tmp223 = simd_and(tmp222, bytetest_99_9a);
        struct_Mc.cc = simd_or(tmp223, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_a9 = simd_and(tmp8, tmp67);
        bytetest_95_95 = simd_and(tmp61, tmp28);
        tmp224 = simd_and(tmp166, bytetest_a9);
        carryQ.cq[34] = carryout2carry(pablo_blk_Advance(tmp224, carryQ.get_carry_in(34), tmp225));
        tmp226 = simd_and(tmp225, bytetest_95_95);
        struct_Mc.cc = simd_or(tmp226, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_a9 = simd_and(tmp8, tmp67);
        bytetest_97_97 = simd_and(tmp61, tmp47);
        tmp227 = simd_and(tmp225, bytetest_97_97);
        struct_Mc.cc = simd_or(tmp227, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_a9 = simd_and(tmp8, tmp67);
        bytetest_a1_a1 = simd_and(tmp8, tmp116);
        tmp228 = simd_and(tmp225, bytetest_a1_a1);
        struct_Mc.cc = simd_or(tmp228, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_a9 = simd_and(tmp8, tmp67);
        bytetest_a3_a4 = simd_and(tmp178, tmp58);
        tmp229 = simd_and(tmp225, bytetest_a3_a4);
        struct_Mc.cc = simd_or(tmp229, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_a9 = simd_and(tmp8, tmp67);
        tmp230 = simd_and(tmp7, basis_bits.bit_2);
        tmp231 = simd_or(tmp4, tmp13);
        tmp232 = simd_not(tmp231);
        tmp233 = simd_and(tmp32, tmp5);
        tmp234 = simd_or(simd_and(basis_bits.bit_3, tmp232), simd_andc(tmp233, basis_bits.bit_3));
        bytetest_ad_b2 = simd_and(tmp230, tmp234);
        tmp235 = simd_and(tmp225, bytetest_ad_b2);
        struct_Mc.cc = simd_or(tmp235, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_ac = simd_and(tmp8, tmp84);
        bytetest_84_84 = simd_and(tmp12, tmp10);
        tmp236 = simd_and(tmp166, bytetest_ac);
        carryQ.cq[35] = carryout2carry(pablo_blk_Advance(tmp236, carryQ.get_carry_in(35), tmp237));
        tmp238 = simd_and(tmp237, bytetest_84_84);
        struct_Mc.cc = simd_or(tmp238, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_ac = simd_and(tmp8, tmp84);
        bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp28);
        tmp239 = simd_and(tmp237, bytetest_b5_b5);
        struct_Mc.cc = simd_or(tmp239, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_ac = simd_and(tmp8, tmp84);
        bytetest_bb_bb = simd_and(bytetest_b0_bf, tmp25);
        tmp240 = simd_and(tmp237, bytetest_bb_bb);
        struct_Mc.cc = simd_or(tmp240, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_ad = simd_and(tmp8, tmp90);
        bytetest_80_81 = simd_andc(tmp12, tmp150);
        tmp241 = simd_and(tmp166, bytetest_ad);
        carryQ.cq[36] = carryout2carry(pablo_blk_Advance(tmp241, carryQ.get_carry_in(36), tmp242));
        tmp243 = simd_and(tmp242, bytetest_80_81);
        bytetest_ac = simd_and(tmp8, tmp84);
        tmp244 = simd_and(bytetest_b0_bf, tmp32);
        bytetest_bd_bf = simd_and(tmp244, tmp5);
        tmp245 = simd_and(tmp237, bytetest_bd_bf);
        tmp246 = simd_or(tmp245, tmp243);
        struct_Mc.cc = simd_or(tmp246, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_ad = simd_and(tmp8, tmp90);
        bytetest_83_84 = simd_and(tmp117, tmp58);
        tmp247 = simd_and(tmp242, bytetest_83_84);
        struct_Mc.cc = simd_or(tmp247, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_ae = simd_and(tmp8, tmp88);
        bytetest_82_82 = simd_and(tmp12, tmp121);
        tmp248 = simd_and(tmp166, bytetest_ae);
        carryQ.cq[37] = carryout2carry(pablo_blk_Advance(tmp248, carryQ.get_carry_in(37), tmp249));
        tmp250 = simd_and(tmp249, bytetest_82_82);
        struct_Mc.cc = simd_or(tmp250, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_ae = simd_and(tmp8, tmp88);
        bytetest_a1_a1 = simd_and(tmp8, tmp116);
        tmp251 = simd_and(tmp249, bytetest_a1_a1);
        struct_Mc.cc = simd_or(tmp251, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_ae = simd_and(tmp8, tmp88);
        bytetest_a6_a7 = simd_and(tmp8, tmp174);
        tmp252 = simd_and(tmp249, bytetest_a6_a7);
        struct_Mc.cc = simd_or(tmp252, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_ae = simd_and(tmp8, tmp88);
        bytetest_aa_aa = simd_and(tmp8, tmp73);
        tmp253 = simd_and(tmp249, bytetest_aa_aa);
        struct_Mc.cc = simd_or(tmp253, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_ae = simd_and(tmp8, tmp88);
        tmp254 = simd_andc(tmp32, basis_bits.bit_6);
        bytetest_ac_ad = simd_and(tmp8, tmp254);
        tmp255 = simd_and(tmp249, bytetest_ac_ad);
        struct_Mc.cc = simd_or(tmp255, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_af = simd_and(tmp8, tmp100);
        bytetest_a7_a7 = simd_and(tmp8, tmp47);
        tmp256 = simd_and(tmp166, bytetest_af);
        carryQ.cq[38] = carryout2carry(pablo_blk_Advance(tmp256, carryQ.get_carry_in(38), tmp257));
        tmp258 = simd_and(tmp257, bytetest_a7_a7);
        struct_Mc.cc = simd_or(tmp258, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_af = simd_and(tmp8, tmp100);
        bytetest_aa_ac = simd_and(tmp164, tmp110);
        tmp259 = simd_and(tmp257, bytetest_aa_ac);
        struct_Mc.cc = simd_or(tmp259, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_af = simd_and(tmp8, tmp100);
        bytetest_ae_ae = simd_and(tmp8, tmp88);
        tmp260 = simd_and(tmp257, bytetest_ae_ae);
        struct_Mc.cc = simd_or(tmp260, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_af = simd_and(tmp8, tmp100);
        bytetest_b2_b3 = simd_and(bytetest_b0_bf, tmp43);
        tmp261 = simd_and(tmp257, bytetest_b2_b3);
        struct_Mc.cc = simd_or(tmp261, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_b0 = simd_andc(bytetest_b0_bf, tmp6);
        tmp262 = simd_not(basis_bits.bit_5);
        tmp263 = simd_or(simd_and(basis_bits.bit_4, tmp262), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
        bytetest_a4_ab = simd_and(tmp8, tmp263);
        tmp264 = simd_and(tmp166, bytetest_b0);
        carryQ.cq[39] = carryout2carry(pablo_blk_Advance(tmp264, carryQ.get_carry_in(39), tmp265));
        tmp266 = simd_and(tmp265, bytetest_a4_ab);
        struct_Mc.cc = simd_or(tmp266, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_b0 = simd_andc(bytetest_b0_bf, tmp6);
        tmp267 = simd_andc(tmp9, basis_bits.bit_6);
        bytetest_b4_b5 = simd_and(bytetest_b0_bf, tmp267);
        tmp268 = simd_and(tmp265, bytetest_b4_b5);
        struct_Mc.cc = simd_or(tmp268, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp14);
        bytetest_a1_a1 = simd_and(tmp8, tmp116);
        tmp269 = simd_and(tmp166, bytetest_b3);
        carryQ.cq[40] = carryout2carry(pablo_blk_Advance(tmp269, carryQ.get_carry_in(40), tmp270));
        tmp271 = simd_and(tmp270, bytetest_a1_a1);
        struct_Mc.cc = simd_or(tmp271, struct_Mc.cc);
        bytetest_e1 = simd_and(tmp3, tmp116);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp14);
        bytetest_b2_b3 = simd_and(bytetest_b0_bf, tmp43);
        tmp272 = simd_and(tmp270, bytetest_b2_b3);
        struct_Mc.cc = simd_or(tmp272, struct_Mc.cc);
        bytetest_e3 = simd_and(tmp3, tmp14);
        bytetest_80 = simd_andc(tmp12, tmp6);
        bytetest_ae_af = simd_and(tmp8, tmp33);
        tmp273 = simd_and(tmp16, bytetest_e3);
        carryQ.cq[41] = carryout2carry(pablo_blk_Advance(tmp273, carryQ.get_carry_in(41), tmp274));
        tmp275 = simd_and(tmp274, bytetest_80);
        carryQ.cq[42] = carryout2carry(pablo_blk_Advance(tmp275, carryQ.get_carry_in(42), tmp276));
        tmp277 = simd_and(tmp276, bytetest_ae_af);
        struct_Mc.cc = simd_or(tmp277, struct_Mc.cc);
        bytetest_ea = simd_and(tmp3, tmp73);
        bytetest_a0 = simd_andc(tmp8, tmp6);
        bytetest_a3_a4 = simd_and(tmp178, tmp58);
        tmp278 = simd_and(tmp16, bytetest_ea);
        carryQ.cq[43] = carryout2carry(pablo_blk_Advance(tmp278, carryQ.get_carry_in(43), tmp279));
        tmp280 = simd_and(tmp279, bytetest_a0);
        carryQ.cq[44] = carryout2carry(pablo_blk_Advance(tmp280, carryQ.get_carry_in(44), tmp281));
        tmp282 = simd_and(tmp281, bytetest_a3_a4);
        struct_Mc.cc = simd_or(tmp282, struct_Mc.cc);
        bytetest_ea = simd_and(tmp3, tmp73);
        bytetest_a0 = simd_andc(tmp8, tmp6);
        bytetest_a7_a7 = simd_and(tmp8, tmp47);
        tmp283 = simd_and(tmp281, bytetest_a7_a7);
        struct_Mc.cc = simd_or(tmp283, struct_Mc.cc);
        bytetest_ea = simd_and(tmp3, tmp73);
        bytetest_a2 = simd_and(tmp8, tmp121);
        bytetest_80_81 = simd_andc(tmp12, tmp150);
        tmp284 = simd_and(tmp279, bytetest_a2);
        carryQ.cq[45] = carryout2carry(pablo_blk_Advance(tmp284, carryQ.get_carry_in(45), tmp285));
        tmp286 = simd_and(tmp285, bytetest_80_81);
        struct_Mc.cc = simd_or(tmp286, struct_Mc.cc);
        bytetest_ea = simd_and(tmp3, tmp73);
        bytetest_a3 = simd_and(tmp8, tmp14);
        bytetest_80_83 = simd_andc(tmp12, tmp4);
        tmp287 = simd_and(tmp279, bytetest_a3);
        carryQ.cq[46] = carryout2carry(pablo_blk_Advance(tmp287, carryQ.get_carry_in(46), tmp288));
        tmp289 = simd_and(tmp288, bytetest_80_83);
        bytetest_a2 = simd_and(tmp8, tmp121);
        bytetest_b4_bf = simd_and(bytetest_b0_bf, tmp4);
        tmp290 = simd_and(tmp285, bytetest_b4_bf);
        tmp291 = simd_or(tmp290, tmp289);
        struct_Mc.cc = simd_or(tmp291, struct_Mc.cc);
        bytetest_ea = simd_and(tmp3, tmp73);
        bytetest_a5 = simd_and(tmp8, tmp28);
        bytetest_92_93 = simd_and(tmp61, tmp43);
        tmp292 = simd_and(tmp279, bytetest_a5);
        carryQ.cq[47] = carryout2carry(pablo_blk_Advance(tmp292, carryQ.get_carry_in(47), tmp293));
        tmp294 = simd_and(tmp293, bytetest_92_93);
        struct_Mc.cc = simd_or(tmp294, struct_Mc.cc);
        bytetest_ea = simd_and(tmp3, tmp73);
        bytetest_a6 = simd_and(tmp8, tmp42);
        bytetest_83_83 = simd_and(tmp12, tmp14);
        tmp295 = simd_and(tmp279, bytetest_a6);
        carryQ.cq[48] = carryout2carry(pablo_blk_Advance(tmp295, carryQ.get_carry_in(48), tmp296));
        tmp297 = simd_and(tmp296, bytetest_83_83);
        struct_Mc.cc = simd_or(tmp297, struct_Mc.cc);
        bytetest_ea = simd_and(tmp3, tmp73);
        bytetest_a6 = simd_and(tmp8, tmp42);
        bytetest_b4_b5 = simd_and(bytetest_b0_bf, tmp267);
        tmp298 = simd_and(tmp296, bytetest_b4_b5);
        struct_Mc.cc = simd_or(tmp298, struct_Mc.cc);
        bytetest_ea = simd_and(tmp3, tmp73);
        bytetest_a6 = simd_and(tmp8, tmp42);
        bytetest_ba_bb = simd_and(bytetest_b0_bf, tmp131);
        tmp299 = simd_and(tmp296, bytetest_ba_bb);
        struct_Mc.cc = simd_or(tmp299, struct_Mc.cc);
        bytetest_ea = simd_and(tmp3, tmp73);
        bytetest_a7 = simd_and(tmp8, tmp47);
        bytetest_80_80 = simd_andc(tmp12, tmp6);
        tmp300 = simd_and(tmp279, bytetest_a7);
        carryQ.cq[49] = carryout2carry(pablo_blk_Advance(tmp300, carryQ.get_carry_in(49), tmp301));
        tmp302 = simd_and(tmp301, bytetest_80_80);
        bytetest_a6 = simd_and(tmp8, tmp42);
        bytetest_bd_bf = simd_and(tmp244, tmp5);
        tmp303 = simd_and(tmp296, bytetest_bd_bf);
        tmp304 = simd_or(tmp303, tmp302);
        struct_Mc.cc = simd_or(tmp304, struct_Mc.cc);
        bytetest_ea = simd_and(tmp3, tmp73);
        bytetest_a8 = simd_and(tmp8, tmp63);
        tmp305 = simd_not(tmp6);
        tmp306 = simd_or(simd_and(basis_bits.bit_3, tmp305), simd_andc(tmp100, basis_bits.bit_3));
        bytetest_af_b0 = simd_and(tmp230, tmp306);
        tmp307 = simd_and(tmp279, bytetest_a8);
        carryQ.cq[50] = carryout2carry(pablo_blk_Advance(tmp307, carryQ.get_carry_in(50), tmp308));
        tmp309 = simd_and(tmp308, bytetest_af_b0);
        struct_Mc.cc = simd_or(tmp309, struct_Mc.cc);
        bytetest_ea = simd_and(tmp3, tmp73);
        bytetest_a8 = simd_and(tmp8, tmp63);
        tmp310 = simd_andc(bytetest_b0_bf, basis_bits.bit_4);
        bytetest_b3_b4 = simd_and(tmp310, tmp58);
        tmp311 = simd_and(tmp308, bytetest_b3_b4);
        struct_Mc.cc = simd_or(tmp311, struct_Mc.cc);
        bytetest_ea = simd_and(tmp3, tmp73);
        bytetest_a9 = simd_and(tmp8, tmp67);
        bytetest_8d_8d = simd_and(tmp12, tmp90);
        tmp312 = simd_and(tmp279, bytetest_a9);
        carryQ.cq[51] = carryout2carry(pablo_blk_Advance(tmp312, carryQ.get_carry_in(51), tmp313));
        tmp314 = simd_and(tmp313, bytetest_8d_8d);
        struct_Mc.cc = simd_or(tmp314, struct_Mc.cc);
        bytetest_ea = simd_and(tmp3, tmp73);
        bytetest_a9 = simd_and(tmp8, tmp67);
        bytetest_bb_bb = simd_and(bytetest_b0_bf, tmp25);
        tmp315 = simd_and(tmp313, bytetest_bb_bb);
        struct_Mc.cc = simd_or(tmp315, struct_Mc.cc);
        bytetest_ea = simd_and(tmp3, tmp73);
        bytetest_ab = simd_and(tmp8, tmp25);
        bytetest_ab_ab = simd_and(tmp8, tmp25);
        tmp316 = simd_and(tmp279, bytetest_ab);
        carryQ.cq[52] = carryout2carry(pablo_blk_Advance(tmp316, carryQ.get_carry_in(52), tmp317));
        tmp318 = simd_and(tmp317, bytetest_ab_ab);
        struct_Mc.cc = simd_or(tmp318, struct_Mc.cc);
        bytetest_ea = simd_and(tmp3, tmp73);
        bytetest_ab = simd_and(tmp8, tmp25);
        bytetest_ae_af = simd_and(tmp8, tmp33);
        tmp319 = simd_and(tmp317, bytetest_ae_af);
        struct_Mc.cc = simd_or(tmp319, struct_Mc.cc);
        bytetest_ea = simd_and(tmp3, tmp73);
        bytetest_ab = simd_and(tmp8, tmp25);
        bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp28);
        tmp320 = simd_and(tmp317, bytetest_b5_b5);
        struct_Mc.cc = simd_or(tmp320, struct_Mc.cc);
        bytetest_ea = simd_and(tmp3, tmp73);
        bytetest_af = simd_and(tmp8, tmp100);
        bytetest_a3_a4 = simd_and(tmp178, tmp58);
        tmp321 = simd_and(tmp279, bytetest_af);
        carryQ.cq[53] = carryout2carry(pablo_blk_Advance(tmp321, carryQ.get_carry_in(53), tmp322));
        tmp323 = simd_and(tmp322, bytetest_a3_a4);
        struct_Mc.cc = simd_or(tmp323, struct_Mc.cc);
        bytetest_ea = simd_and(tmp3, tmp73);
        bytetest_af = simd_and(tmp8, tmp100);
        bytetest_a6_a7 = simd_and(tmp8, tmp174);
        tmp324 = simd_and(tmp322, bytetest_a6_a7);
        struct_Mc.cc = simd_or(tmp324, struct_Mc.cc);
        bytetest_ea = simd_and(tmp3, tmp73);
        bytetest_af = simd_and(tmp8, tmp100);
        bytetest_a9_aa = simd_and(tmp205, tmp103);
        tmp325 = simd_and(tmp322, bytetest_a9_aa);
        struct_Mc.cc = simd_or(tmp325, struct_Mc.cc);
        bytetest_ea = simd_and(tmp3, tmp73);
        bytetest_af = simd_and(tmp8, tmp100);
        bytetest_ac_ac = simd_and(tmp8, tmp84);
        tmp326 = simd_and(tmp322, bytetest_ac_ac);
        struct_Mc.cc = simd_or(tmp326, struct_Mc.cc);
        tmp327 = simd_and(tmp1, tmp22);
        bytetest_f0 = simd_andc(tmp327, tmp6);
        bytetest_91 = simd_and(tmp61, tmp116);
        bytetest_80 = simd_andc(tmp12, tmp6);
        bytetest_80_80 = simd_andc(tmp12, tmp6);
        tmp328 = simd_and(tmp16, bytetest_f0);
        carryQ.cq[54] = carryout2carry(pablo_blk_Advance(tmp328, carryQ.get_carry_in(54), tmp329));
        tmp330 = simd_and(tmp329, bytetest_91);
        carryQ.cq[55] = carryout2carry(pablo_blk_Advance(tmp330, carryQ.get_carry_in(55), tmp331));
        tmp332 = simd_and(tmp331, bytetest_80);
        carryQ.cq[56] = carryout2carry(pablo_blk_Advance(tmp332, carryQ.get_carry_in(56), tmp333));
        tmp334 = simd_and(tmp333, bytetest_80_80);
        struct_Mc.cc = simd_or(tmp334, struct_Mc.cc);
        bytetest_f0 = simd_andc(tmp327, tmp6);
        bytetest_91 = simd_and(tmp61, tmp116);
        bytetest_80 = simd_andc(tmp12, tmp6);
        bytetest_82_82 = simd_and(tmp12, tmp121);
        tmp335 = simd_and(tmp333, bytetest_82_82);
        struct_Mc.cc = simd_or(tmp335, struct_Mc.cc);
        bytetest_f0 = simd_andc(tmp327, tmp6);
        bytetest_91 = simd_and(tmp61, tmp116);
        bytetest_82 = simd_and(tmp12, tmp121);
        bytetest_82_82 = simd_and(tmp12, tmp121);
        tmp336 = simd_and(tmp331, bytetest_82);
        carryQ.cq[57] = carryout2carry(pablo_blk_Advance(tmp336, carryQ.get_carry_in(57), tmp337));
        tmp338 = simd_and(tmp337, bytetest_82_82);
        struct_Mc.cc = simd_or(tmp338, struct_Mc.cc);
        bytetest_f0 = simd_andc(tmp327, tmp6);
        bytetest_91 = simd_and(tmp61, tmp116);
        bytetest_82 = simd_and(tmp12, tmp121);
        tmp339 = simd_andc(bytetest_b0_bf, tmp4);
        bytetest_b0_b2 = simd_andc(tmp339, tmp13);
        tmp340 = simd_and(tmp337, bytetest_b0_b2);
        struct_Mc.cc = simd_or(tmp340, struct_Mc.cc);
        bytetest_f0 = simd_andc(tmp327, tmp6);
        bytetest_91 = simd_and(tmp61, tmp116);
        bytetest_82 = simd_and(tmp12, tmp121);
        bytetest_b7_b8 = simd_and(bytetest_b0_bf, tmp56);
        tmp341 = simd_and(tmp337, bytetest_b7_b8);
        struct_Mc.cc = simd_or(tmp341, struct_Mc.cc);
        bytetest_f0 = simd_andc(tmp327, tmp6);
        bytetest_91 = simd_and(tmp61, tmp116);
        bytetest_84 = simd_and(tmp12, tmp10);
        bytetest_ac_ac = simd_and(tmp8, tmp84);
        tmp342 = simd_and(tmp331, bytetest_84);
        carryQ.cq[58] = carryout2carry(pablo_blk_Advance(tmp342, carryQ.get_carry_in(58), tmp343));
        tmp344 = simd_and(tmp343, bytetest_ac_ac);
        struct_Mc.cc = simd_or(tmp344, struct_Mc.cc);
        bytetest_f0 = simd_andc(tmp327, tmp6);
        bytetest_91 = simd_and(tmp61, tmp116);
        bytetest_86 = simd_and(tmp12, tmp42);
        bytetest_82_82 = simd_and(tmp12, tmp121);
        tmp345 = simd_and(tmp331, bytetest_86);
        carryQ.cq[59] = carryout2carry(pablo_blk_Advance(tmp345, carryQ.get_carry_in(59), tmp346));
        tmp347 = simd_and(tmp346, bytetest_82_82);
        struct_Mc.cc = simd_or(tmp347, struct_Mc.cc);
        bytetest_f0 = simd_andc(tmp327, tmp6);
        bytetest_91 = simd_and(tmp61, tmp116);
        bytetest_86 = simd_and(tmp12, tmp42);
        tmp348 = simd_not(basis_bits.bit_6);
        tmp349 = simd_or(simd_and(basis_bits.bit_5, tmp348), simd_andc(tmp13, basis_bits.bit_5));
        bytetest_b3_b5 = simd_and(tmp310, tmp349);
        tmp350 = simd_and(tmp346, bytetest_b3_b5);
        struct_Mc.cc = simd_or(tmp350, struct_Mc.cc);
        bytetest_f0 = simd_andc(tmp327, tmp6);
        bytetest_91 = simd_and(tmp61, tmp116);
        bytetest_87 = simd_and(tmp12, tmp47);
        bytetest_80_80 = simd_andc(tmp12, tmp6);
        tmp351 = simd_and(tmp331, bytetest_87);
        carryQ.cq[60] = carryout2carry(pablo_blk_Advance(tmp351, carryQ.get_carry_in(60), tmp352));
        tmp353 = simd_and(tmp352, bytetest_80_80);
        bytetest_86 = simd_and(tmp12, tmp42);
        bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp100);
        tmp354 = simd_and(tmp346, bytetest_bf_bf);
        tmp355 = simd_or(tmp354, tmp353);
        struct_Mc.cc = simd_or(tmp355, struct_Mc.cc);
        bytetest_f0 = simd_andc(tmp327, tmp6);
        bytetest_91 = simd_and(tmp61, tmp116);
        bytetest_9a = simd_and(tmp61, tmp73);
        bytetest_ac_ac = simd_and(tmp8, tmp84);
        tmp356 = simd_and(tmp331, bytetest_9a);
        carryQ.cq[61] = carryout2carry(pablo_blk_Advance(tmp356, carryQ.get_carry_in(61), tmp357));
        tmp358 = simd_and(tmp357, bytetest_ac_ac);
        struct_Mc.cc = simd_or(tmp358, struct_Mc.cc);
        bytetest_f0 = simd_andc(tmp327, tmp6);
        bytetest_91 = simd_and(tmp61, tmp116);
        bytetest_9a = simd_and(tmp61, tmp73);
        bytetest_ae_af = simd_and(tmp8, tmp33);
        tmp359 = simd_and(tmp357, bytetest_ae_af);
        struct_Mc.cc = simd_or(tmp359, struct_Mc.cc);
        bytetest_f0 = simd_andc(tmp327, tmp6);
        bytetest_91 = simd_and(tmp61, tmp116);
        bytetest_9a = simd_and(tmp61, tmp73);
        bytetest_b6_b6 = simd_and(bytetest_b0_bf, tmp42);
        tmp360 = simd_and(tmp357, bytetest_b6_b6);
        struct_Mc.cc = simd_or(tmp360, struct_Mc.cc);
        bytetest_f0 = simd_andc(tmp327, tmp6);
        bytetest_96 = simd_and(tmp61, tmp42);
        bytetest_bd = simd_and(bytetest_b0_bf, tmp90);
        tmp361 = simd_and(basis_bits.bit_3, tmp100);
        tmp362 = simd_not(tmp361);
        tmp363 = simd_and(basis_bits.bit_3, tmp6);
        tmp364 = simd_or(simd_and(basis_bits.bit_2, tmp362), simd_andc(tmp363, basis_bits.bit_2));
        bytetest_91_be = simd_and(tmp7, tmp364);
        tmp365 = simd_and(tmp329, bytetest_96);
        carryQ.cq[62] = carryout2carry(pablo_blk_Advance(tmp365, carryQ.get_carry_in(62), tmp366));
        tmp367 = simd_and(tmp366, bytetest_bd);
        carryQ.cq[63] = carryout2carry(pablo_blk_Advance(tmp367, carryQ.get_carry_in(63), tmp368));
        tmp369 = simd_and(tmp368, bytetest_91_be);
        struct_Mc.cc = simd_or(tmp369, struct_Mc.cc);
        bytetest_f0 = simd_andc(tmp327, tmp6);
        bytetest_9d = simd_and(tmp61, tmp90);
        bytetest_85 = simd_and(tmp12, tmp28);
        tmp370 = simd_and(tmp8, tmp9);
        bytetest_a5_a6 = simd_and(tmp370, tmp103);
        tmp371 = simd_and(tmp329, bytetest_9d);
        carryQ.cq[64] = carryout2carry(pablo_blk_Advance(tmp371, carryQ.get_carry_in(64), tmp372));
        tmp373 = simd_and(tmp372, bytetest_85);
        carryQ.cq[65] = carryout2carry(pablo_blk_Advance(tmp373, carryQ.get_carry_in(65), tmp374));
        tmp375 = simd_and(tmp374, bytetest_a5_a6);
        struct_Mc.cc = simd_or(tmp375, struct_Mc.cc);
        bytetest_f0 = simd_andc(tmp327, tmp6);
        bytetest_9d = simd_and(tmp61, tmp90);
        bytetest_85 = simd_and(tmp12, tmp28);
        bytetest_ad_b2 = simd_and(tmp230, tmp234);
        tmp376 = simd_and(tmp374, bytetest_ad_b2);
        struct_Mc.cc = simd_or(tmp376, struct_Mc.cc);
  }
  CarryArray<66, 0> carryQ;
  };

  struct Mn {
  Mn() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Mn & struct_Mn) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_cd, tmp7, tmp8;
		BitBlock bytetest_80_af, tmp9, tmp10, tmp11, tmp12, tmp13, tmp14, tmp15;
		BitBlock bytetest_cc, bytetest_80_bf, tmp16, tmp17, tmp18, tmp19, tmp20, tmp21;
		BitBlock tmp22, tmp23, tmp24, bytetest_d2, tmp25, tmp26, tmp27, tmp28;
		BitBlock bytetest_83_87, tmp29, tmp30, tmp31, tmp32, tmp33, bytetest_d6, tmp34;
		BitBlock tmp35, tmp36, tmp37, tmp38, tmp39, bytetest_91_bd, tmp40, tmp41;
		BitBlock tmp42, tmp43, tmp44, bytetest_bf_bf, tmp45, tmp46, bytetest_d7, tmp47;
		BitBlock tmp48, tmp49, bytetest_81_82, tmp50, tmp51, tmp52, tmp53;
		BitBlock bytetest_84_85, tmp54, bytetest_87_87, tmp55, tmp56, tmp57;
		BitBlock bytetest_d8, tmp58, tmp59, bytetest_90_9a, tmp60, tmp61, tmp62, tmp63;
		BitBlock bytetest_d9, tmp64, tmp65, bytetest_8b_9f, tmp66, tmp67, tmp68;
		BitBlock bytetest_b0_b0, tmp69, tmp70, bytetest_db, tmp71, tmp72, tmp73, tmp74;
		BitBlock bytetest_96_9c, tmp75, tmp76, tmp77, tmp78, tmp79, tmp80, tmp81;
		BitBlock tmp82, bytetest_9f_a4, tmp83, tmp84, tmp85, tmp86, tmp87, tmp88;
		BitBlock tmp89, bytetest_a7_a8, tmp90, tmp91, tmp92, tmp93, bytetest_aa_ad;
		BitBlock tmp94, bytetest_dc, tmp95, bytetest_91_91, tmp96, tmp97, tmp98;
		BitBlock bytetest_dd, bytetest_80_8a, tmp99, tmp100, tmp101, bytetest_b0_bf;
		BitBlock tmp102, tmp103, tmp104, bytetest_de, tmp105, tmp106, tmp107, tmp108;
		BitBlock bytetest_a6_b0, tmp109, tmp110, tmp111, bytetest_df, tmp112, tmp113;
		BitBlock bytetest_ab_b3, tmp114, tmp115, tmp116, tmp117, bytetest_e0;
		BitBlock bytetest_a0, tmp118, tmp119, tmp120, bytetest_96_99, tmp121, tmp122;
		BitBlock tmp123, tmp124, tmp125, tmp126, tmp127, tmp128, tmp129;
		BitBlock bytetest_9b_a3, tmp130, tmp131, bytetest_a5_a7, tmp132, tmp133;
		BitBlock bytetest_a9_ad, tmp134, bytetest_a1, tmp135, bytetest_99_9b, tmp136;
		BitBlock tmp137, tmp138, tmp139, bytetest_a3, tmp140, tmp141, bytetest_a4_be;
		BitBlock tmp142, tmp143, tmp144, tmp145, bytetest_a4, bytetest_80_82, tmp146;
		BitBlock tmp147, tmp148, tmp149, bytetest_ba_ba, tmp150, bytetest_bc_bc;
		BitBlock tmp151, tmp152, bytetest_a5, tmp153, bytetest_81_88, tmp154, tmp155;
		BitBlock tmp156, bytetest_8d_8d, tmp157, tmp158, bytetest_91_97, tmp159;
		BitBlock tmp160, bytetest_a2_a3, tmp161, bytetest_a6, bytetest_81_81, tmp162;
		BitBlock tmp163, tmp164, tmp165, bytetest_a7, tmp166, tmp167, bytetest_81_84;
		BitBlock tmp168, tmp169, tmp170, tmp171, tmp172, bytetest_a8, tmp173, tmp174;
		BitBlock tmp175, tmp176, bytetest_a9, tmp177, tmp178, tmp179, bytetest_87_88;
		BitBlock tmp180, tmp181, tmp182, bytetest_8b_8d, tmp183, tmp184, tmp185;
		BitBlock bytetest_b0_b1, tmp186, bytetest_b5_b5, tmp187, bytetest_aa, tmp188;
		BitBlock tmp189, tmp190, tmp191, bytetest_ab, bytetest_81_85, tmp192, tmp193;
		BitBlock tmp194, tmp195, tmp196, tmp197, bytetest_ac, tmp198, tmp199, tmp200;
		BitBlock tmp201, tmp202, bytetest_ad, tmp203, tmp204, tmp205, tmp206;
		BitBlock bytetest_96_96, tmp207, tmp208, bytetest_ae, bytetest_82_82, tmp209;
		BitBlock tmp210, tmp211, bytetest_af, bytetest_80_80, tmp212, tmp213, tmp214;
		BitBlock tmp215, bytetest_b1, tmp216, tmp217, tmp218, bytetest_b0;
		BitBlock bytetest_be_bf, tmp219, tmp220, tmp221, tmp222, tmp223;
		BitBlock bytetest_86_88, tmp224, bytetest_8a_8d, tmp225, tmp226;
		BitBlock bytetest_95_96, tmp227, tmp228, bytetest_b2, tmp229, tmp230, tmp231;
		BitBlock tmp232, bytetest_b3, bytetest_86_86, tmp233, tmp234, tmp235, tmp236;
		BitBlock bytetest_8c_8d, tmp237, tmp238, bytetest_b5, tmp239, tmp240, tmp241;
		BitBlock tmp242, tmp243, bytetest_b7, bytetest_8a_8a, tmp244, tmp245, tmp246;
		BitBlock tmp247, bytetest_92_94, tmp248, tmp249, bytetest_b8, bytetest_b1_b1;
		BitBlock tmp250, tmp251, tmp252, tmp253, tmp254, bytetest_b4_ba, tmp255;
		BitBlock bytetest_b9, tmp256, tmp257, bytetest_87_8e, tmp258, tmp259, tmp260;
		BitBlock bytetest_ba, tmp261, tmp262, tmp263, tmp264, bytetest_b4_b9, tmp265;
		BitBlock tmp266, tmp267, bytetest_bb_bc, tmp268, bytetest_bb, bytetest_88_8d;
		BitBlock tmp269, tmp270, tmp271, bytetest_bc, tmp272, bytetest_98_99, tmp273;
		BitBlock tmp274, tmp275, tmp276, bytetest_b7_b7, tmp277, bytetest_b9_b9;
		BitBlock tmp278, bytetest_bd, tmp279, bytetest_b1_be, tmp280, tmp281, tmp282;
		BitBlock bytetest_be, bytetest_80_84, tmp283, tmp284, tmp285, tmp286;
		BitBlock bytetest_86_87, tmp287, tmp288, tmp289, tmp290, bytetest_8d_97;
		BitBlock tmp291, tmp292, tmp293, tmp294, tmp295, tmp296, bytetest_99_bc;
		BitBlock tmp297, bytetest_bf, tmp298, tmp299, tmp300, bytetest_e1, bytetest_80;
		BitBlock tmp301, bytetest_ad_b0, tmp302, tmp303, tmp304, tmp305, tmp306;
		BitBlock tmp307, bytetest_b2_b7, tmp308, tmp309, bytetest_b9_ba, tmp310;
		BitBlock tmp311, bytetest_bd_be, tmp312, bytetest_81, tmp313, tmp314, tmp315;
		BitBlock tmp316, tmp317, tmp318, bytetest_9e_a0, tmp319, bytetest_b1_b4;
		BitBlock tmp320, bytetest_82, tmp321, tmp322, tmp323, tmp324, bytetest_85_86;
		BitBlock tmp325, tmp326, bytetest_9d_9d, tmp327, bytetest_8d, tmp328;
		BitBlock bytetest_9d_9f, tmp329, tmp330, tmp331, bytetest_9c, tmp332, tmp333;
		BitBlock tmp334, bytetest_b2_b4, tmp335, bytetest_9d, bytetest_92_93, tmp336;
		BitBlock tmp337, tmp338, bytetest_b2_b3, tmp339, bytetest_9e, bytetest_b4_b5;
		BitBlock tmp340, tmp341, tmp342, tmp343, tmp344, bytetest_b7_bd, tmp345;
		BitBlock bytetest_9f, tmp346, tmp347, tmp348, tmp349, bytetest_89_93, tmp350;
		BitBlock tmp351, tmp352, tmp353, tmp354, bytetest_a2, bytetest_a9_a9, tmp355;
		BitBlock tmp356, tmp357, tmp358, bytetest_a0_a2, tmp359, tmp360, tmp361;
		BitBlock tmp362, bytetest_b2_b2, tmp363, bytetest_b9_bb, tmp364;
		BitBlock bytetest_97_98, tmp365, tmp366, tmp367, bytetest_9b_9b, tmp368;
		BitBlock tmp369, tmp370, tmp371, tmp372, bytetest_98_9e, tmp373;
		BitBlock bytetest_a0_a0, tmp374, bytetest_a2_a2, tmp375, tmp376;
		BitBlock bytetest_a5_ac, tmp377, tmp378, bytetest_b3_bc, tmp379, tmp380;
		BitBlock bytetest_80_83, tmp381, tmp382, tmp383, bytetest_b4_b4, tmp384;
		BitBlock tmp385, bytetest_b6_ba, tmp386, tmp387, tmp388, tmp389, tmp390;
		BitBlock tmp391, bytetest_80_81, tmp392, tmp393, tmp394, tmp395;
		BitBlock bytetest_a2_a5, tmp396, bytetest_a8_a9, tmp397, bytetest_ab_ab;
		BitBlock tmp398, bytetest_a6_a6, tmp399, tmp400, tmp401, tmp402;
		BitBlock bytetest_ad_ad, tmp403, tmp404, tmp405, bytetest_af_b1, tmp406;
		BitBlock tmp407, bytetest_ac_b3, tmp408, tmp409, tmp410, bytetest_b6_b7;
		BitBlock tmp411, tmp412, bytetest_90_92, tmp413, tmp414, tmp415, tmp416;
		BitBlock tmp417, bytetest_94_a0, tmp418, tmp419, bytetest_a2_a8, tmp420;
		BitBlock tmp421, tmp422, tmp423, tmp424, tmp425, bytetest_80_a6, tmp426;
		BitBlock tmp427, tmp428, bytetest_bc_bf, tmp429, bytetest_e2, bytetest_83;
		BitBlock tmp430, bytetest_90_9c, tmp431, tmp432, tmp433, tmp434, tmp435;
		BitBlock bytetest_a1_a1, tmp436, tmp437, bytetest_a5_b0, tmp438, tmp439;
		BitBlock tmp440, tmp441, tmp442, tmp443, tmp444, bytetest_a0_bf, tmp445;
		BitBlock tmp446, tmp447, bytetest_e3, tmp448, tmp449, tmp450, tmp451, tmp452;
		BitBlock bytetest_99_9a, tmp453, tmp454, tmp455, bytetest_ea, bytetest_99;
		BitBlock bytetest_af_af, tmp456, tmp457, tmp458, tmp459, tmp460, tmp461;
		BitBlock bytetest_b4_bd, tmp462, bytetest_9a, bytetest_9f_9f, tmp463, tmp464;
		BitBlock tmp465, bytetest_9b, tmp466, tmp467, tmp468, tmp469, tmp470, tmp471;
		BitBlock tmp472, bytetest_8b_8b, tmp473, bytetest_a5_a6, tmp474;
		BitBlock bytetest_84_84, tmp475, tmp476, tmp477, tmp478, bytetest_a0_b1;
		BitBlock tmp479, tmp480, bytetest_a6_ad, tmp481, tmp482, tmp483, tmp484;
		BitBlock bytetest_87_91, tmp485, tmp486, tmp487, tmp488, tmp489, tmp490;
		BitBlock bytetest_b3_b3, tmp491, bytetest_b6_b9, tmp492, tmp493, tmp494;
		BitBlock tmp495, bytetest_a9_ae, tmp496, tmp497, tmp498, tmp499;
		BitBlock bytetest_b1_b2, tmp500, tmp501, bytetest_b5_b6, tmp502;
		BitBlock bytetest_83_83, tmp503, tmp504, tmp505, bytetest_8c_8c, tmp506;
		BitBlock tmp507, tmp508, tmp509, tmp510, bytetest_b7_b8, tmp511, tmp512;
		BitBlock tmp513, tmp514, tmp515, bytetest_ac_ad, tmp516, bytetest_b6_b6;
		BitBlock tmp517, bytetest_a5_a5, tmp518, tmp519, tmp520, bytetest_a8_a8;
		BitBlock tmp521, tmp522, bytetest_ef, bytetest_9e_9e, tmp523, tmp524, tmp525;
		BitBlock tmp526, tmp527, bytetest_80_8f, tmp528, tmp529, tmp530;
		BitBlock bytetest_a0_a6, tmp531, tmp532, bytetest_f0, bytetest_90, bytetest_87;
		BitBlock bytetest_bd_bd, tmp533, tmp534, tmp535, tmp536, tmp537, tmp538;
		BitBlock tmp539, tmp540, bytetest_81_83, tmp541, tmp542, tmp543, tmp544;
		BitBlock tmp545, bytetest_8c_8f, tmp546, bytetest_b8_ba, tmp547, tmp548;
		BitBlock bytetest_91, tmp549, tmp550, tmp551, tmp552, tmp553, tmp554;
		BitBlock bytetest_80_86, tmp555, tmp556, tmp557, bytetest_b8_bf, tmp558;
		BitBlock tmp559, tmp560, tmp561, tmp562, tmp563, bytetest_b3_b6, tmp564;
		BitBlock tmp565, bytetest_84, tmp566, tmp567, tmp568, tmp569, tmp570;
		BitBlock bytetest_a7_ab, tmp571, tmp572, tmp573, bytetest_ad_b4, tmp574;
		BitBlock bytetest_86, tmp575, tmp576, tmp577, tmp578, bytetest_b6_be, tmp579;
		BitBlock tmp580, tmp581, tmp582, tmp583, bytetest_b0_b5, tmp584, tmp585;
		BitBlock bytetest_96, tmp586, tmp587, tmp588, bytetest_8f_92, tmp589, tmp590;
		BitBlock tmp591, tmp592, tmp593, bytetest_85, tmp594, bytetest_a7_a9, tmp595;
		BitBlock tmp596, tmp597, tmp598, tmp599, tmp600, tmp601, tmp602;
		BitBlock bytetest_bb_bf, tmp603, tmp604, tmp605, bytetest_85_8b, tmp606;
		BitBlock tmp607, bytetest_89, bytetest_82_84, tmp608, tmp609, tmp610;
		BitBlock bytetest_f3, tmp611, tmp612, tmp613, tmp614, tmp615, tmp616, tmp617;
		BitBlock bytetest_84_86, tmp618, tmp619, tmp620, tmp621;




        struct_Mn.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp1, tmp2);
        tmp4 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp6 = simd_and(tmp4, tmp5);
        bytetest_cd = simd_and(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        bytetest_80_af = simd_andc(tmp7, tmp8);
        tmp9 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp9, carryQ.get_carry_in(0), tmp10));
        tmp11 = simd_and(tmp10, bytetest_cd);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp11, carryQ.get_carry_in(1), tmp12));
        tmp13 = simd_and(tmp12, bytetest_80_af);
        tmp14 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp15 = simd_andc(tmp4, tmp14);
        bytetest_cc = simd_and(tmp3, tmp15);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp16 = simd_and(tmp10, bytetest_cc);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp16, carryQ.get_carry_in(2), tmp17));
        tmp18 = simd_and(tmp17, bytetest_80_bf);
        tmp19 = simd_or(tmp18, tmp13);
        struct_Mn.cc = simd_or(tmp19, struct_Mn.cc);
        tmp20 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp21 = simd_and(tmp1, tmp20);
        tmp22 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp23 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp24 = simd_andc(tmp23, tmp22);
        bytetest_d2 = simd_and(tmp21, tmp24);
        tmp25 = simd_andc(bytetest_80_bf, tmp2);
        tmp26 = simd_andc(tmp25, basis_bits.bit_4);
        tmp27 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp28 = simd_or(basis_bits.bit_5, tmp27);
        bytetest_83_87 = simd_and(tmp26, tmp28);
        tmp29 = simd_and(tmp10, bytetest_d2);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp29, carryQ.get_carry_in(3), tmp30));
        tmp31 = simd_and(tmp30, bytetest_83_87);
        struct_Mn.cc = simd_or(tmp31, struct_Mn.cc);
        tmp32 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp33 = simd_and(tmp32, tmp23);
        bytetest_d6 = simd_and(tmp21, tmp33);
        tmp34 = simd_and(tmp4, basis_bits.bit_6);
        tmp35 = simd_and(basis_bits.bit_3, tmp34);
        tmp36 = simd_not(tmp35);
        tmp37 = simd_or(tmp22, tmp14);
        tmp38 = simd_and(basis_bits.bit_3, tmp37);
        tmp39 = simd_or(simd_and(basis_bits.bit_2, tmp36), simd_andc(tmp38, basis_bits.bit_2));
        bytetest_91_bd = simd_and(bytetest_80_bf, tmp39);
        tmp40 = simd_and(tmp10, bytetest_d6);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp40, carryQ.get_carry_in(4), tmp41));
        tmp42 = simd_and(tmp41, bytetest_91_bd);
        struct_Mn.cc = simd_or(tmp42, struct_Mn.cc);
        bytetest_d6 = simd_and(tmp21, tmp33);
        tmp43 = simd_and(bytetest_80_bf, tmp8);
        tmp44 = simd_and(tmp4, tmp27);
        bytetest_bf_bf = simd_and(tmp43, tmp44);
        tmp45 = simd_and(tmp41, bytetest_bf_bf);
        struct_Mn.cc = simd_or(tmp45, struct_Mn.cc);
        tmp46 = simd_and(tmp32, tmp27);
        bytetest_d7 = simd_and(tmp21, tmp46);
        tmp47 = simd_andc(tmp25, tmp22);
        tmp48 = simd_not(basis_bits.bit_7);
        tmp49 = simd_or(simd_and(basis_bits.bit_6, tmp48), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
        bytetest_81_82 = simd_and(tmp47, tmp49);
        tmp50 = simd_and(tmp10, bytetest_d7);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp50, carryQ.get_carry_in(5), tmp51));
        tmp52 = simd_and(tmp51, bytetest_81_82);
        struct_Mn.cc = simd_or(tmp52, struct_Mn.cc);
        bytetest_d7 = simd_and(tmp21, tmp46);
        tmp53 = simd_andc(tmp32, basis_bits.bit_6);
        bytetest_84_85 = simd_and(tmp25, tmp53);
        tmp54 = simd_and(tmp51, bytetest_84_85);
        struct_Mn.cc = simd_or(tmp54, struct_Mn.cc);
        bytetest_d7 = simd_and(tmp21, tmp46);
        bytetest_87_87 = simd_and(tmp25, tmp46);
        tmp55 = simd_and(tmp51, bytetest_87_87);
        struct_Mn.cc = simd_or(tmp55, struct_Mn.cc);
        tmp56 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp57 = simd_andc(tmp56, tmp14);
        bytetest_d8 = simd_and(tmp21, tmp57);
        tmp58 = simd_and(bytetest_80_bf, tmp20);
        tmp59 = simd_and(basis_bits.bit_4, tmp28);
        bytetest_90_9a = simd_andc(tmp58, tmp59);
        tmp60 = simd_and(tmp10, bytetest_d8);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp60, carryQ.get_carry_in(6), tmp61));
        tmp62 = simd_and(tmp61, bytetest_90_9a);
        struct_Mn.cc = simd_or(tmp62, struct_Mn.cc);
        tmp63 = simd_and(tmp56, tmp5);
        bytetest_d9 = simd_and(tmp21, tmp63);
        tmp64 = simd_andc(bytetest_80_bf, basis_bits.bit_2);
        tmp65 = simd_or(basis_bits.bit_3, tmp59);
        bytetest_8b_9f = simd_and(tmp64, tmp65);
        tmp66 = simd_and(tmp10, bytetest_d9);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp66, carryQ.get_carry_in(7), tmp67));
        tmp68 = simd_and(tmp67, bytetest_8b_9f);
        struct_Mn.cc = simd_or(tmp68, struct_Mn.cc);
        bytetest_d9 = simd_and(tmp21, tmp63);
        bytetest_b0_b0 = simd_andc(tmp43, tmp37);
        tmp69 = simd_and(tmp67, bytetest_b0_b0);
        struct_Mn.cc = simd_or(tmp69, struct_Mn.cc);
        tmp70 = simd_and(tmp56, tmp27);
        bytetest_db = simd_and(tmp21, tmp70);
        tmp71 = simd_and(basis_bits.bit_5, tmp14);
        tmp72 = simd_not(tmp71);
        tmp73 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp74 = simd_or(simd_and(basis_bits.bit_4, tmp72), simd_andc(tmp73, basis_bits.bit_4));
        bytetest_96_9c = simd_and(tmp58, tmp74);
        tmp75 = simd_and(tmp10, bytetest_db);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(tmp75, carryQ.get_carry_in(8), tmp76));
        tmp77 = simd_and(tmp76, bytetest_96_9c);
        struct_Mn.cc = simd_or(tmp77, struct_Mn.cc);
        bytetest_db = simd_and(tmp21, tmp70);
        tmp78 = simd_or(basis_bits.bit_4, tmp71);
        tmp79 = simd_or(basis_bits.bit_3, tmp78);
        tmp80 = simd_not(tmp79);
        tmp81 = simd_and(basis_bits.bit_3, tmp44);
        tmp82 = simd_or(simd_and(basis_bits.bit_2, tmp80), simd_andc(tmp81, basis_bits.bit_2));
        bytetest_9f_a4 = simd_and(bytetest_80_bf, tmp82);
        tmp83 = simd_and(tmp76, bytetest_9f_a4);
        struct_Mn.cc = simd_or(tmp83, struct_Mn.cc);
        bytetest_db = simd_and(tmp21, tmp70);
        tmp84 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp85 = simd_and(bytetest_80_bf, tmp84);
        tmp86 = simd_or(basis_bits.bit_5, tmp14);
        tmp87 = simd_not(tmp86);
        tmp88 = simd_and(basis_bits.bit_5, tmp27);
        tmp89 = simd_or(simd_and(basis_bits.bit_4, tmp87), simd_andc(tmp88, basis_bits.bit_4));
        bytetest_a7_a8 = simd_and(tmp85, tmp89);
        tmp90 = simd_and(tmp76, bytetest_a7_a8);
        struct_Mn.cc = simd_or(tmp90, struct_Mn.cc);
        bytetest_db = simd_and(tmp21, tmp70);
        tmp91 = simd_and(tmp85, basis_bits.bit_4);
        tmp92 = simd_not(basis_bits.bit_6);
        tmp93 = simd_or(simd_and(basis_bits.bit_5, tmp92), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        bytetest_aa_ad = simd_and(tmp91, tmp93);
        tmp94 = simd_and(tmp76, bytetest_aa_ad);
        struct_Mn.cc = simd_or(tmp94, struct_Mn.cc);
        bytetest_dc = simd_and(tmp21, tmp15);
        tmp95 = simd_andc(tmp5, tmp22);
        bytetest_91_91 = simd_and(tmp58, tmp95);
        tmp96 = simd_and(tmp10, bytetest_dc);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(tmp96, carryQ.get_carry_in(9), tmp97));
        tmp98 = simd_and(tmp97, bytetest_91_91);
        struct_Mn.cc = simd_or(tmp98, struct_Mn.cc);
        bytetest_dd = simd_and(tmp21, tmp6);
        bytetest_80_8a = simd_andc(tmp25, tmp59);
        tmp99 = simd_and(tmp10, bytetest_dd);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(tmp99, carryQ.get_carry_in(10), tmp100));
        tmp101 = simd_and(tmp100, bytetest_80_8a);
        bytetest_dc = simd_and(tmp21, tmp15);
        bytetest_b0_bf = simd_and(bytetest_80_bf, tmp8);
        tmp102 = simd_and(tmp97, bytetest_b0_bf);
        tmp103 = simd_or(tmp102, tmp101);
        struct_Mn.cc = simd_or(tmp103, struct_Mn.cc);
        tmp104 = simd_and(tmp4, tmp23);
        bytetest_de = simd_and(tmp21, tmp104);
        tmp105 = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp106 = simd_not(tmp37);
        tmp107 = simd_or(basis_bits.bit_4, tmp73);
        tmp108 = simd_or(simd_and(basis_bits.bit_3, tmp106), simd_andc(tmp107, basis_bits.bit_3));
        bytetest_a6_b0 = simd_and(tmp105, tmp108);
        tmp109 = simd_and(tmp10, bytetest_de);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(tmp109, carryQ.get_carry_in(11), tmp110));
        tmp111 = simd_and(tmp110, bytetest_a6_b0);
        struct_Mn.cc = simd_or(tmp111, struct_Mn.cc);
        bytetest_df = simd_and(tmp21, tmp44);
        tmp112 = simd_not(tmp22);
        tmp113 = simd_or(simd_and(basis_bits.bit_3, tmp112), simd_andc(tmp59, basis_bits.bit_3));
        bytetest_ab_b3 = simd_and(tmp105, tmp113);
        tmp114 = simd_and(tmp10, bytetest_df);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(tmp114, carryQ.get_carry_in(12), tmp115));
        tmp116 = simd_and(tmp115, bytetest_ab_b3);
        struct_Mn.cc = simd_or(tmp116, struct_Mn.cc);
        tmp117 = simd_and(tmp1, tmp84);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_a0 = simd_andc(tmp85, tmp37);
        tmp118 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
        tmp119 = simd_not(tmp118);
        tmp120 = simd_or(simd_and(basis_bits.bit_4, tmp119), simd_andc(tmp73, basis_bits.bit_4));
        bytetest_96_99 = simd_and(tmp58, tmp120);
        tmp121 = simd_and(tmp10, bytetest_e0);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(tmp121, carryQ.get_carry_in(13), tmp122));
        tmp123 = simd_and(tmp122, bytetest_a0);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(tmp123, carryQ.get_carry_in(14), tmp124));
        tmp125 = simd_and(tmp124, bytetest_96_99);
        struct_Mn.cc = simd_or(tmp125, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_a0 = simd_andc(tmp85, tmp37);
        tmp126 = simd_or(basis_bits.bit_3, tmp22);
        tmp127 = simd_not(tmp126);
        tmp128 = simd_and(basis_bits.bit_3, tmp59);
        tmp129 = simd_or(simd_and(basis_bits.bit_2, tmp127), simd_andc(tmp128, basis_bits.bit_2));
        bytetest_9b_a3 = simd_and(bytetest_80_bf, tmp129);
        tmp130 = simd_and(tmp124, bytetest_9b_a3);
        struct_Mn.cc = simd_or(tmp130, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_a0 = simd_andc(tmp85, tmp37);
        tmp131 = simd_and(tmp85, tmp32);
        bytetest_a5_a7 = simd_and(tmp131, tmp14);
        tmp132 = simd_and(tmp124, bytetest_a5_a7);
        struct_Mn.cc = simd_or(tmp132, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_a0 = simd_andc(tmp85, tmp37);
        tmp133 = simd_or(simd_and(basis_bits.bit_5, tmp92), simd_andc(tmp14, basis_bits.bit_5));
        bytetest_a9_ad = simd_and(tmp91, tmp133);
        tmp134 = simd_and(tmp124, bytetest_a9_ad);
        struct_Mn.cc = simd_or(tmp134, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_a1 = simd_and(tmp85, tmp95);
        tmp135 = simd_and(tmp58, tmp56);
        bytetest_99_9b = simd_and(tmp135, tmp14);
        tmp136 = simd_and(tmp122, bytetest_a1);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(tmp136, carryQ.get_carry_in(15), tmp137));
        tmp138 = simd_and(tmp137, bytetest_99_9b);
        struct_Mn.cc = simd_or(tmp138, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        tmp139 = simd_andc(tmp27, tmp22);
        bytetest_a3 = simd_and(tmp85, tmp139);
        tmp140 = simd_not(tmp44);
        tmp141 = simd_or(simd_and(basis_bits.bit_3, tmp140), simd_andc(tmp22, basis_bits.bit_3));
        bytetest_a4_be = simd_and(tmp105, tmp141);
        tmp142 = simd_and(tmp122, bytetest_a3);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(tmp142, carryQ.get_carry_in(16), tmp143));
        tmp144 = simd_and(tmp143, bytetest_a4_be);
        struct_Mn.cc = simd_or(tmp144, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        tmp145 = simd_andc(tmp32, tmp14);
        bytetest_a4 = simd_and(tmp85, tmp145);
        bytetest_80_82 = simd_andc(tmp47, tmp27);
        tmp146 = simd_and(tmp122, bytetest_a4);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(tmp146, carryQ.get_carry_in(17), tmp147));
        tmp148 = simd_and(tmp147, bytetest_80_82);
        struct_Mn.cc = simd_or(tmp148, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_a4 = simd_and(tmp85, tmp145);
        tmp149 = simd_and(tmp56, tmp23);
        bytetest_ba_ba = simd_and(bytetest_b0_bf, tmp149);
        tmp150 = simd_and(tmp147, bytetest_ba_ba);
        struct_Mn.cc = simd_or(tmp150, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_a4 = simd_and(tmp85, tmp145);
        bytetest_bc_bc = simd_and(bytetest_b0_bf, tmp15);
        tmp151 = simd_and(tmp147, bytetest_bc_bc);
        struct_Mn.cc = simd_or(tmp151, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        tmp152 = simd_and(tmp32, tmp5);
        bytetest_a5 = simd_and(tmp85, tmp152);
        tmp153 = simd_or(simd_and(basis_bits.bit_4, tmp87), simd_andc(tmp86, basis_bits.bit_4));
        bytetest_81_88 = simd_and(tmp25, tmp153);
        tmp154 = simd_and(tmp122, bytetest_a5);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(tmp154, carryQ.get_carry_in(18), tmp155));
        tmp156 = simd_and(tmp155, bytetest_81_88);
        struct_Mn.cc = simd_or(tmp156, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_a5 = simd_and(tmp85, tmp152);
        bytetest_8d_8d = simd_and(tmp25, tmp6);
        tmp157 = simd_and(tmp155, bytetest_8d_8d);
        struct_Mn.cc = simd_or(tmp157, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_a5 = simd_and(tmp85, tmp152);
        tmp158 = simd_andc(tmp58, basis_bits.bit_4);
        bytetest_91_97 = simd_and(tmp158, tmp86);
        tmp159 = simd_and(tmp155, bytetest_91_97);
        struct_Mn.cc = simd_or(tmp159, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_a5 = simd_and(tmp85, tmp152);
        tmp160 = simd_andc(basis_bits.bit_6, tmp22);
        bytetest_a2_a3 = simd_and(tmp85, tmp160);
        tmp161 = simd_and(tmp155, bytetest_a2_a3);
        struct_Mn.cc = simd_or(tmp161, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_a6 = simd_and(tmp85, tmp33);
        bytetest_81_81 = simd_and(tmp25, tmp95);
        tmp162 = simd_and(tmp122, bytetest_a6);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(tmp162, carryQ.get_carry_in(19), tmp163));
        tmp164 = simd_and(tmp163, bytetest_81_81);
        struct_Mn.cc = simd_or(tmp164, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_a6 = simd_and(tmp85, tmp33);
        bytetest_bc_bc = simd_and(bytetest_b0_bf, tmp15);
        tmp165 = simd_and(tmp163, bytetest_bc_bc);
        struct_Mn.cc = simd_or(tmp165, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_a7 = simd_and(tmp85, tmp46);
        tmp166 = simd_not(tmp14);
        tmp167 = simd_or(simd_and(basis_bits.bit_5, tmp166), simd_andc(tmp14, basis_bits.bit_5));
        bytetest_81_84 = simd_and(tmp26, tmp167);
        tmp168 = simd_and(tmp122, bytetest_a7);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(tmp168, carryQ.get_carry_in(20), tmp169));
        tmp170 = simd_and(tmp169, bytetest_81_84);
        struct_Mn.cc = simd_or(tmp170, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_a7 = simd_and(tmp85, tmp46);
        bytetest_8d_8d = simd_and(tmp25, tmp6);
        tmp171 = simd_and(tmp169, bytetest_8d_8d);
        struct_Mn.cc = simd_or(tmp171, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_a7 = simd_and(tmp85, tmp46);
        bytetest_a2_a3 = simd_and(tmp85, tmp160);
        tmp172 = simd_and(tmp169, bytetest_a2_a3);
        struct_Mn.cc = simd_or(tmp172, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_a8 = simd_and(tmp85, tmp57);
        bytetest_81_82 = simd_and(tmp47, tmp49);
        tmp173 = simd_and(tmp122, bytetest_a8);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(tmp173, carryQ.get_carry_in(21), tmp174));
        tmp175 = simd_and(tmp174, bytetest_81_82);
        struct_Mn.cc = simd_or(tmp175, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_a8 = simd_and(tmp85, tmp57);
        bytetest_bc_bc = simd_and(bytetest_b0_bf, tmp15);
        tmp176 = simd_and(tmp174, bytetest_bc_bc);
        struct_Mn.cc = simd_or(tmp176, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_a9 = simd_and(tmp85, tmp63);
        bytetest_81_82 = simd_and(tmp47, tmp49);
        tmp177 = simd_and(tmp122, bytetest_a9);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(tmp177, carryQ.get_carry_in(22), tmp178));
        tmp179 = simd_and(tmp178, bytetest_81_82);
        struct_Mn.cc = simd_or(tmp179, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_a9 = simd_and(tmp85, tmp63);
        bytetest_87_88 = simd_and(tmp25, tmp89);
        tmp180 = simd_and(tmp178, bytetest_87_88);
        struct_Mn.cc = simd_or(tmp180, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_a9 = simd_and(tmp85, tmp63);
        tmp181 = simd_and(tmp25, basis_bits.bit_4);
        tmp182 = simd_or(simd_and(basis_bits.bit_5, tmp92), simd_andc(tmp27, basis_bits.bit_5));
        bytetest_8b_8d = simd_and(tmp181, tmp182);
        tmp183 = simd_and(tmp178, bytetest_8b_8d);
        struct_Mn.cc = simd_or(tmp183, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_a9 = simd_and(tmp85, tmp63);
        bytetest_91_91 = simd_and(tmp58, tmp95);
        tmp184 = simd_and(tmp178, bytetest_91_91);
        struct_Mn.cc = simd_or(tmp184, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_a9 = simd_and(tmp85, tmp63);
        tmp185 = simd_or(tmp22, basis_bits.bit_6);
        bytetest_b0_b1 = simd_andc(bytetest_b0_bf, tmp185);
        tmp186 = simd_and(tmp178, bytetest_b0_b1);
        struct_Mn.cc = simd_or(tmp186, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_a9 = simd_and(tmp85, tmp63);
        bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp152);
        tmp187 = simd_and(tmp178, bytetest_b5_b5);
        struct_Mn.cc = simd_or(tmp187, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_aa = simd_and(tmp85, tmp149);
        bytetest_81_82 = simd_and(tmp47, tmp49);
        tmp188 = simd_and(tmp122, bytetest_aa);
        carryQ.cq[23] = carryout2carry(pablo_blk_Advance(tmp188, carryQ.get_carry_in(23), tmp189));
        tmp190 = simd_and(tmp189, bytetest_81_82);
        struct_Mn.cc = simd_or(tmp190, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_aa = simd_and(tmp85, tmp149);
        bytetest_bc_bc = simd_and(bytetest_b0_bf, tmp15);
        tmp191 = simd_and(tmp189, bytetest_bc_bc);
        struct_Mn.cc = simd_or(tmp191, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_ab = simd_and(tmp85, tmp70);
        bytetest_81_85 = simd_and(tmp26, tmp133);
        tmp192 = simd_and(tmp122, bytetest_ab);
        carryQ.cq[24] = carryout2carry(pablo_blk_Advance(tmp192, carryQ.get_carry_in(24), tmp193));
        tmp194 = simd_and(tmp193, bytetest_81_85);
        struct_Mn.cc = simd_or(tmp194, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_ab = simd_and(tmp85, tmp70);
        bytetest_87_88 = simd_and(tmp25, tmp89);
        tmp195 = simd_and(tmp193, bytetest_87_88);
        struct_Mn.cc = simd_or(tmp195, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_ab = simd_and(tmp85, tmp70);
        bytetest_8d_8d = simd_and(tmp25, tmp6);
        tmp196 = simd_and(tmp193, bytetest_8d_8d);
        struct_Mn.cc = simd_or(tmp196, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_ab = simd_and(tmp85, tmp70);
        bytetest_a2_a3 = simd_and(tmp85, tmp160);
        tmp197 = simd_and(tmp193, bytetest_a2_a3);
        struct_Mn.cc = simd_or(tmp197, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_ac = simd_and(tmp85, tmp15);
        bytetest_81_81 = simd_and(tmp25, tmp95);
        tmp198 = simd_and(tmp122, bytetest_ac);
        carryQ.cq[25] = carryout2carry(pablo_blk_Advance(tmp198, carryQ.get_carry_in(25), tmp199));
        tmp200 = simd_and(tmp199, bytetest_81_81);
        struct_Mn.cc = simd_or(tmp200, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_ac = simd_and(tmp85, tmp15);
        bytetest_bc_bc = simd_and(bytetest_b0_bf, tmp15);
        tmp201 = simd_and(tmp199, bytetest_bc_bc);
        struct_Mn.cc = simd_or(tmp201, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_ac = simd_and(tmp85, tmp15);
        bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp44);
        tmp202 = simd_and(tmp199, bytetest_bf_bf);
        struct_Mn.cc = simd_or(tmp202, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_ad = simd_and(tmp85, tmp6);
        bytetest_81_84 = simd_and(tmp26, tmp167);
        tmp203 = simd_and(tmp122, bytetest_ad);
        carryQ.cq[26] = carryout2carry(pablo_blk_Advance(tmp203, carryQ.get_carry_in(26), tmp204));
        tmp205 = simd_and(tmp204, bytetest_81_84);
        struct_Mn.cc = simd_or(tmp205, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_ad = simd_and(tmp85, tmp6);
        bytetest_8d_8d = simd_and(tmp25, tmp6);
        tmp206 = simd_and(tmp204, bytetest_8d_8d);
        struct_Mn.cc = simd_or(tmp206, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_ad = simd_and(tmp85, tmp6);
        bytetest_96_96 = simd_and(tmp58, tmp33);
        tmp207 = simd_and(tmp204, bytetest_96_96);
        struct_Mn.cc = simd_or(tmp207, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_ad = simd_and(tmp85, tmp6);
        bytetest_a2_a3 = simd_and(tmp85, tmp160);
        tmp208 = simd_and(tmp204, bytetest_a2_a3);
        struct_Mn.cc = simd_or(tmp208, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_ae = simd_and(tmp85, tmp104);
        bytetest_82_82 = simd_and(tmp25, tmp24);
        tmp209 = simd_and(tmp122, bytetest_ae);
        carryQ.cq[27] = carryout2carry(pablo_blk_Advance(tmp209, carryQ.get_carry_in(27), tmp210));
        tmp211 = simd_and(tmp210, bytetest_82_82);
        struct_Mn.cc = simd_or(tmp211, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_af = simd_and(tmp85, tmp44);
        bytetest_80_80 = simd_andc(tmp25, tmp37);
        tmp212 = simd_and(tmp122, bytetest_af);
        carryQ.cq[28] = carryout2carry(pablo_blk_Advance(tmp212, carryQ.get_carry_in(28), tmp213));
        tmp214 = simd_and(tmp213, bytetest_80_80);
        struct_Mn.cc = simd_or(tmp214, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_af = simd_and(tmp85, tmp44);
        bytetest_8d_8d = simd_and(tmp25, tmp6);
        tmp215 = simd_and(tmp213, bytetest_8d_8d);
        struct_Mn.cc = simd_or(tmp215, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_b1 = simd_and(bytetest_b0_bf, tmp95);
        bytetest_80_80 = simd_andc(tmp25, tmp37);
        tmp216 = simd_and(tmp122, bytetest_b1);
        carryQ.cq[29] = carryout2carry(pablo_blk_Advance(tmp216, carryQ.get_carry_in(29), tmp217));
        tmp218 = simd_and(tmp217, bytetest_80_80);
        bytetest_b0 = simd_andc(bytetest_b0_bf, tmp37);
        bytetest_be_bf = simd_and(bytetest_b0_bf, tmp34);
        tmp219 = simd_and(tmp122, bytetest_b0);
        carryQ.cq[30] = carryout2carry(pablo_blk_Advance(tmp219, carryQ.get_carry_in(30), tmp220));
        tmp221 = simd_and(tmp220, bytetest_be_bf);
        tmp222 = simd_or(tmp221, tmp218);
        struct_Mn.cc = simd_or(tmp222, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_b1 = simd_and(bytetest_b0_bf, tmp95);
        tmp223 = simd_or(simd_and(basis_bits.bit_4, tmp87), simd_andc(tmp73, basis_bits.bit_4));
        bytetest_86_88 = simd_and(tmp25, tmp223);
        tmp224 = simd_and(tmp217, bytetest_86_88);
        struct_Mn.cc = simd_or(tmp224, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_b1 = simd_and(bytetest_b0_bf, tmp95);
        bytetest_8a_8d = simd_and(tmp181, tmp93);
        tmp225 = simd_and(tmp217, bytetest_8a_8d);
        struct_Mn.cc = simd_or(tmp225, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_b1 = simd_and(bytetest_b0_bf, tmp95);
        tmp226 = simd_and(tmp58, tmp32);
        bytetest_95_96 = simd_and(tmp226, tmp49);
        tmp227 = simd_and(tmp217, bytetest_95_96);
        struct_Mn.cc = simd_or(tmp227, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_b1 = simd_and(bytetest_b0_bf, tmp95);
        bytetest_a2_a3 = simd_and(tmp85, tmp160);
        tmp228 = simd_and(tmp217, bytetest_a2_a3);
        struct_Mn.cc = simd_or(tmp228, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp24);
        bytetest_bc_bc = simd_and(bytetest_b0_bf, tmp15);
        tmp229 = simd_and(tmp122, bytetest_b2);
        carryQ.cq[31] = carryout2carry(pablo_blk_Advance(tmp229, carryQ.get_carry_in(31), tmp230));
        tmp231 = simd_and(tmp230, bytetest_bc_bc);
        struct_Mn.cc = simd_or(tmp231, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp24);
        bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp44);
        tmp232 = simd_and(tmp230, bytetest_bf_bf);
        struct_Mn.cc = simd_or(tmp232, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp139);
        bytetest_86_86 = simd_and(tmp25, tmp33);
        tmp233 = simd_and(tmp122, bytetest_b3);
        carryQ.cq[32] = carryout2carry(pablo_blk_Advance(tmp233, carryQ.get_carry_in(32), tmp234));
        tmp235 = simd_and(tmp234, bytetest_86_86);
        struct_Mn.cc = simd_or(tmp235, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp139);
        tmp236 = simd_andc(tmp4, basis_bits.bit_6);
        bytetest_8c_8d = simd_and(tmp25, tmp236);
        tmp237 = simd_and(tmp234, bytetest_8c_8d);
        struct_Mn.cc = simd_or(tmp237, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp139);
        bytetest_a2_a3 = simd_and(tmp85, tmp160);
        tmp238 = simd_and(tmp234, bytetest_a2_a3);
        struct_Mn.cc = simd_or(tmp238, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_b5 = simd_and(bytetest_b0_bf, tmp152);
        bytetest_81_84 = simd_and(tmp26, tmp167);
        tmp239 = simd_and(tmp122, bytetest_b5);
        carryQ.cq[33] = carryout2carry(pablo_blk_Advance(tmp239, carryQ.get_carry_in(33), tmp240));
        tmp241 = simd_and(tmp240, bytetest_81_84);
        struct_Mn.cc = simd_or(tmp241, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_b5 = simd_and(bytetest_b0_bf, tmp152);
        bytetest_8d_8d = simd_and(tmp25, tmp6);
        tmp242 = simd_and(tmp240, bytetest_8d_8d);
        struct_Mn.cc = simd_or(tmp242, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_b5 = simd_and(bytetest_b0_bf, tmp152);
        bytetest_a2_a3 = simd_and(tmp85, tmp160);
        tmp243 = simd_and(tmp240, bytetest_a2_a3);
        struct_Mn.cc = simd_or(tmp243, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_b7 = simd_and(bytetest_b0_bf, tmp46);
        bytetest_8a_8a = simd_and(tmp25, tmp149);
        tmp244 = simd_and(tmp122, bytetest_b7);
        carryQ.cq[34] = carryout2carry(pablo_blk_Advance(tmp244, carryQ.get_carry_in(34), tmp245));
        tmp246 = simd_and(tmp245, bytetest_8a_8a);
        struct_Mn.cc = simd_or(tmp246, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_b7 = simd_and(bytetest_b0_bf, tmp46);
        tmp247 = simd_or(simd_and(basis_bits.bit_5, tmp166), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        bytetest_92_94 = simd_and(tmp158, tmp247);
        tmp248 = simd_and(tmp245, bytetest_92_94);
        struct_Mn.cc = simd_or(tmp248, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_b7 = simd_and(bytetest_b0_bf, tmp46);
        bytetest_96_96 = simd_and(tmp58, tmp33);
        tmp249 = simd_and(tmp245, bytetest_96_96);
        struct_Mn.cc = simd_or(tmp249, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp57);
        bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp95);
        tmp250 = simd_and(tmp122, bytetest_b8);
        carryQ.cq[35] = carryout2carry(pablo_blk_Advance(tmp250, carryQ.get_carry_in(35), tmp251));
        tmp252 = simd_and(tmp251, bytetest_b1_b1);
        struct_Mn.cc = simd_or(tmp252, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp57);
        tmp253 = simd_not(tmp28);
        tmp254 = simd_or(simd_and(basis_bits.bit_4, tmp253), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
        bytetest_b4_ba = simd_and(bytetest_b0_bf, tmp254);
        tmp255 = simd_and(tmp251, bytetest_b4_ba);
        struct_Mn.cc = simd_or(tmp255, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp63);
        tmp256 = simd_not(tmp88);
        tmp257 = simd_or(simd_and(basis_bits.bit_4, tmp256), simd_andc(tmp88, basis_bits.bit_4));
        bytetest_87_8e = simd_and(tmp25, tmp257);
        tmp258 = simd_and(tmp122, bytetest_b9);
        carryQ.cq[36] = carryout2carry(pablo_blk_Advance(tmp258, carryQ.get_carry_in(36), tmp259));
        tmp260 = simd_and(tmp259, bytetest_87_8e);
        struct_Mn.cc = simd_or(tmp260, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp149);
        bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp95);
        tmp261 = simd_and(tmp122, bytetest_ba);
        carryQ.cq[37] = carryout2carry(pablo_blk_Advance(tmp261, carryQ.get_carry_in(37), tmp262));
        tmp263 = simd_and(tmp262, bytetest_b1_b1);
        struct_Mn.cc = simd_or(tmp263, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp149);
        tmp264 = simd_or(simd_and(basis_bits.bit_4, tmp119), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
        bytetest_b4_b9 = simd_and(bytetest_b0_bf, tmp264);
        tmp265 = simd_and(tmp262, bytetest_b4_b9);
        struct_Mn.cc = simd_or(tmp265, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp149);
        tmp266 = simd_and(bytetest_b0_bf, basis_bits.bit_4);
        tmp267 = simd_or(simd_and(basis_bits.bit_5, tmp166), simd_andc(tmp27, basis_bits.bit_5));
        bytetest_bb_bc = simd_and(tmp266, tmp267);
        tmp268 = simd_and(tmp262, bytetest_bb_bc);
        struct_Mn.cc = simd_or(tmp268, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp70);
        bytetest_88_8d = simd_andc(tmp181, tmp73);
        tmp269 = simd_and(tmp122, bytetest_bb);
        carryQ.cq[38] = carryout2carry(pablo_blk_Advance(tmp269, carryQ.get_carry_in(38), tmp270));
        tmp271 = simd_and(tmp270, bytetest_88_8d);
        struct_Mn.cc = simd_or(tmp271, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_bc = simd_and(bytetest_b0_bf, tmp15);
        tmp272 = simd_andc(tmp56, basis_bits.bit_6);
        bytetest_98_99 = simd_and(tmp58, tmp272);
        tmp273 = simd_and(tmp122, bytetest_bc);
        carryQ.cq[39] = carryout2carry(pablo_blk_Advance(tmp273, carryQ.get_carry_in(39), tmp274));
        tmp275 = simd_and(tmp274, bytetest_98_99);
        struct_Mn.cc = simd_or(tmp275, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_bc = simd_and(bytetest_b0_bf, tmp15);
        bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp152);
        tmp276 = simd_and(tmp274, bytetest_b5_b5);
        struct_Mn.cc = simd_or(tmp276, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_bc = simd_and(bytetest_b0_bf, tmp15);
        bytetest_b7_b7 = simd_and(bytetest_b0_bf, tmp46);
        tmp277 = simd_and(tmp274, bytetest_b7_b7);
        struct_Mn.cc = simd_or(tmp277, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_bc = simd_and(bytetest_b0_bf, tmp15);
        bytetest_b9_b9 = simd_and(bytetest_b0_bf, tmp63);
        tmp278 = simd_and(tmp274, bytetest_b9_b9);
        struct_Mn.cc = simd_or(tmp278, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_bd = simd_and(bytetest_b0_bf, tmp6);
        tmp279 = simd_or(simd_and(basis_bits.bit_4, tmp256), simd_andc(tmp86, basis_bits.bit_4));
        bytetest_b1_be = simd_and(bytetest_b0_bf, tmp279);
        tmp280 = simd_and(tmp122, bytetest_bd);
        carryQ.cq[40] = carryout2carry(pablo_blk_Advance(tmp280, carryQ.get_carry_in(40), tmp281));
        tmp282 = simd_and(tmp281, bytetest_b1_be);
        struct_Mn.cc = simd_or(tmp282, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_be = simd_and(bytetest_b0_bf, tmp104);
        bytetest_80_84 = simd_andc(tmp26, tmp71);
        tmp283 = simd_and(tmp122, bytetest_be);
        carryQ.cq[41] = carryout2carry(pablo_blk_Advance(tmp283, carryQ.get_carry_in(41), tmp284));
        tmp285 = simd_and(tmp284, bytetest_80_84);
        struct_Mn.cc = simd_or(tmp285, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_be = simd_and(bytetest_b0_bf, tmp104);
        tmp286 = simd_and(tmp32, basis_bits.bit_6);
        bytetest_86_87 = simd_and(tmp25, tmp286);
        tmp287 = simd_and(tmp284, bytetest_86_87);
        struct_Mn.cc = simd_or(tmp287, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_be = simd_and(bytetest_b0_bf, tmp104);
        tmp288 = simd_not(basis_bits.bit_4);
        tmp289 = simd_and(tmp4, tmp14);
        tmp290 = simd_or(simd_and(basis_bits.bit_3, tmp288), simd_andc(tmp289, basis_bits.bit_3));
        bytetest_8d_97 = simd_and(tmp64, tmp290);
        tmp291 = simd_and(tmp284, bytetest_8d_97);
        struct_Mn.cc = simd_or(tmp291, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_be = simd_and(bytetest_b0_bf, tmp104);
        tmp292 = simd_and(basis_bits.bit_3, tmp289);
        tmp293 = simd_not(tmp292);
        tmp294 = simd_and(basis_bits.bit_4, tmp86);
        tmp295 = simd_and(basis_bits.bit_3, tmp294);
        tmp296 = simd_or(simd_and(basis_bits.bit_2, tmp293), simd_andc(tmp295, basis_bits.bit_2));
        bytetest_99_bc = simd_and(bytetest_80_bf, tmp296);
        tmp297 = simd_and(tmp284, bytetest_99_bc);
        struct_Mn.cc = simd_or(tmp297, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_bf = simd_and(bytetest_b0_bf, tmp44);
        bytetest_86_86 = simd_and(tmp25, tmp33);
        tmp298 = simd_and(tmp122, bytetest_bf);
        carryQ.cq[42] = carryout2carry(pablo_blk_Advance(tmp298, carryQ.get_carry_in(42), tmp299));
        tmp300 = simd_and(tmp299, bytetest_86_86);
        struct_Mn.cc = simd_or(tmp300, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_80 = simd_andc(tmp25, tmp37);
        tmp301 = simd_or(simd_and(basis_bits.bit_3, tmp106), simd_andc(tmp289, basis_bits.bit_3));
        bytetest_ad_b0 = simd_and(tmp105, tmp301);
        tmp302 = simd_and(tmp10, bytetest_e1);
        carryQ.cq[43] = carryout2carry(pablo_blk_Advance(tmp302, carryQ.get_carry_in(43), tmp303));
        tmp304 = simd_and(tmp303, bytetest_80);
        carryQ.cq[44] = carryout2carry(pablo_blk_Advance(tmp304, carryQ.get_carry_in(44), tmp305));
        tmp306 = simd_and(tmp305, bytetest_ad_b0);
        struct_Mn.cc = simd_or(tmp306, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_80 = simd_andc(tmp25, tmp37);
        tmp307 = simd_andc(bytetest_b0_bf, basis_bits.bit_4);
        bytetest_b2_b7 = simd_and(tmp307, tmp118);
        tmp308 = simd_and(tmp305, bytetest_b2_b7);
        struct_Mn.cc = simd_or(tmp308, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_80 = simd_andc(tmp25, tmp37);
        tmp309 = simd_and(bytetest_b0_bf, tmp56);
        bytetest_b9_ba = simd_and(tmp309, tmp49);
        tmp310 = simd_and(tmp305, bytetest_b9_ba);
        struct_Mn.cc = simd_or(tmp310, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_80 = simd_andc(tmp25, tmp37);
        tmp311 = simd_and(bytetest_b0_bf, tmp4);
        bytetest_bd_be = simd_and(tmp311, tmp49);
        tmp312 = simd_and(tmp305, bytetest_bd_be);
        struct_Mn.cc = simd_or(tmp312, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_81 = simd_and(tmp25, tmp95);
        bytetest_98_99 = simd_and(tmp58, tmp272);
        tmp313 = simd_and(tmp303, bytetest_81);
        carryQ.cq[45] = carryout2carry(pablo_blk_Advance(tmp313, carryQ.get_carry_in(45), tmp314));
        tmp315 = simd_and(tmp314, bytetest_98_99);
        struct_Mn.cc = simd_or(tmp315, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_81 = simd_and(tmp25, tmp95);
        tmp316 = simd_or(basis_bits.bit_3, tmp37);
        tmp317 = simd_not(tmp316);
        tmp318 = simd_or(simd_and(basis_bits.bit_2, tmp317), simd_andc(tmp35, basis_bits.bit_2));
        bytetest_9e_a0 = simd_and(bytetest_80_bf, tmp318);
        tmp319 = simd_and(tmp314, bytetest_9e_a0);
        struct_Mn.cc = simd_or(tmp319, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_81 = simd_and(tmp25, tmp95);
        bytetest_b1_b4 = simd_and(tmp307, tmp167);
        tmp320 = simd_and(tmp314, bytetest_b1_b4);
        struct_Mn.cc = simd_or(tmp320, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_82 = simd_and(tmp25, tmp24);
        bytetest_82_82 = simd_and(tmp25, tmp24);
        tmp321 = simd_and(tmp303, bytetest_82);
        carryQ.cq[46] = carryout2carry(pablo_blk_Advance(tmp321, carryQ.get_carry_in(46), tmp322));
        tmp323 = simd_and(tmp322, bytetest_82_82);
        struct_Mn.cc = simd_or(tmp323, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_82 = simd_and(tmp25, tmp24);
        tmp324 = simd_and(tmp25, tmp32);
        bytetest_85_86 = simd_and(tmp324, tmp49);
        tmp325 = simd_and(tmp322, bytetest_85_86);
        struct_Mn.cc = simd_or(tmp325, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_82 = simd_and(tmp25, tmp24);
        bytetest_8d_8d = simd_and(tmp25, tmp6);
        tmp326 = simd_and(tmp322, bytetest_8d_8d);
        struct_Mn.cc = simd_or(tmp326, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_82 = simd_and(tmp25, tmp24);
        bytetest_9d_9d = simd_and(tmp58, tmp6);
        tmp327 = simd_and(tmp322, bytetest_9d_9d);
        struct_Mn.cc = simd_or(tmp327, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_8d = simd_and(tmp25, tmp6);
        tmp328 = simd_and(tmp58, tmp4);
        bytetest_9d_9f = simd_and(tmp328, tmp14);
        tmp329 = simd_and(tmp303, bytetest_8d);
        carryQ.cq[47] = carryout2carry(pablo_blk_Advance(tmp329, carryQ.get_carry_in(47), tmp330));
        tmp331 = simd_and(tmp330, bytetest_9d_9f);
        struct_Mn.cc = simd_or(tmp331, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_9c = simd_and(tmp58, tmp15);
        bytetest_92_94 = simd_and(tmp158, tmp247);
        tmp332 = simd_and(tmp303, bytetest_9c);
        carryQ.cq[48] = carryout2carry(pablo_blk_Advance(tmp332, carryQ.get_carry_in(48), tmp333));
        tmp334 = simd_and(tmp333, bytetest_92_94);
        struct_Mn.cc = simd_or(tmp334, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_9c = simd_and(tmp58, tmp15);
        bytetest_b2_b4 = simd_and(tmp307, tmp247);
        tmp335 = simd_and(tmp333, bytetest_b2_b4);
        struct_Mn.cc = simd_or(tmp335, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_9d = simd_and(tmp58, tmp6);
        bytetest_92_93 = simd_and(tmp58, tmp160);
        tmp336 = simd_and(tmp303, bytetest_9d);
        carryQ.cq[49] = carryout2carry(pablo_blk_Advance(tmp336, carryQ.get_carry_in(49), tmp337));
        tmp338 = simd_and(tmp337, bytetest_92_93);
        struct_Mn.cc = simd_or(tmp338, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_9d = simd_and(tmp58, tmp6);
        bytetest_b2_b3 = simd_and(bytetest_b0_bf, tmp160);
        tmp339 = simd_and(tmp337, bytetest_b2_b3);
        struct_Mn.cc = simd_or(tmp339, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_9e = simd_and(tmp58, tmp104);
        bytetest_b4_b5 = simd_and(bytetest_b0_bf, tmp53);
        tmp340 = simd_and(tmp303, bytetest_9e);
        carryQ.cq[50] = carryout2carry(pablo_blk_Advance(tmp340, carryQ.get_carry_in(50), tmp341));
        tmp342 = simd_and(tmp341, bytetest_b4_b5);
        struct_Mn.cc = simd_or(tmp342, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_9e = simd_and(tmp58, tmp104);
        tmp343 = simd_not(tmp73);
        tmp344 = simd_or(simd_and(basis_bits.bit_4, tmp343), simd_andc(tmp88, basis_bits.bit_4));
        bytetest_b7_bd = simd_and(bytetest_b0_bf, tmp344);
        tmp345 = simd_and(tmp341, bytetest_b7_bd);
        struct_Mn.cc = simd_or(tmp345, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_9f = simd_and(tmp58, tmp44);
        bytetest_86_86 = simd_and(tmp25, tmp33);
        tmp346 = simd_and(tmp303, bytetest_9f);
        carryQ.cq[51] = carryout2carry(pablo_blk_Advance(tmp346, carryQ.get_carry_in(51), tmp347));
        tmp348 = simd_and(tmp347, bytetest_86_86);
        struct_Mn.cc = simd_or(tmp348, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_9f = simd_and(tmp58, tmp44);
        tmp349 = simd_or(simd_and(basis_bits.bit_3, tmp112), simd_andc(tmp294, basis_bits.bit_3));
        bytetest_89_93 = simd_and(tmp64, tmp349);
        tmp350 = simd_and(tmp347, bytetest_89_93);
        struct_Mn.cc = simd_or(tmp350, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_9f = simd_and(tmp58, tmp44);
        bytetest_9d_9d = simd_and(tmp58, tmp6);
        tmp351 = simd_and(tmp347, bytetest_9d_9d);
        struct_Mn.cc = simd_or(tmp351, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_a0 = simd_andc(tmp85, tmp37);
        bytetest_8b_8d = simd_and(tmp181, tmp182);
        tmp352 = simd_and(tmp303, bytetest_a0);
        carryQ.cq[52] = carryout2carry(pablo_blk_Advance(tmp352, carryQ.get_carry_in(52), tmp353));
        tmp354 = simd_and(tmp353, bytetest_8b_8d);
        struct_Mn.cc = simd_or(tmp354, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_a2 = simd_and(tmp85, tmp24);
        bytetest_a9_a9 = simd_and(tmp85, tmp63);
        tmp355 = simd_and(tmp303, bytetest_a2);
        carryQ.cq[53] = carryout2carry(pablo_blk_Advance(tmp355, carryQ.get_carry_in(53), tmp356));
        tmp357 = simd_and(tmp356, bytetest_a9_a9);
        struct_Mn.cc = simd_or(tmp357, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_a4 = simd_and(tmp85, tmp145);
        tmp358 = simd_andc(tmp85, tmp22);
        bytetest_a0_a2 = simd_andc(tmp358, tmp27);
        tmp359 = simd_and(tmp303, bytetest_a4);
        carryQ.cq[54] = carryout2carry(pablo_blk_Advance(tmp359, carryQ.get_carry_in(54), tmp360));
        tmp361 = simd_and(tmp360, bytetest_a0_a2);
        struct_Mn.cc = simd_or(tmp361, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_a4 = simd_and(tmp85, tmp145);
        bytetest_a7_a8 = simd_and(tmp85, tmp89);
        tmp362 = simd_and(tmp360, bytetest_a7_a8);
        struct_Mn.cc = simd_or(tmp362, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_a4 = simd_and(tmp85, tmp145);
        bytetest_b2_b2 = simd_and(bytetest_b0_bf, tmp24);
        tmp363 = simd_and(tmp360, bytetest_b2_b2);
        struct_Mn.cc = simd_or(tmp363, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_a4 = simd_and(tmp85, tmp145);
        bytetest_b9_bb = simd_and(tmp309, tmp14);
        tmp364 = simd_and(tmp360, bytetest_b9_bb);
        struct_Mn.cc = simd_or(tmp364, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_a8 = simd_and(tmp85, tmp57);
        bytetest_97_98 = simd_and(tmp58, tmp89);
        tmp365 = simd_and(tmp303, bytetest_a8);
        carryQ.cq[55] = carryout2carry(pablo_blk_Advance(tmp365, carryQ.get_carry_in(55), tmp366));
        tmp367 = simd_and(tmp366, bytetest_97_98);
        struct_Mn.cc = simd_or(tmp367, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_a8 = simd_and(tmp85, tmp57);
        bytetest_9b_9b = simd_and(tmp58, tmp70);
        tmp368 = simd_and(tmp366, bytetest_9b_9b);
        struct_Mn.cc = simd_or(tmp368, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_a9 = simd_and(tmp85, tmp63);
        bytetest_96_96 = simd_and(tmp58, tmp33);
        tmp369 = simd_and(tmp303, bytetest_a9);
        carryQ.cq[56] = carryout2carry(pablo_blk_Advance(tmp369, carryQ.get_carry_in(56), tmp370));
        tmp371 = simd_and(tmp370, bytetest_96_96);
        struct_Mn.cc = simd_or(tmp371, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_a9 = simd_and(tmp85, tmp63);
        tmp372 = simd_and(tmp58, basis_bits.bit_4);
        bytetest_98_9e = simd_andc(tmp372, tmp88);
        tmp373 = simd_and(tmp370, bytetest_98_9e);
        struct_Mn.cc = simd_or(tmp373, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_a9 = simd_and(tmp85, tmp63);
        bytetest_a0_a0 = simd_andc(tmp85, tmp37);
        tmp374 = simd_and(tmp370, bytetest_a0_a0);
        struct_Mn.cc = simd_or(tmp374, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_a9 = simd_and(tmp85, tmp63);
        bytetest_a2_a2 = simd_and(tmp85, tmp24);
        tmp375 = simd_and(tmp370, bytetest_a2_a2);
        struct_Mn.cc = simd_or(tmp375, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_a9 = simd_and(tmp85, tmp63);
        tmp376 = simd_or(simd_and(basis_bits.bit_4, tmp72), simd_andc(tmp71, basis_bits.bit_4));
        bytetest_a5_ac = simd_and(tmp85, tmp376);
        tmp377 = simd_and(tmp370, bytetest_a5_ac);
        struct_Mn.cc = simd_or(tmp377, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_a9 = simd_and(tmp85, tmp63);
        tmp378 = simd_or(simd_and(basis_bits.bit_4, tmp72), simd_andc(tmp28, basis_bits.bit_4));
        bytetest_b3_bc = simd_and(bytetest_b0_bf, tmp378);
        tmp379 = simd_and(tmp370, bytetest_b3_bc);
        struct_Mn.cc = simd_or(tmp379, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_a9 = simd_and(tmp85, tmp63);
        bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp44);
        tmp380 = simd_and(tmp370, bytetest_bf_bf);
        struct_Mn.cc = simd_or(tmp380, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_ac = simd_and(tmp85, tmp15);
        bytetest_80_83 = simd_andc(tmp25, tmp22);
        tmp381 = simd_and(tmp303, bytetest_ac);
        carryQ.cq[57] = carryout2carry(pablo_blk_Advance(tmp381, carryQ.get_carry_in(57), tmp382));
        tmp383 = simd_and(tmp382, bytetest_80_83);
        struct_Mn.cc = simd_or(tmp383, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_ac = simd_and(tmp85, tmp15);
        bytetest_b4_b4 = simd_and(bytetest_b0_bf, tmp145);
        tmp384 = simd_and(tmp382, bytetest_b4_b4);
        struct_Mn.cc = simd_or(tmp384, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_ac = simd_and(tmp85, tmp15);
        tmp385 = simd_or(simd_and(basis_bits.bit_4, tmp253), simd_andc(tmp73, basis_bits.bit_4));
        bytetest_b6_ba = simd_and(bytetest_b0_bf, tmp385);
        tmp386 = simd_and(tmp382, bytetest_b6_ba);
        struct_Mn.cc = simd_or(tmp386, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_ac = simd_and(tmp85, tmp15);
        bytetest_bc_bc = simd_and(bytetest_b0_bf, tmp15);
        tmp387 = simd_and(tmp382, bytetest_bc_bc);
        struct_Mn.cc = simd_or(tmp387, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_ad = simd_and(tmp85, tmp6);
        bytetest_82_82 = simd_and(tmp25, tmp24);
        tmp388 = simd_and(tmp303, bytetest_ad);
        carryQ.cq[58] = carryout2carry(pablo_blk_Advance(tmp388, carryQ.get_carry_in(58), tmp389));
        tmp390 = simd_and(tmp389, bytetest_82_82);
        struct_Mn.cc = simd_or(tmp390, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_ad = simd_and(tmp85, tmp6);
        bytetest_ab_b3 = simd_and(tmp105, tmp113);
        tmp391 = simd_and(tmp389, bytetest_ab_b3);
        struct_Mn.cc = simd_or(tmp391, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_ae = simd_and(tmp85, tmp104);
        bytetest_80_81 = simd_andc(tmp25, tmp185);
        tmp392 = simd_and(tmp303, bytetest_ae);
        carryQ.cq[59] = carryout2carry(pablo_blk_Advance(tmp392, carryQ.get_carry_in(59), tmp393));
        tmp394 = simd_and(tmp393, bytetest_80_81);
        struct_Mn.cc = simd_or(tmp394, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_ae = simd_and(tmp85, tmp104);
        tmp395 = simd_andc(tmp85, basis_bits.bit_4);
        bytetest_a2_a5 = simd_and(tmp395, tmp93);
        tmp396 = simd_and(tmp393, bytetest_a2_a5);
        struct_Mn.cc = simd_or(tmp396, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_ae = simd_and(tmp85, tmp104);
        bytetest_a8_a9 = simd_and(tmp85, tmp272);
        tmp397 = simd_and(tmp393, bytetest_a8_a9);
        struct_Mn.cc = simd_or(tmp397, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_ae = simd_and(tmp85, tmp104);
        bytetest_ab_ab = simd_and(tmp85, tmp70);
        tmp398 = simd_and(tmp393, bytetest_ab_ab);
        struct_Mn.cc = simd_or(tmp398, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_af = simd_and(tmp85, tmp44);
        bytetest_a6_a6 = simd_and(tmp85, tmp33);
        tmp399 = simd_and(tmp303, bytetest_af);
        carryQ.cq[60] = carryout2carry(pablo_blk_Advance(tmp399, carryQ.get_carry_in(60), tmp400));
        tmp401 = simd_and(tmp400, bytetest_a6_a6);
        struct_Mn.cc = simd_or(tmp401, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_af = simd_and(tmp85, tmp44);
        bytetest_a8_a9 = simd_and(tmp85, tmp272);
        tmp402 = simd_and(tmp400, bytetest_a8_a9);
        struct_Mn.cc = simd_or(tmp402, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_af = simd_and(tmp85, tmp44);
        bytetest_ad_ad = simd_and(tmp85, tmp6);
        tmp403 = simd_and(tmp400, bytetest_ad_ad);
        struct_Mn.cc = simd_or(tmp403, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_af = simd_and(tmp85, tmp44);
        tmp404 = simd_not(tmp185);
        tmp405 = simd_or(simd_and(basis_bits.bit_3, tmp404), simd_andc(tmp44, basis_bits.bit_3));
        bytetest_af_b1 = simd_and(tmp105, tmp405);
        tmp406 = simd_and(tmp400, bytetest_af_b1);
        struct_Mn.cc = simd_or(tmp406, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_b0 = simd_andc(bytetest_b0_bf, tmp37);
        tmp407 = simd_or(simd_and(basis_bits.bit_3, tmp112), simd_andc(tmp4, basis_bits.bit_3));
        bytetest_ac_b3 = simd_and(tmp105, tmp407);
        tmp408 = simd_and(tmp303, bytetest_b0);
        carryQ.cq[61] = carryout2carry(pablo_blk_Advance(tmp408, carryQ.get_carry_in(61), tmp409));
        tmp410 = simd_and(tmp409, bytetest_ac_b3);
        struct_Mn.cc = simd_or(tmp410, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_b0 = simd_andc(bytetest_b0_bf, tmp37);
        bytetest_b6_b7 = simd_and(bytetest_b0_bf, tmp286);
        tmp411 = simd_and(tmp409, bytetest_b6_b7);
        struct_Mn.cc = simd_or(tmp411, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp139);
        tmp412 = simd_andc(tmp58, tmp22);
        bytetest_90_92 = simd_andc(tmp412, tmp27);
        tmp413 = simd_and(tmp303, bytetest_b3);
        carryQ.cq[62] = carryout2carry(pablo_blk_Advance(tmp413, carryQ.get_carry_in(62), tmp414));
        tmp415 = simd_and(tmp414, bytetest_90_92);
        struct_Mn.cc = simd_or(tmp415, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp139);
        tmp416 = simd_and(basis_bits.bit_3, tmp22);
        tmp417 = simd_or(simd_and(basis_bits.bit_2, tmp317), simd_andc(tmp416, basis_bits.bit_2));
        bytetest_94_a0 = simd_and(bytetest_80_bf, tmp417);
        tmp418 = simd_and(tmp414, bytetest_94_a0);
        struct_Mn.cc = simd_or(tmp418, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp139);
        tmp419 = simd_or(simd_and(basis_bits.bit_4, tmp87), simd_andc(tmp118, basis_bits.bit_4));
        bytetest_a2_a8 = simd_and(tmp85, tmp419);
        tmp420 = simd_and(tmp414, bytetest_a2_a8);
        struct_Mn.cc = simd_or(tmp420, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp139);
        bytetest_ad_ad = simd_and(tmp85, tmp6);
        tmp421 = simd_and(tmp414, bytetest_ad_ad);
        struct_Mn.cc = simd_or(tmp421, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp139);
        bytetest_b4_b4 = simd_and(bytetest_b0_bf, tmp145);
        tmp422 = simd_and(tmp414, bytetest_b4_b4);
        struct_Mn.cc = simd_or(tmp422, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_b7 = simd_and(bytetest_b0_bf, tmp46);
        tmp423 = simd_or(basis_bits.bit_4, tmp88);
        tmp424 = simd_or(basis_bits.bit_3, tmp423);
        tmp425 = simd_and(basis_bits.bit_2, tmp424);
        bytetest_80_a6 = simd_andc(bytetest_80_bf, tmp425);
        tmp426 = simd_and(tmp303, bytetest_b7);
        carryQ.cq[63] = carryout2carry(pablo_blk_Advance(tmp426, carryQ.get_carry_in(63), tmp427));
        tmp428 = simd_and(tmp427, bytetest_80_a6);
        struct_Mn.cc = simd_or(tmp428, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_b7 = simd_and(bytetest_b0_bf, tmp46);
        bytetest_bc_bf = simd_and(bytetest_b0_bf, tmp4);
        tmp429 = simd_and(tmp427, bytetest_bc_bf);
        struct_Mn.cc = simd_or(tmp429, struct_Mn.cc);
        bytetest_e2 = simd_and(tmp117, tmp24);
        bytetest_83 = simd_and(tmp25, tmp139);
        tmp430 = simd_and(basis_bits.bit_4, tmp71);
        bytetest_90_9c = simd_andc(tmp58, tmp430);
        tmp431 = simd_and(tmp10, bytetest_e2);
        carryQ.cq[64] = carryout2carry(pablo_blk_Advance(tmp431, carryQ.get_carry_in(64), tmp432));
        tmp433 = simd_and(tmp432, bytetest_83);
        carryQ.cq[65] = carryout2carry(pablo_blk_Advance(tmp433, carryQ.get_carry_in(65), tmp434));
        tmp435 = simd_and(tmp434, bytetest_90_9c);
        struct_Mn.cc = simd_or(tmp435, struct_Mn.cc);
        bytetest_e2 = simd_and(tmp117, tmp24);
        bytetest_83 = simd_and(tmp25, tmp139);
        bytetest_a1_a1 = simd_and(tmp85, tmp95);
        tmp436 = simd_and(tmp434, bytetest_a1_a1);
        struct_Mn.cc = simd_or(tmp436, struct_Mn.cc);
        bytetest_e2 = simd_and(tmp117, tmp24);
        bytetest_83 = simd_and(tmp25, tmp139);
        tmp437 = simd_or(simd_and(basis_bits.bit_3, tmp106), simd_andc(tmp78, basis_bits.bit_3));
        bytetest_a5_b0 = simd_and(tmp105, tmp437);
        tmp438 = simd_and(tmp434, bytetest_a5_b0);
        struct_Mn.cc = simd_or(tmp438, struct_Mn.cc);
        bytetest_e2 = simd_and(tmp117, tmp24);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp139);
        bytetest_af_b1 = simd_and(tmp105, tmp405);
        tmp439 = simd_and(tmp432, bytetest_b3);
        carryQ.cq[66] = carryout2carry(pablo_blk_Advance(tmp439, carryQ.get_carry_in(66), tmp440));
        tmp441 = simd_and(tmp440, bytetest_af_b1);
        struct_Mn.cc = simd_or(tmp441, struct_Mn.cc);
        bytetest_e2 = simd_and(tmp117, tmp24);
        bytetest_b5 = simd_and(bytetest_b0_bf, tmp152);
        bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp44);
        tmp442 = simd_and(tmp432, bytetest_b5);
        carryQ.cq[67] = carryout2carry(pablo_blk_Advance(tmp442, carryQ.get_carry_in(67), tmp443));
        tmp444 = simd_and(tmp443, bytetest_bf_bf);
        struct_Mn.cc = simd_or(tmp444, struct_Mn.cc);
        bytetest_e2 = simd_and(tmp117, tmp24);
        bytetest_b7 = simd_and(bytetest_b0_bf, tmp46);
        bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp445 = simd_and(tmp432, bytetest_b7);
        carryQ.cq[68] = carryout2carry(pablo_blk_Advance(tmp445, carryQ.get_carry_in(68), tmp446));
        tmp447 = simd_and(tmp446, bytetest_a0_bf);
        struct_Mn.cc = simd_or(tmp447, struct_Mn.cc);
        bytetest_e3 = simd_and(tmp117, tmp139);
        bytetest_80 = simd_andc(tmp25, tmp37);
        bytetest_aa_ad = simd_and(tmp91, tmp93);
        tmp448 = simd_and(tmp10, bytetest_e3);
        carryQ.cq[69] = carryout2carry(pablo_blk_Advance(tmp448, carryQ.get_carry_in(69), tmp449));
        tmp450 = simd_and(tmp449, bytetest_80);
        carryQ.cq[70] = carryout2carry(pablo_blk_Advance(tmp450, carryQ.get_carry_in(70), tmp451));
        tmp452 = simd_and(tmp451, bytetest_aa_ad);
        struct_Mn.cc = simd_or(tmp452, struct_Mn.cc);
        bytetest_e3 = simd_and(tmp117, tmp139);
        bytetest_82 = simd_and(tmp25, tmp24);
        bytetest_99_9a = simd_and(tmp135, tmp49);
        tmp453 = simd_and(tmp449, bytetest_82);
        carryQ.cq[71] = carryout2carry(pablo_blk_Advance(tmp453, carryQ.get_carry_in(71), tmp454));
        tmp455 = simd_and(tmp454, bytetest_99_9a);
        struct_Mn.cc = simd_or(tmp455, struct_Mn.cc);
        bytetest_ea = simd_and(tmp117, tmp149);
        bytetest_99 = simd_and(tmp58, tmp63);
        bytetest_af_af = simd_and(tmp85, tmp44);
        tmp456 = simd_and(tmp10, bytetest_ea);
        carryQ.cq[72] = carryout2carry(pablo_blk_Advance(tmp456, carryQ.get_carry_in(72), tmp457));
        tmp458 = simd_and(tmp457, bytetest_99);
        carryQ.cq[73] = carryout2carry(pablo_blk_Advance(tmp458, carryQ.get_carry_in(73), tmp459));
        tmp460 = simd_and(tmp459, bytetest_af_af);
        struct_Mn.cc = simd_or(tmp460, struct_Mn.cc);
        bytetest_ea = simd_and(tmp117, tmp149);
        bytetest_99 = simd_and(tmp58, tmp63);
        tmp461 = simd_or(simd_and(basis_bits.bit_4, tmp343), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
        bytetest_b4_bd = simd_and(bytetest_b0_bf, tmp461);
        tmp462 = simd_and(tmp459, bytetest_b4_bd);
        struct_Mn.cc = simd_or(tmp462, struct_Mn.cc);
        bytetest_ea = simd_and(tmp117, tmp149);
        bytetest_9a = simd_and(tmp58, tmp149);
        bytetest_9f_9f = simd_and(tmp58, tmp44);
        tmp463 = simd_and(tmp457, bytetest_9a);
        carryQ.cq[74] = carryout2carry(pablo_blk_Advance(tmp463, carryQ.get_carry_in(74), tmp464));
        tmp465 = simd_and(tmp464, bytetest_9f_9f);
        struct_Mn.cc = simd_or(tmp465, struct_Mn.cc);
        bytetest_ea = simd_and(tmp117, tmp149);
        bytetest_9b = simd_and(tmp58, tmp70);
        bytetest_b0_b1 = simd_andc(bytetest_b0_bf, tmp185);
        tmp466 = simd_and(tmp457, bytetest_9b);
        carryQ.cq[75] = carryout2carry(pablo_blk_Advance(tmp466, carryQ.get_carry_in(75), tmp467));
        tmp468 = simd_and(tmp467, bytetest_b0_b1);
        struct_Mn.cc = simd_or(tmp468, struct_Mn.cc);
        bytetest_ea = simd_and(tmp117, tmp149);
        bytetest_a0 = simd_andc(tmp85, tmp37);
        bytetest_82_82 = simd_and(tmp25, tmp24);
        tmp469 = simd_and(tmp457, bytetest_a0);
        carryQ.cq[76] = carryout2carry(pablo_blk_Advance(tmp469, carryQ.get_carry_in(76), tmp470));
        tmp471 = simd_and(tmp470, bytetest_82_82);
        struct_Mn.cc = simd_or(tmp471, struct_Mn.cc);
        bytetest_ea = simd_and(tmp117, tmp149);
        bytetest_a0 = simd_andc(tmp85, tmp37);
        bytetest_86_86 = simd_and(tmp25, tmp33);
        tmp472 = simd_and(tmp470, bytetest_86_86);
        struct_Mn.cc = simd_or(tmp472, struct_Mn.cc);
        bytetest_ea = simd_and(tmp117, tmp149);
        bytetest_a0 = simd_andc(tmp85, tmp37);
        bytetest_8b_8b = simd_and(tmp25, tmp70);
        tmp473 = simd_and(tmp470, bytetest_8b_8b);
        struct_Mn.cc = simd_or(tmp473, struct_Mn.cc);
        bytetest_ea = simd_and(tmp117, tmp149);
        bytetest_a0 = simd_andc(tmp85, tmp37);
        bytetest_a5_a6 = simd_and(tmp131, tmp49);
        tmp474 = simd_and(tmp470, bytetest_a5_a6);
        struct_Mn.cc = simd_or(tmp474, struct_Mn.cc);
        bytetest_ea = simd_and(tmp117, tmp149);
        bytetest_a3 = simd_and(tmp85, tmp139);
        bytetest_84_84 = simd_and(tmp25, tmp145);
        tmp475 = simd_and(tmp457, bytetest_a3);
        carryQ.cq[77] = carryout2carry(pablo_blk_Advance(tmp475, carryQ.get_carry_in(77), tmp476));
        tmp477 = simd_and(tmp476, bytetest_84_84);
        struct_Mn.cc = simd_or(tmp477, struct_Mn.cc);
        bytetest_ea = simd_and(tmp117, tmp149);
        bytetest_a3 = simd_and(tmp85, tmp139);
        tmp478 = simd_and(basis_bits.bit_3, tmp185);
        bytetest_a0_b1 = simd_andc(bytetest_a0_bf, tmp478);
        tmp479 = simd_and(tmp476, bytetest_a0_b1);
        struct_Mn.cc = simd_or(tmp479, struct_Mn.cc);
        bytetest_ea = simd_and(tmp117, tmp149);
        bytetest_a4 = simd_and(tmp85, tmp145);
        tmp480 = simd_or(simd_and(basis_bits.bit_4, tmp343), simd_andc(tmp73, basis_bits.bit_4));
        bytetest_a6_ad = simd_and(tmp85, tmp480);
        tmp481 = simd_and(tmp457, bytetest_a4);
        carryQ.cq[78] = carryout2carry(pablo_blk_Advance(tmp481, carryQ.get_carry_in(78), tmp482));
        tmp483 = simd_and(tmp482, bytetest_a6_ad);
        struct_Mn.cc = simd_or(tmp483, struct_Mn.cc);
        bytetest_ea = simd_and(tmp117, tmp149);
        bytetest_a5 = simd_and(tmp85, tmp152);
        tmp484 = simd_or(simd_and(basis_bits.bit_3, tmp404), simd_andc(tmp423, basis_bits.bit_3));
        bytetest_87_91 = simd_and(tmp64, tmp484);
        tmp485 = simd_and(tmp457, bytetest_a5);
        carryQ.cq[79] = carryout2carry(pablo_blk_Advance(tmp485, carryQ.get_carry_in(79), tmp486));
        tmp487 = simd_and(tmp486, bytetest_87_91);
        struct_Mn.cc = simd_or(tmp487, struct_Mn.cc);
        bytetest_ea = simd_and(tmp117, tmp149);
        bytetest_a6 = simd_and(tmp85, tmp33);
        bytetest_80_82 = simd_andc(bytetest_80_83, tmp27);
        tmp488 = simd_and(tmp457, bytetest_a6);
        carryQ.cq[80] = carryout2carry(pablo_blk_Advance(tmp488, carryQ.get_carry_in(80), tmp489));
        tmp490 = simd_and(tmp489, bytetest_80_82);
        struct_Mn.cc = simd_or(tmp490, struct_Mn.cc);
        bytetest_ea = simd_and(tmp117, tmp149);
        bytetest_a6 = simd_and(tmp85, tmp33);
        bytetest_b3_b3 = simd_and(bytetest_b0_bf, tmp139);
        tmp491 = simd_and(tmp489, bytetest_b3_b3);
        struct_Mn.cc = simd_or(tmp491, struct_Mn.cc);
        bytetest_ea = simd_and(tmp117, tmp149);
        bytetest_a6 = simd_and(tmp85, tmp33);
        bytetest_b6_b9 = simd_and(bytetest_b0_bf, tmp120);
        tmp492 = simd_and(tmp489, bytetest_b6_b9);
        struct_Mn.cc = simd_or(tmp492, struct_Mn.cc);
        bytetest_ea = simd_and(tmp117, tmp149);
        bytetest_a6 = simd_and(tmp85, tmp33);
        bytetest_bc_bc = simd_and(bytetest_b0_bf, tmp15);
        tmp493 = simd_and(tmp489, bytetest_bc_bc);
        struct_Mn.cc = simd_or(tmp493, struct_Mn.cc);
        bytetest_ea = simd_and(tmp117, tmp149);
        bytetest_a8 = simd_and(tmp85, tmp57);
        tmp494 = simd_not(tmp27);
        tmp495 = simd_or(simd_and(basis_bits.bit_5, tmp494), simd_andc(tmp14, basis_bits.bit_5));
        bytetest_a9_ae = simd_and(tmp91, tmp495);
        tmp496 = simd_and(tmp457, bytetest_a8);
        carryQ.cq[81] = carryout2carry(pablo_blk_Advance(tmp496, carryQ.get_carry_in(81), tmp497));
        tmp498 = simd_and(tmp497, bytetest_a9_ae);
        struct_Mn.cc = simd_or(tmp498, struct_Mn.cc);
        bytetest_ea = simd_and(tmp117, tmp149);
        bytetest_a8 = simd_and(tmp85, tmp57);
        tmp499 = simd_andc(bytetest_b0_bf, tmp22);
        bytetest_b1_b2 = simd_and(tmp499, tmp49);
        tmp500 = simd_and(tmp497, bytetest_b1_b2);
        struct_Mn.cc = simd_or(tmp500, struct_Mn.cc);
        bytetest_ea = simd_and(tmp117, tmp149);
        bytetest_a8 = simd_and(tmp85, tmp57);
        tmp501 = simd_and(bytetest_b0_bf, tmp32);
        bytetest_b5_b6 = simd_and(tmp501, tmp49);
        tmp502 = simd_and(tmp497, bytetest_b5_b6);
        struct_Mn.cc = simd_or(tmp502, struct_Mn.cc);
        bytetest_ea = simd_and(tmp117, tmp149);
        bytetest_a9 = simd_and(tmp85, tmp63);
        bytetest_83_83 = simd_and(tmp25, tmp139);
        tmp503 = simd_and(tmp457, bytetest_a9);
        carryQ.cq[82] = carryout2carry(pablo_blk_Advance(tmp503, carryQ.get_carry_in(82), tmp504));
        tmp505 = simd_and(tmp504, bytetest_83_83);
        struct_Mn.cc = simd_or(tmp505, struct_Mn.cc);
        bytetest_ea = simd_and(tmp117, tmp149);
        bytetest_a9 = simd_and(tmp85, tmp63);
        bytetest_8c_8c = simd_and(tmp25, tmp15);
        tmp506 = simd_and(tmp504, bytetest_8c_8c);
        struct_Mn.cc = simd_or(tmp506, struct_Mn.cc);
        bytetest_ea = simd_and(tmp117, tmp149);
        bytetest_aa = simd_and(tmp85, tmp149);
        bytetest_b0_b0 = simd_andc(bytetest_b0_bf, tmp37);
        tmp507 = simd_and(tmp457, bytetest_aa);
        carryQ.cq[83] = carryout2carry(pablo_blk_Advance(tmp507, carryQ.get_carry_in(83), tmp508));
        tmp509 = simd_and(tmp508, bytetest_b0_b0);
        struct_Mn.cc = simd_or(tmp509, struct_Mn.cc);
        bytetest_ea = simd_and(tmp117, tmp149);
        bytetest_aa = simd_and(tmp85, tmp149);
        bytetest_b2_b4 = simd_and(tmp307, tmp247);
        tmp510 = simd_and(tmp508, bytetest_b2_b4);
        struct_Mn.cc = simd_or(tmp510, struct_Mn.cc);
        bytetest_ea = simd_and(tmp117, tmp149);
        bytetest_aa = simd_and(tmp85, tmp149);
        bytetest_b7_b8 = simd_and(bytetest_b0_bf, tmp89);
        tmp511 = simd_and(tmp508, bytetest_b7_b8);
        struct_Mn.cc = simd_or(tmp511, struct_Mn.cc);
        bytetest_ea = simd_and(tmp117, tmp149);
        bytetest_aa = simd_and(tmp85, tmp149);
        bytetest_be_bf = simd_and(bytetest_b0_bf, tmp34);
        tmp512 = simd_and(tmp508, bytetest_be_bf);
        struct_Mn.cc = simd_or(tmp512, struct_Mn.cc);
        bytetest_ea = simd_and(tmp117, tmp149);
        bytetest_ab = simd_and(tmp85, tmp70);
        bytetest_81_81 = simd_and(tmp25, tmp95);
        tmp513 = simd_and(tmp457, bytetest_ab);
        carryQ.cq[84] = carryout2carry(pablo_blk_Advance(tmp513, carryQ.get_carry_in(84), tmp514));
        tmp515 = simd_and(tmp514, bytetest_81_81);
        struct_Mn.cc = simd_or(tmp515, struct_Mn.cc);
        bytetest_ea = simd_and(tmp117, tmp149);
        bytetest_ab = simd_and(tmp85, tmp70);
        bytetest_ac_ad = simd_and(tmp85, tmp236);
        tmp516 = simd_and(tmp514, bytetest_ac_ad);
        struct_Mn.cc = simd_or(tmp516, struct_Mn.cc);
        bytetest_ea = simd_and(tmp117, tmp149);
        bytetest_ab = simd_and(tmp85, tmp70);
        bytetest_b6_b6 = simd_and(bytetest_b0_bf, tmp33);
        tmp517 = simd_and(tmp514, bytetest_b6_b6);
        struct_Mn.cc = simd_or(tmp517, struct_Mn.cc);
        bytetest_ea = simd_and(tmp117, tmp149);
        bytetest_af = simd_and(tmp85, tmp44);
        bytetest_a5_a5 = simd_and(tmp85, tmp152);
        tmp518 = simd_and(tmp457, bytetest_af);
        carryQ.cq[85] = carryout2carry(pablo_blk_Advance(tmp518, carryQ.get_carry_in(85), tmp519));
        tmp520 = simd_and(tmp519, bytetest_a5_a5);
        struct_Mn.cc = simd_or(tmp520, struct_Mn.cc);
        bytetest_ea = simd_and(tmp117, tmp149);
        bytetest_af = simd_and(tmp85, tmp44);
        bytetest_a8_a8 = simd_and(tmp85, tmp57);
        tmp521 = simd_and(tmp519, bytetest_a8_a8);
        struct_Mn.cc = simd_or(tmp521, struct_Mn.cc);
        bytetest_ea = simd_and(tmp117, tmp149);
        bytetest_af = simd_and(tmp85, tmp44);
        bytetest_ad_ad = simd_and(tmp85, tmp6);
        tmp522 = simd_and(tmp519, bytetest_ad_ad);
        struct_Mn.cc = simd_or(tmp522, struct_Mn.cc);
        bytetest_ef = simd_and(tmp117, tmp44);
        bytetest_ac = simd_and(tmp85, tmp15);
        bytetest_9e_9e = simd_and(tmp58, tmp104);
        tmp523 = simd_and(tmp10, bytetest_ef);
        carryQ.cq[86] = carryout2carry(pablo_blk_Advance(tmp523, carryQ.get_carry_in(86), tmp524));
        tmp525 = simd_and(tmp524, bytetest_ac);
        carryQ.cq[87] = carryout2carry(pablo_blk_Advance(tmp525, carryQ.get_carry_in(87), tmp526));
        tmp527 = simd_and(tmp526, bytetest_9e_9e);
        struct_Mn.cc = simd_or(tmp527, struct_Mn.cc);
        bytetest_ef = simd_and(tmp117, tmp44);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp57);
        bytetest_80_8f = simd_andc(bytetest_80_bf, tmp2);
        tmp528 = simd_and(tmp524, bytetest_b8);
        carryQ.cq[88] = carryout2carry(pablo_blk_Advance(tmp528, carryQ.get_carry_in(88), tmp529));
        tmp530 = simd_and(tmp529, bytetest_80_8f);
        struct_Mn.cc = simd_or(tmp530, struct_Mn.cc);
        bytetest_ef = simd_and(tmp117, tmp44);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp57);
        bytetest_a0_a6 = simd_andc(tmp395, tmp88);
        tmp531 = simd_and(tmp529, bytetest_a0_a6);
        struct_Mn.cc = simd_or(tmp531, struct_Mn.cc);
        tmp532 = simd_and(tmp1, tmp8);
        bytetest_f0 = simd_andc(tmp532, tmp37);
        bytetest_90 = simd_andc(tmp58, tmp37);
        bytetest_87 = simd_and(bytetest_80_8f, tmp46);
        bytetest_bd_bd = simd_and(bytetest_b0_bf, tmp6);
        tmp533 = simd_and(tmp10, bytetest_f0);
        carryQ.cq[89] = carryout2carry(pablo_blk_Advance(tmp533, carryQ.get_carry_in(89), tmp534));
        tmp535 = simd_and(tmp534, bytetest_90);
        carryQ.cq[90] = carryout2carry(pablo_blk_Advance(tmp535, carryQ.get_carry_in(90), tmp536));
        tmp537 = simd_and(tmp536, bytetest_87);
        carryQ.cq[91] = carryout2carry(pablo_blk_Advance(tmp537, carryQ.get_carry_in(91), tmp538));
        tmp539 = simd_and(tmp538, bytetest_bd_bd);
        struct_Mn.cc = simd_or(tmp539, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp532, tmp37);
        bytetest_90 = simd_andc(tmp58, tmp37);
        bytetest_a8 = simd_and(tmp85, tmp57);
        tmp540 = simd_andc(bytetest_80_8f, tmp22);
        bytetest_81_83 = simd_and(tmp540, tmp14);
        tmp541 = simd_and(tmp536, bytetest_a8);
        carryQ.cq[92] = carryout2carry(pablo_blk_Advance(tmp541, carryQ.get_carry_in(92), tmp542));
        tmp543 = simd_and(tmp542, bytetest_81_83);
        struct_Mn.cc = simd_or(tmp543, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp532, tmp37);
        bytetest_90 = simd_andc(tmp58, tmp37);
        bytetest_a8 = simd_and(tmp85, tmp57);
        tmp544 = simd_and(bytetest_80_8f, tmp32);
        bytetest_85_86 = simd_and(tmp544, tmp49);
        tmp545 = simd_and(tmp542, bytetest_85_86);
        struct_Mn.cc = simd_or(tmp545, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp532, tmp37);
        bytetest_90 = simd_andc(tmp58, tmp37);
        bytetest_a8 = simd_and(tmp85, tmp57);
        bytetest_8c_8f = simd_and(bytetest_80_8f, tmp4);
        tmp546 = simd_and(tmp542, bytetest_8c_8f);
        struct_Mn.cc = simd_or(tmp546, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp532, tmp37);
        bytetest_90 = simd_andc(tmp58, tmp37);
        bytetest_a8 = simd_and(tmp85, tmp57);
        bytetest_b8_ba = simd_andc(tmp309, tmp27);
        tmp547 = simd_and(tmp542, bytetest_b8_ba);
        struct_Mn.cc = simd_or(tmp547, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp532, tmp37);
        bytetest_90 = simd_andc(tmp58, tmp37);
        bytetest_a8 = simd_and(tmp85, tmp57);
        bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp44);
        tmp548 = simd_and(tmp542, bytetest_bf_bf);
        struct_Mn.cc = simd_or(tmp548, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp532, tmp37);
        bytetest_91 = simd_and(tmp58, tmp95);
        bytetest_80 = simd_andc(bytetest_80_8f, tmp37);
        bytetest_81_81 = simd_and(bytetest_80_8f, tmp95);
        tmp549 = simd_and(tmp534, bytetest_91);
        carryQ.cq[93] = carryout2carry(pablo_blk_Advance(tmp549, carryQ.get_carry_in(93), tmp550));
        tmp551 = simd_and(tmp550, bytetest_80);
        carryQ.cq[94] = carryout2carry(pablo_blk_Advance(tmp551, carryQ.get_carry_in(94), tmp552));
        tmp553 = simd_and(tmp552, bytetest_81_81);
        struct_Mn.cc = simd_or(tmp553, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp532, tmp37);
        bytetest_91 = simd_and(tmp58, tmp95);
        bytetest_81 = simd_and(bytetest_80_8f, tmp95);
        tmp554 = simd_andc(bytetest_80_8f, basis_bits.bit_4);
        bytetest_80_86 = simd_andc(tmp554, tmp88);
        tmp555 = simd_and(tmp550, bytetest_81);
        carryQ.cq[95] = carryout2carry(pablo_blk_Advance(tmp555, carryQ.get_carry_in(95), tmp556));
        tmp557 = simd_and(tmp556, bytetest_80_86);
        bytetest_80 = simd_andc(bytetest_80_8f, tmp37);
        bytetest_b8_bf = simd_and(bytetest_b0_bf, basis_bits.bit_4);
        tmp558 = simd_and(tmp552, bytetest_b8_bf);
        tmp559 = simd_or(tmp558, tmp557);
        struct_Mn.cc = simd_or(tmp559, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp532, tmp37);
        bytetest_91 = simd_and(tmp58, tmp95);
        bytetest_82 = simd_and(bytetest_80_8f, tmp24);
        bytetest_80_81 = simd_andc(bytetest_80_8f, tmp185);
        tmp560 = simd_and(tmp550, bytetest_82);
        carryQ.cq[96] = carryout2carry(pablo_blk_Advance(tmp560, carryQ.get_carry_in(96), tmp561));
        tmp562 = simd_and(tmp561, bytetest_80_81);
        struct_Mn.cc = simd_or(tmp562, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp532, tmp37);
        bytetest_91 = simd_and(tmp58, tmp95);
        bytetest_82 = simd_and(bytetest_80_8f, tmp24);
        tmp563 = simd_or(simd_and(basis_bits.bit_5, tmp494), simd_andc(tmp27, basis_bits.bit_5));
        bytetest_b3_b6 = simd_and(tmp307, tmp563);
        tmp564 = simd_and(tmp561, bytetest_b3_b6);
        struct_Mn.cc = simd_or(tmp564, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp532, tmp37);
        bytetest_91 = simd_and(tmp58, tmp95);
        bytetest_82 = simd_and(bytetest_80_8f, tmp24);
        bytetest_b9_ba = simd_and(tmp309, tmp49);
        tmp565 = simd_and(tmp561, bytetest_b9_ba);
        struct_Mn.cc = simd_or(tmp565, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp532, tmp37);
        bytetest_91 = simd_and(tmp58, tmp95);
        bytetest_84 = simd_and(bytetest_80_8f, tmp145);
        bytetest_80_82 = simd_andc(tmp540, tmp27);
        tmp566 = simd_and(tmp550, bytetest_84);
        carryQ.cq[97] = carryout2carry(pablo_blk_Advance(tmp566, carryQ.get_carry_in(97), tmp567));
        tmp568 = simd_and(tmp567, bytetest_80_82);
        struct_Mn.cc = simd_or(tmp568, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp532, tmp37);
        bytetest_91 = simd_and(tmp58, tmp95);
        bytetest_84 = simd_and(bytetest_80_8f, tmp145);
        tmp569 = simd_not(basis_bits.bit_5);
        tmp570 = simd_or(simd_and(basis_bits.bit_4, tmp569), simd_andc(tmp88, basis_bits.bit_4));
        bytetest_a7_ab = simd_and(tmp85, tmp570);
        tmp571 = simd_and(tmp567, bytetest_a7_ab);
        struct_Mn.cc = simd_or(tmp571, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp532, tmp37);
        bytetest_91 = simd_and(tmp58, tmp95);
        bytetest_84 = simd_and(bytetest_80_8f, tmp145);
        tmp572 = simd_not(tmp78);
        tmp573 = simd_or(simd_and(basis_bits.bit_3, tmp572), simd_andc(tmp289, basis_bits.bit_3));
        bytetest_ad_b4 = simd_and(bytetest_a0_bf, tmp573);
        tmp574 = simd_and(tmp567, bytetest_ad_b4);
        struct_Mn.cc = simd_or(tmp574, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp532, tmp37);
        bytetest_91 = simd_and(tmp58, tmp95);
        bytetest_86 = simd_and(bytetest_80_8f, tmp33);
        bytetest_80_81 = simd_andc(bytetest_80_8f, tmp185);
        tmp575 = simd_and(tmp550, bytetest_86);
        carryQ.cq[98] = carryout2carry(pablo_blk_Advance(tmp575, carryQ.get_carry_in(98), tmp576));
        tmp577 = simd_and(tmp576, bytetest_80_81);
        struct_Mn.cc = simd_or(tmp577, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp532, tmp37);
        bytetest_91 = simd_and(tmp58, tmp95);
        bytetest_86 = simd_and(bytetest_80_8f, tmp33);
        tmp578 = simd_or(simd_and(basis_bits.bit_4, tmp256), simd_andc(tmp73, basis_bits.bit_4));
        bytetest_b6_be = simd_and(bytetest_b0_bf, tmp578);
        tmp579 = simd_and(tmp576, bytetest_b6_be);
        struct_Mn.cc = simd_or(tmp579, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp532, tmp37);
        bytetest_91 = simd_and(tmp58, tmp95);
        bytetest_9a = simd_and(tmp58, tmp149);
        bytetest_ab_ab = simd_and(tmp85, tmp70);
        tmp580 = simd_and(tmp550, bytetest_9a);
        carryQ.cq[99] = carryout2carry(pablo_blk_Advance(tmp580, carryQ.get_carry_in(99), tmp581));
        tmp582 = simd_and(tmp581, bytetest_ab_ab);
        struct_Mn.cc = simd_or(tmp582, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp532, tmp37);
        bytetest_91 = simd_and(tmp58, tmp95);
        bytetest_9a = simd_and(tmp58, tmp149);
        bytetest_ad_ad = simd_and(tmp85, tmp6);
        tmp583 = simd_and(tmp581, bytetest_ad_ad);
        struct_Mn.cc = simd_or(tmp583, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp532, tmp37);
        bytetest_91 = simd_and(tmp58, tmp95);
        bytetest_9a = simd_and(tmp58, tmp149);
        bytetest_b0_b5 = simd_andc(tmp307, tmp73);
        tmp584 = simd_and(tmp581, bytetest_b0_b5);
        struct_Mn.cc = simd_or(tmp584, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp532, tmp37);
        bytetest_91 = simd_and(tmp58, tmp95);
        bytetest_9a = simd_and(tmp58, tmp149);
        bytetest_b7_b7 = simd_and(bytetest_b0_bf, tmp46);
        tmp585 = simd_and(tmp581, bytetest_b7_b7);
        struct_Mn.cc = simd_or(tmp585, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp532, tmp37);
        bytetest_96 = simd_and(tmp58, tmp33);
        bytetest_be = simd_and(bytetest_b0_bf, tmp104);
        tmp586 = simd_or(tmp22, tmp27);
        tmp587 = simd_not(tmp586);
        tmp588 = simd_or(simd_and(basis_bits.bit_3, tmp587), simd_andc(tmp44, basis_bits.bit_3));
        bytetest_8f_92 = simd_and(tmp64, tmp588);
        tmp589 = simd_and(tmp534, bytetest_96);
        carryQ.cq[100] = carryout2carry(pablo_blk_Advance(tmp589, carryQ.get_carry_in(100), tmp590));
        tmp591 = simd_and(tmp590, bytetest_be);
        carryQ.cq[101] = carryout2carry(pablo_blk_Advance(tmp591, carryQ.get_carry_in(101), tmp592));
        tmp593 = simd_and(tmp592, bytetest_8f_92);
        struct_Mn.cc = simd_or(tmp593, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp532, tmp37);
        bytetest_9d = simd_and(tmp58, tmp6);
        bytetest_85 = simd_and(bytetest_80_8f, tmp152);
        tmp594 = simd_or(simd_and(basis_bits.bit_4, tmp119), simd_andc(tmp88, basis_bits.bit_4));
        bytetest_a7_a9 = simd_and(tmp85, tmp594);
        tmp595 = simd_and(tmp534, bytetest_9d);
        carryQ.cq[102] = carryout2carry(pablo_blk_Advance(tmp595, carryQ.get_carry_in(102), tmp596));
        tmp597 = simd_and(tmp596, bytetest_85);
        carryQ.cq[103] = carryout2carry(pablo_blk_Advance(tmp597, carryQ.get_carry_in(103), tmp598));
        tmp599 = simd_and(tmp598, bytetest_a7_a9);
        struct_Mn.cc = simd_or(tmp599, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp532, tmp37);
        bytetest_9d = simd_and(tmp58, tmp6);
        bytetest_86 = simd_and(bytetest_80_8f, tmp33);
        bytetest_80_82 = simd_andc(tmp540, tmp27);
        tmp600 = simd_and(tmp596, bytetest_86);
        carryQ.cq[104] = carryout2carry(pablo_blk_Advance(tmp600, carryQ.get_carry_in(104), tmp601));
        tmp602 = simd_and(tmp601, bytetest_80_82);
        bytetest_85 = simd_and(bytetest_80_8f, tmp152);
        bytetest_bb_bf = simd_and(bytetest_b8_bf, tmp28);
        tmp603 = simd_and(tmp598, bytetest_bb_bf);
        tmp604 = simd_or(tmp603, tmp602);
        struct_Mn.cc = simd_or(tmp604, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp532, tmp37);
        bytetest_9d = simd_and(tmp58, tmp6);
        bytetest_86 = simd_and(bytetest_80_8f, tmp33);
        tmp605 = simd_or(simd_and(basis_bits.bit_4, tmp569), simd_andc(tmp71, basis_bits.bit_4));
        bytetest_85_8b = simd_and(bytetest_80_8f, tmp605);
        tmp606 = simd_and(tmp601, bytetest_85_8b);
        struct_Mn.cc = simd_or(tmp606, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp532, tmp37);
        bytetest_9d = simd_and(tmp58, tmp6);
        bytetest_86 = simd_and(bytetest_80_8f, tmp33);
        bytetest_aa_ad = simd_and(tmp91, tmp93);
        tmp607 = simd_and(tmp601, bytetest_aa_ad);
        struct_Mn.cc = simd_or(tmp607, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp532, tmp37);
        bytetest_9d = simd_and(tmp58, tmp6);
        bytetest_89 = simd_and(bytetest_80_8f, tmp63);
        bytetest_82_84 = simd_and(tmp554, tmp247);
        tmp608 = simd_and(tmp596, bytetest_89);
        carryQ.cq[105] = carryout2carry(pablo_blk_Advance(tmp608, carryQ.get_carry_in(105), tmp609));
        tmp610 = simd_and(tmp609, bytetest_82_84);
        struct_Mn.cc = simd_or(tmp610, struct_Mn.cc);
        bytetest_f3 = simd_and(tmp532, tmp139);
        bytetest_a0 = simd_andc(tmp85, tmp37);
        bytetest_87 = simd_and(bytetest_80_8f, tmp46);
        bytetest_80_af = simd_andc(bytetest_80_bf, tmp8);
        tmp611 = simd_and(tmp10, bytetest_f3);
        carryQ.cq[106] = carryout2carry(pablo_blk_Advance(tmp611, carryQ.get_carry_in(106), tmp612));
        tmp613 = simd_and(tmp612, bytetest_a0);
        carryQ.cq[107] = carryout2carry(pablo_blk_Advance(tmp613, carryQ.get_carry_in(107), tmp614));
        tmp615 = simd_and(tmp614, bytetest_87);
        carryQ.cq[108] = carryout2carry(pablo_blk_Advance(tmp615, carryQ.get_carry_in(108), tmp616));
        tmp617 = simd_and(tmp616, bytetest_80_af);
        bytetest_84_86 = simd_andc(tmp544, tmp27);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp618 = simd_and(tmp614, bytetest_84_86);
        carryQ.cq[109] = carryout2carry(pablo_blk_Advance(tmp618, carryQ.get_carry_in(109), tmp619));
        tmp620 = simd_and(tmp619, bytetest_80_bf);
        tmp621 = simd_or(tmp620, tmp617);
        struct_Mn.cc = simd_or(tmp621, struct_Mn.cc);
        carryQ.CarryQ_Adjust(110);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Mn & struct_Mn, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_cd, tmp7, tmp8;
		BitBlock bytetest_80_af, tmp9, tmp10, tmp11, tmp12, tmp13, tmp14, tmp15;
		BitBlock bytetest_cc, bytetest_80_bf, tmp16, tmp17, tmp18, tmp19, tmp20, tmp21;
		BitBlock tmp22, tmp23, tmp24, bytetest_d2, tmp25, tmp26, tmp27, tmp28;
		BitBlock bytetest_83_87, tmp29, tmp30, tmp31, tmp32, tmp33, bytetest_d6, tmp34;
		BitBlock tmp35, tmp36, tmp37, tmp38, tmp39, bytetest_91_bd, tmp40, tmp41;
		BitBlock tmp42, tmp43, tmp44, bytetest_bf_bf, tmp45, tmp46, bytetest_d7, tmp47;
		BitBlock tmp48, tmp49, bytetest_81_82, tmp50, tmp51, tmp52, tmp53;
		BitBlock bytetest_84_85, tmp54, bytetest_87_87, tmp55, tmp56, tmp57;
		BitBlock bytetest_d8, tmp58, tmp59, bytetest_90_9a, tmp60, tmp61, tmp62, tmp63;
		BitBlock bytetest_d9, tmp64, tmp65, bytetest_8b_9f, tmp66, tmp67, tmp68;
		BitBlock bytetest_b0_b0, tmp69, tmp70, bytetest_db, tmp71, tmp72, tmp73, tmp74;
		BitBlock bytetest_96_9c, tmp75, tmp76, tmp77, tmp78, tmp79, tmp80, tmp81;
		BitBlock tmp82, bytetest_9f_a4, tmp83, tmp84, tmp85, tmp86, tmp87, tmp88;
		BitBlock tmp89, bytetest_a7_a8, tmp90, tmp91, tmp92, tmp93, bytetest_aa_ad;
		BitBlock tmp94, bytetest_dc, tmp95, bytetest_91_91, tmp96, tmp97, tmp98;
		BitBlock bytetest_dd, bytetest_80_8a, tmp99, tmp100, tmp101, bytetest_b0_bf;
		BitBlock tmp102, tmp103, tmp104, bytetest_de, tmp105, tmp106, tmp107, tmp108;
		BitBlock bytetest_a6_b0, tmp109, tmp110, tmp111, bytetest_df, tmp112, tmp113;
		BitBlock bytetest_ab_b3, tmp114, tmp115, tmp116, tmp117, bytetest_e0;
		BitBlock bytetest_a0, tmp118, tmp119, tmp120, bytetest_96_99, tmp121, tmp122;
		BitBlock tmp123, tmp124, tmp125, tmp126, tmp127, tmp128, tmp129;
		BitBlock bytetest_9b_a3, tmp130, tmp131, bytetest_a5_a7, tmp132, tmp133;
		BitBlock bytetest_a9_ad, tmp134, bytetest_a1, tmp135, bytetest_99_9b, tmp136;
		BitBlock tmp137, tmp138, tmp139, bytetest_a3, tmp140, tmp141, bytetest_a4_be;
		BitBlock tmp142, tmp143, tmp144, tmp145, bytetest_a4, bytetest_80_82, tmp146;
		BitBlock tmp147, tmp148, tmp149, bytetest_ba_ba, tmp150, bytetest_bc_bc;
		BitBlock tmp151, tmp152, bytetest_a5, tmp153, bytetest_81_88, tmp154, tmp155;
		BitBlock tmp156, bytetest_8d_8d, tmp157, tmp158, bytetest_91_97, tmp159;
		BitBlock tmp160, bytetest_a2_a3, tmp161, bytetest_a6, bytetest_81_81, tmp162;
		BitBlock tmp163, tmp164, tmp165, bytetest_a7, tmp166, tmp167, bytetest_81_84;
		BitBlock tmp168, tmp169, tmp170, tmp171, tmp172, bytetest_a8, tmp173, tmp174;
		BitBlock tmp175, tmp176, bytetest_a9, tmp177, tmp178, tmp179, bytetest_87_88;
		BitBlock tmp180, tmp181, tmp182, bytetest_8b_8d, tmp183, tmp184, tmp185;
		BitBlock bytetest_b0_b1, tmp186, bytetest_b5_b5, tmp187, bytetest_aa, tmp188;
		BitBlock tmp189, tmp190, tmp191, bytetest_ab, bytetest_81_85, tmp192, tmp193;
		BitBlock tmp194, tmp195, tmp196, tmp197, bytetest_ac, tmp198, tmp199, tmp200;
		BitBlock tmp201, tmp202, bytetest_ad, tmp203, tmp204, tmp205, tmp206;
		BitBlock bytetest_96_96, tmp207, tmp208, bytetest_ae, bytetest_82_82, tmp209;
		BitBlock tmp210, tmp211, bytetest_af, bytetest_80_80, tmp212, tmp213, tmp214;
		BitBlock tmp215, bytetest_b1, tmp216, tmp217, tmp218, bytetest_b0;
		BitBlock bytetest_be_bf, tmp219, tmp220, tmp221, tmp222, tmp223;
		BitBlock bytetest_86_88, tmp224, bytetest_8a_8d, tmp225, tmp226;
		BitBlock bytetest_95_96, tmp227, tmp228, bytetest_b2, tmp229, tmp230, tmp231;
		BitBlock tmp232, bytetest_b3, bytetest_86_86, tmp233, tmp234, tmp235, tmp236;
		BitBlock bytetest_8c_8d, tmp237, tmp238, bytetest_b5, tmp239, tmp240, tmp241;
		BitBlock tmp242, tmp243, bytetest_b7, bytetest_8a_8a, tmp244, tmp245, tmp246;
		BitBlock tmp247, bytetest_92_94, tmp248, tmp249, bytetest_b8, bytetest_b1_b1;
		BitBlock tmp250, tmp251, tmp252, tmp253, tmp254, bytetest_b4_ba, tmp255;
		BitBlock bytetest_b9, tmp256, tmp257, bytetest_87_8e, tmp258, tmp259, tmp260;
		BitBlock bytetest_ba, tmp261, tmp262, tmp263, tmp264, bytetest_b4_b9, tmp265;
		BitBlock tmp266, tmp267, bytetest_bb_bc, tmp268, bytetest_bb, bytetest_88_8d;
		BitBlock tmp269, tmp270, tmp271, bytetest_bc, tmp272, bytetest_98_99, tmp273;
		BitBlock tmp274, tmp275, tmp276, bytetest_b7_b7, tmp277, bytetest_b9_b9;
		BitBlock tmp278, bytetest_bd, tmp279, bytetest_b1_be, tmp280, tmp281, tmp282;
		BitBlock bytetest_be, bytetest_80_84, tmp283, tmp284, tmp285, tmp286;
		BitBlock bytetest_86_87, tmp287, tmp288, tmp289, tmp290, bytetest_8d_97;
		BitBlock tmp291, tmp292, tmp293, tmp294, tmp295, tmp296, bytetest_99_bc;
		BitBlock tmp297, bytetest_bf, tmp298, tmp299, tmp300, bytetest_e1, bytetest_80;
		BitBlock tmp301, bytetest_ad_b0, tmp302, tmp303, tmp304, tmp305, tmp306;
		BitBlock tmp307, bytetest_b2_b7, tmp308, tmp309, bytetest_b9_ba, tmp310;
		BitBlock tmp311, bytetest_bd_be, tmp312, bytetest_81, tmp313, tmp314, tmp315;
		BitBlock tmp316, tmp317, tmp318, bytetest_9e_a0, tmp319, bytetest_b1_b4;
		BitBlock tmp320, bytetest_82, tmp321, tmp322, tmp323, tmp324, bytetest_85_86;
		BitBlock tmp325, tmp326, bytetest_9d_9d, tmp327, bytetest_8d, tmp328;
		BitBlock bytetest_9d_9f, tmp329, tmp330, tmp331, bytetest_9c, tmp332, tmp333;
		BitBlock tmp334, bytetest_b2_b4, tmp335, bytetest_9d, bytetest_92_93, tmp336;
		BitBlock tmp337, tmp338, bytetest_b2_b3, tmp339, bytetest_9e, bytetest_b4_b5;
		BitBlock tmp340, tmp341, tmp342, tmp343, tmp344, bytetest_b7_bd, tmp345;
		BitBlock bytetest_9f, tmp346, tmp347, tmp348, tmp349, bytetest_89_93, tmp350;
		BitBlock tmp351, tmp352, tmp353, tmp354, bytetest_a2, bytetest_a9_a9, tmp355;
		BitBlock tmp356, tmp357, tmp358, bytetest_a0_a2, tmp359, tmp360, tmp361;
		BitBlock tmp362, bytetest_b2_b2, tmp363, bytetest_b9_bb, tmp364;
		BitBlock bytetest_97_98, tmp365, tmp366, tmp367, bytetest_9b_9b, tmp368;
		BitBlock tmp369, tmp370, tmp371, tmp372, bytetest_98_9e, tmp373;
		BitBlock bytetest_a0_a0, tmp374, bytetest_a2_a2, tmp375, tmp376;
		BitBlock bytetest_a5_ac, tmp377, tmp378, bytetest_b3_bc, tmp379, tmp380;
		BitBlock bytetest_80_83, tmp381, tmp382, tmp383, bytetest_b4_b4, tmp384;
		BitBlock tmp385, bytetest_b6_ba, tmp386, tmp387, tmp388, tmp389, tmp390;
		BitBlock tmp391, bytetest_80_81, tmp392, tmp393, tmp394, tmp395;
		BitBlock bytetest_a2_a5, tmp396, bytetest_a8_a9, tmp397, bytetest_ab_ab;
		BitBlock tmp398, bytetest_a6_a6, tmp399, tmp400, tmp401, tmp402;
		BitBlock bytetest_ad_ad, tmp403, tmp404, tmp405, bytetest_af_b1, tmp406;
		BitBlock tmp407, bytetest_ac_b3, tmp408, tmp409, tmp410, bytetest_b6_b7;
		BitBlock tmp411, tmp412, bytetest_90_92, tmp413, tmp414, tmp415, tmp416;
		BitBlock tmp417, bytetest_94_a0, tmp418, tmp419, bytetest_a2_a8, tmp420;
		BitBlock tmp421, tmp422, tmp423, tmp424, tmp425, bytetest_80_a6, tmp426;
		BitBlock tmp427, tmp428, bytetest_bc_bf, tmp429, bytetest_e2, bytetest_83;
		BitBlock tmp430, bytetest_90_9c, tmp431, tmp432, tmp433, tmp434, tmp435;
		BitBlock bytetest_a1_a1, tmp436, tmp437, bytetest_a5_b0, tmp438, tmp439;
		BitBlock tmp440, tmp441, tmp442, tmp443, tmp444, bytetest_a0_bf, tmp445;
		BitBlock tmp446, tmp447, bytetest_e3, tmp448, tmp449, tmp450, tmp451, tmp452;
		BitBlock bytetest_99_9a, tmp453, tmp454, tmp455, bytetest_ea, bytetest_99;
		BitBlock bytetest_af_af, tmp456, tmp457, tmp458, tmp459, tmp460, tmp461;
		BitBlock bytetest_b4_bd, tmp462, bytetest_9a, bytetest_9f_9f, tmp463, tmp464;
		BitBlock tmp465, bytetest_9b, tmp466, tmp467, tmp468, tmp469, tmp470, tmp471;
		BitBlock tmp472, bytetest_8b_8b, tmp473, bytetest_a5_a6, tmp474;
		BitBlock bytetest_84_84, tmp475, tmp476, tmp477, tmp478, bytetest_a0_b1;
		BitBlock tmp479, tmp480, bytetest_a6_ad, tmp481, tmp482, tmp483, tmp484;
		BitBlock bytetest_87_91, tmp485, tmp486, tmp487, tmp488, tmp489, tmp490;
		BitBlock bytetest_b3_b3, tmp491, bytetest_b6_b9, tmp492, tmp493, tmp494;
		BitBlock tmp495, bytetest_a9_ae, tmp496, tmp497, tmp498, tmp499;
		BitBlock bytetest_b1_b2, tmp500, tmp501, bytetest_b5_b6, tmp502;
		BitBlock bytetest_83_83, tmp503, tmp504, tmp505, bytetest_8c_8c, tmp506;
		BitBlock tmp507, tmp508, tmp509, tmp510, bytetest_b7_b8, tmp511, tmp512;
		BitBlock tmp513, tmp514, tmp515, bytetest_ac_ad, tmp516, bytetest_b6_b6;
		BitBlock tmp517, bytetest_a5_a5, tmp518, tmp519, tmp520, bytetest_a8_a8;
		BitBlock tmp521, tmp522, bytetest_ef, bytetest_9e_9e, tmp523, tmp524, tmp525;
		BitBlock tmp526, tmp527, bytetest_80_8f, tmp528, tmp529, tmp530;
		BitBlock bytetest_a0_a6, tmp531, tmp532, bytetest_f0, bytetest_90, bytetest_87;
		BitBlock bytetest_bd_bd, tmp533, tmp534, tmp535, tmp536, tmp537, tmp538;
		BitBlock tmp539, tmp540, bytetest_81_83, tmp541, tmp542, tmp543, tmp544;
		BitBlock tmp545, bytetest_8c_8f, tmp546, bytetest_b8_ba, tmp547, tmp548;
		BitBlock bytetest_91, tmp549, tmp550, tmp551, tmp552, tmp553, tmp554;
		BitBlock bytetest_80_86, tmp555, tmp556, tmp557, bytetest_b8_bf, tmp558;
		BitBlock tmp559, tmp560, tmp561, tmp562, tmp563, bytetest_b3_b6, tmp564;
		BitBlock tmp565, bytetest_84, tmp566, tmp567, tmp568, tmp569, tmp570;
		BitBlock bytetest_a7_ab, tmp571, tmp572, tmp573, bytetest_ad_b4, tmp574;
		BitBlock bytetest_86, tmp575, tmp576, tmp577, tmp578, bytetest_b6_be, tmp579;
		BitBlock tmp580, tmp581, tmp582, tmp583, bytetest_b0_b5, tmp584, tmp585;
		BitBlock bytetest_96, tmp586, tmp587, tmp588, bytetest_8f_92, tmp589, tmp590;
		BitBlock tmp591, tmp592, tmp593, bytetest_85, tmp594, bytetest_a7_a9, tmp595;
		BitBlock tmp596, tmp597, tmp598, tmp599, tmp600, tmp601, tmp602;
		BitBlock bytetest_bb_bf, tmp603, tmp604, tmp605, bytetest_85_8b, tmp606;
		BitBlock tmp607, bytetest_89, bytetest_82_84, tmp608, tmp609, tmp610;
		BitBlock bytetest_f3, tmp611, tmp612, tmp613, tmp614, tmp615, tmp616, tmp617;
		BitBlock bytetest_84_86, tmp618, tmp619, tmp620, tmp621;




        struct_Mn.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp1, tmp2);
        tmp4 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp6 = simd_and(tmp4, tmp5);
        bytetest_cd = simd_and(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        bytetest_80_af = simd_andc(tmp7, tmp8);
        tmp9 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp9, carryQ.get_carry_in(0), tmp10));
        tmp11 = simd_and(tmp10, bytetest_cd);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp11, carryQ.get_carry_in(1), tmp12));
        tmp13 = simd_and(tmp12, bytetest_80_af);
        tmp14 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp15 = simd_andc(tmp4, tmp14);
        bytetest_cc = simd_and(tmp3, tmp15);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp16 = simd_and(tmp10, bytetest_cc);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp16, carryQ.get_carry_in(2), tmp17));
        tmp18 = simd_and(tmp17, bytetest_80_bf);
        tmp19 = simd_or(tmp18, tmp13);
        struct_Mn.cc = simd_or(tmp19, struct_Mn.cc);
        tmp20 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp21 = simd_and(tmp1, tmp20);
        tmp22 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp23 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp24 = simd_andc(tmp23, tmp22);
        bytetest_d2 = simd_and(tmp21, tmp24);
        tmp25 = simd_andc(bytetest_80_bf, tmp2);
        tmp26 = simd_andc(tmp25, basis_bits.bit_4);
        tmp27 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp28 = simd_or(basis_bits.bit_5, tmp27);
        bytetest_83_87 = simd_and(tmp26, tmp28);
        tmp29 = simd_and(tmp10, bytetest_d2);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp29, carryQ.get_carry_in(3), tmp30));
        tmp31 = simd_and(tmp30, bytetest_83_87);
        struct_Mn.cc = simd_or(tmp31, struct_Mn.cc);
        tmp32 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp33 = simd_and(tmp32, tmp23);
        bytetest_d6 = simd_and(tmp21, tmp33);
        tmp34 = simd_and(tmp4, basis_bits.bit_6);
        tmp35 = simd_and(basis_bits.bit_3, tmp34);
        tmp36 = simd_not(tmp35);
        tmp37 = simd_or(tmp22, tmp14);
        tmp38 = simd_and(basis_bits.bit_3, tmp37);
        tmp39 = simd_or(simd_and(basis_bits.bit_2, tmp36), simd_andc(tmp38, basis_bits.bit_2));
        bytetest_91_bd = simd_and(bytetest_80_bf, tmp39);
        tmp40 = simd_and(tmp10, bytetest_d6);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp40, carryQ.get_carry_in(4), tmp41));
        tmp42 = simd_and(tmp41, bytetest_91_bd);
        struct_Mn.cc = simd_or(tmp42, struct_Mn.cc);
        bytetest_d6 = simd_and(tmp21, tmp33);
        tmp43 = simd_and(bytetest_80_bf, tmp8);
        tmp44 = simd_and(tmp4, tmp27);
        bytetest_bf_bf = simd_and(tmp43, tmp44);
        tmp45 = simd_and(tmp41, bytetest_bf_bf);
        struct_Mn.cc = simd_or(tmp45, struct_Mn.cc);
        tmp46 = simd_and(tmp32, tmp27);
        bytetest_d7 = simd_and(tmp21, tmp46);
        tmp47 = simd_andc(tmp25, tmp22);
        tmp48 = simd_not(basis_bits.bit_7);
        tmp49 = simd_or(simd_and(basis_bits.bit_6, tmp48), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
        bytetest_81_82 = simd_and(tmp47, tmp49);
        tmp50 = simd_and(tmp10, bytetest_d7);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp50, carryQ.get_carry_in(5), tmp51));
        tmp52 = simd_and(tmp51, bytetest_81_82);
        struct_Mn.cc = simd_or(tmp52, struct_Mn.cc);
        bytetest_d7 = simd_and(tmp21, tmp46);
        tmp53 = simd_andc(tmp32, basis_bits.bit_6);
        bytetest_84_85 = simd_and(tmp25, tmp53);
        tmp54 = simd_and(tmp51, bytetest_84_85);
        struct_Mn.cc = simd_or(tmp54, struct_Mn.cc);
        bytetest_d7 = simd_and(tmp21, tmp46);
        bytetest_87_87 = simd_and(tmp25, tmp46);
        tmp55 = simd_and(tmp51, bytetest_87_87);
        struct_Mn.cc = simd_or(tmp55, struct_Mn.cc);
        tmp56 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp57 = simd_andc(tmp56, tmp14);
        bytetest_d8 = simd_and(tmp21, tmp57);
        tmp58 = simd_and(bytetest_80_bf, tmp20);
        tmp59 = simd_and(basis_bits.bit_4, tmp28);
        bytetest_90_9a = simd_andc(tmp58, tmp59);
        tmp60 = simd_and(tmp10, bytetest_d8);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp60, carryQ.get_carry_in(6), tmp61));
        tmp62 = simd_and(tmp61, bytetest_90_9a);
        struct_Mn.cc = simd_or(tmp62, struct_Mn.cc);
        tmp63 = simd_and(tmp56, tmp5);
        bytetest_d9 = simd_and(tmp21, tmp63);
        tmp64 = simd_andc(bytetest_80_bf, basis_bits.bit_2);
        tmp65 = simd_or(basis_bits.bit_3, tmp59);
        bytetest_8b_9f = simd_and(tmp64, tmp65);
        tmp66 = simd_and(tmp10, bytetest_d9);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp66, carryQ.get_carry_in(7), tmp67));
        tmp68 = simd_and(tmp67, bytetest_8b_9f);
        struct_Mn.cc = simd_or(tmp68, struct_Mn.cc);
        bytetest_d9 = simd_and(tmp21, tmp63);
        bytetest_b0_b0 = simd_andc(tmp43, tmp37);
        tmp69 = simd_and(tmp67, bytetest_b0_b0);
        struct_Mn.cc = simd_or(tmp69, struct_Mn.cc);
        tmp70 = simd_and(tmp56, tmp27);
        bytetest_db = simd_and(tmp21, tmp70);
        tmp71 = simd_and(basis_bits.bit_5, tmp14);
        tmp72 = simd_not(tmp71);
        tmp73 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp74 = simd_or(simd_and(basis_bits.bit_4, tmp72), simd_andc(tmp73, basis_bits.bit_4));
        bytetest_96_9c = simd_and(tmp58, tmp74);
        tmp75 = simd_and(tmp10, bytetest_db);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(tmp75, carryQ.get_carry_in(8), tmp76));
        tmp77 = simd_and(tmp76, bytetest_96_9c);
        struct_Mn.cc = simd_or(tmp77, struct_Mn.cc);
        bytetest_db = simd_and(tmp21, tmp70);
        tmp78 = simd_or(basis_bits.bit_4, tmp71);
        tmp79 = simd_or(basis_bits.bit_3, tmp78);
        tmp80 = simd_not(tmp79);
        tmp81 = simd_and(basis_bits.bit_3, tmp44);
        tmp82 = simd_or(simd_and(basis_bits.bit_2, tmp80), simd_andc(tmp81, basis_bits.bit_2));
        bytetest_9f_a4 = simd_and(bytetest_80_bf, tmp82);
        tmp83 = simd_and(tmp76, bytetest_9f_a4);
        struct_Mn.cc = simd_or(tmp83, struct_Mn.cc);
        bytetest_db = simd_and(tmp21, tmp70);
        tmp84 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp85 = simd_and(bytetest_80_bf, tmp84);
        tmp86 = simd_or(basis_bits.bit_5, tmp14);
        tmp87 = simd_not(tmp86);
        tmp88 = simd_and(basis_bits.bit_5, tmp27);
        tmp89 = simd_or(simd_and(basis_bits.bit_4, tmp87), simd_andc(tmp88, basis_bits.bit_4));
        bytetest_a7_a8 = simd_and(tmp85, tmp89);
        tmp90 = simd_and(tmp76, bytetest_a7_a8);
        struct_Mn.cc = simd_or(tmp90, struct_Mn.cc);
        bytetest_db = simd_and(tmp21, tmp70);
        tmp91 = simd_and(tmp85, basis_bits.bit_4);
        tmp92 = simd_not(basis_bits.bit_6);
        tmp93 = simd_or(simd_and(basis_bits.bit_5, tmp92), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        bytetest_aa_ad = simd_and(tmp91, tmp93);
        tmp94 = simd_and(tmp76, bytetest_aa_ad);
        struct_Mn.cc = simd_or(tmp94, struct_Mn.cc);
        bytetest_dc = simd_and(tmp21, tmp15);
        tmp95 = simd_andc(tmp5, tmp22);
        bytetest_91_91 = simd_and(tmp58, tmp95);
        tmp96 = simd_and(tmp10, bytetest_dc);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(tmp96, carryQ.get_carry_in(9), tmp97));
        tmp98 = simd_and(tmp97, bytetest_91_91);
        struct_Mn.cc = simd_or(tmp98, struct_Mn.cc);
        bytetest_dd = simd_and(tmp21, tmp6);
        bytetest_80_8a = simd_andc(tmp25, tmp59);
        tmp99 = simd_and(tmp10, bytetest_dd);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(tmp99, carryQ.get_carry_in(10), tmp100));
        tmp101 = simd_and(tmp100, bytetest_80_8a);
        bytetest_dc = simd_and(tmp21, tmp15);
        bytetest_b0_bf = simd_and(bytetest_80_bf, tmp8);
        tmp102 = simd_and(tmp97, bytetest_b0_bf);
        tmp103 = simd_or(tmp102, tmp101);
        struct_Mn.cc = simd_or(tmp103, struct_Mn.cc);
        tmp104 = simd_and(tmp4, tmp23);
        bytetest_de = simd_and(tmp21, tmp104);
        tmp105 = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp106 = simd_not(tmp37);
        tmp107 = simd_or(basis_bits.bit_4, tmp73);
        tmp108 = simd_or(simd_and(basis_bits.bit_3, tmp106), simd_andc(tmp107, basis_bits.bit_3));
        bytetest_a6_b0 = simd_and(tmp105, tmp108);
        tmp109 = simd_and(tmp10, bytetest_de);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(tmp109, carryQ.get_carry_in(11), tmp110));
        tmp111 = simd_and(tmp110, bytetest_a6_b0);
        struct_Mn.cc = simd_or(tmp111, struct_Mn.cc);
        bytetest_df = simd_and(tmp21, tmp44);
        tmp112 = simd_not(tmp22);
        tmp113 = simd_or(simd_and(basis_bits.bit_3, tmp112), simd_andc(tmp59, basis_bits.bit_3));
        bytetest_ab_b3 = simd_and(tmp105, tmp113);
        tmp114 = simd_and(tmp10, bytetest_df);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(tmp114, carryQ.get_carry_in(12), tmp115));
        tmp116 = simd_and(tmp115, bytetest_ab_b3);
        struct_Mn.cc = simd_or(tmp116, struct_Mn.cc);
        tmp117 = simd_and(tmp1, tmp84);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_a0 = simd_andc(tmp85, tmp37);
        tmp118 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
        tmp119 = simd_not(tmp118);
        tmp120 = simd_or(simd_and(basis_bits.bit_4, tmp119), simd_andc(tmp73, basis_bits.bit_4));
        bytetest_96_99 = simd_and(tmp58, tmp120);
        tmp121 = simd_and(tmp10, bytetest_e0);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(tmp121, carryQ.get_carry_in(13), tmp122));
        tmp123 = simd_and(tmp122, bytetest_a0);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(tmp123, carryQ.get_carry_in(14), tmp124));
        tmp125 = simd_and(tmp124, bytetest_96_99);
        struct_Mn.cc = simd_or(tmp125, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_a0 = simd_andc(tmp85, tmp37);
        tmp126 = simd_or(basis_bits.bit_3, tmp22);
        tmp127 = simd_not(tmp126);
        tmp128 = simd_and(basis_bits.bit_3, tmp59);
        tmp129 = simd_or(simd_and(basis_bits.bit_2, tmp127), simd_andc(tmp128, basis_bits.bit_2));
        bytetest_9b_a3 = simd_and(bytetest_80_bf, tmp129);
        tmp130 = simd_and(tmp124, bytetest_9b_a3);
        struct_Mn.cc = simd_or(tmp130, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_a0 = simd_andc(tmp85, tmp37);
        tmp131 = simd_and(tmp85, tmp32);
        bytetest_a5_a7 = simd_and(tmp131, tmp14);
        tmp132 = simd_and(tmp124, bytetest_a5_a7);
        struct_Mn.cc = simd_or(tmp132, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_a0 = simd_andc(tmp85, tmp37);
        tmp133 = simd_or(simd_and(basis_bits.bit_5, tmp92), simd_andc(tmp14, basis_bits.bit_5));
        bytetest_a9_ad = simd_and(tmp91, tmp133);
        tmp134 = simd_and(tmp124, bytetest_a9_ad);
        struct_Mn.cc = simd_or(tmp134, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_a1 = simd_and(tmp85, tmp95);
        tmp135 = simd_and(tmp58, tmp56);
        bytetest_99_9b = simd_and(tmp135, tmp14);
        tmp136 = simd_and(tmp122, bytetest_a1);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(tmp136, carryQ.get_carry_in(15), tmp137));
        tmp138 = simd_and(tmp137, bytetest_99_9b);
        struct_Mn.cc = simd_or(tmp138, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        tmp139 = simd_andc(tmp27, tmp22);
        bytetest_a3 = simd_and(tmp85, tmp139);
        tmp140 = simd_not(tmp44);
        tmp141 = simd_or(simd_and(basis_bits.bit_3, tmp140), simd_andc(tmp22, basis_bits.bit_3));
        bytetest_a4_be = simd_and(tmp105, tmp141);
        tmp142 = simd_and(tmp122, bytetest_a3);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(tmp142, carryQ.get_carry_in(16), tmp143));
        tmp144 = simd_and(tmp143, bytetest_a4_be);
        struct_Mn.cc = simd_or(tmp144, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        tmp145 = simd_andc(tmp32, tmp14);
        bytetest_a4 = simd_and(tmp85, tmp145);
        bytetest_80_82 = simd_andc(tmp47, tmp27);
        tmp146 = simd_and(tmp122, bytetest_a4);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(tmp146, carryQ.get_carry_in(17), tmp147));
        tmp148 = simd_and(tmp147, bytetest_80_82);
        struct_Mn.cc = simd_or(tmp148, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_a4 = simd_and(tmp85, tmp145);
        tmp149 = simd_and(tmp56, tmp23);
        bytetest_ba_ba = simd_and(bytetest_b0_bf, tmp149);
        tmp150 = simd_and(tmp147, bytetest_ba_ba);
        struct_Mn.cc = simd_or(tmp150, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_a4 = simd_and(tmp85, tmp145);
        bytetest_bc_bc = simd_and(bytetest_b0_bf, tmp15);
        tmp151 = simd_and(tmp147, bytetest_bc_bc);
        struct_Mn.cc = simd_or(tmp151, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        tmp152 = simd_and(tmp32, tmp5);
        bytetest_a5 = simd_and(tmp85, tmp152);
        tmp153 = simd_or(simd_and(basis_bits.bit_4, tmp87), simd_andc(tmp86, basis_bits.bit_4));
        bytetest_81_88 = simd_and(tmp25, tmp153);
        tmp154 = simd_and(tmp122, bytetest_a5);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(tmp154, carryQ.get_carry_in(18), tmp155));
        tmp156 = simd_and(tmp155, bytetest_81_88);
        struct_Mn.cc = simd_or(tmp156, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_a5 = simd_and(tmp85, tmp152);
        bytetest_8d_8d = simd_and(tmp25, tmp6);
        tmp157 = simd_and(tmp155, bytetest_8d_8d);
        struct_Mn.cc = simd_or(tmp157, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_a5 = simd_and(tmp85, tmp152);
        tmp158 = simd_andc(tmp58, basis_bits.bit_4);
        bytetest_91_97 = simd_and(tmp158, tmp86);
        tmp159 = simd_and(tmp155, bytetest_91_97);
        struct_Mn.cc = simd_or(tmp159, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_a5 = simd_and(tmp85, tmp152);
        tmp160 = simd_andc(basis_bits.bit_6, tmp22);
        bytetest_a2_a3 = simd_and(tmp85, tmp160);
        tmp161 = simd_and(tmp155, bytetest_a2_a3);
        struct_Mn.cc = simd_or(tmp161, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_a6 = simd_and(tmp85, tmp33);
        bytetest_81_81 = simd_and(tmp25, tmp95);
        tmp162 = simd_and(tmp122, bytetest_a6);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(tmp162, carryQ.get_carry_in(19), tmp163));
        tmp164 = simd_and(tmp163, bytetest_81_81);
        struct_Mn.cc = simd_or(tmp164, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_a6 = simd_and(tmp85, tmp33);
        bytetest_bc_bc = simd_and(bytetest_b0_bf, tmp15);
        tmp165 = simd_and(tmp163, bytetest_bc_bc);
        struct_Mn.cc = simd_or(tmp165, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_a7 = simd_and(tmp85, tmp46);
        tmp166 = simd_not(tmp14);
        tmp167 = simd_or(simd_and(basis_bits.bit_5, tmp166), simd_andc(tmp14, basis_bits.bit_5));
        bytetest_81_84 = simd_and(tmp26, tmp167);
        tmp168 = simd_and(tmp122, bytetest_a7);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(tmp168, carryQ.get_carry_in(20), tmp169));
        tmp170 = simd_and(tmp169, bytetest_81_84);
        struct_Mn.cc = simd_or(tmp170, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_a7 = simd_and(tmp85, tmp46);
        bytetest_8d_8d = simd_and(tmp25, tmp6);
        tmp171 = simd_and(tmp169, bytetest_8d_8d);
        struct_Mn.cc = simd_or(tmp171, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_a7 = simd_and(tmp85, tmp46);
        bytetest_a2_a3 = simd_and(tmp85, tmp160);
        tmp172 = simd_and(tmp169, bytetest_a2_a3);
        struct_Mn.cc = simd_or(tmp172, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_a8 = simd_and(tmp85, tmp57);
        bytetest_81_82 = simd_and(tmp47, tmp49);
        tmp173 = simd_and(tmp122, bytetest_a8);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(tmp173, carryQ.get_carry_in(21), tmp174));
        tmp175 = simd_and(tmp174, bytetest_81_82);
        struct_Mn.cc = simd_or(tmp175, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_a8 = simd_and(tmp85, tmp57);
        bytetest_bc_bc = simd_and(bytetest_b0_bf, tmp15);
        tmp176 = simd_and(tmp174, bytetest_bc_bc);
        struct_Mn.cc = simd_or(tmp176, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_a9 = simd_and(tmp85, tmp63);
        bytetest_81_82 = simd_and(tmp47, tmp49);
        tmp177 = simd_and(tmp122, bytetest_a9);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(tmp177, carryQ.get_carry_in(22), tmp178));
        tmp179 = simd_and(tmp178, bytetest_81_82);
        struct_Mn.cc = simd_or(tmp179, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_a9 = simd_and(tmp85, tmp63);
        bytetest_87_88 = simd_and(tmp25, tmp89);
        tmp180 = simd_and(tmp178, bytetest_87_88);
        struct_Mn.cc = simd_or(tmp180, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_a9 = simd_and(tmp85, tmp63);
        tmp181 = simd_and(tmp25, basis_bits.bit_4);
        tmp182 = simd_or(simd_and(basis_bits.bit_5, tmp92), simd_andc(tmp27, basis_bits.bit_5));
        bytetest_8b_8d = simd_and(tmp181, tmp182);
        tmp183 = simd_and(tmp178, bytetest_8b_8d);
        struct_Mn.cc = simd_or(tmp183, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_a9 = simd_and(tmp85, tmp63);
        bytetest_91_91 = simd_and(tmp58, tmp95);
        tmp184 = simd_and(tmp178, bytetest_91_91);
        struct_Mn.cc = simd_or(tmp184, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_a9 = simd_and(tmp85, tmp63);
        tmp185 = simd_or(tmp22, basis_bits.bit_6);
        bytetest_b0_b1 = simd_andc(bytetest_b0_bf, tmp185);
        tmp186 = simd_and(tmp178, bytetest_b0_b1);
        struct_Mn.cc = simd_or(tmp186, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_a9 = simd_and(tmp85, tmp63);
        bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp152);
        tmp187 = simd_and(tmp178, bytetest_b5_b5);
        struct_Mn.cc = simd_or(tmp187, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_aa = simd_and(tmp85, tmp149);
        bytetest_81_82 = simd_and(tmp47, tmp49);
        tmp188 = simd_and(tmp122, bytetest_aa);
        carryQ.cq[23] = carryout2carry(pablo_blk_Advance(tmp188, carryQ.get_carry_in(23), tmp189));
        tmp190 = simd_and(tmp189, bytetest_81_82);
        struct_Mn.cc = simd_or(tmp190, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_aa = simd_and(tmp85, tmp149);
        bytetest_bc_bc = simd_and(bytetest_b0_bf, tmp15);
        tmp191 = simd_and(tmp189, bytetest_bc_bc);
        struct_Mn.cc = simd_or(tmp191, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_ab = simd_and(tmp85, tmp70);
        bytetest_81_85 = simd_and(tmp26, tmp133);
        tmp192 = simd_and(tmp122, bytetest_ab);
        carryQ.cq[24] = carryout2carry(pablo_blk_Advance(tmp192, carryQ.get_carry_in(24), tmp193));
        tmp194 = simd_and(tmp193, bytetest_81_85);
        struct_Mn.cc = simd_or(tmp194, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_ab = simd_and(tmp85, tmp70);
        bytetest_87_88 = simd_and(tmp25, tmp89);
        tmp195 = simd_and(tmp193, bytetest_87_88);
        struct_Mn.cc = simd_or(tmp195, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_ab = simd_and(tmp85, tmp70);
        bytetest_8d_8d = simd_and(tmp25, tmp6);
        tmp196 = simd_and(tmp193, bytetest_8d_8d);
        struct_Mn.cc = simd_or(tmp196, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_ab = simd_and(tmp85, tmp70);
        bytetest_a2_a3 = simd_and(tmp85, tmp160);
        tmp197 = simd_and(tmp193, bytetest_a2_a3);
        struct_Mn.cc = simd_or(tmp197, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_ac = simd_and(tmp85, tmp15);
        bytetest_81_81 = simd_and(tmp25, tmp95);
        tmp198 = simd_and(tmp122, bytetest_ac);
        carryQ.cq[25] = carryout2carry(pablo_blk_Advance(tmp198, carryQ.get_carry_in(25), tmp199));
        tmp200 = simd_and(tmp199, bytetest_81_81);
        struct_Mn.cc = simd_or(tmp200, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_ac = simd_and(tmp85, tmp15);
        bytetest_bc_bc = simd_and(bytetest_b0_bf, tmp15);
        tmp201 = simd_and(tmp199, bytetest_bc_bc);
        struct_Mn.cc = simd_or(tmp201, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_ac = simd_and(tmp85, tmp15);
        bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp44);
        tmp202 = simd_and(tmp199, bytetest_bf_bf);
        struct_Mn.cc = simd_or(tmp202, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_ad = simd_and(tmp85, tmp6);
        bytetest_81_84 = simd_and(tmp26, tmp167);
        tmp203 = simd_and(tmp122, bytetest_ad);
        carryQ.cq[26] = carryout2carry(pablo_blk_Advance(tmp203, carryQ.get_carry_in(26), tmp204));
        tmp205 = simd_and(tmp204, bytetest_81_84);
        struct_Mn.cc = simd_or(tmp205, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_ad = simd_and(tmp85, tmp6);
        bytetest_8d_8d = simd_and(tmp25, tmp6);
        tmp206 = simd_and(tmp204, bytetest_8d_8d);
        struct_Mn.cc = simd_or(tmp206, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_ad = simd_and(tmp85, tmp6);
        bytetest_96_96 = simd_and(tmp58, tmp33);
        tmp207 = simd_and(tmp204, bytetest_96_96);
        struct_Mn.cc = simd_or(tmp207, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_ad = simd_and(tmp85, tmp6);
        bytetest_a2_a3 = simd_and(tmp85, tmp160);
        tmp208 = simd_and(tmp204, bytetest_a2_a3);
        struct_Mn.cc = simd_or(tmp208, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_ae = simd_and(tmp85, tmp104);
        bytetest_82_82 = simd_and(tmp25, tmp24);
        tmp209 = simd_and(tmp122, bytetest_ae);
        carryQ.cq[27] = carryout2carry(pablo_blk_Advance(tmp209, carryQ.get_carry_in(27), tmp210));
        tmp211 = simd_and(tmp210, bytetest_82_82);
        struct_Mn.cc = simd_or(tmp211, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_af = simd_and(tmp85, tmp44);
        bytetest_80_80 = simd_andc(tmp25, tmp37);
        tmp212 = simd_and(tmp122, bytetest_af);
        carryQ.cq[28] = carryout2carry(pablo_blk_Advance(tmp212, carryQ.get_carry_in(28), tmp213));
        tmp214 = simd_and(tmp213, bytetest_80_80);
        struct_Mn.cc = simd_or(tmp214, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_af = simd_and(tmp85, tmp44);
        bytetest_8d_8d = simd_and(tmp25, tmp6);
        tmp215 = simd_and(tmp213, bytetest_8d_8d);
        struct_Mn.cc = simd_or(tmp215, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_b1 = simd_and(bytetest_b0_bf, tmp95);
        bytetest_80_80 = simd_andc(tmp25, tmp37);
        tmp216 = simd_and(tmp122, bytetest_b1);
        carryQ.cq[29] = carryout2carry(pablo_blk_Advance(tmp216, carryQ.get_carry_in(29), tmp217));
        tmp218 = simd_and(tmp217, bytetest_80_80);
        bytetest_b0 = simd_andc(bytetest_b0_bf, tmp37);
        bytetest_be_bf = simd_and(bytetest_b0_bf, tmp34);
        tmp219 = simd_and(tmp122, bytetest_b0);
        carryQ.cq[30] = carryout2carry(pablo_blk_Advance(tmp219, carryQ.get_carry_in(30), tmp220));
        tmp221 = simd_and(tmp220, bytetest_be_bf);
        tmp222 = simd_or(tmp221, tmp218);
        struct_Mn.cc = simd_or(tmp222, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_b1 = simd_and(bytetest_b0_bf, tmp95);
        tmp223 = simd_or(simd_and(basis_bits.bit_4, tmp87), simd_andc(tmp73, basis_bits.bit_4));
        bytetest_86_88 = simd_and(tmp25, tmp223);
        tmp224 = simd_and(tmp217, bytetest_86_88);
        struct_Mn.cc = simd_or(tmp224, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_b1 = simd_and(bytetest_b0_bf, tmp95);
        bytetest_8a_8d = simd_and(tmp181, tmp93);
        tmp225 = simd_and(tmp217, bytetest_8a_8d);
        struct_Mn.cc = simd_or(tmp225, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_b1 = simd_and(bytetest_b0_bf, tmp95);
        tmp226 = simd_and(tmp58, tmp32);
        bytetest_95_96 = simd_and(tmp226, tmp49);
        tmp227 = simd_and(tmp217, bytetest_95_96);
        struct_Mn.cc = simd_or(tmp227, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_b1 = simd_and(bytetest_b0_bf, tmp95);
        bytetest_a2_a3 = simd_and(tmp85, tmp160);
        tmp228 = simd_and(tmp217, bytetest_a2_a3);
        struct_Mn.cc = simd_or(tmp228, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp24);
        bytetest_bc_bc = simd_and(bytetest_b0_bf, tmp15);
        tmp229 = simd_and(tmp122, bytetest_b2);
        carryQ.cq[31] = carryout2carry(pablo_blk_Advance(tmp229, carryQ.get_carry_in(31), tmp230));
        tmp231 = simd_and(tmp230, bytetest_bc_bc);
        struct_Mn.cc = simd_or(tmp231, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_b2 = simd_and(bytetest_b0_bf, tmp24);
        bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp44);
        tmp232 = simd_and(tmp230, bytetest_bf_bf);
        struct_Mn.cc = simd_or(tmp232, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp139);
        bytetest_86_86 = simd_and(tmp25, tmp33);
        tmp233 = simd_and(tmp122, bytetest_b3);
        carryQ.cq[32] = carryout2carry(pablo_blk_Advance(tmp233, carryQ.get_carry_in(32), tmp234));
        tmp235 = simd_and(tmp234, bytetest_86_86);
        struct_Mn.cc = simd_or(tmp235, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp139);
        tmp236 = simd_andc(tmp4, basis_bits.bit_6);
        bytetest_8c_8d = simd_and(tmp25, tmp236);
        tmp237 = simd_and(tmp234, bytetest_8c_8d);
        struct_Mn.cc = simd_or(tmp237, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp139);
        bytetest_a2_a3 = simd_and(tmp85, tmp160);
        tmp238 = simd_and(tmp234, bytetest_a2_a3);
        struct_Mn.cc = simd_or(tmp238, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_b5 = simd_and(bytetest_b0_bf, tmp152);
        bytetest_81_84 = simd_and(tmp26, tmp167);
        tmp239 = simd_and(tmp122, bytetest_b5);
        carryQ.cq[33] = carryout2carry(pablo_blk_Advance(tmp239, carryQ.get_carry_in(33), tmp240));
        tmp241 = simd_and(tmp240, bytetest_81_84);
        struct_Mn.cc = simd_or(tmp241, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_b5 = simd_and(bytetest_b0_bf, tmp152);
        bytetest_8d_8d = simd_and(tmp25, tmp6);
        tmp242 = simd_and(tmp240, bytetest_8d_8d);
        struct_Mn.cc = simd_or(tmp242, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_b5 = simd_and(bytetest_b0_bf, tmp152);
        bytetest_a2_a3 = simd_and(tmp85, tmp160);
        tmp243 = simd_and(tmp240, bytetest_a2_a3);
        struct_Mn.cc = simd_or(tmp243, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_b7 = simd_and(bytetest_b0_bf, tmp46);
        bytetest_8a_8a = simd_and(tmp25, tmp149);
        tmp244 = simd_and(tmp122, bytetest_b7);
        carryQ.cq[34] = carryout2carry(pablo_blk_Advance(tmp244, carryQ.get_carry_in(34), tmp245));
        tmp246 = simd_and(tmp245, bytetest_8a_8a);
        struct_Mn.cc = simd_or(tmp246, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_b7 = simd_and(bytetest_b0_bf, tmp46);
        tmp247 = simd_or(simd_and(basis_bits.bit_5, tmp166), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        bytetest_92_94 = simd_and(tmp158, tmp247);
        tmp248 = simd_and(tmp245, bytetest_92_94);
        struct_Mn.cc = simd_or(tmp248, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_b7 = simd_and(bytetest_b0_bf, tmp46);
        bytetest_96_96 = simd_and(tmp58, tmp33);
        tmp249 = simd_and(tmp245, bytetest_96_96);
        struct_Mn.cc = simd_or(tmp249, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp57);
        bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp95);
        tmp250 = simd_and(tmp122, bytetest_b8);
        carryQ.cq[35] = carryout2carry(pablo_blk_Advance(tmp250, carryQ.get_carry_in(35), tmp251));
        tmp252 = simd_and(tmp251, bytetest_b1_b1);
        struct_Mn.cc = simd_or(tmp252, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp57);
        tmp253 = simd_not(tmp28);
        tmp254 = simd_or(simd_and(basis_bits.bit_4, tmp253), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
        bytetest_b4_ba = simd_and(bytetest_b0_bf, tmp254);
        tmp255 = simd_and(tmp251, bytetest_b4_ba);
        struct_Mn.cc = simd_or(tmp255, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp63);
        tmp256 = simd_not(tmp88);
        tmp257 = simd_or(simd_and(basis_bits.bit_4, tmp256), simd_andc(tmp88, basis_bits.bit_4));
        bytetest_87_8e = simd_and(tmp25, tmp257);
        tmp258 = simd_and(tmp122, bytetest_b9);
        carryQ.cq[36] = carryout2carry(pablo_blk_Advance(tmp258, carryQ.get_carry_in(36), tmp259));
        tmp260 = simd_and(tmp259, bytetest_87_8e);
        struct_Mn.cc = simd_or(tmp260, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp149);
        bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp95);
        tmp261 = simd_and(tmp122, bytetest_ba);
        carryQ.cq[37] = carryout2carry(pablo_blk_Advance(tmp261, carryQ.get_carry_in(37), tmp262));
        tmp263 = simd_and(tmp262, bytetest_b1_b1);
        struct_Mn.cc = simd_or(tmp263, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp149);
        tmp264 = simd_or(simd_and(basis_bits.bit_4, tmp119), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
        bytetest_b4_b9 = simd_and(bytetest_b0_bf, tmp264);
        tmp265 = simd_and(tmp262, bytetest_b4_b9);
        struct_Mn.cc = simd_or(tmp265, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp149);
        tmp266 = simd_and(bytetest_b0_bf, basis_bits.bit_4);
        tmp267 = simd_or(simd_and(basis_bits.bit_5, tmp166), simd_andc(tmp27, basis_bits.bit_5));
        bytetest_bb_bc = simd_and(tmp266, tmp267);
        tmp268 = simd_and(tmp262, bytetest_bb_bc);
        struct_Mn.cc = simd_or(tmp268, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp70);
        bytetest_88_8d = simd_andc(tmp181, tmp73);
        tmp269 = simd_and(tmp122, bytetest_bb);
        carryQ.cq[38] = carryout2carry(pablo_blk_Advance(tmp269, carryQ.get_carry_in(38), tmp270));
        tmp271 = simd_and(tmp270, bytetest_88_8d);
        struct_Mn.cc = simd_or(tmp271, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_bc = simd_and(bytetest_b0_bf, tmp15);
        tmp272 = simd_andc(tmp56, basis_bits.bit_6);
        bytetest_98_99 = simd_and(tmp58, tmp272);
        tmp273 = simd_and(tmp122, bytetest_bc);
        carryQ.cq[39] = carryout2carry(pablo_blk_Advance(tmp273, carryQ.get_carry_in(39), tmp274));
        tmp275 = simd_and(tmp274, bytetest_98_99);
        struct_Mn.cc = simd_or(tmp275, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_bc = simd_and(bytetest_b0_bf, tmp15);
        bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp152);
        tmp276 = simd_and(tmp274, bytetest_b5_b5);
        struct_Mn.cc = simd_or(tmp276, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_bc = simd_and(bytetest_b0_bf, tmp15);
        bytetest_b7_b7 = simd_and(bytetest_b0_bf, tmp46);
        tmp277 = simd_and(tmp274, bytetest_b7_b7);
        struct_Mn.cc = simd_or(tmp277, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_bc = simd_and(bytetest_b0_bf, tmp15);
        bytetest_b9_b9 = simd_and(bytetest_b0_bf, tmp63);
        tmp278 = simd_and(tmp274, bytetest_b9_b9);
        struct_Mn.cc = simd_or(tmp278, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_bd = simd_and(bytetest_b0_bf, tmp6);
        tmp279 = simd_or(simd_and(basis_bits.bit_4, tmp256), simd_andc(tmp86, basis_bits.bit_4));
        bytetest_b1_be = simd_and(bytetest_b0_bf, tmp279);
        tmp280 = simd_and(tmp122, bytetest_bd);
        carryQ.cq[40] = carryout2carry(pablo_blk_Advance(tmp280, carryQ.get_carry_in(40), tmp281));
        tmp282 = simd_and(tmp281, bytetest_b1_be);
        struct_Mn.cc = simd_or(tmp282, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_be = simd_and(bytetest_b0_bf, tmp104);
        bytetest_80_84 = simd_andc(tmp26, tmp71);
        tmp283 = simd_and(tmp122, bytetest_be);
        carryQ.cq[41] = carryout2carry(pablo_blk_Advance(tmp283, carryQ.get_carry_in(41), tmp284));
        tmp285 = simd_and(tmp284, bytetest_80_84);
        struct_Mn.cc = simd_or(tmp285, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_be = simd_and(bytetest_b0_bf, tmp104);
        tmp286 = simd_and(tmp32, basis_bits.bit_6);
        bytetest_86_87 = simd_and(tmp25, tmp286);
        tmp287 = simd_and(tmp284, bytetest_86_87);
        struct_Mn.cc = simd_or(tmp287, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_be = simd_and(bytetest_b0_bf, tmp104);
        tmp288 = simd_not(basis_bits.bit_4);
        tmp289 = simd_and(tmp4, tmp14);
        tmp290 = simd_or(simd_and(basis_bits.bit_3, tmp288), simd_andc(tmp289, basis_bits.bit_3));
        bytetest_8d_97 = simd_and(tmp64, tmp290);
        tmp291 = simd_and(tmp284, bytetest_8d_97);
        struct_Mn.cc = simd_or(tmp291, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_be = simd_and(bytetest_b0_bf, tmp104);
        tmp292 = simd_and(basis_bits.bit_3, tmp289);
        tmp293 = simd_not(tmp292);
        tmp294 = simd_and(basis_bits.bit_4, tmp86);
        tmp295 = simd_and(basis_bits.bit_3, tmp294);
        tmp296 = simd_or(simd_and(basis_bits.bit_2, tmp293), simd_andc(tmp295, basis_bits.bit_2));
        bytetest_99_bc = simd_and(bytetest_80_bf, tmp296);
        tmp297 = simd_and(tmp284, bytetest_99_bc);
        struct_Mn.cc = simd_or(tmp297, struct_Mn.cc);
        bytetest_e0 = simd_andc(tmp117, tmp37);
        bytetest_bf = simd_and(bytetest_b0_bf, tmp44);
        bytetest_86_86 = simd_and(tmp25, tmp33);
        tmp298 = simd_and(tmp122, bytetest_bf);
        carryQ.cq[42] = carryout2carry(pablo_blk_Advance(tmp298, carryQ.get_carry_in(42), tmp299));
        tmp300 = simd_and(tmp299, bytetest_86_86);
        struct_Mn.cc = simd_or(tmp300, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_80 = simd_andc(tmp25, tmp37);
        tmp301 = simd_or(simd_and(basis_bits.bit_3, tmp106), simd_andc(tmp289, basis_bits.bit_3));
        bytetest_ad_b0 = simd_and(tmp105, tmp301);
        tmp302 = simd_and(tmp10, bytetest_e1);
        carryQ.cq[43] = carryout2carry(pablo_blk_Advance(tmp302, carryQ.get_carry_in(43), tmp303));
        tmp304 = simd_and(tmp303, bytetest_80);
        carryQ.cq[44] = carryout2carry(pablo_blk_Advance(tmp304, carryQ.get_carry_in(44), tmp305));
        tmp306 = simd_and(tmp305, bytetest_ad_b0);
        struct_Mn.cc = simd_or(tmp306, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_80 = simd_andc(tmp25, tmp37);
        tmp307 = simd_andc(bytetest_b0_bf, basis_bits.bit_4);
        bytetest_b2_b7 = simd_and(tmp307, tmp118);
        tmp308 = simd_and(tmp305, bytetest_b2_b7);
        struct_Mn.cc = simd_or(tmp308, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_80 = simd_andc(tmp25, tmp37);
        tmp309 = simd_and(bytetest_b0_bf, tmp56);
        bytetest_b9_ba = simd_and(tmp309, tmp49);
        tmp310 = simd_and(tmp305, bytetest_b9_ba);
        struct_Mn.cc = simd_or(tmp310, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_80 = simd_andc(tmp25, tmp37);
        tmp311 = simd_and(bytetest_b0_bf, tmp4);
        bytetest_bd_be = simd_and(tmp311, tmp49);
        tmp312 = simd_and(tmp305, bytetest_bd_be);
        struct_Mn.cc = simd_or(tmp312, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_81 = simd_and(tmp25, tmp95);
        bytetest_98_99 = simd_and(tmp58, tmp272);
        tmp313 = simd_and(tmp303, bytetest_81);
        carryQ.cq[45] = carryout2carry(pablo_blk_Advance(tmp313, carryQ.get_carry_in(45), tmp314));
        tmp315 = simd_and(tmp314, bytetest_98_99);
        struct_Mn.cc = simd_or(tmp315, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_81 = simd_and(tmp25, tmp95);
        tmp316 = simd_or(basis_bits.bit_3, tmp37);
        tmp317 = simd_not(tmp316);
        tmp318 = simd_or(simd_and(basis_bits.bit_2, tmp317), simd_andc(tmp35, basis_bits.bit_2));
        bytetest_9e_a0 = simd_and(bytetest_80_bf, tmp318);
        tmp319 = simd_and(tmp314, bytetest_9e_a0);
        struct_Mn.cc = simd_or(tmp319, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_81 = simd_and(tmp25, tmp95);
        bytetest_b1_b4 = simd_and(tmp307, tmp167);
        tmp320 = simd_and(tmp314, bytetest_b1_b4);
        struct_Mn.cc = simd_or(tmp320, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_82 = simd_and(tmp25, tmp24);
        bytetest_82_82 = simd_and(tmp25, tmp24);
        tmp321 = simd_and(tmp303, bytetest_82);
        carryQ.cq[46] = carryout2carry(pablo_blk_Advance(tmp321, carryQ.get_carry_in(46), tmp322));
        tmp323 = simd_and(tmp322, bytetest_82_82);
        struct_Mn.cc = simd_or(tmp323, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_82 = simd_and(tmp25, tmp24);
        tmp324 = simd_and(tmp25, tmp32);
        bytetest_85_86 = simd_and(tmp324, tmp49);
        tmp325 = simd_and(tmp322, bytetest_85_86);
        struct_Mn.cc = simd_or(tmp325, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_82 = simd_and(tmp25, tmp24);
        bytetest_8d_8d = simd_and(tmp25, tmp6);
        tmp326 = simd_and(tmp322, bytetest_8d_8d);
        struct_Mn.cc = simd_or(tmp326, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_82 = simd_and(tmp25, tmp24);
        bytetest_9d_9d = simd_and(tmp58, tmp6);
        tmp327 = simd_and(tmp322, bytetest_9d_9d);
        struct_Mn.cc = simd_or(tmp327, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_8d = simd_and(tmp25, tmp6);
        tmp328 = simd_and(tmp58, tmp4);
        bytetest_9d_9f = simd_and(tmp328, tmp14);
        tmp329 = simd_and(tmp303, bytetest_8d);
        carryQ.cq[47] = carryout2carry(pablo_blk_Advance(tmp329, carryQ.get_carry_in(47), tmp330));
        tmp331 = simd_and(tmp330, bytetest_9d_9f);
        struct_Mn.cc = simd_or(tmp331, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_9c = simd_and(tmp58, tmp15);
        bytetest_92_94 = simd_and(tmp158, tmp247);
        tmp332 = simd_and(tmp303, bytetest_9c);
        carryQ.cq[48] = carryout2carry(pablo_blk_Advance(tmp332, carryQ.get_carry_in(48), tmp333));
        tmp334 = simd_and(tmp333, bytetest_92_94);
        struct_Mn.cc = simd_or(tmp334, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_9c = simd_and(tmp58, tmp15);
        bytetest_b2_b4 = simd_and(tmp307, tmp247);
        tmp335 = simd_and(tmp333, bytetest_b2_b4);
        struct_Mn.cc = simd_or(tmp335, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_9d = simd_and(tmp58, tmp6);
        bytetest_92_93 = simd_and(tmp58, tmp160);
        tmp336 = simd_and(tmp303, bytetest_9d);
        carryQ.cq[49] = carryout2carry(pablo_blk_Advance(tmp336, carryQ.get_carry_in(49), tmp337));
        tmp338 = simd_and(tmp337, bytetest_92_93);
        struct_Mn.cc = simd_or(tmp338, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_9d = simd_and(tmp58, tmp6);
        bytetest_b2_b3 = simd_and(bytetest_b0_bf, tmp160);
        tmp339 = simd_and(tmp337, bytetest_b2_b3);
        struct_Mn.cc = simd_or(tmp339, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_9e = simd_and(tmp58, tmp104);
        bytetest_b4_b5 = simd_and(bytetest_b0_bf, tmp53);
        tmp340 = simd_and(tmp303, bytetest_9e);
        carryQ.cq[50] = carryout2carry(pablo_blk_Advance(tmp340, carryQ.get_carry_in(50), tmp341));
        tmp342 = simd_and(tmp341, bytetest_b4_b5);
        struct_Mn.cc = simd_or(tmp342, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_9e = simd_and(tmp58, tmp104);
        tmp343 = simd_not(tmp73);
        tmp344 = simd_or(simd_and(basis_bits.bit_4, tmp343), simd_andc(tmp88, basis_bits.bit_4));
        bytetest_b7_bd = simd_and(bytetest_b0_bf, tmp344);
        tmp345 = simd_and(tmp341, bytetest_b7_bd);
        struct_Mn.cc = simd_or(tmp345, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_9f = simd_and(tmp58, tmp44);
        bytetest_86_86 = simd_and(tmp25, tmp33);
        tmp346 = simd_and(tmp303, bytetest_9f);
        carryQ.cq[51] = carryout2carry(pablo_blk_Advance(tmp346, carryQ.get_carry_in(51), tmp347));
        tmp348 = simd_and(tmp347, bytetest_86_86);
        struct_Mn.cc = simd_or(tmp348, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_9f = simd_and(tmp58, tmp44);
        tmp349 = simd_or(simd_and(basis_bits.bit_3, tmp112), simd_andc(tmp294, basis_bits.bit_3));
        bytetest_89_93 = simd_and(tmp64, tmp349);
        tmp350 = simd_and(tmp347, bytetest_89_93);
        struct_Mn.cc = simd_or(tmp350, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_9f = simd_and(tmp58, tmp44);
        bytetest_9d_9d = simd_and(tmp58, tmp6);
        tmp351 = simd_and(tmp347, bytetest_9d_9d);
        struct_Mn.cc = simd_or(tmp351, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_a0 = simd_andc(tmp85, tmp37);
        bytetest_8b_8d = simd_and(tmp181, tmp182);
        tmp352 = simd_and(tmp303, bytetest_a0);
        carryQ.cq[52] = carryout2carry(pablo_blk_Advance(tmp352, carryQ.get_carry_in(52), tmp353));
        tmp354 = simd_and(tmp353, bytetest_8b_8d);
        struct_Mn.cc = simd_or(tmp354, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_a2 = simd_and(tmp85, tmp24);
        bytetest_a9_a9 = simd_and(tmp85, tmp63);
        tmp355 = simd_and(tmp303, bytetest_a2);
        carryQ.cq[53] = carryout2carry(pablo_blk_Advance(tmp355, carryQ.get_carry_in(53), tmp356));
        tmp357 = simd_and(tmp356, bytetest_a9_a9);
        struct_Mn.cc = simd_or(tmp357, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_a4 = simd_and(tmp85, tmp145);
        tmp358 = simd_andc(tmp85, tmp22);
        bytetest_a0_a2 = simd_andc(tmp358, tmp27);
        tmp359 = simd_and(tmp303, bytetest_a4);
        carryQ.cq[54] = carryout2carry(pablo_blk_Advance(tmp359, carryQ.get_carry_in(54), tmp360));
        tmp361 = simd_and(tmp360, bytetest_a0_a2);
        struct_Mn.cc = simd_or(tmp361, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_a4 = simd_and(tmp85, tmp145);
        bytetest_a7_a8 = simd_and(tmp85, tmp89);
        tmp362 = simd_and(tmp360, bytetest_a7_a8);
        struct_Mn.cc = simd_or(tmp362, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_a4 = simd_and(tmp85, tmp145);
        bytetest_b2_b2 = simd_and(bytetest_b0_bf, tmp24);
        tmp363 = simd_and(tmp360, bytetest_b2_b2);
        struct_Mn.cc = simd_or(tmp363, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_a4 = simd_and(tmp85, tmp145);
        bytetest_b9_bb = simd_and(tmp309, tmp14);
        tmp364 = simd_and(tmp360, bytetest_b9_bb);
        struct_Mn.cc = simd_or(tmp364, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_a8 = simd_and(tmp85, tmp57);
        bytetest_97_98 = simd_and(tmp58, tmp89);
        tmp365 = simd_and(tmp303, bytetest_a8);
        carryQ.cq[55] = carryout2carry(pablo_blk_Advance(tmp365, carryQ.get_carry_in(55), tmp366));
        tmp367 = simd_and(tmp366, bytetest_97_98);
        struct_Mn.cc = simd_or(tmp367, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_a8 = simd_and(tmp85, tmp57);
        bytetest_9b_9b = simd_and(tmp58, tmp70);
        tmp368 = simd_and(tmp366, bytetest_9b_9b);
        struct_Mn.cc = simd_or(tmp368, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_a9 = simd_and(tmp85, tmp63);
        bytetest_96_96 = simd_and(tmp58, tmp33);
        tmp369 = simd_and(tmp303, bytetest_a9);
        carryQ.cq[56] = carryout2carry(pablo_blk_Advance(tmp369, carryQ.get_carry_in(56), tmp370));
        tmp371 = simd_and(tmp370, bytetest_96_96);
        struct_Mn.cc = simd_or(tmp371, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_a9 = simd_and(tmp85, tmp63);
        tmp372 = simd_and(tmp58, basis_bits.bit_4);
        bytetest_98_9e = simd_andc(tmp372, tmp88);
        tmp373 = simd_and(tmp370, bytetest_98_9e);
        struct_Mn.cc = simd_or(tmp373, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_a9 = simd_and(tmp85, tmp63);
        bytetest_a0_a0 = simd_andc(tmp85, tmp37);
        tmp374 = simd_and(tmp370, bytetest_a0_a0);
        struct_Mn.cc = simd_or(tmp374, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_a9 = simd_and(tmp85, tmp63);
        bytetest_a2_a2 = simd_and(tmp85, tmp24);
        tmp375 = simd_and(tmp370, bytetest_a2_a2);
        struct_Mn.cc = simd_or(tmp375, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_a9 = simd_and(tmp85, tmp63);
        tmp376 = simd_or(simd_and(basis_bits.bit_4, tmp72), simd_andc(tmp71, basis_bits.bit_4));
        bytetest_a5_ac = simd_and(tmp85, tmp376);
        tmp377 = simd_and(tmp370, bytetest_a5_ac);
        struct_Mn.cc = simd_or(tmp377, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_a9 = simd_and(tmp85, tmp63);
        tmp378 = simd_or(simd_and(basis_bits.bit_4, tmp72), simd_andc(tmp28, basis_bits.bit_4));
        bytetest_b3_bc = simd_and(bytetest_b0_bf, tmp378);
        tmp379 = simd_and(tmp370, bytetest_b3_bc);
        struct_Mn.cc = simd_or(tmp379, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_a9 = simd_and(tmp85, tmp63);
        bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp44);
        tmp380 = simd_and(tmp370, bytetest_bf_bf);
        struct_Mn.cc = simd_or(tmp380, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_ac = simd_and(tmp85, tmp15);
        bytetest_80_83 = simd_andc(tmp25, tmp22);
        tmp381 = simd_and(tmp303, bytetest_ac);
        carryQ.cq[57] = carryout2carry(pablo_blk_Advance(tmp381, carryQ.get_carry_in(57), tmp382));
        tmp383 = simd_and(tmp382, bytetest_80_83);
        struct_Mn.cc = simd_or(tmp383, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_ac = simd_and(tmp85, tmp15);
        bytetest_b4_b4 = simd_and(bytetest_b0_bf, tmp145);
        tmp384 = simd_and(tmp382, bytetest_b4_b4);
        struct_Mn.cc = simd_or(tmp384, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_ac = simd_and(tmp85, tmp15);
        tmp385 = simd_or(simd_and(basis_bits.bit_4, tmp253), simd_andc(tmp73, basis_bits.bit_4));
        bytetest_b6_ba = simd_and(bytetest_b0_bf, tmp385);
        tmp386 = simd_and(tmp382, bytetest_b6_ba);
        struct_Mn.cc = simd_or(tmp386, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_ac = simd_and(tmp85, tmp15);
        bytetest_bc_bc = simd_and(bytetest_b0_bf, tmp15);
        tmp387 = simd_and(tmp382, bytetest_bc_bc);
        struct_Mn.cc = simd_or(tmp387, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_ad = simd_and(tmp85, tmp6);
        bytetest_82_82 = simd_and(tmp25, tmp24);
        tmp388 = simd_and(tmp303, bytetest_ad);
        carryQ.cq[58] = carryout2carry(pablo_blk_Advance(tmp388, carryQ.get_carry_in(58), tmp389));
        tmp390 = simd_and(tmp389, bytetest_82_82);
        struct_Mn.cc = simd_or(tmp390, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_ad = simd_and(tmp85, tmp6);
        bytetest_ab_b3 = simd_and(tmp105, tmp113);
        tmp391 = simd_and(tmp389, bytetest_ab_b3);
        struct_Mn.cc = simd_or(tmp391, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_ae = simd_and(tmp85, tmp104);
        bytetest_80_81 = simd_andc(tmp25, tmp185);
        tmp392 = simd_and(tmp303, bytetest_ae);
        carryQ.cq[59] = carryout2carry(pablo_blk_Advance(tmp392, carryQ.get_carry_in(59), tmp393));
        tmp394 = simd_and(tmp393, bytetest_80_81);
        struct_Mn.cc = simd_or(tmp394, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_ae = simd_and(tmp85, tmp104);
        tmp395 = simd_andc(tmp85, basis_bits.bit_4);
        bytetest_a2_a5 = simd_and(tmp395, tmp93);
        tmp396 = simd_and(tmp393, bytetest_a2_a5);
        struct_Mn.cc = simd_or(tmp396, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_ae = simd_and(tmp85, tmp104);
        bytetest_a8_a9 = simd_and(tmp85, tmp272);
        tmp397 = simd_and(tmp393, bytetest_a8_a9);
        struct_Mn.cc = simd_or(tmp397, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_ae = simd_and(tmp85, tmp104);
        bytetest_ab_ab = simd_and(tmp85, tmp70);
        tmp398 = simd_and(tmp393, bytetest_ab_ab);
        struct_Mn.cc = simd_or(tmp398, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_af = simd_and(tmp85, tmp44);
        bytetest_a6_a6 = simd_and(tmp85, tmp33);
        tmp399 = simd_and(tmp303, bytetest_af);
        carryQ.cq[60] = carryout2carry(pablo_blk_Advance(tmp399, carryQ.get_carry_in(60), tmp400));
        tmp401 = simd_and(tmp400, bytetest_a6_a6);
        struct_Mn.cc = simd_or(tmp401, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_af = simd_and(tmp85, tmp44);
        bytetest_a8_a9 = simd_and(tmp85, tmp272);
        tmp402 = simd_and(tmp400, bytetest_a8_a9);
        struct_Mn.cc = simd_or(tmp402, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_af = simd_and(tmp85, tmp44);
        bytetest_ad_ad = simd_and(tmp85, tmp6);
        tmp403 = simd_and(tmp400, bytetest_ad_ad);
        struct_Mn.cc = simd_or(tmp403, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_af = simd_and(tmp85, tmp44);
        tmp404 = simd_not(tmp185);
        tmp405 = simd_or(simd_and(basis_bits.bit_3, tmp404), simd_andc(tmp44, basis_bits.bit_3));
        bytetest_af_b1 = simd_and(tmp105, tmp405);
        tmp406 = simd_and(tmp400, bytetest_af_b1);
        struct_Mn.cc = simd_or(tmp406, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_b0 = simd_andc(bytetest_b0_bf, tmp37);
        tmp407 = simd_or(simd_and(basis_bits.bit_3, tmp112), simd_andc(tmp4, basis_bits.bit_3));
        bytetest_ac_b3 = simd_and(tmp105, tmp407);
        tmp408 = simd_and(tmp303, bytetest_b0);
        carryQ.cq[61] = carryout2carry(pablo_blk_Advance(tmp408, carryQ.get_carry_in(61), tmp409));
        tmp410 = simd_and(tmp409, bytetest_ac_b3);
        struct_Mn.cc = simd_or(tmp410, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_b0 = simd_andc(bytetest_b0_bf, tmp37);
        bytetest_b6_b7 = simd_and(bytetest_b0_bf, tmp286);
        tmp411 = simd_and(tmp409, bytetest_b6_b7);
        struct_Mn.cc = simd_or(tmp411, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp139);
        tmp412 = simd_andc(tmp58, tmp22);
        bytetest_90_92 = simd_andc(tmp412, tmp27);
        tmp413 = simd_and(tmp303, bytetest_b3);
        carryQ.cq[62] = carryout2carry(pablo_blk_Advance(tmp413, carryQ.get_carry_in(62), tmp414));
        tmp415 = simd_and(tmp414, bytetest_90_92);
        struct_Mn.cc = simd_or(tmp415, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp139);
        tmp416 = simd_and(basis_bits.bit_3, tmp22);
        tmp417 = simd_or(simd_and(basis_bits.bit_2, tmp317), simd_andc(tmp416, basis_bits.bit_2));
        bytetest_94_a0 = simd_and(bytetest_80_bf, tmp417);
        tmp418 = simd_and(tmp414, bytetest_94_a0);
        struct_Mn.cc = simd_or(tmp418, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp139);
        tmp419 = simd_or(simd_and(basis_bits.bit_4, tmp87), simd_andc(tmp118, basis_bits.bit_4));
        bytetest_a2_a8 = simd_and(tmp85, tmp419);
        tmp420 = simd_and(tmp414, bytetest_a2_a8);
        struct_Mn.cc = simd_or(tmp420, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp139);
        bytetest_ad_ad = simd_and(tmp85, tmp6);
        tmp421 = simd_and(tmp414, bytetest_ad_ad);
        struct_Mn.cc = simd_or(tmp421, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp139);
        bytetest_b4_b4 = simd_and(bytetest_b0_bf, tmp145);
        tmp422 = simd_and(tmp414, bytetest_b4_b4);
        struct_Mn.cc = simd_or(tmp422, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_b7 = simd_and(bytetest_b0_bf, tmp46);
        tmp423 = simd_or(basis_bits.bit_4, tmp88);
        tmp424 = simd_or(basis_bits.bit_3, tmp423);
        tmp425 = simd_and(basis_bits.bit_2, tmp424);
        bytetest_80_a6 = simd_andc(bytetest_80_bf, tmp425);
        tmp426 = simd_and(tmp303, bytetest_b7);
        carryQ.cq[63] = carryout2carry(pablo_blk_Advance(tmp426, carryQ.get_carry_in(63), tmp427));
        tmp428 = simd_and(tmp427, bytetest_80_a6);
        struct_Mn.cc = simd_or(tmp428, struct_Mn.cc);
        bytetest_e1 = simd_and(tmp117, tmp95);
        bytetest_b7 = simd_and(bytetest_b0_bf, tmp46);
        bytetest_bc_bf = simd_and(bytetest_b0_bf, tmp4);
        tmp429 = simd_and(tmp427, bytetest_bc_bf);
        struct_Mn.cc = simd_or(tmp429, struct_Mn.cc);
        bytetest_e2 = simd_and(tmp117, tmp24);
        bytetest_83 = simd_and(tmp25, tmp139);
        tmp430 = simd_and(basis_bits.bit_4, tmp71);
        bytetest_90_9c = simd_andc(tmp58, tmp430);
        tmp431 = simd_and(tmp10, bytetest_e2);
        carryQ.cq[64] = carryout2carry(pablo_blk_Advance(tmp431, carryQ.get_carry_in(64), tmp432));
        tmp433 = simd_and(tmp432, bytetest_83);
        carryQ.cq[65] = carryout2carry(pablo_blk_Advance(tmp433, carryQ.get_carry_in(65), tmp434));
        tmp435 = simd_and(tmp434, bytetest_90_9c);
        struct_Mn.cc = simd_or(tmp435, struct_Mn.cc);
        bytetest_e2 = simd_and(tmp117, tmp24);
        bytetest_83 = simd_and(tmp25, tmp139);
        bytetest_a1_a1 = simd_and(tmp85, tmp95);
        tmp436 = simd_and(tmp434, bytetest_a1_a1);
        struct_Mn.cc = simd_or(tmp436, struct_Mn.cc);
        bytetest_e2 = simd_and(tmp117, tmp24);
        bytetest_83 = simd_and(tmp25, tmp139);
        tmp437 = simd_or(simd_and(basis_bits.bit_3, tmp106), simd_andc(tmp78, basis_bits.bit_3));
        bytetest_a5_b0 = simd_and(tmp105, tmp437);
        tmp438 = simd_and(tmp434, bytetest_a5_b0);
        struct_Mn.cc = simd_or(tmp438, struct_Mn.cc);
        bytetest_e2 = simd_and(tmp117, tmp24);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp139);
        bytetest_af_b1 = simd_and(tmp105, tmp405);
        tmp439 = simd_and(tmp432, bytetest_b3);
        carryQ.cq[66] = carryout2carry(pablo_blk_Advance(tmp439, carryQ.get_carry_in(66), tmp440));
        tmp441 = simd_and(tmp440, bytetest_af_b1);
        struct_Mn.cc = simd_or(tmp441, struct_Mn.cc);
        bytetest_e2 = simd_and(tmp117, tmp24);
        bytetest_b5 = simd_and(bytetest_b0_bf, tmp152);
        bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp44);
        tmp442 = simd_and(tmp432, bytetest_b5);
        carryQ.cq[67] = carryout2carry(pablo_blk_Advance(tmp442, carryQ.get_carry_in(67), tmp443));
        tmp444 = simd_and(tmp443, bytetest_bf_bf);
        struct_Mn.cc = simd_or(tmp444, struct_Mn.cc);
        bytetest_e2 = simd_and(tmp117, tmp24);
        bytetest_b7 = simd_and(bytetest_b0_bf, tmp46);
        bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp445 = simd_and(tmp432, bytetest_b7);
        carryQ.cq[68] = carryout2carry(pablo_blk_Advance(tmp445, carryQ.get_carry_in(68), tmp446));
        tmp447 = simd_and(tmp446, bytetest_a0_bf);
        struct_Mn.cc = simd_or(tmp447, struct_Mn.cc);
        bytetest_e3 = simd_and(tmp117, tmp139);
        bytetest_80 = simd_andc(tmp25, tmp37);
        bytetest_aa_ad = simd_and(tmp91, tmp93);
        tmp448 = simd_and(tmp10, bytetest_e3);
        carryQ.cq[69] = carryout2carry(pablo_blk_Advance(tmp448, carryQ.get_carry_in(69), tmp449));
        tmp450 = simd_and(tmp449, bytetest_80);
        carryQ.cq[70] = carryout2carry(pablo_blk_Advance(tmp450, carryQ.get_carry_in(70), tmp451));
        tmp452 = simd_and(tmp451, bytetest_aa_ad);
        struct_Mn.cc = simd_or(tmp452, struct_Mn.cc);
        bytetest_e3 = simd_and(tmp117, tmp139);
        bytetest_82 = simd_and(tmp25, tmp24);
        bytetest_99_9a = simd_and(tmp135, tmp49);
        tmp453 = simd_and(tmp449, bytetest_82);
        carryQ.cq[71] = carryout2carry(pablo_blk_Advance(tmp453, carryQ.get_carry_in(71), tmp454));
        tmp455 = simd_and(tmp454, bytetest_99_9a);
        struct_Mn.cc = simd_or(tmp455, struct_Mn.cc);
        bytetest_ea = simd_and(tmp117, tmp149);
        bytetest_99 = simd_and(tmp58, tmp63);
        bytetest_af_af = simd_and(tmp85, tmp44);
        tmp456 = simd_and(tmp10, bytetest_ea);
        carryQ.cq[72] = carryout2carry(pablo_blk_Advance(tmp456, carryQ.get_carry_in(72), tmp457));
        tmp458 = simd_and(tmp457, bytetest_99);
        carryQ.cq[73] = carryout2carry(pablo_blk_Advance(tmp458, carryQ.get_carry_in(73), tmp459));
        tmp460 = simd_and(tmp459, bytetest_af_af);
        struct_Mn.cc = simd_or(tmp460, struct_Mn.cc);
        bytetest_ea = simd_and(tmp117, tmp149);
        bytetest_99 = simd_and(tmp58, tmp63);
        tmp461 = simd_or(simd_and(basis_bits.bit_4, tmp343), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
        bytetest_b4_bd = simd_and(bytetest_b0_bf, tmp461);
        tmp462 = simd_and(tmp459, bytetest_b4_bd);
        struct_Mn.cc = simd_or(tmp462, struct_Mn.cc);
        bytetest_ea = simd_and(tmp117, tmp149);
        bytetest_9a = simd_and(tmp58, tmp149);
        bytetest_9f_9f = simd_and(tmp58, tmp44);
        tmp463 = simd_and(tmp457, bytetest_9a);
        carryQ.cq[74] = carryout2carry(pablo_blk_Advance(tmp463, carryQ.get_carry_in(74), tmp464));
        tmp465 = simd_and(tmp464, bytetest_9f_9f);
        struct_Mn.cc = simd_or(tmp465, struct_Mn.cc);
        bytetest_ea = simd_and(tmp117, tmp149);
        bytetest_9b = simd_and(tmp58, tmp70);
        bytetest_b0_b1 = simd_andc(bytetest_b0_bf, tmp185);
        tmp466 = simd_and(tmp457, bytetest_9b);
        carryQ.cq[75] = carryout2carry(pablo_blk_Advance(tmp466, carryQ.get_carry_in(75), tmp467));
        tmp468 = simd_and(tmp467, bytetest_b0_b1);
        struct_Mn.cc = simd_or(tmp468, struct_Mn.cc);
        bytetest_ea = simd_and(tmp117, tmp149);
        bytetest_a0 = simd_andc(tmp85, tmp37);
        bytetest_82_82 = simd_and(tmp25, tmp24);
        tmp469 = simd_and(tmp457, bytetest_a0);
        carryQ.cq[76] = carryout2carry(pablo_blk_Advance(tmp469, carryQ.get_carry_in(76), tmp470));
        tmp471 = simd_and(tmp470, bytetest_82_82);
        struct_Mn.cc = simd_or(tmp471, struct_Mn.cc);
        bytetest_ea = simd_and(tmp117, tmp149);
        bytetest_a0 = simd_andc(tmp85, tmp37);
        bytetest_86_86 = simd_and(tmp25, tmp33);
        tmp472 = simd_and(tmp470, bytetest_86_86);
        struct_Mn.cc = simd_or(tmp472, struct_Mn.cc);
        bytetest_ea = simd_and(tmp117, tmp149);
        bytetest_a0 = simd_andc(tmp85, tmp37);
        bytetest_8b_8b = simd_and(tmp25, tmp70);
        tmp473 = simd_and(tmp470, bytetest_8b_8b);
        struct_Mn.cc = simd_or(tmp473, struct_Mn.cc);
        bytetest_ea = simd_and(tmp117, tmp149);
        bytetest_a0 = simd_andc(tmp85, tmp37);
        bytetest_a5_a6 = simd_and(tmp131, tmp49);
        tmp474 = simd_and(tmp470, bytetest_a5_a6);
        struct_Mn.cc = simd_or(tmp474, struct_Mn.cc);
        bytetest_ea = simd_and(tmp117, tmp149);
        bytetest_a3 = simd_and(tmp85, tmp139);
        bytetest_84_84 = simd_and(tmp25, tmp145);
        tmp475 = simd_and(tmp457, bytetest_a3);
        carryQ.cq[77] = carryout2carry(pablo_blk_Advance(tmp475, carryQ.get_carry_in(77), tmp476));
        tmp477 = simd_and(tmp476, bytetest_84_84);
        struct_Mn.cc = simd_or(tmp477, struct_Mn.cc);
        bytetest_ea = simd_and(tmp117, tmp149);
        bytetest_a3 = simd_and(tmp85, tmp139);
        tmp478 = simd_and(basis_bits.bit_3, tmp185);
        bytetest_a0_b1 = simd_andc(bytetest_a0_bf, tmp478);
        tmp479 = simd_and(tmp476, bytetest_a0_b1);
        struct_Mn.cc = simd_or(tmp479, struct_Mn.cc);
        bytetest_ea = simd_and(tmp117, tmp149);
        bytetest_a4 = simd_and(tmp85, tmp145);
        tmp480 = simd_or(simd_and(basis_bits.bit_4, tmp343), simd_andc(tmp73, basis_bits.bit_4));
        bytetest_a6_ad = simd_and(tmp85, tmp480);
        tmp481 = simd_and(tmp457, bytetest_a4);
        carryQ.cq[78] = carryout2carry(pablo_blk_Advance(tmp481, carryQ.get_carry_in(78), tmp482));
        tmp483 = simd_and(tmp482, bytetest_a6_ad);
        struct_Mn.cc = simd_or(tmp483, struct_Mn.cc);
        bytetest_ea = simd_and(tmp117, tmp149);
        bytetest_a5 = simd_and(tmp85, tmp152);
        tmp484 = simd_or(simd_and(basis_bits.bit_3, tmp404), simd_andc(tmp423, basis_bits.bit_3));
        bytetest_87_91 = simd_and(tmp64, tmp484);
        tmp485 = simd_and(tmp457, bytetest_a5);
        carryQ.cq[79] = carryout2carry(pablo_blk_Advance(tmp485, carryQ.get_carry_in(79), tmp486));
        tmp487 = simd_and(tmp486, bytetest_87_91);
        struct_Mn.cc = simd_or(tmp487, struct_Mn.cc);
        bytetest_ea = simd_and(tmp117, tmp149);
        bytetest_a6 = simd_and(tmp85, tmp33);
        bytetest_80_82 = simd_andc(bytetest_80_83, tmp27);
        tmp488 = simd_and(tmp457, bytetest_a6);
        carryQ.cq[80] = carryout2carry(pablo_blk_Advance(tmp488, carryQ.get_carry_in(80), tmp489));
        tmp490 = simd_and(tmp489, bytetest_80_82);
        struct_Mn.cc = simd_or(tmp490, struct_Mn.cc);
        bytetest_ea = simd_and(tmp117, tmp149);
        bytetest_a6 = simd_and(tmp85, tmp33);
        bytetest_b3_b3 = simd_and(bytetest_b0_bf, tmp139);
        tmp491 = simd_and(tmp489, bytetest_b3_b3);
        struct_Mn.cc = simd_or(tmp491, struct_Mn.cc);
        bytetest_ea = simd_and(tmp117, tmp149);
        bytetest_a6 = simd_and(tmp85, tmp33);
        bytetest_b6_b9 = simd_and(bytetest_b0_bf, tmp120);
        tmp492 = simd_and(tmp489, bytetest_b6_b9);
        struct_Mn.cc = simd_or(tmp492, struct_Mn.cc);
        bytetest_ea = simd_and(tmp117, tmp149);
        bytetest_a6 = simd_and(tmp85, tmp33);
        bytetest_bc_bc = simd_and(bytetest_b0_bf, tmp15);
        tmp493 = simd_and(tmp489, bytetest_bc_bc);
        struct_Mn.cc = simd_or(tmp493, struct_Mn.cc);
        bytetest_ea = simd_and(tmp117, tmp149);
        bytetest_a8 = simd_and(tmp85, tmp57);
        tmp494 = simd_not(tmp27);
        tmp495 = simd_or(simd_and(basis_bits.bit_5, tmp494), simd_andc(tmp14, basis_bits.bit_5));
        bytetest_a9_ae = simd_and(tmp91, tmp495);
        tmp496 = simd_and(tmp457, bytetest_a8);
        carryQ.cq[81] = carryout2carry(pablo_blk_Advance(tmp496, carryQ.get_carry_in(81), tmp497));
        tmp498 = simd_and(tmp497, bytetest_a9_ae);
        struct_Mn.cc = simd_or(tmp498, struct_Mn.cc);
        bytetest_ea = simd_and(tmp117, tmp149);
        bytetest_a8 = simd_and(tmp85, tmp57);
        tmp499 = simd_andc(bytetest_b0_bf, tmp22);
        bytetest_b1_b2 = simd_and(tmp499, tmp49);
        tmp500 = simd_and(tmp497, bytetest_b1_b2);
        struct_Mn.cc = simd_or(tmp500, struct_Mn.cc);
        bytetest_ea = simd_and(tmp117, tmp149);
        bytetest_a8 = simd_and(tmp85, tmp57);
        tmp501 = simd_and(bytetest_b0_bf, tmp32);
        bytetest_b5_b6 = simd_and(tmp501, tmp49);
        tmp502 = simd_and(tmp497, bytetest_b5_b6);
        struct_Mn.cc = simd_or(tmp502, struct_Mn.cc);
        bytetest_ea = simd_and(tmp117, tmp149);
        bytetest_a9 = simd_and(tmp85, tmp63);
        bytetest_83_83 = simd_and(tmp25, tmp139);
        tmp503 = simd_and(tmp457, bytetest_a9);
        carryQ.cq[82] = carryout2carry(pablo_blk_Advance(tmp503, carryQ.get_carry_in(82), tmp504));
        tmp505 = simd_and(tmp504, bytetest_83_83);
        struct_Mn.cc = simd_or(tmp505, struct_Mn.cc);
        bytetest_ea = simd_and(tmp117, tmp149);
        bytetest_a9 = simd_and(tmp85, tmp63);
        bytetest_8c_8c = simd_and(tmp25, tmp15);
        tmp506 = simd_and(tmp504, bytetest_8c_8c);
        struct_Mn.cc = simd_or(tmp506, struct_Mn.cc);
        bytetest_ea = simd_and(tmp117, tmp149);
        bytetest_aa = simd_and(tmp85, tmp149);
        bytetest_b0_b0 = simd_andc(bytetest_b0_bf, tmp37);
        tmp507 = simd_and(tmp457, bytetest_aa);
        carryQ.cq[83] = carryout2carry(pablo_blk_Advance(tmp507, carryQ.get_carry_in(83), tmp508));
        tmp509 = simd_and(tmp508, bytetest_b0_b0);
        struct_Mn.cc = simd_or(tmp509, struct_Mn.cc);
        bytetest_ea = simd_and(tmp117, tmp149);
        bytetest_aa = simd_and(tmp85, tmp149);
        bytetest_b2_b4 = simd_and(tmp307, tmp247);
        tmp510 = simd_and(tmp508, bytetest_b2_b4);
        struct_Mn.cc = simd_or(tmp510, struct_Mn.cc);
        bytetest_ea = simd_and(tmp117, tmp149);
        bytetest_aa = simd_and(tmp85, tmp149);
        bytetest_b7_b8 = simd_and(bytetest_b0_bf, tmp89);
        tmp511 = simd_and(tmp508, bytetest_b7_b8);
        struct_Mn.cc = simd_or(tmp511, struct_Mn.cc);
        bytetest_ea = simd_and(tmp117, tmp149);
        bytetest_aa = simd_and(tmp85, tmp149);
        bytetest_be_bf = simd_and(bytetest_b0_bf, tmp34);
        tmp512 = simd_and(tmp508, bytetest_be_bf);
        struct_Mn.cc = simd_or(tmp512, struct_Mn.cc);
        bytetest_ea = simd_and(tmp117, tmp149);
        bytetest_ab = simd_and(tmp85, tmp70);
        bytetest_81_81 = simd_and(tmp25, tmp95);
        tmp513 = simd_and(tmp457, bytetest_ab);
        carryQ.cq[84] = carryout2carry(pablo_blk_Advance(tmp513, carryQ.get_carry_in(84), tmp514));
        tmp515 = simd_and(tmp514, bytetest_81_81);
        struct_Mn.cc = simd_or(tmp515, struct_Mn.cc);
        bytetest_ea = simd_and(tmp117, tmp149);
        bytetest_ab = simd_and(tmp85, tmp70);
        bytetest_ac_ad = simd_and(tmp85, tmp236);
        tmp516 = simd_and(tmp514, bytetest_ac_ad);
        struct_Mn.cc = simd_or(tmp516, struct_Mn.cc);
        bytetest_ea = simd_and(tmp117, tmp149);
        bytetest_ab = simd_and(tmp85, tmp70);
        bytetest_b6_b6 = simd_and(bytetest_b0_bf, tmp33);
        tmp517 = simd_and(tmp514, bytetest_b6_b6);
        struct_Mn.cc = simd_or(tmp517, struct_Mn.cc);
        bytetest_ea = simd_and(tmp117, tmp149);
        bytetest_af = simd_and(tmp85, tmp44);
        bytetest_a5_a5 = simd_and(tmp85, tmp152);
        tmp518 = simd_and(tmp457, bytetest_af);
        carryQ.cq[85] = carryout2carry(pablo_blk_Advance(tmp518, carryQ.get_carry_in(85), tmp519));
        tmp520 = simd_and(tmp519, bytetest_a5_a5);
        struct_Mn.cc = simd_or(tmp520, struct_Mn.cc);
        bytetest_ea = simd_and(tmp117, tmp149);
        bytetest_af = simd_and(tmp85, tmp44);
        bytetest_a8_a8 = simd_and(tmp85, tmp57);
        tmp521 = simd_and(tmp519, bytetest_a8_a8);
        struct_Mn.cc = simd_or(tmp521, struct_Mn.cc);
        bytetest_ea = simd_and(tmp117, tmp149);
        bytetest_af = simd_and(tmp85, tmp44);
        bytetest_ad_ad = simd_and(tmp85, tmp6);
        tmp522 = simd_and(tmp519, bytetest_ad_ad);
        struct_Mn.cc = simd_or(tmp522, struct_Mn.cc);
        bytetest_ef = simd_and(tmp117, tmp44);
        bytetest_ac = simd_and(tmp85, tmp15);
        bytetest_9e_9e = simd_and(tmp58, tmp104);
        tmp523 = simd_and(tmp10, bytetest_ef);
        carryQ.cq[86] = carryout2carry(pablo_blk_Advance(tmp523, carryQ.get_carry_in(86), tmp524));
        tmp525 = simd_and(tmp524, bytetest_ac);
        carryQ.cq[87] = carryout2carry(pablo_blk_Advance(tmp525, carryQ.get_carry_in(87), tmp526));
        tmp527 = simd_and(tmp526, bytetest_9e_9e);
        struct_Mn.cc = simd_or(tmp527, struct_Mn.cc);
        bytetest_ef = simd_and(tmp117, tmp44);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp57);
        bytetest_80_8f = simd_andc(bytetest_80_bf, tmp2);
        tmp528 = simd_and(tmp524, bytetest_b8);
        carryQ.cq[88] = carryout2carry(pablo_blk_Advance(tmp528, carryQ.get_carry_in(88), tmp529));
        tmp530 = simd_and(tmp529, bytetest_80_8f);
        struct_Mn.cc = simd_or(tmp530, struct_Mn.cc);
        bytetest_ef = simd_and(tmp117, tmp44);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp57);
        bytetest_a0_a6 = simd_andc(tmp395, tmp88);
        tmp531 = simd_and(tmp529, bytetest_a0_a6);
        struct_Mn.cc = simd_or(tmp531, struct_Mn.cc);
        tmp532 = simd_and(tmp1, tmp8);
        bytetest_f0 = simd_andc(tmp532, tmp37);
        bytetest_90 = simd_andc(tmp58, tmp37);
        bytetest_87 = simd_and(bytetest_80_8f, tmp46);
        bytetest_bd_bd = simd_and(bytetest_b0_bf, tmp6);
        tmp533 = simd_and(tmp10, bytetest_f0);
        carryQ.cq[89] = carryout2carry(pablo_blk_Advance(tmp533, carryQ.get_carry_in(89), tmp534));
        tmp535 = simd_and(tmp534, bytetest_90);
        carryQ.cq[90] = carryout2carry(pablo_blk_Advance(tmp535, carryQ.get_carry_in(90), tmp536));
        tmp537 = simd_and(tmp536, bytetest_87);
        carryQ.cq[91] = carryout2carry(pablo_blk_Advance(tmp537, carryQ.get_carry_in(91), tmp538));
        tmp539 = simd_and(tmp538, bytetest_bd_bd);
        struct_Mn.cc = simd_or(tmp539, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp532, tmp37);
        bytetest_90 = simd_andc(tmp58, tmp37);
        bytetest_a8 = simd_and(tmp85, tmp57);
        tmp540 = simd_andc(bytetest_80_8f, tmp22);
        bytetest_81_83 = simd_and(tmp540, tmp14);
        tmp541 = simd_and(tmp536, bytetest_a8);
        carryQ.cq[92] = carryout2carry(pablo_blk_Advance(tmp541, carryQ.get_carry_in(92), tmp542));
        tmp543 = simd_and(tmp542, bytetest_81_83);
        struct_Mn.cc = simd_or(tmp543, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp532, tmp37);
        bytetest_90 = simd_andc(tmp58, tmp37);
        bytetest_a8 = simd_and(tmp85, tmp57);
        tmp544 = simd_and(bytetest_80_8f, tmp32);
        bytetest_85_86 = simd_and(tmp544, tmp49);
        tmp545 = simd_and(tmp542, bytetest_85_86);
        struct_Mn.cc = simd_or(tmp545, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp532, tmp37);
        bytetest_90 = simd_andc(tmp58, tmp37);
        bytetest_a8 = simd_and(tmp85, tmp57);
        bytetest_8c_8f = simd_and(bytetest_80_8f, tmp4);
        tmp546 = simd_and(tmp542, bytetest_8c_8f);
        struct_Mn.cc = simd_or(tmp546, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp532, tmp37);
        bytetest_90 = simd_andc(tmp58, tmp37);
        bytetest_a8 = simd_and(tmp85, tmp57);
        bytetest_b8_ba = simd_andc(tmp309, tmp27);
        tmp547 = simd_and(tmp542, bytetest_b8_ba);
        struct_Mn.cc = simd_or(tmp547, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp532, tmp37);
        bytetest_90 = simd_andc(tmp58, tmp37);
        bytetest_a8 = simd_and(tmp85, tmp57);
        bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp44);
        tmp548 = simd_and(tmp542, bytetest_bf_bf);
        struct_Mn.cc = simd_or(tmp548, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp532, tmp37);
        bytetest_91 = simd_and(tmp58, tmp95);
        bytetest_80 = simd_andc(bytetest_80_8f, tmp37);
        bytetest_81_81 = simd_and(bytetest_80_8f, tmp95);
        tmp549 = simd_and(tmp534, bytetest_91);
        carryQ.cq[93] = carryout2carry(pablo_blk_Advance(tmp549, carryQ.get_carry_in(93), tmp550));
        tmp551 = simd_and(tmp550, bytetest_80);
        carryQ.cq[94] = carryout2carry(pablo_blk_Advance(tmp551, carryQ.get_carry_in(94), tmp552));
        tmp553 = simd_and(tmp552, bytetest_81_81);
        struct_Mn.cc = simd_or(tmp553, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp532, tmp37);
        bytetest_91 = simd_and(tmp58, tmp95);
        bytetest_81 = simd_and(bytetest_80_8f, tmp95);
        tmp554 = simd_andc(bytetest_80_8f, basis_bits.bit_4);
        bytetest_80_86 = simd_andc(tmp554, tmp88);
        tmp555 = simd_and(tmp550, bytetest_81);
        carryQ.cq[95] = carryout2carry(pablo_blk_Advance(tmp555, carryQ.get_carry_in(95), tmp556));
        tmp557 = simd_and(tmp556, bytetest_80_86);
        bytetest_80 = simd_andc(bytetest_80_8f, tmp37);
        bytetest_b8_bf = simd_and(bytetest_b0_bf, basis_bits.bit_4);
        tmp558 = simd_and(tmp552, bytetest_b8_bf);
        tmp559 = simd_or(tmp558, tmp557);
        struct_Mn.cc = simd_or(tmp559, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp532, tmp37);
        bytetest_91 = simd_and(tmp58, tmp95);
        bytetest_82 = simd_and(bytetest_80_8f, tmp24);
        bytetest_80_81 = simd_andc(bytetest_80_8f, tmp185);
        tmp560 = simd_and(tmp550, bytetest_82);
        carryQ.cq[96] = carryout2carry(pablo_blk_Advance(tmp560, carryQ.get_carry_in(96), tmp561));
        tmp562 = simd_and(tmp561, bytetest_80_81);
        struct_Mn.cc = simd_or(tmp562, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp532, tmp37);
        bytetest_91 = simd_and(tmp58, tmp95);
        bytetest_82 = simd_and(bytetest_80_8f, tmp24);
        tmp563 = simd_or(simd_and(basis_bits.bit_5, tmp494), simd_andc(tmp27, basis_bits.bit_5));
        bytetest_b3_b6 = simd_and(tmp307, tmp563);
        tmp564 = simd_and(tmp561, bytetest_b3_b6);
        struct_Mn.cc = simd_or(tmp564, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp532, tmp37);
        bytetest_91 = simd_and(tmp58, tmp95);
        bytetest_82 = simd_and(bytetest_80_8f, tmp24);
        bytetest_b9_ba = simd_and(tmp309, tmp49);
        tmp565 = simd_and(tmp561, bytetest_b9_ba);
        struct_Mn.cc = simd_or(tmp565, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp532, tmp37);
        bytetest_91 = simd_and(tmp58, tmp95);
        bytetest_84 = simd_and(bytetest_80_8f, tmp145);
        bytetest_80_82 = simd_andc(tmp540, tmp27);
        tmp566 = simd_and(tmp550, bytetest_84);
        carryQ.cq[97] = carryout2carry(pablo_blk_Advance(tmp566, carryQ.get_carry_in(97), tmp567));
        tmp568 = simd_and(tmp567, bytetest_80_82);
        struct_Mn.cc = simd_or(tmp568, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp532, tmp37);
        bytetest_91 = simd_and(tmp58, tmp95);
        bytetest_84 = simd_and(bytetest_80_8f, tmp145);
        tmp569 = simd_not(basis_bits.bit_5);
        tmp570 = simd_or(simd_and(basis_bits.bit_4, tmp569), simd_andc(tmp88, basis_bits.bit_4));
        bytetest_a7_ab = simd_and(tmp85, tmp570);
        tmp571 = simd_and(tmp567, bytetest_a7_ab);
        struct_Mn.cc = simd_or(tmp571, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp532, tmp37);
        bytetest_91 = simd_and(tmp58, tmp95);
        bytetest_84 = simd_and(bytetest_80_8f, tmp145);
        tmp572 = simd_not(tmp78);
        tmp573 = simd_or(simd_and(basis_bits.bit_3, tmp572), simd_andc(tmp289, basis_bits.bit_3));
        bytetest_ad_b4 = simd_and(bytetest_a0_bf, tmp573);
        tmp574 = simd_and(tmp567, bytetest_ad_b4);
        struct_Mn.cc = simd_or(tmp574, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp532, tmp37);
        bytetest_91 = simd_and(tmp58, tmp95);
        bytetest_86 = simd_and(bytetest_80_8f, tmp33);
        bytetest_80_81 = simd_andc(bytetest_80_8f, tmp185);
        tmp575 = simd_and(tmp550, bytetest_86);
        carryQ.cq[98] = carryout2carry(pablo_blk_Advance(tmp575, carryQ.get_carry_in(98), tmp576));
        tmp577 = simd_and(tmp576, bytetest_80_81);
        struct_Mn.cc = simd_or(tmp577, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp532, tmp37);
        bytetest_91 = simd_and(tmp58, tmp95);
        bytetest_86 = simd_and(bytetest_80_8f, tmp33);
        tmp578 = simd_or(simd_and(basis_bits.bit_4, tmp256), simd_andc(tmp73, basis_bits.bit_4));
        bytetest_b6_be = simd_and(bytetest_b0_bf, tmp578);
        tmp579 = simd_and(tmp576, bytetest_b6_be);
        struct_Mn.cc = simd_or(tmp579, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp532, tmp37);
        bytetest_91 = simd_and(tmp58, tmp95);
        bytetest_9a = simd_and(tmp58, tmp149);
        bytetest_ab_ab = simd_and(tmp85, tmp70);
        tmp580 = simd_and(tmp550, bytetest_9a);
        carryQ.cq[99] = carryout2carry(pablo_blk_Advance(tmp580, carryQ.get_carry_in(99), tmp581));
        tmp582 = simd_and(tmp581, bytetest_ab_ab);
        struct_Mn.cc = simd_or(tmp582, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp532, tmp37);
        bytetest_91 = simd_and(tmp58, tmp95);
        bytetest_9a = simd_and(tmp58, tmp149);
        bytetest_ad_ad = simd_and(tmp85, tmp6);
        tmp583 = simd_and(tmp581, bytetest_ad_ad);
        struct_Mn.cc = simd_or(tmp583, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp532, tmp37);
        bytetest_91 = simd_and(tmp58, tmp95);
        bytetest_9a = simd_and(tmp58, tmp149);
        bytetest_b0_b5 = simd_andc(tmp307, tmp73);
        tmp584 = simd_and(tmp581, bytetest_b0_b5);
        struct_Mn.cc = simd_or(tmp584, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp532, tmp37);
        bytetest_91 = simd_and(tmp58, tmp95);
        bytetest_9a = simd_and(tmp58, tmp149);
        bytetest_b7_b7 = simd_and(bytetest_b0_bf, tmp46);
        tmp585 = simd_and(tmp581, bytetest_b7_b7);
        struct_Mn.cc = simd_or(tmp585, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp532, tmp37);
        bytetest_96 = simd_and(tmp58, tmp33);
        bytetest_be = simd_and(bytetest_b0_bf, tmp104);
        tmp586 = simd_or(tmp22, tmp27);
        tmp587 = simd_not(tmp586);
        tmp588 = simd_or(simd_and(basis_bits.bit_3, tmp587), simd_andc(tmp44, basis_bits.bit_3));
        bytetest_8f_92 = simd_and(tmp64, tmp588);
        tmp589 = simd_and(tmp534, bytetest_96);
        carryQ.cq[100] = carryout2carry(pablo_blk_Advance(tmp589, carryQ.get_carry_in(100), tmp590));
        tmp591 = simd_and(tmp590, bytetest_be);
        carryQ.cq[101] = carryout2carry(pablo_blk_Advance(tmp591, carryQ.get_carry_in(101), tmp592));
        tmp593 = simd_and(tmp592, bytetest_8f_92);
        struct_Mn.cc = simd_or(tmp593, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp532, tmp37);
        bytetest_9d = simd_and(tmp58, tmp6);
        bytetest_85 = simd_and(bytetest_80_8f, tmp152);
        tmp594 = simd_or(simd_and(basis_bits.bit_4, tmp119), simd_andc(tmp88, basis_bits.bit_4));
        bytetest_a7_a9 = simd_and(tmp85, tmp594);
        tmp595 = simd_and(tmp534, bytetest_9d);
        carryQ.cq[102] = carryout2carry(pablo_blk_Advance(tmp595, carryQ.get_carry_in(102), tmp596));
        tmp597 = simd_and(tmp596, bytetest_85);
        carryQ.cq[103] = carryout2carry(pablo_blk_Advance(tmp597, carryQ.get_carry_in(103), tmp598));
        tmp599 = simd_and(tmp598, bytetest_a7_a9);
        struct_Mn.cc = simd_or(tmp599, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp532, tmp37);
        bytetest_9d = simd_and(tmp58, tmp6);
        bytetest_86 = simd_and(bytetest_80_8f, tmp33);
        bytetest_80_82 = simd_andc(tmp540, tmp27);
        tmp600 = simd_and(tmp596, bytetest_86);
        carryQ.cq[104] = carryout2carry(pablo_blk_Advance(tmp600, carryQ.get_carry_in(104), tmp601));
        tmp602 = simd_and(tmp601, bytetest_80_82);
        bytetest_85 = simd_and(bytetest_80_8f, tmp152);
        bytetest_bb_bf = simd_and(bytetest_b8_bf, tmp28);
        tmp603 = simd_and(tmp598, bytetest_bb_bf);
        tmp604 = simd_or(tmp603, tmp602);
        struct_Mn.cc = simd_or(tmp604, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp532, tmp37);
        bytetest_9d = simd_and(tmp58, tmp6);
        bytetest_86 = simd_and(bytetest_80_8f, tmp33);
        tmp605 = simd_or(simd_and(basis_bits.bit_4, tmp569), simd_andc(tmp71, basis_bits.bit_4));
        bytetest_85_8b = simd_and(bytetest_80_8f, tmp605);
        tmp606 = simd_and(tmp601, bytetest_85_8b);
        struct_Mn.cc = simd_or(tmp606, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp532, tmp37);
        bytetest_9d = simd_and(tmp58, tmp6);
        bytetest_86 = simd_and(bytetest_80_8f, tmp33);
        bytetest_aa_ad = simd_and(tmp91, tmp93);
        tmp607 = simd_and(tmp601, bytetest_aa_ad);
        struct_Mn.cc = simd_or(tmp607, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp532, tmp37);
        bytetest_9d = simd_and(tmp58, tmp6);
        bytetest_89 = simd_and(bytetest_80_8f, tmp63);
        bytetest_82_84 = simd_and(tmp554, tmp247);
        tmp608 = simd_and(tmp596, bytetest_89);
        carryQ.cq[105] = carryout2carry(pablo_blk_Advance(tmp608, carryQ.get_carry_in(105), tmp609));
        tmp610 = simd_and(tmp609, bytetest_82_84);
        struct_Mn.cc = simd_or(tmp610, struct_Mn.cc);
        bytetest_f3 = simd_and(tmp532, tmp139);
        bytetest_a0 = simd_andc(tmp85, tmp37);
        bytetest_87 = simd_and(bytetest_80_8f, tmp46);
        bytetest_80_af = simd_andc(bytetest_80_bf, tmp8);
        tmp611 = simd_and(tmp10, bytetest_f3);
        carryQ.cq[106] = carryout2carry(pablo_blk_Advance(tmp611, carryQ.get_carry_in(106), tmp612));
        tmp613 = simd_and(tmp612, bytetest_a0);
        carryQ.cq[107] = carryout2carry(pablo_blk_Advance(tmp613, carryQ.get_carry_in(107), tmp614));
        tmp615 = simd_and(tmp614, bytetest_87);
        carryQ.cq[108] = carryout2carry(pablo_blk_Advance(tmp615, carryQ.get_carry_in(108), tmp616));
        tmp617 = simd_and(tmp616, bytetest_80_af);
        bytetest_84_86 = simd_andc(tmp544, tmp27);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp618 = simd_and(tmp614, bytetest_84_86);
        carryQ.cq[109] = carryout2carry(pablo_blk_Advance(tmp618, carryQ.get_carry_in(109), tmp619));
        tmp620 = simd_and(tmp619, bytetest_80_bf);
        tmp621 = simd_or(tmp620, tmp617);
        struct_Mn.cc = simd_or(tmp621, struct_Mn.cc);
  }
  CarryArray<110, 0> carryQ;
  };

  struct Sk {
  Sk() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Sk & struct_Sk) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_5e_5e, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, bytetest_60_60, tmp12, tmp13, tmp14, tmp15, bytetest_c2;
		BitBlock tmp16, tmp17, tmp18, tmp19, bytetest_a8_a8, tmp20, tmp21, tmp22;
		BitBlock tmp23, tmp24, tmp25, tmp26, bytetest_af_af, tmp27, tmp28, tmp29;
		BitBlock tmp30, tmp31, bytetest_b4_b4, tmp32, bytetest_b8_b8, tmp33, tmp34;
		BitBlock bytetest_cb, tmp35, tmp36, tmp37, tmp38, bytetest_82_85, tmp39, tmp40;
		BitBlock tmp41, tmp42, tmp43, tmp44, bytetest_92_9f, tmp45, tmp46, tmp47;
		BitBlock tmp48, bytetest_a5_ab, tmp49, tmp50, tmp51, bytetest_ad_ad, tmp52;
		BitBlock tmp53, tmp54, bytetest_af_bf, tmp55, bytetest_cd, tmp56;
		BitBlock bytetest_b5_b5, tmp57, tmp58, tmp59, bytetest_ce, tmp60;
		BitBlock bytetest_84_85, tmp61, tmp62, tmp63, tmp64, tmp65, bytetest_e1;
		BitBlock bytetest_be, bytetest_bd_bd, tmp66, tmp67, tmp68, tmp69, tmp70;
		BitBlock bytetest_bf, tmp71, bytetest_80_81, tmp72, tmp73, tmp74;
		BitBlock bytetest_bf_bf, tmp75, tmp76, tmp77, bytetest_8d_8f, tmp78, tmp79;
		BitBlock bytetest_9d_9f, tmp80, tmp81, bytetest_ad_af, tmp82, tmp83, tmp84;
		BitBlock tmp85, bytetest_bd_be, tmp86, tmp87, bytetest_e3, bytetest_82, tmp88;
		BitBlock tmp89, tmp90, bytetest_9b_9c, tmp91, tmp92, tmp93, tmp94, tmp95;
		BitBlock tmp96, bytetest_ea, tmp97, bytetest_9c, tmp98, tmp99, tmp100, tmp101;
		BitBlock bytetest_80_96, tmp102, tmp103, tmp104, tmp105, tmp106;
		BitBlock bytetest_a0_a1, tmp107, bytetest_9e, tmp108, bytetest_89_8a, tmp109;
		BitBlock tmp110, tmp111, bytetest_ef, bytetest_af, tmp112, tmp113, tmp114;
		BitBlock tmp115, tmp116, bytetest_ae, bytetest_b2_bf, tmp117, tmp118, tmp119;
		BitBlock tmp120, bytetest_bc, bytetest_be_be, tmp121, tmp122, tmp123;
		BitBlock bytetest_bd, bytetest_80_80, tmp124, tmp125, tmp126, bytetest_a3_a3;
		BitBlock tmp127, tmp128, tmp129;




        struct_Sk.cc = simd<1>::constant<0>();
        tmp1 = simd_andc(basis_bits.bit_1, basis_bits.bit_0);
        tmp2 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp3 = simd_and(tmp1, tmp2);
        tmp4 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_and(tmp4, tmp5);
        bytetest_5e_5e = simd_and(tmp3, tmp6);
        struct_Sk.cc = simd_or(bytetest_5e_5e, struct_Sk.cc);
        tmp7 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp8 = simd_and(tmp1, tmp7);
        tmp9 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp10 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp11 = simd_or(tmp9, tmp10);
        bytetest_60_60 = simd_andc(tmp8, tmp11);
        struct_Sk.cc = simd_or(bytetest_60_60, struct_Sk.cc);
        tmp12 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp13 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp14 = simd_andc(tmp12, tmp13);
        tmp15 = simd_andc(tmp5, tmp9);
        bytetest_c2 = simd_and(tmp14, tmp15);
        tmp16 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp17 = simd_and(tmp16, tmp7);
        tmp18 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp19 = simd_andc(tmp18, tmp10);
        bytetest_a8_a8 = simd_and(tmp17, tmp19);
        tmp20 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp20, carryQ.get_carry_in(0), tmp21));
        tmp22 = simd_and(tmp21, bytetest_c2);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp22, carryQ.get_carry_in(1), tmp23));
        tmp24 = simd_and(tmp23, bytetest_a8_a8);
        struct_Sk.cc = simd_or(tmp24, struct_Sk.cc);
        bytetest_c2 = simd_and(tmp14, tmp15);
        tmp25 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp26 = simd_and(tmp4, tmp25);
        bytetest_af_af = simd_and(tmp17, tmp26);
        tmp27 = simd_and(tmp23, bytetest_af_af);
        struct_Sk.cc = simd_or(tmp27, struct_Sk.cc);
        bytetest_c2 = simd_and(tmp14, tmp15);
        tmp28 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp29 = simd_and(tmp16, tmp28);
        tmp30 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp31 = simd_andc(tmp30, tmp10);
        bytetest_b4_b4 = simd_and(tmp29, tmp31);
        tmp32 = simd_and(tmp23, bytetest_b4_b4);
        struct_Sk.cc = simd_or(tmp32, struct_Sk.cc);
        bytetest_c2 = simd_and(tmp14, tmp15);
        bytetest_b8_b8 = simd_and(tmp29, tmp19);
        tmp33 = simd_and(tmp23, bytetest_b8_b8);
        struct_Sk.cc = simd_or(tmp33, struct_Sk.cc);
        tmp34 = simd_and(tmp18, tmp25);
        bytetest_cb = simd_and(tmp14, tmp34);
        tmp35 = simd_andc(tmp16, tmp13);
        tmp36 = simd_andc(tmp35, basis_bits.bit_4);
        tmp37 = simd_not(basis_bits.bit_6);
        tmp38 = simd_or(simd_and(basis_bits.bit_5, tmp37), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        bytetest_82_85 = simd_and(tmp36, tmp38);
        tmp39 = simd_and(tmp21, bytetest_cb);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp39, carryQ.get_carry_in(2), tmp40));
        tmp41 = simd_and(tmp40, bytetest_82_85);
        struct_Sk.cc = simd_or(tmp41, struct_Sk.cc);
        bytetest_cb = simd_and(tmp14, tmp34);
        tmp42 = simd_and(tmp16, tmp2);
        tmp43 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
        tmp44 = simd_or(basis_bits.bit_4, tmp43);
        bytetest_92_9f = simd_and(tmp42, tmp44);
        tmp45 = simd_and(tmp40, bytetest_92_9f);
        struct_Sk.cc = simd_or(tmp45, struct_Sk.cc);
        bytetest_cb = simd_and(tmp14, tmp34);
        tmp46 = simd_not(basis_bits.bit_5);
        tmp47 = simd_and(basis_bits.bit_5, tmp10);
        tmp48 = simd_or(simd_and(basis_bits.bit_4, tmp46), simd_andc(tmp47, basis_bits.bit_4));
        bytetest_a5_ab = simd_and(tmp17, tmp48);
        tmp49 = simd_and(tmp40, bytetest_a5_ab);
        struct_Sk.cc = simd_or(tmp49, struct_Sk.cc);
        bytetest_cb = simd_and(tmp14, tmp34);
        tmp50 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp51 = simd_and(tmp4, tmp50);
        bytetest_ad_ad = simd_and(tmp17, tmp51);
        tmp52 = simd_and(tmp40, bytetest_ad_ad);
        struct_Sk.cc = simd_or(tmp52, struct_Sk.cc);
        bytetest_cb = simd_and(tmp14, tmp34);
        tmp53 = simd_and(tmp16, basis_bits.bit_2);
        tmp54 = simd_or(basis_bits.bit_3, tmp26);
        bytetest_af_bf = simd_and(tmp53, tmp54);
        tmp55 = simd_and(tmp40, bytetest_af_bf);
        struct_Sk.cc = simd_or(tmp55, struct_Sk.cc);
        bytetest_cd = simd_and(tmp14, tmp51);
        tmp56 = simd_and(tmp30, tmp50);
        bytetest_b5_b5 = simd_and(tmp29, tmp56);
        tmp57 = simd_and(tmp21, bytetest_cd);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp57, carryQ.get_carry_in(3), tmp58));
        tmp59 = simd_and(tmp58, bytetest_b5_b5);
        struct_Sk.cc = simd_or(tmp59, struct_Sk.cc);
        bytetest_ce = simd_and(tmp14, tmp6);
        tmp60 = simd_andc(tmp30, basis_bits.bit_6);
        bytetest_84_85 = simd_and(tmp35, tmp60);
        tmp61 = simd_and(tmp21, bytetest_ce);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp61, carryQ.get_carry_in(4), tmp62));
        tmp63 = simd_and(tmp62, bytetest_84_85);
        struct_Sk.cc = simd_or(tmp63, struct_Sk.cc);
        tmp64 = simd_and(tmp12, tmp7);
        tmp65 = simd_andc(tmp50, tmp9);
        bytetest_e1 = simd_and(tmp64, tmp65);
        bytetest_be = simd_and(tmp29, tmp6);
        bytetest_bd_bd = simd_and(tmp29, tmp51);
        tmp66 = simd_and(tmp21, bytetest_e1);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp66, carryQ.get_carry_in(5), tmp67));
        tmp68 = simd_and(tmp67, bytetest_be);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp68, carryQ.get_carry_in(6), tmp69));
        tmp70 = simd_and(tmp69, bytetest_bd_bd);
        struct_Sk.cc = simd_or(tmp70, struct_Sk.cc);
        bytetest_e1 = simd_and(tmp64, tmp65);
        bytetest_bf = simd_and(tmp29, tmp26);
        tmp71 = simd_or(tmp9, basis_bits.bit_6);
        bytetest_80_81 = simd_andc(tmp35, tmp71);
        tmp72 = simd_and(tmp67, bytetest_bf);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp72, carryQ.get_carry_in(7), tmp73));
        tmp74 = simd_and(tmp73, bytetest_80_81);
        bytetest_be = simd_and(tmp29, tmp6);
        bytetest_bf_bf = simd_and(tmp29, tmp26);
        tmp75 = simd_and(tmp69, bytetest_bf_bf);
        tmp76 = simd_or(tmp75, tmp74);
        struct_Sk.cc = simd_or(tmp76, struct_Sk.cc);
        bytetest_e1 = simd_and(tmp64, tmp65);
        bytetest_bf = simd_and(tmp29, tmp26);
        tmp77 = simd_and(tmp35, tmp4);
        bytetest_8d_8f = simd_and(tmp77, tmp10);
        tmp78 = simd_and(tmp73, bytetest_8d_8f);
        struct_Sk.cc = simd_or(tmp78, struct_Sk.cc);
        bytetest_e1 = simd_and(tmp64, tmp65);
        bytetest_bf = simd_and(tmp29, tmp26);
        tmp79 = simd_and(tmp42, tmp4);
        bytetest_9d_9f = simd_and(tmp79, tmp10);
        tmp80 = simd_and(tmp73, bytetest_9d_9f);
        struct_Sk.cc = simd_or(tmp80, struct_Sk.cc);
        bytetest_e1 = simd_and(tmp64, tmp65);
        bytetest_bf = simd_and(tmp29, tmp26);
        tmp81 = simd_and(tmp17, tmp4);
        bytetest_ad_af = simd_and(tmp81, tmp10);
        tmp82 = simd_and(tmp73, bytetest_ad_af);
        struct_Sk.cc = simd_or(tmp82, struct_Sk.cc);
        bytetest_e1 = simd_and(tmp64, tmp65);
        bytetest_bf = simd_and(tmp29, tmp26);
        tmp83 = simd_and(tmp29, tmp4);
        tmp84 = simd_not(basis_bits.bit_7);
        tmp85 = simd_or(simd_and(basis_bits.bit_6, tmp84), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
        bytetest_bd_be = simd_and(tmp83, tmp85);
        tmp86 = simd_and(tmp73, bytetest_bd_be);
        struct_Sk.cc = simd_or(tmp86, struct_Sk.cc);
        tmp87 = simd_andc(tmp25, tmp9);
        bytetest_e3 = simd_and(tmp64, tmp87);
        bytetest_82 = simd_and(tmp35, tmp15);
        tmp88 = simd_and(tmp42, basis_bits.bit_4);
        tmp89 = simd_not(tmp10);
        tmp90 = simd_or(simd_and(basis_bits.bit_5, tmp89), simd_andc(tmp25, basis_bits.bit_5));
        bytetest_9b_9c = simd_and(tmp88, tmp90);
        tmp91 = simd_and(tmp21, bytetest_e3);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(tmp91, carryQ.get_carry_in(8), tmp92));
        tmp93 = simd_and(tmp92, bytetest_82);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(tmp93, carryQ.get_carry_in(9), tmp94));
        tmp95 = simd_and(tmp94, bytetest_9b_9c);
        struct_Sk.cc = simd_or(tmp95, struct_Sk.cc);
        tmp96 = simd_and(tmp18, tmp5);
        bytetest_ea = simd_and(tmp64, tmp96);
        tmp97 = simd_andc(tmp4, tmp10);
        bytetest_9c = simd_and(tmp42, tmp97);
        tmp98 = simd_andc(tmp16, basis_bits.bit_2);
        tmp99 = simd_and(basis_bits.bit_5, tmp25);
        tmp100 = simd_or(basis_bits.bit_4, tmp99);
        tmp101 = simd_and(basis_bits.bit_3, tmp100);
        bytetest_80_96 = simd_andc(tmp98, tmp101);
        tmp102 = simd_and(tmp21, bytetest_ea);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(tmp102, carryQ.get_carry_in(10), tmp103));
        tmp104 = simd_and(tmp103, bytetest_9c);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(tmp104, carryQ.get_carry_in(11), tmp105));
        tmp106 = simd_and(tmp105, bytetest_80_96);
        struct_Sk.cc = simd_or(tmp106, struct_Sk.cc);
        bytetest_ea = simd_and(tmp64, tmp96);
        bytetest_9c = simd_and(tmp42, tmp97);
        bytetest_a0_a1 = simd_andc(tmp17, tmp71);
        tmp107 = simd_and(tmp105, bytetest_a0_a1);
        struct_Sk.cc = simd_or(tmp107, struct_Sk.cc);
        bytetest_ea = simd_and(tmp64, tmp96);
        bytetest_9e = simd_and(tmp42, tmp6);
        tmp108 = simd_and(tmp35, tmp18);
        bytetest_89_8a = simd_and(tmp108, tmp85);
        tmp109 = simd_and(tmp103, bytetest_9e);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(tmp109, carryQ.get_carry_in(12), tmp110));
        tmp111 = simd_and(tmp110, bytetest_89_8a);
        struct_Sk.cc = simd_or(tmp111, struct_Sk.cc);
        bytetest_ef = simd_and(tmp64, tmp26);
        bytetest_af = simd_and(tmp17, tmp26);
        bytetest_80_81 = simd_andc(tmp35, tmp71);
        tmp112 = simd_and(tmp21, bytetest_ef);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(tmp112, carryQ.get_carry_in(13), tmp113));
        tmp114 = simd_and(tmp113, bytetest_af);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(tmp114, carryQ.get_carry_in(14), tmp115));
        tmp116 = simd_and(tmp115, bytetest_80_81);
        bytetest_ae = simd_and(tmp17, tmp6);
        bytetest_b2_bf = simd_and(tmp29, tmp44);
        tmp117 = simd_and(tmp113, bytetest_ae);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(tmp117, carryQ.get_carry_in(15), tmp118));
        tmp119 = simd_and(tmp118, bytetest_b2_bf);
        tmp120 = simd_or(tmp119, tmp116);
        struct_Sk.cc = simd_or(tmp120, struct_Sk.cc);
        bytetest_ef = simd_and(tmp64, tmp26);
        bytetest_bc = simd_and(tmp29, tmp97);
        bytetest_be_be = simd_and(tmp29, tmp6);
        tmp121 = simd_and(tmp113, bytetest_bc);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(tmp121, carryQ.get_carry_in(16), tmp122));
        tmp123 = simd_and(tmp122, bytetest_be_be);
        struct_Sk.cc = simd_or(tmp123, struct_Sk.cc);
        bytetest_ef = simd_and(tmp64, tmp26);
        bytetest_bd = simd_and(tmp29, tmp51);
        bytetest_80_80 = simd_andc(tmp35, tmp11);
        tmp124 = simd_and(tmp113, bytetest_bd);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(tmp124, carryQ.get_carry_in(17), tmp125));
        tmp126 = simd_and(tmp125, bytetest_80_80);
        struct_Sk.cc = simd_or(tmp126, struct_Sk.cc);
        bytetest_ef = simd_and(tmp64, tmp26);
        bytetest_bf = simd_and(tmp29, tmp26);
        bytetest_a3_a3 = simd_and(tmp17, tmp87);
        tmp127 = simd_and(tmp113, bytetest_bf);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(tmp127, carryQ.get_carry_in(18), tmp128));
        tmp129 = simd_and(tmp128, bytetest_a3_a3);
        struct_Sk.cc = simd_or(tmp129, struct_Sk.cc);
        carryQ.CarryQ_Adjust(19);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Sk & struct_Sk, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_5e_5e, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, bytetest_60_60, tmp12, tmp13, tmp14, tmp15, bytetest_c2;
		BitBlock tmp16, tmp17, tmp18, tmp19, bytetest_a8_a8, tmp20, tmp21, tmp22;
		BitBlock tmp23, tmp24, tmp25, tmp26, bytetest_af_af, tmp27, tmp28, tmp29;
		BitBlock tmp30, tmp31, bytetest_b4_b4, tmp32, bytetest_b8_b8, tmp33, tmp34;
		BitBlock bytetest_cb, tmp35, tmp36, tmp37, tmp38, bytetest_82_85, tmp39, tmp40;
		BitBlock tmp41, tmp42, tmp43, tmp44, bytetest_92_9f, tmp45, tmp46, tmp47;
		BitBlock tmp48, bytetest_a5_ab, tmp49, tmp50, tmp51, bytetest_ad_ad, tmp52;
		BitBlock tmp53, tmp54, bytetest_af_bf, tmp55, bytetest_cd, tmp56;
		BitBlock bytetest_b5_b5, tmp57, tmp58, tmp59, bytetest_ce, tmp60;
		BitBlock bytetest_84_85, tmp61, tmp62, tmp63, tmp64, tmp65, bytetest_e1;
		BitBlock bytetest_be, bytetest_bd_bd, tmp66, tmp67, tmp68, tmp69, tmp70;
		BitBlock bytetest_bf, tmp71, bytetest_80_81, tmp72, tmp73, tmp74;
		BitBlock bytetest_bf_bf, tmp75, tmp76, tmp77, bytetest_8d_8f, tmp78, tmp79;
		BitBlock bytetest_9d_9f, tmp80, tmp81, bytetest_ad_af, tmp82, tmp83, tmp84;
		BitBlock tmp85, bytetest_bd_be, tmp86, tmp87, bytetest_e3, bytetest_82, tmp88;
		BitBlock tmp89, tmp90, bytetest_9b_9c, tmp91, tmp92, tmp93, tmp94, tmp95;
		BitBlock tmp96, bytetest_ea, tmp97, bytetest_9c, tmp98, tmp99, tmp100, tmp101;
		BitBlock bytetest_80_96, tmp102, tmp103, tmp104, tmp105, tmp106;
		BitBlock bytetest_a0_a1, tmp107, bytetest_9e, tmp108, bytetest_89_8a, tmp109;
		BitBlock tmp110, tmp111, bytetest_ef, bytetest_af, tmp112, tmp113, tmp114;
		BitBlock tmp115, tmp116, bytetest_ae, bytetest_b2_bf, tmp117, tmp118, tmp119;
		BitBlock tmp120, bytetest_bc, bytetest_be_be, tmp121, tmp122, tmp123;
		BitBlock bytetest_bd, bytetest_80_80, tmp124, tmp125, tmp126, bytetest_a3_a3;
		BitBlock tmp127, tmp128, tmp129;




        struct_Sk.cc = simd<1>::constant<0>();
        tmp1 = simd_andc(basis_bits.bit_1, basis_bits.bit_0);
        tmp2 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp3 = simd_and(tmp1, tmp2);
        tmp4 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_and(tmp4, tmp5);
        bytetest_5e_5e = simd_and(tmp3, tmp6);
        struct_Sk.cc = simd_or(bytetest_5e_5e, struct_Sk.cc);
        tmp7 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp8 = simd_and(tmp1, tmp7);
        tmp9 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp10 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp11 = simd_or(tmp9, tmp10);
        bytetest_60_60 = simd_andc(tmp8, tmp11);
        struct_Sk.cc = simd_or(bytetest_60_60, struct_Sk.cc);
        tmp12 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp13 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp14 = simd_andc(tmp12, tmp13);
        tmp15 = simd_andc(tmp5, tmp9);
        bytetest_c2 = simd_and(tmp14, tmp15);
        tmp16 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp17 = simd_and(tmp16, tmp7);
        tmp18 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp19 = simd_andc(tmp18, tmp10);
        bytetest_a8_a8 = simd_and(tmp17, tmp19);
        tmp20 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp20, carryQ.get_carry_in(0), tmp21));
        tmp22 = simd_and(tmp21, bytetest_c2);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp22, carryQ.get_carry_in(1), tmp23));
        tmp24 = simd_and(tmp23, bytetest_a8_a8);
        struct_Sk.cc = simd_or(tmp24, struct_Sk.cc);
        bytetest_c2 = simd_and(tmp14, tmp15);
        tmp25 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp26 = simd_and(tmp4, tmp25);
        bytetest_af_af = simd_and(tmp17, tmp26);
        tmp27 = simd_and(tmp23, bytetest_af_af);
        struct_Sk.cc = simd_or(tmp27, struct_Sk.cc);
        bytetest_c2 = simd_and(tmp14, tmp15);
        tmp28 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp29 = simd_and(tmp16, tmp28);
        tmp30 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp31 = simd_andc(tmp30, tmp10);
        bytetest_b4_b4 = simd_and(tmp29, tmp31);
        tmp32 = simd_and(tmp23, bytetest_b4_b4);
        struct_Sk.cc = simd_or(tmp32, struct_Sk.cc);
        bytetest_c2 = simd_and(tmp14, tmp15);
        bytetest_b8_b8 = simd_and(tmp29, tmp19);
        tmp33 = simd_and(tmp23, bytetest_b8_b8);
        struct_Sk.cc = simd_or(tmp33, struct_Sk.cc);
        tmp34 = simd_and(tmp18, tmp25);
        bytetest_cb = simd_and(tmp14, tmp34);
        tmp35 = simd_andc(tmp16, tmp13);
        tmp36 = simd_andc(tmp35, basis_bits.bit_4);
        tmp37 = simd_not(basis_bits.bit_6);
        tmp38 = simd_or(simd_and(basis_bits.bit_5, tmp37), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        bytetest_82_85 = simd_and(tmp36, tmp38);
        tmp39 = simd_and(tmp21, bytetest_cb);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp39, carryQ.get_carry_in(2), tmp40));
        tmp41 = simd_and(tmp40, bytetest_82_85);
        struct_Sk.cc = simd_or(tmp41, struct_Sk.cc);
        bytetest_cb = simd_and(tmp14, tmp34);
        tmp42 = simd_and(tmp16, tmp2);
        tmp43 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
        tmp44 = simd_or(basis_bits.bit_4, tmp43);
        bytetest_92_9f = simd_and(tmp42, tmp44);
        tmp45 = simd_and(tmp40, bytetest_92_9f);
        struct_Sk.cc = simd_or(tmp45, struct_Sk.cc);
        bytetest_cb = simd_and(tmp14, tmp34);
        tmp46 = simd_not(basis_bits.bit_5);
        tmp47 = simd_and(basis_bits.bit_5, tmp10);
        tmp48 = simd_or(simd_and(basis_bits.bit_4, tmp46), simd_andc(tmp47, basis_bits.bit_4));
        bytetest_a5_ab = simd_and(tmp17, tmp48);
        tmp49 = simd_and(tmp40, bytetest_a5_ab);
        struct_Sk.cc = simd_or(tmp49, struct_Sk.cc);
        bytetest_cb = simd_and(tmp14, tmp34);
        tmp50 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp51 = simd_and(tmp4, tmp50);
        bytetest_ad_ad = simd_and(tmp17, tmp51);
        tmp52 = simd_and(tmp40, bytetest_ad_ad);
        struct_Sk.cc = simd_or(tmp52, struct_Sk.cc);
        bytetest_cb = simd_and(tmp14, tmp34);
        tmp53 = simd_and(tmp16, basis_bits.bit_2);
        tmp54 = simd_or(basis_bits.bit_3, tmp26);
        bytetest_af_bf = simd_and(tmp53, tmp54);
        tmp55 = simd_and(tmp40, bytetest_af_bf);
        struct_Sk.cc = simd_or(tmp55, struct_Sk.cc);
        bytetest_cd = simd_and(tmp14, tmp51);
        tmp56 = simd_and(tmp30, tmp50);
        bytetest_b5_b5 = simd_and(tmp29, tmp56);
        tmp57 = simd_and(tmp21, bytetest_cd);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp57, carryQ.get_carry_in(3), tmp58));
        tmp59 = simd_and(tmp58, bytetest_b5_b5);
        struct_Sk.cc = simd_or(tmp59, struct_Sk.cc);
        bytetest_ce = simd_and(tmp14, tmp6);
        tmp60 = simd_andc(tmp30, basis_bits.bit_6);
        bytetest_84_85 = simd_and(tmp35, tmp60);
        tmp61 = simd_and(tmp21, bytetest_ce);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp61, carryQ.get_carry_in(4), tmp62));
        tmp63 = simd_and(tmp62, bytetest_84_85);
        struct_Sk.cc = simd_or(tmp63, struct_Sk.cc);
        tmp64 = simd_and(tmp12, tmp7);
        tmp65 = simd_andc(tmp50, tmp9);
        bytetest_e1 = simd_and(tmp64, tmp65);
        bytetest_be = simd_and(tmp29, tmp6);
        bytetest_bd_bd = simd_and(tmp29, tmp51);
        tmp66 = simd_and(tmp21, bytetest_e1);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp66, carryQ.get_carry_in(5), tmp67));
        tmp68 = simd_and(tmp67, bytetest_be);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp68, carryQ.get_carry_in(6), tmp69));
        tmp70 = simd_and(tmp69, bytetest_bd_bd);
        struct_Sk.cc = simd_or(tmp70, struct_Sk.cc);
        bytetest_e1 = simd_and(tmp64, tmp65);
        bytetest_bf = simd_and(tmp29, tmp26);
        tmp71 = simd_or(tmp9, basis_bits.bit_6);
        bytetest_80_81 = simd_andc(tmp35, tmp71);
        tmp72 = simd_and(tmp67, bytetest_bf);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp72, carryQ.get_carry_in(7), tmp73));
        tmp74 = simd_and(tmp73, bytetest_80_81);
        bytetest_be = simd_and(tmp29, tmp6);
        bytetest_bf_bf = simd_and(tmp29, tmp26);
        tmp75 = simd_and(tmp69, bytetest_bf_bf);
        tmp76 = simd_or(tmp75, tmp74);
        struct_Sk.cc = simd_or(tmp76, struct_Sk.cc);
        bytetest_e1 = simd_and(tmp64, tmp65);
        bytetest_bf = simd_and(tmp29, tmp26);
        tmp77 = simd_and(tmp35, tmp4);
        bytetest_8d_8f = simd_and(tmp77, tmp10);
        tmp78 = simd_and(tmp73, bytetest_8d_8f);
        struct_Sk.cc = simd_or(tmp78, struct_Sk.cc);
        bytetest_e1 = simd_and(tmp64, tmp65);
        bytetest_bf = simd_and(tmp29, tmp26);
        tmp79 = simd_and(tmp42, tmp4);
        bytetest_9d_9f = simd_and(tmp79, tmp10);
        tmp80 = simd_and(tmp73, bytetest_9d_9f);
        struct_Sk.cc = simd_or(tmp80, struct_Sk.cc);
        bytetest_e1 = simd_and(tmp64, tmp65);
        bytetest_bf = simd_and(tmp29, tmp26);
        tmp81 = simd_and(tmp17, tmp4);
        bytetest_ad_af = simd_and(tmp81, tmp10);
        tmp82 = simd_and(tmp73, bytetest_ad_af);
        struct_Sk.cc = simd_or(tmp82, struct_Sk.cc);
        bytetest_e1 = simd_and(tmp64, tmp65);
        bytetest_bf = simd_and(tmp29, tmp26);
        tmp83 = simd_and(tmp29, tmp4);
        tmp84 = simd_not(basis_bits.bit_7);
        tmp85 = simd_or(simd_and(basis_bits.bit_6, tmp84), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
        bytetest_bd_be = simd_and(tmp83, tmp85);
        tmp86 = simd_and(tmp73, bytetest_bd_be);
        struct_Sk.cc = simd_or(tmp86, struct_Sk.cc);
        tmp87 = simd_andc(tmp25, tmp9);
        bytetest_e3 = simd_and(tmp64, tmp87);
        bytetest_82 = simd_and(tmp35, tmp15);
        tmp88 = simd_and(tmp42, basis_bits.bit_4);
        tmp89 = simd_not(tmp10);
        tmp90 = simd_or(simd_and(basis_bits.bit_5, tmp89), simd_andc(tmp25, basis_bits.bit_5));
        bytetest_9b_9c = simd_and(tmp88, tmp90);
        tmp91 = simd_and(tmp21, bytetest_e3);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(tmp91, carryQ.get_carry_in(8), tmp92));
        tmp93 = simd_and(tmp92, bytetest_82);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(tmp93, carryQ.get_carry_in(9), tmp94));
        tmp95 = simd_and(tmp94, bytetest_9b_9c);
        struct_Sk.cc = simd_or(tmp95, struct_Sk.cc);
        tmp96 = simd_and(tmp18, tmp5);
        bytetest_ea = simd_and(tmp64, tmp96);
        tmp97 = simd_andc(tmp4, tmp10);
        bytetest_9c = simd_and(tmp42, tmp97);
        tmp98 = simd_andc(tmp16, basis_bits.bit_2);
        tmp99 = simd_and(basis_bits.bit_5, tmp25);
        tmp100 = simd_or(basis_bits.bit_4, tmp99);
        tmp101 = simd_and(basis_bits.bit_3, tmp100);
        bytetest_80_96 = simd_andc(tmp98, tmp101);
        tmp102 = simd_and(tmp21, bytetest_ea);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(tmp102, carryQ.get_carry_in(10), tmp103));
        tmp104 = simd_and(tmp103, bytetest_9c);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(tmp104, carryQ.get_carry_in(11), tmp105));
        tmp106 = simd_and(tmp105, bytetest_80_96);
        struct_Sk.cc = simd_or(tmp106, struct_Sk.cc);
        bytetest_ea = simd_and(tmp64, tmp96);
        bytetest_9c = simd_and(tmp42, tmp97);
        bytetest_a0_a1 = simd_andc(tmp17, tmp71);
        tmp107 = simd_and(tmp105, bytetest_a0_a1);
        struct_Sk.cc = simd_or(tmp107, struct_Sk.cc);
        bytetest_ea = simd_and(tmp64, tmp96);
        bytetest_9e = simd_and(tmp42, tmp6);
        tmp108 = simd_and(tmp35, tmp18);
        bytetest_89_8a = simd_and(tmp108, tmp85);
        tmp109 = simd_and(tmp103, bytetest_9e);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(tmp109, carryQ.get_carry_in(12), tmp110));
        tmp111 = simd_and(tmp110, bytetest_89_8a);
        struct_Sk.cc = simd_or(tmp111, struct_Sk.cc);
        bytetest_ef = simd_and(tmp64, tmp26);
        bytetest_af = simd_and(tmp17, tmp26);
        bytetest_80_81 = simd_andc(tmp35, tmp71);
        tmp112 = simd_and(tmp21, bytetest_ef);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(tmp112, carryQ.get_carry_in(13), tmp113));
        tmp114 = simd_and(tmp113, bytetest_af);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(tmp114, carryQ.get_carry_in(14), tmp115));
        tmp116 = simd_and(tmp115, bytetest_80_81);
        bytetest_ae = simd_and(tmp17, tmp6);
        bytetest_b2_bf = simd_and(tmp29, tmp44);
        tmp117 = simd_and(tmp113, bytetest_ae);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(tmp117, carryQ.get_carry_in(15), tmp118));
        tmp119 = simd_and(tmp118, bytetest_b2_bf);
        tmp120 = simd_or(tmp119, tmp116);
        struct_Sk.cc = simd_or(tmp120, struct_Sk.cc);
        bytetest_ef = simd_and(tmp64, tmp26);
        bytetest_bc = simd_and(tmp29, tmp97);
        bytetest_be_be = simd_and(tmp29, tmp6);
        tmp121 = simd_and(tmp113, bytetest_bc);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(tmp121, carryQ.get_carry_in(16), tmp122));
        tmp123 = simd_and(tmp122, bytetest_be_be);
        struct_Sk.cc = simd_or(tmp123, struct_Sk.cc);
        bytetest_ef = simd_and(tmp64, tmp26);
        bytetest_bd = simd_and(tmp29, tmp51);
        bytetest_80_80 = simd_andc(tmp35, tmp11);
        tmp124 = simd_and(tmp113, bytetest_bd);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(tmp124, carryQ.get_carry_in(17), tmp125));
        tmp126 = simd_and(tmp125, bytetest_80_80);
        struct_Sk.cc = simd_or(tmp126, struct_Sk.cc);
        bytetest_ef = simd_and(tmp64, tmp26);
        bytetest_bf = simd_and(tmp29, tmp26);
        bytetest_a3_a3 = simd_and(tmp17, tmp87);
        tmp127 = simd_and(tmp113, bytetest_bf);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(tmp127, carryQ.get_carry_in(18), tmp128));
        tmp129 = simd_and(tmp128, bytetest_a3_a3);
        struct_Sk.cc = simd_or(tmp129, struct_Sk.cc);
  }
  CarryArray<19, 0> carryQ;
  };

  struct So {
  So() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_So & struct_So) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_c2, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, bytetest_a6_a6, tmp12, tmp13, tmp14, tmp15, tmp16;
		BitBlock tmp17, tmp18, tmp19, bytetest_a9_a9, tmp20, tmp21, tmp22;
		BitBlock bytetest_ae_ae, tmp23, tmp24, tmp25, tmp26, tmp27, bytetest_b0_b0;
		BitBlock tmp28, tmp29, tmp30, bytetest_d2, tmp31, bytetest_82_82, tmp32, tmp33;
		BitBlock tmp34, tmp35, bytetest_d8, tmp36, bytetest_8e_8f, tmp37, tmp38, tmp39;
		BitBlock tmp40, tmp41, bytetest_db, tmp42, bytetest_9e_9e, tmp43, tmp44, tmp45;
		BitBlock tmp46, tmp47, tmp48, tmp49, bytetest_bd_be, tmp50, tmp51, bytetest_df;
		BitBlock bytetest_b6_b6, tmp52, tmp53, tmp54, tmp55, bytetest_e0, tmp56;
		BitBlock bytetest_a7, tmp57, bytetest_ba_ba, tmp58, tmp59, tmp60, tmp61, tmp62;
		BitBlock tmp63, bytetest_ad, tmp64, tmp65, tmp66, bytetest_af, tmp67, tmp68;
		BitBlock tmp69, tmp70, bytetest_b3_b8, tmp71, tmp72, tmp73, tmp74, tmp75;
		BitBlock bytetest_b1, bytetest_bf_bf, tmp76, tmp77, tmp78, tmp79, bytetest_b5;
		BitBlock bytetest_b9_b9, tmp80, tmp81, tmp82, tmp83, bytetest_bc, tmp84;
		BitBlock bytetest_81_83, tmp85, tmp86, tmp87, tmp88, bytetest_93_93, tmp89;
		BitBlock tmp90, bytetest_95_97, tmp91, tmp92, tmp93, bytetest_9a_9f, tmp94;
		BitBlock tmp95, bytetest_b4_b4, tmp96, tmp97, bytetest_b8_b8, tmp98;
		BitBlock bytetest_bf, tmp99, tmp100, bytetest_80_85, tmp101, tmp102, tmp103;
		BitBlock bytetest_be, bytetest_be_bf, tmp104, tmp105, tmp106, tmp107, tmp108;
		BitBlock tmp109, tmp110, tmp111, bytetest_87_8c, tmp112, tmp113, tmp114;
		BitBlock bytetest_95_98, tmp115, bytetest_e1, bytetest_82, bytetest_9e_9f;
		BitBlock tmp116, tmp117, tmp118, tmp119, tmp120, bytetest_8e, tmp121;
		BitBlock bytetest_90_99, tmp122, tmp123, tmp124, bytetest_a5, bytetest_80_80;
		BitBlock tmp125, tmp126, tmp127, tmp128, tmp129, bytetest_9e_bf, tmp130;
		BitBlock tmp131, tmp132, tmp133, tmp134, bytetest_a1_aa, tmp135, tmp136;
		BitBlock tmp137, tmp138, bytetest_b4_bc, tmp139, bytetest_e2, bytetest_84;
		BitBlock tmp140, bytetest_80_81, tmp141, tmp142, tmp143, tmp144, tmp145;
		BitBlock tmp146, tmp147, bytetest_83_86, tmp148, tmp149, bytetest_88_89;
		BitBlock tmp150, bytetest_94_94, tmp151, tmp152, bytetest_96_97, tmp153;
		BitBlock tmp154, tmp155, tmp156, bytetest_9e_a3, tmp157, bytetest_a5_a5;
		BitBlock tmp158, bytetest_a7_a7, tmp159, tmp160, tmp161, tmp162;
		BitBlock bytetest_ba_bb, tmp163, bytetest_85, bytetest_8a_8a, tmp164, tmp165;
		BitBlock tmp166, tmp167, bytetest_8c_8d, tmp168, bytetest_8f_8f, tmp169;
		BitBlock bytetest_86, tmp170, tmp171, bytetest_95_99, tmp172, tmp173, tmp174;
		BitBlock bytetest_9c_9f, tmp175, tmp176, bytetest_a1_a2, tmp177, tmp178;
		BitBlock bytetest_a4_a5, tmp179, tmp180, tmp181, bytetest_a7_ad, tmp182;
		BitBlock bytetest_87, tmp183, bytetest_80_8d, tmp184, tmp185, tmp186, tmp187;
		BitBlock tmp188, bytetest_af_bf, tmp189, tmp190, bytetest_90_91, tmp191;
		BitBlock tmp192, tmp193, tmp194, tmp195, tmp196, tmp197, bytetest_95_b3;
		BitBlock tmp198, bytetest_8c, bytetest_80_87, tmp199, tmp200, tmp201, tmp202;
		BitBlock tmp203, bytetest_8c_9f, tmp204, tmp205, bytetest_a2_a8, tmp206;
		BitBlock bytetest_8d, tmp207, tmp208, bytetest_80_bb, tmp209, tmp210, tmp211;
		BitBlock tmp212, tmp213, bytetest_ab_bf, tmp214, tmp215, tmp216;
		BitBlock bytetest_80_9a, tmp217, tmp218, tmp219, bytetest_bd_bf, tmp220;
		BitBlock tmp221, bytetest_8f, bytetest_80_9b, tmp222, tmp223, tmp224;
		BitBlock bytetest_b4_bf, tmp225, tmp226, tmp227, tmp228, bytetest_a2_b3;
		BitBlock tmp229, bytetest_90, tmp230, tmp231, tmp232, bytetest_80_a6, tmp233;
		BitBlock tmp234, tmp235, bytetest_91, bytetest_80_8a, tmp236, tmp237, tmp238;
		BitBlock bytetest_93, tmp239, tmp240, bytetest_80_a9, tmp241, tmp242, tmp243;
		BitBlock bytetest_92, tmp244, bytetest_9c_bf, tmp245, tmp246, tmp247, tmp248;
		BitBlock bytetest_96, tmp249, tmp250, bytetest_80_b6, tmp251, tmp252, tmp253;
		BitBlock bytetest_94_95, bytetest_80_bf, tmp254, tmp255, tmp256, tmp257;
		BitBlock tmp258, bytetest_97, tmp259, tmp260, tmp261, tmp262, tmp263;
		BitBlock bytetest_b8_bf, tmp264, tmp265, tmp266, tmp267, tmp268, tmp269;
		BitBlock bytetest_82_b7, tmp270, bytetest_99, tmp271, bytetest_80_ae, tmp272;
		BitBlock tmp273, tmp274, bytetest_98, tmp275, tmp276, tmp277, tmp278;
		BitBlock bytetest_9a_9b, tmp279, tmp280, tmp281, bytetest_b0_bf, tmp282;
		BitBlock tmp283, bytetest_9d, tmp284, tmp285, bytetest_80_a7, tmp286, tmp287;
		BitBlock tmp288, bytetest_9c, tmp289, tmp290, bytetest_81_bf, tmp291, tmp292;
		BitBlock tmp293, tmp294, bytetest_9e, tmp295, bytetest_94_bf, tmp296, tmp297;
		BitBlock tmp298, tmp299, bytetest_a0_a3, tmp300, tmp301, tmp302, bytetest_ac;
		BitBlock bytetest_80_af, tmp303, tmp304, tmp305, tmp306, bytetest_85_86;
		BitBlock tmp307, tmp308, tmp309, tmp310, bytetest_b3, tmp311, bytetest_a5_aa;
		BitBlock tmp312, tmp313, tmp314, bytetest_ba, tmp315, tmp316, bytetest_80_99;
		BitBlock tmp317, tmp318, tmp319, bytetest_bb, tmp320, bytetest_80_b3, tmp321;
		BitBlock tmp322, tmp323, tmp324, bytetest_9b_bf, tmp325, tmp326, tmp327;
		BitBlock tmp328, bytetest_80_95, tmp329, tmp330, tmp331, tmp332;
		BitBlock bytetest_bc_be, tmp333, tmp334, tmp335, tmp336, bytetest_b0_bb;
		BitBlock tmp337, bytetest_e3, bytetest_80, bytetest_84_84, tmp338, tmp339;
		BitBlock tmp340, tmp341, tmp342, tmp343, bytetest_92_93, tmp344;
		BitBlock bytetest_a0_a0, tmp345, bytetest_b6_b7, tmp346, tmp347, tmp348;
		BitBlock tmp349, tmp350, bytetest_96_9f, tmp351, tmp352, bytetest_80_a3;
		BitBlock tmp353, tmp354, tmp355, bytetest_88, tmp356, bytetest_80_9e, tmp357;
		BitBlock tmp358, tmp359, bytetest_89, tmp360, tmp361, tmp362, tmp363;
		BitBlock bytetest_aa_bf, tmp364, tmp365, bytetest_90_90, tmp366;
		BitBlock bytetest_a0_bf, tmp367, bytetest_8a, tmp368, tmp369, tmp370;
		BitBlock bytetest_8a_b0, tmp371, tmp372, tmp373, bytetest_8b, tmp374;
		BitBlock bytetest_80_be, tmp375, tmp376, tmp377, bytetest_8c_8f, tmp378;
		BitBlock tmp379, tmp380, bytetest_e4, bytetest_b7, tmp381, tmp382, tmp383;
		BitBlock tmp384, tmp385, bytetest_ea, bytetest_80_86, tmp386, tmp387, tmp388;
		BitBlock tmp389, tmp390, bytetest_90_bf, tmp391, tmp392, tmp393, tmp394;
		BitBlock bytetest_a0, bytetest_a8_ab, tmp395, tmp396, tmp397, tmp398, tmp399;
		BitBlock bytetest_a9, tmp400, bytetest_b7_b9, tmp401, tmp402, tmp403;
		BitBlock bytetest_ef, bytetest_bd_bd, tmp404, tmp405, tmp406, tmp407, tmp408;
		BitBlock bytetest_a4_a4, tmp409, tmp410, tmp411, bytetest_a8_a8, tmp412;
		BitBlock tmp413, bytetest_ad_ae, tmp414, bytetest_bc_bd, tmp415, tmp416;
		BitBlock bytetest_f0, bytetest_b7_bf, tmp417, tmp418, tmp419, tmp420, tmp421;
		BitBlock tmp422, tmp423, bytetest_80_89, tmp424, tmp425, tmp426, tmp427;
		BitBlock bytetest_b9_bf, tmp428, tmp429, tmp430, tmp431, bytetest_90_9b;
		BitBlock tmp432, tmp433, tmp434, tmp435, tmp436, bytetest_90_bc, tmp437;
		BitBlock tmp438, tmp439, bytetest_83, tmp440, bytetest_80_b5, tmp441, tmp442;
		BitBlock tmp443, tmp444, tmp445, tmp446, bytetest_80_82, tmp447, tmp448;
		BitBlock tmp449, tmp450, tmp451, tmp452, tmp453, tmp454, tmp455;
		BitBlock bytetest_80_a4, tmp456, tmp457, tmp458, tmp459, tmp460;
		BitBlock bytetest_a9_bf, tmp461, tmp462, tmp463, tmp464, tmp465;
		BitBlock bytetest_aa_ac, tmp466, tmp467, bytetest_83_84, tmp468, tmp469;
		BitBlock tmp470, tmp471, tmp472, bytetest_8c_a9, tmp473, bytetest_80_9d;
		BitBlock tmp474, tmp475, tmp476, tmp477, bytetest_ae_bf, tmp478, tmp479;
		BitBlock tmp480, tmp481, tmp482, tmp483, tmp484, tmp485, tmp486;
		BitBlock bytetest_85_85, tmp487, bytetest_80_96, tmp488, tmp489, tmp490;
		BitBlock tmp491, tmp492, tmp493, tmp494, bytetest_9f, tmp495, bytetest_80_ab;
		BitBlock tmp496, tmp497, tmp498, tmp499, tmp500, bytetest_80_93, tmp501;
		BitBlock tmp502, tmp503, bytetest_81, tmp504, tmp505, tmp506, tmp507, tmp508;
		BitBlock tmp509, tmp510, bytetest_a0_ae, tmp511, tmp512, tmp513;
		BitBlock bytetest_b1_be, tmp514, tmp515, bytetest_81_8f, tmp516, tmp517;
		BitBlock tmp518, bytetest_91_9f, tmp519, tmp520, tmp521, bytetest_90_ae;
		BitBlock tmp522, tmp523, tmp524, tmp525, tmp526, tmp527, tmp528, tmp529;
		BitBlock tmp530, tmp531, tmp532, tmp533, tmp534, tmp535, tmp536, tmp537;
		BitBlock tmp538, bytetest_a6_bf, tmp539, tmp540, tmp541, tmp542, tmp543;
		BitBlock tmp544, bytetest_90_ba, tmp545, bytetest_80_88, tmp546, tmp547;
		BitBlock tmp548, tmp549, tmp550, bytetest_80_a0, tmp551, tmp552, tmp553;
		BitBlock tmp554, bytetest_b0_b5, tmp555, tmp556, bytetest_80_bc, tmp557;
		BitBlock tmp558, tmp559, tmp560, tmp561, tmp562, tmp563, tmp564;
		BitBlock bytetest_80_84, tmp565, tmp566, tmp567, tmp568, tmp569, tmp570;
		BitBlock bytetest_86_8a, tmp571, bytetest_a0_b0, tmp572, tmp573, tmp574;
		BitBlock tmp575, tmp576, tmp577, tmp578, tmp579, bytetest_80_b7, tmp580;
		BitBlock tmp581, tmp582, tmp583, tmp584, tmp585, tmp586, bytetest_82_bf;
		BitBlock tmp587, tmp588, tmp589, tmp590, bytetest_b9_bc, tmp591, bytetest_94;
		BitBlock tmp592, bytetest_80_bd, tmp593, tmp594, tmp595, bytetest_95;
		BitBlock bytetest_80_83, tmp596, tmp597, tmp598, tmp599, tmp600;
		BitBlock bytetest_90_a7, tmp601, tmp602, tmp603, tmp604, tmp605, tmp606;
		BitBlock tmp607, bytetest_bb_bf, tmp608, tmp609, tmp610, tmp611, tmp612;
		BitBlock bytetest_85_8f, tmp613, bytetest_9b, tmp614, tmp615, tmp616;
		BitBlock bytetest_9a, tmp617, tmp618, tmp619, tmp620, tmp621, tmp622, tmp623;
		BitBlock tmp624, tmp625, tmp626, tmp627;




        struct_So.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_andc(tmp5, tmp4);
        bytetest_c2 = simd_and(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp11 = simd_and(tmp10, tmp5);
        bytetest_a6_a6 = simd_and(tmp9, tmp11);
        tmp12 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp12, carryQ.get_carry_in(0), tmp13));
        tmp14 = simd_and(tmp13, bytetest_c2);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp14, carryQ.get_carry_in(1), tmp15));
        tmp16 = simd_and(tmp15, bytetest_a6_a6);
        struct_So.cc = simd_or(tmp16, struct_So.cc);
        bytetest_c2 = simd_and(tmp3, tmp6);
        tmp17 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp18 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp19 = simd_and(tmp17, tmp18);
        bytetest_a9_a9 = simd_and(tmp9, tmp19);
        tmp20 = simd_and(tmp15, bytetest_a9_a9);
        struct_So.cc = simd_or(tmp20, struct_So.cc);
        bytetest_c2 = simd_and(tmp3, tmp6);
        tmp21 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp22 = simd_and(tmp21, tmp5);
        bytetest_ae_ae = simd_and(tmp9, tmp22);
        tmp23 = simd_and(tmp15, bytetest_ae_ae);
        struct_So.cc = simd_or(tmp23, struct_So.cc);
        bytetest_c2 = simd_and(tmp3, tmp6);
        tmp24 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp25 = simd_and(tmp7, tmp24);
        tmp26 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp27 = simd_or(tmp4, tmp26);
        bytetest_b0_b0 = simd_andc(tmp25, tmp27);
        tmp28 = simd_and(tmp15, bytetest_b0_b0);
        struct_So.cc = simd_or(tmp28, struct_So.cc);
        tmp29 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp30 = simd_and(tmp1, tmp29);
        bytetest_d2 = simd_and(tmp30, tmp6);
        tmp31 = simd_andc(tmp7, tmp2);
        bytetest_82_82 = simd_and(tmp31, tmp6);
        tmp32 = simd_and(tmp13, bytetest_d2);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp32, carryQ.get_carry_in(2), tmp33));
        tmp34 = simd_and(tmp33, bytetest_82_82);
        struct_So.cc = simd_or(tmp34, struct_So.cc);
        tmp35 = simd_andc(tmp17, tmp26);
        bytetest_d8 = simd_and(tmp30, tmp35);
        tmp36 = simd_and(tmp21, basis_bits.bit_6);
        bytetest_8e_8f = simd_and(tmp31, tmp36);
        tmp37 = simd_and(tmp13, bytetest_d8);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp37, carryQ.get_carry_in(3), tmp38));
        tmp39 = simd_and(tmp38, bytetest_8e_8f);
        struct_So.cc = simd_or(tmp39, struct_So.cc);
        tmp40 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp41 = simd_and(tmp17, tmp40);
        bytetest_db = simd_and(tmp30, tmp41);
        tmp42 = simd_and(tmp7, tmp29);
        bytetest_9e_9e = simd_and(tmp42, tmp22);
        tmp43 = simd_and(tmp13, bytetest_db);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp43, carryQ.get_carry_in(4), tmp44));
        tmp45 = simd_and(tmp44, bytetest_9e_9e);
        struct_So.cc = simd_or(tmp45, struct_So.cc);
        bytetest_db = simd_and(tmp30, tmp41);
        bytetest_a9_a9 = simd_and(tmp9, tmp19);
        tmp46 = simd_and(tmp44, bytetest_a9_a9);
        struct_So.cc = simd_or(tmp46, struct_So.cc);
        bytetest_db = simd_and(tmp30, tmp41);
        tmp47 = simd_and(tmp25, tmp21);
        tmp48 = simd_not(basis_bits.bit_7);
        tmp49 = simd_or(simd_and(basis_bits.bit_6, tmp48), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
        bytetest_bd_be = simd_and(tmp47, tmp49);
        tmp50 = simd_and(tmp44, bytetest_bd_be);
        struct_So.cc = simd_or(tmp50, struct_So.cc);
        tmp51 = simd_and(tmp21, tmp40);
        bytetest_df = simd_and(tmp30, tmp51);
        bytetest_b6_b6 = simd_and(tmp25, tmp11);
        tmp52 = simd_and(tmp13, bytetest_df);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp52, carryQ.get_carry_in(5), tmp53));
        tmp54 = simd_and(tmp53, bytetest_b6_b6);
        struct_So.cc = simd_or(tmp54, struct_So.cc);
        tmp55 = simd_and(tmp1, tmp8);
        bytetest_e0 = simd_andc(tmp55, tmp27);
        tmp56 = simd_and(tmp10, tmp40);
        bytetest_a7 = simd_and(tmp9, tmp56);
        tmp57 = simd_and(tmp17, tmp5);
        bytetest_ba_ba = simd_and(tmp25, tmp57);
        tmp58 = simd_and(tmp13, bytetest_e0);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp58, carryQ.get_carry_in(6), tmp59));
        tmp60 = simd_and(tmp59, bytetest_a7);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp60, carryQ.get_carry_in(7), tmp61));
        tmp62 = simd_and(tmp61, bytetest_ba_ba);
        struct_So.cc = simd_or(tmp62, struct_So.cc);
        bytetest_e0 = simd_andc(tmp55, tmp27);
        tmp63 = simd_and(tmp21, tmp18);
        bytetest_ad = simd_and(tmp9, tmp63);
        bytetest_b0_b0 = simd_andc(tmp25, tmp27);
        tmp64 = simd_and(tmp59, bytetest_ad);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(tmp64, carryQ.get_carry_in(8), tmp65));
        tmp66 = simd_and(tmp65, bytetest_b0_b0);
        struct_So.cc = simd_or(tmp66, struct_So.cc);
        bytetest_e0 = simd_andc(tmp55, tmp27);
        bytetest_af = simd_and(tmp9, tmp51);
        tmp67 = simd_or(basis_bits.bit_5, tmp26);
        tmp68 = simd_not(tmp67);
        tmp69 = simd_or(basis_bits.bit_5, tmp40);
        tmp70 = simd_or(simd_and(basis_bits.bit_4, tmp68), simd_andc(tmp69, basis_bits.bit_4));
        bytetest_b3_b8 = simd_and(tmp25, tmp70);
        tmp71 = simd_and(tmp59, bytetest_af);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(tmp71, carryQ.get_carry_in(9), tmp72));
        tmp73 = simd_and(tmp72, bytetest_b3_b8);
        struct_So.cc = simd_or(tmp73, struct_So.cc);
        bytetest_e0 = simd_andc(tmp55, tmp27);
        bytetest_af = simd_and(tmp9, tmp51);
        bytetest_ba_ba = simd_and(tmp25, tmp57);
        tmp74 = simd_and(tmp72, bytetest_ba_ba);
        struct_So.cc = simd_or(tmp74, struct_So.cc);
        bytetest_e0 = simd_andc(tmp55, tmp27);
        tmp75 = simd_andc(tmp18, tmp4);
        bytetest_b1 = simd_and(tmp25, tmp75);
        bytetest_bf_bf = simd_and(tmp25, tmp51);
        tmp76 = simd_and(tmp59, bytetest_b1);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(tmp76, carryQ.get_carry_in(10), tmp77));
        tmp78 = simd_and(tmp77, bytetest_bf_bf);
        struct_So.cc = simd_or(tmp78, struct_So.cc);
        bytetest_e0 = simd_andc(tmp55, tmp27);
        tmp79 = simd_and(tmp10, tmp18);
        bytetest_b5 = simd_and(tmp25, tmp79);
        bytetest_b9_b9 = simd_and(tmp25, tmp19);
        tmp80 = simd_and(tmp59, bytetest_b5);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(tmp80, carryQ.get_carry_in(11), tmp81));
        tmp82 = simd_and(tmp81, bytetest_b9_b9);
        struct_So.cc = simd_or(tmp82, struct_So.cc);
        bytetest_e0 = simd_andc(tmp55, tmp27);
        tmp83 = simd_andc(tmp21, tmp26);
        bytetest_bc = simd_and(tmp25, tmp83);
        tmp84 = simd_andc(tmp31, tmp4);
        bytetest_81_83 = simd_and(tmp84, tmp26);
        tmp85 = simd_and(tmp59, bytetest_bc);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(tmp85, carryQ.get_carry_in(12), tmp86));
        tmp87 = simd_and(tmp86, bytetest_81_83);
        struct_So.cc = simd_or(tmp87, struct_So.cc);
        bytetest_e0 = simd_andc(tmp55, tmp27);
        bytetest_bc = simd_and(tmp25, tmp83);
        tmp88 = simd_andc(tmp40, tmp4);
        bytetest_93_93 = simd_and(tmp42, tmp88);
        tmp89 = simd_and(tmp86, bytetest_93_93);
        struct_So.cc = simd_or(tmp89, struct_So.cc);
        bytetest_e0 = simd_andc(tmp55, tmp27);
        bytetest_bc = simd_and(tmp25, tmp83);
        tmp90 = simd_and(tmp42, tmp10);
        bytetest_95_97 = simd_and(tmp90, tmp26);
        tmp91 = simd_and(tmp86, bytetest_95_97);
        struct_So.cc = simd_or(tmp91, struct_So.cc);
        bytetest_e0 = simd_andc(tmp55, tmp27);
        bytetest_bc = simd_and(tmp25, tmp83);
        tmp92 = simd_and(tmp42, basis_bits.bit_4);
        tmp93 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
        bytetest_9a_9f = simd_and(tmp92, tmp93);
        tmp94 = simd_and(tmp86, bytetest_9a_9f);
        struct_So.cc = simd_or(tmp94, struct_So.cc);
        bytetest_e0 = simd_andc(tmp55, tmp27);
        bytetest_bc = simd_and(tmp25, tmp83);
        tmp95 = simd_andc(tmp10, tmp26);
        bytetest_b4_b4 = simd_and(tmp25, tmp95);
        tmp96 = simd_and(tmp86, bytetest_b4_b4);
        struct_So.cc = simd_or(tmp96, struct_So.cc);
        bytetest_e0 = simd_andc(tmp55, tmp27);
        bytetest_bc = simd_and(tmp25, tmp83);
        bytetest_b6_b6 = simd_and(tmp25, tmp11);
        tmp97 = simd_and(tmp86, bytetest_b6_b6);
        struct_So.cc = simd_or(tmp97, struct_So.cc);
        bytetest_e0 = simd_andc(tmp55, tmp27);
        bytetest_bc = simd_and(tmp25, tmp83);
        bytetest_b8_b8 = simd_and(tmp25, tmp35);
        tmp98 = simd_and(tmp86, bytetest_b8_b8);
        struct_So.cc = simd_or(tmp98, struct_So.cc);
        bytetest_e0 = simd_andc(tmp55, tmp27);
        bytetest_bf = simd_and(tmp25, tmp51);
        tmp99 = simd_andc(tmp31, basis_bits.bit_4);
        tmp100 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        bytetest_80_85 = simd_andc(tmp99, tmp100);
        tmp101 = simd_and(tmp59, bytetest_bf);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(tmp101, carryQ.get_carry_in(13), tmp102));
        tmp103 = simd_and(tmp102, bytetest_80_85);
        bytetest_be = simd_and(tmp25, tmp22);
        bytetest_be_bf = simd_and(tmp25, tmp36);
        tmp104 = simd_and(tmp59, bytetest_be);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(tmp104, carryQ.get_carry_in(14), tmp105));
        tmp106 = simd_and(tmp105, bytetest_be_bf);
        tmp107 = simd_or(tmp106, tmp103);
        struct_So.cc = simd_or(tmp107, struct_So.cc);
        bytetest_e0 = simd_andc(tmp55, tmp27);
        bytetest_bf = simd_and(tmp25, tmp51);
        tmp108 = simd_and(basis_bits.bit_5, tmp26);
        tmp109 = simd_not(tmp108);
        tmp110 = simd_and(basis_bits.bit_5, tmp40);
        tmp111 = simd_or(simd_and(basis_bits.bit_4, tmp109), simd_andc(tmp110, basis_bits.bit_4));
        bytetest_87_8c = simd_and(tmp31, tmp111);
        tmp112 = simd_and(tmp102, bytetest_87_8c);
        struct_So.cc = simd_or(tmp112, struct_So.cc);
        bytetest_e0 = simd_andc(tmp55, tmp27);
        bytetest_bf = simd_and(tmp25, tmp51);
        bytetest_8e_8f = simd_and(tmp31, tmp36);
        tmp113 = simd_and(tmp102, bytetest_8e_8f);
        struct_So.cc = simd_or(tmp113, struct_So.cc);
        bytetest_e0 = simd_andc(tmp55, tmp27);
        bytetest_bf = simd_and(tmp25, tmp51);
        tmp114 = simd_or(simd_and(basis_bits.bit_4, tmp68), simd_andc(tmp108, basis_bits.bit_4));
        bytetest_95_98 = simd_and(tmp42, tmp114);
        tmp115 = simd_and(tmp102, bytetest_95_98);
        struct_So.cc = simd_or(tmp115, struct_So.cc);
        bytetest_e1 = simd_and(tmp55, tmp75);
        bytetest_82 = simd_and(tmp31, tmp6);
        bytetest_9e_9f = simd_and(tmp42, tmp36);
        tmp116 = simd_and(tmp13, bytetest_e1);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(tmp116, carryQ.get_carry_in(15), tmp117));
        tmp118 = simd_and(tmp117, bytetest_82);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(tmp118, carryQ.get_carry_in(16), tmp119));
        tmp120 = simd_and(tmp119, bytetest_9e_9f);
        struct_So.cc = simd_or(tmp120, struct_So.cc);
        bytetest_e1 = simd_and(tmp55, tmp75);
        bytetest_8e = simd_and(tmp31, tmp22);
        tmp121 = simd_and(basis_bits.bit_4, tmp93);
        bytetest_90_99 = simd_andc(tmp42, tmp121);
        tmp122 = simd_and(tmp117, bytetest_8e);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(tmp122, carryQ.get_carry_in(17), tmp123));
        tmp124 = simd_and(tmp123, bytetest_90_99);
        struct_So.cc = simd_or(tmp124, struct_So.cc);
        bytetest_e1 = simd_and(tmp55, tmp75);
        bytetest_a5 = simd_and(tmp9, tmp79);
        bytetest_80_80 = simd_andc(tmp31, tmp27);
        tmp125 = simd_and(tmp117, bytetest_a5);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(tmp125, carryQ.get_carry_in(18), tmp126));
        tmp127 = simd_and(tmp126, bytetest_80_80);
        struct_So.cc = simd_or(tmp127, struct_So.cc);
        bytetest_e1 = simd_and(tmp55, tmp75);
        bytetest_a7 = simd_and(tmp9, tmp56);
        tmp128 = simd_and(basis_bits.bit_3, tmp36);
        tmp129 = simd_or(basis_bits.bit_2, tmp128);
        bytetest_9e_bf = simd_and(tmp7, tmp129);
        tmp130 = simd_and(tmp117, bytetest_a7);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(tmp130, carryQ.get_carry_in(19), tmp131));
        tmp132 = simd_and(tmp131, bytetest_9e_bf);
        struct_So.cc = simd_or(tmp132, struct_So.cc);
        bytetest_e1 = simd_and(tmp55, tmp75);
        bytetest_ad = simd_and(tmp9, tmp63);
        tmp133 = simd_not(tmp69);
        tmp134 = simd_or(simd_and(basis_bits.bit_4, tmp133), simd_andc(tmp67, basis_bits.bit_4));
        bytetest_a1_aa = simd_and(tmp9, tmp134);
        tmp135 = simd_and(tmp117, bytetest_ad);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(tmp135, carryQ.get_carry_in(20), tmp136));
        tmp137 = simd_and(tmp136, bytetest_a1_aa);
        struct_So.cc = simd_or(tmp137, struct_So.cc);
        bytetest_e1 = simd_and(tmp55, tmp75);
        bytetest_ad = simd_and(tmp9, tmp63);
        tmp138 = simd_or(simd_and(basis_bits.bit_4, tmp109), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
        bytetest_b4_bc = simd_and(tmp25, tmp138);
        tmp139 = simd_and(tmp136, bytetest_b4_bc);
        struct_So.cc = simd_or(tmp139, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_84 = simd_and(tmp31, tmp95);
        tmp140 = simd_or(tmp4, basis_bits.bit_6);
        bytetest_80_81 = simd_andc(tmp31, tmp140);
        tmp141 = simd_and(tmp13, bytetest_e2);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(tmp141, carryQ.get_carry_in(21), tmp142));
        tmp143 = simd_and(tmp142, bytetest_84);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(tmp143, carryQ.get_carry_in(22), tmp144));
        tmp145 = simd_and(tmp144, bytetest_80_81);
        struct_So.cc = simd_or(tmp145, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_84 = simd_and(tmp31, tmp95);
        tmp146 = simd_not(tmp40);
        tmp147 = simd_or(simd_and(basis_bits.bit_5, tmp146), simd_andc(tmp40, basis_bits.bit_5));
        bytetest_83_86 = simd_and(tmp99, tmp147);
        tmp148 = simd_and(tmp144, bytetest_83_86);
        struct_So.cc = simd_or(tmp148, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_84 = simd_and(tmp31, tmp95);
        tmp149 = simd_andc(tmp17, basis_bits.bit_6);
        bytetest_88_89 = simd_and(tmp31, tmp149);
        tmp150 = simd_and(tmp144, bytetest_88_89);
        struct_So.cc = simd_or(tmp150, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_84 = simd_and(tmp31, tmp95);
        bytetest_94_94 = simd_and(tmp42, tmp95);
        tmp151 = simd_and(tmp144, bytetest_94_94);
        struct_So.cc = simd_or(tmp151, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_84 = simd_and(tmp31, tmp95);
        tmp152 = simd_and(tmp10, basis_bits.bit_6);
        bytetest_96_97 = simd_and(tmp42, tmp152);
        tmp153 = simd_and(tmp144, bytetest_96_97);
        struct_So.cc = simd_or(tmp153, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_84 = simd_and(tmp31, tmp95);
        tmp154 = simd_or(basis_bits.bit_3, tmp4);
        tmp155 = simd_not(tmp154);
        tmp156 = simd_or(simd_and(basis_bits.bit_2, tmp155), simd_andc(tmp128, basis_bits.bit_2));
        bytetest_9e_a3 = simd_and(tmp7, tmp156);
        tmp157 = simd_and(tmp144, bytetest_9e_a3);
        struct_So.cc = simd_or(tmp157, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_84 = simd_and(tmp31, tmp95);
        bytetest_a5_a5 = simd_and(tmp9, tmp79);
        tmp158 = simd_and(tmp144, bytetest_a5_a5);
        struct_So.cc = simd_or(tmp158, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_84 = simd_and(tmp31, tmp95);
        bytetest_a7_a7 = simd_and(tmp9, tmp56);
        tmp159 = simd_and(tmp144, bytetest_a7_a7);
        struct_So.cc = simd_or(tmp159, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_84 = simd_and(tmp31, tmp95);
        bytetest_a9_a9 = simd_and(tmp9, tmp19);
        tmp160 = simd_and(tmp144, bytetest_a9_a9);
        struct_So.cc = simd_or(tmp160, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_84 = simd_and(tmp31, tmp95);
        bytetest_ae_ae = simd_and(tmp9, tmp22);
        tmp161 = simd_and(tmp144, bytetest_ae_ae);
        struct_So.cc = simd_or(tmp161, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_84 = simd_and(tmp31, tmp95);
        tmp162 = simd_and(tmp17, basis_bits.bit_6);
        bytetest_ba_bb = simd_and(tmp25, tmp162);
        tmp163 = simd_and(tmp144, bytetest_ba_bb);
        struct_So.cc = simd_or(tmp163, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_85 = simd_and(tmp31, tmp79);
        bytetest_8a_8a = simd_and(tmp31, tmp57);
        tmp164 = simd_and(tmp142, bytetest_85);
        carryQ.cq[23] = carryout2carry(pablo_blk_Advance(tmp164, carryQ.get_carry_in(23), tmp165));
        tmp166 = simd_and(tmp165, bytetest_8a_8a);
        struct_So.cc = simd_or(tmp166, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_85 = simd_and(tmp31, tmp79);
        tmp167 = simd_andc(tmp21, basis_bits.bit_6);
        bytetest_8c_8d = simd_and(tmp31, tmp167);
        tmp168 = simd_and(tmp165, bytetest_8c_8d);
        struct_So.cc = simd_or(tmp168, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_85 = simd_and(tmp31, tmp79);
        bytetest_8f_8f = simd_and(tmp31, tmp51);
        tmp169 = simd_and(tmp165, bytetest_8f_8f);
        struct_So.cc = simd_or(tmp169, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_86 = simd_and(tmp31, tmp11);
        tmp170 = simd_not(tmp93);
        tmp171 = simd_or(simd_and(basis_bits.bit_4, tmp170), simd_andc(tmp108, basis_bits.bit_4));
        bytetest_95_99 = simd_and(tmp42, tmp171);
        tmp172 = simd_and(tmp142, bytetest_86);
        carryQ.cq[24] = carryout2carry(pablo_blk_Advance(tmp172, carryQ.get_carry_in(24), tmp173));
        tmp174 = simd_and(tmp173, bytetest_95_99);
        struct_So.cc = simd_or(tmp174, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_86 = simd_and(tmp31, tmp11);
        bytetest_9c_9f = simd_and(tmp42, tmp21);
        tmp175 = simd_and(tmp173, bytetest_9c_9f);
        struct_So.cc = simd_or(tmp175, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_86 = simd_and(tmp31, tmp11);
        tmp176 = simd_andc(tmp9, tmp4);
        bytetest_a1_a2 = simd_and(tmp176, tmp49);
        tmp177 = simd_and(tmp173, bytetest_a1_a2);
        struct_So.cc = simd_or(tmp177, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_86 = simd_and(tmp31, tmp11);
        tmp178 = simd_andc(tmp10, basis_bits.bit_6);
        bytetest_a4_a5 = simd_and(tmp9, tmp178);
        tmp179 = simd_and(tmp173, bytetest_a4_a5);
        struct_So.cc = simd_or(tmp179, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_86 = simd_and(tmp31, tmp11);
        tmp180 = simd_not(tmp100);
        tmp181 = simd_or(simd_and(basis_bits.bit_4, tmp180), simd_andc(tmp110, basis_bits.bit_4));
        bytetest_a7_ad = simd_and(tmp9, tmp181);
        tmp182 = simd_and(tmp173, bytetest_a7_ad);
        struct_So.cc = simd_or(tmp182, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_87 = simd_and(tmp31, tmp56);
        tmp183 = simd_and(basis_bits.bit_4, tmp100);
        bytetest_80_8d = simd_andc(tmp31, tmp183);
        tmp184 = simd_and(tmp142, bytetest_87);
        carryQ.cq[25] = carryout2carry(pablo_blk_Advance(tmp184, carryQ.get_carry_in(25), tmp185));
        tmp186 = simd_and(tmp185, bytetest_80_8d);
        bytetest_86 = simd_and(tmp31, tmp11);
        tmp187 = simd_and(tmp7, basis_bits.bit_2);
        tmp188 = simd_or(basis_bits.bit_3, tmp51);
        bytetest_af_bf = simd_and(tmp187, tmp188);
        tmp189 = simd_and(tmp173, bytetest_af_bf);
        tmp190 = simd_or(tmp189, tmp186);
        struct_So.cc = simd_or(tmp190, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_87 = simd_and(tmp31, tmp56);
        bytetest_90_91 = simd_andc(tmp42, tmp140);
        tmp191 = simd_and(tmp185, bytetest_90_91);
        struct_So.cc = simd_or(tmp191, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_87 = simd_and(tmp31, tmp56);
        bytetest_93_93 = simd_and(tmp42, tmp88);
        tmp192 = simd_and(tmp185, bytetest_93_93);
        struct_So.cc = simd_or(tmp192, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_87 = simd_and(tmp31, tmp56);
        tmp193 = simd_and(basis_bits.bit_3, tmp4);
        tmp194 = simd_not(tmp193);
        tmp195 = simd_or(basis_bits.bit_4, tmp108);
        tmp196 = simd_and(basis_bits.bit_3, tmp195);
        tmp197 = simd_or(simd_and(basis_bits.bit_2, tmp194), simd_andc(tmp196, basis_bits.bit_2));
        bytetest_95_b3 = simd_and(tmp7, tmp197);
        tmp198 = simd_and(tmp185, bytetest_95_b3);
        struct_So.cc = simd_or(tmp198, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_8c = simd_and(tmp31, tmp83);
        bytetest_80_87 = simd_andc(tmp31, basis_bits.bit_4);
        tmp199 = simd_and(tmp142, bytetest_8c);
        carryQ.cq[26] = carryout2carry(pablo_blk_Advance(tmp199, carryQ.get_carry_in(26), tmp200));
        tmp201 = simd_and(tmp200, bytetest_80_87);
        struct_So.cc = simd_or(tmp201, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_8c = simd_and(tmp31, tmp83);
        tmp202 = simd_andc(tmp7, basis_bits.bit_2);
        tmp203 = simd_or(basis_bits.bit_3, tmp21);
        bytetest_8c_9f = simd_and(tmp202, tmp203);
        tmp204 = simd_and(tmp200, bytetest_8c_9f);
        struct_So.cc = simd_or(tmp204, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_8c = simd_and(tmp31, tmp83);
        tmp205 = simd_or(simd_and(basis_bits.bit_4, tmp68), simd_andc(tmp93, basis_bits.bit_4));
        bytetest_a2_a8 = simd_and(tmp9, tmp205);
        tmp206 = simd_and(tmp200, bytetest_a2_a8);
        struct_So.cc = simd_or(tmp206, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_8d = simd_and(tmp31, tmp63);
        tmp207 = simd_and(basis_bits.bit_3, tmp21);
        tmp208 = simd_and(basis_bits.bit_2, tmp207);
        bytetest_80_bb = simd_andc(tmp7, tmp208);
        tmp209 = simd_and(tmp142, bytetest_8d);
        carryQ.cq[27] = carryout2carry(pablo_blk_Advance(tmp209, carryQ.get_carry_in(27), tmp210));
        tmp211 = simd_and(tmp210, bytetest_80_bb);
        bytetest_8c = simd_and(tmp31, tmp83);
        tmp212 = simd_and(basis_bits.bit_4, tmp69);
        tmp213 = simd_or(basis_bits.bit_3, tmp212);
        bytetest_ab_bf = simd_and(tmp187, tmp213);
        tmp214 = simd_and(tmp200, bytetest_ab_bf);
        tmp215 = simd_or(tmp214, tmp211);
        struct_So.cc = simd_or(tmp215, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_8e = simd_and(tmp31, tmp22);
        tmp216 = simd_and(basis_bits.bit_3, tmp212);
        bytetest_80_9a = simd_andc(tmp202, tmp216);
        tmp217 = simd_and(tmp142, bytetest_8e);
        carryQ.cq[28] = carryout2carry(pablo_blk_Advance(tmp217, carryQ.get_carry_in(28), tmp218));
        tmp219 = simd_and(tmp218, bytetest_80_9a);
        bytetest_8d = simd_and(tmp31, tmp63);
        bytetest_bd_bf = simd_and(tmp47, tmp26);
        tmp220 = simd_and(tmp210, bytetest_bd_bf);
        tmp221 = simd_or(tmp220, tmp219);
        struct_So.cc = simd_or(tmp221, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_8f = simd_and(tmp31, tmp51);
        bytetest_80_9b = simd_andc(tmp202, tmp207);
        tmp222 = simd_and(tmp142, bytetest_8f);
        carryQ.cq[29] = carryout2carry(pablo_blk_Advance(tmp222, carryQ.get_carry_in(29), tmp223));
        tmp224 = simd_and(tmp223, bytetest_80_9b);
        bytetest_8e = simd_and(tmp31, tmp22);
        bytetest_b4_bf = simd_and(tmp25, tmp4);
        tmp225 = simd_and(tmp218, bytetest_b4_bf);
        tmp226 = simd_or(tmp225, tmp224);
        struct_So.cc = simd_or(tmp226, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_8f = simd_and(tmp31, tmp51);
        tmp227 = simd_not(tmp4);
        tmp228 = simd_or(simd_and(basis_bits.bit_3, tmp227), simd_andc(tmp140, basis_bits.bit_3));
        bytetest_a2_b3 = simd_and(tmp187, tmp228);
        tmp229 = simd_and(tmp223, bytetest_a2_b3);
        struct_So.cc = simd_or(tmp229, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_90 = simd_andc(tmp42, tmp27);
        tmp230 = simd_or(basis_bits.bit_4, tmp110);
        tmp231 = simd_or(basis_bits.bit_3, tmp230);
        tmp232 = simd_and(basis_bits.bit_2, tmp231);
        bytetest_80_a6 = simd_andc(tmp7, tmp232);
        tmp233 = simd_and(tmp142, bytetest_90);
        carryQ.cq[30] = carryout2carry(pablo_blk_Advance(tmp233, carryQ.get_carry_in(30), tmp234));
        tmp235 = simd_and(tmp234, bytetest_80_a6);
        struct_So.cc = simd_or(tmp235, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_91 = simd_and(tmp42, tmp75);
        bytetest_80_8a = simd_andc(tmp31, tmp212);
        tmp236 = simd_and(tmp142, bytetest_91);
        carryQ.cq[31] = carryout2carry(pablo_blk_Advance(tmp236, carryQ.get_carry_in(31), tmp237));
        tmp238 = simd_and(tmp237, bytetest_80_8a);
        struct_So.cc = simd_or(tmp238, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_93 = simd_and(tmp42, tmp88);
        tmp239 = simd_or(basis_bits.bit_3, tmp121);
        tmp240 = simd_and(basis_bits.bit_2, tmp239);
        bytetest_80_a9 = simd_andc(tmp7, tmp240);
        tmp241 = simd_and(tmp142, bytetest_93);
        carryQ.cq[32] = carryout2carry(pablo_blk_Advance(tmp241, carryQ.get_carry_in(32), tmp242));
        tmp243 = simd_and(tmp242, bytetest_80_a9);
        bytetest_92 = simd_and(tmp42, tmp6);
        tmp244 = simd_or(basis_bits.bit_2, tmp207);
        bytetest_9c_bf = simd_and(tmp7, tmp244);
        tmp245 = simd_and(tmp142, bytetest_92);
        carryQ.cq[33] = carryout2carry(pablo_blk_Advance(tmp245, carryQ.get_carry_in(33), tmp246));
        tmp247 = simd_and(tmp246, bytetest_9c_bf);
        tmp248 = simd_or(tmp247, tmp243);
        struct_So.cc = simd_or(tmp248, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_96 = simd_and(tmp42, tmp11);
        tmp249 = simd_and(basis_bits.bit_3, tmp230);
        tmp250 = simd_and(basis_bits.bit_2, tmp249);
        bytetest_80_b6 = simd_andc(tmp7, tmp250);
        tmp251 = simd_and(tmp142, bytetest_96);
        carryQ.cq[34] = carryout2carry(pablo_blk_Advance(tmp251, carryQ.get_carry_in(34), tmp252));
        tmp253 = simd_and(tmp252, bytetest_80_b6);
        bytetest_94_95 = simd_and(tmp42, tmp178);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp254 = simd_and(tmp142, bytetest_94_95);
        carryQ.cq[35] = carryout2carry(pablo_blk_Advance(tmp254, carryQ.get_carry_in(35), tmp255));
        tmp256 = simd_and(tmp255, bytetest_80_bf);
        tmp257 = simd_or(tmp256, tmp253);
        struct_So.cc = simd_or(tmp257, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        tmp258 = simd_and(bytetest_80_bf, tmp29);
        bytetest_97 = simd_and(tmp258, tmp56);
        tmp259 = simd_andc(bytetest_80_bf, tmp2);
        bytetest_80_80 = simd_andc(tmp259, tmp27);
        tmp260 = simd_and(tmp142, bytetest_97);
        carryQ.cq[36] = carryout2carry(pablo_blk_Advance(tmp260, carryQ.get_carry_in(36), tmp261));
        tmp262 = simd_and(tmp261, bytetest_80_80);
        bytetest_96 = simd_and(tmp258, tmp11);
        tmp263 = simd_and(bytetest_80_bf, tmp24);
        bytetest_b8_bf = simd_and(tmp263, basis_bits.bit_4);
        tmp264 = simd_and(tmp252, bytetest_b8_bf);
        tmp265 = simd_or(tmp264, tmp262);
        struct_So.cc = simd_or(tmp265, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_97 = simd_and(tmp258, tmp56);
        tmp266 = simd_and(basis_bits.bit_3, basis_bits.bit_4);
        tmp267 = simd_not(tmp266);
        tmp268 = simd_or(basis_bits.bit_3, tmp140);
        tmp269 = simd_or(simd_and(basis_bits.bit_2, tmp267), simd_andc(tmp268, basis_bits.bit_2));
        bytetest_82_b7 = simd_and(bytetest_80_bf, tmp269);
        tmp270 = simd_and(tmp261, bytetest_82_b7);
        struct_So.cc = simd_or(tmp270, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_99 = simd_and(tmp258, tmp19);
        tmp271 = simd_and(basis_bits.bit_2, tmp188);
        bytetest_80_ae = simd_andc(bytetest_80_bf, tmp271);
        tmp272 = simd_and(tmp142, bytetest_99);
        carryQ.cq[37] = carryout2carry(pablo_blk_Advance(tmp272, carryQ.get_carry_in(37), tmp273));
        tmp274 = simd_and(tmp273, bytetest_80_ae);
        bytetest_98 = simd_and(tmp258, tmp35);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp275 = simd_and(tmp142, bytetest_98);
        carryQ.cq[38] = carryout2carry(pablo_blk_Advance(tmp275, carryQ.get_carry_in(38), tmp276));
        tmp277 = simd_and(tmp276, bytetest_80_bf);
        tmp278 = simd_or(tmp277, tmp274);
        struct_So.cc = simd_or(tmp278, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_9a_9b = simd_and(tmp258, tmp162);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp279 = simd_and(tmp142, bytetest_9a_9b);
        carryQ.cq[39] = carryout2carry(pablo_blk_Advance(tmp279, carryQ.get_carry_in(39), tmp280));
        tmp281 = simd_and(tmp280, bytetest_80_bf);
        bytetest_99 = simd_and(tmp258, tmp19);
        bytetest_b0_bf = simd_and(bytetest_80_bf, tmp24);
        tmp282 = simd_and(tmp273, bytetest_b0_bf);
        tmp283 = simd_or(tmp282, tmp281);
        struct_So.cc = simd_or(tmp283, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_9d = simd_and(tmp258, tmp63);
        tmp284 = simd_or(basis_bits.bit_3, basis_bits.bit_4);
        tmp285 = simd_and(basis_bits.bit_2, tmp284);
        bytetest_80_a7 = simd_andc(bytetest_80_bf, tmp285);
        tmp286 = simd_and(tmp142, bytetest_9d);
        carryQ.cq[40] = carryout2carry(pablo_blk_Advance(tmp286, carryQ.get_carry_in(40), tmp287));
        tmp288 = simd_and(tmp287, bytetest_80_a7);
        bytetest_9c = simd_and(tmp258, tmp83);
        tmp289 = simd_or(basis_bits.bit_3, tmp27);
        tmp290 = simd_or(basis_bits.bit_2, tmp289);
        bytetest_81_bf = simd_and(bytetest_80_bf, tmp290);
        tmp291 = simd_and(tmp142, bytetest_9c);
        carryQ.cq[41] = carryout2carry(pablo_blk_Advance(tmp291, carryQ.get_carry_in(41), tmp292));
        tmp293 = simd_and(tmp292, bytetest_81_bf);
        tmp294 = simd_or(tmp293, tmp288);
        struct_So.cc = simd_or(tmp294, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_9e = simd_and(tmp258, tmp22);
        tmp295 = simd_or(basis_bits.bit_2, tmp193);
        bytetest_94_bf = simd_and(bytetest_80_bf, tmp295);
        tmp296 = simd_and(tmp142, bytetest_9e);
        carryQ.cq[42] = carryout2carry(pablo_blk_Advance(tmp296, carryQ.get_carry_in(42), tmp297));
        tmp298 = simd_and(tmp297, bytetest_94_bf);
        struct_So.cc = simd_or(tmp298, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        tmp299 = simd_and(bytetest_80_bf, tmp8);
        bytetest_a0_a3 = simd_andc(tmp299, tmp4);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp300 = simd_and(tmp142, bytetest_a0_a3);
        carryQ.cq[43] = carryout2carry(pablo_blk_Advance(tmp300, carryQ.get_carry_in(43), tmp301));
        tmp302 = simd_and(tmp301, bytetest_80_bf);
        struct_So.cc = simd_or(tmp302, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_ac = simd_and(tmp299, tmp83);
        bytetest_80_af = simd_andc(bytetest_80_bf, tmp24);
        tmp303 = simd_and(tmp142, bytetest_ac);
        carryQ.cq[44] = carryout2carry(pablo_blk_Advance(tmp303, carryQ.get_carry_in(44), tmp304));
        tmp305 = simd_and(tmp304, bytetest_80_af);
        struct_So.cc = simd_or(tmp305, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_ad = simd_and(tmp299, tmp63);
        tmp306 = simd_and(tmp259, tmp10);
        bytetest_85_86 = simd_and(tmp306, tmp49);
        tmp307 = simd_and(tmp142, bytetest_ad);
        carryQ.cq[45] = carryout2carry(pablo_blk_Advance(tmp307, carryQ.get_carry_in(45), tmp308));
        tmp309 = simd_and(tmp308, bytetest_85_86);
        struct_So.cc = simd_or(tmp309, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_ad = simd_and(tmp299, tmp63);
        bytetest_90_99 = simd_andc(tmp258, tmp121);
        tmp310 = simd_and(tmp308, bytetest_90_99);
        struct_So.cc = simd_or(tmp310, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp88);
        tmp311 = simd_or(simd_and(basis_bits.bit_4, tmp133), simd_andc(tmp108, basis_bits.bit_4));
        bytetest_a5_aa = simd_and(tmp299, tmp311);
        tmp312 = simd_and(tmp142, bytetest_b3);
        carryQ.cq[46] = carryout2carry(pablo_blk_Advance(tmp312, carryQ.get_carry_in(46), tmp313));
        tmp314 = simd_and(tmp313, bytetest_a5_aa);
        struct_So.cc = simd_or(tmp314, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp57);
        tmp315 = simd_andc(bytetest_80_bf, basis_bits.bit_2);
        tmp316 = simd_and(basis_bits.bit_3, tmp121);
        bytetest_80_99 = simd_andc(tmp315, tmp316);
        tmp317 = simd_and(tmp142, bytetest_ba);
        carryQ.cq[47] = carryout2carry(pablo_blk_Advance(tmp317, carryQ.get_carry_in(47), tmp318));
        tmp319 = simd_and(tmp318, bytetest_80_99);
        struct_So.cc = simd_or(tmp319, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp41);
        tmp320 = simd_and(basis_bits.bit_2, tmp193);
        bytetest_80_b3 = simd_andc(bytetest_80_bf, tmp320);
        tmp321 = simd_and(tmp142, bytetest_bb);
        carryQ.cq[48] = carryout2carry(pablo_blk_Advance(tmp321, carryQ.get_carry_in(48), tmp322));
        tmp323 = simd_and(tmp322, bytetest_80_b3);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp57);
        tmp324 = simd_or(basis_bits.bit_2, tmp216);
        bytetest_9b_bf = simd_and(bytetest_80_bf, tmp324);
        tmp325 = simd_and(tmp318, bytetest_9b_bf);
        tmp326 = simd_or(tmp325, tmp323);
        struct_So.cc = simd_or(tmp326, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_bf = simd_and(bytetest_b0_bf, tmp51);
        tmp327 = simd_or(basis_bits.bit_4, tmp100);
        tmp328 = simd_and(basis_bits.bit_3, tmp327);
        bytetest_80_95 = simd_andc(tmp315, tmp328);
        tmp329 = simd_and(tmp142, bytetest_bf);
        carryQ.cq[49] = carryout2carry(pablo_blk_Advance(tmp329, carryQ.get_carry_in(49), tmp330));
        tmp331 = simd_and(tmp330, bytetest_80_95);
        tmp332 = simd_and(bytetest_b0_bf, tmp21);
        bytetest_bc_be = simd_andc(tmp332, tmp40);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp333 = simd_and(tmp142, bytetest_bc_be);
        carryQ.cq[50] = carryout2carry(pablo_blk_Advance(tmp333, carryQ.get_carry_in(50), tmp334));
        tmp335 = simd_and(tmp334, bytetest_80_bf);
        tmp336 = simd_or(tmp335, tmp331);
        struct_So.cc = simd_or(tmp336, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_bf = simd_and(bytetest_b0_bf, tmp51);
        bytetest_b0_bb = simd_andc(bytetest_b0_bf, tmp21);
        tmp337 = simd_and(tmp330, bytetest_b0_bb);
        struct_So.cc = simd_or(tmp337, struct_So.cc);
        bytetest_e3 = simd_and(tmp55, tmp88);
        bytetest_80 = simd_andc(tmp259, tmp27);
        bytetest_84_84 = simd_and(tmp259, tmp95);
        tmp338 = simd_and(tmp13, bytetest_e3);
        carryQ.cq[51] = carryout2carry(pablo_blk_Advance(tmp338, carryQ.get_carry_in(51), tmp339));
        tmp340 = simd_and(tmp339, bytetest_80);
        carryQ.cq[52] = carryout2carry(pablo_blk_Advance(tmp340, carryQ.get_carry_in(52), tmp341));
        tmp342 = simd_and(tmp341, bytetest_84_84);
        struct_So.cc = simd_or(tmp342, struct_So.cc);
        bytetest_e3 = simd_and(tmp55, tmp88);
        bytetest_80 = simd_andc(tmp259, tmp27);
        tmp343 = simd_andc(basis_bits.bit_6, tmp4);
        bytetest_92_93 = simd_and(tmp258, tmp343);
        tmp344 = simd_and(tmp341, bytetest_92_93);
        struct_So.cc = simd_or(tmp344, struct_So.cc);
        bytetest_e3 = simd_and(tmp55, tmp88);
        bytetest_80 = simd_andc(tmp259, tmp27);
        bytetest_a0_a0 = simd_andc(tmp299, tmp27);
        tmp345 = simd_and(tmp341, bytetest_a0_a0);
        struct_So.cc = simd_or(tmp345, struct_So.cc);
        bytetest_e3 = simd_and(tmp55, tmp88);
        bytetest_80 = simd_andc(tmp259, tmp27);
        bytetest_b6_b7 = simd_and(bytetest_b0_bf, tmp152);
        tmp346 = simd_and(tmp341, bytetest_b6_b7);
        struct_So.cc = simd_or(tmp346, struct_So.cc);
        bytetest_e3 = simd_and(tmp55, tmp88);
        bytetest_80 = simd_andc(tmp259, tmp27);
        bytetest_be_bf = simd_and(bytetest_b0_bf, tmp36);
        tmp347 = simd_and(tmp341, bytetest_be_bf);
        struct_So.cc = simd_or(tmp347, struct_So.cc);
        bytetest_e3 = simd_and(tmp55, tmp88);
        bytetest_86 = simd_and(tmp259, tmp11);
        bytetest_90_91 = simd_andc(tmp258, tmp140);
        tmp348 = simd_and(tmp339, bytetest_86);
        carryQ.cq[53] = carryout2carry(pablo_blk_Advance(tmp348, carryQ.get_carry_in(53), tmp349));
        tmp350 = simd_and(tmp349, bytetest_90_91);
        struct_So.cc = simd_or(tmp350, struct_So.cc);
        bytetest_e3 = simd_and(tmp55, tmp88);
        bytetest_86 = simd_and(tmp259, tmp11);
        bytetest_96_9f = simd_and(tmp258, tmp327);
        tmp351 = simd_and(tmp349, bytetest_96_9f);
        struct_So.cc = simd_or(tmp351, struct_So.cc);
        bytetest_e3 = simd_and(tmp55, tmp88);
        bytetest_87 = simd_and(tmp259, tmp56);
        tmp352 = simd_and(basis_bits.bit_2, tmp154);
        bytetest_80_a3 = simd_andc(bytetest_80_bf, tmp352);
        tmp353 = simd_and(tmp339, bytetest_87);
        carryQ.cq[54] = carryout2carry(pablo_blk_Advance(tmp353, carryQ.get_carry_in(54), tmp354));
        tmp355 = simd_and(tmp354, bytetest_80_a3);
        struct_So.cc = simd_or(tmp355, struct_So.cc);
        bytetest_e3 = simd_and(tmp55, tmp88);
        bytetest_88 = simd_and(tmp259, tmp35);
        tmp356 = simd_and(basis_bits.bit_3, tmp51);
        bytetest_80_9e = simd_andc(tmp315, tmp356);
        tmp357 = simd_and(tmp339, bytetest_88);
        carryQ.cq[55] = carryout2carry(pablo_blk_Advance(tmp357, carryQ.get_carry_in(55), tmp358));
        tmp359 = simd_and(tmp358, bytetest_80_9e);
        struct_So.cc = simd_or(tmp359, struct_So.cc);
        bytetest_e3 = simd_and(tmp55, tmp88);
        bytetest_89 = simd_and(tmp259, tmp19);
        bytetest_80_87 = simd_andc(tmp259, basis_bits.bit_4);
        tmp360 = simd_and(tmp339, bytetest_89);
        carryQ.cq[56] = carryout2carry(pablo_blk_Advance(tmp360, carryQ.get_carry_in(56), tmp361));
        tmp362 = simd_and(tmp361, bytetest_80_87);
        bytetest_88 = simd_and(tmp259, tmp35);
        tmp363 = simd_and(bytetest_80_bf, basis_bits.bit_2);
        bytetest_aa_bf = simd_and(tmp363, tmp239);
        tmp364 = simd_and(tmp358, bytetest_aa_bf);
        tmp365 = simd_or(tmp364, tmp362);
        struct_So.cc = simd_or(tmp365, struct_So.cc);
        bytetest_e3 = simd_and(tmp55, tmp88);
        bytetest_89 = simd_and(tmp259, tmp19);
        bytetest_90_90 = simd_andc(tmp258, tmp27);
        tmp366 = simd_and(tmp361, bytetest_90_90);
        struct_So.cc = simd_or(tmp366, struct_So.cc);
        bytetest_e3 = simd_and(tmp55, tmp88);
        bytetest_89 = simd_and(tmp259, tmp19);
        bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp367 = simd_and(tmp361, bytetest_a0_bf);
        struct_So.cc = simd_or(tmp367, struct_So.cc);
        bytetest_e3 = simd_and(tmp55, tmp88);
        bytetest_8a = simd_and(tmp259, tmp57);
        tmp368 = simd_and(basis_bits.bit_3, tmp27);
        tmp369 = simd_not(tmp368);
        tmp370 = simd_or(simd_and(basis_bits.bit_2, tmp369), simd_andc(tmp239, basis_bits.bit_2));
        bytetest_8a_b0 = simd_and(bytetest_80_bf, tmp370);
        tmp371 = simd_and(tmp339, bytetest_8a);
        carryQ.cq[57] = carryout2carry(pablo_blk_Advance(tmp371, carryQ.get_carry_in(57), tmp372));
        tmp373 = simd_and(tmp372, bytetest_8a_b0);
        struct_So.cc = simd_or(tmp373, struct_So.cc);
        bytetest_e3 = simd_and(tmp55, tmp88);
        bytetest_8b = simd_and(tmp259, tmp41);
        tmp374 = simd_and(basis_bits.bit_2, tmp356);
        bytetest_80_be = simd_andc(bytetest_80_bf, tmp374);
        tmp375 = simd_and(tmp339, bytetest_8b);
        carryQ.cq[58] = carryout2carry(pablo_blk_Advance(tmp375, carryQ.get_carry_in(58), tmp376));
        tmp377 = simd_and(tmp376, bytetest_80_be);
        struct_So.cc = simd_or(tmp377, struct_So.cc);
        bytetest_e3 = simd_and(tmp55, tmp88);
        bytetest_8c_8f = simd_and(tmp259, tmp21);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp378 = simd_and(tmp339, bytetest_8c_8f);
        carryQ.cq[59] = carryout2carry(pablo_blk_Advance(tmp378, carryQ.get_carry_in(59), tmp379));
        tmp380 = simd_and(tmp379, bytetest_80_bf);
        struct_So.cc = simd_or(tmp380, struct_So.cc);
        bytetest_e4 = simd_and(tmp55, tmp95);
        bytetest_b7 = simd_and(bytetest_b0_bf, tmp56);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp381 = simd_and(tmp13, bytetest_e4);
        carryQ.cq[60] = carryout2carry(pablo_blk_Advance(tmp381, carryQ.get_carry_in(60), tmp382));
        tmp383 = simd_and(tmp382, bytetest_b7);
        carryQ.cq[61] = carryout2carry(pablo_blk_Advance(tmp383, carryQ.get_carry_in(61), tmp384));
        tmp385 = simd_and(tmp384, bytetest_80_bf);
        struct_So.cc = simd_or(tmp385, struct_So.cc);
        bytetest_ea = simd_and(tmp55, tmp57);
        bytetest_93 = simd_and(tmp258, tmp88);
        bytetest_80_86 = simd_andc(bytetest_80_87, tmp110);
        tmp386 = simd_and(tmp13, bytetest_ea);
        carryQ.cq[62] = carryout2carry(pablo_blk_Advance(tmp386, carryQ.get_carry_in(62), tmp387));
        tmp388 = simd_and(tmp387, bytetest_93);
        carryQ.cq[63] = carryout2carry(pablo_blk_Advance(tmp388, carryQ.get_carry_in(63), tmp389));
        tmp390 = simd_and(tmp389, bytetest_80_86);
        bytetest_92 = simd_and(tmp258, tmp6);
        bytetest_90_bf = simd_and(bytetest_80_bf, tmp2);
        tmp391 = simd_and(tmp387, bytetest_92);
        carryQ.cq[64] = carryout2carry(pablo_blk_Advance(tmp391, carryQ.get_carry_in(64), tmp392));
        tmp393 = simd_and(tmp392, bytetest_90_bf);
        tmp394 = simd_or(tmp393, tmp390);
        struct_So.cc = simd_or(tmp394, struct_So.cc);
        bytetest_ea = simd_and(tmp55, tmp57);
        bytetest_a0 = simd_andc(tmp299, tmp27);
        bytetest_a8_ab = simd_and(tmp299, tmp17);
        tmp395 = simd_and(tmp387, bytetest_a0);
        carryQ.cq[65] = carryout2carry(pablo_blk_Advance(tmp395, carryQ.get_carry_in(65), tmp396));
        tmp397 = simd_and(tmp396, bytetest_a8_ab);
        struct_So.cc = simd_or(tmp397, struct_So.cc);
        bytetest_ea = simd_and(tmp55, tmp57);
        bytetest_a0 = simd_andc(tmp299, tmp27);
        bytetest_b6_b7 = simd_and(bytetest_b0_bf, tmp152);
        tmp398 = simd_and(tmp396, bytetest_b6_b7);
        struct_So.cc = simd_or(tmp398, struct_So.cc);
        bytetest_ea = simd_and(tmp55, tmp57);
        bytetest_a0 = simd_andc(tmp299, tmp27);
        bytetest_b9_b9 = simd_and(bytetest_b0_bf, tmp19);
        tmp399 = simd_and(tmp396, bytetest_b9_b9);
        struct_So.cc = simd_or(tmp399, struct_So.cc);
        bytetest_ea = simd_and(tmp55, tmp57);
        bytetest_a9 = simd_and(tmp299, tmp19);
        tmp400 = simd_or(simd_and(basis_bits.bit_4, tmp170), simd_andc(tmp110, basis_bits.bit_4));
        bytetest_b7_b9 = simd_and(bytetest_b0_bf, tmp400);
        tmp401 = simd_and(tmp387, bytetest_a9);
        carryQ.cq[66] = carryout2carry(pablo_blk_Advance(tmp401, carryQ.get_carry_in(66), tmp402));
        tmp403 = simd_and(tmp402, bytetest_b7_b9);
        struct_So.cc = simd_or(tmp403, struct_So.cc);
        bytetest_ef = simd_and(tmp55, tmp51);
        bytetest_b7 = simd_and(bytetest_b0_bf, tmp56);
        bytetest_bd_bd = simd_and(bytetest_b0_bf, tmp63);
        tmp404 = simd_and(tmp13, bytetest_ef);
        carryQ.cq[67] = carryout2carry(pablo_blk_Advance(tmp404, carryQ.get_carry_in(67), tmp405));
        tmp406 = simd_and(tmp405, bytetest_b7);
        carryQ.cq[68] = carryout2carry(pablo_blk_Advance(tmp406, carryQ.get_carry_in(68), tmp407));
        tmp408 = simd_and(tmp407, bytetest_bd_bd);
        struct_So.cc = simd_or(tmp408, struct_So.cc);
        bytetest_ef = simd_and(tmp55, tmp51);
        bytetest_bf = simd_and(bytetest_b0_bf, tmp51);
        bytetest_a4_a4 = simd_and(tmp299, tmp95);
        tmp409 = simd_and(tmp405, bytetest_bf);
        carryQ.cq[69] = carryout2carry(pablo_blk_Advance(tmp409, carryQ.get_carry_in(69), tmp410));
        tmp411 = simd_and(tmp410, bytetest_a4_a4);
        struct_So.cc = simd_or(tmp411, struct_So.cc);
        bytetest_ef = simd_and(tmp55, tmp51);
        bytetest_bf = simd_and(bytetest_b0_bf, tmp51);
        bytetest_a8_a8 = simd_and(tmp299, tmp35);
        tmp412 = simd_and(tmp410, bytetest_a8_a8);
        struct_So.cc = simd_or(tmp412, struct_So.cc);
        bytetest_ef = simd_and(tmp55, tmp51);
        bytetest_bf = simd_and(bytetest_b0_bf, tmp51);
        tmp413 = simd_and(tmp299, tmp21);
        bytetest_ad_ae = simd_and(tmp413, tmp49);
        tmp414 = simd_and(tmp410, bytetest_ad_ae);
        struct_So.cc = simd_or(tmp414, struct_So.cc);
        bytetest_ef = simd_and(tmp55, tmp51);
        bytetest_bf = simd_and(bytetest_b0_bf, tmp51);
        bytetest_bc_bd = simd_and(bytetest_b0_bf, tmp167);
        tmp415 = simd_and(tmp410, bytetest_bc_bd);
        struct_So.cc = simd_or(tmp415, struct_So.cc);
        tmp416 = simd_and(tmp1, tmp24);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_90 = simd_andc(tmp258, tmp27);
        bytetest_84 = simd_and(tmp259, tmp95);
        bytetest_b7_bf = simd_and(bytetest_b0_bf, tmp230);
        tmp417 = simd_and(tmp13, bytetest_f0);
        carryQ.cq[70] = carryout2carry(pablo_blk_Advance(tmp417, carryQ.get_carry_in(70), tmp418));
        tmp419 = simd_and(tmp418, bytetest_90);
        carryQ.cq[71] = carryout2carry(pablo_blk_Advance(tmp419, carryQ.get_carry_in(71), tmp420));
        tmp421 = simd_and(tmp420, bytetest_84);
        carryQ.cq[72] = carryout2carry(pablo_blk_Advance(tmp421, carryQ.get_carry_in(72), tmp422));
        tmp423 = simd_and(tmp422, bytetest_b7_bf);
        struct_So.cc = simd_or(tmp423, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_90 = simd_andc(tmp258, tmp27);
        bytetest_86 = simd_and(tmp259, tmp11);
        bytetest_80_89 = simd_andc(tmp259, tmp121);
        tmp424 = simd_and(tmp420, bytetest_86);
        carryQ.cq[73] = carryout2carry(pablo_blk_Advance(tmp424, carryQ.get_carry_in(73), tmp425));
        tmp426 = simd_and(tmp425, bytetest_80_89);
        bytetest_85 = simd_and(tmp259, tmp79);
        tmp427 = simd_and(bytetest_b0_bf, basis_bits.bit_4);
        bytetest_b9_bf = simd_and(tmp427, tmp67);
        tmp428 = simd_and(tmp420, bytetest_85);
        carryQ.cq[74] = carryout2carry(pablo_blk_Advance(tmp428, carryQ.get_carry_in(74), tmp429));
        tmp430 = simd_and(tmp429, bytetest_b9_bf);
        tmp431 = simd_or(tmp430, tmp426);
        struct_So.cc = simd_or(tmp431, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_90 = simd_andc(tmp258, tmp27);
        bytetest_86 = simd_and(tmp259, tmp11);
        bytetest_90_9b = simd_andc(tmp258, tmp21);
        tmp432 = simd_and(tmp425, bytetest_90_9b);
        struct_So.cc = simd_or(tmp432, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_90 = simd_andc(tmp258, tmp27);
        bytetest_87 = simd_and(tmp259, tmp56);
        tmp433 = simd_and(tmp21, tmp26);
        tmp434 = simd_and(basis_bits.bit_3, tmp433);
        tmp435 = simd_not(tmp434);
        tmp436 = simd_or(simd_and(basis_bits.bit_2, tmp435), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
        bytetest_90_bc = simd_and(bytetest_80_bf, tmp436);
        tmp437 = simd_and(tmp420, bytetest_87);
        carryQ.cq[75] = carryout2carry(pablo_blk_Advance(tmp437, carryQ.get_carry_in(75), tmp438));
        tmp439 = simd_and(tmp438, bytetest_90_bc);
        struct_So.cc = simd_or(tmp439, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9d = simd_and(tmp258, tmp63);
        bytetest_83 = simd_and(tmp259, tmp88);
        tmp440 = simd_and(basis_bits.bit_2, tmp328);
        bytetest_80_b5 = simd_andc(bytetest_80_bf, tmp440);
        tmp441 = simd_and(tmp418, bytetest_9d);
        carryQ.cq[76] = carryout2carry(pablo_blk_Advance(tmp441, carryQ.get_carry_in(76), tmp442));
        tmp443 = simd_and(tmp442, bytetest_83);
        carryQ.cq[77] = carryout2carry(pablo_blk_Advance(tmp443, carryQ.get_carry_in(77), tmp444));
        tmp445 = simd_and(tmp444, bytetest_80_b5);
        tmp446 = simd_andc(tmp259, tmp4);
        bytetest_80_82 = simd_andc(tmp446, tmp40);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp447 = simd_and(tmp442, bytetest_80_82);
        carryQ.cq[78] = carryout2carry(pablo_blk_Advance(tmp447, carryQ.get_carry_in(78), tmp448));
        tmp449 = simd_and(tmp448, bytetest_80_bf);
        tmp450 = simd_or(tmp449, tmp445);
        struct_So.cc = simd_or(tmp450, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9d = simd_and(tmp258, tmp63);
        bytetest_84 = simd_and(tmp259, tmp95);
        bytetest_80_a6 = simd_andc(bytetest_80_bf, tmp232);
        tmp451 = simd_and(tmp442, bytetest_84);
        carryQ.cq[79] = carryout2carry(pablo_blk_Advance(tmp451, carryQ.get_carry_in(79), tmp452));
        tmp453 = simd_and(tmp452, bytetest_80_a6);
        struct_So.cc = simd_or(tmp453, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9d = simd_and(tmp258, tmp63);
        bytetest_85 = simd_and(tmp259, tmp79);
        tmp454 = simd_or(basis_bits.bit_3, tmp195);
        tmp455 = simd_and(basis_bits.bit_2, tmp454);
        bytetest_80_a4 = simd_andc(bytetest_80_bf, tmp455);
        tmp456 = simd_and(tmp442, bytetest_85);
        carryQ.cq[80] = carryout2carry(pablo_blk_Advance(tmp456, carryQ.get_carry_in(80), tmp457));
        tmp458 = simd_and(tmp457, bytetest_80_a4);
        bytetest_84 = simd_and(tmp259, tmp95);
        tmp459 = simd_and(basis_bits.bit_4, tmp67);
        tmp460 = simd_or(basis_bits.bit_3, tmp459);
        bytetest_a9_bf = simd_and(bytetest_a0_bf, tmp460);
        tmp461 = simd_and(tmp452, bytetest_a9_bf);
        tmp462 = simd_or(tmp461, tmp458);
        struct_So.cc = simd_or(tmp462, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9d = simd_and(tmp258, tmp63);
        bytetest_85 = simd_and(tmp259, tmp79);
        tmp463 = simd_and(tmp299, basis_bits.bit_4);
        tmp464 = simd_not(tmp26);
        tmp465 = simd_or(simd_and(basis_bits.bit_5, tmp464), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        bytetest_aa_ac = simd_and(tmp463, tmp465);
        tmp466 = simd_and(tmp457, bytetest_aa_ac);
        struct_So.cc = simd_or(tmp466, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9d = simd_and(tmp258, tmp63);
        bytetest_86 = simd_and(tmp259, tmp11);
        tmp467 = simd_or(simd_and(basis_bits.bit_5, tmp464), simd_andc(tmp40, basis_bits.bit_5));
        bytetest_83_84 = simd_and(bytetest_80_87, tmp467);
        tmp468 = simd_and(tmp442, bytetest_86);
        carryQ.cq[81] = carryout2carry(pablo_blk_Advance(tmp468, carryQ.get_carry_in(81), tmp469));
        tmp470 = simd_and(tmp469, bytetest_83_84);
        struct_So.cc = simd_or(tmp470, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9d = simd_and(tmp258, tmp63);
        bytetest_86 = simd_and(tmp259, tmp11);
        tmp471 = simd_not(tmp239);
        tmp472 = simd_or(simd_and(basis_bits.bit_2, tmp471), simd_andc(tmp203, basis_bits.bit_2));
        bytetest_8c_a9 = simd_and(bytetest_80_bf, tmp472);
        tmp473 = simd_and(tmp469, bytetest_8c_a9);
        struct_So.cc = simd_or(tmp473, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9d = simd_and(tmp258, tmp63);
        bytetest_87 = simd_and(tmp259, tmp56);
        bytetest_80_9d = simd_andc(tmp315, tmp128);
        tmp474 = simd_and(tmp442, bytetest_87);
        carryQ.cq[82] = carryout2carry(pablo_blk_Advance(tmp474, carryQ.get_carry_in(82), tmp475));
        tmp476 = simd_and(tmp475, bytetest_80_9d);
        bytetest_86 = simd_and(tmp259, tmp11);
        tmp477 = simd_or(basis_bits.bit_3, tmp36);
        bytetest_ae_bf = simd_and(bytetest_a0_bf, tmp477);
        tmp478 = simd_and(tmp469, bytetest_ae_bf);
        tmp479 = simd_or(tmp478, tmp476);
        struct_So.cc = simd_or(tmp479, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9d = simd_and(tmp258, tmp63);
        bytetest_89 = simd_and(tmp259, tmp19);
        bytetest_80_81 = simd_andc(tmp259, tmp140);
        tmp480 = simd_and(tmp442, bytetest_89);
        carryQ.cq[83] = carryout2carry(pablo_blk_Advance(tmp480, carryQ.get_carry_in(83), tmp481));
        tmp482 = simd_and(tmp481, bytetest_80_81);
        bytetest_88 = simd_and(tmp259, tmp35);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp483 = simd_and(tmp442, bytetest_88);
        carryQ.cq[84] = carryout2carry(pablo_blk_Advance(tmp483, carryQ.get_carry_in(84), tmp484));
        tmp485 = simd_and(tmp484, bytetest_80_bf);
        tmp486 = simd_or(tmp485, tmp482);
        struct_So.cc = simd_or(tmp486, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9d = simd_and(tmp258, tmp63);
        bytetest_89 = simd_and(tmp259, tmp19);
        bytetest_85_85 = simd_and(tmp259, tmp79);
        tmp487 = simd_and(tmp481, bytetest_85_85);
        struct_So.cc = simd_or(tmp487, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9d = simd_and(tmp258, tmp63);
        bytetest_8d = simd_and(tmp259, tmp63);
        bytetest_80_96 = simd_andc(tmp315, tmp249);
        tmp488 = simd_and(tmp442, bytetest_8d);
        carryQ.cq[85] = carryout2carry(pablo_blk_Advance(tmp488, carryQ.get_carry_in(85), tmp489));
        tmp490 = simd_and(tmp489, bytetest_80_96);
        bytetest_8c = simd_and(tmp259, tmp83);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp491 = simd_and(tmp442, bytetest_8c);
        carryQ.cq[86] = carryout2carry(pablo_blk_Advance(tmp491, carryQ.get_carry_in(86), tmp492));
        tmp493 = simd_and(tmp492, bytetest_80_bf);
        tmp494 = simd_or(tmp493, tmp490);
        struct_So.cc = simd_or(tmp494, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9f = simd_and(tmp258, tmp51);
        bytetest_80 = simd_andc(tmp259, tmp27);
        tmp495 = simd_and(basis_bits.bit_2, tmp203);
        bytetest_80_ab = simd_andc(bytetest_80_bf, tmp495);
        tmp496 = simd_and(tmp418, bytetest_9f);
        carryQ.cq[87] = carryout2carry(pablo_blk_Advance(tmp496, carryQ.get_carry_in(87), tmp497));
        tmp498 = simd_and(tmp497, bytetest_80);
        carryQ.cq[88] = carryout2carry(pablo_blk_Advance(tmp498, carryQ.get_carry_in(88), tmp499));
        tmp500 = simd_and(tmp499, bytetest_80_ab);
        struct_So.cc = simd_or(tmp500, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9f = simd_and(tmp258, tmp51);
        bytetest_82 = simd_and(tmp259, tmp6);
        bytetest_80_93 = simd_andc(tmp315, tmp193);
        tmp501 = simd_and(tmp497, bytetest_82);
        carryQ.cq[89] = carryout2carry(pablo_blk_Advance(tmp501, carryQ.get_carry_in(89), tmp502));
        tmp503 = simd_and(tmp502, bytetest_80_93);
        bytetest_81 = simd_and(tmp259, tmp75);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp504 = simd_and(tmp497, bytetest_81);
        carryQ.cq[90] = carryout2carry(pablo_blk_Advance(tmp504, carryQ.get_carry_in(90), tmp505));
        tmp506 = simd_and(tmp505, bytetest_80_bf);
        bytetest_80 = simd_andc(tmp259, tmp27);
        bytetest_b0_bf = simd_and(bytetest_80_bf, tmp24);
        tmp507 = simd_and(tmp499, bytetest_b0_bf);
        tmp508 = simd_or(tmp507, tmp506);
        tmp509 = simd_or(tmp508, tmp503);
        struct_So.cc = simd_or(tmp509, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9f = simd_and(tmp258, tmp51);
        bytetest_82 = simd_and(tmp259, tmp6);
        tmp510 = simd_and(basis_bits.bit_4, tmp110);
        bytetest_a0_ae = simd_andc(tmp299, tmp510);
        tmp511 = simd_and(tmp502, bytetest_a0_ae);
        struct_So.cc = simd_or(tmp511, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9f = simd_and(tmp258, tmp51);
        bytetest_82 = simd_and(tmp259, tmp6);
        tmp512 = simd_not(tmp110);
        tmp513 = simd_or(simd_and(basis_bits.bit_4, tmp512), simd_andc(tmp67, basis_bits.bit_4));
        bytetest_b1_be = simd_and(bytetest_b0_bf, tmp513);
        tmp514 = simd_and(tmp502, bytetest_b1_be);
        struct_So.cc = simd_or(tmp514, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9f = simd_and(tmp258, tmp51);
        bytetest_83 = simd_and(tmp259, tmp88);
        tmp515 = simd_or(basis_bits.bit_4, tmp67);
        bytetest_81_8f = simd_and(tmp259, tmp515);
        tmp516 = simd_and(tmp497, bytetest_83);
        carryQ.cq[91] = carryout2carry(pablo_blk_Advance(tmp516, carryQ.get_carry_in(91), tmp517));
        tmp518 = simd_and(tmp517, bytetest_81_8f);
        struct_So.cc = simd_or(tmp518, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9f = simd_and(tmp258, tmp51);
        bytetest_83 = simd_and(tmp259, tmp88);
        bytetest_91_9f = simd_and(tmp258, tmp515);
        tmp519 = simd_and(tmp517, bytetest_91_9f);
        struct_So.cc = simd_or(tmp519, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9f = simd_and(tmp258, tmp51);
        bytetest_84 = simd_and(tmp259, tmp95);
        tmp520 = simd_not(tmp188);
        tmp521 = simd_or(simd_and(basis_bits.bit_2, tmp520), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
        bytetest_90_ae = simd_and(bytetest_80_bf, tmp521);
        tmp522 = simd_and(tmp497, bytetest_84);
        carryQ.cq[92] = carryout2carry(pablo_blk_Advance(tmp522, carryQ.get_carry_in(92), tmp523));
        tmp524 = simd_and(tmp523, bytetest_90_ae);
        struct_So.cc = simd_or(tmp524, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9f = simd_and(tmp258, tmp51);
        bytetest_85 = simd_and(tmp259, tmp79);
        bytetest_80_ab = simd_andc(bytetest_80_bf, tmp495);
        tmp525 = simd_and(tmp497, bytetest_85);
        carryQ.cq[93] = carryout2carry(pablo_blk_Advance(tmp525, carryQ.get_carry_in(93), tmp526));
        tmp527 = simd_and(tmp526, bytetest_80_ab);
        bytetest_84 = simd_and(tmp259, tmp95);
        bytetest_b0_bf = simd_and(bytetest_80_bf, tmp24);
        tmp528 = simd_and(tmp523, bytetest_b0_bf);
        tmp529 = simd_or(tmp528, tmp527);
        struct_So.cc = simd_or(tmp529, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9f = simd_and(tmp258, tmp51);
        bytetest_86 = simd_and(tmp259, tmp11);
        bytetest_80_9a = simd_andc(tmp315, tmp216);
        tmp530 = simd_and(tmp497, bytetest_86);
        carryQ.cq[94] = carryout2carry(pablo_blk_Advance(tmp530, carryQ.get_carry_in(94), tmp531));
        tmp532 = simd_and(tmp531, bytetest_80_9a);
        bytetest_85 = simd_and(tmp259, tmp79);
        bytetest_b0_bf = simd_and(bytetest_80_bf, tmp24);
        tmp533 = simd_and(tmp526, bytetest_b0_bf);
        tmp534 = simd_or(tmp533, tmp532);
        struct_So.cc = simd_or(tmp534, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9f = simd_and(tmp258, tmp51);
        bytetest_88 = simd_and(tmp259, tmp35);
        bytetest_80_82 = simd_andc(tmp446, tmp40);
        tmp535 = simd_and(tmp497, bytetest_88);
        carryQ.cq[95] = carryout2carry(pablo_blk_Advance(tmp535, carryQ.get_carry_in(95), tmp536));
        tmp537 = simd_and(tmp536, bytetest_80_82);
        bytetest_87 = simd_and(tmp259, tmp56);
        tmp538 = simd_or(basis_bits.bit_3, tmp327);
        bytetest_a6_bf = simd_and(bytetest_a0_bf, tmp538);
        tmp539 = simd_and(tmp497, bytetest_87);
        carryQ.cq[96] = carryout2carry(pablo_blk_Advance(tmp539, carryQ.get_carry_in(96), tmp540));
        tmp541 = simd_and(tmp540, bytetest_a6_bf);
        tmp542 = simd_or(tmp541, tmp537);
        struct_So.cc = simd_or(tmp542, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9f = simd_and(tmp258, tmp51);
        bytetest_88 = simd_and(tmp259, tmp35);
        tmp543 = simd_not(tmp216);
        tmp544 = simd_or(simd_and(basis_bits.bit_2, tmp543), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
        bytetest_90_ba = simd_and(bytetest_80_bf, tmp544);
        tmp545 = simd_and(tmp536, bytetest_90_ba);
        struct_So.cc = simd_or(tmp545, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9f = simd_and(tmp258, tmp51);
        bytetest_89 = simd_and(tmp259, tmp19);
        bytetest_80_88 = simd_andc(tmp259, tmp459);
        tmp546 = simd_and(tmp497, bytetest_89);
        carryQ.cq[97] = carryout2carry(pablo_blk_Advance(tmp546, carryQ.get_carry_in(97), tmp547));
        tmp548 = simd_and(tmp547, bytetest_80_88);
        struct_So.cc = simd_or(tmp548, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9f = simd_and(tmp258, tmp51);
        bytetest_89 = simd_and(tmp259, tmp19);
        bytetest_90_91 = simd_andc(tmp258, tmp140);
        tmp549 = simd_and(tmp547, bytetest_90_91);
        struct_So.cc = simd_or(tmp549, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9f = simd_and(tmp258, tmp51);
        bytetest_8c = simd_and(tmp259, tmp83);
        tmp550 = simd_and(basis_bits.bit_2, tmp289);
        bytetest_80_a0 = simd_andc(bytetest_80_bf, tmp550);
        tmp551 = simd_and(tmp497, bytetest_8c);
        carryQ.cq[98] = carryout2carry(pablo_blk_Advance(tmp551, carryQ.get_carry_in(98), tmp552));
        tmp553 = simd_and(tmp552, bytetest_80_a0);
        struct_So.cc = simd_or(tmp553, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9f = simd_and(tmp258, tmp51);
        bytetest_8c = simd_and(tmp259, tmp83);
        tmp554 = simd_andc(bytetest_b0_bf, basis_bits.bit_4);
        bytetest_b0_b5 = simd_andc(tmp554, tmp100);
        tmp555 = simd_and(tmp552, bytetest_b0_b5);
        struct_So.cc = simd_or(tmp555, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9f = simd_and(tmp258, tmp51);
        bytetest_8d = simd_and(tmp259, tmp63);
        tmp556 = simd_and(basis_bits.bit_2, tmp434);
        bytetest_80_bc = simd_andc(bytetest_80_bf, tmp556);
        tmp557 = simd_and(tmp497, bytetest_8d);
        carryQ.cq[99] = carryout2carry(pablo_blk_Advance(tmp557, carryQ.get_carry_in(99), tmp558));
        tmp559 = simd_and(tmp558, bytetest_80_bc);
        bytetest_8c = simd_and(tmp259, tmp83);
        bytetest_b7_bf = simd_and(bytetest_b0_bf, tmp230);
        tmp560 = simd_and(tmp552, bytetest_b7_bf);
        tmp561 = simd_or(tmp560, tmp559);
        struct_So.cc = simd_or(tmp561, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9f = simd_and(tmp258, tmp51);
        bytetest_8e = simd_and(tmp259, tmp22);
        bytetest_80_93 = simd_andc(tmp315, tmp193);
        tmp562 = simd_and(tmp497, bytetest_8e);
        carryQ.cq[100] = carryout2carry(pablo_blk_Advance(tmp562, carryQ.get_carry_in(100), tmp563));
        tmp564 = simd_and(tmp563, bytetest_80_93);
        struct_So.cc = simd_or(tmp564, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9f = simd_and(tmp258, tmp51);
        bytetest_8f = simd_and(tmp259, tmp51);
        bytetest_80_84 = simd_andc(bytetest_80_87, tmp108);
        tmp565 = simd_and(tmp497, bytetest_8f);
        carryQ.cq[101] = carryout2carry(pablo_blk_Advance(tmp565, carryQ.get_carry_in(101), tmp566));
        tmp567 = simd_and(tmp566, bytetest_80_84);
        bytetest_8e = simd_and(tmp259, tmp22);
        bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp568 = simd_and(tmp563, bytetest_a0_bf);
        tmp569 = simd_or(tmp568, tmp567);
        struct_So.cc = simd_or(tmp569, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9f = simd_and(tmp258, tmp51);
        bytetest_8f = simd_and(tmp259, tmp51);
        tmp570 = simd_or(simd_and(basis_bits.bit_4, tmp133), simd_andc(tmp100, basis_bits.bit_4));
        bytetest_86_8a = simd_and(tmp259, tmp570);
        tmp571 = simd_and(tmp566, bytetest_86_8a);
        struct_So.cc = simd_or(tmp571, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9f = simd_and(tmp258, tmp51);
        bytetest_8f = simd_and(tmp259, tmp51);
        bytetest_a0_b0 = simd_andc(bytetest_a0_bf, tmp368);
        tmp572 = simd_and(tmp566, bytetest_a0_b0);
        struct_So.cc = simd_or(tmp572, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9f = simd_and(tmp258, tmp51);
        bytetest_90 = simd_andc(tmp258, tmp27);
        bytetest_80_be = simd_andc(bytetest_80_bf, tmp374);
        tmp573 = simd_and(tmp497, bytetest_90);
        carryQ.cq[102] = carryout2carry(pablo_blk_Advance(tmp573, carryQ.get_carry_in(102), tmp574));
        tmp575 = simd_and(tmp574, bytetest_80_be);
        struct_So.cc = simd_or(tmp575, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9f = simd_and(tmp258, tmp51);
        bytetest_91 = simd_and(tmp258, tmp75);
        bytetest_80_80 = simd_andc(tmp259, tmp27);
        tmp576 = simd_and(tmp497, bytetest_91);
        carryQ.cq[103] = carryout2carry(pablo_blk_Advance(tmp576, carryQ.get_carry_in(103), tmp577));
        tmp578 = simd_and(tmp577, bytetest_80_80);
        struct_So.cc = simd_or(tmp578, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9f = simd_and(tmp258, tmp51);
        bytetest_93 = simd_and(tmp258, tmp88);
        tmp579 = simd_and(basis_bits.bit_2, tmp266);
        bytetest_80_b7 = simd_andc(bytetest_80_bf, tmp579);
        tmp580 = simd_and(tmp497, bytetest_93);
        carryQ.cq[104] = carryout2carry(pablo_blk_Advance(tmp580, carryQ.get_carry_in(104), tmp581));
        tmp582 = simd_and(tmp581, bytetest_80_b7);
        bytetest_92 = simd_and(tmp258, tmp6);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp583 = simd_and(tmp497, bytetest_92);
        carryQ.cq[105] = carryout2carry(pablo_blk_Advance(tmp583, carryQ.get_carry_in(105), tmp584));
        tmp585 = simd_and(tmp584, bytetest_80_bf);
        bytetest_91 = simd_and(tmp258, tmp75);
        tmp586 = simd_or(basis_bits.bit_2, tmp268);
        bytetest_82_bf = simd_and(bytetest_80_bf, tmp586);
        tmp587 = simd_and(tmp577, bytetest_82_bf);
        tmp588 = simd_or(tmp587, tmp585);
        tmp589 = simd_or(tmp588, tmp582);
        struct_So.cc = simd_or(tmp589, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9f = simd_and(tmp258, tmp51);
        bytetest_93 = simd_and(tmp258, tmp88);
        tmp590 = simd_or(simd_and(basis_bits.bit_5, tmp464), simd_andc(tmp26, basis_bits.bit_5));
        bytetest_b9_bc = simd_and(tmp427, tmp590);
        tmp591 = simd_and(tmp581, bytetest_b9_bc);
        struct_So.cc = simd_or(tmp591, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9f = simd_and(tmp258, tmp51);
        bytetest_94 = simd_and(tmp258, tmp95);
        tmp592 = simd_and(basis_bits.bit_2, tmp128);
        bytetest_80_bd = simd_andc(bytetest_80_bf, tmp592);
        tmp593 = simd_and(tmp497, bytetest_94);
        carryQ.cq[106] = carryout2carry(pablo_blk_Advance(tmp593, carryQ.get_carry_in(106), tmp594));
        tmp595 = simd_and(tmp594, bytetest_80_bd);
        struct_So.cc = simd_or(tmp595, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9f = simd_and(tmp258, tmp51);
        bytetest_95 = simd_and(tmp258, tmp79);
        bytetest_80_83 = simd_andc(tmp259, tmp4);
        tmp596 = simd_and(tmp497, bytetest_95);
        carryQ.cq[107] = carryout2carry(pablo_blk_Advance(tmp596, carryQ.get_carry_in(107), tmp597));
        tmp598 = simd_and(tmp597, bytetest_80_83);
        struct_So.cc = simd_or(tmp598, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9f = simd_and(tmp258, tmp51);
        bytetest_95 = simd_and(tmp258, tmp79);
        tmp599 = simd_not(tmp284);
        tmp600 = simd_or(simd_and(basis_bits.bit_2, tmp599), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
        bytetest_90_a7 = simd_and(bytetest_80_bf, tmp600);
        tmp601 = simd_and(tmp597, bytetest_90_a7);
        struct_So.cc = simd_or(tmp601, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9f = simd_and(tmp258, tmp51);
        bytetest_99 = simd_and(tmp258, tmp19);
        bytetest_80_80 = simd_andc(tmp259, tmp27);
        tmp602 = simd_and(tmp497, bytetest_99);
        carryQ.cq[108] = carryout2carry(pablo_blk_Advance(tmp602, carryQ.get_carry_in(108), tmp603));
        tmp604 = simd_and(tmp603, bytetest_80_80);
        bytetest_98 = simd_and(tmp258, tmp35);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp605 = simd_and(tmp497, bytetest_98);
        carryQ.cq[109] = carryout2carry(pablo_blk_Advance(tmp605, carryQ.get_carry_in(109), tmp606));
        tmp607 = simd_and(tmp606, bytetest_80_bf);
        bytetest_97 = simd_and(tmp258, tmp56);
        bytetest_bb_bf = simd_and(tmp427, tmp69);
        tmp608 = simd_and(tmp497, bytetest_97);
        carryQ.cq[110] = carryout2carry(pablo_blk_Advance(tmp608, carryQ.get_carry_in(110), tmp609));
        tmp610 = simd_and(tmp609, bytetest_bb_bf);
        tmp611 = simd_or(tmp610, tmp607);
        tmp612 = simd_or(tmp611, tmp604);
        struct_So.cc = simd_or(tmp612, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9f = simd_and(tmp258, tmp51);
        bytetest_99 = simd_and(tmp258, tmp19);
        bytetest_85_8f = simd_and(tmp259, tmp195);
        tmp613 = simd_and(tmp603, bytetest_85_8f);
        struct_So.cc = simd_or(tmp613, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9f = simd_and(tmp258, tmp51);
        bytetest_9b = simd_and(tmp258, tmp41);
        bytetest_80_85 = simd_andc(bytetest_80_87, tmp100);
        tmp614 = simd_and(tmp497, bytetest_9b);
        carryQ.cq[111] = carryout2carry(pablo_blk_Advance(tmp614, carryQ.get_carry_in(111), tmp615));
        tmp616 = simd_and(tmp615, bytetest_80_85);
        bytetest_9a = simd_and(tmp258, tmp57);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp617 = simd_and(tmp497, bytetest_9a);
        carryQ.cq[112] = carryout2carry(pablo_blk_Advance(tmp617, carryQ.get_carry_in(112), tmp618));
        tmp619 = simd_and(tmp618, bytetest_80_bf);
        tmp620 = simd_or(tmp619, tmp616);
        struct_So.cc = simd_or(tmp620, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9f = simd_and(tmp258, tmp51);
        bytetest_9d = simd_and(tmp258, tmp63);
        bytetest_80_b3 = simd_andc(bytetest_80_bf, tmp320);
        tmp621 = simd_and(tmp497, bytetest_9d);
        carryQ.cq[113] = carryout2carry(pablo_blk_Advance(tmp621, carryQ.get_carry_in(113), tmp622));
        tmp623 = simd_and(tmp622, bytetest_80_b3);
        bytetest_9c = simd_and(tmp258, tmp83);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp624 = simd_and(tmp497, bytetest_9c);
        carryQ.cq[114] = carryout2carry(pablo_blk_Advance(tmp624, carryQ.get_carry_in(114), tmp625));
        tmp626 = simd_and(tmp625, bytetest_80_bf);
        tmp627 = simd_or(tmp626, tmp623);
        struct_So.cc = simd_or(tmp627, struct_So.cc);
        carryQ.CarryQ_Adjust(115);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_So & struct_So, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_c2, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, bytetest_a6_a6, tmp12, tmp13, tmp14, tmp15, tmp16;
		BitBlock tmp17, tmp18, tmp19, bytetest_a9_a9, tmp20, tmp21, tmp22;
		BitBlock bytetest_ae_ae, tmp23, tmp24, tmp25, tmp26, tmp27, bytetest_b0_b0;
		BitBlock tmp28, tmp29, tmp30, bytetest_d2, tmp31, bytetest_82_82, tmp32, tmp33;
		BitBlock tmp34, tmp35, bytetest_d8, tmp36, bytetest_8e_8f, tmp37, tmp38, tmp39;
		BitBlock tmp40, tmp41, bytetest_db, tmp42, bytetest_9e_9e, tmp43, tmp44, tmp45;
		BitBlock tmp46, tmp47, tmp48, tmp49, bytetest_bd_be, tmp50, tmp51, bytetest_df;
		BitBlock bytetest_b6_b6, tmp52, tmp53, tmp54, tmp55, bytetest_e0, tmp56;
		BitBlock bytetest_a7, tmp57, bytetest_ba_ba, tmp58, tmp59, tmp60, tmp61, tmp62;
		BitBlock tmp63, bytetest_ad, tmp64, tmp65, tmp66, bytetest_af, tmp67, tmp68;
		BitBlock tmp69, tmp70, bytetest_b3_b8, tmp71, tmp72, tmp73, tmp74, tmp75;
		BitBlock bytetest_b1, bytetest_bf_bf, tmp76, tmp77, tmp78, tmp79, bytetest_b5;
		BitBlock bytetest_b9_b9, tmp80, tmp81, tmp82, tmp83, bytetest_bc, tmp84;
		BitBlock bytetest_81_83, tmp85, tmp86, tmp87, tmp88, bytetest_93_93, tmp89;
		BitBlock tmp90, bytetest_95_97, tmp91, tmp92, tmp93, bytetest_9a_9f, tmp94;
		BitBlock tmp95, bytetest_b4_b4, tmp96, tmp97, bytetest_b8_b8, tmp98;
		BitBlock bytetest_bf, tmp99, tmp100, bytetest_80_85, tmp101, tmp102, tmp103;
		BitBlock bytetest_be, bytetest_be_bf, tmp104, tmp105, tmp106, tmp107, tmp108;
		BitBlock tmp109, tmp110, tmp111, bytetest_87_8c, tmp112, tmp113, tmp114;
		BitBlock bytetest_95_98, tmp115, bytetest_e1, bytetest_82, bytetest_9e_9f;
		BitBlock tmp116, tmp117, tmp118, tmp119, tmp120, bytetest_8e, tmp121;
		BitBlock bytetest_90_99, tmp122, tmp123, tmp124, bytetest_a5, bytetest_80_80;
		BitBlock tmp125, tmp126, tmp127, tmp128, tmp129, bytetest_9e_bf, tmp130;
		BitBlock tmp131, tmp132, tmp133, tmp134, bytetest_a1_aa, tmp135, tmp136;
		BitBlock tmp137, tmp138, bytetest_b4_bc, tmp139, bytetest_e2, bytetest_84;
		BitBlock tmp140, bytetest_80_81, tmp141, tmp142, tmp143, tmp144, tmp145;
		BitBlock tmp146, tmp147, bytetest_83_86, tmp148, tmp149, bytetest_88_89;
		BitBlock tmp150, bytetest_94_94, tmp151, tmp152, bytetest_96_97, tmp153;
		BitBlock tmp154, tmp155, tmp156, bytetest_9e_a3, tmp157, bytetest_a5_a5;
		BitBlock tmp158, bytetest_a7_a7, tmp159, tmp160, tmp161, tmp162;
		BitBlock bytetest_ba_bb, tmp163, bytetest_85, bytetest_8a_8a, tmp164, tmp165;
		BitBlock tmp166, tmp167, bytetest_8c_8d, tmp168, bytetest_8f_8f, tmp169;
		BitBlock bytetest_86, tmp170, tmp171, bytetest_95_99, tmp172, tmp173, tmp174;
		BitBlock bytetest_9c_9f, tmp175, tmp176, bytetest_a1_a2, tmp177, tmp178;
		BitBlock bytetest_a4_a5, tmp179, tmp180, tmp181, bytetest_a7_ad, tmp182;
		BitBlock bytetest_87, tmp183, bytetest_80_8d, tmp184, tmp185, tmp186, tmp187;
		BitBlock tmp188, bytetest_af_bf, tmp189, tmp190, bytetest_90_91, tmp191;
		BitBlock tmp192, tmp193, tmp194, tmp195, tmp196, tmp197, bytetest_95_b3;
		BitBlock tmp198, bytetest_8c, bytetest_80_87, tmp199, tmp200, tmp201, tmp202;
		BitBlock tmp203, bytetest_8c_9f, tmp204, tmp205, bytetest_a2_a8, tmp206;
		BitBlock bytetest_8d, tmp207, tmp208, bytetest_80_bb, tmp209, tmp210, tmp211;
		BitBlock tmp212, tmp213, bytetest_ab_bf, tmp214, tmp215, tmp216;
		BitBlock bytetest_80_9a, tmp217, tmp218, tmp219, bytetest_bd_bf, tmp220;
		BitBlock tmp221, bytetest_8f, bytetest_80_9b, tmp222, tmp223, tmp224;
		BitBlock bytetest_b4_bf, tmp225, tmp226, tmp227, tmp228, bytetest_a2_b3;
		BitBlock tmp229, bytetest_90, tmp230, tmp231, tmp232, bytetest_80_a6, tmp233;
		BitBlock tmp234, tmp235, bytetest_91, bytetest_80_8a, tmp236, tmp237, tmp238;
		BitBlock bytetest_93, tmp239, tmp240, bytetest_80_a9, tmp241, tmp242, tmp243;
		BitBlock bytetest_92, tmp244, bytetest_9c_bf, tmp245, tmp246, tmp247, tmp248;
		BitBlock bytetest_96, tmp249, tmp250, bytetest_80_b6, tmp251, tmp252, tmp253;
		BitBlock bytetest_94_95, bytetest_80_bf, tmp254, tmp255, tmp256, tmp257;
		BitBlock tmp258, bytetest_97, tmp259, tmp260, tmp261, tmp262, tmp263;
		BitBlock bytetest_b8_bf, tmp264, tmp265, tmp266, tmp267, tmp268, tmp269;
		BitBlock bytetest_82_b7, tmp270, bytetest_99, tmp271, bytetest_80_ae, tmp272;
		BitBlock tmp273, tmp274, bytetest_98, tmp275, tmp276, tmp277, tmp278;
		BitBlock bytetest_9a_9b, tmp279, tmp280, tmp281, bytetest_b0_bf, tmp282;
		BitBlock tmp283, bytetest_9d, tmp284, tmp285, bytetest_80_a7, tmp286, tmp287;
		BitBlock tmp288, bytetest_9c, tmp289, tmp290, bytetest_81_bf, tmp291, tmp292;
		BitBlock tmp293, tmp294, bytetest_9e, tmp295, bytetest_94_bf, tmp296, tmp297;
		BitBlock tmp298, tmp299, bytetest_a0_a3, tmp300, tmp301, tmp302, bytetest_ac;
		BitBlock bytetest_80_af, tmp303, tmp304, tmp305, tmp306, bytetest_85_86;
		BitBlock tmp307, tmp308, tmp309, tmp310, bytetest_b3, tmp311, bytetest_a5_aa;
		BitBlock tmp312, tmp313, tmp314, bytetest_ba, tmp315, tmp316, bytetest_80_99;
		BitBlock tmp317, tmp318, tmp319, bytetest_bb, tmp320, bytetest_80_b3, tmp321;
		BitBlock tmp322, tmp323, tmp324, bytetest_9b_bf, tmp325, tmp326, tmp327;
		BitBlock tmp328, bytetest_80_95, tmp329, tmp330, tmp331, tmp332;
		BitBlock bytetest_bc_be, tmp333, tmp334, tmp335, tmp336, bytetest_b0_bb;
		BitBlock tmp337, bytetest_e3, bytetest_80, bytetest_84_84, tmp338, tmp339;
		BitBlock tmp340, tmp341, tmp342, tmp343, bytetest_92_93, tmp344;
		BitBlock bytetest_a0_a0, tmp345, bytetest_b6_b7, tmp346, tmp347, tmp348;
		BitBlock tmp349, tmp350, bytetest_96_9f, tmp351, tmp352, bytetest_80_a3;
		BitBlock tmp353, tmp354, tmp355, bytetest_88, tmp356, bytetest_80_9e, tmp357;
		BitBlock tmp358, tmp359, bytetest_89, tmp360, tmp361, tmp362, tmp363;
		BitBlock bytetest_aa_bf, tmp364, tmp365, bytetest_90_90, tmp366;
		BitBlock bytetest_a0_bf, tmp367, bytetest_8a, tmp368, tmp369, tmp370;
		BitBlock bytetest_8a_b0, tmp371, tmp372, tmp373, bytetest_8b, tmp374;
		BitBlock bytetest_80_be, tmp375, tmp376, tmp377, bytetest_8c_8f, tmp378;
		BitBlock tmp379, tmp380, bytetest_e4, bytetest_b7, tmp381, tmp382, tmp383;
		BitBlock tmp384, tmp385, bytetest_ea, bytetest_80_86, tmp386, tmp387, tmp388;
		BitBlock tmp389, tmp390, bytetest_90_bf, tmp391, tmp392, tmp393, tmp394;
		BitBlock bytetest_a0, bytetest_a8_ab, tmp395, tmp396, tmp397, tmp398, tmp399;
		BitBlock bytetest_a9, tmp400, bytetest_b7_b9, tmp401, tmp402, tmp403;
		BitBlock bytetest_ef, bytetest_bd_bd, tmp404, tmp405, tmp406, tmp407, tmp408;
		BitBlock bytetest_a4_a4, tmp409, tmp410, tmp411, bytetest_a8_a8, tmp412;
		BitBlock tmp413, bytetest_ad_ae, tmp414, bytetest_bc_bd, tmp415, tmp416;
		BitBlock bytetest_f0, bytetest_b7_bf, tmp417, tmp418, tmp419, tmp420, tmp421;
		BitBlock tmp422, tmp423, bytetest_80_89, tmp424, tmp425, tmp426, tmp427;
		BitBlock bytetest_b9_bf, tmp428, tmp429, tmp430, tmp431, bytetest_90_9b;
		BitBlock tmp432, tmp433, tmp434, tmp435, tmp436, bytetest_90_bc, tmp437;
		BitBlock tmp438, tmp439, bytetest_83, tmp440, bytetest_80_b5, tmp441, tmp442;
		BitBlock tmp443, tmp444, tmp445, tmp446, bytetest_80_82, tmp447, tmp448;
		BitBlock tmp449, tmp450, tmp451, tmp452, tmp453, tmp454, tmp455;
		BitBlock bytetest_80_a4, tmp456, tmp457, tmp458, tmp459, tmp460;
		BitBlock bytetest_a9_bf, tmp461, tmp462, tmp463, tmp464, tmp465;
		BitBlock bytetest_aa_ac, tmp466, tmp467, bytetest_83_84, tmp468, tmp469;
		BitBlock tmp470, tmp471, tmp472, bytetest_8c_a9, tmp473, bytetest_80_9d;
		BitBlock tmp474, tmp475, tmp476, tmp477, bytetest_ae_bf, tmp478, tmp479;
		BitBlock tmp480, tmp481, tmp482, tmp483, tmp484, tmp485, tmp486;
		BitBlock bytetest_85_85, tmp487, bytetest_80_96, tmp488, tmp489, tmp490;
		BitBlock tmp491, tmp492, tmp493, tmp494, bytetest_9f, tmp495, bytetest_80_ab;
		BitBlock tmp496, tmp497, tmp498, tmp499, tmp500, bytetest_80_93, tmp501;
		BitBlock tmp502, tmp503, bytetest_81, tmp504, tmp505, tmp506, tmp507, tmp508;
		BitBlock tmp509, tmp510, bytetest_a0_ae, tmp511, tmp512, tmp513;
		BitBlock bytetest_b1_be, tmp514, tmp515, bytetest_81_8f, tmp516, tmp517;
		BitBlock tmp518, bytetest_91_9f, tmp519, tmp520, tmp521, bytetest_90_ae;
		BitBlock tmp522, tmp523, tmp524, tmp525, tmp526, tmp527, tmp528, tmp529;
		BitBlock tmp530, tmp531, tmp532, tmp533, tmp534, tmp535, tmp536, tmp537;
		BitBlock tmp538, bytetest_a6_bf, tmp539, tmp540, tmp541, tmp542, tmp543;
		BitBlock tmp544, bytetest_90_ba, tmp545, bytetest_80_88, tmp546, tmp547;
		BitBlock tmp548, tmp549, tmp550, bytetest_80_a0, tmp551, tmp552, tmp553;
		BitBlock tmp554, bytetest_b0_b5, tmp555, tmp556, bytetest_80_bc, tmp557;
		BitBlock tmp558, tmp559, tmp560, tmp561, tmp562, tmp563, tmp564;
		BitBlock bytetest_80_84, tmp565, tmp566, tmp567, tmp568, tmp569, tmp570;
		BitBlock bytetest_86_8a, tmp571, bytetest_a0_b0, tmp572, tmp573, tmp574;
		BitBlock tmp575, tmp576, tmp577, tmp578, tmp579, bytetest_80_b7, tmp580;
		BitBlock tmp581, tmp582, tmp583, tmp584, tmp585, tmp586, bytetest_82_bf;
		BitBlock tmp587, tmp588, tmp589, tmp590, bytetest_b9_bc, tmp591, bytetest_94;
		BitBlock tmp592, bytetest_80_bd, tmp593, tmp594, tmp595, bytetest_95;
		BitBlock bytetest_80_83, tmp596, tmp597, tmp598, tmp599, tmp600;
		BitBlock bytetest_90_a7, tmp601, tmp602, tmp603, tmp604, tmp605, tmp606;
		BitBlock tmp607, bytetest_bb_bf, tmp608, tmp609, tmp610, tmp611, tmp612;
		BitBlock bytetest_85_8f, tmp613, bytetest_9b, tmp614, tmp615, tmp616;
		BitBlock bytetest_9a, tmp617, tmp618, tmp619, tmp620, tmp621, tmp622, tmp623;
		BitBlock tmp624, tmp625, tmp626, tmp627;




        struct_So.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_andc(tmp5, tmp4);
        bytetest_c2 = simd_and(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp11 = simd_and(tmp10, tmp5);
        bytetest_a6_a6 = simd_and(tmp9, tmp11);
        tmp12 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp12, carryQ.get_carry_in(0), tmp13));
        tmp14 = simd_and(tmp13, bytetest_c2);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp14, carryQ.get_carry_in(1), tmp15));
        tmp16 = simd_and(tmp15, bytetest_a6_a6);
        struct_So.cc = simd_or(tmp16, struct_So.cc);
        bytetest_c2 = simd_and(tmp3, tmp6);
        tmp17 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp18 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp19 = simd_and(tmp17, tmp18);
        bytetest_a9_a9 = simd_and(tmp9, tmp19);
        tmp20 = simd_and(tmp15, bytetest_a9_a9);
        struct_So.cc = simd_or(tmp20, struct_So.cc);
        bytetest_c2 = simd_and(tmp3, tmp6);
        tmp21 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp22 = simd_and(tmp21, tmp5);
        bytetest_ae_ae = simd_and(tmp9, tmp22);
        tmp23 = simd_and(tmp15, bytetest_ae_ae);
        struct_So.cc = simd_or(tmp23, struct_So.cc);
        bytetest_c2 = simd_and(tmp3, tmp6);
        tmp24 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp25 = simd_and(tmp7, tmp24);
        tmp26 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp27 = simd_or(tmp4, tmp26);
        bytetest_b0_b0 = simd_andc(tmp25, tmp27);
        tmp28 = simd_and(tmp15, bytetest_b0_b0);
        struct_So.cc = simd_or(tmp28, struct_So.cc);
        tmp29 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp30 = simd_and(tmp1, tmp29);
        bytetest_d2 = simd_and(tmp30, tmp6);
        tmp31 = simd_andc(tmp7, tmp2);
        bytetest_82_82 = simd_and(tmp31, tmp6);
        tmp32 = simd_and(tmp13, bytetest_d2);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp32, carryQ.get_carry_in(2), tmp33));
        tmp34 = simd_and(tmp33, bytetest_82_82);
        struct_So.cc = simd_or(tmp34, struct_So.cc);
        tmp35 = simd_andc(tmp17, tmp26);
        bytetest_d8 = simd_and(tmp30, tmp35);
        tmp36 = simd_and(tmp21, basis_bits.bit_6);
        bytetest_8e_8f = simd_and(tmp31, tmp36);
        tmp37 = simd_and(tmp13, bytetest_d8);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp37, carryQ.get_carry_in(3), tmp38));
        tmp39 = simd_and(tmp38, bytetest_8e_8f);
        struct_So.cc = simd_or(tmp39, struct_So.cc);
        tmp40 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp41 = simd_and(tmp17, tmp40);
        bytetest_db = simd_and(tmp30, tmp41);
        tmp42 = simd_and(tmp7, tmp29);
        bytetest_9e_9e = simd_and(tmp42, tmp22);
        tmp43 = simd_and(tmp13, bytetest_db);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp43, carryQ.get_carry_in(4), tmp44));
        tmp45 = simd_and(tmp44, bytetest_9e_9e);
        struct_So.cc = simd_or(tmp45, struct_So.cc);
        bytetest_db = simd_and(tmp30, tmp41);
        bytetest_a9_a9 = simd_and(tmp9, tmp19);
        tmp46 = simd_and(tmp44, bytetest_a9_a9);
        struct_So.cc = simd_or(tmp46, struct_So.cc);
        bytetest_db = simd_and(tmp30, tmp41);
        tmp47 = simd_and(tmp25, tmp21);
        tmp48 = simd_not(basis_bits.bit_7);
        tmp49 = simd_or(simd_and(basis_bits.bit_6, tmp48), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
        bytetest_bd_be = simd_and(tmp47, tmp49);
        tmp50 = simd_and(tmp44, bytetest_bd_be);
        struct_So.cc = simd_or(tmp50, struct_So.cc);
        tmp51 = simd_and(tmp21, tmp40);
        bytetest_df = simd_and(tmp30, tmp51);
        bytetest_b6_b6 = simd_and(tmp25, tmp11);
        tmp52 = simd_and(tmp13, bytetest_df);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp52, carryQ.get_carry_in(5), tmp53));
        tmp54 = simd_and(tmp53, bytetest_b6_b6);
        struct_So.cc = simd_or(tmp54, struct_So.cc);
        tmp55 = simd_and(tmp1, tmp8);
        bytetest_e0 = simd_andc(tmp55, tmp27);
        tmp56 = simd_and(tmp10, tmp40);
        bytetest_a7 = simd_and(tmp9, tmp56);
        tmp57 = simd_and(tmp17, tmp5);
        bytetest_ba_ba = simd_and(tmp25, tmp57);
        tmp58 = simd_and(tmp13, bytetest_e0);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp58, carryQ.get_carry_in(6), tmp59));
        tmp60 = simd_and(tmp59, bytetest_a7);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp60, carryQ.get_carry_in(7), tmp61));
        tmp62 = simd_and(tmp61, bytetest_ba_ba);
        struct_So.cc = simd_or(tmp62, struct_So.cc);
        bytetest_e0 = simd_andc(tmp55, tmp27);
        tmp63 = simd_and(tmp21, tmp18);
        bytetest_ad = simd_and(tmp9, tmp63);
        bytetest_b0_b0 = simd_andc(tmp25, tmp27);
        tmp64 = simd_and(tmp59, bytetest_ad);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(tmp64, carryQ.get_carry_in(8), tmp65));
        tmp66 = simd_and(tmp65, bytetest_b0_b0);
        struct_So.cc = simd_or(tmp66, struct_So.cc);
        bytetest_e0 = simd_andc(tmp55, tmp27);
        bytetest_af = simd_and(tmp9, tmp51);
        tmp67 = simd_or(basis_bits.bit_5, tmp26);
        tmp68 = simd_not(tmp67);
        tmp69 = simd_or(basis_bits.bit_5, tmp40);
        tmp70 = simd_or(simd_and(basis_bits.bit_4, tmp68), simd_andc(tmp69, basis_bits.bit_4));
        bytetest_b3_b8 = simd_and(tmp25, tmp70);
        tmp71 = simd_and(tmp59, bytetest_af);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(tmp71, carryQ.get_carry_in(9), tmp72));
        tmp73 = simd_and(tmp72, bytetest_b3_b8);
        struct_So.cc = simd_or(tmp73, struct_So.cc);
        bytetest_e0 = simd_andc(tmp55, tmp27);
        bytetest_af = simd_and(tmp9, tmp51);
        bytetest_ba_ba = simd_and(tmp25, tmp57);
        tmp74 = simd_and(tmp72, bytetest_ba_ba);
        struct_So.cc = simd_or(tmp74, struct_So.cc);
        bytetest_e0 = simd_andc(tmp55, tmp27);
        tmp75 = simd_andc(tmp18, tmp4);
        bytetest_b1 = simd_and(tmp25, tmp75);
        bytetest_bf_bf = simd_and(tmp25, tmp51);
        tmp76 = simd_and(tmp59, bytetest_b1);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(tmp76, carryQ.get_carry_in(10), tmp77));
        tmp78 = simd_and(tmp77, bytetest_bf_bf);
        struct_So.cc = simd_or(tmp78, struct_So.cc);
        bytetest_e0 = simd_andc(tmp55, tmp27);
        tmp79 = simd_and(tmp10, tmp18);
        bytetest_b5 = simd_and(tmp25, tmp79);
        bytetest_b9_b9 = simd_and(tmp25, tmp19);
        tmp80 = simd_and(tmp59, bytetest_b5);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(tmp80, carryQ.get_carry_in(11), tmp81));
        tmp82 = simd_and(tmp81, bytetest_b9_b9);
        struct_So.cc = simd_or(tmp82, struct_So.cc);
        bytetest_e0 = simd_andc(tmp55, tmp27);
        tmp83 = simd_andc(tmp21, tmp26);
        bytetest_bc = simd_and(tmp25, tmp83);
        tmp84 = simd_andc(tmp31, tmp4);
        bytetest_81_83 = simd_and(tmp84, tmp26);
        tmp85 = simd_and(tmp59, bytetest_bc);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(tmp85, carryQ.get_carry_in(12), tmp86));
        tmp87 = simd_and(tmp86, bytetest_81_83);
        struct_So.cc = simd_or(tmp87, struct_So.cc);
        bytetest_e0 = simd_andc(tmp55, tmp27);
        bytetest_bc = simd_and(tmp25, tmp83);
        tmp88 = simd_andc(tmp40, tmp4);
        bytetest_93_93 = simd_and(tmp42, tmp88);
        tmp89 = simd_and(tmp86, bytetest_93_93);
        struct_So.cc = simd_or(tmp89, struct_So.cc);
        bytetest_e0 = simd_andc(tmp55, tmp27);
        bytetest_bc = simd_and(tmp25, tmp83);
        tmp90 = simd_and(tmp42, tmp10);
        bytetest_95_97 = simd_and(tmp90, tmp26);
        tmp91 = simd_and(tmp86, bytetest_95_97);
        struct_So.cc = simd_or(tmp91, struct_So.cc);
        bytetest_e0 = simd_andc(tmp55, tmp27);
        bytetest_bc = simd_and(tmp25, tmp83);
        tmp92 = simd_and(tmp42, basis_bits.bit_4);
        tmp93 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
        bytetest_9a_9f = simd_and(tmp92, tmp93);
        tmp94 = simd_and(tmp86, bytetest_9a_9f);
        struct_So.cc = simd_or(tmp94, struct_So.cc);
        bytetest_e0 = simd_andc(tmp55, tmp27);
        bytetest_bc = simd_and(tmp25, tmp83);
        tmp95 = simd_andc(tmp10, tmp26);
        bytetest_b4_b4 = simd_and(tmp25, tmp95);
        tmp96 = simd_and(tmp86, bytetest_b4_b4);
        struct_So.cc = simd_or(tmp96, struct_So.cc);
        bytetest_e0 = simd_andc(tmp55, tmp27);
        bytetest_bc = simd_and(tmp25, tmp83);
        bytetest_b6_b6 = simd_and(tmp25, tmp11);
        tmp97 = simd_and(tmp86, bytetest_b6_b6);
        struct_So.cc = simd_or(tmp97, struct_So.cc);
        bytetest_e0 = simd_andc(tmp55, tmp27);
        bytetest_bc = simd_and(tmp25, tmp83);
        bytetest_b8_b8 = simd_and(tmp25, tmp35);
        tmp98 = simd_and(tmp86, bytetest_b8_b8);
        struct_So.cc = simd_or(tmp98, struct_So.cc);
        bytetest_e0 = simd_andc(tmp55, tmp27);
        bytetest_bf = simd_and(tmp25, tmp51);
        tmp99 = simd_andc(tmp31, basis_bits.bit_4);
        tmp100 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        bytetest_80_85 = simd_andc(tmp99, tmp100);
        tmp101 = simd_and(tmp59, bytetest_bf);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(tmp101, carryQ.get_carry_in(13), tmp102));
        tmp103 = simd_and(tmp102, bytetest_80_85);
        bytetest_be = simd_and(tmp25, tmp22);
        bytetest_be_bf = simd_and(tmp25, tmp36);
        tmp104 = simd_and(tmp59, bytetest_be);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(tmp104, carryQ.get_carry_in(14), tmp105));
        tmp106 = simd_and(tmp105, bytetest_be_bf);
        tmp107 = simd_or(tmp106, tmp103);
        struct_So.cc = simd_or(tmp107, struct_So.cc);
        bytetest_e0 = simd_andc(tmp55, tmp27);
        bytetest_bf = simd_and(tmp25, tmp51);
        tmp108 = simd_and(basis_bits.bit_5, tmp26);
        tmp109 = simd_not(tmp108);
        tmp110 = simd_and(basis_bits.bit_5, tmp40);
        tmp111 = simd_or(simd_and(basis_bits.bit_4, tmp109), simd_andc(tmp110, basis_bits.bit_4));
        bytetest_87_8c = simd_and(tmp31, tmp111);
        tmp112 = simd_and(tmp102, bytetest_87_8c);
        struct_So.cc = simd_or(tmp112, struct_So.cc);
        bytetest_e0 = simd_andc(tmp55, tmp27);
        bytetest_bf = simd_and(tmp25, tmp51);
        bytetest_8e_8f = simd_and(tmp31, tmp36);
        tmp113 = simd_and(tmp102, bytetest_8e_8f);
        struct_So.cc = simd_or(tmp113, struct_So.cc);
        bytetest_e0 = simd_andc(tmp55, tmp27);
        bytetest_bf = simd_and(tmp25, tmp51);
        tmp114 = simd_or(simd_and(basis_bits.bit_4, tmp68), simd_andc(tmp108, basis_bits.bit_4));
        bytetest_95_98 = simd_and(tmp42, tmp114);
        tmp115 = simd_and(tmp102, bytetest_95_98);
        struct_So.cc = simd_or(tmp115, struct_So.cc);
        bytetest_e1 = simd_and(tmp55, tmp75);
        bytetest_82 = simd_and(tmp31, tmp6);
        bytetest_9e_9f = simd_and(tmp42, tmp36);
        tmp116 = simd_and(tmp13, bytetest_e1);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(tmp116, carryQ.get_carry_in(15), tmp117));
        tmp118 = simd_and(tmp117, bytetest_82);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(tmp118, carryQ.get_carry_in(16), tmp119));
        tmp120 = simd_and(tmp119, bytetest_9e_9f);
        struct_So.cc = simd_or(tmp120, struct_So.cc);
        bytetest_e1 = simd_and(tmp55, tmp75);
        bytetest_8e = simd_and(tmp31, tmp22);
        tmp121 = simd_and(basis_bits.bit_4, tmp93);
        bytetest_90_99 = simd_andc(tmp42, tmp121);
        tmp122 = simd_and(tmp117, bytetest_8e);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(tmp122, carryQ.get_carry_in(17), tmp123));
        tmp124 = simd_and(tmp123, bytetest_90_99);
        struct_So.cc = simd_or(tmp124, struct_So.cc);
        bytetest_e1 = simd_and(tmp55, tmp75);
        bytetest_a5 = simd_and(tmp9, tmp79);
        bytetest_80_80 = simd_andc(tmp31, tmp27);
        tmp125 = simd_and(tmp117, bytetest_a5);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(tmp125, carryQ.get_carry_in(18), tmp126));
        tmp127 = simd_and(tmp126, bytetest_80_80);
        struct_So.cc = simd_or(tmp127, struct_So.cc);
        bytetest_e1 = simd_and(tmp55, tmp75);
        bytetest_a7 = simd_and(tmp9, tmp56);
        tmp128 = simd_and(basis_bits.bit_3, tmp36);
        tmp129 = simd_or(basis_bits.bit_2, tmp128);
        bytetest_9e_bf = simd_and(tmp7, tmp129);
        tmp130 = simd_and(tmp117, bytetest_a7);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(tmp130, carryQ.get_carry_in(19), tmp131));
        tmp132 = simd_and(tmp131, bytetest_9e_bf);
        struct_So.cc = simd_or(tmp132, struct_So.cc);
        bytetest_e1 = simd_and(tmp55, tmp75);
        bytetest_ad = simd_and(tmp9, tmp63);
        tmp133 = simd_not(tmp69);
        tmp134 = simd_or(simd_and(basis_bits.bit_4, tmp133), simd_andc(tmp67, basis_bits.bit_4));
        bytetest_a1_aa = simd_and(tmp9, tmp134);
        tmp135 = simd_and(tmp117, bytetest_ad);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(tmp135, carryQ.get_carry_in(20), tmp136));
        tmp137 = simd_and(tmp136, bytetest_a1_aa);
        struct_So.cc = simd_or(tmp137, struct_So.cc);
        bytetest_e1 = simd_and(tmp55, tmp75);
        bytetest_ad = simd_and(tmp9, tmp63);
        tmp138 = simd_or(simd_and(basis_bits.bit_4, tmp109), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
        bytetest_b4_bc = simd_and(tmp25, tmp138);
        tmp139 = simd_and(tmp136, bytetest_b4_bc);
        struct_So.cc = simd_or(tmp139, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_84 = simd_and(tmp31, tmp95);
        tmp140 = simd_or(tmp4, basis_bits.bit_6);
        bytetest_80_81 = simd_andc(tmp31, tmp140);
        tmp141 = simd_and(tmp13, bytetest_e2);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(tmp141, carryQ.get_carry_in(21), tmp142));
        tmp143 = simd_and(tmp142, bytetest_84);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(tmp143, carryQ.get_carry_in(22), tmp144));
        tmp145 = simd_and(tmp144, bytetest_80_81);
        struct_So.cc = simd_or(tmp145, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_84 = simd_and(tmp31, tmp95);
        tmp146 = simd_not(tmp40);
        tmp147 = simd_or(simd_and(basis_bits.bit_5, tmp146), simd_andc(tmp40, basis_bits.bit_5));
        bytetest_83_86 = simd_and(tmp99, tmp147);
        tmp148 = simd_and(tmp144, bytetest_83_86);
        struct_So.cc = simd_or(tmp148, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_84 = simd_and(tmp31, tmp95);
        tmp149 = simd_andc(tmp17, basis_bits.bit_6);
        bytetest_88_89 = simd_and(tmp31, tmp149);
        tmp150 = simd_and(tmp144, bytetest_88_89);
        struct_So.cc = simd_or(tmp150, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_84 = simd_and(tmp31, tmp95);
        bytetest_94_94 = simd_and(tmp42, tmp95);
        tmp151 = simd_and(tmp144, bytetest_94_94);
        struct_So.cc = simd_or(tmp151, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_84 = simd_and(tmp31, tmp95);
        tmp152 = simd_and(tmp10, basis_bits.bit_6);
        bytetest_96_97 = simd_and(tmp42, tmp152);
        tmp153 = simd_and(tmp144, bytetest_96_97);
        struct_So.cc = simd_or(tmp153, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_84 = simd_and(tmp31, tmp95);
        tmp154 = simd_or(basis_bits.bit_3, tmp4);
        tmp155 = simd_not(tmp154);
        tmp156 = simd_or(simd_and(basis_bits.bit_2, tmp155), simd_andc(tmp128, basis_bits.bit_2));
        bytetest_9e_a3 = simd_and(tmp7, tmp156);
        tmp157 = simd_and(tmp144, bytetest_9e_a3);
        struct_So.cc = simd_or(tmp157, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_84 = simd_and(tmp31, tmp95);
        bytetest_a5_a5 = simd_and(tmp9, tmp79);
        tmp158 = simd_and(tmp144, bytetest_a5_a5);
        struct_So.cc = simd_or(tmp158, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_84 = simd_and(tmp31, tmp95);
        bytetest_a7_a7 = simd_and(tmp9, tmp56);
        tmp159 = simd_and(tmp144, bytetest_a7_a7);
        struct_So.cc = simd_or(tmp159, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_84 = simd_and(tmp31, tmp95);
        bytetest_a9_a9 = simd_and(tmp9, tmp19);
        tmp160 = simd_and(tmp144, bytetest_a9_a9);
        struct_So.cc = simd_or(tmp160, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_84 = simd_and(tmp31, tmp95);
        bytetest_ae_ae = simd_and(tmp9, tmp22);
        tmp161 = simd_and(tmp144, bytetest_ae_ae);
        struct_So.cc = simd_or(tmp161, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_84 = simd_and(tmp31, tmp95);
        tmp162 = simd_and(tmp17, basis_bits.bit_6);
        bytetest_ba_bb = simd_and(tmp25, tmp162);
        tmp163 = simd_and(tmp144, bytetest_ba_bb);
        struct_So.cc = simd_or(tmp163, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_85 = simd_and(tmp31, tmp79);
        bytetest_8a_8a = simd_and(tmp31, tmp57);
        tmp164 = simd_and(tmp142, bytetest_85);
        carryQ.cq[23] = carryout2carry(pablo_blk_Advance(tmp164, carryQ.get_carry_in(23), tmp165));
        tmp166 = simd_and(tmp165, bytetest_8a_8a);
        struct_So.cc = simd_or(tmp166, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_85 = simd_and(tmp31, tmp79);
        tmp167 = simd_andc(tmp21, basis_bits.bit_6);
        bytetest_8c_8d = simd_and(tmp31, tmp167);
        tmp168 = simd_and(tmp165, bytetest_8c_8d);
        struct_So.cc = simd_or(tmp168, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_85 = simd_and(tmp31, tmp79);
        bytetest_8f_8f = simd_and(tmp31, tmp51);
        tmp169 = simd_and(tmp165, bytetest_8f_8f);
        struct_So.cc = simd_or(tmp169, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_86 = simd_and(tmp31, tmp11);
        tmp170 = simd_not(tmp93);
        tmp171 = simd_or(simd_and(basis_bits.bit_4, tmp170), simd_andc(tmp108, basis_bits.bit_4));
        bytetest_95_99 = simd_and(tmp42, tmp171);
        tmp172 = simd_and(tmp142, bytetest_86);
        carryQ.cq[24] = carryout2carry(pablo_blk_Advance(tmp172, carryQ.get_carry_in(24), tmp173));
        tmp174 = simd_and(tmp173, bytetest_95_99);
        struct_So.cc = simd_or(tmp174, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_86 = simd_and(tmp31, tmp11);
        bytetest_9c_9f = simd_and(tmp42, tmp21);
        tmp175 = simd_and(tmp173, bytetest_9c_9f);
        struct_So.cc = simd_or(tmp175, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_86 = simd_and(tmp31, tmp11);
        tmp176 = simd_andc(tmp9, tmp4);
        bytetest_a1_a2 = simd_and(tmp176, tmp49);
        tmp177 = simd_and(tmp173, bytetest_a1_a2);
        struct_So.cc = simd_or(tmp177, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_86 = simd_and(tmp31, tmp11);
        tmp178 = simd_andc(tmp10, basis_bits.bit_6);
        bytetest_a4_a5 = simd_and(tmp9, tmp178);
        tmp179 = simd_and(tmp173, bytetest_a4_a5);
        struct_So.cc = simd_or(tmp179, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_86 = simd_and(tmp31, tmp11);
        tmp180 = simd_not(tmp100);
        tmp181 = simd_or(simd_and(basis_bits.bit_4, tmp180), simd_andc(tmp110, basis_bits.bit_4));
        bytetest_a7_ad = simd_and(tmp9, tmp181);
        tmp182 = simd_and(tmp173, bytetest_a7_ad);
        struct_So.cc = simd_or(tmp182, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_87 = simd_and(tmp31, tmp56);
        tmp183 = simd_and(basis_bits.bit_4, tmp100);
        bytetest_80_8d = simd_andc(tmp31, tmp183);
        tmp184 = simd_and(tmp142, bytetest_87);
        carryQ.cq[25] = carryout2carry(pablo_blk_Advance(tmp184, carryQ.get_carry_in(25), tmp185));
        tmp186 = simd_and(tmp185, bytetest_80_8d);
        bytetest_86 = simd_and(tmp31, tmp11);
        tmp187 = simd_and(tmp7, basis_bits.bit_2);
        tmp188 = simd_or(basis_bits.bit_3, tmp51);
        bytetest_af_bf = simd_and(tmp187, tmp188);
        tmp189 = simd_and(tmp173, bytetest_af_bf);
        tmp190 = simd_or(tmp189, tmp186);
        struct_So.cc = simd_or(tmp190, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_87 = simd_and(tmp31, tmp56);
        bytetest_90_91 = simd_andc(tmp42, tmp140);
        tmp191 = simd_and(tmp185, bytetest_90_91);
        struct_So.cc = simd_or(tmp191, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_87 = simd_and(tmp31, tmp56);
        bytetest_93_93 = simd_and(tmp42, tmp88);
        tmp192 = simd_and(tmp185, bytetest_93_93);
        struct_So.cc = simd_or(tmp192, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_87 = simd_and(tmp31, tmp56);
        tmp193 = simd_and(basis_bits.bit_3, tmp4);
        tmp194 = simd_not(tmp193);
        tmp195 = simd_or(basis_bits.bit_4, tmp108);
        tmp196 = simd_and(basis_bits.bit_3, tmp195);
        tmp197 = simd_or(simd_and(basis_bits.bit_2, tmp194), simd_andc(tmp196, basis_bits.bit_2));
        bytetest_95_b3 = simd_and(tmp7, tmp197);
        tmp198 = simd_and(tmp185, bytetest_95_b3);
        struct_So.cc = simd_or(tmp198, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_8c = simd_and(tmp31, tmp83);
        bytetest_80_87 = simd_andc(tmp31, basis_bits.bit_4);
        tmp199 = simd_and(tmp142, bytetest_8c);
        carryQ.cq[26] = carryout2carry(pablo_blk_Advance(tmp199, carryQ.get_carry_in(26), tmp200));
        tmp201 = simd_and(tmp200, bytetest_80_87);
        struct_So.cc = simd_or(tmp201, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_8c = simd_and(tmp31, tmp83);
        tmp202 = simd_andc(tmp7, basis_bits.bit_2);
        tmp203 = simd_or(basis_bits.bit_3, tmp21);
        bytetest_8c_9f = simd_and(tmp202, tmp203);
        tmp204 = simd_and(tmp200, bytetest_8c_9f);
        struct_So.cc = simd_or(tmp204, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_8c = simd_and(tmp31, tmp83);
        tmp205 = simd_or(simd_and(basis_bits.bit_4, tmp68), simd_andc(tmp93, basis_bits.bit_4));
        bytetest_a2_a8 = simd_and(tmp9, tmp205);
        tmp206 = simd_and(tmp200, bytetest_a2_a8);
        struct_So.cc = simd_or(tmp206, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_8d = simd_and(tmp31, tmp63);
        tmp207 = simd_and(basis_bits.bit_3, tmp21);
        tmp208 = simd_and(basis_bits.bit_2, tmp207);
        bytetest_80_bb = simd_andc(tmp7, tmp208);
        tmp209 = simd_and(tmp142, bytetest_8d);
        carryQ.cq[27] = carryout2carry(pablo_blk_Advance(tmp209, carryQ.get_carry_in(27), tmp210));
        tmp211 = simd_and(tmp210, bytetest_80_bb);
        bytetest_8c = simd_and(tmp31, tmp83);
        tmp212 = simd_and(basis_bits.bit_4, tmp69);
        tmp213 = simd_or(basis_bits.bit_3, tmp212);
        bytetest_ab_bf = simd_and(tmp187, tmp213);
        tmp214 = simd_and(tmp200, bytetest_ab_bf);
        tmp215 = simd_or(tmp214, tmp211);
        struct_So.cc = simd_or(tmp215, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_8e = simd_and(tmp31, tmp22);
        tmp216 = simd_and(basis_bits.bit_3, tmp212);
        bytetest_80_9a = simd_andc(tmp202, tmp216);
        tmp217 = simd_and(tmp142, bytetest_8e);
        carryQ.cq[28] = carryout2carry(pablo_blk_Advance(tmp217, carryQ.get_carry_in(28), tmp218));
        tmp219 = simd_and(tmp218, bytetest_80_9a);
        bytetest_8d = simd_and(tmp31, tmp63);
        bytetest_bd_bf = simd_and(tmp47, tmp26);
        tmp220 = simd_and(tmp210, bytetest_bd_bf);
        tmp221 = simd_or(tmp220, tmp219);
        struct_So.cc = simd_or(tmp221, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_8f = simd_and(tmp31, tmp51);
        bytetest_80_9b = simd_andc(tmp202, tmp207);
        tmp222 = simd_and(tmp142, bytetest_8f);
        carryQ.cq[29] = carryout2carry(pablo_blk_Advance(tmp222, carryQ.get_carry_in(29), tmp223));
        tmp224 = simd_and(tmp223, bytetest_80_9b);
        bytetest_8e = simd_and(tmp31, tmp22);
        bytetest_b4_bf = simd_and(tmp25, tmp4);
        tmp225 = simd_and(tmp218, bytetest_b4_bf);
        tmp226 = simd_or(tmp225, tmp224);
        struct_So.cc = simd_or(tmp226, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_8f = simd_and(tmp31, tmp51);
        tmp227 = simd_not(tmp4);
        tmp228 = simd_or(simd_and(basis_bits.bit_3, tmp227), simd_andc(tmp140, basis_bits.bit_3));
        bytetest_a2_b3 = simd_and(tmp187, tmp228);
        tmp229 = simd_and(tmp223, bytetest_a2_b3);
        struct_So.cc = simd_or(tmp229, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_90 = simd_andc(tmp42, tmp27);
        tmp230 = simd_or(basis_bits.bit_4, tmp110);
        tmp231 = simd_or(basis_bits.bit_3, tmp230);
        tmp232 = simd_and(basis_bits.bit_2, tmp231);
        bytetest_80_a6 = simd_andc(tmp7, tmp232);
        tmp233 = simd_and(tmp142, bytetest_90);
        carryQ.cq[30] = carryout2carry(pablo_blk_Advance(tmp233, carryQ.get_carry_in(30), tmp234));
        tmp235 = simd_and(tmp234, bytetest_80_a6);
        struct_So.cc = simd_or(tmp235, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_91 = simd_and(tmp42, tmp75);
        bytetest_80_8a = simd_andc(tmp31, tmp212);
        tmp236 = simd_and(tmp142, bytetest_91);
        carryQ.cq[31] = carryout2carry(pablo_blk_Advance(tmp236, carryQ.get_carry_in(31), tmp237));
        tmp238 = simd_and(tmp237, bytetest_80_8a);
        struct_So.cc = simd_or(tmp238, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_93 = simd_and(tmp42, tmp88);
        tmp239 = simd_or(basis_bits.bit_3, tmp121);
        tmp240 = simd_and(basis_bits.bit_2, tmp239);
        bytetest_80_a9 = simd_andc(tmp7, tmp240);
        tmp241 = simd_and(tmp142, bytetest_93);
        carryQ.cq[32] = carryout2carry(pablo_blk_Advance(tmp241, carryQ.get_carry_in(32), tmp242));
        tmp243 = simd_and(tmp242, bytetest_80_a9);
        bytetest_92 = simd_and(tmp42, tmp6);
        tmp244 = simd_or(basis_bits.bit_2, tmp207);
        bytetest_9c_bf = simd_and(tmp7, tmp244);
        tmp245 = simd_and(tmp142, bytetest_92);
        carryQ.cq[33] = carryout2carry(pablo_blk_Advance(tmp245, carryQ.get_carry_in(33), tmp246));
        tmp247 = simd_and(tmp246, bytetest_9c_bf);
        tmp248 = simd_or(tmp247, tmp243);
        struct_So.cc = simd_or(tmp248, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_96 = simd_and(tmp42, tmp11);
        tmp249 = simd_and(basis_bits.bit_3, tmp230);
        tmp250 = simd_and(basis_bits.bit_2, tmp249);
        bytetest_80_b6 = simd_andc(tmp7, tmp250);
        tmp251 = simd_and(tmp142, bytetest_96);
        carryQ.cq[34] = carryout2carry(pablo_blk_Advance(tmp251, carryQ.get_carry_in(34), tmp252));
        tmp253 = simd_and(tmp252, bytetest_80_b6);
        bytetest_94_95 = simd_and(tmp42, tmp178);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp254 = simd_and(tmp142, bytetest_94_95);
        carryQ.cq[35] = carryout2carry(pablo_blk_Advance(tmp254, carryQ.get_carry_in(35), tmp255));
        tmp256 = simd_and(tmp255, bytetest_80_bf);
        tmp257 = simd_or(tmp256, tmp253);
        struct_So.cc = simd_or(tmp257, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        tmp258 = simd_and(bytetest_80_bf, tmp29);
        bytetest_97 = simd_and(tmp258, tmp56);
        tmp259 = simd_andc(bytetest_80_bf, tmp2);
        bytetest_80_80 = simd_andc(tmp259, tmp27);
        tmp260 = simd_and(tmp142, bytetest_97);
        carryQ.cq[36] = carryout2carry(pablo_blk_Advance(tmp260, carryQ.get_carry_in(36), tmp261));
        tmp262 = simd_and(tmp261, bytetest_80_80);
        bytetest_96 = simd_and(tmp258, tmp11);
        tmp263 = simd_and(bytetest_80_bf, tmp24);
        bytetest_b8_bf = simd_and(tmp263, basis_bits.bit_4);
        tmp264 = simd_and(tmp252, bytetest_b8_bf);
        tmp265 = simd_or(tmp264, tmp262);
        struct_So.cc = simd_or(tmp265, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_97 = simd_and(tmp258, tmp56);
        tmp266 = simd_and(basis_bits.bit_3, basis_bits.bit_4);
        tmp267 = simd_not(tmp266);
        tmp268 = simd_or(basis_bits.bit_3, tmp140);
        tmp269 = simd_or(simd_and(basis_bits.bit_2, tmp267), simd_andc(tmp268, basis_bits.bit_2));
        bytetest_82_b7 = simd_and(bytetest_80_bf, tmp269);
        tmp270 = simd_and(tmp261, bytetest_82_b7);
        struct_So.cc = simd_or(tmp270, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_99 = simd_and(tmp258, tmp19);
        tmp271 = simd_and(basis_bits.bit_2, tmp188);
        bytetest_80_ae = simd_andc(bytetest_80_bf, tmp271);
        tmp272 = simd_and(tmp142, bytetest_99);
        carryQ.cq[37] = carryout2carry(pablo_blk_Advance(tmp272, carryQ.get_carry_in(37), tmp273));
        tmp274 = simd_and(tmp273, bytetest_80_ae);
        bytetest_98 = simd_and(tmp258, tmp35);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp275 = simd_and(tmp142, bytetest_98);
        carryQ.cq[38] = carryout2carry(pablo_blk_Advance(tmp275, carryQ.get_carry_in(38), tmp276));
        tmp277 = simd_and(tmp276, bytetest_80_bf);
        tmp278 = simd_or(tmp277, tmp274);
        struct_So.cc = simd_or(tmp278, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_9a_9b = simd_and(tmp258, tmp162);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp279 = simd_and(tmp142, bytetest_9a_9b);
        carryQ.cq[39] = carryout2carry(pablo_blk_Advance(tmp279, carryQ.get_carry_in(39), tmp280));
        tmp281 = simd_and(tmp280, bytetest_80_bf);
        bytetest_99 = simd_and(tmp258, tmp19);
        bytetest_b0_bf = simd_and(bytetest_80_bf, tmp24);
        tmp282 = simd_and(tmp273, bytetest_b0_bf);
        tmp283 = simd_or(tmp282, tmp281);
        struct_So.cc = simd_or(tmp283, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_9d = simd_and(tmp258, tmp63);
        tmp284 = simd_or(basis_bits.bit_3, basis_bits.bit_4);
        tmp285 = simd_and(basis_bits.bit_2, tmp284);
        bytetest_80_a7 = simd_andc(bytetest_80_bf, tmp285);
        tmp286 = simd_and(tmp142, bytetest_9d);
        carryQ.cq[40] = carryout2carry(pablo_blk_Advance(tmp286, carryQ.get_carry_in(40), tmp287));
        tmp288 = simd_and(tmp287, bytetest_80_a7);
        bytetest_9c = simd_and(tmp258, tmp83);
        tmp289 = simd_or(basis_bits.bit_3, tmp27);
        tmp290 = simd_or(basis_bits.bit_2, tmp289);
        bytetest_81_bf = simd_and(bytetest_80_bf, tmp290);
        tmp291 = simd_and(tmp142, bytetest_9c);
        carryQ.cq[41] = carryout2carry(pablo_blk_Advance(tmp291, carryQ.get_carry_in(41), tmp292));
        tmp293 = simd_and(tmp292, bytetest_81_bf);
        tmp294 = simd_or(tmp293, tmp288);
        struct_So.cc = simd_or(tmp294, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_9e = simd_and(tmp258, tmp22);
        tmp295 = simd_or(basis_bits.bit_2, tmp193);
        bytetest_94_bf = simd_and(bytetest_80_bf, tmp295);
        tmp296 = simd_and(tmp142, bytetest_9e);
        carryQ.cq[42] = carryout2carry(pablo_blk_Advance(tmp296, carryQ.get_carry_in(42), tmp297));
        tmp298 = simd_and(tmp297, bytetest_94_bf);
        struct_So.cc = simd_or(tmp298, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        tmp299 = simd_and(bytetest_80_bf, tmp8);
        bytetest_a0_a3 = simd_andc(tmp299, tmp4);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp300 = simd_and(tmp142, bytetest_a0_a3);
        carryQ.cq[43] = carryout2carry(pablo_blk_Advance(tmp300, carryQ.get_carry_in(43), tmp301));
        tmp302 = simd_and(tmp301, bytetest_80_bf);
        struct_So.cc = simd_or(tmp302, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_ac = simd_and(tmp299, tmp83);
        bytetest_80_af = simd_andc(bytetest_80_bf, tmp24);
        tmp303 = simd_and(tmp142, bytetest_ac);
        carryQ.cq[44] = carryout2carry(pablo_blk_Advance(tmp303, carryQ.get_carry_in(44), tmp304));
        tmp305 = simd_and(tmp304, bytetest_80_af);
        struct_So.cc = simd_or(tmp305, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_ad = simd_and(tmp299, tmp63);
        tmp306 = simd_and(tmp259, tmp10);
        bytetest_85_86 = simd_and(tmp306, tmp49);
        tmp307 = simd_and(tmp142, bytetest_ad);
        carryQ.cq[45] = carryout2carry(pablo_blk_Advance(tmp307, carryQ.get_carry_in(45), tmp308));
        tmp309 = simd_and(tmp308, bytetest_85_86);
        struct_So.cc = simd_or(tmp309, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_ad = simd_and(tmp299, tmp63);
        bytetest_90_99 = simd_andc(tmp258, tmp121);
        tmp310 = simd_and(tmp308, bytetest_90_99);
        struct_So.cc = simd_or(tmp310, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_b3 = simd_and(bytetest_b0_bf, tmp88);
        tmp311 = simd_or(simd_and(basis_bits.bit_4, tmp133), simd_andc(tmp108, basis_bits.bit_4));
        bytetest_a5_aa = simd_and(tmp299, tmp311);
        tmp312 = simd_and(tmp142, bytetest_b3);
        carryQ.cq[46] = carryout2carry(pablo_blk_Advance(tmp312, carryQ.get_carry_in(46), tmp313));
        tmp314 = simd_and(tmp313, bytetest_a5_aa);
        struct_So.cc = simd_or(tmp314, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp57);
        tmp315 = simd_andc(bytetest_80_bf, basis_bits.bit_2);
        tmp316 = simd_and(basis_bits.bit_3, tmp121);
        bytetest_80_99 = simd_andc(tmp315, tmp316);
        tmp317 = simd_and(tmp142, bytetest_ba);
        carryQ.cq[47] = carryout2carry(pablo_blk_Advance(tmp317, carryQ.get_carry_in(47), tmp318));
        tmp319 = simd_and(tmp318, bytetest_80_99);
        struct_So.cc = simd_or(tmp319, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp41);
        tmp320 = simd_and(basis_bits.bit_2, tmp193);
        bytetest_80_b3 = simd_andc(bytetest_80_bf, tmp320);
        tmp321 = simd_and(tmp142, bytetest_bb);
        carryQ.cq[48] = carryout2carry(pablo_blk_Advance(tmp321, carryQ.get_carry_in(48), tmp322));
        tmp323 = simd_and(tmp322, bytetest_80_b3);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp57);
        tmp324 = simd_or(basis_bits.bit_2, tmp216);
        bytetest_9b_bf = simd_and(bytetest_80_bf, tmp324);
        tmp325 = simd_and(tmp318, bytetest_9b_bf);
        tmp326 = simd_or(tmp325, tmp323);
        struct_So.cc = simd_or(tmp326, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_bf = simd_and(bytetest_b0_bf, tmp51);
        tmp327 = simd_or(basis_bits.bit_4, tmp100);
        tmp328 = simd_and(basis_bits.bit_3, tmp327);
        bytetest_80_95 = simd_andc(tmp315, tmp328);
        tmp329 = simd_and(tmp142, bytetest_bf);
        carryQ.cq[49] = carryout2carry(pablo_blk_Advance(tmp329, carryQ.get_carry_in(49), tmp330));
        tmp331 = simd_and(tmp330, bytetest_80_95);
        tmp332 = simd_and(bytetest_b0_bf, tmp21);
        bytetest_bc_be = simd_andc(tmp332, tmp40);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp333 = simd_and(tmp142, bytetest_bc_be);
        carryQ.cq[50] = carryout2carry(pablo_blk_Advance(tmp333, carryQ.get_carry_in(50), tmp334));
        tmp335 = simd_and(tmp334, bytetest_80_bf);
        tmp336 = simd_or(tmp335, tmp331);
        struct_So.cc = simd_or(tmp336, struct_So.cc);
        bytetest_e2 = simd_and(tmp55, tmp6);
        bytetest_bf = simd_and(bytetest_b0_bf, tmp51);
        bytetest_b0_bb = simd_andc(bytetest_b0_bf, tmp21);
        tmp337 = simd_and(tmp330, bytetest_b0_bb);
        struct_So.cc = simd_or(tmp337, struct_So.cc);
        bytetest_e3 = simd_and(tmp55, tmp88);
        bytetest_80 = simd_andc(tmp259, tmp27);
        bytetest_84_84 = simd_and(tmp259, tmp95);
        tmp338 = simd_and(tmp13, bytetest_e3);
        carryQ.cq[51] = carryout2carry(pablo_blk_Advance(tmp338, carryQ.get_carry_in(51), tmp339));
        tmp340 = simd_and(tmp339, bytetest_80);
        carryQ.cq[52] = carryout2carry(pablo_blk_Advance(tmp340, carryQ.get_carry_in(52), tmp341));
        tmp342 = simd_and(tmp341, bytetest_84_84);
        struct_So.cc = simd_or(tmp342, struct_So.cc);
        bytetest_e3 = simd_and(tmp55, tmp88);
        bytetest_80 = simd_andc(tmp259, tmp27);
        tmp343 = simd_andc(basis_bits.bit_6, tmp4);
        bytetest_92_93 = simd_and(tmp258, tmp343);
        tmp344 = simd_and(tmp341, bytetest_92_93);
        struct_So.cc = simd_or(tmp344, struct_So.cc);
        bytetest_e3 = simd_and(tmp55, tmp88);
        bytetest_80 = simd_andc(tmp259, tmp27);
        bytetest_a0_a0 = simd_andc(tmp299, tmp27);
        tmp345 = simd_and(tmp341, bytetest_a0_a0);
        struct_So.cc = simd_or(tmp345, struct_So.cc);
        bytetest_e3 = simd_and(tmp55, tmp88);
        bytetest_80 = simd_andc(tmp259, tmp27);
        bytetest_b6_b7 = simd_and(bytetest_b0_bf, tmp152);
        tmp346 = simd_and(tmp341, bytetest_b6_b7);
        struct_So.cc = simd_or(tmp346, struct_So.cc);
        bytetest_e3 = simd_and(tmp55, tmp88);
        bytetest_80 = simd_andc(tmp259, tmp27);
        bytetest_be_bf = simd_and(bytetest_b0_bf, tmp36);
        tmp347 = simd_and(tmp341, bytetest_be_bf);
        struct_So.cc = simd_or(tmp347, struct_So.cc);
        bytetest_e3 = simd_and(tmp55, tmp88);
        bytetest_86 = simd_and(tmp259, tmp11);
        bytetest_90_91 = simd_andc(tmp258, tmp140);
        tmp348 = simd_and(tmp339, bytetest_86);
        carryQ.cq[53] = carryout2carry(pablo_blk_Advance(tmp348, carryQ.get_carry_in(53), tmp349));
        tmp350 = simd_and(tmp349, bytetest_90_91);
        struct_So.cc = simd_or(tmp350, struct_So.cc);
        bytetest_e3 = simd_and(tmp55, tmp88);
        bytetest_86 = simd_and(tmp259, tmp11);
        bytetest_96_9f = simd_and(tmp258, tmp327);
        tmp351 = simd_and(tmp349, bytetest_96_9f);
        struct_So.cc = simd_or(tmp351, struct_So.cc);
        bytetest_e3 = simd_and(tmp55, tmp88);
        bytetest_87 = simd_and(tmp259, tmp56);
        tmp352 = simd_and(basis_bits.bit_2, tmp154);
        bytetest_80_a3 = simd_andc(bytetest_80_bf, tmp352);
        tmp353 = simd_and(tmp339, bytetest_87);
        carryQ.cq[54] = carryout2carry(pablo_blk_Advance(tmp353, carryQ.get_carry_in(54), tmp354));
        tmp355 = simd_and(tmp354, bytetest_80_a3);
        struct_So.cc = simd_or(tmp355, struct_So.cc);
        bytetest_e3 = simd_and(tmp55, tmp88);
        bytetest_88 = simd_and(tmp259, tmp35);
        tmp356 = simd_and(basis_bits.bit_3, tmp51);
        bytetest_80_9e = simd_andc(tmp315, tmp356);
        tmp357 = simd_and(tmp339, bytetest_88);
        carryQ.cq[55] = carryout2carry(pablo_blk_Advance(tmp357, carryQ.get_carry_in(55), tmp358));
        tmp359 = simd_and(tmp358, bytetest_80_9e);
        struct_So.cc = simd_or(tmp359, struct_So.cc);
        bytetest_e3 = simd_and(tmp55, tmp88);
        bytetest_89 = simd_and(tmp259, tmp19);
        bytetest_80_87 = simd_andc(tmp259, basis_bits.bit_4);
        tmp360 = simd_and(tmp339, bytetest_89);
        carryQ.cq[56] = carryout2carry(pablo_blk_Advance(tmp360, carryQ.get_carry_in(56), tmp361));
        tmp362 = simd_and(tmp361, bytetest_80_87);
        bytetest_88 = simd_and(tmp259, tmp35);
        tmp363 = simd_and(bytetest_80_bf, basis_bits.bit_2);
        bytetest_aa_bf = simd_and(tmp363, tmp239);
        tmp364 = simd_and(tmp358, bytetest_aa_bf);
        tmp365 = simd_or(tmp364, tmp362);
        struct_So.cc = simd_or(tmp365, struct_So.cc);
        bytetest_e3 = simd_and(tmp55, tmp88);
        bytetest_89 = simd_and(tmp259, tmp19);
        bytetest_90_90 = simd_andc(tmp258, tmp27);
        tmp366 = simd_and(tmp361, bytetest_90_90);
        struct_So.cc = simd_or(tmp366, struct_So.cc);
        bytetest_e3 = simd_and(tmp55, tmp88);
        bytetest_89 = simd_and(tmp259, tmp19);
        bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp367 = simd_and(tmp361, bytetest_a0_bf);
        struct_So.cc = simd_or(tmp367, struct_So.cc);
        bytetest_e3 = simd_and(tmp55, tmp88);
        bytetest_8a = simd_and(tmp259, tmp57);
        tmp368 = simd_and(basis_bits.bit_3, tmp27);
        tmp369 = simd_not(tmp368);
        tmp370 = simd_or(simd_and(basis_bits.bit_2, tmp369), simd_andc(tmp239, basis_bits.bit_2));
        bytetest_8a_b0 = simd_and(bytetest_80_bf, tmp370);
        tmp371 = simd_and(tmp339, bytetest_8a);
        carryQ.cq[57] = carryout2carry(pablo_blk_Advance(tmp371, carryQ.get_carry_in(57), tmp372));
        tmp373 = simd_and(tmp372, bytetest_8a_b0);
        struct_So.cc = simd_or(tmp373, struct_So.cc);
        bytetest_e3 = simd_and(tmp55, tmp88);
        bytetest_8b = simd_and(tmp259, tmp41);
        tmp374 = simd_and(basis_bits.bit_2, tmp356);
        bytetest_80_be = simd_andc(bytetest_80_bf, tmp374);
        tmp375 = simd_and(tmp339, bytetest_8b);
        carryQ.cq[58] = carryout2carry(pablo_blk_Advance(tmp375, carryQ.get_carry_in(58), tmp376));
        tmp377 = simd_and(tmp376, bytetest_80_be);
        struct_So.cc = simd_or(tmp377, struct_So.cc);
        bytetest_e3 = simd_and(tmp55, tmp88);
        bytetest_8c_8f = simd_and(tmp259, tmp21);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp378 = simd_and(tmp339, bytetest_8c_8f);
        carryQ.cq[59] = carryout2carry(pablo_blk_Advance(tmp378, carryQ.get_carry_in(59), tmp379));
        tmp380 = simd_and(tmp379, bytetest_80_bf);
        struct_So.cc = simd_or(tmp380, struct_So.cc);
        bytetest_e4 = simd_and(tmp55, tmp95);
        bytetest_b7 = simd_and(bytetest_b0_bf, tmp56);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp381 = simd_and(tmp13, bytetest_e4);
        carryQ.cq[60] = carryout2carry(pablo_blk_Advance(tmp381, carryQ.get_carry_in(60), tmp382));
        tmp383 = simd_and(tmp382, bytetest_b7);
        carryQ.cq[61] = carryout2carry(pablo_blk_Advance(tmp383, carryQ.get_carry_in(61), tmp384));
        tmp385 = simd_and(tmp384, bytetest_80_bf);
        struct_So.cc = simd_or(tmp385, struct_So.cc);
        bytetest_ea = simd_and(tmp55, tmp57);
        bytetest_93 = simd_and(tmp258, tmp88);
        bytetest_80_86 = simd_andc(bytetest_80_87, tmp110);
        tmp386 = simd_and(tmp13, bytetest_ea);
        carryQ.cq[62] = carryout2carry(pablo_blk_Advance(tmp386, carryQ.get_carry_in(62), tmp387));
        tmp388 = simd_and(tmp387, bytetest_93);
        carryQ.cq[63] = carryout2carry(pablo_blk_Advance(tmp388, carryQ.get_carry_in(63), tmp389));
        tmp390 = simd_and(tmp389, bytetest_80_86);
        bytetest_92 = simd_and(tmp258, tmp6);
        bytetest_90_bf = simd_and(bytetest_80_bf, tmp2);
        tmp391 = simd_and(tmp387, bytetest_92);
        carryQ.cq[64] = carryout2carry(pablo_blk_Advance(tmp391, carryQ.get_carry_in(64), tmp392));
        tmp393 = simd_and(tmp392, bytetest_90_bf);
        tmp394 = simd_or(tmp393, tmp390);
        struct_So.cc = simd_or(tmp394, struct_So.cc);
        bytetest_ea = simd_and(tmp55, tmp57);
        bytetest_a0 = simd_andc(tmp299, tmp27);
        bytetest_a8_ab = simd_and(tmp299, tmp17);
        tmp395 = simd_and(tmp387, bytetest_a0);
        carryQ.cq[65] = carryout2carry(pablo_blk_Advance(tmp395, carryQ.get_carry_in(65), tmp396));
        tmp397 = simd_and(tmp396, bytetest_a8_ab);
        struct_So.cc = simd_or(tmp397, struct_So.cc);
        bytetest_ea = simd_and(tmp55, tmp57);
        bytetest_a0 = simd_andc(tmp299, tmp27);
        bytetest_b6_b7 = simd_and(bytetest_b0_bf, tmp152);
        tmp398 = simd_and(tmp396, bytetest_b6_b7);
        struct_So.cc = simd_or(tmp398, struct_So.cc);
        bytetest_ea = simd_and(tmp55, tmp57);
        bytetest_a0 = simd_andc(tmp299, tmp27);
        bytetest_b9_b9 = simd_and(bytetest_b0_bf, tmp19);
        tmp399 = simd_and(tmp396, bytetest_b9_b9);
        struct_So.cc = simd_or(tmp399, struct_So.cc);
        bytetest_ea = simd_and(tmp55, tmp57);
        bytetest_a9 = simd_and(tmp299, tmp19);
        tmp400 = simd_or(simd_and(basis_bits.bit_4, tmp170), simd_andc(tmp110, basis_bits.bit_4));
        bytetest_b7_b9 = simd_and(bytetest_b0_bf, tmp400);
        tmp401 = simd_and(tmp387, bytetest_a9);
        carryQ.cq[66] = carryout2carry(pablo_blk_Advance(tmp401, carryQ.get_carry_in(66), tmp402));
        tmp403 = simd_and(tmp402, bytetest_b7_b9);
        struct_So.cc = simd_or(tmp403, struct_So.cc);
        bytetest_ef = simd_and(tmp55, tmp51);
        bytetest_b7 = simd_and(bytetest_b0_bf, tmp56);
        bytetest_bd_bd = simd_and(bytetest_b0_bf, tmp63);
        tmp404 = simd_and(tmp13, bytetest_ef);
        carryQ.cq[67] = carryout2carry(pablo_blk_Advance(tmp404, carryQ.get_carry_in(67), tmp405));
        tmp406 = simd_and(tmp405, bytetest_b7);
        carryQ.cq[68] = carryout2carry(pablo_blk_Advance(tmp406, carryQ.get_carry_in(68), tmp407));
        tmp408 = simd_and(tmp407, bytetest_bd_bd);
        struct_So.cc = simd_or(tmp408, struct_So.cc);
        bytetest_ef = simd_and(tmp55, tmp51);
        bytetest_bf = simd_and(bytetest_b0_bf, tmp51);
        bytetest_a4_a4 = simd_and(tmp299, tmp95);
        tmp409 = simd_and(tmp405, bytetest_bf);
        carryQ.cq[69] = carryout2carry(pablo_blk_Advance(tmp409, carryQ.get_carry_in(69), tmp410));
        tmp411 = simd_and(tmp410, bytetest_a4_a4);
        struct_So.cc = simd_or(tmp411, struct_So.cc);
        bytetest_ef = simd_and(tmp55, tmp51);
        bytetest_bf = simd_and(bytetest_b0_bf, tmp51);
        bytetest_a8_a8 = simd_and(tmp299, tmp35);
        tmp412 = simd_and(tmp410, bytetest_a8_a8);
        struct_So.cc = simd_or(tmp412, struct_So.cc);
        bytetest_ef = simd_and(tmp55, tmp51);
        bytetest_bf = simd_and(bytetest_b0_bf, tmp51);
        tmp413 = simd_and(tmp299, tmp21);
        bytetest_ad_ae = simd_and(tmp413, tmp49);
        tmp414 = simd_and(tmp410, bytetest_ad_ae);
        struct_So.cc = simd_or(tmp414, struct_So.cc);
        bytetest_ef = simd_and(tmp55, tmp51);
        bytetest_bf = simd_and(bytetest_b0_bf, tmp51);
        bytetest_bc_bd = simd_and(bytetest_b0_bf, tmp167);
        tmp415 = simd_and(tmp410, bytetest_bc_bd);
        struct_So.cc = simd_or(tmp415, struct_So.cc);
        tmp416 = simd_and(tmp1, tmp24);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_90 = simd_andc(tmp258, tmp27);
        bytetest_84 = simd_and(tmp259, tmp95);
        bytetest_b7_bf = simd_and(bytetest_b0_bf, tmp230);
        tmp417 = simd_and(tmp13, bytetest_f0);
        carryQ.cq[70] = carryout2carry(pablo_blk_Advance(tmp417, carryQ.get_carry_in(70), tmp418));
        tmp419 = simd_and(tmp418, bytetest_90);
        carryQ.cq[71] = carryout2carry(pablo_blk_Advance(tmp419, carryQ.get_carry_in(71), tmp420));
        tmp421 = simd_and(tmp420, bytetest_84);
        carryQ.cq[72] = carryout2carry(pablo_blk_Advance(tmp421, carryQ.get_carry_in(72), tmp422));
        tmp423 = simd_and(tmp422, bytetest_b7_bf);
        struct_So.cc = simd_or(tmp423, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_90 = simd_andc(tmp258, tmp27);
        bytetest_86 = simd_and(tmp259, tmp11);
        bytetest_80_89 = simd_andc(tmp259, tmp121);
        tmp424 = simd_and(tmp420, bytetest_86);
        carryQ.cq[73] = carryout2carry(pablo_blk_Advance(tmp424, carryQ.get_carry_in(73), tmp425));
        tmp426 = simd_and(tmp425, bytetest_80_89);
        bytetest_85 = simd_and(tmp259, tmp79);
        tmp427 = simd_and(bytetest_b0_bf, basis_bits.bit_4);
        bytetest_b9_bf = simd_and(tmp427, tmp67);
        tmp428 = simd_and(tmp420, bytetest_85);
        carryQ.cq[74] = carryout2carry(pablo_blk_Advance(tmp428, carryQ.get_carry_in(74), tmp429));
        tmp430 = simd_and(tmp429, bytetest_b9_bf);
        tmp431 = simd_or(tmp430, tmp426);
        struct_So.cc = simd_or(tmp431, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_90 = simd_andc(tmp258, tmp27);
        bytetest_86 = simd_and(tmp259, tmp11);
        bytetest_90_9b = simd_andc(tmp258, tmp21);
        tmp432 = simd_and(tmp425, bytetest_90_9b);
        struct_So.cc = simd_or(tmp432, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_90 = simd_andc(tmp258, tmp27);
        bytetest_87 = simd_and(tmp259, tmp56);
        tmp433 = simd_and(tmp21, tmp26);
        tmp434 = simd_and(basis_bits.bit_3, tmp433);
        tmp435 = simd_not(tmp434);
        tmp436 = simd_or(simd_and(basis_bits.bit_2, tmp435), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
        bytetest_90_bc = simd_and(bytetest_80_bf, tmp436);
        tmp437 = simd_and(tmp420, bytetest_87);
        carryQ.cq[75] = carryout2carry(pablo_blk_Advance(tmp437, carryQ.get_carry_in(75), tmp438));
        tmp439 = simd_and(tmp438, bytetest_90_bc);
        struct_So.cc = simd_or(tmp439, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9d = simd_and(tmp258, tmp63);
        bytetest_83 = simd_and(tmp259, tmp88);
        tmp440 = simd_and(basis_bits.bit_2, tmp328);
        bytetest_80_b5 = simd_andc(bytetest_80_bf, tmp440);
        tmp441 = simd_and(tmp418, bytetest_9d);
        carryQ.cq[76] = carryout2carry(pablo_blk_Advance(tmp441, carryQ.get_carry_in(76), tmp442));
        tmp443 = simd_and(tmp442, bytetest_83);
        carryQ.cq[77] = carryout2carry(pablo_blk_Advance(tmp443, carryQ.get_carry_in(77), tmp444));
        tmp445 = simd_and(tmp444, bytetest_80_b5);
        tmp446 = simd_andc(tmp259, tmp4);
        bytetest_80_82 = simd_andc(tmp446, tmp40);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp447 = simd_and(tmp442, bytetest_80_82);
        carryQ.cq[78] = carryout2carry(pablo_blk_Advance(tmp447, carryQ.get_carry_in(78), tmp448));
        tmp449 = simd_and(tmp448, bytetest_80_bf);
        tmp450 = simd_or(tmp449, tmp445);
        struct_So.cc = simd_or(tmp450, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9d = simd_and(tmp258, tmp63);
        bytetest_84 = simd_and(tmp259, tmp95);
        bytetest_80_a6 = simd_andc(bytetest_80_bf, tmp232);
        tmp451 = simd_and(tmp442, bytetest_84);
        carryQ.cq[79] = carryout2carry(pablo_blk_Advance(tmp451, carryQ.get_carry_in(79), tmp452));
        tmp453 = simd_and(tmp452, bytetest_80_a6);
        struct_So.cc = simd_or(tmp453, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9d = simd_and(tmp258, tmp63);
        bytetest_85 = simd_and(tmp259, tmp79);
        tmp454 = simd_or(basis_bits.bit_3, tmp195);
        tmp455 = simd_and(basis_bits.bit_2, tmp454);
        bytetest_80_a4 = simd_andc(bytetest_80_bf, tmp455);
        tmp456 = simd_and(tmp442, bytetest_85);
        carryQ.cq[80] = carryout2carry(pablo_blk_Advance(tmp456, carryQ.get_carry_in(80), tmp457));
        tmp458 = simd_and(tmp457, bytetest_80_a4);
        bytetest_84 = simd_and(tmp259, tmp95);
        tmp459 = simd_and(basis_bits.bit_4, tmp67);
        tmp460 = simd_or(basis_bits.bit_3, tmp459);
        bytetest_a9_bf = simd_and(bytetest_a0_bf, tmp460);
        tmp461 = simd_and(tmp452, bytetest_a9_bf);
        tmp462 = simd_or(tmp461, tmp458);
        struct_So.cc = simd_or(tmp462, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9d = simd_and(tmp258, tmp63);
        bytetest_85 = simd_and(tmp259, tmp79);
        tmp463 = simd_and(tmp299, basis_bits.bit_4);
        tmp464 = simd_not(tmp26);
        tmp465 = simd_or(simd_and(basis_bits.bit_5, tmp464), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        bytetest_aa_ac = simd_and(tmp463, tmp465);
        tmp466 = simd_and(tmp457, bytetest_aa_ac);
        struct_So.cc = simd_or(tmp466, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9d = simd_and(tmp258, tmp63);
        bytetest_86 = simd_and(tmp259, tmp11);
        tmp467 = simd_or(simd_and(basis_bits.bit_5, tmp464), simd_andc(tmp40, basis_bits.bit_5));
        bytetest_83_84 = simd_and(bytetest_80_87, tmp467);
        tmp468 = simd_and(tmp442, bytetest_86);
        carryQ.cq[81] = carryout2carry(pablo_blk_Advance(tmp468, carryQ.get_carry_in(81), tmp469));
        tmp470 = simd_and(tmp469, bytetest_83_84);
        struct_So.cc = simd_or(tmp470, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9d = simd_and(tmp258, tmp63);
        bytetest_86 = simd_and(tmp259, tmp11);
        tmp471 = simd_not(tmp239);
        tmp472 = simd_or(simd_and(basis_bits.bit_2, tmp471), simd_andc(tmp203, basis_bits.bit_2));
        bytetest_8c_a9 = simd_and(bytetest_80_bf, tmp472);
        tmp473 = simd_and(tmp469, bytetest_8c_a9);
        struct_So.cc = simd_or(tmp473, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9d = simd_and(tmp258, tmp63);
        bytetest_87 = simd_and(tmp259, tmp56);
        bytetest_80_9d = simd_andc(tmp315, tmp128);
        tmp474 = simd_and(tmp442, bytetest_87);
        carryQ.cq[82] = carryout2carry(pablo_blk_Advance(tmp474, carryQ.get_carry_in(82), tmp475));
        tmp476 = simd_and(tmp475, bytetest_80_9d);
        bytetest_86 = simd_and(tmp259, tmp11);
        tmp477 = simd_or(basis_bits.bit_3, tmp36);
        bytetest_ae_bf = simd_and(bytetest_a0_bf, tmp477);
        tmp478 = simd_and(tmp469, bytetest_ae_bf);
        tmp479 = simd_or(tmp478, tmp476);
        struct_So.cc = simd_or(tmp479, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9d = simd_and(tmp258, tmp63);
        bytetest_89 = simd_and(tmp259, tmp19);
        bytetest_80_81 = simd_andc(tmp259, tmp140);
        tmp480 = simd_and(tmp442, bytetest_89);
        carryQ.cq[83] = carryout2carry(pablo_blk_Advance(tmp480, carryQ.get_carry_in(83), tmp481));
        tmp482 = simd_and(tmp481, bytetest_80_81);
        bytetest_88 = simd_and(tmp259, tmp35);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp483 = simd_and(tmp442, bytetest_88);
        carryQ.cq[84] = carryout2carry(pablo_blk_Advance(tmp483, carryQ.get_carry_in(84), tmp484));
        tmp485 = simd_and(tmp484, bytetest_80_bf);
        tmp486 = simd_or(tmp485, tmp482);
        struct_So.cc = simd_or(tmp486, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9d = simd_and(tmp258, tmp63);
        bytetest_89 = simd_and(tmp259, tmp19);
        bytetest_85_85 = simd_and(tmp259, tmp79);
        tmp487 = simd_and(tmp481, bytetest_85_85);
        struct_So.cc = simd_or(tmp487, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9d = simd_and(tmp258, tmp63);
        bytetest_8d = simd_and(tmp259, tmp63);
        bytetest_80_96 = simd_andc(tmp315, tmp249);
        tmp488 = simd_and(tmp442, bytetest_8d);
        carryQ.cq[85] = carryout2carry(pablo_blk_Advance(tmp488, carryQ.get_carry_in(85), tmp489));
        tmp490 = simd_and(tmp489, bytetest_80_96);
        bytetest_8c = simd_and(tmp259, tmp83);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp491 = simd_and(tmp442, bytetest_8c);
        carryQ.cq[86] = carryout2carry(pablo_blk_Advance(tmp491, carryQ.get_carry_in(86), tmp492));
        tmp493 = simd_and(tmp492, bytetest_80_bf);
        tmp494 = simd_or(tmp493, tmp490);
        struct_So.cc = simd_or(tmp494, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9f = simd_and(tmp258, tmp51);
        bytetest_80 = simd_andc(tmp259, tmp27);
        tmp495 = simd_and(basis_bits.bit_2, tmp203);
        bytetest_80_ab = simd_andc(bytetest_80_bf, tmp495);
        tmp496 = simd_and(tmp418, bytetest_9f);
        carryQ.cq[87] = carryout2carry(pablo_blk_Advance(tmp496, carryQ.get_carry_in(87), tmp497));
        tmp498 = simd_and(tmp497, bytetest_80);
        carryQ.cq[88] = carryout2carry(pablo_blk_Advance(tmp498, carryQ.get_carry_in(88), tmp499));
        tmp500 = simd_and(tmp499, bytetest_80_ab);
        struct_So.cc = simd_or(tmp500, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9f = simd_and(tmp258, tmp51);
        bytetest_82 = simd_and(tmp259, tmp6);
        bytetest_80_93 = simd_andc(tmp315, tmp193);
        tmp501 = simd_and(tmp497, bytetest_82);
        carryQ.cq[89] = carryout2carry(pablo_blk_Advance(tmp501, carryQ.get_carry_in(89), tmp502));
        tmp503 = simd_and(tmp502, bytetest_80_93);
        bytetest_81 = simd_and(tmp259, tmp75);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp504 = simd_and(tmp497, bytetest_81);
        carryQ.cq[90] = carryout2carry(pablo_blk_Advance(tmp504, carryQ.get_carry_in(90), tmp505));
        tmp506 = simd_and(tmp505, bytetest_80_bf);
        bytetest_80 = simd_andc(tmp259, tmp27);
        bytetest_b0_bf = simd_and(bytetest_80_bf, tmp24);
        tmp507 = simd_and(tmp499, bytetest_b0_bf);
        tmp508 = simd_or(tmp507, tmp506);
        tmp509 = simd_or(tmp508, tmp503);
        struct_So.cc = simd_or(tmp509, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9f = simd_and(tmp258, tmp51);
        bytetest_82 = simd_and(tmp259, tmp6);
        tmp510 = simd_and(basis_bits.bit_4, tmp110);
        bytetest_a0_ae = simd_andc(tmp299, tmp510);
        tmp511 = simd_and(tmp502, bytetest_a0_ae);
        struct_So.cc = simd_or(tmp511, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9f = simd_and(tmp258, tmp51);
        bytetest_82 = simd_and(tmp259, tmp6);
        tmp512 = simd_not(tmp110);
        tmp513 = simd_or(simd_and(basis_bits.bit_4, tmp512), simd_andc(tmp67, basis_bits.bit_4));
        bytetest_b1_be = simd_and(bytetest_b0_bf, tmp513);
        tmp514 = simd_and(tmp502, bytetest_b1_be);
        struct_So.cc = simd_or(tmp514, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9f = simd_and(tmp258, tmp51);
        bytetest_83 = simd_and(tmp259, tmp88);
        tmp515 = simd_or(basis_bits.bit_4, tmp67);
        bytetest_81_8f = simd_and(tmp259, tmp515);
        tmp516 = simd_and(tmp497, bytetest_83);
        carryQ.cq[91] = carryout2carry(pablo_blk_Advance(tmp516, carryQ.get_carry_in(91), tmp517));
        tmp518 = simd_and(tmp517, bytetest_81_8f);
        struct_So.cc = simd_or(tmp518, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9f = simd_and(tmp258, tmp51);
        bytetest_83 = simd_and(tmp259, tmp88);
        bytetest_91_9f = simd_and(tmp258, tmp515);
        tmp519 = simd_and(tmp517, bytetest_91_9f);
        struct_So.cc = simd_or(tmp519, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9f = simd_and(tmp258, tmp51);
        bytetest_84 = simd_and(tmp259, tmp95);
        tmp520 = simd_not(tmp188);
        tmp521 = simd_or(simd_and(basis_bits.bit_2, tmp520), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
        bytetest_90_ae = simd_and(bytetest_80_bf, tmp521);
        tmp522 = simd_and(tmp497, bytetest_84);
        carryQ.cq[92] = carryout2carry(pablo_blk_Advance(tmp522, carryQ.get_carry_in(92), tmp523));
        tmp524 = simd_and(tmp523, bytetest_90_ae);
        struct_So.cc = simd_or(tmp524, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9f = simd_and(tmp258, tmp51);
        bytetest_85 = simd_and(tmp259, tmp79);
        bytetest_80_ab = simd_andc(bytetest_80_bf, tmp495);
        tmp525 = simd_and(tmp497, bytetest_85);
        carryQ.cq[93] = carryout2carry(pablo_blk_Advance(tmp525, carryQ.get_carry_in(93), tmp526));
        tmp527 = simd_and(tmp526, bytetest_80_ab);
        bytetest_84 = simd_and(tmp259, tmp95);
        bytetest_b0_bf = simd_and(bytetest_80_bf, tmp24);
        tmp528 = simd_and(tmp523, bytetest_b0_bf);
        tmp529 = simd_or(tmp528, tmp527);
        struct_So.cc = simd_or(tmp529, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9f = simd_and(tmp258, tmp51);
        bytetest_86 = simd_and(tmp259, tmp11);
        bytetest_80_9a = simd_andc(tmp315, tmp216);
        tmp530 = simd_and(tmp497, bytetest_86);
        carryQ.cq[94] = carryout2carry(pablo_blk_Advance(tmp530, carryQ.get_carry_in(94), tmp531));
        tmp532 = simd_and(tmp531, bytetest_80_9a);
        bytetest_85 = simd_and(tmp259, tmp79);
        bytetest_b0_bf = simd_and(bytetest_80_bf, tmp24);
        tmp533 = simd_and(tmp526, bytetest_b0_bf);
        tmp534 = simd_or(tmp533, tmp532);
        struct_So.cc = simd_or(tmp534, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9f = simd_and(tmp258, tmp51);
        bytetest_88 = simd_and(tmp259, tmp35);
        bytetest_80_82 = simd_andc(tmp446, tmp40);
        tmp535 = simd_and(tmp497, bytetest_88);
        carryQ.cq[95] = carryout2carry(pablo_blk_Advance(tmp535, carryQ.get_carry_in(95), tmp536));
        tmp537 = simd_and(tmp536, bytetest_80_82);
        bytetest_87 = simd_and(tmp259, tmp56);
        tmp538 = simd_or(basis_bits.bit_3, tmp327);
        bytetest_a6_bf = simd_and(bytetest_a0_bf, tmp538);
        tmp539 = simd_and(tmp497, bytetest_87);
        carryQ.cq[96] = carryout2carry(pablo_blk_Advance(tmp539, carryQ.get_carry_in(96), tmp540));
        tmp541 = simd_and(tmp540, bytetest_a6_bf);
        tmp542 = simd_or(tmp541, tmp537);
        struct_So.cc = simd_or(tmp542, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9f = simd_and(tmp258, tmp51);
        bytetest_88 = simd_and(tmp259, tmp35);
        tmp543 = simd_not(tmp216);
        tmp544 = simd_or(simd_and(basis_bits.bit_2, tmp543), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
        bytetest_90_ba = simd_and(bytetest_80_bf, tmp544);
        tmp545 = simd_and(tmp536, bytetest_90_ba);
        struct_So.cc = simd_or(tmp545, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9f = simd_and(tmp258, tmp51);
        bytetest_89 = simd_and(tmp259, tmp19);
        bytetest_80_88 = simd_andc(tmp259, tmp459);
        tmp546 = simd_and(tmp497, bytetest_89);
        carryQ.cq[97] = carryout2carry(pablo_blk_Advance(tmp546, carryQ.get_carry_in(97), tmp547));
        tmp548 = simd_and(tmp547, bytetest_80_88);
        struct_So.cc = simd_or(tmp548, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9f = simd_and(tmp258, tmp51);
        bytetest_89 = simd_and(tmp259, tmp19);
        bytetest_90_91 = simd_andc(tmp258, tmp140);
        tmp549 = simd_and(tmp547, bytetest_90_91);
        struct_So.cc = simd_or(tmp549, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9f = simd_and(tmp258, tmp51);
        bytetest_8c = simd_and(tmp259, tmp83);
        tmp550 = simd_and(basis_bits.bit_2, tmp289);
        bytetest_80_a0 = simd_andc(bytetest_80_bf, tmp550);
        tmp551 = simd_and(tmp497, bytetest_8c);
        carryQ.cq[98] = carryout2carry(pablo_blk_Advance(tmp551, carryQ.get_carry_in(98), tmp552));
        tmp553 = simd_and(tmp552, bytetest_80_a0);
        struct_So.cc = simd_or(tmp553, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9f = simd_and(tmp258, tmp51);
        bytetest_8c = simd_and(tmp259, tmp83);
        tmp554 = simd_andc(bytetest_b0_bf, basis_bits.bit_4);
        bytetest_b0_b5 = simd_andc(tmp554, tmp100);
        tmp555 = simd_and(tmp552, bytetest_b0_b5);
        struct_So.cc = simd_or(tmp555, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9f = simd_and(tmp258, tmp51);
        bytetest_8d = simd_and(tmp259, tmp63);
        tmp556 = simd_and(basis_bits.bit_2, tmp434);
        bytetest_80_bc = simd_andc(bytetest_80_bf, tmp556);
        tmp557 = simd_and(tmp497, bytetest_8d);
        carryQ.cq[99] = carryout2carry(pablo_blk_Advance(tmp557, carryQ.get_carry_in(99), tmp558));
        tmp559 = simd_and(tmp558, bytetest_80_bc);
        bytetest_8c = simd_and(tmp259, tmp83);
        bytetest_b7_bf = simd_and(bytetest_b0_bf, tmp230);
        tmp560 = simd_and(tmp552, bytetest_b7_bf);
        tmp561 = simd_or(tmp560, tmp559);
        struct_So.cc = simd_or(tmp561, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9f = simd_and(tmp258, tmp51);
        bytetest_8e = simd_and(tmp259, tmp22);
        bytetest_80_93 = simd_andc(tmp315, tmp193);
        tmp562 = simd_and(tmp497, bytetest_8e);
        carryQ.cq[100] = carryout2carry(pablo_blk_Advance(tmp562, carryQ.get_carry_in(100), tmp563));
        tmp564 = simd_and(tmp563, bytetest_80_93);
        struct_So.cc = simd_or(tmp564, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9f = simd_and(tmp258, tmp51);
        bytetest_8f = simd_and(tmp259, tmp51);
        bytetest_80_84 = simd_andc(bytetest_80_87, tmp108);
        tmp565 = simd_and(tmp497, bytetest_8f);
        carryQ.cq[101] = carryout2carry(pablo_blk_Advance(tmp565, carryQ.get_carry_in(101), tmp566));
        tmp567 = simd_and(tmp566, bytetest_80_84);
        bytetest_8e = simd_and(tmp259, tmp22);
        bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp568 = simd_and(tmp563, bytetest_a0_bf);
        tmp569 = simd_or(tmp568, tmp567);
        struct_So.cc = simd_or(tmp569, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9f = simd_and(tmp258, tmp51);
        bytetest_8f = simd_and(tmp259, tmp51);
        tmp570 = simd_or(simd_and(basis_bits.bit_4, tmp133), simd_andc(tmp100, basis_bits.bit_4));
        bytetest_86_8a = simd_and(tmp259, tmp570);
        tmp571 = simd_and(tmp566, bytetest_86_8a);
        struct_So.cc = simd_or(tmp571, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9f = simd_and(tmp258, tmp51);
        bytetest_8f = simd_and(tmp259, tmp51);
        bytetest_a0_b0 = simd_andc(bytetest_a0_bf, tmp368);
        tmp572 = simd_and(tmp566, bytetest_a0_b0);
        struct_So.cc = simd_or(tmp572, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9f = simd_and(tmp258, tmp51);
        bytetest_90 = simd_andc(tmp258, tmp27);
        bytetest_80_be = simd_andc(bytetest_80_bf, tmp374);
        tmp573 = simd_and(tmp497, bytetest_90);
        carryQ.cq[102] = carryout2carry(pablo_blk_Advance(tmp573, carryQ.get_carry_in(102), tmp574));
        tmp575 = simd_and(tmp574, bytetest_80_be);
        struct_So.cc = simd_or(tmp575, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9f = simd_and(tmp258, tmp51);
        bytetest_91 = simd_and(tmp258, tmp75);
        bytetest_80_80 = simd_andc(tmp259, tmp27);
        tmp576 = simd_and(tmp497, bytetest_91);
        carryQ.cq[103] = carryout2carry(pablo_blk_Advance(tmp576, carryQ.get_carry_in(103), tmp577));
        tmp578 = simd_and(tmp577, bytetest_80_80);
        struct_So.cc = simd_or(tmp578, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9f = simd_and(tmp258, tmp51);
        bytetest_93 = simd_and(tmp258, tmp88);
        tmp579 = simd_and(basis_bits.bit_2, tmp266);
        bytetest_80_b7 = simd_andc(bytetest_80_bf, tmp579);
        tmp580 = simd_and(tmp497, bytetest_93);
        carryQ.cq[104] = carryout2carry(pablo_blk_Advance(tmp580, carryQ.get_carry_in(104), tmp581));
        tmp582 = simd_and(tmp581, bytetest_80_b7);
        bytetest_92 = simd_and(tmp258, tmp6);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp583 = simd_and(tmp497, bytetest_92);
        carryQ.cq[105] = carryout2carry(pablo_blk_Advance(tmp583, carryQ.get_carry_in(105), tmp584));
        tmp585 = simd_and(tmp584, bytetest_80_bf);
        bytetest_91 = simd_and(tmp258, tmp75);
        tmp586 = simd_or(basis_bits.bit_2, tmp268);
        bytetest_82_bf = simd_and(bytetest_80_bf, tmp586);
        tmp587 = simd_and(tmp577, bytetest_82_bf);
        tmp588 = simd_or(tmp587, tmp585);
        tmp589 = simd_or(tmp588, tmp582);
        struct_So.cc = simd_or(tmp589, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9f = simd_and(tmp258, tmp51);
        bytetest_93 = simd_and(tmp258, tmp88);
        tmp590 = simd_or(simd_and(basis_bits.bit_5, tmp464), simd_andc(tmp26, basis_bits.bit_5));
        bytetest_b9_bc = simd_and(tmp427, tmp590);
        tmp591 = simd_and(tmp581, bytetest_b9_bc);
        struct_So.cc = simd_or(tmp591, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9f = simd_and(tmp258, tmp51);
        bytetest_94 = simd_and(tmp258, tmp95);
        tmp592 = simd_and(basis_bits.bit_2, tmp128);
        bytetest_80_bd = simd_andc(bytetest_80_bf, tmp592);
        tmp593 = simd_and(tmp497, bytetest_94);
        carryQ.cq[106] = carryout2carry(pablo_blk_Advance(tmp593, carryQ.get_carry_in(106), tmp594));
        tmp595 = simd_and(tmp594, bytetest_80_bd);
        struct_So.cc = simd_or(tmp595, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9f = simd_and(tmp258, tmp51);
        bytetest_95 = simd_and(tmp258, tmp79);
        bytetest_80_83 = simd_andc(tmp259, tmp4);
        tmp596 = simd_and(tmp497, bytetest_95);
        carryQ.cq[107] = carryout2carry(pablo_blk_Advance(tmp596, carryQ.get_carry_in(107), tmp597));
        tmp598 = simd_and(tmp597, bytetest_80_83);
        struct_So.cc = simd_or(tmp598, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9f = simd_and(tmp258, tmp51);
        bytetest_95 = simd_and(tmp258, tmp79);
        tmp599 = simd_not(tmp284);
        tmp600 = simd_or(simd_and(basis_bits.bit_2, tmp599), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
        bytetest_90_a7 = simd_and(bytetest_80_bf, tmp600);
        tmp601 = simd_and(tmp597, bytetest_90_a7);
        struct_So.cc = simd_or(tmp601, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9f = simd_and(tmp258, tmp51);
        bytetest_99 = simd_and(tmp258, tmp19);
        bytetest_80_80 = simd_andc(tmp259, tmp27);
        tmp602 = simd_and(tmp497, bytetest_99);
        carryQ.cq[108] = carryout2carry(pablo_blk_Advance(tmp602, carryQ.get_carry_in(108), tmp603));
        tmp604 = simd_and(tmp603, bytetest_80_80);
        bytetest_98 = simd_and(tmp258, tmp35);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp605 = simd_and(tmp497, bytetest_98);
        carryQ.cq[109] = carryout2carry(pablo_blk_Advance(tmp605, carryQ.get_carry_in(109), tmp606));
        tmp607 = simd_and(tmp606, bytetest_80_bf);
        bytetest_97 = simd_and(tmp258, tmp56);
        bytetest_bb_bf = simd_and(tmp427, tmp69);
        tmp608 = simd_and(tmp497, bytetest_97);
        carryQ.cq[110] = carryout2carry(pablo_blk_Advance(tmp608, carryQ.get_carry_in(110), tmp609));
        tmp610 = simd_and(tmp609, bytetest_bb_bf);
        tmp611 = simd_or(tmp610, tmp607);
        tmp612 = simd_or(tmp611, tmp604);
        struct_So.cc = simd_or(tmp612, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9f = simd_and(tmp258, tmp51);
        bytetest_99 = simd_and(tmp258, tmp19);
        bytetest_85_8f = simd_and(tmp259, tmp195);
        tmp613 = simd_and(tmp603, bytetest_85_8f);
        struct_So.cc = simd_or(tmp613, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9f = simd_and(tmp258, tmp51);
        bytetest_9b = simd_and(tmp258, tmp41);
        bytetest_80_85 = simd_andc(bytetest_80_87, tmp100);
        tmp614 = simd_and(tmp497, bytetest_9b);
        carryQ.cq[111] = carryout2carry(pablo_blk_Advance(tmp614, carryQ.get_carry_in(111), tmp615));
        tmp616 = simd_and(tmp615, bytetest_80_85);
        bytetest_9a = simd_and(tmp258, tmp57);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp617 = simd_and(tmp497, bytetest_9a);
        carryQ.cq[112] = carryout2carry(pablo_blk_Advance(tmp617, carryQ.get_carry_in(112), tmp618));
        tmp619 = simd_and(tmp618, bytetest_80_bf);
        tmp620 = simd_or(tmp619, tmp616);
        struct_So.cc = simd_or(tmp620, struct_So.cc);
        bytetest_f0 = simd_andc(tmp416, tmp27);
        bytetest_9f = simd_and(tmp258, tmp51);
        bytetest_9d = simd_and(tmp258, tmp63);
        bytetest_80_b3 = simd_andc(bytetest_80_bf, tmp320);
        tmp621 = simd_and(tmp497, bytetest_9d);
        carryQ.cq[113] = carryout2carry(pablo_blk_Advance(tmp621, carryQ.get_carry_in(113), tmp622));
        tmp623 = simd_and(tmp622, bytetest_80_b3);
        bytetest_9c = simd_and(tmp258, tmp83);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp624 = simd_and(tmp497, bytetest_9c);
        carryQ.cq[114] = carryout2carry(pablo_blk_Advance(tmp624, carryQ.get_carry_in(114), tmp625));
        tmp626 = simd_and(tmp625, bytetest_80_bf);
        tmp627 = simd_or(tmp626, tmp623);
        struct_So.cc = simd_or(tmp627, struct_So.cc);
  }
  CarryArray<115, 0> carryQ;
  };

  struct Sm {
  Sm() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Sm & struct_Sm) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_2b_2b, tmp7, tmp8, tmp9;
		BitBlock tmp10, bytetest_3c_3e, tmp11, tmp12, tmp13, tmp14, bytetest_7c_7c;
		BitBlock tmp15, tmp16, bytetest_7e_7e, tmp17, tmp18, tmp19, tmp20, tmp21;
		BitBlock bytetest_c2, tmp22, tmp23, bytetest_ac_ac, tmp24, tmp25, tmp26, tmp27;
		BitBlock tmp28, tmp29, tmp30, tmp31, bytetest_b1_b1, tmp32, tmp33, bytetest_c3;
		BitBlock tmp34, tmp35, tmp36, tmp37, bytetest_97_97, tmp38, tmp39, tmp40;
		BitBlock bytetest_b7_b7, tmp41, tmp42, bytetest_cf, tmp43, bytetest_b6_b6;
		BitBlock tmp44, tmp45, tmp46, tmp47, tmp48, bytetest_d8, tmp49, tmp50, tmp51;
		BitBlock tmp52, tmp53, bytetest_86_88, tmp54, tmp55, tmp56, tmp57, bytetest_e2;
		BitBlock bytetest_81, tmp58, bytetest_84_84, tmp59, tmp60, tmp61, tmp62, tmp63;
		BitBlock bytetest_92_92, tmp64, tmp65, tmp66, tmp67, bytetest_ba_bc, tmp68;
		BitBlock bytetest_82, tmp69, bytetest_8a_8c, tmp70, tmp71, tmp72, bytetest_84;
		BitBlock bytetest_98_98, tmp73, tmp74, tmp75, tmp76, bytetest_85, tmp77, tmp78;
		BitBlock bytetest_80_84, tmp79, tmp80, tmp81, bytetest_8b_8b, tmp82;
		BitBlock bytetest_86, tmp83, bytetest_90_94, tmp84, tmp85, tmp86, tmp87;
		BitBlock bytetest_9a_9b, tmp88, tmp89, bytetest_a0_a0, tmp90, bytetest_a3_a3;
		BitBlock tmp91, bytetest_a6_a6, tmp92, bytetest_ae_ae, tmp93, bytetest_87;
		BitBlock tmp94, bytetest_8e_8f, tmp95, tmp96, tmp97, tmp98, bytetest_94_94;
		BitBlock tmp99, bytetest_88_8b, bytetest_80_bf, tmp100, tmp101, tmp102, tmp103;
		BitBlock tmp104, bytetest_b4_bf, tmp105, tmp106, bytetest_8c, tmp107, tmp108;
		BitBlock bytetest_a0_a1, tmp109, tmp110, tmp111, tmp112, bytetest_8d;
		BitBlock bytetest_bc_bc, tmp113, tmp114, tmp115, bytetest_8e, tmp116, tmp117;
		BitBlock tmp118, tmp119, tmp120, tmp121, bytetest_9b_b3, tmp122, tmp123;
		BitBlock tmp124, bytetest_8f, tmp125, tmp126, tmp127, tmp128, bytetest_9c_a1;
		BitBlock tmp129, tmp130, tmp131, tmp132, bytetest_96, tmp133, tmp134, tmp135;
		BitBlock bytetest_97, bytetest_81_81, tmp136, tmp137, tmp138, bytetest_b8_bf;
		BitBlock tmp139, tmp140, bytetest_99, bytetest_af_af, tmp141, tmp142, tmp143;
		BitBlock bytetest_9f, tmp144, tmp145, tmp146, tmp147, tmp148, tmp149, tmp150;
		BitBlock tmp151, tmp152, tmp153, tmp154, bytetest_87_a5, tmp155;
		BitBlock bytetest_b0_bf, tmp156, bytetest_a6, tmp157, bytetest_80_82, tmp158;
		BitBlock tmp159, tmp160, tmp161, bytetest_a4_a5, tmp162, tmp163, tmp164;
		BitBlock tmp165, bytetest_a7, tmp166, tmp167, bytetest_80_97, tmp168, tmp169;
		BitBlock tmp170, tmp171, tmp172, tmp173, bytetest_99_bf, tmp174, tmp175;
		BitBlock tmp176, tmp177, bytetest_9c_bb, tmp178, bytetest_a8_ab, tmp179;
		BitBlock tmp180, tmp181, bytetest_be_bf, tmp182, tmp183, bytetest_ad, tmp184;
		BitBlock tmp185, tmp186, bytetest_ac, tmp187, tmp188, tmp189, tmp190, tmp191;
		BitBlock tmp192, bytetest_87_8c, tmp193, bytetest_ef, bytetest_a9_a9, tmp194;
		BitBlock tmp195, tmp196, tmp197, tmp198, bytetest_b9, bytetest_a2_a2, tmp199;
		BitBlock tmp200, tmp201, tmp202, bytetest_a4_a6, tmp203, bytetest_bc, tmp204;
		BitBlock tmp205, tmp206, tmp207, bytetest_9c_9e, tmp208, bytetest_bd;
		BitBlock bytetest_9c_9c, tmp209, tmp210, tmp211, bytetest_9e_9e, tmp212;
		BitBlock bytetest_bf, tmp213, tmp214, tmp215, tmp216, tmp217, bytetest_a9_ac;
		BitBlock tmp218, tmp219, bytetest_f0, bytetest_9d, bytetest_9b, tmp220, tmp221;
		BitBlock tmp222, tmp223, tmp224, tmp225, tmp226, bytetest_9b_9b, tmp227;
		BitBlock bytetest_bb_bb, tmp228, bytetest_9c, bytetest_95_95, tmp229, tmp230;
		BitBlock tmp231, bytetest_b5_b5, tmp232, bytetest_8f_8f, tmp233, tmp234;
		BitBlock tmp235, tmp236, bytetest_9e, bytetest_89_89, tmp237, tmp238, tmp239;
		BitBlock tmp240, bytetest_83_83, tmp241, tmp242, tmp243, bytetest_bb;
		BitBlock bytetest_b0_b1, tmp244, tmp245, tmp246, tmp247, tmp248;




        struct_Sm.cc = simd<1>::constant<0>();
        tmp1 = simd_or(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp2, tmp1);
        tmp4 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_and(tmp4, tmp5);
        bytetest_2b_2b = simd_and(tmp3, tmp6);
        struct_Sm.cc = simd_or(bytetest_2b_2b, struct_Sm.cc);
        tmp7 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp8 = simd_andc(tmp7, tmp1);
        tmp9 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp10 = simd_and(tmp8, tmp9);
        bytetest_3c_3e = simd_andc(tmp10, tmp5);
        struct_Sm.cc = simd_or(bytetest_3c_3e, struct_Sm.cc);
        tmp11 = simd_andc(basis_bits.bit_1, basis_bits.bit_0);
        tmp12 = simd_and(tmp11, tmp7);
        tmp13 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp14 = simd_andc(tmp9, tmp13);
        bytetest_7c_7c = simd_and(tmp12, tmp14);
        struct_Sm.cc = simd_or(bytetest_7c_7c, struct_Sm.cc);
        tmp15 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp16 = simd_and(tmp9, tmp15);
        bytetest_7e_7e = simd_and(tmp12, tmp16);
        struct_Sm.cc = simd_or(bytetest_7e_7e, struct_Sm.cc);
        tmp17 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp18 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp19 = simd_andc(tmp17, tmp18);
        tmp20 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp21 = simd_andc(tmp15, tmp20);
        bytetest_c2 = simd_and(tmp19, tmp21);
        tmp22 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp23 = simd_and(tmp22, tmp2);
        bytetest_ac_ac = simd_and(tmp23, tmp14);
        tmp24 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp24, carryQ.get_carry_in(0), tmp25));
        tmp26 = simd_and(tmp25, bytetest_c2);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp26, carryQ.get_carry_in(1), tmp27));
        tmp28 = simd_and(tmp27, bytetest_ac_ac);
        struct_Sm.cc = simd_or(tmp28, struct_Sm.cc);
        bytetest_c2 = simd_and(tmp19, tmp21);
        tmp29 = simd_and(tmp22, tmp7);
        tmp30 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp31 = simd_andc(tmp30, tmp20);
        bytetest_b1_b1 = simd_and(tmp29, tmp31);
        tmp32 = simd_and(tmp27, bytetest_b1_b1);
        struct_Sm.cc = simd_or(tmp32, struct_Sm.cc);
        tmp33 = simd_andc(tmp5, tmp20);
        bytetest_c3 = simd_and(tmp19, tmp33);
        tmp34 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp35 = simd_and(tmp22, tmp34);
        tmp36 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp37 = simd_and(tmp36, tmp5);
        bytetest_97_97 = simd_and(tmp35, tmp37);
        tmp38 = simd_and(tmp25, bytetest_c3);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp38, carryQ.get_carry_in(2), tmp39));
        tmp40 = simd_and(tmp39, bytetest_97_97);
        struct_Sm.cc = simd_or(tmp40, struct_Sm.cc);
        bytetest_c3 = simd_and(tmp19, tmp33);
        bytetest_b7_b7 = simd_and(tmp29, tmp37);
        tmp41 = simd_and(tmp39, bytetest_b7_b7);
        struct_Sm.cc = simd_or(tmp41, struct_Sm.cc);
        tmp42 = simd_and(tmp9, tmp5);
        bytetest_cf = simd_and(tmp19, tmp42);
        tmp43 = simd_and(tmp36, tmp15);
        bytetest_b6_b6 = simd_and(tmp29, tmp43);
        tmp44 = simd_and(tmp25, bytetest_cf);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp44, carryQ.get_carry_in(3), tmp45));
        tmp46 = simd_and(tmp45, bytetest_b6_b6);
        struct_Sm.cc = simd_or(tmp46, struct_Sm.cc);
        tmp47 = simd_and(tmp17, tmp34);
        tmp48 = simd_andc(tmp4, tmp13);
        bytetest_d8 = simd_and(tmp47, tmp48);
        tmp49 = simd_andc(tmp22, tmp18);
        tmp50 = simd_or(basis_bits.bit_5, tmp13);
        tmp51 = simd_not(tmp50);
        tmp52 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp53 = simd_or(simd_and(basis_bits.bit_4, tmp51), simd_andc(tmp52, basis_bits.bit_4));
        bytetest_86_88 = simd_and(tmp49, tmp53);
        tmp54 = simd_and(tmp25, bytetest_d8);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp54, carryQ.get_carry_in(4), tmp55));
        tmp56 = simd_and(tmp55, bytetest_86_88);
        struct_Sm.cc = simd_or(tmp56, struct_Sm.cc);
        tmp57 = simd_and(tmp17, tmp2);
        bytetest_e2 = simd_and(tmp57, tmp21);
        bytetest_81 = simd_and(tmp49, tmp31);
        tmp58 = simd_andc(tmp36, tmp13);
        bytetest_84_84 = simd_and(tmp49, tmp58);
        tmp59 = simd_and(tmp25, bytetest_e2);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp59, carryQ.get_carry_in(5), tmp60));
        tmp61 = simd_and(tmp60, bytetest_81);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp61, carryQ.get_carry_in(6), tmp62));
        tmp63 = simd_and(tmp62, bytetest_84_84);
        struct_Sm.cc = simd_or(tmp63, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        bytetest_81 = simd_and(tmp49, tmp31);
        bytetest_92_92 = simd_and(tmp35, tmp21);
        tmp64 = simd_and(tmp62, bytetest_92_92);
        struct_Sm.cc = simd_or(tmp64, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        bytetest_81 = simd_and(tmp49, tmp31);
        tmp65 = simd_and(tmp29, basis_bits.bit_4);
        tmp66 = simd_not(tmp13);
        tmp67 = simd_or(simd_and(basis_bits.bit_5, tmp66), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        bytetest_ba_bc = simd_and(tmp65, tmp67);
        tmp68 = simd_and(tmp62, bytetest_ba_bc);
        struct_Sm.cc = simd_or(tmp68, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        bytetest_82 = simd_and(tmp49, tmp21);
        tmp69 = simd_and(tmp49, basis_bits.bit_4);
        bytetest_8a_8c = simd_and(tmp69, tmp67);
        tmp70 = simd_and(tmp60, bytetest_82);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp70, carryQ.get_carry_in(7), tmp71));
        tmp72 = simd_and(tmp71, bytetest_8a_8c);
        struct_Sm.cc = simd_or(tmp72, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        bytetest_84 = simd_and(tmp49, tmp58);
        bytetest_98_98 = simd_and(tmp35, tmp48);
        tmp73 = simd_and(tmp60, bytetest_84);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(tmp73, carryQ.get_carry_in(8), tmp74));
        tmp75 = simd_and(tmp74, bytetest_98_98);
        struct_Sm.cc = simd_or(tmp75, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        tmp76 = simd_and(tmp36, tmp30);
        bytetest_85 = simd_and(tmp49, tmp76);
        tmp77 = simd_andc(tmp49, basis_bits.bit_4);
        tmp78 = simd_and(basis_bits.bit_5, tmp13);
        bytetest_80_84 = simd_andc(tmp77, tmp78);
        tmp79 = simd_and(tmp60, bytetest_85);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(tmp79, carryQ.get_carry_in(9), tmp80));
        tmp81 = simd_and(tmp80, bytetest_80_84);
        struct_Sm.cc = simd_or(tmp81, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        bytetest_85 = simd_and(tmp49, tmp76);
        bytetest_8b_8b = simd_and(tmp49, tmp6);
        tmp82 = simd_and(tmp80, bytetest_8b_8b);
        struct_Sm.cc = simd_or(tmp82, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        bytetest_86 = simd_and(tmp49, tmp43);
        tmp83 = simd_andc(tmp35, basis_bits.bit_4);
        bytetest_90_94 = simd_andc(tmp83, tmp78);
        tmp84 = simd_and(tmp60, bytetest_86);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(tmp84, carryQ.get_carry_in(10), tmp85));
        tmp86 = simd_and(tmp85, bytetest_90_94);
        struct_Sm.cc = simd_or(tmp86, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        bytetest_86 = simd_and(tmp49, tmp43);
        tmp87 = simd_and(tmp4, basis_bits.bit_6);
        bytetest_9a_9b = simd_and(tmp35, tmp87);
        tmp88 = simd_and(tmp85, bytetest_9a_9b);
        struct_Sm.cc = simd_or(tmp88, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        bytetest_86 = simd_and(tmp49, tmp43);
        tmp89 = simd_or(tmp20, tmp13);
        bytetest_a0_a0 = simd_andc(tmp23, tmp89);
        tmp90 = simd_and(tmp85, bytetest_a0_a0);
        struct_Sm.cc = simd_or(tmp90, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        bytetest_86 = simd_and(tmp49, tmp43);
        bytetest_a3_a3 = simd_and(tmp23, tmp33);
        tmp91 = simd_and(tmp85, bytetest_a3_a3);
        struct_Sm.cc = simd_or(tmp91, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        bytetest_86 = simd_and(tmp49, tmp43);
        bytetest_a6_a6 = simd_and(tmp23, tmp43);
        tmp92 = simd_and(tmp85, bytetest_a6_a6);
        struct_Sm.cc = simd_or(tmp92, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        bytetest_86 = simd_and(tmp49, tmp43);
        bytetest_ae_ae = simd_and(tmp23, tmp16);
        tmp93 = simd_and(tmp85, bytetest_ae_ae);
        struct_Sm.cc = simd_or(tmp93, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        bytetest_87 = simd_and(tmp49, tmp37);
        tmp94 = simd_and(tmp9, basis_bits.bit_6);
        bytetest_8e_8f = simd_and(tmp49, tmp94);
        tmp95 = simd_and(tmp60, bytetest_87);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(tmp95, carryQ.get_carry_in(11), tmp96));
        tmp97 = simd_and(tmp96, bytetest_8e_8f);
        struct_Sm.cc = simd_or(tmp97, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        bytetest_87 = simd_and(tmp49, tmp37);
        bytetest_92_92 = simd_and(tmp35, tmp21);
        tmp98 = simd_and(tmp96, bytetest_92_92);
        struct_Sm.cc = simd_or(tmp98, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        bytetest_87 = simd_and(tmp49, tmp37);
        bytetest_94_94 = simd_and(tmp35, tmp58);
        tmp99 = simd_and(tmp96, bytetest_94_94);
        struct_Sm.cc = simd_or(tmp99, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        bytetest_88_8b = simd_and(tmp49, tmp4);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp100 = simd_and(tmp60, bytetest_88_8b);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(tmp100, carryQ.get_carry_in(12), tmp101));
        tmp102 = simd_and(tmp101, bytetest_80_bf);
        tmp103 = simd_andc(bytetest_80_bf, tmp18);
        bytetest_87 = simd_and(tmp103, tmp37);
        tmp104 = simd_and(bytetest_80_bf, tmp7);
        bytetest_b4_bf = simd_and(tmp104, tmp20);
        tmp105 = simd_and(tmp96, bytetest_b4_bf);
        tmp106 = simd_or(tmp105, tmp102);
        struct_Sm.cc = simd_or(tmp106, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        bytetest_8c = simd_and(tmp103, tmp14);
        tmp107 = simd_and(bytetest_80_bf, tmp2);
        tmp108 = simd_or(tmp20, basis_bits.bit_6);
        bytetest_a0_a1 = simd_andc(tmp107, tmp108);
        tmp109 = simd_and(tmp60, bytetest_8c);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(tmp109, carryQ.get_carry_in(13), tmp110));
        tmp111 = simd_and(tmp110, bytetest_a0_a1);
        struct_Sm.cc = simd_or(tmp111, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        tmp112 = simd_and(tmp9, tmp30);
        bytetest_8d = simd_and(tmp103, tmp112);
        bytetest_bc_bc = simd_and(tmp104, tmp14);
        tmp113 = simd_and(tmp60, bytetest_8d);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(tmp113, carryQ.get_carry_in(14), tmp114));
        tmp115 = simd_and(tmp114, bytetest_bc_bc);
        struct_Sm.cc = simd_or(tmp115, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        bytetest_8e = simd_and(tmp103, tmp16);
        tmp116 = simd_and(basis_bits.bit_3, tmp20);
        tmp117 = simd_not(tmp116);
        tmp118 = simd_or(basis_bits.bit_5, tmp5);
        tmp119 = simd_and(basis_bits.bit_4, tmp118);
        tmp120 = simd_and(basis_bits.bit_3, tmp119);
        tmp121 = simd_or(simd_and(basis_bits.bit_2, tmp117), simd_andc(tmp120, basis_bits.bit_2));
        bytetest_9b_b3 = simd_and(bytetest_80_bf, tmp121);
        tmp122 = simd_and(tmp60, bytetest_8e);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(tmp122, carryQ.get_carry_in(15), tmp123));
        tmp124 = simd_and(tmp123, bytetest_9b_b3);
        struct_Sm.cc = simd_or(tmp124, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        bytetest_8f = simd_and(tmp103, tmp42);
        tmp125 = simd_or(basis_bits.bit_3, tmp108);
        tmp126 = simd_not(tmp125);
        tmp127 = simd_and(basis_bits.bit_3, tmp9);
        tmp128 = simd_or(simd_and(basis_bits.bit_2, tmp126), simd_andc(tmp127, basis_bits.bit_2));
        bytetest_9c_a1 = simd_and(bytetest_80_bf, tmp128);
        tmp129 = simd_and(tmp60, bytetest_8f);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(tmp129, carryQ.get_carry_in(16), tmp130));
        tmp131 = simd_and(tmp130, bytetest_9c_a1);
        struct_Sm.cc = simd_or(tmp131, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        tmp132 = simd_and(bytetest_80_bf, tmp34);
        bytetest_96 = simd_and(tmp132, tmp43);
        bytetest_b7_b7 = simd_and(tmp104, tmp37);
        tmp133 = simd_and(tmp60, bytetest_96);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(tmp133, carryQ.get_carry_in(17), tmp134));
        tmp135 = simd_and(tmp134, bytetest_b7_b7);
        struct_Sm.cc = simd_or(tmp135, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        bytetest_97 = simd_and(tmp132, tmp37);
        bytetest_81_81 = simd_and(tmp103, tmp31);
        tmp136 = simd_and(tmp60, bytetest_97);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(tmp136, carryQ.get_carry_in(18), tmp137));
        tmp138 = simd_and(tmp137, bytetest_81_81);
        struct_Sm.cc = simd_or(tmp138, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        bytetest_97 = simd_and(tmp132, tmp37);
        bytetest_b8_bf = simd_and(tmp104, basis_bits.bit_4);
        tmp139 = simd_and(tmp137, bytetest_b8_bf);
        struct_Sm.cc = simd_or(tmp139, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        tmp140 = simd_and(tmp4, tmp30);
        bytetest_99 = simd_and(tmp132, tmp140);
        bytetest_af_af = simd_and(tmp107, tmp42);
        tmp141 = simd_and(tmp60, bytetest_99);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(tmp141, carryQ.get_carry_in(19), tmp142));
        tmp143 = simd_and(tmp142, bytetest_af_af);
        struct_Sm.cc = simd_or(tmp143, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        bytetest_9f = simd_and(tmp132, tmp42);
        tmp144 = simd_andc(tmp103, basis_bits.bit_4);
        bytetest_80_84 = simd_andc(tmp144, tmp78);
        tmp145 = simd_and(tmp60, bytetest_9f);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(tmp145, carryQ.get_carry_in(20), tmp146));
        tmp147 = simd_and(tmp146, bytetest_80_84);
        struct_Sm.cc = simd_or(tmp147, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        bytetest_9f = simd_and(tmp132, tmp42);
        tmp148 = simd_or(basis_bits.bit_4, tmp52);
        tmp149 = simd_or(basis_bits.bit_3, tmp148);
        tmp150 = simd_not(tmp149);
        tmp151 = simd_and(basis_bits.bit_5, tmp5);
        tmp152 = simd_or(basis_bits.bit_4, tmp151);
        tmp153 = simd_or(basis_bits.bit_3, tmp152);
        tmp154 = simd_or(simd_and(basis_bits.bit_2, tmp150), simd_andc(tmp153, basis_bits.bit_2));
        bytetest_87_a5 = simd_and(bytetest_80_bf, tmp154);
        tmp155 = simd_and(tmp146, bytetest_87_a5);
        struct_Sm.cc = simd_or(tmp155, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        bytetest_9f = simd_and(tmp132, tmp42);
        bytetest_b0_bf = simd_and(bytetest_80_bf, tmp7);
        tmp156 = simd_and(tmp146, bytetest_b0_bf);
        struct_Sm.cc = simd_or(tmp156, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        bytetest_a6 = simd_and(tmp107, tmp43);
        tmp157 = simd_andc(tmp103, tmp20);
        bytetest_80_82 = simd_andc(tmp157, tmp5);
        tmp158 = simd_and(tmp60, bytetest_a6);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(tmp158, carryQ.get_carry_in(21), tmp159));
        tmp160 = simd_and(tmp159, bytetest_80_82);
        tmp161 = simd_andc(tmp36, basis_bits.bit_6);
        bytetest_a4_a5 = simd_and(tmp107, tmp161);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp162 = simd_and(tmp60, bytetest_a4_a5);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(tmp162, carryQ.get_carry_in(22), tmp163));
        tmp164 = simd_and(tmp163, bytetest_80_bf);
        tmp165 = simd_or(tmp164, tmp160);
        struct_Sm.cc = simd_or(tmp165, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        bytetest_a7 = simd_and(tmp107, tmp37);
        tmp166 = simd_andc(bytetest_80_bf, basis_bits.bit_2);
        tmp167 = simd_and(basis_bits.bit_3, basis_bits.bit_4);
        bytetest_80_97 = simd_andc(tmp166, tmp167);
        tmp168 = simd_and(tmp60, bytetest_a7);
        carryQ.cq[23] = carryout2carry(pablo_blk_Advance(tmp168, carryQ.get_carry_in(23), tmp169));
        tmp170 = simd_and(tmp169, bytetest_80_97);
        bytetest_a6 = simd_and(tmp107, tmp43);
        tmp171 = simd_and(basis_bits.bit_4, tmp50);
        tmp172 = simd_and(basis_bits.bit_3, tmp171);
        tmp173 = simd_or(basis_bits.bit_2, tmp172);
        bytetest_99_bf = simd_and(bytetest_80_bf, tmp173);
        tmp174 = simd_and(tmp159, bytetest_99_bf);
        tmp175 = simd_or(tmp174, tmp170);
        struct_Sm.cc = simd_or(tmp175, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        bytetest_a7 = simd_and(tmp107, tmp37);
        tmp176 = simd_not(tmp127);
        tmp177 = simd_or(simd_and(basis_bits.bit_2, tmp176), simd_andc(tmp127, basis_bits.bit_2));
        bytetest_9c_bb = simd_and(bytetest_80_bf, tmp177);
        tmp178 = simd_and(tmp169, bytetest_9c_bb);
        struct_Sm.cc = simd_or(tmp178, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        bytetest_a8_ab = simd_and(tmp107, tmp4);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp179 = simd_and(tmp60, bytetest_a8_ab);
        carryQ.cq[24] = carryout2carry(pablo_blk_Advance(tmp179, carryQ.get_carry_in(24), tmp180));
        tmp181 = simd_and(tmp180, bytetest_80_bf);
        bytetest_a7 = simd_and(tmp107, tmp37);
        bytetest_be_bf = simd_and(bytetest_b0_bf, tmp94);
        tmp182 = simd_and(tmp169, bytetest_be_bf);
        tmp183 = simd_or(tmp182, tmp181);
        struct_Sm.cc = simd_or(tmp183, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        bytetest_ad = simd_and(tmp107, tmp112);
        bytetest_80_84 = simd_andc(tmp144, tmp78);
        tmp184 = simd_and(tmp60, bytetest_ad);
        carryQ.cq[25] = carryout2carry(pablo_blk_Advance(tmp184, carryQ.get_carry_in(25), tmp185));
        tmp186 = simd_and(tmp185, bytetest_80_84);
        bytetest_ac = simd_and(tmp107, tmp14);
        bytetest_b0_bf = simd_and(bytetest_80_bf, tmp7);
        tmp187 = simd_and(tmp60, bytetest_ac);
        carryQ.cq[26] = carryout2carry(pablo_blk_Advance(tmp187, carryQ.get_carry_in(26), tmp188));
        tmp189 = simd_and(tmp188, bytetest_b0_bf);
        tmp190 = simd_or(tmp189, tmp186);
        struct_Sm.cc = simd_or(tmp190, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        bytetest_ad = simd_and(tmp107, tmp112);
        tmp191 = simd_not(tmp78);
        tmp192 = simd_or(simd_and(basis_bits.bit_4, tmp191), simd_andc(tmp151, basis_bits.bit_4));
        bytetest_87_8c = simd_and(tmp103, tmp192);
        tmp193 = simd_and(tmp185, bytetest_87_8c);
        struct_Sm.cc = simd_or(tmp193, struct_Sm.cc);
        bytetest_ef = simd_and(tmp57, tmp42);
        bytetest_ac = simd_and(tmp107, tmp14);
        bytetest_a9_a9 = simd_and(tmp107, tmp140);
        tmp194 = simd_and(tmp25, bytetest_ef);
        carryQ.cq[27] = carryout2carry(pablo_blk_Advance(tmp194, carryQ.get_carry_in(27), tmp195));
        tmp196 = simd_and(tmp195, bytetest_ac);
        carryQ.cq[28] = carryout2carry(pablo_blk_Advance(tmp196, carryQ.get_carry_in(28), tmp197));
        tmp198 = simd_and(tmp197, bytetest_a9_a9);
        struct_Sm.cc = simd_or(tmp198, struct_Sm.cc);
        bytetest_ef = simd_and(tmp57, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp140);
        bytetest_a2_a2 = simd_and(tmp107, tmp21);
        tmp199 = simd_and(tmp195, bytetest_b9);
        carryQ.cq[29] = carryout2carry(pablo_blk_Advance(tmp199, carryQ.get_carry_in(29), tmp200));
        tmp201 = simd_and(tmp200, bytetest_a2_a2);
        struct_Sm.cc = simd_or(tmp201, struct_Sm.cc);
        bytetest_ef = simd_and(tmp57, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp140);
        tmp202 = simd_and(tmp107, tmp36);
        bytetest_a4_a6 = simd_andc(tmp202, tmp5);
        tmp203 = simd_and(tmp200, bytetest_a4_a6);
        struct_Sm.cc = simd_or(tmp203, struct_Sm.cc);
        bytetest_ef = simd_and(tmp57, tmp42);
        bytetest_bc = simd_and(bytetest_b0_bf, tmp14);
        bytetest_8b_8b = simd_and(tmp103, tmp6);
        tmp204 = simd_and(tmp195, bytetest_bc);
        carryQ.cq[30] = carryout2carry(pablo_blk_Advance(tmp204, carryQ.get_carry_in(30), tmp205));
        tmp206 = simd_and(tmp205, bytetest_8b_8b);
        struct_Sm.cc = simd_or(tmp206, struct_Sm.cc);
        bytetest_ef = simd_and(tmp57, tmp42);
        bytetest_bc = simd_and(bytetest_b0_bf, tmp14);
        tmp207 = simd_and(tmp132, tmp9);
        bytetest_9c_9e = simd_andc(tmp207, tmp5);
        tmp208 = simd_and(tmp205, bytetest_9c_9e);
        struct_Sm.cc = simd_or(tmp208, struct_Sm.cc);
        bytetest_ef = simd_and(tmp57, tmp42);
        bytetest_bd = simd_and(bytetest_b0_bf, tmp112);
        bytetest_9c_9c = simd_and(tmp132, tmp14);
        tmp209 = simd_and(tmp195, bytetest_bd);
        carryQ.cq[31] = carryout2carry(pablo_blk_Advance(tmp209, carryQ.get_carry_in(31), tmp210));
        tmp211 = simd_and(tmp210, bytetest_9c_9c);
        struct_Sm.cc = simd_or(tmp211, struct_Sm.cc);
        bytetest_ef = simd_and(tmp57, tmp42);
        bytetest_bd = simd_and(bytetest_b0_bf, tmp112);
        bytetest_9e_9e = simd_and(tmp132, tmp16);
        tmp212 = simd_and(tmp210, bytetest_9e_9e);
        struct_Sm.cc = simd_or(tmp212, struct_Sm.cc);
        bytetest_ef = simd_and(tmp57, tmp42);
        bytetest_bf = simd_and(bytetest_b0_bf, tmp42);
        bytetest_a2_a2 = simd_and(tmp107, tmp21);
        tmp213 = simd_and(tmp195, bytetest_bf);
        carryQ.cq[32] = carryout2carry(pablo_blk_Advance(tmp213, carryQ.get_carry_in(32), tmp214));
        tmp215 = simd_and(tmp214, bytetest_a2_a2);
        struct_Sm.cc = simd_or(tmp215, struct_Sm.cc);
        bytetest_ef = simd_and(tmp57, tmp42);
        bytetest_bf = simd_and(bytetest_b0_bf, tmp42);
        tmp216 = simd_and(tmp107, basis_bits.bit_4);
        tmp217 = simd_or(simd_and(basis_bits.bit_5, tmp66), simd_andc(tmp13, basis_bits.bit_5));
        bytetest_a9_ac = simd_and(tmp216, tmp217);
        tmp218 = simd_and(tmp214, bytetest_a9_ac);
        struct_Sm.cc = simd_or(tmp218, struct_Sm.cc);
        tmp219 = simd_and(tmp17, tmp7);
        bytetest_f0 = simd_andc(tmp219, tmp89);
        bytetest_9d = simd_and(tmp132, tmp112);
        bytetest_9b = simd_and(tmp132, tmp6);
        bytetest_81_81 = simd_and(tmp103, tmp31);
        tmp220 = simd_and(tmp25, bytetest_f0);
        carryQ.cq[33] = carryout2carry(pablo_blk_Advance(tmp220, carryQ.get_carry_in(33), tmp221));
        tmp222 = simd_and(tmp221, bytetest_9d);
        carryQ.cq[34] = carryout2carry(pablo_blk_Advance(tmp222, carryQ.get_carry_in(34), tmp223));
        tmp224 = simd_and(tmp223, bytetest_9b);
        carryQ.cq[35] = carryout2carry(pablo_blk_Advance(tmp224, carryQ.get_carry_in(35), tmp225));
        tmp226 = simd_and(tmp225, bytetest_81_81);
        struct_Sm.cc = simd_or(tmp226, struct_Sm.cc);
        bytetest_f0 = simd_andc(tmp219, tmp89);
        bytetest_9d = simd_and(tmp132, tmp112);
        bytetest_9b = simd_and(tmp132, tmp6);
        bytetest_9b_9b = simd_and(tmp132, tmp6);
        tmp227 = simd_and(tmp225, bytetest_9b_9b);
        struct_Sm.cc = simd_or(tmp227, struct_Sm.cc);
        bytetest_f0 = simd_andc(tmp219, tmp89);
        bytetest_9d = simd_and(tmp132, tmp112);
        bytetest_9b = simd_and(tmp132, tmp6);
        bytetest_bb_bb = simd_and(bytetest_b0_bf, tmp6);
        tmp228 = simd_and(tmp225, bytetest_bb_bb);
        struct_Sm.cc = simd_or(tmp228, struct_Sm.cc);
        bytetest_f0 = simd_andc(tmp219, tmp89);
        bytetest_9d = simd_and(tmp132, tmp112);
        bytetest_9c = simd_and(tmp132, tmp14);
        bytetest_95_95 = simd_and(tmp132, tmp76);
        tmp229 = simd_and(tmp223, bytetest_9c);
        carryQ.cq[36] = carryout2carry(pablo_blk_Advance(tmp229, carryQ.get_carry_in(36), tmp230));
        tmp231 = simd_and(tmp230, bytetest_95_95);
        struct_Sm.cc = simd_or(tmp231, struct_Sm.cc);
        bytetest_f0 = simd_andc(tmp219, tmp89);
        bytetest_9d = simd_and(tmp132, tmp112);
        bytetest_9c = simd_and(tmp132, tmp14);
        bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp76);
        tmp232 = simd_and(tmp230, bytetest_b5_b5);
        struct_Sm.cc = simd_or(tmp232, struct_Sm.cc);
        bytetest_f0 = simd_andc(tmp219, tmp89);
        bytetest_9d = simd_and(tmp132, tmp112);
        bytetest_9d = simd_and(tmp132, tmp112);
        bytetest_8f_8f = simd_and(tmp103, tmp42);
        tmp233 = simd_and(tmp223, bytetest_9d);
        carryQ.cq[37] = carryout2carry(pablo_blk_Advance(tmp233, carryQ.get_carry_in(37), tmp234));
        tmp235 = simd_and(tmp234, bytetest_8f_8f);
        struct_Sm.cc = simd_or(tmp235, struct_Sm.cc);
        bytetest_f0 = simd_andc(tmp219, tmp89);
        bytetest_9d = simd_and(tmp132, tmp112);
        bytetest_9d = simd_and(tmp132, tmp112);
        bytetest_af_af = simd_and(tmp107, tmp42);
        tmp236 = simd_and(tmp234, bytetest_af_af);
        struct_Sm.cc = simd_or(tmp236, struct_Sm.cc);
        bytetest_f0 = simd_andc(tmp219, tmp89);
        bytetest_9d = simd_and(tmp132, tmp112);
        bytetest_9e = simd_and(tmp132, tmp16);
        bytetest_89_89 = simd_and(tmp103, tmp140);
        tmp237 = simd_and(tmp223, bytetest_9e);
        carryQ.cq[38] = carryout2carry(pablo_blk_Advance(tmp237, carryQ.get_carry_in(38), tmp238));
        tmp239 = simd_and(tmp238, bytetest_89_89);
        struct_Sm.cc = simd_or(tmp239, struct_Sm.cc);
        bytetest_f0 = simd_andc(tmp219, tmp89);
        bytetest_9d = simd_and(tmp132, tmp112);
        bytetest_9e = simd_and(tmp132, tmp16);
        bytetest_a9_a9 = simd_and(tmp107, tmp140);
        tmp240 = simd_and(tmp238, bytetest_a9_a9);
        struct_Sm.cc = simd_or(tmp240, struct_Sm.cc);
        bytetest_f0 = simd_andc(tmp219, tmp89);
        bytetest_9d = simd_and(tmp132, tmp112);
        bytetest_9f = simd_and(tmp132, tmp42);
        bytetest_83_83 = simd_and(tmp103, tmp33);
        tmp241 = simd_and(tmp223, bytetest_9f);
        carryQ.cq[39] = carryout2carry(pablo_blk_Advance(tmp241, carryQ.get_carry_in(39), tmp242));
        tmp243 = simd_and(tmp242, bytetest_83_83);
        struct_Sm.cc = simd_or(tmp243, struct_Sm.cc);
        bytetest_f0 = simd_andc(tmp219, tmp89);
        bytetest_9e = simd_and(tmp132, tmp16);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp6);
        bytetest_b0_b1 = simd_andc(bytetest_b0_bf, tmp108);
        tmp244 = simd_and(tmp221, bytetest_9e);
        carryQ.cq[40] = carryout2carry(pablo_blk_Advance(tmp244, carryQ.get_carry_in(40), tmp245));
        tmp246 = simd_and(tmp245, bytetest_bb);
        carryQ.cq[41] = carryout2carry(pablo_blk_Advance(tmp246, carryQ.get_carry_in(41), tmp247));
        tmp248 = simd_and(tmp247, bytetest_b0_b1);
        struct_Sm.cc = simd_or(tmp248, struct_Sm.cc);
        carryQ.CarryQ_Adjust(42);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Sm & struct_Sm, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_2b_2b, tmp7, tmp8, tmp9;
		BitBlock tmp10, bytetest_3c_3e, tmp11, tmp12, tmp13, tmp14, bytetest_7c_7c;
		BitBlock tmp15, tmp16, bytetest_7e_7e, tmp17, tmp18, tmp19, tmp20, tmp21;
		BitBlock bytetest_c2, tmp22, tmp23, bytetest_ac_ac, tmp24, tmp25, tmp26, tmp27;
		BitBlock tmp28, tmp29, tmp30, tmp31, bytetest_b1_b1, tmp32, tmp33, bytetest_c3;
		BitBlock tmp34, tmp35, tmp36, tmp37, bytetest_97_97, tmp38, tmp39, tmp40;
		BitBlock bytetest_b7_b7, tmp41, tmp42, bytetest_cf, tmp43, bytetest_b6_b6;
		BitBlock tmp44, tmp45, tmp46, tmp47, tmp48, bytetest_d8, tmp49, tmp50, tmp51;
		BitBlock tmp52, tmp53, bytetest_86_88, tmp54, tmp55, tmp56, tmp57, bytetest_e2;
		BitBlock bytetest_81, tmp58, bytetest_84_84, tmp59, tmp60, tmp61, tmp62, tmp63;
		BitBlock bytetest_92_92, tmp64, tmp65, tmp66, tmp67, bytetest_ba_bc, tmp68;
		BitBlock bytetest_82, tmp69, bytetest_8a_8c, tmp70, tmp71, tmp72, bytetest_84;
		BitBlock bytetest_98_98, tmp73, tmp74, tmp75, tmp76, bytetest_85, tmp77, tmp78;
		BitBlock bytetest_80_84, tmp79, tmp80, tmp81, bytetest_8b_8b, tmp82;
		BitBlock bytetest_86, tmp83, bytetest_90_94, tmp84, tmp85, tmp86, tmp87;
		BitBlock bytetest_9a_9b, tmp88, tmp89, bytetest_a0_a0, tmp90, bytetest_a3_a3;
		BitBlock tmp91, bytetest_a6_a6, tmp92, bytetest_ae_ae, tmp93, bytetest_87;
		BitBlock tmp94, bytetest_8e_8f, tmp95, tmp96, tmp97, tmp98, bytetest_94_94;
		BitBlock tmp99, bytetest_88_8b, bytetest_80_bf, tmp100, tmp101, tmp102, tmp103;
		BitBlock tmp104, bytetest_b4_bf, tmp105, tmp106, bytetest_8c, tmp107, tmp108;
		BitBlock bytetest_a0_a1, tmp109, tmp110, tmp111, tmp112, bytetest_8d;
		BitBlock bytetest_bc_bc, tmp113, tmp114, tmp115, bytetest_8e, tmp116, tmp117;
		BitBlock tmp118, tmp119, tmp120, tmp121, bytetest_9b_b3, tmp122, tmp123;
		BitBlock tmp124, bytetest_8f, tmp125, tmp126, tmp127, tmp128, bytetest_9c_a1;
		BitBlock tmp129, tmp130, tmp131, tmp132, bytetest_96, tmp133, tmp134, tmp135;
		BitBlock bytetest_97, bytetest_81_81, tmp136, tmp137, tmp138, bytetest_b8_bf;
		BitBlock tmp139, tmp140, bytetest_99, bytetest_af_af, tmp141, tmp142, tmp143;
		BitBlock bytetest_9f, tmp144, tmp145, tmp146, tmp147, tmp148, tmp149, tmp150;
		BitBlock tmp151, tmp152, tmp153, tmp154, bytetest_87_a5, tmp155;
		BitBlock bytetest_b0_bf, tmp156, bytetest_a6, tmp157, bytetest_80_82, tmp158;
		BitBlock tmp159, tmp160, tmp161, bytetest_a4_a5, tmp162, tmp163, tmp164;
		BitBlock tmp165, bytetest_a7, tmp166, tmp167, bytetest_80_97, tmp168, tmp169;
		BitBlock tmp170, tmp171, tmp172, tmp173, bytetest_99_bf, tmp174, tmp175;
		BitBlock tmp176, tmp177, bytetest_9c_bb, tmp178, bytetest_a8_ab, tmp179;
		BitBlock tmp180, tmp181, bytetest_be_bf, tmp182, tmp183, bytetest_ad, tmp184;
		BitBlock tmp185, tmp186, bytetest_ac, tmp187, tmp188, tmp189, tmp190, tmp191;
		BitBlock tmp192, bytetest_87_8c, tmp193, bytetest_ef, bytetest_a9_a9, tmp194;
		BitBlock tmp195, tmp196, tmp197, tmp198, bytetest_b9, bytetest_a2_a2, tmp199;
		BitBlock tmp200, tmp201, tmp202, bytetest_a4_a6, tmp203, bytetest_bc, tmp204;
		BitBlock tmp205, tmp206, tmp207, bytetest_9c_9e, tmp208, bytetest_bd;
		BitBlock bytetest_9c_9c, tmp209, tmp210, tmp211, bytetest_9e_9e, tmp212;
		BitBlock bytetest_bf, tmp213, tmp214, tmp215, tmp216, tmp217, bytetest_a9_ac;
		BitBlock tmp218, tmp219, bytetest_f0, bytetest_9d, bytetest_9b, tmp220, tmp221;
		BitBlock tmp222, tmp223, tmp224, tmp225, tmp226, bytetest_9b_9b, tmp227;
		BitBlock bytetest_bb_bb, tmp228, bytetest_9c, bytetest_95_95, tmp229, tmp230;
		BitBlock tmp231, bytetest_b5_b5, tmp232, bytetest_8f_8f, tmp233, tmp234;
		BitBlock tmp235, tmp236, bytetest_9e, bytetest_89_89, tmp237, tmp238, tmp239;
		BitBlock tmp240, bytetest_83_83, tmp241, tmp242, tmp243, bytetest_bb;
		BitBlock bytetest_b0_b1, tmp244, tmp245, tmp246, tmp247, tmp248;




        struct_Sm.cc = simd<1>::constant<0>();
        tmp1 = simd_or(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp2, tmp1);
        tmp4 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_and(tmp4, tmp5);
        bytetest_2b_2b = simd_and(tmp3, tmp6);
        struct_Sm.cc = simd_or(bytetest_2b_2b, struct_Sm.cc);
        tmp7 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp8 = simd_andc(tmp7, tmp1);
        tmp9 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp10 = simd_and(tmp8, tmp9);
        bytetest_3c_3e = simd_andc(tmp10, tmp5);
        struct_Sm.cc = simd_or(bytetest_3c_3e, struct_Sm.cc);
        tmp11 = simd_andc(basis_bits.bit_1, basis_bits.bit_0);
        tmp12 = simd_and(tmp11, tmp7);
        tmp13 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp14 = simd_andc(tmp9, tmp13);
        bytetest_7c_7c = simd_and(tmp12, tmp14);
        struct_Sm.cc = simd_or(bytetest_7c_7c, struct_Sm.cc);
        tmp15 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp16 = simd_and(tmp9, tmp15);
        bytetest_7e_7e = simd_and(tmp12, tmp16);
        struct_Sm.cc = simd_or(bytetest_7e_7e, struct_Sm.cc);
        tmp17 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp18 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp19 = simd_andc(tmp17, tmp18);
        tmp20 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp21 = simd_andc(tmp15, tmp20);
        bytetest_c2 = simd_and(tmp19, tmp21);
        tmp22 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp23 = simd_and(tmp22, tmp2);
        bytetest_ac_ac = simd_and(tmp23, tmp14);
        tmp24 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp24, carryQ.get_carry_in(0), tmp25));
        tmp26 = simd_and(tmp25, bytetest_c2);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp26, carryQ.get_carry_in(1), tmp27));
        tmp28 = simd_and(tmp27, bytetest_ac_ac);
        struct_Sm.cc = simd_or(tmp28, struct_Sm.cc);
        bytetest_c2 = simd_and(tmp19, tmp21);
        tmp29 = simd_and(tmp22, tmp7);
        tmp30 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp31 = simd_andc(tmp30, tmp20);
        bytetest_b1_b1 = simd_and(tmp29, tmp31);
        tmp32 = simd_and(tmp27, bytetest_b1_b1);
        struct_Sm.cc = simd_or(tmp32, struct_Sm.cc);
        tmp33 = simd_andc(tmp5, tmp20);
        bytetest_c3 = simd_and(tmp19, tmp33);
        tmp34 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp35 = simd_and(tmp22, tmp34);
        tmp36 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp37 = simd_and(tmp36, tmp5);
        bytetest_97_97 = simd_and(tmp35, tmp37);
        tmp38 = simd_and(tmp25, bytetest_c3);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp38, carryQ.get_carry_in(2), tmp39));
        tmp40 = simd_and(tmp39, bytetest_97_97);
        struct_Sm.cc = simd_or(tmp40, struct_Sm.cc);
        bytetest_c3 = simd_and(tmp19, tmp33);
        bytetest_b7_b7 = simd_and(tmp29, tmp37);
        tmp41 = simd_and(tmp39, bytetest_b7_b7);
        struct_Sm.cc = simd_or(tmp41, struct_Sm.cc);
        tmp42 = simd_and(tmp9, tmp5);
        bytetest_cf = simd_and(tmp19, tmp42);
        tmp43 = simd_and(tmp36, tmp15);
        bytetest_b6_b6 = simd_and(tmp29, tmp43);
        tmp44 = simd_and(tmp25, bytetest_cf);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp44, carryQ.get_carry_in(3), tmp45));
        tmp46 = simd_and(tmp45, bytetest_b6_b6);
        struct_Sm.cc = simd_or(tmp46, struct_Sm.cc);
        tmp47 = simd_and(tmp17, tmp34);
        tmp48 = simd_andc(tmp4, tmp13);
        bytetest_d8 = simd_and(tmp47, tmp48);
        tmp49 = simd_andc(tmp22, tmp18);
        tmp50 = simd_or(basis_bits.bit_5, tmp13);
        tmp51 = simd_not(tmp50);
        tmp52 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp53 = simd_or(simd_and(basis_bits.bit_4, tmp51), simd_andc(tmp52, basis_bits.bit_4));
        bytetest_86_88 = simd_and(tmp49, tmp53);
        tmp54 = simd_and(tmp25, bytetest_d8);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp54, carryQ.get_carry_in(4), tmp55));
        tmp56 = simd_and(tmp55, bytetest_86_88);
        struct_Sm.cc = simd_or(tmp56, struct_Sm.cc);
        tmp57 = simd_and(tmp17, tmp2);
        bytetest_e2 = simd_and(tmp57, tmp21);
        bytetest_81 = simd_and(tmp49, tmp31);
        tmp58 = simd_andc(tmp36, tmp13);
        bytetest_84_84 = simd_and(tmp49, tmp58);
        tmp59 = simd_and(tmp25, bytetest_e2);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp59, carryQ.get_carry_in(5), tmp60));
        tmp61 = simd_and(tmp60, bytetest_81);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp61, carryQ.get_carry_in(6), tmp62));
        tmp63 = simd_and(tmp62, bytetest_84_84);
        struct_Sm.cc = simd_or(tmp63, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        bytetest_81 = simd_and(tmp49, tmp31);
        bytetest_92_92 = simd_and(tmp35, tmp21);
        tmp64 = simd_and(tmp62, bytetest_92_92);
        struct_Sm.cc = simd_or(tmp64, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        bytetest_81 = simd_and(tmp49, tmp31);
        tmp65 = simd_and(tmp29, basis_bits.bit_4);
        tmp66 = simd_not(tmp13);
        tmp67 = simd_or(simd_and(basis_bits.bit_5, tmp66), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        bytetest_ba_bc = simd_and(tmp65, tmp67);
        tmp68 = simd_and(tmp62, bytetest_ba_bc);
        struct_Sm.cc = simd_or(tmp68, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        bytetest_82 = simd_and(tmp49, tmp21);
        tmp69 = simd_and(tmp49, basis_bits.bit_4);
        bytetest_8a_8c = simd_and(tmp69, tmp67);
        tmp70 = simd_and(tmp60, bytetest_82);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp70, carryQ.get_carry_in(7), tmp71));
        tmp72 = simd_and(tmp71, bytetest_8a_8c);
        struct_Sm.cc = simd_or(tmp72, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        bytetest_84 = simd_and(tmp49, tmp58);
        bytetest_98_98 = simd_and(tmp35, tmp48);
        tmp73 = simd_and(tmp60, bytetest_84);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(tmp73, carryQ.get_carry_in(8), tmp74));
        tmp75 = simd_and(tmp74, bytetest_98_98);
        struct_Sm.cc = simd_or(tmp75, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        tmp76 = simd_and(tmp36, tmp30);
        bytetest_85 = simd_and(tmp49, tmp76);
        tmp77 = simd_andc(tmp49, basis_bits.bit_4);
        tmp78 = simd_and(basis_bits.bit_5, tmp13);
        bytetest_80_84 = simd_andc(tmp77, tmp78);
        tmp79 = simd_and(tmp60, bytetest_85);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(tmp79, carryQ.get_carry_in(9), tmp80));
        tmp81 = simd_and(tmp80, bytetest_80_84);
        struct_Sm.cc = simd_or(tmp81, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        bytetest_85 = simd_and(tmp49, tmp76);
        bytetest_8b_8b = simd_and(tmp49, tmp6);
        tmp82 = simd_and(tmp80, bytetest_8b_8b);
        struct_Sm.cc = simd_or(tmp82, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        bytetest_86 = simd_and(tmp49, tmp43);
        tmp83 = simd_andc(tmp35, basis_bits.bit_4);
        bytetest_90_94 = simd_andc(tmp83, tmp78);
        tmp84 = simd_and(tmp60, bytetest_86);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(tmp84, carryQ.get_carry_in(10), tmp85));
        tmp86 = simd_and(tmp85, bytetest_90_94);
        struct_Sm.cc = simd_or(tmp86, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        bytetest_86 = simd_and(tmp49, tmp43);
        tmp87 = simd_and(tmp4, basis_bits.bit_6);
        bytetest_9a_9b = simd_and(tmp35, tmp87);
        tmp88 = simd_and(tmp85, bytetest_9a_9b);
        struct_Sm.cc = simd_or(tmp88, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        bytetest_86 = simd_and(tmp49, tmp43);
        tmp89 = simd_or(tmp20, tmp13);
        bytetest_a0_a0 = simd_andc(tmp23, tmp89);
        tmp90 = simd_and(tmp85, bytetest_a0_a0);
        struct_Sm.cc = simd_or(tmp90, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        bytetest_86 = simd_and(tmp49, tmp43);
        bytetest_a3_a3 = simd_and(tmp23, tmp33);
        tmp91 = simd_and(tmp85, bytetest_a3_a3);
        struct_Sm.cc = simd_or(tmp91, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        bytetest_86 = simd_and(tmp49, tmp43);
        bytetest_a6_a6 = simd_and(tmp23, tmp43);
        tmp92 = simd_and(tmp85, bytetest_a6_a6);
        struct_Sm.cc = simd_or(tmp92, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        bytetest_86 = simd_and(tmp49, tmp43);
        bytetest_ae_ae = simd_and(tmp23, tmp16);
        tmp93 = simd_and(tmp85, bytetest_ae_ae);
        struct_Sm.cc = simd_or(tmp93, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        bytetest_87 = simd_and(tmp49, tmp37);
        tmp94 = simd_and(tmp9, basis_bits.bit_6);
        bytetest_8e_8f = simd_and(tmp49, tmp94);
        tmp95 = simd_and(tmp60, bytetest_87);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(tmp95, carryQ.get_carry_in(11), tmp96));
        tmp97 = simd_and(tmp96, bytetest_8e_8f);
        struct_Sm.cc = simd_or(tmp97, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        bytetest_87 = simd_and(tmp49, tmp37);
        bytetest_92_92 = simd_and(tmp35, tmp21);
        tmp98 = simd_and(tmp96, bytetest_92_92);
        struct_Sm.cc = simd_or(tmp98, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        bytetest_87 = simd_and(tmp49, tmp37);
        bytetest_94_94 = simd_and(tmp35, tmp58);
        tmp99 = simd_and(tmp96, bytetest_94_94);
        struct_Sm.cc = simd_or(tmp99, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        bytetest_88_8b = simd_and(tmp49, tmp4);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp100 = simd_and(tmp60, bytetest_88_8b);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(tmp100, carryQ.get_carry_in(12), tmp101));
        tmp102 = simd_and(tmp101, bytetest_80_bf);
        tmp103 = simd_andc(bytetest_80_bf, tmp18);
        bytetest_87 = simd_and(tmp103, tmp37);
        tmp104 = simd_and(bytetest_80_bf, tmp7);
        bytetest_b4_bf = simd_and(tmp104, tmp20);
        tmp105 = simd_and(tmp96, bytetest_b4_bf);
        tmp106 = simd_or(tmp105, tmp102);
        struct_Sm.cc = simd_or(tmp106, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        bytetest_8c = simd_and(tmp103, tmp14);
        tmp107 = simd_and(bytetest_80_bf, tmp2);
        tmp108 = simd_or(tmp20, basis_bits.bit_6);
        bytetest_a0_a1 = simd_andc(tmp107, tmp108);
        tmp109 = simd_and(tmp60, bytetest_8c);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(tmp109, carryQ.get_carry_in(13), tmp110));
        tmp111 = simd_and(tmp110, bytetest_a0_a1);
        struct_Sm.cc = simd_or(tmp111, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        tmp112 = simd_and(tmp9, tmp30);
        bytetest_8d = simd_and(tmp103, tmp112);
        bytetest_bc_bc = simd_and(tmp104, tmp14);
        tmp113 = simd_and(tmp60, bytetest_8d);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(tmp113, carryQ.get_carry_in(14), tmp114));
        tmp115 = simd_and(tmp114, bytetest_bc_bc);
        struct_Sm.cc = simd_or(tmp115, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        bytetest_8e = simd_and(tmp103, tmp16);
        tmp116 = simd_and(basis_bits.bit_3, tmp20);
        tmp117 = simd_not(tmp116);
        tmp118 = simd_or(basis_bits.bit_5, tmp5);
        tmp119 = simd_and(basis_bits.bit_4, tmp118);
        tmp120 = simd_and(basis_bits.bit_3, tmp119);
        tmp121 = simd_or(simd_and(basis_bits.bit_2, tmp117), simd_andc(tmp120, basis_bits.bit_2));
        bytetest_9b_b3 = simd_and(bytetest_80_bf, tmp121);
        tmp122 = simd_and(tmp60, bytetest_8e);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(tmp122, carryQ.get_carry_in(15), tmp123));
        tmp124 = simd_and(tmp123, bytetest_9b_b3);
        struct_Sm.cc = simd_or(tmp124, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        bytetest_8f = simd_and(tmp103, tmp42);
        tmp125 = simd_or(basis_bits.bit_3, tmp108);
        tmp126 = simd_not(tmp125);
        tmp127 = simd_and(basis_bits.bit_3, tmp9);
        tmp128 = simd_or(simd_and(basis_bits.bit_2, tmp126), simd_andc(tmp127, basis_bits.bit_2));
        bytetest_9c_a1 = simd_and(bytetest_80_bf, tmp128);
        tmp129 = simd_and(tmp60, bytetest_8f);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(tmp129, carryQ.get_carry_in(16), tmp130));
        tmp131 = simd_and(tmp130, bytetest_9c_a1);
        struct_Sm.cc = simd_or(tmp131, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        tmp132 = simd_and(bytetest_80_bf, tmp34);
        bytetest_96 = simd_and(tmp132, tmp43);
        bytetest_b7_b7 = simd_and(tmp104, tmp37);
        tmp133 = simd_and(tmp60, bytetest_96);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(tmp133, carryQ.get_carry_in(17), tmp134));
        tmp135 = simd_and(tmp134, bytetest_b7_b7);
        struct_Sm.cc = simd_or(tmp135, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        bytetest_97 = simd_and(tmp132, tmp37);
        bytetest_81_81 = simd_and(tmp103, tmp31);
        tmp136 = simd_and(tmp60, bytetest_97);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(tmp136, carryQ.get_carry_in(18), tmp137));
        tmp138 = simd_and(tmp137, bytetest_81_81);
        struct_Sm.cc = simd_or(tmp138, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        bytetest_97 = simd_and(tmp132, tmp37);
        bytetest_b8_bf = simd_and(tmp104, basis_bits.bit_4);
        tmp139 = simd_and(tmp137, bytetest_b8_bf);
        struct_Sm.cc = simd_or(tmp139, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        tmp140 = simd_and(tmp4, tmp30);
        bytetest_99 = simd_and(tmp132, tmp140);
        bytetest_af_af = simd_and(tmp107, tmp42);
        tmp141 = simd_and(tmp60, bytetest_99);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(tmp141, carryQ.get_carry_in(19), tmp142));
        tmp143 = simd_and(tmp142, bytetest_af_af);
        struct_Sm.cc = simd_or(tmp143, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        bytetest_9f = simd_and(tmp132, tmp42);
        tmp144 = simd_andc(tmp103, basis_bits.bit_4);
        bytetest_80_84 = simd_andc(tmp144, tmp78);
        tmp145 = simd_and(tmp60, bytetest_9f);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(tmp145, carryQ.get_carry_in(20), tmp146));
        tmp147 = simd_and(tmp146, bytetest_80_84);
        struct_Sm.cc = simd_or(tmp147, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        bytetest_9f = simd_and(tmp132, tmp42);
        tmp148 = simd_or(basis_bits.bit_4, tmp52);
        tmp149 = simd_or(basis_bits.bit_3, tmp148);
        tmp150 = simd_not(tmp149);
        tmp151 = simd_and(basis_bits.bit_5, tmp5);
        tmp152 = simd_or(basis_bits.bit_4, tmp151);
        tmp153 = simd_or(basis_bits.bit_3, tmp152);
        tmp154 = simd_or(simd_and(basis_bits.bit_2, tmp150), simd_andc(tmp153, basis_bits.bit_2));
        bytetest_87_a5 = simd_and(bytetest_80_bf, tmp154);
        tmp155 = simd_and(tmp146, bytetest_87_a5);
        struct_Sm.cc = simd_or(tmp155, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        bytetest_9f = simd_and(tmp132, tmp42);
        bytetest_b0_bf = simd_and(bytetest_80_bf, tmp7);
        tmp156 = simd_and(tmp146, bytetest_b0_bf);
        struct_Sm.cc = simd_or(tmp156, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        bytetest_a6 = simd_and(tmp107, tmp43);
        tmp157 = simd_andc(tmp103, tmp20);
        bytetest_80_82 = simd_andc(tmp157, tmp5);
        tmp158 = simd_and(tmp60, bytetest_a6);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(tmp158, carryQ.get_carry_in(21), tmp159));
        tmp160 = simd_and(tmp159, bytetest_80_82);
        tmp161 = simd_andc(tmp36, basis_bits.bit_6);
        bytetest_a4_a5 = simd_and(tmp107, tmp161);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp162 = simd_and(tmp60, bytetest_a4_a5);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(tmp162, carryQ.get_carry_in(22), tmp163));
        tmp164 = simd_and(tmp163, bytetest_80_bf);
        tmp165 = simd_or(tmp164, tmp160);
        struct_Sm.cc = simd_or(tmp165, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        bytetest_a7 = simd_and(tmp107, tmp37);
        tmp166 = simd_andc(bytetest_80_bf, basis_bits.bit_2);
        tmp167 = simd_and(basis_bits.bit_3, basis_bits.bit_4);
        bytetest_80_97 = simd_andc(tmp166, tmp167);
        tmp168 = simd_and(tmp60, bytetest_a7);
        carryQ.cq[23] = carryout2carry(pablo_blk_Advance(tmp168, carryQ.get_carry_in(23), tmp169));
        tmp170 = simd_and(tmp169, bytetest_80_97);
        bytetest_a6 = simd_and(tmp107, tmp43);
        tmp171 = simd_and(basis_bits.bit_4, tmp50);
        tmp172 = simd_and(basis_bits.bit_3, tmp171);
        tmp173 = simd_or(basis_bits.bit_2, tmp172);
        bytetest_99_bf = simd_and(bytetest_80_bf, tmp173);
        tmp174 = simd_and(tmp159, bytetest_99_bf);
        tmp175 = simd_or(tmp174, tmp170);
        struct_Sm.cc = simd_or(tmp175, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        bytetest_a7 = simd_and(tmp107, tmp37);
        tmp176 = simd_not(tmp127);
        tmp177 = simd_or(simd_and(basis_bits.bit_2, tmp176), simd_andc(tmp127, basis_bits.bit_2));
        bytetest_9c_bb = simd_and(bytetest_80_bf, tmp177);
        tmp178 = simd_and(tmp169, bytetest_9c_bb);
        struct_Sm.cc = simd_or(tmp178, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        bytetest_a8_ab = simd_and(tmp107, tmp4);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp179 = simd_and(tmp60, bytetest_a8_ab);
        carryQ.cq[24] = carryout2carry(pablo_blk_Advance(tmp179, carryQ.get_carry_in(24), tmp180));
        tmp181 = simd_and(tmp180, bytetest_80_bf);
        bytetest_a7 = simd_and(tmp107, tmp37);
        bytetest_be_bf = simd_and(bytetest_b0_bf, tmp94);
        tmp182 = simd_and(tmp169, bytetest_be_bf);
        tmp183 = simd_or(tmp182, tmp181);
        struct_Sm.cc = simd_or(tmp183, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        bytetest_ad = simd_and(tmp107, tmp112);
        bytetest_80_84 = simd_andc(tmp144, tmp78);
        tmp184 = simd_and(tmp60, bytetest_ad);
        carryQ.cq[25] = carryout2carry(pablo_blk_Advance(tmp184, carryQ.get_carry_in(25), tmp185));
        tmp186 = simd_and(tmp185, bytetest_80_84);
        bytetest_ac = simd_and(tmp107, tmp14);
        bytetest_b0_bf = simd_and(bytetest_80_bf, tmp7);
        tmp187 = simd_and(tmp60, bytetest_ac);
        carryQ.cq[26] = carryout2carry(pablo_blk_Advance(tmp187, carryQ.get_carry_in(26), tmp188));
        tmp189 = simd_and(tmp188, bytetest_b0_bf);
        tmp190 = simd_or(tmp189, tmp186);
        struct_Sm.cc = simd_or(tmp190, struct_Sm.cc);
        bytetest_e2 = simd_and(tmp57, tmp21);
        bytetest_ad = simd_and(tmp107, tmp112);
        tmp191 = simd_not(tmp78);
        tmp192 = simd_or(simd_and(basis_bits.bit_4, tmp191), simd_andc(tmp151, basis_bits.bit_4));
        bytetest_87_8c = simd_and(tmp103, tmp192);
        tmp193 = simd_and(tmp185, bytetest_87_8c);
        struct_Sm.cc = simd_or(tmp193, struct_Sm.cc);
        bytetest_ef = simd_and(tmp57, tmp42);
        bytetest_ac = simd_and(tmp107, tmp14);
        bytetest_a9_a9 = simd_and(tmp107, tmp140);
        tmp194 = simd_and(tmp25, bytetest_ef);
        carryQ.cq[27] = carryout2carry(pablo_blk_Advance(tmp194, carryQ.get_carry_in(27), tmp195));
        tmp196 = simd_and(tmp195, bytetest_ac);
        carryQ.cq[28] = carryout2carry(pablo_blk_Advance(tmp196, carryQ.get_carry_in(28), tmp197));
        tmp198 = simd_and(tmp197, bytetest_a9_a9);
        struct_Sm.cc = simd_or(tmp198, struct_Sm.cc);
        bytetest_ef = simd_and(tmp57, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp140);
        bytetest_a2_a2 = simd_and(tmp107, tmp21);
        tmp199 = simd_and(tmp195, bytetest_b9);
        carryQ.cq[29] = carryout2carry(pablo_blk_Advance(tmp199, carryQ.get_carry_in(29), tmp200));
        tmp201 = simd_and(tmp200, bytetest_a2_a2);
        struct_Sm.cc = simd_or(tmp201, struct_Sm.cc);
        bytetest_ef = simd_and(tmp57, tmp42);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp140);
        tmp202 = simd_and(tmp107, tmp36);
        bytetest_a4_a6 = simd_andc(tmp202, tmp5);
        tmp203 = simd_and(tmp200, bytetest_a4_a6);
        struct_Sm.cc = simd_or(tmp203, struct_Sm.cc);
        bytetest_ef = simd_and(tmp57, tmp42);
        bytetest_bc = simd_and(bytetest_b0_bf, tmp14);
        bytetest_8b_8b = simd_and(tmp103, tmp6);
        tmp204 = simd_and(tmp195, bytetest_bc);
        carryQ.cq[30] = carryout2carry(pablo_blk_Advance(tmp204, carryQ.get_carry_in(30), tmp205));
        tmp206 = simd_and(tmp205, bytetest_8b_8b);
        struct_Sm.cc = simd_or(tmp206, struct_Sm.cc);
        bytetest_ef = simd_and(tmp57, tmp42);
        bytetest_bc = simd_and(bytetest_b0_bf, tmp14);
        tmp207 = simd_and(tmp132, tmp9);
        bytetest_9c_9e = simd_andc(tmp207, tmp5);
        tmp208 = simd_and(tmp205, bytetest_9c_9e);
        struct_Sm.cc = simd_or(tmp208, struct_Sm.cc);
        bytetest_ef = simd_and(tmp57, tmp42);
        bytetest_bd = simd_and(bytetest_b0_bf, tmp112);
        bytetest_9c_9c = simd_and(tmp132, tmp14);
        tmp209 = simd_and(tmp195, bytetest_bd);
        carryQ.cq[31] = carryout2carry(pablo_blk_Advance(tmp209, carryQ.get_carry_in(31), tmp210));
        tmp211 = simd_and(tmp210, bytetest_9c_9c);
        struct_Sm.cc = simd_or(tmp211, struct_Sm.cc);
        bytetest_ef = simd_and(tmp57, tmp42);
        bytetest_bd = simd_and(bytetest_b0_bf, tmp112);
        bytetest_9e_9e = simd_and(tmp132, tmp16);
        tmp212 = simd_and(tmp210, bytetest_9e_9e);
        struct_Sm.cc = simd_or(tmp212, struct_Sm.cc);
        bytetest_ef = simd_and(tmp57, tmp42);
        bytetest_bf = simd_and(bytetest_b0_bf, tmp42);
        bytetest_a2_a2 = simd_and(tmp107, tmp21);
        tmp213 = simd_and(tmp195, bytetest_bf);
        carryQ.cq[32] = carryout2carry(pablo_blk_Advance(tmp213, carryQ.get_carry_in(32), tmp214));
        tmp215 = simd_and(tmp214, bytetest_a2_a2);
        struct_Sm.cc = simd_or(tmp215, struct_Sm.cc);
        bytetest_ef = simd_and(tmp57, tmp42);
        bytetest_bf = simd_and(bytetest_b0_bf, tmp42);
        tmp216 = simd_and(tmp107, basis_bits.bit_4);
        tmp217 = simd_or(simd_and(basis_bits.bit_5, tmp66), simd_andc(tmp13, basis_bits.bit_5));
        bytetest_a9_ac = simd_and(tmp216, tmp217);
        tmp218 = simd_and(tmp214, bytetest_a9_ac);
        struct_Sm.cc = simd_or(tmp218, struct_Sm.cc);
        tmp219 = simd_and(tmp17, tmp7);
        bytetest_f0 = simd_andc(tmp219, tmp89);
        bytetest_9d = simd_and(tmp132, tmp112);
        bytetest_9b = simd_and(tmp132, tmp6);
        bytetest_81_81 = simd_and(tmp103, tmp31);
        tmp220 = simd_and(tmp25, bytetest_f0);
        carryQ.cq[33] = carryout2carry(pablo_blk_Advance(tmp220, carryQ.get_carry_in(33), tmp221));
        tmp222 = simd_and(tmp221, bytetest_9d);
        carryQ.cq[34] = carryout2carry(pablo_blk_Advance(tmp222, carryQ.get_carry_in(34), tmp223));
        tmp224 = simd_and(tmp223, bytetest_9b);
        carryQ.cq[35] = carryout2carry(pablo_blk_Advance(tmp224, carryQ.get_carry_in(35), tmp225));
        tmp226 = simd_and(tmp225, bytetest_81_81);
        struct_Sm.cc = simd_or(tmp226, struct_Sm.cc);
        bytetest_f0 = simd_andc(tmp219, tmp89);
        bytetest_9d = simd_and(tmp132, tmp112);
        bytetest_9b = simd_and(tmp132, tmp6);
        bytetest_9b_9b = simd_and(tmp132, tmp6);
        tmp227 = simd_and(tmp225, bytetest_9b_9b);
        struct_Sm.cc = simd_or(tmp227, struct_Sm.cc);
        bytetest_f0 = simd_andc(tmp219, tmp89);
        bytetest_9d = simd_and(tmp132, tmp112);
        bytetest_9b = simd_and(tmp132, tmp6);
        bytetest_bb_bb = simd_and(bytetest_b0_bf, tmp6);
        tmp228 = simd_and(tmp225, bytetest_bb_bb);
        struct_Sm.cc = simd_or(tmp228, struct_Sm.cc);
        bytetest_f0 = simd_andc(tmp219, tmp89);
        bytetest_9d = simd_and(tmp132, tmp112);
        bytetest_9c = simd_and(tmp132, tmp14);
        bytetest_95_95 = simd_and(tmp132, tmp76);
        tmp229 = simd_and(tmp223, bytetest_9c);
        carryQ.cq[36] = carryout2carry(pablo_blk_Advance(tmp229, carryQ.get_carry_in(36), tmp230));
        tmp231 = simd_and(tmp230, bytetest_95_95);
        struct_Sm.cc = simd_or(tmp231, struct_Sm.cc);
        bytetest_f0 = simd_andc(tmp219, tmp89);
        bytetest_9d = simd_and(tmp132, tmp112);
        bytetest_9c = simd_and(tmp132, tmp14);
        bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp76);
        tmp232 = simd_and(tmp230, bytetest_b5_b5);
        struct_Sm.cc = simd_or(tmp232, struct_Sm.cc);
        bytetest_f0 = simd_andc(tmp219, tmp89);
        bytetest_9d = simd_and(tmp132, tmp112);
        bytetest_9d = simd_and(tmp132, tmp112);
        bytetest_8f_8f = simd_and(tmp103, tmp42);
        tmp233 = simd_and(tmp223, bytetest_9d);
        carryQ.cq[37] = carryout2carry(pablo_blk_Advance(tmp233, carryQ.get_carry_in(37), tmp234));
        tmp235 = simd_and(tmp234, bytetest_8f_8f);
        struct_Sm.cc = simd_or(tmp235, struct_Sm.cc);
        bytetest_f0 = simd_andc(tmp219, tmp89);
        bytetest_9d = simd_and(tmp132, tmp112);
        bytetest_9d = simd_and(tmp132, tmp112);
        bytetest_af_af = simd_and(tmp107, tmp42);
        tmp236 = simd_and(tmp234, bytetest_af_af);
        struct_Sm.cc = simd_or(tmp236, struct_Sm.cc);
        bytetest_f0 = simd_andc(tmp219, tmp89);
        bytetest_9d = simd_and(tmp132, tmp112);
        bytetest_9e = simd_and(tmp132, tmp16);
        bytetest_89_89 = simd_and(tmp103, tmp140);
        tmp237 = simd_and(tmp223, bytetest_9e);
        carryQ.cq[38] = carryout2carry(pablo_blk_Advance(tmp237, carryQ.get_carry_in(38), tmp238));
        tmp239 = simd_and(tmp238, bytetest_89_89);
        struct_Sm.cc = simd_or(tmp239, struct_Sm.cc);
        bytetest_f0 = simd_andc(tmp219, tmp89);
        bytetest_9d = simd_and(tmp132, tmp112);
        bytetest_9e = simd_and(tmp132, tmp16);
        bytetest_a9_a9 = simd_and(tmp107, tmp140);
        tmp240 = simd_and(tmp238, bytetest_a9_a9);
        struct_Sm.cc = simd_or(tmp240, struct_Sm.cc);
        bytetest_f0 = simd_andc(tmp219, tmp89);
        bytetest_9d = simd_and(tmp132, tmp112);
        bytetest_9f = simd_and(tmp132, tmp42);
        bytetest_83_83 = simd_and(tmp103, tmp33);
        tmp241 = simd_and(tmp223, bytetest_9f);
        carryQ.cq[39] = carryout2carry(pablo_blk_Advance(tmp241, carryQ.get_carry_in(39), tmp242));
        tmp243 = simd_and(tmp242, bytetest_83_83);
        struct_Sm.cc = simd_or(tmp243, struct_Sm.cc);
        bytetest_f0 = simd_andc(tmp219, tmp89);
        bytetest_9e = simd_and(tmp132, tmp16);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp6);
        bytetest_b0_b1 = simd_andc(bytetest_b0_bf, tmp108);
        tmp244 = simd_and(tmp221, bytetest_9e);
        carryQ.cq[40] = carryout2carry(pablo_blk_Advance(tmp244, carryQ.get_carry_in(40), tmp245));
        tmp246 = simd_and(tmp245, bytetest_bb);
        carryQ.cq[41] = carryout2carry(pablo_blk_Advance(tmp246, carryQ.get_carry_in(41), tmp247));
        tmp248 = simd_and(tmp247, bytetest_b0_b1);
        struct_Sm.cc = simd_or(tmp248, struct_Sm.cc);
  }
  CarryArray<42, 0> carryQ;
  };

  struct Sc {
  Sc() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Sc & struct_Sc) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_24_24, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, tmp12, bytetest_c2, tmp13, tmp14, tmp15, tmp16, tmp17;
		BitBlock bytetest_a2_a5, tmp18, tmp19, tmp20, tmp21, tmp22, tmp23, tmp24;
		BitBlock tmp25, bytetest_d6, tmp26, tmp27, tmp28, tmp29, bytetest_8f_8f, tmp30;
		BitBlock tmp31, tmp32, tmp33, tmp34, bytetest_d8, tmp35, bytetest_8b_8b, tmp36;
		BitBlock tmp37, tmp38, tmp39, tmp40, bytetest_e0, tmp41, bytetest_a7, tmp42;
		BitBlock tmp43, tmp44, bytetest_b2_b3, tmp45, tmp46, tmp47, tmp48, tmp49;
		BitBlock bytetest_bb_bb, tmp50, bytetest_ab, tmp51, tmp52, bytetest_b1_b1;
		BitBlock tmp53, tmp54, tmp55, bytetest_af, tmp56, bytetest_b9_b9, tmp57, tmp58;
		BitBlock tmp59, bytetest_b8, bytetest_bf_bf, tmp60, tmp61, tmp62, bytetest_e1;
		BitBlock tmp63, bytetest_9f, bytetest_9b_9b, tmp64, tmp65, tmp66, tmp67, tmp68;
		BitBlock bytetest_e2, bytetest_82, tmp69, tmp70, tmp71, tmp72, bytetest_a0_ba;
		BitBlock tmp73, tmp74, tmp75, tmp76, tmp77, tmp78, bytetest_ea, bytetest_a0;
		BitBlock bytetest_b8_b8, tmp79, tmp80, tmp81, tmp82, tmp83, bytetest_ef;
		BitBlock bytetest_b7, tmp84, bytetest_bc_bc, tmp85, tmp86, tmp87, tmp88, tmp89;
		BitBlock bytetest_b9, bytetest_a9_a9, tmp90, tmp91, tmp92, bytetest_bc;
		BitBlock bytetest_84_84, tmp93, tmp94, tmp95, bytetest_bf, tmp96;
		BitBlock bytetest_a0_a1, tmp97, tmp98, tmp99, tmp100, tmp101, tmp102;
		BitBlock bytetest_a5_a6, tmp103;




        struct_Sc.cc = simd<1>::constant<0>();
        tmp1 = simd_or(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp2, tmp1);
        tmp4 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp5 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_andc(tmp4, tmp5);
        bytetest_24_24 = simd_and(tmp3, tmp6);
        struct_Sc.cc = simd_or(bytetest_24_24, struct_Sc.cc);
        tmp7 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp9 = simd_andc(tmp7, tmp8);
        tmp10 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp11 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp12 = simd_andc(tmp11, tmp10);
        bytetest_c2 = simd_and(tmp9, tmp12);
        tmp13 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp14 = simd_and(tmp13, tmp2);
        tmp15 = simd_andc(tmp14, basis_bits.bit_4);
        tmp16 = simd_not(basis_bits.bit_6);
        tmp17 = simd_or(simd_and(basis_bits.bit_5, tmp16), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        bytetest_a2_a5 = simd_and(tmp15, tmp17);
        tmp18 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp18, carryQ.get_carry_in(0), tmp19));
        tmp20 = simd_and(tmp19, bytetest_c2);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp20, carryQ.get_carry_in(1), tmp21));
        tmp22 = simd_and(tmp21, bytetest_a2_a5);
        struct_Sc.cc = simd_or(tmp22, struct_Sc.cc);
        tmp23 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp24 = simd_and(tmp7, tmp23);
        tmp25 = simd_and(tmp4, tmp11);
        bytetest_d6 = simd_and(tmp24, tmp25);
        tmp26 = simd_andc(tmp13, tmp8);
        tmp27 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp28 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp29 = simd_and(tmp27, tmp28);
        bytetest_8f_8f = simd_and(tmp26, tmp29);
        tmp30 = simd_and(tmp19, bytetest_d6);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp30, carryQ.get_carry_in(2), tmp31));
        tmp32 = simd_and(tmp31, bytetest_8f_8f);
        struct_Sc.cc = simd_or(tmp32, struct_Sc.cc);
        tmp33 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp34 = simd_andc(tmp33, tmp5);
        bytetest_d8 = simd_and(tmp24, tmp34);
        tmp35 = simd_and(tmp33, tmp28);
        bytetest_8b_8b = simd_and(tmp26, tmp35);
        tmp36 = simd_and(tmp19, bytetest_d8);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp36, carryQ.get_carry_in(3), tmp37));
        tmp38 = simd_and(tmp37, bytetest_8b_8b);
        struct_Sc.cc = simd_or(tmp38, struct_Sc.cc);
        tmp39 = simd_and(tmp7, tmp2);
        tmp40 = simd_or(tmp10, tmp5);
        bytetest_e0 = simd_andc(tmp39, tmp40);
        tmp41 = simd_and(tmp4, tmp28);
        bytetest_a7 = simd_and(tmp14, tmp41);
        tmp42 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp43 = simd_and(tmp13, tmp42);
        tmp44 = simd_andc(basis_bits.bit_6, tmp10);
        bytetest_b2_b3 = simd_and(tmp43, tmp44);
        tmp45 = simd_and(tmp19, bytetest_e0);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp45, carryQ.get_carry_in(4), tmp46));
        tmp47 = simd_and(tmp46, bytetest_a7);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp47, carryQ.get_carry_in(5), tmp48));
        tmp49 = simd_and(tmp48, bytetest_b2_b3);
        struct_Sc.cc = simd_or(tmp49, struct_Sc.cc);
        bytetest_e0 = simd_andc(tmp39, tmp40);
        bytetest_a7 = simd_and(tmp14, tmp41);
        bytetest_bb_bb = simd_and(tmp43, tmp35);
        tmp50 = simd_and(tmp48, bytetest_bb_bb);
        struct_Sc.cc = simd_or(tmp50, struct_Sc.cc);
        bytetest_e0 = simd_andc(tmp39, tmp40);
        bytetest_ab = simd_and(tmp14, tmp35);
        tmp51 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp52 = simd_andc(tmp51, tmp10);
        bytetest_b1_b1 = simd_and(tmp43, tmp52);
        tmp53 = simd_and(tmp46, bytetest_ab);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp53, carryQ.get_carry_in(6), tmp54));
        tmp55 = simd_and(tmp54, bytetest_b1_b1);
        struct_Sc.cc = simd_or(tmp55, struct_Sc.cc);
        bytetest_e0 = simd_andc(tmp39, tmp40);
        bytetest_af = simd_and(tmp14, tmp29);
        tmp56 = simd_and(tmp33, tmp51);
        bytetest_b9_b9 = simd_and(tmp43, tmp56);
        tmp57 = simd_and(tmp46, bytetest_af);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp57, carryQ.get_carry_in(7), tmp58));
        tmp59 = simd_and(tmp58, bytetest_b9_b9);
        struct_Sc.cc = simd_or(tmp59, struct_Sc.cc);
        bytetest_e0 = simd_andc(tmp39, tmp40);
        bytetest_b8 = simd_and(tmp43, tmp34);
        bytetest_bf_bf = simd_and(tmp43, tmp29);
        tmp60 = simd_and(tmp46, bytetest_b8);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(tmp60, carryQ.get_carry_in(8), tmp61));
        tmp62 = simd_and(tmp61, bytetest_bf_bf);
        struct_Sc.cc = simd_or(tmp62, struct_Sc.cc);
        bytetest_e1 = simd_and(tmp39, tmp52);
        tmp63 = simd_and(tmp13, tmp23);
        bytetest_9f = simd_and(tmp63, tmp29);
        bytetest_9b_9b = simd_and(tmp63, tmp35);
        tmp64 = simd_and(tmp19, bytetest_e1);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(tmp64, carryQ.get_carry_in(9), tmp65));
        tmp66 = simd_and(tmp65, bytetest_9f);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(tmp66, carryQ.get_carry_in(10), tmp67));
        tmp68 = simd_and(tmp67, bytetest_9b_9b);
        struct_Sc.cc = simd_or(tmp68, struct_Sc.cc);
        bytetest_e2 = simd_and(tmp39, tmp12);
        bytetest_82 = simd_and(tmp26, tmp12);
        tmp69 = simd_and(tmp13, basis_bits.bit_2);
        tmp70 = simd_or(basis_bits.bit_5, tmp28);
        tmp71 = simd_and(basis_bits.bit_4, tmp70);
        tmp72 = simd_and(basis_bits.bit_3, tmp71);
        bytetest_a0_ba = simd_andc(tmp69, tmp72);
        tmp73 = simd_and(tmp19, bytetest_e2);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(tmp73, carryQ.get_carry_in(11), tmp74));
        tmp75 = simd_and(tmp74, bytetest_82);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(tmp75, carryQ.get_carry_in(12), tmp76));
        tmp77 = simd_and(tmp76, bytetest_a0_ba);
        struct_Sc.cc = simd_or(tmp77, struct_Sc.cc);
        tmp78 = simd_and(tmp33, tmp11);
        bytetest_ea = simd_and(tmp39, tmp78);
        bytetest_a0 = simd_andc(tmp14, tmp40);
        bytetest_b8_b8 = simd_and(tmp43, tmp34);
        tmp79 = simd_and(tmp19, bytetest_ea);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(tmp79, carryQ.get_carry_in(13), tmp80));
        tmp81 = simd_and(tmp80, bytetest_a0);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(tmp81, carryQ.get_carry_in(14), tmp82));
        tmp83 = simd_and(tmp82, bytetest_b8_b8);
        struct_Sc.cc = simd_or(tmp83, struct_Sc.cc);
        bytetest_ef = simd_and(tmp39, tmp29);
        bytetest_b7 = simd_and(tmp43, tmp41);
        tmp84 = simd_andc(tmp27, tmp5);
        bytetest_bc_bc = simd_and(tmp43, tmp84);
        tmp85 = simd_and(tmp19, bytetest_ef);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(tmp85, carryQ.get_carry_in(15), tmp86));
        tmp87 = simd_and(tmp86, bytetest_b7);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(tmp87, carryQ.get_carry_in(16), tmp88));
        tmp89 = simd_and(tmp88, bytetest_bc_bc);
        struct_Sc.cc = simd_or(tmp89, struct_Sc.cc);
        bytetest_ef = simd_and(tmp39, tmp29);
        bytetest_b9 = simd_and(tmp43, tmp56);
        bytetest_a9_a9 = simd_and(tmp14, tmp56);
        tmp90 = simd_and(tmp86, bytetest_b9);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(tmp90, carryQ.get_carry_in(17), tmp91));
        tmp92 = simd_and(tmp91, bytetest_a9_a9);
        struct_Sc.cc = simd_or(tmp92, struct_Sc.cc);
        bytetest_ef = simd_and(tmp39, tmp29);
        bytetest_bc = simd_and(tmp43, tmp84);
        bytetest_84_84 = simd_and(tmp26, tmp6);
        tmp93 = simd_and(tmp86, bytetest_bc);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(tmp93, carryQ.get_carry_in(18), tmp94));
        tmp95 = simd_and(tmp94, bytetest_84_84);
        struct_Sc.cc = simd_or(tmp95, struct_Sc.cc);
        bytetest_ef = simd_and(tmp39, tmp29);
        bytetest_bf = simd_and(tmp43, tmp29);
        tmp96 = simd_or(tmp10, basis_bits.bit_6);
        bytetest_a0_a1 = simd_andc(tmp14, tmp96);
        tmp97 = simd_and(tmp86, bytetest_bf);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(tmp97, carryQ.get_carry_in(19), tmp98));
        tmp99 = simd_and(tmp98, bytetest_a0_a1);
        struct_Sc.cc = simd_or(tmp99, struct_Sc.cc);
        bytetest_ef = simd_and(tmp39, tmp29);
        bytetest_bf = simd_and(tmp43, tmp29);
        tmp100 = simd_and(tmp14, tmp4);
        tmp101 = simd_not(basis_bits.bit_7);
        tmp102 = simd_or(simd_and(basis_bits.bit_6, tmp101), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
        bytetest_a5_a6 = simd_and(tmp100, tmp102);
        tmp103 = simd_and(tmp98, bytetest_a5_a6);
        struct_Sc.cc = simd_or(tmp103, struct_Sc.cc);
        carryQ.CarryQ_Adjust(20);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Sc & struct_Sc, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_24_24, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, tmp12, bytetest_c2, tmp13, tmp14, tmp15, tmp16, tmp17;
		BitBlock bytetest_a2_a5, tmp18, tmp19, tmp20, tmp21, tmp22, tmp23, tmp24;
		BitBlock tmp25, bytetest_d6, tmp26, tmp27, tmp28, tmp29, bytetest_8f_8f, tmp30;
		BitBlock tmp31, tmp32, tmp33, tmp34, bytetest_d8, tmp35, bytetest_8b_8b, tmp36;
		BitBlock tmp37, tmp38, tmp39, tmp40, bytetest_e0, tmp41, bytetest_a7, tmp42;
		BitBlock tmp43, tmp44, bytetest_b2_b3, tmp45, tmp46, tmp47, tmp48, tmp49;
		BitBlock bytetest_bb_bb, tmp50, bytetest_ab, tmp51, tmp52, bytetest_b1_b1;
		BitBlock tmp53, tmp54, tmp55, bytetest_af, tmp56, bytetest_b9_b9, tmp57, tmp58;
		BitBlock tmp59, bytetest_b8, bytetest_bf_bf, tmp60, tmp61, tmp62, bytetest_e1;
		BitBlock tmp63, bytetest_9f, bytetest_9b_9b, tmp64, tmp65, tmp66, tmp67, tmp68;
		BitBlock bytetest_e2, bytetest_82, tmp69, tmp70, tmp71, tmp72, bytetest_a0_ba;
		BitBlock tmp73, tmp74, tmp75, tmp76, tmp77, tmp78, bytetest_ea, bytetest_a0;
		BitBlock bytetest_b8_b8, tmp79, tmp80, tmp81, tmp82, tmp83, bytetest_ef;
		BitBlock bytetest_b7, tmp84, bytetest_bc_bc, tmp85, tmp86, tmp87, tmp88, tmp89;
		BitBlock bytetest_b9, bytetest_a9_a9, tmp90, tmp91, tmp92, bytetest_bc;
		BitBlock bytetest_84_84, tmp93, tmp94, tmp95, bytetest_bf, tmp96;
		BitBlock bytetest_a0_a1, tmp97, tmp98, tmp99, tmp100, tmp101, tmp102;
		BitBlock bytetest_a5_a6, tmp103;




        struct_Sc.cc = simd<1>::constant<0>();
        tmp1 = simd_or(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp2, tmp1);
        tmp4 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp5 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_andc(tmp4, tmp5);
        bytetest_24_24 = simd_and(tmp3, tmp6);
        struct_Sc.cc = simd_or(bytetest_24_24, struct_Sc.cc);
        tmp7 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp9 = simd_andc(tmp7, tmp8);
        tmp10 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp11 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp12 = simd_andc(tmp11, tmp10);
        bytetest_c2 = simd_and(tmp9, tmp12);
        tmp13 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp14 = simd_and(tmp13, tmp2);
        tmp15 = simd_andc(tmp14, basis_bits.bit_4);
        tmp16 = simd_not(basis_bits.bit_6);
        tmp17 = simd_or(simd_and(basis_bits.bit_5, tmp16), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        bytetest_a2_a5 = simd_and(tmp15, tmp17);
        tmp18 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp18, carryQ.get_carry_in(0), tmp19));
        tmp20 = simd_and(tmp19, bytetest_c2);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp20, carryQ.get_carry_in(1), tmp21));
        tmp22 = simd_and(tmp21, bytetest_a2_a5);
        struct_Sc.cc = simd_or(tmp22, struct_Sc.cc);
        tmp23 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp24 = simd_and(tmp7, tmp23);
        tmp25 = simd_and(tmp4, tmp11);
        bytetest_d6 = simd_and(tmp24, tmp25);
        tmp26 = simd_andc(tmp13, tmp8);
        tmp27 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp28 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp29 = simd_and(tmp27, tmp28);
        bytetest_8f_8f = simd_and(tmp26, tmp29);
        tmp30 = simd_and(tmp19, bytetest_d6);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp30, carryQ.get_carry_in(2), tmp31));
        tmp32 = simd_and(tmp31, bytetest_8f_8f);
        struct_Sc.cc = simd_or(tmp32, struct_Sc.cc);
        tmp33 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp34 = simd_andc(tmp33, tmp5);
        bytetest_d8 = simd_and(tmp24, tmp34);
        tmp35 = simd_and(tmp33, tmp28);
        bytetest_8b_8b = simd_and(tmp26, tmp35);
        tmp36 = simd_and(tmp19, bytetest_d8);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp36, carryQ.get_carry_in(3), tmp37));
        tmp38 = simd_and(tmp37, bytetest_8b_8b);
        struct_Sc.cc = simd_or(tmp38, struct_Sc.cc);
        tmp39 = simd_and(tmp7, tmp2);
        tmp40 = simd_or(tmp10, tmp5);
        bytetest_e0 = simd_andc(tmp39, tmp40);
        tmp41 = simd_and(tmp4, tmp28);
        bytetest_a7 = simd_and(tmp14, tmp41);
        tmp42 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp43 = simd_and(tmp13, tmp42);
        tmp44 = simd_andc(basis_bits.bit_6, tmp10);
        bytetest_b2_b3 = simd_and(tmp43, tmp44);
        tmp45 = simd_and(tmp19, bytetest_e0);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp45, carryQ.get_carry_in(4), tmp46));
        tmp47 = simd_and(tmp46, bytetest_a7);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp47, carryQ.get_carry_in(5), tmp48));
        tmp49 = simd_and(tmp48, bytetest_b2_b3);
        struct_Sc.cc = simd_or(tmp49, struct_Sc.cc);
        bytetest_e0 = simd_andc(tmp39, tmp40);
        bytetest_a7 = simd_and(tmp14, tmp41);
        bytetest_bb_bb = simd_and(tmp43, tmp35);
        tmp50 = simd_and(tmp48, bytetest_bb_bb);
        struct_Sc.cc = simd_or(tmp50, struct_Sc.cc);
        bytetest_e0 = simd_andc(tmp39, tmp40);
        bytetest_ab = simd_and(tmp14, tmp35);
        tmp51 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp52 = simd_andc(tmp51, tmp10);
        bytetest_b1_b1 = simd_and(tmp43, tmp52);
        tmp53 = simd_and(tmp46, bytetest_ab);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp53, carryQ.get_carry_in(6), tmp54));
        tmp55 = simd_and(tmp54, bytetest_b1_b1);
        struct_Sc.cc = simd_or(tmp55, struct_Sc.cc);
        bytetest_e0 = simd_andc(tmp39, tmp40);
        bytetest_af = simd_and(tmp14, tmp29);
        tmp56 = simd_and(tmp33, tmp51);
        bytetest_b9_b9 = simd_and(tmp43, tmp56);
        tmp57 = simd_and(tmp46, bytetest_af);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp57, carryQ.get_carry_in(7), tmp58));
        tmp59 = simd_and(tmp58, bytetest_b9_b9);
        struct_Sc.cc = simd_or(tmp59, struct_Sc.cc);
        bytetest_e0 = simd_andc(tmp39, tmp40);
        bytetest_b8 = simd_and(tmp43, tmp34);
        bytetest_bf_bf = simd_and(tmp43, tmp29);
        tmp60 = simd_and(tmp46, bytetest_b8);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(tmp60, carryQ.get_carry_in(8), tmp61));
        tmp62 = simd_and(tmp61, bytetest_bf_bf);
        struct_Sc.cc = simd_or(tmp62, struct_Sc.cc);
        bytetest_e1 = simd_and(tmp39, tmp52);
        tmp63 = simd_and(tmp13, tmp23);
        bytetest_9f = simd_and(tmp63, tmp29);
        bytetest_9b_9b = simd_and(tmp63, tmp35);
        tmp64 = simd_and(tmp19, bytetest_e1);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(tmp64, carryQ.get_carry_in(9), tmp65));
        tmp66 = simd_and(tmp65, bytetest_9f);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(tmp66, carryQ.get_carry_in(10), tmp67));
        tmp68 = simd_and(tmp67, bytetest_9b_9b);
        struct_Sc.cc = simd_or(tmp68, struct_Sc.cc);
        bytetest_e2 = simd_and(tmp39, tmp12);
        bytetest_82 = simd_and(tmp26, tmp12);
        tmp69 = simd_and(tmp13, basis_bits.bit_2);
        tmp70 = simd_or(basis_bits.bit_5, tmp28);
        tmp71 = simd_and(basis_bits.bit_4, tmp70);
        tmp72 = simd_and(basis_bits.bit_3, tmp71);
        bytetest_a0_ba = simd_andc(tmp69, tmp72);
        tmp73 = simd_and(tmp19, bytetest_e2);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(tmp73, carryQ.get_carry_in(11), tmp74));
        tmp75 = simd_and(tmp74, bytetest_82);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(tmp75, carryQ.get_carry_in(12), tmp76));
        tmp77 = simd_and(tmp76, bytetest_a0_ba);
        struct_Sc.cc = simd_or(tmp77, struct_Sc.cc);
        tmp78 = simd_and(tmp33, tmp11);
        bytetest_ea = simd_and(tmp39, tmp78);
        bytetest_a0 = simd_andc(tmp14, tmp40);
        bytetest_b8_b8 = simd_and(tmp43, tmp34);
        tmp79 = simd_and(tmp19, bytetest_ea);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(tmp79, carryQ.get_carry_in(13), tmp80));
        tmp81 = simd_and(tmp80, bytetest_a0);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(tmp81, carryQ.get_carry_in(14), tmp82));
        tmp83 = simd_and(tmp82, bytetest_b8_b8);
        struct_Sc.cc = simd_or(tmp83, struct_Sc.cc);
        bytetest_ef = simd_and(tmp39, tmp29);
        bytetest_b7 = simd_and(tmp43, tmp41);
        tmp84 = simd_andc(tmp27, tmp5);
        bytetest_bc_bc = simd_and(tmp43, tmp84);
        tmp85 = simd_and(tmp19, bytetest_ef);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(tmp85, carryQ.get_carry_in(15), tmp86));
        tmp87 = simd_and(tmp86, bytetest_b7);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(tmp87, carryQ.get_carry_in(16), tmp88));
        tmp89 = simd_and(tmp88, bytetest_bc_bc);
        struct_Sc.cc = simd_or(tmp89, struct_Sc.cc);
        bytetest_ef = simd_and(tmp39, tmp29);
        bytetest_b9 = simd_and(tmp43, tmp56);
        bytetest_a9_a9 = simd_and(tmp14, tmp56);
        tmp90 = simd_and(tmp86, bytetest_b9);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(tmp90, carryQ.get_carry_in(17), tmp91));
        tmp92 = simd_and(tmp91, bytetest_a9_a9);
        struct_Sc.cc = simd_or(tmp92, struct_Sc.cc);
        bytetest_ef = simd_and(tmp39, tmp29);
        bytetest_bc = simd_and(tmp43, tmp84);
        bytetest_84_84 = simd_and(tmp26, tmp6);
        tmp93 = simd_and(tmp86, bytetest_bc);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(tmp93, carryQ.get_carry_in(18), tmp94));
        tmp95 = simd_and(tmp94, bytetest_84_84);
        struct_Sc.cc = simd_or(tmp95, struct_Sc.cc);
        bytetest_ef = simd_and(tmp39, tmp29);
        bytetest_bf = simd_and(tmp43, tmp29);
        tmp96 = simd_or(tmp10, basis_bits.bit_6);
        bytetest_a0_a1 = simd_andc(tmp14, tmp96);
        tmp97 = simd_and(tmp86, bytetest_bf);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(tmp97, carryQ.get_carry_in(19), tmp98));
        tmp99 = simd_and(tmp98, bytetest_a0_a1);
        struct_Sc.cc = simd_or(tmp99, struct_Sc.cc);
        bytetest_ef = simd_and(tmp39, tmp29);
        bytetest_bf = simd_and(tmp43, tmp29);
        tmp100 = simd_and(tmp14, tmp4);
        tmp101 = simd_not(basis_bits.bit_7);
        tmp102 = simd_or(simd_and(basis_bits.bit_6, tmp101), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
        bytetest_a5_a6 = simd_and(tmp100, tmp102);
        tmp103 = simd_and(tmp98, bytetest_a5_a6);
        struct_Sc.cc = simd_or(tmp103, struct_Sc.cc);
  }
  CarryArray<20, 0> carryQ;
  };

  struct Zl {
  Zl() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Zl & struct_Zl) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_e2, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, bytetest_80, tmp12, tmp13, tmp14, bytetest_a8_a8, tmp15;
		BitBlock tmp16, tmp17, tmp18, tmp19, tmp20, tmp21;




        struct_Zl.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_and(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_andc(tmp5, tmp4);
        bytetest_e2 = simd_and(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp9 = simd_andc(tmp7, tmp8);
        tmp10 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp11 = simd_or(tmp4, tmp10);
        bytetest_80 = simd_andc(tmp9, tmp11);
        tmp12 = simd_and(tmp7, tmp2);
        tmp13 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp14 = simd_andc(tmp13, tmp10);
        bytetest_a8_a8 = simd_and(tmp12, tmp14);
        tmp15 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp15, carryQ.get_carry_in(0), tmp16));
        tmp17 = simd_and(tmp16, bytetest_e2);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp17, carryQ.get_carry_in(1), tmp18));
        tmp19 = simd_and(tmp18, bytetest_80);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp19, carryQ.get_carry_in(2), tmp20));
        tmp21 = simd_and(tmp20, bytetest_a8_a8);
        struct_Zl.cc = simd_or(tmp21, struct_Zl.cc);
        carryQ.CarryQ_Adjust(3);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Zl & struct_Zl, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_e2, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, bytetest_80, tmp12, tmp13, tmp14, bytetest_a8_a8, tmp15;
		BitBlock tmp16, tmp17, tmp18, tmp19, tmp20, tmp21;




        struct_Zl.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_and(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_andc(tmp5, tmp4);
        bytetest_e2 = simd_and(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp9 = simd_andc(tmp7, tmp8);
        tmp10 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp11 = simd_or(tmp4, tmp10);
        bytetest_80 = simd_andc(tmp9, tmp11);
        tmp12 = simd_and(tmp7, tmp2);
        tmp13 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp14 = simd_andc(tmp13, tmp10);
        bytetest_a8_a8 = simd_and(tmp12, tmp14);
        tmp15 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp15, carryQ.get_carry_in(0), tmp16));
        tmp17 = simd_and(tmp16, bytetest_e2);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp17, carryQ.get_carry_in(1), tmp18));
        tmp19 = simd_and(tmp18, bytetest_80);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp19, carryQ.get_carry_in(2), tmp20));
        tmp21 = simd_and(tmp20, bytetest_a8_a8);
        struct_Zl.cc = simd_or(tmp21, struct_Zl.cc);
  }
  CarryArray<3, 0> carryQ;
  };

  struct Co {
  Co() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Co & struct_Co) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_ef, tmp7, tmp8, tmp9;
		BitBlock tmp10, bytetest_80_a3, bytetest_80_bf, tmp11, tmp12, tmp13, tmp14;
		BitBlock tmp15, tmp16, tmp17, tmp18, tmp19, bytetest_ee, tmp20, tmp21, tmp22;
		BitBlock tmp23, tmp24, tmp25, tmp26, tmp27, tmp28, bytetest_f3, tmp29;
		BitBlock bytetest_bf, tmp30, tmp31, tmp32, bytetest_80_bd, tmp33, tmp34, tmp35;
		BitBlock tmp36, tmp37, tmp38, tmp39, tmp40, tmp41, bytetest_80_be, tmp42;
		BitBlock tmp43, tmp44, tmp45, tmp46, tmp47, bytetest_b0_be, tmp48, tmp49;
		BitBlock tmp50, tmp51, tmp52, tmp53;




        struct_Co.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_and(tmp1, tmp2);
        tmp4 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_and(tmp4, tmp5);
        bytetest_ef = simd_and(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp9 = simd_or(basis_bits.bit_3, tmp8);
        tmp10 = simd_and(basis_bits.bit_2, tmp9);
        bytetest_80_a3 = simd_andc(tmp7, tmp10);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp11 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp11, carryQ.get_carry_in(0), tmp12));
        tmp13 = simd_and(tmp12, bytetest_ef);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp13, carryQ.get_carry_in(1), tmp14));
        tmp15 = simd_and(tmp14, bytetest_80_a3);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp15, carryQ.get_carry_in(2), tmp16));
        tmp17 = simd_and(tmp16, bytetest_80_bf);
        tmp18 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp19 = simd_and(tmp4, tmp18);
        bytetest_ee = simd_and(tmp3, tmp19);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp20 = simd_and(tmp12, bytetest_ee);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp20, carryQ.get_carry_in(3), tmp21));
        tmp22 = simd_and(tmp21, bytetest_80_bf);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp22, carryQ.get_carry_in(4), tmp23));
        tmp24 = simd_and(tmp23, bytetest_80_bf);
        tmp25 = simd_or(tmp24, tmp17);
        struct_Co.cc = simd_or(tmp25, struct_Co.cc);
        tmp26 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp27 = simd_and(tmp1, tmp26);
        tmp28 = simd_andc(tmp5, tmp8);
        bytetest_f3 = simd_and(tmp27, tmp28);
        tmp29 = simd_and(bytetest_80_bf, tmp26);
        bytetest_bf = simd_and(tmp29, tmp6);
        bytetest_bf = simd_and(tmp29, tmp6);
        tmp30 = simd_and(tmp4, basis_bits.bit_6);
        tmp31 = simd_and(basis_bits.bit_3, tmp30);
        tmp32 = simd_and(basis_bits.bit_2, tmp31);
        bytetest_80_bd = simd_andc(bytetest_80_bf, tmp32);
        tmp33 = simd_and(tmp12, bytetest_f3);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp33, carryQ.get_carry_in(5), tmp34));
        tmp35 = simd_and(tmp34, bytetest_bf);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp35, carryQ.get_carry_in(6), tmp36));
        tmp37 = simd_and(tmp36, bytetest_bf);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp37, carryQ.get_carry_in(7), tmp38));
        tmp39 = simd_and(tmp38, bytetest_80_bd);
        tmp40 = simd_and(basis_bits.bit_3, tmp6);
        tmp41 = simd_and(basis_bits.bit_2, tmp40);
        bytetest_80_be = simd_andc(bytetest_80_bf, tmp41);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp42 = simd_and(tmp36, bytetest_80_be);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(tmp42, carryQ.get_carry_in(8), tmp43));
        tmp44 = simd_and(tmp43, bytetest_80_bf);
        tmp45 = simd_or(tmp44, tmp39);
        tmp46 = simd_and(basis_bits.bit_5, tmp5);
        tmp47 = simd_and(basis_bits.bit_4, tmp46);
        bytetest_b0_be = simd_andc(tmp29, tmp47);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp48 = simd_and(tmp34, bytetest_b0_be);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(tmp48, carryQ.get_carry_in(9), tmp49));
        tmp50 = simd_and(tmp49, bytetest_80_bf);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(tmp50, carryQ.get_carry_in(10), tmp51));
        tmp52 = simd_and(tmp51, bytetest_80_bf);
        tmp53 = simd_or(tmp52, tmp45);
        struct_Co.cc = simd_or(tmp53, struct_Co.cc);
        carryQ.CarryQ_Adjust(11);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Co & struct_Co, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_ef, tmp7, tmp8, tmp9;
		BitBlock tmp10, bytetest_80_a3, bytetest_80_bf, tmp11, tmp12, tmp13, tmp14;
		BitBlock tmp15, tmp16, tmp17, tmp18, tmp19, bytetest_ee, tmp20, tmp21, tmp22;
		BitBlock tmp23, tmp24, tmp25, tmp26, tmp27, tmp28, bytetest_f3, tmp29;
		BitBlock bytetest_bf, tmp30, tmp31, tmp32, bytetest_80_bd, tmp33, tmp34, tmp35;
		BitBlock tmp36, tmp37, tmp38, tmp39, tmp40, tmp41, bytetest_80_be, tmp42;
		BitBlock tmp43, tmp44, tmp45, tmp46, tmp47, bytetest_b0_be, tmp48, tmp49;
		BitBlock tmp50, tmp51, tmp52, tmp53;




        struct_Co.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_and(tmp1, tmp2);
        tmp4 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_and(tmp4, tmp5);
        bytetest_ef = simd_and(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp9 = simd_or(basis_bits.bit_3, tmp8);
        tmp10 = simd_and(basis_bits.bit_2, tmp9);
        bytetest_80_a3 = simd_andc(tmp7, tmp10);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp11 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp11, carryQ.get_carry_in(0), tmp12));
        tmp13 = simd_and(tmp12, bytetest_ef);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp13, carryQ.get_carry_in(1), tmp14));
        tmp15 = simd_and(tmp14, bytetest_80_a3);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp15, carryQ.get_carry_in(2), tmp16));
        tmp17 = simd_and(tmp16, bytetest_80_bf);
        tmp18 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp19 = simd_and(tmp4, tmp18);
        bytetest_ee = simd_and(tmp3, tmp19);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp20 = simd_and(tmp12, bytetest_ee);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp20, carryQ.get_carry_in(3), tmp21));
        tmp22 = simd_and(tmp21, bytetest_80_bf);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp22, carryQ.get_carry_in(4), tmp23));
        tmp24 = simd_and(tmp23, bytetest_80_bf);
        tmp25 = simd_or(tmp24, tmp17);
        struct_Co.cc = simd_or(tmp25, struct_Co.cc);
        tmp26 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp27 = simd_and(tmp1, tmp26);
        tmp28 = simd_andc(tmp5, tmp8);
        bytetest_f3 = simd_and(tmp27, tmp28);
        tmp29 = simd_and(bytetest_80_bf, tmp26);
        bytetest_bf = simd_and(tmp29, tmp6);
        bytetest_bf = simd_and(tmp29, tmp6);
        tmp30 = simd_and(tmp4, basis_bits.bit_6);
        tmp31 = simd_and(basis_bits.bit_3, tmp30);
        tmp32 = simd_and(basis_bits.bit_2, tmp31);
        bytetest_80_bd = simd_andc(bytetest_80_bf, tmp32);
        tmp33 = simd_and(tmp12, bytetest_f3);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp33, carryQ.get_carry_in(5), tmp34));
        tmp35 = simd_and(tmp34, bytetest_bf);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp35, carryQ.get_carry_in(6), tmp36));
        tmp37 = simd_and(tmp36, bytetest_bf);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp37, carryQ.get_carry_in(7), tmp38));
        tmp39 = simd_and(tmp38, bytetest_80_bd);
        tmp40 = simd_and(basis_bits.bit_3, tmp6);
        tmp41 = simd_and(basis_bits.bit_2, tmp40);
        bytetest_80_be = simd_andc(bytetest_80_bf, tmp41);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp42 = simd_and(tmp36, bytetest_80_be);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(tmp42, carryQ.get_carry_in(8), tmp43));
        tmp44 = simd_and(tmp43, bytetest_80_bf);
        tmp45 = simd_or(tmp44, tmp39);
        tmp46 = simd_and(basis_bits.bit_5, tmp5);
        tmp47 = simd_and(basis_bits.bit_4, tmp46);
        bytetest_b0_be = simd_andc(tmp29, tmp47);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp48 = simd_and(tmp34, bytetest_b0_be);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(tmp48, carryQ.get_carry_in(9), tmp49));
        tmp50 = simd_and(tmp49, bytetest_80_bf);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(tmp50, carryQ.get_carry_in(10), tmp51));
        tmp52 = simd_and(tmp51, bytetest_80_bf);
        tmp53 = simd_or(tmp52, tmp45);
        struct_Co.cc = simd_or(tmp53, struct_Co.cc);
  }
  CarryArray<11, 0> carryQ;
  };

  struct Cn {
  Cn() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Cn & struct_Cn) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_cd, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, bytetest_b8_b9, tmp12, tmp13, tmp14, tmp15, tmp16;
		BitBlock tmp17, tmp18, bytetest_ce, tmp19, tmp20, bytetest_80_83, tmp21, tmp22;
		BitBlock tmp23, tmp24, tmp25, bytetest_bf_bf, tmp26, tmp27, tmp28;
		BitBlock bytetest_8b_8b, tmp29, bytetest_8d_8d, tmp30, tmp31, tmp32, tmp33;
		BitBlock bytetest_a2_a2, tmp34, tmp35, tmp36, tmp37, tmp38, tmp39, bytetest_d4;
		BitBlock tmp40, tmp41, tmp42, tmp43, bytetest_a8_b0, tmp44, tmp45, tmp46;
		BitBlock tmp47, bytetest_d5, tmp48, tmp49, tmp50, tmp51, tmp52, bytetest_97_98;
		BitBlock tmp53, tmp54, tmp55, bytetest_a0_a0, tmp56, tmp57, bytetest_d6, tmp58;
		BitBlock bytetest_88_88, tmp59, tmp60, tmp61, tmp62, tmp63, tmp64;
		BitBlock bytetest_8b_8e, tmp65, bytetest_90_90, tmp66, tmp67, bytetest_d7;
		BitBlock bytetest_88_8f, tmp68, tmp69, tmp70, tmp71, tmp72, bytetest_ab_af;
		BitBlock tmp73, tmp74, tmp75, bytetest_b5_bf, tmp76, bytetest_d8;
		BitBlock bytetest_85_85, tmp77, tmp78, tmp79, bytetest_9d_9d, tmp80, tmp81;
		BitBlock bytetest_dc, bytetest_8e_8e, tmp82, tmp83, tmp84, bytetest_dd, tmp85;
		BitBlock tmp86, bytetest_8b_8c, tmp87, tmp88, tmp89, bytetest_de, tmp90, tmp91;
		BitBlock bytetest_b2_bf, tmp92, tmp93, tmp94, bytetest_df, tmp95;
		BitBlock bytetest_bb_bf, tmp96, tmp97, tmp98, tmp99, bytetest_e0, bytetest_a0;
		BitBlock tmp100, bytetest_ae_af, tmp101, tmp102, tmp103, tmp104, tmp105;
		BitBlock tmp106, tmp107, bytetest_a1, tmp108, bytetest_9c_9d, tmp109, tmp110;
		BitBlock tmp111, bytetest_a2, bytetest_80_9f, tmp112, tmp113, tmp114, tmp115;
		BitBlock tmp116, bytetest_9f_bf, tmp117, tmp118, bytetest_a1_a1, tmp119;
		BitBlock tmp120, bytetest_a3, tmp121, tmp122, bytetest_80_a3, tmp123, tmp124;
		BitBlock tmp125, tmp126, tmp127, bytetest_ad_bf, tmp128, tmp129, tmp130;
		BitBlock bytetest_a5, bytetest_b8_b8, tmp131, tmp132, tmp133, bytetest_a6;
		BitBlock bytetest_80_80, tmp134, tmp135, tmp136, bytetest_84_84, tmp137;
		BitBlock tmp138, tmp139, tmp140, bytetest_8d_8e, tmp141, tmp142;
		BitBlock bytetest_91_92, tmp143, tmp144, bytetest_a9_a9, tmp145;
		BitBlock bytetest_b1_b1, tmp146, tmp147, tmp148, tmp149, bytetest_b3_b5;
		BitBlock tmp150, tmp151, bytetest_ba_bb, tmp152, bytetest_a7, tmp153;
		BitBlock bytetest_85_86, tmp154, tmp155, tmp156, tmp157, bytetest_89_8a;
		BitBlock tmp158, tmp159, tmp160, tmp161, bytetest_8f_96, tmp162;
		BitBlock bytetest_98_9b, tmp163, bytetest_9e_9e, tmp164, tmp165;
		BitBlock bytetest_a4_a5, tmp166, bytetest_a8, tmp167, tmp168, tmp169;
		BitBlock bytetest_bc_bf, tmp170, tmp171, tmp172, tmp173, tmp174, tmp175;
		BitBlock tmp176, bytetest_b4_b4, tmp177, bytetest_b7_b7, tmp178, tmp179;
		BitBlock bytetest_bd_bd, tmp180, bytetest_a9, tmp181, bytetest_83_86, tmp182;
		BitBlock tmp183, tmp184, tmp185, tmp186, bytetest_8e_90, tmp187, tmp188;
		BitBlock bytetest_92_98, tmp189, tmp190, tmp191, tmp192, tmp193, tmp194;
		BitBlock tmp195, bytetest_9f_a5, tmp196, tmp197, bytetest_aa, tmp198, tmp199;
		BitBlock tmp200, bytetest_b6_bf, tmp201, tmp202, tmp203, tmp204;
		BitBlock bytetest_92_92, tmp205, tmp206, tmp207, tmp208, tmp209, bytetest_ab;
		BitBlock bytetest_86_86, tmp210, tmp211, tmp212, bytetest_8a_8a, tmp213;
		BitBlock bytetest_8e_8f, tmp214, tmp215, bytetest_91_9f, tmp216, tmp217;
		BitBlock bytetest_ac, tmp218, tmp219, tmp220, tmp221, tmp222, tmp223, tmp224;
		BitBlock tmp225, tmp226, tmp227, tmp228, tmp229, bytetest_ad, tmp230, tmp231;
		BitBlock tmp232, tmp233, tmp234, tmp235, bytetest_8e_95, tmp236, tmp237;
		BitBlock tmp238, tmp239, bytetest_ae, tmp240, bytetest_80_81, tmp241, tmp242;
		BitBlock tmp243, bytetest_b8_bf, tmp244, tmp245, tmp246, bytetest_8b_8d;
		BitBlock tmp247, bytetest_91_91, tmp248, tmp249, bytetest_96_98, tmp250;
		BitBlock bytetest_9b_9b, tmp251, tmp252, tmp253, bytetest_a0_a2, tmp254;
		BitBlock tmp255, bytetest_a5_a7, tmp256, bytetest_ab_ad, tmp257, tmp258;
		BitBlock bytetest_ba_bd, tmp259, bytetest_af, bytetest_83_85, tmp260, tmp261;
		BitBlock tmp262, bytetest_89_89, tmp263, tmp264, tmp265, tmp266;
		BitBlock bytetest_91_96, tmp267, tmp268, tmp269, bytetest_98_a5, tmp270;
		BitBlock bytetest_b0, tmp271, tmp272, tmp273, tmp274, tmp275, tmp276, tmp277;
		BitBlock tmp278, tmp279, tmp280, tmp281, bytetest_ba_bc, tmp282, bytetest_b1;
		BitBlock tmp283, tmp284, tmp285, tmp286, tmp287, tmp288, bytetest_8e_94;
		BitBlock tmp289, bytetest_97_97, tmp290, tmp291, bytetest_9a_9f, tmp292;
		BitBlock tmp293, bytetest_b0_b7, tmp294, bytetest_b2, tmp295, tmp296, tmp297;
		BitBlock tmp298, tmp299, tmp300, tmp301, tmp302, tmp303, bytetest_b3, tmp304;
		BitBlock tmp305, tmp306, tmp307, tmp308, tmp309, tmp310, bytetest_97_9d;
		BitBlock tmp311, bytetest_9f_9f, tmp312, tmp313, bytetest_b0_b0, tmp314;
		BitBlock bytetest_b4, tmp315, tmp316, tmp317, tmp318, bytetest_b3_bf, tmp319;
		BitBlock tmp320, tmp321, tmp322, tmp323, bytetest_bb_bc, tmp324, bytetest_b5;
		BitBlock tmp325, tmp326, tmp327, tmp328, tmp329, bytetest_98_9f, tmp330;
		BitBlock tmp331, bytetest_b6_b8, tmp332, bytetest_b6, tmp333, tmp334, tmp335;
		BitBlock tmp336, tmp337, tmp338, bytetest_97_99, tmp339, bytetest_b2_b2;
		BitBlock tmp340, bytetest_bc_bc, tmp341, bytetest_be_bf, tmp342, bytetest_b7;
		BitBlock bytetest_87_89, tmp343, tmp344, tmp345, tmp346, bytetest_95_95;
		BitBlock tmp347, tmp348, tmp349, bytetest_a0_b1, tmp350, bytetest_b8, tmp351;
		BitBlock tmp352, tmp353, tmp354, tmp355, bytetest_bb_be, tmp356, bytetest_ba;
		BitBlock tmp357, tmp358, tmp359, bytetest_b9, tmp360, tmp361, bytetest_9c_bf;
		BitBlock tmp362, tmp363, tmp364, tmp365, bytetest_83_83, tmp366, tmp367;
		BitBlock tmp368, tmp369, tmp370, tmp371, bytetest_8e_93, tmp372;
		BitBlock bytetest_98_98, tmp373, tmp374, bytetest_a4_a4, tmp375;
		BitBlock bytetest_a6_a6, tmp376, bytetest_a8_a9, tmp377, bytetest_ac_ac;
		BitBlock tmp378, bytetest_ba_ba, tmp379, tmp380, bytetest_bb, tmp381, tmp382;
		BitBlock tmp383, bytetest_87_87, tmp384, tmp385, bytetest_9a_9b, tmp386;
		BitBlock bytetest_a0_bf, tmp387, bytetest_bd, tmp388, tmp389, tmp390, tmp391;
		BitBlock bytetest_ad_b0, tmp392, bytetest_be, tmp393, tmp394, tmp395, tmp396;
		BitBlock bytetest_bf, tmp397, tmp398, tmp399, tmp400, tmp401, tmp402;
		BitBlock bytetest_9b_bf, tmp403, bytetest_e1, bytetest_83, tmp404, tmp405;
		BitBlock tmp406, tmp407, tmp408, bytetest_88_8c, tmp409, tmp410, bytetest_89;
		BitBlock tmp411, tmp412, tmp413, tmp414, tmp415, bytetest_99_99, tmp416;
		BitBlock bytetest_9e_9f, tmp417, bytetest_8a, tmp418, tmp419, tmp420, tmp421;
		BitBlock tmp422, tmp423, bytetest_b6_b7, tmp424, tmp425, bytetest_8b;
		BitBlock bytetest_81_81, tmp426, tmp427, tmp428, bytetest_86_87, tmp429;
		BitBlock tmp430, bytetest_8c, tmp431, tmp432, tmp433, bytetest_96_97, tmp434;
		BitBlock bytetest_8d, bytetest_9b_9c, tmp435, tmp436, tmp437, bytetest_bd_bf;
		BitBlock tmp438, bytetest_8e, tmp439, tmp440, tmp441, bytetest_8f, tmp442;
		BitBlock tmp443, tmp444, bytetest_9a, tmp445, bytetest_9d_9f, tmp446, tmp447;
		BitBlock tmp448, bytetest_9b, bytetest_b1_bf, tmp449, tmp450, tmp451;
		BitBlock bytetest_9c, tmp452, tmp453, tmp454, bytetest_95_9f, tmp455;
		BitBlock bytetest_b7_bf, tmp456, bytetest_9d, bytetest_94_9f, tmp457, tmp458;
		BitBlock tmp459, bytetest_ad_ad, tmp460, tmp461, bytetest_b4_bf, tmp462;
		BitBlock bytetest_9f, tmp463, tmp464, tmp465, bytetest_aa_af, tmp466;
		BitBlock bytetest_ba_bf, tmp467, bytetest_8f_8f, tmp468, tmp469, tmp470;
		BitBlock tmp471, tmp472, tmp473, tmp474, tmp475, tmp476, tmp477, tmp478;
		BitBlock tmp479, tmp480, bytetest_a4, tmp481, tmp482, tmp483, bytetest_ac_af;
		BitBlock tmp484, tmp485, bytetest_81_83, tmp486, tmp487, tmp488, tmp489;
		BitBlock tmp490, tmp491, tmp492, tmp493, bytetest_8a_8f, tmp494, tmp495;
		BitBlock tmp496, bytetest_9b_9d, tmp497, tmp498, tmp499, tmp500, tmp501;
		BitBlock tmp502, tmp503, bytetest_bd_be, tmp504, tmp505, tmp506, tmp507;
		BitBlock tmp508, bytetest_80_bf, tmp509, tmp510, tmp511, tmp512, tmp513;
		BitBlock tmp514, bytetest_ae_bf, tmp515, tmp516, tmp517, bytetest_8c_8f;
		BitBlock tmp518, tmp519, tmp520, tmp521, tmp522, tmp523, tmp524, tmp525;
		BitBlock bytetest_b4_bb, tmp526, tmp527, tmp528, tmp529, bytetest_b8_ba;
		BitBlock tmp530, tmp531, tmp532, tmp533, bytetest_8a_8c, tmp534, tmp535;
		BitBlock tmp536, tmp537, tmp538, tmp539, tmp540, tmp541, tmp542, tmp543;
		BitBlock tmp544, tmp545, bytetest_a7_bb, tmp546, tmp547, tmp548, bytetest_bc;
		BitBlock tmp549, tmp550, tmp551, tmp552, tmp553, tmp554, tmp555, tmp556;
		BitBlock tmp557, tmp558, bytetest_9a_9a, tmp559, bytetest_9c_9c, tmp560;
		BitBlock tmp561, tmp562, bytetest_b5_b5, tmp563, tmp564, tmp565, tmp566;
		BitBlock tmp567, tmp568, bytetest_94_95, tmp569, tmp570, bytetest_b0_b1;
		BitBlock tmp571, tmp572, tmp573, bytetest_e2, bytetest_81, bytetest_a5_a5;
		BitBlock tmp574, tmp575, tmp576, tmp577, tmp578, tmp579, bytetest_b2_b3;
		BitBlock tmp580, bytetest_82, tmp581, tmp582, tmp583, tmp584, tmp585;
		BitBlock bytetest_80_8f, tmp586, tmp587, tmp588, tmp589, tmp590, tmp591;
		BitBlock tmp592, bytetest_86, tmp593, tmp594, tmp595, tmp596, tmp597, tmp598;
		BitBlock tmp599, bytetest_90, tmp600, bytetest_a7_bf, tmp601, tmp602, tmp603;
		BitBlock bytetest_91, tmp604, tmp605, bytetest_8b_9f, tmp606, tmp607, tmp608;
		BitBlock tmp609, tmp610, tmp611, tmp612, bytetest_8d_8f, tmp613, tmp614;
		BitBlock tmp615, tmp616, tmp617, tmp618, tmp619, tmp620, tmp621;
		BitBlock bytetest_9a_bf, tmp622, tmp623, bytetest_af_af, tmp624, tmp625;
		BitBlock tmp626, tmp627, tmp628, tmp629, tmp630, bytetest_b4_b8, tmp631;
		BitBlock tmp632, tmp633, tmp634, tmp635, tmp636, tmp637, bytetest_a8_ac;
		BitBlock tmp638, tmp639, bytetest_a8_ae, tmp640, tmp641, tmp642, tmp643;
		BitBlock tmp644, bytetest_b1_be, tmp645, bytetest_97_9f, tmp646, tmp647;
		BitBlock tmp648, bytetest_a7_a7, tmp649, tmp650, tmp651, tmp652, tmp653;
		BitBlock tmp654, tmp655, tmp656, tmp657, tmp658, tmp659, tmp660, tmp661;
		BitBlock tmp662, tmp663, tmp664, tmp665, tmp666, tmp667, tmp668, tmp669;
		BitBlock tmp670, tmp671, tmp672, tmp673, tmp674, bytetest_96_af, tmp675;
		BitBlock tmp676, tmp677, tmp678, bytetest_e3, tmp679, tmp680, tmp681, tmp682;
		BitBlock tmp683, tmp684, tmp685, tmp686, bytetest_84, tmp687, bytetest_80_84;
		BitBlock tmp688, tmp689, tmp690, bytetest_ae_b0, tmp691, tmp692, tmp693;
		BitBlock tmp694, tmp695, bytetest_87, bytetest_a4_af, tmp696, tmp697, tmp698;
		BitBlock bytetest_88, tmp699, tmp700, tmp701, tmp702, tmp703, tmp704;
		BitBlock bytetest_e4, tmp705, tmp706, tmp707, tmp708, tmp709, bytetest_e9;
		BitBlock tmp710, bytetest_8d_bf, tmp711, tmp712, tmp713, tmp714, tmp715;
		BitBlock bytetest_ea, bytetest_92, tmp716, tmp717, tmp718, tmp719, tmp720;
		BitBlock bytetest_93, bytetest_87_8f, tmp721, tmp722, tmp723, bytetest_98;
		BitBlock tmp724, bytetest_ac_bf, tmp725, tmp726, tmp727, tmp728;
		BitBlock bytetest_98_9e, tmp729, tmp730, tmp731, tmp732, tmp733, tmp734;
		BitBlock bytetest_9e, tmp735, tmp736, tmp737, tmp738, tmp739, bytetest_80_b7;
		BitBlock tmp740, tmp741, tmp742, bytetest_ab_bf, tmp743, tmp744, tmp745;
		BitBlock tmp746, tmp747, tmp748, tmp749, tmp750, tmp751, tmp752;
		BitBlock bytetest_85_8d, tmp753, tmp754, tmp755, tmp756, tmp757, tmp758;
		BitBlock bytetest_94_9e, tmp759, tmp760, tmp761, tmp762, tmp763, tmp764;
		BitBlock tmp765, bytetest_9a_9d, tmp766, tmp767, tmp768, tmp769, tmp770;
		BitBlock tmp771, tmp772, tmp773, tmp774, tmp775, tmp776, tmp777, tmp778;
		BitBlock bytetest_83_9a, tmp779, tmp780, tmp781, tmp782, tmp783, tmp784;
		BitBlock tmp785, tmp786, bytetest_87_88, tmp787, tmp788, bytetest_8f_90;
		BitBlock tmp789, tmp790, tmp791, bytetest_ad_ae, tmp792, tmp793, tmp794;
		BitBlock tmp795, bytetest_af_bf, tmp796, tmp797, tmp798, tmp799, tmp800;
		BitBlock tmp801, bytetest_ed, tmp802, tmp803, tmp804, tmp805, tmp806, tmp807;
		BitBlock tmp808, bytetest_87_8a, tmp809, tmp810, tmp811, tmp812, bytetest_ef;
		BitBlock tmp813, tmp814, tmp815, tmp816, tmp817, tmp818, tmp819, tmp820;
		BitBlock tmp821, tmp822, bytetest_87_92, tmp823, tmp824, tmp825;
		BitBlock bytetest_98_9c, tmp826, tmp827, tmp828, tmp829, bytetest_82_82;
		BitBlock tmp830, tmp831, tmp832, tmp833, tmp834, bytetest_82_92, tmp835;
		BitBlock tmp836, tmp837, tmp838, tmp839, tmp840, bytetest_90_91, tmp841;
		BitBlock tmp842, tmp843, tmp844, tmp845, bytetest_88_af, tmp846, tmp847;
		BitBlock tmp848, tmp849, tmp850, tmp851, tmp852, bytetest_a7_af, tmp853;
		BitBlock bytetest_93_93, tmp854, tmp855, tmp856, tmp857, tmp858, tmp859;
		BitBlock tmp860, tmp861, tmp862, tmp863, tmp864, tmp865, tmp866, tmp867;
		BitBlock tmp868, tmp869, tmp870, tmp871, tmp872, bytetest_88_89, tmp873;
		BitBlock tmp874, bytetest_98_99, tmp875, tmp876, tmp877, tmp878, tmp879;
		BitBlock tmp880, bytetest_af_b8, tmp881, tmp882, tmp883, bytetest_f0;
		BitBlock bytetest_80, bytetest_8c_8c, tmp884, tmp885, tmp886, tmp887, tmp888;
		BitBlock tmp889, tmp890, tmp891, bytetest_bb_bb, tmp892, bytetest_be_be;
		BitBlock tmp893, tmp894, tmp895, tmp896, tmp897, tmp898, bytetest_9e_bf;
		BitBlock tmp899, tmp900, tmp901, tmp902, tmp903, tmp904, tmp905, tmp906;
		BitBlock bytetest_b4_b6, tmp907, bytetest_8b_8f, tmp908, tmp909, tmp910;
		BitBlock tmp911, tmp912, tmp913, tmp914, tmp915, tmp916, tmp917, tmp918;
		BitBlock tmp919, tmp920, tmp921, tmp922, tmp923, tmp924, tmp925;
		BitBlock bytetest_91_bf, tmp926, tmp927, tmp928, tmp929, tmp930, tmp931;
		BitBlock tmp932, tmp933, bytetest_8b_bf, tmp934, tmp935, tmp936, tmp937;
		BitBlock tmp938, tmp939, bytetest_84_87, tmp940, tmp941, tmp942, tmp943;
		BitBlock bytetest_96_bf, tmp944, tmp945, tmp946, tmp947, bytetest_93_9f;
		BitBlock tmp948, tmp949, tmp950, tmp951, bytetest_aa_bf, tmp952, tmp953;
		BitBlock tmp954, tmp955, tmp956, tmp957, bytetest_b6_b6, tmp958;
		BitBlock bytetest_b9_bb, tmp959, tmp960, bytetest_96_96, tmp961, tmp962;
		BitBlock tmp963, bytetest_a2_a3, tmp964, tmp965, tmp966, tmp967, tmp968;
		BitBlock bytetest_9c_9e, tmp969, tmp970, tmp971, tmp972, bytetest_ba_be;
		BitBlock tmp973, tmp974, tmp975, tmp976, bytetest_b8_bd, tmp977, tmp978;
		BitBlock tmp979, tmp980, tmp981, tmp982, tmp983, tmp984, tmp985, tmp986;
		BitBlock bytetest_87_8b, tmp987, bytetest_94_94, tmp988, tmp989;
		BitBlock bytetest_b4_b7, tmp990, tmp991, tmp992, tmp993, tmp994;
		BitBlock bytetest_99_9f, tmp995, bytetest_aa_ab, tmp996, tmp997, tmp998;
		BitBlock tmp999, tmp1000, tmp1001, tmp1002, tmp1003, tmp1004, tmp1005;
		BitBlock bytetest_b3_b7, tmp1006, tmp1007, tmp1008, tmp1009, tmp1010, tmp1011;
		BitBlock tmp1012, bytetest_b2_b8, tmp1013, tmp1014, tmp1015, tmp1016, tmp1017;
		BitBlock bytetest_89_bf, tmp1018, tmp1019, tmp1020, tmp1021, tmp1022, tmp1023;
		BitBlock tmp1024, tmp1025, tmp1026, tmp1027, tmp1028, tmp1029, bytetest_8e_91;
		BitBlock tmp1030, tmp1031, tmp1032, tmp1033, tmp1034, bytetest_b0_bf, tmp1035;
		BitBlock bytetest_82_8f, tmp1036, tmp1037, tmp1038, bytetest_a9_af, tmp1039;
		BitBlock tmp1040, tmp1041, tmp1042, tmp1043, tmp1044, bytetest_85, tmp1045;
		BitBlock bytetest_84_bf, tmp1046, tmp1047, tmp1048, bytetest_89_8f, tmp1049;
		BitBlock tmp1050, tmp1051, tmp1052, tmp1053, bytetest_88_99, tmp1054, tmp1055;
		BitBlock tmp1056, tmp1057, tmp1058, tmp1059, tmp1060, tmp1061, tmp1062;
		BitBlock tmp1063, tmp1064, tmp1065, bytetest_8a_bf, tmp1066, tmp1067, tmp1068;
		BitBlock tmp1069, tmp1070, tmp1071, tmp1072, tmp1073, tmp1074, tmp1075;
		BitBlock tmp1076, tmp1077, tmp1078, bytetest_a3_af, tmp1079, tmp1080, tmp1081;
		BitBlock tmp1082, bytetest_92_bf, tmp1083, tmp1084, tmp1085, tmp1086, tmp1087;
		BitBlock bytetest_96, tmp1088, tmp1089, tmp1090, tmp1091, tmp1092, tmp1093;
		BitBlock tmp1094, tmp1095, tmp1096, tmp1097, tmp1098, tmp1099, tmp1100;
		BitBlock tmp1101, tmp1102, tmp1103, tmp1104, tmp1105, tmp1106, tmp1107;
		BitBlock tmp1108, tmp1109, bytetest_a9_bb, tmp1110, tmp1111, tmp1112;
		BitBlock bytetest_b9_bf, tmp1113, tmp1114, tmp1115, tmp1116, bytetest_85_8f;
		BitBlock tmp1117, tmp1118, tmp1119, tmp1120, bytetest_80_8e, tmp1121, tmp1122;
		BitBlock tmp1123, tmp1124, tmp1125, bytetest_97_9a, tmp1126, tmp1127, tmp1128;
		BitBlock tmp1129, tmp1130, tmp1131, tmp1132, tmp1133, tmp1134, tmp1135;
		BitBlock tmp1136, tmp1137, tmp1138, tmp1139, tmp1140, tmp1141, tmp1142;
		BitBlock tmp1143, bytetest_81_bf, tmp1144, tmp1145, tmp1146, tmp1147, tmp1148;
		BitBlock tmp1149, tmp1150, bytetest_82_bf, tmp1151, tmp1152, tmp1153, tmp1154;
		BitBlock tmp1155, tmp1156, tmp1157, tmp1158, tmp1159, tmp1160, bytetest_a7_a8;
		BitBlock tmp1161, tmp1162, tmp1163, tmp1164, tmp1165, tmp1166, bytetest_8a_8b;
		BitBlock tmp1167, tmp1168, tmp1169, tmp1170, bytetest_86_bf, tmp1171, tmp1172;
		BitBlock tmp1173, tmp1174, tmp1175, tmp1176, tmp1177, tmp1178, tmp1179;
		BitBlock tmp1180, tmp1181, tmp1182, tmp1183, tmp1184, tmp1185, tmp1186;
		BitBlock tmp1187, tmp1188, bytetest_a0_a1, tmp1189, tmp1190, bytetest_a3_a4;
		BitBlock tmp1191, tmp1192, tmp1193, tmp1194, tmp1195, tmp1196, tmp1197;
		BitBlock tmp1198, bytetest_94, tmp1199, tmp1200, tmp1201, tmp1202, tmp1203;
		BitBlock tmp1204, tmp1205, tmp1206, bytetest_95, tmp1207, tmp1208, tmp1209;
		BitBlock tmp1210, tmp1211, bytetest_a6_a7, tmp1212, tmp1213, tmp1214;
		BitBlock bytetest_8c_8d, tmp1215, tmp1216, tmp1217, tmp1218, tmp1219, tmp1220;
		BitBlock tmp1221, tmp1222, tmp1223, tmp1224, tmp1225, tmp1226, tmp1227;
		BitBlock tmp1228, tmp1229, tmp1230, bytetest_a3_a3, tmp1231, tmp1232;
		BitBlock bytetest_a5_a6, tmp1233, bytetest_a8_a8, tmp1234, bytetest_b3_b3;
		BitBlock tmp1235, tmp1236, tmp1237, tmp1238, tmp1239, tmp1240, tmp1241;
		BitBlock tmp1242, tmp1243, tmp1244, tmp1245, tmp1246, tmp1247, tmp1248;
		BitBlock tmp1249, bytetest_95_96, tmp1250, tmp1251, tmp1252, tmp1253, tmp1254;
		BitBlock tmp1255, tmp1256, tmp1257, bytetest_ab_ab, tmp1258, tmp1259, tmp1260;
		BitBlock tmp1261, tmp1262, tmp1263, tmp1264, tmp1265, tmp1266, tmp1267;
		BitBlock bytetest_9c_a0, tmp1268, tmp1269, bytetest_aa_aa, tmp1270;
		BitBlock bytetest_80_af, tmp1271, tmp1272, tmp1273, tmp1274, tmp1275, tmp1276;
		BitBlock tmp1277, tmp1278, tmp1279, tmp1280, tmp1281, tmp1282, tmp1283;
		BitBlock tmp1284, tmp1285, tmp1286, tmp1287, tmp1288, bytetest_af_b0, tmp1289;
		BitBlock tmp1290, tmp1291, tmp1292, tmp1293, tmp1294, tmp1295, tmp1296;
		BitBlock tmp1297, tmp1298, tmp1299, tmp1300, tmp1301, tmp1302, tmp1303;
		BitBlock tmp1304, bytetest_80_a5, tmp1305, tmp1306, tmp1307, tmp1308, tmp1309;
		BitBlock tmp1310, tmp1311, bytetest_83_8f, tmp1312, tmp1313, tmp1314, tmp1315;
		BitBlock tmp1316, tmp1317, tmp1318, tmp1319, tmp1320, tmp1321, tmp1322;
		BitBlock tmp1323, bytetest_a1_af, tmp1324, tmp1325, tmp1326, tmp1327, tmp1328;
		BitBlock tmp1329, tmp1330, tmp1331, tmp1332, tmp1333, tmp1334, tmp1335;
		BitBlock tmp1336, tmp1337, tmp1338, tmp1339, tmp1340, tmp1341, tmp1342;
		BitBlock tmp1343, tmp1344, tmp1345, tmp1346, tmp1347, tmp1348, tmp1349;
		BitBlock tmp1350, tmp1351, bytetest_84_8f, tmp1352, tmp1353, tmp1354;
		BitBlock bytetest_97, tmp1355, bytetest_80_ba, tmp1356, tmp1357, tmp1358;
		BitBlock tmp1359, tmp1360, tmp1361, bytetest_a8_bf, tmp1362, tmp1363, tmp1364;
		BitBlock bytetest_99, tmp1365, bytetest_81_84, tmp1366, tmp1367, tmp1368;
		BitBlock bytetest_90_bf, tmp1369, tmp1370, tmp1371, tmp1372, tmp1373, tmp1374;
		BitBlock tmp1375, tmp1376, tmp1377, tmp1378, tmp1379, tmp1380, tmp1381;
		BitBlock bytetest_97_bf, tmp1382, tmp1383, tmp1384, tmp1385, tmp1386, tmp1387;
		BitBlock tmp1388, tmp1389, tmp1390, tmp1391, tmp1392, tmp1393, tmp1394;
		BitBlock tmp1395, tmp1396, bytetest_ac_ae, tmp1397, tmp1398, tmp1399, tmp1400;
		BitBlock tmp1401, bytetest_a1_bf, tmp1402, tmp1403, tmp1404, tmp1405, tmp1406;
		BitBlock tmp1407, tmp1408, tmp1409, tmp1410, bytetest_f3, tmp1411, tmp1412;
		BitBlock tmp1413, tmp1414, tmp1415, tmp1416, tmp1417, tmp1418, tmp1419;
		BitBlock tmp1420, tmp1421, tmp1422, tmp1423, tmp1424, bytetest_f1_f2, tmp1425;
		BitBlock tmp1426, tmp1427, tmp1428, tmp1429, bytetest_a9_bf, tmp1430, tmp1431;
		BitBlock tmp1432, tmp1433, tmp1434, tmp1435, tmp1436, tmp1437, tmp1438;
		BitBlock tmp1439, bytetest_82_9f, tmp1440, bytetest_82_83, tmp1441, tmp1442;
		BitBlock tmp1443, tmp1444, tmp1445, tmp1446, tmp1447, tmp1448, tmp1449;
		BitBlock bytetest_88_bf, tmp1450, tmp1451, tmp1452, tmp1453, tmp1454, tmp1455;
		BitBlock tmp1456, tmp1457, tmp1458, tmp1459, tmp1460, tmp1461, tmp1462;




        struct_Cn.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp1, tmp2);
        tmp4 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp6 = simd_and(tmp4, tmp5);
        bytetest_cd = simd_and(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp11 = simd_andc(tmp10, basis_bits.bit_6);
        bytetest_b8_b9 = simd_and(tmp9, tmp11);
        tmp12 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp12, carryQ.get_carry_in(0), tmp13));
        tmp14 = simd_and(tmp13, bytetest_cd);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp14, carryQ.get_carry_in(1), tmp15));
        tmp16 = simd_and(tmp15, bytetest_b8_b9);
        struct_Cn.cc = simd_or(tmp16, struct_Cn.cc);
        tmp17 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp18 = simd_and(tmp4, tmp17);
        bytetest_ce = simd_and(tmp3, tmp18);
        tmp19 = simd_andc(tmp7, tmp2);
        tmp20 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        bytetest_80_83 = simd_andc(tmp19, tmp20);
        tmp21 = simd_and(tmp13, bytetest_ce);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp21, carryQ.get_carry_in(2), tmp22));
        tmp23 = simd_and(tmp22, bytetest_80_83);
        bytetest_cd = simd_and(tmp3, tmp6);
        tmp24 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp25 = simd_and(tmp4, tmp24);
        bytetest_bf_bf = simd_and(tmp9, tmp25);
        tmp26 = simd_and(tmp15, bytetest_bf_bf);
        tmp27 = simd_or(tmp26, tmp23);
        struct_Cn.cc = simd_or(tmp27, struct_Cn.cc);
        bytetest_ce = simd_and(tmp3, tmp18);
        tmp28 = simd_and(tmp10, tmp24);
        bytetest_8b_8b = simd_and(tmp19, tmp28);
        tmp29 = simd_and(tmp22, bytetest_8b_8b);
        struct_Cn.cc = simd_or(tmp29, struct_Cn.cc);
        bytetest_ce = simd_and(tmp3, tmp18);
        bytetest_8d_8d = simd_and(tmp19, tmp6);
        tmp30 = simd_and(tmp22, bytetest_8d_8d);
        struct_Cn.cc = simd_or(tmp30, struct_Cn.cc);
        bytetest_ce = simd_and(tmp3, tmp18);
        tmp31 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp32 = simd_and(tmp7, tmp31);
        tmp33 = simd_andc(tmp17, tmp20);
        bytetest_a2_a2 = simd_and(tmp32, tmp33);
        tmp34 = simd_and(tmp22, bytetest_a2_a2);
        struct_Cn.cc = simd_or(tmp34, struct_Cn.cc);
        tmp35 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp36 = simd_and(tmp1, tmp35);
        tmp37 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp38 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp39 = simd_andc(tmp37, tmp38);
        bytetest_d4 = simd_and(tmp36, tmp39);
        tmp40 = simd_and(tmp7, basis_bits.bit_2);
        tmp41 = simd_or(tmp20, tmp38);
        tmp42 = simd_not(tmp41);
        tmp43 = simd_or(simd_and(basis_bits.bit_3, tmp42), simd_andc(basis_bits.bit_4, basis_bits.bit_3));
        bytetest_a8_b0 = simd_and(tmp40, tmp43);
        tmp44 = simd_and(tmp13, bytetest_d4);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp44, carryQ.get_carry_in(3), tmp45));
        tmp46 = simd_and(tmp45, bytetest_a8_b0);
        struct_Cn.cc = simd_or(tmp46, struct_Cn.cc);
        tmp47 = simd_and(tmp37, tmp5);
        bytetest_d5 = simd_and(tmp36, tmp47);
        tmp48 = simd_and(tmp7, tmp35);
        tmp49 = simd_or(basis_bits.bit_5, tmp38);
        tmp50 = simd_not(tmp49);
        tmp51 = simd_and(basis_bits.bit_5, tmp24);
        tmp52 = simd_or(simd_and(basis_bits.bit_4, tmp50), simd_andc(tmp51, basis_bits.bit_4));
        bytetest_97_98 = simd_and(tmp48, tmp52);
        tmp53 = simd_and(tmp13, bytetest_d5);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp53, carryQ.get_carry_in(4), tmp54));
        tmp55 = simd_and(tmp54, bytetest_97_98);
        struct_Cn.cc = simd_or(tmp55, struct_Cn.cc);
        bytetest_d5 = simd_and(tmp36, tmp47);
        bytetest_a0_a0 = simd_andc(tmp32, tmp41);
        tmp56 = simd_and(tmp54, bytetest_a0_a0);
        struct_Cn.cc = simd_or(tmp56, struct_Cn.cc);
        tmp57 = simd_and(tmp37, tmp17);
        bytetest_d6 = simd_and(tmp36, tmp57);
        tmp58 = simd_andc(tmp10, tmp38);
        bytetest_88_88 = simd_and(tmp19, tmp58);
        tmp59 = simd_and(tmp13, bytetest_d6);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp59, carryQ.get_carry_in(5), tmp60));
        tmp61 = simd_and(tmp60, bytetest_88_88);
        struct_Cn.cc = simd_or(tmp61, struct_Cn.cc);
        bytetest_d6 = simd_and(tmp36, tmp57);
        tmp62 = simd_and(tmp19, basis_bits.bit_4);
        tmp63 = simd_not(tmp24);
        tmp64 = simd_or(simd_and(basis_bits.bit_5, tmp63), simd_andc(tmp24, basis_bits.bit_5));
        bytetest_8b_8e = simd_and(tmp62, tmp64);
        tmp65 = simd_and(tmp60, bytetest_8b_8e);
        struct_Cn.cc = simd_or(tmp65, struct_Cn.cc);
        bytetest_d6 = simd_and(tmp36, tmp57);
        bytetest_90_90 = simd_andc(tmp48, tmp41);
        tmp66 = simd_and(tmp60, bytetest_90_90);
        struct_Cn.cc = simd_or(tmp66, struct_Cn.cc);
        tmp67 = simd_and(tmp37, tmp24);
        bytetest_d7 = simd_and(tmp36, tmp67);
        bytetest_88_8f = simd_and(tmp19, basis_bits.bit_4);
        tmp68 = simd_and(tmp13, bytetest_d7);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp68, carryQ.get_carry_in(6), tmp69));
        tmp70 = simd_and(tmp69, bytetest_88_8f);
        struct_Cn.cc = simd_or(tmp70, struct_Cn.cc);
        bytetest_d7 = simd_and(tmp36, tmp67);
        tmp71 = simd_and(tmp32, basis_bits.bit_4);
        tmp72 = simd_or(basis_bits.bit_5, tmp24);
        bytetest_ab_af = simd_and(tmp71, tmp72);
        tmp73 = simd_and(tmp69, bytetest_ab_af);
        struct_Cn.cc = simd_or(tmp73, struct_Cn.cc);
        bytetest_d7 = simd_and(tmp36, tmp67);
        tmp74 = simd_and(basis_bits.bit_5, tmp38);
        tmp75 = simd_or(basis_bits.bit_4, tmp74);
        bytetest_b5_bf = simd_and(tmp9, tmp75);
        tmp76 = simd_and(tmp69, bytetest_b5_bf);
        struct_Cn.cc = simd_or(tmp76, struct_Cn.cc);
        bytetest_d8 = simd_and(tmp36, tmp58);
        bytetest_85_85 = simd_and(tmp19, tmp47);
        tmp77 = simd_and(tmp13, bytetest_d8);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp77, carryQ.get_carry_in(7), tmp78));
        tmp79 = simd_and(tmp78, bytetest_85_85);
        struct_Cn.cc = simd_or(tmp79, struct_Cn.cc);
        bytetest_d8 = simd_and(tmp36, tmp58);
        bytetest_9d_9d = simd_and(tmp48, tmp6);
        tmp80 = simd_and(tmp78, bytetest_9d_9d);
        struct_Cn.cc = simd_or(tmp80, struct_Cn.cc);
        tmp81 = simd_andc(tmp4, tmp38);
        bytetest_dc = simd_and(tmp36, tmp81);
        bytetest_8e_8e = simd_and(tmp19, tmp18);
        tmp82 = simd_and(tmp13, bytetest_dc);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(tmp82, carryQ.get_carry_in(8), tmp83));
        tmp84 = simd_and(tmp83, bytetest_8e_8e);
        struct_Cn.cc = simd_or(tmp84, struct_Cn.cc);
        bytetest_dd = simd_and(tmp36, tmp6);
        tmp85 = simd_not(tmp38);
        tmp86 = simd_or(simd_and(basis_bits.bit_5, tmp85), simd_andc(tmp24, basis_bits.bit_5));
        bytetest_8b_8c = simd_and(bytetest_88_8f, tmp86);
        tmp87 = simd_and(tmp13, bytetest_dd);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(tmp87, carryQ.get_carry_in(9), tmp88));
        tmp89 = simd_and(tmp88, bytetest_8b_8c);
        struct_Cn.cc = simd_or(tmp89, struct_Cn.cc);
        bytetest_de = simd_and(tmp36, tmp18);
        tmp90 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
        tmp91 = simd_or(basis_bits.bit_4, tmp90);
        bytetest_b2_bf = simd_and(tmp9, tmp91);
        tmp92 = simd_and(tmp13, bytetest_de);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(tmp92, carryQ.get_carry_in(10), tmp93));
        tmp94 = simd_and(tmp93, bytetest_b2_bf);
        struct_Cn.cc = simd_or(tmp94, struct_Cn.cc);
        bytetest_df = simd_and(tmp36, tmp25);
        tmp95 = simd_and(tmp9, basis_bits.bit_4);
        bytetest_bb_bf = simd_and(tmp95, tmp72);
        tmp96 = simd_and(tmp13, bytetest_df);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(tmp96, carryQ.get_carry_in(11), tmp97));
        tmp98 = simd_and(tmp97, bytetest_bb_bf);
        struct_Cn.cc = simd_or(tmp98, struct_Cn.cc);
        tmp99 = simd_and(tmp1, tmp31);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a0 = simd_andc(tmp32, tmp41);
        tmp100 = simd_and(tmp4, basis_bits.bit_6);
        bytetest_ae_af = simd_and(tmp32, tmp100);
        tmp101 = simd_and(tmp13, bytetest_e0);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(tmp101, carryQ.get_carry_in(12), tmp102));
        tmp103 = simd_and(tmp102, bytetest_a0);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(tmp103, carryQ.get_carry_in(13), tmp104));
        tmp105 = simd_and(tmp104, bytetest_ae_af);
        struct_Cn.cc = simd_or(tmp105, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a0 = simd_andc(tmp32, tmp41);
        bytetest_bf_bf = simd_and(tmp9, tmp25);
        tmp106 = simd_and(tmp104, bytetest_bf_bf);
        struct_Cn.cc = simd_or(tmp106, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        tmp107 = simd_andc(tmp5, tmp20);
        bytetest_a1 = simd_and(tmp32, tmp107);
        tmp108 = simd_andc(tmp4, basis_bits.bit_6);
        bytetest_9c_9d = simd_and(tmp48, tmp108);
        tmp109 = simd_and(tmp102, bytetest_a1);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(tmp109, carryQ.get_carry_in(14), tmp110));
        tmp111 = simd_and(tmp110, bytetest_9c_9d);
        struct_Cn.cc = simd_or(tmp111, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a2 = simd_and(tmp32, tmp33);
        bytetest_80_9f = simd_andc(tmp7, basis_bits.bit_2);
        tmp112 = simd_and(tmp102, bytetest_a2);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(tmp112, carryQ.get_carry_in(15), tmp113));
        tmp114 = simd_and(tmp113, bytetest_80_9f);
        bytetest_a1 = simd_and(tmp32, tmp107);
        tmp115 = simd_and(basis_bits.bit_3, tmp25);
        tmp116 = simd_or(basis_bits.bit_2, tmp115);
        bytetest_9f_bf = simd_and(tmp7, tmp116);
        tmp117 = simd_and(tmp110, bytetest_9f_bf);
        tmp118 = simd_or(tmp117, tmp114);
        struct_Cn.cc = simd_or(tmp118, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a2 = simd_and(tmp32, tmp33);
        bytetest_a1_a1 = simd_and(tmp32, tmp107);
        tmp119 = simd_and(tmp113, bytetest_a1_a1);
        struct_Cn.cc = simd_or(tmp119, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        tmp120 = simd_andc(tmp24, tmp20);
        bytetest_a3 = simd_and(tmp32, tmp120);
        tmp121 = simd_or(basis_bits.bit_3, tmp20);
        tmp122 = simd_and(basis_bits.bit_2, tmp121);
        bytetest_80_a3 = simd_andc(tmp7, tmp122);
        tmp123 = simd_and(tmp102, bytetest_a3);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(tmp123, carryQ.get_carry_in(16), tmp124));
        tmp125 = simd_and(tmp124, bytetest_80_a3);
        bytetest_a2 = simd_and(tmp32, tmp33);
        tmp126 = simd_and(tmp4, tmp38);
        tmp127 = simd_or(basis_bits.bit_3, tmp126);
        bytetest_ad_bf = simd_and(tmp40, tmp127);
        tmp128 = simd_and(tmp113, bytetest_ad_bf);
        tmp129 = simd_or(tmp128, tmp125);
        struct_Cn.cc = simd_or(tmp129, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a3 = simd_and(tmp32, tmp120);
        bytetest_bf_bf = simd_and(tmp9, tmp25);
        tmp130 = simd_and(tmp124, bytetest_bf_bf);
        struct_Cn.cc = simd_or(tmp130, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a5 = simd_and(tmp32, tmp47);
        bytetest_b8_b8 = simd_and(tmp9, tmp58);
        tmp131 = simd_and(tmp102, bytetest_a5);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(tmp131, carryQ.get_carry_in(17), tmp132));
        tmp133 = simd_and(tmp132, bytetest_b8_b8);
        struct_Cn.cc = simd_or(tmp133, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a6 = simd_and(tmp32, tmp57);
        bytetest_80_80 = simd_andc(tmp19, tmp41);
        tmp134 = simd_and(tmp102, bytetest_a6);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(tmp134, carryQ.get_carry_in(18), tmp135));
        tmp136 = simd_and(tmp135, bytetest_80_80);
        struct_Cn.cc = simd_or(tmp136, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a6 = simd_and(tmp32, tmp57);
        bytetest_84_84 = simd_and(tmp19, tmp39);
        tmp137 = simd_and(tmp135, bytetest_84_84);
        struct_Cn.cc = simd_or(tmp137, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a6 = simd_and(tmp32, tmp57);
        tmp138 = simd_and(tmp19, tmp4);
        tmp139 = simd_not(basis_bits.bit_7);
        tmp140 = simd_or(simd_and(basis_bits.bit_6, tmp139), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
        bytetest_8d_8e = simd_and(tmp138, tmp140);
        tmp141 = simd_and(tmp135, bytetest_8d_8e);
        struct_Cn.cc = simd_or(tmp141, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a6 = simd_and(tmp32, tmp57);
        tmp142 = simd_andc(tmp48, tmp20);
        bytetest_91_92 = simd_and(tmp142, tmp140);
        tmp143 = simd_and(tmp135, bytetest_91_92);
        struct_Cn.cc = simd_or(tmp143, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a6 = simd_and(tmp32, tmp57);
        tmp144 = simd_and(tmp10, tmp5);
        bytetest_a9_a9 = simd_and(tmp32, tmp144);
        tmp145 = simd_and(tmp135, bytetest_a9_a9);
        struct_Cn.cc = simd_or(tmp145, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a6 = simd_and(tmp32, tmp57);
        bytetest_b1_b1 = simd_and(tmp9, tmp107);
        tmp146 = simd_and(tmp135, bytetest_b1_b1);
        struct_Cn.cc = simd_or(tmp146, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a6 = simd_and(tmp32, tmp57);
        tmp147 = simd_andc(tmp9, basis_bits.bit_4);
        tmp148 = simd_not(basis_bits.bit_6);
        tmp149 = simd_or(simd_and(basis_bits.bit_5, tmp148), simd_andc(tmp24, basis_bits.bit_5));
        bytetest_b3_b5 = simd_and(tmp147, tmp149);
        tmp150 = simd_and(tmp135, bytetest_b3_b5);
        struct_Cn.cc = simd_or(tmp150, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a6 = simd_and(tmp32, tmp57);
        tmp151 = simd_and(tmp10, basis_bits.bit_6);
        bytetest_ba_bb = simd_and(tmp9, tmp151);
        tmp152 = simd_and(tmp135, bytetest_ba_bb);
        struct_Cn.cc = simd_or(tmp152, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a7 = simd_and(tmp32, tmp67);
        tmp153 = simd_and(tmp19, tmp37);
        bytetest_85_86 = simd_and(tmp153, tmp140);
        tmp154 = simd_and(tmp102, bytetest_a7);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(tmp154, carryQ.get_carry_in(19), tmp155));
        tmp156 = simd_and(tmp155, bytetest_85_86);
        struct_Cn.cc = simd_or(tmp156, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a7 = simd_and(tmp32, tmp67);
        tmp157 = simd_and(tmp19, tmp10);
        bytetest_89_8a = simd_and(tmp157, tmp140);
        tmp158 = simd_and(tmp155, bytetest_89_8a);
        struct_Cn.cc = simd_or(tmp158, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a7 = simd_and(tmp32, tmp67);
        tmp159 = simd_or(basis_bits.bit_4, tmp51);
        tmp160 = simd_not(tmp159);
        tmp161 = simd_or(simd_and(basis_bits.bit_3, tmp160), simd_andc(tmp25, basis_bits.bit_3));
        bytetest_8f_96 = simd_and(bytetest_80_9f, tmp161);
        tmp162 = simd_and(tmp155, bytetest_8f_96);
        struct_Cn.cc = simd_or(tmp162, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a7 = simd_and(tmp32, tmp67);
        bytetest_98_9b = simd_and(tmp48, tmp10);
        tmp163 = simd_and(tmp155, bytetest_98_9b);
        struct_Cn.cc = simd_or(tmp163, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a7 = simd_and(tmp32, tmp67);
        bytetest_9e_9e = simd_and(tmp48, tmp18);
        tmp164 = simd_and(tmp155, bytetest_9e_9e);
        struct_Cn.cc = simd_or(tmp164, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a7 = simd_and(tmp32, tmp67);
        tmp165 = simd_andc(tmp37, basis_bits.bit_6);
        bytetest_a4_a5 = simd_and(tmp32, tmp165);
        tmp166 = simd_and(tmp155, bytetest_a4_a5);
        struct_Cn.cc = simd_or(tmp166, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a8 = simd_and(tmp32, tmp58);
        bytetest_80_80 = simd_andc(tmp19, tmp41);
        tmp167 = simd_and(tmp102, bytetest_a8);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(tmp167, carryQ.get_carry_in(20), tmp168));
        tmp169 = simd_and(tmp168, bytetest_80_80);
        bytetest_a7 = simd_and(tmp32, tmp67);
        bytetest_bc_bf = simd_and(tmp9, tmp4);
        tmp170 = simd_and(tmp155, bytetest_bc_bf);
        tmp171 = simd_or(tmp170, tmp169);
        struct_Cn.cc = simd_or(tmp171, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a8 = simd_and(tmp32, tmp58);
        bytetest_84_84 = simd_and(tmp19, tmp39);
        tmp172 = simd_and(tmp168, bytetest_84_84);
        struct_Cn.cc = simd_or(tmp172, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a8 = simd_and(tmp32, tmp58);
        bytetest_8b_8e = simd_and(bytetest_88_8f, tmp64);
        tmp173 = simd_and(tmp168, bytetest_8b_8e);
        struct_Cn.cc = simd_or(tmp173, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a8 = simd_and(tmp32, tmp58);
        bytetest_91_92 = simd_and(tmp142, tmp140);
        tmp174 = simd_and(tmp168, bytetest_91_92);
        struct_Cn.cc = simd_or(tmp174, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a8 = simd_and(tmp32, tmp58);
        bytetest_a9_a9 = simd_and(tmp32, tmp144);
        tmp175 = simd_and(tmp168, bytetest_a9_a9);
        struct_Cn.cc = simd_or(tmp175, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a8 = simd_and(tmp32, tmp58);
        bytetest_b1_b1 = simd_and(tmp9, tmp107);
        tmp176 = simd_and(tmp168, bytetest_b1_b1);
        struct_Cn.cc = simd_or(tmp176, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a8 = simd_and(tmp32, tmp58);
        bytetest_b4_b4 = simd_and(tmp9, tmp39);
        tmp177 = simd_and(tmp168, bytetest_b4_b4);
        struct_Cn.cc = simd_or(tmp177, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a8 = simd_and(tmp32, tmp58);
        bytetest_b7_b7 = simd_and(tmp9, tmp67);
        tmp178 = simd_and(tmp168, bytetest_b7_b7);
        struct_Cn.cc = simd_or(tmp178, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a8 = simd_and(tmp32, tmp58);
        bytetest_ba_bb = simd_and(tmp9, tmp151);
        tmp179 = simd_and(tmp168, bytetest_ba_bb);
        struct_Cn.cc = simd_or(tmp179, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a8 = simd_and(tmp32, tmp58);
        bytetest_bd_bd = simd_and(tmp9, tmp6);
        tmp180 = simd_and(tmp168, bytetest_bd_bd);
        struct_Cn.cc = simd_or(tmp180, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a9 = simd_and(tmp32, tmp144);
        tmp181 = simd_andc(tmp19, basis_bits.bit_4);
        bytetest_83_86 = simd_and(tmp181, tmp64);
        tmp182 = simd_and(tmp102, bytetest_a9);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(tmp182, carryQ.get_carry_in(21), tmp183));
        tmp184 = simd_and(tmp183, bytetest_83_86);
        struct_Cn.cc = simd_or(tmp184, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a9 = simd_and(tmp32, tmp144);
        bytetest_89_8a = simd_and(tmp157, tmp140);
        tmp185 = simd_and(tmp183, bytetest_89_8a);
        struct_Cn.cc = simd_or(tmp185, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a9 = simd_and(tmp32, tmp144);
        tmp186 = simd_or(simd_and(basis_bits.bit_3, tmp42), simd_andc(tmp100, basis_bits.bit_3));
        bytetest_8e_90 = simd_and(bytetest_80_9f, tmp186);
        tmp187 = simd_and(tmp183, bytetest_8e_90);
        struct_Cn.cc = simd_or(tmp187, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a9 = simd_and(tmp32, tmp144);
        tmp188 = simd_or(simd_and(basis_bits.bit_4, tmp50), simd_andc(tmp90, basis_bits.bit_4));
        bytetest_92_98 = simd_and(tmp48, tmp188);
        tmp189 = simd_and(tmp183, bytetest_92_98);
        struct_Cn.cc = simd_or(tmp189, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a9 = simd_and(tmp32, tmp144);
        bytetest_9d_9d = simd_and(tmp48, tmp6);
        tmp190 = simd_and(tmp183, bytetest_9d_9d);
        struct_Cn.cc = simd_or(tmp190, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a9 = simd_and(tmp32, tmp144);
        tmp191 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp192 = simd_or(basis_bits.bit_4, tmp191);
        tmp193 = simd_or(basis_bits.bit_3, tmp192);
        tmp194 = simd_not(tmp193);
        tmp195 = simd_or(simd_and(basis_bits.bit_2, tmp194), simd_andc(tmp115, basis_bits.bit_2));
        bytetest_9f_a5 = simd_and(tmp7, tmp195);
        tmp196 = simd_and(tmp183, bytetest_9f_a5);
        struct_Cn.cc = simd_or(tmp196, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        tmp197 = simd_and(tmp10, tmp17);
        bytetest_aa = simd_and(tmp32, tmp197);
        bytetest_80_80 = simd_andc(tmp19, tmp41);
        tmp198 = simd_and(tmp102, bytetest_aa);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(tmp198, carryQ.get_carry_in(22), tmp199));
        tmp200 = simd_and(tmp199, bytetest_80_80);
        bytetest_a9 = simd_and(tmp32, tmp144);
        bytetest_b6_bf = simd_and(tmp9, tmp192);
        tmp201 = simd_and(tmp183, bytetest_b6_bf);
        tmp202 = simd_or(tmp201, tmp200);
        struct_Cn.cc = simd_or(tmp202, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_aa = simd_and(tmp32, tmp197);
        bytetest_84_84 = simd_and(tmp19, tmp39);
        tmp203 = simd_and(tmp199, bytetest_84_84);
        struct_Cn.cc = simd_or(tmp203, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_aa = simd_and(tmp32, tmp197);
        bytetest_8e_8e = simd_and(tmp19, tmp18);
        tmp204 = simd_and(tmp199, bytetest_8e_8e);
        struct_Cn.cc = simd_or(tmp204, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_aa = simd_and(tmp32, tmp197);
        bytetest_92_92 = simd_and(tmp48, tmp33);
        tmp205 = simd_and(tmp199, bytetest_92_92);
        struct_Cn.cc = simd_or(tmp205, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_aa = simd_and(tmp32, tmp197);
        bytetest_a9_a9 = simd_and(tmp32, tmp144);
        tmp206 = simd_and(tmp199, bytetest_a9_a9);
        struct_Cn.cc = simd_or(tmp206, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_aa = simd_and(tmp32, tmp197);
        bytetest_b1_b1 = simd_and(tmp9, tmp107);
        tmp207 = simd_and(tmp199, bytetest_b1_b1);
        struct_Cn.cc = simd_or(tmp207, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_aa = simd_and(tmp32, tmp197);
        bytetest_b4_b4 = simd_and(tmp9, tmp39);
        tmp208 = simd_and(tmp199, bytetest_b4_b4);
        struct_Cn.cc = simd_or(tmp208, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_aa = simd_and(tmp32, tmp197);
        bytetest_ba_bb = simd_and(tmp9, tmp151);
        tmp209 = simd_and(tmp199, bytetest_ba_bb);
        struct_Cn.cc = simd_or(tmp209, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ab = simd_and(tmp32, tmp28);
        bytetest_86_86 = simd_and(tmp19, tmp57);
        tmp210 = simd_and(tmp102, bytetest_ab);
        carryQ.cq[23] = carryout2carry(pablo_blk_Advance(tmp210, carryQ.get_carry_in(23), tmp211));
        tmp212 = simd_and(tmp211, bytetest_86_86);
        struct_Cn.cc = simd_or(tmp212, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ab = simd_and(tmp32, tmp28);
        bytetest_8a_8a = simd_and(tmp19, tmp197);
        tmp213 = simd_and(tmp211, bytetest_8a_8a);
        struct_Cn.cc = simd_or(tmp213, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ab = simd_and(tmp32, tmp28);
        bytetest_8e_8f = simd_and(tmp19, tmp100);
        tmp214 = simd_and(tmp211, bytetest_8e_8f);
        struct_Cn.cc = simd_or(tmp214, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ab = simd_and(tmp32, tmp28);
        tmp215 = simd_or(basis_bits.bit_4, tmp49);
        bytetest_91_9f = simd_and(tmp48, tmp215);
        tmp216 = simd_and(tmp211, bytetest_91_9f);
        struct_Cn.cc = simd_or(tmp216, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ab = simd_and(tmp32, tmp28);
        bytetest_a4_a5 = simd_and(tmp32, tmp165);
        tmp217 = simd_and(tmp211, bytetest_a4_a5);
        struct_Cn.cc = simd_or(tmp217, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ac = simd_and(tmp32, tmp81);
        bytetest_80_80 = simd_andc(tmp19, tmp41);
        tmp218 = simd_and(tmp102, bytetest_ac);
        carryQ.cq[24] = carryout2carry(pablo_blk_Advance(tmp218, carryQ.get_carry_in(24), tmp219));
        tmp220 = simd_and(tmp219, bytetest_80_80);
        bytetest_ab = simd_and(tmp32, tmp28);
        bytetest_b2_bf = simd_and(tmp9, tmp91);
        tmp221 = simd_and(tmp211, bytetest_b2_bf);
        tmp222 = simd_or(tmp221, tmp220);
        struct_Cn.cc = simd_or(tmp222, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ac = simd_and(tmp32, tmp81);
        bytetest_84_84 = simd_and(tmp19, tmp39);
        tmp223 = simd_and(tmp219, bytetest_84_84);
        struct_Cn.cc = simd_or(tmp223, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ac = simd_and(tmp32, tmp81);
        bytetest_8d_8e = simd_and(tmp138, tmp140);
        tmp224 = simd_and(tmp219, bytetest_8d_8e);
        struct_Cn.cc = simd_or(tmp224, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ac = simd_and(tmp32, tmp81);
        bytetest_91_92 = simd_and(tmp142, tmp140);
        tmp225 = simd_and(tmp219, bytetest_91_92);
        struct_Cn.cc = simd_or(tmp225, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ac = simd_and(tmp32, tmp81);
        bytetest_a9_a9 = simd_and(tmp32, tmp144);
        tmp226 = simd_and(tmp219, bytetest_a9_a9);
        struct_Cn.cc = simd_or(tmp226, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ac = simd_and(tmp32, tmp81);
        bytetest_b1_b1 = simd_and(tmp9, tmp107);
        tmp227 = simd_and(tmp219, bytetest_b1_b1);
        struct_Cn.cc = simd_or(tmp227, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ac = simd_and(tmp32, tmp81);
        bytetest_b4_b4 = simd_and(tmp9, tmp39);
        tmp228 = simd_and(tmp219, bytetest_b4_b4);
        struct_Cn.cc = simd_or(tmp228, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ac = simd_and(tmp32, tmp81);
        bytetest_ba_bb = simd_and(tmp9, tmp151);
        tmp229 = simd_and(tmp219, bytetest_ba_bb);
        struct_Cn.cc = simd_or(tmp229, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ad = simd_and(tmp32, tmp6);
        bytetest_85_86 = simd_and(tmp153, tmp140);
        tmp230 = simd_and(tmp102, bytetest_ad);
        carryQ.cq[25] = carryout2carry(pablo_blk_Advance(tmp230, carryQ.get_carry_in(25), tmp231));
        tmp232 = simd_and(tmp231, bytetest_85_86);
        struct_Cn.cc = simd_or(tmp232, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ad = simd_and(tmp32, tmp6);
        bytetest_89_8a = simd_and(tmp157, tmp140);
        tmp233 = simd_and(tmp231, bytetest_89_8a);
        struct_Cn.cc = simd_or(tmp233, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ad = simd_and(tmp32, tmp6);
        tmp234 = simd_not(tmp192);
        tmp235 = simd_or(simd_and(basis_bits.bit_3, tmp234), simd_andc(tmp100, basis_bits.bit_3));
        bytetest_8e_95 = simd_and(bytetest_80_9f, tmp235);
        tmp236 = simd_and(tmp231, bytetest_8e_95);
        struct_Cn.cc = simd_or(tmp236, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ad = simd_and(tmp32, tmp6);
        bytetest_98_9b = simd_and(tmp48, tmp10);
        tmp237 = simd_and(tmp231, bytetest_98_9b);
        struct_Cn.cc = simd_or(tmp237, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ad = simd_and(tmp32, tmp6);
        bytetest_9e_9e = simd_and(tmp48, tmp18);
        tmp238 = simd_and(tmp231, bytetest_9e_9e);
        struct_Cn.cc = simd_or(tmp238, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ad = simd_and(tmp32, tmp6);
        bytetest_a4_a5 = simd_and(tmp32, tmp165);
        tmp239 = simd_and(tmp231, bytetest_a4_a5);
        struct_Cn.cc = simd_or(tmp239, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ae = simd_and(tmp32, tmp18);
        tmp240 = simd_or(tmp20, basis_bits.bit_6);
        bytetest_80_81 = simd_andc(tmp19, tmp240);
        tmp241 = simd_and(tmp102, bytetest_ae);
        carryQ.cq[26] = carryout2carry(pablo_blk_Advance(tmp241, carryQ.get_carry_in(26), tmp242));
        tmp243 = simd_and(tmp242, bytetest_80_81);
        bytetest_ad = simd_and(tmp32, tmp6);
        bytetest_b8_bf = simd_and(tmp9, basis_bits.bit_4);
        tmp244 = simd_and(tmp231, bytetest_b8_bf);
        tmp245 = simd_or(tmp244, tmp243);
        struct_Cn.cc = simd_or(tmp245, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ae = simd_and(tmp32, tmp18);
        bytetest_84_84 = simd_and(tmp19, tmp39);
        tmp246 = simd_and(tmp242, bytetest_84_84);
        struct_Cn.cc = simd_or(tmp246, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ae = simd_and(tmp32, tmp18);
        bytetest_8b_8d = simd_and(bytetest_88_8f, tmp149);
        tmp247 = simd_and(tmp242, bytetest_8b_8d);
        struct_Cn.cc = simd_or(tmp247, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ae = simd_and(tmp32, tmp18);
        bytetest_91_91 = simd_and(tmp48, tmp107);
        tmp248 = simd_and(tmp242, bytetest_91_91);
        struct_Cn.cc = simd_or(tmp248, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ae = simd_and(tmp32, tmp18);
        tmp249 = simd_or(simd_and(basis_bits.bit_4, tmp50), simd_andc(tmp191, basis_bits.bit_4));
        bytetest_96_98 = simd_and(tmp48, tmp249);
        tmp250 = simd_and(tmp242, bytetest_96_98);
        struct_Cn.cc = simd_or(tmp250, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ae = simd_and(tmp32, tmp18);
        bytetest_9b_9b = simd_and(tmp48, tmp28);
        tmp251 = simd_and(tmp242, bytetest_9b_9b);
        struct_Cn.cc = simd_or(tmp251, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ae = simd_and(tmp32, tmp18);
        bytetest_9d_9d = simd_and(tmp48, tmp6);
        tmp252 = simd_and(tmp242, bytetest_9d_9d);
        struct_Cn.cc = simd_or(tmp252, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ae = simd_and(tmp32, tmp18);
        tmp253 = simd_andc(tmp32, tmp20);
        bytetest_a0_a2 = simd_andc(tmp253, tmp24);
        tmp254 = simd_and(tmp242, bytetest_a0_a2);
        struct_Cn.cc = simd_or(tmp254, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ae = simd_and(tmp32, tmp18);
        tmp255 = simd_and(tmp32, tmp37);
        bytetest_a5_a7 = simd_and(tmp255, tmp38);
        tmp256 = simd_and(tmp242, bytetest_a5_a7);
        struct_Cn.cc = simd_or(tmp256, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ae = simd_and(tmp32, tmp18);
        bytetest_ab_ad = simd_and(tmp71, tmp149);
        tmp257 = simd_and(tmp242, bytetest_ab_ad);
        struct_Cn.cc = simd_or(tmp257, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ae = simd_and(tmp32, tmp18);
        tmp258 = simd_or(simd_and(basis_bits.bit_5, tmp148), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        bytetest_ba_bd = simd_and(bytetest_b8_bf, tmp258);
        tmp259 = simd_and(tmp242, bytetest_ba_bd);
        struct_Cn.cc = simd_or(tmp259, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_af = simd_and(tmp32, tmp25);
        bytetest_83_85 = simd_and(tmp181, tmp149);
        tmp260 = simd_and(tmp102, bytetest_af);
        carryQ.cq[27] = carryout2carry(pablo_blk_Advance(tmp260, carryQ.get_carry_in(27), tmp261));
        tmp262 = simd_and(tmp261, bytetest_83_85);
        struct_Cn.cc = simd_or(tmp262, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_af = simd_and(tmp32, tmp25);
        bytetest_89_89 = simd_and(tmp19, tmp144);
        tmp263 = simd_and(tmp261, bytetest_89_89);
        struct_Cn.cc = simd_or(tmp263, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_af = simd_and(tmp32, tmp25);
        bytetest_8e_8f = simd_and(tmp19, tmp100);
        tmp264 = simd_and(tmp261, bytetest_8e_8f);
        struct_Cn.cc = simd_or(tmp264, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_af = simd_and(tmp32, tmp25);
        tmp265 = simd_andc(tmp48, basis_bits.bit_4);
        tmp266 = simd_or(simd_and(basis_bits.bit_5, tmp63), simd_andc(tmp38, basis_bits.bit_5));
        bytetest_91_96 = simd_and(tmp265, tmp266);
        tmp267 = simd_and(tmp261, bytetest_91_96);
        struct_Cn.cc = simd_or(tmp267, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_af = simd_and(tmp32, tmp25);
        tmp268 = simd_and(basis_bits.bit_3, basis_bits.bit_4);
        tmp269 = simd_or(simd_and(basis_bits.bit_2, tmp194), simd_andc(tmp268, basis_bits.bit_2));
        bytetest_98_a5 = simd_and(tmp7, tmp269);
        tmp270 = simd_and(tmp261, bytetest_98_a5);
        struct_Cn.cc = simd_or(tmp270, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b0 = simd_andc(tmp9, tmp41);
        bytetest_80_80 = simd_andc(tmp19, tmp41);
        tmp271 = simd_and(tmp102, bytetest_b0);
        carryQ.cq[28] = carryout2carry(pablo_blk_Advance(tmp271, carryQ.get_carry_in(28), tmp272));
        tmp273 = simd_and(tmp272, bytetest_80_80);
        bytetest_af = simd_and(tmp32, tmp25);
        bytetest_bb_bf = simd_and(bytetest_b8_bf, tmp72);
        tmp274 = simd_and(tmp261, bytetest_bb_bf);
        tmp275 = simd_or(tmp274, tmp273);
        struct_Cn.cc = simd_or(tmp275, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b0 = simd_andc(tmp9, tmp41);
        bytetest_84_84 = simd_and(tmp19, tmp39);
        tmp276 = simd_and(tmp272, bytetest_84_84);
        struct_Cn.cc = simd_or(tmp276, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b0 = simd_andc(tmp9, tmp41);
        bytetest_8d_8d = simd_and(tmp19, tmp6);
        tmp277 = simd_and(tmp272, bytetest_8d_8d);
        struct_Cn.cc = simd_or(tmp277, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b0 = simd_andc(tmp9, tmp41);
        bytetest_91_91 = simd_and(tmp48, tmp107);
        tmp278 = simd_and(tmp272, bytetest_91_91);
        struct_Cn.cc = simd_or(tmp278, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b0 = simd_andc(tmp9, tmp41);
        bytetest_a9_a9 = simd_and(tmp32, tmp144);
        tmp279 = simd_and(tmp272, bytetest_a9_a9);
        struct_Cn.cc = simd_or(tmp279, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b0 = simd_andc(tmp9, tmp41);
        bytetest_b4_b4 = simd_and(tmp9, tmp39);
        tmp280 = simd_and(tmp272, bytetest_b4_b4);
        struct_Cn.cc = simd_or(tmp280, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b0 = simd_andc(tmp9, tmp41);
        tmp281 = simd_or(simd_and(basis_bits.bit_5, tmp85), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        bytetest_ba_bc = simd_and(bytetest_b8_bf, tmp281);
        tmp282 = simd_and(tmp272, bytetest_ba_bc);
        struct_Cn.cc = simd_or(tmp282, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b1 = simd_and(tmp9, tmp107);
        bytetest_85_85 = simd_and(tmp19, tmp47);
        tmp283 = simd_and(tmp102, bytetest_b1);
        carryQ.cq[29] = carryout2carry(pablo_blk_Advance(tmp283, carryQ.get_carry_in(29), tmp284));
        tmp285 = simd_and(tmp284, bytetest_85_85);
        struct_Cn.cc = simd_or(tmp285, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b1 = simd_and(tmp9, tmp107);
        bytetest_89_89 = simd_and(tmp19, tmp144);
        tmp286 = simd_and(tmp284, bytetest_89_89);
        struct_Cn.cc = simd_or(tmp286, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b1 = simd_and(tmp9, tmp107);
        tmp287 = simd_not(tmp75);
        tmp288 = simd_or(simd_and(basis_bits.bit_3, tmp287), simd_andc(tmp100, basis_bits.bit_3));
        bytetest_8e_94 = simd_and(bytetest_80_9f, tmp288);
        tmp289 = simd_and(tmp284, bytetest_8e_94);
        struct_Cn.cc = simd_or(tmp289, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b1 = simd_and(tmp9, tmp107);
        bytetest_97_97 = simd_and(tmp48, tmp67);
        tmp290 = simd_and(tmp284, bytetest_97_97);
        struct_Cn.cc = simd_or(tmp290, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b1 = simd_and(tmp9, tmp107);
        tmp291 = simd_and(tmp48, basis_bits.bit_4);
        bytetest_9a_9f = simd_and(tmp291, tmp90);
        tmp292 = simd_and(tmp284, bytetest_9a_9f);
        struct_Cn.cc = simd_or(tmp292, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b1 = simd_and(tmp9, tmp107);
        bytetest_a4_a5 = simd_and(tmp32, tmp165);
        tmp293 = simd_and(tmp284, bytetest_a4_a5);
        struct_Cn.cc = simd_or(tmp293, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b1 = simd_and(tmp9, tmp107);
        bytetest_b0_b7 = simd_andc(tmp9, basis_bits.bit_4);
        tmp294 = simd_and(tmp284, bytetest_b0_b7);
        struct_Cn.cc = simd_or(tmp294, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b2 = simd_and(tmp9, tmp33);
        bytetest_80_81 = simd_andc(tmp19, tmp240);
        tmp295 = simd_and(tmp102, bytetest_b2);
        carryQ.cq[30] = carryout2carry(pablo_blk_Advance(tmp295, carryQ.get_carry_in(30), tmp296));
        tmp297 = simd_and(tmp296, bytetest_80_81);
        struct_Cn.cc = simd_or(tmp297, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b2 = simd_and(tmp9, tmp33);
        bytetest_84_84 = simd_and(tmp19, tmp39);
        tmp298 = simd_and(tmp296, bytetest_84_84);
        struct_Cn.cc = simd_or(tmp298, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b2 = simd_and(tmp9, tmp33);
        bytetest_8d_8d = simd_and(tmp19, tmp6);
        tmp299 = simd_and(tmp296, bytetest_8d_8d);
        struct_Cn.cc = simd_or(tmp299, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b2 = simd_and(tmp9, tmp33);
        bytetest_91_91 = simd_and(tmp48, tmp107);
        tmp300 = simd_and(tmp296, bytetest_91_91);
        struct_Cn.cc = simd_or(tmp300, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b2 = simd_and(tmp9, tmp33);
        bytetest_a9_a9 = simd_and(tmp32, tmp144);
        tmp301 = simd_and(tmp296, bytetest_a9_a9);
        struct_Cn.cc = simd_or(tmp301, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b2 = simd_and(tmp9, tmp33);
        bytetest_b4_b4 = simd_and(tmp9, tmp39);
        tmp302 = simd_and(tmp296, bytetest_b4_b4);
        struct_Cn.cc = simd_or(tmp302, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b2 = simd_and(tmp9, tmp33);
        bytetest_ba_bb = simd_and(tmp9, tmp151);
        tmp303 = simd_and(tmp296, bytetest_ba_bb);
        struct_Cn.cc = simd_or(tmp303, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b3 = simd_and(tmp9, tmp120);
        bytetest_85_85 = simd_and(tmp19, tmp47);
        tmp304 = simd_and(tmp102, bytetest_b3);
        carryQ.cq[31] = carryout2carry(pablo_blk_Advance(tmp304, carryQ.get_carry_in(31), tmp305));
        tmp306 = simd_and(tmp305, bytetest_85_85);
        struct_Cn.cc = simd_or(tmp306, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b3 = simd_and(tmp9, tmp120);
        bytetest_89_89 = simd_and(tmp19, tmp144);
        tmp307 = simd_and(tmp305, bytetest_89_89);
        struct_Cn.cc = simd_or(tmp307, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b3 = simd_and(tmp9, tmp120);
        bytetest_8e_94 = simd_and(bytetest_80_9f, tmp288);
        tmp308 = simd_and(tmp305, bytetest_8e_94);
        struct_Cn.cc = simd_or(tmp308, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b3 = simd_and(tmp9, tmp120);
        tmp309 = simd_not(tmp191);
        tmp310 = simd_or(simd_and(basis_bits.bit_4, tmp309), simd_andc(tmp51, basis_bits.bit_4));
        bytetest_97_9d = simd_and(tmp48, tmp310);
        tmp311 = simd_and(tmp305, bytetest_97_9d);
        struct_Cn.cc = simd_or(tmp311, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b3 = simd_and(tmp9, tmp120);
        bytetest_9f_9f = simd_and(tmp48, tmp25);
        tmp312 = simd_and(tmp305, bytetest_9f_9f);
        struct_Cn.cc = simd_or(tmp312, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b3 = simd_and(tmp9, tmp120);
        bytetest_a4_a5 = simd_and(tmp32, tmp165);
        tmp313 = simd_and(tmp305, bytetest_a4_a5);
        struct_Cn.cc = simd_or(tmp313, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b3 = simd_and(tmp9, tmp120);
        bytetest_b0_b0 = simd_andc(tmp9, tmp41);
        tmp314 = simd_and(tmp305, bytetest_b0_b0);
        struct_Cn.cc = simd_or(tmp314, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b4 = simd_and(tmp9, tmp39);
        bytetest_80_81 = simd_andc(tmp19, tmp240);
        tmp315 = simd_and(tmp102, bytetest_b4);
        carryQ.cq[32] = carryout2carry(pablo_blk_Advance(tmp315, carryQ.get_carry_in(32), tmp316));
        tmp317 = simd_and(tmp316, bytetest_80_81);
        bytetest_b3 = simd_and(tmp9, tmp120);
        tmp318 = simd_or(basis_bits.bit_4, tmp72);
        bytetest_b3_bf = simd_and(tmp9, tmp318);
        tmp319 = simd_and(tmp305, bytetest_b3_bf);
        tmp320 = simd_or(tmp319, tmp317);
        struct_Cn.cc = simd_or(tmp320, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b4 = simd_and(tmp9, tmp39);
        bytetest_84_84 = simd_and(tmp19, tmp39);
        tmp321 = simd_and(tmp316, bytetest_84_84);
        struct_Cn.cc = simd_or(tmp321, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b4 = simd_and(tmp9, tmp39);
        bytetest_8d_8d = simd_and(tmp19, tmp6);
        tmp322 = simd_and(tmp316, bytetest_8d_8d);
        struct_Cn.cc = simd_or(tmp322, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b4 = simd_and(tmp9, tmp39);
        bytetest_91_91 = simd_and(tmp48, tmp107);
        tmp323 = simd_and(tmp316, bytetest_91_91);
        struct_Cn.cc = simd_or(tmp323, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b4 = simd_and(tmp9, tmp39);
        bytetest_bb_bc = simd_and(bytetest_b8_bf, tmp86);
        tmp324 = simd_and(tmp316, bytetest_bb_bc);
        struct_Cn.cc = simd_or(tmp324, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b5 = simd_and(tmp9, tmp47);
        bytetest_85_85 = simd_and(tmp19, tmp47);
        tmp325 = simd_and(tmp102, bytetest_b5);
        carryQ.cq[33] = carryout2carry(pablo_blk_Advance(tmp325, carryQ.get_carry_in(33), tmp326));
        tmp327 = simd_and(tmp326, bytetest_85_85);
        struct_Cn.cc = simd_or(tmp327, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b5 = simd_and(tmp9, tmp47);
        bytetest_89_89 = simd_and(tmp19, tmp144);
        tmp328 = simd_and(tmp326, bytetest_89_89);
        struct_Cn.cc = simd_or(tmp328, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b5 = simd_and(tmp9, tmp47);
        bytetest_8f_96 = simd_and(bytetest_80_9f, tmp161);
        tmp329 = simd_and(tmp326, bytetest_8f_96);
        struct_Cn.cc = simd_or(tmp329, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b5 = simd_and(tmp9, tmp47);
        bytetest_98_9f = simd_and(tmp48, basis_bits.bit_4);
        tmp330 = simd_and(tmp326, bytetest_98_9f);
        struct_Cn.cc = simd_or(tmp330, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b5 = simd_and(tmp9, tmp47);
        bytetest_a4_a5 = simd_and(tmp32, tmp165);
        tmp331 = simd_and(tmp326, bytetest_a4_a5);
        struct_Cn.cc = simd_or(tmp331, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b5 = simd_and(tmp9, tmp47);
        bytetest_b6_b8 = simd_and(tmp9, tmp249);
        tmp332 = simd_and(tmp326, bytetest_b6_b8);
        struct_Cn.cc = simd_or(tmp332, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b6 = simd_and(tmp9, tmp57);
        bytetest_80_81 = simd_andc(tmp19, tmp240);
        tmp333 = simd_and(tmp102, bytetest_b6);
        carryQ.cq[34] = carryout2carry(pablo_blk_Advance(tmp333, carryQ.get_carry_in(34), tmp334));
        tmp335 = simd_and(tmp334, bytetest_80_81);
        struct_Cn.cc = simd_or(tmp335, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b6 = simd_and(tmp9, tmp57);
        bytetest_84_84 = simd_and(tmp19, tmp39);
        tmp336 = simd_and(tmp334, bytetest_84_84);
        struct_Cn.cc = simd_or(tmp336, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b6 = simd_and(tmp9, tmp57);
        tmp337 = simd_not(tmp90);
        tmp338 = simd_or(simd_and(basis_bits.bit_4, tmp337), simd_andc(tmp51, basis_bits.bit_4));
        bytetest_97_99 = simd_and(tmp48, tmp338);
        tmp339 = simd_and(tmp334, bytetest_97_99);
        struct_Cn.cc = simd_or(tmp339, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b6 = simd_and(tmp9, tmp57);
        bytetest_b2_b2 = simd_and(tmp9, tmp33);
        tmp340 = simd_and(tmp334, bytetest_b2_b2);
        struct_Cn.cc = simd_or(tmp340, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b6 = simd_and(tmp9, tmp57);
        bytetest_bc_bc = simd_and(tmp9, tmp81);
        tmp341 = simd_and(tmp334, bytetest_bc_bc);
        struct_Cn.cc = simd_or(tmp341, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b6 = simd_and(tmp9, tmp57);
        bytetest_be_bf = simd_and(tmp9, tmp100);
        tmp342 = simd_and(tmp334, bytetest_be_bf);
        struct_Cn.cc = simd_or(tmp342, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b7 = simd_and(tmp9, tmp67);
        bytetest_87_89 = simd_and(tmp19, tmp338);
        tmp343 = simd_and(tmp102, bytetest_b7);
        carryQ.cq[35] = carryout2carry(pablo_blk_Advance(tmp343, carryQ.get_carry_in(35), tmp344));
        tmp345 = simd_and(tmp344, bytetest_87_89);
        struct_Cn.cc = simd_or(tmp345, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b7 = simd_and(tmp9, tmp67);
        bytetest_8b_8e = simd_and(bytetest_88_8f, tmp64);
        tmp346 = simd_and(tmp344, bytetest_8b_8e);
        struct_Cn.cc = simd_or(tmp346, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b7 = simd_and(tmp9, tmp67);
        bytetest_95_95 = simd_and(tmp48, tmp47);
        tmp347 = simd_and(tmp344, bytetest_95_95);
        struct_Cn.cc = simd_or(tmp347, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b7 = simd_and(tmp9, tmp67);
        bytetest_97_97 = simd_and(tmp48, tmp67);
        tmp348 = simd_and(tmp344, bytetest_97_97);
        struct_Cn.cc = simd_or(tmp348, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b7 = simd_and(tmp9, tmp67);
        tmp349 = simd_and(basis_bits.bit_3, tmp240);
        bytetest_a0_b1 = simd_andc(tmp40, tmp349);
        tmp350 = simd_and(tmp344, bytetest_a0_b1);
        struct_Cn.cc = simd_or(tmp350, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b8 = simd_and(tmp9, tmp58);
        bytetest_80_80 = simd_andc(tmp19, tmp41);
        tmp351 = simd_and(tmp102, bytetest_b8);
        carryQ.cq[36] = carryout2carry(pablo_blk_Advance(tmp351, carryQ.get_carry_in(36), tmp352));
        tmp353 = simd_and(tmp352, bytetest_80_80);
        bytetest_b7 = simd_and(tmp9, tmp67);
        bytetest_b5_bf = simd_and(tmp9, tmp75);
        tmp354 = simd_and(tmp344, bytetest_b5_bf);
        tmp355 = simd_or(tmp354, tmp353);
        struct_Cn.cc = simd_or(tmp355, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b8 = simd_and(tmp9, tmp58);
        bytetest_bb_be = simd_and(bytetest_b8_bf, tmp64);
        tmp356 = simd_and(tmp352, bytetest_bb_be);
        struct_Cn.cc = simd_or(tmp356, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ba = simd_and(tmp9, tmp197);
        bytetest_80_80 = simd_andc(tmp19, tmp41);
        tmp357 = simd_and(tmp102, bytetest_ba);
        carryQ.cq[37] = carryout2carry(pablo_blk_Advance(tmp357, carryQ.get_carry_in(37), tmp358));
        tmp359 = simd_and(tmp358, bytetest_80_80);
        bytetest_b9 = simd_and(tmp9, tmp144);
        tmp360 = simd_and(basis_bits.bit_3, tmp4);
        tmp361 = simd_or(basis_bits.bit_2, tmp360);
        bytetest_9c_bf = simd_and(tmp7, tmp361);
        tmp362 = simd_and(tmp102, bytetest_b9);
        carryQ.cq[38] = carryout2carry(pablo_blk_Advance(tmp362, carryQ.get_carry_in(38), tmp363));
        tmp364 = simd_and(tmp363, bytetest_9c_bf);
        tmp365 = simd_or(tmp364, tmp359);
        struct_Cn.cc = simd_or(tmp365, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ba = simd_and(tmp9, tmp197);
        bytetest_83_83 = simd_and(tmp19, tmp120);
        tmp366 = simd_and(tmp358, bytetest_83_83);
        struct_Cn.cc = simd_or(tmp366, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ba = simd_and(tmp9, tmp197);
        bytetest_85_86 = simd_and(tmp153, tmp140);
        tmp367 = simd_and(tmp358, bytetest_85_86);
        struct_Cn.cc = simd_or(tmp367, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ba = simd_and(tmp9, tmp197);
        bytetest_89_89 = simd_and(tmp19, tmp144);
        tmp368 = simd_and(tmp358, bytetest_89_89);
        struct_Cn.cc = simd_or(tmp368, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ba = simd_and(tmp9, tmp197);
        bytetest_8b_8c = simd_and(bytetest_88_8f, tmp86);
        tmp369 = simd_and(tmp358, bytetest_8b_8c);
        struct_Cn.cc = simd_or(tmp369, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ba = simd_and(tmp9, tmp197);
        tmp370 = simd_not(tmp20);
        tmp371 = simd_or(simd_and(basis_bits.bit_3, tmp370), simd_andc(tmp100, basis_bits.bit_3));
        bytetest_8e_93 = simd_and(bytetest_80_9f, tmp371);
        tmp372 = simd_and(tmp358, bytetest_8e_93);
        struct_Cn.cc = simd_or(tmp372, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ba = simd_and(tmp9, tmp197);
        bytetest_98_98 = simd_and(tmp48, tmp58);
        tmp373 = simd_and(tmp358, bytetest_98_98);
        struct_Cn.cc = simd_or(tmp373, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ba = simd_and(tmp9, tmp197);
        bytetest_a0_a0 = simd_andc(tmp32, tmp41);
        tmp374 = simd_and(tmp358, bytetest_a0_a0);
        struct_Cn.cc = simd_or(tmp374, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ba = simd_and(tmp9, tmp197);
        bytetest_a4_a4 = simd_and(tmp32, tmp39);
        tmp375 = simd_and(tmp358, bytetest_a4_a4);
        struct_Cn.cc = simd_or(tmp375, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ba = simd_and(tmp9, tmp197);
        bytetest_a6_a6 = simd_and(tmp32, tmp57);
        tmp376 = simd_and(tmp358, bytetest_a6_a6);
        struct_Cn.cc = simd_or(tmp376, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ba = simd_and(tmp9, tmp197);
        bytetest_a8_a9 = simd_and(tmp32, tmp11);
        tmp377 = simd_and(tmp358, bytetest_a8_a9);
        struct_Cn.cc = simd_or(tmp377, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ba = simd_and(tmp9, tmp197);
        bytetest_ac_ac = simd_and(tmp32, tmp81);
        tmp378 = simd_and(tmp358, bytetest_ac_ac);
        struct_Cn.cc = simd_or(tmp378, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ba = simd_and(tmp9, tmp197);
        bytetest_ba_ba = simd_and(tmp9, tmp197);
        tmp379 = simd_and(tmp358, bytetest_ba_ba);
        struct_Cn.cc = simd_or(tmp379, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ba = simd_and(tmp9, tmp197);
        bytetest_be_bf = simd_and(tmp9, tmp100);
        tmp380 = simd_and(tmp358, bytetest_be_bf);
        struct_Cn.cc = simd_or(tmp380, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_bb = simd_and(tmp9, tmp28);
        bytetest_85_85 = simd_and(tmp19, tmp47);
        tmp381 = simd_and(tmp102, bytetest_bb);
        carryQ.cq[39] = carryout2carry(pablo_blk_Advance(tmp381, carryQ.get_carry_in(39), tmp382));
        tmp383 = simd_and(tmp382, bytetest_85_85);
        struct_Cn.cc = simd_or(tmp383, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_bb = simd_and(tmp9, tmp28);
        bytetest_87_87 = simd_and(tmp19, tmp67);
        tmp384 = simd_and(tmp382, bytetest_87_87);
        struct_Cn.cc = simd_or(tmp384, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_bb = simd_and(tmp9, tmp28);
        bytetest_8e_8f = simd_and(tmp19, tmp100);
        tmp385 = simd_and(tmp382, bytetest_8e_8f);
        struct_Cn.cc = simd_or(tmp385, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_bb = simd_and(tmp9, tmp28);
        bytetest_9a_9b = simd_and(tmp48, tmp151);
        tmp386 = simd_and(tmp382, bytetest_9a_9b);
        struct_Cn.cc = simd_or(tmp386, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_bb = simd_and(tmp9, tmp28);
        bytetest_a0_bf = simd_and(tmp7, basis_bits.bit_2);
        tmp387 = simd_and(tmp382, bytetest_a0_bf);
        struct_Cn.cc = simd_or(tmp387, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_bd = simd_and(tmp9, tmp6);
        bytetest_88_88 = simd_and(tmp19, tmp58);
        tmp388 = simd_and(tmp102, bytetest_bd);
        carryQ.cq[40] = carryout2carry(pablo_blk_Advance(tmp388, carryQ.get_carry_in(40), tmp389));
        tmp390 = simd_and(tmp389, bytetest_88_88);
        struct_Cn.cc = simd_or(tmp390, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_bd = simd_and(tmp9, tmp6);
        tmp391 = simd_or(simd_and(basis_bits.bit_3, tmp42), simd_andc(tmp126, basis_bits.bit_3));
        bytetest_ad_b0 = simd_and(bytetest_a0_bf, tmp391);
        tmp392 = simd_and(tmp389, bytetest_ad_b0);
        struct_Cn.cc = simd_or(tmp392, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_be = simd_and(tmp9, tmp18);
        bytetest_98_98 = simd_and(tmp48, tmp58);
        tmp393 = simd_and(tmp102, bytetest_be);
        carryQ.cq[41] = carryout2carry(pablo_blk_Advance(tmp393, carryQ.get_carry_in(41), tmp394));
        tmp395 = simd_and(tmp394, bytetest_98_98);
        struct_Cn.cc = simd_or(tmp395, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_be = simd_and(tmp9, tmp18);
        bytetest_bd_bd = simd_and(tmp9, tmp6);
        tmp396 = simd_and(tmp394, bytetest_bd_bd);
        struct_Cn.cc = simd_or(tmp396, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_bf = simd_and(tmp9, tmp25);
        bytetest_8d_8d = simd_and(tmp19, tmp6);
        tmp397 = simd_and(tmp102, bytetest_bf);
        carryQ.cq[42] = carryout2carry(pablo_blk_Advance(tmp397, carryQ.get_carry_in(42), tmp398));
        tmp399 = simd_and(tmp398, bytetest_8d_8d);
        struct_Cn.cc = simd_or(tmp399, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_bf = simd_and(tmp9, tmp25);
        tmp400 = simd_and(basis_bits.bit_4, tmp72);
        tmp401 = simd_and(basis_bits.bit_3, tmp400);
        tmp402 = simd_or(basis_bits.bit_2, tmp401);
        bytetest_9b_bf = simd_and(tmp7, tmp402);
        tmp403 = simd_and(tmp398, bytetest_9b_bf);
        struct_Cn.cc = simd_or(tmp403, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_83 = simd_and(tmp19, tmp120);
        bytetest_86_86 = simd_and(tmp19, tmp57);
        tmp404 = simd_and(tmp13, bytetest_e1);
        carryQ.cq[43] = carryout2carry(pablo_blk_Advance(tmp404, carryQ.get_carry_in(43), tmp405));
        tmp406 = simd_and(tmp405, bytetest_83);
        carryQ.cq[44] = carryout2carry(pablo_blk_Advance(tmp406, carryQ.get_carry_in(44), tmp407));
        tmp408 = simd_and(tmp407, bytetest_86_86);
        struct_Cn.cc = simd_or(tmp408, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_83 = simd_and(tmp19, tmp120);
        bytetest_88_8c = simd_andc(bytetest_88_8f, tmp74);
        tmp409 = simd_and(tmp407, bytetest_88_8c);
        struct_Cn.cc = simd_or(tmp409, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_83 = simd_and(tmp19, tmp120);
        bytetest_8e_8f = simd_and(tmp19, tmp100);
        tmp410 = simd_and(tmp407, bytetest_8e_8f);
        struct_Cn.cc = simd_or(tmp410, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_89 = simd_and(tmp19, tmp144);
        bytetest_89_89 = simd_and(tmp19, tmp144);
        tmp411 = simd_and(tmp405, bytetest_89);
        carryQ.cq[45] = carryout2carry(pablo_blk_Advance(tmp411, carryQ.get_carry_in(45), tmp412));
        tmp413 = simd_and(tmp412, bytetest_89_89);
        struct_Cn.cc = simd_or(tmp413, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_89 = simd_and(tmp19, tmp144);
        bytetest_8e_8f = simd_and(tmp19, tmp100);
        tmp414 = simd_and(tmp412, bytetest_8e_8f);
        struct_Cn.cc = simd_or(tmp414, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_89 = simd_and(tmp19, tmp144);
        bytetest_97_97 = simd_and(tmp48, tmp67);
        tmp415 = simd_and(tmp412, bytetest_97_97);
        struct_Cn.cc = simd_or(tmp415, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_89 = simd_and(tmp19, tmp144);
        bytetest_99_99 = simd_and(tmp48, tmp144);
        tmp416 = simd_and(tmp412, bytetest_99_99);
        struct_Cn.cc = simd_or(tmp416, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_89 = simd_and(tmp19, tmp144);
        bytetest_9e_9f = simd_and(tmp48, tmp100);
        tmp417 = simd_and(tmp412, bytetest_9e_9f);
        struct_Cn.cc = simd_or(tmp417, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_8a = simd_and(tmp19, tmp197);
        bytetest_89_89 = simd_and(tmp19, tmp144);
        tmp418 = simd_and(tmp405, bytetest_8a);
        carryQ.cq[46] = carryout2carry(pablo_blk_Advance(tmp418, carryQ.get_carry_in(46), tmp419));
        tmp420 = simd_and(tmp419, bytetest_89_89);
        struct_Cn.cc = simd_or(tmp420, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_8a = simd_and(tmp19, tmp197);
        bytetest_8e_8f = simd_and(tmp19, tmp100);
        tmp421 = simd_and(tmp419, bytetest_8e_8f);
        struct_Cn.cc = simd_or(tmp421, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_8a = simd_and(tmp19, tmp197);
        bytetest_b1_b1 = simd_and(tmp9, tmp107);
        tmp422 = simd_and(tmp419, bytetest_b1_b1);
        struct_Cn.cc = simd_or(tmp422, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_8a = simd_and(tmp19, tmp197);
        tmp423 = simd_and(tmp37, basis_bits.bit_6);
        bytetest_b6_b7 = simd_and(tmp9, tmp423);
        tmp424 = simd_and(tmp419, bytetest_b6_b7);
        struct_Cn.cc = simd_or(tmp424, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_8a = simd_and(tmp19, tmp197);
        bytetest_bf_bf = simd_and(tmp9, tmp25);
        tmp425 = simd_and(tmp419, bytetest_bf_bf);
        struct_Cn.cc = simd_or(tmp425, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_8b = simd_and(tmp19, tmp28);
        bytetest_81_81 = simd_and(tmp19, tmp107);
        tmp426 = simd_and(tmp405, bytetest_8b);
        carryQ.cq[47] = carryout2carry(pablo_blk_Advance(tmp426, carryQ.get_carry_in(47), tmp427));
        tmp428 = simd_and(tmp427, bytetest_81_81);
        struct_Cn.cc = simd_or(tmp428, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_8b = simd_and(tmp19, tmp28);
        bytetest_86_87 = simd_and(tmp19, tmp423);
        tmp429 = simd_and(tmp427, bytetest_86_87);
        struct_Cn.cc = simd_or(tmp429, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_8b = simd_and(tmp19, tmp28);
        bytetest_97_97 = simd_and(tmp48, tmp67);
        tmp430 = simd_and(tmp427, bytetest_97_97);
        struct_Cn.cc = simd_or(tmp430, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_8c = simd_and(tmp19, tmp81);
        bytetest_91_91 = simd_and(tmp48, tmp107);
        tmp431 = simd_and(tmp405, bytetest_8c);
        carryQ.cq[48] = carryout2carry(pablo_blk_Advance(tmp431, carryQ.get_carry_in(48), tmp432));
        tmp433 = simd_and(tmp432, bytetest_91_91);
        struct_Cn.cc = simd_or(tmp433, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_8c = simd_and(tmp19, tmp81);
        bytetest_96_97 = simd_and(tmp48, tmp423);
        tmp434 = simd_and(tmp432, bytetest_96_97);
        struct_Cn.cc = simd_or(tmp434, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_8d = simd_and(tmp19, tmp6);
        bytetest_9b_9c = simd_and(bytetest_98_9f, tmp86);
        tmp435 = simd_and(tmp405, bytetest_8d);
        carryQ.cq[49] = carryout2carry(pablo_blk_Advance(tmp435, carryQ.get_carry_in(49), tmp436));
        tmp437 = simd_and(tmp436, bytetest_9b_9c);
        struct_Cn.cc = simd_or(tmp437, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_8d = simd_and(tmp19, tmp6);
        bytetest_bd_bf = simd_and(bytetest_bc_bf, tmp38);
        tmp438 = simd_and(tmp436, bytetest_bd_bf);
        struct_Cn.cc = simd_or(tmp438, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_8e = simd_and(tmp19, tmp18);
        bytetest_9a_9f = simd_and(bytetest_98_9f, tmp90);
        tmp439 = simd_and(tmp405, bytetest_8e);
        carryQ.cq[50] = carryout2carry(pablo_blk_Advance(tmp439, carryQ.get_carry_in(50), tmp440));
        tmp441 = simd_and(tmp440, bytetest_9a_9f);
        struct_Cn.cc = simd_or(tmp441, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_8f = simd_and(tmp19, tmp25);
        bytetest_b5_bf = simd_and(tmp9, tmp75);
        tmp442 = simd_and(tmp405, bytetest_8f);
        carryQ.cq[51] = carryout2carry(pablo_blk_Advance(tmp442, carryQ.get_carry_in(51), tmp443));
        tmp444 = simd_and(tmp443, bytetest_b5_bf);
        struct_Cn.cc = simd_or(tmp444, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_9a = simd_and(tmp48, tmp197);
        tmp445 = simd_and(tmp48, tmp4);
        bytetest_9d_9f = simd_and(tmp445, tmp38);
        tmp446 = simd_and(tmp405, bytetest_9a);
        carryQ.cq[52] = carryout2carry(pablo_blk_Advance(tmp446, carryQ.get_carry_in(52), tmp447));
        tmp448 = simd_and(tmp447, bytetest_9d_9f);
        struct_Cn.cc = simd_or(tmp448, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_9b = simd_and(tmp48, tmp28);
        bytetest_b1_bf = simd_and(tmp9, tmp215);
        tmp449 = simd_and(tmp405, bytetest_9b);
        carryQ.cq[53] = carryout2carry(pablo_blk_Advance(tmp449, carryQ.get_carry_in(53), tmp450));
        tmp451 = simd_and(tmp450, bytetest_b1_bf);
        struct_Cn.cc = simd_or(tmp451, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_9c = simd_and(tmp48, tmp81);
        bytetest_8d_8d = simd_and(tmp19, tmp6);
        tmp452 = simd_and(tmp405, bytetest_9c);
        carryQ.cq[54] = carryout2carry(pablo_blk_Advance(tmp452, carryQ.get_carry_in(54), tmp453));
        tmp454 = simd_and(tmp453, bytetest_8d_8d);
        struct_Cn.cc = simd_or(tmp454, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_9c = simd_and(tmp48, tmp81);
        bytetest_95_9f = simd_and(tmp48, tmp75);
        tmp455 = simd_and(tmp453, bytetest_95_9f);
        struct_Cn.cc = simd_or(tmp455, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_9c = simd_and(tmp48, tmp81);
        bytetest_b7_bf = simd_and(tmp9, tmp159);
        tmp456 = simd_and(tmp453, bytetest_b7_bf);
        struct_Cn.cc = simd_or(tmp456, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_9d = simd_and(tmp48, tmp6);
        bytetest_94_9f = simd_and(tmp48, tmp20);
        tmp457 = simd_and(tmp405, bytetest_9d);
        carryQ.cq[55] = carryout2carry(pablo_blk_Advance(tmp457, carryQ.get_carry_in(55), tmp458));
        tmp459 = simd_and(tmp458, bytetest_94_9f);
        struct_Cn.cc = simd_or(tmp459, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_9d = simd_and(tmp48, tmp6);
        bytetest_ad_ad = simd_and(tmp32, tmp6);
        tmp460 = simd_and(tmp458, bytetest_ad_ad);
        struct_Cn.cc = simd_or(tmp460, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_9d = simd_and(tmp48, tmp6);
        bytetest_b1_b1 = simd_and(tmp9, tmp107);
        tmp461 = simd_and(tmp458, bytetest_b1_b1);
        struct_Cn.cc = simd_or(tmp461, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_9d = simd_and(tmp48, tmp6);
        bytetest_b4_bf = simd_and(tmp9, tmp20);
        tmp462 = simd_and(tmp458, bytetest_b4_bf);
        struct_Cn.cc = simd_or(tmp462, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_9f = simd_and(tmp48, tmp25);
        bytetest_9e_9f = simd_and(tmp48, tmp100);
        tmp463 = simd_and(tmp405, bytetest_9f);
        carryQ.cq[56] = carryout2carry(pablo_blk_Advance(tmp463, carryQ.get_carry_in(56), tmp464));
        tmp465 = simd_and(tmp464, bytetest_9e_9f);
        struct_Cn.cc = simd_or(tmp465, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_9f = simd_and(tmp48, tmp25);
        bytetest_aa_af = simd_and(tmp71, tmp90);
        tmp466 = simd_and(tmp464, bytetest_aa_af);
        struct_Cn.cc = simd_or(tmp466, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_9f = simd_and(tmp48, tmp25);
        bytetest_ba_bf = simd_and(bytetest_b8_bf, tmp90);
        tmp467 = simd_and(tmp464, bytetest_ba_bf);
        struct_Cn.cc = simd_or(tmp467, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_a0 = simd_andc(tmp32, tmp41);
        bytetest_8f_8f = simd_and(tmp19, tmp25);
        tmp468 = simd_and(tmp405, bytetest_a0);
        carryQ.cq[57] = carryout2carry(pablo_blk_Advance(tmp468, carryQ.get_carry_in(57), tmp469));
        tmp470 = simd_and(tmp469, bytetest_8f_8f);
        struct_Cn.cc = simd_or(tmp470, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_a0 = simd_andc(tmp32, tmp41);
        bytetest_9a_9f = simd_and(bytetest_98_9f, tmp90);
        tmp471 = simd_and(tmp469, bytetest_9a_9f);
        struct_Cn.cc = simd_or(tmp471, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_a1 = simd_and(tmp32, tmp107);
        bytetest_b8_bf = simd_and(tmp9, basis_bits.bit_4);
        tmp472 = simd_and(tmp405, bytetest_a1);
        carryQ.cq[58] = carryout2carry(pablo_blk_Advance(tmp472, carryQ.get_carry_in(58), tmp473));
        tmp474 = simd_and(tmp473, bytetest_b8_bf);
        struct_Cn.cc = simd_or(tmp474, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_a2 = simd_and(tmp32, tmp33);
        bytetest_ab_af = simd_and(tmp71, tmp72);
        tmp475 = simd_and(tmp405, bytetest_a2);
        carryQ.cq[59] = carryout2carry(pablo_blk_Advance(tmp475, carryQ.get_carry_in(59), tmp476));
        tmp477 = simd_and(tmp476, bytetest_ab_af);
        struct_Cn.cc = simd_or(tmp477, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_a3 = simd_and(tmp32, tmp120);
        bytetest_b6_bf = simd_and(tmp9, tmp192);
        tmp478 = simd_and(tmp405, bytetest_a3);
        carryQ.cq[60] = carryout2carry(pablo_blk_Advance(tmp478, carryQ.get_carry_in(60), tmp479));
        tmp480 = simd_and(tmp479, bytetest_b6_bf);
        struct_Cn.cc = simd_or(tmp480, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_a4 = simd_and(tmp32, tmp39);
        bytetest_9d_9f = simd_and(tmp445, tmp38);
        tmp481 = simd_and(tmp405, bytetest_a4);
        carryQ.cq[61] = carryout2carry(pablo_blk_Advance(tmp481, carryQ.get_carry_in(61), tmp482));
        tmp483 = simd_and(tmp482, bytetest_9d_9f);
        struct_Cn.cc = simd_or(tmp483, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_a4 = simd_and(tmp32, tmp39);
        bytetest_ac_af = simd_and(tmp32, tmp4);
        tmp484 = simd_and(tmp482, bytetest_ac_af);
        struct_Cn.cc = simd_or(tmp484, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_a4 = simd_and(tmp32, tmp39);
        bytetest_bc_bf = simd_and(tmp9, tmp4);
        tmp485 = simd_and(tmp482, bytetest_bc_bf);
        struct_Cn.cc = simd_or(tmp485, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_a5 = simd_and(tmp32, tmp47);
        bytetest_81_83 = simd_and(bytetest_80_83, tmp38);
        tmp486 = simd_and(tmp405, bytetest_a5);
        carryQ.cq[62] = carryout2carry(pablo_blk_Advance(tmp486, carryQ.get_carry_in(62), tmp487));
        tmp488 = simd_and(tmp487, bytetest_81_83);
        struct_Cn.cc = simd_or(tmp488, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_a5 = simd_and(tmp32, tmp47);
        bytetest_ae_af = simd_and(tmp32, tmp100);
        tmp489 = simd_and(tmp487, bytetest_ae_af);
        struct_Cn.cc = simd_or(tmp489, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_a5 = simd_and(tmp32, tmp47);
        bytetest_b5_bf = simd_and(tmp9, tmp75);
        tmp490 = simd_and(tmp487, bytetest_b5_bf);
        struct_Cn.cc = simd_or(tmp490, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_a6 = simd_and(tmp32, tmp57);
        bytetest_ac_af = simd_and(tmp32, tmp4);
        tmp491 = simd_and(tmp405, bytetest_a6);
        carryQ.cq[63] = carryout2carry(pablo_blk_Advance(tmp491, carryQ.get_carry_in(63), tmp492));
        tmp493 = simd_and(tmp492, bytetest_ac_af);
        struct_Cn.cc = simd_or(tmp493, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_a7 = simd_and(tmp32, tmp67);
        bytetest_8a_8f = simd_and(bytetest_88_8f, tmp90);
        tmp494 = simd_and(tmp405, bytetest_a7);
        carryQ.cq[64] = carryout2carry(pablo_blk_Advance(tmp494, carryQ.get_carry_in(64), tmp495));
        tmp496 = simd_and(tmp495, bytetest_8a_8f);
        struct_Cn.cc = simd_or(tmp496, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_a7 = simd_and(tmp32, tmp67);
        bytetest_9b_9d = simd_and(bytetest_98_9f, tmp149);
        tmp497 = simd_and(tmp495, bytetest_9b_9d);
        struct_Cn.cc = simd_or(tmp497, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_a8 = simd_and(tmp32, tmp58);
        bytetest_9c_9d = simd_and(tmp48, tmp108);
        tmp498 = simd_and(tmp405, bytetest_a8);
        carryQ.cq[65] = carryout2carry(pablo_blk_Advance(tmp498, carryQ.get_carry_in(65), tmp499));
        tmp500 = simd_and(tmp499, bytetest_9c_9d);
        struct_Cn.cc = simd_or(tmp500, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_a9 = simd_and(tmp32, tmp144);
        bytetest_9f_9f = simd_and(tmp48, tmp25);
        tmp501 = simd_and(tmp405, bytetest_a9);
        carryQ.cq[66] = carryout2carry(pablo_blk_Advance(tmp501, carryQ.get_carry_in(66), tmp502));
        tmp503 = simd_and(tmp502, bytetest_9f_9f);
        struct_Cn.cc = simd_or(tmp503, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_a9 = simd_and(tmp32, tmp144);
        bytetest_bd_be = simd_and(bytetest_bc_bf, tmp140);
        tmp504 = simd_and(tmp502, bytetest_bd_be);
        struct_Cn.cc = simd_or(tmp504, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_aa = simd_and(tmp32, tmp197);
        bytetest_8a_8f = simd_and(bytetest_88_8f, tmp90);
        tmp505 = simd_and(tmp405, bytetest_aa);
        carryQ.cq[67] = carryout2carry(pablo_blk_Advance(tmp505, carryQ.get_carry_in(67), tmp506));
        tmp507 = simd_and(tmp506, bytetest_8a_8f);
        struct_Cn.cc = simd_or(tmp507, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_aa = simd_and(tmp32, tmp197);
        bytetest_9a_9f = simd_and(bytetest_98_9f, tmp90);
        tmp508 = simd_and(tmp506, bytetest_9a_9f);
        struct_Cn.cc = simd_or(tmp508, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_ab = simd_and(tmp32, tmp28);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp509 = simd_and(tmp405, bytetest_ab);
        carryQ.cq[68] = carryout2carry(pablo_blk_Advance(tmp509, carryQ.get_carry_in(68), tmp510));
        tmp511 = simd_and(tmp510, bytetest_80_bf);
        tmp512 = simd_and(bytetest_80_bf, tmp31);
        bytetest_aa = simd_and(tmp512, tmp197);
        tmp513 = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp514 = simd_or(basis_bits.bit_3, tmp100);
        bytetest_ae_bf = simd_and(tmp513, tmp514);
        tmp515 = simd_and(tmp506, bytetest_ae_bf);
        tmp516 = simd_or(tmp515, tmp511);
        struct_Cn.cc = simd_or(tmp516, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_ad = simd_and(tmp512, tmp6);
        tmp517 = simd_andc(bytetest_80_bf, tmp2);
        bytetest_8c_8f = simd_and(tmp517, tmp4);
        tmp518 = simd_and(tmp405, bytetest_ad);
        carryQ.cq[69] = carryout2carry(pablo_blk_Advance(tmp518, carryQ.get_carry_in(69), tmp519));
        tmp520 = simd_and(tmp519, bytetest_8c_8f);
        struct_Cn.cc = simd_or(tmp520, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_ad = simd_and(tmp512, tmp6);
        tmp521 = simd_and(bytetest_80_bf, tmp8);
        tmp522 = simd_and(tmp521, tmp4);
        bytetest_bd_bf = simd_and(tmp522, tmp38);
        tmp523 = simd_and(tmp519, bytetest_bd_bf);
        struct_Cn.cc = simd_or(tmp523, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_af = simd_and(tmp512, tmp25);
        tmp524 = simd_not(basis_bits.bit_5);
        tmp525 = simd_or(simd_and(basis_bits.bit_4, tmp524), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
        bytetest_b4_bb = simd_and(tmp521, tmp525);
        tmp526 = simd_and(tmp405, bytetest_af);
        carryQ.cq[70] = carryout2carry(pablo_blk_Advance(tmp526, carryQ.get_carry_in(70), tmp527));
        tmp528 = simd_and(tmp527, bytetest_b4_bb);
        struct_Cn.cc = simd_or(tmp528, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_b0 = simd_andc(tmp521, tmp41);
        tmp529 = simd_and(tmp521, tmp10);
        bytetest_b8_ba = simd_andc(tmp529, tmp24);
        tmp530 = simd_and(tmp405, bytetest_b0);
        carryQ.cq[71] = carryout2carry(pablo_blk_Advance(tmp530, carryQ.get_carry_in(71), tmp531));
        tmp532 = simd_and(tmp531, bytetest_b8_ba);
        struct_Cn.cc = simd_or(tmp532, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_b1 = simd_and(tmp521, tmp107);
        tmp533 = simd_and(tmp517, basis_bits.bit_4);
        bytetest_8a_8c = simd_and(tmp533, tmp281);
        tmp534 = simd_and(tmp405, bytetest_b1);
        carryQ.cq[72] = carryout2carry(pablo_blk_Advance(tmp534, carryQ.get_carry_in(72), tmp535));
        tmp536 = simd_and(tmp535, bytetest_8a_8c);
        struct_Cn.cc = simd_or(tmp536, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_b2 = simd_and(tmp521, tmp33);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp537 = simd_and(tmp405, bytetest_b2);
        carryQ.cq[73] = carryout2carry(pablo_blk_Advance(tmp537, carryQ.get_carry_in(73), tmp538));
        tmp539 = simd_and(tmp538, bytetest_80_bf);
        struct_Cn.cc = simd_or(tmp539, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_b3 = simd_and(tmp521, tmp120);
        bytetest_88_8f = simd_and(tmp517, basis_bits.bit_4);
        tmp540 = simd_and(tmp405, bytetest_b3);
        carryQ.cq[74] = carryout2carry(pablo_blk_Advance(tmp540, carryQ.get_carry_in(74), tmp541));
        tmp542 = simd_and(tmp541, bytetest_88_8f);
        struct_Cn.cc = simd_or(tmp542, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_b3 = simd_and(tmp521, tmp120);
        bytetest_b7_bf = simd_and(tmp521, tmp159);
        tmp543 = simd_and(tmp541, bytetest_b7_bf);
        struct_Cn.cc = simd_or(tmp543, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_b7 = simd_and(tmp521, tmp67);
        tmp544 = simd_not(tmp4);
        tmp545 = simd_or(simd_and(basis_bits.bit_3, tmp544), simd_andc(tmp159, basis_bits.bit_3));
        bytetest_a7_bb = simd_and(tmp513, tmp545);
        tmp546 = simd_and(tmp405, bytetest_b7);
        carryQ.cq[75] = carryout2carry(pablo_blk_Advance(tmp546, carryQ.get_carry_in(75), tmp547));
        tmp548 = simd_and(tmp547, bytetest_a7_bb);
        struct_Cn.cc = simd_or(tmp548, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_bc = simd_and(tmp521, tmp81);
        tmp549 = simd_and(bytetest_80_bf, tmp35);
        bytetest_96_97 = simd_and(tmp549, tmp423);
        tmp550 = simd_and(tmp405, bytetest_bc);
        carryQ.cq[76] = carryout2carry(pablo_blk_Advance(tmp550, carryQ.get_carry_in(76), tmp551));
        tmp552 = simd_and(tmp551, bytetest_96_97);
        struct_Cn.cc = simd_or(tmp552, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_bc = simd_and(tmp521, tmp81);
        bytetest_9e_9f = simd_and(tmp549, tmp100);
        tmp553 = simd_and(tmp551, bytetest_9e_9f);
        struct_Cn.cc = simd_or(tmp553, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_bd = simd_and(tmp521, tmp6);
        bytetest_86_87 = simd_and(tmp517, tmp423);
        tmp554 = simd_and(tmp405, bytetest_bd);
        carryQ.cq[77] = carryout2carry(pablo_blk_Advance(tmp554, carryQ.get_carry_in(77), tmp555));
        tmp556 = simd_and(tmp555, bytetest_86_87);
        struct_Cn.cc = simd_or(tmp556, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_bd = simd_and(tmp521, tmp6);
        bytetest_8e_8f = simd_and(tmp517, tmp100);
        tmp557 = simd_and(tmp555, bytetest_8e_8f);
        struct_Cn.cc = simd_or(tmp557, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_bd = simd_and(tmp521, tmp6);
        bytetest_98_98 = simd_and(tmp549, tmp58);
        tmp558 = simd_and(tmp555, bytetest_98_98);
        struct_Cn.cc = simd_or(tmp558, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_bd = simd_and(tmp521, tmp6);
        bytetest_9a_9a = simd_and(tmp549, tmp197);
        tmp559 = simd_and(tmp555, bytetest_9a_9a);
        struct_Cn.cc = simd_or(tmp559, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_bd = simd_and(tmp521, tmp6);
        bytetest_9c_9c = simd_and(tmp549, tmp81);
        tmp560 = simd_and(tmp555, bytetest_9c_9c);
        struct_Cn.cc = simd_or(tmp560, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_bd = simd_and(tmp521, tmp6);
        bytetest_9e_9e = simd_and(tmp549, tmp18);
        tmp561 = simd_and(tmp555, bytetest_9e_9e);
        struct_Cn.cc = simd_or(tmp561, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_bd = simd_and(tmp521, tmp6);
        bytetest_be_bf = simd_and(tmp521, tmp100);
        tmp562 = simd_and(tmp555, bytetest_be_bf);
        struct_Cn.cc = simd_or(tmp562, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_be = simd_and(tmp521, tmp18);
        bytetest_b5_b5 = simd_and(tmp521, tmp47);
        tmp563 = simd_and(tmp405, bytetest_be);
        carryQ.cq[78] = carryout2carry(pablo_blk_Advance(tmp563, carryQ.get_carry_in(78), tmp564));
        tmp565 = simd_and(tmp564, bytetest_b5_b5);
        struct_Cn.cc = simd_or(tmp565, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_bf = simd_and(tmp521, tmp25);
        bytetest_85_85 = simd_and(tmp517, tmp47);
        tmp566 = simd_and(tmp405, bytetest_bf);
        carryQ.cq[79] = carryout2carry(pablo_blk_Advance(tmp566, carryQ.get_carry_in(79), tmp567));
        tmp568 = simd_and(tmp567, bytetest_85_85);
        struct_Cn.cc = simd_or(tmp568, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_bf = simd_and(tmp521, tmp25);
        bytetest_94_95 = simd_and(tmp549, tmp165);
        tmp569 = simd_and(tmp567, bytetest_94_95);
        struct_Cn.cc = simd_or(tmp569, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_bf = simd_and(tmp521, tmp25);
        bytetest_9c_9c = simd_and(tmp549, tmp81);
        tmp570 = simd_and(tmp567, bytetest_9c_9c);
        struct_Cn.cc = simd_or(tmp570, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_bf = simd_and(tmp521, tmp25);
        bytetest_b0_b1 = simd_andc(tmp521, tmp240);
        tmp571 = simd_and(tmp567, bytetest_b0_b1);
        struct_Cn.cc = simd_or(tmp571, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_bf = simd_and(tmp521, tmp25);
        bytetest_b5_b5 = simd_and(tmp521, tmp47);
        tmp572 = simd_and(tmp567, bytetest_b5_b5);
        struct_Cn.cc = simd_or(tmp572, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_bf = simd_and(tmp521, tmp25);
        bytetest_bf_bf = simd_and(tmp521, tmp25);
        tmp573 = simd_and(tmp567, bytetest_bf_bf);
        struct_Cn.cc = simd_or(tmp573, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_81 = simd_and(tmp517, tmp107);
        bytetest_a5_a5 = simd_and(tmp512, tmp47);
        tmp574 = simd_and(tmp13, bytetest_e2);
        carryQ.cq[80] = carryout2carry(pablo_blk_Advance(tmp574, carryQ.get_carry_in(80), tmp575));
        tmp576 = simd_and(tmp575, bytetest_81);
        carryQ.cq[81] = carryout2carry(pablo_blk_Advance(tmp576, carryQ.get_carry_in(81), tmp577));
        tmp578 = simd_and(tmp577, bytetest_a5_a5);
        struct_Cn.cc = simd_or(tmp578, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_81 = simd_and(tmp517, tmp107);
        tmp579 = simd_andc(basis_bits.bit_6, tmp20);
        bytetest_b2_b3 = simd_and(tmp521, tmp579);
        tmp580 = simd_and(tmp577, bytetest_b2_b3);
        struct_Cn.cc = simd_or(tmp580, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_82 = simd_and(tmp517, tmp33);
        bytetest_8f_8f = simd_and(tmp517, tmp25);
        tmp581 = simd_and(tmp575, bytetest_82);
        carryQ.cq[82] = carryout2carry(pablo_blk_Advance(tmp581, carryQ.get_carry_in(82), tmp582));
        tmp583 = simd_and(tmp582, bytetest_8f_8f);
        struct_Cn.cc = simd_or(tmp583, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_82 = simd_and(tmp517, tmp33);
        tmp584 = simd_and(tmp549, tmp4);
        bytetest_9d_9f = simd_and(tmp584, tmp38);
        tmp585 = simd_and(tmp582, bytetest_9d_9f);
        struct_Cn.cc = simd_or(tmp585, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_83 = simd_and(tmp517, tmp120);
        bytetest_80_8f = simd_andc(bytetest_80_bf, tmp2);
        tmp586 = simd_and(tmp575, bytetest_83);
        carryQ.cq[83] = carryout2carry(pablo_blk_Advance(tmp586, carryQ.get_carry_in(83), tmp587));
        tmp588 = simd_and(tmp587, bytetest_80_8f);
        bytetest_82 = simd_and(bytetest_80_8f, tmp33);
        tmp589 = simd_and(tmp521, basis_bits.bit_4);
        bytetest_bb_bf = simd_and(tmp589, tmp72);
        tmp590 = simd_and(tmp582, bytetest_bb_bf);
        tmp591 = simd_or(tmp590, tmp588);
        struct_Cn.cc = simd_or(tmp591, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_83 = simd_and(bytetest_80_8f, tmp120);
        bytetest_b1_bf = simd_and(tmp521, tmp215);
        tmp592 = simd_and(tmp587, bytetest_b1_bf);
        struct_Cn.cc = simd_or(tmp592, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_86 = simd_and(bytetest_80_8f, tmp57);
        tmp593 = simd_and(bytetest_80_8f, basis_bits.bit_4);
        bytetest_8a_8f = simd_and(tmp593, tmp90);
        tmp594 = simd_and(tmp575, bytetest_86);
        carryQ.cq[84] = carryout2carry(pablo_blk_Advance(tmp594, carryQ.get_carry_in(84), tmp595));
        tmp596 = simd_and(tmp595, bytetest_8a_8f);
        struct_Cn.cc = simd_or(tmp596, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_8f = simd_and(bytetest_80_8f, tmp25);
        bytetest_b4_bf = simd_and(tmp521, tmp20);
        tmp597 = simd_and(tmp575, bytetest_8f);
        carryQ.cq[85] = carryout2carry(pablo_blk_Advance(tmp597, carryQ.get_carry_in(85), tmp598));
        tmp599 = simd_and(tmp598, bytetest_b4_bf);
        struct_Cn.cc = simd_or(tmp599, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_90 = simd_andc(tmp549, tmp41);
        tmp600 = simd_or(basis_bits.bit_3, tmp159);
        bytetest_a7_bf = simd_and(tmp513, tmp600);
        tmp601 = simd_and(tmp575, bytetest_90);
        carryQ.cq[86] = carryout2carry(pablo_blk_Advance(tmp601, carryQ.get_carry_in(86), tmp602));
        tmp603 = simd_and(tmp602, bytetest_a7_bf);
        struct_Cn.cc = simd_or(tmp603, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_91 = simd_and(tmp549, tmp107);
        tmp604 = simd_andc(bytetest_80_bf, basis_bits.bit_2);
        tmp605 = simd_or(basis_bits.bit_3, tmp400);
        bytetest_8b_9f = simd_and(tmp604, tmp605);
        tmp606 = simd_and(tmp575, bytetest_91);
        carryQ.cq[87] = carryout2carry(pablo_blk_Advance(tmp606, carryQ.get_carry_in(87), tmp607));
        tmp608 = simd_and(tmp607, bytetest_8b_9f);
        struct_Cn.cc = simd_or(tmp608, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_9c = simd_and(tmp549, tmp81);
        bytetest_80_80 = simd_andc(bytetest_80_8f, tmp41);
        tmp609 = simd_and(tmp575, bytetest_9c);
        carryQ.cq[88] = carryout2carry(pablo_blk_Advance(tmp609, carryQ.get_carry_in(88), tmp610));
        tmp611 = simd_and(tmp610, bytetest_80_80);
        struct_Cn.cc = simd_or(tmp611, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_ad = simd_and(tmp512, tmp6);
        tmp612 = simd_and(bytetest_80_8f, tmp4);
        bytetest_8d_8f = simd_and(tmp612, tmp38);
        tmp613 = simd_and(tmp575, bytetest_ad);
        carryQ.cq[89] = carryout2carry(pablo_blk_Advance(tmp613, carryQ.get_carry_in(89), tmp614));
        tmp615 = simd_and(tmp614, bytetest_8d_8f);
        struct_Cn.cc = simd_or(tmp615, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_ae_af = simd_and(tmp512, tmp100);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp616 = simd_and(tmp575, bytetest_ae_af);
        carryQ.cq[90] = carryout2carry(pablo_blk_Advance(tmp616, carryQ.get_carry_in(90), tmp617));
        tmp618 = simd_and(tmp617, bytetest_80_bf);
        bytetest_ad = simd_and(tmp512, tmp6);
        tmp619 = simd_and(basis_bits.bit_4, tmp90);
        tmp620 = simd_and(basis_bits.bit_3, tmp619);
        tmp621 = simd_or(basis_bits.bit_2, tmp620);
        bytetest_9a_bf = simd_and(bytetest_80_bf, tmp621);
        tmp622 = simd_and(tmp614, bytetest_9a_bf);
        tmp623 = simd_or(tmp622, tmp618);
        struct_Cn.cc = simd_or(tmp623, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_b0 = simd_andc(tmp521, tmp41);
        bytetest_af_af = simd_and(tmp512, tmp25);
        tmp624 = simd_and(tmp575, bytetest_b0);
        carryQ.cq[91] = carryout2carry(pablo_blk_Advance(tmp624, carryQ.get_carry_in(91), tmp625));
        tmp626 = simd_and(tmp625, bytetest_af_af);
        struct_Cn.cc = simd_or(tmp626, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_b1 = simd_and(tmp521, tmp107);
        bytetest_9f_9f = simd_and(tmp549, tmp25);
        tmp627 = simd_and(tmp575, bytetest_b1);
        carryQ.cq[92] = carryout2carry(pablo_blk_Advance(tmp627, carryQ.get_carry_in(92), tmp628));
        tmp629 = simd_and(tmp628, bytetest_9f_9f);
        struct_Cn.cc = simd_or(tmp629, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_b3 = simd_and(tmp521, tmp120);
        tmp630 = simd_or(simd_and(basis_bits.bit_4, tmp50), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
        bytetest_b4_b8 = simd_and(tmp521, tmp630);
        tmp631 = simd_and(tmp575, bytetest_b3);
        carryQ.cq[93] = carryout2carry(pablo_blk_Advance(tmp631, carryQ.get_carry_in(93), tmp632));
        tmp633 = simd_and(tmp632, bytetest_b4_b8);
        struct_Cn.cc = simd_or(tmp633, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_b4 = simd_and(tmp521, tmp39);
        bytetest_a6_a6 = simd_and(tmp512, tmp57);
        tmp634 = simd_and(tmp575, bytetest_b4);
        carryQ.cq[94] = carryout2carry(pablo_blk_Advance(tmp634, carryQ.get_carry_in(94), tmp635));
        tmp636 = simd_and(tmp635, bytetest_a6_a6);
        struct_Cn.cc = simd_or(tmp636, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_b4 = simd_and(tmp521, tmp39);
        tmp637 = simd_and(tmp512, basis_bits.bit_4);
        bytetest_a8_ac = simd_andc(tmp637, tmp74);
        tmp638 = simd_and(tmp635, bytetest_a8_ac);
        struct_Cn.cc = simd_or(tmp638, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_b4 = simd_and(tmp521, tmp39);
        bytetest_ae_af = simd_and(tmp512, tmp100);
        tmp639 = simd_and(tmp635, bytetest_ae_af);
        struct_Cn.cc = simd_or(tmp639, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_b5 = simd_and(tmp521, tmp47);
        bytetest_a8_ae = simd_andc(tmp637, tmp51);
        tmp640 = simd_and(tmp575, bytetest_b5);
        carryQ.cq[95] = carryout2carry(pablo_blk_Advance(tmp640, carryQ.get_carry_in(95), tmp641));
        tmp642 = simd_and(tmp641, bytetest_a8_ae);
        struct_Cn.cc = simd_or(tmp642, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_b5 = simd_and(tmp521, tmp47);
        tmp643 = simd_not(tmp51);
        tmp644 = simd_or(simd_and(basis_bits.bit_4, tmp643), simd_andc(tmp49, basis_bits.bit_4));
        bytetest_b1_be = simd_and(tmp521, tmp644);
        tmp645 = simd_and(tmp641, bytetest_b1_be);
        struct_Cn.cc = simd_or(tmp645, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_b6 = simd_and(tmp521, tmp57);
        bytetest_97_9f = simd_and(tmp549, tmp159);
        tmp646 = simd_and(tmp575, bytetest_b6);
        carryQ.cq[96] = carryout2carry(pablo_blk_Advance(tmp646, carryQ.get_carry_in(96), tmp647));
        tmp648 = simd_and(tmp647, bytetest_97_9f);
        struct_Cn.cc = simd_or(tmp648, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_b6 = simd_and(tmp521, tmp57);
        bytetest_a7_a7 = simd_and(tmp512, tmp67);
        tmp649 = simd_and(tmp647, bytetest_a7_a7);
        struct_Cn.cc = simd_or(tmp649, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_b6 = simd_and(tmp521, tmp57);
        bytetest_af_af = simd_and(tmp512, tmp25);
        tmp650 = simd_and(tmp647, bytetest_af_af);
        struct_Cn.cc = simd_or(tmp650, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_b6 = simd_and(tmp521, tmp57);
        bytetest_b7_b7 = simd_and(tmp521, tmp67);
        tmp651 = simd_and(tmp647, bytetest_b7_b7);
        struct_Cn.cc = simd_or(tmp651, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_b6 = simd_and(tmp521, tmp57);
        bytetest_bf_bf = simd_and(tmp521, tmp25);
        tmp652 = simd_and(tmp647, bytetest_bf_bf);
        struct_Cn.cc = simd_or(tmp652, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_b7 = simd_and(tmp521, tmp67);
        bytetest_87_87 = simd_and(bytetest_80_8f, tmp67);
        tmp653 = simd_and(tmp575, bytetest_b7);
        carryQ.cq[97] = carryout2carry(pablo_blk_Advance(tmp653, carryQ.get_carry_in(97), tmp654));
        tmp655 = simd_and(tmp654, bytetest_87_87);
        struct_Cn.cc = simd_or(tmp655, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_b7 = simd_and(tmp521, tmp67);
        bytetest_8f_8f = simd_and(bytetest_80_8f, tmp25);
        tmp656 = simd_and(tmp654, bytetest_8f_8f);
        struct_Cn.cc = simd_or(tmp656, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_b7 = simd_and(tmp521, tmp67);
        bytetest_97_97 = simd_and(tmp549, tmp67);
        tmp657 = simd_and(tmp654, bytetest_97_97);
        struct_Cn.cc = simd_or(tmp657, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_b7 = simd_and(tmp521, tmp67);
        bytetest_9f_9f = simd_and(tmp549, tmp25);
        tmp658 = simd_and(tmp654, bytetest_9f_9f);
        struct_Cn.cc = simd_or(tmp658, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_b9 = simd_and(tmp521, tmp144);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp659 = simd_and(tmp575, bytetest_b9);
        carryQ.cq[98] = carryout2carry(pablo_blk_Advance(tmp659, carryQ.get_carry_in(98), tmp660));
        tmp661 = simd_and(tmp660, bytetest_80_bf);
        bytetest_b8 = simd_and(tmp521, tmp58);
        bytetest_bc_bf = simd_and(tmp521, tmp4);
        tmp662 = simd_and(tmp575, bytetest_b8);
        carryQ.cq[99] = carryout2carry(pablo_blk_Advance(tmp662, carryQ.get_carry_in(99), tmp663));
        tmp664 = simd_and(tmp663, bytetest_bc_bf);
        tmp665 = simd_or(tmp664, tmp661);
        struct_Cn.cc = simd_or(tmp665, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_ba = simd_and(tmp521, tmp197);
        bytetest_9a_9a = simd_and(tmp549, tmp197);
        tmp666 = simd_and(tmp575, bytetest_ba);
        carryQ.cq[100] = carryout2carry(pablo_blk_Advance(tmp666, carryQ.get_carry_in(100), tmp667));
        tmp668 = simd_and(tmp667, bytetest_9a_9a);
        struct_Cn.cc = simd_or(tmp668, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_bb = simd_and(tmp521, tmp28);
        bytetest_b4_bf = simd_and(tmp521, tmp20);
        tmp669 = simd_and(tmp575, bytetest_bb);
        carryQ.cq[101] = carryout2carry(pablo_blk_Advance(tmp669, carryQ.get_carry_in(101), tmp670));
        tmp671 = simd_and(tmp670, bytetest_b4_bf);
        struct_Cn.cc = simd_or(tmp671, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_bf = simd_and(tmp521, tmp25);
        tmp672 = simd_not(basis_bits.bit_3);
        tmp673 = simd_and(basis_bits.bit_3, tmp192);
        tmp674 = simd_or(simd_and(basis_bits.bit_2, tmp672), simd_andc(tmp673, basis_bits.bit_2));
        bytetest_96_af = simd_and(bytetest_80_bf, tmp674);
        tmp675 = simd_and(tmp575, bytetest_bf);
        carryQ.cq[102] = carryout2carry(pablo_blk_Advance(tmp675, carryQ.get_carry_in(102), tmp676));
        tmp677 = simd_and(tmp676, bytetest_96_af);
        struct_Cn.cc = simd_or(tmp677, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_bf = simd_and(tmp521, tmp25);
        bytetest_bc_bf = simd_and(tmp521, tmp4);
        tmp678 = simd_and(tmp676, bytetest_bc_bf);
        struct_Cn.cc = simd_or(tmp678, struct_Cn.cc);
        bytetest_e3 = simd_and(tmp99, tmp120);
        bytetest_81 = simd_and(bytetest_80_8f, tmp107);
        bytetest_80_80 = simd_andc(bytetest_80_8f, tmp41);
        tmp679 = simd_and(tmp13, bytetest_e3);
        carryQ.cq[103] = carryout2carry(pablo_blk_Advance(tmp679, carryQ.get_carry_in(103), tmp680));
        tmp681 = simd_and(tmp680, bytetest_81);
        carryQ.cq[104] = carryout2carry(pablo_blk_Advance(tmp681, carryQ.get_carry_in(104), tmp682));
        tmp683 = simd_and(tmp682, bytetest_80_80);
        struct_Cn.cc = simd_or(tmp683, struct_Cn.cc);
        bytetest_e3 = simd_and(tmp99, tmp120);
        bytetest_82 = simd_and(bytetest_80_8f, tmp33);
        bytetest_97_98 = simd_and(tmp549, tmp52);
        tmp684 = simd_and(tmp680, bytetest_82);
        carryQ.cq[105] = carryout2carry(pablo_blk_Advance(tmp684, carryQ.get_carry_in(105), tmp685));
        tmp686 = simd_and(tmp685, bytetest_97_98);
        struct_Cn.cc = simd_or(tmp686, struct_Cn.cc);
        bytetest_e3 = simd_and(tmp99, tmp120);
        bytetest_84 = simd_and(bytetest_80_8f, tmp39);
        tmp687 = simd_andc(bytetest_80_8f, basis_bits.bit_4);
        bytetest_80_84 = simd_andc(tmp687, tmp74);
        tmp688 = simd_and(tmp680, bytetest_84);
        carryQ.cq[106] = carryout2carry(pablo_blk_Advance(tmp688, carryQ.get_carry_in(106), tmp689));
        tmp690 = simd_and(tmp689, bytetest_80_84);
        struct_Cn.cc = simd_or(tmp690, struct_Cn.cc);
        bytetest_e3 = simd_and(tmp99, tmp120);
        bytetest_84 = simd_and(bytetest_80_8f, tmp39);
        bytetest_ae_b0 = simd_and(tmp513, tmp186);
        tmp691 = simd_and(tmp689, bytetest_ae_b0);
        struct_Cn.cc = simd_or(tmp691, struct_Cn.cc);
        bytetest_e3 = simd_and(tmp99, tmp120);
        bytetest_86 = simd_and(bytetest_80_8f, tmp57);
        bytetest_8f_8f = simd_and(bytetest_80_8f, tmp25);
        tmp692 = simd_and(tmp680, bytetest_86);
        carryQ.cq[107] = carryout2carry(pablo_blk_Advance(tmp692, carryQ.get_carry_in(107), tmp693));
        tmp694 = simd_and(tmp693, bytetest_8f_8f);
        struct_Cn.cc = simd_or(tmp694, struct_Cn.cc);
        bytetest_e3 = simd_and(tmp99, tmp120);
        bytetest_86 = simd_and(bytetest_80_8f, tmp57);
        bytetest_bb_bf = simd_and(tmp589, tmp72);
        tmp695 = simd_and(tmp693, bytetest_bb_bf);
        struct_Cn.cc = simd_or(tmp695, struct_Cn.cc);
        bytetest_e3 = simd_and(tmp99, tmp120);
        bytetest_87 = simd_and(bytetest_80_8f, tmp67);
        bytetest_a4_af = simd_and(tmp512, tmp20);
        tmp696 = simd_and(tmp680, bytetest_87);
        carryQ.cq[108] = carryout2carry(pablo_blk_Advance(tmp696, carryQ.get_carry_in(108), tmp697));
        tmp698 = simd_and(tmp697, bytetest_a4_af);
        struct_Cn.cc = simd_or(tmp698, struct_Cn.cc);
        bytetest_e3 = simd_and(tmp99, tmp120);
        bytetest_88 = simd_and(bytetest_80_8f, tmp58);
        bytetest_9f_9f = simd_and(tmp549, tmp25);
        tmp699 = simd_and(tmp680, bytetest_88);
        carryQ.cq[109] = carryout2carry(pablo_blk_Advance(tmp699, carryQ.get_carry_in(109), tmp700));
        tmp701 = simd_and(tmp700, bytetest_9f_9f);
        struct_Cn.cc = simd_or(tmp701, struct_Cn.cc);
        bytetest_e3 = simd_and(tmp99, tmp120);
        bytetest_8b = simd_and(bytetest_80_8f, tmp28);
        bytetest_bf_bf = simd_and(tmp521, tmp25);
        tmp702 = simd_and(tmp680, bytetest_8b);
        carryQ.cq[110] = carryout2carry(pablo_blk_Advance(tmp702, carryQ.get_carry_in(110), tmp703));
        tmp704 = simd_and(tmp703, bytetest_bf_bf);
        struct_Cn.cc = simd_or(tmp704, struct_Cn.cc);
        bytetest_e4 = simd_and(tmp99, tmp39);
        bytetest_b6 = simd_and(tmp521, tmp57);
        bytetest_b6_bf = simd_and(tmp521, tmp192);
        tmp705 = simd_and(tmp13, bytetest_e4);
        carryQ.cq[111] = carryout2carry(pablo_blk_Advance(tmp705, carryQ.get_carry_in(111), tmp706));
        tmp707 = simd_and(tmp706, bytetest_b6);
        carryQ.cq[112] = carryout2carry(pablo_blk_Advance(tmp707, carryQ.get_carry_in(112), tmp708));
        tmp709 = simd_and(tmp708, bytetest_b6_bf);
        struct_Cn.cc = simd_or(tmp709, struct_Cn.cc);
        bytetest_e9 = simd_and(tmp99, tmp144);
        bytetest_bf = simd_and(tmp521, tmp25);
        tmp710 = simd_or(basis_bits.bit_2, tmp127);
        bytetest_8d_bf = simd_and(bytetest_80_bf, tmp710);
        tmp711 = simd_and(tmp13, bytetest_e9);
        carryQ.cq[113] = carryout2carry(pablo_blk_Advance(tmp711, carryQ.get_carry_in(113), tmp712));
        tmp713 = simd_and(tmp712, bytetest_bf);
        carryQ.cq[114] = carryout2carry(pablo_blk_Advance(tmp713, carryQ.get_carry_in(114), tmp714));
        tmp715 = simd_and(tmp714, bytetest_8d_bf);
        struct_Cn.cc = simd_or(tmp715, struct_Cn.cc);
        bytetest_ea = simd_and(tmp99, tmp197);
        bytetest_92 = simd_and(tmp549, tmp33);
        bytetest_8d_8f = simd_and(tmp612, tmp38);
        tmp716 = simd_and(tmp13, bytetest_ea);
        carryQ.cq[115] = carryout2carry(pablo_blk_Advance(tmp716, carryQ.get_carry_in(115), tmp717));
        tmp718 = simd_and(tmp717, bytetest_92);
        carryQ.cq[116] = carryout2carry(pablo_blk_Advance(tmp718, carryQ.get_carry_in(116), tmp719));
        tmp720 = simd_and(tmp719, bytetest_8d_8f);
        struct_Cn.cc = simd_or(tmp720, struct_Cn.cc);
        bytetest_ea = simd_and(tmp99, tmp197);
        bytetest_93 = simd_and(tmp549, tmp120);
        bytetest_87_8f = simd_and(bytetest_80_8f, tmp159);
        tmp721 = simd_and(tmp717, bytetest_93);
        carryQ.cq[117] = carryout2carry(pablo_blk_Advance(tmp721, carryQ.get_carry_in(117), tmp722));
        tmp723 = simd_and(tmp722, bytetest_87_8f);
        struct_Cn.cc = simd_or(tmp723, struct_Cn.cc);
        bytetest_ea = simd_and(tmp99, tmp197);
        bytetest_98 = simd_and(tmp549, tmp58);
        tmp724 = simd_or(basis_bits.bit_3, tmp4);
        bytetest_ac_bf = simd_and(tmp513, tmp724);
        tmp725 = simd_and(tmp717, bytetest_98);
        carryQ.cq[118] = carryout2carry(pablo_blk_Advance(tmp725, carryQ.get_carry_in(118), tmp726));
        tmp727 = simd_and(tmp726, bytetest_ac_bf);
        struct_Cn.cc = simd_or(tmp727, struct_Cn.cc);
        bytetest_ea = simd_and(tmp99, tmp197);
        bytetest_9a = simd_and(tmp549, tmp197);
        tmp728 = simd_and(tmp549, basis_bits.bit_4);
        bytetest_98_9e = simd_andc(tmp728, tmp51);
        tmp729 = simd_and(tmp717, bytetest_9a);
        carryQ.cq[119] = carryout2carry(pablo_blk_Advance(tmp729, carryQ.get_carry_in(119), tmp730));
        tmp731 = simd_and(tmp730, bytetest_98_9e);
        struct_Cn.cc = simd_or(tmp731, struct_Cn.cc);
        bytetest_ea = simd_and(tmp99, tmp197);
        bytetest_9b = simd_and(tmp549, tmp28);
        bytetest_b8_bf = simd_and(tmp521, basis_bits.bit_4);
        tmp732 = simd_and(tmp717, bytetest_9b);
        carryQ.cq[120] = carryout2carry(pablo_blk_Advance(tmp732, carryQ.get_carry_in(120), tmp733));
        tmp734 = simd_and(tmp733, bytetest_b8_bf);
        struct_Cn.cc = simd_or(tmp734, struct_Cn.cc);
        bytetest_ea = simd_and(tmp99, tmp197);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_8f_8f = simd_and(bytetest_80_8f, tmp25);
        tmp735 = simd_and(tmp717, bytetest_9e);
        carryQ.cq[121] = carryout2carry(pablo_blk_Advance(tmp735, carryQ.get_carry_in(121), tmp736));
        tmp737 = simd_and(tmp736, bytetest_8f_8f);
        struct_Cn.cc = simd_or(tmp737, struct_Cn.cc);
        bytetest_ea = simd_and(tmp99, tmp197);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_94_9f = simd_and(tmp549, tmp20);
        tmp738 = simd_and(tmp736, bytetest_94_9f);
        struct_Cn.cc = simd_or(tmp738, struct_Cn.cc);
        bytetest_ea = simd_and(tmp99, tmp197);
        bytetest_9f = simd_and(tmp549, tmp25);
        tmp739 = simd_and(basis_bits.bit_2, tmp268);
        bytetest_80_b7 = simd_andc(bytetest_80_bf, tmp739);
        tmp740 = simd_and(tmp717, bytetest_9f);
        carryQ.cq[122] = carryout2carry(pablo_blk_Advance(tmp740, carryQ.get_carry_in(122), tmp741));
        tmp742 = simd_and(tmp741, bytetest_80_b7);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_ab_bf = simd_and(tmp513, tmp605);
        tmp743 = simd_and(tmp736, bytetest_ab_bf);
        tmp744 = simd_or(tmp743, tmp742);
        struct_Cn.cc = simd_or(tmp744, struct_Cn.cc);
        bytetest_ea = simd_and(tmp99, tmp197);
        bytetest_a0 = simd_andc(tmp512, tmp41);
        bytetest_ac_af = simd_and(tmp512, tmp4);
        tmp745 = simd_and(tmp717, bytetest_a0);
        carryQ.cq[123] = carryout2carry(pablo_blk_Advance(tmp745, carryQ.get_carry_in(123), tmp746));
        tmp747 = simd_and(tmp746, bytetest_ac_af);
        struct_Cn.cc = simd_or(tmp747, struct_Cn.cc);
        bytetest_ea = simd_and(tmp99, tmp197);
        bytetest_a0 = simd_andc(tmp512, tmp41);
        bytetest_ba_bf = simd_and(bytetest_b8_bf, tmp90);
        tmp748 = simd_and(tmp746, bytetest_ba_bf);
        struct_Cn.cc = simd_or(tmp748, struct_Cn.cc);
        bytetest_ea = simd_and(tmp99, tmp197);
        bytetest_a1 = simd_and(tmp512, tmp107);
        bytetest_b8_bf = simd_and(tmp521, basis_bits.bit_4);
        tmp749 = simd_and(tmp717, bytetest_a1);
        carryQ.cq[124] = carryout2carry(pablo_blk_Advance(tmp749, carryQ.get_carry_in(124), tmp750));
        tmp751 = simd_and(tmp750, bytetest_b8_bf);
        struct_Cn.cc = simd_or(tmp751, struct_Cn.cc);
        bytetest_ea = simd_and(tmp99, tmp197);
        bytetest_a3 = simd_and(tmp512, tmp120);
        tmp752 = simd_or(simd_and(basis_bits.bit_4, tmp309), simd_andc(tmp74, basis_bits.bit_4));
        bytetest_85_8d = simd_and(bytetest_80_8f, tmp752);
        tmp753 = simd_and(tmp717, bytetest_a3);
        carryQ.cq[125] = carryout2carry(pablo_blk_Advance(tmp753, carryQ.get_carry_in(125), tmp754));
        tmp755 = simd_and(tmp754, bytetest_85_8d);
        struct_Cn.cc = simd_or(tmp755, struct_Cn.cc);
        bytetest_ea = simd_and(tmp99, tmp197);
        bytetest_a3 = simd_and(tmp512, tmp120);
        bytetest_9a_9f = simd_and(tmp728, tmp90);
        tmp756 = simd_and(tmp754, bytetest_9a_9f);
        struct_Cn.cc = simd_or(tmp756, struct_Cn.cc);
        bytetest_ea = simd_and(tmp99, tmp197);
        bytetest_a3 = simd_and(tmp512, tmp120);
        bytetest_bc_bf = simd_and(tmp521, tmp4);
        tmp757 = simd_and(tmp754, bytetest_bc_bf);
        struct_Cn.cc = simd_or(tmp757, struct_Cn.cc);
        bytetest_ea = simd_and(tmp99, tmp197);
        bytetest_a5 = simd_and(tmp512, tmp47);
        tmp758 = simd_or(simd_and(basis_bits.bit_4, tmp643), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
        bytetest_94_9e = simd_and(tmp549, tmp758);
        tmp759 = simd_and(tmp717, bytetest_a5);
        carryQ.cq[126] = carryout2carry(pablo_blk_Advance(tmp759, carryQ.get_carry_in(126), tmp760));
        tmp761 = simd_and(tmp760, bytetest_94_9e);
        struct_Cn.cc = simd_or(tmp761, struct_Cn.cc);
        bytetest_ea = simd_and(tmp99, tmp197);
        bytetest_a5 = simd_and(tmp512, tmp47);
        bytetest_bd_bf = simd_and(bytetest_bc_bf, tmp38);
        tmp762 = simd_and(tmp760, bytetest_bd_bf);
        struct_Cn.cc = simd_or(tmp762, struct_Cn.cc);
        bytetest_ea = simd_and(tmp99, tmp197);
        bytetest_a7 = simd_and(tmp512, tmp67);
        bytetest_8e_8e = simd_and(bytetest_80_8f, tmp18);
        tmp763 = simd_and(tmp717, bytetest_a7);
        carryQ.cq[127] = carryout2carry(pablo_blk_Advance(tmp763, carryQ.get_carry_in(127), tmp764));
        tmp765 = simd_and(tmp764, bytetest_8e_8e);
        struct_Cn.cc = simd_or(tmp765, struct_Cn.cc);
        bytetest_ea = simd_and(tmp99, tmp197);
        bytetest_a7 = simd_and(tmp512, tmp67);
        bytetest_9a_9d = simd_and(tmp728, tmp258);
        tmp766 = simd_and(tmp764, bytetest_9a_9d);
        struct_Cn.cc = simd_or(tmp766, struct_Cn.cc);
        bytetest_ea = simd_and(tmp99, tmp197);
        bytetest_a7 = simd_and(tmp512, tmp67);
        bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp767 = simd_and(tmp764, bytetest_a0_bf);
        struct_Cn.cc = simd_or(tmp767, struct_Cn.cc);
        bytetest_ea = simd_and(tmp99, tmp197);
        bytetest_a8 = simd_and(tmp512, tmp58);
        bytetest_b7_bf = simd_and(tmp521, tmp159);
        tmp768 = simd_and(tmp717, bytetest_a8);
        carryQ.cq[128] = carryout2carry(pablo_blk_Advance(tmp768, carryQ.get_carry_in(128), tmp769));
        tmp770 = simd_and(tmp769, bytetest_b7_bf);
        struct_Cn.cc = simd_or(tmp770, struct_Cn.cc);
        bytetest_ea = simd_and(tmp99, tmp197);
        bytetest_a9 = simd_and(tmp512, tmp144);
        bytetest_8e_8f = simd_and(bytetest_80_8f, tmp100);
        tmp771 = simd_and(tmp717, bytetest_a9);
        carryQ.cq[129] = carryout2carry(pablo_blk_Advance(tmp771, carryQ.get_carry_in(129), tmp772));
        tmp773 = simd_and(tmp772, bytetest_8e_8f);
        struct_Cn.cc = simd_or(tmp773, struct_Cn.cc);
        bytetest_ea = simd_and(tmp99, tmp197);
        bytetest_a9 = simd_and(tmp512, tmp144);
        bytetest_9a_9b = simd_and(tmp549, tmp151);
        tmp774 = simd_and(tmp772, bytetest_9a_9b);
        struct_Cn.cc = simd_or(tmp774, struct_Cn.cc);
        bytetest_ea = simd_and(tmp99, tmp197);
        bytetest_a9 = simd_and(tmp512, tmp144);
        bytetest_bc_bf = simd_and(tmp521, tmp4);
        tmp775 = simd_and(tmp772, bytetest_bc_bf);
        struct_Cn.cc = simd_or(tmp775, struct_Cn.cc);
        bytetest_ea = simd_and(tmp99, tmp197);
        bytetest_ab = simd_and(tmp512, tmp28);
        tmp776 = simd_not(tmp400);
        tmp777 = simd_or(tmp20, tmp24);
        tmp778 = simd_or(simd_and(basis_bits.bit_3, tmp776), simd_andc(tmp777, basis_bits.bit_3));
        bytetest_83_9a = simd_and(tmp604, tmp778);
        tmp779 = simd_and(tmp717, bytetest_ab);
        carryQ.cq[130] = carryout2carry(pablo_blk_Advance(tmp779, carryQ.get_carry_in(130), tmp780));
        tmp781 = simd_and(tmp780, bytetest_83_9a);
        struct_Cn.cc = simd_or(tmp781, struct_Cn.cc);
        bytetest_ea = simd_and(tmp99, tmp197);
        bytetest_ac = simd_and(tmp512, tmp81);
        bytetest_80_80 = simd_andc(bytetest_80_8f, tmp41);
        tmp782 = simd_and(tmp717, bytetest_ac);
        carryQ.cq[131] = carryout2carry(pablo_blk_Advance(tmp782, carryQ.get_carry_in(131), tmp783));
        tmp784 = simd_and(tmp783, bytetest_80_80);
        bytetest_ab = simd_and(tmp512, tmp28);
        bytetest_b7_bf = simd_and(tmp521, tmp159);
        tmp785 = simd_and(tmp780, bytetest_b7_bf);
        tmp786 = simd_or(tmp785, tmp784);
        struct_Cn.cc = simd_or(tmp786, struct_Cn.cc);
        bytetest_ea = simd_and(tmp99, tmp197);
        bytetest_ac = simd_and(tmp512, tmp81);
        bytetest_87_88 = simd_and(bytetest_80_8f, tmp52);
        tmp787 = simd_and(tmp783, bytetest_87_88);
        struct_Cn.cc = simd_or(tmp787, struct_Cn.cc);
        bytetest_ea = simd_and(tmp99, tmp197);
        bytetest_ac = simd_and(tmp512, tmp81);
        tmp788 = simd_or(simd_and(basis_bits.bit_3, tmp42), simd_andc(tmp25, basis_bits.bit_3));
        bytetest_8f_90 = simd_and(tmp604, tmp788);
        tmp789 = simd_and(tmp783, bytetest_8f_90);
        struct_Cn.cc = simd_or(tmp789, struct_Cn.cc);
        bytetest_ea = simd_and(tmp99, tmp197);
        bytetest_ac = simd_and(tmp512, tmp81);
        bytetest_97_9f = simd_and(tmp549, tmp159);
        tmp790 = simd_and(tmp783, bytetest_97_9f);
        struct_Cn.cc = simd_or(tmp790, struct_Cn.cc);
        bytetest_ea = simd_and(tmp99, tmp197);
        bytetest_ac = simd_and(tmp512, tmp81);
        bytetest_a7_a7 = simd_and(tmp512, tmp67);
        tmp791 = simd_and(tmp783, bytetest_a7_a7);
        struct_Cn.cc = simd_or(tmp791, struct_Cn.cc);
        bytetest_ea = simd_and(tmp99, tmp197);
        bytetest_ad_ae = simd_and(bytetest_ac_af, tmp140);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp792 = simd_and(tmp717, bytetest_ad_ae);
        carryQ.cq[132] = carryout2carry(pablo_blk_Advance(tmp792, carryQ.get_carry_in(132), tmp793));
        tmp794 = simd_and(tmp793, bytetest_80_bf);
        bytetest_ac = simd_and(tmp512, tmp81);
        tmp795 = simd_or(basis_bits.bit_3, tmp25);
        bytetest_af_bf = simd_and(bytetest_a0_bf, tmp795);
        tmp796 = simd_and(tmp783, bytetest_af_bf);
        tmp797 = simd_or(tmp796, tmp794);
        struct_Cn.cc = simd_or(tmp797, struct_Cn.cc);
        bytetest_ea = simd_and(tmp99, tmp197);
        bytetest_af = simd_and(tmp512, tmp25);
        bytetest_ae_af = simd_and(tmp512, tmp100);
        tmp798 = simd_and(tmp717, bytetest_af);
        carryQ.cq[133] = carryout2carry(pablo_blk_Advance(tmp798, carryQ.get_carry_in(133), tmp799));
        tmp800 = simd_and(tmp799, bytetest_ae_af);
        struct_Cn.cc = simd_or(tmp800, struct_Cn.cc);
        bytetest_ea = simd_and(tmp99, tmp197);
        bytetest_af = simd_and(tmp512, tmp25);
        bytetest_ba_bf = simd_and(bytetest_b8_bf, tmp90);
        tmp801 = simd_and(tmp799, bytetest_ba_bf);
        struct_Cn.cc = simd_or(tmp801, struct_Cn.cc);
        bytetest_ed = simd_and(tmp99, tmp6);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_a4_af = simd_and(tmp512, tmp20);
        tmp802 = simd_and(tmp13, bytetest_ed);
        carryQ.cq[134] = carryout2carry(pablo_blk_Advance(tmp802, carryQ.get_carry_in(134), tmp803));
        tmp804 = simd_and(tmp803, bytetest_9e);
        carryQ.cq[135] = carryout2carry(pablo_blk_Advance(tmp804, carryQ.get_carry_in(135), tmp805));
        tmp806 = simd_and(tmp805, bytetest_a4_af);
        struct_Cn.cc = simd_or(tmp806, struct_Cn.cc);
        bytetest_ed = simd_and(tmp99, tmp6);
        bytetest_9f = simd_and(tmp549, tmp25);
        tmp807 = simd_not(tmp72);
        tmp808 = simd_or(simd_and(basis_bits.bit_4, tmp807), simd_andc(tmp51, basis_bits.bit_4));
        bytetest_87_8a = simd_and(bytetest_80_8f, tmp808);
        tmp809 = simd_and(tmp803, bytetest_9f);
        carryQ.cq[136] = carryout2carry(pablo_blk_Advance(tmp809, carryQ.get_carry_in(136), tmp810));
        tmp811 = simd_and(tmp810, bytetest_87_8a);
        struct_Cn.cc = simd_or(tmp811, struct_Cn.cc);
        bytetest_ed = simd_and(tmp99, tmp6);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_bc_bf = simd_and(tmp521, tmp4);
        tmp812 = simd_and(tmp810, bytetest_bc_bf);
        struct_Cn.cc = simd_or(tmp812, struct_Cn.cc);
        bytetest_ef = simd_and(tmp99, tmp25);
        bytetest_a9 = simd_and(tmp512, tmp144);
        bytetest_ae_af = simd_and(tmp512, tmp100);
        tmp813 = simd_and(tmp13, bytetest_ef);
        carryQ.cq[137] = carryout2carry(pablo_blk_Advance(tmp813, carryQ.get_carry_in(137), tmp814));
        tmp815 = simd_and(tmp814, bytetest_a9);
        carryQ.cq[138] = carryout2carry(pablo_blk_Advance(tmp815, carryQ.get_carry_in(138), tmp816));
        tmp817 = simd_and(tmp816, bytetest_ae_af);
        struct_Cn.cc = simd_or(tmp817, struct_Cn.cc);
        bytetest_ef = simd_and(tmp99, tmp25);
        bytetest_ab = simd_and(tmp512, tmp28);
        bytetest_9a_bf = simd_and(bytetest_80_bf, tmp621);
        tmp818 = simd_and(tmp814, bytetest_ab);
        carryQ.cq[139] = carryout2carry(pablo_blk_Advance(tmp818, carryQ.get_carry_in(139), tmp819));
        tmp820 = simd_and(tmp819, bytetest_9a_bf);
        struct_Cn.cc = simd_or(tmp820, struct_Cn.cc);
        bytetest_ef = simd_and(tmp99, tmp25);
        bytetest_ac = simd_and(tmp512, tmp81);
        tmp821 = simd_not(tmp777);
        tmp822 = simd_or(simd_and(basis_bits.bit_3, tmp821), simd_andc(tmp159, basis_bits.bit_3));
        bytetest_87_92 = simd_and(tmp604, tmp822);
        tmp823 = simd_and(tmp814, bytetest_ac);
        carryQ.cq[140] = carryout2carry(pablo_blk_Advance(tmp823, carryQ.get_carry_in(140), tmp824));
        tmp825 = simd_and(tmp824, bytetest_87_92);
        struct_Cn.cc = simd_or(tmp825, struct_Cn.cc);
        bytetest_ef = simd_and(tmp99, tmp25);
        bytetest_ac = simd_and(tmp512, tmp81);
        bytetest_98_9c = simd_andc(tmp728, tmp74);
        tmp826 = simd_and(tmp824, bytetest_98_9c);
        struct_Cn.cc = simd_or(tmp826, struct_Cn.cc);
        bytetest_ef = simd_and(tmp99, tmp25);
        bytetest_ac = simd_and(tmp512, tmp81);
        bytetest_b7_b7 = simd_and(tmp521, tmp67);
        tmp827 = simd_and(tmp824, bytetest_b7_b7);
        struct_Cn.cc = simd_or(tmp827, struct_Cn.cc);
        bytetest_ef = simd_and(tmp99, tmp25);
        bytetest_ac = simd_and(tmp512, tmp81);
        bytetest_bd_bd = simd_and(tmp521, tmp6);
        tmp828 = simd_and(tmp824, bytetest_bd_bd);
        struct_Cn.cc = simd_or(tmp828, struct_Cn.cc);
        bytetest_ef = simd_and(tmp99, tmp25);
        bytetest_ac = simd_and(tmp512, tmp81);
        bytetest_bf_bf = simd_and(tmp521, tmp25);
        tmp829 = simd_and(tmp824, bytetest_bf_bf);
        struct_Cn.cc = simd_or(tmp829, struct_Cn.cc);
        bytetest_ef = simd_and(tmp99, tmp25);
        bytetest_ad = simd_and(tmp512, tmp6);
        bytetest_82_82 = simd_and(bytetest_80_8f, tmp33);
        tmp830 = simd_and(tmp814, bytetest_ad);
        carryQ.cq[141] = carryout2carry(pablo_blk_Advance(tmp830, carryQ.get_carry_in(141), tmp831));
        tmp832 = simd_and(tmp831, bytetest_82_82);
        struct_Cn.cc = simd_or(tmp832, struct_Cn.cc);
        bytetest_ef = simd_and(tmp99, tmp25);
        bytetest_ad = simd_and(tmp512, tmp6);
        bytetest_85_85 = simd_and(bytetest_80_8f, tmp47);
        tmp833 = simd_and(tmp831, bytetest_85_85);
        struct_Cn.cc = simd_or(tmp833, struct_Cn.cc);
        bytetest_ef = simd_and(tmp99, tmp25);
        bytetest_af = simd_and(tmp512, tmp25);
        tmp834 = simd_or(simd_and(basis_bits.bit_3, tmp821), simd_andc(tmp240, basis_bits.bit_3));
        bytetest_82_92 = simd_and(tmp604, tmp834);
        tmp835 = simd_and(tmp814, bytetest_af);
        carryQ.cq[142] = carryout2carry(pablo_blk_Advance(tmp835, carryQ.get_carry_in(142), tmp836));
        tmp837 = simd_and(tmp836, bytetest_82_92);
        struct_Cn.cc = simd_or(tmp837, struct_Cn.cc);
        bytetest_ef = simd_and(tmp99, tmp25);
        bytetest_b5 = simd_and(tmp521, tmp47);
        bytetest_80_8f = simd_andc(bytetest_80_bf, tmp2);
        tmp838 = simd_and(tmp814, bytetest_b5);
        carryQ.cq[143] = carryout2carry(pablo_blk_Advance(tmp838, carryQ.get_carry_in(143), tmp839));
        tmp840 = simd_and(tmp839, bytetest_80_8f);
        struct_Cn.cc = simd_or(tmp840, struct_Cn.cc);
        bytetest_ef = simd_and(tmp99, tmp25);
        bytetest_b6 = simd_and(tmp521, tmp57);
        bytetest_90_91 = simd_andc(tmp549, tmp240);
        tmp841 = simd_and(tmp814, bytetest_b6);
        carryQ.cq[144] = carryout2carry(pablo_blk_Advance(tmp841, carryQ.get_carry_in(144), tmp842));
        tmp843 = simd_and(tmp842, bytetest_90_91);
        struct_Cn.cc = simd_or(tmp843, struct_Cn.cc);
        bytetest_ef = simd_and(tmp99, tmp25);
        bytetest_b7 = simd_and(tmp521, tmp67);
        tmp844 = simd_or(basis_bits.bit_3, basis_bits.bit_4);
        tmp845 = simd_or(simd_and(basis_bits.bit_2, tmp672), simd_andc(tmp844, basis_bits.bit_2));
        bytetest_88_af = simd_and(bytetest_80_bf, tmp845);
        tmp846 = simd_and(tmp814, bytetest_b7);
        carryQ.cq[145] = carryout2carry(pablo_blk_Advance(tmp846, carryQ.get_carry_in(145), tmp847));
        tmp848 = simd_and(tmp847, bytetest_88_af);
        struct_Cn.cc = simd_or(tmp848, struct_Cn.cc);
        bytetest_ef = simd_and(tmp99, tmp25);
        bytetest_b7 = simd_and(tmp521, tmp67);
        bytetest_be_bf = simd_and(tmp521, tmp100);
        tmp849 = simd_and(tmp847, bytetest_be_bf);
        struct_Cn.cc = simd_or(tmp849, struct_Cn.cc);
        bytetest_ef = simd_and(tmp99, tmp25);
        bytetest_b8 = simd_and(tmp521, tmp58);
        bytetest_9a_9f = simd_and(tmp728, tmp90);
        tmp850 = simd_and(tmp814, bytetest_b8);
        carryQ.cq[146] = carryout2carry(pablo_blk_Advance(tmp850, carryQ.get_carry_in(146), tmp851));
        tmp852 = simd_and(tmp851, bytetest_9a_9f);
        struct_Cn.cc = simd_or(tmp852, struct_Cn.cc);
        bytetest_ef = simd_and(tmp99, tmp25);
        bytetest_b8 = simd_and(tmp521, tmp58);
        bytetest_a7_af = simd_and(tmp512, tmp159);
        tmp853 = simd_and(tmp851, bytetest_a7_af);
        struct_Cn.cc = simd_or(tmp853, struct_Cn.cc);
        bytetest_ef = simd_and(tmp99, tmp25);
        bytetest_b9 = simd_and(tmp521, tmp144);
        bytetest_93_93 = simd_and(tmp549, tmp120);
        tmp854 = simd_and(tmp814, bytetest_b9);
        carryQ.cq[147] = carryout2carry(pablo_blk_Advance(tmp854, carryQ.get_carry_in(147), tmp855));
        tmp856 = simd_and(tmp855, bytetest_93_93);
        struct_Cn.cc = simd_or(tmp856, struct_Cn.cc);
        bytetest_ef = simd_and(tmp99, tmp25);
        bytetest_b9 = simd_and(tmp521, tmp144);
        bytetest_a7_a7 = simd_and(tmp512, tmp67);
        tmp857 = simd_and(tmp855, bytetest_a7_a7);
        struct_Cn.cc = simd_or(tmp857, struct_Cn.cc);
        bytetest_ef = simd_and(tmp99, tmp25);
        bytetest_b9 = simd_and(tmp521, tmp144);
        bytetest_ac_af = simd_and(tmp512, tmp4);
        tmp858 = simd_and(tmp855, bytetest_ac_af);
        struct_Cn.cc = simd_or(tmp858, struct_Cn.cc);
        bytetest_ef = simd_and(tmp99, tmp25);
        bytetest_b9 = simd_and(tmp521, tmp144);
        bytetest_b5_b5 = simd_and(tmp521, tmp47);
        tmp859 = simd_and(tmp855, bytetest_b5_b5);
        struct_Cn.cc = simd_or(tmp859, struct_Cn.cc);
        bytetest_ef = simd_and(tmp99, tmp25);
        bytetest_bb = simd_and(tmp521, tmp28);
        bytetest_bd_be = simd_and(bytetest_bc_bf, tmp140);
        tmp860 = simd_and(tmp814, bytetest_bb);
        carryQ.cq[148] = carryout2carry(pablo_blk_Advance(tmp860, carryQ.get_carry_in(148), tmp861));
        tmp862 = simd_and(tmp861, bytetest_bd_be);
        struct_Cn.cc = simd_or(tmp862, struct_Cn.cc);
        bytetest_ef = simd_and(tmp99, tmp25);
        bytetest_bc = simd_and(tmp521, tmp81);
        bytetest_80_80 = simd_andc(bytetest_80_8f, tmp41);
        tmp863 = simd_and(tmp814, bytetest_bc);
        carryQ.cq[149] = carryout2carry(pablo_blk_Advance(tmp863, carryQ.get_carry_in(149), tmp864));
        tmp865 = simd_and(tmp864, bytetest_80_80);
        struct_Cn.cc = simd_or(tmp865, struct_Cn.cc);
        bytetest_ef = simd_and(tmp99, tmp25);
        bytetest_bf = simd_and(tmp521, tmp25);
        bytetest_80_81 = simd_andc(bytetest_80_8f, tmp240);
        tmp866 = simd_and(tmp814, bytetest_bf);
        carryQ.cq[150] = carryout2carry(pablo_blk_Advance(tmp866, carryQ.get_carry_in(150), tmp867));
        tmp868 = simd_and(tmp867, bytetest_80_81);
        bytetest_be = simd_and(tmp521, tmp18);
        bytetest_bf_bf = simd_and(tmp521, tmp25);
        tmp869 = simd_and(tmp814, bytetest_be);
        carryQ.cq[151] = carryout2carry(pablo_blk_Advance(tmp869, carryQ.get_carry_in(151), tmp870));
        tmp871 = simd_and(tmp870, bytetest_bf_bf);
        tmp872 = simd_or(tmp871, tmp868);
        struct_Cn.cc = simd_or(tmp872, struct_Cn.cc);
        bytetest_ef = simd_and(tmp99, tmp25);
        bytetest_bf = simd_and(tmp521, tmp25);
        bytetest_88_89 = simd_and(bytetest_80_8f, tmp11);
        tmp873 = simd_and(tmp867, bytetest_88_89);
        struct_Cn.cc = simd_or(tmp873, struct_Cn.cc);
        bytetest_ef = simd_and(tmp99, tmp25);
        bytetest_bf = simd_and(tmp521, tmp25);
        bytetest_90_91 = simd_andc(tmp549, tmp240);
        tmp874 = simd_and(tmp867, bytetest_90_91);
        struct_Cn.cc = simd_or(tmp874, struct_Cn.cc);
        bytetest_ef = simd_and(tmp99, tmp25);
        bytetest_bf = simd_and(tmp521, tmp25);
        bytetest_98_99 = simd_and(tmp549, tmp11);
        tmp875 = simd_and(tmp867, bytetest_98_99);
        struct_Cn.cc = simd_or(tmp875, struct_Cn.cc);
        bytetest_ef = simd_and(tmp99, tmp25);
        bytetest_bf = simd_and(tmp521, tmp25);
        bytetest_9d_9f = simd_and(tmp584, tmp38);
        tmp876 = simd_and(tmp867, bytetest_9d_9f);
        struct_Cn.cc = simd_or(tmp876, struct_Cn.cc);
        bytetest_ef = simd_and(tmp99, tmp25);
        bytetest_bf = simd_and(tmp521, tmp25);
        bytetest_a7_a7 = simd_and(tmp512, tmp67);
        tmp877 = simd_and(tmp867, bytetest_a7_a7);
        struct_Cn.cc = simd_or(tmp877, struct_Cn.cc);
        bytetest_ef = simd_and(tmp99, tmp25);
        bytetest_bf = simd_and(tmp521, tmp25);
        tmp878 = simd_and(basis_bits.bit_4, tmp49);
        tmp879 = simd_not(tmp878);
        tmp880 = simd_or(simd_and(basis_bits.bit_3, tmp879), simd_andc(tmp25, basis_bits.bit_3));
        bytetest_af_b8 = simd_and(bytetest_a0_bf, tmp880);
        tmp881 = simd_and(tmp867, bytetest_af_b8);
        struct_Cn.cc = simd_or(tmp881, struct_Cn.cc);
        bytetest_ef = simd_and(tmp99, tmp25);
        bytetest_bf = simd_and(tmp521, tmp25);
        bytetest_be_bf = simd_and(tmp521, tmp100);
        tmp882 = simd_and(tmp867, bytetest_be_bf);
        struct_Cn.cc = simd_or(tmp882, struct_Cn.cc);
        tmp883 = simd_and(tmp1, tmp8);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_80 = simd_andc(bytetest_80_8f, tmp41);
        bytetest_8c_8c = simd_and(bytetest_80_8f, tmp81);
        tmp884 = simd_and(tmp13, bytetest_f0);
        carryQ.cq[152] = carryout2carry(pablo_blk_Advance(tmp884, carryQ.get_carry_in(152), tmp885));
        tmp886 = simd_and(tmp885, bytetest_90);
        carryQ.cq[153] = carryout2carry(pablo_blk_Advance(tmp886, carryQ.get_carry_in(153), tmp887));
        tmp888 = simd_and(tmp887, bytetest_80);
        carryQ.cq[154] = carryout2carry(pablo_blk_Advance(tmp888, carryQ.get_carry_in(154), tmp889));
        tmp890 = simd_and(tmp889, bytetest_8c_8c);
        struct_Cn.cc = simd_or(tmp890, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_80 = simd_andc(bytetest_80_8f, tmp41);
        bytetest_a7_a7 = simd_and(tmp512, tmp67);
        tmp891 = simd_and(tmp889, bytetest_a7_a7);
        struct_Cn.cc = simd_or(tmp891, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_80 = simd_andc(bytetest_80_8f, tmp41);
        bytetest_bb_bb = simd_and(tmp521, tmp28);
        tmp892 = simd_and(tmp889, bytetest_bb_bb);
        struct_Cn.cc = simd_or(tmp892, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_80 = simd_andc(bytetest_80_8f, tmp41);
        bytetest_be_be = simd_and(tmp521, tmp18);
        tmp893 = simd_and(tmp889, bytetest_be_be);
        struct_Cn.cc = simd_or(tmp893, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_81 = simd_and(bytetest_80_8f, tmp107);
        bytetest_8e_8f = simd_and(bytetest_80_8f, tmp100);
        tmp894 = simd_and(tmp887, bytetest_81);
        carryQ.cq[155] = carryout2carry(pablo_blk_Advance(tmp894, carryQ.get_carry_in(155), tmp895));
        tmp896 = simd_and(tmp895, bytetest_8e_8f);
        struct_Cn.cc = simd_or(tmp896, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_81 = simd_and(bytetest_80_8f, tmp107);
        tmp897 = simd_and(basis_bits.bit_3, tmp100);
        tmp898 = simd_or(basis_bits.bit_2, tmp897);
        bytetest_9e_bf = simd_and(bytetest_80_bf, tmp898);
        tmp899 = simd_and(tmp895, bytetest_9e_bf);
        struct_Cn.cc = simd_or(tmp899, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_83 = simd_and(bytetest_80_8f, tmp120);
        bytetest_bb_bf = simd_and(bytetest_b8_bf, tmp72);
        tmp900 = simd_and(tmp887, bytetest_83);
        carryQ.cq[156] = carryout2carry(pablo_blk_Advance(tmp900, carryQ.get_carry_in(156), tmp901));
        tmp902 = simd_and(tmp901, bytetest_bb_bf);
        struct_Cn.cc = simd_or(tmp902, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_84 = simd_and(bytetest_80_8f, tmp39);
        bytetest_83_86 = simd_and(tmp687, tmp64);
        tmp903 = simd_and(tmp887, bytetest_84);
        carryQ.cq[157] = carryout2carry(pablo_blk_Advance(tmp903, carryQ.get_carry_in(157), tmp904));
        tmp905 = simd_and(tmp904, bytetest_83_86);
        struct_Cn.cc = simd_or(tmp905, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_84 = simd_and(bytetest_80_8f, tmp39);
        tmp906 = simd_and(tmp521, tmp37);
        bytetest_b4_b6 = simd_andc(tmp906, tmp24);
        tmp907 = simd_and(tmp904, bytetest_b4_b6);
        struct_Cn.cc = simd_or(tmp907, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_86 = simd_and(bytetest_80_8f, tmp57);
        bytetest_8b_8f = simd_and(tmp593, tmp72);
        tmp908 = simd_and(tmp887, bytetest_86);
        carryQ.cq[158] = carryout2carry(pablo_blk_Advance(tmp908, carryQ.get_carry_in(158), tmp909));
        tmp910 = simd_and(tmp909, bytetest_8b_8f);
        struct_Cn.cc = simd_or(tmp910, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_87 = simd_and(bytetest_80_8f, tmp67);
        bytetest_80_8f = simd_andc(bytetest_80_bf, tmp2);
        tmp911 = simd_and(tmp887, bytetest_87);
        carryQ.cq[159] = carryout2carry(pablo_blk_Advance(tmp911, carryQ.get_carry_in(159), tmp912));
        tmp913 = simd_and(tmp912, bytetest_80_8f);
        bytetest_86 = simd_and(bytetest_80_8f, tmp57);
        bytetest_9c_bf = simd_and(bytetest_80_bf, tmp361);
        tmp914 = simd_and(tmp909, bytetest_9c_bf);
        tmp915 = simd_or(tmp914, tmp913);
        struct_Cn.cc = simd_or(tmp915, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_88_89 = simd_and(bytetest_80_8f, tmp11);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp916 = simd_and(tmp887, bytetest_88_89);
        carryQ.cq[160] = carryout2carry(pablo_blk_Advance(tmp916, carryQ.get_carry_in(160), tmp917));
        tmp918 = simd_and(tmp917, bytetest_80_bf);
        bytetest_87 = simd_and(bytetest_80_8f, tmp67);
        bytetest_be_bf = simd_and(tmp521, tmp100);
        tmp919 = simd_and(tmp912, bytetest_be_bf);
        tmp920 = simd_or(tmp919, tmp918);
        struct_Cn.cc = simd_or(tmp920, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_8a = simd_and(bytetest_80_8f, tmp197);
        bytetest_9d_9f = simd_and(tmp584, tmp38);
        tmp921 = simd_and(tmp887, bytetest_8a);
        carryQ.cq[161] = carryout2carry(pablo_blk_Advance(tmp921, carryQ.get_carry_in(161), tmp922));
        tmp923 = simd_and(tmp922, bytetest_9d_9f);
        struct_Cn.cc = simd_or(tmp923, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_8b = simd_and(bytetest_80_8f, tmp28);
        tmp924 = simd_and(basis_bits.bit_3, tmp41);
        tmp925 = simd_or(basis_bits.bit_2, tmp924);
        bytetest_91_bf = simd_and(bytetest_80_bf, tmp925);
        tmp926 = simd_and(tmp887, bytetest_8b);
        carryQ.cq[162] = carryout2carry(pablo_blk_Advance(tmp926, carryQ.get_carry_in(162), tmp927));
        tmp928 = simd_and(tmp927, bytetest_91_bf);
        struct_Cn.cc = simd_or(tmp928, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_8c = simd_and(bytetest_80_8f, tmp81);
        bytetest_9f_9f = simd_and(tmp549, tmp25);
        tmp929 = simd_and(tmp887, bytetest_8c);
        carryQ.cq[163] = carryout2carry(pablo_blk_Advance(tmp929, carryQ.get_carry_in(163), tmp930));
        tmp931 = simd_and(tmp930, bytetest_9f_9f);
        struct_Cn.cc = simd_or(tmp931, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_8c = simd_and(bytetest_80_8f, tmp81);
        bytetest_a4_af = simd_and(tmp512, tmp20);
        tmp932 = simd_and(tmp930, bytetest_a4_af);
        struct_Cn.cc = simd_or(tmp932, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_8d = simd_and(bytetest_80_8f, tmp6);
        tmp933 = simd_or(basis_bits.bit_2, tmp605);
        bytetest_8b_bf = simd_and(bytetest_80_bf, tmp933);
        tmp934 = simd_and(tmp887, bytetest_8d);
        carryQ.cq[164] = carryout2carry(pablo_blk_Advance(tmp934, carryQ.get_carry_in(164), tmp935));
        tmp936 = simd_and(tmp935, bytetest_8b_bf);
        struct_Cn.cc = simd_or(tmp936, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_8e = simd_and(bytetest_80_8f, tmp18);
        bytetest_9e_9e = simd_and(tmp549, tmp18);
        tmp937 = simd_and(tmp887, bytetest_8e);
        carryQ.cq[165] = carryout2carry(pablo_blk_Advance(tmp937, carryQ.get_carry_in(165), tmp938));
        tmp939 = simd_and(tmp938, bytetest_9e_9e);
        struct_Cn.cc = simd_or(tmp939, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_8f = simd_and(bytetest_80_8f, tmp25);
        bytetest_84_87 = simd_and(bytetest_80_8f, tmp37);
        tmp940 = simd_and(tmp887, bytetest_8f);
        carryQ.cq[166] = carryout2carry(pablo_blk_Advance(tmp940, carryQ.get_carry_in(166), tmp941));
        tmp942 = simd_and(tmp941, bytetest_84_87);
        struct_Cn.cc = simd_or(tmp942, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_8f = simd_and(bytetest_80_8f, tmp25);
        tmp943 = simd_or(basis_bits.bit_2, tmp673);
        bytetest_96_bf = simd_and(bytetest_80_bf, tmp943);
        tmp944 = simd_and(tmp941, bytetest_96_bf);
        struct_Cn.cc = simd_or(tmp944, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_92 = simd_and(tmp549, tmp33);
        bytetest_9e_9f = simd_and(tmp549, tmp100);
        tmp945 = simd_and(tmp887, bytetest_92);
        carryQ.cq[167] = carryout2carry(pablo_blk_Advance(tmp945, carryQ.get_carry_in(167), tmp946));
        tmp947 = simd_and(tmp946, bytetest_9e_9f);
        struct_Cn.cc = simd_or(tmp947, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_93_9f = simd_and(tmp549, tmp318);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp948 = simd_and(tmp887, bytetest_93_9f);
        carryQ.cq[168] = carryout2carry(pablo_blk_Advance(tmp948, carryQ.get_carry_in(168), tmp949));
        tmp950 = simd_and(tmp949, bytetest_80_bf);
        bytetest_92 = simd_and(tmp549, tmp33);
        tmp951 = simd_or(basis_bits.bit_3, tmp619);
        bytetest_aa_bf = simd_and(bytetest_a0_bf, tmp951);
        tmp952 = simd_and(tmp946, bytetest_aa_bf);
        tmp953 = simd_or(tmp952, tmp950);
        struct_Cn.cc = simd_or(tmp953, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_a0 = simd_andc(tmp512, tmp41);
        bytetest_86_87 = simd_and(bytetest_80_8f, tmp423);
        tmp954 = simd_and(tmp887, bytetest_a0);
        carryQ.cq[169] = carryout2carry(pablo_blk_Advance(tmp954, carryQ.get_carry_in(169), tmp955));
        tmp956 = simd_and(tmp955, bytetest_86_87);
        struct_Cn.cc = simd_or(tmp956, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_a0 = simd_andc(tmp512, tmp41);
        bytetest_89_89 = simd_and(bytetest_80_8f, tmp144);
        tmp957 = simd_and(tmp955, bytetest_89_89);
        struct_Cn.cc = simd_or(tmp957, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_a0 = simd_andc(tmp512, tmp41);
        bytetest_b6_b6 = simd_and(tmp521, tmp57);
        tmp958 = simd_and(tmp955, bytetest_b6_b6);
        struct_Cn.cc = simd_or(tmp958, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_a0 = simd_andc(tmp512, tmp41);
        bytetest_b9_bb = simd_and(tmp529, tmp38);
        tmp959 = simd_and(tmp955, bytetest_b9_bb);
        struct_Cn.cc = simd_or(tmp959, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_a0 = simd_andc(tmp512, tmp41);
        bytetest_bd_be = simd_and(bytetest_bc_bf, tmp140);
        tmp960 = simd_and(tmp955, bytetest_bd_be);
        struct_Cn.cc = simd_or(tmp960, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_a1 = simd_and(tmp512, tmp107);
        bytetest_96_96 = simd_and(tmp549, tmp57);
        tmp961 = simd_and(tmp887, bytetest_a1);
        carryQ.cq[170] = carryout2carry(pablo_blk_Advance(tmp961, carryQ.get_carry_in(170), tmp962));
        tmp963 = simd_and(tmp962, bytetest_96_96);
        struct_Cn.cc = simd_or(tmp963, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_a2_a3 = simd_and(tmp512, tmp579);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp964 = simd_and(tmp887, bytetest_a2_a3);
        carryQ.cq[171] = carryout2carry(pablo_blk_Advance(tmp964, carryQ.get_carry_in(171), tmp965));
        tmp966 = simd_and(tmp965, bytetest_80_bf);
        bytetest_a1 = simd_and(tmp512, tmp107);
        bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp967 = simd_and(tmp962, bytetest_a0_bf);
        tmp968 = simd_or(tmp967, tmp966);
        struct_Cn.cc = simd_or(tmp968, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_a4 = simd_and(tmp512, tmp39);
        bytetest_9c_9e = simd_andc(tmp584, tmp24);
        tmp969 = simd_and(tmp887, bytetest_a4);
        carryQ.cq[172] = carryout2carry(pablo_blk_Advance(tmp969, carryQ.get_carry_in(172), tmp970));
        tmp971 = simd_and(tmp970, bytetest_9c_9e);
        struct_Cn.cc = simd_or(tmp971, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_a4 = simd_and(tmp512, tmp39);
        tmp972 = simd_or(simd_and(basis_bits.bit_5, tmp63), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        bytetest_ba_be = simd_and(bytetest_b8_bf, tmp972);
        tmp973 = simd_and(tmp970, bytetest_ba_be);
        struct_Cn.cc = simd_or(tmp973, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_a5 = simd_and(tmp512, tmp47);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp974 = simd_and(tmp887, bytetest_a5);
        carryQ.cq[173] = carryout2carry(pablo_blk_Advance(tmp974, carryQ.get_carry_in(173), tmp975));
        tmp976 = simd_and(tmp975, bytetest_80_bf);
        struct_Cn.cc = simd_or(tmp976, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_a6 = simd_and(tmp512, tmp57);
        bytetest_b8_bd = simd_andc(bytetest_b8_bf, tmp191);
        tmp977 = simd_and(tmp887, bytetest_a6);
        carryQ.cq[174] = carryout2carry(pablo_blk_Advance(tmp977, carryQ.get_carry_in(174), tmp978));
        tmp979 = simd_and(tmp978, bytetest_b8_bd);
        struct_Cn.cc = simd_or(tmp979, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_a7 = simd_and(tmp512, tmp67);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp980 = simd_and(tmp887, bytetest_a7);
        carryQ.cq[175] = carryout2carry(pablo_blk_Advance(tmp980, carryQ.get_carry_in(175), tmp981));
        tmp982 = simd_and(tmp981, bytetest_80_bf);
        struct_Cn.cc = simd_or(tmp982, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_a8 = simd_and(tmp512, tmp58);
        bytetest_84_84 = simd_and(bytetest_80_8f, tmp39);
        tmp983 = simd_and(tmp887, bytetest_a8);
        carryQ.cq[176] = carryout2carry(pablo_blk_Advance(tmp983, carryQ.get_carry_in(176), tmp984));
        tmp985 = simd_and(tmp984, bytetest_84_84);
        struct_Cn.cc = simd_or(tmp985, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_a8 = simd_and(tmp512, tmp58);
        tmp986 = simd_or(simd_and(basis_bits.bit_4, tmp524), simd_andc(tmp51, basis_bits.bit_4));
        bytetest_87_8b = simd_and(bytetest_80_8f, tmp986);
        tmp987 = simd_and(tmp984, bytetest_87_8b);
        struct_Cn.cc = simd_or(tmp987, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_a8 = simd_and(tmp512, tmp58);
        bytetest_94_94 = simd_and(tmp549, tmp39);
        tmp988 = simd_and(tmp984, bytetest_94_94);
        struct_Cn.cc = simd_or(tmp988, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_a8 = simd_and(tmp512, tmp58);
        bytetest_98_98 = simd_and(tmp549, tmp58);
        tmp989 = simd_and(tmp984, bytetest_98_98);
        struct_Cn.cc = simd_or(tmp989, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_a8 = simd_and(tmp512, tmp58);
        bytetest_b4_b7 = simd_and(tmp521, tmp37);
        tmp990 = simd_and(tmp984, bytetest_b4_b7);
        struct_Cn.cc = simd_or(tmp990, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_a8 = simd_and(tmp512, tmp58);
        bytetest_bb_be = simd_and(bytetest_b8_bf, tmp64);
        tmp991 = simd_and(tmp984, bytetest_bb_be);
        struct_Cn.cc = simd_or(tmp991, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_a9 = simd_and(tmp512, tmp144);
        bytetest_88_8f = simd_and(bytetest_80_8f, basis_bits.bit_4);
        tmp992 = simd_and(tmp887, bytetest_a9);
        carryQ.cq[177] = carryout2carry(pablo_blk_Advance(tmp992, carryQ.get_carry_in(177), tmp993));
        tmp994 = simd_and(tmp993, bytetest_88_8f);
        struct_Cn.cc = simd_or(tmp994, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_a9 = simd_and(tmp512, tmp144);
        bytetest_99_9f = simd_and(tmp728, tmp49);
        tmp995 = simd_and(tmp993, bytetest_99_9f);
        struct_Cn.cc = simd_or(tmp995, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_aa_ab = simd_and(tmp512, tmp151);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp996 = simd_and(tmp887, bytetest_aa_ab);
        carryQ.cq[178] = carryout2carry(pablo_blk_Advance(tmp996, carryQ.get_carry_in(178), tmp997));
        tmp998 = simd_and(tmp997, bytetest_80_bf);
        struct_Cn.cc = simd_or(tmp998, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_ac = simd_and(tmp512, tmp81);
        bytetest_b6_b8 = simd_and(tmp521, tmp249);
        tmp999 = simd_and(tmp887, bytetest_ac);
        carryQ.cq[179] = carryout2carry(pablo_blk_Advance(tmp999, carryQ.get_carry_in(179), tmp1000));
        tmp1001 = simd_and(tmp1000, bytetest_b6_b8);
        struct_Cn.cc = simd_or(tmp1001, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_ad = simd_and(tmp512, tmp6);
        bytetest_96_97 = simd_and(tmp549, tmp423);
        tmp1002 = simd_and(tmp887, bytetest_ad);
        carryQ.cq[180] = carryout2carry(pablo_blk_Advance(tmp1002, carryQ.get_carry_in(180), tmp1003));
        tmp1004 = simd_and(tmp1003, bytetest_96_97);
        struct_Cn.cc = simd_or(tmp1004, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_ad = simd_and(tmp512, tmp6);
        tmp1005 = simd_andc(tmp521, basis_bits.bit_4);
        bytetest_b3_b7 = simd_and(tmp1005, tmp72);
        tmp1006 = simd_and(tmp1003, bytetest_b3_b7);
        struct_Cn.cc = simd_or(tmp1006, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_ae_af = simd_and(tmp512, tmp100);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1007 = simd_and(tmp887, bytetest_ae_af);
        carryQ.cq[181] = carryout2carry(pablo_blk_Advance(tmp1007, carryQ.get_carry_in(181), tmp1008));
        tmp1009 = simd_and(tmp1008, bytetest_80_bf);
        struct_Cn.cc = simd_or(tmp1009, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_b9 = simd_and(tmp521, tmp144);
        bytetest_80_9f = simd_andc(bytetest_80_bf, basis_bits.bit_2);
        tmp1010 = simd_and(tmp887, bytetest_b9);
        carryQ.cq[182] = carryout2carry(pablo_blk_Advance(tmp1010, carryQ.get_carry_in(182), tmp1011));
        tmp1012 = simd_and(tmp1011, bytetest_80_9f);
        bytetest_b2_b8 = simd_and(tmp521, tmp188);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1013 = simd_and(tmp887, bytetest_b2_b8);
        carryQ.cq[183] = carryout2carry(pablo_blk_Advance(tmp1013, carryQ.get_carry_in(183), tmp1014));
        tmp1015 = simd_and(tmp1014, bytetest_80_bf);
        bytetest_b1 = simd_and(tmp521, tmp107);
        tmp1016 = simd_or(basis_bits.bit_3, tmp878);
        tmp1017 = simd_or(basis_bits.bit_2, tmp1016);
        bytetest_89_bf = simd_and(bytetest_80_bf, tmp1017);
        tmp1018 = simd_and(tmp887, bytetest_b1);
        carryQ.cq[184] = carryout2carry(pablo_blk_Advance(tmp1018, carryQ.get_carry_in(184), tmp1019));
        tmp1020 = simd_and(tmp1019, bytetest_89_bf);
        tmp1021 = simd_or(tmp1020, tmp1015);
        tmp1022 = simd_or(tmp1021, tmp1012);
        struct_Cn.cc = simd_or(tmp1022, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_ba_bf = simd_and(bytetest_b8_bf, tmp90);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1023 = simd_and(tmp887, bytetest_ba_bf);
        carryQ.cq[185] = carryout2carry(pablo_blk_Advance(tmp1023, carryQ.get_carry_in(185), tmp1024));
        tmp1025 = simd_and(tmp1024, bytetest_80_bf);
        bytetest_b9 = simd_and(tmp521, tmp144);
        bytetest_bf_bf = simd_and(tmp521, tmp25);
        tmp1026 = simd_and(tmp1011, bytetest_bf_bf);
        tmp1027 = simd_or(tmp1026, tmp1025);
        struct_Cn.cc = simd_or(tmp1027, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_91 = simd_and(tmp549, tmp107);
        bytetest_81 = simd_and(bytetest_80_8f, tmp107);
        tmp1028 = simd_not(tmp240);
        tmp1029 = simd_or(simd_and(basis_bits.bit_3, tmp1028), simd_andc(tmp100, basis_bits.bit_3));
        bytetest_8e_91 = simd_and(bytetest_80_9f, tmp1029);
        tmp1030 = simd_and(tmp885, bytetest_91);
        carryQ.cq[186] = carryout2carry(pablo_blk_Advance(tmp1030, carryQ.get_carry_in(186), tmp1031));
        tmp1032 = simd_and(tmp1031, bytetest_81);
        carryQ.cq[187] = carryout2carry(pablo_blk_Advance(tmp1032, carryQ.get_carry_in(187), tmp1033));
        tmp1034 = simd_and(tmp1033, bytetest_8e_91);
        struct_Cn.cc = simd_or(tmp1034, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_91 = simd_and(tmp549, tmp107);
        bytetest_81 = simd_and(bytetest_80_8f, tmp107);
        bytetest_b0_bf = simd_and(bytetest_80_bf, tmp8);
        tmp1035 = simd_and(tmp1033, bytetest_b0_bf);
        struct_Cn.cc = simd_or(tmp1035, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_91 = simd_and(tmp549, tmp107);
        bytetest_83 = simd_and(bytetest_80_8f, tmp120);
        bytetest_82_8f = simd_and(bytetest_80_8f, tmp91);
        tmp1036 = simd_and(tmp1031, bytetest_83);
        carryQ.cq[188] = carryout2carry(pablo_blk_Advance(tmp1036, carryQ.get_carry_in(188), tmp1037));
        tmp1038 = simd_and(tmp1037, bytetest_82_8f);
        struct_Cn.cc = simd_or(tmp1038, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_91 = simd_and(tmp549, tmp107);
        bytetest_83 = simd_and(bytetest_80_8f, tmp120);
        bytetest_a9_af = simd_and(tmp637, tmp49);
        tmp1039 = simd_and(tmp1037, bytetest_a9_af);
        struct_Cn.cc = simd_or(tmp1039, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_91 = simd_and(tmp549, tmp107);
        bytetest_83 = simd_and(bytetest_80_8f, tmp120);
        tmp1040 = simd_and(bytetest_b0_bf, basis_bits.bit_4);
        bytetest_ba_bf = simd_and(tmp1040, tmp90);
        tmp1041 = simd_and(tmp1037, bytetest_ba_bf);
        struct_Cn.cc = simd_or(tmp1041, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_91 = simd_and(tmp549, tmp107);
        bytetest_84 = simd_and(bytetest_80_8f, tmp39);
        bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp47);
        tmp1042 = simd_and(tmp1031, bytetest_84);
        carryQ.cq[189] = carryout2carry(pablo_blk_Advance(tmp1042, carryQ.get_carry_in(189), tmp1043));
        tmp1044 = simd_and(tmp1043, bytetest_b5_b5);
        struct_Cn.cc = simd_or(tmp1044, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_91 = simd_and(tmp549, tmp107);
        bytetest_85 = simd_and(bytetest_80_8f, tmp47);
        tmp1045 = simd_or(basis_bits.bit_2, tmp121);
        bytetest_84_bf = simd_and(bytetest_80_bf, tmp1045);
        tmp1046 = simd_and(tmp1031, bytetest_85);
        carryQ.cq[190] = carryout2carry(pablo_blk_Advance(tmp1046, carryQ.get_carry_in(190), tmp1047));
        tmp1048 = simd_and(tmp1047, bytetest_84_bf);
        struct_Cn.cc = simd_or(tmp1048, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_91 = simd_and(tmp549, tmp107);
        bytetest_87 = simd_and(bytetest_80_8f, tmp67);
        bytetest_89_8f = simd_and(bytetest_88_8f, tmp49);
        tmp1049 = simd_and(tmp1031, bytetest_87);
        carryQ.cq[191] = carryout2carry(pablo_blk_Advance(tmp1049, carryQ.get_carry_in(191), tmp1050));
        tmp1051 = simd_and(tmp1050, bytetest_89_8f);
        struct_Cn.cc = simd_or(tmp1051, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_91 = simd_and(tmp549, tmp107);
        tmp1052 = simd_not(tmp619);
        tmp1053 = simd_or(simd_and(basis_bits.bit_3, tmp1052), simd_andc(basis_bits.bit_4, basis_bits.bit_3));
        bytetest_88_99 = simd_and(bytetest_80_9f, tmp1053);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1054 = simd_and(tmp1031, bytetest_88_99);
        carryQ.cq[192] = carryout2carry(pablo_blk_Advance(tmp1054, carryQ.get_carry_in(192), tmp1055));
        tmp1056 = simd_and(tmp1055, bytetest_80_bf);
        bytetest_87 = simd_and(bytetest_80_8f, tmp67);
        bytetest_9a_bf = simd_and(bytetest_80_bf, tmp621);
        tmp1057 = simd_and(tmp1050, bytetest_9a_bf);
        tmp1058 = simd_or(tmp1057, tmp1056);
        struct_Cn.cc = simd_or(tmp1058, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_91 = simd_and(tmp549, tmp107);
        bytetest_9a = simd_and(tmp549, tmp197);
        bytetest_b8_bf = simd_and(bytetest_b0_bf, basis_bits.bit_4);
        tmp1059 = simd_and(tmp1031, bytetest_9a);
        carryQ.cq[193] = carryout2carry(pablo_blk_Advance(tmp1059, carryQ.get_carry_in(193), tmp1060));
        tmp1061 = simd_and(tmp1060, bytetest_b8_bf);
        struct_Cn.cc = simd_or(tmp1061, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_91 = simd_and(tmp549, tmp107);
        bytetest_9c_bf = simd_and(bytetest_80_bf, tmp361);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1062 = simd_and(tmp1031, bytetest_9c_bf);
        carryQ.cq[194] = carryout2carry(pablo_blk_Advance(tmp1062, carryQ.get_carry_in(194), tmp1063));
        tmp1064 = simd_and(tmp1063, bytetest_80_bf);
        bytetest_9b = simd_and(tmp549, tmp28);
        tmp1065 = simd_or(basis_bits.bit_2, tmp951);
        bytetest_8a_bf = simd_and(bytetest_80_bf, tmp1065);
        tmp1066 = simd_and(tmp1031, bytetest_9b);
        carryQ.cq[195] = carryout2carry(pablo_blk_Advance(tmp1066, carryQ.get_carry_in(195), tmp1067));
        tmp1068 = simd_and(tmp1067, bytetest_8a_bf);
        tmp1069 = simd_or(tmp1068, tmp1064);
        struct_Cn.cc = simd_or(tmp1069, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_92 = simd_and(tmp549, tmp33);
        bytetest_8e_8f = simd_and(bytetest_80_8f, tmp100);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1070 = simd_and(tmp885, bytetest_92);
        carryQ.cq[196] = carryout2carry(pablo_blk_Advance(tmp1070, carryQ.get_carry_in(196), tmp1071));
        tmp1072 = simd_and(tmp1071, bytetest_8e_8f);
        carryQ.cq[197] = carryout2carry(pablo_blk_Advance(tmp1072, carryQ.get_carry_in(197), tmp1073));
        tmp1074 = simd_and(tmp1073, bytetest_80_bf);
        bytetest_8d = simd_and(bytetest_80_8f, tmp6);
        bytetest_af_bf = simd_and(bytetest_a0_bf, tmp795);
        tmp1075 = simd_and(tmp1071, bytetest_8d);
        carryQ.cq[198] = carryout2carry(pablo_blk_Advance(tmp1075, carryQ.get_carry_in(198), tmp1076));
        tmp1077 = simd_and(tmp1076, bytetest_af_bf);
        tmp1078 = simd_or(tmp1077, tmp1074);
        struct_Cn.cc = simd_or(tmp1078, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_92 = simd_and(tmp549, tmp33);
        bytetest_91 = simd_and(tmp549, tmp107);
        bytetest_a3_af = simd_and(tmp512, tmp318);
        tmp1079 = simd_and(tmp1071, bytetest_91);
        carryQ.cq[199] = carryout2carry(pablo_blk_Advance(tmp1079, carryQ.get_carry_in(199), tmp1080));
        tmp1081 = simd_and(tmp1080, bytetest_a3_af);
        struct_Cn.cc = simd_or(tmp1081, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_92 = simd_and(tmp549, tmp33);
        tmp1082 = simd_or(basis_bits.bit_2, tmp349);
        bytetest_92_bf = simd_and(bytetest_80_bf, tmp1082);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1083 = simd_and(tmp1071, bytetest_92_bf);
        carryQ.cq[200] = carryout2carry(pablo_blk_Advance(tmp1083, carryQ.get_carry_in(200), tmp1084));
        tmp1085 = simd_and(tmp1084, bytetest_80_bf);
        bytetest_91 = simd_and(tmp549, tmp107);
        bytetest_b4_bf = simd_and(bytetest_b0_bf, tmp20);
        tmp1086 = simd_and(tmp1080, bytetest_b4_bf);
        tmp1087 = simd_or(tmp1086, tmp1085);
        struct_Cn.cc = simd_or(tmp1087, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_96 = simd_and(tmp549, tmp57);
        bytetest_80_9f = simd_andc(bytetest_80_bf, basis_bits.bit_2);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1088 = simd_and(tmp885, bytetest_96);
        carryQ.cq[201] = carryout2carry(pablo_blk_Advance(tmp1088, carryQ.get_carry_in(201), tmp1089));
        tmp1090 = simd_and(tmp1089, bytetest_80_9f);
        carryQ.cq[202] = carryout2carry(pablo_blk_Advance(tmp1090, carryQ.get_carry_in(202), tmp1091));
        tmp1092 = simd_and(tmp1091, bytetest_80_bf);
        bytetest_94_95 = simd_and(tmp549, tmp165);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1093 = simd_and(tmp885, bytetest_94_95);
        carryQ.cq[203] = carryout2carry(pablo_blk_Advance(tmp1093, carryQ.get_carry_in(203), tmp1094));
        tmp1095 = simd_and(tmp1094, bytetest_80_bf);
        carryQ.cq[204] = carryout2carry(pablo_blk_Advance(tmp1095, carryQ.get_carry_in(204), tmp1096));
        tmp1097 = simd_and(tmp1096, bytetest_80_bf);
        bytetest_93 = simd_and(tmp549, tmp120);
        bytetest_91_bf = simd_and(bytetest_80_bf, tmp925);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1098 = simd_and(tmp885, bytetest_93);
        carryQ.cq[205] = carryout2carry(pablo_blk_Advance(tmp1098, carryQ.get_carry_in(205), tmp1099));
        tmp1100 = simd_and(tmp1099, bytetest_91_bf);
        carryQ.cq[206] = carryout2carry(pablo_blk_Advance(tmp1100, carryQ.get_carry_in(206), tmp1101));
        tmp1102 = simd_and(tmp1101, bytetest_80_bf);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_af_bf = simd_and(bytetest_a0_bf, tmp795);
        tmp1103 = simd_and(tmp1099, bytetest_90);
        carryQ.cq[207] = carryout2carry(pablo_blk_Advance(tmp1103, carryQ.get_carry_in(207), tmp1104));
        tmp1105 = simd_and(tmp1104, bytetest_af_bf);
        tmp1106 = simd_or(tmp1105, tmp1102);
        tmp1107 = simd_or(tmp1106, tmp1097);
        tmp1108 = simd_or(tmp1107, tmp1092);
        struct_Cn.cc = simd_or(tmp1108, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_96 = simd_and(tmp549, tmp57);
        tmp1109 = simd_or(simd_and(basis_bits.bit_3, tmp544), simd_andc(tmp878, basis_bits.bit_3));
        bytetest_a9_bb = simd_and(bytetest_a0_bf, tmp1109);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1110 = simd_and(tmp1089, bytetest_a9_bb);
        carryQ.cq[208] = carryout2carry(pablo_blk_Advance(tmp1110, carryQ.get_carry_in(208), tmp1111));
        tmp1112 = simd_and(tmp1111, bytetest_80_bf);
        bytetest_a8 = simd_and(tmp512, tmp58);
        bytetest_b9_bf = simd_and(bytetest_b8_bf, tmp49);
        tmp1113 = simd_and(tmp1089, bytetest_a8);
        carryQ.cq[209] = carryout2carry(pablo_blk_Advance(tmp1113, carryQ.get_carry_in(209), tmp1114));
        tmp1115 = simd_and(tmp1114, bytetest_b9_bf);
        tmp1116 = simd_or(tmp1115, tmp1112);
        struct_Cn.cc = simd_or(tmp1116, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_96 = simd_and(tmp549, tmp57);
        bytetest_bd = simd_and(bytetest_b0_bf, tmp6);
        bytetest_85_8f = simd_and(bytetest_80_8f, tmp75);
        tmp1117 = simd_and(tmp1089, bytetest_bd);
        carryQ.cq[210] = carryout2carry(pablo_blk_Advance(tmp1117, carryQ.get_carry_in(210), tmp1118));
        tmp1119 = simd_and(tmp1118, bytetest_85_8f);
        struct_Cn.cc = simd_or(tmp1119, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_96 = simd_and(tmp549, tmp57);
        bytetest_be = simd_and(bytetest_b0_bf, tmp18);
        tmp1120 = simd_and(basis_bits.bit_4, tmp51);
        bytetest_80_8e = simd_andc(bytetest_80_8f, tmp1120);
        tmp1121 = simd_and(tmp1089, bytetest_be);
        carryQ.cq[211] = carryout2carry(pablo_blk_Advance(tmp1121, carryQ.get_carry_in(211), tmp1122));
        tmp1123 = simd_and(tmp1122, bytetest_80_8e);
        bytetest_bd = simd_and(bytetest_b0_bf, tmp6);
        bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp25);
        tmp1124 = simd_and(tmp1118, bytetest_bf_bf);
        tmp1125 = simd_or(tmp1124, tmp1123);
        struct_Cn.cc = simd_or(tmp1125, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_97_9a = simd_and(tmp549, tmp808);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1126 = simd_and(tmp885, bytetest_97_9a);
        carryQ.cq[212] = carryout2carry(pablo_blk_Advance(tmp1126, carryQ.get_carry_in(212), tmp1127));
        tmp1128 = simd_and(tmp1127, bytetest_80_bf);
        carryQ.cq[213] = carryout2carry(pablo_blk_Advance(tmp1128, carryQ.get_carry_in(213), tmp1129));
        tmp1130 = simd_and(tmp1129, bytetest_80_bf);
        bytetest_96 = simd_and(tmp549, tmp57);
        bytetest_bf = simd_and(bytetest_b0_bf, tmp25);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1131 = simd_and(tmp1089, bytetest_bf);
        carryQ.cq[214] = carryout2carry(pablo_blk_Advance(tmp1131, carryQ.get_carry_in(214), tmp1132));
        tmp1133 = simd_and(tmp1132, bytetest_80_bf);
        bytetest_be = simd_and(bytetest_b0_bf, tmp18);
        bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp1134 = simd_and(tmp1122, bytetest_a0_bf);
        tmp1135 = simd_or(tmp1134, tmp1133);
        tmp1136 = simd_or(tmp1135, tmp1130);
        struct_Cn.cc = simd_or(tmp1136, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9c = simd_and(tmp549, tmp81);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1137 = simd_and(tmp885, bytetest_9c);
        carryQ.cq[215] = carryout2carry(pablo_blk_Advance(tmp1137, carryQ.get_carry_in(215), tmp1138));
        tmp1139 = simd_and(tmp1138, bytetest_80_bf);
        carryQ.cq[216] = carryout2carry(pablo_blk_Advance(tmp1139, carryQ.get_carry_in(216), tmp1140));
        tmp1141 = simd_and(tmp1140, bytetest_80_bf);
        bytetest_9b = simd_and(tmp549, tmp28);
        tmp1142 = simd_or(basis_bits.bit_3, tmp41);
        tmp1143 = simd_or(basis_bits.bit_2, tmp1142);
        bytetest_81_bf = simd_and(bytetest_80_bf, tmp1143);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1144 = simd_and(tmp885, bytetest_9b);
        carryQ.cq[217] = carryout2carry(pablo_blk_Advance(tmp1144, carryQ.get_carry_in(217), tmp1145));
        tmp1146 = simd_and(tmp1145, bytetest_81_bf);
        carryQ.cq[218] = carryout2carry(pablo_blk_Advance(tmp1146, carryQ.get_carry_in(218), tmp1147));
        tmp1148 = simd_and(tmp1147, bytetest_80_bf);
        bytetest_80 = simd_andc(bytetest_80_8f, tmp41);
        tmp1149 = simd_or(basis_bits.bit_3, tmp240);
        tmp1150 = simd_or(basis_bits.bit_2, tmp1149);
        bytetest_82_bf = simd_and(bytetest_80_bf, tmp1150);
        tmp1151 = simd_and(tmp1145, bytetest_80);
        carryQ.cq[219] = carryout2carry(pablo_blk_Advance(tmp1151, carryQ.get_carry_in(219), tmp1152));
        tmp1153 = simd_and(tmp1152, bytetest_82_bf);
        tmp1154 = simd_or(tmp1153, tmp1148);
        tmp1155 = simd_or(tmp1154, tmp1141);
        struct_Cn.cc = simd_or(tmp1155, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9d = simd_and(tmp549, tmp6);
        bytetest_83 = simd_and(bytetest_80_8f, tmp120);
        bytetest_b6_bf = simd_and(bytetest_b0_bf, tmp192);
        tmp1156 = simd_and(tmp885, bytetest_9d);
        carryQ.cq[220] = carryout2carry(pablo_blk_Advance(tmp1156, carryQ.get_carry_in(220), tmp1157));
        tmp1158 = simd_and(tmp1157, bytetest_83);
        carryQ.cq[221] = carryout2carry(pablo_blk_Advance(tmp1158, carryQ.get_carry_in(221), tmp1159));
        tmp1160 = simd_and(tmp1159, bytetest_b6_bf);
        struct_Cn.cc = simd_or(tmp1160, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9d = simd_and(tmp549, tmp6);
        bytetest_84 = simd_and(bytetest_80_8f, tmp39);
        bytetest_a7_a8 = simd_and(tmp512, tmp52);
        tmp1161 = simd_and(tmp1157, bytetest_84);
        carryQ.cq[222] = carryout2carry(pablo_blk_Advance(tmp1161, carryQ.get_carry_in(222), tmp1162));
        tmp1163 = simd_and(tmp1162, bytetest_a7_a8);
        struct_Cn.cc = simd_or(tmp1163, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9d = simd_and(tmp549, tmp6);
        bytetest_87 = simd_and(bytetest_80_8f, tmp67);
        bytetest_9e_bf = simd_and(bytetest_80_bf, tmp898);
        tmp1164 = simd_and(tmp1157, bytetest_87);
        carryQ.cq[223] = carryout2carry(pablo_blk_Advance(tmp1164, carryQ.get_carry_in(223), tmp1165));
        tmp1166 = simd_and(tmp1165, bytetest_9e_bf);
        struct_Cn.cc = simd_or(tmp1166, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9d = simd_and(tmp549, tmp6);
        bytetest_8a_8b = simd_and(bytetest_80_8f, tmp151);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1167 = simd_and(tmp1157, bytetest_8a_8b);
        carryQ.cq[224] = carryout2carry(pablo_blk_Advance(tmp1167, carryQ.get_carry_in(224), tmp1168));
        tmp1169 = simd_and(tmp1168, bytetest_80_bf);
        bytetest_89 = simd_and(bytetest_80_8f, tmp144);
        tmp1170 = simd_or(basis_bits.bit_2, tmp193);
        bytetest_86_bf = simd_and(bytetest_80_bf, tmp1170);
        tmp1171 = simd_and(tmp1157, bytetest_89);
        carryQ.cq[225] = carryout2carry(pablo_blk_Advance(tmp1171, carryQ.get_carry_in(225), tmp1172));
        tmp1173 = simd_and(tmp1172, bytetest_86_bf);
        tmp1174 = simd_or(tmp1173, tmp1169);
        struct_Cn.cc = simd_or(tmp1174, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9d = simd_and(tmp549, tmp6);
        bytetest_8d = simd_and(bytetest_80_8f, tmp6);
        bytetest_97_9f = simd_and(tmp549, tmp159);
        tmp1175 = simd_and(tmp1157, bytetest_8d);
        carryQ.cq[226] = carryout2carry(pablo_blk_Advance(tmp1175, carryQ.get_carry_in(226), tmp1176));
        tmp1177 = simd_and(tmp1176, bytetest_97_9f);
        struct_Cn.cc = simd_or(tmp1177, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9d = simd_and(tmp549, tmp6);
        bytetest_8e_8f = simd_and(bytetest_80_8f, tmp100);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1178 = simd_and(tmp1157, bytetest_8e_8f);
        carryQ.cq[227] = carryout2carry(pablo_blk_Advance(tmp1178, carryQ.get_carry_in(227), tmp1179));
        tmp1180 = simd_and(tmp1179, bytetest_80_bf);
        bytetest_8d = simd_and(bytetest_80_8f, tmp6);
        bytetest_b2_bf = simd_and(bytetest_b0_bf, tmp91);
        tmp1181 = simd_and(tmp1176, bytetest_b2_bf);
        tmp1182 = simd_or(tmp1181, tmp1180);
        struct_Cn.cc = simd_or(tmp1182, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9d = simd_and(tmp549, tmp6);
        bytetest_91 = simd_and(tmp549, tmp107);
        bytetest_95_95 = simd_and(tmp549, tmp47);
        tmp1183 = simd_and(tmp1157, bytetest_91);
        carryQ.cq[228] = carryout2carry(pablo_blk_Advance(tmp1183, carryQ.get_carry_in(228), tmp1184));
        tmp1185 = simd_and(tmp1184, bytetest_95_95);
        struct_Cn.cc = simd_or(tmp1185, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9d = simd_and(tmp549, tmp6);
        bytetest_92 = simd_and(tmp549, tmp33);
        bytetest_9d_9d = simd_and(tmp549, tmp6);
        tmp1186 = simd_and(tmp1157, bytetest_92);
        carryQ.cq[229] = carryout2carry(pablo_blk_Advance(tmp1186, carryQ.get_carry_in(229), tmp1187));
        tmp1188 = simd_and(tmp1187, bytetest_9d_9d);
        struct_Cn.cc = simd_or(tmp1188, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9d = simd_and(tmp549, tmp6);
        bytetest_92 = simd_and(tmp549, tmp33);
        bytetest_a0_a1 = simd_andc(tmp512, tmp240);
        tmp1189 = simd_and(tmp1187, bytetest_a0_a1);
        struct_Cn.cc = simd_or(tmp1189, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9d = simd_and(tmp549, tmp6);
        bytetest_92 = simd_and(tmp549, tmp33);
        tmp1190 = simd_andc(tmp512, basis_bits.bit_4);
        bytetest_a3_a4 = simd_and(tmp1190, tmp86);
        tmp1191 = simd_and(tmp1187, bytetest_a3_a4);
        struct_Cn.cc = simd_or(tmp1191, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9d = simd_and(tmp549, tmp6);
        bytetest_92 = simd_and(tmp549, tmp33);
        bytetest_a7_a8 = simd_and(tmp512, tmp52);
        tmp1192 = simd_and(tmp1187, bytetest_a7_a8);
        struct_Cn.cc = simd_or(tmp1192, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9d = simd_and(tmp549, tmp6);
        bytetest_92 = simd_and(tmp549, tmp33);
        bytetest_ad_ad = simd_and(tmp512, tmp6);
        tmp1193 = simd_and(tmp1187, bytetest_ad_ad);
        struct_Cn.cc = simd_or(tmp1193, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9d = simd_and(tmp549, tmp6);
        bytetest_92 = simd_and(tmp549, tmp33);
        bytetest_ba_ba = simd_and(bytetest_b0_bf, tmp197);
        tmp1194 = simd_and(tmp1187, bytetest_ba_ba);
        struct_Cn.cc = simd_or(tmp1194, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9d = simd_and(tmp549, tmp6);
        bytetest_92 = simd_and(tmp549, tmp33);
        bytetest_bc_bc = simd_and(bytetest_b0_bf, tmp81);
        tmp1195 = simd_and(tmp1187, bytetest_bc_bc);
        struct_Cn.cc = simd_or(tmp1195, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9d = simd_and(tmp549, tmp6);
        bytetest_93 = simd_and(tmp549, tmp120);
        bytetest_84_84 = simd_and(bytetest_80_8f, tmp39);
        tmp1196 = simd_and(tmp1157, bytetest_93);
        carryQ.cq[230] = carryout2carry(pablo_blk_Advance(tmp1196, carryQ.get_carry_in(230), tmp1197));
        tmp1198 = simd_and(tmp1197, bytetest_84_84);
        struct_Cn.cc = simd_or(tmp1198, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9d = simd_and(tmp549, tmp6);
        bytetest_94 = simd_and(tmp549, tmp39);
        bytetest_86_86 = simd_and(bytetest_80_8f, tmp57);
        tmp1199 = simd_and(tmp1157, bytetest_94);
        carryQ.cq[231] = carryout2carry(pablo_blk_Advance(tmp1199, carryQ.get_carry_in(231), tmp1200));
        tmp1201 = simd_and(tmp1200, bytetest_86_86);
        struct_Cn.cc = simd_or(tmp1201, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9d = simd_and(tmp549, tmp6);
        bytetest_94 = simd_and(tmp549, tmp39);
        bytetest_8b_8c = simd_and(bytetest_88_8f, tmp86);
        tmp1202 = simd_and(tmp1200, bytetest_8b_8c);
        struct_Cn.cc = simd_or(tmp1202, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9d = simd_and(tmp549, tmp6);
        bytetest_94 = simd_and(tmp549, tmp39);
        bytetest_95_95 = simd_and(tmp549, tmp47);
        tmp1203 = simd_and(tmp1200, bytetest_95_95);
        struct_Cn.cc = simd_or(tmp1203, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9d = simd_and(tmp549, tmp6);
        bytetest_94 = simd_and(tmp549, tmp39);
        bytetest_9d_9d = simd_and(tmp549, tmp6);
        tmp1204 = simd_and(tmp1200, bytetest_9d_9d);
        struct_Cn.cc = simd_or(tmp1204, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9d = simd_and(tmp549, tmp6);
        bytetest_94 = simd_and(tmp549, tmp39);
        bytetest_ba_ba = simd_and(bytetest_b0_bf, tmp197);
        tmp1205 = simd_and(tmp1200, bytetest_ba_ba);
        struct_Cn.cc = simd_or(tmp1205, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9d = simd_and(tmp549, tmp6);
        bytetest_94 = simd_and(tmp549, tmp39);
        bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp25);
        tmp1206 = simd_and(tmp1200, bytetest_bf_bf);
        struct_Cn.cc = simd_or(tmp1206, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9d = simd_and(tmp549, tmp6);
        bytetest_95 = simd_and(tmp549, tmp47);
        bytetest_85_85 = simd_and(bytetest_80_8f, tmp47);
        tmp1207 = simd_and(tmp1157, bytetest_95);
        carryQ.cq[232] = carryout2carry(pablo_blk_Advance(tmp1207, carryQ.get_carry_in(232), tmp1208));
        tmp1209 = simd_and(tmp1208, bytetest_85_85);
        struct_Cn.cc = simd_or(tmp1209, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9d = simd_and(tmp549, tmp6);
        bytetest_95 = simd_and(tmp549, tmp47);
        bytetest_87_89 = simd_and(bytetest_80_8f, tmp338);
        tmp1210 = simd_and(tmp1208, bytetest_87_89);
        struct_Cn.cc = simd_or(tmp1210, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9d = simd_and(tmp549, tmp6);
        bytetest_95 = simd_and(tmp549, tmp47);
        bytetest_91_91 = simd_and(tmp549, tmp107);
        tmp1211 = simd_and(tmp1208, bytetest_91_91);
        struct_Cn.cc = simd_or(tmp1211, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9d = simd_and(tmp549, tmp6);
        bytetest_9a = simd_and(tmp549, tmp197);
        bytetest_a6_a7 = simd_and(tmp512, tmp423);
        tmp1212 = simd_and(tmp1157, bytetest_9a);
        carryQ.cq[233] = carryout2carry(pablo_blk_Advance(tmp1212, carryQ.get_carry_in(233), tmp1213));
        tmp1214 = simd_and(tmp1213, bytetest_a6_a7);
        struct_Cn.cc = simd_or(tmp1214, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9d = simd_and(tmp549, tmp6);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_8c_8d = simd_and(bytetest_80_8f, tmp108);
        tmp1215 = simd_and(tmp1157, bytetest_9f);
        carryQ.cq[234] = carryout2carry(pablo_blk_Advance(tmp1215, carryQ.get_carry_in(234), tmp1216));
        tmp1217 = simd_and(tmp1216, bytetest_8c_8d);
        struct_Cn.cc = simd_or(tmp1217, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_80_b7 = simd_andc(bytetest_80_bf, tmp739);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1218 = simd_and(tmp885, bytetest_9e);
        carryQ.cq[235] = carryout2carry(pablo_blk_Advance(tmp1218, carryQ.get_carry_in(235), tmp1219));
        tmp1220 = simd_and(tmp1219, bytetest_80_b7);
        carryQ.cq[236] = carryout2carry(pablo_blk_Advance(tmp1220, carryQ.get_carry_in(236), tmp1221));
        tmp1222 = simd_and(tmp1221, bytetest_80_bf);
        bytetest_9d = simd_and(tmp549, tmp6);
        bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1223 = simd_and(tmp1157, bytetest_a0_bf);
        carryQ.cq[237] = carryout2carry(pablo_blk_Advance(tmp1223, carryQ.get_carry_in(237), tmp1224));
        tmp1225 = simd_and(tmp1224, bytetest_80_bf);
        tmp1226 = simd_or(tmp1225, tmp1222);
        struct_Cn.cc = simd_or(tmp1226, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp58);
        bytetest_84_84 = simd_and(bytetest_80_8f, tmp39);
        tmp1227 = simd_and(tmp1219, bytetest_b8);
        carryQ.cq[238] = carryout2carry(pablo_blk_Advance(tmp1227, carryQ.get_carry_in(238), tmp1228));
        tmp1229 = simd_and(tmp1228, bytetest_84_84);
        struct_Cn.cc = simd_or(tmp1229, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp58);
        bytetest_a0_a0 = simd_andc(tmp512, tmp41);
        tmp1230 = simd_and(tmp1228, bytetest_a0_a0);
        struct_Cn.cc = simd_or(tmp1230, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp58);
        bytetest_a3_a3 = simd_and(tmp512, tmp120);
        tmp1231 = simd_and(tmp1228, bytetest_a3_a3);
        struct_Cn.cc = simd_or(tmp1231, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp58);
        tmp1232 = simd_and(tmp512, tmp37);
        bytetest_a5_a6 = simd_and(tmp1232, tmp140);
        tmp1233 = simd_and(tmp1228, bytetest_a5_a6);
        struct_Cn.cc = simd_or(tmp1233, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp58);
        bytetest_a8_a8 = simd_and(tmp512, tmp58);
        tmp1234 = simd_and(tmp1228, bytetest_a8_a8);
        struct_Cn.cc = simd_or(tmp1234, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp58);
        bytetest_b3_b3 = simd_and(bytetest_b0_bf, tmp120);
        tmp1235 = simd_and(tmp1228, bytetest_b3_b3);
        struct_Cn.cc = simd_or(tmp1235, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp58);
        bytetest_b8_b8 = simd_and(bytetest_b0_bf, tmp58);
        tmp1236 = simd_and(tmp1228, bytetest_b8_b8);
        struct_Cn.cc = simd_or(tmp1236, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp58);
        bytetest_ba_ba = simd_and(bytetest_b0_bf, tmp197);
        tmp1237 = simd_and(tmp1228, bytetest_ba_ba);
        struct_Cn.cc = simd_or(tmp1237, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp144);
        bytetest_80_81 = simd_andc(bytetest_80_8f, tmp240);
        tmp1238 = simd_and(tmp1219, bytetest_b9);
        carryQ.cq[239] = carryout2carry(pablo_blk_Advance(tmp1238, carryQ.get_carry_in(239), tmp1239));
        tmp1240 = simd_and(tmp1239, bytetest_80_81);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp58);
        bytetest_bc_bf = simd_and(bytetest_b0_bf, tmp4);
        tmp1241 = simd_and(tmp1228, bytetest_bc_bf);
        tmp1242 = simd_or(tmp1241, tmp1240);
        struct_Cn.cc = simd_or(tmp1242, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp144);
        bytetest_83_86 = simd_and(tmp687, tmp64);
        tmp1243 = simd_and(tmp1239, bytetest_83_86);
        struct_Cn.cc = simd_or(tmp1243, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp144);
        bytetest_88_88 = simd_and(bytetest_80_8f, tmp58);
        tmp1244 = simd_and(tmp1239, bytetest_88_88);
        struct_Cn.cc = simd_or(tmp1244, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp144);
        bytetest_8a_8a = simd_and(bytetest_80_8f, tmp197);
        tmp1245 = simd_and(tmp1239, bytetest_8a_8a);
        struct_Cn.cc = simd_or(tmp1245, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp144);
        bytetest_8c_8c = simd_and(bytetest_80_8f, tmp81);
        tmp1246 = simd_and(tmp1239, bytetest_8c_8c);
        struct_Cn.cc = simd_or(tmp1246, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp144);
        bytetest_90_90 = simd_andc(tmp549, tmp41);
        tmp1247 = simd_and(tmp1239, bytetest_90_90);
        struct_Cn.cc = simd_or(tmp1247, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp144);
        bytetest_93_93 = simd_and(tmp549, tmp120);
        tmp1248 = simd_and(tmp1239, bytetest_93_93);
        struct_Cn.cc = simd_or(tmp1248, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp144);
        tmp1249 = simd_and(tmp549, tmp37);
        bytetest_95_96 = simd_and(tmp1249, tmp140);
        tmp1250 = simd_and(tmp1239, bytetest_95_96);
        struct_Cn.cc = simd_or(tmp1250, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp144);
        bytetest_98_98 = simd_and(tmp549, tmp58);
        tmp1251 = simd_and(tmp1239, bytetest_98_98);
        struct_Cn.cc = simd_or(tmp1251, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp144);
        bytetest_9a_9a = simd_and(tmp549, tmp197);
        tmp1252 = simd_and(tmp1239, bytetest_9a_9a);
        struct_Cn.cc = simd_or(tmp1252, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp144);
        bytetest_9c_9c = simd_and(tmp549, tmp81);
        tmp1253 = simd_and(tmp1239, bytetest_9c_9c);
        struct_Cn.cc = simd_or(tmp1253, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp144);
        bytetest_9e_9e = simd_and(tmp549, tmp18);
        tmp1254 = simd_and(tmp1239, bytetest_9e_9e);
        struct_Cn.cc = simd_or(tmp1254, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp144);
        bytetest_a0_a0 = simd_andc(tmp512, tmp41);
        tmp1255 = simd_and(tmp1239, bytetest_a0_a0);
        struct_Cn.cc = simd_or(tmp1255, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp144);
        bytetest_a3_a3 = simd_and(tmp512, tmp120);
        tmp1256 = simd_and(tmp1239, bytetest_a3_a3);
        struct_Cn.cc = simd_or(tmp1256, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp144);
        bytetest_a5_a6 = simd_and(tmp1232, tmp140);
        tmp1257 = simd_and(tmp1239, bytetest_a5_a6);
        struct_Cn.cc = simd_or(tmp1257, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp144);
        bytetest_ab_ab = simd_and(tmp512, tmp28);
        tmp1258 = simd_and(tmp1239, bytetest_ab_ab);
        struct_Cn.cc = simd_or(tmp1258, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp144);
        bytetest_b3_b3 = simd_and(bytetest_b0_bf, tmp120);
        tmp1259 = simd_and(tmp1239, bytetest_b3_b3);
        struct_Cn.cc = simd_or(tmp1259, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp144);
        bytetest_b8_b8 = simd_and(bytetest_b0_bf, tmp58);
        tmp1260 = simd_and(tmp1239, bytetest_b8_b8);
        struct_Cn.cc = simd_or(tmp1260, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp144);
        bytetest_bd_bd = simd_and(bytetest_b0_bf, tmp6);
        tmp1261 = simd_and(tmp1239, bytetest_bd_bd);
        struct_Cn.cc = simd_or(tmp1261, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp144);
        bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp25);
        tmp1262 = simd_and(tmp1239, bytetest_bf_bf);
        struct_Cn.cc = simd_or(tmp1262, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp197);
        bytetest_8a_8a = simd_and(bytetest_80_8f, tmp197);
        tmp1263 = simd_and(tmp1219, bytetest_ba);
        carryQ.cq[240] = carryout2carry(pablo_blk_Advance(tmp1263, carryQ.get_carry_in(240), tmp1264));
        tmp1265 = simd_and(tmp1264, bytetest_8a_8a);
        struct_Cn.cc = simd_or(tmp1265, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp197);
        tmp1266 = simd_not(tmp1142);
        tmp1267 = simd_or(simd_and(basis_bits.bit_2, tmp1266), simd_andc(tmp360, basis_bits.bit_2));
        bytetest_9c_a0 = simd_and(bytetest_80_bf, tmp1267);
        tmp1268 = simd_and(tmp1264, bytetest_9c_a0);
        struct_Cn.cc = simd_or(tmp1268, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp197);
        bytetest_a4_a4 = simd_and(tmp512, tmp39);
        tmp1269 = simd_and(tmp1264, bytetest_a4_a4);
        struct_Cn.cc = simd_or(tmp1269, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp197);
        bytetest_aa_aa = simd_and(tmp512, tmp197);
        tmp1270 = simd_and(tmp1264, bytetest_aa_aa);
        struct_Cn.cc = simd_or(tmp1270, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp28);
        bytetest_80_af = simd_andc(bytetest_80_bf, tmp8);
        tmp1271 = simd_and(tmp1219, bytetest_bb);
        carryQ.cq[241] = carryout2carry(pablo_blk_Advance(tmp1271, carryQ.get_carry_in(241), tmp1272));
        tmp1273 = simd_and(tmp1272, bytetest_80_af);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp197);
        bytetest_bc_bf = simd_and(bytetest_b0_bf, tmp4);
        tmp1274 = simd_and(tmp1264, bytetest_bc_bf);
        tmp1275 = simd_or(tmp1274, tmp1273);
        struct_Cn.cc = simd_or(tmp1275, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_bc_bf = simd_and(bytetest_b0_bf, tmp4);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1276 = simd_and(tmp1219, bytetest_bc_bf);
        carryQ.cq[242] = carryout2carry(pablo_blk_Advance(tmp1276, carryQ.get_carry_in(242), tmp1277));
        tmp1278 = simd_and(tmp1277, bytetest_80_bf);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp28);
        bytetest_b2_bf = simd_and(bytetest_b0_bf, tmp91);
        tmp1279 = simd_and(tmp1272, bytetest_b2_bf);
        tmp1280 = simd_or(tmp1279, tmp1278);
        struct_Cn.cc = simd_or(tmp1280, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_80 = simd_andc(bytetest_80_8f, tmp41);
        bytetest_ac_af = simd_and(tmp512, tmp4);
        tmp1281 = simd_and(tmp885, bytetest_9f);
        carryQ.cq[243] = carryout2carry(pablo_blk_Advance(tmp1281, carryQ.get_carry_in(243), tmp1282));
        tmp1283 = simd_and(tmp1282, bytetest_80);
        carryQ.cq[244] = carryout2carry(pablo_blk_Advance(tmp1283, carryQ.get_carry_in(244), tmp1284));
        tmp1285 = simd_and(tmp1284, bytetest_ac_af);
        struct_Cn.cc = simd_or(tmp1285, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_82 = simd_and(bytetest_80_8f, tmp33);
        bytetest_94_9f = simd_and(tmp549, tmp20);
        tmp1286 = simd_and(tmp1282, bytetest_82);
        carryQ.cq[245] = carryout2carry(pablo_blk_Advance(tmp1286, carryQ.get_carry_in(245), tmp1287));
        tmp1288 = simd_and(tmp1287, bytetest_94_9f);
        struct_Cn.cc = simd_or(tmp1288, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_82 = simd_and(bytetest_80_8f, tmp33);
        bytetest_af_b0 = simd_and(bytetest_a0_bf, tmp788);
        tmp1289 = simd_and(tmp1287, bytetest_af_b0);
        struct_Cn.cc = simd_or(tmp1289, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_83 = simd_and(bytetest_80_8f, tmp120);
        bytetest_80_80 = simd_andc(bytetest_80_8f, tmp41);
        tmp1290 = simd_and(tmp1282, bytetest_83);
        carryQ.cq[246] = carryout2carry(pablo_blk_Advance(tmp1290, carryQ.get_carry_in(246), tmp1291));
        tmp1292 = simd_and(tmp1291, bytetest_80_80);
        bytetest_82 = simd_and(bytetest_80_8f, tmp33);
        bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp25);
        tmp1293 = simd_and(tmp1287, bytetest_bf_bf);
        tmp1294 = simd_or(tmp1293, tmp1292);
        struct_Cn.cc = simd_or(tmp1294, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_83 = simd_and(bytetest_80_8f, tmp120);
        bytetest_90_90 = simd_andc(tmp549, tmp41);
        tmp1295 = simd_and(tmp1291, bytetest_90_90);
        struct_Cn.cc = simd_or(tmp1295, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_83 = simd_and(bytetest_80_8f, tmp120);
        bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp1296 = simd_and(tmp1291, bytetest_a0_bf);
        struct_Cn.cc = simd_or(tmp1296, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_84 = simd_and(bytetest_80_8f, tmp39);
        bytetest_8b_8f = simd_and(bytetest_88_8f, tmp72);
        tmp1297 = simd_and(tmp1282, bytetest_84);
        carryQ.cq[247] = carryout2carry(pablo_blk_Advance(tmp1297, carryQ.get_carry_in(247), tmp1298));
        tmp1299 = simd_and(tmp1298, bytetest_8b_8f);
        struct_Cn.cc = simd_or(tmp1299, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_84 = simd_and(bytetest_80_8f, tmp39);
        bytetest_af_af = simd_and(tmp512, tmp25);
        tmp1300 = simd_and(tmp1298, bytetest_af_af);
        struct_Cn.cc = simd_or(tmp1300, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_85 = simd_and(bytetest_80_8f, tmp47);
        bytetest_ac_af = simd_and(tmp512, tmp4);
        tmp1301 = simd_and(tmp1282, bytetest_85);
        carryQ.cq[248] = carryout2carry(pablo_blk_Advance(tmp1301, carryQ.get_carry_in(248), tmp1302));
        tmp1303 = simd_and(tmp1302, bytetest_ac_af);
        struct_Cn.cc = simd_or(tmp1303, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_87 = simd_and(bytetest_80_8f, tmp67);
        tmp1304 = simd_and(basis_bits.bit_2, tmp193);
        bytetest_80_a5 = simd_andc(bytetest_80_bf, tmp1304);
        tmp1305 = simd_and(tmp1282, bytetest_87);
        carryQ.cq[249] = carryout2carry(pablo_blk_Advance(tmp1305, carryQ.get_carry_in(249), tmp1306));
        tmp1307 = simd_and(tmp1306, bytetest_80_a5);
        bytetest_86 = simd_and(bytetest_80_8f, tmp57);
        bytetest_9b_bf = simd_and(bytetest_80_bf, tmp402);
        tmp1308 = simd_and(tmp1282, bytetest_86);
        carryQ.cq[250] = carryout2carry(pablo_blk_Advance(tmp1308, carryQ.get_carry_in(250), tmp1309));
        tmp1310 = simd_and(tmp1309, bytetest_9b_bf);
        tmp1311 = simd_or(tmp1310, tmp1307);
        struct_Cn.cc = simd_or(tmp1311, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_88 = simd_and(bytetest_80_8f, tmp58);
        bytetest_83_8f = simd_and(bytetest_80_8f, tmp318);
        tmp1312 = simd_and(tmp1282, bytetest_88);
        carryQ.cq[251] = carryout2carry(pablo_blk_Advance(tmp1312, carryQ.get_carry_in(251), tmp1313));
        tmp1314 = simd_and(tmp1313, bytetest_83_8f);
        struct_Cn.cc = simd_or(tmp1314, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_88 = simd_and(bytetest_80_8f, tmp58);
        bytetest_bb_bf = simd_and(bytetest_b8_bf, tmp72);
        tmp1315 = simd_and(tmp1313, bytetest_bb_bf);
        struct_Cn.cc = simd_or(tmp1315, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_89 = simd_and(bytetest_80_8f, tmp144);
        bytetest_89_8f = simd_and(bytetest_88_8f, tmp49);
        tmp1316 = simd_and(tmp1282, bytetest_89);
        carryQ.cq[252] = carryout2carry(pablo_blk_Advance(tmp1316, carryQ.get_carry_in(252), tmp1317));
        tmp1318 = simd_and(tmp1317, bytetest_89_8f);
        struct_Cn.cc = simd_or(tmp1318, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_8a_8b = simd_and(bytetest_80_8f, tmp151);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1319 = simd_and(tmp1282, bytetest_8a_8b);
        carryQ.cq[253] = carryout2carry(pablo_blk_Advance(tmp1319, carryQ.get_carry_in(253), tmp1320));
        tmp1321 = simd_and(tmp1320, bytetest_80_bf);
        bytetest_89 = simd_and(bytetest_80_8f, tmp144);
        bytetest_92_bf = simd_and(bytetest_80_bf, tmp1082);
        tmp1322 = simd_and(tmp1317, bytetest_92_bf);
        tmp1323 = simd_or(tmp1322, tmp1321);
        struct_Cn.cc = simd_or(tmp1323, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_8c = simd_and(bytetest_80_8f, tmp81);
        bytetest_a1_af = simd_and(tmp512, tmp215);
        tmp1324 = simd_and(tmp1282, bytetest_8c);
        carryQ.cq[254] = carryout2carry(pablo_blk_Advance(tmp1324, carryQ.get_carry_in(254), tmp1325));
        tmp1326 = simd_and(tmp1325, bytetest_a1_af);
        struct_Cn.cc = simd_or(tmp1326, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_8c = simd_and(bytetest_80_8f, tmp81);
        bytetest_b6_b6 = simd_and(bytetest_b0_bf, tmp57);
        tmp1327 = simd_and(tmp1325, bytetest_b6_b6);
        struct_Cn.cc = simd_or(tmp1327, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_8d = simd_and(bytetest_80_8f, tmp6);
        bytetest_bd_bf = simd_and(bytetest_bc_bf, tmp38);
        tmp1328 = simd_and(tmp1282, bytetest_8d);
        carryQ.cq[255] = carryout2carry(pablo_blk_Advance(tmp1328, carryQ.get_carry_in(255), tmp1329));
        tmp1330 = simd_and(tmp1329, bytetest_bd_bf);
        struct_Cn.cc = simd_or(tmp1330, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_8e = simd_and(bytetest_80_8f, tmp18);
        bytetest_94_9f = simd_and(tmp549, tmp20);
        tmp1331 = simd_and(tmp1282, bytetest_8e);
        carryQ.cq[256] = carryout2carry(pablo_blk_Advance(tmp1331, carryQ.get_carry_in(256), tmp1332));
        tmp1333 = simd_and(tmp1332, bytetest_94_9f);
        struct_Cn.cc = simd_or(tmp1333, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_8f = simd_and(bytetest_80_8f, tmp25);
        bytetest_85_85 = simd_and(bytetest_80_8f, tmp47);
        tmp1334 = simd_and(tmp1282, bytetest_8f);
        carryQ.cq[257] = carryout2carry(pablo_blk_Advance(tmp1334, carryQ.get_carry_in(257), tmp1335));
        tmp1336 = simd_and(tmp1335, bytetest_85_85);
        struct_Cn.cc = simd_or(tmp1336, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_8f = simd_and(bytetest_80_8f, tmp25);
        bytetest_8b_9f = simd_and(bytetest_80_9f, tmp605);
        tmp1337 = simd_and(tmp1335, bytetest_8b_9f);
        struct_Cn.cc = simd_or(tmp1337, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_8f = simd_and(bytetest_80_8f, tmp25);
        bytetest_b1_bf = simd_and(bytetest_b0_bf, tmp215);
        tmp1338 = simd_and(tmp1335, bytetest_b1_bf);
        struct_Cn.cc = simd_or(tmp1338, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp25);
        tmp1339 = simd_and(tmp1282, bytetest_90);
        carryQ.cq[258] = carryout2carry(pablo_blk_Advance(tmp1339, carryQ.get_carry_in(258), tmp1340));
        tmp1341 = simd_and(tmp1340, bytetest_bf_bf);
        struct_Cn.cc = simd_or(tmp1341, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_91 = simd_and(tmp549, tmp107);
        bytetest_81_81 = simd_and(bytetest_80_8f, tmp107);
        tmp1342 = simd_and(tmp1282, bytetest_91);
        carryQ.cq[259] = carryout2carry(pablo_blk_Advance(tmp1342, carryQ.get_carry_in(259), tmp1343));
        tmp1344 = simd_and(tmp1343, bytetest_81_81);
        struct_Cn.cc = simd_or(tmp1344, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_93 = simd_and(tmp549, tmp120);
        bytetest_b8_b8 = simd_and(bytetest_b0_bf, tmp58);
        tmp1345 = simd_and(tmp1282, bytetest_93);
        carryQ.cq[260] = carryout2carry(pablo_blk_Advance(tmp1345, carryQ.get_carry_in(260), tmp1346));
        tmp1347 = simd_and(tmp1346, bytetest_b8_b8);
        struct_Cn.cc = simd_or(tmp1347, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_93 = simd_and(tmp549, tmp120);
        bytetest_bd_bf = simd_and(bytetest_bc_bf, tmp38);
        tmp1348 = simd_and(tmp1346, bytetest_bd_bf);
        struct_Cn.cc = simd_or(tmp1348, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_94 = simd_and(tmp549, tmp39);
        bytetest_be_bf = simd_and(bytetest_b0_bf, tmp100);
        tmp1349 = simd_and(tmp1282, bytetest_94);
        carryQ.cq[261] = carryout2carry(pablo_blk_Advance(tmp1349, carryQ.get_carry_in(261), tmp1350));
        tmp1351 = simd_and(tmp1350, bytetest_be_bf);
        struct_Cn.cc = simd_or(tmp1351, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_95 = simd_and(tmp549, tmp47);
        bytetest_84_8f = simd_and(bytetest_80_8f, tmp20);
        tmp1352 = simd_and(tmp1282, bytetest_95);
        carryQ.cq[262] = carryout2carry(pablo_blk_Advance(tmp1352, carryQ.get_carry_in(262), tmp1353));
        tmp1354 = simd_and(tmp1353, bytetest_84_8f);
        struct_Cn.cc = simd_or(tmp1354, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_97 = simd_and(tmp549, tmp67);
        tmp1355 = simd_and(basis_bits.bit_2, tmp401);
        bytetest_80_ba = simd_andc(bytetest_80_bf, tmp1355);
        tmp1356 = simd_and(tmp1282, bytetest_97);
        carryQ.cq[263] = carryout2carry(pablo_blk_Advance(tmp1356, carryQ.get_carry_in(263), tmp1357));
        tmp1358 = simd_and(tmp1357, bytetest_80_ba);
        bytetest_96 = simd_and(tmp549, tmp57);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1359 = simd_and(tmp1282, bytetest_96);
        carryQ.cq[264] = carryout2carry(pablo_blk_Advance(tmp1359, carryQ.get_carry_in(264), tmp1360));
        tmp1361 = simd_and(tmp1360, bytetest_80_bf);
        bytetest_95 = simd_and(tmp549, tmp47);
        bytetest_a8_bf = simd_and(bytetest_a0_bf, tmp844);
        tmp1362 = simd_and(tmp1353, bytetest_a8_bf);
        tmp1363 = simd_or(tmp1362, tmp1361);
        tmp1364 = simd_or(tmp1363, tmp1358);
        struct_Cn.cc = simd_or(tmp1364, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_99 = simd_and(tmp549, tmp144);
        tmp1365 = simd_or(simd_and(basis_bits.bit_5, tmp85), simd_andc(tmp38, basis_bits.bit_5));
        bytetest_81_84 = simd_and(tmp687, tmp1365);
        tmp1366 = simd_and(tmp1282, bytetest_99);
        carryQ.cq[265] = carryout2carry(pablo_blk_Advance(tmp1366, carryQ.get_carry_in(265), tmp1367));
        tmp1368 = simd_and(tmp1367, bytetest_81_84);
        struct_Cn.cc = simd_or(tmp1368, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_99 = simd_and(tmp549, tmp144);
        bytetest_90_bf = simd_and(bytetest_80_bf, tmp2);
        tmp1369 = simd_and(tmp1367, bytetest_90_bf);
        struct_Cn.cc = simd_or(tmp1369, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_9b = simd_and(tmp549, tmp28);
        bytetest_86_bf = simd_and(bytetest_80_bf, tmp1170);
        tmp1370 = simd_and(tmp1282, bytetest_9b);
        carryQ.cq[266] = carryout2carry(pablo_blk_Advance(tmp1370, carryQ.get_carry_in(266), tmp1371));
        tmp1372 = simd_and(tmp1371, bytetest_86_bf);
        struct_Cn.cc = simd_or(tmp1372, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_9e_bf = simd_and(bytetest_80_bf, tmp898);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1373 = simd_and(tmp1282, bytetest_9e_bf);
        carryQ.cq[267] = carryout2carry(pablo_blk_Advance(tmp1373, carryQ.get_carry_in(267), tmp1374));
        tmp1375 = simd_and(tmp1374, bytetest_80_bf);
        bytetest_9d = simd_and(tmp549, tmp6);
        bytetest_b4_bf = simd_and(bytetest_b0_bf, tmp20);
        tmp1376 = simd_and(tmp1282, bytetest_9d);
        carryQ.cq[268] = carryout2carry(pablo_blk_Advance(tmp1376, carryQ.get_carry_in(268), tmp1377));
        tmp1378 = simd_and(tmp1377, bytetest_b4_bf);
        tmp1379 = simd_or(tmp1378, tmp1375);
        struct_Cn.cc = simd_or(tmp1379, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_aa = simd_and(tmp512, tmp197);
        bytetest_9b = simd_and(tmp549, tmp28);
        tmp1380 = simd_and(basis_bits.bit_3, tmp159);
        tmp1381 = simd_or(basis_bits.bit_2, tmp1380);
        bytetest_97_bf = simd_and(bytetest_80_bf, tmp1381);
        tmp1382 = simd_and(tmp885, bytetest_aa);
        carryQ.cq[269] = carryout2carry(pablo_blk_Advance(tmp1382, carryQ.get_carry_in(269), tmp1383));
        tmp1384 = simd_and(tmp1383, bytetest_9b);
        carryQ.cq[270] = carryout2carry(pablo_blk_Advance(tmp1384, carryQ.get_carry_in(270), tmp1385));
        tmp1386 = simd_and(tmp1385, bytetest_97_bf);
        struct_Cn.cc = simd_or(tmp1386, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_ab = simd_and(tmp512, tmp28);
        bytetest_9c = simd_and(tmp549, tmp81);
        bytetest_b5_bf = simd_and(bytetest_b0_bf, tmp75);
        tmp1387 = simd_and(tmp885, bytetest_ab);
        carryQ.cq[271] = carryout2carry(pablo_blk_Advance(tmp1387, carryQ.get_carry_in(271), tmp1388));
        tmp1389 = simd_and(tmp1388, bytetest_9c);
        carryQ.cq[272] = carryout2carry(pablo_blk_Advance(tmp1389, carryQ.get_carry_in(272), tmp1390));
        tmp1391 = simd_and(tmp1390, bytetest_b5_bf);
        struct_Cn.cc = simd_or(tmp1391, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_af = simd_and(tmp512, tmp25);
        bytetest_80_9f = simd_andc(bytetest_80_bf, basis_bits.bit_2);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1392 = simd_and(tmp885, bytetest_af);
        carryQ.cq[273] = carryout2carry(pablo_blk_Advance(tmp1392, carryQ.get_carry_in(273), tmp1393));
        tmp1394 = simd_and(tmp1393, bytetest_80_9f);
        carryQ.cq[274] = carryout2carry(pablo_blk_Advance(tmp1394, carryQ.get_carry_in(274), tmp1395));
        tmp1396 = simd_and(tmp1395, bytetest_80_bf);
        bytetest_ac_ae = simd_andc(bytetest_ac_af, tmp24);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1397 = simd_and(tmp885, bytetest_ac_ae);
        carryQ.cq[275] = carryout2carry(pablo_blk_Advance(tmp1397, carryQ.get_carry_in(275), tmp1398));
        tmp1399 = simd_and(tmp1398, bytetest_80_bf);
        carryQ.cq[276] = carryout2carry(pablo_blk_Advance(tmp1399, carryQ.get_carry_in(276), tmp1400));
        tmp1401 = simd_and(tmp1400, bytetest_80_bf);
        bytetest_ab = simd_and(tmp512, tmp28);
        bytetest_a1_bf = simd_and(bytetest_a0_bf, tmp1142);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1402 = simd_and(tmp1388, bytetest_a1_bf);
        carryQ.cq[277] = carryout2carry(pablo_blk_Advance(tmp1402, carryQ.get_carry_in(277), tmp1403));
        tmp1404 = simd_and(tmp1403, bytetest_80_bf);
        bytetest_a0 = simd_andc(tmp512, tmp41);
        bytetest_9e_bf = simd_and(bytetest_80_bf, tmp898);
        tmp1405 = simd_and(tmp1388, bytetest_a0);
        carryQ.cq[278] = carryout2carry(pablo_blk_Advance(tmp1405, carryQ.get_carry_in(278), tmp1406));
        tmp1407 = simd_and(tmp1406, bytetest_9e_bf);
        tmp1408 = simd_or(tmp1407, tmp1404);
        tmp1409 = simd_or(tmp1408, tmp1401);
        tmp1410 = simd_or(tmp1409, tmp1396);
        struct_Cn.cc = simd_or(tmp1410, struct_Cn.cc);
        bytetest_f3 = simd_and(tmp883, tmp120);
        bytetest_a0 = simd_andc(tmp512, tmp41);
        bytetest_80 = simd_andc(bytetest_80_8f, tmp41);
        bytetest_80_80 = simd_andc(bytetest_80_8f, tmp41);
        tmp1411 = simd_and(tmp13, bytetest_f3);
        carryQ.cq[279] = carryout2carry(pablo_blk_Advance(tmp1411, carryQ.get_carry_in(279), tmp1412));
        tmp1413 = simd_and(tmp1412, bytetest_a0);
        carryQ.cq[280] = carryout2carry(pablo_blk_Advance(tmp1413, carryQ.get_carry_in(280), tmp1414));
        tmp1415 = simd_and(tmp1414, bytetest_80);
        carryQ.cq[281] = carryout2carry(pablo_blk_Advance(tmp1415, carryQ.get_carry_in(281), tmp1416));
        tmp1417 = simd_and(tmp1416, bytetest_80_80);
        bytetest_80_9f = simd_andc(bytetest_80_bf, basis_bits.bit_2);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1418 = simd_and(tmp1412, bytetest_80_9f);
        carryQ.cq[282] = carryout2carry(pablo_blk_Advance(tmp1418, carryQ.get_carry_in(282), tmp1419));
        tmp1420 = simd_and(tmp1419, bytetest_80_bf);
        carryQ.cq[283] = carryout2carry(pablo_blk_Advance(tmp1420, carryQ.get_carry_in(283), tmp1421));
        tmp1422 = simd_and(tmp1421, bytetest_80_bf);
        tmp1423 = simd_or(tmp1422, tmp1417);
        tmp1424 = simd_andc(tmp883, tmp20);
        bytetest_f1_f2 = simd_and(tmp1424, tmp140);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_b0_bf = simd_and(bytetest_80_bf, tmp8);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1425 = simd_and(tmp885, bytetest_b0_bf);
        carryQ.cq[284] = carryout2carry(pablo_blk_Advance(tmp1425, carryQ.get_carry_in(284), tmp1426));
        tmp1427 = simd_and(tmp1426, bytetest_80_bf);
        carryQ.cq[285] = carryout2carry(pablo_blk_Advance(tmp1427, carryQ.get_carry_in(285), tmp1428));
        tmp1429 = simd_and(tmp1428, bytetest_80_bf);
        bytetest_af = simd_and(tmp512, tmp25);
        bytetest_a9_bf = simd_and(bytetest_a0_bf, tmp1016);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1430 = simd_and(tmp1393, bytetest_a9_bf);
        carryQ.cq[286] = carryout2carry(pablo_blk_Advance(tmp1430, carryQ.get_carry_in(286), tmp1431));
        tmp1432 = simd_and(tmp1431, bytetest_80_bf);
        bytetest_a8 = simd_and(tmp512, tmp58);
        bytetest_9e_bf = simd_and(bytetest_80_bf, tmp898);
        tmp1433 = simd_and(tmp1393, bytetest_a8);
        carryQ.cq[287] = carryout2carry(pablo_blk_Advance(tmp1433, carryQ.get_carry_in(287), tmp1434));
        tmp1435 = simd_and(tmp1434, bytetest_9e_bf);
        tmp1436 = simd_or(tmp1435, tmp1432);
        tmp1437 = simd_or(tmp1436, tmp1429);
        tmp1438 = simd_or(tmp1437, bytetest_f1_f2);
        tmp1439 = simd_or(tmp1438, tmp1423);
        struct_Cn.cc = simd_or(tmp1439, struct_Cn.cc);
        bytetest_f3 = simd_and(tmp883, tmp120);
        bytetest_a0 = simd_andc(tmp512, tmp41);
        bytetest_80 = simd_andc(bytetest_80_8f, tmp41);
        bytetest_82_9f = simd_and(bytetest_80_9f, tmp1149);
        tmp1440 = simd_and(tmp1416, bytetest_82_9f);
        struct_Cn.cc = simd_or(tmp1440, struct_Cn.cc);
        bytetest_f3 = simd_and(tmp883, tmp120);
        bytetest_a0 = simd_andc(tmp512, tmp41);
        bytetest_82_83 = simd_and(bytetest_80_8f, tmp579);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1441 = simd_and(tmp1414, bytetest_82_83);
        carryQ.cq[288] = carryout2carry(pablo_blk_Advance(tmp1441, carryQ.get_carry_in(288), tmp1442));
        tmp1443 = simd_and(tmp1442, bytetest_80_bf);
        struct_Cn.cc = simd_or(tmp1443, struct_Cn.cc);
        bytetest_f3 = simd_and(tmp883, tmp120);
        bytetest_a1_af = simd_and(tmp512, tmp215);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1444 = simd_and(tmp1412, bytetest_a1_af);
        carryQ.cq[289] = carryout2carry(pablo_blk_Advance(tmp1444, carryQ.get_carry_in(289), tmp1445));
        tmp1446 = simd_and(tmp1445, bytetest_80_bf);
        carryQ.cq[290] = carryout2carry(pablo_blk_Advance(tmp1446, carryQ.get_carry_in(290), tmp1447));
        tmp1448 = simd_and(tmp1447, bytetest_80_bf);
        bytetest_a0 = simd_andc(tmp512, tmp41);
        tmp1449 = simd_or(basis_bits.bit_2, tmp844);
        bytetest_88_bf = simd_and(bytetest_80_bf, tmp1449);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1450 = simd_and(tmp1414, bytetest_88_bf);
        carryQ.cq[291] = carryout2carry(pablo_blk_Advance(tmp1450, carryQ.get_carry_in(291), tmp1451));
        tmp1452 = simd_and(tmp1451, bytetest_80_bf);
        bytetest_87 = simd_and(bytetest_80_8f, tmp67);
        bytetest_b0_bf = simd_and(bytetest_80_bf, tmp8);
        tmp1453 = simd_and(tmp1414, bytetest_87);
        carryQ.cq[292] = carryout2carry(pablo_blk_Advance(tmp1453, carryQ.get_carry_in(292), tmp1454));
        tmp1455 = simd_and(tmp1454, bytetest_b0_bf);
        tmp1456 = simd_or(tmp1455, tmp1452);
        tmp1457 = simd_or(tmp1456, tmp1448);
        struct_Cn.cc = simd_or(tmp1457, struct_Cn.cc);
        bytetest_f3 = simd_and(tmp883, tmp120);
        bytetest_bf = simd_and(bytetest_b0_bf, tmp25);
        bytetest_bf = simd_and(bytetest_b0_bf, tmp25);
        bytetest_be_bf = simd_and(bytetest_b0_bf, tmp100);
        tmp1458 = simd_and(tmp1412, bytetest_bf);
        carryQ.cq[293] = carryout2carry(pablo_blk_Advance(tmp1458, carryQ.get_carry_in(293), tmp1459));
        tmp1460 = simd_and(tmp1459, bytetest_bf);
        carryQ.cq[294] = carryout2carry(pablo_blk_Advance(tmp1460, carryQ.get_carry_in(294), tmp1461));
        tmp1462 = simd_and(tmp1461, bytetest_be_bf);
        struct_Cn.cc = simd_or(tmp1462, struct_Cn.cc);
        carryQ.CarryQ_Adjust(295);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Cn & struct_Cn, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_cd, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, bytetest_b8_b9, tmp12, tmp13, tmp14, tmp15, tmp16;
		BitBlock tmp17, tmp18, bytetest_ce, tmp19, tmp20, bytetest_80_83, tmp21, tmp22;
		BitBlock tmp23, tmp24, tmp25, bytetest_bf_bf, tmp26, tmp27, tmp28;
		BitBlock bytetest_8b_8b, tmp29, bytetest_8d_8d, tmp30, tmp31, tmp32, tmp33;
		BitBlock bytetest_a2_a2, tmp34, tmp35, tmp36, tmp37, tmp38, tmp39, bytetest_d4;
		BitBlock tmp40, tmp41, tmp42, tmp43, bytetest_a8_b0, tmp44, tmp45, tmp46;
		BitBlock tmp47, bytetest_d5, tmp48, tmp49, tmp50, tmp51, tmp52, bytetest_97_98;
		BitBlock tmp53, tmp54, tmp55, bytetest_a0_a0, tmp56, tmp57, bytetest_d6, tmp58;
		BitBlock bytetest_88_88, tmp59, tmp60, tmp61, tmp62, tmp63, tmp64;
		BitBlock bytetest_8b_8e, tmp65, bytetest_90_90, tmp66, tmp67, bytetest_d7;
		BitBlock bytetest_88_8f, tmp68, tmp69, tmp70, tmp71, tmp72, bytetest_ab_af;
		BitBlock tmp73, tmp74, tmp75, bytetest_b5_bf, tmp76, bytetest_d8;
		BitBlock bytetest_85_85, tmp77, tmp78, tmp79, bytetest_9d_9d, tmp80, tmp81;
		BitBlock bytetest_dc, bytetest_8e_8e, tmp82, tmp83, tmp84, bytetest_dd, tmp85;
		BitBlock tmp86, bytetest_8b_8c, tmp87, tmp88, tmp89, bytetest_de, tmp90, tmp91;
		BitBlock bytetest_b2_bf, tmp92, tmp93, tmp94, bytetest_df, tmp95;
		BitBlock bytetest_bb_bf, tmp96, tmp97, tmp98, tmp99, bytetest_e0, bytetest_a0;
		BitBlock tmp100, bytetest_ae_af, tmp101, tmp102, tmp103, tmp104, tmp105;
		BitBlock tmp106, tmp107, bytetest_a1, tmp108, bytetest_9c_9d, tmp109, tmp110;
		BitBlock tmp111, bytetest_a2, bytetest_80_9f, tmp112, tmp113, tmp114, tmp115;
		BitBlock tmp116, bytetest_9f_bf, tmp117, tmp118, bytetest_a1_a1, tmp119;
		BitBlock tmp120, bytetest_a3, tmp121, tmp122, bytetest_80_a3, tmp123, tmp124;
		BitBlock tmp125, tmp126, tmp127, bytetest_ad_bf, tmp128, tmp129, tmp130;
		BitBlock bytetest_a5, bytetest_b8_b8, tmp131, tmp132, tmp133, bytetest_a6;
		BitBlock bytetest_80_80, tmp134, tmp135, tmp136, bytetest_84_84, tmp137;
		BitBlock tmp138, tmp139, tmp140, bytetest_8d_8e, tmp141, tmp142;
		BitBlock bytetest_91_92, tmp143, tmp144, bytetest_a9_a9, tmp145;
		BitBlock bytetest_b1_b1, tmp146, tmp147, tmp148, tmp149, bytetest_b3_b5;
		BitBlock tmp150, tmp151, bytetest_ba_bb, tmp152, bytetest_a7, tmp153;
		BitBlock bytetest_85_86, tmp154, tmp155, tmp156, tmp157, bytetest_89_8a;
		BitBlock tmp158, tmp159, tmp160, tmp161, bytetest_8f_96, tmp162;
		BitBlock bytetest_98_9b, tmp163, bytetest_9e_9e, tmp164, tmp165;
		BitBlock bytetest_a4_a5, tmp166, bytetest_a8, tmp167, tmp168, tmp169;
		BitBlock bytetest_bc_bf, tmp170, tmp171, tmp172, tmp173, tmp174, tmp175;
		BitBlock tmp176, bytetest_b4_b4, tmp177, bytetest_b7_b7, tmp178, tmp179;
		BitBlock bytetest_bd_bd, tmp180, bytetest_a9, tmp181, bytetest_83_86, tmp182;
		BitBlock tmp183, tmp184, tmp185, tmp186, bytetest_8e_90, tmp187, tmp188;
		BitBlock bytetest_92_98, tmp189, tmp190, tmp191, tmp192, tmp193, tmp194;
		BitBlock tmp195, bytetest_9f_a5, tmp196, tmp197, bytetest_aa, tmp198, tmp199;
		BitBlock tmp200, bytetest_b6_bf, tmp201, tmp202, tmp203, tmp204;
		BitBlock bytetest_92_92, tmp205, tmp206, tmp207, tmp208, tmp209, bytetest_ab;
		BitBlock bytetest_86_86, tmp210, tmp211, tmp212, bytetest_8a_8a, tmp213;
		BitBlock bytetest_8e_8f, tmp214, tmp215, bytetest_91_9f, tmp216, tmp217;
		BitBlock bytetest_ac, tmp218, tmp219, tmp220, tmp221, tmp222, tmp223, tmp224;
		BitBlock tmp225, tmp226, tmp227, tmp228, tmp229, bytetest_ad, tmp230, tmp231;
		BitBlock tmp232, tmp233, tmp234, tmp235, bytetest_8e_95, tmp236, tmp237;
		BitBlock tmp238, tmp239, bytetest_ae, tmp240, bytetest_80_81, tmp241, tmp242;
		BitBlock tmp243, bytetest_b8_bf, tmp244, tmp245, tmp246, bytetest_8b_8d;
		BitBlock tmp247, bytetest_91_91, tmp248, tmp249, bytetest_96_98, tmp250;
		BitBlock bytetest_9b_9b, tmp251, tmp252, tmp253, bytetest_a0_a2, tmp254;
		BitBlock tmp255, bytetest_a5_a7, tmp256, bytetest_ab_ad, tmp257, tmp258;
		BitBlock bytetest_ba_bd, tmp259, bytetest_af, bytetest_83_85, tmp260, tmp261;
		BitBlock tmp262, bytetest_89_89, tmp263, tmp264, tmp265, tmp266;
		BitBlock bytetest_91_96, tmp267, tmp268, tmp269, bytetest_98_a5, tmp270;
		BitBlock bytetest_b0, tmp271, tmp272, tmp273, tmp274, tmp275, tmp276, tmp277;
		BitBlock tmp278, tmp279, tmp280, tmp281, bytetest_ba_bc, tmp282, bytetest_b1;
		BitBlock tmp283, tmp284, tmp285, tmp286, tmp287, tmp288, bytetest_8e_94;
		BitBlock tmp289, bytetest_97_97, tmp290, tmp291, bytetest_9a_9f, tmp292;
		BitBlock tmp293, bytetest_b0_b7, tmp294, bytetest_b2, tmp295, tmp296, tmp297;
		BitBlock tmp298, tmp299, tmp300, tmp301, tmp302, tmp303, bytetest_b3, tmp304;
		BitBlock tmp305, tmp306, tmp307, tmp308, tmp309, tmp310, bytetest_97_9d;
		BitBlock tmp311, bytetest_9f_9f, tmp312, tmp313, bytetest_b0_b0, tmp314;
		BitBlock bytetest_b4, tmp315, tmp316, tmp317, tmp318, bytetest_b3_bf, tmp319;
		BitBlock tmp320, tmp321, tmp322, tmp323, bytetest_bb_bc, tmp324, bytetest_b5;
		BitBlock tmp325, tmp326, tmp327, tmp328, tmp329, bytetest_98_9f, tmp330;
		BitBlock tmp331, bytetest_b6_b8, tmp332, bytetest_b6, tmp333, tmp334, tmp335;
		BitBlock tmp336, tmp337, tmp338, bytetest_97_99, tmp339, bytetest_b2_b2;
		BitBlock tmp340, bytetest_bc_bc, tmp341, bytetest_be_bf, tmp342, bytetest_b7;
		BitBlock bytetest_87_89, tmp343, tmp344, tmp345, tmp346, bytetest_95_95;
		BitBlock tmp347, tmp348, tmp349, bytetest_a0_b1, tmp350, bytetest_b8, tmp351;
		BitBlock tmp352, tmp353, tmp354, tmp355, bytetest_bb_be, tmp356, bytetest_ba;
		BitBlock tmp357, tmp358, tmp359, bytetest_b9, tmp360, tmp361, bytetest_9c_bf;
		BitBlock tmp362, tmp363, tmp364, tmp365, bytetest_83_83, tmp366, tmp367;
		BitBlock tmp368, tmp369, tmp370, tmp371, bytetest_8e_93, tmp372;
		BitBlock bytetest_98_98, tmp373, tmp374, bytetest_a4_a4, tmp375;
		BitBlock bytetest_a6_a6, tmp376, bytetest_a8_a9, tmp377, bytetest_ac_ac;
		BitBlock tmp378, bytetest_ba_ba, tmp379, tmp380, bytetest_bb, tmp381, tmp382;
		BitBlock tmp383, bytetest_87_87, tmp384, tmp385, bytetest_9a_9b, tmp386;
		BitBlock bytetest_a0_bf, tmp387, bytetest_bd, tmp388, tmp389, tmp390, tmp391;
		BitBlock bytetest_ad_b0, tmp392, bytetest_be, tmp393, tmp394, tmp395, tmp396;
		BitBlock bytetest_bf, tmp397, tmp398, tmp399, tmp400, tmp401, tmp402;
		BitBlock bytetest_9b_bf, tmp403, bytetest_e1, bytetest_83, tmp404, tmp405;
		BitBlock tmp406, tmp407, tmp408, bytetest_88_8c, tmp409, tmp410, bytetest_89;
		BitBlock tmp411, tmp412, tmp413, tmp414, tmp415, bytetest_99_99, tmp416;
		BitBlock bytetest_9e_9f, tmp417, bytetest_8a, tmp418, tmp419, tmp420, tmp421;
		BitBlock tmp422, tmp423, bytetest_b6_b7, tmp424, tmp425, bytetest_8b;
		BitBlock bytetest_81_81, tmp426, tmp427, tmp428, bytetest_86_87, tmp429;
		BitBlock tmp430, bytetest_8c, tmp431, tmp432, tmp433, bytetest_96_97, tmp434;
		BitBlock bytetest_8d, bytetest_9b_9c, tmp435, tmp436, tmp437, bytetest_bd_bf;
		BitBlock tmp438, bytetest_8e, tmp439, tmp440, tmp441, bytetest_8f, tmp442;
		BitBlock tmp443, tmp444, bytetest_9a, tmp445, bytetest_9d_9f, tmp446, tmp447;
		BitBlock tmp448, bytetest_9b, bytetest_b1_bf, tmp449, tmp450, tmp451;
		BitBlock bytetest_9c, tmp452, tmp453, tmp454, bytetest_95_9f, tmp455;
		BitBlock bytetest_b7_bf, tmp456, bytetest_9d, bytetest_94_9f, tmp457, tmp458;
		BitBlock tmp459, bytetest_ad_ad, tmp460, tmp461, bytetest_b4_bf, tmp462;
		BitBlock bytetest_9f, tmp463, tmp464, tmp465, bytetest_aa_af, tmp466;
		BitBlock bytetest_ba_bf, tmp467, bytetest_8f_8f, tmp468, tmp469, tmp470;
		BitBlock tmp471, tmp472, tmp473, tmp474, tmp475, tmp476, tmp477, tmp478;
		BitBlock tmp479, tmp480, bytetest_a4, tmp481, tmp482, tmp483, bytetest_ac_af;
		BitBlock tmp484, tmp485, bytetest_81_83, tmp486, tmp487, tmp488, tmp489;
		BitBlock tmp490, tmp491, tmp492, tmp493, bytetest_8a_8f, tmp494, tmp495;
		BitBlock tmp496, bytetest_9b_9d, tmp497, tmp498, tmp499, tmp500, tmp501;
		BitBlock tmp502, tmp503, bytetest_bd_be, tmp504, tmp505, tmp506, tmp507;
		BitBlock tmp508, bytetest_80_bf, tmp509, tmp510, tmp511, tmp512, tmp513;
		BitBlock tmp514, bytetest_ae_bf, tmp515, tmp516, tmp517, bytetest_8c_8f;
		BitBlock tmp518, tmp519, tmp520, tmp521, tmp522, tmp523, tmp524, tmp525;
		BitBlock bytetest_b4_bb, tmp526, tmp527, tmp528, tmp529, bytetest_b8_ba;
		BitBlock tmp530, tmp531, tmp532, tmp533, bytetest_8a_8c, tmp534, tmp535;
		BitBlock tmp536, tmp537, tmp538, tmp539, tmp540, tmp541, tmp542, tmp543;
		BitBlock tmp544, tmp545, bytetest_a7_bb, tmp546, tmp547, tmp548, bytetest_bc;
		BitBlock tmp549, tmp550, tmp551, tmp552, tmp553, tmp554, tmp555, tmp556;
		BitBlock tmp557, tmp558, bytetest_9a_9a, tmp559, bytetest_9c_9c, tmp560;
		BitBlock tmp561, tmp562, bytetest_b5_b5, tmp563, tmp564, tmp565, tmp566;
		BitBlock tmp567, tmp568, bytetest_94_95, tmp569, tmp570, bytetest_b0_b1;
		BitBlock tmp571, tmp572, tmp573, bytetest_e2, bytetest_81, bytetest_a5_a5;
		BitBlock tmp574, tmp575, tmp576, tmp577, tmp578, tmp579, bytetest_b2_b3;
		BitBlock tmp580, bytetest_82, tmp581, tmp582, tmp583, tmp584, tmp585;
		BitBlock bytetest_80_8f, tmp586, tmp587, tmp588, tmp589, tmp590, tmp591;
		BitBlock tmp592, bytetest_86, tmp593, tmp594, tmp595, tmp596, tmp597, tmp598;
		BitBlock tmp599, bytetest_90, tmp600, bytetest_a7_bf, tmp601, tmp602, tmp603;
		BitBlock bytetest_91, tmp604, tmp605, bytetest_8b_9f, tmp606, tmp607, tmp608;
		BitBlock tmp609, tmp610, tmp611, tmp612, bytetest_8d_8f, tmp613, tmp614;
		BitBlock tmp615, tmp616, tmp617, tmp618, tmp619, tmp620, tmp621;
		BitBlock bytetest_9a_bf, tmp622, tmp623, bytetest_af_af, tmp624, tmp625;
		BitBlock tmp626, tmp627, tmp628, tmp629, tmp630, bytetest_b4_b8, tmp631;
		BitBlock tmp632, tmp633, tmp634, tmp635, tmp636, tmp637, bytetest_a8_ac;
		BitBlock tmp638, tmp639, bytetest_a8_ae, tmp640, tmp641, tmp642, tmp643;
		BitBlock tmp644, bytetest_b1_be, tmp645, bytetest_97_9f, tmp646, tmp647;
		BitBlock tmp648, bytetest_a7_a7, tmp649, tmp650, tmp651, tmp652, tmp653;
		BitBlock tmp654, tmp655, tmp656, tmp657, tmp658, tmp659, tmp660, tmp661;
		BitBlock tmp662, tmp663, tmp664, tmp665, tmp666, tmp667, tmp668, tmp669;
		BitBlock tmp670, tmp671, tmp672, tmp673, tmp674, bytetest_96_af, tmp675;
		BitBlock tmp676, tmp677, tmp678, bytetest_e3, tmp679, tmp680, tmp681, tmp682;
		BitBlock tmp683, tmp684, tmp685, tmp686, bytetest_84, tmp687, bytetest_80_84;
		BitBlock tmp688, tmp689, tmp690, bytetest_ae_b0, tmp691, tmp692, tmp693;
		BitBlock tmp694, tmp695, bytetest_87, bytetest_a4_af, tmp696, tmp697, tmp698;
		BitBlock bytetest_88, tmp699, tmp700, tmp701, tmp702, tmp703, tmp704;
		BitBlock bytetest_e4, tmp705, tmp706, tmp707, tmp708, tmp709, bytetest_e9;
		BitBlock tmp710, bytetest_8d_bf, tmp711, tmp712, tmp713, tmp714, tmp715;
		BitBlock bytetest_ea, bytetest_92, tmp716, tmp717, tmp718, tmp719, tmp720;
		BitBlock bytetest_93, bytetest_87_8f, tmp721, tmp722, tmp723, bytetest_98;
		BitBlock tmp724, bytetest_ac_bf, tmp725, tmp726, tmp727, tmp728;
		BitBlock bytetest_98_9e, tmp729, tmp730, tmp731, tmp732, tmp733, tmp734;
		BitBlock bytetest_9e, tmp735, tmp736, tmp737, tmp738, tmp739, bytetest_80_b7;
		BitBlock tmp740, tmp741, tmp742, bytetest_ab_bf, tmp743, tmp744, tmp745;
		BitBlock tmp746, tmp747, tmp748, tmp749, tmp750, tmp751, tmp752;
		BitBlock bytetest_85_8d, tmp753, tmp754, tmp755, tmp756, tmp757, tmp758;
		BitBlock bytetest_94_9e, tmp759, tmp760, tmp761, tmp762, tmp763, tmp764;
		BitBlock tmp765, bytetest_9a_9d, tmp766, tmp767, tmp768, tmp769, tmp770;
		BitBlock tmp771, tmp772, tmp773, tmp774, tmp775, tmp776, tmp777, tmp778;
		BitBlock bytetest_83_9a, tmp779, tmp780, tmp781, tmp782, tmp783, tmp784;
		BitBlock tmp785, tmp786, bytetest_87_88, tmp787, tmp788, bytetest_8f_90;
		BitBlock tmp789, tmp790, tmp791, bytetest_ad_ae, tmp792, tmp793, tmp794;
		BitBlock tmp795, bytetest_af_bf, tmp796, tmp797, tmp798, tmp799, tmp800;
		BitBlock tmp801, bytetest_ed, tmp802, tmp803, tmp804, tmp805, tmp806, tmp807;
		BitBlock tmp808, bytetest_87_8a, tmp809, tmp810, tmp811, tmp812, bytetest_ef;
		BitBlock tmp813, tmp814, tmp815, tmp816, tmp817, tmp818, tmp819, tmp820;
		BitBlock tmp821, tmp822, bytetest_87_92, tmp823, tmp824, tmp825;
		BitBlock bytetest_98_9c, tmp826, tmp827, tmp828, tmp829, bytetest_82_82;
		BitBlock tmp830, tmp831, tmp832, tmp833, tmp834, bytetest_82_92, tmp835;
		BitBlock tmp836, tmp837, tmp838, tmp839, tmp840, bytetest_90_91, tmp841;
		BitBlock tmp842, tmp843, tmp844, tmp845, bytetest_88_af, tmp846, tmp847;
		BitBlock tmp848, tmp849, tmp850, tmp851, tmp852, bytetest_a7_af, tmp853;
		BitBlock bytetest_93_93, tmp854, tmp855, tmp856, tmp857, tmp858, tmp859;
		BitBlock tmp860, tmp861, tmp862, tmp863, tmp864, tmp865, tmp866, tmp867;
		BitBlock tmp868, tmp869, tmp870, tmp871, tmp872, bytetest_88_89, tmp873;
		BitBlock tmp874, bytetest_98_99, tmp875, tmp876, tmp877, tmp878, tmp879;
		BitBlock tmp880, bytetest_af_b8, tmp881, tmp882, tmp883, bytetest_f0;
		BitBlock bytetest_80, bytetest_8c_8c, tmp884, tmp885, tmp886, tmp887, tmp888;
		BitBlock tmp889, tmp890, tmp891, bytetest_bb_bb, tmp892, bytetest_be_be;
		BitBlock tmp893, tmp894, tmp895, tmp896, tmp897, tmp898, bytetest_9e_bf;
		BitBlock tmp899, tmp900, tmp901, tmp902, tmp903, tmp904, tmp905, tmp906;
		BitBlock bytetest_b4_b6, tmp907, bytetest_8b_8f, tmp908, tmp909, tmp910;
		BitBlock tmp911, tmp912, tmp913, tmp914, tmp915, tmp916, tmp917, tmp918;
		BitBlock tmp919, tmp920, tmp921, tmp922, tmp923, tmp924, tmp925;
		BitBlock bytetest_91_bf, tmp926, tmp927, tmp928, tmp929, tmp930, tmp931;
		BitBlock tmp932, tmp933, bytetest_8b_bf, tmp934, tmp935, tmp936, tmp937;
		BitBlock tmp938, tmp939, bytetest_84_87, tmp940, tmp941, tmp942, tmp943;
		BitBlock bytetest_96_bf, tmp944, tmp945, tmp946, tmp947, bytetest_93_9f;
		BitBlock tmp948, tmp949, tmp950, tmp951, bytetest_aa_bf, tmp952, tmp953;
		BitBlock tmp954, tmp955, tmp956, tmp957, bytetest_b6_b6, tmp958;
		BitBlock bytetest_b9_bb, tmp959, tmp960, bytetest_96_96, tmp961, tmp962;
		BitBlock tmp963, bytetest_a2_a3, tmp964, tmp965, tmp966, tmp967, tmp968;
		BitBlock bytetest_9c_9e, tmp969, tmp970, tmp971, tmp972, bytetest_ba_be;
		BitBlock tmp973, tmp974, tmp975, tmp976, bytetest_b8_bd, tmp977, tmp978;
		BitBlock tmp979, tmp980, tmp981, tmp982, tmp983, tmp984, tmp985, tmp986;
		BitBlock bytetest_87_8b, tmp987, bytetest_94_94, tmp988, tmp989;
		BitBlock bytetest_b4_b7, tmp990, tmp991, tmp992, tmp993, tmp994;
		BitBlock bytetest_99_9f, tmp995, bytetest_aa_ab, tmp996, tmp997, tmp998;
		BitBlock tmp999, tmp1000, tmp1001, tmp1002, tmp1003, tmp1004, tmp1005;
		BitBlock bytetest_b3_b7, tmp1006, tmp1007, tmp1008, tmp1009, tmp1010, tmp1011;
		BitBlock tmp1012, bytetest_b2_b8, tmp1013, tmp1014, tmp1015, tmp1016, tmp1017;
		BitBlock bytetest_89_bf, tmp1018, tmp1019, tmp1020, tmp1021, tmp1022, tmp1023;
		BitBlock tmp1024, tmp1025, tmp1026, tmp1027, tmp1028, tmp1029, bytetest_8e_91;
		BitBlock tmp1030, tmp1031, tmp1032, tmp1033, tmp1034, bytetest_b0_bf, tmp1035;
		BitBlock bytetest_82_8f, tmp1036, tmp1037, tmp1038, bytetest_a9_af, tmp1039;
		BitBlock tmp1040, tmp1041, tmp1042, tmp1043, tmp1044, bytetest_85, tmp1045;
		BitBlock bytetest_84_bf, tmp1046, tmp1047, tmp1048, bytetest_89_8f, tmp1049;
		BitBlock tmp1050, tmp1051, tmp1052, tmp1053, bytetest_88_99, tmp1054, tmp1055;
		BitBlock tmp1056, tmp1057, tmp1058, tmp1059, tmp1060, tmp1061, tmp1062;
		BitBlock tmp1063, tmp1064, tmp1065, bytetest_8a_bf, tmp1066, tmp1067, tmp1068;
		BitBlock tmp1069, tmp1070, tmp1071, tmp1072, tmp1073, tmp1074, tmp1075;
		BitBlock tmp1076, tmp1077, tmp1078, bytetest_a3_af, tmp1079, tmp1080, tmp1081;
		BitBlock tmp1082, bytetest_92_bf, tmp1083, tmp1084, tmp1085, tmp1086, tmp1087;
		BitBlock bytetest_96, tmp1088, tmp1089, tmp1090, tmp1091, tmp1092, tmp1093;
		BitBlock tmp1094, tmp1095, tmp1096, tmp1097, tmp1098, tmp1099, tmp1100;
		BitBlock tmp1101, tmp1102, tmp1103, tmp1104, tmp1105, tmp1106, tmp1107;
		BitBlock tmp1108, tmp1109, bytetest_a9_bb, tmp1110, tmp1111, tmp1112;
		BitBlock bytetest_b9_bf, tmp1113, tmp1114, tmp1115, tmp1116, bytetest_85_8f;
		BitBlock tmp1117, tmp1118, tmp1119, tmp1120, bytetest_80_8e, tmp1121, tmp1122;
		BitBlock tmp1123, tmp1124, tmp1125, bytetest_97_9a, tmp1126, tmp1127, tmp1128;
		BitBlock tmp1129, tmp1130, tmp1131, tmp1132, tmp1133, tmp1134, tmp1135;
		BitBlock tmp1136, tmp1137, tmp1138, tmp1139, tmp1140, tmp1141, tmp1142;
		BitBlock tmp1143, bytetest_81_bf, tmp1144, tmp1145, tmp1146, tmp1147, tmp1148;
		BitBlock tmp1149, tmp1150, bytetest_82_bf, tmp1151, tmp1152, tmp1153, tmp1154;
		BitBlock tmp1155, tmp1156, tmp1157, tmp1158, tmp1159, tmp1160, bytetest_a7_a8;
		BitBlock tmp1161, tmp1162, tmp1163, tmp1164, tmp1165, tmp1166, bytetest_8a_8b;
		BitBlock tmp1167, tmp1168, tmp1169, tmp1170, bytetest_86_bf, tmp1171, tmp1172;
		BitBlock tmp1173, tmp1174, tmp1175, tmp1176, tmp1177, tmp1178, tmp1179;
		BitBlock tmp1180, tmp1181, tmp1182, tmp1183, tmp1184, tmp1185, tmp1186;
		BitBlock tmp1187, tmp1188, bytetest_a0_a1, tmp1189, tmp1190, bytetest_a3_a4;
		BitBlock tmp1191, tmp1192, tmp1193, tmp1194, tmp1195, tmp1196, tmp1197;
		BitBlock tmp1198, bytetest_94, tmp1199, tmp1200, tmp1201, tmp1202, tmp1203;
		BitBlock tmp1204, tmp1205, tmp1206, bytetest_95, tmp1207, tmp1208, tmp1209;
		BitBlock tmp1210, tmp1211, bytetest_a6_a7, tmp1212, tmp1213, tmp1214;
		BitBlock bytetest_8c_8d, tmp1215, tmp1216, tmp1217, tmp1218, tmp1219, tmp1220;
		BitBlock tmp1221, tmp1222, tmp1223, tmp1224, tmp1225, tmp1226, tmp1227;
		BitBlock tmp1228, tmp1229, tmp1230, bytetest_a3_a3, tmp1231, tmp1232;
		BitBlock bytetest_a5_a6, tmp1233, bytetest_a8_a8, tmp1234, bytetest_b3_b3;
		BitBlock tmp1235, tmp1236, tmp1237, tmp1238, tmp1239, tmp1240, tmp1241;
		BitBlock tmp1242, tmp1243, tmp1244, tmp1245, tmp1246, tmp1247, tmp1248;
		BitBlock tmp1249, bytetest_95_96, tmp1250, tmp1251, tmp1252, tmp1253, tmp1254;
		BitBlock tmp1255, tmp1256, tmp1257, bytetest_ab_ab, tmp1258, tmp1259, tmp1260;
		BitBlock tmp1261, tmp1262, tmp1263, tmp1264, tmp1265, tmp1266, tmp1267;
		BitBlock bytetest_9c_a0, tmp1268, tmp1269, bytetest_aa_aa, tmp1270;
		BitBlock bytetest_80_af, tmp1271, tmp1272, tmp1273, tmp1274, tmp1275, tmp1276;
		BitBlock tmp1277, tmp1278, tmp1279, tmp1280, tmp1281, tmp1282, tmp1283;
		BitBlock tmp1284, tmp1285, tmp1286, tmp1287, tmp1288, bytetest_af_b0, tmp1289;
		BitBlock tmp1290, tmp1291, tmp1292, tmp1293, tmp1294, tmp1295, tmp1296;
		BitBlock tmp1297, tmp1298, tmp1299, tmp1300, tmp1301, tmp1302, tmp1303;
		BitBlock tmp1304, bytetest_80_a5, tmp1305, tmp1306, tmp1307, tmp1308, tmp1309;
		BitBlock tmp1310, tmp1311, bytetest_83_8f, tmp1312, tmp1313, tmp1314, tmp1315;
		BitBlock tmp1316, tmp1317, tmp1318, tmp1319, tmp1320, tmp1321, tmp1322;
		BitBlock tmp1323, bytetest_a1_af, tmp1324, tmp1325, tmp1326, tmp1327, tmp1328;
		BitBlock tmp1329, tmp1330, tmp1331, tmp1332, tmp1333, tmp1334, tmp1335;
		BitBlock tmp1336, tmp1337, tmp1338, tmp1339, tmp1340, tmp1341, tmp1342;
		BitBlock tmp1343, tmp1344, tmp1345, tmp1346, tmp1347, tmp1348, tmp1349;
		BitBlock tmp1350, tmp1351, bytetest_84_8f, tmp1352, tmp1353, tmp1354;
		BitBlock bytetest_97, tmp1355, bytetest_80_ba, tmp1356, tmp1357, tmp1358;
		BitBlock tmp1359, tmp1360, tmp1361, bytetest_a8_bf, tmp1362, tmp1363, tmp1364;
		BitBlock bytetest_99, tmp1365, bytetest_81_84, tmp1366, tmp1367, tmp1368;
		BitBlock bytetest_90_bf, tmp1369, tmp1370, tmp1371, tmp1372, tmp1373, tmp1374;
		BitBlock tmp1375, tmp1376, tmp1377, tmp1378, tmp1379, tmp1380, tmp1381;
		BitBlock bytetest_97_bf, tmp1382, tmp1383, tmp1384, tmp1385, tmp1386, tmp1387;
		BitBlock tmp1388, tmp1389, tmp1390, tmp1391, tmp1392, tmp1393, tmp1394;
		BitBlock tmp1395, tmp1396, bytetest_ac_ae, tmp1397, tmp1398, tmp1399, tmp1400;
		BitBlock tmp1401, bytetest_a1_bf, tmp1402, tmp1403, tmp1404, tmp1405, tmp1406;
		BitBlock tmp1407, tmp1408, tmp1409, tmp1410, bytetest_f3, tmp1411, tmp1412;
		BitBlock tmp1413, tmp1414, tmp1415, tmp1416, tmp1417, tmp1418, tmp1419;
		BitBlock tmp1420, tmp1421, tmp1422, tmp1423, tmp1424, bytetest_f1_f2, tmp1425;
		BitBlock tmp1426, tmp1427, tmp1428, tmp1429, bytetest_a9_bf, tmp1430, tmp1431;
		BitBlock tmp1432, tmp1433, tmp1434, tmp1435, tmp1436, tmp1437, tmp1438;
		BitBlock tmp1439, bytetest_82_9f, tmp1440, bytetest_82_83, tmp1441, tmp1442;
		BitBlock tmp1443, tmp1444, tmp1445, tmp1446, tmp1447, tmp1448, tmp1449;
		BitBlock bytetest_88_bf, tmp1450, tmp1451, tmp1452, tmp1453, tmp1454, tmp1455;
		BitBlock tmp1456, tmp1457, tmp1458, tmp1459, tmp1460, tmp1461, tmp1462;




        struct_Cn.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp1, tmp2);
        tmp4 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp6 = simd_and(tmp4, tmp5);
        bytetest_cd = simd_and(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp11 = simd_andc(tmp10, basis_bits.bit_6);
        bytetest_b8_b9 = simd_and(tmp9, tmp11);
        tmp12 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp12, carryQ.get_carry_in(0), tmp13));
        tmp14 = simd_and(tmp13, bytetest_cd);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp14, carryQ.get_carry_in(1), tmp15));
        tmp16 = simd_and(tmp15, bytetest_b8_b9);
        struct_Cn.cc = simd_or(tmp16, struct_Cn.cc);
        tmp17 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp18 = simd_and(tmp4, tmp17);
        bytetest_ce = simd_and(tmp3, tmp18);
        tmp19 = simd_andc(tmp7, tmp2);
        tmp20 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        bytetest_80_83 = simd_andc(tmp19, tmp20);
        tmp21 = simd_and(tmp13, bytetest_ce);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp21, carryQ.get_carry_in(2), tmp22));
        tmp23 = simd_and(tmp22, bytetest_80_83);
        bytetest_cd = simd_and(tmp3, tmp6);
        tmp24 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp25 = simd_and(tmp4, tmp24);
        bytetest_bf_bf = simd_and(tmp9, tmp25);
        tmp26 = simd_and(tmp15, bytetest_bf_bf);
        tmp27 = simd_or(tmp26, tmp23);
        struct_Cn.cc = simd_or(tmp27, struct_Cn.cc);
        bytetest_ce = simd_and(tmp3, tmp18);
        tmp28 = simd_and(tmp10, tmp24);
        bytetest_8b_8b = simd_and(tmp19, tmp28);
        tmp29 = simd_and(tmp22, bytetest_8b_8b);
        struct_Cn.cc = simd_or(tmp29, struct_Cn.cc);
        bytetest_ce = simd_and(tmp3, tmp18);
        bytetest_8d_8d = simd_and(tmp19, tmp6);
        tmp30 = simd_and(tmp22, bytetest_8d_8d);
        struct_Cn.cc = simd_or(tmp30, struct_Cn.cc);
        bytetest_ce = simd_and(tmp3, tmp18);
        tmp31 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp32 = simd_and(tmp7, tmp31);
        tmp33 = simd_andc(tmp17, tmp20);
        bytetest_a2_a2 = simd_and(tmp32, tmp33);
        tmp34 = simd_and(tmp22, bytetest_a2_a2);
        struct_Cn.cc = simd_or(tmp34, struct_Cn.cc);
        tmp35 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp36 = simd_and(tmp1, tmp35);
        tmp37 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp38 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp39 = simd_andc(tmp37, tmp38);
        bytetest_d4 = simd_and(tmp36, tmp39);
        tmp40 = simd_and(tmp7, basis_bits.bit_2);
        tmp41 = simd_or(tmp20, tmp38);
        tmp42 = simd_not(tmp41);
        tmp43 = simd_or(simd_and(basis_bits.bit_3, tmp42), simd_andc(basis_bits.bit_4, basis_bits.bit_3));
        bytetest_a8_b0 = simd_and(tmp40, tmp43);
        tmp44 = simd_and(tmp13, bytetest_d4);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp44, carryQ.get_carry_in(3), tmp45));
        tmp46 = simd_and(tmp45, bytetest_a8_b0);
        struct_Cn.cc = simd_or(tmp46, struct_Cn.cc);
        tmp47 = simd_and(tmp37, tmp5);
        bytetest_d5 = simd_and(tmp36, tmp47);
        tmp48 = simd_and(tmp7, tmp35);
        tmp49 = simd_or(basis_bits.bit_5, tmp38);
        tmp50 = simd_not(tmp49);
        tmp51 = simd_and(basis_bits.bit_5, tmp24);
        tmp52 = simd_or(simd_and(basis_bits.bit_4, tmp50), simd_andc(tmp51, basis_bits.bit_4));
        bytetest_97_98 = simd_and(tmp48, tmp52);
        tmp53 = simd_and(tmp13, bytetest_d5);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp53, carryQ.get_carry_in(4), tmp54));
        tmp55 = simd_and(tmp54, bytetest_97_98);
        struct_Cn.cc = simd_or(tmp55, struct_Cn.cc);
        bytetest_d5 = simd_and(tmp36, tmp47);
        bytetest_a0_a0 = simd_andc(tmp32, tmp41);
        tmp56 = simd_and(tmp54, bytetest_a0_a0);
        struct_Cn.cc = simd_or(tmp56, struct_Cn.cc);
        tmp57 = simd_and(tmp37, tmp17);
        bytetest_d6 = simd_and(tmp36, tmp57);
        tmp58 = simd_andc(tmp10, tmp38);
        bytetest_88_88 = simd_and(tmp19, tmp58);
        tmp59 = simd_and(tmp13, bytetest_d6);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp59, carryQ.get_carry_in(5), tmp60));
        tmp61 = simd_and(tmp60, bytetest_88_88);
        struct_Cn.cc = simd_or(tmp61, struct_Cn.cc);
        bytetest_d6 = simd_and(tmp36, tmp57);
        tmp62 = simd_and(tmp19, basis_bits.bit_4);
        tmp63 = simd_not(tmp24);
        tmp64 = simd_or(simd_and(basis_bits.bit_5, tmp63), simd_andc(tmp24, basis_bits.bit_5));
        bytetest_8b_8e = simd_and(tmp62, tmp64);
        tmp65 = simd_and(tmp60, bytetest_8b_8e);
        struct_Cn.cc = simd_or(tmp65, struct_Cn.cc);
        bytetest_d6 = simd_and(tmp36, tmp57);
        bytetest_90_90 = simd_andc(tmp48, tmp41);
        tmp66 = simd_and(tmp60, bytetest_90_90);
        struct_Cn.cc = simd_or(tmp66, struct_Cn.cc);
        tmp67 = simd_and(tmp37, tmp24);
        bytetest_d7 = simd_and(tmp36, tmp67);
        bytetest_88_8f = simd_and(tmp19, basis_bits.bit_4);
        tmp68 = simd_and(tmp13, bytetest_d7);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp68, carryQ.get_carry_in(6), tmp69));
        tmp70 = simd_and(tmp69, bytetest_88_8f);
        struct_Cn.cc = simd_or(tmp70, struct_Cn.cc);
        bytetest_d7 = simd_and(tmp36, tmp67);
        tmp71 = simd_and(tmp32, basis_bits.bit_4);
        tmp72 = simd_or(basis_bits.bit_5, tmp24);
        bytetest_ab_af = simd_and(tmp71, tmp72);
        tmp73 = simd_and(tmp69, bytetest_ab_af);
        struct_Cn.cc = simd_or(tmp73, struct_Cn.cc);
        bytetest_d7 = simd_and(tmp36, tmp67);
        tmp74 = simd_and(basis_bits.bit_5, tmp38);
        tmp75 = simd_or(basis_bits.bit_4, tmp74);
        bytetest_b5_bf = simd_and(tmp9, tmp75);
        tmp76 = simd_and(tmp69, bytetest_b5_bf);
        struct_Cn.cc = simd_or(tmp76, struct_Cn.cc);
        bytetest_d8 = simd_and(tmp36, tmp58);
        bytetest_85_85 = simd_and(tmp19, tmp47);
        tmp77 = simd_and(tmp13, bytetest_d8);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp77, carryQ.get_carry_in(7), tmp78));
        tmp79 = simd_and(tmp78, bytetest_85_85);
        struct_Cn.cc = simd_or(tmp79, struct_Cn.cc);
        bytetest_d8 = simd_and(tmp36, tmp58);
        bytetest_9d_9d = simd_and(tmp48, tmp6);
        tmp80 = simd_and(tmp78, bytetest_9d_9d);
        struct_Cn.cc = simd_or(tmp80, struct_Cn.cc);
        tmp81 = simd_andc(tmp4, tmp38);
        bytetest_dc = simd_and(tmp36, tmp81);
        bytetest_8e_8e = simd_and(tmp19, tmp18);
        tmp82 = simd_and(tmp13, bytetest_dc);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(tmp82, carryQ.get_carry_in(8), tmp83));
        tmp84 = simd_and(tmp83, bytetest_8e_8e);
        struct_Cn.cc = simd_or(tmp84, struct_Cn.cc);
        bytetest_dd = simd_and(tmp36, tmp6);
        tmp85 = simd_not(tmp38);
        tmp86 = simd_or(simd_and(basis_bits.bit_5, tmp85), simd_andc(tmp24, basis_bits.bit_5));
        bytetest_8b_8c = simd_and(bytetest_88_8f, tmp86);
        tmp87 = simd_and(tmp13, bytetest_dd);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(tmp87, carryQ.get_carry_in(9), tmp88));
        tmp89 = simd_and(tmp88, bytetest_8b_8c);
        struct_Cn.cc = simd_or(tmp89, struct_Cn.cc);
        bytetest_de = simd_and(tmp36, tmp18);
        tmp90 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
        tmp91 = simd_or(basis_bits.bit_4, tmp90);
        bytetest_b2_bf = simd_and(tmp9, tmp91);
        tmp92 = simd_and(tmp13, bytetest_de);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(tmp92, carryQ.get_carry_in(10), tmp93));
        tmp94 = simd_and(tmp93, bytetest_b2_bf);
        struct_Cn.cc = simd_or(tmp94, struct_Cn.cc);
        bytetest_df = simd_and(tmp36, tmp25);
        tmp95 = simd_and(tmp9, basis_bits.bit_4);
        bytetest_bb_bf = simd_and(tmp95, tmp72);
        tmp96 = simd_and(tmp13, bytetest_df);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(tmp96, carryQ.get_carry_in(11), tmp97));
        tmp98 = simd_and(tmp97, bytetest_bb_bf);
        struct_Cn.cc = simd_or(tmp98, struct_Cn.cc);
        tmp99 = simd_and(tmp1, tmp31);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a0 = simd_andc(tmp32, tmp41);
        tmp100 = simd_and(tmp4, basis_bits.bit_6);
        bytetest_ae_af = simd_and(tmp32, tmp100);
        tmp101 = simd_and(tmp13, bytetest_e0);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(tmp101, carryQ.get_carry_in(12), tmp102));
        tmp103 = simd_and(tmp102, bytetest_a0);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(tmp103, carryQ.get_carry_in(13), tmp104));
        tmp105 = simd_and(tmp104, bytetest_ae_af);
        struct_Cn.cc = simd_or(tmp105, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a0 = simd_andc(tmp32, tmp41);
        bytetest_bf_bf = simd_and(tmp9, tmp25);
        tmp106 = simd_and(tmp104, bytetest_bf_bf);
        struct_Cn.cc = simd_or(tmp106, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        tmp107 = simd_andc(tmp5, tmp20);
        bytetest_a1 = simd_and(tmp32, tmp107);
        tmp108 = simd_andc(tmp4, basis_bits.bit_6);
        bytetest_9c_9d = simd_and(tmp48, tmp108);
        tmp109 = simd_and(tmp102, bytetest_a1);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(tmp109, carryQ.get_carry_in(14), tmp110));
        tmp111 = simd_and(tmp110, bytetest_9c_9d);
        struct_Cn.cc = simd_or(tmp111, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a2 = simd_and(tmp32, tmp33);
        bytetest_80_9f = simd_andc(tmp7, basis_bits.bit_2);
        tmp112 = simd_and(tmp102, bytetest_a2);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(tmp112, carryQ.get_carry_in(15), tmp113));
        tmp114 = simd_and(tmp113, bytetest_80_9f);
        bytetest_a1 = simd_and(tmp32, tmp107);
        tmp115 = simd_and(basis_bits.bit_3, tmp25);
        tmp116 = simd_or(basis_bits.bit_2, tmp115);
        bytetest_9f_bf = simd_and(tmp7, tmp116);
        tmp117 = simd_and(tmp110, bytetest_9f_bf);
        tmp118 = simd_or(tmp117, tmp114);
        struct_Cn.cc = simd_or(tmp118, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a2 = simd_and(tmp32, tmp33);
        bytetest_a1_a1 = simd_and(tmp32, tmp107);
        tmp119 = simd_and(tmp113, bytetest_a1_a1);
        struct_Cn.cc = simd_or(tmp119, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        tmp120 = simd_andc(tmp24, tmp20);
        bytetest_a3 = simd_and(tmp32, tmp120);
        tmp121 = simd_or(basis_bits.bit_3, tmp20);
        tmp122 = simd_and(basis_bits.bit_2, tmp121);
        bytetest_80_a3 = simd_andc(tmp7, tmp122);
        tmp123 = simd_and(tmp102, bytetest_a3);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(tmp123, carryQ.get_carry_in(16), tmp124));
        tmp125 = simd_and(tmp124, bytetest_80_a3);
        bytetest_a2 = simd_and(tmp32, tmp33);
        tmp126 = simd_and(tmp4, tmp38);
        tmp127 = simd_or(basis_bits.bit_3, tmp126);
        bytetest_ad_bf = simd_and(tmp40, tmp127);
        tmp128 = simd_and(tmp113, bytetest_ad_bf);
        tmp129 = simd_or(tmp128, tmp125);
        struct_Cn.cc = simd_or(tmp129, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a3 = simd_and(tmp32, tmp120);
        bytetest_bf_bf = simd_and(tmp9, tmp25);
        tmp130 = simd_and(tmp124, bytetest_bf_bf);
        struct_Cn.cc = simd_or(tmp130, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a5 = simd_and(tmp32, tmp47);
        bytetest_b8_b8 = simd_and(tmp9, tmp58);
        tmp131 = simd_and(tmp102, bytetest_a5);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(tmp131, carryQ.get_carry_in(17), tmp132));
        tmp133 = simd_and(tmp132, bytetest_b8_b8);
        struct_Cn.cc = simd_or(tmp133, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a6 = simd_and(tmp32, tmp57);
        bytetest_80_80 = simd_andc(tmp19, tmp41);
        tmp134 = simd_and(tmp102, bytetest_a6);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(tmp134, carryQ.get_carry_in(18), tmp135));
        tmp136 = simd_and(tmp135, bytetest_80_80);
        struct_Cn.cc = simd_or(tmp136, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a6 = simd_and(tmp32, tmp57);
        bytetest_84_84 = simd_and(tmp19, tmp39);
        tmp137 = simd_and(tmp135, bytetest_84_84);
        struct_Cn.cc = simd_or(tmp137, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a6 = simd_and(tmp32, tmp57);
        tmp138 = simd_and(tmp19, tmp4);
        tmp139 = simd_not(basis_bits.bit_7);
        tmp140 = simd_or(simd_and(basis_bits.bit_6, tmp139), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
        bytetest_8d_8e = simd_and(tmp138, tmp140);
        tmp141 = simd_and(tmp135, bytetest_8d_8e);
        struct_Cn.cc = simd_or(tmp141, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a6 = simd_and(tmp32, tmp57);
        tmp142 = simd_andc(tmp48, tmp20);
        bytetest_91_92 = simd_and(tmp142, tmp140);
        tmp143 = simd_and(tmp135, bytetest_91_92);
        struct_Cn.cc = simd_or(tmp143, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a6 = simd_and(tmp32, tmp57);
        tmp144 = simd_and(tmp10, tmp5);
        bytetest_a9_a9 = simd_and(tmp32, tmp144);
        tmp145 = simd_and(tmp135, bytetest_a9_a9);
        struct_Cn.cc = simd_or(tmp145, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a6 = simd_and(tmp32, tmp57);
        bytetest_b1_b1 = simd_and(tmp9, tmp107);
        tmp146 = simd_and(tmp135, bytetest_b1_b1);
        struct_Cn.cc = simd_or(tmp146, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a6 = simd_and(tmp32, tmp57);
        tmp147 = simd_andc(tmp9, basis_bits.bit_4);
        tmp148 = simd_not(basis_bits.bit_6);
        tmp149 = simd_or(simd_and(basis_bits.bit_5, tmp148), simd_andc(tmp24, basis_bits.bit_5));
        bytetest_b3_b5 = simd_and(tmp147, tmp149);
        tmp150 = simd_and(tmp135, bytetest_b3_b5);
        struct_Cn.cc = simd_or(tmp150, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a6 = simd_and(tmp32, tmp57);
        tmp151 = simd_and(tmp10, basis_bits.bit_6);
        bytetest_ba_bb = simd_and(tmp9, tmp151);
        tmp152 = simd_and(tmp135, bytetest_ba_bb);
        struct_Cn.cc = simd_or(tmp152, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a7 = simd_and(tmp32, tmp67);
        tmp153 = simd_and(tmp19, tmp37);
        bytetest_85_86 = simd_and(tmp153, tmp140);
        tmp154 = simd_and(tmp102, bytetest_a7);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(tmp154, carryQ.get_carry_in(19), tmp155));
        tmp156 = simd_and(tmp155, bytetest_85_86);
        struct_Cn.cc = simd_or(tmp156, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a7 = simd_and(tmp32, tmp67);
        tmp157 = simd_and(tmp19, tmp10);
        bytetest_89_8a = simd_and(tmp157, tmp140);
        tmp158 = simd_and(tmp155, bytetest_89_8a);
        struct_Cn.cc = simd_or(tmp158, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a7 = simd_and(tmp32, tmp67);
        tmp159 = simd_or(basis_bits.bit_4, tmp51);
        tmp160 = simd_not(tmp159);
        tmp161 = simd_or(simd_and(basis_bits.bit_3, tmp160), simd_andc(tmp25, basis_bits.bit_3));
        bytetest_8f_96 = simd_and(bytetest_80_9f, tmp161);
        tmp162 = simd_and(tmp155, bytetest_8f_96);
        struct_Cn.cc = simd_or(tmp162, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a7 = simd_and(tmp32, tmp67);
        bytetest_98_9b = simd_and(tmp48, tmp10);
        tmp163 = simd_and(tmp155, bytetest_98_9b);
        struct_Cn.cc = simd_or(tmp163, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a7 = simd_and(tmp32, tmp67);
        bytetest_9e_9e = simd_and(tmp48, tmp18);
        tmp164 = simd_and(tmp155, bytetest_9e_9e);
        struct_Cn.cc = simd_or(tmp164, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a7 = simd_and(tmp32, tmp67);
        tmp165 = simd_andc(tmp37, basis_bits.bit_6);
        bytetest_a4_a5 = simd_and(tmp32, tmp165);
        tmp166 = simd_and(tmp155, bytetest_a4_a5);
        struct_Cn.cc = simd_or(tmp166, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a8 = simd_and(tmp32, tmp58);
        bytetest_80_80 = simd_andc(tmp19, tmp41);
        tmp167 = simd_and(tmp102, bytetest_a8);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(tmp167, carryQ.get_carry_in(20), tmp168));
        tmp169 = simd_and(tmp168, bytetest_80_80);
        bytetest_a7 = simd_and(tmp32, tmp67);
        bytetest_bc_bf = simd_and(tmp9, tmp4);
        tmp170 = simd_and(tmp155, bytetest_bc_bf);
        tmp171 = simd_or(tmp170, tmp169);
        struct_Cn.cc = simd_or(tmp171, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a8 = simd_and(tmp32, tmp58);
        bytetest_84_84 = simd_and(tmp19, tmp39);
        tmp172 = simd_and(tmp168, bytetest_84_84);
        struct_Cn.cc = simd_or(tmp172, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a8 = simd_and(tmp32, tmp58);
        bytetest_8b_8e = simd_and(bytetest_88_8f, tmp64);
        tmp173 = simd_and(tmp168, bytetest_8b_8e);
        struct_Cn.cc = simd_or(tmp173, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a8 = simd_and(tmp32, tmp58);
        bytetest_91_92 = simd_and(tmp142, tmp140);
        tmp174 = simd_and(tmp168, bytetest_91_92);
        struct_Cn.cc = simd_or(tmp174, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a8 = simd_and(tmp32, tmp58);
        bytetest_a9_a9 = simd_and(tmp32, tmp144);
        tmp175 = simd_and(tmp168, bytetest_a9_a9);
        struct_Cn.cc = simd_or(tmp175, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a8 = simd_and(tmp32, tmp58);
        bytetest_b1_b1 = simd_and(tmp9, tmp107);
        tmp176 = simd_and(tmp168, bytetest_b1_b1);
        struct_Cn.cc = simd_or(tmp176, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a8 = simd_and(tmp32, tmp58);
        bytetest_b4_b4 = simd_and(tmp9, tmp39);
        tmp177 = simd_and(tmp168, bytetest_b4_b4);
        struct_Cn.cc = simd_or(tmp177, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a8 = simd_and(tmp32, tmp58);
        bytetest_b7_b7 = simd_and(tmp9, tmp67);
        tmp178 = simd_and(tmp168, bytetest_b7_b7);
        struct_Cn.cc = simd_or(tmp178, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a8 = simd_and(tmp32, tmp58);
        bytetest_ba_bb = simd_and(tmp9, tmp151);
        tmp179 = simd_and(tmp168, bytetest_ba_bb);
        struct_Cn.cc = simd_or(tmp179, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a8 = simd_and(tmp32, tmp58);
        bytetest_bd_bd = simd_and(tmp9, tmp6);
        tmp180 = simd_and(tmp168, bytetest_bd_bd);
        struct_Cn.cc = simd_or(tmp180, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a9 = simd_and(tmp32, tmp144);
        tmp181 = simd_andc(tmp19, basis_bits.bit_4);
        bytetest_83_86 = simd_and(tmp181, tmp64);
        tmp182 = simd_and(tmp102, bytetest_a9);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(tmp182, carryQ.get_carry_in(21), tmp183));
        tmp184 = simd_and(tmp183, bytetest_83_86);
        struct_Cn.cc = simd_or(tmp184, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a9 = simd_and(tmp32, tmp144);
        bytetest_89_8a = simd_and(tmp157, tmp140);
        tmp185 = simd_and(tmp183, bytetest_89_8a);
        struct_Cn.cc = simd_or(tmp185, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a9 = simd_and(tmp32, tmp144);
        tmp186 = simd_or(simd_and(basis_bits.bit_3, tmp42), simd_andc(tmp100, basis_bits.bit_3));
        bytetest_8e_90 = simd_and(bytetest_80_9f, tmp186);
        tmp187 = simd_and(tmp183, bytetest_8e_90);
        struct_Cn.cc = simd_or(tmp187, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a9 = simd_and(tmp32, tmp144);
        tmp188 = simd_or(simd_and(basis_bits.bit_4, tmp50), simd_andc(tmp90, basis_bits.bit_4));
        bytetest_92_98 = simd_and(tmp48, tmp188);
        tmp189 = simd_and(tmp183, bytetest_92_98);
        struct_Cn.cc = simd_or(tmp189, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a9 = simd_and(tmp32, tmp144);
        bytetest_9d_9d = simd_and(tmp48, tmp6);
        tmp190 = simd_and(tmp183, bytetest_9d_9d);
        struct_Cn.cc = simd_or(tmp190, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_a9 = simd_and(tmp32, tmp144);
        tmp191 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp192 = simd_or(basis_bits.bit_4, tmp191);
        tmp193 = simd_or(basis_bits.bit_3, tmp192);
        tmp194 = simd_not(tmp193);
        tmp195 = simd_or(simd_and(basis_bits.bit_2, tmp194), simd_andc(tmp115, basis_bits.bit_2));
        bytetest_9f_a5 = simd_and(tmp7, tmp195);
        tmp196 = simd_and(tmp183, bytetest_9f_a5);
        struct_Cn.cc = simd_or(tmp196, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        tmp197 = simd_and(tmp10, tmp17);
        bytetest_aa = simd_and(tmp32, tmp197);
        bytetest_80_80 = simd_andc(tmp19, tmp41);
        tmp198 = simd_and(tmp102, bytetest_aa);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(tmp198, carryQ.get_carry_in(22), tmp199));
        tmp200 = simd_and(tmp199, bytetest_80_80);
        bytetest_a9 = simd_and(tmp32, tmp144);
        bytetest_b6_bf = simd_and(tmp9, tmp192);
        tmp201 = simd_and(tmp183, bytetest_b6_bf);
        tmp202 = simd_or(tmp201, tmp200);
        struct_Cn.cc = simd_or(tmp202, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_aa = simd_and(tmp32, tmp197);
        bytetest_84_84 = simd_and(tmp19, tmp39);
        tmp203 = simd_and(tmp199, bytetest_84_84);
        struct_Cn.cc = simd_or(tmp203, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_aa = simd_and(tmp32, tmp197);
        bytetest_8e_8e = simd_and(tmp19, tmp18);
        tmp204 = simd_and(tmp199, bytetest_8e_8e);
        struct_Cn.cc = simd_or(tmp204, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_aa = simd_and(tmp32, tmp197);
        bytetest_92_92 = simd_and(tmp48, tmp33);
        tmp205 = simd_and(tmp199, bytetest_92_92);
        struct_Cn.cc = simd_or(tmp205, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_aa = simd_and(tmp32, tmp197);
        bytetest_a9_a9 = simd_and(tmp32, tmp144);
        tmp206 = simd_and(tmp199, bytetest_a9_a9);
        struct_Cn.cc = simd_or(tmp206, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_aa = simd_and(tmp32, tmp197);
        bytetest_b1_b1 = simd_and(tmp9, tmp107);
        tmp207 = simd_and(tmp199, bytetest_b1_b1);
        struct_Cn.cc = simd_or(tmp207, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_aa = simd_and(tmp32, tmp197);
        bytetest_b4_b4 = simd_and(tmp9, tmp39);
        tmp208 = simd_and(tmp199, bytetest_b4_b4);
        struct_Cn.cc = simd_or(tmp208, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_aa = simd_and(tmp32, tmp197);
        bytetest_ba_bb = simd_and(tmp9, tmp151);
        tmp209 = simd_and(tmp199, bytetest_ba_bb);
        struct_Cn.cc = simd_or(tmp209, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ab = simd_and(tmp32, tmp28);
        bytetest_86_86 = simd_and(tmp19, tmp57);
        tmp210 = simd_and(tmp102, bytetest_ab);
        carryQ.cq[23] = carryout2carry(pablo_blk_Advance(tmp210, carryQ.get_carry_in(23), tmp211));
        tmp212 = simd_and(tmp211, bytetest_86_86);
        struct_Cn.cc = simd_or(tmp212, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ab = simd_and(tmp32, tmp28);
        bytetest_8a_8a = simd_and(tmp19, tmp197);
        tmp213 = simd_and(tmp211, bytetest_8a_8a);
        struct_Cn.cc = simd_or(tmp213, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ab = simd_and(tmp32, tmp28);
        bytetest_8e_8f = simd_and(tmp19, tmp100);
        tmp214 = simd_and(tmp211, bytetest_8e_8f);
        struct_Cn.cc = simd_or(tmp214, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ab = simd_and(tmp32, tmp28);
        tmp215 = simd_or(basis_bits.bit_4, tmp49);
        bytetest_91_9f = simd_and(tmp48, tmp215);
        tmp216 = simd_and(tmp211, bytetest_91_9f);
        struct_Cn.cc = simd_or(tmp216, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ab = simd_and(tmp32, tmp28);
        bytetest_a4_a5 = simd_and(tmp32, tmp165);
        tmp217 = simd_and(tmp211, bytetest_a4_a5);
        struct_Cn.cc = simd_or(tmp217, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ac = simd_and(tmp32, tmp81);
        bytetest_80_80 = simd_andc(tmp19, tmp41);
        tmp218 = simd_and(tmp102, bytetest_ac);
        carryQ.cq[24] = carryout2carry(pablo_blk_Advance(tmp218, carryQ.get_carry_in(24), tmp219));
        tmp220 = simd_and(tmp219, bytetest_80_80);
        bytetest_ab = simd_and(tmp32, tmp28);
        bytetest_b2_bf = simd_and(tmp9, tmp91);
        tmp221 = simd_and(tmp211, bytetest_b2_bf);
        tmp222 = simd_or(tmp221, tmp220);
        struct_Cn.cc = simd_or(tmp222, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ac = simd_and(tmp32, tmp81);
        bytetest_84_84 = simd_and(tmp19, tmp39);
        tmp223 = simd_and(tmp219, bytetest_84_84);
        struct_Cn.cc = simd_or(tmp223, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ac = simd_and(tmp32, tmp81);
        bytetest_8d_8e = simd_and(tmp138, tmp140);
        tmp224 = simd_and(tmp219, bytetest_8d_8e);
        struct_Cn.cc = simd_or(tmp224, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ac = simd_and(tmp32, tmp81);
        bytetest_91_92 = simd_and(tmp142, tmp140);
        tmp225 = simd_and(tmp219, bytetest_91_92);
        struct_Cn.cc = simd_or(tmp225, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ac = simd_and(tmp32, tmp81);
        bytetest_a9_a9 = simd_and(tmp32, tmp144);
        tmp226 = simd_and(tmp219, bytetest_a9_a9);
        struct_Cn.cc = simd_or(tmp226, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ac = simd_and(tmp32, tmp81);
        bytetest_b1_b1 = simd_and(tmp9, tmp107);
        tmp227 = simd_and(tmp219, bytetest_b1_b1);
        struct_Cn.cc = simd_or(tmp227, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ac = simd_and(tmp32, tmp81);
        bytetest_b4_b4 = simd_and(tmp9, tmp39);
        tmp228 = simd_and(tmp219, bytetest_b4_b4);
        struct_Cn.cc = simd_or(tmp228, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ac = simd_and(tmp32, tmp81);
        bytetest_ba_bb = simd_and(tmp9, tmp151);
        tmp229 = simd_and(tmp219, bytetest_ba_bb);
        struct_Cn.cc = simd_or(tmp229, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ad = simd_and(tmp32, tmp6);
        bytetest_85_86 = simd_and(tmp153, tmp140);
        tmp230 = simd_and(tmp102, bytetest_ad);
        carryQ.cq[25] = carryout2carry(pablo_blk_Advance(tmp230, carryQ.get_carry_in(25), tmp231));
        tmp232 = simd_and(tmp231, bytetest_85_86);
        struct_Cn.cc = simd_or(tmp232, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ad = simd_and(tmp32, tmp6);
        bytetest_89_8a = simd_and(tmp157, tmp140);
        tmp233 = simd_and(tmp231, bytetest_89_8a);
        struct_Cn.cc = simd_or(tmp233, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ad = simd_and(tmp32, tmp6);
        tmp234 = simd_not(tmp192);
        tmp235 = simd_or(simd_and(basis_bits.bit_3, tmp234), simd_andc(tmp100, basis_bits.bit_3));
        bytetest_8e_95 = simd_and(bytetest_80_9f, tmp235);
        tmp236 = simd_and(tmp231, bytetest_8e_95);
        struct_Cn.cc = simd_or(tmp236, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ad = simd_and(tmp32, tmp6);
        bytetest_98_9b = simd_and(tmp48, tmp10);
        tmp237 = simd_and(tmp231, bytetest_98_9b);
        struct_Cn.cc = simd_or(tmp237, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ad = simd_and(tmp32, tmp6);
        bytetest_9e_9e = simd_and(tmp48, tmp18);
        tmp238 = simd_and(tmp231, bytetest_9e_9e);
        struct_Cn.cc = simd_or(tmp238, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ad = simd_and(tmp32, tmp6);
        bytetest_a4_a5 = simd_and(tmp32, tmp165);
        tmp239 = simd_and(tmp231, bytetest_a4_a5);
        struct_Cn.cc = simd_or(tmp239, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ae = simd_and(tmp32, tmp18);
        tmp240 = simd_or(tmp20, basis_bits.bit_6);
        bytetest_80_81 = simd_andc(tmp19, tmp240);
        tmp241 = simd_and(tmp102, bytetest_ae);
        carryQ.cq[26] = carryout2carry(pablo_blk_Advance(tmp241, carryQ.get_carry_in(26), tmp242));
        tmp243 = simd_and(tmp242, bytetest_80_81);
        bytetest_ad = simd_and(tmp32, tmp6);
        bytetest_b8_bf = simd_and(tmp9, basis_bits.bit_4);
        tmp244 = simd_and(tmp231, bytetest_b8_bf);
        tmp245 = simd_or(tmp244, tmp243);
        struct_Cn.cc = simd_or(tmp245, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ae = simd_and(tmp32, tmp18);
        bytetest_84_84 = simd_and(tmp19, tmp39);
        tmp246 = simd_and(tmp242, bytetest_84_84);
        struct_Cn.cc = simd_or(tmp246, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ae = simd_and(tmp32, tmp18);
        bytetest_8b_8d = simd_and(bytetest_88_8f, tmp149);
        tmp247 = simd_and(tmp242, bytetest_8b_8d);
        struct_Cn.cc = simd_or(tmp247, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ae = simd_and(tmp32, tmp18);
        bytetest_91_91 = simd_and(tmp48, tmp107);
        tmp248 = simd_and(tmp242, bytetest_91_91);
        struct_Cn.cc = simd_or(tmp248, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ae = simd_and(tmp32, tmp18);
        tmp249 = simd_or(simd_and(basis_bits.bit_4, tmp50), simd_andc(tmp191, basis_bits.bit_4));
        bytetest_96_98 = simd_and(tmp48, tmp249);
        tmp250 = simd_and(tmp242, bytetest_96_98);
        struct_Cn.cc = simd_or(tmp250, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ae = simd_and(tmp32, tmp18);
        bytetest_9b_9b = simd_and(tmp48, tmp28);
        tmp251 = simd_and(tmp242, bytetest_9b_9b);
        struct_Cn.cc = simd_or(tmp251, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ae = simd_and(tmp32, tmp18);
        bytetest_9d_9d = simd_and(tmp48, tmp6);
        tmp252 = simd_and(tmp242, bytetest_9d_9d);
        struct_Cn.cc = simd_or(tmp252, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ae = simd_and(tmp32, tmp18);
        tmp253 = simd_andc(tmp32, tmp20);
        bytetest_a0_a2 = simd_andc(tmp253, tmp24);
        tmp254 = simd_and(tmp242, bytetest_a0_a2);
        struct_Cn.cc = simd_or(tmp254, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ae = simd_and(tmp32, tmp18);
        tmp255 = simd_and(tmp32, tmp37);
        bytetest_a5_a7 = simd_and(tmp255, tmp38);
        tmp256 = simd_and(tmp242, bytetest_a5_a7);
        struct_Cn.cc = simd_or(tmp256, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ae = simd_and(tmp32, tmp18);
        bytetest_ab_ad = simd_and(tmp71, tmp149);
        tmp257 = simd_and(tmp242, bytetest_ab_ad);
        struct_Cn.cc = simd_or(tmp257, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ae = simd_and(tmp32, tmp18);
        tmp258 = simd_or(simd_and(basis_bits.bit_5, tmp148), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        bytetest_ba_bd = simd_and(bytetest_b8_bf, tmp258);
        tmp259 = simd_and(tmp242, bytetest_ba_bd);
        struct_Cn.cc = simd_or(tmp259, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_af = simd_and(tmp32, tmp25);
        bytetest_83_85 = simd_and(tmp181, tmp149);
        tmp260 = simd_and(tmp102, bytetest_af);
        carryQ.cq[27] = carryout2carry(pablo_blk_Advance(tmp260, carryQ.get_carry_in(27), tmp261));
        tmp262 = simd_and(tmp261, bytetest_83_85);
        struct_Cn.cc = simd_or(tmp262, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_af = simd_and(tmp32, tmp25);
        bytetest_89_89 = simd_and(tmp19, tmp144);
        tmp263 = simd_and(tmp261, bytetest_89_89);
        struct_Cn.cc = simd_or(tmp263, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_af = simd_and(tmp32, tmp25);
        bytetest_8e_8f = simd_and(tmp19, tmp100);
        tmp264 = simd_and(tmp261, bytetest_8e_8f);
        struct_Cn.cc = simd_or(tmp264, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_af = simd_and(tmp32, tmp25);
        tmp265 = simd_andc(tmp48, basis_bits.bit_4);
        tmp266 = simd_or(simd_and(basis_bits.bit_5, tmp63), simd_andc(tmp38, basis_bits.bit_5));
        bytetest_91_96 = simd_and(tmp265, tmp266);
        tmp267 = simd_and(tmp261, bytetest_91_96);
        struct_Cn.cc = simd_or(tmp267, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_af = simd_and(tmp32, tmp25);
        tmp268 = simd_and(basis_bits.bit_3, basis_bits.bit_4);
        tmp269 = simd_or(simd_and(basis_bits.bit_2, tmp194), simd_andc(tmp268, basis_bits.bit_2));
        bytetest_98_a5 = simd_and(tmp7, tmp269);
        tmp270 = simd_and(tmp261, bytetest_98_a5);
        struct_Cn.cc = simd_or(tmp270, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b0 = simd_andc(tmp9, tmp41);
        bytetest_80_80 = simd_andc(tmp19, tmp41);
        tmp271 = simd_and(tmp102, bytetest_b0);
        carryQ.cq[28] = carryout2carry(pablo_blk_Advance(tmp271, carryQ.get_carry_in(28), tmp272));
        tmp273 = simd_and(tmp272, bytetest_80_80);
        bytetest_af = simd_and(tmp32, tmp25);
        bytetest_bb_bf = simd_and(bytetest_b8_bf, tmp72);
        tmp274 = simd_and(tmp261, bytetest_bb_bf);
        tmp275 = simd_or(tmp274, tmp273);
        struct_Cn.cc = simd_or(tmp275, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b0 = simd_andc(tmp9, tmp41);
        bytetest_84_84 = simd_and(tmp19, tmp39);
        tmp276 = simd_and(tmp272, bytetest_84_84);
        struct_Cn.cc = simd_or(tmp276, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b0 = simd_andc(tmp9, tmp41);
        bytetest_8d_8d = simd_and(tmp19, tmp6);
        tmp277 = simd_and(tmp272, bytetest_8d_8d);
        struct_Cn.cc = simd_or(tmp277, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b0 = simd_andc(tmp9, tmp41);
        bytetest_91_91 = simd_and(tmp48, tmp107);
        tmp278 = simd_and(tmp272, bytetest_91_91);
        struct_Cn.cc = simd_or(tmp278, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b0 = simd_andc(tmp9, tmp41);
        bytetest_a9_a9 = simd_and(tmp32, tmp144);
        tmp279 = simd_and(tmp272, bytetest_a9_a9);
        struct_Cn.cc = simd_or(tmp279, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b0 = simd_andc(tmp9, tmp41);
        bytetest_b4_b4 = simd_and(tmp9, tmp39);
        tmp280 = simd_and(tmp272, bytetest_b4_b4);
        struct_Cn.cc = simd_or(tmp280, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b0 = simd_andc(tmp9, tmp41);
        tmp281 = simd_or(simd_and(basis_bits.bit_5, tmp85), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        bytetest_ba_bc = simd_and(bytetest_b8_bf, tmp281);
        tmp282 = simd_and(tmp272, bytetest_ba_bc);
        struct_Cn.cc = simd_or(tmp282, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b1 = simd_and(tmp9, tmp107);
        bytetest_85_85 = simd_and(tmp19, tmp47);
        tmp283 = simd_and(tmp102, bytetest_b1);
        carryQ.cq[29] = carryout2carry(pablo_blk_Advance(tmp283, carryQ.get_carry_in(29), tmp284));
        tmp285 = simd_and(tmp284, bytetest_85_85);
        struct_Cn.cc = simd_or(tmp285, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b1 = simd_and(tmp9, tmp107);
        bytetest_89_89 = simd_and(tmp19, tmp144);
        tmp286 = simd_and(tmp284, bytetest_89_89);
        struct_Cn.cc = simd_or(tmp286, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b1 = simd_and(tmp9, tmp107);
        tmp287 = simd_not(tmp75);
        tmp288 = simd_or(simd_and(basis_bits.bit_3, tmp287), simd_andc(tmp100, basis_bits.bit_3));
        bytetest_8e_94 = simd_and(bytetest_80_9f, tmp288);
        tmp289 = simd_and(tmp284, bytetest_8e_94);
        struct_Cn.cc = simd_or(tmp289, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b1 = simd_and(tmp9, tmp107);
        bytetest_97_97 = simd_and(tmp48, tmp67);
        tmp290 = simd_and(tmp284, bytetest_97_97);
        struct_Cn.cc = simd_or(tmp290, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b1 = simd_and(tmp9, tmp107);
        tmp291 = simd_and(tmp48, basis_bits.bit_4);
        bytetest_9a_9f = simd_and(tmp291, tmp90);
        tmp292 = simd_and(tmp284, bytetest_9a_9f);
        struct_Cn.cc = simd_or(tmp292, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b1 = simd_and(tmp9, tmp107);
        bytetest_a4_a5 = simd_and(tmp32, tmp165);
        tmp293 = simd_and(tmp284, bytetest_a4_a5);
        struct_Cn.cc = simd_or(tmp293, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b1 = simd_and(tmp9, tmp107);
        bytetest_b0_b7 = simd_andc(tmp9, basis_bits.bit_4);
        tmp294 = simd_and(tmp284, bytetest_b0_b7);
        struct_Cn.cc = simd_or(tmp294, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b2 = simd_and(tmp9, tmp33);
        bytetest_80_81 = simd_andc(tmp19, tmp240);
        tmp295 = simd_and(tmp102, bytetest_b2);
        carryQ.cq[30] = carryout2carry(pablo_blk_Advance(tmp295, carryQ.get_carry_in(30), tmp296));
        tmp297 = simd_and(tmp296, bytetest_80_81);
        struct_Cn.cc = simd_or(tmp297, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b2 = simd_and(tmp9, tmp33);
        bytetest_84_84 = simd_and(tmp19, tmp39);
        tmp298 = simd_and(tmp296, bytetest_84_84);
        struct_Cn.cc = simd_or(tmp298, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b2 = simd_and(tmp9, tmp33);
        bytetest_8d_8d = simd_and(tmp19, tmp6);
        tmp299 = simd_and(tmp296, bytetest_8d_8d);
        struct_Cn.cc = simd_or(tmp299, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b2 = simd_and(tmp9, tmp33);
        bytetest_91_91 = simd_and(tmp48, tmp107);
        tmp300 = simd_and(tmp296, bytetest_91_91);
        struct_Cn.cc = simd_or(tmp300, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b2 = simd_and(tmp9, tmp33);
        bytetest_a9_a9 = simd_and(tmp32, tmp144);
        tmp301 = simd_and(tmp296, bytetest_a9_a9);
        struct_Cn.cc = simd_or(tmp301, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b2 = simd_and(tmp9, tmp33);
        bytetest_b4_b4 = simd_and(tmp9, tmp39);
        tmp302 = simd_and(tmp296, bytetest_b4_b4);
        struct_Cn.cc = simd_or(tmp302, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b2 = simd_and(tmp9, tmp33);
        bytetest_ba_bb = simd_and(tmp9, tmp151);
        tmp303 = simd_and(tmp296, bytetest_ba_bb);
        struct_Cn.cc = simd_or(tmp303, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b3 = simd_and(tmp9, tmp120);
        bytetest_85_85 = simd_and(tmp19, tmp47);
        tmp304 = simd_and(tmp102, bytetest_b3);
        carryQ.cq[31] = carryout2carry(pablo_blk_Advance(tmp304, carryQ.get_carry_in(31), tmp305));
        tmp306 = simd_and(tmp305, bytetest_85_85);
        struct_Cn.cc = simd_or(tmp306, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b3 = simd_and(tmp9, tmp120);
        bytetest_89_89 = simd_and(tmp19, tmp144);
        tmp307 = simd_and(tmp305, bytetest_89_89);
        struct_Cn.cc = simd_or(tmp307, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b3 = simd_and(tmp9, tmp120);
        bytetest_8e_94 = simd_and(bytetest_80_9f, tmp288);
        tmp308 = simd_and(tmp305, bytetest_8e_94);
        struct_Cn.cc = simd_or(tmp308, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b3 = simd_and(tmp9, tmp120);
        tmp309 = simd_not(tmp191);
        tmp310 = simd_or(simd_and(basis_bits.bit_4, tmp309), simd_andc(tmp51, basis_bits.bit_4));
        bytetest_97_9d = simd_and(tmp48, tmp310);
        tmp311 = simd_and(tmp305, bytetest_97_9d);
        struct_Cn.cc = simd_or(tmp311, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b3 = simd_and(tmp9, tmp120);
        bytetest_9f_9f = simd_and(tmp48, tmp25);
        tmp312 = simd_and(tmp305, bytetest_9f_9f);
        struct_Cn.cc = simd_or(tmp312, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b3 = simd_and(tmp9, tmp120);
        bytetest_a4_a5 = simd_and(tmp32, tmp165);
        tmp313 = simd_and(tmp305, bytetest_a4_a5);
        struct_Cn.cc = simd_or(tmp313, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b3 = simd_and(tmp9, tmp120);
        bytetest_b0_b0 = simd_andc(tmp9, tmp41);
        tmp314 = simd_and(tmp305, bytetest_b0_b0);
        struct_Cn.cc = simd_or(tmp314, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b4 = simd_and(tmp9, tmp39);
        bytetest_80_81 = simd_andc(tmp19, tmp240);
        tmp315 = simd_and(tmp102, bytetest_b4);
        carryQ.cq[32] = carryout2carry(pablo_blk_Advance(tmp315, carryQ.get_carry_in(32), tmp316));
        tmp317 = simd_and(tmp316, bytetest_80_81);
        bytetest_b3 = simd_and(tmp9, tmp120);
        tmp318 = simd_or(basis_bits.bit_4, tmp72);
        bytetest_b3_bf = simd_and(tmp9, tmp318);
        tmp319 = simd_and(tmp305, bytetest_b3_bf);
        tmp320 = simd_or(tmp319, tmp317);
        struct_Cn.cc = simd_or(tmp320, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b4 = simd_and(tmp9, tmp39);
        bytetest_84_84 = simd_and(tmp19, tmp39);
        tmp321 = simd_and(tmp316, bytetest_84_84);
        struct_Cn.cc = simd_or(tmp321, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b4 = simd_and(tmp9, tmp39);
        bytetest_8d_8d = simd_and(tmp19, tmp6);
        tmp322 = simd_and(tmp316, bytetest_8d_8d);
        struct_Cn.cc = simd_or(tmp322, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b4 = simd_and(tmp9, tmp39);
        bytetest_91_91 = simd_and(tmp48, tmp107);
        tmp323 = simd_and(tmp316, bytetest_91_91);
        struct_Cn.cc = simd_or(tmp323, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b4 = simd_and(tmp9, tmp39);
        bytetest_bb_bc = simd_and(bytetest_b8_bf, tmp86);
        tmp324 = simd_and(tmp316, bytetest_bb_bc);
        struct_Cn.cc = simd_or(tmp324, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b5 = simd_and(tmp9, tmp47);
        bytetest_85_85 = simd_and(tmp19, tmp47);
        tmp325 = simd_and(tmp102, bytetest_b5);
        carryQ.cq[33] = carryout2carry(pablo_blk_Advance(tmp325, carryQ.get_carry_in(33), tmp326));
        tmp327 = simd_and(tmp326, bytetest_85_85);
        struct_Cn.cc = simd_or(tmp327, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b5 = simd_and(tmp9, tmp47);
        bytetest_89_89 = simd_and(tmp19, tmp144);
        tmp328 = simd_and(tmp326, bytetest_89_89);
        struct_Cn.cc = simd_or(tmp328, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b5 = simd_and(tmp9, tmp47);
        bytetest_8f_96 = simd_and(bytetest_80_9f, tmp161);
        tmp329 = simd_and(tmp326, bytetest_8f_96);
        struct_Cn.cc = simd_or(tmp329, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b5 = simd_and(tmp9, tmp47);
        bytetest_98_9f = simd_and(tmp48, basis_bits.bit_4);
        tmp330 = simd_and(tmp326, bytetest_98_9f);
        struct_Cn.cc = simd_or(tmp330, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b5 = simd_and(tmp9, tmp47);
        bytetest_a4_a5 = simd_and(tmp32, tmp165);
        tmp331 = simd_and(tmp326, bytetest_a4_a5);
        struct_Cn.cc = simd_or(tmp331, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b5 = simd_and(tmp9, tmp47);
        bytetest_b6_b8 = simd_and(tmp9, tmp249);
        tmp332 = simd_and(tmp326, bytetest_b6_b8);
        struct_Cn.cc = simd_or(tmp332, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b6 = simd_and(tmp9, tmp57);
        bytetest_80_81 = simd_andc(tmp19, tmp240);
        tmp333 = simd_and(tmp102, bytetest_b6);
        carryQ.cq[34] = carryout2carry(pablo_blk_Advance(tmp333, carryQ.get_carry_in(34), tmp334));
        tmp335 = simd_and(tmp334, bytetest_80_81);
        struct_Cn.cc = simd_or(tmp335, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b6 = simd_and(tmp9, tmp57);
        bytetest_84_84 = simd_and(tmp19, tmp39);
        tmp336 = simd_and(tmp334, bytetest_84_84);
        struct_Cn.cc = simd_or(tmp336, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b6 = simd_and(tmp9, tmp57);
        tmp337 = simd_not(tmp90);
        tmp338 = simd_or(simd_and(basis_bits.bit_4, tmp337), simd_andc(tmp51, basis_bits.bit_4));
        bytetest_97_99 = simd_and(tmp48, tmp338);
        tmp339 = simd_and(tmp334, bytetest_97_99);
        struct_Cn.cc = simd_or(tmp339, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b6 = simd_and(tmp9, tmp57);
        bytetest_b2_b2 = simd_and(tmp9, tmp33);
        tmp340 = simd_and(tmp334, bytetest_b2_b2);
        struct_Cn.cc = simd_or(tmp340, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b6 = simd_and(tmp9, tmp57);
        bytetest_bc_bc = simd_and(tmp9, tmp81);
        tmp341 = simd_and(tmp334, bytetest_bc_bc);
        struct_Cn.cc = simd_or(tmp341, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b6 = simd_and(tmp9, tmp57);
        bytetest_be_bf = simd_and(tmp9, tmp100);
        tmp342 = simd_and(tmp334, bytetest_be_bf);
        struct_Cn.cc = simd_or(tmp342, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b7 = simd_and(tmp9, tmp67);
        bytetest_87_89 = simd_and(tmp19, tmp338);
        tmp343 = simd_and(tmp102, bytetest_b7);
        carryQ.cq[35] = carryout2carry(pablo_blk_Advance(tmp343, carryQ.get_carry_in(35), tmp344));
        tmp345 = simd_and(tmp344, bytetest_87_89);
        struct_Cn.cc = simd_or(tmp345, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b7 = simd_and(tmp9, tmp67);
        bytetest_8b_8e = simd_and(bytetest_88_8f, tmp64);
        tmp346 = simd_and(tmp344, bytetest_8b_8e);
        struct_Cn.cc = simd_or(tmp346, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b7 = simd_and(tmp9, tmp67);
        bytetest_95_95 = simd_and(tmp48, tmp47);
        tmp347 = simd_and(tmp344, bytetest_95_95);
        struct_Cn.cc = simd_or(tmp347, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b7 = simd_and(tmp9, tmp67);
        bytetest_97_97 = simd_and(tmp48, tmp67);
        tmp348 = simd_and(tmp344, bytetest_97_97);
        struct_Cn.cc = simd_or(tmp348, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b7 = simd_and(tmp9, tmp67);
        tmp349 = simd_and(basis_bits.bit_3, tmp240);
        bytetest_a0_b1 = simd_andc(tmp40, tmp349);
        tmp350 = simd_and(tmp344, bytetest_a0_b1);
        struct_Cn.cc = simd_or(tmp350, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b8 = simd_and(tmp9, tmp58);
        bytetest_80_80 = simd_andc(tmp19, tmp41);
        tmp351 = simd_and(tmp102, bytetest_b8);
        carryQ.cq[36] = carryout2carry(pablo_blk_Advance(tmp351, carryQ.get_carry_in(36), tmp352));
        tmp353 = simd_and(tmp352, bytetest_80_80);
        bytetest_b7 = simd_and(tmp9, tmp67);
        bytetest_b5_bf = simd_and(tmp9, tmp75);
        tmp354 = simd_and(tmp344, bytetest_b5_bf);
        tmp355 = simd_or(tmp354, tmp353);
        struct_Cn.cc = simd_or(tmp355, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_b8 = simd_and(tmp9, tmp58);
        bytetest_bb_be = simd_and(bytetest_b8_bf, tmp64);
        tmp356 = simd_and(tmp352, bytetest_bb_be);
        struct_Cn.cc = simd_or(tmp356, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ba = simd_and(tmp9, tmp197);
        bytetest_80_80 = simd_andc(tmp19, tmp41);
        tmp357 = simd_and(tmp102, bytetest_ba);
        carryQ.cq[37] = carryout2carry(pablo_blk_Advance(tmp357, carryQ.get_carry_in(37), tmp358));
        tmp359 = simd_and(tmp358, bytetest_80_80);
        bytetest_b9 = simd_and(tmp9, tmp144);
        tmp360 = simd_and(basis_bits.bit_3, tmp4);
        tmp361 = simd_or(basis_bits.bit_2, tmp360);
        bytetest_9c_bf = simd_and(tmp7, tmp361);
        tmp362 = simd_and(tmp102, bytetest_b9);
        carryQ.cq[38] = carryout2carry(pablo_blk_Advance(tmp362, carryQ.get_carry_in(38), tmp363));
        tmp364 = simd_and(tmp363, bytetest_9c_bf);
        tmp365 = simd_or(tmp364, tmp359);
        struct_Cn.cc = simd_or(tmp365, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ba = simd_and(tmp9, tmp197);
        bytetest_83_83 = simd_and(tmp19, tmp120);
        tmp366 = simd_and(tmp358, bytetest_83_83);
        struct_Cn.cc = simd_or(tmp366, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ba = simd_and(tmp9, tmp197);
        bytetest_85_86 = simd_and(tmp153, tmp140);
        tmp367 = simd_and(tmp358, bytetest_85_86);
        struct_Cn.cc = simd_or(tmp367, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ba = simd_and(tmp9, tmp197);
        bytetest_89_89 = simd_and(tmp19, tmp144);
        tmp368 = simd_and(tmp358, bytetest_89_89);
        struct_Cn.cc = simd_or(tmp368, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ba = simd_and(tmp9, tmp197);
        bytetest_8b_8c = simd_and(bytetest_88_8f, tmp86);
        tmp369 = simd_and(tmp358, bytetest_8b_8c);
        struct_Cn.cc = simd_or(tmp369, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ba = simd_and(tmp9, tmp197);
        tmp370 = simd_not(tmp20);
        tmp371 = simd_or(simd_and(basis_bits.bit_3, tmp370), simd_andc(tmp100, basis_bits.bit_3));
        bytetest_8e_93 = simd_and(bytetest_80_9f, tmp371);
        tmp372 = simd_and(tmp358, bytetest_8e_93);
        struct_Cn.cc = simd_or(tmp372, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ba = simd_and(tmp9, tmp197);
        bytetest_98_98 = simd_and(tmp48, tmp58);
        tmp373 = simd_and(tmp358, bytetest_98_98);
        struct_Cn.cc = simd_or(tmp373, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ba = simd_and(tmp9, tmp197);
        bytetest_a0_a0 = simd_andc(tmp32, tmp41);
        tmp374 = simd_and(tmp358, bytetest_a0_a0);
        struct_Cn.cc = simd_or(tmp374, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ba = simd_and(tmp9, tmp197);
        bytetest_a4_a4 = simd_and(tmp32, tmp39);
        tmp375 = simd_and(tmp358, bytetest_a4_a4);
        struct_Cn.cc = simd_or(tmp375, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ba = simd_and(tmp9, tmp197);
        bytetest_a6_a6 = simd_and(tmp32, tmp57);
        tmp376 = simd_and(tmp358, bytetest_a6_a6);
        struct_Cn.cc = simd_or(tmp376, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ba = simd_and(tmp9, tmp197);
        bytetest_a8_a9 = simd_and(tmp32, tmp11);
        tmp377 = simd_and(tmp358, bytetest_a8_a9);
        struct_Cn.cc = simd_or(tmp377, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ba = simd_and(tmp9, tmp197);
        bytetest_ac_ac = simd_and(tmp32, tmp81);
        tmp378 = simd_and(tmp358, bytetest_ac_ac);
        struct_Cn.cc = simd_or(tmp378, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ba = simd_and(tmp9, tmp197);
        bytetest_ba_ba = simd_and(tmp9, tmp197);
        tmp379 = simd_and(tmp358, bytetest_ba_ba);
        struct_Cn.cc = simd_or(tmp379, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_ba = simd_and(tmp9, tmp197);
        bytetest_be_bf = simd_and(tmp9, tmp100);
        tmp380 = simd_and(tmp358, bytetest_be_bf);
        struct_Cn.cc = simd_or(tmp380, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_bb = simd_and(tmp9, tmp28);
        bytetest_85_85 = simd_and(tmp19, tmp47);
        tmp381 = simd_and(tmp102, bytetest_bb);
        carryQ.cq[39] = carryout2carry(pablo_blk_Advance(tmp381, carryQ.get_carry_in(39), tmp382));
        tmp383 = simd_and(tmp382, bytetest_85_85);
        struct_Cn.cc = simd_or(tmp383, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_bb = simd_and(tmp9, tmp28);
        bytetest_87_87 = simd_and(tmp19, tmp67);
        tmp384 = simd_and(tmp382, bytetest_87_87);
        struct_Cn.cc = simd_or(tmp384, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_bb = simd_and(tmp9, tmp28);
        bytetest_8e_8f = simd_and(tmp19, tmp100);
        tmp385 = simd_and(tmp382, bytetest_8e_8f);
        struct_Cn.cc = simd_or(tmp385, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_bb = simd_and(tmp9, tmp28);
        bytetest_9a_9b = simd_and(tmp48, tmp151);
        tmp386 = simd_and(tmp382, bytetest_9a_9b);
        struct_Cn.cc = simd_or(tmp386, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_bb = simd_and(tmp9, tmp28);
        bytetest_a0_bf = simd_and(tmp7, basis_bits.bit_2);
        tmp387 = simd_and(tmp382, bytetest_a0_bf);
        struct_Cn.cc = simd_or(tmp387, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_bd = simd_and(tmp9, tmp6);
        bytetest_88_88 = simd_and(tmp19, tmp58);
        tmp388 = simd_and(tmp102, bytetest_bd);
        carryQ.cq[40] = carryout2carry(pablo_blk_Advance(tmp388, carryQ.get_carry_in(40), tmp389));
        tmp390 = simd_and(tmp389, bytetest_88_88);
        struct_Cn.cc = simd_or(tmp390, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_bd = simd_and(tmp9, tmp6);
        tmp391 = simd_or(simd_and(basis_bits.bit_3, tmp42), simd_andc(tmp126, basis_bits.bit_3));
        bytetest_ad_b0 = simd_and(bytetest_a0_bf, tmp391);
        tmp392 = simd_and(tmp389, bytetest_ad_b0);
        struct_Cn.cc = simd_or(tmp392, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_be = simd_and(tmp9, tmp18);
        bytetest_98_98 = simd_and(tmp48, tmp58);
        tmp393 = simd_and(tmp102, bytetest_be);
        carryQ.cq[41] = carryout2carry(pablo_blk_Advance(tmp393, carryQ.get_carry_in(41), tmp394));
        tmp395 = simd_and(tmp394, bytetest_98_98);
        struct_Cn.cc = simd_or(tmp395, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_be = simd_and(tmp9, tmp18);
        bytetest_bd_bd = simd_and(tmp9, tmp6);
        tmp396 = simd_and(tmp394, bytetest_bd_bd);
        struct_Cn.cc = simd_or(tmp396, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_bf = simd_and(tmp9, tmp25);
        bytetest_8d_8d = simd_and(tmp19, tmp6);
        tmp397 = simd_and(tmp102, bytetest_bf);
        carryQ.cq[42] = carryout2carry(pablo_blk_Advance(tmp397, carryQ.get_carry_in(42), tmp398));
        tmp399 = simd_and(tmp398, bytetest_8d_8d);
        struct_Cn.cc = simd_or(tmp399, struct_Cn.cc);
        bytetest_e0 = simd_andc(tmp99, tmp41);
        bytetest_bf = simd_and(tmp9, tmp25);
        tmp400 = simd_and(basis_bits.bit_4, tmp72);
        tmp401 = simd_and(basis_bits.bit_3, tmp400);
        tmp402 = simd_or(basis_bits.bit_2, tmp401);
        bytetest_9b_bf = simd_and(tmp7, tmp402);
        tmp403 = simd_and(tmp398, bytetest_9b_bf);
        struct_Cn.cc = simd_or(tmp403, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_83 = simd_and(tmp19, tmp120);
        bytetest_86_86 = simd_and(tmp19, tmp57);
        tmp404 = simd_and(tmp13, bytetest_e1);
        carryQ.cq[43] = carryout2carry(pablo_blk_Advance(tmp404, carryQ.get_carry_in(43), tmp405));
        tmp406 = simd_and(tmp405, bytetest_83);
        carryQ.cq[44] = carryout2carry(pablo_blk_Advance(tmp406, carryQ.get_carry_in(44), tmp407));
        tmp408 = simd_and(tmp407, bytetest_86_86);
        struct_Cn.cc = simd_or(tmp408, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_83 = simd_and(tmp19, tmp120);
        bytetest_88_8c = simd_andc(bytetest_88_8f, tmp74);
        tmp409 = simd_and(tmp407, bytetest_88_8c);
        struct_Cn.cc = simd_or(tmp409, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_83 = simd_and(tmp19, tmp120);
        bytetest_8e_8f = simd_and(tmp19, tmp100);
        tmp410 = simd_and(tmp407, bytetest_8e_8f);
        struct_Cn.cc = simd_or(tmp410, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_89 = simd_and(tmp19, tmp144);
        bytetest_89_89 = simd_and(tmp19, tmp144);
        tmp411 = simd_and(tmp405, bytetest_89);
        carryQ.cq[45] = carryout2carry(pablo_blk_Advance(tmp411, carryQ.get_carry_in(45), tmp412));
        tmp413 = simd_and(tmp412, bytetest_89_89);
        struct_Cn.cc = simd_or(tmp413, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_89 = simd_and(tmp19, tmp144);
        bytetest_8e_8f = simd_and(tmp19, tmp100);
        tmp414 = simd_and(tmp412, bytetest_8e_8f);
        struct_Cn.cc = simd_or(tmp414, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_89 = simd_and(tmp19, tmp144);
        bytetest_97_97 = simd_and(tmp48, tmp67);
        tmp415 = simd_and(tmp412, bytetest_97_97);
        struct_Cn.cc = simd_or(tmp415, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_89 = simd_and(tmp19, tmp144);
        bytetest_99_99 = simd_and(tmp48, tmp144);
        tmp416 = simd_and(tmp412, bytetest_99_99);
        struct_Cn.cc = simd_or(tmp416, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_89 = simd_and(tmp19, tmp144);
        bytetest_9e_9f = simd_and(tmp48, tmp100);
        tmp417 = simd_and(tmp412, bytetest_9e_9f);
        struct_Cn.cc = simd_or(tmp417, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_8a = simd_and(tmp19, tmp197);
        bytetest_89_89 = simd_and(tmp19, tmp144);
        tmp418 = simd_and(tmp405, bytetest_8a);
        carryQ.cq[46] = carryout2carry(pablo_blk_Advance(tmp418, carryQ.get_carry_in(46), tmp419));
        tmp420 = simd_and(tmp419, bytetest_89_89);
        struct_Cn.cc = simd_or(tmp420, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_8a = simd_and(tmp19, tmp197);
        bytetest_8e_8f = simd_and(tmp19, tmp100);
        tmp421 = simd_and(tmp419, bytetest_8e_8f);
        struct_Cn.cc = simd_or(tmp421, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_8a = simd_and(tmp19, tmp197);
        bytetest_b1_b1 = simd_and(tmp9, tmp107);
        tmp422 = simd_and(tmp419, bytetest_b1_b1);
        struct_Cn.cc = simd_or(tmp422, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_8a = simd_and(tmp19, tmp197);
        tmp423 = simd_and(tmp37, basis_bits.bit_6);
        bytetest_b6_b7 = simd_and(tmp9, tmp423);
        tmp424 = simd_and(tmp419, bytetest_b6_b7);
        struct_Cn.cc = simd_or(tmp424, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_8a = simd_and(tmp19, tmp197);
        bytetest_bf_bf = simd_and(tmp9, tmp25);
        tmp425 = simd_and(tmp419, bytetest_bf_bf);
        struct_Cn.cc = simd_or(tmp425, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_8b = simd_and(tmp19, tmp28);
        bytetest_81_81 = simd_and(tmp19, tmp107);
        tmp426 = simd_and(tmp405, bytetest_8b);
        carryQ.cq[47] = carryout2carry(pablo_blk_Advance(tmp426, carryQ.get_carry_in(47), tmp427));
        tmp428 = simd_and(tmp427, bytetest_81_81);
        struct_Cn.cc = simd_or(tmp428, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_8b = simd_and(tmp19, tmp28);
        bytetest_86_87 = simd_and(tmp19, tmp423);
        tmp429 = simd_and(tmp427, bytetest_86_87);
        struct_Cn.cc = simd_or(tmp429, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_8b = simd_and(tmp19, tmp28);
        bytetest_97_97 = simd_and(tmp48, tmp67);
        tmp430 = simd_and(tmp427, bytetest_97_97);
        struct_Cn.cc = simd_or(tmp430, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_8c = simd_and(tmp19, tmp81);
        bytetest_91_91 = simd_and(tmp48, tmp107);
        tmp431 = simd_and(tmp405, bytetest_8c);
        carryQ.cq[48] = carryout2carry(pablo_blk_Advance(tmp431, carryQ.get_carry_in(48), tmp432));
        tmp433 = simd_and(tmp432, bytetest_91_91);
        struct_Cn.cc = simd_or(tmp433, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_8c = simd_and(tmp19, tmp81);
        bytetest_96_97 = simd_and(tmp48, tmp423);
        tmp434 = simd_and(tmp432, bytetest_96_97);
        struct_Cn.cc = simd_or(tmp434, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_8d = simd_and(tmp19, tmp6);
        bytetest_9b_9c = simd_and(bytetest_98_9f, tmp86);
        tmp435 = simd_and(tmp405, bytetest_8d);
        carryQ.cq[49] = carryout2carry(pablo_blk_Advance(tmp435, carryQ.get_carry_in(49), tmp436));
        tmp437 = simd_and(tmp436, bytetest_9b_9c);
        struct_Cn.cc = simd_or(tmp437, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_8d = simd_and(tmp19, tmp6);
        bytetest_bd_bf = simd_and(bytetest_bc_bf, tmp38);
        tmp438 = simd_and(tmp436, bytetest_bd_bf);
        struct_Cn.cc = simd_or(tmp438, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_8e = simd_and(tmp19, tmp18);
        bytetest_9a_9f = simd_and(bytetest_98_9f, tmp90);
        tmp439 = simd_and(tmp405, bytetest_8e);
        carryQ.cq[50] = carryout2carry(pablo_blk_Advance(tmp439, carryQ.get_carry_in(50), tmp440));
        tmp441 = simd_and(tmp440, bytetest_9a_9f);
        struct_Cn.cc = simd_or(tmp441, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_8f = simd_and(tmp19, tmp25);
        bytetest_b5_bf = simd_and(tmp9, tmp75);
        tmp442 = simd_and(tmp405, bytetest_8f);
        carryQ.cq[51] = carryout2carry(pablo_blk_Advance(tmp442, carryQ.get_carry_in(51), tmp443));
        tmp444 = simd_and(tmp443, bytetest_b5_bf);
        struct_Cn.cc = simd_or(tmp444, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_9a = simd_and(tmp48, tmp197);
        tmp445 = simd_and(tmp48, tmp4);
        bytetest_9d_9f = simd_and(tmp445, tmp38);
        tmp446 = simd_and(tmp405, bytetest_9a);
        carryQ.cq[52] = carryout2carry(pablo_blk_Advance(tmp446, carryQ.get_carry_in(52), tmp447));
        tmp448 = simd_and(tmp447, bytetest_9d_9f);
        struct_Cn.cc = simd_or(tmp448, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_9b = simd_and(tmp48, tmp28);
        bytetest_b1_bf = simd_and(tmp9, tmp215);
        tmp449 = simd_and(tmp405, bytetest_9b);
        carryQ.cq[53] = carryout2carry(pablo_blk_Advance(tmp449, carryQ.get_carry_in(53), tmp450));
        tmp451 = simd_and(tmp450, bytetest_b1_bf);
        struct_Cn.cc = simd_or(tmp451, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_9c = simd_and(tmp48, tmp81);
        bytetest_8d_8d = simd_and(tmp19, tmp6);
        tmp452 = simd_and(tmp405, bytetest_9c);
        carryQ.cq[54] = carryout2carry(pablo_blk_Advance(tmp452, carryQ.get_carry_in(54), tmp453));
        tmp454 = simd_and(tmp453, bytetest_8d_8d);
        struct_Cn.cc = simd_or(tmp454, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_9c = simd_and(tmp48, tmp81);
        bytetest_95_9f = simd_and(tmp48, tmp75);
        tmp455 = simd_and(tmp453, bytetest_95_9f);
        struct_Cn.cc = simd_or(tmp455, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_9c = simd_and(tmp48, tmp81);
        bytetest_b7_bf = simd_and(tmp9, tmp159);
        tmp456 = simd_and(tmp453, bytetest_b7_bf);
        struct_Cn.cc = simd_or(tmp456, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_9d = simd_and(tmp48, tmp6);
        bytetest_94_9f = simd_and(tmp48, tmp20);
        tmp457 = simd_and(tmp405, bytetest_9d);
        carryQ.cq[55] = carryout2carry(pablo_blk_Advance(tmp457, carryQ.get_carry_in(55), tmp458));
        tmp459 = simd_and(tmp458, bytetest_94_9f);
        struct_Cn.cc = simd_or(tmp459, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_9d = simd_and(tmp48, tmp6);
        bytetest_ad_ad = simd_and(tmp32, tmp6);
        tmp460 = simd_and(tmp458, bytetest_ad_ad);
        struct_Cn.cc = simd_or(tmp460, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_9d = simd_and(tmp48, tmp6);
        bytetest_b1_b1 = simd_and(tmp9, tmp107);
        tmp461 = simd_and(tmp458, bytetest_b1_b1);
        struct_Cn.cc = simd_or(tmp461, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_9d = simd_and(tmp48, tmp6);
        bytetest_b4_bf = simd_and(tmp9, tmp20);
        tmp462 = simd_and(tmp458, bytetest_b4_bf);
        struct_Cn.cc = simd_or(tmp462, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_9f = simd_and(tmp48, tmp25);
        bytetest_9e_9f = simd_and(tmp48, tmp100);
        tmp463 = simd_and(tmp405, bytetest_9f);
        carryQ.cq[56] = carryout2carry(pablo_blk_Advance(tmp463, carryQ.get_carry_in(56), tmp464));
        tmp465 = simd_and(tmp464, bytetest_9e_9f);
        struct_Cn.cc = simd_or(tmp465, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_9f = simd_and(tmp48, tmp25);
        bytetest_aa_af = simd_and(tmp71, tmp90);
        tmp466 = simd_and(tmp464, bytetest_aa_af);
        struct_Cn.cc = simd_or(tmp466, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_9f = simd_and(tmp48, tmp25);
        bytetest_ba_bf = simd_and(bytetest_b8_bf, tmp90);
        tmp467 = simd_and(tmp464, bytetest_ba_bf);
        struct_Cn.cc = simd_or(tmp467, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_a0 = simd_andc(tmp32, tmp41);
        bytetest_8f_8f = simd_and(tmp19, tmp25);
        tmp468 = simd_and(tmp405, bytetest_a0);
        carryQ.cq[57] = carryout2carry(pablo_blk_Advance(tmp468, carryQ.get_carry_in(57), tmp469));
        tmp470 = simd_and(tmp469, bytetest_8f_8f);
        struct_Cn.cc = simd_or(tmp470, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_a0 = simd_andc(tmp32, tmp41);
        bytetest_9a_9f = simd_and(bytetest_98_9f, tmp90);
        tmp471 = simd_and(tmp469, bytetest_9a_9f);
        struct_Cn.cc = simd_or(tmp471, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_a1 = simd_and(tmp32, tmp107);
        bytetest_b8_bf = simd_and(tmp9, basis_bits.bit_4);
        tmp472 = simd_and(tmp405, bytetest_a1);
        carryQ.cq[58] = carryout2carry(pablo_blk_Advance(tmp472, carryQ.get_carry_in(58), tmp473));
        tmp474 = simd_and(tmp473, bytetest_b8_bf);
        struct_Cn.cc = simd_or(tmp474, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_a2 = simd_and(tmp32, tmp33);
        bytetest_ab_af = simd_and(tmp71, tmp72);
        tmp475 = simd_and(tmp405, bytetest_a2);
        carryQ.cq[59] = carryout2carry(pablo_blk_Advance(tmp475, carryQ.get_carry_in(59), tmp476));
        tmp477 = simd_and(tmp476, bytetest_ab_af);
        struct_Cn.cc = simd_or(tmp477, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_a3 = simd_and(tmp32, tmp120);
        bytetest_b6_bf = simd_and(tmp9, tmp192);
        tmp478 = simd_and(tmp405, bytetest_a3);
        carryQ.cq[60] = carryout2carry(pablo_blk_Advance(tmp478, carryQ.get_carry_in(60), tmp479));
        tmp480 = simd_and(tmp479, bytetest_b6_bf);
        struct_Cn.cc = simd_or(tmp480, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_a4 = simd_and(tmp32, tmp39);
        bytetest_9d_9f = simd_and(tmp445, tmp38);
        tmp481 = simd_and(tmp405, bytetest_a4);
        carryQ.cq[61] = carryout2carry(pablo_blk_Advance(tmp481, carryQ.get_carry_in(61), tmp482));
        tmp483 = simd_and(tmp482, bytetest_9d_9f);
        struct_Cn.cc = simd_or(tmp483, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_a4 = simd_and(tmp32, tmp39);
        bytetest_ac_af = simd_and(tmp32, tmp4);
        tmp484 = simd_and(tmp482, bytetest_ac_af);
        struct_Cn.cc = simd_or(tmp484, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_a4 = simd_and(tmp32, tmp39);
        bytetest_bc_bf = simd_and(tmp9, tmp4);
        tmp485 = simd_and(tmp482, bytetest_bc_bf);
        struct_Cn.cc = simd_or(tmp485, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_a5 = simd_and(tmp32, tmp47);
        bytetest_81_83 = simd_and(bytetest_80_83, tmp38);
        tmp486 = simd_and(tmp405, bytetest_a5);
        carryQ.cq[62] = carryout2carry(pablo_blk_Advance(tmp486, carryQ.get_carry_in(62), tmp487));
        tmp488 = simd_and(tmp487, bytetest_81_83);
        struct_Cn.cc = simd_or(tmp488, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_a5 = simd_and(tmp32, tmp47);
        bytetest_ae_af = simd_and(tmp32, tmp100);
        tmp489 = simd_and(tmp487, bytetest_ae_af);
        struct_Cn.cc = simd_or(tmp489, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_a5 = simd_and(tmp32, tmp47);
        bytetest_b5_bf = simd_and(tmp9, tmp75);
        tmp490 = simd_and(tmp487, bytetest_b5_bf);
        struct_Cn.cc = simd_or(tmp490, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_a6 = simd_and(tmp32, tmp57);
        bytetest_ac_af = simd_and(tmp32, tmp4);
        tmp491 = simd_and(tmp405, bytetest_a6);
        carryQ.cq[63] = carryout2carry(pablo_blk_Advance(tmp491, carryQ.get_carry_in(63), tmp492));
        tmp493 = simd_and(tmp492, bytetest_ac_af);
        struct_Cn.cc = simd_or(tmp493, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_a7 = simd_and(tmp32, tmp67);
        bytetest_8a_8f = simd_and(bytetest_88_8f, tmp90);
        tmp494 = simd_and(tmp405, bytetest_a7);
        carryQ.cq[64] = carryout2carry(pablo_blk_Advance(tmp494, carryQ.get_carry_in(64), tmp495));
        tmp496 = simd_and(tmp495, bytetest_8a_8f);
        struct_Cn.cc = simd_or(tmp496, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_a7 = simd_and(tmp32, tmp67);
        bytetest_9b_9d = simd_and(bytetest_98_9f, tmp149);
        tmp497 = simd_and(tmp495, bytetest_9b_9d);
        struct_Cn.cc = simd_or(tmp497, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_a8 = simd_and(tmp32, tmp58);
        bytetest_9c_9d = simd_and(tmp48, tmp108);
        tmp498 = simd_and(tmp405, bytetest_a8);
        carryQ.cq[65] = carryout2carry(pablo_blk_Advance(tmp498, carryQ.get_carry_in(65), tmp499));
        tmp500 = simd_and(tmp499, bytetest_9c_9d);
        struct_Cn.cc = simd_or(tmp500, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_a9 = simd_and(tmp32, tmp144);
        bytetest_9f_9f = simd_and(tmp48, tmp25);
        tmp501 = simd_and(tmp405, bytetest_a9);
        carryQ.cq[66] = carryout2carry(pablo_blk_Advance(tmp501, carryQ.get_carry_in(66), tmp502));
        tmp503 = simd_and(tmp502, bytetest_9f_9f);
        struct_Cn.cc = simd_or(tmp503, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_a9 = simd_and(tmp32, tmp144);
        bytetest_bd_be = simd_and(bytetest_bc_bf, tmp140);
        tmp504 = simd_and(tmp502, bytetest_bd_be);
        struct_Cn.cc = simd_or(tmp504, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_aa = simd_and(tmp32, tmp197);
        bytetest_8a_8f = simd_and(bytetest_88_8f, tmp90);
        tmp505 = simd_and(tmp405, bytetest_aa);
        carryQ.cq[67] = carryout2carry(pablo_blk_Advance(tmp505, carryQ.get_carry_in(67), tmp506));
        tmp507 = simd_and(tmp506, bytetest_8a_8f);
        struct_Cn.cc = simd_or(tmp507, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_aa = simd_and(tmp32, tmp197);
        bytetest_9a_9f = simd_and(bytetest_98_9f, tmp90);
        tmp508 = simd_and(tmp506, bytetest_9a_9f);
        struct_Cn.cc = simd_or(tmp508, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_ab = simd_and(tmp32, tmp28);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp509 = simd_and(tmp405, bytetest_ab);
        carryQ.cq[68] = carryout2carry(pablo_blk_Advance(tmp509, carryQ.get_carry_in(68), tmp510));
        tmp511 = simd_and(tmp510, bytetest_80_bf);
        tmp512 = simd_and(bytetest_80_bf, tmp31);
        bytetest_aa = simd_and(tmp512, tmp197);
        tmp513 = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp514 = simd_or(basis_bits.bit_3, tmp100);
        bytetest_ae_bf = simd_and(tmp513, tmp514);
        tmp515 = simd_and(tmp506, bytetest_ae_bf);
        tmp516 = simd_or(tmp515, tmp511);
        struct_Cn.cc = simd_or(tmp516, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_ad = simd_and(tmp512, tmp6);
        tmp517 = simd_andc(bytetest_80_bf, tmp2);
        bytetest_8c_8f = simd_and(tmp517, tmp4);
        tmp518 = simd_and(tmp405, bytetest_ad);
        carryQ.cq[69] = carryout2carry(pablo_blk_Advance(tmp518, carryQ.get_carry_in(69), tmp519));
        tmp520 = simd_and(tmp519, bytetest_8c_8f);
        struct_Cn.cc = simd_or(tmp520, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_ad = simd_and(tmp512, tmp6);
        tmp521 = simd_and(bytetest_80_bf, tmp8);
        tmp522 = simd_and(tmp521, tmp4);
        bytetest_bd_bf = simd_and(tmp522, tmp38);
        tmp523 = simd_and(tmp519, bytetest_bd_bf);
        struct_Cn.cc = simd_or(tmp523, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_af = simd_and(tmp512, tmp25);
        tmp524 = simd_not(basis_bits.bit_5);
        tmp525 = simd_or(simd_and(basis_bits.bit_4, tmp524), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
        bytetest_b4_bb = simd_and(tmp521, tmp525);
        tmp526 = simd_and(tmp405, bytetest_af);
        carryQ.cq[70] = carryout2carry(pablo_blk_Advance(tmp526, carryQ.get_carry_in(70), tmp527));
        tmp528 = simd_and(tmp527, bytetest_b4_bb);
        struct_Cn.cc = simd_or(tmp528, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_b0 = simd_andc(tmp521, tmp41);
        tmp529 = simd_and(tmp521, tmp10);
        bytetest_b8_ba = simd_andc(tmp529, tmp24);
        tmp530 = simd_and(tmp405, bytetest_b0);
        carryQ.cq[71] = carryout2carry(pablo_blk_Advance(tmp530, carryQ.get_carry_in(71), tmp531));
        tmp532 = simd_and(tmp531, bytetest_b8_ba);
        struct_Cn.cc = simd_or(tmp532, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_b1 = simd_and(tmp521, tmp107);
        tmp533 = simd_and(tmp517, basis_bits.bit_4);
        bytetest_8a_8c = simd_and(tmp533, tmp281);
        tmp534 = simd_and(tmp405, bytetest_b1);
        carryQ.cq[72] = carryout2carry(pablo_blk_Advance(tmp534, carryQ.get_carry_in(72), tmp535));
        tmp536 = simd_and(tmp535, bytetest_8a_8c);
        struct_Cn.cc = simd_or(tmp536, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_b2 = simd_and(tmp521, tmp33);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp537 = simd_and(tmp405, bytetest_b2);
        carryQ.cq[73] = carryout2carry(pablo_blk_Advance(tmp537, carryQ.get_carry_in(73), tmp538));
        tmp539 = simd_and(tmp538, bytetest_80_bf);
        struct_Cn.cc = simd_or(tmp539, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_b3 = simd_and(tmp521, tmp120);
        bytetest_88_8f = simd_and(tmp517, basis_bits.bit_4);
        tmp540 = simd_and(tmp405, bytetest_b3);
        carryQ.cq[74] = carryout2carry(pablo_blk_Advance(tmp540, carryQ.get_carry_in(74), tmp541));
        tmp542 = simd_and(tmp541, bytetest_88_8f);
        struct_Cn.cc = simd_or(tmp542, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_b3 = simd_and(tmp521, tmp120);
        bytetest_b7_bf = simd_and(tmp521, tmp159);
        tmp543 = simd_and(tmp541, bytetest_b7_bf);
        struct_Cn.cc = simd_or(tmp543, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_b7 = simd_and(tmp521, tmp67);
        tmp544 = simd_not(tmp4);
        tmp545 = simd_or(simd_and(basis_bits.bit_3, tmp544), simd_andc(tmp159, basis_bits.bit_3));
        bytetest_a7_bb = simd_and(tmp513, tmp545);
        tmp546 = simd_and(tmp405, bytetest_b7);
        carryQ.cq[75] = carryout2carry(pablo_blk_Advance(tmp546, carryQ.get_carry_in(75), tmp547));
        tmp548 = simd_and(tmp547, bytetest_a7_bb);
        struct_Cn.cc = simd_or(tmp548, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_bc = simd_and(tmp521, tmp81);
        tmp549 = simd_and(bytetest_80_bf, tmp35);
        bytetest_96_97 = simd_and(tmp549, tmp423);
        tmp550 = simd_and(tmp405, bytetest_bc);
        carryQ.cq[76] = carryout2carry(pablo_blk_Advance(tmp550, carryQ.get_carry_in(76), tmp551));
        tmp552 = simd_and(tmp551, bytetest_96_97);
        struct_Cn.cc = simd_or(tmp552, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_bc = simd_and(tmp521, tmp81);
        bytetest_9e_9f = simd_and(tmp549, tmp100);
        tmp553 = simd_and(tmp551, bytetest_9e_9f);
        struct_Cn.cc = simd_or(tmp553, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_bd = simd_and(tmp521, tmp6);
        bytetest_86_87 = simd_and(tmp517, tmp423);
        tmp554 = simd_and(tmp405, bytetest_bd);
        carryQ.cq[77] = carryout2carry(pablo_blk_Advance(tmp554, carryQ.get_carry_in(77), tmp555));
        tmp556 = simd_and(tmp555, bytetest_86_87);
        struct_Cn.cc = simd_or(tmp556, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_bd = simd_and(tmp521, tmp6);
        bytetest_8e_8f = simd_and(tmp517, tmp100);
        tmp557 = simd_and(tmp555, bytetest_8e_8f);
        struct_Cn.cc = simd_or(tmp557, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_bd = simd_and(tmp521, tmp6);
        bytetest_98_98 = simd_and(tmp549, tmp58);
        tmp558 = simd_and(tmp555, bytetest_98_98);
        struct_Cn.cc = simd_or(tmp558, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_bd = simd_and(tmp521, tmp6);
        bytetest_9a_9a = simd_and(tmp549, tmp197);
        tmp559 = simd_and(tmp555, bytetest_9a_9a);
        struct_Cn.cc = simd_or(tmp559, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_bd = simd_and(tmp521, tmp6);
        bytetest_9c_9c = simd_and(tmp549, tmp81);
        tmp560 = simd_and(tmp555, bytetest_9c_9c);
        struct_Cn.cc = simd_or(tmp560, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_bd = simd_and(tmp521, tmp6);
        bytetest_9e_9e = simd_and(tmp549, tmp18);
        tmp561 = simd_and(tmp555, bytetest_9e_9e);
        struct_Cn.cc = simd_or(tmp561, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_bd = simd_and(tmp521, tmp6);
        bytetest_be_bf = simd_and(tmp521, tmp100);
        tmp562 = simd_and(tmp555, bytetest_be_bf);
        struct_Cn.cc = simd_or(tmp562, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_be = simd_and(tmp521, tmp18);
        bytetest_b5_b5 = simd_and(tmp521, tmp47);
        tmp563 = simd_and(tmp405, bytetest_be);
        carryQ.cq[78] = carryout2carry(pablo_blk_Advance(tmp563, carryQ.get_carry_in(78), tmp564));
        tmp565 = simd_and(tmp564, bytetest_b5_b5);
        struct_Cn.cc = simd_or(tmp565, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_bf = simd_and(tmp521, tmp25);
        bytetest_85_85 = simd_and(tmp517, tmp47);
        tmp566 = simd_and(tmp405, bytetest_bf);
        carryQ.cq[79] = carryout2carry(pablo_blk_Advance(tmp566, carryQ.get_carry_in(79), tmp567));
        tmp568 = simd_and(tmp567, bytetest_85_85);
        struct_Cn.cc = simd_or(tmp568, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_bf = simd_and(tmp521, tmp25);
        bytetest_94_95 = simd_and(tmp549, tmp165);
        tmp569 = simd_and(tmp567, bytetest_94_95);
        struct_Cn.cc = simd_or(tmp569, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_bf = simd_and(tmp521, tmp25);
        bytetest_9c_9c = simd_and(tmp549, tmp81);
        tmp570 = simd_and(tmp567, bytetest_9c_9c);
        struct_Cn.cc = simd_or(tmp570, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_bf = simd_and(tmp521, tmp25);
        bytetest_b0_b1 = simd_andc(tmp521, tmp240);
        tmp571 = simd_and(tmp567, bytetest_b0_b1);
        struct_Cn.cc = simd_or(tmp571, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_bf = simd_and(tmp521, tmp25);
        bytetest_b5_b5 = simd_and(tmp521, tmp47);
        tmp572 = simd_and(tmp567, bytetest_b5_b5);
        struct_Cn.cc = simd_or(tmp572, struct_Cn.cc);
        bytetest_e1 = simd_and(tmp99, tmp107);
        bytetest_bf = simd_and(tmp521, tmp25);
        bytetest_bf_bf = simd_and(tmp521, tmp25);
        tmp573 = simd_and(tmp567, bytetest_bf_bf);
        struct_Cn.cc = simd_or(tmp573, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_81 = simd_and(tmp517, tmp107);
        bytetest_a5_a5 = simd_and(tmp512, tmp47);
        tmp574 = simd_and(tmp13, bytetest_e2);
        carryQ.cq[80] = carryout2carry(pablo_blk_Advance(tmp574, carryQ.get_carry_in(80), tmp575));
        tmp576 = simd_and(tmp575, bytetest_81);
        carryQ.cq[81] = carryout2carry(pablo_blk_Advance(tmp576, carryQ.get_carry_in(81), tmp577));
        tmp578 = simd_and(tmp577, bytetest_a5_a5);
        struct_Cn.cc = simd_or(tmp578, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_81 = simd_and(tmp517, tmp107);
        tmp579 = simd_andc(basis_bits.bit_6, tmp20);
        bytetest_b2_b3 = simd_and(tmp521, tmp579);
        tmp580 = simd_and(tmp577, bytetest_b2_b3);
        struct_Cn.cc = simd_or(tmp580, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_82 = simd_and(tmp517, tmp33);
        bytetest_8f_8f = simd_and(tmp517, tmp25);
        tmp581 = simd_and(tmp575, bytetest_82);
        carryQ.cq[82] = carryout2carry(pablo_blk_Advance(tmp581, carryQ.get_carry_in(82), tmp582));
        tmp583 = simd_and(tmp582, bytetest_8f_8f);
        struct_Cn.cc = simd_or(tmp583, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_82 = simd_and(tmp517, tmp33);
        tmp584 = simd_and(tmp549, tmp4);
        bytetest_9d_9f = simd_and(tmp584, tmp38);
        tmp585 = simd_and(tmp582, bytetest_9d_9f);
        struct_Cn.cc = simd_or(tmp585, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_83 = simd_and(tmp517, tmp120);
        bytetest_80_8f = simd_andc(bytetest_80_bf, tmp2);
        tmp586 = simd_and(tmp575, bytetest_83);
        carryQ.cq[83] = carryout2carry(pablo_blk_Advance(tmp586, carryQ.get_carry_in(83), tmp587));
        tmp588 = simd_and(tmp587, bytetest_80_8f);
        bytetest_82 = simd_and(bytetest_80_8f, tmp33);
        tmp589 = simd_and(tmp521, basis_bits.bit_4);
        bytetest_bb_bf = simd_and(tmp589, tmp72);
        tmp590 = simd_and(tmp582, bytetest_bb_bf);
        tmp591 = simd_or(tmp590, tmp588);
        struct_Cn.cc = simd_or(tmp591, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_83 = simd_and(bytetest_80_8f, tmp120);
        bytetest_b1_bf = simd_and(tmp521, tmp215);
        tmp592 = simd_and(tmp587, bytetest_b1_bf);
        struct_Cn.cc = simd_or(tmp592, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_86 = simd_and(bytetest_80_8f, tmp57);
        tmp593 = simd_and(bytetest_80_8f, basis_bits.bit_4);
        bytetest_8a_8f = simd_and(tmp593, tmp90);
        tmp594 = simd_and(tmp575, bytetest_86);
        carryQ.cq[84] = carryout2carry(pablo_blk_Advance(tmp594, carryQ.get_carry_in(84), tmp595));
        tmp596 = simd_and(tmp595, bytetest_8a_8f);
        struct_Cn.cc = simd_or(tmp596, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_8f = simd_and(bytetest_80_8f, tmp25);
        bytetest_b4_bf = simd_and(tmp521, tmp20);
        tmp597 = simd_and(tmp575, bytetest_8f);
        carryQ.cq[85] = carryout2carry(pablo_blk_Advance(tmp597, carryQ.get_carry_in(85), tmp598));
        tmp599 = simd_and(tmp598, bytetest_b4_bf);
        struct_Cn.cc = simd_or(tmp599, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_90 = simd_andc(tmp549, tmp41);
        tmp600 = simd_or(basis_bits.bit_3, tmp159);
        bytetest_a7_bf = simd_and(tmp513, tmp600);
        tmp601 = simd_and(tmp575, bytetest_90);
        carryQ.cq[86] = carryout2carry(pablo_blk_Advance(tmp601, carryQ.get_carry_in(86), tmp602));
        tmp603 = simd_and(tmp602, bytetest_a7_bf);
        struct_Cn.cc = simd_or(tmp603, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_91 = simd_and(tmp549, tmp107);
        tmp604 = simd_andc(bytetest_80_bf, basis_bits.bit_2);
        tmp605 = simd_or(basis_bits.bit_3, tmp400);
        bytetest_8b_9f = simd_and(tmp604, tmp605);
        tmp606 = simd_and(tmp575, bytetest_91);
        carryQ.cq[87] = carryout2carry(pablo_blk_Advance(tmp606, carryQ.get_carry_in(87), tmp607));
        tmp608 = simd_and(tmp607, bytetest_8b_9f);
        struct_Cn.cc = simd_or(tmp608, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_9c = simd_and(tmp549, tmp81);
        bytetest_80_80 = simd_andc(bytetest_80_8f, tmp41);
        tmp609 = simd_and(tmp575, bytetest_9c);
        carryQ.cq[88] = carryout2carry(pablo_blk_Advance(tmp609, carryQ.get_carry_in(88), tmp610));
        tmp611 = simd_and(tmp610, bytetest_80_80);
        struct_Cn.cc = simd_or(tmp611, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_ad = simd_and(tmp512, tmp6);
        tmp612 = simd_and(bytetest_80_8f, tmp4);
        bytetest_8d_8f = simd_and(tmp612, tmp38);
        tmp613 = simd_and(tmp575, bytetest_ad);
        carryQ.cq[89] = carryout2carry(pablo_blk_Advance(tmp613, carryQ.get_carry_in(89), tmp614));
        tmp615 = simd_and(tmp614, bytetest_8d_8f);
        struct_Cn.cc = simd_or(tmp615, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_ae_af = simd_and(tmp512, tmp100);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp616 = simd_and(tmp575, bytetest_ae_af);
        carryQ.cq[90] = carryout2carry(pablo_blk_Advance(tmp616, carryQ.get_carry_in(90), tmp617));
        tmp618 = simd_and(tmp617, bytetest_80_bf);
        bytetest_ad = simd_and(tmp512, tmp6);
        tmp619 = simd_and(basis_bits.bit_4, tmp90);
        tmp620 = simd_and(basis_bits.bit_3, tmp619);
        tmp621 = simd_or(basis_bits.bit_2, tmp620);
        bytetest_9a_bf = simd_and(bytetest_80_bf, tmp621);
        tmp622 = simd_and(tmp614, bytetest_9a_bf);
        tmp623 = simd_or(tmp622, tmp618);
        struct_Cn.cc = simd_or(tmp623, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_b0 = simd_andc(tmp521, tmp41);
        bytetest_af_af = simd_and(tmp512, tmp25);
        tmp624 = simd_and(tmp575, bytetest_b0);
        carryQ.cq[91] = carryout2carry(pablo_blk_Advance(tmp624, carryQ.get_carry_in(91), tmp625));
        tmp626 = simd_and(tmp625, bytetest_af_af);
        struct_Cn.cc = simd_or(tmp626, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_b1 = simd_and(tmp521, tmp107);
        bytetest_9f_9f = simd_and(tmp549, tmp25);
        tmp627 = simd_and(tmp575, bytetest_b1);
        carryQ.cq[92] = carryout2carry(pablo_blk_Advance(tmp627, carryQ.get_carry_in(92), tmp628));
        tmp629 = simd_and(tmp628, bytetest_9f_9f);
        struct_Cn.cc = simd_or(tmp629, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_b3 = simd_and(tmp521, tmp120);
        tmp630 = simd_or(simd_and(basis_bits.bit_4, tmp50), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
        bytetest_b4_b8 = simd_and(tmp521, tmp630);
        tmp631 = simd_and(tmp575, bytetest_b3);
        carryQ.cq[93] = carryout2carry(pablo_blk_Advance(tmp631, carryQ.get_carry_in(93), tmp632));
        tmp633 = simd_and(tmp632, bytetest_b4_b8);
        struct_Cn.cc = simd_or(tmp633, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_b4 = simd_and(tmp521, tmp39);
        bytetest_a6_a6 = simd_and(tmp512, tmp57);
        tmp634 = simd_and(tmp575, bytetest_b4);
        carryQ.cq[94] = carryout2carry(pablo_blk_Advance(tmp634, carryQ.get_carry_in(94), tmp635));
        tmp636 = simd_and(tmp635, bytetest_a6_a6);
        struct_Cn.cc = simd_or(tmp636, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_b4 = simd_and(tmp521, tmp39);
        tmp637 = simd_and(tmp512, basis_bits.bit_4);
        bytetest_a8_ac = simd_andc(tmp637, tmp74);
        tmp638 = simd_and(tmp635, bytetest_a8_ac);
        struct_Cn.cc = simd_or(tmp638, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_b4 = simd_and(tmp521, tmp39);
        bytetest_ae_af = simd_and(tmp512, tmp100);
        tmp639 = simd_and(tmp635, bytetest_ae_af);
        struct_Cn.cc = simd_or(tmp639, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_b5 = simd_and(tmp521, tmp47);
        bytetest_a8_ae = simd_andc(tmp637, tmp51);
        tmp640 = simd_and(tmp575, bytetest_b5);
        carryQ.cq[95] = carryout2carry(pablo_blk_Advance(tmp640, carryQ.get_carry_in(95), tmp641));
        tmp642 = simd_and(tmp641, bytetest_a8_ae);
        struct_Cn.cc = simd_or(tmp642, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_b5 = simd_and(tmp521, tmp47);
        tmp643 = simd_not(tmp51);
        tmp644 = simd_or(simd_and(basis_bits.bit_4, tmp643), simd_andc(tmp49, basis_bits.bit_4));
        bytetest_b1_be = simd_and(tmp521, tmp644);
        tmp645 = simd_and(tmp641, bytetest_b1_be);
        struct_Cn.cc = simd_or(tmp645, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_b6 = simd_and(tmp521, tmp57);
        bytetest_97_9f = simd_and(tmp549, tmp159);
        tmp646 = simd_and(tmp575, bytetest_b6);
        carryQ.cq[96] = carryout2carry(pablo_blk_Advance(tmp646, carryQ.get_carry_in(96), tmp647));
        tmp648 = simd_and(tmp647, bytetest_97_9f);
        struct_Cn.cc = simd_or(tmp648, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_b6 = simd_and(tmp521, tmp57);
        bytetest_a7_a7 = simd_and(tmp512, tmp67);
        tmp649 = simd_and(tmp647, bytetest_a7_a7);
        struct_Cn.cc = simd_or(tmp649, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_b6 = simd_and(tmp521, tmp57);
        bytetest_af_af = simd_and(tmp512, tmp25);
        tmp650 = simd_and(tmp647, bytetest_af_af);
        struct_Cn.cc = simd_or(tmp650, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_b6 = simd_and(tmp521, tmp57);
        bytetest_b7_b7 = simd_and(tmp521, tmp67);
        tmp651 = simd_and(tmp647, bytetest_b7_b7);
        struct_Cn.cc = simd_or(tmp651, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_b6 = simd_and(tmp521, tmp57);
        bytetest_bf_bf = simd_and(tmp521, tmp25);
        tmp652 = simd_and(tmp647, bytetest_bf_bf);
        struct_Cn.cc = simd_or(tmp652, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_b7 = simd_and(tmp521, tmp67);
        bytetest_87_87 = simd_and(bytetest_80_8f, tmp67);
        tmp653 = simd_and(tmp575, bytetest_b7);
        carryQ.cq[97] = carryout2carry(pablo_blk_Advance(tmp653, carryQ.get_carry_in(97), tmp654));
        tmp655 = simd_and(tmp654, bytetest_87_87);
        struct_Cn.cc = simd_or(tmp655, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_b7 = simd_and(tmp521, tmp67);
        bytetest_8f_8f = simd_and(bytetest_80_8f, tmp25);
        tmp656 = simd_and(tmp654, bytetest_8f_8f);
        struct_Cn.cc = simd_or(tmp656, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_b7 = simd_and(tmp521, tmp67);
        bytetest_97_97 = simd_and(tmp549, tmp67);
        tmp657 = simd_and(tmp654, bytetest_97_97);
        struct_Cn.cc = simd_or(tmp657, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_b7 = simd_and(tmp521, tmp67);
        bytetest_9f_9f = simd_and(tmp549, tmp25);
        tmp658 = simd_and(tmp654, bytetest_9f_9f);
        struct_Cn.cc = simd_or(tmp658, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_b9 = simd_and(tmp521, tmp144);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp659 = simd_and(tmp575, bytetest_b9);
        carryQ.cq[98] = carryout2carry(pablo_blk_Advance(tmp659, carryQ.get_carry_in(98), tmp660));
        tmp661 = simd_and(tmp660, bytetest_80_bf);
        bytetest_b8 = simd_and(tmp521, tmp58);
        bytetest_bc_bf = simd_and(tmp521, tmp4);
        tmp662 = simd_and(tmp575, bytetest_b8);
        carryQ.cq[99] = carryout2carry(pablo_blk_Advance(tmp662, carryQ.get_carry_in(99), tmp663));
        tmp664 = simd_and(tmp663, bytetest_bc_bf);
        tmp665 = simd_or(tmp664, tmp661);
        struct_Cn.cc = simd_or(tmp665, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_ba = simd_and(tmp521, tmp197);
        bytetest_9a_9a = simd_and(tmp549, tmp197);
        tmp666 = simd_and(tmp575, bytetest_ba);
        carryQ.cq[100] = carryout2carry(pablo_blk_Advance(tmp666, carryQ.get_carry_in(100), tmp667));
        tmp668 = simd_and(tmp667, bytetest_9a_9a);
        struct_Cn.cc = simd_or(tmp668, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_bb = simd_and(tmp521, tmp28);
        bytetest_b4_bf = simd_and(tmp521, tmp20);
        tmp669 = simd_and(tmp575, bytetest_bb);
        carryQ.cq[101] = carryout2carry(pablo_blk_Advance(tmp669, carryQ.get_carry_in(101), tmp670));
        tmp671 = simd_and(tmp670, bytetest_b4_bf);
        struct_Cn.cc = simd_or(tmp671, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_bf = simd_and(tmp521, tmp25);
        tmp672 = simd_not(basis_bits.bit_3);
        tmp673 = simd_and(basis_bits.bit_3, tmp192);
        tmp674 = simd_or(simd_and(basis_bits.bit_2, tmp672), simd_andc(tmp673, basis_bits.bit_2));
        bytetest_96_af = simd_and(bytetest_80_bf, tmp674);
        tmp675 = simd_and(tmp575, bytetest_bf);
        carryQ.cq[102] = carryout2carry(pablo_blk_Advance(tmp675, carryQ.get_carry_in(102), tmp676));
        tmp677 = simd_and(tmp676, bytetest_96_af);
        struct_Cn.cc = simd_or(tmp677, struct_Cn.cc);
        bytetest_e2 = simd_and(tmp99, tmp33);
        bytetest_bf = simd_and(tmp521, tmp25);
        bytetest_bc_bf = simd_and(tmp521, tmp4);
        tmp678 = simd_and(tmp676, bytetest_bc_bf);
        struct_Cn.cc = simd_or(tmp678, struct_Cn.cc);
        bytetest_e3 = simd_and(tmp99, tmp120);
        bytetest_81 = simd_and(bytetest_80_8f, tmp107);
        bytetest_80_80 = simd_andc(bytetest_80_8f, tmp41);
        tmp679 = simd_and(tmp13, bytetest_e3);
        carryQ.cq[103] = carryout2carry(pablo_blk_Advance(tmp679, carryQ.get_carry_in(103), tmp680));
        tmp681 = simd_and(tmp680, bytetest_81);
        carryQ.cq[104] = carryout2carry(pablo_blk_Advance(tmp681, carryQ.get_carry_in(104), tmp682));
        tmp683 = simd_and(tmp682, bytetest_80_80);
        struct_Cn.cc = simd_or(tmp683, struct_Cn.cc);
        bytetest_e3 = simd_and(tmp99, tmp120);
        bytetest_82 = simd_and(bytetest_80_8f, tmp33);
        bytetest_97_98 = simd_and(tmp549, tmp52);
        tmp684 = simd_and(tmp680, bytetest_82);
        carryQ.cq[105] = carryout2carry(pablo_blk_Advance(tmp684, carryQ.get_carry_in(105), tmp685));
        tmp686 = simd_and(tmp685, bytetest_97_98);
        struct_Cn.cc = simd_or(tmp686, struct_Cn.cc);
        bytetest_e3 = simd_and(tmp99, tmp120);
        bytetest_84 = simd_and(bytetest_80_8f, tmp39);
        tmp687 = simd_andc(bytetest_80_8f, basis_bits.bit_4);
        bytetest_80_84 = simd_andc(tmp687, tmp74);
        tmp688 = simd_and(tmp680, bytetest_84);
        carryQ.cq[106] = carryout2carry(pablo_blk_Advance(tmp688, carryQ.get_carry_in(106), tmp689));
        tmp690 = simd_and(tmp689, bytetest_80_84);
        struct_Cn.cc = simd_or(tmp690, struct_Cn.cc);
        bytetest_e3 = simd_and(tmp99, tmp120);
        bytetest_84 = simd_and(bytetest_80_8f, tmp39);
        bytetest_ae_b0 = simd_and(tmp513, tmp186);
        tmp691 = simd_and(tmp689, bytetest_ae_b0);
        struct_Cn.cc = simd_or(tmp691, struct_Cn.cc);
        bytetest_e3 = simd_and(tmp99, tmp120);
        bytetest_86 = simd_and(bytetest_80_8f, tmp57);
        bytetest_8f_8f = simd_and(bytetest_80_8f, tmp25);
        tmp692 = simd_and(tmp680, bytetest_86);
        carryQ.cq[107] = carryout2carry(pablo_blk_Advance(tmp692, carryQ.get_carry_in(107), tmp693));
        tmp694 = simd_and(tmp693, bytetest_8f_8f);
        struct_Cn.cc = simd_or(tmp694, struct_Cn.cc);
        bytetest_e3 = simd_and(tmp99, tmp120);
        bytetest_86 = simd_and(bytetest_80_8f, tmp57);
        bytetest_bb_bf = simd_and(tmp589, tmp72);
        tmp695 = simd_and(tmp693, bytetest_bb_bf);
        struct_Cn.cc = simd_or(tmp695, struct_Cn.cc);
        bytetest_e3 = simd_and(tmp99, tmp120);
        bytetest_87 = simd_and(bytetest_80_8f, tmp67);
        bytetest_a4_af = simd_and(tmp512, tmp20);
        tmp696 = simd_and(tmp680, bytetest_87);
        carryQ.cq[108] = carryout2carry(pablo_blk_Advance(tmp696, carryQ.get_carry_in(108), tmp697));
        tmp698 = simd_and(tmp697, bytetest_a4_af);
        struct_Cn.cc = simd_or(tmp698, struct_Cn.cc);
        bytetest_e3 = simd_and(tmp99, tmp120);
        bytetest_88 = simd_and(bytetest_80_8f, tmp58);
        bytetest_9f_9f = simd_and(tmp549, tmp25);
        tmp699 = simd_and(tmp680, bytetest_88);
        carryQ.cq[109] = carryout2carry(pablo_blk_Advance(tmp699, carryQ.get_carry_in(109), tmp700));
        tmp701 = simd_and(tmp700, bytetest_9f_9f);
        struct_Cn.cc = simd_or(tmp701, struct_Cn.cc);
        bytetest_e3 = simd_and(tmp99, tmp120);
        bytetest_8b = simd_and(bytetest_80_8f, tmp28);
        bytetest_bf_bf = simd_and(tmp521, tmp25);
        tmp702 = simd_and(tmp680, bytetest_8b);
        carryQ.cq[110] = carryout2carry(pablo_blk_Advance(tmp702, carryQ.get_carry_in(110), tmp703));
        tmp704 = simd_and(tmp703, bytetest_bf_bf);
        struct_Cn.cc = simd_or(tmp704, struct_Cn.cc);
        bytetest_e4 = simd_and(tmp99, tmp39);
        bytetest_b6 = simd_and(tmp521, tmp57);
        bytetest_b6_bf = simd_and(tmp521, tmp192);
        tmp705 = simd_and(tmp13, bytetest_e4);
        carryQ.cq[111] = carryout2carry(pablo_blk_Advance(tmp705, carryQ.get_carry_in(111), tmp706));
        tmp707 = simd_and(tmp706, bytetest_b6);
        carryQ.cq[112] = carryout2carry(pablo_blk_Advance(tmp707, carryQ.get_carry_in(112), tmp708));
        tmp709 = simd_and(tmp708, bytetest_b6_bf);
        struct_Cn.cc = simd_or(tmp709, struct_Cn.cc);
        bytetest_e9 = simd_and(tmp99, tmp144);
        bytetest_bf = simd_and(tmp521, tmp25);
        tmp710 = simd_or(basis_bits.bit_2, tmp127);
        bytetest_8d_bf = simd_and(bytetest_80_bf, tmp710);
        tmp711 = simd_and(tmp13, bytetest_e9);
        carryQ.cq[113] = carryout2carry(pablo_blk_Advance(tmp711, carryQ.get_carry_in(113), tmp712));
        tmp713 = simd_and(tmp712, bytetest_bf);
        carryQ.cq[114] = carryout2carry(pablo_blk_Advance(tmp713, carryQ.get_carry_in(114), tmp714));
        tmp715 = simd_and(tmp714, bytetest_8d_bf);
        struct_Cn.cc = simd_or(tmp715, struct_Cn.cc);
        bytetest_ea = simd_and(tmp99, tmp197);
        bytetest_92 = simd_and(tmp549, tmp33);
        bytetest_8d_8f = simd_and(tmp612, tmp38);
        tmp716 = simd_and(tmp13, bytetest_ea);
        carryQ.cq[115] = carryout2carry(pablo_blk_Advance(tmp716, carryQ.get_carry_in(115), tmp717));
        tmp718 = simd_and(tmp717, bytetest_92);
        carryQ.cq[116] = carryout2carry(pablo_blk_Advance(tmp718, carryQ.get_carry_in(116), tmp719));
        tmp720 = simd_and(tmp719, bytetest_8d_8f);
        struct_Cn.cc = simd_or(tmp720, struct_Cn.cc);
        bytetest_ea = simd_and(tmp99, tmp197);
        bytetest_93 = simd_and(tmp549, tmp120);
        bytetest_87_8f = simd_and(bytetest_80_8f, tmp159);
        tmp721 = simd_and(tmp717, bytetest_93);
        carryQ.cq[117] = carryout2carry(pablo_blk_Advance(tmp721, carryQ.get_carry_in(117), tmp722));
        tmp723 = simd_and(tmp722, bytetest_87_8f);
        struct_Cn.cc = simd_or(tmp723, struct_Cn.cc);
        bytetest_ea = simd_and(tmp99, tmp197);
        bytetest_98 = simd_and(tmp549, tmp58);
        tmp724 = simd_or(basis_bits.bit_3, tmp4);
        bytetest_ac_bf = simd_and(tmp513, tmp724);
        tmp725 = simd_and(tmp717, bytetest_98);
        carryQ.cq[118] = carryout2carry(pablo_blk_Advance(tmp725, carryQ.get_carry_in(118), tmp726));
        tmp727 = simd_and(tmp726, bytetest_ac_bf);
        struct_Cn.cc = simd_or(tmp727, struct_Cn.cc);
        bytetest_ea = simd_and(tmp99, tmp197);
        bytetest_9a = simd_and(tmp549, tmp197);
        tmp728 = simd_and(tmp549, basis_bits.bit_4);
        bytetest_98_9e = simd_andc(tmp728, tmp51);
        tmp729 = simd_and(tmp717, bytetest_9a);
        carryQ.cq[119] = carryout2carry(pablo_blk_Advance(tmp729, carryQ.get_carry_in(119), tmp730));
        tmp731 = simd_and(tmp730, bytetest_98_9e);
        struct_Cn.cc = simd_or(tmp731, struct_Cn.cc);
        bytetest_ea = simd_and(tmp99, tmp197);
        bytetest_9b = simd_and(tmp549, tmp28);
        bytetest_b8_bf = simd_and(tmp521, basis_bits.bit_4);
        tmp732 = simd_and(tmp717, bytetest_9b);
        carryQ.cq[120] = carryout2carry(pablo_blk_Advance(tmp732, carryQ.get_carry_in(120), tmp733));
        tmp734 = simd_and(tmp733, bytetest_b8_bf);
        struct_Cn.cc = simd_or(tmp734, struct_Cn.cc);
        bytetest_ea = simd_and(tmp99, tmp197);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_8f_8f = simd_and(bytetest_80_8f, tmp25);
        tmp735 = simd_and(tmp717, bytetest_9e);
        carryQ.cq[121] = carryout2carry(pablo_blk_Advance(tmp735, carryQ.get_carry_in(121), tmp736));
        tmp737 = simd_and(tmp736, bytetest_8f_8f);
        struct_Cn.cc = simd_or(tmp737, struct_Cn.cc);
        bytetest_ea = simd_and(tmp99, tmp197);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_94_9f = simd_and(tmp549, tmp20);
        tmp738 = simd_and(tmp736, bytetest_94_9f);
        struct_Cn.cc = simd_or(tmp738, struct_Cn.cc);
        bytetest_ea = simd_and(tmp99, tmp197);
        bytetest_9f = simd_and(tmp549, tmp25);
        tmp739 = simd_and(basis_bits.bit_2, tmp268);
        bytetest_80_b7 = simd_andc(bytetest_80_bf, tmp739);
        tmp740 = simd_and(tmp717, bytetest_9f);
        carryQ.cq[122] = carryout2carry(pablo_blk_Advance(tmp740, carryQ.get_carry_in(122), tmp741));
        tmp742 = simd_and(tmp741, bytetest_80_b7);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_ab_bf = simd_and(tmp513, tmp605);
        tmp743 = simd_and(tmp736, bytetest_ab_bf);
        tmp744 = simd_or(tmp743, tmp742);
        struct_Cn.cc = simd_or(tmp744, struct_Cn.cc);
        bytetest_ea = simd_and(tmp99, tmp197);
        bytetest_a0 = simd_andc(tmp512, tmp41);
        bytetest_ac_af = simd_and(tmp512, tmp4);
        tmp745 = simd_and(tmp717, bytetest_a0);
        carryQ.cq[123] = carryout2carry(pablo_blk_Advance(tmp745, carryQ.get_carry_in(123), tmp746));
        tmp747 = simd_and(tmp746, bytetest_ac_af);
        struct_Cn.cc = simd_or(tmp747, struct_Cn.cc);
        bytetest_ea = simd_and(tmp99, tmp197);
        bytetest_a0 = simd_andc(tmp512, tmp41);
        bytetest_ba_bf = simd_and(bytetest_b8_bf, tmp90);
        tmp748 = simd_and(tmp746, bytetest_ba_bf);
        struct_Cn.cc = simd_or(tmp748, struct_Cn.cc);
        bytetest_ea = simd_and(tmp99, tmp197);
        bytetest_a1 = simd_and(tmp512, tmp107);
        bytetest_b8_bf = simd_and(tmp521, basis_bits.bit_4);
        tmp749 = simd_and(tmp717, bytetest_a1);
        carryQ.cq[124] = carryout2carry(pablo_blk_Advance(tmp749, carryQ.get_carry_in(124), tmp750));
        tmp751 = simd_and(tmp750, bytetest_b8_bf);
        struct_Cn.cc = simd_or(tmp751, struct_Cn.cc);
        bytetest_ea = simd_and(tmp99, tmp197);
        bytetest_a3 = simd_and(tmp512, tmp120);
        tmp752 = simd_or(simd_and(basis_bits.bit_4, tmp309), simd_andc(tmp74, basis_bits.bit_4));
        bytetest_85_8d = simd_and(bytetest_80_8f, tmp752);
        tmp753 = simd_and(tmp717, bytetest_a3);
        carryQ.cq[125] = carryout2carry(pablo_blk_Advance(tmp753, carryQ.get_carry_in(125), tmp754));
        tmp755 = simd_and(tmp754, bytetest_85_8d);
        struct_Cn.cc = simd_or(tmp755, struct_Cn.cc);
        bytetest_ea = simd_and(tmp99, tmp197);
        bytetest_a3 = simd_and(tmp512, tmp120);
        bytetest_9a_9f = simd_and(tmp728, tmp90);
        tmp756 = simd_and(tmp754, bytetest_9a_9f);
        struct_Cn.cc = simd_or(tmp756, struct_Cn.cc);
        bytetest_ea = simd_and(tmp99, tmp197);
        bytetest_a3 = simd_and(tmp512, tmp120);
        bytetest_bc_bf = simd_and(tmp521, tmp4);
        tmp757 = simd_and(tmp754, bytetest_bc_bf);
        struct_Cn.cc = simd_or(tmp757, struct_Cn.cc);
        bytetest_ea = simd_and(tmp99, tmp197);
        bytetest_a5 = simd_and(tmp512, tmp47);
        tmp758 = simd_or(simd_and(basis_bits.bit_4, tmp643), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
        bytetest_94_9e = simd_and(tmp549, tmp758);
        tmp759 = simd_and(tmp717, bytetest_a5);
        carryQ.cq[126] = carryout2carry(pablo_blk_Advance(tmp759, carryQ.get_carry_in(126), tmp760));
        tmp761 = simd_and(tmp760, bytetest_94_9e);
        struct_Cn.cc = simd_or(tmp761, struct_Cn.cc);
        bytetest_ea = simd_and(tmp99, tmp197);
        bytetest_a5 = simd_and(tmp512, tmp47);
        bytetest_bd_bf = simd_and(bytetest_bc_bf, tmp38);
        tmp762 = simd_and(tmp760, bytetest_bd_bf);
        struct_Cn.cc = simd_or(tmp762, struct_Cn.cc);
        bytetest_ea = simd_and(tmp99, tmp197);
        bytetest_a7 = simd_and(tmp512, tmp67);
        bytetest_8e_8e = simd_and(bytetest_80_8f, tmp18);
        tmp763 = simd_and(tmp717, bytetest_a7);
        carryQ.cq[127] = carryout2carry(pablo_blk_Advance(tmp763, carryQ.get_carry_in(127), tmp764));
        tmp765 = simd_and(tmp764, bytetest_8e_8e);
        struct_Cn.cc = simd_or(tmp765, struct_Cn.cc);
        bytetest_ea = simd_and(tmp99, tmp197);
        bytetest_a7 = simd_and(tmp512, tmp67);
        bytetest_9a_9d = simd_and(tmp728, tmp258);
        tmp766 = simd_and(tmp764, bytetest_9a_9d);
        struct_Cn.cc = simd_or(tmp766, struct_Cn.cc);
        bytetest_ea = simd_and(tmp99, tmp197);
        bytetest_a7 = simd_and(tmp512, tmp67);
        bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp767 = simd_and(tmp764, bytetest_a0_bf);
        struct_Cn.cc = simd_or(tmp767, struct_Cn.cc);
        bytetest_ea = simd_and(tmp99, tmp197);
        bytetest_a8 = simd_and(tmp512, tmp58);
        bytetest_b7_bf = simd_and(tmp521, tmp159);
        tmp768 = simd_and(tmp717, bytetest_a8);
        carryQ.cq[128] = carryout2carry(pablo_blk_Advance(tmp768, carryQ.get_carry_in(128), tmp769));
        tmp770 = simd_and(tmp769, bytetest_b7_bf);
        struct_Cn.cc = simd_or(tmp770, struct_Cn.cc);
        bytetest_ea = simd_and(tmp99, tmp197);
        bytetest_a9 = simd_and(tmp512, tmp144);
        bytetest_8e_8f = simd_and(bytetest_80_8f, tmp100);
        tmp771 = simd_and(tmp717, bytetest_a9);
        carryQ.cq[129] = carryout2carry(pablo_blk_Advance(tmp771, carryQ.get_carry_in(129), tmp772));
        tmp773 = simd_and(tmp772, bytetest_8e_8f);
        struct_Cn.cc = simd_or(tmp773, struct_Cn.cc);
        bytetest_ea = simd_and(tmp99, tmp197);
        bytetest_a9 = simd_and(tmp512, tmp144);
        bytetest_9a_9b = simd_and(tmp549, tmp151);
        tmp774 = simd_and(tmp772, bytetest_9a_9b);
        struct_Cn.cc = simd_or(tmp774, struct_Cn.cc);
        bytetest_ea = simd_and(tmp99, tmp197);
        bytetest_a9 = simd_and(tmp512, tmp144);
        bytetest_bc_bf = simd_and(tmp521, tmp4);
        tmp775 = simd_and(tmp772, bytetest_bc_bf);
        struct_Cn.cc = simd_or(tmp775, struct_Cn.cc);
        bytetest_ea = simd_and(tmp99, tmp197);
        bytetest_ab = simd_and(tmp512, tmp28);
        tmp776 = simd_not(tmp400);
        tmp777 = simd_or(tmp20, tmp24);
        tmp778 = simd_or(simd_and(basis_bits.bit_3, tmp776), simd_andc(tmp777, basis_bits.bit_3));
        bytetest_83_9a = simd_and(tmp604, tmp778);
        tmp779 = simd_and(tmp717, bytetest_ab);
        carryQ.cq[130] = carryout2carry(pablo_blk_Advance(tmp779, carryQ.get_carry_in(130), tmp780));
        tmp781 = simd_and(tmp780, bytetest_83_9a);
        struct_Cn.cc = simd_or(tmp781, struct_Cn.cc);
        bytetest_ea = simd_and(tmp99, tmp197);
        bytetest_ac = simd_and(tmp512, tmp81);
        bytetest_80_80 = simd_andc(bytetest_80_8f, tmp41);
        tmp782 = simd_and(tmp717, bytetest_ac);
        carryQ.cq[131] = carryout2carry(pablo_blk_Advance(tmp782, carryQ.get_carry_in(131), tmp783));
        tmp784 = simd_and(tmp783, bytetest_80_80);
        bytetest_ab = simd_and(tmp512, tmp28);
        bytetest_b7_bf = simd_and(tmp521, tmp159);
        tmp785 = simd_and(tmp780, bytetest_b7_bf);
        tmp786 = simd_or(tmp785, tmp784);
        struct_Cn.cc = simd_or(tmp786, struct_Cn.cc);
        bytetest_ea = simd_and(tmp99, tmp197);
        bytetest_ac = simd_and(tmp512, tmp81);
        bytetest_87_88 = simd_and(bytetest_80_8f, tmp52);
        tmp787 = simd_and(tmp783, bytetest_87_88);
        struct_Cn.cc = simd_or(tmp787, struct_Cn.cc);
        bytetest_ea = simd_and(tmp99, tmp197);
        bytetest_ac = simd_and(tmp512, tmp81);
        tmp788 = simd_or(simd_and(basis_bits.bit_3, tmp42), simd_andc(tmp25, basis_bits.bit_3));
        bytetest_8f_90 = simd_and(tmp604, tmp788);
        tmp789 = simd_and(tmp783, bytetest_8f_90);
        struct_Cn.cc = simd_or(tmp789, struct_Cn.cc);
        bytetest_ea = simd_and(tmp99, tmp197);
        bytetest_ac = simd_and(tmp512, tmp81);
        bytetest_97_9f = simd_and(tmp549, tmp159);
        tmp790 = simd_and(tmp783, bytetest_97_9f);
        struct_Cn.cc = simd_or(tmp790, struct_Cn.cc);
        bytetest_ea = simd_and(tmp99, tmp197);
        bytetest_ac = simd_and(tmp512, tmp81);
        bytetest_a7_a7 = simd_and(tmp512, tmp67);
        tmp791 = simd_and(tmp783, bytetest_a7_a7);
        struct_Cn.cc = simd_or(tmp791, struct_Cn.cc);
        bytetest_ea = simd_and(tmp99, tmp197);
        bytetest_ad_ae = simd_and(bytetest_ac_af, tmp140);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp792 = simd_and(tmp717, bytetest_ad_ae);
        carryQ.cq[132] = carryout2carry(pablo_blk_Advance(tmp792, carryQ.get_carry_in(132), tmp793));
        tmp794 = simd_and(tmp793, bytetest_80_bf);
        bytetest_ac = simd_and(tmp512, tmp81);
        tmp795 = simd_or(basis_bits.bit_3, tmp25);
        bytetest_af_bf = simd_and(bytetest_a0_bf, tmp795);
        tmp796 = simd_and(tmp783, bytetest_af_bf);
        tmp797 = simd_or(tmp796, tmp794);
        struct_Cn.cc = simd_or(tmp797, struct_Cn.cc);
        bytetest_ea = simd_and(tmp99, tmp197);
        bytetest_af = simd_and(tmp512, tmp25);
        bytetest_ae_af = simd_and(tmp512, tmp100);
        tmp798 = simd_and(tmp717, bytetest_af);
        carryQ.cq[133] = carryout2carry(pablo_blk_Advance(tmp798, carryQ.get_carry_in(133), tmp799));
        tmp800 = simd_and(tmp799, bytetest_ae_af);
        struct_Cn.cc = simd_or(tmp800, struct_Cn.cc);
        bytetest_ea = simd_and(tmp99, tmp197);
        bytetest_af = simd_and(tmp512, tmp25);
        bytetest_ba_bf = simd_and(bytetest_b8_bf, tmp90);
        tmp801 = simd_and(tmp799, bytetest_ba_bf);
        struct_Cn.cc = simd_or(tmp801, struct_Cn.cc);
        bytetest_ed = simd_and(tmp99, tmp6);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_a4_af = simd_and(tmp512, tmp20);
        tmp802 = simd_and(tmp13, bytetest_ed);
        carryQ.cq[134] = carryout2carry(pablo_blk_Advance(tmp802, carryQ.get_carry_in(134), tmp803));
        tmp804 = simd_and(tmp803, bytetest_9e);
        carryQ.cq[135] = carryout2carry(pablo_blk_Advance(tmp804, carryQ.get_carry_in(135), tmp805));
        tmp806 = simd_and(tmp805, bytetest_a4_af);
        struct_Cn.cc = simd_or(tmp806, struct_Cn.cc);
        bytetest_ed = simd_and(tmp99, tmp6);
        bytetest_9f = simd_and(tmp549, tmp25);
        tmp807 = simd_not(tmp72);
        tmp808 = simd_or(simd_and(basis_bits.bit_4, tmp807), simd_andc(tmp51, basis_bits.bit_4));
        bytetest_87_8a = simd_and(bytetest_80_8f, tmp808);
        tmp809 = simd_and(tmp803, bytetest_9f);
        carryQ.cq[136] = carryout2carry(pablo_blk_Advance(tmp809, carryQ.get_carry_in(136), tmp810));
        tmp811 = simd_and(tmp810, bytetest_87_8a);
        struct_Cn.cc = simd_or(tmp811, struct_Cn.cc);
        bytetest_ed = simd_and(tmp99, tmp6);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_bc_bf = simd_and(tmp521, tmp4);
        tmp812 = simd_and(tmp810, bytetest_bc_bf);
        struct_Cn.cc = simd_or(tmp812, struct_Cn.cc);
        bytetest_ef = simd_and(tmp99, tmp25);
        bytetest_a9 = simd_and(tmp512, tmp144);
        bytetest_ae_af = simd_and(tmp512, tmp100);
        tmp813 = simd_and(tmp13, bytetest_ef);
        carryQ.cq[137] = carryout2carry(pablo_blk_Advance(tmp813, carryQ.get_carry_in(137), tmp814));
        tmp815 = simd_and(tmp814, bytetest_a9);
        carryQ.cq[138] = carryout2carry(pablo_blk_Advance(tmp815, carryQ.get_carry_in(138), tmp816));
        tmp817 = simd_and(tmp816, bytetest_ae_af);
        struct_Cn.cc = simd_or(tmp817, struct_Cn.cc);
        bytetest_ef = simd_and(tmp99, tmp25);
        bytetest_ab = simd_and(tmp512, tmp28);
        bytetest_9a_bf = simd_and(bytetest_80_bf, tmp621);
        tmp818 = simd_and(tmp814, bytetest_ab);
        carryQ.cq[139] = carryout2carry(pablo_blk_Advance(tmp818, carryQ.get_carry_in(139), tmp819));
        tmp820 = simd_and(tmp819, bytetest_9a_bf);
        struct_Cn.cc = simd_or(tmp820, struct_Cn.cc);
        bytetest_ef = simd_and(tmp99, tmp25);
        bytetest_ac = simd_and(tmp512, tmp81);
        tmp821 = simd_not(tmp777);
        tmp822 = simd_or(simd_and(basis_bits.bit_3, tmp821), simd_andc(tmp159, basis_bits.bit_3));
        bytetest_87_92 = simd_and(tmp604, tmp822);
        tmp823 = simd_and(tmp814, bytetest_ac);
        carryQ.cq[140] = carryout2carry(pablo_blk_Advance(tmp823, carryQ.get_carry_in(140), tmp824));
        tmp825 = simd_and(tmp824, bytetest_87_92);
        struct_Cn.cc = simd_or(tmp825, struct_Cn.cc);
        bytetest_ef = simd_and(tmp99, tmp25);
        bytetest_ac = simd_and(tmp512, tmp81);
        bytetest_98_9c = simd_andc(tmp728, tmp74);
        tmp826 = simd_and(tmp824, bytetest_98_9c);
        struct_Cn.cc = simd_or(tmp826, struct_Cn.cc);
        bytetest_ef = simd_and(tmp99, tmp25);
        bytetest_ac = simd_and(tmp512, tmp81);
        bytetest_b7_b7 = simd_and(tmp521, tmp67);
        tmp827 = simd_and(tmp824, bytetest_b7_b7);
        struct_Cn.cc = simd_or(tmp827, struct_Cn.cc);
        bytetest_ef = simd_and(tmp99, tmp25);
        bytetest_ac = simd_and(tmp512, tmp81);
        bytetest_bd_bd = simd_and(tmp521, tmp6);
        tmp828 = simd_and(tmp824, bytetest_bd_bd);
        struct_Cn.cc = simd_or(tmp828, struct_Cn.cc);
        bytetest_ef = simd_and(tmp99, tmp25);
        bytetest_ac = simd_and(tmp512, tmp81);
        bytetest_bf_bf = simd_and(tmp521, tmp25);
        tmp829 = simd_and(tmp824, bytetest_bf_bf);
        struct_Cn.cc = simd_or(tmp829, struct_Cn.cc);
        bytetest_ef = simd_and(tmp99, tmp25);
        bytetest_ad = simd_and(tmp512, tmp6);
        bytetest_82_82 = simd_and(bytetest_80_8f, tmp33);
        tmp830 = simd_and(tmp814, bytetest_ad);
        carryQ.cq[141] = carryout2carry(pablo_blk_Advance(tmp830, carryQ.get_carry_in(141), tmp831));
        tmp832 = simd_and(tmp831, bytetest_82_82);
        struct_Cn.cc = simd_or(tmp832, struct_Cn.cc);
        bytetest_ef = simd_and(tmp99, tmp25);
        bytetest_ad = simd_and(tmp512, tmp6);
        bytetest_85_85 = simd_and(bytetest_80_8f, tmp47);
        tmp833 = simd_and(tmp831, bytetest_85_85);
        struct_Cn.cc = simd_or(tmp833, struct_Cn.cc);
        bytetest_ef = simd_and(tmp99, tmp25);
        bytetest_af = simd_and(tmp512, tmp25);
        tmp834 = simd_or(simd_and(basis_bits.bit_3, tmp821), simd_andc(tmp240, basis_bits.bit_3));
        bytetest_82_92 = simd_and(tmp604, tmp834);
        tmp835 = simd_and(tmp814, bytetest_af);
        carryQ.cq[142] = carryout2carry(pablo_blk_Advance(tmp835, carryQ.get_carry_in(142), tmp836));
        tmp837 = simd_and(tmp836, bytetest_82_92);
        struct_Cn.cc = simd_or(tmp837, struct_Cn.cc);
        bytetest_ef = simd_and(tmp99, tmp25);
        bytetest_b5 = simd_and(tmp521, tmp47);
        bytetest_80_8f = simd_andc(bytetest_80_bf, tmp2);
        tmp838 = simd_and(tmp814, bytetest_b5);
        carryQ.cq[143] = carryout2carry(pablo_blk_Advance(tmp838, carryQ.get_carry_in(143), tmp839));
        tmp840 = simd_and(tmp839, bytetest_80_8f);
        struct_Cn.cc = simd_or(tmp840, struct_Cn.cc);
        bytetest_ef = simd_and(tmp99, tmp25);
        bytetest_b6 = simd_and(tmp521, tmp57);
        bytetest_90_91 = simd_andc(tmp549, tmp240);
        tmp841 = simd_and(tmp814, bytetest_b6);
        carryQ.cq[144] = carryout2carry(pablo_blk_Advance(tmp841, carryQ.get_carry_in(144), tmp842));
        tmp843 = simd_and(tmp842, bytetest_90_91);
        struct_Cn.cc = simd_or(tmp843, struct_Cn.cc);
        bytetest_ef = simd_and(tmp99, tmp25);
        bytetest_b7 = simd_and(tmp521, tmp67);
        tmp844 = simd_or(basis_bits.bit_3, basis_bits.bit_4);
        tmp845 = simd_or(simd_and(basis_bits.bit_2, tmp672), simd_andc(tmp844, basis_bits.bit_2));
        bytetest_88_af = simd_and(bytetest_80_bf, tmp845);
        tmp846 = simd_and(tmp814, bytetest_b7);
        carryQ.cq[145] = carryout2carry(pablo_blk_Advance(tmp846, carryQ.get_carry_in(145), tmp847));
        tmp848 = simd_and(tmp847, bytetest_88_af);
        struct_Cn.cc = simd_or(tmp848, struct_Cn.cc);
        bytetest_ef = simd_and(tmp99, tmp25);
        bytetest_b7 = simd_and(tmp521, tmp67);
        bytetest_be_bf = simd_and(tmp521, tmp100);
        tmp849 = simd_and(tmp847, bytetest_be_bf);
        struct_Cn.cc = simd_or(tmp849, struct_Cn.cc);
        bytetest_ef = simd_and(tmp99, tmp25);
        bytetest_b8 = simd_and(tmp521, tmp58);
        bytetest_9a_9f = simd_and(tmp728, tmp90);
        tmp850 = simd_and(tmp814, bytetest_b8);
        carryQ.cq[146] = carryout2carry(pablo_blk_Advance(tmp850, carryQ.get_carry_in(146), tmp851));
        tmp852 = simd_and(tmp851, bytetest_9a_9f);
        struct_Cn.cc = simd_or(tmp852, struct_Cn.cc);
        bytetest_ef = simd_and(tmp99, tmp25);
        bytetest_b8 = simd_and(tmp521, tmp58);
        bytetest_a7_af = simd_and(tmp512, tmp159);
        tmp853 = simd_and(tmp851, bytetest_a7_af);
        struct_Cn.cc = simd_or(tmp853, struct_Cn.cc);
        bytetest_ef = simd_and(tmp99, tmp25);
        bytetest_b9 = simd_and(tmp521, tmp144);
        bytetest_93_93 = simd_and(tmp549, tmp120);
        tmp854 = simd_and(tmp814, bytetest_b9);
        carryQ.cq[147] = carryout2carry(pablo_blk_Advance(tmp854, carryQ.get_carry_in(147), tmp855));
        tmp856 = simd_and(tmp855, bytetest_93_93);
        struct_Cn.cc = simd_or(tmp856, struct_Cn.cc);
        bytetest_ef = simd_and(tmp99, tmp25);
        bytetest_b9 = simd_and(tmp521, tmp144);
        bytetest_a7_a7 = simd_and(tmp512, tmp67);
        tmp857 = simd_and(tmp855, bytetest_a7_a7);
        struct_Cn.cc = simd_or(tmp857, struct_Cn.cc);
        bytetest_ef = simd_and(tmp99, tmp25);
        bytetest_b9 = simd_and(tmp521, tmp144);
        bytetest_ac_af = simd_and(tmp512, tmp4);
        tmp858 = simd_and(tmp855, bytetest_ac_af);
        struct_Cn.cc = simd_or(tmp858, struct_Cn.cc);
        bytetest_ef = simd_and(tmp99, tmp25);
        bytetest_b9 = simd_and(tmp521, tmp144);
        bytetest_b5_b5 = simd_and(tmp521, tmp47);
        tmp859 = simd_and(tmp855, bytetest_b5_b5);
        struct_Cn.cc = simd_or(tmp859, struct_Cn.cc);
        bytetest_ef = simd_and(tmp99, tmp25);
        bytetest_bb = simd_and(tmp521, tmp28);
        bytetest_bd_be = simd_and(bytetest_bc_bf, tmp140);
        tmp860 = simd_and(tmp814, bytetest_bb);
        carryQ.cq[148] = carryout2carry(pablo_blk_Advance(tmp860, carryQ.get_carry_in(148), tmp861));
        tmp862 = simd_and(tmp861, bytetest_bd_be);
        struct_Cn.cc = simd_or(tmp862, struct_Cn.cc);
        bytetest_ef = simd_and(tmp99, tmp25);
        bytetest_bc = simd_and(tmp521, tmp81);
        bytetest_80_80 = simd_andc(bytetest_80_8f, tmp41);
        tmp863 = simd_and(tmp814, bytetest_bc);
        carryQ.cq[149] = carryout2carry(pablo_blk_Advance(tmp863, carryQ.get_carry_in(149), tmp864));
        tmp865 = simd_and(tmp864, bytetest_80_80);
        struct_Cn.cc = simd_or(tmp865, struct_Cn.cc);
        bytetest_ef = simd_and(tmp99, tmp25);
        bytetest_bf = simd_and(tmp521, tmp25);
        bytetest_80_81 = simd_andc(bytetest_80_8f, tmp240);
        tmp866 = simd_and(tmp814, bytetest_bf);
        carryQ.cq[150] = carryout2carry(pablo_blk_Advance(tmp866, carryQ.get_carry_in(150), tmp867));
        tmp868 = simd_and(tmp867, bytetest_80_81);
        bytetest_be = simd_and(tmp521, tmp18);
        bytetest_bf_bf = simd_and(tmp521, tmp25);
        tmp869 = simd_and(tmp814, bytetest_be);
        carryQ.cq[151] = carryout2carry(pablo_blk_Advance(tmp869, carryQ.get_carry_in(151), tmp870));
        tmp871 = simd_and(tmp870, bytetest_bf_bf);
        tmp872 = simd_or(tmp871, tmp868);
        struct_Cn.cc = simd_or(tmp872, struct_Cn.cc);
        bytetest_ef = simd_and(tmp99, tmp25);
        bytetest_bf = simd_and(tmp521, tmp25);
        bytetest_88_89 = simd_and(bytetest_80_8f, tmp11);
        tmp873 = simd_and(tmp867, bytetest_88_89);
        struct_Cn.cc = simd_or(tmp873, struct_Cn.cc);
        bytetest_ef = simd_and(tmp99, tmp25);
        bytetest_bf = simd_and(tmp521, tmp25);
        bytetest_90_91 = simd_andc(tmp549, tmp240);
        tmp874 = simd_and(tmp867, bytetest_90_91);
        struct_Cn.cc = simd_or(tmp874, struct_Cn.cc);
        bytetest_ef = simd_and(tmp99, tmp25);
        bytetest_bf = simd_and(tmp521, tmp25);
        bytetest_98_99 = simd_and(tmp549, tmp11);
        tmp875 = simd_and(tmp867, bytetest_98_99);
        struct_Cn.cc = simd_or(tmp875, struct_Cn.cc);
        bytetest_ef = simd_and(tmp99, tmp25);
        bytetest_bf = simd_and(tmp521, tmp25);
        bytetest_9d_9f = simd_and(tmp584, tmp38);
        tmp876 = simd_and(tmp867, bytetest_9d_9f);
        struct_Cn.cc = simd_or(tmp876, struct_Cn.cc);
        bytetest_ef = simd_and(tmp99, tmp25);
        bytetest_bf = simd_and(tmp521, tmp25);
        bytetest_a7_a7 = simd_and(tmp512, tmp67);
        tmp877 = simd_and(tmp867, bytetest_a7_a7);
        struct_Cn.cc = simd_or(tmp877, struct_Cn.cc);
        bytetest_ef = simd_and(tmp99, tmp25);
        bytetest_bf = simd_and(tmp521, tmp25);
        tmp878 = simd_and(basis_bits.bit_4, tmp49);
        tmp879 = simd_not(tmp878);
        tmp880 = simd_or(simd_and(basis_bits.bit_3, tmp879), simd_andc(tmp25, basis_bits.bit_3));
        bytetest_af_b8 = simd_and(bytetest_a0_bf, tmp880);
        tmp881 = simd_and(tmp867, bytetest_af_b8);
        struct_Cn.cc = simd_or(tmp881, struct_Cn.cc);
        bytetest_ef = simd_and(tmp99, tmp25);
        bytetest_bf = simd_and(tmp521, tmp25);
        bytetest_be_bf = simd_and(tmp521, tmp100);
        tmp882 = simd_and(tmp867, bytetest_be_bf);
        struct_Cn.cc = simd_or(tmp882, struct_Cn.cc);
        tmp883 = simd_and(tmp1, tmp8);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_80 = simd_andc(bytetest_80_8f, tmp41);
        bytetest_8c_8c = simd_and(bytetest_80_8f, tmp81);
        tmp884 = simd_and(tmp13, bytetest_f0);
        carryQ.cq[152] = carryout2carry(pablo_blk_Advance(tmp884, carryQ.get_carry_in(152), tmp885));
        tmp886 = simd_and(tmp885, bytetest_90);
        carryQ.cq[153] = carryout2carry(pablo_blk_Advance(tmp886, carryQ.get_carry_in(153), tmp887));
        tmp888 = simd_and(tmp887, bytetest_80);
        carryQ.cq[154] = carryout2carry(pablo_blk_Advance(tmp888, carryQ.get_carry_in(154), tmp889));
        tmp890 = simd_and(tmp889, bytetest_8c_8c);
        struct_Cn.cc = simd_or(tmp890, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_80 = simd_andc(bytetest_80_8f, tmp41);
        bytetest_a7_a7 = simd_and(tmp512, tmp67);
        tmp891 = simd_and(tmp889, bytetest_a7_a7);
        struct_Cn.cc = simd_or(tmp891, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_80 = simd_andc(bytetest_80_8f, tmp41);
        bytetest_bb_bb = simd_and(tmp521, tmp28);
        tmp892 = simd_and(tmp889, bytetest_bb_bb);
        struct_Cn.cc = simd_or(tmp892, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_80 = simd_andc(bytetest_80_8f, tmp41);
        bytetest_be_be = simd_and(tmp521, tmp18);
        tmp893 = simd_and(tmp889, bytetest_be_be);
        struct_Cn.cc = simd_or(tmp893, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_81 = simd_and(bytetest_80_8f, tmp107);
        bytetest_8e_8f = simd_and(bytetest_80_8f, tmp100);
        tmp894 = simd_and(tmp887, bytetest_81);
        carryQ.cq[155] = carryout2carry(pablo_blk_Advance(tmp894, carryQ.get_carry_in(155), tmp895));
        tmp896 = simd_and(tmp895, bytetest_8e_8f);
        struct_Cn.cc = simd_or(tmp896, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_81 = simd_and(bytetest_80_8f, tmp107);
        tmp897 = simd_and(basis_bits.bit_3, tmp100);
        tmp898 = simd_or(basis_bits.bit_2, tmp897);
        bytetest_9e_bf = simd_and(bytetest_80_bf, tmp898);
        tmp899 = simd_and(tmp895, bytetest_9e_bf);
        struct_Cn.cc = simd_or(tmp899, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_83 = simd_and(bytetest_80_8f, tmp120);
        bytetest_bb_bf = simd_and(bytetest_b8_bf, tmp72);
        tmp900 = simd_and(tmp887, bytetest_83);
        carryQ.cq[156] = carryout2carry(pablo_blk_Advance(tmp900, carryQ.get_carry_in(156), tmp901));
        tmp902 = simd_and(tmp901, bytetest_bb_bf);
        struct_Cn.cc = simd_or(tmp902, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_84 = simd_and(bytetest_80_8f, tmp39);
        bytetest_83_86 = simd_and(tmp687, tmp64);
        tmp903 = simd_and(tmp887, bytetest_84);
        carryQ.cq[157] = carryout2carry(pablo_blk_Advance(tmp903, carryQ.get_carry_in(157), tmp904));
        tmp905 = simd_and(tmp904, bytetest_83_86);
        struct_Cn.cc = simd_or(tmp905, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_84 = simd_and(bytetest_80_8f, tmp39);
        tmp906 = simd_and(tmp521, tmp37);
        bytetest_b4_b6 = simd_andc(tmp906, tmp24);
        tmp907 = simd_and(tmp904, bytetest_b4_b6);
        struct_Cn.cc = simd_or(tmp907, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_86 = simd_and(bytetest_80_8f, tmp57);
        bytetest_8b_8f = simd_and(tmp593, tmp72);
        tmp908 = simd_and(tmp887, bytetest_86);
        carryQ.cq[158] = carryout2carry(pablo_blk_Advance(tmp908, carryQ.get_carry_in(158), tmp909));
        tmp910 = simd_and(tmp909, bytetest_8b_8f);
        struct_Cn.cc = simd_or(tmp910, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_87 = simd_and(bytetest_80_8f, tmp67);
        bytetest_80_8f = simd_andc(bytetest_80_bf, tmp2);
        tmp911 = simd_and(tmp887, bytetest_87);
        carryQ.cq[159] = carryout2carry(pablo_blk_Advance(tmp911, carryQ.get_carry_in(159), tmp912));
        tmp913 = simd_and(tmp912, bytetest_80_8f);
        bytetest_86 = simd_and(bytetest_80_8f, tmp57);
        bytetest_9c_bf = simd_and(bytetest_80_bf, tmp361);
        tmp914 = simd_and(tmp909, bytetest_9c_bf);
        tmp915 = simd_or(tmp914, tmp913);
        struct_Cn.cc = simd_or(tmp915, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_88_89 = simd_and(bytetest_80_8f, tmp11);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp916 = simd_and(tmp887, bytetest_88_89);
        carryQ.cq[160] = carryout2carry(pablo_blk_Advance(tmp916, carryQ.get_carry_in(160), tmp917));
        tmp918 = simd_and(tmp917, bytetest_80_bf);
        bytetest_87 = simd_and(bytetest_80_8f, tmp67);
        bytetest_be_bf = simd_and(tmp521, tmp100);
        tmp919 = simd_and(tmp912, bytetest_be_bf);
        tmp920 = simd_or(tmp919, tmp918);
        struct_Cn.cc = simd_or(tmp920, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_8a = simd_and(bytetest_80_8f, tmp197);
        bytetest_9d_9f = simd_and(tmp584, tmp38);
        tmp921 = simd_and(tmp887, bytetest_8a);
        carryQ.cq[161] = carryout2carry(pablo_blk_Advance(tmp921, carryQ.get_carry_in(161), tmp922));
        tmp923 = simd_and(tmp922, bytetest_9d_9f);
        struct_Cn.cc = simd_or(tmp923, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_8b = simd_and(bytetest_80_8f, tmp28);
        tmp924 = simd_and(basis_bits.bit_3, tmp41);
        tmp925 = simd_or(basis_bits.bit_2, tmp924);
        bytetest_91_bf = simd_and(bytetest_80_bf, tmp925);
        tmp926 = simd_and(tmp887, bytetest_8b);
        carryQ.cq[162] = carryout2carry(pablo_blk_Advance(tmp926, carryQ.get_carry_in(162), tmp927));
        tmp928 = simd_and(tmp927, bytetest_91_bf);
        struct_Cn.cc = simd_or(tmp928, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_8c = simd_and(bytetest_80_8f, tmp81);
        bytetest_9f_9f = simd_and(tmp549, tmp25);
        tmp929 = simd_and(tmp887, bytetest_8c);
        carryQ.cq[163] = carryout2carry(pablo_blk_Advance(tmp929, carryQ.get_carry_in(163), tmp930));
        tmp931 = simd_and(tmp930, bytetest_9f_9f);
        struct_Cn.cc = simd_or(tmp931, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_8c = simd_and(bytetest_80_8f, tmp81);
        bytetest_a4_af = simd_and(tmp512, tmp20);
        tmp932 = simd_and(tmp930, bytetest_a4_af);
        struct_Cn.cc = simd_or(tmp932, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_8d = simd_and(bytetest_80_8f, tmp6);
        tmp933 = simd_or(basis_bits.bit_2, tmp605);
        bytetest_8b_bf = simd_and(bytetest_80_bf, tmp933);
        tmp934 = simd_and(tmp887, bytetest_8d);
        carryQ.cq[164] = carryout2carry(pablo_blk_Advance(tmp934, carryQ.get_carry_in(164), tmp935));
        tmp936 = simd_and(tmp935, bytetest_8b_bf);
        struct_Cn.cc = simd_or(tmp936, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_8e = simd_and(bytetest_80_8f, tmp18);
        bytetest_9e_9e = simd_and(tmp549, tmp18);
        tmp937 = simd_and(tmp887, bytetest_8e);
        carryQ.cq[165] = carryout2carry(pablo_blk_Advance(tmp937, carryQ.get_carry_in(165), tmp938));
        tmp939 = simd_and(tmp938, bytetest_9e_9e);
        struct_Cn.cc = simd_or(tmp939, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_8f = simd_and(bytetest_80_8f, tmp25);
        bytetest_84_87 = simd_and(bytetest_80_8f, tmp37);
        tmp940 = simd_and(tmp887, bytetest_8f);
        carryQ.cq[166] = carryout2carry(pablo_blk_Advance(tmp940, carryQ.get_carry_in(166), tmp941));
        tmp942 = simd_and(tmp941, bytetest_84_87);
        struct_Cn.cc = simd_or(tmp942, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_8f = simd_and(bytetest_80_8f, tmp25);
        tmp943 = simd_or(basis_bits.bit_2, tmp673);
        bytetest_96_bf = simd_and(bytetest_80_bf, tmp943);
        tmp944 = simd_and(tmp941, bytetest_96_bf);
        struct_Cn.cc = simd_or(tmp944, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_92 = simd_and(tmp549, tmp33);
        bytetest_9e_9f = simd_and(tmp549, tmp100);
        tmp945 = simd_and(tmp887, bytetest_92);
        carryQ.cq[167] = carryout2carry(pablo_blk_Advance(tmp945, carryQ.get_carry_in(167), tmp946));
        tmp947 = simd_and(tmp946, bytetest_9e_9f);
        struct_Cn.cc = simd_or(tmp947, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_93_9f = simd_and(tmp549, tmp318);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp948 = simd_and(tmp887, bytetest_93_9f);
        carryQ.cq[168] = carryout2carry(pablo_blk_Advance(tmp948, carryQ.get_carry_in(168), tmp949));
        tmp950 = simd_and(tmp949, bytetest_80_bf);
        bytetest_92 = simd_and(tmp549, tmp33);
        tmp951 = simd_or(basis_bits.bit_3, tmp619);
        bytetest_aa_bf = simd_and(bytetest_a0_bf, tmp951);
        tmp952 = simd_and(tmp946, bytetest_aa_bf);
        tmp953 = simd_or(tmp952, tmp950);
        struct_Cn.cc = simd_or(tmp953, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_a0 = simd_andc(tmp512, tmp41);
        bytetest_86_87 = simd_and(bytetest_80_8f, tmp423);
        tmp954 = simd_and(tmp887, bytetest_a0);
        carryQ.cq[169] = carryout2carry(pablo_blk_Advance(tmp954, carryQ.get_carry_in(169), tmp955));
        tmp956 = simd_and(tmp955, bytetest_86_87);
        struct_Cn.cc = simd_or(tmp956, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_a0 = simd_andc(tmp512, tmp41);
        bytetest_89_89 = simd_and(bytetest_80_8f, tmp144);
        tmp957 = simd_and(tmp955, bytetest_89_89);
        struct_Cn.cc = simd_or(tmp957, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_a0 = simd_andc(tmp512, tmp41);
        bytetest_b6_b6 = simd_and(tmp521, tmp57);
        tmp958 = simd_and(tmp955, bytetest_b6_b6);
        struct_Cn.cc = simd_or(tmp958, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_a0 = simd_andc(tmp512, tmp41);
        bytetest_b9_bb = simd_and(tmp529, tmp38);
        tmp959 = simd_and(tmp955, bytetest_b9_bb);
        struct_Cn.cc = simd_or(tmp959, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_a0 = simd_andc(tmp512, tmp41);
        bytetest_bd_be = simd_and(bytetest_bc_bf, tmp140);
        tmp960 = simd_and(tmp955, bytetest_bd_be);
        struct_Cn.cc = simd_or(tmp960, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_a1 = simd_and(tmp512, tmp107);
        bytetest_96_96 = simd_and(tmp549, tmp57);
        tmp961 = simd_and(tmp887, bytetest_a1);
        carryQ.cq[170] = carryout2carry(pablo_blk_Advance(tmp961, carryQ.get_carry_in(170), tmp962));
        tmp963 = simd_and(tmp962, bytetest_96_96);
        struct_Cn.cc = simd_or(tmp963, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_a2_a3 = simd_and(tmp512, tmp579);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp964 = simd_and(tmp887, bytetest_a2_a3);
        carryQ.cq[171] = carryout2carry(pablo_blk_Advance(tmp964, carryQ.get_carry_in(171), tmp965));
        tmp966 = simd_and(tmp965, bytetest_80_bf);
        bytetest_a1 = simd_and(tmp512, tmp107);
        bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp967 = simd_and(tmp962, bytetest_a0_bf);
        tmp968 = simd_or(tmp967, tmp966);
        struct_Cn.cc = simd_or(tmp968, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_a4 = simd_and(tmp512, tmp39);
        bytetest_9c_9e = simd_andc(tmp584, tmp24);
        tmp969 = simd_and(tmp887, bytetest_a4);
        carryQ.cq[172] = carryout2carry(pablo_blk_Advance(tmp969, carryQ.get_carry_in(172), tmp970));
        tmp971 = simd_and(tmp970, bytetest_9c_9e);
        struct_Cn.cc = simd_or(tmp971, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_a4 = simd_and(tmp512, tmp39);
        tmp972 = simd_or(simd_and(basis_bits.bit_5, tmp63), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        bytetest_ba_be = simd_and(bytetest_b8_bf, tmp972);
        tmp973 = simd_and(tmp970, bytetest_ba_be);
        struct_Cn.cc = simd_or(tmp973, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_a5 = simd_and(tmp512, tmp47);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp974 = simd_and(tmp887, bytetest_a5);
        carryQ.cq[173] = carryout2carry(pablo_blk_Advance(tmp974, carryQ.get_carry_in(173), tmp975));
        tmp976 = simd_and(tmp975, bytetest_80_bf);
        struct_Cn.cc = simd_or(tmp976, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_a6 = simd_and(tmp512, tmp57);
        bytetest_b8_bd = simd_andc(bytetest_b8_bf, tmp191);
        tmp977 = simd_and(tmp887, bytetest_a6);
        carryQ.cq[174] = carryout2carry(pablo_blk_Advance(tmp977, carryQ.get_carry_in(174), tmp978));
        tmp979 = simd_and(tmp978, bytetest_b8_bd);
        struct_Cn.cc = simd_or(tmp979, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_a7 = simd_and(tmp512, tmp67);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp980 = simd_and(tmp887, bytetest_a7);
        carryQ.cq[175] = carryout2carry(pablo_blk_Advance(tmp980, carryQ.get_carry_in(175), tmp981));
        tmp982 = simd_and(tmp981, bytetest_80_bf);
        struct_Cn.cc = simd_or(tmp982, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_a8 = simd_and(tmp512, tmp58);
        bytetest_84_84 = simd_and(bytetest_80_8f, tmp39);
        tmp983 = simd_and(tmp887, bytetest_a8);
        carryQ.cq[176] = carryout2carry(pablo_blk_Advance(tmp983, carryQ.get_carry_in(176), tmp984));
        tmp985 = simd_and(tmp984, bytetest_84_84);
        struct_Cn.cc = simd_or(tmp985, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_a8 = simd_and(tmp512, tmp58);
        tmp986 = simd_or(simd_and(basis_bits.bit_4, tmp524), simd_andc(tmp51, basis_bits.bit_4));
        bytetest_87_8b = simd_and(bytetest_80_8f, tmp986);
        tmp987 = simd_and(tmp984, bytetest_87_8b);
        struct_Cn.cc = simd_or(tmp987, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_a8 = simd_and(tmp512, tmp58);
        bytetest_94_94 = simd_and(tmp549, tmp39);
        tmp988 = simd_and(tmp984, bytetest_94_94);
        struct_Cn.cc = simd_or(tmp988, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_a8 = simd_and(tmp512, tmp58);
        bytetest_98_98 = simd_and(tmp549, tmp58);
        tmp989 = simd_and(tmp984, bytetest_98_98);
        struct_Cn.cc = simd_or(tmp989, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_a8 = simd_and(tmp512, tmp58);
        bytetest_b4_b7 = simd_and(tmp521, tmp37);
        tmp990 = simd_and(tmp984, bytetest_b4_b7);
        struct_Cn.cc = simd_or(tmp990, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_a8 = simd_and(tmp512, tmp58);
        bytetest_bb_be = simd_and(bytetest_b8_bf, tmp64);
        tmp991 = simd_and(tmp984, bytetest_bb_be);
        struct_Cn.cc = simd_or(tmp991, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_a9 = simd_and(tmp512, tmp144);
        bytetest_88_8f = simd_and(bytetest_80_8f, basis_bits.bit_4);
        tmp992 = simd_and(tmp887, bytetest_a9);
        carryQ.cq[177] = carryout2carry(pablo_blk_Advance(tmp992, carryQ.get_carry_in(177), tmp993));
        tmp994 = simd_and(tmp993, bytetest_88_8f);
        struct_Cn.cc = simd_or(tmp994, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_a9 = simd_and(tmp512, tmp144);
        bytetest_99_9f = simd_and(tmp728, tmp49);
        tmp995 = simd_and(tmp993, bytetest_99_9f);
        struct_Cn.cc = simd_or(tmp995, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_aa_ab = simd_and(tmp512, tmp151);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp996 = simd_and(tmp887, bytetest_aa_ab);
        carryQ.cq[178] = carryout2carry(pablo_blk_Advance(tmp996, carryQ.get_carry_in(178), tmp997));
        tmp998 = simd_and(tmp997, bytetest_80_bf);
        struct_Cn.cc = simd_or(tmp998, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_ac = simd_and(tmp512, tmp81);
        bytetest_b6_b8 = simd_and(tmp521, tmp249);
        tmp999 = simd_and(tmp887, bytetest_ac);
        carryQ.cq[179] = carryout2carry(pablo_blk_Advance(tmp999, carryQ.get_carry_in(179), tmp1000));
        tmp1001 = simd_and(tmp1000, bytetest_b6_b8);
        struct_Cn.cc = simd_or(tmp1001, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_ad = simd_and(tmp512, tmp6);
        bytetest_96_97 = simd_and(tmp549, tmp423);
        tmp1002 = simd_and(tmp887, bytetest_ad);
        carryQ.cq[180] = carryout2carry(pablo_blk_Advance(tmp1002, carryQ.get_carry_in(180), tmp1003));
        tmp1004 = simd_and(tmp1003, bytetest_96_97);
        struct_Cn.cc = simd_or(tmp1004, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_ad = simd_and(tmp512, tmp6);
        tmp1005 = simd_andc(tmp521, basis_bits.bit_4);
        bytetest_b3_b7 = simd_and(tmp1005, tmp72);
        tmp1006 = simd_and(tmp1003, bytetest_b3_b7);
        struct_Cn.cc = simd_or(tmp1006, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_ae_af = simd_and(tmp512, tmp100);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1007 = simd_and(tmp887, bytetest_ae_af);
        carryQ.cq[181] = carryout2carry(pablo_blk_Advance(tmp1007, carryQ.get_carry_in(181), tmp1008));
        tmp1009 = simd_and(tmp1008, bytetest_80_bf);
        struct_Cn.cc = simd_or(tmp1009, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_b9 = simd_and(tmp521, tmp144);
        bytetest_80_9f = simd_andc(bytetest_80_bf, basis_bits.bit_2);
        tmp1010 = simd_and(tmp887, bytetest_b9);
        carryQ.cq[182] = carryout2carry(pablo_blk_Advance(tmp1010, carryQ.get_carry_in(182), tmp1011));
        tmp1012 = simd_and(tmp1011, bytetest_80_9f);
        bytetest_b2_b8 = simd_and(tmp521, tmp188);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1013 = simd_and(tmp887, bytetest_b2_b8);
        carryQ.cq[183] = carryout2carry(pablo_blk_Advance(tmp1013, carryQ.get_carry_in(183), tmp1014));
        tmp1015 = simd_and(tmp1014, bytetest_80_bf);
        bytetest_b1 = simd_and(tmp521, tmp107);
        tmp1016 = simd_or(basis_bits.bit_3, tmp878);
        tmp1017 = simd_or(basis_bits.bit_2, tmp1016);
        bytetest_89_bf = simd_and(bytetest_80_bf, tmp1017);
        tmp1018 = simd_and(tmp887, bytetest_b1);
        carryQ.cq[184] = carryout2carry(pablo_blk_Advance(tmp1018, carryQ.get_carry_in(184), tmp1019));
        tmp1020 = simd_and(tmp1019, bytetest_89_bf);
        tmp1021 = simd_or(tmp1020, tmp1015);
        tmp1022 = simd_or(tmp1021, tmp1012);
        struct_Cn.cc = simd_or(tmp1022, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_ba_bf = simd_and(bytetest_b8_bf, tmp90);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1023 = simd_and(tmp887, bytetest_ba_bf);
        carryQ.cq[185] = carryout2carry(pablo_blk_Advance(tmp1023, carryQ.get_carry_in(185), tmp1024));
        tmp1025 = simd_and(tmp1024, bytetest_80_bf);
        bytetest_b9 = simd_and(tmp521, tmp144);
        bytetest_bf_bf = simd_and(tmp521, tmp25);
        tmp1026 = simd_and(tmp1011, bytetest_bf_bf);
        tmp1027 = simd_or(tmp1026, tmp1025);
        struct_Cn.cc = simd_or(tmp1027, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_91 = simd_and(tmp549, tmp107);
        bytetest_81 = simd_and(bytetest_80_8f, tmp107);
        tmp1028 = simd_not(tmp240);
        tmp1029 = simd_or(simd_and(basis_bits.bit_3, tmp1028), simd_andc(tmp100, basis_bits.bit_3));
        bytetest_8e_91 = simd_and(bytetest_80_9f, tmp1029);
        tmp1030 = simd_and(tmp885, bytetest_91);
        carryQ.cq[186] = carryout2carry(pablo_blk_Advance(tmp1030, carryQ.get_carry_in(186), tmp1031));
        tmp1032 = simd_and(tmp1031, bytetest_81);
        carryQ.cq[187] = carryout2carry(pablo_blk_Advance(tmp1032, carryQ.get_carry_in(187), tmp1033));
        tmp1034 = simd_and(tmp1033, bytetest_8e_91);
        struct_Cn.cc = simd_or(tmp1034, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_91 = simd_and(tmp549, tmp107);
        bytetest_81 = simd_and(bytetest_80_8f, tmp107);
        bytetest_b0_bf = simd_and(bytetest_80_bf, tmp8);
        tmp1035 = simd_and(tmp1033, bytetest_b0_bf);
        struct_Cn.cc = simd_or(tmp1035, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_91 = simd_and(tmp549, tmp107);
        bytetest_83 = simd_and(bytetest_80_8f, tmp120);
        bytetest_82_8f = simd_and(bytetest_80_8f, tmp91);
        tmp1036 = simd_and(tmp1031, bytetest_83);
        carryQ.cq[188] = carryout2carry(pablo_blk_Advance(tmp1036, carryQ.get_carry_in(188), tmp1037));
        tmp1038 = simd_and(tmp1037, bytetest_82_8f);
        struct_Cn.cc = simd_or(tmp1038, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_91 = simd_and(tmp549, tmp107);
        bytetest_83 = simd_and(bytetest_80_8f, tmp120);
        bytetest_a9_af = simd_and(tmp637, tmp49);
        tmp1039 = simd_and(tmp1037, bytetest_a9_af);
        struct_Cn.cc = simd_or(tmp1039, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_91 = simd_and(tmp549, tmp107);
        bytetest_83 = simd_and(bytetest_80_8f, tmp120);
        tmp1040 = simd_and(bytetest_b0_bf, basis_bits.bit_4);
        bytetest_ba_bf = simd_and(tmp1040, tmp90);
        tmp1041 = simd_and(tmp1037, bytetest_ba_bf);
        struct_Cn.cc = simd_or(tmp1041, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_91 = simd_and(tmp549, tmp107);
        bytetest_84 = simd_and(bytetest_80_8f, tmp39);
        bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp47);
        tmp1042 = simd_and(tmp1031, bytetest_84);
        carryQ.cq[189] = carryout2carry(pablo_blk_Advance(tmp1042, carryQ.get_carry_in(189), tmp1043));
        tmp1044 = simd_and(tmp1043, bytetest_b5_b5);
        struct_Cn.cc = simd_or(tmp1044, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_91 = simd_and(tmp549, tmp107);
        bytetest_85 = simd_and(bytetest_80_8f, tmp47);
        tmp1045 = simd_or(basis_bits.bit_2, tmp121);
        bytetest_84_bf = simd_and(bytetest_80_bf, tmp1045);
        tmp1046 = simd_and(tmp1031, bytetest_85);
        carryQ.cq[190] = carryout2carry(pablo_blk_Advance(tmp1046, carryQ.get_carry_in(190), tmp1047));
        tmp1048 = simd_and(tmp1047, bytetest_84_bf);
        struct_Cn.cc = simd_or(tmp1048, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_91 = simd_and(tmp549, tmp107);
        bytetest_87 = simd_and(bytetest_80_8f, tmp67);
        bytetest_89_8f = simd_and(bytetest_88_8f, tmp49);
        tmp1049 = simd_and(tmp1031, bytetest_87);
        carryQ.cq[191] = carryout2carry(pablo_blk_Advance(tmp1049, carryQ.get_carry_in(191), tmp1050));
        tmp1051 = simd_and(tmp1050, bytetest_89_8f);
        struct_Cn.cc = simd_or(tmp1051, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_91 = simd_and(tmp549, tmp107);
        tmp1052 = simd_not(tmp619);
        tmp1053 = simd_or(simd_and(basis_bits.bit_3, tmp1052), simd_andc(basis_bits.bit_4, basis_bits.bit_3));
        bytetest_88_99 = simd_and(bytetest_80_9f, tmp1053);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1054 = simd_and(tmp1031, bytetest_88_99);
        carryQ.cq[192] = carryout2carry(pablo_blk_Advance(tmp1054, carryQ.get_carry_in(192), tmp1055));
        tmp1056 = simd_and(tmp1055, bytetest_80_bf);
        bytetest_87 = simd_and(bytetest_80_8f, tmp67);
        bytetest_9a_bf = simd_and(bytetest_80_bf, tmp621);
        tmp1057 = simd_and(tmp1050, bytetest_9a_bf);
        tmp1058 = simd_or(tmp1057, tmp1056);
        struct_Cn.cc = simd_or(tmp1058, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_91 = simd_and(tmp549, tmp107);
        bytetest_9a = simd_and(tmp549, tmp197);
        bytetest_b8_bf = simd_and(bytetest_b0_bf, basis_bits.bit_4);
        tmp1059 = simd_and(tmp1031, bytetest_9a);
        carryQ.cq[193] = carryout2carry(pablo_blk_Advance(tmp1059, carryQ.get_carry_in(193), tmp1060));
        tmp1061 = simd_and(tmp1060, bytetest_b8_bf);
        struct_Cn.cc = simd_or(tmp1061, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_91 = simd_and(tmp549, tmp107);
        bytetest_9c_bf = simd_and(bytetest_80_bf, tmp361);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1062 = simd_and(tmp1031, bytetest_9c_bf);
        carryQ.cq[194] = carryout2carry(pablo_blk_Advance(tmp1062, carryQ.get_carry_in(194), tmp1063));
        tmp1064 = simd_and(tmp1063, bytetest_80_bf);
        bytetest_9b = simd_and(tmp549, tmp28);
        tmp1065 = simd_or(basis_bits.bit_2, tmp951);
        bytetest_8a_bf = simd_and(bytetest_80_bf, tmp1065);
        tmp1066 = simd_and(tmp1031, bytetest_9b);
        carryQ.cq[195] = carryout2carry(pablo_blk_Advance(tmp1066, carryQ.get_carry_in(195), tmp1067));
        tmp1068 = simd_and(tmp1067, bytetest_8a_bf);
        tmp1069 = simd_or(tmp1068, tmp1064);
        struct_Cn.cc = simd_or(tmp1069, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_92 = simd_and(tmp549, tmp33);
        bytetest_8e_8f = simd_and(bytetest_80_8f, tmp100);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1070 = simd_and(tmp885, bytetest_92);
        carryQ.cq[196] = carryout2carry(pablo_blk_Advance(tmp1070, carryQ.get_carry_in(196), tmp1071));
        tmp1072 = simd_and(tmp1071, bytetest_8e_8f);
        carryQ.cq[197] = carryout2carry(pablo_blk_Advance(tmp1072, carryQ.get_carry_in(197), tmp1073));
        tmp1074 = simd_and(tmp1073, bytetest_80_bf);
        bytetest_8d = simd_and(bytetest_80_8f, tmp6);
        bytetest_af_bf = simd_and(bytetest_a0_bf, tmp795);
        tmp1075 = simd_and(tmp1071, bytetest_8d);
        carryQ.cq[198] = carryout2carry(pablo_blk_Advance(tmp1075, carryQ.get_carry_in(198), tmp1076));
        tmp1077 = simd_and(tmp1076, bytetest_af_bf);
        tmp1078 = simd_or(tmp1077, tmp1074);
        struct_Cn.cc = simd_or(tmp1078, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_92 = simd_and(tmp549, tmp33);
        bytetest_91 = simd_and(tmp549, tmp107);
        bytetest_a3_af = simd_and(tmp512, tmp318);
        tmp1079 = simd_and(tmp1071, bytetest_91);
        carryQ.cq[199] = carryout2carry(pablo_blk_Advance(tmp1079, carryQ.get_carry_in(199), tmp1080));
        tmp1081 = simd_and(tmp1080, bytetest_a3_af);
        struct_Cn.cc = simd_or(tmp1081, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_92 = simd_and(tmp549, tmp33);
        tmp1082 = simd_or(basis_bits.bit_2, tmp349);
        bytetest_92_bf = simd_and(bytetest_80_bf, tmp1082);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1083 = simd_and(tmp1071, bytetest_92_bf);
        carryQ.cq[200] = carryout2carry(pablo_blk_Advance(tmp1083, carryQ.get_carry_in(200), tmp1084));
        tmp1085 = simd_and(tmp1084, bytetest_80_bf);
        bytetest_91 = simd_and(tmp549, tmp107);
        bytetest_b4_bf = simd_and(bytetest_b0_bf, tmp20);
        tmp1086 = simd_and(tmp1080, bytetest_b4_bf);
        tmp1087 = simd_or(tmp1086, tmp1085);
        struct_Cn.cc = simd_or(tmp1087, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_96 = simd_and(tmp549, tmp57);
        bytetest_80_9f = simd_andc(bytetest_80_bf, basis_bits.bit_2);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1088 = simd_and(tmp885, bytetest_96);
        carryQ.cq[201] = carryout2carry(pablo_blk_Advance(tmp1088, carryQ.get_carry_in(201), tmp1089));
        tmp1090 = simd_and(tmp1089, bytetest_80_9f);
        carryQ.cq[202] = carryout2carry(pablo_blk_Advance(tmp1090, carryQ.get_carry_in(202), tmp1091));
        tmp1092 = simd_and(tmp1091, bytetest_80_bf);
        bytetest_94_95 = simd_and(tmp549, tmp165);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1093 = simd_and(tmp885, bytetest_94_95);
        carryQ.cq[203] = carryout2carry(pablo_blk_Advance(tmp1093, carryQ.get_carry_in(203), tmp1094));
        tmp1095 = simd_and(tmp1094, bytetest_80_bf);
        carryQ.cq[204] = carryout2carry(pablo_blk_Advance(tmp1095, carryQ.get_carry_in(204), tmp1096));
        tmp1097 = simd_and(tmp1096, bytetest_80_bf);
        bytetest_93 = simd_and(tmp549, tmp120);
        bytetest_91_bf = simd_and(bytetest_80_bf, tmp925);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1098 = simd_and(tmp885, bytetest_93);
        carryQ.cq[205] = carryout2carry(pablo_blk_Advance(tmp1098, carryQ.get_carry_in(205), tmp1099));
        tmp1100 = simd_and(tmp1099, bytetest_91_bf);
        carryQ.cq[206] = carryout2carry(pablo_blk_Advance(tmp1100, carryQ.get_carry_in(206), tmp1101));
        tmp1102 = simd_and(tmp1101, bytetest_80_bf);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_af_bf = simd_and(bytetest_a0_bf, tmp795);
        tmp1103 = simd_and(tmp1099, bytetest_90);
        carryQ.cq[207] = carryout2carry(pablo_blk_Advance(tmp1103, carryQ.get_carry_in(207), tmp1104));
        tmp1105 = simd_and(tmp1104, bytetest_af_bf);
        tmp1106 = simd_or(tmp1105, tmp1102);
        tmp1107 = simd_or(tmp1106, tmp1097);
        tmp1108 = simd_or(tmp1107, tmp1092);
        struct_Cn.cc = simd_or(tmp1108, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_96 = simd_and(tmp549, tmp57);
        tmp1109 = simd_or(simd_and(basis_bits.bit_3, tmp544), simd_andc(tmp878, basis_bits.bit_3));
        bytetest_a9_bb = simd_and(bytetest_a0_bf, tmp1109);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1110 = simd_and(tmp1089, bytetest_a9_bb);
        carryQ.cq[208] = carryout2carry(pablo_blk_Advance(tmp1110, carryQ.get_carry_in(208), tmp1111));
        tmp1112 = simd_and(tmp1111, bytetest_80_bf);
        bytetest_a8 = simd_and(tmp512, tmp58);
        bytetest_b9_bf = simd_and(bytetest_b8_bf, tmp49);
        tmp1113 = simd_and(tmp1089, bytetest_a8);
        carryQ.cq[209] = carryout2carry(pablo_blk_Advance(tmp1113, carryQ.get_carry_in(209), tmp1114));
        tmp1115 = simd_and(tmp1114, bytetest_b9_bf);
        tmp1116 = simd_or(tmp1115, tmp1112);
        struct_Cn.cc = simd_or(tmp1116, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_96 = simd_and(tmp549, tmp57);
        bytetest_bd = simd_and(bytetest_b0_bf, tmp6);
        bytetest_85_8f = simd_and(bytetest_80_8f, tmp75);
        tmp1117 = simd_and(tmp1089, bytetest_bd);
        carryQ.cq[210] = carryout2carry(pablo_blk_Advance(tmp1117, carryQ.get_carry_in(210), tmp1118));
        tmp1119 = simd_and(tmp1118, bytetest_85_8f);
        struct_Cn.cc = simd_or(tmp1119, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_96 = simd_and(tmp549, tmp57);
        bytetest_be = simd_and(bytetest_b0_bf, tmp18);
        tmp1120 = simd_and(basis_bits.bit_4, tmp51);
        bytetest_80_8e = simd_andc(bytetest_80_8f, tmp1120);
        tmp1121 = simd_and(tmp1089, bytetest_be);
        carryQ.cq[211] = carryout2carry(pablo_blk_Advance(tmp1121, carryQ.get_carry_in(211), tmp1122));
        tmp1123 = simd_and(tmp1122, bytetest_80_8e);
        bytetest_bd = simd_and(bytetest_b0_bf, tmp6);
        bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp25);
        tmp1124 = simd_and(tmp1118, bytetest_bf_bf);
        tmp1125 = simd_or(tmp1124, tmp1123);
        struct_Cn.cc = simd_or(tmp1125, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_97_9a = simd_and(tmp549, tmp808);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1126 = simd_and(tmp885, bytetest_97_9a);
        carryQ.cq[212] = carryout2carry(pablo_blk_Advance(tmp1126, carryQ.get_carry_in(212), tmp1127));
        tmp1128 = simd_and(tmp1127, bytetest_80_bf);
        carryQ.cq[213] = carryout2carry(pablo_blk_Advance(tmp1128, carryQ.get_carry_in(213), tmp1129));
        tmp1130 = simd_and(tmp1129, bytetest_80_bf);
        bytetest_96 = simd_and(tmp549, tmp57);
        bytetest_bf = simd_and(bytetest_b0_bf, tmp25);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1131 = simd_and(tmp1089, bytetest_bf);
        carryQ.cq[214] = carryout2carry(pablo_blk_Advance(tmp1131, carryQ.get_carry_in(214), tmp1132));
        tmp1133 = simd_and(tmp1132, bytetest_80_bf);
        bytetest_be = simd_and(bytetest_b0_bf, tmp18);
        bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp1134 = simd_and(tmp1122, bytetest_a0_bf);
        tmp1135 = simd_or(tmp1134, tmp1133);
        tmp1136 = simd_or(tmp1135, tmp1130);
        struct_Cn.cc = simd_or(tmp1136, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9c = simd_and(tmp549, tmp81);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1137 = simd_and(tmp885, bytetest_9c);
        carryQ.cq[215] = carryout2carry(pablo_blk_Advance(tmp1137, carryQ.get_carry_in(215), tmp1138));
        tmp1139 = simd_and(tmp1138, bytetest_80_bf);
        carryQ.cq[216] = carryout2carry(pablo_blk_Advance(tmp1139, carryQ.get_carry_in(216), tmp1140));
        tmp1141 = simd_and(tmp1140, bytetest_80_bf);
        bytetest_9b = simd_and(tmp549, tmp28);
        tmp1142 = simd_or(basis_bits.bit_3, tmp41);
        tmp1143 = simd_or(basis_bits.bit_2, tmp1142);
        bytetest_81_bf = simd_and(bytetest_80_bf, tmp1143);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1144 = simd_and(tmp885, bytetest_9b);
        carryQ.cq[217] = carryout2carry(pablo_blk_Advance(tmp1144, carryQ.get_carry_in(217), tmp1145));
        tmp1146 = simd_and(tmp1145, bytetest_81_bf);
        carryQ.cq[218] = carryout2carry(pablo_blk_Advance(tmp1146, carryQ.get_carry_in(218), tmp1147));
        tmp1148 = simd_and(tmp1147, bytetest_80_bf);
        bytetest_80 = simd_andc(bytetest_80_8f, tmp41);
        tmp1149 = simd_or(basis_bits.bit_3, tmp240);
        tmp1150 = simd_or(basis_bits.bit_2, tmp1149);
        bytetest_82_bf = simd_and(bytetest_80_bf, tmp1150);
        tmp1151 = simd_and(tmp1145, bytetest_80);
        carryQ.cq[219] = carryout2carry(pablo_blk_Advance(tmp1151, carryQ.get_carry_in(219), tmp1152));
        tmp1153 = simd_and(tmp1152, bytetest_82_bf);
        tmp1154 = simd_or(tmp1153, tmp1148);
        tmp1155 = simd_or(tmp1154, tmp1141);
        struct_Cn.cc = simd_or(tmp1155, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9d = simd_and(tmp549, tmp6);
        bytetest_83 = simd_and(bytetest_80_8f, tmp120);
        bytetest_b6_bf = simd_and(bytetest_b0_bf, tmp192);
        tmp1156 = simd_and(tmp885, bytetest_9d);
        carryQ.cq[220] = carryout2carry(pablo_blk_Advance(tmp1156, carryQ.get_carry_in(220), tmp1157));
        tmp1158 = simd_and(tmp1157, bytetest_83);
        carryQ.cq[221] = carryout2carry(pablo_blk_Advance(tmp1158, carryQ.get_carry_in(221), tmp1159));
        tmp1160 = simd_and(tmp1159, bytetest_b6_bf);
        struct_Cn.cc = simd_or(tmp1160, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9d = simd_and(tmp549, tmp6);
        bytetest_84 = simd_and(bytetest_80_8f, tmp39);
        bytetest_a7_a8 = simd_and(tmp512, tmp52);
        tmp1161 = simd_and(tmp1157, bytetest_84);
        carryQ.cq[222] = carryout2carry(pablo_blk_Advance(tmp1161, carryQ.get_carry_in(222), tmp1162));
        tmp1163 = simd_and(tmp1162, bytetest_a7_a8);
        struct_Cn.cc = simd_or(tmp1163, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9d = simd_and(tmp549, tmp6);
        bytetest_87 = simd_and(bytetest_80_8f, tmp67);
        bytetest_9e_bf = simd_and(bytetest_80_bf, tmp898);
        tmp1164 = simd_and(tmp1157, bytetest_87);
        carryQ.cq[223] = carryout2carry(pablo_blk_Advance(tmp1164, carryQ.get_carry_in(223), tmp1165));
        tmp1166 = simd_and(tmp1165, bytetest_9e_bf);
        struct_Cn.cc = simd_or(tmp1166, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9d = simd_and(tmp549, tmp6);
        bytetest_8a_8b = simd_and(bytetest_80_8f, tmp151);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1167 = simd_and(tmp1157, bytetest_8a_8b);
        carryQ.cq[224] = carryout2carry(pablo_blk_Advance(tmp1167, carryQ.get_carry_in(224), tmp1168));
        tmp1169 = simd_and(tmp1168, bytetest_80_bf);
        bytetest_89 = simd_and(bytetest_80_8f, tmp144);
        tmp1170 = simd_or(basis_bits.bit_2, tmp193);
        bytetest_86_bf = simd_and(bytetest_80_bf, tmp1170);
        tmp1171 = simd_and(tmp1157, bytetest_89);
        carryQ.cq[225] = carryout2carry(pablo_blk_Advance(tmp1171, carryQ.get_carry_in(225), tmp1172));
        tmp1173 = simd_and(tmp1172, bytetest_86_bf);
        tmp1174 = simd_or(tmp1173, tmp1169);
        struct_Cn.cc = simd_or(tmp1174, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9d = simd_and(tmp549, tmp6);
        bytetest_8d = simd_and(bytetest_80_8f, tmp6);
        bytetest_97_9f = simd_and(tmp549, tmp159);
        tmp1175 = simd_and(tmp1157, bytetest_8d);
        carryQ.cq[226] = carryout2carry(pablo_blk_Advance(tmp1175, carryQ.get_carry_in(226), tmp1176));
        tmp1177 = simd_and(tmp1176, bytetest_97_9f);
        struct_Cn.cc = simd_or(tmp1177, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9d = simd_and(tmp549, tmp6);
        bytetest_8e_8f = simd_and(bytetest_80_8f, tmp100);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1178 = simd_and(tmp1157, bytetest_8e_8f);
        carryQ.cq[227] = carryout2carry(pablo_blk_Advance(tmp1178, carryQ.get_carry_in(227), tmp1179));
        tmp1180 = simd_and(tmp1179, bytetest_80_bf);
        bytetest_8d = simd_and(bytetest_80_8f, tmp6);
        bytetest_b2_bf = simd_and(bytetest_b0_bf, tmp91);
        tmp1181 = simd_and(tmp1176, bytetest_b2_bf);
        tmp1182 = simd_or(tmp1181, tmp1180);
        struct_Cn.cc = simd_or(tmp1182, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9d = simd_and(tmp549, tmp6);
        bytetest_91 = simd_and(tmp549, tmp107);
        bytetest_95_95 = simd_and(tmp549, tmp47);
        tmp1183 = simd_and(tmp1157, bytetest_91);
        carryQ.cq[228] = carryout2carry(pablo_blk_Advance(tmp1183, carryQ.get_carry_in(228), tmp1184));
        tmp1185 = simd_and(tmp1184, bytetest_95_95);
        struct_Cn.cc = simd_or(tmp1185, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9d = simd_and(tmp549, tmp6);
        bytetest_92 = simd_and(tmp549, tmp33);
        bytetest_9d_9d = simd_and(tmp549, tmp6);
        tmp1186 = simd_and(tmp1157, bytetest_92);
        carryQ.cq[229] = carryout2carry(pablo_blk_Advance(tmp1186, carryQ.get_carry_in(229), tmp1187));
        tmp1188 = simd_and(tmp1187, bytetest_9d_9d);
        struct_Cn.cc = simd_or(tmp1188, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9d = simd_and(tmp549, tmp6);
        bytetest_92 = simd_and(tmp549, tmp33);
        bytetest_a0_a1 = simd_andc(tmp512, tmp240);
        tmp1189 = simd_and(tmp1187, bytetest_a0_a1);
        struct_Cn.cc = simd_or(tmp1189, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9d = simd_and(tmp549, tmp6);
        bytetest_92 = simd_and(tmp549, tmp33);
        tmp1190 = simd_andc(tmp512, basis_bits.bit_4);
        bytetest_a3_a4 = simd_and(tmp1190, tmp86);
        tmp1191 = simd_and(tmp1187, bytetest_a3_a4);
        struct_Cn.cc = simd_or(tmp1191, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9d = simd_and(tmp549, tmp6);
        bytetest_92 = simd_and(tmp549, tmp33);
        bytetest_a7_a8 = simd_and(tmp512, tmp52);
        tmp1192 = simd_and(tmp1187, bytetest_a7_a8);
        struct_Cn.cc = simd_or(tmp1192, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9d = simd_and(tmp549, tmp6);
        bytetest_92 = simd_and(tmp549, tmp33);
        bytetest_ad_ad = simd_and(tmp512, tmp6);
        tmp1193 = simd_and(tmp1187, bytetest_ad_ad);
        struct_Cn.cc = simd_or(tmp1193, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9d = simd_and(tmp549, tmp6);
        bytetest_92 = simd_and(tmp549, tmp33);
        bytetest_ba_ba = simd_and(bytetest_b0_bf, tmp197);
        tmp1194 = simd_and(tmp1187, bytetest_ba_ba);
        struct_Cn.cc = simd_or(tmp1194, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9d = simd_and(tmp549, tmp6);
        bytetest_92 = simd_and(tmp549, tmp33);
        bytetest_bc_bc = simd_and(bytetest_b0_bf, tmp81);
        tmp1195 = simd_and(tmp1187, bytetest_bc_bc);
        struct_Cn.cc = simd_or(tmp1195, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9d = simd_and(tmp549, tmp6);
        bytetest_93 = simd_and(tmp549, tmp120);
        bytetest_84_84 = simd_and(bytetest_80_8f, tmp39);
        tmp1196 = simd_and(tmp1157, bytetest_93);
        carryQ.cq[230] = carryout2carry(pablo_blk_Advance(tmp1196, carryQ.get_carry_in(230), tmp1197));
        tmp1198 = simd_and(tmp1197, bytetest_84_84);
        struct_Cn.cc = simd_or(tmp1198, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9d = simd_and(tmp549, tmp6);
        bytetest_94 = simd_and(tmp549, tmp39);
        bytetest_86_86 = simd_and(bytetest_80_8f, tmp57);
        tmp1199 = simd_and(tmp1157, bytetest_94);
        carryQ.cq[231] = carryout2carry(pablo_blk_Advance(tmp1199, carryQ.get_carry_in(231), tmp1200));
        tmp1201 = simd_and(tmp1200, bytetest_86_86);
        struct_Cn.cc = simd_or(tmp1201, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9d = simd_and(tmp549, tmp6);
        bytetest_94 = simd_and(tmp549, tmp39);
        bytetest_8b_8c = simd_and(bytetest_88_8f, tmp86);
        tmp1202 = simd_and(tmp1200, bytetest_8b_8c);
        struct_Cn.cc = simd_or(tmp1202, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9d = simd_and(tmp549, tmp6);
        bytetest_94 = simd_and(tmp549, tmp39);
        bytetest_95_95 = simd_and(tmp549, tmp47);
        tmp1203 = simd_and(tmp1200, bytetest_95_95);
        struct_Cn.cc = simd_or(tmp1203, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9d = simd_and(tmp549, tmp6);
        bytetest_94 = simd_and(tmp549, tmp39);
        bytetest_9d_9d = simd_and(tmp549, tmp6);
        tmp1204 = simd_and(tmp1200, bytetest_9d_9d);
        struct_Cn.cc = simd_or(tmp1204, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9d = simd_and(tmp549, tmp6);
        bytetest_94 = simd_and(tmp549, tmp39);
        bytetest_ba_ba = simd_and(bytetest_b0_bf, tmp197);
        tmp1205 = simd_and(tmp1200, bytetest_ba_ba);
        struct_Cn.cc = simd_or(tmp1205, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9d = simd_and(tmp549, tmp6);
        bytetest_94 = simd_and(tmp549, tmp39);
        bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp25);
        tmp1206 = simd_and(tmp1200, bytetest_bf_bf);
        struct_Cn.cc = simd_or(tmp1206, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9d = simd_and(tmp549, tmp6);
        bytetest_95 = simd_and(tmp549, tmp47);
        bytetest_85_85 = simd_and(bytetest_80_8f, tmp47);
        tmp1207 = simd_and(tmp1157, bytetest_95);
        carryQ.cq[232] = carryout2carry(pablo_blk_Advance(tmp1207, carryQ.get_carry_in(232), tmp1208));
        tmp1209 = simd_and(tmp1208, bytetest_85_85);
        struct_Cn.cc = simd_or(tmp1209, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9d = simd_and(tmp549, tmp6);
        bytetest_95 = simd_and(tmp549, tmp47);
        bytetest_87_89 = simd_and(bytetest_80_8f, tmp338);
        tmp1210 = simd_and(tmp1208, bytetest_87_89);
        struct_Cn.cc = simd_or(tmp1210, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9d = simd_and(tmp549, tmp6);
        bytetest_95 = simd_and(tmp549, tmp47);
        bytetest_91_91 = simd_and(tmp549, tmp107);
        tmp1211 = simd_and(tmp1208, bytetest_91_91);
        struct_Cn.cc = simd_or(tmp1211, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9d = simd_and(tmp549, tmp6);
        bytetest_9a = simd_and(tmp549, tmp197);
        bytetest_a6_a7 = simd_and(tmp512, tmp423);
        tmp1212 = simd_and(tmp1157, bytetest_9a);
        carryQ.cq[233] = carryout2carry(pablo_blk_Advance(tmp1212, carryQ.get_carry_in(233), tmp1213));
        tmp1214 = simd_and(tmp1213, bytetest_a6_a7);
        struct_Cn.cc = simd_or(tmp1214, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9d = simd_and(tmp549, tmp6);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_8c_8d = simd_and(bytetest_80_8f, tmp108);
        tmp1215 = simd_and(tmp1157, bytetest_9f);
        carryQ.cq[234] = carryout2carry(pablo_blk_Advance(tmp1215, carryQ.get_carry_in(234), tmp1216));
        tmp1217 = simd_and(tmp1216, bytetest_8c_8d);
        struct_Cn.cc = simd_or(tmp1217, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_80_b7 = simd_andc(bytetest_80_bf, tmp739);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1218 = simd_and(tmp885, bytetest_9e);
        carryQ.cq[235] = carryout2carry(pablo_blk_Advance(tmp1218, carryQ.get_carry_in(235), tmp1219));
        tmp1220 = simd_and(tmp1219, bytetest_80_b7);
        carryQ.cq[236] = carryout2carry(pablo_blk_Advance(tmp1220, carryQ.get_carry_in(236), tmp1221));
        tmp1222 = simd_and(tmp1221, bytetest_80_bf);
        bytetest_9d = simd_and(tmp549, tmp6);
        bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1223 = simd_and(tmp1157, bytetest_a0_bf);
        carryQ.cq[237] = carryout2carry(pablo_blk_Advance(tmp1223, carryQ.get_carry_in(237), tmp1224));
        tmp1225 = simd_and(tmp1224, bytetest_80_bf);
        tmp1226 = simd_or(tmp1225, tmp1222);
        struct_Cn.cc = simd_or(tmp1226, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp58);
        bytetest_84_84 = simd_and(bytetest_80_8f, tmp39);
        tmp1227 = simd_and(tmp1219, bytetest_b8);
        carryQ.cq[238] = carryout2carry(pablo_blk_Advance(tmp1227, carryQ.get_carry_in(238), tmp1228));
        tmp1229 = simd_and(tmp1228, bytetest_84_84);
        struct_Cn.cc = simd_or(tmp1229, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp58);
        bytetest_a0_a0 = simd_andc(tmp512, tmp41);
        tmp1230 = simd_and(tmp1228, bytetest_a0_a0);
        struct_Cn.cc = simd_or(tmp1230, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp58);
        bytetest_a3_a3 = simd_and(tmp512, tmp120);
        tmp1231 = simd_and(tmp1228, bytetest_a3_a3);
        struct_Cn.cc = simd_or(tmp1231, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp58);
        tmp1232 = simd_and(tmp512, tmp37);
        bytetest_a5_a6 = simd_and(tmp1232, tmp140);
        tmp1233 = simd_and(tmp1228, bytetest_a5_a6);
        struct_Cn.cc = simd_or(tmp1233, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp58);
        bytetest_a8_a8 = simd_and(tmp512, tmp58);
        tmp1234 = simd_and(tmp1228, bytetest_a8_a8);
        struct_Cn.cc = simd_or(tmp1234, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp58);
        bytetest_b3_b3 = simd_and(bytetest_b0_bf, tmp120);
        tmp1235 = simd_and(tmp1228, bytetest_b3_b3);
        struct_Cn.cc = simd_or(tmp1235, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp58);
        bytetest_b8_b8 = simd_and(bytetest_b0_bf, tmp58);
        tmp1236 = simd_and(tmp1228, bytetest_b8_b8);
        struct_Cn.cc = simd_or(tmp1236, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp58);
        bytetest_ba_ba = simd_and(bytetest_b0_bf, tmp197);
        tmp1237 = simd_and(tmp1228, bytetest_ba_ba);
        struct_Cn.cc = simd_or(tmp1237, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp144);
        bytetest_80_81 = simd_andc(bytetest_80_8f, tmp240);
        tmp1238 = simd_and(tmp1219, bytetest_b9);
        carryQ.cq[239] = carryout2carry(pablo_blk_Advance(tmp1238, carryQ.get_carry_in(239), tmp1239));
        tmp1240 = simd_and(tmp1239, bytetest_80_81);
        bytetest_b8 = simd_and(bytetest_b0_bf, tmp58);
        bytetest_bc_bf = simd_and(bytetest_b0_bf, tmp4);
        tmp1241 = simd_and(tmp1228, bytetest_bc_bf);
        tmp1242 = simd_or(tmp1241, tmp1240);
        struct_Cn.cc = simd_or(tmp1242, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp144);
        bytetest_83_86 = simd_and(tmp687, tmp64);
        tmp1243 = simd_and(tmp1239, bytetest_83_86);
        struct_Cn.cc = simd_or(tmp1243, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp144);
        bytetest_88_88 = simd_and(bytetest_80_8f, tmp58);
        tmp1244 = simd_and(tmp1239, bytetest_88_88);
        struct_Cn.cc = simd_or(tmp1244, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp144);
        bytetest_8a_8a = simd_and(bytetest_80_8f, tmp197);
        tmp1245 = simd_and(tmp1239, bytetest_8a_8a);
        struct_Cn.cc = simd_or(tmp1245, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp144);
        bytetest_8c_8c = simd_and(bytetest_80_8f, tmp81);
        tmp1246 = simd_and(tmp1239, bytetest_8c_8c);
        struct_Cn.cc = simd_or(tmp1246, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp144);
        bytetest_90_90 = simd_andc(tmp549, tmp41);
        tmp1247 = simd_and(tmp1239, bytetest_90_90);
        struct_Cn.cc = simd_or(tmp1247, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp144);
        bytetest_93_93 = simd_and(tmp549, tmp120);
        tmp1248 = simd_and(tmp1239, bytetest_93_93);
        struct_Cn.cc = simd_or(tmp1248, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp144);
        tmp1249 = simd_and(tmp549, tmp37);
        bytetest_95_96 = simd_and(tmp1249, tmp140);
        tmp1250 = simd_and(tmp1239, bytetest_95_96);
        struct_Cn.cc = simd_or(tmp1250, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp144);
        bytetest_98_98 = simd_and(tmp549, tmp58);
        tmp1251 = simd_and(tmp1239, bytetest_98_98);
        struct_Cn.cc = simd_or(tmp1251, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp144);
        bytetest_9a_9a = simd_and(tmp549, tmp197);
        tmp1252 = simd_and(tmp1239, bytetest_9a_9a);
        struct_Cn.cc = simd_or(tmp1252, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp144);
        bytetest_9c_9c = simd_and(tmp549, tmp81);
        tmp1253 = simd_and(tmp1239, bytetest_9c_9c);
        struct_Cn.cc = simd_or(tmp1253, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp144);
        bytetest_9e_9e = simd_and(tmp549, tmp18);
        tmp1254 = simd_and(tmp1239, bytetest_9e_9e);
        struct_Cn.cc = simd_or(tmp1254, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp144);
        bytetest_a0_a0 = simd_andc(tmp512, tmp41);
        tmp1255 = simd_and(tmp1239, bytetest_a0_a0);
        struct_Cn.cc = simd_or(tmp1255, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp144);
        bytetest_a3_a3 = simd_and(tmp512, tmp120);
        tmp1256 = simd_and(tmp1239, bytetest_a3_a3);
        struct_Cn.cc = simd_or(tmp1256, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp144);
        bytetest_a5_a6 = simd_and(tmp1232, tmp140);
        tmp1257 = simd_and(tmp1239, bytetest_a5_a6);
        struct_Cn.cc = simd_or(tmp1257, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp144);
        bytetest_ab_ab = simd_and(tmp512, tmp28);
        tmp1258 = simd_and(tmp1239, bytetest_ab_ab);
        struct_Cn.cc = simd_or(tmp1258, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp144);
        bytetest_b3_b3 = simd_and(bytetest_b0_bf, tmp120);
        tmp1259 = simd_and(tmp1239, bytetest_b3_b3);
        struct_Cn.cc = simd_or(tmp1259, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp144);
        bytetest_b8_b8 = simd_and(bytetest_b0_bf, tmp58);
        tmp1260 = simd_and(tmp1239, bytetest_b8_b8);
        struct_Cn.cc = simd_or(tmp1260, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp144);
        bytetest_bd_bd = simd_and(bytetest_b0_bf, tmp6);
        tmp1261 = simd_and(tmp1239, bytetest_bd_bd);
        struct_Cn.cc = simd_or(tmp1261, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_b9 = simd_and(bytetest_b0_bf, tmp144);
        bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp25);
        tmp1262 = simd_and(tmp1239, bytetest_bf_bf);
        struct_Cn.cc = simd_or(tmp1262, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp197);
        bytetest_8a_8a = simd_and(bytetest_80_8f, tmp197);
        tmp1263 = simd_and(tmp1219, bytetest_ba);
        carryQ.cq[240] = carryout2carry(pablo_blk_Advance(tmp1263, carryQ.get_carry_in(240), tmp1264));
        tmp1265 = simd_and(tmp1264, bytetest_8a_8a);
        struct_Cn.cc = simd_or(tmp1265, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp197);
        tmp1266 = simd_not(tmp1142);
        tmp1267 = simd_or(simd_and(basis_bits.bit_2, tmp1266), simd_andc(tmp360, basis_bits.bit_2));
        bytetest_9c_a0 = simd_and(bytetest_80_bf, tmp1267);
        tmp1268 = simd_and(tmp1264, bytetest_9c_a0);
        struct_Cn.cc = simd_or(tmp1268, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp197);
        bytetest_a4_a4 = simd_and(tmp512, tmp39);
        tmp1269 = simd_and(tmp1264, bytetest_a4_a4);
        struct_Cn.cc = simd_or(tmp1269, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp197);
        bytetest_aa_aa = simd_and(tmp512, tmp197);
        tmp1270 = simd_and(tmp1264, bytetest_aa_aa);
        struct_Cn.cc = simd_or(tmp1270, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp28);
        bytetest_80_af = simd_andc(bytetest_80_bf, tmp8);
        tmp1271 = simd_and(tmp1219, bytetest_bb);
        carryQ.cq[241] = carryout2carry(pablo_blk_Advance(tmp1271, carryQ.get_carry_in(241), tmp1272));
        tmp1273 = simd_and(tmp1272, bytetest_80_af);
        bytetest_ba = simd_and(bytetest_b0_bf, tmp197);
        bytetest_bc_bf = simd_and(bytetest_b0_bf, tmp4);
        tmp1274 = simd_and(tmp1264, bytetest_bc_bf);
        tmp1275 = simd_or(tmp1274, tmp1273);
        struct_Cn.cc = simd_or(tmp1275, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9e = simd_and(tmp549, tmp18);
        bytetest_bc_bf = simd_and(bytetest_b0_bf, tmp4);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1276 = simd_and(tmp1219, bytetest_bc_bf);
        carryQ.cq[242] = carryout2carry(pablo_blk_Advance(tmp1276, carryQ.get_carry_in(242), tmp1277));
        tmp1278 = simd_and(tmp1277, bytetest_80_bf);
        bytetest_bb = simd_and(bytetest_b0_bf, tmp28);
        bytetest_b2_bf = simd_and(bytetest_b0_bf, tmp91);
        tmp1279 = simd_and(tmp1272, bytetest_b2_bf);
        tmp1280 = simd_or(tmp1279, tmp1278);
        struct_Cn.cc = simd_or(tmp1280, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_80 = simd_andc(bytetest_80_8f, tmp41);
        bytetest_ac_af = simd_and(tmp512, tmp4);
        tmp1281 = simd_and(tmp885, bytetest_9f);
        carryQ.cq[243] = carryout2carry(pablo_blk_Advance(tmp1281, carryQ.get_carry_in(243), tmp1282));
        tmp1283 = simd_and(tmp1282, bytetest_80);
        carryQ.cq[244] = carryout2carry(pablo_blk_Advance(tmp1283, carryQ.get_carry_in(244), tmp1284));
        tmp1285 = simd_and(tmp1284, bytetest_ac_af);
        struct_Cn.cc = simd_or(tmp1285, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_82 = simd_and(bytetest_80_8f, tmp33);
        bytetest_94_9f = simd_and(tmp549, tmp20);
        tmp1286 = simd_and(tmp1282, bytetest_82);
        carryQ.cq[245] = carryout2carry(pablo_blk_Advance(tmp1286, carryQ.get_carry_in(245), tmp1287));
        tmp1288 = simd_and(tmp1287, bytetest_94_9f);
        struct_Cn.cc = simd_or(tmp1288, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_82 = simd_and(bytetest_80_8f, tmp33);
        bytetest_af_b0 = simd_and(bytetest_a0_bf, tmp788);
        tmp1289 = simd_and(tmp1287, bytetest_af_b0);
        struct_Cn.cc = simd_or(tmp1289, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_83 = simd_and(bytetest_80_8f, tmp120);
        bytetest_80_80 = simd_andc(bytetest_80_8f, tmp41);
        tmp1290 = simd_and(tmp1282, bytetest_83);
        carryQ.cq[246] = carryout2carry(pablo_blk_Advance(tmp1290, carryQ.get_carry_in(246), tmp1291));
        tmp1292 = simd_and(tmp1291, bytetest_80_80);
        bytetest_82 = simd_and(bytetest_80_8f, tmp33);
        bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp25);
        tmp1293 = simd_and(tmp1287, bytetest_bf_bf);
        tmp1294 = simd_or(tmp1293, tmp1292);
        struct_Cn.cc = simd_or(tmp1294, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_83 = simd_and(bytetest_80_8f, tmp120);
        bytetest_90_90 = simd_andc(tmp549, tmp41);
        tmp1295 = simd_and(tmp1291, bytetest_90_90);
        struct_Cn.cc = simd_or(tmp1295, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_83 = simd_and(bytetest_80_8f, tmp120);
        bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp1296 = simd_and(tmp1291, bytetest_a0_bf);
        struct_Cn.cc = simd_or(tmp1296, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_84 = simd_and(bytetest_80_8f, tmp39);
        bytetest_8b_8f = simd_and(bytetest_88_8f, tmp72);
        tmp1297 = simd_and(tmp1282, bytetest_84);
        carryQ.cq[247] = carryout2carry(pablo_blk_Advance(tmp1297, carryQ.get_carry_in(247), tmp1298));
        tmp1299 = simd_and(tmp1298, bytetest_8b_8f);
        struct_Cn.cc = simd_or(tmp1299, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_84 = simd_and(bytetest_80_8f, tmp39);
        bytetest_af_af = simd_and(tmp512, tmp25);
        tmp1300 = simd_and(tmp1298, bytetest_af_af);
        struct_Cn.cc = simd_or(tmp1300, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_85 = simd_and(bytetest_80_8f, tmp47);
        bytetest_ac_af = simd_and(tmp512, tmp4);
        tmp1301 = simd_and(tmp1282, bytetest_85);
        carryQ.cq[248] = carryout2carry(pablo_blk_Advance(tmp1301, carryQ.get_carry_in(248), tmp1302));
        tmp1303 = simd_and(tmp1302, bytetest_ac_af);
        struct_Cn.cc = simd_or(tmp1303, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_87 = simd_and(bytetest_80_8f, tmp67);
        tmp1304 = simd_and(basis_bits.bit_2, tmp193);
        bytetest_80_a5 = simd_andc(bytetest_80_bf, tmp1304);
        tmp1305 = simd_and(tmp1282, bytetest_87);
        carryQ.cq[249] = carryout2carry(pablo_blk_Advance(tmp1305, carryQ.get_carry_in(249), tmp1306));
        tmp1307 = simd_and(tmp1306, bytetest_80_a5);
        bytetest_86 = simd_and(bytetest_80_8f, tmp57);
        bytetest_9b_bf = simd_and(bytetest_80_bf, tmp402);
        tmp1308 = simd_and(tmp1282, bytetest_86);
        carryQ.cq[250] = carryout2carry(pablo_blk_Advance(tmp1308, carryQ.get_carry_in(250), tmp1309));
        tmp1310 = simd_and(tmp1309, bytetest_9b_bf);
        tmp1311 = simd_or(tmp1310, tmp1307);
        struct_Cn.cc = simd_or(tmp1311, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_88 = simd_and(bytetest_80_8f, tmp58);
        bytetest_83_8f = simd_and(bytetest_80_8f, tmp318);
        tmp1312 = simd_and(tmp1282, bytetest_88);
        carryQ.cq[251] = carryout2carry(pablo_blk_Advance(tmp1312, carryQ.get_carry_in(251), tmp1313));
        tmp1314 = simd_and(tmp1313, bytetest_83_8f);
        struct_Cn.cc = simd_or(tmp1314, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_88 = simd_and(bytetest_80_8f, tmp58);
        bytetest_bb_bf = simd_and(bytetest_b8_bf, tmp72);
        tmp1315 = simd_and(tmp1313, bytetest_bb_bf);
        struct_Cn.cc = simd_or(tmp1315, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_89 = simd_and(bytetest_80_8f, tmp144);
        bytetest_89_8f = simd_and(bytetest_88_8f, tmp49);
        tmp1316 = simd_and(tmp1282, bytetest_89);
        carryQ.cq[252] = carryout2carry(pablo_blk_Advance(tmp1316, carryQ.get_carry_in(252), tmp1317));
        tmp1318 = simd_and(tmp1317, bytetest_89_8f);
        struct_Cn.cc = simd_or(tmp1318, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_8a_8b = simd_and(bytetest_80_8f, tmp151);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1319 = simd_and(tmp1282, bytetest_8a_8b);
        carryQ.cq[253] = carryout2carry(pablo_blk_Advance(tmp1319, carryQ.get_carry_in(253), tmp1320));
        tmp1321 = simd_and(tmp1320, bytetest_80_bf);
        bytetest_89 = simd_and(bytetest_80_8f, tmp144);
        bytetest_92_bf = simd_and(bytetest_80_bf, tmp1082);
        tmp1322 = simd_and(tmp1317, bytetest_92_bf);
        tmp1323 = simd_or(tmp1322, tmp1321);
        struct_Cn.cc = simd_or(tmp1323, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_8c = simd_and(bytetest_80_8f, tmp81);
        bytetest_a1_af = simd_and(tmp512, tmp215);
        tmp1324 = simd_and(tmp1282, bytetest_8c);
        carryQ.cq[254] = carryout2carry(pablo_blk_Advance(tmp1324, carryQ.get_carry_in(254), tmp1325));
        tmp1326 = simd_and(tmp1325, bytetest_a1_af);
        struct_Cn.cc = simd_or(tmp1326, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_8c = simd_and(bytetest_80_8f, tmp81);
        bytetest_b6_b6 = simd_and(bytetest_b0_bf, tmp57);
        tmp1327 = simd_and(tmp1325, bytetest_b6_b6);
        struct_Cn.cc = simd_or(tmp1327, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_8d = simd_and(bytetest_80_8f, tmp6);
        bytetest_bd_bf = simd_and(bytetest_bc_bf, tmp38);
        tmp1328 = simd_and(tmp1282, bytetest_8d);
        carryQ.cq[255] = carryout2carry(pablo_blk_Advance(tmp1328, carryQ.get_carry_in(255), tmp1329));
        tmp1330 = simd_and(tmp1329, bytetest_bd_bf);
        struct_Cn.cc = simd_or(tmp1330, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_8e = simd_and(bytetest_80_8f, tmp18);
        bytetest_94_9f = simd_and(tmp549, tmp20);
        tmp1331 = simd_and(tmp1282, bytetest_8e);
        carryQ.cq[256] = carryout2carry(pablo_blk_Advance(tmp1331, carryQ.get_carry_in(256), tmp1332));
        tmp1333 = simd_and(tmp1332, bytetest_94_9f);
        struct_Cn.cc = simd_or(tmp1333, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_8f = simd_and(bytetest_80_8f, tmp25);
        bytetest_85_85 = simd_and(bytetest_80_8f, tmp47);
        tmp1334 = simd_and(tmp1282, bytetest_8f);
        carryQ.cq[257] = carryout2carry(pablo_blk_Advance(tmp1334, carryQ.get_carry_in(257), tmp1335));
        tmp1336 = simd_and(tmp1335, bytetest_85_85);
        struct_Cn.cc = simd_or(tmp1336, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_8f = simd_and(bytetest_80_8f, tmp25);
        bytetest_8b_9f = simd_and(bytetest_80_9f, tmp605);
        tmp1337 = simd_and(tmp1335, bytetest_8b_9f);
        struct_Cn.cc = simd_or(tmp1337, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_8f = simd_and(bytetest_80_8f, tmp25);
        bytetest_b1_bf = simd_and(bytetest_b0_bf, tmp215);
        tmp1338 = simd_and(tmp1335, bytetest_b1_bf);
        struct_Cn.cc = simd_or(tmp1338, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_90 = simd_andc(tmp549, tmp41);
        bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp25);
        tmp1339 = simd_and(tmp1282, bytetest_90);
        carryQ.cq[258] = carryout2carry(pablo_blk_Advance(tmp1339, carryQ.get_carry_in(258), tmp1340));
        tmp1341 = simd_and(tmp1340, bytetest_bf_bf);
        struct_Cn.cc = simd_or(tmp1341, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_91 = simd_and(tmp549, tmp107);
        bytetest_81_81 = simd_and(bytetest_80_8f, tmp107);
        tmp1342 = simd_and(tmp1282, bytetest_91);
        carryQ.cq[259] = carryout2carry(pablo_blk_Advance(tmp1342, carryQ.get_carry_in(259), tmp1343));
        tmp1344 = simd_and(tmp1343, bytetest_81_81);
        struct_Cn.cc = simd_or(tmp1344, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_93 = simd_and(tmp549, tmp120);
        bytetest_b8_b8 = simd_and(bytetest_b0_bf, tmp58);
        tmp1345 = simd_and(tmp1282, bytetest_93);
        carryQ.cq[260] = carryout2carry(pablo_blk_Advance(tmp1345, carryQ.get_carry_in(260), tmp1346));
        tmp1347 = simd_and(tmp1346, bytetest_b8_b8);
        struct_Cn.cc = simd_or(tmp1347, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_93 = simd_and(tmp549, tmp120);
        bytetest_bd_bf = simd_and(bytetest_bc_bf, tmp38);
        tmp1348 = simd_and(tmp1346, bytetest_bd_bf);
        struct_Cn.cc = simd_or(tmp1348, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_94 = simd_and(tmp549, tmp39);
        bytetest_be_bf = simd_and(bytetest_b0_bf, tmp100);
        tmp1349 = simd_and(tmp1282, bytetest_94);
        carryQ.cq[261] = carryout2carry(pablo_blk_Advance(tmp1349, carryQ.get_carry_in(261), tmp1350));
        tmp1351 = simd_and(tmp1350, bytetest_be_bf);
        struct_Cn.cc = simd_or(tmp1351, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_95 = simd_and(tmp549, tmp47);
        bytetest_84_8f = simd_and(bytetest_80_8f, tmp20);
        tmp1352 = simd_and(tmp1282, bytetest_95);
        carryQ.cq[262] = carryout2carry(pablo_blk_Advance(tmp1352, carryQ.get_carry_in(262), tmp1353));
        tmp1354 = simd_and(tmp1353, bytetest_84_8f);
        struct_Cn.cc = simd_or(tmp1354, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_97 = simd_and(tmp549, tmp67);
        tmp1355 = simd_and(basis_bits.bit_2, tmp401);
        bytetest_80_ba = simd_andc(bytetest_80_bf, tmp1355);
        tmp1356 = simd_and(tmp1282, bytetest_97);
        carryQ.cq[263] = carryout2carry(pablo_blk_Advance(tmp1356, carryQ.get_carry_in(263), tmp1357));
        tmp1358 = simd_and(tmp1357, bytetest_80_ba);
        bytetest_96 = simd_and(tmp549, tmp57);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1359 = simd_and(tmp1282, bytetest_96);
        carryQ.cq[264] = carryout2carry(pablo_blk_Advance(tmp1359, carryQ.get_carry_in(264), tmp1360));
        tmp1361 = simd_and(tmp1360, bytetest_80_bf);
        bytetest_95 = simd_and(tmp549, tmp47);
        bytetest_a8_bf = simd_and(bytetest_a0_bf, tmp844);
        tmp1362 = simd_and(tmp1353, bytetest_a8_bf);
        tmp1363 = simd_or(tmp1362, tmp1361);
        tmp1364 = simd_or(tmp1363, tmp1358);
        struct_Cn.cc = simd_or(tmp1364, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_99 = simd_and(tmp549, tmp144);
        tmp1365 = simd_or(simd_and(basis_bits.bit_5, tmp85), simd_andc(tmp38, basis_bits.bit_5));
        bytetest_81_84 = simd_and(tmp687, tmp1365);
        tmp1366 = simd_and(tmp1282, bytetest_99);
        carryQ.cq[265] = carryout2carry(pablo_blk_Advance(tmp1366, carryQ.get_carry_in(265), tmp1367));
        tmp1368 = simd_and(tmp1367, bytetest_81_84);
        struct_Cn.cc = simd_or(tmp1368, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_99 = simd_and(tmp549, tmp144);
        bytetest_90_bf = simd_and(bytetest_80_bf, tmp2);
        tmp1369 = simd_and(tmp1367, bytetest_90_bf);
        struct_Cn.cc = simd_or(tmp1369, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_9b = simd_and(tmp549, tmp28);
        bytetest_86_bf = simd_and(bytetest_80_bf, tmp1170);
        tmp1370 = simd_and(tmp1282, bytetest_9b);
        carryQ.cq[266] = carryout2carry(pablo_blk_Advance(tmp1370, carryQ.get_carry_in(266), tmp1371));
        tmp1372 = simd_and(tmp1371, bytetest_86_bf);
        struct_Cn.cc = simd_or(tmp1372, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_9f = simd_and(tmp549, tmp25);
        bytetest_9e_bf = simd_and(bytetest_80_bf, tmp898);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1373 = simd_and(tmp1282, bytetest_9e_bf);
        carryQ.cq[267] = carryout2carry(pablo_blk_Advance(tmp1373, carryQ.get_carry_in(267), tmp1374));
        tmp1375 = simd_and(tmp1374, bytetest_80_bf);
        bytetest_9d = simd_and(tmp549, tmp6);
        bytetest_b4_bf = simd_and(bytetest_b0_bf, tmp20);
        tmp1376 = simd_and(tmp1282, bytetest_9d);
        carryQ.cq[268] = carryout2carry(pablo_blk_Advance(tmp1376, carryQ.get_carry_in(268), tmp1377));
        tmp1378 = simd_and(tmp1377, bytetest_b4_bf);
        tmp1379 = simd_or(tmp1378, tmp1375);
        struct_Cn.cc = simd_or(tmp1379, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_aa = simd_and(tmp512, tmp197);
        bytetest_9b = simd_and(tmp549, tmp28);
        tmp1380 = simd_and(basis_bits.bit_3, tmp159);
        tmp1381 = simd_or(basis_bits.bit_2, tmp1380);
        bytetest_97_bf = simd_and(bytetest_80_bf, tmp1381);
        tmp1382 = simd_and(tmp885, bytetest_aa);
        carryQ.cq[269] = carryout2carry(pablo_blk_Advance(tmp1382, carryQ.get_carry_in(269), tmp1383));
        tmp1384 = simd_and(tmp1383, bytetest_9b);
        carryQ.cq[270] = carryout2carry(pablo_blk_Advance(tmp1384, carryQ.get_carry_in(270), tmp1385));
        tmp1386 = simd_and(tmp1385, bytetest_97_bf);
        struct_Cn.cc = simd_or(tmp1386, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_ab = simd_and(tmp512, tmp28);
        bytetest_9c = simd_and(tmp549, tmp81);
        bytetest_b5_bf = simd_and(bytetest_b0_bf, tmp75);
        tmp1387 = simd_and(tmp885, bytetest_ab);
        carryQ.cq[271] = carryout2carry(pablo_blk_Advance(tmp1387, carryQ.get_carry_in(271), tmp1388));
        tmp1389 = simd_and(tmp1388, bytetest_9c);
        carryQ.cq[272] = carryout2carry(pablo_blk_Advance(tmp1389, carryQ.get_carry_in(272), tmp1390));
        tmp1391 = simd_and(tmp1390, bytetest_b5_bf);
        struct_Cn.cc = simd_or(tmp1391, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_af = simd_and(tmp512, tmp25);
        bytetest_80_9f = simd_andc(bytetest_80_bf, basis_bits.bit_2);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1392 = simd_and(tmp885, bytetest_af);
        carryQ.cq[273] = carryout2carry(pablo_blk_Advance(tmp1392, carryQ.get_carry_in(273), tmp1393));
        tmp1394 = simd_and(tmp1393, bytetest_80_9f);
        carryQ.cq[274] = carryout2carry(pablo_blk_Advance(tmp1394, carryQ.get_carry_in(274), tmp1395));
        tmp1396 = simd_and(tmp1395, bytetest_80_bf);
        bytetest_ac_ae = simd_andc(bytetest_ac_af, tmp24);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1397 = simd_and(tmp885, bytetest_ac_ae);
        carryQ.cq[275] = carryout2carry(pablo_blk_Advance(tmp1397, carryQ.get_carry_in(275), tmp1398));
        tmp1399 = simd_and(tmp1398, bytetest_80_bf);
        carryQ.cq[276] = carryout2carry(pablo_blk_Advance(tmp1399, carryQ.get_carry_in(276), tmp1400));
        tmp1401 = simd_and(tmp1400, bytetest_80_bf);
        bytetest_ab = simd_and(tmp512, tmp28);
        bytetest_a1_bf = simd_and(bytetest_a0_bf, tmp1142);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1402 = simd_and(tmp1388, bytetest_a1_bf);
        carryQ.cq[277] = carryout2carry(pablo_blk_Advance(tmp1402, carryQ.get_carry_in(277), tmp1403));
        tmp1404 = simd_and(tmp1403, bytetest_80_bf);
        bytetest_a0 = simd_andc(tmp512, tmp41);
        bytetest_9e_bf = simd_and(bytetest_80_bf, tmp898);
        tmp1405 = simd_and(tmp1388, bytetest_a0);
        carryQ.cq[278] = carryout2carry(pablo_blk_Advance(tmp1405, carryQ.get_carry_in(278), tmp1406));
        tmp1407 = simd_and(tmp1406, bytetest_9e_bf);
        tmp1408 = simd_or(tmp1407, tmp1404);
        tmp1409 = simd_or(tmp1408, tmp1401);
        tmp1410 = simd_or(tmp1409, tmp1396);
        struct_Cn.cc = simd_or(tmp1410, struct_Cn.cc);
        bytetest_f3 = simd_and(tmp883, tmp120);
        bytetest_a0 = simd_andc(tmp512, tmp41);
        bytetest_80 = simd_andc(bytetest_80_8f, tmp41);
        bytetest_80_80 = simd_andc(bytetest_80_8f, tmp41);
        tmp1411 = simd_and(tmp13, bytetest_f3);
        carryQ.cq[279] = carryout2carry(pablo_blk_Advance(tmp1411, carryQ.get_carry_in(279), tmp1412));
        tmp1413 = simd_and(tmp1412, bytetest_a0);
        carryQ.cq[280] = carryout2carry(pablo_blk_Advance(tmp1413, carryQ.get_carry_in(280), tmp1414));
        tmp1415 = simd_and(tmp1414, bytetest_80);
        carryQ.cq[281] = carryout2carry(pablo_blk_Advance(tmp1415, carryQ.get_carry_in(281), tmp1416));
        tmp1417 = simd_and(tmp1416, bytetest_80_80);
        bytetest_80_9f = simd_andc(bytetest_80_bf, basis_bits.bit_2);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1418 = simd_and(tmp1412, bytetest_80_9f);
        carryQ.cq[282] = carryout2carry(pablo_blk_Advance(tmp1418, carryQ.get_carry_in(282), tmp1419));
        tmp1420 = simd_and(tmp1419, bytetest_80_bf);
        carryQ.cq[283] = carryout2carry(pablo_blk_Advance(tmp1420, carryQ.get_carry_in(283), tmp1421));
        tmp1422 = simd_and(tmp1421, bytetest_80_bf);
        tmp1423 = simd_or(tmp1422, tmp1417);
        tmp1424 = simd_andc(tmp883, tmp20);
        bytetest_f1_f2 = simd_and(tmp1424, tmp140);
        bytetest_f0 = simd_andc(tmp883, tmp41);
        bytetest_b0_bf = simd_and(bytetest_80_bf, tmp8);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1425 = simd_and(tmp885, bytetest_b0_bf);
        carryQ.cq[284] = carryout2carry(pablo_blk_Advance(tmp1425, carryQ.get_carry_in(284), tmp1426));
        tmp1427 = simd_and(tmp1426, bytetest_80_bf);
        carryQ.cq[285] = carryout2carry(pablo_blk_Advance(tmp1427, carryQ.get_carry_in(285), tmp1428));
        tmp1429 = simd_and(tmp1428, bytetest_80_bf);
        bytetest_af = simd_and(tmp512, tmp25);
        bytetest_a9_bf = simd_and(bytetest_a0_bf, tmp1016);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1430 = simd_and(tmp1393, bytetest_a9_bf);
        carryQ.cq[286] = carryout2carry(pablo_blk_Advance(tmp1430, carryQ.get_carry_in(286), tmp1431));
        tmp1432 = simd_and(tmp1431, bytetest_80_bf);
        bytetest_a8 = simd_and(tmp512, tmp58);
        bytetest_9e_bf = simd_and(bytetest_80_bf, tmp898);
        tmp1433 = simd_and(tmp1393, bytetest_a8);
        carryQ.cq[287] = carryout2carry(pablo_blk_Advance(tmp1433, carryQ.get_carry_in(287), tmp1434));
        tmp1435 = simd_and(tmp1434, bytetest_9e_bf);
        tmp1436 = simd_or(tmp1435, tmp1432);
        tmp1437 = simd_or(tmp1436, tmp1429);
        tmp1438 = simd_or(tmp1437, bytetest_f1_f2);
        tmp1439 = simd_or(tmp1438, tmp1423);
        struct_Cn.cc = simd_or(tmp1439, struct_Cn.cc);
        bytetest_f3 = simd_and(tmp883, tmp120);
        bytetest_a0 = simd_andc(tmp512, tmp41);
        bytetest_80 = simd_andc(bytetest_80_8f, tmp41);
        bytetest_82_9f = simd_and(bytetest_80_9f, tmp1149);
        tmp1440 = simd_and(tmp1416, bytetest_82_9f);
        struct_Cn.cc = simd_or(tmp1440, struct_Cn.cc);
        bytetest_f3 = simd_and(tmp883, tmp120);
        bytetest_a0 = simd_andc(tmp512, tmp41);
        bytetest_82_83 = simd_and(bytetest_80_8f, tmp579);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1441 = simd_and(tmp1414, bytetest_82_83);
        carryQ.cq[288] = carryout2carry(pablo_blk_Advance(tmp1441, carryQ.get_carry_in(288), tmp1442));
        tmp1443 = simd_and(tmp1442, bytetest_80_bf);
        struct_Cn.cc = simd_or(tmp1443, struct_Cn.cc);
        bytetest_f3 = simd_and(tmp883, tmp120);
        bytetest_a1_af = simd_and(tmp512, tmp215);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1444 = simd_and(tmp1412, bytetest_a1_af);
        carryQ.cq[289] = carryout2carry(pablo_blk_Advance(tmp1444, carryQ.get_carry_in(289), tmp1445));
        tmp1446 = simd_and(tmp1445, bytetest_80_bf);
        carryQ.cq[290] = carryout2carry(pablo_blk_Advance(tmp1446, carryQ.get_carry_in(290), tmp1447));
        tmp1448 = simd_and(tmp1447, bytetest_80_bf);
        bytetest_a0 = simd_andc(tmp512, tmp41);
        tmp1449 = simd_or(basis_bits.bit_2, tmp844);
        bytetest_88_bf = simd_and(bytetest_80_bf, tmp1449);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp1450 = simd_and(tmp1414, bytetest_88_bf);
        carryQ.cq[291] = carryout2carry(pablo_blk_Advance(tmp1450, carryQ.get_carry_in(291), tmp1451));
        tmp1452 = simd_and(tmp1451, bytetest_80_bf);
        bytetest_87 = simd_and(bytetest_80_8f, tmp67);
        bytetest_b0_bf = simd_and(bytetest_80_bf, tmp8);
        tmp1453 = simd_and(tmp1414, bytetest_87);
        carryQ.cq[292] = carryout2carry(pablo_blk_Advance(tmp1453, carryQ.get_carry_in(292), tmp1454));
        tmp1455 = simd_and(tmp1454, bytetest_b0_bf);
        tmp1456 = simd_or(tmp1455, tmp1452);
        tmp1457 = simd_or(tmp1456, tmp1448);
        struct_Cn.cc = simd_or(tmp1457, struct_Cn.cc);
        bytetest_f3 = simd_and(tmp883, tmp120);
        bytetest_bf = simd_and(bytetest_b0_bf, tmp25);
        bytetest_bf = simd_and(bytetest_b0_bf, tmp25);
        bytetest_be_bf = simd_and(bytetest_b0_bf, tmp100);
        tmp1458 = simd_and(tmp1412, bytetest_bf);
        carryQ.cq[293] = carryout2carry(pablo_blk_Advance(tmp1458, carryQ.get_carry_in(293), tmp1459));
        tmp1460 = simd_and(tmp1459, bytetest_bf);
        carryQ.cq[294] = carryout2carry(pablo_blk_Advance(tmp1460, carryQ.get_carry_in(294), tmp1461));
        tmp1462 = simd_and(tmp1461, bytetest_be_bf);
        struct_Cn.cc = simd_or(tmp1462, struct_Cn.cc);
  }
  CarryArray<295, 0> carryQ;
  };

  struct Cc {
  Cc() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Cc & struct_Cc) {
		BitBlock tmp1, tmp2, bytetest_0_1f, tmp3, tmp4, tmp5, tmp6, tmp7, tmp8;
		BitBlock bytetest_7f_7f, tmp9, tmp10, tmp11, tmp12, tmp13, tmp14, bytetest_c2;
		BitBlock tmp15, bytetest_80_9f, tmp16, tmp17, tmp18, tmp19, tmp20;




        struct_Cc.cc = simd<1>::constant<0>();
        tmp1 = simd_or(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_or(tmp1, basis_bits.bit_2);
        bytetest_0_1f = simd_not(tmp2);
        struct_Cc.cc = simd_or(bytetest_0_1f, struct_Cc.cc);
        tmp3 = simd_andc(basis_bits.bit_1, basis_bits.bit_0);
        tmp4 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp5 = simd_and(tmp3, tmp4);
        tmp6 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp7 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp8 = simd_and(tmp6, tmp7);
        bytetest_7f_7f = simd_and(tmp5, tmp8);
        struct_Cc.cc = simd_or(bytetest_7f_7f, struct_Cc.cc);
        tmp9 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp10 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp11 = simd_andc(tmp9, tmp10);
        tmp12 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp13 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp14 = simd_andc(tmp13, tmp12);
        bytetest_c2 = simd_and(tmp11, tmp14);
        tmp15 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_80_9f = simd_andc(tmp15, basis_bits.bit_2);
        tmp16 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp16, carryQ.get_carry_in(0), tmp17));
        tmp18 = simd_and(tmp17, bytetest_c2);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp18, carryQ.get_carry_in(1), tmp19));
        tmp20 = simd_and(tmp19, bytetest_80_9f);
        struct_Cc.cc = simd_or(tmp20, struct_Cc.cc);
        carryQ.CarryQ_Adjust(2);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Cc & struct_Cc, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, bytetest_0_1f, tmp3, tmp4, tmp5, tmp6, tmp7, tmp8;
		BitBlock bytetest_7f_7f, tmp9, tmp10, tmp11, tmp12, tmp13, tmp14, bytetest_c2;
		BitBlock tmp15, bytetest_80_9f, tmp16, tmp17, tmp18, tmp19, tmp20;




        struct_Cc.cc = simd<1>::constant<0>();
        tmp1 = simd_or(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_or(tmp1, basis_bits.bit_2);
        bytetest_0_1f = simd_not(tmp2);
        struct_Cc.cc = simd_or(bytetest_0_1f, struct_Cc.cc);
        tmp3 = simd_andc(basis_bits.bit_1, basis_bits.bit_0);
        tmp4 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp5 = simd_and(tmp3, tmp4);
        tmp6 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp7 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp8 = simd_and(tmp6, tmp7);
        bytetest_7f_7f = simd_and(tmp5, tmp8);
        struct_Cc.cc = simd_or(bytetest_7f_7f, struct_Cc.cc);
        tmp9 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp10 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp11 = simd_andc(tmp9, tmp10);
        tmp12 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp13 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp14 = simd_andc(tmp13, tmp12);
        bytetest_c2 = simd_and(tmp11, tmp14);
        tmp15 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_80_9f = simd_andc(tmp15, basis_bits.bit_2);
        tmp16 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp16, carryQ.get_carry_in(0), tmp17));
        tmp18 = simd_and(tmp17, bytetest_c2);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp18, carryQ.get_carry_in(1), tmp19));
        tmp20 = simd_and(tmp19, bytetest_80_9f);
        struct_Cc.cc = simd_or(tmp20, struct_Cc.cc);
  }
  CarryArray<2, 0> carryQ;
  };

  struct Cf {
  Cf() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Cf & struct_Cf) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_c2, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, tmp12, bytetest_ad_ad, tmp13, tmp14, tmp15, tmp16;
		BitBlock tmp17, tmp18, tmp19, tmp20, tmp21, tmp22, bytetest_d8, tmp23, tmp24;
		BitBlock tmp25, bytetest_80_84, tmp26, tmp27, tmp28, tmp29, tmp30;
		BitBlock bytetest_9c_9c, tmp31, tmp32, tmp33, bytetest_db, bytetest_9d_9d;
		BitBlock tmp34, tmp35, tmp36, bytetest_dc, tmp37, bytetest_8f_8f, tmp38, tmp39;
		BitBlock tmp40, tmp41, tmp42, bytetest_e1, tmp43, bytetest_a0, tmp44;
		BitBlock bytetest_8e_8e, tmp45, tmp46, tmp47, tmp48, tmp49, bytetest_e2;
		BitBlock bytetest_80, tmp50, tmp51, bytetest_8b_8f, tmp52, tmp53, tmp54, tmp55;
		BitBlock tmp56, tmp57, tmp58, tmp59, bytetest_aa_ae, tmp60, bytetest_81, tmp61;
		BitBlock bytetest_a0_a4, tmp62, tmp63, tmp64, tmp65, tmp66, bytetest_a6_af;
		BitBlock tmp67, bytetest_ef, tmp68, tmp69, bytetest_bb, bytetest_bf_bf, tmp70;
		BitBlock tmp71, tmp72, tmp73, tmp74, bytetest_bf, tmp75, bytetest_b9_bb, tmp76;
		BitBlock tmp77, tmp78, tmp79, bytetest_f0, bytetest_91, bytetest_82;
		BitBlock bytetest_bd_bd, tmp80, tmp81, tmp82, tmp83, tmp84, tmp85, tmp86;
		BitBlock bytetest_9d, tmp87, tmp88, bytetest_85, tmp89, tmp90, bytetest_b3_ba;
		BitBlock tmp91, tmp92, tmp93, tmp94, tmp95, tmp96, bytetest_f3, bytetest_81_81;
		BitBlock tmp97, tmp98, tmp99, tmp100, tmp101, tmp102, tmp103, bytetest_80_bf;
		BitBlock tmp104, tmp105, tmp106, tmp107, bytetest_a0_bf, tmp108, tmp109;




        struct_Cf.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_andc(tmp5, tmp4);
        bytetest_c2 = simd_and(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp11 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp12 = simd_and(tmp10, tmp11);
        bytetest_ad_ad = simd_and(tmp9, tmp12);
        tmp13 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp13, carryQ.get_carry_in(0), tmp14));
        tmp15 = simd_and(tmp14, bytetest_c2);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp15, carryQ.get_carry_in(1), tmp16));
        tmp17 = simd_and(tmp16, bytetest_ad_ad);
        struct_Cf.cc = simd_or(tmp17, struct_Cf.cc);
        tmp18 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp19 = simd_and(tmp1, tmp18);
        tmp20 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp21 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp22 = simd_andc(tmp20, tmp21);
        bytetest_d8 = simd_and(tmp19, tmp22);
        tmp23 = simd_andc(tmp7, tmp2);
        tmp24 = simd_andc(tmp23, basis_bits.bit_4);
        tmp25 = simd_and(basis_bits.bit_5, tmp21);
        bytetest_80_84 = simd_andc(tmp24, tmp25);
        tmp26 = simd_and(tmp14, bytetest_d8);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp26, carryQ.get_carry_in(2), tmp27));
        tmp28 = simd_and(tmp27, bytetest_80_84);
        struct_Cf.cc = simd_or(tmp28, struct_Cf.cc);
        bytetest_d8 = simd_and(tmp19, tmp22);
        tmp29 = simd_and(tmp7, tmp18);
        tmp30 = simd_andc(tmp10, tmp21);
        bytetest_9c_9c = simd_and(tmp29, tmp30);
        tmp31 = simd_and(tmp27, bytetest_9c_9c);
        struct_Cf.cc = simd_or(tmp31, struct_Cf.cc);
        tmp32 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp33 = simd_and(tmp20, tmp32);
        bytetest_db = simd_and(tmp19, tmp33);
        bytetest_9d_9d = simd_and(tmp29, tmp12);
        tmp34 = simd_and(tmp14, bytetest_db);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp34, carryQ.get_carry_in(3), tmp35));
        tmp36 = simd_and(tmp35, bytetest_9d_9d);
        struct_Cf.cc = simd_or(tmp36, struct_Cf.cc);
        bytetest_dc = simd_and(tmp19, tmp30);
        tmp37 = simd_and(tmp10, tmp32);
        bytetest_8f_8f = simd_and(tmp23, tmp37);
        tmp38 = simd_and(tmp14, bytetest_dc);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp38, carryQ.get_carry_in(4), tmp39));
        tmp40 = simd_and(tmp39, bytetest_8f_8f);
        struct_Cf.cc = simd_or(tmp40, struct_Cf.cc);
        tmp41 = simd_and(tmp1, tmp8);
        tmp42 = simd_andc(tmp11, tmp4);
        bytetest_e1 = simd_and(tmp41, tmp42);
        tmp43 = simd_or(tmp4, tmp21);
        bytetest_a0 = simd_andc(tmp9, tmp43);
        tmp44 = simd_and(tmp10, tmp5);
        bytetest_8e_8e = simd_and(tmp23, tmp44);
        tmp45 = simd_and(tmp14, bytetest_e1);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp45, carryQ.get_carry_in(5), tmp46));
        tmp47 = simd_and(tmp46, bytetest_a0);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp47, carryQ.get_carry_in(6), tmp48));
        tmp49 = simd_and(tmp48, bytetest_8e_8e);
        struct_Cf.cc = simd_or(tmp49, struct_Cf.cc);
        bytetest_e2 = simd_and(tmp41, tmp6);
        bytetest_80 = simd_andc(tmp23, tmp43);
        tmp50 = simd_and(tmp23, basis_bits.bit_4);
        tmp51 = simd_or(basis_bits.bit_5, tmp32);
        bytetest_8b_8f = simd_and(tmp50, tmp51);
        tmp52 = simd_and(tmp14, bytetest_e2);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp52, carryQ.get_carry_in(7), tmp53));
        tmp54 = simd_and(tmp53, bytetest_80);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(tmp54, carryQ.get_carry_in(8), tmp55));
        tmp56 = simd_and(tmp55, bytetest_8b_8f);
        struct_Cf.cc = simd_or(tmp56, struct_Cf.cc);
        bytetest_e2 = simd_and(tmp41, tmp6);
        bytetest_80 = simd_andc(tmp23, tmp43);
        tmp57 = simd_and(tmp9, basis_bits.bit_4);
        tmp58 = simd_not(tmp32);
        tmp59 = simd_or(simd_and(basis_bits.bit_5, tmp58), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        bytetest_aa_ae = simd_and(tmp57, tmp59);
        tmp60 = simd_and(tmp55, bytetest_aa_ae);
        struct_Cf.cc = simd_or(tmp60, struct_Cf.cc);
        bytetest_e2 = simd_and(tmp41, tmp6);
        bytetest_81 = simd_and(tmp23, tmp42);
        tmp61 = simd_andc(tmp9, basis_bits.bit_4);
        bytetest_a0_a4 = simd_andc(tmp61, tmp25);
        tmp62 = simd_and(tmp53, bytetest_81);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(tmp62, carryQ.get_carry_in(9), tmp63));
        tmp64 = simd_and(tmp63, bytetest_a0_a4);
        struct_Cf.cc = simd_or(tmp64, struct_Cf.cc);
        bytetest_e2 = simd_and(tmp41, tmp6);
        bytetest_81 = simd_and(tmp23, tmp42);
        tmp65 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp66 = simd_or(basis_bits.bit_4, tmp65);
        bytetest_a6_af = simd_and(tmp9, tmp66);
        tmp67 = simd_and(tmp63, bytetest_a6_af);
        struct_Cf.cc = simd_or(tmp67, struct_Cf.cc);
        bytetest_ef = simd_and(tmp41, tmp37);
        tmp68 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp69 = simd_and(tmp7, tmp68);
        bytetest_bb = simd_and(tmp69, tmp33);
        bytetest_bf_bf = simd_and(tmp69, tmp37);
        tmp70 = simd_and(tmp14, bytetest_ef);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(tmp70, carryQ.get_carry_in(10), tmp71));
        tmp72 = simd_and(tmp71, bytetest_bb);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(tmp72, carryQ.get_carry_in(11), tmp73));
        tmp74 = simd_and(tmp73, bytetest_bf_bf);
        struct_Cf.cc = simd_or(tmp74, struct_Cf.cc);
        bytetest_ef = simd_and(tmp41, tmp37);
        bytetest_bf = simd_and(tmp69, tmp37);
        tmp75 = simd_and(tmp69, tmp20);
        bytetest_b9_bb = simd_and(tmp75, tmp21);
        tmp76 = simd_and(tmp71, bytetest_bf);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(tmp76, carryQ.get_carry_in(12), tmp77));
        tmp78 = simd_and(tmp77, bytetest_b9_bb);
        struct_Cf.cc = simd_or(tmp78, struct_Cf.cc);
        tmp79 = simd_and(tmp1, tmp68);
        bytetest_f0 = simd_andc(tmp79, tmp43);
        bytetest_91 = simd_and(tmp29, tmp42);
        bytetest_82 = simd_and(tmp23, tmp6);
        bytetest_bd_bd = simd_and(tmp69, tmp12);
        tmp80 = simd_and(tmp14, bytetest_f0);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(tmp80, carryQ.get_carry_in(13), tmp81));
        tmp82 = simd_and(tmp81, bytetest_91);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(tmp82, carryQ.get_carry_in(14), tmp83));
        tmp84 = simd_and(tmp83, bytetest_82);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(tmp84, carryQ.get_carry_in(15), tmp85));
        tmp86 = simd_and(tmp85, bytetest_bd_bd);
        struct_Cf.cc = simd_or(tmp86, struct_Cf.cc);
        bytetest_f0 = simd_andc(tmp79, tmp43);
        bytetest_9d = simd_and(tmp29, tmp12);
        tmp87 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp88 = simd_and(tmp87, tmp11);
        bytetest_85 = simd_and(tmp23, tmp88);
        tmp89 = simd_not(tmp51);
        tmp90 = simd_or(simd_and(basis_bits.bit_4, tmp89), simd_andc(tmp51, basis_bits.bit_4));
        bytetest_b3_ba = simd_and(tmp69, tmp90);
        tmp91 = simd_and(tmp81, bytetest_9d);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(tmp91, carryQ.get_carry_in(16), tmp92));
        tmp93 = simd_and(tmp92, bytetest_85);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(tmp93, carryQ.get_carry_in(17), tmp94));
        tmp95 = simd_and(tmp94, bytetest_b3_ba);
        struct_Cf.cc = simd_or(tmp95, struct_Cf.cc);
        tmp96 = simd_andc(tmp32, tmp4);
        bytetest_f3 = simd_and(tmp79, tmp96);
        bytetest_a0 = simd_andc(tmp9, tmp43);
        bytetest_80 = simd_andc(tmp23, tmp43);
        bytetest_81_81 = simd_and(tmp23, tmp42);
        tmp97 = simd_and(tmp14, bytetest_f3);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(tmp97, carryQ.get_carry_in(18), tmp98));
        tmp99 = simd_and(tmp98, bytetest_a0);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(tmp99, carryQ.get_carry_in(19), tmp100));
        tmp101 = simd_and(tmp100, bytetest_80);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(tmp101, carryQ.get_carry_in(20), tmp102));
        tmp103 = simd_and(tmp102, bytetest_81_81);
        struct_Cf.cc = simd_or(tmp103, struct_Cf.cc);
        bytetest_f3 = simd_and(tmp79, tmp96);
        bytetest_a0 = simd_andc(tmp9, tmp43);
        bytetest_81 = simd_and(tmp23, tmp42);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp104 = simd_and(tmp100, bytetest_81);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(tmp104, carryQ.get_carry_in(21), tmp105));
        tmp106 = simd_and(tmp105, bytetest_80_bf);
        tmp107 = simd_andc(bytetest_80_bf, tmp2);
        bytetest_80 = simd_andc(tmp107, tmp43);
        bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp108 = simd_and(tmp102, bytetest_a0_bf);
        tmp109 = simd_or(tmp108, tmp106);
        struct_Cf.cc = simd_or(tmp109, struct_Cf.cc);
        carryQ.CarryQ_Adjust(22);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Cf & struct_Cf, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_c2, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, tmp12, bytetest_ad_ad, tmp13, tmp14, tmp15, tmp16;
		BitBlock tmp17, tmp18, tmp19, tmp20, tmp21, tmp22, bytetest_d8, tmp23, tmp24;
		BitBlock tmp25, bytetest_80_84, tmp26, tmp27, tmp28, tmp29, tmp30;
		BitBlock bytetest_9c_9c, tmp31, tmp32, tmp33, bytetest_db, bytetest_9d_9d;
		BitBlock tmp34, tmp35, tmp36, bytetest_dc, tmp37, bytetest_8f_8f, tmp38, tmp39;
		BitBlock tmp40, tmp41, tmp42, bytetest_e1, tmp43, bytetest_a0, tmp44;
		BitBlock bytetest_8e_8e, tmp45, tmp46, tmp47, tmp48, tmp49, bytetest_e2;
		BitBlock bytetest_80, tmp50, tmp51, bytetest_8b_8f, tmp52, tmp53, tmp54, tmp55;
		BitBlock tmp56, tmp57, tmp58, tmp59, bytetest_aa_ae, tmp60, bytetest_81, tmp61;
		BitBlock bytetest_a0_a4, tmp62, tmp63, tmp64, tmp65, tmp66, bytetest_a6_af;
		BitBlock tmp67, bytetest_ef, tmp68, tmp69, bytetest_bb, bytetest_bf_bf, tmp70;
		BitBlock tmp71, tmp72, tmp73, tmp74, bytetest_bf, tmp75, bytetest_b9_bb, tmp76;
		BitBlock tmp77, tmp78, tmp79, bytetest_f0, bytetest_91, bytetest_82;
		BitBlock bytetest_bd_bd, tmp80, tmp81, tmp82, tmp83, tmp84, tmp85, tmp86;
		BitBlock bytetest_9d, tmp87, tmp88, bytetest_85, tmp89, tmp90, bytetest_b3_ba;
		BitBlock tmp91, tmp92, tmp93, tmp94, tmp95, tmp96, bytetest_f3, bytetest_81_81;
		BitBlock tmp97, tmp98, tmp99, tmp100, tmp101, tmp102, tmp103, bytetest_80_bf;
		BitBlock tmp104, tmp105, tmp106, tmp107, bytetest_a0_bf, tmp108, tmp109;




        struct_Cf.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_andc(tmp5, tmp4);
        bytetest_c2 = simd_and(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp11 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp12 = simd_and(tmp10, tmp11);
        bytetest_ad_ad = simd_and(tmp9, tmp12);
        tmp13 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp13, carryQ.get_carry_in(0), tmp14));
        tmp15 = simd_and(tmp14, bytetest_c2);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp15, carryQ.get_carry_in(1), tmp16));
        tmp17 = simd_and(tmp16, bytetest_ad_ad);
        struct_Cf.cc = simd_or(tmp17, struct_Cf.cc);
        tmp18 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp19 = simd_and(tmp1, tmp18);
        tmp20 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp21 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp22 = simd_andc(tmp20, tmp21);
        bytetest_d8 = simd_and(tmp19, tmp22);
        tmp23 = simd_andc(tmp7, tmp2);
        tmp24 = simd_andc(tmp23, basis_bits.bit_4);
        tmp25 = simd_and(basis_bits.bit_5, tmp21);
        bytetest_80_84 = simd_andc(tmp24, tmp25);
        tmp26 = simd_and(tmp14, bytetest_d8);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp26, carryQ.get_carry_in(2), tmp27));
        tmp28 = simd_and(tmp27, bytetest_80_84);
        struct_Cf.cc = simd_or(tmp28, struct_Cf.cc);
        bytetest_d8 = simd_and(tmp19, tmp22);
        tmp29 = simd_and(tmp7, tmp18);
        tmp30 = simd_andc(tmp10, tmp21);
        bytetest_9c_9c = simd_and(tmp29, tmp30);
        tmp31 = simd_and(tmp27, bytetest_9c_9c);
        struct_Cf.cc = simd_or(tmp31, struct_Cf.cc);
        tmp32 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp33 = simd_and(tmp20, tmp32);
        bytetest_db = simd_and(tmp19, tmp33);
        bytetest_9d_9d = simd_and(tmp29, tmp12);
        tmp34 = simd_and(tmp14, bytetest_db);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp34, carryQ.get_carry_in(3), tmp35));
        tmp36 = simd_and(tmp35, bytetest_9d_9d);
        struct_Cf.cc = simd_or(tmp36, struct_Cf.cc);
        bytetest_dc = simd_and(tmp19, tmp30);
        tmp37 = simd_and(tmp10, tmp32);
        bytetest_8f_8f = simd_and(tmp23, tmp37);
        tmp38 = simd_and(tmp14, bytetest_dc);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp38, carryQ.get_carry_in(4), tmp39));
        tmp40 = simd_and(tmp39, bytetest_8f_8f);
        struct_Cf.cc = simd_or(tmp40, struct_Cf.cc);
        tmp41 = simd_and(tmp1, tmp8);
        tmp42 = simd_andc(tmp11, tmp4);
        bytetest_e1 = simd_and(tmp41, tmp42);
        tmp43 = simd_or(tmp4, tmp21);
        bytetest_a0 = simd_andc(tmp9, tmp43);
        tmp44 = simd_and(tmp10, tmp5);
        bytetest_8e_8e = simd_and(tmp23, tmp44);
        tmp45 = simd_and(tmp14, bytetest_e1);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp45, carryQ.get_carry_in(5), tmp46));
        tmp47 = simd_and(tmp46, bytetest_a0);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp47, carryQ.get_carry_in(6), tmp48));
        tmp49 = simd_and(tmp48, bytetest_8e_8e);
        struct_Cf.cc = simd_or(tmp49, struct_Cf.cc);
        bytetest_e2 = simd_and(tmp41, tmp6);
        bytetest_80 = simd_andc(tmp23, tmp43);
        tmp50 = simd_and(tmp23, basis_bits.bit_4);
        tmp51 = simd_or(basis_bits.bit_5, tmp32);
        bytetest_8b_8f = simd_and(tmp50, tmp51);
        tmp52 = simd_and(tmp14, bytetest_e2);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp52, carryQ.get_carry_in(7), tmp53));
        tmp54 = simd_and(tmp53, bytetest_80);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(tmp54, carryQ.get_carry_in(8), tmp55));
        tmp56 = simd_and(tmp55, bytetest_8b_8f);
        struct_Cf.cc = simd_or(tmp56, struct_Cf.cc);
        bytetest_e2 = simd_and(tmp41, tmp6);
        bytetest_80 = simd_andc(tmp23, tmp43);
        tmp57 = simd_and(tmp9, basis_bits.bit_4);
        tmp58 = simd_not(tmp32);
        tmp59 = simd_or(simd_and(basis_bits.bit_5, tmp58), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        bytetest_aa_ae = simd_and(tmp57, tmp59);
        tmp60 = simd_and(tmp55, bytetest_aa_ae);
        struct_Cf.cc = simd_or(tmp60, struct_Cf.cc);
        bytetest_e2 = simd_and(tmp41, tmp6);
        bytetest_81 = simd_and(tmp23, tmp42);
        tmp61 = simd_andc(tmp9, basis_bits.bit_4);
        bytetest_a0_a4 = simd_andc(tmp61, tmp25);
        tmp62 = simd_and(tmp53, bytetest_81);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(tmp62, carryQ.get_carry_in(9), tmp63));
        tmp64 = simd_and(tmp63, bytetest_a0_a4);
        struct_Cf.cc = simd_or(tmp64, struct_Cf.cc);
        bytetest_e2 = simd_and(tmp41, tmp6);
        bytetest_81 = simd_and(tmp23, tmp42);
        tmp65 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp66 = simd_or(basis_bits.bit_4, tmp65);
        bytetest_a6_af = simd_and(tmp9, tmp66);
        tmp67 = simd_and(tmp63, bytetest_a6_af);
        struct_Cf.cc = simd_or(tmp67, struct_Cf.cc);
        bytetest_ef = simd_and(tmp41, tmp37);
        tmp68 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp69 = simd_and(tmp7, tmp68);
        bytetest_bb = simd_and(tmp69, tmp33);
        bytetest_bf_bf = simd_and(tmp69, tmp37);
        tmp70 = simd_and(tmp14, bytetest_ef);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(tmp70, carryQ.get_carry_in(10), tmp71));
        tmp72 = simd_and(tmp71, bytetest_bb);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(tmp72, carryQ.get_carry_in(11), tmp73));
        tmp74 = simd_and(tmp73, bytetest_bf_bf);
        struct_Cf.cc = simd_or(tmp74, struct_Cf.cc);
        bytetest_ef = simd_and(tmp41, tmp37);
        bytetest_bf = simd_and(tmp69, tmp37);
        tmp75 = simd_and(tmp69, tmp20);
        bytetest_b9_bb = simd_and(tmp75, tmp21);
        tmp76 = simd_and(tmp71, bytetest_bf);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(tmp76, carryQ.get_carry_in(12), tmp77));
        tmp78 = simd_and(tmp77, bytetest_b9_bb);
        struct_Cf.cc = simd_or(tmp78, struct_Cf.cc);
        tmp79 = simd_and(tmp1, tmp68);
        bytetest_f0 = simd_andc(tmp79, tmp43);
        bytetest_91 = simd_and(tmp29, tmp42);
        bytetest_82 = simd_and(tmp23, tmp6);
        bytetest_bd_bd = simd_and(tmp69, tmp12);
        tmp80 = simd_and(tmp14, bytetest_f0);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(tmp80, carryQ.get_carry_in(13), tmp81));
        tmp82 = simd_and(tmp81, bytetest_91);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(tmp82, carryQ.get_carry_in(14), tmp83));
        tmp84 = simd_and(tmp83, bytetest_82);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(tmp84, carryQ.get_carry_in(15), tmp85));
        tmp86 = simd_and(tmp85, bytetest_bd_bd);
        struct_Cf.cc = simd_or(tmp86, struct_Cf.cc);
        bytetest_f0 = simd_andc(tmp79, tmp43);
        bytetest_9d = simd_and(tmp29, tmp12);
        tmp87 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp88 = simd_and(tmp87, tmp11);
        bytetest_85 = simd_and(tmp23, tmp88);
        tmp89 = simd_not(tmp51);
        tmp90 = simd_or(simd_and(basis_bits.bit_4, tmp89), simd_andc(tmp51, basis_bits.bit_4));
        bytetest_b3_ba = simd_and(tmp69, tmp90);
        tmp91 = simd_and(tmp81, bytetest_9d);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(tmp91, carryQ.get_carry_in(16), tmp92));
        tmp93 = simd_and(tmp92, bytetest_85);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(tmp93, carryQ.get_carry_in(17), tmp94));
        tmp95 = simd_and(tmp94, bytetest_b3_ba);
        struct_Cf.cc = simd_or(tmp95, struct_Cf.cc);
        tmp96 = simd_andc(tmp32, tmp4);
        bytetest_f3 = simd_and(tmp79, tmp96);
        bytetest_a0 = simd_andc(tmp9, tmp43);
        bytetest_80 = simd_andc(tmp23, tmp43);
        bytetest_81_81 = simd_and(tmp23, tmp42);
        tmp97 = simd_and(tmp14, bytetest_f3);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(tmp97, carryQ.get_carry_in(18), tmp98));
        tmp99 = simd_and(tmp98, bytetest_a0);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(tmp99, carryQ.get_carry_in(19), tmp100));
        tmp101 = simd_and(tmp100, bytetest_80);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(tmp101, carryQ.get_carry_in(20), tmp102));
        tmp103 = simd_and(tmp102, bytetest_81_81);
        struct_Cf.cc = simd_or(tmp103, struct_Cf.cc);
        bytetest_f3 = simd_and(tmp79, tmp96);
        bytetest_a0 = simd_andc(tmp9, tmp43);
        bytetest_81 = simd_and(tmp23, tmp42);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp104 = simd_and(tmp100, bytetest_81);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(tmp104, carryQ.get_carry_in(21), tmp105));
        tmp106 = simd_and(tmp105, bytetest_80_bf);
        tmp107 = simd_andc(bytetest_80_bf, tmp2);
        bytetest_80 = simd_andc(tmp107, tmp43);
        bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp108 = simd_and(tmp102, bytetest_a0_bf);
        tmp109 = simd_or(tmp108, tmp106);
        struct_Cf.cc = simd_or(tmp109, struct_Cf.cc);
  }
  CarryArray<22, 0> carryQ;
  };

  struct Cs {
  Cs() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Cs & struct_Cs) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_ed, tmp7, bytetest_a0_bf;
		BitBlock bytetest_80_bf, tmp8, tmp9, tmp10, tmp11, tmp12, tmp13, tmp14;




        struct_Cs.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_and(tmp1, tmp2);
        tmp4 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp6 = simd_and(tmp4, tmp5);
        bytetest_ed = simd_and(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_a0_bf = simd_and(tmp7, basis_bits.bit_2);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp8, carryQ.get_carry_in(0), tmp9));
        tmp10 = simd_and(tmp9, bytetest_ed);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp10, carryQ.get_carry_in(1), tmp11));
        tmp12 = simd_and(tmp11, bytetest_a0_bf);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp12, carryQ.get_carry_in(2), tmp13));
        tmp14 = simd_and(tmp13, bytetest_80_bf);
        struct_Cs.cc = simd_or(tmp14, struct_Cs.cc);
        carryQ.CarryQ_Adjust(3);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Cs & struct_Cs, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_ed, tmp7, bytetest_a0_bf;
		BitBlock bytetest_80_bf, tmp8, tmp9, tmp10, tmp11, tmp12, tmp13, tmp14;




        struct_Cs.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_and(tmp1, tmp2);
        tmp4 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp6 = simd_and(tmp4, tmp5);
        bytetest_ed = simd_and(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_a0_bf = simd_and(tmp7, basis_bits.bit_2);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp8, carryQ.get_carry_in(0), tmp9));
        tmp10 = simd_and(tmp9, bytetest_ed);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp10, carryQ.get_carry_in(1), tmp11));
        tmp12 = simd_and(tmp11, bytetest_a0_bf);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp12, carryQ.get_carry_in(2), tmp13));
        tmp14 = simd_and(tmp13, bytetest_80_bf);
        struct_Cs.cc = simd_or(tmp14, struct_Cs.cc);
  }
  CarryArray<3, 0> carryQ;
  };

  struct Zp {
  Zp() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Zp & struct_Zp) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_e2, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, bytetest_80, tmp12, tmp13, tmp14, tmp15, bytetest_a9_a9;
		BitBlock tmp16, tmp17, tmp18, tmp19, tmp20, tmp21, tmp22;




        struct_Zp.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_and(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_andc(tmp5, tmp4);
        bytetest_e2 = simd_and(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp9 = simd_andc(tmp7, tmp8);
        tmp10 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp11 = simd_or(tmp4, tmp10);
        bytetest_80 = simd_andc(tmp9, tmp11);
        tmp12 = simd_and(tmp7, tmp2);
        tmp13 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp14 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp15 = simd_and(tmp13, tmp14);
        bytetest_a9_a9 = simd_and(tmp12, tmp15);
        tmp16 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp16, carryQ.get_carry_in(0), tmp17));
        tmp18 = simd_and(tmp17, bytetest_e2);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp18, carryQ.get_carry_in(1), tmp19));
        tmp20 = simd_and(tmp19, bytetest_80);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp20, carryQ.get_carry_in(2), tmp21));
        tmp22 = simd_and(tmp21, bytetest_a9_a9);
        struct_Zp.cc = simd_or(tmp22, struct_Zp.cc);
        carryQ.CarryQ_Adjust(3);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Zp & struct_Zp, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_e2, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, bytetest_80, tmp12, tmp13, tmp14, tmp15, bytetest_a9_a9;
		BitBlock tmp16, tmp17, tmp18, tmp19, tmp20, tmp21, tmp22;




        struct_Zp.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_and(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_andc(tmp5, tmp4);
        bytetest_e2 = simd_and(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp9 = simd_andc(tmp7, tmp8);
        tmp10 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp11 = simd_or(tmp4, tmp10);
        bytetest_80 = simd_andc(tmp9, tmp11);
        tmp12 = simd_and(tmp7, tmp2);
        tmp13 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp14 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp15 = simd_and(tmp13, tmp14);
        bytetest_a9_a9 = simd_and(tmp12, tmp15);
        tmp16 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp16, carryQ.get_carry_in(0), tmp17));
        tmp18 = simd_and(tmp17, bytetest_e2);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp18, carryQ.get_carry_in(1), tmp19));
        tmp20 = simd_and(tmp19, bytetest_80);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp20, carryQ.get_carry_in(2), tmp21));
        tmp22 = simd_and(tmp21, bytetest_a9_a9);
        struct_Zp.cc = simd_or(tmp22, struct_Zp.cc);
  }
  CarryArray<3, 0> carryQ;
  };

  struct Zs {
  Zs() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Zs & struct_Zs) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_20_20, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, bytetest_c2, tmp12, tmp13, bytetest_a0_a0, tmp14, tmp15;
		BitBlock tmp16, tmp17, tmp18, tmp19, tmp20, tmp21, bytetest_e1, tmp22, tmp23;
		BitBlock tmp24, tmp25, bytetest_9a, tmp26, bytetest_80_80, tmp27, tmp28, tmp29;
		BitBlock tmp30, tmp31, bytetest_e2, bytetest_80, tmp32, tmp33, tmp34;
		BitBlock bytetest_80_8a, tmp35, tmp36, tmp37, tmp38, tmp39, tmp40, tmp41;
		BitBlock bytetest_af_af, tmp42, bytetest_81, bytetest_9f_9f, tmp43, tmp44;
		BitBlock tmp45, tmp46, bytetest_e3, tmp47, tmp48, tmp49, tmp50, tmp51;




        struct_Zs.cc = simd<1>::constant<0>();
        tmp1 = simd_or(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp2, tmp1);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_or(tmp4, tmp5);
        bytetest_20_20 = simd_andc(tmp3, tmp6);
        struct_Zs.cc = simd_or(bytetest_20_20, struct_Zs.cc);
        tmp7 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp9 = simd_andc(tmp7, tmp8);
        tmp10 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp11 = simd_andc(tmp10, tmp4);
        bytetest_c2 = simd_and(tmp9, tmp11);
        tmp12 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp13 = simd_and(tmp12, tmp2);
        bytetest_a0_a0 = simd_andc(tmp13, tmp6);
        tmp14 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp14, carryQ.get_carry_in(0), tmp15));
        tmp16 = simd_and(tmp15, bytetest_c2);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp16, carryQ.get_carry_in(1), tmp17));
        tmp18 = simd_and(tmp17, bytetest_a0_a0);
        struct_Zs.cc = simd_or(tmp18, struct_Zs.cc);
        tmp19 = simd_and(tmp7, tmp2);
        tmp20 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp21 = simd_andc(tmp20, tmp4);
        bytetest_e1 = simd_and(tmp19, tmp21);
        tmp22 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp23 = simd_and(tmp12, tmp22);
        tmp24 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp25 = simd_and(tmp24, tmp10);
        bytetest_9a = simd_and(tmp23, tmp25);
        tmp26 = simd_andc(tmp12, tmp8);
        bytetest_80_80 = simd_andc(tmp26, tmp6);
        tmp27 = simd_and(tmp15, bytetest_e1);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp27, carryQ.get_carry_in(2), tmp28));
        tmp29 = simd_and(tmp28, bytetest_9a);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp29, carryQ.get_carry_in(3), tmp30));
        tmp31 = simd_and(tmp30, bytetest_80_80);
        struct_Zs.cc = simd_or(tmp31, struct_Zs.cc);
        bytetest_e2 = simd_and(tmp19, tmp11);
        bytetest_80 = simd_andc(tmp26, tmp6);
        tmp32 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp33 = simd_or(basis_bits.bit_5, tmp32);
        tmp34 = simd_and(basis_bits.bit_4, tmp33);
        bytetest_80_8a = simd_andc(tmp26, tmp34);
        tmp35 = simd_and(tmp15, bytetest_e2);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp35, carryQ.get_carry_in(4), tmp36));
        tmp37 = simd_and(tmp36, bytetest_80);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp37, carryQ.get_carry_in(5), tmp38));
        tmp39 = simd_and(tmp38, bytetest_80_8a);
        struct_Zs.cc = simd_or(tmp39, struct_Zs.cc);
        bytetest_e2 = simd_and(tmp19, tmp11);
        bytetest_80 = simd_andc(tmp26, tmp6);
        tmp40 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp41 = simd_and(tmp40, tmp32);
        bytetest_af_af = simd_and(tmp13, tmp41);
        tmp42 = simd_and(tmp38, bytetest_af_af);
        struct_Zs.cc = simd_or(tmp42, struct_Zs.cc);
        bytetest_e2 = simd_and(tmp19, tmp11);
        bytetest_81 = simd_and(tmp26, tmp21);
        bytetest_9f_9f = simd_and(tmp23, tmp41);
        tmp43 = simd_and(tmp36, bytetest_81);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp43, carryQ.get_carry_in(6), tmp44));
        tmp45 = simd_and(tmp44, bytetest_9f_9f);
        struct_Zs.cc = simd_or(tmp45, struct_Zs.cc);
        tmp46 = simd_andc(tmp32, tmp4);
        bytetest_e3 = simd_and(tmp19, tmp46);
        bytetest_80 = simd_andc(tmp26, tmp6);
        bytetest_80_80 = simd_andc(tmp26, tmp6);
        tmp47 = simd_and(tmp15, bytetest_e3);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp47, carryQ.get_carry_in(7), tmp48));
        tmp49 = simd_and(tmp48, bytetest_80);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(tmp49, carryQ.get_carry_in(8), tmp50));
        tmp51 = simd_and(tmp50, bytetest_80_80);
        struct_Zs.cc = simd_or(tmp51, struct_Zs.cc);
        carryQ.CarryQ_Adjust(9);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Zs & struct_Zs, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_20_20, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, bytetest_c2, tmp12, tmp13, bytetest_a0_a0, tmp14, tmp15;
		BitBlock tmp16, tmp17, tmp18, tmp19, tmp20, tmp21, bytetest_e1, tmp22, tmp23;
		BitBlock tmp24, tmp25, bytetest_9a, tmp26, bytetest_80_80, tmp27, tmp28, tmp29;
		BitBlock tmp30, tmp31, bytetest_e2, bytetest_80, tmp32, tmp33, tmp34;
		BitBlock bytetest_80_8a, tmp35, tmp36, tmp37, tmp38, tmp39, tmp40, tmp41;
		BitBlock bytetest_af_af, tmp42, bytetest_81, bytetest_9f_9f, tmp43, tmp44;
		BitBlock tmp45, tmp46, bytetest_e3, tmp47, tmp48, tmp49, tmp50, tmp51;




        struct_Zs.cc = simd<1>::constant<0>();
        tmp1 = simd_or(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp2, tmp1);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_or(tmp4, tmp5);
        bytetest_20_20 = simd_andc(tmp3, tmp6);
        struct_Zs.cc = simd_or(bytetest_20_20, struct_Zs.cc);
        tmp7 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp9 = simd_andc(tmp7, tmp8);
        tmp10 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp11 = simd_andc(tmp10, tmp4);
        bytetest_c2 = simd_and(tmp9, tmp11);
        tmp12 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp13 = simd_and(tmp12, tmp2);
        bytetest_a0_a0 = simd_andc(tmp13, tmp6);
        tmp14 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp14, carryQ.get_carry_in(0), tmp15));
        tmp16 = simd_and(tmp15, bytetest_c2);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp16, carryQ.get_carry_in(1), tmp17));
        tmp18 = simd_and(tmp17, bytetest_a0_a0);
        struct_Zs.cc = simd_or(tmp18, struct_Zs.cc);
        tmp19 = simd_and(tmp7, tmp2);
        tmp20 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp21 = simd_andc(tmp20, tmp4);
        bytetest_e1 = simd_and(tmp19, tmp21);
        tmp22 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp23 = simd_and(tmp12, tmp22);
        tmp24 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp25 = simd_and(tmp24, tmp10);
        bytetest_9a = simd_and(tmp23, tmp25);
        tmp26 = simd_andc(tmp12, tmp8);
        bytetest_80_80 = simd_andc(tmp26, tmp6);
        tmp27 = simd_and(tmp15, bytetest_e1);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp27, carryQ.get_carry_in(2), tmp28));
        tmp29 = simd_and(tmp28, bytetest_9a);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp29, carryQ.get_carry_in(3), tmp30));
        tmp31 = simd_and(tmp30, bytetest_80_80);
        struct_Zs.cc = simd_or(tmp31, struct_Zs.cc);
        bytetest_e2 = simd_and(tmp19, tmp11);
        bytetest_80 = simd_andc(tmp26, tmp6);
        tmp32 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp33 = simd_or(basis_bits.bit_5, tmp32);
        tmp34 = simd_and(basis_bits.bit_4, tmp33);
        bytetest_80_8a = simd_andc(tmp26, tmp34);
        tmp35 = simd_and(tmp15, bytetest_e2);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp35, carryQ.get_carry_in(4), tmp36));
        tmp37 = simd_and(tmp36, bytetest_80);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp37, carryQ.get_carry_in(5), tmp38));
        tmp39 = simd_and(tmp38, bytetest_80_8a);
        struct_Zs.cc = simd_or(tmp39, struct_Zs.cc);
        bytetest_e2 = simd_and(tmp19, tmp11);
        bytetest_80 = simd_andc(tmp26, tmp6);
        tmp40 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp41 = simd_and(tmp40, tmp32);
        bytetest_af_af = simd_and(tmp13, tmp41);
        tmp42 = simd_and(tmp38, bytetest_af_af);
        struct_Zs.cc = simd_or(tmp42, struct_Zs.cc);
        bytetest_e2 = simd_and(tmp19, tmp11);
        bytetest_81 = simd_and(tmp26, tmp21);
        bytetest_9f_9f = simd_and(tmp23, tmp41);
        tmp43 = simd_and(tmp36, bytetest_81);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp43, carryQ.get_carry_in(6), tmp44));
        tmp45 = simd_and(tmp44, bytetest_9f_9f);
        struct_Zs.cc = simd_or(tmp45, struct_Zs.cc);
        tmp46 = simd_andc(tmp32, tmp4);
        bytetest_e3 = simd_and(tmp19, tmp46);
        bytetest_80 = simd_andc(tmp26, tmp6);
        bytetest_80_80 = simd_andc(tmp26, tmp6);
        tmp47 = simd_and(tmp15, bytetest_e3);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp47, carryQ.get_carry_in(7), tmp48));
        tmp49 = simd_and(tmp48, bytetest_80);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(tmp49, carryQ.get_carry_in(8), tmp50));
        tmp51 = simd_and(tmp50, bytetest_80_80);
        struct_Zs.cc = simd_or(tmp51, struct_Zs.cc);
  }
  CarryArray<9, 0> carryQ;
  };



#endif // UNICODE_CATEGORIES_H

