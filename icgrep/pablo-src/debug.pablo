#
# Copyright (c) 2019 International Characters.
# This software is licensed to the public under the Open Software License 3.0.
# icgrep is a trademark of International Characters.
#

type BasisBits = <i1>[8]

#
# Applies a given mask to a set of basis bits.
#
# The result is a set of basis bits which, when converted back into a byte
# stream, will have a '.' character in every position where there is not a 1 bit
# in the mask.
#
# Note that line feeds ('\n') are also preserved.
#
# Example:
#   Input Byte Stream:  hello world!
#   Mask:               000000111110
#   Result Byte Stream: ......world.
#
kernel MaskBasisBits :: [BasisBits basisBits, <i1>[1] mask] -> [BasisBits masked] {
    or = basisBits[0] | basisBits[2] | basisBits[4] | basisBits[5] | basisBits[6] | basisBits[7]
    and = basisBits[1] & basisBits[3]
    lf = ~or & and
    m = mask[0] | lf

    maskedBB_0 = basisBits[0] & m
    maskedBB_1 = basisBits[1] & m
    maskedBB_2 = basisBits[2] & m
    maskedBB_3 = basisBits[3] & m
    maskedBB_4 = basisBits[4] & m
    maskedBB_5 = basisBits[5] & m
    maskedBB_6 = basisBits[6] & m
    maskedBB_7 = basisBits[7] & m
    
    x = ~(maskedBB_0 | maskedBB_1 | maskedBB_2 | maskedBB_3 | maskedBB_4 | maskedBB_5 | maskedBB_6 | maskedBB_7)

    # Determines which character is printed in the locations with 0 in the mask.
    # 
    # Related to the ASCII value in binary of the desired character where the
    # stream `x` represents a 1 bit.
    #   e.g., 0010 1110 = 0x2E = '.'
    masked[0] = maskedBB_0 | <0>
    masked[1] = maskedBB_1 |  x
    masked[2] = maskedBB_2 |  x
    masked[3] = maskedBB_3 |  x
    masked[4] = maskedBB_4 | <0>
    masked[5] = maskedBB_5 |  x
    masked[6] = maskedBB_6 | <0>
    masked[7] = maskedBB_7 | <0>
}
