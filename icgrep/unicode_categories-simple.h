/*
 *  Copyright (c) 2014 International Characters.
 *  This software is licensed to the public under the Open Software License 3.0.
 *  icgrep is a trademark of International Characters.
 *
 *  This is a generated file, produced by unicode_category_compiler.py.
 *  
 */

#ifndef UNICODE_CATEGORIES_H
#define UNICODE_CATEGORIES_H


#include "icgrep.h"

#define LocalCarryDeclare(name, count)\
CarryArray<count, 0> name;\



  struct Struct_Ps {
  BitBlock cc;
};

  struct Struct_Nl {
  BitBlock cc;
};

  struct Struct_No {
  BitBlock cc;
};

  struct Struct_Lo {
  BitBlock cc;
};

  struct Struct_Ll {
  BitBlock cc;
};

  struct Struct_Lm {
  BitBlock cc;
};

  struct Struct_Nd {
  BitBlock cc;
};

  struct Struct_Pc {
  BitBlock cc;
};

  struct Struct_Lt {
  BitBlock cc;
};

  struct Struct_Lu {
  BitBlock cc;
};

  struct Struct_Pf {
  BitBlock cc;
};

  struct Struct_Pd {
  BitBlock cc;
};

  struct Struct_Pe {
  BitBlock cc;
};

  struct Struct_Pi {
  BitBlock cc;
};

  struct Struct_Po {
  BitBlock cc;
};

  struct Struct_Me {
  BitBlock cc;
};

  struct Struct_Mc {
  BitBlock cc;
};

  struct Struct_Mn {
  BitBlock cc;
};

  struct Struct_Sk {
  BitBlock cc;
};

  struct Struct_So {
  BitBlock cc;
};

  struct Struct_Sm {
  BitBlock cc;
};

  struct Struct_Sc {
  BitBlock cc;
};

  struct Struct_Zl {
  BitBlock cc;
};

  struct Struct_Co {
  BitBlock cc;
};

  struct Struct_Cn {
  BitBlock cc;
};

  struct Struct_Cc {
  BitBlock cc;
};

  struct Struct_Cf {
  BitBlock cc;
};

  struct Struct_Cs {
  BitBlock cc;
};

  struct Struct_Zp {
  BitBlock cc;
};

  struct Struct_Zs {
  BitBlock cc;
};

  struct Ps {
  Ps() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Ps & struct_Ps) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_28_28, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, bytetest_5b_5b, tmp12, tmp13, bytetest_7b_7b, tmp14;
		BitBlock tmp15, tmp16, tmp17, bytetest_e1_ef, tmp18, tmp19, bytetest_e0, tmp20;
		BitBlock bytetest_a0_bf, tmp21, tmp22, tmp23, tmp24, tmp25, tmp26;
		BitBlock r800_ffff_tmp1, r800_ffff_tmp2, r800_ffff_tmp3, r800_ffff_tmp4;
		BitBlock r800_ffff_tmp5, r800_ffff_tmp6, r800_ffff_tmp7, r800_ffff_tmp8;
		BitBlock bytetest_bc, r800_ffff_tmp9, r800_ffff_tmp10, bytetest_ba_ba;
		BitBlock r800_ffff_tmp11, r800_ffff_tmp12, r800_ffff_tmp13, r800_ffff_tmp14;
		BitBlock r800_ffff_tmp15, r800_ffff_tmp16, r800_ffff_tmp17, bytetest_bc_bc;
		BitBlock r800_ffff_tmp18, r800_ffff_tmp19, r800_ffff_tmp20, bytetest_e1;
		BitBlock r800_ffff_tmp21, bytetest_9a, bytetest_9b_9b, r800_ffff_tmp22;
		BitBlock r800_ffff_tmp23, r800_ffff_tmp24, r800_ffff_tmp25, r800_ffff_tmp26;
		BitBlock r800_ffff_tmp27, bytetest_e2, r800_ffff_tmp28, r800_ffff_tmp29;
		BitBlock bytetest_80, bytetest_9a_9a, r800_ffff_tmp30, r800_ffff_tmp31;
		BitBlock r800_ffff_tmp32, r800_ffff_tmp33, r800_ffff_tmp34, r800_ffff_tmp35;
		BitBlock bytetest_9e_9e, r800_ffff_tmp36, bytetest_81, r800_ffff_tmp37;
		BitBlock r800_ffff_tmp38, bytetest_85_85, r800_ffff_tmp39, r800_ffff_tmp40;
		BitBlock r800_ffff_tmp41, r800_ffff_tmp42, bytetest_bd_bd, r800_ffff_tmp43;
		BitBlock bytetest_82, bytetest_8d_8d, r800_ffff_tmp44, r800_ffff_tmp45;
		BitBlock r800_ffff_tmp46, bytetest_8c, bytetest_88_88, r800_ffff_tmp47;
		BitBlock r800_ffff_tmp48, r800_ffff_tmp49, bytetest_8a_8a, r800_ffff_tmp50;
		BitBlock r800_ffff_tmp51, r800_ffff_tmp52, bytetest_a9_a9, r800_ffff_tmp53;
		BitBlock bytetest_9d, bytetest_a8_a8, r800_ffff_tmp54, r800_ffff_tmp55;
		BitBlock r800_ffff_tmp56, bytetest_aa_aa, r800_ffff_tmp57, bytetest_ac_ac;
		BitBlock r800_ffff_tmp58, bytetest_ae_ae, r800_ffff_tmp59, bytetest_b0_b0;
		BitBlock r800_ffff_tmp60, bytetest_b2_b2, r800_ffff_tmp61, r800_ffff_tmp62;
		BitBlock bytetest_b4_b4, r800_ffff_tmp63, r800_ffff_tmp64, bytetest_9f;
		BitBlock r800_ffff_tmp65, r800_ffff_tmp66, r800_ffff_tmp67, r800_ffff_tmp68;
		BitBlock bytetest_a6_a6, r800_ffff_tmp69, r800_ffff_tmp70, r800_ffff_tmp71;
		BitBlock r800_ffff_tmp72, r800_ffff_tmp73, bytetest_a6, r800_ffff_tmp74;
		BitBlock bytetest_83_83, r800_ffff_tmp75, r800_ffff_tmp76, r800_ffff_tmp77;
		BitBlock r800_ffff_tmp78, r800_ffff_tmp79, bytetest_87_87, r800_ffff_tmp80;
		BitBlock bytetest_89_89, r800_ffff_tmp81, bytetest_8b_8b, r800_ffff_tmp82;
		BitBlock r800_ffff_tmp83, bytetest_8f_8f, r800_ffff_tmp84, bytetest_91_91;
		BitBlock r800_ffff_tmp85, bytetest_93_93, r800_ffff_tmp86, bytetest_95_95;
		BitBlock r800_ffff_tmp87, bytetest_97_97, r800_ffff_tmp88, bytetest_a7;
		BitBlock bytetest_98_98, r800_ffff_tmp89, r800_ffff_tmp90, r800_ffff_tmp91;
		BitBlock r800_ffff_tmp92, r800_ffff_tmp93, bytetest_b8, bytetest_a2_a2;
		BitBlock r800_ffff_tmp94, r800_ffff_tmp95, r800_ffff_tmp96, bytetest_a4_a4;
		BitBlock r800_ffff_tmp97, r800_ffff_tmp98, r800_ffff_tmp99, bytetest_e3;
		BitBlock r800_ffff_tmp100, r800_ffff_tmp101, r800_ffff_tmp102;
		BitBlock r800_ffff_tmp103, r800_ffff_tmp104, r800_ffff_tmp105, bytetest_8c_8c;
		BitBlock r800_ffff_tmp106, bytetest_8e_8e, r800_ffff_tmp107, bytetest_90_90;
		BitBlock r800_ffff_tmp108, bytetest_94_94, r800_ffff_tmp109, bytetest_96_96;
		BitBlock r800_ffff_tmp110, r800_ffff_tmp111, r800_ffff_tmp112, bytetest_9d_9d;
		BitBlock r800_ffff_tmp113, bytetest_ef, bytetest_b4, bytetest_be_be;
		BitBlock r800_ffff_tmp114, r800_ffff_tmp115, r800_ffff_tmp116;
		BitBlock r800_ffff_tmp117, r800_ffff_tmp118, r800_ffff_tmp119;
		BitBlock r800_ffff_tmp120, r800_ffff_tmp121, bytetest_b5_b5, r800_ffff_tmp122;
		BitBlock bytetest_b7_b7, r800_ffff_tmp123, bytetest_b9_b9, r800_ffff_tmp124;
		BitBlock bytetest_bb_bb, r800_ffff_tmp125, r800_ffff_tmp126, bytetest_bf_bf;
		BitBlock r800_ffff_tmp127, bytetest_b9, bytetest_81_81, r800_ffff_tmp128;
		BitBlock r800_ffff_tmp129, r800_ffff_tmp130, r800_ffff_tmp131;
		BitBlock r800_ffff_tmp132, bytetest_99_99, r800_ffff_tmp133, r800_ffff_tmp134;
		BitBlock r800_ffff_tmp135, r800_ffff_tmp136, r800_ffff_tmp137;
		BitBlock r800_ffff_tmp138, r800_ffff_tmp139, bytetest_bd, r800_ffff_tmp140;
		BitBlock r800_ffff_tmp141, r800_ffff_tmp142, bytetest_9f_9f, r800_ffff_tmp143;
		BitBlock r800_ffff_tmp144;




        struct_Ps.cc = simd<1>::constant<0>();
        tmp1 = simd_or(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp2, tmp1);
        tmp4 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_andc(tmp4, tmp5);
        bytetest_28_28 = simd_and(tmp3, tmp6);
        struct_Ps.cc = simd_or(bytetest_28_28, struct_Ps.cc);
        tmp7 = simd_andc(basis_bits.bit_1, basis_bits.bit_0);
        tmp8 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp11 = simd_and(tmp4, tmp10);
        bytetest_5b_5b = simd_and(tmp9, tmp11);
        struct_Ps.cc = simd_or(bytetest_5b_5b, struct_Ps.cc);
        tmp12 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp13 = simd_and(tmp7, tmp12);
        bytetest_7b_7b = simd_and(tmp13, tmp11);
        struct_Ps.cc = simd_or(bytetest_7b_7b, struct_Ps.cc);
        tmp14 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp15 = simd_and(tmp14, tmp2);
        tmp16 = simd_or(basis_bits.bit_5, tmp5);
        tmp17 = simd_or(basis_bits.bit_4, tmp16);
        bytetest_e1_ef = simd_and(tmp15, tmp17);
        tmp18 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp19 = simd_or(tmp18, tmp5);
        bytetest_e0 = simd_andc(tmp15, tmp19);
        tmp20 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_a0_bf = simd_and(tmp20, basis_bits.bit_2);
        tmp21 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp21, carryQ.get_carry_in(0), tmp22));
        tmp23 = simd_and(tmp22, bytetest_e0);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp23, carryQ.get_carry_in(1), tmp24));
        tmp25 = simd_and(tmp24, bytetest_a0_bf);
        tmp26 = simd_or(tmp25, bytetest_e1_ef);
        if ((bitblock::any(tmp26) || carryQ.CarryTest(2, 23))) {
          r800_ffff_tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp2 = simd_and(r800_ffff_tmp1, tmp2);
          r800_ffff_tmp3 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
          r800_ffff_tmp4 = simd_or(r800_ffff_tmp3, tmp5);
          bytetest_e0 = simd_andc(r800_ffff_tmp2, r800_ffff_tmp4);
          r800_ffff_tmp5 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp6 = simd_and(r800_ffff_tmp5, tmp12);
          r800_ffff_tmp7 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
          r800_ffff_tmp8 = simd_andc(r800_ffff_tmp7, tmp5);
          bytetest_bc = simd_and(r800_ffff_tmp6, r800_ffff_tmp8);
          r800_ffff_tmp9 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp10 = simd_and(tmp4, r800_ffff_tmp9);
          bytetest_ba_ba = simd_and(r800_ffff_tmp6, r800_ffff_tmp10);
          r800_ffff_tmp11 = simd<1>::constant<1>();
          carryQ.cq[2] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp11, carryQ.get_carry_in(2), r800_ffff_tmp12));
          r800_ffff_tmp13 = simd_and(r800_ffff_tmp12, bytetest_e0);
          carryQ.cq[3] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp13, carryQ.get_carry_in(3), r800_ffff_tmp14));
          r800_ffff_tmp15 = simd_and(r800_ffff_tmp14, bytetest_bc);
          carryQ.cq[4] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp15, carryQ.get_carry_in(4), r800_ffff_tmp16));
          r800_ffff_tmp17 = simd_and(r800_ffff_tmp16, bytetest_ba_ba);
          struct_Ps.cc = simd_or(r800_ffff_tmp17, struct_Ps.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp2, r800_ffff_tmp4);
          bytetest_bc = simd_and(r800_ffff_tmp6, r800_ffff_tmp8);
          bytetest_bc_bc = simd_and(r800_ffff_tmp6, r800_ffff_tmp8);
          r800_ffff_tmp18 = simd_and(r800_ffff_tmp16, bytetest_bc_bc);
          struct_Ps.cc = simd_or(r800_ffff_tmp18, struct_Ps.cc);
          r800_ffff_tmp19 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
          r800_ffff_tmp20 = simd_andc(r800_ffff_tmp19, r800_ffff_tmp3);
          bytetest_e1 = simd_and(r800_ffff_tmp2, r800_ffff_tmp20);
          r800_ffff_tmp21 = simd_and(r800_ffff_tmp5, tmp8);
          bytetest_9a = simd_and(r800_ffff_tmp21, r800_ffff_tmp10);
          bytetest_9b_9b = simd_and(r800_ffff_tmp21, tmp11);
          r800_ffff_tmp22 = simd_and(r800_ffff_tmp12, bytetest_e1);
          carryQ.cq[5] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp22, carryQ.get_carry_in(5), r800_ffff_tmp23));
          r800_ffff_tmp24 = simd_and(r800_ffff_tmp23, bytetest_9a);
          carryQ.cq[6] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp24, carryQ.get_carry_in(6), r800_ffff_tmp25));
          r800_ffff_tmp26 = simd_and(r800_ffff_tmp25, bytetest_9b_9b);
          struct_Ps.cc = simd_or(r800_ffff_tmp26, struct_Ps.cc);
          r800_ffff_tmp27 = simd_andc(r800_ffff_tmp9, r800_ffff_tmp3);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          r800_ffff_tmp28 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp29 = simd_andc(r800_ffff_tmp5, r800_ffff_tmp28);
          bytetest_80 = simd_andc(r800_ffff_tmp29, r800_ffff_tmp4);
          bytetest_9a_9a = simd_and(r800_ffff_tmp21, r800_ffff_tmp10);
          r800_ffff_tmp30 = simd_and(r800_ffff_tmp12, bytetest_e2);
          carryQ.cq[7] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp30, carryQ.get_carry_in(7), r800_ffff_tmp31));
          r800_ffff_tmp32 = simd_and(r800_ffff_tmp31, bytetest_80);
          carryQ.cq[8] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp32, carryQ.get_carry_in(8), r800_ffff_tmp33));
          r800_ffff_tmp34 = simd_and(r800_ffff_tmp33, bytetest_9a_9a);
          struct_Ps.cc = simd_or(r800_ffff_tmp34, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_80 = simd_andc(r800_ffff_tmp29, r800_ffff_tmp4);
          r800_ffff_tmp35 = simd_and(r800_ffff_tmp7, r800_ffff_tmp9);
          bytetest_9e_9e = simd_and(r800_ffff_tmp21, r800_ffff_tmp35);
          r800_ffff_tmp36 = simd_and(r800_ffff_tmp33, bytetest_9e_9e);
          struct_Ps.cc = simd_or(r800_ffff_tmp36, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_81 = simd_and(r800_ffff_tmp29, r800_ffff_tmp20);
          r800_ffff_tmp37 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
          r800_ffff_tmp38 = simd_and(r800_ffff_tmp37, r800_ffff_tmp19);
          bytetest_85_85 = simd_and(r800_ffff_tmp29, r800_ffff_tmp38);
          r800_ffff_tmp39 = simd_and(r800_ffff_tmp31, bytetest_81);
          carryQ.cq[9] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp39, carryQ.get_carry_in(9), r800_ffff_tmp40));
          r800_ffff_tmp41 = simd_and(r800_ffff_tmp40, bytetest_85_85);
          struct_Ps.cc = simd_or(r800_ffff_tmp41, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_81 = simd_and(r800_ffff_tmp29, r800_ffff_tmp20);
          r800_ffff_tmp42 = simd_and(r800_ffff_tmp7, r800_ffff_tmp19);
          bytetest_bd_bd = simd_and(r800_ffff_tmp6, r800_ffff_tmp42);
          r800_ffff_tmp43 = simd_and(r800_ffff_tmp40, bytetest_bd_bd);
          struct_Ps.cc = simd_or(r800_ffff_tmp43, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_82 = simd_and(r800_ffff_tmp29, r800_ffff_tmp27);
          bytetest_8d_8d = simd_and(r800_ffff_tmp29, r800_ffff_tmp42);
          r800_ffff_tmp44 = simd_and(r800_ffff_tmp31, bytetest_82);
          carryQ.cq[10] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp44, carryQ.get_carry_in(10), r800_ffff_tmp45));
          r800_ffff_tmp46 = simd_and(r800_ffff_tmp45, bytetest_8d_8d);
          struct_Ps.cc = simd_or(r800_ffff_tmp46, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_8c = simd_and(r800_ffff_tmp29, r800_ffff_tmp8);
          bytetest_88_88 = simd_and(r800_ffff_tmp29, tmp6);
          r800_ffff_tmp47 = simd_and(r800_ffff_tmp31, bytetest_8c);
          carryQ.cq[11] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp47, carryQ.get_carry_in(11), r800_ffff_tmp48));
          r800_ffff_tmp49 = simd_and(r800_ffff_tmp48, bytetest_88_88);
          struct_Ps.cc = simd_or(r800_ffff_tmp49, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_8c = simd_and(r800_ffff_tmp29, r800_ffff_tmp8);
          bytetest_8a_8a = simd_and(r800_ffff_tmp29, r800_ffff_tmp10);
          r800_ffff_tmp50 = simd_and(r800_ffff_tmp48, bytetest_8a_8a);
          struct_Ps.cc = simd_or(r800_ffff_tmp50, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_8c = simd_and(r800_ffff_tmp29, r800_ffff_tmp8);
          r800_ffff_tmp51 = simd_and(r800_ffff_tmp5, tmp2);
          r800_ffff_tmp52 = simd_and(tmp4, r800_ffff_tmp19);
          bytetest_a9_a9 = simd_and(r800_ffff_tmp51, r800_ffff_tmp52);
          r800_ffff_tmp53 = simd_and(r800_ffff_tmp48, bytetest_a9_a9);
          struct_Ps.cc = simd_or(r800_ffff_tmp53, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_9d = simd_and(r800_ffff_tmp21, r800_ffff_tmp42);
          bytetest_a8_a8 = simd_and(r800_ffff_tmp51, tmp6);
          r800_ffff_tmp54 = simd_and(r800_ffff_tmp31, bytetest_9d);
          carryQ.cq[12] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp54, carryQ.get_carry_in(12), r800_ffff_tmp55));
          r800_ffff_tmp56 = simd_and(r800_ffff_tmp55, bytetest_a8_a8);
          struct_Ps.cc = simd_or(r800_ffff_tmp56, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_9d = simd_and(r800_ffff_tmp21, r800_ffff_tmp42);
          bytetest_aa_aa = simd_and(r800_ffff_tmp51, r800_ffff_tmp10);
          r800_ffff_tmp57 = simd_and(r800_ffff_tmp55, bytetest_aa_aa);
          struct_Ps.cc = simd_or(r800_ffff_tmp57, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_9d = simd_and(r800_ffff_tmp21, r800_ffff_tmp42);
          bytetest_ac_ac = simd_and(r800_ffff_tmp51, r800_ffff_tmp8);
          r800_ffff_tmp58 = simd_and(r800_ffff_tmp55, bytetest_ac_ac);
          struct_Ps.cc = simd_or(r800_ffff_tmp58, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_9d = simd_and(r800_ffff_tmp21, r800_ffff_tmp42);
          bytetest_ae_ae = simd_and(r800_ffff_tmp51, r800_ffff_tmp35);
          r800_ffff_tmp59 = simd_and(r800_ffff_tmp55, bytetest_ae_ae);
          struct_Ps.cc = simd_or(r800_ffff_tmp59, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_9d = simd_and(r800_ffff_tmp21, r800_ffff_tmp42);
          bytetest_b0_b0 = simd_andc(r800_ffff_tmp6, r800_ffff_tmp4);
          r800_ffff_tmp60 = simd_and(r800_ffff_tmp55, bytetest_b0_b0);
          struct_Ps.cc = simd_or(r800_ffff_tmp60, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_9d = simd_and(r800_ffff_tmp21, r800_ffff_tmp42);
          bytetest_b2_b2 = simd_and(r800_ffff_tmp6, r800_ffff_tmp27);
          r800_ffff_tmp61 = simd_and(r800_ffff_tmp55, bytetest_b2_b2);
          struct_Ps.cc = simd_or(r800_ffff_tmp61, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_9d = simd_and(r800_ffff_tmp21, r800_ffff_tmp42);
          r800_ffff_tmp62 = simd_andc(r800_ffff_tmp37, tmp5);
          bytetest_b4_b4 = simd_and(r800_ffff_tmp6, r800_ffff_tmp62);
          r800_ffff_tmp63 = simd_and(r800_ffff_tmp55, bytetest_b4_b4);
          struct_Ps.cc = simd_or(r800_ffff_tmp63, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          r800_ffff_tmp64 = simd_and(r800_ffff_tmp7, tmp10);
          bytetest_9f = simd_and(r800_ffff_tmp21, r800_ffff_tmp64);
          bytetest_85_85 = simd_and(r800_ffff_tmp29, r800_ffff_tmp38);
          r800_ffff_tmp65 = simd_and(r800_ffff_tmp31, bytetest_9f);
          carryQ.cq[13] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp65, carryQ.get_carry_in(13), r800_ffff_tmp66));
          r800_ffff_tmp67 = simd_and(r800_ffff_tmp66, bytetest_85_85);
          struct_Ps.cc = simd_or(r800_ffff_tmp67, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_9f = simd_and(r800_ffff_tmp21, r800_ffff_tmp64);
          r800_ffff_tmp68 = simd_and(r800_ffff_tmp37, r800_ffff_tmp9);
          bytetest_a6_a6 = simd_and(r800_ffff_tmp51, r800_ffff_tmp68);
          r800_ffff_tmp69 = simd_and(r800_ffff_tmp66, bytetest_a6_a6);
          struct_Ps.cc = simd_or(r800_ffff_tmp69, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_9f = simd_and(r800_ffff_tmp21, r800_ffff_tmp64);
          bytetest_a8_a8 = simd_and(r800_ffff_tmp51, tmp6);
          r800_ffff_tmp70 = simd_and(r800_ffff_tmp66, bytetest_a8_a8);
          struct_Ps.cc = simd_or(r800_ffff_tmp70, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_9f = simd_and(r800_ffff_tmp21, r800_ffff_tmp64);
          bytetest_aa_aa = simd_and(r800_ffff_tmp51, r800_ffff_tmp10);
          r800_ffff_tmp71 = simd_and(r800_ffff_tmp66, bytetest_aa_aa);
          struct_Ps.cc = simd_or(r800_ffff_tmp71, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_9f = simd_and(r800_ffff_tmp21, r800_ffff_tmp64);
          bytetest_ac_ac = simd_and(r800_ffff_tmp51, r800_ffff_tmp8);
          r800_ffff_tmp72 = simd_and(r800_ffff_tmp66, bytetest_ac_ac);
          struct_Ps.cc = simd_or(r800_ffff_tmp72, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_9f = simd_and(r800_ffff_tmp21, r800_ffff_tmp64);
          bytetest_ae_ae = simd_and(r800_ffff_tmp51, r800_ffff_tmp35);
          r800_ffff_tmp73 = simd_and(r800_ffff_tmp66, bytetest_ae_ae);
          struct_Ps.cc = simd_or(r800_ffff_tmp73, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_a6 = simd_and(r800_ffff_tmp51, r800_ffff_tmp68);
          r800_ffff_tmp74 = simd_andc(tmp10, r800_ffff_tmp3);
          bytetest_83_83 = simd_and(r800_ffff_tmp29, r800_ffff_tmp74);
          r800_ffff_tmp75 = simd_and(r800_ffff_tmp31, bytetest_a6);
          carryQ.cq[14] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp75, carryQ.get_carry_in(14), r800_ffff_tmp76));
          r800_ffff_tmp77 = simd_and(r800_ffff_tmp76, bytetest_83_83);
          struct_Ps.cc = simd_or(r800_ffff_tmp77, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_a6 = simd_and(r800_ffff_tmp51, r800_ffff_tmp68);
          bytetest_85_85 = simd_and(r800_ffff_tmp29, r800_ffff_tmp38);
          r800_ffff_tmp78 = simd_and(r800_ffff_tmp76, bytetest_85_85);
          struct_Ps.cc = simd_or(r800_ffff_tmp78, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_a6 = simd_and(r800_ffff_tmp51, r800_ffff_tmp68);
          r800_ffff_tmp79 = simd_and(r800_ffff_tmp37, tmp10);
          bytetest_87_87 = simd_and(r800_ffff_tmp29, r800_ffff_tmp79);
          r800_ffff_tmp80 = simd_and(r800_ffff_tmp76, bytetest_87_87);
          struct_Ps.cc = simd_or(r800_ffff_tmp80, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_a6 = simd_and(r800_ffff_tmp51, r800_ffff_tmp68);
          bytetest_89_89 = simd_and(r800_ffff_tmp29, r800_ffff_tmp52);
          r800_ffff_tmp81 = simd_and(r800_ffff_tmp76, bytetest_89_89);
          struct_Ps.cc = simd_or(r800_ffff_tmp81, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_a6 = simd_and(r800_ffff_tmp51, r800_ffff_tmp68);
          bytetest_8b_8b = simd_and(r800_ffff_tmp29, tmp11);
          r800_ffff_tmp82 = simd_and(r800_ffff_tmp76, bytetest_8b_8b);
          struct_Ps.cc = simd_or(r800_ffff_tmp82, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_a6 = simd_and(r800_ffff_tmp51, r800_ffff_tmp68);
          bytetest_8d_8d = simd_and(r800_ffff_tmp29, r800_ffff_tmp42);
          r800_ffff_tmp83 = simd_and(r800_ffff_tmp76, bytetest_8d_8d);
          struct_Ps.cc = simd_or(r800_ffff_tmp83, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_a6 = simd_and(r800_ffff_tmp51, r800_ffff_tmp68);
          bytetest_8f_8f = simd_and(r800_ffff_tmp29, r800_ffff_tmp64);
          r800_ffff_tmp84 = simd_and(r800_ffff_tmp76, bytetest_8f_8f);
          struct_Ps.cc = simd_or(r800_ffff_tmp84, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_a6 = simd_and(r800_ffff_tmp51, r800_ffff_tmp68);
          bytetest_91_91 = simd_and(r800_ffff_tmp21, r800_ffff_tmp20);
          r800_ffff_tmp85 = simd_and(r800_ffff_tmp76, bytetest_91_91);
          struct_Ps.cc = simd_or(r800_ffff_tmp85, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_a6 = simd_and(r800_ffff_tmp51, r800_ffff_tmp68);
          bytetest_93_93 = simd_and(r800_ffff_tmp21, r800_ffff_tmp74);
          r800_ffff_tmp86 = simd_and(r800_ffff_tmp76, bytetest_93_93);
          struct_Ps.cc = simd_or(r800_ffff_tmp86, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_a6 = simd_and(r800_ffff_tmp51, r800_ffff_tmp68);
          bytetest_95_95 = simd_and(r800_ffff_tmp21, r800_ffff_tmp38);
          r800_ffff_tmp87 = simd_and(r800_ffff_tmp76, bytetest_95_95);
          struct_Ps.cc = simd_or(r800_ffff_tmp87, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_a6 = simd_and(r800_ffff_tmp51, r800_ffff_tmp68);
          bytetest_97_97 = simd_and(r800_ffff_tmp21, r800_ffff_tmp79);
          r800_ffff_tmp88 = simd_and(r800_ffff_tmp76, bytetest_97_97);
          struct_Ps.cc = simd_or(r800_ffff_tmp88, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_a7 = simd_and(r800_ffff_tmp51, r800_ffff_tmp79);
          bytetest_98_98 = simd_and(r800_ffff_tmp21, tmp6);
          r800_ffff_tmp89 = simd_and(r800_ffff_tmp31, bytetest_a7);
          carryQ.cq[15] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp89, carryQ.get_carry_in(15), r800_ffff_tmp90));
          r800_ffff_tmp91 = simd_and(r800_ffff_tmp90, bytetest_98_98);
          struct_Ps.cc = simd_or(r800_ffff_tmp91, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_a7 = simd_and(r800_ffff_tmp51, r800_ffff_tmp79);
          bytetest_9a_9a = simd_and(r800_ffff_tmp21, r800_ffff_tmp10);
          r800_ffff_tmp92 = simd_and(r800_ffff_tmp90, bytetest_9a_9a);
          struct_Ps.cc = simd_or(r800_ffff_tmp92, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_a7 = simd_and(r800_ffff_tmp51, r800_ffff_tmp79);
          bytetest_bc_bc = simd_and(r800_ffff_tmp6, r800_ffff_tmp8);
          r800_ffff_tmp93 = simd_and(r800_ffff_tmp90, bytetest_bc_bc);
          struct_Ps.cc = simd_or(r800_ffff_tmp93, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_b8 = simd_and(r800_ffff_tmp6, tmp6);
          bytetest_a2_a2 = simd_and(r800_ffff_tmp51, r800_ffff_tmp27);
          r800_ffff_tmp94 = simd_and(r800_ffff_tmp31, bytetest_b8);
          carryQ.cq[16] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp94, carryQ.get_carry_in(16), r800_ffff_tmp95));
          r800_ffff_tmp96 = simd_and(r800_ffff_tmp95, bytetest_a2_a2);
          struct_Ps.cc = simd_or(r800_ffff_tmp96, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_b8 = simd_and(r800_ffff_tmp6, tmp6);
          bytetest_a4_a4 = simd_and(r800_ffff_tmp51, r800_ffff_tmp62);
          r800_ffff_tmp97 = simd_and(r800_ffff_tmp95, bytetest_a4_a4);
          struct_Ps.cc = simd_or(r800_ffff_tmp97, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_b8 = simd_and(r800_ffff_tmp6, tmp6);
          bytetest_a6_a6 = simd_and(r800_ffff_tmp51, r800_ffff_tmp68);
          r800_ffff_tmp98 = simd_and(r800_ffff_tmp95, bytetest_a6_a6);
          struct_Ps.cc = simd_or(r800_ffff_tmp98, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_b8 = simd_and(r800_ffff_tmp6, tmp6);
          bytetest_a8_a8 = simd_and(r800_ffff_tmp51, tmp6);
          r800_ffff_tmp99 = simd_and(r800_ffff_tmp95, bytetest_a8_a8);
          struct_Ps.cc = simd_or(r800_ffff_tmp99, struct_Ps.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp74);
          bytetest_80 = simd_andc(r800_ffff_tmp29, r800_ffff_tmp4);
          bytetest_88_88 = simd_and(r800_ffff_tmp29, tmp6);
          r800_ffff_tmp100 = simd_and(r800_ffff_tmp12, bytetest_e3);
          carryQ.cq[17] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp100, carryQ.get_carry_in(17), r800_ffff_tmp101));
          r800_ffff_tmp102 = simd_and(r800_ffff_tmp101, bytetest_80);
          carryQ.cq[18] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp102, carryQ.get_carry_in(18), r800_ffff_tmp103));
          r800_ffff_tmp104 = simd_and(r800_ffff_tmp103, bytetest_88_88);
          struct_Ps.cc = simd_or(r800_ffff_tmp104, struct_Ps.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp74);
          bytetest_80 = simd_andc(r800_ffff_tmp29, r800_ffff_tmp4);
          bytetest_8a_8a = simd_and(r800_ffff_tmp29, r800_ffff_tmp10);
          r800_ffff_tmp105 = simd_and(r800_ffff_tmp103, bytetest_8a_8a);
          struct_Ps.cc = simd_or(r800_ffff_tmp105, struct_Ps.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp74);
          bytetest_80 = simd_andc(r800_ffff_tmp29, r800_ffff_tmp4);
          bytetest_8c_8c = simd_and(r800_ffff_tmp29, r800_ffff_tmp8);
          r800_ffff_tmp106 = simd_and(r800_ffff_tmp103, bytetest_8c_8c);
          struct_Ps.cc = simd_or(r800_ffff_tmp106, struct_Ps.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp74);
          bytetest_80 = simd_andc(r800_ffff_tmp29, r800_ffff_tmp4);
          bytetest_8e_8e = simd_and(r800_ffff_tmp29, r800_ffff_tmp35);
          r800_ffff_tmp107 = simd_and(r800_ffff_tmp103, bytetest_8e_8e);
          struct_Ps.cc = simd_or(r800_ffff_tmp107, struct_Ps.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp74);
          bytetest_80 = simd_andc(r800_ffff_tmp29, r800_ffff_tmp4);
          bytetest_90_90 = simd_andc(r800_ffff_tmp21, r800_ffff_tmp4);
          r800_ffff_tmp108 = simd_and(r800_ffff_tmp103, bytetest_90_90);
          struct_Ps.cc = simd_or(r800_ffff_tmp108, struct_Ps.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp74);
          bytetest_80 = simd_andc(r800_ffff_tmp29, r800_ffff_tmp4);
          bytetest_94_94 = simd_and(r800_ffff_tmp21, r800_ffff_tmp62);
          r800_ffff_tmp109 = simd_and(r800_ffff_tmp103, bytetest_94_94);
          struct_Ps.cc = simd_or(r800_ffff_tmp109, struct_Ps.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp74);
          bytetest_80 = simd_andc(r800_ffff_tmp29, r800_ffff_tmp4);
          bytetest_96_96 = simd_and(r800_ffff_tmp21, r800_ffff_tmp68);
          r800_ffff_tmp110 = simd_and(r800_ffff_tmp103, bytetest_96_96);
          struct_Ps.cc = simd_or(r800_ffff_tmp110, struct_Ps.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp74);
          bytetest_80 = simd_andc(r800_ffff_tmp29, r800_ffff_tmp4);
          bytetest_98_98 = simd_and(r800_ffff_tmp21, tmp6);
          r800_ffff_tmp111 = simd_and(r800_ffff_tmp103, bytetest_98_98);
          struct_Ps.cc = simd_or(r800_ffff_tmp111, struct_Ps.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp74);
          bytetest_80 = simd_andc(r800_ffff_tmp29, r800_ffff_tmp4);
          bytetest_9a_9a = simd_and(r800_ffff_tmp21, r800_ffff_tmp10);
          r800_ffff_tmp112 = simd_and(r800_ffff_tmp103, bytetest_9a_9a);
          struct_Ps.cc = simd_or(r800_ffff_tmp112, struct_Ps.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp74);
          bytetest_80 = simd_andc(r800_ffff_tmp29, r800_ffff_tmp4);
          bytetest_9d_9d = simd_and(r800_ffff_tmp21, r800_ffff_tmp42);
          r800_ffff_tmp113 = simd_and(r800_ffff_tmp103, bytetest_9d_9d);
          struct_Ps.cc = simd_or(r800_ffff_tmp113, struct_Ps.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp64);
          bytetest_b4 = simd_and(r800_ffff_tmp6, r800_ffff_tmp62);
          bytetest_be_be = simd_and(r800_ffff_tmp6, r800_ffff_tmp35);
          r800_ffff_tmp114 = simd_and(r800_ffff_tmp12, bytetest_ef);
          carryQ.cq[19] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp114, carryQ.get_carry_in(19), r800_ffff_tmp115));
          r800_ffff_tmp116 = simd_and(r800_ffff_tmp115, bytetest_b4);
          carryQ.cq[20] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp116, carryQ.get_carry_in(20), r800_ffff_tmp117));
          r800_ffff_tmp118 = simd_and(r800_ffff_tmp117, bytetest_be_be);
          struct_Ps.cc = simd_or(r800_ffff_tmp118, struct_Ps.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp64);
          bytetest_b8 = simd_and(r800_ffff_tmp6, tmp6);
          bytetest_97_97 = simd_and(r800_ffff_tmp21, r800_ffff_tmp79);
          r800_ffff_tmp119 = simd_and(r800_ffff_tmp115, bytetest_b8);
          carryQ.cq[21] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp119, carryQ.get_carry_in(21), r800_ffff_tmp120));
          r800_ffff_tmp121 = simd_and(r800_ffff_tmp120, bytetest_97_97);
          struct_Ps.cc = simd_or(r800_ffff_tmp121, struct_Ps.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp64);
          bytetest_b8 = simd_and(r800_ffff_tmp6, tmp6);
          bytetest_b5_b5 = simd_and(r800_ffff_tmp6, r800_ffff_tmp38);
          r800_ffff_tmp122 = simd_and(r800_ffff_tmp120, bytetest_b5_b5);
          struct_Ps.cc = simd_or(r800_ffff_tmp122, struct_Ps.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp64);
          bytetest_b8 = simd_and(r800_ffff_tmp6, tmp6);
          bytetest_b7_b7 = simd_and(r800_ffff_tmp6, r800_ffff_tmp79);
          r800_ffff_tmp123 = simd_and(r800_ffff_tmp120, bytetest_b7_b7);
          struct_Ps.cc = simd_or(r800_ffff_tmp123, struct_Ps.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp64);
          bytetest_b8 = simd_and(r800_ffff_tmp6, tmp6);
          bytetest_b9_b9 = simd_and(r800_ffff_tmp6, r800_ffff_tmp52);
          r800_ffff_tmp124 = simd_and(r800_ffff_tmp120, bytetest_b9_b9);
          struct_Ps.cc = simd_or(r800_ffff_tmp124, struct_Ps.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp64);
          bytetest_b8 = simd_and(r800_ffff_tmp6, tmp6);
          bytetest_bb_bb = simd_and(r800_ffff_tmp6, tmp11);
          r800_ffff_tmp125 = simd_and(r800_ffff_tmp120, bytetest_bb_bb);
          struct_Ps.cc = simd_or(r800_ffff_tmp125, struct_Ps.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp64);
          bytetest_b8 = simd_and(r800_ffff_tmp6, tmp6);
          bytetest_bd_bd = simd_and(r800_ffff_tmp6, r800_ffff_tmp42);
          r800_ffff_tmp126 = simd_and(r800_ffff_tmp120, bytetest_bd_bd);
          struct_Ps.cc = simd_or(r800_ffff_tmp126, struct_Ps.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp64);
          bytetest_b8 = simd_and(r800_ffff_tmp6, tmp6);
          bytetest_bf_bf = simd_and(r800_ffff_tmp6, r800_ffff_tmp64);
          r800_ffff_tmp127 = simd_and(r800_ffff_tmp120, bytetest_bf_bf);
          struct_Ps.cc = simd_or(r800_ffff_tmp127, struct_Ps.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp64);
          bytetest_b9 = simd_and(r800_ffff_tmp6, r800_ffff_tmp52);
          bytetest_81_81 = simd_and(r800_ffff_tmp29, r800_ffff_tmp20);
          r800_ffff_tmp128 = simd_and(r800_ffff_tmp115, bytetest_b9);
          carryQ.cq[22] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp128, carryQ.get_carry_in(22), r800_ffff_tmp129));
          r800_ffff_tmp130 = simd_and(r800_ffff_tmp129, bytetest_81_81);
          struct_Ps.cc = simd_or(r800_ffff_tmp130, struct_Ps.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp64);
          bytetest_b9 = simd_and(r800_ffff_tmp6, r800_ffff_tmp52);
          bytetest_83_83 = simd_and(r800_ffff_tmp29, r800_ffff_tmp74);
          r800_ffff_tmp131 = simd_and(r800_ffff_tmp129, bytetest_83_83);
          struct_Ps.cc = simd_or(r800_ffff_tmp131, struct_Ps.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp64);
          bytetest_b9 = simd_and(r800_ffff_tmp6, r800_ffff_tmp52);
          bytetest_87_87 = simd_and(r800_ffff_tmp29, r800_ffff_tmp79);
          r800_ffff_tmp132 = simd_and(r800_ffff_tmp129, bytetest_87_87);
          struct_Ps.cc = simd_or(r800_ffff_tmp132, struct_Ps.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp64);
          bytetest_b9 = simd_and(r800_ffff_tmp6, r800_ffff_tmp52);
          bytetest_99_99 = simd_and(r800_ffff_tmp21, r800_ffff_tmp52);
          r800_ffff_tmp133 = simd_and(r800_ffff_tmp129, bytetest_99_99);
          struct_Ps.cc = simd_or(r800_ffff_tmp133, struct_Ps.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp64);
          bytetest_b9 = simd_and(r800_ffff_tmp6, r800_ffff_tmp52);
          bytetest_9b_9b = simd_and(r800_ffff_tmp21, tmp11);
          r800_ffff_tmp134 = simd_and(r800_ffff_tmp129, bytetest_9b_9b);
          struct_Ps.cc = simd_or(r800_ffff_tmp134, struct_Ps.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp64);
          bytetest_b9 = simd_and(r800_ffff_tmp6, r800_ffff_tmp52);
          bytetest_9d_9d = simd_and(r800_ffff_tmp21, r800_ffff_tmp42);
          r800_ffff_tmp135 = simd_and(r800_ffff_tmp129, bytetest_9d_9d);
          struct_Ps.cc = simd_or(r800_ffff_tmp135, struct_Ps.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp64);
          bytetest_bc = simd_and(r800_ffff_tmp6, r800_ffff_tmp8);
          bytetest_88_88 = simd_and(r800_ffff_tmp29, tmp6);
          r800_ffff_tmp136 = simd_and(r800_ffff_tmp115, bytetest_bc);
          carryQ.cq[23] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp136, carryQ.get_carry_in(23), r800_ffff_tmp137));
          r800_ffff_tmp138 = simd_and(r800_ffff_tmp137, bytetest_88_88);
          struct_Ps.cc = simd_or(r800_ffff_tmp138, struct_Ps.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp64);
          bytetest_bc = simd_and(r800_ffff_tmp6, r800_ffff_tmp8);
          bytetest_bb_bb = simd_and(r800_ffff_tmp6, tmp11);
          r800_ffff_tmp139 = simd_and(r800_ffff_tmp137, bytetest_bb_bb);
          struct_Ps.cc = simd_or(r800_ffff_tmp139, struct_Ps.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp64);
          bytetest_bd = simd_and(r800_ffff_tmp6, r800_ffff_tmp42);
          bytetest_9b_9b = simd_and(r800_ffff_tmp21, tmp11);
          r800_ffff_tmp140 = simd_and(r800_ffff_tmp115, bytetest_bd);
          carryQ.cq[24] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp140, carryQ.get_carry_in(24), r800_ffff_tmp141));
          r800_ffff_tmp142 = simd_and(r800_ffff_tmp141, bytetest_9b_9b);
          struct_Ps.cc = simd_or(r800_ffff_tmp142, struct_Ps.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp64);
          bytetest_bd = simd_and(r800_ffff_tmp6, r800_ffff_tmp42);
          bytetest_9f_9f = simd_and(r800_ffff_tmp21, r800_ffff_tmp64);
          r800_ffff_tmp143 = simd_and(r800_ffff_tmp141, bytetest_9f_9f);
          struct_Ps.cc = simd_or(r800_ffff_tmp143, struct_Ps.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp64);
          bytetest_bd = simd_and(r800_ffff_tmp6, r800_ffff_tmp42);
          bytetest_a2_a2 = simd_and(r800_ffff_tmp51, r800_ffff_tmp27);
          r800_ffff_tmp144 = simd_and(r800_ffff_tmp141, bytetest_a2_a2);
          struct_Ps.cc = simd_or(r800_ffff_tmp144, struct_Ps.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(2, 23);
        }
        carryQ.CarryQ_Adjust(25);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Ps & struct_Ps, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_28_28, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, bytetest_5b_5b, tmp12, tmp13, bytetest_7b_7b, tmp14;
		BitBlock tmp15, tmp16, tmp17, bytetest_e1_ef, tmp18, tmp19, bytetest_e0, tmp20;
		BitBlock bytetest_a0_bf, tmp21, tmp22, tmp23, tmp24, tmp25, tmp26;
		BitBlock r800_ffff_tmp1, r800_ffff_tmp2, r800_ffff_tmp3, r800_ffff_tmp4;
		BitBlock r800_ffff_tmp5, r800_ffff_tmp6, r800_ffff_tmp7, r800_ffff_tmp8;
		BitBlock bytetest_bc, r800_ffff_tmp9, r800_ffff_tmp10, bytetest_ba_ba;
		BitBlock r800_ffff_tmp11, r800_ffff_tmp12, r800_ffff_tmp13, r800_ffff_tmp14;
		BitBlock r800_ffff_tmp15, r800_ffff_tmp16, r800_ffff_tmp17, bytetest_bc_bc;
		BitBlock r800_ffff_tmp18, r800_ffff_tmp19, r800_ffff_tmp20, bytetest_e1;
		BitBlock r800_ffff_tmp21, bytetest_9a, bytetest_9b_9b, r800_ffff_tmp22;
		BitBlock r800_ffff_tmp23, r800_ffff_tmp24, r800_ffff_tmp25, r800_ffff_tmp26;
		BitBlock r800_ffff_tmp27, bytetest_e2, r800_ffff_tmp28, r800_ffff_tmp29;
		BitBlock bytetest_80, bytetest_9a_9a, r800_ffff_tmp30, r800_ffff_tmp31;
		BitBlock r800_ffff_tmp32, r800_ffff_tmp33, r800_ffff_tmp34, r800_ffff_tmp35;
		BitBlock bytetest_9e_9e, r800_ffff_tmp36, bytetest_81, r800_ffff_tmp37;
		BitBlock r800_ffff_tmp38, bytetest_85_85, r800_ffff_tmp39, r800_ffff_tmp40;
		BitBlock r800_ffff_tmp41, r800_ffff_tmp42, bytetest_bd_bd, r800_ffff_tmp43;
		BitBlock bytetest_82, bytetest_8d_8d, r800_ffff_tmp44, r800_ffff_tmp45;
		BitBlock r800_ffff_tmp46, bytetest_8c, bytetest_88_88, r800_ffff_tmp47;
		BitBlock r800_ffff_tmp48, r800_ffff_tmp49, bytetest_8a_8a, r800_ffff_tmp50;
		BitBlock r800_ffff_tmp51, r800_ffff_tmp52, bytetest_a9_a9, r800_ffff_tmp53;
		BitBlock bytetest_9d, bytetest_a8_a8, r800_ffff_tmp54, r800_ffff_tmp55;
		BitBlock r800_ffff_tmp56, bytetest_aa_aa, r800_ffff_tmp57, bytetest_ac_ac;
		BitBlock r800_ffff_tmp58, bytetest_ae_ae, r800_ffff_tmp59, bytetest_b0_b0;
		BitBlock r800_ffff_tmp60, bytetest_b2_b2, r800_ffff_tmp61, r800_ffff_tmp62;
		BitBlock bytetest_b4_b4, r800_ffff_tmp63, r800_ffff_tmp64, bytetest_9f;
		BitBlock r800_ffff_tmp65, r800_ffff_tmp66, r800_ffff_tmp67, r800_ffff_tmp68;
		BitBlock bytetest_a6_a6, r800_ffff_tmp69, r800_ffff_tmp70, r800_ffff_tmp71;
		BitBlock r800_ffff_tmp72, r800_ffff_tmp73, bytetest_a6, r800_ffff_tmp74;
		BitBlock bytetest_83_83, r800_ffff_tmp75, r800_ffff_tmp76, r800_ffff_tmp77;
		BitBlock r800_ffff_tmp78, r800_ffff_tmp79, bytetest_87_87, r800_ffff_tmp80;
		BitBlock bytetest_89_89, r800_ffff_tmp81, bytetest_8b_8b, r800_ffff_tmp82;
		BitBlock r800_ffff_tmp83, bytetest_8f_8f, r800_ffff_tmp84, bytetest_91_91;
		BitBlock r800_ffff_tmp85, bytetest_93_93, r800_ffff_tmp86, bytetest_95_95;
		BitBlock r800_ffff_tmp87, bytetest_97_97, r800_ffff_tmp88, bytetest_a7;
		BitBlock bytetest_98_98, r800_ffff_tmp89, r800_ffff_tmp90, r800_ffff_tmp91;
		BitBlock r800_ffff_tmp92, r800_ffff_tmp93, bytetest_b8, bytetest_a2_a2;
		BitBlock r800_ffff_tmp94, r800_ffff_tmp95, r800_ffff_tmp96, bytetest_a4_a4;
		BitBlock r800_ffff_tmp97, r800_ffff_tmp98, r800_ffff_tmp99, bytetest_e3;
		BitBlock r800_ffff_tmp100, r800_ffff_tmp101, r800_ffff_tmp102;
		BitBlock r800_ffff_tmp103, r800_ffff_tmp104, r800_ffff_tmp105, bytetest_8c_8c;
		BitBlock r800_ffff_tmp106, bytetest_8e_8e, r800_ffff_tmp107, bytetest_90_90;
		BitBlock r800_ffff_tmp108, bytetest_94_94, r800_ffff_tmp109, bytetest_96_96;
		BitBlock r800_ffff_tmp110, r800_ffff_tmp111, r800_ffff_tmp112, bytetest_9d_9d;
		BitBlock r800_ffff_tmp113, bytetest_ef, bytetest_b4, bytetest_be_be;
		BitBlock r800_ffff_tmp114, r800_ffff_tmp115, r800_ffff_tmp116;
		BitBlock r800_ffff_tmp117, r800_ffff_tmp118, r800_ffff_tmp119;
		BitBlock r800_ffff_tmp120, r800_ffff_tmp121, bytetest_b5_b5, r800_ffff_tmp122;
		BitBlock bytetest_b7_b7, r800_ffff_tmp123, bytetest_b9_b9, r800_ffff_tmp124;
		BitBlock bytetest_bb_bb, r800_ffff_tmp125, r800_ffff_tmp126, bytetest_bf_bf;
		BitBlock r800_ffff_tmp127, bytetest_b9, bytetest_81_81, r800_ffff_tmp128;
		BitBlock r800_ffff_tmp129, r800_ffff_tmp130, r800_ffff_tmp131;
		BitBlock r800_ffff_tmp132, bytetest_99_99, r800_ffff_tmp133, r800_ffff_tmp134;
		BitBlock r800_ffff_tmp135, r800_ffff_tmp136, r800_ffff_tmp137;
		BitBlock r800_ffff_tmp138, r800_ffff_tmp139, bytetest_bd, r800_ffff_tmp140;
		BitBlock r800_ffff_tmp141, r800_ffff_tmp142, bytetest_9f_9f, r800_ffff_tmp143;
		BitBlock r800_ffff_tmp144;




        struct_Ps.cc = simd<1>::constant<0>();
        tmp1 = simd_or(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp2, tmp1);
        tmp4 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_andc(tmp4, tmp5);
        bytetest_28_28 = simd_and(tmp3, tmp6);
        struct_Ps.cc = simd_or(bytetest_28_28, struct_Ps.cc);
        tmp7 = simd_andc(basis_bits.bit_1, basis_bits.bit_0);
        tmp8 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp11 = simd_and(tmp4, tmp10);
        bytetest_5b_5b = simd_and(tmp9, tmp11);
        struct_Ps.cc = simd_or(bytetest_5b_5b, struct_Ps.cc);
        tmp12 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp13 = simd_and(tmp7, tmp12);
        bytetest_7b_7b = simd_and(tmp13, tmp11);
        struct_Ps.cc = simd_or(bytetest_7b_7b, struct_Ps.cc);
        tmp14 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp15 = simd_and(tmp14, tmp2);
        tmp16 = simd_or(basis_bits.bit_5, tmp5);
        tmp17 = simd_or(basis_bits.bit_4, tmp16);
        bytetest_e1_ef = simd_and(tmp15, tmp17);
        tmp18 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp19 = simd_or(tmp18, tmp5);
        bytetest_e0 = simd_andc(tmp15, tmp19);
        tmp20 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_a0_bf = simd_and(tmp20, basis_bits.bit_2);
        tmp21 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp21, carryQ.get_carry_in(0), tmp22));
        tmp23 = simd_and(tmp22, bytetest_e0);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp23, carryQ.get_carry_in(1), tmp24));
        tmp25 = simd_and(tmp24, bytetest_a0_bf);
        tmp26 = simd_or(tmp25, bytetest_e1_ef);
        if ((bitblock::any(tmp26) || carryQ.CarryTest(2, 23))) {
          r800_ffff_tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp2 = simd_and(r800_ffff_tmp1, tmp2);
          r800_ffff_tmp3 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
          r800_ffff_tmp4 = simd_or(r800_ffff_tmp3, tmp5);
          bytetest_e0 = simd_andc(r800_ffff_tmp2, r800_ffff_tmp4);
          r800_ffff_tmp5 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp6 = simd_and(r800_ffff_tmp5, tmp12);
          r800_ffff_tmp7 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
          r800_ffff_tmp8 = simd_andc(r800_ffff_tmp7, tmp5);
          bytetest_bc = simd_and(r800_ffff_tmp6, r800_ffff_tmp8);
          r800_ffff_tmp9 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp10 = simd_and(tmp4, r800_ffff_tmp9);
          bytetest_ba_ba = simd_and(r800_ffff_tmp6, r800_ffff_tmp10);
          r800_ffff_tmp11 = simd<1>::constant<1>();
          carryQ.cq[2] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp11, carryQ.get_carry_in(2), r800_ffff_tmp12));
          r800_ffff_tmp13 = simd_and(r800_ffff_tmp12, bytetest_e0);
          carryQ.cq[3] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp13, carryQ.get_carry_in(3), r800_ffff_tmp14));
          r800_ffff_tmp15 = simd_and(r800_ffff_tmp14, bytetest_bc);
          carryQ.cq[4] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp15, carryQ.get_carry_in(4), r800_ffff_tmp16));
          r800_ffff_tmp17 = simd_and(r800_ffff_tmp16, bytetest_ba_ba);
          struct_Ps.cc = simd_or(r800_ffff_tmp17, struct_Ps.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp2, r800_ffff_tmp4);
          bytetest_bc = simd_and(r800_ffff_tmp6, r800_ffff_tmp8);
          bytetest_bc_bc = simd_and(r800_ffff_tmp6, r800_ffff_tmp8);
          r800_ffff_tmp18 = simd_and(r800_ffff_tmp16, bytetest_bc_bc);
          struct_Ps.cc = simd_or(r800_ffff_tmp18, struct_Ps.cc);
          r800_ffff_tmp19 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
          r800_ffff_tmp20 = simd_andc(r800_ffff_tmp19, r800_ffff_tmp3);
          bytetest_e1 = simd_and(r800_ffff_tmp2, r800_ffff_tmp20);
          r800_ffff_tmp21 = simd_and(r800_ffff_tmp5, tmp8);
          bytetest_9a = simd_and(r800_ffff_tmp21, r800_ffff_tmp10);
          bytetest_9b_9b = simd_and(r800_ffff_tmp21, tmp11);
          r800_ffff_tmp22 = simd_and(r800_ffff_tmp12, bytetest_e1);
          carryQ.cq[5] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp22, carryQ.get_carry_in(5), r800_ffff_tmp23));
          r800_ffff_tmp24 = simd_and(r800_ffff_tmp23, bytetest_9a);
          carryQ.cq[6] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp24, carryQ.get_carry_in(6), r800_ffff_tmp25));
          r800_ffff_tmp26 = simd_and(r800_ffff_tmp25, bytetest_9b_9b);
          struct_Ps.cc = simd_or(r800_ffff_tmp26, struct_Ps.cc);
          r800_ffff_tmp27 = simd_andc(r800_ffff_tmp9, r800_ffff_tmp3);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          r800_ffff_tmp28 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp29 = simd_andc(r800_ffff_tmp5, r800_ffff_tmp28);
          bytetest_80 = simd_andc(r800_ffff_tmp29, r800_ffff_tmp4);
          bytetest_9a_9a = simd_and(r800_ffff_tmp21, r800_ffff_tmp10);
          r800_ffff_tmp30 = simd_and(r800_ffff_tmp12, bytetest_e2);
          carryQ.cq[7] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp30, carryQ.get_carry_in(7), r800_ffff_tmp31));
          r800_ffff_tmp32 = simd_and(r800_ffff_tmp31, bytetest_80);
          carryQ.cq[8] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp32, carryQ.get_carry_in(8), r800_ffff_tmp33));
          r800_ffff_tmp34 = simd_and(r800_ffff_tmp33, bytetest_9a_9a);
          struct_Ps.cc = simd_or(r800_ffff_tmp34, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_80 = simd_andc(r800_ffff_tmp29, r800_ffff_tmp4);
          r800_ffff_tmp35 = simd_and(r800_ffff_tmp7, r800_ffff_tmp9);
          bytetest_9e_9e = simd_and(r800_ffff_tmp21, r800_ffff_tmp35);
          r800_ffff_tmp36 = simd_and(r800_ffff_tmp33, bytetest_9e_9e);
          struct_Ps.cc = simd_or(r800_ffff_tmp36, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_81 = simd_and(r800_ffff_tmp29, r800_ffff_tmp20);
          r800_ffff_tmp37 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
          r800_ffff_tmp38 = simd_and(r800_ffff_tmp37, r800_ffff_tmp19);
          bytetest_85_85 = simd_and(r800_ffff_tmp29, r800_ffff_tmp38);
          r800_ffff_tmp39 = simd_and(r800_ffff_tmp31, bytetest_81);
          carryQ.cq[9] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp39, carryQ.get_carry_in(9), r800_ffff_tmp40));
          r800_ffff_tmp41 = simd_and(r800_ffff_tmp40, bytetest_85_85);
          struct_Ps.cc = simd_or(r800_ffff_tmp41, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_81 = simd_and(r800_ffff_tmp29, r800_ffff_tmp20);
          r800_ffff_tmp42 = simd_and(r800_ffff_tmp7, r800_ffff_tmp19);
          bytetest_bd_bd = simd_and(r800_ffff_tmp6, r800_ffff_tmp42);
          r800_ffff_tmp43 = simd_and(r800_ffff_tmp40, bytetest_bd_bd);
          struct_Ps.cc = simd_or(r800_ffff_tmp43, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_82 = simd_and(r800_ffff_tmp29, r800_ffff_tmp27);
          bytetest_8d_8d = simd_and(r800_ffff_tmp29, r800_ffff_tmp42);
          r800_ffff_tmp44 = simd_and(r800_ffff_tmp31, bytetest_82);
          carryQ.cq[10] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp44, carryQ.get_carry_in(10), r800_ffff_tmp45));
          r800_ffff_tmp46 = simd_and(r800_ffff_tmp45, bytetest_8d_8d);
          struct_Ps.cc = simd_or(r800_ffff_tmp46, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_8c = simd_and(r800_ffff_tmp29, r800_ffff_tmp8);
          bytetest_88_88 = simd_and(r800_ffff_tmp29, tmp6);
          r800_ffff_tmp47 = simd_and(r800_ffff_tmp31, bytetest_8c);
          carryQ.cq[11] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp47, carryQ.get_carry_in(11), r800_ffff_tmp48));
          r800_ffff_tmp49 = simd_and(r800_ffff_tmp48, bytetest_88_88);
          struct_Ps.cc = simd_or(r800_ffff_tmp49, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_8c = simd_and(r800_ffff_tmp29, r800_ffff_tmp8);
          bytetest_8a_8a = simd_and(r800_ffff_tmp29, r800_ffff_tmp10);
          r800_ffff_tmp50 = simd_and(r800_ffff_tmp48, bytetest_8a_8a);
          struct_Ps.cc = simd_or(r800_ffff_tmp50, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_8c = simd_and(r800_ffff_tmp29, r800_ffff_tmp8);
          r800_ffff_tmp51 = simd_and(r800_ffff_tmp5, tmp2);
          r800_ffff_tmp52 = simd_and(tmp4, r800_ffff_tmp19);
          bytetest_a9_a9 = simd_and(r800_ffff_tmp51, r800_ffff_tmp52);
          r800_ffff_tmp53 = simd_and(r800_ffff_tmp48, bytetest_a9_a9);
          struct_Ps.cc = simd_or(r800_ffff_tmp53, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_9d = simd_and(r800_ffff_tmp21, r800_ffff_tmp42);
          bytetest_a8_a8 = simd_and(r800_ffff_tmp51, tmp6);
          r800_ffff_tmp54 = simd_and(r800_ffff_tmp31, bytetest_9d);
          carryQ.cq[12] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp54, carryQ.get_carry_in(12), r800_ffff_tmp55));
          r800_ffff_tmp56 = simd_and(r800_ffff_tmp55, bytetest_a8_a8);
          struct_Ps.cc = simd_or(r800_ffff_tmp56, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_9d = simd_and(r800_ffff_tmp21, r800_ffff_tmp42);
          bytetest_aa_aa = simd_and(r800_ffff_tmp51, r800_ffff_tmp10);
          r800_ffff_tmp57 = simd_and(r800_ffff_tmp55, bytetest_aa_aa);
          struct_Ps.cc = simd_or(r800_ffff_tmp57, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_9d = simd_and(r800_ffff_tmp21, r800_ffff_tmp42);
          bytetest_ac_ac = simd_and(r800_ffff_tmp51, r800_ffff_tmp8);
          r800_ffff_tmp58 = simd_and(r800_ffff_tmp55, bytetest_ac_ac);
          struct_Ps.cc = simd_or(r800_ffff_tmp58, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_9d = simd_and(r800_ffff_tmp21, r800_ffff_tmp42);
          bytetest_ae_ae = simd_and(r800_ffff_tmp51, r800_ffff_tmp35);
          r800_ffff_tmp59 = simd_and(r800_ffff_tmp55, bytetest_ae_ae);
          struct_Ps.cc = simd_or(r800_ffff_tmp59, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_9d = simd_and(r800_ffff_tmp21, r800_ffff_tmp42);
          bytetest_b0_b0 = simd_andc(r800_ffff_tmp6, r800_ffff_tmp4);
          r800_ffff_tmp60 = simd_and(r800_ffff_tmp55, bytetest_b0_b0);
          struct_Ps.cc = simd_or(r800_ffff_tmp60, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_9d = simd_and(r800_ffff_tmp21, r800_ffff_tmp42);
          bytetest_b2_b2 = simd_and(r800_ffff_tmp6, r800_ffff_tmp27);
          r800_ffff_tmp61 = simd_and(r800_ffff_tmp55, bytetest_b2_b2);
          struct_Ps.cc = simd_or(r800_ffff_tmp61, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_9d = simd_and(r800_ffff_tmp21, r800_ffff_tmp42);
          r800_ffff_tmp62 = simd_andc(r800_ffff_tmp37, tmp5);
          bytetest_b4_b4 = simd_and(r800_ffff_tmp6, r800_ffff_tmp62);
          r800_ffff_tmp63 = simd_and(r800_ffff_tmp55, bytetest_b4_b4);
          struct_Ps.cc = simd_or(r800_ffff_tmp63, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          r800_ffff_tmp64 = simd_and(r800_ffff_tmp7, tmp10);
          bytetest_9f = simd_and(r800_ffff_tmp21, r800_ffff_tmp64);
          bytetest_85_85 = simd_and(r800_ffff_tmp29, r800_ffff_tmp38);
          r800_ffff_tmp65 = simd_and(r800_ffff_tmp31, bytetest_9f);
          carryQ.cq[13] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp65, carryQ.get_carry_in(13), r800_ffff_tmp66));
          r800_ffff_tmp67 = simd_and(r800_ffff_tmp66, bytetest_85_85);
          struct_Ps.cc = simd_or(r800_ffff_tmp67, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_9f = simd_and(r800_ffff_tmp21, r800_ffff_tmp64);
          r800_ffff_tmp68 = simd_and(r800_ffff_tmp37, r800_ffff_tmp9);
          bytetest_a6_a6 = simd_and(r800_ffff_tmp51, r800_ffff_tmp68);
          r800_ffff_tmp69 = simd_and(r800_ffff_tmp66, bytetest_a6_a6);
          struct_Ps.cc = simd_or(r800_ffff_tmp69, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_9f = simd_and(r800_ffff_tmp21, r800_ffff_tmp64);
          bytetest_a8_a8 = simd_and(r800_ffff_tmp51, tmp6);
          r800_ffff_tmp70 = simd_and(r800_ffff_tmp66, bytetest_a8_a8);
          struct_Ps.cc = simd_or(r800_ffff_tmp70, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_9f = simd_and(r800_ffff_tmp21, r800_ffff_tmp64);
          bytetest_aa_aa = simd_and(r800_ffff_tmp51, r800_ffff_tmp10);
          r800_ffff_tmp71 = simd_and(r800_ffff_tmp66, bytetest_aa_aa);
          struct_Ps.cc = simd_or(r800_ffff_tmp71, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_9f = simd_and(r800_ffff_tmp21, r800_ffff_tmp64);
          bytetest_ac_ac = simd_and(r800_ffff_tmp51, r800_ffff_tmp8);
          r800_ffff_tmp72 = simd_and(r800_ffff_tmp66, bytetest_ac_ac);
          struct_Ps.cc = simd_or(r800_ffff_tmp72, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_9f = simd_and(r800_ffff_tmp21, r800_ffff_tmp64);
          bytetest_ae_ae = simd_and(r800_ffff_tmp51, r800_ffff_tmp35);
          r800_ffff_tmp73 = simd_and(r800_ffff_tmp66, bytetest_ae_ae);
          struct_Ps.cc = simd_or(r800_ffff_tmp73, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_a6 = simd_and(r800_ffff_tmp51, r800_ffff_tmp68);
          r800_ffff_tmp74 = simd_andc(tmp10, r800_ffff_tmp3);
          bytetest_83_83 = simd_and(r800_ffff_tmp29, r800_ffff_tmp74);
          r800_ffff_tmp75 = simd_and(r800_ffff_tmp31, bytetest_a6);
          carryQ.cq[14] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp75, carryQ.get_carry_in(14), r800_ffff_tmp76));
          r800_ffff_tmp77 = simd_and(r800_ffff_tmp76, bytetest_83_83);
          struct_Ps.cc = simd_or(r800_ffff_tmp77, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_a6 = simd_and(r800_ffff_tmp51, r800_ffff_tmp68);
          bytetest_85_85 = simd_and(r800_ffff_tmp29, r800_ffff_tmp38);
          r800_ffff_tmp78 = simd_and(r800_ffff_tmp76, bytetest_85_85);
          struct_Ps.cc = simd_or(r800_ffff_tmp78, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_a6 = simd_and(r800_ffff_tmp51, r800_ffff_tmp68);
          r800_ffff_tmp79 = simd_and(r800_ffff_tmp37, tmp10);
          bytetest_87_87 = simd_and(r800_ffff_tmp29, r800_ffff_tmp79);
          r800_ffff_tmp80 = simd_and(r800_ffff_tmp76, bytetest_87_87);
          struct_Ps.cc = simd_or(r800_ffff_tmp80, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_a6 = simd_and(r800_ffff_tmp51, r800_ffff_tmp68);
          bytetest_89_89 = simd_and(r800_ffff_tmp29, r800_ffff_tmp52);
          r800_ffff_tmp81 = simd_and(r800_ffff_tmp76, bytetest_89_89);
          struct_Ps.cc = simd_or(r800_ffff_tmp81, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_a6 = simd_and(r800_ffff_tmp51, r800_ffff_tmp68);
          bytetest_8b_8b = simd_and(r800_ffff_tmp29, tmp11);
          r800_ffff_tmp82 = simd_and(r800_ffff_tmp76, bytetest_8b_8b);
          struct_Ps.cc = simd_or(r800_ffff_tmp82, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_a6 = simd_and(r800_ffff_tmp51, r800_ffff_tmp68);
          bytetest_8d_8d = simd_and(r800_ffff_tmp29, r800_ffff_tmp42);
          r800_ffff_tmp83 = simd_and(r800_ffff_tmp76, bytetest_8d_8d);
          struct_Ps.cc = simd_or(r800_ffff_tmp83, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_a6 = simd_and(r800_ffff_tmp51, r800_ffff_tmp68);
          bytetest_8f_8f = simd_and(r800_ffff_tmp29, r800_ffff_tmp64);
          r800_ffff_tmp84 = simd_and(r800_ffff_tmp76, bytetest_8f_8f);
          struct_Ps.cc = simd_or(r800_ffff_tmp84, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_a6 = simd_and(r800_ffff_tmp51, r800_ffff_tmp68);
          bytetest_91_91 = simd_and(r800_ffff_tmp21, r800_ffff_tmp20);
          r800_ffff_tmp85 = simd_and(r800_ffff_tmp76, bytetest_91_91);
          struct_Ps.cc = simd_or(r800_ffff_tmp85, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_a6 = simd_and(r800_ffff_tmp51, r800_ffff_tmp68);
          bytetest_93_93 = simd_and(r800_ffff_tmp21, r800_ffff_tmp74);
          r800_ffff_tmp86 = simd_and(r800_ffff_tmp76, bytetest_93_93);
          struct_Ps.cc = simd_or(r800_ffff_tmp86, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_a6 = simd_and(r800_ffff_tmp51, r800_ffff_tmp68);
          bytetest_95_95 = simd_and(r800_ffff_tmp21, r800_ffff_tmp38);
          r800_ffff_tmp87 = simd_and(r800_ffff_tmp76, bytetest_95_95);
          struct_Ps.cc = simd_or(r800_ffff_tmp87, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_a6 = simd_and(r800_ffff_tmp51, r800_ffff_tmp68);
          bytetest_97_97 = simd_and(r800_ffff_tmp21, r800_ffff_tmp79);
          r800_ffff_tmp88 = simd_and(r800_ffff_tmp76, bytetest_97_97);
          struct_Ps.cc = simd_or(r800_ffff_tmp88, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_a7 = simd_and(r800_ffff_tmp51, r800_ffff_tmp79);
          bytetest_98_98 = simd_and(r800_ffff_tmp21, tmp6);
          r800_ffff_tmp89 = simd_and(r800_ffff_tmp31, bytetest_a7);
          carryQ.cq[15] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp89, carryQ.get_carry_in(15), r800_ffff_tmp90));
          r800_ffff_tmp91 = simd_and(r800_ffff_tmp90, bytetest_98_98);
          struct_Ps.cc = simd_or(r800_ffff_tmp91, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_a7 = simd_and(r800_ffff_tmp51, r800_ffff_tmp79);
          bytetest_9a_9a = simd_and(r800_ffff_tmp21, r800_ffff_tmp10);
          r800_ffff_tmp92 = simd_and(r800_ffff_tmp90, bytetest_9a_9a);
          struct_Ps.cc = simd_or(r800_ffff_tmp92, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_a7 = simd_and(r800_ffff_tmp51, r800_ffff_tmp79);
          bytetest_bc_bc = simd_and(r800_ffff_tmp6, r800_ffff_tmp8);
          r800_ffff_tmp93 = simd_and(r800_ffff_tmp90, bytetest_bc_bc);
          struct_Ps.cc = simd_or(r800_ffff_tmp93, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_b8 = simd_and(r800_ffff_tmp6, tmp6);
          bytetest_a2_a2 = simd_and(r800_ffff_tmp51, r800_ffff_tmp27);
          r800_ffff_tmp94 = simd_and(r800_ffff_tmp31, bytetest_b8);
          carryQ.cq[16] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp94, carryQ.get_carry_in(16), r800_ffff_tmp95));
          r800_ffff_tmp96 = simd_and(r800_ffff_tmp95, bytetest_a2_a2);
          struct_Ps.cc = simd_or(r800_ffff_tmp96, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_b8 = simd_and(r800_ffff_tmp6, tmp6);
          bytetest_a4_a4 = simd_and(r800_ffff_tmp51, r800_ffff_tmp62);
          r800_ffff_tmp97 = simd_and(r800_ffff_tmp95, bytetest_a4_a4);
          struct_Ps.cc = simd_or(r800_ffff_tmp97, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_b8 = simd_and(r800_ffff_tmp6, tmp6);
          bytetest_a6_a6 = simd_and(r800_ffff_tmp51, r800_ffff_tmp68);
          r800_ffff_tmp98 = simd_and(r800_ffff_tmp95, bytetest_a6_a6);
          struct_Ps.cc = simd_or(r800_ffff_tmp98, struct_Ps.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp27);
          bytetest_b8 = simd_and(r800_ffff_tmp6, tmp6);
          bytetest_a8_a8 = simd_and(r800_ffff_tmp51, tmp6);
          r800_ffff_tmp99 = simd_and(r800_ffff_tmp95, bytetest_a8_a8);
          struct_Ps.cc = simd_or(r800_ffff_tmp99, struct_Ps.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp74);
          bytetest_80 = simd_andc(r800_ffff_tmp29, r800_ffff_tmp4);
          bytetest_88_88 = simd_and(r800_ffff_tmp29, tmp6);
          r800_ffff_tmp100 = simd_and(r800_ffff_tmp12, bytetest_e3);
          carryQ.cq[17] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp100, carryQ.get_carry_in(17), r800_ffff_tmp101));
          r800_ffff_tmp102 = simd_and(r800_ffff_tmp101, bytetest_80);
          carryQ.cq[18] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp102, carryQ.get_carry_in(18), r800_ffff_tmp103));
          r800_ffff_tmp104 = simd_and(r800_ffff_tmp103, bytetest_88_88);
          struct_Ps.cc = simd_or(r800_ffff_tmp104, struct_Ps.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp74);
          bytetest_80 = simd_andc(r800_ffff_tmp29, r800_ffff_tmp4);
          bytetest_8a_8a = simd_and(r800_ffff_tmp29, r800_ffff_tmp10);
          r800_ffff_tmp105 = simd_and(r800_ffff_tmp103, bytetest_8a_8a);
          struct_Ps.cc = simd_or(r800_ffff_tmp105, struct_Ps.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp74);
          bytetest_80 = simd_andc(r800_ffff_tmp29, r800_ffff_tmp4);
          bytetest_8c_8c = simd_and(r800_ffff_tmp29, r800_ffff_tmp8);
          r800_ffff_tmp106 = simd_and(r800_ffff_tmp103, bytetest_8c_8c);
          struct_Ps.cc = simd_or(r800_ffff_tmp106, struct_Ps.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp74);
          bytetest_80 = simd_andc(r800_ffff_tmp29, r800_ffff_tmp4);
          bytetest_8e_8e = simd_and(r800_ffff_tmp29, r800_ffff_tmp35);
          r800_ffff_tmp107 = simd_and(r800_ffff_tmp103, bytetest_8e_8e);
          struct_Ps.cc = simd_or(r800_ffff_tmp107, struct_Ps.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp74);
          bytetest_80 = simd_andc(r800_ffff_tmp29, r800_ffff_tmp4);
          bytetest_90_90 = simd_andc(r800_ffff_tmp21, r800_ffff_tmp4);
          r800_ffff_tmp108 = simd_and(r800_ffff_tmp103, bytetest_90_90);
          struct_Ps.cc = simd_or(r800_ffff_tmp108, struct_Ps.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp74);
          bytetest_80 = simd_andc(r800_ffff_tmp29, r800_ffff_tmp4);
          bytetest_94_94 = simd_and(r800_ffff_tmp21, r800_ffff_tmp62);
          r800_ffff_tmp109 = simd_and(r800_ffff_tmp103, bytetest_94_94);
          struct_Ps.cc = simd_or(r800_ffff_tmp109, struct_Ps.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp74);
          bytetest_80 = simd_andc(r800_ffff_tmp29, r800_ffff_tmp4);
          bytetest_96_96 = simd_and(r800_ffff_tmp21, r800_ffff_tmp68);
          r800_ffff_tmp110 = simd_and(r800_ffff_tmp103, bytetest_96_96);
          struct_Ps.cc = simd_or(r800_ffff_tmp110, struct_Ps.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp74);
          bytetest_80 = simd_andc(r800_ffff_tmp29, r800_ffff_tmp4);
          bytetest_98_98 = simd_and(r800_ffff_tmp21, tmp6);
          r800_ffff_tmp111 = simd_and(r800_ffff_tmp103, bytetest_98_98);
          struct_Ps.cc = simd_or(r800_ffff_tmp111, struct_Ps.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp74);
          bytetest_80 = simd_andc(r800_ffff_tmp29, r800_ffff_tmp4);
          bytetest_9a_9a = simd_and(r800_ffff_tmp21, r800_ffff_tmp10);
          r800_ffff_tmp112 = simd_and(r800_ffff_tmp103, bytetest_9a_9a);
          struct_Ps.cc = simd_or(r800_ffff_tmp112, struct_Ps.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp74);
          bytetest_80 = simd_andc(r800_ffff_tmp29, r800_ffff_tmp4);
          bytetest_9d_9d = simd_and(r800_ffff_tmp21, r800_ffff_tmp42);
          r800_ffff_tmp113 = simd_and(r800_ffff_tmp103, bytetest_9d_9d);
          struct_Ps.cc = simd_or(r800_ffff_tmp113, struct_Ps.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp64);
          bytetest_b4 = simd_and(r800_ffff_tmp6, r800_ffff_tmp62);
          bytetest_be_be = simd_and(r800_ffff_tmp6, r800_ffff_tmp35);
          r800_ffff_tmp114 = simd_and(r800_ffff_tmp12, bytetest_ef);
          carryQ.cq[19] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp114, carryQ.get_carry_in(19), r800_ffff_tmp115));
          r800_ffff_tmp116 = simd_and(r800_ffff_tmp115, bytetest_b4);
          carryQ.cq[20] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp116, carryQ.get_carry_in(20), r800_ffff_tmp117));
          r800_ffff_tmp118 = simd_and(r800_ffff_tmp117, bytetest_be_be);
          struct_Ps.cc = simd_or(r800_ffff_tmp118, struct_Ps.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp64);
          bytetest_b8 = simd_and(r800_ffff_tmp6, tmp6);
          bytetest_97_97 = simd_and(r800_ffff_tmp21, r800_ffff_tmp79);
          r800_ffff_tmp119 = simd_and(r800_ffff_tmp115, bytetest_b8);
          carryQ.cq[21] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp119, carryQ.get_carry_in(21), r800_ffff_tmp120));
          r800_ffff_tmp121 = simd_and(r800_ffff_tmp120, bytetest_97_97);
          struct_Ps.cc = simd_or(r800_ffff_tmp121, struct_Ps.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp64);
          bytetest_b8 = simd_and(r800_ffff_tmp6, tmp6);
          bytetest_b5_b5 = simd_and(r800_ffff_tmp6, r800_ffff_tmp38);
          r800_ffff_tmp122 = simd_and(r800_ffff_tmp120, bytetest_b5_b5);
          struct_Ps.cc = simd_or(r800_ffff_tmp122, struct_Ps.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp64);
          bytetest_b8 = simd_and(r800_ffff_tmp6, tmp6);
          bytetest_b7_b7 = simd_and(r800_ffff_tmp6, r800_ffff_tmp79);
          r800_ffff_tmp123 = simd_and(r800_ffff_tmp120, bytetest_b7_b7);
          struct_Ps.cc = simd_or(r800_ffff_tmp123, struct_Ps.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp64);
          bytetest_b8 = simd_and(r800_ffff_tmp6, tmp6);
          bytetest_b9_b9 = simd_and(r800_ffff_tmp6, r800_ffff_tmp52);
          r800_ffff_tmp124 = simd_and(r800_ffff_tmp120, bytetest_b9_b9);
          struct_Ps.cc = simd_or(r800_ffff_tmp124, struct_Ps.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp64);
          bytetest_b8 = simd_and(r800_ffff_tmp6, tmp6);
          bytetest_bb_bb = simd_and(r800_ffff_tmp6, tmp11);
          r800_ffff_tmp125 = simd_and(r800_ffff_tmp120, bytetest_bb_bb);
          struct_Ps.cc = simd_or(r800_ffff_tmp125, struct_Ps.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp64);
          bytetest_b8 = simd_and(r800_ffff_tmp6, tmp6);
          bytetest_bd_bd = simd_and(r800_ffff_tmp6, r800_ffff_tmp42);
          r800_ffff_tmp126 = simd_and(r800_ffff_tmp120, bytetest_bd_bd);
          struct_Ps.cc = simd_or(r800_ffff_tmp126, struct_Ps.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp64);
          bytetest_b8 = simd_and(r800_ffff_tmp6, tmp6);
          bytetest_bf_bf = simd_and(r800_ffff_tmp6, r800_ffff_tmp64);
          r800_ffff_tmp127 = simd_and(r800_ffff_tmp120, bytetest_bf_bf);
          struct_Ps.cc = simd_or(r800_ffff_tmp127, struct_Ps.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp64);
          bytetest_b9 = simd_and(r800_ffff_tmp6, r800_ffff_tmp52);
          bytetest_81_81 = simd_and(r800_ffff_tmp29, r800_ffff_tmp20);
          r800_ffff_tmp128 = simd_and(r800_ffff_tmp115, bytetest_b9);
          carryQ.cq[22] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp128, carryQ.get_carry_in(22), r800_ffff_tmp129));
          r800_ffff_tmp130 = simd_and(r800_ffff_tmp129, bytetest_81_81);
          struct_Ps.cc = simd_or(r800_ffff_tmp130, struct_Ps.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp64);
          bytetest_b9 = simd_and(r800_ffff_tmp6, r800_ffff_tmp52);
          bytetest_83_83 = simd_and(r800_ffff_tmp29, r800_ffff_tmp74);
          r800_ffff_tmp131 = simd_and(r800_ffff_tmp129, bytetest_83_83);
          struct_Ps.cc = simd_or(r800_ffff_tmp131, struct_Ps.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp64);
          bytetest_b9 = simd_and(r800_ffff_tmp6, r800_ffff_tmp52);
          bytetest_87_87 = simd_and(r800_ffff_tmp29, r800_ffff_tmp79);
          r800_ffff_tmp132 = simd_and(r800_ffff_tmp129, bytetest_87_87);
          struct_Ps.cc = simd_or(r800_ffff_tmp132, struct_Ps.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp64);
          bytetest_b9 = simd_and(r800_ffff_tmp6, r800_ffff_tmp52);
          bytetest_99_99 = simd_and(r800_ffff_tmp21, r800_ffff_tmp52);
          r800_ffff_tmp133 = simd_and(r800_ffff_tmp129, bytetest_99_99);
          struct_Ps.cc = simd_or(r800_ffff_tmp133, struct_Ps.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp64);
          bytetest_b9 = simd_and(r800_ffff_tmp6, r800_ffff_tmp52);
          bytetest_9b_9b = simd_and(r800_ffff_tmp21, tmp11);
          r800_ffff_tmp134 = simd_and(r800_ffff_tmp129, bytetest_9b_9b);
          struct_Ps.cc = simd_or(r800_ffff_tmp134, struct_Ps.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp64);
          bytetest_b9 = simd_and(r800_ffff_tmp6, r800_ffff_tmp52);
          bytetest_9d_9d = simd_and(r800_ffff_tmp21, r800_ffff_tmp42);
          r800_ffff_tmp135 = simd_and(r800_ffff_tmp129, bytetest_9d_9d);
          struct_Ps.cc = simd_or(r800_ffff_tmp135, struct_Ps.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp64);
          bytetest_bc = simd_and(r800_ffff_tmp6, r800_ffff_tmp8);
          bytetest_88_88 = simd_and(r800_ffff_tmp29, tmp6);
          r800_ffff_tmp136 = simd_and(r800_ffff_tmp115, bytetest_bc);
          carryQ.cq[23] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp136, carryQ.get_carry_in(23), r800_ffff_tmp137));
          r800_ffff_tmp138 = simd_and(r800_ffff_tmp137, bytetest_88_88);
          struct_Ps.cc = simd_or(r800_ffff_tmp138, struct_Ps.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp64);
          bytetest_bc = simd_and(r800_ffff_tmp6, r800_ffff_tmp8);
          bytetest_bb_bb = simd_and(r800_ffff_tmp6, tmp11);
          r800_ffff_tmp139 = simd_and(r800_ffff_tmp137, bytetest_bb_bb);
          struct_Ps.cc = simd_or(r800_ffff_tmp139, struct_Ps.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp64);
          bytetest_bd = simd_and(r800_ffff_tmp6, r800_ffff_tmp42);
          bytetest_9b_9b = simd_and(r800_ffff_tmp21, tmp11);
          r800_ffff_tmp140 = simd_and(r800_ffff_tmp115, bytetest_bd);
          carryQ.cq[24] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp140, carryQ.get_carry_in(24), r800_ffff_tmp141));
          r800_ffff_tmp142 = simd_and(r800_ffff_tmp141, bytetest_9b_9b);
          struct_Ps.cc = simd_or(r800_ffff_tmp142, struct_Ps.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp64);
          bytetest_bd = simd_and(r800_ffff_tmp6, r800_ffff_tmp42);
          bytetest_9f_9f = simd_and(r800_ffff_tmp21, r800_ffff_tmp64);
          r800_ffff_tmp143 = simd_and(r800_ffff_tmp141, bytetest_9f_9f);
          struct_Ps.cc = simd_or(r800_ffff_tmp143, struct_Ps.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp64);
          bytetest_bd = simd_and(r800_ffff_tmp6, r800_ffff_tmp42);
          bytetest_a2_a2 = simd_and(r800_ffff_tmp51, r800_ffff_tmp27);
          r800_ffff_tmp144 = simd_and(r800_ffff_tmp141, bytetest_a2_a2);
          struct_Ps.cc = simd_or(r800_ffff_tmp144, struct_Ps.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(2, 23);
        }
  }
  CarryArray<25, 0> carryQ;
  };

  struct Nl {
  Nl() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Nl & struct_Nl) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_f0, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, bytetest_92, tmp12, tmp13, bytetest_91, tmp14, tmp15;
		BitBlock tmp16, tmp17, bytetest_80_a2, tmp18, tmp19, tmp20, tmp21, tmp22;
		BitBlock tmp23, tmp24, tmp25, tmp26, bytetest_90, bytetest_80_bf, tmp27, tmp28;
		BitBlock tmp29, tmp30, tmp31, tmp32, tmp33, tmp34, bytetest_e1_ef, bytetest_e0;
		BitBlock bytetest_a0_bf, tmp35, tmp36, tmp37, tmp38, r800_ffff_tmp1;
		BitBlock r800_ffff_tmp2, bytetest_e1, r800_ffff_tmp3, r800_ffff_tmp4;
		BitBlock r800_ffff_tmp5, bytetest_9b, r800_ffff_tmp6, r800_ffff_tmp7;
		BitBlock r800_ffff_tmp8, r800_ffff_tmp9, r800_ffff_tmp10, bytetest_ae_b0;
		BitBlock r800_ffff_tmp11, r800_ffff_tmp12, r800_ffff_tmp13, r800_ffff_tmp14;
		BitBlock r800_ffff_tmp15, bytetest_e2, r800_ffff_tmp16, r800_ffff_tmp17;
		BitBlock r800_ffff_tmp18, r800_ffff_tmp19, bytetest_86, r800_ffff_tmp20;
		BitBlock bytetest_80_82, r800_ffff_tmp21, r800_ffff_tmp22, r800_ffff_tmp23;
		BitBlock r800_ffff_tmp24, r800_ffff_tmp25, r800_ffff_tmp26, bytetest_85;
		BitBlock r800_ffff_tmp27, r800_ffff_tmp28, r800_ffff_tmp29, r800_ffff_tmp30;
		BitBlock r800_ffff_tmp31, r800_ffff_tmp32, r800_ffff_tmp33, r800_ffff_tmp34;
		BitBlock bytetest_85_88, r800_ffff_tmp35, r800_ffff_tmp36, bytetest_e3;
		BitBlock bytetest_80, r800_ffff_tmp37, bytetest_87_87, r800_ffff_tmp38;
		BitBlock r800_ffff_tmp39, r800_ffff_tmp40, r800_ffff_tmp41, r800_ffff_tmp42;
		BitBlock r800_ffff_tmp43, r800_ffff_tmp44, r800_ffff_tmp45, r800_ffff_tmp46;
		BitBlock bytetest_a1_a9, r800_ffff_tmp47, r800_ffff_tmp48, r800_ffff_tmp49;
		BitBlock bytetest_b8_ba, r800_ffff_tmp50, r800_ffff_tmp51, bytetest_ea;
		BitBlock r800_ffff_tmp52, r800_ffff_tmp53, bytetest_a6_af, r800_ffff_tmp54;
		BitBlock r800_ffff_tmp55, r800_ffff_tmp56, r800_ffff_tmp57, r800_ffff_tmp58;
		BitBlock tmp39, tmp40, tmp41, tmp42, r10000_10fff_tmp1, r10000_10fff_tmp2;
		BitBlock r10000_10fff_tmp3, r10000_10fff_tmp4, r10000_10fff_tmp5;
		BitBlock r10000_10fff_tmp6, r10000_10fff_tmp7, r10000_10fff_tmp8;
		BitBlock r10000_10fff_tmp9, bytetest_80_b4, r10000_10fff_tmp10;
		BitBlock r10000_10fff_tmp11, r10000_10fff_tmp12, r10000_10fff_tmp13;
		BitBlock r10000_10fff_tmp14, r10000_10fff_tmp15, r10000_10fff_tmp16;
		BitBlock bytetest_8d, bytetest_81_81, r10000_10fff_tmp17, r10000_10fff_tmp18;
		BitBlock r10000_10fff_tmp19, r10000_10fff_tmp20, r10000_10fff_tmp21;
		BitBlock bytetest_8a_8a, r10000_10fff_tmp22, r10000_10fff_tmp23, bytetest_8f;
		BitBlock r10000_10fff_tmp24, r10000_10fff_tmp25, r10000_10fff_tmp26;
		BitBlock bytetest_91_95, r10000_10fff_tmp27, r10000_10fff_tmp28;
		BitBlock r10000_10fff_tmp29;




        struct_Nl.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_and(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_or(tmp4, tmp5);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp11 = simd_andc(tmp10, tmp4);
        bytetest_92 = simd_and(tmp9, tmp11);
        tmp12 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp13 = simd_andc(tmp12, tmp4);
        bytetest_91 = simd_and(tmp9, tmp13);
        tmp14 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp15 = simd_or(tmp4, tmp14);
        tmp16 = simd_or(basis_bits.bit_3, tmp15);
        tmp17 = simd_and(basis_bits.bit_2, tmp16);
        bytetest_80_a2 = simd_andc(tmp7, tmp17);
        tmp18 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp18, carryQ.get_carry_in(0), tmp19));
        tmp20 = simd_and(tmp19, bytetest_f0);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp20, carryQ.get_carry_in(1), tmp21));
        tmp22 = simd_and(tmp21, bytetest_92);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp22, carryQ.get_carry_in(2), tmp23));
        tmp24 = simd_and(tmp23, bytetest_91);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp24, carryQ.get_carry_in(3), tmp25));
        tmp26 = simd_and(tmp25, bytetest_80_a2);
        bytetest_90 = simd_andc(tmp9, tmp6);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp27 = simd_and(tmp23, bytetest_90);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp27, carryQ.get_carry_in(4), tmp28));
        tmp29 = simd_and(tmp28, bytetest_80_bf);
        tmp30 = simd_or(tmp29, tmp26);
        struct_Nl.cc = simd_or(tmp30, struct_Nl.cc);
        tmp31 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp32 = simd_and(tmp1, tmp31);
        tmp33 = simd_or(basis_bits.bit_5, tmp5);
        tmp34 = simd_or(basis_bits.bit_4, tmp33);
        bytetest_e1_ef = simd_and(tmp32, tmp34);
        bytetest_e0 = simd_andc(tmp32, tmp6);
        bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp35 = simd_and(tmp19, bytetest_e0);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp35, carryQ.get_carry_in(5), tmp36));
        tmp37 = simd_and(tmp36, bytetest_a0_bf);
        tmp38 = simd_or(tmp37, bytetest_e1_ef);
        if ((bitblock::any(tmp38) || carryQ.CarryTest(6, 9))) {
          r800_ffff_tmp1 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp2 = simd_and(tmp1, r800_ffff_tmp1);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp13);
          r800_ffff_tmp3 = simd_and(bytetest_80_bf, tmp8);
          r800_ffff_tmp4 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
          r800_ffff_tmp5 = simd_and(r800_ffff_tmp4, tmp14);
          bytetest_9b = simd_and(r800_ffff_tmp3, r800_ffff_tmp5);
          r800_ffff_tmp6 = simd_and(bytetest_80_bf, basis_bits.bit_2);
          r800_ffff_tmp7 = simd_not(tmp6);
          r800_ffff_tmp8 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
          r800_ffff_tmp9 = simd_and(r800_ffff_tmp8, basis_bits.bit_6);
          r800_ffff_tmp10 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp7), simd_andc(r800_ffff_tmp9, basis_bits.bit_3));
          bytetest_ae_b0 = simd_and(r800_ffff_tmp6, r800_ffff_tmp10);
          r800_ffff_tmp11 = simd_and(tmp19, bytetest_e1);
          carryQ.cq[6] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp11, carryQ.get_carry_in(6), r800_ffff_tmp12));
          r800_ffff_tmp13 = simd_and(r800_ffff_tmp12, bytetest_9b);
          carryQ.cq[7] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp13, carryQ.get_carry_in(7), r800_ffff_tmp14));
          r800_ffff_tmp15 = simd_and(r800_ffff_tmp14, bytetest_ae_b0);
          struct_Nl.cc = simd_or(r800_ffff_tmp15, struct_Nl.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp11);
          r800_ffff_tmp16 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp17 = simd_andc(bytetest_80_bf, r800_ffff_tmp16);
          r800_ffff_tmp18 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
          r800_ffff_tmp19 = simd_and(r800_ffff_tmp18, tmp10);
          bytetest_86 = simd_and(r800_ffff_tmp17, r800_ffff_tmp19);
          r800_ffff_tmp20 = simd_andc(r800_ffff_tmp17, tmp4);
          bytetest_80_82 = simd_andc(r800_ffff_tmp20, tmp14);
          r800_ffff_tmp21 = simd_and(tmp19, bytetest_e2);
          carryQ.cq[8] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp21, carryQ.get_carry_in(8), r800_ffff_tmp22));
          r800_ffff_tmp23 = simd_and(r800_ffff_tmp22, bytetest_86);
          carryQ.cq[9] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp23, carryQ.get_carry_in(9), r800_ffff_tmp24));
          r800_ffff_tmp25 = simd_and(r800_ffff_tmp24, bytetest_80_82);
          r800_ffff_tmp26 = simd_and(r800_ffff_tmp18, tmp12);
          bytetest_85 = simd_and(r800_ffff_tmp17, r800_ffff_tmp26);
          bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
          r800_ffff_tmp27 = simd_and(r800_ffff_tmp22, bytetest_85);
          carryQ.cq[10] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp27, carryQ.get_carry_in(10), r800_ffff_tmp28));
          r800_ffff_tmp29 = simd_and(r800_ffff_tmp28, bytetest_a0_bf);
          r800_ffff_tmp30 = simd_or(r800_ffff_tmp29, r800_ffff_tmp25);
          struct_Nl.cc = simd_or(r800_ffff_tmp30, struct_Nl.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp11);
          bytetest_86 = simd_and(r800_ffff_tmp17, r800_ffff_tmp19);
          r800_ffff_tmp31 = simd_or(basis_bits.bit_5, tmp5);
          r800_ffff_tmp32 = simd_not(r800_ffff_tmp31);
          r800_ffff_tmp33 = simd_and(basis_bits.bit_5, tmp5);
          r800_ffff_tmp34 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp32), simd_andc(r800_ffff_tmp33, basis_bits.bit_4));
          bytetest_85_88 = simd_and(r800_ffff_tmp17, r800_ffff_tmp34);
          r800_ffff_tmp35 = simd_and(r800_ffff_tmp24, bytetest_85_88);
          struct_Nl.cc = simd_or(r800_ffff_tmp35, struct_Nl.cc);
          r800_ffff_tmp36 = simd_andc(tmp14, tmp4);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp36);
          bytetest_80 = simd_andc(r800_ffff_tmp17, tmp6);
          r800_ffff_tmp37 = simd_and(r800_ffff_tmp18, tmp14);
          bytetest_87_87 = simd_and(r800_ffff_tmp17, r800_ffff_tmp37);
          r800_ffff_tmp38 = simd_and(tmp19, bytetest_e3);
          carryQ.cq[11] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp38, carryQ.get_carry_in(11), r800_ffff_tmp39));
          r800_ffff_tmp40 = simd_and(r800_ffff_tmp39, bytetest_80);
          carryQ.cq[12] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp40, carryQ.get_carry_in(12), r800_ffff_tmp41));
          r800_ffff_tmp42 = simd_and(r800_ffff_tmp41, bytetest_87_87);
          struct_Nl.cc = simd_or(r800_ffff_tmp42, struct_Nl.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp36);
          bytetest_80 = simd_andc(r800_ffff_tmp17, tmp6);
          r800_ffff_tmp43 = simd_and(bytetest_80_bf, r800_ffff_tmp1);
          r800_ffff_tmp44 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
          r800_ffff_tmp45 = simd_not(r800_ffff_tmp44);
          r800_ffff_tmp46 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp45), simd_andc(r800_ffff_tmp31, basis_bits.bit_4));
          bytetest_a1_a9 = simd_and(r800_ffff_tmp43, r800_ffff_tmp46);
          r800_ffff_tmp47 = simd_and(r800_ffff_tmp41, bytetest_a1_a9);
          struct_Nl.cc = simd_or(r800_ffff_tmp47, struct_Nl.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp36);
          bytetest_80 = simd_andc(r800_ffff_tmp17, tmp6);
          r800_ffff_tmp48 = simd_and(bytetest_80_bf, tmp2);
          r800_ffff_tmp49 = simd_and(r800_ffff_tmp48, r800_ffff_tmp4);
          bytetest_b8_ba = simd_andc(r800_ffff_tmp49, tmp14);
          r800_ffff_tmp50 = simd_and(r800_ffff_tmp41, bytetest_b8_ba);
          struct_Nl.cc = simd_or(r800_ffff_tmp50, struct_Nl.cc);
          r800_ffff_tmp51 = simd_and(r800_ffff_tmp4, tmp10);
          bytetest_ea = simd_and(r800_ffff_tmp2, r800_ffff_tmp51);
          bytetest_9b = simd_and(r800_ffff_tmp3, r800_ffff_tmp5);
          r800_ffff_tmp52 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
          r800_ffff_tmp53 = simd_or(basis_bits.bit_4, r800_ffff_tmp52);
          bytetest_a6_af = simd_and(r800_ffff_tmp43, r800_ffff_tmp53);
          r800_ffff_tmp54 = simd_and(tmp19, bytetest_ea);
          carryQ.cq[13] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp54, carryQ.get_carry_in(13), r800_ffff_tmp55));
          r800_ffff_tmp56 = simd_and(r800_ffff_tmp55, bytetest_9b);
          carryQ.cq[14] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp56, carryQ.get_carry_in(14), r800_ffff_tmp57));
          r800_ffff_tmp58 = simd_and(r800_ffff_tmp57, bytetest_a6_af);
          struct_Nl.cc = simd_or(r800_ffff_tmp58, struct_Nl.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(6, 9);
        }
        bytetest_f0 = simd_andc(tmp3, tmp6);
        tmp39 = simd_and(bytetest_80_bf, tmp8);
        bytetest_90 = simd_andc(tmp39, tmp6);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp40 = simd_and(tmp21, bytetest_90);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(tmp40, carryQ.get_carry_in(15), tmp41));
        tmp42 = simd_and(tmp41, bytetest_80_bf);
        if ((bitblock::any(tmp42) || carryQ.CarryTest(16, 4))) {
          bytetest_f0 = simd_andc(tmp3, tmp6);
          r10000_10fff_tmp1 = simd_and(bytetest_80_bf, tmp8);
          bytetest_90 = simd_andc(r10000_10fff_tmp1, tmp6);
          r10000_10fff_tmp2 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
          r10000_10fff_tmp3 = simd_andc(bytetest_80_bf, r10000_10fff_tmp2);
          r10000_10fff_tmp4 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
          r10000_10fff_tmp5 = simd_and(r10000_10fff_tmp4, tmp12);
          bytetest_85 = simd_and(r10000_10fff_tmp3, r10000_10fff_tmp5);
          r10000_10fff_tmp6 = simd_and(basis_bits.bit_5, tmp5);
          r10000_10fff_tmp7 = simd_or(basis_bits.bit_4, r10000_10fff_tmp6);
          r10000_10fff_tmp8 = simd_and(basis_bits.bit_3, r10000_10fff_tmp7);
          r10000_10fff_tmp9 = simd_and(basis_bits.bit_2, r10000_10fff_tmp8);
          bytetest_80_b4 = simd_andc(bytetest_80_bf, r10000_10fff_tmp9);
          r10000_10fff_tmp10 = simd_and(tmp21, bytetest_90);
          carryQ.cq[16] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp10, carryQ.get_carry_in(16), r10000_10fff_tmp11));
          r10000_10fff_tmp12 = simd_and(r10000_10fff_tmp11, bytetest_85);
          carryQ.cq[17] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp12, carryQ.get_carry_in(17), r10000_10fff_tmp13));
          r10000_10fff_tmp14 = simd_and(r10000_10fff_tmp13, bytetest_80_b4);
          struct_Nl.cc = simd_or(r10000_10fff_tmp14, struct_Nl.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(r10000_10fff_tmp1, tmp6);
          r10000_10fff_tmp15 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
          r10000_10fff_tmp16 = simd_and(r10000_10fff_tmp15, tmp12);
          bytetest_8d = simd_and(r10000_10fff_tmp3, r10000_10fff_tmp16);
          bytetest_81_81 = simd_and(r10000_10fff_tmp3, tmp13);
          r10000_10fff_tmp17 = simd_and(r10000_10fff_tmp11, bytetest_8d);
          carryQ.cq[18] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp17, carryQ.get_carry_in(18), r10000_10fff_tmp18));
          r10000_10fff_tmp19 = simd_and(r10000_10fff_tmp18, bytetest_81_81);
          struct_Nl.cc = simd_or(r10000_10fff_tmp19, struct_Nl.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(r10000_10fff_tmp1, tmp6);
          bytetest_8d = simd_and(r10000_10fff_tmp3, r10000_10fff_tmp16);
          r10000_10fff_tmp20 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
          r10000_10fff_tmp21 = simd_and(r10000_10fff_tmp20, tmp10);
          bytetest_8a_8a = simd_and(r10000_10fff_tmp3, r10000_10fff_tmp21);
          r10000_10fff_tmp22 = simd_and(r10000_10fff_tmp18, bytetest_8a_8a);
          struct_Nl.cc = simd_or(r10000_10fff_tmp22, struct_Nl.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(r10000_10fff_tmp1, tmp6);
          r10000_10fff_tmp23 = simd_and(r10000_10fff_tmp15, tmp14);
          bytetest_8f = simd_and(r10000_10fff_tmp3, r10000_10fff_tmp23);
          r10000_10fff_tmp24 = simd_andc(r10000_10fff_tmp1, basis_bits.bit_4);
          r10000_10fff_tmp25 = simd_not(basis_bits.bit_6);
          r10000_10fff_tmp26 = simd_or(simd_and(basis_bits.bit_5, r10000_10fff_tmp25), simd_andc(tmp5, basis_bits.bit_5));
          bytetest_91_95 = simd_and(r10000_10fff_tmp24, r10000_10fff_tmp26);
          r10000_10fff_tmp27 = simd_and(r10000_10fff_tmp11, bytetest_8f);
          carryQ.cq[19] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp27, carryQ.get_carry_in(19), r10000_10fff_tmp28));
          r10000_10fff_tmp29 = simd_and(r10000_10fff_tmp28, bytetest_91_95);
          struct_Nl.cc = simd_or(r10000_10fff_tmp29, struct_Nl.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(16, 4);
        }
        carryQ.CarryQ_Adjust(20);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Nl & struct_Nl, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_f0, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, bytetest_92, tmp12, tmp13, bytetest_91, tmp14, tmp15;
		BitBlock tmp16, tmp17, bytetest_80_a2, tmp18, tmp19, tmp20, tmp21, tmp22;
		BitBlock tmp23, tmp24, tmp25, tmp26, bytetest_90, bytetest_80_bf, tmp27, tmp28;
		BitBlock tmp29, tmp30, tmp31, tmp32, tmp33, tmp34, bytetest_e1_ef, bytetest_e0;
		BitBlock bytetest_a0_bf, tmp35, tmp36, tmp37, tmp38, r800_ffff_tmp1;
		BitBlock r800_ffff_tmp2, bytetest_e1, r800_ffff_tmp3, r800_ffff_tmp4;
		BitBlock r800_ffff_tmp5, bytetest_9b, r800_ffff_tmp6, r800_ffff_tmp7;
		BitBlock r800_ffff_tmp8, r800_ffff_tmp9, r800_ffff_tmp10, bytetest_ae_b0;
		BitBlock r800_ffff_tmp11, r800_ffff_tmp12, r800_ffff_tmp13, r800_ffff_tmp14;
		BitBlock r800_ffff_tmp15, bytetest_e2, r800_ffff_tmp16, r800_ffff_tmp17;
		BitBlock r800_ffff_tmp18, r800_ffff_tmp19, bytetest_86, r800_ffff_tmp20;
		BitBlock bytetest_80_82, r800_ffff_tmp21, r800_ffff_tmp22, r800_ffff_tmp23;
		BitBlock r800_ffff_tmp24, r800_ffff_tmp25, r800_ffff_tmp26, bytetest_85;
		BitBlock r800_ffff_tmp27, r800_ffff_tmp28, r800_ffff_tmp29, r800_ffff_tmp30;
		BitBlock r800_ffff_tmp31, r800_ffff_tmp32, r800_ffff_tmp33, r800_ffff_tmp34;
		BitBlock bytetest_85_88, r800_ffff_tmp35, r800_ffff_tmp36, bytetest_e3;
		BitBlock bytetest_80, r800_ffff_tmp37, bytetest_87_87, r800_ffff_tmp38;
		BitBlock r800_ffff_tmp39, r800_ffff_tmp40, r800_ffff_tmp41, r800_ffff_tmp42;
		BitBlock r800_ffff_tmp43, r800_ffff_tmp44, r800_ffff_tmp45, r800_ffff_tmp46;
		BitBlock bytetest_a1_a9, r800_ffff_tmp47, r800_ffff_tmp48, r800_ffff_tmp49;
		BitBlock bytetest_b8_ba, r800_ffff_tmp50, r800_ffff_tmp51, bytetest_ea;
		BitBlock r800_ffff_tmp52, r800_ffff_tmp53, bytetest_a6_af, r800_ffff_tmp54;
		BitBlock r800_ffff_tmp55, r800_ffff_tmp56, r800_ffff_tmp57, r800_ffff_tmp58;
		BitBlock tmp39, tmp40, tmp41, tmp42, r10000_10fff_tmp1, r10000_10fff_tmp2;
		BitBlock r10000_10fff_tmp3, r10000_10fff_tmp4, r10000_10fff_tmp5;
		BitBlock r10000_10fff_tmp6, r10000_10fff_tmp7, r10000_10fff_tmp8;
		BitBlock r10000_10fff_tmp9, bytetest_80_b4, r10000_10fff_tmp10;
		BitBlock r10000_10fff_tmp11, r10000_10fff_tmp12, r10000_10fff_tmp13;
		BitBlock r10000_10fff_tmp14, r10000_10fff_tmp15, r10000_10fff_tmp16;
		BitBlock bytetest_8d, bytetest_81_81, r10000_10fff_tmp17, r10000_10fff_tmp18;
		BitBlock r10000_10fff_tmp19, r10000_10fff_tmp20, r10000_10fff_tmp21;
		BitBlock bytetest_8a_8a, r10000_10fff_tmp22, r10000_10fff_tmp23, bytetest_8f;
		BitBlock r10000_10fff_tmp24, r10000_10fff_tmp25, r10000_10fff_tmp26;
		BitBlock bytetest_91_95, r10000_10fff_tmp27, r10000_10fff_tmp28;
		BitBlock r10000_10fff_tmp29;




        struct_Nl.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_and(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_or(tmp4, tmp5);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp11 = simd_andc(tmp10, tmp4);
        bytetest_92 = simd_and(tmp9, tmp11);
        tmp12 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp13 = simd_andc(tmp12, tmp4);
        bytetest_91 = simd_and(tmp9, tmp13);
        tmp14 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp15 = simd_or(tmp4, tmp14);
        tmp16 = simd_or(basis_bits.bit_3, tmp15);
        tmp17 = simd_and(basis_bits.bit_2, tmp16);
        bytetest_80_a2 = simd_andc(tmp7, tmp17);
        tmp18 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp18, carryQ.get_carry_in(0), tmp19));
        tmp20 = simd_and(tmp19, bytetest_f0);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp20, carryQ.get_carry_in(1), tmp21));
        tmp22 = simd_and(tmp21, bytetest_92);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp22, carryQ.get_carry_in(2), tmp23));
        tmp24 = simd_and(tmp23, bytetest_91);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp24, carryQ.get_carry_in(3), tmp25));
        tmp26 = simd_and(tmp25, bytetest_80_a2);
        bytetest_90 = simd_andc(tmp9, tmp6);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp27 = simd_and(tmp23, bytetest_90);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp27, carryQ.get_carry_in(4), tmp28));
        tmp29 = simd_and(tmp28, bytetest_80_bf);
        tmp30 = simd_or(tmp29, tmp26);
        struct_Nl.cc = simd_or(tmp30, struct_Nl.cc);
        tmp31 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp32 = simd_and(tmp1, tmp31);
        tmp33 = simd_or(basis_bits.bit_5, tmp5);
        tmp34 = simd_or(basis_bits.bit_4, tmp33);
        bytetest_e1_ef = simd_and(tmp32, tmp34);
        bytetest_e0 = simd_andc(tmp32, tmp6);
        bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp35 = simd_and(tmp19, bytetest_e0);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp35, carryQ.get_carry_in(5), tmp36));
        tmp37 = simd_and(tmp36, bytetest_a0_bf);
        tmp38 = simd_or(tmp37, bytetest_e1_ef);
        if ((bitblock::any(tmp38) || carryQ.CarryTest(6, 9))) {
          r800_ffff_tmp1 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp2 = simd_and(tmp1, r800_ffff_tmp1);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp13);
          r800_ffff_tmp3 = simd_and(bytetest_80_bf, tmp8);
          r800_ffff_tmp4 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
          r800_ffff_tmp5 = simd_and(r800_ffff_tmp4, tmp14);
          bytetest_9b = simd_and(r800_ffff_tmp3, r800_ffff_tmp5);
          r800_ffff_tmp6 = simd_and(bytetest_80_bf, basis_bits.bit_2);
          r800_ffff_tmp7 = simd_not(tmp6);
          r800_ffff_tmp8 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
          r800_ffff_tmp9 = simd_and(r800_ffff_tmp8, basis_bits.bit_6);
          r800_ffff_tmp10 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp7), simd_andc(r800_ffff_tmp9, basis_bits.bit_3));
          bytetest_ae_b0 = simd_and(r800_ffff_tmp6, r800_ffff_tmp10);
          r800_ffff_tmp11 = simd_and(tmp19, bytetest_e1);
          carryQ.cq[6] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp11, carryQ.get_carry_in(6), r800_ffff_tmp12));
          r800_ffff_tmp13 = simd_and(r800_ffff_tmp12, bytetest_9b);
          carryQ.cq[7] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp13, carryQ.get_carry_in(7), r800_ffff_tmp14));
          r800_ffff_tmp15 = simd_and(r800_ffff_tmp14, bytetest_ae_b0);
          struct_Nl.cc = simd_or(r800_ffff_tmp15, struct_Nl.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp11);
          r800_ffff_tmp16 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp17 = simd_andc(bytetest_80_bf, r800_ffff_tmp16);
          r800_ffff_tmp18 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
          r800_ffff_tmp19 = simd_and(r800_ffff_tmp18, tmp10);
          bytetest_86 = simd_and(r800_ffff_tmp17, r800_ffff_tmp19);
          r800_ffff_tmp20 = simd_andc(r800_ffff_tmp17, tmp4);
          bytetest_80_82 = simd_andc(r800_ffff_tmp20, tmp14);
          r800_ffff_tmp21 = simd_and(tmp19, bytetest_e2);
          carryQ.cq[8] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp21, carryQ.get_carry_in(8), r800_ffff_tmp22));
          r800_ffff_tmp23 = simd_and(r800_ffff_tmp22, bytetest_86);
          carryQ.cq[9] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp23, carryQ.get_carry_in(9), r800_ffff_tmp24));
          r800_ffff_tmp25 = simd_and(r800_ffff_tmp24, bytetest_80_82);
          r800_ffff_tmp26 = simd_and(r800_ffff_tmp18, tmp12);
          bytetest_85 = simd_and(r800_ffff_tmp17, r800_ffff_tmp26);
          bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
          r800_ffff_tmp27 = simd_and(r800_ffff_tmp22, bytetest_85);
          carryQ.cq[10] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp27, carryQ.get_carry_in(10), r800_ffff_tmp28));
          r800_ffff_tmp29 = simd_and(r800_ffff_tmp28, bytetest_a0_bf);
          r800_ffff_tmp30 = simd_or(r800_ffff_tmp29, r800_ffff_tmp25);
          struct_Nl.cc = simd_or(r800_ffff_tmp30, struct_Nl.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp11);
          bytetest_86 = simd_and(r800_ffff_tmp17, r800_ffff_tmp19);
          r800_ffff_tmp31 = simd_or(basis_bits.bit_5, tmp5);
          r800_ffff_tmp32 = simd_not(r800_ffff_tmp31);
          r800_ffff_tmp33 = simd_and(basis_bits.bit_5, tmp5);
          r800_ffff_tmp34 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp32), simd_andc(r800_ffff_tmp33, basis_bits.bit_4));
          bytetest_85_88 = simd_and(r800_ffff_tmp17, r800_ffff_tmp34);
          r800_ffff_tmp35 = simd_and(r800_ffff_tmp24, bytetest_85_88);
          struct_Nl.cc = simd_or(r800_ffff_tmp35, struct_Nl.cc);
          r800_ffff_tmp36 = simd_andc(tmp14, tmp4);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp36);
          bytetest_80 = simd_andc(r800_ffff_tmp17, tmp6);
          r800_ffff_tmp37 = simd_and(r800_ffff_tmp18, tmp14);
          bytetest_87_87 = simd_and(r800_ffff_tmp17, r800_ffff_tmp37);
          r800_ffff_tmp38 = simd_and(tmp19, bytetest_e3);
          carryQ.cq[11] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp38, carryQ.get_carry_in(11), r800_ffff_tmp39));
          r800_ffff_tmp40 = simd_and(r800_ffff_tmp39, bytetest_80);
          carryQ.cq[12] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp40, carryQ.get_carry_in(12), r800_ffff_tmp41));
          r800_ffff_tmp42 = simd_and(r800_ffff_tmp41, bytetest_87_87);
          struct_Nl.cc = simd_or(r800_ffff_tmp42, struct_Nl.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp36);
          bytetest_80 = simd_andc(r800_ffff_tmp17, tmp6);
          r800_ffff_tmp43 = simd_and(bytetest_80_bf, r800_ffff_tmp1);
          r800_ffff_tmp44 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
          r800_ffff_tmp45 = simd_not(r800_ffff_tmp44);
          r800_ffff_tmp46 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp45), simd_andc(r800_ffff_tmp31, basis_bits.bit_4));
          bytetest_a1_a9 = simd_and(r800_ffff_tmp43, r800_ffff_tmp46);
          r800_ffff_tmp47 = simd_and(r800_ffff_tmp41, bytetest_a1_a9);
          struct_Nl.cc = simd_or(r800_ffff_tmp47, struct_Nl.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp36);
          bytetest_80 = simd_andc(r800_ffff_tmp17, tmp6);
          r800_ffff_tmp48 = simd_and(bytetest_80_bf, tmp2);
          r800_ffff_tmp49 = simd_and(r800_ffff_tmp48, r800_ffff_tmp4);
          bytetest_b8_ba = simd_andc(r800_ffff_tmp49, tmp14);
          r800_ffff_tmp50 = simd_and(r800_ffff_tmp41, bytetest_b8_ba);
          struct_Nl.cc = simd_or(r800_ffff_tmp50, struct_Nl.cc);
          r800_ffff_tmp51 = simd_and(r800_ffff_tmp4, tmp10);
          bytetest_ea = simd_and(r800_ffff_tmp2, r800_ffff_tmp51);
          bytetest_9b = simd_and(r800_ffff_tmp3, r800_ffff_tmp5);
          r800_ffff_tmp52 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
          r800_ffff_tmp53 = simd_or(basis_bits.bit_4, r800_ffff_tmp52);
          bytetest_a6_af = simd_and(r800_ffff_tmp43, r800_ffff_tmp53);
          r800_ffff_tmp54 = simd_and(tmp19, bytetest_ea);
          carryQ.cq[13] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp54, carryQ.get_carry_in(13), r800_ffff_tmp55));
          r800_ffff_tmp56 = simd_and(r800_ffff_tmp55, bytetest_9b);
          carryQ.cq[14] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp56, carryQ.get_carry_in(14), r800_ffff_tmp57));
          r800_ffff_tmp58 = simd_and(r800_ffff_tmp57, bytetest_a6_af);
          struct_Nl.cc = simd_or(r800_ffff_tmp58, struct_Nl.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(6, 9);
        }
        bytetest_f0 = simd_andc(tmp3, tmp6);
        tmp39 = simd_and(bytetest_80_bf, tmp8);
        bytetest_90 = simd_andc(tmp39, tmp6);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp40 = simd_and(tmp21, bytetest_90);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(tmp40, carryQ.get_carry_in(15), tmp41));
        tmp42 = simd_and(tmp41, bytetest_80_bf);
        if ((bitblock::any(tmp42) || carryQ.CarryTest(16, 4))) {
          bytetest_f0 = simd_andc(tmp3, tmp6);
          r10000_10fff_tmp1 = simd_and(bytetest_80_bf, tmp8);
          bytetest_90 = simd_andc(r10000_10fff_tmp1, tmp6);
          r10000_10fff_tmp2 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
          r10000_10fff_tmp3 = simd_andc(bytetest_80_bf, r10000_10fff_tmp2);
          r10000_10fff_tmp4 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
          r10000_10fff_tmp5 = simd_and(r10000_10fff_tmp4, tmp12);
          bytetest_85 = simd_and(r10000_10fff_tmp3, r10000_10fff_tmp5);
          r10000_10fff_tmp6 = simd_and(basis_bits.bit_5, tmp5);
          r10000_10fff_tmp7 = simd_or(basis_bits.bit_4, r10000_10fff_tmp6);
          r10000_10fff_tmp8 = simd_and(basis_bits.bit_3, r10000_10fff_tmp7);
          r10000_10fff_tmp9 = simd_and(basis_bits.bit_2, r10000_10fff_tmp8);
          bytetest_80_b4 = simd_andc(bytetest_80_bf, r10000_10fff_tmp9);
          r10000_10fff_tmp10 = simd_and(tmp21, bytetest_90);
          carryQ.cq[16] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp10, carryQ.get_carry_in(16), r10000_10fff_tmp11));
          r10000_10fff_tmp12 = simd_and(r10000_10fff_tmp11, bytetest_85);
          carryQ.cq[17] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp12, carryQ.get_carry_in(17), r10000_10fff_tmp13));
          r10000_10fff_tmp14 = simd_and(r10000_10fff_tmp13, bytetest_80_b4);
          struct_Nl.cc = simd_or(r10000_10fff_tmp14, struct_Nl.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(r10000_10fff_tmp1, tmp6);
          r10000_10fff_tmp15 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
          r10000_10fff_tmp16 = simd_and(r10000_10fff_tmp15, tmp12);
          bytetest_8d = simd_and(r10000_10fff_tmp3, r10000_10fff_tmp16);
          bytetest_81_81 = simd_and(r10000_10fff_tmp3, tmp13);
          r10000_10fff_tmp17 = simd_and(r10000_10fff_tmp11, bytetest_8d);
          carryQ.cq[18] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp17, carryQ.get_carry_in(18), r10000_10fff_tmp18));
          r10000_10fff_tmp19 = simd_and(r10000_10fff_tmp18, bytetest_81_81);
          struct_Nl.cc = simd_or(r10000_10fff_tmp19, struct_Nl.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(r10000_10fff_tmp1, tmp6);
          bytetest_8d = simd_and(r10000_10fff_tmp3, r10000_10fff_tmp16);
          r10000_10fff_tmp20 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
          r10000_10fff_tmp21 = simd_and(r10000_10fff_tmp20, tmp10);
          bytetest_8a_8a = simd_and(r10000_10fff_tmp3, r10000_10fff_tmp21);
          r10000_10fff_tmp22 = simd_and(r10000_10fff_tmp18, bytetest_8a_8a);
          struct_Nl.cc = simd_or(r10000_10fff_tmp22, struct_Nl.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(r10000_10fff_tmp1, tmp6);
          r10000_10fff_tmp23 = simd_and(r10000_10fff_tmp15, tmp14);
          bytetest_8f = simd_and(r10000_10fff_tmp3, r10000_10fff_tmp23);
          r10000_10fff_tmp24 = simd_andc(r10000_10fff_tmp1, basis_bits.bit_4);
          r10000_10fff_tmp25 = simd_not(basis_bits.bit_6);
          r10000_10fff_tmp26 = simd_or(simd_and(basis_bits.bit_5, r10000_10fff_tmp25), simd_andc(tmp5, basis_bits.bit_5));
          bytetest_91_95 = simd_and(r10000_10fff_tmp24, r10000_10fff_tmp26);
          r10000_10fff_tmp27 = simd_and(r10000_10fff_tmp11, bytetest_8f);
          carryQ.cq[19] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp27, carryQ.get_carry_in(19), r10000_10fff_tmp28));
          r10000_10fff_tmp29 = simd_and(r10000_10fff_tmp28, bytetest_91_95);
          struct_Nl.cc = simd_or(r10000_10fff_tmp29, struct_Nl.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(16, 4);
        }
  }
  CarryArray<20, 0> carryQ;
  };

  struct No {
  No() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_No & struct_No) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_f0, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, bytetest_91, tmp12, tmp13, bytetest_81, tmp14, tmp15;
		BitBlock tmp16, tmp17, tmp18, tmp19, tmp20, bytetest_92_a5, tmp21, tmp22;
		BitBlock tmp23, tmp24, tmp25, tmp26, tmp27, tmp28, tmp29, tmp30, tmp31;
		BitBlock bytetest_9d, bytetest_8d, tmp32, bytetest_a0_b1, tmp33, tmp34, tmp35;
		BitBlock tmp36, tmp37, tmp38, tmp39, bytetest_9f, tmp40, tmp41, bytetest_84;
		BitBlock tmp42, tmp43, bytetest_80_8a, tmp44, tmp45, tmp46, tmp47, tmp48;
		BitBlock tmp49, tmp50, bytetest_c2_df, r80_7ff_tmp1, r80_7ff_tmp2;
		BitBlock r80_7ff_tmp3, bytetest_c2, r80_7ff_tmp4, r80_7ff_tmp5, bytetest_b2_b3;
		BitBlock r80_7ff_tmp6, r80_7ff_tmp7, r80_7ff_tmp8, r80_7ff_tmp9, r80_7ff_tmp10;
		BitBlock bytetest_b9_b9, r80_7ff_tmp11, r80_7ff_tmp12, bytetest_bc_be;
		BitBlock r80_7ff_tmp13, tmp51, tmp52, tmp53, tmp54, bytetest_e1_ef;
		BitBlock bytetest_e0, bytetest_a0_bf, tmp55, tmp56, tmp57, tmp58;
		BitBlock r800_ffff_tmp1, r800_ffff_tmp2, r800_ffff_tmp3, r800_ffff_tmp4;
		BitBlock bytetest_a7, r800_ffff_tmp5, r800_ffff_tmp6, r800_ffff_tmp7;
		BitBlock r800_ffff_tmp8, bytetest_b4_b9, r800_ffff_tmp9, r800_ffff_tmp10;
		BitBlock r800_ffff_tmp11, r800_ffff_tmp12, r800_ffff_tmp13, bytetest_ad;
		BitBlock r800_ffff_tmp14, bytetest_b2_b7, r800_ffff_tmp15, r800_ffff_tmp16;
		BitBlock r800_ffff_tmp17, bytetest_af, r800_ffff_tmp18, bytetest_b0_b2;
		BitBlock r800_ffff_tmp19, r800_ffff_tmp20, r800_ffff_tmp21, bytetest_b1;
		BitBlock r800_ffff_tmp22, r800_ffff_tmp23, bytetest_b8_be, r800_ffff_tmp24;
		BitBlock r800_ffff_tmp25, r800_ffff_tmp26, r800_ffff_tmp27, bytetest_b5;
		BitBlock bytetest_b0_b5, r800_ffff_tmp28, r800_ffff_tmp29, r800_ffff_tmp30;
		BitBlock r800_ffff_tmp31, bytetest_bc, r800_ffff_tmp32, r800_ffff_tmp33;
		BitBlock r800_ffff_tmp34, bytetest_aa_b3, r800_ffff_tmp35, r800_ffff_tmp36;
		BitBlock r800_ffff_tmp37, bytetest_e1, r800_ffff_tmp38, r800_ffff_tmp39;
		BitBlock r800_ffff_tmp40, r800_ffff_tmp41, r800_ffff_tmp42, bytetest_a9_bc;
		BitBlock r800_ffff_tmp43, r800_ffff_tmp44, r800_ffff_tmp45, r800_ffff_tmp46;
		BitBlock r800_ffff_tmp47, bytetest_b0_b9, r800_ffff_tmp48, r800_ffff_tmp49;
		BitBlock r800_ffff_tmp50, r800_ffff_tmp51, r800_ffff_tmp52, r800_ffff_tmp53;
		BitBlock bytetest_9a_9a, r800_ffff_tmp54, r800_ffff_tmp55, r800_ffff_tmp56;
		BitBlock r800_ffff_tmp57, bytetest_e2, bytetest_b0_b0, r800_ffff_tmp58;
		BitBlock r800_ffff_tmp59, r800_ffff_tmp60, r800_ffff_tmp61, r800_ffff_tmp62;
		BitBlock r800_ffff_tmp63, bytetest_82, bytetest_80_89, r800_ffff_tmp64;
		BitBlock r800_ffff_tmp65, r800_ffff_tmp66, bytetest_85, bytetest_90_9f;
		BitBlock r800_ffff_tmp67, r800_ffff_tmp68, r800_ffff_tmp69, r800_ffff_tmp70;
		BitBlock bytetest_86, r800_ffff_tmp71, bytetest_89_89, r800_ffff_tmp72;
		BitBlock r800_ffff_tmp73, r800_ffff_tmp74, bytetest_92, r800_ffff_tmp75;
		BitBlock r800_ffff_tmp76, bytetest_80_9b, r800_ffff_tmp77, r800_ffff_tmp78;
		BitBlock r800_ffff_tmp79, r800_ffff_tmp80, r800_ffff_tmp81, r800_ffff_tmp82;
		BitBlock r800_ffff_tmp83, r800_ffff_tmp84, bytetest_93, r800_ffff_tmp85;
		BitBlock bytetest_aa_bf, r800_ffff_tmp86, r800_ffff_tmp87, r800_ffff_tmp88;
		BitBlock r800_ffff_tmp89, bytetest_9e, r800_ffff_tmp90, bytetest_80_93;
		BitBlock r800_ffff_tmp91, r800_ffff_tmp92, r800_ffff_tmp93, bytetest_b6_bf;
		BitBlock r800_ffff_tmp94, r800_ffff_tmp95, r800_ffff_tmp96, r800_ffff_tmp97;
		BitBlock bytetest_b3, bytetest_bd_bd, r800_ffff_tmp98, r800_ffff_tmp99;
		BitBlock r800_ffff_tmp100, bytetest_e3, r800_ffff_tmp101, r800_ffff_tmp102;
		BitBlock r800_ffff_tmp103, bytetest_92_95, r800_ffff_tmp104, r800_ffff_tmp105;
		BitBlock r800_ffff_tmp106, r800_ffff_tmp107, r800_ffff_tmp108;
		BitBlock r800_ffff_tmp109, bytetest_88, bytetest_a0_a9, r800_ffff_tmp110;
		BitBlock r800_ffff_tmp111, r800_ffff_tmp112, bytetest_89, bytetest_88_8f;
		BitBlock r800_ffff_tmp113, r800_ffff_tmp114, r800_ffff_tmp115;
		BitBlock r800_ffff_tmp116, bytetest_91_9f, r800_ffff_tmp117, bytetest_8a;
		BitBlock r800_ffff_tmp118, r800_ffff_tmp119, r800_ffff_tmp120, bytetest_b1_bf;
		BitBlock r800_ffff_tmp121, bytetest_ea, bytetest_a0, r800_ffff_tmp122;
		BitBlock r800_ffff_tmp123, r800_ffff_tmp124, r800_ffff_tmp125;
		BitBlock r800_ffff_tmp126, bytetest_90, bytetest_80_bf, tmp59, tmp60, tmp61;
		BitBlock r10000_10fff_tmp1, r10000_10fff_tmp2, r10000_10fff_tmp3;
		BitBlock r10000_10fff_tmp4, r10000_10fff_tmp5, r10000_10fff_tmp6;
		BitBlock bytetest_87_b3, r10000_10fff_tmp7, r10000_10fff_tmp8;
		BitBlock r10000_10fff_tmp9, r10000_10fff_tmp10, r10000_10fff_tmp11;
		BitBlock r10000_10fff_tmp12, r10000_10fff_tmp13, r10000_10fff_tmp14;
		BitBlock r10000_10fff_tmp15, r10000_10fff_tmp16, bytetest_b5_b8;
		BitBlock r10000_10fff_tmp17, r10000_10fff_tmp18, r10000_10fff_tmp19;
		BitBlock r10000_10fff_tmp20, r10000_10fff_tmp21, r10000_10fff_tmp22;
		BitBlock r10000_10fff_tmp23, bytetest_8a_8a, r10000_10fff_tmp24;
		BitBlock r10000_10fff_tmp25, r10000_10fff_tmp26, r10000_10fff_tmp27;
		BitBlock bytetest_8c, r10000_10fff_tmp28, bytetest_a0_a3, r10000_10fff_tmp29;
		BitBlock r10000_10fff_tmp30, r10000_10fff_tmp31, bytetest_a1, bytetest_98_9f;
		BitBlock r10000_10fff_tmp32, r10000_10fff_tmp33, r10000_10fff_tmp34;
		BitBlock bytetest_a4, r10000_10fff_tmp35, r10000_10fff_tmp36, bytetest_96_9b;
		BitBlock r10000_10fff_tmp37, r10000_10fff_tmp38, r10000_10fff_tmp39;
		BitBlock r10000_10fff_tmp40, bytetest_a9, bytetest_80_87, r10000_10fff_tmp41;
		BitBlock r10000_10fff_tmp42, r10000_10fff_tmp43, r10000_10fff_tmp44;
		BitBlock r10000_10fff_tmp45, r10000_10fff_tmp46, bytetest_bd_be;
		BitBlock r10000_10fff_tmp47, r10000_10fff_tmp48, r10000_10fff_tmp49;
		BitBlock r10000_10fff_tmp50, bytetest_b8_bf, r10000_10fff_tmp51, bytetest_b9;
		BitBlock r10000_10fff_tmp52, bytetest_a0_be, r10000_10fff_tmp53;
		BitBlock r10000_10fff_tmp54, r10000_10fff_tmp55;




        struct_No.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_and(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_or(tmp4, tmp5);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp11 = simd_andc(tmp10, tmp4);
        bytetest_91 = simd_and(tmp9, tmp11);
        tmp12 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp13 = simd_andc(tmp7, tmp12);
        bytetest_81 = simd_and(tmp13, tmp11);
        tmp14 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp15 = simd_or(basis_bits.bit_4, tmp14);
        tmp16 = simd_or(basis_bits.bit_3, tmp15);
        tmp17 = simd_not(tmp16);
        tmp18 = simd_or(tmp4, basis_bits.bit_6);
        tmp19 = simd_and(basis_bits.bit_3, tmp18);
        tmp20 = simd_or(simd_and(basis_bits.bit_2, tmp17), simd_andc(tmp19, basis_bits.bit_2));
        bytetest_92_a5 = simd_and(tmp7, tmp20);
        tmp21 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp21, carryQ.get_carry_in(0), tmp22));
        tmp23 = simd_and(tmp22, bytetest_f0);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp23, carryQ.get_carry_in(1), tmp24));
        tmp25 = simd_and(tmp24, bytetest_91);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp25, carryQ.get_carry_in(2), tmp26));
        tmp27 = simd_and(tmp26, bytetest_81);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp27, carryQ.get_carry_in(3), tmp28));
        tmp29 = simd_and(tmp28, bytetest_92_a5);
        struct_No.cc = simd_or(tmp29, struct_No.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        tmp30 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp31 = simd_and(tmp30, tmp10);
        bytetest_9d = simd_and(tmp9, tmp31);
        bytetest_8d = simd_and(tmp13, tmp31);
        tmp32 = simd_and(tmp7, basis_bits.bit_2);
        bytetest_a0_b1 = simd_andc(tmp32, tmp19);
        tmp33 = simd_and(tmp24, bytetest_9d);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp33, carryQ.get_carry_in(4), tmp34));
        tmp35 = simd_and(tmp34, bytetest_8d);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp35, carryQ.get_carry_in(5), tmp36));
        tmp37 = simd_and(tmp36, bytetest_a0_b1);
        struct_No.cc = simd_or(tmp37, struct_No.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        tmp38 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp39 = simd_and(tmp30, tmp38);
        bytetest_9f = simd_and(tmp9, tmp39);
        tmp40 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp41 = simd_andc(tmp40, tmp5);
        bytetest_84 = simd_and(tmp13, tmp41);
        tmp42 = simd_or(basis_bits.bit_5, tmp38);
        tmp43 = simd_and(basis_bits.bit_4, tmp42);
        bytetest_80_8a = simd_andc(tmp13, tmp43);
        tmp44 = simd_and(tmp24, bytetest_9f);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp44, carryQ.get_carry_in(6), tmp45));
        tmp46 = simd_and(tmp45, bytetest_84);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp46, carryQ.get_carry_in(7), tmp47));
        tmp48 = simd_and(tmp47, bytetest_80_8a);
        struct_No.cc = simd_or(tmp48, struct_No.cc);
        tmp49 = simd_andc(tmp1, basis_bits.bit_2);
        tmp50 = simd_or(basis_bits.bit_3, tmp18);
        bytetest_c2_df = simd_and(tmp49, tmp50);
        if ((bitblock::any(bytetest_c2_df) || carryQ.CarryTest(8, 1))) {
          r80_7ff_tmp1 = simd_andc(tmp1, tmp12);
          r80_7ff_tmp2 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
          r80_7ff_tmp3 = simd_andc(r80_7ff_tmp2, tmp4);
          bytetest_c2 = simd_and(r80_7ff_tmp1, r80_7ff_tmp3);
          r80_7ff_tmp4 = simd_and(tmp7, tmp2);
          r80_7ff_tmp5 = simd_andc(basis_bits.bit_6, tmp4);
          bytetest_b2_b3 = simd_and(r80_7ff_tmp4, r80_7ff_tmp5);
          r80_7ff_tmp6 = simd_and(tmp22, bytetest_c2);
          carryQ.cq[8] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp6, carryQ.get_carry_in(8), r80_7ff_tmp7));
          r80_7ff_tmp8 = simd_and(r80_7ff_tmp7, bytetest_b2_b3);
          struct_No.cc = simd_or(r80_7ff_tmp8, struct_No.cc);
          bytetest_c2 = simd_and(r80_7ff_tmp1, r80_7ff_tmp3);
          r80_7ff_tmp9 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
          r80_7ff_tmp10 = simd_and(r80_7ff_tmp9, tmp10);
          bytetest_b9_b9 = simd_and(r80_7ff_tmp4, r80_7ff_tmp10);
          r80_7ff_tmp11 = simd_and(r80_7ff_tmp7, bytetest_b9_b9);
          struct_No.cc = simd_or(r80_7ff_tmp11, struct_No.cc);
          bytetest_c2 = simd_and(r80_7ff_tmp1, r80_7ff_tmp3);
          r80_7ff_tmp12 = simd_and(r80_7ff_tmp4, tmp30);
          bytetest_bc_be = simd_andc(r80_7ff_tmp12, tmp38);
          r80_7ff_tmp13 = simd_and(r80_7ff_tmp7, bytetest_bc_be);
          struct_No.cc = simd_or(r80_7ff_tmp13, struct_No.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(8, 1);
        }
        tmp51 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp52 = simd_and(tmp1, tmp51);
        tmp53 = simd_or(basis_bits.bit_5, tmp5);
        tmp54 = simd_or(basis_bits.bit_4, tmp53);
        bytetest_e1_ef = simd_and(tmp52, tmp54);
        bytetest_e0 = simd_andc(tmp52, tmp6);
        bytetest_a0_bf = simd_and(tmp7, basis_bits.bit_2);
        tmp55 = simd_and(tmp22, bytetest_e0);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(tmp55, carryQ.get_carry_in(9), tmp56));
        tmp57 = simd_and(tmp56, bytetest_a0_bf);
        tmp58 = simd_or(tmp57, bytetest_e1_ef);
        if ((bitblock::any(tmp58) || carryQ.CarryTest(10, 29))) {
          r800_ffff_tmp1 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp2 = simd_and(tmp1, r800_ffff_tmp1);
          bytetest_e0 = simd_andc(r800_ffff_tmp2, tmp6);
          r800_ffff_tmp3 = simd_and(tmp7, r800_ffff_tmp1);
          r800_ffff_tmp4 = simd_and(tmp40, tmp38);
          bytetest_a7 = simd_and(r800_ffff_tmp3, r800_ffff_tmp4);
          r800_ffff_tmp5 = simd_and(tmp7, tmp2);
          r800_ffff_tmp6 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
          r800_ffff_tmp7 = simd_not(r800_ffff_tmp6);
          r800_ffff_tmp8 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp7), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
          bytetest_b4_b9 = simd_and(r800_ffff_tmp5, r800_ffff_tmp8);
          r800_ffff_tmp9 = simd_and(tmp22, bytetest_e0);
          carryQ.cq[10] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp9, carryQ.get_carry_in(10), r800_ffff_tmp10));
          r800_ffff_tmp11 = simd_and(r800_ffff_tmp10, bytetest_a7);
          carryQ.cq[11] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp11, carryQ.get_carry_in(11), r800_ffff_tmp12));
          r800_ffff_tmp13 = simd_and(r800_ffff_tmp12, bytetest_b4_b9);
          struct_No.cc = simd_or(r800_ffff_tmp13, struct_No.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp2, tmp6);
          bytetest_ad = simd_and(r800_ffff_tmp3, tmp31);
          r800_ffff_tmp14 = simd_andc(r800_ffff_tmp5, basis_bits.bit_4);
          bytetest_b2_b7 = simd_and(r800_ffff_tmp14, r800_ffff_tmp6);
          r800_ffff_tmp15 = simd_and(r800_ffff_tmp10, bytetest_ad);
          carryQ.cq[12] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp15, carryQ.get_carry_in(12), r800_ffff_tmp16));
          r800_ffff_tmp17 = simd_and(r800_ffff_tmp16, bytetest_b2_b7);
          struct_No.cc = simd_or(r800_ffff_tmp17, struct_No.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp2, tmp6);
          bytetest_af = simd_and(r800_ffff_tmp3, tmp39);
          r800_ffff_tmp18 = simd_andc(r800_ffff_tmp5, tmp4);
          bytetest_b0_b2 = simd_andc(r800_ffff_tmp18, tmp38);
          r800_ffff_tmp19 = simd_and(r800_ffff_tmp10, bytetest_af);
          carryQ.cq[13] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp19, carryQ.get_carry_in(13), r800_ffff_tmp20));
          r800_ffff_tmp21 = simd_and(r800_ffff_tmp20, bytetest_b0_b2);
          struct_No.cc = simd_or(r800_ffff_tmp21, struct_No.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp2, tmp6);
          bytetest_b1 = simd_and(r800_ffff_tmp5, tmp11);
          r800_ffff_tmp22 = simd_and(r800_ffff_tmp5, basis_bits.bit_4);
          r800_ffff_tmp23 = simd_and(basis_bits.bit_5, tmp38);
          bytetest_b8_be = simd_andc(r800_ffff_tmp22, r800_ffff_tmp23);
          r800_ffff_tmp24 = simd_and(r800_ffff_tmp10, bytetest_b1);
          carryQ.cq[14] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp24, carryQ.get_carry_in(14), r800_ffff_tmp25));
          r800_ffff_tmp26 = simd_and(r800_ffff_tmp25, bytetest_b8_be);
          struct_No.cc = simd_or(r800_ffff_tmp26, struct_No.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp2, tmp6);
          r800_ffff_tmp27 = simd_and(tmp40, tmp10);
          bytetest_b5 = simd_and(r800_ffff_tmp5, r800_ffff_tmp27);
          bytetest_b0_b5 = simd_andc(r800_ffff_tmp14, tmp14);
          r800_ffff_tmp28 = simd_and(r800_ffff_tmp10, bytetest_b5);
          carryQ.cq[15] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp28, carryQ.get_carry_in(15), r800_ffff_tmp29));
          r800_ffff_tmp30 = simd_and(r800_ffff_tmp29, bytetest_b0_b5);
          struct_No.cc = simd_or(r800_ffff_tmp30, struct_No.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp2, tmp6);
          r800_ffff_tmp31 = simd_andc(tmp30, tmp5);
          bytetest_bc = simd_and(r800_ffff_tmp5, r800_ffff_tmp31);
          r800_ffff_tmp32 = simd_not(tmp4);
          r800_ffff_tmp33 = simd_and(basis_bits.bit_4, r800_ffff_tmp6);
          r800_ffff_tmp34 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp32), simd_andc(r800_ffff_tmp33, basis_bits.bit_3));
          bytetest_aa_b3 = simd_and(tmp32, r800_ffff_tmp34);
          r800_ffff_tmp35 = simd_and(r800_ffff_tmp10, bytetest_bc);
          carryQ.cq[16] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp35, carryQ.get_carry_in(16), r800_ffff_tmp36));
          r800_ffff_tmp37 = simd_and(r800_ffff_tmp36, bytetest_aa_b3);
          struct_No.cc = simd_or(r800_ffff_tmp37, struct_No.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp11);
          bytetest_8d = simd_and(tmp13, tmp31);
          r800_ffff_tmp38 = simd_and(tmp30, tmp5);
          r800_ffff_tmp39 = simd_not(r800_ffff_tmp38);
          r800_ffff_tmp40 = simd_or(basis_bits.bit_5, tmp5);
          r800_ffff_tmp41 = simd_and(basis_bits.bit_4, r800_ffff_tmp40);
          r800_ffff_tmp42 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp39), simd_andc(r800_ffff_tmp41, basis_bits.bit_3));
          bytetest_a9_bc = simd_and(tmp32, r800_ffff_tmp42);
          r800_ffff_tmp43 = simd_and(tmp22, bytetest_e1);
          carryQ.cq[17] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp43, carryQ.get_carry_in(17), r800_ffff_tmp44));
          r800_ffff_tmp45 = simd_and(r800_ffff_tmp44, bytetest_8d);
          carryQ.cq[18] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp45, carryQ.get_carry_in(18), r800_ffff_tmp46));
          r800_ffff_tmp47 = simd_and(r800_ffff_tmp46, bytetest_a9_bc);
          struct_No.cc = simd_or(r800_ffff_tmp47, struct_No.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp11);
          bytetest_9f = simd_and(tmp9, tmp39);
          bytetest_b0_b9 = simd_andc(r800_ffff_tmp5, r800_ffff_tmp33);
          r800_ffff_tmp48 = simd_and(r800_ffff_tmp44, bytetest_9f);
          carryQ.cq[19] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp48, carryQ.get_carry_in(19), r800_ffff_tmp49));
          r800_ffff_tmp50 = simd_and(r800_ffff_tmp49, bytetest_b0_b9);
          struct_No.cc = simd_or(r800_ffff_tmp50, struct_No.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp11);
          bytetest_a7 = simd_and(r800_ffff_tmp3, r800_ffff_tmp4);
          r800_ffff_tmp51 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
          r800_ffff_tmp52 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp53 = simd_and(r800_ffff_tmp51, r800_ffff_tmp52);
          bytetest_9a_9a = simd_and(tmp9, r800_ffff_tmp53);
          r800_ffff_tmp54 = simd_and(r800_ffff_tmp44, bytetest_a7);
          carryQ.cq[20] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp54, carryQ.get_carry_in(20), r800_ffff_tmp55));
          r800_ffff_tmp56 = simd_and(r800_ffff_tmp55, bytetest_9a_9a);
          struct_No.cc = simd_or(r800_ffff_tmp56, struct_No.cc);
          r800_ffff_tmp57 = simd_andc(r800_ffff_tmp52, tmp4);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp57);
          bytetest_81 = simd_and(tmp13, tmp11);
          bytetest_b0_b0 = simd_andc(r800_ffff_tmp5, tmp6);
          r800_ffff_tmp58 = simd_and(tmp22, bytetest_e2);
          carryQ.cq[21] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp58, carryQ.get_carry_in(21), r800_ffff_tmp59));
          r800_ffff_tmp60 = simd_and(r800_ffff_tmp59, bytetest_81);
          carryQ.cq[22] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp60, carryQ.get_carry_in(22), r800_ffff_tmp61));
          r800_ffff_tmp62 = simd_and(r800_ffff_tmp61, bytetest_b0_b0);
          struct_No.cc = simd_or(r800_ffff_tmp62, struct_No.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp57);
          bytetest_81 = simd_and(tmp13, tmp11);
          bytetest_b4_b9 = simd_and(r800_ffff_tmp5, r800_ffff_tmp8);
          r800_ffff_tmp63 = simd_and(r800_ffff_tmp61, bytetest_b4_b9);
          struct_No.cc = simd_or(r800_ffff_tmp63, struct_No.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp57);
          bytetest_82 = simd_and(tmp13, r800_ffff_tmp57);
          bytetest_80_89 = simd_andc(tmp13, r800_ffff_tmp33);
          r800_ffff_tmp64 = simd_and(r800_ffff_tmp59, bytetest_82);
          carryQ.cq[23] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp64, carryQ.get_carry_in(23), r800_ffff_tmp65));
          r800_ffff_tmp66 = simd_and(r800_ffff_tmp65, bytetest_80_89);
          struct_No.cc = simd_or(r800_ffff_tmp66, struct_No.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp57);
          bytetest_85 = simd_and(tmp13, r800_ffff_tmp27);
          bytetest_90_9f = simd_and(tmp7, tmp8);
          r800_ffff_tmp67 = simd_and(r800_ffff_tmp59, bytetest_85);
          carryQ.cq[24] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp67, carryQ.get_carry_in(24), r800_ffff_tmp68));
          r800_ffff_tmp69 = simd_and(r800_ffff_tmp68, bytetest_90_9f);
          struct_No.cc = simd_or(r800_ffff_tmp69, struct_No.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp57);
          r800_ffff_tmp70 = simd_and(tmp40, r800_ffff_tmp52);
          bytetest_86 = simd_and(tmp13, r800_ffff_tmp70);
          r800_ffff_tmp71 = simd_and(r800_ffff_tmp51, tmp10);
          bytetest_89_89 = simd_and(tmp13, r800_ffff_tmp71);
          r800_ffff_tmp72 = simd_and(r800_ffff_tmp59, bytetest_86);
          carryQ.cq[25] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp72, carryQ.get_carry_in(25), r800_ffff_tmp73));
          r800_ffff_tmp74 = simd_and(r800_ffff_tmp73, bytetest_89_89);
          struct_No.cc = simd_or(r800_ffff_tmp74, struct_No.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp57);
          bytetest_92 = simd_and(bytetest_90_9f, r800_ffff_tmp57);
          r800_ffff_tmp75 = simd_andc(tmp7, basis_bits.bit_2);
          r800_ffff_tmp76 = simd_and(basis_bits.bit_3, tmp30);
          bytetest_80_9b = simd_andc(r800_ffff_tmp75, r800_ffff_tmp76);
          r800_ffff_tmp77 = simd_and(r800_ffff_tmp59, bytetest_92);
          carryQ.cq[26] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp77, carryQ.get_carry_in(26), r800_ffff_tmp78));
          r800_ffff_tmp79 = simd_and(r800_ffff_tmp78, bytetest_80_9b);
          bytetest_91 = simd_and(bytetest_90_9f, tmp11);
          bytetest_a0_bf = simd_and(tmp7, basis_bits.bit_2);
          r800_ffff_tmp80 = simd_and(r800_ffff_tmp59, bytetest_91);
          carryQ.cq[27] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp80, carryQ.get_carry_in(27), r800_ffff_tmp81));
          r800_ffff_tmp82 = simd_and(r800_ffff_tmp81, bytetest_a0_bf);
          r800_ffff_tmp83 = simd_or(r800_ffff_tmp82, r800_ffff_tmp79);
          struct_No.cc = simd_or(r800_ffff_tmp83, struct_No.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp57);
          r800_ffff_tmp84 = simd_andc(tmp38, tmp4);
          bytetest_93 = simd_and(bytetest_90_9f, r800_ffff_tmp84);
          r800_ffff_tmp85 = simd_or(basis_bits.bit_3, r800_ffff_tmp33);
          bytetest_aa_bf = simd_and(bytetest_a0_bf, r800_ffff_tmp85);
          r800_ffff_tmp86 = simd_and(r800_ffff_tmp59, bytetest_93);
          carryQ.cq[28] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp86, carryQ.get_carry_in(28), r800_ffff_tmp87));
          r800_ffff_tmp88 = simd_and(r800_ffff_tmp87, bytetest_aa_bf);
          struct_No.cc = simd_or(r800_ffff_tmp88, struct_No.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp57);
          r800_ffff_tmp89 = simd_and(tmp30, r800_ffff_tmp52);
          bytetest_9e = simd_and(bytetest_90_9f, r800_ffff_tmp89);
          r800_ffff_tmp90 = simd_and(basis_bits.bit_3, tmp4);
          bytetest_80_93 = simd_andc(r800_ffff_tmp75, r800_ffff_tmp90);
          r800_ffff_tmp91 = simd_and(r800_ffff_tmp59, bytetest_9e);
          carryQ.cq[29] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp91, carryQ.get_carry_in(29), r800_ffff_tmp92));
          r800_ffff_tmp93 = simd_and(r800_ffff_tmp92, bytetest_80_93);
          bytetest_9d = simd_and(bytetest_90_9f, tmp31);
          bytetest_b6_bf = simd_and(r800_ffff_tmp5, tmp15);
          r800_ffff_tmp94 = simd_and(r800_ffff_tmp59, bytetest_9d);
          carryQ.cq[30] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp94, carryQ.get_carry_in(30), r800_ffff_tmp95));
          r800_ffff_tmp96 = simd_and(r800_ffff_tmp95, bytetest_b6_bf);
          r800_ffff_tmp97 = simd_or(r800_ffff_tmp96, r800_ffff_tmp93);
          struct_No.cc = simd_or(r800_ffff_tmp97, struct_No.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp57);
          bytetest_b3 = simd_and(r800_ffff_tmp5, r800_ffff_tmp84);
          bytetest_bd_bd = simd_and(r800_ffff_tmp5, tmp31);
          r800_ffff_tmp98 = simd_and(r800_ffff_tmp59, bytetest_b3);
          carryQ.cq[31] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp98, carryQ.get_carry_in(31), r800_ffff_tmp99));
          r800_ffff_tmp100 = simd_and(r800_ffff_tmp99, bytetest_bd_bd);
          struct_No.cc = simd_or(r800_ffff_tmp100, struct_No.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp84);
          bytetest_86 = simd_and(tmp13, r800_ffff_tmp70);
          r800_ffff_tmp101 = simd_andc(bytetest_90_9f, basis_bits.bit_4);
          r800_ffff_tmp102 = simd_not(basis_bits.bit_6);
          r800_ffff_tmp103 = simd_or(simd_and(basis_bits.bit_5, r800_ffff_tmp102), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
          bytetest_92_95 = simd_and(r800_ffff_tmp101, r800_ffff_tmp103);
          r800_ffff_tmp104 = simd_and(tmp22, bytetest_e3);
          carryQ.cq[32] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp104, carryQ.get_carry_in(32), r800_ffff_tmp105));
          r800_ffff_tmp106 = simd_and(r800_ffff_tmp105, bytetest_86);
          carryQ.cq[33] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp106, carryQ.get_carry_in(33), r800_ffff_tmp107));
          r800_ffff_tmp108 = simd_and(r800_ffff_tmp107, bytetest_92_95);
          struct_No.cc = simd_or(r800_ffff_tmp108, struct_No.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp84);
          r800_ffff_tmp109 = simd_andc(r800_ffff_tmp51, tmp5);
          bytetest_88 = simd_and(tmp13, r800_ffff_tmp109);
          bytetest_a0_a9 = simd_andc(r800_ffff_tmp3, r800_ffff_tmp33);
          r800_ffff_tmp110 = simd_and(r800_ffff_tmp105, bytetest_88);
          carryQ.cq[34] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp110, carryQ.get_carry_in(34), r800_ffff_tmp111));
          r800_ffff_tmp112 = simd_and(r800_ffff_tmp111, bytetest_a0_a9);
          struct_No.cc = simd_or(r800_ffff_tmp112, struct_No.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp84);
          bytetest_89 = simd_and(tmp13, r800_ffff_tmp71);
          bytetest_88_8f = simd_and(tmp13, basis_bits.bit_4);
          r800_ffff_tmp113 = simd_and(r800_ffff_tmp105, bytetest_89);
          carryQ.cq[35] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp113, carryQ.get_carry_in(35), r800_ffff_tmp114));
          r800_ffff_tmp115 = simd_and(r800_ffff_tmp114, bytetest_88_8f);
          struct_No.cc = simd_or(r800_ffff_tmp115, struct_No.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp84);
          bytetest_89 = simd_and(tmp13, r800_ffff_tmp71);
          r800_ffff_tmp116 = simd_or(basis_bits.bit_4, r800_ffff_tmp40);
          bytetest_91_9f = simd_and(bytetest_90_9f, r800_ffff_tmp116);
          r800_ffff_tmp117 = simd_and(r800_ffff_tmp114, bytetest_91_9f);
          struct_No.cc = simd_or(r800_ffff_tmp117, struct_No.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp84);
          bytetest_8a = simd_and(tmp13, r800_ffff_tmp53);
          bytetest_80_89 = simd_andc(tmp13, r800_ffff_tmp33);
          r800_ffff_tmp118 = simd_and(r800_ffff_tmp105, bytetest_8a);
          carryQ.cq[36] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp118, carryQ.get_carry_in(36), r800_ffff_tmp119));
          r800_ffff_tmp120 = simd_and(r800_ffff_tmp119, bytetest_80_89);
          struct_No.cc = simd_or(r800_ffff_tmp120, struct_No.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp84);
          bytetest_8a = simd_and(tmp13, r800_ffff_tmp53);
          bytetest_b1_bf = simd_and(r800_ffff_tmp5, r800_ffff_tmp116);
          r800_ffff_tmp121 = simd_and(r800_ffff_tmp119, bytetest_b1_bf);
          struct_No.cc = simd_or(r800_ffff_tmp121, struct_No.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, r800_ffff_tmp53);
          bytetest_a0 = simd_andc(r800_ffff_tmp3, tmp6);
          bytetest_b0_b5 = simd_andc(r800_ffff_tmp14, tmp14);
          r800_ffff_tmp122 = simd_and(tmp22, bytetest_ea);
          carryQ.cq[37] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp122, carryQ.get_carry_in(37), r800_ffff_tmp123));
          r800_ffff_tmp124 = simd_and(r800_ffff_tmp123, bytetest_a0);
          carryQ.cq[38] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp124, carryQ.get_carry_in(38), r800_ffff_tmp125));
          r800_ffff_tmp126 = simd_and(r800_ffff_tmp125, bytetest_b0_b5);
          struct_No.cc = simd_or(r800_ffff_tmp126, struct_No.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(10, 29);
        }
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_90 = simd_andc(tmp9, tmp6);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp59 = simd_and(tmp24, bytetest_90);
        carryQ.cq[39] = carryout2carry(pablo_blk_Advance(tmp59, carryQ.get_carry_in(39), tmp60));
        tmp61 = simd_and(tmp60, bytetest_80_bf);
        if ((bitblock::any(tmp61) || carryQ.CarryTest(40, 10))) {
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp9, tmp6);
          bytetest_84 = simd_and(tmp13, tmp41);
          r10000_10fff_tmp1 = simd_and(basis_bits.bit_3, tmp4);
          r10000_10fff_tmp2 = simd_not(r10000_10fff_tmp1);
          r10000_10fff_tmp3 = simd_and(basis_bits.bit_5, tmp38);
          r10000_10fff_tmp4 = simd_or(basis_bits.bit_4, r10000_10fff_tmp3);
          r10000_10fff_tmp5 = simd_or(basis_bits.bit_3, r10000_10fff_tmp4);
          r10000_10fff_tmp6 = simd_or(simd_and(basis_bits.bit_2, r10000_10fff_tmp2), simd_andc(r10000_10fff_tmp5, basis_bits.bit_2));
          bytetest_87_b3 = simd_and(tmp7, r10000_10fff_tmp6);
          r10000_10fff_tmp7 = simd_and(tmp24, bytetest_90);
          carryQ.cq[40] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp7, carryQ.get_carry_in(40), r10000_10fff_tmp8));
          r10000_10fff_tmp9 = simd_and(r10000_10fff_tmp8, bytetest_84);
          carryQ.cq[41] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp9, carryQ.get_carry_in(41), r10000_10fff_tmp10));
          r10000_10fff_tmp11 = simd_and(r10000_10fff_tmp10, bytetest_87_b3);
          struct_No.cc = simd_or(r10000_10fff_tmp11, struct_No.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp9, tmp6);
          r10000_10fff_tmp12 = simd_and(tmp40, tmp10);
          bytetest_85 = simd_and(tmp13, r10000_10fff_tmp12);
          r10000_10fff_tmp13 = simd_and(tmp7, tmp2);
          r10000_10fff_tmp14 = simd_not(tmp53);
          r10000_10fff_tmp15 = simd_and(basis_bits.bit_5, tmp5);
          r10000_10fff_tmp16 = simd_or(simd_and(basis_bits.bit_4, r10000_10fff_tmp14), simd_andc(r10000_10fff_tmp15, basis_bits.bit_4));
          bytetest_b5_b8 = simd_and(r10000_10fff_tmp13, r10000_10fff_tmp16);
          r10000_10fff_tmp17 = simd_and(r10000_10fff_tmp8, bytetest_85);
          carryQ.cq[42] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp17, carryQ.get_carry_in(42), r10000_10fff_tmp18));
          r10000_10fff_tmp19 = simd_and(r10000_10fff_tmp18, bytetest_b5_b8);
          struct_No.cc = simd_or(r10000_10fff_tmp19, struct_No.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp9, tmp6);
          r10000_10fff_tmp20 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
          r10000_10fff_tmp21 = simd_and(tmp40, r10000_10fff_tmp20);
          bytetest_86 = simd_and(tmp13, r10000_10fff_tmp21);
          r10000_10fff_tmp22 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
          r10000_10fff_tmp23 = simd_and(r10000_10fff_tmp22, r10000_10fff_tmp20);
          bytetest_8a_8a = simd_and(tmp13, r10000_10fff_tmp23);
          r10000_10fff_tmp24 = simd_and(r10000_10fff_tmp8, bytetest_86);
          carryQ.cq[43] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp24, carryQ.get_carry_in(43), r10000_10fff_tmp25));
          r10000_10fff_tmp26 = simd_and(r10000_10fff_tmp25, bytetest_8a_8a);
          struct_No.cc = simd_or(r10000_10fff_tmp26, struct_No.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp9, tmp6);
          r10000_10fff_tmp27 = simd_andc(tmp30, tmp5);
          bytetest_8c = simd_and(tmp13, r10000_10fff_tmp27);
          r10000_10fff_tmp28 = simd_and(tmp7, tmp51);
          bytetest_a0_a3 = simd_andc(r10000_10fff_tmp28, tmp4);
          r10000_10fff_tmp29 = simd_and(r10000_10fff_tmp8, bytetest_8c);
          carryQ.cq[44] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp29, carryQ.get_carry_in(44), r10000_10fff_tmp30));
          r10000_10fff_tmp31 = simd_and(r10000_10fff_tmp30, bytetest_a0_a3);
          struct_No.cc = simd_or(r10000_10fff_tmp31, struct_No.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp9, tmp6);
          bytetest_a1 = simd_and(r10000_10fff_tmp28, tmp11);
          bytetest_98_9f = simd_and(tmp9, basis_bits.bit_4);
          r10000_10fff_tmp32 = simd_and(r10000_10fff_tmp8, bytetest_a1);
          carryQ.cq[45] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp32, carryQ.get_carry_in(45), r10000_10fff_tmp33));
          r10000_10fff_tmp34 = simd_and(r10000_10fff_tmp33, bytetest_98_9f);
          struct_No.cc = simd_or(r10000_10fff_tmp34, struct_No.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp9, tmp6);
          bytetest_a4 = simd_and(r10000_10fff_tmp28, tmp41);
          r10000_10fff_tmp35 = simd_not(basis_bits.bit_5);
          r10000_10fff_tmp36 = simd_or(simd_and(basis_bits.bit_4, r10000_10fff_tmp35), simd_andc(tmp14, basis_bits.bit_4));
          bytetest_96_9b = simd_and(tmp9, r10000_10fff_tmp36);
          r10000_10fff_tmp37 = simd_and(r10000_10fff_tmp8, bytetest_a4);
          carryQ.cq[46] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp37, carryQ.get_carry_in(46), r10000_10fff_tmp38));
          r10000_10fff_tmp39 = simd_and(r10000_10fff_tmp38, bytetest_96_9b);
          struct_No.cc = simd_or(r10000_10fff_tmp39, struct_No.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp9, tmp6);
          r10000_10fff_tmp40 = simd_and(r10000_10fff_tmp22, tmp10);
          bytetest_a9 = simd_and(r10000_10fff_tmp28, r10000_10fff_tmp40);
          bytetest_80_87 = simd_andc(tmp13, basis_bits.bit_4);
          r10000_10fff_tmp41 = simd_and(r10000_10fff_tmp8, bytetest_a9);
          carryQ.cq[47] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp41, carryQ.get_carry_in(47), r10000_10fff_tmp42));
          r10000_10fff_tmp43 = simd_and(r10000_10fff_tmp42, bytetest_80_87);
          struct_No.cc = simd_or(r10000_10fff_tmp43, struct_No.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp9, tmp6);
          bytetest_a9 = simd_and(r10000_10fff_tmp28, r10000_10fff_tmp40);
          r10000_10fff_tmp44 = simd_and(r10000_10fff_tmp13, tmp30);
          r10000_10fff_tmp45 = simd_not(basis_bits.bit_7);
          r10000_10fff_tmp46 = simd_or(simd_and(basis_bits.bit_6, r10000_10fff_tmp45), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
          bytetest_bd_be = simd_and(r10000_10fff_tmp44, r10000_10fff_tmp46);
          r10000_10fff_tmp47 = simd_and(r10000_10fff_tmp42, bytetest_bd_be);
          struct_No.cc = simd_or(r10000_10fff_tmp47, struct_No.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp9, tmp6);
          bytetest_ad = simd_and(r10000_10fff_tmp28, tmp31);
          bytetest_98_9f = simd_and(tmp9, basis_bits.bit_4);
          r10000_10fff_tmp48 = simd_and(r10000_10fff_tmp8, bytetest_ad);
          carryQ.cq[48] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp48, carryQ.get_carry_in(48), r10000_10fff_tmp49));
          r10000_10fff_tmp50 = simd_and(r10000_10fff_tmp49, bytetest_98_9f);
          struct_No.cc = simd_or(r10000_10fff_tmp50, struct_No.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp9, tmp6);
          bytetest_ad = simd_and(r10000_10fff_tmp28, tmp31);
          bytetest_b8_bf = simd_and(r10000_10fff_tmp13, basis_bits.bit_4);
          r10000_10fff_tmp51 = simd_and(r10000_10fff_tmp49, bytetest_b8_bf);
          struct_No.cc = simd_or(r10000_10fff_tmp51, struct_No.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp9, tmp6);
          bytetest_b9 = simd_and(r10000_10fff_tmp13, r10000_10fff_tmp40);
          r10000_10fff_tmp52 = simd_and(basis_bits.bit_3, tmp39);
          bytetest_a0_be = simd_andc(bytetest_a0_bf, r10000_10fff_tmp52);
          r10000_10fff_tmp53 = simd_and(r10000_10fff_tmp8, bytetest_b9);
          carryQ.cq[49] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp53, carryQ.get_carry_in(49), r10000_10fff_tmp54));
          r10000_10fff_tmp55 = simd_and(r10000_10fff_tmp54, bytetest_a0_be);
          struct_No.cc = simd_or(r10000_10fff_tmp55, struct_No.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(40, 10);
        }
        carryQ.CarryQ_Adjust(50);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_No & struct_No, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_f0, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, bytetest_91, tmp12, tmp13, bytetest_81, tmp14, tmp15;
		BitBlock tmp16, tmp17, tmp18, tmp19, tmp20, bytetest_92_a5, tmp21, tmp22;
		BitBlock tmp23, tmp24, tmp25, tmp26, tmp27, tmp28, tmp29, tmp30, tmp31;
		BitBlock bytetest_9d, bytetest_8d, tmp32, bytetest_a0_b1, tmp33, tmp34, tmp35;
		BitBlock tmp36, tmp37, tmp38, tmp39, bytetest_9f, tmp40, tmp41, bytetest_84;
		BitBlock tmp42, tmp43, bytetest_80_8a, tmp44, tmp45, tmp46, tmp47, tmp48;
		BitBlock tmp49, tmp50, bytetest_c2_df, r80_7ff_tmp1, r80_7ff_tmp2;
		BitBlock r80_7ff_tmp3, bytetest_c2, r80_7ff_tmp4, r80_7ff_tmp5, bytetest_b2_b3;
		BitBlock r80_7ff_tmp6, r80_7ff_tmp7, r80_7ff_tmp8, r80_7ff_tmp9, r80_7ff_tmp10;
		BitBlock bytetest_b9_b9, r80_7ff_tmp11, r80_7ff_tmp12, bytetest_bc_be;
		BitBlock r80_7ff_tmp13, tmp51, tmp52, tmp53, tmp54, bytetest_e1_ef;
		BitBlock bytetest_e0, bytetest_a0_bf, tmp55, tmp56, tmp57, tmp58;
		BitBlock r800_ffff_tmp1, r800_ffff_tmp2, r800_ffff_tmp3, r800_ffff_tmp4;
		BitBlock bytetest_a7, r800_ffff_tmp5, r800_ffff_tmp6, r800_ffff_tmp7;
		BitBlock r800_ffff_tmp8, bytetest_b4_b9, r800_ffff_tmp9, r800_ffff_tmp10;
		BitBlock r800_ffff_tmp11, r800_ffff_tmp12, r800_ffff_tmp13, bytetest_ad;
		BitBlock r800_ffff_tmp14, bytetest_b2_b7, r800_ffff_tmp15, r800_ffff_tmp16;
		BitBlock r800_ffff_tmp17, bytetest_af, r800_ffff_tmp18, bytetest_b0_b2;
		BitBlock r800_ffff_tmp19, r800_ffff_tmp20, r800_ffff_tmp21, bytetest_b1;
		BitBlock r800_ffff_tmp22, r800_ffff_tmp23, bytetest_b8_be, r800_ffff_tmp24;
		BitBlock r800_ffff_tmp25, r800_ffff_tmp26, r800_ffff_tmp27, bytetest_b5;
		BitBlock bytetest_b0_b5, r800_ffff_tmp28, r800_ffff_tmp29, r800_ffff_tmp30;
		BitBlock r800_ffff_tmp31, bytetest_bc, r800_ffff_tmp32, r800_ffff_tmp33;
		BitBlock r800_ffff_tmp34, bytetest_aa_b3, r800_ffff_tmp35, r800_ffff_tmp36;
		BitBlock r800_ffff_tmp37, bytetest_e1, r800_ffff_tmp38, r800_ffff_tmp39;
		BitBlock r800_ffff_tmp40, r800_ffff_tmp41, r800_ffff_tmp42, bytetest_a9_bc;
		BitBlock r800_ffff_tmp43, r800_ffff_tmp44, r800_ffff_tmp45, r800_ffff_tmp46;
		BitBlock r800_ffff_tmp47, bytetest_b0_b9, r800_ffff_tmp48, r800_ffff_tmp49;
		BitBlock r800_ffff_tmp50, r800_ffff_tmp51, r800_ffff_tmp52, r800_ffff_tmp53;
		BitBlock bytetest_9a_9a, r800_ffff_tmp54, r800_ffff_tmp55, r800_ffff_tmp56;
		BitBlock r800_ffff_tmp57, bytetest_e2, bytetest_b0_b0, r800_ffff_tmp58;
		BitBlock r800_ffff_tmp59, r800_ffff_tmp60, r800_ffff_tmp61, r800_ffff_tmp62;
		BitBlock r800_ffff_tmp63, bytetest_82, bytetest_80_89, r800_ffff_tmp64;
		BitBlock r800_ffff_tmp65, r800_ffff_tmp66, bytetest_85, bytetest_90_9f;
		BitBlock r800_ffff_tmp67, r800_ffff_tmp68, r800_ffff_tmp69, r800_ffff_tmp70;
		BitBlock bytetest_86, r800_ffff_tmp71, bytetest_89_89, r800_ffff_tmp72;
		BitBlock r800_ffff_tmp73, r800_ffff_tmp74, bytetest_92, r800_ffff_tmp75;
		BitBlock r800_ffff_tmp76, bytetest_80_9b, r800_ffff_tmp77, r800_ffff_tmp78;
		BitBlock r800_ffff_tmp79, r800_ffff_tmp80, r800_ffff_tmp81, r800_ffff_tmp82;
		BitBlock r800_ffff_tmp83, r800_ffff_tmp84, bytetest_93, r800_ffff_tmp85;
		BitBlock bytetest_aa_bf, r800_ffff_tmp86, r800_ffff_tmp87, r800_ffff_tmp88;
		BitBlock r800_ffff_tmp89, bytetest_9e, r800_ffff_tmp90, bytetest_80_93;
		BitBlock r800_ffff_tmp91, r800_ffff_tmp92, r800_ffff_tmp93, bytetest_b6_bf;
		BitBlock r800_ffff_tmp94, r800_ffff_tmp95, r800_ffff_tmp96, r800_ffff_tmp97;
		BitBlock bytetest_b3, bytetest_bd_bd, r800_ffff_tmp98, r800_ffff_tmp99;
		BitBlock r800_ffff_tmp100, bytetest_e3, r800_ffff_tmp101, r800_ffff_tmp102;
		BitBlock r800_ffff_tmp103, bytetest_92_95, r800_ffff_tmp104, r800_ffff_tmp105;
		BitBlock r800_ffff_tmp106, r800_ffff_tmp107, r800_ffff_tmp108;
		BitBlock r800_ffff_tmp109, bytetest_88, bytetest_a0_a9, r800_ffff_tmp110;
		BitBlock r800_ffff_tmp111, r800_ffff_tmp112, bytetest_89, bytetest_88_8f;
		BitBlock r800_ffff_tmp113, r800_ffff_tmp114, r800_ffff_tmp115;
		BitBlock r800_ffff_tmp116, bytetest_91_9f, r800_ffff_tmp117, bytetest_8a;
		BitBlock r800_ffff_tmp118, r800_ffff_tmp119, r800_ffff_tmp120, bytetest_b1_bf;
		BitBlock r800_ffff_tmp121, bytetest_ea, bytetest_a0, r800_ffff_tmp122;
		BitBlock r800_ffff_tmp123, r800_ffff_tmp124, r800_ffff_tmp125;
		BitBlock r800_ffff_tmp126, bytetest_90, bytetest_80_bf, tmp59, tmp60, tmp61;
		BitBlock r10000_10fff_tmp1, r10000_10fff_tmp2, r10000_10fff_tmp3;
		BitBlock r10000_10fff_tmp4, r10000_10fff_tmp5, r10000_10fff_tmp6;
		BitBlock bytetest_87_b3, r10000_10fff_tmp7, r10000_10fff_tmp8;
		BitBlock r10000_10fff_tmp9, r10000_10fff_tmp10, r10000_10fff_tmp11;
		BitBlock r10000_10fff_tmp12, r10000_10fff_tmp13, r10000_10fff_tmp14;
		BitBlock r10000_10fff_tmp15, r10000_10fff_tmp16, bytetest_b5_b8;
		BitBlock r10000_10fff_tmp17, r10000_10fff_tmp18, r10000_10fff_tmp19;
		BitBlock r10000_10fff_tmp20, r10000_10fff_tmp21, r10000_10fff_tmp22;
		BitBlock r10000_10fff_tmp23, bytetest_8a_8a, r10000_10fff_tmp24;
		BitBlock r10000_10fff_tmp25, r10000_10fff_tmp26, r10000_10fff_tmp27;
		BitBlock bytetest_8c, r10000_10fff_tmp28, bytetest_a0_a3, r10000_10fff_tmp29;
		BitBlock r10000_10fff_tmp30, r10000_10fff_tmp31, bytetest_a1, bytetest_98_9f;
		BitBlock r10000_10fff_tmp32, r10000_10fff_tmp33, r10000_10fff_tmp34;
		BitBlock bytetest_a4, r10000_10fff_tmp35, r10000_10fff_tmp36, bytetest_96_9b;
		BitBlock r10000_10fff_tmp37, r10000_10fff_tmp38, r10000_10fff_tmp39;
		BitBlock r10000_10fff_tmp40, bytetest_a9, bytetest_80_87, r10000_10fff_tmp41;
		BitBlock r10000_10fff_tmp42, r10000_10fff_tmp43, r10000_10fff_tmp44;
		BitBlock r10000_10fff_tmp45, r10000_10fff_tmp46, bytetest_bd_be;
		BitBlock r10000_10fff_tmp47, r10000_10fff_tmp48, r10000_10fff_tmp49;
		BitBlock r10000_10fff_tmp50, bytetest_b8_bf, r10000_10fff_tmp51, bytetest_b9;
		BitBlock r10000_10fff_tmp52, bytetest_a0_be, r10000_10fff_tmp53;
		BitBlock r10000_10fff_tmp54, r10000_10fff_tmp55;




        struct_No.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_and(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_or(tmp4, tmp5);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp11 = simd_andc(tmp10, tmp4);
        bytetest_91 = simd_and(tmp9, tmp11);
        tmp12 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp13 = simd_andc(tmp7, tmp12);
        bytetest_81 = simd_and(tmp13, tmp11);
        tmp14 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp15 = simd_or(basis_bits.bit_4, tmp14);
        tmp16 = simd_or(basis_bits.bit_3, tmp15);
        tmp17 = simd_not(tmp16);
        tmp18 = simd_or(tmp4, basis_bits.bit_6);
        tmp19 = simd_and(basis_bits.bit_3, tmp18);
        tmp20 = simd_or(simd_and(basis_bits.bit_2, tmp17), simd_andc(tmp19, basis_bits.bit_2));
        bytetest_92_a5 = simd_and(tmp7, tmp20);
        tmp21 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp21, carryQ.get_carry_in(0), tmp22));
        tmp23 = simd_and(tmp22, bytetest_f0);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp23, carryQ.get_carry_in(1), tmp24));
        tmp25 = simd_and(tmp24, bytetest_91);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp25, carryQ.get_carry_in(2), tmp26));
        tmp27 = simd_and(tmp26, bytetest_81);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp27, carryQ.get_carry_in(3), tmp28));
        tmp29 = simd_and(tmp28, bytetest_92_a5);
        struct_No.cc = simd_or(tmp29, struct_No.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        tmp30 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp31 = simd_and(tmp30, tmp10);
        bytetest_9d = simd_and(tmp9, tmp31);
        bytetest_8d = simd_and(tmp13, tmp31);
        tmp32 = simd_and(tmp7, basis_bits.bit_2);
        bytetest_a0_b1 = simd_andc(tmp32, tmp19);
        tmp33 = simd_and(tmp24, bytetest_9d);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp33, carryQ.get_carry_in(4), tmp34));
        tmp35 = simd_and(tmp34, bytetest_8d);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp35, carryQ.get_carry_in(5), tmp36));
        tmp37 = simd_and(tmp36, bytetest_a0_b1);
        struct_No.cc = simd_or(tmp37, struct_No.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        tmp38 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp39 = simd_and(tmp30, tmp38);
        bytetest_9f = simd_and(tmp9, tmp39);
        tmp40 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp41 = simd_andc(tmp40, tmp5);
        bytetest_84 = simd_and(tmp13, tmp41);
        tmp42 = simd_or(basis_bits.bit_5, tmp38);
        tmp43 = simd_and(basis_bits.bit_4, tmp42);
        bytetest_80_8a = simd_andc(tmp13, tmp43);
        tmp44 = simd_and(tmp24, bytetest_9f);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp44, carryQ.get_carry_in(6), tmp45));
        tmp46 = simd_and(tmp45, bytetest_84);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp46, carryQ.get_carry_in(7), tmp47));
        tmp48 = simd_and(tmp47, bytetest_80_8a);
        struct_No.cc = simd_or(tmp48, struct_No.cc);
        tmp49 = simd_andc(tmp1, basis_bits.bit_2);
        tmp50 = simd_or(basis_bits.bit_3, tmp18);
        bytetest_c2_df = simd_and(tmp49, tmp50);
        if ((bitblock::any(bytetest_c2_df) || carryQ.CarryTest(8, 1))) {
          r80_7ff_tmp1 = simd_andc(tmp1, tmp12);
          r80_7ff_tmp2 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
          r80_7ff_tmp3 = simd_andc(r80_7ff_tmp2, tmp4);
          bytetest_c2 = simd_and(r80_7ff_tmp1, r80_7ff_tmp3);
          r80_7ff_tmp4 = simd_and(tmp7, tmp2);
          r80_7ff_tmp5 = simd_andc(basis_bits.bit_6, tmp4);
          bytetest_b2_b3 = simd_and(r80_7ff_tmp4, r80_7ff_tmp5);
          r80_7ff_tmp6 = simd_and(tmp22, bytetest_c2);
          carryQ.cq[8] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp6, carryQ.get_carry_in(8), r80_7ff_tmp7));
          r80_7ff_tmp8 = simd_and(r80_7ff_tmp7, bytetest_b2_b3);
          struct_No.cc = simd_or(r80_7ff_tmp8, struct_No.cc);
          bytetest_c2 = simd_and(r80_7ff_tmp1, r80_7ff_tmp3);
          r80_7ff_tmp9 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
          r80_7ff_tmp10 = simd_and(r80_7ff_tmp9, tmp10);
          bytetest_b9_b9 = simd_and(r80_7ff_tmp4, r80_7ff_tmp10);
          r80_7ff_tmp11 = simd_and(r80_7ff_tmp7, bytetest_b9_b9);
          struct_No.cc = simd_or(r80_7ff_tmp11, struct_No.cc);
          bytetest_c2 = simd_and(r80_7ff_tmp1, r80_7ff_tmp3);
          r80_7ff_tmp12 = simd_and(r80_7ff_tmp4, tmp30);
          bytetest_bc_be = simd_andc(r80_7ff_tmp12, tmp38);
          r80_7ff_tmp13 = simd_and(r80_7ff_tmp7, bytetest_bc_be);
          struct_No.cc = simd_or(r80_7ff_tmp13, struct_No.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(8, 1);
        }
        tmp51 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp52 = simd_and(tmp1, tmp51);
        tmp53 = simd_or(basis_bits.bit_5, tmp5);
        tmp54 = simd_or(basis_bits.bit_4, tmp53);
        bytetest_e1_ef = simd_and(tmp52, tmp54);
        bytetest_e0 = simd_andc(tmp52, tmp6);
        bytetest_a0_bf = simd_and(tmp7, basis_bits.bit_2);
        tmp55 = simd_and(tmp22, bytetest_e0);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(tmp55, carryQ.get_carry_in(9), tmp56));
        tmp57 = simd_and(tmp56, bytetest_a0_bf);
        tmp58 = simd_or(tmp57, bytetest_e1_ef);
        if ((bitblock::any(tmp58) || carryQ.CarryTest(10, 29))) {
          r800_ffff_tmp1 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp2 = simd_and(tmp1, r800_ffff_tmp1);
          bytetest_e0 = simd_andc(r800_ffff_tmp2, tmp6);
          r800_ffff_tmp3 = simd_and(tmp7, r800_ffff_tmp1);
          r800_ffff_tmp4 = simd_and(tmp40, tmp38);
          bytetest_a7 = simd_and(r800_ffff_tmp3, r800_ffff_tmp4);
          r800_ffff_tmp5 = simd_and(tmp7, tmp2);
          r800_ffff_tmp6 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
          r800_ffff_tmp7 = simd_not(r800_ffff_tmp6);
          r800_ffff_tmp8 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp7), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
          bytetest_b4_b9 = simd_and(r800_ffff_tmp5, r800_ffff_tmp8);
          r800_ffff_tmp9 = simd_and(tmp22, bytetest_e0);
          carryQ.cq[10] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp9, carryQ.get_carry_in(10), r800_ffff_tmp10));
          r800_ffff_tmp11 = simd_and(r800_ffff_tmp10, bytetest_a7);
          carryQ.cq[11] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp11, carryQ.get_carry_in(11), r800_ffff_tmp12));
          r800_ffff_tmp13 = simd_and(r800_ffff_tmp12, bytetest_b4_b9);
          struct_No.cc = simd_or(r800_ffff_tmp13, struct_No.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp2, tmp6);
          bytetest_ad = simd_and(r800_ffff_tmp3, tmp31);
          r800_ffff_tmp14 = simd_andc(r800_ffff_tmp5, basis_bits.bit_4);
          bytetest_b2_b7 = simd_and(r800_ffff_tmp14, r800_ffff_tmp6);
          r800_ffff_tmp15 = simd_and(r800_ffff_tmp10, bytetest_ad);
          carryQ.cq[12] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp15, carryQ.get_carry_in(12), r800_ffff_tmp16));
          r800_ffff_tmp17 = simd_and(r800_ffff_tmp16, bytetest_b2_b7);
          struct_No.cc = simd_or(r800_ffff_tmp17, struct_No.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp2, tmp6);
          bytetest_af = simd_and(r800_ffff_tmp3, tmp39);
          r800_ffff_tmp18 = simd_andc(r800_ffff_tmp5, tmp4);
          bytetest_b0_b2 = simd_andc(r800_ffff_tmp18, tmp38);
          r800_ffff_tmp19 = simd_and(r800_ffff_tmp10, bytetest_af);
          carryQ.cq[13] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp19, carryQ.get_carry_in(13), r800_ffff_tmp20));
          r800_ffff_tmp21 = simd_and(r800_ffff_tmp20, bytetest_b0_b2);
          struct_No.cc = simd_or(r800_ffff_tmp21, struct_No.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp2, tmp6);
          bytetest_b1 = simd_and(r800_ffff_tmp5, tmp11);
          r800_ffff_tmp22 = simd_and(r800_ffff_tmp5, basis_bits.bit_4);
          r800_ffff_tmp23 = simd_and(basis_bits.bit_5, tmp38);
          bytetest_b8_be = simd_andc(r800_ffff_tmp22, r800_ffff_tmp23);
          r800_ffff_tmp24 = simd_and(r800_ffff_tmp10, bytetest_b1);
          carryQ.cq[14] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp24, carryQ.get_carry_in(14), r800_ffff_tmp25));
          r800_ffff_tmp26 = simd_and(r800_ffff_tmp25, bytetest_b8_be);
          struct_No.cc = simd_or(r800_ffff_tmp26, struct_No.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp2, tmp6);
          r800_ffff_tmp27 = simd_and(tmp40, tmp10);
          bytetest_b5 = simd_and(r800_ffff_tmp5, r800_ffff_tmp27);
          bytetest_b0_b5 = simd_andc(r800_ffff_tmp14, tmp14);
          r800_ffff_tmp28 = simd_and(r800_ffff_tmp10, bytetest_b5);
          carryQ.cq[15] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp28, carryQ.get_carry_in(15), r800_ffff_tmp29));
          r800_ffff_tmp30 = simd_and(r800_ffff_tmp29, bytetest_b0_b5);
          struct_No.cc = simd_or(r800_ffff_tmp30, struct_No.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp2, tmp6);
          r800_ffff_tmp31 = simd_andc(tmp30, tmp5);
          bytetest_bc = simd_and(r800_ffff_tmp5, r800_ffff_tmp31);
          r800_ffff_tmp32 = simd_not(tmp4);
          r800_ffff_tmp33 = simd_and(basis_bits.bit_4, r800_ffff_tmp6);
          r800_ffff_tmp34 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp32), simd_andc(r800_ffff_tmp33, basis_bits.bit_3));
          bytetest_aa_b3 = simd_and(tmp32, r800_ffff_tmp34);
          r800_ffff_tmp35 = simd_and(r800_ffff_tmp10, bytetest_bc);
          carryQ.cq[16] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp35, carryQ.get_carry_in(16), r800_ffff_tmp36));
          r800_ffff_tmp37 = simd_and(r800_ffff_tmp36, bytetest_aa_b3);
          struct_No.cc = simd_or(r800_ffff_tmp37, struct_No.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp11);
          bytetest_8d = simd_and(tmp13, tmp31);
          r800_ffff_tmp38 = simd_and(tmp30, tmp5);
          r800_ffff_tmp39 = simd_not(r800_ffff_tmp38);
          r800_ffff_tmp40 = simd_or(basis_bits.bit_5, tmp5);
          r800_ffff_tmp41 = simd_and(basis_bits.bit_4, r800_ffff_tmp40);
          r800_ffff_tmp42 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp39), simd_andc(r800_ffff_tmp41, basis_bits.bit_3));
          bytetest_a9_bc = simd_and(tmp32, r800_ffff_tmp42);
          r800_ffff_tmp43 = simd_and(tmp22, bytetest_e1);
          carryQ.cq[17] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp43, carryQ.get_carry_in(17), r800_ffff_tmp44));
          r800_ffff_tmp45 = simd_and(r800_ffff_tmp44, bytetest_8d);
          carryQ.cq[18] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp45, carryQ.get_carry_in(18), r800_ffff_tmp46));
          r800_ffff_tmp47 = simd_and(r800_ffff_tmp46, bytetest_a9_bc);
          struct_No.cc = simd_or(r800_ffff_tmp47, struct_No.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp11);
          bytetest_9f = simd_and(tmp9, tmp39);
          bytetest_b0_b9 = simd_andc(r800_ffff_tmp5, r800_ffff_tmp33);
          r800_ffff_tmp48 = simd_and(r800_ffff_tmp44, bytetest_9f);
          carryQ.cq[19] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp48, carryQ.get_carry_in(19), r800_ffff_tmp49));
          r800_ffff_tmp50 = simd_and(r800_ffff_tmp49, bytetest_b0_b9);
          struct_No.cc = simd_or(r800_ffff_tmp50, struct_No.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp11);
          bytetest_a7 = simd_and(r800_ffff_tmp3, r800_ffff_tmp4);
          r800_ffff_tmp51 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
          r800_ffff_tmp52 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp53 = simd_and(r800_ffff_tmp51, r800_ffff_tmp52);
          bytetest_9a_9a = simd_and(tmp9, r800_ffff_tmp53);
          r800_ffff_tmp54 = simd_and(r800_ffff_tmp44, bytetest_a7);
          carryQ.cq[20] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp54, carryQ.get_carry_in(20), r800_ffff_tmp55));
          r800_ffff_tmp56 = simd_and(r800_ffff_tmp55, bytetest_9a_9a);
          struct_No.cc = simd_or(r800_ffff_tmp56, struct_No.cc);
          r800_ffff_tmp57 = simd_andc(r800_ffff_tmp52, tmp4);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp57);
          bytetest_81 = simd_and(tmp13, tmp11);
          bytetest_b0_b0 = simd_andc(r800_ffff_tmp5, tmp6);
          r800_ffff_tmp58 = simd_and(tmp22, bytetest_e2);
          carryQ.cq[21] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp58, carryQ.get_carry_in(21), r800_ffff_tmp59));
          r800_ffff_tmp60 = simd_and(r800_ffff_tmp59, bytetest_81);
          carryQ.cq[22] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp60, carryQ.get_carry_in(22), r800_ffff_tmp61));
          r800_ffff_tmp62 = simd_and(r800_ffff_tmp61, bytetest_b0_b0);
          struct_No.cc = simd_or(r800_ffff_tmp62, struct_No.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp57);
          bytetest_81 = simd_and(tmp13, tmp11);
          bytetest_b4_b9 = simd_and(r800_ffff_tmp5, r800_ffff_tmp8);
          r800_ffff_tmp63 = simd_and(r800_ffff_tmp61, bytetest_b4_b9);
          struct_No.cc = simd_or(r800_ffff_tmp63, struct_No.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp57);
          bytetest_82 = simd_and(tmp13, r800_ffff_tmp57);
          bytetest_80_89 = simd_andc(tmp13, r800_ffff_tmp33);
          r800_ffff_tmp64 = simd_and(r800_ffff_tmp59, bytetest_82);
          carryQ.cq[23] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp64, carryQ.get_carry_in(23), r800_ffff_tmp65));
          r800_ffff_tmp66 = simd_and(r800_ffff_tmp65, bytetest_80_89);
          struct_No.cc = simd_or(r800_ffff_tmp66, struct_No.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp57);
          bytetest_85 = simd_and(tmp13, r800_ffff_tmp27);
          bytetest_90_9f = simd_and(tmp7, tmp8);
          r800_ffff_tmp67 = simd_and(r800_ffff_tmp59, bytetest_85);
          carryQ.cq[24] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp67, carryQ.get_carry_in(24), r800_ffff_tmp68));
          r800_ffff_tmp69 = simd_and(r800_ffff_tmp68, bytetest_90_9f);
          struct_No.cc = simd_or(r800_ffff_tmp69, struct_No.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp57);
          r800_ffff_tmp70 = simd_and(tmp40, r800_ffff_tmp52);
          bytetest_86 = simd_and(tmp13, r800_ffff_tmp70);
          r800_ffff_tmp71 = simd_and(r800_ffff_tmp51, tmp10);
          bytetest_89_89 = simd_and(tmp13, r800_ffff_tmp71);
          r800_ffff_tmp72 = simd_and(r800_ffff_tmp59, bytetest_86);
          carryQ.cq[25] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp72, carryQ.get_carry_in(25), r800_ffff_tmp73));
          r800_ffff_tmp74 = simd_and(r800_ffff_tmp73, bytetest_89_89);
          struct_No.cc = simd_or(r800_ffff_tmp74, struct_No.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp57);
          bytetest_92 = simd_and(bytetest_90_9f, r800_ffff_tmp57);
          r800_ffff_tmp75 = simd_andc(tmp7, basis_bits.bit_2);
          r800_ffff_tmp76 = simd_and(basis_bits.bit_3, tmp30);
          bytetest_80_9b = simd_andc(r800_ffff_tmp75, r800_ffff_tmp76);
          r800_ffff_tmp77 = simd_and(r800_ffff_tmp59, bytetest_92);
          carryQ.cq[26] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp77, carryQ.get_carry_in(26), r800_ffff_tmp78));
          r800_ffff_tmp79 = simd_and(r800_ffff_tmp78, bytetest_80_9b);
          bytetest_91 = simd_and(bytetest_90_9f, tmp11);
          bytetest_a0_bf = simd_and(tmp7, basis_bits.bit_2);
          r800_ffff_tmp80 = simd_and(r800_ffff_tmp59, bytetest_91);
          carryQ.cq[27] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp80, carryQ.get_carry_in(27), r800_ffff_tmp81));
          r800_ffff_tmp82 = simd_and(r800_ffff_tmp81, bytetest_a0_bf);
          r800_ffff_tmp83 = simd_or(r800_ffff_tmp82, r800_ffff_tmp79);
          struct_No.cc = simd_or(r800_ffff_tmp83, struct_No.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp57);
          r800_ffff_tmp84 = simd_andc(tmp38, tmp4);
          bytetest_93 = simd_and(bytetest_90_9f, r800_ffff_tmp84);
          r800_ffff_tmp85 = simd_or(basis_bits.bit_3, r800_ffff_tmp33);
          bytetest_aa_bf = simd_and(bytetest_a0_bf, r800_ffff_tmp85);
          r800_ffff_tmp86 = simd_and(r800_ffff_tmp59, bytetest_93);
          carryQ.cq[28] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp86, carryQ.get_carry_in(28), r800_ffff_tmp87));
          r800_ffff_tmp88 = simd_and(r800_ffff_tmp87, bytetest_aa_bf);
          struct_No.cc = simd_or(r800_ffff_tmp88, struct_No.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp57);
          r800_ffff_tmp89 = simd_and(tmp30, r800_ffff_tmp52);
          bytetest_9e = simd_and(bytetest_90_9f, r800_ffff_tmp89);
          r800_ffff_tmp90 = simd_and(basis_bits.bit_3, tmp4);
          bytetest_80_93 = simd_andc(r800_ffff_tmp75, r800_ffff_tmp90);
          r800_ffff_tmp91 = simd_and(r800_ffff_tmp59, bytetest_9e);
          carryQ.cq[29] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp91, carryQ.get_carry_in(29), r800_ffff_tmp92));
          r800_ffff_tmp93 = simd_and(r800_ffff_tmp92, bytetest_80_93);
          bytetest_9d = simd_and(bytetest_90_9f, tmp31);
          bytetest_b6_bf = simd_and(r800_ffff_tmp5, tmp15);
          r800_ffff_tmp94 = simd_and(r800_ffff_tmp59, bytetest_9d);
          carryQ.cq[30] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp94, carryQ.get_carry_in(30), r800_ffff_tmp95));
          r800_ffff_tmp96 = simd_and(r800_ffff_tmp95, bytetest_b6_bf);
          r800_ffff_tmp97 = simd_or(r800_ffff_tmp96, r800_ffff_tmp93);
          struct_No.cc = simd_or(r800_ffff_tmp97, struct_No.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp57);
          bytetest_b3 = simd_and(r800_ffff_tmp5, r800_ffff_tmp84);
          bytetest_bd_bd = simd_and(r800_ffff_tmp5, tmp31);
          r800_ffff_tmp98 = simd_and(r800_ffff_tmp59, bytetest_b3);
          carryQ.cq[31] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp98, carryQ.get_carry_in(31), r800_ffff_tmp99));
          r800_ffff_tmp100 = simd_and(r800_ffff_tmp99, bytetest_bd_bd);
          struct_No.cc = simd_or(r800_ffff_tmp100, struct_No.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp84);
          bytetest_86 = simd_and(tmp13, r800_ffff_tmp70);
          r800_ffff_tmp101 = simd_andc(bytetest_90_9f, basis_bits.bit_4);
          r800_ffff_tmp102 = simd_not(basis_bits.bit_6);
          r800_ffff_tmp103 = simd_or(simd_and(basis_bits.bit_5, r800_ffff_tmp102), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
          bytetest_92_95 = simd_and(r800_ffff_tmp101, r800_ffff_tmp103);
          r800_ffff_tmp104 = simd_and(tmp22, bytetest_e3);
          carryQ.cq[32] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp104, carryQ.get_carry_in(32), r800_ffff_tmp105));
          r800_ffff_tmp106 = simd_and(r800_ffff_tmp105, bytetest_86);
          carryQ.cq[33] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp106, carryQ.get_carry_in(33), r800_ffff_tmp107));
          r800_ffff_tmp108 = simd_and(r800_ffff_tmp107, bytetest_92_95);
          struct_No.cc = simd_or(r800_ffff_tmp108, struct_No.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp84);
          r800_ffff_tmp109 = simd_andc(r800_ffff_tmp51, tmp5);
          bytetest_88 = simd_and(tmp13, r800_ffff_tmp109);
          bytetest_a0_a9 = simd_andc(r800_ffff_tmp3, r800_ffff_tmp33);
          r800_ffff_tmp110 = simd_and(r800_ffff_tmp105, bytetest_88);
          carryQ.cq[34] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp110, carryQ.get_carry_in(34), r800_ffff_tmp111));
          r800_ffff_tmp112 = simd_and(r800_ffff_tmp111, bytetest_a0_a9);
          struct_No.cc = simd_or(r800_ffff_tmp112, struct_No.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp84);
          bytetest_89 = simd_and(tmp13, r800_ffff_tmp71);
          bytetest_88_8f = simd_and(tmp13, basis_bits.bit_4);
          r800_ffff_tmp113 = simd_and(r800_ffff_tmp105, bytetest_89);
          carryQ.cq[35] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp113, carryQ.get_carry_in(35), r800_ffff_tmp114));
          r800_ffff_tmp115 = simd_and(r800_ffff_tmp114, bytetest_88_8f);
          struct_No.cc = simd_or(r800_ffff_tmp115, struct_No.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp84);
          bytetest_89 = simd_and(tmp13, r800_ffff_tmp71);
          r800_ffff_tmp116 = simd_or(basis_bits.bit_4, r800_ffff_tmp40);
          bytetest_91_9f = simd_and(bytetest_90_9f, r800_ffff_tmp116);
          r800_ffff_tmp117 = simd_and(r800_ffff_tmp114, bytetest_91_9f);
          struct_No.cc = simd_or(r800_ffff_tmp117, struct_No.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp84);
          bytetest_8a = simd_and(tmp13, r800_ffff_tmp53);
          bytetest_80_89 = simd_andc(tmp13, r800_ffff_tmp33);
          r800_ffff_tmp118 = simd_and(r800_ffff_tmp105, bytetest_8a);
          carryQ.cq[36] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp118, carryQ.get_carry_in(36), r800_ffff_tmp119));
          r800_ffff_tmp120 = simd_and(r800_ffff_tmp119, bytetest_80_89);
          struct_No.cc = simd_or(r800_ffff_tmp120, struct_No.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp84);
          bytetest_8a = simd_and(tmp13, r800_ffff_tmp53);
          bytetest_b1_bf = simd_and(r800_ffff_tmp5, r800_ffff_tmp116);
          r800_ffff_tmp121 = simd_and(r800_ffff_tmp119, bytetest_b1_bf);
          struct_No.cc = simd_or(r800_ffff_tmp121, struct_No.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, r800_ffff_tmp53);
          bytetest_a0 = simd_andc(r800_ffff_tmp3, tmp6);
          bytetest_b0_b5 = simd_andc(r800_ffff_tmp14, tmp14);
          r800_ffff_tmp122 = simd_and(tmp22, bytetest_ea);
          carryQ.cq[37] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp122, carryQ.get_carry_in(37), r800_ffff_tmp123));
          r800_ffff_tmp124 = simd_and(r800_ffff_tmp123, bytetest_a0);
          carryQ.cq[38] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp124, carryQ.get_carry_in(38), r800_ffff_tmp125));
          r800_ffff_tmp126 = simd_and(r800_ffff_tmp125, bytetest_b0_b5);
          struct_No.cc = simd_or(r800_ffff_tmp126, struct_No.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(10, 29);
        }
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_90 = simd_andc(tmp9, tmp6);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp59 = simd_and(tmp24, bytetest_90);
        carryQ.cq[39] = carryout2carry(pablo_blk_Advance(tmp59, carryQ.get_carry_in(39), tmp60));
        tmp61 = simd_and(tmp60, bytetest_80_bf);
        if ((bitblock::any(tmp61) || carryQ.CarryTest(40, 10))) {
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp9, tmp6);
          bytetest_84 = simd_and(tmp13, tmp41);
          r10000_10fff_tmp1 = simd_and(basis_bits.bit_3, tmp4);
          r10000_10fff_tmp2 = simd_not(r10000_10fff_tmp1);
          r10000_10fff_tmp3 = simd_and(basis_bits.bit_5, tmp38);
          r10000_10fff_tmp4 = simd_or(basis_bits.bit_4, r10000_10fff_tmp3);
          r10000_10fff_tmp5 = simd_or(basis_bits.bit_3, r10000_10fff_tmp4);
          r10000_10fff_tmp6 = simd_or(simd_and(basis_bits.bit_2, r10000_10fff_tmp2), simd_andc(r10000_10fff_tmp5, basis_bits.bit_2));
          bytetest_87_b3 = simd_and(tmp7, r10000_10fff_tmp6);
          r10000_10fff_tmp7 = simd_and(tmp24, bytetest_90);
          carryQ.cq[40] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp7, carryQ.get_carry_in(40), r10000_10fff_tmp8));
          r10000_10fff_tmp9 = simd_and(r10000_10fff_tmp8, bytetest_84);
          carryQ.cq[41] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp9, carryQ.get_carry_in(41), r10000_10fff_tmp10));
          r10000_10fff_tmp11 = simd_and(r10000_10fff_tmp10, bytetest_87_b3);
          struct_No.cc = simd_or(r10000_10fff_tmp11, struct_No.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp9, tmp6);
          r10000_10fff_tmp12 = simd_and(tmp40, tmp10);
          bytetest_85 = simd_and(tmp13, r10000_10fff_tmp12);
          r10000_10fff_tmp13 = simd_and(tmp7, tmp2);
          r10000_10fff_tmp14 = simd_not(tmp53);
          r10000_10fff_tmp15 = simd_and(basis_bits.bit_5, tmp5);
          r10000_10fff_tmp16 = simd_or(simd_and(basis_bits.bit_4, r10000_10fff_tmp14), simd_andc(r10000_10fff_tmp15, basis_bits.bit_4));
          bytetest_b5_b8 = simd_and(r10000_10fff_tmp13, r10000_10fff_tmp16);
          r10000_10fff_tmp17 = simd_and(r10000_10fff_tmp8, bytetest_85);
          carryQ.cq[42] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp17, carryQ.get_carry_in(42), r10000_10fff_tmp18));
          r10000_10fff_tmp19 = simd_and(r10000_10fff_tmp18, bytetest_b5_b8);
          struct_No.cc = simd_or(r10000_10fff_tmp19, struct_No.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp9, tmp6);
          r10000_10fff_tmp20 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
          r10000_10fff_tmp21 = simd_and(tmp40, r10000_10fff_tmp20);
          bytetest_86 = simd_and(tmp13, r10000_10fff_tmp21);
          r10000_10fff_tmp22 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
          r10000_10fff_tmp23 = simd_and(r10000_10fff_tmp22, r10000_10fff_tmp20);
          bytetest_8a_8a = simd_and(tmp13, r10000_10fff_tmp23);
          r10000_10fff_tmp24 = simd_and(r10000_10fff_tmp8, bytetest_86);
          carryQ.cq[43] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp24, carryQ.get_carry_in(43), r10000_10fff_tmp25));
          r10000_10fff_tmp26 = simd_and(r10000_10fff_tmp25, bytetest_8a_8a);
          struct_No.cc = simd_or(r10000_10fff_tmp26, struct_No.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp9, tmp6);
          r10000_10fff_tmp27 = simd_andc(tmp30, tmp5);
          bytetest_8c = simd_and(tmp13, r10000_10fff_tmp27);
          r10000_10fff_tmp28 = simd_and(tmp7, tmp51);
          bytetest_a0_a3 = simd_andc(r10000_10fff_tmp28, tmp4);
          r10000_10fff_tmp29 = simd_and(r10000_10fff_tmp8, bytetest_8c);
          carryQ.cq[44] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp29, carryQ.get_carry_in(44), r10000_10fff_tmp30));
          r10000_10fff_tmp31 = simd_and(r10000_10fff_tmp30, bytetest_a0_a3);
          struct_No.cc = simd_or(r10000_10fff_tmp31, struct_No.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp9, tmp6);
          bytetest_a1 = simd_and(r10000_10fff_tmp28, tmp11);
          bytetest_98_9f = simd_and(tmp9, basis_bits.bit_4);
          r10000_10fff_tmp32 = simd_and(r10000_10fff_tmp8, bytetest_a1);
          carryQ.cq[45] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp32, carryQ.get_carry_in(45), r10000_10fff_tmp33));
          r10000_10fff_tmp34 = simd_and(r10000_10fff_tmp33, bytetest_98_9f);
          struct_No.cc = simd_or(r10000_10fff_tmp34, struct_No.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp9, tmp6);
          bytetest_a4 = simd_and(r10000_10fff_tmp28, tmp41);
          r10000_10fff_tmp35 = simd_not(basis_bits.bit_5);
          r10000_10fff_tmp36 = simd_or(simd_and(basis_bits.bit_4, r10000_10fff_tmp35), simd_andc(tmp14, basis_bits.bit_4));
          bytetest_96_9b = simd_and(tmp9, r10000_10fff_tmp36);
          r10000_10fff_tmp37 = simd_and(r10000_10fff_tmp8, bytetest_a4);
          carryQ.cq[46] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp37, carryQ.get_carry_in(46), r10000_10fff_tmp38));
          r10000_10fff_tmp39 = simd_and(r10000_10fff_tmp38, bytetest_96_9b);
          struct_No.cc = simd_or(r10000_10fff_tmp39, struct_No.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp9, tmp6);
          r10000_10fff_tmp40 = simd_and(r10000_10fff_tmp22, tmp10);
          bytetest_a9 = simd_and(r10000_10fff_tmp28, r10000_10fff_tmp40);
          bytetest_80_87 = simd_andc(tmp13, basis_bits.bit_4);
          r10000_10fff_tmp41 = simd_and(r10000_10fff_tmp8, bytetest_a9);
          carryQ.cq[47] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp41, carryQ.get_carry_in(47), r10000_10fff_tmp42));
          r10000_10fff_tmp43 = simd_and(r10000_10fff_tmp42, bytetest_80_87);
          struct_No.cc = simd_or(r10000_10fff_tmp43, struct_No.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp9, tmp6);
          bytetest_a9 = simd_and(r10000_10fff_tmp28, r10000_10fff_tmp40);
          r10000_10fff_tmp44 = simd_and(r10000_10fff_tmp13, tmp30);
          r10000_10fff_tmp45 = simd_not(basis_bits.bit_7);
          r10000_10fff_tmp46 = simd_or(simd_and(basis_bits.bit_6, r10000_10fff_tmp45), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
          bytetest_bd_be = simd_and(r10000_10fff_tmp44, r10000_10fff_tmp46);
          r10000_10fff_tmp47 = simd_and(r10000_10fff_tmp42, bytetest_bd_be);
          struct_No.cc = simd_or(r10000_10fff_tmp47, struct_No.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp9, tmp6);
          bytetest_ad = simd_and(r10000_10fff_tmp28, tmp31);
          bytetest_98_9f = simd_and(tmp9, basis_bits.bit_4);
          r10000_10fff_tmp48 = simd_and(r10000_10fff_tmp8, bytetest_ad);
          carryQ.cq[48] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp48, carryQ.get_carry_in(48), r10000_10fff_tmp49));
          r10000_10fff_tmp50 = simd_and(r10000_10fff_tmp49, bytetest_98_9f);
          struct_No.cc = simd_or(r10000_10fff_tmp50, struct_No.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp9, tmp6);
          bytetest_ad = simd_and(r10000_10fff_tmp28, tmp31);
          bytetest_b8_bf = simd_and(r10000_10fff_tmp13, basis_bits.bit_4);
          r10000_10fff_tmp51 = simd_and(r10000_10fff_tmp49, bytetest_b8_bf);
          struct_No.cc = simd_or(r10000_10fff_tmp51, struct_No.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp9, tmp6);
          bytetest_b9 = simd_and(r10000_10fff_tmp13, r10000_10fff_tmp40);
          r10000_10fff_tmp52 = simd_and(basis_bits.bit_3, tmp39);
          bytetest_a0_be = simd_andc(bytetest_a0_bf, r10000_10fff_tmp52);
          r10000_10fff_tmp53 = simd_and(r10000_10fff_tmp8, bytetest_b9);
          carryQ.cq[49] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp53, carryQ.get_carry_in(49), r10000_10fff_tmp54));
          r10000_10fff_tmp55 = simd_and(r10000_10fff_tmp54, bytetest_a0_be);
          struct_No.cc = simd_or(r10000_10fff_tmp55, struct_No.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(40, 10);
        }
  }
  CarryArray<50, 0> carryQ;
  };

  struct Lo {
  Lo() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Lo & struct_Lo) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_f0, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, bytetest_91, tmp12, tmp13, bytetest_80, tmp14, tmp15;
		BitBlock tmp16, tmp17, tmp18, tmp19, bytetest_83_b7, tmp20, tmp21, tmp22;
		BitBlock tmp23, tmp24, tmp25, tmp26, tmp27, tmp28, tmp29, tmp30, bytetest_82;
		BitBlock tmp31, tmp32, bytetest_83_af, tmp33, tmp34, tmp35, tmp36, bytetest_83;
		BitBlock tmp37, tmp38, tmp39, tmp40, tmp41, bytetest_90_a8, tmp42, tmp43;
		BitBlock tmp44, tmp45, tmp46, bytetest_84, tmp47, tmp48, tmp49, tmp50, tmp51;
		BitBlock bytetest_83_a6, tmp52, tmp53, tmp54, tmp55, bytetest_86, tmp56, tmp57;
		BitBlock tmp58, bytetest_83_b2, tmp59, tmp60, tmp61, tmp62, bytetest_87, tmp63;
		BitBlock tmp64, tmp65, bytetest_81_84, tmp66, tmp67, tmp68, tmp69, tmp70;
		BitBlock bytetest_9a, tmp71, tmp72, tmp73, tmp74, bytetest_80_aa, tmp75, tmp76;
		BitBlock tmp77, bytetest_92, tmp78, tmp79, bytetest_8d, tmp80, tmp81, tmp82;
		BitBlock bytetest_80_ae, tmp83, tmp84, tmp85, tmp86, tmp87, tmp88, tmp89;
		BitBlock bytetest_80_8c, bytetest_80_bf, tmp90, tmp91, tmp92, tmp93, tmp94;
		BitBlock bytetest_93, bytetest_90, tmp95, tmp96, tmp97, tmp98, tmp99;
		BitBlock bytetest_80_8f, tmp100, tmp101, tmp102, tmp103, bytetest_96, tmp104;
		BitBlock tmp105, tmp106, bytetest_a8, tmp107, tmp108, bytetest_80_b8, tmp109;
		BitBlock tmp110, tmp111, tmp112, tmp113, bytetest_a0_a7, tmp114, tmp115;
		BitBlock tmp116, tmp117, tmp118, bytetest_bd, tmp119, bytetest_80_84, tmp120;
		BitBlock tmp121, tmp122, tmp123, bytetest_bc, tmp124, tmp125, tmp126, tmp127;
		BitBlock bytetest_90_90, tmp128, tmp129, bytetest_9b, tmp130, bytetest_80_81;
		BitBlock tmp131, tmp132, tmp133, tmp134, tmp135, tmp136, bytetest_9e;
		BitBlock bytetest_b8, bytetest_80_83, tmp137, tmp138, tmp139, tmp140, tmp141;
		BitBlock tmp142, tmp143, tmp144, bytetest_85_9f, tmp145, tmp146, tmp147;
		BitBlock tmp148, bytetest_a1_a2, tmp149, bytetest_a4_a4, tmp150;
		BitBlock bytetest_a7_a7, tmp151, tmp152, tmp153, tmp154, bytetest_a9_b2;
		BitBlock tmp155, bytetest_b4_b7, tmp156, tmp157, bytetest_b9_b9, tmp158;
		BitBlock bytetest_bb_bb, tmp159, bytetest_b9, bytetest_82_82, tmp160, tmp161;
		BitBlock tmp162, bytetest_87_87, tmp163, bytetest_89_89, tmp164;
		BitBlock bytetest_8b_8b, tmp165, tmp166, bytetest_8d_8f, tmp167, tmp168;
		BitBlock bytetest_91_92, tmp169, bytetest_94_94, tmp170, bytetest_97_97;
		BitBlock tmp171, bytetest_99_99, tmp172, bytetest_9b_9b, tmp173;
		BitBlock bytetest_9d_9d, tmp174, bytetest_9f_9f, tmp175, tmp176, tmp177;
		BitBlock tmp178, tmp179, bytetest_a7_aa, tmp180, tmp181, bytetest_ac_b2;
		BitBlock tmp182, tmp183, tmp184, bytetest_b9_bc, tmp185, bytetest_be_be;
		BitBlock tmp186, bytetest_ba, tmp187, tmp188, bytetest_80_89, tmp189, tmp190;
		BitBlock tmp191, tmp192, tmp193, bytetest_8b_9b, tmp194, bytetest_a1_a3;
		BitBlock tmp195, tmp196, tmp197, bytetest_a5_a9, tmp198, bytetest_ab_bb;
		BitBlock tmp199, bytetest_aa, tmp200, bytetest_80_96, tmp201, tmp202, tmp203;
		BitBlock tmp204, tmp205, tmp206, bytetest_80_9a, tmp207, tmp208, tmp209;
		BitBlock tmp210, bytetest_a0_a9, tmp211, tmp212, tmp213, tmp214, tmp215;
		BitBlock tmp216, bytetest_ab, bytetest_9c, tmp217, tmp218, bytetest_80_b4;
		BitBlock tmp219, tmp220, tmp221, tmp222, tmp223, tmp224, bytetest_80_9b;
		BitBlock tmp225, tmp226, tmp227, tmp228, tmp229, bytetest_9c_bf, tmp230;
		BitBlock tmp231, tmp232, tmp233, bytetest_a0, tmp234, tmp235, bytetest_80_9d;
		BitBlock tmp236, tmp237, tmp238, tmp239, bytetest_9d_9f, tmp240, tmp241;
		BitBlock tmp242, tmp243, bytetest_af, tmp244, tmp245, tmp246, tmp247, tmp248;
		BitBlock tmp249, tmp250, tmp251, tmp252, tmp253, tmp254, bytetest_c2_df;
		BitBlock r80_7ff_tmp1, bytetest_c2, bytetest_aa_aa, r80_7ff_tmp2, r80_7ff_tmp3;
		BitBlock r80_7ff_tmp4, bytetest_ba_ba, r80_7ff_tmp5, bytetest_c6, r80_7ff_tmp6;
		BitBlock r80_7ff_tmp7, r80_7ff_tmp8, bytetest_c7, r80_7ff_tmp9, r80_7ff_tmp10;
		BitBlock r80_7ff_tmp11, bytetest_ca, r80_7ff_tmp12, r80_7ff_tmp13;
		BitBlock r80_7ff_tmp14, r80_7ff_tmp15, bytetest_d7, r80_7ff_tmp16;
		BitBlock r80_7ff_tmp17, bytetest_90_aa, r80_7ff_tmp18, r80_7ff_tmp19;
		BitBlock r80_7ff_tmp20, r80_7ff_tmp21, bytetest_b0_b2, r80_7ff_tmp22;
		BitBlock bytetest_d8, bytetest_a0_bf, r80_7ff_tmp23, r80_7ff_tmp24;
		BitBlock r80_7ff_tmp25, bytetest_d9, r80_7ff_tmp26, bytetest_81_8a;
		BitBlock r80_7ff_tmp27, r80_7ff_tmp28, r80_7ff_tmp29, bytetest_ae_af;
		BitBlock r80_7ff_tmp30, bytetest_db, r80_7ff_tmp31, bytetest_80_93;
		BitBlock r80_7ff_tmp32, r80_7ff_tmp33, r80_7ff_tmp34, bytetest_da;
		BitBlock r80_7ff_tmp35, r80_7ff_tmp36, r80_7ff_tmp37, r80_7ff_tmp38;
		BitBlock bytetest_b1_bf, r80_7ff_tmp39, r80_7ff_tmp40, r80_7ff_tmp41;
		BitBlock r80_7ff_tmp42, bytetest_95_95, r80_7ff_tmp43, r80_7ff_tmp44;
		BitBlock r80_7ff_tmp45, bytetest_ba_bc, r80_7ff_tmp46, bytetest_bf_bf;
		BitBlock r80_7ff_tmp47, bytetest_dc, r80_7ff_tmp48, r80_7ff_tmp49;
		BitBlock r80_7ff_tmp50, r80_7ff_tmp51, r80_7ff_tmp52, bytetest_92_af;
		BitBlock r80_7ff_tmp53, bytetest_de, r80_7ff_tmp54, r80_7ff_tmp55;
		BitBlock r80_7ff_tmp56, r80_7ff_tmp57, bytetest_80_a5, r80_7ff_tmp58;
		BitBlock r80_7ff_tmp59, r80_7ff_tmp60, bytetest_dd, r80_7ff_tmp61;
		BitBlock r80_7ff_tmp62, r80_7ff_tmp63, bytetest_8d_bf, r80_7ff_tmp64;
		BitBlock r80_7ff_tmp65, r80_7ff_tmp66, r80_7ff_tmp67, bytetest_b1_b1;
		BitBlock r80_7ff_tmp68, bytetest_df, r80_7ff_tmp69, r80_7ff_tmp70;
		BitBlock bytetest_8a_aa, r80_7ff_tmp71, r80_7ff_tmp72, r80_7ff_tmp73, tmp255;
		BitBlock tmp256, bytetest_e1_ef, bytetest_e0, tmp257, tmp258, tmp259, tmp260;
		BitBlock r800_ffff_tmp1, r800_ffff_tmp2, r800_ffff_tmp3, r800_ffff_tmp4;
		BitBlock bytetest_80_95, r800_ffff_tmp5, r800_ffff_tmp6, r800_ffff_tmp7;
		BitBlock r800_ffff_tmp8, r800_ffff_tmp9, bytetest_a1, bytetest_80_98;
		BitBlock r800_ffff_tmp10, r800_ffff_tmp11, r800_ffff_tmp12, bytetest_a2;
		BitBlock bytetest_a0_a0, r800_ffff_tmp13, r800_ffff_tmp14, r800_ffff_tmp15;
		BitBlock r800_ffff_tmp16, r800_ffff_tmp17, bytetest_a2_ac, r800_ffff_tmp18;
		BitBlock bytetest_a4, r800_ffff_tmp19, r800_ffff_tmp20, r800_ffff_tmp21;
		BitBlock r800_ffff_tmp22, bytetest_84_b9, r800_ffff_tmp23, r800_ffff_tmp24;
		BitBlock r800_ffff_tmp25, bytetest_bd_bd, r800_ffff_tmp26, r800_ffff_tmp27;
		BitBlock bytetest_a5, r800_ffff_tmp28, r800_ffff_tmp29, r800_ffff_tmp30;
		BitBlock r800_ffff_tmp31, r800_ffff_tmp32, bytetest_98_a1, r800_ffff_tmp33;
		BitBlock r800_ffff_tmp34, bytetest_b2_b7, r800_ffff_tmp35, bytetest_b9_bf;
		BitBlock r800_ffff_tmp36, bytetest_a6, r800_ffff_tmp37, bytetest_85_8c;
		BitBlock r800_ffff_tmp38, r800_ffff_tmp39, r800_ffff_tmp40, r800_ffff_tmp41;
		BitBlock r800_ffff_tmp42, bytetest_8f_90, r800_ffff_tmp43, r800_ffff_tmp44;
		BitBlock bytetest_93_a8, r800_ffff_tmp45, r800_ffff_tmp46, bytetest_aa_b0;
		BitBlock r800_ffff_tmp47, bytetest_b2_b2, r800_ffff_tmp48, r800_ffff_tmp49;
		BitBlock bytetest_b6_b9, r800_ffff_tmp50, r800_ffff_tmp51, bytetest_a7;
		BitBlock bytetest_8e_8e, r800_ffff_tmp52, r800_ffff_tmp53, r800_ffff_tmp54;
		BitBlock r800_ffff_tmp55, bytetest_9c_9d, r800_ffff_tmp56, r800_ffff_tmp57;
		BitBlock r800_ffff_tmp58, bytetest_9f_a1, r800_ffff_tmp59, bytetest_b0_b1;
		BitBlock r800_ffff_tmp60, r800_ffff_tmp61, bytetest_85_8a, r800_ffff_tmp62;
		BitBlock r800_ffff_tmp63, r800_ffff_tmp64, r800_ffff_tmp65, r800_ffff_tmp66;
		BitBlock r800_ffff_tmp67, r800_ffff_tmp68, bytetest_b2_b3, r800_ffff_tmp69;
		BitBlock bytetest_b5_b6, r800_ffff_tmp70, r800_ffff_tmp71, bytetest_b8_b9;
		BitBlock r800_ffff_tmp72, bytetest_a9, r800_ffff_tmp73, bytetest_99_9c;
		BitBlock r800_ffff_tmp74, r800_ffff_tmp75, r800_ffff_tmp76, bytetest_9e_9e;
		BitBlock r800_ffff_tmp77, r800_ffff_tmp78, bytetest_b2_b4, r800_ffff_tmp79;
		BitBlock r800_ffff_tmp80, r800_ffff_tmp81, bytetest_85_8d, r800_ffff_tmp82;
		BitBlock r800_ffff_tmp83, r800_ffff_tmp84, r800_ffff_tmp85, r800_ffff_tmp86;
		BitBlock bytetest_8f_91, r800_ffff_tmp87, r800_ffff_tmp88, r800_ffff_tmp89;
		BitBlock r800_ffff_tmp90, bytetest_b5_b9, r800_ffff_tmp91, r800_ffff_tmp92;
		BitBlock r800_ffff_tmp93, r800_ffff_tmp94, r800_ffff_tmp95, bytetest_a0_a1;
		BitBlock r800_ffff_tmp96, bytetest_ac, r800_ffff_tmp97, r800_ffff_tmp98;
		BitBlock r800_ffff_tmp99, r800_ffff_tmp100, r800_ffff_tmp101, r800_ffff_tmp102;
		BitBlock r800_ffff_tmp103, r800_ffff_tmp104, r800_ffff_tmp105, bytetest_ad;
		BitBlock r800_ffff_tmp106, r800_ffff_tmp107, r800_ffff_tmp108;
		BitBlock r800_ffff_tmp109, r800_ffff_tmp110, bytetest_ae, bytetest_83_83;
		BitBlock r800_ffff_tmp111, r800_ffff_tmp112, r800_ffff_tmp113;
		BitBlock r800_ffff_tmp114, r800_ffff_tmp115, bytetest_8e_90, r800_ffff_tmp116;
		BitBlock r800_ffff_tmp117, r800_ffff_tmp118, r800_ffff_tmp119, bytetest_92_95;
		BitBlock r800_ffff_tmp120, r800_ffff_tmp121, bytetest_99_9a, r800_ffff_tmp122;
		BitBlock bytetest_9c_9c, r800_ffff_tmp123, bytetest_9e_9f, r800_ffff_tmp124;
		BitBlock r800_ffff_tmp125, bytetest_a3_a4, r800_ffff_tmp126, r800_ffff_tmp127;
		BitBlock bytetest_a8_aa, r800_ffff_tmp128, r800_ffff_tmp129, r800_ffff_tmp130;
		BitBlock bytetest_ae_b9, r800_ffff_tmp131, r800_ffff_tmp132, r800_ffff_tmp133;
		BitBlock r800_ffff_tmp134, bytetest_b0, r800_ffff_tmp135, r800_ffff_tmp136;
		BitBlock r800_ffff_tmp137, r800_ffff_tmp138, r800_ffff_tmp139;
		BitBlock r800_ffff_tmp140, bytetest_92_a8, r800_ffff_tmp141, r800_ffff_tmp142;
		BitBlock r800_ffff_tmp143, bytetest_aa_b3, r800_ffff_tmp144, r800_ffff_tmp145;
		BitBlock r800_ffff_tmp146, bytetest_b1, bytetest_98_99, r800_ffff_tmp147;
		BitBlock r800_ffff_tmp148, r800_ffff_tmp149, r800_ffff_tmp150, bytetest_b2;
		BitBlock r800_ffff_tmp151, r800_ffff_tmp152, r800_ffff_tmp153;
		BitBlock r800_ffff_tmp154, r800_ffff_tmp155, r800_ffff_tmp156;
		BitBlock r800_ffff_tmp157, r800_ffff_tmp158, bytetest_b3, r800_ffff_tmp159;
		BitBlock r800_ffff_tmp160, r800_ffff_tmp161, r800_ffff_tmp162;
		BitBlock r800_ffff_tmp163, bytetest_b1_b2, r800_ffff_tmp164, bytetest_b4;
		BitBlock r800_ffff_tmp165, r800_ffff_tmp166, r800_ffff_tmp167;
		BitBlock r800_ffff_tmp168, r800_ffff_tmp169, r800_ffff_tmp170, bytetest_92_ba;
		BitBlock r800_ffff_tmp171, r800_ffff_tmp172, bytetest_b5, r800_ffff_tmp173;
		BitBlock r800_ffff_tmp174, r800_ffff_tmp175, r800_ffff_tmp176, bytetest_ba_bf;
		BitBlock r800_ffff_tmp177, bytetest_b6, r800_ffff_tmp178, r800_ffff_tmp179;
		BitBlock bytetest_85_96, r800_ffff_tmp180, r800_ffff_tmp181, r800_ffff_tmp182;
		BitBlock r800_ffff_tmp183, r800_ffff_tmp184, bytetest_9a_b1, r800_ffff_tmp185;
		BitBlock r800_ffff_tmp186, r800_ffff_tmp187, bytetest_b3_bb, r800_ffff_tmp188;
		BitBlock r800_ffff_tmp189, bytetest_b7, bytetest_80_86, r800_ffff_tmp190;
		BitBlock r800_ffff_tmp191, r800_ffff_tmp192, r800_ffff_tmp193;
		BitBlock r800_ffff_tmp194, r800_ffff_tmp195, r800_ffff_tmp196, bytetest_81_b0;
		BitBlock r800_ffff_tmp197, r800_ffff_tmp198, r800_ffff_tmp199;
		BitBlock r800_ffff_tmp200, bytetest_80_85, r800_ffff_tmp201, r800_ffff_tmp202;
		BitBlock r800_ffff_tmp203, bytetest_81_82, r800_ffff_tmp204, r800_ffff_tmp205;
		BitBlock r800_ffff_tmp206, bytetest_84_84, r800_ffff_tmp207, r800_ffff_tmp208;
		BitBlock r800_ffff_tmp209, bytetest_87_88, r800_ffff_tmp210, bytetest_8a_8a;
		BitBlock r800_ffff_tmp211, bytetest_8d_8d, r800_ffff_tmp212, bytetest_94_97;
		BitBlock r800_ffff_tmp213, bytetest_99_9f, r800_ffff_tmp214, r800_ffff_tmp215;
		BitBlock bytetest_a5_a5, r800_ffff_tmp216, r800_ffff_tmp217, r800_ffff_tmp218;
		BitBlock bytetest_aa_ab, r800_ffff_tmp219, r800_ffff_tmp220, r800_ffff_tmp221;
		BitBlock bytetest_ad_b0, r800_ffff_tmp222, r800_ffff_tmp223, r800_ffff_tmp224;
		BitBlock bytetest_bb, r800_ffff_tmp225, r800_ffff_tmp226, r800_ffff_tmp227;
		BitBlock bytetest_9c_9f, r800_ffff_tmp228, bytetest_80_80, r800_ffff_tmp229;
		BitBlock r800_ffff_tmp230, r800_ffff_tmp231, bytetest_80_87, r800_ffff_tmp232;
		BitBlock r800_ffff_tmp233, r800_ffff_tmp234, r800_ffff_tmp235;
		BitBlock r800_ffff_tmp236, r800_ffff_tmp237, bytetest_89_ac, r800_ffff_tmp238;
		BitBlock bytetest_be, r800_ffff_tmp239, bytetest_88_8c, r800_ffff_tmp240;
		BitBlock r800_ffff_tmp241, r800_ffff_tmp242, bytetest_e1, r800_ffff_tmp243;
		BitBlock r800_ffff_tmp244, r800_ffff_tmp245, r800_ffff_tmp246;
		BitBlock r800_ffff_tmp247, r800_ffff_tmp248, bytetest_81, bytetest_90_95;
		BitBlock r800_ffff_tmp249, r800_ffff_tmp250, r800_ffff_tmp251, bytetest_9a_9d;
		BitBlock r800_ffff_tmp252, bytetest_a1_a1, r800_ffff_tmp253, r800_ffff_tmp254;
		BitBlock bytetest_a5_a6, r800_ffff_tmp255, bytetest_ae_b0, r800_ffff_tmp256;
		BitBlock r800_ffff_tmp257, r800_ffff_tmp258, r800_ffff_tmp259, bytetest_b5_bf;
		BitBlock r800_ffff_tmp260, r800_ffff_tmp261, r800_ffff_tmp262;
		BitBlock r800_ffff_tmp263, bytetest_90_ba, r800_ffff_tmp264, r800_ffff_tmp265;
		BitBlock r800_ffff_tmp266, bytetest_89, bytetest_80_88, r800_ffff_tmp267;
		BitBlock r800_ffff_tmp268, r800_ffff_tmp269, r800_ffff_tmp270, bytetest_84_88;
		BitBlock r800_ffff_tmp271, r800_ffff_tmp272, r800_ffff_tmp273;
		BitBlock r800_ffff_tmp274, bytetest_bd_bf, r800_ffff_tmp275, r800_ffff_tmp276;
		BitBlock r800_ffff_tmp277, bytetest_8a_8d, r800_ffff_tmp278, bytetest_90_96;
		BitBlock r800_ffff_tmp279, bytetest_98_98, r800_ffff_tmp280, r800_ffff_tmp281;
		BitBlock bytetest_8a, r800_ffff_tmp282, r800_ffff_tmp283, r800_ffff_tmp284;
		BitBlock r800_ffff_tmp285, r800_ffff_tmp286, r800_ffff_tmp287;
		BitBlock r800_ffff_tmp288, bytetest_90_b0, r800_ffff_tmp289, bytetest_b2_b5;
		BitBlock r800_ffff_tmp290, bytetest_b8_be, r800_ffff_tmp291, bytetest_8b;
		BitBlock r800_ffff_tmp292, r800_ffff_tmp293, r800_ffff_tmp294, bytetest_82_85;
		BitBlock r800_ffff_tmp295, r800_ffff_tmp296, bytetest_88_96, r800_ffff_tmp297;
		BitBlock bytetest_8c, bytetest_80_90, r800_ffff_tmp298, r800_ffff_tmp299;
		BitBlock r800_ffff_tmp300, r800_ffff_tmp301, bytetest_98_bf, r800_ffff_tmp302;
		BitBlock r800_ffff_tmp303, r800_ffff_tmp304, r800_ffff_tmp305;
		BitBlock r800_ffff_tmp306, r800_ffff_tmp307, r800_ffff_tmp308;
		BitBlock r800_ffff_tmp309, bytetest_8e, r800_ffff_tmp310, r800_ffff_tmp311;
		BitBlock r800_ffff_tmp312, bytetest_8f, r800_ffff_tmp313, r800_ffff_tmp314;
		BitBlock r800_ffff_tmp315, r800_ffff_tmp316, r800_ffff_tmp317, bytetest_99;
		BitBlock r800_ffff_tmp318, bytetest_80_ac, r800_ffff_tmp319, r800_ffff_tmp320;
		BitBlock r800_ffff_tmp321, r800_ffff_tmp322, bytetest_91_98, r800_ffff_tmp323;
		BitBlock r800_ffff_tmp324, r800_ffff_tmp325, r800_ffff_tmp326, bytetest_81_bf;
		BitBlock r800_ffff_tmp327, r800_ffff_tmp328, r800_ffff_tmp329;
		BitBlock r800_ffff_tmp330, r800_ffff_tmp331, bytetest_af_bf, r800_ffff_tmp332;
		BitBlock r800_ffff_tmp333, r800_ffff_tmp334, bytetest_81_9a, r800_ffff_tmp335;
		BitBlock r800_ffff_tmp336, r800_ffff_tmp337, r800_ffff_tmp338;
		BitBlock r800_ffff_tmp339, r800_ffff_tmp340, r800_ffff_tmp341;
		BitBlock r800_ffff_tmp342, r800_ffff_tmp343, r800_ffff_tmp344;
		BitBlock r800_ffff_tmp345, r800_ffff_tmp346, bytetest_8e_91, r800_ffff_tmp347;
		BitBlock bytetest_a0_b1, r800_ffff_tmp348, bytetest_9d, bytetest_80_91;
		BitBlock r800_ffff_tmp349, r800_ffff_tmp350, r800_ffff_tmp351, bytetest_a0_ac;
		BitBlock r800_ffff_tmp352, r800_ffff_tmp353, r800_ffff_tmp354;
		BitBlock r800_ffff_tmp355, bytetest_80_b3, r800_ffff_tmp356, r800_ffff_tmp357;
		BitBlock r800_ffff_tmp358, bytetest_9f, r800_ffff_tmp359, r800_ffff_tmp360;
		BitBlock r800_ffff_tmp361, bytetest_80_82, r800_ffff_tmp362, r800_ffff_tmp363;
		BitBlock r800_ffff_tmp364, r800_ffff_tmp365, r800_ffff_tmp366;
		BitBlock r800_ffff_tmp367, r800_ffff_tmp368, r800_ffff_tmp369, bytetest_84_b7;
		BitBlock r800_ffff_tmp370, r800_ffff_tmp371, bytetest_80_a8, r800_ffff_tmp372;
		BitBlock r800_ffff_tmp373, r800_ffff_tmp374, r800_ffff_tmp375, bytetest_a3;
		BitBlock r800_ffff_tmp376, bytetest_80_b5, r800_ffff_tmp377, r800_ffff_tmp378;
		BitBlock r800_ffff_tmp379, bytetest_b0_bf, r800_ffff_tmp380, r800_ffff_tmp381;
		BitBlock r800_ffff_tmp382, bytetest_80_9c, r800_ffff_tmp383, r800_ffff_tmp384;
		BitBlock r800_ffff_tmp385, r800_ffff_tmp386, r800_ffff_tmp387;
		BitBlock r800_ffff_tmp388, bytetest_90_ad, r800_ffff_tmp389, r800_ffff_tmp390;
		BitBlock r800_ffff_tmp391, r800_ffff_tmp392, bytetest_b0_b4, r800_ffff_tmp393;
		BitBlock r800_ffff_tmp394, r800_ffff_tmp395, bytetest_80_ab, r800_ffff_tmp396;
		BitBlock r800_ffff_tmp397, r800_ffff_tmp398, bytetest_81_87, r800_ffff_tmp399;
		BitBlock r800_ffff_tmp400, r800_ffff_tmp401, r800_ffff_tmp402;
		BitBlock r800_ffff_tmp403, r800_ffff_tmp404, bytetest_80_94, r800_ffff_tmp405;
		BitBlock r800_ffff_tmp406, r800_ffff_tmp407, r800_ffff_tmp408;
		BitBlock r800_ffff_tmp409, r800_ffff_tmp410, r800_ffff_tmp411, bytetest_85_b3;
		BitBlock r800_ffff_tmp412, r800_ffff_tmp413, r800_ffff_tmp414;
		BitBlock r800_ffff_tmp415, bytetest_85_8b, r800_ffff_tmp416, r800_ffff_tmp417;
		BitBlock r800_ffff_tmp418, r800_ffff_tmp419, r800_ffff_tmp420, bytetest_83_a0;
		BitBlock r800_ffff_tmp421, r800_ffff_tmp422, r800_ffff_tmp423;
		BitBlock r800_ffff_tmp424, r800_ffff_tmp425, r800_ffff_tmp426;
		BitBlock r800_ffff_tmp427, r800_ffff_tmp428, r800_ffff_tmp429;
		BitBlock r800_ffff_tmp430, r800_ffff_tmp431, r800_ffff_tmp432;
		BitBlock r800_ffff_tmp433, bytetest_80_a3, r800_ffff_tmp434, r800_ffff_tmp435;
		BitBlock r800_ffff_tmp436, r800_ffff_tmp437, r800_ffff_tmp438;
		BitBlock r800_ffff_tmp439, r800_ffff_tmp440, bytetest_9a_b7, r800_ffff_tmp441;
		BitBlock r800_ffff_tmp442, bytetest_a9_ac, r800_ffff_tmp443, r800_ffff_tmp444;
		BitBlock r800_ffff_tmp445, bytetest_ae_b1, r800_ffff_tmp446, r800_ffff_tmp447;
		BitBlock r800_ffff_tmp448, bytetest_e2, r800_ffff_tmp449, bytetest_b5_b8;
		BitBlock r800_ffff_tmp450, r800_ffff_tmp451, r800_ffff_tmp452;
		BitBlock r800_ffff_tmp453, r800_ffff_tmp454, r800_ffff_tmp455;
		BitBlock r800_ffff_tmp456, bytetest_80_a7, r800_ffff_tmp457, r800_ffff_tmp458;
		BitBlock r800_ffff_tmp459, r800_ffff_tmp460, r800_ffff_tmp461;
		BitBlock r800_ffff_tmp462, r800_ffff_tmp463, r800_ffff_tmp464;
		BitBlock r800_ffff_tmp465, r800_ffff_tmp466, bytetest_a0_a6, r800_ffff_tmp467;
		BitBlock bytetest_a8_ae, r800_ffff_tmp468, bytetest_b0_b6, r800_ffff_tmp469;
		BitBlock r800_ffff_tmp470, r800_ffff_tmp471, r800_ffff_tmp472;
		BitBlock r800_ffff_tmp473, bytetest_88_8e, r800_ffff_tmp474, r800_ffff_tmp475;
		BitBlock bytetest_98_9e, r800_ffff_tmp476, bytetest_e3, bytetest_86_86;
		BitBlock r800_ffff_tmp477, r800_ffff_tmp478, r800_ffff_tmp479;
		BitBlock r800_ffff_tmp480, r800_ffff_tmp481, bytetest_bc_bc, r800_ffff_tmp482;
		BitBlock r800_ffff_tmp483, r800_ffff_tmp484, r800_ffff_tmp485;
		BitBlock r800_ffff_tmp486, r800_ffff_tmp487, r800_ffff_tmp488;
		BitBlock r800_ffff_tmp489, r800_ffff_tmp490, r800_ffff_tmp491, bytetest_80_ba;
		BitBlock r800_ffff_tmp492, r800_ffff_tmp493, r800_ffff_tmp494, bytetest_a1_bf;
		BitBlock r800_ffff_tmp495, r800_ffff_tmp496, r800_ffff_tmp497;
		BitBlock r800_ffff_tmp498, bytetest_85_ad, r800_ffff_tmp499, r800_ffff_tmp500;
		BitBlock r800_ffff_tmp501, r800_ffff_tmp502, bytetest_80_8e, r800_ffff_tmp503;
		BitBlock r800_ffff_tmp504, r800_ffff_tmp505, bytetest_85, r800_ffff_tmp506;
		BitBlock r800_ffff_tmp507, r800_ffff_tmp508, r800_ffff_tmp509;
		BitBlock r800_ffff_tmp510, r800_ffff_tmp511, r800_ffff_tmp512, bytetest_a0_ba;
		BitBlock r800_ffff_tmp513, r800_ffff_tmp514, r800_ffff_tmp515;
		BitBlock r800_ffff_tmp516, bytetest_e4, r800_ffff_tmp517, r800_ffff_tmp518;
		BitBlock r800_ffff_tmp519, r800_ffff_tmp520, r800_ffff_tmp521;
		BitBlock r800_ffff_tmp522, r800_ffff_tmp523, r800_ffff_tmp524;
		BitBlock r800_ffff_tmp525, bytetest_90_bf, r800_ffff_tmp526, r800_ffff_tmp527;
		BitBlock r800_ffff_tmp528, r800_ffff_tmp529, bytetest_e9, bytetest_bf;
		BitBlock r800_ffff_tmp530, r800_ffff_tmp531, r800_ffff_tmp532;
		BitBlock r800_ffff_tmp533, r800_ffff_tmp534, r800_ffff_tmp535, bytetest_80_be;
		BitBlock r800_ffff_tmp536, r800_ffff_tmp537, r800_ffff_tmp538;
		BitBlock r800_ffff_tmp539, bytetest_e5_e8, bytetest_b8_bf, r800_ffff_tmp540;
		BitBlock r800_ffff_tmp541, r800_ffff_tmp542, r800_ffff_tmp543;
		BitBlock r800_ffff_tmp544, bytetest_ea, r800_ffff_tmp545, r800_ffff_tmp546;
		BitBlock r800_ffff_tmp547, r800_ffff_tmp548, r800_ffff_tmp549;
		BitBlock r800_ffff_tmp550, r800_ffff_tmp551, r800_ffff_tmp552;
		BitBlock r800_ffff_tmp553, bytetest_81_91, r800_ffff_tmp554, r800_ffff_tmp555;
		BitBlock r800_ffff_tmp556, r800_ffff_tmp557, bytetest_96_bf, r800_ffff_tmp558;
		BitBlock r800_ffff_tmp559, r800_ffff_tmp560, r800_ffff_tmp561, bytetest_90_b7;
		BitBlock r800_ffff_tmp562, r800_ffff_tmp563, r800_ffff_tmp564, bytetest_98;
		BitBlock bytetest_80_8b, r800_ffff_tmp565, r800_ffff_tmp566, r800_ffff_tmp567;
		BitBlock r800_ffff_tmp568, r800_ffff_tmp569, r800_ffff_tmp570;
		BitBlock r800_ffff_tmp571, bytetest_90_9f, r800_ffff_tmp572, r800_ffff_tmp573;
		BitBlock bytetest_ae_ae, r800_ffff_tmp574, r800_ffff_tmp575, r800_ffff_tmp576;
		BitBlock r800_ffff_tmp577, r800_ffff_tmp578, r800_ffff_tmp579;
		BitBlock r800_ffff_tmp580, r800_ffff_tmp581, r800_ffff_tmp582;
		BitBlock r800_ffff_tmp583, r800_ffff_tmp584, r800_ffff_tmp585;
		BitBlock r800_ffff_tmp586, bytetest_bb_bf, r800_ffff_tmp587, r800_ffff_tmp588;
		BitBlock r800_ffff_tmp589, r800_ffff_tmp590, r800_ffff_tmp591, bytetest_83_85;
		BitBlock r800_ffff_tmp592, bytetest_87_8a, r800_ffff_tmp593, r800_ffff_tmp594;
		BitBlock r800_ffff_tmp595, bytetest_8c_a2, r800_ffff_tmp596, r800_ffff_tmp597;
		BitBlock r800_ffff_tmp598, r800_ffff_tmp599, r800_ffff_tmp600, bytetest_82_b3;
		BitBlock r800_ffff_tmp601, r800_ffff_tmp602, r800_ffff_tmp603;
		BitBlock r800_ffff_tmp604, r800_ffff_tmp605, r800_ffff_tmp606;
		BitBlock r800_ffff_tmp607, r800_ffff_tmp608, r800_ffff_tmp609;
		BitBlock r800_ffff_tmp610, bytetest_8a_a5, r800_ffff_tmp611, r800_ffff_tmp612;
		BitBlock r800_ffff_tmp613, r800_ffff_tmp614, r800_ffff_tmp615;
		BitBlock r800_ffff_tmp616, r800_ffff_tmp617, r800_ffff_tmp618, bytetest_a0_bc;
		BitBlock r800_ffff_tmp619, r800_ffff_tmp620, bytetest_84_b2, r800_ffff_tmp621;
		BitBlock r800_ffff_tmp622, r800_ffff_tmp623, r800_ffff_tmp624;
		BitBlock r800_ffff_tmp625, r800_ffff_tmp626, r800_ffff_tmp627;
		BitBlock r800_ffff_tmp628, r800_ffff_tmp629, r800_ffff_tmp630, bytetest_84_8b;
		BitBlock r800_ffff_tmp631, bytetest_a0_af, r800_ffff_tmp632, r800_ffff_tmp633;
		BitBlock r800_ffff_tmp634, bytetest_b1_b6, r800_ffff_tmp635, r800_ffff_tmp636;
		BitBlock bytetest_80_af, r800_ffff_tmp637, r800_ffff_tmp638, r800_ffff_tmp639;
		BitBlock r800_ffff_tmp640, r800_ffff_tmp641, r800_ffff_tmp642, bytetest_b9_bd;
		BitBlock r800_ffff_tmp643, r800_ffff_tmp644, r800_ffff_tmp645;
		BitBlock r800_ffff_tmp646, r800_ffff_tmp647, r800_ffff_tmp648, bytetest_9b_9c;
		BitBlock r800_ffff_tmp649, bytetest_a0_aa, r800_ffff_tmp650, r800_ffff_tmp651;
		BitBlock bytetest_81_86, r800_ffff_tmp652, r800_ffff_tmp653, r800_ffff_tmp654;
		BitBlock bytetest_89_8e, r800_ffff_tmp655, r800_ffff_tmp656, bytetest_91_96;
		BitBlock r800_ffff_tmp657, r800_ffff_tmp658, r800_ffff_tmp659;
		BitBlock r800_ffff_tmp660, r800_ffff_tmp661, r800_ffff_tmp662, bytetest_80_a2;
		BitBlock r800_ffff_tmp663, r800_ffff_tmp664, r800_ffff_tmp665, bytetest_ed;
		BitBlock r800_ffff_tmp666, r800_ffff_tmp667, r800_ffff_tmp668;
		BitBlock r800_ffff_tmp669, r800_ffff_tmp670, r800_ffff_tmp671;
		BitBlock r800_ffff_tmp672, r800_ffff_tmp673, r800_ffff_tmp674;
		BitBlock r800_ffff_tmp675, bytetest_eb_ec, r800_ffff_tmp676, r800_ffff_tmp677;
		BitBlock r800_ffff_tmp678, r800_ffff_tmp679, r800_ffff_tmp680;
		BitBlock r800_ffff_tmp681, r800_ffff_tmp682, r800_ffff_tmp683;
		BitBlock r800_ffff_tmp684, r800_ffff_tmp685, r800_ffff_tmp686;
		BitBlock r800_ffff_tmp687, bytetest_8b_bb, r800_ffff_tmp688, bytetest_ef;
		BitBlock r800_ffff_tmp689, bytetest_80_ad, r800_ffff_tmp690, r800_ffff_tmp691;
		BitBlock r800_ffff_tmp692, r800_ffff_tmp693, r800_ffff_tmp694, bytetest_a4_a8;
		BitBlock r800_ffff_tmp695, r800_ffff_tmp696, r800_ffff_tmp697;
		BitBlock r800_ffff_tmp698, bytetest_80_99, r800_ffff_tmp699, r800_ffff_tmp700;
		BitBlock r800_ffff_tmp701, r800_ffff_tmp702, r800_ffff_tmp703;
		BitBlock r800_ffff_tmp704, r800_ffff_tmp705, r800_ffff_tmp706;
		BitBlock r800_ffff_tmp707, r800_ffff_tmp708, r800_ffff_tmp709;
		BitBlock r800_ffff_tmp710, r800_ffff_tmp711, bytetest_9f_a8, r800_ffff_tmp712;
		BitBlock r800_ffff_tmp713, bytetest_aa_b6, r800_ffff_tmp714, bytetest_b8_bc;
		BitBlock r800_ffff_tmp715, r800_ffff_tmp716, r800_ffff_tmp717;
		BitBlock r800_ffff_tmp718, r800_ffff_tmp719, bytetest_83_84, r800_ffff_tmp720;
		BitBlock r800_ffff_tmp721, bytetest_80_b1, r800_ffff_tmp722, r800_ffff_tmp723;
		BitBlock r800_ffff_tmp724, r800_ffff_tmp725, bytetest_86_bf, r800_ffff_tmp726;
		BitBlock r800_ffff_tmp727, r800_ffff_tmp728, bytetest_80_bd, r800_ffff_tmp729;
		BitBlock r800_ffff_tmp730, r800_ffff_tmp731, bytetest_b0_b3, r800_ffff_tmp732;
		BitBlock r800_ffff_tmp733, r800_ffff_tmp734, r800_ffff_tmp735, bytetest_93_bf;
		BitBlock r800_ffff_tmp736, r800_ffff_tmp737, r800_ffff_tmp738;
		BitBlock r800_ffff_tmp739, r800_ffff_tmp740, r800_ffff_tmp741;
		BitBlock r800_ffff_tmp742, r800_ffff_tmp743, r800_ffff_tmp744;
		BitBlock r800_ffff_tmp745, r800_ffff_tmp746, r800_ffff_tmp747;
		BitBlock r800_ffff_tmp748, r800_ffff_tmp749, r800_ffff_tmp750;
		BitBlock r800_ffff_tmp751, bytetest_92_bf, r800_ffff_tmp752, r800_ffff_tmp753;
		BitBlock bytetest_b0_bb, r800_ffff_tmp754, r800_ffff_tmp755, r800_ffff_tmp756;
		BitBlock r800_ffff_tmp757, r800_ffff_tmp758, bytetest_80_bc, r800_ffff_tmp759;
		BitBlock r800_ffff_tmp760, r800_ffff_tmp761, r800_ffff_tmp762;
		BitBlock r800_ffff_tmp763, r800_ffff_tmp764, bytetest_b6_bf, r800_ffff_tmp765;
		BitBlock r800_ffff_tmp766, r800_ffff_tmp767, bytetest_a6_af, r800_ffff_tmp768;
		BitBlock r800_ffff_tmp769, r800_ffff_tmp770, r800_ffff_tmp771;
		BitBlock r800_ffff_tmp772, r800_ffff_tmp773, r800_ffff_tmp774;
		BitBlock r800_ffff_tmp775, bytetest_a0_be, r800_ffff_tmp776, bytetest_82_87;
		BitBlock r800_ffff_tmp777, r800_ffff_tmp778, r800_ffff_tmp779, bytetest_8a_8f;
		BitBlock r800_ffff_tmp780, bytetest_92_97, r800_ffff_tmp781, bytetest_9a_9c;
		BitBlock r800_ffff_tmp782, tmp261, tmp262, tmp263, r10000_10fff_tmp1;
		BitBlock r10000_10fff_tmp2, r10000_10fff_tmp3, r10000_10fff_tmp4;
		BitBlock r10000_10fff_tmp5, r10000_10fff_tmp6, r10000_10fff_tmp7;
		BitBlock r10000_10fff_tmp8, bytetest_8d_a6, r10000_10fff_tmp9;
		BitBlock r10000_10fff_tmp10, r10000_10fff_tmp11, bytetest_a8_ba;
		BitBlock r10000_10fff_tmp12, r10000_10fff_tmp13, bytetest_bc_bd;
		BitBlock r10000_10fff_tmp14, r10000_10fff_tmp15, r10000_10fff_tmp16;
		BitBlock bytetest_80_8d, r10000_10fff_tmp17, r10000_10fff_tmp18;
		BitBlock r10000_10fff_tmp19, r10000_10fff_tmp20, r10000_10fff_tmp21;
		BitBlock bytetest_90_9d, r10000_10fff_tmp22, r10000_10fff_tmp23;
		BitBlock r10000_10fff_tmp24, r10000_10fff_tmp25, r10000_10fff_tmp26;
		BitBlock r10000_10fff_tmp27, r10000_10fff_tmp28, r10000_10fff_tmp29;
		BitBlock r10000_10fff_tmp30, r10000_10fff_tmp31, r10000_10fff_tmp32;
		BitBlock r10000_10fff_tmp33, r10000_10fff_tmp34, r10000_10fff_tmp35;
		BitBlock r10000_10fff_tmp36, r10000_10fff_tmp37, r10000_10fff_tmp38;
		BitBlock r10000_10fff_tmp39, r10000_10fff_tmp40, r10000_10fff_tmp41;
		BitBlock bytetest_80_9e, r10000_10fff_tmp42, r10000_10fff_tmp43;
		BitBlock r10000_10fff_tmp44, r10000_10fff_tmp45, r10000_10fff_tmp46;
		BitBlock r10000_10fff_tmp47, r10000_10fff_tmp48, r10000_10fff_tmp49;
		BitBlock r10000_10fff_tmp50, bytetest_82_89, r10000_10fff_tmp51;
		BitBlock r10000_10fff_tmp52, r10000_10fff_tmp53, r10000_10fff_tmp54;
		BitBlock r10000_10fff_tmp55, r10000_10fff_tmp56, r10000_10fff_tmp57;
		BitBlock r10000_10fff_tmp58, r10000_10fff_tmp59, bytetest_88_8f;
		BitBlock r10000_10fff_tmp60, r10000_10fff_tmp61, r10000_10fff_tmp62;
		BitBlock r10000_10fff_tmp63, r10000_10fff_tmp64, r10000_10fff_tmp65;
		BitBlock r10000_10fff_tmp66, r10000_10fff_tmp67, r10000_10fff_tmp68;
		BitBlock r10000_10fff_tmp69, r10000_10fff_tmp70, bytetest_88_88;
		BitBlock r10000_10fff_tmp71, r10000_10fff_tmp72, r10000_10fff_tmp73;
		BitBlock r10000_10fff_tmp74, r10000_10fff_tmp75, r10000_10fff_tmp76;
		BitBlock bytetest_8a_b5, r10000_10fff_tmp77, r10000_10fff_tmp78;
		BitBlock r10000_10fff_tmp79, bytetest_b7_b8, r10000_10fff_tmp80;
		BitBlock r10000_10fff_tmp81, r10000_10fff_tmp82, r10000_10fff_tmp83;
		BitBlock r10000_10fff_tmp84, r10000_10fff_tmp85, r10000_10fff_tmp86;
		BitBlock r10000_10fff_tmp87, r10000_10fff_tmp88, r10000_10fff_tmp89;
		BitBlock r10000_10fff_tmp90, bytetest_a0_b9, r10000_10fff_tmp91;
		BitBlock r10000_10fff_tmp92, bytetest_80_b7, r10000_10fff_tmp93;
		BitBlock r10000_10fff_tmp94, r10000_10fff_tmp95, bytetest_be_bf;
		BitBlock r10000_10fff_tmp96, r10000_10fff_tmp97, r10000_10fff_tmp98;
		BitBlock r10000_10fff_tmp99, bytetest_90_93, r10000_10fff_tmp100;
		BitBlock r10000_10fff_tmp101, bytetest_95_97, r10000_10fff_tmp102;
		BitBlock r10000_10fff_tmp103, r10000_10fff_tmp104, r10000_10fff_tmp105;
		BitBlock bytetest_99_b3, r10000_10fff_tmp106, r10000_10fff_tmp107;
		BitBlock r10000_10fff_tmp108, r10000_10fff_tmp109, r10000_10fff_tmp110;
		BitBlock r10000_10fff_tmp111, r10000_10fff_tmp112, r10000_10fff_tmp113;
		BitBlock r10000_10fff_tmp114, r10000_10fff_tmp115, r10000_10fff_tmp116;
		BitBlock bytetest_a0_b2, r10000_10fff_tmp117, r10000_10fff_tmp118;
		BitBlock r10000_10fff_tmp119, r10000_10fff_tmp120, r10000_10fff_tmp121;
		BitBlock r10000_10fff_tmp122, r10000_10fff_tmp123, r10000_10fff_tmp124;




        struct_Lo.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_and(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_or(tmp4, tmp5);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp11 = simd_andc(tmp10, tmp4);
        bytetest_91 = simd_and(tmp9, tmp11);
        tmp12 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp13 = simd_andc(tmp7, tmp12);
        bytetest_80 = simd_andc(tmp13, tmp6);
        tmp14 = simd_and(basis_bits.bit_3, basis_bits.bit_4);
        tmp15 = simd_not(tmp14);
        tmp16 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp17 = simd_or(tmp4, tmp16);
        tmp18 = simd_or(basis_bits.bit_3, tmp17);
        tmp19 = simd_or(simd_and(basis_bits.bit_2, tmp15), simd_andc(tmp18, basis_bits.bit_2));
        bytetest_83_b7 = simd_and(tmp7, tmp19);
        tmp20 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp20, carryQ.get_carry_in(0), tmp21));
        tmp22 = simd_and(tmp21, bytetest_f0);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp22, carryQ.get_carry_in(1), tmp23));
        tmp24 = simd_and(tmp23, bytetest_91);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp24, carryQ.get_carry_in(2), tmp25));
        tmp26 = simd_and(tmp25, bytetest_80);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp26, carryQ.get_carry_in(3), tmp27));
        tmp28 = simd_and(tmp27, bytetest_83_b7);
        struct_Lo.cc = simd_or(tmp28, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        tmp29 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp30 = simd_andc(tmp29, tmp4);
        bytetest_82 = simd_and(tmp13, tmp30);
        tmp31 = simd_not(basis_bits.bit_3);
        tmp32 = simd_or(simd_and(basis_bits.bit_2, tmp31), simd_andc(tmp18, basis_bits.bit_2));
        bytetest_83_af = simd_and(tmp7, tmp32);
        tmp33 = simd_and(tmp25, bytetest_82);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp33, carryQ.get_carry_in(4), tmp34));
        tmp35 = simd_and(tmp34, bytetest_83_af);
        struct_Lo.cc = simd_or(tmp35, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        tmp36 = simd_andc(tmp16, tmp4);
        bytetest_83 = simd_and(tmp13, tmp36);
        tmp37 = simd_or(basis_bits.bit_5, tmp5);
        tmp38 = simd_and(basis_bits.bit_4, tmp37);
        tmp39 = simd_or(basis_bits.bit_3, tmp38);
        tmp40 = simd_not(tmp39);
        tmp41 = simd_or(simd_and(basis_bits.bit_2, tmp40), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
        bytetest_90_a8 = simd_and(tmp7, tmp41);
        tmp42 = simd_and(tmp25, bytetest_83);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp42, carryQ.get_carry_in(5), tmp43));
        tmp44 = simd_and(tmp43, bytetest_90_a8);
        struct_Lo.cc = simd_or(tmp44, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        tmp45 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp46 = simd_andc(tmp45, tmp5);
        bytetest_84 = simd_and(tmp13, tmp46);
        tmp47 = simd_and(basis_bits.bit_5, tmp16);
        tmp48 = simd_or(basis_bits.bit_4, tmp47);
        tmp49 = simd_or(basis_bits.bit_3, tmp48);
        tmp50 = simd_not(tmp49);
        tmp51 = simd_or(simd_and(basis_bits.bit_2, tmp50), simd_andc(tmp18, basis_bits.bit_2));
        bytetest_83_a6 = simd_and(tmp7, tmp51);
        tmp52 = simd_and(tmp25, bytetest_84);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp52, carryQ.get_carry_in(6), tmp53));
        tmp54 = simd_and(tmp53, bytetest_83_a6);
        struct_Lo.cc = simd_or(tmp54, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        tmp55 = simd_and(tmp45, tmp29);
        bytetest_86 = simd_and(tmp13, tmp55);
        tmp56 = simd_and(basis_bits.bit_3, tmp17);
        tmp57 = simd_not(tmp56);
        tmp58 = simd_or(simd_and(basis_bits.bit_2, tmp57), simd_andc(tmp18, basis_bits.bit_2));
        bytetest_83_b2 = simd_and(tmp7, tmp58);
        tmp59 = simd_and(tmp25, bytetest_86);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp59, carryQ.get_carry_in(7), tmp60));
        tmp61 = simd_and(tmp60, bytetest_83_b2);
        struct_Lo.cc = simd_or(tmp61, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        tmp62 = simd_and(tmp45, tmp16);
        bytetest_87 = simd_and(tmp13, tmp62);
        tmp63 = simd_andc(tmp13, basis_bits.bit_4);
        tmp64 = simd_not(tmp5);
        tmp65 = simd_or(simd_and(basis_bits.bit_5, tmp64), simd_andc(tmp5, basis_bits.bit_5));
        bytetest_81_84 = simd_and(tmp63, tmp65);
        tmp66 = simd_and(tmp25, bytetest_87);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(tmp66, carryQ.get_carry_in(8), tmp67));
        tmp68 = simd_and(tmp67, bytetest_81_84);
        struct_Lo.cc = simd_or(tmp68, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        tmp69 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp70 = simd_and(tmp69, tmp29);
        bytetest_9a = simd_and(tmp9, tmp70);
        tmp71 = simd_or(basis_bits.bit_5, tmp16);
        tmp72 = simd_and(basis_bits.bit_4, tmp71);
        tmp73 = simd_or(basis_bits.bit_3, tmp72);
        tmp74 = simd_and(basis_bits.bit_2, tmp73);
        bytetest_80_aa = simd_andc(tmp7, tmp74);
        tmp75 = simd_and(tmp25, bytetest_9a);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(tmp75, carryQ.get_carry_in(9), tmp76));
        tmp77 = simd_and(tmp76, bytetest_80_aa);
        struct_Lo.cc = simd_or(tmp77, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_92 = simd_and(tmp9, tmp30);
        tmp78 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp79 = simd_and(tmp78, tmp10);
        bytetest_8d = simd_and(tmp13, tmp79);
        tmp80 = simd_and(tmp78, tmp16);
        tmp81 = simd_or(basis_bits.bit_3, tmp80);
        tmp82 = simd_and(basis_bits.bit_2, tmp81);
        bytetest_80_ae = simd_andc(tmp7, tmp82);
        tmp83 = simd_and(tmp23, bytetest_92);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(tmp83, carryQ.get_carry_in(10), tmp84));
        tmp85 = simd_and(tmp84, bytetest_8d);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(tmp85, carryQ.get_carry_in(11), tmp86));
        tmp87 = simd_and(tmp86, bytetest_80_ae);
        tmp88 = simd_and(basis_bits.bit_5, tmp5);
        tmp89 = simd_and(basis_bits.bit_4, tmp88);
        bytetest_80_8c = simd_andc(tmp13, tmp89);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp90 = simd_and(tmp84, bytetest_80_8c);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(tmp90, carryQ.get_carry_in(12), tmp91));
        tmp92 = simd_and(tmp91, bytetest_80_bf);
        tmp93 = simd_or(tmp92, tmp87);
        struct_Lo.cc = simd_or(tmp93, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        tmp94 = simd_and(bytetest_80_bf, tmp8);
        bytetest_93 = simd_and(tmp94, tmp36);
        bytetest_90 = simd_andc(tmp94, tmp6);
        bytetest_80_ae = simd_andc(bytetest_80_bf, tmp82);
        tmp95 = simd_and(tmp23, bytetest_93);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(tmp95, carryQ.get_carry_in(13), tmp96));
        tmp97 = simd_and(tmp96, bytetest_90);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(tmp97, carryQ.get_carry_in(14), tmp98));
        tmp99 = simd_and(tmp98, bytetest_80_ae);
        bytetest_80_8f = simd_andc(bytetest_80_bf, tmp12);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp100 = simd_and(tmp96, bytetest_80_8f);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(tmp100, carryQ.get_carry_in(15), tmp101));
        tmp102 = simd_and(tmp101, bytetest_80_bf);
        tmp103 = simd_or(tmp102, tmp99);
        struct_Lo.cc = simd_or(tmp103, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_96 = simd_and(tmp94, tmp55);
        tmp104 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp105 = simd_and(bytetest_80_bf, tmp104);
        tmp106 = simd_andc(tmp69, tmp5);
        bytetest_a8 = simd_and(tmp105, tmp106);
        tmp107 = simd_and(basis_bits.bit_3, tmp38);
        tmp108 = simd_and(basis_bits.bit_2, tmp107);
        bytetest_80_b8 = simd_andc(bytetest_80_bf, tmp108);
        tmp109 = simd_and(tmp23, bytetest_96);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(tmp109, carryQ.get_carry_in(16), tmp110));
        tmp111 = simd_and(tmp110, bytetest_a8);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(tmp111, carryQ.get_carry_in(17), tmp112));
        tmp113 = simd_and(tmp112, bytetest_80_b8);
        bytetest_a0_a7 = simd_andc(tmp105, basis_bits.bit_4);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp114 = simd_and(tmp110, bytetest_a0_a7);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(tmp114, carryQ.get_carry_in(18), tmp115));
        tmp116 = simd_and(tmp115, bytetest_80_bf);
        tmp117 = simd_or(tmp116, tmp113);
        struct_Lo.cc = simd_or(tmp117, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_96 = simd_and(tmp94, tmp55);
        tmp118 = simd_and(bytetest_80_bf, tmp2);
        bytetest_bd = simd_and(tmp118, tmp79);
        tmp119 = simd_andc(bytetest_80_8f, basis_bits.bit_4);
        bytetest_80_84 = simd_andc(tmp119, tmp88);
        tmp120 = simd_and(tmp110, bytetest_bd);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(tmp120, carryQ.get_carry_in(19), tmp121));
        tmp122 = simd_and(tmp121, bytetest_80_84);
        tmp123 = simd_andc(tmp78, tmp5);
        bytetest_bc = simd_and(tmp118, tmp123);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp124 = simd_and(tmp110, bytetest_bc);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(tmp124, carryQ.get_carry_in(20), tmp125));
        tmp126 = simd_and(tmp125, bytetest_80_bf);
        tmp127 = simd_or(tmp126, tmp122);
        struct_Lo.cc = simd_or(tmp127, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_96 = simd_and(tmp94, tmp55);
        bytetest_bd = simd_and(tmp118, tmp79);
        bytetest_90_90 = simd_andc(tmp94, tmp6);
        tmp128 = simd_and(tmp121, bytetest_90_90);
        struct_Lo.cc = simd_or(tmp128, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        tmp129 = simd_and(tmp69, tmp16);
        bytetest_9b = simd_and(tmp94, tmp129);
        bytetest_80 = simd_andc(bytetest_80_8f, tmp6);
        tmp130 = simd_or(tmp4, basis_bits.bit_6);
        bytetest_80_81 = simd_andc(bytetest_80_8f, tmp130);
        tmp131 = simd_and(tmp23, bytetest_9b);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(tmp131, carryQ.get_carry_in(21), tmp132));
        tmp133 = simd_and(tmp132, bytetest_80);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(tmp133, carryQ.get_carry_in(22), tmp134));
        tmp135 = simd_and(tmp134, bytetest_80_81);
        struct_Lo.cc = simd_or(tmp135, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        tmp136 = simd_and(tmp78, tmp29);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_b8 = simd_and(tmp118, tmp106);
        bytetest_80_83 = simd_andc(bytetest_80_8f, tmp4);
        tmp137 = simd_and(tmp23, bytetest_9e);
        carryQ.cq[23] = carryout2carry(pablo_blk_Advance(tmp137, carryQ.get_carry_in(23), tmp138));
        tmp139 = simd_and(tmp138, bytetest_b8);
        carryQ.cq[24] = carryout2carry(pablo_blk_Advance(tmp139, carryQ.get_carry_in(24), tmp140));
        tmp141 = simd_and(tmp140, bytetest_80_83);
        struct_Lo.cc = simd_or(tmp141, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_b8 = simd_and(tmp118, tmp106);
        tmp142 = simd_andc(bytetest_80_bf, basis_bits.bit_2);
        tmp143 = simd_or(basis_bits.bit_4, tmp88);
        tmp144 = simd_or(basis_bits.bit_3, tmp143);
        bytetest_85_9f = simd_and(tmp142, tmp144);
        tmp145 = simd_and(tmp140, bytetest_85_9f);
        struct_Lo.cc = simd_or(tmp145, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_b8 = simd_and(tmp118, tmp106);
        tmp146 = simd_andc(tmp105, tmp4);
        tmp147 = simd_not(basis_bits.bit_7);
        tmp148 = simd_or(simd_and(basis_bits.bit_6, tmp147), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
        bytetest_a1_a2 = simd_and(tmp146, tmp148);
        tmp149 = simd_and(tmp140, bytetest_a1_a2);
        struct_Lo.cc = simd_or(tmp149, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_b8 = simd_and(tmp118, tmp106);
        bytetest_a4_a4 = simd_and(tmp105, tmp46);
        tmp150 = simd_and(tmp140, bytetest_a4_a4);
        struct_Lo.cc = simd_or(tmp150, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_b8 = simd_and(tmp118, tmp106);
        bytetest_a7_a7 = simd_and(tmp105, tmp62);
        tmp151 = simd_and(tmp140, bytetest_a7_a7);
        struct_Lo.cc = simd_or(tmp151, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_b8 = simd_and(tmp118, tmp106);
        tmp152 = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp153 = simd_not(tmp17);
        tmp154 = simd_or(simd_and(basis_bits.bit_3, tmp153), simd_andc(tmp38, basis_bits.bit_3));
        bytetest_a9_b2 = simd_and(tmp152, tmp154);
        tmp155 = simd_and(tmp140, bytetest_a9_b2);
        struct_Lo.cc = simd_or(tmp155, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_b8 = simd_and(tmp118, tmp106);
        bytetest_b4_b7 = simd_and(tmp118, tmp45);
        tmp156 = simd_and(tmp140, bytetest_b4_b7);
        struct_Lo.cc = simd_or(tmp156, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_b8 = simd_and(tmp118, tmp106);
        tmp157 = simd_and(tmp69, tmp10);
        bytetest_b9_b9 = simd_and(tmp118, tmp157);
        tmp158 = simd_and(tmp140, bytetest_b9_b9);
        struct_Lo.cc = simd_or(tmp158, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_b8 = simd_and(tmp118, tmp106);
        bytetest_bb_bb = simd_and(tmp118, tmp129);
        tmp159 = simd_and(tmp140, bytetest_bb_bb);
        struct_Lo.cc = simd_or(tmp159, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_b9 = simd_and(tmp118, tmp157);
        bytetest_82_82 = simd_and(bytetest_80_8f, tmp30);
        tmp160 = simd_and(tmp138, bytetest_b9);
        carryQ.cq[25] = carryout2carry(pablo_blk_Advance(tmp160, carryQ.get_carry_in(25), tmp161));
        tmp162 = simd_and(tmp161, bytetest_82_82);
        struct_Lo.cc = simd_or(tmp162, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_b9 = simd_and(tmp118, tmp157);
        bytetest_87_87 = simd_and(bytetest_80_8f, tmp62);
        tmp163 = simd_and(tmp161, bytetest_87_87);
        struct_Lo.cc = simd_or(tmp163, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_b9 = simd_and(tmp118, tmp157);
        bytetest_89_89 = simd_and(bytetest_80_8f, tmp157);
        tmp164 = simd_and(tmp161, bytetest_89_89);
        struct_Lo.cc = simd_or(tmp164, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_b9 = simd_and(tmp118, tmp157);
        bytetest_8b_8b = simd_and(bytetest_80_8f, tmp129);
        tmp165 = simd_and(tmp161, bytetest_8b_8b);
        struct_Lo.cc = simd_or(tmp165, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_b9 = simd_and(tmp118, tmp157);
        tmp166 = simd_and(bytetest_80_8f, tmp78);
        bytetest_8d_8f = simd_and(tmp166, tmp5);
        tmp167 = simd_and(tmp161, bytetest_8d_8f);
        struct_Lo.cc = simd_or(tmp167, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_b9 = simd_and(tmp118, tmp157);
        tmp168 = simd_andc(tmp94, tmp4);
        bytetest_91_92 = simd_and(tmp168, tmp148);
        tmp169 = simd_and(tmp161, bytetest_91_92);
        struct_Lo.cc = simd_or(tmp169, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_b9 = simd_and(tmp118, tmp157);
        bytetest_94_94 = simd_and(tmp94, tmp46);
        tmp170 = simd_and(tmp161, bytetest_94_94);
        struct_Lo.cc = simd_or(tmp170, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_b9 = simd_and(tmp118, tmp157);
        bytetest_97_97 = simd_and(tmp94, tmp62);
        tmp171 = simd_and(tmp161, bytetest_97_97);
        struct_Lo.cc = simd_or(tmp171, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_b9 = simd_and(tmp118, tmp157);
        bytetest_99_99 = simd_and(tmp94, tmp157);
        tmp172 = simd_and(tmp161, bytetest_99_99);
        struct_Lo.cc = simd_or(tmp172, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_b9 = simd_and(tmp118, tmp157);
        bytetest_9b_9b = simd_and(tmp94, tmp129);
        tmp173 = simd_and(tmp161, bytetest_9b_9b);
        struct_Lo.cc = simd_or(tmp173, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_b9 = simd_and(tmp118, tmp157);
        bytetest_9d_9d = simd_and(tmp94, tmp79);
        tmp174 = simd_and(tmp161, bytetest_9d_9d);
        struct_Lo.cc = simd_or(tmp174, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_b9 = simd_and(tmp118, tmp157);
        bytetest_9f_9f = simd_and(tmp94, tmp80);
        tmp175 = simd_and(tmp161, bytetest_9f_9f);
        struct_Lo.cc = simd_or(tmp175, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_b9 = simd_and(tmp118, tmp157);
        bytetest_a1_a2 = simd_and(tmp146, tmp148);
        tmp176 = simd_and(tmp161, bytetest_a1_a2);
        struct_Lo.cc = simd_or(tmp176, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_b9 = simd_and(tmp118, tmp157);
        bytetest_a4_a4 = simd_and(tmp105, tmp46);
        tmp177 = simd_and(tmp161, bytetest_a4_a4);
        struct_Lo.cc = simd_or(tmp177, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_b9 = simd_and(tmp118, tmp157);
        tmp178 = simd_not(tmp71);
        tmp179 = simd_or(simd_and(basis_bits.bit_4, tmp178), simd_andc(tmp47, basis_bits.bit_4));
        bytetest_a7_aa = simd_and(tmp105, tmp179);
        tmp180 = simd_and(tmp161, bytetest_a7_aa);
        struct_Lo.cc = simd_or(tmp180, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_b9 = simd_and(tmp118, tmp157);
        tmp181 = simd_or(simd_and(basis_bits.bit_3, tmp153), simd_andc(tmp78, basis_bits.bit_3));
        bytetest_ac_b2 = simd_and(tmp152, tmp181);
        tmp182 = simd_and(tmp161, bytetest_ac_b2);
        struct_Lo.cc = simd_or(tmp182, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_b9 = simd_and(tmp118, tmp157);
        bytetest_b4_b7 = simd_and(tmp118, tmp45);
        tmp183 = simd_and(tmp161, bytetest_b4_b7);
        struct_Lo.cc = simd_or(tmp183, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_b9 = simd_and(tmp118, tmp157);
        tmp184 = simd_and(tmp118, basis_bits.bit_4);
        bytetest_b9_bc = simd_and(tmp184, tmp65);
        tmp185 = simd_and(tmp161, bytetest_b9_bc);
        struct_Lo.cc = simd_or(tmp185, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_b9 = simd_and(tmp118, tmp157);
        bytetest_be_be = simd_and(tmp118, tmp136);
        tmp186 = simd_and(tmp161, bytetest_be_be);
        struct_Lo.cc = simd_or(tmp186, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_ba = simd_and(tmp118, tmp70);
        tmp187 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
        tmp188 = simd_and(basis_bits.bit_4, tmp187);
        bytetest_80_89 = simd_andc(bytetest_80_8f, tmp188);
        tmp189 = simd_and(tmp138, bytetest_ba);
        carryQ.cq[26] = carryout2carry(pablo_blk_Advance(tmp189, carryQ.get_carry_in(26), tmp190));
        tmp191 = simd_and(tmp190, bytetest_80_89);
        struct_Lo.cc = simd_or(tmp191, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_ba = simd_and(tmp118, tmp70);
        tmp192 = simd_not(tmp78);
        tmp193 = simd_or(simd_and(basis_bits.bit_3, tmp192), simd_andc(tmp72, basis_bits.bit_3));
        bytetest_8b_9b = simd_and(tmp142, tmp193);
        tmp194 = simd_and(tmp190, bytetest_8b_9b);
        struct_Lo.cc = simd_or(tmp194, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_ba = simd_and(tmp118, tmp70);
        bytetest_a1_a3 = simd_and(tmp146, tmp5);
        tmp195 = simd_and(tmp190, bytetest_a1_a3);
        struct_Lo.cc = simd_or(tmp195, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_ba = simd_and(tmp118, tmp70);
        tmp196 = simd_not(tmp187);
        tmp197 = simd_or(simd_and(basis_bits.bit_4, tmp196), simd_andc(tmp88, basis_bits.bit_4));
        bytetest_a5_a9 = simd_and(tmp105, tmp197);
        tmp198 = simd_and(tmp190, bytetest_a5_a9);
        struct_Lo.cc = simd_or(tmp198, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_ba = simd_and(tmp118, tmp70);
        bytetest_ab_bb = simd_and(tmp152, tmp193);
        tmp199 = simd_and(tmp190, bytetest_ab_bb);
        struct_Lo.cc = simd_or(tmp199, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_aa = simd_and(tmp105, tmp70);
        bytetest_9b = simd_and(tmp94, tmp129);
        tmp200 = simd_and(basis_bits.bit_3, tmp48);
        bytetest_80_96 = simd_andc(tmp142, tmp200);
        tmp201 = simd_and(tmp23, bytetest_aa);
        carryQ.cq[27] = carryout2carry(pablo_blk_Advance(tmp201, carryQ.get_carry_in(27), tmp202));
        tmp203 = simd_and(tmp202, bytetest_9b);
        carryQ.cq[28] = carryout2carry(pablo_blk_Advance(tmp203, carryQ.get_carry_in(28), tmp204));
        tmp205 = simd_and(tmp204, bytetest_80_96);
        tmp206 = simd_and(basis_bits.bit_3, tmp72);
        bytetest_80_9a = simd_andc(tmp142, tmp206);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp207 = simd_and(tmp202, bytetest_80_9a);
        carryQ.cq[29] = carryout2carry(pablo_blk_Advance(tmp207, carryQ.get_carry_in(29), tmp208));
        tmp209 = simd_and(tmp208, bytetest_80_bf);
        tmp210 = simd_or(tmp209, tmp205);
        bytetest_a0_a9 = simd_andc(tmp105, tmp188);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp211 = simd_and(tmp23, bytetest_a0_a9);
        carryQ.cq[30] = carryout2carry(pablo_blk_Advance(tmp211, carryQ.get_carry_in(30), tmp212));
        tmp213 = simd_and(tmp212, bytetest_80_bf);
        carryQ.cq[31] = carryout2carry(pablo_blk_Advance(tmp213, carryQ.get_carry_in(31), tmp214));
        tmp215 = simd_and(tmp214, bytetest_80_bf);
        tmp216 = simd_or(tmp215, tmp210);
        struct_Lo.cc = simd_or(tmp216, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_ab = simd_and(tmp105, tmp129);
        bytetest_9c = simd_and(tmp94, tmp123);
        tmp217 = simd_and(basis_bits.bit_3, tmp143);
        tmp218 = simd_and(basis_bits.bit_2, tmp217);
        bytetest_80_b4 = simd_andc(bytetest_80_bf, tmp218);
        tmp219 = simd_and(tmp23, bytetest_ab);
        carryQ.cq[32] = carryout2carry(pablo_blk_Advance(tmp219, carryQ.get_carry_in(32), tmp220));
        tmp221 = simd_and(tmp220, bytetest_9c);
        carryQ.cq[33] = carryout2carry(pablo_blk_Advance(tmp221, carryQ.get_carry_in(33), tmp222));
        tmp223 = simd_and(tmp222, bytetest_80_b4);
        tmp224 = simd_and(basis_bits.bit_3, tmp78);
        bytetest_80_9b = simd_andc(tmp142, tmp224);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp225 = simd_and(tmp220, bytetest_80_9b);
        carryQ.cq[34] = carryout2carry(pablo_blk_Advance(tmp225, carryQ.get_carry_in(34), tmp226));
        tmp227 = simd_and(tmp226, bytetest_80_bf);
        tmp228 = simd_or(tmp227, tmp223);
        bytetest_aa = simd_and(tmp105, tmp70);
        tmp229 = simd_or(basis_bits.bit_2, tmp224);
        bytetest_9c_bf = simd_and(bytetest_80_bf, tmp229);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp230 = simd_and(tmp202, bytetest_9c_bf);
        carryQ.cq[35] = carryout2carry(pablo_blk_Advance(tmp230, carryQ.get_carry_in(35), tmp231));
        tmp232 = simd_and(tmp231, bytetest_80_bf);
        tmp233 = simd_or(tmp232, tmp228);
        struct_Lo.cc = simd_or(tmp233, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_ab = simd_and(tmp105, tmp129);
        bytetest_a0 = simd_andc(tmp105, tmp6);
        tmp234 = simd_and(tmp78, basis_bits.bit_6);
        tmp235 = simd_and(basis_bits.bit_3, tmp234);
        bytetest_80_9d = simd_andc(tmp142, tmp235);
        tmp236 = simd_and(tmp220, bytetest_a0);
        carryQ.cq[36] = carryout2carry(pablo_blk_Advance(tmp236, carryQ.get_carry_in(36), tmp237));
        tmp238 = simd_and(tmp237, bytetest_80_9d);
        tmp239 = simd_and(tmp94, tmp78);
        bytetest_9d_9f = simd_and(tmp239, tmp5);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp240 = simd_and(tmp220, bytetest_9d_9f);
        carryQ.cq[37] = carryout2carry(pablo_blk_Advance(tmp240, carryQ.get_carry_in(37), tmp241));
        tmp242 = simd_and(tmp241, bytetest_80_bf);
        tmp243 = simd_or(tmp242, tmp238);
        struct_Lo.cc = simd_or(tmp243, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_af = simd_and(tmp105, tmp80);
        bytetest_a8 = simd_and(tmp105, tmp106);
        bytetest_80_9d = simd_andc(tmp142, tmp235);
        tmp244 = simd_and(tmp23, bytetest_af);
        carryQ.cq[38] = carryout2carry(pablo_blk_Advance(tmp244, carryQ.get_carry_in(38), tmp245));
        tmp246 = simd_and(tmp245, bytetest_a8);
        carryQ.cq[39] = carryout2carry(pablo_blk_Advance(tmp246, carryQ.get_carry_in(39), tmp247));
        tmp248 = simd_and(tmp247, bytetest_80_9d);
        bytetest_a0_a7 = simd_andc(tmp105, basis_bits.bit_4);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp249 = simd_and(tmp245, bytetest_a0_a7);
        carryQ.cq[40] = carryout2carry(pablo_blk_Advance(tmp249, carryQ.get_carry_in(40), tmp250));
        tmp251 = simd_and(tmp250, bytetest_80_bf);
        tmp252 = simd_or(tmp251, tmp248);
        struct_Lo.cc = simd_or(tmp252, struct_Lo.cc);
        tmp253 = simd_andc(tmp1, basis_bits.bit_2);
        tmp254 = simd_or(basis_bits.bit_3, tmp130);
        bytetest_c2_df = simd_and(tmp253, tmp254);
        if ((bitblock::any(bytetest_c2_df) || carryQ.CarryTest(41, 13))) {
          r80_7ff_tmp1 = simd_andc(tmp1, tmp12);
          bytetest_c2 = simd_and(r80_7ff_tmp1, tmp30);
          bytetest_aa_aa = simd_and(tmp105, tmp70);
          r80_7ff_tmp2 = simd_and(tmp21, bytetest_c2);
          carryQ.cq[41] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp2, carryQ.get_carry_in(41), r80_7ff_tmp3));
          r80_7ff_tmp4 = simd_and(r80_7ff_tmp3, bytetest_aa_aa);
          struct_Lo.cc = simd_or(r80_7ff_tmp4, struct_Lo.cc);
          bytetest_c2 = simd_and(r80_7ff_tmp1, tmp30);
          bytetest_ba_ba = simd_and(tmp118, tmp70);
          r80_7ff_tmp5 = simd_and(r80_7ff_tmp3, bytetest_ba_ba);
          struct_Lo.cc = simd_or(r80_7ff_tmp5, struct_Lo.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp55);
          bytetest_bb_bb = simd_and(tmp118, tmp129);
          r80_7ff_tmp6 = simd_and(tmp21, bytetest_c6);
          carryQ.cq[42] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp6, carryQ.get_carry_in(42), r80_7ff_tmp7));
          r80_7ff_tmp8 = simd_and(r80_7ff_tmp7, bytetest_bb_bb);
          struct_Lo.cc = simd_or(r80_7ff_tmp8, struct_Lo.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp62);
          bytetest_80_83 = simd_andc(bytetest_80_8f, tmp4);
          r80_7ff_tmp9 = simd_and(tmp21, bytetest_c7);
          carryQ.cq[43] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp9, carryQ.get_carry_in(43), r80_7ff_tmp10));
          r80_7ff_tmp11 = simd_and(r80_7ff_tmp10, bytetest_80_83);
          struct_Lo.cc = simd_or(r80_7ff_tmp11, struct_Lo.cc);
          bytetest_ca = simd_and(r80_7ff_tmp1, tmp70);
          bytetest_94_94 = simd_and(tmp94, tmp46);
          r80_7ff_tmp12 = simd_and(tmp21, bytetest_ca);
          carryQ.cq[44] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp12, carryQ.get_carry_in(44), r80_7ff_tmp13));
          r80_7ff_tmp14 = simd_and(r80_7ff_tmp13, bytetest_94_94);
          struct_Lo.cc = simd_or(r80_7ff_tmp14, struct_Lo.cc);
          r80_7ff_tmp15 = simd_and(tmp1, tmp8);
          bytetest_d7 = simd_and(r80_7ff_tmp15, tmp62);
          r80_7ff_tmp16 = simd_not(tmp73);
          r80_7ff_tmp17 = simd_or(simd_and(basis_bits.bit_2, r80_7ff_tmp16), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
          bytetest_90_aa = simd_and(bytetest_80_bf, r80_7ff_tmp17);
          r80_7ff_tmp18 = simd_and(tmp21, bytetest_d7);
          carryQ.cq[45] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp18, carryQ.get_carry_in(45), r80_7ff_tmp19));
          r80_7ff_tmp20 = simd_and(r80_7ff_tmp19, bytetest_90_aa);
          struct_Lo.cc = simd_or(r80_7ff_tmp20, struct_Lo.cc);
          bytetest_d7 = simd_and(r80_7ff_tmp15, tmp62);
          r80_7ff_tmp21 = simd_andc(tmp118, tmp4);
          bytetest_b0_b2 = simd_andc(r80_7ff_tmp21, tmp16);
          r80_7ff_tmp22 = simd_and(r80_7ff_tmp19, bytetest_b0_b2);
          struct_Lo.cc = simd_or(r80_7ff_tmp22, struct_Lo.cc);
          bytetest_d8 = simd_and(r80_7ff_tmp15, tmp106);
          bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
          r80_7ff_tmp23 = simd_and(tmp21, bytetest_d8);
          carryQ.cq[46] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp23, carryQ.get_carry_in(46), r80_7ff_tmp24));
          r80_7ff_tmp25 = simd_and(r80_7ff_tmp24, bytetest_a0_bf);
          struct_Lo.cc = simd_or(r80_7ff_tmp25, struct_Lo.cc);
          bytetest_d9 = simd_and(r80_7ff_tmp15, tmp157);
          r80_7ff_tmp26 = simd_or(simd_and(basis_bits.bit_4, tmp178), simd_andc(tmp37, basis_bits.bit_4));
          bytetest_81_8a = simd_and(bytetest_80_8f, r80_7ff_tmp26);
          r80_7ff_tmp27 = simd_and(tmp21, bytetest_d9);
          carryQ.cq[47] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp27, carryQ.get_carry_in(47), r80_7ff_tmp28));
          r80_7ff_tmp29 = simd_and(r80_7ff_tmp28, bytetest_81_8a);
          struct_Lo.cc = simd_or(r80_7ff_tmp29, struct_Lo.cc);
          bytetest_d9 = simd_and(r80_7ff_tmp15, tmp157);
          bytetest_ae_af = simd_and(tmp105, tmp234);
          r80_7ff_tmp30 = simd_and(r80_7ff_tmp28, bytetest_ae_af);
          struct_Lo.cc = simd_or(r80_7ff_tmp30, struct_Lo.cc);
          bytetest_db = simd_and(r80_7ff_tmp15, tmp129);
          r80_7ff_tmp31 = simd_and(basis_bits.bit_3, tmp4);
          bytetest_80_93 = simd_andc(tmp142, r80_7ff_tmp31);
          r80_7ff_tmp32 = simd_and(tmp21, bytetest_db);
          carryQ.cq[48] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp32, carryQ.get_carry_in(48), r80_7ff_tmp33));
          r80_7ff_tmp34 = simd_and(r80_7ff_tmp33, bytetest_80_93);
          bytetest_da = simd_and(r80_7ff_tmp15, tmp70);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r80_7ff_tmp35 = simd_and(tmp21, bytetest_da);
          carryQ.cq[49] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp35, carryQ.get_carry_in(49), r80_7ff_tmp36));
          r80_7ff_tmp37 = simd_and(r80_7ff_tmp36, bytetest_80_bf);
          bytetest_d9 = simd_and(r80_7ff_tmp15, tmp157);
          r80_7ff_tmp38 = simd_or(basis_bits.bit_4, tmp37);
          bytetest_b1_bf = simd_and(tmp118, r80_7ff_tmp38);
          r80_7ff_tmp39 = simd_and(r80_7ff_tmp28, bytetest_b1_bf);
          r80_7ff_tmp40 = simd_or(r80_7ff_tmp39, r80_7ff_tmp37);
          r80_7ff_tmp41 = simd_or(r80_7ff_tmp40, r80_7ff_tmp34);
          struct_Lo.cc = simd_or(r80_7ff_tmp41, struct_Lo.cc);
          bytetest_db = simd_and(r80_7ff_tmp15, tmp129);
          r80_7ff_tmp42 = simd_and(tmp45, tmp10);
          bytetest_95_95 = simd_and(tmp94, r80_7ff_tmp42);
          r80_7ff_tmp43 = simd_and(r80_7ff_tmp33, bytetest_95_95);
          struct_Lo.cc = simd_or(r80_7ff_tmp43, struct_Lo.cc);
          bytetest_db = simd_and(r80_7ff_tmp15, tmp129);
          bytetest_ae_af = simd_and(tmp105, tmp234);
          r80_7ff_tmp44 = simd_and(r80_7ff_tmp33, bytetest_ae_af);
          struct_Lo.cc = simd_or(r80_7ff_tmp44, struct_Lo.cc);
          bytetest_db = simd_and(r80_7ff_tmp15, tmp129);
          r80_7ff_tmp45 = simd_or(simd_and(basis_bits.bit_5, tmp64), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
          bytetest_ba_bc = simd_and(tmp184, r80_7ff_tmp45);
          r80_7ff_tmp46 = simd_and(r80_7ff_tmp33, bytetest_ba_bc);
          struct_Lo.cc = simd_or(r80_7ff_tmp46, struct_Lo.cc);
          bytetest_db = simd_and(r80_7ff_tmp15, tmp129);
          bytetest_bf_bf = simd_and(tmp118, tmp80);
          r80_7ff_tmp47 = simd_and(r80_7ff_tmp33, bytetest_bf_bf);
          struct_Lo.cc = simd_or(r80_7ff_tmp47, struct_Lo.cc);
          bytetest_dc = simd_and(r80_7ff_tmp15, tmp123);
          bytetest_90_90 = simd_andc(tmp94, tmp6);
          r80_7ff_tmp48 = simd_and(tmp21, bytetest_dc);
          carryQ.cq[50] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp48, carryQ.get_carry_in(50), r80_7ff_tmp49));
          r80_7ff_tmp50 = simd_and(r80_7ff_tmp49, bytetest_90_90);
          struct_Lo.cc = simd_or(r80_7ff_tmp50, struct_Lo.cc);
          bytetest_dc = simd_and(r80_7ff_tmp15, tmp123);
          r80_7ff_tmp51 = simd_and(basis_bits.bit_3, tmp130);
          r80_7ff_tmp52 = simd_or(simd_and(basis_bits.bit_2, tmp31), simd_andc(r80_7ff_tmp51, basis_bits.bit_2));
          bytetest_92_af = simd_and(bytetest_80_bf, r80_7ff_tmp52);
          r80_7ff_tmp53 = simd_and(r80_7ff_tmp49, bytetest_92_af);
          struct_Lo.cc = simd_or(r80_7ff_tmp53, struct_Lo.cc);
          bytetest_de = simd_and(r80_7ff_tmp15, tmp136);
          r80_7ff_tmp54 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
          r80_7ff_tmp55 = simd_or(basis_bits.bit_4, r80_7ff_tmp54);
          r80_7ff_tmp56 = simd_or(basis_bits.bit_3, r80_7ff_tmp55);
          r80_7ff_tmp57 = simd_and(basis_bits.bit_2, r80_7ff_tmp56);
          bytetest_80_a5 = simd_andc(bytetest_80_bf, r80_7ff_tmp57);
          r80_7ff_tmp58 = simd_and(tmp21, bytetest_de);
          carryQ.cq[51] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp58, carryQ.get_carry_in(51), r80_7ff_tmp59));
          r80_7ff_tmp60 = simd_and(r80_7ff_tmp59, bytetest_80_a5);
          bytetest_dd = simd_and(r80_7ff_tmp15, tmp79);
          r80_7ff_tmp61 = simd_and(tmp78, tmp5);
          r80_7ff_tmp62 = simd_or(basis_bits.bit_3, r80_7ff_tmp61);
          r80_7ff_tmp63 = simd_or(basis_bits.bit_2, r80_7ff_tmp62);
          bytetest_8d_bf = simd_and(bytetest_80_bf, r80_7ff_tmp63);
          r80_7ff_tmp64 = simd_and(tmp21, bytetest_dd);
          carryQ.cq[52] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp64, carryQ.get_carry_in(52), r80_7ff_tmp65));
          r80_7ff_tmp66 = simd_and(r80_7ff_tmp65, bytetest_8d_bf);
          r80_7ff_tmp67 = simd_or(r80_7ff_tmp66, r80_7ff_tmp60);
          struct_Lo.cc = simd_or(r80_7ff_tmp67, struct_Lo.cc);
          bytetest_de = simd_and(r80_7ff_tmp15, tmp136);
          bytetest_b1_b1 = simd_and(tmp118, tmp11);
          r80_7ff_tmp68 = simd_and(r80_7ff_tmp59, bytetest_b1_b1);
          struct_Lo.cc = simd_or(r80_7ff_tmp68, struct_Lo.cc);
          bytetest_df = simd_and(r80_7ff_tmp15, tmp80);
          r80_7ff_tmp69 = simd_or(basis_bits.bit_3, tmp188);
          r80_7ff_tmp70 = simd_or(simd_and(basis_bits.bit_2, r80_7ff_tmp16), simd_andc(r80_7ff_tmp69, basis_bits.bit_2));
          bytetest_8a_aa = simd_and(bytetest_80_bf, r80_7ff_tmp70);
          r80_7ff_tmp71 = simd_and(tmp21, bytetest_df);
          carryQ.cq[53] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp71, carryQ.get_carry_in(53), r80_7ff_tmp72));
          r80_7ff_tmp73 = simd_and(r80_7ff_tmp72, bytetest_8a_aa);
          struct_Lo.cc = simd_or(r80_7ff_tmp73, struct_Lo.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(41, 13);
        }
        tmp255 = simd_and(tmp1, tmp104);
        tmp256 = simd_or(basis_bits.bit_4, tmp37);
        bytetest_e1_ef = simd_and(tmp255, tmp256);
        bytetest_e0 = simd_andc(tmp255, tmp6);
        bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp257 = simd_and(tmp21, bytetest_e0);
        carryQ.cq[54] = carryout2carry(pablo_blk_Advance(tmp257, carryQ.get_carry_in(54), tmp258));
        tmp259 = simd_and(tmp258, bytetest_a0_bf);
        tmp260 = simd_or(tmp259, bytetest_e1_ef);
        if ((bitblock::any(tmp260) || carryQ.CarryTest(55, 142))) {
          r800_ffff_tmp1 = simd_and(tmp1, tmp104);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a0 = simd_andc(tmp105, tmp6);
          r800_ffff_tmp2 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
          r800_ffff_tmp3 = simd_or(basis_bits.bit_4, r800_ffff_tmp2);
          r800_ffff_tmp4 = simd_and(basis_bits.bit_3, r800_ffff_tmp3);
          bytetest_80_95 = simd_andc(tmp142, r800_ffff_tmp4);
          r800_ffff_tmp5 = simd_and(tmp21, bytetest_e0);
          carryQ.cq[55] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp5, carryQ.get_carry_in(55), r800_ffff_tmp6));
          r800_ffff_tmp7 = simd_and(r800_ffff_tmp6, bytetest_a0);
          carryQ.cq[56] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp7, carryQ.get_carry_in(56), r800_ffff_tmp8));
          r800_ffff_tmp9 = simd_and(r800_ffff_tmp8, bytetest_80_95);
          struct_Lo.cc = simd_or(r800_ffff_tmp9, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a1 = simd_and(tmp105, tmp11);
          bytetest_80_98 = simd_andc(tmp142, tmp107);
          r800_ffff_tmp10 = simd_and(r800_ffff_tmp6, bytetest_a1);
          carryQ.cq[57] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp10, carryQ.get_carry_in(57), r800_ffff_tmp11));
          r800_ffff_tmp12 = simd_and(r800_ffff_tmp11, bytetest_80_98);
          struct_Lo.cc = simd_or(r800_ffff_tmp12, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a2 = simd_and(tmp105, tmp30);
          bytetest_a0_a0 = simd_andc(tmp105, tmp6);
          r800_ffff_tmp13 = simd_and(r800_ffff_tmp6, bytetest_a2);
          carryQ.cq[58] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp13, carryQ.get_carry_in(58), r800_ffff_tmp14));
          r800_ffff_tmp15 = simd_and(r800_ffff_tmp14, bytetest_a0_a0);
          struct_Lo.cc = simd_or(r800_ffff_tmp15, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a2 = simd_and(tmp105, tmp30);
          r800_ffff_tmp16 = simd_not(tmp88);
          r800_ffff_tmp17 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp16), simd_andc(tmp187, basis_bits.bit_4));
          bytetest_a2_ac = simd_and(tmp105, r800_ffff_tmp17);
          r800_ffff_tmp18 = simd_and(r800_ffff_tmp14, bytetest_a2_ac);
          struct_Lo.cc = simd_or(r800_ffff_tmp18, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a4 = simd_and(tmp105, tmp46);
          r800_ffff_tmp19 = simd_and(basis_bits.bit_3, tmp188);
          r800_ffff_tmp20 = simd_not(r800_ffff_tmp19);
          r800_ffff_tmp21 = simd_or(basis_bits.bit_3, tmp4);
          r800_ffff_tmp22 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp20), simd_andc(r800_ffff_tmp21, basis_bits.bit_2));
          bytetest_84_b9 = simd_and(bytetest_80_bf, r800_ffff_tmp22);
          r800_ffff_tmp23 = simd_and(r800_ffff_tmp6, bytetest_a4);
          carryQ.cq[59] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp23, carryQ.get_carry_in(59), r800_ffff_tmp24));
          r800_ffff_tmp25 = simd_and(r800_ffff_tmp24, bytetest_84_b9);
          struct_Lo.cc = simd_or(r800_ffff_tmp25, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a4 = simd_and(tmp105, tmp46);
          bytetest_bd_bd = simd_and(tmp118, tmp79);
          r800_ffff_tmp26 = simd_and(r800_ffff_tmp24, bytetest_bd_bd);
          struct_Lo.cc = simd_or(r800_ffff_tmp26, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          r800_ffff_tmp27 = simd_and(tmp45, tmp10);
          bytetest_a5 = simd_and(tmp105, r800_ffff_tmp27);
          bytetest_90_90 = simd_andc(tmp94, tmp6);
          r800_ffff_tmp28 = simd_and(r800_ffff_tmp6, bytetest_a5);
          carryQ.cq[60] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp28, carryQ.get_carry_in(60), r800_ffff_tmp29));
          r800_ffff_tmp30 = simd_and(r800_ffff_tmp29, bytetest_90_90);
          struct_Lo.cc = simd_or(r800_ffff_tmp30, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a5 = simd_and(tmp105, r800_ffff_tmp27);
          r800_ffff_tmp31 = simd_not(tmp254);
          r800_ffff_tmp32 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp31), simd_andc(tmp14, basis_bits.bit_2));
          bytetest_98_a1 = simd_and(bytetest_80_bf, r800_ffff_tmp32);
          r800_ffff_tmp33 = simd_and(r800_ffff_tmp29, bytetest_98_a1);
          struct_Lo.cc = simd_or(r800_ffff_tmp33, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a5 = simd_and(tmp105, r800_ffff_tmp27);
          r800_ffff_tmp34 = simd_andc(tmp118, basis_bits.bit_4);
          bytetest_b2_b7 = simd_and(r800_ffff_tmp34, tmp187);
          r800_ffff_tmp35 = simd_and(r800_ffff_tmp29, bytetest_b2_b7);
          struct_Lo.cc = simd_or(r800_ffff_tmp35, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a5 = simd_and(tmp105, r800_ffff_tmp27);
          bytetest_b9_bf = simd_and(tmp184, tmp37);
          r800_ffff_tmp36 = simd_and(r800_ffff_tmp29, bytetest_b9_bf);
          struct_Lo.cc = simd_or(r800_ffff_tmp36, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a6 = simd_and(tmp105, tmp55);
          r800_ffff_tmp37 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp16), simd_andc(tmp88, basis_bits.bit_4));
          bytetest_85_8c = simd_and(bytetest_80_8f, r800_ffff_tmp37);
          r800_ffff_tmp38 = simd_and(r800_ffff_tmp6, bytetest_a6);
          carryQ.cq[61] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp38, carryQ.get_carry_in(61), r800_ffff_tmp39));
          r800_ffff_tmp40 = simd_and(r800_ffff_tmp39, bytetest_85_8c);
          struct_Lo.cc = simd_or(r800_ffff_tmp40, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a6 = simd_and(tmp105, tmp55);
          r800_ffff_tmp41 = simd_not(tmp6);
          r800_ffff_tmp42 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp41), simd_andc(tmp80, basis_bits.bit_3));
          bytetest_8f_90 = simd_and(tmp142, r800_ffff_tmp42);
          r800_ffff_tmp43 = simd_and(r800_ffff_tmp39, bytetest_8f_90);
          struct_Lo.cc = simd_or(r800_ffff_tmp43, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a6 = simd_and(tmp105, tmp55);
          r800_ffff_tmp44 = simd_or(simd_and(basis_bits.bit_2, tmp40), simd_andc(tmp56, basis_bits.bit_2));
          bytetest_93_a8 = simd_and(bytetest_80_bf, r800_ffff_tmp44);
          r800_ffff_tmp45 = simd_and(r800_ffff_tmp39, bytetest_93_a8);
          struct_Lo.cc = simd_or(r800_ffff_tmp45, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a6 = simd_and(tmp105, tmp55);
          r800_ffff_tmp46 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp41), simd_andc(tmp188, basis_bits.bit_3));
          bytetest_aa_b0 = simd_and(tmp152, r800_ffff_tmp46);
          r800_ffff_tmp47 = simd_and(r800_ffff_tmp39, bytetest_aa_b0);
          struct_Lo.cc = simd_or(r800_ffff_tmp47, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a6 = simd_and(tmp105, tmp55);
          bytetest_b2_b2 = simd_and(tmp118, tmp30);
          r800_ffff_tmp48 = simd_and(r800_ffff_tmp39, bytetest_b2_b2);
          struct_Lo.cc = simd_or(r800_ffff_tmp48, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a6 = simd_and(tmp105, tmp55);
          r800_ffff_tmp49 = simd_or(simd_and(basis_bits.bit_4, tmp196), simd_andc(r800_ffff_tmp2, basis_bits.bit_4));
          bytetest_b6_b9 = simd_and(tmp118, r800_ffff_tmp49);
          r800_ffff_tmp50 = simd_and(r800_ffff_tmp39, bytetest_b6_b9);
          struct_Lo.cc = simd_or(r800_ffff_tmp50, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a6 = simd_and(tmp105, tmp55);
          bytetest_bd_bd = simd_and(tmp118, tmp79);
          r800_ffff_tmp51 = simd_and(r800_ffff_tmp39, bytetest_bd_bd);
          struct_Lo.cc = simd_or(r800_ffff_tmp51, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a7 = simd_and(tmp105, tmp62);
          bytetest_8e_8e = simd_and(bytetest_80_8f, tmp136);
          r800_ffff_tmp52 = simd_and(r800_ffff_tmp6, bytetest_a7);
          carryQ.cq[62] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp52, carryQ.get_carry_in(62), r800_ffff_tmp53));
          r800_ffff_tmp54 = simd_and(r800_ffff_tmp53, bytetest_8e_8e);
          struct_Lo.cc = simd_or(r800_ffff_tmp54, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a7 = simd_and(tmp105, tmp62);
          r800_ffff_tmp55 = simd_andc(tmp78, basis_bits.bit_6);
          bytetest_9c_9d = simd_and(tmp94, r800_ffff_tmp55);
          r800_ffff_tmp56 = simd_and(r800_ffff_tmp53, bytetest_9c_9d);
          struct_Lo.cc = simd_or(r800_ffff_tmp56, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a7 = simd_and(tmp105, tmp62);
          r800_ffff_tmp57 = simd_and(basis_bits.bit_3, tmp80);
          r800_ffff_tmp58 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp31), simd_andc(r800_ffff_tmp57, basis_bits.bit_2));
          bytetest_9f_a1 = simd_and(bytetest_80_bf, r800_ffff_tmp58);
          r800_ffff_tmp59 = simd_and(r800_ffff_tmp53, bytetest_9f_a1);
          struct_Lo.cc = simd_or(r800_ffff_tmp59, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a7 = simd_and(tmp105, tmp62);
          bytetest_b0_b1 = simd_andc(tmp118, tmp130);
          r800_ffff_tmp60 = simd_and(r800_ffff_tmp53, bytetest_b0_b1);
          struct_Lo.cc = simd_or(r800_ffff_tmp60, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a8 = simd_and(tmp105, tmp106);
          r800_ffff_tmp61 = simd_or(simd_and(basis_bits.bit_4, tmp178), simd_andc(tmp88, basis_bits.bit_4));
          bytetest_85_8a = simd_and(bytetest_80_8f, r800_ffff_tmp61);
          r800_ffff_tmp62 = simd_and(r800_ffff_tmp6, bytetest_a8);
          carryQ.cq[63] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp62, carryQ.get_carry_in(63), r800_ffff_tmp63));
          r800_ffff_tmp64 = simd_and(r800_ffff_tmp63, bytetest_85_8a);
          struct_Lo.cc = simd_or(r800_ffff_tmp64, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a8 = simd_and(tmp105, tmp106);
          bytetest_8f_90 = simd_and(tmp142, r800_ffff_tmp42);
          r800_ffff_tmp65 = simd_and(r800_ffff_tmp63, bytetest_8f_90);
          struct_Lo.cc = simd_or(r800_ffff_tmp65, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a8 = simd_and(tmp105, tmp106);
          bytetest_93_a8 = simd_and(bytetest_80_bf, r800_ffff_tmp44);
          r800_ffff_tmp66 = simd_and(r800_ffff_tmp63, bytetest_93_a8);
          struct_Lo.cc = simd_or(r800_ffff_tmp66, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a8 = simd_and(tmp105, tmp106);
          bytetest_aa_b0 = simd_and(tmp152, r800_ffff_tmp46);
          r800_ffff_tmp67 = simd_and(r800_ffff_tmp63, bytetest_aa_b0);
          struct_Lo.cc = simd_or(r800_ffff_tmp67, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a8 = simd_and(tmp105, tmp106);
          r800_ffff_tmp68 = simd_andc(basis_bits.bit_6, tmp4);
          bytetest_b2_b3 = simd_and(tmp118, r800_ffff_tmp68);
          r800_ffff_tmp69 = simd_and(r800_ffff_tmp63, bytetest_b2_b3);
          struct_Lo.cc = simd_or(r800_ffff_tmp69, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a8 = simd_and(tmp105, tmp106);
          bytetest_b5_b6 = simd_and(bytetest_b4_b7, tmp148);
          r800_ffff_tmp70 = simd_and(r800_ffff_tmp63, bytetest_b5_b6);
          struct_Lo.cc = simd_or(r800_ffff_tmp70, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a8 = simd_and(tmp105, tmp106);
          r800_ffff_tmp71 = simd_andc(tmp69, basis_bits.bit_6);
          bytetest_b8_b9 = simd_and(tmp118, r800_ffff_tmp71);
          r800_ffff_tmp72 = simd_and(r800_ffff_tmp63, bytetest_b8_b9);
          struct_Lo.cc = simd_or(r800_ffff_tmp72, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a9 = simd_and(tmp105, tmp157);
          r800_ffff_tmp73 = simd_and(tmp94, basis_bits.bit_4);
          bytetest_99_9c = simd_and(r800_ffff_tmp73, tmp65);
          r800_ffff_tmp74 = simd_and(r800_ffff_tmp6, bytetest_a9);
          carryQ.cq[64] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp74, carryQ.get_carry_in(64), r800_ffff_tmp75));
          r800_ffff_tmp76 = simd_and(r800_ffff_tmp75, bytetest_99_9c);
          struct_Lo.cc = simd_or(r800_ffff_tmp76, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a9 = simd_and(tmp105, tmp157);
          bytetest_9e_9e = simd_and(tmp94, tmp136);
          r800_ffff_tmp77 = simd_and(r800_ffff_tmp75, bytetest_9e_9e);
          struct_Lo.cc = simd_or(r800_ffff_tmp77, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a9 = simd_and(tmp105, tmp157);
          r800_ffff_tmp78 = simd_or(simd_and(basis_bits.bit_5, tmp64), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
          bytetest_b2_b4 = simd_and(r800_ffff_tmp34, r800_ffff_tmp78);
          r800_ffff_tmp79 = simd_and(r800_ffff_tmp75, bytetest_b2_b4);
          struct_Lo.cc = simd_or(r800_ffff_tmp79, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_aa = simd_and(tmp105, tmp70);
          r800_ffff_tmp80 = simd_not(r800_ffff_tmp2);
          r800_ffff_tmp81 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp80), simd_andc(tmp88, basis_bits.bit_4));
          bytetest_85_8d = simd_and(bytetest_80_8f, r800_ffff_tmp81);
          r800_ffff_tmp82 = simd_and(r800_ffff_tmp6, bytetest_aa);
          carryQ.cq[65] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp82, carryQ.get_carry_in(65), r800_ffff_tmp83));
          r800_ffff_tmp84 = simd_and(r800_ffff_tmp83, bytetest_85_8d);
          struct_Lo.cc = simd_or(r800_ffff_tmp84, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_aa = simd_and(tmp105, tmp70);
          r800_ffff_tmp85 = simd_not(tmp130);
          r800_ffff_tmp86 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp85), simd_andc(tmp80, basis_bits.bit_3));
          bytetest_8f_91 = simd_and(tmp142, r800_ffff_tmp86);
          r800_ffff_tmp87 = simd_and(r800_ffff_tmp83, bytetest_8f_91);
          struct_Lo.cc = simd_or(r800_ffff_tmp87, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_aa = simd_and(tmp105, tmp70);
          bytetest_93_a8 = simd_and(bytetest_80_bf, r800_ffff_tmp44);
          r800_ffff_tmp88 = simd_and(r800_ffff_tmp83, bytetest_93_a8);
          struct_Lo.cc = simd_or(r800_ffff_tmp88, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_aa = simd_and(tmp105, tmp70);
          bytetest_aa_b0 = simd_and(tmp152, r800_ffff_tmp46);
          r800_ffff_tmp89 = simd_and(r800_ffff_tmp83, bytetest_aa_b0);
          struct_Lo.cc = simd_or(r800_ffff_tmp89, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_aa = simd_and(tmp105, tmp70);
          bytetest_b2_b3 = simd_and(tmp118, r800_ffff_tmp68);
          r800_ffff_tmp90 = simd_and(r800_ffff_tmp83, bytetest_b2_b3);
          struct_Lo.cc = simd_or(r800_ffff_tmp90, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_aa = simd_and(tmp105, tmp70);
          bytetest_b5_b9 = simd_and(tmp118, tmp197);
          r800_ffff_tmp91 = simd_and(r800_ffff_tmp83, bytetest_b5_b9);
          struct_Lo.cc = simd_or(r800_ffff_tmp91, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_aa = simd_and(tmp105, tmp70);
          bytetest_bd_bd = simd_and(tmp118, tmp79);
          r800_ffff_tmp92 = simd_and(r800_ffff_tmp83, bytetest_bd_bd);
          struct_Lo.cc = simd_or(r800_ffff_tmp92, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ab = simd_and(tmp105, tmp129);
          bytetest_90_90 = simd_andc(tmp94, tmp6);
          r800_ffff_tmp93 = simd_and(r800_ffff_tmp6, bytetest_ab);
          carryQ.cq[66] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp93, carryQ.get_carry_in(66), r800_ffff_tmp94));
          r800_ffff_tmp95 = simd_and(r800_ffff_tmp94, bytetest_90_90);
          struct_Lo.cc = simd_or(r800_ffff_tmp95, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ab = simd_and(tmp105, tmp129);
          bytetest_a0_a1 = simd_andc(tmp105, tmp130);
          r800_ffff_tmp96 = simd_and(r800_ffff_tmp94, bytetest_a0_a1);
          struct_Lo.cc = simd_or(r800_ffff_tmp96, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ac = simd_and(tmp105, tmp123);
          bytetest_85_8c = simd_and(bytetest_80_8f, r800_ffff_tmp37);
          r800_ffff_tmp97 = simd_and(r800_ffff_tmp6, bytetest_ac);
          carryQ.cq[67] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp97, carryQ.get_carry_in(67), r800_ffff_tmp98));
          r800_ffff_tmp99 = simd_and(r800_ffff_tmp98, bytetest_85_8c);
          struct_Lo.cc = simd_or(r800_ffff_tmp99, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ac = simd_and(tmp105, tmp123);
          bytetest_8f_90 = simd_and(tmp142, r800_ffff_tmp42);
          r800_ffff_tmp100 = simd_and(r800_ffff_tmp98, bytetest_8f_90);
          struct_Lo.cc = simd_or(r800_ffff_tmp100, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ac = simd_and(tmp105, tmp123);
          bytetest_93_a8 = simd_and(bytetest_80_bf, r800_ffff_tmp44);
          r800_ffff_tmp101 = simd_and(r800_ffff_tmp98, bytetest_93_a8);
          struct_Lo.cc = simd_or(r800_ffff_tmp101, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ac = simd_and(tmp105, tmp123);
          bytetest_aa_b0 = simd_and(tmp152, r800_ffff_tmp46);
          r800_ffff_tmp102 = simd_and(r800_ffff_tmp98, bytetest_aa_b0);
          struct_Lo.cc = simd_or(r800_ffff_tmp102, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ac = simd_and(tmp105, tmp123);
          bytetest_b2_b3 = simd_and(tmp118, r800_ffff_tmp68);
          r800_ffff_tmp103 = simd_and(r800_ffff_tmp98, bytetest_b2_b3);
          struct_Lo.cc = simd_or(r800_ffff_tmp103, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ac = simd_and(tmp105, tmp123);
          bytetest_b5_b9 = simd_and(tmp118, tmp197);
          r800_ffff_tmp104 = simd_and(r800_ffff_tmp98, bytetest_b5_b9);
          struct_Lo.cc = simd_or(r800_ffff_tmp104, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ac = simd_and(tmp105, tmp123);
          bytetest_bd_bd = simd_and(tmp118, tmp79);
          r800_ffff_tmp105 = simd_and(r800_ffff_tmp98, bytetest_bd_bd);
          struct_Lo.cc = simd_or(r800_ffff_tmp105, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ad = simd_and(tmp105, tmp79);
          bytetest_9c_9d = simd_and(tmp94, r800_ffff_tmp55);
          r800_ffff_tmp106 = simd_and(r800_ffff_tmp6, bytetest_ad);
          carryQ.cq[68] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp106, carryQ.get_carry_in(68), r800_ffff_tmp107));
          r800_ffff_tmp108 = simd_and(r800_ffff_tmp107, bytetest_9c_9d);
          struct_Lo.cc = simd_or(r800_ffff_tmp108, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ad = simd_and(tmp105, tmp79);
          bytetest_9f_a1 = simd_and(bytetest_80_bf, r800_ffff_tmp58);
          r800_ffff_tmp109 = simd_and(r800_ffff_tmp107, bytetest_9f_a1);
          struct_Lo.cc = simd_or(r800_ffff_tmp109, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ad = simd_and(tmp105, tmp79);
          bytetest_b1_b1 = simd_and(tmp118, tmp11);
          r800_ffff_tmp110 = simd_and(r800_ffff_tmp107, bytetest_b1_b1);
          struct_Lo.cc = simd_or(r800_ffff_tmp110, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ae = simd_and(tmp105, tmp136);
          bytetest_83_83 = simd_and(bytetest_80_8f, tmp36);
          r800_ffff_tmp111 = simd_and(r800_ffff_tmp6, bytetest_ae);
          carryQ.cq[69] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp111, carryQ.get_carry_in(69), r800_ffff_tmp112));
          r800_ffff_tmp113 = simd_and(r800_ffff_tmp112, bytetest_83_83);
          struct_Lo.cc = simd_or(r800_ffff_tmp113, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ae = simd_and(tmp105, tmp136);
          bytetest_85_8a = simd_and(bytetest_80_8f, r800_ffff_tmp61);
          r800_ffff_tmp114 = simd_and(r800_ffff_tmp112, bytetest_85_8a);
          struct_Lo.cc = simd_or(r800_ffff_tmp114, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ae = simd_and(tmp105, tmp136);
          r800_ffff_tmp115 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp41), simd_andc(tmp234, basis_bits.bit_3));
          bytetest_8e_90 = simd_and(tmp142, r800_ffff_tmp115);
          r800_ffff_tmp116 = simd_and(r800_ffff_tmp112, bytetest_8e_90);
          struct_Lo.cc = simd_or(r800_ffff_tmp116, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ae = simd_and(tmp105, tmp136);
          r800_ffff_tmp117 = simd_andc(tmp94, basis_bits.bit_4);
          r800_ffff_tmp118 = simd_not(basis_bits.bit_6);
          r800_ffff_tmp119 = simd_or(simd_and(basis_bits.bit_5, r800_ffff_tmp118), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
          bytetest_92_95 = simd_and(r800_ffff_tmp117, r800_ffff_tmp119);
          r800_ffff_tmp120 = simd_and(r800_ffff_tmp112, bytetest_92_95);
          struct_Lo.cc = simd_or(r800_ffff_tmp120, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ae = simd_and(tmp105, tmp136);
          r800_ffff_tmp121 = simd_and(tmp94, tmp69);
          bytetest_99_9a = simd_and(r800_ffff_tmp121, tmp148);
          r800_ffff_tmp122 = simd_and(r800_ffff_tmp112, bytetest_99_9a);
          struct_Lo.cc = simd_or(r800_ffff_tmp122, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ae = simd_and(tmp105, tmp136);
          bytetest_9c_9c = simd_and(tmp94, tmp123);
          r800_ffff_tmp123 = simd_and(r800_ffff_tmp112, bytetest_9c_9c);
          struct_Lo.cc = simd_or(r800_ffff_tmp123, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ae = simd_and(tmp105, tmp136);
          bytetest_9e_9f = simd_and(tmp94, tmp234);
          r800_ffff_tmp124 = simd_and(r800_ffff_tmp112, bytetest_9e_9f);
          struct_Lo.cc = simd_or(r800_ffff_tmp124, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ae = simd_and(tmp105, tmp136);
          r800_ffff_tmp125 = simd_or(simd_and(basis_bits.bit_5, tmp64), simd_andc(tmp16, basis_bits.bit_5));
          bytetest_a3_a4 = simd_and(bytetest_a0_a7, r800_ffff_tmp125);
          r800_ffff_tmp126 = simd_and(r800_ffff_tmp112, bytetest_a3_a4);
          struct_Lo.cc = simd_or(r800_ffff_tmp126, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ae = simd_and(tmp105, tmp136);
          r800_ffff_tmp127 = simd_and(tmp105, tmp69);
          bytetest_a8_aa = simd_andc(r800_ffff_tmp127, tmp16);
          r800_ffff_tmp128 = simd_and(r800_ffff_tmp112, bytetest_a8_aa);
          struct_Lo.cc = simd_or(r800_ffff_tmp128, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ae = simd_and(tmp105, tmp136);
          r800_ffff_tmp129 = simd_not(tmp188);
          r800_ffff_tmp130 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp129), simd_andc(tmp234, basis_bits.bit_3));
          bytetest_ae_b9 = simd_and(tmp152, r800_ffff_tmp130);
          r800_ffff_tmp131 = simd_and(r800_ffff_tmp112, bytetest_ae_b9);
          struct_Lo.cc = simd_or(r800_ffff_tmp131, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_af = simd_and(tmp105, tmp80);
          bytetest_90_90 = simd_andc(tmp94, tmp6);
          r800_ffff_tmp132 = simd_and(r800_ffff_tmp6, bytetest_af);
          carryQ.cq[70] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp132, carryQ.get_carry_in(70), r800_ffff_tmp133));
          r800_ffff_tmp134 = simd_and(r800_ffff_tmp133, bytetest_90_90);
          struct_Lo.cc = simd_or(r800_ffff_tmp134, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b0 = simd_andc(tmp118, tmp6);
          bytetest_85_8c = simd_and(bytetest_80_8f, r800_ffff_tmp37);
          r800_ffff_tmp135 = simd_and(r800_ffff_tmp6, bytetest_b0);
          carryQ.cq[71] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp135, carryQ.get_carry_in(71), r800_ffff_tmp136));
          r800_ffff_tmp137 = simd_and(r800_ffff_tmp136, bytetest_85_8c);
          struct_Lo.cc = simd_or(r800_ffff_tmp137, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b0 = simd_andc(tmp118, tmp6);
          bytetest_8e_90 = simd_and(tmp142, r800_ffff_tmp115);
          r800_ffff_tmp138 = simd_and(r800_ffff_tmp136, bytetest_8e_90);
          struct_Lo.cc = simd_or(r800_ffff_tmp138, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b0 = simd_andc(tmp118, tmp6);
          r800_ffff_tmp139 = simd_and(basis_bits.bit_3, tmp130);
          r800_ffff_tmp140 = simd_or(simd_and(basis_bits.bit_2, tmp40), simd_andc(r800_ffff_tmp139, basis_bits.bit_2));
          bytetest_92_a8 = simd_and(bytetest_80_bf, r800_ffff_tmp140);
          r800_ffff_tmp141 = simd_and(r800_ffff_tmp136, bytetest_92_a8);
          struct_Lo.cc = simd_or(r800_ffff_tmp141, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b0 = simd_andc(tmp118, tmp6);
          r800_ffff_tmp142 = simd_not(tmp4);
          r800_ffff_tmp143 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp142), simd_andc(tmp188, basis_bits.bit_3));
          bytetest_aa_b3 = simd_and(tmp152, r800_ffff_tmp143);
          r800_ffff_tmp144 = simd_and(r800_ffff_tmp136, bytetest_aa_b3);
          struct_Lo.cc = simd_or(r800_ffff_tmp144, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b0 = simd_andc(tmp118, tmp6);
          bytetest_b5_b9 = simd_and(tmp118, tmp197);
          r800_ffff_tmp145 = simd_and(r800_ffff_tmp136, bytetest_b5_b9);
          struct_Lo.cc = simd_or(r800_ffff_tmp145, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b0 = simd_andc(tmp118, tmp6);
          bytetest_bd_bd = simd_and(tmp118, tmp79);
          r800_ffff_tmp146 = simd_and(r800_ffff_tmp136, bytetest_bd_bd);
          struct_Lo.cc = simd_or(r800_ffff_tmp146, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b1 = simd_and(tmp118, tmp11);
          bytetest_98_99 = simd_and(tmp94, r800_ffff_tmp71);
          r800_ffff_tmp147 = simd_and(r800_ffff_tmp6, bytetest_b1);
          carryQ.cq[72] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp147, carryQ.get_carry_in(72), r800_ffff_tmp148));
          r800_ffff_tmp149 = simd_and(r800_ffff_tmp148, bytetest_98_99);
          struct_Lo.cc = simd_or(r800_ffff_tmp149, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b1 = simd_and(tmp118, tmp11);
          bytetest_a0_a1 = simd_andc(tmp105, tmp130);
          r800_ffff_tmp150 = simd_and(r800_ffff_tmp148, bytetest_a0_a1);
          struct_Lo.cc = simd_or(r800_ffff_tmp150, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b2 = simd_and(tmp118, tmp30);
          bytetest_85_8c = simd_and(bytetest_80_8f, r800_ffff_tmp37);
          r800_ffff_tmp151 = simd_and(r800_ffff_tmp6, bytetest_b2);
          carryQ.cq[73] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp151, carryQ.get_carry_in(73), r800_ffff_tmp152));
          r800_ffff_tmp153 = simd_and(r800_ffff_tmp152, bytetest_85_8c);
          struct_Lo.cc = simd_or(r800_ffff_tmp153, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b2 = simd_and(tmp118, tmp30);
          bytetest_8e_90 = simd_and(tmp142, r800_ffff_tmp115);
          r800_ffff_tmp154 = simd_and(r800_ffff_tmp152, bytetest_8e_90);
          struct_Lo.cc = simd_or(r800_ffff_tmp154, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b2 = simd_and(tmp118, tmp30);
          bytetest_92_a8 = simd_and(bytetest_80_bf, r800_ffff_tmp140);
          r800_ffff_tmp155 = simd_and(r800_ffff_tmp152, bytetest_92_a8);
          struct_Lo.cc = simd_or(r800_ffff_tmp155, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b2 = simd_and(tmp118, tmp30);
          bytetest_aa_b3 = simd_and(tmp152, r800_ffff_tmp143);
          r800_ffff_tmp156 = simd_and(r800_ffff_tmp152, bytetest_aa_b3);
          struct_Lo.cc = simd_or(r800_ffff_tmp156, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b2 = simd_and(tmp118, tmp30);
          bytetest_b5_b9 = simd_and(tmp118, tmp197);
          r800_ffff_tmp157 = simd_and(r800_ffff_tmp152, bytetest_b5_b9);
          struct_Lo.cc = simd_or(r800_ffff_tmp157, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b2 = simd_and(tmp118, tmp30);
          bytetest_bd_bd = simd_and(tmp118, tmp79);
          r800_ffff_tmp158 = simd_and(r800_ffff_tmp152, bytetest_bd_bd);
          struct_Lo.cc = simd_or(r800_ffff_tmp158, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b3 = simd_and(tmp118, tmp36);
          bytetest_9e_9e = simd_and(tmp94, tmp136);
          r800_ffff_tmp159 = simd_and(r800_ffff_tmp6, bytetest_b3);
          carryQ.cq[74] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp159, carryQ.get_carry_in(74), r800_ffff_tmp160));
          r800_ffff_tmp161 = simd_and(r800_ffff_tmp160, bytetest_9e_9e);
          struct_Lo.cc = simd_or(r800_ffff_tmp161, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b3 = simd_and(tmp118, tmp36);
          bytetest_a0_a1 = simd_andc(tmp105, tmp130);
          r800_ffff_tmp162 = simd_and(r800_ffff_tmp160, bytetest_a0_a1);
          struct_Lo.cc = simd_or(r800_ffff_tmp162, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b3 = simd_and(tmp118, tmp36);
          r800_ffff_tmp163 = simd_andc(tmp118, tmp4);
          bytetest_b1_b2 = simd_and(r800_ffff_tmp163, tmp148);
          r800_ffff_tmp164 = simd_and(r800_ffff_tmp160, bytetest_b1_b2);
          struct_Lo.cc = simd_or(r800_ffff_tmp164, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b4 = simd_and(tmp118, tmp46);
          bytetest_85_8c = simd_and(bytetest_80_8f, r800_ffff_tmp37);
          r800_ffff_tmp165 = simd_and(r800_ffff_tmp6, bytetest_b4);
          carryQ.cq[75] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp165, carryQ.get_carry_in(75), r800_ffff_tmp166));
          r800_ffff_tmp167 = simd_and(r800_ffff_tmp166, bytetest_85_8c);
          struct_Lo.cc = simd_or(r800_ffff_tmp167, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b4 = simd_and(tmp118, tmp46);
          bytetest_8e_90 = simd_and(tmp142, r800_ffff_tmp115);
          r800_ffff_tmp168 = simd_and(r800_ffff_tmp166, bytetest_8e_90);
          struct_Lo.cc = simd_or(r800_ffff_tmp168, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b4 = simd_and(tmp118, tmp46);
          r800_ffff_tmp169 = simd_not(tmp206);
          r800_ffff_tmp170 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp169), simd_andc(r800_ffff_tmp139, basis_bits.bit_2));
          bytetest_92_ba = simd_and(bytetest_80_bf, r800_ffff_tmp170);
          r800_ffff_tmp171 = simd_and(r800_ffff_tmp166, bytetest_92_ba);
          struct_Lo.cc = simd_or(r800_ffff_tmp171, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b4 = simd_and(tmp118, tmp46);
          bytetest_bd_bd = simd_and(tmp118, tmp79);
          r800_ffff_tmp172 = simd_and(r800_ffff_tmp166, bytetest_bd_bd);
          struct_Lo.cc = simd_or(r800_ffff_tmp172, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b5 = simd_and(tmp118, r800_ffff_tmp27);
          bytetest_8e_8e = simd_and(bytetest_80_8f, tmp136);
          r800_ffff_tmp173 = simd_and(r800_ffff_tmp6, bytetest_b5);
          carryQ.cq[76] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp173, carryQ.get_carry_in(76), r800_ffff_tmp174));
          r800_ffff_tmp175 = simd_and(r800_ffff_tmp174, bytetest_8e_8e);
          struct_Lo.cc = simd_or(r800_ffff_tmp175, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b5 = simd_and(tmp118, r800_ffff_tmp27);
          bytetest_a0_a1 = simd_andc(tmp105, tmp130);
          r800_ffff_tmp176 = simd_and(r800_ffff_tmp174, bytetest_a0_a1);
          struct_Lo.cc = simd_or(r800_ffff_tmp176, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b5 = simd_and(tmp118, r800_ffff_tmp27);
          bytetest_ba_bf = simd_and(tmp184, tmp187);
          r800_ffff_tmp177 = simd_and(r800_ffff_tmp174, bytetest_ba_bf);
          struct_Lo.cc = simd_or(r800_ffff_tmp177, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b6 = simd_and(tmp118, tmp55);
          r800_ffff_tmp178 = simd_not(tmp48);
          r800_ffff_tmp179 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp178), simd_andc(tmp143, basis_bits.bit_3));
          bytetest_85_96 = simd_and(tmp142, r800_ffff_tmp179);
          r800_ffff_tmp180 = simd_and(r800_ffff_tmp6, bytetest_b6);
          carryQ.cq[77] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp180, carryQ.get_carry_in(77), r800_ffff_tmp181));
          r800_ffff_tmp182 = simd_and(r800_ffff_tmp181, bytetest_85_96);
          struct_Lo.cc = simd_or(r800_ffff_tmp182, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b6 = simd_and(tmp118, tmp55);
          r800_ffff_tmp183 = simd_not(r800_ffff_tmp139);
          r800_ffff_tmp184 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp183), simd_andc(r800_ffff_tmp19, basis_bits.bit_2));
          bytetest_9a_b1 = simd_and(bytetest_80_bf, r800_ffff_tmp184);
          r800_ffff_tmp185 = simd_and(r800_ffff_tmp181, bytetest_9a_b1);
          struct_Lo.cc = simd_or(r800_ffff_tmp185, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b6 = simd_and(tmp118, tmp55);
          r800_ffff_tmp186 = simd_not(basis_bits.bit_5);
          r800_ffff_tmp187 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp186), simd_andc(tmp71, basis_bits.bit_4));
          bytetest_b3_bb = simd_and(tmp118, r800_ffff_tmp187);
          r800_ffff_tmp188 = simd_and(r800_ffff_tmp181, bytetest_b3_bb);
          struct_Lo.cc = simd_or(r800_ffff_tmp188, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b6 = simd_and(tmp118, tmp55);
          bytetest_bd_bd = simd_and(tmp118, tmp79);
          r800_ffff_tmp189 = simd_and(r800_ffff_tmp181, bytetest_bd_bd);
          struct_Lo.cc = simd_or(r800_ffff_tmp189, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b7 = simd_and(tmp118, tmp62);
          bytetest_80_86 = simd_andc(tmp119, tmp47);
          r800_ffff_tmp190 = simd_and(r800_ffff_tmp6, bytetest_b7);
          carryQ.cq[78] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp190, carryQ.get_carry_in(78), r800_ffff_tmp191));
          r800_ffff_tmp192 = simd_and(r800_ffff_tmp191, bytetest_80_86);
          struct_Lo.cc = simd_or(r800_ffff_tmp192, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b8 = simd_and(tmp118, tmp106);
          r800_ffff_tmp193 = simd_and(basis_bits.bit_3, tmp6);
          r800_ffff_tmp194 = simd_not(r800_ffff_tmp193);
          r800_ffff_tmp195 = simd_or(basis_bits.bit_3, tmp6);
          r800_ffff_tmp196 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp194), simd_andc(r800_ffff_tmp195, basis_bits.bit_2));
          bytetest_81_b0 = simd_and(bytetest_80_bf, r800_ffff_tmp196);
          r800_ffff_tmp197 = simd_and(r800_ffff_tmp6, bytetest_b8);
          carryQ.cq[79] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp197, carryQ.get_carry_in(79), r800_ffff_tmp198));
          r800_ffff_tmp199 = simd_and(r800_ffff_tmp198, bytetest_81_b0);
          struct_Lo.cc = simd_or(r800_ffff_tmp199, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b8 = simd_and(tmp118, tmp106);
          bytetest_b2_b3 = simd_and(tmp118, r800_ffff_tmp68);
          r800_ffff_tmp200 = simd_and(r800_ffff_tmp198, bytetest_b2_b3);
          struct_Lo.cc = simd_or(r800_ffff_tmp200, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b9 = simd_and(tmp118, tmp157);
          bytetest_80_85 = simd_andc(tmp119, r800_ffff_tmp2);
          r800_ffff_tmp201 = simd_and(r800_ffff_tmp6, bytetest_b9);
          carryQ.cq[80] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp201, carryQ.get_carry_in(80), r800_ffff_tmp202));
          r800_ffff_tmp203 = simd_and(r800_ffff_tmp202, bytetest_80_85);
          struct_Lo.cc = simd_or(r800_ffff_tmp203, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ba = simd_and(tmp118, tmp70);
          bytetest_81_82 = simd_and(bytetest_80_83, tmp148);
          r800_ffff_tmp204 = simd_and(r800_ffff_tmp6, bytetest_ba);
          carryQ.cq[81] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp204, carryQ.get_carry_in(81), r800_ffff_tmp205));
          r800_ffff_tmp206 = simd_and(r800_ffff_tmp205, bytetest_81_82);
          struct_Lo.cc = simd_or(r800_ffff_tmp206, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ba = simd_and(tmp118, tmp70);
          bytetest_84_84 = simd_and(bytetest_80_8f, tmp46);
          r800_ffff_tmp207 = simd_and(r800_ffff_tmp205, bytetest_84_84);
          struct_Lo.cc = simd_or(r800_ffff_tmp207, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ba = simd_and(tmp118, tmp70);
          r800_ffff_tmp208 = simd_not(tmp37);
          r800_ffff_tmp209 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp208), simd_andc(tmp47, basis_bits.bit_4));
          bytetest_87_88 = simd_and(bytetest_80_8f, r800_ffff_tmp209);
          r800_ffff_tmp210 = simd_and(r800_ffff_tmp205, bytetest_87_88);
          struct_Lo.cc = simd_or(r800_ffff_tmp210, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ba = simd_and(tmp118, tmp70);
          bytetest_8a_8a = simd_and(bytetest_80_8f, tmp70);
          r800_ffff_tmp211 = simd_and(r800_ffff_tmp205, bytetest_8a_8a);
          struct_Lo.cc = simd_or(r800_ffff_tmp211, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ba = simd_and(tmp118, tmp70);
          bytetest_8d_8d = simd_and(bytetest_80_8f, tmp79);
          r800_ffff_tmp212 = simd_and(r800_ffff_tmp205, bytetest_8d_8d);
          struct_Lo.cc = simd_or(r800_ffff_tmp212, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ba = simd_and(tmp118, tmp70);
          bytetest_94_97 = simd_and(tmp94, tmp45);
          r800_ffff_tmp213 = simd_and(r800_ffff_tmp205, bytetest_94_97);
          struct_Lo.cc = simd_or(r800_ffff_tmp213, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ba = simd_and(tmp118, tmp70);
          bytetest_99_9f = simd_and(r800_ffff_tmp73, tmp37);
          r800_ffff_tmp214 = simd_and(r800_ffff_tmp205, bytetest_99_9f);
          struct_Lo.cc = simd_or(r800_ffff_tmp214, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ba = simd_and(tmp118, tmp70);
          bytetest_a1_a3 = simd_and(tmp146, tmp5);
          r800_ffff_tmp215 = simd_and(r800_ffff_tmp205, bytetest_a1_a3);
          struct_Lo.cc = simd_or(r800_ffff_tmp215, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ba = simd_and(tmp118, tmp70);
          bytetest_a5_a5 = simd_and(tmp105, r800_ffff_tmp27);
          r800_ffff_tmp216 = simd_and(r800_ffff_tmp205, bytetest_a5_a5);
          struct_Lo.cc = simd_or(r800_ffff_tmp216, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ba = simd_and(tmp118, tmp70);
          bytetest_a7_a7 = simd_and(tmp105, tmp62);
          r800_ffff_tmp217 = simd_and(r800_ffff_tmp205, bytetest_a7_a7);
          struct_Lo.cc = simd_or(r800_ffff_tmp217, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ba = simd_and(tmp118, tmp70);
          r800_ffff_tmp218 = simd_and(tmp69, basis_bits.bit_6);
          bytetest_aa_ab = simd_and(tmp105, r800_ffff_tmp218);
          r800_ffff_tmp219 = simd_and(r800_ffff_tmp205, bytetest_aa_ab);
          struct_Lo.cc = simd_or(r800_ffff_tmp219, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ba = simd_and(tmp118, tmp70);
          r800_ffff_tmp220 = simd_and(tmp78, tmp5);
          r800_ffff_tmp221 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp41), simd_andc(r800_ffff_tmp220, basis_bits.bit_3));
          bytetest_ad_b0 = simd_and(tmp152, r800_ffff_tmp221);
          r800_ffff_tmp222 = simd_and(r800_ffff_tmp205, bytetest_ad_b0);
          struct_Lo.cc = simd_or(r800_ffff_tmp222, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ba = simd_and(tmp118, tmp70);
          bytetest_b2_b3 = simd_and(tmp118, r800_ffff_tmp68);
          r800_ffff_tmp223 = simd_and(r800_ffff_tmp205, bytetest_b2_b3);
          struct_Lo.cc = simd_or(r800_ffff_tmp223, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ba = simd_and(tmp118, tmp70);
          bytetest_bd_bd = simd_and(tmp118, tmp79);
          r800_ffff_tmp224 = simd_and(r800_ffff_tmp205, bytetest_bd_bd);
          struct_Lo.cc = simd_or(r800_ffff_tmp224, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bb = simd_and(tmp118, tmp129);
          bytetest_80_84 = simd_andc(tmp119, tmp88);
          r800_ffff_tmp225 = simd_and(r800_ffff_tmp6, bytetest_bb);
          carryQ.cq[82] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp225, carryQ.get_carry_in(82), r800_ffff_tmp226));
          r800_ffff_tmp227 = simd_and(r800_ffff_tmp226, bytetest_80_84);
          struct_Lo.cc = simd_or(r800_ffff_tmp227, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bb = simd_and(tmp118, tmp129);
          bytetest_9c_9f = simd_and(tmp94, tmp78);
          r800_ffff_tmp228 = simd_and(r800_ffff_tmp226, bytetest_9c_9f);
          struct_Lo.cc = simd_or(r800_ffff_tmp228, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bc = simd_and(tmp118, tmp123);
          bytetest_80_80 = simd_andc(bytetest_80_8f, tmp6);
          r800_ffff_tmp229 = simd_and(r800_ffff_tmp6, bytetest_bc);
          carryQ.cq[83] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp229, carryQ.get_carry_in(83), r800_ffff_tmp230));
          r800_ffff_tmp231 = simd_and(r800_ffff_tmp230, bytetest_80_80);
          struct_Lo.cc = simd_or(r800_ffff_tmp231, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bd = simd_and(tmp118, tmp79);
          bytetest_80_87 = simd_andc(bytetest_80_8f, basis_bits.bit_4);
          r800_ffff_tmp232 = simd_and(r800_ffff_tmp6, bytetest_bd);
          carryQ.cq[84] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp232, carryQ.get_carry_in(84), r800_ffff_tmp233));
          r800_ffff_tmp234 = simd_and(r800_ffff_tmp233, bytetest_80_87);
          struct_Lo.cc = simd_or(r800_ffff_tmp234, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bd = simd_and(tmp118, tmp79);
          r800_ffff_tmp235 = simd_or(basis_bits.bit_3, r800_ffff_tmp220);
          r800_ffff_tmp236 = simd_not(r800_ffff_tmp235);
          r800_ffff_tmp237 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp236), simd_andc(tmp39, basis_bits.bit_2));
          bytetest_89_ac = simd_and(bytetest_80_bf, r800_ffff_tmp237);
          r800_ffff_tmp238 = simd_and(r800_ffff_tmp233, bytetest_89_ac);
          struct_Lo.cc = simd_or(r800_ffff_tmp238, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_be = simd_and(tmp118, tmp136);
          r800_ffff_tmp239 = simd_and(bytetest_80_8f, basis_bits.bit_4);
          bytetest_88_8c = simd_andc(r800_ffff_tmp239, tmp88);
          r800_ffff_tmp240 = simd_and(r800_ffff_tmp6, bytetest_be);
          carryQ.cq[85] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp240, carryQ.get_carry_in(85), r800_ffff_tmp241));
          r800_ffff_tmp242 = simd_and(r800_ffff_tmp241, bytetest_88_8c);
          struct_Lo.cc = simd_or(r800_ffff_tmp242, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_80 = simd_andc(bytetest_80_8f, tmp6);
          bytetest_80_aa = simd_andc(bytetest_80_bf, tmp74);
          r800_ffff_tmp243 = simd_and(tmp21, bytetest_e1);
          carryQ.cq[86] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp243, carryQ.get_carry_in(86), r800_ffff_tmp244));
          r800_ffff_tmp245 = simd_and(r800_ffff_tmp244, bytetest_80);
          carryQ.cq[87] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp245, carryQ.get_carry_in(87), r800_ffff_tmp246));
          r800_ffff_tmp247 = simd_and(r800_ffff_tmp246, bytetest_80_aa);
          struct_Lo.cc = simd_or(r800_ffff_tmp247, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_80 = simd_andc(bytetest_80_8f, tmp6);
          bytetest_bf_bf = simd_and(tmp118, tmp80);
          r800_ffff_tmp248 = simd_and(r800_ffff_tmp246, bytetest_bf_bf);
          struct_Lo.cc = simd_or(r800_ffff_tmp248, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_81 = simd_and(bytetest_80_8f, tmp11);
          bytetest_90_95 = simd_andc(r800_ffff_tmp117, r800_ffff_tmp2);
          r800_ffff_tmp249 = simd_and(r800_ffff_tmp244, bytetest_81);
          carryQ.cq[88] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp249, carryQ.get_carry_in(88), r800_ffff_tmp250));
          r800_ffff_tmp251 = simd_and(r800_ffff_tmp250, bytetest_90_95);
          struct_Lo.cc = simd_or(r800_ffff_tmp251, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_81 = simd_and(bytetest_80_8f, tmp11);
          bytetest_9a_9d = simd_and(r800_ffff_tmp73, r800_ffff_tmp119);
          r800_ffff_tmp252 = simd_and(r800_ffff_tmp250, bytetest_9a_9d);
          struct_Lo.cc = simd_or(r800_ffff_tmp252, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_81 = simd_and(bytetest_80_8f, tmp11);
          bytetest_a1_a1 = simd_and(tmp105, tmp11);
          r800_ffff_tmp253 = simd_and(r800_ffff_tmp250, bytetest_a1_a1);
          struct_Lo.cc = simd_or(r800_ffff_tmp253, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_81 = simd_and(bytetest_80_8f, tmp11);
          r800_ffff_tmp254 = simd_and(tmp105, tmp45);
          bytetest_a5_a6 = simd_and(r800_ffff_tmp254, tmp148);
          r800_ffff_tmp255 = simd_and(r800_ffff_tmp250, bytetest_a5_a6);
          struct_Lo.cc = simd_or(r800_ffff_tmp255, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_81 = simd_and(bytetest_80_8f, tmp11);
          bytetest_ae_b0 = simd_and(tmp152, r800_ffff_tmp115);
          r800_ffff_tmp256 = simd_and(r800_ffff_tmp250, bytetest_ae_b0);
          struct_Lo.cc = simd_or(r800_ffff_tmp256, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_82 = simd_and(bytetest_80_8f, tmp30);
          bytetest_80_81 = simd_andc(bytetest_80_8f, tmp130);
          r800_ffff_tmp257 = simd_and(r800_ffff_tmp244, bytetest_82);
          carryQ.cq[89] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp257, carryQ.get_carry_in(89), r800_ffff_tmp258));
          r800_ffff_tmp259 = simd_and(r800_ffff_tmp258, bytetest_80_81);
          bytetest_81 = simd_and(bytetest_80_8f, tmp11);
          bytetest_b5_bf = simd_and(tmp118, tmp143);
          r800_ffff_tmp260 = simd_and(r800_ffff_tmp250, bytetest_b5_bf);
          r800_ffff_tmp261 = simd_or(r800_ffff_tmp260, r800_ffff_tmp259);
          struct_Lo.cc = simd_or(r800_ffff_tmp261, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_82 = simd_and(bytetest_80_8f, tmp30);
          bytetest_8e_8e = simd_and(bytetest_80_8f, tmp136);
          r800_ffff_tmp262 = simd_and(r800_ffff_tmp258, bytetest_8e_8e);
          struct_Lo.cc = simd_or(r800_ffff_tmp262, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_83 = simd_and(bytetest_80_8f, tmp36);
          r800_ffff_tmp263 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp169), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
          bytetest_90_ba = simd_and(bytetest_80_bf, r800_ffff_tmp263);
          r800_ffff_tmp264 = simd_and(r800_ffff_tmp244, bytetest_83);
          carryQ.cq[90] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp264, carryQ.get_carry_in(90), r800_ffff_tmp265));
          r800_ffff_tmp266 = simd_and(r800_ffff_tmp265, bytetest_90_ba);
          struct_Lo.cc = simd_or(r800_ffff_tmp266, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_89 = simd_and(bytetest_80_8f, tmp157);
          bytetest_80_88 = simd_andc(bytetest_80_8f, tmp38);
          r800_ffff_tmp267 = simd_and(r800_ffff_tmp244, bytetest_89);
          carryQ.cq[91] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp267, carryQ.get_carry_in(91), r800_ffff_tmp268));
          r800_ffff_tmp269 = simd_and(r800_ffff_tmp268, bytetest_80_88);
          r800_ffff_tmp270 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp208), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
          bytetest_84_88 = simd_and(bytetest_80_8f, r800_ffff_tmp270);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp271 = simd_and(r800_ffff_tmp244, bytetest_84_88);
          carryQ.cq[92] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp271, carryQ.get_carry_in(92), r800_ffff_tmp272));
          r800_ffff_tmp273 = simd_and(r800_ffff_tmp272, bytetest_80_bf);
          bytetest_83 = simd_and(bytetest_80_8f, tmp36);
          r800_ffff_tmp274 = simd_and(tmp118, tmp78);
          bytetest_bd_bf = simd_and(r800_ffff_tmp274, tmp5);
          r800_ffff_tmp275 = simd_and(r800_ffff_tmp265, bytetest_bd_bf);
          r800_ffff_tmp276 = simd_or(r800_ffff_tmp275, r800_ffff_tmp273);
          r800_ffff_tmp277 = simd_or(r800_ffff_tmp276, r800_ffff_tmp269);
          struct_Lo.cc = simd_or(r800_ffff_tmp277, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_89 = simd_and(bytetest_80_8f, tmp157);
          bytetest_8a_8d = simd_and(r800_ffff_tmp239, r800_ffff_tmp119);
          r800_ffff_tmp278 = simd_and(r800_ffff_tmp268, bytetest_8a_8d);
          struct_Lo.cc = simd_or(r800_ffff_tmp278, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_89 = simd_and(bytetest_80_8f, tmp157);
          bytetest_90_96 = simd_andc(r800_ffff_tmp117, tmp47);
          r800_ffff_tmp279 = simd_and(r800_ffff_tmp268, bytetest_90_96);
          struct_Lo.cc = simd_or(r800_ffff_tmp279, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_89 = simd_and(bytetest_80_8f, tmp157);
          bytetest_98_98 = simd_and(tmp94, tmp106);
          r800_ffff_tmp280 = simd_and(r800_ffff_tmp268, bytetest_98_98);
          struct_Lo.cc = simd_or(r800_ffff_tmp280, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_89 = simd_and(bytetest_80_8f, tmp157);
          bytetest_9a_9d = simd_and(r800_ffff_tmp73, r800_ffff_tmp119);
          r800_ffff_tmp281 = simd_and(r800_ffff_tmp268, bytetest_9a_9d);
          struct_Lo.cc = simd_or(r800_ffff_tmp281, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_8a = simd_and(bytetest_80_8f, tmp70);
          bytetest_80_88 = simd_andc(bytetest_80_8f, tmp38);
          r800_ffff_tmp282 = simd_and(r800_ffff_tmp244, bytetest_8a);
          carryQ.cq[93] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp282, carryQ.get_carry_in(93), r800_ffff_tmp283));
          r800_ffff_tmp284 = simd_and(r800_ffff_tmp283, bytetest_80_88);
          bytetest_89 = simd_and(bytetest_80_8f, tmp157);
          bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
          r800_ffff_tmp285 = simd_and(r800_ffff_tmp268, bytetest_a0_bf);
          r800_ffff_tmp286 = simd_or(r800_ffff_tmp285, r800_ffff_tmp284);
          struct_Lo.cc = simd_or(r800_ffff_tmp286, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_8a = simd_and(bytetest_80_8f, tmp70);
          bytetest_8a_8d = simd_and(r800_ffff_tmp239, r800_ffff_tmp119);
          r800_ffff_tmp287 = simd_and(r800_ffff_tmp283, bytetest_8a_8d);
          struct_Lo.cc = simd_or(r800_ffff_tmp287, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_8a = simd_and(bytetest_80_8f, tmp70);
          r800_ffff_tmp288 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp194), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
          bytetest_90_b0 = simd_and(bytetest_80_bf, r800_ffff_tmp288);
          r800_ffff_tmp289 = simd_and(r800_ffff_tmp283, bytetest_90_b0);
          struct_Lo.cc = simd_or(r800_ffff_tmp289, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_8a = simd_and(bytetest_80_8f, tmp70);
          bytetest_b2_b5 = simd_and(r800_ffff_tmp34, r800_ffff_tmp119);
          r800_ffff_tmp290 = simd_and(r800_ffff_tmp283, bytetest_b2_b5);
          struct_Lo.cc = simd_or(r800_ffff_tmp290, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_8a = simd_and(bytetest_80_8f, tmp70);
          bytetest_b8_be = simd_andc(tmp184, tmp47);
          r800_ffff_tmp291 = simd_and(r800_ffff_tmp283, bytetest_b8_be);
          struct_Lo.cc = simd_or(r800_ffff_tmp291, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_8b = simd_and(bytetest_80_8f, tmp129);
          bytetest_80_80 = simd_andc(bytetest_80_8f, tmp6);
          r800_ffff_tmp292 = simd_and(r800_ffff_tmp244, bytetest_8b);
          carryQ.cq[94] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp292, carryQ.get_carry_in(94), r800_ffff_tmp293));
          r800_ffff_tmp294 = simd_and(r800_ffff_tmp293, bytetest_80_80);
          struct_Lo.cc = simd_or(r800_ffff_tmp294, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_8b = simd_and(bytetest_80_8f, tmp129);
          bytetest_82_85 = simd_and(bytetest_80_87, r800_ffff_tmp119);
          r800_ffff_tmp295 = simd_and(r800_ffff_tmp293, bytetest_82_85);
          struct_Lo.cc = simd_or(r800_ffff_tmp295, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_8b = simd_and(bytetest_80_8f, tmp129);
          r800_ffff_tmp296 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp178), simd_andc(basis_bits.bit_4, basis_bits.bit_3));
          bytetest_88_96 = simd_and(tmp142, r800_ffff_tmp296);
          r800_ffff_tmp297 = simd_and(r800_ffff_tmp293, bytetest_88_96);
          struct_Lo.cc = simd_or(r800_ffff_tmp297, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_8c = simd_and(bytetest_80_8f, tmp123);
          bytetest_80_90 = simd_andc(tmp142, r800_ffff_tmp193);
          r800_ffff_tmp298 = simd_and(r800_ffff_tmp244, bytetest_8c);
          carryQ.cq[95] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp298, carryQ.get_carry_in(95), r800_ffff_tmp299));
          r800_ffff_tmp300 = simd_and(r800_ffff_tmp299, bytetest_80_90);
          bytetest_8b = simd_and(bytetest_80_8f, tmp129);
          r800_ffff_tmp301 = simd_or(basis_bits.bit_2, tmp14);
          bytetest_98_bf = simd_and(bytetest_80_bf, r800_ffff_tmp301);
          r800_ffff_tmp302 = simd_and(r800_ffff_tmp293, bytetest_98_bf);
          r800_ffff_tmp303 = simd_or(r800_ffff_tmp302, r800_ffff_tmp300);
          struct_Lo.cc = simd_or(r800_ffff_tmp303, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_8c = simd_and(bytetest_80_8f, tmp123);
          bytetest_92_95 = simd_and(r800_ffff_tmp117, r800_ffff_tmp119);
          r800_ffff_tmp304 = simd_and(r800_ffff_tmp299, bytetest_92_95);
          struct_Lo.cc = simd_or(r800_ffff_tmp304, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_8d = simd_and(bytetest_80_8f, tmp79);
          bytetest_80_9a = simd_andc(tmp142, tmp206);
          r800_ffff_tmp305 = simd_and(r800_ffff_tmp244, bytetest_8d);
          carryQ.cq[96] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp305, carryQ.get_carry_in(96), r800_ffff_tmp306));
          r800_ffff_tmp307 = simd_and(r800_ffff_tmp306, bytetest_80_9a);
          bytetest_8c = simd_and(bytetest_80_8f, tmp123);
          bytetest_98_bf = simd_and(bytetest_80_bf, r800_ffff_tmp301);
          r800_ffff_tmp308 = simd_and(r800_ffff_tmp299, bytetest_98_bf);
          r800_ffff_tmp309 = simd_or(r800_ffff_tmp308, r800_ffff_tmp307);
          struct_Lo.cc = simd_or(r800_ffff_tmp309, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_8e = simd_and(bytetest_80_8f, tmp136);
          bytetest_80_8f = simd_andc(bytetest_80_bf, tmp12);
          r800_ffff_tmp310 = simd_and(r800_ffff_tmp244, bytetest_8e);
          carryQ.cq[97] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp310, carryQ.get_carry_in(97), r800_ffff_tmp311));
          r800_ffff_tmp312 = simd_and(r800_ffff_tmp311, bytetest_80_8f);
          struct_Lo.cc = simd_or(r800_ffff_tmp312, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_8f = simd_and(bytetest_80_8f, tmp80);
          bytetest_80_b4 = simd_andc(bytetest_80_bf, tmp218);
          r800_ffff_tmp313 = simd_and(r800_ffff_tmp244, bytetest_8f);
          carryQ.cq[98] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp313, carryQ.get_carry_in(98), r800_ffff_tmp314));
          r800_ffff_tmp315 = simd_and(r800_ffff_tmp314, bytetest_80_b4);
          bytetest_8e = simd_and(bytetest_80_8f, tmp136);
          bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
          r800_ffff_tmp316 = simd_and(r800_ffff_tmp311, bytetest_a0_bf);
          r800_ffff_tmp317 = simd_or(r800_ffff_tmp316, r800_ffff_tmp315);
          struct_Lo.cc = simd_or(r800_ffff_tmp317, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_99 = simd_and(tmp94, tmp157);
          r800_ffff_tmp318 = simd_and(basis_bits.bit_2, r800_ffff_tmp235);
          bytetest_80_ac = simd_andc(bytetest_80_bf, r800_ffff_tmp318);
          r800_ffff_tmp319 = simd_and(r800_ffff_tmp244, bytetest_99);
          carryQ.cq[99] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp319, carryQ.get_carry_in(99), r800_ffff_tmp320));
          r800_ffff_tmp321 = simd_and(r800_ffff_tmp320, bytetest_80_ac);
          r800_ffff_tmp322 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp208), simd_andc(tmp37, basis_bits.bit_4));
          bytetest_91_98 = simd_and(tmp94, r800_ffff_tmp322);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp323 = simd_and(r800_ffff_tmp244, bytetest_91_98);
          carryQ.cq[100] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp323, carryQ.get_carry_in(100), r800_ffff_tmp324));
          r800_ffff_tmp325 = simd_and(r800_ffff_tmp324, bytetest_80_bf);
          bytetest_90 = simd_andc(tmp94, tmp6);
          r800_ffff_tmp326 = simd_or(basis_bits.bit_2, r800_ffff_tmp195);
          bytetest_81_bf = simd_and(bytetest_80_bf, r800_ffff_tmp326);
          r800_ffff_tmp327 = simd_and(r800_ffff_tmp244, bytetest_90);
          carryQ.cq[101] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp327, carryQ.get_carry_in(101), r800_ffff_tmp328));
          r800_ffff_tmp329 = simd_and(r800_ffff_tmp328, bytetest_81_bf);
          r800_ffff_tmp330 = simd_or(r800_ffff_tmp329, r800_ffff_tmp325);
          r800_ffff_tmp331 = simd_or(r800_ffff_tmp330, r800_ffff_tmp321);
          struct_Lo.cc = simd_or(r800_ffff_tmp331, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_99 = simd_and(tmp94, tmp157);
          bytetest_af_bf = simd_and(bytetest_a0_bf, tmp81);
          r800_ffff_tmp332 = simd_and(r800_ffff_tmp320, bytetest_af_bf);
          struct_Lo.cc = simd_or(r800_ffff_tmp332, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9a = simd_and(tmp94, tmp70);
          r800_ffff_tmp333 = simd_not(tmp72);
          r800_ffff_tmp334 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp333), simd_andc(tmp6, basis_bits.bit_3));
          bytetest_81_9a = simd_and(tmp142, r800_ffff_tmp334);
          r800_ffff_tmp335 = simd_and(r800_ffff_tmp244, bytetest_9a);
          carryQ.cq[102] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp335, carryQ.get_carry_in(102), r800_ffff_tmp336));
          r800_ffff_tmp337 = simd_and(r800_ffff_tmp336, bytetest_81_9a);
          struct_Lo.cc = simd_or(r800_ffff_tmp337, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9b = simd_and(tmp94, tmp129);
          bytetest_80_aa = simd_andc(bytetest_80_bf, tmp74);
          r800_ffff_tmp338 = simd_and(r800_ffff_tmp244, bytetest_9b);
          carryQ.cq[103] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp338, carryQ.get_carry_in(103), r800_ffff_tmp339));
          r800_ffff_tmp340 = simd_and(r800_ffff_tmp339, bytetest_80_aa);
          bytetest_9a = simd_and(tmp94, tmp70);
          bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
          r800_ffff_tmp341 = simd_and(r800_ffff_tmp336, bytetest_a0_bf);
          r800_ffff_tmp342 = simd_or(r800_ffff_tmp341, r800_ffff_tmp340);
          struct_Lo.cc = simd_or(r800_ffff_tmp342, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9c = simd_and(tmp94, tmp123);
          bytetest_80_8c = simd_andc(bytetest_80_8f, tmp89);
          r800_ffff_tmp343 = simd_and(r800_ffff_tmp244, bytetest_9c);
          carryQ.cq[104] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp343, carryQ.get_carry_in(104), r800_ffff_tmp344));
          r800_ffff_tmp345 = simd_and(r800_ffff_tmp344, bytetest_80_8c);
          struct_Lo.cc = simd_or(r800_ffff_tmp345, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9c = simd_and(tmp94, tmp123);
          r800_ffff_tmp346 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp85), simd_andc(tmp234, basis_bits.bit_3));
          bytetest_8e_91 = simd_and(tmp142, r800_ffff_tmp346);
          r800_ffff_tmp347 = simd_and(r800_ffff_tmp344, bytetest_8e_91);
          struct_Lo.cc = simd_or(r800_ffff_tmp347, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9c = simd_and(tmp94, tmp123);
          bytetest_a0_b1 = simd_andc(bytetest_a0_bf, r800_ffff_tmp139);
          r800_ffff_tmp348 = simd_and(r800_ffff_tmp344, bytetest_a0_b1);
          struct_Lo.cc = simd_or(r800_ffff_tmp348, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9d = simd_and(tmp94, tmp79);
          bytetest_80_91 = simd_andc(tmp142, r800_ffff_tmp139);
          r800_ffff_tmp349 = simd_and(r800_ffff_tmp244, bytetest_9d);
          carryQ.cq[105] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp349, carryQ.get_carry_in(105), r800_ffff_tmp350));
          r800_ffff_tmp351 = simd_and(r800_ffff_tmp350, bytetest_80_91);
          struct_Lo.cc = simd_or(r800_ffff_tmp351, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9d = simd_and(tmp94, tmp79);
          bytetest_a0_ac = simd_andc(tmp105, tmp89);
          r800_ffff_tmp352 = simd_and(r800_ffff_tmp350, bytetest_a0_ac);
          struct_Lo.cc = simd_or(r800_ffff_tmp352, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9d = simd_and(tmp94, tmp79);
          bytetest_ae_b0 = simd_and(bytetest_a0_bf, r800_ffff_tmp115);
          r800_ffff_tmp353 = simd_and(r800_ffff_tmp350, bytetest_ae_b0);
          struct_Lo.cc = simd_or(r800_ffff_tmp353, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9e = simd_and(tmp94, tmp136);
          r800_ffff_tmp354 = simd_and(basis_bits.bit_3, tmp4);
          r800_ffff_tmp355 = simd_and(basis_bits.bit_2, r800_ffff_tmp354);
          bytetest_80_b3 = simd_andc(bytetest_80_bf, r800_ffff_tmp355);
          r800_ffff_tmp356 = simd_and(r800_ffff_tmp244, bytetest_9e);
          carryQ.cq[106] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp356, carryQ.get_carry_in(106), r800_ffff_tmp357));
          r800_ffff_tmp358 = simd_and(r800_ffff_tmp357, bytetest_80_b3);
          struct_Lo.cc = simd_or(r800_ffff_tmp358, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9f = simd_and(tmp94, tmp80);
          bytetest_9c_9c = simd_and(tmp94, tmp123);
          r800_ffff_tmp359 = simd_and(r800_ffff_tmp244, bytetest_9f);
          carryQ.cq[107] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp359, carryQ.get_carry_in(107), r800_ffff_tmp360));
          r800_ffff_tmp361 = simd_and(r800_ffff_tmp360, bytetest_9c_9c);
          struct_Lo.cc = simd_or(r800_ffff_tmp361, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a1 = simd_and(tmp105, tmp11);
          bytetest_80_82 = simd_andc(bytetest_80_83, tmp16);
          r800_ffff_tmp362 = simd_and(r800_ffff_tmp244, bytetest_a1);
          carryQ.cq[108] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp362, carryQ.get_carry_in(108), r800_ffff_tmp363));
          r800_ffff_tmp364 = simd_and(r800_ffff_tmp363, bytetest_80_82);
          bytetest_a0 = simd_andc(tmp105, tmp6);
          bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
          r800_ffff_tmp365 = simd_and(r800_ffff_tmp244, bytetest_a0);
          carryQ.cq[109] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp365, carryQ.get_carry_in(109), r800_ffff_tmp366));
          r800_ffff_tmp367 = simd_and(r800_ffff_tmp366, bytetest_a0_bf);
          r800_ffff_tmp368 = simd_or(r800_ffff_tmp367, r800_ffff_tmp364);
          struct_Lo.cc = simd_or(r800_ffff_tmp368, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a1 = simd_and(tmp105, tmp11);
          r800_ffff_tmp369 = simd_or(simd_and(basis_bits.bit_2, tmp15), simd_andc(r800_ffff_tmp21, basis_bits.bit_2));
          bytetest_84_b7 = simd_and(bytetest_80_bf, r800_ffff_tmp369);
          r800_ffff_tmp370 = simd_and(r800_ffff_tmp363, bytetest_84_b7);
          struct_Lo.cc = simd_or(r800_ffff_tmp370, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a2 = simd_and(tmp105, tmp30);
          r800_ffff_tmp371 = simd_and(basis_bits.bit_2, tmp39);
          bytetest_80_a8 = simd_andc(bytetest_80_bf, r800_ffff_tmp371);
          r800_ffff_tmp372 = simd_and(r800_ffff_tmp244, bytetest_a2);
          carryQ.cq[110] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp372, carryQ.get_carry_in(110), r800_ffff_tmp373));
          r800_ffff_tmp374 = simd_and(r800_ffff_tmp373, bytetest_80_a8);
          struct_Lo.cc = simd_or(r800_ffff_tmp374, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a2 = simd_and(tmp105, tmp30);
          bytetest_aa_aa = simd_and(tmp105, tmp70);
          r800_ffff_tmp375 = simd_and(r800_ffff_tmp373, bytetest_aa_aa);
          struct_Lo.cc = simd_or(r800_ffff_tmp375, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a3 = simd_and(tmp105, tmp36);
          r800_ffff_tmp376 = simd_and(basis_bits.bit_2, r800_ffff_tmp4);
          bytetest_80_b5 = simd_andc(bytetest_80_bf, r800_ffff_tmp376);
          r800_ffff_tmp377 = simd_and(r800_ffff_tmp244, bytetest_a3);
          carryQ.cq[111] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp377, carryQ.get_carry_in(111), r800_ffff_tmp378));
          r800_ffff_tmp379 = simd_and(r800_ffff_tmp378, bytetest_80_b5);
          bytetest_a2 = simd_and(tmp105, tmp30);
          bytetest_b0_bf = simd_and(bytetest_80_bf, tmp2);
          r800_ffff_tmp380 = simd_and(r800_ffff_tmp373, bytetest_b0_bf);
          r800_ffff_tmp381 = simd_or(r800_ffff_tmp380, r800_ffff_tmp379);
          struct_Lo.cc = simd_or(r800_ffff_tmp381, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a4 = simd_and(tmp105, tmp46);
          r800_ffff_tmp382 = simd_and(basis_bits.bit_3, r800_ffff_tmp220);
          bytetest_80_9c = simd_andc(tmp142, r800_ffff_tmp382);
          r800_ffff_tmp383 = simd_and(r800_ffff_tmp244, bytetest_a4);
          carryQ.cq[112] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp383, carryQ.get_carry_in(112), r800_ffff_tmp384));
          r800_ffff_tmp385 = simd_and(r800_ffff_tmp384, bytetest_80_9c);
          struct_Lo.cc = simd_or(r800_ffff_tmp385, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a5 = simd_and(tmp105, r800_ffff_tmp27);
          r800_ffff_tmp386 = simd_or(basis_bits.bit_3, tmp234);
          r800_ffff_tmp387 = simd_not(r800_ffff_tmp386);
          r800_ffff_tmp388 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp387), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
          bytetest_90_ad = simd_and(bytetest_80_bf, r800_ffff_tmp388);
          r800_ffff_tmp389 = simd_and(r800_ffff_tmp244, bytetest_a5);
          carryQ.cq[113] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp389, carryQ.get_carry_in(113), r800_ffff_tmp390));
          r800_ffff_tmp391 = simd_and(r800_ffff_tmp390, bytetest_90_ad);
          struct_Lo.cc = simd_or(r800_ffff_tmp391, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a5 = simd_and(tmp105, r800_ffff_tmp27);
          r800_ffff_tmp392 = simd_andc(bytetest_b0_bf, basis_bits.bit_4);
          bytetest_b0_b4 = simd_andc(r800_ffff_tmp392, tmp88);
          r800_ffff_tmp393 = simd_and(r800_ffff_tmp390, bytetest_b0_b4);
          struct_Lo.cc = simd_or(r800_ffff_tmp393, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a6 = simd_and(tmp105, tmp55);
          r800_ffff_tmp394 = simd_or(basis_bits.bit_3, tmp78);
          r800_ffff_tmp395 = simd_and(basis_bits.bit_2, r800_ffff_tmp394);
          bytetest_80_ab = simd_andc(bytetest_80_bf, r800_ffff_tmp395);
          r800_ffff_tmp396 = simd_and(r800_ffff_tmp244, bytetest_a6);
          carryQ.cq[114] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp396, carryQ.get_carry_in(114), r800_ffff_tmp397));
          r800_ffff_tmp398 = simd_and(r800_ffff_tmp397, bytetest_80_ab);
          struct_Lo.cc = simd_or(r800_ffff_tmp398, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a7 = simd_and(tmp105, tmp62);
          bytetest_81_87 = simd_and(bytetest_80_87, tmp37);
          r800_ffff_tmp399 = simd_and(r800_ffff_tmp244, bytetest_a7);
          carryQ.cq[115] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp399, carryQ.get_carry_in(115), r800_ffff_tmp400));
          r800_ffff_tmp401 = simd_and(r800_ffff_tmp400, bytetest_81_87);
          struct_Lo.cc = simd_or(r800_ffff_tmp401, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a8 = simd_and(tmp105, tmp106);
          bytetest_80_96 = simd_andc(tmp142, tmp200);
          r800_ffff_tmp402 = simd_and(r800_ffff_tmp244, bytetest_a8);
          carryQ.cq[116] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp402, carryQ.get_carry_in(116), r800_ffff_tmp403));
          r800_ffff_tmp404 = simd_and(r800_ffff_tmp403, bytetest_80_96);
          struct_Lo.cc = simd_or(r800_ffff_tmp404, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a9 = simd_and(tmp105, tmp157);
          bytetest_80_94 = simd_andc(tmp142, tmp217);
          r800_ffff_tmp405 = simd_and(r800_ffff_tmp244, bytetest_a9);
          carryQ.cq[117] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp405, carryQ.get_carry_in(117), r800_ffff_tmp406));
          r800_ffff_tmp407 = simd_and(r800_ffff_tmp406, bytetest_80_94);
          bytetest_a8 = simd_and(tmp105, tmp106);
          bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
          r800_ffff_tmp408 = simd_and(r800_ffff_tmp403, bytetest_a0_bf);
          r800_ffff_tmp409 = simd_or(r800_ffff_tmp408, r800_ffff_tmp407);
          struct_Lo.cc = simd_or(r800_ffff_tmp409, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_ac = simd_and(tmp105, tmp123);
          r800_ffff_tmp410 = simd_not(r800_ffff_tmp354);
          r800_ffff_tmp411 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp410), simd_andc(tmp144, basis_bits.bit_2));
          bytetest_85_b3 = simd_and(bytetest_80_bf, r800_ffff_tmp411);
          r800_ffff_tmp412 = simd_and(r800_ffff_tmp244, bytetest_ac);
          carryQ.cq[118] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp412, carryQ.get_carry_in(118), r800_ffff_tmp413));
          r800_ffff_tmp414 = simd_and(r800_ffff_tmp413, bytetest_85_b3);
          struct_Lo.cc = simd_or(r800_ffff_tmp414, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_ad = simd_and(tmp105, tmp79);
          r800_ffff_tmp415 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp186), simd_andc(tmp88, basis_bits.bit_4));
          bytetest_85_8b = simd_and(bytetest_80_8f, r800_ffff_tmp415);
          r800_ffff_tmp416 = simd_and(r800_ffff_tmp244, bytetest_ad);
          carryQ.cq[119] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp416, carryQ.get_carry_in(119), r800_ffff_tmp417));
          r800_ffff_tmp418 = simd_and(r800_ffff_tmp417, bytetest_85_8b);
          struct_Lo.cc = simd_or(r800_ffff_tmp418, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_ae = simd_and(tmp105, tmp136);
          r800_ffff_tmp419 = simd_not(r800_ffff_tmp195);
          r800_ffff_tmp420 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp419), simd_andc(tmp18, basis_bits.bit_2));
          bytetest_83_a0 = simd_and(bytetest_80_bf, r800_ffff_tmp420);
          r800_ffff_tmp421 = simd_and(r800_ffff_tmp244, bytetest_ae);
          carryQ.cq[120] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp421, carryQ.get_carry_in(120), r800_ffff_tmp422));
          r800_ffff_tmp423 = simd_and(r800_ffff_tmp422, bytetest_83_a0);
          struct_Lo.cc = simd_or(r800_ffff_tmp423, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_ae = simd_and(tmp105, tmp136);
          bytetest_ae_af = simd_and(tmp105, tmp234);
          r800_ffff_tmp424 = simd_and(r800_ffff_tmp422, bytetest_ae_af);
          struct_Lo.cc = simd_or(r800_ffff_tmp424, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_af = simd_and(tmp105, tmp80);
          r800_ffff_tmp425 = simd_or(basis_bits.bit_3, r800_ffff_tmp3);
          r800_ffff_tmp426 = simd_and(basis_bits.bit_2, r800_ffff_tmp425);
          bytetest_80_a5 = simd_andc(bytetest_80_bf, r800_ffff_tmp426);
          r800_ffff_tmp427 = simd_and(r800_ffff_tmp244, bytetest_af);
          carryQ.cq[121] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp427, carryQ.get_carry_in(121), r800_ffff_tmp428));
          r800_ffff_tmp429 = simd_and(r800_ffff_tmp428, bytetest_80_a5);
          bytetest_ae = simd_and(tmp105, tmp136);
          r800_ffff_tmp430 = simd_and(bytetest_b0_bf, basis_bits.bit_4);
          bytetest_ba_bf = simd_and(r800_ffff_tmp430, tmp187);
          r800_ffff_tmp431 = simd_and(r800_ffff_tmp422, bytetest_ba_bf);
          r800_ffff_tmp432 = simd_or(r800_ffff_tmp431, r800_ffff_tmp429);
          struct_Lo.cc = simd_or(r800_ffff_tmp432, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_b0 = simd_andc(bytetest_b0_bf, tmp6);
          r800_ffff_tmp433 = simd_and(basis_bits.bit_2, r800_ffff_tmp21);
          bytetest_80_a3 = simd_andc(bytetest_80_bf, r800_ffff_tmp433);
          r800_ffff_tmp434 = simd_and(r800_ffff_tmp244, bytetest_b0);
          carryQ.cq[122] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp434, carryQ.get_carry_in(122), r800_ffff_tmp435));
          r800_ffff_tmp436 = simd_and(r800_ffff_tmp435, bytetest_80_a3);
          struct_Lo.cc = simd_or(r800_ffff_tmp436, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_b1 = simd_and(bytetest_b0_bf, tmp11);
          bytetest_8d_8f = simd_and(tmp166, tmp5);
          r800_ffff_tmp437 = simd_and(r800_ffff_tmp244, bytetest_b1);
          carryQ.cq[123] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp437, carryQ.get_carry_in(123), r800_ffff_tmp438));
          r800_ffff_tmp439 = simd_and(r800_ffff_tmp438, bytetest_8d_8f);
          struct_Lo.cc = simd_or(r800_ffff_tmp439, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_b1 = simd_and(bytetest_b0_bf, tmp11);
          r800_ffff_tmp440 = simd_or(simd_and(basis_bits.bit_2, tmp15), simd_andc(r800_ffff_tmp19, basis_bits.bit_2));
          bytetest_9a_b7 = simd_and(bytetest_80_bf, r800_ffff_tmp440);
          r800_ffff_tmp441 = simd_and(r800_ffff_tmp438, bytetest_9a_b7);
          struct_Lo.cc = simd_or(r800_ffff_tmp441, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp36);
          r800_ffff_tmp442 = simd_and(tmp105, basis_bits.bit_4);
          bytetest_a9_ac = simd_and(r800_ffff_tmp442, tmp65);
          r800_ffff_tmp443 = simd_and(r800_ffff_tmp244, bytetest_b3);
          carryQ.cq[124] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp443, carryQ.get_carry_in(124), r800_ffff_tmp444));
          r800_ffff_tmp445 = simd_and(r800_ffff_tmp444, bytetest_a9_ac);
          struct_Lo.cc = simd_or(r800_ffff_tmp445, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp36);
          bytetest_ae_b1 = simd_and(bytetest_a0_bf, r800_ffff_tmp346);
          r800_ffff_tmp446 = simd_and(r800_ffff_tmp444, bytetest_ae_b1);
          struct_Lo.cc = simd_or(r800_ffff_tmp446, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp36);
          r800_ffff_tmp447 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_b5_b6 = simd_and(r800_ffff_tmp447, tmp148);
          r800_ffff_tmp448 = simd_and(r800_ffff_tmp444, bytetest_b5_b6);
          struct_Lo.cc = simd_or(r800_ffff_tmp448, struct_Lo.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp30);
          bytetest_84 = simd_and(bytetest_80_8f, tmp46);
          r800_ffff_tmp449 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp208), simd_andc(tmp88, basis_bits.bit_4));
          bytetest_b5_b8 = simd_and(bytetest_b0_bf, r800_ffff_tmp449);
          r800_ffff_tmp450 = simd_and(tmp21, bytetest_e2);
          carryQ.cq[125] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp450, carryQ.get_carry_in(125), r800_ffff_tmp451));
          r800_ffff_tmp452 = simd_and(r800_ffff_tmp451, bytetest_84);
          carryQ.cq[126] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp452, carryQ.get_carry_in(126), r800_ffff_tmp453));
          r800_ffff_tmp454 = simd_and(r800_ffff_tmp453, bytetest_b5_b8);
          struct_Lo.cc = simd_or(r800_ffff_tmp454, struct_Lo.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp30);
          bytetest_b5 = simd_and(bytetest_b0_bf, r800_ffff_tmp27);
          r800_ffff_tmp455 = simd_or(basis_bits.bit_3, basis_bits.bit_4);
          r800_ffff_tmp456 = simd_and(basis_bits.bit_2, r800_ffff_tmp455);
          bytetest_80_a7 = simd_andc(bytetest_80_bf, r800_ffff_tmp456);
          r800_ffff_tmp457 = simd_and(r800_ffff_tmp451, bytetest_b5);
          carryQ.cq[127] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp457, carryQ.get_carry_in(127), r800_ffff_tmp458));
          r800_ffff_tmp459 = simd_and(r800_ffff_tmp458, bytetest_80_a7);
          bytetest_b4 = simd_and(bytetest_b0_bf, tmp46);
          bytetest_b0_bf = simd_and(bytetest_80_bf, tmp2);
          r800_ffff_tmp460 = simd_and(r800_ffff_tmp451, bytetest_b4);
          carryQ.cq[128] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp460, carryQ.get_carry_in(128), r800_ffff_tmp461));
          r800_ffff_tmp462 = simd_and(r800_ffff_tmp461, bytetest_b0_bf);
          r800_ffff_tmp463 = simd_or(r800_ffff_tmp462, r800_ffff_tmp459);
          struct_Lo.cc = simd_or(r800_ffff_tmp463, struct_Lo.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp30);
          bytetest_b6 = simd_and(bytetest_b0_bf, tmp55);
          bytetest_80_96 = simd_andc(tmp142, tmp200);
          r800_ffff_tmp464 = simd_and(r800_ffff_tmp451, bytetest_b6);
          carryQ.cq[129] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp464, carryQ.get_carry_in(129), r800_ffff_tmp465));
          r800_ffff_tmp466 = simd_and(r800_ffff_tmp465, bytetest_80_96);
          struct_Lo.cc = simd_or(r800_ffff_tmp466, struct_Lo.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp30);
          bytetest_b6 = simd_and(bytetest_b0_bf, tmp55);
          bytetest_a0_a6 = simd_andc(bytetest_a0_a7, tmp47);
          r800_ffff_tmp467 = simd_and(r800_ffff_tmp465, bytetest_a0_a6);
          struct_Lo.cc = simd_or(r800_ffff_tmp467, struct_Lo.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp30);
          bytetest_b6 = simd_and(bytetest_b0_bf, tmp55);
          bytetest_a8_ae = simd_andc(r800_ffff_tmp442, tmp47);
          r800_ffff_tmp468 = simd_and(r800_ffff_tmp465, bytetest_a8_ae);
          struct_Lo.cc = simd_or(r800_ffff_tmp468, struct_Lo.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp30);
          bytetest_b6 = simd_and(bytetest_b0_bf, tmp55);
          bytetest_b0_b6 = simd_andc(r800_ffff_tmp392, tmp47);
          r800_ffff_tmp469 = simd_and(r800_ffff_tmp465, bytetest_b0_b6);
          struct_Lo.cc = simd_or(r800_ffff_tmp469, struct_Lo.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp30);
          bytetest_b6 = simd_and(bytetest_b0_bf, tmp55);
          bytetest_b8_be = simd_andc(r800_ffff_tmp430, tmp47);
          r800_ffff_tmp470 = simd_and(r800_ffff_tmp465, bytetest_b8_be);
          struct_Lo.cc = simd_or(r800_ffff_tmp470, struct_Lo.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp30);
          bytetest_b7 = simd_and(bytetest_b0_bf, tmp62);
          bytetest_80_86 = simd_andc(bytetest_80_87, tmp47);
          r800_ffff_tmp471 = simd_and(r800_ffff_tmp451, bytetest_b7);
          carryQ.cq[130] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp471, carryQ.get_carry_in(130), r800_ffff_tmp472));
          r800_ffff_tmp473 = simd_and(r800_ffff_tmp472, bytetest_80_86);
          struct_Lo.cc = simd_or(r800_ffff_tmp473, struct_Lo.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp30);
          bytetest_b7 = simd_and(bytetest_b0_bf, tmp62);
          bytetest_88_8e = simd_andc(r800_ffff_tmp239, tmp47);
          r800_ffff_tmp474 = simd_and(r800_ffff_tmp472, bytetest_88_8e);
          struct_Lo.cc = simd_or(r800_ffff_tmp474, struct_Lo.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp30);
          bytetest_b7 = simd_and(bytetest_b0_bf, tmp62);
          bytetest_90_96 = simd_andc(r800_ffff_tmp117, tmp47);
          r800_ffff_tmp475 = simd_and(r800_ffff_tmp472, bytetest_90_96);
          struct_Lo.cc = simd_or(r800_ffff_tmp475, struct_Lo.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp30);
          bytetest_b7 = simd_and(bytetest_b0_bf, tmp62);
          bytetest_98_9e = simd_andc(r800_ffff_tmp73, tmp47);
          r800_ffff_tmp476 = simd_and(r800_ffff_tmp472, bytetest_98_9e);
          struct_Lo.cc = simd_or(r800_ffff_tmp476, struct_Lo.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp36);
          bytetest_80 = simd_andc(bytetest_80_8f, tmp6);
          bytetest_86_86 = simd_and(bytetest_80_8f, tmp55);
          r800_ffff_tmp477 = simd_and(tmp21, bytetest_e3);
          carryQ.cq[131] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp477, carryQ.get_carry_in(131), r800_ffff_tmp478));
          r800_ffff_tmp479 = simd_and(r800_ffff_tmp478, bytetest_80);
          carryQ.cq[132] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp479, carryQ.get_carry_in(132), r800_ffff_tmp480));
          r800_ffff_tmp481 = simd_and(r800_ffff_tmp480, bytetest_86_86);
          struct_Lo.cc = simd_or(r800_ffff_tmp481, struct_Lo.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp36);
          bytetest_80 = simd_andc(bytetest_80_8f, tmp6);
          bytetest_bc_bc = simd_and(bytetest_b0_bf, tmp123);
          r800_ffff_tmp482 = simd_and(r800_ffff_tmp480, bytetest_bc_bc);
          struct_Lo.cc = simd_or(r800_ffff_tmp482, struct_Lo.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp36);
          bytetest_82 = simd_and(bytetest_80_8f, tmp30);
          bytetest_80_96 = simd_andc(tmp142, tmp200);
          r800_ffff_tmp483 = simd_and(r800_ffff_tmp478, bytetest_82);
          carryQ.cq[133] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp483, carryQ.get_carry_in(133), r800_ffff_tmp484));
          r800_ffff_tmp485 = simd_and(r800_ffff_tmp484, bytetest_80_96);
          bytetest_81 = simd_and(bytetest_80_8f, tmp11);
          bytetest_81_bf = simd_and(bytetest_80_bf, r800_ffff_tmp326);
          r800_ffff_tmp486 = simd_and(r800_ffff_tmp478, bytetest_81);
          carryQ.cq[134] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp486, carryQ.get_carry_in(134), r800_ffff_tmp487));
          r800_ffff_tmp488 = simd_and(r800_ffff_tmp487, bytetest_81_bf);
          r800_ffff_tmp489 = simd_or(r800_ffff_tmp488, r800_ffff_tmp485);
          struct_Lo.cc = simd_or(r800_ffff_tmp489, struct_Lo.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp36);
          bytetest_82 = simd_and(bytetest_80_8f, tmp30);
          bytetest_9f_9f = simd_and(tmp94, tmp80);
          r800_ffff_tmp490 = simd_and(r800_ffff_tmp484, bytetest_9f_9f);
          struct_Lo.cc = simd_or(r800_ffff_tmp490, struct_Lo.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp36);
          bytetest_83 = simd_and(bytetest_80_8f, tmp36);
          r800_ffff_tmp491 = simd_and(basis_bits.bit_2, tmp206);
          bytetest_80_ba = simd_andc(bytetest_80_bf, r800_ffff_tmp491);
          r800_ffff_tmp492 = simd_and(r800_ffff_tmp478, bytetest_83);
          carryQ.cq[135] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp492, carryQ.get_carry_in(135), r800_ffff_tmp493));
          r800_ffff_tmp494 = simd_and(r800_ffff_tmp493, bytetest_80_ba);
          bytetest_82 = simd_and(bytetest_80_8f, tmp30);
          bytetest_a1_bf = simd_and(bytetest_a0_bf, r800_ffff_tmp195);
          r800_ffff_tmp495 = simd_and(r800_ffff_tmp484, bytetest_a1_bf);
          r800_ffff_tmp496 = simd_or(r800_ffff_tmp495, r800_ffff_tmp494);
          struct_Lo.cc = simd_or(r800_ffff_tmp496, struct_Lo.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp36);
          bytetest_83 = simd_and(bytetest_80_8f, tmp36);
          bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp80);
          r800_ffff_tmp497 = simd_and(r800_ffff_tmp493, bytetest_bf_bf);
          struct_Lo.cc = simd_or(r800_ffff_tmp497, struct_Lo.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp36);
          bytetest_84 = simd_and(bytetest_80_8f, tmp46);
          r800_ffff_tmp498 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp387), simd_andc(tmp144, basis_bits.bit_2));
          bytetest_85_ad = simd_and(bytetest_80_bf, r800_ffff_tmp498);
          r800_ffff_tmp499 = simd_and(r800_ffff_tmp478, bytetest_84);
          carryQ.cq[136] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp499, carryQ.get_carry_in(136), r800_ffff_tmp500));
          r800_ffff_tmp501 = simd_and(r800_ffff_tmp500, bytetest_85_ad);
          struct_Lo.cc = simd_or(r800_ffff_tmp501, struct_Lo.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp36);
          bytetest_86 = simd_and(bytetest_80_8f, tmp55);
          r800_ffff_tmp502 = simd_and(basis_bits.bit_4, tmp47);
          bytetest_80_8e = simd_andc(bytetest_80_8f, r800_ffff_tmp502);
          r800_ffff_tmp503 = simd_and(r800_ffff_tmp478, bytetest_86);
          carryQ.cq[137] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp503, carryQ.get_carry_in(137), r800_ffff_tmp504));
          r800_ffff_tmp505 = simd_and(r800_ffff_tmp504, bytetest_80_8e);
          bytetest_85 = simd_and(bytetest_80_8f, r800_ffff_tmp27);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp506 = simd_and(r800_ffff_tmp478, bytetest_85);
          carryQ.cq[138] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp506, carryQ.get_carry_in(138), r800_ffff_tmp507));
          r800_ffff_tmp508 = simd_and(r800_ffff_tmp507, bytetest_80_bf);
          bytetest_84 = simd_and(bytetest_80_8f, tmp46);
          r800_ffff_tmp509 = simd_or(basis_bits.bit_4, tmp37);
          bytetest_b1_bf = simd_and(bytetest_b0_bf, r800_ffff_tmp509);
          r800_ffff_tmp510 = simd_and(r800_ffff_tmp500, bytetest_b1_bf);
          r800_ffff_tmp511 = simd_or(r800_ffff_tmp510, r800_ffff_tmp508);
          r800_ffff_tmp512 = simd_or(r800_ffff_tmp511, r800_ffff_tmp505);
          struct_Lo.cc = simd_or(r800_ffff_tmp512, struct_Lo.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp36);
          bytetest_86 = simd_and(bytetest_80_8f, tmp55);
          bytetest_a0_ba = simd_andc(bytetest_a0_bf, tmp206);
          r800_ffff_tmp513 = simd_and(r800_ffff_tmp504, bytetest_a0_ba);
          struct_Lo.cc = simd_or(r800_ffff_tmp513, struct_Lo.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp36);
          bytetest_87 = simd_and(bytetest_80_8f, tmp62);
          bytetest_b0_bf = simd_and(bytetest_80_bf, tmp2);
          r800_ffff_tmp514 = simd_and(r800_ffff_tmp478, bytetest_87);
          carryQ.cq[139] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp514, carryQ.get_carry_in(139), r800_ffff_tmp515));
          r800_ffff_tmp516 = simd_and(r800_ffff_tmp515, bytetest_b0_bf);
          struct_Lo.cc = simd_or(r800_ffff_tmp516, struct_Lo.cc);
          bytetest_e4 = simd_and(r800_ffff_tmp1, tmp46);
          bytetest_b6 = simd_and(bytetest_b0_bf, tmp55);
          bytetest_80_b5 = simd_andc(bytetest_80_bf, r800_ffff_tmp376);
          r800_ffff_tmp517 = simd_and(tmp21, bytetest_e4);
          carryQ.cq[140] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp517, carryQ.get_carry_in(140), r800_ffff_tmp518));
          r800_ffff_tmp519 = simd_and(r800_ffff_tmp518, bytetest_b6);
          carryQ.cq[141] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp519, carryQ.get_carry_in(141), r800_ffff_tmp520));
          r800_ffff_tmp521 = simd_and(r800_ffff_tmp520, bytetest_80_b5);
          bytetest_80_b5 = simd_andc(bytetest_80_bf, r800_ffff_tmp376);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp522 = simd_and(r800_ffff_tmp518, bytetest_80_b5);
          carryQ.cq[142] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp522, carryQ.get_carry_in(142), r800_ffff_tmp523));
          r800_ffff_tmp524 = simd_and(r800_ffff_tmp523, bytetest_80_bf);
          r800_ffff_tmp525 = simd_or(r800_ffff_tmp524, r800_ffff_tmp521);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp36);
          bytetest_90_bf = simd_and(bytetest_80_bf, tmp12);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp526 = simd_and(r800_ffff_tmp478, bytetest_90_bf);
          carryQ.cq[143] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp526, carryQ.get_carry_in(143), r800_ffff_tmp527));
          r800_ffff_tmp528 = simd_and(r800_ffff_tmp527, bytetest_80_bf);
          r800_ffff_tmp529 = simd_or(r800_ffff_tmp528, r800_ffff_tmp525);
          struct_Lo.cc = simd_or(r800_ffff_tmp529, struct_Lo.cc);
          bytetest_e9 = simd_and(r800_ffff_tmp1, tmp157);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp80);
          bytetest_80_8c = simd_andc(bytetest_80_8f, tmp89);
          r800_ffff_tmp530 = simd_and(tmp21, bytetest_e9);
          carryQ.cq[144] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp530, carryQ.get_carry_in(144), r800_ffff_tmp531));
          r800_ffff_tmp532 = simd_and(r800_ffff_tmp531, bytetest_bf);
          carryQ.cq[145] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp532, carryQ.get_carry_in(145), r800_ffff_tmp533));
          r800_ffff_tmp534 = simd_and(r800_ffff_tmp533, bytetest_80_8c);
          r800_ffff_tmp535 = simd_and(basis_bits.bit_2, r800_ffff_tmp57);
          bytetest_80_be = simd_andc(bytetest_80_bf, r800_ffff_tmp535);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp536 = simd_and(r800_ffff_tmp531, bytetest_80_be);
          carryQ.cq[146] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp536, carryQ.get_carry_in(146), r800_ffff_tmp537));
          r800_ffff_tmp538 = simd_and(r800_ffff_tmp537, bytetest_80_bf);
          r800_ffff_tmp539 = simd_or(r800_ffff_tmp538, r800_ffff_tmp534);
          bytetest_e5_e8 = simd_and(r800_ffff_tmp1, r800_ffff_tmp449);
          bytetest_e4 = simd_and(r800_ffff_tmp1, tmp46);
          bytetest_b8_bf = simd_and(bytetest_b0_bf, basis_bits.bit_4);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp540 = simd_and(r800_ffff_tmp518, bytetest_b8_bf);
          carryQ.cq[147] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp540, carryQ.get_carry_in(147), r800_ffff_tmp541));
          r800_ffff_tmp542 = simd_and(r800_ffff_tmp541, bytetest_80_bf);
          r800_ffff_tmp543 = simd_or(r800_ffff_tmp542, bytetest_e5_e8);
          r800_ffff_tmp544 = simd_or(r800_ffff_tmp543, r800_ffff_tmp539);
          struct_Lo.cc = simd_or(r800_ffff_tmp544, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_80 = simd_andc(bytetest_80_8f, tmp6);
          bytetest_80_94 = simd_andc(tmp142, tmp217);
          r800_ffff_tmp545 = simd_and(tmp21, bytetest_ea);
          carryQ.cq[148] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp545, carryQ.get_carry_in(148), r800_ffff_tmp546));
          r800_ffff_tmp547 = simd_and(r800_ffff_tmp546, bytetest_80);
          carryQ.cq[149] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp547, carryQ.get_carry_in(149), r800_ffff_tmp548));
          r800_ffff_tmp549 = simd_and(r800_ffff_tmp548, bytetest_80_94);
          struct_Lo.cc = simd_or(r800_ffff_tmp549, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_92 = simd_and(tmp94, tmp30);
          bytetest_80_8c = simd_andc(bytetest_80_8f, tmp89);
          r800_ffff_tmp550 = simd_and(r800_ffff_tmp546, bytetest_92);
          carryQ.cq[150] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp550, carryQ.get_carry_in(150), r800_ffff_tmp551));
          r800_ffff_tmp552 = simd_and(r800_ffff_tmp551, bytetest_80_8c);
          r800_ffff_tmp553 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp85), simd_andc(tmp6, basis_bits.bit_3));
          bytetest_81_91 = simd_and(tmp142, r800_ffff_tmp553);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp554 = simd_and(r800_ffff_tmp546, bytetest_81_91);
          carryQ.cq[151] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp554, carryQ.get_carry_in(151), r800_ffff_tmp555));
          r800_ffff_tmp556 = simd_and(r800_ffff_tmp555, bytetest_80_bf);
          bytetest_80 = simd_andc(bytetest_80_8f, tmp6);
          r800_ffff_tmp557 = simd_or(basis_bits.bit_2, r800_ffff_tmp4);
          bytetest_96_bf = simd_and(bytetest_80_bf, r800_ffff_tmp557);
          r800_ffff_tmp558 = simd_and(r800_ffff_tmp548, bytetest_96_bf);
          r800_ffff_tmp559 = simd_or(r800_ffff_tmp558, r800_ffff_tmp556);
          r800_ffff_tmp560 = simd_or(r800_ffff_tmp559, r800_ffff_tmp552);
          struct_Lo.cc = simd_or(r800_ffff_tmp560, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_93 = simd_and(tmp94, tmp36);
          r800_ffff_tmp561 = simd_or(simd_and(basis_bits.bit_2, tmp15), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
          bytetest_90_b7 = simd_and(bytetest_80_bf, r800_ffff_tmp561);
          r800_ffff_tmp562 = simd_and(r800_ffff_tmp546, bytetest_93);
          carryQ.cq[152] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp562, carryQ.get_carry_in(152), r800_ffff_tmp563));
          r800_ffff_tmp564 = simd_and(r800_ffff_tmp563, bytetest_90_b7);
          struct_Lo.cc = simd_or(r800_ffff_tmp564, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_98 = simd_and(tmp94, tmp106);
          bytetest_80_8b = simd_andc(bytetest_80_8f, tmp78);
          r800_ffff_tmp565 = simd_and(r800_ffff_tmp546, bytetest_98);
          carryQ.cq[153] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp565, carryQ.get_carry_in(153), r800_ffff_tmp566));
          r800_ffff_tmp567 = simd_and(r800_ffff_tmp566, bytetest_80_8b);
          bytetest_94_97 = simd_and(tmp94, tmp45);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp568 = simd_and(r800_ffff_tmp546, bytetest_94_97);
          carryQ.cq[154] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp568, carryQ.get_carry_in(154), r800_ffff_tmp569));
          r800_ffff_tmp570 = simd_and(r800_ffff_tmp569, bytetest_80_bf);
          r800_ffff_tmp571 = simd_or(r800_ffff_tmp570, r800_ffff_tmp567);
          struct_Lo.cc = simd_or(r800_ffff_tmp571, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_98 = simd_and(tmp94, tmp106);
          bytetest_90_9f = simd_and(bytetest_80_bf, tmp8);
          r800_ffff_tmp572 = simd_and(r800_ffff_tmp566, bytetest_90_9f);
          struct_Lo.cc = simd_or(r800_ffff_tmp572, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_98 = simd_and(bytetest_90_9f, tmp106);
          bytetest_aa_ab = simd_and(tmp105, r800_ffff_tmp218);
          r800_ffff_tmp573 = simd_and(r800_ffff_tmp566, bytetest_aa_ab);
          struct_Lo.cc = simd_or(r800_ffff_tmp573, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_99 = simd_and(bytetest_90_9f, tmp157);
          bytetest_ae_ae = simd_and(tmp105, tmp136);
          r800_ffff_tmp574 = simd_and(r800_ffff_tmp546, bytetest_99);
          carryQ.cq[155] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp574, carryQ.get_carry_in(155), r800_ffff_tmp575));
          r800_ffff_tmp576 = simd_and(r800_ffff_tmp575, bytetest_ae_ae);
          struct_Lo.cc = simd_or(r800_ffff_tmp576, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_9b = simd_and(bytetest_90_9f, tmp129);
          bytetest_80_a5 = simd_andc(bytetest_80_bf, r800_ffff_tmp426);
          r800_ffff_tmp577 = simd_and(r800_ffff_tmp546, bytetest_9b);
          carryQ.cq[156] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp577, carryQ.get_carry_in(156), r800_ffff_tmp578));
          r800_ffff_tmp579 = simd_and(r800_ffff_tmp578, bytetest_80_a5);
          bytetest_9a = simd_and(bytetest_90_9f, tmp70);
          bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
          r800_ffff_tmp580 = simd_and(r800_ffff_tmp546, bytetest_9a);
          carryQ.cq[157] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp580, carryQ.get_carry_in(157), r800_ffff_tmp581));
          r800_ffff_tmp582 = simd_and(r800_ffff_tmp581, bytetest_a0_bf);
          r800_ffff_tmp583 = simd_or(r800_ffff_tmp582, r800_ffff_tmp579);
          struct_Lo.cc = simd_or(r800_ffff_tmp583, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_a0 = simd_andc(tmp105, tmp6);
          bytetest_80_81 = simd_andc(bytetest_80_8f, tmp130);
          r800_ffff_tmp584 = simd_and(r800_ffff_tmp546, bytetest_a0);
          carryQ.cq[158] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp584, carryQ.get_carry_in(158), r800_ffff_tmp585));
          r800_ffff_tmp586 = simd_and(r800_ffff_tmp585, bytetest_80_81);
          bytetest_9f = simd_and(bytetest_90_9f, tmp80);
          bytetest_bb_bf = simd_and(bytetest_b8_bf, tmp71);
          r800_ffff_tmp587 = simd_and(r800_ffff_tmp546, bytetest_9f);
          carryQ.cq[159] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp587, carryQ.get_carry_in(159), r800_ffff_tmp588));
          r800_ffff_tmp589 = simd_and(r800_ffff_tmp588, bytetest_bb_bf);
          r800_ffff_tmp590 = simd_or(r800_ffff_tmp589, r800_ffff_tmp586);
          struct_Lo.cc = simd_or(r800_ffff_tmp590, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_a0 = simd_andc(tmp105, tmp6);
          r800_ffff_tmp591 = simd_or(simd_and(basis_bits.bit_5, r800_ffff_tmp118), simd_andc(tmp16, basis_bits.bit_5));
          bytetest_83_85 = simd_and(bytetest_80_87, r800_ffff_tmp591);
          r800_ffff_tmp592 = simd_and(r800_ffff_tmp585, bytetest_83_85);
          struct_Lo.cc = simd_or(r800_ffff_tmp592, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_a0 = simd_andc(tmp105, tmp6);
          bytetest_87_8a = simd_and(bytetest_80_8f, tmp179);
          r800_ffff_tmp593 = simd_and(r800_ffff_tmp585, bytetest_87_8a);
          struct_Lo.cc = simd_or(r800_ffff_tmp593, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_a0 = simd_andc(tmp105, tmp6);
          r800_ffff_tmp594 = simd_not(tmp18);
          r800_ffff_tmp595 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp594), simd_andc(r800_ffff_tmp394, basis_bits.bit_2));
          bytetest_8c_a2 = simd_and(bytetest_80_bf, r800_ffff_tmp595);
          r800_ffff_tmp596 = simd_and(r800_ffff_tmp585, bytetest_8c_a2);
          struct_Lo.cc = simd_or(r800_ffff_tmp596, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_a1 = simd_and(tmp105, tmp11);
          bytetest_80_b3 = simd_andc(bytetest_80_bf, r800_ffff_tmp355);
          r800_ffff_tmp597 = simd_and(r800_ffff_tmp546, bytetest_a1);
          carryQ.cq[160] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp597, carryQ.get_carry_in(160), r800_ffff_tmp598));
          r800_ffff_tmp599 = simd_and(r800_ffff_tmp598, bytetest_80_b3);
          struct_Lo.cc = simd_or(r800_ffff_tmp599, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_a2 = simd_and(tmp105, tmp30);
          r800_ffff_tmp600 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp410), simd_andc(tmp254, basis_bits.bit_2));
          bytetest_82_b3 = simd_and(bytetest_80_bf, r800_ffff_tmp600);
          r800_ffff_tmp601 = simd_and(r800_ffff_tmp546, bytetest_a2);
          carryQ.cq[161] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp601, carryQ.get_carry_in(161), r800_ffff_tmp602));
          r800_ffff_tmp603 = simd_and(r800_ffff_tmp602, bytetest_82_b3);
          struct_Lo.cc = simd_or(r800_ffff_tmp603, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_a3 = simd_and(tmp105, tmp36);
          bytetest_b2_b7 = simd_and(r800_ffff_tmp392, tmp187);
          r800_ffff_tmp604 = simd_and(r800_ffff_tmp546, bytetest_a3);
          carryQ.cq[162] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp604, carryQ.get_carry_in(162), r800_ffff_tmp605));
          r800_ffff_tmp606 = simd_and(r800_ffff_tmp605, bytetest_b2_b7);
          struct_Lo.cc = simd_or(r800_ffff_tmp606, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_a3 = simd_and(tmp105, tmp36);
          bytetest_bb_bb = simd_and(bytetest_b0_bf, tmp129);
          r800_ffff_tmp607 = simd_and(r800_ffff_tmp605, bytetest_bb_bb);
          struct_Lo.cc = simd_or(r800_ffff_tmp607, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_a4 = simd_and(tmp105, tmp46);
          r800_ffff_tmp608 = simd_not(r800_ffff_tmp425);
          r800_ffff_tmp609 = simd_or(basis_bits.bit_3, tmp188);
          r800_ffff_tmp610 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp608), simd_andc(r800_ffff_tmp609, basis_bits.bit_2));
          bytetest_8a_a5 = simd_and(bytetest_80_bf, r800_ffff_tmp610);
          r800_ffff_tmp611 = simd_and(r800_ffff_tmp546, bytetest_a4);
          carryQ.cq[163] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp611, carryQ.get_carry_in(163), r800_ffff_tmp612));
          r800_ffff_tmp613 = simd_and(r800_ffff_tmp612, bytetest_8a_a5);
          struct_Lo.cc = simd_or(r800_ffff_tmp613, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_a5 = simd_and(tmp105, r800_ffff_tmp27);
          bytetest_80_86 = simd_andc(bytetest_80_87, tmp47);
          r800_ffff_tmp614 = simd_and(r800_ffff_tmp546, bytetest_a5);
          carryQ.cq[164] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp614, carryQ.get_carry_in(164), r800_ffff_tmp615));
          r800_ffff_tmp616 = simd_and(r800_ffff_tmp615, bytetest_80_86);
          bytetest_a4 = simd_and(tmp105, tmp46);
          bytetest_b0_bf = simd_and(bytetest_80_bf, tmp2);
          r800_ffff_tmp617 = simd_and(r800_ffff_tmp612, bytetest_b0_bf);
          r800_ffff_tmp618 = simd_or(r800_ffff_tmp617, r800_ffff_tmp616);
          struct_Lo.cc = simd_or(r800_ffff_tmp618, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_a5 = simd_and(tmp105, r800_ffff_tmp27);
          bytetest_a0_bc = simd_andc(bytetest_a0_bf, r800_ffff_tmp382);
          r800_ffff_tmp619 = simd_and(r800_ffff_tmp615, bytetest_a0_bc);
          struct_Lo.cc = simd_or(r800_ffff_tmp619, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_a6 = simd_and(tmp105, tmp55);
          r800_ffff_tmp620 = simd_or(simd_and(basis_bits.bit_2, tmp57), simd_andc(r800_ffff_tmp21, basis_bits.bit_2));
          bytetest_84_b2 = simd_and(bytetest_80_bf, r800_ffff_tmp620);
          r800_ffff_tmp621 = simd_and(r800_ffff_tmp546, bytetest_a6);
          carryQ.cq[165] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp621, carryQ.get_carry_in(165), r800_ffff_tmp622));
          r800_ffff_tmp623 = simd_and(r800_ffff_tmp622, bytetest_84_b2);
          struct_Lo.cc = simd_or(r800_ffff_tmp623, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_a8 = simd_and(tmp105, tmp106);
          bytetest_80_a8 = simd_andc(bytetest_80_bf, r800_ffff_tmp371);
          r800_ffff_tmp624 = simd_and(r800_ffff_tmp546, bytetest_a8);
          carryQ.cq[166] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp624, carryQ.get_carry_in(166), r800_ffff_tmp625));
          r800_ffff_tmp626 = simd_and(r800_ffff_tmp625, bytetest_80_a8);
          struct_Lo.cc = simd_or(r800_ffff_tmp626, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_a9 = simd_and(tmp105, tmp157);
          bytetest_80_82 = simd_andc(bytetest_80_83, tmp16);
          r800_ffff_tmp627 = simd_and(r800_ffff_tmp546, bytetest_a9);
          carryQ.cq[167] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp627, carryQ.get_carry_in(167), r800_ffff_tmp628));
          r800_ffff_tmp629 = simd_and(r800_ffff_tmp628, bytetest_80_82);
          struct_Lo.cc = simd_or(r800_ffff_tmp629, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_a9 = simd_and(tmp105, tmp157);
          r800_ffff_tmp630 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp186), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
          bytetest_84_8b = simd_and(bytetest_80_8f, r800_ffff_tmp630);
          r800_ffff_tmp631 = simd_and(r800_ffff_tmp628, bytetest_84_8b);
          struct_Lo.cc = simd_or(r800_ffff_tmp631, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_a9 = simd_and(tmp105, tmp157);
          bytetest_a0_af = simd_and(bytetest_80_bf, tmp104);
          r800_ffff_tmp632 = simd_and(r800_ffff_tmp628, bytetest_a0_af);
          struct_Lo.cc = simd_or(r800_ffff_tmp632, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_a9 = simd_and(bytetest_a0_af, tmp157);
          r800_ffff_tmp633 = simd_not(tmp16);
          r800_ffff_tmp634 = simd_or(simd_and(basis_bits.bit_5, r800_ffff_tmp633), simd_andc(tmp5, basis_bits.bit_5));
          bytetest_b1_b6 = simd_and(r800_ffff_tmp392, r800_ffff_tmp634);
          r800_ffff_tmp635 = simd_and(r800_ffff_tmp628, bytetest_b1_b6);
          struct_Lo.cc = simd_or(r800_ffff_tmp635, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_a9 = simd_and(bytetest_a0_af, tmp157);
          bytetest_ba_ba = simd_and(bytetest_b0_bf, tmp70);
          r800_ffff_tmp636 = simd_and(r800_ffff_tmp628, bytetest_ba_ba);
          struct_Lo.cc = simd_or(r800_ffff_tmp636, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_aa = simd_and(bytetest_a0_af, tmp70);
          bytetest_80_af = simd_andc(bytetest_80_bf, tmp2);
          r800_ffff_tmp637 = simd_and(r800_ffff_tmp546, bytetest_aa);
          carryQ.cq[168] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp637, carryQ.get_carry_in(168), r800_ffff_tmp638));
          r800_ffff_tmp639 = simd_and(r800_ffff_tmp638, bytetest_80_af);
          struct_Lo.cc = simd_or(r800_ffff_tmp639, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_aa = simd_and(bytetest_a0_af, tmp70);
          bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp11);
          r800_ffff_tmp640 = simd_and(r800_ffff_tmp638, bytetest_b1_b1);
          struct_Lo.cc = simd_or(r800_ffff_tmp640, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_aa = simd_and(bytetest_a0_af, tmp70);
          bytetest_b5_b6 = simd_and(r800_ffff_tmp447, tmp148);
          r800_ffff_tmp641 = simd_and(r800_ffff_tmp638, bytetest_b5_b6);
          struct_Lo.cc = simd_or(r800_ffff_tmp641, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_aa = simd_and(bytetest_a0_af, tmp70);
          r800_ffff_tmp642 = simd_or(simd_and(basis_bits.bit_5, r800_ffff_tmp118), simd_andc(tmp5, basis_bits.bit_5));
          bytetest_b9_bd = simd_and(bytetest_b8_bf, r800_ffff_tmp642);
          r800_ffff_tmp643 = simd_and(r800_ffff_tmp638, bytetest_b9_bd);
          struct_Lo.cc = simd_or(r800_ffff_tmp643, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_ab = simd_and(bytetest_a0_af, tmp129);
          bytetest_80_80 = simd_andc(bytetest_80_8f, tmp6);
          r800_ffff_tmp644 = simd_and(r800_ffff_tmp546, bytetest_ab);
          carryQ.cq[169] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp644, carryQ.get_carry_in(169), r800_ffff_tmp645));
          r800_ffff_tmp646 = simd_and(r800_ffff_tmp645, bytetest_80_80);
          struct_Lo.cc = simd_or(r800_ffff_tmp646, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_ab = simd_and(bytetest_a0_af, tmp129);
          bytetest_82_82 = simd_and(bytetest_80_8f, tmp30);
          r800_ffff_tmp647 = simd_and(r800_ffff_tmp645, bytetest_82_82);
          struct_Lo.cc = simd_or(r800_ffff_tmp647, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_ab = simd_and(bytetest_a0_af, tmp129);
          r800_ffff_tmp648 = simd_and(bytetest_90_9f, basis_bits.bit_4);
          bytetest_9b_9c = simd_and(r800_ffff_tmp648, r800_ffff_tmp125);
          r800_ffff_tmp649 = simd_and(r800_ffff_tmp645, bytetest_9b_9c);
          struct_Lo.cc = simd_or(r800_ffff_tmp649, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_ab = simd_and(bytetest_a0_af, tmp129);
          bytetest_a0_aa = simd_andc(bytetest_a0_af, tmp72);
          r800_ffff_tmp650 = simd_and(r800_ffff_tmp645, bytetest_a0_aa);
          struct_Lo.cc = simd_or(r800_ffff_tmp650, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_ab = simd_and(bytetest_a0_af, tmp129);
          bytetest_b2_b2 = simd_and(bytetest_b0_bf, tmp30);
          r800_ffff_tmp651 = simd_and(r800_ffff_tmp645, bytetest_b2_b2);
          struct_Lo.cc = simd_or(r800_ffff_tmp651, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_ac = simd_and(bytetest_a0_af, tmp123);
          bytetest_81_86 = simd_and(bytetest_80_87, r800_ffff_tmp634);
          r800_ffff_tmp652 = simd_and(r800_ffff_tmp546, bytetest_ac);
          carryQ.cq[170] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp652, carryQ.get_carry_in(170), r800_ffff_tmp653));
          r800_ffff_tmp654 = simd_and(r800_ffff_tmp653, bytetest_81_86);
          struct_Lo.cc = simd_or(r800_ffff_tmp654, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_ac = simd_and(bytetest_a0_af, tmp123);
          bytetest_89_8e = simd_and(r800_ffff_tmp239, r800_ffff_tmp634);
          r800_ffff_tmp655 = simd_and(r800_ffff_tmp653, bytetest_89_8e);
          struct_Lo.cc = simd_or(r800_ffff_tmp655, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_ac = simd_and(bytetest_a0_af, tmp123);
          r800_ffff_tmp656 = simd_andc(bytetest_90_9f, basis_bits.bit_4);
          bytetest_91_96 = simd_and(r800_ffff_tmp656, r800_ffff_tmp634);
          r800_ffff_tmp657 = simd_and(r800_ffff_tmp653, bytetest_91_96);
          struct_Lo.cc = simd_or(r800_ffff_tmp657, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_ac = simd_and(bytetest_a0_af, tmp123);
          r800_ffff_tmp658 = simd_andc(bytetest_a0_af, basis_bits.bit_4);
          bytetest_a0_a6 = simd_andc(r800_ffff_tmp658, tmp47);
          r800_ffff_tmp659 = simd_and(r800_ffff_tmp653, bytetest_a0_a6);
          struct_Lo.cc = simd_or(r800_ffff_tmp659, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_ac = simd_and(bytetest_a0_af, tmp123);
          r800_ffff_tmp660 = simd_and(bytetest_a0_af, basis_bits.bit_4);
          bytetest_a8_ae = simd_andc(r800_ffff_tmp660, tmp47);
          r800_ffff_tmp661 = simd_and(r800_ffff_tmp653, bytetest_a8_ae);
          struct_Lo.cc = simd_or(r800_ffff_tmp661, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_af = simd_and(bytetest_a0_af, tmp80);
          r800_ffff_tmp662 = simd_and(basis_bits.bit_2, tmp18);
          bytetest_80_a2 = simd_andc(bytetest_80_bf, r800_ffff_tmp662);
          r800_ffff_tmp663 = simd_and(r800_ffff_tmp546, bytetest_af);
          carryQ.cq[171] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp663, carryQ.get_carry_in(171), r800_ffff_tmp664));
          r800_ffff_tmp665 = simd_and(r800_ffff_tmp664, bytetest_80_a2);
          struct_Lo.cc = simd_or(r800_ffff_tmp665, struct_Lo.cc);
          bytetest_ed = simd_and(r800_ffff_tmp1, tmp79);
          bytetest_9e = simd_and(bytetest_90_9f, tmp136);
          bytetest_80_a3 = simd_andc(bytetest_80_bf, r800_ffff_tmp433);
          r800_ffff_tmp666 = simd_and(tmp21, bytetest_ed);
          carryQ.cq[172] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp666, carryQ.get_carry_in(172), r800_ffff_tmp667));
          r800_ffff_tmp668 = simd_and(r800_ffff_tmp667, bytetest_9e);
          carryQ.cq[173] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp668, carryQ.get_carry_in(173), r800_ffff_tmp669));
          r800_ffff_tmp670 = simd_and(r800_ffff_tmp669, bytetest_80_a3);
          bytetest_80_9d = simd_andc(tmp142, tmp235);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp671 = simd_and(r800_ffff_tmp667, bytetest_80_9d);
          carryQ.cq[174] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp671, carryQ.get_carry_in(174), r800_ffff_tmp672));
          r800_ffff_tmp673 = simd_and(r800_ffff_tmp672, bytetest_80_bf);
          r800_ffff_tmp674 = simd_or(r800_ffff_tmp673, r800_ffff_tmp670);
          r800_ffff_tmp675 = simd_and(r800_ffff_tmp1, basis_bits.bit_4);
          bytetest_eb_ec = simd_and(r800_ffff_tmp675, r800_ffff_tmp125);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_b0_bf = simd_and(bytetest_80_bf, tmp2);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp676 = simd_and(r800_ffff_tmp546, bytetest_b0_bf);
          carryQ.cq[175] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp676, carryQ.get_carry_in(175), r800_ffff_tmp677));
          r800_ffff_tmp678 = simd_and(r800_ffff_tmp677, bytetest_80_bf);
          r800_ffff_tmp679 = simd_or(r800_ffff_tmp678, bytetest_eb_ec);
          r800_ffff_tmp680 = simd_or(r800_ffff_tmp679, r800_ffff_tmp674);
          struct_Lo.cc = simd_or(r800_ffff_tmp680, struct_Lo.cc);
          bytetest_ed = simd_and(r800_ffff_tmp1, tmp79);
          bytetest_9f = simd_and(bytetest_90_9f, tmp80);
          bytetest_80_86 = simd_andc(bytetest_80_87, tmp47);
          r800_ffff_tmp681 = simd_and(r800_ffff_tmp667, bytetest_9f);
          carryQ.cq[176] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp681, carryQ.get_carry_in(176), r800_ffff_tmp682));
          r800_ffff_tmp683 = simd_and(r800_ffff_tmp682, bytetest_80_86);
          bytetest_9e = simd_and(bytetest_90_9f, tmp136);
          bytetest_b0_bf = simd_and(bytetest_80_bf, tmp2);
          r800_ffff_tmp684 = simd_and(r800_ffff_tmp669, bytetest_b0_bf);
          r800_ffff_tmp685 = simd_or(r800_ffff_tmp684, r800_ffff_tmp683);
          struct_Lo.cc = simd_or(r800_ffff_tmp685, struct_Lo.cc);
          bytetest_ed = simd_and(r800_ffff_tmp1, tmp79);
          bytetest_9f = simd_and(bytetest_90_9f, tmp80);
          r800_ffff_tmp686 = simd_not(tmp224);
          r800_ffff_tmp687 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp686), simd_andc(tmp73, basis_bits.bit_2));
          bytetest_8b_bb = simd_and(bytetest_80_bf, r800_ffff_tmp687);
          r800_ffff_tmp688 = simd_and(r800_ffff_tmp682, bytetest_8b_bb);
          struct_Lo.cc = simd_or(r800_ffff_tmp688, struct_Lo.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp80);
          bytetest_a9 = simd_and(bytetest_a0_af, tmp157);
          r800_ffff_tmp689 = simd_and(basis_bits.bit_2, r800_ffff_tmp386);
          bytetest_80_ad = simd_andc(bytetest_80_bf, r800_ffff_tmp689);
          r800_ffff_tmp690 = simd_and(tmp21, bytetest_ef);
          carryQ.cq[177] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp690, carryQ.get_carry_in(177), r800_ffff_tmp691));
          r800_ffff_tmp692 = simd_and(r800_ffff_tmp691, bytetest_a9);
          carryQ.cq[178] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp692, carryQ.get_carry_in(178), r800_ffff_tmp693));
          r800_ffff_tmp694 = simd_and(r800_ffff_tmp693, bytetest_80_ad);
          bytetest_a4_a8 = simd_and(bytetest_a0_af, r800_ffff_tmp270);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp695 = simd_and(r800_ffff_tmp691, bytetest_a4_a8);
          carryQ.cq[179] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp695, carryQ.get_carry_in(179), r800_ffff_tmp696));
          r800_ffff_tmp697 = simd_and(r800_ffff_tmp696, bytetest_80_bf);
          r800_ffff_tmp698 = simd_or(r800_ffff_tmp697, r800_ffff_tmp694);
          struct_Lo.cc = simd_or(r800_ffff_tmp698, struct_Lo.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp80);
          bytetest_ab = simd_and(bytetest_a0_af, tmp129);
          bytetest_80_99 = simd_andc(tmp142, r800_ffff_tmp19);
          r800_ffff_tmp699 = simd_and(r800_ffff_tmp691, bytetest_ab);
          carryQ.cq[180] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp699, carryQ.get_carry_in(180), r800_ffff_tmp700));
          r800_ffff_tmp701 = simd_and(r800_ffff_tmp700, bytetest_80_99);
          bytetest_aa = simd_and(bytetest_a0_af, tmp70);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp702 = simd_and(r800_ffff_tmp691, bytetest_aa);
          carryQ.cq[181] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp702, carryQ.get_carry_in(181), r800_ffff_tmp703));
          r800_ffff_tmp704 = simd_and(r800_ffff_tmp703, bytetest_80_bf);
          bytetest_a9 = simd_and(bytetest_a0_af, tmp157);
          bytetest_b0_bf = simd_and(bytetest_80_bf, tmp2);
          r800_ffff_tmp705 = simd_and(r800_ffff_tmp693, bytetest_b0_bf);
          r800_ffff_tmp706 = simd_or(r800_ffff_tmp705, r800_ffff_tmp704);
          r800_ffff_tmp707 = simd_or(r800_ffff_tmp706, r800_ffff_tmp701);
          struct_Lo.cc = simd_or(r800_ffff_tmp707, struct_Lo.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp80);
          bytetest_ac = simd_and(bytetest_a0_af, tmp123);
          bytetest_9d_9d = simd_and(bytetest_90_9f, tmp79);
          r800_ffff_tmp708 = simd_and(r800_ffff_tmp691, bytetest_ac);
          carryQ.cq[182] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp708, carryQ.get_carry_in(182), r800_ffff_tmp709));
          r800_ffff_tmp710 = simd_and(r800_ffff_tmp709, bytetest_9d_9d);
          struct_Lo.cc = simd_or(r800_ffff_tmp710, struct_Lo.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp80);
          bytetest_ac = simd_and(bytetest_a0_af, tmp123);
          r800_ffff_tmp711 = simd_or(simd_and(basis_bits.bit_2, tmp40), simd_andc(r800_ffff_tmp57, basis_bits.bit_2));
          bytetest_9f_a8 = simd_and(bytetest_80_bf, r800_ffff_tmp711);
          r800_ffff_tmp712 = simd_and(r800_ffff_tmp709, bytetest_9f_a8);
          struct_Lo.cc = simd_or(r800_ffff_tmp712, struct_Lo.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp80);
          bytetest_ac = simd_and(bytetest_a0_af, tmp123);
          r800_ffff_tmp713 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp178), simd_andc(tmp188, basis_bits.bit_3));
          bytetest_aa_b6 = simd_and(bytetest_a0_bf, r800_ffff_tmp713);
          r800_ffff_tmp714 = simd_and(r800_ffff_tmp709, bytetest_aa_b6);
          struct_Lo.cc = simd_or(r800_ffff_tmp714, struct_Lo.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp80);
          bytetest_ac = simd_and(bytetest_a0_af, tmp123);
          bytetest_b8_bc = simd_andc(bytetest_b8_bf, tmp88);
          r800_ffff_tmp715 = simd_and(r800_ffff_tmp709, bytetest_b8_bc);
          struct_Lo.cc = simd_or(r800_ffff_tmp715, struct_Lo.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp80);
          bytetest_ac = simd_and(bytetest_a0_af, tmp123);
          bytetest_be_be = simd_and(bytetest_b0_bf, tmp136);
          r800_ffff_tmp716 = simd_and(r800_ffff_tmp709, bytetest_be_be);
          struct_Lo.cc = simd_or(r800_ffff_tmp716, struct_Lo.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp80);
          bytetest_ad = simd_and(bytetest_a0_af, tmp79);
          bytetest_80_81 = simd_andc(bytetest_80_8f, tmp130);
          r800_ffff_tmp717 = simd_and(r800_ffff_tmp691, bytetest_ad);
          carryQ.cq[183] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp717, carryQ.get_carry_in(183), r800_ffff_tmp718));
          r800_ffff_tmp719 = simd_and(r800_ffff_tmp718, bytetest_80_81);
          struct_Lo.cc = simd_or(r800_ffff_tmp719, struct_Lo.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp80);
          bytetest_ad = simd_and(bytetest_a0_af, tmp79);
          bytetest_83_84 = simd_and(bytetest_80_87, r800_ffff_tmp125);
          r800_ffff_tmp720 = simd_and(r800_ffff_tmp718, bytetest_83_84);
          struct_Lo.cc = simd_or(r800_ffff_tmp720, struct_Lo.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp80);
          bytetest_ae = simd_and(bytetest_a0_af, tmp136);
          r800_ffff_tmp721 = simd_and(basis_bits.bit_2, r800_ffff_tmp139);
          bytetest_80_b1 = simd_andc(bytetest_80_bf, r800_ffff_tmp721);
          r800_ffff_tmp722 = simd_and(r800_ffff_tmp691, bytetest_ae);
          carryQ.cq[184] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp722, carryQ.get_carry_in(184), r800_ffff_tmp723));
          r800_ffff_tmp724 = simd_and(r800_ffff_tmp723, bytetest_80_b1);
          bytetest_ad = simd_and(bytetest_a0_af, tmp79);
          r800_ffff_tmp725 = simd_or(basis_bits.bit_2, r800_ffff_tmp425);
          bytetest_86_bf = simd_and(bytetest_80_bf, r800_ffff_tmp725);
          r800_ffff_tmp726 = simd_and(r800_ffff_tmp718, bytetest_86_bf);
          r800_ffff_tmp727 = simd_or(r800_ffff_tmp726, r800_ffff_tmp724);
          struct_Lo.cc = simd_or(r800_ffff_tmp727, struct_Lo.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp80);
          bytetest_b4 = simd_and(bytetest_b0_bf, tmp46);
          r800_ffff_tmp728 = simd_and(basis_bits.bit_2, tmp235);
          bytetest_80_bd = simd_andc(bytetest_80_bf, r800_ffff_tmp728);
          r800_ffff_tmp729 = simd_and(r800_ffff_tmp691, bytetest_b4);
          carryQ.cq[185] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp729, carryQ.get_carry_in(185), r800_ffff_tmp730));
          r800_ffff_tmp731 = simd_and(r800_ffff_tmp730, bytetest_80_bd);
          bytetest_b0_b3 = simd_andc(bytetest_b0_bf, tmp4);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp732 = simd_and(r800_ffff_tmp691, bytetest_b0_b3);
          carryQ.cq[186] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp732, carryQ.get_carry_in(186), r800_ffff_tmp733));
          r800_ffff_tmp734 = simd_and(r800_ffff_tmp733, bytetest_80_bf);
          bytetest_af = simd_and(bytetest_a0_af, tmp80);
          r800_ffff_tmp735 = simd_or(basis_bits.bit_2, tmp56);
          bytetest_93_bf = simd_and(bytetest_80_bf, r800_ffff_tmp735);
          r800_ffff_tmp736 = simd_and(r800_ffff_tmp691, bytetest_af);
          carryQ.cq[187] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp736, carryQ.get_carry_in(187), r800_ffff_tmp737));
          r800_ffff_tmp738 = simd_and(r800_ffff_tmp737, bytetest_93_bf);
          r800_ffff_tmp739 = simd_or(r800_ffff_tmp738, r800_ffff_tmp734);
          r800_ffff_tmp740 = simd_or(r800_ffff_tmp739, r800_ffff_tmp731);
          struct_Lo.cc = simd_or(r800_ffff_tmp740, struct_Lo.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp80);
          bytetest_b6 = simd_and(bytetest_b0_bf, tmp55);
          bytetest_80_8f = simd_andc(bytetest_80_bf, tmp12);
          r800_ffff_tmp741 = simd_and(r800_ffff_tmp691, bytetest_b6);
          carryQ.cq[188] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp741, carryQ.get_carry_in(188), r800_ffff_tmp742));
          r800_ffff_tmp743 = simd_and(r800_ffff_tmp742, bytetest_80_8f);
          bytetest_b5 = simd_and(bytetest_b0_bf, r800_ffff_tmp27);
          bytetest_90_bf = simd_and(bytetest_80_bf, tmp12);
          r800_ffff_tmp744 = simd_and(r800_ffff_tmp691, bytetest_b5);
          carryQ.cq[189] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp744, carryQ.get_carry_in(189), r800_ffff_tmp745));
          r800_ffff_tmp746 = simd_and(r800_ffff_tmp745, bytetest_90_bf);
          r800_ffff_tmp747 = simd_or(r800_ffff_tmp746, r800_ffff_tmp743);
          struct_Lo.cc = simd_or(r800_ffff_tmp747, struct_Lo.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp80);
          bytetest_b7 = simd_and(bytetest_b0_bf, tmp62);
          bytetest_80_87 = simd_andc(bytetest_80_8f, basis_bits.bit_4);
          r800_ffff_tmp748 = simd_and(r800_ffff_tmp691, bytetest_b7);
          carryQ.cq[190] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp748, carryQ.get_carry_in(190), r800_ffff_tmp749));
          r800_ffff_tmp750 = simd_and(r800_ffff_tmp749, bytetest_80_87);
          bytetest_b6 = simd_and(bytetest_b0_bf, tmp55);
          r800_ffff_tmp751 = simd_or(basis_bits.bit_2, r800_ffff_tmp139);
          bytetest_92_bf = simd_and(bytetest_80_bf, r800_ffff_tmp751);
          r800_ffff_tmp752 = simd_and(r800_ffff_tmp742, bytetest_92_bf);
          r800_ffff_tmp753 = simd_or(r800_ffff_tmp752, r800_ffff_tmp750);
          struct_Lo.cc = simd_or(r800_ffff_tmp753, struct_Lo.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp80);
          bytetest_b7 = simd_and(bytetest_b0_bf, tmp62);
          bytetest_b0_bb = simd_andc(bytetest_b0_bf, tmp78);
          r800_ffff_tmp754 = simd_and(r800_ffff_tmp749, bytetest_b0_bb);
          struct_Lo.cc = simd_or(r800_ffff_tmp754, struct_Lo.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp80);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp157);
          bytetest_b0_b4 = simd_andc(r800_ffff_tmp392, tmp88);
          r800_ffff_tmp755 = simd_and(r800_ffff_tmp691, bytetest_b9);
          carryQ.cq[191] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp755, carryQ.get_carry_in(191), r800_ffff_tmp756));
          r800_ffff_tmp757 = simd_and(r800_ffff_tmp756, bytetest_b0_b4);
          struct_Lo.cc = simd_or(r800_ffff_tmp757, struct_Lo.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp80);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp129);
          r800_ffff_tmp758 = simd_and(basis_bits.bit_2, r800_ffff_tmp382);
          bytetest_80_bc = simd_andc(bytetest_80_bf, r800_ffff_tmp758);
          r800_ffff_tmp759 = simd_and(r800_ffff_tmp691, bytetest_bb);
          carryQ.cq[192] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp759, carryQ.get_carry_in(192), r800_ffff_tmp760));
          r800_ffff_tmp761 = simd_and(r800_ffff_tmp760, bytetest_80_bc);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp70);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp762 = simd_and(r800_ffff_tmp691, bytetest_ba);
          carryQ.cq[193] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp762, carryQ.get_carry_in(193), r800_ffff_tmp763));
          r800_ffff_tmp764 = simd_and(r800_ffff_tmp763, bytetest_80_bf);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp157);
          bytetest_b6_bf = simd_and(bytetest_b0_bf, r800_ffff_tmp3);
          r800_ffff_tmp765 = simd_and(r800_ffff_tmp756, bytetest_b6_bf);
          r800_ffff_tmp766 = simd_or(r800_ffff_tmp765, r800_ffff_tmp764);
          r800_ffff_tmp767 = simd_or(r800_ffff_tmp766, r800_ffff_tmp761);
          struct_Lo.cc = simd_or(r800_ffff_tmp767, struct_Lo.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp80);
          bytetest_bd = simd_and(bytetest_b0_bf, tmp79);
          bytetest_a6_af = simd_and(bytetest_a0_af, r800_ffff_tmp3);
          r800_ffff_tmp768 = simd_and(r800_ffff_tmp691, bytetest_bd);
          carryQ.cq[194] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp768, carryQ.get_carry_in(194), r800_ffff_tmp769));
          r800_ffff_tmp770 = simd_and(r800_ffff_tmp769, bytetest_a6_af);
          struct_Lo.cc = simd_or(r800_ffff_tmp770, struct_Lo.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp80);
          bytetest_be = simd_and(bytetest_b0_bf, tmp136);
          bytetest_80_9d = simd_andc(tmp142, tmp235);
          r800_ffff_tmp771 = simd_and(r800_ffff_tmp691, bytetest_be);
          carryQ.cq[195] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp771, carryQ.get_carry_in(195), r800_ffff_tmp772));
          r800_ffff_tmp773 = simd_and(r800_ffff_tmp772, bytetest_80_9d);
          bytetest_bd = simd_and(bytetest_b0_bf, tmp79);
          bytetest_b1_bf = simd_and(bytetest_b0_bf, r800_ffff_tmp509);
          r800_ffff_tmp774 = simd_and(r800_ffff_tmp769, bytetest_b1_bf);
          r800_ffff_tmp775 = simd_or(r800_ffff_tmp774, r800_ffff_tmp773);
          struct_Lo.cc = simd_or(r800_ffff_tmp775, struct_Lo.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp80);
          bytetest_be = simd_and(bytetest_b0_bf, tmp136);
          bytetest_a0_be = simd_andc(bytetest_a0_bf, r800_ffff_tmp57);
          r800_ffff_tmp776 = simd_and(r800_ffff_tmp772, bytetest_a0_be);
          struct_Lo.cc = simd_or(r800_ffff_tmp776, struct_Lo.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp80);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp80);
          bytetest_82_87 = simd_and(bytetest_80_87, tmp187);
          r800_ffff_tmp777 = simd_and(r800_ffff_tmp691, bytetest_bf);
          carryQ.cq[196] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp777, carryQ.get_carry_in(196), r800_ffff_tmp778));
          r800_ffff_tmp779 = simd_and(r800_ffff_tmp778, bytetest_82_87);
          struct_Lo.cc = simd_or(r800_ffff_tmp779, struct_Lo.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp80);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp80);
          bytetest_8a_8f = simd_and(r800_ffff_tmp239, tmp187);
          r800_ffff_tmp780 = simd_and(r800_ffff_tmp778, bytetest_8a_8f);
          struct_Lo.cc = simd_or(r800_ffff_tmp780, struct_Lo.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp80);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp80);
          bytetest_92_97 = simd_and(r800_ffff_tmp656, tmp187);
          r800_ffff_tmp781 = simd_and(r800_ffff_tmp778, bytetest_92_97);
          struct_Lo.cc = simd_or(r800_ffff_tmp781, struct_Lo.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp80);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp80);
          bytetest_9a_9c = simd_and(r800_ffff_tmp648, r800_ffff_tmp78);
          r800_ffff_tmp782 = simd_and(r800_ffff_tmp778, bytetest_9a_9c);
          struct_Lo.cc = simd_or(r800_ffff_tmp782, struct_Lo.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(55, 142);
        }
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_90 = simd_andc(tmp94, tmp6);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp261 = simd_and(tmp23, bytetest_90);
        carryQ.cq[197] = carryout2carry(pablo_blk_Advance(tmp261, carryQ.get_carry_in(197), tmp262));
        tmp263 = simd_and(tmp262, bytetest_80_bf);
        if ((bitblock::any(tmp263) || carryQ.CarryTest(198, 23))) {
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_80 = simd_andc(bytetest_80_8f, tmp6);
          bytetest_80_8b = simd_andc(bytetest_80_8f, tmp78);
          r10000_10fff_tmp1 = simd_and(tmp23, bytetest_90);
          carryQ.cq[198] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp1, carryQ.get_carry_in(198), r10000_10fff_tmp2));
          r10000_10fff_tmp3 = simd_and(r10000_10fff_tmp2, bytetest_80);
          carryQ.cq[199] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp3, carryQ.get_carry_in(199), r10000_10fff_tmp4));
          r10000_10fff_tmp5 = simd_and(r10000_10fff_tmp4, bytetest_80_8b);
          struct_Lo.cc = simd_or(r10000_10fff_tmp5, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_80 = simd_andc(bytetest_80_8f, tmp6);
          r10000_10fff_tmp6 = simd_and(tmp78, tmp5);
          r10000_10fff_tmp7 = simd_or(basis_bits.bit_3, r10000_10fff_tmp6);
          r10000_10fff_tmp8 = simd_or(simd_and(basis_bits.bit_2, tmp50), simd_andc(r10000_10fff_tmp7, basis_bits.bit_2));
          bytetest_8d_a6 = simd_and(bytetest_80_bf, r10000_10fff_tmp8);
          r10000_10fff_tmp9 = simd_and(r10000_10fff_tmp4, bytetest_8d_a6);
          struct_Lo.cc = simd_or(r10000_10fff_tmp9, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_80 = simd_andc(bytetest_80_8f, tmp6);
          r10000_10fff_tmp10 = simd_not(tmp72);
          r10000_10fff_tmp11 = simd_or(simd_and(basis_bits.bit_3, r10000_10fff_tmp10), simd_andc(basis_bits.bit_4, basis_bits.bit_3));
          bytetest_a8_ba = simd_and(bytetest_a0_bf, r10000_10fff_tmp11);
          r10000_10fff_tmp12 = simd_and(r10000_10fff_tmp4, bytetest_a8_ba);
          struct_Lo.cc = simd_or(r10000_10fff_tmp12, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_80 = simd_andc(bytetest_80_8f, tmp6);
          r10000_10fff_tmp13 = simd_andc(tmp78, basis_bits.bit_6);
          bytetest_bc_bd = simd_and(tmp118, r10000_10fff_tmp13);
          r10000_10fff_tmp14 = simd_and(r10000_10fff_tmp4, bytetest_bc_bd);
          struct_Lo.cc = simd_or(r10000_10fff_tmp14, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_81 = simd_and(bytetest_80_8f, tmp11);
          r10000_10fff_tmp15 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
          r10000_10fff_tmp16 = simd_and(basis_bits.bit_4, r10000_10fff_tmp15);
          bytetest_80_8d = simd_andc(bytetest_80_8f, r10000_10fff_tmp16);
          r10000_10fff_tmp17 = simd_and(r10000_10fff_tmp2, bytetest_81);
          carryQ.cq[200] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp17, carryQ.get_carry_in(200), r10000_10fff_tmp18));
          r10000_10fff_tmp19 = simd_and(r10000_10fff_tmp18, bytetest_80_8d);
          bytetest_80 = simd_andc(bytetest_80_8f, tmp6);
          bytetest_bf_bf = simd_and(tmp118, tmp80);
          r10000_10fff_tmp20 = simd_and(r10000_10fff_tmp4, bytetest_bf_bf);
          r10000_10fff_tmp21 = simd_or(r10000_10fff_tmp20, r10000_10fff_tmp19);
          struct_Lo.cc = simd_or(r10000_10fff_tmp21, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_81 = simd_and(bytetest_80_8f, tmp11);
          bytetest_90_9d = simd_andc(tmp94, r10000_10fff_tmp16);
          r10000_10fff_tmp22 = simd_and(r10000_10fff_tmp18, bytetest_90_9d);
          struct_Lo.cc = simd_or(r10000_10fff_tmp22, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_83 = simd_and(bytetest_80_8f, tmp36);
          r10000_10fff_tmp23 = simd_and(basis_bits.bit_2, tmp206);
          bytetest_80_ba = simd_andc(bytetest_80_bf, r10000_10fff_tmp23);
          r10000_10fff_tmp24 = simd_and(r10000_10fff_tmp2, bytetest_83);
          carryQ.cq[201] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp24, carryQ.get_carry_in(201), r10000_10fff_tmp25));
          r10000_10fff_tmp26 = simd_and(r10000_10fff_tmp25, bytetest_80_ba);
          bytetest_82 = simd_and(bytetest_80_8f, tmp30);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r10000_10fff_tmp27 = simd_and(r10000_10fff_tmp2, bytetest_82);
          carryQ.cq[202] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp27, carryQ.get_carry_in(202), r10000_10fff_tmp28));
          r10000_10fff_tmp29 = simd_and(r10000_10fff_tmp28, bytetest_80_bf);
          r10000_10fff_tmp30 = simd_or(r10000_10fff_tmp29, r10000_10fff_tmp26);
          struct_Lo.cc = simd_or(r10000_10fff_tmp30, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_8a = simd_and(bytetest_80_8f, tmp70);
          r10000_10fff_tmp31 = simd_and(basis_bits.bit_3, r10000_10fff_tmp6);
          bytetest_80_9c = simd_andc(tmp142, r10000_10fff_tmp31);
          r10000_10fff_tmp32 = simd_and(r10000_10fff_tmp2, bytetest_8a);
          carryQ.cq[203] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp32, carryQ.get_carry_in(203), r10000_10fff_tmp33));
          r10000_10fff_tmp34 = simd_and(r10000_10fff_tmp33, bytetest_80_9c);
          struct_Lo.cc = simd_or(r10000_10fff_tmp34, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_8b = simd_and(bytetest_80_8f, tmp129);
          r10000_10fff_tmp35 = simd_and(basis_bits.bit_3, tmp6);
          bytetest_80_90 = simd_andc(tmp142, r10000_10fff_tmp35);
          r10000_10fff_tmp36 = simd_and(r10000_10fff_tmp2, bytetest_8b);
          carryQ.cq[204] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp36, carryQ.get_carry_in(204), r10000_10fff_tmp37));
          r10000_10fff_tmp38 = simd_and(r10000_10fff_tmp37, bytetest_80_90);
          bytetest_8a = simd_and(bytetest_80_8f, tmp70);
          bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
          r10000_10fff_tmp39 = simd_and(r10000_10fff_tmp33, bytetest_a0_bf);
          r10000_10fff_tmp40 = simd_or(r10000_10fff_tmp39, r10000_10fff_tmp38);
          struct_Lo.cc = simd_or(r10000_10fff_tmp40, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_8c = simd_and(bytetest_80_8f, tmp123);
          r10000_10fff_tmp41 = simd_and(basis_bits.bit_3, tmp80);
          bytetest_80_9e = simd_andc(tmp142, r10000_10fff_tmp41);
          r10000_10fff_tmp42 = simd_and(r10000_10fff_tmp2, bytetest_8c);
          carryQ.cq[205] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp42, carryQ.get_carry_in(205), r10000_10fff_tmp43));
          r10000_10fff_tmp44 = simd_and(r10000_10fff_tmp43, bytetest_80_9e);
          struct_Lo.cc = simd_or(r10000_10fff_tmp44, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_8d = simd_and(bytetest_80_8f, tmp79);
          bytetest_80_80 = simd_andc(bytetest_80_8f, tmp6);
          r10000_10fff_tmp45 = simd_and(r10000_10fff_tmp2, bytetest_8d);
          carryQ.cq[206] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp45, carryQ.get_carry_in(206), r10000_10fff_tmp46));
          r10000_10fff_tmp47 = simd_and(r10000_10fff_tmp46, bytetest_80_80);
          bytetest_8c = simd_and(bytetest_80_8f, tmp123);
          bytetest_b0_bf = simd_and(bytetest_80_bf, tmp2);
          r10000_10fff_tmp48 = simd_and(r10000_10fff_tmp43, bytetest_b0_bf);
          r10000_10fff_tmp49 = simd_or(r10000_10fff_tmp48, r10000_10fff_tmp47);
          struct_Lo.cc = simd_or(r10000_10fff_tmp49, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_8d = simd_and(bytetest_80_8f, tmp79);
          r10000_10fff_tmp50 = simd_or(simd_and(basis_bits.bit_4, tmp196), simd_andc(tmp187, basis_bits.bit_4));
          bytetest_82_89 = simd_and(bytetest_80_8f, r10000_10fff_tmp50);
          r10000_10fff_tmp51 = simd_and(r10000_10fff_tmp46, bytetest_82_89);
          struct_Lo.cc = simd_or(r10000_10fff_tmp51, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_8e = simd_and(bytetest_80_8f, tmp136);
          bytetest_80_9d = simd_andc(tmp142, tmp235);
          r10000_10fff_tmp52 = simd_and(r10000_10fff_tmp2, bytetest_8e);
          carryQ.cq[207] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp52, carryQ.get_carry_in(207), r10000_10fff_tmp53));
          r10000_10fff_tmp54 = simd_and(r10000_10fff_tmp53, bytetest_80_9d);
          struct_Lo.cc = simd_or(r10000_10fff_tmp54, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_8f = simd_and(bytetest_80_8f, tmp80);
          bytetest_80_83 = simd_andc(bytetest_80_8f, tmp4);
          r10000_10fff_tmp55 = simd_and(r10000_10fff_tmp2, bytetest_8f);
          carryQ.cq[208] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp55, carryQ.get_carry_in(208), r10000_10fff_tmp56));
          r10000_10fff_tmp57 = simd_and(r10000_10fff_tmp56, bytetest_80_83);
          bytetest_8e = simd_and(bytetest_80_8f, tmp136);
          bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
          r10000_10fff_tmp58 = simd_and(r10000_10fff_tmp53, bytetest_a0_bf);
          r10000_10fff_tmp59 = simd_or(r10000_10fff_tmp58, r10000_10fff_tmp57);
          struct_Lo.cc = simd_or(r10000_10fff_tmp59, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_8f = simd_and(bytetest_80_8f, tmp80);
          bytetest_88_8f = simd_and(bytetest_80_8f, basis_bits.bit_4);
          r10000_10fff_tmp60 = simd_and(r10000_10fff_tmp56, bytetest_88_8f);
          struct_Lo.cc = simd_or(r10000_10fff_tmp60, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_92 = simd_and(tmp94, tmp30);
          bytetest_80_9d = simd_andc(tmp142, tmp235);
          r10000_10fff_tmp61 = simd_and(r10000_10fff_tmp2, bytetest_92);
          carryQ.cq[209] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp61, carryQ.get_carry_in(209), r10000_10fff_tmp62));
          r10000_10fff_tmp63 = simd_and(r10000_10fff_tmp62, bytetest_80_9d);
          bytetest_91 = simd_and(tmp94, tmp11);
          bytetest_90_bf = simd_and(bytetest_80_bf, tmp12);
          r10000_10fff_tmp64 = simd_and(r10000_10fff_tmp2, bytetest_91);
          carryQ.cq[210] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp64, carryQ.get_carry_in(210), r10000_10fff_tmp65));
          r10000_10fff_tmp66 = simd_and(r10000_10fff_tmp65, bytetest_90_bf);
          r10000_10fff_tmp67 = simd_or(r10000_10fff_tmp66, r10000_10fff_tmp63);
          struct_Lo.cc = simd_or(r10000_10fff_tmp67, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_a0 = simd_andc(tmp105, tmp6);
          bytetest_80_85 = simd_andc(tmp119, r10000_10fff_tmp15);
          r10000_10fff_tmp68 = simd_and(r10000_10fff_tmp2, bytetest_a0);
          carryQ.cq[211] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp68, carryQ.get_carry_in(211), r10000_10fff_tmp69));
          r10000_10fff_tmp70 = simd_and(r10000_10fff_tmp69, bytetest_80_85);
          struct_Lo.cc = simd_or(r10000_10fff_tmp70, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_a0 = simd_andc(tmp105, tmp6);
          bytetest_88_88 = simd_and(bytetest_80_8f, tmp106);
          r10000_10fff_tmp71 = simd_and(r10000_10fff_tmp69, bytetest_88_88);
          struct_Lo.cc = simd_or(r10000_10fff_tmp71, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_a0 = simd_andc(tmp105, tmp6);
          r10000_10fff_tmp72 = simd_or(basis_bits.bit_4, r10000_10fff_tmp15);
          r10000_10fff_tmp73 = simd_and(basis_bits.bit_3, r10000_10fff_tmp72);
          r10000_10fff_tmp74 = simd_not(r10000_10fff_tmp73);
          r10000_10fff_tmp75 = simd_or(basis_bits.bit_3, tmp188);
          r10000_10fff_tmp76 = simd_or(simd_and(basis_bits.bit_2, r10000_10fff_tmp74), simd_andc(r10000_10fff_tmp75, basis_bits.bit_2));
          bytetest_8a_b5 = simd_and(bytetest_80_bf, r10000_10fff_tmp76);
          r10000_10fff_tmp77 = simd_and(r10000_10fff_tmp69, bytetest_8a_b5);
          struct_Lo.cc = simd_or(r10000_10fff_tmp77, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_a0 = simd_andc(tmp105, tmp6);
          r10000_10fff_tmp78 = simd_not(tmp37);
          r10000_10fff_tmp79 = simd_or(simd_and(basis_bits.bit_4, r10000_10fff_tmp78), simd_andc(tmp47, basis_bits.bit_4));
          bytetest_b7_b8 = simd_and(bytetest_b0_bf, r10000_10fff_tmp79);
          r10000_10fff_tmp80 = simd_and(r10000_10fff_tmp69, bytetest_b7_b8);
          struct_Lo.cc = simd_or(r10000_10fff_tmp80, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_a0 = simd_andc(tmp105, tmp6);
          bytetest_bc_bc = simd_and(bytetest_b0_bf, tmp123);
          r10000_10fff_tmp81 = simd_and(r10000_10fff_tmp69, bytetest_bc_bc);
          struct_Lo.cc = simd_or(r10000_10fff_tmp81, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_a1 = simd_and(tmp105, tmp11);
          bytetest_80_95 = simd_andc(tmp142, r10000_10fff_tmp73);
          r10000_10fff_tmp82 = simd_and(r10000_10fff_tmp2, bytetest_a1);
          carryQ.cq[212] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp82, carryQ.get_carry_in(212), r10000_10fff_tmp83));
          r10000_10fff_tmp84 = simd_and(r10000_10fff_tmp83, bytetest_80_95);
          bytetest_a0 = simd_andc(tmp105, tmp6);
          bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp80);
          r10000_10fff_tmp85 = simd_and(r10000_10fff_tmp69, bytetest_bf_bf);
          r10000_10fff_tmp86 = simd_or(r10000_10fff_tmp85, r10000_10fff_tmp84);
          struct_Lo.cc = simd_or(r10000_10fff_tmp86, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_a4 = simd_and(tmp105, tmp46);
          bytetest_80_95 = simd_andc(tmp142, r10000_10fff_tmp73);
          r10000_10fff_tmp87 = simd_and(r10000_10fff_tmp2, bytetest_a4);
          carryQ.cq[213] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp87, carryQ.get_carry_in(213), r10000_10fff_tmp88));
          r10000_10fff_tmp89 = simd_and(r10000_10fff_tmp88, bytetest_80_95);
          struct_Lo.cc = simd_or(r10000_10fff_tmp89, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_a4 = simd_and(tmp105, tmp46);
          r10000_10fff_tmp90 = simd_and(basis_bits.bit_3, tmp188);
          bytetest_a0_b9 = simd_andc(bytetest_a0_bf, r10000_10fff_tmp90);
          r10000_10fff_tmp91 = simd_and(r10000_10fff_tmp88, bytetest_a0_b9);
          struct_Lo.cc = simd_or(r10000_10fff_tmp91, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_a6 = simd_and(tmp105, tmp55);
          r10000_10fff_tmp92 = simd_and(basis_bits.bit_2, tmp14);
          bytetest_80_b7 = simd_andc(bytetest_80_bf, r10000_10fff_tmp92);
          r10000_10fff_tmp93 = simd_and(r10000_10fff_tmp2, bytetest_a6);
          carryQ.cq[214] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp93, carryQ.get_carry_in(214), r10000_10fff_tmp94));
          r10000_10fff_tmp95 = simd_and(r10000_10fff_tmp94, bytetest_80_b7);
          struct_Lo.cc = simd_or(r10000_10fff_tmp95, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_a6 = simd_and(tmp105, tmp55);
          bytetest_be_bf = simd_and(bytetest_b0_bf, tmp234);
          r10000_10fff_tmp96 = simd_and(r10000_10fff_tmp94, bytetest_be_bf);
          struct_Lo.cc = simd_or(r10000_10fff_tmp96, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_a8 = simd_and(tmp105, tmp106);
          bytetest_80_80 = simd_andc(bytetest_80_8f, tmp6);
          r10000_10fff_tmp97 = simd_and(r10000_10fff_tmp2, bytetest_a8);
          carryQ.cq[215] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp97, carryQ.get_carry_in(215), r10000_10fff_tmp98));
          r10000_10fff_tmp99 = simd_and(r10000_10fff_tmp98, bytetest_80_80);
          struct_Lo.cc = simd_or(r10000_10fff_tmp99, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_a8 = simd_and(tmp105, tmp106);
          bytetest_90_93 = simd_andc(tmp94, tmp4);
          r10000_10fff_tmp100 = simd_and(r10000_10fff_tmp98, bytetest_90_93);
          struct_Lo.cc = simd_or(r10000_10fff_tmp100, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_a8 = simd_and(tmp105, tmp106);
          r10000_10fff_tmp101 = simd_and(tmp94, tmp45);
          bytetest_95_97 = simd_and(r10000_10fff_tmp101, tmp5);
          r10000_10fff_tmp102 = simd_and(r10000_10fff_tmp98, bytetest_95_97);
          struct_Lo.cc = simd_or(r10000_10fff_tmp102, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_a8 = simd_and(tmp105, tmp106);
          r10000_10fff_tmp103 = simd_and(basis_bits.bit_3, tmp4);
          r10000_10fff_tmp104 = simd_not(r10000_10fff_tmp103);
          r10000_10fff_tmp105 = simd_or(simd_and(basis_bits.bit_2, r10000_10fff_tmp104), simd_andc(tmp107, basis_bits.bit_2));
          bytetest_99_b3 = simd_and(bytetest_80_bf, r10000_10fff_tmp105);
          r10000_10fff_tmp106 = simd_and(r10000_10fff_tmp98, bytetest_99_b3);
          struct_Lo.cc = simd_or(r10000_10fff_tmp106, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_a9 = simd_and(tmp105, tmp157);
          bytetest_a0_bc = simd_andc(bytetest_a0_bf, r10000_10fff_tmp31);
          r10000_10fff_tmp107 = simd_and(r10000_10fff_tmp2, bytetest_a9);
          carryQ.cq[216] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp107, carryQ.get_carry_in(216), r10000_10fff_tmp108));
          r10000_10fff_tmp109 = simd_and(r10000_10fff_tmp108, bytetest_a0_bc);
          struct_Lo.cc = simd_or(r10000_10fff_tmp109, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_ac = simd_and(tmp105, tmp123);
          r10000_10fff_tmp110 = simd_and(basis_bits.bit_2, r10000_10fff_tmp73);
          bytetest_80_b5 = simd_andc(bytetest_80_bf, r10000_10fff_tmp110);
          r10000_10fff_tmp111 = simd_and(r10000_10fff_tmp2, bytetest_ac);
          carryQ.cq[217] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp111, carryQ.get_carry_in(217), r10000_10fff_tmp112));
          r10000_10fff_tmp113 = simd_and(r10000_10fff_tmp112, bytetest_80_b5);
          struct_Lo.cc = simd_or(r10000_10fff_tmp113, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_ad = simd_and(tmp105, tmp79);
          bytetest_80_95 = simd_andc(tmp142, r10000_10fff_tmp73);
          r10000_10fff_tmp114 = simd_and(r10000_10fff_tmp2, bytetest_ad);
          carryQ.cq[218] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp114, carryQ.get_carry_in(218), r10000_10fff_tmp115));
          r10000_10fff_tmp116 = simd_and(r10000_10fff_tmp115, bytetest_80_95);
          struct_Lo.cc = simd_or(r10000_10fff_tmp116, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_ad = simd_and(tmp105, tmp79);
          bytetest_a0_b2 = simd_andc(bytetest_a0_bf, tmp56);
          r10000_10fff_tmp117 = simd_and(r10000_10fff_tmp115, bytetest_a0_b2);
          struct_Lo.cc = simd_or(r10000_10fff_tmp117, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_b1 = simd_and(bytetest_b0_bf, tmp11);
          bytetest_80_88 = simd_andc(bytetest_80_8f, tmp38);
          r10000_10fff_tmp118 = simd_and(r10000_10fff_tmp2, bytetest_b1);
          carryQ.cq[219] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp118, carryQ.get_carry_in(219), r10000_10fff_tmp119));
          r10000_10fff_tmp120 = simd_and(r10000_10fff_tmp119, bytetest_80_88);
          bytetest_b0 = simd_andc(bytetest_b0_bf, tmp6);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r10000_10fff_tmp121 = simd_and(r10000_10fff_tmp2, bytetest_b0);
          carryQ.cq[220] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp121, carryQ.get_carry_in(220), r10000_10fff_tmp122));
          r10000_10fff_tmp123 = simd_and(r10000_10fff_tmp122, bytetest_80_bf);
          r10000_10fff_tmp124 = simd_or(r10000_10fff_tmp123, r10000_10fff_tmp120);
          struct_Lo.cc = simd_or(r10000_10fff_tmp124, struct_Lo.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(198, 23);
        }
        carryQ.CarryQ_Adjust(221);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Lo & struct_Lo, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_f0, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, bytetest_91, tmp12, tmp13, bytetest_80, tmp14, tmp15;
		BitBlock tmp16, tmp17, tmp18, tmp19, bytetest_83_b7, tmp20, tmp21, tmp22;
		BitBlock tmp23, tmp24, tmp25, tmp26, tmp27, tmp28, tmp29, tmp30, bytetest_82;
		BitBlock tmp31, tmp32, bytetest_83_af, tmp33, tmp34, tmp35, tmp36, bytetest_83;
		BitBlock tmp37, tmp38, tmp39, tmp40, tmp41, bytetest_90_a8, tmp42, tmp43;
		BitBlock tmp44, tmp45, tmp46, bytetest_84, tmp47, tmp48, tmp49, tmp50, tmp51;
		BitBlock bytetest_83_a6, tmp52, tmp53, tmp54, tmp55, bytetest_86, tmp56, tmp57;
		BitBlock tmp58, bytetest_83_b2, tmp59, tmp60, tmp61, tmp62, bytetest_87, tmp63;
		BitBlock tmp64, tmp65, bytetest_81_84, tmp66, tmp67, tmp68, tmp69, tmp70;
		BitBlock bytetest_9a, tmp71, tmp72, tmp73, tmp74, bytetest_80_aa, tmp75, tmp76;
		BitBlock tmp77, bytetest_92, tmp78, tmp79, bytetest_8d, tmp80, tmp81, tmp82;
		BitBlock bytetest_80_ae, tmp83, tmp84, tmp85, tmp86, tmp87, tmp88, tmp89;
		BitBlock bytetest_80_8c, bytetest_80_bf, tmp90, tmp91, tmp92, tmp93, tmp94;
		BitBlock bytetest_93, bytetest_90, tmp95, tmp96, tmp97, tmp98, tmp99;
		BitBlock bytetest_80_8f, tmp100, tmp101, tmp102, tmp103, bytetest_96, tmp104;
		BitBlock tmp105, tmp106, bytetest_a8, tmp107, tmp108, bytetest_80_b8, tmp109;
		BitBlock tmp110, tmp111, tmp112, tmp113, bytetest_a0_a7, tmp114, tmp115;
		BitBlock tmp116, tmp117, tmp118, bytetest_bd, tmp119, bytetest_80_84, tmp120;
		BitBlock tmp121, tmp122, tmp123, bytetest_bc, tmp124, tmp125, tmp126, tmp127;
		BitBlock bytetest_90_90, tmp128, tmp129, bytetest_9b, tmp130, bytetest_80_81;
		BitBlock tmp131, tmp132, tmp133, tmp134, tmp135, tmp136, bytetest_9e;
		BitBlock bytetest_b8, bytetest_80_83, tmp137, tmp138, tmp139, tmp140, tmp141;
		BitBlock tmp142, tmp143, tmp144, bytetest_85_9f, tmp145, tmp146, tmp147;
		BitBlock tmp148, bytetest_a1_a2, tmp149, bytetest_a4_a4, tmp150;
		BitBlock bytetest_a7_a7, tmp151, tmp152, tmp153, tmp154, bytetest_a9_b2;
		BitBlock tmp155, bytetest_b4_b7, tmp156, tmp157, bytetest_b9_b9, tmp158;
		BitBlock bytetest_bb_bb, tmp159, bytetest_b9, bytetest_82_82, tmp160, tmp161;
		BitBlock tmp162, bytetest_87_87, tmp163, bytetest_89_89, tmp164;
		BitBlock bytetest_8b_8b, tmp165, tmp166, bytetest_8d_8f, tmp167, tmp168;
		BitBlock bytetest_91_92, tmp169, bytetest_94_94, tmp170, bytetest_97_97;
		BitBlock tmp171, bytetest_99_99, tmp172, bytetest_9b_9b, tmp173;
		BitBlock bytetest_9d_9d, tmp174, bytetest_9f_9f, tmp175, tmp176, tmp177;
		BitBlock tmp178, tmp179, bytetest_a7_aa, tmp180, tmp181, bytetest_ac_b2;
		BitBlock tmp182, tmp183, tmp184, bytetest_b9_bc, tmp185, bytetest_be_be;
		BitBlock tmp186, bytetest_ba, tmp187, tmp188, bytetest_80_89, tmp189, tmp190;
		BitBlock tmp191, tmp192, tmp193, bytetest_8b_9b, tmp194, bytetest_a1_a3;
		BitBlock tmp195, tmp196, tmp197, bytetest_a5_a9, tmp198, bytetest_ab_bb;
		BitBlock tmp199, bytetest_aa, tmp200, bytetest_80_96, tmp201, tmp202, tmp203;
		BitBlock tmp204, tmp205, tmp206, bytetest_80_9a, tmp207, tmp208, tmp209;
		BitBlock tmp210, bytetest_a0_a9, tmp211, tmp212, tmp213, tmp214, tmp215;
		BitBlock tmp216, bytetest_ab, bytetest_9c, tmp217, tmp218, bytetest_80_b4;
		BitBlock tmp219, tmp220, tmp221, tmp222, tmp223, tmp224, bytetest_80_9b;
		BitBlock tmp225, tmp226, tmp227, tmp228, tmp229, bytetest_9c_bf, tmp230;
		BitBlock tmp231, tmp232, tmp233, bytetest_a0, tmp234, tmp235, bytetest_80_9d;
		BitBlock tmp236, tmp237, tmp238, tmp239, bytetest_9d_9f, tmp240, tmp241;
		BitBlock tmp242, tmp243, bytetest_af, tmp244, tmp245, tmp246, tmp247, tmp248;
		BitBlock tmp249, tmp250, tmp251, tmp252, tmp253, tmp254, bytetest_c2_df;
		BitBlock r80_7ff_tmp1, bytetest_c2, bytetest_aa_aa, r80_7ff_tmp2, r80_7ff_tmp3;
		BitBlock r80_7ff_tmp4, bytetest_ba_ba, r80_7ff_tmp5, bytetest_c6, r80_7ff_tmp6;
		BitBlock r80_7ff_tmp7, r80_7ff_tmp8, bytetest_c7, r80_7ff_tmp9, r80_7ff_tmp10;
		BitBlock r80_7ff_tmp11, bytetest_ca, r80_7ff_tmp12, r80_7ff_tmp13;
		BitBlock r80_7ff_tmp14, r80_7ff_tmp15, bytetest_d7, r80_7ff_tmp16;
		BitBlock r80_7ff_tmp17, bytetest_90_aa, r80_7ff_tmp18, r80_7ff_tmp19;
		BitBlock r80_7ff_tmp20, r80_7ff_tmp21, bytetest_b0_b2, r80_7ff_tmp22;
		BitBlock bytetest_d8, bytetest_a0_bf, r80_7ff_tmp23, r80_7ff_tmp24;
		BitBlock r80_7ff_tmp25, bytetest_d9, r80_7ff_tmp26, bytetest_81_8a;
		BitBlock r80_7ff_tmp27, r80_7ff_tmp28, r80_7ff_tmp29, bytetest_ae_af;
		BitBlock r80_7ff_tmp30, bytetest_db, r80_7ff_tmp31, bytetest_80_93;
		BitBlock r80_7ff_tmp32, r80_7ff_tmp33, r80_7ff_tmp34, bytetest_da;
		BitBlock r80_7ff_tmp35, r80_7ff_tmp36, r80_7ff_tmp37, r80_7ff_tmp38;
		BitBlock bytetest_b1_bf, r80_7ff_tmp39, r80_7ff_tmp40, r80_7ff_tmp41;
		BitBlock r80_7ff_tmp42, bytetest_95_95, r80_7ff_tmp43, r80_7ff_tmp44;
		BitBlock r80_7ff_tmp45, bytetest_ba_bc, r80_7ff_tmp46, bytetest_bf_bf;
		BitBlock r80_7ff_tmp47, bytetest_dc, r80_7ff_tmp48, r80_7ff_tmp49;
		BitBlock r80_7ff_tmp50, r80_7ff_tmp51, r80_7ff_tmp52, bytetest_92_af;
		BitBlock r80_7ff_tmp53, bytetest_de, r80_7ff_tmp54, r80_7ff_tmp55;
		BitBlock r80_7ff_tmp56, r80_7ff_tmp57, bytetest_80_a5, r80_7ff_tmp58;
		BitBlock r80_7ff_tmp59, r80_7ff_tmp60, bytetest_dd, r80_7ff_tmp61;
		BitBlock r80_7ff_tmp62, r80_7ff_tmp63, bytetest_8d_bf, r80_7ff_tmp64;
		BitBlock r80_7ff_tmp65, r80_7ff_tmp66, r80_7ff_tmp67, bytetest_b1_b1;
		BitBlock r80_7ff_tmp68, bytetest_df, r80_7ff_tmp69, r80_7ff_tmp70;
		BitBlock bytetest_8a_aa, r80_7ff_tmp71, r80_7ff_tmp72, r80_7ff_tmp73, tmp255;
		BitBlock tmp256, bytetest_e1_ef, bytetest_e0, tmp257, tmp258, tmp259, tmp260;
		BitBlock r800_ffff_tmp1, r800_ffff_tmp2, r800_ffff_tmp3, r800_ffff_tmp4;
		BitBlock bytetest_80_95, r800_ffff_tmp5, r800_ffff_tmp6, r800_ffff_tmp7;
		BitBlock r800_ffff_tmp8, r800_ffff_tmp9, bytetest_a1, bytetest_80_98;
		BitBlock r800_ffff_tmp10, r800_ffff_tmp11, r800_ffff_tmp12, bytetest_a2;
		BitBlock bytetest_a0_a0, r800_ffff_tmp13, r800_ffff_tmp14, r800_ffff_tmp15;
		BitBlock r800_ffff_tmp16, r800_ffff_tmp17, bytetest_a2_ac, r800_ffff_tmp18;
		BitBlock bytetest_a4, r800_ffff_tmp19, r800_ffff_tmp20, r800_ffff_tmp21;
		BitBlock r800_ffff_tmp22, bytetest_84_b9, r800_ffff_tmp23, r800_ffff_tmp24;
		BitBlock r800_ffff_tmp25, bytetest_bd_bd, r800_ffff_tmp26, r800_ffff_tmp27;
		BitBlock bytetest_a5, r800_ffff_tmp28, r800_ffff_tmp29, r800_ffff_tmp30;
		BitBlock r800_ffff_tmp31, r800_ffff_tmp32, bytetest_98_a1, r800_ffff_tmp33;
		BitBlock r800_ffff_tmp34, bytetest_b2_b7, r800_ffff_tmp35, bytetest_b9_bf;
		BitBlock r800_ffff_tmp36, bytetest_a6, r800_ffff_tmp37, bytetest_85_8c;
		BitBlock r800_ffff_tmp38, r800_ffff_tmp39, r800_ffff_tmp40, r800_ffff_tmp41;
		BitBlock r800_ffff_tmp42, bytetest_8f_90, r800_ffff_tmp43, r800_ffff_tmp44;
		BitBlock bytetest_93_a8, r800_ffff_tmp45, r800_ffff_tmp46, bytetest_aa_b0;
		BitBlock r800_ffff_tmp47, bytetest_b2_b2, r800_ffff_tmp48, r800_ffff_tmp49;
		BitBlock bytetest_b6_b9, r800_ffff_tmp50, r800_ffff_tmp51, bytetest_a7;
		BitBlock bytetest_8e_8e, r800_ffff_tmp52, r800_ffff_tmp53, r800_ffff_tmp54;
		BitBlock r800_ffff_tmp55, bytetest_9c_9d, r800_ffff_tmp56, r800_ffff_tmp57;
		BitBlock r800_ffff_tmp58, bytetest_9f_a1, r800_ffff_tmp59, bytetest_b0_b1;
		BitBlock r800_ffff_tmp60, r800_ffff_tmp61, bytetest_85_8a, r800_ffff_tmp62;
		BitBlock r800_ffff_tmp63, r800_ffff_tmp64, r800_ffff_tmp65, r800_ffff_tmp66;
		BitBlock r800_ffff_tmp67, r800_ffff_tmp68, bytetest_b2_b3, r800_ffff_tmp69;
		BitBlock bytetest_b5_b6, r800_ffff_tmp70, r800_ffff_tmp71, bytetest_b8_b9;
		BitBlock r800_ffff_tmp72, bytetest_a9, r800_ffff_tmp73, bytetest_99_9c;
		BitBlock r800_ffff_tmp74, r800_ffff_tmp75, r800_ffff_tmp76, bytetest_9e_9e;
		BitBlock r800_ffff_tmp77, r800_ffff_tmp78, bytetest_b2_b4, r800_ffff_tmp79;
		BitBlock r800_ffff_tmp80, r800_ffff_tmp81, bytetest_85_8d, r800_ffff_tmp82;
		BitBlock r800_ffff_tmp83, r800_ffff_tmp84, r800_ffff_tmp85, r800_ffff_tmp86;
		BitBlock bytetest_8f_91, r800_ffff_tmp87, r800_ffff_tmp88, r800_ffff_tmp89;
		BitBlock r800_ffff_tmp90, bytetest_b5_b9, r800_ffff_tmp91, r800_ffff_tmp92;
		BitBlock r800_ffff_tmp93, r800_ffff_tmp94, r800_ffff_tmp95, bytetest_a0_a1;
		BitBlock r800_ffff_tmp96, bytetest_ac, r800_ffff_tmp97, r800_ffff_tmp98;
		BitBlock r800_ffff_tmp99, r800_ffff_tmp100, r800_ffff_tmp101, r800_ffff_tmp102;
		BitBlock r800_ffff_tmp103, r800_ffff_tmp104, r800_ffff_tmp105, bytetest_ad;
		BitBlock r800_ffff_tmp106, r800_ffff_tmp107, r800_ffff_tmp108;
		BitBlock r800_ffff_tmp109, r800_ffff_tmp110, bytetest_ae, bytetest_83_83;
		BitBlock r800_ffff_tmp111, r800_ffff_tmp112, r800_ffff_tmp113;
		BitBlock r800_ffff_tmp114, r800_ffff_tmp115, bytetest_8e_90, r800_ffff_tmp116;
		BitBlock r800_ffff_tmp117, r800_ffff_tmp118, r800_ffff_tmp119, bytetest_92_95;
		BitBlock r800_ffff_tmp120, r800_ffff_tmp121, bytetest_99_9a, r800_ffff_tmp122;
		BitBlock bytetest_9c_9c, r800_ffff_tmp123, bytetest_9e_9f, r800_ffff_tmp124;
		BitBlock r800_ffff_tmp125, bytetest_a3_a4, r800_ffff_tmp126, r800_ffff_tmp127;
		BitBlock bytetest_a8_aa, r800_ffff_tmp128, r800_ffff_tmp129, r800_ffff_tmp130;
		BitBlock bytetest_ae_b9, r800_ffff_tmp131, r800_ffff_tmp132, r800_ffff_tmp133;
		BitBlock r800_ffff_tmp134, bytetest_b0, r800_ffff_tmp135, r800_ffff_tmp136;
		BitBlock r800_ffff_tmp137, r800_ffff_tmp138, r800_ffff_tmp139;
		BitBlock r800_ffff_tmp140, bytetest_92_a8, r800_ffff_tmp141, r800_ffff_tmp142;
		BitBlock r800_ffff_tmp143, bytetest_aa_b3, r800_ffff_tmp144, r800_ffff_tmp145;
		BitBlock r800_ffff_tmp146, bytetest_b1, bytetest_98_99, r800_ffff_tmp147;
		BitBlock r800_ffff_tmp148, r800_ffff_tmp149, r800_ffff_tmp150, bytetest_b2;
		BitBlock r800_ffff_tmp151, r800_ffff_tmp152, r800_ffff_tmp153;
		BitBlock r800_ffff_tmp154, r800_ffff_tmp155, r800_ffff_tmp156;
		BitBlock r800_ffff_tmp157, r800_ffff_tmp158, bytetest_b3, r800_ffff_tmp159;
		BitBlock r800_ffff_tmp160, r800_ffff_tmp161, r800_ffff_tmp162;
		BitBlock r800_ffff_tmp163, bytetest_b1_b2, r800_ffff_tmp164, bytetest_b4;
		BitBlock r800_ffff_tmp165, r800_ffff_tmp166, r800_ffff_tmp167;
		BitBlock r800_ffff_tmp168, r800_ffff_tmp169, r800_ffff_tmp170, bytetest_92_ba;
		BitBlock r800_ffff_tmp171, r800_ffff_tmp172, bytetest_b5, r800_ffff_tmp173;
		BitBlock r800_ffff_tmp174, r800_ffff_tmp175, r800_ffff_tmp176, bytetest_ba_bf;
		BitBlock r800_ffff_tmp177, bytetest_b6, r800_ffff_tmp178, r800_ffff_tmp179;
		BitBlock bytetest_85_96, r800_ffff_tmp180, r800_ffff_tmp181, r800_ffff_tmp182;
		BitBlock r800_ffff_tmp183, r800_ffff_tmp184, bytetest_9a_b1, r800_ffff_tmp185;
		BitBlock r800_ffff_tmp186, r800_ffff_tmp187, bytetest_b3_bb, r800_ffff_tmp188;
		BitBlock r800_ffff_tmp189, bytetest_b7, bytetest_80_86, r800_ffff_tmp190;
		BitBlock r800_ffff_tmp191, r800_ffff_tmp192, r800_ffff_tmp193;
		BitBlock r800_ffff_tmp194, r800_ffff_tmp195, r800_ffff_tmp196, bytetest_81_b0;
		BitBlock r800_ffff_tmp197, r800_ffff_tmp198, r800_ffff_tmp199;
		BitBlock r800_ffff_tmp200, bytetest_80_85, r800_ffff_tmp201, r800_ffff_tmp202;
		BitBlock r800_ffff_tmp203, bytetest_81_82, r800_ffff_tmp204, r800_ffff_tmp205;
		BitBlock r800_ffff_tmp206, bytetest_84_84, r800_ffff_tmp207, r800_ffff_tmp208;
		BitBlock r800_ffff_tmp209, bytetest_87_88, r800_ffff_tmp210, bytetest_8a_8a;
		BitBlock r800_ffff_tmp211, bytetest_8d_8d, r800_ffff_tmp212, bytetest_94_97;
		BitBlock r800_ffff_tmp213, bytetest_99_9f, r800_ffff_tmp214, r800_ffff_tmp215;
		BitBlock bytetest_a5_a5, r800_ffff_tmp216, r800_ffff_tmp217, r800_ffff_tmp218;
		BitBlock bytetest_aa_ab, r800_ffff_tmp219, r800_ffff_tmp220, r800_ffff_tmp221;
		BitBlock bytetest_ad_b0, r800_ffff_tmp222, r800_ffff_tmp223, r800_ffff_tmp224;
		BitBlock bytetest_bb, r800_ffff_tmp225, r800_ffff_tmp226, r800_ffff_tmp227;
		BitBlock bytetest_9c_9f, r800_ffff_tmp228, bytetest_80_80, r800_ffff_tmp229;
		BitBlock r800_ffff_tmp230, r800_ffff_tmp231, bytetest_80_87, r800_ffff_tmp232;
		BitBlock r800_ffff_tmp233, r800_ffff_tmp234, r800_ffff_tmp235;
		BitBlock r800_ffff_tmp236, r800_ffff_tmp237, bytetest_89_ac, r800_ffff_tmp238;
		BitBlock bytetest_be, r800_ffff_tmp239, bytetest_88_8c, r800_ffff_tmp240;
		BitBlock r800_ffff_tmp241, r800_ffff_tmp242, bytetest_e1, r800_ffff_tmp243;
		BitBlock r800_ffff_tmp244, r800_ffff_tmp245, r800_ffff_tmp246;
		BitBlock r800_ffff_tmp247, r800_ffff_tmp248, bytetest_81, bytetest_90_95;
		BitBlock r800_ffff_tmp249, r800_ffff_tmp250, r800_ffff_tmp251, bytetest_9a_9d;
		BitBlock r800_ffff_tmp252, bytetest_a1_a1, r800_ffff_tmp253, r800_ffff_tmp254;
		BitBlock bytetest_a5_a6, r800_ffff_tmp255, bytetest_ae_b0, r800_ffff_tmp256;
		BitBlock r800_ffff_tmp257, r800_ffff_tmp258, r800_ffff_tmp259, bytetest_b5_bf;
		BitBlock r800_ffff_tmp260, r800_ffff_tmp261, r800_ffff_tmp262;
		BitBlock r800_ffff_tmp263, bytetest_90_ba, r800_ffff_tmp264, r800_ffff_tmp265;
		BitBlock r800_ffff_tmp266, bytetest_89, bytetest_80_88, r800_ffff_tmp267;
		BitBlock r800_ffff_tmp268, r800_ffff_tmp269, r800_ffff_tmp270, bytetest_84_88;
		BitBlock r800_ffff_tmp271, r800_ffff_tmp272, r800_ffff_tmp273;
		BitBlock r800_ffff_tmp274, bytetest_bd_bf, r800_ffff_tmp275, r800_ffff_tmp276;
		BitBlock r800_ffff_tmp277, bytetest_8a_8d, r800_ffff_tmp278, bytetest_90_96;
		BitBlock r800_ffff_tmp279, bytetest_98_98, r800_ffff_tmp280, r800_ffff_tmp281;
		BitBlock bytetest_8a, r800_ffff_tmp282, r800_ffff_tmp283, r800_ffff_tmp284;
		BitBlock r800_ffff_tmp285, r800_ffff_tmp286, r800_ffff_tmp287;
		BitBlock r800_ffff_tmp288, bytetest_90_b0, r800_ffff_tmp289, bytetest_b2_b5;
		BitBlock r800_ffff_tmp290, bytetest_b8_be, r800_ffff_tmp291, bytetest_8b;
		BitBlock r800_ffff_tmp292, r800_ffff_tmp293, r800_ffff_tmp294, bytetest_82_85;
		BitBlock r800_ffff_tmp295, r800_ffff_tmp296, bytetest_88_96, r800_ffff_tmp297;
		BitBlock bytetest_8c, bytetest_80_90, r800_ffff_tmp298, r800_ffff_tmp299;
		BitBlock r800_ffff_tmp300, r800_ffff_tmp301, bytetest_98_bf, r800_ffff_tmp302;
		BitBlock r800_ffff_tmp303, r800_ffff_tmp304, r800_ffff_tmp305;
		BitBlock r800_ffff_tmp306, r800_ffff_tmp307, r800_ffff_tmp308;
		BitBlock r800_ffff_tmp309, bytetest_8e, r800_ffff_tmp310, r800_ffff_tmp311;
		BitBlock r800_ffff_tmp312, bytetest_8f, r800_ffff_tmp313, r800_ffff_tmp314;
		BitBlock r800_ffff_tmp315, r800_ffff_tmp316, r800_ffff_tmp317, bytetest_99;
		BitBlock r800_ffff_tmp318, bytetest_80_ac, r800_ffff_tmp319, r800_ffff_tmp320;
		BitBlock r800_ffff_tmp321, r800_ffff_tmp322, bytetest_91_98, r800_ffff_tmp323;
		BitBlock r800_ffff_tmp324, r800_ffff_tmp325, r800_ffff_tmp326, bytetest_81_bf;
		BitBlock r800_ffff_tmp327, r800_ffff_tmp328, r800_ffff_tmp329;
		BitBlock r800_ffff_tmp330, r800_ffff_tmp331, bytetest_af_bf, r800_ffff_tmp332;
		BitBlock r800_ffff_tmp333, r800_ffff_tmp334, bytetest_81_9a, r800_ffff_tmp335;
		BitBlock r800_ffff_tmp336, r800_ffff_tmp337, r800_ffff_tmp338;
		BitBlock r800_ffff_tmp339, r800_ffff_tmp340, r800_ffff_tmp341;
		BitBlock r800_ffff_tmp342, r800_ffff_tmp343, r800_ffff_tmp344;
		BitBlock r800_ffff_tmp345, r800_ffff_tmp346, bytetest_8e_91, r800_ffff_tmp347;
		BitBlock bytetest_a0_b1, r800_ffff_tmp348, bytetest_9d, bytetest_80_91;
		BitBlock r800_ffff_tmp349, r800_ffff_tmp350, r800_ffff_tmp351, bytetest_a0_ac;
		BitBlock r800_ffff_tmp352, r800_ffff_tmp353, r800_ffff_tmp354;
		BitBlock r800_ffff_tmp355, bytetest_80_b3, r800_ffff_tmp356, r800_ffff_tmp357;
		BitBlock r800_ffff_tmp358, bytetest_9f, r800_ffff_tmp359, r800_ffff_tmp360;
		BitBlock r800_ffff_tmp361, bytetest_80_82, r800_ffff_tmp362, r800_ffff_tmp363;
		BitBlock r800_ffff_tmp364, r800_ffff_tmp365, r800_ffff_tmp366;
		BitBlock r800_ffff_tmp367, r800_ffff_tmp368, r800_ffff_tmp369, bytetest_84_b7;
		BitBlock r800_ffff_tmp370, r800_ffff_tmp371, bytetest_80_a8, r800_ffff_tmp372;
		BitBlock r800_ffff_tmp373, r800_ffff_tmp374, r800_ffff_tmp375, bytetest_a3;
		BitBlock r800_ffff_tmp376, bytetest_80_b5, r800_ffff_tmp377, r800_ffff_tmp378;
		BitBlock r800_ffff_tmp379, bytetest_b0_bf, r800_ffff_tmp380, r800_ffff_tmp381;
		BitBlock r800_ffff_tmp382, bytetest_80_9c, r800_ffff_tmp383, r800_ffff_tmp384;
		BitBlock r800_ffff_tmp385, r800_ffff_tmp386, r800_ffff_tmp387;
		BitBlock r800_ffff_tmp388, bytetest_90_ad, r800_ffff_tmp389, r800_ffff_tmp390;
		BitBlock r800_ffff_tmp391, r800_ffff_tmp392, bytetest_b0_b4, r800_ffff_tmp393;
		BitBlock r800_ffff_tmp394, r800_ffff_tmp395, bytetest_80_ab, r800_ffff_tmp396;
		BitBlock r800_ffff_tmp397, r800_ffff_tmp398, bytetest_81_87, r800_ffff_tmp399;
		BitBlock r800_ffff_tmp400, r800_ffff_tmp401, r800_ffff_tmp402;
		BitBlock r800_ffff_tmp403, r800_ffff_tmp404, bytetest_80_94, r800_ffff_tmp405;
		BitBlock r800_ffff_tmp406, r800_ffff_tmp407, r800_ffff_tmp408;
		BitBlock r800_ffff_tmp409, r800_ffff_tmp410, r800_ffff_tmp411, bytetest_85_b3;
		BitBlock r800_ffff_tmp412, r800_ffff_tmp413, r800_ffff_tmp414;
		BitBlock r800_ffff_tmp415, bytetest_85_8b, r800_ffff_tmp416, r800_ffff_tmp417;
		BitBlock r800_ffff_tmp418, r800_ffff_tmp419, r800_ffff_tmp420, bytetest_83_a0;
		BitBlock r800_ffff_tmp421, r800_ffff_tmp422, r800_ffff_tmp423;
		BitBlock r800_ffff_tmp424, r800_ffff_tmp425, r800_ffff_tmp426;
		BitBlock r800_ffff_tmp427, r800_ffff_tmp428, r800_ffff_tmp429;
		BitBlock r800_ffff_tmp430, r800_ffff_tmp431, r800_ffff_tmp432;
		BitBlock r800_ffff_tmp433, bytetest_80_a3, r800_ffff_tmp434, r800_ffff_tmp435;
		BitBlock r800_ffff_tmp436, r800_ffff_tmp437, r800_ffff_tmp438;
		BitBlock r800_ffff_tmp439, r800_ffff_tmp440, bytetest_9a_b7, r800_ffff_tmp441;
		BitBlock r800_ffff_tmp442, bytetest_a9_ac, r800_ffff_tmp443, r800_ffff_tmp444;
		BitBlock r800_ffff_tmp445, bytetest_ae_b1, r800_ffff_tmp446, r800_ffff_tmp447;
		BitBlock r800_ffff_tmp448, bytetest_e2, r800_ffff_tmp449, bytetest_b5_b8;
		BitBlock r800_ffff_tmp450, r800_ffff_tmp451, r800_ffff_tmp452;
		BitBlock r800_ffff_tmp453, r800_ffff_tmp454, r800_ffff_tmp455;
		BitBlock r800_ffff_tmp456, bytetest_80_a7, r800_ffff_tmp457, r800_ffff_tmp458;
		BitBlock r800_ffff_tmp459, r800_ffff_tmp460, r800_ffff_tmp461;
		BitBlock r800_ffff_tmp462, r800_ffff_tmp463, r800_ffff_tmp464;
		BitBlock r800_ffff_tmp465, r800_ffff_tmp466, bytetest_a0_a6, r800_ffff_tmp467;
		BitBlock bytetest_a8_ae, r800_ffff_tmp468, bytetest_b0_b6, r800_ffff_tmp469;
		BitBlock r800_ffff_tmp470, r800_ffff_tmp471, r800_ffff_tmp472;
		BitBlock r800_ffff_tmp473, bytetest_88_8e, r800_ffff_tmp474, r800_ffff_tmp475;
		BitBlock bytetest_98_9e, r800_ffff_tmp476, bytetest_e3, bytetest_86_86;
		BitBlock r800_ffff_tmp477, r800_ffff_tmp478, r800_ffff_tmp479;
		BitBlock r800_ffff_tmp480, r800_ffff_tmp481, bytetest_bc_bc, r800_ffff_tmp482;
		BitBlock r800_ffff_tmp483, r800_ffff_tmp484, r800_ffff_tmp485;
		BitBlock r800_ffff_tmp486, r800_ffff_tmp487, r800_ffff_tmp488;
		BitBlock r800_ffff_tmp489, r800_ffff_tmp490, r800_ffff_tmp491, bytetest_80_ba;
		BitBlock r800_ffff_tmp492, r800_ffff_tmp493, r800_ffff_tmp494, bytetest_a1_bf;
		BitBlock r800_ffff_tmp495, r800_ffff_tmp496, r800_ffff_tmp497;
		BitBlock r800_ffff_tmp498, bytetest_85_ad, r800_ffff_tmp499, r800_ffff_tmp500;
		BitBlock r800_ffff_tmp501, r800_ffff_tmp502, bytetest_80_8e, r800_ffff_tmp503;
		BitBlock r800_ffff_tmp504, r800_ffff_tmp505, bytetest_85, r800_ffff_tmp506;
		BitBlock r800_ffff_tmp507, r800_ffff_tmp508, r800_ffff_tmp509;
		BitBlock r800_ffff_tmp510, r800_ffff_tmp511, r800_ffff_tmp512, bytetest_a0_ba;
		BitBlock r800_ffff_tmp513, r800_ffff_tmp514, r800_ffff_tmp515;
		BitBlock r800_ffff_tmp516, bytetest_e4, r800_ffff_tmp517, r800_ffff_tmp518;
		BitBlock r800_ffff_tmp519, r800_ffff_tmp520, r800_ffff_tmp521;
		BitBlock r800_ffff_tmp522, r800_ffff_tmp523, r800_ffff_tmp524;
		BitBlock r800_ffff_tmp525, bytetest_90_bf, r800_ffff_tmp526, r800_ffff_tmp527;
		BitBlock r800_ffff_tmp528, r800_ffff_tmp529, bytetest_e9, bytetest_bf;
		BitBlock r800_ffff_tmp530, r800_ffff_tmp531, r800_ffff_tmp532;
		BitBlock r800_ffff_tmp533, r800_ffff_tmp534, r800_ffff_tmp535, bytetest_80_be;
		BitBlock r800_ffff_tmp536, r800_ffff_tmp537, r800_ffff_tmp538;
		BitBlock r800_ffff_tmp539, bytetest_e5_e8, bytetest_b8_bf, r800_ffff_tmp540;
		BitBlock r800_ffff_tmp541, r800_ffff_tmp542, r800_ffff_tmp543;
		BitBlock r800_ffff_tmp544, bytetest_ea, r800_ffff_tmp545, r800_ffff_tmp546;
		BitBlock r800_ffff_tmp547, r800_ffff_tmp548, r800_ffff_tmp549;
		BitBlock r800_ffff_tmp550, r800_ffff_tmp551, r800_ffff_tmp552;
		BitBlock r800_ffff_tmp553, bytetest_81_91, r800_ffff_tmp554, r800_ffff_tmp555;
		BitBlock r800_ffff_tmp556, r800_ffff_tmp557, bytetest_96_bf, r800_ffff_tmp558;
		BitBlock r800_ffff_tmp559, r800_ffff_tmp560, r800_ffff_tmp561, bytetest_90_b7;
		BitBlock r800_ffff_tmp562, r800_ffff_tmp563, r800_ffff_tmp564, bytetest_98;
		BitBlock bytetest_80_8b, r800_ffff_tmp565, r800_ffff_tmp566, r800_ffff_tmp567;
		BitBlock r800_ffff_tmp568, r800_ffff_tmp569, r800_ffff_tmp570;
		BitBlock r800_ffff_tmp571, bytetest_90_9f, r800_ffff_tmp572, r800_ffff_tmp573;
		BitBlock bytetest_ae_ae, r800_ffff_tmp574, r800_ffff_tmp575, r800_ffff_tmp576;
		BitBlock r800_ffff_tmp577, r800_ffff_tmp578, r800_ffff_tmp579;
		BitBlock r800_ffff_tmp580, r800_ffff_tmp581, r800_ffff_tmp582;
		BitBlock r800_ffff_tmp583, r800_ffff_tmp584, r800_ffff_tmp585;
		BitBlock r800_ffff_tmp586, bytetest_bb_bf, r800_ffff_tmp587, r800_ffff_tmp588;
		BitBlock r800_ffff_tmp589, r800_ffff_tmp590, r800_ffff_tmp591, bytetest_83_85;
		BitBlock r800_ffff_tmp592, bytetest_87_8a, r800_ffff_tmp593, r800_ffff_tmp594;
		BitBlock r800_ffff_tmp595, bytetest_8c_a2, r800_ffff_tmp596, r800_ffff_tmp597;
		BitBlock r800_ffff_tmp598, r800_ffff_tmp599, r800_ffff_tmp600, bytetest_82_b3;
		BitBlock r800_ffff_tmp601, r800_ffff_tmp602, r800_ffff_tmp603;
		BitBlock r800_ffff_tmp604, r800_ffff_tmp605, r800_ffff_tmp606;
		BitBlock r800_ffff_tmp607, r800_ffff_tmp608, r800_ffff_tmp609;
		BitBlock r800_ffff_tmp610, bytetest_8a_a5, r800_ffff_tmp611, r800_ffff_tmp612;
		BitBlock r800_ffff_tmp613, r800_ffff_tmp614, r800_ffff_tmp615;
		BitBlock r800_ffff_tmp616, r800_ffff_tmp617, r800_ffff_tmp618, bytetest_a0_bc;
		BitBlock r800_ffff_tmp619, r800_ffff_tmp620, bytetest_84_b2, r800_ffff_tmp621;
		BitBlock r800_ffff_tmp622, r800_ffff_tmp623, r800_ffff_tmp624;
		BitBlock r800_ffff_tmp625, r800_ffff_tmp626, r800_ffff_tmp627;
		BitBlock r800_ffff_tmp628, r800_ffff_tmp629, r800_ffff_tmp630, bytetest_84_8b;
		BitBlock r800_ffff_tmp631, bytetest_a0_af, r800_ffff_tmp632, r800_ffff_tmp633;
		BitBlock r800_ffff_tmp634, bytetest_b1_b6, r800_ffff_tmp635, r800_ffff_tmp636;
		BitBlock bytetest_80_af, r800_ffff_tmp637, r800_ffff_tmp638, r800_ffff_tmp639;
		BitBlock r800_ffff_tmp640, r800_ffff_tmp641, r800_ffff_tmp642, bytetest_b9_bd;
		BitBlock r800_ffff_tmp643, r800_ffff_tmp644, r800_ffff_tmp645;
		BitBlock r800_ffff_tmp646, r800_ffff_tmp647, r800_ffff_tmp648, bytetest_9b_9c;
		BitBlock r800_ffff_tmp649, bytetest_a0_aa, r800_ffff_tmp650, r800_ffff_tmp651;
		BitBlock bytetest_81_86, r800_ffff_tmp652, r800_ffff_tmp653, r800_ffff_tmp654;
		BitBlock bytetest_89_8e, r800_ffff_tmp655, r800_ffff_tmp656, bytetest_91_96;
		BitBlock r800_ffff_tmp657, r800_ffff_tmp658, r800_ffff_tmp659;
		BitBlock r800_ffff_tmp660, r800_ffff_tmp661, r800_ffff_tmp662, bytetest_80_a2;
		BitBlock r800_ffff_tmp663, r800_ffff_tmp664, r800_ffff_tmp665, bytetest_ed;
		BitBlock r800_ffff_tmp666, r800_ffff_tmp667, r800_ffff_tmp668;
		BitBlock r800_ffff_tmp669, r800_ffff_tmp670, r800_ffff_tmp671;
		BitBlock r800_ffff_tmp672, r800_ffff_tmp673, r800_ffff_tmp674;
		BitBlock r800_ffff_tmp675, bytetest_eb_ec, r800_ffff_tmp676, r800_ffff_tmp677;
		BitBlock r800_ffff_tmp678, r800_ffff_tmp679, r800_ffff_tmp680;
		BitBlock r800_ffff_tmp681, r800_ffff_tmp682, r800_ffff_tmp683;
		BitBlock r800_ffff_tmp684, r800_ffff_tmp685, r800_ffff_tmp686;
		BitBlock r800_ffff_tmp687, bytetest_8b_bb, r800_ffff_tmp688, bytetest_ef;
		BitBlock r800_ffff_tmp689, bytetest_80_ad, r800_ffff_tmp690, r800_ffff_tmp691;
		BitBlock r800_ffff_tmp692, r800_ffff_tmp693, r800_ffff_tmp694, bytetest_a4_a8;
		BitBlock r800_ffff_tmp695, r800_ffff_tmp696, r800_ffff_tmp697;
		BitBlock r800_ffff_tmp698, bytetest_80_99, r800_ffff_tmp699, r800_ffff_tmp700;
		BitBlock r800_ffff_tmp701, r800_ffff_tmp702, r800_ffff_tmp703;
		BitBlock r800_ffff_tmp704, r800_ffff_tmp705, r800_ffff_tmp706;
		BitBlock r800_ffff_tmp707, r800_ffff_tmp708, r800_ffff_tmp709;
		BitBlock r800_ffff_tmp710, r800_ffff_tmp711, bytetest_9f_a8, r800_ffff_tmp712;
		BitBlock r800_ffff_tmp713, bytetest_aa_b6, r800_ffff_tmp714, bytetest_b8_bc;
		BitBlock r800_ffff_tmp715, r800_ffff_tmp716, r800_ffff_tmp717;
		BitBlock r800_ffff_tmp718, r800_ffff_tmp719, bytetest_83_84, r800_ffff_tmp720;
		BitBlock r800_ffff_tmp721, bytetest_80_b1, r800_ffff_tmp722, r800_ffff_tmp723;
		BitBlock r800_ffff_tmp724, r800_ffff_tmp725, bytetest_86_bf, r800_ffff_tmp726;
		BitBlock r800_ffff_tmp727, r800_ffff_tmp728, bytetest_80_bd, r800_ffff_tmp729;
		BitBlock r800_ffff_tmp730, r800_ffff_tmp731, bytetest_b0_b3, r800_ffff_tmp732;
		BitBlock r800_ffff_tmp733, r800_ffff_tmp734, r800_ffff_tmp735, bytetest_93_bf;
		BitBlock r800_ffff_tmp736, r800_ffff_tmp737, r800_ffff_tmp738;
		BitBlock r800_ffff_tmp739, r800_ffff_tmp740, r800_ffff_tmp741;
		BitBlock r800_ffff_tmp742, r800_ffff_tmp743, r800_ffff_tmp744;
		BitBlock r800_ffff_tmp745, r800_ffff_tmp746, r800_ffff_tmp747;
		BitBlock r800_ffff_tmp748, r800_ffff_tmp749, r800_ffff_tmp750;
		BitBlock r800_ffff_tmp751, bytetest_92_bf, r800_ffff_tmp752, r800_ffff_tmp753;
		BitBlock bytetest_b0_bb, r800_ffff_tmp754, r800_ffff_tmp755, r800_ffff_tmp756;
		BitBlock r800_ffff_tmp757, r800_ffff_tmp758, bytetest_80_bc, r800_ffff_tmp759;
		BitBlock r800_ffff_tmp760, r800_ffff_tmp761, r800_ffff_tmp762;
		BitBlock r800_ffff_tmp763, r800_ffff_tmp764, bytetest_b6_bf, r800_ffff_tmp765;
		BitBlock r800_ffff_tmp766, r800_ffff_tmp767, bytetest_a6_af, r800_ffff_tmp768;
		BitBlock r800_ffff_tmp769, r800_ffff_tmp770, r800_ffff_tmp771;
		BitBlock r800_ffff_tmp772, r800_ffff_tmp773, r800_ffff_tmp774;
		BitBlock r800_ffff_tmp775, bytetest_a0_be, r800_ffff_tmp776, bytetest_82_87;
		BitBlock r800_ffff_tmp777, r800_ffff_tmp778, r800_ffff_tmp779, bytetest_8a_8f;
		BitBlock r800_ffff_tmp780, bytetest_92_97, r800_ffff_tmp781, bytetest_9a_9c;
		BitBlock r800_ffff_tmp782, tmp261, tmp262, tmp263, r10000_10fff_tmp1;
		BitBlock r10000_10fff_tmp2, r10000_10fff_tmp3, r10000_10fff_tmp4;
		BitBlock r10000_10fff_tmp5, r10000_10fff_tmp6, r10000_10fff_tmp7;
		BitBlock r10000_10fff_tmp8, bytetest_8d_a6, r10000_10fff_tmp9;
		BitBlock r10000_10fff_tmp10, r10000_10fff_tmp11, bytetest_a8_ba;
		BitBlock r10000_10fff_tmp12, r10000_10fff_tmp13, bytetest_bc_bd;
		BitBlock r10000_10fff_tmp14, r10000_10fff_tmp15, r10000_10fff_tmp16;
		BitBlock bytetest_80_8d, r10000_10fff_tmp17, r10000_10fff_tmp18;
		BitBlock r10000_10fff_tmp19, r10000_10fff_tmp20, r10000_10fff_tmp21;
		BitBlock bytetest_90_9d, r10000_10fff_tmp22, r10000_10fff_tmp23;
		BitBlock r10000_10fff_tmp24, r10000_10fff_tmp25, r10000_10fff_tmp26;
		BitBlock r10000_10fff_tmp27, r10000_10fff_tmp28, r10000_10fff_tmp29;
		BitBlock r10000_10fff_tmp30, r10000_10fff_tmp31, r10000_10fff_tmp32;
		BitBlock r10000_10fff_tmp33, r10000_10fff_tmp34, r10000_10fff_tmp35;
		BitBlock r10000_10fff_tmp36, r10000_10fff_tmp37, r10000_10fff_tmp38;
		BitBlock r10000_10fff_tmp39, r10000_10fff_tmp40, r10000_10fff_tmp41;
		BitBlock bytetest_80_9e, r10000_10fff_tmp42, r10000_10fff_tmp43;
		BitBlock r10000_10fff_tmp44, r10000_10fff_tmp45, r10000_10fff_tmp46;
		BitBlock r10000_10fff_tmp47, r10000_10fff_tmp48, r10000_10fff_tmp49;
		BitBlock r10000_10fff_tmp50, bytetest_82_89, r10000_10fff_tmp51;
		BitBlock r10000_10fff_tmp52, r10000_10fff_tmp53, r10000_10fff_tmp54;
		BitBlock r10000_10fff_tmp55, r10000_10fff_tmp56, r10000_10fff_tmp57;
		BitBlock r10000_10fff_tmp58, r10000_10fff_tmp59, bytetest_88_8f;
		BitBlock r10000_10fff_tmp60, r10000_10fff_tmp61, r10000_10fff_tmp62;
		BitBlock r10000_10fff_tmp63, r10000_10fff_tmp64, r10000_10fff_tmp65;
		BitBlock r10000_10fff_tmp66, r10000_10fff_tmp67, r10000_10fff_tmp68;
		BitBlock r10000_10fff_tmp69, r10000_10fff_tmp70, bytetest_88_88;
		BitBlock r10000_10fff_tmp71, r10000_10fff_tmp72, r10000_10fff_tmp73;
		BitBlock r10000_10fff_tmp74, r10000_10fff_tmp75, r10000_10fff_tmp76;
		BitBlock bytetest_8a_b5, r10000_10fff_tmp77, r10000_10fff_tmp78;
		BitBlock r10000_10fff_tmp79, bytetest_b7_b8, r10000_10fff_tmp80;
		BitBlock r10000_10fff_tmp81, r10000_10fff_tmp82, r10000_10fff_tmp83;
		BitBlock r10000_10fff_tmp84, r10000_10fff_tmp85, r10000_10fff_tmp86;
		BitBlock r10000_10fff_tmp87, r10000_10fff_tmp88, r10000_10fff_tmp89;
		BitBlock r10000_10fff_tmp90, bytetest_a0_b9, r10000_10fff_tmp91;
		BitBlock r10000_10fff_tmp92, bytetest_80_b7, r10000_10fff_tmp93;
		BitBlock r10000_10fff_tmp94, r10000_10fff_tmp95, bytetest_be_bf;
		BitBlock r10000_10fff_tmp96, r10000_10fff_tmp97, r10000_10fff_tmp98;
		BitBlock r10000_10fff_tmp99, bytetest_90_93, r10000_10fff_tmp100;
		BitBlock r10000_10fff_tmp101, bytetest_95_97, r10000_10fff_tmp102;
		BitBlock r10000_10fff_tmp103, r10000_10fff_tmp104, r10000_10fff_tmp105;
		BitBlock bytetest_99_b3, r10000_10fff_tmp106, r10000_10fff_tmp107;
		BitBlock r10000_10fff_tmp108, r10000_10fff_tmp109, r10000_10fff_tmp110;
		BitBlock r10000_10fff_tmp111, r10000_10fff_tmp112, r10000_10fff_tmp113;
		BitBlock r10000_10fff_tmp114, r10000_10fff_tmp115, r10000_10fff_tmp116;
		BitBlock bytetest_a0_b2, r10000_10fff_tmp117, r10000_10fff_tmp118;
		BitBlock r10000_10fff_tmp119, r10000_10fff_tmp120, r10000_10fff_tmp121;
		BitBlock r10000_10fff_tmp122, r10000_10fff_tmp123, r10000_10fff_tmp124;




        struct_Lo.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_and(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_or(tmp4, tmp5);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp11 = simd_andc(tmp10, tmp4);
        bytetest_91 = simd_and(tmp9, tmp11);
        tmp12 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp13 = simd_andc(tmp7, tmp12);
        bytetest_80 = simd_andc(tmp13, tmp6);
        tmp14 = simd_and(basis_bits.bit_3, basis_bits.bit_4);
        tmp15 = simd_not(tmp14);
        tmp16 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp17 = simd_or(tmp4, tmp16);
        tmp18 = simd_or(basis_bits.bit_3, tmp17);
        tmp19 = simd_or(simd_and(basis_bits.bit_2, tmp15), simd_andc(tmp18, basis_bits.bit_2));
        bytetest_83_b7 = simd_and(tmp7, tmp19);
        tmp20 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp20, carryQ.get_carry_in(0), tmp21));
        tmp22 = simd_and(tmp21, bytetest_f0);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp22, carryQ.get_carry_in(1), tmp23));
        tmp24 = simd_and(tmp23, bytetest_91);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp24, carryQ.get_carry_in(2), tmp25));
        tmp26 = simd_and(tmp25, bytetest_80);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp26, carryQ.get_carry_in(3), tmp27));
        tmp28 = simd_and(tmp27, bytetest_83_b7);
        struct_Lo.cc = simd_or(tmp28, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        tmp29 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp30 = simd_andc(tmp29, tmp4);
        bytetest_82 = simd_and(tmp13, tmp30);
        tmp31 = simd_not(basis_bits.bit_3);
        tmp32 = simd_or(simd_and(basis_bits.bit_2, tmp31), simd_andc(tmp18, basis_bits.bit_2));
        bytetest_83_af = simd_and(tmp7, tmp32);
        tmp33 = simd_and(tmp25, bytetest_82);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp33, carryQ.get_carry_in(4), tmp34));
        tmp35 = simd_and(tmp34, bytetest_83_af);
        struct_Lo.cc = simd_or(tmp35, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        tmp36 = simd_andc(tmp16, tmp4);
        bytetest_83 = simd_and(tmp13, tmp36);
        tmp37 = simd_or(basis_bits.bit_5, tmp5);
        tmp38 = simd_and(basis_bits.bit_4, tmp37);
        tmp39 = simd_or(basis_bits.bit_3, tmp38);
        tmp40 = simd_not(tmp39);
        tmp41 = simd_or(simd_and(basis_bits.bit_2, tmp40), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
        bytetest_90_a8 = simd_and(tmp7, tmp41);
        tmp42 = simd_and(tmp25, bytetest_83);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp42, carryQ.get_carry_in(5), tmp43));
        tmp44 = simd_and(tmp43, bytetest_90_a8);
        struct_Lo.cc = simd_or(tmp44, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        tmp45 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp46 = simd_andc(tmp45, tmp5);
        bytetest_84 = simd_and(tmp13, tmp46);
        tmp47 = simd_and(basis_bits.bit_5, tmp16);
        tmp48 = simd_or(basis_bits.bit_4, tmp47);
        tmp49 = simd_or(basis_bits.bit_3, tmp48);
        tmp50 = simd_not(tmp49);
        tmp51 = simd_or(simd_and(basis_bits.bit_2, tmp50), simd_andc(tmp18, basis_bits.bit_2));
        bytetest_83_a6 = simd_and(tmp7, tmp51);
        tmp52 = simd_and(tmp25, bytetest_84);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp52, carryQ.get_carry_in(6), tmp53));
        tmp54 = simd_and(tmp53, bytetest_83_a6);
        struct_Lo.cc = simd_or(tmp54, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        tmp55 = simd_and(tmp45, tmp29);
        bytetest_86 = simd_and(tmp13, tmp55);
        tmp56 = simd_and(basis_bits.bit_3, tmp17);
        tmp57 = simd_not(tmp56);
        tmp58 = simd_or(simd_and(basis_bits.bit_2, tmp57), simd_andc(tmp18, basis_bits.bit_2));
        bytetest_83_b2 = simd_and(tmp7, tmp58);
        tmp59 = simd_and(tmp25, bytetest_86);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp59, carryQ.get_carry_in(7), tmp60));
        tmp61 = simd_and(tmp60, bytetest_83_b2);
        struct_Lo.cc = simd_or(tmp61, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        tmp62 = simd_and(tmp45, tmp16);
        bytetest_87 = simd_and(tmp13, tmp62);
        tmp63 = simd_andc(tmp13, basis_bits.bit_4);
        tmp64 = simd_not(tmp5);
        tmp65 = simd_or(simd_and(basis_bits.bit_5, tmp64), simd_andc(tmp5, basis_bits.bit_5));
        bytetest_81_84 = simd_and(tmp63, tmp65);
        tmp66 = simd_and(tmp25, bytetest_87);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(tmp66, carryQ.get_carry_in(8), tmp67));
        tmp68 = simd_and(tmp67, bytetest_81_84);
        struct_Lo.cc = simd_or(tmp68, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        tmp69 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp70 = simd_and(tmp69, tmp29);
        bytetest_9a = simd_and(tmp9, tmp70);
        tmp71 = simd_or(basis_bits.bit_5, tmp16);
        tmp72 = simd_and(basis_bits.bit_4, tmp71);
        tmp73 = simd_or(basis_bits.bit_3, tmp72);
        tmp74 = simd_and(basis_bits.bit_2, tmp73);
        bytetest_80_aa = simd_andc(tmp7, tmp74);
        tmp75 = simd_and(tmp25, bytetest_9a);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(tmp75, carryQ.get_carry_in(9), tmp76));
        tmp77 = simd_and(tmp76, bytetest_80_aa);
        struct_Lo.cc = simd_or(tmp77, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_92 = simd_and(tmp9, tmp30);
        tmp78 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp79 = simd_and(tmp78, tmp10);
        bytetest_8d = simd_and(tmp13, tmp79);
        tmp80 = simd_and(tmp78, tmp16);
        tmp81 = simd_or(basis_bits.bit_3, tmp80);
        tmp82 = simd_and(basis_bits.bit_2, tmp81);
        bytetest_80_ae = simd_andc(tmp7, tmp82);
        tmp83 = simd_and(tmp23, bytetest_92);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(tmp83, carryQ.get_carry_in(10), tmp84));
        tmp85 = simd_and(tmp84, bytetest_8d);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(tmp85, carryQ.get_carry_in(11), tmp86));
        tmp87 = simd_and(tmp86, bytetest_80_ae);
        tmp88 = simd_and(basis_bits.bit_5, tmp5);
        tmp89 = simd_and(basis_bits.bit_4, tmp88);
        bytetest_80_8c = simd_andc(tmp13, tmp89);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp90 = simd_and(tmp84, bytetest_80_8c);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(tmp90, carryQ.get_carry_in(12), tmp91));
        tmp92 = simd_and(tmp91, bytetest_80_bf);
        tmp93 = simd_or(tmp92, tmp87);
        struct_Lo.cc = simd_or(tmp93, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        tmp94 = simd_and(bytetest_80_bf, tmp8);
        bytetest_93 = simd_and(tmp94, tmp36);
        bytetest_90 = simd_andc(tmp94, tmp6);
        bytetest_80_ae = simd_andc(bytetest_80_bf, tmp82);
        tmp95 = simd_and(tmp23, bytetest_93);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(tmp95, carryQ.get_carry_in(13), tmp96));
        tmp97 = simd_and(tmp96, bytetest_90);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(tmp97, carryQ.get_carry_in(14), tmp98));
        tmp99 = simd_and(tmp98, bytetest_80_ae);
        bytetest_80_8f = simd_andc(bytetest_80_bf, tmp12);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp100 = simd_and(tmp96, bytetest_80_8f);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(tmp100, carryQ.get_carry_in(15), tmp101));
        tmp102 = simd_and(tmp101, bytetest_80_bf);
        tmp103 = simd_or(tmp102, tmp99);
        struct_Lo.cc = simd_or(tmp103, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_96 = simd_and(tmp94, tmp55);
        tmp104 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp105 = simd_and(bytetest_80_bf, tmp104);
        tmp106 = simd_andc(tmp69, tmp5);
        bytetest_a8 = simd_and(tmp105, tmp106);
        tmp107 = simd_and(basis_bits.bit_3, tmp38);
        tmp108 = simd_and(basis_bits.bit_2, tmp107);
        bytetest_80_b8 = simd_andc(bytetest_80_bf, tmp108);
        tmp109 = simd_and(tmp23, bytetest_96);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(tmp109, carryQ.get_carry_in(16), tmp110));
        tmp111 = simd_and(tmp110, bytetest_a8);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(tmp111, carryQ.get_carry_in(17), tmp112));
        tmp113 = simd_and(tmp112, bytetest_80_b8);
        bytetest_a0_a7 = simd_andc(tmp105, basis_bits.bit_4);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp114 = simd_and(tmp110, bytetest_a0_a7);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(tmp114, carryQ.get_carry_in(18), tmp115));
        tmp116 = simd_and(tmp115, bytetest_80_bf);
        tmp117 = simd_or(tmp116, tmp113);
        struct_Lo.cc = simd_or(tmp117, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_96 = simd_and(tmp94, tmp55);
        tmp118 = simd_and(bytetest_80_bf, tmp2);
        bytetest_bd = simd_and(tmp118, tmp79);
        tmp119 = simd_andc(bytetest_80_8f, basis_bits.bit_4);
        bytetest_80_84 = simd_andc(tmp119, tmp88);
        tmp120 = simd_and(tmp110, bytetest_bd);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(tmp120, carryQ.get_carry_in(19), tmp121));
        tmp122 = simd_and(tmp121, bytetest_80_84);
        tmp123 = simd_andc(tmp78, tmp5);
        bytetest_bc = simd_and(tmp118, tmp123);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp124 = simd_and(tmp110, bytetest_bc);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(tmp124, carryQ.get_carry_in(20), tmp125));
        tmp126 = simd_and(tmp125, bytetest_80_bf);
        tmp127 = simd_or(tmp126, tmp122);
        struct_Lo.cc = simd_or(tmp127, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_96 = simd_and(tmp94, tmp55);
        bytetest_bd = simd_and(tmp118, tmp79);
        bytetest_90_90 = simd_andc(tmp94, tmp6);
        tmp128 = simd_and(tmp121, bytetest_90_90);
        struct_Lo.cc = simd_or(tmp128, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        tmp129 = simd_and(tmp69, tmp16);
        bytetest_9b = simd_and(tmp94, tmp129);
        bytetest_80 = simd_andc(bytetest_80_8f, tmp6);
        tmp130 = simd_or(tmp4, basis_bits.bit_6);
        bytetest_80_81 = simd_andc(bytetest_80_8f, tmp130);
        tmp131 = simd_and(tmp23, bytetest_9b);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(tmp131, carryQ.get_carry_in(21), tmp132));
        tmp133 = simd_and(tmp132, bytetest_80);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(tmp133, carryQ.get_carry_in(22), tmp134));
        tmp135 = simd_and(tmp134, bytetest_80_81);
        struct_Lo.cc = simd_or(tmp135, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        tmp136 = simd_and(tmp78, tmp29);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_b8 = simd_and(tmp118, tmp106);
        bytetest_80_83 = simd_andc(bytetest_80_8f, tmp4);
        tmp137 = simd_and(tmp23, bytetest_9e);
        carryQ.cq[23] = carryout2carry(pablo_blk_Advance(tmp137, carryQ.get_carry_in(23), tmp138));
        tmp139 = simd_and(tmp138, bytetest_b8);
        carryQ.cq[24] = carryout2carry(pablo_blk_Advance(tmp139, carryQ.get_carry_in(24), tmp140));
        tmp141 = simd_and(tmp140, bytetest_80_83);
        struct_Lo.cc = simd_or(tmp141, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_b8 = simd_and(tmp118, tmp106);
        tmp142 = simd_andc(bytetest_80_bf, basis_bits.bit_2);
        tmp143 = simd_or(basis_bits.bit_4, tmp88);
        tmp144 = simd_or(basis_bits.bit_3, tmp143);
        bytetest_85_9f = simd_and(tmp142, tmp144);
        tmp145 = simd_and(tmp140, bytetest_85_9f);
        struct_Lo.cc = simd_or(tmp145, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_b8 = simd_and(tmp118, tmp106);
        tmp146 = simd_andc(tmp105, tmp4);
        tmp147 = simd_not(basis_bits.bit_7);
        tmp148 = simd_or(simd_and(basis_bits.bit_6, tmp147), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
        bytetest_a1_a2 = simd_and(tmp146, tmp148);
        tmp149 = simd_and(tmp140, bytetest_a1_a2);
        struct_Lo.cc = simd_or(tmp149, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_b8 = simd_and(tmp118, tmp106);
        bytetest_a4_a4 = simd_and(tmp105, tmp46);
        tmp150 = simd_and(tmp140, bytetest_a4_a4);
        struct_Lo.cc = simd_or(tmp150, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_b8 = simd_and(tmp118, tmp106);
        bytetest_a7_a7 = simd_and(tmp105, tmp62);
        tmp151 = simd_and(tmp140, bytetest_a7_a7);
        struct_Lo.cc = simd_or(tmp151, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_b8 = simd_and(tmp118, tmp106);
        tmp152 = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp153 = simd_not(tmp17);
        tmp154 = simd_or(simd_and(basis_bits.bit_3, tmp153), simd_andc(tmp38, basis_bits.bit_3));
        bytetest_a9_b2 = simd_and(tmp152, tmp154);
        tmp155 = simd_and(tmp140, bytetest_a9_b2);
        struct_Lo.cc = simd_or(tmp155, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_b8 = simd_and(tmp118, tmp106);
        bytetest_b4_b7 = simd_and(tmp118, tmp45);
        tmp156 = simd_and(tmp140, bytetest_b4_b7);
        struct_Lo.cc = simd_or(tmp156, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_b8 = simd_and(tmp118, tmp106);
        tmp157 = simd_and(tmp69, tmp10);
        bytetest_b9_b9 = simd_and(tmp118, tmp157);
        tmp158 = simd_and(tmp140, bytetest_b9_b9);
        struct_Lo.cc = simd_or(tmp158, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_b8 = simd_and(tmp118, tmp106);
        bytetest_bb_bb = simd_and(tmp118, tmp129);
        tmp159 = simd_and(tmp140, bytetest_bb_bb);
        struct_Lo.cc = simd_or(tmp159, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_b9 = simd_and(tmp118, tmp157);
        bytetest_82_82 = simd_and(bytetest_80_8f, tmp30);
        tmp160 = simd_and(tmp138, bytetest_b9);
        carryQ.cq[25] = carryout2carry(pablo_blk_Advance(tmp160, carryQ.get_carry_in(25), tmp161));
        tmp162 = simd_and(tmp161, bytetest_82_82);
        struct_Lo.cc = simd_or(tmp162, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_b9 = simd_and(tmp118, tmp157);
        bytetest_87_87 = simd_and(bytetest_80_8f, tmp62);
        tmp163 = simd_and(tmp161, bytetest_87_87);
        struct_Lo.cc = simd_or(tmp163, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_b9 = simd_and(tmp118, tmp157);
        bytetest_89_89 = simd_and(bytetest_80_8f, tmp157);
        tmp164 = simd_and(tmp161, bytetest_89_89);
        struct_Lo.cc = simd_or(tmp164, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_b9 = simd_and(tmp118, tmp157);
        bytetest_8b_8b = simd_and(bytetest_80_8f, tmp129);
        tmp165 = simd_and(tmp161, bytetest_8b_8b);
        struct_Lo.cc = simd_or(tmp165, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_b9 = simd_and(tmp118, tmp157);
        tmp166 = simd_and(bytetest_80_8f, tmp78);
        bytetest_8d_8f = simd_and(tmp166, tmp5);
        tmp167 = simd_and(tmp161, bytetest_8d_8f);
        struct_Lo.cc = simd_or(tmp167, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_b9 = simd_and(tmp118, tmp157);
        tmp168 = simd_andc(tmp94, tmp4);
        bytetest_91_92 = simd_and(tmp168, tmp148);
        tmp169 = simd_and(tmp161, bytetest_91_92);
        struct_Lo.cc = simd_or(tmp169, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_b9 = simd_and(tmp118, tmp157);
        bytetest_94_94 = simd_and(tmp94, tmp46);
        tmp170 = simd_and(tmp161, bytetest_94_94);
        struct_Lo.cc = simd_or(tmp170, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_b9 = simd_and(tmp118, tmp157);
        bytetest_97_97 = simd_and(tmp94, tmp62);
        tmp171 = simd_and(tmp161, bytetest_97_97);
        struct_Lo.cc = simd_or(tmp171, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_b9 = simd_and(tmp118, tmp157);
        bytetest_99_99 = simd_and(tmp94, tmp157);
        tmp172 = simd_and(tmp161, bytetest_99_99);
        struct_Lo.cc = simd_or(tmp172, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_b9 = simd_and(tmp118, tmp157);
        bytetest_9b_9b = simd_and(tmp94, tmp129);
        tmp173 = simd_and(tmp161, bytetest_9b_9b);
        struct_Lo.cc = simd_or(tmp173, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_b9 = simd_and(tmp118, tmp157);
        bytetest_9d_9d = simd_and(tmp94, tmp79);
        tmp174 = simd_and(tmp161, bytetest_9d_9d);
        struct_Lo.cc = simd_or(tmp174, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_b9 = simd_and(tmp118, tmp157);
        bytetest_9f_9f = simd_and(tmp94, tmp80);
        tmp175 = simd_and(tmp161, bytetest_9f_9f);
        struct_Lo.cc = simd_or(tmp175, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_b9 = simd_and(tmp118, tmp157);
        bytetest_a1_a2 = simd_and(tmp146, tmp148);
        tmp176 = simd_and(tmp161, bytetest_a1_a2);
        struct_Lo.cc = simd_or(tmp176, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_b9 = simd_and(tmp118, tmp157);
        bytetest_a4_a4 = simd_and(tmp105, tmp46);
        tmp177 = simd_and(tmp161, bytetest_a4_a4);
        struct_Lo.cc = simd_or(tmp177, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_b9 = simd_and(tmp118, tmp157);
        tmp178 = simd_not(tmp71);
        tmp179 = simd_or(simd_and(basis_bits.bit_4, tmp178), simd_andc(tmp47, basis_bits.bit_4));
        bytetest_a7_aa = simd_and(tmp105, tmp179);
        tmp180 = simd_and(tmp161, bytetest_a7_aa);
        struct_Lo.cc = simd_or(tmp180, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_b9 = simd_and(tmp118, tmp157);
        tmp181 = simd_or(simd_and(basis_bits.bit_3, tmp153), simd_andc(tmp78, basis_bits.bit_3));
        bytetest_ac_b2 = simd_and(tmp152, tmp181);
        tmp182 = simd_and(tmp161, bytetest_ac_b2);
        struct_Lo.cc = simd_or(tmp182, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_b9 = simd_and(tmp118, tmp157);
        bytetest_b4_b7 = simd_and(tmp118, tmp45);
        tmp183 = simd_and(tmp161, bytetest_b4_b7);
        struct_Lo.cc = simd_or(tmp183, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_b9 = simd_and(tmp118, tmp157);
        tmp184 = simd_and(tmp118, basis_bits.bit_4);
        bytetest_b9_bc = simd_and(tmp184, tmp65);
        tmp185 = simd_and(tmp161, bytetest_b9_bc);
        struct_Lo.cc = simd_or(tmp185, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_b9 = simd_and(tmp118, tmp157);
        bytetest_be_be = simd_and(tmp118, tmp136);
        tmp186 = simd_and(tmp161, bytetest_be_be);
        struct_Lo.cc = simd_or(tmp186, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_ba = simd_and(tmp118, tmp70);
        tmp187 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
        tmp188 = simd_and(basis_bits.bit_4, tmp187);
        bytetest_80_89 = simd_andc(bytetest_80_8f, tmp188);
        tmp189 = simd_and(tmp138, bytetest_ba);
        carryQ.cq[26] = carryout2carry(pablo_blk_Advance(tmp189, carryQ.get_carry_in(26), tmp190));
        tmp191 = simd_and(tmp190, bytetest_80_89);
        struct_Lo.cc = simd_or(tmp191, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_ba = simd_and(tmp118, tmp70);
        tmp192 = simd_not(tmp78);
        tmp193 = simd_or(simd_and(basis_bits.bit_3, tmp192), simd_andc(tmp72, basis_bits.bit_3));
        bytetest_8b_9b = simd_and(tmp142, tmp193);
        tmp194 = simd_and(tmp190, bytetest_8b_9b);
        struct_Lo.cc = simd_or(tmp194, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_ba = simd_and(tmp118, tmp70);
        bytetest_a1_a3 = simd_and(tmp146, tmp5);
        tmp195 = simd_and(tmp190, bytetest_a1_a3);
        struct_Lo.cc = simd_or(tmp195, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_ba = simd_and(tmp118, tmp70);
        tmp196 = simd_not(tmp187);
        tmp197 = simd_or(simd_and(basis_bits.bit_4, tmp196), simd_andc(tmp88, basis_bits.bit_4));
        bytetest_a5_a9 = simd_and(tmp105, tmp197);
        tmp198 = simd_and(tmp190, bytetest_a5_a9);
        struct_Lo.cc = simd_or(tmp198, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp94, tmp136);
        bytetest_ba = simd_and(tmp118, tmp70);
        bytetest_ab_bb = simd_and(tmp152, tmp193);
        tmp199 = simd_and(tmp190, bytetest_ab_bb);
        struct_Lo.cc = simd_or(tmp199, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_aa = simd_and(tmp105, tmp70);
        bytetest_9b = simd_and(tmp94, tmp129);
        tmp200 = simd_and(basis_bits.bit_3, tmp48);
        bytetest_80_96 = simd_andc(tmp142, tmp200);
        tmp201 = simd_and(tmp23, bytetest_aa);
        carryQ.cq[27] = carryout2carry(pablo_blk_Advance(tmp201, carryQ.get_carry_in(27), tmp202));
        tmp203 = simd_and(tmp202, bytetest_9b);
        carryQ.cq[28] = carryout2carry(pablo_blk_Advance(tmp203, carryQ.get_carry_in(28), tmp204));
        tmp205 = simd_and(tmp204, bytetest_80_96);
        tmp206 = simd_and(basis_bits.bit_3, tmp72);
        bytetest_80_9a = simd_andc(tmp142, tmp206);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp207 = simd_and(tmp202, bytetest_80_9a);
        carryQ.cq[29] = carryout2carry(pablo_blk_Advance(tmp207, carryQ.get_carry_in(29), tmp208));
        tmp209 = simd_and(tmp208, bytetest_80_bf);
        tmp210 = simd_or(tmp209, tmp205);
        bytetest_a0_a9 = simd_andc(tmp105, tmp188);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp211 = simd_and(tmp23, bytetest_a0_a9);
        carryQ.cq[30] = carryout2carry(pablo_blk_Advance(tmp211, carryQ.get_carry_in(30), tmp212));
        tmp213 = simd_and(tmp212, bytetest_80_bf);
        carryQ.cq[31] = carryout2carry(pablo_blk_Advance(tmp213, carryQ.get_carry_in(31), tmp214));
        tmp215 = simd_and(tmp214, bytetest_80_bf);
        tmp216 = simd_or(tmp215, tmp210);
        struct_Lo.cc = simd_or(tmp216, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_ab = simd_and(tmp105, tmp129);
        bytetest_9c = simd_and(tmp94, tmp123);
        tmp217 = simd_and(basis_bits.bit_3, tmp143);
        tmp218 = simd_and(basis_bits.bit_2, tmp217);
        bytetest_80_b4 = simd_andc(bytetest_80_bf, tmp218);
        tmp219 = simd_and(tmp23, bytetest_ab);
        carryQ.cq[32] = carryout2carry(pablo_blk_Advance(tmp219, carryQ.get_carry_in(32), tmp220));
        tmp221 = simd_and(tmp220, bytetest_9c);
        carryQ.cq[33] = carryout2carry(pablo_blk_Advance(tmp221, carryQ.get_carry_in(33), tmp222));
        tmp223 = simd_and(tmp222, bytetest_80_b4);
        tmp224 = simd_and(basis_bits.bit_3, tmp78);
        bytetest_80_9b = simd_andc(tmp142, tmp224);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp225 = simd_and(tmp220, bytetest_80_9b);
        carryQ.cq[34] = carryout2carry(pablo_blk_Advance(tmp225, carryQ.get_carry_in(34), tmp226));
        tmp227 = simd_and(tmp226, bytetest_80_bf);
        tmp228 = simd_or(tmp227, tmp223);
        bytetest_aa = simd_and(tmp105, tmp70);
        tmp229 = simd_or(basis_bits.bit_2, tmp224);
        bytetest_9c_bf = simd_and(bytetest_80_bf, tmp229);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp230 = simd_and(tmp202, bytetest_9c_bf);
        carryQ.cq[35] = carryout2carry(pablo_blk_Advance(tmp230, carryQ.get_carry_in(35), tmp231));
        tmp232 = simd_and(tmp231, bytetest_80_bf);
        tmp233 = simd_or(tmp232, tmp228);
        struct_Lo.cc = simd_or(tmp233, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_ab = simd_and(tmp105, tmp129);
        bytetest_a0 = simd_andc(tmp105, tmp6);
        tmp234 = simd_and(tmp78, basis_bits.bit_6);
        tmp235 = simd_and(basis_bits.bit_3, tmp234);
        bytetest_80_9d = simd_andc(tmp142, tmp235);
        tmp236 = simd_and(tmp220, bytetest_a0);
        carryQ.cq[36] = carryout2carry(pablo_blk_Advance(tmp236, carryQ.get_carry_in(36), tmp237));
        tmp238 = simd_and(tmp237, bytetest_80_9d);
        tmp239 = simd_and(tmp94, tmp78);
        bytetest_9d_9f = simd_and(tmp239, tmp5);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp240 = simd_and(tmp220, bytetest_9d_9f);
        carryQ.cq[37] = carryout2carry(pablo_blk_Advance(tmp240, carryQ.get_carry_in(37), tmp241));
        tmp242 = simd_and(tmp241, bytetest_80_bf);
        tmp243 = simd_or(tmp242, tmp238);
        struct_Lo.cc = simd_or(tmp243, struct_Lo.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_af = simd_and(tmp105, tmp80);
        bytetest_a8 = simd_and(tmp105, tmp106);
        bytetest_80_9d = simd_andc(tmp142, tmp235);
        tmp244 = simd_and(tmp23, bytetest_af);
        carryQ.cq[38] = carryout2carry(pablo_blk_Advance(tmp244, carryQ.get_carry_in(38), tmp245));
        tmp246 = simd_and(tmp245, bytetest_a8);
        carryQ.cq[39] = carryout2carry(pablo_blk_Advance(tmp246, carryQ.get_carry_in(39), tmp247));
        tmp248 = simd_and(tmp247, bytetest_80_9d);
        bytetest_a0_a7 = simd_andc(tmp105, basis_bits.bit_4);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp249 = simd_and(tmp245, bytetest_a0_a7);
        carryQ.cq[40] = carryout2carry(pablo_blk_Advance(tmp249, carryQ.get_carry_in(40), tmp250));
        tmp251 = simd_and(tmp250, bytetest_80_bf);
        tmp252 = simd_or(tmp251, tmp248);
        struct_Lo.cc = simd_or(tmp252, struct_Lo.cc);
        tmp253 = simd_andc(tmp1, basis_bits.bit_2);
        tmp254 = simd_or(basis_bits.bit_3, tmp130);
        bytetest_c2_df = simd_and(tmp253, tmp254);
        if ((bitblock::any(bytetest_c2_df) || carryQ.CarryTest(41, 13))) {
          r80_7ff_tmp1 = simd_andc(tmp1, tmp12);
          bytetest_c2 = simd_and(r80_7ff_tmp1, tmp30);
          bytetest_aa_aa = simd_and(tmp105, tmp70);
          r80_7ff_tmp2 = simd_and(tmp21, bytetest_c2);
          carryQ.cq[41] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp2, carryQ.get_carry_in(41), r80_7ff_tmp3));
          r80_7ff_tmp4 = simd_and(r80_7ff_tmp3, bytetest_aa_aa);
          struct_Lo.cc = simd_or(r80_7ff_tmp4, struct_Lo.cc);
          bytetest_c2 = simd_and(r80_7ff_tmp1, tmp30);
          bytetest_ba_ba = simd_and(tmp118, tmp70);
          r80_7ff_tmp5 = simd_and(r80_7ff_tmp3, bytetest_ba_ba);
          struct_Lo.cc = simd_or(r80_7ff_tmp5, struct_Lo.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp55);
          bytetest_bb_bb = simd_and(tmp118, tmp129);
          r80_7ff_tmp6 = simd_and(tmp21, bytetest_c6);
          carryQ.cq[42] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp6, carryQ.get_carry_in(42), r80_7ff_tmp7));
          r80_7ff_tmp8 = simd_and(r80_7ff_tmp7, bytetest_bb_bb);
          struct_Lo.cc = simd_or(r80_7ff_tmp8, struct_Lo.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp62);
          bytetest_80_83 = simd_andc(bytetest_80_8f, tmp4);
          r80_7ff_tmp9 = simd_and(tmp21, bytetest_c7);
          carryQ.cq[43] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp9, carryQ.get_carry_in(43), r80_7ff_tmp10));
          r80_7ff_tmp11 = simd_and(r80_7ff_tmp10, bytetest_80_83);
          struct_Lo.cc = simd_or(r80_7ff_tmp11, struct_Lo.cc);
          bytetest_ca = simd_and(r80_7ff_tmp1, tmp70);
          bytetest_94_94 = simd_and(tmp94, tmp46);
          r80_7ff_tmp12 = simd_and(tmp21, bytetest_ca);
          carryQ.cq[44] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp12, carryQ.get_carry_in(44), r80_7ff_tmp13));
          r80_7ff_tmp14 = simd_and(r80_7ff_tmp13, bytetest_94_94);
          struct_Lo.cc = simd_or(r80_7ff_tmp14, struct_Lo.cc);
          r80_7ff_tmp15 = simd_and(tmp1, tmp8);
          bytetest_d7 = simd_and(r80_7ff_tmp15, tmp62);
          r80_7ff_tmp16 = simd_not(tmp73);
          r80_7ff_tmp17 = simd_or(simd_and(basis_bits.bit_2, r80_7ff_tmp16), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
          bytetest_90_aa = simd_and(bytetest_80_bf, r80_7ff_tmp17);
          r80_7ff_tmp18 = simd_and(tmp21, bytetest_d7);
          carryQ.cq[45] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp18, carryQ.get_carry_in(45), r80_7ff_tmp19));
          r80_7ff_tmp20 = simd_and(r80_7ff_tmp19, bytetest_90_aa);
          struct_Lo.cc = simd_or(r80_7ff_tmp20, struct_Lo.cc);
          bytetest_d7 = simd_and(r80_7ff_tmp15, tmp62);
          r80_7ff_tmp21 = simd_andc(tmp118, tmp4);
          bytetest_b0_b2 = simd_andc(r80_7ff_tmp21, tmp16);
          r80_7ff_tmp22 = simd_and(r80_7ff_tmp19, bytetest_b0_b2);
          struct_Lo.cc = simd_or(r80_7ff_tmp22, struct_Lo.cc);
          bytetest_d8 = simd_and(r80_7ff_tmp15, tmp106);
          bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
          r80_7ff_tmp23 = simd_and(tmp21, bytetest_d8);
          carryQ.cq[46] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp23, carryQ.get_carry_in(46), r80_7ff_tmp24));
          r80_7ff_tmp25 = simd_and(r80_7ff_tmp24, bytetest_a0_bf);
          struct_Lo.cc = simd_or(r80_7ff_tmp25, struct_Lo.cc);
          bytetest_d9 = simd_and(r80_7ff_tmp15, tmp157);
          r80_7ff_tmp26 = simd_or(simd_and(basis_bits.bit_4, tmp178), simd_andc(tmp37, basis_bits.bit_4));
          bytetest_81_8a = simd_and(bytetest_80_8f, r80_7ff_tmp26);
          r80_7ff_tmp27 = simd_and(tmp21, bytetest_d9);
          carryQ.cq[47] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp27, carryQ.get_carry_in(47), r80_7ff_tmp28));
          r80_7ff_tmp29 = simd_and(r80_7ff_tmp28, bytetest_81_8a);
          struct_Lo.cc = simd_or(r80_7ff_tmp29, struct_Lo.cc);
          bytetest_d9 = simd_and(r80_7ff_tmp15, tmp157);
          bytetest_ae_af = simd_and(tmp105, tmp234);
          r80_7ff_tmp30 = simd_and(r80_7ff_tmp28, bytetest_ae_af);
          struct_Lo.cc = simd_or(r80_7ff_tmp30, struct_Lo.cc);
          bytetest_db = simd_and(r80_7ff_tmp15, tmp129);
          r80_7ff_tmp31 = simd_and(basis_bits.bit_3, tmp4);
          bytetest_80_93 = simd_andc(tmp142, r80_7ff_tmp31);
          r80_7ff_tmp32 = simd_and(tmp21, bytetest_db);
          carryQ.cq[48] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp32, carryQ.get_carry_in(48), r80_7ff_tmp33));
          r80_7ff_tmp34 = simd_and(r80_7ff_tmp33, bytetest_80_93);
          bytetest_da = simd_and(r80_7ff_tmp15, tmp70);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r80_7ff_tmp35 = simd_and(tmp21, bytetest_da);
          carryQ.cq[49] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp35, carryQ.get_carry_in(49), r80_7ff_tmp36));
          r80_7ff_tmp37 = simd_and(r80_7ff_tmp36, bytetest_80_bf);
          bytetest_d9 = simd_and(r80_7ff_tmp15, tmp157);
          r80_7ff_tmp38 = simd_or(basis_bits.bit_4, tmp37);
          bytetest_b1_bf = simd_and(tmp118, r80_7ff_tmp38);
          r80_7ff_tmp39 = simd_and(r80_7ff_tmp28, bytetest_b1_bf);
          r80_7ff_tmp40 = simd_or(r80_7ff_tmp39, r80_7ff_tmp37);
          r80_7ff_tmp41 = simd_or(r80_7ff_tmp40, r80_7ff_tmp34);
          struct_Lo.cc = simd_or(r80_7ff_tmp41, struct_Lo.cc);
          bytetest_db = simd_and(r80_7ff_tmp15, tmp129);
          r80_7ff_tmp42 = simd_and(tmp45, tmp10);
          bytetest_95_95 = simd_and(tmp94, r80_7ff_tmp42);
          r80_7ff_tmp43 = simd_and(r80_7ff_tmp33, bytetest_95_95);
          struct_Lo.cc = simd_or(r80_7ff_tmp43, struct_Lo.cc);
          bytetest_db = simd_and(r80_7ff_tmp15, tmp129);
          bytetest_ae_af = simd_and(tmp105, tmp234);
          r80_7ff_tmp44 = simd_and(r80_7ff_tmp33, bytetest_ae_af);
          struct_Lo.cc = simd_or(r80_7ff_tmp44, struct_Lo.cc);
          bytetest_db = simd_and(r80_7ff_tmp15, tmp129);
          r80_7ff_tmp45 = simd_or(simd_and(basis_bits.bit_5, tmp64), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
          bytetest_ba_bc = simd_and(tmp184, r80_7ff_tmp45);
          r80_7ff_tmp46 = simd_and(r80_7ff_tmp33, bytetest_ba_bc);
          struct_Lo.cc = simd_or(r80_7ff_tmp46, struct_Lo.cc);
          bytetest_db = simd_and(r80_7ff_tmp15, tmp129);
          bytetest_bf_bf = simd_and(tmp118, tmp80);
          r80_7ff_tmp47 = simd_and(r80_7ff_tmp33, bytetest_bf_bf);
          struct_Lo.cc = simd_or(r80_7ff_tmp47, struct_Lo.cc);
          bytetest_dc = simd_and(r80_7ff_tmp15, tmp123);
          bytetest_90_90 = simd_andc(tmp94, tmp6);
          r80_7ff_tmp48 = simd_and(tmp21, bytetest_dc);
          carryQ.cq[50] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp48, carryQ.get_carry_in(50), r80_7ff_tmp49));
          r80_7ff_tmp50 = simd_and(r80_7ff_tmp49, bytetest_90_90);
          struct_Lo.cc = simd_or(r80_7ff_tmp50, struct_Lo.cc);
          bytetest_dc = simd_and(r80_7ff_tmp15, tmp123);
          r80_7ff_tmp51 = simd_and(basis_bits.bit_3, tmp130);
          r80_7ff_tmp52 = simd_or(simd_and(basis_bits.bit_2, tmp31), simd_andc(r80_7ff_tmp51, basis_bits.bit_2));
          bytetest_92_af = simd_and(bytetest_80_bf, r80_7ff_tmp52);
          r80_7ff_tmp53 = simd_and(r80_7ff_tmp49, bytetest_92_af);
          struct_Lo.cc = simd_or(r80_7ff_tmp53, struct_Lo.cc);
          bytetest_de = simd_and(r80_7ff_tmp15, tmp136);
          r80_7ff_tmp54 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
          r80_7ff_tmp55 = simd_or(basis_bits.bit_4, r80_7ff_tmp54);
          r80_7ff_tmp56 = simd_or(basis_bits.bit_3, r80_7ff_tmp55);
          r80_7ff_tmp57 = simd_and(basis_bits.bit_2, r80_7ff_tmp56);
          bytetest_80_a5 = simd_andc(bytetest_80_bf, r80_7ff_tmp57);
          r80_7ff_tmp58 = simd_and(tmp21, bytetest_de);
          carryQ.cq[51] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp58, carryQ.get_carry_in(51), r80_7ff_tmp59));
          r80_7ff_tmp60 = simd_and(r80_7ff_tmp59, bytetest_80_a5);
          bytetest_dd = simd_and(r80_7ff_tmp15, tmp79);
          r80_7ff_tmp61 = simd_and(tmp78, tmp5);
          r80_7ff_tmp62 = simd_or(basis_bits.bit_3, r80_7ff_tmp61);
          r80_7ff_tmp63 = simd_or(basis_bits.bit_2, r80_7ff_tmp62);
          bytetest_8d_bf = simd_and(bytetest_80_bf, r80_7ff_tmp63);
          r80_7ff_tmp64 = simd_and(tmp21, bytetest_dd);
          carryQ.cq[52] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp64, carryQ.get_carry_in(52), r80_7ff_tmp65));
          r80_7ff_tmp66 = simd_and(r80_7ff_tmp65, bytetest_8d_bf);
          r80_7ff_tmp67 = simd_or(r80_7ff_tmp66, r80_7ff_tmp60);
          struct_Lo.cc = simd_or(r80_7ff_tmp67, struct_Lo.cc);
          bytetest_de = simd_and(r80_7ff_tmp15, tmp136);
          bytetest_b1_b1 = simd_and(tmp118, tmp11);
          r80_7ff_tmp68 = simd_and(r80_7ff_tmp59, bytetest_b1_b1);
          struct_Lo.cc = simd_or(r80_7ff_tmp68, struct_Lo.cc);
          bytetest_df = simd_and(r80_7ff_tmp15, tmp80);
          r80_7ff_tmp69 = simd_or(basis_bits.bit_3, tmp188);
          r80_7ff_tmp70 = simd_or(simd_and(basis_bits.bit_2, r80_7ff_tmp16), simd_andc(r80_7ff_tmp69, basis_bits.bit_2));
          bytetest_8a_aa = simd_and(bytetest_80_bf, r80_7ff_tmp70);
          r80_7ff_tmp71 = simd_and(tmp21, bytetest_df);
          carryQ.cq[53] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp71, carryQ.get_carry_in(53), r80_7ff_tmp72));
          r80_7ff_tmp73 = simd_and(r80_7ff_tmp72, bytetest_8a_aa);
          struct_Lo.cc = simd_or(r80_7ff_tmp73, struct_Lo.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(41, 13);
        }
        tmp255 = simd_and(tmp1, tmp104);
        tmp256 = simd_or(basis_bits.bit_4, tmp37);
        bytetest_e1_ef = simd_and(tmp255, tmp256);
        bytetest_e0 = simd_andc(tmp255, tmp6);
        bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp257 = simd_and(tmp21, bytetest_e0);
        carryQ.cq[54] = carryout2carry(pablo_blk_Advance(tmp257, carryQ.get_carry_in(54), tmp258));
        tmp259 = simd_and(tmp258, bytetest_a0_bf);
        tmp260 = simd_or(tmp259, bytetest_e1_ef);
        if ((bitblock::any(tmp260) || carryQ.CarryTest(55, 142))) {
          r800_ffff_tmp1 = simd_and(tmp1, tmp104);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a0 = simd_andc(tmp105, tmp6);
          r800_ffff_tmp2 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
          r800_ffff_tmp3 = simd_or(basis_bits.bit_4, r800_ffff_tmp2);
          r800_ffff_tmp4 = simd_and(basis_bits.bit_3, r800_ffff_tmp3);
          bytetest_80_95 = simd_andc(tmp142, r800_ffff_tmp4);
          r800_ffff_tmp5 = simd_and(tmp21, bytetest_e0);
          carryQ.cq[55] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp5, carryQ.get_carry_in(55), r800_ffff_tmp6));
          r800_ffff_tmp7 = simd_and(r800_ffff_tmp6, bytetest_a0);
          carryQ.cq[56] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp7, carryQ.get_carry_in(56), r800_ffff_tmp8));
          r800_ffff_tmp9 = simd_and(r800_ffff_tmp8, bytetest_80_95);
          struct_Lo.cc = simd_or(r800_ffff_tmp9, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a1 = simd_and(tmp105, tmp11);
          bytetest_80_98 = simd_andc(tmp142, tmp107);
          r800_ffff_tmp10 = simd_and(r800_ffff_tmp6, bytetest_a1);
          carryQ.cq[57] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp10, carryQ.get_carry_in(57), r800_ffff_tmp11));
          r800_ffff_tmp12 = simd_and(r800_ffff_tmp11, bytetest_80_98);
          struct_Lo.cc = simd_or(r800_ffff_tmp12, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a2 = simd_and(tmp105, tmp30);
          bytetest_a0_a0 = simd_andc(tmp105, tmp6);
          r800_ffff_tmp13 = simd_and(r800_ffff_tmp6, bytetest_a2);
          carryQ.cq[58] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp13, carryQ.get_carry_in(58), r800_ffff_tmp14));
          r800_ffff_tmp15 = simd_and(r800_ffff_tmp14, bytetest_a0_a0);
          struct_Lo.cc = simd_or(r800_ffff_tmp15, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a2 = simd_and(tmp105, tmp30);
          r800_ffff_tmp16 = simd_not(tmp88);
          r800_ffff_tmp17 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp16), simd_andc(tmp187, basis_bits.bit_4));
          bytetest_a2_ac = simd_and(tmp105, r800_ffff_tmp17);
          r800_ffff_tmp18 = simd_and(r800_ffff_tmp14, bytetest_a2_ac);
          struct_Lo.cc = simd_or(r800_ffff_tmp18, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a4 = simd_and(tmp105, tmp46);
          r800_ffff_tmp19 = simd_and(basis_bits.bit_3, tmp188);
          r800_ffff_tmp20 = simd_not(r800_ffff_tmp19);
          r800_ffff_tmp21 = simd_or(basis_bits.bit_3, tmp4);
          r800_ffff_tmp22 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp20), simd_andc(r800_ffff_tmp21, basis_bits.bit_2));
          bytetest_84_b9 = simd_and(bytetest_80_bf, r800_ffff_tmp22);
          r800_ffff_tmp23 = simd_and(r800_ffff_tmp6, bytetest_a4);
          carryQ.cq[59] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp23, carryQ.get_carry_in(59), r800_ffff_tmp24));
          r800_ffff_tmp25 = simd_and(r800_ffff_tmp24, bytetest_84_b9);
          struct_Lo.cc = simd_or(r800_ffff_tmp25, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a4 = simd_and(tmp105, tmp46);
          bytetest_bd_bd = simd_and(tmp118, tmp79);
          r800_ffff_tmp26 = simd_and(r800_ffff_tmp24, bytetest_bd_bd);
          struct_Lo.cc = simd_or(r800_ffff_tmp26, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          r800_ffff_tmp27 = simd_and(tmp45, tmp10);
          bytetest_a5 = simd_and(tmp105, r800_ffff_tmp27);
          bytetest_90_90 = simd_andc(tmp94, tmp6);
          r800_ffff_tmp28 = simd_and(r800_ffff_tmp6, bytetest_a5);
          carryQ.cq[60] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp28, carryQ.get_carry_in(60), r800_ffff_tmp29));
          r800_ffff_tmp30 = simd_and(r800_ffff_tmp29, bytetest_90_90);
          struct_Lo.cc = simd_or(r800_ffff_tmp30, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a5 = simd_and(tmp105, r800_ffff_tmp27);
          r800_ffff_tmp31 = simd_not(tmp254);
          r800_ffff_tmp32 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp31), simd_andc(tmp14, basis_bits.bit_2));
          bytetest_98_a1 = simd_and(bytetest_80_bf, r800_ffff_tmp32);
          r800_ffff_tmp33 = simd_and(r800_ffff_tmp29, bytetest_98_a1);
          struct_Lo.cc = simd_or(r800_ffff_tmp33, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a5 = simd_and(tmp105, r800_ffff_tmp27);
          r800_ffff_tmp34 = simd_andc(tmp118, basis_bits.bit_4);
          bytetest_b2_b7 = simd_and(r800_ffff_tmp34, tmp187);
          r800_ffff_tmp35 = simd_and(r800_ffff_tmp29, bytetest_b2_b7);
          struct_Lo.cc = simd_or(r800_ffff_tmp35, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a5 = simd_and(tmp105, r800_ffff_tmp27);
          bytetest_b9_bf = simd_and(tmp184, tmp37);
          r800_ffff_tmp36 = simd_and(r800_ffff_tmp29, bytetest_b9_bf);
          struct_Lo.cc = simd_or(r800_ffff_tmp36, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a6 = simd_and(tmp105, tmp55);
          r800_ffff_tmp37 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp16), simd_andc(tmp88, basis_bits.bit_4));
          bytetest_85_8c = simd_and(bytetest_80_8f, r800_ffff_tmp37);
          r800_ffff_tmp38 = simd_and(r800_ffff_tmp6, bytetest_a6);
          carryQ.cq[61] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp38, carryQ.get_carry_in(61), r800_ffff_tmp39));
          r800_ffff_tmp40 = simd_and(r800_ffff_tmp39, bytetest_85_8c);
          struct_Lo.cc = simd_or(r800_ffff_tmp40, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a6 = simd_and(tmp105, tmp55);
          r800_ffff_tmp41 = simd_not(tmp6);
          r800_ffff_tmp42 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp41), simd_andc(tmp80, basis_bits.bit_3));
          bytetest_8f_90 = simd_and(tmp142, r800_ffff_tmp42);
          r800_ffff_tmp43 = simd_and(r800_ffff_tmp39, bytetest_8f_90);
          struct_Lo.cc = simd_or(r800_ffff_tmp43, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a6 = simd_and(tmp105, tmp55);
          r800_ffff_tmp44 = simd_or(simd_and(basis_bits.bit_2, tmp40), simd_andc(tmp56, basis_bits.bit_2));
          bytetest_93_a8 = simd_and(bytetest_80_bf, r800_ffff_tmp44);
          r800_ffff_tmp45 = simd_and(r800_ffff_tmp39, bytetest_93_a8);
          struct_Lo.cc = simd_or(r800_ffff_tmp45, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a6 = simd_and(tmp105, tmp55);
          r800_ffff_tmp46 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp41), simd_andc(tmp188, basis_bits.bit_3));
          bytetest_aa_b0 = simd_and(tmp152, r800_ffff_tmp46);
          r800_ffff_tmp47 = simd_and(r800_ffff_tmp39, bytetest_aa_b0);
          struct_Lo.cc = simd_or(r800_ffff_tmp47, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a6 = simd_and(tmp105, tmp55);
          bytetest_b2_b2 = simd_and(tmp118, tmp30);
          r800_ffff_tmp48 = simd_and(r800_ffff_tmp39, bytetest_b2_b2);
          struct_Lo.cc = simd_or(r800_ffff_tmp48, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a6 = simd_and(tmp105, tmp55);
          r800_ffff_tmp49 = simd_or(simd_and(basis_bits.bit_4, tmp196), simd_andc(r800_ffff_tmp2, basis_bits.bit_4));
          bytetest_b6_b9 = simd_and(tmp118, r800_ffff_tmp49);
          r800_ffff_tmp50 = simd_and(r800_ffff_tmp39, bytetest_b6_b9);
          struct_Lo.cc = simd_or(r800_ffff_tmp50, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a6 = simd_and(tmp105, tmp55);
          bytetest_bd_bd = simd_and(tmp118, tmp79);
          r800_ffff_tmp51 = simd_and(r800_ffff_tmp39, bytetest_bd_bd);
          struct_Lo.cc = simd_or(r800_ffff_tmp51, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a7 = simd_and(tmp105, tmp62);
          bytetest_8e_8e = simd_and(bytetest_80_8f, tmp136);
          r800_ffff_tmp52 = simd_and(r800_ffff_tmp6, bytetest_a7);
          carryQ.cq[62] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp52, carryQ.get_carry_in(62), r800_ffff_tmp53));
          r800_ffff_tmp54 = simd_and(r800_ffff_tmp53, bytetest_8e_8e);
          struct_Lo.cc = simd_or(r800_ffff_tmp54, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a7 = simd_and(tmp105, tmp62);
          r800_ffff_tmp55 = simd_andc(tmp78, basis_bits.bit_6);
          bytetest_9c_9d = simd_and(tmp94, r800_ffff_tmp55);
          r800_ffff_tmp56 = simd_and(r800_ffff_tmp53, bytetest_9c_9d);
          struct_Lo.cc = simd_or(r800_ffff_tmp56, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a7 = simd_and(tmp105, tmp62);
          r800_ffff_tmp57 = simd_and(basis_bits.bit_3, tmp80);
          r800_ffff_tmp58 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp31), simd_andc(r800_ffff_tmp57, basis_bits.bit_2));
          bytetest_9f_a1 = simd_and(bytetest_80_bf, r800_ffff_tmp58);
          r800_ffff_tmp59 = simd_and(r800_ffff_tmp53, bytetest_9f_a1);
          struct_Lo.cc = simd_or(r800_ffff_tmp59, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a7 = simd_and(tmp105, tmp62);
          bytetest_b0_b1 = simd_andc(tmp118, tmp130);
          r800_ffff_tmp60 = simd_and(r800_ffff_tmp53, bytetest_b0_b1);
          struct_Lo.cc = simd_or(r800_ffff_tmp60, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a8 = simd_and(tmp105, tmp106);
          r800_ffff_tmp61 = simd_or(simd_and(basis_bits.bit_4, tmp178), simd_andc(tmp88, basis_bits.bit_4));
          bytetest_85_8a = simd_and(bytetest_80_8f, r800_ffff_tmp61);
          r800_ffff_tmp62 = simd_and(r800_ffff_tmp6, bytetest_a8);
          carryQ.cq[63] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp62, carryQ.get_carry_in(63), r800_ffff_tmp63));
          r800_ffff_tmp64 = simd_and(r800_ffff_tmp63, bytetest_85_8a);
          struct_Lo.cc = simd_or(r800_ffff_tmp64, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a8 = simd_and(tmp105, tmp106);
          bytetest_8f_90 = simd_and(tmp142, r800_ffff_tmp42);
          r800_ffff_tmp65 = simd_and(r800_ffff_tmp63, bytetest_8f_90);
          struct_Lo.cc = simd_or(r800_ffff_tmp65, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a8 = simd_and(tmp105, tmp106);
          bytetest_93_a8 = simd_and(bytetest_80_bf, r800_ffff_tmp44);
          r800_ffff_tmp66 = simd_and(r800_ffff_tmp63, bytetest_93_a8);
          struct_Lo.cc = simd_or(r800_ffff_tmp66, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a8 = simd_and(tmp105, tmp106);
          bytetest_aa_b0 = simd_and(tmp152, r800_ffff_tmp46);
          r800_ffff_tmp67 = simd_and(r800_ffff_tmp63, bytetest_aa_b0);
          struct_Lo.cc = simd_or(r800_ffff_tmp67, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a8 = simd_and(tmp105, tmp106);
          r800_ffff_tmp68 = simd_andc(basis_bits.bit_6, tmp4);
          bytetest_b2_b3 = simd_and(tmp118, r800_ffff_tmp68);
          r800_ffff_tmp69 = simd_and(r800_ffff_tmp63, bytetest_b2_b3);
          struct_Lo.cc = simd_or(r800_ffff_tmp69, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a8 = simd_and(tmp105, tmp106);
          bytetest_b5_b6 = simd_and(bytetest_b4_b7, tmp148);
          r800_ffff_tmp70 = simd_and(r800_ffff_tmp63, bytetest_b5_b6);
          struct_Lo.cc = simd_or(r800_ffff_tmp70, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a8 = simd_and(tmp105, tmp106);
          r800_ffff_tmp71 = simd_andc(tmp69, basis_bits.bit_6);
          bytetest_b8_b9 = simd_and(tmp118, r800_ffff_tmp71);
          r800_ffff_tmp72 = simd_and(r800_ffff_tmp63, bytetest_b8_b9);
          struct_Lo.cc = simd_or(r800_ffff_tmp72, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a9 = simd_and(tmp105, tmp157);
          r800_ffff_tmp73 = simd_and(tmp94, basis_bits.bit_4);
          bytetest_99_9c = simd_and(r800_ffff_tmp73, tmp65);
          r800_ffff_tmp74 = simd_and(r800_ffff_tmp6, bytetest_a9);
          carryQ.cq[64] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp74, carryQ.get_carry_in(64), r800_ffff_tmp75));
          r800_ffff_tmp76 = simd_and(r800_ffff_tmp75, bytetest_99_9c);
          struct_Lo.cc = simd_or(r800_ffff_tmp76, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a9 = simd_and(tmp105, tmp157);
          bytetest_9e_9e = simd_and(tmp94, tmp136);
          r800_ffff_tmp77 = simd_and(r800_ffff_tmp75, bytetest_9e_9e);
          struct_Lo.cc = simd_or(r800_ffff_tmp77, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a9 = simd_and(tmp105, tmp157);
          r800_ffff_tmp78 = simd_or(simd_and(basis_bits.bit_5, tmp64), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
          bytetest_b2_b4 = simd_and(r800_ffff_tmp34, r800_ffff_tmp78);
          r800_ffff_tmp79 = simd_and(r800_ffff_tmp75, bytetest_b2_b4);
          struct_Lo.cc = simd_or(r800_ffff_tmp79, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_aa = simd_and(tmp105, tmp70);
          r800_ffff_tmp80 = simd_not(r800_ffff_tmp2);
          r800_ffff_tmp81 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp80), simd_andc(tmp88, basis_bits.bit_4));
          bytetest_85_8d = simd_and(bytetest_80_8f, r800_ffff_tmp81);
          r800_ffff_tmp82 = simd_and(r800_ffff_tmp6, bytetest_aa);
          carryQ.cq[65] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp82, carryQ.get_carry_in(65), r800_ffff_tmp83));
          r800_ffff_tmp84 = simd_and(r800_ffff_tmp83, bytetest_85_8d);
          struct_Lo.cc = simd_or(r800_ffff_tmp84, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_aa = simd_and(tmp105, tmp70);
          r800_ffff_tmp85 = simd_not(tmp130);
          r800_ffff_tmp86 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp85), simd_andc(tmp80, basis_bits.bit_3));
          bytetest_8f_91 = simd_and(tmp142, r800_ffff_tmp86);
          r800_ffff_tmp87 = simd_and(r800_ffff_tmp83, bytetest_8f_91);
          struct_Lo.cc = simd_or(r800_ffff_tmp87, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_aa = simd_and(tmp105, tmp70);
          bytetest_93_a8 = simd_and(bytetest_80_bf, r800_ffff_tmp44);
          r800_ffff_tmp88 = simd_and(r800_ffff_tmp83, bytetest_93_a8);
          struct_Lo.cc = simd_or(r800_ffff_tmp88, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_aa = simd_and(tmp105, tmp70);
          bytetest_aa_b0 = simd_and(tmp152, r800_ffff_tmp46);
          r800_ffff_tmp89 = simd_and(r800_ffff_tmp83, bytetest_aa_b0);
          struct_Lo.cc = simd_or(r800_ffff_tmp89, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_aa = simd_and(tmp105, tmp70);
          bytetest_b2_b3 = simd_and(tmp118, r800_ffff_tmp68);
          r800_ffff_tmp90 = simd_and(r800_ffff_tmp83, bytetest_b2_b3);
          struct_Lo.cc = simd_or(r800_ffff_tmp90, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_aa = simd_and(tmp105, tmp70);
          bytetest_b5_b9 = simd_and(tmp118, tmp197);
          r800_ffff_tmp91 = simd_and(r800_ffff_tmp83, bytetest_b5_b9);
          struct_Lo.cc = simd_or(r800_ffff_tmp91, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_aa = simd_and(tmp105, tmp70);
          bytetest_bd_bd = simd_and(tmp118, tmp79);
          r800_ffff_tmp92 = simd_and(r800_ffff_tmp83, bytetest_bd_bd);
          struct_Lo.cc = simd_or(r800_ffff_tmp92, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ab = simd_and(tmp105, tmp129);
          bytetest_90_90 = simd_andc(tmp94, tmp6);
          r800_ffff_tmp93 = simd_and(r800_ffff_tmp6, bytetest_ab);
          carryQ.cq[66] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp93, carryQ.get_carry_in(66), r800_ffff_tmp94));
          r800_ffff_tmp95 = simd_and(r800_ffff_tmp94, bytetest_90_90);
          struct_Lo.cc = simd_or(r800_ffff_tmp95, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ab = simd_and(tmp105, tmp129);
          bytetest_a0_a1 = simd_andc(tmp105, tmp130);
          r800_ffff_tmp96 = simd_and(r800_ffff_tmp94, bytetest_a0_a1);
          struct_Lo.cc = simd_or(r800_ffff_tmp96, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ac = simd_and(tmp105, tmp123);
          bytetest_85_8c = simd_and(bytetest_80_8f, r800_ffff_tmp37);
          r800_ffff_tmp97 = simd_and(r800_ffff_tmp6, bytetest_ac);
          carryQ.cq[67] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp97, carryQ.get_carry_in(67), r800_ffff_tmp98));
          r800_ffff_tmp99 = simd_and(r800_ffff_tmp98, bytetest_85_8c);
          struct_Lo.cc = simd_or(r800_ffff_tmp99, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ac = simd_and(tmp105, tmp123);
          bytetest_8f_90 = simd_and(tmp142, r800_ffff_tmp42);
          r800_ffff_tmp100 = simd_and(r800_ffff_tmp98, bytetest_8f_90);
          struct_Lo.cc = simd_or(r800_ffff_tmp100, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ac = simd_and(tmp105, tmp123);
          bytetest_93_a8 = simd_and(bytetest_80_bf, r800_ffff_tmp44);
          r800_ffff_tmp101 = simd_and(r800_ffff_tmp98, bytetest_93_a8);
          struct_Lo.cc = simd_or(r800_ffff_tmp101, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ac = simd_and(tmp105, tmp123);
          bytetest_aa_b0 = simd_and(tmp152, r800_ffff_tmp46);
          r800_ffff_tmp102 = simd_and(r800_ffff_tmp98, bytetest_aa_b0);
          struct_Lo.cc = simd_or(r800_ffff_tmp102, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ac = simd_and(tmp105, tmp123);
          bytetest_b2_b3 = simd_and(tmp118, r800_ffff_tmp68);
          r800_ffff_tmp103 = simd_and(r800_ffff_tmp98, bytetest_b2_b3);
          struct_Lo.cc = simd_or(r800_ffff_tmp103, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ac = simd_and(tmp105, tmp123);
          bytetest_b5_b9 = simd_and(tmp118, tmp197);
          r800_ffff_tmp104 = simd_and(r800_ffff_tmp98, bytetest_b5_b9);
          struct_Lo.cc = simd_or(r800_ffff_tmp104, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ac = simd_and(tmp105, tmp123);
          bytetest_bd_bd = simd_and(tmp118, tmp79);
          r800_ffff_tmp105 = simd_and(r800_ffff_tmp98, bytetest_bd_bd);
          struct_Lo.cc = simd_or(r800_ffff_tmp105, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ad = simd_and(tmp105, tmp79);
          bytetest_9c_9d = simd_and(tmp94, r800_ffff_tmp55);
          r800_ffff_tmp106 = simd_and(r800_ffff_tmp6, bytetest_ad);
          carryQ.cq[68] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp106, carryQ.get_carry_in(68), r800_ffff_tmp107));
          r800_ffff_tmp108 = simd_and(r800_ffff_tmp107, bytetest_9c_9d);
          struct_Lo.cc = simd_or(r800_ffff_tmp108, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ad = simd_and(tmp105, tmp79);
          bytetest_9f_a1 = simd_and(bytetest_80_bf, r800_ffff_tmp58);
          r800_ffff_tmp109 = simd_and(r800_ffff_tmp107, bytetest_9f_a1);
          struct_Lo.cc = simd_or(r800_ffff_tmp109, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ad = simd_and(tmp105, tmp79);
          bytetest_b1_b1 = simd_and(tmp118, tmp11);
          r800_ffff_tmp110 = simd_and(r800_ffff_tmp107, bytetest_b1_b1);
          struct_Lo.cc = simd_or(r800_ffff_tmp110, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ae = simd_and(tmp105, tmp136);
          bytetest_83_83 = simd_and(bytetest_80_8f, tmp36);
          r800_ffff_tmp111 = simd_and(r800_ffff_tmp6, bytetest_ae);
          carryQ.cq[69] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp111, carryQ.get_carry_in(69), r800_ffff_tmp112));
          r800_ffff_tmp113 = simd_and(r800_ffff_tmp112, bytetest_83_83);
          struct_Lo.cc = simd_or(r800_ffff_tmp113, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ae = simd_and(tmp105, tmp136);
          bytetest_85_8a = simd_and(bytetest_80_8f, r800_ffff_tmp61);
          r800_ffff_tmp114 = simd_and(r800_ffff_tmp112, bytetest_85_8a);
          struct_Lo.cc = simd_or(r800_ffff_tmp114, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ae = simd_and(tmp105, tmp136);
          r800_ffff_tmp115 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp41), simd_andc(tmp234, basis_bits.bit_3));
          bytetest_8e_90 = simd_and(tmp142, r800_ffff_tmp115);
          r800_ffff_tmp116 = simd_and(r800_ffff_tmp112, bytetest_8e_90);
          struct_Lo.cc = simd_or(r800_ffff_tmp116, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ae = simd_and(tmp105, tmp136);
          r800_ffff_tmp117 = simd_andc(tmp94, basis_bits.bit_4);
          r800_ffff_tmp118 = simd_not(basis_bits.bit_6);
          r800_ffff_tmp119 = simd_or(simd_and(basis_bits.bit_5, r800_ffff_tmp118), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
          bytetest_92_95 = simd_and(r800_ffff_tmp117, r800_ffff_tmp119);
          r800_ffff_tmp120 = simd_and(r800_ffff_tmp112, bytetest_92_95);
          struct_Lo.cc = simd_or(r800_ffff_tmp120, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ae = simd_and(tmp105, tmp136);
          r800_ffff_tmp121 = simd_and(tmp94, tmp69);
          bytetest_99_9a = simd_and(r800_ffff_tmp121, tmp148);
          r800_ffff_tmp122 = simd_and(r800_ffff_tmp112, bytetest_99_9a);
          struct_Lo.cc = simd_or(r800_ffff_tmp122, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ae = simd_and(tmp105, tmp136);
          bytetest_9c_9c = simd_and(tmp94, tmp123);
          r800_ffff_tmp123 = simd_and(r800_ffff_tmp112, bytetest_9c_9c);
          struct_Lo.cc = simd_or(r800_ffff_tmp123, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ae = simd_and(tmp105, tmp136);
          bytetest_9e_9f = simd_and(tmp94, tmp234);
          r800_ffff_tmp124 = simd_and(r800_ffff_tmp112, bytetest_9e_9f);
          struct_Lo.cc = simd_or(r800_ffff_tmp124, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ae = simd_and(tmp105, tmp136);
          r800_ffff_tmp125 = simd_or(simd_and(basis_bits.bit_5, tmp64), simd_andc(tmp16, basis_bits.bit_5));
          bytetest_a3_a4 = simd_and(bytetest_a0_a7, r800_ffff_tmp125);
          r800_ffff_tmp126 = simd_and(r800_ffff_tmp112, bytetest_a3_a4);
          struct_Lo.cc = simd_or(r800_ffff_tmp126, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ae = simd_and(tmp105, tmp136);
          r800_ffff_tmp127 = simd_and(tmp105, tmp69);
          bytetest_a8_aa = simd_andc(r800_ffff_tmp127, tmp16);
          r800_ffff_tmp128 = simd_and(r800_ffff_tmp112, bytetest_a8_aa);
          struct_Lo.cc = simd_or(r800_ffff_tmp128, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ae = simd_and(tmp105, tmp136);
          r800_ffff_tmp129 = simd_not(tmp188);
          r800_ffff_tmp130 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp129), simd_andc(tmp234, basis_bits.bit_3));
          bytetest_ae_b9 = simd_and(tmp152, r800_ffff_tmp130);
          r800_ffff_tmp131 = simd_and(r800_ffff_tmp112, bytetest_ae_b9);
          struct_Lo.cc = simd_or(r800_ffff_tmp131, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_af = simd_and(tmp105, tmp80);
          bytetest_90_90 = simd_andc(tmp94, tmp6);
          r800_ffff_tmp132 = simd_and(r800_ffff_tmp6, bytetest_af);
          carryQ.cq[70] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp132, carryQ.get_carry_in(70), r800_ffff_tmp133));
          r800_ffff_tmp134 = simd_and(r800_ffff_tmp133, bytetest_90_90);
          struct_Lo.cc = simd_or(r800_ffff_tmp134, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b0 = simd_andc(tmp118, tmp6);
          bytetest_85_8c = simd_and(bytetest_80_8f, r800_ffff_tmp37);
          r800_ffff_tmp135 = simd_and(r800_ffff_tmp6, bytetest_b0);
          carryQ.cq[71] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp135, carryQ.get_carry_in(71), r800_ffff_tmp136));
          r800_ffff_tmp137 = simd_and(r800_ffff_tmp136, bytetest_85_8c);
          struct_Lo.cc = simd_or(r800_ffff_tmp137, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b0 = simd_andc(tmp118, tmp6);
          bytetest_8e_90 = simd_and(tmp142, r800_ffff_tmp115);
          r800_ffff_tmp138 = simd_and(r800_ffff_tmp136, bytetest_8e_90);
          struct_Lo.cc = simd_or(r800_ffff_tmp138, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b0 = simd_andc(tmp118, tmp6);
          r800_ffff_tmp139 = simd_and(basis_bits.bit_3, tmp130);
          r800_ffff_tmp140 = simd_or(simd_and(basis_bits.bit_2, tmp40), simd_andc(r800_ffff_tmp139, basis_bits.bit_2));
          bytetest_92_a8 = simd_and(bytetest_80_bf, r800_ffff_tmp140);
          r800_ffff_tmp141 = simd_and(r800_ffff_tmp136, bytetest_92_a8);
          struct_Lo.cc = simd_or(r800_ffff_tmp141, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b0 = simd_andc(tmp118, tmp6);
          r800_ffff_tmp142 = simd_not(tmp4);
          r800_ffff_tmp143 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp142), simd_andc(tmp188, basis_bits.bit_3));
          bytetest_aa_b3 = simd_and(tmp152, r800_ffff_tmp143);
          r800_ffff_tmp144 = simd_and(r800_ffff_tmp136, bytetest_aa_b3);
          struct_Lo.cc = simd_or(r800_ffff_tmp144, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b0 = simd_andc(tmp118, tmp6);
          bytetest_b5_b9 = simd_and(tmp118, tmp197);
          r800_ffff_tmp145 = simd_and(r800_ffff_tmp136, bytetest_b5_b9);
          struct_Lo.cc = simd_or(r800_ffff_tmp145, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b0 = simd_andc(tmp118, tmp6);
          bytetest_bd_bd = simd_and(tmp118, tmp79);
          r800_ffff_tmp146 = simd_and(r800_ffff_tmp136, bytetest_bd_bd);
          struct_Lo.cc = simd_or(r800_ffff_tmp146, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b1 = simd_and(tmp118, tmp11);
          bytetest_98_99 = simd_and(tmp94, r800_ffff_tmp71);
          r800_ffff_tmp147 = simd_and(r800_ffff_tmp6, bytetest_b1);
          carryQ.cq[72] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp147, carryQ.get_carry_in(72), r800_ffff_tmp148));
          r800_ffff_tmp149 = simd_and(r800_ffff_tmp148, bytetest_98_99);
          struct_Lo.cc = simd_or(r800_ffff_tmp149, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b1 = simd_and(tmp118, tmp11);
          bytetest_a0_a1 = simd_andc(tmp105, tmp130);
          r800_ffff_tmp150 = simd_and(r800_ffff_tmp148, bytetest_a0_a1);
          struct_Lo.cc = simd_or(r800_ffff_tmp150, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b2 = simd_and(tmp118, tmp30);
          bytetest_85_8c = simd_and(bytetest_80_8f, r800_ffff_tmp37);
          r800_ffff_tmp151 = simd_and(r800_ffff_tmp6, bytetest_b2);
          carryQ.cq[73] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp151, carryQ.get_carry_in(73), r800_ffff_tmp152));
          r800_ffff_tmp153 = simd_and(r800_ffff_tmp152, bytetest_85_8c);
          struct_Lo.cc = simd_or(r800_ffff_tmp153, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b2 = simd_and(tmp118, tmp30);
          bytetest_8e_90 = simd_and(tmp142, r800_ffff_tmp115);
          r800_ffff_tmp154 = simd_and(r800_ffff_tmp152, bytetest_8e_90);
          struct_Lo.cc = simd_or(r800_ffff_tmp154, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b2 = simd_and(tmp118, tmp30);
          bytetest_92_a8 = simd_and(bytetest_80_bf, r800_ffff_tmp140);
          r800_ffff_tmp155 = simd_and(r800_ffff_tmp152, bytetest_92_a8);
          struct_Lo.cc = simd_or(r800_ffff_tmp155, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b2 = simd_and(tmp118, tmp30);
          bytetest_aa_b3 = simd_and(tmp152, r800_ffff_tmp143);
          r800_ffff_tmp156 = simd_and(r800_ffff_tmp152, bytetest_aa_b3);
          struct_Lo.cc = simd_or(r800_ffff_tmp156, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b2 = simd_and(tmp118, tmp30);
          bytetest_b5_b9 = simd_and(tmp118, tmp197);
          r800_ffff_tmp157 = simd_and(r800_ffff_tmp152, bytetest_b5_b9);
          struct_Lo.cc = simd_or(r800_ffff_tmp157, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b2 = simd_and(tmp118, tmp30);
          bytetest_bd_bd = simd_and(tmp118, tmp79);
          r800_ffff_tmp158 = simd_and(r800_ffff_tmp152, bytetest_bd_bd);
          struct_Lo.cc = simd_or(r800_ffff_tmp158, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b3 = simd_and(tmp118, tmp36);
          bytetest_9e_9e = simd_and(tmp94, tmp136);
          r800_ffff_tmp159 = simd_and(r800_ffff_tmp6, bytetest_b3);
          carryQ.cq[74] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp159, carryQ.get_carry_in(74), r800_ffff_tmp160));
          r800_ffff_tmp161 = simd_and(r800_ffff_tmp160, bytetest_9e_9e);
          struct_Lo.cc = simd_or(r800_ffff_tmp161, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b3 = simd_and(tmp118, tmp36);
          bytetest_a0_a1 = simd_andc(tmp105, tmp130);
          r800_ffff_tmp162 = simd_and(r800_ffff_tmp160, bytetest_a0_a1);
          struct_Lo.cc = simd_or(r800_ffff_tmp162, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b3 = simd_and(tmp118, tmp36);
          r800_ffff_tmp163 = simd_andc(tmp118, tmp4);
          bytetest_b1_b2 = simd_and(r800_ffff_tmp163, tmp148);
          r800_ffff_tmp164 = simd_and(r800_ffff_tmp160, bytetest_b1_b2);
          struct_Lo.cc = simd_or(r800_ffff_tmp164, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b4 = simd_and(tmp118, tmp46);
          bytetest_85_8c = simd_and(bytetest_80_8f, r800_ffff_tmp37);
          r800_ffff_tmp165 = simd_and(r800_ffff_tmp6, bytetest_b4);
          carryQ.cq[75] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp165, carryQ.get_carry_in(75), r800_ffff_tmp166));
          r800_ffff_tmp167 = simd_and(r800_ffff_tmp166, bytetest_85_8c);
          struct_Lo.cc = simd_or(r800_ffff_tmp167, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b4 = simd_and(tmp118, tmp46);
          bytetest_8e_90 = simd_and(tmp142, r800_ffff_tmp115);
          r800_ffff_tmp168 = simd_and(r800_ffff_tmp166, bytetest_8e_90);
          struct_Lo.cc = simd_or(r800_ffff_tmp168, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b4 = simd_and(tmp118, tmp46);
          r800_ffff_tmp169 = simd_not(tmp206);
          r800_ffff_tmp170 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp169), simd_andc(r800_ffff_tmp139, basis_bits.bit_2));
          bytetest_92_ba = simd_and(bytetest_80_bf, r800_ffff_tmp170);
          r800_ffff_tmp171 = simd_and(r800_ffff_tmp166, bytetest_92_ba);
          struct_Lo.cc = simd_or(r800_ffff_tmp171, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b4 = simd_and(tmp118, tmp46);
          bytetest_bd_bd = simd_and(tmp118, tmp79);
          r800_ffff_tmp172 = simd_and(r800_ffff_tmp166, bytetest_bd_bd);
          struct_Lo.cc = simd_or(r800_ffff_tmp172, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b5 = simd_and(tmp118, r800_ffff_tmp27);
          bytetest_8e_8e = simd_and(bytetest_80_8f, tmp136);
          r800_ffff_tmp173 = simd_and(r800_ffff_tmp6, bytetest_b5);
          carryQ.cq[76] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp173, carryQ.get_carry_in(76), r800_ffff_tmp174));
          r800_ffff_tmp175 = simd_and(r800_ffff_tmp174, bytetest_8e_8e);
          struct_Lo.cc = simd_or(r800_ffff_tmp175, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b5 = simd_and(tmp118, r800_ffff_tmp27);
          bytetest_a0_a1 = simd_andc(tmp105, tmp130);
          r800_ffff_tmp176 = simd_and(r800_ffff_tmp174, bytetest_a0_a1);
          struct_Lo.cc = simd_or(r800_ffff_tmp176, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b5 = simd_and(tmp118, r800_ffff_tmp27);
          bytetest_ba_bf = simd_and(tmp184, tmp187);
          r800_ffff_tmp177 = simd_and(r800_ffff_tmp174, bytetest_ba_bf);
          struct_Lo.cc = simd_or(r800_ffff_tmp177, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b6 = simd_and(tmp118, tmp55);
          r800_ffff_tmp178 = simd_not(tmp48);
          r800_ffff_tmp179 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp178), simd_andc(tmp143, basis_bits.bit_3));
          bytetest_85_96 = simd_and(tmp142, r800_ffff_tmp179);
          r800_ffff_tmp180 = simd_and(r800_ffff_tmp6, bytetest_b6);
          carryQ.cq[77] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp180, carryQ.get_carry_in(77), r800_ffff_tmp181));
          r800_ffff_tmp182 = simd_and(r800_ffff_tmp181, bytetest_85_96);
          struct_Lo.cc = simd_or(r800_ffff_tmp182, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b6 = simd_and(tmp118, tmp55);
          r800_ffff_tmp183 = simd_not(r800_ffff_tmp139);
          r800_ffff_tmp184 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp183), simd_andc(r800_ffff_tmp19, basis_bits.bit_2));
          bytetest_9a_b1 = simd_and(bytetest_80_bf, r800_ffff_tmp184);
          r800_ffff_tmp185 = simd_and(r800_ffff_tmp181, bytetest_9a_b1);
          struct_Lo.cc = simd_or(r800_ffff_tmp185, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b6 = simd_and(tmp118, tmp55);
          r800_ffff_tmp186 = simd_not(basis_bits.bit_5);
          r800_ffff_tmp187 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp186), simd_andc(tmp71, basis_bits.bit_4));
          bytetest_b3_bb = simd_and(tmp118, r800_ffff_tmp187);
          r800_ffff_tmp188 = simd_and(r800_ffff_tmp181, bytetest_b3_bb);
          struct_Lo.cc = simd_or(r800_ffff_tmp188, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b6 = simd_and(tmp118, tmp55);
          bytetest_bd_bd = simd_and(tmp118, tmp79);
          r800_ffff_tmp189 = simd_and(r800_ffff_tmp181, bytetest_bd_bd);
          struct_Lo.cc = simd_or(r800_ffff_tmp189, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b7 = simd_and(tmp118, tmp62);
          bytetest_80_86 = simd_andc(tmp119, tmp47);
          r800_ffff_tmp190 = simd_and(r800_ffff_tmp6, bytetest_b7);
          carryQ.cq[78] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp190, carryQ.get_carry_in(78), r800_ffff_tmp191));
          r800_ffff_tmp192 = simd_and(r800_ffff_tmp191, bytetest_80_86);
          struct_Lo.cc = simd_or(r800_ffff_tmp192, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b8 = simd_and(tmp118, tmp106);
          r800_ffff_tmp193 = simd_and(basis_bits.bit_3, tmp6);
          r800_ffff_tmp194 = simd_not(r800_ffff_tmp193);
          r800_ffff_tmp195 = simd_or(basis_bits.bit_3, tmp6);
          r800_ffff_tmp196 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp194), simd_andc(r800_ffff_tmp195, basis_bits.bit_2));
          bytetest_81_b0 = simd_and(bytetest_80_bf, r800_ffff_tmp196);
          r800_ffff_tmp197 = simd_and(r800_ffff_tmp6, bytetest_b8);
          carryQ.cq[79] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp197, carryQ.get_carry_in(79), r800_ffff_tmp198));
          r800_ffff_tmp199 = simd_and(r800_ffff_tmp198, bytetest_81_b0);
          struct_Lo.cc = simd_or(r800_ffff_tmp199, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b8 = simd_and(tmp118, tmp106);
          bytetest_b2_b3 = simd_and(tmp118, r800_ffff_tmp68);
          r800_ffff_tmp200 = simd_and(r800_ffff_tmp198, bytetest_b2_b3);
          struct_Lo.cc = simd_or(r800_ffff_tmp200, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b9 = simd_and(tmp118, tmp157);
          bytetest_80_85 = simd_andc(tmp119, r800_ffff_tmp2);
          r800_ffff_tmp201 = simd_and(r800_ffff_tmp6, bytetest_b9);
          carryQ.cq[80] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp201, carryQ.get_carry_in(80), r800_ffff_tmp202));
          r800_ffff_tmp203 = simd_and(r800_ffff_tmp202, bytetest_80_85);
          struct_Lo.cc = simd_or(r800_ffff_tmp203, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ba = simd_and(tmp118, tmp70);
          bytetest_81_82 = simd_and(bytetest_80_83, tmp148);
          r800_ffff_tmp204 = simd_and(r800_ffff_tmp6, bytetest_ba);
          carryQ.cq[81] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp204, carryQ.get_carry_in(81), r800_ffff_tmp205));
          r800_ffff_tmp206 = simd_and(r800_ffff_tmp205, bytetest_81_82);
          struct_Lo.cc = simd_or(r800_ffff_tmp206, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ba = simd_and(tmp118, tmp70);
          bytetest_84_84 = simd_and(bytetest_80_8f, tmp46);
          r800_ffff_tmp207 = simd_and(r800_ffff_tmp205, bytetest_84_84);
          struct_Lo.cc = simd_or(r800_ffff_tmp207, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ba = simd_and(tmp118, tmp70);
          r800_ffff_tmp208 = simd_not(tmp37);
          r800_ffff_tmp209 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp208), simd_andc(tmp47, basis_bits.bit_4));
          bytetest_87_88 = simd_and(bytetest_80_8f, r800_ffff_tmp209);
          r800_ffff_tmp210 = simd_and(r800_ffff_tmp205, bytetest_87_88);
          struct_Lo.cc = simd_or(r800_ffff_tmp210, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ba = simd_and(tmp118, tmp70);
          bytetest_8a_8a = simd_and(bytetest_80_8f, tmp70);
          r800_ffff_tmp211 = simd_and(r800_ffff_tmp205, bytetest_8a_8a);
          struct_Lo.cc = simd_or(r800_ffff_tmp211, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ba = simd_and(tmp118, tmp70);
          bytetest_8d_8d = simd_and(bytetest_80_8f, tmp79);
          r800_ffff_tmp212 = simd_and(r800_ffff_tmp205, bytetest_8d_8d);
          struct_Lo.cc = simd_or(r800_ffff_tmp212, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ba = simd_and(tmp118, tmp70);
          bytetest_94_97 = simd_and(tmp94, tmp45);
          r800_ffff_tmp213 = simd_and(r800_ffff_tmp205, bytetest_94_97);
          struct_Lo.cc = simd_or(r800_ffff_tmp213, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ba = simd_and(tmp118, tmp70);
          bytetest_99_9f = simd_and(r800_ffff_tmp73, tmp37);
          r800_ffff_tmp214 = simd_and(r800_ffff_tmp205, bytetest_99_9f);
          struct_Lo.cc = simd_or(r800_ffff_tmp214, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ba = simd_and(tmp118, tmp70);
          bytetest_a1_a3 = simd_and(tmp146, tmp5);
          r800_ffff_tmp215 = simd_and(r800_ffff_tmp205, bytetest_a1_a3);
          struct_Lo.cc = simd_or(r800_ffff_tmp215, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ba = simd_and(tmp118, tmp70);
          bytetest_a5_a5 = simd_and(tmp105, r800_ffff_tmp27);
          r800_ffff_tmp216 = simd_and(r800_ffff_tmp205, bytetest_a5_a5);
          struct_Lo.cc = simd_or(r800_ffff_tmp216, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ba = simd_and(tmp118, tmp70);
          bytetest_a7_a7 = simd_and(tmp105, tmp62);
          r800_ffff_tmp217 = simd_and(r800_ffff_tmp205, bytetest_a7_a7);
          struct_Lo.cc = simd_or(r800_ffff_tmp217, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ba = simd_and(tmp118, tmp70);
          r800_ffff_tmp218 = simd_and(tmp69, basis_bits.bit_6);
          bytetest_aa_ab = simd_and(tmp105, r800_ffff_tmp218);
          r800_ffff_tmp219 = simd_and(r800_ffff_tmp205, bytetest_aa_ab);
          struct_Lo.cc = simd_or(r800_ffff_tmp219, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ba = simd_and(tmp118, tmp70);
          r800_ffff_tmp220 = simd_and(tmp78, tmp5);
          r800_ffff_tmp221 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp41), simd_andc(r800_ffff_tmp220, basis_bits.bit_3));
          bytetest_ad_b0 = simd_and(tmp152, r800_ffff_tmp221);
          r800_ffff_tmp222 = simd_and(r800_ffff_tmp205, bytetest_ad_b0);
          struct_Lo.cc = simd_or(r800_ffff_tmp222, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ba = simd_and(tmp118, tmp70);
          bytetest_b2_b3 = simd_and(tmp118, r800_ffff_tmp68);
          r800_ffff_tmp223 = simd_and(r800_ffff_tmp205, bytetest_b2_b3);
          struct_Lo.cc = simd_or(r800_ffff_tmp223, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ba = simd_and(tmp118, tmp70);
          bytetest_bd_bd = simd_and(tmp118, tmp79);
          r800_ffff_tmp224 = simd_and(r800_ffff_tmp205, bytetest_bd_bd);
          struct_Lo.cc = simd_or(r800_ffff_tmp224, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bb = simd_and(tmp118, tmp129);
          bytetest_80_84 = simd_andc(tmp119, tmp88);
          r800_ffff_tmp225 = simd_and(r800_ffff_tmp6, bytetest_bb);
          carryQ.cq[82] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp225, carryQ.get_carry_in(82), r800_ffff_tmp226));
          r800_ffff_tmp227 = simd_and(r800_ffff_tmp226, bytetest_80_84);
          struct_Lo.cc = simd_or(r800_ffff_tmp227, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bb = simd_and(tmp118, tmp129);
          bytetest_9c_9f = simd_and(tmp94, tmp78);
          r800_ffff_tmp228 = simd_and(r800_ffff_tmp226, bytetest_9c_9f);
          struct_Lo.cc = simd_or(r800_ffff_tmp228, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bc = simd_and(tmp118, tmp123);
          bytetest_80_80 = simd_andc(bytetest_80_8f, tmp6);
          r800_ffff_tmp229 = simd_and(r800_ffff_tmp6, bytetest_bc);
          carryQ.cq[83] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp229, carryQ.get_carry_in(83), r800_ffff_tmp230));
          r800_ffff_tmp231 = simd_and(r800_ffff_tmp230, bytetest_80_80);
          struct_Lo.cc = simd_or(r800_ffff_tmp231, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bd = simd_and(tmp118, tmp79);
          bytetest_80_87 = simd_andc(bytetest_80_8f, basis_bits.bit_4);
          r800_ffff_tmp232 = simd_and(r800_ffff_tmp6, bytetest_bd);
          carryQ.cq[84] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp232, carryQ.get_carry_in(84), r800_ffff_tmp233));
          r800_ffff_tmp234 = simd_and(r800_ffff_tmp233, bytetest_80_87);
          struct_Lo.cc = simd_or(r800_ffff_tmp234, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bd = simd_and(tmp118, tmp79);
          r800_ffff_tmp235 = simd_or(basis_bits.bit_3, r800_ffff_tmp220);
          r800_ffff_tmp236 = simd_not(r800_ffff_tmp235);
          r800_ffff_tmp237 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp236), simd_andc(tmp39, basis_bits.bit_2));
          bytetest_89_ac = simd_and(bytetest_80_bf, r800_ffff_tmp237);
          r800_ffff_tmp238 = simd_and(r800_ffff_tmp233, bytetest_89_ac);
          struct_Lo.cc = simd_or(r800_ffff_tmp238, struct_Lo.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_be = simd_and(tmp118, tmp136);
          r800_ffff_tmp239 = simd_and(bytetest_80_8f, basis_bits.bit_4);
          bytetest_88_8c = simd_andc(r800_ffff_tmp239, tmp88);
          r800_ffff_tmp240 = simd_and(r800_ffff_tmp6, bytetest_be);
          carryQ.cq[85] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp240, carryQ.get_carry_in(85), r800_ffff_tmp241));
          r800_ffff_tmp242 = simd_and(r800_ffff_tmp241, bytetest_88_8c);
          struct_Lo.cc = simd_or(r800_ffff_tmp242, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_80 = simd_andc(bytetest_80_8f, tmp6);
          bytetest_80_aa = simd_andc(bytetest_80_bf, tmp74);
          r800_ffff_tmp243 = simd_and(tmp21, bytetest_e1);
          carryQ.cq[86] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp243, carryQ.get_carry_in(86), r800_ffff_tmp244));
          r800_ffff_tmp245 = simd_and(r800_ffff_tmp244, bytetest_80);
          carryQ.cq[87] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp245, carryQ.get_carry_in(87), r800_ffff_tmp246));
          r800_ffff_tmp247 = simd_and(r800_ffff_tmp246, bytetest_80_aa);
          struct_Lo.cc = simd_or(r800_ffff_tmp247, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_80 = simd_andc(bytetest_80_8f, tmp6);
          bytetest_bf_bf = simd_and(tmp118, tmp80);
          r800_ffff_tmp248 = simd_and(r800_ffff_tmp246, bytetest_bf_bf);
          struct_Lo.cc = simd_or(r800_ffff_tmp248, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_81 = simd_and(bytetest_80_8f, tmp11);
          bytetest_90_95 = simd_andc(r800_ffff_tmp117, r800_ffff_tmp2);
          r800_ffff_tmp249 = simd_and(r800_ffff_tmp244, bytetest_81);
          carryQ.cq[88] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp249, carryQ.get_carry_in(88), r800_ffff_tmp250));
          r800_ffff_tmp251 = simd_and(r800_ffff_tmp250, bytetest_90_95);
          struct_Lo.cc = simd_or(r800_ffff_tmp251, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_81 = simd_and(bytetest_80_8f, tmp11);
          bytetest_9a_9d = simd_and(r800_ffff_tmp73, r800_ffff_tmp119);
          r800_ffff_tmp252 = simd_and(r800_ffff_tmp250, bytetest_9a_9d);
          struct_Lo.cc = simd_or(r800_ffff_tmp252, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_81 = simd_and(bytetest_80_8f, tmp11);
          bytetest_a1_a1 = simd_and(tmp105, tmp11);
          r800_ffff_tmp253 = simd_and(r800_ffff_tmp250, bytetest_a1_a1);
          struct_Lo.cc = simd_or(r800_ffff_tmp253, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_81 = simd_and(bytetest_80_8f, tmp11);
          r800_ffff_tmp254 = simd_and(tmp105, tmp45);
          bytetest_a5_a6 = simd_and(r800_ffff_tmp254, tmp148);
          r800_ffff_tmp255 = simd_and(r800_ffff_tmp250, bytetest_a5_a6);
          struct_Lo.cc = simd_or(r800_ffff_tmp255, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_81 = simd_and(bytetest_80_8f, tmp11);
          bytetest_ae_b0 = simd_and(tmp152, r800_ffff_tmp115);
          r800_ffff_tmp256 = simd_and(r800_ffff_tmp250, bytetest_ae_b0);
          struct_Lo.cc = simd_or(r800_ffff_tmp256, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_82 = simd_and(bytetest_80_8f, tmp30);
          bytetest_80_81 = simd_andc(bytetest_80_8f, tmp130);
          r800_ffff_tmp257 = simd_and(r800_ffff_tmp244, bytetest_82);
          carryQ.cq[89] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp257, carryQ.get_carry_in(89), r800_ffff_tmp258));
          r800_ffff_tmp259 = simd_and(r800_ffff_tmp258, bytetest_80_81);
          bytetest_81 = simd_and(bytetest_80_8f, tmp11);
          bytetest_b5_bf = simd_and(tmp118, tmp143);
          r800_ffff_tmp260 = simd_and(r800_ffff_tmp250, bytetest_b5_bf);
          r800_ffff_tmp261 = simd_or(r800_ffff_tmp260, r800_ffff_tmp259);
          struct_Lo.cc = simd_or(r800_ffff_tmp261, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_82 = simd_and(bytetest_80_8f, tmp30);
          bytetest_8e_8e = simd_and(bytetest_80_8f, tmp136);
          r800_ffff_tmp262 = simd_and(r800_ffff_tmp258, bytetest_8e_8e);
          struct_Lo.cc = simd_or(r800_ffff_tmp262, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_83 = simd_and(bytetest_80_8f, tmp36);
          r800_ffff_tmp263 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp169), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
          bytetest_90_ba = simd_and(bytetest_80_bf, r800_ffff_tmp263);
          r800_ffff_tmp264 = simd_and(r800_ffff_tmp244, bytetest_83);
          carryQ.cq[90] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp264, carryQ.get_carry_in(90), r800_ffff_tmp265));
          r800_ffff_tmp266 = simd_and(r800_ffff_tmp265, bytetest_90_ba);
          struct_Lo.cc = simd_or(r800_ffff_tmp266, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_89 = simd_and(bytetest_80_8f, tmp157);
          bytetest_80_88 = simd_andc(bytetest_80_8f, tmp38);
          r800_ffff_tmp267 = simd_and(r800_ffff_tmp244, bytetest_89);
          carryQ.cq[91] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp267, carryQ.get_carry_in(91), r800_ffff_tmp268));
          r800_ffff_tmp269 = simd_and(r800_ffff_tmp268, bytetest_80_88);
          r800_ffff_tmp270 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp208), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
          bytetest_84_88 = simd_and(bytetest_80_8f, r800_ffff_tmp270);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp271 = simd_and(r800_ffff_tmp244, bytetest_84_88);
          carryQ.cq[92] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp271, carryQ.get_carry_in(92), r800_ffff_tmp272));
          r800_ffff_tmp273 = simd_and(r800_ffff_tmp272, bytetest_80_bf);
          bytetest_83 = simd_and(bytetest_80_8f, tmp36);
          r800_ffff_tmp274 = simd_and(tmp118, tmp78);
          bytetest_bd_bf = simd_and(r800_ffff_tmp274, tmp5);
          r800_ffff_tmp275 = simd_and(r800_ffff_tmp265, bytetest_bd_bf);
          r800_ffff_tmp276 = simd_or(r800_ffff_tmp275, r800_ffff_tmp273);
          r800_ffff_tmp277 = simd_or(r800_ffff_tmp276, r800_ffff_tmp269);
          struct_Lo.cc = simd_or(r800_ffff_tmp277, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_89 = simd_and(bytetest_80_8f, tmp157);
          bytetest_8a_8d = simd_and(r800_ffff_tmp239, r800_ffff_tmp119);
          r800_ffff_tmp278 = simd_and(r800_ffff_tmp268, bytetest_8a_8d);
          struct_Lo.cc = simd_or(r800_ffff_tmp278, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_89 = simd_and(bytetest_80_8f, tmp157);
          bytetest_90_96 = simd_andc(r800_ffff_tmp117, tmp47);
          r800_ffff_tmp279 = simd_and(r800_ffff_tmp268, bytetest_90_96);
          struct_Lo.cc = simd_or(r800_ffff_tmp279, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_89 = simd_and(bytetest_80_8f, tmp157);
          bytetest_98_98 = simd_and(tmp94, tmp106);
          r800_ffff_tmp280 = simd_and(r800_ffff_tmp268, bytetest_98_98);
          struct_Lo.cc = simd_or(r800_ffff_tmp280, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_89 = simd_and(bytetest_80_8f, tmp157);
          bytetest_9a_9d = simd_and(r800_ffff_tmp73, r800_ffff_tmp119);
          r800_ffff_tmp281 = simd_and(r800_ffff_tmp268, bytetest_9a_9d);
          struct_Lo.cc = simd_or(r800_ffff_tmp281, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_8a = simd_and(bytetest_80_8f, tmp70);
          bytetest_80_88 = simd_andc(bytetest_80_8f, tmp38);
          r800_ffff_tmp282 = simd_and(r800_ffff_tmp244, bytetest_8a);
          carryQ.cq[93] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp282, carryQ.get_carry_in(93), r800_ffff_tmp283));
          r800_ffff_tmp284 = simd_and(r800_ffff_tmp283, bytetest_80_88);
          bytetest_89 = simd_and(bytetest_80_8f, tmp157);
          bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
          r800_ffff_tmp285 = simd_and(r800_ffff_tmp268, bytetest_a0_bf);
          r800_ffff_tmp286 = simd_or(r800_ffff_tmp285, r800_ffff_tmp284);
          struct_Lo.cc = simd_or(r800_ffff_tmp286, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_8a = simd_and(bytetest_80_8f, tmp70);
          bytetest_8a_8d = simd_and(r800_ffff_tmp239, r800_ffff_tmp119);
          r800_ffff_tmp287 = simd_and(r800_ffff_tmp283, bytetest_8a_8d);
          struct_Lo.cc = simd_or(r800_ffff_tmp287, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_8a = simd_and(bytetest_80_8f, tmp70);
          r800_ffff_tmp288 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp194), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
          bytetest_90_b0 = simd_and(bytetest_80_bf, r800_ffff_tmp288);
          r800_ffff_tmp289 = simd_and(r800_ffff_tmp283, bytetest_90_b0);
          struct_Lo.cc = simd_or(r800_ffff_tmp289, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_8a = simd_and(bytetest_80_8f, tmp70);
          bytetest_b2_b5 = simd_and(r800_ffff_tmp34, r800_ffff_tmp119);
          r800_ffff_tmp290 = simd_and(r800_ffff_tmp283, bytetest_b2_b5);
          struct_Lo.cc = simd_or(r800_ffff_tmp290, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_8a = simd_and(bytetest_80_8f, tmp70);
          bytetest_b8_be = simd_andc(tmp184, tmp47);
          r800_ffff_tmp291 = simd_and(r800_ffff_tmp283, bytetest_b8_be);
          struct_Lo.cc = simd_or(r800_ffff_tmp291, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_8b = simd_and(bytetest_80_8f, tmp129);
          bytetest_80_80 = simd_andc(bytetest_80_8f, tmp6);
          r800_ffff_tmp292 = simd_and(r800_ffff_tmp244, bytetest_8b);
          carryQ.cq[94] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp292, carryQ.get_carry_in(94), r800_ffff_tmp293));
          r800_ffff_tmp294 = simd_and(r800_ffff_tmp293, bytetest_80_80);
          struct_Lo.cc = simd_or(r800_ffff_tmp294, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_8b = simd_and(bytetest_80_8f, tmp129);
          bytetest_82_85 = simd_and(bytetest_80_87, r800_ffff_tmp119);
          r800_ffff_tmp295 = simd_and(r800_ffff_tmp293, bytetest_82_85);
          struct_Lo.cc = simd_or(r800_ffff_tmp295, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_8b = simd_and(bytetest_80_8f, tmp129);
          r800_ffff_tmp296 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp178), simd_andc(basis_bits.bit_4, basis_bits.bit_3));
          bytetest_88_96 = simd_and(tmp142, r800_ffff_tmp296);
          r800_ffff_tmp297 = simd_and(r800_ffff_tmp293, bytetest_88_96);
          struct_Lo.cc = simd_or(r800_ffff_tmp297, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_8c = simd_and(bytetest_80_8f, tmp123);
          bytetest_80_90 = simd_andc(tmp142, r800_ffff_tmp193);
          r800_ffff_tmp298 = simd_and(r800_ffff_tmp244, bytetest_8c);
          carryQ.cq[95] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp298, carryQ.get_carry_in(95), r800_ffff_tmp299));
          r800_ffff_tmp300 = simd_and(r800_ffff_tmp299, bytetest_80_90);
          bytetest_8b = simd_and(bytetest_80_8f, tmp129);
          r800_ffff_tmp301 = simd_or(basis_bits.bit_2, tmp14);
          bytetest_98_bf = simd_and(bytetest_80_bf, r800_ffff_tmp301);
          r800_ffff_tmp302 = simd_and(r800_ffff_tmp293, bytetest_98_bf);
          r800_ffff_tmp303 = simd_or(r800_ffff_tmp302, r800_ffff_tmp300);
          struct_Lo.cc = simd_or(r800_ffff_tmp303, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_8c = simd_and(bytetest_80_8f, tmp123);
          bytetest_92_95 = simd_and(r800_ffff_tmp117, r800_ffff_tmp119);
          r800_ffff_tmp304 = simd_and(r800_ffff_tmp299, bytetest_92_95);
          struct_Lo.cc = simd_or(r800_ffff_tmp304, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_8d = simd_and(bytetest_80_8f, tmp79);
          bytetest_80_9a = simd_andc(tmp142, tmp206);
          r800_ffff_tmp305 = simd_and(r800_ffff_tmp244, bytetest_8d);
          carryQ.cq[96] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp305, carryQ.get_carry_in(96), r800_ffff_tmp306));
          r800_ffff_tmp307 = simd_and(r800_ffff_tmp306, bytetest_80_9a);
          bytetest_8c = simd_and(bytetest_80_8f, tmp123);
          bytetest_98_bf = simd_and(bytetest_80_bf, r800_ffff_tmp301);
          r800_ffff_tmp308 = simd_and(r800_ffff_tmp299, bytetest_98_bf);
          r800_ffff_tmp309 = simd_or(r800_ffff_tmp308, r800_ffff_tmp307);
          struct_Lo.cc = simd_or(r800_ffff_tmp309, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_8e = simd_and(bytetest_80_8f, tmp136);
          bytetest_80_8f = simd_andc(bytetest_80_bf, tmp12);
          r800_ffff_tmp310 = simd_and(r800_ffff_tmp244, bytetest_8e);
          carryQ.cq[97] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp310, carryQ.get_carry_in(97), r800_ffff_tmp311));
          r800_ffff_tmp312 = simd_and(r800_ffff_tmp311, bytetest_80_8f);
          struct_Lo.cc = simd_or(r800_ffff_tmp312, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_8f = simd_and(bytetest_80_8f, tmp80);
          bytetest_80_b4 = simd_andc(bytetest_80_bf, tmp218);
          r800_ffff_tmp313 = simd_and(r800_ffff_tmp244, bytetest_8f);
          carryQ.cq[98] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp313, carryQ.get_carry_in(98), r800_ffff_tmp314));
          r800_ffff_tmp315 = simd_and(r800_ffff_tmp314, bytetest_80_b4);
          bytetest_8e = simd_and(bytetest_80_8f, tmp136);
          bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
          r800_ffff_tmp316 = simd_and(r800_ffff_tmp311, bytetest_a0_bf);
          r800_ffff_tmp317 = simd_or(r800_ffff_tmp316, r800_ffff_tmp315);
          struct_Lo.cc = simd_or(r800_ffff_tmp317, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_99 = simd_and(tmp94, tmp157);
          r800_ffff_tmp318 = simd_and(basis_bits.bit_2, r800_ffff_tmp235);
          bytetest_80_ac = simd_andc(bytetest_80_bf, r800_ffff_tmp318);
          r800_ffff_tmp319 = simd_and(r800_ffff_tmp244, bytetest_99);
          carryQ.cq[99] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp319, carryQ.get_carry_in(99), r800_ffff_tmp320));
          r800_ffff_tmp321 = simd_and(r800_ffff_tmp320, bytetest_80_ac);
          r800_ffff_tmp322 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp208), simd_andc(tmp37, basis_bits.bit_4));
          bytetest_91_98 = simd_and(tmp94, r800_ffff_tmp322);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp323 = simd_and(r800_ffff_tmp244, bytetest_91_98);
          carryQ.cq[100] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp323, carryQ.get_carry_in(100), r800_ffff_tmp324));
          r800_ffff_tmp325 = simd_and(r800_ffff_tmp324, bytetest_80_bf);
          bytetest_90 = simd_andc(tmp94, tmp6);
          r800_ffff_tmp326 = simd_or(basis_bits.bit_2, r800_ffff_tmp195);
          bytetest_81_bf = simd_and(bytetest_80_bf, r800_ffff_tmp326);
          r800_ffff_tmp327 = simd_and(r800_ffff_tmp244, bytetest_90);
          carryQ.cq[101] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp327, carryQ.get_carry_in(101), r800_ffff_tmp328));
          r800_ffff_tmp329 = simd_and(r800_ffff_tmp328, bytetest_81_bf);
          r800_ffff_tmp330 = simd_or(r800_ffff_tmp329, r800_ffff_tmp325);
          r800_ffff_tmp331 = simd_or(r800_ffff_tmp330, r800_ffff_tmp321);
          struct_Lo.cc = simd_or(r800_ffff_tmp331, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_99 = simd_and(tmp94, tmp157);
          bytetest_af_bf = simd_and(bytetest_a0_bf, tmp81);
          r800_ffff_tmp332 = simd_and(r800_ffff_tmp320, bytetest_af_bf);
          struct_Lo.cc = simd_or(r800_ffff_tmp332, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9a = simd_and(tmp94, tmp70);
          r800_ffff_tmp333 = simd_not(tmp72);
          r800_ffff_tmp334 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp333), simd_andc(tmp6, basis_bits.bit_3));
          bytetest_81_9a = simd_and(tmp142, r800_ffff_tmp334);
          r800_ffff_tmp335 = simd_and(r800_ffff_tmp244, bytetest_9a);
          carryQ.cq[102] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp335, carryQ.get_carry_in(102), r800_ffff_tmp336));
          r800_ffff_tmp337 = simd_and(r800_ffff_tmp336, bytetest_81_9a);
          struct_Lo.cc = simd_or(r800_ffff_tmp337, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9b = simd_and(tmp94, tmp129);
          bytetest_80_aa = simd_andc(bytetest_80_bf, tmp74);
          r800_ffff_tmp338 = simd_and(r800_ffff_tmp244, bytetest_9b);
          carryQ.cq[103] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp338, carryQ.get_carry_in(103), r800_ffff_tmp339));
          r800_ffff_tmp340 = simd_and(r800_ffff_tmp339, bytetest_80_aa);
          bytetest_9a = simd_and(tmp94, tmp70);
          bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
          r800_ffff_tmp341 = simd_and(r800_ffff_tmp336, bytetest_a0_bf);
          r800_ffff_tmp342 = simd_or(r800_ffff_tmp341, r800_ffff_tmp340);
          struct_Lo.cc = simd_or(r800_ffff_tmp342, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9c = simd_and(tmp94, tmp123);
          bytetest_80_8c = simd_andc(bytetest_80_8f, tmp89);
          r800_ffff_tmp343 = simd_and(r800_ffff_tmp244, bytetest_9c);
          carryQ.cq[104] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp343, carryQ.get_carry_in(104), r800_ffff_tmp344));
          r800_ffff_tmp345 = simd_and(r800_ffff_tmp344, bytetest_80_8c);
          struct_Lo.cc = simd_or(r800_ffff_tmp345, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9c = simd_and(tmp94, tmp123);
          r800_ffff_tmp346 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp85), simd_andc(tmp234, basis_bits.bit_3));
          bytetest_8e_91 = simd_and(tmp142, r800_ffff_tmp346);
          r800_ffff_tmp347 = simd_and(r800_ffff_tmp344, bytetest_8e_91);
          struct_Lo.cc = simd_or(r800_ffff_tmp347, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9c = simd_and(tmp94, tmp123);
          bytetest_a0_b1 = simd_andc(bytetest_a0_bf, r800_ffff_tmp139);
          r800_ffff_tmp348 = simd_and(r800_ffff_tmp344, bytetest_a0_b1);
          struct_Lo.cc = simd_or(r800_ffff_tmp348, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9d = simd_and(tmp94, tmp79);
          bytetest_80_91 = simd_andc(tmp142, r800_ffff_tmp139);
          r800_ffff_tmp349 = simd_and(r800_ffff_tmp244, bytetest_9d);
          carryQ.cq[105] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp349, carryQ.get_carry_in(105), r800_ffff_tmp350));
          r800_ffff_tmp351 = simd_and(r800_ffff_tmp350, bytetest_80_91);
          struct_Lo.cc = simd_or(r800_ffff_tmp351, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9d = simd_and(tmp94, tmp79);
          bytetest_a0_ac = simd_andc(tmp105, tmp89);
          r800_ffff_tmp352 = simd_and(r800_ffff_tmp350, bytetest_a0_ac);
          struct_Lo.cc = simd_or(r800_ffff_tmp352, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9d = simd_and(tmp94, tmp79);
          bytetest_ae_b0 = simd_and(bytetest_a0_bf, r800_ffff_tmp115);
          r800_ffff_tmp353 = simd_and(r800_ffff_tmp350, bytetest_ae_b0);
          struct_Lo.cc = simd_or(r800_ffff_tmp353, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9e = simd_and(tmp94, tmp136);
          r800_ffff_tmp354 = simd_and(basis_bits.bit_3, tmp4);
          r800_ffff_tmp355 = simd_and(basis_bits.bit_2, r800_ffff_tmp354);
          bytetest_80_b3 = simd_andc(bytetest_80_bf, r800_ffff_tmp355);
          r800_ffff_tmp356 = simd_and(r800_ffff_tmp244, bytetest_9e);
          carryQ.cq[106] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp356, carryQ.get_carry_in(106), r800_ffff_tmp357));
          r800_ffff_tmp358 = simd_and(r800_ffff_tmp357, bytetest_80_b3);
          struct_Lo.cc = simd_or(r800_ffff_tmp358, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9f = simd_and(tmp94, tmp80);
          bytetest_9c_9c = simd_and(tmp94, tmp123);
          r800_ffff_tmp359 = simd_and(r800_ffff_tmp244, bytetest_9f);
          carryQ.cq[107] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp359, carryQ.get_carry_in(107), r800_ffff_tmp360));
          r800_ffff_tmp361 = simd_and(r800_ffff_tmp360, bytetest_9c_9c);
          struct_Lo.cc = simd_or(r800_ffff_tmp361, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a1 = simd_and(tmp105, tmp11);
          bytetest_80_82 = simd_andc(bytetest_80_83, tmp16);
          r800_ffff_tmp362 = simd_and(r800_ffff_tmp244, bytetest_a1);
          carryQ.cq[108] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp362, carryQ.get_carry_in(108), r800_ffff_tmp363));
          r800_ffff_tmp364 = simd_and(r800_ffff_tmp363, bytetest_80_82);
          bytetest_a0 = simd_andc(tmp105, tmp6);
          bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
          r800_ffff_tmp365 = simd_and(r800_ffff_tmp244, bytetest_a0);
          carryQ.cq[109] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp365, carryQ.get_carry_in(109), r800_ffff_tmp366));
          r800_ffff_tmp367 = simd_and(r800_ffff_tmp366, bytetest_a0_bf);
          r800_ffff_tmp368 = simd_or(r800_ffff_tmp367, r800_ffff_tmp364);
          struct_Lo.cc = simd_or(r800_ffff_tmp368, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a1 = simd_and(tmp105, tmp11);
          r800_ffff_tmp369 = simd_or(simd_and(basis_bits.bit_2, tmp15), simd_andc(r800_ffff_tmp21, basis_bits.bit_2));
          bytetest_84_b7 = simd_and(bytetest_80_bf, r800_ffff_tmp369);
          r800_ffff_tmp370 = simd_and(r800_ffff_tmp363, bytetest_84_b7);
          struct_Lo.cc = simd_or(r800_ffff_tmp370, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a2 = simd_and(tmp105, tmp30);
          r800_ffff_tmp371 = simd_and(basis_bits.bit_2, tmp39);
          bytetest_80_a8 = simd_andc(bytetest_80_bf, r800_ffff_tmp371);
          r800_ffff_tmp372 = simd_and(r800_ffff_tmp244, bytetest_a2);
          carryQ.cq[110] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp372, carryQ.get_carry_in(110), r800_ffff_tmp373));
          r800_ffff_tmp374 = simd_and(r800_ffff_tmp373, bytetest_80_a8);
          struct_Lo.cc = simd_or(r800_ffff_tmp374, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a2 = simd_and(tmp105, tmp30);
          bytetest_aa_aa = simd_and(tmp105, tmp70);
          r800_ffff_tmp375 = simd_and(r800_ffff_tmp373, bytetest_aa_aa);
          struct_Lo.cc = simd_or(r800_ffff_tmp375, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a3 = simd_and(tmp105, tmp36);
          r800_ffff_tmp376 = simd_and(basis_bits.bit_2, r800_ffff_tmp4);
          bytetest_80_b5 = simd_andc(bytetest_80_bf, r800_ffff_tmp376);
          r800_ffff_tmp377 = simd_and(r800_ffff_tmp244, bytetest_a3);
          carryQ.cq[111] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp377, carryQ.get_carry_in(111), r800_ffff_tmp378));
          r800_ffff_tmp379 = simd_and(r800_ffff_tmp378, bytetest_80_b5);
          bytetest_a2 = simd_and(tmp105, tmp30);
          bytetest_b0_bf = simd_and(bytetest_80_bf, tmp2);
          r800_ffff_tmp380 = simd_and(r800_ffff_tmp373, bytetest_b0_bf);
          r800_ffff_tmp381 = simd_or(r800_ffff_tmp380, r800_ffff_tmp379);
          struct_Lo.cc = simd_or(r800_ffff_tmp381, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a4 = simd_and(tmp105, tmp46);
          r800_ffff_tmp382 = simd_and(basis_bits.bit_3, r800_ffff_tmp220);
          bytetest_80_9c = simd_andc(tmp142, r800_ffff_tmp382);
          r800_ffff_tmp383 = simd_and(r800_ffff_tmp244, bytetest_a4);
          carryQ.cq[112] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp383, carryQ.get_carry_in(112), r800_ffff_tmp384));
          r800_ffff_tmp385 = simd_and(r800_ffff_tmp384, bytetest_80_9c);
          struct_Lo.cc = simd_or(r800_ffff_tmp385, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a5 = simd_and(tmp105, r800_ffff_tmp27);
          r800_ffff_tmp386 = simd_or(basis_bits.bit_3, tmp234);
          r800_ffff_tmp387 = simd_not(r800_ffff_tmp386);
          r800_ffff_tmp388 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp387), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
          bytetest_90_ad = simd_and(bytetest_80_bf, r800_ffff_tmp388);
          r800_ffff_tmp389 = simd_and(r800_ffff_tmp244, bytetest_a5);
          carryQ.cq[113] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp389, carryQ.get_carry_in(113), r800_ffff_tmp390));
          r800_ffff_tmp391 = simd_and(r800_ffff_tmp390, bytetest_90_ad);
          struct_Lo.cc = simd_or(r800_ffff_tmp391, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a5 = simd_and(tmp105, r800_ffff_tmp27);
          r800_ffff_tmp392 = simd_andc(bytetest_b0_bf, basis_bits.bit_4);
          bytetest_b0_b4 = simd_andc(r800_ffff_tmp392, tmp88);
          r800_ffff_tmp393 = simd_and(r800_ffff_tmp390, bytetest_b0_b4);
          struct_Lo.cc = simd_or(r800_ffff_tmp393, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a6 = simd_and(tmp105, tmp55);
          r800_ffff_tmp394 = simd_or(basis_bits.bit_3, tmp78);
          r800_ffff_tmp395 = simd_and(basis_bits.bit_2, r800_ffff_tmp394);
          bytetest_80_ab = simd_andc(bytetest_80_bf, r800_ffff_tmp395);
          r800_ffff_tmp396 = simd_and(r800_ffff_tmp244, bytetest_a6);
          carryQ.cq[114] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp396, carryQ.get_carry_in(114), r800_ffff_tmp397));
          r800_ffff_tmp398 = simd_and(r800_ffff_tmp397, bytetest_80_ab);
          struct_Lo.cc = simd_or(r800_ffff_tmp398, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a7 = simd_and(tmp105, tmp62);
          bytetest_81_87 = simd_and(bytetest_80_87, tmp37);
          r800_ffff_tmp399 = simd_and(r800_ffff_tmp244, bytetest_a7);
          carryQ.cq[115] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp399, carryQ.get_carry_in(115), r800_ffff_tmp400));
          r800_ffff_tmp401 = simd_and(r800_ffff_tmp400, bytetest_81_87);
          struct_Lo.cc = simd_or(r800_ffff_tmp401, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a8 = simd_and(tmp105, tmp106);
          bytetest_80_96 = simd_andc(tmp142, tmp200);
          r800_ffff_tmp402 = simd_and(r800_ffff_tmp244, bytetest_a8);
          carryQ.cq[116] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp402, carryQ.get_carry_in(116), r800_ffff_tmp403));
          r800_ffff_tmp404 = simd_and(r800_ffff_tmp403, bytetest_80_96);
          struct_Lo.cc = simd_or(r800_ffff_tmp404, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a9 = simd_and(tmp105, tmp157);
          bytetest_80_94 = simd_andc(tmp142, tmp217);
          r800_ffff_tmp405 = simd_and(r800_ffff_tmp244, bytetest_a9);
          carryQ.cq[117] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp405, carryQ.get_carry_in(117), r800_ffff_tmp406));
          r800_ffff_tmp407 = simd_and(r800_ffff_tmp406, bytetest_80_94);
          bytetest_a8 = simd_and(tmp105, tmp106);
          bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
          r800_ffff_tmp408 = simd_and(r800_ffff_tmp403, bytetest_a0_bf);
          r800_ffff_tmp409 = simd_or(r800_ffff_tmp408, r800_ffff_tmp407);
          struct_Lo.cc = simd_or(r800_ffff_tmp409, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_ac = simd_and(tmp105, tmp123);
          r800_ffff_tmp410 = simd_not(r800_ffff_tmp354);
          r800_ffff_tmp411 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp410), simd_andc(tmp144, basis_bits.bit_2));
          bytetest_85_b3 = simd_and(bytetest_80_bf, r800_ffff_tmp411);
          r800_ffff_tmp412 = simd_and(r800_ffff_tmp244, bytetest_ac);
          carryQ.cq[118] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp412, carryQ.get_carry_in(118), r800_ffff_tmp413));
          r800_ffff_tmp414 = simd_and(r800_ffff_tmp413, bytetest_85_b3);
          struct_Lo.cc = simd_or(r800_ffff_tmp414, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_ad = simd_and(tmp105, tmp79);
          r800_ffff_tmp415 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp186), simd_andc(tmp88, basis_bits.bit_4));
          bytetest_85_8b = simd_and(bytetest_80_8f, r800_ffff_tmp415);
          r800_ffff_tmp416 = simd_and(r800_ffff_tmp244, bytetest_ad);
          carryQ.cq[119] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp416, carryQ.get_carry_in(119), r800_ffff_tmp417));
          r800_ffff_tmp418 = simd_and(r800_ffff_tmp417, bytetest_85_8b);
          struct_Lo.cc = simd_or(r800_ffff_tmp418, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_ae = simd_and(tmp105, tmp136);
          r800_ffff_tmp419 = simd_not(r800_ffff_tmp195);
          r800_ffff_tmp420 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp419), simd_andc(tmp18, basis_bits.bit_2));
          bytetest_83_a0 = simd_and(bytetest_80_bf, r800_ffff_tmp420);
          r800_ffff_tmp421 = simd_and(r800_ffff_tmp244, bytetest_ae);
          carryQ.cq[120] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp421, carryQ.get_carry_in(120), r800_ffff_tmp422));
          r800_ffff_tmp423 = simd_and(r800_ffff_tmp422, bytetest_83_a0);
          struct_Lo.cc = simd_or(r800_ffff_tmp423, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_ae = simd_and(tmp105, tmp136);
          bytetest_ae_af = simd_and(tmp105, tmp234);
          r800_ffff_tmp424 = simd_and(r800_ffff_tmp422, bytetest_ae_af);
          struct_Lo.cc = simd_or(r800_ffff_tmp424, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_af = simd_and(tmp105, tmp80);
          r800_ffff_tmp425 = simd_or(basis_bits.bit_3, r800_ffff_tmp3);
          r800_ffff_tmp426 = simd_and(basis_bits.bit_2, r800_ffff_tmp425);
          bytetest_80_a5 = simd_andc(bytetest_80_bf, r800_ffff_tmp426);
          r800_ffff_tmp427 = simd_and(r800_ffff_tmp244, bytetest_af);
          carryQ.cq[121] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp427, carryQ.get_carry_in(121), r800_ffff_tmp428));
          r800_ffff_tmp429 = simd_and(r800_ffff_tmp428, bytetest_80_a5);
          bytetest_ae = simd_and(tmp105, tmp136);
          r800_ffff_tmp430 = simd_and(bytetest_b0_bf, basis_bits.bit_4);
          bytetest_ba_bf = simd_and(r800_ffff_tmp430, tmp187);
          r800_ffff_tmp431 = simd_and(r800_ffff_tmp422, bytetest_ba_bf);
          r800_ffff_tmp432 = simd_or(r800_ffff_tmp431, r800_ffff_tmp429);
          struct_Lo.cc = simd_or(r800_ffff_tmp432, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_b0 = simd_andc(bytetest_b0_bf, tmp6);
          r800_ffff_tmp433 = simd_and(basis_bits.bit_2, r800_ffff_tmp21);
          bytetest_80_a3 = simd_andc(bytetest_80_bf, r800_ffff_tmp433);
          r800_ffff_tmp434 = simd_and(r800_ffff_tmp244, bytetest_b0);
          carryQ.cq[122] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp434, carryQ.get_carry_in(122), r800_ffff_tmp435));
          r800_ffff_tmp436 = simd_and(r800_ffff_tmp435, bytetest_80_a3);
          struct_Lo.cc = simd_or(r800_ffff_tmp436, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_b1 = simd_and(bytetest_b0_bf, tmp11);
          bytetest_8d_8f = simd_and(tmp166, tmp5);
          r800_ffff_tmp437 = simd_and(r800_ffff_tmp244, bytetest_b1);
          carryQ.cq[123] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp437, carryQ.get_carry_in(123), r800_ffff_tmp438));
          r800_ffff_tmp439 = simd_and(r800_ffff_tmp438, bytetest_8d_8f);
          struct_Lo.cc = simd_or(r800_ffff_tmp439, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_b1 = simd_and(bytetest_b0_bf, tmp11);
          r800_ffff_tmp440 = simd_or(simd_and(basis_bits.bit_2, tmp15), simd_andc(r800_ffff_tmp19, basis_bits.bit_2));
          bytetest_9a_b7 = simd_and(bytetest_80_bf, r800_ffff_tmp440);
          r800_ffff_tmp441 = simd_and(r800_ffff_tmp438, bytetest_9a_b7);
          struct_Lo.cc = simd_or(r800_ffff_tmp441, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp36);
          r800_ffff_tmp442 = simd_and(tmp105, basis_bits.bit_4);
          bytetest_a9_ac = simd_and(r800_ffff_tmp442, tmp65);
          r800_ffff_tmp443 = simd_and(r800_ffff_tmp244, bytetest_b3);
          carryQ.cq[124] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp443, carryQ.get_carry_in(124), r800_ffff_tmp444));
          r800_ffff_tmp445 = simd_and(r800_ffff_tmp444, bytetest_a9_ac);
          struct_Lo.cc = simd_or(r800_ffff_tmp445, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp36);
          bytetest_ae_b1 = simd_and(bytetest_a0_bf, r800_ffff_tmp346);
          r800_ffff_tmp446 = simd_and(r800_ffff_tmp444, bytetest_ae_b1);
          struct_Lo.cc = simd_or(r800_ffff_tmp446, struct_Lo.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp36);
          r800_ffff_tmp447 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_b5_b6 = simd_and(r800_ffff_tmp447, tmp148);
          r800_ffff_tmp448 = simd_and(r800_ffff_tmp444, bytetest_b5_b6);
          struct_Lo.cc = simd_or(r800_ffff_tmp448, struct_Lo.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp30);
          bytetest_84 = simd_and(bytetest_80_8f, tmp46);
          r800_ffff_tmp449 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp208), simd_andc(tmp88, basis_bits.bit_4));
          bytetest_b5_b8 = simd_and(bytetest_b0_bf, r800_ffff_tmp449);
          r800_ffff_tmp450 = simd_and(tmp21, bytetest_e2);
          carryQ.cq[125] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp450, carryQ.get_carry_in(125), r800_ffff_tmp451));
          r800_ffff_tmp452 = simd_and(r800_ffff_tmp451, bytetest_84);
          carryQ.cq[126] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp452, carryQ.get_carry_in(126), r800_ffff_tmp453));
          r800_ffff_tmp454 = simd_and(r800_ffff_tmp453, bytetest_b5_b8);
          struct_Lo.cc = simd_or(r800_ffff_tmp454, struct_Lo.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp30);
          bytetest_b5 = simd_and(bytetest_b0_bf, r800_ffff_tmp27);
          r800_ffff_tmp455 = simd_or(basis_bits.bit_3, basis_bits.bit_4);
          r800_ffff_tmp456 = simd_and(basis_bits.bit_2, r800_ffff_tmp455);
          bytetest_80_a7 = simd_andc(bytetest_80_bf, r800_ffff_tmp456);
          r800_ffff_tmp457 = simd_and(r800_ffff_tmp451, bytetest_b5);
          carryQ.cq[127] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp457, carryQ.get_carry_in(127), r800_ffff_tmp458));
          r800_ffff_tmp459 = simd_and(r800_ffff_tmp458, bytetest_80_a7);
          bytetest_b4 = simd_and(bytetest_b0_bf, tmp46);
          bytetest_b0_bf = simd_and(bytetest_80_bf, tmp2);
          r800_ffff_tmp460 = simd_and(r800_ffff_tmp451, bytetest_b4);
          carryQ.cq[128] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp460, carryQ.get_carry_in(128), r800_ffff_tmp461));
          r800_ffff_tmp462 = simd_and(r800_ffff_tmp461, bytetest_b0_bf);
          r800_ffff_tmp463 = simd_or(r800_ffff_tmp462, r800_ffff_tmp459);
          struct_Lo.cc = simd_or(r800_ffff_tmp463, struct_Lo.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp30);
          bytetest_b6 = simd_and(bytetest_b0_bf, tmp55);
          bytetest_80_96 = simd_andc(tmp142, tmp200);
          r800_ffff_tmp464 = simd_and(r800_ffff_tmp451, bytetest_b6);
          carryQ.cq[129] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp464, carryQ.get_carry_in(129), r800_ffff_tmp465));
          r800_ffff_tmp466 = simd_and(r800_ffff_tmp465, bytetest_80_96);
          struct_Lo.cc = simd_or(r800_ffff_tmp466, struct_Lo.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp30);
          bytetest_b6 = simd_and(bytetest_b0_bf, tmp55);
          bytetest_a0_a6 = simd_andc(bytetest_a0_a7, tmp47);
          r800_ffff_tmp467 = simd_and(r800_ffff_tmp465, bytetest_a0_a6);
          struct_Lo.cc = simd_or(r800_ffff_tmp467, struct_Lo.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp30);
          bytetest_b6 = simd_and(bytetest_b0_bf, tmp55);
          bytetest_a8_ae = simd_andc(r800_ffff_tmp442, tmp47);
          r800_ffff_tmp468 = simd_and(r800_ffff_tmp465, bytetest_a8_ae);
          struct_Lo.cc = simd_or(r800_ffff_tmp468, struct_Lo.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp30);
          bytetest_b6 = simd_and(bytetest_b0_bf, tmp55);
          bytetest_b0_b6 = simd_andc(r800_ffff_tmp392, tmp47);
          r800_ffff_tmp469 = simd_and(r800_ffff_tmp465, bytetest_b0_b6);
          struct_Lo.cc = simd_or(r800_ffff_tmp469, struct_Lo.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp30);
          bytetest_b6 = simd_and(bytetest_b0_bf, tmp55);
          bytetest_b8_be = simd_andc(r800_ffff_tmp430, tmp47);
          r800_ffff_tmp470 = simd_and(r800_ffff_tmp465, bytetest_b8_be);
          struct_Lo.cc = simd_or(r800_ffff_tmp470, struct_Lo.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp30);
          bytetest_b7 = simd_and(bytetest_b0_bf, tmp62);
          bytetest_80_86 = simd_andc(bytetest_80_87, tmp47);
          r800_ffff_tmp471 = simd_and(r800_ffff_tmp451, bytetest_b7);
          carryQ.cq[130] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp471, carryQ.get_carry_in(130), r800_ffff_tmp472));
          r800_ffff_tmp473 = simd_and(r800_ffff_tmp472, bytetest_80_86);
          struct_Lo.cc = simd_or(r800_ffff_tmp473, struct_Lo.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp30);
          bytetest_b7 = simd_and(bytetest_b0_bf, tmp62);
          bytetest_88_8e = simd_andc(r800_ffff_tmp239, tmp47);
          r800_ffff_tmp474 = simd_and(r800_ffff_tmp472, bytetest_88_8e);
          struct_Lo.cc = simd_or(r800_ffff_tmp474, struct_Lo.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp30);
          bytetest_b7 = simd_and(bytetest_b0_bf, tmp62);
          bytetest_90_96 = simd_andc(r800_ffff_tmp117, tmp47);
          r800_ffff_tmp475 = simd_and(r800_ffff_tmp472, bytetest_90_96);
          struct_Lo.cc = simd_or(r800_ffff_tmp475, struct_Lo.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp30);
          bytetest_b7 = simd_and(bytetest_b0_bf, tmp62);
          bytetest_98_9e = simd_andc(r800_ffff_tmp73, tmp47);
          r800_ffff_tmp476 = simd_and(r800_ffff_tmp472, bytetest_98_9e);
          struct_Lo.cc = simd_or(r800_ffff_tmp476, struct_Lo.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp36);
          bytetest_80 = simd_andc(bytetest_80_8f, tmp6);
          bytetest_86_86 = simd_and(bytetest_80_8f, tmp55);
          r800_ffff_tmp477 = simd_and(tmp21, bytetest_e3);
          carryQ.cq[131] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp477, carryQ.get_carry_in(131), r800_ffff_tmp478));
          r800_ffff_tmp479 = simd_and(r800_ffff_tmp478, bytetest_80);
          carryQ.cq[132] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp479, carryQ.get_carry_in(132), r800_ffff_tmp480));
          r800_ffff_tmp481 = simd_and(r800_ffff_tmp480, bytetest_86_86);
          struct_Lo.cc = simd_or(r800_ffff_tmp481, struct_Lo.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp36);
          bytetest_80 = simd_andc(bytetest_80_8f, tmp6);
          bytetest_bc_bc = simd_and(bytetest_b0_bf, tmp123);
          r800_ffff_tmp482 = simd_and(r800_ffff_tmp480, bytetest_bc_bc);
          struct_Lo.cc = simd_or(r800_ffff_tmp482, struct_Lo.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp36);
          bytetest_82 = simd_and(bytetest_80_8f, tmp30);
          bytetest_80_96 = simd_andc(tmp142, tmp200);
          r800_ffff_tmp483 = simd_and(r800_ffff_tmp478, bytetest_82);
          carryQ.cq[133] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp483, carryQ.get_carry_in(133), r800_ffff_tmp484));
          r800_ffff_tmp485 = simd_and(r800_ffff_tmp484, bytetest_80_96);
          bytetest_81 = simd_and(bytetest_80_8f, tmp11);
          bytetest_81_bf = simd_and(bytetest_80_bf, r800_ffff_tmp326);
          r800_ffff_tmp486 = simd_and(r800_ffff_tmp478, bytetest_81);
          carryQ.cq[134] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp486, carryQ.get_carry_in(134), r800_ffff_tmp487));
          r800_ffff_tmp488 = simd_and(r800_ffff_tmp487, bytetest_81_bf);
          r800_ffff_tmp489 = simd_or(r800_ffff_tmp488, r800_ffff_tmp485);
          struct_Lo.cc = simd_or(r800_ffff_tmp489, struct_Lo.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp36);
          bytetest_82 = simd_and(bytetest_80_8f, tmp30);
          bytetest_9f_9f = simd_and(tmp94, tmp80);
          r800_ffff_tmp490 = simd_and(r800_ffff_tmp484, bytetest_9f_9f);
          struct_Lo.cc = simd_or(r800_ffff_tmp490, struct_Lo.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp36);
          bytetest_83 = simd_and(bytetest_80_8f, tmp36);
          r800_ffff_tmp491 = simd_and(basis_bits.bit_2, tmp206);
          bytetest_80_ba = simd_andc(bytetest_80_bf, r800_ffff_tmp491);
          r800_ffff_tmp492 = simd_and(r800_ffff_tmp478, bytetest_83);
          carryQ.cq[135] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp492, carryQ.get_carry_in(135), r800_ffff_tmp493));
          r800_ffff_tmp494 = simd_and(r800_ffff_tmp493, bytetest_80_ba);
          bytetest_82 = simd_and(bytetest_80_8f, tmp30);
          bytetest_a1_bf = simd_and(bytetest_a0_bf, r800_ffff_tmp195);
          r800_ffff_tmp495 = simd_and(r800_ffff_tmp484, bytetest_a1_bf);
          r800_ffff_tmp496 = simd_or(r800_ffff_tmp495, r800_ffff_tmp494);
          struct_Lo.cc = simd_or(r800_ffff_tmp496, struct_Lo.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp36);
          bytetest_83 = simd_and(bytetest_80_8f, tmp36);
          bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp80);
          r800_ffff_tmp497 = simd_and(r800_ffff_tmp493, bytetest_bf_bf);
          struct_Lo.cc = simd_or(r800_ffff_tmp497, struct_Lo.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp36);
          bytetest_84 = simd_and(bytetest_80_8f, tmp46);
          r800_ffff_tmp498 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp387), simd_andc(tmp144, basis_bits.bit_2));
          bytetest_85_ad = simd_and(bytetest_80_bf, r800_ffff_tmp498);
          r800_ffff_tmp499 = simd_and(r800_ffff_tmp478, bytetest_84);
          carryQ.cq[136] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp499, carryQ.get_carry_in(136), r800_ffff_tmp500));
          r800_ffff_tmp501 = simd_and(r800_ffff_tmp500, bytetest_85_ad);
          struct_Lo.cc = simd_or(r800_ffff_tmp501, struct_Lo.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp36);
          bytetest_86 = simd_and(bytetest_80_8f, tmp55);
          r800_ffff_tmp502 = simd_and(basis_bits.bit_4, tmp47);
          bytetest_80_8e = simd_andc(bytetest_80_8f, r800_ffff_tmp502);
          r800_ffff_tmp503 = simd_and(r800_ffff_tmp478, bytetest_86);
          carryQ.cq[137] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp503, carryQ.get_carry_in(137), r800_ffff_tmp504));
          r800_ffff_tmp505 = simd_and(r800_ffff_tmp504, bytetest_80_8e);
          bytetest_85 = simd_and(bytetest_80_8f, r800_ffff_tmp27);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp506 = simd_and(r800_ffff_tmp478, bytetest_85);
          carryQ.cq[138] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp506, carryQ.get_carry_in(138), r800_ffff_tmp507));
          r800_ffff_tmp508 = simd_and(r800_ffff_tmp507, bytetest_80_bf);
          bytetest_84 = simd_and(bytetest_80_8f, tmp46);
          r800_ffff_tmp509 = simd_or(basis_bits.bit_4, tmp37);
          bytetest_b1_bf = simd_and(bytetest_b0_bf, r800_ffff_tmp509);
          r800_ffff_tmp510 = simd_and(r800_ffff_tmp500, bytetest_b1_bf);
          r800_ffff_tmp511 = simd_or(r800_ffff_tmp510, r800_ffff_tmp508);
          r800_ffff_tmp512 = simd_or(r800_ffff_tmp511, r800_ffff_tmp505);
          struct_Lo.cc = simd_or(r800_ffff_tmp512, struct_Lo.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp36);
          bytetest_86 = simd_and(bytetest_80_8f, tmp55);
          bytetest_a0_ba = simd_andc(bytetest_a0_bf, tmp206);
          r800_ffff_tmp513 = simd_and(r800_ffff_tmp504, bytetest_a0_ba);
          struct_Lo.cc = simd_or(r800_ffff_tmp513, struct_Lo.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp36);
          bytetest_87 = simd_and(bytetest_80_8f, tmp62);
          bytetest_b0_bf = simd_and(bytetest_80_bf, tmp2);
          r800_ffff_tmp514 = simd_and(r800_ffff_tmp478, bytetest_87);
          carryQ.cq[139] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp514, carryQ.get_carry_in(139), r800_ffff_tmp515));
          r800_ffff_tmp516 = simd_and(r800_ffff_tmp515, bytetest_b0_bf);
          struct_Lo.cc = simd_or(r800_ffff_tmp516, struct_Lo.cc);
          bytetest_e4 = simd_and(r800_ffff_tmp1, tmp46);
          bytetest_b6 = simd_and(bytetest_b0_bf, tmp55);
          bytetest_80_b5 = simd_andc(bytetest_80_bf, r800_ffff_tmp376);
          r800_ffff_tmp517 = simd_and(tmp21, bytetest_e4);
          carryQ.cq[140] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp517, carryQ.get_carry_in(140), r800_ffff_tmp518));
          r800_ffff_tmp519 = simd_and(r800_ffff_tmp518, bytetest_b6);
          carryQ.cq[141] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp519, carryQ.get_carry_in(141), r800_ffff_tmp520));
          r800_ffff_tmp521 = simd_and(r800_ffff_tmp520, bytetest_80_b5);
          bytetest_80_b5 = simd_andc(bytetest_80_bf, r800_ffff_tmp376);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp522 = simd_and(r800_ffff_tmp518, bytetest_80_b5);
          carryQ.cq[142] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp522, carryQ.get_carry_in(142), r800_ffff_tmp523));
          r800_ffff_tmp524 = simd_and(r800_ffff_tmp523, bytetest_80_bf);
          r800_ffff_tmp525 = simd_or(r800_ffff_tmp524, r800_ffff_tmp521);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp36);
          bytetest_90_bf = simd_and(bytetest_80_bf, tmp12);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp526 = simd_and(r800_ffff_tmp478, bytetest_90_bf);
          carryQ.cq[143] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp526, carryQ.get_carry_in(143), r800_ffff_tmp527));
          r800_ffff_tmp528 = simd_and(r800_ffff_tmp527, bytetest_80_bf);
          r800_ffff_tmp529 = simd_or(r800_ffff_tmp528, r800_ffff_tmp525);
          struct_Lo.cc = simd_or(r800_ffff_tmp529, struct_Lo.cc);
          bytetest_e9 = simd_and(r800_ffff_tmp1, tmp157);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp80);
          bytetest_80_8c = simd_andc(bytetest_80_8f, tmp89);
          r800_ffff_tmp530 = simd_and(tmp21, bytetest_e9);
          carryQ.cq[144] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp530, carryQ.get_carry_in(144), r800_ffff_tmp531));
          r800_ffff_tmp532 = simd_and(r800_ffff_tmp531, bytetest_bf);
          carryQ.cq[145] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp532, carryQ.get_carry_in(145), r800_ffff_tmp533));
          r800_ffff_tmp534 = simd_and(r800_ffff_tmp533, bytetest_80_8c);
          r800_ffff_tmp535 = simd_and(basis_bits.bit_2, r800_ffff_tmp57);
          bytetest_80_be = simd_andc(bytetest_80_bf, r800_ffff_tmp535);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp536 = simd_and(r800_ffff_tmp531, bytetest_80_be);
          carryQ.cq[146] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp536, carryQ.get_carry_in(146), r800_ffff_tmp537));
          r800_ffff_tmp538 = simd_and(r800_ffff_tmp537, bytetest_80_bf);
          r800_ffff_tmp539 = simd_or(r800_ffff_tmp538, r800_ffff_tmp534);
          bytetest_e5_e8 = simd_and(r800_ffff_tmp1, r800_ffff_tmp449);
          bytetest_e4 = simd_and(r800_ffff_tmp1, tmp46);
          bytetest_b8_bf = simd_and(bytetest_b0_bf, basis_bits.bit_4);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp540 = simd_and(r800_ffff_tmp518, bytetest_b8_bf);
          carryQ.cq[147] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp540, carryQ.get_carry_in(147), r800_ffff_tmp541));
          r800_ffff_tmp542 = simd_and(r800_ffff_tmp541, bytetest_80_bf);
          r800_ffff_tmp543 = simd_or(r800_ffff_tmp542, bytetest_e5_e8);
          r800_ffff_tmp544 = simd_or(r800_ffff_tmp543, r800_ffff_tmp539);
          struct_Lo.cc = simd_or(r800_ffff_tmp544, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_80 = simd_andc(bytetest_80_8f, tmp6);
          bytetest_80_94 = simd_andc(tmp142, tmp217);
          r800_ffff_tmp545 = simd_and(tmp21, bytetest_ea);
          carryQ.cq[148] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp545, carryQ.get_carry_in(148), r800_ffff_tmp546));
          r800_ffff_tmp547 = simd_and(r800_ffff_tmp546, bytetest_80);
          carryQ.cq[149] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp547, carryQ.get_carry_in(149), r800_ffff_tmp548));
          r800_ffff_tmp549 = simd_and(r800_ffff_tmp548, bytetest_80_94);
          struct_Lo.cc = simd_or(r800_ffff_tmp549, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_92 = simd_and(tmp94, tmp30);
          bytetest_80_8c = simd_andc(bytetest_80_8f, tmp89);
          r800_ffff_tmp550 = simd_and(r800_ffff_tmp546, bytetest_92);
          carryQ.cq[150] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp550, carryQ.get_carry_in(150), r800_ffff_tmp551));
          r800_ffff_tmp552 = simd_and(r800_ffff_tmp551, bytetest_80_8c);
          r800_ffff_tmp553 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp85), simd_andc(tmp6, basis_bits.bit_3));
          bytetest_81_91 = simd_and(tmp142, r800_ffff_tmp553);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp554 = simd_and(r800_ffff_tmp546, bytetest_81_91);
          carryQ.cq[151] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp554, carryQ.get_carry_in(151), r800_ffff_tmp555));
          r800_ffff_tmp556 = simd_and(r800_ffff_tmp555, bytetest_80_bf);
          bytetest_80 = simd_andc(bytetest_80_8f, tmp6);
          r800_ffff_tmp557 = simd_or(basis_bits.bit_2, r800_ffff_tmp4);
          bytetest_96_bf = simd_and(bytetest_80_bf, r800_ffff_tmp557);
          r800_ffff_tmp558 = simd_and(r800_ffff_tmp548, bytetest_96_bf);
          r800_ffff_tmp559 = simd_or(r800_ffff_tmp558, r800_ffff_tmp556);
          r800_ffff_tmp560 = simd_or(r800_ffff_tmp559, r800_ffff_tmp552);
          struct_Lo.cc = simd_or(r800_ffff_tmp560, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_93 = simd_and(tmp94, tmp36);
          r800_ffff_tmp561 = simd_or(simd_and(basis_bits.bit_2, tmp15), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
          bytetest_90_b7 = simd_and(bytetest_80_bf, r800_ffff_tmp561);
          r800_ffff_tmp562 = simd_and(r800_ffff_tmp546, bytetest_93);
          carryQ.cq[152] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp562, carryQ.get_carry_in(152), r800_ffff_tmp563));
          r800_ffff_tmp564 = simd_and(r800_ffff_tmp563, bytetest_90_b7);
          struct_Lo.cc = simd_or(r800_ffff_tmp564, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_98 = simd_and(tmp94, tmp106);
          bytetest_80_8b = simd_andc(bytetest_80_8f, tmp78);
          r800_ffff_tmp565 = simd_and(r800_ffff_tmp546, bytetest_98);
          carryQ.cq[153] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp565, carryQ.get_carry_in(153), r800_ffff_tmp566));
          r800_ffff_tmp567 = simd_and(r800_ffff_tmp566, bytetest_80_8b);
          bytetest_94_97 = simd_and(tmp94, tmp45);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp568 = simd_and(r800_ffff_tmp546, bytetest_94_97);
          carryQ.cq[154] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp568, carryQ.get_carry_in(154), r800_ffff_tmp569));
          r800_ffff_tmp570 = simd_and(r800_ffff_tmp569, bytetest_80_bf);
          r800_ffff_tmp571 = simd_or(r800_ffff_tmp570, r800_ffff_tmp567);
          struct_Lo.cc = simd_or(r800_ffff_tmp571, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_98 = simd_and(tmp94, tmp106);
          bytetest_90_9f = simd_and(bytetest_80_bf, tmp8);
          r800_ffff_tmp572 = simd_and(r800_ffff_tmp566, bytetest_90_9f);
          struct_Lo.cc = simd_or(r800_ffff_tmp572, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_98 = simd_and(bytetest_90_9f, tmp106);
          bytetest_aa_ab = simd_and(tmp105, r800_ffff_tmp218);
          r800_ffff_tmp573 = simd_and(r800_ffff_tmp566, bytetest_aa_ab);
          struct_Lo.cc = simd_or(r800_ffff_tmp573, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_99 = simd_and(bytetest_90_9f, tmp157);
          bytetest_ae_ae = simd_and(tmp105, tmp136);
          r800_ffff_tmp574 = simd_and(r800_ffff_tmp546, bytetest_99);
          carryQ.cq[155] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp574, carryQ.get_carry_in(155), r800_ffff_tmp575));
          r800_ffff_tmp576 = simd_and(r800_ffff_tmp575, bytetest_ae_ae);
          struct_Lo.cc = simd_or(r800_ffff_tmp576, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_9b = simd_and(bytetest_90_9f, tmp129);
          bytetest_80_a5 = simd_andc(bytetest_80_bf, r800_ffff_tmp426);
          r800_ffff_tmp577 = simd_and(r800_ffff_tmp546, bytetest_9b);
          carryQ.cq[156] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp577, carryQ.get_carry_in(156), r800_ffff_tmp578));
          r800_ffff_tmp579 = simd_and(r800_ffff_tmp578, bytetest_80_a5);
          bytetest_9a = simd_and(bytetest_90_9f, tmp70);
          bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
          r800_ffff_tmp580 = simd_and(r800_ffff_tmp546, bytetest_9a);
          carryQ.cq[157] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp580, carryQ.get_carry_in(157), r800_ffff_tmp581));
          r800_ffff_tmp582 = simd_and(r800_ffff_tmp581, bytetest_a0_bf);
          r800_ffff_tmp583 = simd_or(r800_ffff_tmp582, r800_ffff_tmp579);
          struct_Lo.cc = simd_or(r800_ffff_tmp583, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_a0 = simd_andc(tmp105, tmp6);
          bytetest_80_81 = simd_andc(bytetest_80_8f, tmp130);
          r800_ffff_tmp584 = simd_and(r800_ffff_tmp546, bytetest_a0);
          carryQ.cq[158] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp584, carryQ.get_carry_in(158), r800_ffff_tmp585));
          r800_ffff_tmp586 = simd_and(r800_ffff_tmp585, bytetest_80_81);
          bytetest_9f = simd_and(bytetest_90_9f, tmp80);
          bytetest_bb_bf = simd_and(bytetest_b8_bf, tmp71);
          r800_ffff_tmp587 = simd_and(r800_ffff_tmp546, bytetest_9f);
          carryQ.cq[159] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp587, carryQ.get_carry_in(159), r800_ffff_tmp588));
          r800_ffff_tmp589 = simd_and(r800_ffff_tmp588, bytetest_bb_bf);
          r800_ffff_tmp590 = simd_or(r800_ffff_tmp589, r800_ffff_tmp586);
          struct_Lo.cc = simd_or(r800_ffff_tmp590, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_a0 = simd_andc(tmp105, tmp6);
          r800_ffff_tmp591 = simd_or(simd_and(basis_bits.bit_5, r800_ffff_tmp118), simd_andc(tmp16, basis_bits.bit_5));
          bytetest_83_85 = simd_and(bytetest_80_87, r800_ffff_tmp591);
          r800_ffff_tmp592 = simd_and(r800_ffff_tmp585, bytetest_83_85);
          struct_Lo.cc = simd_or(r800_ffff_tmp592, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_a0 = simd_andc(tmp105, tmp6);
          bytetest_87_8a = simd_and(bytetest_80_8f, tmp179);
          r800_ffff_tmp593 = simd_and(r800_ffff_tmp585, bytetest_87_8a);
          struct_Lo.cc = simd_or(r800_ffff_tmp593, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_a0 = simd_andc(tmp105, tmp6);
          r800_ffff_tmp594 = simd_not(tmp18);
          r800_ffff_tmp595 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp594), simd_andc(r800_ffff_tmp394, basis_bits.bit_2));
          bytetest_8c_a2 = simd_and(bytetest_80_bf, r800_ffff_tmp595);
          r800_ffff_tmp596 = simd_and(r800_ffff_tmp585, bytetest_8c_a2);
          struct_Lo.cc = simd_or(r800_ffff_tmp596, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_a1 = simd_and(tmp105, tmp11);
          bytetest_80_b3 = simd_andc(bytetest_80_bf, r800_ffff_tmp355);
          r800_ffff_tmp597 = simd_and(r800_ffff_tmp546, bytetest_a1);
          carryQ.cq[160] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp597, carryQ.get_carry_in(160), r800_ffff_tmp598));
          r800_ffff_tmp599 = simd_and(r800_ffff_tmp598, bytetest_80_b3);
          struct_Lo.cc = simd_or(r800_ffff_tmp599, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_a2 = simd_and(tmp105, tmp30);
          r800_ffff_tmp600 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp410), simd_andc(tmp254, basis_bits.bit_2));
          bytetest_82_b3 = simd_and(bytetest_80_bf, r800_ffff_tmp600);
          r800_ffff_tmp601 = simd_and(r800_ffff_tmp546, bytetest_a2);
          carryQ.cq[161] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp601, carryQ.get_carry_in(161), r800_ffff_tmp602));
          r800_ffff_tmp603 = simd_and(r800_ffff_tmp602, bytetest_82_b3);
          struct_Lo.cc = simd_or(r800_ffff_tmp603, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_a3 = simd_and(tmp105, tmp36);
          bytetest_b2_b7 = simd_and(r800_ffff_tmp392, tmp187);
          r800_ffff_tmp604 = simd_and(r800_ffff_tmp546, bytetest_a3);
          carryQ.cq[162] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp604, carryQ.get_carry_in(162), r800_ffff_tmp605));
          r800_ffff_tmp606 = simd_and(r800_ffff_tmp605, bytetest_b2_b7);
          struct_Lo.cc = simd_or(r800_ffff_tmp606, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_a3 = simd_and(tmp105, tmp36);
          bytetest_bb_bb = simd_and(bytetest_b0_bf, tmp129);
          r800_ffff_tmp607 = simd_and(r800_ffff_tmp605, bytetest_bb_bb);
          struct_Lo.cc = simd_or(r800_ffff_tmp607, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_a4 = simd_and(tmp105, tmp46);
          r800_ffff_tmp608 = simd_not(r800_ffff_tmp425);
          r800_ffff_tmp609 = simd_or(basis_bits.bit_3, tmp188);
          r800_ffff_tmp610 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp608), simd_andc(r800_ffff_tmp609, basis_bits.bit_2));
          bytetest_8a_a5 = simd_and(bytetest_80_bf, r800_ffff_tmp610);
          r800_ffff_tmp611 = simd_and(r800_ffff_tmp546, bytetest_a4);
          carryQ.cq[163] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp611, carryQ.get_carry_in(163), r800_ffff_tmp612));
          r800_ffff_tmp613 = simd_and(r800_ffff_tmp612, bytetest_8a_a5);
          struct_Lo.cc = simd_or(r800_ffff_tmp613, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_a5 = simd_and(tmp105, r800_ffff_tmp27);
          bytetest_80_86 = simd_andc(bytetest_80_87, tmp47);
          r800_ffff_tmp614 = simd_and(r800_ffff_tmp546, bytetest_a5);
          carryQ.cq[164] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp614, carryQ.get_carry_in(164), r800_ffff_tmp615));
          r800_ffff_tmp616 = simd_and(r800_ffff_tmp615, bytetest_80_86);
          bytetest_a4 = simd_and(tmp105, tmp46);
          bytetest_b0_bf = simd_and(bytetest_80_bf, tmp2);
          r800_ffff_tmp617 = simd_and(r800_ffff_tmp612, bytetest_b0_bf);
          r800_ffff_tmp618 = simd_or(r800_ffff_tmp617, r800_ffff_tmp616);
          struct_Lo.cc = simd_or(r800_ffff_tmp618, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_a5 = simd_and(tmp105, r800_ffff_tmp27);
          bytetest_a0_bc = simd_andc(bytetest_a0_bf, r800_ffff_tmp382);
          r800_ffff_tmp619 = simd_and(r800_ffff_tmp615, bytetest_a0_bc);
          struct_Lo.cc = simd_or(r800_ffff_tmp619, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_a6 = simd_and(tmp105, tmp55);
          r800_ffff_tmp620 = simd_or(simd_and(basis_bits.bit_2, tmp57), simd_andc(r800_ffff_tmp21, basis_bits.bit_2));
          bytetest_84_b2 = simd_and(bytetest_80_bf, r800_ffff_tmp620);
          r800_ffff_tmp621 = simd_and(r800_ffff_tmp546, bytetest_a6);
          carryQ.cq[165] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp621, carryQ.get_carry_in(165), r800_ffff_tmp622));
          r800_ffff_tmp623 = simd_and(r800_ffff_tmp622, bytetest_84_b2);
          struct_Lo.cc = simd_or(r800_ffff_tmp623, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_a8 = simd_and(tmp105, tmp106);
          bytetest_80_a8 = simd_andc(bytetest_80_bf, r800_ffff_tmp371);
          r800_ffff_tmp624 = simd_and(r800_ffff_tmp546, bytetest_a8);
          carryQ.cq[166] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp624, carryQ.get_carry_in(166), r800_ffff_tmp625));
          r800_ffff_tmp626 = simd_and(r800_ffff_tmp625, bytetest_80_a8);
          struct_Lo.cc = simd_or(r800_ffff_tmp626, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_a9 = simd_and(tmp105, tmp157);
          bytetest_80_82 = simd_andc(bytetest_80_83, tmp16);
          r800_ffff_tmp627 = simd_and(r800_ffff_tmp546, bytetest_a9);
          carryQ.cq[167] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp627, carryQ.get_carry_in(167), r800_ffff_tmp628));
          r800_ffff_tmp629 = simd_and(r800_ffff_tmp628, bytetest_80_82);
          struct_Lo.cc = simd_or(r800_ffff_tmp629, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_a9 = simd_and(tmp105, tmp157);
          r800_ffff_tmp630 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp186), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
          bytetest_84_8b = simd_and(bytetest_80_8f, r800_ffff_tmp630);
          r800_ffff_tmp631 = simd_and(r800_ffff_tmp628, bytetest_84_8b);
          struct_Lo.cc = simd_or(r800_ffff_tmp631, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_a9 = simd_and(tmp105, tmp157);
          bytetest_a0_af = simd_and(bytetest_80_bf, tmp104);
          r800_ffff_tmp632 = simd_and(r800_ffff_tmp628, bytetest_a0_af);
          struct_Lo.cc = simd_or(r800_ffff_tmp632, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_a9 = simd_and(bytetest_a0_af, tmp157);
          r800_ffff_tmp633 = simd_not(tmp16);
          r800_ffff_tmp634 = simd_or(simd_and(basis_bits.bit_5, r800_ffff_tmp633), simd_andc(tmp5, basis_bits.bit_5));
          bytetest_b1_b6 = simd_and(r800_ffff_tmp392, r800_ffff_tmp634);
          r800_ffff_tmp635 = simd_and(r800_ffff_tmp628, bytetest_b1_b6);
          struct_Lo.cc = simd_or(r800_ffff_tmp635, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_a9 = simd_and(bytetest_a0_af, tmp157);
          bytetest_ba_ba = simd_and(bytetest_b0_bf, tmp70);
          r800_ffff_tmp636 = simd_and(r800_ffff_tmp628, bytetest_ba_ba);
          struct_Lo.cc = simd_or(r800_ffff_tmp636, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_aa = simd_and(bytetest_a0_af, tmp70);
          bytetest_80_af = simd_andc(bytetest_80_bf, tmp2);
          r800_ffff_tmp637 = simd_and(r800_ffff_tmp546, bytetest_aa);
          carryQ.cq[168] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp637, carryQ.get_carry_in(168), r800_ffff_tmp638));
          r800_ffff_tmp639 = simd_and(r800_ffff_tmp638, bytetest_80_af);
          struct_Lo.cc = simd_or(r800_ffff_tmp639, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_aa = simd_and(bytetest_a0_af, tmp70);
          bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp11);
          r800_ffff_tmp640 = simd_and(r800_ffff_tmp638, bytetest_b1_b1);
          struct_Lo.cc = simd_or(r800_ffff_tmp640, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_aa = simd_and(bytetest_a0_af, tmp70);
          bytetest_b5_b6 = simd_and(r800_ffff_tmp447, tmp148);
          r800_ffff_tmp641 = simd_and(r800_ffff_tmp638, bytetest_b5_b6);
          struct_Lo.cc = simd_or(r800_ffff_tmp641, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_aa = simd_and(bytetest_a0_af, tmp70);
          r800_ffff_tmp642 = simd_or(simd_and(basis_bits.bit_5, r800_ffff_tmp118), simd_andc(tmp5, basis_bits.bit_5));
          bytetest_b9_bd = simd_and(bytetest_b8_bf, r800_ffff_tmp642);
          r800_ffff_tmp643 = simd_and(r800_ffff_tmp638, bytetest_b9_bd);
          struct_Lo.cc = simd_or(r800_ffff_tmp643, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_ab = simd_and(bytetest_a0_af, tmp129);
          bytetest_80_80 = simd_andc(bytetest_80_8f, tmp6);
          r800_ffff_tmp644 = simd_and(r800_ffff_tmp546, bytetest_ab);
          carryQ.cq[169] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp644, carryQ.get_carry_in(169), r800_ffff_tmp645));
          r800_ffff_tmp646 = simd_and(r800_ffff_tmp645, bytetest_80_80);
          struct_Lo.cc = simd_or(r800_ffff_tmp646, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_ab = simd_and(bytetest_a0_af, tmp129);
          bytetest_82_82 = simd_and(bytetest_80_8f, tmp30);
          r800_ffff_tmp647 = simd_and(r800_ffff_tmp645, bytetest_82_82);
          struct_Lo.cc = simd_or(r800_ffff_tmp647, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_ab = simd_and(bytetest_a0_af, tmp129);
          r800_ffff_tmp648 = simd_and(bytetest_90_9f, basis_bits.bit_4);
          bytetest_9b_9c = simd_and(r800_ffff_tmp648, r800_ffff_tmp125);
          r800_ffff_tmp649 = simd_and(r800_ffff_tmp645, bytetest_9b_9c);
          struct_Lo.cc = simd_or(r800_ffff_tmp649, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_ab = simd_and(bytetest_a0_af, tmp129);
          bytetest_a0_aa = simd_andc(bytetest_a0_af, tmp72);
          r800_ffff_tmp650 = simd_and(r800_ffff_tmp645, bytetest_a0_aa);
          struct_Lo.cc = simd_or(r800_ffff_tmp650, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_ab = simd_and(bytetest_a0_af, tmp129);
          bytetest_b2_b2 = simd_and(bytetest_b0_bf, tmp30);
          r800_ffff_tmp651 = simd_and(r800_ffff_tmp645, bytetest_b2_b2);
          struct_Lo.cc = simd_or(r800_ffff_tmp651, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_ac = simd_and(bytetest_a0_af, tmp123);
          bytetest_81_86 = simd_and(bytetest_80_87, r800_ffff_tmp634);
          r800_ffff_tmp652 = simd_and(r800_ffff_tmp546, bytetest_ac);
          carryQ.cq[170] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp652, carryQ.get_carry_in(170), r800_ffff_tmp653));
          r800_ffff_tmp654 = simd_and(r800_ffff_tmp653, bytetest_81_86);
          struct_Lo.cc = simd_or(r800_ffff_tmp654, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_ac = simd_and(bytetest_a0_af, tmp123);
          bytetest_89_8e = simd_and(r800_ffff_tmp239, r800_ffff_tmp634);
          r800_ffff_tmp655 = simd_and(r800_ffff_tmp653, bytetest_89_8e);
          struct_Lo.cc = simd_or(r800_ffff_tmp655, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_ac = simd_and(bytetest_a0_af, tmp123);
          r800_ffff_tmp656 = simd_andc(bytetest_90_9f, basis_bits.bit_4);
          bytetest_91_96 = simd_and(r800_ffff_tmp656, r800_ffff_tmp634);
          r800_ffff_tmp657 = simd_and(r800_ffff_tmp653, bytetest_91_96);
          struct_Lo.cc = simd_or(r800_ffff_tmp657, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_ac = simd_and(bytetest_a0_af, tmp123);
          r800_ffff_tmp658 = simd_andc(bytetest_a0_af, basis_bits.bit_4);
          bytetest_a0_a6 = simd_andc(r800_ffff_tmp658, tmp47);
          r800_ffff_tmp659 = simd_and(r800_ffff_tmp653, bytetest_a0_a6);
          struct_Lo.cc = simd_or(r800_ffff_tmp659, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_ac = simd_and(bytetest_a0_af, tmp123);
          r800_ffff_tmp660 = simd_and(bytetest_a0_af, basis_bits.bit_4);
          bytetest_a8_ae = simd_andc(r800_ffff_tmp660, tmp47);
          r800_ffff_tmp661 = simd_and(r800_ffff_tmp653, bytetest_a8_ae);
          struct_Lo.cc = simd_or(r800_ffff_tmp661, struct_Lo.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_af = simd_and(bytetest_a0_af, tmp80);
          r800_ffff_tmp662 = simd_and(basis_bits.bit_2, tmp18);
          bytetest_80_a2 = simd_andc(bytetest_80_bf, r800_ffff_tmp662);
          r800_ffff_tmp663 = simd_and(r800_ffff_tmp546, bytetest_af);
          carryQ.cq[171] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp663, carryQ.get_carry_in(171), r800_ffff_tmp664));
          r800_ffff_tmp665 = simd_and(r800_ffff_tmp664, bytetest_80_a2);
          struct_Lo.cc = simd_or(r800_ffff_tmp665, struct_Lo.cc);
          bytetest_ed = simd_and(r800_ffff_tmp1, tmp79);
          bytetest_9e = simd_and(bytetest_90_9f, tmp136);
          bytetest_80_a3 = simd_andc(bytetest_80_bf, r800_ffff_tmp433);
          r800_ffff_tmp666 = simd_and(tmp21, bytetest_ed);
          carryQ.cq[172] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp666, carryQ.get_carry_in(172), r800_ffff_tmp667));
          r800_ffff_tmp668 = simd_and(r800_ffff_tmp667, bytetest_9e);
          carryQ.cq[173] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp668, carryQ.get_carry_in(173), r800_ffff_tmp669));
          r800_ffff_tmp670 = simd_and(r800_ffff_tmp669, bytetest_80_a3);
          bytetest_80_9d = simd_andc(tmp142, tmp235);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp671 = simd_and(r800_ffff_tmp667, bytetest_80_9d);
          carryQ.cq[174] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp671, carryQ.get_carry_in(174), r800_ffff_tmp672));
          r800_ffff_tmp673 = simd_and(r800_ffff_tmp672, bytetest_80_bf);
          r800_ffff_tmp674 = simd_or(r800_ffff_tmp673, r800_ffff_tmp670);
          r800_ffff_tmp675 = simd_and(r800_ffff_tmp1, basis_bits.bit_4);
          bytetest_eb_ec = simd_and(r800_ffff_tmp675, r800_ffff_tmp125);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp70);
          bytetest_b0_bf = simd_and(bytetest_80_bf, tmp2);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp676 = simd_and(r800_ffff_tmp546, bytetest_b0_bf);
          carryQ.cq[175] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp676, carryQ.get_carry_in(175), r800_ffff_tmp677));
          r800_ffff_tmp678 = simd_and(r800_ffff_tmp677, bytetest_80_bf);
          r800_ffff_tmp679 = simd_or(r800_ffff_tmp678, bytetest_eb_ec);
          r800_ffff_tmp680 = simd_or(r800_ffff_tmp679, r800_ffff_tmp674);
          struct_Lo.cc = simd_or(r800_ffff_tmp680, struct_Lo.cc);
          bytetest_ed = simd_and(r800_ffff_tmp1, tmp79);
          bytetest_9f = simd_and(bytetest_90_9f, tmp80);
          bytetest_80_86 = simd_andc(bytetest_80_87, tmp47);
          r800_ffff_tmp681 = simd_and(r800_ffff_tmp667, bytetest_9f);
          carryQ.cq[176] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp681, carryQ.get_carry_in(176), r800_ffff_tmp682));
          r800_ffff_tmp683 = simd_and(r800_ffff_tmp682, bytetest_80_86);
          bytetest_9e = simd_and(bytetest_90_9f, tmp136);
          bytetest_b0_bf = simd_and(bytetest_80_bf, tmp2);
          r800_ffff_tmp684 = simd_and(r800_ffff_tmp669, bytetest_b0_bf);
          r800_ffff_tmp685 = simd_or(r800_ffff_tmp684, r800_ffff_tmp683);
          struct_Lo.cc = simd_or(r800_ffff_tmp685, struct_Lo.cc);
          bytetest_ed = simd_and(r800_ffff_tmp1, tmp79);
          bytetest_9f = simd_and(bytetest_90_9f, tmp80);
          r800_ffff_tmp686 = simd_not(tmp224);
          r800_ffff_tmp687 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp686), simd_andc(tmp73, basis_bits.bit_2));
          bytetest_8b_bb = simd_and(bytetest_80_bf, r800_ffff_tmp687);
          r800_ffff_tmp688 = simd_and(r800_ffff_tmp682, bytetest_8b_bb);
          struct_Lo.cc = simd_or(r800_ffff_tmp688, struct_Lo.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp80);
          bytetest_a9 = simd_and(bytetest_a0_af, tmp157);
          r800_ffff_tmp689 = simd_and(basis_bits.bit_2, r800_ffff_tmp386);
          bytetest_80_ad = simd_andc(bytetest_80_bf, r800_ffff_tmp689);
          r800_ffff_tmp690 = simd_and(tmp21, bytetest_ef);
          carryQ.cq[177] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp690, carryQ.get_carry_in(177), r800_ffff_tmp691));
          r800_ffff_tmp692 = simd_and(r800_ffff_tmp691, bytetest_a9);
          carryQ.cq[178] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp692, carryQ.get_carry_in(178), r800_ffff_tmp693));
          r800_ffff_tmp694 = simd_and(r800_ffff_tmp693, bytetest_80_ad);
          bytetest_a4_a8 = simd_and(bytetest_a0_af, r800_ffff_tmp270);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp695 = simd_and(r800_ffff_tmp691, bytetest_a4_a8);
          carryQ.cq[179] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp695, carryQ.get_carry_in(179), r800_ffff_tmp696));
          r800_ffff_tmp697 = simd_and(r800_ffff_tmp696, bytetest_80_bf);
          r800_ffff_tmp698 = simd_or(r800_ffff_tmp697, r800_ffff_tmp694);
          struct_Lo.cc = simd_or(r800_ffff_tmp698, struct_Lo.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp80);
          bytetest_ab = simd_and(bytetest_a0_af, tmp129);
          bytetest_80_99 = simd_andc(tmp142, r800_ffff_tmp19);
          r800_ffff_tmp699 = simd_and(r800_ffff_tmp691, bytetest_ab);
          carryQ.cq[180] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp699, carryQ.get_carry_in(180), r800_ffff_tmp700));
          r800_ffff_tmp701 = simd_and(r800_ffff_tmp700, bytetest_80_99);
          bytetest_aa = simd_and(bytetest_a0_af, tmp70);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp702 = simd_and(r800_ffff_tmp691, bytetest_aa);
          carryQ.cq[181] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp702, carryQ.get_carry_in(181), r800_ffff_tmp703));
          r800_ffff_tmp704 = simd_and(r800_ffff_tmp703, bytetest_80_bf);
          bytetest_a9 = simd_and(bytetest_a0_af, tmp157);
          bytetest_b0_bf = simd_and(bytetest_80_bf, tmp2);
          r800_ffff_tmp705 = simd_and(r800_ffff_tmp693, bytetest_b0_bf);
          r800_ffff_tmp706 = simd_or(r800_ffff_tmp705, r800_ffff_tmp704);
          r800_ffff_tmp707 = simd_or(r800_ffff_tmp706, r800_ffff_tmp701);
          struct_Lo.cc = simd_or(r800_ffff_tmp707, struct_Lo.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp80);
          bytetest_ac = simd_and(bytetest_a0_af, tmp123);
          bytetest_9d_9d = simd_and(bytetest_90_9f, tmp79);
          r800_ffff_tmp708 = simd_and(r800_ffff_tmp691, bytetest_ac);
          carryQ.cq[182] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp708, carryQ.get_carry_in(182), r800_ffff_tmp709));
          r800_ffff_tmp710 = simd_and(r800_ffff_tmp709, bytetest_9d_9d);
          struct_Lo.cc = simd_or(r800_ffff_tmp710, struct_Lo.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp80);
          bytetest_ac = simd_and(bytetest_a0_af, tmp123);
          r800_ffff_tmp711 = simd_or(simd_and(basis_bits.bit_2, tmp40), simd_andc(r800_ffff_tmp57, basis_bits.bit_2));
          bytetest_9f_a8 = simd_and(bytetest_80_bf, r800_ffff_tmp711);
          r800_ffff_tmp712 = simd_and(r800_ffff_tmp709, bytetest_9f_a8);
          struct_Lo.cc = simd_or(r800_ffff_tmp712, struct_Lo.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp80);
          bytetest_ac = simd_and(bytetest_a0_af, tmp123);
          r800_ffff_tmp713 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp178), simd_andc(tmp188, basis_bits.bit_3));
          bytetest_aa_b6 = simd_and(bytetest_a0_bf, r800_ffff_tmp713);
          r800_ffff_tmp714 = simd_and(r800_ffff_tmp709, bytetest_aa_b6);
          struct_Lo.cc = simd_or(r800_ffff_tmp714, struct_Lo.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp80);
          bytetest_ac = simd_and(bytetest_a0_af, tmp123);
          bytetest_b8_bc = simd_andc(bytetest_b8_bf, tmp88);
          r800_ffff_tmp715 = simd_and(r800_ffff_tmp709, bytetest_b8_bc);
          struct_Lo.cc = simd_or(r800_ffff_tmp715, struct_Lo.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp80);
          bytetest_ac = simd_and(bytetest_a0_af, tmp123);
          bytetest_be_be = simd_and(bytetest_b0_bf, tmp136);
          r800_ffff_tmp716 = simd_and(r800_ffff_tmp709, bytetest_be_be);
          struct_Lo.cc = simd_or(r800_ffff_tmp716, struct_Lo.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp80);
          bytetest_ad = simd_and(bytetest_a0_af, tmp79);
          bytetest_80_81 = simd_andc(bytetest_80_8f, tmp130);
          r800_ffff_tmp717 = simd_and(r800_ffff_tmp691, bytetest_ad);
          carryQ.cq[183] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp717, carryQ.get_carry_in(183), r800_ffff_tmp718));
          r800_ffff_tmp719 = simd_and(r800_ffff_tmp718, bytetest_80_81);
          struct_Lo.cc = simd_or(r800_ffff_tmp719, struct_Lo.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp80);
          bytetest_ad = simd_and(bytetest_a0_af, tmp79);
          bytetest_83_84 = simd_and(bytetest_80_87, r800_ffff_tmp125);
          r800_ffff_tmp720 = simd_and(r800_ffff_tmp718, bytetest_83_84);
          struct_Lo.cc = simd_or(r800_ffff_tmp720, struct_Lo.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp80);
          bytetest_ae = simd_and(bytetest_a0_af, tmp136);
          r800_ffff_tmp721 = simd_and(basis_bits.bit_2, r800_ffff_tmp139);
          bytetest_80_b1 = simd_andc(bytetest_80_bf, r800_ffff_tmp721);
          r800_ffff_tmp722 = simd_and(r800_ffff_tmp691, bytetest_ae);
          carryQ.cq[184] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp722, carryQ.get_carry_in(184), r800_ffff_tmp723));
          r800_ffff_tmp724 = simd_and(r800_ffff_tmp723, bytetest_80_b1);
          bytetest_ad = simd_and(bytetest_a0_af, tmp79);
          r800_ffff_tmp725 = simd_or(basis_bits.bit_2, r800_ffff_tmp425);
          bytetest_86_bf = simd_and(bytetest_80_bf, r800_ffff_tmp725);
          r800_ffff_tmp726 = simd_and(r800_ffff_tmp718, bytetest_86_bf);
          r800_ffff_tmp727 = simd_or(r800_ffff_tmp726, r800_ffff_tmp724);
          struct_Lo.cc = simd_or(r800_ffff_tmp727, struct_Lo.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp80);
          bytetest_b4 = simd_and(bytetest_b0_bf, tmp46);
          r800_ffff_tmp728 = simd_and(basis_bits.bit_2, tmp235);
          bytetest_80_bd = simd_andc(bytetest_80_bf, r800_ffff_tmp728);
          r800_ffff_tmp729 = simd_and(r800_ffff_tmp691, bytetest_b4);
          carryQ.cq[185] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp729, carryQ.get_carry_in(185), r800_ffff_tmp730));
          r800_ffff_tmp731 = simd_and(r800_ffff_tmp730, bytetest_80_bd);
          bytetest_b0_b3 = simd_andc(bytetest_b0_bf, tmp4);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp732 = simd_and(r800_ffff_tmp691, bytetest_b0_b3);
          carryQ.cq[186] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp732, carryQ.get_carry_in(186), r800_ffff_tmp733));
          r800_ffff_tmp734 = simd_and(r800_ffff_tmp733, bytetest_80_bf);
          bytetest_af = simd_and(bytetest_a0_af, tmp80);
          r800_ffff_tmp735 = simd_or(basis_bits.bit_2, tmp56);
          bytetest_93_bf = simd_and(bytetest_80_bf, r800_ffff_tmp735);
          r800_ffff_tmp736 = simd_and(r800_ffff_tmp691, bytetest_af);
          carryQ.cq[187] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp736, carryQ.get_carry_in(187), r800_ffff_tmp737));
          r800_ffff_tmp738 = simd_and(r800_ffff_tmp737, bytetest_93_bf);
          r800_ffff_tmp739 = simd_or(r800_ffff_tmp738, r800_ffff_tmp734);
          r800_ffff_tmp740 = simd_or(r800_ffff_tmp739, r800_ffff_tmp731);
          struct_Lo.cc = simd_or(r800_ffff_tmp740, struct_Lo.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp80);
          bytetest_b6 = simd_and(bytetest_b0_bf, tmp55);
          bytetest_80_8f = simd_andc(bytetest_80_bf, tmp12);
          r800_ffff_tmp741 = simd_and(r800_ffff_tmp691, bytetest_b6);
          carryQ.cq[188] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp741, carryQ.get_carry_in(188), r800_ffff_tmp742));
          r800_ffff_tmp743 = simd_and(r800_ffff_tmp742, bytetest_80_8f);
          bytetest_b5 = simd_and(bytetest_b0_bf, r800_ffff_tmp27);
          bytetest_90_bf = simd_and(bytetest_80_bf, tmp12);
          r800_ffff_tmp744 = simd_and(r800_ffff_tmp691, bytetest_b5);
          carryQ.cq[189] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp744, carryQ.get_carry_in(189), r800_ffff_tmp745));
          r800_ffff_tmp746 = simd_and(r800_ffff_tmp745, bytetest_90_bf);
          r800_ffff_tmp747 = simd_or(r800_ffff_tmp746, r800_ffff_tmp743);
          struct_Lo.cc = simd_or(r800_ffff_tmp747, struct_Lo.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp80);
          bytetest_b7 = simd_and(bytetest_b0_bf, tmp62);
          bytetest_80_87 = simd_andc(bytetest_80_8f, basis_bits.bit_4);
          r800_ffff_tmp748 = simd_and(r800_ffff_tmp691, bytetest_b7);
          carryQ.cq[190] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp748, carryQ.get_carry_in(190), r800_ffff_tmp749));
          r800_ffff_tmp750 = simd_and(r800_ffff_tmp749, bytetest_80_87);
          bytetest_b6 = simd_and(bytetest_b0_bf, tmp55);
          r800_ffff_tmp751 = simd_or(basis_bits.bit_2, r800_ffff_tmp139);
          bytetest_92_bf = simd_and(bytetest_80_bf, r800_ffff_tmp751);
          r800_ffff_tmp752 = simd_and(r800_ffff_tmp742, bytetest_92_bf);
          r800_ffff_tmp753 = simd_or(r800_ffff_tmp752, r800_ffff_tmp750);
          struct_Lo.cc = simd_or(r800_ffff_tmp753, struct_Lo.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp80);
          bytetest_b7 = simd_and(bytetest_b0_bf, tmp62);
          bytetest_b0_bb = simd_andc(bytetest_b0_bf, tmp78);
          r800_ffff_tmp754 = simd_and(r800_ffff_tmp749, bytetest_b0_bb);
          struct_Lo.cc = simd_or(r800_ffff_tmp754, struct_Lo.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp80);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp157);
          bytetest_b0_b4 = simd_andc(r800_ffff_tmp392, tmp88);
          r800_ffff_tmp755 = simd_and(r800_ffff_tmp691, bytetest_b9);
          carryQ.cq[191] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp755, carryQ.get_carry_in(191), r800_ffff_tmp756));
          r800_ffff_tmp757 = simd_and(r800_ffff_tmp756, bytetest_b0_b4);
          struct_Lo.cc = simd_or(r800_ffff_tmp757, struct_Lo.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp80);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp129);
          r800_ffff_tmp758 = simd_and(basis_bits.bit_2, r800_ffff_tmp382);
          bytetest_80_bc = simd_andc(bytetest_80_bf, r800_ffff_tmp758);
          r800_ffff_tmp759 = simd_and(r800_ffff_tmp691, bytetest_bb);
          carryQ.cq[192] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp759, carryQ.get_carry_in(192), r800_ffff_tmp760));
          r800_ffff_tmp761 = simd_and(r800_ffff_tmp760, bytetest_80_bc);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp70);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp762 = simd_and(r800_ffff_tmp691, bytetest_ba);
          carryQ.cq[193] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp762, carryQ.get_carry_in(193), r800_ffff_tmp763));
          r800_ffff_tmp764 = simd_and(r800_ffff_tmp763, bytetest_80_bf);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp157);
          bytetest_b6_bf = simd_and(bytetest_b0_bf, r800_ffff_tmp3);
          r800_ffff_tmp765 = simd_and(r800_ffff_tmp756, bytetest_b6_bf);
          r800_ffff_tmp766 = simd_or(r800_ffff_tmp765, r800_ffff_tmp764);
          r800_ffff_tmp767 = simd_or(r800_ffff_tmp766, r800_ffff_tmp761);
          struct_Lo.cc = simd_or(r800_ffff_tmp767, struct_Lo.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp80);
          bytetest_bd = simd_and(bytetest_b0_bf, tmp79);
          bytetest_a6_af = simd_and(bytetest_a0_af, r800_ffff_tmp3);
          r800_ffff_tmp768 = simd_and(r800_ffff_tmp691, bytetest_bd);
          carryQ.cq[194] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp768, carryQ.get_carry_in(194), r800_ffff_tmp769));
          r800_ffff_tmp770 = simd_and(r800_ffff_tmp769, bytetest_a6_af);
          struct_Lo.cc = simd_or(r800_ffff_tmp770, struct_Lo.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp80);
          bytetest_be = simd_and(bytetest_b0_bf, tmp136);
          bytetest_80_9d = simd_andc(tmp142, tmp235);
          r800_ffff_tmp771 = simd_and(r800_ffff_tmp691, bytetest_be);
          carryQ.cq[195] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp771, carryQ.get_carry_in(195), r800_ffff_tmp772));
          r800_ffff_tmp773 = simd_and(r800_ffff_tmp772, bytetest_80_9d);
          bytetest_bd = simd_and(bytetest_b0_bf, tmp79);
          bytetest_b1_bf = simd_and(bytetest_b0_bf, r800_ffff_tmp509);
          r800_ffff_tmp774 = simd_and(r800_ffff_tmp769, bytetest_b1_bf);
          r800_ffff_tmp775 = simd_or(r800_ffff_tmp774, r800_ffff_tmp773);
          struct_Lo.cc = simd_or(r800_ffff_tmp775, struct_Lo.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp80);
          bytetest_be = simd_and(bytetest_b0_bf, tmp136);
          bytetest_a0_be = simd_andc(bytetest_a0_bf, r800_ffff_tmp57);
          r800_ffff_tmp776 = simd_and(r800_ffff_tmp772, bytetest_a0_be);
          struct_Lo.cc = simd_or(r800_ffff_tmp776, struct_Lo.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp80);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp80);
          bytetest_82_87 = simd_and(bytetest_80_87, tmp187);
          r800_ffff_tmp777 = simd_and(r800_ffff_tmp691, bytetest_bf);
          carryQ.cq[196] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp777, carryQ.get_carry_in(196), r800_ffff_tmp778));
          r800_ffff_tmp779 = simd_and(r800_ffff_tmp778, bytetest_82_87);
          struct_Lo.cc = simd_or(r800_ffff_tmp779, struct_Lo.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp80);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp80);
          bytetest_8a_8f = simd_and(r800_ffff_tmp239, tmp187);
          r800_ffff_tmp780 = simd_and(r800_ffff_tmp778, bytetest_8a_8f);
          struct_Lo.cc = simd_or(r800_ffff_tmp780, struct_Lo.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp80);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp80);
          bytetest_92_97 = simd_and(r800_ffff_tmp656, tmp187);
          r800_ffff_tmp781 = simd_and(r800_ffff_tmp778, bytetest_92_97);
          struct_Lo.cc = simd_or(r800_ffff_tmp781, struct_Lo.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp80);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp80);
          bytetest_9a_9c = simd_and(r800_ffff_tmp648, r800_ffff_tmp78);
          r800_ffff_tmp782 = simd_and(r800_ffff_tmp778, bytetest_9a_9c);
          struct_Lo.cc = simd_or(r800_ffff_tmp782, struct_Lo.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(55, 142);
        }
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_90 = simd_andc(tmp94, tmp6);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp261 = simd_and(tmp23, bytetest_90);
        carryQ.cq[197] = carryout2carry(pablo_blk_Advance(tmp261, carryQ.get_carry_in(197), tmp262));
        tmp263 = simd_and(tmp262, bytetest_80_bf);
        if ((bitblock::any(tmp263) || carryQ.CarryTest(198, 23))) {
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_80 = simd_andc(bytetest_80_8f, tmp6);
          bytetest_80_8b = simd_andc(bytetest_80_8f, tmp78);
          r10000_10fff_tmp1 = simd_and(tmp23, bytetest_90);
          carryQ.cq[198] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp1, carryQ.get_carry_in(198), r10000_10fff_tmp2));
          r10000_10fff_tmp3 = simd_and(r10000_10fff_tmp2, bytetest_80);
          carryQ.cq[199] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp3, carryQ.get_carry_in(199), r10000_10fff_tmp4));
          r10000_10fff_tmp5 = simd_and(r10000_10fff_tmp4, bytetest_80_8b);
          struct_Lo.cc = simd_or(r10000_10fff_tmp5, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_80 = simd_andc(bytetest_80_8f, tmp6);
          r10000_10fff_tmp6 = simd_and(tmp78, tmp5);
          r10000_10fff_tmp7 = simd_or(basis_bits.bit_3, r10000_10fff_tmp6);
          r10000_10fff_tmp8 = simd_or(simd_and(basis_bits.bit_2, tmp50), simd_andc(r10000_10fff_tmp7, basis_bits.bit_2));
          bytetest_8d_a6 = simd_and(bytetest_80_bf, r10000_10fff_tmp8);
          r10000_10fff_tmp9 = simd_and(r10000_10fff_tmp4, bytetest_8d_a6);
          struct_Lo.cc = simd_or(r10000_10fff_tmp9, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_80 = simd_andc(bytetest_80_8f, tmp6);
          r10000_10fff_tmp10 = simd_not(tmp72);
          r10000_10fff_tmp11 = simd_or(simd_and(basis_bits.bit_3, r10000_10fff_tmp10), simd_andc(basis_bits.bit_4, basis_bits.bit_3));
          bytetest_a8_ba = simd_and(bytetest_a0_bf, r10000_10fff_tmp11);
          r10000_10fff_tmp12 = simd_and(r10000_10fff_tmp4, bytetest_a8_ba);
          struct_Lo.cc = simd_or(r10000_10fff_tmp12, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_80 = simd_andc(bytetest_80_8f, tmp6);
          r10000_10fff_tmp13 = simd_andc(tmp78, basis_bits.bit_6);
          bytetest_bc_bd = simd_and(tmp118, r10000_10fff_tmp13);
          r10000_10fff_tmp14 = simd_and(r10000_10fff_tmp4, bytetest_bc_bd);
          struct_Lo.cc = simd_or(r10000_10fff_tmp14, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_81 = simd_and(bytetest_80_8f, tmp11);
          r10000_10fff_tmp15 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
          r10000_10fff_tmp16 = simd_and(basis_bits.bit_4, r10000_10fff_tmp15);
          bytetest_80_8d = simd_andc(bytetest_80_8f, r10000_10fff_tmp16);
          r10000_10fff_tmp17 = simd_and(r10000_10fff_tmp2, bytetest_81);
          carryQ.cq[200] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp17, carryQ.get_carry_in(200), r10000_10fff_tmp18));
          r10000_10fff_tmp19 = simd_and(r10000_10fff_tmp18, bytetest_80_8d);
          bytetest_80 = simd_andc(bytetest_80_8f, tmp6);
          bytetest_bf_bf = simd_and(tmp118, tmp80);
          r10000_10fff_tmp20 = simd_and(r10000_10fff_tmp4, bytetest_bf_bf);
          r10000_10fff_tmp21 = simd_or(r10000_10fff_tmp20, r10000_10fff_tmp19);
          struct_Lo.cc = simd_or(r10000_10fff_tmp21, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_81 = simd_and(bytetest_80_8f, tmp11);
          bytetest_90_9d = simd_andc(tmp94, r10000_10fff_tmp16);
          r10000_10fff_tmp22 = simd_and(r10000_10fff_tmp18, bytetest_90_9d);
          struct_Lo.cc = simd_or(r10000_10fff_tmp22, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_83 = simd_and(bytetest_80_8f, tmp36);
          r10000_10fff_tmp23 = simd_and(basis_bits.bit_2, tmp206);
          bytetest_80_ba = simd_andc(bytetest_80_bf, r10000_10fff_tmp23);
          r10000_10fff_tmp24 = simd_and(r10000_10fff_tmp2, bytetest_83);
          carryQ.cq[201] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp24, carryQ.get_carry_in(201), r10000_10fff_tmp25));
          r10000_10fff_tmp26 = simd_and(r10000_10fff_tmp25, bytetest_80_ba);
          bytetest_82 = simd_and(bytetest_80_8f, tmp30);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r10000_10fff_tmp27 = simd_and(r10000_10fff_tmp2, bytetest_82);
          carryQ.cq[202] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp27, carryQ.get_carry_in(202), r10000_10fff_tmp28));
          r10000_10fff_tmp29 = simd_and(r10000_10fff_tmp28, bytetest_80_bf);
          r10000_10fff_tmp30 = simd_or(r10000_10fff_tmp29, r10000_10fff_tmp26);
          struct_Lo.cc = simd_or(r10000_10fff_tmp30, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_8a = simd_and(bytetest_80_8f, tmp70);
          r10000_10fff_tmp31 = simd_and(basis_bits.bit_3, r10000_10fff_tmp6);
          bytetest_80_9c = simd_andc(tmp142, r10000_10fff_tmp31);
          r10000_10fff_tmp32 = simd_and(r10000_10fff_tmp2, bytetest_8a);
          carryQ.cq[203] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp32, carryQ.get_carry_in(203), r10000_10fff_tmp33));
          r10000_10fff_tmp34 = simd_and(r10000_10fff_tmp33, bytetest_80_9c);
          struct_Lo.cc = simd_or(r10000_10fff_tmp34, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_8b = simd_and(bytetest_80_8f, tmp129);
          r10000_10fff_tmp35 = simd_and(basis_bits.bit_3, tmp6);
          bytetest_80_90 = simd_andc(tmp142, r10000_10fff_tmp35);
          r10000_10fff_tmp36 = simd_and(r10000_10fff_tmp2, bytetest_8b);
          carryQ.cq[204] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp36, carryQ.get_carry_in(204), r10000_10fff_tmp37));
          r10000_10fff_tmp38 = simd_and(r10000_10fff_tmp37, bytetest_80_90);
          bytetest_8a = simd_and(bytetest_80_8f, tmp70);
          bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
          r10000_10fff_tmp39 = simd_and(r10000_10fff_tmp33, bytetest_a0_bf);
          r10000_10fff_tmp40 = simd_or(r10000_10fff_tmp39, r10000_10fff_tmp38);
          struct_Lo.cc = simd_or(r10000_10fff_tmp40, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_8c = simd_and(bytetest_80_8f, tmp123);
          r10000_10fff_tmp41 = simd_and(basis_bits.bit_3, tmp80);
          bytetest_80_9e = simd_andc(tmp142, r10000_10fff_tmp41);
          r10000_10fff_tmp42 = simd_and(r10000_10fff_tmp2, bytetest_8c);
          carryQ.cq[205] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp42, carryQ.get_carry_in(205), r10000_10fff_tmp43));
          r10000_10fff_tmp44 = simd_and(r10000_10fff_tmp43, bytetest_80_9e);
          struct_Lo.cc = simd_or(r10000_10fff_tmp44, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_8d = simd_and(bytetest_80_8f, tmp79);
          bytetest_80_80 = simd_andc(bytetest_80_8f, tmp6);
          r10000_10fff_tmp45 = simd_and(r10000_10fff_tmp2, bytetest_8d);
          carryQ.cq[206] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp45, carryQ.get_carry_in(206), r10000_10fff_tmp46));
          r10000_10fff_tmp47 = simd_and(r10000_10fff_tmp46, bytetest_80_80);
          bytetest_8c = simd_and(bytetest_80_8f, tmp123);
          bytetest_b0_bf = simd_and(bytetest_80_bf, tmp2);
          r10000_10fff_tmp48 = simd_and(r10000_10fff_tmp43, bytetest_b0_bf);
          r10000_10fff_tmp49 = simd_or(r10000_10fff_tmp48, r10000_10fff_tmp47);
          struct_Lo.cc = simd_or(r10000_10fff_tmp49, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_8d = simd_and(bytetest_80_8f, tmp79);
          r10000_10fff_tmp50 = simd_or(simd_and(basis_bits.bit_4, tmp196), simd_andc(tmp187, basis_bits.bit_4));
          bytetest_82_89 = simd_and(bytetest_80_8f, r10000_10fff_tmp50);
          r10000_10fff_tmp51 = simd_and(r10000_10fff_tmp46, bytetest_82_89);
          struct_Lo.cc = simd_or(r10000_10fff_tmp51, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_8e = simd_and(bytetest_80_8f, tmp136);
          bytetest_80_9d = simd_andc(tmp142, tmp235);
          r10000_10fff_tmp52 = simd_and(r10000_10fff_tmp2, bytetest_8e);
          carryQ.cq[207] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp52, carryQ.get_carry_in(207), r10000_10fff_tmp53));
          r10000_10fff_tmp54 = simd_and(r10000_10fff_tmp53, bytetest_80_9d);
          struct_Lo.cc = simd_or(r10000_10fff_tmp54, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_8f = simd_and(bytetest_80_8f, tmp80);
          bytetest_80_83 = simd_andc(bytetest_80_8f, tmp4);
          r10000_10fff_tmp55 = simd_and(r10000_10fff_tmp2, bytetest_8f);
          carryQ.cq[208] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp55, carryQ.get_carry_in(208), r10000_10fff_tmp56));
          r10000_10fff_tmp57 = simd_and(r10000_10fff_tmp56, bytetest_80_83);
          bytetest_8e = simd_and(bytetest_80_8f, tmp136);
          bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
          r10000_10fff_tmp58 = simd_and(r10000_10fff_tmp53, bytetest_a0_bf);
          r10000_10fff_tmp59 = simd_or(r10000_10fff_tmp58, r10000_10fff_tmp57);
          struct_Lo.cc = simd_or(r10000_10fff_tmp59, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_8f = simd_and(bytetest_80_8f, tmp80);
          bytetest_88_8f = simd_and(bytetest_80_8f, basis_bits.bit_4);
          r10000_10fff_tmp60 = simd_and(r10000_10fff_tmp56, bytetest_88_8f);
          struct_Lo.cc = simd_or(r10000_10fff_tmp60, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_92 = simd_and(tmp94, tmp30);
          bytetest_80_9d = simd_andc(tmp142, tmp235);
          r10000_10fff_tmp61 = simd_and(r10000_10fff_tmp2, bytetest_92);
          carryQ.cq[209] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp61, carryQ.get_carry_in(209), r10000_10fff_tmp62));
          r10000_10fff_tmp63 = simd_and(r10000_10fff_tmp62, bytetest_80_9d);
          bytetest_91 = simd_and(tmp94, tmp11);
          bytetest_90_bf = simd_and(bytetest_80_bf, tmp12);
          r10000_10fff_tmp64 = simd_and(r10000_10fff_tmp2, bytetest_91);
          carryQ.cq[210] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp64, carryQ.get_carry_in(210), r10000_10fff_tmp65));
          r10000_10fff_tmp66 = simd_and(r10000_10fff_tmp65, bytetest_90_bf);
          r10000_10fff_tmp67 = simd_or(r10000_10fff_tmp66, r10000_10fff_tmp63);
          struct_Lo.cc = simd_or(r10000_10fff_tmp67, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_a0 = simd_andc(tmp105, tmp6);
          bytetest_80_85 = simd_andc(tmp119, r10000_10fff_tmp15);
          r10000_10fff_tmp68 = simd_and(r10000_10fff_tmp2, bytetest_a0);
          carryQ.cq[211] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp68, carryQ.get_carry_in(211), r10000_10fff_tmp69));
          r10000_10fff_tmp70 = simd_and(r10000_10fff_tmp69, bytetest_80_85);
          struct_Lo.cc = simd_or(r10000_10fff_tmp70, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_a0 = simd_andc(tmp105, tmp6);
          bytetest_88_88 = simd_and(bytetest_80_8f, tmp106);
          r10000_10fff_tmp71 = simd_and(r10000_10fff_tmp69, bytetest_88_88);
          struct_Lo.cc = simd_or(r10000_10fff_tmp71, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_a0 = simd_andc(tmp105, tmp6);
          r10000_10fff_tmp72 = simd_or(basis_bits.bit_4, r10000_10fff_tmp15);
          r10000_10fff_tmp73 = simd_and(basis_bits.bit_3, r10000_10fff_tmp72);
          r10000_10fff_tmp74 = simd_not(r10000_10fff_tmp73);
          r10000_10fff_tmp75 = simd_or(basis_bits.bit_3, tmp188);
          r10000_10fff_tmp76 = simd_or(simd_and(basis_bits.bit_2, r10000_10fff_tmp74), simd_andc(r10000_10fff_tmp75, basis_bits.bit_2));
          bytetest_8a_b5 = simd_and(bytetest_80_bf, r10000_10fff_tmp76);
          r10000_10fff_tmp77 = simd_and(r10000_10fff_tmp69, bytetest_8a_b5);
          struct_Lo.cc = simd_or(r10000_10fff_tmp77, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_a0 = simd_andc(tmp105, tmp6);
          r10000_10fff_tmp78 = simd_not(tmp37);
          r10000_10fff_tmp79 = simd_or(simd_and(basis_bits.bit_4, r10000_10fff_tmp78), simd_andc(tmp47, basis_bits.bit_4));
          bytetest_b7_b8 = simd_and(bytetest_b0_bf, r10000_10fff_tmp79);
          r10000_10fff_tmp80 = simd_and(r10000_10fff_tmp69, bytetest_b7_b8);
          struct_Lo.cc = simd_or(r10000_10fff_tmp80, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_a0 = simd_andc(tmp105, tmp6);
          bytetest_bc_bc = simd_and(bytetest_b0_bf, tmp123);
          r10000_10fff_tmp81 = simd_and(r10000_10fff_tmp69, bytetest_bc_bc);
          struct_Lo.cc = simd_or(r10000_10fff_tmp81, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_a1 = simd_and(tmp105, tmp11);
          bytetest_80_95 = simd_andc(tmp142, r10000_10fff_tmp73);
          r10000_10fff_tmp82 = simd_and(r10000_10fff_tmp2, bytetest_a1);
          carryQ.cq[212] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp82, carryQ.get_carry_in(212), r10000_10fff_tmp83));
          r10000_10fff_tmp84 = simd_and(r10000_10fff_tmp83, bytetest_80_95);
          bytetest_a0 = simd_andc(tmp105, tmp6);
          bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp80);
          r10000_10fff_tmp85 = simd_and(r10000_10fff_tmp69, bytetest_bf_bf);
          r10000_10fff_tmp86 = simd_or(r10000_10fff_tmp85, r10000_10fff_tmp84);
          struct_Lo.cc = simd_or(r10000_10fff_tmp86, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_a4 = simd_and(tmp105, tmp46);
          bytetest_80_95 = simd_andc(tmp142, r10000_10fff_tmp73);
          r10000_10fff_tmp87 = simd_and(r10000_10fff_tmp2, bytetest_a4);
          carryQ.cq[213] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp87, carryQ.get_carry_in(213), r10000_10fff_tmp88));
          r10000_10fff_tmp89 = simd_and(r10000_10fff_tmp88, bytetest_80_95);
          struct_Lo.cc = simd_or(r10000_10fff_tmp89, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_a4 = simd_and(tmp105, tmp46);
          r10000_10fff_tmp90 = simd_and(basis_bits.bit_3, tmp188);
          bytetest_a0_b9 = simd_andc(bytetest_a0_bf, r10000_10fff_tmp90);
          r10000_10fff_tmp91 = simd_and(r10000_10fff_tmp88, bytetest_a0_b9);
          struct_Lo.cc = simd_or(r10000_10fff_tmp91, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_a6 = simd_and(tmp105, tmp55);
          r10000_10fff_tmp92 = simd_and(basis_bits.bit_2, tmp14);
          bytetest_80_b7 = simd_andc(bytetest_80_bf, r10000_10fff_tmp92);
          r10000_10fff_tmp93 = simd_and(r10000_10fff_tmp2, bytetest_a6);
          carryQ.cq[214] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp93, carryQ.get_carry_in(214), r10000_10fff_tmp94));
          r10000_10fff_tmp95 = simd_and(r10000_10fff_tmp94, bytetest_80_b7);
          struct_Lo.cc = simd_or(r10000_10fff_tmp95, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_a6 = simd_and(tmp105, tmp55);
          bytetest_be_bf = simd_and(bytetest_b0_bf, tmp234);
          r10000_10fff_tmp96 = simd_and(r10000_10fff_tmp94, bytetest_be_bf);
          struct_Lo.cc = simd_or(r10000_10fff_tmp96, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_a8 = simd_and(tmp105, tmp106);
          bytetest_80_80 = simd_andc(bytetest_80_8f, tmp6);
          r10000_10fff_tmp97 = simd_and(r10000_10fff_tmp2, bytetest_a8);
          carryQ.cq[215] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp97, carryQ.get_carry_in(215), r10000_10fff_tmp98));
          r10000_10fff_tmp99 = simd_and(r10000_10fff_tmp98, bytetest_80_80);
          struct_Lo.cc = simd_or(r10000_10fff_tmp99, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_a8 = simd_and(tmp105, tmp106);
          bytetest_90_93 = simd_andc(tmp94, tmp4);
          r10000_10fff_tmp100 = simd_and(r10000_10fff_tmp98, bytetest_90_93);
          struct_Lo.cc = simd_or(r10000_10fff_tmp100, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_a8 = simd_and(tmp105, tmp106);
          r10000_10fff_tmp101 = simd_and(tmp94, tmp45);
          bytetest_95_97 = simd_and(r10000_10fff_tmp101, tmp5);
          r10000_10fff_tmp102 = simd_and(r10000_10fff_tmp98, bytetest_95_97);
          struct_Lo.cc = simd_or(r10000_10fff_tmp102, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_a8 = simd_and(tmp105, tmp106);
          r10000_10fff_tmp103 = simd_and(basis_bits.bit_3, tmp4);
          r10000_10fff_tmp104 = simd_not(r10000_10fff_tmp103);
          r10000_10fff_tmp105 = simd_or(simd_and(basis_bits.bit_2, r10000_10fff_tmp104), simd_andc(tmp107, basis_bits.bit_2));
          bytetest_99_b3 = simd_and(bytetest_80_bf, r10000_10fff_tmp105);
          r10000_10fff_tmp106 = simd_and(r10000_10fff_tmp98, bytetest_99_b3);
          struct_Lo.cc = simd_or(r10000_10fff_tmp106, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_a9 = simd_and(tmp105, tmp157);
          bytetest_a0_bc = simd_andc(bytetest_a0_bf, r10000_10fff_tmp31);
          r10000_10fff_tmp107 = simd_and(r10000_10fff_tmp2, bytetest_a9);
          carryQ.cq[216] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp107, carryQ.get_carry_in(216), r10000_10fff_tmp108));
          r10000_10fff_tmp109 = simd_and(r10000_10fff_tmp108, bytetest_a0_bc);
          struct_Lo.cc = simd_or(r10000_10fff_tmp109, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_ac = simd_and(tmp105, tmp123);
          r10000_10fff_tmp110 = simd_and(basis_bits.bit_2, r10000_10fff_tmp73);
          bytetest_80_b5 = simd_andc(bytetest_80_bf, r10000_10fff_tmp110);
          r10000_10fff_tmp111 = simd_and(r10000_10fff_tmp2, bytetest_ac);
          carryQ.cq[217] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp111, carryQ.get_carry_in(217), r10000_10fff_tmp112));
          r10000_10fff_tmp113 = simd_and(r10000_10fff_tmp112, bytetest_80_b5);
          struct_Lo.cc = simd_or(r10000_10fff_tmp113, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_ad = simd_and(tmp105, tmp79);
          bytetest_80_95 = simd_andc(tmp142, r10000_10fff_tmp73);
          r10000_10fff_tmp114 = simd_and(r10000_10fff_tmp2, bytetest_ad);
          carryQ.cq[218] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp114, carryQ.get_carry_in(218), r10000_10fff_tmp115));
          r10000_10fff_tmp116 = simd_and(r10000_10fff_tmp115, bytetest_80_95);
          struct_Lo.cc = simd_or(r10000_10fff_tmp116, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_ad = simd_and(tmp105, tmp79);
          bytetest_a0_b2 = simd_andc(bytetest_a0_bf, tmp56);
          r10000_10fff_tmp117 = simd_and(r10000_10fff_tmp115, bytetest_a0_b2);
          struct_Lo.cc = simd_or(r10000_10fff_tmp117, struct_Lo.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp94, tmp6);
          bytetest_b1 = simd_and(bytetest_b0_bf, tmp11);
          bytetest_80_88 = simd_andc(bytetest_80_8f, tmp38);
          r10000_10fff_tmp118 = simd_and(r10000_10fff_tmp2, bytetest_b1);
          carryQ.cq[219] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp118, carryQ.get_carry_in(219), r10000_10fff_tmp119));
          r10000_10fff_tmp120 = simd_and(r10000_10fff_tmp119, bytetest_80_88);
          bytetest_b0 = simd_andc(bytetest_b0_bf, tmp6);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r10000_10fff_tmp121 = simd_and(r10000_10fff_tmp2, bytetest_b0);
          carryQ.cq[220] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp121, carryQ.get_carry_in(220), r10000_10fff_tmp122));
          r10000_10fff_tmp123 = simd_and(r10000_10fff_tmp122, bytetest_80_bf);
          r10000_10fff_tmp124 = simd_or(r10000_10fff_tmp123, r10000_10fff_tmp120);
          struct_Lo.cc = simd_or(r10000_10fff_tmp124, struct_Lo.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(198, 23);
        }
  }
  CarryArray<221, 0> carryQ;
  };

  struct Ll {
  Ll() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Ll & struct_Ll) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, tmp7, tmp8, tmp9, tmp10;
		BitBlock bytetest_61_7a, tmp11, tmp12, tmp13, bytetest_f0, tmp14, tmp15, tmp16;
		BitBlock tmp17, tmp18, tmp19, bytetest_9d, bytetest_90, tmp20, tmp21, tmp22;
		BitBlock tmp23, tmp24, tmp25, bytetest_9a_b3, tmp26, tmp27, tmp28, tmp29;
		BitBlock tmp30, tmp31, tmp32, tmp33, tmp34, tmp35, bytetest_91, tmp36, tmp37;
		BitBlock tmp38, tmp39, tmp40, tmp41, bytetest_8e_94, tmp42, tmp43, tmp44;
		BitBlock tmp45, tmp46, tmp47, tmp48, tmp49, tmp50, bytetest_96_a7, tmp51;
		BitBlock tmp52, tmp53, bytetest_92, tmp54, tmp55, tmp56, bytetest_82_9b, tmp57;
		BitBlock tmp58, tmp59, tmp60, tmp61, tmp62, bytetest_b6_b9, tmp63, tmp64;
		BitBlock tmp65, bytetest_bb_bb, tmp66, tmp67, bytetest_93, tmp68, tmp69;
		BitBlock bytetest_80_83, tmp70, tmp71, tmp72, tmp73, bytetest_bd_bf, tmp74;
		BitBlock tmp75, bytetest_85_8f, tmp76, tmp77, tmp78, bytetest_94, tmp79, tmp80;
		BitBlock tmp81, tmp82, tmp83, bytetest_aa_bf, tmp84, tmp85, tmp86, tmp87;
		BitBlock tmp88, tmp89, bytetest_9e_b7, tmp90, tmp91, bytetest_95, tmp92, tmp93;
		BitBlock tmp94, tmp95, bytetest_92_ab, tmp96, tmp97, tmp98, tmp99, bytetest_96;
		BitBlock tmp100, bytetest_86_9f, tmp101, tmp102, tmp103, tmp104, bytetest_97;
		BitBlock bytetest_80_93, tmp105, tmp106, tmp107, tmp108, bytetest_ba_bf;
		BitBlock tmp109, tmp110, tmp111, bytetest_98, bytetest_80_87, tmp112, tmp113;
		BitBlock tmp114, tmp115, bytetest_ae_bf, tmp116, tmp117, bytetest_a2_bb;
		BitBlock tmp118, tmp119, bytetest_99, tmp120, tmp121, bytetest_96_af, tmp122;
		BitBlock tmp123, tmp124, tmp125, bytetest_9a, tmp126, tmp127, bytetest_8a_a5;
		BitBlock tmp128, tmp129, tmp130, bytetest_9b, tmp131, bytetest_82_9a, tmp132;
		BitBlock tmp133, tmp134, tmp135, tmp136, tmp137, tmp138, bytetest_9c_a1;
		BitBlock tmp139, tmp140, bytetest_9c, tmp141, bytetest_80_94, tmp142, tmp143;
		BitBlock tmp144, bytetest_bc_bf, tmp145, tmp146, tmp147, tmp148;
		BitBlock bytetest_96_9b, tmp149, tmp150, tmp151, bytetest_80_8e, tmp152;
		BitBlock tmp153, tmp154, bytetest_b6_bf, tmp155, tmp156, tmp157;
		BitBlock bytetest_90_95, tmp158, tmp159, bytetest_9e, tmp160, tmp161;
		BitBlock bytetest_80_88, tmp162, tmp163, tmp164, bytetest_b0_bf, tmp165;
		BitBlock tmp166, tmp167, bytetest_8a_8f, tmp168, tmp169, bytetest_9f;
		BitBlock bytetest_80_82, tmp170, tmp171, tmp172, tmp173, tmp174, tmp175;
		BitBlock bytetest_84_89, tmp176, bytetest_8b_8b, tmp177, tmp178;
		BitBlock bytetest_c2_df, r80_7ff_tmp1, bytetest_c2, bytetest_b5_b5;
		BitBlock r80_7ff_tmp2, r80_7ff_tmp3, r80_7ff_tmp4, bytetest_c3, r80_7ff_tmp5;
		BitBlock r80_7ff_tmp6, r80_7ff_tmp7, r80_7ff_tmp8, r80_7ff_tmp9;
		BitBlock bytetest_9f_b6, r80_7ff_tmp10, r80_7ff_tmp11, r80_7ff_tmp12;
		BitBlock bytetest_b8_bf, r80_7ff_tmp13, bytetest_c4, bytetest_81_81;
		BitBlock r80_7ff_tmp14, r80_7ff_tmp15, r80_7ff_tmp16, bytetest_83_83;
		BitBlock r80_7ff_tmp17, bytetest_85_85, r80_7ff_tmp18, bytetest_87_87;
		BitBlock r80_7ff_tmp19, bytetest_89_89, r80_7ff_tmp20, r80_7ff_tmp21;
		BitBlock bytetest_8d_8d, r80_7ff_tmp22, bytetest_8f_8f, r80_7ff_tmp23;
		BitBlock bytetest_91_91, r80_7ff_tmp24, bytetest_93_93, r80_7ff_tmp25;
		BitBlock bytetest_95_95, r80_7ff_tmp26, bytetest_97_97, r80_7ff_tmp27;
		BitBlock bytetest_99_99, r80_7ff_tmp28, bytetest_9b_9b, r80_7ff_tmp29;
		BitBlock bytetest_9d_9d, r80_7ff_tmp30, bytetest_9f_9f, r80_7ff_tmp31;
		BitBlock r80_7ff_tmp32, r80_7ff_tmp33, bytetest_a1_a1, r80_7ff_tmp34;
		BitBlock bytetest_a3_a3, r80_7ff_tmp35, bytetest_a5_a5, r80_7ff_tmp36;
		BitBlock bytetest_a7_a7, r80_7ff_tmp37, bytetest_a9_a9, r80_7ff_tmp38;
		BitBlock bytetest_ab_ab, r80_7ff_tmp39, bytetest_ad_ad, r80_7ff_tmp40;
		BitBlock bytetest_af_af, r80_7ff_tmp41, bytetest_b1_b1, r80_7ff_tmp42;
		BitBlock bytetest_b3_b3, r80_7ff_tmp43, r80_7ff_tmp44, r80_7ff_tmp45;
		BitBlock r80_7ff_tmp46, bytetest_b7_b8, r80_7ff_tmp47, bytetest_ba_ba;
		BitBlock r80_7ff_tmp48, bytetest_bc_bc, r80_7ff_tmp49, bytetest_be_be;
		BitBlock r80_7ff_tmp50, bytetest_c5, bytetest_80_80, r80_7ff_tmp51;
		BitBlock r80_7ff_tmp52, r80_7ff_tmp53, bytetest_82_82, r80_7ff_tmp54;
		BitBlock bytetest_84_84, r80_7ff_tmp55, bytetest_86_86, r80_7ff_tmp56;
		BitBlock r80_7ff_tmp57, bytetest_88_89, r80_7ff_tmp58, r80_7ff_tmp59;
		BitBlock r80_7ff_tmp60, r80_7ff_tmp61, r80_7ff_tmp62, r80_7ff_tmp63;
		BitBlock r80_7ff_tmp64, r80_7ff_tmp65, r80_7ff_tmp66, r80_7ff_tmp67;
		BitBlock r80_7ff_tmp68, r80_7ff_tmp69, r80_7ff_tmp70, r80_7ff_tmp71;
		BitBlock r80_7ff_tmp72, r80_7ff_tmp73, r80_7ff_tmp74, r80_7ff_tmp75;
		BitBlock r80_7ff_tmp76, r80_7ff_tmp77, r80_7ff_tmp78, r80_7ff_tmp79;
		BitBlock r80_7ff_tmp80, bytetest_b7_b7, r80_7ff_tmp81, r80_7ff_tmp82;
		BitBlock r80_7ff_tmp83, bytetest_c6, r80_7ff_tmp84, r80_7ff_tmp85;
		BitBlock r80_7ff_tmp86, bytetest_be_bf, r80_7ff_tmp87, r80_7ff_tmp88;
		BitBlock r80_7ff_tmp89, r80_7ff_tmp90, bytetest_88_88, r80_7ff_tmp91;
		BitBlock r80_7ff_tmp92, bytetest_8c_8d, r80_7ff_tmp93, bytetest_92_92;
		BitBlock r80_7ff_tmp94, r80_7ff_tmp95, r80_7ff_tmp96, bytetest_99_9b;
		BitBlock r80_7ff_tmp97, bytetest_9e_9e, r80_7ff_tmp98, r80_7ff_tmp99;
		BitBlock r80_7ff_tmp100, r80_7ff_tmp101, bytetest_a8_a8, r80_7ff_tmp102;
		BitBlock r80_7ff_tmp103, bytetest_aa_ab, r80_7ff_tmp104, r80_7ff_tmp105;
		BitBlock bytetest_b0_b0, r80_7ff_tmp106, bytetest_b4_b4, r80_7ff_tmp107;
		BitBlock bytetest_b6_b6, r80_7ff_tmp108, r80_7ff_tmp109, r80_7ff_tmp110;
		BitBlock r80_7ff_tmp111, bytetest_b9_ba, r80_7ff_tmp112, r80_7ff_tmp113;
		BitBlock r80_7ff_tmp114, bytetest_c7, r80_7ff_tmp115, r80_7ff_tmp116;
		BitBlock r80_7ff_tmp117, r80_7ff_tmp118, bytetest_8c_8c, r80_7ff_tmp119;
		BitBlock bytetest_8e_8e, r80_7ff_tmp120, bytetest_90_90, r80_7ff_tmp121;
		BitBlock r80_7ff_tmp122, bytetest_94_94, r80_7ff_tmp123, bytetest_96_96;
		BitBlock r80_7ff_tmp124, bytetest_98_98, r80_7ff_tmp125, bytetest_9a_9a;
		BitBlock r80_7ff_tmp126, bytetest_9c_9d, r80_7ff_tmp127, r80_7ff_tmp128;
		BitBlock r80_7ff_tmp129, r80_7ff_tmp130, r80_7ff_tmp131, r80_7ff_tmp132;
		BitBlock r80_7ff_tmp133, r80_7ff_tmp134, r80_7ff_tmp135, r80_7ff_tmp136;
		BitBlock r80_7ff_tmp137, bytetest_af_b0, r80_7ff_tmp138, r80_7ff_tmp139;
		BitBlock r80_7ff_tmp140, bytetest_b9_b9, r80_7ff_tmp141, r80_7ff_tmp142;
		BitBlock bytetest_bd_bd, r80_7ff_tmp143, bytetest_bf_bf, r80_7ff_tmp144;
		BitBlock bytetest_c8, r80_7ff_tmp145, r80_7ff_tmp146, r80_7ff_tmp147;
		BitBlock r80_7ff_tmp148, r80_7ff_tmp149, r80_7ff_tmp150, r80_7ff_tmp151;
		BitBlock r80_7ff_tmp152, r80_7ff_tmp153, r80_7ff_tmp154, r80_7ff_tmp155;
		BitBlock r80_7ff_tmp156, r80_7ff_tmp157, r80_7ff_tmp158, r80_7ff_tmp159;
		BitBlock r80_7ff_tmp160, r80_7ff_tmp161, r80_7ff_tmp162, r80_7ff_tmp163;
		BitBlock r80_7ff_tmp164, r80_7ff_tmp165, r80_7ff_tmp166, r80_7ff_tmp167;
		BitBlock r80_7ff_tmp168, r80_7ff_tmp169, r80_7ff_tmp170, r80_7ff_tmp171;
		BitBlock r80_7ff_tmp172, bytetest_b3_b9, r80_7ff_tmp173, r80_7ff_tmp174;
		BitBlock bytetest_c9, r80_7ff_tmp175, r80_7ff_tmp176, r80_7ff_tmp177;
		BitBlock r80_7ff_tmp178, r80_7ff_tmp179, r80_7ff_tmp180, r80_7ff_tmp181;
		BitBlock r80_7ff_tmp182, r80_7ff_tmp183, r80_7ff_tmp184, bytetest_ca;
		BitBlock r80_7ff_tmp185, r80_7ff_tmp186, r80_7ff_tmp187, r80_7ff_tmp188;
		BitBlock r80_7ff_tmp189, bytetest_8f_bf, r80_7ff_tmp190, r80_7ff_tmp191;
		BitBlock r80_7ff_tmp192, bytetest_95_af, r80_7ff_tmp193, bytetest_cd;
		BitBlock r80_7ff_tmp194, r80_7ff_tmp195, r80_7ff_tmp196, r80_7ff_tmp197;
		BitBlock r80_7ff_tmp198, r80_7ff_tmp199, r80_7ff_tmp200, bytetest_bb_bd;
		BitBlock r80_7ff_tmp201, bytetest_ce, r80_7ff_tmp202, r80_7ff_tmp203;
		BitBlock r80_7ff_tmp204, bytetest_cf, r80_7ff_tmp205, r80_7ff_tmp206;
		BitBlock r80_7ff_tmp207, bytetest_ac_bf, r80_7ff_tmp208, r80_7ff_tmp209;
		BitBlock bytetest_90_91, r80_7ff_tmp210, r80_7ff_tmp211, bytetest_95_97;
		BitBlock r80_7ff_tmp212, r80_7ff_tmp213, r80_7ff_tmp214, r80_7ff_tmp215;
		BitBlock r80_7ff_tmp216, r80_7ff_tmp217, r80_7ff_tmp218, r80_7ff_tmp219;
		BitBlock r80_7ff_tmp220, r80_7ff_tmp221, r80_7ff_tmp222, r80_7ff_tmp223;
		BitBlock r80_7ff_tmp224, r80_7ff_tmp225, bytetest_af_b3, r80_7ff_tmp226;
		BitBlock r80_7ff_tmp227, bytetest_b8_b8, r80_7ff_tmp228, r80_7ff_tmp229;
		BitBlock r80_7ff_tmp230, bytetest_bb_bc, r80_7ff_tmp231, r80_7ff_tmp232;
		BitBlock bytetest_d1, bytetest_80_9f, r80_7ff_tmp233, r80_7ff_tmp234;
		BitBlock r80_7ff_tmp235, bytetest_d0, r80_7ff_tmp236, r80_7ff_tmp237;
		BitBlock r80_7ff_tmp238, r80_7ff_tmp239, r80_7ff_tmp240, r80_7ff_tmp241;
		BitBlock r80_7ff_tmp242, r80_7ff_tmp243, r80_7ff_tmp244, r80_7ff_tmp245;
		BitBlock r80_7ff_tmp246, r80_7ff_tmp247, r80_7ff_tmp248, r80_7ff_tmp249;
		BitBlock r80_7ff_tmp250, r80_7ff_tmp251, r80_7ff_tmp252, r80_7ff_tmp253;
		BitBlock r80_7ff_tmp254, r80_7ff_tmp255, bytetest_d2, r80_7ff_tmp256;
		BitBlock r80_7ff_tmp257, r80_7ff_tmp258, r80_7ff_tmp259, r80_7ff_tmp260;
		BitBlock r80_7ff_tmp261, r80_7ff_tmp262, r80_7ff_tmp263, r80_7ff_tmp264;
		BitBlock r80_7ff_tmp265, r80_7ff_tmp266, r80_7ff_tmp267, r80_7ff_tmp268;
		BitBlock r80_7ff_tmp269, r80_7ff_tmp270, r80_7ff_tmp271, r80_7ff_tmp272;
		BitBlock r80_7ff_tmp273, r80_7ff_tmp274, r80_7ff_tmp275, r80_7ff_tmp276;
		BitBlock r80_7ff_tmp277, r80_7ff_tmp278, r80_7ff_tmp279, r80_7ff_tmp280;
		BitBlock r80_7ff_tmp281, r80_7ff_tmp282, r80_7ff_tmp283, r80_7ff_tmp284;
		BitBlock r80_7ff_tmp285, bytetest_d3, r80_7ff_tmp286, r80_7ff_tmp287;
		BitBlock r80_7ff_tmp288, r80_7ff_tmp289, r80_7ff_tmp290, r80_7ff_tmp291;
		BitBlock bytetest_8a_8a, r80_7ff_tmp292, r80_7ff_tmp293, bytetest_8e_8f;
		BitBlock r80_7ff_tmp294, r80_7ff_tmp295, r80_7ff_tmp296, r80_7ff_tmp297;
		BitBlock r80_7ff_tmp298, r80_7ff_tmp299, r80_7ff_tmp300, r80_7ff_tmp301;
		BitBlock r80_7ff_tmp302, r80_7ff_tmp303, r80_7ff_tmp304, r80_7ff_tmp305;
		BitBlock r80_7ff_tmp306, r80_7ff_tmp307, r80_7ff_tmp308, r80_7ff_tmp309;
		BitBlock r80_7ff_tmp310, r80_7ff_tmp311, r80_7ff_tmp312, r80_7ff_tmp313;
		BitBlock r80_7ff_tmp314, r80_7ff_tmp315, r80_7ff_tmp316, r80_7ff_tmp317;
		BitBlock r80_7ff_tmp318, bytetest_d4, r80_7ff_tmp319, r80_7ff_tmp320;
		BitBlock r80_7ff_tmp321, r80_7ff_tmp322, r80_7ff_tmp323, r80_7ff_tmp324;
		BitBlock r80_7ff_tmp325, r80_7ff_tmp326, r80_7ff_tmp327, r80_7ff_tmp328;
		BitBlock r80_7ff_tmp329, r80_7ff_tmp330, r80_7ff_tmp331, r80_7ff_tmp332;
		BitBlock r80_7ff_tmp333, r80_7ff_tmp334, r80_7ff_tmp335, r80_7ff_tmp336;
		BitBlock r80_7ff_tmp337, r80_7ff_tmp338, r80_7ff_tmp339, r80_7ff_tmp340;
		BitBlock bytetest_d6, r80_7ff_tmp341, r80_7ff_tmp342, r80_7ff_tmp343;
		BitBlock bytetest_d5, r80_7ff_tmp344, bytetest_a1_bf, r80_7ff_tmp345;
		BitBlock r80_7ff_tmp346, r80_7ff_tmp347, r80_7ff_tmp348, tmp179, tmp180;
		BitBlock tmp181, bytetest_e1_ef, bytetest_e0, bytetest_a0_bf, tmp182, tmp183;
		BitBlock tmp184, tmp185, r800_ffff_tmp1, r800_ffff_tmp2, bytetest_e1;
		BitBlock bytetest_b4, r800_ffff_tmp3, bytetest_80_ab, r800_ffff_tmp4;
		BitBlock r800_ffff_tmp5, r800_ffff_tmp6, r800_ffff_tmp7, r800_ffff_tmp8;
		BitBlock bytetest_b5, r800_ffff_tmp9, r800_ffff_tmp10, bytetest_ab_b7;
		BitBlock r800_ffff_tmp11, r800_ffff_tmp12, r800_ffff_tmp13, bytetest_b6;
		BitBlock r800_ffff_tmp14, bytetest_80_9a, r800_ffff_tmp15, r800_ffff_tmp16;
		BitBlock r800_ffff_tmp17, r800_ffff_tmp18, bytetest_b9_bf, r800_ffff_tmp19;
		BitBlock r800_ffff_tmp20, bytetest_b8, r800_ffff_tmp21, r800_ffff_tmp22;
		BitBlock r800_ffff_tmp23, r800_ffff_tmp24, r800_ffff_tmp25, r800_ffff_tmp26;
		BitBlock r800_ffff_tmp27, r800_ffff_tmp28, r800_ffff_tmp29, r800_ffff_tmp30;
		BitBlock r800_ffff_tmp31, r800_ffff_tmp32, r800_ffff_tmp33, r800_ffff_tmp34;
		BitBlock r800_ffff_tmp35, r800_ffff_tmp36, r800_ffff_tmp37, r800_ffff_tmp38;
		BitBlock r800_ffff_tmp39, r800_ffff_tmp40, r800_ffff_tmp41, r800_ffff_tmp42;
		BitBlock r800_ffff_tmp43, r800_ffff_tmp44, r800_ffff_tmp45, r800_ffff_tmp46;
		BitBlock r800_ffff_tmp47, r800_ffff_tmp48, r800_ffff_tmp49, r800_ffff_tmp50;
		BitBlock r800_ffff_tmp51, r800_ffff_tmp52, r800_ffff_tmp53, r800_ffff_tmp54;
		BitBlock r800_ffff_tmp55, bytetest_b9, r800_ffff_tmp56, r800_ffff_tmp57;
		BitBlock r800_ffff_tmp58, r800_ffff_tmp59, r800_ffff_tmp60, r800_ffff_tmp61;
		BitBlock r800_ffff_tmp62, r800_ffff_tmp63, r800_ffff_tmp64, r800_ffff_tmp65;
		BitBlock r800_ffff_tmp66, r800_ffff_tmp67, r800_ffff_tmp68, r800_ffff_tmp69;
		BitBlock r800_ffff_tmp70, r800_ffff_tmp71, r800_ffff_tmp72, r800_ffff_tmp73;
		BitBlock r800_ffff_tmp74, r800_ffff_tmp75, r800_ffff_tmp76, r800_ffff_tmp77;
		BitBlock r800_ffff_tmp78, r800_ffff_tmp79, r800_ffff_tmp80, r800_ffff_tmp81;
		BitBlock r800_ffff_tmp82, r800_ffff_tmp83, r800_ffff_tmp84, r800_ffff_tmp85;
		BitBlock r800_ffff_tmp86, r800_ffff_tmp87, r800_ffff_tmp88, r800_ffff_tmp89;
		BitBlock bytetest_ba, r800_ffff_tmp90, r800_ffff_tmp91, r800_ffff_tmp92;
		BitBlock r800_ffff_tmp93, r800_ffff_tmp94, r800_ffff_tmp95, r800_ffff_tmp96;
		BitBlock r800_ffff_tmp97, r800_ffff_tmp98, r800_ffff_tmp99, r800_ffff_tmp100;
		BitBlock r800_ffff_tmp101, r800_ffff_tmp102, r800_ffff_tmp103, bytetest_95_9d;
		BitBlock r800_ffff_tmp104, r800_ffff_tmp105, r800_ffff_tmp106;
		BitBlock r800_ffff_tmp107, r800_ffff_tmp108, r800_ffff_tmp109;
		BitBlock r800_ffff_tmp110, r800_ffff_tmp111, r800_ffff_tmp112;
		BitBlock r800_ffff_tmp113, r800_ffff_tmp114, r800_ffff_tmp115;
		BitBlock r800_ffff_tmp116, r800_ffff_tmp117, r800_ffff_tmp118;
		BitBlock r800_ffff_tmp119, r800_ffff_tmp120, r800_ffff_tmp121, bytetest_bb;
		BitBlock r800_ffff_tmp122, r800_ffff_tmp123, r800_ffff_tmp124;
		BitBlock r800_ffff_tmp125, r800_ffff_tmp126, r800_ffff_tmp127;
		BitBlock r800_ffff_tmp128, r800_ffff_tmp129, r800_ffff_tmp130;
		BitBlock r800_ffff_tmp131, r800_ffff_tmp132, r800_ffff_tmp133;
		BitBlock r800_ffff_tmp134, r800_ffff_tmp135, r800_ffff_tmp136;
		BitBlock r800_ffff_tmp137, r800_ffff_tmp138, r800_ffff_tmp139;
		BitBlock r800_ffff_tmp140, r800_ffff_tmp141, r800_ffff_tmp142;
		BitBlock r800_ffff_tmp143, r800_ffff_tmp144, r800_ffff_tmp145;
		BitBlock r800_ffff_tmp146, r800_ffff_tmp147, r800_ffff_tmp148;
		BitBlock r800_ffff_tmp149, r800_ffff_tmp150, r800_ffff_tmp151;
		BitBlock r800_ffff_tmp152, r800_ffff_tmp153, r800_ffff_tmp154, bytetest_bc;
		BitBlock r800_ffff_tmp155, r800_ffff_tmp156, r800_ffff_tmp157;
		BitBlock r800_ffff_tmp158, r800_ffff_tmp159, r800_ffff_tmp160, bytetest_a0_a7;
		BitBlock r800_ffff_tmp161, bytetest_b0_b7, r800_ffff_tmp162, bytetest_bd;
		BitBlock bytetest_80_85, r800_ffff_tmp163, r800_ffff_tmp164, r800_ffff_tmp165;
		BitBlock bytetest_90_97, r800_ffff_tmp166, r800_ffff_tmp167, r800_ffff_tmp168;
		BitBlock bytetest_b0_bd, r800_ffff_tmp169, bytetest_be, r800_ffff_tmp170;
		BitBlock r800_ffff_tmp171, r800_ffff_tmp172, r800_ffff_tmp173;
		BitBlock r800_ffff_tmp174, bytetest_b0_b4, r800_ffff_tmp175, r800_ffff_tmp176;
		BitBlock bytetest_b6_b7, r800_ffff_tmp177, r800_ffff_tmp178, bytetest_bf;
		BitBlock r800_ffff_tmp179, r800_ffff_tmp180, bytetest_82_84, r800_ffff_tmp181;
		BitBlock r800_ffff_tmp182, r800_ffff_tmp183, bytetest_86_87, r800_ffff_tmp184;
		BitBlock bytetest_90_93, r800_ffff_tmp185, bytetest_96_97, r800_ffff_tmp186;
		BitBlock r800_ffff_tmp187, bytetest_b2_b4, r800_ffff_tmp188, r800_ffff_tmp189;
		BitBlock bytetest_e2, bytetest_84, r800_ffff_tmp190, r800_ffff_tmp191;
		BitBlock r800_ffff_tmp192, r800_ffff_tmp193, r800_ffff_tmp194;
		BitBlock r800_ffff_tmp195, r800_ffff_tmp196, r800_ffff_tmp197;
		BitBlock r800_ffff_tmp198, r800_ffff_tmp199, r800_ffff_tmp200, bytetest_bc_bd;
		BitBlock r800_ffff_tmp201, bytetest_85, bytetest_86_89, r800_ffff_tmp202;
		BitBlock r800_ffff_tmp203, r800_ffff_tmp204, r800_ffff_tmp205, bytetest_86;
		BitBlock r800_ffff_tmp206, r800_ffff_tmp207, r800_ffff_tmp208, bytetest_b1;
		BitBlock r800_ffff_tmp209, bytetest_80_9e, r800_ffff_tmp210, r800_ffff_tmp211;
		BitBlock r800_ffff_tmp212, bytetest_b0, r800_ffff_tmp213, r800_ffff_tmp214;
		BitBlock r800_ffff_tmp215, r800_ffff_tmp216, r800_ffff_tmp217;
		BitBlock r800_ffff_tmp218, r800_ffff_tmp219, r800_ffff_tmp220, bytetest_a5_a6;
		BitBlock r800_ffff_tmp221, r800_ffff_tmp222, bytetest_aa_aa, r800_ffff_tmp223;
		BitBlock bytetest_ac_ac, r800_ffff_tmp224, r800_ffff_tmp225, r800_ffff_tmp226;
		BitBlock bytetest_b3_b4, r800_ffff_tmp227, bytetest_b6_bb, r800_ffff_tmp228;
		BitBlock bytetest_b2, r800_ffff_tmp229, r800_ffff_tmp230, r800_ffff_tmp231;
		BitBlock r800_ffff_tmp232, r800_ffff_tmp233, r800_ffff_tmp234;
		BitBlock r800_ffff_tmp235, r800_ffff_tmp236, r800_ffff_tmp237;
		BitBlock r800_ffff_tmp238, r800_ffff_tmp239, r800_ffff_tmp240;
		BitBlock r800_ffff_tmp241, r800_ffff_tmp242, r800_ffff_tmp243;
		BitBlock r800_ffff_tmp244, r800_ffff_tmp245, r800_ffff_tmp246;
		BitBlock r800_ffff_tmp247, r800_ffff_tmp248, r800_ffff_tmp249;
		BitBlock r800_ffff_tmp250, r800_ffff_tmp251, r800_ffff_tmp252;
		BitBlock r800_ffff_tmp253, r800_ffff_tmp254, r800_ffff_tmp255;
		BitBlock r800_ffff_tmp256, r800_ffff_tmp257, r800_ffff_tmp258;
		BitBlock r800_ffff_tmp259, r800_ffff_tmp260, r800_ffff_tmp261;
		BitBlock r800_ffff_tmp262, bytetest_b3, r800_ffff_tmp263, r800_ffff_tmp264;
		BitBlock r800_ffff_tmp265, r800_ffff_tmp266, r800_ffff_tmp267;
		BitBlock r800_ffff_tmp268, r800_ffff_tmp269, r800_ffff_tmp270;
		BitBlock r800_ffff_tmp271, r800_ffff_tmp272, r800_ffff_tmp273;
		BitBlock r800_ffff_tmp274, r800_ffff_tmp275, r800_ffff_tmp276;
		BitBlock r800_ffff_tmp277, r800_ffff_tmp278, r800_ffff_tmp279;
		BitBlock r800_ffff_tmp280, r800_ffff_tmp281, bytetest_a3_a4, r800_ffff_tmp282;
		BitBlock r800_ffff_tmp283, bytetest_ae_ae, r800_ffff_tmp284, r800_ffff_tmp285;
		BitBlock r800_ffff_tmp286, bytetest_80_a5, r800_ffff_tmp287, r800_ffff_tmp288;
		BitBlock r800_ffff_tmp289, r800_ffff_tmp290, r800_ffff_tmp291, bytetest_ea;
		BitBlock r800_ffff_tmp292, r800_ffff_tmp293, r800_ffff_tmp294;
		BitBlock r800_ffff_tmp295, r800_ffff_tmp296, r800_ffff_tmp297;
		BitBlock r800_ffff_tmp298, r800_ffff_tmp299, r800_ffff_tmp300;
		BitBlock r800_ffff_tmp301, r800_ffff_tmp302, r800_ffff_tmp303;
		BitBlock r800_ffff_tmp304, r800_ffff_tmp305, r800_ffff_tmp306;
		BitBlock r800_ffff_tmp307, r800_ffff_tmp308, r800_ffff_tmp309;
		BitBlock r800_ffff_tmp310, r800_ffff_tmp311, r800_ffff_tmp312;
		BitBlock r800_ffff_tmp313, r800_ffff_tmp314, r800_ffff_tmp315;
		BitBlock r800_ffff_tmp316, r800_ffff_tmp317, r800_ffff_tmp318;
		BitBlock r800_ffff_tmp319, r800_ffff_tmp320, r800_ffff_tmp321;
		BitBlock r800_ffff_tmp322, r800_ffff_tmp323, r800_ffff_tmp324;
		BitBlock r800_ffff_tmp325, r800_ffff_tmp326, r800_ffff_tmp327;
		BitBlock r800_ffff_tmp328, r800_ffff_tmp329, r800_ffff_tmp330;
		BitBlock r800_ffff_tmp331, r800_ffff_tmp332, r800_ffff_tmp333;
		BitBlock r800_ffff_tmp334, r800_ffff_tmp335, r800_ffff_tmp336;
		BitBlock r800_ffff_tmp337, r800_ffff_tmp338, r800_ffff_tmp339;
		BitBlock r800_ffff_tmp340, r800_ffff_tmp341, r800_ffff_tmp342, bytetest_af_b1;
		BitBlock r800_ffff_tmp343, r800_ffff_tmp344, r800_ffff_tmp345;
		BitBlock r800_ffff_tmp346, r800_ffff_tmp347, r800_ffff_tmp348;
		BitBlock r800_ffff_tmp349, r800_ffff_tmp350, r800_ffff_tmp351;
		BitBlock r800_ffff_tmp352, r800_ffff_tmp353, r800_ffff_tmp354;
		BitBlock r800_ffff_tmp355, r800_ffff_tmp356, r800_ffff_tmp357;
		BitBlock r800_ffff_tmp358, r800_ffff_tmp359, r800_ffff_tmp360;
		BitBlock r800_ffff_tmp361, r800_ffff_tmp362, r800_ffff_tmp363;
		BitBlock r800_ffff_tmp364, r800_ffff_tmp365, r800_ffff_tmp366;
		BitBlock r800_ffff_tmp367, r800_ffff_tmp368, r800_ffff_tmp369;
		BitBlock r800_ffff_tmp370, r800_ffff_tmp371, r800_ffff_tmp372;
		BitBlock r800_ffff_tmp373, r800_ffff_tmp374, r800_ffff_tmp375;
		BitBlock r800_ffff_tmp376, r800_ffff_tmp377, r800_ffff_tmp378, bytetest_b1_b8;
		BitBlock r800_ffff_tmp379, r800_ffff_tmp380, r800_ffff_tmp381;
		BitBlock r800_ffff_tmp382, r800_ffff_tmp383, r800_ffff_tmp384;
		BitBlock r800_ffff_tmp385, r800_ffff_tmp386, r800_ffff_tmp387;
		BitBlock r800_ffff_tmp388, r800_ffff_tmp389, r800_ffff_tmp390;
		BitBlock r800_ffff_tmp391, r800_ffff_tmp392, r800_ffff_tmp393;
		BitBlock r800_ffff_tmp394, r800_ffff_tmp395, r800_ffff_tmp396;
		BitBlock r800_ffff_tmp397, r800_ffff_tmp398, r800_ffff_tmp399;
		BitBlock r800_ffff_tmp400, bytetest_ef, bytetest_ac, bytetest_80_86;
		BitBlock r800_ffff_tmp401, r800_ffff_tmp402, r800_ffff_tmp403;
		BitBlock r800_ffff_tmp404, r800_ffff_tmp405, bytetest_93_97, r800_ffff_tmp406;
		BitBlock bytetest_81_9a, r800_ffff_tmp407, r800_ffff_tmp408, r800_ffff_tmp409;
		BitBlock bytetest_80_bf, tmp186, tmp187, tmp188, bytetest_80_8f;
		BitBlock r10000_10fff_tmp1, r10000_10fff_tmp2, r10000_10fff_tmp3;
		BitBlock r10000_10fff_tmp4, r10000_10fff_tmp5, bytetest_a8_bf;
		BitBlock r10000_10fff_tmp6, r10000_10fff_tmp7, r10000_10fff_tmp8;
		BitBlock r10000_10fff_tmp9;




        struct_Ll.cc = simd<1>::constant<0>();
        tmp1 = simd_andc(basis_bits.bit_1, basis_bits.bit_0);
        tmp2 = simd_and(tmp1, basis_bits.bit_2);
        tmp3 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp4 = simd_or(basis_bits.bit_5, tmp3);
        tmp5 = simd_and(basis_bits.bit_4, tmp4);
        tmp6 = simd_not(tmp5);
        tmp7 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp8 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp9 = simd_or(tmp7, tmp8);
        tmp10 = simd_or(simd_and(basis_bits.bit_3, tmp6), simd_andc(tmp9, basis_bits.bit_3));
        bytetest_61_7a = simd_and(tmp2, tmp10);
        struct_Ll.cc = simd_or(bytetest_61_7a, struct_Ll.cc);
        tmp11 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp12 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp13 = simd_and(tmp11, tmp12);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        tmp14 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp15 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp16 = simd_and(tmp14, tmp15);
        tmp17 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp18 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp19 = simd_and(tmp17, tmp18);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_90 = simd_andc(tmp16, tmp9);
        tmp20 = simd_and(basis_bits.bit_3, tmp7);
        tmp21 = simd_not(tmp20);
        tmp22 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
        tmp23 = simd_and(basis_bits.bit_4, tmp22);
        tmp24 = simd_and(basis_bits.bit_3, tmp23);
        tmp25 = simd_or(simd_and(basis_bits.bit_2, tmp21), simd_andc(tmp24, basis_bits.bit_2));
        bytetest_9a_b3 = simd_and(tmp14, tmp25);
        tmp26 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp26, carryQ.get_carry_in(0), tmp27));
        tmp28 = simd_and(tmp27, bytetest_f0);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp28, carryQ.get_carry_in(1), tmp29));
        tmp30 = simd_and(tmp29, bytetest_9d);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp30, carryQ.get_carry_in(2), tmp31));
        tmp32 = simd_and(tmp31, bytetest_90);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp32, carryQ.get_carry_in(3), tmp33));
        tmp34 = simd_and(tmp33, bytetest_9a_b3);
        struct_Ll.cc = simd_or(tmp34, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        tmp35 = simd_andc(tmp18, tmp7);
        bytetest_91 = simd_and(tmp16, tmp35);
        tmp36 = simd_andc(tmp14, basis_bits.bit_2);
        tmp37 = simd_and(basis_bits.bit_5, tmp8);
        tmp38 = simd_or(basis_bits.bit_4, tmp37);
        tmp39 = simd_not(tmp38);
        tmp40 = simd_and(tmp17, basis_bits.bit_6);
        tmp41 = simd_or(simd_and(basis_bits.bit_3, tmp39), simd_andc(tmp40, basis_bits.bit_3));
        bytetest_8e_94 = simd_and(tmp36, tmp41);
        tmp42 = simd_and(tmp31, bytetest_91);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp42, carryQ.get_carry_in(4), tmp43));
        tmp44 = simd_and(tmp43, bytetest_8e_94);
        struct_Ll.cc = simd_or(tmp44, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_91 = simd_and(tmp16, tmp35);
        tmp45 = simd_or(basis_bits.bit_3, basis_bits.bit_4);
        tmp46 = simd_not(tmp45);
        tmp47 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp48 = simd_or(basis_bits.bit_4, tmp47);
        tmp49 = simd_and(basis_bits.bit_3, tmp48);
        tmp50 = simd_or(simd_and(basis_bits.bit_2, tmp46), simd_andc(tmp49, basis_bits.bit_2));
        bytetest_96_a7 = simd_and(tmp14, tmp50);
        tmp51 = simd_and(tmp43, bytetest_96_a7);
        struct_Ll.cc = simd_or(tmp51, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        tmp52 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp53 = simd_andc(tmp52, tmp7);
        bytetest_92 = simd_and(tmp16, tmp53);
        tmp54 = simd_not(tmp17);
        tmp55 = simd_or(tmp7, basis_bits.bit_6);
        tmp56 = simd_or(simd_and(basis_bits.bit_3, tmp54), simd_andc(tmp55, basis_bits.bit_3));
        bytetest_82_9b = simd_and(tmp36, tmp56);
        tmp57 = simd_and(tmp31, bytetest_92);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp57, carryQ.get_carry_in(5), tmp58));
        tmp59 = simd_and(tmp58, bytetest_82_9b);
        struct_Ll.cc = simd_or(tmp59, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_92 = simd_and(tmp16, tmp53);
        tmp60 = simd_and(tmp14, tmp12);
        tmp61 = simd_not(tmp22);
        tmp62 = simd_or(simd_and(basis_bits.bit_4, tmp61), simd_andc(tmp47, basis_bits.bit_4));
        bytetest_b6_b9 = simd_and(tmp60, tmp62);
        tmp63 = simd_and(tmp58, bytetest_b6_b9);
        struct_Ll.cc = simd_or(tmp63, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_92 = simd_and(tmp16, tmp53);
        tmp64 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp65 = simd_and(tmp64, tmp3);
        bytetest_bb_bb = simd_and(tmp60, tmp65);
        tmp66 = simd_and(tmp58, bytetest_bb_bb);
        struct_Ll.cc = simd_or(tmp66, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        tmp67 = simd_andc(tmp3, tmp7);
        bytetest_93 = simd_and(tmp16, tmp67);
        tmp68 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp69 = simd_andc(tmp14, tmp68);
        bytetest_80_83 = simd_andc(tmp69, tmp7);
        tmp70 = simd_and(tmp31, bytetest_93);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp70, carryQ.get_carry_in(6), tmp71));
        tmp72 = simd_and(tmp71, bytetest_80_83);
        bytetest_92 = simd_and(tmp16, tmp53);
        tmp73 = simd_and(tmp60, tmp17);
        bytetest_bd_bf = simd_and(tmp73, tmp8);
        tmp74 = simd_and(tmp58, bytetest_bd_bf);
        tmp75 = simd_or(tmp74, tmp72);
        struct_Ll.cc = simd_or(tmp75, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_93 = simd_and(tmp16, tmp67);
        bytetest_85_8f = simd_and(tmp69, tmp38);
        tmp76 = simd_and(tmp71, bytetest_85_8f);
        struct_Ll.cc = simd_or(tmp76, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        tmp77 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp78 = simd_andc(tmp77, tmp8);
        bytetest_94 = simd_and(tmp16, tmp78);
        bytetest_80_83 = simd_andc(tmp69, tmp7);
        tmp79 = simd_and(tmp31, bytetest_94);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp79, carryQ.get_carry_in(7), tmp80));
        tmp81 = simd_and(tmp80, bytetest_80_83);
        bytetest_93 = simd_and(tmp16, tmp67);
        tmp82 = simd_and(tmp14, basis_bits.bit_2);
        tmp83 = simd_or(basis_bits.bit_3, tmp23);
        bytetest_aa_bf = simd_and(tmp82, tmp83);
        tmp84 = simd_and(tmp71, bytetest_aa_bf);
        tmp85 = simd_or(tmp84, tmp81);
        struct_Ll.cc = simd_or(tmp85, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_94 = simd_and(tmp16, tmp78);
        tmp86 = simd_and(basis_bits.bit_3, basis_bits.bit_4);
        tmp87 = simd_not(tmp86);
        tmp88 = simd_and(basis_bits.bit_3, tmp40);
        tmp89 = simd_or(simd_and(basis_bits.bit_2, tmp87), simd_andc(tmp88, basis_bits.bit_2));
        bytetest_9e_b7 = simd_and(tmp14, tmp89);
        tmp90 = simd_and(tmp80, bytetest_9e_b7);
        struct_Ll.cc = simd_or(tmp90, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        tmp91 = simd_and(tmp77, tmp18);
        bytetest_95 = simd_and(tmp16, tmp91);
        tmp92 = simd_or(basis_bits.bit_3, tmp17);
        tmp93 = simd_not(tmp92);
        tmp94 = simd_and(basis_bits.bit_3, tmp55);
        tmp95 = simd_or(simd_and(basis_bits.bit_2, tmp93), simd_andc(tmp94, basis_bits.bit_2));
        bytetest_92_ab = simd_and(tmp14, tmp95);
        tmp96 = simd_and(tmp31, bytetest_95);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(tmp96, carryQ.get_carry_in(8), tmp97));
        tmp98 = simd_and(tmp97, bytetest_92_ab);
        struct_Ll.cc = simd_or(tmp98, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        tmp99 = simd_and(tmp77, tmp52);
        bytetest_96 = simd_and(tmp16, tmp99);
        tmp100 = simd_or(basis_bits.bit_3, tmp48);
        bytetest_86_9f = simd_and(tmp36, tmp100);
        tmp101 = simd_and(tmp31, bytetest_96);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(tmp101, carryQ.get_carry_in(9), tmp102));
        tmp103 = simd_and(tmp102, bytetest_86_9f);
        struct_Ll.cc = simd_or(tmp103, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        tmp104 = simd_and(tmp77, tmp3);
        bytetest_97 = simd_and(tmp16, tmp104);
        bytetest_80_93 = simd_andc(tmp36, tmp20);
        tmp105 = simd_and(tmp31, bytetest_97);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(tmp105, carryQ.get_carry_in(10), tmp106));
        tmp107 = simd_and(tmp106, bytetest_80_93);
        bytetest_96 = simd_and(tmp16, tmp99);
        tmp108 = simd_and(tmp60, basis_bits.bit_4);
        bytetest_ba_bf = simd_and(tmp108, tmp22);
        tmp109 = simd_and(tmp102, bytetest_ba_bf);
        tmp110 = simd_or(tmp109, tmp107);
        struct_Ll.cc = simd_or(tmp110, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        tmp111 = simd_andc(tmp64, tmp8);
        bytetest_98 = simd_and(tmp16, tmp111);
        bytetest_80_87 = simd_andc(tmp69, basis_bits.bit_4);
        tmp112 = simd_and(tmp31, bytetest_98);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(tmp112, carryQ.get_carry_in(11), tmp113));
        tmp114 = simd_and(tmp113, bytetest_80_87);
        bytetest_97 = simd_and(tmp16, tmp104);
        tmp115 = simd_or(basis_bits.bit_3, tmp40);
        bytetest_ae_bf = simd_and(tmp82, tmp115);
        tmp116 = simd_and(tmp106, bytetest_ae_bf);
        tmp117 = simd_or(tmp116, tmp114);
        struct_Ll.cc = simd_or(tmp117, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_98 = simd_and(tmp16, tmp111);
        bytetest_a2_bb = simd_and(tmp82, tmp56);
        tmp118 = simd_and(tmp113, bytetest_a2_bb);
        struct_Ll.cc = simd_or(tmp118, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        tmp119 = simd_and(tmp64, tmp18);
        bytetest_99 = simd_and(tmp16, tmp119);
        tmp120 = simd_not(basis_bits.bit_3);
        tmp121 = simd_or(simd_and(basis_bits.bit_2, tmp120), simd_andc(tmp49, basis_bits.bit_2));
        bytetest_96_af = simd_and(tmp14, tmp121);
        tmp122 = simd_and(tmp31, bytetest_99);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(tmp122, carryQ.get_carry_in(12), tmp123));
        tmp124 = simd_and(tmp123, bytetest_96_af);
        struct_Ll.cc = simd_or(tmp124, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        tmp125 = simd_and(tmp64, tmp52);
        bytetest_9a = simd_and(tmp16, tmp125);
        tmp126 = simd_not(tmp100);
        tmp127 = simd_or(simd_and(basis_bits.bit_2, tmp126), simd_andc(tmp83, basis_bits.bit_2));
        bytetest_8a_a5 = simd_and(tmp14, tmp127);
        tmp128 = simd_and(tmp31, bytetest_9a);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(tmp128, carryQ.get_carry_in(13), tmp129));
        tmp130 = simd_and(tmp129, bytetest_8a_a5);
        struct_Ll.cc = simd_or(tmp130, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_9b = simd_and(tmp16, tmp65);
        tmp131 = simd_or(simd_and(basis_bits.bit_3, tmp6), simd_andc(tmp55, basis_bits.bit_3));
        bytetest_82_9a = simd_and(tmp36, tmp131);
        tmp132 = simd_and(tmp31, bytetest_9b);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(tmp132, carryQ.get_carry_in(14), tmp133));
        tmp134 = simd_and(tmp133, bytetest_82_9a);
        struct_Ll.cc = simd_or(tmp134, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_9b = simd_and(tmp16, tmp65);
        tmp135 = simd_or(basis_bits.bit_3, tmp55);
        tmp136 = simd_not(tmp135);
        tmp137 = simd_and(basis_bits.bit_3, tmp17);
        tmp138 = simd_or(simd_and(basis_bits.bit_2, tmp136), simd_andc(tmp137, basis_bits.bit_2));
        bytetest_9c_a1 = simd_and(tmp14, tmp138);
        tmp139 = simd_and(tmp133, bytetest_9c_a1);
        struct_Ll.cc = simd_or(tmp139, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        tmp140 = simd_andc(tmp17, tmp8);
        bytetest_9c = simd_and(tmp16, tmp140);
        tmp141 = simd_and(basis_bits.bit_3, tmp38);
        bytetest_80_94 = simd_andc(tmp36, tmp141);
        tmp142 = simd_and(tmp31, bytetest_9c);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(tmp142, carryQ.get_carry_in(15), tmp143));
        tmp144 = simd_and(tmp143, bytetest_80_94);
        bytetest_9b = simd_and(tmp16, tmp65);
        bytetest_bc_bf = simd_and(tmp60, tmp17);
        tmp145 = simd_and(tmp133, bytetest_bc_bf);
        tmp146 = simd_or(tmp145, tmp144);
        struct_Ll.cc = simd_or(tmp146, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_9c = simd_and(tmp16, tmp140);
        tmp147 = simd_not(basis_bits.bit_5);
        tmp148 = simd_or(simd_and(basis_bits.bit_4, tmp147), simd_andc(tmp47, basis_bits.bit_4));
        bytetest_96_9b = simd_and(tmp16, tmp148);
        tmp149 = simd_and(tmp143, bytetest_96_9b);
        struct_Ll.cc = simd_or(tmp149, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_9d = simd_and(tmp16, tmp19);
        tmp150 = simd_and(basis_bits.bit_5, tmp3);
        tmp151 = simd_and(basis_bits.bit_4, tmp150);
        bytetest_80_8e = simd_andc(tmp69, tmp151);
        tmp152 = simd_and(tmp31, bytetest_9d);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(tmp152, carryQ.get_carry_in(16), tmp153));
        tmp154 = simd_and(tmp153, bytetest_80_8e);
        bytetest_9c = simd_and(tmp16, tmp140);
        bytetest_b6_bf = simd_and(tmp60, tmp48);
        tmp155 = simd_and(tmp143, bytetest_b6_bf);
        tmp156 = simd_or(tmp155, tmp154);
        struct_Ll.cc = simd_or(tmp156, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_9d = simd_and(tmp16, tmp19);
        tmp157 = simd_andc(tmp16, basis_bits.bit_4);
        bytetest_90_95 = simd_andc(tmp157, tmp47);
        tmp158 = simd_and(tmp153, bytetest_90_95);
        struct_Ll.cc = simd_or(tmp158, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        tmp159 = simd_and(tmp17, tmp52);
        bytetest_9e = simd_and(tmp16, tmp159);
        tmp160 = simd_or(basis_bits.bit_5, tmp8);
        tmp161 = simd_and(basis_bits.bit_4, tmp160);
        bytetest_80_88 = simd_andc(tmp69, tmp161);
        tmp162 = simd_and(tmp31, bytetest_9e);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(tmp162, carryQ.get_carry_in(17), tmp163));
        tmp164 = simd_and(tmp163, bytetest_80_88);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_b0_bf = simd_and(tmp14, tmp12);
        tmp165 = simd_and(tmp153, bytetest_b0_bf);
        tmp166 = simd_or(tmp165, tmp164);
        struct_Ll.cc = simd_or(tmp166, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_9e = simd_and(tmp16, tmp159);
        tmp167 = simd_and(tmp69, basis_bits.bit_4);
        bytetest_8a_8f = simd_and(tmp167, tmp22);
        tmp168 = simd_and(tmp163, bytetest_8a_8f);
        struct_Ll.cc = simd_or(tmp168, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        tmp169 = simd_and(tmp17, tmp3);
        bytetest_9f = simd_and(tmp16, tmp169);
        bytetest_80_82 = simd_andc(bytetest_80_83, tmp3);
        tmp170 = simd_and(tmp31, bytetest_9f);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(tmp170, carryQ.get_carry_in(18), tmp171));
        tmp172 = simd_and(tmp171, bytetest_80_82);
        bytetest_9e = simd_and(tmp16, tmp159);
        bytetest_aa_bf = simd_and(tmp82, tmp83);
        tmp173 = simd_and(tmp163, bytetest_aa_bf);
        tmp174 = simd_or(tmp173, tmp172);
        struct_Ll.cc = simd_or(tmp174, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_9f = simd_and(tmp16, tmp169);
        tmp175 = simd_or(simd_and(basis_bits.bit_4, tmp61), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
        bytetest_84_89 = simd_and(tmp69, tmp175);
        tmp176 = simd_and(tmp171, bytetest_84_89);
        struct_Ll.cc = simd_or(tmp176, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_9f = simd_and(tmp16, tmp169);
        bytetest_8b_8b = simd_and(tmp69, tmp65);
        tmp177 = simd_and(tmp171, bytetest_8b_8b);
        struct_Ll.cc = simd_or(tmp177, struct_Ll.cc);
        tmp178 = simd_andc(tmp11, basis_bits.bit_2);
        bytetest_c2_df = simd_and(tmp178, tmp135);
        if ((bitblock::any(bytetest_c2_df) || carryQ.CarryTest(19, 19))) {
          r80_7ff_tmp1 = simd_andc(tmp11, tmp68);
          bytetest_c2 = simd_and(r80_7ff_tmp1, tmp53);
          bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp91);
          r80_7ff_tmp2 = simd_and(tmp27, bytetest_c2);
          carryQ.cq[19] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp2, carryQ.get_carry_in(19), r80_7ff_tmp3));
          r80_7ff_tmp4 = simd_and(r80_7ff_tmp3, bytetest_b5_b5);
          struct_Ll.cc = simd_or(r80_7ff_tmp4, struct_Ll.cc);
          bytetest_c3 = simd_and(r80_7ff_tmp1, tmp67);
          r80_7ff_tmp5 = simd_or(basis_bits.bit_4, tmp150);
          r80_7ff_tmp6 = simd_and(basis_bits.bit_3, r80_7ff_tmp5);
          r80_7ff_tmp7 = simd_not(r80_7ff_tmp6);
          r80_7ff_tmp8 = simd_and(basis_bits.bit_3, tmp169);
          r80_7ff_tmp9 = simd_or(simd_and(basis_bits.bit_2, r80_7ff_tmp7), simd_andc(r80_7ff_tmp8, basis_bits.bit_2));
          bytetest_9f_b6 = simd_and(tmp14, r80_7ff_tmp9);
          r80_7ff_tmp10 = simd_and(tmp27, bytetest_c3);
          carryQ.cq[20] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp10, carryQ.get_carry_in(20), r80_7ff_tmp11));
          r80_7ff_tmp12 = simd_and(r80_7ff_tmp11, bytetest_9f_b6);
          struct_Ll.cc = simd_or(r80_7ff_tmp12, struct_Ll.cc);
          bytetest_c3 = simd_and(r80_7ff_tmp1, tmp67);
          bytetest_b8_bf = simd_and(bytetest_b0_bf, basis_bits.bit_4);
          r80_7ff_tmp13 = simd_and(r80_7ff_tmp11, bytetest_b8_bf);
          struct_Ll.cc = simd_or(r80_7ff_tmp13, struct_Ll.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp78);
          bytetest_81_81 = simd_and(tmp69, tmp35);
          r80_7ff_tmp14 = simd_and(tmp27, bytetest_c4);
          carryQ.cq[21] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp14, carryQ.get_carry_in(21), r80_7ff_tmp15));
          r80_7ff_tmp16 = simd_and(r80_7ff_tmp15, bytetest_81_81);
          struct_Ll.cc = simd_or(r80_7ff_tmp16, struct_Ll.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp78);
          bytetest_83_83 = simd_and(tmp69, tmp67);
          r80_7ff_tmp17 = simd_and(r80_7ff_tmp15, bytetest_83_83);
          struct_Ll.cc = simd_or(r80_7ff_tmp17, struct_Ll.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp78);
          bytetest_85_85 = simd_and(tmp69, tmp91);
          r80_7ff_tmp18 = simd_and(r80_7ff_tmp15, bytetest_85_85);
          struct_Ll.cc = simd_or(r80_7ff_tmp18, struct_Ll.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp78);
          bytetest_87_87 = simd_and(tmp69, tmp104);
          r80_7ff_tmp19 = simd_and(r80_7ff_tmp15, bytetest_87_87);
          struct_Ll.cc = simd_or(r80_7ff_tmp19, struct_Ll.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp78);
          bytetest_89_89 = simd_and(tmp69, tmp119);
          r80_7ff_tmp20 = simd_and(r80_7ff_tmp15, bytetest_89_89);
          struct_Ll.cc = simd_or(r80_7ff_tmp20, struct_Ll.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp78);
          bytetest_8b_8b = simd_and(tmp69, tmp65);
          r80_7ff_tmp21 = simd_and(r80_7ff_tmp15, bytetest_8b_8b);
          struct_Ll.cc = simd_or(r80_7ff_tmp21, struct_Ll.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp78);
          bytetest_8d_8d = simd_and(tmp69, tmp19);
          r80_7ff_tmp22 = simd_and(r80_7ff_tmp15, bytetest_8d_8d);
          struct_Ll.cc = simd_or(r80_7ff_tmp22, struct_Ll.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp78);
          bytetest_8f_8f = simd_and(tmp69, tmp169);
          r80_7ff_tmp23 = simd_and(r80_7ff_tmp15, bytetest_8f_8f);
          struct_Ll.cc = simd_or(r80_7ff_tmp23, struct_Ll.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp78);
          bytetest_91_91 = simd_and(tmp16, tmp35);
          r80_7ff_tmp24 = simd_and(r80_7ff_tmp15, bytetest_91_91);
          struct_Ll.cc = simd_or(r80_7ff_tmp24, struct_Ll.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp78);
          bytetest_93_93 = simd_and(tmp16, tmp67);
          r80_7ff_tmp25 = simd_and(r80_7ff_tmp15, bytetest_93_93);
          struct_Ll.cc = simd_or(r80_7ff_tmp25, struct_Ll.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp78);
          bytetest_95_95 = simd_and(tmp16, tmp91);
          r80_7ff_tmp26 = simd_and(r80_7ff_tmp15, bytetest_95_95);
          struct_Ll.cc = simd_or(r80_7ff_tmp26, struct_Ll.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp78);
          bytetest_97_97 = simd_and(tmp16, tmp104);
          r80_7ff_tmp27 = simd_and(r80_7ff_tmp15, bytetest_97_97);
          struct_Ll.cc = simd_or(r80_7ff_tmp27, struct_Ll.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp78);
          bytetest_99_99 = simd_and(tmp16, tmp119);
          r80_7ff_tmp28 = simd_and(r80_7ff_tmp15, bytetest_99_99);
          struct_Ll.cc = simd_or(r80_7ff_tmp28, struct_Ll.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp78);
          bytetest_9b_9b = simd_and(tmp16, tmp65);
          r80_7ff_tmp29 = simd_and(r80_7ff_tmp15, bytetest_9b_9b);
          struct_Ll.cc = simd_or(r80_7ff_tmp29, struct_Ll.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp78);
          bytetest_9d_9d = simd_and(tmp16, tmp19);
          r80_7ff_tmp30 = simd_and(r80_7ff_tmp15, bytetest_9d_9d);
          struct_Ll.cc = simd_or(r80_7ff_tmp30, struct_Ll.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp78);
          bytetest_9f_9f = simd_and(tmp16, tmp169);
          r80_7ff_tmp31 = simd_and(r80_7ff_tmp15, bytetest_9f_9f);
          struct_Ll.cc = simd_or(r80_7ff_tmp31, struct_Ll.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp78);
          r80_7ff_tmp32 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
          r80_7ff_tmp33 = simd_and(tmp14, r80_7ff_tmp32);
          bytetest_a1_a1 = simd_and(r80_7ff_tmp33, tmp35);
          r80_7ff_tmp34 = simd_and(r80_7ff_tmp15, bytetest_a1_a1);
          struct_Ll.cc = simd_or(r80_7ff_tmp34, struct_Ll.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp78);
          bytetest_a3_a3 = simd_and(r80_7ff_tmp33, tmp67);
          r80_7ff_tmp35 = simd_and(r80_7ff_tmp15, bytetest_a3_a3);
          struct_Ll.cc = simd_or(r80_7ff_tmp35, struct_Ll.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp78);
          bytetest_a5_a5 = simd_and(r80_7ff_tmp33, tmp91);
          r80_7ff_tmp36 = simd_and(r80_7ff_tmp15, bytetest_a5_a5);
          struct_Ll.cc = simd_or(r80_7ff_tmp36, struct_Ll.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp78);
          bytetest_a7_a7 = simd_and(r80_7ff_tmp33, tmp104);
          r80_7ff_tmp37 = simd_and(r80_7ff_tmp15, bytetest_a7_a7);
          struct_Ll.cc = simd_or(r80_7ff_tmp37, struct_Ll.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp78);
          bytetest_a9_a9 = simd_and(r80_7ff_tmp33, tmp119);
          r80_7ff_tmp38 = simd_and(r80_7ff_tmp15, bytetest_a9_a9);
          struct_Ll.cc = simd_or(r80_7ff_tmp38, struct_Ll.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp78);
          bytetest_ab_ab = simd_and(r80_7ff_tmp33, tmp65);
          r80_7ff_tmp39 = simd_and(r80_7ff_tmp15, bytetest_ab_ab);
          struct_Ll.cc = simd_or(r80_7ff_tmp39, struct_Ll.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp78);
          bytetest_ad_ad = simd_and(r80_7ff_tmp33, tmp19);
          r80_7ff_tmp40 = simd_and(r80_7ff_tmp15, bytetest_ad_ad);
          struct_Ll.cc = simd_or(r80_7ff_tmp40, struct_Ll.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp78);
          bytetest_af_af = simd_and(r80_7ff_tmp33, tmp169);
          r80_7ff_tmp41 = simd_and(r80_7ff_tmp15, bytetest_af_af);
          struct_Ll.cc = simd_or(r80_7ff_tmp41, struct_Ll.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp78);
          bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp35);
          r80_7ff_tmp42 = simd_and(r80_7ff_tmp15, bytetest_b1_b1);
          struct_Ll.cc = simd_or(r80_7ff_tmp42, struct_Ll.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp78);
          bytetest_b3_b3 = simd_and(bytetest_b0_bf, tmp67);
          r80_7ff_tmp43 = simd_and(r80_7ff_tmp15, bytetest_b3_b3);
          struct_Ll.cc = simd_or(r80_7ff_tmp43, struct_Ll.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp78);
          bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp91);
          r80_7ff_tmp44 = simd_and(r80_7ff_tmp15, bytetest_b5_b5);
          struct_Ll.cc = simd_or(r80_7ff_tmp44, struct_Ll.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp78);
          r80_7ff_tmp45 = simd_not(tmp160);
          r80_7ff_tmp46 = simd_or(simd_and(basis_bits.bit_4, r80_7ff_tmp45), simd_andc(tmp150, basis_bits.bit_4));
          bytetest_b7_b8 = simd_and(bytetest_b0_bf, r80_7ff_tmp46);
          r80_7ff_tmp47 = simd_and(r80_7ff_tmp15, bytetest_b7_b8);
          struct_Ll.cc = simd_or(r80_7ff_tmp47, struct_Ll.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp78);
          bytetest_ba_ba = simd_and(bytetest_b0_bf, tmp125);
          r80_7ff_tmp48 = simd_and(r80_7ff_tmp15, bytetest_ba_ba);
          struct_Ll.cc = simd_or(r80_7ff_tmp48, struct_Ll.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp78);
          bytetest_bc_bc = simd_and(bytetest_b0_bf, tmp140);
          r80_7ff_tmp49 = simd_and(r80_7ff_tmp15, bytetest_bc_bc);
          struct_Ll.cc = simd_or(r80_7ff_tmp49, struct_Ll.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp78);
          bytetest_be_be = simd_and(bytetest_b0_bf, tmp159);
          r80_7ff_tmp50 = simd_and(r80_7ff_tmp15, bytetest_be_be);
          struct_Ll.cc = simd_or(r80_7ff_tmp50, struct_Ll.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp91);
          bytetest_80_80 = simd_andc(tmp69, tmp9);
          r80_7ff_tmp51 = simd_and(tmp27, bytetest_c5);
          carryQ.cq[22] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp51, carryQ.get_carry_in(22), r80_7ff_tmp52));
          r80_7ff_tmp53 = simd_and(r80_7ff_tmp52, bytetest_80_80);
          struct_Ll.cc = simd_or(r80_7ff_tmp53, struct_Ll.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp91);
          bytetest_82_82 = simd_and(tmp69, tmp53);
          r80_7ff_tmp54 = simd_and(r80_7ff_tmp52, bytetest_82_82);
          struct_Ll.cc = simd_or(r80_7ff_tmp54, struct_Ll.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp91);
          bytetest_84_84 = simd_and(tmp69, tmp78);
          r80_7ff_tmp55 = simd_and(r80_7ff_tmp52, bytetest_84_84);
          struct_Ll.cc = simd_or(r80_7ff_tmp55, struct_Ll.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp91);
          bytetest_86_86 = simd_and(tmp69, tmp99);
          r80_7ff_tmp56 = simd_and(r80_7ff_tmp52, bytetest_86_86);
          struct_Ll.cc = simd_or(r80_7ff_tmp56, struct_Ll.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp91);
          r80_7ff_tmp57 = simd_andc(tmp64, basis_bits.bit_6);
          bytetest_88_89 = simd_and(tmp69, r80_7ff_tmp57);
          r80_7ff_tmp58 = simd_and(r80_7ff_tmp52, bytetest_88_89);
          struct_Ll.cc = simd_or(r80_7ff_tmp58, struct_Ll.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp91);
          bytetest_8b_8b = simd_and(tmp69, tmp65);
          r80_7ff_tmp59 = simd_and(r80_7ff_tmp52, bytetest_8b_8b);
          struct_Ll.cc = simd_or(r80_7ff_tmp59, struct_Ll.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp91);
          bytetest_8d_8d = simd_and(tmp69, tmp19);
          r80_7ff_tmp60 = simd_and(r80_7ff_tmp52, bytetest_8d_8d);
          struct_Ll.cc = simd_or(r80_7ff_tmp60, struct_Ll.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp91);
          bytetest_8f_8f = simd_and(tmp69, tmp169);
          r80_7ff_tmp61 = simd_and(r80_7ff_tmp52, bytetest_8f_8f);
          struct_Ll.cc = simd_or(r80_7ff_tmp61, struct_Ll.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp91);
          bytetest_91_91 = simd_and(tmp16, tmp35);
          r80_7ff_tmp62 = simd_and(r80_7ff_tmp52, bytetest_91_91);
          struct_Ll.cc = simd_or(r80_7ff_tmp62, struct_Ll.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp91);
          bytetest_93_93 = simd_and(tmp16, tmp67);
          r80_7ff_tmp63 = simd_and(r80_7ff_tmp52, bytetest_93_93);
          struct_Ll.cc = simd_or(r80_7ff_tmp63, struct_Ll.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp91);
          bytetest_95_95 = simd_and(tmp16, tmp91);
          r80_7ff_tmp64 = simd_and(r80_7ff_tmp52, bytetest_95_95);
          struct_Ll.cc = simd_or(r80_7ff_tmp64, struct_Ll.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp91);
          bytetest_97_97 = simd_and(tmp16, tmp104);
          r80_7ff_tmp65 = simd_and(r80_7ff_tmp52, bytetest_97_97);
          struct_Ll.cc = simd_or(r80_7ff_tmp65, struct_Ll.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp91);
          bytetest_99_99 = simd_and(tmp16, tmp119);
          r80_7ff_tmp66 = simd_and(r80_7ff_tmp52, bytetest_99_99);
          struct_Ll.cc = simd_or(r80_7ff_tmp66, struct_Ll.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp91);
          bytetest_9b_9b = simd_and(tmp16, tmp65);
          r80_7ff_tmp67 = simd_and(r80_7ff_tmp52, bytetest_9b_9b);
          struct_Ll.cc = simd_or(r80_7ff_tmp67, struct_Ll.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp91);
          bytetest_9d_9d = simd_and(tmp16, tmp19);
          r80_7ff_tmp68 = simd_and(r80_7ff_tmp52, bytetest_9d_9d);
          struct_Ll.cc = simd_or(r80_7ff_tmp68, struct_Ll.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp91);
          bytetest_9f_9f = simd_and(tmp16, tmp169);
          r80_7ff_tmp69 = simd_and(r80_7ff_tmp52, bytetest_9f_9f);
          struct_Ll.cc = simd_or(r80_7ff_tmp69, struct_Ll.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp91);
          bytetest_a1_a1 = simd_and(r80_7ff_tmp33, tmp35);
          r80_7ff_tmp70 = simd_and(r80_7ff_tmp52, bytetest_a1_a1);
          struct_Ll.cc = simd_or(r80_7ff_tmp70, struct_Ll.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp91);
          bytetest_a3_a3 = simd_and(r80_7ff_tmp33, tmp67);
          r80_7ff_tmp71 = simd_and(r80_7ff_tmp52, bytetest_a3_a3);
          struct_Ll.cc = simd_or(r80_7ff_tmp71, struct_Ll.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp91);
          bytetest_a5_a5 = simd_and(r80_7ff_tmp33, tmp91);
          r80_7ff_tmp72 = simd_and(r80_7ff_tmp52, bytetest_a5_a5);
          struct_Ll.cc = simd_or(r80_7ff_tmp72, struct_Ll.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp91);
          bytetest_a7_a7 = simd_and(r80_7ff_tmp33, tmp104);
          r80_7ff_tmp73 = simd_and(r80_7ff_tmp52, bytetest_a7_a7);
          struct_Ll.cc = simd_or(r80_7ff_tmp73, struct_Ll.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp91);
          bytetest_a9_a9 = simd_and(r80_7ff_tmp33, tmp119);
          r80_7ff_tmp74 = simd_and(r80_7ff_tmp52, bytetest_a9_a9);
          struct_Ll.cc = simd_or(r80_7ff_tmp74, struct_Ll.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp91);
          bytetest_ab_ab = simd_and(r80_7ff_tmp33, tmp65);
          r80_7ff_tmp75 = simd_and(r80_7ff_tmp52, bytetest_ab_ab);
          struct_Ll.cc = simd_or(r80_7ff_tmp75, struct_Ll.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp91);
          bytetest_ad_ad = simd_and(r80_7ff_tmp33, tmp19);
          r80_7ff_tmp76 = simd_and(r80_7ff_tmp52, bytetest_ad_ad);
          struct_Ll.cc = simd_or(r80_7ff_tmp76, struct_Ll.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp91);
          bytetest_af_af = simd_and(r80_7ff_tmp33, tmp169);
          r80_7ff_tmp77 = simd_and(r80_7ff_tmp52, bytetest_af_af);
          struct_Ll.cc = simd_or(r80_7ff_tmp77, struct_Ll.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp91);
          bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp35);
          r80_7ff_tmp78 = simd_and(r80_7ff_tmp52, bytetest_b1_b1);
          struct_Ll.cc = simd_or(r80_7ff_tmp78, struct_Ll.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp91);
          bytetest_b3_b3 = simd_and(bytetest_b0_bf, tmp67);
          r80_7ff_tmp79 = simd_and(r80_7ff_tmp52, bytetest_b3_b3);
          struct_Ll.cc = simd_or(r80_7ff_tmp79, struct_Ll.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp91);
          bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp91);
          r80_7ff_tmp80 = simd_and(r80_7ff_tmp52, bytetest_b5_b5);
          struct_Ll.cc = simd_or(r80_7ff_tmp80, struct_Ll.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp91);
          bytetest_b7_b7 = simd_and(bytetest_b0_bf, tmp104);
          r80_7ff_tmp81 = simd_and(r80_7ff_tmp52, bytetest_b7_b7);
          struct_Ll.cc = simd_or(r80_7ff_tmp81, struct_Ll.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp91);
          bytetest_ba_ba = simd_and(bytetest_b0_bf, tmp125);
          r80_7ff_tmp82 = simd_and(r80_7ff_tmp52, bytetest_ba_ba);
          struct_Ll.cc = simd_or(r80_7ff_tmp82, struct_Ll.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp91);
          bytetest_bc_bc = simd_and(bytetest_b0_bf, tmp140);
          r80_7ff_tmp83 = simd_and(r80_7ff_tmp52, bytetest_bc_bc);
          struct_Ll.cc = simd_or(r80_7ff_tmp83, struct_Ll.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp99);
          bytetest_80_80 = simd_andc(tmp69, tmp9);
          r80_7ff_tmp84 = simd_and(tmp27, bytetest_c6);
          carryQ.cq[23] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp84, carryQ.get_carry_in(23), r80_7ff_tmp85));
          r80_7ff_tmp86 = simd_and(r80_7ff_tmp85, bytetest_80_80);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp91);
          bytetest_be_bf = simd_and(bytetest_b0_bf, tmp40);
          r80_7ff_tmp87 = simd_and(r80_7ff_tmp52, bytetest_be_bf);
          r80_7ff_tmp88 = simd_or(r80_7ff_tmp87, r80_7ff_tmp86);
          struct_Ll.cc = simd_or(r80_7ff_tmp88, struct_Ll.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp99);
          bytetest_83_83 = simd_and(tmp69, tmp67);
          r80_7ff_tmp89 = simd_and(r80_7ff_tmp85, bytetest_83_83);
          struct_Ll.cc = simd_or(r80_7ff_tmp89, struct_Ll.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp99);
          bytetest_85_85 = simd_and(tmp69, tmp91);
          r80_7ff_tmp90 = simd_and(r80_7ff_tmp85, bytetest_85_85);
          struct_Ll.cc = simd_or(r80_7ff_tmp90, struct_Ll.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp99);
          bytetest_88_88 = simd_and(tmp69, tmp111);
          r80_7ff_tmp91 = simd_and(r80_7ff_tmp85, bytetest_88_88);
          struct_Ll.cc = simd_or(r80_7ff_tmp91, struct_Ll.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp99);
          r80_7ff_tmp92 = simd_andc(tmp17, basis_bits.bit_6);
          bytetest_8c_8d = simd_and(tmp69, r80_7ff_tmp92);
          r80_7ff_tmp93 = simd_and(r80_7ff_tmp85, bytetest_8c_8d);
          struct_Ll.cc = simd_or(r80_7ff_tmp93, struct_Ll.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp99);
          bytetest_92_92 = simd_and(tmp16, tmp53);
          r80_7ff_tmp94 = simd_and(r80_7ff_tmp85, bytetest_92_92);
          struct_Ll.cc = simd_or(r80_7ff_tmp94, struct_Ll.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp99);
          bytetest_95_95 = simd_and(tmp16, tmp91);
          r80_7ff_tmp95 = simd_and(r80_7ff_tmp85, bytetest_95_95);
          struct_Ll.cc = simd_or(r80_7ff_tmp95, struct_Ll.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp99);
          r80_7ff_tmp96 = simd_and(tmp16, tmp64);
          bytetest_99_9b = simd_and(r80_7ff_tmp96, tmp8);
          r80_7ff_tmp97 = simd_and(r80_7ff_tmp85, bytetest_99_9b);
          struct_Ll.cc = simd_or(r80_7ff_tmp97, struct_Ll.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp99);
          bytetest_9e_9e = simd_and(tmp16, tmp159);
          r80_7ff_tmp98 = simd_and(r80_7ff_tmp85, bytetest_9e_9e);
          struct_Ll.cc = simd_or(r80_7ff_tmp98, struct_Ll.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp99);
          bytetest_a1_a1 = simd_and(r80_7ff_tmp33, tmp35);
          r80_7ff_tmp99 = simd_and(r80_7ff_tmp85, bytetest_a1_a1);
          struct_Ll.cc = simd_or(r80_7ff_tmp99, struct_Ll.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp99);
          bytetest_a3_a3 = simd_and(r80_7ff_tmp33, tmp67);
          r80_7ff_tmp100 = simd_and(r80_7ff_tmp85, bytetest_a3_a3);
          struct_Ll.cc = simd_or(r80_7ff_tmp100, struct_Ll.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp99);
          bytetest_a5_a5 = simd_and(r80_7ff_tmp33, tmp91);
          r80_7ff_tmp101 = simd_and(r80_7ff_tmp85, bytetest_a5_a5);
          struct_Ll.cc = simd_or(r80_7ff_tmp101, struct_Ll.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp99);
          bytetest_a8_a8 = simd_and(r80_7ff_tmp33, tmp111);
          r80_7ff_tmp102 = simd_and(r80_7ff_tmp85, bytetest_a8_a8);
          struct_Ll.cc = simd_or(r80_7ff_tmp102, struct_Ll.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp99);
          r80_7ff_tmp103 = simd_and(tmp64, basis_bits.bit_6);
          bytetest_aa_ab = simd_and(r80_7ff_tmp33, r80_7ff_tmp103);
          r80_7ff_tmp104 = simd_and(r80_7ff_tmp85, bytetest_aa_ab);
          struct_Ll.cc = simd_or(r80_7ff_tmp104, struct_Ll.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp99);
          bytetest_ad_ad = simd_and(r80_7ff_tmp33, tmp19);
          r80_7ff_tmp105 = simd_and(r80_7ff_tmp85, bytetest_ad_ad);
          struct_Ll.cc = simd_or(r80_7ff_tmp105, struct_Ll.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp99);
          bytetest_b0_b0 = simd_andc(bytetest_b0_bf, tmp9);
          r80_7ff_tmp106 = simd_and(r80_7ff_tmp85, bytetest_b0_b0);
          struct_Ll.cc = simd_or(r80_7ff_tmp106, struct_Ll.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp99);
          bytetest_b4_b4 = simd_and(bytetest_b0_bf, tmp78);
          r80_7ff_tmp107 = simd_and(r80_7ff_tmp85, bytetest_b4_b4);
          struct_Ll.cc = simd_or(r80_7ff_tmp107, struct_Ll.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp99);
          bytetest_b6_b6 = simd_and(bytetest_b0_bf, tmp99);
          r80_7ff_tmp108 = simd_and(r80_7ff_tmp85, bytetest_b6_b6);
          struct_Ll.cc = simd_or(r80_7ff_tmp108, struct_Ll.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp99);
          r80_7ff_tmp109 = simd_and(bytetest_b0_bf, tmp64);
          r80_7ff_tmp110 = simd_not(basis_bits.bit_7);
          r80_7ff_tmp111 = simd_or(simd_and(basis_bits.bit_6, r80_7ff_tmp110), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
          bytetest_b9_ba = simd_and(r80_7ff_tmp109, r80_7ff_tmp111);
          r80_7ff_tmp112 = simd_and(r80_7ff_tmp85, bytetest_b9_ba);
          struct_Ll.cc = simd_or(r80_7ff_tmp112, struct_Ll.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp99);
          r80_7ff_tmp113 = simd_and(bytetest_b0_bf, tmp17);
          bytetest_bd_bf = simd_and(r80_7ff_tmp113, tmp8);
          r80_7ff_tmp114 = simd_and(r80_7ff_tmp85, bytetest_bd_bf);
          struct_Ll.cc = simd_or(r80_7ff_tmp114, struct_Ll.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp104);
          bytetest_86_86 = simd_and(tmp69, tmp99);
          r80_7ff_tmp115 = simd_and(tmp27, bytetest_c7);
          carryQ.cq[24] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp115, carryQ.get_carry_in(24), r80_7ff_tmp116));
          r80_7ff_tmp117 = simd_and(r80_7ff_tmp116, bytetest_86_86);
          struct_Ll.cc = simd_or(r80_7ff_tmp117, struct_Ll.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp104);
          bytetest_89_89 = simd_and(tmp69, tmp119);
          r80_7ff_tmp118 = simd_and(r80_7ff_tmp116, bytetest_89_89);
          struct_Ll.cc = simd_or(r80_7ff_tmp118, struct_Ll.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp104);
          bytetest_8c_8c = simd_and(tmp69, tmp140);
          r80_7ff_tmp119 = simd_and(r80_7ff_tmp116, bytetest_8c_8c);
          struct_Ll.cc = simd_or(r80_7ff_tmp119, struct_Ll.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp104);
          bytetest_8e_8e = simd_and(tmp69, tmp159);
          r80_7ff_tmp120 = simd_and(r80_7ff_tmp116, bytetest_8e_8e);
          struct_Ll.cc = simd_or(r80_7ff_tmp120, struct_Ll.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp104);
          bytetest_90_90 = simd_andc(tmp16, tmp9);
          r80_7ff_tmp121 = simd_and(r80_7ff_tmp116, bytetest_90_90);
          struct_Ll.cc = simd_or(r80_7ff_tmp121, struct_Ll.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp104);
          bytetest_92_92 = simd_and(tmp16, tmp53);
          r80_7ff_tmp122 = simd_and(r80_7ff_tmp116, bytetest_92_92);
          struct_Ll.cc = simd_or(r80_7ff_tmp122, struct_Ll.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp104);
          bytetest_94_94 = simd_and(tmp16, tmp78);
          r80_7ff_tmp123 = simd_and(r80_7ff_tmp116, bytetest_94_94);
          struct_Ll.cc = simd_or(r80_7ff_tmp123, struct_Ll.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp104);
          bytetest_96_96 = simd_and(tmp16, tmp99);
          r80_7ff_tmp124 = simd_and(r80_7ff_tmp116, bytetest_96_96);
          struct_Ll.cc = simd_or(r80_7ff_tmp124, struct_Ll.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp104);
          bytetest_98_98 = simd_and(tmp16, tmp111);
          r80_7ff_tmp125 = simd_and(r80_7ff_tmp116, bytetest_98_98);
          struct_Ll.cc = simd_or(r80_7ff_tmp125, struct_Ll.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp104);
          bytetest_9a_9a = simd_and(tmp16, tmp125);
          r80_7ff_tmp126 = simd_and(r80_7ff_tmp116, bytetest_9a_9a);
          struct_Ll.cc = simd_or(r80_7ff_tmp126, struct_Ll.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp104);
          bytetest_9c_9d = simd_and(tmp16, r80_7ff_tmp92);
          r80_7ff_tmp127 = simd_and(r80_7ff_tmp116, bytetest_9c_9d);
          struct_Ll.cc = simd_or(r80_7ff_tmp127, struct_Ll.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp104);
          bytetest_9f_9f = simd_and(tmp16, tmp169);
          r80_7ff_tmp128 = simd_and(r80_7ff_tmp116, bytetest_9f_9f);
          struct_Ll.cc = simd_or(r80_7ff_tmp128, struct_Ll.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp104);
          bytetest_a1_a1 = simd_and(r80_7ff_tmp33, tmp35);
          r80_7ff_tmp129 = simd_and(r80_7ff_tmp116, bytetest_a1_a1);
          struct_Ll.cc = simd_or(r80_7ff_tmp129, struct_Ll.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp104);
          bytetest_a3_a3 = simd_and(r80_7ff_tmp33, tmp67);
          r80_7ff_tmp130 = simd_and(r80_7ff_tmp116, bytetest_a3_a3);
          struct_Ll.cc = simd_or(r80_7ff_tmp130, struct_Ll.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp104);
          bytetest_a5_a5 = simd_and(r80_7ff_tmp33, tmp91);
          r80_7ff_tmp131 = simd_and(r80_7ff_tmp116, bytetest_a5_a5);
          struct_Ll.cc = simd_or(r80_7ff_tmp131, struct_Ll.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp104);
          bytetest_a7_a7 = simd_and(r80_7ff_tmp33, tmp104);
          r80_7ff_tmp132 = simd_and(r80_7ff_tmp116, bytetest_a7_a7);
          struct_Ll.cc = simd_or(r80_7ff_tmp132, struct_Ll.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp104);
          bytetest_a9_a9 = simd_and(r80_7ff_tmp33, tmp119);
          r80_7ff_tmp133 = simd_and(r80_7ff_tmp116, bytetest_a9_a9);
          struct_Ll.cc = simd_or(r80_7ff_tmp133, struct_Ll.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp104);
          bytetest_ab_ab = simd_and(r80_7ff_tmp33, tmp65);
          r80_7ff_tmp134 = simd_and(r80_7ff_tmp116, bytetest_ab_ab);
          struct_Ll.cc = simd_or(r80_7ff_tmp134, struct_Ll.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp104);
          bytetest_ad_ad = simd_and(r80_7ff_tmp33, tmp19);
          r80_7ff_tmp135 = simd_and(r80_7ff_tmp116, bytetest_ad_ad);
          struct_Ll.cc = simd_or(r80_7ff_tmp135, struct_Ll.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp104);
          r80_7ff_tmp136 = simd_not(tmp9);
          r80_7ff_tmp137 = simd_or(simd_and(basis_bits.bit_3, r80_7ff_tmp136), simd_andc(tmp169, basis_bits.bit_3));
          bytetest_af_b0 = simd_and(tmp82, r80_7ff_tmp137);
          r80_7ff_tmp138 = simd_and(r80_7ff_tmp116, bytetest_af_b0);
          struct_Ll.cc = simd_or(r80_7ff_tmp138, struct_Ll.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp104);
          bytetest_b3_b3 = simd_and(bytetest_b0_bf, tmp67);
          r80_7ff_tmp139 = simd_and(r80_7ff_tmp116, bytetest_b3_b3);
          struct_Ll.cc = simd_or(r80_7ff_tmp139, struct_Ll.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp104);
          bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp91);
          r80_7ff_tmp140 = simd_and(r80_7ff_tmp116, bytetest_b5_b5);
          struct_Ll.cc = simd_or(r80_7ff_tmp140, struct_Ll.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp104);
          bytetest_b9_b9 = simd_and(bytetest_b0_bf, tmp119);
          r80_7ff_tmp141 = simd_and(r80_7ff_tmp116, bytetest_b9_b9);
          struct_Ll.cc = simd_or(r80_7ff_tmp141, struct_Ll.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp104);
          bytetest_bb_bb = simd_and(bytetest_b0_bf, tmp65);
          r80_7ff_tmp142 = simd_and(r80_7ff_tmp116, bytetest_bb_bb);
          struct_Ll.cc = simd_or(r80_7ff_tmp142, struct_Ll.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp104);
          bytetest_bd_bd = simd_and(bytetest_b0_bf, tmp19);
          r80_7ff_tmp143 = simd_and(r80_7ff_tmp116, bytetest_bd_bd);
          struct_Ll.cc = simd_or(r80_7ff_tmp143, struct_Ll.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp104);
          bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp169);
          r80_7ff_tmp144 = simd_and(r80_7ff_tmp116, bytetest_bf_bf);
          struct_Ll.cc = simd_or(r80_7ff_tmp144, struct_Ll.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_81_81 = simd_and(tmp69, tmp35);
          r80_7ff_tmp145 = simd_and(tmp27, bytetest_c8);
          carryQ.cq[25] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp145, carryQ.get_carry_in(25), r80_7ff_tmp146));
          r80_7ff_tmp147 = simd_and(r80_7ff_tmp146, bytetest_81_81);
          struct_Ll.cc = simd_or(r80_7ff_tmp147, struct_Ll.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_83_83 = simd_and(tmp69, tmp67);
          r80_7ff_tmp148 = simd_and(r80_7ff_tmp146, bytetest_83_83);
          struct_Ll.cc = simd_or(r80_7ff_tmp148, struct_Ll.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_85_85 = simd_and(tmp69, tmp91);
          r80_7ff_tmp149 = simd_and(r80_7ff_tmp146, bytetest_85_85);
          struct_Ll.cc = simd_or(r80_7ff_tmp149, struct_Ll.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_87_87 = simd_and(tmp69, tmp104);
          r80_7ff_tmp150 = simd_and(r80_7ff_tmp146, bytetest_87_87);
          struct_Ll.cc = simd_or(r80_7ff_tmp150, struct_Ll.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_89_89 = simd_and(tmp69, tmp119);
          r80_7ff_tmp151 = simd_and(r80_7ff_tmp146, bytetest_89_89);
          struct_Ll.cc = simd_or(r80_7ff_tmp151, struct_Ll.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_8b_8b = simd_and(tmp69, tmp65);
          r80_7ff_tmp152 = simd_and(r80_7ff_tmp146, bytetest_8b_8b);
          struct_Ll.cc = simd_or(r80_7ff_tmp152, struct_Ll.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_8d_8d = simd_and(tmp69, tmp19);
          r80_7ff_tmp153 = simd_and(r80_7ff_tmp146, bytetest_8d_8d);
          struct_Ll.cc = simd_or(r80_7ff_tmp153, struct_Ll.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_8f_8f = simd_and(tmp69, tmp169);
          r80_7ff_tmp154 = simd_and(r80_7ff_tmp146, bytetest_8f_8f);
          struct_Ll.cc = simd_or(r80_7ff_tmp154, struct_Ll.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_91_91 = simd_and(tmp16, tmp35);
          r80_7ff_tmp155 = simd_and(r80_7ff_tmp146, bytetest_91_91);
          struct_Ll.cc = simd_or(r80_7ff_tmp155, struct_Ll.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_93_93 = simd_and(tmp16, tmp67);
          r80_7ff_tmp156 = simd_and(r80_7ff_tmp146, bytetest_93_93);
          struct_Ll.cc = simd_or(r80_7ff_tmp156, struct_Ll.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_95_95 = simd_and(tmp16, tmp91);
          r80_7ff_tmp157 = simd_and(r80_7ff_tmp146, bytetest_95_95);
          struct_Ll.cc = simd_or(r80_7ff_tmp157, struct_Ll.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_97_97 = simd_and(tmp16, tmp104);
          r80_7ff_tmp158 = simd_and(r80_7ff_tmp146, bytetest_97_97);
          struct_Ll.cc = simd_or(r80_7ff_tmp158, struct_Ll.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_99_99 = simd_and(tmp16, tmp119);
          r80_7ff_tmp159 = simd_and(r80_7ff_tmp146, bytetest_99_99);
          struct_Ll.cc = simd_or(r80_7ff_tmp159, struct_Ll.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_9b_9b = simd_and(tmp16, tmp65);
          r80_7ff_tmp160 = simd_and(r80_7ff_tmp146, bytetest_9b_9b);
          struct_Ll.cc = simd_or(r80_7ff_tmp160, struct_Ll.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_9d_9d = simd_and(tmp16, tmp19);
          r80_7ff_tmp161 = simd_and(r80_7ff_tmp146, bytetest_9d_9d);
          struct_Ll.cc = simd_or(r80_7ff_tmp161, struct_Ll.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_9f_9f = simd_and(tmp16, tmp169);
          r80_7ff_tmp162 = simd_and(r80_7ff_tmp146, bytetest_9f_9f);
          struct_Ll.cc = simd_or(r80_7ff_tmp162, struct_Ll.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_a1_a1 = simd_and(r80_7ff_tmp33, tmp35);
          r80_7ff_tmp163 = simd_and(r80_7ff_tmp146, bytetest_a1_a1);
          struct_Ll.cc = simd_or(r80_7ff_tmp163, struct_Ll.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_a3_a3 = simd_and(r80_7ff_tmp33, tmp67);
          r80_7ff_tmp164 = simd_and(r80_7ff_tmp146, bytetest_a3_a3);
          struct_Ll.cc = simd_or(r80_7ff_tmp164, struct_Ll.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_a5_a5 = simd_and(r80_7ff_tmp33, tmp91);
          r80_7ff_tmp165 = simd_and(r80_7ff_tmp146, bytetest_a5_a5);
          struct_Ll.cc = simd_or(r80_7ff_tmp165, struct_Ll.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_a7_a7 = simd_and(r80_7ff_tmp33, tmp104);
          r80_7ff_tmp166 = simd_and(r80_7ff_tmp146, bytetest_a7_a7);
          struct_Ll.cc = simd_or(r80_7ff_tmp166, struct_Ll.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_a9_a9 = simd_and(r80_7ff_tmp33, tmp119);
          r80_7ff_tmp167 = simd_and(r80_7ff_tmp146, bytetest_a9_a9);
          struct_Ll.cc = simd_or(r80_7ff_tmp167, struct_Ll.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_ab_ab = simd_and(r80_7ff_tmp33, tmp65);
          r80_7ff_tmp168 = simd_and(r80_7ff_tmp146, bytetest_ab_ab);
          struct_Ll.cc = simd_or(r80_7ff_tmp168, struct_Ll.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_ad_ad = simd_and(r80_7ff_tmp33, tmp19);
          r80_7ff_tmp169 = simd_and(r80_7ff_tmp146, bytetest_ad_ad);
          struct_Ll.cc = simd_or(r80_7ff_tmp169, struct_Ll.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_af_af = simd_and(r80_7ff_tmp33, tmp169);
          r80_7ff_tmp170 = simd_and(r80_7ff_tmp146, bytetest_af_af);
          struct_Ll.cc = simd_or(r80_7ff_tmp170, struct_Ll.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp35);
          r80_7ff_tmp171 = simd_and(r80_7ff_tmp146, bytetest_b1_b1);
          struct_Ll.cc = simd_or(r80_7ff_tmp171, struct_Ll.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp111);
          r80_7ff_tmp172 = simd_or(simd_and(basis_bits.bit_4, tmp61), simd_andc(tmp4, basis_bits.bit_4));
          bytetest_b3_b9 = simd_and(bytetest_b0_bf, r80_7ff_tmp172);
          r80_7ff_tmp173 = simd_and(r80_7ff_tmp146, bytetest_b3_b9);
          struct_Ll.cc = simd_or(r80_7ff_tmp173, struct_Ll.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_bc_bc = simd_and(bytetest_b0_bf, tmp140);
          r80_7ff_tmp174 = simd_and(r80_7ff_tmp146, bytetest_bc_bc);
          struct_Ll.cc = simd_or(r80_7ff_tmp174, struct_Ll.cc);
          bytetest_c9 = simd_and(r80_7ff_tmp1, tmp119);
          bytetest_80_80 = simd_andc(tmp69, tmp9);
          r80_7ff_tmp175 = simd_and(tmp27, bytetest_c9);
          carryQ.cq[26] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp175, carryQ.get_carry_in(26), r80_7ff_tmp176));
          r80_7ff_tmp177 = simd_and(r80_7ff_tmp176, bytetest_80_80);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp169);
          r80_7ff_tmp178 = simd_and(r80_7ff_tmp146, bytetest_bf_bf);
          r80_7ff_tmp179 = simd_or(r80_7ff_tmp178, r80_7ff_tmp177);
          struct_Ll.cc = simd_or(r80_7ff_tmp179, struct_Ll.cc);
          bytetest_c9 = simd_and(r80_7ff_tmp1, tmp119);
          bytetest_82_82 = simd_and(tmp69, tmp53);
          r80_7ff_tmp180 = simd_and(r80_7ff_tmp176, bytetest_82_82);
          struct_Ll.cc = simd_or(r80_7ff_tmp180, struct_Ll.cc);
          bytetest_c9 = simd_and(r80_7ff_tmp1, tmp119);
          bytetest_87_87 = simd_and(tmp69, tmp104);
          r80_7ff_tmp181 = simd_and(r80_7ff_tmp176, bytetest_87_87);
          struct_Ll.cc = simd_or(r80_7ff_tmp181, struct_Ll.cc);
          bytetest_c9 = simd_and(r80_7ff_tmp1, tmp119);
          bytetest_89_89 = simd_and(tmp69, tmp119);
          r80_7ff_tmp182 = simd_and(r80_7ff_tmp176, bytetest_89_89);
          struct_Ll.cc = simd_or(r80_7ff_tmp182, struct_Ll.cc);
          bytetest_c9 = simd_and(r80_7ff_tmp1, tmp119);
          bytetest_8b_8b = simd_and(tmp69, tmp65);
          r80_7ff_tmp183 = simd_and(r80_7ff_tmp176, bytetest_8b_8b);
          struct_Ll.cc = simd_or(r80_7ff_tmp183, struct_Ll.cc);
          bytetest_c9 = simd_and(r80_7ff_tmp1, tmp119);
          bytetest_8d_8d = simd_and(tmp69, tmp19);
          r80_7ff_tmp184 = simd_and(r80_7ff_tmp176, bytetest_8d_8d);
          struct_Ll.cc = simd_or(r80_7ff_tmp184, struct_Ll.cc);
          bytetest_ca = simd_and(r80_7ff_tmp1, tmp125);
          bytetest_80_93 = simd_andc(tmp36, tmp20);
          r80_7ff_tmp185 = simd_and(tmp27, bytetest_ca);
          carryQ.cq[27] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp185, carryQ.get_carry_in(27), r80_7ff_tmp186));
          r80_7ff_tmp187 = simd_and(r80_7ff_tmp186, bytetest_80_93);
          bytetest_c9 = simd_and(r80_7ff_tmp1, tmp119);
          r80_7ff_tmp188 = simd_or(basis_bits.bit_3, tmp169);
          r80_7ff_tmp189 = simd_or(basis_bits.bit_2, r80_7ff_tmp188);
          bytetest_8f_bf = simd_and(tmp14, r80_7ff_tmp189);
          r80_7ff_tmp190 = simd_and(r80_7ff_tmp176, bytetest_8f_bf);
          r80_7ff_tmp191 = simd_or(r80_7ff_tmp190, r80_7ff_tmp187);
          struct_Ll.cc = simd_or(r80_7ff_tmp191, struct_Ll.cc);
          bytetest_ca = simd_and(r80_7ff_tmp1, tmp125);
          r80_7ff_tmp192 = simd_or(simd_and(basis_bits.bit_2, tmp120), simd_andc(tmp141, basis_bits.bit_2));
          bytetest_95_af = simd_and(tmp14, r80_7ff_tmp192);
          r80_7ff_tmp193 = simd_and(r80_7ff_tmp186, bytetest_95_af);
          struct_Ll.cc = simd_or(r80_7ff_tmp193, struct_Ll.cc);
          bytetest_cd = simd_and(r80_7ff_tmp1, tmp19);
          bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp35);
          r80_7ff_tmp194 = simd_and(tmp27, bytetest_cd);
          carryQ.cq[28] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp194, carryQ.get_carry_in(28), r80_7ff_tmp195));
          r80_7ff_tmp196 = simd_and(r80_7ff_tmp195, bytetest_b1_b1);
          struct_Ll.cc = simd_or(r80_7ff_tmp196, struct_Ll.cc);
          bytetest_cd = simd_and(r80_7ff_tmp1, tmp19);
          bytetest_b3_b3 = simd_and(bytetest_b0_bf, tmp67);
          r80_7ff_tmp197 = simd_and(r80_7ff_tmp195, bytetest_b3_b3);
          struct_Ll.cc = simd_or(r80_7ff_tmp197, struct_Ll.cc);
          bytetest_cd = simd_and(r80_7ff_tmp1, tmp19);
          bytetest_b7_b7 = simd_and(bytetest_b0_bf, tmp104);
          r80_7ff_tmp198 = simd_and(r80_7ff_tmp195, bytetest_b7_b7);
          struct_Ll.cc = simd_or(r80_7ff_tmp198, struct_Ll.cc);
          bytetest_cd = simd_and(r80_7ff_tmp1, tmp19);
          r80_7ff_tmp199 = simd_not(basis_bits.bit_6);
          r80_7ff_tmp200 = simd_or(simd_and(basis_bits.bit_5, r80_7ff_tmp199), simd_andc(tmp3, basis_bits.bit_5));
          bytetest_bb_bd = simd_and(bytetest_b8_bf, r80_7ff_tmp200);
          r80_7ff_tmp201 = simd_and(r80_7ff_tmp195, bytetest_bb_bd);
          struct_Ll.cc = simd_or(r80_7ff_tmp201, struct_Ll.cc);
          bytetest_ce = simd_and(r80_7ff_tmp1, tmp159);
          bytetest_90_90 = simd_andc(tmp16, tmp9);
          r80_7ff_tmp202 = simd_and(tmp27, bytetest_ce);
          carryQ.cq[29] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp202, carryQ.get_carry_in(29), r80_7ff_tmp203));
          r80_7ff_tmp204 = simd_and(r80_7ff_tmp203, bytetest_90_90);
          struct_Ll.cc = simd_or(r80_7ff_tmp204, struct_Ll.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp169);
          bytetest_80_8e = simd_andc(tmp69, tmp151);
          r80_7ff_tmp205 = simd_and(tmp27, bytetest_cf);
          carryQ.cq[30] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp205, carryQ.get_carry_in(30), r80_7ff_tmp206));
          r80_7ff_tmp207 = simd_and(r80_7ff_tmp206, bytetest_80_8e);
          bytetest_ce = simd_and(r80_7ff_tmp1, tmp159);
          bytetest_ac_bf = simd_and(tmp82, tmp92);
          r80_7ff_tmp208 = simd_and(r80_7ff_tmp203, bytetest_ac_bf);
          r80_7ff_tmp209 = simd_or(r80_7ff_tmp208, r80_7ff_tmp207);
          struct_Ll.cc = simd_or(r80_7ff_tmp209, struct_Ll.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp169);
          bytetest_90_91 = simd_andc(tmp16, tmp55);
          r80_7ff_tmp210 = simd_and(r80_7ff_tmp206, bytetest_90_91);
          struct_Ll.cc = simd_or(r80_7ff_tmp210, struct_Ll.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp169);
          r80_7ff_tmp211 = simd_and(tmp16, tmp77);
          bytetest_95_97 = simd_and(r80_7ff_tmp211, tmp8);
          r80_7ff_tmp212 = simd_and(r80_7ff_tmp206, bytetest_95_97);
          struct_Ll.cc = simd_or(r80_7ff_tmp212, struct_Ll.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp169);
          bytetest_99_99 = simd_and(tmp16, tmp119);
          r80_7ff_tmp213 = simd_and(r80_7ff_tmp206, bytetest_99_99);
          struct_Ll.cc = simd_or(r80_7ff_tmp213, struct_Ll.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp169);
          bytetest_9b_9b = simd_and(tmp16, tmp65);
          r80_7ff_tmp214 = simd_and(r80_7ff_tmp206, bytetest_9b_9b);
          struct_Ll.cc = simd_or(r80_7ff_tmp214, struct_Ll.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp169);
          bytetest_9d_9d = simd_and(tmp16, tmp19);
          r80_7ff_tmp215 = simd_and(r80_7ff_tmp206, bytetest_9d_9d);
          struct_Ll.cc = simd_or(r80_7ff_tmp215, struct_Ll.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp169);
          bytetest_9f_9f = simd_and(tmp16, tmp169);
          r80_7ff_tmp216 = simd_and(r80_7ff_tmp206, bytetest_9f_9f);
          struct_Ll.cc = simd_or(r80_7ff_tmp216, struct_Ll.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp169);
          bytetest_a1_a1 = simd_and(r80_7ff_tmp33, tmp35);
          r80_7ff_tmp217 = simd_and(r80_7ff_tmp206, bytetest_a1_a1);
          struct_Ll.cc = simd_or(r80_7ff_tmp217, struct_Ll.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp169);
          bytetest_a3_a3 = simd_and(r80_7ff_tmp33, tmp67);
          r80_7ff_tmp218 = simd_and(r80_7ff_tmp206, bytetest_a3_a3);
          struct_Ll.cc = simd_or(r80_7ff_tmp218, struct_Ll.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp169);
          bytetest_a5_a5 = simd_and(r80_7ff_tmp33, tmp91);
          r80_7ff_tmp219 = simd_and(r80_7ff_tmp206, bytetest_a5_a5);
          struct_Ll.cc = simd_or(r80_7ff_tmp219, struct_Ll.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp169);
          bytetest_a7_a7 = simd_and(r80_7ff_tmp33, tmp104);
          r80_7ff_tmp220 = simd_and(r80_7ff_tmp206, bytetest_a7_a7);
          struct_Ll.cc = simd_or(r80_7ff_tmp220, struct_Ll.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp169);
          bytetest_a9_a9 = simd_and(r80_7ff_tmp33, tmp119);
          r80_7ff_tmp221 = simd_and(r80_7ff_tmp206, bytetest_a9_a9);
          struct_Ll.cc = simd_or(r80_7ff_tmp221, struct_Ll.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp169);
          bytetest_ab_ab = simd_and(r80_7ff_tmp33, tmp65);
          r80_7ff_tmp222 = simd_and(r80_7ff_tmp206, bytetest_ab_ab);
          struct_Ll.cc = simd_or(r80_7ff_tmp222, struct_Ll.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp169);
          bytetest_ad_ad = simd_and(r80_7ff_tmp33, tmp19);
          r80_7ff_tmp223 = simd_and(r80_7ff_tmp206, bytetest_ad_ad);
          struct_Ll.cc = simd_or(r80_7ff_tmp223, struct_Ll.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp169);
          r80_7ff_tmp224 = simd_not(tmp7);
          r80_7ff_tmp225 = simd_or(simd_and(basis_bits.bit_3, r80_7ff_tmp224), simd_andc(tmp169, basis_bits.bit_3));
          bytetest_af_b3 = simd_and(tmp82, r80_7ff_tmp225);
          r80_7ff_tmp226 = simd_and(r80_7ff_tmp206, bytetest_af_b3);
          struct_Ll.cc = simd_or(r80_7ff_tmp226, struct_Ll.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp169);
          bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp91);
          r80_7ff_tmp227 = simd_and(r80_7ff_tmp206, bytetest_b5_b5);
          struct_Ll.cc = simd_or(r80_7ff_tmp227, struct_Ll.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp169);
          bytetest_b8_b8 = simd_and(bytetest_b0_bf, tmp111);
          r80_7ff_tmp228 = simd_and(r80_7ff_tmp206, bytetest_b8_b8);
          struct_Ll.cc = simd_or(r80_7ff_tmp228, struct_Ll.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp169);
          r80_7ff_tmp229 = simd_not(tmp8);
          r80_7ff_tmp230 = simd_or(simd_and(basis_bits.bit_5, r80_7ff_tmp229), simd_andc(tmp3, basis_bits.bit_5));
          bytetest_bb_bc = simd_and(bytetest_b8_bf, r80_7ff_tmp230);
          r80_7ff_tmp231 = simd_and(r80_7ff_tmp206, bytetest_bb_bc);
          struct_Ll.cc = simd_or(r80_7ff_tmp231, struct_Ll.cc);
          r80_7ff_tmp232 = simd_and(tmp11, tmp15);
          bytetest_d1 = simd_and(r80_7ff_tmp232, tmp35);
          bytetest_80_9f = simd_andc(tmp14, basis_bits.bit_2);
          r80_7ff_tmp233 = simd_and(tmp27, bytetest_d1);
          carryQ.cq[31] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp233, carryQ.get_carry_in(31), r80_7ff_tmp234));
          r80_7ff_tmp235 = simd_and(r80_7ff_tmp234, bytetest_80_9f);
          bytetest_d0 = simd_andc(r80_7ff_tmp232, tmp9);
          bytetest_b0_bf = simd_and(tmp14, tmp12);
          r80_7ff_tmp236 = simd_and(tmp27, bytetest_d0);
          carryQ.cq[32] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp236, carryQ.get_carry_in(32), r80_7ff_tmp237));
          r80_7ff_tmp238 = simd_and(r80_7ff_tmp237, bytetest_b0_bf);
          r80_7ff_tmp239 = simd_or(r80_7ff_tmp238, r80_7ff_tmp235);
          struct_Ll.cc = simd_or(r80_7ff_tmp239, struct_Ll.cc);
          bytetest_d1 = simd_and(r80_7ff_tmp232, tmp35);
          bytetest_a1_a1 = simd_and(r80_7ff_tmp33, tmp35);
          r80_7ff_tmp240 = simd_and(r80_7ff_tmp234, bytetest_a1_a1);
          struct_Ll.cc = simd_or(r80_7ff_tmp240, struct_Ll.cc);
          bytetest_d1 = simd_and(r80_7ff_tmp232, tmp35);
          bytetest_a3_a3 = simd_and(r80_7ff_tmp33, tmp67);
          r80_7ff_tmp241 = simd_and(r80_7ff_tmp234, bytetest_a3_a3);
          struct_Ll.cc = simd_or(r80_7ff_tmp241, struct_Ll.cc);
          bytetest_d1 = simd_and(r80_7ff_tmp232, tmp35);
          bytetest_a5_a5 = simd_and(r80_7ff_tmp33, tmp91);
          r80_7ff_tmp242 = simd_and(r80_7ff_tmp234, bytetest_a5_a5);
          struct_Ll.cc = simd_or(r80_7ff_tmp242, struct_Ll.cc);
          bytetest_d1 = simd_and(r80_7ff_tmp232, tmp35);
          bytetest_a7_a7 = simd_and(r80_7ff_tmp33, tmp104);
          r80_7ff_tmp243 = simd_and(r80_7ff_tmp234, bytetest_a7_a7);
          struct_Ll.cc = simd_or(r80_7ff_tmp243, struct_Ll.cc);
          bytetest_d1 = simd_and(r80_7ff_tmp232, tmp35);
          bytetest_a9_a9 = simd_and(r80_7ff_tmp33, tmp119);
          r80_7ff_tmp244 = simd_and(r80_7ff_tmp234, bytetest_a9_a9);
          struct_Ll.cc = simd_or(r80_7ff_tmp244, struct_Ll.cc);
          bytetest_d1 = simd_and(r80_7ff_tmp232, tmp35);
          bytetest_ab_ab = simd_and(r80_7ff_tmp33, tmp65);
          r80_7ff_tmp245 = simd_and(r80_7ff_tmp234, bytetest_ab_ab);
          struct_Ll.cc = simd_or(r80_7ff_tmp245, struct_Ll.cc);
          bytetest_d1 = simd_and(r80_7ff_tmp232, tmp35);
          bytetest_ad_ad = simd_and(r80_7ff_tmp33, tmp19);
          r80_7ff_tmp246 = simd_and(r80_7ff_tmp234, bytetest_ad_ad);
          struct_Ll.cc = simd_or(r80_7ff_tmp246, struct_Ll.cc);
          bytetest_d1 = simd_and(r80_7ff_tmp232, tmp35);
          bytetest_af_af = simd_and(r80_7ff_tmp33, tmp169);
          r80_7ff_tmp247 = simd_and(r80_7ff_tmp234, bytetest_af_af);
          struct_Ll.cc = simd_or(r80_7ff_tmp247, struct_Ll.cc);
          bytetest_d1 = simd_and(r80_7ff_tmp232, tmp35);
          bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp35);
          r80_7ff_tmp248 = simd_and(r80_7ff_tmp234, bytetest_b1_b1);
          struct_Ll.cc = simd_or(r80_7ff_tmp248, struct_Ll.cc);
          bytetest_d1 = simd_and(r80_7ff_tmp232, tmp35);
          bytetest_b3_b3 = simd_and(bytetest_b0_bf, tmp67);
          r80_7ff_tmp249 = simd_and(r80_7ff_tmp234, bytetest_b3_b3);
          struct_Ll.cc = simd_or(r80_7ff_tmp249, struct_Ll.cc);
          bytetest_d1 = simd_and(r80_7ff_tmp232, tmp35);
          bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp91);
          r80_7ff_tmp250 = simd_and(r80_7ff_tmp234, bytetest_b5_b5);
          struct_Ll.cc = simd_or(r80_7ff_tmp250, struct_Ll.cc);
          bytetest_d1 = simd_and(r80_7ff_tmp232, tmp35);
          bytetest_b7_b7 = simd_and(bytetest_b0_bf, tmp104);
          r80_7ff_tmp251 = simd_and(r80_7ff_tmp234, bytetest_b7_b7);
          struct_Ll.cc = simd_or(r80_7ff_tmp251, struct_Ll.cc);
          bytetest_d1 = simd_and(r80_7ff_tmp232, tmp35);
          bytetest_b9_b9 = simd_and(bytetest_b0_bf, tmp119);
          r80_7ff_tmp252 = simd_and(r80_7ff_tmp234, bytetest_b9_b9);
          struct_Ll.cc = simd_or(r80_7ff_tmp252, struct_Ll.cc);
          bytetest_d1 = simd_and(r80_7ff_tmp232, tmp35);
          bytetest_bb_bb = simd_and(bytetest_b0_bf, tmp65);
          r80_7ff_tmp253 = simd_and(r80_7ff_tmp234, bytetest_bb_bb);
          struct_Ll.cc = simd_or(r80_7ff_tmp253, struct_Ll.cc);
          bytetest_d1 = simd_and(r80_7ff_tmp232, tmp35);
          bytetest_bd_bd = simd_and(bytetest_b0_bf, tmp19);
          r80_7ff_tmp254 = simd_and(r80_7ff_tmp234, bytetest_bd_bd);
          struct_Ll.cc = simd_or(r80_7ff_tmp254, struct_Ll.cc);
          bytetest_d1 = simd_and(r80_7ff_tmp232, tmp35);
          bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp169);
          r80_7ff_tmp255 = simd_and(r80_7ff_tmp234, bytetest_bf_bf);
          struct_Ll.cc = simd_or(r80_7ff_tmp255, struct_Ll.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp232, tmp53);
          bytetest_81_81 = simd_and(tmp69, tmp35);
          r80_7ff_tmp256 = simd_and(tmp27, bytetest_d2);
          carryQ.cq[33] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp256, carryQ.get_carry_in(33), r80_7ff_tmp257));
          r80_7ff_tmp258 = simd_and(r80_7ff_tmp257, bytetest_81_81);
          struct_Ll.cc = simd_or(r80_7ff_tmp258, struct_Ll.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp232, tmp53);
          bytetest_8b_8b = simd_and(tmp69, tmp65);
          r80_7ff_tmp259 = simd_and(r80_7ff_tmp257, bytetest_8b_8b);
          struct_Ll.cc = simd_or(r80_7ff_tmp259, struct_Ll.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp232, tmp53);
          bytetest_8d_8d = simd_and(tmp69, tmp19);
          r80_7ff_tmp260 = simd_and(r80_7ff_tmp257, bytetest_8d_8d);
          struct_Ll.cc = simd_or(r80_7ff_tmp260, struct_Ll.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp232, tmp53);
          bytetest_8f_8f = simd_and(tmp69, tmp169);
          r80_7ff_tmp261 = simd_and(r80_7ff_tmp257, bytetest_8f_8f);
          struct_Ll.cc = simd_or(r80_7ff_tmp261, struct_Ll.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp232, tmp53);
          bytetest_91_91 = simd_and(tmp16, tmp35);
          r80_7ff_tmp262 = simd_and(r80_7ff_tmp257, bytetest_91_91);
          struct_Ll.cc = simd_or(r80_7ff_tmp262, struct_Ll.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp232, tmp53);
          bytetest_93_93 = simd_and(tmp16, tmp67);
          r80_7ff_tmp263 = simd_and(r80_7ff_tmp257, bytetest_93_93);
          struct_Ll.cc = simd_or(r80_7ff_tmp263, struct_Ll.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp232, tmp53);
          bytetest_95_95 = simd_and(tmp16, tmp91);
          r80_7ff_tmp264 = simd_and(r80_7ff_tmp257, bytetest_95_95);
          struct_Ll.cc = simd_or(r80_7ff_tmp264, struct_Ll.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp232, tmp53);
          bytetest_97_97 = simd_and(tmp16, tmp104);
          r80_7ff_tmp265 = simd_and(r80_7ff_tmp257, bytetest_97_97);
          struct_Ll.cc = simd_or(r80_7ff_tmp265, struct_Ll.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp232, tmp53);
          bytetest_99_99 = simd_and(tmp16, tmp119);
          r80_7ff_tmp266 = simd_and(r80_7ff_tmp257, bytetest_99_99);
          struct_Ll.cc = simd_or(r80_7ff_tmp266, struct_Ll.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp232, tmp53);
          bytetest_9b_9b = simd_and(tmp16, tmp65);
          r80_7ff_tmp267 = simd_and(r80_7ff_tmp257, bytetest_9b_9b);
          struct_Ll.cc = simd_or(r80_7ff_tmp267, struct_Ll.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp232, tmp53);
          bytetest_9d_9d = simd_and(tmp16, tmp19);
          r80_7ff_tmp268 = simd_and(r80_7ff_tmp257, bytetest_9d_9d);
          struct_Ll.cc = simd_or(r80_7ff_tmp268, struct_Ll.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp232, tmp53);
          bytetest_9f_9f = simd_and(tmp16, tmp169);
          r80_7ff_tmp269 = simd_and(r80_7ff_tmp257, bytetest_9f_9f);
          struct_Ll.cc = simd_or(r80_7ff_tmp269, struct_Ll.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp232, tmp53);
          bytetest_a1_a1 = simd_and(r80_7ff_tmp33, tmp35);
          r80_7ff_tmp270 = simd_and(r80_7ff_tmp257, bytetest_a1_a1);
          struct_Ll.cc = simd_or(r80_7ff_tmp270, struct_Ll.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp232, tmp53);
          bytetest_a3_a3 = simd_and(r80_7ff_tmp33, tmp67);
          r80_7ff_tmp271 = simd_and(r80_7ff_tmp257, bytetest_a3_a3);
          struct_Ll.cc = simd_or(r80_7ff_tmp271, struct_Ll.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp232, tmp53);
          bytetest_a5_a5 = simd_and(r80_7ff_tmp33, tmp91);
          r80_7ff_tmp272 = simd_and(r80_7ff_tmp257, bytetest_a5_a5);
          struct_Ll.cc = simd_or(r80_7ff_tmp272, struct_Ll.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp232, tmp53);
          bytetest_a7_a7 = simd_and(r80_7ff_tmp33, tmp104);
          r80_7ff_tmp273 = simd_and(r80_7ff_tmp257, bytetest_a7_a7);
          struct_Ll.cc = simd_or(r80_7ff_tmp273, struct_Ll.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp232, tmp53);
          bytetest_a9_a9 = simd_and(r80_7ff_tmp33, tmp119);
          r80_7ff_tmp274 = simd_and(r80_7ff_tmp257, bytetest_a9_a9);
          struct_Ll.cc = simd_or(r80_7ff_tmp274, struct_Ll.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp232, tmp53);
          bytetest_ab_ab = simd_and(r80_7ff_tmp33, tmp65);
          r80_7ff_tmp275 = simd_and(r80_7ff_tmp257, bytetest_ab_ab);
          struct_Ll.cc = simd_or(r80_7ff_tmp275, struct_Ll.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp232, tmp53);
          bytetest_ad_ad = simd_and(r80_7ff_tmp33, tmp19);
          r80_7ff_tmp276 = simd_and(r80_7ff_tmp257, bytetest_ad_ad);
          struct_Ll.cc = simd_or(r80_7ff_tmp276, struct_Ll.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp232, tmp53);
          bytetest_af_af = simd_and(r80_7ff_tmp33, tmp169);
          r80_7ff_tmp277 = simd_and(r80_7ff_tmp257, bytetest_af_af);
          struct_Ll.cc = simd_or(r80_7ff_tmp277, struct_Ll.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp232, tmp53);
          bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp35);
          r80_7ff_tmp278 = simd_and(r80_7ff_tmp257, bytetest_b1_b1);
          struct_Ll.cc = simd_or(r80_7ff_tmp278, struct_Ll.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp232, tmp53);
          bytetest_b3_b3 = simd_and(bytetest_b0_bf, tmp67);
          r80_7ff_tmp279 = simd_and(r80_7ff_tmp257, bytetest_b3_b3);
          struct_Ll.cc = simd_or(r80_7ff_tmp279, struct_Ll.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp232, tmp53);
          bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp91);
          r80_7ff_tmp280 = simd_and(r80_7ff_tmp257, bytetest_b5_b5);
          struct_Ll.cc = simd_or(r80_7ff_tmp280, struct_Ll.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp232, tmp53);
          bytetest_b7_b7 = simd_and(bytetest_b0_bf, tmp104);
          r80_7ff_tmp281 = simd_and(r80_7ff_tmp257, bytetest_b7_b7);
          struct_Ll.cc = simd_or(r80_7ff_tmp281, struct_Ll.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp232, tmp53);
          bytetest_b9_b9 = simd_and(bytetest_b0_bf, tmp119);
          r80_7ff_tmp282 = simd_and(r80_7ff_tmp257, bytetest_b9_b9);
          struct_Ll.cc = simd_or(r80_7ff_tmp282, struct_Ll.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp232, tmp53);
          bytetest_bb_bb = simd_and(bytetest_b0_bf, tmp65);
          r80_7ff_tmp283 = simd_and(r80_7ff_tmp257, bytetest_bb_bb);
          struct_Ll.cc = simd_or(r80_7ff_tmp283, struct_Ll.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp232, tmp53);
          bytetest_bd_bd = simd_and(bytetest_b0_bf, tmp19);
          r80_7ff_tmp284 = simd_and(r80_7ff_tmp257, bytetest_bd_bd);
          struct_Ll.cc = simd_or(r80_7ff_tmp284, struct_Ll.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp232, tmp53);
          bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp169);
          r80_7ff_tmp285 = simd_and(r80_7ff_tmp257, bytetest_bf_bf);
          struct_Ll.cc = simd_or(r80_7ff_tmp285, struct_Ll.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp232, tmp67);
          bytetest_82_82 = simd_and(tmp69, tmp53);
          r80_7ff_tmp286 = simd_and(tmp27, bytetest_d3);
          carryQ.cq[34] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp286, carryQ.get_carry_in(34), r80_7ff_tmp287));
          r80_7ff_tmp288 = simd_and(r80_7ff_tmp287, bytetest_82_82);
          struct_Ll.cc = simd_or(r80_7ff_tmp288, struct_Ll.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp232, tmp67);
          bytetest_84_84 = simd_and(tmp69, tmp78);
          r80_7ff_tmp289 = simd_and(r80_7ff_tmp287, bytetest_84_84);
          struct_Ll.cc = simd_or(r80_7ff_tmp289, struct_Ll.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp232, tmp67);
          bytetest_86_86 = simd_and(tmp69, tmp99);
          r80_7ff_tmp290 = simd_and(r80_7ff_tmp287, bytetest_86_86);
          struct_Ll.cc = simd_or(r80_7ff_tmp290, struct_Ll.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp232, tmp67);
          bytetest_88_88 = simd_and(tmp69, tmp111);
          r80_7ff_tmp291 = simd_and(r80_7ff_tmp287, bytetest_88_88);
          struct_Ll.cc = simd_or(r80_7ff_tmp291, struct_Ll.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp232, tmp67);
          bytetest_8a_8a = simd_and(tmp69, tmp125);
          r80_7ff_tmp292 = simd_and(r80_7ff_tmp287, bytetest_8a_8a);
          struct_Ll.cc = simd_or(r80_7ff_tmp292, struct_Ll.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp232, tmp67);
          bytetest_8c_8c = simd_and(tmp69, tmp140);
          r80_7ff_tmp293 = simd_and(r80_7ff_tmp287, bytetest_8c_8c);
          struct_Ll.cc = simd_or(r80_7ff_tmp293, struct_Ll.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp232, tmp67);
          bytetest_8e_8f = simd_and(tmp69, tmp40);
          r80_7ff_tmp294 = simd_and(r80_7ff_tmp287, bytetest_8e_8f);
          struct_Ll.cc = simd_or(r80_7ff_tmp294, struct_Ll.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp232, tmp67);
          bytetest_91_91 = simd_and(tmp16, tmp35);
          r80_7ff_tmp295 = simd_and(r80_7ff_tmp287, bytetest_91_91);
          struct_Ll.cc = simd_or(r80_7ff_tmp295, struct_Ll.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp232, tmp67);
          bytetest_93_93 = simd_and(tmp16, tmp67);
          r80_7ff_tmp296 = simd_and(r80_7ff_tmp287, bytetest_93_93);
          struct_Ll.cc = simd_or(r80_7ff_tmp296, struct_Ll.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp232, tmp67);
          bytetest_95_95 = simd_and(tmp16, tmp91);
          r80_7ff_tmp297 = simd_and(r80_7ff_tmp287, bytetest_95_95);
          struct_Ll.cc = simd_or(r80_7ff_tmp297, struct_Ll.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp232, tmp67);
          bytetest_97_97 = simd_and(tmp16, tmp104);
          r80_7ff_tmp298 = simd_and(r80_7ff_tmp287, bytetest_97_97);
          struct_Ll.cc = simd_or(r80_7ff_tmp298, struct_Ll.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp232, tmp67);
          bytetest_99_99 = simd_and(tmp16, tmp119);
          r80_7ff_tmp299 = simd_and(r80_7ff_tmp287, bytetest_99_99);
          struct_Ll.cc = simd_or(r80_7ff_tmp299, struct_Ll.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp232, tmp67);
          bytetest_9b_9b = simd_and(tmp16, tmp65);
          r80_7ff_tmp300 = simd_and(r80_7ff_tmp287, bytetest_9b_9b);
          struct_Ll.cc = simd_or(r80_7ff_tmp300, struct_Ll.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp232, tmp67);
          bytetest_9d_9d = simd_and(tmp16, tmp19);
          r80_7ff_tmp301 = simd_and(r80_7ff_tmp287, bytetest_9d_9d);
          struct_Ll.cc = simd_or(r80_7ff_tmp301, struct_Ll.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp232, tmp67);
          bytetest_9f_9f = simd_and(tmp16, tmp169);
          r80_7ff_tmp302 = simd_and(r80_7ff_tmp287, bytetest_9f_9f);
          struct_Ll.cc = simd_or(r80_7ff_tmp302, struct_Ll.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp232, tmp67);
          bytetest_a1_a1 = simd_and(r80_7ff_tmp33, tmp35);
          r80_7ff_tmp303 = simd_and(r80_7ff_tmp287, bytetest_a1_a1);
          struct_Ll.cc = simd_or(r80_7ff_tmp303, struct_Ll.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp232, tmp67);
          bytetest_a3_a3 = simd_and(r80_7ff_tmp33, tmp67);
          r80_7ff_tmp304 = simd_and(r80_7ff_tmp287, bytetest_a3_a3);
          struct_Ll.cc = simd_or(r80_7ff_tmp304, struct_Ll.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp232, tmp67);
          bytetest_a5_a5 = simd_and(r80_7ff_tmp33, tmp91);
          r80_7ff_tmp305 = simd_and(r80_7ff_tmp287, bytetest_a5_a5);
          struct_Ll.cc = simd_or(r80_7ff_tmp305, struct_Ll.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp232, tmp67);
          bytetest_a7_a7 = simd_and(r80_7ff_tmp33, tmp104);
          r80_7ff_tmp306 = simd_and(r80_7ff_tmp287, bytetest_a7_a7);
          struct_Ll.cc = simd_or(r80_7ff_tmp306, struct_Ll.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp232, tmp67);
          bytetest_a9_a9 = simd_and(r80_7ff_tmp33, tmp119);
          r80_7ff_tmp307 = simd_and(r80_7ff_tmp287, bytetest_a9_a9);
          struct_Ll.cc = simd_or(r80_7ff_tmp307, struct_Ll.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp232, tmp67);
          bytetest_ab_ab = simd_and(r80_7ff_tmp33, tmp65);
          r80_7ff_tmp308 = simd_and(r80_7ff_tmp287, bytetest_ab_ab);
          struct_Ll.cc = simd_or(r80_7ff_tmp308, struct_Ll.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp232, tmp67);
          bytetest_ad_ad = simd_and(r80_7ff_tmp33, tmp19);
          r80_7ff_tmp309 = simd_and(r80_7ff_tmp287, bytetest_ad_ad);
          struct_Ll.cc = simd_or(r80_7ff_tmp309, struct_Ll.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp232, tmp67);
          bytetest_af_af = simd_and(r80_7ff_tmp33, tmp169);
          r80_7ff_tmp310 = simd_and(r80_7ff_tmp287, bytetest_af_af);
          struct_Ll.cc = simd_or(r80_7ff_tmp310, struct_Ll.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp232, tmp67);
          bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp35);
          r80_7ff_tmp311 = simd_and(r80_7ff_tmp287, bytetest_b1_b1);
          struct_Ll.cc = simd_or(r80_7ff_tmp311, struct_Ll.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp232, tmp67);
          bytetest_b3_b3 = simd_and(bytetest_b0_bf, tmp67);
          r80_7ff_tmp312 = simd_and(r80_7ff_tmp287, bytetest_b3_b3);
          struct_Ll.cc = simd_or(r80_7ff_tmp312, struct_Ll.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp232, tmp67);
          bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp91);
          r80_7ff_tmp313 = simd_and(r80_7ff_tmp287, bytetest_b5_b5);
          struct_Ll.cc = simd_or(r80_7ff_tmp313, struct_Ll.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp232, tmp67);
          bytetest_b7_b7 = simd_and(bytetest_b0_bf, tmp104);
          r80_7ff_tmp314 = simd_and(r80_7ff_tmp287, bytetest_b7_b7);
          struct_Ll.cc = simd_or(r80_7ff_tmp314, struct_Ll.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp232, tmp67);
          bytetest_b9_b9 = simd_and(bytetest_b0_bf, tmp119);
          r80_7ff_tmp315 = simd_and(r80_7ff_tmp287, bytetest_b9_b9);
          struct_Ll.cc = simd_or(r80_7ff_tmp315, struct_Ll.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp232, tmp67);
          bytetest_bb_bb = simd_and(bytetest_b0_bf, tmp65);
          r80_7ff_tmp316 = simd_and(r80_7ff_tmp287, bytetest_bb_bb);
          struct_Ll.cc = simd_or(r80_7ff_tmp316, struct_Ll.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp232, tmp67);
          bytetest_bd_bd = simd_and(bytetest_b0_bf, tmp19);
          r80_7ff_tmp317 = simd_and(r80_7ff_tmp287, bytetest_bd_bd);
          struct_Ll.cc = simd_or(r80_7ff_tmp317, struct_Ll.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp232, tmp67);
          bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp169);
          r80_7ff_tmp318 = simd_and(r80_7ff_tmp287, bytetest_bf_bf);
          struct_Ll.cc = simd_or(r80_7ff_tmp318, struct_Ll.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp232, tmp78);
          bytetest_81_81 = simd_and(tmp69, tmp35);
          r80_7ff_tmp319 = simd_and(tmp27, bytetest_d4);
          carryQ.cq[35] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp319, carryQ.get_carry_in(35), r80_7ff_tmp320));
          r80_7ff_tmp321 = simd_and(r80_7ff_tmp320, bytetest_81_81);
          struct_Ll.cc = simd_or(r80_7ff_tmp321, struct_Ll.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp232, tmp78);
          bytetest_83_83 = simd_and(tmp69, tmp67);
          r80_7ff_tmp322 = simd_and(r80_7ff_tmp320, bytetest_83_83);
          struct_Ll.cc = simd_or(r80_7ff_tmp322, struct_Ll.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp232, tmp78);
          bytetest_85_85 = simd_and(tmp69, tmp91);
          r80_7ff_tmp323 = simd_and(r80_7ff_tmp320, bytetest_85_85);
          struct_Ll.cc = simd_or(r80_7ff_tmp323, struct_Ll.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp232, tmp78);
          bytetest_87_87 = simd_and(tmp69, tmp104);
          r80_7ff_tmp324 = simd_and(r80_7ff_tmp320, bytetest_87_87);
          struct_Ll.cc = simd_or(r80_7ff_tmp324, struct_Ll.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp232, tmp78);
          bytetest_89_89 = simd_and(tmp69, tmp119);
          r80_7ff_tmp325 = simd_and(r80_7ff_tmp320, bytetest_89_89);
          struct_Ll.cc = simd_or(r80_7ff_tmp325, struct_Ll.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp232, tmp78);
          bytetest_8b_8b = simd_and(tmp69, tmp65);
          r80_7ff_tmp326 = simd_and(r80_7ff_tmp320, bytetest_8b_8b);
          struct_Ll.cc = simd_or(r80_7ff_tmp326, struct_Ll.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp232, tmp78);
          bytetest_8d_8d = simd_and(tmp69, tmp19);
          r80_7ff_tmp327 = simd_and(r80_7ff_tmp320, bytetest_8d_8d);
          struct_Ll.cc = simd_or(r80_7ff_tmp327, struct_Ll.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp232, tmp78);
          bytetest_8f_8f = simd_and(tmp69, tmp169);
          r80_7ff_tmp328 = simd_and(r80_7ff_tmp320, bytetest_8f_8f);
          struct_Ll.cc = simd_or(r80_7ff_tmp328, struct_Ll.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp232, tmp78);
          bytetest_91_91 = simd_and(tmp16, tmp35);
          r80_7ff_tmp329 = simd_and(r80_7ff_tmp320, bytetest_91_91);
          struct_Ll.cc = simd_or(r80_7ff_tmp329, struct_Ll.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp232, tmp78);
          bytetest_93_93 = simd_and(tmp16, tmp67);
          r80_7ff_tmp330 = simd_and(r80_7ff_tmp320, bytetest_93_93);
          struct_Ll.cc = simd_or(r80_7ff_tmp330, struct_Ll.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp232, tmp78);
          bytetest_95_95 = simd_and(tmp16, tmp91);
          r80_7ff_tmp331 = simd_and(r80_7ff_tmp320, bytetest_95_95);
          struct_Ll.cc = simd_or(r80_7ff_tmp331, struct_Ll.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp232, tmp78);
          bytetest_97_97 = simd_and(tmp16, tmp104);
          r80_7ff_tmp332 = simd_and(r80_7ff_tmp320, bytetest_97_97);
          struct_Ll.cc = simd_or(r80_7ff_tmp332, struct_Ll.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp232, tmp78);
          bytetest_99_99 = simd_and(tmp16, tmp119);
          r80_7ff_tmp333 = simd_and(r80_7ff_tmp320, bytetest_99_99);
          struct_Ll.cc = simd_or(r80_7ff_tmp333, struct_Ll.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp232, tmp78);
          bytetest_9b_9b = simd_and(tmp16, tmp65);
          r80_7ff_tmp334 = simd_and(r80_7ff_tmp320, bytetest_9b_9b);
          struct_Ll.cc = simd_or(r80_7ff_tmp334, struct_Ll.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp232, tmp78);
          bytetest_9d_9d = simd_and(tmp16, tmp19);
          r80_7ff_tmp335 = simd_and(r80_7ff_tmp320, bytetest_9d_9d);
          struct_Ll.cc = simd_or(r80_7ff_tmp335, struct_Ll.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp232, tmp78);
          bytetest_9f_9f = simd_and(tmp16, tmp169);
          r80_7ff_tmp336 = simd_and(r80_7ff_tmp320, bytetest_9f_9f);
          struct_Ll.cc = simd_or(r80_7ff_tmp336, struct_Ll.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp232, tmp78);
          bytetest_a1_a1 = simd_and(r80_7ff_tmp33, tmp35);
          r80_7ff_tmp337 = simd_and(r80_7ff_tmp320, bytetest_a1_a1);
          struct_Ll.cc = simd_or(r80_7ff_tmp337, struct_Ll.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp232, tmp78);
          bytetest_a3_a3 = simd_and(r80_7ff_tmp33, tmp67);
          r80_7ff_tmp338 = simd_and(r80_7ff_tmp320, bytetest_a3_a3);
          struct_Ll.cc = simd_or(r80_7ff_tmp338, struct_Ll.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp232, tmp78);
          bytetest_a5_a5 = simd_and(r80_7ff_tmp33, tmp91);
          r80_7ff_tmp339 = simd_and(r80_7ff_tmp320, bytetest_a5_a5);
          struct_Ll.cc = simd_or(r80_7ff_tmp339, struct_Ll.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp232, tmp78);
          bytetest_a7_a7 = simd_and(r80_7ff_tmp33, tmp104);
          r80_7ff_tmp340 = simd_and(r80_7ff_tmp320, bytetest_a7_a7);
          struct_Ll.cc = simd_or(r80_7ff_tmp340, struct_Ll.cc);
          bytetest_d6 = simd_and(r80_7ff_tmp232, tmp99);
          bytetest_80_87 = simd_andc(tmp69, basis_bits.bit_4);
          r80_7ff_tmp341 = simd_and(tmp27, bytetest_d6);
          carryQ.cq[36] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp341, carryQ.get_carry_in(36), r80_7ff_tmp342));
          r80_7ff_tmp343 = simd_and(r80_7ff_tmp342, bytetest_80_87);
          bytetest_d5 = simd_and(r80_7ff_tmp232, tmp91);
          r80_7ff_tmp344 = simd_or(basis_bits.bit_3, tmp9);
          bytetest_a1_bf = simd_and(tmp82, r80_7ff_tmp344);
          r80_7ff_tmp345 = simd_and(tmp27, bytetest_d5);
          carryQ.cq[37] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp345, carryQ.get_carry_in(37), r80_7ff_tmp346));
          r80_7ff_tmp347 = simd_and(r80_7ff_tmp346, bytetest_a1_bf);
          r80_7ff_tmp348 = simd_or(r80_7ff_tmp347, r80_7ff_tmp343);
          struct_Ll.cc = simd_or(r80_7ff_tmp348, struct_Ll.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(19, 19);
        }
        tmp179 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp180 = simd_and(tmp11, tmp179);
        tmp181 = simd_or(basis_bits.bit_4, tmp160);
        bytetest_e1_ef = simd_and(tmp180, tmp181);
        bytetest_e0 = simd_andc(tmp180, tmp9);
        bytetest_a0_bf = simd_and(tmp14, basis_bits.bit_2);
        tmp182 = simd_and(tmp27, bytetest_e0);
        carryQ.cq[38] = carryout2carry(pablo_blk_Advance(tmp182, carryQ.get_carry_in(38), tmp183));
        tmp184 = simd_and(tmp183, bytetest_a0_bf);
        tmp185 = simd_or(tmp184, bytetest_e1_ef);
        if ((bitblock::any(tmp185) || carryQ.CarryTest(39, 31))) {
          r800_ffff_tmp1 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp2 = simd_and(tmp11, r800_ffff_tmp1);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b4 = simd_and(bytetest_b0_bf, tmp78);
          r800_ffff_tmp3 = simd_and(basis_bits.bit_2, tmp92);
          bytetest_80_ab = simd_andc(tmp14, r800_ffff_tmp3);
          r800_ffff_tmp4 = simd_and(tmp27, bytetest_e1);
          carryQ.cq[39] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp4, carryQ.get_carry_in(39), r800_ffff_tmp5));
          r800_ffff_tmp6 = simd_and(r800_ffff_tmp5, bytetest_b4);
          carryQ.cq[40] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp6, carryQ.get_carry_in(40), r800_ffff_tmp7));
          r800_ffff_tmp8 = simd_and(r800_ffff_tmp7, bytetest_80_ab);
          struct_Ll.cc = simd_or(r800_ffff_tmp8, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b5 = simd_and(bytetest_b0_bf, tmp91);
          r800_ffff_tmp9 = simd_not(basis_bits.bit_4);
          r800_ffff_tmp10 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp9), simd_andc(tmp5, basis_bits.bit_3));
          bytetest_ab_b7 = simd_and(tmp82, r800_ffff_tmp10);
          r800_ffff_tmp11 = simd_and(r800_ffff_tmp5, bytetest_b5);
          carryQ.cq[41] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp11, carryQ.get_carry_in(41), r800_ffff_tmp12));
          r800_ffff_tmp13 = simd_and(r800_ffff_tmp12, bytetest_ab_b7);
          struct_Ll.cc = simd_or(r800_ffff_tmp13, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b6 = simd_and(bytetest_b0_bf, tmp99);
          r800_ffff_tmp14 = simd_and(basis_bits.bit_3, tmp5);
          bytetest_80_9a = simd_andc(tmp36, r800_ffff_tmp14);
          r800_ffff_tmp15 = simd_and(r800_ffff_tmp5, bytetest_b6);
          carryQ.cq[42] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp15, carryQ.get_carry_in(42), r800_ffff_tmp16));
          r800_ffff_tmp17 = simd_and(r800_ffff_tmp16, bytetest_80_9a);
          bytetest_b5 = simd_and(bytetest_b0_bf, tmp91);
          r800_ffff_tmp18 = simd_and(bytetest_b0_bf, basis_bits.bit_4);
          bytetest_b9_bf = simd_and(r800_ffff_tmp18, tmp160);
          r800_ffff_tmp19 = simd_and(r800_ffff_tmp12, bytetest_b9_bf);
          r800_ffff_tmp20 = simd_or(r800_ffff_tmp19, r800_ffff_tmp17);
          struct_Ll.cc = simd_or(r800_ffff_tmp20, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp111);
          bytetest_81_81 = simd_and(tmp69, tmp35);
          r800_ffff_tmp21 = simd_and(r800_ffff_tmp5, bytetest_b8);
          carryQ.cq[43] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp21, carryQ.get_carry_in(43), r800_ffff_tmp22));
          r800_ffff_tmp23 = simd_and(r800_ffff_tmp22, bytetest_81_81);
          struct_Ll.cc = simd_or(r800_ffff_tmp23, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp111);
          bytetest_83_83 = simd_and(tmp69, tmp67);
          r800_ffff_tmp24 = simd_and(r800_ffff_tmp22, bytetest_83_83);
          struct_Ll.cc = simd_or(r800_ffff_tmp24, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp111);
          bytetest_85_85 = simd_and(tmp69, tmp91);
          r800_ffff_tmp25 = simd_and(r800_ffff_tmp22, bytetest_85_85);
          struct_Ll.cc = simd_or(r800_ffff_tmp25, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp111);
          bytetest_87_87 = simd_and(tmp69, tmp104);
          r800_ffff_tmp26 = simd_and(r800_ffff_tmp22, bytetest_87_87);
          struct_Ll.cc = simd_or(r800_ffff_tmp26, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp111);
          bytetest_89_89 = simd_and(tmp69, tmp119);
          r800_ffff_tmp27 = simd_and(r800_ffff_tmp22, bytetest_89_89);
          struct_Ll.cc = simd_or(r800_ffff_tmp27, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp111);
          bytetest_8b_8b = simd_and(tmp69, tmp65);
          r800_ffff_tmp28 = simd_and(r800_ffff_tmp22, bytetest_8b_8b);
          struct_Ll.cc = simd_or(r800_ffff_tmp28, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp111);
          bytetest_8d_8d = simd_and(tmp69, tmp19);
          r800_ffff_tmp29 = simd_and(r800_ffff_tmp22, bytetest_8d_8d);
          struct_Ll.cc = simd_or(r800_ffff_tmp29, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp111);
          bytetest_8f_8f = simd_and(tmp69, tmp169);
          r800_ffff_tmp30 = simd_and(r800_ffff_tmp22, bytetest_8f_8f);
          struct_Ll.cc = simd_or(r800_ffff_tmp30, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp111);
          bytetest_91_91 = simd_and(tmp16, tmp35);
          r800_ffff_tmp31 = simd_and(r800_ffff_tmp22, bytetest_91_91);
          struct_Ll.cc = simd_or(r800_ffff_tmp31, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp111);
          bytetest_93_93 = simd_and(tmp16, tmp67);
          r800_ffff_tmp32 = simd_and(r800_ffff_tmp22, bytetest_93_93);
          struct_Ll.cc = simd_or(r800_ffff_tmp32, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp111);
          bytetest_95_95 = simd_and(tmp16, tmp91);
          r800_ffff_tmp33 = simd_and(r800_ffff_tmp22, bytetest_95_95);
          struct_Ll.cc = simd_or(r800_ffff_tmp33, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp111);
          bytetest_97_97 = simd_and(tmp16, tmp104);
          r800_ffff_tmp34 = simd_and(r800_ffff_tmp22, bytetest_97_97);
          struct_Ll.cc = simd_or(r800_ffff_tmp34, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp111);
          bytetest_99_99 = simd_and(tmp16, tmp119);
          r800_ffff_tmp35 = simd_and(r800_ffff_tmp22, bytetest_99_99);
          struct_Ll.cc = simd_or(r800_ffff_tmp35, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp111);
          bytetest_9b_9b = simd_and(tmp16, tmp65);
          r800_ffff_tmp36 = simd_and(r800_ffff_tmp22, bytetest_9b_9b);
          struct_Ll.cc = simd_or(r800_ffff_tmp36, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp111);
          bytetest_9d_9d = simd_and(tmp16, tmp19);
          r800_ffff_tmp37 = simd_and(r800_ffff_tmp22, bytetest_9d_9d);
          struct_Ll.cc = simd_or(r800_ffff_tmp37, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp111);
          bytetest_9f_9f = simd_and(tmp16, tmp169);
          r800_ffff_tmp38 = simd_and(r800_ffff_tmp22, bytetest_9f_9f);
          struct_Ll.cc = simd_or(r800_ffff_tmp38, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp111);
          r800_ffff_tmp39 = simd_and(tmp14, r800_ffff_tmp1);
          bytetest_a1_a1 = simd_and(r800_ffff_tmp39, tmp35);
          r800_ffff_tmp40 = simd_and(r800_ffff_tmp22, bytetest_a1_a1);
          struct_Ll.cc = simd_or(r800_ffff_tmp40, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp111);
          bytetest_a3_a3 = simd_and(r800_ffff_tmp39, tmp67);
          r800_ffff_tmp41 = simd_and(r800_ffff_tmp22, bytetest_a3_a3);
          struct_Ll.cc = simd_or(r800_ffff_tmp41, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp111);
          bytetest_a5_a5 = simd_and(r800_ffff_tmp39, tmp91);
          r800_ffff_tmp42 = simd_and(r800_ffff_tmp22, bytetest_a5_a5);
          struct_Ll.cc = simd_or(r800_ffff_tmp42, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp111);
          bytetest_a7_a7 = simd_and(r800_ffff_tmp39, tmp104);
          r800_ffff_tmp43 = simd_and(r800_ffff_tmp22, bytetest_a7_a7);
          struct_Ll.cc = simd_or(r800_ffff_tmp43, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp111);
          bytetest_a9_a9 = simd_and(r800_ffff_tmp39, tmp119);
          r800_ffff_tmp44 = simd_and(r800_ffff_tmp22, bytetest_a9_a9);
          struct_Ll.cc = simd_or(r800_ffff_tmp44, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp111);
          bytetest_ab_ab = simd_and(r800_ffff_tmp39, tmp65);
          r800_ffff_tmp45 = simd_and(r800_ffff_tmp22, bytetest_ab_ab);
          struct_Ll.cc = simd_or(r800_ffff_tmp45, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp111);
          bytetest_ad_ad = simd_and(r800_ffff_tmp39, tmp19);
          r800_ffff_tmp46 = simd_and(r800_ffff_tmp22, bytetest_ad_ad);
          struct_Ll.cc = simd_or(r800_ffff_tmp46, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp111);
          bytetest_af_af = simd_and(r800_ffff_tmp39, tmp169);
          r800_ffff_tmp47 = simd_and(r800_ffff_tmp22, bytetest_af_af);
          struct_Ll.cc = simd_or(r800_ffff_tmp47, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp111);
          bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp35);
          r800_ffff_tmp48 = simd_and(r800_ffff_tmp22, bytetest_b1_b1);
          struct_Ll.cc = simd_or(r800_ffff_tmp48, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp111);
          bytetest_b3_b3 = simd_and(bytetest_b0_bf, tmp67);
          r800_ffff_tmp49 = simd_and(r800_ffff_tmp22, bytetest_b3_b3);
          struct_Ll.cc = simd_or(r800_ffff_tmp49, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp111);
          bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp91);
          r800_ffff_tmp50 = simd_and(r800_ffff_tmp22, bytetest_b5_b5);
          struct_Ll.cc = simd_or(r800_ffff_tmp50, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp111);
          bytetest_b7_b7 = simd_and(bytetest_b0_bf, tmp104);
          r800_ffff_tmp51 = simd_and(r800_ffff_tmp22, bytetest_b7_b7);
          struct_Ll.cc = simd_or(r800_ffff_tmp51, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp111);
          bytetest_b9_b9 = simd_and(bytetest_b0_bf, tmp119);
          r800_ffff_tmp52 = simd_and(r800_ffff_tmp22, bytetest_b9_b9);
          struct_Ll.cc = simd_or(r800_ffff_tmp52, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp111);
          bytetest_bb_bb = simd_and(bytetest_b0_bf, tmp65);
          r800_ffff_tmp53 = simd_and(r800_ffff_tmp22, bytetest_bb_bb);
          struct_Ll.cc = simd_or(r800_ffff_tmp53, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp111);
          bytetest_bd_bd = simd_and(bytetest_b0_bf, tmp19);
          r800_ffff_tmp54 = simd_and(r800_ffff_tmp22, bytetest_bd_bd);
          struct_Ll.cc = simd_or(r800_ffff_tmp54, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp111);
          bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp169);
          r800_ffff_tmp55 = simd_and(r800_ffff_tmp22, bytetest_bf_bf);
          struct_Ll.cc = simd_or(r800_ffff_tmp55, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp119);
          bytetest_81_81 = simd_and(tmp69, tmp35);
          r800_ffff_tmp56 = simd_and(r800_ffff_tmp5, bytetest_b9);
          carryQ.cq[44] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp56, carryQ.get_carry_in(44), r800_ffff_tmp57));
          r800_ffff_tmp58 = simd_and(r800_ffff_tmp57, bytetest_81_81);
          struct_Ll.cc = simd_or(r800_ffff_tmp58, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp119);
          bytetest_83_83 = simd_and(tmp69, tmp67);
          r800_ffff_tmp59 = simd_and(r800_ffff_tmp57, bytetest_83_83);
          struct_Ll.cc = simd_or(r800_ffff_tmp59, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp119);
          bytetest_85_85 = simd_and(tmp69, tmp91);
          r800_ffff_tmp60 = simd_and(r800_ffff_tmp57, bytetest_85_85);
          struct_Ll.cc = simd_or(r800_ffff_tmp60, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp119);
          bytetest_87_87 = simd_and(tmp69, tmp104);
          r800_ffff_tmp61 = simd_and(r800_ffff_tmp57, bytetest_87_87);
          struct_Ll.cc = simd_or(r800_ffff_tmp61, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp119);
          bytetest_89_89 = simd_and(tmp69, tmp119);
          r800_ffff_tmp62 = simd_and(r800_ffff_tmp57, bytetest_89_89);
          struct_Ll.cc = simd_or(r800_ffff_tmp62, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp119);
          bytetest_8b_8b = simd_and(tmp69, tmp65);
          r800_ffff_tmp63 = simd_and(r800_ffff_tmp57, bytetest_8b_8b);
          struct_Ll.cc = simd_or(r800_ffff_tmp63, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp119);
          bytetest_8d_8d = simd_and(tmp69, tmp19);
          r800_ffff_tmp64 = simd_and(r800_ffff_tmp57, bytetest_8d_8d);
          struct_Ll.cc = simd_or(r800_ffff_tmp64, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp119);
          bytetest_8f_8f = simd_and(tmp69, tmp169);
          r800_ffff_tmp65 = simd_and(r800_ffff_tmp57, bytetest_8f_8f);
          struct_Ll.cc = simd_or(r800_ffff_tmp65, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp119);
          bytetest_91_91 = simd_and(tmp16, tmp35);
          r800_ffff_tmp66 = simd_and(r800_ffff_tmp57, bytetest_91_91);
          struct_Ll.cc = simd_or(r800_ffff_tmp66, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp119);
          bytetest_93_93 = simd_and(tmp16, tmp67);
          r800_ffff_tmp67 = simd_and(r800_ffff_tmp57, bytetest_93_93);
          struct_Ll.cc = simd_or(r800_ffff_tmp67, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp119);
          bytetest_95_95 = simd_and(tmp16, tmp91);
          r800_ffff_tmp68 = simd_and(r800_ffff_tmp57, bytetest_95_95);
          struct_Ll.cc = simd_or(r800_ffff_tmp68, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp119);
          bytetest_97_97 = simd_and(tmp16, tmp104);
          r800_ffff_tmp69 = simd_and(r800_ffff_tmp57, bytetest_97_97);
          struct_Ll.cc = simd_or(r800_ffff_tmp69, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp119);
          bytetest_99_99 = simd_and(tmp16, tmp119);
          r800_ffff_tmp70 = simd_and(r800_ffff_tmp57, bytetest_99_99);
          struct_Ll.cc = simd_or(r800_ffff_tmp70, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp119);
          bytetest_9b_9b = simd_and(tmp16, tmp65);
          r800_ffff_tmp71 = simd_and(r800_ffff_tmp57, bytetest_9b_9b);
          struct_Ll.cc = simd_or(r800_ffff_tmp71, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp119);
          bytetest_9d_9d = simd_and(tmp16, tmp19);
          r800_ffff_tmp72 = simd_and(r800_ffff_tmp57, bytetest_9d_9d);
          struct_Ll.cc = simd_or(r800_ffff_tmp72, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp119);
          bytetest_9f_9f = simd_and(tmp16, tmp169);
          r800_ffff_tmp73 = simd_and(r800_ffff_tmp57, bytetest_9f_9f);
          struct_Ll.cc = simd_or(r800_ffff_tmp73, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp119);
          bytetest_a1_a1 = simd_and(r800_ffff_tmp39, tmp35);
          r800_ffff_tmp74 = simd_and(r800_ffff_tmp57, bytetest_a1_a1);
          struct_Ll.cc = simd_or(r800_ffff_tmp74, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp119);
          bytetest_a3_a3 = simd_and(r800_ffff_tmp39, tmp67);
          r800_ffff_tmp75 = simd_and(r800_ffff_tmp57, bytetest_a3_a3);
          struct_Ll.cc = simd_or(r800_ffff_tmp75, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp119);
          bytetest_a5_a5 = simd_and(r800_ffff_tmp39, tmp91);
          r800_ffff_tmp76 = simd_and(r800_ffff_tmp57, bytetest_a5_a5);
          struct_Ll.cc = simd_or(r800_ffff_tmp76, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp119);
          bytetest_a7_a7 = simd_and(r800_ffff_tmp39, tmp104);
          r800_ffff_tmp77 = simd_and(r800_ffff_tmp57, bytetest_a7_a7);
          struct_Ll.cc = simd_or(r800_ffff_tmp77, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp119);
          bytetest_a9_a9 = simd_and(r800_ffff_tmp39, tmp119);
          r800_ffff_tmp78 = simd_and(r800_ffff_tmp57, bytetest_a9_a9);
          struct_Ll.cc = simd_or(r800_ffff_tmp78, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp119);
          bytetest_ab_ab = simd_and(r800_ffff_tmp39, tmp65);
          r800_ffff_tmp79 = simd_and(r800_ffff_tmp57, bytetest_ab_ab);
          struct_Ll.cc = simd_or(r800_ffff_tmp79, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp119);
          bytetest_ad_ad = simd_and(r800_ffff_tmp39, tmp19);
          r800_ffff_tmp80 = simd_and(r800_ffff_tmp57, bytetest_ad_ad);
          struct_Ll.cc = simd_or(r800_ffff_tmp80, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp119);
          bytetest_af_af = simd_and(r800_ffff_tmp39, tmp169);
          r800_ffff_tmp81 = simd_and(r800_ffff_tmp57, bytetest_af_af);
          struct_Ll.cc = simd_or(r800_ffff_tmp81, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp119);
          bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp35);
          r800_ffff_tmp82 = simd_and(r800_ffff_tmp57, bytetest_b1_b1);
          struct_Ll.cc = simd_or(r800_ffff_tmp82, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp119);
          bytetest_b3_b3 = simd_and(bytetest_b0_bf, tmp67);
          r800_ffff_tmp83 = simd_and(r800_ffff_tmp57, bytetest_b3_b3);
          struct_Ll.cc = simd_or(r800_ffff_tmp83, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp119);
          bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp91);
          r800_ffff_tmp84 = simd_and(r800_ffff_tmp57, bytetest_b5_b5);
          struct_Ll.cc = simd_or(r800_ffff_tmp84, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp119);
          bytetest_b7_b7 = simd_and(bytetest_b0_bf, tmp104);
          r800_ffff_tmp85 = simd_and(r800_ffff_tmp57, bytetest_b7_b7);
          struct_Ll.cc = simd_or(r800_ffff_tmp85, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp119);
          bytetest_b9_b9 = simd_and(bytetest_b0_bf, tmp119);
          r800_ffff_tmp86 = simd_and(r800_ffff_tmp57, bytetest_b9_b9);
          struct_Ll.cc = simd_or(r800_ffff_tmp86, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp119);
          bytetest_bb_bb = simd_and(bytetest_b0_bf, tmp65);
          r800_ffff_tmp87 = simd_and(r800_ffff_tmp57, bytetest_bb_bb);
          struct_Ll.cc = simd_or(r800_ffff_tmp87, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp119);
          bytetest_bd_bd = simd_and(bytetest_b0_bf, tmp19);
          r800_ffff_tmp88 = simd_and(r800_ffff_tmp57, bytetest_bd_bd);
          struct_Ll.cc = simd_or(r800_ffff_tmp88, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp119);
          bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp169);
          r800_ffff_tmp89 = simd_and(r800_ffff_tmp57, bytetest_bf_bf);
          struct_Ll.cc = simd_or(r800_ffff_tmp89, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp125);
          bytetest_81_81 = simd_and(tmp69, tmp35);
          r800_ffff_tmp90 = simd_and(r800_ffff_tmp5, bytetest_ba);
          carryQ.cq[45] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp90, carryQ.get_carry_in(45), r800_ffff_tmp91));
          r800_ffff_tmp92 = simd_and(r800_ffff_tmp91, bytetest_81_81);
          struct_Ll.cc = simd_or(r800_ffff_tmp92, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp125);
          bytetest_83_83 = simd_and(tmp69, tmp67);
          r800_ffff_tmp93 = simd_and(r800_ffff_tmp91, bytetest_83_83);
          struct_Ll.cc = simd_or(r800_ffff_tmp93, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp125);
          bytetest_85_85 = simd_and(tmp69, tmp91);
          r800_ffff_tmp94 = simd_and(r800_ffff_tmp91, bytetest_85_85);
          struct_Ll.cc = simd_or(r800_ffff_tmp94, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp125);
          bytetest_87_87 = simd_and(tmp69, tmp104);
          r800_ffff_tmp95 = simd_and(r800_ffff_tmp91, bytetest_87_87);
          struct_Ll.cc = simd_or(r800_ffff_tmp95, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp125);
          bytetest_89_89 = simd_and(tmp69, tmp119);
          r800_ffff_tmp96 = simd_and(r800_ffff_tmp91, bytetest_89_89);
          struct_Ll.cc = simd_or(r800_ffff_tmp96, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp125);
          bytetest_8b_8b = simd_and(tmp69, tmp65);
          r800_ffff_tmp97 = simd_and(r800_ffff_tmp91, bytetest_8b_8b);
          struct_Ll.cc = simd_or(r800_ffff_tmp97, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp125);
          bytetest_8d_8d = simd_and(tmp69, tmp19);
          r800_ffff_tmp98 = simd_and(r800_ffff_tmp91, bytetest_8d_8d);
          struct_Ll.cc = simd_or(r800_ffff_tmp98, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp125);
          bytetest_8f_8f = simd_and(tmp69, tmp169);
          r800_ffff_tmp99 = simd_and(r800_ffff_tmp91, bytetest_8f_8f);
          struct_Ll.cc = simd_or(r800_ffff_tmp99, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp125);
          bytetest_91_91 = simd_and(tmp16, tmp35);
          r800_ffff_tmp100 = simd_and(r800_ffff_tmp91, bytetest_91_91);
          struct_Ll.cc = simd_or(r800_ffff_tmp100, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp125);
          bytetest_93_93 = simd_and(tmp16, tmp67);
          r800_ffff_tmp101 = simd_and(r800_ffff_tmp91, bytetest_93_93);
          struct_Ll.cc = simd_or(r800_ffff_tmp101, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp125);
          r800_ffff_tmp102 = simd_not(tmp47);
          r800_ffff_tmp103 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp102), simd_andc(tmp37, basis_bits.bit_4));
          bytetest_95_9d = simd_and(tmp16, r800_ffff_tmp103);
          r800_ffff_tmp104 = simd_and(r800_ffff_tmp91, bytetest_95_9d);
          struct_Ll.cc = simd_or(r800_ffff_tmp104, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp125);
          bytetest_9f_9f = simd_and(tmp16, tmp169);
          r800_ffff_tmp105 = simd_and(r800_ffff_tmp91, bytetest_9f_9f);
          struct_Ll.cc = simd_or(r800_ffff_tmp105, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp125);
          bytetest_a1_a1 = simd_and(r800_ffff_tmp39, tmp35);
          r800_ffff_tmp106 = simd_and(r800_ffff_tmp91, bytetest_a1_a1);
          struct_Ll.cc = simd_or(r800_ffff_tmp106, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp125);
          bytetest_a3_a3 = simd_and(r800_ffff_tmp39, tmp67);
          r800_ffff_tmp107 = simd_and(r800_ffff_tmp91, bytetest_a3_a3);
          struct_Ll.cc = simd_or(r800_ffff_tmp107, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp125);
          bytetest_a5_a5 = simd_and(r800_ffff_tmp39, tmp91);
          r800_ffff_tmp108 = simd_and(r800_ffff_tmp91, bytetest_a5_a5);
          struct_Ll.cc = simd_or(r800_ffff_tmp108, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp125);
          bytetest_a7_a7 = simd_and(r800_ffff_tmp39, tmp104);
          r800_ffff_tmp109 = simd_and(r800_ffff_tmp91, bytetest_a7_a7);
          struct_Ll.cc = simd_or(r800_ffff_tmp109, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp125);
          bytetest_a9_a9 = simd_and(r800_ffff_tmp39, tmp119);
          r800_ffff_tmp110 = simd_and(r800_ffff_tmp91, bytetest_a9_a9);
          struct_Ll.cc = simd_or(r800_ffff_tmp110, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp125);
          bytetest_ab_ab = simd_and(r800_ffff_tmp39, tmp65);
          r800_ffff_tmp111 = simd_and(r800_ffff_tmp91, bytetest_ab_ab);
          struct_Ll.cc = simd_or(r800_ffff_tmp111, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp125);
          bytetest_ad_ad = simd_and(r800_ffff_tmp39, tmp19);
          r800_ffff_tmp112 = simd_and(r800_ffff_tmp91, bytetest_ad_ad);
          struct_Ll.cc = simd_or(r800_ffff_tmp112, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp125);
          bytetest_af_af = simd_and(r800_ffff_tmp39, tmp169);
          r800_ffff_tmp113 = simd_and(r800_ffff_tmp91, bytetest_af_af);
          struct_Ll.cc = simd_or(r800_ffff_tmp113, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp125);
          bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp35);
          r800_ffff_tmp114 = simd_and(r800_ffff_tmp91, bytetest_b1_b1);
          struct_Ll.cc = simd_or(r800_ffff_tmp114, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp125);
          bytetest_b3_b3 = simd_and(bytetest_b0_bf, tmp67);
          r800_ffff_tmp115 = simd_and(r800_ffff_tmp91, bytetest_b3_b3);
          struct_Ll.cc = simd_or(r800_ffff_tmp115, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp125);
          bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp91);
          r800_ffff_tmp116 = simd_and(r800_ffff_tmp91, bytetest_b5_b5);
          struct_Ll.cc = simd_or(r800_ffff_tmp116, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp125);
          bytetest_b7_b7 = simd_and(bytetest_b0_bf, tmp104);
          r800_ffff_tmp117 = simd_and(r800_ffff_tmp91, bytetest_b7_b7);
          struct_Ll.cc = simd_or(r800_ffff_tmp117, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp125);
          bytetest_b9_b9 = simd_and(bytetest_b0_bf, tmp119);
          r800_ffff_tmp118 = simd_and(r800_ffff_tmp91, bytetest_b9_b9);
          struct_Ll.cc = simd_or(r800_ffff_tmp118, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp125);
          bytetest_bb_bb = simd_and(bytetest_b0_bf, tmp65);
          r800_ffff_tmp119 = simd_and(r800_ffff_tmp91, bytetest_bb_bb);
          struct_Ll.cc = simd_or(r800_ffff_tmp119, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp125);
          bytetest_bd_bd = simd_and(bytetest_b0_bf, tmp19);
          r800_ffff_tmp120 = simd_and(r800_ffff_tmp91, bytetest_bd_bd);
          struct_Ll.cc = simd_or(r800_ffff_tmp120, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp125);
          bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp169);
          r800_ffff_tmp121 = simd_and(r800_ffff_tmp91, bytetest_bf_bf);
          struct_Ll.cc = simd_or(r800_ffff_tmp121, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp65);
          bytetest_81_81 = simd_and(tmp69, tmp35);
          r800_ffff_tmp122 = simd_and(r800_ffff_tmp5, bytetest_bb);
          carryQ.cq[46] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp122, carryQ.get_carry_in(46), r800_ffff_tmp123));
          r800_ffff_tmp124 = simd_and(r800_ffff_tmp123, bytetest_81_81);
          struct_Ll.cc = simd_or(r800_ffff_tmp124, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp65);
          bytetest_83_83 = simd_and(tmp69, tmp67);
          r800_ffff_tmp125 = simd_and(r800_ffff_tmp123, bytetest_83_83);
          struct_Ll.cc = simd_or(r800_ffff_tmp125, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp65);
          bytetest_85_85 = simd_and(tmp69, tmp91);
          r800_ffff_tmp126 = simd_and(r800_ffff_tmp123, bytetest_85_85);
          struct_Ll.cc = simd_or(r800_ffff_tmp126, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp65);
          bytetest_87_87 = simd_and(tmp69, tmp104);
          r800_ffff_tmp127 = simd_and(r800_ffff_tmp123, bytetest_87_87);
          struct_Ll.cc = simd_or(r800_ffff_tmp127, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp65);
          bytetest_89_89 = simd_and(tmp69, tmp119);
          r800_ffff_tmp128 = simd_and(r800_ffff_tmp123, bytetest_89_89);
          struct_Ll.cc = simd_or(r800_ffff_tmp128, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp65);
          bytetest_8b_8b = simd_and(tmp69, tmp65);
          r800_ffff_tmp129 = simd_and(r800_ffff_tmp123, bytetest_8b_8b);
          struct_Ll.cc = simd_or(r800_ffff_tmp129, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp65);
          bytetest_8d_8d = simd_and(tmp69, tmp19);
          r800_ffff_tmp130 = simd_and(r800_ffff_tmp123, bytetest_8d_8d);
          struct_Ll.cc = simd_or(r800_ffff_tmp130, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp65);
          bytetest_8f_8f = simd_and(tmp69, tmp169);
          r800_ffff_tmp131 = simd_and(r800_ffff_tmp123, bytetest_8f_8f);
          struct_Ll.cc = simd_or(r800_ffff_tmp131, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp65);
          bytetest_91_91 = simd_and(tmp16, tmp35);
          r800_ffff_tmp132 = simd_and(r800_ffff_tmp123, bytetest_91_91);
          struct_Ll.cc = simd_or(r800_ffff_tmp132, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp65);
          bytetest_93_93 = simd_and(tmp16, tmp67);
          r800_ffff_tmp133 = simd_and(r800_ffff_tmp123, bytetest_93_93);
          struct_Ll.cc = simd_or(r800_ffff_tmp133, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp65);
          bytetest_95_95 = simd_and(tmp16, tmp91);
          r800_ffff_tmp134 = simd_and(r800_ffff_tmp123, bytetest_95_95);
          struct_Ll.cc = simd_or(r800_ffff_tmp134, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp65);
          bytetest_97_97 = simd_and(tmp16, tmp104);
          r800_ffff_tmp135 = simd_and(r800_ffff_tmp123, bytetest_97_97);
          struct_Ll.cc = simd_or(r800_ffff_tmp135, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp65);
          bytetest_99_99 = simd_and(tmp16, tmp119);
          r800_ffff_tmp136 = simd_and(r800_ffff_tmp123, bytetest_99_99);
          struct_Ll.cc = simd_or(r800_ffff_tmp136, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp65);
          bytetest_9b_9b = simd_and(tmp16, tmp65);
          r800_ffff_tmp137 = simd_and(r800_ffff_tmp123, bytetest_9b_9b);
          struct_Ll.cc = simd_or(r800_ffff_tmp137, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp65);
          bytetest_9d_9d = simd_and(tmp16, tmp19);
          r800_ffff_tmp138 = simd_and(r800_ffff_tmp123, bytetest_9d_9d);
          struct_Ll.cc = simd_or(r800_ffff_tmp138, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp65);
          bytetest_9f_9f = simd_and(tmp16, tmp169);
          r800_ffff_tmp139 = simd_and(r800_ffff_tmp123, bytetest_9f_9f);
          struct_Ll.cc = simd_or(r800_ffff_tmp139, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp65);
          bytetest_a1_a1 = simd_and(r800_ffff_tmp39, tmp35);
          r800_ffff_tmp140 = simd_and(r800_ffff_tmp123, bytetest_a1_a1);
          struct_Ll.cc = simd_or(r800_ffff_tmp140, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp65);
          bytetest_a3_a3 = simd_and(r800_ffff_tmp39, tmp67);
          r800_ffff_tmp141 = simd_and(r800_ffff_tmp123, bytetest_a3_a3);
          struct_Ll.cc = simd_or(r800_ffff_tmp141, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp65);
          bytetest_a5_a5 = simd_and(r800_ffff_tmp39, tmp91);
          r800_ffff_tmp142 = simd_and(r800_ffff_tmp123, bytetest_a5_a5);
          struct_Ll.cc = simd_or(r800_ffff_tmp142, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp65);
          bytetest_a7_a7 = simd_and(r800_ffff_tmp39, tmp104);
          r800_ffff_tmp143 = simd_and(r800_ffff_tmp123, bytetest_a7_a7);
          struct_Ll.cc = simd_or(r800_ffff_tmp143, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp65);
          bytetest_a9_a9 = simd_and(r800_ffff_tmp39, tmp119);
          r800_ffff_tmp144 = simd_and(r800_ffff_tmp123, bytetest_a9_a9);
          struct_Ll.cc = simd_or(r800_ffff_tmp144, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp65);
          bytetest_ab_ab = simd_and(r800_ffff_tmp39, tmp65);
          r800_ffff_tmp145 = simd_and(r800_ffff_tmp123, bytetest_ab_ab);
          struct_Ll.cc = simd_or(r800_ffff_tmp145, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp65);
          bytetest_ad_ad = simd_and(r800_ffff_tmp39, tmp19);
          r800_ffff_tmp146 = simd_and(r800_ffff_tmp123, bytetest_ad_ad);
          struct_Ll.cc = simd_or(r800_ffff_tmp146, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp65);
          bytetest_af_af = simd_and(r800_ffff_tmp39, tmp169);
          r800_ffff_tmp147 = simd_and(r800_ffff_tmp123, bytetest_af_af);
          struct_Ll.cc = simd_or(r800_ffff_tmp147, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp65);
          bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp35);
          r800_ffff_tmp148 = simd_and(r800_ffff_tmp123, bytetest_b1_b1);
          struct_Ll.cc = simd_or(r800_ffff_tmp148, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp65);
          bytetest_b3_b3 = simd_and(bytetest_b0_bf, tmp67);
          r800_ffff_tmp149 = simd_and(r800_ffff_tmp123, bytetest_b3_b3);
          struct_Ll.cc = simd_or(r800_ffff_tmp149, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp65);
          bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp91);
          r800_ffff_tmp150 = simd_and(r800_ffff_tmp123, bytetest_b5_b5);
          struct_Ll.cc = simd_or(r800_ffff_tmp150, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp65);
          bytetest_b7_b7 = simd_and(bytetest_b0_bf, tmp104);
          r800_ffff_tmp151 = simd_and(r800_ffff_tmp123, bytetest_b7_b7);
          struct_Ll.cc = simd_or(r800_ffff_tmp151, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp65);
          bytetest_b9_b9 = simd_and(bytetest_b0_bf, tmp119);
          r800_ffff_tmp152 = simd_and(r800_ffff_tmp123, bytetest_b9_b9);
          struct_Ll.cc = simd_or(r800_ffff_tmp152, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp65);
          bytetest_bb_bb = simd_and(bytetest_b0_bf, tmp65);
          r800_ffff_tmp153 = simd_and(r800_ffff_tmp123, bytetest_bb_bb);
          struct_Ll.cc = simd_or(r800_ffff_tmp153, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp65);
          bytetest_bd_bd = simd_and(bytetest_b0_bf, tmp19);
          r800_ffff_tmp154 = simd_and(r800_ffff_tmp123, bytetest_bd_bd);
          struct_Ll.cc = simd_or(r800_ffff_tmp154, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bc = simd_and(bytetest_b0_bf, tmp140);
          bytetest_80_87 = simd_andc(tmp69, basis_bits.bit_4);
          r800_ffff_tmp155 = simd_and(r800_ffff_tmp5, bytetest_bc);
          carryQ.cq[47] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp155, carryQ.get_carry_in(47), r800_ffff_tmp156));
          r800_ffff_tmp157 = simd_and(r800_ffff_tmp156, bytetest_80_87);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp65);
          bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp169);
          r800_ffff_tmp158 = simd_and(r800_ffff_tmp123, bytetest_bf_bf);
          r800_ffff_tmp159 = simd_or(r800_ffff_tmp158, r800_ffff_tmp157);
          struct_Ll.cc = simd_or(r800_ffff_tmp159, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bc = simd_and(bytetest_b0_bf, tmp140);
          bytetest_90_95 = simd_andc(tmp157, tmp47);
          r800_ffff_tmp160 = simd_and(r800_ffff_tmp156, bytetest_90_95);
          struct_Ll.cc = simd_or(r800_ffff_tmp160, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bc = simd_and(bytetest_b0_bf, tmp140);
          bytetest_a0_a7 = simd_andc(r800_ffff_tmp39, basis_bits.bit_4);
          r800_ffff_tmp161 = simd_and(r800_ffff_tmp156, bytetest_a0_a7);
          struct_Ll.cc = simd_or(r800_ffff_tmp161, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bc = simd_and(bytetest_b0_bf, tmp140);
          bytetest_b0_b7 = simd_andc(bytetest_b0_bf, basis_bits.bit_4);
          r800_ffff_tmp162 = simd_and(r800_ffff_tmp156, bytetest_b0_b7);
          struct_Ll.cc = simd_or(r800_ffff_tmp162, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bd = simd_and(bytetest_b0_bf, tmp19);
          bytetest_80_85 = simd_andc(bytetest_80_87, tmp47);
          r800_ffff_tmp163 = simd_and(r800_ffff_tmp5, bytetest_bd);
          carryQ.cq[48] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp163, carryQ.get_carry_in(48), r800_ffff_tmp164));
          r800_ffff_tmp165 = simd_and(r800_ffff_tmp164, bytetest_80_85);
          struct_Ll.cc = simd_or(r800_ffff_tmp165, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bd = simd_and(bytetest_b0_bf, tmp19);
          bytetest_90_97 = simd_andc(tmp16, basis_bits.bit_4);
          r800_ffff_tmp166 = simd_and(r800_ffff_tmp164, bytetest_90_97);
          struct_Ll.cc = simd_or(r800_ffff_tmp166, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bd = simd_and(bytetest_b0_bf, tmp19);
          bytetest_a0_a7 = simd_andc(r800_ffff_tmp39, basis_bits.bit_4);
          r800_ffff_tmp167 = simd_and(r800_ffff_tmp164, bytetest_a0_a7);
          struct_Ll.cc = simd_or(r800_ffff_tmp167, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bd = simd_and(bytetest_b0_bf, tmp19);
          r800_ffff_tmp168 = simd_and(basis_bits.bit_4, tmp47);
          bytetest_b0_bd = simd_andc(bytetest_b0_bf, r800_ffff_tmp168);
          r800_ffff_tmp169 = simd_and(r800_ffff_tmp164, bytetest_b0_bd);
          struct_Ll.cc = simd_or(r800_ffff_tmp169, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_be = simd_and(bytetest_b0_bf, tmp159);
          bytetest_80_87 = simd_andc(tmp69, basis_bits.bit_4);
          r800_ffff_tmp170 = simd_and(r800_ffff_tmp5, bytetest_be);
          carryQ.cq[49] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp170, carryQ.get_carry_in(49), r800_ffff_tmp171));
          r800_ffff_tmp172 = simd_and(r800_ffff_tmp171, bytetest_80_87);
          struct_Ll.cc = simd_or(r800_ffff_tmp172, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_be = simd_and(bytetest_b0_bf, tmp159);
          bytetest_90_97 = simd_andc(tmp16, basis_bits.bit_4);
          r800_ffff_tmp173 = simd_and(r800_ffff_tmp171, bytetest_90_97);
          struct_Ll.cc = simd_or(r800_ffff_tmp173, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_be = simd_and(bytetest_b0_bf, tmp159);
          bytetest_a0_a7 = simd_andc(r800_ffff_tmp39, basis_bits.bit_4);
          r800_ffff_tmp174 = simd_and(r800_ffff_tmp171, bytetest_a0_a7);
          struct_Ll.cc = simd_or(r800_ffff_tmp174, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_be = simd_and(bytetest_b0_bf, tmp159);
          bytetest_b0_b4 = simd_andc(bytetest_b0_b7, tmp37);
          r800_ffff_tmp175 = simd_and(r800_ffff_tmp171, bytetest_b0_b4);
          struct_Ll.cc = simd_or(r800_ffff_tmp175, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_be = simd_and(bytetest_b0_bf, tmp159);
          r800_ffff_tmp176 = simd_and(tmp77, basis_bits.bit_6);
          bytetest_b6_b7 = simd_and(bytetest_b0_bf, r800_ffff_tmp176);
          r800_ffff_tmp177 = simd_and(r800_ffff_tmp171, bytetest_b6_b7);
          struct_Ll.cc = simd_or(r800_ffff_tmp177, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_be = simd_and(bytetest_b0_bf, tmp159);
          bytetest_be_be = simd_and(bytetest_b0_bf, tmp159);
          r800_ffff_tmp178 = simd_and(r800_ffff_tmp171, bytetest_be_be);
          struct_Ll.cc = simd_or(r800_ffff_tmp178, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp169);
          r800_ffff_tmp179 = simd_not(tmp8);
          r800_ffff_tmp180 = simd_or(simd_and(basis_bits.bit_5, r800_ffff_tmp179), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
          bytetest_82_84 = simd_and(bytetest_80_87, r800_ffff_tmp180);
          r800_ffff_tmp181 = simd_and(r800_ffff_tmp5, bytetest_bf);
          carryQ.cq[50] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp181, carryQ.get_carry_in(50), r800_ffff_tmp182));
          r800_ffff_tmp183 = simd_and(r800_ffff_tmp182, bytetest_82_84);
          struct_Ll.cc = simd_or(r800_ffff_tmp183, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp169);
          bytetest_86_87 = simd_and(tmp69, r800_ffff_tmp176);
          r800_ffff_tmp184 = simd_and(r800_ffff_tmp182, bytetest_86_87);
          struct_Ll.cc = simd_or(r800_ffff_tmp184, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp169);
          bytetest_90_93 = simd_andc(tmp16, tmp7);
          r800_ffff_tmp185 = simd_and(r800_ffff_tmp182, bytetest_90_93);
          struct_Ll.cc = simd_or(r800_ffff_tmp185, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp169);
          bytetest_96_97 = simd_and(tmp16, r800_ffff_tmp176);
          r800_ffff_tmp186 = simd_and(r800_ffff_tmp182, bytetest_96_97);
          struct_Ll.cc = simd_or(r800_ffff_tmp186, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp169);
          bytetest_a0_a7 = simd_andc(r800_ffff_tmp39, basis_bits.bit_4);
          r800_ffff_tmp187 = simd_and(r800_ffff_tmp182, bytetest_a0_a7);
          struct_Ll.cc = simd_or(r800_ffff_tmp187, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp169);
          bytetest_b2_b4 = simd_and(bytetest_b0_b7, r800_ffff_tmp180);
          r800_ffff_tmp188 = simd_and(r800_ffff_tmp182, bytetest_b2_b4);
          struct_Ll.cc = simd_or(r800_ffff_tmp188, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp169);
          bytetest_b6_b7 = simd_and(bytetest_b0_bf, r800_ffff_tmp176);
          r800_ffff_tmp189 = simd_and(r800_ffff_tmp182, bytetest_b6_b7);
          struct_Ll.cc = simd_or(r800_ffff_tmp189, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_84 = simd_and(tmp69, tmp78);
          bytetest_8a_8a = simd_and(tmp69, tmp125);
          r800_ffff_tmp190 = simd_and(tmp27, bytetest_e2);
          carryQ.cq[51] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp190, carryQ.get_carry_in(51), r800_ffff_tmp191));
          r800_ffff_tmp192 = simd_and(r800_ffff_tmp191, bytetest_84);
          carryQ.cq[52] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp192, carryQ.get_carry_in(52), r800_ffff_tmp193));
          r800_ffff_tmp194 = simd_and(r800_ffff_tmp193, bytetest_8a_8a);
          struct_Ll.cc = simd_or(r800_ffff_tmp194, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_84 = simd_and(tmp69, tmp78);
          bytetest_8e_8f = simd_and(tmp69, tmp40);
          r800_ffff_tmp195 = simd_and(r800_ffff_tmp193, bytetest_8e_8f);
          struct_Ll.cc = simd_or(r800_ffff_tmp195, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_84 = simd_and(tmp69, tmp78);
          bytetest_93_93 = simd_and(tmp16, tmp67);
          r800_ffff_tmp196 = simd_and(r800_ffff_tmp193, bytetest_93_93);
          struct_Ll.cc = simd_or(r800_ffff_tmp196, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_84 = simd_and(tmp69, tmp78);
          bytetest_af_af = simd_and(r800_ffff_tmp39, tmp169);
          r800_ffff_tmp197 = simd_and(r800_ffff_tmp193, bytetest_af_af);
          struct_Ll.cc = simd_or(r800_ffff_tmp197, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_84 = simd_and(tmp69, tmp78);
          bytetest_b4_b4 = simd_and(bytetest_b0_bf, tmp78);
          r800_ffff_tmp198 = simd_and(r800_ffff_tmp193, bytetest_b4_b4);
          struct_Ll.cc = simd_or(r800_ffff_tmp198, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_84 = simd_and(tmp69, tmp78);
          bytetest_b9_b9 = simd_and(bytetest_b0_bf, tmp119);
          r800_ffff_tmp199 = simd_and(r800_ffff_tmp193, bytetest_b9_b9);
          struct_Ll.cc = simd_or(r800_ffff_tmp199, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_84 = simd_and(tmp69, tmp78);
          r800_ffff_tmp200 = simd_andc(tmp17, basis_bits.bit_6);
          bytetest_bc_bd = simd_and(bytetest_b0_bf, r800_ffff_tmp200);
          r800_ffff_tmp201 = simd_and(r800_ffff_tmp193, bytetest_bc_bd);
          struct_Ll.cc = simd_or(r800_ffff_tmp201, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_85 = simd_and(tmp69, tmp91);
          bytetest_86_89 = simd_and(tmp69, tmp62);
          r800_ffff_tmp202 = simd_and(r800_ffff_tmp191, bytetest_85);
          carryQ.cq[53] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp202, carryQ.get_carry_in(53), r800_ffff_tmp203));
          r800_ffff_tmp204 = simd_and(r800_ffff_tmp203, bytetest_86_89);
          struct_Ll.cc = simd_or(r800_ffff_tmp204, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_85 = simd_and(tmp69, tmp91);
          bytetest_8e_8e = simd_and(tmp69, tmp159);
          r800_ffff_tmp205 = simd_and(r800_ffff_tmp203, bytetest_8e_8e);
          struct_Ll.cc = simd_or(r800_ffff_tmp205, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_86 = simd_and(tmp69, tmp99);
          bytetest_84_84 = simd_and(tmp69, tmp78);
          r800_ffff_tmp206 = simd_and(r800_ffff_tmp191, bytetest_86);
          carryQ.cq[54] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp206, carryQ.get_carry_in(54), r800_ffff_tmp207));
          r800_ffff_tmp208 = simd_and(r800_ffff_tmp207, bytetest_84_84);
          struct_Ll.cc = simd_or(r800_ffff_tmp208, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b1 = simd_and(bytetest_b0_bf, tmp35);
          r800_ffff_tmp209 = simd_and(basis_bits.bit_3, tmp169);
          bytetest_80_9e = simd_andc(tmp36, r800_ffff_tmp209);
          r800_ffff_tmp210 = simd_and(r800_ffff_tmp191, bytetest_b1);
          carryQ.cq[55] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp210, carryQ.get_carry_in(55), r800_ffff_tmp211));
          r800_ffff_tmp212 = simd_and(r800_ffff_tmp211, bytetest_80_9e);
          bytetest_b0 = simd_andc(bytetest_b0_bf, tmp9);
          bytetest_b0_bf = simd_and(tmp14, tmp12);
          r800_ffff_tmp213 = simd_and(r800_ffff_tmp191, bytetest_b0);
          carryQ.cq[56] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp213, carryQ.get_carry_in(56), r800_ffff_tmp214));
          r800_ffff_tmp215 = simd_and(r800_ffff_tmp214, bytetest_b0_bf);
          r800_ffff_tmp216 = simd_or(r800_ffff_tmp215, r800_ffff_tmp212);
          struct_Ll.cc = simd_or(r800_ffff_tmp216, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b1 = simd_and(bytetest_b0_bf, tmp35);
          bytetest_a1_a1 = simd_and(r800_ffff_tmp39, tmp35);
          r800_ffff_tmp217 = simd_and(r800_ffff_tmp211, bytetest_a1_a1);
          struct_Ll.cc = simd_or(r800_ffff_tmp217, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b1 = simd_and(bytetest_b0_bf, tmp35);
          r800_ffff_tmp218 = simd_and(r800_ffff_tmp39, tmp77);
          r800_ffff_tmp219 = simd_not(basis_bits.bit_7);
          r800_ffff_tmp220 = simd_or(simd_and(basis_bits.bit_6, r800_ffff_tmp219), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
          bytetest_a5_a6 = simd_and(r800_ffff_tmp218, r800_ffff_tmp220);
          r800_ffff_tmp221 = simd_and(r800_ffff_tmp211, bytetest_a5_a6);
          struct_Ll.cc = simd_or(r800_ffff_tmp221, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b1 = simd_and(bytetest_b0_bf, tmp35);
          bytetest_a8_a8 = simd_and(r800_ffff_tmp39, tmp111);
          r800_ffff_tmp222 = simd_and(r800_ffff_tmp211, bytetest_a8_a8);
          struct_Ll.cc = simd_or(r800_ffff_tmp222, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b1 = simd_and(bytetest_b0_bf, tmp35);
          bytetest_aa_aa = simd_and(r800_ffff_tmp39, tmp125);
          r800_ffff_tmp223 = simd_and(r800_ffff_tmp211, bytetest_aa_aa);
          struct_Ll.cc = simd_or(r800_ffff_tmp223, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b1 = simd_and(bytetest_b0_bf, tmp35);
          bytetest_ac_ac = simd_and(r800_ffff_tmp39, tmp140);
          r800_ffff_tmp224 = simd_and(r800_ffff_tmp211, bytetest_ac_ac);
          struct_Ll.cc = simd_or(r800_ffff_tmp224, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b1 = simd_and(bytetest_b0_bf, tmp35);
          bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp35);
          r800_ffff_tmp225 = simd_and(r800_ffff_tmp211, bytetest_b1_b1);
          struct_Ll.cc = simd_or(r800_ffff_tmp225, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b1 = simd_and(bytetest_b0_bf, tmp35);
          r800_ffff_tmp226 = simd_or(simd_and(basis_bits.bit_5, r800_ffff_tmp179), simd_andc(tmp3, basis_bits.bit_5));
          bytetest_b3_b4 = simd_and(bytetest_b0_b7, r800_ffff_tmp226);
          r800_ffff_tmp227 = simd_and(r800_ffff_tmp211, bytetest_b3_b4);
          struct_Ll.cc = simd_or(r800_ffff_tmp227, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b1 = simd_and(bytetest_b0_bf, tmp35);
          bytetest_b6_bb = simd_and(bytetest_b0_bf, tmp148);
          r800_ffff_tmp228 = simd_and(r800_ffff_tmp211, bytetest_b6_bb);
          struct_Ll.cc = simd_or(r800_ffff_tmp228, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_81_81 = simd_and(tmp69, tmp35);
          r800_ffff_tmp229 = simd_and(r800_ffff_tmp191, bytetest_b2);
          carryQ.cq[57] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp229, carryQ.get_carry_in(57), r800_ffff_tmp230));
          r800_ffff_tmp231 = simd_and(r800_ffff_tmp230, bytetest_81_81);
          struct_Ll.cc = simd_or(r800_ffff_tmp231, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_83_83 = simd_and(tmp69, tmp67);
          r800_ffff_tmp232 = simd_and(r800_ffff_tmp230, bytetest_83_83);
          struct_Ll.cc = simd_or(r800_ffff_tmp232, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_85_85 = simd_and(tmp69, tmp91);
          r800_ffff_tmp233 = simd_and(r800_ffff_tmp230, bytetest_85_85);
          struct_Ll.cc = simd_or(r800_ffff_tmp233, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_87_87 = simd_and(tmp69, tmp104);
          r800_ffff_tmp234 = simd_and(r800_ffff_tmp230, bytetest_87_87);
          struct_Ll.cc = simd_or(r800_ffff_tmp234, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_89_89 = simd_and(tmp69, tmp119);
          r800_ffff_tmp235 = simd_and(r800_ffff_tmp230, bytetest_89_89);
          struct_Ll.cc = simd_or(r800_ffff_tmp235, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_8b_8b = simd_and(tmp69, tmp65);
          r800_ffff_tmp236 = simd_and(r800_ffff_tmp230, bytetest_8b_8b);
          struct_Ll.cc = simd_or(r800_ffff_tmp236, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_8d_8d = simd_and(tmp69, tmp19);
          r800_ffff_tmp237 = simd_and(r800_ffff_tmp230, bytetest_8d_8d);
          struct_Ll.cc = simd_or(r800_ffff_tmp237, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_8f_8f = simd_and(tmp69, tmp169);
          r800_ffff_tmp238 = simd_and(r800_ffff_tmp230, bytetest_8f_8f);
          struct_Ll.cc = simd_or(r800_ffff_tmp238, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_91_91 = simd_and(tmp16, tmp35);
          r800_ffff_tmp239 = simd_and(r800_ffff_tmp230, bytetest_91_91);
          struct_Ll.cc = simd_or(r800_ffff_tmp239, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_93_93 = simd_and(tmp16, tmp67);
          r800_ffff_tmp240 = simd_and(r800_ffff_tmp230, bytetest_93_93);
          struct_Ll.cc = simd_or(r800_ffff_tmp240, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_95_95 = simd_and(tmp16, tmp91);
          r800_ffff_tmp241 = simd_and(r800_ffff_tmp230, bytetest_95_95);
          struct_Ll.cc = simd_or(r800_ffff_tmp241, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_97_97 = simd_and(tmp16, tmp104);
          r800_ffff_tmp242 = simd_and(r800_ffff_tmp230, bytetest_97_97);
          struct_Ll.cc = simd_or(r800_ffff_tmp242, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_99_99 = simd_and(tmp16, tmp119);
          r800_ffff_tmp243 = simd_and(r800_ffff_tmp230, bytetest_99_99);
          struct_Ll.cc = simd_or(r800_ffff_tmp243, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_9b_9b = simd_and(tmp16, tmp65);
          r800_ffff_tmp244 = simd_and(r800_ffff_tmp230, bytetest_9b_9b);
          struct_Ll.cc = simd_or(r800_ffff_tmp244, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_9d_9d = simd_and(tmp16, tmp19);
          r800_ffff_tmp245 = simd_and(r800_ffff_tmp230, bytetest_9d_9d);
          struct_Ll.cc = simd_or(r800_ffff_tmp245, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_9f_9f = simd_and(tmp16, tmp169);
          r800_ffff_tmp246 = simd_and(r800_ffff_tmp230, bytetest_9f_9f);
          struct_Ll.cc = simd_or(r800_ffff_tmp246, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_a1_a1 = simd_and(r800_ffff_tmp39, tmp35);
          r800_ffff_tmp247 = simd_and(r800_ffff_tmp230, bytetest_a1_a1);
          struct_Ll.cc = simd_or(r800_ffff_tmp247, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_a3_a3 = simd_and(r800_ffff_tmp39, tmp67);
          r800_ffff_tmp248 = simd_and(r800_ffff_tmp230, bytetest_a3_a3);
          struct_Ll.cc = simd_or(r800_ffff_tmp248, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_a5_a5 = simd_and(r800_ffff_tmp39, tmp91);
          r800_ffff_tmp249 = simd_and(r800_ffff_tmp230, bytetest_a5_a5);
          struct_Ll.cc = simd_or(r800_ffff_tmp249, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_a7_a7 = simd_and(r800_ffff_tmp39, tmp104);
          r800_ffff_tmp250 = simd_and(r800_ffff_tmp230, bytetest_a7_a7);
          struct_Ll.cc = simd_or(r800_ffff_tmp250, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_a9_a9 = simd_and(r800_ffff_tmp39, tmp119);
          r800_ffff_tmp251 = simd_and(r800_ffff_tmp230, bytetest_a9_a9);
          struct_Ll.cc = simd_or(r800_ffff_tmp251, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_ab_ab = simd_and(r800_ffff_tmp39, tmp65);
          r800_ffff_tmp252 = simd_and(r800_ffff_tmp230, bytetest_ab_ab);
          struct_Ll.cc = simd_or(r800_ffff_tmp252, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_ad_ad = simd_and(r800_ffff_tmp39, tmp19);
          r800_ffff_tmp253 = simd_and(r800_ffff_tmp230, bytetest_ad_ad);
          struct_Ll.cc = simd_or(r800_ffff_tmp253, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_af_af = simd_and(r800_ffff_tmp39, tmp169);
          r800_ffff_tmp254 = simd_and(r800_ffff_tmp230, bytetest_af_af);
          struct_Ll.cc = simd_or(r800_ffff_tmp254, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp35);
          r800_ffff_tmp255 = simd_and(r800_ffff_tmp230, bytetest_b1_b1);
          struct_Ll.cc = simd_or(r800_ffff_tmp255, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_b3_b3 = simd_and(bytetest_b0_bf, tmp67);
          r800_ffff_tmp256 = simd_and(r800_ffff_tmp230, bytetest_b3_b3);
          struct_Ll.cc = simd_or(r800_ffff_tmp256, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp91);
          r800_ffff_tmp257 = simd_and(r800_ffff_tmp230, bytetest_b5_b5);
          struct_Ll.cc = simd_or(r800_ffff_tmp257, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_b7_b7 = simd_and(bytetest_b0_bf, tmp104);
          r800_ffff_tmp258 = simd_and(r800_ffff_tmp230, bytetest_b7_b7);
          struct_Ll.cc = simd_or(r800_ffff_tmp258, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_b9_b9 = simd_and(bytetest_b0_bf, tmp119);
          r800_ffff_tmp259 = simd_and(r800_ffff_tmp230, bytetest_b9_b9);
          struct_Ll.cc = simd_or(r800_ffff_tmp259, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_bb_bb = simd_and(bytetest_b0_bf, tmp65);
          r800_ffff_tmp260 = simd_and(r800_ffff_tmp230, bytetest_bb_bb);
          struct_Ll.cc = simd_or(r800_ffff_tmp260, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_bd_bd = simd_and(bytetest_b0_bf, tmp19);
          r800_ffff_tmp261 = simd_and(r800_ffff_tmp230, bytetest_bd_bd);
          struct_Ll.cc = simd_or(r800_ffff_tmp261, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp169);
          r800_ffff_tmp262 = simd_and(r800_ffff_tmp230, bytetest_bf_bf);
          struct_Ll.cc = simd_or(r800_ffff_tmp262, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp67);
          bytetest_81_81 = simd_and(tmp69, tmp35);
          r800_ffff_tmp263 = simd_and(r800_ffff_tmp191, bytetest_b3);
          carryQ.cq[58] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp263, carryQ.get_carry_in(58), r800_ffff_tmp264));
          r800_ffff_tmp265 = simd_and(r800_ffff_tmp264, bytetest_81_81);
          struct_Ll.cc = simd_or(r800_ffff_tmp265, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp67);
          bytetest_83_83 = simd_and(tmp69, tmp67);
          r800_ffff_tmp266 = simd_and(r800_ffff_tmp264, bytetest_83_83);
          struct_Ll.cc = simd_or(r800_ffff_tmp266, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp67);
          bytetest_85_85 = simd_and(tmp69, tmp91);
          r800_ffff_tmp267 = simd_and(r800_ffff_tmp264, bytetest_85_85);
          struct_Ll.cc = simd_or(r800_ffff_tmp267, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp67);
          bytetest_87_87 = simd_and(tmp69, tmp104);
          r800_ffff_tmp268 = simd_and(r800_ffff_tmp264, bytetest_87_87);
          struct_Ll.cc = simd_or(r800_ffff_tmp268, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp67);
          bytetest_89_89 = simd_and(tmp69, tmp119);
          r800_ffff_tmp269 = simd_and(r800_ffff_tmp264, bytetest_89_89);
          struct_Ll.cc = simd_or(r800_ffff_tmp269, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp67);
          bytetest_8b_8b = simd_and(tmp69, tmp65);
          r800_ffff_tmp270 = simd_and(r800_ffff_tmp264, bytetest_8b_8b);
          struct_Ll.cc = simd_or(r800_ffff_tmp270, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp67);
          bytetest_8d_8d = simd_and(tmp69, tmp19);
          r800_ffff_tmp271 = simd_and(r800_ffff_tmp264, bytetest_8d_8d);
          struct_Ll.cc = simd_or(r800_ffff_tmp271, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp67);
          bytetest_8f_8f = simd_and(tmp69, tmp169);
          r800_ffff_tmp272 = simd_and(r800_ffff_tmp264, bytetest_8f_8f);
          struct_Ll.cc = simd_or(r800_ffff_tmp272, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp67);
          bytetest_91_91 = simd_and(tmp16, tmp35);
          r800_ffff_tmp273 = simd_and(r800_ffff_tmp264, bytetest_91_91);
          struct_Ll.cc = simd_or(r800_ffff_tmp273, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp67);
          bytetest_93_93 = simd_and(tmp16, tmp67);
          r800_ffff_tmp274 = simd_and(r800_ffff_tmp264, bytetest_93_93);
          struct_Ll.cc = simd_or(r800_ffff_tmp274, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp67);
          bytetest_95_95 = simd_and(tmp16, tmp91);
          r800_ffff_tmp275 = simd_and(r800_ffff_tmp264, bytetest_95_95);
          struct_Ll.cc = simd_or(r800_ffff_tmp275, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp67);
          bytetest_97_97 = simd_and(tmp16, tmp104);
          r800_ffff_tmp276 = simd_and(r800_ffff_tmp264, bytetest_97_97);
          struct_Ll.cc = simd_or(r800_ffff_tmp276, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp67);
          bytetest_99_99 = simd_and(tmp16, tmp119);
          r800_ffff_tmp277 = simd_and(r800_ffff_tmp264, bytetest_99_99);
          struct_Ll.cc = simd_or(r800_ffff_tmp277, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp67);
          bytetest_9b_9b = simd_and(tmp16, tmp65);
          r800_ffff_tmp278 = simd_and(r800_ffff_tmp264, bytetest_9b_9b);
          struct_Ll.cc = simd_or(r800_ffff_tmp278, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp67);
          bytetest_9d_9d = simd_and(tmp16, tmp19);
          r800_ffff_tmp279 = simd_and(r800_ffff_tmp264, bytetest_9d_9d);
          struct_Ll.cc = simd_or(r800_ffff_tmp279, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp67);
          bytetest_9f_9f = simd_and(tmp16, tmp169);
          r800_ffff_tmp280 = simd_and(r800_ffff_tmp264, bytetest_9f_9f);
          struct_Ll.cc = simd_or(r800_ffff_tmp280, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp67);
          bytetest_a1_a1 = simd_and(r800_ffff_tmp39, tmp35);
          r800_ffff_tmp281 = simd_and(r800_ffff_tmp264, bytetest_a1_a1);
          struct_Ll.cc = simd_or(r800_ffff_tmp281, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp67);
          bytetest_a3_a4 = simd_and(bytetest_a0_a7, r800_ffff_tmp226);
          r800_ffff_tmp282 = simd_and(r800_ffff_tmp264, bytetest_a3_a4);
          struct_Ll.cc = simd_or(r800_ffff_tmp282, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp67);
          bytetest_ac_ac = simd_and(r800_ffff_tmp39, tmp140);
          r800_ffff_tmp283 = simd_and(r800_ffff_tmp264, bytetest_ac_ac);
          struct_Ll.cc = simd_or(r800_ffff_tmp283, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp67);
          bytetest_ae_ae = simd_and(r800_ffff_tmp39, tmp159);
          r800_ffff_tmp284 = simd_and(r800_ffff_tmp264, bytetest_ae_ae);
          struct_Ll.cc = simd_or(r800_ffff_tmp284, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp67);
          bytetest_b3_b3 = simd_and(bytetest_b0_bf, tmp67);
          r800_ffff_tmp285 = simd_and(r800_ffff_tmp264, bytetest_b3_b3);
          struct_Ll.cc = simd_or(r800_ffff_tmp285, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b4 = simd_and(bytetest_b0_bf, tmp78);
          r800_ffff_tmp286 = simd_and(basis_bits.bit_2, tmp100);
          bytetest_80_a5 = simd_andc(tmp14, r800_ffff_tmp286);
          r800_ffff_tmp287 = simd_and(r800_ffff_tmp191, bytetest_b4);
          carryQ.cq[59] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp287, carryQ.get_carry_in(59), r800_ffff_tmp288));
          r800_ffff_tmp289 = simd_and(r800_ffff_tmp288, bytetest_80_a5);
          struct_Ll.cc = simd_or(r800_ffff_tmp289, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b4 = simd_and(bytetest_b0_bf, tmp78);
          bytetest_a7_a7 = simd_and(r800_ffff_tmp39, tmp104);
          r800_ffff_tmp290 = simd_and(r800_ffff_tmp288, bytetest_a7_a7);
          struct_Ll.cc = simd_or(r800_ffff_tmp290, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b4 = simd_and(bytetest_b0_bf, tmp78);
          bytetest_ad_ad = simd_and(r800_ffff_tmp39, tmp19);
          r800_ffff_tmp291 = simd_and(r800_ffff_tmp288, bytetest_ad_ad);
          struct_Ll.cc = simd_or(r800_ffff_tmp291, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_99 = simd_and(tmp16, tmp119);
          bytetest_81_81 = simd_and(tmp69, tmp35);
          r800_ffff_tmp292 = simd_and(tmp27, bytetest_ea);
          carryQ.cq[60] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp292, carryQ.get_carry_in(60), r800_ffff_tmp293));
          r800_ffff_tmp294 = simd_and(r800_ffff_tmp293, bytetest_99);
          carryQ.cq[61] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp294, carryQ.get_carry_in(61), r800_ffff_tmp295));
          r800_ffff_tmp296 = simd_and(r800_ffff_tmp295, bytetest_81_81);
          struct_Ll.cc = simd_or(r800_ffff_tmp296, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_99 = simd_and(tmp16, tmp119);
          bytetest_83_83 = simd_and(tmp69, tmp67);
          r800_ffff_tmp297 = simd_and(r800_ffff_tmp295, bytetest_83_83);
          struct_Ll.cc = simd_or(r800_ffff_tmp297, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_99 = simd_and(tmp16, tmp119);
          bytetest_85_85 = simd_and(tmp69, tmp91);
          r800_ffff_tmp298 = simd_and(r800_ffff_tmp295, bytetest_85_85);
          struct_Ll.cc = simd_or(r800_ffff_tmp298, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_99 = simd_and(tmp16, tmp119);
          bytetest_87_87 = simd_and(tmp69, tmp104);
          r800_ffff_tmp299 = simd_and(r800_ffff_tmp295, bytetest_87_87);
          struct_Ll.cc = simd_or(r800_ffff_tmp299, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_99 = simd_and(tmp16, tmp119);
          bytetest_89_89 = simd_and(tmp69, tmp119);
          r800_ffff_tmp300 = simd_and(r800_ffff_tmp295, bytetest_89_89);
          struct_Ll.cc = simd_or(r800_ffff_tmp300, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_99 = simd_and(tmp16, tmp119);
          bytetest_8b_8b = simd_and(tmp69, tmp65);
          r800_ffff_tmp301 = simd_and(r800_ffff_tmp295, bytetest_8b_8b);
          struct_Ll.cc = simd_or(r800_ffff_tmp301, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_99 = simd_and(tmp16, tmp119);
          bytetest_8d_8d = simd_and(tmp69, tmp19);
          r800_ffff_tmp302 = simd_and(r800_ffff_tmp295, bytetest_8d_8d);
          struct_Ll.cc = simd_or(r800_ffff_tmp302, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_99 = simd_and(tmp16, tmp119);
          bytetest_8f_8f = simd_and(tmp69, tmp169);
          r800_ffff_tmp303 = simd_and(r800_ffff_tmp295, bytetest_8f_8f);
          struct_Ll.cc = simd_or(r800_ffff_tmp303, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_99 = simd_and(tmp16, tmp119);
          bytetest_91_91 = simd_and(tmp16, tmp35);
          r800_ffff_tmp304 = simd_and(r800_ffff_tmp295, bytetest_91_91);
          struct_Ll.cc = simd_or(r800_ffff_tmp304, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_99 = simd_and(tmp16, tmp119);
          bytetest_93_93 = simd_and(tmp16, tmp67);
          r800_ffff_tmp305 = simd_and(r800_ffff_tmp295, bytetest_93_93);
          struct_Ll.cc = simd_or(r800_ffff_tmp305, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_99 = simd_and(tmp16, tmp119);
          bytetest_95_95 = simd_and(tmp16, tmp91);
          r800_ffff_tmp306 = simd_and(r800_ffff_tmp295, bytetest_95_95);
          struct_Ll.cc = simd_or(r800_ffff_tmp306, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_99 = simd_and(tmp16, tmp119);
          bytetest_97_97 = simd_and(tmp16, tmp104);
          r800_ffff_tmp307 = simd_and(r800_ffff_tmp295, bytetest_97_97);
          struct_Ll.cc = simd_or(r800_ffff_tmp307, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_99 = simd_and(tmp16, tmp119);
          bytetest_99_99 = simd_and(tmp16, tmp119);
          r800_ffff_tmp308 = simd_and(r800_ffff_tmp295, bytetest_99_99);
          struct_Ll.cc = simd_or(r800_ffff_tmp308, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_99 = simd_and(tmp16, tmp119);
          bytetest_9b_9b = simd_and(tmp16, tmp65);
          r800_ffff_tmp309 = simd_and(r800_ffff_tmp295, bytetest_9b_9b);
          struct_Ll.cc = simd_or(r800_ffff_tmp309, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_99 = simd_and(tmp16, tmp119);
          bytetest_9d_9d = simd_and(tmp16, tmp19);
          r800_ffff_tmp310 = simd_and(r800_ffff_tmp295, bytetest_9d_9d);
          struct_Ll.cc = simd_or(r800_ffff_tmp310, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_99 = simd_and(tmp16, tmp119);
          bytetest_9f_9f = simd_and(tmp16, tmp169);
          r800_ffff_tmp311 = simd_and(r800_ffff_tmp295, bytetest_9f_9f);
          struct_Ll.cc = simd_or(r800_ffff_tmp311, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_99 = simd_and(tmp16, tmp119);
          bytetest_a1_a1 = simd_and(r800_ffff_tmp39, tmp35);
          r800_ffff_tmp312 = simd_and(r800_ffff_tmp295, bytetest_a1_a1);
          struct_Ll.cc = simd_or(r800_ffff_tmp312, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_99 = simd_and(tmp16, tmp119);
          bytetest_a3_a3 = simd_and(r800_ffff_tmp39, tmp67);
          r800_ffff_tmp313 = simd_and(r800_ffff_tmp295, bytetest_a3_a3);
          struct_Ll.cc = simd_or(r800_ffff_tmp313, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_99 = simd_and(tmp16, tmp119);
          bytetest_a5_a5 = simd_and(r800_ffff_tmp39, tmp91);
          r800_ffff_tmp314 = simd_and(r800_ffff_tmp295, bytetest_a5_a5);
          struct_Ll.cc = simd_or(r800_ffff_tmp314, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_99 = simd_and(tmp16, tmp119);
          bytetest_a7_a7 = simd_and(r800_ffff_tmp39, tmp104);
          r800_ffff_tmp315 = simd_and(r800_ffff_tmp295, bytetest_a7_a7);
          struct_Ll.cc = simd_or(r800_ffff_tmp315, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_99 = simd_and(tmp16, tmp119);
          bytetest_a9_a9 = simd_and(r800_ffff_tmp39, tmp119);
          r800_ffff_tmp316 = simd_and(r800_ffff_tmp295, bytetest_a9_a9);
          struct_Ll.cc = simd_or(r800_ffff_tmp316, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_99 = simd_and(tmp16, tmp119);
          bytetest_ab_ab = simd_and(r800_ffff_tmp39, tmp65);
          r800_ffff_tmp317 = simd_and(r800_ffff_tmp295, bytetest_ab_ab);
          struct_Ll.cc = simd_or(r800_ffff_tmp317, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_99 = simd_and(tmp16, tmp119);
          bytetest_ad_ad = simd_and(r800_ffff_tmp39, tmp19);
          r800_ffff_tmp318 = simd_and(r800_ffff_tmp295, bytetest_ad_ad);
          struct_Ll.cc = simd_or(r800_ffff_tmp318, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9a = simd_and(tmp16, tmp125);
          bytetest_81_81 = simd_and(tmp69, tmp35);
          r800_ffff_tmp319 = simd_and(r800_ffff_tmp293, bytetest_9a);
          carryQ.cq[62] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp319, carryQ.get_carry_in(62), r800_ffff_tmp320));
          r800_ffff_tmp321 = simd_and(r800_ffff_tmp320, bytetest_81_81);
          struct_Ll.cc = simd_or(r800_ffff_tmp321, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9a = simd_and(tmp16, tmp125);
          bytetest_83_83 = simd_and(tmp69, tmp67);
          r800_ffff_tmp322 = simd_and(r800_ffff_tmp320, bytetest_83_83);
          struct_Ll.cc = simd_or(r800_ffff_tmp322, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9a = simd_and(tmp16, tmp125);
          bytetest_85_85 = simd_and(tmp69, tmp91);
          r800_ffff_tmp323 = simd_and(r800_ffff_tmp320, bytetest_85_85);
          struct_Ll.cc = simd_or(r800_ffff_tmp323, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9a = simd_and(tmp16, tmp125);
          bytetest_87_87 = simd_and(tmp69, tmp104);
          r800_ffff_tmp324 = simd_and(r800_ffff_tmp320, bytetest_87_87);
          struct_Ll.cc = simd_or(r800_ffff_tmp324, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9a = simd_and(tmp16, tmp125);
          bytetest_89_89 = simd_and(tmp69, tmp119);
          r800_ffff_tmp325 = simd_and(r800_ffff_tmp320, bytetest_89_89);
          struct_Ll.cc = simd_or(r800_ffff_tmp325, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9a = simd_and(tmp16, tmp125);
          bytetest_8b_8b = simd_and(tmp69, tmp65);
          r800_ffff_tmp326 = simd_and(r800_ffff_tmp320, bytetest_8b_8b);
          struct_Ll.cc = simd_or(r800_ffff_tmp326, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9a = simd_and(tmp16, tmp125);
          bytetest_8d_8d = simd_and(tmp69, tmp19);
          r800_ffff_tmp327 = simd_and(r800_ffff_tmp320, bytetest_8d_8d);
          struct_Ll.cc = simd_or(r800_ffff_tmp327, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9a = simd_and(tmp16, tmp125);
          bytetest_8f_8f = simd_and(tmp69, tmp169);
          r800_ffff_tmp328 = simd_and(r800_ffff_tmp320, bytetest_8f_8f);
          struct_Ll.cc = simd_or(r800_ffff_tmp328, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9a = simd_and(tmp16, tmp125);
          bytetest_91_91 = simd_and(tmp16, tmp35);
          r800_ffff_tmp329 = simd_and(r800_ffff_tmp320, bytetest_91_91);
          struct_Ll.cc = simd_or(r800_ffff_tmp329, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9a = simd_and(tmp16, tmp125);
          bytetest_93_93 = simd_and(tmp16, tmp67);
          r800_ffff_tmp330 = simd_and(r800_ffff_tmp320, bytetest_93_93);
          struct_Ll.cc = simd_or(r800_ffff_tmp330, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9a = simd_and(tmp16, tmp125);
          bytetest_95_95 = simd_and(tmp16, tmp91);
          r800_ffff_tmp331 = simd_and(r800_ffff_tmp320, bytetest_95_95);
          struct_Ll.cc = simd_or(r800_ffff_tmp331, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9a = simd_and(tmp16, tmp125);
          bytetest_97_97 = simd_and(tmp16, tmp104);
          r800_ffff_tmp332 = simd_and(r800_ffff_tmp320, bytetest_97_97);
          struct_Ll.cc = simd_or(r800_ffff_tmp332, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9c = simd_and(tmp16, tmp140);
          bytetest_a3_a3 = simd_and(r800_ffff_tmp39, tmp67);
          r800_ffff_tmp333 = simd_and(r800_ffff_tmp293, bytetest_9c);
          carryQ.cq[63] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp333, carryQ.get_carry_in(63), r800_ffff_tmp334));
          r800_ffff_tmp335 = simd_and(r800_ffff_tmp334, bytetest_a3_a3);
          struct_Ll.cc = simd_or(r800_ffff_tmp335, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9c = simd_and(tmp16, tmp140);
          bytetest_a5_a5 = simd_and(r800_ffff_tmp39, tmp91);
          r800_ffff_tmp336 = simd_and(r800_ffff_tmp334, bytetest_a5_a5);
          struct_Ll.cc = simd_or(r800_ffff_tmp336, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9c = simd_and(tmp16, tmp140);
          bytetest_a7_a7 = simd_and(r800_ffff_tmp39, tmp104);
          r800_ffff_tmp337 = simd_and(r800_ffff_tmp334, bytetest_a7_a7);
          struct_Ll.cc = simd_or(r800_ffff_tmp337, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9c = simd_and(tmp16, tmp140);
          bytetest_a9_a9 = simd_and(r800_ffff_tmp39, tmp119);
          r800_ffff_tmp338 = simd_and(r800_ffff_tmp334, bytetest_a9_a9);
          struct_Ll.cc = simd_or(r800_ffff_tmp338, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9c = simd_and(tmp16, tmp140);
          bytetest_ab_ab = simd_and(r800_ffff_tmp39, tmp65);
          r800_ffff_tmp339 = simd_and(r800_ffff_tmp334, bytetest_ab_ab);
          struct_Ll.cc = simd_or(r800_ffff_tmp339, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9c = simd_and(tmp16, tmp140);
          bytetest_ad_ad = simd_and(r800_ffff_tmp39, tmp19);
          r800_ffff_tmp340 = simd_and(r800_ffff_tmp334, bytetest_ad_ad);
          struct_Ll.cc = simd_or(r800_ffff_tmp340, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9c = simd_and(tmp16, tmp140);
          r800_ffff_tmp341 = simd_not(tmp55);
          r800_ffff_tmp342 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp341), simd_andc(tmp169, basis_bits.bit_3));
          bytetest_af_b1 = simd_and(tmp82, r800_ffff_tmp342);
          r800_ffff_tmp343 = simd_and(r800_ffff_tmp334, bytetest_af_b1);
          struct_Ll.cc = simd_or(r800_ffff_tmp343, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9c = simd_and(tmp16, tmp140);
          bytetest_b3_b3 = simd_and(bytetest_b0_bf, tmp67);
          r800_ffff_tmp344 = simd_and(r800_ffff_tmp334, bytetest_b3_b3);
          struct_Ll.cc = simd_or(r800_ffff_tmp344, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9c = simd_and(tmp16, tmp140);
          bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp91);
          r800_ffff_tmp345 = simd_and(r800_ffff_tmp334, bytetest_b5_b5);
          struct_Ll.cc = simd_or(r800_ffff_tmp345, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9c = simd_and(tmp16, tmp140);
          bytetest_b7_b7 = simd_and(bytetest_b0_bf, tmp104);
          r800_ffff_tmp346 = simd_and(r800_ffff_tmp334, bytetest_b7_b7);
          struct_Ll.cc = simd_or(r800_ffff_tmp346, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9c = simd_and(tmp16, tmp140);
          bytetest_b9_b9 = simd_and(bytetest_b0_bf, tmp119);
          r800_ffff_tmp347 = simd_and(r800_ffff_tmp334, bytetest_b9_b9);
          struct_Ll.cc = simd_or(r800_ffff_tmp347, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9c = simd_and(tmp16, tmp140);
          bytetest_bb_bb = simd_and(bytetest_b0_bf, tmp65);
          r800_ffff_tmp348 = simd_and(r800_ffff_tmp334, bytetest_bb_bb);
          struct_Ll.cc = simd_or(r800_ffff_tmp348, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9c = simd_and(tmp16, tmp140);
          bytetest_bd_bd = simd_and(bytetest_b0_bf, tmp19);
          r800_ffff_tmp349 = simd_and(r800_ffff_tmp334, bytetest_bd_bd);
          struct_Ll.cc = simd_or(r800_ffff_tmp349, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9c = simd_and(tmp16, tmp140);
          bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp169);
          r800_ffff_tmp350 = simd_and(r800_ffff_tmp334, bytetest_bf_bf);
          struct_Ll.cc = simd_or(r800_ffff_tmp350, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_81_81 = simd_and(tmp69, tmp35);
          r800_ffff_tmp351 = simd_and(r800_ffff_tmp293, bytetest_9d);
          carryQ.cq[64] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp351, carryQ.get_carry_in(64), r800_ffff_tmp352));
          r800_ffff_tmp353 = simd_and(r800_ffff_tmp352, bytetest_81_81);
          struct_Ll.cc = simd_or(r800_ffff_tmp353, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_83_83 = simd_and(tmp69, tmp67);
          r800_ffff_tmp354 = simd_and(r800_ffff_tmp352, bytetest_83_83);
          struct_Ll.cc = simd_or(r800_ffff_tmp354, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_85_85 = simd_and(tmp69, tmp91);
          r800_ffff_tmp355 = simd_and(r800_ffff_tmp352, bytetest_85_85);
          struct_Ll.cc = simd_or(r800_ffff_tmp355, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_87_87 = simd_and(tmp69, tmp104);
          r800_ffff_tmp356 = simd_and(r800_ffff_tmp352, bytetest_87_87);
          struct_Ll.cc = simd_or(r800_ffff_tmp356, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_89_89 = simd_and(tmp69, tmp119);
          r800_ffff_tmp357 = simd_and(r800_ffff_tmp352, bytetest_89_89);
          struct_Ll.cc = simd_or(r800_ffff_tmp357, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_8b_8b = simd_and(tmp69, tmp65);
          r800_ffff_tmp358 = simd_and(r800_ffff_tmp352, bytetest_8b_8b);
          struct_Ll.cc = simd_or(r800_ffff_tmp358, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_8d_8d = simd_and(tmp69, tmp19);
          r800_ffff_tmp359 = simd_and(r800_ffff_tmp352, bytetest_8d_8d);
          struct_Ll.cc = simd_or(r800_ffff_tmp359, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_8f_8f = simd_and(tmp69, tmp169);
          r800_ffff_tmp360 = simd_and(r800_ffff_tmp352, bytetest_8f_8f);
          struct_Ll.cc = simd_or(r800_ffff_tmp360, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_91_91 = simd_and(tmp16, tmp35);
          r800_ffff_tmp361 = simd_and(r800_ffff_tmp352, bytetest_91_91);
          struct_Ll.cc = simd_or(r800_ffff_tmp361, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_93_93 = simd_and(tmp16, tmp67);
          r800_ffff_tmp362 = simd_and(r800_ffff_tmp352, bytetest_93_93);
          struct_Ll.cc = simd_or(r800_ffff_tmp362, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_95_95 = simd_and(tmp16, tmp91);
          r800_ffff_tmp363 = simd_and(r800_ffff_tmp352, bytetest_95_95);
          struct_Ll.cc = simd_or(r800_ffff_tmp363, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_97_97 = simd_and(tmp16, tmp104);
          r800_ffff_tmp364 = simd_and(r800_ffff_tmp352, bytetest_97_97);
          struct_Ll.cc = simd_or(r800_ffff_tmp364, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_99_99 = simd_and(tmp16, tmp119);
          r800_ffff_tmp365 = simd_and(r800_ffff_tmp352, bytetest_99_99);
          struct_Ll.cc = simd_or(r800_ffff_tmp365, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_9b_9b = simd_and(tmp16, tmp65);
          r800_ffff_tmp366 = simd_and(r800_ffff_tmp352, bytetest_9b_9b);
          struct_Ll.cc = simd_or(r800_ffff_tmp366, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_9d_9d = simd_and(tmp16, tmp19);
          r800_ffff_tmp367 = simd_and(r800_ffff_tmp352, bytetest_9d_9d);
          struct_Ll.cc = simd_or(r800_ffff_tmp367, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_9f_9f = simd_and(tmp16, tmp169);
          r800_ffff_tmp368 = simd_and(r800_ffff_tmp352, bytetest_9f_9f);
          struct_Ll.cc = simd_or(r800_ffff_tmp368, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_a1_a1 = simd_and(r800_ffff_tmp39, tmp35);
          r800_ffff_tmp369 = simd_and(r800_ffff_tmp352, bytetest_a1_a1);
          struct_Ll.cc = simd_or(r800_ffff_tmp369, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_a3_a3 = simd_and(r800_ffff_tmp39, tmp67);
          r800_ffff_tmp370 = simd_and(r800_ffff_tmp352, bytetest_a3_a3);
          struct_Ll.cc = simd_or(r800_ffff_tmp370, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_a5_a5 = simd_and(r800_ffff_tmp39, tmp91);
          r800_ffff_tmp371 = simd_and(r800_ffff_tmp352, bytetest_a5_a5);
          struct_Ll.cc = simd_or(r800_ffff_tmp371, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_a7_a7 = simd_and(r800_ffff_tmp39, tmp104);
          r800_ffff_tmp372 = simd_and(r800_ffff_tmp352, bytetest_a7_a7);
          struct_Ll.cc = simd_or(r800_ffff_tmp372, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_a9_a9 = simd_and(r800_ffff_tmp39, tmp119);
          r800_ffff_tmp373 = simd_and(r800_ffff_tmp352, bytetest_a9_a9);
          struct_Ll.cc = simd_or(r800_ffff_tmp373, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_ab_ab = simd_and(r800_ffff_tmp39, tmp65);
          r800_ffff_tmp374 = simd_and(r800_ffff_tmp352, bytetest_ab_ab);
          struct_Ll.cc = simd_or(r800_ffff_tmp374, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_ad_ad = simd_and(r800_ffff_tmp39, tmp19);
          r800_ffff_tmp375 = simd_and(r800_ffff_tmp352, bytetest_ad_ad);
          struct_Ll.cc = simd_or(r800_ffff_tmp375, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_af_af = simd_and(r800_ffff_tmp39, tmp169);
          r800_ffff_tmp376 = simd_and(r800_ffff_tmp352, bytetest_af_af);
          struct_Ll.cc = simd_or(r800_ffff_tmp376, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9d = simd_and(tmp16, tmp19);
          r800_ffff_tmp377 = simd_not(tmp160);
          r800_ffff_tmp378 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp377), simd_andc(tmp160, basis_bits.bit_4));
          bytetest_b1_b8 = simd_and(bytetest_b0_bf, r800_ffff_tmp378);
          r800_ffff_tmp379 = simd_and(r800_ffff_tmp352, bytetest_b1_b8);
          struct_Ll.cc = simd_or(r800_ffff_tmp379, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_ba_ba = simd_and(bytetest_b0_bf, tmp125);
          r800_ffff_tmp380 = simd_and(r800_ffff_tmp352, bytetest_ba_ba);
          struct_Ll.cc = simd_or(r800_ffff_tmp380, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_bc_bc = simd_and(bytetest_b0_bf, tmp140);
          r800_ffff_tmp381 = simd_and(r800_ffff_tmp352, bytetest_bc_bc);
          struct_Ll.cc = simd_or(r800_ffff_tmp381, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp169);
          r800_ffff_tmp382 = simd_and(r800_ffff_tmp352, bytetest_bf_bf);
          struct_Ll.cc = simd_or(r800_ffff_tmp382, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9e = simd_and(tmp16, tmp159);
          bytetest_81_81 = simd_and(tmp69, tmp35);
          r800_ffff_tmp383 = simd_and(r800_ffff_tmp293, bytetest_9e);
          carryQ.cq[65] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp383, carryQ.get_carry_in(65), r800_ffff_tmp384));
          r800_ffff_tmp385 = simd_and(r800_ffff_tmp384, bytetest_81_81);
          struct_Ll.cc = simd_or(r800_ffff_tmp385, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9e = simd_and(tmp16, tmp159);
          bytetest_83_83 = simd_and(tmp69, tmp67);
          r800_ffff_tmp386 = simd_and(r800_ffff_tmp384, bytetest_83_83);
          struct_Ll.cc = simd_or(r800_ffff_tmp386, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9e = simd_and(tmp16, tmp159);
          bytetest_85_85 = simd_and(tmp69, tmp91);
          r800_ffff_tmp387 = simd_and(r800_ffff_tmp384, bytetest_85_85);
          struct_Ll.cc = simd_or(r800_ffff_tmp387, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9e = simd_and(tmp16, tmp159);
          bytetest_87_87 = simd_and(tmp69, tmp104);
          r800_ffff_tmp388 = simd_and(r800_ffff_tmp384, bytetest_87_87);
          struct_Ll.cc = simd_or(r800_ffff_tmp388, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9e = simd_and(tmp16, tmp159);
          bytetest_8c_8c = simd_and(tmp69, tmp140);
          r800_ffff_tmp389 = simd_and(r800_ffff_tmp384, bytetest_8c_8c);
          struct_Ll.cc = simd_or(r800_ffff_tmp389, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9e = simd_and(tmp16, tmp159);
          bytetest_8e_8e = simd_and(tmp69, tmp159);
          r800_ffff_tmp390 = simd_and(r800_ffff_tmp384, bytetest_8e_8e);
          struct_Ll.cc = simd_or(r800_ffff_tmp390, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9e = simd_and(tmp16, tmp159);
          bytetest_91_91 = simd_and(tmp16, tmp35);
          r800_ffff_tmp391 = simd_and(r800_ffff_tmp384, bytetest_91_91);
          struct_Ll.cc = simd_or(r800_ffff_tmp391, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9e = simd_and(tmp16, tmp159);
          bytetest_93_93 = simd_and(tmp16, tmp67);
          r800_ffff_tmp392 = simd_and(r800_ffff_tmp384, bytetest_93_93);
          struct_Ll.cc = simd_or(r800_ffff_tmp392, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9e = simd_and(tmp16, tmp159);
          bytetest_a1_a1 = simd_and(r800_ffff_tmp39, tmp35);
          r800_ffff_tmp393 = simd_and(r800_ffff_tmp384, bytetest_a1_a1);
          struct_Ll.cc = simd_or(r800_ffff_tmp393, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9e = simd_and(tmp16, tmp159);
          bytetest_a3_a3 = simd_and(r800_ffff_tmp39, tmp67);
          r800_ffff_tmp394 = simd_and(r800_ffff_tmp384, bytetest_a3_a3);
          struct_Ll.cc = simd_or(r800_ffff_tmp394, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9e = simd_and(tmp16, tmp159);
          bytetest_a5_a5 = simd_and(r800_ffff_tmp39, tmp91);
          r800_ffff_tmp395 = simd_and(r800_ffff_tmp384, bytetest_a5_a5);
          struct_Ll.cc = simd_or(r800_ffff_tmp395, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9e = simd_and(tmp16, tmp159);
          bytetest_a7_a7 = simd_and(r800_ffff_tmp39, tmp104);
          r800_ffff_tmp396 = simd_and(r800_ffff_tmp384, bytetest_a7_a7);
          struct_Ll.cc = simd_or(r800_ffff_tmp396, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9e = simd_and(tmp16, tmp159);
          bytetest_a9_a9 = simd_and(r800_ffff_tmp39, tmp119);
          r800_ffff_tmp397 = simd_and(r800_ffff_tmp384, bytetest_a9_a9);
          struct_Ll.cc = simd_or(r800_ffff_tmp397, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9f = simd_and(tmp16, tmp169);
          bytetest_ba_ba = simd_and(bytetest_b0_bf, tmp125);
          r800_ffff_tmp398 = simd_and(r800_ffff_tmp293, bytetest_9f);
          carryQ.cq[66] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp398, carryQ.get_carry_in(66), r800_ffff_tmp399));
          r800_ffff_tmp400 = simd_and(r800_ffff_tmp399, bytetest_ba_ba);
          struct_Ll.cc = simd_or(r800_ffff_tmp400, struct_Ll.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, tmp169);
          bytetest_ac = simd_and(r800_ffff_tmp39, tmp140);
          bytetest_80_86 = simd_andc(bytetest_80_87, tmp150);
          r800_ffff_tmp401 = simd_and(tmp27, bytetest_ef);
          carryQ.cq[67] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp401, carryQ.get_carry_in(67), r800_ffff_tmp402));
          r800_ffff_tmp403 = simd_and(r800_ffff_tmp402, bytetest_ac);
          carryQ.cq[68] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp403, carryQ.get_carry_in(68), r800_ffff_tmp404));
          r800_ffff_tmp405 = simd_and(r800_ffff_tmp404, bytetest_80_86);
          struct_Ll.cc = simd_or(r800_ffff_tmp405, struct_Ll.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, tmp169);
          bytetest_ac = simd_and(r800_ffff_tmp39, tmp140);
          bytetest_93_97 = simd_and(bytetest_90_97, tmp4);
          r800_ffff_tmp406 = simd_and(r800_ffff_tmp404, bytetest_93_97);
          struct_Ll.cc = simd_or(r800_ffff_tmp406, struct_Ll.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, tmp169);
          bytetest_bd = simd_and(bytetest_b0_bf, tmp19);
          bytetest_81_9a = simd_and(tmp36, tmp10);
          r800_ffff_tmp407 = simd_and(r800_ffff_tmp402, bytetest_bd);
          carryQ.cq[69] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp407, carryQ.get_carry_in(69), r800_ffff_tmp408));
          r800_ffff_tmp409 = simd_and(r800_ffff_tmp408, bytetest_81_9a);
          struct_Ll.cc = simd_or(r800_ffff_tmp409, struct_Ll.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(39, 31);
        }
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_90 = simd_andc(tmp16, tmp9);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp186 = simd_and(tmp29, bytetest_90);
        carryQ.cq[70] = carryout2carry(pablo_blk_Advance(tmp186, carryQ.get_carry_in(70), tmp187));
        tmp188 = simd_and(tmp187, bytetest_80_bf);
        if ((bitblock::any(tmp188) || carryQ.CarryTest(71, 3))) {
          bytetest_f0 = simd_andc(tmp13, tmp9);
          bytetest_90 = simd_andc(tmp16, tmp9);
          bytetest_91 = simd_and(tmp16, tmp35);
          bytetest_80_8f = simd_andc(tmp14, tmp68);
          r10000_10fff_tmp1 = simd_and(tmp29, bytetest_90);
          carryQ.cq[71] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp1, carryQ.get_carry_in(71), r10000_10fff_tmp2));
          r10000_10fff_tmp3 = simd_and(r10000_10fff_tmp2, bytetest_91);
          carryQ.cq[72] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp3, carryQ.get_carry_in(72), r10000_10fff_tmp4));
          r10000_10fff_tmp5 = simd_and(r10000_10fff_tmp4, bytetest_80_8f);
          bytetest_90 = simd_andc(tmp16, tmp9);
          bytetest_a8_bf = simd_and(bytetest_a0_bf, tmp45);
          r10000_10fff_tmp6 = simd_and(r10000_10fff_tmp2, bytetest_90);
          carryQ.cq[73] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp6, carryQ.get_carry_in(73), r10000_10fff_tmp7));
          r10000_10fff_tmp8 = simd_and(r10000_10fff_tmp7, bytetest_a8_bf);
          r10000_10fff_tmp9 = simd_or(r10000_10fff_tmp8, r10000_10fff_tmp5);
          struct_Ll.cc = simd_or(r10000_10fff_tmp9, struct_Ll.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(71, 3);
        }
        carryQ.CarryQ_Adjust(74);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Ll & struct_Ll, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, tmp7, tmp8, tmp9, tmp10;
		BitBlock bytetest_61_7a, tmp11, tmp12, tmp13, bytetest_f0, tmp14, tmp15, tmp16;
		BitBlock tmp17, tmp18, tmp19, bytetest_9d, bytetest_90, tmp20, tmp21, tmp22;
		BitBlock tmp23, tmp24, tmp25, bytetest_9a_b3, tmp26, tmp27, tmp28, tmp29;
		BitBlock tmp30, tmp31, tmp32, tmp33, tmp34, tmp35, bytetest_91, tmp36, tmp37;
		BitBlock tmp38, tmp39, tmp40, tmp41, bytetest_8e_94, tmp42, tmp43, tmp44;
		BitBlock tmp45, tmp46, tmp47, tmp48, tmp49, tmp50, bytetest_96_a7, tmp51;
		BitBlock tmp52, tmp53, bytetest_92, tmp54, tmp55, tmp56, bytetest_82_9b, tmp57;
		BitBlock tmp58, tmp59, tmp60, tmp61, tmp62, bytetest_b6_b9, tmp63, tmp64;
		BitBlock tmp65, bytetest_bb_bb, tmp66, tmp67, bytetest_93, tmp68, tmp69;
		BitBlock bytetest_80_83, tmp70, tmp71, tmp72, tmp73, bytetest_bd_bf, tmp74;
		BitBlock tmp75, bytetest_85_8f, tmp76, tmp77, tmp78, bytetest_94, tmp79, tmp80;
		BitBlock tmp81, tmp82, tmp83, bytetest_aa_bf, tmp84, tmp85, tmp86, tmp87;
		BitBlock tmp88, tmp89, bytetest_9e_b7, tmp90, tmp91, bytetest_95, tmp92, tmp93;
		BitBlock tmp94, tmp95, bytetest_92_ab, tmp96, tmp97, tmp98, tmp99, bytetest_96;
		BitBlock tmp100, bytetest_86_9f, tmp101, tmp102, tmp103, tmp104, bytetest_97;
		BitBlock bytetest_80_93, tmp105, tmp106, tmp107, tmp108, bytetest_ba_bf;
		BitBlock tmp109, tmp110, tmp111, bytetest_98, bytetest_80_87, tmp112, tmp113;
		BitBlock tmp114, tmp115, bytetest_ae_bf, tmp116, tmp117, bytetest_a2_bb;
		BitBlock tmp118, tmp119, bytetest_99, tmp120, tmp121, bytetest_96_af, tmp122;
		BitBlock tmp123, tmp124, tmp125, bytetest_9a, tmp126, tmp127, bytetest_8a_a5;
		BitBlock tmp128, tmp129, tmp130, bytetest_9b, tmp131, bytetest_82_9a, tmp132;
		BitBlock tmp133, tmp134, tmp135, tmp136, tmp137, tmp138, bytetest_9c_a1;
		BitBlock tmp139, tmp140, bytetest_9c, tmp141, bytetest_80_94, tmp142, tmp143;
		BitBlock tmp144, bytetest_bc_bf, tmp145, tmp146, tmp147, tmp148;
		BitBlock bytetest_96_9b, tmp149, tmp150, tmp151, bytetest_80_8e, tmp152;
		BitBlock tmp153, tmp154, bytetest_b6_bf, tmp155, tmp156, tmp157;
		BitBlock bytetest_90_95, tmp158, tmp159, bytetest_9e, tmp160, tmp161;
		BitBlock bytetest_80_88, tmp162, tmp163, tmp164, bytetest_b0_bf, tmp165;
		BitBlock tmp166, tmp167, bytetest_8a_8f, tmp168, tmp169, bytetest_9f;
		BitBlock bytetest_80_82, tmp170, tmp171, tmp172, tmp173, tmp174, tmp175;
		BitBlock bytetest_84_89, tmp176, bytetest_8b_8b, tmp177, tmp178;
		BitBlock bytetest_c2_df, r80_7ff_tmp1, bytetest_c2, bytetest_b5_b5;
		BitBlock r80_7ff_tmp2, r80_7ff_tmp3, r80_7ff_tmp4, bytetest_c3, r80_7ff_tmp5;
		BitBlock r80_7ff_tmp6, r80_7ff_tmp7, r80_7ff_tmp8, r80_7ff_tmp9;
		BitBlock bytetest_9f_b6, r80_7ff_tmp10, r80_7ff_tmp11, r80_7ff_tmp12;
		BitBlock bytetest_b8_bf, r80_7ff_tmp13, bytetest_c4, bytetest_81_81;
		BitBlock r80_7ff_tmp14, r80_7ff_tmp15, r80_7ff_tmp16, bytetest_83_83;
		BitBlock r80_7ff_tmp17, bytetest_85_85, r80_7ff_tmp18, bytetest_87_87;
		BitBlock r80_7ff_tmp19, bytetest_89_89, r80_7ff_tmp20, r80_7ff_tmp21;
		BitBlock bytetest_8d_8d, r80_7ff_tmp22, bytetest_8f_8f, r80_7ff_tmp23;
		BitBlock bytetest_91_91, r80_7ff_tmp24, bytetest_93_93, r80_7ff_tmp25;
		BitBlock bytetest_95_95, r80_7ff_tmp26, bytetest_97_97, r80_7ff_tmp27;
		BitBlock bytetest_99_99, r80_7ff_tmp28, bytetest_9b_9b, r80_7ff_tmp29;
		BitBlock bytetest_9d_9d, r80_7ff_tmp30, bytetest_9f_9f, r80_7ff_tmp31;
		BitBlock r80_7ff_tmp32, r80_7ff_tmp33, bytetest_a1_a1, r80_7ff_tmp34;
		BitBlock bytetest_a3_a3, r80_7ff_tmp35, bytetest_a5_a5, r80_7ff_tmp36;
		BitBlock bytetest_a7_a7, r80_7ff_tmp37, bytetest_a9_a9, r80_7ff_tmp38;
		BitBlock bytetest_ab_ab, r80_7ff_tmp39, bytetest_ad_ad, r80_7ff_tmp40;
		BitBlock bytetest_af_af, r80_7ff_tmp41, bytetest_b1_b1, r80_7ff_tmp42;
		BitBlock bytetest_b3_b3, r80_7ff_tmp43, r80_7ff_tmp44, r80_7ff_tmp45;
		BitBlock r80_7ff_tmp46, bytetest_b7_b8, r80_7ff_tmp47, bytetest_ba_ba;
		BitBlock r80_7ff_tmp48, bytetest_bc_bc, r80_7ff_tmp49, bytetest_be_be;
		BitBlock r80_7ff_tmp50, bytetest_c5, bytetest_80_80, r80_7ff_tmp51;
		BitBlock r80_7ff_tmp52, r80_7ff_tmp53, bytetest_82_82, r80_7ff_tmp54;
		BitBlock bytetest_84_84, r80_7ff_tmp55, bytetest_86_86, r80_7ff_tmp56;
		BitBlock r80_7ff_tmp57, bytetest_88_89, r80_7ff_tmp58, r80_7ff_tmp59;
		BitBlock r80_7ff_tmp60, r80_7ff_tmp61, r80_7ff_tmp62, r80_7ff_tmp63;
		BitBlock r80_7ff_tmp64, r80_7ff_tmp65, r80_7ff_tmp66, r80_7ff_tmp67;
		BitBlock r80_7ff_tmp68, r80_7ff_tmp69, r80_7ff_tmp70, r80_7ff_tmp71;
		BitBlock r80_7ff_tmp72, r80_7ff_tmp73, r80_7ff_tmp74, r80_7ff_tmp75;
		BitBlock r80_7ff_tmp76, r80_7ff_tmp77, r80_7ff_tmp78, r80_7ff_tmp79;
		BitBlock r80_7ff_tmp80, bytetest_b7_b7, r80_7ff_tmp81, r80_7ff_tmp82;
		BitBlock r80_7ff_tmp83, bytetest_c6, r80_7ff_tmp84, r80_7ff_tmp85;
		BitBlock r80_7ff_tmp86, bytetest_be_bf, r80_7ff_tmp87, r80_7ff_tmp88;
		BitBlock r80_7ff_tmp89, r80_7ff_tmp90, bytetest_88_88, r80_7ff_tmp91;
		BitBlock r80_7ff_tmp92, bytetest_8c_8d, r80_7ff_tmp93, bytetest_92_92;
		BitBlock r80_7ff_tmp94, r80_7ff_tmp95, r80_7ff_tmp96, bytetest_99_9b;
		BitBlock r80_7ff_tmp97, bytetest_9e_9e, r80_7ff_tmp98, r80_7ff_tmp99;
		BitBlock r80_7ff_tmp100, r80_7ff_tmp101, bytetest_a8_a8, r80_7ff_tmp102;
		BitBlock r80_7ff_tmp103, bytetest_aa_ab, r80_7ff_tmp104, r80_7ff_tmp105;
		BitBlock bytetest_b0_b0, r80_7ff_tmp106, bytetest_b4_b4, r80_7ff_tmp107;
		BitBlock bytetest_b6_b6, r80_7ff_tmp108, r80_7ff_tmp109, r80_7ff_tmp110;
		BitBlock r80_7ff_tmp111, bytetest_b9_ba, r80_7ff_tmp112, r80_7ff_tmp113;
		BitBlock r80_7ff_tmp114, bytetest_c7, r80_7ff_tmp115, r80_7ff_tmp116;
		BitBlock r80_7ff_tmp117, r80_7ff_tmp118, bytetest_8c_8c, r80_7ff_tmp119;
		BitBlock bytetest_8e_8e, r80_7ff_tmp120, bytetest_90_90, r80_7ff_tmp121;
		BitBlock r80_7ff_tmp122, bytetest_94_94, r80_7ff_tmp123, bytetest_96_96;
		BitBlock r80_7ff_tmp124, bytetest_98_98, r80_7ff_tmp125, bytetest_9a_9a;
		BitBlock r80_7ff_tmp126, bytetest_9c_9d, r80_7ff_tmp127, r80_7ff_tmp128;
		BitBlock r80_7ff_tmp129, r80_7ff_tmp130, r80_7ff_tmp131, r80_7ff_tmp132;
		BitBlock r80_7ff_tmp133, r80_7ff_tmp134, r80_7ff_tmp135, r80_7ff_tmp136;
		BitBlock r80_7ff_tmp137, bytetest_af_b0, r80_7ff_tmp138, r80_7ff_tmp139;
		BitBlock r80_7ff_tmp140, bytetest_b9_b9, r80_7ff_tmp141, r80_7ff_tmp142;
		BitBlock bytetest_bd_bd, r80_7ff_tmp143, bytetest_bf_bf, r80_7ff_tmp144;
		BitBlock bytetest_c8, r80_7ff_tmp145, r80_7ff_tmp146, r80_7ff_tmp147;
		BitBlock r80_7ff_tmp148, r80_7ff_tmp149, r80_7ff_tmp150, r80_7ff_tmp151;
		BitBlock r80_7ff_tmp152, r80_7ff_tmp153, r80_7ff_tmp154, r80_7ff_tmp155;
		BitBlock r80_7ff_tmp156, r80_7ff_tmp157, r80_7ff_tmp158, r80_7ff_tmp159;
		BitBlock r80_7ff_tmp160, r80_7ff_tmp161, r80_7ff_tmp162, r80_7ff_tmp163;
		BitBlock r80_7ff_tmp164, r80_7ff_tmp165, r80_7ff_tmp166, r80_7ff_tmp167;
		BitBlock r80_7ff_tmp168, r80_7ff_tmp169, r80_7ff_tmp170, r80_7ff_tmp171;
		BitBlock r80_7ff_tmp172, bytetest_b3_b9, r80_7ff_tmp173, r80_7ff_tmp174;
		BitBlock bytetest_c9, r80_7ff_tmp175, r80_7ff_tmp176, r80_7ff_tmp177;
		BitBlock r80_7ff_tmp178, r80_7ff_tmp179, r80_7ff_tmp180, r80_7ff_tmp181;
		BitBlock r80_7ff_tmp182, r80_7ff_tmp183, r80_7ff_tmp184, bytetest_ca;
		BitBlock r80_7ff_tmp185, r80_7ff_tmp186, r80_7ff_tmp187, r80_7ff_tmp188;
		BitBlock r80_7ff_tmp189, bytetest_8f_bf, r80_7ff_tmp190, r80_7ff_tmp191;
		BitBlock r80_7ff_tmp192, bytetest_95_af, r80_7ff_tmp193, bytetest_cd;
		BitBlock r80_7ff_tmp194, r80_7ff_tmp195, r80_7ff_tmp196, r80_7ff_tmp197;
		BitBlock r80_7ff_tmp198, r80_7ff_tmp199, r80_7ff_tmp200, bytetest_bb_bd;
		BitBlock r80_7ff_tmp201, bytetest_ce, r80_7ff_tmp202, r80_7ff_tmp203;
		BitBlock r80_7ff_tmp204, bytetest_cf, r80_7ff_tmp205, r80_7ff_tmp206;
		BitBlock r80_7ff_tmp207, bytetest_ac_bf, r80_7ff_tmp208, r80_7ff_tmp209;
		BitBlock bytetest_90_91, r80_7ff_tmp210, r80_7ff_tmp211, bytetest_95_97;
		BitBlock r80_7ff_tmp212, r80_7ff_tmp213, r80_7ff_tmp214, r80_7ff_tmp215;
		BitBlock r80_7ff_tmp216, r80_7ff_tmp217, r80_7ff_tmp218, r80_7ff_tmp219;
		BitBlock r80_7ff_tmp220, r80_7ff_tmp221, r80_7ff_tmp222, r80_7ff_tmp223;
		BitBlock r80_7ff_tmp224, r80_7ff_tmp225, bytetest_af_b3, r80_7ff_tmp226;
		BitBlock r80_7ff_tmp227, bytetest_b8_b8, r80_7ff_tmp228, r80_7ff_tmp229;
		BitBlock r80_7ff_tmp230, bytetest_bb_bc, r80_7ff_tmp231, r80_7ff_tmp232;
		BitBlock bytetest_d1, bytetest_80_9f, r80_7ff_tmp233, r80_7ff_tmp234;
		BitBlock r80_7ff_tmp235, bytetest_d0, r80_7ff_tmp236, r80_7ff_tmp237;
		BitBlock r80_7ff_tmp238, r80_7ff_tmp239, r80_7ff_tmp240, r80_7ff_tmp241;
		BitBlock r80_7ff_tmp242, r80_7ff_tmp243, r80_7ff_tmp244, r80_7ff_tmp245;
		BitBlock r80_7ff_tmp246, r80_7ff_tmp247, r80_7ff_tmp248, r80_7ff_tmp249;
		BitBlock r80_7ff_tmp250, r80_7ff_tmp251, r80_7ff_tmp252, r80_7ff_tmp253;
		BitBlock r80_7ff_tmp254, r80_7ff_tmp255, bytetest_d2, r80_7ff_tmp256;
		BitBlock r80_7ff_tmp257, r80_7ff_tmp258, r80_7ff_tmp259, r80_7ff_tmp260;
		BitBlock r80_7ff_tmp261, r80_7ff_tmp262, r80_7ff_tmp263, r80_7ff_tmp264;
		BitBlock r80_7ff_tmp265, r80_7ff_tmp266, r80_7ff_tmp267, r80_7ff_tmp268;
		BitBlock r80_7ff_tmp269, r80_7ff_tmp270, r80_7ff_tmp271, r80_7ff_tmp272;
		BitBlock r80_7ff_tmp273, r80_7ff_tmp274, r80_7ff_tmp275, r80_7ff_tmp276;
		BitBlock r80_7ff_tmp277, r80_7ff_tmp278, r80_7ff_tmp279, r80_7ff_tmp280;
		BitBlock r80_7ff_tmp281, r80_7ff_tmp282, r80_7ff_tmp283, r80_7ff_tmp284;
		BitBlock r80_7ff_tmp285, bytetest_d3, r80_7ff_tmp286, r80_7ff_tmp287;
		BitBlock r80_7ff_tmp288, r80_7ff_tmp289, r80_7ff_tmp290, r80_7ff_tmp291;
		BitBlock bytetest_8a_8a, r80_7ff_tmp292, r80_7ff_tmp293, bytetest_8e_8f;
		BitBlock r80_7ff_tmp294, r80_7ff_tmp295, r80_7ff_tmp296, r80_7ff_tmp297;
		BitBlock r80_7ff_tmp298, r80_7ff_tmp299, r80_7ff_tmp300, r80_7ff_tmp301;
		BitBlock r80_7ff_tmp302, r80_7ff_tmp303, r80_7ff_tmp304, r80_7ff_tmp305;
		BitBlock r80_7ff_tmp306, r80_7ff_tmp307, r80_7ff_tmp308, r80_7ff_tmp309;
		BitBlock r80_7ff_tmp310, r80_7ff_tmp311, r80_7ff_tmp312, r80_7ff_tmp313;
		BitBlock r80_7ff_tmp314, r80_7ff_tmp315, r80_7ff_tmp316, r80_7ff_tmp317;
		BitBlock r80_7ff_tmp318, bytetest_d4, r80_7ff_tmp319, r80_7ff_tmp320;
		BitBlock r80_7ff_tmp321, r80_7ff_tmp322, r80_7ff_tmp323, r80_7ff_tmp324;
		BitBlock r80_7ff_tmp325, r80_7ff_tmp326, r80_7ff_tmp327, r80_7ff_tmp328;
		BitBlock r80_7ff_tmp329, r80_7ff_tmp330, r80_7ff_tmp331, r80_7ff_tmp332;
		BitBlock r80_7ff_tmp333, r80_7ff_tmp334, r80_7ff_tmp335, r80_7ff_tmp336;
		BitBlock r80_7ff_tmp337, r80_7ff_tmp338, r80_7ff_tmp339, r80_7ff_tmp340;
		BitBlock bytetest_d6, r80_7ff_tmp341, r80_7ff_tmp342, r80_7ff_tmp343;
		BitBlock bytetest_d5, r80_7ff_tmp344, bytetest_a1_bf, r80_7ff_tmp345;
		BitBlock r80_7ff_tmp346, r80_7ff_tmp347, r80_7ff_tmp348, tmp179, tmp180;
		BitBlock tmp181, bytetest_e1_ef, bytetest_e0, bytetest_a0_bf, tmp182, tmp183;
		BitBlock tmp184, tmp185, r800_ffff_tmp1, r800_ffff_tmp2, bytetest_e1;
		BitBlock bytetest_b4, r800_ffff_tmp3, bytetest_80_ab, r800_ffff_tmp4;
		BitBlock r800_ffff_tmp5, r800_ffff_tmp6, r800_ffff_tmp7, r800_ffff_tmp8;
		BitBlock bytetest_b5, r800_ffff_tmp9, r800_ffff_tmp10, bytetest_ab_b7;
		BitBlock r800_ffff_tmp11, r800_ffff_tmp12, r800_ffff_tmp13, bytetest_b6;
		BitBlock r800_ffff_tmp14, bytetest_80_9a, r800_ffff_tmp15, r800_ffff_tmp16;
		BitBlock r800_ffff_tmp17, r800_ffff_tmp18, bytetest_b9_bf, r800_ffff_tmp19;
		BitBlock r800_ffff_tmp20, bytetest_b8, r800_ffff_tmp21, r800_ffff_tmp22;
		BitBlock r800_ffff_tmp23, r800_ffff_tmp24, r800_ffff_tmp25, r800_ffff_tmp26;
		BitBlock r800_ffff_tmp27, r800_ffff_tmp28, r800_ffff_tmp29, r800_ffff_tmp30;
		BitBlock r800_ffff_tmp31, r800_ffff_tmp32, r800_ffff_tmp33, r800_ffff_tmp34;
		BitBlock r800_ffff_tmp35, r800_ffff_tmp36, r800_ffff_tmp37, r800_ffff_tmp38;
		BitBlock r800_ffff_tmp39, r800_ffff_tmp40, r800_ffff_tmp41, r800_ffff_tmp42;
		BitBlock r800_ffff_tmp43, r800_ffff_tmp44, r800_ffff_tmp45, r800_ffff_tmp46;
		BitBlock r800_ffff_tmp47, r800_ffff_tmp48, r800_ffff_tmp49, r800_ffff_tmp50;
		BitBlock r800_ffff_tmp51, r800_ffff_tmp52, r800_ffff_tmp53, r800_ffff_tmp54;
		BitBlock r800_ffff_tmp55, bytetest_b9, r800_ffff_tmp56, r800_ffff_tmp57;
		BitBlock r800_ffff_tmp58, r800_ffff_tmp59, r800_ffff_tmp60, r800_ffff_tmp61;
		BitBlock r800_ffff_tmp62, r800_ffff_tmp63, r800_ffff_tmp64, r800_ffff_tmp65;
		BitBlock r800_ffff_tmp66, r800_ffff_tmp67, r800_ffff_tmp68, r800_ffff_tmp69;
		BitBlock r800_ffff_tmp70, r800_ffff_tmp71, r800_ffff_tmp72, r800_ffff_tmp73;
		BitBlock r800_ffff_tmp74, r800_ffff_tmp75, r800_ffff_tmp76, r800_ffff_tmp77;
		BitBlock r800_ffff_tmp78, r800_ffff_tmp79, r800_ffff_tmp80, r800_ffff_tmp81;
		BitBlock r800_ffff_tmp82, r800_ffff_tmp83, r800_ffff_tmp84, r800_ffff_tmp85;
		BitBlock r800_ffff_tmp86, r800_ffff_tmp87, r800_ffff_tmp88, r800_ffff_tmp89;
		BitBlock bytetest_ba, r800_ffff_tmp90, r800_ffff_tmp91, r800_ffff_tmp92;
		BitBlock r800_ffff_tmp93, r800_ffff_tmp94, r800_ffff_tmp95, r800_ffff_tmp96;
		BitBlock r800_ffff_tmp97, r800_ffff_tmp98, r800_ffff_tmp99, r800_ffff_tmp100;
		BitBlock r800_ffff_tmp101, r800_ffff_tmp102, r800_ffff_tmp103, bytetest_95_9d;
		BitBlock r800_ffff_tmp104, r800_ffff_tmp105, r800_ffff_tmp106;
		BitBlock r800_ffff_tmp107, r800_ffff_tmp108, r800_ffff_tmp109;
		BitBlock r800_ffff_tmp110, r800_ffff_tmp111, r800_ffff_tmp112;
		BitBlock r800_ffff_tmp113, r800_ffff_tmp114, r800_ffff_tmp115;
		BitBlock r800_ffff_tmp116, r800_ffff_tmp117, r800_ffff_tmp118;
		BitBlock r800_ffff_tmp119, r800_ffff_tmp120, r800_ffff_tmp121, bytetest_bb;
		BitBlock r800_ffff_tmp122, r800_ffff_tmp123, r800_ffff_tmp124;
		BitBlock r800_ffff_tmp125, r800_ffff_tmp126, r800_ffff_tmp127;
		BitBlock r800_ffff_tmp128, r800_ffff_tmp129, r800_ffff_tmp130;
		BitBlock r800_ffff_tmp131, r800_ffff_tmp132, r800_ffff_tmp133;
		BitBlock r800_ffff_tmp134, r800_ffff_tmp135, r800_ffff_tmp136;
		BitBlock r800_ffff_tmp137, r800_ffff_tmp138, r800_ffff_tmp139;
		BitBlock r800_ffff_tmp140, r800_ffff_tmp141, r800_ffff_tmp142;
		BitBlock r800_ffff_tmp143, r800_ffff_tmp144, r800_ffff_tmp145;
		BitBlock r800_ffff_tmp146, r800_ffff_tmp147, r800_ffff_tmp148;
		BitBlock r800_ffff_tmp149, r800_ffff_tmp150, r800_ffff_tmp151;
		BitBlock r800_ffff_tmp152, r800_ffff_tmp153, r800_ffff_tmp154, bytetest_bc;
		BitBlock r800_ffff_tmp155, r800_ffff_tmp156, r800_ffff_tmp157;
		BitBlock r800_ffff_tmp158, r800_ffff_tmp159, r800_ffff_tmp160, bytetest_a0_a7;
		BitBlock r800_ffff_tmp161, bytetest_b0_b7, r800_ffff_tmp162, bytetest_bd;
		BitBlock bytetest_80_85, r800_ffff_tmp163, r800_ffff_tmp164, r800_ffff_tmp165;
		BitBlock bytetest_90_97, r800_ffff_tmp166, r800_ffff_tmp167, r800_ffff_tmp168;
		BitBlock bytetest_b0_bd, r800_ffff_tmp169, bytetest_be, r800_ffff_tmp170;
		BitBlock r800_ffff_tmp171, r800_ffff_tmp172, r800_ffff_tmp173;
		BitBlock r800_ffff_tmp174, bytetest_b0_b4, r800_ffff_tmp175, r800_ffff_tmp176;
		BitBlock bytetest_b6_b7, r800_ffff_tmp177, r800_ffff_tmp178, bytetest_bf;
		BitBlock r800_ffff_tmp179, r800_ffff_tmp180, bytetest_82_84, r800_ffff_tmp181;
		BitBlock r800_ffff_tmp182, r800_ffff_tmp183, bytetest_86_87, r800_ffff_tmp184;
		BitBlock bytetest_90_93, r800_ffff_tmp185, bytetest_96_97, r800_ffff_tmp186;
		BitBlock r800_ffff_tmp187, bytetest_b2_b4, r800_ffff_tmp188, r800_ffff_tmp189;
		BitBlock bytetest_e2, bytetest_84, r800_ffff_tmp190, r800_ffff_tmp191;
		BitBlock r800_ffff_tmp192, r800_ffff_tmp193, r800_ffff_tmp194;
		BitBlock r800_ffff_tmp195, r800_ffff_tmp196, r800_ffff_tmp197;
		BitBlock r800_ffff_tmp198, r800_ffff_tmp199, r800_ffff_tmp200, bytetest_bc_bd;
		BitBlock r800_ffff_tmp201, bytetest_85, bytetest_86_89, r800_ffff_tmp202;
		BitBlock r800_ffff_tmp203, r800_ffff_tmp204, r800_ffff_tmp205, bytetest_86;
		BitBlock r800_ffff_tmp206, r800_ffff_tmp207, r800_ffff_tmp208, bytetest_b1;
		BitBlock r800_ffff_tmp209, bytetest_80_9e, r800_ffff_tmp210, r800_ffff_tmp211;
		BitBlock r800_ffff_tmp212, bytetest_b0, r800_ffff_tmp213, r800_ffff_tmp214;
		BitBlock r800_ffff_tmp215, r800_ffff_tmp216, r800_ffff_tmp217;
		BitBlock r800_ffff_tmp218, r800_ffff_tmp219, r800_ffff_tmp220, bytetest_a5_a6;
		BitBlock r800_ffff_tmp221, r800_ffff_tmp222, bytetest_aa_aa, r800_ffff_tmp223;
		BitBlock bytetest_ac_ac, r800_ffff_tmp224, r800_ffff_tmp225, r800_ffff_tmp226;
		BitBlock bytetest_b3_b4, r800_ffff_tmp227, bytetest_b6_bb, r800_ffff_tmp228;
		BitBlock bytetest_b2, r800_ffff_tmp229, r800_ffff_tmp230, r800_ffff_tmp231;
		BitBlock r800_ffff_tmp232, r800_ffff_tmp233, r800_ffff_tmp234;
		BitBlock r800_ffff_tmp235, r800_ffff_tmp236, r800_ffff_tmp237;
		BitBlock r800_ffff_tmp238, r800_ffff_tmp239, r800_ffff_tmp240;
		BitBlock r800_ffff_tmp241, r800_ffff_tmp242, r800_ffff_tmp243;
		BitBlock r800_ffff_tmp244, r800_ffff_tmp245, r800_ffff_tmp246;
		BitBlock r800_ffff_tmp247, r800_ffff_tmp248, r800_ffff_tmp249;
		BitBlock r800_ffff_tmp250, r800_ffff_tmp251, r800_ffff_tmp252;
		BitBlock r800_ffff_tmp253, r800_ffff_tmp254, r800_ffff_tmp255;
		BitBlock r800_ffff_tmp256, r800_ffff_tmp257, r800_ffff_tmp258;
		BitBlock r800_ffff_tmp259, r800_ffff_tmp260, r800_ffff_tmp261;
		BitBlock r800_ffff_tmp262, bytetest_b3, r800_ffff_tmp263, r800_ffff_tmp264;
		BitBlock r800_ffff_tmp265, r800_ffff_tmp266, r800_ffff_tmp267;
		BitBlock r800_ffff_tmp268, r800_ffff_tmp269, r800_ffff_tmp270;
		BitBlock r800_ffff_tmp271, r800_ffff_tmp272, r800_ffff_tmp273;
		BitBlock r800_ffff_tmp274, r800_ffff_tmp275, r800_ffff_tmp276;
		BitBlock r800_ffff_tmp277, r800_ffff_tmp278, r800_ffff_tmp279;
		BitBlock r800_ffff_tmp280, r800_ffff_tmp281, bytetest_a3_a4, r800_ffff_tmp282;
		BitBlock r800_ffff_tmp283, bytetest_ae_ae, r800_ffff_tmp284, r800_ffff_tmp285;
		BitBlock r800_ffff_tmp286, bytetest_80_a5, r800_ffff_tmp287, r800_ffff_tmp288;
		BitBlock r800_ffff_tmp289, r800_ffff_tmp290, r800_ffff_tmp291, bytetest_ea;
		BitBlock r800_ffff_tmp292, r800_ffff_tmp293, r800_ffff_tmp294;
		BitBlock r800_ffff_tmp295, r800_ffff_tmp296, r800_ffff_tmp297;
		BitBlock r800_ffff_tmp298, r800_ffff_tmp299, r800_ffff_tmp300;
		BitBlock r800_ffff_tmp301, r800_ffff_tmp302, r800_ffff_tmp303;
		BitBlock r800_ffff_tmp304, r800_ffff_tmp305, r800_ffff_tmp306;
		BitBlock r800_ffff_tmp307, r800_ffff_tmp308, r800_ffff_tmp309;
		BitBlock r800_ffff_tmp310, r800_ffff_tmp311, r800_ffff_tmp312;
		BitBlock r800_ffff_tmp313, r800_ffff_tmp314, r800_ffff_tmp315;
		BitBlock r800_ffff_tmp316, r800_ffff_tmp317, r800_ffff_tmp318;
		BitBlock r800_ffff_tmp319, r800_ffff_tmp320, r800_ffff_tmp321;
		BitBlock r800_ffff_tmp322, r800_ffff_tmp323, r800_ffff_tmp324;
		BitBlock r800_ffff_tmp325, r800_ffff_tmp326, r800_ffff_tmp327;
		BitBlock r800_ffff_tmp328, r800_ffff_tmp329, r800_ffff_tmp330;
		BitBlock r800_ffff_tmp331, r800_ffff_tmp332, r800_ffff_tmp333;
		BitBlock r800_ffff_tmp334, r800_ffff_tmp335, r800_ffff_tmp336;
		BitBlock r800_ffff_tmp337, r800_ffff_tmp338, r800_ffff_tmp339;
		BitBlock r800_ffff_tmp340, r800_ffff_tmp341, r800_ffff_tmp342, bytetest_af_b1;
		BitBlock r800_ffff_tmp343, r800_ffff_tmp344, r800_ffff_tmp345;
		BitBlock r800_ffff_tmp346, r800_ffff_tmp347, r800_ffff_tmp348;
		BitBlock r800_ffff_tmp349, r800_ffff_tmp350, r800_ffff_tmp351;
		BitBlock r800_ffff_tmp352, r800_ffff_tmp353, r800_ffff_tmp354;
		BitBlock r800_ffff_tmp355, r800_ffff_tmp356, r800_ffff_tmp357;
		BitBlock r800_ffff_tmp358, r800_ffff_tmp359, r800_ffff_tmp360;
		BitBlock r800_ffff_tmp361, r800_ffff_tmp362, r800_ffff_tmp363;
		BitBlock r800_ffff_tmp364, r800_ffff_tmp365, r800_ffff_tmp366;
		BitBlock r800_ffff_tmp367, r800_ffff_tmp368, r800_ffff_tmp369;
		BitBlock r800_ffff_tmp370, r800_ffff_tmp371, r800_ffff_tmp372;
		BitBlock r800_ffff_tmp373, r800_ffff_tmp374, r800_ffff_tmp375;
		BitBlock r800_ffff_tmp376, r800_ffff_tmp377, r800_ffff_tmp378, bytetest_b1_b8;
		BitBlock r800_ffff_tmp379, r800_ffff_tmp380, r800_ffff_tmp381;
		BitBlock r800_ffff_tmp382, r800_ffff_tmp383, r800_ffff_tmp384;
		BitBlock r800_ffff_tmp385, r800_ffff_tmp386, r800_ffff_tmp387;
		BitBlock r800_ffff_tmp388, r800_ffff_tmp389, r800_ffff_tmp390;
		BitBlock r800_ffff_tmp391, r800_ffff_tmp392, r800_ffff_tmp393;
		BitBlock r800_ffff_tmp394, r800_ffff_tmp395, r800_ffff_tmp396;
		BitBlock r800_ffff_tmp397, r800_ffff_tmp398, r800_ffff_tmp399;
		BitBlock r800_ffff_tmp400, bytetest_ef, bytetest_ac, bytetest_80_86;
		BitBlock r800_ffff_tmp401, r800_ffff_tmp402, r800_ffff_tmp403;
		BitBlock r800_ffff_tmp404, r800_ffff_tmp405, bytetest_93_97, r800_ffff_tmp406;
		BitBlock bytetest_81_9a, r800_ffff_tmp407, r800_ffff_tmp408, r800_ffff_tmp409;
		BitBlock bytetest_80_bf, tmp186, tmp187, tmp188, bytetest_80_8f;
		BitBlock r10000_10fff_tmp1, r10000_10fff_tmp2, r10000_10fff_tmp3;
		BitBlock r10000_10fff_tmp4, r10000_10fff_tmp5, bytetest_a8_bf;
		BitBlock r10000_10fff_tmp6, r10000_10fff_tmp7, r10000_10fff_tmp8;
		BitBlock r10000_10fff_tmp9;




        struct_Ll.cc = simd<1>::constant<0>();
        tmp1 = simd_andc(basis_bits.bit_1, basis_bits.bit_0);
        tmp2 = simd_and(tmp1, basis_bits.bit_2);
        tmp3 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp4 = simd_or(basis_bits.bit_5, tmp3);
        tmp5 = simd_and(basis_bits.bit_4, tmp4);
        tmp6 = simd_not(tmp5);
        tmp7 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp8 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp9 = simd_or(tmp7, tmp8);
        tmp10 = simd_or(simd_and(basis_bits.bit_3, tmp6), simd_andc(tmp9, basis_bits.bit_3));
        bytetest_61_7a = simd_and(tmp2, tmp10);
        struct_Ll.cc = simd_or(bytetest_61_7a, struct_Ll.cc);
        tmp11 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp12 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp13 = simd_and(tmp11, tmp12);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        tmp14 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp15 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp16 = simd_and(tmp14, tmp15);
        tmp17 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp18 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp19 = simd_and(tmp17, tmp18);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_90 = simd_andc(tmp16, tmp9);
        tmp20 = simd_and(basis_bits.bit_3, tmp7);
        tmp21 = simd_not(tmp20);
        tmp22 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
        tmp23 = simd_and(basis_bits.bit_4, tmp22);
        tmp24 = simd_and(basis_bits.bit_3, tmp23);
        tmp25 = simd_or(simd_and(basis_bits.bit_2, tmp21), simd_andc(tmp24, basis_bits.bit_2));
        bytetest_9a_b3 = simd_and(tmp14, tmp25);
        tmp26 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp26, carryQ.get_carry_in(0), tmp27));
        tmp28 = simd_and(tmp27, bytetest_f0);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp28, carryQ.get_carry_in(1), tmp29));
        tmp30 = simd_and(tmp29, bytetest_9d);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp30, carryQ.get_carry_in(2), tmp31));
        tmp32 = simd_and(tmp31, bytetest_90);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp32, carryQ.get_carry_in(3), tmp33));
        tmp34 = simd_and(tmp33, bytetest_9a_b3);
        struct_Ll.cc = simd_or(tmp34, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        tmp35 = simd_andc(tmp18, tmp7);
        bytetest_91 = simd_and(tmp16, tmp35);
        tmp36 = simd_andc(tmp14, basis_bits.bit_2);
        tmp37 = simd_and(basis_bits.bit_5, tmp8);
        tmp38 = simd_or(basis_bits.bit_4, tmp37);
        tmp39 = simd_not(tmp38);
        tmp40 = simd_and(tmp17, basis_bits.bit_6);
        tmp41 = simd_or(simd_and(basis_bits.bit_3, tmp39), simd_andc(tmp40, basis_bits.bit_3));
        bytetest_8e_94 = simd_and(tmp36, tmp41);
        tmp42 = simd_and(tmp31, bytetest_91);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp42, carryQ.get_carry_in(4), tmp43));
        tmp44 = simd_and(tmp43, bytetest_8e_94);
        struct_Ll.cc = simd_or(tmp44, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_91 = simd_and(tmp16, tmp35);
        tmp45 = simd_or(basis_bits.bit_3, basis_bits.bit_4);
        tmp46 = simd_not(tmp45);
        tmp47 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp48 = simd_or(basis_bits.bit_4, tmp47);
        tmp49 = simd_and(basis_bits.bit_3, tmp48);
        tmp50 = simd_or(simd_and(basis_bits.bit_2, tmp46), simd_andc(tmp49, basis_bits.bit_2));
        bytetest_96_a7 = simd_and(tmp14, tmp50);
        tmp51 = simd_and(tmp43, bytetest_96_a7);
        struct_Ll.cc = simd_or(tmp51, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        tmp52 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp53 = simd_andc(tmp52, tmp7);
        bytetest_92 = simd_and(tmp16, tmp53);
        tmp54 = simd_not(tmp17);
        tmp55 = simd_or(tmp7, basis_bits.bit_6);
        tmp56 = simd_or(simd_and(basis_bits.bit_3, tmp54), simd_andc(tmp55, basis_bits.bit_3));
        bytetest_82_9b = simd_and(tmp36, tmp56);
        tmp57 = simd_and(tmp31, bytetest_92);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp57, carryQ.get_carry_in(5), tmp58));
        tmp59 = simd_and(tmp58, bytetest_82_9b);
        struct_Ll.cc = simd_or(tmp59, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_92 = simd_and(tmp16, tmp53);
        tmp60 = simd_and(tmp14, tmp12);
        tmp61 = simd_not(tmp22);
        tmp62 = simd_or(simd_and(basis_bits.bit_4, tmp61), simd_andc(tmp47, basis_bits.bit_4));
        bytetest_b6_b9 = simd_and(tmp60, tmp62);
        tmp63 = simd_and(tmp58, bytetest_b6_b9);
        struct_Ll.cc = simd_or(tmp63, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_92 = simd_and(tmp16, tmp53);
        tmp64 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp65 = simd_and(tmp64, tmp3);
        bytetest_bb_bb = simd_and(tmp60, tmp65);
        tmp66 = simd_and(tmp58, bytetest_bb_bb);
        struct_Ll.cc = simd_or(tmp66, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        tmp67 = simd_andc(tmp3, tmp7);
        bytetest_93 = simd_and(tmp16, tmp67);
        tmp68 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp69 = simd_andc(tmp14, tmp68);
        bytetest_80_83 = simd_andc(tmp69, tmp7);
        tmp70 = simd_and(tmp31, bytetest_93);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp70, carryQ.get_carry_in(6), tmp71));
        tmp72 = simd_and(tmp71, bytetest_80_83);
        bytetest_92 = simd_and(tmp16, tmp53);
        tmp73 = simd_and(tmp60, tmp17);
        bytetest_bd_bf = simd_and(tmp73, tmp8);
        tmp74 = simd_and(tmp58, bytetest_bd_bf);
        tmp75 = simd_or(tmp74, tmp72);
        struct_Ll.cc = simd_or(tmp75, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_93 = simd_and(tmp16, tmp67);
        bytetest_85_8f = simd_and(tmp69, tmp38);
        tmp76 = simd_and(tmp71, bytetest_85_8f);
        struct_Ll.cc = simd_or(tmp76, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        tmp77 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp78 = simd_andc(tmp77, tmp8);
        bytetest_94 = simd_and(tmp16, tmp78);
        bytetest_80_83 = simd_andc(tmp69, tmp7);
        tmp79 = simd_and(tmp31, bytetest_94);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp79, carryQ.get_carry_in(7), tmp80));
        tmp81 = simd_and(tmp80, bytetest_80_83);
        bytetest_93 = simd_and(tmp16, tmp67);
        tmp82 = simd_and(tmp14, basis_bits.bit_2);
        tmp83 = simd_or(basis_bits.bit_3, tmp23);
        bytetest_aa_bf = simd_and(tmp82, tmp83);
        tmp84 = simd_and(tmp71, bytetest_aa_bf);
        tmp85 = simd_or(tmp84, tmp81);
        struct_Ll.cc = simd_or(tmp85, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_94 = simd_and(tmp16, tmp78);
        tmp86 = simd_and(basis_bits.bit_3, basis_bits.bit_4);
        tmp87 = simd_not(tmp86);
        tmp88 = simd_and(basis_bits.bit_3, tmp40);
        tmp89 = simd_or(simd_and(basis_bits.bit_2, tmp87), simd_andc(tmp88, basis_bits.bit_2));
        bytetest_9e_b7 = simd_and(tmp14, tmp89);
        tmp90 = simd_and(tmp80, bytetest_9e_b7);
        struct_Ll.cc = simd_or(tmp90, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        tmp91 = simd_and(tmp77, tmp18);
        bytetest_95 = simd_and(tmp16, tmp91);
        tmp92 = simd_or(basis_bits.bit_3, tmp17);
        tmp93 = simd_not(tmp92);
        tmp94 = simd_and(basis_bits.bit_3, tmp55);
        tmp95 = simd_or(simd_and(basis_bits.bit_2, tmp93), simd_andc(tmp94, basis_bits.bit_2));
        bytetest_92_ab = simd_and(tmp14, tmp95);
        tmp96 = simd_and(tmp31, bytetest_95);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(tmp96, carryQ.get_carry_in(8), tmp97));
        tmp98 = simd_and(tmp97, bytetest_92_ab);
        struct_Ll.cc = simd_or(tmp98, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        tmp99 = simd_and(tmp77, tmp52);
        bytetest_96 = simd_and(tmp16, tmp99);
        tmp100 = simd_or(basis_bits.bit_3, tmp48);
        bytetest_86_9f = simd_and(tmp36, tmp100);
        tmp101 = simd_and(tmp31, bytetest_96);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(tmp101, carryQ.get_carry_in(9), tmp102));
        tmp103 = simd_and(tmp102, bytetest_86_9f);
        struct_Ll.cc = simd_or(tmp103, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        tmp104 = simd_and(tmp77, tmp3);
        bytetest_97 = simd_and(tmp16, tmp104);
        bytetest_80_93 = simd_andc(tmp36, tmp20);
        tmp105 = simd_and(tmp31, bytetest_97);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(tmp105, carryQ.get_carry_in(10), tmp106));
        tmp107 = simd_and(tmp106, bytetest_80_93);
        bytetest_96 = simd_and(tmp16, tmp99);
        tmp108 = simd_and(tmp60, basis_bits.bit_4);
        bytetest_ba_bf = simd_and(tmp108, tmp22);
        tmp109 = simd_and(tmp102, bytetest_ba_bf);
        tmp110 = simd_or(tmp109, tmp107);
        struct_Ll.cc = simd_or(tmp110, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        tmp111 = simd_andc(tmp64, tmp8);
        bytetest_98 = simd_and(tmp16, tmp111);
        bytetest_80_87 = simd_andc(tmp69, basis_bits.bit_4);
        tmp112 = simd_and(tmp31, bytetest_98);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(tmp112, carryQ.get_carry_in(11), tmp113));
        tmp114 = simd_and(tmp113, bytetest_80_87);
        bytetest_97 = simd_and(tmp16, tmp104);
        tmp115 = simd_or(basis_bits.bit_3, tmp40);
        bytetest_ae_bf = simd_and(tmp82, tmp115);
        tmp116 = simd_and(tmp106, bytetest_ae_bf);
        tmp117 = simd_or(tmp116, tmp114);
        struct_Ll.cc = simd_or(tmp117, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_98 = simd_and(tmp16, tmp111);
        bytetest_a2_bb = simd_and(tmp82, tmp56);
        tmp118 = simd_and(tmp113, bytetest_a2_bb);
        struct_Ll.cc = simd_or(tmp118, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        tmp119 = simd_and(tmp64, tmp18);
        bytetest_99 = simd_and(tmp16, tmp119);
        tmp120 = simd_not(basis_bits.bit_3);
        tmp121 = simd_or(simd_and(basis_bits.bit_2, tmp120), simd_andc(tmp49, basis_bits.bit_2));
        bytetest_96_af = simd_and(tmp14, tmp121);
        tmp122 = simd_and(tmp31, bytetest_99);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(tmp122, carryQ.get_carry_in(12), tmp123));
        tmp124 = simd_and(tmp123, bytetest_96_af);
        struct_Ll.cc = simd_or(tmp124, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        tmp125 = simd_and(tmp64, tmp52);
        bytetest_9a = simd_and(tmp16, tmp125);
        tmp126 = simd_not(tmp100);
        tmp127 = simd_or(simd_and(basis_bits.bit_2, tmp126), simd_andc(tmp83, basis_bits.bit_2));
        bytetest_8a_a5 = simd_and(tmp14, tmp127);
        tmp128 = simd_and(tmp31, bytetest_9a);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(tmp128, carryQ.get_carry_in(13), tmp129));
        tmp130 = simd_and(tmp129, bytetest_8a_a5);
        struct_Ll.cc = simd_or(tmp130, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_9b = simd_and(tmp16, tmp65);
        tmp131 = simd_or(simd_and(basis_bits.bit_3, tmp6), simd_andc(tmp55, basis_bits.bit_3));
        bytetest_82_9a = simd_and(tmp36, tmp131);
        tmp132 = simd_and(tmp31, bytetest_9b);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(tmp132, carryQ.get_carry_in(14), tmp133));
        tmp134 = simd_and(tmp133, bytetest_82_9a);
        struct_Ll.cc = simd_or(tmp134, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_9b = simd_and(tmp16, tmp65);
        tmp135 = simd_or(basis_bits.bit_3, tmp55);
        tmp136 = simd_not(tmp135);
        tmp137 = simd_and(basis_bits.bit_3, tmp17);
        tmp138 = simd_or(simd_and(basis_bits.bit_2, tmp136), simd_andc(tmp137, basis_bits.bit_2));
        bytetest_9c_a1 = simd_and(tmp14, tmp138);
        tmp139 = simd_and(tmp133, bytetest_9c_a1);
        struct_Ll.cc = simd_or(tmp139, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        tmp140 = simd_andc(tmp17, tmp8);
        bytetest_9c = simd_and(tmp16, tmp140);
        tmp141 = simd_and(basis_bits.bit_3, tmp38);
        bytetest_80_94 = simd_andc(tmp36, tmp141);
        tmp142 = simd_and(tmp31, bytetest_9c);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(tmp142, carryQ.get_carry_in(15), tmp143));
        tmp144 = simd_and(tmp143, bytetest_80_94);
        bytetest_9b = simd_and(tmp16, tmp65);
        bytetest_bc_bf = simd_and(tmp60, tmp17);
        tmp145 = simd_and(tmp133, bytetest_bc_bf);
        tmp146 = simd_or(tmp145, tmp144);
        struct_Ll.cc = simd_or(tmp146, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_9c = simd_and(tmp16, tmp140);
        tmp147 = simd_not(basis_bits.bit_5);
        tmp148 = simd_or(simd_and(basis_bits.bit_4, tmp147), simd_andc(tmp47, basis_bits.bit_4));
        bytetest_96_9b = simd_and(tmp16, tmp148);
        tmp149 = simd_and(tmp143, bytetest_96_9b);
        struct_Ll.cc = simd_or(tmp149, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_9d = simd_and(tmp16, tmp19);
        tmp150 = simd_and(basis_bits.bit_5, tmp3);
        tmp151 = simd_and(basis_bits.bit_4, tmp150);
        bytetest_80_8e = simd_andc(tmp69, tmp151);
        tmp152 = simd_and(tmp31, bytetest_9d);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(tmp152, carryQ.get_carry_in(16), tmp153));
        tmp154 = simd_and(tmp153, bytetest_80_8e);
        bytetest_9c = simd_and(tmp16, tmp140);
        bytetest_b6_bf = simd_and(tmp60, tmp48);
        tmp155 = simd_and(tmp143, bytetest_b6_bf);
        tmp156 = simd_or(tmp155, tmp154);
        struct_Ll.cc = simd_or(tmp156, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_9d = simd_and(tmp16, tmp19);
        tmp157 = simd_andc(tmp16, basis_bits.bit_4);
        bytetest_90_95 = simd_andc(tmp157, tmp47);
        tmp158 = simd_and(tmp153, bytetest_90_95);
        struct_Ll.cc = simd_or(tmp158, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        tmp159 = simd_and(tmp17, tmp52);
        bytetest_9e = simd_and(tmp16, tmp159);
        tmp160 = simd_or(basis_bits.bit_5, tmp8);
        tmp161 = simd_and(basis_bits.bit_4, tmp160);
        bytetest_80_88 = simd_andc(tmp69, tmp161);
        tmp162 = simd_and(tmp31, bytetest_9e);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(tmp162, carryQ.get_carry_in(17), tmp163));
        tmp164 = simd_and(tmp163, bytetest_80_88);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_b0_bf = simd_and(tmp14, tmp12);
        tmp165 = simd_and(tmp153, bytetest_b0_bf);
        tmp166 = simd_or(tmp165, tmp164);
        struct_Ll.cc = simd_or(tmp166, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_9e = simd_and(tmp16, tmp159);
        tmp167 = simd_and(tmp69, basis_bits.bit_4);
        bytetest_8a_8f = simd_and(tmp167, tmp22);
        tmp168 = simd_and(tmp163, bytetest_8a_8f);
        struct_Ll.cc = simd_or(tmp168, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        tmp169 = simd_and(tmp17, tmp3);
        bytetest_9f = simd_and(tmp16, tmp169);
        bytetest_80_82 = simd_andc(bytetest_80_83, tmp3);
        tmp170 = simd_and(tmp31, bytetest_9f);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(tmp170, carryQ.get_carry_in(18), tmp171));
        tmp172 = simd_and(tmp171, bytetest_80_82);
        bytetest_9e = simd_and(tmp16, tmp159);
        bytetest_aa_bf = simd_and(tmp82, tmp83);
        tmp173 = simd_and(tmp163, bytetest_aa_bf);
        tmp174 = simd_or(tmp173, tmp172);
        struct_Ll.cc = simd_or(tmp174, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_9f = simd_and(tmp16, tmp169);
        tmp175 = simd_or(simd_and(basis_bits.bit_4, tmp61), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
        bytetest_84_89 = simd_and(tmp69, tmp175);
        tmp176 = simd_and(tmp171, bytetest_84_89);
        struct_Ll.cc = simd_or(tmp176, struct_Ll.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_9f = simd_and(tmp16, tmp169);
        bytetest_8b_8b = simd_and(tmp69, tmp65);
        tmp177 = simd_and(tmp171, bytetest_8b_8b);
        struct_Ll.cc = simd_or(tmp177, struct_Ll.cc);
        tmp178 = simd_andc(tmp11, basis_bits.bit_2);
        bytetest_c2_df = simd_and(tmp178, tmp135);
        if ((bitblock::any(bytetest_c2_df) || carryQ.CarryTest(19, 19))) {
          r80_7ff_tmp1 = simd_andc(tmp11, tmp68);
          bytetest_c2 = simd_and(r80_7ff_tmp1, tmp53);
          bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp91);
          r80_7ff_tmp2 = simd_and(tmp27, bytetest_c2);
          carryQ.cq[19] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp2, carryQ.get_carry_in(19), r80_7ff_tmp3));
          r80_7ff_tmp4 = simd_and(r80_7ff_tmp3, bytetest_b5_b5);
          struct_Ll.cc = simd_or(r80_7ff_tmp4, struct_Ll.cc);
          bytetest_c3 = simd_and(r80_7ff_tmp1, tmp67);
          r80_7ff_tmp5 = simd_or(basis_bits.bit_4, tmp150);
          r80_7ff_tmp6 = simd_and(basis_bits.bit_3, r80_7ff_tmp5);
          r80_7ff_tmp7 = simd_not(r80_7ff_tmp6);
          r80_7ff_tmp8 = simd_and(basis_bits.bit_3, tmp169);
          r80_7ff_tmp9 = simd_or(simd_and(basis_bits.bit_2, r80_7ff_tmp7), simd_andc(r80_7ff_tmp8, basis_bits.bit_2));
          bytetest_9f_b6 = simd_and(tmp14, r80_7ff_tmp9);
          r80_7ff_tmp10 = simd_and(tmp27, bytetest_c3);
          carryQ.cq[20] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp10, carryQ.get_carry_in(20), r80_7ff_tmp11));
          r80_7ff_tmp12 = simd_and(r80_7ff_tmp11, bytetest_9f_b6);
          struct_Ll.cc = simd_or(r80_7ff_tmp12, struct_Ll.cc);
          bytetest_c3 = simd_and(r80_7ff_tmp1, tmp67);
          bytetest_b8_bf = simd_and(bytetest_b0_bf, basis_bits.bit_4);
          r80_7ff_tmp13 = simd_and(r80_7ff_tmp11, bytetest_b8_bf);
          struct_Ll.cc = simd_or(r80_7ff_tmp13, struct_Ll.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp78);
          bytetest_81_81 = simd_and(tmp69, tmp35);
          r80_7ff_tmp14 = simd_and(tmp27, bytetest_c4);
          carryQ.cq[21] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp14, carryQ.get_carry_in(21), r80_7ff_tmp15));
          r80_7ff_tmp16 = simd_and(r80_7ff_tmp15, bytetest_81_81);
          struct_Ll.cc = simd_or(r80_7ff_tmp16, struct_Ll.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp78);
          bytetest_83_83 = simd_and(tmp69, tmp67);
          r80_7ff_tmp17 = simd_and(r80_7ff_tmp15, bytetest_83_83);
          struct_Ll.cc = simd_or(r80_7ff_tmp17, struct_Ll.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp78);
          bytetest_85_85 = simd_and(tmp69, tmp91);
          r80_7ff_tmp18 = simd_and(r80_7ff_tmp15, bytetest_85_85);
          struct_Ll.cc = simd_or(r80_7ff_tmp18, struct_Ll.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp78);
          bytetest_87_87 = simd_and(tmp69, tmp104);
          r80_7ff_tmp19 = simd_and(r80_7ff_tmp15, bytetest_87_87);
          struct_Ll.cc = simd_or(r80_7ff_tmp19, struct_Ll.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp78);
          bytetest_89_89 = simd_and(tmp69, tmp119);
          r80_7ff_tmp20 = simd_and(r80_7ff_tmp15, bytetest_89_89);
          struct_Ll.cc = simd_or(r80_7ff_tmp20, struct_Ll.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp78);
          bytetest_8b_8b = simd_and(tmp69, tmp65);
          r80_7ff_tmp21 = simd_and(r80_7ff_tmp15, bytetest_8b_8b);
          struct_Ll.cc = simd_or(r80_7ff_tmp21, struct_Ll.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp78);
          bytetest_8d_8d = simd_and(tmp69, tmp19);
          r80_7ff_tmp22 = simd_and(r80_7ff_tmp15, bytetest_8d_8d);
          struct_Ll.cc = simd_or(r80_7ff_tmp22, struct_Ll.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp78);
          bytetest_8f_8f = simd_and(tmp69, tmp169);
          r80_7ff_tmp23 = simd_and(r80_7ff_tmp15, bytetest_8f_8f);
          struct_Ll.cc = simd_or(r80_7ff_tmp23, struct_Ll.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp78);
          bytetest_91_91 = simd_and(tmp16, tmp35);
          r80_7ff_tmp24 = simd_and(r80_7ff_tmp15, bytetest_91_91);
          struct_Ll.cc = simd_or(r80_7ff_tmp24, struct_Ll.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp78);
          bytetest_93_93 = simd_and(tmp16, tmp67);
          r80_7ff_tmp25 = simd_and(r80_7ff_tmp15, bytetest_93_93);
          struct_Ll.cc = simd_or(r80_7ff_tmp25, struct_Ll.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp78);
          bytetest_95_95 = simd_and(tmp16, tmp91);
          r80_7ff_tmp26 = simd_and(r80_7ff_tmp15, bytetest_95_95);
          struct_Ll.cc = simd_or(r80_7ff_tmp26, struct_Ll.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp78);
          bytetest_97_97 = simd_and(tmp16, tmp104);
          r80_7ff_tmp27 = simd_and(r80_7ff_tmp15, bytetest_97_97);
          struct_Ll.cc = simd_or(r80_7ff_tmp27, struct_Ll.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp78);
          bytetest_99_99 = simd_and(tmp16, tmp119);
          r80_7ff_tmp28 = simd_and(r80_7ff_tmp15, bytetest_99_99);
          struct_Ll.cc = simd_or(r80_7ff_tmp28, struct_Ll.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp78);
          bytetest_9b_9b = simd_and(tmp16, tmp65);
          r80_7ff_tmp29 = simd_and(r80_7ff_tmp15, bytetest_9b_9b);
          struct_Ll.cc = simd_or(r80_7ff_tmp29, struct_Ll.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp78);
          bytetest_9d_9d = simd_and(tmp16, tmp19);
          r80_7ff_tmp30 = simd_and(r80_7ff_tmp15, bytetest_9d_9d);
          struct_Ll.cc = simd_or(r80_7ff_tmp30, struct_Ll.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp78);
          bytetest_9f_9f = simd_and(tmp16, tmp169);
          r80_7ff_tmp31 = simd_and(r80_7ff_tmp15, bytetest_9f_9f);
          struct_Ll.cc = simd_or(r80_7ff_tmp31, struct_Ll.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp78);
          r80_7ff_tmp32 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
          r80_7ff_tmp33 = simd_and(tmp14, r80_7ff_tmp32);
          bytetest_a1_a1 = simd_and(r80_7ff_tmp33, tmp35);
          r80_7ff_tmp34 = simd_and(r80_7ff_tmp15, bytetest_a1_a1);
          struct_Ll.cc = simd_or(r80_7ff_tmp34, struct_Ll.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp78);
          bytetest_a3_a3 = simd_and(r80_7ff_tmp33, tmp67);
          r80_7ff_tmp35 = simd_and(r80_7ff_tmp15, bytetest_a3_a3);
          struct_Ll.cc = simd_or(r80_7ff_tmp35, struct_Ll.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp78);
          bytetest_a5_a5 = simd_and(r80_7ff_tmp33, tmp91);
          r80_7ff_tmp36 = simd_and(r80_7ff_tmp15, bytetest_a5_a5);
          struct_Ll.cc = simd_or(r80_7ff_tmp36, struct_Ll.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp78);
          bytetest_a7_a7 = simd_and(r80_7ff_tmp33, tmp104);
          r80_7ff_tmp37 = simd_and(r80_7ff_tmp15, bytetest_a7_a7);
          struct_Ll.cc = simd_or(r80_7ff_tmp37, struct_Ll.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp78);
          bytetest_a9_a9 = simd_and(r80_7ff_tmp33, tmp119);
          r80_7ff_tmp38 = simd_and(r80_7ff_tmp15, bytetest_a9_a9);
          struct_Ll.cc = simd_or(r80_7ff_tmp38, struct_Ll.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp78);
          bytetest_ab_ab = simd_and(r80_7ff_tmp33, tmp65);
          r80_7ff_tmp39 = simd_and(r80_7ff_tmp15, bytetest_ab_ab);
          struct_Ll.cc = simd_or(r80_7ff_tmp39, struct_Ll.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp78);
          bytetest_ad_ad = simd_and(r80_7ff_tmp33, tmp19);
          r80_7ff_tmp40 = simd_and(r80_7ff_tmp15, bytetest_ad_ad);
          struct_Ll.cc = simd_or(r80_7ff_tmp40, struct_Ll.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp78);
          bytetest_af_af = simd_and(r80_7ff_tmp33, tmp169);
          r80_7ff_tmp41 = simd_and(r80_7ff_tmp15, bytetest_af_af);
          struct_Ll.cc = simd_or(r80_7ff_tmp41, struct_Ll.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp78);
          bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp35);
          r80_7ff_tmp42 = simd_and(r80_7ff_tmp15, bytetest_b1_b1);
          struct_Ll.cc = simd_or(r80_7ff_tmp42, struct_Ll.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp78);
          bytetest_b3_b3 = simd_and(bytetest_b0_bf, tmp67);
          r80_7ff_tmp43 = simd_and(r80_7ff_tmp15, bytetest_b3_b3);
          struct_Ll.cc = simd_or(r80_7ff_tmp43, struct_Ll.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp78);
          bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp91);
          r80_7ff_tmp44 = simd_and(r80_7ff_tmp15, bytetest_b5_b5);
          struct_Ll.cc = simd_or(r80_7ff_tmp44, struct_Ll.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp78);
          r80_7ff_tmp45 = simd_not(tmp160);
          r80_7ff_tmp46 = simd_or(simd_and(basis_bits.bit_4, r80_7ff_tmp45), simd_andc(tmp150, basis_bits.bit_4));
          bytetest_b7_b8 = simd_and(bytetest_b0_bf, r80_7ff_tmp46);
          r80_7ff_tmp47 = simd_and(r80_7ff_tmp15, bytetest_b7_b8);
          struct_Ll.cc = simd_or(r80_7ff_tmp47, struct_Ll.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp78);
          bytetest_ba_ba = simd_and(bytetest_b0_bf, tmp125);
          r80_7ff_tmp48 = simd_and(r80_7ff_tmp15, bytetest_ba_ba);
          struct_Ll.cc = simd_or(r80_7ff_tmp48, struct_Ll.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp78);
          bytetest_bc_bc = simd_and(bytetest_b0_bf, tmp140);
          r80_7ff_tmp49 = simd_and(r80_7ff_tmp15, bytetest_bc_bc);
          struct_Ll.cc = simd_or(r80_7ff_tmp49, struct_Ll.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp78);
          bytetest_be_be = simd_and(bytetest_b0_bf, tmp159);
          r80_7ff_tmp50 = simd_and(r80_7ff_tmp15, bytetest_be_be);
          struct_Ll.cc = simd_or(r80_7ff_tmp50, struct_Ll.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp91);
          bytetest_80_80 = simd_andc(tmp69, tmp9);
          r80_7ff_tmp51 = simd_and(tmp27, bytetest_c5);
          carryQ.cq[22] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp51, carryQ.get_carry_in(22), r80_7ff_tmp52));
          r80_7ff_tmp53 = simd_and(r80_7ff_tmp52, bytetest_80_80);
          struct_Ll.cc = simd_or(r80_7ff_tmp53, struct_Ll.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp91);
          bytetest_82_82 = simd_and(tmp69, tmp53);
          r80_7ff_tmp54 = simd_and(r80_7ff_tmp52, bytetest_82_82);
          struct_Ll.cc = simd_or(r80_7ff_tmp54, struct_Ll.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp91);
          bytetest_84_84 = simd_and(tmp69, tmp78);
          r80_7ff_tmp55 = simd_and(r80_7ff_tmp52, bytetest_84_84);
          struct_Ll.cc = simd_or(r80_7ff_tmp55, struct_Ll.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp91);
          bytetest_86_86 = simd_and(tmp69, tmp99);
          r80_7ff_tmp56 = simd_and(r80_7ff_tmp52, bytetest_86_86);
          struct_Ll.cc = simd_or(r80_7ff_tmp56, struct_Ll.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp91);
          r80_7ff_tmp57 = simd_andc(tmp64, basis_bits.bit_6);
          bytetest_88_89 = simd_and(tmp69, r80_7ff_tmp57);
          r80_7ff_tmp58 = simd_and(r80_7ff_tmp52, bytetest_88_89);
          struct_Ll.cc = simd_or(r80_7ff_tmp58, struct_Ll.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp91);
          bytetest_8b_8b = simd_and(tmp69, tmp65);
          r80_7ff_tmp59 = simd_and(r80_7ff_tmp52, bytetest_8b_8b);
          struct_Ll.cc = simd_or(r80_7ff_tmp59, struct_Ll.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp91);
          bytetest_8d_8d = simd_and(tmp69, tmp19);
          r80_7ff_tmp60 = simd_and(r80_7ff_tmp52, bytetest_8d_8d);
          struct_Ll.cc = simd_or(r80_7ff_tmp60, struct_Ll.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp91);
          bytetest_8f_8f = simd_and(tmp69, tmp169);
          r80_7ff_tmp61 = simd_and(r80_7ff_tmp52, bytetest_8f_8f);
          struct_Ll.cc = simd_or(r80_7ff_tmp61, struct_Ll.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp91);
          bytetest_91_91 = simd_and(tmp16, tmp35);
          r80_7ff_tmp62 = simd_and(r80_7ff_tmp52, bytetest_91_91);
          struct_Ll.cc = simd_or(r80_7ff_tmp62, struct_Ll.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp91);
          bytetest_93_93 = simd_and(tmp16, tmp67);
          r80_7ff_tmp63 = simd_and(r80_7ff_tmp52, bytetest_93_93);
          struct_Ll.cc = simd_or(r80_7ff_tmp63, struct_Ll.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp91);
          bytetest_95_95 = simd_and(tmp16, tmp91);
          r80_7ff_tmp64 = simd_and(r80_7ff_tmp52, bytetest_95_95);
          struct_Ll.cc = simd_or(r80_7ff_tmp64, struct_Ll.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp91);
          bytetest_97_97 = simd_and(tmp16, tmp104);
          r80_7ff_tmp65 = simd_and(r80_7ff_tmp52, bytetest_97_97);
          struct_Ll.cc = simd_or(r80_7ff_tmp65, struct_Ll.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp91);
          bytetest_99_99 = simd_and(tmp16, tmp119);
          r80_7ff_tmp66 = simd_and(r80_7ff_tmp52, bytetest_99_99);
          struct_Ll.cc = simd_or(r80_7ff_tmp66, struct_Ll.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp91);
          bytetest_9b_9b = simd_and(tmp16, tmp65);
          r80_7ff_tmp67 = simd_and(r80_7ff_tmp52, bytetest_9b_9b);
          struct_Ll.cc = simd_or(r80_7ff_tmp67, struct_Ll.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp91);
          bytetest_9d_9d = simd_and(tmp16, tmp19);
          r80_7ff_tmp68 = simd_and(r80_7ff_tmp52, bytetest_9d_9d);
          struct_Ll.cc = simd_or(r80_7ff_tmp68, struct_Ll.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp91);
          bytetest_9f_9f = simd_and(tmp16, tmp169);
          r80_7ff_tmp69 = simd_and(r80_7ff_tmp52, bytetest_9f_9f);
          struct_Ll.cc = simd_or(r80_7ff_tmp69, struct_Ll.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp91);
          bytetest_a1_a1 = simd_and(r80_7ff_tmp33, tmp35);
          r80_7ff_tmp70 = simd_and(r80_7ff_tmp52, bytetest_a1_a1);
          struct_Ll.cc = simd_or(r80_7ff_tmp70, struct_Ll.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp91);
          bytetest_a3_a3 = simd_and(r80_7ff_tmp33, tmp67);
          r80_7ff_tmp71 = simd_and(r80_7ff_tmp52, bytetest_a3_a3);
          struct_Ll.cc = simd_or(r80_7ff_tmp71, struct_Ll.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp91);
          bytetest_a5_a5 = simd_and(r80_7ff_tmp33, tmp91);
          r80_7ff_tmp72 = simd_and(r80_7ff_tmp52, bytetest_a5_a5);
          struct_Ll.cc = simd_or(r80_7ff_tmp72, struct_Ll.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp91);
          bytetest_a7_a7 = simd_and(r80_7ff_tmp33, tmp104);
          r80_7ff_tmp73 = simd_and(r80_7ff_tmp52, bytetest_a7_a7);
          struct_Ll.cc = simd_or(r80_7ff_tmp73, struct_Ll.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp91);
          bytetest_a9_a9 = simd_and(r80_7ff_tmp33, tmp119);
          r80_7ff_tmp74 = simd_and(r80_7ff_tmp52, bytetest_a9_a9);
          struct_Ll.cc = simd_or(r80_7ff_tmp74, struct_Ll.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp91);
          bytetest_ab_ab = simd_and(r80_7ff_tmp33, tmp65);
          r80_7ff_tmp75 = simd_and(r80_7ff_tmp52, bytetest_ab_ab);
          struct_Ll.cc = simd_or(r80_7ff_tmp75, struct_Ll.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp91);
          bytetest_ad_ad = simd_and(r80_7ff_tmp33, tmp19);
          r80_7ff_tmp76 = simd_and(r80_7ff_tmp52, bytetest_ad_ad);
          struct_Ll.cc = simd_or(r80_7ff_tmp76, struct_Ll.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp91);
          bytetest_af_af = simd_and(r80_7ff_tmp33, tmp169);
          r80_7ff_tmp77 = simd_and(r80_7ff_tmp52, bytetest_af_af);
          struct_Ll.cc = simd_or(r80_7ff_tmp77, struct_Ll.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp91);
          bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp35);
          r80_7ff_tmp78 = simd_and(r80_7ff_tmp52, bytetest_b1_b1);
          struct_Ll.cc = simd_or(r80_7ff_tmp78, struct_Ll.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp91);
          bytetest_b3_b3 = simd_and(bytetest_b0_bf, tmp67);
          r80_7ff_tmp79 = simd_and(r80_7ff_tmp52, bytetest_b3_b3);
          struct_Ll.cc = simd_or(r80_7ff_tmp79, struct_Ll.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp91);
          bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp91);
          r80_7ff_tmp80 = simd_and(r80_7ff_tmp52, bytetest_b5_b5);
          struct_Ll.cc = simd_or(r80_7ff_tmp80, struct_Ll.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp91);
          bytetest_b7_b7 = simd_and(bytetest_b0_bf, tmp104);
          r80_7ff_tmp81 = simd_and(r80_7ff_tmp52, bytetest_b7_b7);
          struct_Ll.cc = simd_or(r80_7ff_tmp81, struct_Ll.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp91);
          bytetest_ba_ba = simd_and(bytetest_b0_bf, tmp125);
          r80_7ff_tmp82 = simd_and(r80_7ff_tmp52, bytetest_ba_ba);
          struct_Ll.cc = simd_or(r80_7ff_tmp82, struct_Ll.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp91);
          bytetest_bc_bc = simd_and(bytetest_b0_bf, tmp140);
          r80_7ff_tmp83 = simd_and(r80_7ff_tmp52, bytetest_bc_bc);
          struct_Ll.cc = simd_or(r80_7ff_tmp83, struct_Ll.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp99);
          bytetest_80_80 = simd_andc(tmp69, tmp9);
          r80_7ff_tmp84 = simd_and(tmp27, bytetest_c6);
          carryQ.cq[23] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp84, carryQ.get_carry_in(23), r80_7ff_tmp85));
          r80_7ff_tmp86 = simd_and(r80_7ff_tmp85, bytetest_80_80);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp91);
          bytetest_be_bf = simd_and(bytetest_b0_bf, tmp40);
          r80_7ff_tmp87 = simd_and(r80_7ff_tmp52, bytetest_be_bf);
          r80_7ff_tmp88 = simd_or(r80_7ff_tmp87, r80_7ff_tmp86);
          struct_Ll.cc = simd_or(r80_7ff_tmp88, struct_Ll.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp99);
          bytetest_83_83 = simd_and(tmp69, tmp67);
          r80_7ff_tmp89 = simd_and(r80_7ff_tmp85, bytetest_83_83);
          struct_Ll.cc = simd_or(r80_7ff_tmp89, struct_Ll.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp99);
          bytetest_85_85 = simd_and(tmp69, tmp91);
          r80_7ff_tmp90 = simd_and(r80_7ff_tmp85, bytetest_85_85);
          struct_Ll.cc = simd_or(r80_7ff_tmp90, struct_Ll.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp99);
          bytetest_88_88 = simd_and(tmp69, tmp111);
          r80_7ff_tmp91 = simd_and(r80_7ff_tmp85, bytetest_88_88);
          struct_Ll.cc = simd_or(r80_7ff_tmp91, struct_Ll.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp99);
          r80_7ff_tmp92 = simd_andc(tmp17, basis_bits.bit_6);
          bytetest_8c_8d = simd_and(tmp69, r80_7ff_tmp92);
          r80_7ff_tmp93 = simd_and(r80_7ff_tmp85, bytetest_8c_8d);
          struct_Ll.cc = simd_or(r80_7ff_tmp93, struct_Ll.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp99);
          bytetest_92_92 = simd_and(tmp16, tmp53);
          r80_7ff_tmp94 = simd_and(r80_7ff_tmp85, bytetest_92_92);
          struct_Ll.cc = simd_or(r80_7ff_tmp94, struct_Ll.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp99);
          bytetest_95_95 = simd_and(tmp16, tmp91);
          r80_7ff_tmp95 = simd_and(r80_7ff_tmp85, bytetest_95_95);
          struct_Ll.cc = simd_or(r80_7ff_tmp95, struct_Ll.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp99);
          r80_7ff_tmp96 = simd_and(tmp16, tmp64);
          bytetest_99_9b = simd_and(r80_7ff_tmp96, tmp8);
          r80_7ff_tmp97 = simd_and(r80_7ff_tmp85, bytetest_99_9b);
          struct_Ll.cc = simd_or(r80_7ff_tmp97, struct_Ll.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp99);
          bytetest_9e_9e = simd_and(tmp16, tmp159);
          r80_7ff_tmp98 = simd_and(r80_7ff_tmp85, bytetest_9e_9e);
          struct_Ll.cc = simd_or(r80_7ff_tmp98, struct_Ll.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp99);
          bytetest_a1_a1 = simd_and(r80_7ff_tmp33, tmp35);
          r80_7ff_tmp99 = simd_and(r80_7ff_tmp85, bytetest_a1_a1);
          struct_Ll.cc = simd_or(r80_7ff_tmp99, struct_Ll.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp99);
          bytetest_a3_a3 = simd_and(r80_7ff_tmp33, tmp67);
          r80_7ff_tmp100 = simd_and(r80_7ff_tmp85, bytetest_a3_a3);
          struct_Ll.cc = simd_or(r80_7ff_tmp100, struct_Ll.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp99);
          bytetest_a5_a5 = simd_and(r80_7ff_tmp33, tmp91);
          r80_7ff_tmp101 = simd_and(r80_7ff_tmp85, bytetest_a5_a5);
          struct_Ll.cc = simd_or(r80_7ff_tmp101, struct_Ll.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp99);
          bytetest_a8_a8 = simd_and(r80_7ff_tmp33, tmp111);
          r80_7ff_tmp102 = simd_and(r80_7ff_tmp85, bytetest_a8_a8);
          struct_Ll.cc = simd_or(r80_7ff_tmp102, struct_Ll.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp99);
          r80_7ff_tmp103 = simd_and(tmp64, basis_bits.bit_6);
          bytetest_aa_ab = simd_and(r80_7ff_tmp33, r80_7ff_tmp103);
          r80_7ff_tmp104 = simd_and(r80_7ff_tmp85, bytetest_aa_ab);
          struct_Ll.cc = simd_or(r80_7ff_tmp104, struct_Ll.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp99);
          bytetest_ad_ad = simd_and(r80_7ff_tmp33, tmp19);
          r80_7ff_tmp105 = simd_and(r80_7ff_tmp85, bytetest_ad_ad);
          struct_Ll.cc = simd_or(r80_7ff_tmp105, struct_Ll.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp99);
          bytetest_b0_b0 = simd_andc(bytetest_b0_bf, tmp9);
          r80_7ff_tmp106 = simd_and(r80_7ff_tmp85, bytetest_b0_b0);
          struct_Ll.cc = simd_or(r80_7ff_tmp106, struct_Ll.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp99);
          bytetest_b4_b4 = simd_and(bytetest_b0_bf, tmp78);
          r80_7ff_tmp107 = simd_and(r80_7ff_tmp85, bytetest_b4_b4);
          struct_Ll.cc = simd_or(r80_7ff_tmp107, struct_Ll.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp99);
          bytetest_b6_b6 = simd_and(bytetest_b0_bf, tmp99);
          r80_7ff_tmp108 = simd_and(r80_7ff_tmp85, bytetest_b6_b6);
          struct_Ll.cc = simd_or(r80_7ff_tmp108, struct_Ll.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp99);
          r80_7ff_tmp109 = simd_and(bytetest_b0_bf, tmp64);
          r80_7ff_tmp110 = simd_not(basis_bits.bit_7);
          r80_7ff_tmp111 = simd_or(simd_and(basis_bits.bit_6, r80_7ff_tmp110), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
          bytetest_b9_ba = simd_and(r80_7ff_tmp109, r80_7ff_tmp111);
          r80_7ff_tmp112 = simd_and(r80_7ff_tmp85, bytetest_b9_ba);
          struct_Ll.cc = simd_or(r80_7ff_tmp112, struct_Ll.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp99);
          r80_7ff_tmp113 = simd_and(bytetest_b0_bf, tmp17);
          bytetest_bd_bf = simd_and(r80_7ff_tmp113, tmp8);
          r80_7ff_tmp114 = simd_and(r80_7ff_tmp85, bytetest_bd_bf);
          struct_Ll.cc = simd_or(r80_7ff_tmp114, struct_Ll.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp104);
          bytetest_86_86 = simd_and(tmp69, tmp99);
          r80_7ff_tmp115 = simd_and(tmp27, bytetest_c7);
          carryQ.cq[24] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp115, carryQ.get_carry_in(24), r80_7ff_tmp116));
          r80_7ff_tmp117 = simd_and(r80_7ff_tmp116, bytetest_86_86);
          struct_Ll.cc = simd_or(r80_7ff_tmp117, struct_Ll.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp104);
          bytetest_89_89 = simd_and(tmp69, tmp119);
          r80_7ff_tmp118 = simd_and(r80_7ff_tmp116, bytetest_89_89);
          struct_Ll.cc = simd_or(r80_7ff_tmp118, struct_Ll.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp104);
          bytetest_8c_8c = simd_and(tmp69, tmp140);
          r80_7ff_tmp119 = simd_and(r80_7ff_tmp116, bytetest_8c_8c);
          struct_Ll.cc = simd_or(r80_7ff_tmp119, struct_Ll.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp104);
          bytetest_8e_8e = simd_and(tmp69, tmp159);
          r80_7ff_tmp120 = simd_and(r80_7ff_tmp116, bytetest_8e_8e);
          struct_Ll.cc = simd_or(r80_7ff_tmp120, struct_Ll.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp104);
          bytetest_90_90 = simd_andc(tmp16, tmp9);
          r80_7ff_tmp121 = simd_and(r80_7ff_tmp116, bytetest_90_90);
          struct_Ll.cc = simd_or(r80_7ff_tmp121, struct_Ll.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp104);
          bytetest_92_92 = simd_and(tmp16, tmp53);
          r80_7ff_tmp122 = simd_and(r80_7ff_tmp116, bytetest_92_92);
          struct_Ll.cc = simd_or(r80_7ff_tmp122, struct_Ll.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp104);
          bytetest_94_94 = simd_and(tmp16, tmp78);
          r80_7ff_tmp123 = simd_and(r80_7ff_tmp116, bytetest_94_94);
          struct_Ll.cc = simd_or(r80_7ff_tmp123, struct_Ll.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp104);
          bytetest_96_96 = simd_and(tmp16, tmp99);
          r80_7ff_tmp124 = simd_and(r80_7ff_tmp116, bytetest_96_96);
          struct_Ll.cc = simd_or(r80_7ff_tmp124, struct_Ll.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp104);
          bytetest_98_98 = simd_and(tmp16, tmp111);
          r80_7ff_tmp125 = simd_and(r80_7ff_tmp116, bytetest_98_98);
          struct_Ll.cc = simd_or(r80_7ff_tmp125, struct_Ll.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp104);
          bytetest_9a_9a = simd_and(tmp16, tmp125);
          r80_7ff_tmp126 = simd_and(r80_7ff_tmp116, bytetest_9a_9a);
          struct_Ll.cc = simd_or(r80_7ff_tmp126, struct_Ll.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp104);
          bytetest_9c_9d = simd_and(tmp16, r80_7ff_tmp92);
          r80_7ff_tmp127 = simd_and(r80_7ff_tmp116, bytetest_9c_9d);
          struct_Ll.cc = simd_or(r80_7ff_tmp127, struct_Ll.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp104);
          bytetest_9f_9f = simd_and(tmp16, tmp169);
          r80_7ff_tmp128 = simd_and(r80_7ff_tmp116, bytetest_9f_9f);
          struct_Ll.cc = simd_or(r80_7ff_tmp128, struct_Ll.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp104);
          bytetest_a1_a1 = simd_and(r80_7ff_tmp33, tmp35);
          r80_7ff_tmp129 = simd_and(r80_7ff_tmp116, bytetest_a1_a1);
          struct_Ll.cc = simd_or(r80_7ff_tmp129, struct_Ll.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp104);
          bytetest_a3_a3 = simd_and(r80_7ff_tmp33, tmp67);
          r80_7ff_tmp130 = simd_and(r80_7ff_tmp116, bytetest_a3_a3);
          struct_Ll.cc = simd_or(r80_7ff_tmp130, struct_Ll.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp104);
          bytetest_a5_a5 = simd_and(r80_7ff_tmp33, tmp91);
          r80_7ff_tmp131 = simd_and(r80_7ff_tmp116, bytetest_a5_a5);
          struct_Ll.cc = simd_or(r80_7ff_tmp131, struct_Ll.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp104);
          bytetest_a7_a7 = simd_and(r80_7ff_tmp33, tmp104);
          r80_7ff_tmp132 = simd_and(r80_7ff_tmp116, bytetest_a7_a7);
          struct_Ll.cc = simd_or(r80_7ff_tmp132, struct_Ll.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp104);
          bytetest_a9_a9 = simd_and(r80_7ff_tmp33, tmp119);
          r80_7ff_tmp133 = simd_and(r80_7ff_tmp116, bytetest_a9_a9);
          struct_Ll.cc = simd_or(r80_7ff_tmp133, struct_Ll.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp104);
          bytetest_ab_ab = simd_and(r80_7ff_tmp33, tmp65);
          r80_7ff_tmp134 = simd_and(r80_7ff_tmp116, bytetest_ab_ab);
          struct_Ll.cc = simd_or(r80_7ff_tmp134, struct_Ll.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp104);
          bytetest_ad_ad = simd_and(r80_7ff_tmp33, tmp19);
          r80_7ff_tmp135 = simd_and(r80_7ff_tmp116, bytetest_ad_ad);
          struct_Ll.cc = simd_or(r80_7ff_tmp135, struct_Ll.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp104);
          r80_7ff_tmp136 = simd_not(tmp9);
          r80_7ff_tmp137 = simd_or(simd_and(basis_bits.bit_3, r80_7ff_tmp136), simd_andc(tmp169, basis_bits.bit_3));
          bytetest_af_b0 = simd_and(tmp82, r80_7ff_tmp137);
          r80_7ff_tmp138 = simd_and(r80_7ff_tmp116, bytetest_af_b0);
          struct_Ll.cc = simd_or(r80_7ff_tmp138, struct_Ll.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp104);
          bytetest_b3_b3 = simd_and(bytetest_b0_bf, tmp67);
          r80_7ff_tmp139 = simd_and(r80_7ff_tmp116, bytetest_b3_b3);
          struct_Ll.cc = simd_or(r80_7ff_tmp139, struct_Ll.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp104);
          bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp91);
          r80_7ff_tmp140 = simd_and(r80_7ff_tmp116, bytetest_b5_b5);
          struct_Ll.cc = simd_or(r80_7ff_tmp140, struct_Ll.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp104);
          bytetest_b9_b9 = simd_and(bytetest_b0_bf, tmp119);
          r80_7ff_tmp141 = simd_and(r80_7ff_tmp116, bytetest_b9_b9);
          struct_Ll.cc = simd_or(r80_7ff_tmp141, struct_Ll.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp104);
          bytetest_bb_bb = simd_and(bytetest_b0_bf, tmp65);
          r80_7ff_tmp142 = simd_and(r80_7ff_tmp116, bytetest_bb_bb);
          struct_Ll.cc = simd_or(r80_7ff_tmp142, struct_Ll.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp104);
          bytetest_bd_bd = simd_and(bytetest_b0_bf, tmp19);
          r80_7ff_tmp143 = simd_and(r80_7ff_tmp116, bytetest_bd_bd);
          struct_Ll.cc = simd_or(r80_7ff_tmp143, struct_Ll.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp104);
          bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp169);
          r80_7ff_tmp144 = simd_and(r80_7ff_tmp116, bytetest_bf_bf);
          struct_Ll.cc = simd_or(r80_7ff_tmp144, struct_Ll.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_81_81 = simd_and(tmp69, tmp35);
          r80_7ff_tmp145 = simd_and(tmp27, bytetest_c8);
          carryQ.cq[25] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp145, carryQ.get_carry_in(25), r80_7ff_tmp146));
          r80_7ff_tmp147 = simd_and(r80_7ff_tmp146, bytetest_81_81);
          struct_Ll.cc = simd_or(r80_7ff_tmp147, struct_Ll.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_83_83 = simd_and(tmp69, tmp67);
          r80_7ff_tmp148 = simd_and(r80_7ff_tmp146, bytetest_83_83);
          struct_Ll.cc = simd_or(r80_7ff_tmp148, struct_Ll.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_85_85 = simd_and(tmp69, tmp91);
          r80_7ff_tmp149 = simd_and(r80_7ff_tmp146, bytetest_85_85);
          struct_Ll.cc = simd_or(r80_7ff_tmp149, struct_Ll.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_87_87 = simd_and(tmp69, tmp104);
          r80_7ff_tmp150 = simd_and(r80_7ff_tmp146, bytetest_87_87);
          struct_Ll.cc = simd_or(r80_7ff_tmp150, struct_Ll.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_89_89 = simd_and(tmp69, tmp119);
          r80_7ff_tmp151 = simd_and(r80_7ff_tmp146, bytetest_89_89);
          struct_Ll.cc = simd_or(r80_7ff_tmp151, struct_Ll.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_8b_8b = simd_and(tmp69, tmp65);
          r80_7ff_tmp152 = simd_and(r80_7ff_tmp146, bytetest_8b_8b);
          struct_Ll.cc = simd_or(r80_7ff_tmp152, struct_Ll.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_8d_8d = simd_and(tmp69, tmp19);
          r80_7ff_tmp153 = simd_and(r80_7ff_tmp146, bytetest_8d_8d);
          struct_Ll.cc = simd_or(r80_7ff_tmp153, struct_Ll.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_8f_8f = simd_and(tmp69, tmp169);
          r80_7ff_tmp154 = simd_and(r80_7ff_tmp146, bytetest_8f_8f);
          struct_Ll.cc = simd_or(r80_7ff_tmp154, struct_Ll.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_91_91 = simd_and(tmp16, tmp35);
          r80_7ff_tmp155 = simd_and(r80_7ff_tmp146, bytetest_91_91);
          struct_Ll.cc = simd_or(r80_7ff_tmp155, struct_Ll.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_93_93 = simd_and(tmp16, tmp67);
          r80_7ff_tmp156 = simd_and(r80_7ff_tmp146, bytetest_93_93);
          struct_Ll.cc = simd_or(r80_7ff_tmp156, struct_Ll.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_95_95 = simd_and(tmp16, tmp91);
          r80_7ff_tmp157 = simd_and(r80_7ff_tmp146, bytetest_95_95);
          struct_Ll.cc = simd_or(r80_7ff_tmp157, struct_Ll.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_97_97 = simd_and(tmp16, tmp104);
          r80_7ff_tmp158 = simd_and(r80_7ff_tmp146, bytetest_97_97);
          struct_Ll.cc = simd_or(r80_7ff_tmp158, struct_Ll.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_99_99 = simd_and(tmp16, tmp119);
          r80_7ff_tmp159 = simd_and(r80_7ff_tmp146, bytetest_99_99);
          struct_Ll.cc = simd_or(r80_7ff_tmp159, struct_Ll.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_9b_9b = simd_and(tmp16, tmp65);
          r80_7ff_tmp160 = simd_and(r80_7ff_tmp146, bytetest_9b_9b);
          struct_Ll.cc = simd_or(r80_7ff_tmp160, struct_Ll.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_9d_9d = simd_and(tmp16, tmp19);
          r80_7ff_tmp161 = simd_and(r80_7ff_tmp146, bytetest_9d_9d);
          struct_Ll.cc = simd_or(r80_7ff_tmp161, struct_Ll.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_9f_9f = simd_and(tmp16, tmp169);
          r80_7ff_tmp162 = simd_and(r80_7ff_tmp146, bytetest_9f_9f);
          struct_Ll.cc = simd_or(r80_7ff_tmp162, struct_Ll.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_a1_a1 = simd_and(r80_7ff_tmp33, tmp35);
          r80_7ff_tmp163 = simd_and(r80_7ff_tmp146, bytetest_a1_a1);
          struct_Ll.cc = simd_or(r80_7ff_tmp163, struct_Ll.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_a3_a3 = simd_and(r80_7ff_tmp33, tmp67);
          r80_7ff_tmp164 = simd_and(r80_7ff_tmp146, bytetest_a3_a3);
          struct_Ll.cc = simd_or(r80_7ff_tmp164, struct_Ll.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_a5_a5 = simd_and(r80_7ff_tmp33, tmp91);
          r80_7ff_tmp165 = simd_and(r80_7ff_tmp146, bytetest_a5_a5);
          struct_Ll.cc = simd_or(r80_7ff_tmp165, struct_Ll.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_a7_a7 = simd_and(r80_7ff_tmp33, tmp104);
          r80_7ff_tmp166 = simd_and(r80_7ff_tmp146, bytetest_a7_a7);
          struct_Ll.cc = simd_or(r80_7ff_tmp166, struct_Ll.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_a9_a9 = simd_and(r80_7ff_tmp33, tmp119);
          r80_7ff_tmp167 = simd_and(r80_7ff_tmp146, bytetest_a9_a9);
          struct_Ll.cc = simd_or(r80_7ff_tmp167, struct_Ll.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_ab_ab = simd_and(r80_7ff_tmp33, tmp65);
          r80_7ff_tmp168 = simd_and(r80_7ff_tmp146, bytetest_ab_ab);
          struct_Ll.cc = simd_or(r80_7ff_tmp168, struct_Ll.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_ad_ad = simd_and(r80_7ff_tmp33, tmp19);
          r80_7ff_tmp169 = simd_and(r80_7ff_tmp146, bytetest_ad_ad);
          struct_Ll.cc = simd_or(r80_7ff_tmp169, struct_Ll.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_af_af = simd_and(r80_7ff_tmp33, tmp169);
          r80_7ff_tmp170 = simd_and(r80_7ff_tmp146, bytetest_af_af);
          struct_Ll.cc = simd_or(r80_7ff_tmp170, struct_Ll.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp35);
          r80_7ff_tmp171 = simd_and(r80_7ff_tmp146, bytetest_b1_b1);
          struct_Ll.cc = simd_or(r80_7ff_tmp171, struct_Ll.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp111);
          r80_7ff_tmp172 = simd_or(simd_and(basis_bits.bit_4, tmp61), simd_andc(tmp4, basis_bits.bit_4));
          bytetest_b3_b9 = simd_and(bytetest_b0_bf, r80_7ff_tmp172);
          r80_7ff_tmp173 = simd_and(r80_7ff_tmp146, bytetest_b3_b9);
          struct_Ll.cc = simd_or(r80_7ff_tmp173, struct_Ll.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_bc_bc = simd_and(bytetest_b0_bf, tmp140);
          r80_7ff_tmp174 = simd_and(r80_7ff_tmp146, bytetest_bc_bc);
          struct_Ll.cc = simd_or(r80_7ff_tmp174, struct_Ll.cc);
          bytetest_c9 = simd_and(r80_7ff_tmp1, tmp119);
          bytetest_80_80 = simd_andc(tmp69, tmp9);
          r80_7ff_tmp175 = simd_and(tmp27, bytetest_c9);
          carryQ.cq[26] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp175, carryQ.get_carry_in(26), r80_7ff_tmp176));
          r80_7ff_tmp177 = simd_and(r80_7ff_tmp176, bytetest_80_80);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp169);
          r80_7ff_tmp178 = simd_and(r80_7ff_tmp146, bytetest_bf_bf);
          r80_7ff_tmp179 = simd_or(r80_7ff_tmp178, r80_7ff_tmp177);
          struct_Ll.cc = simd_or(r80_7ff_tmp179, struct_Ll.cc);
          bytetest_c9 = simd_and(r80_7ff_tmp1, tmp119);
          bytetest_82_82 = simd_and(tmp69, tmp53);
          r80_7ff_tmp180 = simd_and(r80_7ff_tmp176, bytetest_82_82);
          struct_Ll.cc = simd_or(r80_7ff_tmp180, struct_Ll.cc);
          bytetest_c9 = simd_and(r80_7ff_tmp1, tmp119);
          bytetest_87_87 = simd_and(tmp69, tmp104);
          r80_7ff_tmp181 = simd_and(r80_7ff_tmp176, bytetest_87_87);
          struct_Ll.cc = simd_or(r80_7ff_tmp181, struct_Ll.cc);
          bytetest_c9 = simd_and(r80_7ff_tmp1, tmp119);
          bytetest_89_89 = simd_and(tmp69, tmp119);
          r80_7ff_tmp182 = simd_and(r80_7ff_tmp176, bytetest_89_89);
          struct_Ll.cc = simd_or(r80_7ff_tmp182, struct_Ll.cc);
          bytetest_c9 = simd_and(r80_7ff_tmp1, tmp119);
          bytetest_8b_8b = simd_and(tmp69, tmp65);
          r80_7ff_tmp183 = simd_and(r80_7ff_tmp176, bytetest_8b_8b);
          struct_Ll.cc = simd_or(r80_7ff_tmp183, struct_Ll.cc);
          bytetest_c9 = simd_and(r80_7ff_tmp1, tmp119);
          bytetest_8d_8d = simd_and(tmp69, tmp19);
          r80_7ff_tmp184 = simd_and(r80_7ff_tmp176, bytetest_8d_8d);
          struct_Ll.cc = simd_or(r80_7ff_tmp184, struct_Ll.cc);
          bytetest_ca = simd_and(r80_7ff_tmp1, tmp125);
          bytetest_80_93 = simd_andc(tmp36, tmp20);
          r80_7ff_tmp185 = simd_and(tmp27, bytetest_ca);
          carryQ.cq[27] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp185, carryQ.get_carry_in(27), r80_7ff_tmp186));
          r80_7ff_tmp187 = simd_and(r80_7ff_tmp186, bytetest_80_93);
          bytetest_c9 = simd_and(r80_7ff_tmp1, tmp119);
          r80_7ff_tmp188 = simd_or(basis_bits.bit_3, tmp169);
          r80_7ff_tmp189 = simd_or(basis_bits.bit_2, r80_7ff_tmp188);
          bytetest_8f_bf = simd_and(tmp14, r80_7ff_tmp189);
          r80_7ff_tmp190 = simd_and(r80_7ff_tmp176, bytetest_8f_bf);
          r80_7ff_tmp191 = simd_or(r80_7ff_tmp190, r80_7ff_tmp187);
          struct_Ll.cc = simd_or(r80_7ff_tmp191, struct_Ll.cc);
          bytetest_ca = simd_and(r80_7ff_tmp1, tmp125);
          r80_7ff_tmp192 = simd_or(simd_and(basis_bits.bit_2, tmp120), simd_andc(tmp141, basis_bits.bit_2));
          bytetest_95_af = simd_and(tmp14, r80_7ff_tmp192);
          r80_7ff_tmp193 = simd_and(r80_7ff_tmp186, bytetest_95_af);
          struct_Ll.cc = simd_or(r80_7ff_tmp193, struct_Ll.cc);
          bytetest_cd = simd_and(r80_7ff_tmp1, tmp19);
          bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp35);
          r80_7ff_tmp194 = simd_and(tmp27, bytetest_cd);
          carryQ.cq[28] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp194, carryQ.get_carry_in(28), r80_7ff_tmp195));
          r80_7ff_tmp196 = simd_and(r80_7ff_tmp195, bytetest_b1_b1);
          struct_Ll.cc = simd_or(r80_7ff_tmp196, struct_Ll.cc);
          bytetest_cd = simd_and(r80_7ff_tmp1, tmp19);
          bytetest_b3_b3 = simd_and(bytetest_b0_bf, tmp67);
          r80_7ff_tmp197 = simd_and(r80_7ff_tmp195, bytetest_b3_b3);
          struct_Ll.cc = simd_or(r80_7ff_tmp197, struct_Ll.cc);
          bytetest_cd = simd_and(r80_7ff_tmp1, tmp19);
          bytetest_b7_b7 = simd_and(bytetest_b0_bf, tmp104);
          r80_7ff_tmp198 = simd_and(r80_7ff_tmp195, bytetest_b7_b7);
          struct_Ll.cc = simd_or(r80_7ff_tmp198, struct_Ll.cc);
          bytetest_cd = simd_and(r80_7ff_tmp1, tmp19);
          r80_7ff_tmp199 = simd_not(basis_bits.bit_6);
          r80_7ff_tmp200 = simd_or(simd_and(basis_bits.bit_5, r80_7ff_tmp199), simd_andc(tmp3, basis_bits.bit_5));
          bytetest_bb_bd = simd_and(bytetest_b8_bf, r80_7ff_tmp200);
          r80_7ff_tmp201 = simd_and(r80_7ff_tmp195, bytetest_bb_bd);
          struct_Ll.cc = simd_or(r80_7ff_tmp201, struct_Ll.cc);
          bytetest_ce = simd_and(r80_7ff_tmp1, tmp159);
          bytetest_90_90 = simd_andc(tmp16, tmp9);
          r80_7ff_tmp202 = simd_and(tmp27, bytetest_ce);
          carryQ.cq[29] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp202, carryQ.get_carry_in(29), r80_7ff_tmp203));
          r80_7ff_tmp204 = simd_and(r80_7ff_tmp203, bytetest_90_90);
          struct_Ll.cc = simd_or(r80_7ff_tmp204, struct_Ll.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp169);
          bytetest_80_8e = simd_andc(tmp69, tmp151);
          r80_7ff_tmp205 = simd_and(tmp27, bytetest_cf);
          carryQ.cq[30] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp205, carryQ.get_carry_in(30), r80_7ff_tmp206));
          r80_7ff_tmp207 = simd_and(r80_7ff_tmp206, bytetest_80_8e);
          bytetest_ce = simd_and(r80_7ff_tmp1, tmp159);
          bytetest_ac_bf = simd_and(tmp82, tmp92);
          r80_7ff_tmp208 = simd_and(r80_7ff_tmp203, bytetest_ac_bf);
          r80_7ff_tmp209 = simd_or(r80_7ff_tmp208, r80_7ff_tmp207);
          struct_Ll.cc = simd_or(r80_7ff_tmp209, struct_Ll.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp169);
          bytetest_90_91 = simd_andc(tmp16, tmp55);
          r80_7ff_tmp210 = simd_and(r80_7ff_tmp206, bytetest_90_91);
          struct_Ll.cc = simd_or(r80_7ff_tmp210, struct_Ll.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp169);
          r80_7ff_tmp211 = simd_and(tmp16, tmp77);
          bytetest_95_97 = simd_and(r80_7ff_tmp211, tmp8);
          r80_7ff_tmp212 = simd_and(r80_7ff_tmp206, bytetest_95_97);
          struct_Ll.cc = simd_or(r80_7ff_tmp212, struct_Ll.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp169);
          bytetest_99_99 = simd_and(tmp16, tmp119);
          r80_7ff_tmp213 = simd_and(r80_7ff_tmp206, bytetest_99_99);
          struct_Ll.cc = simd_or(r80_7ff_tmp213, struct_Ll.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp169);
          bytetest_9b_9b = simd_and(tmp16, tmp65);
          r80_7ff_tmp214 = simd_and(r80_7ff_tmp206, bytetest_9b_9b);
          struct_Ll.cc = simd_or(r80_7ff_tmp214, struct_Ll.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp169);
          bytetest_9d_9d = simd_and(tmp16, tmp19);
          r80_7ff_tmp215 = simd_and(r80_7ff_tmp206, bytetest_9d_9d);
          struct_Ll.cc = simd_or(r80_7ff_tmp215, struct_Ll.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp169);
          bytetest_9f_9f = simd_and(tmp16, tmp169);
          r80_7ff_tmp216 = simd_and(r80_7ff_tmp206, bytetest_9f_9f);
          struct_Ll.cc = simd_or(r80_7ff_tmp216, struct_Ll.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp169);
          bytetest_a1_a1 = simd_and(r80_7ff_tmp33, tmp35);
          r80_7ff_tmp217 = simd_and(r80_7ff_tmp206, bytetest_a1_a1);
          struct_Ll.cc = simd_or(r80_7ff_tmp217, struct_Ll.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp169);
          bytetest_a3_a3 = simd_and(r80_7ff_tmp33, tmp67);
          r80_7ff_tmp218 = simd_and(r80_7ff_tmp206, bytetest_a3_a3);
          struct_Ll.cc = simd_or(r80_7ff_tmp218, struct_Ll.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp169);
          bytetest_a5_a5 = simd_and(r80_7ff_tmp33, tmp91);
          r80_7ff_tmp219 = simd_and(r80_7ff_tmp206, bytetest_a5_a5);
          struct_Ll.cc = simd_or(r80_7ff_tmp219, struct_Ll.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp169);
          bytetest_a7_a7 = simd_and(r80_7ff_tmp33, tmp104);
          r80_7ff_tmp220 = simd_and(r80_7ff_tmp206, bytetest_a7_a7);
          struct_Ll.cc = simd_or(r80_7ff_tmp220, struct_Ll.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp169);
          bytetest_a9_a9 = simd_and(r80_7ff_tmp33, tmp119);
          r80_7ff_tmp221 = simd_and(r80_7ff_tmp206, bytetest_a9_a9);
          struct_Ll.cc = simd_or(r80_7ff_tmp221, struct_Ll.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp169);
          bytetest_ab_ab = simd_and(r80_7ff_tmp33, tmp65);
          r80_7ff_tmp222 = simd_and(r80_7ff_tmp206, bytetest_ab_ab);
          struct_Ll.cc = simd_or(r80_7ff_tmp222, struct_Ll.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp169);
          bytetest_ad_ad = simd_and(r80_7ff_tmp33, tmp19);
          r80_7ff_tmp223 = simd_and(r80_7ff_tmp206, bytetest_ad_ad);
          struct_Ll.cc = simd_or(r80_7ff_tmp223, struct_Ll.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp169);
          r80_7ff_tmp224 = simd_not(tmp7);
          r80_7ff_tmp225 = simd_or(simd_and(basis_bits.bit_3, r80_7ff_tmp224), simd_andc(tmp169, basis_bits.bit_3));
          bytetest_af_b3 = simd_and(tmp82, r80_7ff_tmp225);
          r80_7ff_tmp226 = simd_and(r80_7ff_tmp206, bytetest_af_b3);
          struct_Ll.cc = simd_or(r80_7ff_tmp226, struct_Ll.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp169);
          bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp91);
          r80_7ff_tmp227 = simd_and(r80_7ff_tmp206, bytetest_b5_b5);
          struct_Ll.cc = simd_or(r80_7ff_tmp227, struct_Ll.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp169);
          bytetest_b8_b8 = simd_and(bytetest_b0_bf, tmp111);
          r80_7ff_tmp228 = simd_and(r80_7ff_tmp206, bytetest_b8_b8);
          struct_Ll.cc = simd_or(r80_7ff_tmp228, struct_Ll.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp169);
          r80_7ff_tmp229 = simd_not(tmp8);
          r80_7ff_tmp230 = simd_or(simd_and(basis_bits.bit_5, r80_7ff_tmp229), simd_andc(tmp3, basis_bits.bit_5));
          bytetest_bb_bc = simd_and(bytetest_b8_bf, r80_7ff_tmp230);
          r80_7ff_tmp231 = simd_and(r80_7ff_tmp206, bytetest_bb_bc);
          struct_Ll.cc = simd_or(r80_7ff_tmp231, struct_Ll.cc);
          r80_7ff_tmp232 = simd_and(tmp11, tmp15);
          bytetest_d1 = simd_and(r80_7ff_tmp232, tmp35);
          bytetest_80_9f = simd_andc(tmp14, basis_bits.bit_2);
          r80_7ff_tmp233 = simd_and(tmp27, bytetest_d1);
          carryQ.cq[31] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp233, carryQ.get_carry_in(31), r80_7ff_tmp234));
          r80_7ff_tmp235 = simd_and(r80_7ff_tmp234, bytetest_80_9f);
          bytetest_d0 = simd_andc(r80_7ff_tmp232, tmp9);
          bytetest_b0_bf = simd_and(tmp14, tmp12);
          r80_7ff_tmp236 = simd_and(tmp27, bytetest_d0);
          carryQ.cq[32] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp236, carryQ.get_carry_in(32), r80_7ff_tmp237));
          r80_7ff_tmp238 = simd_and(r80_7ff_tmp237, bytetest_b0_bf);
          r80_7ff_tmp239 = simd_or(r80_7ff_tmp238, r80_7ff_tmp235);
          struct_Ll.cc = simd_or(r80_7ff_tmp239, struct_Ll.cc);
          bytetest_d1 = simd_and(r80_7ff_tmp232, tmp35);
          bytetest_a1_a1 = simd_and(r80_7ff_tmp33, tmp35);
          r80_7ff_tmp240 = simd_and(r80_7ff_tmp234, bytetest_a1_a1);
          struct_Ll.cc = simd_or(r80_7ff_tmp240, struct_Ll.cc);
          bytetest_d1 = simd_and(r80_7ff_tmp232, tmp35);
          bytetest_a3_a3 = simd_and(r80_7ff_tmp33, tmp67);
          r80_7ff_tmp241 = simd_and(r80_7ff_tmp234, bytetest_a3_a3);
          struct_Ll.cc = simd_or(r80_7ff_tmp241, struct_Ll.cc);
          bytetest_d1 = simd_and(r80_7ff_tmp232, tmp35);
          bytetest_a5_a5 = simd_and(r80_7ff_tmp33, tmp91);
          r80_7ff_tmp242 = simd_and(r80_7ff_tmp234, bytetest_a5_a5);
          struct_Ll.cc = simd_or(r80_7ff_tmp242, struct_Ll.cc);
          bytetest_d1 = simd_and(r80_7ff_tmp232, tmp35);
          bytetest_a7_a7 = simd_and(r80_7ff_tmp33, tmp104);
          r80_7ff_tmp243 = simd_and(r80_7ff_tmp234, bytetest_a7_a7);
          struct_Ll.cc = simd_or(r80_7ff_tmp243, struct_Ll.cc);
          bytetest_d1 = simd_and(r80_7ff_tmp232, tmp35);
          bytetest_a9_a9 = simd_and(r80_7ff_tmp33, tmp119);
          r80_7ff_tmp244 = simd_and(r80_7ff_tmp234, bytetest_a9_a9);
          struct_Ll.cc = simd_or(r80_7ff_tmp244, struct_Ll.cc);
          bytetest_d1 = simd_and(r80_7ff_tmp232, tmp35);
          bytetest_ab_ab = simd_and(r80_7ff_tmp33, tmp65);
          r80_7ff_tmp245 = simd_and(r80_7ff_tmp234, bytetest_ab_ab);
          struct_Ll.cc = simd_or(r80_7ff_tmp245, struct_Ll.cc);
          bytetest_d1 = simd_and(r80_7ff_tmp232, tmp35);
          bytetest_ad_ad = simd_and(r80_7ff_tmp33, tmp19);
          r80_7ff_tmp246 = simd_and(r80_7ff_tmp234, bytetest_ad_ad);
          struct_Ll.cc = simd_or(r80_7ff_tmp246, struct_Ll.cc);
          bytetest_d1 = simd_and(r80_7ff_tmp232, tmp35);
          bytetest_af_af = simd_and(r80_7ff_tmp33, tmp169);
          r80_7ff_tmp247 = simd_and(r80_7ff_tmp234, bytetest_af_af);
          struct_Ll.cc = simd_or(r80_7ff_tmp247, struct_Ll.cc);
          bytetest_d1 = simd_and(r80_7ff_tmp232, tmp35);
          bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp35);
          r80_7ff_tmp248 = simd_and(r80_7ff_tmp234, bytetest_b1_b1);
          struct_Ll.cc = simd_or(r80_7ff_tmp248, struct_Ll.cc);
          bytetest_d1 = simd_and(r80_7ff_tmp232, tmp35);
          bytetest_b3_b3 = simd_and(bytetest_b0_bf, tmp67);
          r80_7ff_tmp249 = simd_and(r80_7ff_tmp234, bytetest_b3_b3);
          struct_Ll.cc = simd_or(r80_7ff_tmp249, struct_Ll.cc);
          bytetest_d1 = simd_and(r80_7ff_tmp232, tmp35);
          bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp91);
          r80_7ff_tmp250 = simd_and(r80_7ff_tmp234, bytetest_b5_b5);
          struct_Ll.cc = simd_or(r80_7ff_tmp250, struct_Ll.cc);
          bytetest_d1 = simd_and(r80_7ff_tmp232, tmp35);
          bytetest_b7_b7 = simd_and(bytetest_b0_bf, tmp104);
          r80_7ff_tmp251 = simd_and(r80_7ff_tmp234, bytetest_b7_b7);
          struct_Ll.cc = simd_or(r80_7ff_tmp251, struct_Ll.cc);
          bytetest_d1 = simd_and(r80_7ff_tmp232, tmp35);
          bytetest_b9_b9 = simd_and(bytetest_b0_bf, tmp119);
          r80_7ff_tmp252 = simd_and(r80_7ff_tmp234, bytetest_b9_b9);
          struct_Ll.cc = simd_or(r80_7ff_tmp252, struct_Ll.cc);
          bytetest_d1 = simd_and(r80_7ff_tmp232, tmp35);
          bytetest_bb_bb = simd_and(bytetest_b0_bf, tmp65);
          r80_7ff_tmp253 = simd_and(r80_7ff_tmp234, bytetest_bb_bb);
          struct_Ll.cc = simd_or(r80_7ff_tmp253, struct_Ll.cc);
          bytetest_d1 = simd_and(r80_7ff_tmp232, tmp35);
          bytetest_bd_bd = simd_and(bytetest_b0_bf, tmp19);
          r80_7ff_tmp254 = simd_and(r80_7ff_tmp234, bytetest_bd_bd);
          struct_Ll.cc = simd_or(r80_7ff_tmp254, struct_Ll.cc);
          bytetest_d1 = simd_and(r80_7ff_tmp232, tmp35);
          bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp169);
          r80_7ff_tmp255 = simd_and(r80_7ff_tmp234, bytetest_bf_bf);
          struct_Ll.cc = simd_or(r80_7ff_tmp255, struct_Ll.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp232, tmp53);
          bytetest_81_81 = simd_and(tmp69, tmp35);
          r80_7ff_tmp256 = simd_and(tmp27, bytetest_d2);
          carryQ.cq[33] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp256, carryQ.get_carry_in(33), r80_7ff_tmp257));
          r80_7ff_tmp258 = simd_and(r80_7ff_tmp257, bytetest_81_81);
          struct_Ll.cc = simd_or(r80_7ff_tmp258, struct_Ll.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp232, tmp53);
          bytetest_8b_8b = simd_and(tmp69, tmp65);
          r80_7ff_tmp259 = simd_and(r80_7ff_tmp257, bytetest_8b_8b);
          struct_Ll.cc = simd_or(r80_7ff_tmp259, struct_Ll.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp232, tmp53);
          bytetest_8d_8d = simd_and(tmp69, tmp19);
          r80_7ff_tmp260 = simd_and(r80_7ff_tmp257, bytetest_8d_8d);
          struct_Ll.cc = simd_or(r80_7ff_tmp260, struct_Ll.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp232, tmp53);
          bytetest_8f_8f = simd_and(tmp69, tmp169);
          r80_7ff_tmp261 = simd_and(r80_7ff_tmp257, bytetest_8f_8f);
          struct_Ll.cc = simd_or(r80_7ff_tmp261, struct_Ll.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp232, tmp53);
          bytetest_91_91 = simd_and(tmp16, tmp35);
          r80_7ff_tmp262 = simd_and(r80_7ff_tmp257, bytetest_91_91);
          struct_Ll.cc = simd_or(r80_7ff_tmp262, struct_Ll.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp232, tmp53);
          bytetest_93_93 = simd_and(tmp16, tmp67);
          r80_7ff_tmp263 = simd_and(r80_7ff_tmp257, bytetest_93_93);
          struct_Ll.cc = simd_or(r80_7ff_tmp263, struct_Ll.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp232, tmp53);
          bytetest_95_95 = simd_and(tmp16, tmp91);
          r80_7ff_tmp264 = simd_and(r80_7ff_tmp257, bytetest_95_95);
          struct_Ll.cc = simd_or(r80_7ff_tmp264, struct_Ll.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp232, tmp53);
          bytetest_97_97 = simd_and(tmp16, tmp104);
          r80_7ff_tmp265 = simd_and(r80_7ff_tmp257, bytetest_97_97);
          struct_Ll.cc = simd_or(r80_7ff_tmp265, struct_Ll.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp232, tmp53);
          bytetest_99_99 = simd_and(tmp16, tmp119);
          r80_7ff_tmp266 = simd_and(r80_7ff_tmp257, bytetest_99_99);
          struct_Ll.cc = simd_or(r80_7ff_tmp266, struct_Ll.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp232, tmp53);
          bytetest_9b_9b = simd_and(tmp16, tmp65);
          r80_7ff_tmp267 = simd_and(r80_7ff_tmp257, bytetest_9b_9b);
          struct_Ll.cc = simd_or(r80_7ff_tmp267, struct_Ll.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp232, tmp53);
          bytetest_9d_9d = simd_and(tmp16, tmp19);
          r80_7ff_tmp268 = simd_and(r80_7ff_tmp257, bytetest_9d_9d);
          struct_Ll.cc = simd_or(r80_7ff_tmp268, struct_Ll.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp232, tmp53);
          bytetest_9f_9f = simd_and(tmp16, tmp169);
          r80_7ff_tmp269 = simd_and(r80_7ff_tmp257, bytetest_9f_9f);
          struct_Ll.cc = simd_or(r80_7ff_tmp269, struct_Ll.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp232, tmp53);
          bytetest_a1_a1 = simd_and(r80_7ff_tmp33, tmp35);
          r80_7ff_tmp270 = simd_and(r80_7ff_tmp257, bytetest_a1_a1);
          struct_Ll.cc = simd_or(r80_7ff_tmp270, struct_Ll.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp232, tmp53);
          bytetest_a3_a3 = simd_and(r80_7ff_tmp33, tmp67);
          r80_7ff_tmp271 = simd_and(r80_7ff_tmp257, bytetest_a3_a3);
          struct_Ll.cc = simd_or(r80_7ff_tmp271, struct_Ll.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp232, tmp53);
          bytetest_a5_a5 = simd_and(r80_7ff_tmp33, tmp91);
          r80_7ff_tmp272 = simd_and(r80_7ff_tmp257, bytetest_a5_a5);
          struct_Ll.cc = simd_or(r80_7ff_tmp272, struct_Ll.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp232, tmp53);
          bytetest_a7_a7 = simd_and(r80_7ff_tmp33, tmp104);
          r80_7ff_tmp273 = simd_and(r80_7ff_tmp257, bytetest_a7_a7);
          struct_Ll.cc = simd_or(r80_7ff_tmp273, struct_Ll.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp232, tmp53);
          bytetest_a9_a9 = simd_and(r80_7ff_tmp33, tmp119);
          r80_7ff_tmp274 = simd_and(r80_7ff_tmp257, bytetest_a9_a9);
          struct_Ll.cc = simd_or(r80_7ff_tmp274, struct_Ll.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp232, tmp53);
          bytetest_ab_ab = simd_and(r80_7ff_tmp33, tmp65);
          r80_7ff_tmp275 = simd_and(r80_7ff_tmp257, bytetest_ab_ab);
          struct_Ll.cc = simd_or(r80_7ff_tmp275, struct_Ll.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp232, tmp53);
          bytetest_ad_ad = simd_and(r80_7ff_tmp33, tmp19);
          r80_7ff_tmp276 = simd_and(r80_7ff_tmp257, bytetest_ad_ad);
          struct_Ll.cc = simd_or(r80_7ff_tmp276, struct_Ll.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp232, tmp53);
          bytetest_af_af = simd_and(r80_7ff_tmp33, tmp169);
          r80_7ff_tmp277 = simd_and(r80_7ff_tmp257, bytetest_af_af);
          struct_Ll.cc = simd_or(r80_7ff_tmp277, struct_Ll.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp232, tmp53);
          bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp35);
          r80_7ff_tmp278 = simd_and(r80_7ff_tmp257, bytetest_b1_b1);
          struct_Ll.cc = simd_or(r80_7ff_tmp278, struct_Ll.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp232, tmp53);
          bytetest_b3_b3 = simd_and(bytetest_b0_bf, tmp67);
          r80_7ff_tmp279 = simd_and(r80_7ff_tmp257, bytetest_b3_b3);
          struct_Ll.cc = simd_or(r80_7ff_tmp279, struct_Ll.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp232, tmp53);
          bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp91);
          r80_7ff_tmp280 = simd_and(r80_7ff_tmp257, bytetest_b5_b5);
          struct_Ll.cc = simd_or(r80_7ff_tmp280, struct_Ll.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp232, tmp53);
          bytetest_b7_b7 = simd_and(bytetest_b0_bf, tmp104);
          r80_7ff_tmp281 = simd_and(r80_7ff_tmp257, bytetest_b7_b7);
          struct_Ll.cc = simd_or(r80_7ff_tmp281, struct_Ll.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp232, tmp53);
          bytetest_b9_b9 = simd_and(bytetest_b0_bf, tmp119);
          r80_7ff_tmp282 = simd_and(r80_7ff_tmp257, bytetest_b9_b9);
          struct_Ll.cc = simd_or(r80_7ff_tmp282, struct_Ll.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp232, tmp53);
          bytetest_bb_bb = simd_and(bytetest_b0_bf, tmp65);
          r80_7ff_tmp283 = simd_and(r80_7ff_tmp257, bytetest_bb_bb);
          struct_Ll.cc = simd_or(r80_7ff_tmp283, struct_Ll.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp232, tmp53);
          bytetest_bd_bd = simd_and(bytetest_b0_bf, tmp19);
          r80_7ff_tmp284 = simd_and(r80_7ff_tmp257, bytetest_bd_bd);
          struct_Ll.cc = simd_or(r80_7ff_tmp284, struct_Ll.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp232, tmp53);
          bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp169);
          r80_7ff_tmp285 = simd_and(r80_7ff_tmp257, bytetest_bf_bf);
          struct_Ll.cc = simd_or(r80_7ff_tmp285, struct_Ll.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp232, tmp67);
          bytetest_82_82 = simd_and(tmp69, tmp53);
          r80_7ff_tmp286 = simd_and(tmp27, bytetest_d3);
          carryQ.cq[34] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp286, carryQ.get_carry_in(34), r80_7ff_tmp287));
          r80_7ff_tmp288 = simd_and(r80_7ff_tmp287, bytetest_82_82);
          struct_Ll.cc = simd_or(r80_7ff_tmp288, struct_Ll.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp232, tmp67);
          bytetest_84_84 = simd_and(tmp69, tmp78);
          r80_7ff_tmp289 = simd_and(r80_7ff_tmp287, bytetest_84_84);
          struct_Ll.cc = simd_or(r80_7ff_tmp289, struct_Ll.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp232, tmp67);
          bytetest_86_86 = simd_and(tmp69, tmp99);
          r80_7ff_tmp290 = simd_and(r80_7ff_tmp287, bytetest_86_86);
          struct_Ll.cc = simd_or(r80_7ff_tmp290, struct_Ll.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp232, tmp67);
          bytetest_88_88 = simd_and(tmp69, tmp111);
          r80_7ff_tmp291 = simd_and(r80_7ff_tmp287, bytetest_88_88);
          struct_Ll.cc = simd_or(r80_7ff_tmp291, struct_Ll.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp232, tmp67);
          bytetest_8a_8a = simd_and(tmp69, tmp125);
          r80_7ff_tmp292 = simd_and(r80_7ff_tmp287, bytetest_8a_8a);
          struct_Ll.cc = simd_or(r80_7ff_tmp292, struct_Ll.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp232, tmp67);
          bytetest_8c_8c = simd_and(tmp69, tmp140);
          r80_7ff_tmp293 = simd_and(r80_7ff_tmp287, bytetest_8c_8c);
          struct_Ll.cc = simd_or(r80_7ff_tmp293, struct_Ll.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp232, tmp67);
          bytetest_8e_8f = simd_and(tmp69, tmp40);
          r80_7ff_tmp294 = simd_and(r80_7ff_tmp287, bytetest_8e_8f);
          struct_Ll.cc = simd_or(r80_7ff_tmp294, struct_Ll.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp232, tmp67);
          bytetest_91_91 = simd_and(tmp16, tmp35);
          r80_7ff_tmp295 = simd_and(r80_7ff_tmp287, bytetest_91_91);
          struct_Ll.cc = simd_or(r80_7ff_tmp295, struct_Ll.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp232, tmp67);
          bytetest_93_93 = simd_and(tmp16, tmp67);
          r80_7ff_tmp296 = simd_and(r80_7ff_tmp287, bytetest_93_93);
          struct_Ll.cc = simd_or(r80_7ff_tmp296, struct_Ll.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp232, tmp67);
          bytetest_95_95 = simd_and(tmp16, tmp91);
          r80_7ff_tmp297 = simd_and(r80_7ff_tmp287, bytetest_95_95);
          struct_Ll.cc = simd_or(r80_7ff_tmp297, struct_Ll.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp232, tmp67);
          bytetest_97_97 = simd_and(tmp16, tmp104);
          r80_7ff_tmp298 = simd_and(r80_7ff_tmp287, bytetest_97_97);
          struct_Ll.cc = simd_or(r80_7ff_tmp298, struct_Ll.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp232, tmp67);
          bytetest_99_99 = simd_and(tmp16, tmp119);
          r80_7ff_tmp299 = simd_and(r80_7ff_tmp287, bytetest_99_99);
          struct_Ll.cc = simd_or(r80_7ff_tmp299, struct_Ll.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp232, tmp67);
          bytetest_9b_9b = simd_and(tmp16, tmp65);
          r80_7ff_tmp300 = simd_and(r80_7ff_tmp287, bytetest_9b_9b);
          struct_Ll.cc = simd_or(r80_7ff_tmp300, struct_Ll.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp232, tmp67);
          bytetest_9d_9d = simd_and(tmp16, tmp19);
          r80_7ff_tmp301 = simd_and(r80_7ff_tmp287, bytetest_9d_9d);
          struct_Ll.cc = simd_or(r80_7ff_tmp301, struct_Ll.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp232, tmp67);
          bytetest_9f_9f = simd_and(tmp16, tmp169);
          r80_7ff_tmp302 = simd_and(r80_7ff_tmp287, bytetest_9f_9f);
          struct_Ll.cc = simd_or(r80_7ff_tmp302, struct_Ll.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp232, tmp67);
          bytetest_a1_a1 = simd_and(r80_7ff_tmp33, tmp35);
          r80_7ff_tmp303 = simd_and(r80_7ff_tmp287, bytetest_a1_a1);
          struct_Ll.cc = simd_or(r80_7ff_tmp303, struct_Ll.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp232, tmp67);
          bytetest_a3_a3 = simd_and(r80_7ff_tmp33, tmp67);
          r80_7ff_tmp304 = simd_and(r80_7ff_tmp287, bytetest_a3_a3);
          struct_Ll.cc = simd_or(r80_7ff_tmp304, struct_Ll.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp232, tmp67);
          bytetest_a5_a5 = simd_and(r80_7ff_tmp33, tmp91);
          r80_7ff_tmp305 = simd_and(r80_7ff_tmp287, bytetest_a5_a5);
          struct_Ll.cc = simd_or(r80_7ff_tmp305, struct_Ll.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp232, tmp67);
          bytetest_a7_a7 = simd_and(r80_7ff_tmp33, tmp104);
          r80_7ff_tmp306 = simd_and(r80_7ff_tmp287, bytetest_a7_a7);
          struct_Ll.cc = simd_or(r80_7ff_tmp306, struct_Ll.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp232, tmp67);
          bytetest_a9_a9 = simd_and(r80_7ff_tmp33, tmp119);
          r80_7ff_tmp307 = simd_and(r80_7ff_tmp287, bytetest_a9_a9);
          struct_Ll.cc = simd_or(r80_7ff_tmp307, struct_Ll.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp232, tmp67);
          bytetest_ab_ab = simd_and(r80_7ff_tmp33, tmp65);
          r80_7ff_tmp308 = simd_and(r80_7ff_tmp287, bytetest_ab_ab);
          struct_Ll.cc = simd_or(r80_7ff_tmp308, struct_Ll.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp232, tmp67);
          bytetest_ad_ad = simd_and(r80_7ff_tmp33, tmp19);
          r80_7ff_tmp309 = simd_and(r80_7ff_tmp287, bytetest_ad_ad);
          struct_Ll.cc = simd_or(r80_7ff_tmp309, struct_Ll.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp232, tmp67);
          bytetest_af_af = simd_and(r80_7ff_tmp33, tmp169);
          r80_7ff_tmp310 = simd_and(r80_7ff_tmp287, bytetest_af_af);
          struct_Ll.cc = simd_or(r80_7ff_tmp310, struct_Ll.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp232, tmp67);
          bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp35);
          r80_7ff_tmp311 = simd_and(r80_7ff_tmp287, bytetest_b1_b1);
          struct_Ll.cc = simd_or(r80_7ff_tmp311, struct_Ll.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp232, tmp67);
          bytetest_b3_b3 = simd_and(bytetest_b0_bf, tmp67);
          r80_7ff_tmp312 = simd_and(r80_7ff_tmp287, bytetest_b3_b3);
          struct_Ll.cc = simd_or(r80_7ff_tmp312, struct_Ll.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp232, tmp67);
          bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp91);
          r80_7ff_tmp313 = simd_and(r80_7ff_tmp287, bytetest_b5_b5);
          struct_Ll.cc = simd_or(r80_7ff_tmp313, struct_Ll.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp232, tmp67);
          bytetest_b7_b7 = simd_and(bytetest_b0_bf, tmp104);
          r80_7ff_tmp314 = simd_and(r80_7ff_tmp287, bytetest_b7_b7);
          struct_Ll.cc = simd_or(r80_7ff_tmp314, struct_Ll.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp232, tmp67);
          bytetest_b9_b9 = simd_and(bytetest_b0_bf, tmp119);
          r80_7ff_tmp315 = simd_and(r80_7ff_tmp287, bytetest_b9_b9);
          struct_Ll.cc = simd_or(r80_7ff_tmp315, struct_Ll.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp232, tmp67);
          bytetest_bb_bb = simd_and(bytetest_b0_bf, tmp65);
          r80_7ff_tmp316 = simd_and(r80_7ff_tmp287, bytetest_bb_bb);
          struct_Ll.cc = simd_or(r80_7ff_tmp316, struct_Ll.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp232, tmp67);
          bytetest_bd_bd = simd_and(bytetest_b0_bf, tmp19);
          r80_7ff_tmp317 = simd_and(r80_7ff_tmp287, bytetest_bd_bd);
          struct_Ll.cc = simd_or(r80_7ff_tmp317, struct_Ll.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp232, tmp67);
          bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp169);
          r80_7ff_tmp318 = simd_and(r80_7ff_tmp287, bytetest_bf_bf);
          struct_Ll.cc = simd_or(r80_7ff_tmp318, struct_Ll.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp232, tmp78);
          bytetest_81_81 = simd_and(tmp69, tmp35);
          r80_7ff_tmp319 = simd_and(tmp27, bytetest_d4);
          carryQ.cq[35] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp319, carryQ.get_carry_in(35), r80_7ff_tmp320));
          r80_7ff_tmp321 = simd_and(r80_7ff_tmp320, bytetest_81_81);
          struct_Ll.cc = simd_or(r80_7ff_tmp321, struct_Ll.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp232, tmp78);
          bytetest_83_83 = simd_and(tmp69, tmp67);
          r80_7ff_tmp322 = simd_and(r80_7ff_tmp320, bytetest_83_83);
          struct_Ll.cc = simd_or(r80_7ff_tmp322, struct_Ll.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp232, tmp78);
          bytetest_85_85 = simd_and(tmp69, tmp91);
          r80_7ff_tmp323 = simd_and(r80_7ff_tmp320, bytetest_85_85);
          struct_Ll.cc = simd_or(r80_7ff_tmp323, struct_Ll.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp232, tmp78);
          bytetest_87_87 = simd_and(tmp69, tmp104);
          r80_7ff_tmp324 = simd_and(r80_7ff_tmp320, bytetest_87_87);
          struct_Ll.cc = simd_or(r80_7ff_tmp324, struct_Ll.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp232, tmp78);
          bytetest_89_89 = simd_and(tmp69, tmp119);
          r80_7ff_tmp325 = simd_and(r80_7ff_tmp320, bytetest_89_89);
          struct_Ll.cc = simd_or(r80_7ff_tmp325, struct_Ll.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp232, tmp78);
          bytetest_8b_8b = simd_and(tmp69, tmp65);
          r80_7ff_tmp326 = simd_and(r80_7ff_tmp320, bytetest_8b_8b);
          struct_Ll.cc = simd_or(r80_7ff_tmp326, struct_Ll.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp232, tmp78);
          bytetest_8d_8d = simd_and(tmp69, tmp19);
          r80_7ff_tmp327 = simd_and(r80_7ff_tmp320, bytetest_8d_8d);
          struct_Ll.cc = simd_or(r80_7ff_tmp327, struct_Ll.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp232, tmp78);
          bytetest_8f_8f = simd_and(tmp69, tmp169);
          r80_7ff_tmp328 = simd_and(r80_7ff_tmp320, bytetest_8f_8f);
          struct_Ll.cc = simd_or(r80_7ff_tmp328, struct_Ll.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp232, tmp78);
          bytetest_91_91 = simd_and(tmp16, tmp35);
          r80_7ff_tmp329 = simd_and(r80_7ff_tmp320, bytetest_91_91);
          struct_Ll.cc = simd_or(r80_7ff_tmp329, struct_Ll.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp232, tmp78);
          bytetest_93_93 = simd_and(tmp16, tmp67);
          r80_7ff_tmp330 = simd_and(r80_7ff_tmp320, bytetest_93_93);
          struct_Ll.cc = simd_or(r80_7ff_tmp330, struct_Ll.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp232, tmp78);
          bytetest_95_95 = simd_and(tmp16, tmp91);
          r80_7ff_tmp331 = simd_and(r80_7ff_tmp320, bytetest_95_95);
          struct_Ll.cc = simd_or(r80_7ff_tmp331, struct_Ll.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp232, tmp78);
          bytetest_97_97 = simd_and(tmp16, tmp104);
          r80_7ff_tmp332 = simd_and(r80_7ff_tmp320, bytetest_97_97);
          struct_Ll.cc = simd_or(r80_7ff_tmp332, struct_Ll.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp232, tmp78);
          bytetest_99_99 = simd_and(tmp16, tmp119);
          r80_7ff_tmp333 = simd_and(r80_7ff_tmp320, bytetest_99_99);
          struct_Ll.cc = simd_or(r80_7ff_tmp333, struct_Ll.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp232, tmp78);
          bytetest_9b_9b = simd_and(tmp16, tmp65);
          r80_7ff_tmp334 = simd_and(r80_7ff_tmp320, bytetest_9b_9b);
          struct_Ll.cc = simd_or(r80_7ff_tmp334, struct_Ll.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp232, tmp78);
          bytetest_9d_9d = simd_and(tmp16, tmp19);
          r80_7ff_tmp335 = simd_and(r80_7ff_tmp320, bytetest_9d_9d);
          struct_Ll.cc = simd_or(r80_7ff_tmp335, struct_Ll.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp232, tmp78);
          bytetest_9f_9f = simd_and(tmp16, tmp169);
          r80_7ff_tmp336 = simd_and(r80_7ff_tmp320, bytetest_9f_9f);
          struct_Ll.cc = simd_or(r80_7ff_tmp336, struct_Ll.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp232, tmp78);
          bytetest_a1_a1 = simd_and(r80_7ff_tmp33, tmp35);
          r80_7ff_tmp337 = simd_and(r80_7ff_tmp320, bytetest_a1_a1);
          struct_Ll.cc = simd_or(r80_7ff_tmp337, struct_Ll.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp232, tmp78);
          bytetest_a3_a3 = simd_and(r80_7ff_tmp33, tmp67);
          r80_7ff_tmp338 = simd_and(r80_7ff_tmp320, bytetest_a3_a3);
          struct_Ll.cc = simd_or(r80_7ff_tmp338, struct_Ll.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp232, tmp78);
          bytetest_a5_a5 = simd_and(r80_7ff_tmp33, tmp91);
          r80_7ff_tmp339 = simd_and(r80_7ff_tmp320, bytetest_a5_a5);
          struct_Ll.cc = simd_or(r80_7ff_tmp339, struct_Ll.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp232, tmp78);
          bytetest_a7_a7 = simd_and(r80_7ff_tmp33, tmp104);
          r80_7ff_tmp340 = simd_and(r80_7ff_tmp320, bytetest_a7_a7);
          struct_Ll.cc = simd_or(r80_7ff_tmp340, struct_Ll.cc);
          bytetest_d6 = simd_and(r80_7ff_tmp232, tmp99);
          bytetest_80_87 = simd_andc(tmp69, basis_bits.bit_4);
          r80_7ff_tmp341 = simd_and(tmp27, bytetest_d6);
          carryQ.cq[36] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp341, carryQ.get_carry_in(36), r80_7ff_tmp342));
          r80_7ff_tmp343 = simd_and(r80_7ff_tmp342, bytetest_80_87);
          bytetest_d5 = simd_and(r80_7ff_tmp232, tmp91);
          r80_7ff_tmp344 = simd_or(basis_bits.bit_3, tmp9);
          bytetest_a1_bf = simd_and(tmp82, r80_7ff_tmp344);
          r80_7ff_tmp345 = simd_and(tmp27, bytetest_d5);
          carryQ.cq[37] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp345, carryQ.get_carry_in(37), r80_7ff_tmp346));
          r80_7ff_tmp347 = simd_and(r80_7ff_tmp346, bytetest_a1_bf);
          r80_7ff_tmp348 = simd_or(r80_7ff_tmp347, r80_7ff_tmp343);
          struct_Ll.cc = simd_or(r80_7ff_tmp348, struct_Ll.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(19, 19);
        }
        tmp179 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp180 = simd_and(tmp11, tmp179);
        tmp181 = simd_or(basis_bits.bit_4, tmp160);
        bytetest_e1_ef = simd_and(tmp180, tmp181);
        bytetest_e0 = simd_andc(tmp180, tmp9);
        bytetest_a0_bf = simd_and(tmp14, basis_bits.bit_2);
        tmp182 = simd_and(tmp27, bytetest_e0);
        carryQ.cq[38] = carryout2carry(pablo_blk_Advance(tmp182, carryQ.get_carry_in(38), tmp183));
        tmp184 = simd_and(tmp183, bytetest_a0_bf);
        tmp185 = simd_or(tmp184, bytetest_e1_ef);
        if ((bitblock::any(tmp185) || carryQ.CarryTest(39, 31))) {
          r800_ffff_tmp1 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp2 = simd_and(tmp11, r800_ffff_tmp1);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b4 = simd_and(bytetest_b0_bf, tmp78);
          r800_ffff_tmp3 = simd_and(basis_bits.bit_2, tmp92);
          bytetest_80_ab = simd_andc(tmp14, r800_ffff_tmp3);
          r800_ffff_tmp4 = simd_and(tmp27, bytetest_e1);
          carryQ.cq[39] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp4, carryQ.get_carry_in(39), r800_ffff_tmp5));
          r800_ffff_tmp6 = simd_and(r800_ffff_tmp5, bytetest_b4);
          carryQ.cq[40] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp6, carryQ.get_carry_in(40), r800_ffff_tmp7));
          r800_ffff_tmp8 = simd_and(r800_ffff_tmp7, bytetest_80_ab);
          struct_Ll.cc = simd_or(r800_ffff_tmp8, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b5 = simd_and(bytetest_b0_bf, tmp91);
          r800_ffff_tmp9 = simd_not(basis_bits.bit_4);
          r800_ffff_tmp10 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp9), simd_andc(tmp5, basis_bits.bit_3));
          bytetest_ab_b7 = simd_and(tmp82, r800_ffff_tmp10);
          r800_ffff_tmp11 = simd_and(r800_ffff_tmp5, bytetest_b5);
          carryQ.cq[41] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp11, carryQ.get_carry_in(41), r800_ffff_tmp12));
          r800_ffff_tmp13 = simd_and(r800_ffff_tmp12, bytetest_ab_b7);
          struct_Ll.cc = simd_or(r800_ffff_tmp13, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b6 = simd_and(bytetest_b0_bf, tmp99);
          r800_ffff_tmp14 = simd_and(basis_bits.bit_3, tmp5);
          bytetest_80_9a = simd_andc(tmp36, r800_ffff_tmp14);
          r800_ffff_tmp15 = simd_and(r800_ffff_tmp5, bytetest_b6);
          carryQ.cq[42] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp15, carryQ.get_carry_in(42), r800_ffff_tmp16));
          r800_ffff_tmp17 = simd_and(r800_ffff_tmp16, bytetest_80_9a);
          bytetest_b5 = simd_and(bytetest_b0_bf, tmp91);
          r800_ffff_tmp18 = simd_and(bytetest_b0_bf, basis_bits.bit_4);
          bytetest_b9_bf = simd_and(r800_ffff_tmp18, tmp160);
          r800_ffff_tmp19 = simd_and(r800_ffff_tmp12, bytetest_b9_bf);
          r800_ffff_tmp20 = simd_or(r800_ffff_tmp19, r800_ffff_tmp17);
          struct_Ll.cc = simd_or(r800_ffff_tmp20, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp111);
          bytetest_81_81 = simd_and(tmp69, tmp35);
          r800_ffff_tmp21 = simd_and(r800_ffff_tmp5, bytetest_b8);
          carryQ.cq[43] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp21, carryQ.get_carry_in(43), r800_ffff_tmp22));
          r800_ffff_tmp23 = simd_and(r800_ffff_tmp22, bytetest_81_81);
          struct_Ll.cc = simd_or(r800_ffff_tmp23, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp111);
          bytetest_83_83 = simd_and(tmp69, tmp67);
          r800_ffff_tmp24 = simd_and(r800_ffff_tmp22, bytetest_83_83);
          struct_Ll.cc = simd_or(r800_ffff_tmp24, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp111);
          bytetest_85_85 = simd_and(tmp69, tmp91);
          r800_ffff_tmp25 = simd_and(r800_ffff_tmp22, bytetest_85_85);
          struct_Ll.cc = simd_or(r800_ffff_tmp25, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp111);
          bytetest_87_87 = simd_and(tmp69, tmp104);
          r800_ffff_tmp26 = simd_and(r800_ffff_tmp22, bytetest_87_87);
          struct_Ll.cc = simd_or(r800_ffff_tmp26, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp111);
          bytetest_89_89 = simd_and(tmp69, tmp119);
          r800_ffff_tmp27 = simd_and(r800_ffff_tmp22, bytetest_89_89);
          struct_Ll.cc = simd_or(r800_ffff_tmp27, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp111);
          bytetest_8b_8b = simd_and(tmp69, tmp65);
          r800_ffff_tmp28 = simd_and(r800_ffff_tmp22, bytetest_8b_8b);
          struct_Ll.cc = simd_or(r800_ffff_tmp28, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp111);
          bytetest_8d_8d = simd_and(tmp69, tmp19);
          r800_ffff_tmp29 = simd_and(r800_ffff_tmp22, bytetest_8d_8d);
          struct_Ll.cc = simd_or(r800_ffff_tmp29, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp111);
          bytetest_8f_8f = simd_and(tmp69, tmp169);
          r800_ffff_tmp30 = simd_and(r800_ffff_tmp22, bytetest_8f_8f);
          struct_Ll.cc = simd_or(r800_ffff_tmp30, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp111);
          bytetest_91_91 = simd_and(tmp16, tmp35);
          r800_ffff_tmp31 = simd_and(r800_ffff_tmp22, bytetest_91_91);
          struct_Ll.cc = simd_or(r800_ffff_tmp31, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp111);
          bytetest_93_93 = simd_and(tmp16, tmp67);
          r800_ffff_tmp32 = simd_and(r800_ffff_tmp22, bytetest_93_93);
          struct_Ll.cc = simd_or(r800_ffff_tmp32, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp111);
          bytetest_95_95 = simd_and(tmp16, tmp91);
          r800_ffff_tmp33 = simd_and(r800_ffff_tmp22, bytetest_95_95);
          struct_Ll.cc = simd_or(r800_ffff_tmp33, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp111);
          bytetest_97_97 = simd_and(tmp16, tmp104);
          r800_ffff_tmp34 = simd_and(r800_ffff_tmp22, bytetest_97_97);
          struct_Ll.cc = simd_or(r800_ffff_tmp34, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp111);
          bytetest_99_99 = simd_and(tmp16, tmp119);
          r800_ffff_tmp35 = simd_and(r800_ffff_tmp22, bytetest_99_99);
          struct_Ll.cc = simd_or(r800_ffff_tmp35, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp111);
          bytetest_9b_9b = simd_and(tmp16, tmp65);
          r800_ffff_tmp36 = simd_and(r800_ffff_tmp22, bytetest_9b_9b);
          struct_Ll.cc = simd_or(r800_ffff_tmp36, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp111);
          bytetest_9d_9d = simd_and(tmp16, tmp19);
          r800_ffff_tmp37 = simd_and(r800_ffff_tmp22, bytetest_9d_9d);
          struct_Ll.cc = simd_or(r800_ffff_tmp37, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp111);
          bytetest_9f_9f = simd_and(tmp16, tmp169);
          r800_ffff_tmp38 = simd_and(r800_ffff_tmp22, bytetest_9f_9f);
          struct_Ll.cc = simd_or(r800_ffff_tmp38, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp111);
          r800_ffff_tmp39 = simd_and(tmp14, r800_ffff_tmp1);
          bytetest_a1_a1 = simd_and(r800_ffff_tmp39, tmp35);
          r800_ffff_tmp40 = simd_and(r800_ffff_tmp22, bytetest_a1_a1);
          struct_Ll.cc = simd_or(r800_ffff_tmp40, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp111);
          bytetest_a3_a3 = simd_and(r800_ffff_tmp39, tmp67);
          r800_ffff_tmp41 = simd_and(r800_ffff_tmp22, bytetest_a3_a3);
          struct_Ll.cc = simd_or(r800_ffff_tmp41, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp111);
          bytetest_a5_a5 = simd_and(r800_ffff_tmp39, tmp91);
          r800_ffff_tmp42 = simd_and(r800_ffff_tmp22, bytetest_a5_a5);
          struct_Ll.cc = simd_or(r800_ffff_tmp42, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp111);
          bytetest_a7_a7 = simd_and(r800_ffff_tmp39, tmp104);
          r800_ffff_tmp43 = simd_and(r800_ffff_tmp22, bytetest_a7_a7);
          struct_Ll.cc = simd_or(r800_ffff_tmp43, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp111);
          bytetest_a9_a9 = simd_and(r800_ffff_tmp39, tmp119);
          r800_ffff_tmp44 = simd_and(r800_ffff_tmp22, bytetest_a9_a9);
          struct_Ll.cc = simd_or(r800_ffff_tmp44, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp111);
          bytetest_ab_ab = simd_and(r800_ffff_tmp39, tmp65);
          r800_ffff_tmp45 = simd_and(r800_ffff_tmp22, bytetest_ab_ab);
          struct_Ll.cc = simd_or(r800_ffff_tmp45, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp111);
          bytetest_ad_ad = simd_and(r800_ffff_tmp39, tmp19);
          r800_ffff_tmp46 = simd_and(r800_ffff_tmp22, bytetest_ad_ad);
          struct_Ll.cc = simd_or(r800_ffff_tmp46, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp111);
          bytetest_af_af = simd_and(r800_ffff_tmp39, tmp169);
          r800_ffff_tmp47 = simd_and(r800_ffff_tmp22, bytetest_af_af);
          struct_Ll.cc = simd_or(r800_ffff_tmp47, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp111);
          bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp35);
          r800_ffff_tmp48 = simd_and(r800_ffff_tmp22, bytetest_b1_b1);
          struct_Ll.cc = simd_or(r800_ffff_tmp48, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp111);
          bytetest_b3_b3 = simd_and(bytetest_b0_bf, tmp67);
          r800_ffff_tmp49 = simd_and(r800_ffff_tmp22, bytetest_b3_b3);
          struct_Ll.cc = simd_or(r800_ffff_tmp49, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp111);
          bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp91);
          r800_ffff_tmp50 = simd_and(r800_ffff_tmp22, bytetest_b5_b5);
          struct_Ll.cc = simd_or(r800_ffff_tmp50, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp111);
          bytetest_b7_b7 = simd_and(bytetest_b0_bf, tmp104);
          r800_ffff_tmp51 = simd_and(r800_ffff_tmp22, bytetest_b7_b7);
          struct_Ll.cc = simd_or(r800_ffff_tmp51, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp111);
          bytetest_b9_b9 = simd_and(bytetest_b0_bf, tmp119);
          r800_ffff_tmp52 = simd_and(r800_ffff_tmp22, bytetest_b9_b9);
          struct_Ll.cc = simd_or(r800_ffff_tmp52, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp111);
          bytetest_bb_bb = simd_and(bytetest_b0_bf, tmp65);
          r800_ffff_tmp53 = simd_and(r800_ffff_tmp22, bytetest_bb_bb);
          struct_Ll.cc = simd_or(r800_ffff_tmp53, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp111);
          bytetest_bd_bd = simd_and(bytetest_b0_bf, tmp19);
          r800_ffff_tmp54 = simd_and(r800_ffff_tmp22, bytetest_bd_bd);
          struct_Ll.cc = simd_or(r800_ffff_tmp54, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp111);
          bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp169);
          r800_ffff_tmp55 = simd_and(r800_ffff_tmp22, bytetest_bf_bf);
          struct_Ll.cc = simd_or(r800_ffff_tmp55, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp119);
          bytetest_81_81 = simd_and(tmp69, tmp35);
          r800_ffff_tmp56 = simd_and(r800_ffff_tmp5, bytetest_b9);
          carryQ.cq[44] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp56, carryQ.get_carry_in(44), r800_ffff_tmp57));
          r800_ffff_tmp58 = simd_and(r800_ffff_tmp57, bytetest_81_81);
          struct_Ll.cc = simd_or(r800_ffff_tmp58, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp119);
          bytetest_83_83 = simd_and(tmp69, tmp67);
          r800_ffff_tmp59 = simd_and(r800_ffff_tmp57, bytetest_83_83);
          struct_Ll.cc = simd_or(r800_ffff_tmp59, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp119);
          bytetest_85_85 = simd_and(tmp69, tmp91);
          r800_ffff_tmp60 = simd_and(r800_ffff_tmp57, bytetest_85_85);
          struct_Ll.cc = simd_or(r800_ffff_tmp60, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp119);
          bytetest_87_87 = simd_and(tmp69, tmp104);
          r800_ffff_tmp61 = simd_and(r800_ffff_tmp57, bytetest_87_87);
          struct_Ll.cc = simd_or(r800_ffff_tmp61, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp119);
          bytetest_89_89 = simd_and(tmp69, tmp119);
          r800_ffff_tmp62 = simd_and(r800_ffff_tmp57, bytetest_89_89);
          struct_Ll.cc = simd_or(r800_ffff_tmp62, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp119);
          bytetest_8b_8b = simd_and(tmp69, tmp65);
          r800_ffff_tmp63 = simd_and(r800_ffff_tmp57, bytetest_8b_8b);
          struct_Ll.cc = simd_or(r800_ffff_tmp63, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp119);
          bytetest_8d_8d = simd_and(tmp69, tmp19);
          r800_ffff_tmp64 = simd_and(r800_ffff_tmp57, bytetest_8d_8d);
          struct_Ll.cc = simd_or(r800_ffff_tmp64, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp119);
          bytetest_8f_8f = simd_and(tmp69, tmp169);
          r800_ffff_tmp65 = simd_and(r800_ffff_tmp57, bytetest_8f_8f);
          struct_Ll.cc = simd_or(r800_ffff_tmp65, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp119);
          bytetest_91_91 = simd_and(tmp16, tmp35);
          r800_ffff_tmp66 = simd_and(r800_ffff_tmp57, bytetest_91_91);
          struct_Ll.cc = simd_or(r800_ffff_tmp66, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp119);
          bytetest_93_93 = simd_and(tmp16, tmp67);
          r800_ffff_tmp67 = simd_and(r800_ffff_tmp57, bytetest_93_93);
          struct_Ll.cc = simd_or(r800_ffff_tmp67, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp119);
          bytetest_95_95 = simd_and(tmp16, tmp91);
          r800_ffff_tmp68 = simd_and(r800_ffff_tmp57, bytetest_95_95);
          struct_Ll.cc = simd_or(r800_ffff_tmp68, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp119);
          bytetest_97_97 = simd_and(tmp16, tmp104);
          r800_ffff_tmp69 = simd_and(r800_ffff_tmp57, bytetest_97_97);
          struct_Ll.cc = simd_or(r800_ffff_tmp69, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp119);
          bytetest_99_99 = simd_and(tmp16, tmp119);
          r800_ffff_tmp70 = simd_and(r800_ffff_tmp57, bytetest_99_99);
          struct_Ll.cc = simd_or(r800_ffff_tmp70, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp119);
          bytetest_9b_9b = simd_and(tmp16, tmp65);
          r800_ffff_tmp71 = simd_and(r800_ffff_tmp57, bytetest_9b_9b);
          struct_Ll.cc = simd_or(r800_ffff_tmp71, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp119);
          bytetest_9d_9d = simd_and(tmp16, tmp19);
          r800_ffff_tmp72 = simd_and(r800_ffff_tmp57, bytetest_9d_9d);
          struct_Ll.cc = simd_or(r800_ffff_tmp72, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp119);
          bytetest_9f_9f = simd_and(tmp16, tmp169);
          r800_ffff_tmp73 = simd_and(r800_ffff_tmp57, bytetest_9f_9f);
          struct_Ll.cc = simd_or(r800_ffff_tmp73, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp119);
          bytetest_a1_a1 = simd_and(r800_ffff_tmp39, tmp35);
          r800_ffff_tmp74 = simd_and(r800_ffff_tmp57, bytetest_a1_a1);
          struct_Ll.cc = simd_or(r800_ffff_tmp74, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp119);
          bytetest_a3_a3 = simd_and(r800_ffff_tmp39, tmp67);
          r800_ffff_tmp75 = simd_and(r800_ffff_tmp57, bytetest_a3_a3);
          struct_Ll.cc = simd_or(r800_ffff_tmp75, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp119);
          bytetest_a5_a5 = simd_and(r800_ffff_tmp39, tmp91);
          r800_ffff_tmp76 = simd_and(r800_ffff_tmp57, bytetest_a5_a5);
          struct_Ll.cc = simd_or(r800_ffff_tmp76, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp119);
          bytetest_a7_a7 = simd_and(r800_ffff_tmp39, tmp104);
          r800_ffff_tmp77 = simd_and(r800_ffff_tmp57, bytetest_a7_a7);
          struct_Ll.cc = simd_or(r800_ffff_tmp77, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp119);
          bytetest_a9_a9 = simd_and(r800_ffff_tmp39, tmp119);
          r800_ffff_tmp78 = simd_and(r800_ffff_tmp57, bytetest_a9_a9);
          struct_Ll.cc = simd_or(r800_ffff_tmp78, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp119);
          bytetest_ab_ab = simd_and(r800_ffff_tmp39, tmp65);
          r800_ffff_tmp79 = simd_and(r800_ffff_tmp57, bytetest_ab_ab);
          struct_Ll.cc = simd_or(r800_ffff_tmp79, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp119);
          bytetest_ad_ad = simd_and(r800_ffff_tmp39, tmp19);
          r800_ffff_tmp80 = simd_and(r800_ffff_tmp57, bytetest_ad_ad);
          struct_Ll.cc = simd_or(r800_ffff_tmp80, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp119);
          bytetest_af_af = simd_and(r800_ffff_tmp39, tmp169);
          r800_ffff_tmp81 = simd_and(r800_ffff_tmp57, bytetest_af_af);
          struct_Ll.cc = simd_or(r800_ffff_tmp81, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp119);
          bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp35);
          r800_ffff_tmp82 = simd_and(r800_ffff_tmp57, bytetest_b1_b1);
          struct_Ll.cc = simd_or(r800_ffff_tmp82, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp119);
          bytetest_b3_b3 = simd_and(bytetest_b0_bf, tmp67);
          r800_ffff_tmp83 = simd_and(r800_ffff_tmp57, bytetest_b3_b3);
          struct_Ll.cc = simd_or(r800_ffff_tmp83, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp119);
          bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp91);
          r800_ffff_tmp84 = simd_and(r800_ffff_tmp57, bytetest_b5_b5);
          struct_Ll.cc = simd_or(r800_ffff_tmp84, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp119);
          bytetest_b7_b7 = simd_and(bytetest_b0_bf, tmp104);
          r800_ffff_tmp85 = simd_and(r800_ffff_tmp57, bytetest_b7_b7);
          struct_Ll.cc = simd_or(r800_ffff_tmp85, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp119);
          bytetest_b9_b9 = simd_and(bytetest_b0_bf, tmp119);
          r800_ffff_tmp86 = simd_and(r800_ffff_tmp57, bytetest_b9_b9);
          struct_Ll.cc = simd_or(r800_ffff_tmp86, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp119);
          bytetest_bb_bb = simd_and(bytetest_b0_bf, tmp65);
          r800_ffff_tmp87 = simd_and(r800_ffff_tmp57, bytetest_bb_bb);
          struct_Ll.cc = simd_or(r800_ffff_tmp87, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp119);
          bytetest_bd_bd = simd_and(bytetest_b0_bf, tmp19);
          r800_ffff_tmp88 = simd_and(r800_ffff_tmp57, bytetest_bd_bd);
          struct_Ll.cc = simd_or(r800_ffff_tmp88, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp119);
          bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp169);
          r800_ffff_tmp89 = simd_and(r800_ffff_tmp57, bytetest_bf_bf);
          struct_Ll.cc = simd_or(r800_ffff_tmp89, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp125);
          bytetest_81_81 = simd_and(tmp69, tmp35);
          r800_ffff_tmp90 = simd_and(r800_ffff_tmp5, bytetest_ba);
          carryQ.cq[45] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp90, carryQ.get_carry_in(45), r800_ffff_tmp91));
          r800_ffff_tmp92 = simd_and(r800_ffff_tmp91, bytetest_81_81);
          struct_Ll.cc = simd_or(r800_ffff_tmp92, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp125);
          bytetest_83_83 = simd_and(tmp69, tmp67);
          r800_ffff_tmp93 = simd_and(r800_ffff_tmp91, bytetest_83_83);
          struct_Ll.cc = simd_or(r800_ffff_tmp93, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp125);
          bytetest_85_85 = simd_and(tmp69, tmp91);
          r800_ffff_tmp94 = simd_and(r800_ffff_tmp91, bytetest_85_85);
          struct_Ll.cc = simd_or(r800_ffff_tmp94, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp125);
          bytetest_87_87 = simd_and(tmp69, tmp104);
          r800_ffff_tmp95 = simd_and(r800_ffff_tmp91, bytetest_87_87);
          struct_Ll.cc = simd_or(r800_ffff_tmp95, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp125);
          bytetest_89_89 = simd_and(tmp69, tmp119);
          r800_ffff_tmp96 = simd_and(r800_ffff_tmp91, bytetest_89_89);
          struct_Ll.cc = simd_or(r800_ffff_tmp96, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp125);
          bytetest_8b_8b = simd_and(tmp69, tmp65);
          r800_ffff_tmp97 = simd_and(r800_ffff_tmp91, bytetest_8b_8b);
          struct_Ll.cc = simd_or(r800_ffff_tmp97, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp125);
          bytetest_8d_8d = simd_and(tmp69, tmp19);
          r800_ffff_tmp98 = simd_and(r800_ffff_tmp91, bytetest_8d_8d);
          struct_Ll.cc = simd_or(r800_ffff_tmp98, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp125);
          bytetest_8f_8f = simd_and(tmp69, tmp169);
          r800_ffff_tmp99 = simd_and(r800_ffff_tmp91, bytetest_8f_8f);
          struct_Ll.cc = simd_or(r800_ffff_tmp99, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp125);
          bytetest_91_91 = simd_and(tmp16, tmp35);
          r800_ffff_tmp100 = simd_and(r800_ffff_tmp91, bytetest_91_91);
          struct_Ll.cc = simd_or(r800_ffff_tmp100, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp125);
          bytetest_93_93 = simd_and(tmp16, tmp67);
          r800_ffff_tmp101 = simd_and(r800_ffff_tmp91, bytetest_93_93);
          struct_Ll.cc = simd_or(r800_ffff_tmp101, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp125);
          r800_ffff_tmp102 = simd_not(tmp47);
          r800_ffff_tmp103 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp102), simd_andc(tmp37, basis_bits.bit_4));
          bytetest_95_9d = simd_and(tmp16, r800_ffff_tmp103);
          r800_ffff_tmp104 = simd_and(r800_ffff_tmp91, bytetest_95_9d);
          struct_Ll.cc = simd_or(r800_ffff_tmp104, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp125);
          bytetest_9f_9f = simd_and(tmp16, tmp169);
          r800_ffff_tmp105 = simd_and(r800_ffff_tmp91, bytetest_9f_9f);
          struct_Ll.cc = simd_or(r800_ffff_tmp105, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp125);
          bytetest_a1_a1 = simd_and(r800_ffff_tmp39, tmp35);
          r800_ffff_tmp106 = simd_and(r800_ffff_tmp91, bytetest_a1_a1);
          struct_Ll.cc = simd_or(r800_ffff_tmp106, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp125);
          bytetest_a3_a3 = simd_and(r800_ffff_tmp39, tmp67);
          r800_ffff_tmp107 = simd_and(r800_ffff_tmp91, bytetest_a3_a3);
          struct_Ll.cc = simd_or(r800_ffff_tmp107, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp125);
          bytetest_a5_a5 = simd_and(r800_ffff_tmp39, tmp91);
          r800_ffff_tmp108 = simd_and(r800_ffff_tmp91, bytetest_a5_a5);
          struct_Ll.cc = simd_or(r800_ffff_tmp108, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp125);
          bytetest_a7_a7 = simd_and(r800_ffff_tmp39, tmp104);
          r800_ffff_tmp109 = simd_and(r800_ffff_tmp91, bytetest_a7_a7);
          struct_Ll.cc = simd_or(r800_ffff_tmp109, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp125);
          bytetest_a9_a9 = simd_and(r800_ffff_tmp39, tmp119);
          r800_ffff_tmp110 = simd_and(r800_ffff_tmp91, bytetest_a9_a9);
          struct_Ll.cc = simd_or(r800_ffff_tmp110, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp125);
          bytetest_ab_ab = simd_and(r800_ffff_tmp39, tmp65);
          r800_ffff_tmp111 = simd_and(r800_ffff_tmp91, bytetest_ab_ab);
          struct_Ll.cc = simd_or(r800_ffff_tmp111, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp125);
          bytetest_ad_ad = simd_and(r800_ffff_tmp39, tmp19);
          r800_ffff_tmp112 = simd_and(r800_ffff_tmp91, bytetest_ad_ad);
          struct_Ll.cc = simd_or(r800_ffff_tmp112, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp125);
          bytetest_af_af = simd_and(r800_ffff_tmp39, tmp169);
          r800_ffff_tmp113 = simd_and(r800_ffff_tmp91, bytetest_af_af);
          struct_Ll.cc = simd_or(r800_ffff_tmp113, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp125);
          bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp35);
          r800_ffff_tmp114 = simd_and(r800_ffff_tmp91, bytetest_b1_b1);
          struct_Ll.cc = simd_or(r800_ffff_tmp114, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp125);
          bytetest_b3_b3 = simd_and(bytetest_b0_bf, tmp67);
          r800_ffff_tmp115 = simd_and(r800_ffff_tmp91, bytetest_b3_b3);
          struct_Ll.cc = simd_or(r800_ffff_tmp115, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp125);
          bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp91);
          r800_ffff_tmp116 = simd_and(r800_ffff_tmp91, bytetest_b5_b5);
          struct_Ll.cc = simd_or(r800_ffff_tmp116, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp125);
          bytetest_b7_b7 = simd_and(bytetest_b0_bf, tmp104);
          r800_ffff_tmp117 = simd_and(r800_ffff_tmp91, bytetest_b7_b7);
          struct_Ll.cc = simd_or(r800_ffff_tmp117, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp125);
          bytetest_b9_b9 = simd_and(bytetest_b0_bf, tmp119);
          r800_ffff_tmp118 = simd_and(r800_ffff_tmp91, bytetest_b9_b9);
          struct_Ll.cc = simd_or(r800_ffff_tmp118, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp125);
          bytetest_bb_bb = simd_and(bytetest_b0_bf, tmp65);
          r800_ffff_tmp119 = simd_and(r800_ffff_tmp91, bytetest_bb_bb);
          struct_Ll.cc = simd_or(r800_ffff_tmp119, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp125);
          bytetest_bd_bd = simd_and(bytetest_b0_bf, tmp19);
          r800_ffff_tmp120 = simd_and(r800_ffff_tmp91, bytetest_bd_bd);
          struct_Ll.cc = simd_or(r800_ffff_tmp120, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp125);
          bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp169);
          r800_ffff_tmp121 = simd_and(r800_ffff_tmp91, bytetest_bf_bf);
          struct_Ll.cc = simd_or(r800_ffff_tmp121, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp65);
          bytetest_81_81 = simd_and(tmp69, tmp35);
          r800_ffff_tmp122 = simd_and(r800_ffff_tmp5, bytetest_bb);
          carryQ.cq[46] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp122, carryQ.get_carry_in(46), r800_ffff_tmp123));
          r800_ffff_tmp124 = simd_and(r800_ffff_tmp123, bytetest_81_81);
          struct_Ll.cc = simd_or(r800_ffff_tmp124, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp65);
          bytetest_83_83 = simd_and(tmp69, tmp67);
          r800_ffff_tmp125 = simd_and(r800_ffff_tmp123, bytetest_83_83);
          struct_Ll.cc = simd_or(r800_ffff_tmp125, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp65);
          bytetest_85_85 = simd_and(tmp69, tmp91);
          r800_ffff_tmp126 = simd_and(r800_ffff_tmp123, bytetest_85_85);
          struct_Ll.cc = simd_or(r800_ffff_tmp126, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp65);
          bytetest_87_87 = simd_and(tmp69, tmp104);
          r800_ffff_tmp127 = simd_and(r800_ffff_tmp123, bytetest_87_87);
          struct_Ll.cc = simd_or(r800_ffff_tmp127, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp65);
          bytetest_89_89 = simd_and(tmp69, tmp119);
          r800_ffff_tmp128 = simd_and(r800_ffff_tmp123, bytetest_89_89);
          struct_Ll.cc = simd_or(r800_ffff_tmp128, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp65);
          bytetest_8b_8b = simd_and(tmp69, tmp65);
          r800_ffff_tmp129 = simd_and(r800_ffff_tmp123, bytetest_8b_8b);
          struct_Ll.cc = simd_or(r800_ffff_tmp129, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp65);
          bytetest_8d_8d = simd_and(tmp69, tmp19);
          r800_ffff_tmp130 = simd_and(r800_ffff_tmp123, bytetest_8d_8d);
          struct_Ll.cc = simd_or(r800_ffff_tmp130, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp65);
          bytetest_8f_8f = simd_and(tmp69, tmp169);
          r800_ffff_tmp131 = simd_and(r800_ffff_tmp123, bytetest_8f_8f);
          struct_Ll.cc = simd_or(r800_ffff_tmp131, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp65);
          bytetest_91_91 = simd_and(tmp16, tmp35);
          r800_ffff_tmp132 = simd_and(r800_ffff_tmp123, bytetest_91_91);
          struct_Ll.cc = simd_or(r800_ffff_tmp132, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp65);
          bytetest_93_93 = simd_and(tmp16, tmp67);
          r800_ffff_tmp133 = simd_and(r800_ffff_tmp123, bytetest_93_93);
          struct_Ll.cc = simd_or(r800_ffff_tmp133, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp65);
          bytetest_95_95 = simd_and(tmp16, tmp91);
          r800_ffff_tmp134 = simd_and(r800_ffff_tmp123, bytetest_95_95);
          struct_Ll.cc = simd_or(r800_ffff_tmp134, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp65);
          bytetest_97_97 = simd_and(tmp16, tmp104);
          r800_ffff_tmp135 = simd_and(r800_ffff_tmp123, bytetest_97_97);
          struct_Ll.cc = simd_or(r800_ffff_tmp135, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp65);
          bytetest_99_99 = simd_and(tmp16, tmp119);
          r800_ffff_tmp136 = simd_and(r800_ffff_tmp123, bytetest_99_99);
          struct_Ll.cc = simd_or(r800_ffff_tmp136, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp65);
          bytetest_9b_9b = simd_and(tmp16, tmp65);
          r800_ffff_tmp137 = simd_and(r800_ffff_tmp123, bytetest_9b_9b);
          struct_Ll.cc = simd_or(r800_ffff_tmp137, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp65);
          bytetest_9d_9d = simd_and(tmp16, tmp19);
          r800_ffff_tmp138 = simd_and(r800_ffff_tmp123, bytetest_9d_9d);
          struct_Ll.cc = simd_or(r800_ffff_tmp138, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp65);
          bytetest_9f_9f = simd_and(tmp16, tmp169);
          r800_ffff_tmp139 = simd_and(r800_ffff_tmp123, bytetest_9f_9f);
          struct_Ll.cc = simd_or(r800_ffff_tmp139, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp65);
          bytetest_a1_a1 = simd_and(r800_ffff_tmp39, tmp35);
          r800_ffff_tmp140 = simd_and(r800_ffff_tmp123, bytetest_a1_a1);
          struct_Ll.cc = simd_or(r800_ffff_tmp140, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp65);
          bytetest_a3_a3 = simd_and(r800_ffff_tmp39, tmp67);
          r800_ffff_tmp141 = simd_and(r800_ffff_tmp123, bytetest_a3_a3);
          struct_Ll.cc = simd_or(r800_ffff_tmp141, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp65);
          bytetest_a5_a5 = simd_and(r800_ffff_tmp39, tmp91);
          r800_ffff_tmp142 = simd_and(r800_ffff_tmp123, bytetest_a5_a5);
          struct_Ll.cc = simd_or(r800_ffff_tmp142, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp65);
          bytetest_a7_a7 = simd_and(r800_ffff_tmp39, tmp104);
          r800_ffff_tmp143 = simd_and(r800_ffff_tmp123, bytetest_a7_a7);
          struct_Ll.cc = simd_or(r800_ffff_tmp143, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp65);
          bytetest_a9_a9 = simd_and(r800_ffff_tmp39, tmp119);
          r800_ffff_tmp144 = simd_and(r800_ffff_tmp123, bytetest_a9_a9);
          struct_Ll.cc = simd_or(r800_ffff_tmp144, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp65);
          bytetest_ab_ab = simd_and(r800_ffff_tmp39, tmp65);
          r800_ffff_tmp145 = simd_and(r800_ffff_tmp123, bytetest_ab_ab);
          struct_Ll.cc = simd_or(r800_ffff_tmp145, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp65);
          bytetest_ad_ad = simd_and(r800_ffff_tmp39, tmp19);
          r800_ffff_tmp146 = simd_and(r800_ffff_tmp123, bytetest_ad_ad);
          struct_Ll.cc = simd_or(r800_ffff_tmp146, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp65);
          bytetest_af_af = simd_and(r800_ffff_tmp39, tmp169);
          r800_ffff_tmp147 = simd_and(r800_ffff_tmp123, bytetest_af_af);
          struct_Ll.cc = simd_or(r800_ffff_tmp147, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp65);
          bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp35);
          r800_ffff_tmp148 = simd_and(r800_ffff_tmp123, bytetest_b1_b1);
          struct_Ll.cc = simd_or(r800_ffff_tmp148, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp65);
          bytetest_b3_b3 = simd_and(bytetest_b0_bf, tmp67);
          r800_ffff_tmp149 = simd_and(r800_ffff_tmp123, bytetest_b3_b3);
          struct_Ll.cc = simd_or(r800_ffff_tmp149, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp65);
          bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp91);
          r800_ffff_tmp150 = simd_and(r800_ffff_tmp123, bytetest_b5_b5);
          struct_Ll.cc = simd_or(r800_ffff_tmp150, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp65);
          bytetest_b7_b7 = simd_and(bytetest_b0_bf, tmp104);
          r800_ffff_tmp151 = simd_and(r800_ffff_tmp123, bytetest_b7_b7);
          struct_Ll.cc = simd_or(r800_ffff_tmp151, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp65);
          bytetest_b9_b9 = simd_and(bytetest_b0_bf, tmp119);
          r800_ffff_tmp152 = simd_and(r800_ffff_tmp123, bytetest_b9_b9);
          struct_Ll.cc = simd_or(r800_ffff_tmp152, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp65);
          bytetest_bb_bb = simd_and(bytetest_b0_bf, tmp65);
          r800_ffff_tmp153 = simd_and(r800_ffff_tmp123, bytetest_bb_bb);
          struct_Ll.cc = simd_or(r800_ffff_tmp153, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp65);
          bytetest_bd_bd = simd_and(bytetest_b0_bf, tmp19);
          r800_ffff_tmp154 = simd_and(r800_ffff_tmp123, bytetest_bd_bd);
          struct_Ll.cc = simd_or(r800_ffff_tmp154, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bc = simd_and(bytetest_b0_bf, tmp140);
          bytetest_80_87 = simd_andc(tmp69, basis_bits.bit_4);
          r800_ffff_tmp155 = simd_and(r800_ffff_tmp5, bytetest_bc);
          carryQ.cq[47] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp155, carryQ.get_carry_in(47), r800_ffff_tmp156));
          r800_ffff_tmp157 = simd_and(r800_ffff_tmp156, bytetest_80_87);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp65);
          bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp169);
          r800_ffff_tmp158 = simd_and(r800_ffff_tmp123, bytetest_bf_bf);
          r800_ffff_tmp159 = simd_or(r800_ffff_tmp158, r800_ffff_tmp157);
          struct_Ll.cc = simd_or(r800_ffff_tmp159, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bc = simd_and(bytetest_b0_bf, tmp140);
          bytetest_90_95 = simd_andc(tmp157, tmp47);
          r800_ffff_tmp160 = simd_and(r800_ffff_tmp156, bytetest_90_95);
          struct_Ll.cc = simd_or(r800_ffff_tmp160, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bc = simd_and(bytetest_b0_bf, tmp140);
          bytetest_a0_a7 = simd_andc(r800_ffff_tmp39, basis_bits.bit_4);
          r800_ffff_tmp161 = simd_and(r800_ffff_tmp156, bytetest_a0_a7);
          struct_Ll.cc = simd_or(r800_ffff_tmp161, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bc = simd_and(bytetest_b0_bf, tmp140);
          bytetest_b0_b7 = simd_andc(bytetest_b0_bf, basis_bits.bit_4);
          r800_ffff_tmp162 = simd_and(r800_ffff_tmp156, bytetest_b0_b7);
          struct_Ll.cc = simd_or(r800_ffff_tmp162, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bd = simd_and(bytetest_b0_bf, tmp19);
          bytetest_80_85 = simd_andc(bytetest_80_87, tmp47);
          r800_ffff_tmp163 = simd_and(r800_ffff_tmp5, bytetest_bd);
          carryQ.cq[48] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp163, carryQ.get_carry_in(48), r800_ffff_tmp164));
          r800_ffff_tmp165 = simd_and(r800_ffff_tmp164, bytetest_80_85);
          struct_Ll.cc = simd_or(r800_ffff_tmp165, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bd = simd_and(bytetest_b0_bf, tmp19);
          bytetest_90_97 = simd_andc(tmp16, basis_bits.bit_4);
          r800_ffff_tmp166 = simd_and(r800_ffff_tmp164, bytetest_90_97);
          struct_Ll.cc = simd_or(r800_ffff_tmp166, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bd = simd_and(bytetest_b0_bf, tmp19);
          bytetest_a0_a7 = simd_andc(r800_ffff_tmp39, basis_bits.bit_4);
          r800_ffff_tmp167 = simd_and(r800_ffff_tmp164, bytetest_a0_a7);
          struct_Ll.cc = simd_or(r800_ffff_tmp167, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bd = simd_and(bytetest_b0_bf, tmp19);
          r800_ffff_tmp168 = simd_and(basis_bits.bit_4, tmp47);
          bytetest_b0_bd = simd_andc(bytetest_b0_bf, r800_ffff_tmp168);
          r800_ffff_tmp169 = simd_and(r800_ffff_tmp164, bytetest_b0_bd);
          struct_Ll.cc = simd_or(r800_ffff_tmp169, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_be = simd_and(bytetest_b0_bf, tmp159);
          bytetest_80_87 = simd_andc(tmp69, basis_bits.bit_4);
          r800_ffff_tmp170 = simd_and(r800_ffff_tmp5, bytetest_be);
          carryQ.cq[49] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp170, carryQ.get_carry_in(49), r800_ffff_tmp171));
          r800_ffff_tmp172 = simd_and(r800_ffff_tmp171, bytetest_80_87);
          struct_Ll.cc = simd_or(r800_ffff_tmp172, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_be = simd_and(bytetest_b0_bf, tmp159);
          bytetest_90_97 = simd_andc(tmp16, basis_bits.bit_4);
          r800_ffff_tmp173 = simd_and(r800_ffff_tmp171, bytetest_90_97);
          struct_Ll.cc = simd_or(r800_ffff_tmp173, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_be = simd_and(bytetest_b0_bf, tmp159);
          bytetest_a0_a7 = simd_andc(r800_ffff_tmp39, basis_bits.bit_4);
          r800_ffff_tmp174 = simd_and(r800_ffff_tmp171, bytetest_a0_a7);
          struct_Ll.cc = simd_or(r800_ffff_tmp174, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_be = simd_and(bytetest_b0_bf, tmp159);
          bytetest_b0_b4 = simd_andc(bytetest_b0_b7, tmp37);
          r800_ffff_tmp175 = simd_and(r800_ffff_tmp171, bytetest_b0_b4);
          struct_Ll.cc = simd_or(r800_ffff_tmp175, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_be = simd_and(bytetest_b0_bf, tmp159);
          r800_ffff_tmp176 = simd_and(tmp77, basis_bits.bit_6);
          bytetest_b6_b7 = simd_and(bytetest_b0_bf, r800_ffff_tmp176);
          r800_ffff_tmp177 = simd_and(r800_ffff_tmp171, bytetest_b6_b7);
          struct_Ll.cc = simd_or(r800_ffff_tmp177, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_be = simd_and(bytetest_b0_bf, tmp159);
          bytetest_be_be = simd_and(bytetest_b0_bf, tmp159);
          r800_ffff_tmp178 = simd_and(r800_ffff_tmp171, bytetest_be_be);
          struct_Ll.cc = simd_or(r800_ffff_tmp178, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp169);
          r800_ffff_tmp179 = simd_not(tmp8);
          r800_ffff_tmp180 = simd_or(simd_and(basis_bits.bit_5, r800_ffff_tmp179), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
          bytetest_82_84 = simd_and(bytetest_80_87, r800_ffff_tmp180);
          r800_ffff_tmp181 = simd_and(r800_ffff_tmp5, bytetest_bf);
          carryQ.cq[50] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp181, carryQ.get_carry_in(50), r800_ffff_tmp182));
          r800_ffff_tmp183 = simd_and(r800_ffff_tmp182, bytetest_82_84);
          struct_Ll.cc = simd_or(r800_ffff_tmp183, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp169);
          bytetest_86_87 = simd_and(tmp69, r800_ffff_tmp176);
          r800_ffff_tmp184 = simd_and(r800_ffff_tmp182, bytetest_86_87);
          struct_Ll.cc = simd_or(r800_ffff_tmp184, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp169);
          bytetest_90_93 = simd_andc(tmp16, tmp7);
          r800_ffff_tmp185 = simd_and(r800_ffff_tmp182, bytetest_90_93);
          struct_Ll.cc = simd_or(r800_ffff_tmp185, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp169);
          bytetest_96_97 = simd_and(tmp16, r800_ffff_tmp176);
          r800_ffff_tmp186 = simd_and(r800_ffff_tmp182, bytetest_96_97);
          struct_Ll.cc = simd_or(r800_ffff_tmp186, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp169);
          bytetest_a0_a7 = simd_andc(r800_ffff_tmp39, basis_bits.bit_4);
          r800_ffff_tmp187 = simd_and(r800_ffff_tmp182, bytetest_a0_a7);
          struct_Ll.cc = simd_or(r800_ffff_tmp187, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp169);
          bytetest_b2_b4 = simd_and(bytetest_b0_b7, r800_ffff_tmp180);
          r800_ffff_tmp188 = simd_and(r800_ffff_tmp182, bytetest_b2_b4);
          struct_Ll.cc = simd_or(r800_ffff_tmp188, struct_Ll.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, tmp35);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp169);
          bytetest_b6_b7 = simd_and(bytetest_b0_bf, r800_ffff_tmp176);
          r800_ffff_tmp189 = simd_and(r800_ffff_tmp182, bytetest_b6_b7);
          struct_Ll.cc = simd_or(r800_ffff_tmp189, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_84 = simd_and(tmp69, tmp78);
          bytetest_8a_8a = simd_and(tmp69, tmp125);
          r800_ffff_tmp190 = simd_and(tmp27, bytetest_e2);
          carryQ.cq[51] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp190, carryQ.get_carry_in(51), r800_ffff_tmp191));
          r800_ffff_tmp192 = simd_and(r800_ffff_tmp191, bytetest_84);
          carryQ.cq[52] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp192, carryQ.get_carry_in(52), r800_ffff_tmp193));
          r800_ffff_tmp194 = simd_and(r800_ffff_tmp193, bytetest_8a_8a);
          struct_Ll.cc = simd_or(r800_ffff_tmp194, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_84 = simd_and(tmp69, tmp78);
          bytetest_8e_8f = simd_and(tmp69, tmp40);
          r800_ffff_tmp195 = simd_and(r800_ffff_tmp193, bytetest_8e_8f);
          struct_Ll.cc = simd_or(r800_ffff_tmp195, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_84 = simd_and(tmp69, tmp78);
          bytetest_93_93 = simd_and(tmp16, tmp67);
          r800_ffff_tmp196 = simd_and(r800_ffff_tmp193, bytetest_93_93);
          struct_Ll.cc = simd_or(r800_ffff_tmp196, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_84 = simd_and(tmp69, tmp78);
          bytetest_af_af = simd_and(r800_ffff_tmp39, tmp169);
          r800_ffff_tmp197 = simd_and(r800_ffff_tmp193, bytetest_af_af);
          struct_Ll.cc = simd_or(r800_ffff_tmp197, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_84 = simd_and(tmp69, tmp78);
          bytetest_b4_b4 = simd_and(bytetest_b0_bf, tmp78);
          r800_ffff_tmp198 = simd_and(r800_ffff_tmp193, bytetest_b4_b4);
          struct_Ll.cc = simd_or(r800_ffff_tmp198, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_84 = simd_and(tmp69, tmp78);
          bytetest_b9_b9 = simd_and(bytetest_b0_bf, tmp119);
          r800_ffff_tmp199 = simd_and(r800_ffff_tmp193, bytetest_b9_b9);
          struct_Ll.cc = simd_or(r800_ffff_tmp199, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_84 = simd_and(tmp69, tmp78);
          r800_ffff_tmp200 = simd_andc(tmp17, basis_bits.bit_6);
          bytetest_bc_bd = simd_and(bytetest_b0_bf, r800_ffff_tmp200);
          r800_ffff_tmp201 = simd_and(r800_ffff_tmp193, bytetest_bc_bd);
          struct_Ll.cc = simd_or(r800_ffff_tmp201, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_85 = simd_and(tmp69, tmp91);
          bytetest_86_89 = simd_and(tmp69, tmp62);
          r800_ffff_tmp202 = simd_and(r800_ffff_tmp191, bytetest_85);
          carryQ.cq[53] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp202, carryQ.get_carry_in(53), r800_ffff_tmp203));
          r800_ffff_tmp204 = simd_and(r800_ffff_tmp203, bytetest_86_89);
          struct_Ll.cc = simd_or(r800_ffff_tmp204, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_85 = simd_and(tmp69, tmp91);
          bytetest_8e_8e = simd_and(tmp69, tmp159);
          r800_ffff_tmp205 = simd_and(r800_ffff_tmp203, bytetest_8e_8e);
          struct_Ll.cc = simd_or(r800_ffff_tmp205, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_86 = simd_and(tmp69, tmp99);
          bytetest_84_84 = simd_and(tmp69, tmp78);
          r800_ffff_tmp206 = simd_and(r800_ffff_tmp191, bytetest_86);
          carryQ.cq[54] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp206, carryQ.get_carry_in(54), r800_ffff_tmp207));
          r800_ffff_tmp208 = simd_and(r800_ffff_tmp207, bytetest_84_84);
          struct_Ll.cc = simd_or(r800_ffff_tmp208, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b1 = simd_and(bytetest_b0_bf, tmp35);
          r800_ffff_tmp209 = simd_and(basis_bits.bit_3, tmp169);
          bytetest_80_9e = simd_andc(tmp36, r800_ffff_tmp209);
          r800_ffff_tmp210 = simd_and(r800_ffff_tmp191, bytetest_b1);
          carryQ.cq[55] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp210, carryQ.get_carry_in(55), r800_ffff_tmp211));
          r800_ffff_tmp212 = simd_and(r800_ffff_tmp211, bytetest_80_9e);
          bytetest_b0 = simd_andc(bytetest_b0_bf, tmp9);
          bytetest_b0_bf = simd_and(tmp14, tmp12);
          r800_ffff_tmp213 = simd_and(r800_ffff_tmp191, bytetest_b0);
          carryQ.cq[56] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp213, carryQ.get_carry_in(56), r800_ffff_tmp214));
          r800_ffff_tmp215 = simd_and(r800_ffff_tmp214, bytetest_b0_bf);
          r800_ffff_tmp216 = simd_or(r800_ffff_tmp215, r800_ffff_tmp212);
          struct_Ll.cc = simd_or(r800_ffff_tmp216, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b1 = simd_and(bytetest_b0_bf, tmp35);
          bytetest_a1_a1 = simd_and(r800_ffff_tmp39, tmp35);
          r800_ffff_tmp217 = simd_and(r800_ffff_tmp211, bytetest_a1_a1);
          struct_Ll.cc = simd_or(r800_ffff_tmp217, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b1 = simd_and(bytetest_b0_bf, tmp35);
          r800_ffff_tmp218 = simd_and(r800_ffff_tmp39, tmp77);
          r800_ffff_tmp219 = simd_not(basis_bits.bit_7);
          r800_ffff_tmp220 = simd_or(simd_and(basis_bits.bit_6, r800_ffff_tmp219), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
          bytetest_a5_a6 = simd_and(r800_ffff_tmp218, r800_ffff_tmp220);
          r800_ffff_tmp221 = simd_and(r800_ffff_tmp211, bytetest_a5_a6);
          struct_Ll.cc = simd_or(r800_ffff_tmp221, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b1 = simd_and(bytetest_b0_bf, tmp35);
          bytetest_a8_a8 = simd_and(r800_ffff_tmp39, tmp111);
          r800_ffff_tmp222 = simd_and(r800_ffff_tmp211, bytetest_a8_a8);
          struct_Ll.cc = simd_or(r800_ffff_tmp222, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b1 = simd_and(bytetest_b0_bf, tmp35);
          bytetest_aa_aa = simd_and(r800_ffff_tmp39, tmp125);
          r800_ffff_tmp223 = simd_and(r800_ffff_tmp211, bytetest_aa_aa);
          struct_Ll.cc = simd_or(r800_ffff_tmp223, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b1 = simd_and(bytetest_b0_bf, tmp35);
          bytetest_ac_ac = simd_and(r800_ffff_tmp39, tmp140);
          r800_ffff_tmp224 = simd_and(r800_ffff_tmp211, bytetest_ac_ac);
          struct_Ll.cc = simd_or(r800_ffff_tmp224, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b1 = simd_and(bytetest_b0_bf, tmp35);
          bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp35);
          r800_ffff_tmp225 = simd_and(r800_ffff_tmp211, bytetest_b1_b1);
          struct_Ll.cc = simd_or(r800_ffff_tmp225, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b1 = simd_and(bytetest_b0_bf, tmp35);
          r800_ffff_tmp226 = simd_or(simd_and(basis_bits.bit_5, r800_ffff_tmp179), simd_andc(tmp3, basis_bits.bit_5));
          bytetest_b3_b4 = simd_and(bytetest_b0_b7, r800_ffff_tmp226);
          r800_ffff_tmp227 = simd_and(r800_ffff_tmp211, bytetest_b3_b4);
          struct_Ll.cc = simd_or(r800_ffff_tmp227, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b1 = simd_and(bytetest_b0_bf, tmp35);
          bytetest_b6_bb = simd_and(bytetest_b0_bf, tmp148);
          r800_ffff_tmp228 = simd_and(r800_ffff_tmp211, bytetest_b6_bb);
          struct_Ll.cc = simd_or(r800_ffff_tmp228, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_81_81 = simd_and(tmp69, tmp35);
          r800_ffff_tmp229 = simd_and(r800_ffff_tmp191, bytetest_b2);
          carryQ.cq[57] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp229, carryQ.get_carry_in(57), r800_ffff_tmp230));
          r800_ffff_tmp231 = simd_and(r800_ffff_tmp230, bytetest_81_81);
          struct_Ll.cc = simd_or(r800_ffff_tmp231, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_83_83 = simd_and(tmp69, tmp67);
          r800_ffff_tmp232 = simd_and(r800_ffff_tmp230, bytetest_83_83);
          struct_Ll.cc = simd_or(r800_ffff_tmp232, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_85_85 = simd_and(tmp69, tmp91);
          r800_ffff_tmp233 = simd_and(r800_ffff_tmp230, bytetest_85_85);
          struct_Ll.cc = simd_or(r800_ffff_tmp233, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_87_87 = simd_and(tmp69, tmp104);
          r800_ffff_tmp234 = simd_and(r800_ffff_tmp230, bytetest_87_87);
          struct_Ll.cc = simd_or(r800_ffff_tmp234, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_89_89 = simd_and(tmp69, tmp119);
          r800_ffff_tmp235 = simd_and(r800_ffff_tmp230, bytetest_89_89);
          struct_Ll.cc = simd_or(r800_ffff_tmp235, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_8b_8b = simd_and(tmp69, tmp65);
          r800_ffff_tmp236 = simd_and(r800_ffff_tmp230, bytetest_8b_8b);
          struct_Ll.cc = simd_or(r800_ffff_tmp236, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_8d_8d = simd_and(tmp69, tmp19);
          r800_ffff_tmp237 = simd_and(r800_ffff_tmp230, bytetest_8d_8d);
          struct_Ll.cc = simd_or(r800_ffff_tmp237, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_8f_8f = simd_and(tmp69, tmp169);
          r800_ffff_tmp238 = simd_and(r800_ffff_tmp230, bytetest_8f_8f);
          struct_Ll.cc = simd_or(r800_ffff_tmp238, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_91_91 = simd_and(tmp16, tmp35);
          r800_ffff_tmp239 = simd_and(r800_ffff_tmp230, bytetest_91_91);
          struct_Ll.cc = simd_or(r800_ffff_tmp239, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_93_93 = simd_and(tmp16, tmp67);
          r800_ffff_tmp240 = simd_and(r800_ffff_tmp230, bytetest_93_93);
          struct_Ll.cc = simd_or(r800_ffff_tmp240, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_95_95 = simd_and(tmp16, tmp91);
          r800_ffff_tmp241 = simd_and(r800_ffff_tmp230, bytetest_95_95);
          struct_Ll.cc = simd_or(r800_ffff_tmp241, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_97_97 = simd_and(tmp16, tmp104);
          r800_ffff_tmp242 = simd_and(r800_ffff_tmp230, bytetest_97_97);
          struct_Ll.cc = simd_or(r800_ffff_tmp242, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_99_99 = simd_and(tmp16, tmp119);
          r800_ffff_tmp243 = simd_and(r800_ffff_tmp230, bytetest_99_99);
          struct_Ll.cc = simd_or(r800_ffff_tmp243, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_9b_9b = simd_and(tmp16, tmp65);
          r800_ffff_tmp244 = simd_and(r800_ffff_tmp230, bytetest_9b_9b);
          struct_Ll.cc = simd_or(r800_ffff_tmp244, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_9d_9d = simd_and(tmp16, tmp19);
          r800_ffff_tmp245 = simd_and(r800_ffff_tmp230, bytetest_9d_9d);
          struct_Ll.cc = simd_or(r800_ffff_tmp245, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_9f_9f = simd_and(tmp16, tmp169);
          r800_ffff_tmp246 = simd_and(r800_ffff_tmp230, bytetest_9f_9f);
          struct_Ll.cc = simd_or(r800_ffff_tmp246, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_a1_a1 = simd_and(r800_ffff_tmp39, tmp35);
          r800_ffff_tmp247 = simd_and(r800_ffff_tmp230, bytetest_a1_a1);
          struct_Ll.cc = simd_or(r800_ffff_tmp247, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_a3_a3 = simd_and(r800_ffff_tmp39, tmp67);
          r800_ffff_tmp248 = simd_and(r800_ffff_tmp230, bytetest_a3_a3);
          struct_Ll.cc = simd_or(r800_ffff_tmp248, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_a5_a5 = simd_and(r800_ffff_tmp39, tmp91);
          r800_ffff_tmp249 = simd_and(r800_ffff_tmp230, bytetest_a5_a5);
          struct_Ll.cc = simd_or(r800_ffff_tmp249, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_a7_a7 = simd_and(r800_ffff_tmp39, tmp104);
          r800_ffff_tmp250 = simd_and(r800_ffff_tmp230, bytetest_a7_a7);
          struct_Ll.cc = simd_or(r800_ffff_tmp250, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_a9_a9 = simd_and(r800_ffff_tmp39, tmp119);
          r800_ffff_tmp251 = simd_and(r800_ffff_tmp230, bytetest_a9_a9);
          struct_Ll.cc = simd_or(r800_ffff_tmp251, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_ab_ab = simd_and(r800_ffff_tmp39, tmp65);
          r800_ffff_tmp252 = simd_and(r800_ffff_tmp230, bytetest_ab_ab);
          struct_Ll.cc = simd_or(r800_ffff_tmp252, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_ad_ad = simd_and(r800_ffff_tmp39, tmp19);
          r800_ffff_tmp253 = simd_and(r800_ffff_tmp230, bytetest_ad_ad);
          struct_Ll.cc = simd_or(r800_ffff_tmp253, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_af_af = simd_and(r800_ffff_tmp39, tmp169);
          r800_ffff_tmp254 = simd_and(r800_ffff_tmp230, bytetest_af_af);
          struct_Ll.cc = simd_or(r800_ffff_tmp254, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp35);
          r800_ffff_tmp255 = simd_and(r800_ffff_tmp230, bytetest_b1_b1);
          struct_Ll.cc = simd_or(r800_ffff_tmp255, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_b3_b3 = simd_and(bytetest_b0_bf, tmp67);
          r800_ffff_tmp256 = simd_and(r800_ffff_tmp230, bytetest_b3_b3);
          struct_Ll.cc = simd_or(r800_ffff_tmp256, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp91);
          r800_ffff_tmp257 = simd_and(r800_ffff_tmp230, bytetest_b5_b5);
          struct_Ll.cc = simd_or(r800_ffff_tmp257, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_b7_b7 = simd_and(bytetest_b0_bf, tmp104);
          r800_ffff_tmp258 = simd_and(r800_ffff_tmp230, bytetest_b7_b7);
          struct_Ll.cc = simd_or(r800_ffff_tmp258, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_b9_b9 = simd_and(bytetest_b0_bf, tmp119);
          r800_ffff_tmp259 = simd_and(r800_ffff_tmp230, bytetest_b9_b9);
          struct_Ll.cc = simd_or(r800_ffff_tmp259, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_bb_bb = simd_and(bytetest_b0_bf, tmp65);
          r800_ffff_tmp260 = simd_and(r800_ffff_tmp230, bytetest_bb_bb);
          struct_Ll.cc = simd_or(r800_ffff_tmp260, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_bd_bd = simd_and(bytetest_b0_bf, tmp19);
          r800_ffff_tmp261 = simd_and(r800_ffff_tmp230, bytetest_bd_bd);
          struct_Ll.cc = simd_or(r800_ffff_tmp261, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp169);
          r800_ffff_tmp262 = simd_and(r800_ffff_tmp230, bytetest_bf_bf);
          struct_Ll.cc = simd_or(r800_ffff_tmp262, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp67);
          bytetest_81_81 = simd_and(tmp69, tmp35);
          r800_ffff_tmp263 = simd_and(r800_ffff_tmp191, bytetest_b3);
          carryQ.cq[58] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp263, carryQ.get_carry_in(58), r800_ffff_tmp264));
          r800_ffff_tmp265 = simd_and(r800_ffff_tmp264, bytetest_81_81);
          struct_Ll.cc = simd_or(r800_ffff_tmp265, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp67);
          bytetest_83_83 = simd_and(tmp69, tmp67);
          r800_ffff_tmp266 = simd_and(r800_ffff_tmp264, bytetest_83_83);
          struct_Ll.cc = simd_or(r800_ffff_tmp266, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp67);
          bytetest_85_85 = simd_and(tmp69, tmp91);
          r800_ffff_tmp267 = simd_and(r800_ffff_tmp264, bytetest_85_85);
          struct_Ll.cc = simd_or(r800_ffff_tmp267, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp67);
          bytetest_87_87 = simd_and(tmp69, tmp104);
          r800_ffff_tmp268 = simd_and(r800_ffff_tmp264, bytetest_87_87);
          struct_Ll.cc = simd_or(r800_ffff_tmp268, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp67);
          bytetest_89_89 = simd_and(tmp69, tmp119);
          r800_ffff_tmp269 = simd_and(r800_ffff_tmp264, bytetest_89_89);
          struct_Ll.cc = simd_or(r800_ffff_tmp269, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp67);
          bytetest_8b_8b = simd_and(tmp69, tmp65);
          r800_ffff_tmp270 = simd_and(r800_ffff_tmp264, bytetest_8b_8b);
          struct_Ll.cc = simd_or(r800_ffff_tmp270, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp67);
          bytetest_8d_8d = simd_and(tmp69, tmp19);
          r800_ffff_tmp271 = simd_and(r800_ffff_tmp264, bytetest_8d_8d);
          struct_Ll.cc = simd_or(r800_ffff_tmp271, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp67);
          bytetest_8f_8f = simd_and(tmp69, tmp169);
          r800_ffff_tmp272 = simd_and(r800_ffff_tmp264, bytetest_8f_8f);
          struct_Ll.cc = simd_or(r800_ffff_tmp272, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp67);
          bytetest_91_91 = simd_and(tmp16, tmp35);
          r800_ffff_tmp273 = simd_and(r800_ffff_tmp264, bytetest_91_91);
          struct_Ll.cc = simd_or(r800_ffff_tmp273, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp67);
          bytetest_93_93 = simd_and(tmp16, tmp67);
          r800_ffff_tmp274 = simd_and(r800_ffff_tmp264, bytetest_93_93);
          struct_Ll.cc = simd_or(r800_ffff_tmp274, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp67);
          bytetest_95_95 = simd_and(tmp16, tmp91);
          r800_ffff_tmp275 = simd_and(r800_ffff_tmp264, bytetest_95_95);
          struct_Ll.cc = simd_or(r800_ffff_tmp275, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp67);
          bytetest_97_97 = simd_and(tmp16, tmp104);
          r800_ffff_tmp276 = simd_and(r800_ffff_tmp264, bytetest_97_97);
          struct_Ll.cc = simd_or(r800_ffff_tmp276, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp67);
          bytetest_99_99 = simd_and(tmp16, tmp119);
          r800_ffff_tmp277 = simd_and(r800_ffff_tmp264, bytetest_99_99);
          struct_Ll.cc = simd_or(r800_ffff_tmp277, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp67);
          bytetest_9b_9b = simd_and(tmp16, tmp65);
          r800_ffff_tmp278 = simd_and(r800_ffff_tmp264, bytetest_9b_9b);
          struct_Ll.cc = simd_or(r800_ffff_tmp278, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp67);
          bytetest_9d_9d = simd_and(tmp16, tmp19);
          r800_ffff_tmp279 = simd_and(r800_ffff_tmp264, bytetest_9d_9d);
          struct_Ll.cc = simd_or(r800_ffff_tmp279, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp67);
          bytetest_9f_9f = simd_and(tmp16, tmp169);
          r800_ffff_tmp280 = simd_and(r800_ffff_tmp264, bytetest_9f_9f);
          struct_Ll.cc = simd_or(r800_ffff_tmp280, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp67);
          bytetest_a1_a1 = simd_and(r800_ffff_tmp39, tmp35);
          r800_ffff_tmp281 = simd_and(r800_ffff_tmp264, bytetest_a1_a1);
          struct_Ll.cc = simd_or(r800_ffff_tmp281, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp67);
          bytetest_a3_a4 = simd_and(bytetest_a0_a7, r800_ffff_tmp226);
          r800_ffff_tmp282 = simd_and(r800_ffff_tmp264, bytetest_a3_a4);
          struct_Ll.cc = simd_or(r800_ffff_tmp282, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp67);
          bytetest_ac_ac = simd_and(r800_ffff_tmp39, tmp140);
          r800_ffff_tmp283 = simd_and(r800_ffff_tmp264, bytetest_ac_ac);
          struct_Ll.cc = simd_or(r800_ffff_tmp283, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp67);
          bytetest_ae_ae = simd_and(r800_ffff_tmp39, tmp159);
          r800_ffff_tmp284 = simd_and(r800_ffff_tmp264, bytetest_ae_ae);
          struct_Ll.cc = simd_or(r800_ffff_tmp284, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp67);
          bytetest_b3_b3 = simd_and(bytetest_b0_bf, tmp67);
          r800_ffff_tmp285 = simd_and(r800_ffff_tmp264, bytetest_b3_b3);
          struct_Ll.cc = simd_or(r800_ffff_tmp285, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b4 = simd_and(bytetest_b0_bf, tmp78);
          r800_ffff_tmp286 = simd_and(basis_bits.bit_2, tmp100);
          bytetest_80_a5 = simd_andc(tmp14, r800_ffff_tmp286);
          r800_ffff_tmp287 = simd_and(r800_ffff_tmp191, bytetest_b4);
          carryQ.cq[59] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp287, carryQ.get_carry_in(59), r800_ffff_tmp288));
          r800_ffff_tmp289 = simd_and(r800_ffff_tmp288, bytetest_80_a5);
          struct_Ll.cc = simd_or(r800_ffff_tmp289, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b4 = simd_and(bytetest_b0_bf, tmp78);
          bytetest_a7_a7 = simd_and(r800_ffff_tmp39, tmp104);
          r800_ffff_tmp290 = simd_and(r800_ffff_tmp288, bytetest_a7_a7);
          struct_Ll.cc = simd_or(r800_ffff_tmp290, struct_Ll.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, tmp53);
          bytetest_b4 = simd_and(bytetest_b0_bf, tmp78);
          bytetest_ad_ad = simd_and(r800_ffff_tmp39, tmp19);
          r800_ffff_tmp291 = simd_and(r800_ffff_tmp288, bytetest_ad_ad);
          struct_Ll.cc = simd_or(r800_ffff_tmp291, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_99 = simd_and(tmp16, tmp119);
          bytetest_81_81 = simd_and(tmp69, tmp35);
          r800_ffff_tmp292 = simd_and(tmp27, bytetest_ea);
          carryQ.cq[60] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp292, carryQ.get_carry_in(60), r800_ffff_tmp293));
          r800_ffff_tmp294 = simd_and(r800_ffff_tmp293, bytetest_99);
          carryQ.cq[61] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp294, carryQ.get_carry_in(61), r800_ffff_tmp295));
          r800_ffff_tmp296 = simd_and(r800_ffff_tmp295, bytetest_81_81);
          struct_Ll.cc = simd_or(r800_ffff_tmp296, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_99 = simd_and(tmp16, tmp119);
          bytetest_83_83 = simd_and(tmp69, tmp67);
          r800_ffff_tmp297 = simd_and(r800_ffff_tmp295, bytetest_83_83);
          struct_Ll.cc = simd_or(r800_ffff_tmp297, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_99 = simd_and(tmp16, tmp119);
          bytetest_85_85 = simd_and(tmp69, tmp91);
          r800_ffff_tmp298 = simd_and(r800_ffff_tmp295, bytetest_85_85);
          struct_Ll.cc = simd_or(r800_ffff_tmp298, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_99 = simd_and(tmp16, tmp119);
          bytetest_87_87 = simd_and(tmp69, tmp104);
          r800_ffff_tmp299 = simd_and(r800_ffff_tmp295, bytetest_87_87);
          struct_Ll.cc = simd_or(r800_ffff_tmp299, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_99 = simd_and(tmp16, tmp119);
          bytetest_89_89 = simd_and(tmp69, tmp119);
          r800_ffff_tmp300 = simd_and(r800_ffff_tmp295, bytetest_89_89);
          struct_Ll.cc = simd_or(r800_ffff_tmp300, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_99 = simd_and(tmp16, tmp119);
          bytetest_8b_8b = simd_and(tmp69, tmp65);
          r800_ffff_tmp301 = simd_and(r800_ffff_tmp295, bytetest_8b_8b);
          struct_Ll.cc = simd_or(r800_ffff_tmp301, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_99 = simd_and(tmp16, tmp119);
          bytetest_8d_8d = simd_and(tmp69, tmp19);
          r800_ffff_tmp302 = simd_and(r800_ffff_tmp295, bytetest_8d_8d);
          struct_Ll.cc = simd_or(r800_ffff_tmp302, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_99 = simd_and(tmp16, tmp119);
          bytetest_8f_8f = simd_and(tmp69, tmp169);
          r800_ffff_tmp303 = simd_and(r800_ffff_tmp295, bytetest_8f_8f);
          struct_Ll.cc = simd_or(r800_ffff_tmp303, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_99 = simd_and(tmp16, tmp119);
          bytetest_91_91 = simd_and(tmp16, tmp35);
          r800_ffff_tmp304 = simd_and(r800_ffff_tmp295, bytetest_91_91);
          struct_Ll.cc = simd_or(r800_ffff_tmp304, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_99 = simd_and(tmp16, tmp119);
          bytetest_93_93 = simd_and(tmp16, tmp67);
          r800_ffff_tmp305 = simd_and(r800_ffff_tmp295, bytetest_93_93);
          struct_Ll.cc = simd_or(r800_ffff_tmp305, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_99 = simd_and(tmp16, tmp119);
          bytetest_95_95 = simd_and(tmp16, tmp91);
          r800_ffff_tmp306 = simd_and(r800_ffff_tmp295, bytetest_95_95);
          struct_Ll.cc = simd_or(r800_ffff_tmp306, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_99 = simd_and(tmp16, tmp119);
          bytetest_97_97 = simd_and(tmp16, tmp104);
          r800_ffff_tmp307 = simd_and(r800_ffff_tmp295, bytetest_97_97);
          struct_Ll.cc = simd_or(r800_ffff_tmp307, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_99 = simd_and(tmp16, tmp119);
          bytetest_99_99 = simd_and(tmp16, tmp119);
          r800_ffff_tmp308 = simd_and(r800_ffff_tmp295, bytetest_99_99);
          struct_Ll.cc = simd_or(r800_ffff_tmp308, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_99 = simd_and(tmp16, tmp119);
          bytetest_9b_9b = simd_and(tmp16, tmp65);
          r800_ffff_tmp309 = simd_and(r800_ffff_tmp295, bytetest_9b_9b);
          struct_Ll.cc = simd_or(r800_ffff_tmp309, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_99 = simd_and(tmp16, tmp119);
          bytetest_9d_9d = simd_and(tmp16, tmp19);
          r800_ffff_tmp310 = simd_and(r800_ffff_tmp295, bytetest_9d_9d);
          struct_Ll.cc = simd_or(r800_ffff_tmp310, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_99 = simd_and(tmp16, tmp119);
          bytetest_9f_9f = simd_and(tmp16, tmp169);
          r800_ffff_tmp311 = simd_and(r800_ffff_tmp295, bytetest_9f_9f);
          struct_Ll.cc = simd_or(r800_ffff_tmp311, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_99 = simd_and(tmp16, tmp119);
          bytetest_a1_a1 = simd_and(r800_ffff_tmp39, tmp35);
          r800_ffff_tmp312 = simd_and(r800_ffff_tmp295, bytetest_a1_a1);
          struct_Ll.cc = simd_or(r800_ffff_tmp312, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_99 = simd_and(tmp16, tmp119);
          bytetest_a3_a3 = simd_and(r800_ffff_tmp39, tmp67);
          r800_ffff_tmp313 = simd_and(r800_ffff_tmp295, bytetest_a3_a3);
          struct_Ll.cc = simd_or(r800_ffff_tmp313, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_99 = simd_and(tmp16, tmp119);
          bytetest_a5_a5 = simd_and(r800_ffff_tmp39, tmp91);
          r800_ffff_tmp314 = simd_and(r800_ffff_tmp295, bytetest_a5_a5);
          struct_Ll.cc = simd_or(r800_ffff_tmp314, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_99 = simd_and(tmp16, tmp119);
          bytetest_a7_a7 = simd_and(r800_ffff_tmp39, tmp104);
          r800_ffff_tmp315 = simd_and(r800_ffff_tmp295, bytetest_a7_a7);
          struct_Ll.cc = simd_or(r800_ffff_tmp315, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_99 = simd_and(tmp16, tmp119);
          bytetest_a9_a9 = simd_and(r800_ffff_tmp39, tmp119);
          r800_ffff_tmp316 = simd_and(r800_ffff_tmp295, bytetest_a9_a9);
          struct_Ll.cc = simd_or(r800_ffff_tmp316, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_99 = simd_and(tmp16, tmp119);
          bytetest_ab_ab = simd_and(r800_ffff_tmp39, tmp65);
          r800_ffff_tmp317 = simd_and(r800_ffff_tmp295, bytetest_ab_ab);
          struct_Ll.cc = simd_or(r800_ffff_tmp317, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_99 = simd_and(tmp16, tmp119);
          bytetest_ad_ad = simd_and(r800_ffff_tmp39, tmp19);
          r800_ffff_tmp318 = simd_and(r800_ffff_tmp295, bytetest_ad_ad);
          struct_Ll.cc = simd_or(r800_ffff_tmp318, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9a = simd_and(tmp16, tmp125);
          bytetest_81_81 = simd_and(tmp69, tmp35);
          r800_ffff_tmp319 = simd_and(r800_ffff_tmp293, bytetest_9a);
          carryQ.cq[62] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp319, carryQ.get_carry_in(62), r800_ffff_tmp320));
          r800_ffff_tmp321 = simd_and(r800_ffff_tmp320, bytetest_81_81);
          struct_Ll.cc = simd_or(r800_ffff_tmp321, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9a = simd_and(tmp16, tmp125);
          bytetest_83_83 = simd_and(tmp69, tmp67);
          r800_ffff_tmp322 = simd_and(r800_ffff_tmp320, bytetest_83_83);
          struct_Ll.cc = simd_or(r800_ffff_tmp322, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9a = simd_and(tmp16, tmp125);
          bytetest_85_85 = simd_and(tmp69, tmp91);
          r800_ffff_tmp323 = simd_and(r800_ffff_tmp320, bytetest_85_85);
          struct_Ll.cc = simd_or(r800_ffff_tmp323, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9a = simd_and(tmp16, tmp125);
          bytetest_87_87 = simd_and(tmp69, tmp104);
          r800_ffff_tmp324 = simd_and(r800_ffff_tmp320, bytetest_87_87);
          struct_Ll.cc = simd_or(r800_ffff_tmp324, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9a = simd_and(tmp16, tmp125);
          bytetest_89_89 = simd_and(tmp69, tmp119);
          r800_ffff_tmp325 = simd_and(r800_ffff_tmp320, bytetest_89_89);
          struct_Ll.cc = simd_or(r800_ffff_tmp325, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9a = simd_and(tmp16, tmp125);
          bytetest_8b_8b = simd_and(tmp69, tmp65);
          r800_ffff_tmp326 = simd_and(r800_ffff_tmp320, bytetest_8b_8b);
          struct_Ll.cc = simd_or(r800_ffff_tmp326, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9a = simd_and(tmp16, tmp125);
          bytetest_8d_8d = simd_and(tmp69, tmp19);
          r800_ffff_tmp327 = simd_and(r800_ffff_tmp320, bytetest_8d_8d);
          struct_Ll.cc = simd_or(r800_ffff_tmp327, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9a = simd_and(tmp16, tmp125);
          bytetest_8f_8f = simd_and(tmp69, tmp169);
          r800_ffff_tmp328 = simd_and(r800_ffff_tmp320, bytetest_8f_8f);
          struct_Ll.cc = simd_or(r800_ffff_tmp328, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9a = simd_and(tmp16, tmp125);
          bytetest_91_91 = simd_and(tmp16, tmp35);
          r800_ffff_tmp329 = simd_and(r800_ffff_tmp320, bytetest_91_91);
          struct_Ll.cc = simd_or(r800_ffff_tmp329, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9a = simd_and(tmp16, tmp125);
          bytetest_93_93 = simd_and(tmp16, tmp67);
          r800_ffff_tmp330 = simd_and(r800_ffff_tmp320, bytetest_93_93);
          struct_Ll.cc = simd_or(r800_ffff_tmp330, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9a = simd_and(tmp16, tmp125);
          bytetest_95_95 = simd_and(tmp16, tmp91);
          r800_ffff_tmp331 = simd_and(r800_ffff_tmp320, bytetest_95_95);
          struct_Ll.cc = simd_or(r800_ffff_tmp331, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9a = simd_and(tmp16, tmp125);
          bytetest_97_97 = simd_and(tmp16, tmp104);
          r800_ffff_tmp332 = simd_and(r800_ffff_tmp320, bytetest_97_97);
          struct_Ll.cc = simd_or(r800_ffff_tmp332, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9c = simd_and(tmp16, tmp140);
          bytetest_a3_a3 = simd_and(r800_ffff_tmp39, tmp67);
          r800_ffff_tmp333 = simd_and(r800_ffff_tmp293, bytetest_9c);
          carryQ.cq[63] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp333, carryQ.get_carry_in(63), r800_ffff_tmp334));
          r800_ffff_tmp335 = simd_and(r800_ffff_tmp334, bytetest_a3_a3);
          struct_Ll.cc = simd_or(r800_ffff_tmp335, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9c = simd_and(tmp16, tmp140);
          bytetest_a5_a5 = simd_and(r800_ffff_tmp39, tmp91);
          r800_ffff_tmp336 = simd_and(r800_ffff_tmp334, bytetest_a5_a5);
          struct_Ll.cc = simd_or(r800_ffff_tmp336, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9c = simd_and(tmp16, tmp140);
          bytetest_a7_a7 = simd_and(r800_ffff_tmp39, tmp104);
          r800_ffff_tmp337 = simd_and(r800_ffff_tmp334, bytetest_a7_a7);
          struct_Ll.cc = simd_or(r800_ffff_tmp337, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9c = simd_and(tmp16, tmp140);
          bytetest_a9_a9 = simd_and(r800_ffff_tmp39, tmp119);
          r800_ffff_tmp338 = simd_and(r800_ffff_tmp334, bytetest_a9_a9);
          struct_Ll.cc = simd_or(r800_ffff_tmp338, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9c = simd_and(tmp16, tmp140);
          bytetest_ab_ab = simd_and(r800_ffff_tmp39, tmp65);
          r800_ffff_tmp339 = simd_and(r800_ffff_tmp334, bytetest_ab_ab);
          struct_Ll.cc = simd_or(r800_ffff_tmp339, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9c = simd_and(tmp16, tmp140);
          bytetest_ad_ad = simd_and(r800_ffff_tmp39, tmp19);
          r800_ffff_tmp340 = simd_and(r800_ffff_tmp334, bytetest_ad_ad);
          struct_Ll.cc = simd_or(r800_ffff_tmp340, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9c = simd_and(tmp16, tmp140);
          r800_ffff_tmp341 = simd_not(tmp55);
          r800_ffff_tmp342 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp341), simd_andc(tmp169, basis_bits.bit_3));
          bytetest_af_b1 = simd_and(tmp82, r800_ffff_tmp342);
          r800_ffff_tmp343 = simd_and(r800_ffff_tmp334, bytetest_af_b1);
          struct_Ll.cc = simd_or(r800_ffff_tmp343, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9c = simd_and(tmp16, tmp140);
          bytetest_b3_b3 = simd_and(bytetest_b0_bf, tmp67);
          r800_ffff_tmp344 = simd_and(r800_ffff_tmp334, bytetest_b3_b3);
          struct_Ll.cc = simd_or(r800_ffff_tmp344, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9c = simd_and(tmp16, tmp140);
          bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp91);
          r800_ffff_tmp345 = simd_and(r800_ffff_tmp334, bytetest_b5_b5);
          struct_Ll.cc = simd_or(r800_ffff_tmp345, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9c = simd_and(tmp16, tmp140);
          bytetest_b7_b7 = simd_and(bytetest_b0_bf, tmp104);
          r800_ffff_tmp346 = simd_and(r800_ffff_tmp334, bytetest_b7_b7);
          struct_Ll.cc = simd_or(r800_ffff_tmp346, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9c = simd_and(tmp16, tmp140);
          bytetest_b9_b9 = simd_and(bytetest_b0_bf, tmp119);
          r800_ffff_tmp347 = simd_and(r800_ffff_tmp334, bytetest_b9_b9);
          struct_Ll.cc = simd_or(r800_ffff_tmp347, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9c = simd_and(tmp16, tmp140);
          bytetest_bb_bb = simd_and(bytetest_b0_bf, tmp65);
          r800_ffff_tmp348 = simd_and(r800_ffff_tmp334, bytetest_bb_bb);
          struct_Ll.cc = simd_or(r800_ffff_tmp348, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9c = simd_and(tmp16, tmp140);
          bytetest_bd_bd = simd_and(bytetest_b0_bf, tmp19);
          r800_ffff_tmp349 = simd_and(r800_ffff_tmp334, bytetest_bd_bd);
          struct_Ll.cc = simd_or(r800_ffff_tmp349, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9c = simd_and(tmp16, tmp140);
          bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp169);
          r800_ffff_tmp350 = simd_and(r800_ffff_tmp334, bytetest_bf_bf);
          struct_Ll.cc = simd_or(r800_ffff_tmp350, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_81_81 = simd_and(tmp69, tmp35);
          r800_ffff_tmp351 = simd_and(r800_ffff_tmp293, bytetest_9d);
          carryQ.cq[64] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp351, carryQ.get_carry_in(64), r800_ffff_tmp352));
          r800_ffff_tmp353 = simd_and(r800_ffff_tmp352, bytetest_81_81);
          struct_Ll.cc = simd_or(r800_ffff_tmp353, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_83_83 = simd_and(tmp69, tmp67);
          r800_ffff_tmp354 = simd_and(r800_ffff_tmp352, bytetest_83_83);
          struct_Ll.cc = simd_or(r800_ffff_tmp354, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_85_85 = simd_and(tmp69, tmp91);
          r800_ffff_tmp355 = simd_and(r800_ffff_tmp352, bytetest_85_85);
          struct_Ll.cc = simd_or(r800_ffff_tmp355, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_87_87 = simd_and(tmp69, tmp104);
          r800_ffff_tmp356 = simd_and(r800_ffff_tmp352, bytetest_87_87);
          struct_Ll.cc = simd_or(r800_ffff_tmp356, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_89_89 = simd_and(tmp69, tmp119);
          r800_ffff_tmp357 = simd_and(r800_ffff_tmp352, bytetest_89_89);
          struct_Ll.cc = simd_or(r800_ffff_tmp357, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_8b_8b = simd_and(tmp69, tmp65);
          r800_ffff_tmp358 = simd_and(r800_ffff_tmp352, bytetest_8b_8b);
          struct_Ll.cc = simd_or(r800_ffff_tmp358, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_8d_8d = simd_and(tmp69, tmp19);
          r800_ffff_tmp359 = simd_and(r800_ffff_tmp352, bytetest_8d_8d);
          struct_Ll.cc = simd_or(r800_ffff_tmp359, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_8f_8f = simd_and(tmp69, tmp169);
          r800_ffff_tmp360 = simd_and(r800_ffff_tmp352, bytetest_8f_8f);
          struct_Ll.cc = simd_or(r800_ffff_tmp360, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_91_91 = simd_and(tmp16, tmp35);
          r800_ffff_tmp361 = simd_and(r800_ffff_tmp352, bytetest_91_91);
          struct_Ll.cc = simd_or(r800_ffff_tmp361, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_93_93 = simd_and(tmp16, tmp67);
          r800_ffff_tmp362 = simd_and(r800_ffff_tmp352, bytetest_93_93);
          struct_Ll.cc = simd_or(r800_ffff_tmp362, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_95_95 = simd_and(tmp16, tmp91);
          r800_ffff_tmp363 = simd_and(r800_ffff_tmp352, bytetest_95_95);
          struct_Ll.cc = simd_or(r800_ffff_tmp363, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_97_97 = simd_and(tmp16, tmp104);
          r800_ffff_tmp364 = simd_and(r800_ffff_tmp352, bytetest_97_97);
          struct_Ll.cc = simd_or(r800_ffff_tmp364, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_99_99 = simd_and(tmp16, tmp119);
          r800_ffff_tmp365 = simd_and(r800_ffff_tmp352, bytetest_99_99);
          struct_Ll.cc = simd_or(r800_ffff_tmp365, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_9b_9b = simd_and(tmp16, tmp65);
          r800_ffff_tmp366 = simd_and(r800_ffff_tmp352, bytetest_9b_9b);
          struct_Ll.cc = simd_or(r800_ffff_tmp366, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_9d_9d = simd_and(tmp16, tmp19);
          r800_ffff_tmp367 = simd_and(r800_ffff_tmp352, bytetest_9d_9d);
          struct_Ll.cc = simd_or(r800_ffff_tmp367, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_9f_9f = simd_and(tmp16, tmp169);
          r800_ffff_tmp368 = simd_and(r800_ffff_tmp352, bytetest_9f_9f);
          struct_Ll.cc = simd_or(r800_ffff_tmp368, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_a1_a1 = simd_and(r800_ffff_tmp39, tmp35);
          r800_ffff_tmp369 = simd_and(r800_ffff_tmp352, bytetest_a1_a1);
          struct_Ll.cc = simd_or(r800_ffff_tmp369, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_a3_a3 = simd_and(r800_ffff_tmp39, tmp67);
          r800_ffff_tmp370 = simd_and(r800_ffff_tmp352, bytetest_a3_a3);
          struct_Ll.cc = simd_or(r800_ffff_tmp370, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_a5_a5 = simd_and(r800_ffff_tmp39, tmp91);
          r800_ffff_tmp371 = simd_and(r800_ffff_tmp352, bytetest_a5_a5);
          struct_Ll.cc = simd_or(r800_ffff_tmp371, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_a7_a7 = simd_and(r800_ffff_tmp39, tmp104);
          r800_ffff_tmp372 = simd_and(r800_ffff_tmp352, bytetest_a7_a7);
          struct_Ll.cc = simd_or(r800_ffff_tmp372, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_a9_a9 = simd_and(r800_ffff_tmp39, tmp119);
          r800_ffff_tmp373 = simd_and(r800_ffff_tmp352, bytetest_a9_a9);
          struct_Ll.cc = simd_or(r800_ffff_tmp373, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_ab_ab = simd_and(r800_ffff_tmp39, tmp65);
          r800_ffff_tmp374 = simd_and(r800_ffff_tmp352, bytetest_ab_ab);
          struct_Ll.cc = simd_or(r800_ffff_tmp374, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_ad_ad = simd_and(r800_ffff_tmp39, tmp19);
          r800_ffff_tmp375 = simd_and(r800_ffff_tmp352, bytetest_ad_ad);
          struct_Ll.cc = simd_or(r800_ffff_tmp375, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_af_af = simd_and(r800_ffff_tmp39, tmp169);
          r800_ffff_tmp376 = simd_and(r800_ffff_tmp352, bytetest_af_af);
          struct_Ll.cc = simd_or(r800_ffff_tmp376, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9d = simd_and(tmp16, tmp19);
          r800_ffff_tmp377 = simd_not(tmp160);
          r800_ffff_tmp378 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp377), simd_andc(tmp160, basis_bits.bit_4));
          bytetest_b1_b8 = simd_and(bytetest_b0_bf, r800_ffff_tmp378);
          r800_ffff_tmp379 = simd_and(r800_ffff_tmp352, bytetest_b1_b8);
          struct_Ll.cc = simd_or(r800_ffff_tmp379, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_ba_ba = simd_and(bytetest_b0_bf, tmp125);
          r800_ffff_tmp380 = simd_and(r800_ffff_tmp352, bytetest_ba_ba);
          struct_Ll.cc = simd_or(r800_ffff_tmp380, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_bc_bc = simd_and(bytetest_b0_bf, tmp140);
          r800_ffff_tmp381 = simd_and(r800_ffff_tmp352, bytetest_bc_bc);
          struct_Ll.cc = simd_or(r800_ffff_tmp381, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp169);
          r800_ffff_tmp382 = simd_and(r800_ffff_tmp352, bytetest_bf_bf);
          struct_Ll.cc = simd_or(r800_ffff_tmp382, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9e = simd_and(tmp16, tmp159);
          bytetest_81_81 = simd_and(tmp69, tmp35);
          r800_ffff_tmp383 = simd_and(r800_ffff_tmp293, bytetest_9e);
          carryQ.cq[65] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp383, carryQ.get_carry_in(65), r800_ffff_tmp384));
          r800_ffff_tmp385 = simd_and(r800_ffff_tmp384, bytetest_81_81);
          struct_Ll.cc = simd_or(r800_ffff_tmp385, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9e = simd_and(tmp16, tmp159);
          bytetest_83_83 = simd_and(tmp69, tmp67);
          r800_ffff_tmp386 = simd_and(r800_ffff_tmp384, bytetest_83_83);
          struct_Ll.cc = simd_or(r800_ffff_tmp386, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9e = simd_and(tmp16, tmp159);
          bytetest_85_85 = simd_and(tmp69, tmp91);
          r800_ffff_tmp387 = simd_and(r800_ffff_tmp384, bytetest_85_85);
          struct_Ll.cc = simd_or(r800_ffff_tmp387, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9e = simd_and(tmp16, tmp159);
          bytetest_87_87 = simd_and(tmp69, tmp104);
          r800_ffff_tmp388 = simd_and(r800_ffff_tmp384, bytetest_87_87);
          struct_Ll.cc = simd_or(r800_ffff_tmp388, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9e = simd_and(tmp16, tmp159);
          bytetest_8c_8c = simd_and(tmp69, tmp140);
          r800_ffff_tmp389 = simd_and(r800_ffff_tmp384, bytetest_8c_8c);
          struct_Ll.cc = simd_or(r800_ffff_tmp389, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9e = simd_and(tmp16, tmp159);
          bytetest_8e_8e = simd_and(tmp69, tmp159);
          r800_ffff_tmp390 = simd_and(r800_ffff_tmp384, bytetest_8e_8e);
          struct_Ll.cc = simd_or(r800_ffff_tmp390, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9e = simd_and(tmp16, tmp159);
          bytetest_91_91 = simd_and(tmp16, tmp35);
          r800_ffff_tmp391 = simd_and(r800_ffff_tmp384, bytetest_91_91);
          struct_Ll.cc = simd_or(r800_ffff_tmp391, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9e = simd_and(tmp16, tmp159);
          bytetest_93_93 = simd_and(tmp16, tmp67);
          r800_ffff_tmp392 = simd_and(r800_ffff_tmp384, bytetest_93_93);
          struct_Ll.cc = simd_or(r800_ffff_tmp392, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9e = simd_and(tmp16, tmp159);
          bytetest_a1_a1 = simd_and(r800_ffff_tmp39, tmp35);
          r800_ffff_tmp393 = simd_and(r800_ffff_tmp384, bytetest_a1_a1);
          struct_Ll.cc = simd_or(r800_ffff_tmp393, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9e = simd_and(tmp16, tmp159);
          bytetest_a3_a3 = simd_and(r800_ffff_tmp39, tmp67);
          r800_ffff_tmp394 = simd_and(r800_ffff_tmp384, bytetest_a3_a3);
          struct_Ll.cc = simd_or(r800_ffff_tmp394, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9e = simd_and(tmp16, tmp159);
          bytetest_a5_a5 = simd_and(r800_ffff_tmp39, tmp91);
          r800_ffff_tmp395 = simd_and(r800_ffff_tmp384, bytetest_a5_a5);
          struct_Ll.cc = simd_or(r800_ffff_tmp395, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9e = simd_and(tmp16, tmp159);
          bytetest_a7_a7 = simd_and(r800_ffff_tmp39, tmp104);
          r800_ffff_tmp396 = simd_and(r800_ffff_tmp384, bytetest_a7_a7);
          struct_Ll.cc = simd_or(r800_ffff_tmp396, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9e = simd_and(tmp16, tmp159);
          bytetest_a9_a9 = simd_and(r800_ffff_tmp39, tmp119);
          r800_ffff_tmp397 = simd_and(r800_ffff_tmp384, bytetest_a9_a9);
          struct_Ll.cc = simd_or(r800_ffff_tmp397, struct_Ll.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, tmp125);
          bytetest_9f = simd_and(tmp16, tmp169);
          bytetest_ba_ba = simd_and(bytetest_b0_bf, tmp125);
          r800_ffff_tmp398 = simd_and(r800_ffff_tmp293, bytetest_9f);
          carryQ.cq[66] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp398, carryQ.get_carry_in(66), r800_ffff_tmp399));
          r800_ffff_tmp400 = simd_and(r800_ffff_tmp399, bytetest_ba_ba);
          struct_Ll.cc = simd_or(r800_ffff_tmp400, struct_Ll.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, tmp169);
          bytetest_ac = simd_and(r800_ffff_tmp39, tmp140);
          bytetest_80_86 = simd_andc(bytetest_80_87, tmp150);
          r800_ffff_tmp401 = simd_and(tmp27, bytetest_ef);
          carryQ.cq[67] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp401, carryQ.get_carry_in(67), r800_ffff_tmp402));
          r800_ffff_tmp403 = simd_and(r800_ffff_tmp402, bytetest_ac);
          carryQ.cq[68] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp403, carryQ.get_carry_in(68), r800_ffff_tmp404));
          r800_ffff_tmp405 = simd_and(r800_ffff_tmp404, bytetest_80_86);
          struct_Ll.cc = simd_or(r800_ffff_tmp405, struct_Ll.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, tmp169);
          bytetest_ac = simd_and(r800_ffff_tmp39, tmp140);
          bytetest_93_97 = simd_and(bytetest_90_97, tmp4);
          r800_ffff_tmp406 = simd_and(r800_ffff_tmp404, bytetest_93_97);
          struct_Ll.cc = simd_or(r800_ffff_tmp406, struct_Ll.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, tmp169);
          bytetest_bd = simd_and(bytetest_b0_bf, tmp19);
          bytetest_81_9a = simd_and(tmp36, tmp10);
          r800_ffff_tmp407 = simd_and(r800_ffff_tmp402, bytetest_bd);
          carryQ.cq[69] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp407, carryQ.get_carry_in(69), r800_ffff_tmp408));
          r800_ffff_tmp409 = simd_and(r800_ffff_tmp408, bytetest_81_9a);
          struct_Ll.cc = simd_or(r800_ffff_tmp409, struct_Ll.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(39, 31);
        }
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_90 = simd_andc(tmp16, tmp9);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp186 = simd_and(tmp29, bytetest_90);
        carryQ.cq[70] = carryout2carry(pablo_blk_Advance(tmp186, carryQ.get_carry_in(70), tmp187));
        tmp188 = simd_and(tmp187, bytetest_80_bf);
        if ((bitblock::any(tmp188) || carryQ.CarryTest(71, 3))) {
          bytetest_f0 = simd_andc(tmp13, tmp9);
          bytetest_90 = simd_andc(tmp16, tmp9);
          bytetest_91 = simd_and(tmp16, tmp35);
          bytetest_80_8f = simd_andc(tmp14, tmp68);
          r10000_10fff_tmp1 = simd_and(tmp29, bytetest_90);
          carryQ.cq[71] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp1, carryQ.get_carry_in(71), r10000_10fff_tmp2));
          r10000_10fff_tmp3 = simd_and(r10000_10fff_tmp2, bytetest_91);
          carryQ.cq[72] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp3, carryQ.get_carry_in(72), r10000_10fff_tmp4));
          r10000_10fff_tmp5 = simd_and(r10000_10fff_tmp4, bytetest_80_8f);
          bytetest_90 = simd_andc(tmp16, tmp9);
          bytetest_a8_bf = simd_and(bytetest_a0_bf, tmp45);
          r10000_10fff_tmp6 = simd_and(r10000_10fff_tmp2, bytetest_90);
          carryQ.cq[73] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp6, carryQ.get_carry_in(73), r10000_10fff_tmp7));
          r10000_10fff_tmp8 = simd_and(r10000_10fff_tmp7, bytetest_a8_bf);
          r10000_10fff_tmp9 = simd_or(r10000_10fff_tmp8, r10000_10fff_tmp5);
          struct_Ll.cc = simd_or(r10000_10fff_tmp9, struct_Ll.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(71, 3);
        }
  }
  CarryArray<74, 0> carryQ;
  };

  struct Lm {
  Lm() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Lm & struct_Lm) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_f0, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, tmp12, bytetest_96, tmp13, tmp14, tmp15, bytetest_be;
		BitBlock tmp16, tmp17, tmp18, bytetest_93_9f, tmp19, tmp20, tmp21, tmp22;
		BitBlock tmp23, tmp24, tmp25, tmp26, tmp27, tmp28, tmp29, tmp30;
		BitBlock bytetest_c2_df, r80_7ff_tmp1, r80_7ff_tmp2, r80_7ff_tmp3;
		BitBlock r80_7ff_tmp4, bytetest_cb, r80_7ff_tmp5, r80_7ff_tmp6, bytetest_80_81;
		BitBlock r80_7ff_tmp7, r80_7ff_tmp8, r80_7ff_tmp9, r80_7ff_tmp10, bytetest_ca;
		BitBlock bytetest_b0_bf, r80_7ff_tmp11, r80_7ff_tmp12, r80_7ff_tmp13;
		BitBlock r80_7ff_tmp14, r80_7ff_tmp15, r80_7ff_tmp16, r80_7ff_tmp17;
		BitBlock r80_7ff_tmp18, r80_7ff_tmp19, bytetest_86_91, r80_7ff_tmp20;
		BitBlock r80_7ff_tmp21, r80_7ff_tmp22, r80_7ff_tmp23, r80_7ff_tmp24;
		BitBlock bytetest_a0_a4, r80_7ff_tmp25, r80_7ff_tmp26, bytetest_ac_ac;
		BitBlock r80_7ff_tmp27, bytetest_ae_ae, r80_7ff_tmp28, r80_7ff_tmp29;
		BitBlock r80_7ff_tmp30, bytetest_cd, r80_7ff_tmp31, bytetest_b4_b4;
		BitBlock r80_7ff_tmp32, r80_7ff_tmp33, r80_7ff_tmp34, bytetest_ba_ba;
		BitBlock r80_7ff_tmp35, r80_7ff_tmp36, r80_7ff_tmp37, bytetest_d5;
		BitBlock r80_7ff_tmp38, bytetest_99_99, r80_7ff_tmp39, r80_7ff_tmp40;
		BitBlock r80_7ff_tmp41, bytetest_d9, bytetest_80_80, r80_7ff_tmp42;
		BitBlock r80_7ff_tmp43, r80_7ff_tmp44, bytetest_db, r80_7ff_tmp45;
		BitBlock r80_7ff_tmp46, r80_7ff_tmp47, bytetest_a5_a6, r80_7ff_tmp48;
		BitBlock r80_7ff_tmp49, r80_7ff_tmp50, r80_7ff_tmp51, bytetest_df;
		BitBlock r80_7ff_tmp52, bytetest_b4_b5, r80_7ff_tmp53, r80_7ff_tmp54;
		BitBlock r80_7ff_tmp55, r80_7ff_tmp56, tmp31, tmp32, tmp33, tmp34;
		BitBlock bytetest_e1_ef, bytetest_e0, bytetest_a0_bf, tmp35, tmp36, tmp37;
		BitBlock tmp38, r800_ffff_tmp1, r800_ffff_tmp2, r800_ffff_tmp3, bytetest_a0;
		BitBlock r800_ffff_tmp4, r800_ffff_tmp5, bytetest_9a_9a, r800_ffff_tmp6;
		BitBlock r800_ffff_tmp7, r800_ffff_tmp8, r800_ffff_tmp9, r800_ffff_tmp10;
		BitBlock r800_ffff_tmp11, bytetest_a4_a4, r800_ffff_tmp12, r800_ffff_tmp13;
		BitBlock bytetest_a8_a8, r800_ffff_tmp14, r800_ffff_tmp15, r800_ffff_tmp16;
		BitBlock bytetest_a5, r800_ffff_tmp17, bytetest_b1_b1, r800_ffff_tmp18;
		BitBlock r800_ffff_tmp19, r800_ffff_tmp20, r800_ffff_tmp21, bytetest_b9;
		BitBlock r800_ffff_tmp22, r800_ffff_tmp23, bytetest_86_86, r800_ffff_tmp24;
		BitBlock r800_ffff_tmp25, r800_ffff_tmp26, r800_ffff_tmp27, bytetest_bb;
		BitBlock r800_ffff_tmp28, r800_ffff_tmp29, r800_ffff_tmp30, bytetest_e1;
		BitBlock r800_ffff_tmp31, bytetest_83, r800_ffff_tmp32, bytetest_bc_bc;
		BitBlock r800_ffff_tmp33, r800_ffff_tmp34, r800_ffff_tmp35, r800_ffff_tmp36;
		BitBlock r800_ffff_tmp37, r800_ffff_tmp38, bytetest_9f, r800_ffff_tmp39;
		BitBlock bytetest_97_97, r800_ffff_tmp40, r800_ffff_tmp41, r800_ffff_tmp42;
		BitBlock bytetest_a1, bytetest_83_83, r800_ffff_tmp43, r800_ffff_tmp44;
		BitBlock r800_ffff_tmp45, bytetest_aa, bytetest_a7_a7, r800_ffff_tmp46;
		BitBlock r800_ffff_tmp47, r800_ffff_tmp48, bytetest_b1, r800_ffff_tmp49;
		BitBlock r800_ffff_tmp50, bytetest_b8_bd, r800_ffff_tmp51, r800_ffff_tmp52;
		BitBlock r800_ffff_tmp53, bytetest_b5, r800_ffff_tmp54, r800_ffff_tmp55;
		BitBlock r800_ffff_tmp56, bytetest_80_aa, r800_ffff_tmp57, r800_ffff_tmp58;
		BitBlock r800_ffff_tmp59, bytetest_b4, r800_ffff_tmp60, r800_ffff_tmp61;
		BitBlock bytetest_ac_bf, r800_ffff_tmp62, r800_ffff_tmp63, r800_ffff_tmp64;
		BitBlock r800_ffff_tmp65, bytetest_b8_b8, r800_ffff_tmp66, bytetest_b6;
		BitBlock r800_ffff_tmp67, r800_ffff_tmp68, bytetest_9b_bf, r800_ffff_tmp69;
		BitBlock r800_ffff_tmp70, r800_ffff_tmp71, r800_ffff_tmp72, bytetest_e2;
		BitBlock bytetest_81, r800_ffff_tmp73, r800_ffff_tmp74, r800_ffff_tmp75;
		BitBlock r800_ffff_tmp76, r800_ffff_tmp77, bytetest_bf_bf, r800_ffff_tmp78;
		BitBlock bytetest_82, r800_ffff_tmp79, r800_ffff_tmp80, bytetest_90_9c;
		BitBlock r800_ffff_tmp81, r800_ffff_tmp82, r800_ffff_tmp83, r800_ffff_tmp84;
		BitBlock bytetest_bc_bd, r800_ffff_tmp85, r800_ffff_tmp86, r800_ffff_tmp87;
		BitBlock bytetest_af_af, r800_ffff_tmp88, r800_ffff_tmp89, r800_ffff_tmp90;
		BitBlock bytetest_b8, r800_ffff_tmp91, r800_ffff_tmp92, r800_ffff_tmp93;
		BitBlock bytetest_e3, bytetest_80, bytetest_85_85, r800_ffff_tmp94;
		BitBlock r800_ffff_tmp95, r800_ffff_tmp96, r800_ffff_tmp97, r800_ffff_tmp98;
		BitBlock r800_ffff_tmp99, r800_ffff_tmp100, r800_ffff_tmp101, bytetest_b1_b5;
		BitBlock r800_ffff_tmp102, bytetest_bb_bb, r800_ffff_tmp103, r800_ffff_tmp104;
		BitBlock r800_ffff_tmp105, r800_ffff_tmp106, bytetest_9d_9e, r800_ffff_tmp107;
		BitBlock r800_ffff_tmp108, r800_ffff_tmp109, r800_ffff_tmp110, bytetest_bc_be;
		BitBlock r800_ffff_tmp111, r800_ffff_tmp112, r800_ffff_tmp113, bytetest_ea;
		BitBlock bytetest_95_95, r800_ffff_tmp114, r800_ffff_tmp115, r800_ffff_tmp116;
		BitBlock r800_ffff_tmp117, r800_ffff_tmp118, bytetest_93, r800_ffff_tmp119;
		BitBlock r800_ffff_tmp120, r800_ffff_tmp121, bytetest_98, bytetest_8c_8c;
		BitBlock r800_ffff_tmp122, r800_ffff_tmp123, r800_ffff_tmp124, bytetest_99;
		BitBlock r800_ffff_tmp125, r800_ffff_tmp126, r800_ffff_tmp127, bytetest_9c;
		BitBlock r800_ffff_tmp128, r800_ffff_tmp129, bytetest_97_9f, r800_ffff_tmp130;
		BitBlock r800_ffff_tmp131, r800_ffff_tmp132, r800_ffff_tmp133, bytetest_9d;
		BitBlock bytetest_b0_b0, r800_ffff_tmp134, r800_ffff_tmp135, r800_ffff_tmp136;
		BitBlock bytetest_9e, bytetest_88_88, r800_ffff_tmp137, r800_ffff_tmp138;
		BitBlock r800_ffff_tmp139, r800_ffff_tmp140, bytetest_b8_b9, r800_ffff_tmp141;
		BitBlock r800_ffff_tmp142, r800_ffff_tmp143, bytetest_a7, bytetest_8f_8f;
		BitBlock r800_ffff_tmp144, r800_ffff_tmp145, r800_ffff_tmp146, bytetest_a9;
		BitBlock r800_ffff_tmp147, r800_ffff_tmp148, r800_ffff_tmp149, bytetest_ab;
		BitBlock bytetest_9d_9d, r800_ffff_tmp150, r800_ffff_tmp151, r800_ffff_tmp152;
		BitBlock r800_ffff_tmp153, r800_ffff_tmp154, bytetest_b3_b4, r800_ffff_tmp155;
		BitBlock bytetest_ef, bytetest_bd, r800_ffff_tmp156, r800_ffff_tmp157;
		BitBlock r800_ffff_tmp158, r800_ffff_tmp159, r800_ffff_tmp160;
		BitBlock r800_ffff_tmp161, bytetest_9e_9f, r800_ffff_tmp162, r800_ffff_tmp163;
		BitBlock r800_ffff_tmp164;




        struct_Lm.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_and(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_or(tmp4, tmp5);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp11 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp12 = simd_and(tmp10, tmp11);
        bytetest_96 = simd_and(tmp9, tmp12);
        tmp13 = simd_and(tmp7, tmp2);
        tmp14 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp15 = simd_and(tmp14, tmp11);
        bytetest_be = simd_and(tmp13, tmp15);
        tmp16 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp17 = simd_or(basis_bits.bit_5, tmp16);
        tmp18 = simd_or(basis_bits.bit_4, tmp17);
        bytetest_93_9f = simd_and(tmp9, tmp18);
        tmp19 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp19, carryQ.get_carry_in(0), tmp20));
        tmp21 = simd_and(tmp20, bytetest_f0);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp21, carryQ.get_carry_in(1), tmp22));
        tmp23 = simd_and(tmp22, bytetest_96);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp23, carryQ.get_carry_in(2), tmp24));
        tmp25 = simd_and(tmp24, bytetest_be);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp25, carryQ.get_carry_in(3), tmp26));
        tmp27 = simd_and(tmp26, bytetest_93_9f);
        struct_Lm.cc = simd_or(tmp27, struct_Lm.cc);
        tmp28 = simd_andc(tmp1, basis_bits.bit_2);
        tmp29 = simd_or(tmp4, basis_bits.bit_6);
        tmp30 = simd_or(basis_bits.bit_3, tmp29);
        bytetest_c2_df = simd_and(tmp28, tmp30);
        if ((bitblock::any(bytetest_c2_df) || carryQ.CarryTest(4, 7))) {
          r80_7ff_tmp1 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
          r80_7ff_tmp2 = simd_andc(tmp1, r80_7ff_tmp1);
          r80_7ff_tmp3 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
          r80_7ff_tmp4 = simd_and(r80_7ff_tmp3, tmp16);
          bytetest_cb = simd_and(r80_7ff_tmp2, r80_7ff_tmp4);
          r80_7ff_tmp5 = simd_andc(tmp7, r80_7ff_tmp1);
          r80_7ff_tmp6 = simd_or(tmp4, basis_bits.bit_6);
          bytetest_80_81 = simd_andc(r80_7ff_tmp5, r80_7ff_tmp6);
          r80_7ff_tmp7 = simd_and(tmp20, bytetest_cb);
          carryQ.cq[4] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp7, carryQ.get_carry_in(4), r80_7ff_tmp8));
          r80_7ff_tmp9 = simd_and(r80_7ff_tmp8, bytetest_80_81);
          r80_7ff_tmp10 = simd_and(r80_7ff_tmp3, tmp11);
          bytetest_ca = simd_and(r80_7ff_tmp2, r80_7ff_tmp10);
          bytetest_b0_bf = simd_and(tmp7, tmp2);
          r80_7ff_tmp11 = simd_and(tmp20, bytetest_ca);
          carryQ.cq[5] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp11, carryQ.get_carry_in(5), r80_7ff_tmp12));
          r80_7ff_tmp13 = simd_and(r80_7ff_tmp12, bytetest_b0_bf);
          r80_7ff_tmp14 = simd_or(r80_7ff_tmp13, r80_7ff_tmp9);
          struct_Lm.cc = simd_or(r80_7ff_tmp14, struct_Lm.cc);
          bytetest_cb = simd_and(r80_7ff_tmp2, r80_7ff_tmp4);
          r80_7ff_tmp15 = simd_andc(tmp7, basis_bits.bit_2);
          r80_7ff_tmp16 = simd_not(r80_7ff_tmp6);
          r80_7ff_tmp17 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
          r80_7ff_tmp18 = simd_or(basis_bits.bit_4, r80_7ff_tmp17);
          r80_7ff_tmp19 = simd_or(simd_and(basis_bits.bit_3, r80_7ff_tmp16), simd_andc(r80_7ff_tmp18, basis_bits.bit_3));
          bytetest_86_91 = simd_and(r80_7ff_tmp15, r80_7ff_tmp19);
          r80_7ff_tmp20 = simd_and(r80_7ff_tmp8, bytetest_86_91);
          struct_Lm.cc = simd_or(r80_7ff_tmp20, struct_Lm.cc);
          bytetest_cb = simd_and(r80_7ff_tmp2, r80_7ff_tmp4);
          r80_7ff_tmp21 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
          r80_7ff_tmp22 = simd_and(tmp7, r80_7ff_tmp21);
          r80_7ff_tmp23 = simd_andc(r80_7ff_tmp22, basis_bits.bit_4);
          r80_7ff_tmp24 = simd_and(basis_bits.bit_5, tmp5);
          bytetest_a0_a4 = simd_andc(r80_7ff_tmp23, r80_7ff_tmp24);
          r80_7ff_tmp25 = simd_and(r80_7ff_tmp8, bytetest_a0_a4);
          struct_Lm.cc = simd_or(r80_7ff_tmp25, struct_Lm.cc);
          bytetest_cb = simd_and(r80_7ff_tmp2, r80_7ff_tmp4);
          r80_7ff_tmp26 = simd_andc(tmp14, tmp5);
          bytetest_ac_ac = simd_and(r80_7ff_tmp22, r80_7ff_tmp26);
          r80_7ff_tmp27 = simd_and(r80_7ff_tmp8, bytetest_ac_ac);
          struct_Lm.cc = simd_or(r80_7ff_tmp27, struct_Lm.cc);
          bytetest_cb = simd_and(r80_7ff_tmp2, r80_7ff_tmp4);
          bytetest_ae_ae = simd_and(r80_7ff_tmp22, tmp15);
          r80_7ff_tmp28 = simd_and(r80_7ff_tmp8, bytetest_ae_ae);
          struct_Lm.cc = simd_or(r80_7ff_tmp28, struct_Lm.cc);
          r80_7ff_tmp29 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
          r80_7ff_tmp30 = simd_and(tmp14, r80_7ff_tmp29);
          bytetest_cd = simd_and(r80_7ff_tmp2, r80_7ff_tmp30);
          r80_7ff_tmp31 = simd_andc(tmp10, tmp5);
          bytetest_b4_b4 = simd_and(bytetest_b0_bf, r80_7ff_tmp31);
          r80_7ff_tmp32 = simd_and(tmp20, bytetest_cd);
          carryQ.cq[6] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp32, carryQ.get_carry_in(6), r80_7ff_tmp33));
          r80_7ff_tmp34 = simd_and(r80_7ff_tmp33, bytetest_b4_b4);
          struct_Lm.cc = simd_or(r80_7ff_tmp34, struct_Lm.cc);
          bytetest_cd = simd_and(r80_7ff_tmp2, r80_7ff_tmp30);
          bytetest_ba_ba = simd_and(bytetest_b0_bf, r80_7ff_tmp10);
          r80_7ff_tmp35 = simd_and(r80_7ff_tmp33, bytetest_ba_ba);
          struct_Lm.cc = simd_or(r80_7ff_tmp35, struct_Lm.cc);
          r80_7ff_tmp36 = simd_and(tmp1, tmp8);
          r80_7ff_tmp37 = simd_and(tmp10, r80_7ff_tmp29);
          bytetest_d5 = simd_and(r80_7ff_tmp36, r80_7ff_tmp37);
          r80_7ff_tmp38 = simd_and(r80_7ff_tmp3, r80_7ff_tmp29);
          bytetest_99_99 = simd_and(tmp9, r80_7ff_tmp38);
          r80_7ff_tmp39 = simd_and(tmp20, bytetest_d5);
          carryQ.cq[7] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp39, carryQ.get_carry_in(7), r80_7ff_tmp40));
          r80_7ff_tmp41 = simd_and(r80_7ff_tmp40, bytetest_99_99);
          struct_Lm.cc = simd_or(r80_7ff_tmp41, struct_Lm.cc);
          bytetest_d9 = simd_and(r80_7ff_tmp36, r80_7ff_tmp38);
          bytetest_80_80 = simd_andc(r80_7ff_tmp5, tmp6);
          r80_7ff_tmp42 = simd_and(tmp20, bytetest_d9);
          carryQ.cq[8] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp42, carryQ.get_carry_in(8), r80_7ff_tmp43));
          r80_7ff_tmp44 = simd_and(r80_7ff_tmp43, bytetest_80_80);
          struct_Lm.cc = simd_or(r80_7ff_tmp44, struct_Lm.cc);
          bytetest_db = simd_and(r80_7ff_tmp36, r80_7ff_tmp4);
          r80_7ff_tmp45 = simd_and(r80_7ff_tmp22, tmp10);
          r80_7ff_tmp46 = simd_not(basis_bits.bit_7);
          r80_7ff_tmp47 = simd_or(simd_and(basis_bits.bit_6, r80_7ff_tmp46), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
          bytetest_a5_a6 = simd_and(r80_7ff_tmp45, r80_7ff_tmp47);
          r80_7ff_tmp48 = simd_and(tmp20, bytetest_db);
          carryQ.cq[9] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp48, carryQ.get_carry_in(9), r80_7ff_tmp49));
          r80_7ff_tmp50 = simd_and(r80_7ff_tmp49, bytetest_a5_a6);
          struct_Lm.cc = simd_or(r80_7ff_tmp50, struct_Lm.cc);
          r80_7ff_tmp51 = simd_and(tmp14, tmp16);
          bytetest_df = simd_and(r80_7ff_tmp36, r80_7ff_tmp51);
          r80_7ff_tmp52 = simd_andc(tmp10, basis_bits.bit_6);
          bytetest_b4_b5 = simd_and(bytetest_b0_bf, r80_7ff_tmp52);
          r80_7ff_tmp53 = simd_and(tmp20, bytetest_df);
          carryQ.cq[10] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp53, carryQ.get_carry_in(10), r80_7ff_tmp54));
          r80_7ff_tmp55 = simd_and(r80_7ff_tmp54, bytetest_b4_b5);
          struct_Lm.cc = simd_or(r80_7ff_tmp55, struct_Lm.cc);
          bytetest_df = simd_and(r80_7ff_tmp36, r80_7ff_tmp51);
          bytetest_ba_ba = simd_and(bytetest_b0_bf, r80_7ff_tmp10);
          r80_7ff_tmp56 = simd_and(r80_7ff_tmp54, bytetest_ba_ba);
          struct_Lm.cc = simd_or(r80_7ff_tmp56, struct_Lm.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(4, 7);
        }
        tmp31 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp32 = simd_and(tmp1, tmp31);
        tmp33 = simd_or(basis_bits.bit_5, tmp5);
        tmp34 = simd_or(basis_bits.bit_4, tmp33);
        bytetest_e1_ef = simd_and(tmp32, tmp34);
        bytetest_e0 = simd_andc(tmp32, tmp6);
        bytetest_a0_bf = simd_and(tmp7, basis_bits.bit_2);
        tmp35 = simd_and(tmp20, bytetest_e0);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(tmp35, carryQ.get_carry_in(11), tmp36));
        tmp37 = simd_and(tmp36, bytetest_a0_bf);
        tmp38 = simd_or(tmp37, bytetest_e1_ef);
        if ((bitblock::any(tmp38) || carryQ.CarryTest(12, 39))) {
          r800_ffff_tmp1 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp2 = simd_and(tmp1, r800_ffff_tmp1);
          bytetest_e0 = simd_andc(r800_ffff_tmp2, tmp6);
          r800_ffff_tmp3 = simd_and(tmp7, r800_ffff_tmp1);
          bytetest_a0 = simd_andc(r800_ffff_tmp3, tmp6);
          r800_ffff_tmp4 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
          r800_ffff_tmp5 = simd_and(r800_ffff_tmp4, tmp11);
          bytetest_9a_9a = simd_and(tmp9, r800_ffff_tmp5);
          r800_ffff_tmp6 = simd_and(tmp20, bytetest_e0);
          carryQ.cq[12] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp6, carryQ.get_carry_in(12), r800_ffff_tmp7));
          r800_ffff_tmp8 = simd_and(r800_ffff_tmp7, bytetest_a0);
          carryQ.cq[13] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp8, carryQ.get_carry_in(13), r800_ffff_tmp9));
          r800_ffff_tmp10 = simd_and(r800_ffff_tmp9, bytetest_9a_9a);
          struct_Lm.cc = simd_or(r800_ffff_tmp10, struct_Lm.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp2, tmp6);
          bytetest_a0 = simd_andc(r800_ffff_tmp3, tmp6);
          r800_ffff_tmp11 = simd_andc(tmp10, tmp5);
          bytetest_a4_a4 = simd_and(r800_ffff_tmp3, r800_ffff_tmp11);
          r800_ffff_tmp12 = simd_and(r800_ffff_tmp9, bytetest_a4_a4);
          struct_Lm.cc = simd_or(r800_ffff_tmp12, struct_Lm.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp2, tmp6);
          bytetest_a0 = simd_andc(r800_ffff_tmp3, tmp6);
          r800_ffff_tmp13 = simd_andc(r800_ffff_tmp4, tmp5);
          bytetest_a8_a8 = simd_and(r800_ffff_tmp3, r800_ffff_tmp13);
          r800_ffff_tmp14 = simd_and(r800_ffff_tmp9, bytetest_a8_a8);
          struct_Lm.cc = simd_or(r800_ffff_tmp14, struct_Lm.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp2, tmp6);
          r800_ffff_tmp15 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
          r800_ffff_tmp16 = simd_and(tmp10, r800_ffff_tmp15);
          bytetest_a5 = simd_and(r800_ffff_tmp3, r800_ffff_tmp16);
          r800_ffff_tmp17 = simd_andc(r800_ffff_tmp15, tmp4);
          bytetest_b1_b1 = simd_and(tmp13, r800_ffff_tmp17);
          r800_ffff_tmp18 = simd_and(r800_ffff_tmp7, bytetest_a5);
          carryQ.cq[14] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp18, carryQ.get_carry_in(14), r800_ffff_tmp19));
          r800_ffff_tmp20 = simd_and(r800_ffff_tmp19, bytetest_b1_b1);
          struct_Lm.cc = simd_or(r800_ffff_tmp20, struct_Lm.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp2, tmp6);
          r800_ffff_tmp21 = simd_and(r800_ffff_tmp4, r800_ffff_tmp15);
          bytetest_b9 = simd_and(tmp13, r800_ffff_tmp21);
          r800_ffff_tmp22 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp23 = simd_andc(tmp7, r800_ffff_tmp22);
          bytetest_86_86 = simd_and(r800_ffff_tmp23, tmp12);
          r800_ffff_tmp24 = simd_and(r800_ffff_tmp7, bytetest_b9);
          carryQ.cq[15] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp24, carryQ.get_carry_in(15), r800_ffff_tmp25));
          r800_ffff_tmp26 = simd_and(r800_ffff_tmp25, bytetest_86_86);
          struct_Lm.cc = simd_or(r800_ffff_tmp26, struct_Lm.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp2, tmp6);
          r800_ffff_tmp27 = simd_and(r800_ffff_tmp4, tmp16);
          bytetest_bb = simd_and(tmp13, r800_ffff_tmp27);
          bytetest_86_86 = simd_and(r800_ffff_tmp23, tmp12);
          r800_ffff_tmp28 = simd_and(r800_ffff_tmp7, bytetest_bb);
          carryQ.cq[16] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp28, carryQ.get_carry_in(16), r800_ffff_tmp29));
          r800_ffff_tmp30 = simd_and(r800_ffff_tmp29, bytetest_86_86);
          struct_Lm.cc = simd_or(r800_ffff_tmp30, struct_Lm.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, r800_ffff_tmp17);
          r800_ffff_tmp31 = simd_andc(tmp16, tmp4);
          bytetest_83 = simd_and(r800_ffff_tmp23, r800_ffff_tmp31);
          r800_ffff_tmp32 = simd_andc(tmp14, tmp5);
          bytetest_bc_bc = simd_and(tmp13, r800_ffff_tmp32);
          r800_ffff_tmp33 = simd_and(tmp20, bytetest_e1);
          carryQ.cq[17] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp33, carryQ.get_carry_in(17), r800_ffff_tmp34));
          r800_ffff_tmp35 = simd_and(r800_ffff_tmp34, bytetest_83);
          carryQ.cq[18] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp35, carryQ.get_carry_in(18), r800_ffff_tmp36));
          r800_ffff_tmp37 = simd_and(r800_ffff_tmp36, bytetest_bc_bc);
          struct_Lm.cc = simd_or(r800_ffff_tmp37, struct_Lm.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, r800_ffff_tmp17);
          r800_ffff_tmp38 = simd_and(tmp14, tmp16);
          bytetest_9f = simd_and(tmp9, r800_ffff_tmp38);
          r800_ffff_tmp39 = simd_and(tmp10, tmp16);
          bytetest_97_97 = simd_and(tmp9, r800_ffff_tmp39);
          r800_ffff_tmp40 = simd_and(r800_ffff_tmp34, bytetest_9f);
          carryQ.cq[19] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp40, carryQ.get_carry_in(19), r800_ffff_tmp41));
          r800_ffff_tmp42 = simd_and(r800_ffff_tmp41, bytetest_97_97);
          struct_Lm.cc = simd_or(r800_ffff_tmp42, struct_Lm.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, r800_ffff_tmp17);
          bytetest_a1 = simd_and(r800_ffff_tmp3, r800_ffff_tmp17);
          bytetest_83_83 = simd_and(r800_ffff_tmp23, r800_ffff_tmp31);
          r800_ffff_tmp43 = simd_and(r800_ffff_tmp34, bytetest_a1);
          carryQ.cq[20] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp43, carryQ.get_carry_in(20), r800_ffff_tmp44));
          r800_ffff_tmp45 = simd_and(r800_ffff_tmp44, bytetest_83_83);
          struct_Lm.cc = simd_or(r800_ffff_tmp45, struct_Lm.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, r800_ffff_tmp17);
          bytetest_aa = simd_and(r800_ffff_tmp3, r800_ffff_tmp5);
          bytetest_a7_a7 = simd_and(r800_ffff_tmp3, r800_ffff_tmp39);
          r800_ffff_tmp46 = simd_and(r800_ffff_tmp34, bytetest_aa);
          carryQ.cq[21] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp46, carryQ.get_carry_in(21), r800_ffff_tmp47));
          r800_ffff_tmp48 = simd_and(r800_ffff_tmp47, bytetest_a7_a7);
          struct_Lm.cc = simd_or(r800_ffff_tmp48, struct_Lm.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, r800_ffff_tmp17);
          bytetest_b1 = simd_and(tmp13, r800_ffff_tmp17);
          r800_ffff_tmp49 = simd_and(tmp13, basis_bits.bit_4);
          r800_ffff_tmp50 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
          bytetest_b8_bd = simd_andc(r800_ffff_tmp49, r800_ffff_tmp50);
          r800_ffff_tmp51 = simd_and(r800_ffff_tmp34, bytetest_b1);
          carryQ.cq[22] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp51, carryQ.get_carry_in(22), r800_ffff_tmp52));
          r800_ffff_tmp53 = simd_and(r800_ffff_tmp52, bytetest_b8_bd);
          struct_Lm.cc = simd_or(r800_ffff_tmp53, struct_Lm.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, r800_ffff_tmp17);
          bytetest_b5 = simd_and(tmp13, r800_ffff_tmp16);
          r800_ffff_tmp54 = simd_and(basis_bits.bit_4, tmp17);
          r800_ffff_tmp55 = simd_or(basis_bits.bit_3, r800_ffff_tmp54);
          r800_ffff_tmp56 = simd_and(basis_bits.bit_2, r800_ffff_tmp55);
          bytetest_80_aa = simd_andc(tmp7, r800_ffff_tmp56);
          r800_ffff_tmp57 = simd_and(r800_ffff_tmp34, bytetest_b5);
          carryQ.cq[23] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp57, carryQ.get_carry_in(23), r800_ffff_tmp58));
          r800_ffff_tmp59 = simd_and(r800_ffff_tmp58, bytetest_80_aa);
          bytetest_b4 = simd_and(tmp13, r800_ffff_tmp11);
          r800_ffff_tmp60 = simd_and(tmp7, basis_bits.bit_2);
          r800_ffff_tmp61 = simd_or(basis_bits.bit_3, tmp14);
          bytetest_ac_bf = simd_and(r800_ffff_tmp60, r800_ffff_tmp61);
          r800_ffff_tmp62 = simd_and(r800_ffff_tmp34, bytetest_b4);
          carryQ.cq[24] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp62, carryQ.get_carry_in(24), r800_ffff_tmp63));
          r800_ffff_tmp64 = simd_and(r800_ffff_tmp63, bytetest_ac_bf);
          r800_ffff_tmp65 = simd_or(r800_ffff_tmp64, r800_ffff_tmp59);
          struct_Lm.cc = simd_or(r800_ffff_tmp65, struct_Lm.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, r800_ffff_tmp17);
          bytetest_b5 = simd_and(tmp13, r800_ffff_tmp16);
          bytetest_b8_b8 = simd_and(tmp13, r800_ffff_tmp13);
          r800_ffff_tmp66 = simd_and(r800_ffff_tmp58, bytetest_b8_b8);
          struct_Lm.cc = simd_or(r800_ffff_tmp66, struct_Lm.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, r800_ffff_tmp17);
          bytetest_b6 = simd_and(tmp13, tmp12);
          r800_ffff_tmp67 = simd_and(basis_bits.bit_3, r800_ffff_tmp54);
          r800_ffff_tmp68 = simd_or(basis_bits.bit_2, r800_ffff_tmp67);
          bytetest_9b_bf = simd_and(tmp7, r800_ffff_tmp68);
          r800_ffff_tmp69 = simd_and(r800_ffff_tmp34, bytetest_b6);
          carryQ.cq[25] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp69, carryQ.get_carry_in(25), r800_ffff_tmp70));
          r800_ffff_tmp71 = simd_and(r800_ffff_tmp70, bytetest_9b_bf);
          struct_Lm.cc = simd_or(r800_ffff_tmp71, struct_Lm.cc);
          r800_ffff_tmp72 = simd_andc(tmp11, tmp4);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp72);
          bytetest_81 = simd_and(r800_ffff_tmp23, r800_ffff_tmp17);
          bytetest_b1_b1 = simd_and(tmp13, r800_ffff_tmp17);
          r800_ffff_tmp73 = simd_and(tmp20, bytetest_e2);
          carryQ.cq[26] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp73, carryQ.get_carry_in(26), r800_ffff_tmp74));
          r800_ffff_tmp75 = simd_and(r800_ffff_tmp74, bytetest_81);
          carryQ.cq[27] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp75, carryQ.get_carry_in(27), r800_ffff_tmp76));
          r800_ffff_tmp77 = simd_and(r800_ffff_tmp76, bytetest_b1_b1);
          struct_Lm.cc = simd_or(r800_ffff_tmp77, struct_Lm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp72);
          bytetest_81 = simd_and(r800_ffff_tmp23, r800_ffff_tmp17);
          bytetest_bf_bf = simd_and(tmp13, r800_ffff_tmp38);
          r800_ffff_tmp78 = simd_and(r800_ffff_tmp76, bytetest_bf_bf);
          struct_Lm.cc = simd_or(r800_ffff_tmp78, struct_Lm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp72);
          bytetest_82 = simd_and(r800_ffff_tmp23, r800_ffff_tmp72);
          r800_ffff_tmp79 = simd_and(basis_bits.bit_5, tmp5);
          r800_ffff_tmp80 = simd_and(basis_bits.bit_4, r800_ffff_tmp79);
          bytetest_90_9c = simd_andc(tmp9, r800_ffff_tmp80);
          r800_ffff_tmp81 = simd_and(r800_ffff_tmp74, bytetest_82);
          carryQ.cq[28] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp81, carryQ.get_carry_in(28), r800_ffff_tmp82));
          r800_ffff_tmp83 = simd_and(r800_ffff_tmp82, bytetest_90_9c);
          struct_Lm.cc = simd_or(r800_ffff_tmp83, struct_Lm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp72);
          bytetest_b1 = simd_and(tmp13, r800_ffff_tmp17);
          r800_ffff_tmp84 = simd_andc(tmp14, basis_bits.bit_6);
          bytetest_bc_bd = simd_and(tmp13, r800_ffff_tmp84);
          r800_ffff_tmp85 = simd_and(r800_ffff_tmp74, bytetest_b1);
          carryQ.cq[29] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp85, carryQ.get_carry_in(29), r800_ffff_tmp86));
          r800_ffff_tmp87 = simd_and(r800_ffff_tmp86, bytetest_bc_bd);
          struct_Lm.cc = simd_or(r800_ffff_tmp87, struct_Lm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp72);
          bytetest_b5 = simd_and(tmp13, r800_ffff_tmp16);
          bytetest_af_af = simd_and(r800_ffff_tmp3, r800_ffff_tmp38);
          r800_ffff_tmp88 = simd_and(r800_ffff_tmp74, bytetest_b5);
          carryQ.cq[30] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp88, carryQ.get_carry_in(30), r800_ffff_tmp89));
          r800_ffff_tmp90 = simd_and(r800_ffff_tmp89, bytetest_af_af);
          struct_Lm.cc = simd_or(r800_ffff_tmp90, struct_Lm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp72);
          bytetest_b8 = simd_and(tmp13, r800_ffff_tmp13);
          bytetest_af_af = simd_and(r800_ffff_tmp3, r800_ffff_tmp38);
          r800_ffff_tmp91 = simd_and(r800_ffff_tmp74, bytetest_b8);
          carryQ.cq[31] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp91, carryQ.get_carry_in(31), r800_ffff_tmp92));
          r800_ffff_tmp93 = simd_and(r800_ffff_tmp92, bytetest_af_af);
          struct_Lm.cc = simd_or(r800_ffff_tmp93, struct_Lm.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp31);
          bytetest_80 = simd_andc(r800_ffff_tmp23, tmp6);
          bytetest_85_85 = simd_and(r800_ffff_tmp23, r800_ffff_tmp16);
          r800_ffff_tmp94 = simd_and(tmp20, bytetest_e3);
          carryQ.cq[32] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp94, carryQ.get_carry_in(32), r800_ffff_tmp95));
          r800_ffff_tmp96 = simd_and(r800_ffff_tmp95, bytetest_80);
          carryQ.cq[33] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp96, carryQ.get_carry_in(33), r800_ffff_tmp97));
          r800_ffff_tmp98 = simd_and(r800_ffff_tmp97, bytetest_85_85);
          struct_Lm.cc = simd_or(r800_ffff_tmp98, struct_Lm.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp31);
          bytetest_80 = simd_andc(r800_ffff_tmp23, tmp6);
          r800_ffff_tmp99 = simd_andc(tmp13, basis_bits.bit_4);
          r800_ffff_tmp100 = simd_not(basis_bits.bit_6);
          r800_ffff_tmp101 = simd_or(simd_and(basis_bits.bit_5, r800_ffff_tmp100), simd_andc(tmp5, basis_bits.bit_5));
          bytetest_b1_b5 = simd_and(r800_ffff_tmp99, r800_ffff_tmp101);
          r800_ffff_tmp102 = simd_and(r800_ffff_tmp97, bytetest_b1_b5);
          struct_Lm.cc = simd_or(r800_ffff_tmp102, struct_Lm.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp31);
          bytetest_80 = simd_andc(r800_ffff_tmp23, tmp6);
          bytetest_bb_bb = simd_and(tmp13, r800_ffff_tmp27);
          r800_ffff_tmp103 = simd_and(r800_ffff_tmp97, bytetest_bb_bb);
          struct_Lm.cc = simd_or(r800_ffff_tmp103, struct_Lm.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp31);
          bytetest_82 = simd_and(r800_ffff_tmp23, r800_ffff_tmp72);
          r800_ffff_tmp104 = simd_and(tmp9, tmp14);
          r800_ffff_tmp105 = simd_not(basis_bits.bit_7);
          r800_ffff_tmp106 = simd_or(simd_and(basis_bits.bit_6, r800_ffff_tmp105), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
          bytetest_9d_9e = simd_and(r800_ffff_tmp104, r800_ffff_tmp106);
          r800_ffff_tmp107 = simd_and(r800_ffff_tmp95, bytetest_82);
          carryQ.cq[34] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp107, carryQ.get_carry_in(34), r800_ffff_tmp108));
          r800_ffff_tmp109 = simd_and(r800_ffff_tmp108, bytetest_9d_9e);
          struct_Lm.cc = simd_or(r800_ffff_tmp109, struct_Lm.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp31);
          bytetest_83 = simd_and(r800_ffff_tmp23, r800_ffff_tmp31);
          r800_ffff_tmp110 = simd_and(tmp13, tmp14);
          bytetest_bc_be = simd_andc(r800_ffff_tmp110, tmp16);
          r800_ffff_tmp111 = simd_and(r800_ffff_tmp95, bytetest_83);
          carryQ.cq[35] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp111, carryQ.get_carry_in(35), r800_ffff_tmp112));
          r800_ffff_tmp113 = simd_and(r800_ffff_tmp112, bytetest_bc_be);
          struct_Lm.cc = simd_or(r800_ffff_tmp113, struct_Lm.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, r800_ffff_tmp5);
          bytetest_80 = simd_andc(r800_ffff_tmp23, tmp6);
          bytetest_95_95 = simd_and(tmp9, r800_ffff_tmp16);
          r800_ffff_tmp114 = simd_and(tmp20, bytetest_ea);
          carryQ.cq[36] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp114, carryQ.get_carry_in(36), r800_ffff_tmp115));
          r800_ffff_tmp116 = simd_and(r800_ffff_tmp115, bytetest_80);
          carryQ.cq[37] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp116, carryQ.get_carry_in(37), r800_ffff_tmp117));
          r800_ffff_tmp118 = simd_and(r800_ffff_tmp117, bytetest_95_95);
          struct_Lm.cc = simd_or(r800_ffff_tmp118, struct_Lm.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, r800_ffff_tmp5);
          bytetest_93 = simd_and(tmp9, r800_ffff_tmp31);
          bytetest_b8_bd = simd_andc(r800_ffff_tmp49, r800_ffff_tmp50);
          r800_ffff_tmp119 = simd_and(r800_ffff_tmp115, bytetest_93);
          carryQ.cq[38] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp119, carryQ.get_carry_in(38), r800_ffff_tmp120));
          r800_ffff_tmp121 = simd_and(r800_ffff_tmp120, bytetest_b8_bd);
          struct_Lm.cc = simd_or(r800_ffff_tmp121, struct_Lm.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, r800_ffff_tmp5);
          bytetest_98 = simd_and(tmp9, r800_ffff_tmp13);
          bytetest_8c_8c = simd_and(r800_ffff_tmp23, r800_ffff_tmp32);
          r800_ffff_tmp122 = simd_and(r800_ffff_tmp115, bytetest_98);
          carryQ.cq[39] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp122, carryQ.get_carry_in(39), r800_ffff_tmp123));
          r800_ffff_tmp124 = simd_and(r800_ffff_tmp123, bytetest_8c_8c);
          struct_Lm.cc = simd_or(r800_ffff_tmp124, struct_Lm.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, r800_ffff_tmp5);
          bytetest_99 = simd_and(tmp9, r800_ffff_tmp21);
          bytetest_bf_bf = simd_and(tmp13, r800_ffff_tmp38);
          r800_ffff_tmp125 = simd_and(r800_ffff_tmp115, bytetest_99);
          carryQ.cq[40] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp125, carryQ.get_carry_in(40), r800_ffff_tmp126));
          r800_ffff_tmp127 = simd_and(r800_ffff_tmp126, bytetest_bf_bf);
          struct_Lm.cc = simd_or(r800_ffff_tmp127, struct_Lm.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, r800_ffff_tmp5);
          bytetest_9c = simd_and(tmp9, r800_ffff_tmp32);
          r800_ffff_tmp128 = simd_and(basis_bits.bit_5, tmp16);
          r800_ffff_tmp129 = simd_or(basis_bits.bit_4, r800_ffff_tmp128);
          bytetest_97_9f = simd_and(tmp9, r800_ffff_tmp129);
          r800_ffff_tmp130 = simd_and(r800_ffff_tmp115, bytetest_9c);
          carryQ.cq[41] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp130, carryQ.get_carry_in(41), r800_ffff_tmp131));
          r800_ffff_tmp132 = simd_and(r800_ffff_tmp131, bytetest_97_9f);
          struct_Lm.cc = simd_or(r800_ffff_tmp132, struct_Lm.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, r800_ffff_tmp5);
          r800_ffff_tmp133 = simd_and(tmp14, r800_ffff_tmp15);
          bytetest_9d = simd_and(tmp9, r800_ffff_tmp133);
          bytetest_b0_b0 = simd_andc(tmp13, tmp6);
          r800_ffff_tmp134 = simd_and(r800_ffff_tmp115, bytetest_9d);
          carryQ.cq[42] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp134, carryQ.get_carry_in(42), r800_ffff_tmp135));
          r800_ffff_tmp136 = simd_and(r800_ffff_tmp135, bytetest_b0_b0);
          struct_Lm.cc = simd_or(r800_ffff_tmp136, struct_Lm.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, r800_ffff_tmp5);
          bytetest_9e = simd_and(tmp9, tmp15);
          bytetest_88_88 = simd_and(r800_ffff_tmp23, r800_ffff_tmp13);
          r800_ffff_tmp137 = simd_and(r800_ffff_tmp115, bytetest_9e);
          carryQ.cq[43] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp137, carryQ.get_carry_in(43), r800_ffff_tmp138));
          r800_ffff_tmp139 = simd_and(r800_ffff_tmp138, bytetest_88_88);
          struct_Lm.cc = simd_or(r800_ffff_tmp139, struct_Lm.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, r800_ffff_tmp5);
          bytetest_9f = simd_and(tmp9, r800_ffff_tmp38);
          r800_ffff_tmp140 = simd_andc(r800_ffff_tmp4, basis_bits.bit_6);
          bytetest_b8_b9 = simd_and(tmp13, r800_ffff_tmp140);
          r800_ffff_tmp141 = simd_and(r800_ffff_tmp115, bytetest_9f);
          carryQ.cq[44] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp141, carryQ.get_carry_in(44), r800_ffff_tmp142));
          r800_ffff_tmp143 = simd_and(r800_ffff_tmp142, bytetest_b8_b9);
          struct_Lm.cc = simd_or(r800_ffff_tmp143, struct_Lm.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, r800_ffff_tmp5);
          bytetest_a7 = simd_and(r800_ffff_tmp3, r800_ffff_tmp39);
          bytetest_8f_8f = simd_and(r800_ffff_tmp23, r800_ffff_tmp38);
          r800_ffff_tmp144 = simd_and(r800_ffff_tmp115, bytetest_a7);
          carryQ.cq[45] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp144, carryQ.get_carry_in(45), r800_ffff_tmp145));
          r800_ffff_tmp146 = simd_and(r800_ffff_tmp145, bytetest_8f_8f);
          struct_Lm.cc = simd_or(r800_ffff_tmp146, struct_Lm.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, r800_ffff_tmp5);
          bytetest_a9 = simd_and(r800_ffff_tmp3, r800_ffff_tmp21);
          bytetest_b0_b0 = simd_andc(tmp13, tmp6);
          r800_ffff_tmp147 = simd_and(r800_ffff_tmp115, bytetest_a9);
          carryQ.cq[46] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp147, carryQ.get_carry_in(46), r800_ffff_tmp148));
          r800_ffff_tmp149 = simd_and(r800_ffff_tmp148, bytetest_b0_b0);
          struct_Lm.cc = simd_or(r800_ffff_tmp149, struct_Lm.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, r800_ffff_tmp5);
          bytetest_ab = simd_and(r800_ffff_tmp3, r800_ffff_tmp27);
          bytetest_9d_9d = simd_and(tmp9, r800_ffff_tmp133);
          r800_ffff_tmp150 = simd_and(r800_ffff_tmp115, bytetest_ab);
          carryQ.cq[47] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp150, carryQ.get_carry_in(47), r800_ffff_tmp151));
          r800_ffff_tmp152 = simd_and(r800_ffff_tmp151, bytetest_9d_9d);
          struct_Lm.cc = simd_or(r800_ffff_tmp152, struct_Lm.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, r800_ffff_tmp5);
          bytetest_ab = simd_and(r800_ffff_tmp3, r800_ffff_tmp27);
          r800_ffff_tmp153 = simd_not(tmp5);
          r800_ffff_tmp154 = simd_or(simd_and(basis_bits.bit_5, r800_ffff_tmp153), simd_andc(tmp16, basis_bits.bit_5));
          bytetest_b3_b4 = simd_and(r800_ffff_tmp99, r800_ffff_tmp154);
          r800_ffff_tmp155 = simd_and(r800_ffff_tmp151, bytetest_b3_b4);
          struct_Lm.cc = simd_or(r800_ffff_tmp155, struct_Lm.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp38);
          bytetest_bd = simd_and(tmp13, r800_ffff_tmp133);
          bytetest_b0_b0 = simd_andc(tmp13, tmp6);
          r800_ffff_tmp156 = simd_and(tmp20, bytetest_ef);
          carryQ.cq[48] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp156, carryQ.get_carry_in(48), r800_ffff_tmp157));
          r800_ffff_tmp158 = simd_and(r800_ffff_tmp157, bytetest_bd);
          carryQ.cq[49] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp158, carryQ.get_carry_in(49), r800_ffff_tmp159));
          r800_ffff_tmp160 = simd_and(r800_ffff_tmp159, bytetest_b0_b0);
          struct_Lm.cc = simd_or(r800_ffff_tmp160, struct_Lm.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp38);
          bytetest_be = simd_and(tmp13, tmp15);
          r800_ffff_tmp161 = simd_and(tmp14, basis_bits.bit_6);
          bytetest_9e_9f = simd_and(tmp9, r800_ffff_tmp161);
          r800_ffff_tmp162 = simd_and(r800_ffff_tmp157, bytetest_be);
          carryQ.cq[50] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp162, carryQ.get_carry_in(50), r800_ffff_tmp163));
          r800_ffff_tmp164 = simd_and(r800_ffff_tmp163, bytetest_9e_9f);
          struct_Lm.cc = simd_or(r800_ffff_tmp164, struct_Lm.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(12, 39);
        }
        carryQ.CarryQ_Adjust(51);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Lm & struct_Lm, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_f0, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, tmp12, bytetest_96, tmp13, tmp14, tmp15, bytetest_be;
		BitBlock tmp16, tmp17, tmp18, bytetest_93_9f, tmp19, tmp20, tmp21, tmp22;
		BitBlock tmp23, tmp24, tmp25, tmp26, tmp27, tmp28, tmp29, tmp30;
		BitBlock bytetest_c2_df, r80_7ff_tmp1, r80_7ff_tmp2, r80_7ff_tmp3;
		BitBlock r80_7ff_tmp4, bytetest_cb, r80_7ff_tmp5, r80_7ff_tmp6, bytetest_80_81;
		BitBlock r80_7ff_tmp7, r80_7ff_tmp8, r80_7ff_tmp9, r80_7ff_tmp10, bytetest_ca;
		BitBlock bytetest_b0_bf, r80_7ff_tmp11, r80_7ff_tmp12, r80_7ff_tmp13;
		BitBlock r80_7ff_tmp14, r80_7ff_tmp15, r80_7ff_tmp16, r80_7ff_tmp17;
		BitBlock r80_7ff_tmp18, r80_7ff_tmp19, bytetest_86_91, r80_7ff_tmp20;
		BitBlock r80_7ff_tmp21, r80_7ff_tmp22, r80_7ff_tmp23, r80_7ff_tmp24;
		BitBlock bytetest_a0_a4, r80_7ff_tmp25, r80_7ff_tmp26, bytetest_ac_ac;
		BitBlock r80_7ff_tmp27, bytetest_ae_ae, r80_7ff_tmp28, r80_7ff_tmp29;
		BitBlock r80_7ff_tmp30, bytetest_cd, r80_7ff_tmp31, bytetest_b4_b4;
		BitBlock r80_7ff_tmp32, r80_7ff_tmp33, r80_7ff_tmp34, bytetest_ba_ba;
		BitBlock r80_7ff_tmp35, r80_7ff_tmp36, r80_7ff_tmp37, bytetest_d5;
		BitBlock r80_7ff_tmp38, bytetest_99_99, r80_7ff_tmp39, r80_7ff_tmp40;
		BitBlock r80_7ff_tmp41, bytetest_d9, bytetest_80_80, r80_7ff_tmp42;
		BitBlock r80_7ff_tmp43, r80_7ff_tmp44, bytetest_db, r80_7ff_tmp45;
		BitBlock r80_7ff_tmp46, r80_7ff_tmp47, bytetest_a5_a6, r80_7ff_tmp48;
		BitBlock r80_7ff_tmp49, r80_7ff_tmp50, r80_7ff_tmp51, bytetest_df;
		BitBlock r80_7ff_tmp52, bytetest_b4_b5, r80_7ff_tmp53, r80_7ff_tmp54;
		BitBlock r80_7ff_tmp55, r80_7ff_tmp56, tmp31, tmp32, tmp33, tmp34;
		BitBlock bytetest_e1_ef, bytetest_e0, bytetest_a0_bf, tmp35, tmp36, tmp37;
		BitBlock tmp38, r800_ffff_tmp1, r800_ffff_tmp2, r800_ffff_tmp3, bytetest_a0;
		BitBlock r800_ffff_tmp4, r800_ffff_tmp5, bytetest_9a_9a, r800_ffff_tmp6;
		BitBlock r800_ffff_tmp7, r800_ffff_tmp8, r800_ffff_tmp9, r800_ffff_tmp10;
		BitBlock r800_ffff_tmp11, bytetest_a4_a4, r800_ffff_tmp12, r800_ffff_tmp13;
		BitBlock bytetest_a8_a8, r800_ffff_tmp14, r800_ffff_tmp15, r800_ffff_tmp16;
		BitBlock bytetest_a5, r800_ffff_tmp17, bytetest_b1_b1, r800_ffff_tmp18;
		BitBlock r800_ffff_tmp19, r800_ffff_tmp20, r800_ffff_tmp21, bytetest_b9;
		BitBlock r800_ffff_tmp22, r800_ffff_tmp23, bytetest_86_86, r800_ffff_tmp24;
		BitBlock r800_ffff_tmp25, r800_ffff_tmp26, r800_ffff_tmp27, bytetest_bb;
		BitBlock r800_ffff_tmp28, r800_ffff_tmp29, r800_ffff_tmp30, bytetest_e1;
		BitBlock r800_ffff_tmp31, bytetest_83, r800_ffff_tmp32, bytetest_bc_bc;
		BitBlock r800_ffff_tmp33, r800_ffff_tmp34, r800_ffff_tmp35, r800_ffff_tmp36;
		BitBlock r800_ffff_tmp37, r800_ffff_tmp38, bytetest_9f, r800_ffff_tmp39;
		BitBlock bytetest_97_97, r800_ffff_tmp40, r800_ffff_tmp41, r800_ffff_tmp42;
		BitBlock bytetest_a1, bytetest_83_83, r800_ffff_tmp43, r800_ffff_tmp44;
		BitBlock r800_ffff_tmp45, bytetest_aa, bytetest_a7_a7, r800_ffff_tmp46;
		BitBlock r800_ffff_tmp47, r800_ffff_tmp48, bytetest_b1, r800_ffff_tmp49;
		BitBlock r800_ffff_tmp50, bytetest_b8_bd, r800_ffff_tmp51, r800_ffff_tmp52;
		BitBlock r800_ffff_tmp53, bytetest_b5, r800_ffff_tmp54, r800_ffff_tmp55;
		BitBlock r800_ffff_tmp56, bytetest_80_aa, r800_ffff_tmp57, r800_ffff_tmp58;
		BitBlock r800_ffff_tmp59, bytetest_b4, r800_ffff_tmp60, r800_ffff_tmp61;
		BitBlock bytetest_ac_bf, r800_ffff_tmp62, r800_ffff_tmp63, r800_ffff_tmp64;
		BitBlock r800_ffff_tmp65, bytetest_b8_b8, r800_ffff_tmp66, bytetest_b6;
		BitBlock r800_ffff_tmp67, r800_ffff_tmp68, bytetest_9b_bf, r800_ffff_tmp69;
		BitBlock r800_ffff_tmp70, r800_ffff_tmp71, r800_ffff_tmp72, bytetest_e2;
		BitBlock bytetest_81, r800_ffff_tmp73, r800_ffff_tmp74, r800_ffff_tmp75;
		BitBlock r800_ffff_tmp76, r800_ffff_tmp77, bytetest_bf_bf, r800_ffff_tmp78;
		BitBlock bytetest_82, r800_ffff_tmp79, r800_ffff_tmp80, bytetest_90_9c;
		BitBlock r800_ffff_tmp81, r800_ffff_tmp82, r800_ffff_tmp83, r800_ffff_tmp84;
		BitBlock bytetest_bc_bd, r800_ffff_tmp85, r800_ffff_tmp86, r800_ffff_tmp87;
		BitBlock bytetest_af_af, r800_ffff_tmp88, r800_ffff_tmp89, r800_ffff_tmp90;
		BitBlock bytetest_b8, r800_ffff_tmp91, r800_ffff_tmp92, r800_ffff_tmp93;
		BitBlock bytetest_e3, bytetest_80, bytetest_85_85, r800_ffff_tmp94;
		BitBlock r800_ffff_tmp95, r800_ffff_tmp96, r800_ffff_tmp97, r800_ffff_tmp98;
		BitBlock r800_ffff_tmp99, r800_ffff_tmp100, r800_ffff_tmp101, bytetest_b1_b5;
		BitBlock r800_ffff_tmp102, bytetest_bb_bb, r800_ffff_tmp103, r800_ffff_tmp104;
		BitBlock r800_ffff_tmp105, r800_ffff_tmp106, bytetest_9d_9e, r800_ffff_tmp107;
		BitBlock r800_ffff_tmp108, r800_ffff_tmp109, r800_ffff_tmp110, bytetest_bc_be;
		BitBlock r800_ffff_tmp111, r800_ffff_tmp112, r800_ffff_tmp113, bytetest_ea;
		BitBlock bytetest_95_95, r800_ffff_tmp114, r800_ffff_tmp115, r800_ffff_tmp116;
		BitBlock r800_ffff_tmp117, r800_ffff_tmp118, bytetest_93, r800_ffff_tmp119;
		BitBlock r800_ffff_tmp120, r800_ffff_tmp121, bytetest_98, bytetest_8c_8c;
		BitBlock r800_ffff_tmp122, r800_ffff_tmp123, r800_ffff_tmp124, bytetest_99;
		BitBlock r800_ffff_tmp125, r800_ffff_tmp126, r800_ffff_tmp127, bytetest_9c;
		BitBlock r800_ffff_tmp128, r800_ffff_tmp129, bytetest_97_9f, r800_ffff_tmp130;
		BitBlock r800_ffff_tmp131, r800_ffff_tmp132, r800_ffff_tmp133, bytetest_9d;
		BitBlock bytetest_b0_b0, r800_ffff_tmp134, r800_ffff_tmp135, r800_ffff_tmp136;
		BitBlock bytetest_9e, bytetest_88_88, r800_ffff_tmp137, r800_ffff_tmp138;
		BitBlock r800_ffff_tmp139, r800_ffff_tmp140, bytetest_b8_b9, r800_ffff_tmp141;
		BitBlock r800_ffff_tmp142, r800_ffff_tmp143, bytetest_a7, bytetest_8f_8f;
		BitBlock r800_ffff_tmp144, r800_ffff_tmp145, r800_ffff_tmp146, bytetest_a9;
		BitBlock r800_ffff_tmp147, r800_ffff_tmp148, r800_ffff_tmp149, bytetest_ab;
		BitBlock bytetest_9d_9d, r800_ffff_tmp150, r800_ffff_tmp151, r800_ffff_tmp152;
		BitBlock r800_ffff_tmp153, r800_ffff_tmp154, bytetest_b3_b4, r800_ffff_tmp155;
		BitBlock bytetest_ef, bytetest_bd, r800_ffff_tmp156, r800_ffff_tmp157;
		BitBlock r800_ffff_tmp158, r800_ffff_tmp159, r800_ffff_tmp160;
		BitBlock r800_ffff_tmp161, bytetest_9e_9f, r800_ffff_tmp162, r800_ffff_tmp163;
		BitBlock r800_ffff_tmp164;




        struct_Lm.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_and(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_or(tmp4, tmp5);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp11 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp12 = simd_and(tmp10, tmp11);
        bytetest_96 = simd_and(tmp9, tmp12);
        tmp13 = simd_and(tmp7, tmp2);
        tmp14 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp15 = simd_and(tmp14, tmp11);
        bytetest_be = simd_and(tmp13, tmp15);
        tmp16 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp17 = simd_or(basis_bits.bit_5, tmp16);
        tmp18 = simd_or(basis_bits.bit_4, tmp17);
        bytetest_93_9f = simd_and(tmp9, tmp18);
        tmp19 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp19, carryQ.get_carry_in(0), tmp20));
        tmp21 = simd_and(tmp20, bytetest_f0);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp21, carryQ.get_carry_in(1), tmp22));
        tmp23 = simd_and(tmp22, bytetest_96);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp23, carryQ.get_carry_in(2), tmp24));
        tmp25 = simd_and(tmp24, bytetest_be);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp25, carryQ.get_carry_in(3), tmp26));
        tmp27 = simd_and(tmp26, bytetest_93_9f);
        struct_Lm.cc = simd_or(tmp27, struct_Lm.cc);
        tmp28 = simd_andc(tmp1, basis_bits.bit_2);
        tmp29 = simd_or(tmp4, basis_bits.bit_6);
        tmp30 = simd_or(basis_bits.bit_3, tmp29);
        bytetest_c2_df = simd_and(tmp28, tmp30);
        if ((bitblock::any(bytetest_c2_df) || carryQ.CarryTest(4, 7))) {
          r80_7ff_tmp1 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
          r80_7ff_tmp2 = simd_andc(tmp1, r80_7ff_tmp1);
          r80_7ff_tmp3 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
          r80_7ff_tmp4 = simd_and(r80_7ff_tmp3, tmp16);
          bytetest_cb = simd_and(r80_7ff_tmp2, r80_7ff_tmp4);
          r80_7ff_tmp5 = simd_andc(tmp7, r80_7ff_tmp1);
          r80_7ff_tmp6 = simd_or(tmp4, basis_bits.bit_6);
          bytetest_80_81 = simd_andc(r80_7ff_tmp5, r80_7ff_tmp6);
          r80_7ff_tmp7 = simd_and(tmp20, bytetest_cb);
          carryQ.cq[4] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp7, carryQ.get_carry_in(4), r80_7ff_tmp8));
          r80_7ff_tmp9 = simd_and(r80_7ff_tmp8, bytetest_80_81);
          r80_7ff_tmp10 = simd_and(r80_7ff_tmp3, tmp11);
          bytetest_ca = simd_and(r80_7ff_tmp2, r80_7ff_tmp10);
          bytetest_b0_bf = simd_and(tmp7, tmp2);
          r80_7ff_tmp11 = simd_and(tmp20, bytetest_ca);
          carryQ.cq[5] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp11, carryQ.get_carry_in(5), r80_7ff_tmp12));
          r80_7ff_tmp13 = simd_and(r80_7ff_tmp12, bytetest_b0_bf);
          r80_7ff_tmp14 = simd_or(r80_7ff_tmp13, r80_7ff_tmp9);
          struct_Lm.cc = simd_or(r80_7ff_tmp14, struct_Lm.cc);
          bytetest_cb = simd_and(r80_7ff_tmp2, r80_7ff_tmp4);
          r80_7ff_tmp15 = simd_andc(tmp7, basis_bits.bit_2);
          r80_7ff_tmp16 = simd_not(r80_7ff_tmp6);
          r80_7ff_tmp17 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
          r80_7ff_tmp18 = simd_or(basis_bits.bit_4, r80_7ff_tmp17);
          r80_7ff_tmp19 = simd_or(simd_and(basis_bits.bit_3, r80_7ff_tmp16), simd_andc(r80_7ff_tmp18, basis_bits.bit_3));
          bytetest_86_91 = simd_and(r80_7ff_tmp15, r80_7ff_tmp19);
          r80_7ff_tmp20 = simd_and(r80_7ff_tmp8, bytetest_86_91);
          struct_Lm.cc = simd_or(r80_7ff_tmp20, struct_Lm.cc);
          bytetest_cb = simd_and(r80_7ff_tmp2, r80_7ff_tmp4);
          r80_7ff_tmp21 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
          r80_7ff_tmp22 = simd_and(tmp7, r80_7ff_tmp21);
          r80_7ff_tmp23 = simd_andc(r80_7ff_tmp22, basis_bits.bit_4);
          r80_7ff_tmp24 = simd_and(basis_bits.bit_5, tmp5);
          bytetest_a0_a4 = simd_andc(r80_7ff_tmp23, r80_7ff_tmp24);
          r80_7ff_tmp25 = simd_and(r80_7ff_tmp8, bytetest_a0_a4);
          struct_Lm.cc = simd_or(r80_7ff_tmp25, struct_Lm.cc);
          bytetest_cb = simd_and(r80_7ff_tmp2, r80_7ff_tmp4);
          r80_7ff_tmp26 = simd_andc(tmp14, tmp5);
          bytetest_ac_ac = simd_and(r80_7ff_tmp22, r80_7ff_tmp26);
          r80_7ff_tmp27 = simd_and(r80_7ff_tmp8, bytetest_ac_ac);
          struct_Lm.cc = simd_or(r80_7ff_tmp27, struct_Lm.cc);
          bytetest_cb = simd_and(r80_7ff_tmp2, r80_7ff_tmp4);
          bytetest_ae_ae = simd_and(r80_7ff_tmp22, tmp15);
          r80_7ff_tmp28 = simd_and(r80_7ff_tmp8, bytetest_ae_ae);
          struct_Lm.cc = simd_or(r80_7ff_tmp28, struct_Lm.cc);
          r80_7ff_tmp29 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
          r80_7ff_tmp30 = simd_and(tmp14, r80_7ff_tmp29);
          bytetest_cd = simd_and(r80_7ff_tmp2, r80_7ff_tmp30);
          r80_7ff_tmp31 = simd_andc(tmp10, tmp5);
          bytetest_b4_b4 = simd_and(bytetest_b0_bf, r80_7ff_tmp31);
          r80_7ff_tmp32 = simd_and(tmp20, bytetest_cd);
          carryQ.cq[6] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp32, carryQ.get_carry_in(6), r80_7ff_tmp33));
          r80_7ff_tmp34 = simd_and(r80_7ff_tmp33, bytetest_b4_b4);
          struct_Lm.cc = simd_or(r80_7ff_tmp34, struct_Lm.cc);
          bytetest_cd = simd_and(r80_7ff_tmp2, r80_7ff_tmp30);
          bytetest_ba_ba = simd_and(bytetest_b0_bf, r80_7ff_tmp10);
          r80_7ff_tmp35 = simd_and(r80_7ff_tmp33, bytetest_ba_ba);
          struct_Lm.cc = simd_or(r80_7ff_tmp35, struct_Lm.cc);
          r80_7ff_tmp36 = simd_and(tmp1, tmp8);
          r80_7ff_tmp37 = simd_and(tmp10, r80_7ff_tmp29);
          bytetest_d5 = simd_and(r80_7ff_tmp36, r80_7ff_tmp37);
          r80_7ff_tmp38 = simd_and(r80_7ff_tmp3, r80_7ff_tmp29);
          bytetest_99_99 = simd_and(tmp9, r80_7ff_tmp38);
          r80_7ff_tmp39 = simd_and(tmp20, bytetest_d5);
          carryQ.cq[7] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp39, carryQ.get_carry_in(7), r80_7ff_tmp40));
          r80_7ff_tmp41 = simd_and(r80_7ff_tmp40, bytetest_99_99);
          struct_Lm.cc = simd_or(r80_7ff_tmp41, struct_Lm.cc);
          bytetest_d9 = simd_and(r80_7ff_tmp36, r80_7ff_tmp38);
          bytetest_80_80 = simd_andc(r80_7ff_tmp5, tmp6);
          r80_7ff_tmp42 = simd_and(tmp20, bytetest_d9);
          carryQ.cq[8] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp42, carryQ.get_carry_in(8), r80_7ff_tmp43));
          r80_7ff_tmp44 = simd_and(r80_7ff_tmp43, bytetest_80_80);
          struct_Lm.cc = simd_or(r80_7ff_tmp44, struct_Lm.cc);
          bytetest_db = simd_and(r80_7ff_tmp36, r80_7ff_tmp4);
          r80_7ff_tmp45 = simd_and(r80_7ff_tmp22, tmp10);
          r80_7ff_tmp46 = simd_not(basis_bits.bit_7);
          r80_7ff_tmp47 = simd_or(simd_and(basis_bits.bit_6, r80_7ff_tmp46), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
          bytetest_a5_a6 = simd_and(r80_7ff_tmp45, r80_7ff_tmp47);
          r80_7ff_tmp48 = simd_and(tmp20, bytetest_db);
          carryQ.cq[9] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp48, carryQ.get_carry_in(9), r80_7ff_tmp49));
          r80_7ff_tmp50 = simd_and(r80_7ff_tmp49, bytetest_a5_a6);
          struct_Lm.cc = simd_or(r80_7ff_tmp50, struct_Lm.cc);
          r80_7ff_tmp51 = simd_and(tmp14, tmp16);
          bytetest_df = simd_and(r80_7ff_tmp36, r80_7ff_tmp51);
          r80_7ff_tmp52 = simd_andc(tmp10, basis_bits.bit_6);
          bytetest_b4_b5 = simd_and(bytetest_b0_bf, r80_7ff_tmp52);
          r80_7ff_tmp53 = simd_and(tmp20, bytetest_df);
          carryQ.cq[10] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp53, carryQ.get_carry_in(10), r80_7ff_tmp54));
          r80_7ff_tmp55 = simd_and(r80_7ff_tmp54, bytetest_b4_b5);
          struct_Lm.cc = simd_or(r80_7ff_tmp55, struct_Lm.cc);
          bytetest_df = simd_and(r80_7ff_tmp36, r80_7ff_tmp51);
          bytetest_ba_ba = simd_and(bytetest_b0_bf, r80_7ff_tmp10);
          r80_7ff_tmp56 = simd_and(r80_7ff_tmp54, bytetest_ba_ba);
          struct_Lm.cc = simd_or(r80_7ff_tmp56, struct_Lm.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(4, 7);
        }
        tmp31 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp32 = simd_and(tmp1, tmp31);
        tmp33 = simd_or(basis_bits.bit_5, tmp5);
        tmp34 = simd_or(basis_bits.bit_4, tmp33);
        bytetest_e1_ef = simd_and(tmp32, tmp34);
        bytetest_e0 = simd_andc(tmp32, tmp6);
        bytetest_a0_bf = simd_and(tmp7, basis_bits.bit_2);
        tmp35 = simd_and(tmp20, bytetest_e0);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(tmp35, carryQ.get_carry_in(11), tmp36));
        tmp37 = simd_and(tmp36, bytetest_a0_bf);
        tmp38 = simd_or(tmp37, bytetest_e1_ef);
        if ((bitblock::any(tmp38) || carryQ.CarryTest(12, 39))) {
          r800_ffff_tmp1 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp2 = simd_and(tmp1, r800_ffff_tmp1);
          bytetest_e0 = simd_andc(r800_ffff_tmp2, tmp6);
          r800_ffff_tmp3 = simd_and(tmp7, r800_ffff_tmp1);
          bytetest_a0 = simd_andc(r800_ffff_tmp3, tmp6);
          r800_ffff_tmp4 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
          r800_ffff_tmp5 = simd_and(r800_ffff_tmp4, tmp11);
          bytetest_9a_9a = simd_and(tmp9, r800_ffff_tmp5);
          r800_ffff_tmp6 = simd_and(tmp20, bytetest_e0);
          carryQ.cq[12] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp6, carryQ.get_carry_in(12), r800_ffff_tmp7));
          r800_ffff_tmp8 = simd_and(r800_ffff_tmp7, bytetest_a0);
          carryQ.cq[13] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp8, carryQ.get_carry_in(13), r800_ffff_tmp9));
          r800_ffff_tmp10 = simd_and(r800_ffff_tmp9, bytetest_9a_9a);
          struct_Lm.cc = simd_or(r800_ffff_tmp10, struct_Lm.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp2, tmp6);
          bytetest_a0 = simd_andc(r800_ffff_tmp3, tmp6);
          r800_ffff_tmp11 = simd_andc(tmp10, tmp5);
          bytetest_a4_a4 = simd_and(r800_ffff_tmp3, r800_ffff_tmp11);
          r800_ffff_tmp12 = simd_and(r800_ffff_tmp9, bytetest_a4_a4);
          struct_Lm.cc = simd_or(r800_ffff_tmp12, struct_Lm.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp2, tmp6);
          bytetest_a0 = simd_andc(r800_ffff_tmp3, tmp6);
          r800_ffff_tmp13 = simd_andc(r800_ffff_tmp4, tmp5);
          bytetest_a8_a8 = simd_and(r800_ffff_tmp3, r800_ffff_tmp13);
          r800_ffff_tmp14 = simd_and(r800_ffff_tmp9, bytetest_a8_a8);
          struct_Lm.cc = simd_or(r800_ffff_tmp14, struct_Lm.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp2, tmp6);
          r800_ffff_tmp15 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
          r800_ffff_tmp16 = simd_and(tmp10, r800_ffff_tmp15);
          bytetest_a5 = simd_and(r800_ffff_tmp3, r800_ffff_tmp16);
          r800_ffff_tmp17 = simd_andc(r800_ffff_tmp15, tmp4);
          bytetest_b1_b1 = simd_and(tmp13, r800_ffff_tmp17);
          r800_ffff_tmp18 = simd_and(r800_ffff_tmp7, bytetest_a5);
          carryQ.cq[14] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp18, carryQ.get_carry_in(14), r800_ffff_tmp19));
          r800_ffff_tmp20 = simd_and(r800_ffff_tmp19, bytetest_b1_b1);
          struct_Lm.cc = simd_or(r800_ffff_tmp20, struct_Lm.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp2, tmp6);
          r800_ffff_tmp21 = simd_and(r800_ffff_tmp4, r800_ffff_tmp15);
          bytetest_b9 = simd_and(tmp13, r800_ffff_tmp21);
          r800_ffff_tmp22 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp23 = simd_andc(tmp7, r800_ffff_tmp22);
          bytetest_86_86 = simd_and(r800_ffff_tmp23, tmp12);
          r800_ffff_tmp24 = simd_and(r800_ffff_tmp7, bytetest_b9);
          carryQ.cq[15] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp24, carryQ.get_carry_in(15), r800_ffff_tmp25));
          r800_ffff_tmp26 = simd_and(r800_ffff_tmp25, bytetest_86_86);
          struct_Lm.cc = simd_or(r800_ffff_tmp26, struct_Lm.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp2, tmp6);
          r800_ffff_tmp27 = simd_and(r800_ffff_tmp4, tmp16);
          bytetest_bb = simd_and(tmp13, r800_ffff_tmp27);
          bytetest_86_86 = simd_and(r800_ffff_tmp23, tmp12);
          r800_ffff_tmp28 = simd_and(r800_ffff_tmp7, bytetest_bb);
          carryQ.cq[16] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp28, carryQ.get_carry_in(16), r800_ffff_tmp29));
          r800_ffff_tmp30 = simd_and(r800_ffff_tmp29, bytetest_86_86);
          struct_Lm.cc = simd_or(r800_ffff_tmp30, struct_Lm.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, r800_ffff_tmp17);
          r800_ffff_tmp31 = simd_andc(tmp16, tmp4);
          bytetest_83 = simd_and(r800_ffff_tmp23, r800_ffff_tmp31);
          r800_ffff_tmp32 = simd_andc(tmp14, tmp5);
          bytetest_bc_bc = simd_and(tmp13, r800_ffff_tmp32);
          r800_ffff_tmp33 = simd_and(tmp20, bytetest_e1);
          carryQ.cq[17] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp33, carryQ.get_carry_in(17), r800_ffff_tmp34));
          r800_ffff_tmp35 = simd_and(r800_ffff_tmp34, bytetest_83);
          carryQ.cq[18] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp35, carryQ.get_carry_in(18), r800_ffff_tmp36));
          r800_ffff_tmp37 = simd_and(r800_ffff_tmp36, bytetest_bc_bc);
          struct_Lm.cc = simd_or(r800_ffff_tmp37, struct_Lm.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, r800_ffff_tmp17);
          r800_ffff_tmp38 = simd_and(tmp14, tmp16);
          bytetest_9f = simd_and(tmp9, r800_ffff_tmp38);
          r800_ffff_tmp39 = simd_and(tmp10, tmp16);
          bytetest_97_97 = simd_and(tmp9, r800_ffff_tmp39);
          r800_ffff_tmp40 = simd_and(r800_ffff_tmp34, bytetest_9f);
          carryQ.cq[19] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp40, carryQ.get_carry_in(19), r800_ffff_tmp41));
          r800_ffff_tmp42 = simd_and(r800_ffff_tmp41, bytetest_97_97);
          struct_Lm.cc = simd_or(r800_ffff_tmp42, struct_Lm.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, r800_ffff_tmp17);
          bytetest_a1 = simd_and(r800_ffff_tmp3, r800_ffff_tmp17);
          bytetest_83_83 = simd_and(r800_ffff_tmp23, r800_ffff_tmp31);
          r800_ffff_tmp43 = simd_and(r800_ffff_tmp34, bytetest_a1);
          carryQ.cq[20] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp43, carryQ.get_carry_in(20), r800_ffff_tmp44));
          r800_ffff_tmp45 = simd_and(r800_ffff_tmp44, bytetest_83_83);
          struct_Lm.cc = simd_or(r800_ffff_tmp45, struct_Lm.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, r800_ffff_tmp17);
          bytetest_aa = simd_and(r800_ffff_tmp3, r800_ffff_tmp5);
          bytetest_a7_a7 = simd_and(r800_ffff_tmp3, r800_ffff_tmp39);
          r800_ffff_tmp46 = simd_and(r800_ffff_tmp34, bytetest_aa);
          carryQ.cq[21] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp46, carryQ.get_carry_in(21), r800_ffff_tmp47));
          r800_ffff_tmp48 = simd_and(r800_ffff_tmp47, bytetest_a7_a7);
          struct_Lm.cc = simd_or(r800_ffff_tmp48, struct_Lm.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, r800_ffff_tmp17);
          bytetest_b1 = simd_and(tmp13, r800_ffff_tmp17);
          r800_ffff_tmp49 = simd_and(tmp13, basis_bits.bit_4);
          r800_ffff_tmp50 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
          bytetest_b8_bd = simd_andc(r800_ffff_tmp49, r800_ffff_tmp50);
          r800_ffff_tmp51 = simd_and(r800_ffff_tmp34, bytetest_b1);
          carryQ.cq[22] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp51, carryQ.get_carry_in(22), r800_ffff_tmp52));
          r800_ffff_tmp53 = simd_and(r800_ffff_tmp52, bytetest_b8_bd);
          struct_Lm.cc = simd_or(r800_ffff_tmp53, struct_Lm.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, r800_ffff_tmp17);
          bytetest_b5 = simd_and(tmp13, r800_ffff_tmp16);
          r800_ffff_tmp54 = simd_and(basis_bits.bit_4, tmp17);
          r800_ffff_tmp55 = simd_or(basis_bits.bit_3, r800_ffff_tmp54);
          r800_ffff_tmp56 = simd_and(basis_bits.bit_2, r800_ffff_tmp55);
          bytetest_80_aa = simd_andc(tmp7, r800_ffff_tmp56);
          r800_ffff_tmp57 = simd_and(r800_ffff_tmp34, bytetest_b5);
          carryQ.cq[23] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp57, carryQ.get_carry_in(23), r800_ffff_tmp58));
          r800_ffff_tmp59 = simd_and(r800_ffff_tmp58, bytetest_80_aa);
          bytetest_b4 = simd_and(tmp13, r800_ffff_tmp11);
          r800_ffff_tmp60 = simd_and(tmp7, basis_bits.bit_2);
          r800_ffff_tmp61 = simd_or(basis_bits.bit_3, tmp14);
          bytetest_ac_bf = simd_and(r800_ffff_tmp60, r800_ffff_tmp61);
          r800_ffff_tmp62 = simd_and(r800_ffff_tmp34, bytetest_b4);
          carryQ.cq[24] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp62, carryQ.get_carry_in(24), r800_ffff_tmp63));
          r800_ffff_tmp64 = simd_and(r800_ffff_tmp63, bytetest_ac_bf);
          r800_ffff_tmp65 = simd_or(r800_ffff_tmp64, r800_ffff_tmp59);
          struct_Lm.cc = simd_or(r800_ffff_tmp65, struct_Lm.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, r800_ffff_tmp17);
          bytetest_b5 = simd_and(tmp13, r800_ffff_tmp16);
          bytetest_b8_b8 = simd_and(tmp13, r800_ffff_tmp13);
          r800_ffff_tmp66 = simd_and(r800_ffff_tmp58, bytetest_b8_b8);
          struct_Lm.cc = simd_or(r800_ffff_tmp66, struct_Lm.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, r800_ffff_tmp17);
          bytetest_b6 = simd_and(tmp13, tmp12);
          r800_ffff_tmp67 = simd_and(basis_bits.bit_3, r800_ffff_tmp54);
          r800_ffff_tmp68 = simd_or(basis_bits.bit_2, r800_ffff_tmp67);
          bytetest_9b_bf = simd_and(tmp7, r800_ffff_tmp68);
          r800_ffff_tmp69 = simd_and(r800_ffff_tmp34, bytetest_b6);
          carryQ.cq[25] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp69, carryQ.get_carry_in(25), r800_ffff_tmp70));
          r800_ffff_tmp71 = simd_and(r800_ffff_tmp70, bytetest_9b_bf);
          struct_Lm.cc = simd_or(r800_ffff_tmp71, struct_Lm.cc);
          r800_ffff_tmp72 = simd_andc(tmp11, tmp4);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp72);
          bytetest_81 = simd_and(r800_ffff_tmp23, r800_ffff_tmp17);
          bytetest_b1_b1 = simd_and(tmp13, r800_ffff_tmp17);
          r800_ffff_tmp73 = simd_and(tmp20, bytetest_e2);
          carryQ.cq[26] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp73, carryQ.get_carry_in(26), r800_ffff_tmp74));
          r800_ffff_tmp75 = simd_and(r800_ffff_tmp74, bytetest_81);
          carryQ.cq[27] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp75, carryQ.get_carry_in(27), r800_ffff_tmp76));
          r800_ffff_tmp77 = simd_and(r800_ffff_tmp76, bytetest_b1_b1);
          struct_Lm.cc = simd_or(r800_ffff_tmp77, struct_Lm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp72);
          bytetest_81 = simd_and(r800_ffff_tmp23, r800_ffff_tmp17);
          bytetest_bf_bf = simd_and(tmp13, r800_ffff_tmp38);
          r800_ffff_tmp78 = simd_and(r800_ffff_tmp76, bytetest_bf_bf);
          struct_Lm.cc = simd_or(r800_ffff_tmp78, struct_Lm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp72);
          bytetest_82 = simd_and(r800_ffff_tmp23, r800_ffff_tmp72);
          r800_ffff_tmp79 = simd_and(basis_bits.bit_5, tmp5);
          r800_ffff_tmp80 = simd_and(basis_bits.bit_4, r800_ffff_tmp79);
          bytetest_90_9c = simd_andc(tmp9, r800_ffff_tmp80);
          r800_ffff_tmp81 = simd_and(r800_ffff_tmp74, bytetest_82);
          carryQ.cq[28] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp81, carryQ.get_carry_in(28), r800_ffff_tmp82));
          r800_ffff_tmp83 = simd_and(r800_ffff_tmp82, bytetest_90_9c);
          struct_Lm.cc = simd_or(r800_ffff_tmp83, struct_Lm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp72);
          bytetest_b1 = simd_and(tmp13, r800_ffff_tmp17);
          r800_ffff_tmp84 = simd_andc(tmp14, basis_bits.bit_6);
          bytetest_bc_bd = simd_and(tmp13, r800_ffff_tmp84);
          r800_ffff_tmp85 = simd_and(r800_ffff_tmp74, bytetest_b1);
          carryQ.cq[29] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp85, carryQ.get_carry_in(29), r800_ffff_tmp86));
          r800_ffff_tmp87 = simd_and(r800_ffff_tmp86, bytetest_bc_bd);
          struct_Lm.cc = simd_or(r800_ffff_tmp87, struct_Lm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp72);
          bytetest_b5 = simd_and(tmp13, r800_ffff_tmp16);
          bytetest_af_af = simd_and(r800_ffff_tmp3, r800_ffff_tmp38);
          r800_ffff_tmp88 = simd_and(r800_ffff_tmp74, bytetest_b5);
          carryQ.cq[30] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp88, carryQ.get_carry_in(30), r800_ffff_tmp89));
          r800_ffff_tmp90 = simd_and(r800_ffff_tmp89, bytetest_af_af);
          struct_Lm.cc = simd_or(r800_ffff_tmp90, struct_Lm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp72);
          bytetest_b8 = simd_and(tmp13, r800_ffff_tmp13);
          bytetest_af_af = simd_and(r800_ffff_tmp3, r800_ffff_tmp38);
          r800_ffff_tmp91 = simd_and(r800_ffff_tmp74, bytetest_b8);
          carryQ.cq[31] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp91, carryQ.get_carry_in(31), r800_ffff_tmp92));
          r800_ffff_tmp93 = simd_and(r800_ffff_tmp92, bytetest_af_af);
          struct_Lm.cc = simd_or(r800_ffff_tmp93, struct_Lm.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp31);
          bytetest_80 = simd_andc(r800_ffff_tmp23, tmp6);
          bytetest_85_85 = simd_and(r800_ffff_tmp23, r800_ffff_tmp16);
          r800_ffff_tmp94 = simd_and(tmp20, bytetest_e3);
          carryQ.cq[32] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp94, carryQ.get_carry_in(32), r800_ffff_tmp95));
          r800_ffff_tmp96 = simd_and(r800_ffff_tmp95, bytetest_80);
          carryQ.cq[33] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp96, carryQ.get_carry_in(33), r800_ffff_tmp97));
          r800_ffff_tmp98 = simd_and(r800_ffff_tmp97, bytetest_85_85);
          struct_Lm.cc = simd_or(r800_ffff_tmp98, struct_Lm.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp31);
          bytetest_80 = simd_andc(r800_ffff_tmp23, tmp6);
          r800_ffff_tmp99 = simd_andc(tmp13, basis_bits.bit_4);
          r800_ffff_tmp100 = simd_not(basis_bits.bit_6);
          r800_ffff_tmp101 = simd_or(simd_and(basis_bits.bit_5, r800_ffff_tmp100), simd_andc(tmp5, basis_bits.bit_5));
          bytetest_b1_b5 = simd_and(r800_ffff_tmp99, r800_ffff_tmp101);
          r800_ffff_tmp102 = simd_and(r800_ffff_tmp97, bytetest_b1_b5);
          struct_Lm.cc = simd_or(r800_ffff_tmp102, struct_Lm.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp31);
          bytetest_80 = simd_andc(r800_ffff_tmp23, tmp6);
          bytetest_bb_bb = simd_and(tmp13, r800_ffff_tmp27);
          r800_ffff_tmp103 = simd_and(r800_ffff_tmp97, bytetest_bb_bb);
          struct_Lm.cc = simd_or(r800_ffff_tmp103, struct_Lm.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp31);
          bytetest_82 = simd_and(r800_ffff_tmp23, r800_ffff_tmp72);
          r800_ffff_tmp104 = simd_and(tmp9, tmp14);
          r800_ffff_tmp105 = simd_not(basis_bits.bit_7);
          r800_ffff_tmp106 = simd_or(simd_and(basis_bits.bit_6, r800_ffff_tmp105), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
          bytetest_9d_9e = simd_and(r800_ffff_tmp104, r800_ffff_tmp106);
          r800_ffff_tmp107 = simd_and(r800_ffff_tmp95, bytetest_82);
          carryQ.cq[34] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp107, carryQ.get_carry_in(34), r800_ffff_tmp108));
          r800_ffff_tmp109 = simd_and(r800_ffff_tmp108, bytetest_9d_9e);
          struct_Lm.cc = simd_or(r800_ffff_tmp109, struct_Lm.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp31);
          bytetest_83 = simd_and(r800_ffff_tmp23, r800_ffff_tmp31);
          r800_ffff_tmp110 = simd_and(tmp13, tmp14);
          bytetest_bc_be = simd_andc(r800_ffff_tmp110, tmp16);
          r800_ffff_tmp111 = simd_and(r800_ffff_tmp95, bytetest_83);
          carryQ.cq[35] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp111, carryQ.get_carry_in(35), r800_ffff_tmp112));
          r800_ffff_tmp113 = simd_and(r800_ffff_tmp112, bytetest_bc_be);
          struct_Lm.cc = simd_or(r800_ffff_tmp113, struct_Lm.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, r800_ffff_tmp5);
          bytetest_80 = simd_andc(r800_ffff_tmp23, tmp6);
          bytetest_95_95 = simd_and(tmp9, r800_ffff_tmp16);
          r800_ffff_tmp114 = simd_and(tmp20, bytetest_ea);
          carryQ.cq[36] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp114, carryQ.get_carry_in(36), r800_ffff_tmp115));
          r800_ffff_tmp116 = simd_and(r800_ffff_tmp115, bytetest_80);
          carryQ.cq[37] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp116, carryQ.get_carry_in(37), r800_ffff_tmp117));
          r800_ffff_tmp118 = simd_and(r800_ffff_tmp117, bytetest_95_95);
          struct_Lm.cc = simd_or(r800_ffff_tmp118, struct_Lm.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, r800_ffff_tmp5);
          bytetest_93 = simd_and(tmp9, r800_ffff_tmp31);
          bytetest_b8_bd = simd_andc(r800_ffff_tmp49, r800_ffff_tmp50);
          r800_ffff_tmp119 = simd_and(r800_ffff_tmp115, bytetest_93);
          carryQ.cq[38] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp119, carryQ.get_carry_in(38), r800_ffff_tmp120));
          r800_ffff_tmp121 = simd_and(r800_ffff_tmp120, bytetest_b8_bd);
          struct_Lm.cc = simd_or(r800_ffff_tmp121, struct_Lm.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, r800_ffff_tmp5);
          bytetest_98 = simd_and(tmp9, r800_ffff_tmp13);
          bytetest_8c_8c = simd_and(r800_ffff_tmp23, r800_ffff_tmp32);
          r800_ffff_tmp122 = simd_and(r800_ffff_tmp115, bytetest_98);
          carryQ.cq[39] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp122, carryQ.get_carry_in(39), r800_ffff_tmp123));
          r800_ffff_tmp124 = simd_and(r800_ffff_tmp123, bytetest_8c_8c);
          struct_Lm.cc = simd_or(r800_ffff_tmp124, struct_Lm.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, r800_ffff_tmp5);
          bytetest_99 = simd_and(tmp9, r800_ffff_tmp21);
          bytetest_bf_bf = simd_and(tmp13, r800_ffff_tmp38);
          r800_ffff_tmp125 = simd_and(r800_ffff_tmp115, bytetest_99);
          carryQ.cq[40] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp125, carryQ.get_carry_in(40), r800_ffff_tmp126));
          r800_ffff_tmp127 = simd_and(r800_ffff_tmp126, bytetest_bf_bf);
          struct_Lm.cc = simd_or(r800_ffff_tmp127, struct_Lm.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, r800_ffff_tmp5);
          bytetest_9c = simd_and(tmp9, r800_ffff_tmp32);
          r800_ffff_tmp128 = simd_and(basis_bits.bit_5, tmp16);
          r800_ffff_tmp129 = simd_or(basis_bits.bit_4, r800_ffff_tmp128);
          bytetest_97_9f = simd_and(tmp9, r800_ffff_tmp129);
          r800_ffff_tmp130 = simd_and(r800_ffff_tmp115, bytetest_9c);
          carryQ.cq[41] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp130, carryQ.get_carry_in(41), r800_ffff_tmp131));
          r800_ffff_tmp132 = simd_and(r800_ffff_tmp131, bytetest_97_9f);
          struct_Lm.cc = simd_or(r800_ffff_tmp132, struct_Lm.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, r800_ffff_tmp5);
          r800_ffff_tmp133 = simd_and(tmp14, r800_ffff_tmp15);
          bytetest_9d = simd_and(tmp9, r800_ffff_tmp133);
          bytetest_b0_b0 = simd_andc(tmp13, tmp6);
          r800_ffff_tmp134 = simd_and(r800_ffff_tmp115, bytetest_9d);
          carryQ.cq[42] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp134, carryQ.get_carry_in(42), r800_ffff_tmp135));
          r800_ffff_tmp136 = simd_and(r800_ffff_tmp135, bytetest_b0_b0);
          struct_Lm.cc = simd_or(r800_ffff_tmp136, struct_Lm.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, r800_ffff_tmp5);
          bytetest_9e = simd_and(tmp9, tmp15);
          bytetest_88_88 = simd_and(r800_ffff_tmp23, r800_ffff_tmp13);
          r800_ffff_tmp137 = simd_and(r800_ffff_tmp115, bytetest_9e);
          carryQ.cq[43] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp137, carryQ.get_carry_in(43), r800_ffff_tmp138));
          r800_ffff_tmp139 = simd_and(r800_ffff_tmp138, bytetest_88_88);
          struct_Lm.cc = simd_or(r800_ffff_tmp139, struct_Lm.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, r800_ffff_tmp5);
          bytetest_9f = simd_and(tmp9, r800_ffff_tmp38);
          r800_ffff_tmp140 = simd_andc(r800_ffff_tmp4, basis_bits.bit_6);
          bytetest_b8_b9 = simd_and(tmp13, r800_ffff_tmp140);
          r800_ffff_tmp141 = simd_and(r800_ffff_tmp115, bytetest_9f);
          carryQ.cq[44] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp141, carryQ.get_carry_in(44), r800_ffff_tmp142));
          r800_ffff_tmp143 = simd_and(r800_ffff_tmp142, bytetest_b8_b9);
          struct_Lm.cc = simd_or(r800_ffff_tmp143, struct_Lm.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, r800_ffff_tmp5);
          bytetest_a7 = simd_and(r800_ffff_tmp3, r800_ffff_tmp39);
          bytetest_8f_8f = simd_and(r800_ffff_tmp23, r800_ffff_tmp38);
          r800_ffff_tmp144 = simd_and(r800_ffff_tmp115, bytetest_a7);
          carryQ.cq[45] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp144, carryQ.get_carry_in(45), r800_ffff_tmp145));
          r800_ffff_tmp146 = simd_and(r800_ffff_tmp145, bytetest_8f_8f);
          struct_Lm.cc = simd_or(r800_ffff_tmp146, struct_Lm.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, r800_ffff_tmp5);
          bytetest_a9 = simd_and(r800_ffff_tmp3, r800_ffff_tmp21);
          bytetest_b0_b0 = simd_andc(tmp13, tmp6);
          r800_ffff_tmp147 = simd_and(r800_ffff_tmp115, bytetest_a9);
          carryQ.cq[46] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp147, carryQ.get_carry_in(46), r800_ffff_tmp148));
          r800_ffff_tmp149 = simd_and(r800_ffff_tmp148, bytetest_b0_b0);
          struct_Lm.cc = simd_or(r800_ffff_tmp149, struct_Lm.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, r800_ffff_tmp5);
          bytetest_ab = simd_and(r800_ffff_tmp3, r800_ffff_tmp27);
          bytetest_9d_9d = simd_and(tmp9, r800_ffff_tmp133);
          r800_ffff_tmp150 = simd_and(r800_ffff_tmp115, bytetest_ab);
          carryQ.cq[47] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp150, carryQ.get_carry_in(47), r800_ffff_tmp151));
          r800_ffff_tmp152 = simd_and(r800_ffff_tmp151, bytetest_9d_9d);
          struct_Lm.cc = simd_or(r800_ffff_tmp152, struct_Lm.cc);
          bytetest_ea = simd_and(r800_ffff_tmp2, r800_ffff_tmp5);
          bytetest_ab = simd_and(r800_ffff_tmp3, r800_ffff_tmp27);
          r800_ffff_tmp153 = simd_not(tmp5);
          r800_ffff_tmp154 = simd_or(simd_and(basis_bits.bit_5, r800_ffff_tmp153), simd_andc(tmp16, basis_bits.bit_5));
          bytetest_b3_b4 = simd_and(r800_ffff_tmp99, r800_ffff_tmp154);
          r800_ffff_tmp155 = simd_and(r800_ffff_tmp151, bytetest_b3_b4);
          struct_Lm.cc = simd_or(r800_ffff_tmp155, struct_Lm.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp38);
          bytetest_bd = simd_and(tmp13, r800_ffff_tmp133);
          bytetest_b0_b0 = simd_andc(tmp13, tmp6);
          r800_ffff_tmp156 = simd_and(tmp20, bytetest_ef);
          carryQ.cq[48] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp156, carryQ.get_carry_in(48), r800_ffff_tmp157));
          r800_ffff_tmp158 = simd_and(r800_ffff_tmp157, bytetest_bd);
          carryQ.cq[49] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp158, carryQ.get_carry_in(49), r800_ffff_tmp159));
          r800_ffff_tmp160 = simd_and(r800_ffff_tmp159, bytetest_b0_b0);
          struct_Lm.cc = simd_or(r800_ffff_tmp160, struct_Lm.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp38);
          bytetest_be = simd_and(tmp13, tmp15);
          r800_ffff_tmp161 = simd_and(tmp14, basis_bits.bit_6);
          bytetest_9e_9f = simd_and(tmp9, r800_ffff_tmp161);
          r800_ffff_tmp162 = simd_and(r800_ffff_tmp157, bytetest_be);
          carryQ.cq[50] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp162, carryQ.get_carry_in(50), r800_ffff_tmp163));
          r800_ffff_tmp164 = simd_and(r800_ffff_tmp163, bytetest_9e_9f);
          struct_Lm.cc = simd_or(r800_ffff_tmp164, struct_Lm.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(12, 39);
        }
  }
  CarryArray<51, 0> carryQ;
  };

  struct Nd {
  Nd() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Nd & struct_Nd) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, bytetest_30_39, tmp6, tmp7, tmp8, tmp9;
		BitBlock tmp10, bytetest_f0, tmp11, tmp12, tmp13, tmp14, tmp15, bytetest_91;
		BitBlock tmp16, tmp17, bytetest_81, tmp18, tmp19, tmp20, tmp21, bytetest_a6_af;
		BitBlock tmp22, tmp23, tmp24, tmp25, tmp26, tmp27, tmp28, tmp29, tmp30, tmp31;
		BitBlock tmp32, bytetest_83, tmp33, bytetest_b0_b9, tmp34, tmp35, tmp36, tmp37;
		BitBlock tmp38, bytetest_84, bytetest_b6_bf, tmp39, tmp40, tmp41, tmp42;
		BitBlock bytetest_87, bytetest_90_99, tmp43, tmp44, tmp45, tmp46, tmp47;
		BitBlock bytetest_9b, bytetest_80_89, tmp48, tmp49, tmp50, tmp51, tmp52;
		BitBlock bytetest_9d, tmp53, bytetest_9f, tmp54, tmp55, tmp56, bytetest_8e_bf;
		BitBlock tmp57, tmp58, tmp59, tmp60, tmp61, tmp62, tmp63, tmp64;
		BitBlock bytetest_c2_df, r80_7ff_tmp1, r80_7ff_tmp2, bytetest_d9;
		BitBlock bytetest_a0_a9, r80_7ff_tmp3, r80_7ff_tmp4, r80_7ff_tmp5, bytetest_db;
		BitBlock r80_7ff_tmp6, r80_7ff_tmp7, r80_7ff_tmp8, bytetest_df, r80_7ff_tmp9;
		BitBlock r80_7ff_tmp10, r80_7ff_tmp11, tmp65, tmp66, tmp67, bytetest_e1_ef;
		BitBlock bytetest_e0, bytetest_a0_bf, tmp68, tmp69, tmp70, tmp71;
		BitBlock r800_ffff_tmp1, r800_ffff_tmp2, bytetest_a5, r800_ffff_tmp3;
		BitBlock r800_ffff_tmp4, r800_ffff_tmp5, r800_ffff_tmp6, r800_ffff_tmp7;
		BitBlock bytetest_a7, r800_ffff_tmp8, r800_ffff_tmp9, r800_ffff_tmp10;
		BitBlock r800_ffff_tmp11, bytetest_a9, r800_ffff_tmp12, r800_ffff_tmp13;
		BitBlock r800_ffff_tmp14, bytetest_ab, r800_ffff_tmp15, r800_ffff_tmp16;
		BitBlock r800_ffff_tmp17, bytetest_ad, r800_ffff_tmp18, r800_ffff_tmp19;
		BitBlock r800_ffff_tmp20, bytetest_af, r800_ffff_tmp21, r800_ffff_tmp22;
		BitBlock r800_ffff_tmp23, bytetest_b1, r800_ffff_tmp24, r800_ffff_tmp25;
		BitBlock r800_ffff_tmp26, bytetest_b3, r800_ffff_tmp27, r800_ffff_tmp28;
		BitBlock r800_ffff_tmp29, bytetest_b5, r800_ffff_tmp30, r800_ffff_tmp31;
		BitBlock r800_ffff_tmp32, bytetest_b9, r800_ffff_tmp33, r800_ffff_tmp34;
		BitBlock r800_ffff_tmp35, bytetest_bb, r800_ffff_tmp36, r800_ffff_tmp37;
		BitBlock r800_ffff_tmp38, r800_ffff_tmp39, bytetest_bc, r800_ffff_tmp40;
		BitBlock r800_ffff_tmp41, r800_ffff_tmp42, bytetest_e1, r800_ffff_tmp43;
		BitBlock r800_ffff_tmp44, r800_ffff_tmp45, r800_ffff_tmp46, r800_ffff_tmp47;
		BitBlock r800_ffff_tmp48, r800_ffff_tmp49, bytetest_82, r800_ffff_tmp50;
		BitBlock r800_ffff_tmp51, r800_ffff_tmp52, r800_ffff_tmp53, r800_ffff_tmp54;
		BitBlock r800_ffff_tmp55, bytetest_a0, r800_ffff_tmp56, r800_ffff_tmp57;
		BitBlock r800_ffff_tmp58, bytetest_86_8f, r800_ffff_tmp59, r800_ffff_tmp60;
		BitBlock r800_ffff_tmp61, r800_ffff_tmp62, r800_ffff_tmp63, r800_ffff_tmp64;
		BitBlock r800_ffff_tmp65, bytetest_aa, r800_ffff_tmp66, r800_ffff_tmp67;
		BitBlock r800_ffff_tmp68, r800_ffff_tmp69, r800_ffff_tmp70, r800_ffff_tmp71;
		BitBlock r800_ffff_tmp72, r800_ffff_tmp73, bytetest_ae, r800_ffff_tmp74;
		BitBlock r800_ffff_tmp75, r800_ffff_tmp76, r800_ffff_tmp77, r800_ffff_tmp78;
		BitBlock r800_ffff_tmp79, r800_ffff_tmp80, bytetest_ea, r800_ffff_tmp81;
		BitBlock bytetest_98, r800_ffff_tmp82, r800_ffff_tmp83, r800_ffff_tmp84;
		BitBlock r800_ffff_tmp85, r800_ffff_tmp86, bytetest_a3, r800_ffff_tmp87;
		BitBlock r800_ffff_tmp88, r800_ffff_tmp89, bytetest_a4, r800_ffff_tmp90;
		BitBlock r800_ffff_tmp91, r800_ffff_tmp92, r800_ffff_tmp93, r800_ffff_tmp94;
		BitBlock r800_ffff_tmp95, r800_ffff_tmp96, r800_ffff_tmp97, r800_ffff_tmp98;
		BitBlock r800_ffff_tmp99, r800_ffff_tmp100, r800_ffff_tmp101, bytetest_ef;
		BitBlock r800_ffff_tmp102, r800_ffff_tmp103, r800_ffff_tmp104;
		BitBlock r800_ffff_tmp105, r800_ffff_tmp106, bytetest_90, bytetest_80_bf;
		BitBlock tmp72, tmp73, tmp74, r10000_10fff_tmp1, r10000_10fff_tmp2;
		BitBlock bytetest_92, r10000_10fff_tmp3, r10000_10fff_tmp4, r10000_10fff_tmp5;
		BitBlock r10000_10fff_tmp6, r10000_10fff_tmp7;




        struct_Nd.cc = simd<1>::constant<0>();
        tmp1 = simd_or(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp2, tmp1);
        tmp4 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
        tmp5 = simd_and(basis_bits.bit_4, tmp4);
        bytetest_30_39 = simd_andc(tmp3, tmp5);
        struct_Nd.cc = simd_or(bytetest_30_39, struct_Nd.cc);
        tmp6 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp7 = simd_and(tmp6, tmp2);
        tmp8 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp9 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp10 = simd_or(tmp8, tmp9);
        bytetest_f0 = simd_andc(tmp7, tmp10);
        tmp11 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp12 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp13 = simd_and(tmp11, tmp12);
        tmp14 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp15 = simd_andc(tmp14, tmp8);
        bytetest_91 = simd_and(tmp13, tmp15);
        tmp16 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp17 = simd_andc(tmp11, tmp16);
        bytetest_81 = simd_and(tmp17, tmp15);
        tmp18 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp19 = simd_and(tmp11, tmp18);
        tmp20 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp21 = simd_or(basis_bits.bit_4, tmp20);
        bytetest_a6_af = simd_and(tmp19, tmp21);
        tmp22 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp22, carryQ.get_carry_in(0), tmp23));
        tmp24 = simd_and(tmp23, bytetest_f0);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp24, carryQ.get_carry_in(1), tmp25));
        tmp26 = simd_and(tmp25, bytetest_91);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp26, carryQ.get_carry_in(2), tmp27));
        tmp28 = simd_and(tmp27, bytetest_81);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp28, carryQ.get_carry_in(3), tmp29));
        tmp30 = simd_and(tmp29, bytetest_a6_af);
        struct_Nd.cc = simd_or(tmp30, struct_Nd.cc);
        bytetest_f0 = simd_andc(tmp7, tmp10);
        bytetest_91 = simd_and(tmp13, tmp15);
        tmp31 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp32 = simd_andc(tmp31, tmp8);
        bytetest_83 = simd_and(tmp17, tmp32);
        tmp33 = simd_and(tmp11, tmp2);
        bytetest_b0_b9 = simd_andc(tmp33, tmp5);
        tmp34 = simd_and(tmp27, bytetest_83);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp34, carryQ.get_carry_in(4), tmp35));
        tmp36 = simd_and(tmp35, bytetest_b0_b9);
        struct_Nd.cc = simd_or(tmp36, struct_Nd.cc);
        bytetest_f0 = simd_andc(tmp7, tmp10);
        bytetest_91 = simd_and(tmp13, tmp15);
        tmp37 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp38 = simd_andc(tmp37, tmp9);
        bytetest_84 = simd_and(tmp17, tmp38);
        bytetest_b6_bf = simd_and(tmp33, tmp21);
        tmp39 = simd_and(tmp27, bytetest_84);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp39, carryQ.get_carry_in(5), tmp40));
        tmp41 = simd_and(tmp40, bytetest_b6_bf);
        struct_Nd.cc = simd_or(tmp41, struct_Nd.cc);
        bytetest_f0 = simd_andc(tmp7, tmp10);
        bytetest_91 = simd_and(tmp13, tmp15);
        tmp42 = simd_and(tmp37, tmp31);
        bytetest_87 = simd_and(tmp17, tmp42);
        bytetest_90_99 = simd_andc(tmp13, tmp5);
        tmp43 = simd_and(tmp27, bytetest_87);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp43, carryQ.get_carry_in(6), tmp44));
        tmp45 = simd_and(tmp44, bytetest_90_99);
        struct_Nd.cc = simd_or(tmp45, struct_Nd.cc);
        bytetest_f0 = simd_andc(tmp7, tmp10);
        bytetest_91 = simd_and(tmp13, tmp15);
        tmp46 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp47 = simd_and(tmp46, tmp31);
        bytetest_9b = simd_and(tmp13, tmp47);
        bytetest_80_89 = simd_andc(tmp17, tmp5);
        tmp48 = simd_and(tmp27, bytetest_9b);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp48, carryQ.get_carry_in(7), tmp49));
        tmp50 = simd_and(tmp49, bytetest_80_89);
        struct_Nd.cc = simd_or(tmp50, struct_Nd.cc);
        bytetest_f0 = simd_andc(tmp7, tmp10);
        tmp51 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp52 = simd_and(tmp51, tmp14);
        bytetest_9d = simd_and(tmp13, tmp52);
        tmp53 = simd_and(tmp51, tmp31);
        bytetest_9f = simd_and(tmp13, tmp53);
        tmp54 = simd_and(tmp51, basis_bits.bit_6);
        tmp55 = simd_or(basis_bits.bit_3, tmp54);
        tmp56 = simd_or(basis_bits.bit_2, tmp55);
        bytetest_8e_bf = simd_and(tmp11, tmp56);
        tmp57 = simd_and(tmp25, bytetest_9d);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(tmp57, carryQ.get_carry_in(8), tmp58));
        tmp59 = simd_and(tmp58, bytetest_9f);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(tmp59, carryQ.get_carry_in(9), tmp60));
        tmp61 = simd_and(tmp60, bytetest_8e_bf);
        struct_Nd.cc = simd_or(tmp61, struct_Nd.cc);
        tmp62 = simd_andc(tmp6, basis_bits.bit_2);
        tmp63 = simd_or(tmp8, basis_bits.bit_6);
        tmp64 = simd_or(basis_bits.bit_3, tmp63);
        bytetest_c2_df = simd_and(tmp62, tmp64);
        if ((bitblock::any(bytetest_c2_df) || carryQ.CarryTest(10, 3))) {
          r80_7ff_tmp1 = simd_and(tmp6, tmp12);
          r80_7ff_tmp2 = simd_and(tmp46, tmp14);
          bytetest_d9 = simd_and(r80_7ff_tmp1, r80_7ff_tmp2);
          bytetest_a0_a9 = simd_andc(tmp19, tmp5);
          r80_7ff_tmp3 = simd_and(tmp23, bytetest_d9);
          carryQ.cq[10] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp3, carryQ.get_carry_in(10), r80_7ff_tmp4));
          r80_7ff_tmp5 = simd_and(r80_7ff_tmp4, bytetest_a0_a9);
          struct_Nd.cc = simd_or(r80_7ff_tmp5, struct_Nd.cc);
          bytetest_db = simd_and(r80_7ff_tmp1, tmp47);
          bytetest_b0_b9 = simd_andc(tmp33, tmp5);
          r80_7ff_tmp6 = simd_and(tmp23, bytetest_db);
          carryQ.cq[11] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp6, carryQ.get_carry_in(11), r80_7ff_tmp7));
          r80_7ff_tmp8 = simd_and(r80_7ff_tmp7, bytetest_b0_b9);
          struct_Nd.cc = simd_or(r80_7ff_tmp8, struct_Nd.cc);
          bytetest_df = simd_and(r80_7ff_tmp1, tmp53);
          bytetest_80_89 = simd_andc(tmp17, tmp5);
          r80_7ff_tmp9 = simd_and(tmp23, bytetest_df);
          carryQ.cq[12] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp9, carryQ.get_carry_in(12), r80_7ff_tmp10));
          r80_7ff_tmp11 = simd_and(r80_7ff_tmp10, bytetest_80_89);
          struct_Nd.cc = simd_or(r80_7ff_tmp11, struct_Nd.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(10, 3);
        }
        tmp65 = simd_and(tmp6, tmp18);
        tmp66 = simd_or(basis_bits.bit_5, tmp9);
        tmp67 = simd_or(basis_bits.bit_4, tmp66);
        bytetest_e1_ef = simd_and(tmp65, tmp67);
        bytetest_e0 = simd_andc(tmp65, tmp10);
        bytetest_a0_bf = simd_and(tmp11, basis_bits.bit_2);
        tmp68 = simd_and(tmp23, bytetest_e0);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(tmp68, carryQ.get_carry_in(13), tmp69));
        tmp70 = simd_and(tmp69, bytetest_a0_bf);
        tmp71 = simd_or(tmp70, bytetest_e1_ef);
        if ((bitblock::any(tmp71) || carryQ.CarryTest(14, 33))) {
          r800_ffff_tmp1 = simd_and(tmp6, tmp18);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp10);
          r800_ffff_tmp2 = simd_and(tmp37, tmp14);
          bytetest_a5 = simd_and(tmp19, r800_ffff_tmp2);
          bytetest_a6_af = simd_and(tmp19, tmp21);
          r800_ffff_tmp3 = simd_and(tmp23, bytetest_e0);
          carryQ.cq[14] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp3, carryQ.get_carry_in(14), r800_ffff_tmp4));
          r800_ffff_tmp5 = simd_and(r800_ffff_tmp4, bytetest_a5);
          carryQ.cq[15] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp5, carryQ.get_carry_in(15), r800_ffff_tmp6));
          r800_ffff_tmp7 = simd_and(r800_ffff_tmp6, bytetest_a6_af);
          struct_Nd.cc = simd_or(r800_ffff_tmp7, struct_Nd.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp10);
          bytetest_a7 = simd_and(tmp19, tmp42);
          bytetest_a6_af = simd_and(tmp19, tmp21);
          r800_ffff_tmp8 = simd_and(r800_ffff_tmp4, bytetest_a7);
          carryQ.cq[16] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp8, carryQ.get_carry_in(16), r800_ffff_tmp9));
          r800_ffff_tmp10 = simd_and(r800_ffff_tmp9, bytetest_a6_af);
          struct_Nd.cc = simd_or(r800_ffff_tmp10, struct_Nd.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp10);
          r800_ffff_tmp11 = simd_and(tmp46, tmp14);
          bytetest_a9 = simd_and(tmp19, r800_ffff_tmp11);
          bytetest_a6_af = simd_and(tmp19, tmp21);
          r800_ffff_tmp12 = simd_and(r800_ffff_tmp4, bytetest_a9);
          carryQ.cq[17] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp12, carryQ.get_carry_in(17), r800_ffff_tmp13));
          r800_ffff_tmp14 = simd_and(r800_ffff_tmp13, bytetest_a6_af);
          struct_Nd.cc = simd_or(r800_ffff_tmp14, struct_Nd.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp10);
          bytetest_ab = simd_and(tmp19, tmp47);
          bytetest_a6_af = simd_and(tmp19, tmp21);
          r800_ffff_tmp15 = simd_and(r800_ffff_tmp4, bytetest_ab);
          carryQ.cq[18] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp15, carryQ.get_carry_in(18), r800_ffff_tmp16));
          r800_ffff_tmp17 = simd_and(r800_ffff_tmp16, bytetest_a6_af);
          struct_Nd.cc = simd_or(r800_ffff_tmp17, struct_Nd.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp10);
          bytetest_ad = simd_and(tmp19, tmp52);
          bytetest_a6_af = simd_and(tmp19, tmp21);
          r800_ffff_tmp18 = simd_and(r800_ffff_tmp4, bytetest_ad);
          carryQ.cq[19] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp18, carryQ.get_carry_in(19), r800_ffff_tmp19));
          r800_ffff_tmp20 = simd_and(r800_ffff_tmp19, bytetest_a6_af);
          struct_Nd.cc = simd_or(r800_ffff_tmp20, struct_Nd.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp10);
          bytetest_af = simd_and(tmp19, tmp53);
          bytetest_a6_af = simd_and(tmp19, tmp21);
          r800_ffff_tmp21 = simd_and(r800_ffff_tmp4, bytetest_af);
          carryQ.cq[20] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp21, carryQ.get_carry_in(20), r800_ffff_tmp22));
          r800_ffff_tmp23 = simd_and(r800_ffff_tmp22, bytetest_a6_af);
          struct_Nd.cc = simd_or(r800_ffff_tmp23, struct_Nd.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp10);
          bytetest_b1 = simd_and(tmp33, tmp15);
          bytetest_a6_af = simd_and(tmp19, tmp21);
          r800_ffff_tmp24 = simd_and(r800_ffff_tmp4, bytetest_b1);
          carryQ.cq[21] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp24, carryQ.get_carry_in(21), r800_ffff_tmp25));
          r800_ffff_tmp26 = simd_and(r800_ffff_tmp25, bytetest_a6_af);
          struct_Nd.cc = simd_or(r800_ffff_tmp26, struct_Nd.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp10);
          bytetest_b3 = simd_and(tmp33, tmp32);
          bytetest_a6_af = simd_and(tmp19, tmp21);
          r800_ffff_tmp27 = simd_and(r800_ffff_tmp4, bytetest_b3);
          carryQ.cq[22] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp27, carryQ.get_carry_in(22), r800_ffff_tmp28));
          r800_ffff_tmp29 = simd_and(r800_ffff_tmp28, bytetest_a6_af);
          struct_Nd.cc = simd_or(r800_ffff_tmp29, struct_Nd.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp10);
          bytetest_b5 = simd_and(tmp33, r800_ffff_tmp2);
          bytetest_a6_af = simd_and(tmp19, tmp21);
          r800_ffff_tmp30 = simd_and(r800_ffff_tmp4, bytetest_b5);
          carryQ.cq[23] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp30, carryQ.get_carry_in(23), r800_ffff_tmp31));
          r800_ffff_tmp32 = simd_and(r800_ffff_tmp31, bytetest_a6_af);
          struct_Nd.cc = simd_or(r800_ffff_tmp32, struct_Nd.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp10);
          bytetest_b9 = simd_and(tmp33, r800_ffff_tmp11);
          bytetest_90_99 = simd_andc(tmp13, tmp5);
          r800_ffff_tmp33 = simd_and(r800_ffff_tmp4, bytetest_b9);
          carryQ.cq[24] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp33, carryQ.get_carry_in(24), r800_ffff_tmp34));
          r800_ffff_tmp35 = simd_and(r800_ffff_tmp34, bytetest_90_99);
          struct_Nd.cc = simd_or(r800_ffff_tmp35, struct_Nd.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp10);
          bytetest_bb = simd_and(tmp33, tmp47);
          bytetest_90_99 = simd_andc(tmp13, tmp5);
          r800_ffff_tmp36 = simd_and(r800_ffff_tmp4, bytetest_bb);
          carryQ.cq[25] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp36, carryQ.get_carry_in(25), r800_ffff_tmp37));
          r800_ffff_tmp38 = simd_and(r800_ffff_tmp37, bytetest_90_99);
          struct_Nd.cc = simd_or(r800_ffff_tmp38, struct_Nd.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp10);
          r800_ffff_tmp39 = simd_andc(tmp51, tmp9);
          bytetest_bc = simd_and(tmp33, r800_ffff_tmp39);
          bytetest_a0_a9 = simd_andc(tmp19, tmp5);
          r800_ffff_tmp40 = simd_and(r800_ffff_tmp4, bytetest_bc);
          carryQ.cq[26] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp40, carryQ.get_carry_in(26), r800_ffff_tmp41));
          r800_ffff_tmp42 = simd_and(r800_ffff_tmp41, bytetest_a0_a9);
          struct_Nd.cc = simd_or(r800_ffff_tmp42, struct_Nd.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp15);
          bytetest_81 = simd_and(tmp17, tmp15);
          bytetest_80_89 = simd_andc(tmp17, tmp5);
          r800_ffff_tmp43 = simd_and(tmp23, bytetest_e1);
          carryQ.cq[27] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp43, carryQ.get_carry_in(27), r800_ffff_tmp44));
          r800_ffff_tmp45 = simd_and(r800_ffff_tmp44, bytetest_81);
          carryQ.cq[28] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp45, carryQ.get_carry_in(28), r800_ffff_tmp46));
          r800_ffff_tmp47 = simd_and(r800_ffff_tmp46, bytetest_80_89);
          struct_Nd.cc = simd_or(r800_ffff_tmp47, struct_Nd.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp15);
          r800_ffff_tmp48 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp49 = simd_andc(r800_ffff_tmp48, tmp8);
          bytetest_82 = simd_and(tmp17, r800_ffff_tmp49);
          bytetest_90_99 = simd_andc(tmp13, tmp5);
          r800_ffff_tmp50 = simd_and(r800_ffff_tmp44, bytetest_82);
          carryQ.cq[29] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp50, carryQ.get_carry_in(29), r800_ffff_tmp51));
          r800_ffff_tmp52 = simd_and(r800_ffff_tmp51, bytetest_90_99);
          struct_Nd.cc = simd_or(r800_ffff_tmp52, struct_Nd.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp15);
          bytetest_9f = simd_and(tmp13, tmp53);
          bytetest_a0_a9 = simd_andc(tmp19, tmp5);
          r800_ffff_tmp53 = simd_and(r800_ffff_tmp44, bytetest_9f);
          carryQ.cq[30] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp53, carryQ.get_carry_in(30), r800_ffff_tmp54));
          r800_ffff_tmp55 = simd_and(r800_ffff_tmp54, bytetest_a0_a9);
          struct_Nd.cc = simd_or(r800_ffff_tmp55, struct_Nd.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp15);
          bytetest_a0 = simd_andc(tmp19, tmp10);
          bytetest_90_99 = simd_andc(tmp13, tmp5);
          r800_ffff_tmp56 = simd_and(r800_ffff_tmp44, bytetest_a0);
          carryQ.cq[31] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp56, carryQ.get_carry_in(31), r800_ffff_tmp57));
          r800_ffff_tmp58 = simd_and(r800_ffff_tmp57, bytetest_90_99);
          struct_Nd.cc = simd_or(r800_ffff_tmp58, struct_Nd.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp15);
          bytetest_a5 = simd_and(tmp19, r800_ffff_tmp2);
          bytetest_86_8f = simd_and(tmp17, tmp21);
          r800_ffff_tmp59 = simd_and(r800_ffff_tmp44, bytetest_a5);
          carryQ.cq[32] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp59, carryQ.get_carry_in(32), r800_ffff_tmp60));
          r800_ffff_tmp61 = simd_and(r800_ffff_tmp60, bytetest_86_8f);
          struct_Nd.cc = simd_or(r800_ffff_tmp61, struct_Nd.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp15);
          bytetest_a7 = simd_and(tmp19, tmp42);
          bytetest_90_99 = simd_andc(tmp13, tmp5);
          r800_ffff_tmp62 = simd_and(r800_ffff_tmp44, bytetest_a7);
          carryQ.cq[33] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp62, carryQ.get_carry_in(33), r800_ffff_tmp63));
          r800_ffff_tmp64 = simd_and(r800_ffff_tmp63, bytetest_90_99);
          struct_Nd.cc = simd_or(r800_ffff_tmp64, struct_Nd.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp15);
          r800_ffff_tmp65 = simd_and(tmp46, r800_ffff_tmp48);
          bytetest_aa = simd_and(tmp19, r800_ffff_tmp65);
          bytetest_80_89 = simd_andc(tmp17, tmp5);
          r800_ffff_tmp66 = simd_and(r800_ffff_tmp44, bytetest_aa);
          carryQ.cq[34] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp66, carryQ.get_carry_in(34), r800_ffff_tmp67));
          r800_ffff_tmp68 = simd_and(r800_ffff_tmp67, bytetest_80_89);
          struct_Nd.cc = simd_or(r800_ffff_tmp68, struct_Nd.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp15);
          bytetest_aa = simd_and(tmp19, r800_ffff_tmp65);
          bytetest_90_99 = simd_andc(tmp13, tmp5);
          r800_ffff_tmp69 = simd_and(r800_ffff_tmp67, bytetest_90_99);
          struct_Nd.cc = simd_or(r800_ffff_tmp69, struct_Nd.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp15);
          bytetest_ad = simd_and(tmp19, tmp52);
          bytetest_90_99 = simd_andc(tmp13, tmp5);
          r800_ffff_tmp70 = simd_and(r800_ffff_tmp44, bytetest_ad);
          carryQ.cq[35] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp70, carryQ.get_carry_in(35), r800_ffff_tmp71));
          r800_ffff_tmp72 = simd_and(r800_ffff_tmp71, bytetest_90_99);
          struct_Nd.cc = simd_or(r800_ffff_tmp72, struct_Nd.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp15);
          r800_ffff_tmp73 = simd_and(tmp51, r800_ffff_tmp48);
          bytetest_ae = simd_and(tmp19, r800_ffff_tmp73);
          bytetest_b0_b9 = simd_andc(tmp33, tmp5);
          r800_ffff_tmp74 = simd_and(r800_ffff_tmp44, bytetest_ae);
          carryQ.cq[36] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp74, carryQ.get_carry_in(36), r800_ffff_tmp75));
          r800_ffff_tmp76 = simd_and(r800_ffff_tmp75, bytetest_b0_b9);
          struct_Nd.cc = simd_or(r800_ffff_tmp76, struct_Nd.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp15);
          bytetest_b1 = simd_and(tmp33, tmp15);
          bytetest_80_89 = simd_andc(tmp17, tmp5);
          r800_ffff_tmp77 = simd_and(r800_ffff_tmp44, bytetest_b1);
          carryQ.cq[37] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp77, carryQ.get_carry_in(37), r800_ffff_tmp78));
          r800_ffff_tmp79 = simd_and(r800_ffff_tmp78, bytetest_80_89);
          struct_Nd.cc = simd_or(r800_ffff_tmp79, struct_Nd.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp15);
          bytetest_b1 = simd_and(tmp33, tmp15);
          bytetest_90_99 = simd_andc(tmp13, tmp5);
          r800_ffff_tmp80 = simd_and(r800_ffff_tmp78, bytetest_90_99);
          struct_Nd.cc = simd_or(r800_ffff_tmp80, struct_Nd.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, r800_ffff_tmp65);
          r800_ffff_tmp81 = simd_andc(tmp46, tmp9);
          bytetest_98 = simd_and(tmp13, r800_ffff_tmp81);
          bytetest_a0_a9 = simd_andc(tmp19, tmp5);
          r800_ffff_tmp82 = simd_and(tmp23, bytetest_ea);
          carryQ.cq[38] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp82, carryQ.get_carry_in(38), r800_ffff_tmp83));
          r800_ffff_tmp84 = simd_and(r800_ffff_tmp83, bytetest_98);
          carryQ.cq[39] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp84, carryQ.get_carry_in(39), r800_ffff_tmp85));
          r800_ffff_tmp86 = simd_and(r800_ffff_tmp85, bytetest_a0_a9);
          struct_Nd.cc = simd_or(r800_ffff_tmp86, struct_Nd.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, r800_ffff_tmp65);
          bytetest_a3 = simd_and(tmp19, tmp32);
          bytetest_90_99 = simd_andc(tmp13, tmp5);
          r800_ffff_tmp87 = simd_and(r800_ffff_tmp83, bytetest_a3);
          carryQ.cq[40] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp87, carryQ.get_carry_in(40), r800_ffff_tmp88));
          r800_ffff_tmp89 = simd_and(r800_ffff_tmp88, bytetest_90_99);
          struct_Nd.cc = simd_or(r800_ffff_tmp89, struct_Nd.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, r800_ffff_tmp65);
          bytetest_a4 = simd_and(tmp19, tmp38);
          bytetest_80_89 = simd_andc(tmp17, tmp5);
          r800_ffff_tmp90 = simd_and(r800_ffff_tmp83, bytetest_a4);
          carryQ.cq[41] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp90, carryQ.get_carry_in(41), r800_ffff_tmp91));
          r800_ffff_tmp92 = simd_and(r800_ffff_tmp91, bytetest_80_89);
          struct_Nd.cc = simd_or(r800_ffff_tmp92, struct_Nd.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, r800_ffff_tmp65);
          bytetest_a7 = simd_and(tmp19, tmp42);
          bytetest_90_99 = simd_andc(tmp13, tmp5);
          r800_ffff_tmp93 = simd_and(r800_ffff_tmp83, bytetest_a7);
          carryQ.cq[42] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp93, carryQ.get_carry_in(42), r800_ffff_tmp94));
          r800_ffff_tmp95 = simd_and(r800_ffff_tmp94, bytetest_90_99);
          struct_Nd.cc = simd_or(r800_ffff_tmp95, struct_Nd.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, r800_ffff_tmp65);
          bytetest_a9 = simd_and(tmp19, r800_ffff_tmp11);
          bytetest_90_99 = simd_andc(tmp13, tmp5);
          r800_ffff_tmp96 = simd_and(r800_ffff_tmp83, bytetest_a9);
          carryQ.cq[43] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp96, carryQ.get_carry_in(43), r800_ffff_tmp97));
          r800_ffff_tmp98 = simd_and(r800_ffff_tmp97, bytetest_90_99);
          struct_Nd.cc = simd_or(r800_ffff_tmp98, struct_Nd.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, r800_ffff_tmp65);
          bytetest_af = simd_and(tmp19, tmp53);
          bytetest_b0_b9 = simd_andc(tmp33, tmp5);
          r800_ffff_tmp99 = simd_and(r800_ffff_tmp83, bytetest_af);
          carryQ.cq[44] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp99, carryQ.get_carry_in(44), r800_ffff_tmp100));
          r800_ffff_tmp101 = simd_and(r800_ffff_tmp100, bytetest_b0_b9);
          struct_Nd.cc = simd_or(r800_ffff_tmp101, struct_Nd.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp53);
          bytetest_bc = simd_and(tmp33, r800_ffff_tmp39);
          bytetest_90_99 = simd_andc(tmp13, tmp5);
          r800_ffff_tmp102 = simd_and(tmp23, bytetest_ef);
          carryQ.cq[45] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp102, carryQ.get_carry_in(45), r800_ffff_tmp103));
          r800_ffff_tmp104 = simd_and(r800_ffff_tmp103, bytetest_bc);
          carryQ.cq[46] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp104, carryQ.get_carry_in(46), r800_ffff_tmp105));
          r800_ffff_tmp106 = simd_and(r800_ffff_tmp105, bytetest_90_99);
          struct_Nd.cc = simd_or(r800_ffff_tmp106, struct_Nd.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(14, 33);
        }
        bytetest_f0 = simd_andc(tmp7, tmp10);
        bytetest_90 = simd_andc(tmp13, tmp10);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp72 = simd_and(tmp25, bytetest_90);
        carryQ.cq[47] = carryout2carry(pablo_blk_Advance(tmp72, carryQ.get_carry_in(47), tmp73));
        tmp74 = simd_and(tmp73, bytetest_80_bf);
        if ((bitblock::any(tmp74) || carryQ.CarryTest(48, 2))) {
          bytetest_f0 = simd_andc(tmp7, tmp10);
          bytetest_90 = simd_andc(tmp13, tmp10);
          r10000_10fff_tmp1 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
          r10000_10fff_tmp2 = simd_andc(r10000_10fff_tmp1, tmp8);
          bytetest_92 = simd_and(tmp13, r10000_10fff_tmp2);
          bytetest_a0_a9 = simd_andc(tmp19, tmp5);
          r10000_10fff_tmp3 = simd_and(tmp25, bytetest_90);
          carryQ.cq[48] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp3, carryQ.get_carry_in(48), r10000_10fff_tmp4));
          r10000_10fff_tmp5 = simd_and(r10000_10fff_tmp4, bytetest_92);
          carryQ.cq[49] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp5, carryQ.get_carry_in(49), r10000_10fff_tmp6));
          r10000_10fff_tmp7 = simd_and(r10000_10fff_tmp6, bytetest_a0_a9);
          struct_Nd.cc = simd_or(r10000_10fff_tmp7, struct_Nd.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(48, 2);
        }
        carryQ.CarryQ_Adjust(50);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Nd & struct_Nd, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, bytetest_30_39, tmp6, tmp7, tmp8, tmp9;
		BitBlock tmp10, bytetest_f0, tmp11, tmp12, tmp13, tmp14, tmp15, bytetest_91;
		BitBlock tmp16, tmp17, bytetest_81, tmp18, tmp19, tmp20, tmp21, bytetest_a6_af;
		BitBlock tmp22, tmp23, tmp24, tmp25, tmp26, tmp27, tmp28, tmp29, tmp30, tmp31;
		BitBlock tmp32, bytetest_83, tmp33, bytetest_b0_b9, tmp34, tmp35, tmp36, tmp37;
		BitBlock tmp38, bytetest_84, bytetest_b6_bf, tmp39, tmp40, tmp41, tmp42;
		BitBlock bytetest_87, bytetest_90_99, tmp43, tmp44, tmp45, tmp46, tmp47;
		BitBlock bytetest_9b, bytetest_80_89, tmp48, tmp49, tmp50, tmp51, tmp52;
		BitBlock bytetest_9d, tmp53, bytetest_9f, tmp54, tmp55, tmp56, bytetest_8e_bf;
		BitBlock tmp57, tmp58, tmp59, tmp60, tmp61, tmp62, tmp63, tmp64;
		BitBlock bytetest_c2_df, r80_7ff_tmp1, r80_7ff_tmp2, bytetest_d9;
		BitBlock bytetest_a0_a9, r80_7ff_tmp3, r80_7ff_tmp4, r80_7ff_tmp5, bytetest_db;
		BitBlock r80_7ff_tmp6, r80_7ff_tmp7, r80_7ff_tmp8, bytetest_df, r80_7ff_tmp9;
		BitBlock r80_7ff_tmp10, r80_7ff_tmp11, tmp65, tmp66, tmp67, bytetest_e1_ef;
		BitBlock bytetest_e0, bytetest_a0_bf, tmp68, tmp69, tmp70, tmp71;
		BitBlock r800_ffff_tmp1, r800_ffff_tmp2, bytetest_a5, r800_ffff_tmp3;
		BitBlock r800_ffff_tmp4, r800_ffff_tmp5, r800_ffff_tmp6, r800_ffff_tmp7;
		BitBlock bytetest_a7, r800_ffff_tmp8, r800_ffff_tmp9, r800_ffff_tmp10;
		BitBlock r800_ffff_tmp11, bytetest_a9, r800_ffff_tmp12, r800_ffff_tmp13;
		BitBlock r800_ffff_tmp14, bytetest_ab, r800_ffff_tmp15, r800_ffff_tmp16;
		BitBlock r800_ffff_tmp17, bytetest_ad, r800_ffff_tmp18, r800_ffff_tmp19;
		BitBlock r800_ffff_tmp20, bytetest_af, r800_ffff_tmp21, r800_ffff_tmp22;
		BitBlock r800_ffff_tmp23, bytetest_b1, r800_ffff_tmp24, r800_ffff_tmp25;
		BitBlock r800_ffff_tmp26, bytetest_b3, r800_ffff_tmp27, r800_ffff_tmp28;
		BitBlock r800_ffff_tmp29, bytetest_b5, r800_ffff_tmp30, r800_ffff_tmp31;
		BitBlock r800_ffff_tmp32, bytetest_b9, r800_ffff_tmp33, r800_ffff_tmp34;
		BitBlock r800_ffff_tmp35, bytetest_bb, r800_ffff_tmp36, r800_ffff_tmp37;
		BitBlock r800_ffff_tmp38, r800_ffff_tmp39, bytetest_bc, r800_ffff_tmp40;
		BitBlock r800_ffff_tmp41, r800_ffff_tmp42, bytetest_e1, r800_ffff_tmp43;
		BitBlock r800_ffff_tmp44, r800_ffff_tmp45, r800_ffff_tmp46, r800_ffff_tmp47;
		BitBlock r800_ffff_tmp48, r800_ffff_tmp49, bytetest_82, r800_ffff_tmp50;
		BitBlock r800_ffff_tmp51, r800_ffff_tmp52, r800_ffff_tmp53, r800_ffff_tmp54;
		BitBlock r800_ffff_tmp55, bytetest_a0, r800_ffff_tmp56, r800_ffff_tmp57;
		BitBlock r800_ffff_tmp58, bytetest_86_8f, r800_ffff_tmp59, r800_ffff_tmp60;
		BitBlock r800_ffff_tmp61, r800_ffff_tmp62, r800_ffff_tmp63, r800_ffff_tmp64;
		BitBlock r800_ffff_tmp65, bytetest_aa, r800_ffff_tmp66, r800_ffff_tmp67;
		BitBlock r800_ffff_tmp68, r800_ffff_tmp69, r800_ffff_tmp70, r800_ffff_tmp71;
		BitBlock r800_ffff_tmp72, r800_ffff_tmp73, bytetest_ae, r800_ffff_tmp74;
		BitBlock r800_ffff_tmp75, r800_ffff_tmp76, r800_ffff_tmp77, r800_ffff_tmp78;
		BitBlock r800_ffff_tmp79, r800_ffff_tmp80, bytetest_ea, r800_ffff_tmp81;
		BitBlock bytetest_98, r800_ffff_tmp82, r800_ffff_tmp83, r800_ffff_tmp84;
		BitBlock r800_ffff_tmp85, r800_ffff_tmp86, bytetest_a3, r800_ffff_tmp87;
		BitBlock r800_ffff_tmp88, r800_ffff_tmp89, bytetest_a4, r800_ffff_tmp90;
		BitBlock r800_ffff_tmp91, r800_ffff_tmp92, r800_ffff_tmp93, r800_ffff_tmp94;
		BitBlock r800_ffff_tmp95, r800_ffff_tmp96, r800_ffff_tmp97, r800_ffff_tmp98;
		BitBlock r800_ffff_tmp99, r800_ffff_tmp100, r800_ffff_tmp101, bytetest_ef;
		BitBlock r800_ffff_tmp102, r800_ffff_tmp103, r800_ffff_tmp104;
		BitBlock r800_ffff_tmp105, r800_ffff_tmp106, bytetest_90, bytetest_80_bf;
		BitBlock tmp72, tmp73, tmp74, r10000_10fff_tmp1, r10000_10fff_tmp2;
		BitBlock bytetest_92, r10000_10fff_tmp3, r10000_10fff_tmp4, r10000_10fff_tmp5;
		BitBlock r10000_10fff_tmp6, r10000_10fff_tmp7;




        struct_Nd.cc = simd<1>::constant<0>();
        tmp1 = simd_or(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp2, tmp1);
        tmp4 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
        tmp5 = simd_and(basis_bits.bit_4, tmp4);
        bytetest_30_39 = simd_andc(tmp3, tmp5);
        struct_Nd.cc = simd_or(bytetest_30_39, struct_Nd.cc);
        tmp6 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp7 = simd_and(tmp6, tmp2);
        tmp8 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp9 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp10 = simd_or(tmp8, tmp9);
        bytetest_f0 = simd_andc(tmp7, tmp10);
        tmp11 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp12 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp13 = simd_and(tmp11, tmp12);
        tmp14 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp15 = simd_andc(tmp14, tmp8);
        bytetest_91 = simd_and(tmp13, tmp15);
        tmp16 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp17 = simd_andc(tmp11, tmp16);
        bytetest_81 = simd_and(tmp17, tmp15);
        tmp18 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp19 = simd_and(tmp11, tmp18);
        tmp20 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp21 = simd_or(basis_bits.bit_4, tmp20);
        bytetest_a6_af = simd_and(tmp19, tmp21);
        tmp22 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp22, carryQ.get_carry_in(0), tmp23));
        tmp24 = simd_and(tmp23, bytetest_f0);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp24, carryQ.get_carry_in(1), tmp25));
        tmp26 = simd_and(tmp25, bytetest_91);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp26, carryQ.get_carry_in(2), tmp27));
        tmp28 = simd_and(tmp27, bytetest_81);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp28, carryQ.get_carry_in(3), tmp29));
        tmp30 = simd_and(tmp29, bytetest_a6_af);
        struct_Nd.cc = simd_or(tmp30, struct_Nd.cc);
        bytetest_f0 = simd_andc(tmp7, tmp10);
        bytetest_91 = simd_and(tmp13, tmp15);
        tmp31 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp32 = simd_andc(tmp31, tmp8);
        bytetest_83 = simd_and(tmp17, tmp32);
        tmp33 = simd_and(tmp11, tmp2);
        bytetest_b0_b9 = simd_andc(tmp33, tmp5);
        tmp34 = simd_and(tmp27, bytetest_83);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp34, carryQ.get_carry_in(4), tmp35));
        tmp36 = simd_and(tmp35, bytetest_b0_b9);
        struct_Nd.cc = simd_or(tmp36, struct_Nd.cc);
        bytetest_f0 = simd_andc(tmp7, tmp10);
        bytetest_91 = simd_and(tmp13, tmp15);
        tmp37 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp38 = simd_andc(tmp37, tmp9);
        bytetest_84 = simd_and(tmp17, tmp38);
        bytetest_b6_bf = simd_and(tmp33, tmp21);
        tmp39 = simd_and(tmp27, bytetest_84);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp39, carryQ.get_carry_in(5), tmp40));
        tmp41 = simd_and(tmp40, bytetest_b6_bf);
        struct_Nd.cc = simd_or(tmp41, struct_Nd.cc);
        bytetest_f0 = simd_andc(tmp7, tmp10);
        bytetest_91 = simd_and(tmp13, tmp15);
        tmp42 = simd_and(tmp37, tmp31);
        bytetest_87 = simd_and(tmp17, tmp42);
        bytetest_90_99 = simd_andc(tmp13, tmp5);
        tmp43 = simd_and(tmp27, bytetest_87);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp43, carryQ.get_carry_in(6), tmp44));
        tmp45 = simd_and(tmp44, bytetest_90_99);
        struct_Nd.cc = simd_or(tmp45, struct_Nd.cc);
        bytetest_f0 = simd_andc(tmp7, tmp10);
        bytetest_91 = simd_and(tmp13, tmp15);
        tmp46 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp47 = simd_and(tmp46, tmp31);
        bytetest_9b = simd_and(tmp13, tmp47);
        bytetest_80_89 = simd_andc(tmp17, tmp5);
        tmp48 = simd_and(tmp27, bytetest_9b);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp48, carryQ.get_carry_in(7), tmp49));
        tmp50 = simd_and(tmp49, bytetest_80_89);
        struct_Nd.cc = simd_or(tmp50, struct_Nd.cc);
        bytetest_f0 = simd_andc(tmp7, tmp10);
        tmp51 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp52 = simd_and(tmp51, tmp14);
        bytetest_9d = simd_and(tmp13, tmp52);
        tmp53 = simd_and(tmp51, tmp31);
        bytetest_9f = simd_and(tmp13, tmp53);
        tmp54 = simd_and(tmp51, basis_bits.bit_6);
        tmp55 = simd_or(basis_bits.bit_3, tmp54);
        tmp56 = simd_or(basis_bits.bit_2, tmp55);
        bytetest_8e_bf = simd_and(tmp11, tmp56);
        tmp57 = simd_and(tmp25, bytetest_9d);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(tmp57, carryQ.get_carry_in(8), tmp58));
        tmp59 = simd_and(tmp58, bytetest_9f);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(tmp59, carryQ.get_carry_in(9), tmp60));
        tmp61 = simd_and(tmp60, bytetest_8e_bf);
        struct_Nd.cc = simd_or(tmp61, struct_Nd.cc);
        tmp62 = simd_andc(tmp6, basis_bits.bit_2);
        tmp63 = simd_or(tmp8, basis_bits.bit_6);
        tmp64 = simd_or(basis_bits.bit_3, tmp63);
        bytetest_c2_df = simd_and(tmp62, tmp64);
        if ((bitblock::any(bytetest_c2_df) || carryQ.CarryTest(10, 3))) {
          r80_7ff_tmp1 = simd_and(tmp6, tmp12);
          r80_7ff_tmp2 = simd_and(tmp46, tmp14);
          bytetest_d9 = simd_and(r80_7ff_tmp1, r80_7ff_tmp2);
          bytetest_a0_a9 = simd_andc(tmp19, tmp5);
          r80_7ff_tmp3 = simd_and(tmp23, bytetest_d9);
          carryQ.cq[10] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp3, carryQ.get_carry_in(10), r80_7ff_tmp4));
          r80_7ff_tmp5 = simd_and(r80_7ff_tmp4, bytetest_a0_a9);
          struct_Nd.cc = simd_or(r80_7ff_tmp5, struct_Nd.cc);
          bytetest_db = simd_and(r80_7ff_tmp1, tmp47);
          bytetest_b0_b9 = simd_andc(tmp33, tmp5);
          r80_7ff_tmp6 = simd_and(tmp23, bytetest_db);
          carryQ.cq[11] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp6, carryQ.get_carry_in(11), r80_7ff_tmp7));
          r80_7ff_tmp8 = simd_and(r80_7ff_tmp7, bytetest_b0_b9);
          struct_Nd.cc = simd_or(r80_7ff_tmp8, struct_Nd.cc);
          bytetest_df = simd_and(r80_7ff_tmp1, tmp53);
          bytetest_80_89 = simd_andc(tmp17, tmp5);
          r80_7ff_tmp9 = simd_and(tmp23, bytetest_df);
          carryQ.cq[12] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp9, carryQ.get_carry_in(12), r80_7ff_tmp10));
          r80_7ff_tmp11 = simd_and(r80_7ff_tmp10, bytetest_80_89);
          struct_Nd.cc = simd_or(r80_7ff_tmp11, struct_Nd.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(10, 3);
        }
        tmp65 = simd_and(tmp6, tmp18);
        tmp66 = simd_or(basis_bits.bit_5, tmp9);
        tmp67 = simd_or(basis_bits.bit_4, tmp66);
        bytetest_e1_ef = simd_and(tmp65, tmp67);
        bytetest_e0 = simd_andc(tmp65, tmp10);
        bytetest_a0_bf = simd_and(tmp11, basis_bits.bit_2);
        tmp68 = simd_and(tmp23, bytetest_e0);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(tmp68, carryQ.get_carry_in(13), tmp69));
        tmp70 = simd_and(tmp69, bytetest_a0_bf);
        tmp71 = simd_or(tmp70, bytetest_e1_ef);
        if ((bitblock::any(tmp71) || carryQ.CarryTest(14, 33))) {
          r800_ffff_tmp1 = simd_and(tmp6, tmp18);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp10);
          r800_ffff_tmp2 = simd_and(tmp37, tmp14);
          bytetest_a5 = simd_and(tmp19, r800_ffff_tmp2);
          bytetest_a6_af = simd_and(tmp19, tmp21);
          r800_ffff_tmp3 = simd_and(tmp23, bytetest_e0);
          carryQ.cq[14] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp3, carryQ.get_carry_in(14), r800_ffff_tmp4));
          r800_ffff_tmp5 = simd_and(r800_ffff_tmp4, bytetest_a5);
          carryQ.cq[15] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp5, carryQ.get_carry_in(15), r800_ffff_tmp6));
          r800_ffff_tmp7 = simd_and(r800_ffff_tmp6, bytetest_a6_af);
          struct_Nd.cc = simd_or(r800_ffff_tmp7, struct_Nd.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp10);
          bytetest_a7 = simd_and(tmp19, tmp42);
          bytetest_a6_af = simd_and(tmp19, tmp21);
          r800_ffff_tmp8 = simd_and(r800_ffff_tmp4, bytetest_a7);
          carryQ.cq[16] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp8, carryQ.get_carry_in(16), r800_ffff_tmp9));
          r800_ffff_tmp10 = simd_and(r800_ffff_tmp9, bytetest_a6_af);
          struct_Nd.cc = simd_or(r800_ffff_tmp10, struct_Nd.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp10);
          r800_ffff_tmp11 = simd_and(tmp46, tmp14);
          bytetest_a9 = simd_and(tmp19, r800_ffff_tmp11);
          bytetest_a6_af = simd_and(tmp19, tmp21);
          r800_ffff_tmp12 = simd_and(r800_ffff_tmp4, bytetest_a9);
          carryQ.cq[17] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp12, carryQ.get_carry_in(17), r800_ffff_tmp13));
          r800_ffff_tmp14 = simd_and(r800_ffff_tmp13, bytetest_a6_af);
          struct_Nd.cc = simd_or(r800_ffff_tmp14, struct_Nd.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp10);
          bytetest_ab = simd_and(tmp19, tmp47);
          bytetest_a6_af = simd_and(tmp19, tmp21);
          r800_ffff_tmp15 = simd_and(r800_ffff_tmp4, bytetest_ab);
          carryQ.cq[18] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp15, carryQ.get_carry_in(18), r800_ffff_tmp16));
          r800_ffff_tmp17 = simd_and(r800_ffff_tmp16, bytetest_a6_af);
          struct_Nd.cc = simd_or(r800_ffff_tmp17, struct_Nd.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp10);
          bytetest_ad = simd_and(tmp19, tmp52);
          bytetest_a6_af = simd_and(tmp19, tmp21);
          r800_ffff_tmp18 = simd_and(r800_ffff_tmp4, bytetest_ad);
          carryQ.cq[19] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp18, carryQ.get_carry_in(19), r800_ffff_tmp19));
          r800_ffff_tmp20 = simd_and(r800_ffff_tmp19, bytetest_a6_af);
          struct_Nd.cc = simd_or(r800_ffff_tmp20, struct_Nd.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp10);
          bytetest_af = simd_and(tmp19, tmp53);
          bytetest_a6_af = simd_and(tmp19, tmp21);
          r800_ffff_tmp21 = simd_and(r800_ffff_tmp4, bytetest_af);
          carryQ.cq[20] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp21, carryQ.get_carry_in(20), r800_ffff_tmp22));
          r800_ffff_tmp23 = simd_and(r800_ffff_tmp22, bytetest_a6_af);
          struct_Nd.cc = simd_or(r800_ffff_tmp23, struct_Nd.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp10);
          bytetest_b1 = simd_and(tmp33, tmp15);
          bytetest_a6_af = simd_and(tmp19, tmp21);
          r800_ffff_tmp24 = simd_and(r800_ffff_tmp4, bytetest_b1);
          carryQ.cq[21] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp24, carryQ.get_carry_in(21), r800_ffff_tmp25));
          r800_ffff_tmp26 = simd_and(r800_ffff_tmp25, bytetest_a6_af);
          struct_Nd.cc = simd_or(r800_ffff_tmp26, struct_Nd.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp10);
          bytetest_b3 = simd_and(tmp33, tmp32);
          bytetest_a6_af = simd_and(tmp19, tmp21);
          r800_ffff_tmp27 = simd_and(r800_ffff_tmp4, bytetest_b3);
          carryQ.cq[22] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp27, carryQ.get_carry_in(22), r800_ffff_tmp28));
          r800_ffff_tmp29 = simd_and(r800_ffff_tmp28, bytetest_a6_af);
          struct_Nd.cc = simd_or(r800_ffff_tmp29, struct_Nd.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp10);
          bytetest_b5 = simd_and(tmp33, r800_ffff_tmp2);
          bytetest_a6_af = simd_and(tmp19, tmp21);
          r800_ffff_tmp30 = simd_and(r800_ffff_tmp4, bytetest_b5);
          carryQ.cq[23] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp30, carryQ.get_carry_in(23), r800_ffff_tmp31));
          r800_ffff_tmp32 = simd_and(r800_ffff_tmp31, bytetest_a6_af);
          struct_Nd.cc = simd_or(r800_ffff_tmp32, struct_Nd.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp10);
          bytetest_b9 = simd_and(tmp33, r800_ffff_tmp11);
          bytetest_90_99 = simd_andc(tmp13, tmp5);
          r800_ffff_tmp33 = simd_and(r800_ffff_tmp4, bytetest_b9);
          carryQ.cq[24] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp33, carryQ.get_carry_in(24), r800_ffff_tmp34));
          r800_ffff_tmp35 = simd_and(r800_ffff_tmp34, bytetest_90_99);
          struct_Nd.cc = simd_or(r800_ffff_tmp35, struct_Nd.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp10);
          bytetest_bb = simd_and(tmp33, tmp47);
          bytetest_90_99 = simd_andc(tmp13, tmp5);
          r800_ffff_tmp36 = simd_and(r800_ffff_tmp4, bytetest_bb);
          carryQ.cq[25] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp36, carryQ.get_carry_in(25), r800_ffff_tmp37));
          r800_ffff_tmp38 = simd_and(r800_ffff_tmp37, bytetest_90_99);
          struct_Nd.cc = simd_or(r800_ffff_tmp38, struct_Nd.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp10);
          r800_ffff_tmp39 = simd_andc(tmp51, tmp9);
          bytetest_bc = simd_and(tmp33, r800_ffff_tmp39);
          bytetest_a0_a9 = simd_andc(tmp19, tmp5);
          r800_ffff_tmp40 = simd_and(r800_ffff_tmp4, bytetest_bc);
          carryQ.cq[26] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp40, carryQ.get_carry_in(26), r800_ffff_tmp41));
          r800_ffff_tmp42 = simd_and(r800_ffff_tmp41, bytetest_a0_a9);
          struct_Nd.cc = simd_or(r800_ffff_tmp42, struct_Nd.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp15);
          bytetest_81 = simd_and(tmp17, tmp15);
          bytetest_80_89 = simd_andc(tmp17, tmp5);
          r800_ffff_tmp43 = simd_and(tmp23, bytetest_e1);
          carryQ.cq[27] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp43, carryQ.get_carry_in(27), r800_ffff_tmp44));
          r800_ffff_tmp45 = simd_and(r800_ffff_tmp44, bytetest_81);
          carryQ.cq[28] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp45, carryQ.get_carry_in(28), r800_ffff_tmp46));
          r800_ffff_tmp47 = simd_and(r800_ffff_tmp46, bytetest_80_89);
          struct_Nd.cc = simd_or(r800_ffff_tmp47, struct_Nd.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp15);
          r800_ffff_tmp48 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp49 = simd_andc(r800_ffff_tmp48, tmp8);
          bytetest_82 = simd_and(tmp17, r800_ffff_tmp49);
          bytetest_90_99 = simd_andc(tmp13, tmp5);
          r800_ffff_tmp50 = simd_and(r800_ffff_tmp44, bytetest_82);
          carryQ.cq[29] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp50, carryQ.get_carry_in(29), r800_ffff_tmp51));
          r800_ffff_tmp52 = simd_and(r800_ffff_tmp51, bytetest_90_99);
          struct_Nd.cc = simd_or(r800_ffff_tmp52, struct_Nd.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp15);
          bytetest_9f = simd_and(tmp13, tmp53);
          bytetest_a0_a9 = simd_andc(tmp19, tmp5);
          r800_ffff_tmp53 = simd_and(r800_ffff_tmp44, bytetest_9f);
          carryQ.cq[30] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp53, carryQ.get_carry_in(30), r800_ffff_tmp54));
          r800_ffff_tmp55 = simd_and(r800_ffff_tmp54, bytetest_a0_a9);
          struct_Nd.cc = simd_or(r800_ffff_tmp55, struct_Nd.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp15);
          bytetest_a0 = simd_andc(tmp19, tmp10);
          bytetest_90_99 = simd_andc(tmp13, tmp5);
          r800_ffff_tmp56 = simd_and(r800_ffff_tmp44, bytetest_a0);
          carryQ.cq[31] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp56, carryQ.get_carry_in(31), r800_ffff_tmp57));
          r800_ffff_tmp58 = simd_and(r800_ffff_tmp57, bytetest_90_99);
          struct_Nd.cc = simd_or(r800_ffff_tmp58, struct_Nd.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp15);
          bytetest_a5 = simd_and(tmp19, r800_ffff_tmp2);
          bytetest_86_8f = simd_and(tmp17, tmp21);
          r800_ffff_tmp59 = simd_and(r800_ffff_tmp44, bytetest_a5);
          carryQ.cq[32] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp59, carryQ.get_carry_in(32), r800_ffff_tmp60));
          r800_ffff_tmp61 = simd_and(r800_ffff_tmp60, bytetest_86_8f);
          struct_Nd.cc = simd_or(r800_ffff_tmp61, struct_Nd.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp15);
          bytetest_a7 = simd_and(tmp19, tmp42);
          bytetest_90_99 = simd_andc(tmp13, tmp5);
          r800_ffff_tmp62 = simd_and(r800_ffff_tmp44, bytetest_a7);
          carryQ.cq[33] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp62, carryQ.get_carry_in(33), r800_ffff_tmp63));
          r800_ffff_tmp64 = simd_and(r800_ffff_tmp63, bytetest_90_99);
          struct_Nd.cc = simd_or(r800_ffff_tmp64, struct_Nd.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp15);
          r800_ffff_tmp65 = simd_and(tmp46, r800_ffff_tmp48);
          bytetest_aa = simd_and(tmp19, r800_ffff_tmp65);
          bytetest_80_89 = simd_andc(tmp17, tmp5);
          r800_ffff_tmp66 = simd_and(r800_ffff_tmp44, bytetest_aa);
          carryQ.cq[34] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp66, carryQ.get_carry_in(34), r800_ffff_tmp67));
          r800_ffff_tmp68 = simd_and(r800_ffff_tmp67, bytetest_80_89);
          struct_Nd.cc = simd_or(r800_ffff_tmp68, struct_Nd.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp15);
          bytetest_aa = simd_and(tmp19, r800_ffff_tmp65);
          bytetest_90_99 = simd_andc(tmp13, tmp5);
          r800_ffff_tmp69 = simd_and(r800_ffff_tmp67, bytetest_90_99);
          struct_Nd.cc = simd_or(r800_ffff_tmp69, struct_Nd.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp15);
          bytetest_ad = simd_and(tmp19, tmp52);
          bytetest_90_99 = simd_andc(tmp13, tmp5);
          r800_ffff_tmp70 = simd_and(r800_ffff_tmp44, bytetest_ad);
          carryQ.cq[35] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp70, carryQ.get_carry_in(35), r800_ffff_tmp71));
          r800_ffff_tmp72 = simd_and(r800_ffff_tmp71, bytetest_90_99);
          struct_Nd.cc = simd_or(r800_ffff_tmp72, struct_Nd.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp15);
          r800_ffff_tmp73 = simd_and(tmp51, r800_ffff_tmp48);
          bytetest_ae = simd_and(tmp19, r800_ffff_tmp73);
          bytetest_b0_b9 = simd_andc(tmp33, tmp5);
          r800_ffff_tmp74 = simd_and(r800_ffff_tmp44, bytetest_ae);
          carryQ.cq[36] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp74, carryQ.get_carry_in(36), r800_ffff_tmp75));
          r800_ffff_tmp76 = simd_and(r800_ffff_tmp75, bytetest_b0_b9);
          struct_Nd.cc = simd_or(r800_ffff_tmp76, struct_Nd.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp15);
          bytetest_b1 = simd_and(tmp33, tmp15);
          bytetest_80_89 = simd_andc(tmp17, tmp5);
          r800_ffff_tmp77 = simd_and(r800_ffff_tmp44, bytetest_b1);
          carryQ.cq[37] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp77, carryQ.get_carry_in(37), r800_ffff_tmp78));
          r800_ffff_tmp79 = simd_and(r800_ffff_tmp78, bytetest_80_89);
          struct_Nd.cc = simd_or(r800_ffff_tmp79, struct_Nd.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp15);
          bytetest_b1 = simd_and(tmp33, tmp15);
          bytetest_90_99 = simd_andc(tmp13, tmp5);
          r800_ffff_tmp80 = simd_and(r800_ffff_tmp78, bytetest_90_99);
          struct_Nd.cc = simd_or(r800_ffff_tmp80, struct_Nd.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, r800_ffff_tmp65);
          r800_ffff_tmp81 = simd_andc(tmp46, tmp9);
          bytetest_98 = simd_and(tmp13, r800_ffff_tmp81);
          bytetest_a0_a9 = simd_andc(tmp19, tmp5);
          r800_ffff_tmp82 = simd_and(tmp23, bytetest_ea);
          carryQ.cq[38] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp82, carryQ.get_carry_in(38), r800_ffff_tmp83));
          r800_ffff_tmp84 = simd_and(r800_ffff_tmp83, bytetest_98);
          carryQ.cq[39] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp84, carryQ.get_carry_in(39), r800_ffff_tmp85));
          r800_ffff_tmp86 = simd_and(r800_ffff_tmp85, bytetest_a0_a9);
          struct_Nd.cc = simd_or(r800_ffff_tmp86, struct_Nd.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, r800_ffff_tmp65);
          bytetest_a3 = simd_and(tmp19, tmp32);
          bytetest_90_99 = simd_andc(tmp13, tmp5);
          r800_ffff_tmp87 = simd_and(r800_ffff_tmp83, bytetest_a3);
          carryQ.cq[40] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp87, carryQ.get_carry_in(40), r800_ffff_tmp88));
          r800_ffff_tmp89 = simd_and(r800_ffff_tmp88, bytetest_90_99);
          struct_Nd.cc = simd_or(r800_ffff_tmp89, struct_Nd.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, r800_ffff_tmp65);
          bytetest_a4 = simd_and(tmp19, tmp38);
          bytetest_80_89 = simd_andc(tmp17, tmp5);
          r800_ffff_tmp90 = simd_and(r800_ffff_tmp83, bytetest_a4);
          carryQ.cq[41] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp90, carryQ.get_carry_in(41), r800_ffff_tmp91));
          r800_ffff_tmp92 = simd_and(r800_ffff_tmp91, bytetest_80_89);
          struct_Nd.cc = simd_or(r800_ffff_tmp92, struct_Nd.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, r800_ffff_tmp65);
          bytetest_a7 = simd_and(tmp19, tmp42);
          bytetest_90_99 = simd_andc(tmp13, tmp5);
          r800_ffff_tmp93 = simd_and(r800_ffff_tmp83, bytetest_a7);
          carryQ.cq[42] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp93, carryQ.get_carry_in(42), r800_ffff_tmp94));
          r800_ffff_tmp95 = simd_and(r800_ffff_tmp94, bytetest_90_99);
          struct_Nd.cc = simd_or(r800_ffff_tmp95, struct_Nd.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, r800_ffff_tmp65);
          bytetest_a9 = simd_and(tmp19, r800_ffff_tmp11);
          bytetest_90_99 = simd_andc(tmp13, tmp5);
          r800_ffff_tmp96 = simd_and(r800_ffff_tmp83, bytetest_a9);
          carryQ.cq[43] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp96, carryQ.get_carry_in(43), r800_ffff_tmp97));
          r800_ffff_tmp98 = simd_and(r800_ffff_tmp97, bytetest_90_99);
          struct_Nd.cc = simd_or(r800_ffff_tmp98, struct_Nd.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, r800_ffff_tmp65);
          bytetest_af = simd_and(tmp19, tmp53);
          bytetest_b0_b9 = simd_andc(tmp33, tmp5);
          r800_ffff_tmp99 = simd_and(r800_ffff_tmp83, bytetest_af);
          carryQ.cq[44] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp99, carryQ.get_carry_in(44), r800_ffff_tmp100));
          r800_ffff_tmp101 = simd_and(r800_ffff_tmp100, bytetest_b0_b9);
          struct_Nd.cc = simd_or(r800_ffff_tmp101, struct_Nd.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp53);
          bytetest_bc = simd_and(tmp33, r800_ffff_tmp39);
          bytetest_90_99 = simd_andc(tmp13, tmp5);
          r800_ffff_tmp102 = simd_and(tmp23, bytetest_ef);
          carryQ.cq[45] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp102, carryQ.get_carry_in(45), r800_ffff_tmp103));
          r800_ffff_tmp104 = simd_and(r800_ffff_tmp103, bytetest_bc);
          carryQ.cq[46] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp104, carryQ.get_carry_in(46), r800_ffff_tmp105));
          r800_ffff_tmp106 = simd_and(r800_ffff_tmp105, bytetest_90_99);
          struct_Nd.cc = simd_or(r800_ffff_tmp106, struct_Nd.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(14, 33);
        }
        bytetest_f0 = simd_andc(tmp7, tmp10);
        bytetest_90 = simd_andc(tmp13, tmp10);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp72 = simd_and(tmp25, bytetest_90);
        carryQ.cq[47] = carryout2carry(pablo_blk_Advance(tmp72, carryQ.get_carry_in(47), tmp73));
        tmp74 = simd_and(tmp73, bytetest_80_bf);
        if ((bitblock::any(tmp74) || carryQ.CarryTest(48, 2))) {
          bytetest_f0 = simd_andc(tmp7, tmp10);
          bytetest_90 = simd_andc(tmp13, tmp10);
          r10000_10fff_tmp1 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
          r10000_10fff_tmp2 = simd_andc(r10000_10fff_tmp1, tmp8);
          bytetest_92 = simd_and(tmp13, r10000_10fff_tmp2);
          bytetest_a0_a9 = simd_andc(tmp19, tmp5);
          r10000_10fff_tmp3 = simd_and(tmp25, bytetest_90);
          carryQ.cq[48] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp3, carryQ.get_carry_in(48), r10000_10fff_tmp4));
          r10000_10fff_tmp5 = simd_and(r10000_10fff_tmp4, bytetest_92);
          carryQ.cq[49] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp5, carryQ.get_carry_in(49), r10000_10fff_tmp6));
          r10000_10fff_tmp7 = simd_and(r10000_10fff_tmp6, bytetest_a0_a9);
          struct_Nd.cc = simd_or(r10000_10fff_tmp7, struct_Nd.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(48, 2);
        }
  }
  CarryArray<50, 0> carryQ;
  };

  struct Pc {
  Pc() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Pc & struct_Pc) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_5f_5f, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, tmp12, bytetest_e1_ef, tmp13, tmp14, bytetest_e0, tmp15;
		BitBlock bytetest_a0_bf, tmp16, tmp17, tmp18, tmp19, tmp20, tmp21;
		BitBlock r800_ffff_tmp1, r800_ffff_tmp2, r800_ffff_tmp3, r800_ffff_tmp4;
		BitBlock r800_ffff_tmp5, r800_ffff_tmp6, bytetest_e2, r800_ffff_tmp7;
		BitBlock r800_ffff_tmp8, r800_ffff_tmp9, r800_ffff_tmp10, r800_ffff_tmp11;
		BitBlock bytetest_81, r800_ffff_tmp12, r800_ffff_tmp13, bytetest_80_80;
		BitBlock r800_ffff_tmp14, r800_ffff_tmp15, r800_ffff_tmp16, r800_ffff_tmp17;
		BitBlock r800_ffff_tmp18, r800_ffff_tmp19, r800_ffff_tmp20, bytetest_80;
		BitBlock r800_ffff_tmp21, r800_ffff_tmp22, bytetest_bf_bf, r800_ffff_tmp23;
		BitBlock r800_ffff_tmp24, r800_ffff_tmp25, r800_ffff_tmp26, r800_ffff_tmp27;
		BitBlock r800_ffff_tmp28, r800_ffff_tmp29, bytetest_94_94, r800_ffff_tmp30;
		BitBlock bytetest_ef, r800_ffff_tmp31, r800_ffff_tmp32, bytetest_b8;
		BitBlock r800_ffff_tmp33, r800_ffff_tmp34, r800_ffff_tmp35, bytetest_b3_b4;
		BitBlock r800_ffff_tmp36, r800_ffff_tmp37, r800_ffff_tmp38, r800_ffff_tmp39;
		BitBlock r800_ffff_tmp40, r800_ffff_tmp41, bytetest_b9, r800_ffff_tmp42;
		BitBlock bytetest_8d_8f, r800_ffff_tmp43, r800_ffff_tmp44, r800_ffff_tmp45;
		BitBlock r800_ffff_tmp46, bytetest_bc, r800_ffff_tmp47, r800_ffff_tmp48;
		BitBlock r800_ffff_tmp49;




        struct_Pc.cc = simd<1>::constant<0>();
        tmp1 = simd_andc(basis_bits.bit_1, basis_bits.bit_0);
        tmp2 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp3 = simd_and(tmp1, tmp2);
        tmp4 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_and(tmp4, tmp5);
        bytetest_5f_5f = simd_and(tmp3, tmp6);
        struct_Pc.cc = simd_or(bytetest_5f_5f, struct_Pc.cc);
        tmp7 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp11 = simd_or(basis_bits.bit_5, tmp10);
        tmp12 = simd_or(basis_bits.bit_4, tmp11);
        bytetest_e1_ef = simd_and(tmp9, tmp12);
        tmp13 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp14 = simd_or(tmp13, tmp10);
        bytetest_e0 = simd_andc(tmp9, tmp14);
        tmp15 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_a0_bf = simd_and(tmp15, basis_bits.bit_2);
        tmp16 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp16, carryQ.get_carry_in(0), tmp17));
        tmp18 = simd_and(tmp17, bytetest_e0);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp18, carryQ.get_carry_in(1), tmp19));
        tmp20 = simd_and(tmp19, bytetest_a0_bf);
        tmp21 = simd_or(tmp20, bytetest_e1_ef);
        if ((bitblock::any(tmp21) || carryQ.CarryTest(2, 8))) {
          r800_ffff_tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp3 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          r800_ffff_tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
          r800_ffff_tmp5 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp6 = simd_andc(r800_ffff_tmp5, r800_ffff_tmp4);
          bytetest_e2 = simd_and(r800_ffff_tmp3, r800_ffff_tmp6);
          r800_ffff_tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp8 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp9 = simd_andc(r800_ffff_tmp7, r800_ffff_tmp8);
          r800_ffff_tmp10 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
          r800_ffff_tmp11 = simd_andc(r800_ffff_tmp10, r800_ffff_tmp4);
          bytetest_81 = simd_and(r800_ffff_tmp9, r800_ffff_tmp11);
          r800_ffff_tmp12 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp13 = simd_or(r800_ffff_tmp4, r800_ffff_tmp12);
          bytetest_80_80 = simd_andc(r800_ffff_tmp9, r800_ffff_tmp13);
          r800_ffff_tmp14 = simd<1>::constant<1>();
          carryQ.cq[2] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp14, carryQ.get_carry_in(2), r800_ffff_tmp15));
          r800_ffff_tmp16 = simd_and(r800_ffff_tmp15, bytetest_e2);
          carryQ.cq[3] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp16, carryQ.get_carry_in(3), r800_ffff_tmp17));
          r800_ffff_tmp18 = simd_and(r800_ffff_tmp17, bytetest_81);
          carryQ.cq[4] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp18, carryQ.get_carry_in(4), r800_ffff_tmp19));
          r800_ffff_tmp20 = simd_and(r800_ffff_tmp19, bytetest_80_80);
          bytetest_80 = simd_andc(r800_ffff_tmp9, r800_ffff_tmp13);
          r800_ffff_tmp21 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp22 = simd_and(r800_ffff_tmp7, r800_ffff_tmp21);
          bytetest_bf_bf = simd_and(r800_ffff_tmp22, tmp6);
          r800_ffff_tmp23 = simd_and(r800_ffff_tmp17, bytetest_80);
          carryQ.cq[5] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp23, carryQ.get_carry_in(5), r800_ffff_tmp24));
          r800_ffff_tmp25 = simd_and(r800_ffff_tmp24, bytetest_bf_bf);
          r800_ffff_tmp26 = simd_or(r800_ffff_tmp25, r800_ffff_tmp20);
          struct_Pc.cc = simd_or(r800_ffff_tmp26, struct_Pc.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp3, r800_ffff_tmp6);
          bytetest_81 = simd_and(r800_ffff_tmp9, r800_ffff_tmp11);
          r800_ffff_tmp27 = simd_and(r800_ffff_tmp7, tmp2);
          r800_ffff_tmp28 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
          r800_ffff_tmp29 = simd_andc(r800_ffff_tmp28, r800_ffff_tmp12);
          bytetest_94_94 = simd_and(r800_ffff_tmp27, r800_ffff_tmp29);
          r800_ffff_tmp30 = simd_and(r800_ffff_tmp19, bytetest_94_94);
          struct_Pc.cc = simd_or(r800_ffff_tmp30, struct_Pc.cc);
          bytetest_ef = simd_and(r800_ffff_tmp3, tmp6);
          r800_ffff_tmp31 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
          r800_ffff_tmp32 = simd_andc(r800_ffff_tmp31, r800_ffff_tmp12);
          bytetest_b8 = simd_and(r800_ffff_tmp22, r800_ffff_tmp32);
          r800_ffff_tmp33 = simd_andc(r800_ffff_tmp22, basis_bits.bit_4);
          r800_ffff_tmp34 = simd_not(r800_ffff_tmp12);
          r800_ffff_tmp35 = simd_or(simd_and(basis_bits.bit_5, r800_ffff_tmp34), simd_andc(tmp5, basis_bits.bit_5));
          bytetest_b3_b4 = simd_and(r800_ffff_tmp33, r800_ffff_tmp35);
          r800_ffff_tmp36 = simd_and(r800_ffff_tmp15, bytetest_ef);
          carryQ.cq[6] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp36, carryQ.get_carry_in(6), r800_ffff_tmp37));
          r800_ffff_tmp38 = simd_and(r800_ffff_tmp37, bytetest_b8);
          carryQ.cq[7] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp38, carryQ.get_carry_in(7), r800_ffff_tmp39));
          r800_ffff_tmp40 = simd_and(r800_ffff_tmp39, bytetest_b3_b4);
          struct_Pc.cc = simd_or(r800_ffff_tmp40, struct_Pc.cc);
          bytetest_ef = simd_and(r800_ffff_tmp3, tmp6);
          r800_ffff_tmp41 = simd_and(r800_ffff_tmp31, r800_ffff_tmp10);
          bytetest_b9 = simd_and(r800_ffff_tmp22, r800_ffff_tmp41);
          r800_ffff_tmp42 = simd_and(r800_ffff_tmp9, tmp4);
          bytetest_8d_8f = simd_and(r800_ffff_tmp42, r800_ffff_tmp12);
          r800_ffff_tmp43 = simd_and(r800_ffff_tmp37, bytetest_b9);
          carryQ.cq[8] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp43, carryQ.get_carry_in(8), r800_ffff_tmp44));
          r800_ffff_tmp45 = simd_and(r800_ffff_tmp44, bytetest_8d_8f);
          struct_Pc.cc = simd_or(r800_ffff_tmp45, struct_Pc.cc);
          bytetest_ef = simd_and(r800_ffff_tmp3, tmp6);
          r800_ffff_tmp46 = simd_andc(tmp4, r800_ffff_tmp12);
          bytetest_bc = simd_and(r800_ffff_tmp22, r800_ffff_tmp46);
          bytetest_bf_bf = simd_and(r800_ffff_tmp22, tmp6);
          r800_ffff_tmp47 = simd_and(r800_ffff_tmp37, bytetest_bc);
          carryQ.cq[9] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp47, carryQ.get_carry_in(9), r800_ffff_tmp48));
          r800_ffff_tmp49 = simd_and(r800_ffff_tmp48, bytetest_bf_bf);
          struct_Pc.cc = simd_or(r800_ffff_tmp49, struct_Pc.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(2, 8);
        }
        carryQ.CarryQ_Adjust(10);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Pc & struct_Pc, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_5f_5f, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, tmp12, bytetest_e1_ef, tmp13, tmp14, bytetest_e0, tmp15;
		BitBlock bytetest_a0_bf, tmp16, tmp17, tmp18, tmp19, tmp20, tmp21;
		BitBlock r800_ffff_tmp1, r800_ffff_tmp2, r800_ffff_tmp3, r800_ffff_tmp4;
		BitBlock r800_ffff_tmp5, r800_ffff_tmp6, bytetest_e2, r800_ffff_tmp7;
		BitBlock r800_ffff_tmp8, r800_ffff_tmp9, r800_ffff_tmp10, r800_ffff_tmp11;
		BitBlock bytetest_81, r800_ffff_tmp12, r800_ffff_tmp13, bytetest_80_80;
		BitBlock r800_ffff_tmp14, r800_ffff_tmp15, r800_ffff_tmp16, r800_ffff_tmp17;
		BitBlock r800_ffff_tmp18, r800_ffff_tmp19, r800_ffff_tmp20, bytetest_80;
		BitBlock r800_ffff_tmp21, r800_ffff_tmp22, bytetest_bf_bf, r800_ffff_tmp23;
		BitBlock r800_ffff_tmp24, r800_ffff_tmp25, r800_ffff_tmp26, r800_ffff_tmp27;
		BitBlock r800_ffff_tmp28, r800_ffff_tmp29, bytetest_94_94, r800_ffff_tmp30;
		BitBlock bytetest_ef, r800_ffff_tmp31, r800_ffff_tmp32, bytetest_b8;
		BitBlock r800_ffff_tmp33, r800_ffff_tmp34, r800_ffff_tmp35, bytetest_b3_b4;
		BitBlock r800_ffff_tmp36, r800_ffff_tmp37, r800_ffff_tmp38, r800_ffff_tmp39;
		BitBlock r800_ffff_tmp40, r800_ffff_tmp41, bytetest_b9, r800_ffff_tmp42;
		BitBlock bytetest_8d_8f, r800_ffff_tmp43, r800_ffff_tmp44, r800_ffff_tmp45;
		BitBlock r800_ffff_tmp46, bytetest_bc, r800_ffff_tmp47, r800_ffff_tmp48;
		BitBlock r800_ffff_tmp49;




        struct_Pc.cc = simd<1>::constant<0>();
        tmp1 = simd_andc(basis_bits.bit_1, basis_bits.bit_0);
        tmp2 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp3 = simd_and(tmp1, tmp2);
        tmp4 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_and(tmp4, tmp5);
        bytetest_5f_5f = simd_and(tmp3, tmp6);
        struct_Pc.cc = simd_or(bytetest_5f_5f, struct_Pc.cc);
        tmp7 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp11 = simd_or(basis_bits.bit_5, tmp10);
        tmp12 = simd_or(basis_bits.bit_4, tmp11);
        bytetest_e1_ef = simd_and(tmp9, tmp12);
        tmp13 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp14 = simd_or(tmp13, tmp10);
        bytetest_e0 = simd_andc(tmp9, tmp14);
        tmp15 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_a0_bf = simd_and(tmp15, basis_bits.bit_2);
        tmp16 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp16, carryQ.get_carry_in(0), tmp17));
        tmp18 = simd_and(tmp17, bytetest_e0);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp18, carryQ.get_carry_in(1), tmp19));
        tmp20 = simd_and(tmp19, bytetest_a0_bf);
        tmp21 = simd_or(tmp20, bytetest_e1_ef);
        if ((bitblock::any(tmp21) || carryQ.CarryTest(2, 8))) {
          r800_ffff_tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp3 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          r800_ffff_tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
          r800_ffff_tmp5 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp6 = simd_andc(r800_ffff_tmp5, r800_ffff_tmp4);
          bytetest_e2 = simd_and(r800_ffff_tmp3, r800_ffff_tmp6);
          r800_ffff_tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp8 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp9 = simd_andc(r800_ffff_tmp7, r800_ffff_tmp8);
          r800_ffff_tmp10 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
          r800_ffff_tmp11 = simd_andc(r800_ffff_tmp10, r800_ffff_tmp4);
          bytetest_81 = simd_and(r800_ffff_tmp9, r800_ffff_tmp11);
          r800_ffff_tmp12 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp13 = simd_or(r800_ffff_tmp4, r800_ffff_tmp12);
          bytetest_80_80 = simd_andc(r800_ffff_tmp9, r800_ffff_tmp13);
          r800_ffff_tmp14 = simd<1>::constant<1>();
          carryQ.cq[2] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp14, carryQ.get_carry_in(2), r800_ffff_tmp15));
          r800_ffff_tmp16 = simd_and(r800_ffff_tmp15, bytetest_e2);
          carryQ.cq[3] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp16, carryQ.get_carry_in(3), r800_ffff_tmp17));
          r800_ffff_tmp18 = simd_and(r800_ffff_tmp17, bytetest_81);
          carryQ.cq[4] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp18, carryQ.get_carry_in(4), r800_ffff_tmp19));
          r800_ffff_tmp20 = simd_and(r800_ffff_tmp19, bytetest_80_80);
          bytetest_80 = simd_andc(r800_ffff_tmp9, r800_ffff_tmp13);
          r800_ffff_tmp21 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp22 = simd_and(r800_ffff_tmp7, r800_ffff_tmp21);
          bytetest_bf_bf = simd_and(r800_ffff_tmp22, tmp6);
          r800_ffff_tmp23 = simd_and(r800_ffff_tmp17, bytetest_80);
          carryQ.cq[5] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp23, carryQ.get_carry_in(5), r800_ffff_tmp24));
          r800_ffff_tmp25 = simd_and(r800_ffff_tmp24, bytetest_bf_bf);
          r800_ffff_tmp26 = simd_or(r800_ffff_tmp25, r800_ffff_tmp20);
          struct_Pc.cc = simd_or(r800_ffff_tmp26, struct_Pc.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp3, r800_ffff_tmp6);
          bytetest_81 = simd_and(r800_ffff_tmp9, r800_ffff_tmp11);
          r800_ffff_tmp27 = simd_and(r800_ffff_tmp7, tmp2);
          r800_ffff_tmp28 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
          r800_ffff_tmp29 = simd_andc(r800_ffff_tmp28, r800_ffff_tmp12);
          bytetest_94_94 = simd_and(r800_ffff_tmp27, r800_ffff_tmp29);
          r800_ffff_tmp30 = simd_and(r800_ffff_tmp19, bytetest_94_94);
          struct_Pc.cc = simd_or(r800_ffff_tmp30, struct_Pc.cc);
          bytetest_ef = simd_and(r800_ffff_tmp3, tmp6);
          r800_ffff_tmp31 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
          r800_ffff_tmp32 = simd_andc(r800_ffff_tmp31, r800_ffff_tmp12);
          bytetest_b8 = simd_and(r800_ffff_tmp22, r800_ffff_tmp32);
          r800_ffff_tmp33 = simd_andc(r800_ffff_tmp22, basis_bits.bit_4);
          r800_ffff_tmp34 = simd_not(r800_ffff_tmp12);
          r800_ffff_tmp35 = simd_or(simd_and(basis_bits.bit_5, r800_ffff_tmp34), simd_andc(tmp5, basis_bits.bit_5));
          bytetest_b3_b4 = simd_and(r800_ffff_tmp33, r800_ffff_tmp35);
          r800_ffff_tmp36 = simd_and(r800_ffff_tmp15, bytetest_ef);
          carryQ.cq[6] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp36, carryQ.get_carry_in(6), r800_ffff_tmp37));
          r800_ffff_tmp38 = simd_and(r800_ffff_tmp37, bytetest_b8);
          carryQ.cq[7] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp38, carryQ.get_carry_in(7), r800_ffff_tmp39));
          r800_ffff_tmp40 = simd_and(r800_ffff_tmp39, bytetest_b3_b4);
          struct_Pc.cc = simd_or(r800_ffff_tmp40, struct_Pc.cc);
          bytetest_ef = simd_and(r800_ffff_tmp3, tmp6);
          r800_ffff_tmp41 = simd_and(r800_ffff_tmp31, r800_ffff_tmp10);
          bytetest_b9 = simd_and(r800_ffff_tmp22, r800_ffff_tmp41);
          r800_ffff_tmp42 = simd_and(r800_ffff_tmp9, tmp4);
          bytetest_8d_8f = simd_and(r800_ffff_tmp42, r800_ffff_tmp12);
          r800_ffff_tmp43 = simd_and(r800_ffff_tmp37, bytetest_b9);
          carryQ.cq[8] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp43, carryQ.get_carry_in(8), r800_ffff_tmp44));
          r800_ffff_tmp45 = simd_and(r800_ffff_tmp44, bytetest_8d_8f);
          struct_Pc.cc = simd_or(r800_ffff_tmp45, struct_Pc.cc);
          bytetest_ef = simd_and(r800_ffff_tmp3, tmp6);
          r800_ffff_tmp46 = simd_andc(tmp4, r800_ffff_tmp12);
          bytetest_bc = simd_and(r800_ffff_tmp22, r800_ffff_tmp46);
          bytetest_bf_bf = simd_and(r800_ffff_tmp22, tmp6);
          r800_ffff_tmp47 = simd_and(r800_ffff_tmp37, bytetest_bc);
          carryQ.cq[9] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp47, carryQ.get_carry_in(9), r800_ffff_tmp48));
          r800_ffff_tmp49 = simd_and(r800_ffff_tmp48, bytetest_bf_bf);
          struct_Pc.cc = simd_or(r800_ffff_tmp49, struct_Pc.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(2, 8);
        }
  }
  CarryArray<10, 0> carryQ;
  };

  struct Lt {
  Lt() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Lt & struct_Lt) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, bytetest_c2_df, r80_7ff_tmp1;
		BitBlock r80_7ff_tmp2, r80_7ff_tmp3, r80_7ff_tmp4, r80_7ff_tmp5, r80_7ff_tmp6;
		BitBlock bytetest_c7, r80_7ff_tmp7, r80_7ff_tmp8, r80_7ff_tmp9, r80_7ff_tmp10;
		BitBlock bytetest_85_85, r80_7ff_tmp11, r80_7ff_tmp12, r80_7ff_tmp13;
		BitBlock r80_7ff_tmp14, r80_7ff_tmp15, r80_7ff_tmp16, r80_7ff_tmp17;
		BitBlock r80_7ff_tmp18, bytetest_88_88, r80_7ff_tmp19, r80_7ff_tmp20;
		BitBlock bytetest_8b_8b, r80_7ff_tmp21, r80_7ff_tmp22, r80_7ff_tmp23;
		BitBlock r80_7ff_tmp24, r80_7ff_tmp25, r80_7ff_tmp26, bytetest_b2_b2;
		BitBlock r80_7ff_tmp27, tmp6, tmp7, tmp8, tmp9, tmp10, bytetest_e1_ef, tmp11;
		BitBlock bytetest_e0, tmp12, bytetest_a0_bf, tmp13, tmp14, tmp15, tmp16, tmp17;
		BitBlock tmp18, r800_ffff_tmp1, r800_ffff_tmp2, r800_ffff_tmp3, r800_ffff_tmp4;
		BitBlock bytetest_e1, r800_ffff_tmp5, r800_ffff_tmp6, r800_ffff_tmp7;
		BitBlock r800_ffff_tmp8, r800_ffff_tmp9, r800_ffff_tmp10, bytetest_be;
		BitBlock r800_ffff_tmp11, r800_ffff_tmp12, bytetest_88_8f, r800_ffff_tmp13;
		BitBlock r800_ffff_tmp14, r800_ffff_tmp15, r800_ffff_tmp16, r800_ffff_tmp17;
		BitBlock r800_ffff_tmp18, r800_ffff_tmp19, r800_ffff_tmp20, r800_ffff_tmp21;
		BitBlock bytetest_98_9f, r800_ffff_tmp22, r800_ffff_tmp23, bytetest_a8_af;
		BitBlock r800_ffff_tmp24, r800_ffff_tmp25, r800_ffff_tmp26, bytetest_bc_bc;
		BitBlock r800_ffff_tmp27, r800_ffff_tmp28, r800_ffff_tmp29, bytetest_bf;
		BitBlock bytetest_8c_8c, r800_ffff_tmp30, r800_ffff_tmp31, r800_ffff_tmp32;
		BitBlock r800_ffff_tmp33;




        struct_Lt.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(tmp1, basis_bits.bit_2);
        tmp3 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp4 = simd_or(tmp3, basis_bits.bit_6);
        tmp5 = simd_or(basis_bits.bit_3, tmp4);
        bytetest_c2_df = simd_and(tmp2, tmp5);
        if ((bitblock::any(bytetest_c2_df) || carryQ.CarryTest(0, 2))) {
          r80_7ff_tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
          r80_7ff_tmp2 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
          r80_7ff_tmp3 = simd_andc(r80_7ff_tmp1, r80_7ff_tmp2);
          r80_7ff_tmp4 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
          r80_7ff_tmp5 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
          r80_7ff_tmp6 = simd_and(r80_7ff_tmp4, r80_7ff_tmp5);
          bytetest_c7 = simd_and(r80_7ff_tmp3, r80_7ff_tmp6);
          r80_7ff_tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r80_7ff_tmp8 = simd_andc(r80_7ff_tmp7, r80_7ff_tmp2);
          r80_7ff_tmp9 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
          r80_7ff_tmp10 = simd_and(r80_7ff_tmp4, r80_7ff_tmp9);
          bytetest_85_85 = simd_and(r80_7ff_tmp8, r80_7ff_tmp10);
          r80_7ff_tmp11 = simd<1>::constant<1>();
          carryQ.cq[0] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp11, carryQ.get_carry_in(0), r80_7ff_tmp12));
          r80_7ff_tmp13 = simd_and(r80_7ff_tmp12, bytetest_c7);
          carryQ.cq[1] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp13, carryQ.get_carry_in(1), r80_7ff_tmp14));
          r80_7ff_tmp15 = simd_and(r80_7ff_tmp14, bytetest_85_85);
          struct_Lt.cc = simd_or(r80_7ff_tmp15, struct_Lt.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp3, r80_7ff_tmp6);
          r80_7ff_tmp16 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
          r80_7ff_tmp17 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
          r80_7ff_tmp18 = simd_andc(r80_7ff_tmp16, r80_7ff_tmp17);
          bytetest_88_88 = simd_and(r80_7ff_tmp8, r80_7ff_tmp18);
          r80_7ff_tmp19 = simd_and(r80_7ff_tmp14, bytetest_88_88);
          struct_Lt.cc = simd_or(r80_7ff_tmp19, struct_Lt.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp3, r80_7ff_tmp6);
          r80_7ff_tmp20 = simd_and(r80_7ff_tmp16, r80_7ff_tmp5);
          bytetest_8b_8b = simd_and(r80_7ff_tmp8, r80_7ff_tmp20);
          r80_7ff_tmp21 = simd_and(r80_7ff_tmp14, bytetest_8b_8b);
          struct_Lt.cc = simd_or(r80_7ff_tmp21, struct_Lt.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp3, r80_7ff_tmp6);
          r80_7ff_tmp22 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
          r80_7ff_tmp23 = simd_and(r80_7ff_tmp7, r80_7ff_tmp22);
          r80_7ff_tmp24 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
          r80_7ff_tmp25 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
          r80_7ff_tmp26 = simd_andc(r80_7ff_tmp25, r80_7ff_tmp24);
          bytetest_b2_b2 = simd_and(r80_7ff_tmp23, r80_7ff_tmp26);
          r80_7ff_tmp27 = simd_and(r80_7ff_tmp14, bytetest_b2_b2);
          struct_Lt.cc = simd_or(r80_7ff_tmp27, struct_Lt.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(0, 2);
        }
        tmp6 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp7 = simd_and(tmp1, tmp6);
        tmp8 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp9 = simd_or(basis_bits.bit_5, tmp8);
        tmp10 = simd_or(basis_bits.bit_4, tmp9);
        bytetest_e1_ef = simd_and(tmp7, tmp10);
        tmp11 = simd_or(tmp3, tmp8);
        bytetest_e0 = simd_andc(tmp7, tmp11);
        tmp12 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_a0_bf = simd_and(tmp12, basis_bits.bit_2);
        tmp13 = simd<1>::constant<1>();
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp13, carryQ.get_carry_in(2), tmp14));
        tmp15 = simd_and(tmp14, bytetest_e0);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp15, carryQ.get_carry_in(3), tmp16));
        tmp17 = simd_and(tmp16, bytetest_a0_bf);
        tmp18 = simd_or(tmp17, bytetest_e1_ef);
        if ((bitblock::any(tmp18) || carryQ.CarryTest(4, 4))) {
          r800_ffff_tmp1 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp2 = simd_and(tmp1, r800_ffff_tmp1);
          r800_ffff_tmp3 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
          r800_ffff_tmp4 = simd_andc(r800_ffff_tmp3, tmp3);
          bytetest_e1 = simd_and(r800_ffff_tmp2, r800_ffff_tmp4);
          r800_ffff_tmp5 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp6 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp7 = simd_and(r800_ffff_tmp5, r800_ffff_tmp6);
          r800_ffff_tmp8 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
          r800_ffff_tmp9 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp10 = simd_and(r800_ffff_tmp8, r800_ffff_tmp9);
          bytetest_be = simd_and(r800_ffff_tmp7, r800_ffff_tmp10);
          r800_ffff_tmp11 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp12 = simd_andc(r800_ffff_tmp5, r800_ffff_tmp11);
          bytetest_88_8f = simd_and(r800_ffff_tmp12, basis_bits.bit_4);
          r800_ffff_tmp13 = simd<1>::constant<1>();
          carryQ.cq[4] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp13, carryQ.get_carry_in(4), r800_ffff_tmp14));
          r800_ffff_tmp15 = simd_and(r800_ffff_tmp14, bytetest_e1);
          carryQ.cq[5] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp15, carryQ.get_carry_in(5), r800_ffff_tmp16));
          r800_ffff_tmp17 = simd_and(r800_ffff_tmp16, bytetest_be);
          carryQ.cq[6] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp17, carryQ.get_carry_in(6), r800_ffff_tmp18));
          r800_ffff_tmp19 = simd_and(r800_ffff_tmp18, bytetest_88_8f);
          struct_Lt.cc = simd_or(r800_ffff_tmp19, struct_Lt.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, r800_ffff_tmp4);
          bytetest_be = simd_and(r800_ffff_tmp7, r800_ffff_tmp10);
          r800_ffff_tmp20 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
          r800_ffff_tmp21 = simd_and(r800_ffff_tmp5, r800_ffff_tmp20);
          bytetest_98_9f = simd_and(r800_ffff_tmp21, basis_bits.bit_4);
          r800_ffff_tmp22 = simd_and(r800_ffff_tmp18, bytetest_98_9f);
          struct_Lt.cc = simd_or(r800_ffff_tmp22, struct_Lt.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, r800_ffff_tmp4);
          bytetest_be = simd_and(r800_ffff_tmp7, r800_ffff_tmp10);
          r800_ffff_tmp23 = simd_and(r800_ffff_tmp5, r800_ffff_tmp1);
          bytetest_a8_af = simd_and(r800_ffff_tmp23, basis_bits.bit_4);
          r800_ffff_tmp24 = simd_and(r800_ffff_tmp18, bytetest_a8_af);
          struct_Lt.cc = simd_or(r800_ffff_tmp24, struct_Lt.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, r800_ffff_tmp4);
          bytetest_be = simd_and(r800_ffff_tmp7, r800_ffff_tmp10);
          r800_ffff_tmp25 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp26 = simd_andc(r800_ffff_tmp8, r800_ffff_tmp25);
          bytetest_bc_bc = simd_and(r800_ffff_tmp7, r800_ffff_tmp26);
          r800_ffff_tmp27 = simd_and(r800_ffff_tmp18, bytetest_bc_bc);
          struct_Lt.cc = simd_or(r800_ffff_tmp27, struct_Lt.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, r800_ffff_tmp4);
          r800_ffff_tmp28 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp29 = simd_and(r800_ffff_tmp8, r800_ffff_tmp28);
          bytetest_bf = simd_and(r800_ffff_tmp7, r800_ffff_tmp29);
          bytetest_8c_8c = simd_and(r800_ffff_tmp12, r800_ffff_tmp26);
          r800_ffff_tmp30 = simd_and(r800_ffff_tmp16, bytetest_bf);
          carryQ.cq[7] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp30, carryQ.get_carry_in(7), r800_ffff_tmp31));
          r800_ffff_tmp32 = simd_and(r800_ffff_tmp31, bytetest_8c_8c);
          struct_Lt.cc = simd_or(r800_ffff_tmp32, struct_Lt.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, r800_ffff_tmp4);
          bytetest_bf = simd_and(r800_ffff_tmp7, r800_ffff_tmp29);
          bytetest_bc_bc = simd_and(r800_ffff_tmp7, r800_ffff_tmp26);
          r800_ffff_tmp33 = simd_and(r800_ffff_tmp31, bytetest_bc_bc);
          struct_Lt.cc = simd_or(r800_ffff_tmp33, struct_Lt.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(4, 4);
        }
        carryQ.CarryQ_Adjust(8);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Lt & struct_Lt, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, bytetest_c2_df, r80_7ff_tmp1;
		BitBlock r80_7ff_tmp2, r80_7ff_tmp3, r80_7ff_tmp4, r80_7ff_tmp5, r80_7ff_tmp6;
		BitBlock bytetest_c7, r80_7ff_tmp7, r80_7ff_tmp8, r80_7ff_tmp9, r80_7ff_tmp10;
		BitBlock bytetest_85_85, r80_7ff_tmp11, r80_7ff_tmp12, r80_7ff_tmp13;
		BitBlock r80_7ff_tmp14, r80_7ff_tmp15, r80_7ff_tmp16, r80_7ff_tmp17;
		BitBlock r80_7ff_tmp18, bytetest_88_88, r80_7ff_tmp19, r80_7ff_tmp20;
		BitBlock bytetest_8b_8b, r80_7ff_tmp21, r80_7ff_tmp22, r80_7ff_tmp23;
		BitBlock r80_7ff_tmp24, r80_7ff_tmp25, r80_7ff_tmp26, bytetest_b2_b2;
		BitBlock r80_7ff_tmp27, tmp6, tmp7, tmp8, tmp9, tmp10, bytetest_e1_ef, tmp11;
		BitBlock bytetest_e0, tmp12, bytetest_a0_bf, tmp13, tmp14, tmp15, tmp16, tmp17;
		BitBlock tmp18, r800_ffff_tmp1, r800_ffff_tmp2, r800_ffff_tmp3, r800_ffff_tmp4;
		BitBlock bytetest_e1, r800_ffff_tmp5, r800_ffff_tmp6, r800_ffff_tmp7;
		BitBlock r800_ffff_tmp8, r800_ffff_tmp9, r800_ffff_tmp10, bytetest_be;
		BitBlock r800_ffff_tmp11, r800_ffff_tmp12, bytetest_88_8f, r800_ffff_tmp13;
		BitBlock r800_ffff_tmp14, r800_ffff_tmp15, r800_ffff_tmp16, r800_ffff_tmp17;
		BitBlock r800_ffff_tmp18, r800_ffff_tmp19, r800_ffff_tmp20, r800_ffff_tmp21;
		BitBlock bytetest_98_9f, r800_ffff_tmp22, r800_ffff_tmp23, bytetest_a8_af;
		BitBlock r800_ffff_tmp24, r800_ffff_tmp25, r800_ffff_tmp26, bytetest_bc_bc;
		BitBlock r800_ffff_tmp27, r800_ffff_tmp28, r800_ffff_tmp29, bytetest_bf;
		BitBlock bytetest_8c_8c, r800_ffff_tmp30, r800_ffff_tmp31, r800_ffff_tmp32;
		BitBlock r800_ffff_tmp33;




        struct_Lt.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(tmp1, basis_bits.bit_2);
        tmp3 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp4 = simd_or(tmp3, basis_bits.bit_6);
        tmp5 = simd_or(basis_bits.bit_3, tmp4);
        bytetest_c2_df = simd_and(tmp2, tmp5);
        if ((bitblock::any(bytetest_c2_df) || carryQ.CarryTest(0, 2))) {
          r80_7ff_tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
          r80_7ff_tmp2 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
          r80_7ff_tmp3 = simd_andc(r80_7ff_tmp1, r80_7ff_tmp2);
          r80_7ff_tmp4 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
          r80_7ff_tmp5 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
          r80_7ff_tmp6 = simd_and(r80_7ff_tmp4, r80_7ff_tmp5);
          bytetest_c7 = simd_and(r80_7ff_tmp3, r80_7ff_tmp6);
          r80_7ff_tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r80_7ff_tmp8 = simd_andc(r80_7ff_tmp7, r80_7ff_tmp2);
          r80_7ff_tmp9 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
          r80_7ff_tmp10 = simd_and(r80_7ff_tmp4, r80_7ff_tmp9);
          bytetest_85_85 = simd_and(r80_7ff_tmp8, r80_7ff_tmp10);
          r80_7ff_tmp11 = simd<1>::constant<1>();
          carryQ.cq[0] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp11, carryQ.get_carry_in(0), r80_7ff_tmp12));
          r80_7ff_tmp13 = simd_and(r80_7ff_tmp12, bytetest_c7);
          carryQ.cq[1] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp13, carryQ.get_carry_in(1), r80_7ff_tmp14));
          r80_7ff_tmp15 = simd_and(r80_7ff_tmp14, bytetest_85_85);
          struct_Lt.cc = simd_or(r80_7ff_tmp15, struct_Lt.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp3, r80_7ff_tmp6);
          r80_7ff_tmp16 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
          r80_7ff_tmp17 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
          r80_7ff_tmp18 = simd_andc(r80_7ff_tmp16, r80_7ff_tmp17);
          bytetest_88_88 = simd_and(r80_7ff_tmp8, r80_7ff_tmp18);
          r80_7ff_tmp19 = simd_and(r80_7ff_tmp14, bytetest_88_88);
          struct_Lt.cc = simd_or(r80_7ff_tmp19, struct_Lt.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp3, r80_7ff_tmp6);
          r80_7ff_tmp20 = simd_and(r80_7ff_tmp16, r80_7ff_tmp5);
          bytetest_8b_8b = simd_and(r80_7ff_tmp8, r80_7ff_tmp20);
          r80_7ff_tmp21 = simd_and(r80_7ff_tmp14, bytetest_8b_8b);
          struct_Lt.cc = simd_or(r80_7ff_tmp21, struct_Lt.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp3, r80_7ff_tmp6);
          r80_7ff_tmp22 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
          r80_7ff_tmp23 = simd_and(r80_7ff_tmp7, r80_7ff_tmp22);
          r80_7ff_tmp24 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
          r80_7ff_tmp25 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
          r80_7ff_tmp26 = simd_andc(r80_7ff_tmp25, r80_7ff_tmp24);
          bytetest_b2_b2 = simd_and(r80_7ff_tmp23, r80_7ff_tmp26);
          r80_7ff_tmp27 = simd_and(r80_7ff_tmp14, bytetest_b2_b2);
          struct_Lt.cc = simd_or(r80_7ff_tmp27, struct_Lt.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(0, 2);
        }
        tmp6 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp7 = simd_and(tmp1, tmp6);
        tmp8 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp9 = simd_or(basis_bits.bit_5, tmp8);
        tmp10 = simd_or(basis_bits.bit_4, tmp9);
        bytetest_e1_ef = simd_and(tmp7, tmp10);
        tmp11 = simd_or(tmp3, tmp8);
        bytetest_e0 = simd_andc(tmp7, tmp11);
        tmp12 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_a0_bf = simd_and(tmp12, basis_bits.bit_2);
        tmp13 = simd<1>::constant<1>();
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp13, carryQ.get_carry_in(2), tmp14));
        tmp15 = simd_and(tmp14, bytetest_e0);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp15, carryQ.get_carry_in(3), tmp16));
        tmp17 = simd_and(tmp16, bytetest_a0_bf);
        tmp18 = simd_or(tmp17, bytetest_e1_ef);
        if ((bitblock::any(tmp18) || carryQ.CarryTest(4, 4))) {
          r800_ffff_tmp1 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp2 = simd_and(tmp1, r800_ffff_tmp1);
          r800_ffff_tmp3 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
          r800_ffff_tmp4 = simd_andc(r800_ffff_tmp3, tmp3);
          bytetest_e1 = simd_and(r800_ffff_tmp2, r800_ffff_tmp4);
          r800_ffff_tmp5 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp6 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp7 = simd_and(r800_ffff_tmp5, r800_ffff_tmp6);
          r800_ffff_tmp8 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
          r800_ffff_tmp9 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp10 = simd_and(r800_ffff_tmp8, r800_ffff_tmp9);
          bytetest_be = simd_and(r800_ffff_tmp7, r800_ffff_tmp10);
          r800_ffff_tmp11 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp12 = simd_andc(r800_ffff_tmp5, r800_ffff_tmp11);
          bytetest_88_8f = simd_and(r800_ffff_tmp12, basis_bits.bit_4);
          r800_ffff_tmp13 = simd<1>::constant<1>();
          carryQ.cq[4] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp13, carryQ.get_carry_in(4), r800_ffff_tmp14));
          r800_ffff_tmp15 = simd_and(r800_ffff_tmp14, bytetest_e1);
          carryQ.cq[5] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp15, carryQ.get_carry_in(5), r800_ffff_tmp16));
          r800_ffff_tmp17 = simd_and(r800_ffff_tmp16, bytetest_be);
          carryQ.cq[6] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp17, carryQ.get_carry_in(6), r800_ffff_tmp18));
          r800_ffff_tmp19 = simd_and(r800_ffff_tmp18, bytetest_88_8f);
          struct_Lt.cc = simd_or(r800_ffff_tmp19, struct_Lt.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, r800_ffff_tmp4);
          bytetest_be = simd_and(r800_ffff_tmp7, r800_ffff_tmp10);
          r800_ffff_tmp20 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
          r800_ffff_tmp21 = simd_and(r800_ffff_tmp5, r800_ffff_tmp20);
          bytetest_98_9f = simd_and(r800_ffff_tmp21, basis_bits.bit_4);
          r800_ffff_tmp22 = simd_and(r800_ffff_tmp18, bytetest_98_9f);
          struct_Lt.cc = simd_or(r800_ffff_tmp22, struct_Lt.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, r800_ffff_tmp4);
          bytetest_be = simd_and(r800_ffff_tmp7, r800_ffff_tmp10);
          r800_ffff_tmp23 = simd_and(r800_ffff_tmp5, r800_ffff_tmp1);
          bytetest_a8_af = simd_and(r800_ffff_tmp23, basis_bits.bit_4);
          r800_ffff_tmp24 = simd_and(r800_ffff_tmp18, bytetest_a8_af);
          struct_Lt.cc = simd_or(r800_ffff_tmp24, struct_Lt.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, r800_ffff_tmp4);
          bytetest_be = simd_and(r800_ffff_tmp7, r800_ffff_tmp10);
          r800_ffff_tmp25 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp26 = simd_andc(r800_ffff_tmp8, r800_ffff_tmp25);
          bytetest_bc_bc = simd_and(r800_ffff_tmp7, r800_ffff_tmp26);
          r800_ffff_tmp27 = simd_and(r800_ffff_tmp18, bytetest_bc_bc);
          struct_Lt.cc = simd_or(r800_ffff_tmp27, struct_Lt.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, r800_ffff_tmp4);
          r800_ffff_tmp28 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp29 = simd_and(r800_ffff_tmp8, r800_ffff_tmp28);
          bytetest_bf = simd_and(r800_ffff_tmp7, r800_ffff_tmp29);
          bytetest_8c_8c = simd_and(r800_ffff_tmp12, r800_ffff_tmp26);
          r800_ffff_tmp30 = simd_and(r800_ffff_tmp16, bytetest_bf);
          carryQ.cq[7] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp30, carryQ.get_carry_in(7), r800_ffff_tmp31));
          r800_ffff_tmp32 = simd_and(r800_ffff_tmp31, bytetest_8c_8c);
          struct_Lt.cc = simd_or(r800_ffff_tmp32, struct_Lt.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp2, r800_ffff_tmp4);
          bytetest_bf = simd_and(r800_ffff_tmp7, r800_ffff_tmp29);
          bytetest_bc_bc = simd_and(r800_ffff_tmp7, r800_ffff_tmp26);
          r800_ffff_tmp33 = simd_and(r800_ffff_tmp31, bytetest_bc_bc);
          struct_Lt.cc = simd_or(r800_ffff_tmp33, struct_Lt.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(4, 4);
        }
  }
  CarryArray<8, 0> carryQ;
  };

  struct Lu {
  Lu() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Lu & struct_Lu) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, tmp7, tmp8, tmp9, tmp10;
		BitBlock bytetest_41_5a, tmp11, tmp12, tmp13, bytetest_f0, tmp14, tmp15, tmp16;
		BitBlock tmp17, tmp18, tmp19, bytetest_9d, bytetest_90, tmp20, tmp21, tmp22;
		BitBlock tmp23, bytetest_80_99, tmp24, tmp25, tmp26, tmp27, tmp28, tmp29;
		BitBlock tmp30, tmp31, tmp32, tmp33, bytetest_91, tmp34, tmp35, tmp36, tmp37;
		BitBlock bytetest_80_8d, tmp38, tmp39, tmp40, tmp41, bytetest_b4_bf, tmp42;
		BitBlock tmp43, tmp44, tmp45, bytetest_92, tmp46, bytetest_80_81, tmp47, tmp48;
		BitBlock tmp49, tmp50, tmp51, bytetest_a8_bf, tmp52, tmp53, tmp54;
		BitBlock bytetest_9c_9c, tmp55, tmp56, bytetest_9e_9f, tmp57, tmp58, tmp59;
		BitBlock bytetest_a2_a2, tmp60, tmp61, tmp62, tmp63, tmp64, bytetest_a5_a6;
		BitBlock tmp65, tmp66, tmp67, tmp68, bytetest_a9_ac, tmp69, tmp70, tmp71;
		BitBlock tmp72, bytetest_ae_b5, tmp73, tmp74, bytetest_93, tmp75, tmp76, tmp77;
		BitBlock bytetest_90_a9, tmp78, tmp79, tmp80, tmp81, bytetest_94, tmp82;
		BitBlock bytetest_84_85, tmp83, tmp84, tmp85, tmp86, tmp87, tmp88;
		BitBlock bytetest_87_8a, tmp89, tmp90, tmp91, tmp92, tmp93, tmp94;
		BitBlock bytetest_8d_94, tmp95, tmp96, tmp97, bytetest_96_9c, tmp98, tmp99;
		BitBlock tmp100, bytetest_b8_b9, tmp101, tmp102, tmp103, tmp104;
		BitBlock bytetest_bb_be, tmp105, tmp106, bytetest_95, tmp107, bytetest_80_84;
		BitBlock tmp108, tmp109, tmp110, tmp111, bytetest_86_86, tmp112, tmp113;
		BitBlock tmp114, bytetest_8a_90, tmp115, bytetest_96, bytetest_80_85, tmp116;
		BitBlock tmp117, tmp118, tmp119, bytetest_ac_bf, tmp120, tmp121;
		BitBlock bytetest_a0_b9, tmp122, tmp123, bytetest_97, tmp124, tmp125, tmp126;
		BitBlock tmp127, bytetest_94_ad, tmp128, tmp129, tmp130, tmp131, bytetest_98;
		BitBlock tmp132, tmp133, tmp134, bytetest_88_a1, tmp135, tmp136, tmp137;
		BitBlock tmp138, bytetest_99, tmp139, bytetest_80_95, tmp140, tmp141, tmp142;
		BitBlock bytetest_bc_bf, tmp143, tmp144, tmp145, bytetest_9a, bytetest_80_89;
		BitBlock tmp146, tmp147, tmp148, bytetest_b0_bf, tmp149, tmp150, tmp151;
		BitBlock bytetest_9b, bytetest_80_80, tmp152, tmp153, tmp154, tmp155, tmp156;
		BitBlock tmp157, bytetest_a2_ba, tmp158, bytetest_9c, tmp159, tmp160, tmp161;
		BitBlock tmp162, bytetest_9c_b4, tmp163, tmp164, tmp165, tmp166, tmp167;
		BitBlock tmp168, tmp169, bytetest_96_ae, tmp170, tmp171, tmp172, tmp173;
		BitBlock bytetest_9e, tmp174, tmp175, tmp176, tmp177, tmp178, bytetest_90_a8;
		BitBlock tmp179, tmp180, tmp181, bytetest_9f, bytetest_8a_8a, tmp182, tmp183;
		BitBlock tmp184, tmp185, bytetest_c2_df, r80_7ff_tmp1, bytetest_c3;
		BitBlock r80_7ff_tmp2, r80_7ff_tmp3, bytetest_80_96, r80_7ff_tmp4;
		BitBlock r80_7ff_tmp5, r80_7ff_tmp6, r80_7ff_tmp7, bytetest_98_9e;
		BitBlock r80_7ff_tmp8, bytetest_c4, r80_7ff_tmp9, r80_7ff_tmp10, r80_7ff_tmp11;
		BitBlock bytetest_82_82, r80_7ff_tmp12, bytetest_84_84, r80_7ff_tmp13;
		BitBlock r80_7ff_tmp14, bytetest_88_88, r80_7ff_tmp15, r80_7ff_tmp16;
		BitBlock bytetest_8c_8c, r80_7ff_tmp17, bytetest_8e_8e, r80_7ff_tmp18;
		BitBlock bytetest_90_90, r80_7ff_tmp19, bytetest_92_92, r80_7ff_tmp20;
		BitBlock bytetest_94_94, r80_7ff_tmp21, bytetest_96_96, r80_7ff_tmp22;
		BitBlock bytetest_98_98, r80_7ff_tmp23, bytetest_9a_9a, r80_7ff_tmp24;
		BitBlock r80_7ff_tmp25, bytetest_9e_9e, r80_7ff_tmp26, bytetest_a0_a0;
		BitBlock r80_7ff_tmp27, r80_7ff_tmp28, bytetest_a4_a4, r80_7ff_tmp29;
		BitBlock bytetest_a6_a6, r80_7ff_tmp30, bytetest_a8_a8, r80_7ff_tmp31;
		BitBlock bytetest_aa_aa, r80_7ff_tmp32, bytetest_ac_ac, r80_7ff_tmp33;
		BitBlock bytetest_ae_ae, r80_7ff_tmp34, bytetest_b0_b0, r80_7ff_tmp35;
		BitBlock bytetest_b2_b2, r80_7ff_tmp36, bytetest_b4_b4, r80_7ff_tmp37;
		BitBlock bytetest_b6_b6, r80_7ff_tmp38, bytetest_b9_b9, r80_7ff_tmp39;
		BitBlock bytetest_bb_bb, r80_7ff_tmp40, bytetest_bd_bd, r80_7ff_tmp41;
		BitBlock bytetest_bf_bf, r80_7ff_tmp42, bytetest_c5, bytetest_81_81;
		BitBlock r80_7ff_tmp43, r80_7ff_tmp44, r80_7ff_tmp45, bytetest_83_83;
		BitBlock r80_7ff_tmp46, bytetest_85_85, r80_7ff_tmp47, bytetest_87_87;
		BitBlock r80_7ff_tmp48, r80_7ff_tmp49, r80_7ff_tmp50, r80_7ff_tmp51;
		BitBlock r80_7ff_tmp52, r80_7ff_tmp53, r80_7ff_tmp54, r80_7ff_tmp55;
		BitBlock r80_7ff_tmp56, r80_7ff_tmp57, r80_7ff_tmp58, r80_7ff_tmp59;
		BitBlock r80_7ff_tmp60, r80_7ff_tmp61, r80_7ff_tmp62, r80_7ff_tmp63;
		BitBlock r80_7ff_tmp64, r80_7ff_tmp65, r80_7ff_tmp66, r80_7ff_tmp67;
		BitBlock r80_7ff_tmp68, r80_7ff_tmp69, r80_7ff_tmp70, r80_7ff_tmp71;
		BitBlock r80_7ff_tmp72, r80_7ff_tmp73, r80_7ff_tmp74, bytetest_c6;
		BitBlock r80_7ff_tmp75, bytetest_81_82, r80_7ff_tmp76, r80_7ff_tmp77;
		BitBlock r80_7ff_tmp78, r80_7ff_tmp79, r80_7ff_tmp80, bytetest_86_87;
		BitBlock r80_7ff_tmp81, r80_7ff_tmp82, bytetest_89_8b, r80_7ff_tmp83;
		BitBlock r80_7ff_tmp84, r80_7ff_tmp85, bytetest_8e_91, r80_7ff_tmp86;
		BitBlock r80_7ff_tmp87, r80_7ff_tmp88, bytetest_93_94, r80_7ff_tmp89;
		BitBlock r80_7ff_tmp90, r80_7ff_tmp91, bytetest_96_98, r80_7ff_tmp92;
		BitBlock r80_7ff_tmp93, bytetest_9c_9d, r80_7ff_tmp94, r80_7ff_tmp95;
		BitBlock r80_7ff_tmp96, r80_7ff_tmp97, r80_7ff_tmp98, bytetest_9f_a0;
		BitBlock r80_7ff_tmp99, r80_7ff_tmp100, r80_7ff_tmp101, bytetest_a6_a7;
		BitBlock r80_7ff_tmp102, bytetest_a9_a9, r80_7ff_tmp103, r80_7ff_tmp104;
		BitBlock bytetest_ae_af, r80_7ff_tmp105, r80_7ff_tmp106, bytetest_b1_b3;
		BitBlock r80_7ff_tmp107, bytetest_b5_b5, r80_7ff_tmp108, r80_7ff_tmp109;
		BitBlock bytetest_b7_b8, r80_7ff_tmp110, bytetest_bc_bc, r80_7ff_tmp111;
		BitBlock bytetest_c7, r80_7ff_tmp112, r80_7ff_tmp113, r80_7ff_tmp114;
		BitBlock r80_7ff_tmp115, r80_7ff_tmp116, bytetest_8d_8d, r80_7ff_tmp117;
		BitBlock bytetest_8f_8f, r80_7ff_tmp118, bytetest_91_91, r80_7ff_tmp119;
		BitBlock bytetest_93_93, r80_7ff_tmp120, bytetest_95_95, r80_7ff_tmp121;
		BitBlock bytetest_97_97, r80_7ff_tmp122, bytetest_99_99, r80_7ff_tmp123;
		BitBlock bytetest_9b_9b, r80_7ff_tmp124, r80_7ff_tmp125, r80_7ff_tmp126;
		BitBlock r80_7ff_tmp127, r80_7ff_tmp128, r80_7ff_tmp129, r80_7ff_tmp130;
		BitBlock r80_7ff_tmp131, r80_7ff_tmp132, r80_7ff_tmp133, bytetest_b1_b1;
		BitBlock r80_7ff_tmp134, r80_7ff_tmp135, bytetest_b6_b8, r80_7ff_tmp136;
		BitBlock bytetest_ba_ba, r80_7ff_tmp137, r80_7ff_tmp138, bytetest_be_be;
		BitBlock r80_7ff_tmp139, bytetest_c8, r80_7ff_tmp140, r80_7ff_tmp141;
		BitBlock r80_7ff_tmp142, r80_7ff_tmp143, r80_7ff_tmp144, r80_7ff_tmp145;
		BitBlock r80_7ff_tmp146, r80_7ff_tmp147, r80_7ff_tmp148, r80_7ff_tmp149;
		BitBlock r80_7ff_tmp150, r80_7ff_tmp151, r80_7ff_tmp152, r80_7ff_tmp153;
		BitBlock r80_7ff_tmp154, r80_7ff_tmp155, r80_7ff_tmp156, r80_7ff_tmp157;
		BitBlock r80_7ff_tmp158, r80_7ff_tmp159, r80_7ff_tmp160, r80_7ff_tmp161;
		BitBlock r80_7ff_tmp162, r80_7ff_tmp163, r80_7ff_tmp164, r80_7ff_tmp165;
		BitBlock r80_7ff_tmp166, r80_7ff_tmp167, r80_7ff_tmp168, bytetest_ba_bb;
		BitBlock r80_7ff_tmp169, r80_7ff_tmp170, bytetest_bd_be, r80_7ff_tmp171;
		BitBlock bytetest_c9, r80_7ff_tmp172, r80_7ff_tmp173, r80_7ff_tmp174;
		BitBlock bytetest_83_86, r80_7ff_tmp175, r80_7ff_tmp176, r80_7ff_tmp177;
		BitBlock r80_7ff_tmp178, r80_7ff_tmp179, bytetest_cd, r80_7ff_tmp180;
		BitBlock r80_7ff_tmp181, r80_7ff_tmp182, r80_7ff_tmp183, r80_7ff_tmp184;
		BitBlock bytetest_ce, r80_7ff_tmp185, r80_7ff_tmp186, r80_7ff_tmp187;
		BitBlock bytetest_88_8a, r80_7ff_tmp188, r80_7ff_tmp189, bytetest_8e_8f;
		BitBlock r80_7ff_tmp190, r80_7ff_tmp191, r80_7ff_tmp192, bytetest_91_a1;
		BitBlock r80_7ff_tmp193, r80_7ff_tmp194, r80_7ff_tmp195, bytetest_a3_ab;
		BitBlock r80_7ff_tmp196, bytetest_cf, r80_7ff_tmp197, r80_7ff_tmp198;
		BitBlock r80_7ff_tmp199, r80_7ff_tmp200, bytetest_92_94, r80_7ff_tmp201;
		BitBlock r80_7ff_tmp202, r80_7ff_tmp203, r80_7ff_tmp204, r80_7ff_tmp205;
		BitBlock r80_7ff_tmp206, r80_7ff_tmp207, r80_7ff_tmp208, r80_7ff_tmp209;
		BitBlock r80_7ff_tmp210, r80_7ff_tmp211, r80_7ff_tmp212, r80_7ff_tmp213;
		BitBlock r80_7ff_tmp214, bytetest_b7_b7, r80_7ff_tmp215, r80_7ff_tmp216;
		BitBlock bytetest_b9_ba, r80_7ff_tmp217, r80_7ff_tmp218, bytetest_d0;
		BitBlock bytetest_80_af, r80_7ff_tmp219, r80_7ff_tmp220, r80_7ff_tmp221;
		BitBlock bytetest_bd_bf, r80_7ff_tmp222, r80_7ff_tmp223, bytetest_d1;
		BitBlock r80_7ff_tmp224, r80_7ff_tmp225, r80_7ff_tmp226, r80_7ff_tmp227;
		BitBlock r80_7ff_tmp228, r80_7ff_tmp229, r80_7ff_tmp230, r80_7ff_tmp231;
		BitBlock r80_7ff_tmp232, r80_7ff_tmp233, r80_7ff_tmp234, r80_7ff_tmp235;
		BitBlock r80_7ff_tmp236, r80_7ff_tmp237, bytetest_b8_b8, r80_7ff_tmp238;
		BitBlock r80_7ff_tmp239, r80_7ff_tmp240, r80_7ff_tmp241, bytetest_d2;
		BitBlock r80_7ff_tmp242, r80_7ff_tmp243, r80_7ff_tmp244, r80_7ff_tmp245;
		BitBlock r80_7ff_tmp246, r80_7ff_tmp247, r80_7ff_tmp248, r80_7ff_tmp249;
		BitBlock r80_7ff_tmp250, r80_7ff_tmp251, r80_7ff_tmp252, r80_7ff_tmp253;
		BitBlock r80_7ff_tmp254, r80_7ff_tmp255, r80_7ff_tmp256, r80_7ff_tmp257;
		BitBlock r80_7ff_tmp258, r80_7ff_tmp259, r80_7ff_tmp260, r80_7ff_tmp261;
		BitBlock r80_7ff_tmp262, r80_7ff_tmp263, r80_7ff_tmp264, r80_7ff_tmp265;
		BitBlock r80_7ff_tmp266, r80_7ff_tmp267, r80_7ff_tmp268, r80_7ff_tmp269;
		BitBlock r80_7ff_tmp270, r80_7ff_tmp271, bytetest_d3, r80_7ff_tmp272;
		BitBlock r80_7ff_tmp273, r80_7ff_tmp274, r80_7ff_tmp275, r80_7ff_tmp276;
		BitBlock r80_7ff_tmp277, bytetest_89_89, r80_7ff_tmp278, bytetest_8b_8b;
		BitBlock r80_7ff_tmp279, r80_7ff_tmp280, r80_7ff_tmp281, r80_7ff_tmp282;
		BitBlock r80_7ff_tmp283, r80_7ff_tmp284, r80_7ff_tmp285, r80_7ff_tmp286;
		BitBlock r80_7ff_tmp287, r80_7ff_tmp288, r80_7ff_tmp289, r80_7ff_tmp290;
		BitBlock r80_7ff_tmp291, r80_7ff_tmp292, r80_7ff_tmp293, r80_7ff_tmp294;
		BitBlock r80_7ff_tmp295, r80_7ff_tmp296, r80_7ff_tmp297, r80_7ff_tmp298;
		BitBlock r80_7ff_tmp299, r80_7ff_tmp300, r80_7ff_tmp301, r80_7ff_tmp302;
		BitBlock r80_7ff_tmp303, r80_7ff_tmp304, bytetest_d4, r80_7ff_tmp305;
		BitBlock r80_7ff_tmp306, r80_7ff_tmp307, r80_7ff_tmp308, r80_7ff_tmp309;
		BitBlock r80_7ff_tmp310, r80_7ff_tmp311, r80_7ff_tmp312, r80_7ff_tmp313;
		BitBlock r80_7ff_tmp314, r80_7ff_tmp315, r80_7ff_tmp316, r80_7ff_tmp317;
		BitBlock r80_7ff_tmp318, r80_7ff_tmp319, r80_7ff_tmp320, r80_7ff_tmp321;
		BitBlock r80_7ff_tmp322, r80_7ff_tmp323, r80_7ff_tmp324, r80_7ff_tmp325;
		BitBlock r80_7ff_tmp326, bytetest_d5, r80_7ff_tmp327, r80_7ff_tmp328;
		BitBlock r80_7ff_tmp329, r80_7ff_tmp330, bytetest_b1_bf, r80_7ff_tmp331;
		BitBlock r80_7ff_tmp332, tmp186, tmp187, bytetest_e1_ef, bytetest_e0;
		BitBlock bytetest_a0_bf, tmp188, tmp189, tmp190, tmp191, r800_ffff_tmp1;
		BitBlock bytetest_e1, bytetest_83, r800_ffff_tmp2, r800_ffff_tmp3;
		BitBlock r800_ffff_tmp4, r800_ffff_tmp5, r800_ffff_tmp6, bytetest_82;
		BitBlock r800_ffff_tmp7, r800_ffff_tmp8, r800_ffff_tmp9, r800_ffff_tmp10;
		BitBlock r800_ffff_tmp11, r800_ffff_tmp12, bytetest_b8, r800_ffff_tmp13;
		BitBlock r800_ffff_tmp14, r800_ffff_tmp15, r800_ffff_tmp16, r800_ffff_tmp17;
		BitBlock r800_ffff_tmp18, r800_ffff_tmp19, r800_ffff_tmp20, r800_ffff_tmp21;
		BitBlock r800_ffff_tmp22, r800_ffff_tmp23, r800_ffff_tmp24, r800_ffff_tmp25;
		BitBlock r800_ffff_tmp26, r800_ffff_tmp27, r800_ffff_tmp28, r800_ffff_tmp29;
		BitBlock r800_ffff_tmp30, r800_ffff_tmp31, r800_ffff_tmp32, r800_ffff_tmp33;
		BitBlock r800_ffff_tmp34, r800_ffff_tmp35, r800_ffff_tmp36, r800_ffff_tmp37;
		BitBlock r800_ffff_tmp38, r800_ffff_tmp39, r800_ffff_tmp40, r800_ffff_tmp41;
		BitBlock r800_ffff_tmp42, r800_ffff_tmp43, r800_ffff_tmp44, r800_ffff_tmp45;
		BitBlock r800_ffff_tmp46, bytetest_b9, r800_ffff_tmp47, r800_ffff_tmp48;
		BitBlock r800_ffff_tmp49, r800_ffff_tmp50, r800_ffff_tmp51, r800_ffff_tmp52;
		BitBlock r800_ffff_tmp53, r800_ffff_tmp54, r800_ffff_tmp55, r800_ffff_tmp56;
		BitBlock r800_ffff_tmp57, r800_ffff_tmp58, r800_ffff_tmp59, r800_ffff_tmp60;
		BitBlock r800_ffff_tmp61, r800_ffff_tmp62, r800_ffff_tmp63, r800_ffff_tmp64;
		BitBlock r800_ffff_tmp65, r800_ffff_tmp66, r800_ffff_tmp67, r800_ffff_tmp68;
		BitBlock r800_ffff_tmp69, r800_ffff_tmp70, r800_ffff_tmp71, r800_ffff_tmp72;
		BitBlock r800_ffff_tmp73, r800_ffff_tmp74, r800_ffff_tmp75, r800_ffff_tmp76;
		BitBlock r800_ffff_tmp77, r800_ffff_tmp78, r800_ffff_tmp79, r800_ffff_tmp80;
		BitBlock bytetest_ba, r800_ffff_tmp81, r800_ffff_tmp82, r800_ffff_tmp83;
		BitBlock r800_ffff_tmp84, r800_ffff_tmp85, r800_ffff_tmp86, r800_ffff_tmp87;
		BitBlock r800_ffff_tmp88, r800_ffff_tmp89, r800_ffff_tmp90, r800_ffff_tmp91;
		BitBlock r800_ffff_tmp92, r800_ffff_tmp93, r800_ffff_tmp94, r800_ffff_tmp95;
		BitBlock r800_ffff_tmp96, r800_ffff_tmp97, r800_ffff_tmp98, r800_ffff_tmp99;
		BitBlock r800_ffff_tmp100, r800_ffff_tmp101, r800_ffff_tmp102;
		BitBlock r800_ffff_tmp103, r800_ffff_tmp104, r800_ffff_tmp105;
		BitBlock r800_ffff_tmp106, r800_ffff_tmp107, r800_ffff_tmp108;
		BitBlock r800_ffff_tmp109, r800_ffff_tmp110, bytetest_bb, r800_ffff_tmp111;
		BitBlock r800_ffff_tmp112, r800_ffff_tmp113, r800_ffff_tmp114;
		BitBlock r800_ffff_tmp115, r800_ffff_tmp116, r800_ffff_tmp117;
		BitBlock r800_ffff_tmp118, r800_ffff_tmp119, r800_ffff_tmp120;
		BitBlock r800_ffff_tmp121, r800_ffff_tmp122, r800_ffff_tmp123;
		BitBlock r800_ffff_tmp124, r800_ffff_tmp125, r800_ffff_tmp126;
		BitBlock r800_ffff_tmp127, r800_ffff_tmp128, r800_ffff_tmp129;
		BitBlock r800_ffff_tmp130, r800_ffff_tmp131, r800_ffff_tmp132;
		BitBlock r800_ffff_tmp133, r800_ffff_tmp134, r800_ffff_tmp135;
		BitBlock r800_ffff_tmp136, r800_ffff_tmp137, r800_ffff_tmp138;
		BitBlock r800_ffff_tmp139, r800_ffff_tmp140, r800_ffff_tmp141;
		BitBlock r800_ffff_tmp142, r800_ffff_tmp143, r800_ffff_tmp144, bytetest_bc;
		BitBlock bytetest_88_8f, r800_ffff_tmp145, r800_ffff_tmp146, r800_ffff_tmp147;
		BitBlock r800_ffff_tmp148, bytetest_98_9d, r800_ffff_tmp149, bytetest_a8_af;
		BitBlock r800_ffff_tmp150, bytetest_b8_bf, r800_ffff_tmp151, bytetest_bd;
		BitBlock bytetest_88_8d, r800_ffff_tmp152, r800_ffff_tmp153, r800_ffff_tmp154;
		BitBlock r800_ffff_tmp155, r800_ffff_tmp156, bytetest_9d_9d, r800_ffff_tmp157;
		BitBlock bytetest_9f_9f, r800_ffff_tmp158, r800_ffff_tmp159, bytetest_be;
		BitBlock bytetest_b8_bb, r800_ffff_tmp160, r800_ffff_tmp161, r800_ffff_tmp162;
		BitBlock bytetest_bf, bytetest_88_8b, r800_ffff_tmp163, r800_ffff_tmp164;
		BitBlock r800_ffff_tmp165, bytetest_98_9b, r800_ffff_tmp166, bytetest_a8_ac;
		BitBlock r800_ffff_tmp167, r800_ffff_tmp168, bytetest_e2, bytetest_84;
		BitBlock r800_ffff_tmp169, r800_ffff_tmp170, r800_ffff_tmp171;
		BitBlock r800_ffff_tmp172, r800_ffff_tmp173, r800_ffff_tmp174;
		BitBlock r800_ffff_tmp175, r800_ffff_tmp176, bytetest_8b_8d, r800_ffff_tmp177;
		BitBlock r800_ffff_tmp178, bytetest_90_92, r800_ffff_tmp179, r800_ffff_tmp180;
		BitBlock r800_ffff_tmp181, bytetest_99_9d, r800_ffff_tmp182, r800_ffff_tmp183;
		BitBlock r800_ffff_tmp184, r800_ffff_tmp185, r800_ffff_tmp186, bytetest_aa_ad;
		BitBlock r800_ffff_tmp187, bytetest_b0_b3, r800_ffff_tmp188, bytetest_be_bf;
		BitBlock r800_ffff_tmp189, bytetest_85, r800_ffff_tmp190, r800_ffff_tmp191;
		BitBlock r800_ffff_tmp192, bytetest_86, r800_ffff_tmp193, r800_ffff_tmp194;
		BitBlock r800_ffff_tmp195, bytetest_b0, r800_ffff_tmp196, bytetest_80_ae;
		BitBlock r800_ffff_tmp197, r800_ffff_tmp198, r800_ffff_tmp199, bytetest_b1;
		BitBlock r800_ffff_tmp200, r800_ffff_tmp201, r800_ffff_tmp202;
		BitBlock r800_ffff_tmp203, r800_ffff_tmp204, bytetest_a2_a4, r800_ffff_tmp205;
		BitBlock bytetest_a7_a7, r800_ffff_tmp206, r800_ffff_tmp207, bytetest_ab_ab;
		BitBlock r800_ffff_tmp208, r800_ffff_tmp209, bytetest_ad_b0, r800_ffff_tmp210;
		BitBlock r800_ffff_tmp211, r800_ffff_tmp212, bytetest_b2, r800_ffff_tmp213;
		BitBlock r800_ffff_tmp214, r800_ffff_tmp215, r800_ffff_tmp216;
		BitBlock r800_ffff_tmp217, r800_ffff_tmp218, r800_ffff_tmp219;
		BitBlock r800_ffff_tmp220, r800_ffff_tmp221, r800_ffff_tmp222;
		BitBlock r800_ffff_tmp223, r800_ffff_tmp224, r800_ffff_tmp225;
		BitBlock r800_ffff_tmp226, r800_ffff_tmp227, r800_ffff_tmp228;
		BitBlock r800_ffff_tmp229, r800_ffff_tmp230, r800_ffff_tmp231;
		BitBlock r800_ffff_tmp232, r800_ffff_tmp233, r800_ffff_tmp234;
		BitBlock r800_ffff_tmp235, r800_ffff_tmp236, r800_ffff_tmp237;
		BitBlock r800_ffff_tmp238, r800_ffff_tmp239, r800_ffff_tmp240;
		BitBlock r800_ffff_tmp241, r800_ffff_tmp242, r800_ffff_tmp243;
		BitBlock r800_ffff_tmp244, r800_ffff_tmp245, r800_ffff_tmp246;
		BitBlock r800_ffff_tmp247, r800_ffff_tmp248, bytetest_b3, r800_ffff_tmp249;
		BitBlock r800_ffff_tmp250, r800_ffff_tmp251, r800_ffff_tmp252;
		BitBlock r800_ffff_tmp253, r800_ffff_tmp254, r800_ffff_tmp255;
		BitBlock r800_ffff_tmp256, r800_ffff_tmp257, r800_ffff_tmp258;
		BitBlock r800_ffff_tmp259, r800_ffff_tmp260, r800_ffff_tmp261;
		BitBlock r800_ffff_tmp262, r800_ffff_tmp263, r800_ffff_tmp264;
		BitBlock r800_ffff_tmp265, r800_ffff_tmp266, r800_ffff_tmp267;
		BitBlock r800_ffff_tmp268, r800_ffff_tmp269, bytetest_ad_ad, r800_ffff_tmp270;
		BitBlock r800_ffff_tmp271, bytetest_ea, r800_ffff_tmp272, r800_ffff_tmp273;
		BitBlock r800_ffff_tmp274, r800_ffff_tmp275, r800_ffff_tmp276;
		BitBlock r800_ffff_tmp277, r800_ffff_tmp278, r800_ffff_tmp279;
		BitBlock r800_ffff_tmp280, r800_ffff_tmp281, r800_ffff_tmp282;
		BitBlock r800_ffff_tmp283, r800_ffff_tmp284, r800_ffff_tmp285;
		BitBlock r800_ffff_tmp286, r800_ffff_tmp287, r800_ffff_tmp288;
		BitBlock r800_ffff_tmp289, r800_ffff_tmp290, r800_ffff_tmp291;
		BitBlock r800_ffff_tmp292, r800_ffff_tmp293, r800_ffff_tmp294;
		BitBlock r800_ffff_tmp295, r800_ffff_tmp296, r800_ffff_tmp297;
		BitBlock r800_ffff_tmp298, r800_ffff_tmp299, r800_ffff_tmp300;
		BitBlock r800_ffff_tmp301, r800_ffff_tmp302, r800_ffff_tmp303;
		BitBlock r800_ffff_tmp304, r800_ffff_tmp305, r800_ffff_tmp306;
		BitBlock r800_ffff_tmp307, r800_ffff_tmp308, r800_ffff_tmp309;
		BitBlock r800_ffff_tmp310, r800_ffff_tmp311, r800_ffff_tmp312;
		BitBlock r800_ffff_tmp313, r800_ffff_tmp314, r800_ffff_tmp315;
		BitBlock r800_ffff_tmp316, r800_ffff_tmp317, r800_ffff_tmp318;
		BitBlock r800_ffff_tmp319, r800_ffff_tmp320, r800_ffff_tmp321;
		BitBlock r800_ffff_tmp322, r800_ffff_tmp323, r800_ffff_tmp324;
		BitBlock r800_ffff_tmp325, r800_ffff_tmp326, r800_ffff_tmp327;
		BitBlock r800_ffff_tmp328, r800_ffff_tmp329, r800_ffff_tmp330;
		BitBlock r800_ffff_tmp331, r800_ffff_tmp332, r800_ffff_tmp333;
		BitBlock r800_ffff_tmp334, r800_ffff_tmp335, r800_ffff_tmp336;
		BitBlock r800_ffff_tmp337, r800_ffff_tmp338, r800_ffff_tmp339;
		BitBlock r800_ffff_tmp340, r800_ffff_tmp341, r800_ffff_tmp342;
		BitBlock r800_ffff_tmp343, r800_ffff_tmp344, r800_ffff_tmp345;
		BitBlock r800_ffff_tmp346, r800_ffff_tmp347, r800_ffff_tmp348;
		BitBlock r800_ffff_tmp349, r800_ffff_tmp350, r800_ffff_tmp351;
		BitBlock r800_ffff_tmp352, r800_ffff_tmp353, r800_ffff_tmp354;
		BitBlock r800_ffff_tmp355, r800_ffff_tmp356, r800_ffff_tmp357;
		BitBlock r800_ffff_tmp358, r800_ffff_tmp359, r800_ffff_tmp360;
		BitBlock r800_ffff_tmp361, r800_ffff_tmp362, r800_ffff_tmp363;
		BitBlock r800_ffff_tmp364, r800_ffff_tmp365, r800_ffff_tmp366;
		BitBlock r800_ffff_tmp367, r800_ffff_tmp368, r800_ffff_tmp369;
		BitBlock r800_ffff_tmp370, r800_ffff_tmp371, r800_ffff_tmp372;
		BitBlock r800_ffff_tmp373, r800_ffff_tmp374, bytetest_ef, bytetest_a1_ba;
		BitBlock r800_ffff_tmp375, r800_ffff_tmp376, r800_ffff_tmp377;
		BitBlock r800_ffff_tmp378, r800_ffff_tmp379, bytetest_80_bf, tmp192, tmp193;
		BitBlock tmp194, r10000_10fff_tmp1, bytetest_80_a7, r10000_10fff_tmp2;
		BitBlock r10000_10fff_tmp3, r10000_10fff_tmp4, r10000_10fff_tmp5;
		BitBlock r10000_10fff_tmp6;




        struct_Lu.cc = simd<1>::constant<0>();
        tmp1 = simd_andc(basis_bits.bit_1, basis_bits.bit_0);
        tmp2 = simd_andc(tmp1, basis_bits.bit_2);
        tmp3 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp4 = simd_or(basis_bits.bit_5, tmp3);
        tmp5 = simd_and(basis_bits.bit_4, tmp4);
        tmp6 = simd_not(tmp5);
        tmp7 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp8 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp9 = simd_or(tmp7, tmp8);
        tmp10 = simd_or(simd_and(basis_bits.bit_3, tmp6), simd_andc(tmp9, basis_bits.bit_3));
        bytetest_41_5a = simd_and(tmp2, tmp10);
        struct_Lu.cc = simd_or(bytetest_41_5a, struct_Lu.cc);
        tmp11 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp12 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp13 = simd_and(tmp11, tmp12);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        tmp14 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp15 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp16 = simd_and(tmp14, tmp15);
        tmp17 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp18 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp19 = simd_and(tmp17, tmp18);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_90 = simd_andc(tmp16, tmp9);
        tmp20 = simd_andc(tmp14, basis_bits.bit_2);
        tmp21 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
        tmp22 = simd_and(basis_bits.bit_4, tmp21);
        tmp23 = simd_and(basis_bits.bit_3, tmp22);
        bytetest_80_99 = simd_andc(tmp20, tmp23);
        tmp24 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp24, carryQ.get_carry_in(0), tmp25));
        tmp26 = simd_and(tmp25, bytetest_f0);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp26, carryQ.get_carry_in(1), tmp27));
        tmp28 = simd_and(tmp27, bytetest_9d);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp28, carryQ.get_carry_in(2), tmp29));
        tmp30 = simd_and(tmp29, bytetest_90);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp30, carryQ.get_carry_in(3), tmp31));
        tmp32 = simd_and(tmp31, bytetest_80_99);
        struct_Lu.cc = simd_or(tmp32, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        tmp33 = simd_andc(tmp18, tmp7);
        bytetest_91 = simd_and(tmp16, tmp33);
        tmp34 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp35 = simd_andc(tmp14, tmp34);
        tmp36 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp37 = simd_and(basis_bits.bit_4, tmp36);
        bytetest_80_8d = simd_andc(tmp35, tmp37);
        tmp38 = simd_and(tmp29, bytetest_91);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp38, carryQ.get_carry_in(4), tmp39));
        tmp40 = simd_and(tmp39, bytetest_80_8d);
        bytetest_90 = simd_andc(tmp16, tmp9);
        tmp41 = simd_and(tmp14, tmp12);
        bytetest_b4_bf = simd_and(tmp41, tmp7);
        tmp42 = simd_and(tmp31, bytetest_b4_bf);
        tmp43 = simd_or(tmp42, tmp40);
        struct_Lu.cc = simd_or(tmp43, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        tmp44 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp45 = simd_andc(tmp44, tmp7);
        bytetest_92 = simd_and(tmp16, tmp45);
        tmp46 = simd_or(tmp7, basis_bits.bit_6);
        bytetest_80_81 = simd_andc(tmp35, tmp46);
        tmp47 = simd_and(tmp29, bytetest_92);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp47, carryQ.get_carry_in(5), tmp48));
        tmp49 = simd_and(tmp48, bytetest_80_81);
        bytetest_91 = simd_and(tmp16, tmp33);
        tmp50 = simd_and(tmp14, basis_bits.bit_2);
        tmp51 = simd_or(basis_bits.bit_3, basis_bits.bit_4);
        bytetest_a8_bf = simd_and(tmp50, tmp51);
        tmp52 = simd_and(tmp39, bytetest_a8_bf);
        tmp53 = simd_or(tmp52, tmp49);
        struct_Lu.cc = simd_or(tmp53, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_92 = simd_and(tmp16, tmp45);
        tmp54 = simd_andc(tmp17, tmp8);
        bytetest_9c_9c = simd_and(tmp16, tmp54);
        tmp55 = simd_and(tmp48, bytetest_9c_9c);
        struct_Lu.cc = simd_or(tmp55, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_92 = simd_and(tmp16, tmp45);
        tmp56 = simd_and(tmp17, basis_bits.bit_6);
        bytetest_9e_9f = simd_and(tmp16, tmp56);
        tmp57 = simd_and(tmp48, bytetest_9e_9f);
        struct_Lu.cc = simd_or(tmp57, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_92 = simd_and(tmp16, tmp45);
        tmp58 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp59 = simd_and(tmp14, tmp58);
        bytetest_a2_a2 = simd_and(tmp59, tmp45);
        tmp60 = simd_and(tmp48, bytetest_a2_a2);
        struct_Lu.cc = simd_or(tmp60, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_92 = simd_and(tmp16, tmp45);
        tmp61 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp62 = simd_and(tmp59, tmp61);
        tmp63 = simd_not(basis_bits.bit_7);
        tmp64 = simd_or(simd_and(basis_bits.bit_6, tmp63), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
        bytetest_a5_a6 = simd_and(tmp62, tmp64);
        tmp65 = simd_and(tmp48, bytetest_a5_a6);
        struct_Lu.cc = simd_or(tmp65, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_92 = simd_and(tmp16, tmp45);
        tmp66 = simd_and(tmp59, basis_bits.bit_4);
        tmp67 = simd_not(tmp8);
        tmp68 = simd_or(simd_and(basis_bits.bit_5, tmp67), simd_andc(tmp8, basis_bits.bit_5));
        bytetest_a9_ac = simd_and(tmp66, tmp68);
        tmp69 = simd_and(tmp48, bytetest_a9_ac);
        struct_Lu.cc = simd_or(tmp69, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_92 = simd_and(tmp16, tmp45);
        tmp70 = simd_or(basis_bits.bit_4, tmp36);
        tmp71 = simd_not(tmp70);
        tmp72 = simd_or(simd_and(basis_bits.bit_3, tmp71), simd_andc(tmp56, basis_bits.bit_3));
        bytetest_ae_b5 = simd_and(tmp50, tmp72);
        tmp73 = simd_and(tmp48, bytetest_ae_b5);
        struct_Lu.cc = simd_or(tmp73, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        tmp74 = simd_andc(tmp3, tmp7);
        bytetest_93 = simd_and(tmp16, tmp74);
        tmp75 = simd_or(basis_bits.bit_3, tmp22);
        tmp76 = simd_not(tmp75);
        tmp77 = simd_or(simd_and(basis_bits.bit_2, tmp76), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
        bytetest_90_a9 = simd_and(tmp14, tmp77);
        tmp78 = simd_and(tmp29, bytetest_93);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp78, carryQ.get_carry_in(6), tmp79));
        tmp80 = simd_and(tmp79, bytetest_90_a9);
        struct_Lu.cc = simd_or(tmp80, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        tmp81 = simd_andc(tmp61, tmp8);
        bytetest_94 = simd_and(tmp16, tmp81);
        tmp82 = simd_andc(tmp61, basis_bits.bit_6);
        bytetest_84_85 = simd_and(tmp35, tmp82);
        tmp83 = simd_and(tmp29, bytetest_94);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp83, carryQ.get_carry_in(7), tmp84));
        tmp85 = simd_and(tmp84, bytetest_84_85);
        struct_Lu.cc = simd_or(tmp85, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_94 = simd_and(tmp16, tmp81);
        tmp86 = simd_not(tmp4);
        tmp87 = simd_and(basis_bits.bit_5, tmp3);
        tmp88 = simd_or(simd_and(basis_bits.bit_4, tmp86), simd_andc(tmp87, basis_bits.bit_4));
        bytetest_87_8a = simd_and(tmp35, tmp88);
        tmp89 = simd_and(tmp84, bytetest_87_8a);
        struct_Lu.cc = simd_or(tmp89, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_94 = simd_and(tmp16, tmp81);
        tmp90 = simd_and(basis_bits.bit_5, tmp8);
        tmp91 = simd_or(basis_bits.bit_4, tmp90);
        tmp92 = simd_not(tmp91);
        tmp93 = simd_and(tmp17, tmp8);
        tmp94 = simd_or(simd_and(basis_bits.bit_3, tmp92), simd_andc(tmp93, basis_bits.bit_3));
        bytetest_8d_94 = simd_and(tmp20, tmp94);
        tmp95 = simd_and(tmp84, bytetest_8d_94);
        struct_Lu.cc = simd_or(tmp95, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_94 = simd_and(tmp16, tmp81);
        tmp96 = simd_not(tmp90);
        tmp97 = simd_or(simd_and(basis_bits.bit_4, tmp96), simd_andc(tmp36, basis_bits.bit_4));
        bytetest_96_9c = simd_and(tmp16, tmp97);
        tmp98 = simd_and(tmp84, bytetest_96_9c);
        struct_Lu.cc = simd_or(tmp98, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_94 = simd_and(tmp16, tmp81);
        tmp99 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp100 = simd_andc(tmp99, basis_bits.bit_6);
        bytetest_b8_b9 = simd_and(tmp41, tmp100);
        tmp101 = simd_and(tmp84, bytetest_b8_b9);
        struct_Lu.cc = simd_or(tmp101, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_94 = simd_and(tmp16, tmp81);
        tmp102 = simd_and(tmp41, basis_bits.bit_4);
        tmp103 = simd_not(tmp3);
        tmp104 = simd_or(simd_and(basis_bits.bit_5, tmp103), simd_andc(tmp3, basis_bits.bit_5));
        bytetest_bb_be = simd_and(tmp102, tmp104);
        tmp105 = simd_and(tmp84, bytetest_bb_be);
        struct_Lu.cc = simd_or(tmp105, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        tmp106 = simd_and(tmp61, tmp18);
        bytetest_95 = simd_and(tmp16, tmp106);
        tmp107 = simd_andc(tmp35, basis_bits.bit_4);
        bytetest_80_84 = simd_andc(tmp107, tmp90);
        tmp108 = simd_and(tmp29, bytetest_95);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(tmp108, carryQ.get_carry_in(8), tmp109));
        tmp110 = simd_and(tmp109, bytetest_80_84);
        struct_Lu.cc = simd_or(tmp110, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_95 = simd_and(tmp16, tmp106);
        tmp111 = simd_and(tmp61, tmp44);
        bytetest_86_86 = simd_and(tmp35, tmp111);
        tmp112 = simd_and(tmp109, bytetest_86_86);
        struct_Lu.cc = simd_or(tmp112, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_95 = simd_and(tmp16, tmp106);
        tmp113 = simd_not(tmp9);
        tmp114 = simd_or(simd_and(basis_bits.bit_3, tmp113), simd_andc(tmp22, basis_bits.bit_3));
        bytetest_8a_90 = simd_and(tmp20, tmp114);
        tmp115 = simd_and(tmp109, bytetest_8a_90);
        struct_Lu.cc = simd_or(tmp115, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_96 = simd_and(tmp16, tmp111);
        bytetest_80_85 = simd_andc(tmp107, tmp36);
        tmp116 = simd_and(tmp29, bytetest_96);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(tmp116, carryQ.get_carry_in(9), tmp117));
        tmp118 = simd_and(tmp117, bytetest_80_85);
        bytetest_95 = simd_and(tmp16, tmp106);
        tmp119 = simd_or(basis_bits.bit_3, tmp17);
        bytetest_ac_bf = simd_and(tmp50, tmp119);
        tmp120 = simd_and(tmp109, bytetest_ac_bf);
        tmp121 = simd_or(tmp120, tmp118);
        struct_Lu.cc = simd_or(tmp121, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_96 = simd_and(tmp16, tmp111);
        bytetest_a0_b9 = simd_andc(tmp50, tmp23);
        tmp122 = simd_and(tmp117, bytetest_a0_b9);
        struct_Lu.cc = simd_or(tmp122, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        tmp123 = simd_and(tmp61, tmp3);
        bytetest_97 = simd_and(tmp16, tmp123);
        tmp124 = simd_or(basis_bits.bit_3, tmp56);
        tmp125 = simd_not(tmp124);
        tmp126 = simd_and(basis_bits.bit_3, tmp7);
        tmp127 = simd_or(simd_and(basis_bits.bit_2, tmp125), simd_andc(tmp126, basis_bits.bit_2));
        bytetest_94_ad = simd_and(tmp14, tmp127);
        tmp128 = simd_and(tmp29, bytetest_97);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(tmp128, carryQ.get_carry_in(10), tmp129));
        tmp130 = simd_and(tmp129, bytetest_94_ad);
        struct_Lu.cc = simd_or(tmp130, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        tmp131 = simd_andc(tmp99, tmp8);
        bytetest_98 = simd_and(tmp16, tmp131);
        tmp132 = simd_or(basis_bits.bit_3, tmp46);
        tmp133 = simd_not(tmp132);
        tmp134 = simd_or(simd_and(basis_bits.bit_2, tmp133), simd_andc(tmp51, basis_bits.bit_2));
        bytetest_88_a1 = simd_and(tmp14, tmp134);
        tmp135 = simd_and(tmp29, bytetest_98);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(tmp135, carryQ.get_carry_in(11), tmp136));
        tmp137 = simd_and(tmp136, bytetest_88_a1);
        struct_Lu.cc = simd_or(tmp137, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        tmp138 = simd_and(tmp99, tmp18);
        bytetest_99 = simd_and(tmp16, tmp138);
        tmp139 = simd_and(basis_bits.bit_3, tmp70);
        bytetest_80_95 = simd_andc(tmp20, tmp139);
        tmp140 = simd_and(tmp29, bytetest_99);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(tmp140, carryQ.get_carry_in(12), tmp141));
        tmp142 = simd_and(tmp141, bytetest_80_95);
        bytetest_98 = simd_and(tmp16, tmp131);
        bytetest_bc_bf = simd_and(tmp41, tmp17);
        tmp143 = simd_and(tmp136, bytetest_bc_bf);
        tmp144 = simd_or(tmp143, tmp142);
        struct_Lu.cc = simd_or(tmp144, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        tmp145 = simd_and(tmp99, tmp44);
        bytetest_9a = simd_and(tmp16, tmp145);
        bytetest_80_89 = simd_andc(tmp35, tmp22);
        tmp146 = simd_and(tmp29, bytetest_9a);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(tmp146, carryQ.get_carry_in(13), tmp147));
        tmp148 = simd_and(tmp147, bytetest_80_89);
        bytetest_99 = simd_and(tmp16, tmp138);
        bytetest_b0_bf = simd_and(tmp14, tmp12);
        tmp149 = simd_and(tmp141, bytetest_b0_bf);
        tmp150 = simd_or(tmp149, tmp148);
        struct_Lu.cc = simd_or(tmp150, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        tmp151 = simd_and(tmp99, tmp3);
        bytetest_9b = simd_and(tmp16, tmp151);
        bytetest_80_80 = simd_andc(tmp35, tmp9);
        tmp152 = simd_and(tmp29, bytetest_9b);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(tmp152, carryQ.get_carry_in(14), tmp153));
        tmp154 = simd_and(tmp153, bytetest_80_80);
        bytetest_9a = simd_and(tmp16, tmp145);
        bytetest_a8_bf = simd_and(tmp50, tmp51);
        tmp155 = simd_and(tmp147, bytetest_a8_bf);
        tmp156 = simd_or(tmp155, tmp154);
        struct_Lu.cc = simd_or(tmp156, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_9b = simd_and(tmp16, tmp151);
        tmp157 = simd_or(simd_and(basis_bits.bit_3, tmp6), simd_andc(tmp46, basis_bits.bit_3));
        bytetest_a2_ba = simd_and(tmp50, tmp157);
        tmp158 = simd_and(tmp153, bytetest_a2_ba);
        struct_Lu.cc = simd_or(tmp158, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_9c = simd_and(tmp16, tmp54);
        tmp159 = simd_and(basis_bits.bit_3, tmp91);
        tmp160 = simd_not(tmp159);
        tmp161 = simd_and(basis_bits.bit_3, tmp17);
        tmp162 = simd_or(simd_and(basis_bits.bit_2, tmp160), simd_andc(tmp161, basis_bits.bit_2));
        bytetest_9c_b4 = simd_and(tmp14, tmp162);
        tmp163 = simd_and(tmp29, bytetest_9c);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(tmp163, carryQ.get_carry_in(15), tmp164));
        tmp165 = simd_and(tmp164, bytetest_9c_b4);
        struct_Lu.cc = simd_or(tmp165, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_9d = simd_and(tmp16, tmp19);
        tmp166 = simd_and(tmp17, tmp3);
        tmp167 = simd_or(basis_bits.bit_3, tmp166);
        tmp168 = simd_not(tmp167);
        tmp169 = simd_or(simd_and(basis_bits.bit_2, tmp168), simd_andc(tmp139, basis_bits.bit_2));
        bytetest_96_ae = simd_and(tmp14, tmp169);
        tmp170 = simd_and(tmp29, bytetest_9d);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(tmp170, carryQ.get_carry_in(16), tmp171));
        tmp172 = simd_and(tmp171, bytetest_96_ae);
        struct_Lu.cc = simd_or(tmp172, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        tmp173 = simd_and(tmp17, tmp44);
        bytetest_9e = simd_and(tmp16, tmp173);
        tmp174 = simd_or(basis_bits.bit_5, tmp8);
        tmp175 = simd_and(basis_bits.bit_4, tmp174);
        tmp176 = simd_or(basis_bits.bit_3, tmp175);
        tmp177 = simd_not(tmp176);
        tmp178 = simd_or(simd_and(basis_bits.bit_2, tmp177), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
        bytetest_90_a8 = simd_and(tmp14, tmp178);
        tmp179 = simd_and(tmp29, bytetest_9e);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(tmp179, carryQ.get_carry_in(17), tmp180));
        tmp181 = simd_and(tmp180, bytetest_90_a8);
        struct_Lu.cc = simd_or(tmp181, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_9f = simd_and(tmp16, tmp166);
        bytetest_8a_8a = simd_and(tmp35, tmp145);
        tmp182 = simd_and(tmp29, bytetest_9f);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(tmp182, carryQ.get_carry_in(18), tmp183));
        tmp184 = simd_and(tmp183, bytetest_8a_8a);
        struct_Lu.cc = simd_or(tmp184, struct_Lu.cc);
        tmp185 = simd_andc(tmp11, basis_bits.bit_2);
        bytetest_c2_df = simd_and(tmp185, tmp132);
        if ((bitblock::any(bytetest_c2_df) || carryQ.CarryTest(19, 16))) {
          r80_7ff_tmp1 = simd_andc(tmp11, tmp34);
          bytetest_c3 = simd_and(r80_7ff_tmp1, tmp74);
          r80_7ff_tmp2 = simd_or(basis_bits.bit_4, tmp87);
          r80_7ff_tmp3 = simd_and(basis_bits.bit_3, r80_7ff_tmp2);
          bytetest_80_96 = simd_andc(tmp20, r80_7ff_tmp3);
          r80_7ff_tmp4 = simd_and(tmp25, bytetest_c3);
          carryQ.cq[19] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp4, carryQ.get_carry_in(19), r80_7ff_tmp5));
          r80_7ff_tmp6 = simd_and(r80_7ff_tmp5, bytetest_80_96);
          struct_Lu.cc = simd_or(r80_7ff_tmp6, struct_Lu.cc);
          bytetest_c3 = simd_and(r80_7ff_tmp1, tmp74);
          r80_7ff_tmp7 = simd_and(tmp16, basis_bits.bit_4);
          bytetest_98_9e = simd_andc(r80_7ff_tmp7, tmp87);
          r80_7ff_tmp8 = simd_and(r80_7ff_tmp5, bytetest_98_9e);
          struct_Lu.cc = simd_or(r80_7ff_tmp8, struct_Lu.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp81);
          bytetest_80_80 = simd_andc(tmp35, tmp9);
          r80_7ff_tmp9 = simd_and(tmp25, bytetest_c4);
          carryQ.cq[20] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp9, carryQ.get_carry_in(20), r80_7ff_tmp10));
          r80_7ff_tmp11 = simd_and(r80_7ff_tmp10, bytetest_80_80);
          struct_Lu.cc = simd_or(r80_7ff_tmp11, struct_Lu.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp81);
          bytetest_82_82 = simd_and(tmp35, tmp45);
          r80_7ff_tmp12 = simd_and(r80_7ff_tmp10, bytetest_82_82);
          struct_Lu.cc = simd_or(r80_7ff_tmp12, struct_Lu.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp81);
          bytetest_84_84 = simd_and(tmp35, tmp81);
          r80_7ff_tmp13 = simd_and(r80_7ff_tmp10, bytetest_84_84);
          struct_Lu.cc = simd_or(r80_7ff_tmp13, struct_Lu.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp81);
          bytetest_86_86 = simd_and(tmp35, tmp111);
          r80_7ff_tmp14 = simd_and(r80_7ff_tmp10, bytetest_86_86);
          struct_Lu.cc = simd_or(r80_7ff_tmp14, struct_Lu.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp81);
          bytetest_88_88 = simd_and(tmp35, tmp131);
          r80_7ff_tmp15 = simd_and(r80_7ff_tmp10, bytetest_88_88);
          struct_Lu.cc = simd_or(r80_7ff_tmp15, struct_Lu.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp81);
          bytetest_8a_8a = simd_and(tmp35, tmp145);
          r80_7ff_tmp16 = simd_and(r80_7ff_tmp10, bytetest_8a_8a);
          struct_Lu.cc = simd_or(r80_7ff_tmp16, struct_Lu.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp81);
          bytetest_8c_8c = simd_and(tmp35, tmp54);
          r80_7ff_tmp17 = simd_and(r80_7ff_tmp10, bytetest_8c_8c);
          struct_Lu.cc = simd_or(r80_7ff_tmp17, struct_Lu.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp81);
          bytetest_8e_8e = simd_and(tmp35, tmp173);
          r80_7ff_tmp18 = simd_and(r80_7ff_tmp10, bytetest_8e_8e);
          struct_Lu.cc = simd_or(r80_7ff_tmp18, struct_Lu.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp81);
          bytetest_90_90 = simd_andc(tmp16, tmp9);
          r80_7ff_tmp19 = simd_and(r80_7ff_tmp10, bytetest_90_90);
          struct_Lu.cc = simd_or(r80_7ff_tmp19, struct_Lu.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp81);
          bytetest_92_92 = simd_and(tmp16, tmp45);
          r80_7ff_tmp20 = simd_and(r80_7ff_tmp10, bytetest_92_92);
          struct_Lu.cc = simd_or(r80_7ff_tmp20, struct_Lu.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp81);
          bytetest_94_94 = simd_and(tmp16, tmp81);
          r80_7ff_tmp21 = simd_and(r80_7ff_tmp10, bytetest_94_94);
          struct_Lu.cc = simd_or(r80_7ff_tmp21, struct_Lu.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp81);
          bytetest_96_96 = simd_and(tmp16, tmp111);
          r80_7ff_tmp22 = simd_and(r80_7ff_tmp10, bytetest_96_96);
          struct_Lu.cc = simd_or(r80_7ff_tmp22, struct_Lu.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp81);
          bytetest_98_98 = simd_and(tmp16, tmp131);
          r80_7ff_tmp23 = simd_and(r80_7ff_tmp10, bytetest_98_98);
          struct_Lu.cc = simd_or(r80_7ff_tmp23, struct_Lu.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp81);
          bytetest_9a_9a = simd_and(tmp16, tmp145);
          r80_7ff_tmp24 = simd_and(r80_7ff_tmp10, bytetest_9a_9a);
          struct_Lu.cc = simd_or(r80_7ff_tmp24, struct_Lu.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp81);
          bytetest_9c_9c = simd_and(tmp16, tmp54);
          r80_7ff_tmp25 = simd_and(r80_7ff_tmp10, bytetest_9c_9c);
          struct_Lu.cc = simd_or(r80_7ff_tmp25, struct_Lu.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp81);
          bytetest_9e_9e = simd_and(tmp16, tmp173);
          r80_7ff_tmp26 = simd_and(r80_7ff_tmp10, bytetest_9e_9e);
          struct_Lu.cc = simd_or(r80_7ff_tmp26, struct_Lu.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp81);
          bytetest_a0_a0 = simd_andc(tmp59, tmp9);
          r80_7ff_tmp27 = simd_and(r80_7ff_tmp10, bytetest_a0_a0);
          struct_Lu.cc = simd_or(r80_7ff_tmp27, struct_Lu.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp81);
          bytetest_a2_a2 = simd_and(tmp59, tmp45);
          r80_7ff_tmp28 = simd_and(r80_7ff_tmp10, bytetest_a2_a2);
          struct_Lu.cc = simd_or(r80_7ff_tmp28, struct_Lu.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp81);
          bytetest_a4_a4 = simd_and(tmp59, tmp81);
          r80_7ff_tmp29 = simd_and(r80_7ff_tmp10, bytetest_a4_a4);
          struct_Lu.cc = simd_or(r80_7ff_tmp29, struct_Lu.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp81);
          bytetest_a6_a6 = simd_and(tmp59, tmp111);
          r80_7ff_tmp30 = simd_and(r80_7ff_tmp10, bytetest_a6_a6);
          struct_Lu.cc = simd_or(r80_7ff_tmp30, struct_Lu.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp81);
          bytetest_a8_a8 = simd_and(tmp59, tmp131);
          r80_7ff_tmp31 = simd_and(r80_7ff_tmp10, bytetest_a8_a8);
          struct_Lu.cc = simd_or(r80_7ff_tmp31, struct_Lu.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp81);
          bytetest_aa_aa = simd_and(tmp59, tmp145);
          r80_7ff_tmp32 = simd_and(r80_7ff_tmp10, bytetest_aa_aa);
          struct_Lu.cc = simd_or(r80_7ff_tmp32, struct_Lu.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp81);
          bytetest_ac_ac = simd_and(tmp59, tmp54);
          r80_7ff_tmp33 = simd_and(r80_7ff_tmp10, bytetest_ac_ac);
          struct_Lu.cc = simd_or(r80_7ff_tmp33, struct_Lu.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp81);
          bytetest_ae_ae = simd_and(tmp59, tmp173);
          r80_7ff_tmp34 = simd_and(r80_7ff_tmp10, bytetest_ae_ae);
          struct_Lu.cc = simd_or(r80_7ff_tmp34, struct_Lu.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp81);
          bytetest_b0_b0 = simd_andc(bytetest_b0_bf, tmp9);
          r80_7ff_tmp35 = simd_and(r80_7ff_tmp10, bytetest_b0_b0);
          struct_Lu.cc = simd_or(r80_7ff_tmp35, struct_Lu.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp81);
          bytetest_b2_b2 = simd_and(bytetest_b0_bf, tmp45);
          r80_7ff_tmp36 = simd_and(r80_7ff_tmp10, bytetest_b2_b2);
          struct_Lu.cc = simd_or(r80_7ff_tmp36, struct_Lu.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp81);
          bytetest_b4_b4 = simd_and(bytetest_b0_bf, tmp81);
          r80_7ff_tmp37 = simd_and(r80_7ff_tmp10, bytetest_b4_b4);
          struct_Lu.cc = simd_or(r80_7ff_tmp37, struct_Lu.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp81);
          bytetest_b6_b6 = simd_and(bytetest_b0_bf, tmp111);
          r80_7ff_tmp38 = simd_and(r80_7ff_tmp10, bytetest_b6_b6);
          struct_Lu.cc = simd_or(r80_7ff_tmp38, struct_Lu.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp81);
          bytetest_b9_b9 = simd_and(bytetest_b0_bf, tmp138);
          r80_7ff_tmp39 = simd_and(r80_7ff_tmp10, bytetest_b9_b9);
          struct_Lu.cc = simd_or(r80_7ff_tmp39, struct_Lu.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp81);
          bytetest_bb_bb = simd_and(bytetest_b0_bf, tmp151);
          r80_7ff_tmp40 = simd_and(r80_7ff_tmp10, bytetest_bb_bb);
          struct_Lu.cc = simd_or(r80_7ff_tmp40, struct_Lu.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp81);
          bytetest_bd_bd = simd_and(bytetest_b0_bf, tmp19);
          r80_7ff_tmp41 = simd_and(r80_7ff_tmp10, bytetest_bd_bd);
          struct_Lu.cc = simd_or(r80_7ff_tmp41, struct_Lu.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp81);
          bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp166);
          r80_7ff_tmp42 = simd_and(r80_7ff_tmp10, bytetest_bf_bf);
          struct_Lu.cc = simd_or(r80_7ff_tmp42, struct_Lu.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp106);
          bytetest_81_81 = simd_and(tmp35, tmp33);
          r80_7ff_tmp43 = simd_and(tmp25, bytetest_c5);
          carryQ.cq[21] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp43, carryQ.get_carry_in(21), r80_7ff_tmp44));
          r80_7ff_tmp45 = simd_and(r80_7ff_tmp44, bytetest_81_81);
          struct_Lu.cc = simd_or(r80_7ff_tmp45, struct_Lu.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp106);
          bytetest_83_83 = simd_and(tmp35, tmp74);
          r80_7ff_tmp46 = simd_and(r80_7ff_tmp44, bytetest_83_83);
          struct_Lu.cc = simd_or(r80_7ff_tmp46, struct_Lu.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp106);
          bytetest_85_85 = simd_and(tmp35, tmp106);
          r80_7ff_tmp47 = simd_and(r80_7ff_tmp44, bytetest_85_85);
          struct_Lu.cc = simd_or(r80_7ff_tmp47, struct_Lu.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp106);
          bytetest_87_87 = simd_and(tmp35, tmp123);
          r80_7ff_tmp48 = simd_and(r80_7ff_tmp44, bytetest_87_87);
          struct_Lu.cc = simd_or(r80_7ff_tmp48, struct_Lu.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp106);
          bytetest_8a_8a = simd_and(tmp35, tmp145);
          r80_7ff_tmp49 = simd_and(r80_7ff_tmp44, bytetest_8a_8a);
          struct_Lu.cc = simd_or(r80_7ff_tmp49, struct_Lu.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp106);
          bytetest_8c_8c = simd_and(tmp35, tmp54);
          r80_7ff_tmp50 = simd_and(r80_7ff_tmp44, bytetest_8c_8c);
          struct_Lu.cc = simd_or(r80_7ff_tmp50, struct_Lu.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp106);
          bytetest_8e_8e = simd_and(tmp35, tmp173);
          r80_7ff_tmp51 = simd_and(r80_7ff_tmp44, bytetest_8e_8e);
          struct_Lu.cc = simd_or(r80_7ff_tmp51, struct_Lu.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp106);
          bytetest_90_90 = simd_andc(tmp16, tmp9);
          r80_7ff_tmp52 = simd_and(r80_7ff_tmp44, bytetest_90_90);
          struct_Lu.cc = simd_or(r80_7ff_tmp52, struct_Lu.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp106);
          bytetest_92_92 = simd_and(tmp16, tmp45);
          r80_7ff_tmp53 = simd_and(r80_7ff_tmp44, bytetest_92_92);
          struct_Lu.cc = simd_or(r80_7ff_tmp53, struct_Lu.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp106);
          bytetest_94_94 = simd_and(tmp16, tmp81);
          r80_7ff_tmp54 = simd_and(r80_7ff_tmp44, bytetest_94_94);
          struct_Lu.cc = simd_or(r80_7ff_tmp54, struct_Lu.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp106);
          bytetest_96_96 = simd_and(tmp16, tmp111);
          r80_7ff_tmp55 = simd_and(r80_7ff_tmp44, bytetest_96_96);
          struct_Lu.cc = simd_or(r80_7ff_tmp55, struct_Lu.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp106);
          bytetest_98_98 = simd_and(tmp16, tmp131);
          r80_7ff_tmp56 = simd_and(r80_7ff_tmp44, bytetest_98_98);
          struct_Lu.cc = simd_or(r80_7ff_tmp56, struct_Lu.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp106);
          bytetest_9a_9a = simd_and(tmp16, tmp145);
          r80_7ff_tmp57 = simd_and(r80_7ff_tmp44, bytetest_9a_9a);
          struct_Lu.cc = simd_or(r80_7ff_tmp57, struct_Lu.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp106);
          bytetest_9c_9c = simd_and(tmp16, tmp54);
          r80_7ff_tmp58 = simd_and(r80_7ff_tmp44, bytetest_9c_9c);
          struct_Lu.cc = simd_or(r80_7ff_tmp58, struct_Lu.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp106);
          bytetest_9e_9e = simd_and(tmp16, tmp173);
          r80_7ff_tmp59 = simd_and(r80_7ff_tmp44, bytetest_9e_9e);
          struct_Lu.cc = simd_or(r80_7ff_tmp59, struct_Lu.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp106);
          bytetest_a0_a0 = simd_andc(tmp59, tmp9);
          r80_7ff_tmp60 = simd_and(r80_7ff_tmp44, bytetest_a0_a0);
          struct_Lu.cc = simd_or(r80_7ff_tmp60, struct_Lu.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp106);
          bytetest_a2_a2 = simd_and(tmp59, tmp45);
          r80_7ff_tmp61 = simd_and(r80_7ff_tmp44, bytetest_a2_a2);
          struct_Lu.cc = simd_or(r80_7ff_tmp61, struct_Lu.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp106);
          bytetest_a4_a4 = simd_and(tmp59, tmp81);
          r80_7ff_tmp62 = simd_and(r80_7ff_tmp44, bytetest_a4_a4);
          struct_Lu.cc = simd_or(r80_7ff_tmp62, struct_Lu.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp106);
          bytetest_a6_a6 = simd_and(tmp59, tmp111);
          r80_7ff_tmp63 = simd_and(r80_7ff_tmp44, bytetest_a6_a6);
          struct_Lu.cc = simd_or(r80_7ff_tmp63, struct_Lu.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp106);
          bytetest_a8_a8 = simd_and(tmp59, tmp131);
          r80_7ff_tmp64 = simd_and(r80_7ff_tmp44, bytetest_a8_a8);
          struct_Lu.cc = simd_or(r80_7ff_tmp64, struct_Lu.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp106);
          bytetest_aa_aa = simd_and(tmp59, tmp145);
          r80_7ff_tmp65 = simd_and(r80_7ff_tmp44, bytetest_aa_aa);
          struct_Lu.cc = simd_or(r80_7ff_tmp65, struct_Lu.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp106);
          bytetest_ac_ac = simd_and(tmp59, tmp54);
          r80_7ff_tmp66 = simd_and(r80_7ff_tmp44, bytetest_ac_ac);
          struct_Lu.cc = simd_or(r80_7ff_tmp66, struct_Lu.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp106);
          bytetest_ae_ae = simd_and(tmp59, tmp173);
          r80_7ff_tmp67 = simd_and(r80_7ff_tmp44, bytetest_ae_ae);
          struct_Lu.cc = simd_or(r80_7ff_tmp67, struct_Lu.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp106);
          bytetest_b0_b0 = simd_andc(bytetest_b0_bf, tmp9);
          r80_7ff_tmp68 = simd_and(r80_7ff_tmp44, bytetest_b0_b0);
          struct_Lu.cc = simd_or(r80_7ff_tmp68, struct_Lu.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp106);
          bytetest_b2_b2 = simd_and(bytetest_b0_bf, tmp45);
          r80_7ff_tmp69 = simd_and(r80_7ff_tmp44, bytetest_b2_b2);
          struct_Lu.cc = simd_or(r80_7ff_tmp69, struct_Lu.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp106);
          bytetest_b4_b4 = simd_and(bytetest_b0_bf, tmp81);
          r80_7ff_tmp70 = simd_and(r80_7ff_tmp44, bytetest_b4_b4);
          struct_Lu.cc = simd_or(r80_7ff_tmp70, struct_Lu.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp106);
          bytetest_b6_b6 = simd_and(bytetest_b0_bf, tmp111);
          r80_7ff_tmp71 = simd_and(r80_7ff_tmp44, bytetest_b6_b6);
          struct_Lu.cc = simd_or(r80_7ff_tmp71, struct_Lu.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp106);
          bytetest_b8_b9 = simd_and(bytetest_b0_bf, tmp100);
          r80_7ff_tmp72 = simd_and(r80_7ff_tmp44, bytetest_b8_b9);
          struct_Lu.cc = simd_or(r80_7ff_tmp72, struct_Lu.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp106);
          bytetest_bb_bb = simd_and(bytetest_b0_bf, tmp151);
          r80_7ff_tmp73 = simd_and(r80_7ff_tmp44, bytetest_bb_bb);
          struct_Lu.cc = simd_or(r80_7ff_tmp73, struct_Lu.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp106);
          bytetest_bd_bd = simd_and(bytetest_b0_bf, tmp19);
          r80_7ff_tmp74 = simd_and(r80_7ff_tmp44, bytetest_bd_bd);
          struct_Lu.cc = simd_or(r80_7ff_tmp74, struct_Lu.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp111);
          r80_7ff_tmp75 = simd_andc(tmp35, tmp7);
          bytetest_81_82 = simd_and(r80_7ff_tmp75, tmp64);
          r80_7ff_tmp76 = simd_and(tmp25, bytetest_c6);
          carryQ.cq[22] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp76, carryQ.get_carry_in(22), r80_7ff_tmp77));
          r80_7ff_tmp78 = simd_and(r80_7ff_tmp77, bytetest_81_82);
          struct_Lu.cc = simd_or(r80_7ff_tmp78, struct_Lu.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_84_84 = simd_and(tmp35, tmp81);
          r80_7ff_tmp79 = simd_and(r80_7ff_tmp77, bytetest_84_84);
          struct_Lu.cc = simd_or(r80_7ff_tmp79, struct_Lu.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp111);
          r80_7ff_tmp80 = simd_and(tmp61, basis_bits.bit_6);
          bytetest_86_87 = simd_and(tmp35, r80_7ff_tmp80);
          r80_7ff_tmp81 = simd_and(r80_7ff_tmp77, bytetest_86_87);
          struct_Lu.cc = simd_or(r80_7ff_tmp81, struct_Lu.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp111);
          r80_7ff_tmp82 = simd_and(tmp35, tmp99);
          bytetest_89_8b = simd_and(r80_7ff_tmp82, tmp8);
          r80_7ff_tmp83 = simd_and(r80_7ff_tmp77, bytetest_89_8b);
          struct_Lu.cc = simd_or(r80_7ff_tmp83, struct_Lu.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp111);
          r80_7ff_tmp84 = simd_not(tmp46);
          r80_7ff_tmp85 = simd_or(simd_and(basis_bits.bit_3, r80_7ff_tmp84), simd_andc(tmp56, basis_bits.bit_3));
          bytetest_8e_91 = simd_and(tmp20, r80_7ff_tmp85);
          r80_7ff_tmp86 = simd_and(r80_7ff_tmp77, bytetest_8e_91);
          struct_Lu.cc = simd_or(r80_7ff_tmp86, struct_Lu.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp111);
          r80_7ff_tmp87 = simd_andc(tmp16, basis_bits.bit_4);
          r80_7ff_tmp88 = simd_or(simd_and(basis_bits.bit_5, tmp67), simd_andc(tmp3, basis_bits.bit_5));
          bytetest_93_94 = simd_and(r80_7ff_tmp87, r80_7ff_tmp88);
          r80_7ff_tmp89 = simd_and(r80_7ff_tmp77, bytetest_93_94);
          struct_Lu.cc = simd_or(r80_7ff_tmp89, struct_Lu.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp111);
          r80_7ff_tmp90 = simd_not(tmp174);
          r80_7ff_tmp91 = simd_or(simd_and(basis_bits.bit_4, r80_7ff_tmp90), simd_andc(tmp36, basis_bits.bit_4));
          bytetest_96_98 = simd_and(tmp16, r80_7ff_tmp91);
          r80_7ff_tmp92 = simd_and(r80_7ff_tmp77, bytetest_96_98);
          struct_Lu.cc = simd_or(r80_7ff_tmp92, struct_Lu.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp111);
          r80_7ff_tmp93 = simd_andc(tmp17, basis_bits.bit_6);
          bytetest_9c_9d = simd_and(tmp16, r80_7ff_tmp93);
          r80_7ff_tmp94 = simd_and(r80_7ff_tmp77, bytetest_9c_9d);
          struct_Lu.cc = simd_or(r80_7ff_tmp94, struct_Lu.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp111);
          r80_7ff_tmp95 = simd_or(basis_bits.bit_3, tmp9);
          r80_7ff_tmp96 = simd_not(r80_7ff_tmp95);
          r80_7ff_tmp97 = simd_and(basis_bits.bit_3, tmp166);
          r80_7ff_tmp98 = simd_or(simd_and(basis_bits.bit_2, r80_7ff_tmp96), simd_andc(r80_7ff_tmp97, basis_bits.bit_2));
          bytetest_9f_a0 = simd_and(tmp14, r80_7ff_tmp98);
          r80_7ff_tmp99 = simd_and(r80_7ff_tmp77, bytetest_9f_a0);
          struct_Lu.cc = simd_or(r80_7ff_tmp99, struct_Lu.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_a2_a2 = simd_and(tmp59, tmp45);
          r80_7ff_tmp100 = simd_and(r80_7ff_tmp77, bytetest_a2_a2);
          struct_Lu.cc = simd_or(r80_7ff_tmp100, struct_Lu.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_a4_a4 = simd_and(tmp59, tmp81);
          r80_7ff_tmp101 = simd_and(r80_7ff_tmp77, bytetest_a4_a4);
          struct_Lu.cc = simd_or(r80_7ff_tmp101, struct_Lu.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_a6_a7 = simd_and(tmp59, r80_7ff_tmp80);
          r80_7ff_tmp102 = simd_and(r80_7ff_tmp77, bytetest_a6_a7);
          struct_Lu.cc = simd_or(r80_7ff_tmp102, struct_Lu.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_a9_a9 = simd_and(tmp59, tmp138);
          r80_7ff_tmp103 = simd_and(r80_7ff_tmp77, bytetest_a9_a9);
          struct_Lu.cc = simd_or(r80_7ff_tmp103, struct_Lu.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_ac_ac = simd_and(tmp59, tmp54);
          r80_7ff_tmp104 = simd_and(r80_7ff_tmp77, bytetest_ac_ac);
          struct_Lu.cc = simd_or(r80_7ff_tmp104, struct_Lu.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_ae_af = simd_and(tmp59, tmp56);
          r80_7ff_tmp105 = simd_and(r80_7ff_tmp77, bytetest_ae_af);
          struct_Lu.cc = simd_or(r80_7ff_tmp105, struct_Lu.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp111);
          r80_7ff_tmp106 = simd_andc(bytetest_b0_bf, tmp7);
          bytetest_b1_b3 = simd_and(r80_7ff_tmp106, tmp8);
          r80_7ff_tmp107 = simd_and(r80_7ff_tmp77, bytetest_b1_b3);
          struct_Lu.cc = simd_or(r80_7ff_tmp107, struct_Lu.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp106);
          r80_7ff_tmp108 = simd_and(r80_7ff_tmp77, bytetest_b5_b5);
          struct_Lu.cc = simd_or(r80_7ff_tmp108, struct_Lu.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp111);
          r80_7ff_tmp109 = simd_or(simd_and(basis_bits.bit_4, r80_7ff_tmp90), simd_andc(tmp87, basis_bits.bit_4));
          bytetest_b7_b8 = simd_and(bytetest_b0_bf, r80_7ff_tmp109);
          r80_7ff_tmp110 = simd_and(r80_7ff_tmp77, bytetest_b7_b8);
          struct_Lu.cc = simd_or(r80_7ff_tmp110, struct_Lu.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_bc_bc = simd_and(bytetest_b0_bf, tmp54);
          r80_7ff_tmp111 = simd_and(r80_7ff_tmp77, bytetest_bc_bc);
          struct_Lu.cc = simd_or(r80_7ff_tmp111, struct_Lu.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp123);
          bytetest_84_84 = simd_and(tmp35, tmp81);
          r80_7ff_tmp112 = simd_and(tmp25, bytetest_c7);
          carryQ.cq[23] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp112, carryQ.get_carry_in(23), r80_7ff_tmp113));
          r80_7ff_tmp114 = simd_and(r80_7ff_tmp113, bytetest_84_84);
          struct_Lu.cc = simd_or(r80_7ff_tmp114, struct_Lu.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp123);
          bytetest_87_87 = simd_and(tmp35, tmp123);
          r80_7ff_tmp115 = simd_and(r80_7ff_tmp113, bytetest_87_87);
          struct_Lu.cc = simd_or(r80_7ff_tmp115, struct_Lu.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp123);
          bytetest_8a_8a = simd_and(tmp35, tmp145);
          r80_7ff_tmp116 = simd_and(r80_7ff_tmp113, bytetest_8a_8a);
          struct_Lu.cc = simd_or(r80_7ff_tmp116, struct_Lu.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp123);
          bytetest_8d_8d = simd_and(tmp35, tmp19);
          r80_7ff_tmp117 = simd_and(r80_7ff_tmp113, bytetest_8d_8d);
          struct_Lu.cc = simd_or(r80_7ff_tmp117, struct_Lu.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp123);
          bytetest_8f_8f = simd_and(tmp35, tmp166);
          r80_7ff_tmp118 = simd_and(r80_7ff_tmp113, bytetest_8f_8f);
          struct_Lu.cc = simd_or(r80_7ff_tmp118, struct_Lu.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp123);
          bytetest_91_91 = simd_and(tmp16, tmp33);
          r80_7ff_tmp119 = simd_and(r80_7ff_tmp113, bytetest_91_91);
          struct_Lu.cc = simd_or(r80_7ff_tmp119, struct_Lu.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp123);
          bytetest_93_93 = simd_and(tmp16, tmp74);
          r80_7ff_tmp120 = simd_and(r80_7ff_tmp113, bytetest_93_93);
          struct_Lu.cc = simd_or(r80_7ff_tmp120, struct_Lu.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp123);
          bytetest_95_95 = simd_and(tmp16, tmp106);
          r80_7ff_tmp121 = simd_and(r80_7ff_tmp113, bytetest_95_95);
          struct_Lu.cc = simd_or(r80_7ff_tmp121, struct_Lu.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp123);
          bytetest_97_97 = simd_and(tmp16, tmp123);
          r80_7ff_tmp122 = simd_and(r80_7ff_tmp113, bytetest_97_97);
          struct_Lu.cc = simd_or(r80_7ff_tmp122, struct_Lu.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp123);
          bytetest_99_99 = simd_and(tmp16, tmp138);
          r80_7ff_tmp123 = simd_and(r80_7ff_tmp113, bytetest_99_99);
          struct_Lu.cc = simd_or(r80_7ff_tmp123, struct_Lu.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp123);
          bytetest_9b_9b = simd_and(tmp16, tmp151);
          r80_7ff_tmp124 = simd_and(r80_7ff_tmp113, bytetest_9b_9b);
          struct_Lu.cc = simd_or(r80_7ff_tmp124, struct_Lu.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp123);
          bytetest_9e_9e = simd_and(tmp16, tmp173);
          r80_7ff_tmp125 = simd_and(r80_7ff_tmp113, bytetest_9e_9e);
          struct_Lu.cc = simd_or(r80_7ff_tmp125, struct_Lu.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp123);
          bytetest_a0_a0 = simd_andc(tmp59, tmp9);
          r80_7ff_tmp126 = simd_and(r80_7ff_tmp113, bytetest_a0_a0);
          struct_Lu.cc = simd_or(r80_7ff_tmp126, struct_Lu.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp123);
          bytetest_a2_a2 = simd_and(tmp59, tmp45);
          r80_7ff_tmp127 = simd_and(r80_7ff_tmp113, bytetest_a2_a2);
          struct_Lu.cc = simd_or(r80_7ff_tmp127, struct_Lu.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp123);
          bytetest_a4_a4 = simd_and(tmp59, tmp81);
          r80_7ff_tmp128 = simd_and(r80_7ff_tmp113, bytetest_a4_a4);
          struct_Lu.cc = simd_or(r80_7ff_tmp128, struct_Lu.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp123);
          bytetest_a6_a6 = simd_and(tmp59, tmp111);
          r80_7ff_tmp129 = simd_and(r80_7ff_tmp113, bytetest_a6_a6);
          struct_Lu.cc = simd_or(r80_7ff_tmp129, struct_Lu.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp123);
          bytetest_a8_a8 = simd_and(tmp59, tmp131);
          r80_7ff_tmp130 = simd_and(r80_7ff_tmp113, bytetest_a8_a8);
          struct_Lu.cc = simd_or(r80_7ff_tmp130, struct_Lu.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp123);
          bytetest_aa_aa = simd_and(tmp59, tmp145);
          r80_7ff_tmp131 = simd_and(r80_7ff_tmp113, bytetest_aa_aa);
          struct_Lu.cc = simd_or(r80_7ff_tmp131, struct_Lu.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp123);
          bytetest_ac_ac = simd_and(tmp59, tmp54);
          r80_7ff_tmp132 = simd_and(r80_7ff_tmp113, bytetest_ac_ac);
          struct_Lu.cc = simd_or(r80_7ff_tmp132, struct_Lu.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp123);
          bytetest_ae_ae = simd_and(tmp59, tmp173);
          r80_7ff_tmp133 = simd_and(r80_7ff_tmp113, bytetest_ae_ae);
          struct_Lu.cc = simd_or(r80_7ff_tmp133, struct_Lu.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp123);
          bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp33);
          r80_7ff_tmp134 = simd_and(r80_7ff_tmp113, bytetest_b1_b1);
          struct_Lu.cc = simd_or(r80_7ff_tmp134, struct_Lu.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp123);
          bytetest_b4_b4 = simd_and(bytetest_b0_bf, tmp81);
          r80_7ff_tmp135 = simd_and(r80_7ff_tmp113, bytetest_b4_b4);
          struct_Lu.cc = simd_or(r80_7ff_tmp135, struct_Lu.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp123);
          bytetest_b6_b8 = simd_and(bytetest_b0_bf, r80_7ff_tmp91);
          r80_7ff_tmp136 = simd_and(r80_7ff_tmp113, bytetest_b6_b8);
          struct_Lu.cc = simd_or(r80_7ff_tmp136, struct_Lu.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp123);
          bytetest_ba_ba = simd_and(bytetest_b0_bf, tmp145);
          r80_7ff_tmp137 = simd_and(r80_7ff_tmp113, bytetest_ba_ba);
          struct_Lu.cc = simd_or(r80_7ff_tmp137, struct_Lu.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp123);
          bytetest_bc_bc = simd_and(bytetest_b0_bf, tmp54);
          r80_7ff_tmp138 = simd_and(r80_7ff_tmp113, bytetest_bc_bc);
          struct_Lu.cc = simd_or(r80_7ff_tmp138, struct_Lu.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp123);
          bytetest_be_be = simd_and(bytetest_b0_bf, tmp173);
          r80_7ff_tmp139 = simd_and(r80_7ff_tmp113, bytetest_be_be);
          struct_Lu.cc = simd_or(r80_7ff_tmp139, struct_Lu.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp131);
          bytetest_80_80 = simd_andc(tmp35, tmp9);
          r80_7ff_tmp140 = simd_and(tmp25, bytetest_c8);
          carryQ.cq[24] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp140, carryQ.get_carry_in(24), r80_7ff_tmp141));
          r80_7ff_tmp142 = simd_and(r80_7ff_tmp141, bytetest_80_80);
          struct_Lu.cc = simd_or(r80_7ff_tmp142, struct_Lu.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp131);
          bytetest_82_82 = simd_and(tmp35, tmp45);
          r80_7ff_tmp143 = simd_and(r80_7ff_tmp141, bytetest_82_82);
          struct_Lu.cc = simd_or(r80_7ff_tmp143, struct_Lu.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp131);
          bytetest_84_84 = simd_and(tmp35, tmp81);
          r80_7ff_tmp144 = simd_and(r80_7ff_tmp141, bytetest_84_84);
          struct_Lu.cc = simd_or(r80_7ff_tmp144, struct_Lu.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp131);
          bytetest_86_86 = simd_and(tmp35, tmp111);
          r80_7ff_tmp145 = simd_and(r80_7ff_tmp141, bytetest_86_86);
          struct_Lu.cc = simd_or(r80_7ff_tmp145, struct_Lu.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp131);
          bytetest_88_88 = simd_and(tmp35, tmp131);
          r80_7ff_tmp146 = simd_and(r80_7ff_tmp141, bytetest_88_88);
          struct_Lu.cc = simd_or(r80_7ff_tmp146, struct_Lu.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp131);
          bytetest_8a_8a = simd_and(tmp35, tmp145);
          r80_7ff_tmp147 = simd_and(r80_7ff_tmp141, bytetest_8a_8a);
          struct_Lu.cc = simd_or(r80_7ff_tmp147, struct_Lu.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp131);
          bytetest_8c_8c = simd_and(tmp35, tmp54);
          r80_7ff_tmp148 = simd_and(r80_7ff_tmp141, bytetest_8c_8c);
          struct_Lu.cc = simd_or(r80_7ff_tmp148, struct_Lu.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp131);
          bytetest_8e_8e = simd_and(tmp35, tmp173);
          r80_7ff_tmp149 = simd_and(r80_7ff_tmp141, bytetest_8e_8e);
          struct_Lu.cc = simd_or(r80_7ff_tmp149, struct_Lu.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp131);
          bytetest_90_90 = simd_andc(tmp16, tmp9);
          r80_7ff_tmp150 = simd_and(r80_7ff_tmp141, bytetest_90_90);
          struct_Lu.cc = simd_or(r80_7ff_tmp150, struct_Lu.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp131);
          bytetest_92_92 = simd_and(tmp16, tmp45);
          r80_7ff_tmp151 = simd_and(r80_7ff_tmp141, bytetest_92_92);
          struct_Lu.cc = simd_or(r80_7ff_tmp151, struct_Lu.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp131);
          bytetest_94_94 = simd_and(tmp16, tmp81);
          r80_7ff_tmp152 = simd_and(r80_7ff_tmp141, bytetest_94_94);
          struct_Lu.cc = simd_or(r80_7ff_tmp152, struct_Lu.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp131);
          bytetest_96_96 = simd_and(tmp16, tmp111);
          r80_7ff_tmp153 = simd_and(r80_7ff_tmp141, bytetest_96_96);
          struct_Lu.cc = simd_or(r80_7ff_tmp153, struct_Lu.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp131);
          bytetest_98_98 = simd_and(tmp16, tmp131);
          r80_7ff_tmp154 = simd_and(r80_7ff_tmp141, bytetest_98_98);
          struct_Lu.cc = simd_or(r80_7ff_tmp154, struct_Lu.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp131);
          bytetest_9a_9a = simd_and(tmp16, tmp145);
          r80_7ff_tmp155 = simd_and(r80_7ff_tmp141, bytetest_9a_9a);
          struct_Lu.cc = simd_or(r80_7ff_tmp155, struct_Lu.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp131);
          bytetest_9c_9c = simd_and(tmp16, tmp54);
          r80_7ff_tmp156 = simd_and(r80_7ff_tmp141, bytetest_9c_9c);
          struct_Lu.cc = simd_or(r80_7ff_tmp156, struct_Lu.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp131);
          bytetest_9e_9e = simd_and(tmp16, tmp173);
          r80_7ff_tmp157 = simd_and(r80_7ff_tmp141, bytetest_9e_9e);
          struct_Lu.cc = simd_or(r80_7ff_tmp157, struct_Lu.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp131);
          bytetest_a0_a0 = simd_andc(tmp59, tmp9);
          r80_7ff_tmp158 = simd_and(r80_7ff_tmp141, bytetest_a0_a0);
          struct_Lu.cc = simd_or(r80_7ff_tmp158, struct_Lu.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp131);
          bytetest_a2_a2 = simd_and(tmp59, tmp45);
          r80_7ff_tmp159 = simd_and(r80_7ff_tmp141, bytetest_a2_a2);
          struct_Lu.cc = simd_or(r80_7ff_tmp159, struct_Lu.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp131);
          bytetest_a4_a4 = simd_and(tmp59, tmp81);
          r80_7ff_tmp160 = simd_and(r80_7ff_tmp141, bytetest_a4_a4);
          struct_Lu.cc = simd_or(r80_7ff_tmp160, struct_Lu.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp131);
          bytetest_a6_a6 = simd_and(tmp59, tmp111);
          r80_7ff_tmp161 = simd_and(r80_7ff_tmp141, bytetest_a6_a6);
          struct_Lu.cc = simd_or(r80_7ff_tmp161, struct_Lu.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp131);
          bytetest_a8_a8 = simd_and(tmp59, tmp131);
          r80_7ff_tmp162 = simd_and(r80_7ff_tmp141, bytetest_a8_a8);
          struct_Lu.cc = simd_or(r80_7ff_tmp162, struct_Lu.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp131);
          bytetest_aa_aa = simd_and(tmp59, tmp145);
          r80_7ff_tmp163 = simd_and(r80_7ff_tmp141, bytetest_aa_aa);
          struct_Lu.cc = simd_or(r80_7ff_tmp163, struct_Lu.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp131);
          bytetest_ac_ac = simd_and(tmp59, tmp54);
          r80_7ff_tmp164 = simd_and(r80_7ff_tmp141, bytetest_ac_ac);
          struct_Lu.cc = simd_or(r80_7ff_tmp164, struct_Lu.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp131);
          bytetest_ae_ae = simd_and(tmp59, tmp173);
          r80_7ff_tmp165 = simd_and(r80_7ff_tmp141, bytetest_ae_ae);
          struct_Lu.cc = simd_or(r80_7ff_tmp165, struct_Lu.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp131);
          bytetest_b0_b0 = simd_andc(bytetest_b0_bf, tmp9);
          r80_7ff_tmp166 = simd_and(r80_7ff_tmp141, bytetest_b0_b0);
          struct_Lu.cc = simd_or(r80_7ff_tmp166, struct_Lu.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp131);
          bytetest_b2_b2 = simd_and(bytetest_b0_bf, tmp45);
          r80_7ff_tmp167 = simd_and(r80_7ff_tmp141, bytetest_b2_b2);
          struct_Lu.cc = simd_or(r80_7ff_tmp167, struct_Lu.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp131);
          r80_7ff_tmp168 = simd_and(tmp99, basis_bits.bit_6);
          bytetest_ba_bb = simd_and(bytetest_b0_bf, r80_7ff_tmp168);
          r80_7ff_tmp169 = simd_and(r80_7ff_tmp141, bytetest_ba_bb);
          struct_Lu.cc = simd_or(r80_7ff_tmp169, struct_Lu.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp131);
          r80_7ff_tmp170 = simd_and(bytetest_b0_bf, tmp17);
          bytetest_bd_be = simd_and(r80_7ff_tmp170, tmp64);
          r80_7ff_tmp171 = simd_and(r80_7ff_tmp141, bytetest_bd_be);
          struct_Lu.cc = simd_or(r80_7ff_tmp171, struct_Lu.cc);
          bytetest_c9 = simd_and(r80_7ff_tmp1, tmp138);
          bytetest_81_81 = simd_and(tmp35, tmp33);
          r80_7ff_tmp172 = simd_and(tmp25, bytetest_c9);
          carryQ.cq[25] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp172, carryQ.get_carry_in(25), r80_7ff_tmp173));
          r80_7ff_tmp174 = simd_and(r80_7ff_tmp173, bytetest_81_81);
          struct_Lu.cc = simd_or(r80_7ff_tmp174, struct_Lu.cc);
          bytetest_c9 = simd_and(r80_7ff_tmp1, tmp138);
          bytetest_83_86 = simd_and(tmp107, tmp104);
          r80_7ff_tmp175 = simd_and(r80_7ff_tmp173, bytetest_83_86);
          struct_Lu.cc = simd_or(r80_7ff_tmp175, struct_Lu.cc);
          bytetest_c9 = simd_and(r80_7ff_tmp1, tmp138);
          bytetest_88_88 = simd_and(tmp35, tmp131);
          r80_7ff_tmp176 = simd_and(r80_7ff_tmp173, bytetest_88_88);
          struct_Lu.cc = simd_or(r80_7ff_tmp176, struct_Lu.cc);
          bytetest_c9 = simd_and(r80_7ff_tmp1, tmp138);
          bytetest_8a_8a = simd_and(tmp35, tmp145);
          r80_7ff_tmp177 = simd_and(r80_7ff_tmp173, bytetest_8a_8a);
          struct_Lu.cc = simd_or(r80_7ff_tmp177, struct_Lu.cc);
          bytetest_c9 = simd_and(r80_7ff_tmp1, tmp138);
          bytetest_8c_8c = simd_and(tmp35, tmp54);
          r80_7ff_tmp178 = simd_and(r80_7ff_tmp173, bytetest_8c_8c);
          struct_Lu.cc = simd_or(r80_7ff_tmp178, struct_Lu.cc);
          bytetest_c9 = simd_and(r80_7ff_tmp1, tmp138);
          bytetest_8e_8e = simd_and(tmp35, tmp173);
          r80_7ff_tmp179 = simd_and(r80_7ff_tmp173, bytetest_8e_8e);
          struct_Lu.cc = simd_or(r80_7ff_tmp179, struct_Lu.cc);
          bytetest_cd = simd_and(r80_7ff_tmp1, tmp19);
          bytetest_b0_b0 = simd_andc(bytetest_b0_bf, tmp9);
          r80_7ff_tmp180 = simd_and(tmp25, bytetest_cd);
          carryQ.cq[26] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp180, carryQ.get_carry_in(26), r80_7ff_tmp181));
          r80_7ff_tmp182 = simd_and(r80_7ff_tmp181, bytetest_b0_b0);
          struct_Lu.cc = simd_or(r80_7ff_tmp182, struct_Lu.cc);
          bytetest_cd = simd_and(r80_7ff_tmp1, tmp19);
          bytetest_b2_b2 = simd_and(bytetest_b0_bf, tmp45);
          r80_7ff_tmp183 = simd_and(r80_7ff_tmp181, bytetest_b2_b2);
          struct_Lu.cc = simd_or(r80_7ff_tmp183, struct_Lu.cc);
          bytetest_cd = simd_and(r80_7ff_tmp1, tmp19);
          bytetest_b6_b6 = simd_and(bytetest_b0_bf, tmp111);
          r80_7ff_tmp184 = simd_and(r80_7ff_tmp181, bytetest_b6_b6);
          struct_Lu.cc = simd_or(r80_7ff_tmp184, struct_Lu.cc);
          bytetest_ce = simd_and(r80_7ff_tmp1, tmp173);
          bytetest_86_86 = simd_and(tmp35, tmp111);
          r80_7ff_tmp185 = simd_and(tmp25, bytetest_ce);
          carryQ.cq[27] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp185, carryQ.get_carry_in(27), r80_7ff_tmp186));
          r80_7ff_tmp187 = simd_and(r80_7ff_tmp186, bytetest_86_86);
          struct_Lu.cc = simd_or(r80_7ff_tmp187, struct_Lu.cc);
          bytetest_ce = simd_and(r80_7ff_tmp1, tmp173);
          bytetest_88_8a = simd_andc(r80_7ff_tmp82, tmp3);
          r80_7ff_tmp188 = simd_and(r80_7ff_tmp186, bytetest_88_8a);
          struct_Lu.cc = simd_or(r80_7ff_tmp188, struct_Lu.cc);
          bytetest_ce = simd_and(r80_7ff_tmp1, tmp173);
          bytetest_8c_8c = simd_and(tmp35, tmp54);
          r80_7ff_tmp189 = simd_and(r80_7ff_tmp186, bytetest_8c_8c);
          struct_Lu.cc = simd_or(r80_7ff_tmp189, struct_Lu.cc);
          bytetest_ce = simd_and(r80_7ff_tmp1, tmp173);
          bytetest_8e_8f = simd_and(tmp35, tmp56);
          r80_7ff_tmp190 = simd_and(r80_7ff_tmp186, bytetest_8e_8f);
          struct_Lu.cc = simd_or(r80_7ff_tmp190, struct_Lu.cc);
          bytetest_ce = simd_and(r80_7ff_tmp1, tmp173);
          r80_7ff_tmp191 = simd_and(basis_bits.bit_3, tmp9);
          r80_7ff_tmp192 = simd_or(simd_and(basis_bits.bit_2, tmp133), simd_andc(r80_7ff_tmp191, basis_bits.bit_2));
          bytetest_91_a1 = simd_and(tmp14, r80_7ff_tmp192);
          r80_7ff_tmp193 = simd_and(r80_7ff_tmp186, bytetest_91_a1);
          struct_Lu.cc = simd_or(r80_7ff_tmp193, struct_Lu.cc);
          bytetest_ce = simd_and(r80_7ff_tmp1, tmp173);
          r80_7ff_tmp194 = simd_not(basis_bits.bit_5);
          r80_7ff_tmp195 = simd_or(simd_and(basis_bits.bit_4, r80_7ff_tmp194), simd_andc(tmp4, basis_bits.bit_4));
          bytetest_a3_ab = simd_and(tmp59, r80_7ff_tmp195);
          r80_7ff_tmp196 = simd_and(r80_7ff_tmp186, bytetest_a3_ab);
          struct_Lu.cc = simd_or(r80_7ff_tmp196, struct_Lu.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp166);
          bytetest_8f_8f = simd_and(tmp35, tmp166);
          r80_7ff_tmp197 = simd_and(tmp25, bytetest_cf);
          carryQ.cq[28] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp197, carryQ.get_carry_in(28), r80_7ff_tmp198));
          r80_7ff_tmp199 = simd_and(r80_7ff_tmp198, bytetest_8f_8f);
          struct_Lu.cc = simd_or(r80_7ff_tmp199, struct_Lu.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp166);
          r80_7ff_tmp200 = simd_or(simd_and(basis_bits.bit_5, tmp67), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
          bytetest_92_94 = simd_and(r80_7ff_tmp87, r80_7ff_tmp200);
          r80_7ff_tmp201 = simd_and(r80_7ff_tmp198, bytetest_92_94);
          struct_Lu.cc = simd_or(r80_7ff_tmp201, struct_Lu.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp166);
          bytetest_98_98 = simd_and(tmp16, tmp131);
          r80_7ff_tmp202 = simd_and(r80_7ff_tmp198, bytetest_98_98);
          struct_Lu.cc = simd_or(r80_7ff_tmp202, struct_Lu.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp166);
          bytetest_9a_9a = simd_and(tmp16, tmp145);
          r80_7ff_tmp203 = simd_and(r80_7ff_tmp198, bytetest_9a_9a);
          struct_Lu.cc = simd_or(r80_7ff_tmp203, struct_Lu.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp166);
          bytetest_9c_9c = simd_and(tmp16, tmp54);
          r80_7ff_tmp204 = simd_and(r80_7ff_tmp198, bytetest_9c_9c);
          struct_Lu.cc = simd_or(r80_7ff_tmp204, struct_Lu.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp166);
          bytetest_9e_9e = simd_and(tmp16, tmp173);
          r80_7ff_tmp205 = simd_and(r80_7ff_tmp198, bytetest_9e_9e);
          struct_Lu.cc = simd_or(r80_7ff_tmp205, struct_Lu.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp166);
          bytetest_a0_a0 = simd_andc(tmp59, tmp9);
          r80_7ff_tmp206 = simd_and(r80_7ff_tmp198, bytetest_a0_a0);
          struct_Lu.cc = simd_or(r80_7ff_tmp206, struct_Lu.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp166);
          bytetest_a2_a2 = simd_and(tmp59, tmp45);
          r80_7ff_tmp207 = simd_and(r80_7ff_tmp198, bytetest_a2_a2);
          struct_Lu.cc = simd_or(r80_7ff_tmp207, struct_Lu.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp166);
          bytetest_a4_a4 = simd_and(tmp59, tmp81);
          r80_7ff_tmp208 = simd_and(r80_7ff_tmp198, bytetest_a4_a4);
          struct_Lu.cc = simd_or(r80_7ff_tmp208, struct_Lu.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp166);
          bytetest_a6_a6 = simd_and(tmp59, tmp111);
          r80_7ff_tmp209 = simd_and(r80_7ff_tmp198, bytetest_a6_a6);
          struct_Lu.cc = simd_or(r80_7ff_tmp209, struct_Lu.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp166);
          bytetest_a8_a8 = simd_and(tmp59, tmp131);
          r80_7ff_tmp210 = simd_and(r80_7ff_tmp198, bytetest_a8_a8);
          struct_Lu.cc = simd_or(r80_7ff_tmp210, struct_Lu.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp166);
          bytetest_aa_aa = simd_and(tmp59, tmp145);
          r80_7ff_tmp211 = simd_and(r80_7ff_tmp198, bytetest_aa_aa);
          struct_Lu.cc = simd_or(r80_7ff_tmp211, struct_Lu.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp166);
          bytetest_ac_ac = simd_and(tmp59, tmp54);
          r80_7ff_tmp212 = simd_and(r80_7ff_tmp198, bytetest_ac_ac);
          struct_Lu.cc = simd_or(r80_7ff_tmp212, struct_Lu.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp166);
          bytetest_ae_ae = simd_and(tmp59, tmp173);
          r80_7ff_tmp213 = simd_and(r80_7ff_tmp198, bytetest_ae_ae);
          struct_Lu.cc = simd_or(r80_7ff_tmp213, struct_Lu.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp166);
          bytetest_b4_b4 = simd_and(bytetest_b0_bf, tmp81);
          r80_7ff_tmp214 = simd_and(r80_7ff_tmp198, bytetest_b4_b4);
          struct_Lu.cc = simd_or(r80_7ff_tmp214, struct_Lu.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp166);
          bytetest_b7_b7 = simd_and(bytetest_b0_bf, tmp123);
          r80_7ff_tmp215 = simd_and(r80_7ff_tmp198, bytetest_b7_b7);
          struct_Lu.cc = simd_or(r80_7ff_tmp215, struct_Lu.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp166);
          r80_7ff_tmp216 = simd_and(bytetest_b0_bf, tmp99);
          bytetest_b9_ba = simd_and(r80_7ff_tmp216, tmp64);
          r80_7ff_tmp217 = simd_and(r80_7ff_tmp198, bytetest_b9_ba);
          struct_Lu.cc = simd_or(r80_7ff_tmp217, struct_Lu.cc);
          r80_7ff_tmp218 = simd_and(tmp11, tmp15);
          bytetest_d0 = simd_andc(r80_7ff_tmp218, tmp9);
          bytetest_80_af = simd_andc(tmp14, tmp12);
          r80_7ff_tmp219 = simd_and(tmp25, bytetest_d0);
          carryQ.cq[29] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp219, carryQ.get_carry_in(29), r80_7ff_tmp220));
          r80_7ff_tmp221 = simd_and(r80_7ff_tmp220, bytetest_80_af);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp166);
          bytetest_bd_bf = simd_and(r80_7ff_tmp170, tmp8);
          r80_7ff_tmp222 = simd_and(r80_7ff_tmp198, bytetest_bd_bf);
          r80_7ff_tmp223 = simd_or(r80_7ff_tmp222, r80_7ff_tmp221);
          struct_Lu.cc = simd_or(r80_7ff_tmp223, struct_Lu.cc);
          bytetest_d1 = simd_and(r80_7ff_tmp218, tmp33);
          bytetest_a0_a0 = simd_andc(tmp59, tmp9);
          r80_7ff_tmp224 = simd_and(tmp25, bytetest_d1);
          carryQ.cq[30] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp224, carryQ.get_carry_in(30), r80_7ff_tmp225));
          r80_7ff_tmp226 = simd_and(r80_7ff_tmp225, bytetest_a0_a0);
          struct_Lu.cc = simd_or(r80_7ff_tmp226, struct_Lu.cc);
          bytetest_d1 = simd_and(r80_7ff_tmp218, tmp33);
          bytetest_a2_a2 = simd_and(tmp59, tmp45);
          r80_7ff_tmp227 = simd_and(r80_7ff_tmp225, bytetest_a2_a2);
          struct_Lu.cc = simd_or(r80_7ff_tmp227, struct_Lu.cc);
          bytetest_d1 = simd_and(r80_7ff_tmp218, tmp33);
          bytetest_a4_a4 = simd_and(tmp59, tmp81);
          r80_7ff_tmp228 = simd_and(r80_7ff_tmp225, bytetest_a4_a4);
          struct_Lu.cc = simd_or(r80_7ff_tmp228, struct_Lu.cc);
          bytetest_d1 = simd_and(r80_7ff_tmp218, tmp33);
          bytetest_a6_a6 = simd_and(tmp59, tmp111);
          r80_7ff_tmp229 = simd_and(r80_7ff_tmp225, bytetest_a6_a6);
          struct_Lu.cc = simd_or(r80_7ff_tmp229, struct_Lu.cc);
          bytetest_d1 = simd_and(r80_7ff_tmp218, tmp33);
          bytetest_a8_a8 = simd_and(tmp59, tmp131);
          r80_7ff_tmp230 = simd_and(r80_7ff_tmp225, bytetest_a8_a8);
          struct_Lu.cc = simd_or(r80_7ff_tmp230, struct_Lu.cc);
          bytetest_d1 = simd_and(r80_7ff_tmp218, tmp33);
          bytetest_aa_aa = simd_and(tmp59, tmp145);
          r80_7ff_tmp231 = simd_and(r80_7ff_tmp225, bytetest_aa_aa);
          struct_Lu.cc = simd_or(r80_7ff_tmp231, struct_Lu.cc);
          bytetest_d1 = simd_and(r80_7ff_tmp218, tmp33);
          bytetest_ac_ac = simd_and(tmp59, tmp54);
          r80_7ff_tmp232 = simd_and(r80_7ff_tmp225, bytetest_ac_ac);
          struct_Lu.cc = simd_or(r80_7ff_tmp232, struct_Lu.cc);
          bytetest_d1 = simd_and(r80_7ff_tmp218, tmp33);
          bytetest_ae_ae = simd_and(tmp59, tmp173);
          r80_7ff_tmp233 = simd_and(r80_7ff_tmp225, bytetest_ae_ae);
          struct_Lu.cc = simd_or(r80_7ff_tmp233, struct_Lu.cc);
          bytetest_d1 = simd_and(r80_7ff_tmp218, tmp33);
          bytetest_b0_b0 = simd_andc(bytetest_b0_bf, tmp9);
          r80_7ff_tmp234 = simd_and(r80_7ff_tmp225, bytetest_b0_b0);
          struct_Lu.cc = simd_or(r80_7ff_tmp234, struct_Lu.cc);
          bytetest_d1 = simd_and(r80_7ff_tmp218, tmp33);
          bytetest_b2_b2 = simd_and(bytetest_b0_bf, tmp45);
          r80_7ff_tmp235 = simd_and(r80_7ff_tmp225, bytetest_b2_b2);
          struct_Lu.cc = simd_or(r80_7ff_tmp235, struct_Lu.cc);
          bytetest_d1 = simd_and(r80_7ff_tmp218, tmp33);
          bytetest_b4_b4 = simd_and(bytetest_b0_bf, tmp81);
          r80_7ff_tmp236 = simd_and(r80_7ff_tmp225, bytetest_b4_b4);
          struct_Lu.cc = simd_or(r80_7ff_tmp236, struct_Lu.cc);
          bytetest_d1 = simd_and(r80_7ff_tmp218, tmp33);
          bytetest_b6_b6 = simd_and(bytetest_b0_bf, tmp111);
          r80_7ff_tmp237 = simd_and(r80_7ff_tmp225, bytetest_b6_b6);
          struct_Lu.cc = simd_or(r80_7ff_tmp237, struct_Lu.cc);
          bytetest_d1 = simd_and(r80_7ff_tmp218, tmp33);
          bytetest_b8_b8 = simd_and(bytetest_b0_bf, tmp131);
          r80_7ff_tmp238 = simd_and(r80_7ff_tmp225, bytetest_b8_b8);
          struct_Lu.cc = simd_or(r80_7ff_tmp238, struct_Lu.cc);
          bytetest_d1 = simd_and(r80_7ff_tmp218, tmp33);
          bytetest_ba_ba = simd_and(bytetest_b0_bf, tmp145);
          r80_7ff_tmp239 = simd_and(r80_7ff_tmp225, bytetest_ba_ba);
          struct_Lu.cc = simd_or(r80_7ff_tmp239, struct_Lu.cc);
          bytetest_d1 = simd_and(r80_7ff_tmp218, tmp33);
          bytetest_bc_bc = simd_and(bytetest_b0_bf, tmp54);
          r80_7ff_tmp240 = simd_and(r80_7ff_tmp225, bytetest_bc_bc);
          struct_Lu.cc = simd_or(r80_7ff_tmp240, struct_Lu.cc);
          bytetest_d1 = simd_and(r80_7ff_tmp218, tmp33);
          bytetest_be_be = simd_and(bytetest_b0_bf, tmp173);
          r80_7ff_tmp241 = simd_and(r80_7ff_tmp225, bytetest_be_be);
          struct_Lu.cc = simd_or(r80_7ff_tmp241, struct_Lu.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp218, tmp45);
          bytetest_80_80 = simd_andc(tmp35, tmp9);
          r80_7ff_tmp242 = simd_and(tmp25, bytetest_d2);
          carryQ.cq[31] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp242, carryQ.get_carry_in(31), r80_7ff_tmp243));
          r80_7ff_tmp244 = simd_and(r80_7ff_tmp243, bytetest_80_80);
          struct_Lu.cc = simd_or(r80_7ff_tmp244, struct_Lu.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp218, tmp45);
          bytetest_8a_8a = simd_and(tmp35, tmp145);
          r80_7ff_tmp245 = simd_and(r80_7ff_tmp243, bytetest_8a_8a);
          struct_Lu.cc = simd_or(r80_7ff_tmp245, struct_Lu.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp218, tmp45);
          bytetest_8c_8c = simd_and(tmp35, tmp54);
          r80_7ff_tmp246 = simd_and(r80_7ff_tmp243, bytetest_8c_8c);
          struct_Lu.cc = simd_or(r80_7ff_tmp246, struct_Lu.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp218, tmp45);
          bytetest_8e_8e = simd_and(tmp35, tmp173);
          r80_7ff_tmp247 = simd_and(r80_7ff_tmp243, bytetest_8e_8e);
          struct_Lu.cc = simd_or(r80_7ff_tmp247, struct_Lu.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp218, tmp45);
          bytetest_90_90 = simd_andc(tmp16, tmp9);
          r80_7ff_tmp248 = simd_and(r80_7ff_tmp243, bytetest_90_90);
          struct_Lu.cc = simd_or(r80_7ff_tmp248, struct_Lu.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp218, tmp45);
          bytetest_92_92 = simd_and(tmp16, tmp45);
          r80_7ff_tmp249 = simd_and(r80_7ff_tmp243, bytetest_92_92);
          struct_Lu.cc = simd_or(r80_7ff_tmp249, struct_Lu.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp218, tmp45);
          bytetest_94_94 = simd_and(tmp16, tmp81);
          r80_7ff_tmp250 = simd_and(r80_7ff_tmp243, bytetest_94_94);
          struct_Lu.cc = simd_or(r80_7ff_tmp250, struct_Lu.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp218, tmp45);
          bytetest_96_96 = simd_and(tmp16, tmp111);
          r80_7ff_tmp251 = simd_and(r80_7ff_tmp243, bytetest_96_96);
          struct_Lu.cc = simd_or(r80_7ff_tmp251, struct_Lu.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp218, tmp45);
          bytetest_98_98 = simd_and(tmp16, tmp131);
          r80_7ff_tmp252 = simd_and(r80_7ff_tmp243, bytetest_98_98);
          struct_Lu.cc = simd_or(r80_7ff_tmp252, struct_Lu.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp218, tmp45);
          bytetest_9a_9a = simd_and(tmp16, tmp145);
          r80_7ff_tmp253 = simd_and(r80_7ff_tmp243, bytetest_9a_9a);
          struct_Lu.cc = simd_or(r80_7ff_tmp253, struct_Lu.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp218, tmp45);
          bytetest_9c_9c = simd_and(tmp16, tmp54);
          r80_7ff_tmp254 = simd_and(r80_7ff_tmp243, bytetest_9c_9c);
          struct_Lu.cc = simd_or(r80_7ff_tmp254, struct_Lu.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp218, tmp45);
          bytetest_9e_9e = simd_and(tmp16, tmp173);
          r80_7ff_tmp255 = simd_and(r80_7ff_tmp243, bytetest_9e_9e);
          struct_Lu.cc = simd_or(r80_7ff_tmp255, struct_Lu.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp218, tmp45);
          bytetest_a0_a0 = simd_andc(tmp59, tmp9);
          r80_7ff_tmp256 = simd_and(r80_7ff_tmp243, bytetest_a0_a0);
          struct_Lu.cc = simd_or(r80_7ff_tmp256, struct_Lu.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp218, tmp45);
          bytetest_a2_a2 = simd_and(tmp59, tmp45);
          r80_7ff_tmp257 = simd_and(r80_7ff_tmp243, bytetest_a2_a2);
          struct_Lu.cc = simd_or(r80_7ff_tmp257, struct_Lu.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp218, tmp45);
          bytetest_a4_a4 = simd_and(tmp59, tmp81);
          r80_7ff_tmp258 = simd_and(r80_7ff_tmp243, bytetest_a4_a4);
          struct_Lu.cc = simd_or(r80_7ff_tmp258, struct_Lu.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp218, tmp45);
          bytetest_a6_a6 = simd_and(tmp59, tmp111);
          r80_7ff_tmp259 = simd_and(r80_7ff_tmp243, bytetest_a6_a6);
          struct_Lu.cc = simd_or(r80_7ff_tmp259, struct_Lu.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp218, tmp45);
          bytetest_a8_a8 = simd_and(tmp59, tmp131);
          r80_7ff_tmp260 = simd_and(r80_7ff_tmp243, bytetest_a8_a8);
          struct_Lu.cc = simd_or(r80_7ff_tmp260, struct_Lu.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp218, tmp45);
          bytetest_aa_aa = simd_and(tmp59, tmp145);
          r80_7ff_tmp261 = simd_and(r80_7ff_tmp243, bytetest_aa_aa);
          struct_Lu.cc = simd_or(r80_7ff_tmp261, struct_Lu.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp218, tmp45);
          bytetest_ac_ac = simd_and(tmp59, tmp54);
          r80_7ff_tmp262 = simd_and(r80_7ff_tmp243, bytetest_ac_ac);
          struct_Lu.cc = simd_or(r80_7ff_tmp262, struct_Lu.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp218, tmp45);
          bytetest_ae_ae = simd_and(tmp59, tmp173);
          r80_7ff_tmp263 = simd_and(r80_7ff_tmp243, bytetest_ae_ae);
          struct_Lu.cc = simd_or(r80_7ff_tmp263, struct_Lu.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp218, tmp45);
          bytetest_b0_b0 = simd_andc(bytetest_b0_bf, tmp9);
          r80_7ff_tmp264 = simd_and(r80_7ff_tmp243, bytetest_b0_b0);
          struct_Lu.cc = simd_or(r80_7ff_tmp264, struct_Lu.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp218, tmp45);
          bytetest_b2_b2 = simd_and(bytetest_b0_bf, tmp45);
          r80_7ff_tmp265 = simd_and(r80_7ff_tmp243, bytetest_b2_b2);
          struct_Lu.cc = simd_or(r80_7ff_tmp265, struct_Lu.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp218, tmp45);
          bytetest_b4_b4 = simd_and(bytetest_b0_bf, tmp81);
          r80_7ff_tmp266 = simd_and(r80_7ff_tmp243, bytetest_b4_b4);
          struct_Lu.cc = simd_or(r80_7ff_tmp266, struct_Lu.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp218, tmp45);
          bytetest_b6_b6 = simd_and(bytetest_b0_bf, tmp111);
          r80_7ff_tmp267 = simd_and(r80_7ff_tmp243, bytetest_b6_b6);
          struct_Lu.cc = simd_or(r80_7ff_tmp267, struct_Lu.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp218, tmp45);
          bytetest_b8_b8 = simd_and(bytetest_b0_bf, tmp131);
          r80_7ff_tmp268 = simd_and(r80_7ff_tmp243, bytetest_b8_b8);
          struct_Lu.cc = simd_or(r80_7ff_tmp268, struct_Lu.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp218, tmp45);
          bytetest_ba_ba = simd_and(bytetest_b0_bf, tmp145);
          r80_7ff_tmp269 = simd_and(r80_7ff_tmp243, bytetest_ba_ba);
          struct_Lu.cc = simd_or(r80_7ff_tmp269, struct_Lu.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp218, tmp45);
          bytetest_bc_bc = simd_and(bytetest_b0_bf, tmp54);
          r80_7ff_tmp270 = simd_and(r80_7ff_tmp243, bytetest_bc_bc);
          struct_Lu.cc = simd_or(r80_7ff_tmp270, struct_Lu.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp218, tmp45);
          bytetest_be_be = simd_and(bytetest_b0_bf, tmp173);
          r80_7ff_tmp271 = simd_and(r80_7ff_tmp243, bytetest_be_be);
          struct_Lu.cc = simd_or(r80_7ff_tmp271, struct_Lu.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp218, tmp74);
          bytetest_80_81 = simd_andc(tmp35, tmp46);
          r80_7ff_tmp272 = simd_and(tmp25, bytetest_d3);
          carryQ.cq[32] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp272, carryQ.get_carry_in(32), r80_7ff_tmp273));
          r80_7ff_tmp274 = simd_and(r80_7ff_tmp273, bytetest_80_81);
          struct_Lu.cc = simd_or(r80_7ff_tmp274, struct_Lu.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp218, tmp74);
          bytetest_83_83 = simd_and(tmp35, tmp74);
          r80_7ff_tmp275 = simd_and(r80_7ff_tmp273, bytetest_83_83);
          struct_Lu.cc = simd_or(r80_7ff_tmp275, struct_Lu.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp218, tmp74);
          bytetest_85_85 = simd_and(tmp35, tmp106);
          r80_7ff_tmp276 = simd_and(r80_7ff_tmp273, bytetest_85_85);
          struct_Lu.cc = simd_or(r80_7ff_tmp276, struct_Lu.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp218, tmp74);
          bytetest_87_87 = simd_and(tmp35, tmp123);
          r80_7ff_tmp277 = simd_and(r80_7ff_tmp273, bytetest_87_87);
          struct_Lu.cc = simd_or(r80_7ff_tmp277, struct_Lu.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp218, tmp74);
          bytetest_89_89 = simd_and(tmp35, tmp138);
          r80_7ff_tmp278 = simd_and(r80_7ff_tmp273, bytetest_89_89);
          struct_Lu.cc = simd_or(r80_7ff_tmp278, struct_Lu.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp218, tmp74);
          bytetest_8b_8b = simd_and(tmp35, tmp151);
          r80_7ff_tmp279 = simd_and(r80_7ff_tmp273, bytetest_8b_8b);
          struct_Lu.cc = simd_or(r80_7ff_tmp279, struct_Lu.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp218, tmp74);
          bytetest_8d_8d = simd_and(tmp35, tmp19);
          r80_7ff_tmp280 = simd_and(r80_7ff_tmp273, bytetest_8d_8d);
          struct_Lu.cc = simd_or(r80_7ff_tmp280, struct_Lu.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp218, tmp74);
          bytetest_90_90 = simd_andc(tmp16, tmp9);
          r80_7ff_tmp281 = simd_and(r80_7ff_tmp273, bytetest_90_90);
          struct_Lu.cc = simd_or(r80_7ff_tmp281, struct_Lu.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp218, tmp74);
          bytetest_92_92 = simd_and(tmp16, tmp45);
          r80_7ff_tmp282 = simd_and(r80_7ff_tmp273, bytetest_92_92);
          struct_Lu.cc = simd_or(r80_7ff_tmp282, struct_Lu.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp218, tmp74);
          bytetest_94_94 = simd_and(tmp16, tmp81);
          r80_7ff_tmp283 = simd_and(r80_7ff_tmp273, bytetest_94_94);
          struct_Lu.cc = simd_or(r80_7ff_tmp283, struct_Lu.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp218, tmp74);
          bytetest_96_96 = simd_and(tmp16, tmp111);
          r80_7ff_tmp284 = simd_and(r80_7ff_tmp273, bytetest_96_96);
          struct_Lu.cc = simd_or(r80_7ff_tmp284, struct_Lu.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp218, tmp74);
          bytetest_98_98 = simd_and(tmp16, tmp131);
          r80_7ff_tmp285 = simd_and(r80_7ff_tmp273, bytetest_98_98);
          struct_Lu.cc = simd_or(r80_7ff_tmp285, struct_Lu.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp218, tmp74);
          bytetest_9a_9a = simd_and(tmp16, tmp145);
          r80_7ff_tmp286 = simd_and(r80_7ff_tmp273, bytetest_9a_9a);
          struct_Lu.cc = simd_or(r80_7ff_tmp286, struct_Lu.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp218, tmp74);
          bytetest_9c_9c = simd_and(tmp16, tmp54);
          r80_7ff_tmp287 = simd_and(r80_7ff_tmp273, bytetest_9c_9c);
          struct_Lu.cc = simd_or(r80_7ff_tmp287, struct_Lu.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp218, tmp74);
          bytetest_9e_9e = simd_and(tmp16, tmp173);
          r80_7ff_tmp288 = simd_and(r80_7ff_tmp273, bytetest_9e_9e);
          struct_Lu.cc = simd_or(r80_7ff_tmp288, struct_Lu.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp218, tmp74);
          bytetest_a0_a0 = simd_andc(tmp59, tmp9);
          r80_7ff_tmp289 = simd_and(r80_7ff_tmp273, bytetest_a0_a0);
          struct_Lu.cc = simd_or(r80_7ff_tmp289, struct_Lu.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp218, tmp74);
          bytetest_a2_a2 = simd_and(tmp59, tmp45);
          r80_7ff_tmp290 = simd_and(r80_7ff_tmp273, bytetest_a2_a2);
          struct_Lu.cc = simd_or(r80_7ff_tmp290, struct_Lu.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp218, tmp74);
          bytetest_a4_a4 = simd_and(tmp59, tmp81);
          r80_7ff_tmp291 = simd_and(r80_7ff_tmp273, bytetest_a4_a4);
          struct_Lu.cc = simd_or(r80_7ff_tmp291, struct_Lu.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp218, tmp74);
          bytetest_a6_a6 = simd_and(tmp59, tmp111);
          r80_7ff_tmp292 = simd_and(r80_7ff_tmp273, bytetest_a6_a6);
          struct_Lu.cc = simd_or(r80_7ff_tmp292, struct_Lu.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp218, tmp74);
          bytetest_a8_a8 = simd_and(tmp59, tmp131);
          r80_7ff_tmp293 = simd_and(r80_7ff_tmp273, bytetest_a8_a8);
          struct_Lu.cc = simd_or(r80_7ff_tmp293, struct_Lu.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp218, tmp74);
          bytetest_aa_aa = simd_and(tmp59, tmp145);
          r80_7ff_tmp294 = simd_and(r80_7ff_tmp273, bytetest_aa_aa);
          struct_Lu.cc = simd_or(r80_7ff_tmp294, struct_Lu.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp218, tmp74);
          bytetest_ac_ac = simd_and(tmp59, tmp54);
          r80_7ff_tmp295 = simd_and(r80_7ff_tmp273, bytetest_ac_ac);
          struct_Lu.cc = simd_or(r80_7ff_tmp295, struct_Lu.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp218, tmp74);
          bytetest_ae_ae = simd_and(tmp59, tmp173);
          r80_7ff_tmp296 = simd_and(r80_7ff_tmp273, bytetest_ae_ae);
          struct_Lu.cc = simd_or(r80_7ff_tmp296, struct_Lu.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp218, tmp74);
          bytetest_b0_b0 = simd_andc(bytetest_b0_bf, tmp9);
          r80_7ff_tmp297 = simd_and(r80_7ff_tmp273, bytetest_b0_b0);
          struct_Lu.cc = simd_or(r80_7ff_tmp297, struct_Lu.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp218, tmp74);
          bytetest_b2_b2 = simd_and(bytetest_b0_bf, tmp45);
          r80_7ff_tmp298 = simd_and(r80_7ff_tmp273, bytetest_b2_b2);
          struct_Lu.cc = simd_or(r80_7ff_tmp298, struct_Lu.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp218, tmp74);
          bytetest_b4_b4 = simd_and(bytetest_b0_bf, tmp81);
          r80_7ff_tmp299 = simd_and(r80_7ff_tmp273, bytetest_b4_b4);
          struct_Lu.cc = simd_or(r80_7ff_tmp299, struct_Lu.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp218, tmp74);
          bytetest_b6_b6 = simd_and(bytetest_b0_bf, tmp111);
          r80_7ff_tmp300 = simd_and(r80_7ff_tmp273, bytetest_b6_b6);
          struct_Lu.cc = simd_or(r80_7ff_tmp300, struct_Lu.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp218, tmp74);
          bytetest_b8_b8 = simd_and(bytetest_b0_bf, tmp131);
          r80_7ff_tmp301 = simd_and(r80_7ff_tmp273, bytetest_b8_b8);
          struct_Lu.cc = simd_or(r80_7ff_tmp301, struct_Lu.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp218, tmp74);
          bytetest_ba_ba = simd_and(bytetest_b0_bf, tmp145);
          r80_7ff_tmp302 = simd_and(r80_7ff_tmp273, bytetest_ba_ba);
          struct_Lu.cc = simd_or(r80_7ff_tmp302, struct_Lu.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp218, tmp74);
          bytetest_bc_bc = simd_and(bytetest_b0_bf, tmp54);
          r80_7ff_tmp303 = simd_and(r80_7ff_tmp273, bytetest_bc_bc);
          struct_Lu.cc = simd_or(r80_7ff_tmp303, struct_Lu.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp218, tmp74);
          bytetest_be_be = simd_and(bytetest_b0_bf, tmp173);
          r80_7ff_tmp304 = simd_and(r80_7ff_tmp273, bytetest_be_be);
          struct_Lu.cc = simd_or(r80_7ff_tmp304, struct_Lu.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp218, tmp81);
          bytetest_80_80 = simd_andc(tmp35, tmp9);
          r80_7ff_tmp305 = simd_and(tmp25, bytetest_d4);
          carryQ.cq[33] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp305, carryQ.get_carry_in(33), r80_7ff_tmp306));
          r80_7ff_tmp307 = simd_and(r80_7ff_tmp306, bytetest_80_80);
          struct_Lu.cc = simd_or(r80_7ff_tmp307, struct_Lu.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp218, tmp81);
          bytetest_82_82 = simd_and(tmp35, tmp45);
          r80_7ff_tmp308 = simd_and(r80_7ff_tmp306, bytetest_82_82);
          struct_Lu.cc = simd_or(r80_7ff_tmp308, struct_Lu.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp218, tmp81);
          bytetest_84_84 = simd_and(tmp35, tmp81);
          r80_7ff_tmp309 = simd_and(r80_7ff_tmp306, bytetest_84_84);
          struct_Lu.cc = simd_or(r80_7ff_tmp309, struct_Lu.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp218, tmp81);
          bytetest_86_86 = simd_and(tmp35, tmp111);
          r80_7ff_tmp310 = simd_and(r80_7ff_tmp306, bytetest_86_86);
          struct_Lu.cc = simd_or(r80_7ff_tmp310, struct_Lu.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp218, tmp81);
          bytetest_88_88 = simd_and(tmp35, tmp131);
          r80_7ff_tmp311 = simd_and(r80_7ff_tmp306, bytetest_88_88);
          struct_Lu.cc = simd_or(r80_7ff_tmp311, struct_Lu.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp218, tmp81);
          bytetest_8a_8a = simd_and(tmp35, tmp145);
          r80_7ff_tmp312 = simd_and(r80_7ff_tmp306, bytetest_8a_8a);
          struct_Lu.cc = simd_or(r80_7ff_tmp312, struct_Lu.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp218, tmp81);
          bytetest_8c_8c = simd_and(tmp35, tmp54);
          r80_7ff_tmp313 = simd_and(r80_7ff_tmp306, bytetest_8c_8c);
          struct_Lu.cc = simd_or(r80_7ff_tmp313, struct_Lu.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp218, tmp81);
          bytetest_8e_8e = simd_and(tmp35, tmp173);
          r80_7ff_tmp314 = simd_and(r80_7ff_tmp306, bytetest_8e_8e);
          struct_Lu.cc = simd_or(r80_7ff_tmp314, struct_Lu.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp218, tmp81);
          bytetest_90_90 = simd_andc(tmp16, tmp9);
          r80_7ff_tmp315 = simd_and(r80_7ff_tmp306, bytetest_90_90);
          struct_Lu.cc = simd_or(r80_7ff_tmp315, struct_Lu.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp218, tmp81);
          bytetest_92_92 = simd_and(tmp16, tmp45);
          r80_7ff_tmp316 = simd_and(r80_7ff_tmp306, bytetest_92_92);
          struct_Lu.cc = simd_or(r80_7ff_tmp316, struct_Lu.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp218, tmp81);
          bytetest_94_94 = simd_and(tmp16, tmp81);
          r80_7ff_tmp317 = simd_and(r80_7ff_tmp306, bytetest_94_94);
          struct_Lu.cc = simd_or(r80_7ff_tmp317, struct_Lu.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp218, tmp81);
          bytetest_96_96 = simd_and(tmp16, tmp111);
          r80_7ff_tmp318 = simd_and(r80_7ff_tmp306, bytetest_96_96);
          struct_Lu.cc = simd_or(r80_7ff_tmp318, struct_Lu.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp218, tmp81);
          bytetest_98_98 = simd_and(tmp16, tmp131);
          r80_7ff_tmp319 = simd_and(r80_7ff_tmp306, bytetest_98_98);
          struct_Lu.cc = simd_or(r80_7ff_tmp319, struct_Lu.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp218, tmp81);
          bytetest_9a_9a = simd_and(tmp16, tmp145);
          r80_7ff_tmp320 = simd_and(r80_7ff_tmp306, bytetest_9a_9a);
          struct_Lu.cc = simd_or(r80_7ff_tmp320, struct_Lu.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp218, tmp81);
          bytetest_9c_9c = simd_and(tmp16, tmp54);
          r80_7ff_tmp321 = simd_and(r80_7ff_tmp306, bytetest_9c_9c);
          struct_Lu.cc = simd_or(r80_7ff_tmp321, struct_Lu.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp218, tmp81);
          bytetest_9e_9e = simd_and(tmp16, tmp173);
          r80_7ff_tmp322 = simd_and(r80_7ff_tmp306, bytetest_9e_9e);
          struct_Lu.cc = simd_or(r80_7ff_tmp322, struct_Lu.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp218, tmp81);
          bytetest_a0_a0 = simd_andc(tmp59, tmp9);
          r80_7ff_tmp323 = simd_and(r80_7ff_tmp306, bytetest_a0_a0);
          struct_Lu.cc = simd_or(r80_7ff_tmp323, struct_Lu.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp218, tmp81);
          bytetest_a2_a2 = simd_and(tmp59, tmp45);
          r80_7ff_tmp324 = simd_and(r80_7ff_tmp306, bytetest_a2_a2);
          struct_Lu.cc = simd_or(r80_7ff_tmp324, struct_Lu.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp218, tmp81);
          bytetest_a4_a4 = simd_and(tmp59, tmp81);
          r80_7ff_tmp325 = simd_and(r80_7ff_tmp306, bytetest_a4_a4);
          struct_Lu.cc = simd_or(r80_7ff_tmp325, struct_Lu.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp218, tmp81);
          bytetest_a6_a6 = simd_and(tmp59, tmp111);
          r80_7ff_tmp326 = simd_and(r80_7ff_tmp306, bytetest_a6_a6);
          struct_Lu.cc = simd_or(r80_7ff_tmp326, struct_Lu.cc);
          bytetest_d5 = simd_and(r80_7ff_tmp218, tmp106);
          bytetest_80_96 = simd_andc(tmp20, r80_7ff_tmp3);
          r80_7ff_tmp327 = simd_and(tmp25, bytetest_d5);
          carryQ.cq[34] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp327, carryQ.get_carry_in(34), r80_7ff_tmp328));
          r80_7ff_tmp329 = simd_and(r80_7ff_tmp328, bytetest_80_96);
          bytetest_d4 = simd_and(r80_7ff_tmp218, tmp81);
          r80_7ff_tmp330 = simd_or(basis_bits.bit_4, tmp174);
          bytetest_b1_bf = simd_and(bytetest_b0_bf, r80_7ff_tmp330);
          r80_7ff_tmp331 = simd_and(r80_7ff_tmp306, bytetest_b1_bf);
          r80_7ff_tmp332 = simd_or(r80_7ff_tmp331, r80_7ff_tmp329);
          struct_Lu.cc = simd_or(r80_7ff_tmp332, struct_Lu.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(19, 16);
        }
        tmp186 = simd_and(tmp11, tmp58);
        tmp187 = simd_or(basis_bits.bit_4, tmp174);
        bytetest_e1_ef = simd_and(tmp186, tmp187);
        bytetest_e0 = simd_andc(tmp186, tmp9);
        bytetest_a0_bf = simd_and(tmp14, basis_bits.bit_2);
        tmp188 = simd_and(tmp25, bytetest_e0);
        carryQ.cq[35] = carryout2carry(pablo_blk_Advance(tmp188, carryQ.get_carry_in(35), tmp189));
        tmp190 = simd_and(tmp189, bytetest_a0_bf);
        tmp191 = simd_or(tmp190, bytetest_e1_ef);
        if ((bitblock::any(tmp191) || carryQ.CarryTest(36, 27))) {
          r800_ffff_tmp1 = simd_and(tmp11, tmp58);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_83 = simd_and(tmp35, tmp74);
          bytetest_80_85 = simd_andc(tmp107, tmp36);
          r800_ffff_tmp2 = simd_and(tmp25, bytetest_e1);
          carryQ.cq[36] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp2, carryQ.get_carry_in(36), r800_ffff_tmp3));
          r800_ffff_tmp4 = simd_and(r800_ffff_tmp3, bytetest_83);
          carryQ.cq[37] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp4, carryQ.get_carry_in(37), r800_ffff_tmp5));
          r800_ffff_tmp6 = simd_and(r800_ffff_tmp5, bytetest_80_85);
          bytetest_82 = simd_and(tmp35, tmp45);
          bytetest_a0_bf = simd_and(tmp14, basis_bits.bit_2);
          r800_ffff_tmp7 = simd_and(r800_ffff_tmp3, bytetest_82);
          carryQ.cq[38] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp7, carryQ.get_carry_in(38), r800_ffff_tmp8));
          r800_ffff_tmp9 = simd_and(r800_ffff_tmp8, bytetest_a0_bf);
          r800_ffff_tmp10 = simd_or(r800_ffff_tmp9, r800_ffff_tmp6);
          struct_Lu.cc = simd_or(r800_ffff_tmp10, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_83 = simd_and(tmp35, tmp74);
          bytetest_87_87 = simd_and(tmp35, tmp123);
          r800_ffff_tmp11 = simd_and(r800_ffff_tmp5, bytetest_87_87);
          struct_Lu.cc = simd_or(r800_ffff_tmp11, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_83 = simd_and(tmp35, tmp74);
          bytetest_8d_8d = simd_and(tmp35, tmp19);
          r800_ffff_tmp12 = simd_and(r800_ffff_tmp5, bytetest_8d_8d);
          struct_Lu.cc = simd_or(r800_ffff_tmp12, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp131);
          bytetest_80_80 = simd_andc(tmp35, tmp9);
          r800_ffff_tmp13 = simd_and(r800_ffff_tmp3, bytetest_b8);
          carryQ.cq[39] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp13, carryQ.get_carry_in(39), r800_ffff_tmp14));
          r800_ffff_tmp15 = simd_and(r800_ffff_tmp14, bytetest_80_80);
          struct_Lu.cc = simd_or(r800_ffff_tmp15, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp131);
          bytetest_82_82 = simd_and(tmp35, tmp45);
          r800_ffff_tmp16 = simd_and(r800_ffff_tmp14, bytetest_82_82);
          struct_Lu.cc = simd_or(r800_ffff_tmp16, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp131);
          bytetest_84_84 = simd_and(tmp35, tmp81);
          r800_ffff_tmp17 = simd_and(r800_ffff_tmp14, bytetest_84_84);
          struct_Lu.cc = simd_or(r800_ffff_tmp17, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp131);
          bytetest_86_86 = simd_and(tmp35, tmp111);
          r800_ffff_tmp18 = simd_and(r800_ffff_tmp14, bytetest_86_86);
          struct_Lu.cc = simd_or(r800_ffff_tmp18, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp131);
          bytetest_88_88 = simd_and(tmp35, tmp131);
          r800_ffff_tmp19 = simd_and(r800_ffff_tmp14, bytetest_88_88);
          struct_Lu.cc = simd_or(r800_ffff_tmp19, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp131);
          bytetest_8a_8a = simd_and(tmp35, tmp145);
          r800_ffff_tmp20 = simd_and(r800_ffff_tmp14, bytetest_8a_8a);
          struct_Lu.cc = simd_or(r800_ffff_tmp20, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp131);
          bytetest_8c_8c = simd_and(tmp35, tmp54);
          r800_ffff_tmp21 = simd_and(r800_ffff_tmp14, bytetest_8c_8c);
          struct_Lu.cc = simd_or(r800_ffff_tmp21, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp131);
          bytetest_8e_8e = simd_and(tmp35, tmp173);
          r800_ffff_tmp22 = simd_and(r800_ffff_tmp14, bytetest_8e_8e);
          struct_Lu.cc = simd_or(r800_ffff_tmp22, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp131);
          bytetest_90_90 = simd_andc(tmp16, tmp9);
          r800_ffff_tmp23 = simd_and(r800_ffff_tmp14, bytetest_90_90);
          struct_Lu.cc = simd_or(r800_ffff_tmp23, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp131);
          bytetest_92_92 = simd_and(tmp16, tmp45);
          r800_ffff_tmp24 = simd_and(r800_ffff_tmp14, bytetest_92_92);
          struct_Lu.cc = simd_or(r800_ffff_tmp24, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp131);
          bytetest_94_94 = simd_and(tmp16, tmp81);
          r800_ffff_tmp25 = simd_and(r800_ffff_tmp14, bytetest_94_94);
          struct_Lu.cc = simd_or(r800_ffff_tmp25, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp131);
          bytetest_96_96 = simd_and(tmp16, tmp111);
          r800_ffff_tmp26 = simd_and(r800_ffff_tmp14, bytetest_96_96);
          struct_Lu.cc = simd_or(r800_ffff_tmp26, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp131);
          bytetest_98_98 = simd_and(tmp16, tmp131);
          r800_ffff_tmp27 = simd_and(r800_ffff_tmp14, bytetest_98_98);
          struct_Lu.cc = simd_or(r800_ffff_tmp27, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp131);
          bytetest_9a_9a = simd_and(tmp16, tmp145);
          r800_ffff_tmp28 = simd_and(r800_ffff_tmp14, bytetest_9a_9a);
          struct_Lu.cc = simd_or(r800_ffff_tmp28, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp131);
          bytetest_9c_9c = simd_and(tmp16, tmp54);
          r800_ffff_tmp29 = simd_and(r800_ffff_tmp14, bytetest_9c_9c);
          struct_Lu.cc = simd_or(r800_ffff_tmp29, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp131);
          bytetest_9e_9e = simd_and(tmp16, tmp173);
          r800_ffff_tmp30 = simd_and(r800_ffff_tmp14, bytetest_9e_9e);
          struct_Lu.cc = simd_or(r800_ffff_tmp30, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp131);
          bytetest_a0_a0 = simd_andc(tmp59, tmp9);
          r800_ffff_tmp31 = simd_and(r800_ffff_tmp14, bytetest_a0_a0);
          struct_Lu.cc = simd_or(r800_ffff_tmp31, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp131);
          bytetest_a2_a2 = simd_and(tmp59, tmp45);
          r800_ffff_tmp32 = simd_and(r800_ffff_tmp14, bytetest_a2_a2);
          struct_Lu.cc = simd_or(r800_ffff_tmp32, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp131);
          bytetest_a4_a4 = simd_and(tmp59, tmp81);
          r800_ffff_tmp33 = simd_and(r800_ffff_tmp14, bytetest_a4_a4);
          struct_Lu.cc = simd_or(r800_ffff_tmp33, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp131);
          bytetest_a6_a6 = simd_and(tmp59, tmp111);
          r800_ffff_tmp34 = simd_and(r800_ffff_tmp14, bytetest_a6_a6);
          struct_Lu.cc = simd_or(r800_ffff_tmp34, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp131);
          bytetest_a8_a8 = simd_and(tmp59, tmp131);
          r800_ffff_tmp35 = simd_and(r800_ffff_tmp14, bytetest_a8_a8);
          struct_Lu.cc = simd_or(r800_ffff_tmp35, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp131);
          bytetest_aa_aa = simd_and(tmp59, tmp145);
          r800_ffff_tmp36 = simd_and(r800_ffff_tmp14, bytetest_aa_aa);
          struct_Lu.cc = simd_or(r800_ffff_tmp36, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp131);
          bytetest_ac_ac = simd_and(tmp59, tmp54);
          r800_ffff_tmp37 = simd_and(r800_ffff_tmp14, bytetest_ac_ac);
          struct_Lu.cc = simd_or(r800_ffff_tmp37, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp131);
          bytetest_ae_ae = simd_and(tmp59, tmp173);
          r800_ffff_tmp38 = simd_and(r800_ffff_tmp14, bytetest_ae_ae);
          struct_Lu.cc = simd_or(r800_ffff_tmp38, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp131);
          bytetest_b0_b0 = simd_andc(bytetest_b0_bf, tmp9);
          r800_ffff_tmp39 = simd_and(r800_ffff_tmp14, bytetest_b0_b0);
          struct_Lu.cc = simd_or(r800_ffff_tmp39, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp131);
          bytetest_b2_b2 = simd_and(bytetest_b0_bf, tmp45);
          r800_ffff_tmp40 = simd_and(r800_ffff_tmp14, bytetest_b2_b2);
          struct_Lu.cc = simd_or(r800_ffff_tmp40, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp131);
          bytetest_b4_b4 = simd_and(bytetest_b0_bf, tmp81);
          r800_ffff_tmp41 = simd_and(r800_ffff_tmp14, bytetest_b4_b4);
          struct_Lu.cc = simd_or(r800_ffff_tmp41, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp131);
          bytetest_b6_b6 = simd_and(bytetest_b0_bf, tmp111);
          r800_ffff_tmp42 = simd_and(r800_ffff_tmp14, bytetest_b6_b6);
          struct_Lu.cc = simd_or(r800_ffff_tmp42, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp131);
          bytetest_b8_b8 = simd_and(bytetest_b0_bf, tmp131);
          r800_ffff_tmp43 = simd_and(r800_ffff_tmp14, bytetest_b8_b8);
          struct_Lu.cc = simd_or(r800_ffff_tmp43, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp131);
          bytetest_ba_ba = simd_and(bytetest_b0_bf, tmp145);
          r800_ffff_tmp44 = simd_and(r800_ffff_tmp14, bytetest_ba_ba);
          struct_Lu.cc = simd_or(r800_ffff_tmp44, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp131);
          bytetest_bc_bc = simd_and(bytetest_b0_bf, tmp54);
          r800_ffff_tmp45 = simd_and(r800_ffff_tmp14, bytetest_bc_bc);
          struct_Lu.cc = simd_or(r800_ffff_tmp45, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp131);
          bytetest_be_be = simd_and(bytetest_b0_bf, tmp173);
          r800_ffff_tmp46 = simd_and(r800_ffff_tmp14, bytetest_be_be);
          struct_Lu.cc = simd_or(r800_ffff_tmp46, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp138);
          bytetest_80_80 = simd_andc(tmp35, tmp9);
          r800_ffff_tmp47 = simd_and(r800_ffff_tmp3, bytetest_b9);
          carryQ.cq[40] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp47, carryQ.get_carry_in(40), r800_ffff_tmp48));
          r800_ffff_tmp49 = simd_and(r800_ffff_tmp48, bytetest_80_80);
          struct_Lu.cc = simd_or(r800_ffff_tmp49, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp138);
          bytetest_82_82 = simd_and(tmp35, tmp45);
          r800_ffff_tmp50 = simd_and(r800_ffff_tmp48, bytetest_82_82);
          struct_Lu.cc = simd_or(r800_ffff_tmp50, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp138);
          bytetest_84_84 = simd_and(tmp35, tmp81);
          r800_ffff_tmp51 = simd_and(r800_ffff_tmp48, bytetest_84_84);
          struct_Lu.cc = simd_or(r800_ffff_tmp51, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp138);
          bytetest_86_86 = simd_and(tmp35, tmp111);
          r800_ffff_tmp52 = simd_and(r800_ffff_tmp48, bytetest_86_86);
          struct_Lu.cc = simd_or(r800_ffff_tmp52, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp138);
          bytetest_88_88 = simd_and(tmp35, tmp131);
          r800_ffff_tmp53 = simd_and(r800_ffff_tmp48, bytetest_88_88);
          struct_Lu.cc = simd_or(r800_ffff_tmp53, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp138);
          bytetest_8a_8a = simd_and(tmp35, tmp145);
          r800_ffff_tmp54 = simd_and(r800_ffff_tmp48, bytetest_8a_8a);
          struct_Lu.cc = simd_or(r800_ffff_tmp54, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp138);
          bytetest_8c_8c = simd_and(tmp35, tmp54);
          r800_ffff_tmp55 = simd_and(r800_ffff_tmp48, bytetest_8c_8c);
          struct_Lu.cc = simd_or(r800_ffff_tmp55, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp138);
          bytetest_8e_8e = simd_and(tmp35, tmp173);
          r800_ffff_tmp56 = simd_and(r800_ffff_tmp48, bytetest_8e_8e);
          struct_Lu.cc = simd_or(r800_ffff_tmp56, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp138);
          bytetest_90_90 = simd_andc(tmp16, tmp9);
          r800_ffff_tmp57 = simd_and(r800_ffff_tmp48, bytetest_90_90);
          struct_Lu.cc = simd_or(r800_ffff_tmp57, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp138);
          bytetest_92_92 = simd_and(tmp16, tmp45);
          r800_ffff_tmp58 = simd_and(r800_ffff_tmp48, bytetest_92_92);
          struct_Lu.cc = simd_or(r800_ffff_tmp58, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp138);
          bytetest_94_94 = simd_and(tmp16, tmp81);
          r800_ffff_tmp59 = simd_and(r800_ffff_tmp48, bytetest_94_94);
          struct_Lu.cc = simd_or(r800_ffff_tmp59, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp138);
          bytetest_96_96 = simd_and(tmp16, tmp111);
          r800_ffff_tmp60 = simd_and(r800_ffff_tmp48, bytetest_96_96);
          struct_Lu.cc = simd_or(r800_ffff_tmp60, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp138);
          bytetest_98_98 = simd_and(tmp16, tmp131);
          r800_ffff_tmp61 = simd_and(r800_ffff_tmp48, bytetest_98_98);
          struct_Lu.cc = simd_or(r800_ffff_tmp61, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp138);
          bytetest_9a_9a = simd_and(tmp16, tmp145);
          r800_ffff_tmp62 = simd_and(r800_ffff_tmp48, bytetest_9a_9a);
          struct_Lu.cc = simd_or(r800_ffff_tmp62, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp138);
          bytetest_9c_9c = simd_and(tmp16, tmp54);
          r800_ffff_tmp63 = simd_and(r800_ffff_tmp48, bytetest_9c_9c);
          struct_Lu.cc = simd_or(r800_ffff_tmp63, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp138);
          bytetest_9e_9e = simd_and(tmp16, tmp173);
          r800_ffff_tmp64 = simd_and(r800_ffff_tmp48, bytetest_9e_9e);
          struct_Lu.cc = simd_or(r800_ffff_tmp64, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp138);
          bytetest_a0_a0 = simd_andc(tmp59, tmp9);
          r800_ffff_tmp65 = simd_and(r800_ffff_tmp48, bytetest_a0_a0);
          struct_Lu.cc = simd_or(r800_ffff_tmp65, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp138);
          bytetest_a2_a2 = simd_and(tmp59, tmp45);
          r800_ffff_tmp66 = simd_and(r800_ffff_tmp48, bytetest_a2_a2);
          struct_Lu.cc = simd_or(r800_ffff_tmp66, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp138);
          bytetest_a4_a4 = simd_and(tmp59, tmp81);
          r800_ffff_tmp67 = simd_and(r800_ffff_tmp48, bytetest_a4_a4);
          struct_Lu.cc = simd_or(r800_ffff_tmp67, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp138);
          bytetest_a6_a6 = simd_and(tmp59, tmp111);
          r800_ffff_tmp68 = simd_and(r800_ffff_tmp48, bytetest_a6_a6);
          struct_Lu.cc = simd_or(r800_ffff_tmp68, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp138);
          bytetest_a8_a8 = simd_and(tmp59, tmp131);
          r800_ffff_tmp69 = simd_and(r800_ffff_tmp48, bytetest_a8_a8);
          struct_Lu.cc = simd_or(r800_ffff_tmp69, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp138);
          bytetest_aa_aa = simd_and(tmp59, tmp145);
          r800_ffff_tmp70 = simd_and(r800_ffff_tmp48, bytetest_aa_aa);
          struct_Lu.cc = simd_or(r800_ffff_tmp70, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp138);
          bytetest_ac_ac = simd_and(tmp59, tmp54);
          r800_ffff_tmp71 = simd_and(r800_ffff_tmp48, bytetest_ac_ac);
          struct_Lu.cc = simd_or(r800_ffff_tmp71, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp138);
          bytetest_ae_ae = simd_and(tmp59, tmp173);
          r800_ffff_tmp72 = simd_and(r800_ffff_tmp48, bytetest_ae_ae);
          struct_Lu.cc = simd_or(r800_ffff_tmp72, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp138);
          bytetest_b0_b0 = simd_andc(bytetest_b0_bf, tmp9);
          r800_ffff_tmp73 = simd_and(r800_ffff_tmp48, bytetest_b0_b0);
          struct_Lu.cc = simd_or(r800_ffff_tmp73, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp138);
          bytetest_b2_b2 = simd_and(bytetest_b0_bf, tmp45);
          r800_ffff_tmp74 = simd_and(r800_ffff_tmp48, bytetest_b2_b2);
          struct_Lu.cc = simd_or(r800_ffff_tmp74, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp138);
          bytetest_b4_b4 = simd_and(bytetest_b0_bf, tmp81);
          r800_ffff_tmp75 = simd_and(r800_ffff_tmp48, bytetest_b4_b4);
          struct_Lu.cc = simd_or(r800_ffff_tmp75, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp138);
          bytetest_b6_b6 = simd_and(bytetest_b0_bf, tmp111);
          r800_ffff_tmp76 = simd_and(r800_ffff_tmp48, bytetest_b6_b6);
          struct_Lu.cc = simd_or(r800_ffff_tmp76, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp138);
          bytetest_b8_b8 = simd_and(bytetest_b0_bf, tmp131);
          r800_ffff_tmp77 = simd_and(r800_ffff_tmp48, bytetest_b8_b8);
          struct_Lu.cc = simd_or(r800_ffff_tmp77, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp138);
          bytetest_ba_ba = simd_and(bytetest_b0_bf, tmp145);
          r800_ffff_tmp78 = simd_and(r800_ffff_tmp48, bytetest_ba_ba);
          struct_Lu.cc = simd_or(r800_ffff_tmp78, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp138);
          bytetest_bc_bc = simd_and(bytetest_b0_bf, tmp54);
          r800_ffff_tmp79 = simd_and(r800_ffff_tmp48, bytetest_bc_bc);
          struct_Lu.cc = simd_or(r800_ffff_tmp79, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp138);
          bytetest_be_be = simd_and(bytetest_b0_bf, tmp173);
          r800_ffff_tmp80 = simd_and(r800_ffff_tmp48, bytetest_be_be);
          struct_Lu.cc = simd_or(r800_ffff_tmp80, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp145);
          bytetest_80_80 = simd_andc(tmp35, tmp9);
          r800_ffff_tmp81 = simd_and(r800_ffff_tmp3, bytetest_ba);
          carryQ.cq[41] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp81, carryQ.get_carry_in(41), r800_ffff_tmp82));
          r800_ffff_tmp83 = simd_and(r800_ffff_tmp82, bytetest_80_80);
          struct_Lu.cc = simd_or(r800_ffff_tmp83, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp145);
          bytetest_82_82 = simd_and(tmp35, tmp45);
          r800_ffff_tmp84 = simd_and(r800_ffff_tmp82, bytetest_82_82);
          struct_Lu.cc = simd_or(r800_ffff_tmp84, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp145);
          bytetest_84_84 = simd_and(tmp35, tmp81);
          r800_ffff_tmp85 = simd_and(r800_ffff_tmp82, bytetest_84_84);
          struct_Lu.cc = simd_or(r800_ffff_tmp85, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp145);
          bytetest_86_86 = simd_and(tmp35, tmp111);
          r800_ffff_tmp86 = simd_and(r800_ffff_tmp82, bytetest_86_86);
          struct_Lu.cc = simd_or(r800_ffff_tmp86, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp145);
          bytetest_88_88 = simd_and(tmp35, tmp131);
          r800_ffff_tmp87 = simd_and(r800_ffff_tmp82, bytetest_88_88);
          struct_Lu.cc = simd_or(r800_ffff_tmp87, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp145);
          bytetest_8a_8a = simd_and(tmp35, tmp145);
          r800_ffff_tmp88 = simd_and(r800_ffff_tmp82, bytetest_8a_8a);
          struct_Lu.cc = simd_or(r800_ffff_tmp88, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp145);
          bytetest_8c_8c = simd_and(tmp35, tmp54);
          r800_ffff_tmp89 = simd_and(r800_ffff_tmp82, bytetest_8c_8c);
          struct_Lu.cc = simd_or(r800_ffff_tmp89, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp145);
          bytetest_8e_8e = simd_and(tmp35, tmp173);
          r800_ffff_tmp90 = simd_and(r800_ffff_tmp82, bytetest_8e_8e);
          struct_Lu.cc = simd_or(r800_ffff_tmp90, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp145);
          bytetest_90_90 = simd_andc(tmp16, tmp9);
          r800_ffff_tmp91 = simd_and(r800_ffff_tmp82, bytetest_90_90);
          struct_Lu.cc = simd_or(r800_ffff_tmp91, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp145);
          bytetest_92_92 = simd_and(tmp16, tmp45);
          r800_ffff_tmp92 = simd_and(r800_ffff_tmp82, bytetest_92_92);
          struct_Lu.cc = simd_or(r800_ffff_tmp92, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp145);
          bytetest_94_94 = simd_and(tmp16, tmp81);
          r800_ffff_tmp93 = simd_and(r800_ffff_tmp82, bytetest_94_94);
          struct_Lu.cc = simd_or(r800_ffff_tmp93, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp145);
          bytetest_9e_9e = simd_and(tmp16, tmp173);
          r800_ffff_tmp94 = simd_and(r800_ffff_tmp82, bytetest_9e_9e);
          struct_Lu.cc = simd_or(r800_ffff_tmp94, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp145);
          bytetest_a0_a0 = simd_andc(tmp59, tmp9);
          r800_ffff_tmp95 = simd_and(r800_ffff_tmp82, bytetest_a0_a0);
          struct_Lu.cc = simd_or(r800_ffff_tmp95, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp145);
          bytetest_a2_a2 = simd_and(tmp59, tmp45);
          r800_ffff_tmp96 = simd_and(r800_ffff_tmp82, bytetest_a2_a2);
          struct_Lu.cc = simd_or(r800_ffff_tmp96, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp145);
          bytetest_a4_a4 = simd_and(tmp59, tmp81);
          r800_ffff_tmp97 = simd_and(r800_ffff_tmp82, bytetest_a4_a4);
          struct_Lu.cc = simd_or(r800_ffff_tmp97, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp145);
          bytetest_a6_a6 = simd_and(tmp59, tmp111);
          r800_ffff_tmp98 = simd_and(r800_ffff_tmp82, bytetest_a6_a6);
          struct_Lu.cc = simd_or(r800_ffff_tmp98, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp145);
          bytetest_a8_a8 = simd_and(tmp59, tmp131);
          r800_ffff_tmp99 = simd_and(r800_ffff_tmp82, bytetest_a8_a8);
          struct_Lu.cc = simd_or(r800_ffff_tmp99, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp145);
          bytetest_aa_aa = simd_and(tmp59, tmp145);
          r800_ffff_tmp100 = simd_and(r800_ffff_tmp82, bytetest_aa_aa);
          struct_Lu.cc = simd_or(r800_ffff_tmp100, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp145);
          bytetest_ac_ac = simd_and(tmp59, tmp54);
          r800_ffff_tmp101 = simd_and(r800_ffff_tmp82, bytetest_ac_ac);
          struct_Lu.cc = simd_or(r800_ffff_tmp101, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp145);
          bytetest_ae_ae = simd_and(tmp59, tmp173);
          r800_ffff_tmp102 = simd_and(r800_ffff_tmp82, bytetest_ae_ae);
          struct_Lu.cc = simd_or(r800_ffff_tmp102, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp145);
          bytetest_b0_b0 = simd_andc(bytetest_b0_bf, tmp9);
          r800_ffff_tmp103 = simd_and(r800_ffff_tmp82, bytetest_b0_b0);
          struct_Lu.cc = simd_or(r800_ffff_tmp103, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp145);
          bytetest_b2_b2 = simd_and(bytetest_b0_bf, tmp45);
          r800_ffff_tmp104 = simd_and(r800_ffff_tmp82, bytetest_b2_b2);
          struct_Lu.cc = simd_or(r800_ffff_tmp104, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp145);
          bytetest_b4_b4 = simd_and(bytetest_b0_bf, tmp81);
          r800_ffff_tmp105 = simd_and(r800_ffff_tmp82, bytetest_b4_b4);
          struct_Lu.cc = simd_or(r800_ffff_tmp105, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp145);
          bytetest_b6_b6 = simd_and(bytetest_b0_bf, tmp111);
          r800_ffff_tmp106 = simd_and(r800_ffff_tmp82, bytetest_b6_b6);
          struct_Lu.cc = simd_or(r800_ffff_tmp106, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp145);
          bytetest_b8_b8 = simd_and(bytetest_b0_bf, tmp131);
          r800_ffff_tmp107 = simd_and(r800_ffff_tmp82, bytetest_b8_b8);
          struct_Lu.cc = simd_or(r800_ffff_tmp107, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp145);
          bytetest_ba_ba = simd_and(bytetest_b0_bf, tmp145);
          r800_ffff_tmp108 = simd_and(r800_ffff_tmp82, bytetest_ba_ba);
          struct_Lu.cc = simd_or(r800_ffff_tmp108, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp145);
          bytetest_bc_bc = simd_and(bytetest_b0_bf, tmp54);
          r800_ffff_tmp109 = simd_and(r800_ffff_tmp82, bytetest_bc_bc);
          struct_Lu.cc = simd_or(r800_ffff_tmp109, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp145);
          bytetest_be_be = simd_and(bytetest_b0_bf, tmp173);
          r800_ffff_tmp110 = simd_and(r800_ffff_tmp82, bytetest_be_be);
          struct_Lu.cc = simd_or(r800_ffff_tmp110, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp151);
          bytetest_80_80 = simd_andc(tmp35, tmp9);
          r800_ffff_tmp111 = simd_and(r800_ffff_tmp3, bytetest_bb);
          carryQ.cq[42] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp111, carryQ.get_carry_in(42), r800_ffff_tmp112));
          r800_ffff_tmp113 = simd_and(r800_ffff_tmp112, bytetest_80_80);
          struct_Lu.cc = simd_or(r800_ffff_tmp113, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp151);
          bytetest_82_82 = simd_and(tmp35, tmp45);
          r800_ffff_tmp114 = simd_and(r800_ffff_tmp112, bytetest_82_82);
          struct_Lu.cc = simd_or(r800_ffff_tmp114, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp151);
          bytetest_84_84 = simd_and(tmp35, tmp81);
          r800_ffff_tmp115 = simd_and(r800_ffff_tmp112, bytetest_84_84);
          struct_Lu.cc = simd_or(r800_ffff_tmp115, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp151);
          bytetest_86_86 = simd_and(tmp35, tmp111);
          r800_ffff_tmp116 = simd_and(r800_ffff_tmp112, bytetest_86_86);
          struct_Lu.cc = simd_or(r800_ffff_tmp116, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp151);
          bytetest_88_88 = simd_and(tmp35, tmp131);
          r800_ffff_tmp117 = simd_and(r800_ffff_tmp112, bytetest_88_88);
          struct_Lu.cc = simd_or(r800_ffff_tmp117, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp151);
          bytetest_8a_8a = simd_and(tmp35, tmp145);
          r800_ffff_tmp118 = simd_and(r800_ffff_tmp112, bytetest_8a_8a);
          struct_Lu.cc = simd_or(r800_ffff_tmp118, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp151);
          bytetest_8c_8c = simd_and(tmp35, tmp54);
          r800_ffff_tmp119 = simd_and(r800_ffff_tmp112, bytetest_8c_8c);
          struct_Lu.cc = simd_or(r800_ffff_tmp119, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp151);
          bytetest_8e_8e = simd_and(tmp35, tmp173);
          r800_ffff_tmp120 = simd_and(r800_ffff_tmp112, bytetest_8e_8e);
          struct_Lu.cc = simd_or(r800_ffff_tmp120, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp151);
          bytetest_90_90 = simd_andc(tmp16, tmp9);
          r800_ffff_tmp121 = simd_and(r800_ffff_tmp112, bytetest_90_90);
          struct_Lu.cc = simd_or(r800_ffff_tmp121, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp151);
          bytetest_92_92 = simd_and(tmp16, tmp45);
          r800_ffff_tmp122 = simd_and(r800_ffff_tmp112, bytetest_92_92);
          struct_Lu.cc = simd_or(r800_ffff_tmp122, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp151);
          bytetest_94_94 = simd_and(tmp16, tmp81);
          r800_ffff_tmp123 = simd_and(r800_ffff_tmp112, bytetest_94_94);
          struct_Lu.cc = simd_or(r800_ffff_tmp123, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp151);
          bytetest_96_96 = simd_and(tmp16, tmp111);
          r800_ffff_tmp124 = simd_and(r800_ffff_tmp112, bytetest_96_96);
          struct_Lu.cc = simd_or(r800_ffff_tmp124, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp151);
          bytetest_98_98 = simd_and(tmp16, tmp131);
          r800_ffff_tmp125 = simd_and(r800_ffff_tmp112, bytetest_98_98);
          struct_Lu.cc = simd_or(r800_ffff_tmp125, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp151);
          bytetest_9a_9a = simd_and(tmp16, tmp145);
          r800_ffff_tmp126 = simd_and(r800_ffff_tmp112, bytetest_9a_9a);
          struct_Lu.cc = simd_or(r800_ffff_tmp126, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp151);
          bytetest_9c_9c = simd_and(tmp16, tmp54);
          r800_ffff_tmp127 = simd_and(r800_ffff_tmp112, bytetest_9c_9c);
          struct_Lu.cc = simd_or(r800_ffff_tmp127, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp151);
          bytetest_9e_9e = simd_and(tmp16, tmp173);
          r800_ffff_tmp128 = simd_and(r800_ffff_tmp112, bytetest_9e_9e);
          struct_Lu.cc = simd_or(r800_ffff_tmp128, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp151);
          bytetest_a0_a0 = simd_andc(tmp59, tmp9);
          r800_ffff_tmp129 = simd_and(r800_ffff_tmp112, bytetest_a0_a0);
          struct_Lu.cc = simd_or(r800_ffff_tmp129, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp151);
          bytetest_a2_a2 = simd_and(tmp59, tmp45);
          r800_ffff_tmp130 = simd_and(r800_ffff_tmp112, bytetest_a2_a2);
          struct_Lu.cc = simd_or(r800_ffff_tmp130, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp151);
          bytetest_a4_a4 = simd_and(tmp59, tmp81);
          r800_ffff_tmp131 = simd_and(r800_ffff_tmp112, bytetest_a4_a4);
          struct_Lu.cc = simd_or(r800_ffff_tmp131, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp151);
          bytetest_a6_a6 = simd_and(tmp59, tmp111);
          r800_ffff_tmp132 = simd_and(r800_ffff_tmp112, bytetest_a6_a6);
          struct_Lu.cc = simd_or(r800_ffff_tmp132, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp151);
          bytetest_a8_a8 = simd_and(tmp59, tmp131);
          r800_ffff_tmp133 = simd_and(r800_ffff_tmp112, bytetest_a8_a8);
          struct_Lu.cc = simd_or(r800_ffff_tmp133, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp151);
          bytetest_aa_aa = simd_and(tmp59, tmp145);
          r800_ffff_tmp134 = simd_and(r800_ffff_tmp112, bytetest_aa_aa);
          struct_Lu.cc = simd_or(r800_ffff_tmp134, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp151);
          bytetest_ac_ac = simd_and(tmp59, tmp54);
          r800_ffff_tmp135 = simd_and(r800_ffff_tmp112, bytetest_ac_ac);
          struct_Lu.cc = simd_or(r800_ffff_tmp135, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp151);
          bytetest_ae_ae = simd_and(tmp59, tmp173);
          r800_ffff_tmp136 = simd_and(r800_ffff_tmp112, bytetest_ae_ae);
          struct_Lu.cc = simd_or(r800_ffff_tmp136, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp151);
          bytetest_b0_b0 = simd_andc(bytetest_b0_bf, tmp9);
          r800_ffff_tmp137 = simd_and(r800_ffff_tmp112, bytetest_b0_b0);
          struct_Lu.cc = simd_or(r800_ffff_tmp137, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp151);
          bytetest_b2_b2 = simd_and(bytetest_b0_bf, tmp45);
          r800_ffff_tmp138 = simd_and(r800_ffff_tmp112, bytetest_b2_b2);
          struct_Lu.cc = simd_or(r800_ffff_tmp138, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp151);
          bytetest_b4_b4 = simd_and(bytetest_b0_bf, tmp81);
          r800_ffff_tmp139 = simd_and(r800_ffff_tmp112, bytetest_b4_b4);
          struct_Lu.cc = simd_or(r800_ffff_tmp139, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp151);
          bytetest_b6_b6 = simd_and(bytetest_b0_bf, tmp111);
          r800_ffff_tmp140 = simd_and(r800_ffff_tmp112, bytetest_b6_b6);
          struct_Lu.cc = simd_or(r800_ffff_tmp140, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp151);
          bytetest_b8_b8 = simd_and(bytetest_b0_bf, tmp131);
          r800_ffff_tmp141 = simd_and(r800_ffff_tmp112, bytetest_b8_b8);
          struct_Lu.cc = simd_or(r800_ffff_tmp141, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp151);
          bytetest_ba_ba = simd_and(bytetest_b0_bf, tmp145);
          r800_ffff_tmp142 = simd_and(r800_ffff_tmp112, bytetest_ba_ba);
          struct_Lu.cc = simd_or(r800_ffff_tmp142, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp151);
          bytetest_bc_bc = simd_and(bytetest_b0_bf, tmp54);
          r800_ffff_tmp143 = simd_and(r800_ffff_tmp112, bytetest_bc_bc);
          struct_Lu.cc = simd_or(r800_ffff_tmp143, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp151);
          bytetest_be_be = simd_and(bytetest_b0_bf, tmp173);
          r800_ffff_tmp144 = simd_and(r800_ffff_tmp112, bytetest_be_be);
          struct_Lu.cc = simd_or(r800_ffff_tmp144, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bc = simd_and(bytetest_b0_bf, tmp54);
          bytetest_88_8f = simd_and(tmp35, basis_bits.bit_4);
          r800_ffff_tmp145 = simd_and(r800_ffff_tmp3, bytetest_bc);
          carryQ.cq[43] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp145, carryQ.get_carry_in(43), r800_ffff_tmp146));
          r800_ffff_tmp147 = simd_and(r800_ffff_tmp146, bytetest_88_8f);
          struct_Lu.cc = simd_or(r800_ffff_tmp147, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bc = simd_and(bytetest_b0_bf, tmp54);
          r800_ffff_tmp148 = simd_and(tmp16, basis_bits.bit_4);
          bytetest_98_9d = simd_andc(r800_ffff_tmp148, tmp36);
          r800_ffff_tmp149 = simd_and(r800_ffff_tmp146, bytetest_98_9d);
          struct_Lu.cc = simd_or(r800_ffff_tmp149, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bc = simd_and(bytetest_b0_bf, tmp54);
          bytetest_a8_af = simd_and(tmp59, basis_bits.bit_4);
          r800_ffff_tmp150 = simd_and(r800_ffff_tmp146, bytetest_a8_af);
          struct_Lu.cc = simd_or(r800_ffff_tmp150, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bc = simd_and(bytetest_b0_bf, tmp54);
          bytetest_b8_bf = simd_and(bytetest_b0_bf, basis_bits.bit_4);
          r800_ffff_tmp151 = simd_and(r800_ffff_tmp146, bytetest_b8_bf);
          struct_Lu.cc = simd_or(r800_ffff_tmp151, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bd = simd_and(bytetest_b0_bf, tmp19);
          bytetest_88_8d = simd_andc(bytetest_88_8f, tmp36);
          r800_ffff_tmp152 = simd_and(r800_ffff_tmp3, bytetest_bd);
          carryQ.cq[44] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp152, carryQ.get_carry_in(44), r800_ffff_tmp153));
          r800_ffff_tmp154 = simd_and(r800_ffff_tmp153, bytetest_88_8d);
          struct_Lu.cc = simd_or(r800_ffff_tmp154, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bd = simd_and(bytetest_b0_bf, tmp19);
          bytetest_99_99 = simd_and(tmp16, tmp138);
          r800_ffff_tmp155 = simd_and(r800_ffff_tmp153, bytetest_99_99);
          struct_Lu.cc = simd_or(r800_ffff_tmp155, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bd = simd_and(bytetest_b0_bf, tmp19);
          bytetest_9b_9b = simd_and(tmp16, tmp151);
          r800_ffff_tmp156 = simd_and(r800_ffff_tmp153, bytetest_9b_9b);
          struct_Lu.cc = simd_or(r800_ffff_tmp156, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bd = simd_and(bytetest_b0_bf, tmp19);
          bytetest_9d_9d = simd_and(tmp16, tmp19);
          r800_ffff_tmp157 = simd_and(r800_ffff_tmp153, bytetest_9d_9d);
          struct_Lu.cc = simd_or(r800_ffff_tmp157, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bd = simd_and(bytetest_b0_bf, tmp19);
          bytetest_9f_9f = simd_and(tmp16, tmp166);
          r800_ffff_tmp158 = simd_and(r800_ffff_tmp153, bytetest_9f_9f);
          struct_Lu.cc = simd_or(r800_ffff_tmp158, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bd = simd_and(bytetest_b0_bf, tmp19);
          bytetest_a8_af = simd_and(tmp59, basis_bits.bit_4);
          r800_ffff_tmp159 = simd_and(r800_ffff_tmp153, bytetest_a8_af);
          struct_Lu.cc = simd_or(r800_ffff_tmp159, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_be = simd_and(bytetest_b0_bf, tmp173);
          bytetest_b8_bb = simd_and(bytetest_b0_bf, tmp99);
          r800_ffff_tmp160 = simd_and(r800_ffff_tmp3, bytetest_be);
          carryQ.cq[45] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp160, carryQ.get_carry_in(45), r800_ffff_tmp161));
          r800_ffff_tmp162 = simd_and(r800_ffff_tmp161, bytetest_b8_bb);
          struct_Lu.cc = simd_or(r800_ffff_tmp162, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp166);
          bytetest_88_8b = simd_and(tmp35, tmp99);
          r800_ffff_tmp163 = simd_and(r800_ffff_tmp3, bytetest_bf);
          carryQ.cq[46] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp163, carryQ.get_carry_in(46), r800_ffff_tmp164));
          r800_ffff_tmp165 = simd_and(r800_ffff_tmp164, bytetest_88_8b);
          struct_Lu.cc = simd_or(r800_ffff_tmp165, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp166);
          bytetest_98_9b = simd_and(tmp16, tmp99);
          r800_ffff_tmp166 = simd_and(r800_ffff_tmp164, bytetest_98_9b);
          struct_Lu.cc = simd_or(r800_ffff_tmp166, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp166);
          bytetest_a8_ac = simd_andc(bytetest_a8_af, tmp90);
          r800_ffff_tmp167 = simd_and(r800_ffff_tmp164, bytetest_a8_ac);
          struct_Lu.cc = simd_or(r800_ffff_tmp167, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp166);
          bytetest_b8_bb = simd_and(bytetest_b0_bf, tmp99);
          r800_ffff_tmp168 = simd_and(r800_ffff_tmp164, bytetest_b8_bb);
          struct_Lu.cc = simd_or(r800_ffff_tmp168, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_84 = simd_and(tmp35, tmp81);
          bytetest_82_82 = simd_and(tmp35, tmp45);
          r800_ffff_tmp169 = simd_and(tmp25, bytetest_e2);
          carryQ.cq[47] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp169, carryQ.get_carry_in(47), r800_ffff_tmp170));
          r800_ffff_tmp171 = simd_and(r800_ffff_tmp170, bytetest_84);
          carryQ.cq[48] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp171, carryQ.get_carry_in(48), r800_ffff_tmp172));
          r800_ffff_tmp173 = simd_and(r800_ffff_tmp172, bytetest_82_82);
          struct_Lu.cc = simd_or(r800_ffff_tmp173, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_84 = simd_and(tmp35, tmp81);
          bytetest_87_87 = simd_and(tmp35, tmp123);
          r800_ffff_tmp174 = simd_and(r800_ffff_tmp172, bytetest_87_87);
          struct_Lu.cc = simd_or(r800_ffff_tmp174, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_84 = simd_and(tmp35, tmp81);
          r800_ffff_tmp175 = simd_not(basis_bits.bit_6);
          r800_ffff_tmp176 = simd_or(simd_and(basis_bits.bit_5, r800_ffff_tmp175), simd_andc(tmp3, basis_bits.bit_5));
          bytetest_8b_8d = simd_and(bytetest_88_8f, r800_ffff_tmp176);
          r800_ffff_tmp177 = simd_and(r800_ffff_tmp172, bytetest_8b_8d);
          struct_Lu.cc = simd_or(r800_ffff_tmp177, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_84 = simd_and(tmp35, tmp81);
          r800_ffff_tmp178 = simd_andc(tmp16, tmp7);
          bytetest_90_92 = simd_andc(r800_ffff_tmp178, tmp3);
          r800_ffff_tmp179 = simd_and(r800_ffff_tmp172, bytetest_90_92);
          struct_Lu.cc = simd_or(r800_ffff_tmp179, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_84 = simd_and(tmp35, tmp81);
          bytetest_95_95 = simd_and(tmp16, tmp106);
          r800_ffff_tmp180 = simd_and(r800_ffff_tmp172, bytetest_95_95);
          struct_Lu.cc = simd_or(r800_ffff_tmp180, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_84 = simd_and(tmp35, tmp81);
          r800_ffff_tmp181 = simd_or(simd_and(basis_bits.bit_5, r800_ffff_tmp175), simd_andc(tmp8, basis_bits.bit_5));
          bytetest_99_9d = simd_and(r800_ffff_tmp148, r800_ffff_tmp181);
          r800_ffff_tmp182 = simd_and(r800_ffff_tmp172, bytetest_99_9d);
          struct_Lu.cc = simd_or(r800_ffff_tmp182, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_84 = simd_and(tmp35, tmp81);
          bytetest_a4_a4 = simd_and(tmp59, tmp81);
          r800_ffff_tmp183 = simd_and(r800_ffff_tmp172, bytetest_a4_a4);
          struct_Lu.cc = simd_or(r800_ffff_tmp183, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_84 = simd_and(tmp35, tmp81);
          bytetest_a6_a6 = simd_and(tmp59, tmp111);
          r800_ffff_tmp184 = simd_and(r800_ffff_tmp172, bytetest_a6_a6);
          struct_Lu.cc = simd_or(r800_ffff_tmp184, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_84 = simd_and(tmp35, tmp81);
          bytetest_a8_a8 = simd_and(tmp59, tmp131);
          r800_ffff_tmp185 = simd_and(r800_ffff_tmp172, bytetest_a8_a8);
          struct_Lu.cc = simd_or(r800_ffff_tmp185, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_84 = simd_and(tmp35, tmp81);
          r800_ffff_tmp186 = simd_or(simd_and(basis_bits.bit_5, r800_ffff_tmp175), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
          bytetest_aa_ad = simd_and(bytetest_a8_af, r800_ffff_tmp186);
          r800_ffff_tmp187 = simd_and(r800_ffff_tmp172, bytetest_aa_ad);
          struct_Lu.cc = simd_or(r800_ffff_tmp187, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_84 = simd_and(tmp35, tmp81);
          bytetest_b0_b3 = simd_andc(bytetest_b0_bf, tmp7);
          r800_ffff_tmp188 = simd_and(r800_ffff_tmp172, bytetest_b0_b3);
          struct_Lu.cc = simd_or(r800_ffff_tmp188, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_84 = simd_and(tmp35, tmp81);
          bytetest_be_bf = simd_and(bytetest_b0_bf, tmp56);
          r800_ffff_tmp189 = simd_and(r800_ffff_tmp172, bytetest_be_bf);
          struct_Lu.cc = simd_or(r800_ffff_tmp189, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_85 = simd_and(tmp35, tmp106);
          bytetest_85_85 = simd_and(tmp35, tmp106);
          r800_ffff_tmp190 = simd_and(r800_ffff_tmp170, bytetest_85);
          carryQ.cq[49] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp190, carryQ.get_carry_in(49), r800_ffff_tmp191));
          r800_ffff_tmp192 = simd_and(r800_ffff_tmp191, bytetest_85_85);
          struct_Lu.cc = simd_or(r800_ffff_tmp192, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_86 = simd_and(tmp35, tmp111);
          bytetest_83_83 = simd_and(tmp35, tmp74);
          r800_ffff_tmp193 = simd_and(r800_ffff_tmp170, bytetest_86);
          carryQ.cq[50] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp193, carryQ.get_carry_in(50), r800_ffff_tmp194));
          r800_ffff_tmp195 = simd_and(r800_ffff_tmp194, bytetest_83_83);
          struct_Lu.cc = simd_or(r800_ffff_tmp195, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b0 = simd_andc(bytetest_b0_bf, tmp9);
          r800_ffff_tmp196 = simd_and(basis_bits.bit_2, tmp167);
          bytetest_80_ae = simd_andc(tmp14, r800_ffff_tmp196);
          r800_ffff_tmp197 = simd_and(r800_ffff_tmp170, bytetest_b0);
          carryQ.cq[51] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp197, carryQ.get_carry_in(51), r800_ffff_tmp198));
          r800_ffff_tmp199 = simd_and(r800_ffff_tmp198, bytetest_80_ae);
          struct_Lu.cc = simd_or(r800_ffff_tmp199, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b1 = simd_and(bytetest_b0_bf, tmp33);
          bytetest_a0_a0 = simd_andc(tmp59, tmp9);
          r800_ffff_tmp200 = simd_and(r800_ffff_tmp170, bytetest_b1);
          carryQ.cq[52] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp200, carryQ.get_carry_in(52), r800_ffff_tmp201));
          r800_ffff_tmp202 = simd_and(r800_ffff_tmp201, bytetest_a0_a0);
          struct_Lu.cc = simd_or(r800_ffff_tmp202, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b1 = simd_and(bytetest_b0_bf, tmp33);
          r800_ffff_tmp203 = simd_andc(tmp59, basis_bits.bit_4);
          r800_ffff_tmp204 = simd_or(simd_and(basis_bits.bit_5, tmp67), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
          bytetest_a2_a4 = simd_and(r800_ffff_tmp203, r800_ffff_tmp204);
          r800_ffff_tmp205 = simd_and(r800_ffff_tmp201, bytetest_a2_a4);
          struct_Lu.cc = simd_or(r800_ffff_tmp205, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b1 = simd_and(bytetest_b0_bf, tmp33);
          bytetest_a7_a7 = simd_and(tmp59, tmp123);
          r800_ffff_tmp206 = simd_and(r800_ffff_tmp201, bytetest_a7_a7);
          struct_Lu.cc = simd_or(r800_ffff_tmp206, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b1 = simd_and(bytetest_b0_bf, tmp33);
          bytetest_a9_a9 = simd_and(tmp59, tmp138);
          r800_ffff_tmp207 = simd_and(r800_ffff_tmp201, bytetest_a9_a9);
          struct_Lu.cc = simd_or(r800_ffff_tmp207, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b1 = simd_and(bytetest_b0_bf, tmp33);
          bytetest_ab_ab = simd_and(tmp59, tmp151);
          r800_ffff_tmp208 = simd_and(r800_ffff_tmp201, bytetest_ab_ab);
          struct_Lu.cc = simd_or(r800_ffff_tmp208, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b1 = simd_and(bytetest_b0_bf, tmp33);
          r800_ffff_tmp209 = simd_or(simd_and(basis_bits.bit_3, tmp113), simd_andc(tmp93, basis_bits.bit_3));
          bytetest_ad_b0 = simd_and(bytetest_a0_bf, r800_ffff_tmp209);
          r800_ffff_tmp210 = simd_and(r800_ffff_tmp201, bytetest_ad_b0);
          struct_Lu.cc = simd_or(r800_ffff_tmp210, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b1 = simd_and(bytetest_b0_bf, tmp33);
          bytetest_b2_b2 = simd_and(bytetest_b0_bf, tmp45);
          r800_ffff_tmp211 = simd_and(r800_ffff_tmp201, bytetest_b2_b2);
          struct_Lu.cc = simd_or(r800_ffff_tmp211, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b1 = simd_and(bytetest_b0_bf, tmp33);
          bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp106);
          r800_ffff_tmp212 = simd_and(r800_ffff_tmp201, bytetest_b5_b5);
          struct_Lu.cc = simd_or(r800_ffff_tmp212, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_80_80 = simd_andc(tmp35, tmp9);
          r800_ffff_tmp213 = simd_and(r800_ffff_tmp170, bytetest_b2);
          carryQ.cq[53] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp213, carryQ.get_carry_in(53), r800_ffff_tmp214));
          r800_ffff_tmp215 = simd_and(r800_ffff_tmp214, bytetest_80_80);
          bytetest_b1 = simd_and(bytetest_b0_bf, tmp33);
          bytetest_be_bf = simd_and(bytetest_b0_bf, tmp56);
          r800_ffff_tmp216 = simd_and(r800_ffff_tmp201, bytetest_be_bf);
          r800_ffff_tmp217 = simd_or(r800_ffff_tmp216, r800_ffff_tmp215);
          struct_Lu.cc = simd_or(r800_ffff_tmp217, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_82_82 = simd_and(tmp35, tmp45);
          r800_ffff_tmp218 = simd_and(r800_ffff_tmp214, bytetest_82_82);
          struct_Lu.cc = simd_or(r800_ffff_tmp218, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_84_84 = simd_and(tmp35, tmp81);
          r800_ffff_tmp219 = simd_and(r800_ffff_tmp214, bytetest_84_84);
          struct_Lu.cc = simd_or(r800_ffff_tmp219, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_86_86 = simd_and(tmp35, tmp111);
          r800_ffff_tmp220 = simd_and(r800_ffff_tmp214, bytetest_86_86);
          struct_Lu.cc = simd_or(r800_ffff_tmp220, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_88_88 = simd_and(tmp35, tmp131);
          r800_ffff_tmp221 = simd_and(r800_ffff_tmp214, bytetest_88_88);
          struct_Lu.cc = simd_or(r800_ffff_tmp221, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_8a_8a = simd_and(tmp35, tmp145);
          r800_ffff_tmp222 = simd_and(r800_ffff_tmp214, bytetest_8a_8a);
          struct_Lu.cc = simd_or(r800_ffff_tmp222, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_8c_8c = simd_and(tmp35, tmp54);
          r800_ffff_tmp223 = simd_and(r800_ffff_tmp214, bytetest_8c_8c);
          struct_Lu.cc = simd_or(r800_ffff_tmp223, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_8e_8e = simd_and(tmp35, tmp173);
          r800_ffff_tmp224 = simd_and(r800_ffff_tmp214, bytetest_8e_8e);
          struct_Lu.cc = simd_or(r800_ffff_tmp224, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_90_90 = simd_andc(tmp16, tmp9);
          r800_ffff_tmp225 = simd_and(r800_ffff_tmp214, bytetest_90_90);
          struct_Lu.cc = simd_or(r800_ffff_tmp225, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_92_92 = simd_and(tmp16, tmp45);
          r800_ffff_tmp226 = simd_and(r800_ffff_tmp214, bytetest_92_92);
          struct_Lu.cc = simd_or(r800_ffff_tmp226, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_94_94 = simd_and(tmp16, tmp81);
          r800_ffff_tmp227 = simd_and(r800_ffff_tmp214, bytetest_94_94);
          struct_Lu.cc = simd_or(r800_ffff_tmp227, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_96_96 = simd_and(tmp16, tmp111);
          r800_ffff_tmp228 = simd_and(r800_ffff_tmp214, bytetest_96_96);
          struct_Lu.cc = simd_or(r800_ffff_tmp228, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_98_98 = simd_and(tmp16, tmp131);
          r800_ffff_tmp229 = simd_and(r800_ffff_tmp214, bytetest_98_98);
          struct_Lu.cc = simd_or(r800_ffff_tmp229, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_9a_9a = simd_and(tmp16, tmp145);
          r800_ffff_tmp230 = simd_and(r800_ffff_tmp214, bytetest_9a_9a);
          struct_Lu.cc = simd_or(r800_ffff_tmp230, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_9c_9c = simd_and(tmp16, tmp54);
          r800_ffff_tmp231 = simd_and(r800_ffff_tmp214, bytetest_9c_9c);
          struct_Lu.cc = simd_or(r800_ffff_tmp231, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_9e_9e = simd_and(tmp16, tmp173);
          r800_ffff_tmp232 = simd_and(r800_ffff_tmp214, bytetest_9e_9e);
          struct_Lu.cc = simd_or(r800_ffff_tmp232, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_a0_a0 = simd_andc(tmp59, tmp9);
          r800_ffff_tmp233 = simd_and(r800_ffff_tmp214, bytetest_a0_a0);
          struct_Lu.cc = simd_or(r800_ffff_tmp233, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_a2_a2 = simd_and(tmp59, tmp45);
          r800_ffff_tmp234 = simd_and(r800_ffff_tmp214, bytetest_a2_a2);
          struct_Lu.cc = simd_or(r800_ffff_tmp234, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_a4_a4 = simd_and(tmp59, tmp81);
          r800_ffff_tmp235 = simd_and(r800_ffff_tmp214, bytetest_a4_a4);
          struct_Lu.cc = simd_or(r800_ffff_tmp235, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_a6_a6 = simd_and(tmp59, tmp111);
          r800_ffff_tmp236 = simd_and(r800_ffff_tmp214, bytetest_a6_a6);
          struct_Lu.cc = simd_or(r800_ffff_tmp236, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_a8_a8 = simd_and(tmp59, tmp131);
          r800_ffff_tmp237 = simd_and(r800_ffff_tmp214, bytetest_a8_a8);
          struct_Lu.cc = simd_or(r800_ffff_tmp237, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_aa_aa = simd_and(tmp59, tmp145);
          r800_ffff_tmp238 = simd_and(r800_ffff_tmp214, bytetest_aa_aa);
          struct_Lu.cc = simd_or(r800_ffff_tmp238, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_ac_ac = simd_and(tmp59, tmp54);
          r800_ffff_tmp239 = simd_and(r800_ffff_tmp214, bytetest_ac_ac);
          struct_Lu.cc = simd_or(r800_ffff_tmp239, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_ae_ae = simd_and(tmp59, tmp173);
          r800_ffff_tmp240 = simd_and(r800_ffff_tmp214, bytetest_ae_ae);
          struct_Lu.cc = simd_or(r800_ffff_tmp240, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_b0_b0 = simd_andc(bytetest_b0_bf, tmp9);
          r800_ffff_tmp241 = simd_and(r800_ffff_tmp214, bytetest_b0_b0);
          struct_Lu.cc = simd_or(r800_ffff_tmp241, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_b2_b2 = simd_and(bytetest_b0_bf, tmp45);
          r800_ffff_tmp242 = simd_and(r800_ffff_tmp214, bytetest_b2_b2);
          struct_Lu.cc = simd_or(r800_ffff_tmp242, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_b4_b4 = simd_and(bytetest_b0_bf, tmp81);
          r800_ffff_tmp243 = simd_and(r800_ffff_tmp214, bytetest_b4_b4);
          struct_Lu.cc = simd_or(r800_ffff_tmp243, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_b6_b6 = simd_and(bytetest_b0_bf, tmp111);
          r800_ffff_tmp244 = simd_and(r800_ffff_tmp214, bytetest_b6_b6);
          struct_Lu.cc = simd_or(r800_ffff_tmp244, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_b8_b8 = simd_and(bytetest_b0_bf, tmp131);
          r800_ffff_tmp245 = simd_and(r800_ffff_tmp214, bytetest_b8_b8);
          struct_Lu.cc = simd_or(r800_ffff_tmp245, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_ba_ba = simd_and(bytetest_b0_bf, tmp145);
          r800_ffff_tmp246 = simd_and(r800_ffff_tmp214, bytetest_ba_ba);
          struct_Lu.cc = simd_or(r800_ffff_tmp246, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_bc_bc = simd_and(bytetest_b0_bf, tmp54);
          r800_ffff_tmp247 = simd_and(r800_ffff_tmp214, bytetest_bc_bc);
          struct_Lu.cc = simd_or(r800_ffff_tmp247, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_be_be = simd_and(bytetest_b0_bf, tmp173);
          r800_ffff_tmp248 = simd_and(r800_ffff_tmp214, bytetest_be_be);
          struct_Lu.cc = simd_or(r800_ffff_tmp248, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp74);
          bytetest_80_80 = simd_andc(tmp35, tmp9);
          r800_ffff_tmp249 = simd_and(r800_ffff_tmp170, bytetest_b3);
          carryQ.cq[54] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp249, carryQ.get_carry_in(54), r800_ffff_tmp250));
          r800_ffff_tmp251 = simd_and(r800_ffff_tmp250, bytetest_80_80);
          struct_Lu.cc = simd_or(r800_ffff_tmp251, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp74);
          bytetest_82_82 = simd_and(tmp35, tmp45);
          r800_ffff_tmp252 = simd_and(r800_ffff_tmp250, bytetest_82_82);
          struct_Lu.cc = simd_or(r800_ffff_tmp252, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp74);
          bytetest_84_84 = simd_and(tmp35, tmp81);
          r800_ffff_tmp253 = simd_and(r800_ffff_tmp250, bytetest_84_84);
          struct_Lu.cc = simd_or(r800_ffff_tmp253, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp74);
          bytetest_86_86 = simd_and(tmp35, tmp111);
          r800_ffff_tmp254 = simd_and(r800_ffff_tmp250, bytetest_86_86);
          struct_Lu.cc = simd_or(r800_ffff_tmp254, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp74);
          bytetest_88_88 = simd_and(tmp35, tmp131);
          r800_ffff_tmp255 = simd_and(r800_ffff_tmp250, bytetest_88_88);
          struct_Lu.cc = simd_or(r800_ffff_tmp255, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp74);
          bytetest_8a_8a = simd_and(tmp35, tmp145);
          r800_ffff_tmp256 = simd_and(r800_ffff_tmp250, bytetest_8a_8a);
          struct_Lu.cc = simd_or(r800_ffff_tmp256, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp74);
          bytetest_8c_8c = simd_and(tmp35, tmp54);
          r800_ffff_tmp257 = simd_and(r800_ffff_tmp250, bytetest_8c_8c);
          struct_Lu.cc = simd_or(r800_ffff_tmp257, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp74);
          bytetest_8e_8e = simd_and(tmp35, tmp173);
          r800_ffff_tmp258 = simd_and(r800_ffff_tmp250, bytetest_8e_8e);
          struct_Lu.cc = simd_or(r800_ffff_tmp258, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp74);
          bytetest_90_90 = simd_andc(tmp16, tmp9);
          r800_ffff_tmp259 = simd_and(r800_ffff_tmp250, bytetest_90_90);
          struct_Lu.cc = simd_or(r800_ffff_tmp259, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp74);
          bytetest_92_92 = simd_and(tmp16, tmp45);
          r800_ffff_tmp260 = simd_and(r800_ffff_tmp250, bytetest_92_92);
          struct_Lu.cc = simd_or(r800_ffff_tmp260, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp74);
          bytetest_94_94 = simd_and(tmp16, tmp81);
          r800_ffff_tmp261 = simd_and(r800_ffff_tmp250, bytetest_94_94);
          struct_Lu.cc = simd_or(r800_ffff_tmp261, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp74);
          bytetest_96_96 = simd_and(tmp16, tmp111);
          r800_ffff_tmp262 = simd_and(r800_ffff_tmp250, bytetest_96_96);
          struct_Lu.cc = simd_or(r800_ffff_tmp262, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp74);
          bytetest_98_98 = simd_and(tmp16, tmp131);
          r800_ffff_tmp263 = simd_and(r800_ffff_tmp250, bytetest_98_98);
          struct_Lu.cc = simd_or(r800_ffff_tmp263, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp74);
          bytetest_9a_9a = simd_and(tmp16, tmp145);
          r800_ffff_tmp264 = simd_and(r800_ffff_tmp250, bytetest_9a_9a);
          struct_Lu.cc = simd_or(r800_ffff_tmp264, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp74);
          bytetest_9c_9c = simd_and(tmp16, tmp54);
          r800_ffff_tmp265 = simd_and(r800_ffff_tmp250, bytetest_9c_9c);
          struct_Lu.cc = simd_or(r800_ffff_tmp265, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp74);
          bytetest_9e_9e = simd_and(tmp16, tmp173);
          r800_ffff_tmp266 = simd_and(r800_ffff_tmp250, bytetest_9e_9e);
          struct_Lu.cc = simd_or(r800_ffff_tmp266, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp74);
          bytetest_a0_a0 = simd_andc(tmp59, tmp9);
          r800_ffff_tmp267 = simd_and(r800_ffff_tmp250, bytetest_a0_a0);
          struct_Lu.cc = simd_or(r800_ffff_tmp267, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp74);
          bytetest_a2_a2 = simd_and(tmp59, tmp45);
          r800_ffff_tmp268 = simd_and(r800_ffff_tmp250, bytetest_a2_a2);
          struct_Lu.cc = simd_or(r800_ffff_tmp268, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp74);
          bytetest_ab_ab = simd_and(tmp59, tmp151);
          r800_ffff_tmp269 = simd_and(r800_ffff_tmp250, bytetest_ab_ab);
          struct_Lu.cc = simd_or(r800_ffff_tmp269, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp74);
          bytetest_ad_ad = simd_and(tmp59, tmp19);
          r800_ffff_tmp270 = simd_and(r800_ffff_tmp250, bytetest_ad_ad);
          struct_Lu.cc = simd_or(r800_ffff_tmp270, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp74);
          bytetest_b2_b2 = simd_and(bytetest_b0_bf, tmp45);
          r800_ffff_tmp271 = simd_and(r800_ffff_tmp250, bytetest_b2_b2);
          struct_Lu.cc = simd_or(r800_ffff_tmp271, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_99 = simd_and(tmp16, tmp138);
          bytetest_80_80 = simd_andc(tmp35, tmp9);
          r800_ffff_tmp272 = simd_and(tmp25, bytetest_ea);
          carryQ.cq[55] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp272, carryQ.get_carry_in(55), r800_ffff_tmp273));
          r800_ffff_tmp274 = simd_and(r800_ffff_tmp273, bytetest_99);
          carryQ.cq[56] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp274, carryQ.get_carry_in(56), r800_ffff_tmp275));
          r800_ffff_tmp276 = simd_and(r800_ffff_tmp275, bytetest_80_80);
          struct_Lu.cc = simd_or(r800_ffff_tmp276, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_99 = simd_and(tmp16, tmp138);
          bytetest_82_82 = simd_and(tmp35, tmp45);
          r800_ffff_tmp277 = simd_and(r800_ffff_tmp275, bytetest_82_82);
          struct_Lu.cc = simd_or(r800_ffff_tmp277, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_99 = simd_and(tmp16, tmp138);
          bytetest_84_84 = simd_and(tmp35, tmp81);
          r800_ffff_tmp278 = simd_and(r800_ffff_tmp275, bytetest_84_84);
          struct_Lu.cc = simd_or(r800_ffff_tmp278, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_99 = simd_and(tmp16, tmp138);
          bytetest_86_86 = simd_and(tmp35, tmp111);
          r800_ffff_tmp279 = simd_and(r800_ffff_tmp275, bytetest_86_86);
          struct_Lu.cc = simd_or(r800_ffff_tmp279, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_99 = simd_and(tmp16, tmp138);
          bytetest_88_88 = simd_and(tmp35, tmp131);
          r800_ffff_tmp280 = simd_and(r800_ffff_tmp275, bytetest_88_88);
          struct_Lu.cc = simd_or(r800_ffff_tmp280, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_99 = simd_and(tmp16, tmp138);
          bytetest_8a_8a = simd_and(tmp35, tmp145);
          r800_ffff_tmp281 = simd_and(r800_ffff_tmp275, bytetest_8a_8a);
          struct_Lu.cc = simd_or(r800_ffff_tmp281, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_99 = simd_and(tmp16, tmp138);
          bytetest_8c_8c = simd_and(tmp35, tmp54);
          r800_ffff_tmp282 = simd_and(r800_ffff_tmp275, bytetest_8c_8c);
          struct_Lu.cc = simd_or(r800_ffff_tmp282, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_99 = simd_and(tmp16, tmp138);
          bytetest_8e_8e = simd_and(tmp35, tmp173);
          r800_ffff_tmp283 = simd_and(r800_ffff_tmp275, bytetest_8e_8e);
          struct_Lu.cc = simd_or(r800_ffff_tmp283, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_99 = simd_and(tmp16, tmp138);
          bytetest_90_90 = simd_andc(tmp16, tmp9);
          r800_ffff_tmp284 = simd_and(r800_ffff_tmp275, bytetest_90_90);
          struct_Lu.cc = simd_or(r800_ffff_tmp284, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_99 = simd_and(tmp16, tmp138);
          bytetest_92_92 = simd_and(tmp16, tmp45);
          r800_ffff_tmp285 = simd_and(r800_ffff_tmp275, bytetest_92_92);
          struct_Lu.cc = simd_or(r800_ffff_tmp285, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_99 = simd_and(tmp16, tmp138);
          bytetest_94_94 = simd_and(tmp16, tmp81);
          r800_ffff_tmp286 = simd_and(r800_ffff_tmp275, bytetest_94_94);
          struct_Lu.cc = simd_or(r800_ffff_tmp286, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_99 = simd_and(tmp16, tmp138);
          bytetest_96_96 = simd_and(tmp16, tmp111);
          r800_ffff_tmp287 = simd_and(r800_ffff_tmp275, bytetest_96_96);
          struct_Lu.cc = simd_or(r800_ffff_tmp287, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_99 = simd_and(tmp16, tmp138);
          bytetest_98_98 = simd_and(tmp16, tmp131);
          r800_ffff_tmp288 = simd_and(r800_ffff_tmp275, bytetest_98_98);
          struct_Lu.cc = simd_or(r800_ffff_tmp288, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_99 = simd_and(tmp16, tmp138);
          bytetest_9a_9a = simd_and(tmp16, tmp145);
          r800_ffff_tmp289 = simd_and(r800_ffff_tmp275, bytetest_9a_9a);
          struct_Lu.cc = simd_or(r800_ffff_tmp289, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_99 = simd_and(tmp16, tmp138);
          bytetest_9c_9c = simd_and(tmp16, tmp54);
          r800_ffff_tmp290 = simd_and(r800_ffff_tmp275, bytetest_9c_9c);
          struct_Lu.cc = simd_or(r800_ffff_tmp290, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_99 = simd_and(tmp16, tmp138);
          bytetest_9e_9e = simd_and(tmp16, tmp173);
          r800_ffff_tmp291 = simd_and(r800_ffff_tmp275, bytetest_9e_9e);
          struct_Lu.cc = simd_or(r800_ffff_tmp291, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_99 = simd_and(tmp16, tmp138);
          bytetest_a0_a0 = simd_andc(tmp59, tmp9);
          r800_ffff_tmp292 = simd_and(r800_ffff_tmp275, bytetest_a0_a0);
          struct_Lu.cc = simd_or(r800_ffff_tmp292, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_99 = simd_and(tmp16, tmp138);
          bytetest_a2_a2 = simd_and(tmp59, tmp45);
          r800_ffff_tmp293 = simd_and(r800_ffff_tmp275, bytetest_a2_a2);
          struct_Lu.cc = simd_or(r800_ffff_tmp293, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_99 = simd_and(tmp16, tmp138);
          bytetest_a4_a4 = simd_and(tmp59, tmp81);
          r800_ffff_tmp294 = simd_and(r800_ffff_tmp275, bytetest_a4_a4);
          struct_Lu.cc = simd_or(r800_ffff_tmp294, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_99 = simd_and(tmp16, tmp138);
          bytetest_a6_a6 = simd_and(tmp59, tmp111);
          r800_ffff_tmp295 = simd_and(r800_ffff_tmp275, bytetest_a6_a6);
          struct_Lu.cc = simd_or(r800_ffff_tmp295, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_99 = simd_and(tmp16, tmp138);
          bytetest_a8_a8 = simd_and(tmp59, tmp131);
          r800_ffff_tmp296 = simd_and(r800_ffff_tmp275, bytetest_a8_a8);
          struct_Lu.cc = simd_or(r800_ffff_tmp296, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_99 = simd_and(tmp16, tmp138);
          bytetest_aa_aa = simd_and(tmp59, tmp145);
          r800_ffff_tmp297 = simd_and(r800_ffff_tmp275, bytetest_aa_aa);
          struct_Lu.cc = simd_or(r800_ffff_tmp297, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_99 = simd_and(tmp16, tmp138);
          bytetest_ac_ac = simd_and(tmp59, tmp54);
          r800_ffff_tmp298 = simd_and(r800_ffff_tmp275, bytetest_ac_ac);
          struct_Lu.cc = simd_or(r800_ffff_tmp298, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9a = simd_and(tmp16, tmp145);
          bytetest_80_80 = simd_andc(tmp35, tmp9);
          r800_ffff_tmp299 = simd_and(r800_ffff_tmp273, bytetest_9a);
          carryQ.cq[57] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp299, carryQ.get_carry_in(57), r800_ffff_tmp300));
          r800_ffff_tmp301 = simd_and(r800_ffff_tmp300, bytetest_80_80);
          struct_Lu.cc = simd_or(r800_ffff_tmp301, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9a = simd_and(tmp16, tmp145);
          bytetest_82_82 = simd_and(tmp35, tmp45);
          r800_ffff_tmp302 = simd_and(r800_ffff_tmp300, bytetest_82_82);
          struct_Lu.cc = simd_or(r800_ffff_tmp302, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9a = simd_and(tmp16, tmp145);
          bytetest_84_84 = simd_and(tmp35, tmp81);
          r800_ffff_tmp303 = simd_and(r800_ffff_tmp300, bytetest_84_84);
          struct_Lu.cc = simd_or(r800_ffff_tmp303, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9a = simd_and(tmp16, tmp145);
          bytetest_86_86 = simd_and(tmp35, tmp111);
          r800_ffff_tmp304 = simd_and(r800_ffff_tmp300, bytetest_86_86);
          struct_Lu.cc = simd_or(r800_ffff_tmp304, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9a = simd_and(tmp16, tmp145);
          bytetest_88_88 = simd_and(tmp35, tmp131);
          r800_ffff_tmp305 = simd_and(r800_ffff_tmp300, bytetest_88_88);
          struct_Lu.cc = simd_or(r800_ffff_tmp305, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9a = simd_and(tmp16, tmp145);
          bytetest_8a_8a = simd_and(tmp35, tmp145);
          r800_ffff_tmp306 = simd_and(r800_ffff_tmp300, bytetest_8a_8a);
          struct_Lu.cc = simd_or(r800_ffff_tmp306, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9a = simd_and(tmp16, tmp145);
          bytetest_8c_8c = simd_and(tmp35, tmp54);
          r800_ffff_tmp307 = simd_and(r800_ffff_tmp300, bytetest_8c_8c);
          struct_Lu.cc = simd_or(r800_ffff_tmp307, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9a = simd_and(tmp16, tmp145);
          bytetest_8e_8e = simd_and(tmp35, tmp173);
          r800_ffff_tmp308 = simd_and(r800_ffff_tmp300, bytetest_8e_8e);
          struct_Lu.cc = simd_or(r800_ffff_tmp308, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9a = simd_and(tmp16, tmp145);
          bytetest_90_90 = simd_andc(tmp16, tmp9);
          r800_ffff_tmp309 = simd_and(r800_ffff_tmp300, bytetest_90_90);
          struct_Lu.cc = simd_or(r800_ffff_tmp309, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9a = simd_and(tmp16, tmp145);
          bytetest_92_92 = simd_and(tmp16, tmp45);
          r800_ffff_tmp310 = simd_and(r800_ffff_tmp300, bytetest_92_92);
          struct_Lu.cc = simd_or(r800_ffff_tmp310, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9a = simd_and(tmp16, tmp145);
          bytetest_94_94 = simd_and(tmp16, tmp81);
          r800_ffff_tmp311 = simd_and(r800_ffff_tmp300, bytetest_94_94);
          struct_Lu.cc = simd_or(r800_ffff_tmp311, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9a = simd_and(tmp16, tmp145);
          bytetest_96_96 = simd_and(tmp16, tmp111);
          r800_ffff_tmp312 = simd_and(r800_ffff_tmp300, bytetest_96_96);
          struct_Lu.cc = simd_or(r800_ffff_tmp312, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9c = simd_and(tmp16, tmp54);
          bytetest_a2_a2 = simd_and(tmp59, tmp45);
          r800_ffff_tmp313 = simd_and(r800_ffff_tmp273, bytetest_9c);
          carryQ.cq[58] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp313, carryQ.get_carry_in(58), r800_ffff_tmp314));
          r800_ffff_tmp315 = simd_and(r800_ffff_tmp314, bytetest_a2_a2);
          struct_Lu.cc = simd_or(r800_ffff_tmp315, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9c = simd_and(tmp16, tmp54);
          bytetest_a4_a4 = simd_and(tmp59, tmp81);
          r800_ffff_tmp316 = simd_and(r800_ffff_tmp314, bytetest_a4_a4);
          struct_Lu.cc = simd_or(r800_ffff_tmp316, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9c = simd_and(tmp16, tmp54);
          bytetest_a6_a6 = simd_and(tmp59, tmp111);
          r800_ffff_tmp317 = simd_and(r800_ffff_tmp314, bytetest_a6_a6);
          struct_Lu.cc = simd_or(r800_ffff_tmp317, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9c = simd_and(tmp16, tmp54);
          bytetest_a8_a8 = simd_and(tmp59, tmp131);
          r800_ffff_tmp318 = simd_and(r800_ffff_tmp314, bytetest_a8_a8);
          struct_Lu.cc = simd_or(r800_ffff_tmp318, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9c = simd_and(tmp16, tmp54);
          bytetest_aa_aa = simd_and(tmp59, tmp145);
          r800_ffff_tmp319 = simd_and(r800_ffff_tmp314, bytetest_aa_aa);
          struct_Lu.cc = simd_or(r800_ffff_tmp319, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9c = simd_and(tmp16, tmp54);
          bytetest_ac_ac = simd_and(tmp59, tmp54);
          r800_ffff_tmp320 = simd_and(r800_ffff_tmp314, bytetest_ac_ac);
          struct_Lu.cc = simd_or(r800_ffff_tmp320, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9c = simd_and(tmp16, tmp54);
          bytetest_ae_ae = simd_and(tmp59, tmp173);
          r800_ffff_tmp321 = simd_and(r800_ffff_tmp314, bytetest_ae_ae);
          struct_Lu.cc = simd_or(r800_ffff_tmp321, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9c = simd_and(tmp16, tmp54);
          bytetest_b2_b2 = simd_and(bytetest_b0_bf, tmp45);
          r800_ffff_tmp322 = simd_and(r800_ffff_tmp314, bytetest_b2_b2);
          struct_Lu.cc = simd_or(r800_ffff_tmp322, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9c = simd_and(tmp16, tmp54);
          bytetest_b4_b4 = simd_and(bytetest_b0_bf, tmp81);
          r800_ffff_tmp323 = simd_and(r800_ffff_tmp314, bytetest_b4_b4);
          struct_Lu.cc = simd_or(r800_ffff_tmp323, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9c = simd_and(tmp16, tmp54);
          bytetest_b6_b6 = simd_and(bytetest_b0_bf, tmp111);
          r800_ffff_tmp324 = simd_and(r800_ffff_tmp314, bytetest_b6_b6);
          struct_Lu.cc = simd_or(r800_ffff_tmp324, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9c = simd_and(tmp16, tmp54);
          bytetest_b8_b8 = simd_and(bytetest_b0_bf, tmp131);
          r800_ffff_tmp325 = simd_and(r800_ffff_tmp314, bytetest_b8_b8);
          struct_Lu.cc = simd_or(r800_ffff_tmp325, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9c = simd_and(tmp16, tmp54);
          bytetest_ba_ba = simd_and(bytetest_b0_bf, tmp145);
          r800_ffff_tmp326 = simd_and(r800_ffff_tmp314, bytetest_ba_ba);
          struct_Lu.cc = simd_or(r800_ffff_tmp326, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9c = simd_and(tmp16, tmp54);
          bytetest_bc_bc = simd_and(bytetest_b0_bf, tmp54);
          r800_ffff_tmp327 = simd_and(r800_ffff_tmp314, bytetest_bc_bc);
          struct_Lu.cc = simd_or(r800_ffff_tmp327, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9c = simd_and(tmp16, tmp54);
          bytetest_be_be = simd_and(bytetest_b0_bf, tmp173);
          r800_ffff_tmp328 = simd_and(r800_ffff_tmp314, bytetest_be_be);
          struct_Lu.cc = simd_or(r800_ffff_tmp328, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_80_80 = simd_andc(tmp35, tmp9);
          r800_ffff_tmp329 = simd_and(r800_ffff_tmp273, bytetest_9d);
          carryQ.cq[59] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp329, carryQ.get_carry_in(59), r800_ffff_tmp330));
          r800_ffff_tmp331 = simd_and(r800_ffff_tmp330, bytetest_80_80);
          struct_Lu.cc = simd_or(r800_ffff_tmp331, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_82_82 = simd_and(tmp35, tmp45);
          r800_ffff_tmp332 = simd_and(r800_ffff_tmp330, bytetest_82_82);
          struct_Lu.cc = simd_or(r800_ffff_tmp332, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_84_84 = simd_and(tmp35, tmp81);
          r800_ffff_tmp333 = simd_and(r800_ffff_tmp330, bytetest_84_84);
          struct_Lu.cc = simd_or(r800_ffff_tmp333, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_86_86 = simd_and(tmp35, tmp111);
          r800_ffff_tmp334 = simd_and(r800_ffff_tmp330, bytetest_86_86);
          struct_Lu.cc = simd_or(r800_ffff_tmp334, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_88_88 = simd_and(tmp35, tmp131);
          r800_ffff_tmp335 = simd_and(r800_ffff_tmp330, bytetest_88_88);
          struct_Lu.cc = simd_or(r800_ffff_tmp335, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_8a_8a = simd_and(tmp35, tmp145);
          r800_ffff_tmp336 = simd_and(r800_ffff_tmp330, bytetest_8a_8a);
          struct_Lu.cc = simd_or(r800_ffff_tmp336, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_8c_8c = simd_and(tmp35, tmp54);
          r800_ffff_tmp337 = simd_and(r800_ffff_tmp330, bytetest_8c_8c);
          struct_Lu.cc = simd_or(r800_ffff_tmp337, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_8e_8e = simd_and(tmp35, tmp173);
          r800_ffff_tmp338 = simd_and(r800_ffff_tmp330, bytetest_8e_8e);
          struct_Lu.cc = simd_or(r800_ffff_tmp338, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_90_90 = simd_andc(tmp16, tmp9);
          r800_ffff_tmp339 = simd_and(r800_ffff_tmp330, bytetest_90_90);
          struct_Lu.cc = simd_or(r800_ffff_tmp339, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_92_92 = simd_and(tmp16, tmp45);
          r800_ffff_tmp340 = simd_and(r800_ffff_tmp330, bytetest_92_92);
          struct_Lu.cc = simd_or(r800_ffff_tmp340, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_94_94 = simd_and(tmp16, tmp81);
          r800_ffff_tmp341 = simd_and(r800_ffff_tmp330, bytetest_94_94);
          struct_Lu.cc = simd_or(r800_ffff_tmp341, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_96_96 = simd_and(tmp16, tmp111);
          r800_ffff_tmp342 = simd_and(r800_ffff_tmp330, bytetest_96_96);
          struct_Lu.cc = simd_or(r800_ffff_tmp342, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_98_98 = simd_and(tmp16, tmp131);
          r800_ffff_tmp343 = simd_and(r800_ffff_tmp330, bytetest_98_98);
          struct_Lu.cc = simd_or(r800_ffff_tmp343, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_9a_9a = simd_and(tmp16, tmp145);
          r800_ffff_tmp344 = simd_and(r800_ffff_tmp330, bytetest_9a_9a);
          struct_Lu.cc = simd_or(r800_ffff_tmp344, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_9c_9c = simd_and(tmp16, tmp54);
          r800_ffff_tmp345 = simd_and(r800_ffff_tmp330, bytetest_9c_9c);
          struct_Lu.cc = simd_or(r800_ffff_tmp345, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_9e_9e = simd_and(tmp16, tmp173);
          r800_ffff_tmp346 = simd_and(r800_ffff_tmp330, bytetest_9e_9e);
          struct_Lu.cc = simd_or(r800_ffff_tmp346, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_a0_a0 = simd_andc(tmp59, tmp9);
          r800_ffff_tmp347 = simd_and(r800_ffff_tmp330, bytetest_a0_a0);
          struct_Lu.cc = simd_or(r800_ffff_tmp347, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_a2_a2 = simd_and(tmp59, tmp45);
          r800_ffff_tmp348 = simd_and(r800_ffff_tmp330, bytetest_a2_a2);
          struct_Lu.cc = simd_or(r800_ffff_tmp348, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_a4_a4 = simd_and(tmp59, tmp81);
          r800_ffff_tmp349 = simd_and(r800_ffff_tmp330, bytetest_a4_a4);
          struct_Lu.cc = simd_or(r800_ffff_tmp349, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_a6_a6 = simd_and(tmp59, tmp111);
          r800_ffff_tmp350 = simd_and(r800_ffff_tmp330, bytetest_a6_a6);
          struct_Lu.cc = simd_or(r800_ffff_tmp350, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_a8_a8 = simd_and(tmp59, tmp131);
          r800_ffff_tmp351 = simd_and(r800_ffff_tmp330, bytetest_a8_a8);
          struct_Lu.cc = simd_or(r800_ffff_tmp351, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_aa_aa = simd_and(tmp59, tmp145);
          r800_ffff_tmp352 = simd_and(r800_ffff_tmp330, bytetest_aa_aa);
          struct_Lu.cc = simd_or(r800_ffff_tmp352, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_ac_ac = simd_and(tmp59, tmp54);
          r800_ffff_tmp353 = simd_and(r800_ffff_tmp330, bytetest_ac_ac);
          struct_Lu.cc = simd_or(r800_ffff_tmp353, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_ae_ae = simd_and(tmp59, tmp173);
          r800_ffff_tmp354 = simd_and(r800_ffff_tmp330, bytetest_ae_ae);
          struct_Lu.cc = simd_or(r800_ffff_tmp354, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_b9_b9 = simd_and(bytetest_b0_bf, tmp138);
          r800_ffff_tmp355 = simd_and(r800_ffff_tmp330, bytetest_b9_b9);
          struct_Lu.cc = simd_or(r800_ffff_tmp355, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_bb_bb = simd_and(bytetest_b0_bf, tmp151);
          r800_ffff_tmp356 = simd_and(r800_ffff_tmp330, bytetest_bb_bb);
          struct_Lu.cc = simd_or(r800_ffff_tmp356, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9d = simd_and(tmp16, tmp19);
          r800_ffff_tmp357 = simd_and(bytetest_b0_bf, tmp17);
          bytetest_bd_be = simd_and(r800_ffff_tmp357, tmp64);
          r800_ffff_tmp358 = simd_and(r800_ffff_tmp330, bytetest_bd_be);
          struct_Lu.cc = simd_or(r800_ffff_tmp358, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9e = simd_and(tmp16, tmp173);
          bytetest_80_80 = simd_andc(tmp35, tmp9);
          r800_ffff_tmp359 = simd_and(r800_ffff_tmp273, bytetest_9e);
          carryQ.cq[60] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp359, carryQ.get_carry_in(60), r800_ffff_tmp360));
          r800_ffff_tmp361 = simd_and(r800_ffff_tmp360, bytetest_80_80);
          struct_Lu.cc = simd_or(r800_ffff_tmp361, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9e = simd_and(tmp16, tmp173);
          bytetest_82_82 = simd_and(tmp35, tmp45);
          r800_ffff_tmp362 = simd_and(r800_ffff_tmp360, bytetest_82_82);
          struct_Lu.cc = simd_or(r800_ffff_tmp362, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9e = simd_and(tmp16, tmp173);
          bytetest_84_84 = simd_and(tmp35, tmp81);
          r800_ffff_tmp363 = simd_and(r800_ffff_tmp360, bytetest_84_84);
          struct_Lu.cc = simd_or(r800_ffff_tmp363, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9e = simd_and(tmp16, tmp173);
          bytetest_86_86 = simd_and(tmp35, tmp111);
          r800_ffff_tmp364 = simd_and(r800_ffff_tmp360, bytetest_86_86);
          struct_Lu.cc = simd_or(r800_ffff_tmp364, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9e = simd_and(tmp16, tmp173);
          bytetest_8b_8b = simd_and(tmp35, tmp151);
          r800_ffff_tmp365 = simd_and(r800_ffff_tmp360, bytetest_8b_8b);
          struct_Lu.cc = simd_or(r800_ffff_tmp365, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9e = simd_and(tmp16, tmp173);
          bytetest_8d_8d = simd_and(tmp35, tmp19);
          r800_ffff_tmp366 = simd_and(r800_ffff_tmp360, bytetest_8d_8d);
          struct_Lu.cc = simd_or(r800_ffff_tmp366, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9e = simd_and(tmp16, tmp173);
          bytetest_90_90 = simd_andc(tmp16, tmp9);
          r800_ffff_tmp367 = simd_and(r800_ffff_tmp360, bytetest_90_90);
          struct_Lu.cc = simd_or(r800_ffff_tmp367, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9e = simd_and(tmp16, tmp173);
          bytetest_92_92 = simd_and(tmp16, tmp45);
          r800_ffff_tmp368 = simd_and(r800_ffff_tmp360, bytetest_92_92);
          struct_Lu.cc = simd_or(r800_ffff_tmp368, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9e = simd_and(tmp16, tmp173);
          bytetest_a0_a0 = simd_andc(tmp59, tmp9);
          r800_ffff_tmp369 = simd_and(r800_ffff_tmp360, bytetest_a0_a0);
          struct_Lu.cc = simd_or(r800_ffff_tmp369, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9e = simd_and(tmp16, tmp173);
          bytetest_a2_a2 = simd_and(tmp59, tmp45);
          r800_ffff_tmp370 = simd_and(r800_ffff_tmp360, bytetest_a2_a2);
          struct_Lu.cc = simd_or(r800_ffff_tmp370, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9e = simd_and(tmp16, tmp173);
          bytetest_a4_a4 = simd_and(tmp59, tmp81);
          r800_ffff_tmp371 = simd_and(r800_ffff_tmp360, bytetest_a4_a4);
          struct_Lu.cc = simd_or(r800_ffff_tmp371, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9e = simd_and(tmp16, tmp173);
          bytetest_a6_a6 = simd_and(tmp59, tmp111);
          r800_ffff_tmp372 = simd_and(r800_ffff_tmp360, bytetest_a6_a6);
          struct_Lu.cc = simd_or(r800_ffff_tmp372, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9e = simd_and(tmp16, tmp173);
          bytetest_a8_a8 = simd_and(tmp59, tmp131);
          r800_ffff_tmp373 = simd_and(r800_ffff_tmp360, bytetest_a8_a8);
          struct_Lu.cc = simd_or(r800_ffff_tmp373, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9e = simd_and(tmp16, tmp173);
          bytetest_aa_aa = simd_and(tmp59, tmp145);
          r800_ffff_tmp374 = simd_and(r800_ffff_tmp360, bytetest_aa_aa);
          struct_Lu.cc = simd_or(r800_ffff_tmp374, struct_Lu.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp166);
          bytetest_bc = simd_and(bytetest_b0_bf, tmp54);
          bytetest_a1_ba = simd_and(bytetest_a0_bf, tmp10);
          r800_ffff_tmp375 = simd_and(tmp25, bytetest_ef);
          carryQ.cq[61] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp375, carryQ.get_carry_in(61), r800_ffff_tmp376));
          r800_ffff_tmp377 = simd_and(r800_ffff_tmp376, bytetest_bc);
          carryQ.cq[62] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp377, carryQ.get_carry_in(62), r800_ffff_tmp378));
          r800_ffff_tmp379 = simd_and(r800_ffff_tmp378, bytetest_a1_ba);
          struct_Lu.cc = simd_or(r800_ffff_tmp379, struct_Lu.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(36, 27);
        }
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_90 = simd_andc(tmp16, tmp9);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp192 = simd_and(tmp27, bytetest_90);
        carryQ.cq[63] = carryout2carry(pablo_blk_Advance(tmp192, carryQ.get_carry_in(63), tmp193));
        tmp194 = simd_and(tmp193, bytetest_80_bf);
        if ((bitblock::any(tmp194) || carryQ.CarryTest(64, 2))) {
          bytetest_f0 = simd_andc(tmp13, tmp9);
          bytetest_90 = simd_andc(tmp16, tmp9);
          bytetest_90 = simd_andc(tmp16, tmp9);
          r10000_10fff_tmp1 = simd_and(basis_bits.bit_2, tmp51);
          bytetest_80_a7 = simd_andc(tmp14, r10000_10fff_tmp1);
          r10000_10fff_tmp2 = simd_and(tmp27, bytetest_90);
          carryQ.cq[64] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp2, carryQ.get_carry_in(64), r10000_10fff_tmp3));
          r10000_10fff_tmp4 = simd_and(r10000_10fff_tmp3, bytetest_90);
          carryQ.cq[65] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp4, carryQ.get_carry_in(65), r10000_10fff_tmp5));
          r10000_10fff_tmp6 = simd_and(r10000_10fff_tmp5, bytetest_80_a7);
          struct_Lu.cc = simd_or(r10000_10fff_tmp6, struct_Lu.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(64, 2);
        }
        carryQ.CarryQ_Adjust(66);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Lu & struct_Lu, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, tmp7, tmp8, tmp9, tmp10;
		BitBlock bytetest_41_5a, tmp11, tmp12, tmp13, bytetest_f0, tmp14, tmp15, tmp16;
		BitBlock tmp17, tmp18, tmp19, bytetest_9d, bytetest_90, tmp20, tmp21, tmp22;
		BitBlock tmp23, bytetest_80_99, tmp24, tmp25, tmp26, tmp27, tmp28, tmp29;
		BitBlock tmp30, tmp31, tmp32, tmp33, bytetest_91, tmp34, tmp35, tmp36, tmp37;
		BitBlock bytetest_80_8d, tmp38, tmp39, tmp40, tmp41, bytetest_b4_bf, tmp42;
		BitBlock tmp43, tmp44, tmp45, bytetest_92, tmp46, bytetest_80_81, tmp47, tmp48;
		BitBlock tmp49, tmp50, tmp51, bytetest_a8_bf, tmp52, tmp53, tmp54;
		BitBlock bytetest_9c_9c, tmp55, tmp56, bytetest_9e_9f, tmp57, tmp58, tmp59;
		BitBlock bytetest_a2_a2, tmp60, tmp61, tmp62, tmp63, tmp64, bytetest_a5_a6;
		BitBlock tmp65, tmp66, tmp67, tmp68, bytetest_a9_ac, tmp69, tmp70, tmp71;
		BitBlock tmp72, bytetest_ae_b5, tmp73, tmp74, bytetest_93, tmp75, tmp76, tmp77;
		BitBlock bytetest_90_a9, tmp78, tmp79, tmp80, tmp81, bytetest_94, tmp82;
		BitBlock bytetest_84_85, tmp83, tmp84, tmp85, tmp86, tmp87, tmp88;
		BitBlock bytetest_87_8a, tmp89, tmp90, tmp91, tmp92, tmp93, tmp94;
		BitBlock bytetest_8d_94, tmp95, tmp96, tmp97, bytetest_96_9c, tmp98, tmp99;
		BitBlock tmp100, bytetest_b8_b9, tmp101, tmp102, tmp103, tmp104;
		BitBlock bytetest_bb_be, tmp105, tmp106, bytetest_95, tmp107, bytetest_80_84;
		BitBlock tmp108, tmp109, tmp110, tmp111, bytetest_86_86, tmp112, tmp113;
		BitBlock tmp114, bytetest_8a_90, tmp115, bytetest_96, bytetest_80_85, tmp116;
		BitBlock tmp117, tmp118, tmp119, bytetest_ac_bf, tmp120, tmp121;
		BitBlock bytetest_a0_b9, tmp122, tmp123, bytetest_97, tmp124, tmp125, tmp126;
		BitBlock tmp127, bytetest_94_ad, tmp128, tmp129, tmp130, tmp131, bytetest_98;
		BitBlock tmp132, tmp133, tmp134, bytetest_88_a1, tmp135, tmp136, tmp137;
		BitBlock tmp138, bytetest_99, tmp139, bytetest_80_95, tmp140, tmp141, tmp142;
		BitBlock bytetest_bc_bf, tmp143, tmp144, tmp145, bytetest_9a, bytetest_80_89;
		BitBlock tmp146, tmp147, tmp148, bytetest_b0_bf, tmp149, tmp150, tmp151;
		BitBlock bytetest_9b, bytetest_80_80, tmp152, tmp153, tmp154, tmp155, tmp156;
		BitBlock tmp157, bytetest_a2_ba, tmp158, bytetest_9c, tmp159, tmp160, tmp161;
		BitBlock tmp162, bytetest_9c_b4, tmp163, tmp164, tmp165, tmp166, tmp167;
		BitBlock tmp168, tmp169, bytetest_96_ae, tmp170, tmp171, tmp172, tmp173;
		BitBlock bytetest_9e, tmp174, tmp175, tmp176, tmp177, tmp178, bytetest_90_a8;
		BitBlock tmp179, tmp180, tmp181, bytetest_9f, bytetest_8a_8a, tmp182, tmp183;
		BitBlock tmp184, tmp185, bytetest_c2_df, r80_7ff_tmp1, bytetest_c3;
		BitBlock r80_7ff_tmp2, r80_7ff_tmp3, bytetest_80_96, r80_7ff_tmp4;
		BitBlock r80_7ff_tmp5, r80_7ff_tmp6, r80_7ff_tmp7, bytetest_98_9e;
		BitBlock r80_7ff_tmp8, bytetest_c4, r80_7ff_tmp9, r80_7ff_tmp10, r80_7ff_tmp11;
		BitBlock bytetest_82_82, r80_7ff_tmp12, bytetest_84_84, r80_7ff_tmp13;
		BitBlock r80_7ff_tmp14, bytetest_88_88, r80_7ff_tmp15, r80_7ff_tmp16;
		BitBlock bytetest_8c_8c, r80_7ff_tmp17, bytetest_8e_8e, r80_7ff_tmp18;
		BitBlock bytetest_90_90, r80_7ff_tmp19, bytetest_92_92, r80_7ff_tmp20;
		BitBlock bytetest_94_94, r80_7ff_tmp21, bytetest_96_96, r80_7ff_tmp22;
		BitBlock bytetest_98_98, r80_7ff_tmp23, bytetest_9a_9a, r80_7ff_tmp24;
		BitBlock r80_7ff_tmp25, bytetest_9e_9e, r80_7ff_tmp26, bytetest_a0_a0;
		BitBlock r80_7ff_tmp27, r80_7ff_tmp28, bytetest_a4_a4, r80_7ff_tmp29;
		BitBlock bytetest_a6_a6, r80_7ff_tmp30, bytetest_a8_a8, r80_7ff_tmp31;
		BitBlock bytetest_aa_aa, r80_7ff_tmp32, bytetest_ac_ac, r80_7ff_tmp33;
		BitBlock bytetest_ae_ae, r80_7ff_tmp34, bytetest_b0_b0, r80_7ff_tmp35;
		BitBlock bytetest_b2_b2, r80_7ff_tmp36, bytetest_b4_b4, r80_7ff_tmp37;
		BitBlock bytetest_b6_b6, r80_7ff_tmp38, bytetest_b9_b9, r80_7ff_tmp39;
		BitBlock bytetest_bb_bb, r80_7ff_tmp40, bytetest_bd_bd, r80_7ff_tmp41;
		BitBlock bytetest_bf_bf, r80_7ff_tmp42, bytetest_c5, bytetest_81_81;
		BitBlock r80_7ff_tmp43, r80_7ff_tmp44, r80_7ff_tmp45, bytetest_83_83;
		BitBlock r80_7ff_tmp46, bytetest_85_85, r80_7ff_tmp47, bytetest_87_87;
		BitBlock r80_7ff_tmp48, r80_7ff_tmp49, r80_7ff_tmp50, r80_7ff_tmp51;
		BitBlock r80_7ff_tmp52, r80_7ff_tmp53, r80_7ff_tmp54, r80_7ff_tmp55;
		BitBlock r80_7ff_tmp56, r80_7ff_tmp57, r80_7ff_tmp58, r80_7ff_tmp59;
		BitBlock r80_7ff_tmp60, r80_7ff_tmp61, r80_7ff_tmp62, r80_7ff_tmp63;
		BitBlock r80_7ff_tmp64, r80_7ff_tmp65, r80_7ff_tmp66, r80_7ff_tmp67;
		BitBlock r80_7ff_tmp68, r80_7ff_tmp69, r80_7ff_tmp70, r80_7ff_tmp71;
		BitBlock r80_7ff_tmp72, r80_7ff_tmp73, r80_7ff_tmp74, bytetest_c6;
		BitBlock r80_7ff_tmp75, bytetest_81_82, r80_7ff_tmp76, r80_7ff_tmp77;
		BitBlock r80_7ff_tmp78, r80_7ff_tmp79, r80_7ff_tmp80, bytetest_86_87;
		BitBlock r80_7ff_tmp81, r80_7ff_tmp82, bytetest_89_8b, r80_7ff_tmp83;
		BitBlock r80_7ff_tmp84, r80_7ff_tmp85, bytetest_8e_91, r80_7ff_tmp86;
		BitBlock r80_7ff_tmp87, r80_7ff_tmp88, bytetest_93_94, r80_7ff_tmp89;
		BitBlock r80_7ff_tmp90, r80_7ff_tmp91, bytetest_96_98, r80_7ff_tmp92;
		BitBlock r80_7ff_tmp93, bytetest_9c_9d, r80_7ff_tmp94, r80_7ff_tmp95;
		BitBlock r80_7ff_tmp96, r80_7ff_tmp97, r80_7ff_tmp98, bytetest_9f_a0;
		BitBlock r80_7ff_tmp99, r80_7ff_tmp100, r80_7ff_tmp101, bytetest_a6_a7;
		BitBlock r80_7ff_tmp102, bytetest_a9_a9, r80_7ff_tmp103, r80_7ff_tmp104;
		BitBlock bytetest_ae_af, r80_7ff_tmp105, r80_7ff_tmp106, bytetest_b1_b3;
		BitBlock r80_7ff_tmp107, bytetest_b5_b5, r80_7ff_tmp108, r80_7ff_tmp109;
		BitBlock bytetest_b7_b8, r80_7ff_tmp110, bytetest_bc_bc, r80_7ff_tmp111;
		BitBlock bytetest_c7, r80_7ff_tmp112, r80_7ff_tmp113, r80_7ff_tmp114;
		BitBlock r80_7ff_tmp115, r80_7ff_tmp116, bytetest_8d_8d, r80_7ff_tmp117;
		BitBlock bytetest_8f_8f, r80_7ff_tmp118, bytetest_91_91, r80_7ff_tmp119;
		BitBlock bytetest_93_93, r80_7ff_tmp120, bytetest_95_95, r80_7ff_tmp121;
		BitBlock bytetest_97_97, r80_7ff_tmp122, bytetest_99_99, r80_7ff_tmp123;
		BitBlock bytetest_9b_9b, r80_7ff_tmp124, r80_7ff_tmp125, r80_7ff_tmp126;
		BitBlock r80_7ff_tmp127, r80_7ff_tmp128, r80_7ff_tmp129, r80_7ff_tmp130;
		BitBlock r80_7ff_tmp131, r80_7ff_tmp132, r80_7ff_tmp133, bytetest_b1_b1;
		BitBlock r80_7ff_tmp134, r80_7ff_tmp135, bytetest_b6_b8, r80_7ff_tmp136;
		BitBlock bytetest_ba_ba, r80_7ff_tmp137, r80_7ff_tmp138, bytetest_be_be;
		BitBlock r80_7ff_tmp139, bytetest_c8, r80_7ff_tmp140, r80_7ff_tmp141;
		BitBlock r80_7ff_tmp142, r80_7ff_tmp143, r80_7ff_tmp144, r80_7ff_tmp145;
		BitBlock r80_7ff_tmp146, r80_7ff_tmp147, r80_7ff_tmp148, r80_7ff_tmp149;
		BitBlock r80_7ff_tmp150, r80_7ff_tmp151, r80_7ff_tmp152, r80_7ff_tmp153;
		BitBlock r80_7ff_tmp154, r80_7ff_tmp155, r80_7ff_tmp156, r80_7ff_tmp157;
		BitBlock r80_7ff_tmp158, r80_7ff_tmp159, r80_7ff_tmp160, r80_7ff_tmp161;
		BitBlock r80_7ff_tmp162, r80_7ff_tmp163, r80_7ff_tmp164, r80_7ff_tmp165;
		BitBlock r80_7ff_tmp166, r80_7ff_tmp167, r80_7ff_tmp168, bytetest_ba_bb;
		BitBlock r80_7ff_tmp169, r80_7ff_tmp170, bytetest_bd_be, r80_7ff_tmp171;
		BitBlock bytetest_c9, r80_7ff_tmp172, r80_7ff_tmp173, r80_7ff_tmp174;
		BitBlock bytetest_83_86, r80_7ff_tmp175, r80_7ff_tmp176, r80_7ff_tmp177;
		BitBlock r80_7ff_tmp178, r80_7ff_tmp179, bytetest_cd, r80_7ff_tmp180;
		BitBlock r80_7ff_tmp181, r80_7ff_tmp182, r80_7ff_tmp183, r80_7ff_tmp184;
		BitBlock bytetest_ce, r80_7ff_tmp185, r80_7ff_tmp186, r80_7ff_tmp187;
		BitBlock bytetest_88_8a, r80_7ff_tmp188, r80_7ff_tmp189, bytetest_8e_8f;
		BitBlock r80_7ff_tmp190, r80_7ff_tmp191, r80_7ff_tmp192, bytetest_91_a1;
		BitBlock r80_7ff_tmp193, r80_7ff_tmp194, r80_7ff_tmp195, bytetest_a3_ab;
		BitBlock r80_7ff_tmp196, bytetest_cf, r80_7ff_tmp197, r80_7ff_tmp198;
		BitBlock r80_7ff_tmp199, r80_7ff_tmp200, bytetest_92_94, r80_7ff_tmp201;
		BitBlock r80_7ff_tmp202, r80_7ff_tmp203, r80_7ff_tmp204, r80_7ff_tmp205;
		BitBlock r80_7ff_tmp206, r80_7ff_tmp207, r80_7ff_tmp208, r80_7ff_tmp209;
		BitBlock r80_7ff_tmp210, r80_7ff_tmp211, r80_7ff_tmp212, r80_7ff_tmp213;
		BitBlock r80_7ff_tmp214, bytetest_b7_b7, r80_7ff_tmp215, r80_7ff_tmp216;
		BitBlock bytetest_b9_ba, r80_7ff_tmp217, r80_7ff_tmp218, bytetest_d0;
		BitBlock bytetest_80_af, r80_7ff_tmp219, r80_7ff_tmp220, r80_7ff_tmp221;
		BitBlock bytetest_bd_bf, r80_7ff_tmp222, r80_7ff_tmp223, bytetest_d1;
		BitBlock r80_7ff_tmp224, r80_7ff_tmp225, r80_7ff_tmp226, r80_7ff_tmp227;
		BitBlock r80_7ff_tmp228, r80_7ff_tmp229, r80_7ff_tmp230, r80_7ff_tmp231;
		BitBlock r80_7ff_tmp232, r80_7ff_tmp233, r80_7ff_tmp234, r80_7ff_tmp235;
		BitBlock r80_7ff_tmp236, r80_7ff_tmp237, bytetest_b8_b8, r80_7ff_tmp238;
		BitBlock r80_7ff_tmp239, r80_7ff_tmp240, r80_7ff_tmp241, bytetest_d2;
		BitBlock r80_7ff_tmp242, r80_7ff_tmp243, r80_7ff_tmp244, r80_7ff_tmp245;
		BitBlock r80_7ff_tmp246, r80_7ff_tmp247, r80_7ff_tmp248, r80_7ff_tmp249;
		BitBlock r80_7ff_tmp250, r80_7ff_tmp251, r80_7ff_tmp252, r80_7ff_tmp253;
		BitBlock r80_7ff_tmp254, r80_7ff_tmp255, r80_7ff_tmp256, r80_7ff_tmp257;
		BitBlock r80_7ff_tmp258, r80_7ff_tmp259, r80_7ff_tmp260, r80_7ff_tmp261;
		BitBlock r80_7ff_tmp262, r80_7ff_tmp263, r80_7ff_tmp264, r80_7ff_tmp265;
		BitBlock r80_7ff_tmp266, r80_7ff_tmp267, r80_7ff_tmp268, r80_7ff_tmp269;
		BitBlock r80_7ff_tmp270, r80_7ff_tmp271, bytetest_d3, r80_7ff_tmp272;
		BitBlock r80_7ff_tmp273, r80_7ff_tmp274, r80_7ff_tmp275, r80_7ff_tmp276;
		BitBlock r80_7ff_tmp277, bytetest_89_89, r80_7ff_tmp278, bytetest_8b_8b;
		BitBlock r80_7ff_tmp279, r80_7ff_tmp280, r80_7ff_tmp281, r80_7ff_tmp282;
		BitBlock r80_7ff_tmp283, r80_7ff_tmp284, r80_7ff_tmp285, r80_7ff_tmp286;
		BitBlock r80_7ff_tmp287, r80_7ff_tmp288, r80_7ff_tmp289, r80_7ff_tmp290;
		BitBlock r80_7ff_tmp291, r80_7ff_tmp292, r80_7ff_tmp293, r80_7ff_tmp294;
		BitBlock r80_7ff_tmp295, r80_7ff_tmp296, r80_7ff_tmp297, r80_7ff_tmp298;
		BitBlock r80_7ff_tmp299, r80_7ff_tmp300, r80_7ff_tmp301, r80_7ff_tmp302;
		BitBlock r80_7ff_tmp303, r80_7ff_tmp304, bytetest_d4, r80_7ff_tmp305;
		BitBlock r80_7ff_tmp306, r80_7ff_tmp307, r80_7ff_tmp308, r80_7ff_tmp309;
		BitBlock r80_7ff_tmp310, r80_7ff_tmp311, r80_7ff_tmp312, r80_7ff_tmp313;
		BitBlock r80_7ff_tmp314, r80_7ff_tmp315, r80_7ff_tmp316, r80_7ff_tmp317;
		BitBlock r80_7ff_tmp318, r80_7ff_tmp319, r80_7ff_tmp320, r80_7ff_tmp321;
		BitBlock r80_7ff_tmp322, r80_7ff_tmp323, r80_7ff_tmp324, r80_7ff_tmp325;
		BitBlock r80_7ff_tmp326, bytetest_d5, r80_7ff_tmp327, r80_7ff_tmp328;
		BitBlock r80_7ff_tmp329, r80_7ff_tmp330, bytetest_b1_bf, r80_7ff_tmp331;
		BitBlock r80_7ff_tmp332, tmp186, tmp187, bytetest_e1_ef, bytetest_e0;
		BitBlock bytetest_a0_bf, tmp188, tmp189, tmp190, tmp191, r800_ffff_tmp1;
		BitBlock bytetest_e1, bytetest_83, r800_ffff_tmp2, r800_ffff_tmp3;
		BitBlock r800_ffff_tmp4, r800_ffff_tmp5, r800_ffff_tmp6, bytetest_82;
		BitBlock r800_ffff_tmp7, r800_ffff_tmp8, r800_ffff_tmp9, r800_ffff_tmp10;
		BitBlock r800_ffff_tmp11, r800_ffff_tmp12, bytetest_b8, r800_ffff_tmp13;
		BitBlock r800_ffff_tmp14, r800_ffff_tmp15, r800_ffff_tmp16, r800_ffff_tmp17;
		BitBlock r800_ffff_tmp18, r800_ffff_tmp19, r800_ffff_tmp20, r800_ffff_tmp21;
		BitBlock r800_ffff_tmp22, r800_ffff_tmp23, r800_ffff_tmp24, r800_ffff_tmp25;
		BitBlock r800_ffff_tmp26, r800_ffff_tmp27, r800_ffff_tmp28, r800_ffff_tmp29;
		BitBlock r800_ffff_tmp30, r800_ffff_tmp31, r800_ffff_tmp32, r800_ffff_tmp33;
		BitBlock r800_ffff_tmp34, r800_ffff_tmp35, r800_ffff_tmp36, r800_ffff_tmp37;
		BitBlock r800_ffff_tmp38, r800_ffff_tmp39, r800_ffff_tmp40, r800_ffff_tmp41;
		BitBlock r800_ffff_tmp42, r800_ffff_tmp43, r800_ffff_tmp44, r800_ffff_tmp45;
		BitBlock r800_ffff_tmp46, bytetest_b9, r800_ffff_tmp47, r800_ffff_tmp48;
		BitBlock r800_ffff_tmp49, r800_ffff_tmp50, r800_ffff_tmp51, r800_ffff_tmp52;
		BitBlock r800_ffff_tmp53, r800_ffff_tmp54, r800_ffff_tmp55, r800_ffff_tmp56;
		BitBlock r800_ffff_tmp57, r800_ffff_tmp58, r800_ffff_tmp59, r800_ffff_tmp60;
		BitBlock r800_ffff_tmp61, r800_ffff_tmp62, r800_ffff_tmp63, r800_ffff_tmp64;
		BitBlock r800_ffff_tmp65, r800_ffff_tmp66, r800_ffff_tmp67, r800_ffff_tmp68;
		BitBlock r800_ffff_tmp69, r800_ffff_tmp70, r800_ffff_tmp71, r800_ffff_tmp72;
		BitBlock r800_ffff_tmp73, r800_ffff_tmp74, r800_ffff_tmp75, r800_ffff_tmp76;
		BitBlock r800_ffff_tmp77, r800_ffff_tmp78, r800_ffff_tmp79, r800_ffff_tmp80;
		BitBlock bytetest_ba, r800_ffff_tmp81, r800_ffff_tmp82, r800_ffff_tmp83;
		BitBlock r800_ffff_tmp84, r800_ffff_tmp85, r800_ffff_tmp86, r800_ffff_tmp87;
		BitBlock r800_ffff_tmp88, r800_ffff_tmp89, r800_ffff_tmp90, r800_ffff_tmp91;
		BitBlock r800_ffff_tmp92, r800_ffff_tmp93, r800_ffff_tmp94, r800_ffff_tmp95;
		BitBlock r800_ffff_tmp96, r800_ffff_tmp97, r800_ffff_tmp98, r800_ffff_tmp99;
		BitBlock r800_ffff_tmp100, r800_ffff_tmp101, r800_ffff_tmp102;
		BitBlock r800_ffff_tmp103, r800_ffff_tmp104, r800_ffff_tmp105;
		BitBlock r800_ffff_tmp106, r800_ffff_tmp107, r800_ffff_tmp108;
		BitBlock r800_ffff_tmp109, r800_ffff_tmp110, bytetest_bb, r800_ffff_tmp111;
		BitBlock r800_ffff_tmp112, r800_ffff_tmp113, r800_ffff_tmp114;
		BitBlock r800_ffff_tmp115, r800_ffff_tmp116, r800_ffff_tmp117;
		BitBlock r800_ffff_tmp118, r800_ffff_tmp119, r800_ffff_tmp120;
		BitBlock r800_ffff_tmp121, r800_ffff_tmp122, r800_ffff_tmp123;
		BitBlock r800_ffff_tmp124, r800_ffff_tmp125, r800_ffff_tmp126;
		BitBlock r800_ffff_tmp127, r800_ffff_tmp128, r800_ffff_tmp129;
		BitBlock r800_ffff_tmp130, r800_ffff_tmp131, r800_ffff_tmp132;
		BitBlock r800_ffff_tmp133, r800_ffff_tmp134, r800_ffff_tmp135;
		BitBlock r800_ffff_tmp136, r800_ffff_tmp137, r800_ffff_tmp138;
		BitBlock r800_ffff_tmp139, r800_ffff_tmp140, r800_ffff_tmp141;
		BitBlock r800_ffff_tmp142, r800_ffff_tmp143, r800_ffff_tmp144, bytetest_bc;
		BitBlock bytetest_88_8f, r800_ffff_tmp145, r800_ffff_tmp146, r800_ffff_tmp147;
		BitBlock r800_ffff_tmp148, bytetest_98_9d, r800_ffff_tmp149, bytetest_a8_af;
		BitBlock r800_ffff_tmp150, bytetest_b8_bf, r800_ffff_tmp151, bytetest_bd;
		BitBlock bytetest_88_8d, r800_ffff_tmp152, r800_ffff_tmp153, r800_ffff_tmp154;
		BitBlock r800_ffff_tmp155, r800_ffff_tmp156, bytetest_9d_9d, r800_ffff_tmp157;
		BitBlock bytetest_9f_9f, r800_ffff_tmp158, r800_ffff_tmp159, bytetest_be;
		BitBlock bytetest_b8_bb, r800_ffff_tmp160, r800_ffff_tmp161, r800_ffff_tmp162;
		BitBlock bytetest_bf, bytetest_88_8b, r800_ffff_tmp163, r800_ffff_tmp164;
		BitBlock r800_ffff_tmp165, bytetest_98_9b, r800_ffff_tmp166, bytetest_a8_ac;
		BitBlock r800_ffff_tmp167, r800_ffff_tmp168, bytetest_e2, bytetest_84;
		BitBlock r800_ffff_tmp169, r800_ffff_tmp170, r800_ffff_tmp171;
		BitBlock r800_ffff_tmp172, r800_ffff_tmp173, r800_ffff_tmp174;
		BitBlock r800_ffff_tmp175, r800_ffff_tmp176, bytetest_8b_8d, r800_ffff_tmp177;
		BitBlock r800_ffff_tmp178, bytetest_90_92, r800_ffff_tmp179, r800_ffff_tmp180;
		BitBlock r800_ffff_tmp181, bytetest_99_9d, r800_ffff_tmp182, r800_ffff_tmp183;
		BitBlock r800_ffff_tmp184, r800_ffff_tmp185, r800_ffff_tmp186, bytetest_aa_ad;
		BitBlock r800_ffff_tmp187, bytetest_b0_b3, r800_ffff_tmp188, bytetest_be_bf;
		BitBlock r800_ffff_tmp189, bytetest_85, r800_ffff_tmp190, r800_ffff_tmp191;
		BitBlock r800_ffff_tmp192, bytetest_86, r800_ffff_tmp193, r800_ffff_tmp194;
		BitBlock r800_ffff_tmp195, bytetest_b0, r800_ffff_tmp196, bytetest_80_ae;
		BitBlock r800_ffff_tmp197, r800_ffff_tmp198, r800_ffff_tmp199, bytetest_b1;
		BitBlock r800_ffff_tmp200, r800_ffff_tmp201, r800_ffff_tmp202;
		BitBlock r800_ffff_tmp203, r800_ffff_tmp204, bytetest_a2_a4, r800_ffff_tmp205;
		BitBlock bytetest_a7_a7, r800_ffff_tmp206, r800_ffff_tmp207, bytetest_ab_ab;
		BitBlock r800_ffff_tmp208, r800_ffff_tmp209, bytetest_ad_b0, r800_ffff_tmp210;
		BitBlock r800_ffff_tmp211, r800_ffff_tmp212, bytetest_b2, r800_ffff_tmp213;
		BitBlock r800_ffff_tmp214, r800_ffff_tmp215, r800_ffff_tmp216;
		BitBlock r800_ffff_tmp217, r800_ffff_tmp218, r800_ffff_tmp219;
		BitBlock r800_ffff_tmp220, r800_ffff_tmp221, r800_ffff_tmp222;
		BitBlock r800_ffff_tmp223, r800_ffff_tmp224, r800_ffff_tmp225;
		BitBlock r800_ffff_tmp226, r800_ffff_tmp227, r800_ffff_tmp228;
		BitBlock r800_ffff_tmp229, r800_ffff_tmp230, r800_ffff_tmp231;
		BitBlock r800_ffff_tmp232, r800_ffff_tmp233, r800_ffff_tmp234;
		BitBlock r800_ffff_tmp235, r800_ffff_tmp236, r800_ffff_tmp237;
		BitBlock r800_ffff_tmp238, r800_ffff_tmp239, r800_ffff_tmp240;
		BitBlock r800_ffff_tmp241, r800_ffff_tmp242, r800_ffff_tmp243;
		BitBlock r800_ffff_tmp244, r800_ffff_tmp245, r800_ffff_tmp246;
		BitBlock r800_ffff_tmp247, r800_ffff_tmp248, bytetest_b3, r800_ffff_tmp249;
		BitBlock r800_ffff_tmp250, r800_ffff_tmp251, r800_ffff_tmp252;
		BitBlock r800_ffff_tmp253, r800_ffff_tmp254, r800_ffff_tmp255;
		BitBlock r800_ffff_tmp256, r800_ffff_tmp257, r800_ffff_tmp258;
		BitBlock r800_ffff_tmp259, r800_ffff_tmp260, r800_ffff_tmp261;
		BitBlock r800_ffff_tmp262, r800_ffff_tmp263, r800_ffff_tmp264;
		BitBlock r800_ffff_tmp265, r800_ffff_tmp266, r800_ffff_tmp267;
		BitBlock r800_ffff_tmp268, r800_ffff_tmp269, bytetest_ad_ad, r800_ffff_tmp270;
		BitBlock r800_ffff_tmp271, bytetest_ea, r800_ffff_tmp272, r800_ffff_tmp273;
		BitBlock r800_ffff_tmp274, r800_ffff_tmp275, r800_ffff_tmp276;
		BitBlock r800_ffff_tmp277, r800_ffff_tmp278, r800_ffff_tmp279;
		BitBlock r800_ffff_tmp280, r800_ffff_tmp281, r800_ffff_tmp282;
		BitBlock r800_ffff_tmp283, r800_ffff_tmp284, r800_ffff_tmp285;
		BitBlock r800_ffff_tmp286, r800_ffff_tmp287, r800_ffff_tmp288;
		BitBlock r800_ffff_tmp289, r800_ffff_tmp290, r800_ffff_tmp291;
		BitBlock r800_ffff_tmp292, r800_ffff_tmp293, r800_ffff_tmp294;
		BitBlock r800_ffff_tmp295, r800_ffff_tmp296, r800_ffff_tmp297;
		BitBlock r800_ffff_tmp298, r800_ffff_tmp299, r800_ffff_tmp300;
		BitBlock r800_ffff_tmp301, r800_ffff_tmp302, r800_ffff_tmp303;
		BitBlock r800_ffff_tmp304, r800_ffff_tmp305, r800_ffff_tmp306;
		BitBlock r800_ffff_tmp307, r800_ffff_tmp308, r800_ffff_tmp309;
		BitBlock r800_ffff_tmp310, r800_ffff_tmp311, r800_ffff_tmp312;
		BitBlock r800_ffff_tmp313, r800_ffff_tmp314, r800_ffff_tmp315;
		BitBlock r800_ffff_tmp316, r800_ffff_tmp317, r800_ffff_tmp318;
		BitBlock r800_ffff_tmp319, r800_ffff_tmp320, r800_ffff_tmp321;
		BitBlock r800_ffff_tmp322, r800_ffff_tmp323, r800_ffff_tmp324;
		BitBlock r800_ffff_tmp325, r800_ffff_tmp326, r800_ffff_tmp327;
		BitBlock r800_ffff_tmp328, r800_ffff_tmp329, r800_ffff_tmp330;
		BitBlock r800_ffff_tmp331, r800_ffff_tmp332, r800_ffff_tmp333;
		BitBlock r800_ffff_tmp334, r800_ffff_tmp335, r800_ffff_tmp336;
		BitBlock r800_ffff_tmp337, r800_ffff_tmp338, r800_ffff_tmp339;
		BitBlock r800_ffff_tmp340, r800_ffff_tmp341, r800_ffff_tmp342;
		BitBlock r800_ffff_tmp343, r800_ffff_tmp344, r800_ffff_tmp345;
		BitBlock r800_ffff_tmp346, r800_ffff_tmp347, r800_ffff_tmp348;
		BitBlock r800_ffff_tmp349, r800_ffff_tmp350, r800_ffff_tmp351;
		BitBlock r800_ffff_tmp352, r800_ffff_tmp353, r800_ffff_tmp354;
		BitBlock r800_ffff_tmp355, r800_ffff_tmp356, r800_ffff_tmp357;
		BitBlock r800_ffff_tmp358, r800_ffff_tmp359, r800_ffff_tmp360;
		BitBlock r800_ffff_tmp361, r800_ffff_tmp362, r800_ffff_tmp363;
		BitBlock r800_ffff_tmp364, r800_ffff_tmp365, r800_ffff_tmp366;
		BitBlock r800_ffff_tmp367, r800_ffff_tmp368, r800_ffff_tmp369;
		BitBlock r800_ffff_tmp370, r800_ffff_tmp371, r800_ffff_tmp372;
		BitBlock r800_ffff_tmp373, r800_ffff_tmp374, bytetest_ef, bytetest_a1_ba;
		BitBlock r800_ffff_tmp375, r800_ffff_tmp376, r800_ffff_tmp377;
		BitBlock r800_ffff_tmp378, r800_ffff_tmp379, bytetest_80_bf, tmp192, tmp193;
		BitBlock tmp194, r10000_10fff_tmp1, bytetest_80_a7, r10000_10fff_tmp2;
		BitBlock r10000_10fff_tmp3, r10000_10fff_tmp4, r10000_10fff_tmp5;
		BitBlock r10000_10fff_tmp6;




        struct_Lu.cc = simd<1>::constant<0>();
        tmp1 = simd_andc(basis_bits.bit_1, basis_bits.bit_0);
        tmp2 = simd_andc(tmp1, basis_bits.bit_2);
        tmp3 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp4 = simd_or(basis_bits.bit_5, tmp3);
        tmp5 = simd_and(basis_bits.bit_4, tmp4);
        tmp6 = simd_not(tmp5);
        tmp7 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp8 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp9 = simd_or(tmp7, tmp8);
        tmp10 = simd_or(simd_and(basis_bits.bit_3, tmp6), simd_andc(tmp9, basis_bits.bit_3));
        bytetest_41_5a = simd_and(tmp2, tmp10);
        struct_Lu.cc = simd_or(bytetest_41_5a, struct_Lu.cc);
        tmp11 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp12 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp13 = simd_and(tmp11, tmp12);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        tmp14 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp15 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp16 = simd_and(tmp14, tmp15);
        tmp17 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp18 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp19 = simd_and(tmp17, tmp18);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_90 = simd_andc(tmp16, tmp9);
        tmp20 = simd_andc(tmp14, basis_bits.bit_2);
        tmp21 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
        tmp22 = simd_and(basis_bits.bit_4, tmp21);
        tmp23 = simd_and(basis_bits.bit_3, tmp22);
        bytetest_80_99 = simd_andc(tmp20, tmp23);
        tmp24 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp24, carryQ.get_carry_in(0), tmp25));
        tmp26 = simd_and(tmp25, bytetest_f0);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp26, carryQ.get_carry_in(1), tmp27));
        tmp28 = simd_and(tmp27, bytetest_9d);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp28, carryQ.get_carry_in(2), tmp29));
        tmp30 = simd_and(tmp29, bytetest_90);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp30, carryQ.get_carry_in(3), tmp31));
        tmp32 = simd_and(tmp31, bytetest_80_99);
        struct_Lu.cc = simd_or(tmp32, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        tmp33 = simd_andc(tmp18, tmp7);
        bytetest_91 = simd_and(tmp16, tmp33);
        tmp34 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp35 = simd_andc(tmp14, tmp34);
        tmp36 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp37 = simd_and(basis_bits.bit_4, tmp36);
        bytetest_80_8d = simd_andc(tmp35, tmp37);
        tmp38 = simd_and(tmp29, bytetest_91);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp38, carryQ.get_carry_in(4), tmp39));
        tmp40 = simd_and(tmp39, bytetest_80_8d);
        bytetest_90 = simd_andc(tmp16, tmp9);
        tmp41 = simd_and(tmp14, tmp12);
        bytetest_b4_bf = simd_and(tmp41, tmp7);
        tmp42 = simd_and(tmp31, bytetest_b4_bf);
        tmp43 = simd_or(tmp42, tmp40);
        struct_Lu.cc = simd_or(tmp43, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        tmp44 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp45 = simd_andc(tmp44, tmp7);
        bytetest_92 = simd_and(tmp16, tmp45);
        tmp46 = simd_or(tmp7, basis_bits.bit_6);
        bytetest_80_81 = simd_andc(tmp35, tmp46);
        tmp47 = simd_and(tmp29, bytetest_92);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp47, carryQ.get_carry_in(5), tmp48));
        tmp49 = simd_and(tmp48, bytetest_80_81);
        bytetest_91 = simd_and(tmp16, tmp33);
        tmp50 = simd_and(tmp14, basis_bits.bit_2);
        tmp51 = simd_or(basis_bits.bit_3, basis_bits.bit_4);
        bytetest_a8_bf = simd_and(tmp50, tmp51);
        tmp52 = simd_and(tmp39, bytetest_a8_bf);
        tmp53 = simd_or(tmp52, tmp49);
        struct_Lu.cc = simd_or(tmp53, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_92 = simd_and(tmp16, tmp45);
        tmp54 = simd_andc(tmp17, tmp8);
        bytetest_9c_9c = simd_and(tmp16, tmp54);
        tmp55 = simd_and(tmp48, bytetest_9c_9c);
        struct_Lu.cc = simd_or(tmp55, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_92 = simd_and(tmp16, tmp45);
        tmp56 = simd_and(tmp17, basis_bits.bit_6);
        bytetest_9e_9f = simd_and(tmp16, tmp56);
        tmp57 = simd_and(tmp48, bytetest_9e_9f);
        struct_Lu.cc = simd_or(tmp57, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_92 = simd_and(tmp16, tmp45);
        tmp58 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp59 = simd_and(tmp14, tmp58);
        bytetest_a2_a2 = simd_and(tmp59, tmp45);
        tmp60 = simd_and(tmp48, bytetest_a2_a2);
        struct_Lu.cc = simd_or(tmp60, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_92 = simd_and(tmp16, tmp45);
        tmp61 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp62 = simd_and(tmp59, tmp61);
        tmp63 = simd_not(basis_bits.bit_7);
        tmp64 = simd_or(simd_and(basis_bits.bit_6, tmp63), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
        bytetest_a5_a6 = simd_and(tmp62, tmp64);
        tmp65 = simd_and(tmp48, bytetest_a5_a6);
        struct_Lu.cc = simd_or(tmp65, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_92 = simd_and(tmp16, tmp45);
        tmp66 = simd_and(tmp59, basis_bits.bit_4);
        tmp67 = simd_not(tmp8);
        tmp68 = simd_or(simd_and(basis_bits.bit_5, tmp67), simd_andc(tmp8, basis_bits.bit_5));
        bytetest_a9_ac = simd_and(tmp66, tmp68);
        tmp69 = simd_and(tmp48, bytetest_a9_ac);
        struct_Lu.cc = simd_or(tmp69, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_92 = simd_and(tmp16, tmp45);
        tmp70 = simd_or(basis_bits.bit_4, tmp36);
        tmp71 = simd_not(tmp70);
        tmp72 = simd_or(simd_and(basis_bits.bit_3, tmp71), simd_andc(tmp56, basis_bits.bit_3));
        bytetest_ae_b5 = simd_and(tmp50, tmp72);
        tmp73 = simd_and(tmp48, bytetest_ae_b5);
        struct_Lu.cc = simd_or(tmp73, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        tmp74 = simd_andc(tmp3, tmp7);
        bytetest_93 = simd_and(tmp16, tmp74);
        tmp75 = simd_or(basis_bits.bit_3, tmp22);
        tmp76 = simd_not(tmp75);
        tmp77 = simd_or(simd_and(basis_bits.bit_2, tmp76), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
        bytetest_90_a9 = simd_and(tmp14, tmp77);
        tmp78 = simd_and(tmp29, bytetest_93);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp78, carryQ.get_carry_in(6), tmp79));
        tmp80 = simd_and(tmp79, bytetest_90_a9);
        struct_Lu.cc = simd_or(tmp80, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        tmp81 = simd_andc(tmp61, tmp8);
        bytetest_94 = simd_and(tmp16, tmp81);
        tmp82 = simd_andc(tmp61, basis_bits.bit_6);
        bytetest_84_85 = simd_and(tmp35, tmp82);
        tmp83 = simd_and(tmp29, bytetest_94);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp83, carryQ.get_carry_in(7), tmp84));
        tmp85 = simd_and(tmp84, bytetest_84_85);
        struct_Lu.cc = simd_or(tmp85, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_94 = simd_and(tmp16, tmp81);
        tmp86 = simd_not(tmp4);
        tmp87 = simd_and(basis_bits.bit_5, tmp3);
        tmp88 = simd_or(simd_and(basis_bits.bit_4, tmp86), simd_andc(tmp87, basis_bits.bit_4));
        bytetest_87_8a = simd_and(tmp35, tmp88);
        tmp89 = simd_and(tmp84, bytetest_87_8a);
        struct_Lu.cc = simd_or(tmp89, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_94 = simd_and(tmp16, tmp81);
        tmp90 = simd_and(basis_bits.bit_5, tmp8);
        tmp91 = simd_or(basis_bits.bit_4, tmp90);
        tmp92 = simd_not(tmp91);
        tmp93 = simd_and(tmp17, tmp8);
        tmp94 = simd_or(simd_and(basis_bits.bit_3, tmp92), simd_andc(tmp93, basis_bits.bit_3));
        bytetest_8d_94 = simd_and(tmp20, tmp94);
        tmp95 = simd_and(tmp84, bytetest_8d_94);
        struct_Lu.cc = simd_or(tmp95, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_94 = simd_and(tmp16, tmp81);
        tmp96 = simd_not(tmp90);
        tmp97 = simd_or(simd_and(basis_bits.bit_4, tmp96), simd_andc(tmp36, basis_bits.bit_4));
        bytetest_96_9c = simd_and(tmp16, tmp97);
        tmp98 = simd_and(tmp84, bytetest_96_9c);
        struct_Lu.cc = simd_or(tmp98, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_94 = simd_and(tmp16, tmp81);
        tmp99 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp100 = simd_andc(tmp99, basis_bits.bit_6);
        bytetest_b8_b9 = simd_and(tmp41, tmp100);
        tmp101 = simd_and(tmp84, bytetest_b8_b9);
        struct_Lu.cc = simd_or(tmp101, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_94 = simd_and(tmp16, tmp81);
        tmp102 = simd_and(tmp41, basis_bits.bit_4);
        tmp103 = simd_not(tmp3);
        tmp104 = simd_or(simd_and(basis_bits.bit_5, tmp103), simd_andc(tmp3, basis_bits.bit_5));
        bytetest_bb_be = simd_and(tmp102, tmp104);
        tmp105 = simd_and(tmp84, bytetest_bb_be);
        struct_Lu.cc = simd_or(tmp105, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        tmp106 = simd_and(tmp61, tmp18);
        bytetest_95 = simd_and(tmp16, tmp106);
        tmp107 = simd_andc(tmp35, basis_bits.bit_4);
        bytetest_80_84 = simd_andc(tmp107, tmp90);
        tmp108 = simd_and(tmp29, bytetest_95);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(tmp108, carryQ.get_carry_in(8), tmp109));
        tmp110 = simd_and(tmp109, bytetest_80_84);
        struct_Lu.cc = simd_or(tmp110, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_95 = simd_and(tmp16, tmp106);
        tmp111 = simd_and(tmp61, tmp44);
        bytetest_86_86 = simd_and(tmp35, tmp111);
        tmp112 = simd_and(tmp109, bytetest_86_86);
        struct_Lu.cc = simd_or(tmp112, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_95 = simd_and(tmp16, tmp106);
        tmp113 = simd_not(tmp9);
        tmp114 = simd_or(simd_and(basis_bits.bit_3, tmp113), simd_andc(tmp22, basis_bits.bit_3));
        bytetest_8a_90 = simd_and(tmp20, tmp114);
        tmp115 = simd_and(tmp109, bytetest_8a_90);
        struct_Lu.cc = simd_or(tmp115, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_96 = simd_and(tmp16, tmp111);
        bytetest_80_85 = simd_andc(tmp107, tmp36);
        tmp116 = simd_and(tmp29, bytetest_96);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(tmp116, carryQ.get_carry_in(9), tmp117));
        tmp118 = simd_and(tmp117, bytetest_80_85);
        bytetest_95 = simd_and(tmp16, tmp106);
        tmp119 = simd_or(basis_bits.bit_3, tmp17);
        bytetest_ac_bf = simd_and(tmp50, tmp119);
        tmp120 = simd_and(tmp109, bytetest_ac_bf);
        tmp121 = simd_or(tmp120, tmp118);
        struct_Lu.cc = simd_or(tmp121, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_96 = simd_and(tmp16, tmp111);
        bytetest_a0_b9 = simd_andc(tmp50, tmp23);
        tmp122 = simd_and(tmp117, bytetest_a0_b9);
        struct_Lu.cc = simd_or(tmp122, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        tmp123 = simd_and(tmp61, tmp3);
        bytetest_97 = simd_and(tmp16, tmp123);
        tmp124 = simd_or(basis_bits.bit_3, tmp56);
        tmp125 = simd_not(tmp124);
        tmp126 = simd_and(basis_bits.bit_3, tmp7);
        tmp127 = simd_or(simd_and(basis_bits.bit_2, tmp125), simd_andc(tmp126, basis_bits.bit_2));
        bytetest_94_ad = simd_and(tmp14, tmp127);
        tmp128 = simd_and(tmp29, bytetest_97);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(tmp128, carryQ.get_carry_in(10), tmp129));
        tmp130 = simd_and(tmp129, bytetest_94_ad);
        struct_Lu.cc = simd_or(tmp130, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        tmp131 = simd_andc(tmp99, tmp8);
        bytetest_98 = simd_and(tmp16, tmp131);
        tmp132 = simd_or(basis_bits.bit_3, tmp46);
        tmp133 = simd_not(tmp132);
        tmp134 = simd_or(simd_and(basis_bits.bit_2, tmp133), simd_andc(tmp51, basis_bits.bit_2));
        bytetest_88_a1 = simd_and(tmp14, tmp134);
        tmp135 = simd_and(tmp29, bytetest_98);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(tmp135, carryQ.get_carry_in(11), tmp136));
        tmp137 = simd_and(tmp136, bytetest_88_a1);
        struct_Lu.cc = simd_or(tmp137, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        tmp138 = simd_and(tmp99, tmp18);
        bytetest_99 = simd_and(tmp16, tmp138);
        tmp139 = simd_and(basis_bits.bit_3, tmp70);
        bytetest_80_95 = simd_andc(tmp20, tmp139);
        tmp140 = simd_and(tmp29, bytetest_99);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(tmp140, carryQ.get_carry_in(12), tmp141));
        tmp142 = simd_and(tmp141, bytetest_80_95);
        bytetest_98 = simd_and(tmp16, tmp131);
        bytetest_bc_bf = simd_and(tmp41, tmp17);
        tmp143 = simd_and(tmp136, bytetest_bc_bf);
        tmp144 = simd_or(tmp143, tmp142);
        struct_Lu.cc = simd_or(tmp144, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        tmp145 = simd_and(tmp99, tmp44);
        bytetest_9a = simd_and(tmp16, tmp145);
        bytetest_80_89 = simd_andc(tmp35, tmp22);
        tmp146 = simd_and(tmp29, bytetest_9a);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(tmp146, carryQ.get_carry_in(13), tmp147));
        tmp148 = simd_and(tmp147, bytetest_80_89);
        bytetest_99 = simd_and(tmp16, tmp138);
        bytetest_b0_bf = simd_and(tmp14, tmp12);
        tmp149 = simd_and(tmp141, bytetest_b0_bf);
        tmp150 = simd_or(tmp149, tmp148);
        struct_Lu.cc = simd_or(tmp150, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        tmp151 = simd_and(tmp99, tmp3);
        bytetest_9b = simd_and(tmp16, tmp151);
        bytetest_80_80 = simd_andc(tmp35, tmp9);
        tmp152 = simd_and(tmp29, bytetest_9b);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(tmp152, carryQ.get_carry_in(14), tmp153));
        tmp154 = simd_and(tmp153, bytetest_80_80);
        bytetest_9a = simd_and(tmp16, tmp145);
        bytetest_a8_bf = simd_and(tmp50, tmp51);
        tmp155 = simd_and(tmp147, bytetest_a8_bf);
        tmp156 = simd_or(tmp155, tmp154);
        struct_Lu.cc = simd_or(tmp156, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_9b = simd_and(tmp16, tmp151);
        tmp157 = simd_or(simd_and(basis_bits.bit_3, tmp6), simd_andc(tmp46, basis_bits.bit_3));
        bytetest_a2_ba = simd_and(tmp50, tmp157);
        tmp158 = simd_and(tmp153, bytetest_a2_ba);
        struct_Lu.cc = simd_or(tmp158, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_9c = simd_and(tmp16, tmp54);
        tmp159 = simd_and(basis_bits.bit_3, tmp91);
        tmp160 = simd_not(tmp159);
        tmp161 = simd_and(basis_bits.bit_3, tmp17);
        tmp162 = simd_or(simd_and(basis_bits.bit_2, tmp160), simd_andc(tmp161, basis_bits.bit_2));
        bytetest_9c_b4 = simd_and(tmp14, tmp162);
        tmp163 = simd_and(tmp29, bytetest_9c);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(tmp163, carryQ.get_carry_in(15), tmp164));
        tmp165 = simd_and(tmp164, bytetest_9c_b4);
        struct_Lu.cc = simd_or(tmp165, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_9d = simd_and(tmp16, tmp19);
        tmp166 = simd_and(tmp17, tmp3);
        tmp167 = simd_or(basis_bits.bit_3, tmp166);
        tmp168 = simd_not(tmp167);
        tmp169 = simd_or(simd_and(basis_bits.bit_2, tmp168), simd_andc(tmp139, basis_bits.bit_2));
        bytetest_96_ae = simd_and(tmp14, tmp169);
        tmp170 = simd_and(tmp29, bytetest_9d);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(tmp170, carryQ.get_carry_in(16), tmp171));
        tmp172 = simd_and(tmp171, bytetest_96_ae);
        struct_Lu.cc = simd_or(tmp172, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        tmp173 = simd_and(tmp17, tmp44);
        bytetest_9e = simd_and(tmp16, tmp173);
        tmp174 = simd_or(basis_bits.bit_5, tmp8);
        tmp175 = simd_and(basis_bits.bit_4, tmp174);
        tmp176 = simd_or(basis_bits.bit_3, tmp175);
        tmp177 = simd_not(tmp176);
        tmp178 = simd_or(simd_and(basis_bits.bit_2, tmp177), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
        bytetest_90_a8 = simd_and(tmp14, tmp178);
        tmp179 = simd_and(tmp29, bytetest_9e);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(tmp179, carryQ.get_carry_in(17), tmp180));
        tmp181 = simd_and(tmp180, bytetest_90_a8);
        struct_Lu.cc = simd_or(tmp181, struct_Lu.cc);
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_9d = simd_and(tmp16, tmp19);
        bytetest_9f = simd_and(tmp16, tmp166);
        bytetest_8a_8a = simd_and(tmp35, tmp145);
        tmp182 = simd_and(tmp29, bytetest_9f);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(tmp182, carryQ.get_carry_in(18), tmp183));
        tmp184 = simd_and(tmp183, bytetest_8a_8a);
        struct_Lu.cc = simd_or(tmp184, struct_Lu.cc);
        tmp185 = simd_andc(tmp11, basis_bits.bit_2);
        bytetest_c2_df = simd_and(tmp185, tmp132);
        if ((bitblock::any(bytetest_c2_df) || carryQ.CarryTest(19, 16))) {
          r80_7ff_tmp1 = simd_andc(tmp11, tmp34);
          bytetest_c3 = simd_and(r80_7ff_tmp1, tmp74);
          r80_7ff_tmp2 = simd_or(basis_bits.bit_4, tmp87);
          r80_7ff_tmp3 = simd_and(basis_bits.bit_3, r80_7ff_tmp2);
          bytetest_80_96 = simd_andc(tmp20, r80_7ff_tmp3);
          r80_7ff_tmp4 = simd_and(tmp25, bytetest_c3);
          carryQ.cq[19] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp4, carryQ.get_carry_in(19), r80_7ff_tmp5));
          r80_7ff_tmp6 = simd_and(r80_7ff_tmp5, bytetest_80_96);
          struct_Lu.cc = simd_or(r80_7ff_tmp6, struct_Lu.cc);
          bytetest_c3 = simd_and(r80_7ff_tmp1, tmp74);
          r80_7ff_tmp7 = simd_and(tmp16, basis_bits.bit_4);
          bytetest_98_9e = simd_andc(r80_7ff_tmp7, tmp87);
          r80_7ff_tmp8 = simd_and(r80_7ff_tmp5, bytetest_98_9e);
          struct_Lu.cc = simd_or(r80_7ff_tmp8, struct_Lu.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp81);
          bytetest_80_80 = simd_andc(tmp35, tmp9);
          r80_7ff_tmp9 = simd_and(tmp25, bytetest_c4);
          carryQ.cq[20] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp9, carryQ.get_carry_in(20), r80_7ff_tmp10));
          r80_7ff_tmp11 = simd_and(r80_7ff_tmp10, bytetest_80_80);
          struct_Lu.cc = simd_or(r80_7ff_tmp11, struct_Lu.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp81);
          bytetest_82_82 = simd_and(tmp35, tmp45);
          r80_7ff_tmp12 = simd_and(r80_7ff_tmp10, bytetest_82_82);
          struct_Lu.cc = simd_or(r80_7ff_tmp12, struct_Lu.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp81);
          bytetest_84_84 = simd_and(tmp35, tmp81);
          r80_7ff_tmp13 = simd_and(r80_7ff_tmp10, bytetest_84_84);
          struct_Lu.cc = simd_or(r80_7ff_tmp13, struct_Lu.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp81);
          bytetest_86_86 = simd_and(tmp35, tmp111);
          r80_7ff_tmp14 = simd_and(r80_7ff_tmp10, bytetest_86_86);
          struct_Lu.cc = simd_or(r80_7ff_tmp14, struct_Lu.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp81);
          bytetest_88_88 = simd_and(tmp35, tmp131);
          r80_7ff_tmp15 = simd_and(r80_7ff_tmp10, bytetest_88_88);
          struct_Lu.cc = simd_or(r80_7ff_tmp15, struct_Lu.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp81);
          bytetest_8a_8a = simd_and(tmp35, tmp145);
          r80_7ff_tmp16 = simd_and(r80_7ff_tmp10, bytetest_8a_8a);
          struct_Lu.cc = simd_or(r80_7ff_tmp16, struct_Lu.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp81);
          bytetest_8c_8c = simd_and(tmp35, tmp54);
          r80_7ff_tmp17 = simd_and(r80_7ff_tmp10, bytetest_8c_8c);
          struct_Lu.cc = simd_or(r80_7ff_tmp17, struct_Lu.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp81);
          bytetest_8e_8e = simd_and(tmp35, tmp173);
          r80_7ff_tmp18 = simd_and(r80_7ff_tmp10, bytetest_8e_8e);
          struct_Lu.cc = simd_or(r80_7ff_tmp18, struct_Lu.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp81);
          bytetest_90_90 = simd_andc(tmp16, tmp9);
          r80_7ff_tmp19 = simd_and(r80_7ff_tmp10, bytetest_90_90);
          struct_Lu.cc = simd_or(r80_7ff_tmp19, struct_Lu.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp81);
          bytetest_92_92 = simd_and(tmp16, tmp45);
          r80_7ff_tmp20 = simd_and(r80_7ff_tmp10, bytetest_92_92);
          struct_Lu.cc = simd_or(r80_7ff_tmp20, struct_Lu.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp81);
          bytetest_94_94 = simd_and(tmp16, tmp81);
          r80_7ff_tmp21 = simd_and(r80_7ff_tmp10, bytetest_94_94);
          struct_Lu.cc = simd_or(r80_7ff_tmp21, struct_Lu.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp81);
          bytetest_96_96 = simd_and(tmp16, tmp111);
          r80_7ff_tmp22 = simd_and(r80_7ff_tmp10, bytetest_96_96);
          struct_Lu.cc = simd_or(r80_7ff_tmp22, struct_Lu.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp81);
          bytetest_98_98 = simd_and(tmp16, tmp131);
          r80_7ff_tmp23 = simd_and(r80_7ff_tmp10, bytetest_98_98);
          struct_Lu.cc = simd_or(r80_7ff_tmp23, struct_Lu.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp81);
          bytetest_9a_9a = simd_and(tmp16, tmp145);
          r80_7ff_tmp24 = simd_and(r80_7ff_tmp10, bytetest_9a_9a);
          struct_Lu.cc = simd_or(r80_7ff_tmp24, struct_Lu.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp81);
          bytetest_9c_9c = simd_and(tmp16, tmp54);
          r80_7ff_tmp25 = simd_and(r80_7ff_tmp10, bytetest_9c_9c);
          struct_Lu.cc = simd_or(r80_7ff_tmp25, struct_Lu.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp81);
          bytetest_9e_9e = simd_and(tmp16, tmp173);
          r80_7ff_tmp26 = simd_and(r80_7ff_tmp10, bytetest_9e_9e);
          struct_Lu.cc = simd_or(r80_7ff_tmp26, struct_Lu.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp81);
          bytetest_a0_a0 = simd_andc(tmp59, tmp9);
          r80_7ff_tmp27 = simd_and(r80_7ff_tmp10, bytetest_a0_a0);
          struct_Lu.cc = simd_or(r80_7ff_tmp27, struct_Lu.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp81);
          bytetest_a2_a2 = simd_and(tmp59, tmp45);
          r80_7ff_tmp28 = simd_and(r80_7ff_tmp10, bytetest_a2_a2);
          struct_Lu.cc = simd_or(r80_7ff_tmp28, struct_Lu.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp81);
          bytetest_a4_a4 = simd_and(tmp59, tmp81);
          r80_7ff_tmp29 = simd_and(r80_7ff_tmp10, bytetest_a4_a4);
          struct_Lu.cc = simd_or(r80_7ff_tmp29, struct_Lu.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp81);
          bytetest_a6_a6 = simd_and(tmp59, tmp111);
          r80_7ff_tmp30 = simd_and(r80_7ff_tmp10, bytetest_a6_a6);
          struct_Lu.cc = simd_or(r80_7ff_tmp30, struct_Lu.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp81);
          bytetest_a8_a8 = simd_and(tmp59, tmp131);
          r80_7ff_tmp31 = simd_and(r80_7ff_tmp10, bytetest_a8_a8);
          struct_Lu.cc = simd_or(r80_7ff_tmp31, struct_Lu.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp81);
          bytetest_aa_aa = simd_and(tmp59, tmp145);
          r80_7ff_tmp32 = simd_and(r80_7ff_tmp10, bytetest_aa_aa);
          struct_Lu.cc = simd_or(r80_7ff_tmp32, struct_Lu.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp81);
          bytetest_ac_ac = simd_and(tmp59, tmp54);
          r80_7ff_tmp33 = simd_and(r80_7ff_tmp10, bytetest_ac_ac);
          struct_Lu.cc = simd_or(r80_7ff_tmp33, struct_Lu.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp81);
          bytetest_ae_ae = simd_and(tmp59, tmp173);
          r80_7ff_tmp34 = simd_and(r80_7ff_tmp10, bytetest_ae_ae);
          struct_Lu.cc = simd_or(r80_7ff_tmp34, struct_Lu.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp81);
          bytetest_b0_b0 = simd_andc(bytetest_b0_bf, tmp9);
          r80_7ff_tmp35 = simd_and(r80_7ff_tmp10, bytetest_b0_b0);
          struct_Lu.cc = simd_or(r80_7ff_tmp35, struct_Lu.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp81);
          bytetest_b2_b2 = simd_and(bytetest_b0_bf, tmp45);
          r80_7ff_tmp36 = simd_and(r80_7ff_tmp10, bytetest_b2_b2);
          struct_Lu.cc = simd_or(r80_7ff_tmp36, struct_Lu.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp81);
          bytetest_b4_b4 = simd_and(bytetest_b0_bf, tmp81);
          r80_7ff_tmp37 = simd_and(r80_7ff_tmp10, bytetest_b4_b4);
          struct_Lu.cc = simd_or(r80_7ff_tmp37, struct_Lu.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp81);
          bytetest_b6_b6 = simd_and(bytetest_b0_bf, tmp111);
          r80_7ff_tmp38 = simd_and(r80_7ff_tmp10, bytetest_b6_b6);
          struct_Lu.cc = simd_or(r80_7ff_tmp38, struct_Lu.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp81);
          bytetest_b9_b9 = simd_and(bytetest_b0_bf, tmp138);
          r80_7ff_tmp39 = simd_and(r80_7ff_tmp10, bytetest_b9_b9);
          struct_Lu.cc = simd_or(r80_7ff_tmp39, struct_Lu.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp81);
          bytetest_bb_bb = simd_and(bytetest_b0_bf, tmp151);
          r80_7ff_tmp40 = simd_and(r80_7ff_tmp10, bytetest_bb_bb);
          struct_Lu.cc = simd_or(r80_7ff_tmp40, struct_Lu.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp81);
          bytetest_bd_bd = simd_and(bytetest_b0_bf, tmp19);
          r80_7ff_tmp41 = simd_and(r80_7ff_tmp10, bytetest_bd_bd);
          struct_Lu.cc = simd_or(r80_7ff_tmp41, struct_Lu.cc);
          bytetest_c4 = simd_and(r80_7ff_tmp1, tmp81);
          bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp166);
          r80_7ff_tmp42 = simd_and(r80_7ff_tmp10, bytetest_bf_bf);
          struct_Lu.cc = simd_or(r80_7ff_tmp42, struct_Lu.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp106);
          bytetest_81_81 = simd_and(tmp35, tmp33);
          r80_7ff_tmp43 = simd_and(tmp25, bytetest_c5);
          carryQ.cq[21] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp43, carryQ.get_carry_in(21), r80_7ff_tmp44));
          r80_7ff_tmp45 = simd_and(r80_7ff_tmp44, bytetest_81_81);
          struct_Lu.cc = simd_or(r80_7ff_tmp45, struct_Lu.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp106);
          bytetest_83_83 = simd_and(tmp35, tmp74);
          r80_7ff_tmp46 = simd_and(r80_7ff_tmp44, bytetest_83_83);
          struct_Lu.cc = simd_or(r80_7ff_tmp46, struct_Lu.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp106);
          bytetest_85_85 = simd_and(tmp35, tmp106);
          r80_7ff_tmp47 = simd_and(r80_7ff_tmp44, bytetest_85_85);
          struct_Lu.cc = simd_or(r80_7ff_tmp47, struct_Lu.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp106);
          bytetest_87_87 = simd_and(tmp35, tmp123);
          r80_7ff_tmp48 = simd_and(r80_7ff_tmp44, bytetest_87_87);
          struct_Lu.cc = simd_or(r80_7ff_tmp48, struct_Lu.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp106);
          bytetest_8a_8a = simd_and(tmp35, tmp145);
          r80_7ff_tmp49 = simd_and(r80_7ff_tmp44, bytetest_8a_8a);
          struct_Lu.cc = simd_or(r80_7ff_tmp49, struct_Lu.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp106);
          bytetest_8c_8c = simd_and(tmp35, tmp54);
          r80_7ff_tmp50 = simd_and(r80_7ff_tmp44, bytetest_8c_8c);
          struct_Lu.cc = simd_or(r80_7ff_tmp50, struct_Lu.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp106);
          bytetest_8e_8e = simd_and(tmp35, tmp173);
          r80_7ff_tmp51 = simd_and(r80_7ff_tmp44, bytetest_8e_8e);
          struct_Lu.cc = simd_or(r80_7ff_tmp51, struct_Lu.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp106);
          bytetest_90_90 = simd_andc(tmp16, tmp9);
          r80_7ff_tmp52 = simd_and(r80_7ff_tmp44, bytetest_90_90);
          struct_Lu.cc = simd_or(r80_7ff_tmp52, struct_Lu.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp106);
          bytetest_92_92 = simd_and(tmp16, tmp45);
          r80_7ff_tmp53 = simd_and(r80_7ff_tmp44, bytetest_92_92);
          struct_Lu.cc = simd_or(r80_7ff_tmp53, struct_Lu.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp106);
          bytetest_94_94 = simd_and(tmp16, tmp81);
          r80_7ff_tmp54 = simd_and(r80_7ff_tmp44, bytetest_94_94);
          struct_Lu.cc = simd_or(r80_7ff_tmp54, struct_Lu.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp106);
          bytetest_96_96 = simd_and(tmp16, tmp111);
          r80_7ff_tmp55 = simd_and(r80_7ff_tmp44, bytetest_96_96);
          struct_Lu.cc = simd_or(r80_7ff_tmp55, struct_Lu.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp106);
          bytetest_98_98 = simd_and(tmp16, tmp131);
          r80_7ff_tmp56 = simd_and(r80_7ff_tmp44, bytetest_98_98);
          struct_Lu.cc = simd_or(r80_7ff_tmp56, struct_Lu.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp106);
          bytetest_9a_9a = simd_and(tmp16, tmp145);
          r80_7ff_tmp57 = simd_and(r80_7ff_tmp44, bytetest_9a_9a);
          struct_Lu.cc = simd_or(r80_7ff_tmp57, struct_Lu.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp106);
          bytetest_9c_9c = simd_and(tmp16, tmp54);
          r80_7ff_tmp58 = simd_and(r80_7ff_tmp44, bytetest_9c_9c);
          struct_Lu.cc = simd_or(r80_7ff_tmp58, struct_Lu.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp106);
          bytetest_9e_9e = simd_and(tmp16, tmp173);
          r80_7ff_tmp59 = simd_and(r80_7ff_tmp44, bytetest_9e_9e);
          struct_Lu.cc = simd_or(r80_7ff_tmp59, struct_Lu.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp106);
          bytetest_a0_a0 = simd_andc(tmp59, tmp9);
          r80_7ff_tmp60 = simd_and(r80_7ff_tmp44, bytetest_a0_a0);
          struct_Lu.cc = simd_or(r80_7ff_tmp60, struct_Lu.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp106);
          bytetest_a2_a2 = simd_and(tmp59, tmp45);
          r80_7ff_tmp61 = simd_and(r80_7ff_tmp44, bytetest_a2_a2);
          struct_Lu.cc = simd_or(r80_7ff_tmp61, struct_Lu.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp106);
          bytetest_a4_a4 = simd_and(tmp59, tmp81);
          r80_7ff_tmp62 = simd_and(r80_7ff_tmp44, bytetest_a4_a4);
          struct_Lu.cc = simd_or(r80_7ff_tmp62, struct_Lu.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp106);
          bytetest_a6_a6 = simd_and(tmp59, tmp111);
          r80_7ff_tmp63 = simd_and(r80_7ff_tmp44, bytetest_a6_a6);
          struct_Lu.cc = simd_or(r80_7ff_tmp63, struct_Lu.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp106);
          bytetest_a8_a8 = simd_and(tmp59, tmp131);
          r80_7ff_tmp64 = simd_and(r80_7ff_tmp44, bytetest_a8_a8);
          struct_Lu.cc = simd_or(r80_7ff_tmp64, struct_Lu.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp106);
          bytetest_aa_aa = simd_and(tmp59, tmp145);
          r80_7ff_tmp65 = simd_and(r80_7ff_tmp44, bytetest_aa_aa);
          struct_Lu.cc = simd_or(r80_7ff_tmp65, struct_Lu.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp106);
          bytetest_ac_ac = simd_and(tmp59, tmp54);
          r80_7ff_tmp66 = simd_and(r80_7ff_tmp44, bytetest_ac_ac);
          struct_Lu.cc = simd_or(r80_7ff_tmp66, struct_Lu.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp106);
          bytetest_ae_ae = simd_and(tmp59, tmp173);
          r80_7ff_tmp67 = simd_and(r80_7ff_tmp44, bytetest_ae_ae);
          struct_Lu.cc = simd_or(r80_7ff_tmp67, struct_Lu.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp106);
          bytetest_b0_b0 = simd_andc(bytetest_b0_bf, tmp9);
          r80_7ff_tmp68 = simd_and(r80_7ff_tmp44, bytetest_b0_b0);
          struct_Lu.cc = simd_or(r80_7ff_tmp68, struct_Lu.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp106);
          bytetest_b2_b2 = simd_and(bytetest_b0_bf, tmp45);
          r80_7ff_tmp69 = simd_and(r80_7ff_tmp44, bytetest_b2_b2);
          struct_Lu.cc = simd_or(r80_7ff_tmp69, struct_Lu.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp106);
          bytetest_b4_b4 = simd_and(bytetest_b0_bf, tmp81);
          r80_7ff_tmp70 = simd_and(r80_7ff_tmp44, bytetest_b4_b4);
          struct_Lu.cc = simd_or(r80_7ff_tmp70, struct_Lu.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp106);
          bytetest_b6_b6 = simd_and(bytetest_b0_bf, tmp111);
          r80_7ff_tmp71 = simd_and(r80_7ff_tmp44, bytetest_b6_b6);
          struct_Lu.cc = simd_or(r80_7ff_tmp71, struct_Lu.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp106);
          bytetest_b8_b9 = simd_and(bytetest_b0_bf, tmp100);
          r80_7ff_tmp72 = simd_and(r80_7ff_tmp44, bytetest_b8_b9);
          struct_Lu.cc = simd_or(r80_7ff_tmp72, struct_Lu.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp106);
          bytetest_bb_bb = simd_and(bytetest_b0_bf, tmp151);
          r80_7ff_tmp73 = simd_and(r80_7ff_tmp44, bytetest_bb_bb);
          struct_Lu.cc = simd_or(r80_7ff_tmp73, struct_Lu.cc);
          bytetest_c5 = simd_and(r80_7ff_tmp1, tmp106);
          bytetest_bd_bd = simd_and(bytetest_b0_bf, tmp19);
          r80_7ff_tmp74 = simd_and(r80_7ff_tmp44, bytetest_bd_bd);
          struct_Lu.cc = simd_or(r80_7ff_tmp74, struct_Lu.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp111);
          r80_7ff_tmp75 = simd_andc(tmp35, tmp7);
          bytetest_81_82 = simd_and(r80_7ff_tmp75, tmp64);
          r80_7ff_tmp76 = simd_and(tmp25, bytetest_c6);
          carryQ.cq[22] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp76, carryQ.get_carry_in(22), r80_7ff_tmp77));
          r80_7ff_tmp78 = simd_and(r80_7ff_tmp77, bytetest_81_82);
          struct_Lu.cc = simd_or(r80_7ff_tmp78, struct_Lu.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_84_84 = simd_and(tmp35, tmp81);
          r80_7ff_tmp79 = simd_and(r80_7ff_tmp77, bytetest_84_84);
          struct_Lu.cc = simd_or(r80_7ff_tmp79, struct_Lu.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp111);
          r80_7ff_tmp80 = simd_and(tmp61, basis_bits.bit_6);
          bytetest_86_87 = simd_and(tmp35, r80_7ff_tmp80);
          r80_7ff_tmp81 = simd_and(r80_7ff_tmp77, bytetest_86_87);
          struct_Lu.cc = simd_or(r80_7ff_tmp81, struct_Lu.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp111);
          r80_7ff_tmp82 = simd_and(tmp35, tmp99);
          bytetest_89_8b = simd_and(r80_7ff_tmp82, tmp8);
          r80_7ff_tmp83 = simd_and(r80_7ff_tmp77, bytetest_89_8b);
          struct_Lu.cc = simd_or(r80_7ff_tmp83, struct_Lu.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp111);
          r80_7ff_tmp84 = simd_not(tmp46);
          r80_7ff_tmp85 = simd_or(simd_and(basis_bits.bit_3, r80_7ff_tmp84), simd_andc(tmp56, basis_bits.bit_3));
          bytetest_8e_91 = simd_and(tmp20, r80_7ff_tmp85);
          r80_7ff_tmp86 = simd_and(r80_7ff_tmp77, bytetest_8e_91);
          struct_Lu.cc = simd_or(r80_7ff_tmp86, struct_Lu.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp111);
          r80_7ff_tmp87 = simd_andc(tmp16, basis_bits.bit_4);
          r80_7ff_tmp88 = simd_or(simd_and(basis_bits.bit_5, tmp67), simd_andc(tmp3, basis_bits.bit_5));
          bytetest_93_94 = simd_and(r80_7ff_tmp87, r80_7ff_tmp88);
          r80_7ff_tmp89 = simd_and(r80_7ff_tmp77, bytetest_93_94);
          struct_Lu.cc = simd_or(r80_7ff_tmp89, struct_Lu.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp111);
          r80_7ff_tmp90 = simd_not(tmp174);
          r80_7ff_tmp91 = simd_or(simd_and(basis_bits.bit_4, r80_7ff_tmp90), simd_andc(tmp36, basis_bits.bit_4));
          bytetest_96_98 = simd_and(tmp16, r80_7ff_tmp91);
          r80_7ff_tmp92 = simd_and(r80_7ff_tmp77, bytetest_96_98);
          struct_Lu.cc = simd_or(r80_7ff_tmp92, struct_Lu.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp111);
          r80_7ff_tmp93 = simd_andc(tmp17, basis_bits.bit_6);
          bytetest_9c_9d = simd_and(tmp16, r80_7ff_tmp93);
          r80_7ff_tmp94 = simd_and(r80_7ff_tmp77, bytetest_9c_9d);
          struct_Lu.cc = simd_or(r80_7ff_tmp94, struct_Lu.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp111);
          r80_7ff_tmp95 = simd_or(basis_bits.bit_3, tmp9);
          r80_7ff_tmp96 = simd_not(r80_7ff_tmp95);
          r80_7ff_tmp97 = simd_and(basis_bits.bit_3, tmp166);
          r80_7ff_tmp98 = simd_or(simd_and(basis_bits.bit_2, r80_7ff_tmp96), simd_andc(r80_7ff_tmp97, basis_bits.bit_2));
          bytetest_9f_a0 = simd_and(tmp14, r80_7ff_tmp98);
          r80_7ff_tmp99 = simd_and(r80_7ff_tmp77, bytetest_9f_a0);
          struct_Lu.cc = simd_or(r80_7ff_tmp99, struct_Lu.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_a2_a2 = simd_and(tmp59, tmp45);
          r80_7ff_tmp100 = simd_and(r80_7ff_tmp77, bytetest_a2_a2);
          struct_Lu.cc = simd_or(r80_7ff_tmp100, struct_Lu.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_a4_a4 = simd_and(tmp59, tmp81);
          r80_7ff_tmp101 = simd_and(r80_7ff_tmp77, bytetest_a4_a4);
          struct_Lu.cc = simd_or(r80_7ff_tmp101, struct_Lu.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_a6_a7 = simd_and(tmp59, r80_7ff_tmp80);
          r80_7ff_tmp102 = simd_and(r80_7ff_tmp77, bytetest_a6_a7);
          struct_Lu.cc = simd_or(r80_7ff_tmp102, struct_Lu.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_a9_a9 = simd_and(tmp59, tmp138);
          r80_7ff_tmp103 = simd_and(r80_7ff_tmp77, bytetest_a9_a9);
          struct_Lu.cc = simd_or(r80_7ff_tmp103, struct_Lu.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_ac_ac = simd_and(tmp59, tmp54);
          r80_7ff_tmp104 = simd_and(r80_7ff_tmp77, bytetest_ac_ac);
          struct_Lu.cc = simd_or(r80_7ff_tmp104, struct_Lu.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_ae_af = simd_and(tmp59, tmp56);
          r80_7ff_tmp105 = simd_and(r80_7ff_tmp77, bytetest_ae_af);
          struct_Lu.cc = simd_or(r80_7ff_tmp105, struct_Lu.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp111);
          r80_7ff_tmp106 = simd_andc(bytetest_b0_bf, tmp7);
          bytetest_b1_b3 = simd_and(r80_7ff_tmp106, tmp8);
          r80_7ff_tmp107 = simd_and(r80_7ff_tmp77, bytetest_b1_b3);
          struct_Lu.cc = simd_or(r80_7ff_tmp107, struct_Lu.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp106);
          r80_7ff_tmp108 = simd_and(r80_7ff_tmp77, bytetest_b5_b5);
          struct_Lu.cc = simd_or(r80_7ff_tmp108, struct_Lu.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp111);
          r80_7ff_tmp109 = simd_or(simd_and(basis_bits.bit_4, r80_7ff_tmp90), simd_andc(tmp87, basis_bits.bit_4));
          bytetest_b7_b8 = simd_and(bytetest_b0_bf, r80_7ff_tmp109);
          r80_7ff_tmp110 = simd_and(r80_7ff_tmp77, bytetest_b7_b8);
          struct_Lu.cc = simd_or(r80_7ff_tmp110, struct_Lu.cc);
          bytetest_c6 = simd_and(r80_7ff_tmp1, tmp111);
          bytetest_bc_bc = simd_and(bytetest_b0_bf, tmp54);
          r80_7ff_tmp111 = simd_and(r80_7ff_tmp77, bytetest_bc_bc);
          struct_Lu.cc = simd_or(r80_7ff_tmp111, struct_Lu.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp123);
          bytetest_84_84 = simd_and(tmp35, tmp81);
          r80_7ff_tmp112 = simd_and(tmp25, bytetest_c7);
          carryQ.cq[23] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp112, carryQ.get_carry_in(23), r80_7ff_tmp113));
          r80_7ff_tmp114 = simd_and(r80_7ff_tmp113, bytetest_84_84);
          struct_Lu.cc = simd_or(r80_7ff_tmp114, struct_Lu.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp123);
          bytetest_87_87 = simd_and(tmp35, tmp123);
          r80_7ff_tmp115 = simd_and(r80_7ff_tmp113, bytetest_87_87);
          struct_Lu.cc = simd_or(r80_7ff_tmp115, struct_Lu.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp123);
          bytetest_8a_8a = simd_and(tmp35, tmp145);
          r80_7ff_tmp116 = simd_and(r80_7ff_tmp113, bytetest_8a_8a);
          struct_Lu.cc = simd_or(r80_7ff_tmp116, struct_Lu.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp123);
          bytetest_8d_8d = simd_and(tmp35, tmp19);
          r80_7ff_tmp117 = simd_and(r80_7ff_tmp113, bytetest_8d_8d);
          struct_Lu.cc = simd_or(r80_7ff_tmp117, struct_Lu.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp123);
          bytetest_8f_8f = simd_and(tmp35, tmp166);
          r80_7ff_tmp118 = simd_and(r80_7ff_tmp113, bytetest_8f_8f);
          struct_Lu.cc = simd_or(r80_7ff_tmp118, struct_Lu.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp123);
          bytetest_91_91 = simd_and(tmp16, tmp33);
          r80_7ff_tmp119 = simd_and(r80_7ff_tmp113, bytetest_91_91);
          struct_Lu.cc = simd_or(r80_7ff_tmp119, struct_Lu.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp123);
          bytetest_93_93 = simd_and(tmp16, tmp74);
          r80_7ff_tmp120 = simd_and(r80_7ff_tmp113, bytetest_93_93);
          struct_Lu.cc = simd_or(r80_7ff_tmp120, struct_Lu.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp123);
          bytetest_95_95 = simd_and(tmp16, tmp106);
          r80_7ff_tmp121 = simd_and(r80_7ff_tmp113, bytetest_95_95);
          struct_Lu.cc = simd_or(r80_7ff_tmp121, struct_Lu.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp123);
          bytetest_97_97 = simd_and(tmp16, tmp123);
          r80_7ff_tmp122 = simd_and(r80_7ff_tmp113, bytetest_97_97);
          struct_Lu.cc = simd_or(r80_7ff_tmp122, struct_Lu.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp123);
          bytetest_99_99 = simd_and(tmp16, tmp138);
          r80_7ff_tmp123 = simd_and(r80_7ff_tmp113, bytetest_99_99);
          struct_Lu.cc = simd_or(r80_7ff_tmp123, struct_Lu.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp123);
          bytetest_9b_9b = simd_and(tmp16, tmp151);
          r80_7ff_tmp124 = simd_and(r80_7ff_tmp113, bytetest_9b_9b);
          struct_Lu.cc = simd_or(r80_7ff_tmp124, struct_Lu.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp123);
          bytetest_9e_9e = simd_and(tmp16, tmp173);
          r80_7ff_tmp125 = simd_and(r80_7ff_tmp113, bytetest_9e_9e);
          struct_Lu.cc = simd_or(r80_7ff_tmp125, struct_Lu.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp123);
          bytetest_a0_a0 = simd_andc(tmp59, tmp9);
          r80_7ff_tmp126 = simd_and(r80_7ff_tmp113, bytetest_a0_a0);
          struct_Lu.cc = simd_or(r80_7ff_tmp126, struct_Lu.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp123);
          bytetest_a2_a2 = simd_and(tmp59, tmp45);
          r80_7ff_tmp127 = simd_and(r80_7ff_tmp113, bytetest_a2_a2);
          struct_Lu.cc = simd_or(r80_7ff_tmp127, struct_Lu.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp123);
          bytetest_a4_a4 = simd_and(tmp59, tmp81);
          r80_7ff_tmp128 = simd_and(r80_7ff_tmp113, bytetest_a4_a4);
          struct_Lu.cc = simd_or(r80_7ff_tmp128, struct_Lu.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp123);
          bytetest_a6_a6 = simd_and(tmp59, tmp111);
          r80_7ff_tmp129 = simd_and(r80_7ff_tmp113, bytetest_a6_a6);
          struct_Lu.cc = simd_or(r80_7ff_tmp129, struct_Lu.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp123);
          bytetest_a8_a8 = simd_and(tmp59, tmp131);
          r80_7ff_tmp130 = simd_and(r80_7ff_tmp113, bytetest_a8_a8);
          struct_Lu.cc = simd_or(r80_7ff_tmp130, struct_Lu.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp123);
          bytetest_aa_aa = simd_and(tmp59, tmp145);
          r80_7ff_tmp131 = simd_and(r80_7ff_tmp113, bytetest_aa_aa);
          struct_Lu.cc = simd_or(r80_7ff_tmp131, struct_Lu.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp123);
          bytetest_ac_ac = simd_and(tmp59, tmp54);
          r80_7ff_tmp132 = simd_and(r80_7ff_tmp113, bytetest_ac_ac);
          struct_Lu.cc = simd_or(r80_7ff_tmp132, struct_Lu.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp123);
          bytetest_ae_ae = simd_and(tmp59, tmp173);
          r80_7ff_tmp133 = simd_and(r80_7ff_tmp113, bytetest_ae_ae);
          struct_Lu.cc = simd_or(r80_7ff_tmp133, struct_Lu.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp123);
          bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp33);
          r80_7ff_tmp134 = simd_and(r80_7ff_tmp113, bytetest_b1_b1);
          struct_Lu.cc = simd_or(r80_7ff_tmp134, struct_Lu.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp123);
          bytetest_b4_b4 = simd_and(bytetest_b0_bf, tmp81);
          r80_7ff_tmp135 = simd_and(r80_7ff_tmp113, bytetest_b4_b4);
          struct_Lu.cc = simd_or(r80_7ff_tmp135, struct_Lu.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp123);
          bytetest_b6_b8 = simd_and(bytetest_b0_bf, r80_7ff_tmp91);
          r80_7ff_tmp136 = simd_and(r80_7ff_tmp113, bytetest_b6_b8);
          struct_Lu.cc = simd_or(r80_7ff_tmp136, struct_Lu.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp123);
          bytetest_ba_ba = simd_and(bytetest_b0_bf, tmp145);
          r80_7ff_tmp137 = simd_and(r80_7ff_tmp113, bytetest_ba_ba);
          struct_Lu.cc = simd_or(r80_7ff_tmp137, struct_Lu.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp123);
          bytetest_bc_bc = simd_and(bytetest_b0_bf, tmp54);
          r80_7ff_tmp138 = simd_and(r80_7ff_tmp113, bytetest_bc_bc);
          struct_Lu.cc = simd_or(r80_7ff_tmp138, struct_Lu.cc);
          bytetest_c7 = simd_and(r80_7ff_tmp1, tmp123);
          bytetest_be_be = simd_and(bytetest_b0_bf, tmp173);
          r80_7ff_tmp139 = simd_and(r80_7ff_tmp113, bytetest_be_be);
          struct_Lu.cc = simd_or(r80_7ff_tmp139, struct_Lu.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp131);
          bytetest_80_80 = simd_andc(tmp35, tmp9);
          r80_7ff_tmp140 = simd_and(tmp25, bytetest_c8);
          carryQ.cq[24] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp140, carryQ.get_carry_in(24), r80_7ff_tmp141));
          r80_7ff_tmp142 = simd_and(r80_7ff_tmp141, bytetest_80_80);
          struct_Lu.cc = simd_or(r80_7ff_tmp142, struct_Lu.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp131);
          bytetest_82_82 = simd_and(tmp35, tmp45);
          r80_7ff_tmp143 = simd_and(r80_7ff_tmp141, bytetest_82_82);
          struct_Lu.cc = simd_or(r80_7ff_tmp143, struct_Lu.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp131);
          bytetest_84_84 = simd_and(tmp35, tmp81);
          r80_7ff_tmp144 = simd_and(r80_7ff_tmp141, bytetest_84_84);
          struct_Lu.cc = simd_or(r80_7ff_tmp144, struct_Lu.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp131);
          bytetest_86_86 = simd_and(tmp35, tmp111);
          r80_7ff_tmp145 = simd_and(r80_7ff_tmp141, bytetest_86_86);
          struct_Lu.cc = simd_or(r80_7ff_tmp145, struct_Lu.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp131);
          bytetest_88_88 = simd_and(tmp35, tmp131);
          r80_7ff_tmp146 = simd_and(r80_7ff_tmp141, bytetest_88_88);
          struct_Lu.cc = simd_or(r80_7ff_tmp146, struct_Lu.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp131);
          bytetest_8a_8a = simd_and(tmp35, tmp145);
          r80_7ff_tmp147 = simd_and(r80_7ff_tmp141, bytetest_8a_8a);
          struct_Lu.cc = simd_or(r80_7ff_tmp147, struct_Lu.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp131);
          bytetest_8c_8c = simd_and(tmp35, tmp54);
          r80_7ff_tmp148 = simd_and(r80_7ff_tmp141, bytetest_8c_8c);
          struct_Lu.cc = simd_or(r80_7ff_tmp148, struct_Lu.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp131);
          bytetest_8e_8e = simd_and(tmp35, tmp173);
          r80_7ff_tmp149 = simd_and(r80_7ff_tmp141, bytetest_8e_8e);
          struct_Lu.cc = simd_or(r80_7ff_tmp149, struct_Lu.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp131);
          bytetest_90_90 = simd_andc(tmp16, tmp9);
          r80_7ff_tmp150 = simd_and(r80_7ff_tmp141, bytetest_90_90);
          struct_Lu.cc = simd_or(r80_7ff_tmp150, struct_Lu.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp131);
          bytetest_92_92 = simd_and(tmp16, tmp45);
          r80_7ff_tmp151 = simd_and(r80_7ff_tmp141, bytetest_92_92);
          struct_Lu.cc = simd_or(r80_7ff_tmp151, struct_Lu.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp131);
          bytetest_94_94 = simd_and(tmp16, tmp81);
          r80_7ff_tmp152 = simd_and(r80_7ff_tmp141, bytetest_94_94);
          struct_Lu.cc = simd_or(r80_7ff_tmp152, struct_Lu.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp131);
          bytetest_96_96 = simd_and(tmp16, tmp111);
          r80_7ff_tmp153 = simd_and(r80_7ff_tmp141, bytetest_96_96);
          struct_Lu.cc = simd_or(r80_7ff_tmp153, struct_Lu.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp131);
          bytetest_98_98 = simd_and(tmp16, tmp131);
          r80_7ff_tmp154 = simd_and(r80_7ff_tmp141, bytetest_98_98);
          struct_Lu.cc = simd_or(r80_7ff_tmp154, struct_Lu.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp131);
          bytetest_9a_9a = simd_and(tmp16, tmp145);
          r80_7ff_tmp155 = simd_and(r80_7ff_tmp141, bytetest_9a_9a);
          struct_Lu.cc = simd_or(r80_7ff_tmp155, struct_Lu.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp131);
          bytetest_9c_9c = simd_and(tmp16, tmp54);
          r80_7ff_tmp156 = simd_and(r80_7ff_tmp141, bytetest_9c_9c);
          struct_Lu.cc = simd_or(r80_7ff_tmp156, struct_Lu.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp131);
          bytetest_9e_9e = simd_and(tmp16, tmp173);
          r80_7ff_tmp157 = simd_and(r80_7ff_tmp141, bytetest_9e_9e);
          struct_Lu.cc = simd_or(r80_7ff_tmp157, struct_Lu.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp131);
          bytetest_a0_a0 = simd_andc(tmp59, tmp9);
          r80_7ff_tmp158 = simd_and(r80_7ff_tmp141, bytetest_a0_a0);
          struct_Lu.cc = simd_or(r80_7ff_tmp158, struct_Lu.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp131);
          bytetest_a2_a2 = simd_and(tmp59, tmp45);
          r80_7ff_tmp159 = simd_and(r80_7ff_tmp141, bytetest_a2_a2);
          struct_Lu.cc = simd_or(r80_7ff_tmp159, struct_Lu.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp131);
          bytetest_a4_a4 = simd_and(tmp59, tmp81);
          r80_7ff_tmp160 = simd_and(r80_7ff_tmp141, bytetest_a4_a4);
          struct_Lu.cc = simd_or(r80_7ff_tmp160, struct_Lu.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp131);
          bytetest_a6_a6 = simd_and(tmp59, tmp111);
          r80_7ff_tmp161 = simd_and(r80_7ff_tmp141, bytetest_a6_a6);
          struct_Lu.cc = simd_or(r80_7ff_tmp161, struct_Lu.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp131);
          bytetest_a8_a8 = simd_and(tmp59, tmp131);
          r80_7ff_tmp162 = simd_and(r80_7ff_tmp141, bytetest_a8_a8);
          struct_Lu.cc = simd_or(r80_7ff_tmp162, struct_Lu.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp131);
          bytetest_aa_aa = simd_and(tmp59, tmp145);
          r80_7ff_tmp163 = simd_and(r80_7ff_tmp141, bytetest_aa_aa);
          struct_Lu.cc = simd_or(r80_7ff_tmp163, struct_Lu.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp131);
          bytetest_ac_ac = simd_and(tmp59, tmp54);
          r80_7ff_tmp164 = simd_and(r80_7ff_tmp141, bytetest_ac_ac);
          struct_Lu.cc = simd_or(r80_7ff_tmp164, struct_Lu.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp131);
          bytetest_ae_ae = simd_and(tmp59, tmp173);
          r80_7ff_tmp165 = simd_and(r80_7ff_tmp141, bytetest_ae_ae);
          struct_Lu.cc = simd_or(r80_7ff_tmp165, struct_Lu.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp131);
          bytetest_b0_b0 = simd_andc(bytetest_b0_bf, tmp9);
          r80_7ff_tmp166 = simd_and(r80_7ff_tmp141, bytetest_b0_b0);
          struct_Lu.cc = simd_or(r80_7ff_tmp166, struct_Lu.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp131);
          bytetest_b2_b2 = simd_and(bytetest_b0_bf, tmp45);
          r80_7ff_tmp167 = simd_and(r80_7ff_tmp141, bytetest_b2_b2);
          struct_Lu.cc = simd_or(r80_7ff_tmp167, struct_Lu.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp131);
          r80_7ff_tmp168 = simd_and(tmp99, basis_bits.bit_6);
          bytetest_ba_bb = simd_and(bytetest_b0_bf, r80_7ff_tmp168);
          r80_7ff_tmp169 = simd_and(r80_7ff_tmp141, bytetest_ba_bb);
          struct_Lu.cc = simd_or(r80_7ff_tmp169, struct_Lu.cc);
          bytetest_c8 = simd_and(r80_7ff_tmp1, tmp131);
          r80_7ff_tmp170 = simd_and(bytetest_b0_bf, tmp17);
          bytetest_bd_be = simd_and(r80_7ff_tmp170, tmp64);
          r80_7ff_tmp171 = simd_and(r80_7ff_tmp141, bytetest_bd_be);
          struct_Lu.cc = simd_or(r80_7ff_tmp171, struct_Lu.cc);
          bytetest_c9 = simd_and(r80_7ff_tmp1, tmp138);
          bytetest_81_81 = simd_and(tmp35, tmp33);
          r80_7ff_tmp172 = simd_and(tmp25, bytetest_c9);
          carryQ.cq[25] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp172, carryQ.get_carry_in(25), r80_7ff_tmp173));
          r80_7ff_tmp174 = simd_and(r80_7ff_tmp173, bytetest_81_81);
          struct_Lu.cc = simd_or(r80_7ff_tmp174, struct_Lu.cc);
          bytetest_c9 = simd_and(r80_7ff_tmp1, tmp138);
          bytetest_83_86 = simd_and(tmp107, tmp104);
          r80_7ff_tmp175 = simd_and(r80_7ff_tmp173, bytetest_83_86);
          struct_Lu.cc = simd_or(r80_7ff_tmp175, struct_Lu.cc);
          bytetest_c9 = simd_and(r80_7ff_tmp1, tmp138);
          bytetest_88_88 = simd_and(tmp35, tmp131);
          r80_7ff_tmp176 = simd_and(r80_7ff_tmp173, bytetest_88_88);
          struct_Lu.cc = simd_or(r80_7ff_tmp176, struct_Lu.cc);
          bytetest_c9 = simd_and(r80_7ff_tmp1, tmp138);
          bytetest_8a_8a = simd_and(tmp35, tmp145);
          r80_7ff_tmp177 = simd_and(r80_7ff_tmp173, bytetest_8a_8a);
          struct_Lu.cc = simd_or(r80_7ff_tmp177, struct_Lu.cc);
          bytetest_c9 = simd_and(r80_7ff_tmp1, tmp138);
          bytetest_8c_8c = simd_and(tmp35, tmp54);
          r80_7ff_tmp178 = simd_and(r80_7ff_tmp173, bytetest_8c_8c);
          struct_Lu.cc = simd_or(r80_7ff_tmp178, struct_Lu.cc);
          bytetest_c9 = simd_and(r80_7ff_tmp1, tmp138);
          bytetest_8e_8e = simd_and(tmp35, tmp173);
          r80_7ff_tmp179 = simd_and(r80_7ff_tmp173, bytetest_8e_8e);
          struct_Lu.cc = simd_or(r80_7ff_tmp179, struct_Lu.cc);
          bytetest_cd = simd_and(r80_7ff_tmp1, tmp19);
          bytetest_b0_b0 = simd_andc(bytetest_b0_bf, tmp9);
          r80_7ff_tmp180 = simd_and(tmp25, bytetest_cd);
          carryQ.cq[26] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp180, carryQ.get_carry_in(26), r80_7ff_tmp181));
          r80_7ff_tmp182 = simd_and(r80_7ff_tmp181, bytetest_b0_b0);
          struct_Lu.cc = simd_or(r80_7ff_tmp182, struct_Lu.cc);
          bytetest_cd = simd_and(r80_7ff_tmp1, tmp19);
          bytetest_b2_b2 = simd_and(bytetest_b0_bf, tmp45);
          r80_7ff_tmp183 = simd_and(r80_7ff_tmp181, bytetest_b2_b2);
          struct_Lu.cc = simd_or(r80_7ff_tmp183, struct_Lu.cc);
          bytetest_cd = simd_and(r80_7ff_tmp1, tmp19);
          bytetest_b6_b6 = simd_and(bytetest_b0_bf, tmp111);
          r80_7ff_tmp184 = simd_and(r80_7ff_tmp181, bytetest_b6_b6);
          struct_Lu.cc = simd_or(r80_7ff_tmp184, struct_Lu.cc);
          bytetest_ce = simd_and(r80_7ff_tmp1, tmp173);
          bytetest_86_86 = simd_and(tmp35, tmp111);
          r80_7ff_tmp185 = simd_and(tmp25, bytetest_ce);
          carryQ.cq[27] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp185, carryQ.get_carry_in(27), r80_7ff_tmp186));
          r80_7ff_tmp187 = simd_and(r80_7ff_tmp186, bytetest_86_86);
          struct_Lu.cc = simd_or(r80_7ff_tmp187, struct_Lu.cc);
          bytetest_ce = simd_and(r80_7ff_tmp1, tmp173);
          bytetest_88_8a = simd_andc(r80_7ff_tmp82, tmp3);
          r80_7ff_tmp188 = simd_and(r80_7ff_tmp186, bytetest_88_8a);
          struct_Lu.cc = simd_or(r80_7ff_tmp188, struct_Lu.cc);
          bytetest_ce = simd_and(r80_7ff_tmp1, tmp173);
          bytetest_8c_8c = simd_and(tmp35, tmp54);
          r80_7ff_tmp189 = simd_and(r80_7ff_tmp186, bytetest_8c_8c);
          struct_Lu.cc = simd_or(r80_7ff_tmp189, struct_Lu.cc);
          bytetest_ce = simd_and(r80_7ff_tmp1, tmp173);
          bytetest_8e_8f = simd_and(tmp35, tmp56);
          r80_7ff_tmp190 = simd_and(r80_7ff_tmp186, bytetest_8e_8f);
          struct_Lu.cc = simd_or(r80_7ff_tmp190, struct_Lu.cc);
          bytetest_ce = simd_and(r80_7ff_tmp1, tmp173);
          r80_7ff_tmp191 = simd_and(basis_bits.bit_3, tmp9);
          r80_7ff_tmp192 = simd_or(simd_and(basis_bits.bit_2, tmp133), simd_andc(r80_7ff_tmp191, basis_bits.bit_2));
          bytetest_91_a1 = simd_and(tmp14, r80_7ff_tmp192);
          r80_7ff_tmp193 = simd_and(r80_7ff_tmp186, bytetest_91_a1);
          struct_Lu.cc = simd_or(r80_7ff_tmp193, struct_Lu.cc);
          bytetest_ce = simd_and(r80_7ff_tmp1, tmp173);
          r80_7ff_tmp194 = simd_not(basis_bits.bit_5);
          r80_7ff_tmp195 = simd_or(simd_and(basis_bits.bit_4, r80_7ff_tmp194), simd_andc(tmp4, basis_bits.bit_4));
          bytetest_a3_ab = simd_and(tmp59, r80_7ff_tmp195);
          r80_7ff_tmp196 = simd_and(r80_7ff_tmp186, bytetest_a3_ab);
          struct_Lu.cc = simd_or(r80_7ff_tmp196, struct_Lu.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp166);
          bytetest_8f_8f = simd_and(tmp35, tmp166);
          r80_7ff_tmp197 = simd_and(tmp25, bytetest_cf);
          carryQ.cq[28] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp197, carryQ.get_carry_in(28), r80_7ff_tmp198));
          r80_7ff_tmp199 = simd_and(r80_7ff_tmp198, bytetest_8f_8f);
          struct_Lu.cc = simd_or(r80_7ff_tmp199, struct_Lu.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp166);
          r80_7ff_tmp200 = simd_or(simd_and(basis_bits.bit_5, tmp67), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
          bytetest_92_94 = simd_and(r80_7ff_tmp87, r80_7ff_tmp200);
          r80_7ff_tmp201 = simd_and(r80_7ff_tmp198, bytetest_92_94);
          struct_Lu.cc = simd_or(r80_7ff_tmp201, struct_Lu.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp166);
          bytetest_98_98 = simd_and(tmp16, tmp131);
          r80_7ff_tmp202 = simd_and(r80_7ff_tmp198, bytetest_98_98);
          struct_Lu.cc = simd_or(r80_7ff_tmp202, struct_Lu.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp166);
          bytetest_9a_9a = simd_and(tmp16, tmp145);
          r80_7ff_tmp203 = simd_and(r80_7ff_tmp198, bytetest_9a_9a);
          struct_Lu.cc = simd_or(r80_7ff_tmp203, struct_Lu.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp166);
          bytetest_9c_9c = simd_and(tmp16, tmp54);
          r80_7ff_tmp204 = simd_and(r80_7ff_tmp198, bytetest_9c_9c);
          struct_Lu.cc = simd_or(r80_7ff_tmp204, struct_Lu.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp166);
          bytetest_9e_9e = simd_and(tmp16, tmp173);
          r80_7ff_tmp205 = simd_and(r80_7ff_tmp198, bytetest_9e_9e);
          struct_Lu.cc = simd_or(r80_7ff_tmp205, struct_Lu.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp166);
          bytetest_a0_a0 = simd_andc(tmp59, tmp9);
          r80_7ff_tmp206 = simd_and(r80_7ff_tmp198, bytetest_a0_a0);
          struct_Lu.cc = simd_or(r80_7ff_tmp206, struct_Lu.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp166);
          bytetest_a2_a2 = simd_and(tmp59, tmp45);
          r80_7ff_tmp207 = simd_and(r80_7ff_tmp198, bytetest_a2_a2);
          struct_Lu.cc = simd_or(r80_7ff_tmp207, struct_Lu.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp166);
          bytetest_a4_a4 = simd_and(tmp59, tmp81);
          r80_7ff_tmp208 = simd_and(r80_7ff_tmp198, bytetest_a4_a4);
          struct_Lu.cc = simd_or(r80_7ff_tmp208, struct_Lu.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp166);
          bytetest_a6_a6 = simd_and(tmp59, tmp111);
          r80_7ff_tmp209 = simd_and(r80_7ff_tmp198, bytetest_a6_a6);
          struct_Lu.cc = simd_or(r80_7ff_tmp209, struct_Lu.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp166);
          bytetest_a8_a8 = simd_and(tmp59, tmp131);
          r80_7ff_tmp210 = simd_and(r80_7ff_tmp198, bytetest_a8_a8);
          struct_Lu.cc = simd_or(r80_7ff_tmp210, struct_Lu.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp166);
          bytetest_aa_aa = simd_and(tmp59, tmp145);
          r80_7ff_tmp211 = simd_and(r80_7ff_tmp198, bytetest_aa_aa);
          struct_Lu.cc = simd_or(r80_7ff_tmp211, struct_Lu.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp166);
          bytetest_ac_ac = simd_and(tmp59, tmp54);
          r80_7ff_tmp212 = simd_and(r80_7ff_tmp198, bytetest_ac_ac);
          struct_Lu.cc = simd_or(r80_7ff_tmp212, struct_Lu.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp166);
          bytetest_ae_ae = simd_and(tmp59, tmp173);
          r80_7ff_tmp213 = simd_and(r80_7ff_tmp198, bytetest_ae_ae);
          struct_Lu.cc = simd_or(r80_7ff_tmp213, struct_Lu.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp166);
          bytetest_b4_b4 = simd_and(bytetest_b0_bf, tmp81);
          r80_7ff_tmp214 = simd_and(r80_7ff_tmp198, bytetest_b4_b4);
          struct_Lu.cc = simd_or(r80_7ff_tmp214, struct_Lu.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp166);
          bytetest_b7_b7 = simd_and(bytetest_b0_bf, tmp123);
          r80_7ff_tmp215 = simd_and(r80_7ff_tmp198, bytetest_b7_b7);
          struct_Lu.cc = simd_or(r80_7ff_tmp215, struct_Lu.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp166);
          r80_7ff_tmp216 = simd_and(bytetest_b0_bf, tmp99);
          bytetest_b9_ba = simd_and(r80_7ff_tmp216, tmp64);
          r80_7ff_tmp217 = simd_and(r80_7ff_tmp198, bytetest_b9_ba);
          struct_Lu.cc = simd_or(r80_7ff_tmp217, struct_Lu.cc);
          r80_7ff_tmp218 = simd_and(tmp11, tmp15);
          bytetest_d0 = simd_andc(r80_7ff_tmp218, tmp9);
          bytetest_80_af = simd_andc(tmp14, tmp12);
          r80_7ff_tmp219 = simd_and(tmp25, bytetest_d0);
          carryQ.cq[29] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp219, carryQ.get_carry_in(29), r80_7ff_tmp220));
          r80_7ff_tmp221 = simd_and(r80_7ff_tmp220, bytetest_80_af);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp166);
          bytetest_bd_bf = simd_and(r80_7ff_tmp170, tmp8);
          r80_7ff_tmp222 = simd_and(r80_7ff_tmp198, bytetest_bd_bf);
          r80_7ff_tmp223 = simd_or(r80_7ff_tmp222, r80_7ff_tmp221);
          struct_Lu.cc = simd_or(r80_7ff_tmp223, struct_Lu.cc);
          bytetest_d1 = simd_and(r80_7ff_tmp218, tmp33);
          bytetest_a0_a0 = simd_andc(tmp59, tmp9);
          r80_7ff_tmp224 = simd_and(tmp25, bytetest_d1);
          carryQ.cq[30] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp224, carryQ.get_carry_in(30), r80_7ff_tmp225));
          r80_7ff_tmp226 = simd_and(r80_7ff_tmp225, bytetest_a0_a0);
          struct_Lu.cc = simd_or(r80_7ff_tmp226, struct_Lu.cc);
          bytetest_d1 = simd_and(r80_7ff_tmp218, tmp33);
          bytetest_a2_a2 = simd_and(tmp59, tmp45);
          r80_7ff_tmp227 = simd_and(r80_7ff_tmp225, bytetest_a2_a2);
          struct_Lu.cc = simd_or(r80_7ff_tmp227, struct_Lu.cc);
          bytetest_d1 = simd_and(r80_7ff_tmp218, tmp33);
          bytetest_a4_a4 = simd_and(tmp59, tmp81);
          r80_7ff_tmp228 = simd_and(r80_7ff_tmp225, bytetest_a4_a4);
          struct_Lu.cc = simd_or(r80_7ff_tmp228, struct_Lu.cc);
          bytetest_d1 = simd_and(r80_7ff_tmp218, tmp33);
          bytetest_a6_a6 = simd_and(tmp59, tmp111);
          r80_7ff_tmp229 = simd_and(r80_7ff_tmp225, bytetest_a6_a6);
          struct_Lu.cc = simd_or(r80_7ff_tmp229, struct_Lu.cc);
          bytetest_d1 = simd_and(r80_7ff_tmp218, tmp33);
          bytetest_a8_a8 = simd_and(tmp59, tmp131);
          r80_7ff_tmp230 = simd_and(r80_7ff_tmp225, bytetest_a8_a8);
          struct_Lu.cc = simd_or(r80_7ff_tmp230, struct_Lu.cc);
          bytetest_d1 = simd_and(r80_7ff_tmp218, tmp33);
          bytetest_aa_aa = simd_and(tmp59, tmp145);
          r80_7ff_tmp231 = simd_and(r80_7ff_tmp225, bytetest_aa_aa);
          struct_Lu.cc = simd_or(r80_7ff_tmp231, struct_Lu.cc);
          bytetest_d1 = simd_and(r80_7ff_tmp218, tmp33);
          bytetest_ac_ac = simd_and(tmp59, tmp54);
          r80_7ff_tmp232 = simd_and(r80_7ff_tmp225, bytetest_ac_ac);
          struct_Lu.cc = simd_or(r80_7ff_tmp232, struct_Lu.cc);
          bytetest_d1 = simd_and(r80_7ff_tmp218, tmp33);
          bytetest_ae_ae = simd_and(tmp59, tmp173);
          r80_7ff_tmp233 = simd_and(r80_7ff_tmp225, bytetest_ae_ae);
          struct_Lu.cc = simd_or(r80_7ff_tmp233, struct_Lu.cc);
          bytetest_d1 = simd_and(r80_7ff_tmp218, tmp33);
          bytetest_b0_b0 = simd_andc(bytetest_b0_bf, tmp9);
          r80_7ff_tmp234 = simd_and(r80_7ff_tmp225, bytetest_b0_b0);
          struct_Lu.cc = simd_or(r80_7ff_tmp234, struct_Lu.cc);
          bytetest_d1 = simd_and(r80_7ff_tmp218, tmp33);
          bytetest_b2_b2 = simd_and(bytetest_b0_bf, tmp45);
          r80_7ff_tmp235 = simd_and(r80_7ff_tmp225, bytetest_b2_b2);
          struct_Lu.cc = simd_or(r80_7ff_tmp235, struct_Lu.cc);
          bytetest_d1 = simd_and(r80_7ff_tmp218, tmp33);
          bytetest_b4_b4 = simd_and(bytetest_b0_bf, tmp81);
          r80_7ff_tmp236 = simd_and(r80_7ff_tmp225, bytetest_b4_b4);
          struct_Lu.cc = simd_or(r80_7ff_tmp236, struct_Lu.cc);
          bytetest_d1 = simd_and(r80_7ff_tmp218, tmp33);
          bytetest_b6_b6 = simd_and(bytetest_b0_bf, tmp111);
          r80_7ff_tmp237 = simd_and(r80_7ff_tmp225, bytetest_b6_b6);
          struct_Lu.cc = simd_or(r80_7ff_tmp237, struct_Lu.cc);
          bytetest_d1 = simd_and(r80_7ff_tmp218, tmp33);
          bytetest_b8_b8 = simd_and(bytetest_b0_bf, tmp131);
          r80_7ff_tmp238 = simd_and(r80_7ff_tmp225, bytetest_b8_b8);
          struct_Lu.cc = simd_or(r80_7ff_tmp238, struct_Lu.cc);
          bytetest_d1 = simd_and(r80_7ff_tmp218, tmp33);
          bytetest_ba_ba = simd_and(bytetest_b0_bf, tmp145);
          r80_7ff_tmp239 = simd_and(r80_7ff_tmp225, bytetest_ba_ba);
          struct_Lu.cc = simd_or(r80_7ff_tmp239, struct_Lu.cc);
          bytetest_d1 = simd_and(r80_7ff_tmp218, tmp33);
          bytetest_bc_bc = simd_and(bytetest_b0_bf, tmp54);
          r80_7ff_tmp240 = simd_and(r80_7ff_tmp225, bytetest_bc_bc);
          struct_Lu.cc = simd_or(r80_7ff_tmp240, struct_Lu.cc);
          bytetest_d1 = simd_and(r80_7ff_tmp218, tmp33);
          bytetest_be_be = simd_and(bytetest_b0_bf, tmp173);
          r80_7ff_tmp241 = simd_and(r80_7ff_tmp225, bytetest_be_be);
          struct_Lu.cc = simd_or(r80_7ff_tmp241, struct_Lu.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp218, tmp45);
          bytetest_80_80 = simd_andc(tmp35, tmp9);
          r80_7ff_tmp242 = simd_and(tmp25, bytetest_d2);
          carryQ.cq[31] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp242, carryQ.get_carry_in(31), r80_7ff_tmp243));
          r80_7ff_tmp244 = simd_and(r80_7ff_tmp243, bytetest_80_80);
          struct_Lu.cc = simd_or(r80_7ff_tmp244, struct_Lu.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp218, tmp45);
          bytetest_8a_8a = simd_and(tmp35, tmp145);
          r80_7ff_tmp245 = simd_and(r80_7ff_tmp243, bytetest_8a_8a);
          struct_Lu.cc = simd_or(r80_7ff_tmp245, struct_Lu.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp218, tmp45);
          bytetest_8c_8c = simd_and(tmp35, tmp54);
          r80_7ff_tmp246 = simd_and(r80_7ff_tmp243, bytetest_8c_8c);
          struct_Lu.cc = simd_or(r80_7ff_tmp246, struct_Lu.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp218, tmp45);
          bytetest_8e_8e = simd_and(tmp35, tmp173);
          r80_7ff_tmp247 = simd_and(r80_7ff_tmp243, bytetest_8e_8e);
          struct_Lu.cc = simd_or(r80_7ff_tmp247, struct_Lu.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp218, tmp45);
          bytetest_90_90 = simd_andc(tmp16, tmp9);
          r80_7ff_tmp248 = simd_and(r80_7ff_tmp243, bytetest_90_90);
          struct_Lu.cc = simd_or(r80_7ff_tmp248, struct_Lu.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp218, tmp45);
          bytetest_92_92 = simd_and(tmp16, tmp45);
          r80_7ff_tmp249 = simd_and(r80_7ff_tmp243, bytetest_92_92);
          struct_Lu.cc = simd_or(r80_7ff_tmp249, struct_Lu.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp218, tmp45);
          bytetest_94_94 = simd_and(tmp16, tmp81);
          r80_7ff_tmp250 = simd_and(r80_7ff_tmp243, bytetest_94_94);
          struct_Lu.cc = simd_or(r80_7ff_tmp250, struct_Lu.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp218, tmp45);
          bytetest_96_96 = simd_and(tmp16, tmp111);
          r80_7ff_tmp251 = simd_and(r80_7ff_tmp243, bytetest_96_96);
          struct_Lu.cc = simd_or(r80_7ff_tmp251, struct_Lu.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp218, tmp45);
          bytetest_98_98 = simd_and(tmp16, tmp131);
          r80_7ff_tmp252 = simd_and(r80_7ff_tmp243, bytetest_98_98);
          struct_Lu.cc = simd_or(r80_7ff_tmp252, struct_Lu.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp218, tmp45);
          bytetest_9a_9a = simd_and(tmp16, tmp145);
          r80_7ff_tmp253 = simd_and(r80_7ff_tmp243, bytetest_9a_9a);
          struct_Lu.cc = simd_or(r80_7ff_tmp253, struct_Lu.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp218, tmp45);
          bytetest_9c_9c = simd_and(tmp16, tmp54);
          r80_7ff_tmp254 = simd_and(r80_7ff_tmp243, bytetest_9c_9c);
          struct_Lu.cc = simd_or(r80_7ff_tmp254, struct_Lu.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp218, tmp45);
          bytetest_9e_9e = simd_and(tmp16, tmp173);
          r80_7ff_tmp255 = simd_and(r80_7ff_tmp243, bytetest_9e_9e);
          struct_Lu.cc = simd_or(r80_7ff_tmp255, struct_Lu.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp218, tmp45);
          bytetest_a0_a0 = simd_andc(tmp59, tmp9);
          r80_7ff_tmp256 = simd_and(r80_7ff_tmp243, bytetest_a0_a0);
          struct_Lu.cc = simd_or(r80_7ff_tmp256, struct_Lu.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp218, tmp45);
          bytetest_a2_a2 = simd_and(tmp59, tmp45);
          r80_7ff_tmp257 = simd_and(r80_7ff_tmp243, bytetest_a2_a2);
          struct_Lu.cc = simd_or(r80_7ff_tmp257, struct_Lu.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp218, tmp45);
          bytetest_a4_a4 = simd_and(tmp59, tmp81);
          r80_7ff_tmp258 = simd_and(r80_7ff_tmp243, bytetest_a4_a4);
          struct_Lu.cc = simd_or(r80_7ff_tmp258, struct_Lu.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp218, tmp45);
          bytetest_a6_a6 = simd_and(tmp59, tmp111);
          r80_7ff_tmp259 = simd_and(r80_7ff_tmp243, bytetest_a6_a6);
          struct_Lu.cc = simd_or(r80_7ff_tmp259, struct_Lu.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp218, tmp45);
          bytetest_a8_a8 = simd_and(tmp59, tmp131);
          r80_7ff_tmp260 = simd_and(r80_7ff_tmp243, bytetest_a8_a8);
          struct_Lu.cc = simd_or(r80_7ff_tmp260, struct_Lu.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp218, tmp45);
          bytetest_aa_aa = simd_and(tmp59, tmp145);
          r80_7ff_tmp261 = simd_and(r80_7ff_tmp243, bytetest_aa_aa);
          struct_Lu.cc = simd_or(r80_7ff_tmp261, struct_Lu.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp218, tmp45);
          bytetest_ac_ac = simd_and(tmp59, tmp54);
          r80_7ff_tmp262 = simd_and(r80_7ff_tmp243, bytetest_ac_ac);
          struct_Lu.cc = simd_or(r80_7ff_tmp262, struct_Lu.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp218, tmp45);
          bytetest_ae_ae = simd_and(tmp59, tmp173);
          r80_7ff_tmp263 = simd_and(r80_7ff_tmp243, bytetest_ae_ae);
          struct_Lu.cc = simd_or(r80_7ff_tmp263, struct_Lu.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp218, tmp45);
          bytetest_b0_b0 = simd_andc(bytetest_b0_bf, tmp9);
          r80_7ff_tmp264 = simd_and(r80_7ff_tmp243, bytetest_b0_b0);
          struct_Lu.cc = simd_or(r80_7ff_tmp264, struct_Lu.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp218, tmp45);
          bytetest_b2_b2 = simd_and(bytetest_b0_bf, tmp45);
          r80_7ff_tmp265 = simd_and(r80_7ff_tmp243, bytetest_b2_b2);
          struct_Lu.cc = simd_or(r80_7ff_tmp265, struct_Lu.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp218, tmp45);
          bytetest_b4_b4 = simd_and(bytetest_b0_bf, tmp81);
          r80_7ff_tmp266 = simd_and(r80_7ff_tmp243, bytetest_b4_b4);
          struct_Lu.cc = simd_or(r80_7ff_tmp266, struct_Lu.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp218, tmp45);
          bytetest_b6_b6 = simd_and(bytetest_b0_bf, tmp111);
          r80_7ff_tmp267 = simd_and(r80_7ff_tmp243, bytetest_b6_b6);
          struct_Lu.cc = simd_or(r80_7ff_tmp267, struct_Lu.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp218, tmp45);
          bytetest_b8_b8 = simd_and(bytetest_b0_bf, tmp131);
          r80_7ff_tmp268 = simd_and(r80_7ff_tmp243, bytetest_b8_b8);
          struct_Lu.cc = simd_or(r80_7ff_tmp268, struct_Lu.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp218, tmp45);
          bytetest_ba_ba = simd_and(bytetest_b0_bf, tmp145);
          r80_7ff_tmp269 = simd_and(r80_7ff_tmp243, bytetest_ba_ba);
          struct_Lu.cc = simd_or(r80_7ff_tmp269, struct_Lu.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp218, tmp45);
          bytetest_bc_bc = simd_and(bytetest_b0_bf, tmp54);
          r80_7ff_tmp270 = simd_and(r80_7ff_tmp243, bytetest_bc_bc);
          struct_Lu.cc = simd_or(r80_7ff_tmp270, struct_Lu.cc);
          bytetest_d2 = simd_and(r80_7ff_tmp218, tmp45);
          bytetest_be_be = simd_and(bytetest_b0_bf, tmp173);
          r80_7ff_tmp271 = simd_and(r80_7ff_tmp243, bytetest_be_be);
          struct_Lu.cc = simd_or(r80_7ff_tmp271, struct_Lu.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp218, tmp74);
          bytetest_80_81 = simd_andc(tmp35, tmp46);
          r80_7ff_tmp272 = simd_and(tmp25, bytetest_d3);
          carryQ.cq[32] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp272, carryQ.get_carry_in(32), r80_7ff_tmp273));
          r80_7ff_tmp274 = simd_and(r80_7ff_tmp273, bytetest_80_81);
          struct_Lu.cc = simd_or(r80_7ff_tmp274, struct_Lu.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp218, tmp74);
          bytetest_83_83 = simd_and(tmp35, tmp74);
          r80_7ff_tmp275 = simd_and(r80_7ff_tmp273, bytetest_83_83);
          struct_Lu.cc = simd_or(r80_7ff_tmp275, struct_Lu.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp218, tmp74);
          bytetest_85_85 = simd_and(tmp35, tmp106);
          r80_7ff_tmp276 = simd_and(r80_7ff_tmp273, bytetest_85_85);
          struct_Lu.cc = simd_or(r80_7ff_tmp276, struct_Lu.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp218, tmp74);
          bytetest_87_87 = simd_and(tmp35, tmp123);
          r80_7ff_tmp277 = simd_and(r80_7ff_tmp273, bytetest_87_87);
          struct_Lu.cc = simd_or(r80_7ff_tmp277, struct_Lu.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp218, tmp74);
          bytetest_89_89 = simd_and(tmp35, tmp138);
          r80_7ff_tmp278 = simd_and(r80_7ff_tmp273, bytetest_89_89);
          struct_Lu.cc = simd_or(r80_7ff_tmp278, struct_Lu.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp218, tmp74);
          bytetest_8b_8b = simd_and(tmp35, tmp151);
          r80_7ff_tmp279 = simd_and(r80_7ff_tmp273, bytetest_8b_8b);
          struct_Lu.cc = simd_or(r80_7ff_tmp279, struct_Lu.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp218, tmp74);
          bytetest_8d_8d = simd_and(tmp35, tmp19);
          r80_7ff_tmp280 = simd_and(r80_7ff_tmp273, bytetest_8d_8d);
          struct_Lu.cc = simd_or(r80_7ff_tmp280, struct_Lu.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp218, tmp74);
          bytetest_90_90 = simd_andc(tmp16, tmp9);
          r80_7ff_tmp281 = simd_and(r80_7ff_tmp273, bytetest_90_90);
          struct_Lu.cc = simd_or(r80_7ff_tmp281, struct_Lu.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp218, tmp74);
          bytetest_92_92 = simd_and(tmp16, tmp45);
          r80_7ff_tmp282 = simd_and(r80_7ff_tmp273, bytetest_92_92);
          struct_Lu.cc = simd_or(r80_7ff_tmp282, struct_Lu.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp218, tmp74);
          bytetest_94_94 = simd_and(tmp16, tmp81);
          r80_7ff_tmp283 = simd_and(r80_7ff_tmp273, bytetest_94_94);
          struct_Lu.cc = simd_or(r80_7ff_tmp283, struct_Lu.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp218, tmp74);
          bytetest_96_96 = simd_and(tmp16, tmp111);
          r80_7ff_tmp284 = simd_and(r80_7ff_tmp273, bytetest_96_96);
          struct_Lu.cc = simd_or(r80_7ff_tmp284, struct_Lu.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp218, tmp74);
          bytetest_98_98 = simd_and(tmp16, tmp131);
          r80_7ff_tmp285 = simd_and(r80_7ff_tmp273, bytetest_98_98);
          struct_Lu.cc = simd_or(r80_7ff_tmp285, struct_Lu.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp218, tmp74);
          bytetest_9a_9a = simd_and(tmp16, tmp145);
          r80_7ff_tmp286 = simd_and(r80_7ff_tmp273, bytetest_9a_9a);
          struct_Lu.cc = simd_or(r80_7ff_tmp286, struct_Lu.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp218, tmp74);
          bytetest_9c_9c = simd_and(tmp16, tmp54);
          r80_7ff_tmp287 = simd_and(r80_7ff_tmp273, bytetest_9c_9c);
          struct_Lu.cc = simd_or(r80_7ff_tmp287, struct_Lu.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp218, tmp74);
          bytetest_9e_9e = simd_and(tmp16, tmp173);
          r80_7ff_tmp288 = simd_and(r80_7ff_tmp273, bytetest_9e_9e);
          struct_Lu.cc = simd_or(r80_7ff_tmp288, struct_Lu.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp218, tmp74);
          bytetest_a0_a0 = simd_andc(tmp59, tmp9);
          r80_7ff_tmp289 = simd_and(r80_7ff_tmp273, bytetest_a0_a0);
          struct_Lu.cc = simd_or(r80_7ff_tmp289, struct_Lu.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp218, tmp74);
          bytetest_a2_a2 = simd_and(tmp59, tmp45);
          r80_7ff_tmp290 = simd_and(r80_7ff_tmp273, bytetest_a2_a2);
          struct_Lu.cc = simd_or(r80_7ff_tmp290, struct_Lu.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp218, tmp74);
          bytetest_a4_a4 = simd_and(tmp59, tmp81);
          r80_7ff_tmp291 = simd_and(r80_7ff_tmp273, bytetest_a4_a4);
          struct_Lu.cc = simd_or(r80_7ff_tmp291, struct_Lu.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp218, tmp74);
          bytetest_a6_a6 = simd_and(tmp59, tmp111);
          r80_7ff_tmp292 = simd_and(r80_7ff_tmp273, bytetest_a6_a6);
          struct_Lu.cc = simd_or(r80_7ff_tmp292, struct_Lu.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp218, tmp74);
          bytetest_a8_a8 = simd_and(tmp59, tmp131);
          r80_7ff_tmp293 = simd_and(r80_7ff_tmp273, bytetest_a8_a8);
          struct_Lu.cc = simd_or(r80_7ff_tmp293, struct_Lu.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp218, tmp74);
          bytetest_aa_aa = simd_and(tmp59, tmp145);
          r80_7ff_tmp294 = simd_and(r80_7ff_tmp273, bytetest_aa_aa);
          struct_Lu.cc = simd_or(r80_7ff_tmp294, struct_Lu.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp218, tmp74);
          bytetest_ac_ac = simd_and(tmp59, tmp54);
          r80_7ff_tmp295 = simd_and(r80_7ff_tmp273, bytetest_ac_ac);
          struct_Lu.cc = simd_or(r80_7ff_tmp295, struct_Lu.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp218, tmp74);
          bytetest_ae_ae = simd_and(tmp59, tmp173);
          r80_7ff_tmp296 = simd_and(r80_7ff_tmp273, bytetest_ae_ae);
          struct_Lu.cc = simd_or(r80_7ff_tmp296, struct_Lu.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp218, tmp74);
          bytetest_b0_b0 = simd_andc(bytetest_b0_bf, tmp9);
          r80_7ff_tmp297 = simd_and(r80_7ff_tmp273, bytetest_b0_b0);
          struct_Lu.cc = simd_or(r80_7ff_tmp297, struct_Lu.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp218, tmp74);
          bytetest_b2_b2 = simd_and(bytetest_b0_bf, tmp45);
          r80_7ff_tmp298 = simd_and(r80_7ff_tmp273, bytetest_b2_b2);
          struct_Lu.cc = simd_or(r80_7ff_tmp298, struct_Lu.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp218, tmp74);
          bytetest_b4_b4 = simd_and(bytetest_b0_bf, tmp81);
          r80_7ff_tmp299 = simd_and(r80_7ff_tmp273, bytetest_b4_b4);
          struct_Lu.cc = simd_or(r80_7ff_tmp299, struct_Lu.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp218, tmp74);
          bytetest_b6_b6 = simd_and(bytetest_b0_bf, tmp111);
          r80_7ff_tmp300 = simd_and(r80_7ff_tmp273, bytetest_b6_b6);
          struct_Lu.cc = simd_or(r80_7ff_tmp300, struct_Lu.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp218, tmp74);
          bytetest_b8_b8 = simd_and(bytetest_b0_bf, tmp131);
          r80_7ff_tmp301 = simd_and(r80_7ff_tmp273, bytetest_b8_b8);
          struct_Lu.cc = simd_or(r80_7ff_tmp301, struct_Lu.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp218, tmp74);
          bytetest_ba_ba = simd_and(bytetest_b0_bf, tmp145);
          r80_7ff_tmp302 = simd_and(r80_7ff_tmp273, bytetest_ba_ba);
          struct_Lu.cc = simd_or(r80_7ff_tmp302, struct_Lu.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp218, tmp74);
          bytetest_bc_bc = simd_and(bytetest_b0_bf, tmp54);
          r80_7ff_tmp303 = simd_and(r80_7ff_tmp273, bytetest_bc_bc);
          struct_Lu.cc = simd_or(r80_7ff_tmp303, struct_Lu.cc);
          bytetest_d3 = simd_and(r80_7ff_tmp218, tmp74);
          bytetest_be_be = simd_and(bytetest_b0_bf, tmp173);
          r80_7ff_tmp304 = simd_and(r80_7ff_tmp273, bytetest_be_be);
          struct_Lu.cc = simd_or(r80_7ff_tmp304, struct_Lu.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp218, tmp81);
          bytetest_80_80 = simd_andc(tmp35, tmp9);
          r80_7ff_tmp305 = simd_and(tmp25, bytetest_d4);
          carryQ.cq[33] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp305, carryQ.get_carry_in(33), r80_7ff_tmp306));
          r80_7ff_tmp307 = simd_and(r80_7ff_tmp306, bytetest_80_80);
          struct_Lu.cc = simd_or(r80_7ff_tmp307, struct_Lu.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp218, tmp81);
          bytetest_82_82 = simd_and(tmp35, tmp45);
          r80_7ff_tmp308 = simd_and(r80_7ff_tmp306, bytetest_82_82);
          struct_Lu.cc = simd_or(r80_7ff_tmp308, struct_Lu.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp218, tmp81);
          bytetest_84_84 = simd_and(tmp35, tmp81);
          r80_7ff_tmp309 = simd_and(r80_7ff_tmp306, bytetest_84_84);
          struct_Lu.cc = simd_or(r80_7ff_tmp309, struct_Lu.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp218, tmp81);
          bytetest_86_86 = simd_and(tmp35, tmp111);
          r80_7ff_tmp310 = simd_and(r80_7ff_tmp306, bytetest_86_86);
          struct_Lu.cc = simd_or(r80_7ff_tmp310, struct_Lu.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp218, tmp81);
          bytetest_88_88 = simd_and(tmp35, tmp131);
          r80_7ff_tmp311 = simd_and(r80_7ff_tmp306, bytetest_88_88);
          struct_Lu.cc = simd_or(r80_7ff_tmp311, struct_Lu.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp218, tmp81);
          bytetest_8a_8a = simd_and(tmp35, tmp145);
          r80_7ff_tmp312 = simd_and(r80_7ff_tmp306, bytetest_8a_8a);
          struct_Lu.cc = simd_or(r80_7ff_tmp312, struct_Lu.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp218, tmp81);
          bytetest_8c_8c = simd_and(tmp35, tmp54);
          r80_7ff_tmp313 = simd_and(r80_7ff_tmp306, bytetest_8c_8c);
          struct_Lu.cc = simd_or(r80_7ff_tmp313, struct_Lu.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp218, tmp81);
          bytetest_8e_8e = simd_and(tmp35, tmp173);
          r80_7ff_tmp314 = simd_and(r80_7ff_tmp306, bytetest_8e_8e);
          struct_Lu.cc = simd_or(r80_7ff_tmp314, struct_Lu.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp218, tmp81);
          bytetest_90_90 = simd_andc(tmp16, tmp9);
          r80_7ff_tmp315 = simd_and(r80_7ff_tmp306, bytetest_90_90);
          struct_Lu.cc = simd_or(r80_7ff_tmp315, struct_Lu.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp218, tmp81);
          bytetest_92_92 = simd_and(tmp16, tmp45);
          r80_7ff_tmp316 = simd_and(r80_7ff_tmp306, bytetest_92_92);
          struct_Lu.cc = simd_or(r80_7ff_tmp316, struct_Lu.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp218, tmp81);
          bytetest_94_94 = simd_and(tmp16, tmp81);
          r80_7ff_tmp317 = simd_and(r80_7ff_tmp306, bytetest_94_94);
          struct_Lu.cc = simd_or(r80_7ff_tmp317, struct_Lu.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp218, tmp81);
          bytetest_96_96 = simd_and(tmp16, tmp111);
          r80_7ff_tmp318 = simd_and(r80_7ff_tmp306, bytetest_96_96);
          struct_Lu.cc = simd_or(r80_7ff_tmp318, struct_Lu.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp218, tmp81);
          bytetest_98_98 = simd_and(tmp16, tmp131);
          r80_7ff_tmp319 = simd_and(r80_7ff_tmp306, bytetest_98_98);
          struct_Lu.cc = simd_or(r80_7ff_tmp319, struct_Lu.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp218, tmp81);
          bytetest_9a_9a = simd_and(tmp16, tmp145);
          r80_7ff_tmp320 = simd_and(r80_7ff_tmp306, bytetest_9a_9a);
          struct_Lu.cc = simd_or(r80_7ff_tmp320, struct_Lu.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp218, tmp81);
          bytetest_9c_9c = simd_and(tmp16, tmp54);
          r80_7ff_tmp321 = simd_and(r80_7ff_tmp306, bytetest_9c_9c);
          struct_Lu.cc = simd_or(r80_7ff_tmp321, struct_Lu.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp218, tmp81);
          bytetest_9e_9e = simd_and(tmp16, tmp173);
          r80_7ff_tmp322 = simd_and(r80_7ff_tmp306, bytetest_9e_9e);
          struct_Lu.cc = simd_or(r80_7ff_tmp322, struct_Lu.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp218, tmp81);
          bytetest_a0_a0 = simd_andc(tmp59, tmp9);
          r80_7ff_tmp323 = simd_and(r80_7ff_tmp306, bytetest_a0_a0);
          struct_Lu.cc = simd_or(r80_7ff_tmp323, struct_Lu.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp218, tmp81);
          bytetest_a2_a2 = simd_and(tmp59, tmp45);
          r80_7ff_tmp324 = simd_and(r80_7ff_tmp306, bytetest_a2_a2);
          struct_Lu.cc = simd_or(r80_7ff_tmp324, struct_Lu.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp218, tmp81);
          bytetest_a4_a4 = simd_and(tmp59, tmp81);
          r80_7ff_tmp325 = simd_and(r80_7ff_tmp306, bytetest_a4_a4);
          struct_Lu.cc = simd_or(r80_7ff_tmp325, struct_Lu.cc);
          bytetest_d4 = simd_and(r80_7ff_tmp218, tmp81);
          bytetest_a6_a6 = simd_and(tmp59, tmp111);
          r80_7ff_tmp326 = simd_and(r80_7ff_tmp306, bytetest_a6_a6);
          struct_Lu.cc = simd_or(r80_7ff_tmp326, struct_Lu.cc);
          bytetest_d5 = simd_and(r80_7ff_tmp218, tmp106);
          bytetest_80_96 = simd_andc(tmp20, r80_7ff_tmp3);
          r80_7ff_tmp327 = simd_and(tmp25, bytetest_d5);
          carryQ.cq[34] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp327, carryQ.get_carry_in(34), r80_7ff_tmp328));
          r80_7ff_tmp329 = simd_and(r80_7ff_tmp328, bytetest_80_96);
          bytetest_d4 = simd_and(r80_7ff_tmp218, tmp81);
          r80_7ff_tmp330 = simd_or(basis_bits.bit_4, tmp174);
          bytetest_b1_bf = simd_and(bytetest_b0_bf, r80_7ff_tmp330);
          r80_7ff_tmp331 = simd_and(r80_7ff_tmp306, bytetest_b1_bf);
          r80_7ff_tmp332 = simd_or(r80_7ff_tmp331, r80_7ff_tmp329);
          struct_Lu.cc = simd_or(r80_7ff_tmp332, struct_Lu.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(19, 16);
        }
        tmp186 = simd_and(tmp11, tmp58);
        tmp187 = simd_or(basis_bits.bit_4, tmp174);
        bytetest_e1_ef = simd_and(tmp186, tmp187);
        bytetest_e0 = simd_andc(tmp186, tmp9);
        bytetest_a0_bf = simd_and(tmp14, basis_bits.bit_2);
        tmp188 = simd_and(tmp25, bytetest_e0);
        carryQ.cq[35] = carryout2carry(pablo_blk_Advance(tmp188, carryQ.get_carry_in(35), tmp189));
        tmp190 = simd_and(tmp189, bytetest_a0_bf);
        tmp191 = simd_or(tmp190, bytetest_e1_ef);
        if ((bitblock::any(tmp191) || carryQ.CarryTest(36, 27))) {
          r800_ffff_tmp1 = simd_and(tmp11, tmp58);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_83 = simd_and(tmp35, tmp74);
          bytetest_80_85 = simd_andc(tmp107, tmp36);
          r800_ffff_tmp2 = simd_and(tmp25, bytetest_e1);
          carryQ.cq[36] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp2, carryQ.get_carry_in(36), r800_ffff_tmp3));
          r800_ffff_tmp4 = simd_and(r800_ffff_tmp3, bytetest_83);
          carryQ.cq[37] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp4, carryQ.get_carry_in(37), r800_ffff_tmp5));
          r800_ffff_tmp6 = simd_and(r800_ffff_tmp5, bytetest_80_85);
          bytetest_82 = simd_and(tmp35, tmp45);
          bytetest_a0_bf = simd_and(tmp14, basis_bits.bit_2);
          r800_ffff_tmp7 = simd_and(r800_ffff_tmp3, bytetest_82);
          carryQ.cq[38] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp7, carryQ.get_carry_in(38), r800_ffff_tmp8));
          r800_ffff_tmp9 = simd_and(r800_ffff_tmp8, bytetest_a0_bf);
          r800_ffff_tmp10 = simd_or(r800_ffff_tmp9, r800_ffff_tmp6);
          struct_Lu.cc = simd_or(r800_ffff_tmp10, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_83 = simd_and(tmp35, tmp74);
          bytetest_87_87 = simd_and(tmp35, tmp123);
          r800_ffff_tmp11 = simd_and(r800_ffff_tmp5, bytetest_87_87);
          struct_Lu.cc = simd_or(r800_ffff_tmp11, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_83 = simd_and(tmp35, tmp74);
          bytetest_8d_8d = simd_and(tmp35, tmp19);
          r800_ffff_tmp12 = simd_and(r800_ffff_tmp5, bytetest_8d_8d);
          struct_Lu.cc = simd_or(r800_ffff_tmp12, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp131);
          bytetest_80_80 = simd_andc(tmp35, tmp9);
          r800_ffff_tmp13 = simd_and(r800_ffff_tmp3, bytetest_b8);
          carryQ.cq[39] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp13, carryQ.get_carry_in(39), r800_ffff_tmp14));
          r800_ffff_tmp15 = simd_and(r800_ffff_tmp14, bytetest_80_80);
          struct_Lu.cc = simd_or(r800_ffff_tmp15, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp131);
          bytetest_82_82 = simd_and(tmp35, tmp45);
          r800_ffff_tmp16 = simd_and(r800_ffff_tmp14, bytetest_82_82);
          struct_Lu.cc = simd_or(r800_ffff_tmp16, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp131);
          bytetest_84_84 = simd_and(tmp35, tmp81);
          r800_ffff_tmp17 = simd_and(r800_ffff_tmp14, bytetest_84_84);
          struct_Lu.cc = simd_or(r800_ffff_tmp17, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp131);
          bytetest_86_86 = simd_and(tmp35, tmp111);
          r800_ffff_tmp18 = simd_and(r800_ffff_tmp14, bytetest_86_86);
          struct_Lu.cc = simd_or(r800_ffff_tmp18, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp131);
          bytetest_88_88 = simd_and(tmp35, tmp131);
          r800_ffff_tmp19 = simd_and(r800_ffff_tmp14, bytetest_88_88);
          struct_Lu.cc = simd_or(r800_ffff_tmp19, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp131);
          bytetest_8a_8a = simd_and(tmp35, tmp145);
          r800_ffff_tmp20 = simd_and(r800_ffff_tmp14, bytetest_8a_8a);
          struct_Lu.cc = simd_or(r800_ffff_tmp20, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp131);
          bytetest_8c_8c = simd_and(tmp35, tmp54);
          r800_ffff_tmp21 = simd_and(r800_ffff_tmp14, bytetest_8c_8c);
          struct_Lu.cc = simd_or(r800_ffff_tmp21, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp131);
          bytetest_8e_8e = simd_and(tmp35, tmp173);
          r800_ffff_tmp22 = simd_and(r800_ffff_tmp14, bytetest_8e_8e);
          struct_Lu.cc = simd_or(r800_ffff_tmp22, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp131);
          bytetest_90_90 = simd_andc(tmp16, tmp9);
          r800_ffff_tmp23 = simd_and(r800_ffff_tmp14, bytetest_90_90);
          struct_Lu.cc = simd_or(r800_ffff_tmp23, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp131);
          bytetest_92_92 = simd_and(tmp16, tmp45);
          r800_ffff_tmp24 = simd_and(r800_ffff_tmp14, bytetest_92_92);
          struct_Lu.cc = simd_or(r800_ffff_tmp24, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp131);
          bytetest_94_94 = simd_and(tmp16, tmp81);
          r800_ffff_tmp25 = simd_and(r800_ffff_tmp14, bytetest_94_94);
          struct_Lu.cc = simd_or(r800_ffff_tmp25, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp131);
          bytetest_96_96 = simd_and(tmp16, tmp111);
          r800_ffff_tmp26 = simd_and(r800_ffff_tmp14, bytetest_96_96);
          struct_Lu.cc = simd_or(r800_ffff_tmp26, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp131);
          bytetest_98_98 = simd_and(tmp16, tmp131);
          r800_ffff_tmp27 = simd_and(r800_ffff_tmp14, bytetest_98_98);
          struct_Lu.cc = simd_or(r800_ffff_tmp27, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp131);
          bytetest_9a_9a = simd_and(tmp16, tmp145);
          r800_ffff_tmp28 = simd_and(r800_ffff_tmp14, bytetest_9a_9a);
          struct_Lu.cc = simd_or(r800_ffff_tmp28, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp131);
          bytetest_9c_9c = simd_and(tmp16, tmp54);
          r800_ffff_tmp29 = simd_and(r800_ffff_tmp14, bytetest_9c_9c);
          struct_Lu.cc = simd_or(r800_ffff_tmp29, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp131);
          bytetest_9e_9e = simd_and(tmp16, tmp173);
          r800_ffff_tmp30 = simd_and(r800_ffff_tmp14, bytetest_9e_9e);
          struct_Lu.cc = simd_or(r800_ffff_tmp30, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp131);
          bytetest_a0_a0 = simd_andc(tmp59, tmp9);
          r800_ffff_tmp31 = simd_and(r800_ffff_tmp14, bytetest_a0_a0);
          struct_Lu.cc = simd_or(r800_ffff_tmp31, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp131);
          bytetest_a2_a2 = simd_and(tmp59, tmp45);
          r800_ffff_tmp32 = simd_and(r800_ffff_tmp14, bytetest_a2_a2);
          struct_Lu.cc = simd_or(r800_ffff_tmp32, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp131);
          bytetest_a4_a4 = simd_and(tmp59, tmp81);
          r800_ffff_tmp33 = simd_and(r800_ffff_tmp14, bytetest_a4_a4);
          struct_Lu.cc = simd_or(r800_ffff_tmp33, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp131);
          bytetest_a6_a6 = simd_and(tmp59, tmp111);
          r800_ffff_tmp34 = simd_and(r800_ffff_tmp14, bytetest_a6_a6);
          struct_Lu.cc = simd_or(r800_ffff_tmp34, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp131);
          bytetest_a8_a8 = simd_and(tmp59, tmp131);
          r800_ffff_tmp35 = simd_and(r800_ffff_tmp14, bytetest_a8_a8);
          struct_Lu.cc = simd_or(r800_ffff_tmp35, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp131);
          bytetest_aa_aa = simd_and(tmp59, tmp145);
          r800_ffff_tmp36 = simd_and(r800_ffff_tmp14, bytetest_aa_aa);
          struct_Lu.cc = simd_or(r800_ffff_tmp36, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp131);
          bytetest_ac_ac = simd_and(tmp59, tmp54);
          r800_ffff_tmp37 = simd_and(r800_ffff_tmp14, bytetest_ac_ac);
          struct_Lu.cc = simd_or(r800_ffff_tmp37, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp131);
          bytetest_ae_ae = simd_and(tmp59, tmp173);
          r800_ffff_tmp38 = simd_and(r800_ffff_tmp14, bytetest_ae_ae);
          struct_Lu.cc = simd_or(r800_ffff_tmp38, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp131);
          bytetest_b0_b0 = simd_andc(bytetest_b0_bf, tmp9);
          r800_ffff_tmp39 = simd_and(r800_ffff_tmp14, bytetest_b0_b0);
          struct_Lu.cc = simd_or(r800_ffff_tmp39, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp131);
          bytetest_b2_b2 = simd_and(bytetest_b0_bf, tmp45);
          r800_ffff_tmp40 = simd_and(r800_ffff_tmp14, bytetest_b2_b2);
          struct_Lu.cc = simd_or(r800_ffff_tmp40, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp131);
          bytetest_b4_b4 = simd_and(bytetest_b0_bf, tmp81);
          r800_ffff_tmp41 = simd_and(r800_ffff_tmp14, bytetest_b4_b4);
          struct_Lu.cc = simd_or(r800_ffff_tmp41, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp131);
          bytetest_b6_b6 = simd_and(bytetest_b0_bf, tmp111);
          r800_ffff_tmp42 = simd_and(r800_ffff_tmp14, bytetest_b6_b6);
          struct_Lu.cc = simd_or(r800_ffff_tmp42, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp131);
          bytetest_b8_b8 = simd_and(bytetest_b0_bf, tmp131);
          r800_ffff_tmp43 = simd_and(r800_ffff_tmp14, bytetest_b8_b8);
          struct_Lu.cc = simd_or(r800_ffff_tmp43, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp131);
          bytetest_ba_ba = simd_and(bytetest_b0_bf, tmp145);
          r800_ffff_tmp44 = simd_and(r800_ffff_tmp14, bytetest_ba_ba);
          struct_Lu.cc = simd_or(r800_ffff_tmp44, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp131);
          bytetest_bc_bc = simd_and(bytetest_b0_bf, tmp54);
          r800_ffff_tmp45 = simd_and(r800_ffff_tmp14, bytetest_bc_bc);
          struct_Lu.cc = simd_or(r800_ffff_tmp45, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp131);
          bytetest_be_be = simd_and(bytetest_b0_bf, tmp173);
          r800_ffff_tmp46 = simd_and(r800_ffff_tmp14, bytetest_be_be);
          struct_Lu.cc = simd_or(r800_ffff_tmp46, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp138);
          bytetest_80_80 = simd_andc(tmp35, tmp9);
          r800_ffff_tmp47 = simd_and(r800_ffff_tmp3, bytetest_b9);
          carryQ.cq[40] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp47, carryQ.get_carry_in(40), r800_ffff_tmp48));
          r800_ffff_tmp49 = simd_and(r800_ffff_tmp48, bytetest_80_80);
          struct_Lu.cc = simd_or(r800_ffff_tmp49, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp138);
          bytetest_82_82 = simd_and(tmp35, tmp45);
          r800_ffff_tmp50 = simd_and(r800_ffff_tmp48, bytetest_82_82);
          struct_Lu.cc = simd_or(r800_ffff_tmp50, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp138);
          bytetest_84_84 = simd_and(tmp35, tmp81);
          r800_ffff_tmp51 = simd_and(r800_ffff_tmp48, bytetest_84_84);
          struct_Lu.cc = simd_or(r800_ffff_tmp51, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp138);
          bytetest_86_86 = simd_and(tmp35, tmp111);
          r800_ffff_tmp52 = simd_and(r800_ffff_tmp48, bytetest_86_86);
          struct_Lu.cc = simd_or(r800_ffff_tmp52, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp138);
          bytetest_88_88 = simd_and(tmp35, tmp131);
          r800_ffff_tmp53 = simd_and(r800_ffff_tmp48, bytetest_88_88);
          struct_Lu.cc = simd_or(r800_ffff_tmp53, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp138);
          bytetest_8a_8a = simd_and(tmp35, tmp145);
          r800_ffff_tmp54 = simd_and(r800_ffff_tmp48, bytetest_8a_8a);
          struct_Lu.cc = simd_or(r800_ffff_tmp54, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp138);
          bytetest_8c_8c = simd_and(tmp35, tmp54);
          r800_ffff_tmp55 = simd_and(r800_ffff_tmp48, bytetest_8c_8c);
          struct_Lu.cc = simd_or(r800_ffff_tmp55, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp138);
          bytetest_8e_8e = simd_and(tmp35, tmp173);
          r800_ffff_tmp56 = simd_and(r800_ffff_tmp48, bytetest_8e_8e);
          struct_Lu.cc = simd_or(r800_ffff_tmp56, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp138);
          bytetest_90_90 = simd_andc(tmp16, tmp9);
          r800_ffff_tmp57 = simd_and(r800_ffff_tmp48, bytetest_90_90);
          struct_Lu.cc = simd_or(r800_ffff_tmp57, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp138);
          bytetest_92_92 = simd_and(tmp16, tmp45);
          r800_ffff_tmp58 = simd_and(r800_ffff_tmp48, bytetest_92_92);
          struct_Lu.cc = simd_or(r800_ffff_tmp58, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp138);
          bytetest_94_94 = simd_and(tmp16, tmp81);
          r800_ffff_tmp59 = simd_and(r800_ffff_tmp48, bytetest_94_94);
          struct_Lu.cc = simd_or(r800_ffff_tmp59, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp138);
          bytetest_96_96 = simd_and(tmp16, tmp111);
          r800_ffff_tmp60 = simd_and(r800_ffff_tmp48, bytetest_96_96);
          struct_Lu.cc = simd_or(r800_ffff_tmp60, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp138);
          bytetest_98_98 = simd_and(tmp16, tmp131);
          r800_ffff_tmp61 = simd_and(r800_ffff_tmp48, bytetest_98_98);
          struct_Lu.cc = simd_or(r800_ffff_tmp61, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp138);
          bytetest_9a_9a = simd_and(tmp16, tmp145);
          r800_ffff_tmp62 = simd_and(r800_ffff_tmp48, bytetest_9a_9a);
          struct_Lu.cc = simd_or(r800_ffff_tmp62, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp138);
          bytetest_9c_9c = simd_and(tmp16, tmp54);
          r800_ffff_tmp63 = simd_and(r800_ffff_tmp48, bytetest_9c_9c);
          struct_Lu.cc = simd_or(r800_ffff_tmp63, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp138);
          bytetest_9e_9e = simd_and(tmp16, tmp173);
          r800_ffff_tmp64 = simd_and(r800_ffff_tmp48, bytetest_9e_9e);
          struct_Lu.cc = simd_or(r800_ffff_tmp64, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp138);
          bytetest_a0_a0 = simd_andc(tmp59, tmp9);
          r800_ffff_tmp65 = simd_and(r800_ffff_tmp48, bytetest_a0_a0);
          struct_Lu.cc = simd_or(r800_ffff_tmp65, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp138);
          bytetest_a2_a2 = simd_and(tmp59, tmp45);
          r800_ffff_tmp66 = simd_and(r800_ffff_tmp48, bytetest_a2_a2);
          struct_Lu.cc = simd_or(r800_ffff_tmp66, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp138);
          bytetest_a4_a4 = simd_and(tmp59, tmp81);
          r800_ffff_tmp67 = simd_and(r800_ffff_tmp48, bytetest_a4_a4);
          struct_Lu.cc = simd_or(r800_ffff_tmp67, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp138);
          bytetest_a6_a6 = simd_and(tmp59, tmp111);
          r800_ffff_tmp68 = simd_and(r800_ffff_tmp48, bytetest_a6_a6);
          struct_Lu.cc = simd_or(r800_ffff_tmp68, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp138);
          bytetest_a8_a8 = simd_and(tmp59, tmp131);
          r800_ffff_tmp69 = simd_and(r800_ffff_tmp48, bytetest_a8_a8);
          struct_Lu.cc = simd_or(r800_ffff_tmp69, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp138);
          bytetest_aa_aa = simd_and(tmp59, tmp145);
          r800_ffff_tmp70 = simd_and(r800_ffff_tmp48, bytetest_aa_aa);
          struct_Lu.cc = simd_or(r800_ffff_tmp70, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp138);
          bytetest_ac_ac = simd_and(tmp59, tmp54);
          r800_ffff_tmp71 = simd_and(r800_ffff_tmp48, bytetest_ac_ac);
          struct_Lu.cc = simd_or(r800_ffff_tmp71, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp138);
          bytetest_ae_ae = simd_and(tmp59, tmp173);
          r800_ffff_tmp72 = simd_and(r800_ffff_tmp48, bytetest_ae_ae);
          struct_Lu.cc = simd_or(r800_ffff_tmp72, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp138);
          bytetest_b0_b0 = simd_andc(bytetest_b0_bf, tmp9);
          r800_ffff_tmp73 = simd_and(r800_ffff_tmp48, bytetest_b0_b0);
          struct_Lu.cc = simd_or(r800_ffff_tmp73, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp138);
          bytetest_b2_b2 = simd_and(bytetest_b0_bf, tmp45);
          r800_ffff_tmp74 = simd_and(r800_ffff_tmp48, bytetest_b2_b2);
          struct_Lu.cc = simd_or(r800_ffff_tmp74, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp138);
          bytetest_b4_b4 = simd_and(bytetest_b0_bf, tmp81);
          r800_ffff_tmp75 = simd_and(r800_ffff_tmp48, bytetest_b4_b4);
          struct_Lu.cc = simd_or(r800_ffff_tmp75, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp138);
          bytetest_b6_b6 = simd_and(bytetest_b0_bf, tmp111);
          r800_ffff_tmp76 = simd_and(r800_ffff_tmp48, bytetest_b6_b6);
          struct_Lu.cc = simd_or(r800_ffff_tmp76, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp138);
          bytetest_b8_b8 = simd_and(bytetest_b0_bf, tmp131);
          r800_ffff_tmp77 = simd_and(r800_ffff_tmp48, bytetest_b8_b8);
          struct_Lu.cc = simd_or(r800_ffff_tmp77, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp138);
          bytetest_ba_ba = simd_and(bytetest_b0_bf, tmp145);
          r800_ffff_tmp78 = simd_and(r800_ffff_tmp48, bytetest_ba_ba);
          struct_Lu.cc = simd_or(r800_ffff_tmp78, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp138);
          bytetest_bc_bc = simd_and(bytetest_b0_bf, tmp54);
          r800_ffff_tmp79 = simd_and(r800_ffff_tmp48, bytetest_bc_bc);
          struct_Lu.cc = simd_or(r800_ffff_tmp79, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp138);
          bytetest_be_be = simd_and(bytetest_b0_bf, tmp173);
          r800_ffff_tmp80 = simd_and(r800_ffff_tmp48, bytetest_be_be);
          struct_Lu.cc = simd_or(r800_ffff_tmp80, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp145);
          bytetest_80_80 = simd_andc(tmp35, tmp9);
          r800_ffff_tmp81 = simd_and(r800_ffff_tmp3, bytetest_ba);
          carryQ.cq[41] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp81, carryQ.get_carry_in(41), r800_ffff_tmp82));
          r800_ffff_tmp83 = simd_and(r800_ffff_tmp82, bytetest_80_80);
          struct_Lu.cc = simd_or(r800_ffff_tmp83, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp145);
          bytetest_82_82 = simd_and(tmp35, tmp45);
          r800_ffff_tmp84 = simd_and(r800_ffff_tmp82, bytetest_82_82);
          struct_Lu.cc = simd_or(r800_ffff_tmp84, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp145);
          bytetest_84_84 = simd_and(tmp35, tmp81);
          r800_ffff_tmp85 = simd_and(r800_ffff_tmp82, bytetest_84_84);
          struct_Lu.cc = simd_or(r800_ffff_tmp85, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp145);
          bytetest_86_86 = simd_and(tmp35, tmp111);
          r800_ffff_tmp86 = simd_and(r800_ffff_tmp82, bytetest_86_86);
          struct_Lu.cc = simd_or(r800_ffff_tmp86, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp145);
          bytetest_88_88 = simd_and(tmp35, tmp131);
          r800_ffff_tmp87 = simd_and(r800_ffff_tmp82, bytetest_88_88);
          struct_Lu.cc = simd_or(r800_ffff_tmp87, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp145);
          bytetest_8a_8a = simd_and(tmp35, tmp145);
          r800_ffff_tmp88 = simd_and(r800_ffff_tmp82, bytetest_8a_8a);
          struct_Lu.cc = simd_or(r800_ffff_tmp88, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp145);
          bytetest_8c_8c = simd_and(tmp35, tmp54);
          r800_ffff_tmp89 = simd_and(r800_ffff_tmp82, bytetest_8c_8c);
          struct_Lu.cc = simd_or(r800_ffff_tmp89, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp145);
          bytetest_8e_8e = simd_and(tmp35, tmp173);
          r800_ffff_tmp90 = simd_and(r800_ffff_tmp82, bytetest_8e_8e);
          struct_Lu.cc = simd_or(r800_ffff_tmp90, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp145);
          bytetest_90_90 = simd_andc(tmp16, tmp9);
          r800_ffff_tmp91 = simd_and(r800_ffff_tmp82, bytetest_90_90);
          struct_Lu.cc = simd_or(r800_ffff_tmp91, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp145);
          bytetest_92_92 = simd_and(tmp16, tmp45);
          r800_ffff_tmp92 = simd_and(r800_ffff_tmp82, bytetest_92_92);
          struct_Lu.cc = simd_or(r800_ffff_tmp92, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp145);
          bytetest_94_94 = simd_and(tmp16, tmp81);
          r800_ffff_tmp93 = simd_and(r800_ffff_tmp82, bytetest_94_94);
          struct_Lu.cc = simd_or(r800_ffff_tmp93, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp145);
          bytetest_9e_9e = simd_and(tmp16, tmp173);
          r800_ffff_tmp94 = simd_and(r800_ffff_tmp82, bytetest_9e_9e);
          struct_Lu.cc = simd_or(r800_ffff_tmp94, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp145);
          bytetest_a0_a0 = simd_andc(tmp59, tmp9);
          r800_ffff_tmp95 = simd_and(r800_ffff_tmp82, bytetest_a0_a0);
          struct_Lu.cc = simd_or(r800_ffff_tmp95, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp145);
          bytetest_a2_a2 = simd_and(tmp59, tmp45);
          r800_ffff_tmp96 = simd_and(r800_ffff_tmp82, bytetest_a2_a2);
          struct_Lu.cc = simd_or(r800_ffff_tmp96, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp145);
          bytetest_a4_a4 = simd_and(tmp59, tmp81);
          r800_ffff_tmp97 = simd_and(r800_ffff_tmp82, bytetest_a4_a4);
          struct_Lu.cc = simd_or(r800_ffff_tmp97, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp145);
          bytetest_a6_a6 = simd_and(tmp59, tmp111);
          r800_ffff_tmp98 = simd_and(r800_ffff_tmp82, bytetest_a6_a6);
          struct_Lu.cc = simd_or(r800_ffff_tmp98, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp145);
          bytetest_a8_a8 = simd_and(tmp59, tmp131);
          r800_ffff_tmp99 = simd_and(r800_ffff_tmp82, bytetest_a8_a8);
          struct_Lu.cc = simd_or(r800_ffff_tmp99, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp145);
          bytetest_aa_aa = simd_and(tmp59, tmp145);
          r800_ffff_tmp100 = simd_and(r800_ffff_tmp82, bytetest_aa_aa);
          struct_Lu.cc = simd_or(r800_ffff_tmp100, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp145);
          bytetest_ac_ac = simd_and(tmp59, tmp54);
          r800_ffff_tmp101 = simd_and(r800_ffff_tmp82, bytetest_ac_ac);
          struct_Lu.cc = simd_or(r800_ffff_tmp101, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp145);
          bytetest_ae_ae = simd_and(tmp59, tmp173);
          r800_ffff_tmp102 = simd_and(r800_ffff_tmp82, bytetest_ae_ae);
          struct_Lu.cc = simd_or(r800_ffff_tmp102, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp145);
          bytetest_b0_b0 = simd_andc(bytetest_b0_bf, tmp9);
          r800_ffff_tmp103 = simd_and(r800_ffff_tmp82, bytetest_b0_b0);
          struct_Lu.cc = simd_or(r800_ffff_tmp103, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp145);
          bytetest_b2_b2 = simd_and(bytetest_b0_bf, tmp45);
          r800_ffff_tmp104 = simd_and(r800_ffff_tmp82, bytetest_b2_b2);
          struct_Lu.cc = simd_or(r800_ffff_tmp104, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp145);
          bytetest_b4_b4 = simd_and(bytetest_b0_bf, tmp81);
          r800_ffff_tmp105 = simd_and(r800_ffff_tmp82, bytetest_b4_b4);
          struct_Lu.cc = simd_or(r800_ffff_tmp105, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp145);
          bytetest_b6_b6 = simd_and(bytetest_b0_bf, tmp111);
          r800_ffff_tmp106 = simd_and(r800_ffff_tmp82, bytetest_b6_b6);
          struct_Lu.cc = simd_or(r800_ffff_tmp106, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp145);
          bytetest_b8_b8 = simd_and(bytetest_b0_bf, tmp131);
          r800_ffff_tmp107 = simd_and(r800_ffff_tmp82, bytetest_b8_b8);
          struct_Lu.cc = simd_or(r800_ffff_tmp107, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp145);
          bytetest_ba_ba = simd_and(bytetest_b0_bf, tmp145);
          r800_ffff_tmp108 = simd_and(r800_ffff_tmp82, bytetest_ba_ba);
          struct_Lu.cc = simd_or(r800_ffff_tmp108, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp145);
          bytetest_bc_bc = simd_and(bytetest_b0_bf, tmp54);
          r800_ffff_tmp109 = simd_and(r800_ffff_tmp82, bytetest_bc_bc);
          struct_Lu.cc = simd_or(r800_ffff_tmp109, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp145);
          bytetest_be_be = simd_and(bytetest_b0_bf, tmp173);
          r800_ffff_tmp110 = simd_and(r800_ffff_tmp82, bytetest_be_be);
          struct_Lu.cc = simd_or(r800_ffff_tmp110, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp151);
          bytetest_80_80 = simd_andc(tmp35, tmp9);
          r800_ffff_tmp111 = simd_and(r800_ffff_tmp3, bytetest_bb);
          carryQ.cq[42] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp111, carryQ.get_carry_in(42), r800_ffff_tmp112));
          r800_ffff_tmp113 = simd_and(r800_ffff_tmp112, bytetest_80_80);
          struct_Lu.cc = simd_or(r800_ffff_tmp113, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp151);
          bytetest_82_82 = simd_and(tmp35, tmp45);
          r800_ffff_tmp114 = simd_and(r800_ffff_tmp112, bytetest_82_82);
          struct_Lu.cc = simd_or(r800_ffff_tmp114, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp151);
          bytetest_84_84 = simd_and(tmp35, tmp81);
          r800_ffff_tmp115 = simd_and(r800_ffff_tmp112, bytetest_84_84);
          struct_Lu.cc = simd_or(r800_ffff_tmp115, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp151);
          bytetest_86_86 = simd_and(tmp35, tmp111);
          r800_ffff_tmp116 = simd_and(r800_ffff_tmp112, bytetest_86_86);
          struct_Lu.cc = simd_or(r800_ffff_tmp116, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp151);
          bytetest_88_88 = simd_and(tmp35, tmp131);
          r800_ffff_tmp117 = simd_and(r800_ffff_tmp112, bytetest_88_88);
          struct_Lu.cc = simd_or(r800_ffff_tmp117, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp151);
          bytetest_8a_8a = simd_and(tmp35, tmp145);
          r800_ffff_tmp118 = simd_and(r800_ffff_tmp112, bytetest_8a_8a);
          struct_Lu.cc = simd_or(r800_ffff_tmp118, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp151);
          bytetest_8c_8c = simd_and(tmp35, tmp54);
          r800_ffff_tmp119 = simd_and(r800_ffff_tmp112, bytetest_8c_8c);
          struct_Lu.cc = simd_or(r800_ffff_tmp119, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp151);
          bytetest_8e_8e = simd_and(tmp35, tmp173);
          r800_ffff_tmp120 = simd_and(r800_ffff_tmp112, bytetest_8e_8e);
          struct_Lu.cc = simd_or(r800_ffff_tmp120, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp151);
          bytetest_90_90 = simd_andc(tmp16, tmp9);
          r800_ffff_tmp121 = simd_and(r800_ffff_tmp112, bytetest_90_90);
          struct_Lu.cc = simd_or(r800_ffff_tmp121, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp151);
          bytetest_92_92 = simd_and(tmp16, tmp45);
          r800_ffff_tmp122 = simd_and(r800_ffff_tmp112, bytetest_92_92);
          struct_Lu.cc = simd_or(r800_ffff_tmp122, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp151);
          bytetest_94_94 = simd_and(tmp16, tmp81);
          r800_ffff_tmp123 = simd_and(r800_ffff_tmp112, bytetest_94_94);
          struct_Lu.cc = simd_or(r800_ffff_tmp123, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp151);
          bytetest_96_96 = simd_and(tmp16, tmp111);
          r800_ffff_tmp124 = simd_and(r800_ffff_tmp112, bytetest_96_96);
          struct_Lu.cc = simd_or(r800_ffff_tmp124, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp151);
          bytetest_98_98 = simd_and(tmp16, tmp131);
          r800_ffff_tmp125 = simd_and(r800_ffff_tmp112, bytetest_98_98);
          struct_Lu.cc = simd_or(r800_ffff_tmp125, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp151);
          bytetest_9a_9a = simd_and(tmp16, tmp145);
          r800_ffff_tmp126 = simd_and(r800_ffff_tmp112, bytetest_9a_9a);
          struct_Lu.cc = simd_or(r800_ffff_tmp126, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp151);
          bytetest_9c_9c = simd_and(tmp16, tmp54);
          r800_ffff_tmp127 = simd_and(r800_ffff_tmp112, bytetest_9c_9c);
          struct_Lu.cc = simd_or(r800_ffff_tmp127, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp151);
          bytetest_9e_9e = simd_and(tmp16, tmp173);
          r800_ffff_tmp128 = simd_and(r800_ffff_tmp112, bytetest_9e_9e);
          struct_Lu.cc = simd_or(r800_ffff_tmp128, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp151);
          bytetest_a0_a0 = simd_andc(tmp59, tmp9);
          r800_ffff_tmp129 = simd_and(r800_ffff_tmp112, bytetest_a0_a0);
          struct_Lu.cc = simd_or(r800_ffff_tmp129, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp151);
          bytetest_a2_a2 = simd_and(tmp59, tmp45);
          r800_ffff_tmp130 = simd_and(r800_ffff_tmp112, bytetest_a2_a2);
          struct_Lu.cc = simd_or(r800_ffff_tmp130, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp151);
          bytetest_a4_a4 = simd_and(tmp59, tmp81);
          r800_ffff_tmp131 = simd_and(r800_ffff_tmp112, bytetest_a4_a4);
          struct_Lu.cc = simd_or(r800_ffff_tmp131, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp151);
          bytetest_a6_a6 = simd_and(tmp59, tmp111);
          r800_ffff_tmp132 = simd_and(r800_ffff_tmp112, bytetest_a6_a6);
          struct_Lu.cc = simd_or(r800_ffff_tmp132, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp151);
          bytetest_a8_a8 = simd_and(tmp59, tmp131);
          r800_ffff_tmp133 = simd_and(r800_ffff_tmp112, bytetest_a8_a8);
          struct_Lu.cc = simd_or(r800_ffff_tmp133, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp151);
          bytetest_aa_aa = simd_and(tmp59, tmp145);
          r800_ffff_tmp134 = simd_and(r800_ffff_tmp112, bytetest_aa_aa);
          struct_Lu.cc = simd_or(r800_ffff_tmp134, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp151);
          bytetest_ac_ac = simd_and(tmp59, tmp54);
          r800_ffff_tmp135 = simd_and(r800_ffff_tmp112, bytetest_ac_ac);
          struct_Lu.cc = simd_or(r800_ffff_tmp135, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp151);
          bytetest_ae_ae = simd_and(tmp59, tmp173);
          r800_ffff_tmp136 = simd_and(r800_ffff_tmp112, bytetest_ae_ae);
          struct_Lu.cc = simd_or(r800_ffff_tmp136, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp151);
          bytetest_b0_b0 = simd_andc(bytetest_b0_bf, tmp9);
          r800_ffff_tmp137 = simd_and(r800_ffff_tmp112, bytetest_b0_b0);
          struct_Lu.cc = simd_or(r800_ffff_tmp137, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp151);
          bytetest_b2_b2 = simd_and(bytetest_b0_bf, tmp45);
          r800_ffff_tmp138 = simd_and(r800_ffff_tmp112, bytetest_b2_b2);
          struct_Lu.cc = simd_or(r800_ffff_tmp138, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp151);
          bytetest_b4_b4 = simd_and(bytetest_b0_bf, tmp81);
          r800_ffff_tmp139 = simd_and(r800_ffff_tmp112, bytetest_b4_b4);
          struct_Lu.cc = simd_or(r800_ffff_tmp139, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp151);
          bytetest_b6_b6 = simd_and(bytetest_b0_bf, tmp111);
          r800_ffff_tmp140 = simd_and(r800_ffff_tmp112, bytetest_b6_b6);
          struct_Lu.cc = simd_or(r800_ffff_tmp140, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp151);
          bytetest_b8_b8 = simd_and(bytetest_b0_bf, tmp131);
          r800_ffff_tmp141 = simd_and(r800_ffff_tmp112, bytetest_b8_b8);
          struct_Lu.cc = simd_or(r800_ffff_tmp141, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp151);
          bytetest_ba_ba = simd_and(bytetest_b0_bf, tmp145);
          r800_ffff_tmp142 = simd_and(r800_ffff_tmp112, bytetest_ba_ba);
          struct_Lu.cc = simd_or(r800_ffff_tmp142, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp151);
          bytetest_bc_bc = simd_and(bytetest_b0_bf, tmp54);
          r800_ffff_tmp143 = simd_and(r800_ffff_tmp112, bytetest_bc_bc);
          struct_Lu.cc = simd_or(r800_ffff_tmp143, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp151);
          bytetest_be_be = simd_and(bytetest_b0_bf, tmp173);
          r800_ffff_tmp144 = simd_and(r800_ffff_tmp112, bytetest_be_be);
          struct_Lu.cc = simd_or(r800_ffff_tmp144, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bc = simd_and(bytetest_b0_bf, tmp54);
          bytetest_88_8f = simd_and(tmp35, basis_bits.bit_4);
          r800_ffff_tmp145 = simd_and(r800_ffff_tmp3, bytetest_bc);
          carryQ.cq[43] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp145, carryQ.get_carry_in(43), r800_ffff_tmp146));
          r800_ffff_tmp147 = simd_and(r800_ffff_tmp146, bytetest_88_8f);
          struct_Lu.cc = simd_or(r800_ffff_tmp147, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bc = simd_and(bytetest_b0_bf, tmp54);
          r800_ffff_tmp148 = simd_and(tmp16, basis_bits.bit_4);
          bytetest_98_9d = simd_andc(r800_ffff_tmp148, tmp36);
          r800_ffff_tmp149 = simd_and(r800_ffff_tmp146, bytetest_98_9d);
          struct_Lu.cc = simd_or(r800_ffff_tmp149, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bc = simd_and(bytetest_b0_bf, tmp54);
          bytetest_a8_af = simd_and(tmp59, basis_bits.bit_4);
          r800_ffff_tmp150 = simd_and(r800_ffff_tmp146, bytetest_a8_af);
          struct_Lu.cc = simd_or(r800_ffff_tmp150, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bc = simd_and(bytetest_b0_bf, tmp54);
          bytetest_b8_bf = simd_and(bytetest_b0_bf, basis_bits.bit_4);
          r800_ffff_tmp151 = simd_and(r800_ffff_tmp146, bytetest_b8_bf);
          struct_Lu.cc = simd_or(r800_ffff_tmp151, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bd = simd_and(bytetest_b0_bf, tmp19);
          bytetest_88_8d = simd_andc(bytetest_88_8f, tmp36);
          r800_ffff_tmp152 = simd_and(r800_ffff_tmp3, bytetest_bd);
          carryQ.cq[44] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp152, carryQ.get_carry_in(44), r800_ffff_tmp153));
          r800_ffff_tmp154 = simd_and(r800_ffff_tmp153, bytetest_88_8d);
          struct_Lu.cc = simd_or(r800_ffff_tmp154, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bd = simd_and(bytetest_b0_bf, tmp19);
          bytetest_99_99 = simd_and(tmp16, tmp138);
          r800_ffff_tmp155 = simd_and(r800_ffff_tmp153, bytetest_99_99);
          struct_Lu.cc = simd_or(r800_ffff_tmp155, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bd = simd_and(bytetest_b0_bf, tmp19);
          bytetest_9b_9b = simd_and(tmp16, tmp151);
          r800_ffff_tmp156 = simd_and(r800_ffff_tmp153, bytetest_9b_9b);
          struct_Lu.cc = simd_or(r800_ffff_tmp156, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bd = simd_and(bytetest_b0_bf, tmp19);
          bytetest_9d_9d = simd_and(tmp16, tmp19);
          r800_ffff_tmp157 = simd_and(r800_ffff_tmp153, bytetest_9d_9d);
          struct_Lu.cc = simd_or(r800_ffff_tmp157, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bd = simd_and(bytetest_b0_bf, tmp19);
          bytetest_9f_9f = simd_and(tmp16, tmp166);
          r800_ffff_tmp158 = simd_and(r800_ffff_tmp153, bytetest_9f_9f);
          struct_Lu.cc = simd_or(r800_ffff_tmp158, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bd = simd_and(bytetest_b0_bf, tmp19);
          bytetest_a8_af = simd_and(tmp59, basis_bits.bit_4);
          r800_ffff_tmp159 = simd_and(r800_ffff_tmp153, bytetest_a8_af);
          struct_Lu.cc = simd_or(r800_ffff_tmp159, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_be = simd_and(bytetest_b0_bf, tmp173);
          bytetest_b8_bb = simd_and(bytetest_b0_bf, tmp99);
          r800_ffff_tmp160 = simd_and(r800_ffff_tmp3, bytetest_be);
          carryQ.cq[45] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp160, carryQ.get_carry_in(45), r800_ffff_tmp161));
          r800_ffff_tmp162 = simd_and(r800_ffff_tmp161, bytetest_b8_bb);
          struct_Lu.cc = simd_or(r800_ffff_tmp162, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp166);
          bytetest_88_8b = simd_and(tmp35, tmp99);
          r800_ffff_tmp163 = simd_and(r800_ffff_tmp3, bytetest_bf);
          carryQ.cq[46] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp163, carryQ.get_carry_in(46), r800_ffff_tmp164));
          r800_ffff_tmp165 = simd_and(r800_ffff_tmp164, bytetest_88_8b);
          struct_Lu.cc = simd_or(r800_ffff_tmp165, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp166);
          bytetest_98_9b = simd_and(tmp16, tmp99);
          r800_ffff_tmp166 = simd_and(r800_ffff_tmp164, bytetest_98_9b);
          struct_Lu.cc = simd_or(r800_ffff_tmp166, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp166);
          bytetest_a8_ac = simd_andc(bytetest_a8_af, tmp90);
          r800_ffff_tmp167 = simd_and(r800_ffff_tmp164, bytetest_a8_ac);
          struct_Lu.cc = simd_or(r800_ffff_tmp167, struct_Lu.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp166);
          bytetest_b8_bb = simd_and(bytetest_b0_bf, tmp99);
          r800_ffff_tmp168 = simd_and(r800_ffff_tmp164, bytetest_b8_bb);
          struct_Lu.cc = simd_or(r800_ffff_tmp168, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_84 = simd_and(tmp35, tmp81);
          bytetest_82_82 = simd_and(tmp35, tmp45);
          r800_ffff_tmp169 = simd_and(tmp25, bytetest_e2);
          carryQ.cq[47] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp169, carryQ.get_carry_in(47), r800_ffff_tmp170));
          r800_ffff_tmp171 = simd_and(r800_ffff_tmp170, bytetest_84);
          carryQ.cq[48] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp171, carryQ.get_carry_in(48), r800_ffff_tmp172));
          r800_ffff_tmp173 = simd_and(r800_ffff_tmp172, bytetest_82_82);
          struct_Lu.cc = simd_or(r800_ffff_tmp173, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_84 = simd_and(tmp35, tmp81);
          bytetest_87_87 = simd_and(tmp35, tmp123);
          r800_ffff_tmp174 = simd_and(r800_ffff_tmp172, bytetest_87_87);
          struct_Lu.cc = simd_or(r800_ffff_tmp174, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_84 = simd_and(tmp35, tmp81);
          r800_ffff_tmp175 = simd_not(basis_bits.bit_6);
          r800_ffff_tmp176 = simd_or(simd_and(basis_bits.bit_5, r800_ffff_tmp175), simd_andc(tmp3, basis_bits.bit_5));
          bytetest_8b_8d = simd_and(bytetest_88_8f, r800_ffff_tmp176);
          r800_ffff_tmp177 = simd_and(r800_ffff_tmp172, bytetest_8b_8d);
          struct_Lu.cc = simd_or(r800_ffff_tmp177, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_84 = simd_and(tmp35, tmp81);
          r800_ffff_tmp178 = simd_andc(tmp16, tmp7);
          bytetest_90_92 = simd_andc(r800_ffff_tmp178, tmp3);
          r800_ffff_tmp179 = simd_and(r800_ffff_tmp172, bytetest_90_92);
          struct_Lu.cc = simd_or(r800_ffff_tmp179, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_84 = simd_and(tmp35, tmp81);
          bytetest_95_95 = simd_and(tmp16, tmp106);
          r800_ffff_tmp180 = simd_and(r800_ffff_tmp172, bytetest_95_95);
          struct_Lu.cc = simd_or(r800_ffff_tmp180, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_84 = simd_and(tmp35, tmp81);
          r800_ffff_tmp181 = simd_or(simd_and(basis_bits.bit_5, r800_ffff_tmp175), simd_andc(tmp8, basis_bits.bit_5));
          bytetest_99_9d = simd_and(r800_ffff_tmp148, r800_ffff_tmp181);
          r800_ffff_tmp182 = simd_and(r800_ffff_tmp172, bytetest_99_9d);
          struct_Lu.cc = simd_or(r800_ffff_tmp182, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_84 = simd_and(tmp35, tmp81);
          bytetest_a4_a4 = simd_and(tmp59, tmp81);
          r800_ffff_tmp183 = simd_and(r800_ffff_tmp172, bytetest_a4_a4);
          struct_Lu.cc = simd_or(r800_ffff_tmp183, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_84 = simd_and(tmp35, tmp81);
          bytetest_a6_a6 = simd_and(tmp59, tmp111);
          r800_ffff_tmp184 = simd_and(r800_ffff_tmp172, bytetest_a6_a6);
          struct_Lu.cc = simd_or(r800_ffff_tmp184, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_84 = simd_and(tmp35, tmp81);
          bytetest_a8_a8 = simd_and(tmp59, tmp131);
          r800_ffff_tmp185 = simd_and(r800_ffff_tmp172, bytetest_a8_a8);
          struct_Lu.cc = simd_or(r800_ffff_tmp185, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_84 = simd_and(tmp35, tmp81);
          r800_ffff_tmp186 = simd_or(simd_and(basis_bits.bit_5, r800_ffff_tmp175), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
          bytetest_aa_ad = simd_and(bytetest_a8_af, r800_ffff_tmp186);
          r800_ffff_tmp187 = simd_and(r800_ffff_tmp172, bytetest_aa_ad);
          struct_Lu.cc = simd_or(r800_ffff_tmp187, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_84 = simd_and(tmp35, tmp81);
          bytetest_b0_b3 = simd_andc(bytetest_b0_bf, tmp7);
          r800_ffff_tmp188 = simd_and(r800_ffff_tmp172, bytetest_b0_b3);
          struct_Lu.cc = simd_or(r800_ffff_tmp188, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_84 = simd_and(tmp35, tmp81);
          bytetest_be_bf = simd_and(bytetest_b0_bf, tmp56);
          r800_ffff_tmp189 = simd_and(r800_ffff_tmp172, bytetest_be_bf);
          struct_Lu.cc = simd_or(r800_ffff_tmp189, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_85 = simd_and(tmp35, tmp106);
          bytetest_85_85 = simd_and(tmp35, tmp106);
          r800_ffff_tmp190 = simd_and(r800_ffff_tmp170, bytetest_85);
          carryQ.cq[49] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp190, carryQ.get_carry_in(49), r800_ffff_tmp191));
          r800_ffff_tmp192 = simd_and(r800_ffff_tmp191, bytetest_85_85);
          struct_Lu.cc = simd_or(r800_ffff_tmp192, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_86 = simd_and(tmp35, tmp111);
          bytetest_83_83 = simd_and(tmp35, tmp74);
          r800_ffff_tmp193 = simd_and(r800_ffff_tmp170, bytetest_86);
          carryQ.cq[50] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp193, carryQ.get_carry_in(50), r800_ffff_tmp194));
          r800_ffff_tmp195 = simd_and(r800_ffff_tmp194, bytetest_83_83);
          struct_Lu.cc = simd_or(r800_ffff_tmp195, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b0 = simd_andc(bytetest_b0_bf, tmp9);
          r800_ffff_tmp196 = simd_and(basis_bits.bit_2, tmp167);
          bytetest_80_ae = simd_andc(tmp14, r800_ffff_tmp196);
          r800_ffff_tmp197 = simd_and(r800_ffff_tmp170, bytetest_b0);
          carryQ.cq[51] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp197, carryQ.get_carry_in(51), r800_ffff_tmp198));
          r800_ffff_tmp199 = simd_and(r800_ffff_tmp198, bytetest_80_ae);
          struct_Lu.cc = simd_or(r800_ffff_tmp199, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b1 = simd_and(bytetest_b0_bf, tmp33);
          bytetest_a0_a0 = simd_andc(tmp59, tmp9);
          r800_ffff_tmp200 = simd_and(r800_ffff_tmp170, bytetest_b1);
          carryQ.cq[52] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp200, carryQ.get_carry_in(52), r800_ffff_tmp201));
          r800_ffff_tmp202 = simd_and(r800_ffff_tmp201, bytetest_a0_a0);
          struct_Lu.cc = simd_or(r800_ffff_tmp202, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b1 = simd_and(bytetest_b0_bf, tmp33);
          r800_ffff_tmp203 = simd_andc(tmp59, basis_bits.bit_4);
          r800_ffff_tmp204 = simd_or(simd_and(basis_bits.bit_5, tmp67), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
          bytetest_a2_a4 = simd_and(r800_ffff_tmp203, r800_ffff_tmp204);
          r800_ffff_tmp205 = simd_and(r800_ffff_tmp201, bytetest_a2_a4);
          struct_Lu.cc = simd_or(r800_ffff_tmp205, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b1 = simd_and(bytetest_b0_bf, tmp33);
          bytetest_a7_a7 = simd_and(tmp59, tmp123);
          r800_ffff_tmp206 = simd_and(r800_ffff_tmp201, bytetest_a7_a7);
          struct_Lu.cc = simd_or(r800_ffff_tmp206, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b1 = simd_and(bytetest_b0_bf, tmp33);
          bytetest_a9_a9 = simd_and(tmp59, tmp138);
          r800_ffff_tmp207 = simd_and(r800_ffff_tmp201, bytetest_a9_a9);
          struct_Lu.cc = simd_or(r800_ffff_tmp207, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b1 = simd_and(bytetest_b0_bf, tmp33);
          bytetest_ab_ab = simd_and(tmp59, tmp151);
          r800_ffff_tmp208 = simd_and(r800_ffff_tmp201, bytetest_ab_ab);
          struct_Lu.cc = simd_or(r800_ffff_tmp208, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b1 = simd_and(bytetest_b0_bf, tmp33);
          r800_ffff_tmp209 = simd_or(simd_and(basis_bits.bit_3, tmp113), simd_andc(tmp93, basis_bits.bit_3));
          bytetest_ad_b0 = simd_and(bytetest_a0_bf, r800_ffff_tmp209);
          r800_ffff_tmp210 = simd_and(r800_ffff_tmp201, bytetest_ad_b0);
          struct_Lu.cc = simd_or(r800_ffff_tmp210, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b1 = simd_and(bytetest_b0_bf, tmp33);
          bytetest_b2_b2 = simd_and(bytetest_b0_bf, tmp45);
          r800_ffff_tmp211 = simd_and(r800_ffff_tmp201, bytetest_b2_b2);
          struct_Lu.cc = simd_or(r800_ffff_tmp211, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b1 = simd_and(bytetest_b0_bf, tmp33);
          bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp106);
          r800_ffff_tmp212 = simd_and(r800_ffff_tmp201, bytetest_b5_b5);
          struct_Lu.cc = simd_or(r800_ffff_tmp212, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_80_80 = simd_andc(tmp35, tmp9);
          r800_ffff_tmp213 = simd_and(r800_ffff_tmp170, bytetest_b2);
          carryQ.cq[53] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp213, carryQ.get_carry_in(53), r800_ffff_tmp214));
          r800_ffff_tmp215 = simd_and(r800_ffff_tmp214, bytetest_80_80);
          bytetest_b1 = simd_and(bytetest_b0_bf, tmp33);
          bytetest_be_bf = simd_and(bytetest_b0_bf, tmp56);
          r800_ffff_tmp216 = simd_and(r800_ffff_tmp201, bytetest_be_bf);
          r800_ffff_tmp217 = simd_or(r800_ffff_tmp216, r800_ffff_tmp215);
          struct_Lu.cc = simd_or(r800_ffff_tmp217, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_82_82 = simd_and(tmp35, tmp45);
          r800_ffff_tmp218 = simd_and(r800_ffff_tmp214, bytetest_82_82);
          struct_Lu.cc = simd_or(r800_ffff_tmp218, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_84_84 = simd_and(tmp35, tmp81);
          r800_ffff_tmp219 = simd_and(r800_ffff_tmp214, bytetest_84_84);
          struct_Lu.cc = simd_or(r800_ffff_tmp219, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_86_86 = simd_and(tmp35, tmp111);
          r800_ffff_tmp220 = simd_and(r800_ffff_tmp214, bytetest_86_86);
          struct_Lu.cc = simd_or(r800_ffff_tmp220, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_88_88 = simd_and(tmp35, tmp131);
          r800_ffff_tmp221 = simd_and(r800_ffff_tmp214, bytetest_88_88);
          struct_Lu.cc = simd_or(r800_ffff_tmp221, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_8a_8a = simd_and(tmp35, tmp145);
          r800_ffff_tmp222 = simd_and(r800_ffff_tmp214, bytetest_8a_8a);
          struct_Lu.cc = simd_or(r800_ffff_tmp222, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_8c_8c = simd_and(tmp35, tmp54);
          r800_ffff_tmp223 = simd_and(r800_ffff_tmp214, bytetest_8c_8c);
          struct_Lu.cc = simd_or(r800_ffff_tmp223, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_8e_8e = simd_and(tmp35, tmp173);
          r800_ffff_tmp224 = simd_and(r800_ffff_tmp214, bytetest_8e_8e);
          struct_Lu.cc = simd_or(r800_ffff_tmp224, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_90_90 = simd_andc(tmp16, tmp9);
          r800_ffff_tmp225 = simd_and(r800_ffff_tmp214, bytetest_90_90);
          struct_Lu.cc = simd_or(r800_ffff_tmp225, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_92_92 = simd_and(tmp16, tmp45);
          r800_ffff_tmp226 = simd_and(r800_ffff_tmp214, bytetest_92_92);
          struct_Lu.cc = simd_or(r800_ffff_tmp226, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_94_94 = simd_and(tmp16, tmp81);
          r800_ffff_tmp227 = simd_and(r800_ffff_tmp214, bytetest_94_94);
          struct_Lu.cc = simd_or(r800_ffff_tmp227, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_96_96 = simd_and(tmp16, tmp111);
          r800_ffff_tmp228 = simd_and(r800_ffff_tmp214, bytetest_96_96);
          struct_Lu.cc = simd_or(r800_ffff_tmp228, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_98_98 = simd_and(tmp16, tmp131);
          r800_ffff_tmp229 = simd_and(r800_ffff_tmp214, bytetest_98_98);
          struct_Lu.cc = simd_or(r800_ffff_tmp229, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_9a_9a = simd_and(tmp16, tmp145);
          r800_ffff_tmp230 = simd_and(r800_ffff_tmp214, bytetest_9a_9a);
          struct_Lu.cc = simd_or(r800_ffff_tmp230, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_9c_9c = simd_and(tmp16, tmp54);
          r800_ffff_tmp231 = simd_and(r800_ffff_tmp214, bytetest_9c_9c);
          struct_Lu.cc = simd_or(r800_ffff_tmp231, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_9e_9e = simd_and(tmp16, tmp173);
          r800_ffff_tmp232 = simd_and(r800_ffff_tmp214, bytetest_9e_9e);
          struct_Lu.cc = simd_or(r800_ffff_tmp232, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_a0_a0 = simd_andc(tmp59, tmp9);
          r800_ffff_tmp233 = simd_and(r800_ffff_tmp214, bytetest_a0_a0);
          struct_Lu.cc = simd_or(r800_ffff_tmp233, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_a2_a2 = simd_and(tmp59, tmp45);
          r800_ffff_tmp234 = simd_and(r800_ffff_tmp214, bytetest_a2_a2);
          struct_Lu.cc = simd_or(r800_ffff_tmp234, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_a4_a4 = simd_and(tmp59, tmp81);
          r800_ffff_tmp235 = simd_and(r800_ffff_tmp214, bytetest_a4_a4);
          struct_Lu.cc = simd_or(r800_ffff_tmp235, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_a6_a6 = simd_and(tmp59, tmp111);
          r800_ffff_tmp236 = simd_and(r800_ffff_tmp214, bytetest_a6_a6);
          struct_Lu.cc = simd_or(r800_ffff_tmp236, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_a8_a8 = simd_and(tmp59, tmp131);
          r800_ffff_tmp237 = simd_and(r800_ffff_tmp214, bytetest_a8_a8);
          struct_Lu.cc = simd_or(r800_ffff_tmp237, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_aa_aa = simd_and(tmp59, tmp145);
          r800_ffff_tmp238 = simd_and(r800_ffff_tmp214, bytetest_aa_aa);
          struct_Lu.cc = simd_or(r800_ffff_tmp238, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_ac_ac = simd_and(tmp59, tmp54);
          r800_ffff_tmp239 = simd_and(r800_ffff_tmp214, bytetest_ac_ac);
          struct_Lu.cc = simd_or(r800_ffff_tmp239, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_ae_ae = simd_and(tmp59, tmp173);
          r800_ffff_tmp240 = simd_and(r800_ffff_tmp214, bytetest_ae_ae);
          struct_Lu.cc = simd_or(r800_ffff_tmp240, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_b0_b0 = simd_andc(bytetest_b0_bf, tmp9);
          r800_ffff_tmp241 = simd_and(r800_ffff_tmp214, bytetest_b0_b0);
          struct_Lu.cc = simd_or(r800_ffff_tmp241, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_b2_b2 = simd_and(bytetest_b0_bf, tmp45);
          r800_ffff_tmp242 = simd_and(r800_ffff_tmp214, bytetest_b2_b2);
          struct_Lu.cc = simd_or(r800_ffff_tmp242, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_b4_b4 = simd_and(bytetest_b0_bf, tmp81);
          r800_ffff_tmp243 = simd_and(r800_ffff_tmp214, bytetest_b4_b4);
          struct_Lu.cc = simd_or(r800_ffff_tmp243, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_b6_b6 = simd_and(bytetest_b0_bf, tmp111);
          r800_ffff_tmp244 = simd_and(r800_ffff_tmp214, bytetest_b6_b6);
          struct_Lu.cc = simd_or(r800_ffff_tmp244, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_b8_b8 = simd_and(bytetest_b0_bf, tmp131);
          r800_ffff_tmp245 = simd_and(r800_ffff_tmp214, bytetest_b8_b8);
          struct_Lu.cc = simd_or(r800_ffff_tmp245, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_ba_ba = simd_and(bytetest_b0_bf, tmp145);
          r800_ffff_tmp246 = simd_and(r800_ffff_tmp214, bytetest_ba_ba);
          struct_Lu.cc = simd_or(r800_ffff_tmp246, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_bc_bc = simd_and(bytetest_b0_bf, tmp54);
          r800_ffff_tmp247 = simd_and(r800_ffff_tmp214, bytetest_bc_bc);
          struct_Lu.cc = simd_or(r800_ffff_tmp247, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_be_be = simd_and(bytetest_b0_bf, tmp173);
          r800_ffff_tmp248 = simd_and(r800_ffff_tmp214, bytetest_be_be);
          struct_Lu.cc = simd_or(r800_ffff_tmp248, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp74);
          bytetest_80_80 = simd_andc(tmp35, tmp9);
          r800_ffff_tmp249 = simd_and(r800_ffff_tmp170, bytetest_b3);
          carryQ.cq[54] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp249, carryQ.get_carry_in(54), r800_ffff_tmp250));
          r800_ffff_tmp251 = simd_and(r800_ffff_tmp250, bytetest_80_80);
          struct_Lu.cc = simd_or(r800_ffff_tmp251, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp74);
          bytetest_82_82 = simd_and(tmp35, tmp45);
          r800_ffff_tmp252 = simd_and(r800_ffff_tmp250, bytetest_82_82);
          struct_Lu.cc = simd_or(r800_ffff_tmp252, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp74);
          bytetest_84_84 = simd_and(tmp35, tmp81);
          r800_ffff_tmp253 = simd_and(r800_ffff_tmp250, bytetest_84_84);
          struct_Lu.cc = simd_or(r800_ffff_tmp253, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp74);
          bytetest_86_86 = simd_and(tmp35, tmp111);
          r800_ffff_tmp254 = simd_and(r800_ffff_tmp250, bytetest_86_86);
          struct_Lu.cc = simd_or(r800_ffff_tmp254, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp74);
          bytetest_88_88 = simd_and(tmp35, tmp131);
          r800_ffff_tmp255 = simd_and(r800_ffff_tmp250, bytetest_88_88);
          struct_Lu.cc = simd_or(r800_ffff_tmp255, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp74);
          bytetest_8a_8a = simd_and(tmp35, tmp145);
          r800_ffff_tmp256 = simd_and(r800_ffff_tmp250, bytetest_8a_8a);
          struct_Lu.cc = simd_or(r800_ffff_tmp256, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp74);
          bytetest_8c_8c = simd_and(tmp35, tmp54);
          r800_ffff_tmp257 = simd_and(r800_ffff_tmp250, bytetest_8c_8c);
          struct_Lu.cc = simd_or(r800_ffff_tmp257, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp74);
          bytetest_8e_8e = simd_and(tmp35, tmp173);
          r800_ffff_tmp258 = simd_and(r800_ffff_tmp250, bytetest_8e_8e);
          struct_Lu.cc = simd_or(r800_ffff_tmp258, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp74);
          bytetest_90_90 = simd_andc(tmp16, tmp9);
          r800_ffff_tmp259 = simd_and(r800_ffff_tmp250, bytetest_90_90);
          struct_Lu.cc = simd_or(r800_ffff_tmp259, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp74);
          bytetest_92_92 = simd_and(tmp16, tmp45);
          r800_ffff_tmp260 = simd_and(r800_ffff_tmp250, bytetest_92_92);
          struct_Lu.cc = simd_or(r800_ffff_tmp260, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp74);
          bytetest_94_94 = simd_and(tmp16, tmp81);
          r800_ffff_tmp261 = simd_and(r800_ffff_tmp250, bytetest_94_94);
          struct_Lu.cc = simd_or(r800_ffff_tmp261, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp74);
          bytetest_96_96 = simd_and(tmp16, tmp111);
          r800_ffff_tmp262 = simd_and(r800_ffff_tmp250, bytetest_96_96);
          struct_Lu.cc = simd_or(r800_ffff_tmp262, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp74);
          bytetest_98_98 = simd_and(tmp16, tmp131);
          r800_ffff_tmp263 = simd_and(r800_ffff_tmp250, bytetest_98_98);
          struct_Lu.cc = simd_or(r800_ffff_tmp263, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp74);
          bytetest_9a_9a = simd_and(tmp16, tmp145);
          r800_ffff_tmp264 = simd_and(r800_ffff_tmp250, bytetest_9a_9a);
          struct_Lu.cc = simd_or(r800_ffff_tmp264, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp74);
          bytetest_9c_9c = simd_and(tmp16, tmp54);
          r800_ffff_tmp265 = simd_and(r800_ffff_tmp250, bytetest_9c_9c);
          struct_Lu.cc = simd_or(r800_ffff_tmp265, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp74);
          bytetest_9e_9e = simd_and(tmp16, tmp173);
          r800_ffff_tmp266 = simd_and(r800_ffff_tmp250, bytetest_9e_9e);
          struct_Lu.cc = simd_or(r800_ffff_tmp266, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp74);
          bytetest_a0_a0 = simd_andc(tmp59, tmp9);
          r800_ffff_tmp267 = simd_and(r800_ffff_tmp250, bytetest_a0_a0);
          struct_Lu.cc = simd_or(r800_ffff_tmp267, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp74);
          bytetest_a2_a2 = simd_and(tmp59, tmp45);
          r800_ffff_tmp268 = simd_and(r800_ffff_tmp250, bytetest_a2_a2);
          struct_Lu.cc = simd_or(r800_ffff_tmp268, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp74);
          bytetest_ab_ab = simd_and(tmp59, tmp151);
          r800_ffff_tmp269 = simd_and(r800_ffff_tmp250, bytetest_ab_ab);
          struct_Lu.cc = simd_or(r800_ffff_tmp269, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp74);
          bytetest_ad_ad = simd_and(tmp59, tmp19);
          r800_ffff_tmp270 = simd_and(r800_ffff_tmp250, bytetest_ad_ad);
          struct_Lu.cc = simd_or(r800_ffff_tmp270, struct_Lu.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp74);
          bytetest_b2_b2 = simd_and(bytetest_b0_bf, tmp45);
          r800_ffff_tmp271 = simd_and(r800_ffff_tmp250, bytetest_b2_b2);
          struct_Lu.cc = simd_or(r800_ffff_tmp271, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_99 = simd_and(tmp16, tmp138);
          bytetest_80_80 = simd_andc(tmp35, tmp9);
          r800_ffff_tmp272 = simd_and(tmp25, bytetest_ea);
          carryQ.cq[55] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp272, carryQ.get_carry_in(55), r800_ffff_tmp273));
          r800_ffff_tmp274 = simd_and(r800_ffff_tmp273, bytetest_99);
          carryQ.cq[56] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp274, carryQ.get_carry_in(56), r800_ffff_tmp275));
          r800_ffff_tmp276 = simd_and(r800_ffff_tmp275, bytetest_80_80);
          struct_Lu.cc = simd_or(r800_ffff_tmp276, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_99 = simd_and(tmp16, tmp138);
          bytetest_82_82 = simd_and(tmp35, tmp45);
          r800_ffff_tmp277 = simd_and(r800_ffff_tmp275, bytetest_82_82);
          struct_Lu.cc = simd_or(r800_ffff_tmp277, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_99 = simd_and(tmp16, tmp138);
          bytetest_84_84 = simd_and(tmp35, tmp81);
          r800_ffff_tmp278 = simd_and(r800_ffff_tmp275, bytetest_84_84);
          struct_Lu.cc = simd_or(r800_ffff_tmp278, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_99 = simd_and(tmp16, tmp138);
          bytetest_86_86 = simd_and(tmp35, tmp111);
          r800_ffff_tmp279 = simd_and(r800_ffff_tmp275, bytetest_86_86);
          struct_Lu.cc = simd_or(r800_ffff_tmp279, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_99 = simd_and(tmp16, tmp138);
          bytetest_88_88 = simd_and(tmp35, tmp131);
          r800_ffff_tmp280 = simd_and(r800_ffff_tmp275, bytetest_88_88);
          struct_Lu.cc = simd_or(r800_ffff_tmp280, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_99 = simd_and(tmp16, tmp138);
          bytetest_8a_8a = simd_and(tmp35, tmp145);
          r800_ffff_tmp281 = simd_and(r800_ffff_tmp275, bytetest_8a_8a);
          struct_Lu.cc = simd_or(r800_ffff_tmp281, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_99 = simd_and(tmp16, tmp138);
          bytetest_8c_8c = simd_and(tmp35, tmp54);
          r800_ffff_tmp282 = simd_and(r800_ffff_tmp275, bytetest_8c_8c);
          struct_Lu.cc = simd_or(r800_ffff_tmp282, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_99 = simd_and(tmp16, tmp138);
          bytetest_8e_8e = simd_and(tmp35, tmp173);
          r800_ffff_tmp283 = simd_and(r800_ffff_tmp275, bytetest_8e_8e);
          struct_Lu.cc = simd_or(r800_ffff_tmp283, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_99 = simd_and(tmp16, tmp138);
          bytetest_90_90 = simd_andc(tmp16, tmp9);
          r800_ffff_tmp284 = simd_and(r800_ffff_tmp275, bytetest_90_90);
          struct_Lu.cc = simd_or(r800_ffff_tmp284, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_99 = simd_and(tmp16, tmp138);
          bytetest_92_92 = simd_and(tmp16, tmp45);
          r800_ffff_tmp285 = simd_and(r800_ffff_tmp275, bytetest_92_92);
          struct_Lu.cc = simd_or(r800_ffff_tmp285, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_99 = simd_and(tmp16, tmp138);
          bytetest_94_94 = simd_and(tmp16, tmp81);
          r800_ffff_tmp286 = simd_and(r800_ffff_tmp275, bytetest_94_94);
          struct_Lu.cc = simd_or(r800_ffff_tmp286, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_99 = simd_and(tmp16, tmp138);
          bytetest_96_96 = simd_and(tmp16, tmp111);
          r800_ffff_tmp287 = simd_and(r800_ffff_tmp275, bytetest_96_96);
          struct_Lu.cc = simd_or(r800_ffff_tmp287, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_99 = simd_and(tmp16, tmp138);
          bytetest_98_98 = simd_and(tmp16, tmp131);
          r800_ffff_tmp288 = simd_and(r800_ffff_tmp275, bytetest_98_98);
          struct_Lu.cc = simd_or(r800_ffff_tmp288, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_99 = simd_and(tmp16, tmp138);
          bytetest_9a_9a = simd_and(tmp16, tmp145);
          r800_ffff_tmp289 = simd_and(r800_ffff_tmp275, bytetest_9a_9a);
          struct_Lu.cc = simd_or(r800_ffff_tmp289, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_99 = simd_and(tmp16, tmp138);
          bytetest_9c_9c = simd_and(tmp16, tmp54);
          r800_ffff_tmp290 = simd_and(r800_ffff_tmp275, bytetest_9c_9c);
          struct_Lu.cc = simd_or(r800_ffff_tmp290, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_99 = simd_and(tmp16, tmp138);
          bytetest_9e_9e = simd_and(tmp16, tmp173);
          r800_ffff_tmp291 = simd_and(r800_ffff_tmp275, bytetest_9e_9e);
          struct_Lu.cc = simd_or(r800_ffff_tmp291, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_99 = simd_and(tmp16, tmp138);
          bytetest_a0_a0 = simd_andc(tmp59, tmp9);
          r800_ffff_tmp292 = simd_and(r800_ffff_tmp275, bytetest_a0_a0);
          struct_Lu.cc = simd_or(r800_ffff_tmp292, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_99 = simd_and(tmp16, tmp138);
          bytetest_a2_a2 = simd_and(tmp59, tmp45);
          r800_ffff_tmp293 = simd_and(r800_ffff_tmp275, bytetest_a2_a2);
          struct_Lu.cc = simd_or(r800_ffff_tmp293, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_99 = simd_and(tmp16, tmp138);
          bytetest_a4_a4 = simd_and(tmp59, tmp81);
          r800_ffff_tmp294 = simd_and(r800_ffff_tmp275, bytetest_a4_a4);
          struct_Lu.cc = simd_or(r800_ffff_tmp294, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_99 = simd_and(tmp16, tmp138);
          bytetest_a6_a6 = simd_and(tmp59, tmp111);
          r800_ffff_tmp295 = simd_and(r800_ffff_tmp275, bytetest_a6_a6);
          struct_Lu.cc = simd_or(r800_ffff_tmp295, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_99 = simd_and(tmp16, tmp138);
          bytetest_a8_a8 = simd_and(tmp59, tmp131);
          r800_ffff_tmp296 = simd_and(r800_ffff_tmp275, bytetest_a8_a8);
          struct_Lu.cc = simd_or(r800_ffff_tmp296, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_99 = simd_and(tmp16, tmp138);
          bytetest_aa_aa = simd_and(tmp59, tmp145);
          r800_ffff_tmp297 = simd_and(r800_ffff_tmp275, bytetest_aa_aa);
          struct_Lu.cc = simd_or(r800_ffff_tmp297, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_99 = simd_and(tmp16, tmp138);
          bytetest_ac_ac = simd_and(tmp59, tmp54);
          r800_ffff_tmp298 = simd_and(r800_ffff_tmp275, bytetest_ac_ac);
          struct_Lu.cc = simd_or(r800_ffff_tmp298, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9a = simd_and(tmp16, tmp145);
          bytetest_80_80 = simd_andc(tmp35, tmp9);
          r800_ffff_tmp299 = simd_and(r800_ffff_tmp273, bytetest_9a);
          carryQ.cq[57] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp299, carryQ.get_carry_in(57), r800_ffff_tmp300));
          r800_ffff_tmp301 = simd_and(r800_ffff_tmp300, bytetest_80_80);
          struct_Lu.cc = simd_or(r800_ffff_tmp301, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9a = simd_and(tmp16, tmp145);
          bytetest_82_82 = simd_and(tmp35, tmp45);
          r800_ffff_tmp302 = simd_and(r800_ffff_tmp300, bytetest_82_82);
          struct_Lu.cc = simd_or(r800_ffff_tmp302, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9a = simd_and(tmp16, tmp145);
          bytetest_84_84 = simd_and(tmp35, tmp81);
          r800_ffff_tmp303 = simd_and(r800_ffff_tmp300, bytetest_84_84);
          struct_Lu.cc = simd_or(r800_ffff_tmp303, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9a = simd_and(tmp16, tmp145);
          bytetest_86_86 = simd_and(tmp35, tmp111);
          r800_ffff_tmp304 = simd_and(r800_ffff_tmp300, bytetest_86_86);
          struct_Lu.cc = simd_or(r800_ffff_tmp304, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9a = simd_and(tmp16, tmp145);
          bytetest_88_88 = simd_and(tmp35, tmp131);
          r800_ffff_tmp305 = simd_and(r800_ffff_tmp300, bytetest_88_88);
          struct_Lu.cc = simd_or(r800_ffff_tmp305, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9a = simd_and(tmp16, tmp145);
          bytetest_8a_8a = simd_and(tmp35, tmp145);
          r800_ffff_tmp306 = simd_and(r800_ffff_tmp300, bytetest_8a_8a);
          struct_Lu.cc = simd_or(r800_ffff_tmp306, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9a = simd_and(tmp16, tmp145);
          bytetest_8c_8c = simd_and(tmp35, tmp54);
          r800_ffff_tmp307 = simd_and(r800_ffff_tmp300, bytetest_8c_8c);
          struct_Lu.cc = simd_or(r800_ffff_tmp307, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9a = simd_and(tmp16, tmp145);
          bytetest_8e_8e = simd_and(tmp35, tmp173);
          r800_ffff_tmp308 = simd_and(r800_ffff_tmp300, bytetest_8e_8e);
          struct_Lu.cc = simd_or(r800_ffff_tmp308, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9a = simd_and(tmp16, tmp145);
          bytetest_90_90 = simd_andc(tmp16, tmp9);
          r800_ffff_tmp309 = simd_and(r800_ffff_tmp300, bytetest_90_90);
          struct_Lu.cc = simd_or(r800_ffff_tmp309, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9a = simd_and(tmp16, tmp145);
          bytetest_92_92 = simd_and(tmp16, tmp45);
          r800_ffff_tmp310 = simd_and(r800_ffff_tmp300, bytetest_92_92);
          struct_Lu.cc = simd_or(r800_ffff_tmp310, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9a = simd_and(tmp16, tmp145);
          bytetest_94_94 = simd_and(tmp16, tmp81);
          r800_ffff_tmp311 = simd_and(r800_ffff_tmp300, bytetest_94_94);
          struct_Lu.cc = simd_or(r800_ffff_tmp311, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9a = simd_and(tmp16, tmp145);
          bytetest_96_96 = simd_and(tmp16, tmp111);
          r800_ffff_tmp312 = simd_and(r800_ffff_tmp300, bytetest_96_96);
          struct_Lu.cc = simd_or(r800_ffff_tmp312, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9c = simd_and(tmp16, tmp54);
          bytetest_a2_a2 = simd_and(tmp59, tmp45);
          r800_ffff_tmp313 = simd_and(r800_ffff_tmp273, bytetest_9c);
          carryQ.cq[58] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp313, carryQ.get_carry_in(58), r800_ffff_tmp314));
          r800_ffff_tmp315 = simd_and(r800_ffff_tmp314, bytetest_a2_a2);
          struct_Lu.cc = simd_or(r800_ffff_tmp315, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9c = simd_and(tmp16, tmp54);
          bytetest_a4_a4 = simd_and(tmp59, tmp81);
          r800_ffff_tmp316 = simd_and(r800_ffff_tmp314, bytetest_a4_a4);
          struct_Lu.cc = simd_or(r800_ffff_tmp316, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9c = simd_and(tmp16, tmp54);
          bytetest_a6_a6 = simd_and(tmp59, tmp111);
          r800_ffff_tmp317 = simd_and(r800_ffff_tmp314, bytetest_a6_a6);
          struct_Lu.cc = simd_or(r800_ffff_tmp317, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9c = simd_and(tmp16, tmp54);
          bytetest_a8_a8 = simd_and(tmp59, tmp131);
          r800_ffff_tmp318 = simd_and(r800_ffff_tmp314, bytetest_a8_a8);
          struct_Lu.cc = simd_or(r800_ffff_tmp318, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9c = simd_and(tmp16, tmp54);
          bytetest_aa_aa = simd_and(tmp59, tmp145);
          r800_ffff_tmp319 = simd_and(r800_ffff_tmp314, bytetest_aa_aa);
          struct_Lu.cc = simd_or(r800_ffff_tmp319, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9c = simd_and(tmp16, tmp54);
          bytetest_ac_ac = simd_and(tmp59, tmp54);
          r800_ffff_tmp320 = simd_and(r800_ffff_tmp314, bytetest_ac_ac);
          struct_Lu.cc = simd_or(r800_ffff_tmp320, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9c = simd_and(tmp16, tmp54);
          bytetest_ae_ae = simd_and(tmp59, tmp173);
          r800_ffff_tmp321 = simd_and(r800_ffff_tmp314, bytetest_ae_ae);
          struct_Lu.cc = simd_or(r800_ffff_tmp321, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9c = simd_and(tmp16, tmp54);
          bytetest_b2_b2 = simd_and(bytetest_b0_bf, tmp45);
          r800_ffff_tmp322 = simd_and(r800_ffff_tmp314, bytetest_b2_b2);
          struct_Lu.cc = simd_or(r800_ffff_tmp322, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9c = simd_and(tmp16, tmp54);
          bytetest_b4_b4 = simd_and(bytetest_b0_bf, tmp81);
          r800_ffff_tmp323 = simd_and(r800_ffff_tmp314, bytetest_b4_b4);
          struct_Lu.cc = simd_or(r800_ffff_tmp323, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9c = simd_and(tmp16, tmp54);
          bytetest_b6_b6 = simd_and(bytetest_b0_bf, tmp111);
          r800_ffff_tmp324 = simd_and(r800_ffff_tmp314, bytetest_b6_b6);
          struct_Lu.cc = simd_or(r800_ffff_tmp324, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9c = simd_and(tmp16, tmp54);
          bytetest_b8_b8 = simd_and(bytetest_b0_bf, tmp131);
          r800_ffff_tmp325 = simd_and(r800_ffff_tmp314, bytetest_b8_b8);
          struct_Lu.cc = simd_or(r800_ffff_tmp325, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9c = simd_and(tmp16, tmp54);
          bytetest_ba_ba = simd_and(bytetest_b0_bf, tmp145);
          r800_ffff_tmp326 = simd_and(r800_ffff_tmp314, bytetest_ba_ba);
          struct_Lu.cc = simd_or(r800_ffff_tmp326, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9c = simd_and(tmp16, tmp54);
          bytetest_bc_bc = simd_and(bytetest_b0_bf, tmp54);
          r800_ffff_tmp327 = simd_and(r800_ffff_tmp314, bytetest_bc_bc);
          struct_Lu.cc = simd_or(r800_ffff_tmp327, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9c = simd_and(tmp16, tmp54);
          bytetest_be_be = simd_and(bytetest_b0_bf, tmp173);
          r800_ffff_tmp328 = simd_and(r800_ffff_tmp314, bytetest_be_be);
          struct_Lu.cc = simd_or(r800_ffff_tmp328, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_80_80 = simd_andc(tmp35, tmp9);
          r800_ffff_tmp329 = simd_and(r800_ffff_tmp273, bytetest_9d);
          carryQ.cq[59] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp329, carryQ.get_carry_in(59), r800_ffff_tmp330));
          r800_ffff_tmp331 = simd_and(r800_ffff_tmp330, bytetest_80_80);
          struct_Lu.cc = simd_or(r800_ffff_tmp331, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_82_82 = simd_and(tmp35, tmp45);
          r800_ffff_tmp332 = simd_and(r800_ffff_tmp330, bytetest_82_82);
          struct_Lu.cc = simd_or(r800_ffff_tmp332, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_84_84 = simd_and(tmp35, tmp81);
          r800_ffff_tmp333 = simd_and(r800_ffff_tmp330, bytetest_84_84);
          struct_Lu.cc = simd_or(r800_ffff_tmp333, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_86_86 = simd_and(tmp35, tmp111);
          r800_ffff_tmp334 = simd_and(r800_ffff_tmp330, bytetest_86_86);
          struct_Lu.cc = simd_or(r800_ffff_tmp334, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_88_88 = simd_and(tmp35, tmp131);
          r800_ffff_tmp335 = simd_and(r800_ffff_tmp330, bytetest_88_88);
          struct_Lu.cc = simd_or(r800_ffff_tmp335, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_8a_8a = simd_and(tmp35, tmp145);
          r800_ffff_tmp336 = simd_and(r800_ffff_tmp330, bytetest_8a_8a);
          struct_Lu.cc = simd_or(r800_ffff_tmp336, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_8c_8c = simd_and(tmp35, tmp54);
          r800_ffff_tmp337 = simd_and(r800_ffff_tmp330, bytetest_8c_8c);
          struct_Lu.cc = simd_or(r800_ffff_tmp337, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_8e_8e = simd_and(tmp35, tmp173);
          r800_ffff_tmp338 = simd_and(r800_ffff_tmp330, bytetest_8e_8e);
          struct_Lu.cc = simd_or(r800_ffff_tmp338, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_90_90 = simd_andc(tmp16, tmp9);
          r800_ffff_tmp339 = simd_and(r800_ffff_tmp330, bytetest_90_90);
          struct_Lu.cc = simd_or(r800_ffff_tmp339, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_92_92 = simd_and(tmp16, tmp45);
          r800_ffff_tmp340 = simd_and(r800_ffff_tmp330, bytetest_92_92);
          struct_Lu.cc = simd_or(r800_ffff_tmp340, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_94_94 = simd_and(tmp16, tmp81);
          r800_ffff_tmp341 = simd_and(r800_ffff_tmp330, bytetest_94_94);
          struct_Lu.cc = simd_or(r800_ffff_tmp341, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_96_96 = simd_and(tmp16, tmp111);
          r800_ffff_tmp342 = simd_and(r800_ffff_tmp330, bytetest_96_96);
          struct_Lu.cc = simd_or(r800_ffff_tmp342, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_98_98 = simd_and(tmp16, tmp131);
          r800_ffff_tmp343 = simd_and(r800_ffff_tmp330, bytetest_98_98);
          struct_Lu.cc = simd_or(r800_ffff_tmp343, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_9a_9a = simd_and(tmp16, tmp145);
          r800_ffff_tmp344 = simd_and(r800_ffff_tmp330, bytetest_9a_9a);
          struct_Lu.cc = simd_or(r800_ffff_tmp344, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_9c_9c = simd_and(tmp16, tmp54);
          r800_ffff_tmp345 = simd_and(r800_ffff_tmp330, bytetest_9c_9c);
          struct_Lu.cc = simd_or(r800_ffff_tmp345, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_9e_9e = simd_and(tmp16, tmp173);
          r800_ffff_tmp346 = simd_and(r800_ffff_tmp330, bytetest_9e_9e);
          struct_Lu.cc = simd_or(r800_ffff_tmp346, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_a0_a0 = simd_andc(tmp59, tmp9);
          r800_ffff_tmp347 = simd_and(r800_ffff_tmp330, bytetest_a0_a0);
          struct_Lu.cc = simd_or(r800_ffff_tmp347, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_a2_a2 = simd_and(tmp59, tmp45);
          r800_ffff_tmp348 = simd_and(r800_ffff_tmp330, bytetest_a2_a2);
          struct_Lu.cc = simd_or(r800_ffff_tmp348, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_a4_a4 = simd_and(tmp59, tmp81);
          r800_ffff_tmp349 = simd_and(r800_ffff_tmp330, bytetest_a4_a4);
          struct_Lu.cc = simd_or(r800_ffff_tmp349, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_a6_a6 = simd_and(tmp59, tmp111);
          r800_ffff_tmp350 = simd_and(r800_ffff_tmp330, bytetest_a6_a6);
          struct_Lu.cc = simd_or(r800_ffff_tmp350, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_a8_a8 = simd_and(tmp59, tmp131);
          r800_ffff_tmp351 = simd_and(r800_ffff_tmp330, bytetest_a8_a8);
          struct_Lu.cc = simd_or(r800_ffff_tmp351, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_aa_aa = simd_and(tmp59, tmp145);
          r800_ffff_tmp352 = simd_and(r800_ffff_tmp330, bytetest_aa_aa);
          struct_Lu.cc = simd_or(r800_ffff_tmp352, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_ac_ac = simd_and(tmp59, tmp54);
          r800_ffff_tmp353 = simd_and(r800_ffff_tmp330, bytetest_ac_ac);
          struct_Lu.cc = simd_or(r800_ffff_tmp353, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_ae_ae = simd_and(tmp59, tmp173);
          r800_ffff_tmp354 = simd_and(r800_ffff_tmp330, bytetest_ae_ae);
          struct_Lu.cc = simd_or(r800_ffff_tmp354, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_b9_b9 = simd_and(bytetest_b0_bf, tmp138);
          r800_ffff_tmp355 = simd_and(r800_ffff_tmp330, bytetest_b9_b9);
          struct_Lu.cc = simd_or(r800_ffff_tmp355, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9d = simd_and(tmp16, tmp19);
          bytetest_bb_bb = simd_and(bytetest_b0_bf, tmp151);
          r800_ffff_tmp356 = simd_and(r800_ffff_tmp330, bytetest_bb_bb);
          struct_Lu.cc = simd_or(r800_ffff_tmp356, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9d = simd_and(tmp16, tmp19);
          r800_ffff_tmp357 = simd_and(bytetest_b0_bf, tmp17);
          bytetest_bd_be = simd_and(r800_ffff_tmp357, tmp64);
          r800_ffff_tmp358 = simd_and(r800_ffff_tmp330, bytetest_bd_be);
          struct_Lu.cc = simd_or(r800_ffff_tmp358, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9e = simd_and(tmp16, tmp173);
          bytetest_80_80 = simd_andc(tmp35, tmp9);
          r800_ffff_tmp359 = simd_and(r800_ffff_tmp273, bytetest_9e);
          carryQ.cq[60] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp359, carryQ.get_carry_in(60), r800_ffff_tmp360));
          r800_ffff_tmp361 = simd_and(r800_ffff_tmp360, bytetest_80_80);
          struct_Lu.cc = simd_or(r800_ffff_tmp361, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9e = simd_and(tmp16, tmp173);
          bytetest_82_82 = simd_and(tmp35, tmp45);
          r800_ffff_tmp362 = simd_and(r800_ffff_tmp360, bytetest_82_82);
          struct_Lu.cc = simd_or(r800_ffff_tmp362, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9e = simd_and(tmp16, tmp173);
          bytetest_84_84 = simd_and(tmp35, tmp81);
          r800_ffff_tmp363 = simd_and(r800_ffff_tmp360, bytetest_84_84);
          struct_Lu.cc = simd_or(r800_ffff_tmp363, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9e = simd_and(tmp16, tmp173);
          bytetest_86_86 = simd_and(tmp35, tmp111);
          r800_ffff_tmp364 = simd_and(r800_ffff_tmp360, bytetest_86_86);
          struct_Lu.cc = simd_or(r800_ffff_tmp364, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9e = simd_and(tmp16, tmp173);
          bytetest_8b_8b = simd_and(tmp35, tmp151);
          r800_ffff_tmp365 = simd_and(r800_ffff_tmp360, bytetest_8b_8b);
          struct_Lu.cc = simd_or(r800_ffff_tmp365, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9e = simd_and(tmp16, tmp173);
          bytetest_8d_8d = simd_and(tmp35, tmp19);
          r800_ffff_tmp366 = simd_and(r800_ffff_tmp360, bytetest_8d_8d);
          struct_Lu.cc = simd_or(r800_ffff_tmp366, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9e = simd_and(tmp16, tmp173);
          bytetest_90_90 = simd_andc(tmp16, tmp9);
          r800_ffff_tmp367 = simd_and(r800_ffff_tmp360, bytetest_90_90);
          struct_Lu.cc = simd_or(r800_ffff_tmp367, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9e = simd_and(tmp16, tmp173);
          bytetest_92_92 = simd_and(tmp16, tmp45);
          r800_ffff_tmp368 = simd_and(r800_ffff_tmp360, bytetest_92_92);
          struct_Lu.cc = simd_or(r800_ffff_tmp368, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9e = simd_and(tmp16, tmp173);
          bytetest_a0_a0 = simd_andc(tmp59, tmp9);
          r800_ffff_tmp369 = simd_and(r800_ffff_tmp360, bytetest_a0_a0);
          struct_Lu.cc = simd_or(r800_ffff_tmp369, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9e = simd_and(tmp16, tmp173);
          bytetest_a2_a2 = simd_and(tmp59, tmp45);
          r800_ffff_tmp370 = simd_and(r800_ffff_tmp360, bytetest_a2_a2);
          struct_Lu.cc = simd_or(r800_ffff_tmp370, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9e = simd_and(tmp16, tmp173);
          bytetest_a4_a4 = simd_and(tmp59, tmp81);
          r800_ffff_tmp371 = simd_and(r800_ffff_tmp360, bytetest_a4_a4);
          struct_Lu.cc = simd_or(r800_ffff_tmp371, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9e = simd_and(tmp16, tmp173);
          bytetest_a6_a6 = simd_and(tmp59, tmp111);
          r800_ffff_tmp372 = simd_and(r800_ffff_tmp360, bytetest_a6_a6);
          struct_Lu.cc = simd_or(r800_ffff_tmp372, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9e = simd_and(tmp16, tmp173);
          bytetest_a8_a8 = simd_and(tmp59, tmp131);
          r800_ffff_tmp373 = simd_and(r800_ffff_tmp360, bytetest_a8_a8);
          struct_Lu.cc = simd_or(r800_ffff_tmp373, struct_Lu.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp145);
          bytetest_9e = simd_and(tmp16, tmp173);
          bytetest_aa_aa = simd_and(tmp59, tmp145);
          r800_ffff_tmp374 = simd_and(r800_ffff_tmp360, bytetest_aa_aa);
          struct_Lu.cc = simd_or(r800_ffff_tmp374, struct_Lu.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp166);
          bytetest_bc = simd_and(bytetest_b0_bf, tmp54);
          bytetest_a1_ba = simd_and(bytetest_a0_bf, tmp10);
          r800_ffff_tmp375 = simd_and(tmp25, bytetest_ef);
          carryQ.cq[61] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp375, carryQ.get_carry_in(61), r800_ffff_tmp376));
          r800_ffff_tmp377 = simd_and(r800_ffff_tmp376, bytetest_bc);
          carryQ.cq[62] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp377, carryQ.get_carry_in(62), r800_ffff_tmp378));
          r800_ffff_tmp379 = simd_and(r800_ffff_tmp378, bytetest_a1_ba);
          struct_Lu.cc = simd_or(r800_ffff_tmp379, struct_Lu.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(36, 27);
        }
        bytetest_f0 = simd_andc(tmp13, tmp9);
        bytetest_90 = simd_andc(tmp16, tmp9);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp192 = simd_and(tmp27, bytetest_90);
        carryQ.cq[63] = carryout2carry(pablo_blk_Advance(tmp192, carryQ.get_carry_in(63), tmp193));
        tmp194 = simd_and(tmp193, bytetest_80_bf);
        if ((bitblock::any(tmp194) || carryQ.CarryTest(64, 2))) {
          bytetest_f0 = simd_andc(tmp13, tmp9);
          bytetest_90 = simd_andc(tmp16, tmp9);
          bytetest_90 = simd_andc(tmp16, tmp9);
          r10000_10fff_tmp1 = simd_and(basis_bits.bit_2, tmp51);
          bytetest_80_a7 = simd_andc(tmp14, r10000_10fff_tmp1);
          r10000_10fff_tmp2 = simd_and(tmp27, bytetest_90);
          carryQ.cq[64] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp2, carryQ.get_carry_in(64), r10000_10fff_tmp3));
          r10000_10fff_tmp4 = simd_and(r10000_10fff_tmp3, bytetest_90);
          carryQ.cq[65] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp4, carryQ.get_carry_in(65), r10000_10fff_tmp5));
          r10000_10fff_tmp6 = simd_and(r10000_10fff_tmp5, bytetest_80_a7);
          struct_Lu.cc = simd_or(r10000_10fff_tmp6, struct_Lu.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(64, 2);
        }
  }
  CarryArray<66, 0> carryQ;
  };

  struct Pf {
  Pf() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Pf & struct_Pf) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, bytetest_c2_df, r80_7ff_tmp1;
		BitBlock r80_7ff_tmp2, r80_7ff_tmp3, r80_7ff_tmp4, r80_7ff_tmp5, r80_7ff_tmp6;
		BitBlock bytetest_c2, r80_7ff_tmp7, r80_7ff_tmp8, r80_7ff_tmp9, r80_7ff_tmp10;
		BitBlock r80_7ff_tmp11, r80_7ff_tmp12, bytetest_bb_bb, r80_7ff_tmp13;
		BitBlock r80_7ff_tmp14, r80_7ff_tmp15, r80_7ff_tmp16, r80_7ff_tmp17, tmp6;
		BitBlock tmp7, tmp8, tmp9, tmp10, bytetest_e1_ef, tmp11, bytetest_e0, tmp12;
		BitBlock bytetest_a0_bf, tmp13, tmp14, tmp15, tmp16, tmp17, tmp18;
		BitBlock r800_ffff_tmp1, r800_ffff_tmp2, r800_ffff_tmp3, r800_ffff_tmp4;
		BitBlock bytetest_e2, r800_ffff_tmp5, r800_ffff_tmp6, r800_ffff_tmp7;
		BitBlock r800_ffff_tmp8, r800_ffff_tmp9, bytetest_80, r800_ffff_tmp10;
		BitBlock r800_ffff_tmp11, r800_ffff_tmp12, r800_ffff_tmp13, r800_ffff_tmp14;
		BitBlock bytetest_99_99, r800_ffff_tmp15, r800_ffff_tmp16, r800_ffff_tmp17;
		BitBlock r800_ffff_tmp18, r800_ffff_tmp19, r800_ffff_tmp20, r800_ffff_tmp21;
		BitBlock r800_ffff_tmp22, r800_ffff_tmp23, bytetest_9d_9d, r800_ffff_tmp24;
		BitBlock r800_ffff_tmp25, r800_ffff_tmp26, r800_ffff_tmp27, bytetest_ba_ba;
		BitBlock r800_ffff_tmp28, r800_ffff_tmp29, bytetest_b8, r800_ffff_tmp30;
		BitBlock r800_ffff_tmp31, bytetest_83_83, r800_ffff_tmp32, r800_ffff_tmp33;
		BitBlock r800_ffff_tmp34, r800_ffff_tmp35, r800_ffff_tmp36, bytetest_85_85;
		BitBlock r800_ffff_tmp37, bytetest_8a_8a, r800_ffff_tmp38, bytetest_8d_8d;
		BitBlock r800_ffff_tmp39, r800_ffff_tmp40, r800_ffff_tmp41, r800_ffff_tmp42;
		BitBlock bytetest_a1_a1, r800_ffff_tmp43;




        struct_Pf.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(tmp1, basis_bits.bit_2);
        tmp3 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp4 = simd_or(tmp3, basis_bits.bit_6);
        tmp5 = simd_or(basis_bits.bit_3, tmp4);
        bytetest_c2_df = simd_and(tmp2, tmp5);
        if ((bitblock::any(bytetest_c2_df) || carryQ.CarryTest(0, 2))) {
          r80_7ff_tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
          r80_7ff_tmp2 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
          r80_7ff_tmp3 = simd_andc(r80_7ff_tmp1, r80_7ff_tmp2);
          r80_7ff_tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
          r80_7ff_tmp5 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
          r80_7ff_tmp6 = simd_andc(r80_7ff_tmp5, r80_7ff_tmp4);
          bytetest_c2 = simd_and(r80_7ff_tmp3, r80_7ff_tmp6);
          r80_7ff_tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r80_7ff_tmp8 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
          r80_7ff_tmp9 = simd_and(r80_7ff_tmp7, r80_7ff_tmp8);
          r80_7ff_tmp10 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
          r80_7ff_tmp11 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
          r80_7ff_tmp12 = simd_and(r80_7ff_tmp10, r80_7ff_tmp11);
          bytetest_bb_bb = simd_and(r80_7ff_tmp9, r80_7ff_tmp12);
          r80_7ff_tmp13 = simd<1>::constant<1>();
          carryQ.cq[0] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp13, carryQ.get_carry_in(0), r80_7ff_tmp14));
          r80_7ff_tmp15 = simd_and(r80_7ff_tmp14, bytetest_c2);
          carryQ.cq[1] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp15, carryQ.get_carry_in(1), r80_7ff_tmp16));
          r80_7ff_tmp17 = simd_and(r80_7ff_tmp16, bytetest_bb_bb);
          struct_Pf.cc = simd_or(r80_7ff_tmp17, struct_Pf.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(0, 2);
        }
        tmp6 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp7 = simd_and(tmp1, tmp6);
        tmp8 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp9 = simd_or(basis_bits.bit_5, tmp8);
        tmp10 = simd_or(basis_bits.bit_4, tmp9);
        bytetest_e1_ef = simd_and(tmp7, tmp10);
        tmp11 = simd_or(tmp3, tmp8);
        bytetest_e0 = simd_andc(tmp7, tmp11);
        tmp12 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_a0_bf = simd_and(tmp12, basis_bits.bit_2);
        tmp13 = simd<1>::constant<1>();
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp13, carryQ.get_carry_in(2), tmp14));
        tmp15 = simd_and(tmp14, bytetest_e0);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp15, carryQ.get_carry_in(3), tmp16));
        tmp17 = simd_and(tmp16, bytetest_a0_bf);
        tmp18 = simd_or(tmp17, bytetest_e1_ef);
        if ((bitblock::any(tmp18) || carryQ.CarryTest(4, 4))) {
          r800_ffff_tmp1 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp2 = simd_and(tmp1, r800_ffff_tmp1);
          r800_ffff_tmp3 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp4 = simd_andc(r800_ffff_tmp3, tmp3);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp4);
          r800_ffff_tmp5 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp6 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp7 = simd_andc(r800_ffff_tmp5, r800_ffff_tmp6);
          r800_ffff_tmp8 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp9 = simd_or(tmp3, r800_ffff_tmp8);
          bytetest_80 = simd_andc(r800_ffff_tmp7, r800_ffff_tmp9);
          r800_ffff_tmp10 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
          r800_ffff_tmp11 = simd_and(r800_ffff_tmp5, r800_ffff_tmp10);
          r800_ffff_tmp12 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
          r800_ffff_tmp13 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
          r800_ffff_tmp14 = simd_and(r800_ffff_tmp12, r800_ffff_tmp13);
          bytetest_99_99 = simd_and(r800_ffff_tmp11, r800_ffff_tmp14);
          r800_ffff_tmp15 = simd<1>::constant<1>();
          carryQ.cq[4] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp15, carryQ.get_carry_in(4), r800_ffff_tmp16));
          r800_ffff_tmp17 = simd_and(r800_ffff_tmp16, bytetest_e2);
          carryQ.cq[5] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp17, carryQ.get_carry_in(5), r800_ffff_tmp18));
          r800_ffff_tmp19 = simd_and(r800_ffff_tmp18, bytetest_80);
          carryQ.cq[6] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp19, carryQ.get_carry_in(6), r800_ffff_tmp20));
          r800_ffff_tmp21 = simd_and(r800_ffff_tmp20, bytetest_99_99);
          struct_Pf.cc = simd_or(r800_ffff_tmp21, struct_Pf.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp4);
          bytetest_80 = simd_andc(r800_ffff_tmp7, r800_ffff_tmp9);
          r800_ffff_tmp22 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
          r800_ffff_tmp23 = simd_and(r800_ffff_tmp22, r800_ffff_tmp13);
          bytetest_9d_9d = simd_and(r800_ffff_tmp11, r800_ffff_tmp23);
          r800_ffff_tmp24 = simd_and(r800_ffff_tmp20, bytetest_9d_9d);
          struct_Pf.cc = simd_or(r800_ffff_tmp24, struct_Pf.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp4);
          bytetest_80 = simd_andc(r800_ffff_tmp7, r800_ffff_tmp9);
          r800_ffff_tmp25 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp26 = simd_and(r800_ffff_tmp5, r800_ffff_tmp25);
          r800_ffff_tmp27 = simd_and(r800_ffff_tmp12, r800_ffff_tmp3);
          bytetest_ba_ba = simd_and(r800_ffff_tmp26, r800_ffff_tmp27);
          r800_ffff_tmp28 = simd_and(r800_ffff_tmp20, bytetest_ba_ba);
          struct_Pf.cc = simd_or(r800_ffff_tmp28, struct_Pf.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp4);
          r800_ffff_tmp29 = simd_andc(r800_ffff_tmp12, r800_ffff_tmp8);
          bytetest_b8 = simd_and(r800_ffff_tmp26, r800_ffff_tmp29);
          r800_ffff_tmp30 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp31 = simd_andc(r800_ffff_tmp30, tmp3);
          bytetest_83_83 = simd_and(r800_ffff_tmp7, r800_ffff_tmp31);
          r800_ffff_tmp32 = simd_and(r800_ffff_tmp18, bytetest_b8);
          carryQ.cq[7] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp32, carryQ.get_carry_in(7), r800_ffff_tmp33));
          r800_ffff_tmp34 = simd_and(r800_ffff_tmp33, bytetest_83_83);
          struct_Pf.cc = simd_or(r800_ffff_tmp34, struct_Pf.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp4);
          bytetest_b8 = simd_and(r800_ffff_tmp26, r800_ffff_tmp29);
          r800_ffff_tmp35 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
          r800_ffff_tmp36 = simd_and(r800_ffff_tmp35, r800_ffff_tmp13);
          bytetest_85_85 = simd_and(r800_ffff_tmp7, r800_ffff_tmp36);
          r800_ffff_tmp37 = simd_and(r800_ffff_tmp33, bytetest_85_85);
          struct_Pf.cc = simd_or(r800_ffff_tmp37, struct_Pf.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp4);
          bytetest_b8 = simd_and(r800_ffff_tmp26, r800_ffff_tmp29);
          bytetest_8a_8a = simd_and(r800_ffff_tmp7, r800_ffff_tmp27);
          r800_ffff_tmp38 = simd_and(r800_ffff_tmp33, bytetest_8a_8a);
          struct_Pf.cc = simd_or(r800_ffff_tmp38, struct_Pf.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp4);
          bytetest_b8 = simd_and(r800_ffff_tmp26, r800_ffff_tmp29);
          bytetest_8d_8d = simd_and(r800_ffff_tmp7, r800_ffff_tmp23);
          r800_ffff_tmp39 = simd_and(r800_ffff_tmp33, bytetest_8d_8d);
          struct_Pf.cc = simd_or(r800_ffff_tmp39, struct_Pf.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp4);
          bytetest_b8 = simd_and(r800_ffff_tmp26, r800_ffff_tmp29);
          bytetest_9d_9d = simd_and(r800_ffff_tmp11, r800_ffff_tmp23);
          r800_ffff_tmp40 = simd_and(r800_ffff_tmp33, bytetest_9d_9d);
          struct_Pf.cc = simd_or(r800_ffff_tmp40, struct_Pf.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp4);
          bytetest_b8 = simd_and(r800_ffff_tmp26, r800_ffff_tmp29);
          r800_ffff_tmp41 = simd_and(r800_ffff_tmp5, r800_ffff_tmp1);
          r800_ffff_tmp42 = simd_andc(r800_ffff_tmp13, tmp3);
          bytetest_a1_a1 = simd_and(r800_ffff_tmp41, r800_ffff_tmp42);
          r800_ffff_tmp43 = simd_and(r800_ffff_tmp33, bytetest_a1_a1);
          struct_Pf.cc = simd_or(r800_ffff_tmp43, struct_Pf.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(4, 4);
        }
        carryQ.CarryQ_Adjust(8);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Pf & struct_Pf, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, bytetest_c2_df, r80_7ff_tmp1;
		BitBlock r80_7ff_tmp2, r80_7ff_tmp3, r80_7ff_tmp4, r80_7ff_tmp5, r80_7ff_tmp6;
		BitBlock bytetest_c2, r80_7ff_tmp7, r80_7ff_tmp8, r80_7ff_tmp9, r80_7ff_tmp10;
		BitBlock r80_7ff_tmp11, r80_7ff_tmp12, bytetest_bb_bb, r80_7ff_tmp13;
		BitBlock r80_7ff_tmp14, r80_7ff_tmp15, r80_7ff_tmp16, r80_7ff_tmp17, tmp6;
		BitBlock tmp7, tmp8, tmp9, tmp10, bytetest_e1_ef, tmp11, bytetest_e0, tmp12;
		BitBlock bytetest_a0_bf, tmp13, tmp14, tmp15, tmp16, tmp17, tmp18;
		BitBlock r800_ffff_tmp1, r800_ffff_tmp2, r800_ffff_tmp3, r800_ffff_tmp4;
		BitBlock bytetest_e2, r800_ffff_tmp5, r800_ffff_tmp6, r800_ffff_tmp7;
		BitBlock r800_ffff_tmp8, r800_ffff_tmp9, bytetest_80, r800_ffff_tmp10;
		BitBlock r800_ffff_tmp11, r800_ffff_tmp12, r800_ffff_tmp13, r800_ffff_tmp14;
		BitBlock bytetest_99_99, r800_ffff_tmp15, r800_ffff_tmp16, r800_ffff_tmp17;
		BitBlock r800_ffff_tmp18, r800_ffff_tmp19, r800_ffff_tmp20, r800_ffff_tmp21;
		BitBlock r800_ffff_tmp22, r800_ffff_tmp23, bytetest_9d_9d, r800_ffff_tmp24;
		BitBlock r800_ffff_tmp25, r800_ffff_tmp26, r800_ffff_tmp27, bytetest_ba_ba;
		BitBlock r800_ffff_tmp28, r800_ffff_tmp29, bytetest_b8, r800_ffff_tmp30;
		BitBlock r800_ffff_tmp31, bytetest_83_83, r800_ffff_tmp32, r800_ffff_tmp33;
		BitBlock r800_ffff_tmp34, r800_ffff_tmp35, r800_ffff_tmp36, bytetest_85_85;
		BitBlock r800_ffff_tmp37, bytetest_8a_8a, r800_ffff_tmp38, bytetest_8d_8d;
		BitBlock r800_ffff_tmp39, r800_ffff_tmp40, r800_ffff_tmp41, r800_ffff_tmp42;
		BitBlock bytetest_a1_a1, r800_ffff_tmp43;




        struct_Pf.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(tmp1, basis_bits.bit_2);
        tmp3 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp4 = simd_or(tmp3, basis_bits.bit_6);
        tmp5 = simd_or(basis_bits.bit_3, tmp4);
        bytetest_c2_df = simd_and(tmp2, tmp5);
        if ((bitblock::any(bytetest_c2_df) || carryQ.CarryTest(0, 2))) {
          r80_7ff_tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
          r80_7ff_tmp2 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
          r80_7ff_tmp3 = simd_andc(r80_7ff_tmp1, r80_7ff_tmp2);
          r80_7ff_tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
          r80_7ff_tmp5 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
          r80_7ff_tmp6 = simd_andc(r80_7ff_tmp5, r80_7ff_tmp4);
          bytetest_c2 = simd_and(r80_7ff_tmp3, r80_7ff_tmp6);
          r80_7ff_tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r80_7ff_tmp8 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
          r80_7ff_tmp9 = simd_and(r80_7ff_tmp7, r80_7ff_tmp8);
          r80_7ff_tmp10 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
          r80_7ff_tmp11 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
          r80_7ff_tmp12 = simd_and(r80_7ff_tmp10, r80_7ff_tmp11);
          bytetest_bb_bb = simd_and(r80_7ff_tmp9, r80_7ff_tmp12);
          r80_7ff_tmp13 = simd<1>::constant<1>();
          carryQ.cq[0] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp13, carryQ.get_carry_in(0), r80_7ff_tmp14));
          r80_7ff_tmp15 = simd_and(r80_7ff_tmp14, bytetest_c2);
          carryQ.cq[1] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp15, carryQ.get_carry_in(1), r80_7ff_tmp16));
          r80_7ff_tmp17 = simd_and(r80_7ff_tmp16, bytetest_bb_bb);
          struct_Pf.cc = simd_or(r80_7ff_tmp17, struct_Pf.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(0, 2);
        }
        tmp6 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp7 = simd_and(tmp1, tmp6);
        tmp8 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp9 = simd_or(basis_bits.bit_5, tmp8);
        tmp10 = simd_or(basis_bits.bit_4, tmp9);
        bytetest_e1_ef = simd_and(tmp7, tmp10);
        tmp11 = simd_or(tmp3, tmp8);
        bytetest_e0 = simd_andc(tmp7, tmp11);
        tmp12 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_a0_bf = simd_and(tmp12, basis_bits.bit_2);
        tmp13 = simd<1>::constant<1>();
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp13, carryQ.get_carry_in(2), tmp14));
        tmp15 = simd_and(tmp14, bytetest_e0);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp15, carryQ.get_carry_in(3), tmp16));
        tmp17 = simd_and(tmp16, bytetest_a0_bf);
        tmp18 = simd_or(tmp17, bytetest_e1_ef);
        if ((bitblock::any(tmp18) || carryQ.CarryTest(4, 4))) {
          r800_ffff_tmp1 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp2 = simd_and(tmp1, r800_ffff_tmp1);
          r800_ffff_tmp3 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp4 = simd_andc(r800_ffff_tmp3, tmp3);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp4);
          r800_ffff_tmp5 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp6 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp7 = simd_andc(r800_ffff_tmp5, r800_ffff_tmp6);
          r800_ffff_tmp8 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp9 = simd_or(tmp3, r800_ffff_tmp8);
          bytetest_80 = simd_andc(r800_ffff_tmp7, r800_ffff_tmp9);
          r800_ffff_tmp10 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
          r800_ffff_tmp11 = simd_and(r800_ffff_tmp5, r800_ffff_tmp10);
          r800_ffff_tmp12 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
          r800_ffff_tmp13 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
          r800_ffff_tmp14 = simd_and(r800_ffff_tmp12, r800_ffff_tmp13);
          bytetest_99_99 = simd_and(r800_ffff_tmp11, r800_ffff_tmp14);
          r800_ffff_tmp15 = simd<1>::constant<1>();
          carryQ.cq[4] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp15, carryQ.get_carry_in(4), r800_ffff_tmp16));
          r800_ffff_tmp17 = simd_and(r800_ffff_tmp16, bytetest_e2);
          carryQ.cq[5] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp17, carryQ.get_carry_in(5), r800_ffff_tmp18));
          r800_ffff_tmp19 = simd_and(r800_ffff_tmp18, bytetest_80);
          carryQ.cq[6] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp19, carryQ.get_carry_in(6), r800_ffff_tmp20));
          r800_ffff_tmp21 = simd_and(r800_ffff_tmp20, bytetest_99_99);
          struct_Pf.cc = simd_or(r800_ffff_tmp21, struct_Pf.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp4);
          bytetest_80 = simd_andc(r800_ffff_tmp7, r800_ffff_tmp9);
          r800_ffff_tmp22 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
          r800_ffff_tmp23 = simd_and(r800_ffff_tmp22, r800_ffff_tmp13);
          bytetest_9d_9d = simd_and(r800_ffff_tmp11, r800_ffff_tmp23);
          r800_ffff_tmp24 = simd_and(r800_ffff_tmp20, bytetest_9d_9d);
          struct_Pf.cc = simd_or(r800_ffff_tmp24, struct_Pf.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp4);
          bytetest_80 = simd_andc(r800_ffff_tmp7, r800_ffff_tmp9);
          r800_ffff_tmp25 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp26 = simd_and(r800_ffff_tmp5, r800_ffff_tmp25);
          r800_ffff_tmp27 = simd_and(r800_ffff_tmp12, r800_ffff_tmp3);
          bytetest_ba_ba = simd_and(r800_ffff_tmp26, r800_ffff_tmp27);
          r800_ffff_tmp28 = simd_and(r800_ffff_tmp20, bytetest_ba_ba);
          struct_Pf.cc = simd_or(r800_ffff_tmp28, struct_Pf.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp4);
          r800_ffff_tmp29 = simd_andc(r800_ffff_tmp12, r800_ffff_tmp8);
          bytetest_b8 = simd_and(r800_ffff_tmp26, r800_ffff_tmp29);
          r800_ffff_tmp30 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp31 = simd_andc(r800_ffff_tmp30, tmp3);
          bytetest_83_83 = simd_and(r800_ffff_tmp7, r800_ffff_tmp31);
          r800_ffff_tmp32 = simd_and(r800_ffff_tmp18, bytetest_b8);
          carryQ.cq[7] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp32, carryQ.get_carry_in(7), r800_ffff_tmp33));
          r800_ffff_tmp34 = simd_and(r800_ffff_tmp33, bytetest_83_83);
          struct_Pf.cc = simd_or(r800_ffff_tmp34, struct_Pf.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp4);
          bytetest_b8 = simd_and(r800_ffff_tmp26, r800_ffff_tmp29);
          r800_ffff_tmp35 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
          r800_ffff_tmp36 = simd_and(r800_ffff_tmp35, r800_ffff_tmp13);
          bytetest_85_85 = simd_and(r800_ffff_tmp7, r800_ffff_tmp36);
          r800_ffff_tmp37 = simd_and(r800_ffff_tmp33, bytetest_85_85);
          struct_Pf.cc = simd_or(r800_ffff_tmp37, struct_Pf.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp4);
          bytetest_b8 = simd_and(r800_ffff_tmp26, r800_ffff_tmp29);
          bytetest_8a_8a = simd_and(r800_ffff_tmp7, r800_ffff_tmp27);
          r800_ffff_tmp38 = simd_and(r800_ffff_tmp33, bytetest_8a_8a);
          struct_Pf.cc = simd_or(r800_ffff_tmp38, struct_Pf.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp4);
          bytetest_b8 = simd_and(r800_ffff_tmp26, r800_ffff_tmp29);
          bytetest_8d_8d = simd_and(r800_ffff_tmp7, r800_ffff_tmp23);
          r800_ffff_tmp39 = simd_and(r800_ffff_tmp33, bytetest_8d_8d);
          struct_Pf.cc = simd_or(r800_ffff_tmp39, struct_Pf.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp4);
          bytetest_b8 = simd_and(r800_ffff_tmp26, r800_ffff_tmp29);
          bytetest_9d_9d = simd_and(r800_ffff_tmp11, r800_ffff_tmp23);
          r800_ffff_tmp40 = simd_and(r800_ffff_tmp33, bytetest_9d_9d);
          struct_Pf.cc = simd_or(r800_ffff_tmp40, struct_Pf.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp4);
          bytetest_b8 = simd_and(r800_ffff_tmp26, r800_ffff_tmp29);
          r800_ffff_tmp41 = simd_and(r800_ffff_tmp5, r800_ffff_tmp1);
          r800_ffff_tmp42 = simd_andc(r800_ffff_tmp13, tmp3);
          bytetest_a1_a1 = simd_and(r800_ffff_tmp41, r800_ffff_tmp42);
          r800_ffff_tmp43 = simd_and(r800_ffff_tmp33, bytetest_a1_a1);
          struct_Pf.cc = simd_or(r800_ffff_tmp43, struct_Pf.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(4, 4);
        }
  }
  CarryArray<8, 0> carryQ;
  };

  struct Pd {
  Pd() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Pd & struct_Pd) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_2d_2d, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, bytetest_c2_df, r80_7ff_tmp1, r80_7ff_tmp2;
		BitBlock r80_7ff_tmp3, r80_7ff_tmp4, r80_7ff_tmp5, r80_7ff_tmp6, bytetest_d6;
		BitBlock r80_7ff_tmp7, r80_7ff_tmp8, r80_7ff_tmp9, r80_7ff_tmp10;
		BitBlock r80_7ff_tmp11, bytetest_8a_8a, r80_7ff_tmp12, r80_7ff_tmp13;
		BitBlock r80_7ff_tmp14, r80_7ff_tmp15, r80_7ff_tmp16, r80_7ff_tmp17;
		BitBlock r80_7ff_tmp18, r80_7ff_tmp19, bytetest_be_be, r80_7ff_tmp20, tmp12;
		BitBlock tmp13, tmp14, tmp15, bytetest_e1_ef, tmp16, bytetest_e0, tmp17;
		BitBlock bytetest_a0_bf, tmp18, tmp19, tmp20, tmp21, tmp22, tmp23;
		BitBlock r800_ffff_tmp1, r800_ffff_tmp2, bytetest_e1, r800_ffff_tmp3;
		BitBlock r800_ffff_tmp4, r800_ffff_tmp5, r800_ffff_tmp6, r800_ffff_tmp7;
		BitBlock bytetest_90, r800_ffff_tmp8, r800_ffff_tmp9, bytetest_80_80;
		BitBlock r800_ffff_tmp10, r800_ffff_tmp11, r800_ffff_tmp12, r800_ffff_tmp13;
		BitBlock r800_ffff_tmp14, r800_ffff_tmp15, r800_ffff_tmp16, r800_ffff_tmp17;
		BitBlock bytetest_a0, r800_ffff_tmp18, r800_ffff_tmp19, r800_ffff_tmp20;
		BitBlock bytetest_86_86, r800_ffff_tmp21, r800_ffff_tmp22, r800_ffff_tmp23;
		BitBlock r800_ffff_tmp24, bytetest_e2, bytetest_80, r800_ffff_tmp25;
		BitBlock r800_ffff_tmp26, bytetest_90_95, r800_ffff_tmp27, r800_ffff_tmp28;
		BitBlock r800_ffff_tmp29, r800_ffff_tmp30, r800_ffff_tmp31, r800_ffff_tmp32;
		BitBlock r800_ffff_tmp33, r800_ffff_tmp34, r800_ffff_tmp35, bytetest_b8;
		BitBlock r800_ffff_tmp36, r800_ffff_tmp37, bytetest_97_97, r800_ffff_tmp38;
		BitBlock r800_ffff_tmp39, r800_ffff_tmp40, r800_ffff_tmp41, bytetest_9a_9a;
		BitBlock r800_ffff_tmp42, r800_ffff_tmp43, bytetest_ba_bb, r800_ffff_tmp44;
		BitBlock r800_ffff_tmp45, bytetest_e3, r800_ffff_tmp46, bytetest_9c_9c;
		BitBlock r800_ffff_tmp47, r800_ffff_tmp48, r800_ffff_tmp49, r800_ffff_tmp50;
		BitBlock r800_ffff_tmp51, bytetest_b0_b0, r800_ffff_tmp52, bytetest_82;
		BitBlock bytetest_a0_a0, r800_ffff_tmp53, r800_ffff_tmp54, r800_ffff_tmp55;
		BitBlock r800_ffff_tmp56, bytetest_ef, r800_ffff_tmp57, r800_ffff_tmp58;
		BitBlock r800_ffff_tmp59, bytetest_b1_b2, r800_ffff_tmp60, r800_ffff_tmp61;
		BitBlock r800_ffff_tmp62, r800_ffff_tmp63, r800_ffff_tmp64, r800_ffff_tmp65;
		BitBlock bytetest_b9, bytetest_98_98, r800_ffff_tmp66, r800_ffff_tmp67;
		BitBlock r800_ffff_tmp68, bytetest_a3_a3, r800_ffff_tmp69, bytetest_bc;
		BitBlock bytetest_8d_8d, r800_ffff_tmp70, r800_ffff_tmp71, r800_ffff_tmp72;




        struct_Pd.cc = simd<1>::constant<0>();
        tmp1 = simd_or(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp2, tmp1);
        tmp4 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp6 = simd_and(tmp4, tmp5);
        bytetest_2d_2d = simd_and(tmp3, tmp6);
        struct_Pd.cc = simd_or(bytetest_2d_2d, struct_Pd.cc);
        tmp7 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_andc(tmp7, basis_bits.bit_2);
        tmp9 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp10 = simd_or(tmp9, basis_bits.bit_6);
        tmp11 = simd_or(basis_bits.bit_3, tmp10);
        bytetest_c2_df = simd_and(tmp8, tmp11);
        if ((bitblock::any(bytetest_c2_df) || carryQ.CarryTest(0, 2))) {
          r80_7ff_tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
          r80_7ff_tmp2 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
          r80_7ff_tmp3 = simd_and(r80_7ff_tmp1, r80_7ff_tmp2);
          r80_7ff_tmp4 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
          r80_7ff_tmp5 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
          r80_7ff_tmp6 = simd_and(r80_7ff_tmp4, r80_7ff_tmp5);
          bytetest_d6 = simd_and(r80_7ff_tmp3, r80_7ff_tmp6);
          r80_7ff_tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r80_7ff_tmp8 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
          r80_7ff_tmp9 = simd_andc(r80_7ff_tmp7, r80_7ff_tmp8);
          r80_7ff_tmp10 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
          r80_7ff_tmp11 = simd_and(r80_7ff_tmp10, r80_7ff_tmp5);
          bytetest_8a_8a = simd_and(r80_7ff_tmp9, r80_7ff_tmp11);
          r80_7ff_tmp12 = simd<1>::constant<1>();
          carryQ.cq[0] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp12, carryQ.get_carry_in(0), r80_7ff_tmp13));
          r80_7ff_tmp14 = simd_and(r80_7ff_tmp13, bytetest_d6);
          carryQ.cq[1] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp14, carryQ.get_carry_in(1), r80_7ff_tmp15));
          r80_7ff_tmp16 = simd_and(r80_7ff_tmp15, bytetest_8a_8a);
          struct_Pd.cc = simd_or(r80_7ff_tmp16, struct_Pd.cc);
          bytetest_d6 = simd_and(r80_7ff_tmp3, r80_7ff_tmp6);
          r80_7ff_tmp17 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
          r80_7ff_tmp18 = simd_and(r80_7ff_tmp7, r80_7ff_tmp17);
          r80_7ff_tmp19 = simd_and(tmp4, r80_7ff_tmp5);
          bytetest_be_be = simd_and(r80_7ff_tmp18, r80_7ff_tmp19);
          r80_7ff_tmp20 = simd_and(r80_7ff_tmp15, bytetest_be_be);
          struct_Pd.cc = simd_or(r80_7ff_tmp20, struct_Pd.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(0, 2);
        }
        tmp12 = simd_and(tmp7, tmp2);
        tmp13 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp14 = simd_or(basis_bits.bit_5, tmp13);
        tmp15 = simd_or(basis_bits.bit_4, tmp14);
        bytetest_e1_ef = simd_and(tmp12, tmp15);
        tmp16 = simd_or(tmp9, tmp13);
        bytetest_e0 = simd_andc(tmp12, tmp16);
        tmp17 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_a0_bf = simd_and(tmp17, basis_bits.bit_2);
        tmp18 = simd<1>::constant<1>();
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp18, carryQ.get_carry_in(2), tmp19));
        tmp20 = simd_and(tmp19, bytetest_e0);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp20, carryQ.get_carry_in(3), tmp21));
        tmp22 = simd_and(tmp21, bytetest_a0_bf);
        tmp23 = simd_or(tmp22, bytetest_e1_ef);
        if ((bitblock::any(tmp23) || carryQ.CarryTest(4, 14))) {
          r800_ffff_tmp1 = simd_and(tmp7, tmp2);
          r800_ffff_tmp2 = simd_andc(tmp5, tmp9);
          bytetest_e1 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          r800_ffff_tmp3 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp4 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
          r800_ffff_tmp5 = simd_and(r800_ffff_tmp3, r800_ffff_tmp4);
          r800_ffff_tmp6 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp7 = simd_or(tmp9, r800_ffff_tmp6);
          bytetest_90 = simd_andc(r800_ffff_tmp5, r800_ffff_tmp7);
          r800_ffff_tmp8 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp9 = simd_andc(r800_ffff_tmp3, r800_ffff_tmp8);
          bytetest_80_80 = simd_andc(r800_ffff_tmp9, r800_ffff_tmp7);
          r800_ffff_tmp10 = simd<1>::constant<1>();
          carryQ.cq[4] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp10, carryQ.get_carry_in(4), r800_ffff_tmp11));
          r800_ffff_tmp12 = simd_and(r800_ffff_tmp11, bytetest_e1);
          carryQ.cq[5] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp12, carryQ.get_carry_in(5), r800_ffff_tmp13));
          r800_ffff_tmp14 = simd_and(r800_ffff_tmp13, bytetest_90);
          carryQ.cq[6] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp14, carryQ.get_carry_in(6), r800_ffff_tmp15));
          r800_ffff_tmp16 = simd_and(r800_ffff_tmp15, bytetest_80_80);
          struct_Pd.cc = simd_or(r800_ffff_tmp16, struct_Pd.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          r800_ffff_tmp17 = simd_and(r800_ffff_tmp3, tmp2);
          bytetest_a0 = simd_andc(r800_ffff_tmp17, r800_ffff_tmp7);
          r800_ffff_tmp18 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
          r800_ffff_tmp19 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp20 = simd_and(r800_ffff_tmp18, r800_ffff_tmp19);
          bytetest_86_86 = simd_and(r800_ffff_tmp9, r800_ffff_tmp20);
          r800_ffff_tmp21 = simd_and(r800_ffff_tmp13, bytetest_a0);
          carryQ.cq[7] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp21, carryQ.get_carry_in(7), r800_ffff_tmp22));
          r800_ffff_tmp23 = simd_and(r800_ffff_tmp22, bytetest_86_86);
          struct_Pd.cc = simd_or(r800_ffff_tmp23, struct_Pd.cc);
          r800_ffff_tmp24 = simd_andc(r800_ffff_tmp19, tmp9);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp24);
          bytetest_80 = simd_andc(r800_ffff_tmp9, r800_ffff_tmp7);
          r800_ffff_tmp25 = simd_andc(r800_ffff_tmp5, basis_bits.bit_4);
          r800_ffff_tmp26 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
          bytetest_90_95 = simd_andc(r800_ffff_tmp25, r800_ffff_tmp26);
          r800_ffff_tmp27 = simd_and(r800_ffff_tmp11, bytetest_e2);
          carryQ.cq[8] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp27, carryQ.get_carry_in(8), r800_ffff_tmp28));
          r800_ffff_tmp29 = simd_and(r800_ffff_tmp28, bytetest_80);
          carryQ.cq[9] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp29, carryQ.get_carry_in(9), r800_ffff_tmp30));
          r800_ffff_tmp31 = simd_and(r800_ffff_tmp30, bytetest_90_95);
          struct_Pd.cc = simd_or(r800_ffff_tmp31, struct_Pd.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp24);
          r800_ffff_tmp32 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp33 = simd_and(r800_ffff_tmp3, r800_ffff_tmp32);
          r800_ffff_tmp34 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
          r800_ffff_tmp35 = simd_andc(r800_ffff_tmp34, r800_ffff_tmp6);
          bytetest_b8 = simd_and(r800_ffff_tmp33, r800_ffff_tmp35);
          r800_ffff_tmp36 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp37 = simd_and(r800_ffff_tmp18, r800_ffff_tmp36);
          bytetest_97_97 = simd_and(r800_ffff_tmp5, r800_ffff_tmp37);
          r800_ffff_tmp38 = simd_and(r800_ffff_tmp28, bytetest_b8);
          carryQ.cq[10] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp38, carryQ.get_carry_in(10), r800_ffff_tmp39));
          r800_ffff_tmp40 = simd_and(r800_ffff_tmp39, bytetest_97_97);
          struct_Pd.cc = simd_or(r800_ffff_tmp40, struct_Pd.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp24);
          bytetest_b8 = simd_and(r800_ffff_tmp33, r800_ffff_tmp35);
          r800_ffff_tmp41 = simd_and(r800_ffff_tmp34, r800_ffff_tmp19);
          bytetest_9a_9a = simd_and(r800_ffff_tmp5, r800_ffff_tmp41);
          r800_ffff_tmp42 = simd_and(r800_ffff_tmp39, bytetest_9a_9a);
          struct_Pd.cc = simd_or(r800_ffff_tmp42, struct_Pd.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp24);
          bytetest_b8 = simd_and(r800_ffff_tmp33, r800_ffff_tmp35);
          r800_ffff_tmp43 = simd_and(r800_ffff_tmp34, basis_bits.bit_6);
          bytetest_ba_bb = simd_and(r800_ffff_tmp33, r800_ffff_tmp43);
          r800_ffff_tmp44 = simd_and(r800_ffff_tmp39, bytetest_ba_bb);
          struct_Pd.cc = simd_or(r800_ffff_tmp44, struct_Pd.cc);
          r800_ffff_tmp45 = simd_andc(r800_ffff_tmp36, tmp9);
          bytetest_e3 = simd_and(r800_ffff_tmp1, r800_ffff_tmp45);
          bytetest_80 = simd_andc(r800_ffff_tmp9, r800_ffff_tmp7);
          r800_ffff_tmp46 = simd_andc(tmp4, r800_ffff_tmp6);
          bytetest_9c_9c = simd_and(r800_ffff_tmp5, r800_ffff_tmp46);
          r800_ffff_tmp47 = simd_and(r800_ffff_tmp11, bytetest_e3);
          carryQ.cq[11] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp47, carryQ.get_carry_in(11), r800_ffff_tmp48));
          r800_ffff_tmp49 = simd_and(r800_ffff_tmp48, bytetest_80);
          carryQ.cq[12] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp49, carryQ.get_carry_in(12), r800_ffff_tmp50));
          r800_ffff_tmp51 = simd_and(r800_ffff_tmp50, bytetest_9c_9c);
          struct_Pd.cc = simd_or(r800_ffff_tmp51, struct_Pd.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, r800_ffff_tmp45);
          bytetest_80 = simd_andc(r800_ffff_tmp9, r800_ffff_tmp7);
          bytetest_b0_b0 = simd_andc(r800_ffff_tmp33, r800_ffff_tmp7);
          r800_ffff_tmp52 = simd_and(r800_ffff_tmp50, bytetest_b0_b0);
          struct_Pd.cc = simd_or(r800_ffff_tmp52, struct_Pd.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, r800_ffff_tmp45);
          bytetest_82 = simd_and(r800_ffff_tmp9, r800_ffff_tmp24);
          bytetest_a0_a0 = simd_andc(r800_ffff_tmp17, r800_ffff_tmp7);
          r800_ffff_tmp53 = simd_and(r800_ffff_tmp48, bytetest_82);
          carryQ.cq[13] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp53, carryQ.get_carry_in(13), r800_ffff_tmp54));
          r800_ffff_tmp55 = simd_and(r800_ffff_tmp54, bytetest_a0_a0);
          struct_Pd.cc = simd_or(r800_ffff_tmp55, struct_Pd.cc);
          r800_ffff_tmp56 = simd_and(tmp4, r800_ffff_tmp36);
          bytetest_ef = simd_and(r800_ffff_tmp1, r800_ffff_tmp56);
          bytetest_b8 = simd_and(r800_ffff_tmp33, r800_ffff_tmp35);
          r800_ffff_tmp57 = simd_andc(r800_ffff_tmp33, tmp9);
          r800_ffff_tmp58 = simd_not(basis_bits.bit_7);
          r800_ffff_tmp59 = simd_or(simd_and(basis_bits.bit_6, r800_ffff_tmp58), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
          bytetest_b1_b2 = simd_and(r800_ffff_tmp57, r800_ffff_tmp59);
          r800_ffff_tmp60 = simd_and(r800_ffff_tmp11, bytetest_ef);
          carryQ.cq[14] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp60, carryQ.get_carry_in(14), r800_ffff_tmp61));
          r800_ffff_tmp62 = simd_and(r800_ffff_tmp61, bytetest_b8);
          carryQ.cq[15] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp62, carryQ.get_carry_in(15), r800_ffff_tmp63));
          r800_ffff_tmp64 = simd_and(r800_ffff_tmp63, bytetest_b1_b2);
          struct_Pd.cc = simd_or(r800_ffff_tmp64, struct_Pd.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, r800_ffff_tmp56);
          r800_ffff_tmp65 = simd_and(r800_ffff_tmp34, tmp5);
          bytetest_b9 = simd_and(r800_ffff_tmp33, r800_ffff_tmp65);
          bytetest_98_98 = simd_and(r800_ffff_tmp5, r800_ffff_tmp35);
          r800_ffff_tmp66 = simd_and(r800_ffff_tmp61, bytetest_b9);
          carryQ.cq[16] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp66, carryQ.get_carry_in(16), r800_ffff_tmp67));
          r800_ffff_tmp68 = simd_and(r800_ffff_tmp67, bytetest_98_98);
          struct_Pd.cc = simd_or(r800_ffff_tmp68, struct_Pd.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, r800_ffff_tmp56);
          bytetest_b9 = simd_and(r800_ffff_tmp33, r800_ffff_tmp65);
          bytetest_a3_a3 = simd_and(r800_ffff_tmp17, r800_ffff_tmp45);
          r800_ffff_tmp69 = simd_and(r800_ffff_tmp67, bytetest_a3_a3);
          struct_Pd.cc = simd_or(r800_ffff_tmp69, struct_Pd.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, r800_ffff_tmp56);
          bytetest_bc = simd_and(r800_ffff_tmp33, r800_ffff_tmp46);
          bytetest_8d_8d = simd_and(r800_ffff_tmp9, tmp6);
          r800_ffff_tmp70 = simd_and(r800_ffff_tmp61, bytetest_bc);
          carryQ.cq[17] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp70, carryQ.get_carry_in(17), r800_ffff_tmp71));
          r800_ffff_tmp72 = simd_and(r800_ffff_tmp71, bytetest_8d_8d);
          struct_Pd.cc = simd_or(r800_ffff_tmp72, struct_Pd.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(4, 14);
        }
        carryQ.CarryQ_Adjust(18);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Pd & struct_Pd, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_2d_2d, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, bytetest_c2_df, r80_7ff_tmp1, r80_7ff_tmp2;
		BitBlock r80_7ff_tmp3, r80_7ff_tmp4, r80_7ff_tmp5, r80_7ff_tmp6, bytetest_d6;
		BitBlock r80_7ff_tmp7, r80_7ff_tmp8, r80_7ff_tmp9, r80_7ff_tmp10;
		BitBlock r80_7ff_tmp11, bytetest_8a_8a, r80_7ff_tmp12, r80_7ff_tmp13;
		BitBlock r80_7ff_tmp14, r80_7ff_tmp15, r80_7ff_tmp16, r80_7ff_tmp17;
		BitBlock r80_7ff_tmp18, r80_7ff_tmp19, bytetest_be_be, r80_7ff_tmp20, tmp12;
		BitBlock tmp13, tmp14, tmp15, bytetest_e1_ef, tmp16, bytetest_e0, tmp17;
		BitBlock bytetest_a0_bf, tmp18, tmp19, tmp20, tmp21, tmp22, tmp23;
		BitBlock r800_ffff_tmp1, r800_ffff_tmp2, bytetest_e1, r800_ffff_tmp3;
		BitBlock r800_ffff_tmp4, r800_ffff_tmp5, r800_ffff_tmp6, r800_ffff_tmp7;
		BitBlock bytetest_90, r800_ffff_tmp8, r800_ffff_tmp9, bytetest_80_80;
		BitBlock r800_ffff_tmp10, r800_ffff_tmp11, r800_ffff_tmp12, r800_ffff_tmp13;
		BitBlock r800_ffff_tmp14, r800_ffff_tmp15, r800_ffff_tmp16, r800_ffff_tmp17;
		BitBlock bytetest_a0, r800_ffff_tmp18, r800_ffff_tmp19, r800_ffff_tmp20;
		BitBlock bytetest_86_86, r800_ffff_tmp21, r800_ffff_tmp22, r800_ffff_tmp23;
		BitBlock r800_ffff_tmp24, bytetest_e2, bytetest_80, r800_ffff_tmp25;
		BitBlock r800_ffff_tmp26, bytetest_90_95, r800_ffff_tmp27, r800_ffff_tmp28;
		BitBlock r800_ffff_tmp29, r800_ffff_tmp30, r800_ffff_tmp31, r800_ffff_tmp32;
		BitBlock r800_ffff_tmp33, r800_ffff_tmp34, r800_ffff_tmp35, bytetest_b8;
		BitBlock r800_ffff_tmp36, r800_ffff_tmp37, bytetest_97_97, r800_ffff_tmp38;
		BitBlock r800_ffff_tmp39, r800_ffff_tmp40, r800_ffff_tmp41, bytetest_9a_9a;
		BitBlock r800_ffff_tmp42, r800_ffff_tmp43, bytetest_ba_bb, r800_ffff_tmp44;
		BitBlock r800_ffff_tmp45, bytetest_e3, r800_ffff_tmp46, bytetest_9c_9c;
		BitBlock r800_ffff_tmp47, r800_ffff_tmp48, r800_ffff_tmp49, r800_ffff_tmp50;
		BitBlock r800_ffff_tmp51, bytetest_b0_b0, r800_ffff_tmp52, bytetest_82;
		BitBlock bytetest_a0_a0, r800_ffff_tmp53, r800_ffff_tmp54, r800_ffff_tmp55;
		BitBlock r800_ffff_tmp56, bytetest_ef, r800_ffff_tmp57, r800_ffff_tmp58;
		BitBlock r800_ffff_tmp59, bytetest_b1_b2, r800_ffff_tmp60, r800_ffff_tmp61;
		BitBlock r800_ffff_tmp62, r800_ffff_tmp63, r800_ffff_tmp64, r800_ffff_tmp65;
		BitBlock bytetest_b9, bytetest_98_98, r800_ffff_tmp66, r800_ffff_tmp67;
		BitBlock r800_ffff_tmp68, bytetest_a3_a3, r800_ffff_tmp69, bytetest_bc;
		BitBlock bytetest_8d_8d, r800_ffff_tmp70, r800_ffff_tmp71, r800_ffff_tmp72;




        struct_Pd.cc = simd<1>::constant<0>();
        tmp1 = simd_or(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp2, tmp1);
        tmp4 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp6 = simd_and(tmp4, tmp5);
        bytetest_2d_2d = simd_and(tmp3, tmp6);
        struct_Pd.cc = simd_or(bytetest_2d_2d, struct_Pd.cc);
        tmp7 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_andc(tmp7, basis_bits.bit_2);
        tmp9 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp10 = simd_or(tmp9, basis_bits.bit_6);
        tmp11 = simd_or(basis_bits.bit_3, tmp10);
        bytetest_c2_df = simd_and(tmp8, tmp11);
        if ((bitblock::any(bytetest_c2_df) || carryQ.CarryTest(0, 2))) {
          r80_7ff_tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
          r80_7ff_tmp2 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
          r80_7ff_tmp3 = simd_and(r80_7ff_tmp1, r80_7ff_tmp2);
          r80_7ff_tmp4 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
          r80_7ff_tmp5 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
          r80_7ff_tmp6 = simd_and(r80_7ff_tmp4, r80_7ff_tmp5);
          bytetest_d6 = simd_and(r80_7ff_tmp3, r80_7ff_tmp6);
          r80_7ff_tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r80_7ff_tmp8 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
          r80_7ff_tmp9 = simd_andc(r80_7ff_tmp7, r80_7ff_tmp8);
          r80_7ff_tmp10 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
          r80_7ff_tmp11 = simd_and(r80_7ff_tmp10, r80_7ff_tmp5);
          bytetest_8a_8a = simd_and(r80_7ff_tmp9, r80_7ff_tmp11);
          r80_7ff_tmp12 = simd<1>::constant<1>();
          carryQ.cq[0] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp12, carryQ.get_carry_in(0), r80_7ff_tmp13));
          r80_7ff_tmp14 = simd_and(r80_7ff_tmp13, bytetest_d6);
          carryQ.cq[1] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp14, carryQ.get_carry_in(1), r80_7ff_tmp15));
          r80_7ff_tmp16 = simd_and(r80_7ff_tmp15, bytetest_8a_8a);
          struct_Pd.cc = simd_or(r80_7ff_tmp16, struct_Pd.cc);
          bytetest_d6 = simd_and(r80_7ff_tmp3, r80_7ff_tmp6);
          r80_7ff_tmp17 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
          r80_7ff_tmp18 = simd_and(r80_7ff_tmp7, r80_7ff_tmp17);
          r80_7ff_tmp19 = simd_and(tmp4, r80_7ff_tmp5);
          bytetest_be_be = simd_and(r80_7ff_tmp18, r80_7ff_tmp19);
          r80_7ff_tmp20 = simd_and(r80_7ff_tmp15, bytetest_be_be);
          struct_Pd.cc = simd_or(r80_7ff_tmp20, struct_Pd.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(0, 2);
        }
        tmp12 = simd_and(tmp7, tmp2);
        tmp13 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp14 = simd_or(basis_bits.bit_5, tmp13);
        tmp15 = simd_or(basis_bits.bit_4, tmp14);
        bytetest_e1_ef = simd_and(tmp12, tmp15);
        tmp16 = simd_or(tmp9, tmp13);
        bytetest_e0 = simd_andc(tmp12, tmp16);
        tmp17 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_a0_bf = simd_and(tmp17, basis_bits.bit_2);
        tmp18 = simd<1>::constant<1>();
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp18, carryQ.get_carry_in(2), tmp19));
        tmp20 = simd_and(tmp19, bytetest_e0);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp20, carryQ.get_carry_in(3), tmp21));
        tmp22 = simd_and(tmp21, bytetest_a0_bf);
        tmp23 = simd_or(tmp22, bytetest_e1_ef);
        if ((bitblock::any(tmp23) || carryQ.CarryTest(4, 14))) {
          r800_ffff_tmp1 = simd_and(tmp7, tmp2);
          r800_ffff_tmp2 = simd_andc(tmp5, tmp9);
          bytetest_e1 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          r800_ffff_tmp3 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp4 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
          r800_ffff_tmp5 = simd_and(r800_ffff_tmp3, r800_ffff_tmp4);
          r800_ffff_tmp6 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp7 = simd_or(tmp9, r800_ffff_tmp6);
          bytetest_90 = simd_andc(r800_ffff_tmp5, r800_ffff_tmp7);
          r800_ffff_tmp8 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp9 = simd_andc(r800_ffff_tmp3, r800_ffff_tmp8);
          bytetest_80_80 = simd_andc(r800_ffff_tmp9, r800_ffff_tmp7);
          r800_ffff_tmp10 = simd<1>::constant<1>();
          carryQ.cq[4] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp10, carryQ.get_carry_in(4), r800_ffff_tmp11));
          r800_ffff_tmp12 = simd_and(r800_ffff_tmp11, bytetest_e1);
          carryQ.cq[5] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp12, carryQ.get_carry_in(5), r800_ffff_tmp13));
          r800_ffff_tmp14 = simd_and(r800_ffff_tmp13, bytetest_90);
          carryQ.cq[6] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp14, carryQ.get_carry_in(6), r800_ffff_tmp15));
          r800_ffff_tmp16 = simd_and(r800_ffff_tmp15, bytetest_80_80);
          struct_Pd.cc = simd_or(r800_ffff_tmp16, struct_Pd.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          r800_ffff_tmp17 = simd_and(r800_ffff_tmp3, tmp2);
          bytetest_a0 = simd_andc(r800_ffff_tmp17, r800_ffff_tmp7);
          r800_ffff_tmp18 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
          r800_ffff_tmp19 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp20 = simd_and(r800_ffff_tmp18, r800_ffff_tmp19);
          bytetest_86_86 = simd_and(r800_ffff_tmp9, r800_ffff_tmp20);
          r800_ffff_tmp21 = simd_and(r800_ffff_tmp13, bytetest_a0);
          carryQ.cq[7] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp21, carryQ.get_carry_in(7), r800_ffff_tmp22));
          r800_ffff_tmp23 = simd_and(r800_ffff_tmp22, bytetest_86_86);
          struct_Pd.cc = simd_or(r800_ffff_tmp23, struct_Pd.cc);
          r800_ffff_tmp24 = simd_andc(r800_ffff_tmp19, tmp9);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp24);
          bytetest_80 = simd_andc(r800_ffff_tmp9, r800_ffff_tmp7);
          r800_ffff_tmp25 = simd_andc(r800_ffff_tmp5, basis_bits.bit_4);
          r800_ffff_tmp26 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
          bytetest_90_95 = simd_andc(r800_ffff_tmp25, r800_ffff_tmp26);
          r800_ffff_tmp27 = simd_and(r800_ffff_tmp11, bytetest_e2);
          carryQ.cq[8] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp27, carryQ.get_carry_in(8), r800_ffff_tmp28));
          r800_ffff_tmp29 = simd_and(r800_ffff_tmp28, bytetest_80);
          carryQ.cq[9] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp29, carryQ.get_carry_in(9), r800_ffff_tmp30));
          r800_ffff_tmp31 = simd_and(r800_ffff_tmp30, bytetest_90_95);
          struct_Pd.cc = simd_or(r800_ffff_tmp31, struct_Pd.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp24);
          r800_ffff_tmp32 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp33 = simd_and(r800_ffff_tmp3, r800_ffff_tmp32);
          r800_ffff_tmp34 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
          r800_ffff_tmp35 = simd_andc(r800_ffff_tmp34, r800_ffff_tmp6);
          bytetest_b8 = simd_and(r800_ffff_tmp33, r800_ffff_tmp35);
          r800_ffff_tmp36 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp37 = simd_and(r800_ffff_tmp18, r800_ffff_tmp36);
          bytetest_97_97 = simd_and(r800_ffff_tmp5, r800_ffff_tmp37);
          r800_ffff_tmp38 = simd_and(r800_ffff_tmp28, bytetest_b8);
          carryQ.cq[10] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp38, carryQ.get_carry_in(10), r800_ffff_tmp39));
          r800_ffff_tmp40 = simd_and(r800_ffff_tmp39, bytetest_97_97);
          struct_Pd.cc = simd_or(r800_ffff_tmp40, struct_Pd.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp24);
          bytetest_b8 = simd_and(r800_ffff_tmp33, r800_ffff_tmp35);
          r800_ffff_tmp41 = simd_and(r800_ffff_tmp34, r800_ffff_tmp19);
          bytetest_9a_9a = simd_and(r800_ffff_tmp5, r800_ffff_tmp41);
          r800_ffff_tmp42 = simd_and(r800_ffff_tmp39, bytetest_9a_9a);
          struct_Pd.cc = simd_or(r800_ffff_tmp42, struct_Pd.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp24);
          bytetest_b8 = simd_and(r800_ffff_tmp33, r800_ffff_tmp35);
          r800_ffff_tmp43 = simd_and(r800_ffff_tmp34, basis_bits.bit_6);
          bytetest_ba_bb = simd_and(r800_ffff_tmp33, r800_ffff_tmp43);
          r800_ffff_tmp44 = simd_and(r800_ffff_tmp39, bytetest_ba_bb);
          struct_Pd.cc = simd_or(r800_ffff_tmp44, struct_Pd.cc);
          r800_ffff_tmp45 = simd_andc(r800_ffff_tmp36, tmp9);
          bytetest_e3 = simd_and(r800_ffff_tmp1, r800_ffff_tmp45);
          bytetest_80 = simd_andc(r800_ffff_tmp9, r800_ffff_tmp7);
          r800_ffff_tmp46 = simd_andc(tmp4, r800_ffff_tmp6);
          bytetest_9c_9c = simd_and(r800_ffff_tmp5, r800_ffff_tmp46);
          r800_ffff_tmp47 = simd_and(r800_ffff_tmp11, bytetest_e3);
          carryQ.cq[11] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp47, carryQ.get_carry_in(11), r800_ffff_tmp48));
          r800_ffff_tmp49 = simd_and(r800_ffff_tmp48, bytetest_80);
          carryQ.cq[12] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp49, carryQ.get_carry_in(12), r800_ffff_tmp50));
          r800_ffff_tmp51 = simd_and(r800_ffff_tmp50, bytetest_9c_9c);
          struct_Pd.cc = simd_or(r800_ffff_tmp51, struct_Pd.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, r800_ffff_tmp45);
          bytetest_80 = simd_andc(r800_ffff_tmp9, r800_ffff_tmp7);
          bytetest_b0_b0 = simd_andc(r800_ffff_tmp33, r800_ffff_tmp7);
          r800_ffff_tmp52 = simd_and(r800_ffff_tmp50, bytetest_b0_b0);
          struct_Pd.cc = simd_or(r800_ffff_tmp52, struct_Pd.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, r800_ffff_tmp45);
          bytetest_82 = simd_and(r800_ffff_tmp9, r800_ffff_tmp24);
          bytetest_a0_a0 = simd_andc(r800_ffff_tmp17, r800_ffff_tmp7);
          r800_ffff_tmp53 = simd_and(r800_ffff_tmp48, bytetest_82);
          carryQ.cq[13] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp53, carryQ.get_carry_in(13), r800_ffff_tmp54));
          r800_ffff_tmp55 = simd_and(r800_ffff_tmp54, bytetest_a0_a0);
          struct_Pd.cc = simd_or(r800_ffff_tmp55, struct_Pd.cc);
          r800_ffff_tmp56 = simd_and(tmp4, r800_ffff_tmp36);
          bytetest_ef = simd_and(r800_ffff_tmp1, r800_ffff_tmp56);
          bytetest_b8 = simd_and(r800_ffff_tmp33, r800_ffff_tmp35);
          r800_ffff_tmp57 = simd_andc(r800_ffff_tmp33, tmp9);
          r800_ffff_tmp58 = simd_not(basis_bits.bit_7);
          r800_ffff_tmp59 = simd_or(simd_and(basis_bits.bit_6, r800_ffff_tmp58), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
          bytetest_b1_b2 = simd_and(r800_ffff_tmp57, r800_ffff_tmp59);
          r800_ffff_tmp60 = simd_and(r800_ffff_tmp11, bytetest_ef);
          carryQ.cq[14] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp60, carryQ.get_carry_in(14), r800_ffff_tmp61));
          r800_ffff_tmp62 = simd_and(r800_ffff_tmp61, bytetest_b8);
          carryQ.cq[15] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp62, carryQ.get_carry_in(15), r800_ffff_tmp63));
          r800_ffff_tmp64 = simd_and(r800_ffff_tmp63, bytetest_b1_b2);
          struct_Pd.cc = simd_or(r800_ffff_tmp64, struct_Pd.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, r800_ffff_tmp56);
          r800_ffff_tmp65 = simd_and(r800_ffff_tmp34, tmp5);
          bytetest_b9 = simd_and(r800_ffff_tmp33, r800_ffff_tmp65);
          bytetest_98_98 = simd_and(r800_ffff_tmp5, r800_ffff_tmp35);
          r800_ffff_tmp66 = simd_and(r800_ffff_tmp61, bytetest_b9);
          carryQ.cq[16] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp66, carryQ.get_carry_in(16), r800_ffff_tmp67));
          r800_ffff_tmp68 = simd_and(r800_ffff_tmp67, bytetest_98_98);
          struct_Pd.cc = simd_or(r800_ffff_tmp68, struct_Pd.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, r800_ffff_tmp56);
          bytetest_b9 = simd_and(r800_ffff_tmp33, r800_ffff_tmp65);
          bytetest_a3_a3 = simd_and(r800_ffff_tmp17, r800_ffff_tmp45);
          r800_ffff_tmp69 = simd_and(r800_ffff_tmp67, bytetest_a3_a3);
          struct_Pd.cc = simd_or(r800_ffff_tmp69, struct_Pd.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, r800_ffff_tmp56);
          bytetest_bc = simd_and(r800_ffff_tmp33, r800_ffff_tmp46);
          bytetest_8d_8d = simd_and(r800_ffff_tmp9, tmp6);
          r800_ffff_tmp70 = simd_and(r800_ffff_tmp61, bytetest_bc);
          carryQ.cq[17] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp70, carryQ.get_carry_in(17), r800_ffff_tmp71));
          r800_ffff_tmp72 = simd_and(r800_ffff_tmp71, bytetest_8d_8d);
          struct_Pd.cc = simd_or(r800_ffff_tmp72, struct_Pd.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(4, 14);
        }
  }
  CarryArray<18, 0> carryQ;
  };

  struct Pe {
  Pe() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Pe & struct_Pe) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_29_29, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, bytetest_5d_5d, tmp12, tmp13, bytetest_7d_7d, tmp14;
		BitBlock tmp15, tmp16, tmp17, tmp18, bytetest_e1_ef, tmp19, tmp20, bytetest_e0;
		BitBlock tmp21, bytetest_a0_bf, tmp22, tmp23, tmp24, tmp25, tmp26, tmp27;
		BitBlock r800_ffff_tmp1, r800_ffff_tmp2, r800_ffff_tmp3, r800_ffff_tmp4;
		BitBlock r800_ffff_tmp5, r800_ffff_tmp6, r800_ffff_tmp7, r800_ffff_tmp8;
		BitBlock bytetest_bc, r800_ffff_tmp9, r800_ffff_tmp10, bytetest_bb_bb;
		BitBlock r800_ffff_tmp11, r800_ffff_tmp12, r800_ffff_tmp13, r800_ffff_tmp14;
		BitBlock r800_ffff_tmp15, r800_ffff_tmp16, r800_ffff_tmp17, bytetest_bd_bd;
		BitBlock r800_ffff_tmp18, r800_ffff_tmp19, bytetest_e1, r800_ffff_tmp20;
		BitBlock r800_ffff_tmp21, r800_ffff_tmp22, bytetest_9a, bytetest_9c_9c;
		BitBlock r800_ffff_tmp23, r800_ffff_tmp24, r800_ffff_tmp25, r800_ffff_tmp26;
		BitBlock r800_ffff_tmp27, r800_ffff_tmp28, bytetest_e2, r800_ffff_tmp29;
		BitBlock r800_ffff_tmp30, bytetest_81, r800_ffff_tmp31, r800_ffff_tmp32;
		BitBlock bytetest_86_86, r800_ffff_tmp33, r800_ffff_tmp34, r800_ffff_tmp35;
		BitBlock r800_ffff_tmp36, r800_ffff_tmp37, r800_ffff_tmp38, bytetest_be_be;
		BitBlock r800_ffff_tmp39, bytetest_82, bytetest_8e_8e, r800_ffff_tmp40;
		BitBlock r800_ffff_tmp41, r800_ffff_tmp42, bytetest_8c, bytetest_89_89;
		BitBlock r800_ffff_tmp43, r800_ffff_tmp44, r800_ffff_tmp45, bytetest_8b_8b;
		BitBlock r800_ffff_tmp46, r800_ffff_tmp47, bytetest_aa_aa, r800_ffff_tmp48;
		BitBlock bytetest_9d, bytetest_a9_a9, r800_ffff_tmp49, r800_ffff_tmp50;
		BitBlock r800_ffff_tmp51, bytetest_ab_ab, r800_ffff_tmp52, bytetest_ad_ad;
		BitBlock r800_ffff_tmp53, r800_ffff_tmp54, bytetest_af_af, r800_ffff_tmp55;
		BitBlock bytetest_b1_b1, r800_ffff_tmp56, r800_ffff_tmp57, bytetest_b3_b3;
		BitBlock r800_ffff_tmp58, r800_ffff_tmp59, bytetest_b5_b5, r800_ffff_tmp60;
		BitBlock bytetest_9f, r800_ffff_tmp61, r800_ffff_tmp62, r800_ffff_tmp63;
		BitBlock r800_ffff_tmp64, bytetest_a7_a7, r800_ffff_tmp65, r800_ffff_tmp66;
		BitBlock r800_ffff_tmp67, r800_ffff_tmp68, r800_ffff_tmp69, bytetest_a6;
		BitBlock r800_ffff_tmp70, bytetest_84_84, r800_ffff_tmp71, r800_ffff_tmp72;
		BitBlock r800_ffff_tmp73, r800_ffff_tmp74, r800_ffff_tmp75, bytetest_88_88;
		BitBlock r800_ffff_tmp76, bytetest_8a_8a, r800_ffff_tmp77, bytetest_8c_8c;
		BitBlock r800_ffff_tmp78, r800_ffff_tmp79, bytetest_90_90, r800_ffff_tmp80;
		BitBlock bytetest_92_92, r800_ffff_tmp81, bytetest_94_94, r800_ffff_tmp82;
		BitBlock bytetest_96_96, r800_ffff_tmp83, bytetest_98_98, r800_ffff_tmp84;
		BitBlock bytetest_a7, bytetest_99_99, r800_ffff_tmp85, r800_ffff_tmp86;
		BitBlock r800_ffff_tmp87, bytetest_9b_9b, r800_ffff_tmp88, r800_ffff_tmp89;
		BitBlock bytetest_b8, bytetest_a3_a3, r800_ffff_tmp90, r800_ffff_tmp91;
		BitBlock r800_ffff_tmp92, bytetest_a5_a5, r800_ffff_tmp93, r800_ffff_tmp94;
		BitBlock r800_ffff_tmp95, bytetest_e3, bytetest_80, r800_ffff_tmp96;
		BitBlock r800_ffff_tmp97, r800_ffff_tmp98, r800_ffff_tmp99, r800_ffff_tmp100;
		BitBlock r800_ffff_tmp101, bytetest_8d_8d, r800_ffff_tmp102, bytetest_8f_8f;
		BitBlock r800_ffff_tmp103, bytetest_91_91, r800_ffff_tmp104, bytetest_95_95;
		BitBlock r800_ffff_tmp105, bytetest_97_97, r800_ffff_tmp106, r800_ffff_tmp107;
		BitBlock r800_ffff_tmp108, r800_ffff_tmp109, bytetest_9e_9f, r800_ffff_tmp110;
		BitBlock bytetest_ef, bytetest_b4, bytetest_bf_bf, r800_ffff_tmp111;
		BitBlock r800_ffff_tmp112, r800_ffff_tmp113, r800_ffff_tmp114;
		BitBlock r800_ffff_tmp115, r800_ffff_tmp116, r800_ffff_tmp117;
		BitBlock r800_ffff_tmp118, bytetest_b6_b6, r800_ffff_tmp119, bytetest_b8_b8;
		BitBlock r800_ffff_tmp120, bytetest_ba_ba, r800_ffff_tmp121, bytetest_bc_bc;
		BitBlock r800_ffff_tmp122, r800_ffff_tmp123, bytetest_b9, bytetest_80_80;
		BitBlock r800_ffff_tmp124, r800_ffff_tmp125, r800_ffff_tmp126, bytetest_82_82;
		BitBlock r800_ffff_tmp127, r800_ffff_tmp128, r800_ffff_tmp129, bytetest_9a_9a;
		BitBlock r800_ffff_tmp130, r800_ffff_tmp131, bytetest_9e_9e, r800_ffff_tmp132;
		BitBlock r800_ffff_tmp133, r800_ffff_tmp134, r800_ffff_tmp135;
		BitBlock r800_ffff_tmp136, bytetest_bd, bytetest_9d_9d, r800_ffff_tmp137;
		BitBlock r800_ffff_tmp138, r800_ffff_tmp139, bytetest_a0_a0, r800_ffff_tmp140;
		BitBlock r800_ffff_tmp141;




        struct_Pe.cc = simd<1>::constant<0>();
        tmp1 = simd_or(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp2, tmp1);
        tmp4 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp6 = simd_and(tmp4, tmp5);
        bytetest_29_29 = simd_and(tmp3, tmp6);
        struct_Pe.cc = simd_or(bytetest_29_29, struct_Pe.cc);
        tmp7 = simd_andc(basis_bits.bit_1, basis_bits.bit_0);
        tmp8 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp11 = simd_and(tmp10, tmp5);
        bytetest_5d_5d = simd_and(tmp9, tmp11);
        struct_Pe.cc = simd_or(bytetest_5d_5d, struct_Pe.cc);
        tmp12 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp13 = simd_and(tmp7, tmp12);
        bytetest_7d_7d = simd_and(tmp13, tmp11);
        struct_Pe.cc = simd_or(bytetest_7d_7d, struct_Pe.cc);
        tmp14 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp15 = simd_and(tmp14, tmp2);
        tmp16 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp17 = simd_or(basis_bits.bit_5, tmp16);
        tmp18 = simd_or(basis_bits.bit_4, tmp17);
        bytetest_e1_ef = simd_and(tmp15, tmp18);
        tmp19 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp20 = simd_or(tmp19, tmp16);
        bytetest_e0 = simd_andc(tmp15, tmp20);
        tmp21 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_a0_bf = simd_and(tmp21, basis_bits.bit_2);
        tmp22 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp22, carryQ.get_carry_in(0), tmp23));
        tmp24 = simd_and(tmp23, bytetest_e0);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp24, carryQ.get_carry_in(1), tmp25));
        tmp26 = simd_and(tmp25, bytetest_a0_bf);
        tmp27 = simd_or(tmp26, bytetest_e1_ef);
        if ((bitblock::any(tmp27) || carryQ.CarryTest(2, 22))) {
          r800_ffff_tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp2 = simd_and(r800_ffff_tmp1, tmp2);
          r800_ffff_tmp3 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
          r800_ffff_tmp4 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp5 = simd_or(r800_ffff_tmp3, r800_ffff_tmp4);
          bytetest_e0 = simd_andc(r800_ffff_tmp2, r800_ffff_tmp5);
          r800_ffff_tmp6 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp7 = simd_and(r800_ffff_tmp6, tmp12);
          r800_ffff_tmp8 = simd_andc(tmp10, r800_ffff_tmp4);
          bytetest_bc = simd_and(r800_ffff_tmp7, r800_ffff_tmp8);
          r800_ffff_tmp9 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp10 = simd_and(tmp4, r800_ffff_tmp9);
          bytetest_bb_bb = simd_and(r800_ffff_tmp7, r800_ffff_tmp10);
          r800_ffff_tmp11 = simd<1>::constant<1>();
          carryQ.cq[2] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp11, carryQ.get_carry_in(2), r800_ffff_tmp12));
          r800_ffff_tmp13 = simd_and(r800_ffff_tmp12, bytetest_e0);
          carryQ.cq[3] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp13, carryQ.get_carry_in(3), r800_ffff_tmp14));
          r800_ffff_tmp15 = simd_and(r800_ffff_tmp14, bytetest_bc);
          carryQ.cq[4] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp15, carryQ.get_carry_in(4), r800_ffff_tmp16));
          r800_ffff_tmp17 = simd_and(r800_ffff_tmp16, bytetest_bb_bb);
          struct_Pe.cc = simd_or(r800_ffff_tmp17, struct_Pe.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp2, r800_ffff_tmp5);
          bytetest_bc = simd_and(r800_ffff_tmp7, r800_ffff_tmp8);
          bytetest_bd_bd = simd_and(r800_ffff_tmp7, tmp11);
          r800_ffff_tmp18 = simd_and(r800_ffff_tmp16, bytetest_bd_bd);
          struct_Pe.cc = simd_or(r800_ffff_tmp18, struct_Pe.cc);
          r800_ffff_tmp19 = simd_andc(tmp5, r800_ffff_tmp3);
          bytetest_e1 = simd_and(r800_ffff_tmp2, r800_ffff_tmp19);
          r800_ffff_tmp20 = simd_and(r800_ffff_tmp6, tmp8);
          r800_ffff_tmp21 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp22 = simd_and(tmp4, r800_ffff_tmp21);
          bytetest_9a = simd_and(r800_ffff_tmp20, r800_ffff_tmp22);
          bytetest_9c_9c = simd_and(r800_ffff_tmp20, r800_ffff_tmp8);
          r800_ffff_tmp23 = simd_and(r800_ffff_tmp12, bytetest_e1);
          carryQ.cq[5] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp23, carryQ.get_carry_in(5), r800_ffff_tmp24));
          r800_ffff_tmp25 = simd_and(r800_ffff_tmp24, bytetest_9a);
          carryQ.cq[6] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp25, carryQ.get_carry_in(6), r800_ffff_tmp26));
          r800_ffff_tmp27 = simd_and(r800_ffff_tmp26, bytetest_9c_9c);
          struct_Pe.cc = simd_or(r800_ffff_tmp27, struct_Pe.cc);
          r800_ffff_tmp28 = simd_andc(r800_ffff_tmp21, r800_ffff_tmp3);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          r800_ffff_tmp29 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp30 = simd_andc(r800_ffff_tmp6, r800_ffff_tmp29);
          bytetest_81 = simd_and(r800_ffff_tmp30, r800_ffff_tmp19);
          r800_ffff_tmp31 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
          r800_ffff_tmp32 = simd_and(r800_ffff_tmp31, r800_ffff_tmp21);
          bytetest_86_86 = simd_and(r800_ffff_tmp30, r800_ffff_tmp32);
          r800_ffff_tmp33 = simd_and(r800_ffff_tmp12, bytetest_e2);
          carryQ.cq[7] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp33, carryQ.get_carry_in(7), r800_ffff_tmp34));
          r800_ffff_tmp35 = simd_and(r800_ffff_tmp34, bytetest_81);
          carryQ.cq[8] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp35, carryQ.get_carry_in(8), r800_ffff_tmp36));
          r800_ffff_tmp37 = simd_and(r800_ffff_tmp36, bytetest_86_86);
          struct_Pe.cc = simd_or(r800_ffff_tmp37, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_81 = simd_and(r800_ffff_tmp30, r800_ffff_tmp19);
          r800_ffff_tmp38 = simd_and(tmp10, r800_ffff_tmp21);
          bytetest_be_be = simd_and(r800_ffff_tmp7, r800_ffff_tmp38);
          r800_ffff_tmp39 = simd_and(r800_ffff_tmp36, bytetest_be_be);
          struct_Pe.cc = simd_or(r800_ffff_tmp39, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_82 = simd_and(r800_ffff_tmp30, r800_ffff_tmp28);
          bytetest_8e_8e = simd_and(r800_ffff_tmp30, r800_ffff_tmp38);
          r800_ffff_tmp40 = simd_and(r800_ffff_tmp34, bytetest_82);
          carryQ.cq[9] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp40, carryQ.get_carry_in(9), r800_ffff_tmp41));
          r800_ffff_tmp42 = simd_and(r800_ffff_tmp41, bytetest_8e_8e);
          struct_Pe.cc = simd_or(r800_ffff_tmp42, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_8c = simd_and(r800_ffff_tmp30, r800_ffff_tmp8);
          bytetest_89_89 = simd_and(r800_ffff_tmp30, tmp6);
          r800_ffff_tmp43 = simd_and(r800_ffff_tmp34, bytetest_8c);
          carryQ.cq[10] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp43, carryQ.get_carry_in(10), r800_ffff_tmp44));
          r800_ffff_tmp45 = simd_and(r800_ffff_tmp44, bytetest_89_89);
          struct_Pe.cc = simd_or(r800_ffff_tmp45, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_8c = simd_and(r800_ffff_tmp30, r800_ffff_tmp8);
          bytetest_8b_8b = simd_and(r800_ffff_tmp30, r800_ffff_tmp10);
          r800_ffff_tmp46 = simd_and(r800_ffff_tmp44, bytetest_8b_8b);
          struct_Pe.cc = simd_or(r800_ffff_tmp46, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_8c = simd_and(r800_ffff_tmp30, r800_ffff_tmp8);
          r800_ffff_tmp47 = simd_and(r800_ffff_tmp6, tmp2);
          bytetest_aa_aa = simd_and(r800_ffff_tmp47, r800_ffff_tmp22);
          r800_ffff_tmp48 = simd_and(r800_ffff_tmp44, bytetest_aa_aa);
          struct_Pe.cc = simd_or(r800_ffff_tmp48, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_9d = simd_and(r800_ffff_tmp20, tmp11);
          bytetest_a9_a9 = simd_and(r800_ffff_tmp47, tmp6);
          r800_ffff_tmp49 = simd_and(r800_ffff_tmp34, bytetest_9d);
          carryQ.cq[11] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp49, carryQ.get_carry_in(11), r800_ffff_tmp50));
          r800_ffff_tmp51 = simd_and(r800_ffff_tmp50, bytetest_a9_a9);
          struct_Pe.cc = simd_or(r800_ffff_tmp51, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_9d = simd_and(r800_ffff_tmp20, tmp11);
          bytetest_ab_ab = simd_and(r800_ffff_tmp47, r800_ffff_tmp10);
          r800_ffff_tmp52 = simd_and(r800_ffff_tmp50, bytetest_ab_ab);
          struct_Pe.cc = simd_or(r800_ffff_tmp52, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_9d = simd_and(r800_ffff_tmp20, tmp11);
          bytetest_ad_ad = simd_and(r800_ffff_tmp47, tmp11);
          r800_ffff_tmp53 = simd_and(r800_ffff_tmp50, bytetest_ad_ad);
          struct_Pe.cc = simd_or(r800_ffff_tmp53, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_9d = simd_and(r800_ffff_tmp20, tmp11);
          r800_ffff_tmp54 = simd_and(tmp10, r800_ffff_tmp9);
          bytetest_af_af = simd_and(r800_ffff_tmp47, r800_ffff_tmp54);
          r800_ffff_tmp55 = simd_and(r800_ffff_tmp50, bytetest_af_af);
          struct_Pe.cc = simd_or(r800_ffff_tmp55, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_9d = simd_and(r800_ffff_tmp20, tmp11);
          bytetest_b1_b1 = simd_and(r800_ffff_tmp7, r800_ffff_tmp19);
          r800_ffff_tmp56 = simd_and(r800_ffff_tmp50, bytetest_b1_b1);
          struct_Pe.cc = simd_or(r800_ffff_tmp56, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_9d = simd_and(r800_ffff_tmp20, tmp11);
          r800_ffff_tmp57 = simd_andc(r800_ffff_tmp9, r800_ffff_tmp3);
          bytetest_b3_b3 = simd_and(r800_ffff_tmp7, r800_ffff_tmp57);
          r800_ffff_tmp58 = simd_and(r800_ffff_tmp50, bytetest_b3_b3);
          struct_Pe.cc = simd_or(r800_ffff_tmp58, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_9d = simd_and(r800_ffff_tmp20, tmp11);
          r800_ffff_tmp59 = simd_and(r800_ffff_tmp31, tmp5);
          bytetest_b5_b5 = simd_and(r800_ffff_tmp7, r800_ffff_tmp59);
          r800_ffff_tmp60 = simd_and(r800_ffff_tmp50, bytetest_b5_b5);
          struct_Pe.cc = simd_or(r800_ffff_tmp60, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_9f = simd_and(r800_ffff_tmp20, r800_ffff_tmp54);
          bytetest_86_86 = simd_and(r800_ffff_tmp30, r800_ffff_tmp32);
          r800_ffff_tmp61 = simd_and(r800_ffff_tmp34, bytetest_9f);
          carryQ.cq[12] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp61, carryQ.get_carry_in(12), r800_ffff_tmp62));
          r800_ffff_tmp63 = simd_and(r800_ffff_tmp62, bytetest_86_86);
          struct_Pe.cc = simd_or(r800_ffff_tmp63, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_9f = simd_and(r800_ffff_tmp20, r800_ffff_tmp54);
          r800_ffff_tmp64 = simd_and(r800_ffff_tmp31, r800_ffff_tmp9);
          bytetest_a7_a7 = simd_and(r800_ffff_tmp47, r800_ffff_tmp64);
          r800_ffff_tmp65 = simd_and(r800_ffff_tmp62, bytetest_a7_a7);
          struct_Pe.cc = simd_or(r800_ffff_tmp65, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_9f = simd_and(r800_ffff_tmp20, r800_ffff_tmp54);
          bytetest_a9_a9 = simd_and(r800_ffff_tmp47, tmp6);
          r800_ffff_tmp66 = simd_and(r800_ffff_tmp62, bytetest_a9_a9);
          struct_Pe.cc = simd_or(r800_ffff_tmp66, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_9f = simd_and(r800_ffff_tmp20, r800_ffff_tmp54);
          bytetest_ab_ab = simd_and(r800_ffff_tmp47, r800_ffff_tmp10);
          r800_ffff_tmp67 = simd_and(r800_ffff_tmp62, bytetest_ab_ab);
          struct_Pe.cc = simd_or(r800_ffff_tmp67, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_9f = simd_and(r800_ffff_tmp20, r800_ffff_tmp54);
          bytetest_ad_ad = simd_and(r800_ffff_tmp47, tmp11);
          r800_ffff_tmp68 = simd_and(r800_ffff_tmp62, bytetest_ad_ad);
          struct_Pe.cc = simd_or(r800_ffff_tmp68, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_9f = simd_and(r800_ffff_tmp20, r800_ffff_tmp54);
          bytetest_af_af = simd_and(r800_ffff_tmp47, r800_ffff_tmp54);
          r800_ffff_tmp69 = simd_and(r800_ffff_tmp62, bytetest_af_af);
          struct_Pe.cc = simd_or(r800_ffff_tmp69, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_a6 = simd_and(r800_ffff_tmp47, r800_ffff_tmp32);
          r800_ffff_tmp70 = simd_andc(r800_ffff_tmp31, r800_ffff_tmp4);
          bytetest_84_84 = simd_and(r800_ffff_tmp30, r800_ffff_tmp70);
          r800_ffff_tmp71 = simd_and(r800_ffff_tmp34, bytetest_a6);
          carryQ.cq[13] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp71, carryQ.get_carry_in(13), r800_ffff_tmp72));
          r800_ffff_tmp73 = simd_and(r800_ffff_tmp72, bytetest_84_84);
          struct_Pe.cc = simd_or(r800_ffff_tmp73, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_a6 = simd_and(r800_ffff_tmp47, r800_ffff_tmp32);
          bytetest_86_86 = simd_and(r800_ffff_tmp30, r800_ffff_tmp32);
          r800_ffff_tmp74 = simd_and(r800_ffff_tmp72, bytetest_86_86);
          struct_Pe.cc = simd_or(r800_ffff_tmp74, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_a6 = simd_and(r800_ffff_tmp47, r800_ffff_tmp32);
          r800_ffff_tmp75 = simd_andc(tmp4, r800_ffff_tmp4);
          bytetest_88_88 = simd_and(r800_ffff_tmp30, r800_ffff_tmp75);
          r800_ffff_tmp76 = simd_and(r800_ffff_tmp72, bytetest_88_88);
          struct_Pe.cc = simd_or(r800_ffff_tmp76, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_a6 = simd_and(r800_ffff_tmp47, r800_ffff_tmp32);
          bytetest_8a_8a = simd_and(r800_ffff_tmp30, r800_ffff_tmp22);
          r800_ffff_tmp77 = simd_and(r800_ffff_tmp72, bytetest_8a_8a);
          struct_Pe.cc = simd_or(r800_ffff_tmp77, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_a6 = simd_and(r800_ffff_tmp47, r800_ffff_tmp32);
          bytetest_8c_8c = simd_and(r800_ffff_tmp30, r800_ffff_tmp8);
          r800_ffff_tmp78 = simd_and(r800_ffff_tmp72, bytetest_8c_8c);
          struct_Pe.cc = simd_or(r800_ffff_tmp78, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_a6 = simd_and(r800_ffff_tmp47, r800_ffff_tmp32);
          bytetest_8e_8e = simd_and(r800_ffff_tmp30, r800_ffff_tmp38);
          r800_ffff_tmp79 = simd_and(r800_ffff_tmp72, bytetest_8e_8e);
          struct_Pe.cc = simd_or(r800_ffff_tmp79, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_a6 = simd_and(r800_ffff_tmp47, r800_ffff_tmp32);
          bytetest_90_90 = simd_andc(r800_ffff_tmp20, r800_ffff_tmp5);
          r800_ffff_tmp80 = simd_and(r800_ffff_tmp72, bytetest_90_90);
          struct_Pe.cc = simd_or(r800_ffff_tmp80, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_a6 = simd_and(r800_ffff_tmp47, r800_ffff_tmp32);
          bytetest_92_92 = simd_and(r800_ffff_tmp20, r800_ffff_tmp28);
          r800_ffff_tmp81 = simd_and(r800_ffff_tmp72, bytetest_92_92);
          struct_Pe.cc = simd_or(r800_ffff_tmp81, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_a6 = simd_and(r800_ffff_tmp47, r800_ffff_tmp32);
          bytetest_94_94 = simd_and(r800_ffff_tmp20, r800_ffff_tmp70);
          r800_ffff_tmp82 = simd_and(r800_ffff_tmp72, bytetest_94_94);
          struct_Pe.cc = simd_or(r800_ffff_tmp82, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_a6 = simd_and(r800_ffff_tmp47, r800_ffff_tmp32);
          bytetest_96_96 = simd_and(r800_ffff_tmp20, r800_ffff_tmp32);
          r800_ffff_tmp83 = simd_and(r800_ffff_tmp72, bytetest_96_96);
          struct_Pe.cc = simd_or(r800_ffff_tmp83, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_a6 = simd_and(r800_ffff_tmp47, r800_ffff_tmp32);
          bytetest_98_98 = simd_and(r800_ffff_tmp20, r800_ffff_tmp75);
          r800_ffff_tmp84 = simd_and(r800_ffff_tmp72, bytetest_98_98);
          struct_Pe.cc = simd_or(r800_ffff_tmp84, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_a7 = simd_and(r800_ffff_tmp47, r800_ffff_tmp64);
          bytetest_99_99 = simd_and(r800_ffff_tmp20, tmp6);
          r800_ffff_tmp85 = simd_and(r800_ffff_tmp34, bytetest_a7);
          carryQ.cq[14] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp85, carryQ.get_carry_in(14), r800_ffff_tmp86));
          r800_ffff_tmp87 = simd_and(r800_ffff_tmp86, bytetest_99_99);
          struct_Pe.cc = simd_or(r800_ffff_tmp87, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_a7 = simd_and(r800_ffff_tmp47, r800_ffff_tmp64);
          bytetest_9b_9b = simd_and(r800_ffff_tmp20, r800_ffff_tmp10);
          r800_ffff_tmp88 = simd_and(r800_ffff_tmp86, bytetest_9b_9b);
          struct_Pe.cc = simd_or(r800_ffff_tmp88, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_a7 = simd_and(r800_ffff_tmp47, r800_ffff_tmp64);
          bytetest_bd_bd = simd_and(r800_ffff_tmp7, tmp11);
          r800_ffff_tmp89 = simd_and(r800_ffff_tmp86, bytetest_bd_bd);
          struct_Pe.cc = simd_or(r800_ffff_tmp89, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_b8 = simd_and(r800_ffff_tmp7, r800_ffff_tmp75);
          bytetest_a3_a3 = simd_and(r800_ffff_tmp47, r800_ffff_tmp57);
          r800_ffff_tmp90 = simd_and(r800_ffff_tmp34, bytetest_b8);
          carryQ.cq[15] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp90, carryQ.get_carry_in(15), r800_ffff_tmp91));
          r800_ffff_tmp92 = simd_and(r800_ffff_tmp91, bytetest_a3_a3);
          struct_Pe.cc = simd_or(r800_ffff_tmp92, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_b8 = simd_and(r800_ffff_tmp7, r800_ffff_tmp75);
          bytetest_a5_a5 = simd_and(r800_ffff_tmp47, r800_ffff_tmp59);
          r800_ffff_tmp93 = simd_and(r800_ffff_tmp91, bytetest_a5_a5);
          struct_Pe.cc = simd_or(r800_ffff_tmp93, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_b8 = simd_and(r800_ffff_tmp7, r800_ffff_tmp75);
          bytetest_a7_a7 = simd_and(r800_ffff_tmp47, r800_ffff_tmp64);
          r800_ffff_tmp94 = simd_and(r800_ffff_tmp91, bytetest_a7_a7);
          struct_Pe.cc = simd_or(r800_ffff_tmp94, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_b8 = simd_and(r800_ffff_tmp7, r800_ffff_tmp75);
          bytetest_a9_a9 = simd_and(r800_ffff_tmp47, tmp6);
          r800_ffff_tmp95 = simd_and(r800_ffff_tmp91, bytetest_a9_a9);
          struct_Pe.cc = simd_or(r800_ffff_tmp95, struct_Pe.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp57);
          bytetest_80 = simd_andc(r800_ffff_tmp30, r800_ffff_tmp5);
          bytetest_89_89 = simd_and(r800_ffff_tmp30, tmp6);
          r800_ffff_tmp96 = simd_and(r800_ffff_tmp12, bytetest_e3);
          carryQ.cq[16] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp96, carryQ.get_carry_in(16), r800_ffff_tmp97));
          r800_ffff_tmp98 = simd_and(r800_ffff_tmp97, bytetest_80);
          carryQ.cq[17] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp98, carryQ.get_carry_in(17), r800_ffff_tmp99));
          r800_ffff_tmp100 = simd_and(r800_ffff_tmp99, bytetest_89_89);
          struct_Pe.cc = simd_or(r800_ffff_tmp100, struct_Pe.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp57);
          bytetest_80 = simd_andc(r800_ffff_tmp30, r800_ffff_tmp5);
          bytetest_8b_8b = simd_and(r800_ffff_tmp30, r800_ffff_tmp10);
          r800_ffff_tmp101 = simd_and(r800_ffff_tmp99, bytetest_8b_8b);
          struct_Pe.cc = simd_or(r800_ffff_tmp101, struct_Pe.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp57);
          bytetest_80 = simd_andc(r800_ffff_tmp30, r800_ffff_tmp5);
          bytetest_8d_8d = simd_and(r800_ffff_tmp30, tmp11);
          r800_ffff_tmp102 = simd_and(r800_ffff_tmp99, bytetest_8d_8d);
          struct_Pe.cc = simd_or(r800_ffff_tmp102, struct_Pe.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp57);
          bytetest_80 = simd_andc(r800_ffff_tmp30, r800_ffff_tmp5);
          bytetest_8f_8f = simd_and(r800_ffff_tmp30, r800_ffff_tmp54);
          r800_ffff_tmp103 = simd_and(r800_ffff_tmp99, bytetest_8f_8f);
          struct_Pe.cc = simd_or(r800_ffff_tmp103, struct_Pe.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp57);
          bytetest_80 = simd_andc(r800_ffff_tmp30, r800_ffff_tmp5);
          bytetest_91_91 = simd_and(r800_ffff_tmp20, r800_ffff_tmp19);
          r800_ffff_tmp104 = simd_and(r800_ffff_tmp99, bytetest_91_91);
          struct_Pe.cc = simd_or(r800_ffff_tmp104, struct_Pe.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp57);
          bytetest_80 = simd_andc(r800_ffff_tmp30, r800_ffff_tmp5);
          bytetest_95_95 = simd_and(r800_ffff_tmp20, r800_ffff_tmp59);
          r800_ffff_tmp105 = simd_and(r800_ffff_tmp99, bytetest_95_95);
          struct_Pe.cc = simd_or(r800_ffff_tmp105, struct_Pe.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp57);
          bytetest_80 = simd_andc(r800_ffff_tmp30, r800_ffff_tmp5);
          bytetest_97_97 = simd_and(r800_ffff_tmp20, r800_ffff_tmp64);
          r800_ffff_tmp106 = simd_and(r800_ffff_tmp99, bytetest_97_97);
          struct_Pe.cc = simd_or(r800_ffff_tmp106, struct_Pe.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp57);
          bytetest_80 = simd_andc(r800_ffff_tmp30, r800_ffff_tmp5);
          bytetest_99_99 = simd_and(r800_ffff_tmp20, tmp6);
          r800_ffff_tmp107 = simd_and(r800_ffff_tmp99, bytetest_99_99);
          struct_Pe.cc = simd_or(r800_ffff_tmp107, struct_Pe.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp57);
          bytetest_80 = simd_andc(r800_ffff_tmp30, r800_ffff_tmp5);
          bytetest_9b_9b = simd_and(r800_ffff_tmp20, r800_ffff_tmp10);
          r800_ffff_tmp108 = simd_and(r800_ffff_tmp99, bytetest_9b_9b);
          struct_Pe.cc = simd_or(r800_ffff_tmp108, struct_Pe.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp57);
          bytetest_80 = simd_andc(r800_ffff_tmp30, r800_ffff_tmp5);
          r800_ffff_tmp109 = simd_and(tmp10, basis_bits.bit_6);
          bytetest_9e_9f = simd_and(r800_ffff_tmp20, r800_ffff_tmp109);
          r800_ffff_tmp110 = simd_and(r800_ffff_tmp99, bytetest_9e_9f);
          struct_Pe.cc = simd_or(r800_ffff_tmp110, struct_Pe.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp54);
          bytetest_b4 = simd_and(r800_ffff_tmp7, r800_ffff_tmp70);
          bytetest_bf_bf = simd_and(r800_ffff_tmp7, r800_ffff_tmp54);
          r800_ffff_tmp111 = simd_and(r800_ffff_tmp12, bytetest_ef);
          carryQ.cq[18] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp111, carryQ.get_carry_in(18), r800_ffff_tmp112));
          r800_ffff_tmp113 = simd_and(r800_ffff_tmp112, bytetest_b4);
          carryQ.cq[19] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp113, carryQ.get_carry_in(19), r800_ffff_tmp114));
          r800_ffff_tmp115 = simd_and(r800_ffff_tmp114, bytetest_bf_bf);
          struct_Pe.cc = simd_or(r800_ffff_tmp115, struct_Pe.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp54);
          bytetest_b8 = simd_and(r800_ffff_tmp7, r800_ffff_tmp75);
          bytetest_98_98 = simd_and(r800_ffff_tmp20, r800_ffff_tmp75);
          r800_ffff_tmp116 = simd_and(r800_ffff_tmp112, bytetest_b8);
          carryQ.cq[20] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp116, carryQ.get_carry_in(20), r800_ffff_tmp117));
          r800_ffff_tmp118 = simd_and(r800_ffff_tmp117, bytetest_98_98);
          struct_Pe.cc = simd_or(r800_ffff_tmp118, struct_Pe.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp54);
          bytetest_b8 = simd_and(r800_ffff_tmp7, r800_ffff_tmp75);
          bytetest_b6_b6 = simd_and(r800_ffff_tmp7, r800_ffff_tmp32);
          r800_ffff_tmp119 = simd_and(r800_ffff_tmp117, bytetest_b6_b6);
          struct_Pe.cc = simd_or(r800_ffff_tmp119, struct_Pe.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp54);
          bytetest_b8 = simd_and(r800_ffff_tmp7, r800_ffff_tmp75);
          bytetest_b8_b8 = simd_and(r800_ffff_tmp7, r800_ffff_tmp75);
          r800_ffff_tmp120 = simd_and(r800_ffff_tmp117, bytetest_b8_b8);
          struct_Pe.cc = simd_or(r800_ffff_tmp120, struct_Pe.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp54);
          bytetest_b8 = simd_and(r800_ffff_tmp7, r800_ffff_tmp75);
          bytetest_ba_ba = simd_and(r800_ffff_tmp7, r800_ffff_tmp22);
          r800_ffff_tmp121 = simd_and(r800_ffff_tmp117, bytetest_ba_ba);
          struct_Pe.cc = simd_or(r800_ffff_tmp121, struct_Pe.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp54);
          bytetest_b8 = simd_and(r800_ffff_tmp7, r800_ffff_tmp75);
          bytetest_bc_bc = simd_and(r800_ffff_tmp7, r800_ffff_tmp8);
          r800_ffff_tmp122 = simd_and(r800_ffff_tmp117, bytetest_bc_bc);
          struct_Pe.cc = simd_or(r800_ffff_tmp122, struct_Pe.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp54);
          bytetest_b8 = simd_and(r800_ffff_tmp7, r800_ffff_tmp75);
          bytetest_be_be = simd_and(r800_ffff_tmp7, r800_ffff_tmp38);
          r800_ffff_tmp123 = simd_and(r800_ffff_tmp117, bytetest_be_be);
          struct_Pe.cc = simd_or(r800_ffff_tmp123, struct_Pe.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp54);
          bytetest_b9 = simd_and(r800_ffff_tmp7, tmp6);
          bytetest_80_80 = simd_andc(r800_ffff_tmp30, r800_ffff_tmp5);
          r800_ffff_tmp124 = simd_and(r800_ffff_tmp112, bytetest_b9);
          carryQ.cq[21] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp124, carryQ.get_carry_in(21), r800_ffff_tmp125));
          r800_ffff_tmp126 = simd_and(r800_ffff_tmp125, bytetest_80_80);
          struct_Pe.cc = simd_or(r800_ffff_tmp126, struct_Pe.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp54);
          bytetest_b9 = simd_and(r800_ffff_tmp7, tmp6);
          bytetest_82_82 = simd_and(r800_ffff_tmp30, r800_ffff_tmp28);
          r800_ffff_tmp127 = simd_and(r800_ffff_tmp125, bytetest_82_82);
          struct_Pe.cc = simd_or(r800_ffff_tmp127, struct_Pe.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp54);
          bytetest_b9 = simd_and(r800_ffff_tmp7, tmp6);
          bytetest_84_84 = simd_and(r800_ffff_tmp30, r800_ffff_tmp70);
          r800_ffff_tmp128 = simd_and(r800_ffff_tmp125, bytetest_84_84);
          struct_Pe.cc = simd_or(r800_ffff_tmp128, struct_Pe.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp54);
          bytetest_b9 = simd_and(r800_ffff_tmp7, tmp6);
          bytetest_88_88 = simd_and(r800_ffff_tmp30, r800_ffff_tmp75);
          r800_ffff_tmp129 = simd_and(r800_ffff_tmp125, bytetest_88_88);
          struct_Pe.cc = simd_or(r800_ffff_tmp129, struct_Pe.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp54);
          bytetest_b9 = simd_and(r800_ffff_tmp7, tmp6);
          bytetest_9a_9a = simd_and(r800_ffff_tmp20, r800_ffff_tmp22);
          r800_ffff_tmp130 = simd_and(r800_ffff_tmp125, bytetest_9a_9a);
          struct_Pe.cc = simd_or(r800_ffff_tmp130, struct_Pe.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp54);
          bytetest_b9 = simd_and(r800_ffff_tmp7, tmp6);
          bytetest_9c_9c = simd_and(r800_ffff_tmp20, r800_ffff_tmp8);
          r800_ffff_tmp131 = simd_and(r800_ffff_tmp125, bytetest_9c_9c);
          struct_Pe.cc = simd_or(r800_ffff_tmp131, struct_Pe.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp54);
          bytetest_b9 = simd_and(r800_ffff_tmp7, tmp6);
          bytetest_9e_9e = simd_and(r800_ffff_tmp20, r800_ffff_tmp38);
          r800_ffff_tmp132 = simd_and(r800_ffff_tmp125, bytetest_9e_9e);
          struct_Pe.cc = simd_or(r800_ffff_tmp132, struct_Pe.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp54);
          bytetest_bc = simd_and(r800_ffff_tmp7, r800_ffff_tmp8);
          bytetest_89_89 = simd_and(r800_ffff_tmp30, tmp6);
          r800_ffff_tmp133 = simd_and(r800_ffff_tmp112, bytetest_bc);
          carryQ.cq[22] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp133, carryQ.get_carry_in(22), r800_ffff_tmp134));
          r800_ffff_tmp135 = simd_and(r800_ffff_tmp134, bytetest_89_89);
          struct_Pe.cc = simd_or(r800_ffff_tmp135, struct_Pe.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp54);
          bytetest_bc = simd_and(r800_ffff_tmp7, r800_ffff_tmp8);
          bytetest_bd_bd = simd_and(r800_ffff_tmp7, tmp11);
          r800_ffff_tmp136 = simd_and(r800_ffff_tmp134, bytetest_bd_bd);
          struct_Pe.cc = simd_or(r800_ffff_tmp136, struct_Pe.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp54);
          bytetest_bd = simd_and(r800_ffff_tmp7, tmp11);
          bytetest_9d_9d = simd_and(r800_ffff_tmp20, tmp11);
          r800_ffff_tmp137 = simd_and(r800_ffff_tmp112, bytetest_bd);
          carryQ.cq[23] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp137, carryQ.get_carry_in(23), r800_ffff_tmp138));
          r800_ffff_tmp139 = simd_and(r800_ffff_tmp138, bytetest_9d_9d);
          struct_Pe.cc = simd_or(r800_ffff_tmp139, struct_Pe.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp54);
          bytetest_bd = simd_and(r800_ffff_tmp7, tmp11);
          bytetest_a0_a0 = simd_andc(r800_ffff_tmp47, r800_ffff_tmp5);
          r800_ffff_tmp140 = simd_and(r800_ffff_tmp138, bytetest_a0_a0);
          struct_Pe.cc = simd_or(r800_ffff_tmp140, struct_Pe.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp54);
          bytetest_bd = simd_and(r800_ffff_tmp7, tmp11);
          bytetest_a3_a3 = simd_and(r800_ffff_tmp47, r800_ffff_tmp57);
          r800_ffff_tmp141 = simd_and(r800_ffff_tmp138, bytetest_a3_a3);
          struct_Pe.cc = simd_or(r800_ffff_tmp141, struct_Pe.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(2, 22);
        }
        carryQ.CarryQ_Adjust(24);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Pe & struct_Pe, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_29_29, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, bytetest_5d_5d, tmp12, tmp13, bytetest_7d_7d, tmp14;
		BitBlock tmp15, tmp16, tmp17, tmp18, bytetest_e1_ef, tmp19, tmp20, bytetest_e0;
		BitBlock tmp21, bytetest_a0_bf, tmp22, tmp23, tmp24, tmp25, tmp26, tmp27;
		BitBlock r800_ffff_tmp1, r800_ffff_tmp2, r800_ffff_tmp3, r800_ffff_tmp4;
		BitBlock r800_ffff_tmp5, r800_ffff_tmp6, r800_ffff_tmp7, r800_ffff_tmp8;
		BitBlock bytetest_bc, r800_ffff_tmp9, r800_ffff_tmp10, bytetest_bb_bb;
		BitBlock r800_ffff_tmp11, r800_ffff_tmp12, r800_ffff_tmp13, r800_ffff_tmp14;
		BitBlock r800_ffff_tmp15, r800_ffff_tmp16, r800_ffff_tmp17, bytetest_bd_bd;
		BitBlock r800_ffff_tmp18, r800_ffff_tmp19, bytetest_e1, r800_ffff_tmp20;
		BitBlock r800_ffff_tmp21, r800_ffff_tmp22, bytetest_9a, bytetest_9c_9c;
		BitBlock r800_ffff_tmp23, r800_ffff_tmp24, r800_ffff_tmp25, r800_ffff_tmp26;
		BitBlock r800_ffff_tmp27, r800_ffff_tmp28, bytetest_e2, r800_ffff_tmp29;
		BitBlock r800_ffff_tmp30, bytetest_81, r800_ffff_tmp31, r800_ffff_tmp32;
		BitBlock bytetest_86_86, r800_ffff_tmp33, r800_ffff_tmp34, r800_ffff_tmp35;
		BitBlock r800_ffff_tmp36, r800_ffff_tmp37, r800_ffff_tmp38, bytetest_be_be;
		BitBlock r800_ffff_tmp39, bytetest_82, bytetest_8e_8e, r800_ffff_tmp40;
		BitBlock r800_ffff_tmp41, r800_ffff_tmp42, bytetest_8c, bytetest_89_89;
		BitBlock r800_ffff_tmp43, r800_ffff_tmp44, r800_ffff_tmp45, bytetest_8b_8b;
		BitBlock r800_ffff_tmp46, r800_ffff_tmp47, bytetest_aa_aa, r800_ffff_tmp48;
		BitBlock bytetest_9d, bytetest_a9_a9, r800_ffff_tmp49, r800_ffff_tmp50;
		BitBlock r800_ffff_tmp51, bytetest_ab_ab, r800_ffff_tmp52, bytetest_ad_ad;
		BitBlock r800_ffff_tmp53, r800_ffff_tmp54, bytetest_af_af, r800_ffff_tmp55;
		BitBlock bytetest_b1_b1, r800_ffff_tmp56, r800_ffff_tmp57, bytetest_b3_b3;
		BitBlock r800_ffff_tmp58, r800_ffff_tmp59, bytetest_b5_b5, r800_ffff_tmp60;
		BitBlock bytetest_9f, r800_ffff_tmp61, r800_ffff_tmp62, r800_ffff_tmp63;
		BitBlock r800_ffff_tmp64, bytetest_a7_a7, r800_ffff_tmp65, r800_ffff_tmp66;
		BitBlock r800_ffff_tmp67, r800_ffff_tmp68, r800_ffff_tmp69, bytetest_a6;
		BitBlock r800_ffff_tmp70, bytetest_84_84, r800_ffff_tmp71, r800_ffff_tmp72;
		BitBlock r800_ffff_tmp73, r800_ffff_tmp74, r800_ffff_tmp75, bytetest_88_88;
		BitBlock r800_ffff_tmp76, bytetest_8a_8a, r800_ffff_tmp77, bytetest_8c_8c;
		BitBlock r800_ffff_tmp78, r800_ffff_tmp79, bytetest_90_90, r800_ffff_tmp80;
		BitBlock bytetest_92_92, r800_ffff_tmp81, bytetest_94_94, r800_ffff_tmp82;
		BitBlock bytetest_96_96, r800_ffff_tmp83, bytetest_98_98, r800_ffff_tmp84;
		BitBlock bytetest_a7, bytetest_99_99, r800_ffff_tmp85, r800_ffff_tmp86;
		BitBlock r800_ffff_tmp87, bytetest_9b_9b, r800_ffff_tmp88, r800_ffff_tmp89;
		BitBlock bytetest_b8, bytetest_a3_a3, r800_ffff_tmp90, r800_ffff_tmp91;
		BitBlock r800_ffff_tmp92, bytetest_a5_a5, r800_ffff_tmp93, r800_ffff_tmp94;
		BitBlock r800_ffff_tmp95, bytetest_e3, bytetest_80, r800_ffff_tmp96;
		BitBlock r800_ffff_tmp97, r800_ffff_tmp98, r800_ffff_tmp99, r800_ffff_tmp100;
		BitBlock r800_ffff_tmp101, bytetest_8d_8d, r800_ffff_tmp102, bytetest_8f_8f;
		BitBlock r800_ffff_tmp103, bytetest_91_91, r800_ffff_tmp104, bytetest_95_95;
		BitBlock r800_ffff_tmp105, bytetest_97_97, r800_ffff_tmp106, r800_ffff_tmp107;
		BitBlock r800_ffff_tmp108, r800_ffff_tmp109, bytetest_9e_9f, r800_ffff_tmp110;
		BitBlock bytetest_ef, bytetest_b4, bytetest_bf_bf, r800_ffff_tmp111;
		BitBlock r800_ffff_tmp112, r800_ffff_tmp113, r800_ffff_tmp114;
		BitBlock r800_ffff_tmp115, r800_ffff_tmp116, r800_ffff_tmp117;
		BitBlock r800_ffff_tmp118, bytetest_b6_b6, r800_ffff_tmp119, bytetest_b8_b8;
		BitBlock r800_ffff_tmp120, bytetest_ba_ba, r800_ffff_tmp121, bytetest_bc_bc;
		BitBlock r800_ffff_tmp122, r800_ffff_tmp123, bytetest_b9, bytetest_80_80;
		BitBlock r800_ffff_tmp124, r800_ffff_tmp125, r800_ffff_tmp126, bytetest_82_82;
		BitBlock r800_ffff_tmp127, r800_ffff_tmp128, r800_ffff_tmp129, bytetest_9a_9a;
		BitBlock r800_ffff_tmp130, r800_ffff_tmp131, bytetest_9e_9e, r800_ffff_tmp132;
		BitBlock r800_ffff_tmp133, r800_ffff_tmp134, r800_ffff_tmp135;
		BitBlock r800_ffff_tmp136, bytetest_bd, bytetest_9d_9d, r800_ffff_tmp137;
		BitBlock r800_ffff_tmp138, r800_ffff_tmp139, bytetest_a0_a0, r800_ffff_tmp140;
		BitBlock r800_ffff_tmp141;




        struct_Pe.cc = simd<1>::constant<0>();
        tmp1 = simd_or(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp2, tmp1);
        tmp4 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp6 = simd_and(tmp4, tmp5);
        bytetest_29_29 = simd_and(tmp3, tmp6);
        struct_Pe.cc = simd_or(bytetest_29_29, struct_Pe.cc);
        tmp7 = simd_andc(basis_bits.bit_1, basis_bits.bit_0);
        tmp8 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp11 = simd_and(tmp10, tmp5);
        bytetest_5d_5d = simd_and(tmp9, tmp11);
        struct_Pe.cc = simd_or(bytetest_5d_5d, struct_Pe.cc);
        tmp12 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp13 = simd_and(tmp7, tmp12);
        bytetest_7d_7d = simd_and(tmp13, tmp11);
        struct_Pe.cc = simd_or(bytetest_7d_7d, struct_Pe.cc);
        tmp14 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp15 = simd_and(tmp14, tmp2);
        tmp16 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp17 = simd_or(basis_bits.bit_5, tmp16);
        tmp18 = simd_or(basis_bits.bit_4, tmp17);
        bytetest_e1_ef = simd_and(tmp15, tmp18);
        tmp19 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp20 = simd_or(tmp19, tmp16);
        bytetest_e0 = simd_andc(tmp15, tmp20);
        tmp21 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_a0_bf = simd_and(tmp21, basis_bits.bit_2);
        tmp22 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp22, carryQ.get_carry_in(0), tmp23));
        tmp24 = simd_and(tmp23, bytetest_e0);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp24, carryQ.get_carry_in(1), tmp25));
        tmp26 = simd_and(tmp25, bytetest_a0_bf);
        tmp27 = simd_or(tmp26, bytetest_e1_ef);
        if ((bitblock::any(tmp27) || carryQ.CarryTest(2, 22))) {
          r800_ffff_tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp2 = simd_and(r800_ffff_tmp1, tmp2);
          r800_ffff_tmp3 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
          r800_ffff_tmp4 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp5 = simd_or(r800_ffff_tmp3, r800_ffff_tmp4);
          bytetest_e0 = simd_andc(r800_ffff_tmp2, r800_ffff_tmp5);
          r800_ffff_tmp6 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp7 = simd_and(r800_ffff_tmp6, tmp12);
          r800_ffff_tmp8 = simd_andc(tmp10, r800_ffff_tmp4);
          bytetest_bc = simd_and(r800_ffff_tmp7, r800_ffff_tmp8);
          r800_ffff_tmp9 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp10 = simd_and(tmp4, r800_ffff_tmp9);
          bytetest_bb_bb = simd_and(r800_ffff_tmp7, r800_ffff_tmp10);
          r800_ffff_tmp11 = simd<1>::constant<1>();
          carryQ.cq[2] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp11, carryQ.get_carry_in(2), r800_ffff_tmp12));
          r800_ffff_tmp13 = simd_and(r800_ffff_tmp12, bytetest_e0);
          carryQ.cq[3] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp13, carryQ.get_carry_in(3), r800_ffff_tmp14));
          r800_ffff_tmp15 = simd_and(r800_ffff_tmp14, bytetest_bc);
          carryQ.cq[4] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp15, carryQ.get_carry_in(4), r800_ffff_tmp16));
          r800_ffff_tmp17 = simd_and(r800_ffff_tmp16, bytetest_bb_bb);
          struct_Pe.cc = simd_or(r800_ffff_tmp17, struct_Pe.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp2, r800_ffff_tmp5);
          bytetest_bc = simd_and(r800_ffff_tmp7, r800_ffff_tmp8);
          bytetest_bd_bd = simd_and(r800_ffff_tmp7, tmp11);
          r800_ffff_tmp18 = simd_and(r800_ffff_tmp16, bytetest_bd_bd);
          struct_Pe.cc = simd_or(r800_ffff_tmp18, struct_Pe.cc);
          r800_ffff_tmp19 = simd_andc(tmp5, r800_ffff_tmp3);
          bytetest_e1 = simd_and(r800_ffff_tmp2, r800_ffff_tmp19);
          r800_ffff_tmp20 = simd_and(r800_ffff_tmp6, tmp8);
          r800_ffff_tmp21 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp22 = simd_and(tmp4, r800_ffff_tmp21);
          bytetest_9a = simd_and(r800_ffff_tmp20, r800_ffff_tmp22);
          bytetest_9c_9c = simd_and(r800_ffff_tmp20, r800_ffff_tmp8);
          r800_ffff_tmp23 = simd_and(r800_ffff_tmp12, bytetest_e1);
          carryQ.cq[5] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp23, carryQ.get_carry_in(5), r800_ffff_tmp24));
          r800_ffff_tmp25 = simd_and(r800_ffff_tmp24, bytetest_9a);
          carryQ.cq[6] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp25, carryQ.get_carry_in(6), r800_ffff_tmp26));
          r800_ffff_tmp27 = simd_and(r800_ffff_tmp26, bytetest_9c_9c);
          struct_Pe.cc = simd_or(r800_ffff_tmp27, struct_Pe.cc);
          r800_ffff_tmp28 = simd_andc(r800_ffff_tmp21, r800_ffff_tmp3);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          r800_ffff_tmp29 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp30 = simd_andc(r800_ffff_tmp6, r800_ffff_tmp29);
          bytetest_81 = simd_and(r800_ffff_tmp30, r800_ffff_tmp19);
          r800_ffff_tmp31 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
          r800_ffff_tmp32 = simd_and(r800_ffff_tmp31, r800_ffff_tmp21);
          bytetest_86_86 = simd_and(r800_ffff_tmp30, r800_ffff_tmp32);
          r800_ffff_tmp33 = simd_and(r800_ffff_tmp12, bytetest_e2);
          carryQ.cq[7] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp33, carryQ.get_carry_in(7), r800_ffff_tmp34));
          r800_ffff_tmp35 = simd_and(r800_ffff_tmp34, bytetest_81);
          carryQ.cq[8] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp35, carryQ.get_carry_in(8), r800_ffff_tmp36));
          r800_ffff_tmp37 = simd_and(r800_ffff_tmp36, bytetest_86_86);
          struct_Pe.cc = simd_or(r800_ffff_tmp37, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_81 = simd_and(r800_ffff_tmp30, r800_ffff_tmp19);
          r800_ffff_tmp38 = simd_and(tmp10, r800_ffff_tmp21);
          bytetest_be_be = simd_and(r800_ffff_tmp7, r800_ffff_tmp38);
          r800_ffff_tmp39 = simd_and(r800_ffff_tmp36, bytetest_be_be);
          struct_Pe.cc = simd_or(r800_ffff_tmp39, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_82 = simd_and(r800_ffff_tmp30, r800_ffff_tmp28);
          bytetest_8e_8e = simd_and(r800_ffff_tmp30, r800_ffff_tmp38);
          r800_ffff_tmp40 = simd_and(r800_ffff_tmp34, bytetest_82);
          carryQ.cq[9] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp40, carryQ.get_carry_in(9), r800_ffff_tmp41));
          r800_ffff_tmp42 = simd_and(r800_ffff_tmp41, bytetest_8e_8e);
          struct_Pe.cc = simd_or(r800_ffff_tmp42, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_8c = simd_and(r800_ffff_tmp30, r800_ffff_tmp8);
          bytetest_89_89 = simd_and(r800_ffff_tmp30, tmp6);
          r800_ffff_tmp43 = simd_and(r800_ffff_tmp34, bytetest_8c);
          carryQ.cq[10] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp43, carryQ.get_carry_in(10), r800_ffff_tmp44));
          r800_ffff_tmp45 = simd_and(r800_ffff_tmp44, bytetest_89_89);
          struct_Pe.cc = simd_or(r800_ffff_tmp45, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_8c = simd_and(r800_ffff_tmp30, r800_ffff_tmp8);
          bytetest_8b_8b = simd_and(r800_ffff_tmp30, r800_ffff_tmp10);
          r800_ffff_tmp46 = simd_and(r800_ffff_tmp44, bytetest_8b_8b);
          struct_Pe.cc = simd_or(r800_ffff_tmp46, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_8c = simd_and(r800_ffff_tmp30, r800_ffff_tmp8);
          r800_ffff_tmp47 = simd_and(r800_ffff_tmp6, tmp2);
          bytetest_aa_aa = simd_and(r800_ffff_tmp47, r800_ffff_tmp22);
          r800_ffff_tmp48 = simd_and(r800_ffff_tmp44, bytetest_aa_aa);
          struct_Pe.cc = simd_or(r800_ffff_tmp48, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_9d = simd_and(r800_ffff_tmp20, tmp11);
          bytetest_a9_a9 = simd_and(r800_ffff_tmp47, tmp6);
          r800_ffff_tmp49 = simd_and(r800_ffff_tmp34, bytetest_9d);
          carryQ.cq[11] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp49, carryQ.get_carry_in(11), r800_ffff_tmp50));
          r800_ffff_tmp51 = simd_and(r800_ffff_tmp50, bytetest_a9_a9);
          struct_Pe.cc = simd_or(r800_ffff_tmp51, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_9d = simd_and(r800_ffff_tmp20, tmp11);
          bytetest_ab_ab = simd_and(r800_ffff_tmp47, r800_ffff_tmp10);
          r800_ffff_tmp52 = simd_and(r800_ffff_tmp50, bytetest_ab_ab);
          struct_Pe.cc = simd_or(r800_ffff_tmp52, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_9d = simd_and(r800_ffff_tmp20, tmp11);
          bytetest_ad_ad = simd_and(r800_ffff_tmp47, tmp11);
          r800_ffff_tmp53 = simd_and(r800_ffff_tmp50, bytetest_ad_ad);
          struct_Pe.cc = simd_or(r800_ffff_tmp53, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_9d = simd_and(r800_ffff_tmp20, tmp11);
          r800_ffff_tmp54 = simd_and(tmp10, r800_ffff_tmp9);
          bytetest_af_af = simd_and(r800_ffff_tmp47, r800_ffff_tmp54);
          r800_ffff_tmp55 = simd_and(r800_ffff_tmp50, bytetest_af_af);
          struct_Pe.cc = simd_or(r800_ffff_tmp55, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_9d = simd_and(r800_ffff_tmp20, tmp11);
          bytetest_b1_b1 = simd_and(r800_ffff_tmp7, r800_ffff_tmp19);
          r800_ffff_tmp56 = simd_and(r800_ffff_tmp50, bytetest_b1_b1);
          struct_Pe.cc = simd_or(r800_ffff_tmp56, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_9d = simd_and(r800_ffff_tmp20, tmp11);
          r800_ffff_tmp57 = simd_andc(r800_ffff_tmp9, r800_ffff_tmp3);
          bytetest_b3_b3 = simd_and(r800_ffff_tmp7, r800_ffff_tmp57);
          r800_ffff_tmp58 = simd_and(r800_ffff_tmp50, bytetest_b3_b3);
          struct_Pe.cc = simd_or(r800_ffff_tmp58, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_9d = simd_and(r800_ffff_tmp20, tmp11);
          r800_ffff_tmp59 = simd_and(r800_ffff_tmp31, tmp5);
          bytetest_b5_b5 = simd_and(r800_ffff_tmp7, r800_ffff_tmp59);
          r800_ffff_tmp60 = simd_and(r800_ffff_tmp50, bytetest_b5_b5);
          struct_Pe.cc = simd_or(r800_ffff_tmp60, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_9f = simd_and(r800_ffff_tmp20, r800_ffff_tmp54);
          bytetest_86_86 = simd_and(r800_ffff_tmp30, r800_ffff_tmp32);
          r800_ffff_tmp61 = simd_and(r800_ffff_tmp34, bytetest_9f);
          carryQ.cq[12] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp61, carryQ.get_carry_in(12), r800_ffff_tmp62));
          r800_ffff_tmp63 = simd_and(r800_ffff_tmp62, bytetest_86_86);
          struct_Pe.cc = simd_or(r800_ffff_tmp63, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_9f = simd_and(r800_ffff_tmp20, r800_ffff_tmp54);
          r800_ffff_tmp64 = simd_and(r800_ffff_tmp31, r800_ffff_tmp9);
          bytetest_a7_a7 = simd_and(r800_ffff_tmp47, r800_ffff_tmp64);
          r800_ffff_tmp65 = simd_and(r800_ffff_tmp62, bytetest_a7_a7);
          struct_Pe.cc = simd_or(r800_ffff_tmp65, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_9f = simd_and(r800_ffff_tmp20, r800_ffff_tmp54);
          bytetest_a9_a9 = simd_and(r800_ffff_tmp47, tmp6);
          r800_ffff_tmp66 = simd_and(r800_ffff_tmp62, bytetest_a9_a9);
          struct_Pe.cc = simd_or(r800_ffff_tmp66, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_9f = simd_and(r800_ffff_tmp20, r800_ffff_tmp54);
          bytetest_ab_ab = simd_and(r800_ffff_tmp47, r800_ffff_tmp10);
          r800_ffff_tmp67 = simd_and(r800_ffff_tmp62, bytetest_ab_ab);
          struct_Pe.cc = simd_or(r800_ffff_tmp67, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_9f = simd_and(r800_ffff_tmp20, r800_ffff_tmp54);
          bytetest_ad_ad = simd_and(r800_ffff_tmp47, tmp11);
          r800_ffff_tmp68 = simd_and(r800_ffff_tmp62, bytetest_ad_ad);
          struct_Pe.cc = simd_or(r800_ffff_tmp68, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_9f = simd_and(r800_ffff_tmp20, r800_ffff_tmp54);
          bytetest_af_af = simd_and(r800_ffff_tmp47, r800_ffff_tmp54);
          r800_ffff_tmp69 = simd_and(r800_ffff_tmp62, bytetest_af_af);
          struct_Pe.cc = simd_or(r800_ffff_tmp69, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_a6 = simd_and(r800_ffff_tmp47, r800_ffff_tmp32);
          r800_ffff_tmp70 = simd_andc(r800_ffff_tmp31, r800_ffff_tmp4);
          bytetest_84_84 = simd_and(r800_ffff_tmp30, r800_ffff_tmp70);
          r800_ffff_tmp71 = simd_and(r800_ffff_tmp34, bytetest_a6);
          carryQ.cq[13] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp71, carryQ.get_carry_in(13), r800_ffff_tmp72));
          r800_ffff_tmp73 = simd_and(r800_ffff_tmp72, bytetest_84_84);
          struct_Pe.cc = simd_or(r800_ffff_tmp73, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_a6 = simd_and(r800_ffff_tmp47, r800_ffff_tmp32);
          bytetest_86_86 = simd_and(r800_ffff_tmp30, r800_ffff_tmp32);
          r800_ffff_tmp74 = simd_and(r800_ffff_tmp72, bytetest_86_86);
          struct_Pe.cc = simd_or(r800_ffff_tmp74, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_a6 = simd_and(r800_ffff_tmp47, r800_ffff_tmp32);
          r800_ffff_tmp75 = simd_andc(tmp4, r800_ffff_tmp4);
          bytetest_88_88 = simd_and(r800_ffff_tmp30, r800_ffff_tmp75);
          r800_ffff_tmp76 = simd_and(r800_ffff_tmp72, bytetest_88_88);
          struct_Pe.cc = simd_or(r800_ffff_tmp76, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_a6 = simd_and(r800_ffff_tmp47, r800_ffff_tmp32);
          bytetest_8a_8a = simd_and(r800_ffff_tmp30, r800_ffff_tmp22);
          r800_ffff_tmp77 = simd_and(r800_ffff_tmp72, bytetest_8a_8a);
          struct_Pe.cc = simd_or(r800_ffff_tmp77, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_a6 = simd_and(r800_ffff_tmp47, r800_ffff_tmp32);
          bytetest_8c_8c = simd_and(r800_ffff_tmp30, r800_ffff_tmp8);
          r800_ffff_tmp78 = simd_and(r800_ffff_tmp72, bytetest_8c_8c);
          struct_Pe.cc = simd_or(r800_ffff_tmp78, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_a6 = simd_and(r800_ffff_tmp47, r800_ffff_tmp32);
          bytetest_8e_8e = simd_and(r800_ffff_tmp30, r800_ffff_tmp38);
          r800_ffff_tmp79 = simd_and(r800_ffff_tmp72, bytetest_8e_8e);
          struct_Pe.cc = simd_or(r800_ffff_tmp79, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_a6 = simd_and(r800_ffff_tmp47, r800_ffff_tmp32);
          bytetest_90_90 = simd_andc(r800_ffff_tmp20, r800_ffff_tmp5);
          r800_ffff_tmp80 = simd_and(r800_ffff_tmp72, bytetest_90_90);
          struct_Pe.cc = simd_or(r800_ffff_tmp80, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_a6 = simd_and(r800_ffff_tmp47, r800_ffff_tmp32);
          bytetest_92_92 = simd_and(r800_ffff_tmp20, r800_ffff_tmp28);
          r800_ffff_tmp81 = simd_and(r800_ffff_tmp72, bytetest_92_92);
          struct_Pe.cc = simd_or(r800_ffff_tmp81, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_a6 = simd_and(r800_ffff_tmp47, r800_ffff_tmp32);
          bytetest_94_94 = simd_and(r800_ffff_tmp20, r800_ffff_tmp70);
          r800_ffff_tmp82 = simd_and(r800_ffff_tmp72, bytetest_94_94);
          struct_Pe.cc = simd_or(r800_ffff_tmp82, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_a6 = simd_and(r800_ffff_tmp47, r800_ffff_tmp32);
          bytetest_96_96 = simd_and(r800_ffff_tmp20, r800_ffff_tmp32);
          r800_ffff_tmp83 = simd_and(r800_ffff_tmp72, bytetest_96_96);
          struct_Pe.cc = simd_or(r800_ffff_tmp83, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_a6 = simd_and(r800_ffff_tmp47, r800_ffff_tmp32);
          bytetest_98_98 = simd_and(r800_ffff_tmp20, r800_ffff_tmp75);
          r800_ffff_tmp84 = simd_and(r800_ffff_tmp72, bytetest_98_98);
          struct_Pe.cc = simd_or(r800_ffff_tmp84, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_a7 = simd_and(r800_ffff_tmp47, r800_ffff_tmp64);
          bytetest_99_99 = simd_and(r800_ffff_tmp20, tmp6);
          r800_ffff_tmp85 = simd_and(r800_ffff_tmp34, bytetest_a7);
          carryQ.cq[14] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp85, carryQ.get_carry_in(14), r800_ffff_tmp86));
          r800_ffff_tmp87 = simd_and(r800_ffff_tmp86, bytetest_99_99);
          struct_Pe.cc = simd_or(r800_ffff_tmp87, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_a7 = simd_and(r800_ffff_tmp47, r800_ffff_tmp64);
          bytetest_9b_9b = simd_and(r800_ffff_tmp20, r800_ffff_tmp10);
          r800_ffff_tmp88 = simd_and(r800_ffff_tmp86, bytetest_9b_9b);
          struct_Pe.cc = simd_or(r800_ffff_tmp88, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_a7 = simd_and(r800_ffff_tmp47, r800_ffff_tmp64);
          bytetest_bd_bd = simd_and(r800_ffff_tmp7, tmp11);
          r800_ffff_tmp89 = simd_and(r800_ffff_tmp86, bytetest_bd_bd);
          struct_Pe.cc = simd_or(r800_ffff_tmp89, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_b8 = simd_and(r800_ffff_tmp7, r800_ffff_tmp75);
          bytetest_a3_a3 = simd_and(r800_ffff_tmp47, r800_ffff_tmp57);
          r800_ffff_tmp90 = simd_and(r800_ffff_tmp34, bytetest_b8);
          carryQ.cq[15] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp90, carryQ.get_carry_in(15), r800_ffff_tmp91));
          r800_ffff_tmp92 = simd_and(r800_ffff_tmp91, bytetest_a3_a3);
          struct_Pe.cc = simd_or(r800_ffff_tmp92, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_b8 = simd_and(r800_ffff_tmp7, r800_ffff_tmp75);
          bytetest_a5_a5 = simd_and(r800_ffff_tmp47, r800_ffff_tmp59);
          r800_ffff_tmp93 = simd_and(r800_ffff_tmp91, bytetest_a5_a5);
          struct_Pe.cc = simd_or(r800_ffff_tmp93, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_b8 = simd_and(r800_ffff_tmp7, r800_ffff_tmp75);
          bytetest_a7_a7 = simd_and(r800_ffff_tmp47, r800_ffff_tmp64);
          r800_ffff_tmp94 = simd_and(r800_ffff_tmp91, bytetest_a7_a7);
          struct_Pe.cc = simd_or(r800_ffff_tmp94, struct_Pe.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp28);
          bytetest_b8 = simd_and(r800_ffff_tmp7, r800_ffff_tmp75);
          bytetest_a9_a9 = simd_and(r800_ffff_tmp47, tmp6);
          r800_ffff_tmp95 = simd_and(r800_ffff_tmp91, bytetest_a9_a9);
          struct_Pe.cc = simd_or(r800_ffff_tmp95, struct_Pe.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp57);
          bytetest_80 = simd_andc(r800_ffff_tmp30, r800_ffff_tmp5);
          bytetest_89_89 = simd_and(r800_ffff_tmp30, tmp6);
          r800_ffff_tmp96 = simd_and(r800_ffff_tmp12, bytetest_e3);
          carryQ.cq[16] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp96, carryQ.get_carry_in(16), r800_ffff_tmp97));
          r800_ffff_tmp98 = simd_and(r800_ffff_tmp97, bytetest_80);
          carryQ.cq[17] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp98, carryQ.get_carry_in(17), r800_ffff_tmp99));
          r800_ffff_tmp100 = simd_and(r800_ffff_tmp99, bytetest_89_89);
          struct_Pe.cc = simd_or(r800_ffff_tmp100, struct_Pe.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp57);
          bytetest_80 = simd_andc(r800_ffff_tmp30, r800_ffff_tmp5);
          bytetest_8b_8b = simd_and(r800_ffff_tmp30, r800_ffff_tmp10);
          r800_ffff_tmp101 = simd_and(r800_ffff_tmp99, bytetest_8b_8b);
          struct_Pe.cc = simd_or(r800_ffff_tmp101, struct_Pe.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp57);
          bytetest_80 = simd_andc(r800_ffff_tmp30, r800_ffff_tmp5);
          bytetest_8d_8d = simd_and(r800_ffff_tmp30, tmp11);
          r800_ffff_tmp102 = simd_and(r800_ffff_tmp99, bytetest_8d_8d);
          struct_Pe.cc = simd_or(r800_ffff_tmp102, struct_Pe.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp57);
          bytetest_80 = simd_andc(r800_ffff_tmp30, r800_ffff_tmp5);
          bytetest_8f_8f = simd_and(r800_ffff_tmp30, r800_ffff_tmp54);
          r800_ffff_tmp103 = simd_and(r800_ffff_tmp99, bytetest_8f_8f);
          struct_Pe.cc = simd_or(r800_ffff_tmp103, struct_Pe.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp57);
          bytetest_80 = simd_andc(r800_ffff_tmp30, r800_ffff_tmp5);
          bytetest_91_91 = simd_and(r800_ffff_tmp20, r800_ffff_tmp19);
          r800_ffff_tmp104 = simd_and(r800_ffff_tmp99, bytetest_91_91);
          struct_Pe.cc = simd_or(r800_ffff_tmp104, struct_Pe.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp57);
          bytetest_80 = simd_andc(r800_ffff_tmp30, r800_ffff_tmp5);
          bytetest_95_95 = simd_and(r800_ffff_tmp20, r800_ffff_tmp59);
          r800_ffff_tmp105 = simd_and(r800_ffff_tmp99, bytetest_95_95);
          struct_Pe.cc = simd_or(r800_ffff_tmp105, struct_Pe.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp57);
          bytetest_80 = simd_andc(r800_ffff_tmp30, r800_ffff_tmp5);
          bytetest_97_97 = simd_and(r800_ffff_tmp20, r800_ffff_tmp64);
          r800_ffff_tmp106 = simd_and(r800_ffff_tmp99, bytetest_97_97);
          struct_Pe.cc = simd_or(r800_ffff_tmp106, struct_Pe.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp57);
          bytetest_80 = simd_andc(r800_ffff_tmp30, r800_ffff_tmp5);
          bytetest_99_99 = simd_and(r800_ffff_tmp20, tmp6);
          r800_ffff_tmp107 = simd_and(r800_ffff_tmp99, bytetest_99_99);
          struct_Pe.cc = simd_or(r800_ffff_tmp107, struct_Pe.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp57);
          bytetest_80 = simd_andc(r800_ffff_tmp30, r800_ffff_tmp5);
          bytetest_9b_9b = simd_and(r800_ffff_tmp20, r800_ffff_tmp10);
          r800_ffff_tmp108 = simd_and(r800_ffff_tmp99, bytetest_9b_9b);
          struct_Pe.cc = simd_or(r800_ffff_tmp108, struct_Pe.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp57);
          bytetest_80 = simd_andc(r800_ffff_tmp30, r800_ffff_tmp5);
          r800_ffff_tmp109 = simd_and(tmp10, basis_bits.bit_6);
          bytetest_9e_9f = simd_and(r800_ffff_tmp20, r800_ffff_tmp109);
          r800_ffff_tmp110 = simd_and(r800_ffff_tmp99, bytetest_9e_9f);
          struct_Pe.cc = simd_or(r800_ffff_tmp110, struct_Pe.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp54);
          bytetest_b4 = simd_and(r800_ffff_tmp7, r800_ffff_tmp70);
          bytetest_bf_bf = simd_and(r800_ffff_tmp7, r800_ffff_tmp54);
          r800_ffff_tmp111 = simd_and(r800_ffff_tmp12, bytetest_ef);
          carryQ.cq[18] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp111, carryQ.get_carry_in(18), r800_ffff_tmp112));
          r800_ffff_tmp113 = simd_and(r800_ffff_tmp112, bytetest_b4);
          carryQ.cq[19] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp113, carryQ.get_carry_in(19), r800_ffff_tmp114));
          r800_ffff_tmp115 = simd_and(r800_ffff_tmp114, bytetest_bf_bf);
          struct_Pe.cc = simd_or(r800_ffff_tmp115, struct_Pe.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp54);
          bytetest_b8 = simd_and(r800_ffff_tmp7, r800_ffff_tmp75);
          bytetest_98_98 = simd_and(r800_ffff_tmp20, r800_ffff_tmp75);
          r800_ffff_tmp116 = simd_and(r800_ffff_tmp112, bytetest_b8);
          carryQ.cq[20] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp116, carryQ.get_carry_in(20), r800_ffff_tmp117));
          r800_ffff_tmp118 = simd_and(r800_ffff_tmp117, bytetest_98_98);
          struct_Pe.cc = simd_or(r800_ffff_tmp118, struct_Pe.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp54);
          bytetest_b8 = simd_and(r800_ffff_tmp7, r800_ffff_tmp75);
          bytetest_b6_b6 = simd_and(r800_ffff_tmp7, r800_ffff_tmp32);
          r800_ffff_tmp119 = simd_and(r800_ffff_tmp117, bytetest_b6_b6);
          struct_Pe.cc = simd_or(r800_ffff_tmp119, struct_Pe.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp54);
          bytetest_b8 = simd_and(r800_ffff_tmp7, r800_ffff_tmp75);
          bytetest_b8_b8 = simd_and(r800_ffff_tmp7, r800_ffff_tmp75);
          r800_ffff_tmp120 = simd_and(r800_ffff_tmp117, bytetest_b8_b8);
          struct_Pe.cc = simd_or(r800_ffff_tmp120, struct_Pe.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp54);
          bytetest_b8 = simd_and(r800_ffff_tmp7, r800_ffff_tmp75);
          bytetest_ba_ba = simd_and(r800_ffff_tmp7, r800_ffff_tmp22);
          r800_ffff_tmp121 = simd_and(r800_ffff_tmp117, bytetest_ba_ba);
          struct_Pe.cc = simd_or(r800_ffff_tmp121, struct_Pe.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp54);
          bytetest_b8 = simd_and(r800_ffff_tmp7, r800_ffff_tmp75);
          bytetest_bc_bc = simd_and(r800_ffff_tmp7, r800_ffff_tmp8);
          r800_ffff_tmp122 = simd_and(r800_ffff_tmp117, bytetest_bc_bc);
          struct_Pe.cc = simd_or(r800_ffff_tmp122, struct_Pe.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp54);
          bytetest_b8 = simd_and(r800_ffff_tmp7, r800_ffff_tmp75);
          bytetest_be_be = simd_and(r800_ffff_tmp7, r800_ffff_tmp38);
          r800_ffff_tmp123 = simd_and(r800_ffff_tmp117, bytetest_be_be);
          struct_Pe.cc = simd_or(r800_ffff_tmp123, struct_Pe.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp54);
          bytetest_b9 = simd_and(r800_ffff_tmp7, tmp6);
          bytetest_80_80 = simd_andc(r800_ffff_tmp30, r800_ffff_tmp5);
          r800_ffff_tmp124 = simd_and(r800_ffff_tmp112, bytetest_b9);
          carryQ.cq[21] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp124, carryQ.get_carry_in(21), r800_ffff_tmp125));
          r800_ffff_tmp126 = simd_and(r800_ffff_tmp125, bytetest_80_80);
          struct_Pe.cc = simd_or(r800_ffff_tmp126, struct_Pe.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp54);
          bytetest_b9 = simd_and(r800_ffff_tmp7, tmp6);
          bytetest_82_82 = simd_and(r800_ffff_tmp30, r800_ffff_tmp28);
          r800_ffff_tmp127 = simd_and(r800_ffff_tmp125, bytetest_82_82);
          struct_Pe.cc = simd_or(r800_ffff_tmp127, struct_Pe.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp54);
          bytetest_b9 = simd_and(r800_ffff_tmp7, tmp6);
          bytetest_84_84 = simd_and(r800_ffff_tmp30, r800_ffff_tmp70);
          r800_ffff_tmp128 = simd_and(r800_ffff_tmp125, bytetest_84_84);
          struct_Pe.cc = simd_or(r800_ffff_tmp128, struct_Pe.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp54);
          bytetest_b9 = simd_and(r800_ffff_tmp7, tmp6);
          bytetest_88_88 = simd_and(r800_ffff_tmp30, r800_ffff_tmp75);
          r800_ffff_tmp129 = simd_and(r800_ffff_tmp125, bytetest_88_88);
          struct_Pe.cc = simd_or(r800_ffff_tmp129, struct_Pe.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp54);
          bytetest_b9 = simd_and(r800_ffff_tmp7, tmp6);
          bytetest_9a_9a = simd_and(r800_ffff_tmp20, r800_ffff_tmp22);
          r800_ffff_tmp130 = simd_and(r800_ffff_tmp125, bytetest_9a_9a);
          struct_Pe.cc = simd_or(r800_ffff_tmp130, struct_Pe.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp54);
          bytetest_b9 = simd_and(r800_ffff_tmp7, tmp6);
          bytetest_9c_9c = simd_and(r800_ffff_tmp20, r800_ffff_tmp8);
          r800_ffff_tmp131 = simd_and(r800_ffff_tmp125, bytetest_9c_9c);
          struct_Pe.cc = simd_or(r800_ffff_tmp131, struct_Pe.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp54);
          bytetest_b9 = simd_and(r800_ffff_tmp7, tmp6);
          bytetest_9e_9e = simd_and(r800_ffff_tmp20, r800_ffff_tmp38);
          r800_ffff_tmp132 = simd_and(r800_ffff_tmp125, bytetest_9e_9e);
          struct_Pe.cc = simd_or(r800_ffff_tmp132, struct_Pe.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp54);
          bytetest_bc = simd_and(r800_ffff_tmp7, r800_ffff_tmp8);
          bytetest_89_89 = simd_and(r800_ffff_tmp30, tmp6);
          r800_ffff_tmp133 = simd_and(r800_ffff_tmp112, bytetest_bc);
          carryQ.cq[22] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp133, carryQ.get_carry_in(22), r800_ffff_tmp134));
          r800_ffff_tmp135 = simd_and(r800_ffff_tmp134, bytetest_89_89);
          struct_Pe.cc = simd_or(r800_ffff_tmp135, struct_Pe.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp54);
          bytetest_bc = simd_and(r800_ffff_tmp7, r800_ffff_tmp8);
          bytetest_bd_bd = simd_and(r800_ffff_tmp7, tmp11);
          r800_ffff_tmp136 = simd_and(r800_ffff_tmp134, bytetest_bd_bd);
          struct_Pe.cc = simd_or(r800_ffff_tmp136, struct_Pe.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp54);
          bytetest_bd = simd_and(r800_ffff_tmp7, tmp11);
          bytetest_9d_9d = simd_and(r800_ffff_tmp20, tmp11);
          r800_ffff_tmp137 = simd_and(r800_ffff_tmp112, bytetest_bd);
          carryQ.cq[23] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp137, carryQ.get_carry_in(23), r800_ffff_tmp138));
          r800_ffff_tmp139 = simd_and(r800_ffff_tmp138, bytetest_9d_9d);
          struct_Pe.cc = simd_or(r800_ffff_tmp139, struct_Pe.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp54);
          bytetest_bd = simd_and(r800_ffff_tmp7, tmp11);
          bytetest_a0_a0 = simd_andc(r800_ffff_tmp47, r800_ffff_tmp5);
          r800_ffff_tmp140 = simd_and(r800_ffff_tmp138, bytetest_a0_a0);
          struct_Pe.cc = simd_or(r800_ffff_tmp140, struct_Pe.cc);
          bytetest_ef = simd_and(r800_ffff_tmp2, r800_ffff_tmp54);
          bytetest_bd = simd_and(r800_ffff_tmp7, tmp11);
          bytetest_a3_a3 = simd_and(r800_ffff_tmp47, r800_ffff_tmp57);
          r800_ffff_tmp141 = simd_and(r800_ffff_tmp138, bytetest_a3_a3);
          struct_Pe.cc = simd_or(r800_ffff_tmp141, struct_Pe.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(2, 22);
        }
  }
  CarryArray<24, 0> carryQ;
  };

  struct Pi {
  Pi() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Pi & struct_Pi) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, bytetest_c2_df, r80_7ff_tmp1;
		BitBlock r80_7ff_tmp2, r80_7ff_tmp3, r80_7ff_tmp4, r80_7ff_tmp5, r80_7ff_tmp6;
		BitBlock bytetest_c2, r80_7ff_tmp7, r80_7ff_tmp8, r80_7ff_tmp9, r80_7ff_tmp10;
		BitBlock r80_7ff_tmp11, r80_7ff_tmp12, bytetest_ab_ab, r80_7ff_tmp13;
		BitBlock r80_7ff_tmp14, r80_7ff_tmp15, r80_7ff_tmp16, r80_7ff_tmp17, tmp6;
		BitBlock tmp7, tmp8, tmp9, tmp10, bytetest_e1_ef, tmp11, bytetest_e0, tmp12;
		BitBlock bytetest_a0_bf, tmp13, tmp14, tmp15, tmp16, tmp17, tmp18;
		BitBlock r800_ffff_tmp1, r800_ffff_tmp2, r800_ffff_tmp3, r800_ffff_tmp4;
		BitBlock bytetest_e2, r800_ffff_tmp5, r800_ffff_tmp6, r800_ffff_tmp7;
		BitBlock r800_ffff_tmp8, r800_ffff_tmp9, bytetest_80, r800_ffff_tmp10;
		BitBlock r800_ffff_tmp11, r800_ffff_tmp12, r800_ffff_tmp13, bytetest_98_98;
		BitBlock r800_ffff_tmp14, r800_ffff_tmp15, r800_ffff_tmp16, r800_ffff_tmp17;
		BitBlock r800_ffff_tmp18, r800_ffff_tmp19, r800_ffff_tmp20, r800_ffff_tmp21;
		BitBlock r800_ffff_tmp22, r800_ffff_tmp23, r800_ffff_tmp24, bytetest_9b_9c;
		BitBlock r800_ffff_tmp25, r800_ffff_tmp26, r800_ffff_tmp27, bytetest_9f_9f;
		BitBlock r800_ffff_tmp28, r800_ffff_tmp29, r800_ffff_tmp30, r800_ffff_tmp31;
		BitBlock r800_ffff_tmp32, bytetest_b9_b9, r800_ffff_tmp33, bytetest_b8;
		BitBlock bytetest_82_82, r800_ffff_tmp34, r800_ffff_tmp35, r800_ffff_tmp36;
		BitBlock r800_ffff_tmp37, r800_ffff_tmp38, bytetest_84_84, r800_ffff_tmp39;
		BitBlock bytetest_89_89, r800_ffff_tmp40, r800_ffff_tmp41, bytetest_8c_8c;
		BitBlock r800_ffff_tmp42, bytetest_9c_9c, r800_ffff_tmp43, r800_ffff_tmp44;
		BitBlock bytetest_a0_a0, r800_ffff_tmp45;




        struct_Pi.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(tmp1, basis_bits.bit_2);
        tmp3 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp4 = simd_or(tmp3, basis_bits.bit_6);
        tmp5 = simd_or(basis_bits.bit_3, tmp4);
        bytetest_c2_df = simd_and(tmp2, tmp5);
        if ((bitblock::any(bytetest_c2_df) || carryQ.CarryTest(0, 2))) {
          r80_7ff_tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
          r80_7ff_tmp2 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
          r80_7ff_tmp3 = simd_andc(r80_7ff_tmp1, r80_7ff_tmp2);
          r80_7ff_tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
          r80_7ff_tmp5 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
          r80_7ff_tmp6 = simd_andc(r80_7ff_tmp5, r80_7ff_tmp4);
          bytetest_c2 = simd_and(r80_7ff_tmp3, r80_7ff_tmp6);
          r80_7ff_tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r80_7ff_tmp8 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
          r80_7ff_tmp9 = simd_and(r80_7ff_tmp7, r80_7ff_tmp8);
          r80_7ff_tmp10 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
          r80_7ff_tmp11 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
          r80_7ff_tmp12 = simd_and(r80_7ff_tmp10, r80_7ff_tmp11);
          bytetest_ab_ab = simd_and(r80_7ff_tmp9, r80_7ff_tmp12);
          r80_7ff_tmp13 = simd<1>::constant<1>();
          carryQ.cq[0] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp13, carryQ.get_carry_in(0), r80_7ff_tmp14));
          r80_7ff_tmp15 = simd_and(r80_7ff_tmp14, bytetest_c2);
          carryQ.cq[1] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp15, carryQ.get_carry_in(1), r80_7ff_tmp16));
          r80_7ff_tmp17 = simd_and(r80_7ff_tmp16, bytetest_ab_ab);
          struct_Pi.cc = simd_or(r80_7ff_tmp17, struct_Pi.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(0, 2);
        }
        tmp6 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp7 = simd_and(tmp1, tmp6);
        tmp8 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp9 = simd_or(basis_bits.bit_5, tmp8);
        tmp10 = simd_or(basis_bits.bit_4, tmp9);
        bytetest_e1_ef = simd_and(tmp7, tmp10);
        tmp11 = simd_or(tmp3, tmp8);
        bytetest_e0 = simd_andc(tmp7, tmp11);
        tmp12 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_a0_bf = simd_and(tmp12, basis_bits.bit_2);
        tmp13 = simd<1>::constant<1>();
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp13, carryQ.get_carry_in(2), tmp14));
        tmp15 = simd_and(tmp14, bytetest_e0);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp15, carryQ.get_carry_in(3), tmp16));
        tmp17 = simd_and(tmp16, bytetest_a0_bf);
        tmp18 = simd_or(tmp17, bytetest_e1_ef);
        if ((bitblock::any(tmp18) || carryQ.CarryTest(4, 4))) {
          r800_ffff_tmp1 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp2 = simd_and(tmp1, r800_ffff_tmp1);
          r800_ffff_tmp3 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp4 = simd_andc(r800_ffff_tmp3, tmp3);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp4);
          r800_ffff_tmp5 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp6 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp7 = simd_andc(r800_ffff_tmp5, r800_ffff_tmp6);
          r800_ffff_tmp8 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp9 = simd_or(tmp3, r800_ffff_tmp8);
          bytetest_80 = simd_andc(r800_ffff_tmp7, r800_ffff_tmp9);
          r800_ffff_tmp10 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
          r800_ffff_tmp11 = simd_and(r800_ffff_tmp5, r800_ffff_tmp10);
          r800_ffff_tmp12 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
          r800_ffff_tmp13 = simd_andc(r800_ffff_tmp12, r800_ffff_tmp8);
          bytetest_98_98 = simd_and(r800_ffff_tmp11, r800_ffff_tmp13);
          r800_ffff_tmp14 = simd<1>::constant<1>();
          carryQ.cq[4] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp14, carryQ.get_carry_in(4), r800_ffff_tmp15));
          r800_ffff_tmp16 = simd_and(r800_ffff_tmp15, bytetest_e2);
          carryQ.cq[5] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp16, carryQ.get_carry_in(5), r800_ffff_tmp17));
          r800_ffff_tmp18 = simd_and(r800_ffff_tmp17, bytetest_80);
          carryQ.cq[6] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp18, carryQ.get_carry_in(6), r800_ffff_tmp19));
          r800_ffff_tmp20 = simd_and(r800_ffff_tmp19, bytetest_98_98);
          struct_Pi.cc = simd_or(r800_ffff_tmp20, struct_Pi.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp4);
          bytetest_80 = simd_andc(r800_ffff_tmp7, r800_ffff_tmp9);
          r800_ffff_tmp21 = simd_and(r800_ffff_tmp11, basis_bits.bit_4);
          r800_ffff_tmp22 = simd_not(r800_ffff_tmp8);
          r800_ffff_tmp23 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp24 = simd_or(simd_and(basis_bits.bit_5, r800_ffff_tmp22), simd_andc(r800_ffff_tmp23, basis_bits.bit_5));
          bytetest_9b_9c = simd_and(r800_ffff_tmp21, r800_ffff_tmp24);
          r800_ffff_tmp25 = simd_and(r800_ffff_tmp19, bytetest_9b_9c);
          struct_Pi.cc = simd_or(r800_ffff_tmp25, struct_Pi.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp4);
          bytetest_80 = simd_andc(r800_ffff_tmp7, r800_ffff_tmp9);
          r800_ffff_tmp26 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
          r800_ffff_tmp27 = simd_and(r800_ffff_tmp26, r800_ffff_tmp23);
          bytetest_9f_9f = simd_and(r800_ffff_tmp11, r800_ffff_tmp27);
          r800_ffff_tmp28 = simd_and(r800_ffff_tmp19, bytetest_9f_9f);
          struct_Pi.cc = simd_or(r800_ffff_tmp28, struct_Pi.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp4);
          bytetest_80 = simd_andc(r800_ffff_tmp7, r800_ffff_tmp9);
          r800_ffff_tmp29 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp30 = simd_and(r800_ffff_tmp5, r800_ffff_tmp29);
          r800_ffff_tmp31 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
          r800_ffff_tmp32 = simd_and(r800_ffff_tmp12, r800_ffff_tmp31);
          bytetest_b9_b9 = simd_and(r800_ffff_tmp30, r800_ffff_tmp32);
          r800_ffff_tmp33 = simd_and(r800_ffff_tmp19, bytetest_b9_b9);
          struct_Pi.cc = simd_or(r800_ffff_tmp33, struct_Pi.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp4);
          bytetest_b8 = simd_and(r800_ffff_tmp30, r800_ffff_tmp13);
          bytetest_82_82 = simd_and(r800_ffff_tmp7, r800_ffff_tmp4);
          r800_ffff_tmp34 = simd_and(r800_ffff_tmp17, bytetest_b8);
          carryQ.cq[7] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp34, carryQ.get_carry_in(7), r800_ffff_tmp35));
          r800_ffff_tmp36 = simd_and(r800_ffff_tmp35, bytetest_82_82);
          struct_Pi.cc = simd_or(r800_ffff_tmp36, struct_Pi.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp4);
          bytetest_b8 = simd_and(r800_ffff_tmp30, r800_ffff_tmp13);
          r800_ffff_tmp37 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
          r800_ffff_tmp38 = simd_andc(r800_ffff_tmp37, r800_ffff_tmp8);
          bytetest_84_84 = simd_and(r800_ffff_tmp7, r800_ffff_tmp38);
          r800_ffff_tmp39 = simd_and(r800_ffff_tmp35, bytetest_84_84);
          struct_Pi.cc = simd_or(r800_ffff_tmp39, struct_Pi.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp4);
          bytetest_b8 = simd_and(r800_ffff_tmp30, r800_ffff_tmp13);
          bytetest_89_89 = simd_and(r800_ffff_tmp7, r800_ffff_tmp32);
          r800_ffff_tmp40 = simd_and(r800_ffff_tmp35, bytetest_89_89);
          struct_Pi.cc = simd_or(r800_ffff_tmp40, struct_Pi.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp4);
          bytetest_b8 = simd_and(r800_ffff_tmp30, r800_ffff_tmp13);
          r800_ffff_tmp41 = simd_andc(r800_ffff_tmp26, r800_ffff_tmp8);
          bytetest_8c_8c = simd_and(r800_ffff_tmp7, r800_ffff_tmp41);
          r800_ffff_tmp42 = simd_and(r800_ffff_tmp35, bytetest_8c_8c);
          struct_Pi.cc = simd_or(r800_ffff_tmp42, struct_Pi.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp4);
          bytetest_b8 = simd_and(r800_ffff_tmp30, r800_ffff_tmp13);
          bytetest_9c_9c = simd_and(r800_ffff_tmp11, r800_ffff_tmp41);
          r800_ffff_tmp43 = simd_and(r800_ffff_tmp35, bytetest_9c_9c);
          struct_Pi.cc = simd_or(r800_ffff_tmp43, struct_Pi.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp4);
          bytetest_b8 = simd_and(r800_ffff_tmp30, r800_ffff_tmp13);
          r800_ffff_tmp44 = simd_and(r800_ffff_tmp5, r800_ffff_tmp1);
          bytetest_a0_a0 = simd_andc(r800_ffff_tmp44, r800_ffff_tmp9);
          r800_ffff_tmp45 = simd_and(r800_ffff_tmp35, bytetest_a0_a0);
          struct_Pi.cc = simd_or(r800_ffff_tmp45, struct_Pi.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(4, 4);
        }
        carryQ.CarryQ_Adjust(8);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Pi & struct_Pi, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, bytetest_c2_df, r80_7ff_tmp1;
		BitBlock r80_7ff_tmp2, r80_7ff_tmp3, r80_7ff_tmp4, r80_7ff_tmp5, r80_7ff_tmp6;
		BitBlock bytetest_c2, r80_7ff_tmp7, r80_7ff_tmp8, r80_7ff_tmp9, r80_7ff_tmp10;
		BitBlock r80_7ff_tmp11, r80_7ff_tmp12, bytetest_ab_ab, r80_7ff_tmp13;
		BitBlock r80_7ff_tmp14, r80_7ff_tmp15, r80_7ff_tmp16, r80_7ff_tmp17, tmp6;
		BitBlock tmp7, tmp8, tmp9, tmp10, bytetest_e1_ef, tmp11, bytetest_e0, tmp12;
		BitBlock bytetest_a0_bf, tmp13, tmp14, tmp15, tmp16, tmp17, tmp18;
		BitBlock r800_ffff_tmp1, r800_ffff_tmp2, r800_ffff_tmp3, r800_ffff_tmp4;
		BitBlock bytetest_e2, r800_ffff_tmp5, r800_ffff_tmp6, r800_ffff_tmp7;
		BitBlock r800_ffff_tmp8, r800_ffff_tmp9, bytetest_80, r800_ffff_tmp10;
		BitBlock r800_ffff_tmp11, r800_ffff_tmp12, r800_ffff_tmp13, bytetest_98_98;
		BitBlock r800_ffff_tmp14, r800_ffff_tmp15, r800_ffff_tmp16, r800_ffff_tmp17;
		BitBlock r800_ffff_tmp18, r800_ffff_tmp19, r800_ffff_tmp20, r800_ffff_tmp21;
		BitBlock r800_ffff_tmp22, r800_ffff_tmp23, r800_ffff_tmp24, bytetest_9b_9c;
		BitBlock r800_ffff_tmp25, r800_ffff_tmp26, r800_ffff_tmp27, bytetest_9f_9f;
		BitBlock r800_ffff_tmp28, r800_ffff_tmp29, r800_ffff_tmp30, r800_ffff_tmp31;
		BitBlock r800_ffff_tmp32, bytetest_b9_b9, r800_ffff_tmp33, bytetest_b8;
		BitBlock bytetest_82_82, r800_ffff_tmp34, r800_ffff_tmp35, r800_ffff_tmp36;
		BitBlock r800_ffff_tmp37, r800_ffff_tmp38, bytetest_84_84, r800_ffff_tmp39;
		BitBlock bytetest_89_89, r800_ffff_tmp40, r800_ffff_tmp41, bytetest_8c_8c;
		BitBlock r800_ffff_tmp42, bytetest_9c_9c, r800_ffff_tmp43, r800_ffff_tmp44;
		BitBlock bytetest_a0_a0, r800_ffff_tmp45;




        struct_Pi.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(tmp1, basis_bits.bit_2);
        tmp3 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp4 = simd_or(tmp3, basis_bits.bit_6);
        tmp5 = simd_or(basis_bits.bit_3, tmp4);
        bytetest_c2_df = simd_and(tmp2, tmp5);
        if ((bitblock::any(bytetest_c2_df) || carryQ.CarryTest(0, 2))) {
          r80_7ff_tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
          r80_7ff_tmp2 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
          r80_7ff_tmp3 = simd_andc(r80_7ff_tmp1, r80_7ff_tmp2);
          r80_7ff_tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
          r80_7ff_tmp5 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
          r80_7ff_tmp6 = simd_andc(r80_7ff_tmp5, r80_7ff_tmp4);
          bytetest_c2 = simd_and(r80_7ff_tmp3, r80_7ff_tmp6);
          r80_7ff_tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r80_7ff_tmp8 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
          r80_7ff_tmp9 = simd_and(r80_7ff_tmp7, r80_7ff_tmp8);
          r80_7ff_tmp10 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
          r80_7ff_tmp11 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
          r80_7ff_tmp12 = simd_and(r80_7ff_tmp10, r80_7ff_tmp11);
          bytetest_ab_ab = simd_and(r80_7ff_tmp9, r80_7ff_tmp12);
          r80_7ff_tmp13 = simd<1>::constant<1>();
          carryQ.cq[0] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp13, carryQ.get_carry_in(0), r80_7ff_tmp14));
          r80_7ff_tmp15 = simd_and(r80_7ff_tmp14, bytetest_c2);
          carryQ.cq[1] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp15, carryQ.get_carry_in(1), r80_7ff_tmp16));
          r80_7ff_tmp17 = simd_and(r80_7ff_tmp16, bytetest_ab_ab);
          struct_Pi.cc = simd_or(r80_7ff_tmp17, struct_Pi.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(0, 2);
        }
        tmp6 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp7 = simd_and(tmp1, tmp6);
        tmp8 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp9 = simd_or(basis_bits.bit_5, tmp8);
        tmp10 = simd_or(basis_bits.bit_4, tmp9);
        bytetest_e1_ef = simd_and(tmp7, tmp10);
        tmp11 = simd_or(tmp3, tmp8);
        bytetest_e0 = simd_andc(tmp7, tmp11);
        tmp12 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_a0_bf = simd_and(tmp12, basis_bits.bit_2);
        tmp13 = simd<1>::constant<1>();
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp13, carryQ.get_carry_in(2), tmp14));
        tmp15 = simd_and(tmp14, bytetest_e0);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp15, carryQ.get_carry_in(3), tmp16));
        tmp17 = simd_and(tmp16, bytetest_a0_bf);
        tmp18 = simd_or(tmp17, bytetest_e1_ef);
        if ((bitblock::any(tmp18) || carryQ.CarryTest(4, 4))) {
          r800_ffff_tmp1 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp2 = simd_and(tmp1, r800_ffff_tmp1);
          r800_ffff_tmp3 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp4 = simd_andc(r800_ffff_tmp3, tmp3);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp4);
          r800_ffff_tmp5 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp6 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp7 = simd_andc(r800_ffff_tmp5, r800_ffff_tmp6);
          r800_ffff_tmp8 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp9 = simd_or(tmp3, r800_ffff_tmp8);
          bytetest_80 = simd_andc(r800_ffff_tmp7, r800_ffff_tmp9);
          r800_ffff_tmp10 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
          r800_ffff_tmp11 = simd_and(r800_ffff_tmp5, r800_ffff_tmp10);
          r800_ffff_tmp12 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
          r800_ffff_tmp13 = simd_andc(r800_ffff_tmp12, r800_ffff_tmp8);
          bytetest_98_98 = simd_and(r800_ffff_tmp11, r800_ffff_tmp13);
          r800_ffff_tmp14 = simd<1>::constant<1>();
          carryQ.cq[4] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp14, carryQ.get_carry_in(4), r800_ffff_tmp15));
          r800_ffff_tmp16 = simd_and(r800_ffff_tmp15, bytetest_e2);
          carryQ.cq[5] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp16, carryQ.get_carry_in(5), r800_ffff_tmp17));
          r800_ffff_tmp18 = simd_and(r800_ffff_tmp17, bytetest_80);
          carryQ.cq[6] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp18, carryQ.get_carry_in(6), r800_ffff_tmp19));
          r800_ffff_tmp20 = simd_and(r800_ffff_tmp19, bytetest_98_98);
          struct_Pi.cc = simd_or(r800_ffff_tmp20, struct_Pi.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp4);
          bytetest_80 = simd_andc(r800_ffff_tmp7, r800_ffff_tmp9);
          r800_ffff_tmp21 = simd_and(r800_ffff_tmp11, basis_bits.bit_4);
          r800_ffff_tmp22 = simd_not(r800_ffff_tmp8);
          r800_ffff_tmp23 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp24 = simd_or(simd_and(basis_bits.bit_5, r800_ffff_tmp22), simd_andc(r800_ffff_tmp23, basis_bits.bit_5));
          bytetest_9b_9c = simd_and(r800_ffff_tmp21, r800_ffff_tmp24);
          r800_ffff_tmp25 = simd_and(r800_ffff_tmp19, bytetest_9b_9c);
          struct_Pi.cc = simd_or(r800_ffff_tmp25, struct_Pi.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp4);
          bytetest_80 = simd_andc(r800_ffff_tmp7, r800_ffff_tmp9);
          r800_ffff_tmp26 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
          r800_ffff_tmp27 = simd_and(r800_ffff_tmp26, r800_ffff_tmp23);
          bytetest_9f_9f = simd_and(r800_ffff_tmp11, r800_ffff_tmp27);
          r800_ffff_tmp28 = simd_and(r800_ffff_tmp19, bytetest_9f_9f);
          struct_Pi.cc = simd_or(r800_ffff_tmp28, struct_Pi.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp4);
          bytetest_80 = simd_andc(r800_ffff_tmp7, r800_ffff_tmp9);
          r800_ffff_tmp29 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp30 = simd_and(r800_ffff_tmp5, r800_ffff_tmp29);
          r800_ffff_tmp31 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
          r800_ffff_tmp32 = simd_and(r800_ffff_tmp12, r800_ffff_tmp31);
          bytetest_b9_b9 = simd_and(r800_ffff_tmp30, r800_ffff_tmp32);
          r800_ffff_tmp33 = simd_and(r800_ffff_tmp19, bytetest_b9_b9);
          struct_Pi.cc = simd_or(r800_ffff_tmp33, struct_Pi.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp4);
          bytetest_b8 = simd_and(r800_ffff_tmp30, r800_ffff_tmp13);
          bytetest_82_82 = simd_and(r800_ffff_tmp7, r800_ffff_tmp4);
          r800_ffff_tmp34 = simd_and(r800_ffff_tmp17, bytetest_b8);
          carryQ.cq[7] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp34, carryQ.get_carry_in(7), r800_ffff_tmp35));
          r800_ffff_tmp36 = simd_and(r800_ffff_tmp35, bytetest_82_82);
          struct_Pi.cc = simd_or(r800_ffff_tmp36, struct_Pi.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp4);
          bytetest_b8 = simd_and(r800_ffff_tmp30, r800_ffff_tmp13);
          r800_ffff_tmp37 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
          r800_ffff_tmp38 = simd_andc(r800_ffff_tmp37, r800_ffff_tmp8);
          bytetest_84_84 = simd_and(r800_ffff_tmp7, r800_ffff_tmp38);
          r800_ffff_tmp39 = simd_and(r800_ffff_tmp35, bytetest_84_84);
          struct_Pi.cc = simd_or(r800_ffff_tmp39, struct_Pi.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp4);
          bytetest_b8 = simd_and(r800_ffff_tmp30, r800_ffff_tmp13);
          bytetest_89_89 = simd_and(r800_ffff_tmp7, r800_ffff_tmp32);
          r800_ffff_tmp40 = simd_and(r800_ffff_tmp35, bytetest_89_89);
          struct_Pi.cc = simd_or(r800_ffff_tmp40, struct_Pi.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp4);
          bytetest_b8 = simd_and(r800_ffff_tmp30, r800_ffff_tmp13);
          r800_ffff_tmp41 = simd_andc(r800_ffff_tmp26, r800_ffff_tmp8);
          bytetest_8c_8c = simd_and(r800_ffff_tmp7, r800_ffff_tmp41);
          r800_ffff_tmp42 = simd_and(r800_ffff_tmp35, bytetest_8c_8c);
          struct_Pi.cc = simd_or(r800_ffff_tmp42, struct_Pi.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp4);
          bytetest_b8 = simd_and(r800_ffff_tmp30, r800_ffff_tmp13);
          bytetest_9c_9c = simd_and(r800_ffff_tmp11, r800_ffff_tmp41);
          r800_ffff_tmp43 = simd_and(r800_ffff_tmp35, bytetest_9c_9c);
          struct_Pi.cc = simd_or(r800_ffff_tmp43, struct_Pi.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp4);
          bytetest_b8 = simd_and(r800_ffff_tmp30, r800_ffff_tmp13);
          r800_ffff_tmp44 = simd_and(r800_ffff_tmp5, r800_ffff_tmp1);
          bytetest_a0_a0 = simd_andc(r800_ffff_tmp44, r800_ffff_tmp9);
          r800_ffff_tmp45 = simd_and(r800_ffff_tmp35, bytetest_a0_a0);
          struct_Pi.cc = simd_or(r800_ffff_tmp45, struct_Pi.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(4, 4);
        }
  }
  CarryArray<8, 0> carryQ;
  };

  struct Po {
  Po() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Po & struct_Po) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_21_23, tmp7, tmp8;
		BitBlock bytetest_25_27, tmp9, tmp10, tmp11, bytetest_2a_2a, tmp12, tmp13;
		BitBlock bytetest_2c_2c, tmp14, bytetest_2e_2f, tmp15, tmp16, tmp17;
		BitBlock bytetest_3a_3b, tmp18, tmp19, tmp20, tmp21, tmp22, tmp23, tmp24;
		BitBlock tmp25, bytetest_3f_40, tmp26, tmp27, tmp28, bytetest_5c_5c, tmp29;
		BitBlock tmp30, bytetest_f0, tmp31, tmp32, tmp33, tmp34, bytetest_91, tmp35;
		BitBlock bytetest_81, tmp36, tmp37, tmp38, tmp39, bytetest_87_8d, tmp40, tmp41;
		BitBlock tmp42, tmp43, tmp44, tmp45, tmp46, tmp47, tmp48, tmp49, bytetest_82;
		BitBlock tmp50, tmp51, tmp52, tmp53, bytetest_bb_bc, tmp54, tmp55, tmp56;
		BitBlock tmp57, bytetest_83, tmp58, bytetest_80_81, tmp59, tmp60, tmp61;
		BitBlock bytetest_be_bf, tmp62, tmp63, tmp64, bytetest_85, bytetest_80_83;
		BitBlock tmp65, tmp66, tmp67, tmp68, bytetest_87, tmp69, tmp70, tmp71, tmp72;
		BitBlock bytetest_85_88, tmp73, tmp74, tmp75, bytetest_92, bytetest_b0_b3;
		BitBlock tmp76, tmp77, tmp78, tmp79, tmp80, tmp81, tmp82, bytetest_c2_df;
		BitBlock r80_7ff_tmp1, bytetest_c2, r80_7ff_tmp2, bytetest_a1_a1, r80_7ff_tmp3;
		BitBlock r80_7ff_tmp4, r80_7ff_tmp5, bytetest_a7_a7, r80_7ff_tmp6;
		BitBlock r80_7ff_tmp7, bytetest_b6_b7, r80_7ff_tmp8, bytetest_bf_bf;
		BitBlock r80_7ff_tmp9, r80_7ff_tmp10, bytetest_cd, r80_7ff_tmp11;
		BitBlock bytetest_be_be, r80_7ff_tmp12, r80_7ff_tmp13, r80_7ff_tmp14;
		BitBlock bytetest_ce, bytetest_87_87, r80_7ff_tmp15, r80_7ff_tmp16;
		BitBlock r80_7ff_tmp17, r80_7ff_tmp18, bytetest_d5, r80_7ff_tmp19;
		BitBlock r80_7ff_tmp20, bytetest_9a_9f, r80_7ff_tmp21, r80_7ff_tmp22;
		BitBlock r80_7ff_tmp23, r80_7ff_tmp24, bytetest_d6, r80_7ff_tmp25;
		BitBlock bytetest_89_89, r80_7ff_tmp26, r80_7ff_tmp27, r80_7ff_tmp28;
		BitBlock bytetest_d7, bytetest_80_80, r80_7ff_tmp29, r80_7ff_tmp30;
		BitBlock r80_7ff_tmp31, bytetest_83_83, r80_7ff_tmp32, bytetest_86_86;
		BitBlock r80_7ff_tmp33, r80_7ff_tmp34, bytetest_b3_b4, r80_7ff_tmp35;
		BitBlock r80_7ff_tmp36, bytetest_d8, r80_7ff_tmp37, r80_7ff_tmp38;
		BitBlock r80_7ff_tmp39, bytetest_89_8a, r80_7ff_tmp40, r80_7ff_tmp41;
		BitBlock r80_7ff_tmp42, r80_7ff_tmp43, bytetest_8c_8d, r80_7ff_tmp44;
		BitBlock r80_7ff_tmp45, bytetest_9b_9b, r80_7ff_tmp46, bytetest_9e_9f;
		BitBlock r80_7ff_tmp47, bytetest_d9, r80_7ff_tmp48, r80_7ff_tmp49;
		BitBlock r80_7ff_tmp50, bytetest_aa_ad, r80_7ff_tmp51, r80_7ff_tmp52;
		BitBlock r80_7ff_tmp53, bytetest_db, r80_7ff_tmp54, bytetest_94_94;
		BitBlock r80_7ff_tmp55, r80_7ff_tmp56, r80_7ff_tmp57, bytetest_dc;
		BitBlock r80_7ff_tmp58, bytetest_80_8d, r80_7ff_tmp59, r80_7ff_tmp60;
		BitBlock r80_7ff_tmp61, bytetest_df, r80_7ff_tmp62, r80_7ff_tmp63;
		BitBlock bytetest_b7_b9, r80_7ff_tmp64, r80_7ff_tmp65, r80_7ff_tmp66, tmp83;
		BitBlock tmp84, bytetest_e1_ef, bytetest_e0, bytetest_a0_bf, tmp85, tmp86;
		BitBlock tmp87, tmp88, r800_ffff_tmp1, r800_ffff_tmp2, bytetest_a0;
		BitBlock r800_ffff_tmp3, bytetest_b0_be, r800_ffff_tmp4, r800_ffff_tmp5;
		BitBlock r800_ffff_tmp6, r800_ffff_tmp7, r800_ffff_tmp8, bytetest_a1;
		BitBlock r800_ffff_tmp9, bytetest_9e_9e, r800_ffff_tmp10, r800_ffff_tmp11;
		BitBlock r800_ffff_tmp12, bytetest_a5, r800_ffff_tmp13, bytetest_a4_a5;
		BitBlock r800_ffff_tmp14, r800_ffff_tmp15, r800_ffff_tmp16, bytetest_b0_b0;
		BitBlock r800_ffff_tmp17, r800_ffff_tmp18, bytetest_ab, r800_ffff_tmp19;
		BitBlock r800_ffff_tmp20, r800_ffff_tmp21, bytetest_b7, r800_ffff_tmp22;
		BitBlock bytetest_b4_b4, r800_ffff_tmp23, r800_ffff_tmp24, r800_ffff_tmp25;
		BitBlock r800_ffff_tmp26, bytetest_b9, bytetest_8f_8f, r800_ffff_tmp27;
		BitBlock r800_ffff_tmp28, r800_ffff_tmp29, bytetest_9a_9b, r800_ffff_tmp30;
		BitBlock bytetest_bc, r800_ffff_tmp31, r800_ffff_tmp32, r800_ffff_tmp33;
		BitBlock r800_ffff_tmp34, bytetest_84_92, r800_ffff_tmp35, r800_ffff_tmp36;
		BitBlock r800_ffff_tmp37, r800_ffff_tmp38, bytetest_be, bytetest_85_85;
		BitBlock r800_ffff_tmp39, r800_ffff_tmp40, r800_ffff_tmp41, bytetest_bf;
		BitBlock r800_ffff_tmp42, bytetest_90_94, r800_ffff_tmp43, r800_ffff_tmp44;
		BitBlock r800_ffff_tmp45, r800_ffff_tmp46, r800_ffff_tmp47, r800_ffff_tmp48;
		BitBlock bytetest_99_9a, r800_ffff_tmp49, bytetest_e1, r800_ffff_tmp50;
		BitBlock r800_ffff_tmp51, bytetest_8a_8f, r800_ffff_tmp52, r800_ffff_tmp53;
		BitBlock r800_ffff_tmp54, r800_ffff_tmp55, r800_ffff_tmp56, bytetest_bb_bb;
		BitBlock r800_ffff_tmp57, r800_ffff_tmp58, r800_ffff_tmp59, r800_ffff_tmp60;
		BitBlock bytetest_8d, r800_ffff_tmp61, bytetest_a0_a8, r800_ffff_tmp62;
		BitBlock r800_ffff_tmp63, r800_ffff_tmp64, bytetest_99, r800_ffff_tmp65;
		BitBlock bytetest_ad_ae, r800_ffff_tmp66, r800_ffff_tmp67, r800_ffff_tmp68;
		BitBlock bytetest_9b, r800_ffff_tmp69, r800_ffff_tmp70, r800_ffff_tmp71;
		BitBlock bytetest_ab_ad, r800_ffff_tmp72, r800_ffff_tmp73, r800_ffff_tmp74;
		BitBlock bytetest_9c, r800_ffff_tmp75, bytetest_b5_b6, r800_ffff_tmp76;
		BitBlock r800_ffff_tmp77, r800_ffff_tmp78, bytetest_9f, r800_ffff_tmp79;
		BitBlock bytetest_94_96, r800_ffff_tmp80, r800_ffff_tmp81, r800_ffff_tmp82;
		BitBlock bytetest_98_9a, r800_ffff_tmp83, r800_ffff_tmp84, bytetest_80_85;
		BitBlock r800_ffff_tmp85, r800_ffff_tmp86, r800_ffff_tmp87, r800_ffff_tmp88;
		BitBlock r800_ffff_tmp89, r800_ffff_tmp90, bytetest_87_8a, r800_ffff_tmp91;
		BitBlock bytetest_84_85, r800_ffff_tmp92, r800_ffff_tmp93, r800_ffff_tmp94;
		BitBlock r800_ffff_tmp95, bytetest_a8, r800_ffff_tmp96, r800_ffff_tmp97;
		BitBlock r800_ffff_tmp98, bytetest_aa, r800_ffff_tmp99, bytetest_a0_a6;
		BitBlock r800_ffff_tmp100, r800_ffff_tmp101, r800_ffff_tmp102, bytetest_a8_ad;
		BitBlock r800_ffff_tmp103, bytetest_ad, r800_ffff_tmp104, r800_ffff_tmp105;
		BitBlock r800_ffff_tmp106, r800_ffff_tmp107, r800_ffff_tmp108, bytetest_9a_a0;
		BitBlock r800_ffff_tmp109, r800_ffff_tmp110, r800_ffff_tmp111, bytetest_af;
		BitBlock bytetest_bc_bf, r800_ffff_tmp112, r800_ffff_tmp113, r800_ffff_tmp114;
		BitBlock bytetest_b0, bytetest_bb_bf, r800_ffff_tmp115, r800_ffff_tmp116;
		BitBlock r800_ffff_tmp117, bytetest_b1, r800_ffff_tmp118, r800_ffff_tmp119;
		BitBlock r800_ffff_tmp120, bytetest_b3, bytetest_80_87, r800_ffff_tmp121;
		BitBlock r800_ffff_tmp122, r800_ffff_tmp123, bytetest_93_93, r800_ffff_tmp124;
		BitBlock bytetest_e2, bytetest_80, r800_ffff_tmp125, bytetest_96_97;
		BitBlock r800_ffff_tmp126, r800_ffff_tmp127, r800_ffff_tmp128;
		BitBlock r800_ffff_tmp129, r800_ffff_tmp130, bytetest_a0_a7, r800_ffff_tmp131;
		BitBlock bytetest_b0_b8, r800_ffff_tmp132, r800_ffff_tmp133, r800_ffff_tmp134;
		BitBlock bytetest_bb_be, r800_ffff_tmp135, bytetest_81_83, r800_ffff_tmp136;
		BitBlock r800_ffff_tmp137, r800_ffff_tmp138, r800_ffff_tmp139;
		BitBlock r800_ffff_tmp140, r800_ffff_tmp141, bytetest_87_91, r800_ffff_tmp142;
		BitBlock r800_ffff_tmp143, r800_ffff_tmp144, r800_ffff_tmp145, bytetest_95_9e;
		BitBlock r800_ffff_tmp146, r800_ffff_tmp147, bytetest_b9_bc, r800_ffff_tmp148;
		BitBlock r800_ffff_tmp149, r800_ffff_tmp150, r800_ffff_tmp151, bytetest_b5;
		BitBlock r800_ffff_tmp152, r800_ffff_tmp153, r800_ffff_tmp154, bytetest_b8;
		BitBlock r800_ffff_tmp155, r800_ffff_tmp156, r800_ffff_tmp157;
		BitBlock r800_ffff_tmp158, bytetest_86_88, r800_ffff_tmp159, bytetest_8b_8b;
		BitBlock r800_ffff_tmp160, r800_ffff_tmp161, r800_ffff_tmp162, bytetest_8e_96;
		BitBlock r800_ffff_tmp163, r800_ffff_tmp164, bytetest_98_99, r800_ffff_tmp165;
		BitBlock r800_ffff_tmp166, r800_ffff_tmp167, r800_ffff_tmp168, bytetest_aa_ae;
		BitBlock r800_ffff_tmp169, bytetest_b0_b9, r800_ffff_tmp170, bytetest_e3;
		BitBlock r800_ffff_tmp171, r800_ffff_tmp172, r800_ffff_tmp173;
		BitBlock r800_ffff_tmp174, r800_ffff_tmp175, bytetest_bd_bd, r800_ffff_tmp176;
		BitBlock r800_ffff_tmp177, r800_ffff_tmp178, r800_ffff_tmp179, bytetest_ea;
		BitBlock bytetest_93, r800_ffff_tmp180, r800_ffff_tmp181, r800_ffff_tmp182;
		BitBlock r800_ffff_tmp183, r800_ffff_tmp184, bytetest_98, r800_ffff_tmp185;
		BitBlock bytetest_8d_8f, r800_ffff_tmp186, r800_ffff_tmp187, r800_ffff_tmp188;
		BitBlock bytetest_b3_b3, r800_ffff_tmp189, r800_ffff_tmp190, r800_ffff_tmp191;
		BitBlock r800_ffff_tmp192, r800_ffff_tmp193, bytetest_b2_b7, r800_ffff_tmp194;
		BitBlock r800_ffff_tmp195, r800_ffff_tmp196, bytetest_b4_b7, r800_ffff_tmp197;
		BitBlock r800_ffff_tmp198, r800_ffff_tmp199, bytetest_a3, bytetest_8e_8f;
		BitBlock r800_ffff_tmp200, r800_ffff_tmp201, r800_ffff_tmp202;
		BitBlock r800_ffff_tmp203, bytetest_b8_ba, r800_ffff_tmp204, bytetest_a4;
		BitBlock bytetest_ae_af, r800_ffff_tmp205, r800_ffff_tmp206, r800_ffff_tmp207;
		BitBlock bytetest_9f_9f, r800_ffff_tmp208, r800_ffff_tmp209, r800_ffff_tmp210;
		BitBlock bytetest_a7, r800_ffff_tmp211, bytetest_81_8d, r800_ffff_tmp212;
		BitBlock r800_ffff_tmp213, r800_ffff_tmp214, r800_ffff_tmp215, bytetest_a9;
		BitBlock bytetest_9c_9f, r800_ffff_tmp216, r800_ffff_tmp217, r800_ffff_tmp218;
		BitBlock r800_ffff_tmp219, r800_ffff_tmp220, r800_ffff_tmp221, bytetest_b0_b1;
		BitBlock r800_ffff_tmp222, bytetest_ab_ab, r800_ffff_tmp223, r800_ffff_tmp224;
		BitBlock r800_ffff_tmp225, bytetest_ef, bytetest_90_96, r800_ffff_tmp226;
		BitBlock r800_ffff_tmp227, r800_ffff_tmp228, r800_ffff_tmp229;
		BitBlock r800_ffff_tmp230, bytetest_99_99, r800_ffff_tmp231, r800_ffff_tmp232;
		BitBlock r800_ffff_tmp233, bytetest_85_86, r800_ffff_tmp234, r800_ffff_tmp235;
		BitBlock r800_ffff_tmp236, bytetest_89_8c, r800_ffff_tmp237, r800_ffff_tmp238;
		BitBlock bytetest_90_92, r800_ffff_tmp239, bytetest_94_97, r800_ffff_tmp240;
		BitBlock r800_ffff_tmp241, r800_ffff_tmp242, r800_ffff_tmp243, bytetest_9f_a1;
		BitBlock r800_ffff_tmp244, bytetest_a8_a8, r800_ffff_tmp245, bytetest_aa_ab;
		BitBlock r800_ffff_tmp246, r800_ffff_tmp247, r800_ffff_tmp248;
		BitBlock r800_ffff_tmp249, bytetest_85_87, r800_ffff_tmp250, bytetest_8a_8a;
		BitBlock r800_ffff_tmp251, bytetest_8c_8c, r800_ffff_tmp252, r800_ffff_tmp253;
		BitBlock r800_ffff_tmp254, r800_ffff_tmp255, bytetest_9f_a0, r800_ffff_tmp256;
		BitBlock bytetest_bc_bc, r800_ffff_tmp257, bytetest_bd, r800_ffff_tmp258;
		BitBlock r800_ffff_tmp259, r800_ffff_tmp260, r800_ffff_tmp261, bytetest_90;
		BitBlock bytetest_80_bf, tmp89, tmp90, tmp91, r10000_10fff_tmp1, bytetest_84;
		BitBlock bytetest_80_82, r10000_10fff_tmp2, r10000_10fff_tmp3;
		BitBlock r10000_10fff_tmp4, r10000_10fff_tmp5, r10000_10fff_tmp6;
		BitBlock r10000_10fff_tmp7, bytetest_8e, r10000_10fff_tmp8, r10000_10fff_tmp9;
		BitBlock r10000_10fff_tmp10, bytetest_8f, bytetest_90_90, r10000_10fff_tmp11;
		BitBlock r10000_10fff_tmp12, r10000_10fff_tmp13, r10000_10fff_tmp14;
		BitBlock bytetest_97_97, r10000_10fff_tmp15, r10000_10fff_tmp16;
		BitBlock r10000_10fff_tmp17, r10000_10fff_tmp18, r10000_10fff_tmp19;
		BitBlock r10000_10fff_tmp20, r10000_10fff_tmp21, r10000_10fff_tmp22;
		BitBlock r10000_10fff_tmp23, bytetest_90_98, r10000_10fff_tmp24;
		BitBlock r10000_10fff_tmp25, r10000_10fff_tmp26, r10000_10fff_tmp27;
		BitBlock bytetest_ac, bytetest_b9_bf, r10000_10fff_tmp28, r10000_10fff_tmp29;
		BitBlock r10000_10fff_tmp30;




        struct_Po.cc = simd<1>::constant<0>();
        tmp1 = simd_or(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp2, tmp1);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(tmp3, tmp4);
        tmp6 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        bytetest_21_23 = simd_and(tmp5, tmp6);
        struct_Po.cc = simd_or(bytetest_21_23, struct_Po.cc);
        tmp7 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp8 = simd_and(tmp3, tmp7);
        bytetest_25_27 = simd_and(tmp8, tmp6);
        struct_Po.cc = simd_or(bytetest_25_27, struct_Po.cc);
        tmp9 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp10 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp11 = simd_and(tmp9, tmp10);
        bytetest_2a_2a = simd_and(tmp3, tmp11);
        struct_Po.cc = simd_or(bytetest_2a_2a, struct_Po.cc);
        tmp12 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp13 = simd_andc(tmp12, tmp6);
        bytetest_2c_2c = simd_and(tmp3, tmp13);
        struct_Po.cc = simd_or(bytetest_2c_2c, struct_Po.cc);
        tmp14 = simd_and(tmp12, basis_bits.bit_6);
        bytetest_2e_2f = simd_and(tmp3, tmp14);
        struct_Po.cc = simd_or(bytetest_2e_2f, struct_Po.cc);
        tmp15 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp16 = simd_andc(tmp15, tmp1);
        tmp17 = simd_and(tmp9, basis_bits.bit_6);
        bytetest_3a_3b = simd_and(tmp16, tmp17);
        struct_Po.cc = simd_or(bytetest_3a_3b, struct_Po.cc);
        tmp18 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp19 = simd_or(tmp4, tmp6);
        tmp20 = simd_or(tmp18, tmp19);
        tmp21 = simd_not(tmp20);
        tmp22 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp23 = simd_and(tmp12, tmp22);
        tmp24 = simd_and(tmp15, tmp23);
        tmp25 = simd_or(simd_and(basis_bits.bit_1, tmp21), simd_andc(tmp24, basis_bits.bit_1));
        bytetest_3f_40 = simd_andc(tmp25, basis_bits.bit_0);
        struct_Po.cc = simd_or(bytetest_3f_40, struct_Po.cc);
        tmp26 = simd_andc(basis_bits.bit_1, basis_bits.bit_0);
        tmp27 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp28 = simd_and(tmp26, tmp27);
        bytetest_5c_5c = simd_and(tmp28, tmp13);
        struct_Po.cc = simd_or(bytetest_5c_5c, struct_Po.cc);
        tmp29 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp30 = simd_and(tmp29, tmp15);
        bytetest_f0 = simd_andc(tmp30, tmp19);
        tmp31 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp32 = simd_and(tmp31, tmp27);
        tmp33 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp34 = simd_andc(tmp33, tmp4);
        bytetest_91 = simd_and(tmp32, tmp34);
        tmp35 = simd_andc(tmp31, tmp18);
        bytetest_81 = simd_and(tmp35, tmp34);
        tmp36 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp37 = simd_not(tmp36);
        tmp38 = simd_and(basis_bits.bit_5, tmp22);
        tmp39 = simd_or(simd_and(basis_bits.bit_4, tmp37), simd_andc(tmp38, basis_bits.bit_4));
        bytetest_87_8d = simd_and(tmp35, tmp39);
        tmp40 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp40, carryQ.get_carry_in(0), tmp41));
        tmp42 = simd_and(tmp41, bytetest_f0);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp42, carryQ.get_carry_in(1), tmp43));
        tmp44 = simd_and(tmp43, bytetest_91);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp44, carryQ.get_carry_in(2), tmp45));
        tmp46 = simd_and(tmp45, bytetest_81);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp46, carryQ.get_carry_in(3), tmp47));
        tmp48 = simd_and(tmp47, bytetest_87_8d);
        struct_Po.cc = simd_or(tmp48, struct_Po.cc);
        bytetest_f0 = simd_andc(tmp30, tmp19);
        bytetest_91 = simd_and(tmp32, tmp34);
        tmp49 = simd_andc(tmp10, tmp4);
        bytetest_82 = simd_and(tmp35, tmp49);
        tmp50 = simd_and(tmp31, tmp15);
        tmp51 = simd_and(tmp50, basis_bits.bit_4);
        tmp52 = simd_not(tmp6);
        tmp53 = simd_or(simd_and(basis_bits.bit_5, tmp52), simd_andc(tmp22, basis_bits.bit_5));
        bytetest_bb_bc = simd_and(tmp51, tmp53);
        tmp54 = simd_and(tmp45, bytetest_82);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp54, carryQ.get_carry_in(4), tmp55));
        tmp56 = simd_and(tmp55, bytetest_bb_bc);
        struct_Po.cc = simd_or(tmp56, struct_Po.cc);
        bytetest_f0 = simd_andc(tmp30, tmp19);
        bytetest_91 = simd_and(tmp32, tmp34);
        tmp57 = simd_andc(tmp22, tmp4);
        bytetest_83 = simd_and(tmp35, tmp57);
        tmp58 = simd_or(tmp4, basis_bits.bit_6);
        bytetest_80_81 = simd_andc(tmp35, tmp58);
        tmp59 = simd_and(tmp45, bytetest_83);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp59, carryQ.get_carry_in(5), tmp60));
        tmp61 = simd_and(tmp60, bytetest_80_81);
        bytetest_82 = simd_and(tmp35, tmp49);
        bytetest_be_bf = simd_and(tmp50, tmp14);
        tmp62 = simd_and(tmp55, bytetest_be_bf);
        tmp63 = simd_or(tmp62, tmp61);
        struct_Po.cc = simd_or(tmp63, struct_Po.cc);
        bytetest_f0 = simd_andc(tmp30, tmp19);
        bytetest_91 = simd_and(tmp32, tmp34);
        tmp64 = simd_and(tmp7, tmp33);
        bytetest_85 = simd_and(tmp35, tmp64);
        bytetest_80_83 = simd_andc(tmp35, tmp4);
        tmp65 = simd_and(tmp45, bytetest_85);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp65, carryQ.get_carry_in(6), tmp66));
        tmp67 = simd_and(tmp66, bytetest_80_83);
        struct_Po.cc = simd_or(tmp67, struct_Po.cc);
        bytetest_f0 = simd_andc(tmp30, tmp19);
        bytetest_91 = simd_and(tmp32, tmp34);
        tmp68 = simd_and(tmp7, tmp22);
        bytetest_87 = simd_and(tmp35, tmp68);
        tmp69 = simd_or(basis_bits.bit_5, tmp6);
        tmp70 = simd_not(tmp69);
        tmp71 = simd_and(basis_bits.bit_5, tmp6);
        tmp72 = simd_or(simd_and(basis_bits.bit_4, tmp70), simd_andc(tmp71, basis_bits.bit_4));
        bytetest_85_88 = simd_and(tmp35, tmp72);
        tmp73 = simd_and(tmp45, bytetest_87);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp73, carryQ.get_carry_in(7), tmp74));
        tmp75 = simd_and(tmp74, bytetest_85_88);
        struct_Po.cc = simd_or(tmp75, struct_Po.cc);
        bytetest_f0 = simd_andc(tmp30, tmp19);
        bytetest_92 = simd_and(tmp32, tmp49);
        bytetest_91 = simd_and(tmp32, tmp34);
        bytetest_b0_b3 = simd_andc(tmp50, tmp4);
        tmp76 = simd_and(tmp43, bytetest_92);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(tmp76, carryQ.get_carry_in(8), tmp77));
        tmp78 = simd_and(tmp77, bytetest_91);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(tmp78, carryQ.get_carry_in(9), tmp79));
        tmp80 = simd_and(tmp79, bytetest_b0_b3);
        struct_Po.cc = simd_or(tmp80, struct_Po.cc);
        tmp81 = simd_andc(tmp29, basis_bits.bit_2);
        tmp82 = simd_or(basis_bits.bit_3, tmp58);
        bytetest_c2_df = simd_and(tmp81, tmp82);
        if ((bitblock::any(bytetest_c2_df) || carryQ.CarryTest(10, 11))) {
          r80_7ff_tmp1 = simd_andc(tmp29, tmp18);
          bytetest_c2 = simd_and(r80_7ff_tmp1, tmp49);
          r80_7ff_tmp2 = simd_and(tmp31, tmp2);
          bytetest_a1_a1 = simd_and(r80_7ff_tmp2, tmp34);
          r80_7ff_tmp3 = simd_and(tmp41, bytetest_c2);
          carryQ.cq[10] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp3, carryQ.get_carry_in(10), r80_7ff_tmp4));
          r80_7ff_tmp5 = simd_and(r80_7ff_tmp4, bytetest_a1_a1);
          struct_Po.cc = simd_or(r80_7ff_tmp5, struct_Po.cc);
          bytetest_c2 = simd_and(r80_7ff_tmp1, tmp49);
          bytetest_a7_a7 = simd_and(r80_7ff_tmp2, tmp68);
          r80_7ff_tmp6 = simd_and(r80_7ff_tmp4, bytetest_a7_a7);
          struct_Po.cc = simd_or(r80_7ff_tmp6, struct_Po.cc);
          bytetest_c2 = simd_and(r80_7ff_tmp1, tmp49);
          r80_7ff_tmp7 = simd_and(tmp7, basis_bits.bit_6);
          bytetest_b6_b7 = simd_and(tmp50, r80_7ff_tmp7);
          r80_7ff_tmp8 = simd_and(r80_7ff_tmp4, bytetest_b6_b7);
          struct_Po.cc = simd_or(r80_7ff_tmp8, struct_Po.cc);
          bytetest_c2 = simd_and(r80_7ff_tmp1, tmp49);
          bytetest_bf_bf = simd_and(tmp50, tmp23);
          r80_7ff_tmp9 = simd_and(r80_7ff_tmp4, bytetest_bf_bf);
          struct_Po.cc = simd_or(r80_7ff_tmp9, struct_Po.cc);
          r80_7ff_tmp10 = simd_and(tmp12, tmp33);
          bytetest_cd = simd_and(r80_7ff_tmp1, r80_7ff_tmp10);
          r80_7ff_tmp11 = simd_and(tmp12, tmp10);
          bytetest_be_be = simd_and(tmp50, r80_7ff_tmp11);
          r80_7ff_tmp12 = simd_and(tmp41, bytetest_cd);
          carryQ.cq[11] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp12, carryQ.get_carry_in(11), r80_7ff_tmp13));
          r80_7ff_tmp14 = simd_and(r80_7ff_tmp13, bytetest_be_be);
          struct_Po.cc = simd_or(r80_7ff_tmp14, struct_Po.cc);
          bytetest_ce = simd_and(r80_7ff_tmp1, r80_7ff_tmp11);
          bytetest_87_87 = simd_and(tmp35, tmp68);
          r80_7ff_tmp15 = simd_and(tmp41, bytetest_ce);
          carryQ.cq[12] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp15, carryQ.get_carry_in(12), r80_7ff_tmp16));
          r80_7ff_tmp17 = simd_and(r80_7ff_tmp16, bytetest_87_87);
          struct_Po.cc = simd_or(r80_7ff_tmp17, struct_Po.cc);
          r80_7ff_tmp18 = simd_and(tmp29, tmp27);
          bytetest_d5 = simd_and(r80_7ff_tmp18, tmp64);
          r80_7ff_tmp19 = simd_and(tmp32, basis_bits.bit_4);
          r80_7ff_tmp20 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
          bytetest_9a_9f = simd_and(r80_7ff_tmp19, r80_7ff_tmp20);
          r80_7ff_tmp21 = simd_and(tmp41, bytetest_d5);
          carryQ.cq[13] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp21, carryQ.get_carry_in(13), r80_7ff_tmp22));
          r80_7ff_tmp23 = simd_and(r80_7ff_tmp22, bytetest_9a_9f);
          struct_Po.cc = simd_or(r80_7ff_tmp23, struct_Po.cc);
          r80_7ff_tmp24 = simd_and(tmp7, tmp10);
          bytetest_d6 = simd_and(r80_7ff_tmp18, r80_7ff_tmp24);
          r80_7ff_tmp25 = simd_and(tmp9, tmp33);
          bytetest_89_89 = simd_and(tmp35, r80_7ff_tmp25);
          r80_7ff_tmp26 = simd_and(tmp41, bytetest_d6);
          carryQ.cq[14] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp26, carryQ.get_carry_in(14), r80_7ff_tmp27));
          r80_7ff_tmp28 = simd_and(r80_7ff_tmp27, bytetest_89_89);
          struct_Po.cc = simd_or(r80_7ff_tmp28, struct_Po.cc);
          bytetest_d7 = simd_and(r80_7ff_tmp18, tmp68);
          bytetest_80_80 = simd_andc(tmp35, tmp19);
          r80_7ff_tmp29 = simd_and(tmp41, bytetest_d7);
          carryQ.cq[15] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp29, carryQ.get_carry_in(15), r80_7ff_tmp30));
          r80_7ff_tmp31 = simd_and(r80_7ff_tmp30, bytetest_80_80);
          struct_Po.cc = simd_or(r80_7ff_tmp31, struct_Po.cc);
          bytetest_d7 = simd_and(r80_7ff_tmp18, tmp68);
          bytetest_83_83 = simd_and(tmp35, tmp57);
          r80_7ff_tmp32 = simd_and(r80_7ff_tmp30, bytetest_83_83);
          struct_Po.cc = simd_or(r80_7ff_tmp32, struct_Po.cc);
          bytetest_d7 = simd_and(r80_7ff_tmp18, tmp68);
          bytetest_86_86 = simd_and(tmp35, r80_7ff_tmp24);
          r80_7ff_tmp33 = simd_and(r80_7ff_tmp30, bytetest_86_86);
          struct_Po.cc = simd_or(r80_7ff_tmp33, struct_Po.cc);
          bytetest_d7 = simd_and(r80_7ff_tmp18, tmp68);
          r80_7ff_tmp34 = simd_andc(tmp50, basis_bits.bit_4);
          bytetest_b3_b4 = simd_and(r80_7ff_tmp34, tmp53);
          r80_7ff_tmp35 = simd_and(r80_7ff_tmp30, bytetest_b3_b4);
          struct_Po.cc = simd_or(r80_7ff_tmp35, struct_Po.cc);
          r80_7ff_tmp36 = simd_andc(tmp9, tmp6);
          bytetest_d8 = simd_and(r80_7ff_tmp18, r80_7ff_tmp36);
          r80_7ff_tmp37 = simd_and(tmp35, tmp9);
          r80_7ff_tmp38 = simd_not(basis_bits.bit_7);
          r80_7ff_tmp39 = simd_or(simd_and(basis_bits.bit_6, r80_7ff_tmp38), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
          bytetest_89_8a = simd_and(r80_7ff_tmp37, r80_7ff_tmp39);
          r80_7ff_tmp40 = simd_and(tmp41, bytetest_d8);
          carryQ.cq[16] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp40, carryQ.get_carry_in(16), r80_7ff_tmp41));
          r80_7ff_tmp42 = simd_and(r80_7ff_tmp41, bytetest_89_8a);
          struct_Po.cc = simd_or(r80_7ff_tmp42, struct_Po.cc);
          bytetest_d8 = simd_and(r80_7ff_tmp18, r80_7ff_tmp36);
          r80_7ff_tmp43 = simd_andc(tmp12, basis_bits.bit_6);
          bytetest_8c_8d = simd_and(tmp35, r80_7ff_tmp43);
          r80_7ff_tmp44 = simd_and(r80_7ff_tmp41, bytetest_8c_8d);
          struct_Po.cc = simd_or(r80_7ff_tmp44, struct_Po.cc);
          bytetest_d8 = simd_and(r80_7ff_tmp18, r80_7ff_tmp36);
          r80_7ff_tmp45 = simd_and(tmp9, tmp22);
          bytetest_9b_9b = simd_and(tmp32, r80_7ff_tmp45);
          r80_7ff_tmp46 = simd_and(r80_7ff_tmp41, bytetest_9b_9b);
          struct_Po.cc = simd_or(r80_7ff_tmp46, struct_Po.cc);
          bytetest_d8 = simd_and(r80_7ff_tmp18, r80_7ff_tmp36);
          bytetest_9e_9f = simd_and(tmp32, tmp14);
          r80_7ff_tmp47 = simd_and(r80_7ff_tmp41, bytetest_9e_9f);
          struct_Po.cc = simd_or(r80_7ff_tmp47, struct_Po.cc);
          bytetest_d9 = simd_and(r80_7ff_tmp18, r80_7ff_tmp25);
          r80_7ff_tmp48 = simd_and(r80_7ff_tmp2, basis_bits.bit_4);
          r80_7ff_tmp49 = simd_not(basis_bits.bit_6);
          r80_7ff_tmp50 = simd_or(simd_and(basis_bits.bit_5, r80_7ff_tmp49), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
          bytetest_aa_ad = simd_and(r80_7ff_tmp48, r80_7ff_tmp50);
          r80_7ff_tmp51 = simd_and(tmp41, bytetest_d9);
          carryQ.cq[17] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp51, carryQ.get_carry_in(17), r80_7ff_tmp52));
          r80_7ff_tmp53 = simd_and(r80_7ff_tmp52, bytetest_aa_ad);
          struct_Po.cc = simd_or(r80_7ff_tmp53, struct_Po.cc);
          bytetest_db = simd_and(r80_7ff_tmp18, r80_7ff_tmp45);
          r80_7ff_tmp54 = simd_andc(tmp7, tmp6);
          bytetest_94_94 = simd_and(tmp32, r80_7ff_tmp54);
          r80_7ff_tmp55 = simd_and(tmp41, bytetest_db);
          carryQ.cq[18] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp55, carryQ.get_carry_in(18), r80_7ff_tmp56));
          r80_7ff_tmp57 = simd_and(r80_7ff_tmp56, bytetest_94_94);
          struct_Po.cc = simd_or(r80_7ff_tmp57, struct_Po.cc);
          bytetest_dc = simd_and(r80_7ff_tmp18, tmp13);
          r80_7ff_tmp58 = simd_and(basis_bits.bit_4, tmp36);
          bytetest_80_8d = simd_andc(tmp35, r80_7ff_tmp58);
          r80_7ff_tmp59 = simd_and(tmp41, bytetest_dc);
          carryQ.cq[19] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp59, carryQ.get_carry_in(19), r80_7ff_tmp60));
          r80_7ff_tmp61 = simd_and(r80_7ff_tmp60, bytetest_80_8d);
          struct_Po.cc = simd_or(r80_7ff_tmp61, struct_Po.cc);
          bytetest_df = simd_and(r80_7ff_tmp18, tmp23);
          r80_7ff_tmp62 = simd_not(r80_7ff_tmp20);
          r80_7ff_tmp63 = simd_or(simd_and(basis_bits.bit_4, r80_7ff_tmp62), simd_andc(tmp38, basis_bits.bit_4));
          bytetest_b7_b9 = simd_and(tmp50, r80_7ff_tmp63);
          r80_7ff_tmp64 = simd_and(tmp41, bytetest_df);
          carryQ.cq[20] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp64, carryQ.get_carry_in(20), r80_7ff_tmp65));
          r80_7ff_tmp66 = simd_and(r80_7ff_tmp65, bytetest_b7_b9);
          struct_Po.cc = simd_or(r80_7ff_tmp66, struct_Po.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(10, 11);
        }
        tmp83 = simd_and(tmp29, tmp2);
        tmp84 = simd_or(basis_bits.bit_4, tmp69);
        bytetest_e1_ef = simd_and(tmp83, tmp84);
        bytetest_e0 = simd_andc(tmp83, tmp19);
        bytetest_a0_bf = simd_and(tmp31, basis_bits.bit_2);
        tmp85 = simd_and(tmp41, bytetest_e0);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(tmp85, carryQ.get_carry_in(21), tmp86));
        tmp87 = simd_and(tmp86, bytetest_a0_bf);
        tmp88 = simd_or(tmp87, bytetest_e1_ef);
        if ((bitblock::any(tmp88) || carryQ.CarryTest(22, 54))) {
          r800_ffff_tmp1 = simd_and(tmp29, tmp2);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp19);
          r800_ffff_tmp2 = simd_and(tmp31, tmp2);
          bytetest_a0 = simd_andc(r800_ffff_tmp2, tmp19);
          r800_ffff_tmp3 = simd_and(basis_bits.bit_4, tmp38);
          bytetest_b0_be = simd_andc(tmp50, r800_ffff_tmp3);
          r800_ffff_tmp4 = simd_and(tmp41, bytetest_e0);
          carryQ.cq[22] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp4, carryQ.get_carry_in(22), r800_ffff_tmp5));
          r800_ffff_tmp6 = simd_and(r800_ffff_tmp5, bytetest_a0);
          carryQ.cq[23] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp6, carryQ.get_carry_in(23), r800_ffff_tmp7));
          r800_ffff_tmp8 = simd_and(r800_ffff_tmp7, bytetest_b0_be);
          struct_Po.cc = simd_or(r800_ffff_tmp8, struct_Po.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp19);
          bytetest_a1 = simd_and(r800_ffff_tmp2, tmp34);
          r800_ffff_tmp9 = simd_and(tmp12, tmp10);
          bytetest_9e_9e = simd_and(tmp32, r800_ffff_tmp9);
          r800_ffff_tmp10 = simd_and(r800_ffff_tmp5, bytetest_a1);
          carryQ.cq[24] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp10, carryQ.get_carry_in(24), r800_ffff_tmp11));
          r800_ffff_tmp12 = simd_and(r800_ffff_tmp11, bytetest_9e_9e);
          struct_Po.cc = simd_or(r800_ffff_tmp12, struct_Po.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp19);
          bytetest_a5 = simd_and(r800_ffff_tmp2, tmp64);
          r800_ffff_tmp13 = simd_andc(tmp7, basis_bits.bit_6);
          bytetest_a4_a5 = simd_and(r800_ffff_tmp2, r800_ffff_tmp13);
          r800_ffff_tmp14 = simd_and(r800_ffff_tmp5, bytetest_a5);
          carryQ.cq[25] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp14, carryQ.get_carry_in(25), r800_ffff_tmp15));
          r800_ffff_tmp16 = simd_and(r800_ffff_tmp15, bytetest_a4_a5);
          struct_Po.cc = simd_or(r800_ffff_tmp16, struct_Po.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp19);
          bytetest_a5 = simd_and(r800_ffff_tmp2, tmp64);
          bytetest_b0_b0 = simd_andc(tmp50, tmp19);
          r800_ffff_tmp17 = simd_and(r800_ffff_tmp15, bytetest_b0_b0);
          struct_Po.cc = simd_or(r800_ffff_tmp17, struct_Po.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp19);
          r800_ffff_tmp18 = simd_and(tmp9, tmp22);
          bytetest_ab = simd_and(r800_ffff_tmp2, r800_ffff_tmp18);
          bytetest_b0_b0 = simd_andc(tmp50, tmp19);
          r800_ffff_tmp19 = simd_and(r800_ffff_tmp5, bytetest_ab);
          carryQ.cq[26] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp19, carryQ.get_carry_in(26), r800_ffff_tmp20));
          r800_ffff_tmp21 = simd_and(r800_ffff_tmp20, bytetest_b0_b0);
          struct_Po.cc = simd_or(r800_ffff_tmp21, struct_Po.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp19);
          bytetest_b7 = simd_and(tmp50, tmp68);
          r800_ffff_tmp22 = simd_andc(tmp7, tmp6);
          bytetest_b4_b4 = simd_and(tmp50, r800_ffff_tmp22);
          r800_ffff_tmp23 = simd_and(r800_ffff_tmp5, bytetest_b7);
          carryQ.cq[27] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp23, carryQ.get_carry_in(27), r800_ffff_tmp24));
          r800_ffff_tmp25 = simd_and(r800_ffff_tmp24, bytetest_b4_b4);
          struct_Po.cc = simd_or(r800_ffff_tmp25, struct_Po.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp19);
          r800_ffff_tmp26 = simd_and(tmp9, tmp33);
          bytetest_b9 = simd_and(tmp50, r800_ffff_tmp26);
          bytetest_8f_8f = simd_and(tmp35, tmp23);
          r800_ffff_tmp27 = simd_and(r800_ffff_tmp5, bytetest_b9);
          carryQ.cq[28] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp27, carryQ.get_carry_in(28), r800_ffff_tmp28));
          r800_ffff_tmp29 = simd_and(r800_ffff_tmp28, bytetest_8f_8f);
          struct_Po.cc = simd_or(r800_ffff_tmp29, struct_Po.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp19);
          bytetest_b9 = simd_and(tmp50, r800_ffff_tmp26);
          bytetest_9a_9b = simd_and(tmp32, tmp17);
          r800_ffff_tmp30 = simd_and(r800_ffff_tmp28, bytetest_9a_9b);
          struct_Po.cc = simd_or(r800_ffff_tmp30, struct_Po.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp19);
          bytetest_bc = simd_and(tmp50, tmp13);
          r800_ffff_tmp31 = simd_andc(tmp31, basis_bits.bit_2);
          r800_ffff_tmp32 = simd_or(tmp4, tmp22);
          r800_ffff_tmp33 = simd_not(r800_ffff_tmp32);
          r800_ffff_tmp34 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp33), simd_andc(tmp4, basis_bits.bit_3));
          bytetest_84_92 = simd_and(r800_ffff_tmp31, r800_ffff_tmp34);
          r800_ffff_tmp35 = simd_and(r800_ffff_tmp5, bytetest_bc);
          carryQ.cq[29] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp35, carryQ.get_carry_in(29), r800_ffff_tmp36));
          r800_ffff_tmp37 = simd_and(r800_ffff_tmp36, bytetest_84_92);
          struct_Po.cc = simd_or(r800_ffff_tmp37, struct_Po.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp19);
          bytetest_bc = simd_and(tmp50, tmp13);
          bytetest_94_94 = simd_and(tmp32, r800_ffff_tmp22);
          r800_ffff_tmp38 = simd_and(r800_ffff_tmp36, bytetest_94_94);
          struct_Po.cc = simd_or(r800_ffff_tmp38, struct_Po.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp19);
          bytetest_be = simd_and(tmp50, r800_ffff_tmp9);
          bytetest_85_85 = simd_and(tmp35, tmp64);
          r800_ffff_tmp39 = simd_and(r800_ffff_tmp5, bytetest_be);
          carryQ.cq[30] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp39, carryQ.get_carry_in(30), r800_ffff_tmp40));
          r800_ffff_tmp41 = simd_and(r800_ffff_tmp40, bytetest_85_85);
          struct_Po.cc = simd_or(r800_ffff_tmp41, struct_Po.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp19);
          bytetest_bf = simd_and(tmp50, tmp23);
          r800_ffff_tmp42 = simd_andc(tmp32, basis_bits.bit_4);
          bytetest_90_94 = simd_andc(r800_ffff_tmp42, tmp71);
          r800_ffff_tmp43 = simd_and(r800_ffff_tmp5, bytetest_bf);
          carryQ.cq[31] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp43, carryQ.get_carry_in(31), r800_ffff_tmp44));
          r800_ffff_tmp45 = simd_and(r800_ffff_tmp44, bytetest_90_94);
          struct_Po.cc = simd_or(r800_ffff_tmp45, struct_Po.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp19);
          bytetest_bf = simd_and(tmp50, tmp23);
          r800_ffff_tmp46 = simd_and(tmp32, tmp9);
          r800_ffff_tmp47 = simd_not(basis_bits.bit_7);
          r800_ffff_tmp48 = simd_or(simd_and(basis_bits.bit_6, r800_ffff_tmp47), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
          bytetest_99_9a = simd_and(r800_ffff_tmp46, r800_ffff_tmp48);
          r800_ffff_tmp49 = simd_and(r800_ffff_tmp44, bytetest_99_9a);
          struct_Po.cc = simd_or(r800_ffff_tmp49, struct_Po.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp34);
          bytetest_81 = simd_and(tmp35, tmp34);
          r800_ffff_tmp50 = simd_and(tmp35, basis_bits.bit_4);
          r800_ffff_tmp51 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
          bytetest_8a_8f = simd_and(r800_ffff_tmp50, r800_ffff_tmp51);
          r800_ffff_tmp52 = simd_and(tmp41, bytetest_e1);
          carryQ.cq[32] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp52, carryQ.get_carry_in(32), r800_ffff_tmp53));
          r800_ffff_tmp54 = simd_and(r800_ffff_tmp53, bytetest_81);
          carryQ.cq[33] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp54, carryQ.get_carry_in(33), r800_ffff_tmp55));
          r800_ffff_tmp56 = simd_and(r800_ffff_tmp55, bytetest_8a_8f);
          struct_Po.cc = simd_or(r800_ffff_tmp56, struct_Po.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp34);
          bytetest_83 = simd_and(tmp35, tmp57);
          bytetest_bb_bb = simd_and(tmp50, r800_ffff_tmp18);
          r800_ffff_tmp57 = simd_and(r800_ffff_tmp53, bytetest_83);
          carryQ.cq[34] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp57, carryQ.get_carry_in(34), r800_ffff_tmp58));
          r800_ffff_tmp59 = simd_and(r800_ffff_tmp58, bytetest_bb_bb);
          struct_Po.cc = simd_or(r800_ffff_tmp59, struct_Po.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp34);
          r800_ffff_tmp60 = simd_and(tmp12, tmp33);
          bytetest_8d = simd_and(tmp35, r800_ffff_tmp60);
          r800_ffff_tmp61 = simd_and(basis_bits.bit_4, tmp69);
          bytetest_a0_a8 = simd_andc(r800_ffff_tmp2, r800_ffff_tmp61);
          r800_ffff_tmp62 = simd_and(r800_ffff_tmp53, bytetest_8d);
          carryQ.cq[35] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp62, carryQ.get_carry_in(35), r800_ffff_tmp63));
          r800_ffff_tmp64 = simd_and(r800_ffff_tmp63, bytetest_a0_a8);
          struct_Po.cc = simd_or(r800_ffff_tmp64, struct_Po.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp34);
          bytetest_99 = simd_and(tmp32, r800_ffff_tmp26);
          r800_ffff_tmp65 = simd_and(r800_ffff_tmp2, tmp12);
          bytetest_ad_ae = simd_and(r800_ffff_tmp65, r800_ffff_tmp48);
          r800_ffff_tmp66 = simd_and(r800_ffff_tmp53, bytetest_99);
          carryQ.cq[36] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp66, carryQ.get_carry_in(36), r800_ffff_tmp67));
          r800_ffff_tmp68 = simd_and(r800_ffff_tmp67, bytetest_ad_ae);
          struct_Po.cc = simd_or(r800_ffff_tmp68, struct_Po.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp34);
          bytetest_9b = simd_and(tmp32, r800_ffff_tmp18);
          r800_ffff_tmp69 = simd_and(r800_ffff_tmp2, basis_bits.bit_4);
          r800_ffff_tmp70 = simd_not(basis_bits.bit_6);
          r800_ffff_tmp71 = simd_or(simd_and(basis_bits.bit_5, r800_ffff_tmp70), simd_andc(tmp22, basis_bits.bit_5));
          bytetest_ab_ad = simd_and(r800_ffff_tmp69, r800_ffff_tmp71);
          r800_ffff_tmp72 = simd_and(r800_ffff_tmp53, bytetest_9b);
          carryQ.cq[37] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp72, carryQ.get_carry_in(37), r800_ffff_tmp73));
          r800_ffff_tmp74 = simd_and(r800_ffff_tmp73, bytetest_ab_ad);
          struct_Po.cc = simd_or(r800_ffff_tmp74, struct_Po.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp34);
          bytetest_9c = simd_and(tmp32, tmp13);
          r800_ffff_tmp75 = simd_and(tmp50, tmp7);
          bytetest_b5_b6 = simd_and(r800_ffff_tmp75, r800_ffff_tmp48);
          r800_ffff_tmp76 = simd_and(r800_ffff_tmp53, bytetest_9c);
          carryQ.cq[38] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp76, carryQ.get_carry_in(38), r800_ffff_tmp77));
          r800_ffff_tmp78 = simd_and(r800_ffff_tmp77, bytetest_b5_b6);
          struct_Po.cc = simd_or(r800_ffff_tmp78, struct_Po.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp34);
          bytetest_9f = simd_and(tmp32, tmp23);
          r800_ffff_tmp79 = simd_and(tmp32, tmp7);
          bytetest_94_96 = simd_andc(r800_ffff_tmp79, tmp22);
          r800_ffff_tmp80 = simd_and(r800_ffff_tmp53, bytetest_9f);
          carryQ.cq[39] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp80, carryQ.get_carry_in(39), r800_ffff_tmp81));
          r800_ffff_tmp82 = simd_and(r800_ffff_tmp81, bytetest_94_96);
          struct_Po.cc = simd_or(r800_ffff_tmp82, struct_Po.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp34);
          bytetest_9f = simd_and(tmp32, tmp23);
          bytetest_98_9a = simd_andc(r800_ffff_tmp46, tmp22);
          r800_ffff_tmp83 = simd_and(r800_ffff_tmp81, bytetest_98_9a);
          struct_Po.cc = simd_or(r800_ffff_tmp83, struct_Po.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp34);
          bytetest_a0 = simd_andc(r800_ffff_tmp2, tmp19);
          r800_ffff_tmp84 = simd_andc(tmp35, basis_bits.bit_4);
          bytetest_80_85 = simd_andc(r800_ffff_tmp84, tmp36);
          r800_ffff_tmp85 = simd_and(r800_ffff_tmp53, bytetest_a0);
          carryQ.cq[40] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp85, carryQ.get_carry_in(40), r800_ffff_tmp86));
          r800_ffff_tmp87 = simd_and(r800_ffff_tmp86, bytetest_80_85);
          struct_Po.cc = simd_or(r800_ffff_tmp87, struct_Po.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp34);
          bytetest_a0 = simd_andc(r800_ffff_tmp2, tmp19);
          r800_ffff_tmp88 = simd_or(basis_bits.bit_5, tmp22);
          r800_ffff_tmp89 = simd_not(r800_ffff_tmp88);
          r800_ffff_tmp90 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp89), simd_andc(tmp38, basis_bits.bit_4));
          bytetest_87_8a = simd_and(tmp35, r800_ffff_tmp90);
          r800_ffff_tmp91 = simd_and(r800_ffff_tmp86, bytetest_87_8a);
          struct_Po.cc = simd_or(r800_ffff_tmp91, struct_Po.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp34);
          bytetest_a5 = simd_and(r800_ffff_tmp2, tmp64);
          bytetest_84_85 = simd_and(tmp35, r800_ffff_tmp13);
          r800_ffff_tmp92 = simd_and(r800_ffff_tmp53, bytetest_a5);
          carryQ.cq[41] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp92, carryQ.get_carry_in(41), r800_ffff_tmp93));
          r800_ffff_tmp94 = simd_and(r800_ffff_tmp93, bytetest_84_85);
          struct_Po.cc = simd_or(r800_ffff_tmp94, struct_Po.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp34);
          r800_ffff_tmp95 = simd_andc(tmp9, tmp6);
          bytetest_a8 = simd_and(r800_ffff_tmp2, r800_ffff_tmp95);
          bytetest_9e_9f = simd_and(tmp32, tmp14);
          r800_ffff_tmp96 = simd_and(r800_ffff_tmp53, bytetest_a8);
          carryQ.cq[42] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp96, carryQ.get_carry_in(42), r800_ffff_tmp97));
          r800_ffff_tmp98 = simd_and(r800_ffff_tmp97, bytetest_9e_9f);
          struct_Po.cc = simd_or(r800_ffff_tmp98, struct_Po.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp34);
          bytetest_aa = simd_and(r800_ffff_tmp2, tmp11);
          r800_ffff_tmp99 = simd_andc(r800_ffff_tmp2, basis_bits.bit_4);
          bytetest_a0_a6 = simd_andc(r800_ffff_tmp99, tmp38);
          r800_ffff_tmp100 = simd_and(r800_ffff_tmp53, bytetest_aa);
          carryQ.cq[43] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp100, carryQ.get_carry_in(43), r800_ffff_tmp101));
          r800_ffff_tmp102 = simd_and(r800_ffff_tmp101, bytetest_a0_a6);
          struct_Po.cc = simd_or(r800_ffff_tmp102, struct_Po.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp34);
          bytetest_aa = simd_and(r800_ffff_tmp2, tmp11);
          bytetest_a8_ad = simd_andc(r800_ffff_tmp69, tmp36);
          r800_ffff_tmp103 = simd_and(r800_ffff_tmp101, bytetest_a8_ad);
          struct_Po.cc = simd_or(r800_ffff_tmp103, struct_Po.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp34);
          bytetest_ad = simd_and(r800_ffff_tmp2, r800_ffff_tmp60);
          r800_ffff_tmp104 = simd_or(basis_bits.bit_3, tmp19);
          r800_ffff_tmp105 = simd_not(r800_ffff_tmp104);
          r800_ffff_tmp106 = simd_and(basis_bits.bit_4, r800_ffff_tmp51);
          r800_ffff_tmp107 = simd_and(basis_bits.bit_3, r800_ffff_tmp106);
          r800_ffff_tmp108 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp105), simd_andc(r800_ffff_tmp107, basis_bits.bit_2));
          bytetest_9a_a0 = simd_and(tmp31, r800_ffff_tmp108);
          r800_ffff_tmp109 = simd_and(r800_ffff_tmp53, bytetest_ad);
          carryQ.cq[44] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp109, carryQ.get_carry_in(44), r800_ffff_tmp110));
          r800_ffff_tmp111 = simd_and(r800_ffff_tmp110, bytetest_9a_a0);
          struct_Po.cc = simd_or(r800_ffff_tmp111, struct_Po.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp34);
          bytetest_af = simd_and(r800_ffff_tmp2, tmp23);
          bytetest_bc_bf = simd_and(tmp50, tmp12);
          r800_ffff_tmp112 = simd_and(r800_ffff_tmp53, bytetest_af);
          carryQ.cq[45] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp112, carryQ.get_carry_in(45), r800_ffff_tmp113));
          r800_ffff_tmp114 = simd_and(r800_ffff_tmp113, bytetest_bc_bf);
          struct_Po.cc = simd_or(r800_ffff_tmp114, struct_Po.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp34);
          bytetest_b0 = simd_andc(tmp50, tmp19);
          bytetest_bb_bf = simd_and(tmp51, r800_ffff_tmp88);
          r800_ffff_tmp115 = simd_and(r800_ffff_tmp53, bytetest_b0);
          carryQ.cq[46] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp115, carryQ.get_carry_in(46), r800_ffff_tmp116));
          r800_ffff_tmp117 = simd_and(r800_ffff_tmp116, bytetest_bb_bf);
          struct_Po.cc = simd_or(r800_ffff_tmp117, struct_Po.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp34);
          bytetest_b1 = simd_and(tmp50, tmp34);
          bytetest_be_bf = simd_and(tmp50, tmp14);
          r800_ffff_tmp118 = simd_and(r800_ffff_tmp53, bytetest_b1);
          carryQ.cq[47] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp118, carryQ.get_carry_in(47), r800_ffff_tmp119));
          r800_ffff_tmp120 = simd_and(r800_ffff_tmp119, bytetest_be_bf);
          struct_Po.cc = simd_or(r800_ffff_tmp120, struct_Po.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp34);
          bytetest_b3 = simd_and(tmp50, tmp57);
          bytetest_80_87 = simd_andc(tmp35, basis_bits.bit_4);
          r800_ffff_tmp121 = simd_and(r800_ffff_tmp53, bytetest_b3);
          carryQ.cq[48] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp121, carryQ.get_carry_in(48), r800_ffff_tmp122));
          r800_ffff_tmp123 = simd_and(r800_ffff_tmp122, bytetest_80_87);
          struct_Po.cc = simd_or(r800_ffff_tmp123, struct_Po.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp34);
          bytetest_b3 = simd_and(tmp50, tmp57);
          bytetest_93_93 = simd_and(tmp32, tmp57);
          r800_ffff_tmp124 = simd_and(r800_ffff_tmp122, bytetest_93_93);
          struct_Po.cc = simd_or(r800_ffff_tmp124, struct_Po.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp49);
          bytetest_80 = simd_andc(tmp35, tmp19);
          r800_ffff_tmp125 = simd_and(tmp7, basis_bits.bit_6);
          bytetest_96_97 = simd_and(tmp32, r800_ffff_tmp125);
          r800_ffff_tmp126 = simd_and(tmp41, bytetest_e2);
          carryQ.cq[49] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp126, carryQ.get_carry_in(49), r800_ffff_tmp127));
          r800_ffff_tmp128 = simd_and(r800_ffff_tmp127, bytetest_80);
          carryQ.cq[50] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp128, carryQ.get_carry_in(50), r800_ffff_tmp129));
          r800_ffff_tmp130 = simd_and(r800_ffff_tmp129, bytetest_96_97);
          struct_Po.cc = simd_or(r800_ffff_tmp130, struct_Po.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp49);
          bytetest_80 = simd_andc(tmp35, tmp19);
          bytetest_a0_a7 = simd_andc(r800_ffff_tmp2, basis_bits.bit_4);
          r800_ffff_tmp131 = simd_and(r800_ffff_tmp129, bytetest_a0_a7);
          struct_Po.cc = simd_or(r800_ffff_tmp131, struct_Po.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp49);
          bytetest_80 = simd_andc(tmp35, tmp19);
          bytetest_b0_b8 = simd_andc(tmp50, r800_ffff_tmp61);
          r800_ffff_tmp132 = simd_and(r800_ffff_tmp129, bytetest_b0_b8);
          struct_Po.cc = simd_or(r800_ffff_tmp132, struct_Po.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp49);
          bytetest_80 = simd_andc(tmp35, tmp19);
          r800_ffff_tmp133 = simd_not(tmp22);
          r800_ffff_tmp134 = simd_or(simd_and(basis_bits.bit_5, r800_ffff_tmp133), simd_andc(tmp22, basis_bits.bit_5));
          bytetest_bb_be = simd_and(tmp51, r800_ffff_tmp134);
          r800_ffff_tmp135 = simd_and(r800_ffff_tmp129, bytetest_bb_be);
          struct_Po.cc = simd_or(r800_ffff_tmp135, struct_Po.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp49);
          bytetest_81 = simd_and(tmp35, tmp34);
          bytetest_81_83 = simd_and(bytetest_80_83, tmp6);
          r800_ffff_tmp136 = simd_and(r800_ffff_tmp127, bytetest_81);
          carryQ.cq[51] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp136, carryQ.get_carry_in(51), r800_ffff_tmp137));
          r800_ffff_tmp138 = simd_and(r800_ffff_tmp137, bytetest_81_83);
          struct_Po.cc = simd_or(r800_ffff_tmp138, struct_Po.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp49);
          bytetest_81 = simd_and(tmp35, tmp34);
          r800_ffff_tmp139 = simd_not(tmp58);
          r800_ffff_tmp140 = simd_or(basis_bits.bit_4, tmp38);
          r800_ffff_tmp141 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp139), simd_andc(r800_ffff_tmp140, basis_bits.bit_3));
          bytetest_87_91 = simd_and(r800_ffff_tmp31, r800_ffff_tmp141);
          r800_ffff_tmp142 = simd_and(r800_ffff_tmp137, bytetest_87_91);
          struct_Po.cc = simd_or(r800_ffff_tmp142, struct_Po.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp49);
          bytetest_81 = simd_and(tmp35, tmp34);
          bytetest_93_93 = simd_and(tmp32, tmp57);
          r800_ffff_tmp143 = simd_and(r800_ffff_tmp137, bytetest_93_93);
          struct_Po.cc = simd_or(r800_ffff_tmp143, struct_Po.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp49);
          bytetest_81 = simd_and(tmp35, tmp34);
          r800_ffff_tmp144 = simd_not(tmp38);
          r800_ffff_tmp145 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp144), simd_andc(tmp71, basis_bits.bit_4));
          bytetest_95_9e = simd_and(tmp32, r800_ffff_tmp145);
          r800_ffff_tmp146 = simd_and(r800_ffff_tmp137, bytetest_95_9e);
          struct_Po.cc = simd_or(r800_ffff_tmp146, struct_Po.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp49);
          bytetest_b3 = simd_and(tmp50, tmp57);
          r800_ffff_tmp147 = simd_or(simd_and(basis_bits.bit_5, tmp52), simd_andc(tmp6, basis_bits.bit_5));
          bytetest_b9_bc = simd_and(tmp51, r800_ffff_tmp147);
          r800_ffff_tmp148 = simd_and(r800_ffff_tmp127, bytetest_b3);
          carryQ.cq[52] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp148, carryQ.get_carry_in(52), r800_ffff_tmp149));
          r800_ffff_tmp150 = simd_and(r800_ffff_tmp149, bytetest_b9_bc);
          struct_Po.cc = simd_or(r800_ffff_tmp150, struct_Po.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp49);
          bytetest_b3 = simd_and(tmp50, tmp57);
          bytetest_be_bf = simd_and(tmp50, tmp14);
          r800_ffff_tmp151 = simd_and(r800_ffff_tmp149, bytetest_be_bf);
          struct_Po.cc = simd_or(r800_ffff_tmp151, struct_Po.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp49);
          bytetest_b5 = simd_and(tmp50, tmp64);
          bytetest_b0_b0 = simd_andc(tmp50, tmp19);
          r800_ffff_tmp152 = simd_and(r800_ffff_tmp127, bytetest_b5);
          carryQ.cq[53] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp152, carryQ.get_carry_in(53), r800_ffff_tmp153));
          r800_ffff_tmp154 = simd_and(r800_ffff_tmp153, bytetest_b0_b0);
          struct_Po.cc = simd_or(r800_ffff_tmp154, struct_Po.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp49);
          bytetest_b8 = simd_and(tmp50, r800_ffff_tmp95);
          bytetest_80_81 = simd_andc(tmp35, tmp58);
          r800_ffff_tmp155 = simd_and(r800_ffff_tmp127, bytetest_b8);
          carryQ.cq[54] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp155, carryQ.get_carry_in(54), r800_ffff_tmp156));
          r800_ffff_tmp157 = simd_and(r800_ffff_tmp156, bytetest_80_81);
          struct_Po.cc = simd_or(r800_ffff_tmp157, struct_Po.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp49);
          bytetest_b8 = simd_and(tmp50, r800_ffff_tmp95);
          r800_ffff_tmp158 = simd_or(simd_and(basis_bits.bit_4, tmp70), simd_andc(tmp36, basis_bits.bit_4));
          bytetest_86_88 = simd_and(tmp35, r800_ffff_tmp158);
          r800_ffff_tmp159 = simd_and(r800_ffff_tmp156, bytetest_86_88);
          struct_Po.cc = simd_or(r800_ffff_tmp159, struct_Po.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp49);
          bytetest_b8 = simd_and(tmp50, r800_ffff_tmp95);
          bytetest_8b_8b = simd_and(tmp35, r800_ffff_tmp18);
          r800_ffff_tmp160 = simd_and(r800_ffff_tmp156, bytetest_8b_8b);
          struct_Po.cc = simd_or(r800_ffff_tmp160, struct_Po.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp49);
          bytetest_b8 = simd_and(tmp50, r800_ffff_tmp95);
          r800_ffff_tmp161 = simd_not(r800_ffff_tmp140);
          r800_ffff_tmp162 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp161), simd_andc(tmp14, basis_bits.bit_3));
          bytetest_8e_96 = simd_and(r800_ffff_tmp31, r800_ffff_tmp162);
          r800_ffff_tmp163 = simd_and(r800_ffff_tmp156, bytetest_8e_96);
          struct_Po.cc = simd_or(r800_ffff_tmp163, struct_Po.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp49);
          bytetest_b8 = simd_and(tmp50, r800_ffff_tmp95);
          r800_ffff_tmp164 = simd_andc(tmp9, basis_bits.bit_6);
          bytetest_98_99 = simd_and(tmp32, r800_ffff_tmp164);
          r800_ffff_tmp165 = simd_and(r800_ffff_tmp156, bytetest_98_99);
          struct_Po.cc = simd_or(r800_ffff_tmp165, struct_Po.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp49);
          bytetest_b8 = simd_and(tmp50, r800_ffff_tmp95);
          bytetest_9b_9b = simd_and(tmp32, r800_ffff_tmp18);
          r800_ffff_tmp166 = simd_and(r800_ffff_tmp156, bytetest_9b_9b);
          struct_Po.cc = simd_or(r800_ffff_tmp166, struct_Po.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp49);
          bytetest_b8 = simd_and(tmp50, r800_ffff_tmp95);
          bytetest_9e_9f = simd_and(tmp32, tmp14);
          r800_ffff_tmp167 = simd_and(r800_ffff_tmp156, bytetest_9e_9f);
          struct_Po.cc = simd_or(r800_ffff_tmp167, struct_Po.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp49);
          bytetest_b8 = simd_and(tmp50, r800_ffff_tmp95);
          r800_ffff_tmp168 = simd_or(simd_and(basis_bits.bit_5, r800_ffff_tmp133), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
          bytetest_aa_ae = simd_and(r800_ffff_tmp69, r800_ffff_tmp168);
          r800_ffff_tmp169 = simd_and(r800_ffff_tmp156, bytetest_aa_ae);
          struct_Po.cc = simd_or(r800_ffff_tmp169, struct_Po.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp49);
          bytetest_b8 = simd_and(tmp50, r800_ffff_tmp95);
          bytetest_b0_b9 = simd_andc(tmp50, r800_ffff_tmp106);
          r800_ffff_tmp170 = simd_and(r800_ffff_tmp156, bytetest_b0_b9);
          struct_Po.cc = simd_or(r800_ffff_tmp170, struct_Po.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp57);
          bytetest_80 = simd_andc(tmp35, tmp19);
          bytetest_81_83 = simd_and(bytetest_80_83, tmp6);
          r800_ffff_tmp171 = simd_and(tmp41, bytetest_e3);
          carryQ.cq[55] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp171, carryQ.get_carry_in(55), r800_ffff_tmp172));
          r800_ffff_tmp173 = simd_and(r800_ffff_tmp172, bytetest_80);
          carryQ.cq[56] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp173, carryQ.get_carry_in(56), r800_ffff_tmp174));
          r800_ffff_tmp175 = simd_and(r800_ffff_tmp174, bytetest_81_83);
          struct_Po.cc = simd_or(r800_ffff_tmp175, struct_Po.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp57);
          bytetest_80 = simd_andc(tmp35, tmp19);
          bytetest_bd_bd = simd_and(tmp50, r800_ffff_tmp60);
          r800_ffff_tmp176 = simd_and(r800_ffff_tmp174, bytetest_bd_bd);
          struct_Po.cc = simd_or(r800_ffff_tmp176, struct_Po.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp57);
          bytetest_83 = simd_and(tmp35, tmp57);
          bytetest_bb_bb = simd_and(tmp50, r800_ffff_tmp18);
          r800_ffff_tmp177 = simd_and(r800_ffff_tmp172, bytetest_83);
          carryQ.cq[57] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp177, carryQ.get_carry_in(57), r800_ffff_tmp178));
          r800_ffff_tmp179 = simd_and(r800_ffff_tmp178, bytetest_bb_bb);
          struct_Po.cc = simd_or(r800_ffff_tmp179, struct_Po.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_93 = simd_and(tmp32, tmp57);
          bytetest_be_bf = simd_and(tmp50, tmp14);
          r800_ffff_tmp180 = simd_and(tmp41, bytetest_ea);
          carryQ.cq[58] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp180, carryQ.get_carry_in(58), r800_ffff_tmp181));
          r800_ffff_tmp182 = simd_and(r800_ffff_tmp181, bytetest_93);
          carryQ.cq[59] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp182, carryQ.get_carry_in(59), r800_ffff_tmp183));
          r800_ffff_tmp184 = simd_and(r800_ffff_tmp183, bytetest_be_bf);
          struct_Po.cc = simd_or(r800_ffff_tmp184, struct_Po.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_98 = simd_and(tmp32, r800_ffff_tmp95);
          r800_ffff_tmp185 = simd_and(tmp35, tmp12);
          bytetest_8d_8f = simd_and(r800_ffff_tmp185, tmp6);
          r800_ffff_tmp186 = simd_and(r800_ffff_tmp181, bytetest_98);
          carryQ.cq[60] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp186, carryQ.get_carry_in(60), r800_ffff_tmp187));
          r800_ffff_tmp188 = simd_and(r800_ffff_tmp187, bytetest_8d_8f);
          struct_Po.cc = simd_or(r800_ffff_tmp188, struct_Po.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_99 = simd_and(tmp32, r800_ffff_tmp26);
          bytetest_b3_b3 = simd_and(tmp50, tmp57);
          r800_ffff_tmp189 = simd_and(r800_ffff_tmp181, bytetest_99);
          carryQ.cq[61] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp189, carryQ.get_carry_in(61), r800_ffff_tmp190));
          r800_ffff_tmp191 = simd_and(r800_ffff_tmp190, bytetest_b3_b3);
          struct_Po.cc = simd_or(r800_ffff_tmp191, struct_Po.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_99 = simd_and(tmp32, r800_ffff_tmp26);
          bytetest_be_be = simd_and(tmp50, r800_ffff_tmp9);
          r800_ffff_tmp192 = simd_and(r800_ffff_tmp190, bytetest_be_be);
          struct_Po.cc = simd_or(r800_ffff_tmp192, struct_Po.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9b = simd_and(tmp32, r800_ffff_tmp18);
          r800_ffff_tmp193 = simd_andc(tmp50, basis_bits.bit_4);
          bytetest_b2_b7 = simd_and(r800_ffff_tmp193, r800_ffff_tmp51);
          r800_ffff_tmp194 = simd_and(r800_ffff_tmp181, bytetest_9b);
          carryQ.cq[62] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp194, carryQ.get_carry_in(62), r800_ffff_tmp195));
          r800_ffff_tmp196 = simd_and(r800_ffff_tmp195, bytetest_b2_b7);
          struct_Po.cc = simd_or(r800_ffff_tmp196, struct_Po.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a1 = simd_and(r800_ffff_tmp2, tmp34);
          bytetest_b4_b7 = simd_and(tmp50, tmp7);
          r800_ffff_tmp197 = simd_and(r800_ffff_tmp181, bytetest_a1);
          carryQ.cq[63] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp197, carryQ.get_carry_in(63), r800_ffff_tmp198));
          r800_ffff_tmp199 = simd_and(r800_ffff_tmp198, bytetest_b4_b7);
          struct_Po.cc = simd_or(r800_ffff_tmp199, struct_Po.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a3 = simd_and(r800_ffff_tmp2, tmp57);
          bytetest_8e_8f = simd_and(tmp35, tmp14);
          r800_ffff_tmp200 = simd_and(r800_ffff_tmp181, bytetest_a3);
          carryQ.cq[64] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp200, carryQ.get_carry_in(64), r800_ffff_tmp201));
          r800_ffff_tmp202 = simd_and(r800_ffff_tmp201, bytetest_8e_8f);
          struct_Po.cc = simd_or(r800_ffff_tmp202, struct_Po.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a3 = simd_and(r800_ffff_tmp2, tmp57);
          r800_ffff_tmp203 = simd_and(tmp50, tmp9);
          bytetest_b8_ba = simd_andc(r800_ffff_tmp203, tmp22);
          r800_ffff_tmp204 = simd_and(r800_ffff_tmp201, bytetest_b8_ba);
          struct_Po.cc = simd_or(r800_ffff_tmp204, struct_Po.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a4 = simd_and(r800_ffff_tmp2, r800_ffff_tmp22);
          bytetest_ae_af = simd_and(r800_ffff_tmp2, tmp14);
          r800_ffff_tmp205 = simd_and(r800_ffff_tmp181, bytetest_a4);
          carryQ.cq[65] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp205, carryQ.get_carry_in(65), r800_ffff_tmp206));
          r800_ffff_tmp207 = simd_and(r800_ffff_tmp206, bytetest_ae_af);
          struct_Po.cc = simd_or(r800_ffff_tmp207, struct_Po.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a5 = simd_and(r800_ffff_tmp2, tmp64);
          bytetest_9f_9f = simd_and(tmp32, tmp23);
          r800_ffff_tmp208 = simd_and(r800_ffff_tmp181, bytetest_a5);
          carryQ.cq[66] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp208, carryQ.get_carry_in(66), r800_ffff_tmp209));
          r800_ffff_tmp210 = simd_and(r800_ffff_tmp209, bytetest_9f_9f);
          struct_Po.cc = simd_or(r800_ffff_tmp210, struct_Po.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a7 = simd_and(r800_ffff_tmp2, tmp68);
          r800_ffff_tmp211 = simd_or(simd_and(basis_bits.bit_4, tmp37), simd_andc(tmp69, basis_bits.bit_4));
          bytetest_81_8d = simd_and(tmp35, r800_ffff_tmp211);
          r800_ffff_tmp212 = simd_and(r800_ffff_tmp181, bytetest_a7);
          carryQ.cq[67] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp212, carryQ.get_carry_in(67), r800_ffff_tmp213));
          r800_ffff_tmp214 = simd_and(r800_ffff_tmp213, bytetest_81_8d);
          struct_Po.cc = simd_or(r800_ffff_tmp214, struct_Po.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a7 = simd_and(r800_ffff_tmp2, tmp68);
          bytetest_9e_9f = simd_and(tmp32, tmp14);
          r800_ffff_tmp215 = simd_and(r800_ffff_tmp213, bytetest_9e_9f);
          struct_Po.cc = simd_or(r800_ffff_tmp215, struct_Po.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a9 = simd_and(r800_ffff_tmp2, r800_ffff_tmp26);
          bytetest_9c_9f = simd_and(tmp32, tmp12);
          r800_ffff_tmp216 = simd_and(r800_ffff_tmp181, bytetest_a9);
          carryQ.cq[68] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp216, carryQ.get_carry_in(68), r800_ffff_tmp217));
          r800_ffff_tmp218 = simd_and(r800_ffff_tmp217, bytetest_9c_9f);
          struct_Po.cc = simd_or(r800_ffff_tmp218, struct_Po.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_ab = simd_and(r800_ffff_tmp2, r800_ffff_tmp18);
          bytetest_9e_9f = simd_and(tmp32, tmp14);
          r800_ffff_tmp219 = simd_and(r800_ffff_tmp181, bytetest_ab);
          carryQ.cq[69] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp219, carryQ.get_carry_in(69), r800_ffff_tmp220));
          r800_ffff_tmp221 = simd_and(r800_ffff_tmp220, bytetest_9e_9f);
          struct_Po.cc = simd_or(r800_ffff_tmp221, struct_Po.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_ab = simd_and(r800_ffff_tmp2, r800_ffff_tmp18);
          bytetest_b0_b1 = simd_andc(tmp50, tmp58);
          r800_ffff_tmp222 = simd_and(r800_ffff_tmp220, bytetest_b0_b1);
          struct_Po.cc = simd_or(r800_ffff_tmp222, struct_Po.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_af = simd_and(r800_ffff_tmp2, tmp23);
          bytetest_ab_ab = simd_and(r800_ffff_tmp2, r800_ffff_tmp18);
          r800_ffff_tmp223 = simd_and(r800_ffff_tmp181, bytetest_af);
          carryQ.cq[70] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp223, carryQ.get_carry_in(70), r800_ffff_tmp224));
          r800_ffff_tmp225 = simd_and(r800_ffff_tmp224, bytetest_ab_ab);
          struct_Po.cc = simd_or(r800_ffff_tmp225, struct_Po.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp23);
          bytetest_b8 = simd_and(tmp50, r800_ffff_tmp95);
          bytetest_90_96 = simd_andc(r800_ffff_tmp42, tmp38);
          r800_ffff_tmp226 = simd_and(tmp41, bytetest_ef);
          carryQ.cq[71] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp226, carryQ.get_carry_in(71), r800_ffff_tmp227));
          r800_ffff_tmp228 = simd_and(r800_ffff_tmp227, bytetest_b8);
          carryQ.cq[72] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp228, carryQ.get_carry_in(72), r800_ffff_tmp229));
          r800_ffff_tmp230 = simd_and(r800_ffff_tmp229, bytetest_90_96);
          struct_Po.cc = simd_or(r800_ffff_tmp230, struct_Po.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp23);
          bytetest_b8 = simd_and(tmp50, r800_ffff_tmp95);
          bytetest_99_99 = simd_and(tmp32, r800_ffff_tmp26);
          r800_ffff_tmp231 = simd_and(r800_ffff_tmp229, bytetest_99_99);
          struct_Po.cc = simd_or(r800_ffff_tmp231, struct_Po.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp23);
          bytetest_b8 = simd_and(tmp50, r800_ffff_tmp95);
          bytetest_b0_b0 = simd_andc(tmp50, tmp19);
          r800_ffff_tmp232 = simd_and(r800_ffff_tmp229, bytetest_b0_b0);
          struct_Po.cc = simd_or(r800_ffff_tmp232, struct_Po.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp23);
          bytetest_b9 = simd_and(tmp50, r800_ffff_tmp26);
          r800_ffff_tmp233 = simd_and(tmp35, tmp7);
          bytetest_85_86 = simd_and(r800_ffff_tmp233, r800_ffff_tmp48);
          r800_ffff_tmp234 = simd_and(r800_ffff_tmp227, bytetest_b9);
          carryQ.cq[73] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp234, carryQ.get_carry_in(73), r800_ffff_tmp235));
          r800_ffff_tmp236 = simd_and(r800_ffff_tmp235, bytetest_85_86);
          struct_Po.cc = simd_or(r800_ffff_tmp236, struct_Po.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp23);
          bytetest_b9 = simd_and(tmp50, r800_ffff_tmp26);
          bytetest_89_8c = simd_and(r800_ffff_tmp50, r800_ffff_tmp147);
          r800_ffff_tmp237 = simd_and(r800_ffff_tmp235, bytetest_89_8c);
          struct_Po.cc = simd_or(r800_ffff_tmp237, struct_Po.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp23);
          bytetest_b9 = simd_and(tmp50, r800_ffff_tmp26);
          r800_ffff_tmp238 = simd_andc(tmp32, tmp4);
          bytetest_90_92 = simd_andc(r800_ffff_tmp238, tmp22);
          r800_ffff_tmp239 = simd_and(r800_ffff_tmp235, bytetest_90_92);
          struct_Po.cc = simd_or(r800_ffff_tmp239, struct_Po.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp23);
          bytetest_b9 = simd_and(tmp50, r800_ffff_tmp26);
          bytetest_94_97 = simd_and(tmp32, tmp7);
          r800_ffff_tmp240 = simd_and(r800_ffff_tmp235, bytetest_94_97);
          struct_Po.cc = simd_or(r800_ffff_tmp240, struct_Po.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp23);
          bytetest_b9 = simd_and(tmp50, r800_ffff_tmp26);
          r800_ffff_tmp241 = simd_not(tmp82);
          r800_ffff_tmp242 = simd_and(basis_bits.bit_3, tmp23);
          r800_ffff_tmp243 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp241), simd_andc(r800_ffff_tmp242, basis_bits.bit_2));
          bytetest_9f_a1 = simd_and(tmp31, r800_ffff_tmp243);
          r800_ffff_tmp244 = simd_and(r800_ffff_tmp235, bytetest_9f_a1);
          struct_Po.cc = simd_or(r800_ffff_tmp244, struct_Po.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp23);
          bytetest_b9 = simd_and(tmp50, r800_ffff_tmp26);
          bytetest_a8_a8 = simd_and(r800_ffff_tmp2, r800_ffff_tmp95);
          r800_ffff_tmp245 = simd_and(r800_ffff_tmp235, bytetest_a8_a8);
          struct_Po.cc = simd_or(r800_ffff_tmp245, struct_Po.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp23);
          bytetest_b9 = simd_and(tmp50, r800_ffff_tmp26);
          bytetest_aa_ab = simd_and(r800_ffff_tmp2, tmp17);
          r800_ffff_tmp246 = simd_and(r800_ffff_tmp235, bytetest_aa_ab);
          struct_Po.cc = simd_or(r800_ffff_tmp246, struct_Po.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp23);
          bytetest_bc = simd_and(tmp50, tmp13);
          bytetest_81_83 = simd_and(bytetest_80_83, tmp6);
          r800_ffff_tmp247 = simd_and(r800_ffff_tmp227, bytetest_bc);
          carryQ.cq[74] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp247, carryQ.get_carry_in(74), r800_ffff_tmp248));
          r800_ffff_tmp249 = simd_and(r800_ffff_tmp248, bytetest_81_83);
          struct_Po.cc = simd_or(r800_ffff_tmp249, struct_Po.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp23);
          bytetest_bc = simd_and(tmp50, tmp13);
          bytetest_85_87 = simd_and(r800_ffff_tmp233, tmp6);
          r800_ffff_tmp250 = simd_and(r800_ffff_tmp248, bytetest_85_87);
          struct_Po.cc = simd_or(r800_ffff_tmp250, struct_Po.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp23);
          bytetest_bc = simd_and(tmp50, tmp13);
          bytetest_8a_8a = simd_and(tmp35, tmp11);
          r800_ffff_tmp251 = simd_and(r800_ffff_tmp248, bytetest_8a_8a);
          struct_Po.cc = simd_or(r800_ffff_tmp251, struct_Po.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp23);
          bytetest_bc = simd_and(tmp50, tmp13);
          bytetest_8c_8c = simd_and(tmp35, tmp13);
          r800_ffff_tmp252 = simd_and(r800_ffff_tmp248, bytetest_8c_8c);
          struct_Po.cc = simd_or(r800_ffff_tmp252, struct_Po.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp23);
          bytetest_bc = simd_and(tmp50, tmp13);
          bytetest_8e_8f = simd_and(tmp35, tmp14);
          r800_ffff_tmp253 = simd_and(r800_ffff_tmp248, bytetest_8e_8f);
          struct_Po.cc = simd_or(r800_ffff_tmp253, struct_Po.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp23);
          bytetest_bc = simd_and(tmp50, tmp13);
          bytetest_9a_9b = simd_and(tmp32, tmp17);
          r800_ffff_tmp254 = simd_and(r800_ffff_tmp248, bytetest_9a_9b);
          struct_Po.cc = simd_or(r800_ffff_tmp254, struct_Po.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp23);
          bytetest_bc = simd_and(tmp50, tmp13);
          r800_ffff_tmp255 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp105), simd_andc(r800_ffff_tmp242, basis_bits.bit_2));
          bytetest_9f_a0 = simd_and(tmp31, r800_ffff_tmp255);
          r800_ffff_tmp256 = simd_and(r800_ffff_tmp248, bytetest_9f_a0);
          struct_Po.cc = simd_or(r800_ffff_tmp256, struct_Po.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp23);
          bytetest_bc = simd_and(tmp50, tmp13);
          bytetest_bc_bc = simd_and(tmp50, tmp13);
          r800_ffff_tmp257 = simd_and(r800_ffff_tmp248, bytetest_bc_bc);
          struct_Po.cc = simd_or(r800_ffff_tmp257, struct_Po.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp23);
          bytetest_bd = simd_and(tmp50, r800_ffff_tmp60);
          bytetest_a1_a1 = simd_and(r800_ffff_tmp2, tmp34);
          r800_ffff_tmp258 = simd_and(r800_ffff_tmp227, bytetest_bd);
          carryQ.cq[75] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp258, carryQ.get_carry_in(75), r800_ffff_tmp259));
          r800_ffff_tmp260 = simd_and(r800_ffff_tmp259, bytetest_a1_a1);
          struct_Po.cc = simd_or(r800_ffff_tmp260, struct_Po.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp23);
          bytetest_bd = simd_and(tmp50, r800_ffff_tmp60);
          bytetest_a4_a5 = simd_and(r800_ffff_tmp2, r800_ffff_tmp13);
          r800_ffff_tmp261 = simd_and(r800_ffff_tmp259, bytetest_a4_a5);
          struct_Po.cc = simd_or(r800_ffff_tmp261, struct_Po.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(22, 54);
        }
        bytetest_f0 = simd_andc(tmp30, tmp19);
        bytetest_90 = simd_andc(tmp32, tmp19);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp89 = simd_and(tmp43, bytetest_90);
        carryQ.cq[76] = carryout2carry(pablo_blk_Advance(tmp89, carryQ.get_carry_in(76), tmp90));
        tmp91 = simd_and(tmp90, bytetest_80_bf);
        if ((bitblock::any(tmp91) || carryQ.CarryTest(77, 8))) {
          bytetest_f0 = simd_andc(tmp30, tmp19);
          bytetest_90 = simd_andc(tmp32, tmp19);
          r10000_10fff_tmp1 = simd_andc(tmp7, tmp6);
          bytetest_84 = simd_and(tmp35, r10000_10fff_tmp1);
          bytetest_80_82 = simd_andc(bytetest_80_83, tmp22);
          r10000_10fff_tmp2 = simd_and(tmp43, bytetest_90);
          carryQ.cq[77] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp2, carryQ.get_carry_in(77), r10000_10fff_tmp3));
          r10000_10fff_tmp4 = simd_and(r10000_10fff_tmp3, bytetest_84);
          carryQ.cq[78] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp4, carryQ.get_carry_in(78), r10000_10fff_tmp5));
          r10000_10fff_tmp6 = simd_and(r10000_10fff_tmp5, bytetest_80_82);
          struct_Po.cc = simd_or(r10000_10fff_tmp6, struct_Po.cc);
          bytetest_f0 = simd_andc(tmp30, tmp19);
          bytetest_90 = simd_andc(tmp32, tmp19);
          r10000_10fff_tmp7 = simd_and(tmp12, tmp10);
          bytetest_8e = simd_and(tmp35, r10000_10fff_tmp7);
          bytetest_9f_9f = simd_and(tmp32, tmp23);
          r10000_10fff_tmp8 = simd_and(r10000_10fff_tmp3, bytetest_8e);
          carryQ.cq[79] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp8, carryQ.get_carry_in(79), r10000_10fff_tmp9));
          r10000_10fff_tmp10 = simd_and(r10000_10fff_tmp9, bytetest_9f_9f);
          struct_Po.cc = simd_or(r10000_10fff_tmp10, struct_Po.cc);
          bytetest_f0 = simd_andc(tmp30, tmp19);
          bytetest_90 = simd_andc(tmp32, tmp19);
          bytetest_8f = simd_and(tmp35, tmp23);
          bytetest_90_90 = simd_andc(tmp32, tmp19);
          r10000_10fff_tmp11 = simd_and(r10000_10fff_tmp3, bytetest_8f);
          carryQ.cq[80] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp11, carryQ.get_carry_in(80), r10000_10fff_tmp12));
          r10000_10fff_tmp13 = simd_and(r10000_10fff_tmp12, bytetest_90_90);
          struct_Po.cc = simd_or(r10000_10fff_tmp13, struct_Po.cc);
          bytetest_f0 = simd_andc(tmp30, tmp19);
          bytetest_90 = simd_andc(tmp32, tmp19);
          r10000_10fff_tmp14 = simd_and(tmp31, tmp2);
          bytetest_a1 = simd_and(r10000_10fff_tmp14, tmp34);
          bytetest_97_97 = simd_and(tmp32, tmp68);
          r10000_10fff_tmp15 = simd_and(r10000_10fff_tmp3, bytetest_a1);
          carryQ.cq[81] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp15, carryQ.get_carry_in(81), r10000_10fff_tmp16));
          r10000_10fff_tmp17 = simd_and(r10000_10fff_tmp16, bytetest_97_97);
          struct_Po.cc = simd_or(r10000_10fff_tmp17, struct_Po.cc);
          bytetest_f0 = simd_andc(tmp30, tmp19);
          bytetest_90 = simd_andc(tmp32, tmp19);
          bytetest_a4 = simd_and(r10000_10fff_tmp14, r10000_10fff_tmp1);
          bytetest_9f_9f = simd_and(tmp32, tmp23);
          r10000_10fff_tmp18 = simd_and(r10000_10fff_tmp3, bytetest_a4);
          carryQ.cq[82] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp18, carryQ.get_carry_in(82), r10000_10fff_tmp19));
          r10000_10fff_tmp20 = simd_and(r10000_10fff_tmp19, bytetest_9f_9f);
          struct_Po.cc = simd_or(r10000_10fff_tmp20, struct_Po.cc);
          bytetest_f0 = simd_andc(tmp30, tmp19);
          bytetest_90 = simd_andc(tmp32, tmp19);
          bytetest_a4 = simd_and(r10000_10fff_tmp14, r10000_10fff_tmp1);
          bytetest_bf_bf = simd_and(tmp50, tmp23);
          r10000_10fff_tmp21 = simd_and(r10000_10fff_tmp19, bytetest_bf_bf);
          struct_Po.cc = simd_or(r10000_10fff_tmp21, struct_Po.cc);
          bytetest_f0 = simd_andc(tmp30, tmp19);
          bytetest_90 = simd_andc(tmp32, tmp19);
          r10000_10fff_tmp22 = simd_and(tmp9, tmp33);
          bytetest_a9 = simd_and(r10000_10fff_tmp14, r10000_10fff_tmp22);
          r10000_10fff_tmp23 = simd_and(basis_bits.bit_4, tmp69);
          bytetest_90_98 = simd_andc(tmp32, r10000_10fff_tmp23);
          r10000_10fff_tmp24 = simd_and(r10000_10fff_tmp3, bytetest_a9);
          carryQ.cq[83] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp24, carryQ.get_carry_in(83), r10000_10fff_tmp25));
          r10000_10fff_tmp26 = simd_and(r10000_10fff_tmp25, bytetest_90_98);
          struct_Po.cc = simd_or(r10000_10fff_tmp26, struct_Po.cc);
          bytetest_f0 = simd_andc(tmp30, tmp19);
          bytetest_90 = simd_andc(tmp32, tmp19);
          bytetest_a9 = simd_and(r10000_10fff_tmp14, r10000_10fff_tmp22);
          bytetest_bf_bf = simd_and(tmp50, tmp23);
          r10000_10fff_tmp27 = simd_and(r10000_10fff_tmp25, bytetest_bf_bf);
          struct_Po.cc = simd_or(r10000_10fff_tmp27, struct_Po.cc);
          bytetest_f0 = simd_andc(tmp30, tmp19);
          bytetest_90 = simd_andc(tmp32, tmp19);
          bytetest_ac = simd_and(r10000_10fff_tmp14, tmp13);
          bytetest_b9_bf = simd_and(tmp51, tmp69);
          r10000_10fff_tmp28 = simd_and(r10000_10fff_tmp3, bytetest_ac);
          carryQ.cq[84] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp28, carryQ.get_carry_in(84), r10000_10fff_tmp29));
          r10000_10fff_tmp30 = simd_and(r10000_10fff_tmp29, bytetest_b9_bf);
          struct_Po.cc = simd_or(r10000_10fff_tmp30, struct_Po.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(77, 8);
        }
        carryQ.CarryQ_Adjust(85);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Po & struct_Po, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_21_23, tmp7, tmp8;
		BitBlock bytetest_25_27, tmp9, tmp10, tmp11, bytetest_2a_2a, tmp12, tmp13;
		BitBlock bytetest_2c_2c, tmp14, bytetest_2e_2f, tmp15, tmp16, tmp17;
		BitBlock bytetest_3a_3b, tmp18, tmp19, tmp20, tmp21, tmp22, tmp23, tmp24;
		BitBlock tmp25, bytetest_3f_40, tmp26, tmp27, tmp28, bytetest_5c_5c, tmp29;
		BitBlock tmp30, bytetest_f0, tmp31, tmp32, tmp33, tmp34, bytetest_91, tmp35;
		BitBlock bytetest_81, tmp36, tmp37, tmp38, tmp39, bytetest_87_8d, tmp40, tmp41;
		BitBlock tmp42, tmp43, tmp44, tmp45, tmp46, tmp47, tmp48, tmp49, bytetest_82;
		BitBlock tmp50, tmp51, tmp52, tmp53, bytetest_bb_bc, tmp54, tmp55, tmp56;
		BitBlock tmp57, bytetest_83, tmp58, bytetest_80_81, tmp59, tmp60, tmp61;
		BitBlock bytetest_be_bf, tmp62, tmp63, tmp64, bytetest_85, bytetest_80_83;
		BitBlock tmp65, tmp66, tmp67, tmp68, bytetest_87, tmp69, tmp70, tmp71, tmp72;
		BitBlock bytetest_85_88, tmp73, tmp74, tmp75, bytetest_92, bytetest_b0_b3;
		BitBlock tmp76, tmp77, tmp78, tmp79, tmp80, tmp81, tmp82, bytetest_c2_df;
		BitBlock r80_7ff_tmp1, bytetest_c2, r80_7ff_tmp2, bytetest_a1_a1, r80_7ff_tmp3;
		BitBlock r80_7ff_tmp4, r80_7ff_tmp5, bytetest_a7_a7, r80_7ff_tmp6;
		BitBlock r80_7ff_tmp7, bytetest_b6_b7, r80_7ff_tmp8, bytetest_bf_bf;
		BitBlock r80_7ff_tmp9, r80_7ff_tmp10, bytetest_cd, r80_7ff_tmp11;
		BitBlock bytetest_be_be, r80_7ff_tmp12, r80_7ff_tmp13, r80_7ff_tmp14;
		BitBlock bytetest_ce, bytetest_87_87, r80_7ff_tmp15, r80_7ff_tmp16;
		BitBlock r80_7ff_tmp17, r80_7ff_tmp18, bytetest_d5, r80_7ff_tmp19;
		BitBlock r80_7ff_tmp20, bytetest_9a_9f, r80_7ff_tmp21, r80_7ff_tmp22;
		BitBlock r80_7ff_tmp23, r80_7ff_tmp24, bytetest_d6, r80_7ff_tmp25;
		BitBlock bytetest_89_89, r80_7ff_tmp26, r80_7ff_tmp27, r80_7ff_tmp28;
		BitBlock bytetest_d7, bytetest_80_80, r80_7ff_tmp29, r80_7ff_tmp30;
		BitBlock r80_7ff_tmp31, bytetest_83_83, r80_7ff_tmp32, bytetest_86_86;
		BitBlock r80_7ff_tmp33, r80_7ff_tmp34, bytetest_b3_b4, r80_7ff_tmp35;
		BitBlock r80_7ff_tmp36, bytetest_d8, r80_7ff_tmp37, r80_7ff_tmp38;
		BitBlock r80_7ff_tmp39, bytetest_89_8a, r80_7ff_tmp40, r80_7ff_tmp41;
		BitBlock r80_7ff_tmp42, r80_7ff_tmp43, bytetest_8c_8d, r80_7ff_tmp44;
		BitBlock r80_7ff_tmp45, bytetest_9b_9b, r80_7ff_tmp46, bytetest_9e_9f;
		BitBlock r80_7ff_tmp47, bytetest_d9, r80_7ff_tmp48, r80_7ff_tmp49;
		BitBlock r80_7ff_tmp50, bytetest_aa_ad, r80_7ff_tmp51, r80_7ff_tmp52;
		BitBlock r80_7ff_tmp53, bytetest_db, r80_7ff_tmp54, bytetest_94_94;
		BitBlock r80_7ff_tmp55, r80_7ff_tmp56, r80_7ff_tmp57, bytetest_dc;
		BitBlock r80_7ff_tmp58, bytetest_80_8d, r80_7ff_tmp59, r80_7ff_tmp60;
		BitBlock r80_7ff_tmp61, bytetest_df, r80_7ff_tmp62, r80_7ff_tmp63;
		BitBlock bytetest_b7_b9, r80_7ff_tmp64, r80_7ff_tmp65, r80_7ff_tmp66, tmp83;
		BitBlock tmp84, bytetest_e1_ef, bytetest_e0, bytetest_a0_bf, tmp85, tmp86;
		BitBlock tmp87, tmp88, r800_ffff_tmp1, r800_ffff_tmp2, bytetest_a0;
		BitBlock r800_ffff_tmp3, bytetest_b0_be, r800_ffff_tmp4, r800_ffff_tmp5;
		BitBlock r800_ffff_tmp6, r800_ffff_tmp7, r800_ffff_tmp8, bytetest_a1;
		BitBlock r800_ffff_tmp9, bytetest_9e_9e, r800_ffff_tmp10, r800_ffff_tmp11;
		BitBlock r800_ffff_tmp12, bytetest_a5, r800_ffff_tmp13, bytetest_a4_a5;
		BitBlock r800_ffff_tmp14, r800_ffff_tmp15, r800_ffff_tmp16, bytetest_b0_b0;
		BitBlock r800_ffff_tmp17, r800_ffff_tmp18, bytetest_ab, r800_ffff_tmp19;
		BitBlock r800_ffff_tmp20, r800_ffff_tmp21, bytetest_b7, r800_ffff_tmp22;
		BitBlock bytetest_b4_b4, r800_ffff_tmp23, r800_ffff_tmp24, r800_ffff_tmp25;
		BitBlock r800_ffff_tmp26, bytetest_b9, bytetest_8f_8f, r800_ffff_tmp27;
		BitBlock r800_ffff_tmp28, r800_ffff_tmp29, bytetest_9a_9b, r800_ffff_tmp30;
		BitBlock bytetest_bc, r800_ffff_tmp31, r800_ffff_tmp32, r800_ffff_tmp33;
		BitBlock r800_ffff_tmp34, bytetest_84_92, r800_ffff_tmp35, r800_ffff_tmp36;
		BitBlock r800_ffff_tmp37, r800_ffff_tmp38, bytetest_be, bytetest_85_85;
		BitBlock r800_ffff_tmp39, r800_ffff_tmp40, r800_ffff_tmp41, bytetest_bf;
		BitBlock r800_ffff_tmp42, bytetest_90_94, r800_ffff_tmp43, r800_ffff_tmp44;
		BitBlock r800_ffff_tmp45, r800_ffff_tmp46, r800_ffff_tmp47, r800_ffff_tmp48;
		BitBlock bytetest_99_9a, r800_ffff_tmp49, bytetest_e1, r800_ffff_tmp50;
		BitBlock r800_ffff_tmp51, bytetest_8a_8f, r800_ffff_tmp52, r800_ffff_tmp53;
		BitBlock r800_ffff_tmp54, r800_ffff_tmp55, r800_ffff_tmp56, bytetest_bb_bb;
		BitBlock r800_ffff_tmp57, r800_ffff_tmp58, r800_ffff_tmp59, r800_ffff_tmp60;
		BitBlock bytetest_8d, r800_ffff_tmp61, bytetest_a0_a8, r800_ffff_tmp62;
		BitBlock r800_ffff_tmp63, r800_ffff_tmp64, bytetest_99, r800_ffff_tmp65;
		BitBlock bytetest_ad_ae, r800_ffff_tmp66, r800_ffff_tmp67, r800_ffff_tmp68;
		BitBlock bytetest_9b, r800_ffff_tmp69, r800_ffff_tmp70, r800_ffff_tmp71;
		BitBlock bytetest_ab_ad, r800_ffff_tmp72, r800_ffff_tmp73, r800_ffff_tmp74;
		BitBlock bytetest_9c, r800_ffff_tmp75, bytetest_b5_b6, r800_ffff_tmp76;
		BitBlock r800_ffff_tmp77, r800_ffff_tmp78, bytetest_9f, r800_ffff_tmp79;
		BitBlock bytetest_94_96, r800_ffff_tmp80, r800_ffff_tmp81, r800_ffff_tmp82;
		BitBlock bytetest_98_9a, r800_ffff_tmp83, r800_ffff_tmp84, bytetest_80_85;
		BitBlock r800_ffff_tmp85, r800_ffff_tmp86, r800_ffff_tmp87, r800_ffff_tmp88;
		BitBlock r800_ffff_tmp89, r800_ffff_tmp90, bytetest_87_8a, r800_ffff_tmp91;
		BitBlock bytetest_84_85, r800_ffff_tmp92, r800_ffff_tmp93, r800_ffff_tmp94;
		BitBlock r800_ffff_tmp95, bytetest_a8, r800_ffff_tmp96, r800_ffff_tmp97;
		BitBlock r800_ffff_tmp98, bytetest_aa, r800_ffff_tmp99, bytetest_a0_a6;
		BitBlock r800_ffff_tmp100, r800_ffff_tmp101, r800_ffff_tmp102, bytetest_a8_ad;
		BitBlock r800_ffff_tmp103, bytetest_ad, r800_ffff_tmp104, r800_ffff_tmp105;
		BitBlock r800_ffff_tmp106, r800_ffff_tmp107, r800_ffff_tmp108, bytetest_9a_a0;
		BitBlock r800_ffff_tmp109, r800_ffff_tmp110, r800_ffff_tmp111, bytetest_af;
		BitBlock bytetest_bc_bf, r800_ffff_tmp112, r800_ffff_tmp113, r800_ffff_tmp114;
		BitBlock bytetest_b0, bytetest_bb_bf, r800_ffff_tmp115, r800_ffff_tmp116;
		BitBlock r800_ffff_tmp117, bytetest_b1, r800_ffff_tmp118, r800_ffff_tmp119;
		BitBlock r800_ffff_tmp120, bytetest_b3, bytetest_80_87, r800_ffff_tmp121;
		BitBlock r800_ffff_tmp122, r800_ffff_tmp123, bytetest_93_93, r800_ffff_tmp124;
		BitBlock bytetest_e2, bytetest_80, r800_ffff_tmp125, bytetest_96_97;
		BitBlock r800_ffff_tmp126, r800_ffff_tmp127, r800_ffff_tmp128;
		BitBlock r800_ffff_tmp129, r800_ffff_tmp130, bytetest_a0_a7, r800_ffff_tmp131;
		BitBlock bytetest_b0_b8, r800_ffff_tmp132, r800_ffff_tmp133, r800_ffff_tmp134;
		BitBlock bytetest_bb_be, r800_ffff_tmp135, bytetest_81_83, r800_ffff_tmp136;
		BitBlock r800_ffff_tmp137, r800_ffff_tmp138, r800_ffff_tmp139;
		BitBlock r800_ffff_tmp140, r800_ffff_tmp141, bytetest_87_91, r800_ffff_tmp142;
		BitBlock r800_ffff_tmp143, r800_ffff_tmp144, r800_ffff_tmp145, bytetest_95_9e;
		BitBlock r800_ffff_tmp146, r800_ffff_tmp147, bytetest_b9_bc, r800_ffff_tmp148;
		BitBlock r800_ffff_tmp149, r800_ffff_tmp150, r800_ffff_tmp151, bytetest_b5;
		BitBlock r800_ffff_tmp152, r800_ffff_tmp153, r800_ffff_tmp154, bytetest_b8;
		BitBlock r800_ffff_tmp155, r800_ffff_tmp156, r800_ffff_tmp157;
		BitBlock r800_ffff_tmp158, bytetest_86_88, r800_ffff_tmp159, bytetest_8b_8b;
		BitBlock r800_ffff_tmp160, r800_ffff_tmp161, r800_ffff_tmp162, bytetest_8e_96;
		BitBlock r800_ffff_tmp163, r800_ffff_tmp164, bytetest_98_99, r800_ffff_tmp165;
		BitBlock r800_ffff_tmp166, r800_ffff_tmp167, r800_ffff_tmp168, bytetest_aa_ae;
		BitBlock r800_ffff_tmp169, bytetest_b0_b9, r800_ffff_tmp170, bytetest_e3;
		BitBlock r800_ffff_tmp171, r800_ffff_tmp172, r800_ffff_tmp173;
		BitBlock r800_ffff_tmp174, r800_ffff_tmp175, bytetest_bd_bd, r800_ffff_tmp176;
		BitBlock r800_ffff_tmp177, r800_ffff_tmp178, r800_ffff_tmp179, bytetest_ea;
		BitBlock bytetest_93, r800_ffff_tmp180, r800_ffff_tmp181, r800_ffff_tmp182;
		BitBlock r800_ffff_tmp183, r800_ffff_tmp184, bytetest_98, r800_ffff_tmp185;
		BitBlock bytetest_8d_8f, r800_ffff_tmp186, r800_ffff_tmp187, r800_ffff_tmp188;
		BitBlock bytetest_b3_b3, r800_ffff_tmp189, r800_ffff_tmp190, r800_ffff_tmp191;
		BitBlock r800_ffff_tmp192, r800_ffff_tmp193, bytetest_b2_b7, r800_ffff_tmp194;
		BitBlock r800_ffff_tmp195, r800_ffff_tmp196, bytetest_b4_b7, r800_ffff_tmp197;
		BitBlock r800_ffff_tmp198, r800_ffff_tmp199, bytetest_a3, bytetest_8e_8f;
		BitBlock r800_ffff_tmp200, r800_ffff_tmp201, r800_ffff_tmp202;
		BitBlock r800_ffff_tmp203, bytetest_b8_ba, r800_ffff_tmp204, bytetest_a4;
		BitBlock bytetest_ae_af, r800_ffff_tmp205, r800_ffff_tmp206, r800_ffff_tmp207;
		BitBlock bytetest_9f_9f, r800_ffff_tmp208, r800_ffff_tmp209, r800_ffff_tmp210;
		BitBlock bytetest_a7, r800_ffff_tmp211, bytetest_81_8d, r800_ffff_tmp212;
		BitBlock r800_ffff_tmp213, r800_ffff_tmp214, r800_ffff_tmp215, bytetest_a9;
		BitBlock bytetest_9c_9f, r800_ffff_tmp216, r800_ffff_tmp217, r800_ffff_tmp218;
		BitBlock r800_ffff_tmp219, r800_ffff_tmp220, r800_ffff_tmp221, bytetest_b0_b1;
		BitBlock r800_ffff_tmp222, bytetest_ab_ab, r800_ffff_tmp223, r800_ffff_tmp224;
		BitBlock r800_ffff_tmp225, bytetest_ef, bytetest_90_96, r800_ffff_tmp226;
		BitBlock r800_ffff_tmp227, r800_ffff_tmp228, r800_ffff_tmp229;
		BitBlock r800_ffff_tmp230, bytetest_99_99, r800_ffff_tmp231, r800_ffff_tmp232;
		BitBlock r800_ffff_tmp233, bytetest_85_86, r800_ffff_tmp234, r800_ffff_tmp235;
		BitBlock r800_ffff_tmp236, bytetest_89_8c, r800_ffff_tmp237, r800_ffff_tmp238;
		BitBlock bytetest_90_92, r800_ffff_tmp239, bytetest_94_97, r800_ffff_tmp240;
		BitBlock r800_ffff_tmp241, r800_ffff_tmp242, r800_ffff_tmp243, bytetest_9f_a1;
		BitBlock r800_ffff_tmp244, bytetest_a8_a8, r800_ffff_tmp245, bytetest_aa_ab;
		BitBlock r800_ffff_tmp246, r800_ffff_tmp247, r800_ffff_tmp248;
		BitBlock r800_ffff_tmp249, bytetest_85_87, r800_ffff_tmp250, bytetest_8a_8a;
		BitBlock r800_ffff_tmp251, bytetest_8c_8c, r800_ffff_tmp252, r800_ffff_tmp253;
		BitBlock r800_ffff_tmp254, r800_ffff_tmp255, bytetest_9f_a0, r800_ffff_tmp256;
		BitBlock bytetest_bc_bc, r800_ffff_tmp257, bytetest_bd, r800_ffff_tmp258;
		BitBlock r800_ffff_tmp259, r800_ffff_tmp260, r800_ffff_tmp261, bytetest_90;
		BitBlock bytetest_80_bf, tmp89, tmp90, tmp91, r10000_10fff_tmp1, bytetest_84;
		BitBlock bytetest_80_82, r10000_10fff_tmp2, r10000_10fff_tmp3;
		BitBlock r10000_10fff_tmp4, r10000_10fff_tmp5, r10000_10fff_tmp6;
		BitBlock r10000_10fff_tmp7, bytetest_8e, r10000_10fff_tmp8, r10000_10fff_tmp9;
		BitBlock r10000_10fff_tmp10, bytetest_8f, bytetest_90_90, r10000_10fff_tmp11;
		BitBlock r10000_10fff_tmp12, r10000_10fff_tmp13, r10000_10fff_tmp14;
		BitBlock bytetest_97_97, r10000_10fff_tmp15, r10000_10fff_tmp16;
		BitBlock r10000_10fff_tmp17, r10000_10fff_tmp18, r10000_10fff_tmp19;
		BitBlock r10000_10fff_tmp20, r10000_10fff_tmp21, r10000_10fff_tmp22;
		BitBlock r10000_10fff_tmp23, bytetest_90_98, r10000_10fff_tmp24;
		BitBlock r10000_10fff_tmp25, r10000_10fff_tmp26, r10000_10fff_tmp27;
		BitBlock bytetest_ac, bytetest_b9_bf, r10000_10fff_tmp28, r10000_10fff_tmp29;
		BitBlock r10000_10fff_tmp30;




        struct_Po.cc = simd<1>::constant<0>();
        tmp1 = simd_or(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp2, tmp1);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(tmp3, tmp4);
        tmp6 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        bytetest_21_23 = simd_and(tmp5, tmp6);
        struct_Po.cc = simd_or(bytetest_21_23, struct_Po.cc);
        tmp7 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp8 = simd_and(tmp3, tmp7);
        bytetest_25_27 = simd_and(tmp8, tmp6);
        struct_Po.cc = simd_or(bytetest_25_27, struct_Po.cc);
        tmp9 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp10 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp11 = simd_and(tmp9, tmp10);
        bytetest_2a_2a = simd_and(tmp3, tmp11);
        struct_Po.cc = simd_or(bytetest_2a_2a, struct_Po.cc);
        tmp12 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp13 = simd_andc(tmp12, tmp6);
        bytetest_2c_2c = simd_and(tmp3, tmp13);
        struct_Po.cc = simd_or(bytetest_2c_2c, struct_Po.cc);
        tmp14 = simd_and(tmp12, basis_bits.bit_6);
        bytetest_2e_2f = simd_and(tmp3, tmp14);
        struct_Po.cc = simd_or(bytetest_2e_2f, struct_Po.cc);
        tmp15 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp16 = simd_andc(tmp15, tmp1);
        tmp17 = simd_and(tmp9, basis_bits.bit_6);
        bytetest_3a_3b = simd_and(tmp16, tmp17);
        struct_Po.cc = simd_or(bytetest_3a_3b, struct_Po.cc);
        tmp18 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp19 = simd_or(tmp4, tmp6);
        tmp20 = simd_or(tmp18, tmp19);
        tmp21 = simd_not(tmp20);
        tmp22 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp23 = simd_and(tmp12, tmp22);
        tmp24 = simd_and(tmp15, tmp23);
        tmp25 = simd_or(simd_and(basis_bits.bit_1, tmp21), simd_andc(tmp24, basis_bits.bit_1));
        bytetest_3f_40 = simd_andc(tmp25, basis_bits.bit_0);
        struct_Po.cc = simd_or(bytetest_3f_40, struct_Po.cc);
        tmp26 = simd_andc(basis_bits.bit_1, basis_bits.bit_0);
        tmp27 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp28 = simd_and(tmp26, tmp27);
        bytetest_5c_5c = simd_and(tmp28, tmp13);
        struct_Po.cc = simd_or(bytetest_5c_5c, struct_Po.cc);
        tmp29 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp30 = simd_and(tmp29, tmp15);
        bytetest_f0 = simd_andc(tmp30, tmp19);
        tmp31 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp32 = simd_and(tmp31, tmp27);
        tmp33 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp34 = simd_andc(tmp33, tmp4);
        bytetest_91 = simd_and(tmp32, tmp34);
        tmp35 = simd_andc(tmp31, tmp18);
        bytetest_81 = simd_and(tmp35, tmp34);
        tmp36 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp37 = simd_not(tmp36);
        tmp38 = simd_and(basis_bits.bit_5, tmp22);
        tmp39 = simd_or(simd_and(basis_bits.bit_4, tmp37), simd_andc(tmp38, basis_bits.bit_4));
        bytetest_87_8d = simd_and(tmp35, tmp39);
        tmp40 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp40, carryQ.get_carry_in(0), tmp41));
        tmp42 = simd_and(tmp41, bytetest_f0);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp42, carryQ.get_carry_in(1), tmp43));
        tmp44 = simd_and(tmp43, bytetest_91);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp44, carryQ.get_carry_in(2), tmp45));
        tmp46 = simd_and(tmp45, bytetest_81);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp46, carryQ.get_carry_in(3), tmp47));
        tmp48 = simd_and(tmp47, bytetest_87_8d);
        struct_Po.cc = simd_or(tmp48, struct_Po.cc);
        bytetest_f0 = simd_andc(tmp30, tmp19);
        bytetest_91 = simd_and(tmp32, tmp34);
        tmp49 = simd_andc(tmp10, tmp4);
        bytetest_82 = simd_and(tmp35, tmp49);
        tmp50 = simd_and(tmp31, tmp15);
        tmp51 = simd_and(tmp50, basis_bits.bit_4);
        tmp52 = simd_not(tmp6);
        tmp53 = simd_or(simd_and(basis_bits.bit_5, tmp52), simd_andc(tmp22, basis_bits.bit_5));
        bytetest_bb_bc = simd_and(tmp51, tmp53);
        tmp54 = simd_and(tmp45, bytetest_82);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp54, carryQ.get_carry_in(4), tmp55));
        tmp56 = simd_and(tmp55, bytetest_bb_bc);
        struct_Po.cc = simd_or(tmp56, struct_Po.cc);
        bytetest_f0 = simd_andc(tmp30, tmp19);
        bytetest_91 = simd_and(tmp32, tmp34);
        tmp57 = simd_andc(tmp22, tmp4);
        bytetest_83 = simd_and(tmp35, tmp57);
        tmp58 = simd_or(tmp4, basis_bits.bit_6);
        bytetest_80_81 = simd_andc(tmp35, tmp58);
        tmp59 = simd_and(tmp45, bytetest_83);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp59, carryQ.get_carry_in(5), tmp60));
        tmp61 = simd_and(tmp60, bytetest_80_81);
        bytetest_82 = simd_and(tmp35, tmp49);
        bytetest_be_bf = simd_and(tmp50, tmp14);
        tmp62 = simd_and(tmp55, bytetest_be_bf);
        tmp63 = simd_or(tmp62, tmp61);
        struct_Po.cc = simd_or(tmp63, struct_Po.cc);
        bytetest_f0 = simd_andc(tmp30, tmp19);
        bytetest_91 = simd_and(tmp32, tmp34);
        tmp64 = simd_and(tmp7, tmp33);
        bytetest_85 = simd_and(tmp35, tmp64);
        bytetest_80_83 = simd_andc(tmp35, tmp4);
        tmp65 = simd_and(tmp45, bytetest_85);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp65, carryQ.get_carry_in(6), tmp66));
        tmp67 = simd_and(tmp66, bytetest_80_83);
        struct_Po.cc = simd_or(tmp67, struct_Po.cc);
        bytetest_f0 = simd_andc(tmp30, tmp19);
        bytetest_91 = simd_and(tmp32, tmp34);
        tmp68 = simd_and(tmp7, tmp22);
        bytetest_87 = simd_and(tmp35, tmp68);
        tmp69 = simd_or(basis_bits.bit_5, tmp6);
        tmp70 = simd_not(tmp69);
        tmp71 = simd_and(basis_bits.bit_5, tmp6);
        tmp72 = simd_or(simd_and(basis_bits.bit_4, tmp70), simd_andc(tmp71, basis_bits.bit_4));
        bytetest_85_88 = simd_and(tmp35, tmp72);
        tmp73 = simd_and(tmp45, bytetest_87);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp73, carryQ.get_carry_in(7), tmp74));
        tmp75 = simd_and(tmp74, bytetest_85_88);
        struct_Po.cc = simd_or(tmp75, struct_Po.cc);
        bytetest_f0 = simd_andc(tmp30, tmp19);
        bytetest_92 = simd_and(tmp32, tmp49);
        bytetest_91 = simd_and(tmp32, tmp34);
        bytetest_b0_b3 = simd_andc(tmp50, tmp4);
        tmp76 = simd_and(tmp43, bytetest_92);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(tmp76, carryQ.get_carry_in(8), tmp77));
        tmp78 = simd_and(tmp77, bytetest_91);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(tmp78, carryQ.get_carry_in(9), tmp79));
        tmp80 = simd_and(tmp79, bytetest_b0_b3);
        struct_Po.cc = simd_or(tmp80, struct_Po.cc);
        tmp81 = simd_andc(tmp29, basis_bits.bit_2);
        tmp82 = simd_or(basis_bits.bit_3, tmp58);
        bytetest_c2_df = simd_and(tmp81, tmp82);
        if ((bitblock::any(bytetest_c2_df) || carryQ.CarryTest(10, 11))) {
          r80_7ff_tmp1 = simd_andc(tmp29, tmp18);
          bytetest_c2 = simd_and(r80_7ff_tmp1, tmp49);
          r80_7ff_tmp2 = simd_and(tmp31, tmp2);
          bytetest_a1_a1 = simd_and(r80_7ff_tmp2, tmp34);
          r80_7ff_tmp3 = simd_and(tmp41, bytetest_c2);
          carryQ.cq[10] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp3, carryQ.get_carry_in(10), r80_7ff_tmp4));
          r80_7ff_tmp5 = simd_and(r80_7ff_tmp4, bytetest_a1_a1);
          struct_Po.cc = simd_or(r80_7ff_tmp5, struct_Po.cc);
          bytetest_c2 = simd_and(r80_7ff_tmp1, tmp49);
          bytetest_a7_a7 = simd_and(r80_7ff_tmp2, tmp68);
          r80_7ff_tmp6 = simd_and(r80_7ff_tmp4, bytetest_a7_a7);
          struct_Po.cc = simd_or(r80_7ff_tmp6, struct_Po.cc);
          bytetest_c2 = simd_and(r80_7ff_tmp1, tmp49);
          r80_7ff_tmp7 = simd_and(tmp7, basis_bits.bit_6);
          bytetest_b6_b7 = simd_and(tmp50, r80_7ff_tmp7);
          r80_7ff_tmp8 = simd_and(r80_7ff_tmp4, bytetest_b6_b7);
          struct_Po.cc = simd_or(r80_7ff_tmp8, struct_Po.cc);
          bytetest_c2 = simd_and(r80_7ff_tmp1, tmp49);
          bytetest_bf_bf = simd_and(tmp50, tmp23);
          r80_7ff_tmp9 = simd_and(r80_7ff_tmp4, bytetest_bf_bf);
          struct_Po.cc = simd_or(r80_7ff_tmp9, struct_Po.cc);
          r80_7ff_tmp10 = simd_and(tmp12, tmp33);
          bytetest_cd = simd_and(r80_7ff_tmp1, r80_7ff_tmp10);
          r80_7ff_tmp11 = simd_and(tmp12, tmp10);
          bytetest_be_be = simd_and(tmp50, r80_7ff_tmp11);
          r80_7ff_tmp12 = simd_and(tmp41, bytetest_cd);
          carryQ.cq[11] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp12, carryQ.get_carry_in(11), r80_7ff_tmp13));
          r80_7ff_tmp14 = simd_and(r80_7ff_tmp13, bytetest_be_be);
          struct_Po.cc = simd_or(r80_7ff_tmp14, struct_Po.cc);
          bytetest_ce = simd_and(r80_7ff_tmp1, r80_7ff_tmp11);
          bytetest_87_87 = simd_and(tmp35, tmp68);
          r80_7ff_tmp15 = simd_and(tmp41, bytetest_ce);
          carryQ.cq[12] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp15, carryQ.get_carry_in(12), r80_7ff_tmp16));
          r80_7ff_tmp17 = simd_and(r80_7ff_tmp16, bytetest_87_87);
          struct_Po.cc = simd_or(r80_7ff_tmp17, struct_Po.cc);
          r80_7ff_tmp18 = simd_and(tmp29, tmp27);
          bytetest_d5 = simd_and(r80_7ff_tmp18, tmp64);
          r80_7ff_tmp19 = simd_and(tmp32, basis_bits.bit_4);
          r80_7ff_tmp20 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
          bytetest_9a_9f = simd_and(r80_7ff_tmp19, r80_7ff_tmp20);
          r80_7ff_tmp21 = simd_and(tmp41, bytetest_d5);
          carryQ.cq[13] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp21, carryQ.get_carry_in(13), r80_7ff_tmp22));
          r80_7ff_tmp23 = simd_and(r80_7ff_tmp22, bytetest_9a_9f);
          struct_Po.cc = simd_or(r80_7ff_tmp23, struct_Po.cc);
          r80_7ff_tmp24 = simd_and(tmp7, tmp10);
          bytetest_d6 = simd_and(r80_7ff_tmp18, r80_7ff_tmp24);
          r80_7ff_tmp25 = simd_and(tmp9, tmp33);
          bytetest_89_89 = simd_and(tmp35, r80_7ff_tmp25);
          r80_7ff_tmp26 = simd_and(tmp41, bytetest_d6);
          carryQ.cq[14] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp26, carryQ.get_carry_in(14), r80_7ff_tmp27));
          r80_7ff_tmp28 = simd_and(r80_7ff_tmp27, bytetest_89_89);
          struct_Po.cc = simd_or(r80_7ff_tmp28, struct_Po.cc);
          bytetest_d7 = simd_and(r80_7ff_tmp18, tmp68);
          bytetest_80_80 = simd_andc(tmp35, tmp19);
          r80_7ff_tmp29 = simd_and(tmp41, bytetest_d7);
          carryQ.cq[15] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp29, carryQ.get_carry_in(15), r80_7ff_tmp30));
          r80_7ff_tmp31 = simd_and(r80_7ff_tmp30, bytetest_80_80);
          struct_Po.cc = simd_or(r80_7ff_tmp31, struct_Po.cc);
          bytetest_d7 = simd_and(r80_7ff_tmp18, tmp68);
          bytetest_83_83 = simd_and(tmp35, tmp57);
          r80_7ff_tmp32 = simd_and(r80_7ff_tmp30, bytetest_83_83);
          struct_Po.cc = simd_or(r80_7ff_tmp32, struct_Po.cc);
          bytetest_d7 = simd_and(r80_7ff_tmp18, tmp68);
          bytetest_86_86 = simd_and(tmp35, r80_7ff_tmp24);
          r80_7ff_tmp33 = simd_and(r80_7ff_tmp30, bytetest_86_86);
          struct_Po.cc = simd_or(r80_7ff_tmp33, struct_Po.cc);
          bytetest_d7 = simd_and(r80_7ff_tmp18, tmp68);
          r80_7ff_tmp34 = simd_andc(tmp50, basis_bits.bit_4);
          bytetest_b3_b4 = simd_and(r80_7ff_tmp34, tmp53);
          r80_7ff_tmp35 = simd_and(r80_7ff_tmp30, bytetest_b3_b4);
          struct_Po.cc = simd_or(r80_7ff_tmp35, struct_Po.cc);
          r80_7ff_tmp36 = simd_andc(tmp9, tmp6);
          bytetest_d8 = simd_and(r80_7ff_tmp18, r80_7ff_tmp36);
          r80_7ff_tmp37 = simd_and(tmp35, tmp9);
          r80_7ff_tmp38 = simd_not(basis_bits.bit_7);
          r80_7ff_tmp39 = simd_or(simd_and(basis_bits.bit_6, r80_7ff_tmp38), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
          bytetest_89_8a = simd_and(r80_7ff_tmp37, r80_7ff_tmp39);
          r80_7ff_tmp40 = simd_and(tmp41, bytetest_d8);
          carryQ.cq[16] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp40, carryQ.get_carry_in(16), r80_7ff_tmp41));
          r80_7ff_tmp42 = simd_and(r80_7ff_tmp41, bytetest_89_8a);
          struct_Po.cc = simd_or(r80_7ff_tmp42, struct_Po.cc);
          bytetest_d8 = simd_and(r80_7ff_tmp18, r80_7ff_tmp36);
          r80_7ff_tmp43 = simd_andc(tmp12, basis_bits.bit_6);
          bytetest_8c_8d = simd_and(tmp35, r80_7ff_tmp43);
          r80_7ff_tmp44 = simd_and(r80_7ff_tmp41, bytetest_8c_8d);
          struct_Po.cc = simd_or(r80_7ff_tmp44, struct_Po.cc);
          bytetest_d8 = simd_and(r80_7ff_tmp18, r80_7ff_tmp36);
          r80_7ff_tmp45 = simd_and(tmp9, tmp22);
          bytetest_9b_9b = simd_and(tmp32, r80_7ff_tmp45);
          r80_7ff_tmp46 = simd_and(r80_7ff_tmp41, bytetest_9b_9b);
          struct_Po.cc = simd_or(r80_7ff_tmp46, struct_Po.cc);
          bytetest_d8 = simd_and(r80_7ff_tmp18, r80_7ff_tmp36);
          bytetest_9e_9f = simd_and(tmp32, tmp14);
          r80_7ff_tmp47 = simd_and(r80_7ff_tmp41, bytetest_9e_9f);
          struct_Po.cc = simd_or(r80_7ff_tmp47, struct_Po.cc);
          bytetest_d9 = simd_and(r80_7ff_tmp18, r80_7ff_tmp25);
          r80_7ff_tmp48 = simd_and(r80_7ff_tmp2, basis_bits.bit_4);
          r80_7ff_tmp49 = simd_not(basis_bits.bit_6);
          r80_7ff_tmp50 = simd_or(simd_and(basis_bits.bit_5, r80_7ff_tmp49), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
          bytetest_aa_ad = simd_and(r80_7ff_tmp48, r80_7ff_tmp50);
          r80_7ff_tmp51 = simd_and(tmp41, bytetest_d9);
          carryQ.cq[17] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp51, carryQ.get_carry_in(17), r80_7ff_tmp52));
          r80_7ff_tmp53 = simd_and(r80_7ff_tmp52, bytetest_aa_ad);
          struct_Po.cc = simd_or(r80_7ff_tmp53, struct_Po.cc);
          bytetest_db = simd_and(r80_7ff_tmp18, r80_7ff_tmp45);
          r80_7ff_tmp54 = simd_andc(tmp7, tmp6);
          bytetest_94_94 = simd_and(tmp32, r80_7ff_tmp54);
          r80_7ff_tmp55 = simd_and(tmp41, bytetest_db);
          carryQ.cq[18] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp55, carryQ.get_carry_in(18), r80_7ff_tmp56));
          r80_7ff_tmp57 = simd_and(r80_7ff_tmp56, bytetest_94_94);
          struct_Po.cc = simd_or(r80_7ff_tmp57, struct_Po.cc);
          bytetest_dc = simd_and(r80_7ff_tmp18, tmp13);
          r80_7ff_tmp58 = simd_and(basis_bits.bit_4, tmp36);
          bytetest_80_8d = simd_andc(tmp35, r80_7ff_tmp58);
          r80_7ff_tmp59 = simd_and(tmp41, bytetest_dc);
          carryQ.cq[19] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp59, carryQ.get_carry_in(19), r80_7ff_tmp60));
          r80_7ff_tmp61 = simd_and(r80_7ff_tmp60, bytetest_80_8d);
          struct_Po.cc = simd_or(r80_7ff_tmp61, struct_Po.cc);
          bytetest_df = simd_and(r80_7ff_tmp18, tmp23);
          r80_7ff_tmp62 = simd_not(r80_7ff_tmp20);
          r80_7ff_tmp63 = simd_or(simd_and(basis_bits.bit_4, r80_7ff_tmp62), simd_andc(tmp38, basis_bits.bit_4));
          bytetest_b7_b9 = simd_and(tmp50, r80_7ff_tmp63);
          r80_7ff_tmp64 = simd_and(tmp41, bytetest_df);
          carryQ.cq[20] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp64, carryQ.get_carry_in(20), r80_7ff_tmp65));
          r80_7ff_tmp66 = simd_and(r80_7ff_tmp65, bytetest_b7_b9);
          struct_Po.cc = simd_or(r80_7ff_tmp66, struct_Po.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(10, 11);
        }
        tmp83 = simd_and(tmp29, tmp2);
        tmp84 = simd_or(basis_bits.bit_4, tmp69);
        bytetest_e1_ef = simd_and(tmp83, tmp84);
        bytetest_e0 = simd_andc(tmp83, tmp19);
        bytetest_a0_bf = simd_and(tmp31, basis_bits.bit_2);
        tmp85 = simd_and(tmp41, bytetest_e0);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(tmp85, carryQ.get_carry_in(21), tmp86));
        tmp87 = simd_and(tmp86, bytetest_a0_bf);
        tmp88 = simd_or(tmp87, bytetest_e1_ef);
        if ((bitblock::any(tmp88) || carryQ.CarryTest(22, 54))) {
          r800_ffff_tmp1 = simd_and(tmp29, tmp2);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp19);
          r800_ffff_tmp2 = simd_and(tmp31, tmp2);
          bytetest_a0 = simd_andc(r800_ffff_tmp2, tmp19);
          r800_ffff_tmp3 = simd_and(basis_bits.bit_4, tmp38);
          bytetest_b0_be = simd_andc(tmp50, r800_ffff_tmp3);
          r800_ffff_tmp4 = simd_and(tmp41, bytetest_e0);
          carryQ.cq[22] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp4, carryQ.get_carry_in(22), r800_ffff_tmp5));
          r800_ffff_tmp6 = simd_and(r800_ffff_tmp5, bytetest_a0);
          carryQ.cq[23] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp6, carryQ.get_carry_in(23), r800_ffff_tmp7));
          r800_ffff_tmp8 = simd_and(r800_ffff_tmp7, bytetest_b0_be);
          struct_Po.cc = simd_or(r800_ffff_tmp8, struct_Po.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp19);
          bytetest_a1 = simd_and(r800_ffff_tmp2, tmp34);
          r800_ffff_tmp9 = simd_and(tmp12, tmp10);
          bytetest_9e_9e = simd_and(tmp32, r800_ffff_tmp9);
          r800_ffff_tmp10 = simd_and(r800_ffff_tmp5, bytetest_a1);
          carryQ.cq[24] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp10, carryQ.get_carry_in(24), r800_ffff_tmp11));
          r800_ffff_tmp12 = simd_and(r800_ffff_tmp11, bytetest_9e_9e);
          struct_Po.cc = simd_or(r800_ffff_tmp12, struct_Po.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp19);
          bytetest_a5 = simd_and(r800_ffff_tmp2, tmp64);
          r800_ffff_tmp13 = simd_andc(tmp7, basis_bits.bit_6);
          bytetest_a4_a5 = simd_and(r800_ffff_tmp2, r800_ffff_tmp13);
          r800_ffff_tmp14 = simd_and(r800_ffff_tmp5, bytetest_a5);
          carryQ.cq[25] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp14, carryQ.get_carry_in(25), r800_ffff_tmp15));
          r800_ffff_tmp16 = simd_and(r800_ffff_tmp15, bytetest_a4_a5);
          struct_Po.cc = simd_or(r800_ffff_tmp16, struct_Po.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp19);
          bytetest_a5 = simd_and(r800_ffff_tmp2, tmp64);
          bytetest_b0_b0 = simd_andc(tmp50, tmp19);
          r800_ffff_tmp17 = simd_and(r800_ffff_tmp15, bytetest_b0_b0);
          struct_Po.cc = simd_or(r800_ffff_tmp17, struct_Po.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp19);
          r800_ffff_tmp18 = simd_and(tmp9, tmp22);
          bytetest_ab = simd_and(r800_ffff_tmp2, r800_ffff_tmp18);
          bytetest_b0_b0 = simd_andc(tmp50, tmp19);
          r800_ffff_tmp19 = simd_and(r800_ffff_tmp5, bytetest_ab);
          carryQ.cq[26] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp19, carryQ.get_carry_in(26), r800_ffff_tmp20));
          r800_ffff_tmp21 = simd_and(r800_ffff_tmp20, bytetest_b0_b0);
          struct_Po.cc = simd_or(r800_ffff_tmp21, struct_Po.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp19);
          bytetest_b7 = simd_and(tmp50, tmp68);
          r800_ffff_tmp22 = simd_andc(tmp7, tmp6);
          bytetest_b4_b4 = simd_and(tmp50, r800_ffff_tmp22);
          r800_ffff_tmp23 = simd_and(r800_ffff_tmp5, bytetest_b7);
          carryQ.cq[27] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp23, carryQ.get_carry_in(27), r800_ffff_tmp24));
          r800_ffff_tmp25 = simd_and(r800_ffff_tmp24, bytetest_b4_b4);
          struct_Po.cc = simd_or(r800_ffff_tmp25, struct_Po.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp19);
          r800_ffff_tmp26 = simd_and(tmp9, tmp33);
          bytetest_b9 = simd_and(tmp50, r800_ffff_tmp26);
          bytetest_8f_8f = simd_and(tmp35, tmp23);
          r800_ffff_tmp27 = simd_and(r800_ffff_tmp5, bytetest_b9);
          carryQ.cq[28] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp27, carryQ.get_carry_in(28), r800_ffff_tmp28));
          r800_ffff_tmp29 = simd_and(r800_ffff_tmp28, bytetest_8f_8f);
          struct_Po.cc = simd_or(r800_ffff_tmp29, struct_Po.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp19);
          bytetest_b9 = simd_and(tmp50, r800_ffff_tmp26);
          bytetest_9a_9b = simd_and(tmp32, tmp17);
          r800_ffff_tmp30 = simd_and(r800_ffff_tmp28, bytetest_9a_9b);
          struct_Po.cc = simd_or(r800_ffff_tmp30, struct_Po.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp19);
          bytetest_bc = simd_and(tmp50, tmp13);
          r800_ffff_tmp31 = simd_andc(tmp31, basis_bits.bit_2);
          r800_ffff_tmp32 = simd_or(tmp4, tmp22);
          r800_ffff_tmp33 = simd_not(r800_ffff_tmp32);
          r800_ffff_tmp34 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp33), simd_andc(tmp4, basis_bits.bit_3));
          bytetest_84_92 = simd_and(r800_ffff_tmp31, r800_ffff_tmp34);
          r800_ffff_tmp35 = simd_and(r800_ffff_tmp5, bytetest_bc);
          carryQ.cq[29] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp35, carryQ.get_carry_in(29), r800_ffff_tmp36));
          r800_ffff_tmp37 = simd_and(r800_ffff_tmp36, bytetest_84_92);
          struct_Po.cc = simd_or(r800_ffff_tmp37, struct_Po.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp19);
          bytetest_bc = simd_and(tmp50, tmp13);
          bytetest_94_94 = simd_and(tmp32, r800_ffff_tmp22);
          r800_ffff_tmp38 = simd_and(r800_ffff_tmp36, bytetest_94_94);
          struct_Po.cc = simd_or(r800_ffff_tmp38, struct_Po.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp19);
          bytetest_be = simd_and(tmp50, r800_ffff_tmp9);
          bytetest_85_85 = simd_and(tmp35, tmp64);
          r800_ffff_tmp39 = simd_and(r800_ffff_tmp5, bytetest_be);
          carryQ.cq[30] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp39, carryQ.get_carry_in(30), r800_ffff_tmp40));
          r800_ffff_tmp41 = simd_and(r800_ffff_tmp40, bytetest_85_85);
          struct_Po.cc = simd_or(r800_ffff_tmp41, struct_Po.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp19);
          bytetest_bf = simd_and(tmp50, tmp23);
          r800_ffff_tmp42 = simd_andc(tmp32, basis_bits.bit_4);
          bytetest_90_94 = simd_andc(r800_ffff_tmp42, tmp71);
          r800_ffff_tmp43 = simd_and(r800_ffff_tmp5, bytetest_bf);
          carryQ.cq[31] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp43, carryQ.get_carry_in(31), r800_ffff_tmp44));
          r800_ffff_tmp45 = simd_and(r800_ffff_tmp44, bytetest_90_94);
          struct_Po.cc = simd_or(r800_ffff_tmp45, struct_Po.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp19);
          bytetest_bf = simd_and(tmp50, tmp23);
          r800_ffff_tmp46 = simd_and(tmp32, tmp9);
          r800_ffff_tmp47 = simd_not(basis_bits.bit_7);
          r800_ffff_tmp48 = simd_or(simd_and(basis_bits.bit_6, r800_ffff_tmp47), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
          bytetest_99_9a = simd_and(r800_ffff_tmp46, r800_ffff_tmp48);
          r800_ffff_tmp49 = simd_and(r800_ffff_tmp44, bytetest_99_9a);
          struct_Po.cc = simd_or(r800_ffff_tmp49, struct_Po.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp34);
          bytetest_81 = simd_and(tmp35, tmp34);
          r800_ffff_tmp50 = simd_and(tmp35, basis_bits.bit_4);
          r800_ffff_tmp51 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
          bytetest_8a_8f = simd_and(r800_ffff_tmp50, r800_ffff_tmp51);
          r800_ffff_tmp52 = simd_and(tmp41, bytetest_e1);
          carryQ.cq[32] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp52, carryQ.get_carry_in(32), r800_ffff_tmp53));
          r800_ffff_tmp54 = simd_and(r800_ffff_tmp53, bytetest_81);
          carryQ.cq[33] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp54, carryQ.get_carry_in(33), r800_ffff_tmp55));
          r800_ffff_tmp56 = simd_and(r800_ffff_tmp55, bytetest_8a_8f);
          struct_Po.cc = simd_or(r800_ffff_tmp56, struct_Po.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp34);
          bytetest_83 = simd_and(tmp35, tmp57);
          bytetest_bb_bb = simd_and(tmp50, r800_ffff_tmp18);
          r800_ffff_tmp57 = simd_and(r800_ffff_tmp53, bytetest_83);
          carryQ.cq[34] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp57, carryQ.get_carry_in(34), r800_ffff_tmp58));
          r800_ffff_tmp59 = simd_and(r800_ffff_tmp58, bytetest_bb_bb);
          struct_Po.cc = simd_or(r800_ffff_tmp59, struct_Po.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp34);
          r800_ffff_tmp60 = simd_and(tmp12, tmp33);
          bytetest_8d = simd_and(tmp35, r800_ffff_tmp60);
          r800_ffff_tmp61 = simd_and(basis_bits.bit_4, tmp69);
          bytetest_a0_a8 = simd_andc(r800_ffff_tmp2, r800_ffff_tmp61);
          r800_ffff_tmp62 = simd_and(r800_ffff_tmp53, bytetest_8d);
          carryQ.cq[35] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp62, carryQ.get_carry_in(35), r800_ffff_tmp63));
          r800_ffff_tmp64 = simd_and(r800_ffff_tmp63, bytetest_a0_a8);
          struct_Po.cc = simd_or(r800_ffff_tmp64, struct_Po.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp34);
          bytetest_99 = simd_and(tmp32, r800_ffff_tmp26);
          r800_ffff_tmp65 = simd_and(r800_ffff_tmp2, tmp12);
          bytetest_ad_ae = simd_and(r800_ffff_tmp65, r800_ffff_tmp48);
          r800_ffff_tmp66 = simd_and(r800_ffff_tmp53, bytetest_99);
          carryQ.cq[36] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp66, carryQ.get_carry_in(36), r800_ffff_tmp67));
          r800_ffff_tmp68 = simd_and(r800_ffff_tmp67, bytetest_ad_ae);
          struct_Po.cc = simd_or(r800_ffff_tmp68, struct_Po.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp34);
          bytetest_9b = simd_and(tmp32, r800_ffff_tmp18);
          r800_ffff_tmp69 = simd_and(r800_ffff_tmp2, basis_bits.bit_4);
          r800_ffff_tmp70 = simd_not(basis_bits.bit_6);
          r800_ffff_tmp71 = simd_or(simd_and(basis_bits.bit_5, r800_ffff_tmp70), simd_andc(tmp22, basis_bits.bit_5));
          bytetest_ab_ad = simd_and(r800_ffff_tmp69, r800_ffff_tmp71);
          r800_ffff_tmp72 = simd_and(r800_ffff_tmp53, bytetest_9b);
          carryQ.cq[37] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp72, carryQ.get_carry_in(37), r800_ffff_tmp73));
          r800_ffff_tmp74 = simd_and(r800_ffff_tmp73, bytetest_ab_ad);
          struct_Po.cc = simd_or(r800_ffff_tmp74, struct_Po.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp34);
          bytetest_9c = simd_and(tmp32, tmp13);
          r800_ffff_tmp75 = simd_and(tmp50, tmp7);
          bytetest_b5_b6 = simd_and(r800_ffff_tmp75, r800_ffff_tmp48);
          r800_ffff_tmp76 = simd_and(r800_ffff_tmp53, bytetest_9c);
          carryQ.cq[38] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp76, carryQ.get_carry_in(38), r800_ffff_tmp77));
          r800_ffff_tmp78 = simd_and(r800_ffff_tmp77, bytetest_b5_b6);
          struct_Po.cc = simd_or(r800_ffff_tmp78, struct_Po.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp34);
          bytetest_9f = simd_and(tmp32, tmp23);
          r800_ffff_tmp79 = simd_and(tmp32, tmp7);
          bytetest_94_96 = simd_andc(r800_ffff_tmp79, tmp22);
          r800_ffff_tmp80 = simd_and(r800_ffff_tmp53, bytetest_9f);
          carryQ.cq[39] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp80, carryQ.get_carry_in(39), r800_ffff_tmp81));
          r800_ffff_tmp82 = simd_and(r800_ffff_tmp81, bytetest_94_96);
          struct_Po.cc = simd_or(r800_ffff_tmp82, struct_Po.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp34);
          bytetest_9f = simd_and(tmp32, tmp23);
          bytetest_98_9a = simd_andc(r800_ffff_tmp46, tmp22);
          r800_ffff_tmp83 = simd_and(r800_ffff_tmp81, bytetest_98_9a);
          struct_Po.cc = simd_or(r800_ffff_tmp83, struct_Po.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp34);
          bytetest_a0 = simd_andc(r800_ffff_tmp2, tmp19);
          r800_ffff_tmp84 = simd_andc(tmp35, basis_bits.bit_4);
          bytetest_80_85 = simd_andc(r800_ffff_tmp84, tmp36);
          r800_ffff_tmp85 = simd_and(r800_ffff_tmp53, bytetest_a0);
          carryQ.cq[40] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp85, carryQ.get_carry_in(40), r800_ffff_tmp86));
          r800_ffff_tmp87 = simd_and(r800_ffff_tmp86, bytetest_80_85);
          struct_Po.cc = simd_or(r800_ffff_tmp87, struct_Po.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp34);
          bytetest_a0 = simd_andc(r800_ffff_tmp2, tmp19);
          r800_ffff_tmp88 = simd_or(basis_bits.bit_5, tmp22);
          r800_ffff_tmp89 = simd_not(r800_ffff_tmp88);
          r800_ffff_tmp90 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp89), simd_andc(tmp38, basis_bits.bit_4));
          bytetest_87_8a = simd_and(tmp35, r800_ffff_tmp90);
          r800_ffff_tmp91 = simd_and(r800_ffff_tmp86, bytetest_87_8a);
          struct_Po.cc = simd_or(r800_ffff_tmp91, struct_Po.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp34);
          bytetest_a5 = simd_and(r800_ffff_tmp2, tmp64);
          bytetest_84_85 = simd_and(tmp35, r800_ffff_tmp13);
          r800_ffff_tmp92 = simd_and(r800_ffff_tmp53, bytetest_a5);
          carryQ.cq[41] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp92, carryQ.get_carry_in(41), r800_ffff_tmp93));
          r800_ffff_tmp94 = simd_and(r800_ffff_tmp93, bytetest_84_85);
          struct_Po.cc = simd_or(r800_ffff_tmp94, struct_Po.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp34);
          r800_ffff_tmp95 = simd_andc(tmp9, tmp6);
          bytetest_a8 = simd_and(r800_ffff_tmp2, r800_ffff_tmp95);
          bytetest_9e_9f = simd_and(tmp32, tmp14);
          r800_ffff_tmp96 = simd_and(r800_ffff_tmp53, bytetest_a8);
          carryQ.cq[42] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp96, carryQ.get_carry_in(42), r800_ffff_tmp97));
          r800_ffff_tmp98 = simd_and(r800_ffff_tmp97, bytetest_9e_9f);
          struct_Po.cc = simd_or(r800_ffff_tmp98, struct_Po.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp34);
          bytetest_aa = simd_and(r800_ffff_tmp2, tmp11);
          r800_ffff_tmp99 = simd_andc(r800_ffff_tmp2, basis_bits.bit_4);
          bytetest_a0_a6 = simd_andc(r800_ffff_tmp99, tmp38);
          r800_ffff_tmp100 = simd_and(r800_ffff_tmp53, bytetest_aa);
          carryQ.cq[43] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp100, carryQ.get_carry_in(43), r800_ffff_tmp101));
          r800_ffff_tmp102 = simd_and(r800_ffff_tmp101, bytetest_a0_a6);
          struct_Po.cc = simd_or(r800_ffff_tmp102, struct_Po.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp34);
          bytetest_aa = simd_and(r800_ffff_tmp2, tmp11);
          bytetest_a8_ad = simd_andc(r800_ffff_tmp69, tmp36);
          r800_ffff_tmp103 = simd_and(r800_ffff_tmp101, bytetest_a8_ad);
          struct_Po.cc = simd_or(r800_ffff_tmp103, struct_Po.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp34);
          bytetest_ad = simd_and(r800_ffff_tmp2, r800_ffff_tmp60);
          r800_ffff_tmp104 = simd_or(basis_bits.bit_3, tmp19);
          r800_ffff_tmp105 = simd_not(r800_ffff_tmp104);
          r800_ffff_tmp106 = simd_and(basis_bits.bit_4, r800_ffff_tmp51);
          r800_ffff_tmp107 = simd_and(basis_bits.bit_3, r800_ffff_tmp106);
          r800_ffff_tmp108 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp105), simd_andc(r800_ffff_tmp107, basis_bits.bit_2));
          bytetest_9a_a0 = simd_and(tmp31, r800_ffff_tmp108);
          r800_ffff_tmp109 = simd_and(r800_ffff_tmp53, bytetest_ad);
          carryQ.cq[44] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp109, carryQ.get_carry_in(44), r800_ffff_tmp110));
          r800_ffff_tmp111 = simd_and(r800_ffff_tmp110, bytetest_9a_a0);
          struct_Po.cc = simd_or(r800_ffff_tmp111, struct_Po.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp34);
          bytetest_af = simd_and(r800_ffff_tmp2, tmp23);
          bytetest_bc_bf = simd_and(tmp50, tmp12);
          r800_ffff_tmp112 = simd_and(r800_ffff_tmp53, bytetest_af);
          carryQ.cq[45] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp112, carryQ.get_carry_in(45), r800_ffff_tmp113));
          r800_ffff_tmp114 = simd_and(r800_ffff_tmp113, bytetest_bc_bf);
          struct_Po.cc = simd_or(r800_ffff_tmp114, struct_Po.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp34);
          bytetest_b0 = simd_andc(tmp50, tmp19);
          bytetest_bb_bf = simd_and(tmp51, r800_ffff_tmp88);
          r800_ffff_tmp115 = simd_and(r800_ffff_tmp53, bytetest_b0);
          carryQ.cq[46] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp115, carryQ.get_carry_in(46), r800_ffff_tmp116));
          r800_ffff_tmp117 = simd_and(r800_ffff_tmp116, bytetest_bb_bf);
          struct_Po.cc = simd_or(r800_ffff_tmp117, struct_Po.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp34);
          bytetest_b1 = simd_and(tmp50, tmp34);
          bytetest_be_bf = simd_and(tmp50, tmp14);
          r800_ffff_tmp118 = simd_and(r800_ffff_tmp53, bytetest_b1);
          carryQ.cq[47] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp118, carryQ.get_carry_in(47), r800_ffff_tmp119));
          r800_ffff_tmp120 = simd_and(r800_ffff_tmp119, bytetest_be_bf);
          struct_Po.cc = simd_or(r800_ffff_tmp120, struct_Po.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp34);
          bytetest_b3 = simd_and(tmp50, tmp57);
          bytetest_80_87 = simd_andc(tmp35, basis_bits.bit_4);
          r800_ffff_tmp121 = simd_and(r800_ffff_tmp53, bytetest_b3);
          carryQ.cq[48] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp121, carryQ.get_carry_in(48), r800_ffff_tmp122));
          r800_ffff_tmp123 = simd_and(r800_ffff_tmp122, bytetest_80_87);
          struct_Po.cc = simd_or(r800_ffff_tmp123, struct_Po.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp34);
          bytetest_b3 = simd_and(tmp50, tmp57);
          bytetest_93_93 = simd_and(tmp32, tmp57);
          r800_ffff_tmp124 = simd_and(r800_ffff_tmp122, bytetest_93_93);
          struct_Po.cc = simd_or(r800_ffff_tmp124, struct_Po.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp49);
          bytetest_80 = simd_andc(tmp35, tmp19);
          r800_ffff_tmp125 = simd_and(tmp7, basis_bits.bit_6);
          bytetest_96_97 = simd_and(tmp32, r800_ffff_tmp125);
          r800_ffff_tmp126 = simd_and(tmp41, bytetest_e2);
          carryQ.cq[49] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp126, carryQ.get_carry_in(49), r800_ffff_tmp127));
          r800_ffff_tmp128 = simd_and(r800_ffff_tmp127, bytetest_80);
          carryQ.cq[50] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp128, carryQ.get_carry_in(50), r800_ffff_tmp129));
          r800_ffff_tmp130 = simd_and(r800_ffff_tmp129, bytetest_96_97);
          struct_Po.cc = simd_or(r800_ffff_tmp130, struct_Po.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp49);
          bytetest_80 = simd_andc(tmp35, tmp19);
          bytetest_a0_a7 = simd_andc(r800_ffff_tmp2, basis_bits.bit_4);
          r800_ffff_tmp131 = simd_and(r800_ffff_tmp129, bytetest_a0_a7);
          struct_Po.cc = simd_or(r800_ffff_tmp131, struct_Po.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp49);
          bytetest_80 = simd_andc(tmp35, tmp19);
          bytetest_b0_b8 = simd_andc(tmp50, r800_ffff_tmp61);
          r800_ffff_tmp132 = simd_and(r800_ffff_tmp129, bytetest_b0_b8);
          struct_Po.cc = simd_or(r800_ffff_tmp132, struct_Po.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp49);
          bytetest_80 = simd_andc(tmp35, tmp19);
          r800_ffff_tmp133 = simd_not(tmp22);
          r800_ffff_tmp134 = simd_or(simd_and(basis_bits.bit_5, r800_ffff_tmp133), simd_andc(tmp22, basis_bits.bit_5));
          bytetest_bb_be = simd_and(tmp51, r800_ffff_tmp134);
          r800_ffff_tmp135 = simd_and(r800_ffff_tmp129, bytetest_bb_be);
          struct_Po.cc = simd_or(r800_ffff_tmp135, struct_Po.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp49);
          bytetest_81 = simd_and(tmp35, tmp34);
          bytetest_81_83 = simd_and(bytetest_80_83, tmp6);
          r800_ffff_tmp136 = simd_and(r800_ffff_tmp127, bytetest_81);
          carryQ.cq[51] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp136, carryQ.get_carry_in(51), r800_ffff_tmp137));
          r800_ffff_tmp138 = simd_and(r800_ffff_tmp137, bytetest_81_83);
          struct_Po.cc = simd_or(r800_ffff_tmp138, struct_Po.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp49);
          bytetest_81 = simd_and(tmp35, tmp34);
          r800_ffff_tmp139 = simd_not(tmp58);
          r800_ffff_tmp140 = simd_or(basis_bits.bit_4, tmp38);
          r800_ffff_tmp141 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp139), simd_andc(r800_ffff_tmp140, basis_bits.bit_3));
          bytetest_87_91 = simd_and(r800_ffff_tmp31, r800_ffff_tmp141);
          r800_ffff_tmp142 = simd_and(r800_ffff_tmp137, bytetest_87_91);
          struct_Po.cc = simd_or(r800_ffff_tmp142, struct_Po.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp49);
          bytetest_81 = simd_and(tmp35, tmp34);
          bytetest_93_93 = simd_and(tmp32, tmp57);
          r800_ffff_tmp143 = simd_and(r800_ffff_tmp137, bytetest_93_93);
          struct_Po.cc = simd_or(r800_ffff_tmp143, struct_Po.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp49);
          bytetest_81 = simd_and(tmp35, tmp34);
          r800_ffff_tmp144 = simd_not(tmp38);
          r800_ffff_tmp145 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp144), simd_andc(tmp71, basis_bits.bit_4));
          bytetest_95_9e = simd_and(tmp32, r800_ffff_tmp145);
          r800_ffff_tmp146 = simd_and(r800_ffff_tmp137, bytetest_95_9e);
          struct_Po.cc = simd_or(r800_ffff_tmp146, struct_Po.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp49);
          bytetest_b3 = simd_and(tmp50, tmp57);
          r800_ffff_tmp147 = simd_or(simd_and(basis_bits.bit_5, tmp52), simd_andc(tmp6, basis_bits.bit_5));
          bytetest_b9_bc = simd_and(tmp51, r800_ffff_tmp147);
          r800_ffff_tmp148 = simd_and(r800_ffff_tmp127, bytetest_b3);
          carryQ.cq[52] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp148, carryQ.get_carry_in(52), r800_ffff_tmp149));
          r800_ffff_tmp150 = simd_and(r800_ffff_tmp149, bytetest_b9_bc);
          struct_Po.cc = simd_or(r800_ffff_tmp150, struct_Po.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp49);
          bytetest_b3 = simd_and(tmp50, tmp57);
          bytetest_be_bf = simd_and(tmp50, tmp14);
          r800_ffff_tmp151 = simd_and(r800_ffff_tmp149, bytetest_be_bf);
          struct_Po.cc = simd_or(r800_ffff_tmp151, struct_Po.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp49);
          bytetest_b5 = simd_and(tmp50, tmp64);
          bytetest_b0_b0 = simd_andc(tmp50, tmp19);
          r800_ffff_tmp152 = simd_and(r800_ffff_tmp127, bytetest_b5);
          carryQ.cq[53] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp152, carryQ.get_carry_in(53), r800_ffff_tmp153));
          r800_ffff_tmp154 = simd_and(r800_ffff_tmp153, bytetest_b0_b0);
          struct_Po.cc = simd_or(r800_ffff_tmp154, struct_Po.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp49);
          bytetest_b8 = simd_and(tmp50, r800_ffff_tmp95);
          bytetest_80_81 = simd_andc(tmp35, tmp58);
          r800_ffff_tmp155 = simd_and(r800_ffff_tmp127, bytetest_b8);
          carryQ.cq[54] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp155, carryQ.get_carry_in(54), r800_ffff_tmp156));
          r800_ffff_tmp157 = simd_and(r800_ffff_tmp156, bytetest_80_81);
          struct_Po.cc = simd_or(r800_ffff_tmp157, struct_Po.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp49);
          bytetest_b8 = simd_and(tmp50, r800_ffff_tmp95);
          r800_ffff_tmp158 = simd_or(simd_and(basis_bits.bit_4, tmp70), simd_andc(tmp36, basis_bits.bit_4));
          bytetest_86_88 = simd_and(tmp35, r800_ffff_tmp158);
          r800_ffff_tmp159 = simd_and(r800_ffff_tmp156, bytetest_86_88);
          struct_Po.cc = simd_or(r800_ffff_tmp159, struct_Po.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp49);
          bytetest_b8 = simd_and(tmp50, r800_ffff_tmp95);
          bytetest_8b_8b = simd_and(tmp35, r800_ffff_tmp18);
          r800_ffff_tmp160 = simd_and(r800_ffff_tmp156, bytetest_8b_8b);
          struct_Po.cc = simd_or(r800_ffff_tmp160, struct_Po.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp49);
          bytetest_b8 = simd_and(tmp50, r800_ffff_tmp95);
          r800_ffff_tmp161 = simd_not(r800_ffff_tmp140);
          r800_ffff_tmp162 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp161), simd_andc(tmp14, basis_bits.bit_3));
          bytetest_8e_96 = simd_and(r800_ffff_tmp31, r800_ffff_tmp162);
          r800_ffff_tmp163 = simd_and(r800_ffff_tmp156, bytetest_8e_96);
          struct_Po.cc = simd_or(r800_ffff_tmp163, struct_Po.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp49);
          bytetest_b8 = simd_and(tmp50, r800_ffff_tmp95);
          r800_ffff_tmp164 = simd_andc(tmp9, basis_bits.bit_6);
          bytetest_98_99 = simd_and(tmp32, r800_ffff_tmp164);
          r800_ffff_tmp165 = simd_and(r800_ffff_tmp156, bytetest_98_99);
          struct_Po.cc = simd_or(r800_ffff_tmp165, struct_Po.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp49);
          bytetest_b8 = simd_and(tmp50, r800_ffff_tmp95);
          bytetest_9b_9b = simd_and(tmp32, r800_ffff_tmp18);
          r800_ffff_tmp166 = simd_and(r800_ffff_tmp156, bytetest_9b_9b);
          struct_Po.cc = simd_or(r800_ffff_tmp166, struct_Po.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp49);
          bytetest_b8 = simd_and(tmp50, r800_ffff_tmp95);
          bytetest_9e_9f = simd_and(tmp32, tmp14);
          r800_ffff_tmp167 = simd_and(r800_ffff_tmp156, bytetest_9e_9f);
          struct_Po.cc = simd_or(r800_ffff_tmp167, struct_Po.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp49);
          bytetest_b8 = simd_and(tmp50, r800_ffff_tmp95);
          r800_ffff_tmp168 = simd_or(simd_and(basis_bits.bit_5, r800_ffff_tmp133), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
          bytetest_aa_ae = simd_and(r800_ffff_tmp69, r800_ffff_tmp168);
          r800_ffff_tmp169 = simd_and(r800_ffff_tmp156, bytetest_aa_ae);
          struct_Po.cc = simd_or(r800_ffff_tmp169, struct_Po.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp49);
          bytetest_b8 = simd_and(tmp50, r800_ffff_tmp95);
          bytetest_b0_b9 = simd_andc(tmp50, r800_ffff_tmp106);
          r800_ffff_tmp170 = simd_and(r800_ffff_tmp156, bytetest_b0_b9);
          struct_Po.cc = simd_or(r800_ffff_tmp170, struct_Po.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp57);
          bytetest_80 = simd_andc(tmp35, tmp19);
          bytetest_81_83 = simd_and(bytetest_80_83, tmp6);
          r800_ffff_tmp171 = simd_and(tmp41, bytetest_e3);
          carryQ.cq[55] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp171, carryQ.get_carry_in(55), r800_ffff_tmp172));
          r800_ffff_tmp173 = simd_and(r800_ffff_tmp172, bytetest_80);
          carryQ.cq[56] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp173, carryQ.get_carry_in(56), r800_ffff_tmp174));
          r800_ffff_tmp175 = simd_and(r800_ffff_tmp174, bytetest_81_83);
          struct_Po.cc = simd_or(r800_ffff_tmp175, struct_Po.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp57);
          bytetest_80 = simd_andc(tmp35, tmp19);
          bytetest_bd_bd = simd_and(tmp50, r800_ffff_tmp60);
          r800_ffff_tmp176 = simd_and(r800_ffff_tmp174, bytetest_bd_bd);
          struct_Po.cc = simd_or(r800_ffff_tmp176, struct_Po.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp57);
          bytetest_83 = simd_and(tmp35, tmp57);
          bytetest_bb_bb = simd_and(tmp50, r800_ffff_tmp18);
          r800_ffff_tmp177 = simd_and(r800_ffff_tmp172, bytetest_83);
          carryQ.cq[57] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp177, carryQ.get_carry_in(57), r800_ffff_tmp178));
          r800_ffff_tmp179 = simd_and(r800_ffff_tmp178, bytetest_bb_bb);
          struct_Po.cc = simd_or(r800_ffff_tmp179, struct_Po.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_93 = simd_and(tmp32, tmp57);
          bytetest_be_bf = simd_and(tmp50, tmp14);
          r800_ffff_tmp180 = simd_and(tmp41, bytetest_ea);
          carryQ.cq[58] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp180, carryQ.get_carry_in(58), r800_ffff_tmp181));
          r800_ffff_tmp182 = simd_and(r800_ffff_tmp181, bytetest_93);
          carryQ.cq[59] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp182, carryQ.get_carry_in(59), r800_ffff_tmp183));
          r800_ffff_tmp184 = simd_and(r800_ffff_tmp183, bytetest_be_bf);
          struct_Po.cc = simd_or(r800_ffff_tmp184, struct_Po.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_98 = simd_and(tmp32, r800_ffff_tmp95);
          r800_ffff_tmp185 = simd_and(tmp35, tmp12);
          bytetest_8d_8f = simd_and(r800_ffff_tmp185, tmp6);
          r800_ffff_tmp186 = simd_and(r800_ffff_tmp181, bytetest_98);
          carryQ.cq[60] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp186, carryQ.get_carry_in(60), r800_ffff_tmp187));
          r800_ffff_tmp188 = simd_and(r800_ffff_tmp187, bytetest_8d_8f);
          struct_Po.cc = simd_or(r800_ffff_tmp188, struct_Po.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_99 = simd_and(tmp32, r800_ffff_tmp26);
          bytetest_b3_b3 = simd_and(tmp50, tmp57);
          r800_ffff_tmp189 = simd_and(r800_ffff_tmp181, bytetest_99);
          carryQ.cq[61] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp189, carryQ.get_carry_in(61), r800_ffff_tmp190));
          r800_ffff_tmp191 = simd_and(r800_ffff_tmp190, bytetest_b3_b3);
          struct_Po.cc = simd_or(r800_ffff_tmp191, struct_Po.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_99 = simd_and(tmp32, r800_ffff_tmp26);
          bytetest_be_be = simd_and(tmp50, r800_ffff_tmp9);
          r800_ffff_tmp192 = simd_and(r800_ffff_tmp190, bytetest_be_be);
          struct_Po.cc = simd_or(r800_ffff_tmp192, struct_Po.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9b = simd_and(tmp32, r800_ffff_tmp18);
          r800_ffff_tmp193 = simd_andc(tmp50, basis_bits.bit_4);
          bytetest_b2_b7 = simd_and(r800_ffff_tmp193, r800_ffff_tmp51);
          r800_ffff_tmp194 = simd_and(r800_ffff_tmp181, bytetest_9b);
          carryQ.cq[62] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp194, carryQ.get_carry_in(62), r800_ffff_tmp195));
          r800_ffff_tmp196 = simd_and(r800_ffff_tmp195, bytetest_b2_b7);
          struct_Po.cc = simd_or(r800_ffff_tmp196, struct_Po.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a1 = simd_and(r800_ffff_tmp2, tmp34);
          bytetest_b4_b7 = simd_and(tmp50, tmp7);
          r800_ffff_tmp197 = simd_and(r800_ffff_tmp181, bytetest_a1);
          carryQ.cq[63] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp197, carryQ.get_carry_in(63), r800_ffff_tmp198));
          r800_ffff_tmp199 = simd_and(r800_ffff_tmp198, bytetest_b4_b7);
          struct_Po.cc = simd_or(r800_ffff_tmp199, struct_Po.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a3 = simd_and(r800_ffff_tmp2, tmp57);
          bytetest_8e_8f = simd_and(tmp35, tmp14);
          r800_ffff_tmp200 = simd_and(r800_ffff_tmp181, bytetest_a3);
          carryQ.cq[64] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp200, carryQ.get_carry_in(64), r800_ffff_tmp201));
          r800_ffff_tmp202 = simd_and(r800_ffff_tmp201, bytetest_8e_8f);
          struct_Po.cc = simd_or(r800_ffff_tmp202, struct_Po.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a3 = simd_and(r800_ffff_tmp2, tmp57);
          r800_ffff_tmp203 = simd_and(tmp50, tmp9);
          bytetest_b8_ba = simd_andc(r800_ffff_tmp203, tmp22);
          r800_ffff_tmp204 = simd_and(r800_ffff_tmp201, bytetest_b8_ba);
          struct_Po.cc = simd_or(r800_ffff_tmp204, struct_Po.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a4 = simd_and(r800_ffff_tmp2, r800_ffff_tmp22);
          bytetest_ae_af = simd_and(r800_ffff_tmp2, tmp14);
          r800_ffff_tmp205 = simd_and(r800_ffff_tmp181, bytetest_a4);
          carryQ.cq[65] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp205, carryQ.get_carry_in(65), r800_ffff_tmp206));
          r800_ffff_tmp207 = simd_and(r800_ffff_tmp206, bytetest_ae_af);
          struct_Po.cc = simd_or(r800_ffff_tmp207, struct_Po.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a5 = simd_and(r800_ffff_tmp2, tmp64);
          bytetest_9f_9f = simd_and(tmp32, tmp23);
          r800_ffff_tmp208 = simd_and(r800_ffff_tmp181, bytetest_a5);
          carryQ.cq[66] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp208, carryQ.get_carry_in(66), r800_ffff_tmp209));
          r800_ffff_tmp210 = simd_and(r800_ffff_tmp209, bytetest_9f_9f);
          struct_Po.cc = simd_or(r800_ffff_tmp210, struct_Po.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a7 = simd_and(r800_ffff_tmp2, tmp68);
          r800_ffff_tmp211 = simd_or(simd_and(basis_bits.bit_4, tmp37), simd_andc(tmp69, basis_bits.bit_4));
          bytetest_81_8d = simd_and(tmp35, r800_ffff_tmp211);
          r800_ffff_tmp212 = simd_and(r800_ffff_tmp181, bytetest_a7);
          carryQ.cq[67] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp212, carryQ.get_carry_in(67), r800_ffff_tmp213));
          r800_ffff_tmp214 = simd_and(r800_ffff_tmp213, bytetest_81_8d);
          struct_Po.cc = simd_or(r800_ffff_tmp214, struct_Po.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a7 = simd_and(r800_ffff_tmp2, tmp68);
          bytetest_9e_9f = simd_and(tmp32, tmp14);
          r800_ffff_tmp215 = simd_and(r800_ffff_tmp213, bytetest_9e_9f);
          struct_Po.cc = simd_or(r800_ffff_tmp215, struct_Po.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a9 = simd_and(r800_ffff_tmp2, r800_ffff_tmp26);
          bytetest_9c_9f = simd_and(tmp32, tmp12);
          r800_ffff_tmp216 = simd_and(r800_ffff_tmp181, bytetest_a9);
          carryQ.cq[68] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp216, carryQ.get_carry_in(68), r800_ffff_tmp217));
          r800_ffff_tmp218 = simd_and(r800_ffff_tmp217, bytetest_9c_9f);
          struct_Po.cc = simd_or(r800_ffff_tmp218, struct_Po.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_ab = simd_and(r800_ffff_tmp2, r800_ffff_tmp18);
          bytetest_9e_9f = simd_and(tmp32, tmp14);
          r800_ffff_tmp219 = simd_and(r800_ffff_tmp181, bytetest_ab);
          carryQ.cq[69] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp219, carryQ.get_carry_in(69), r800_ffff_tmp220));
          r800_ffff_tmp221 = simd_and(r800_ffff_tmp220, bytetest_9e_9f);
          struct_Po.cc = simd_or(r800_ffff_tmp221, struct_Po.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_ab = simd_and(r800_ffff_tmp2, r800_ffff_tmp18);
          bytetest_b0_b1 = simd_andc(tmp50, tmp58);
          r800_ffff_tmp222 = simd_and(r800_ffff_tmp220, bytetest_b0_b1);
          struct_Po.cc = simd_or(r800_ffff_tmp222, struct_Po.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_af = simd_and(r800_ffff_tmp2, tmp23);
          bytetest_ab_ab = simd_and(r800_ffff_tmp2, r800_ffff_tmp18);
          r800_ffff_tmp223 = simd_and(r800_ffff_tmp181, bytetest_af);
          carryQ.cq[70] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp223, carryQ.get_carry_in(70), r800_ffff_tmp224));
          r800_ffff_tmp225 = simd_and(r800_ffff_tmp224, bytetest_ab_ab);
          struct_Po.cc = simd_or(r800_ffff_tmp225, struct_Po.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp23);
          bytetest_b8 = simd_and(tmp50, r800_ffff_tmp95);
          bytetest_90_96 = simd_andc(r800_ffff_tmp42, tmp38);
          r800_ffff_tmp226 = simd_and(tmp41, bytetest_ef);
          carryQ.cq[71] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp226, carryQ.get_carry_in(71), r800_ffff_tmp227));
          r800_ffff_tmp228 = simd_and(r800_ffff_tmp227, bytetest_b8);
          carryQ.cq[72] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp228, carryQ.get_carry_in(72), r800_ffff_tmp229));
          r800_ffff_tmp230 = simd_and(r800_ffff_tmp229, bytetest_90_96);
          struct_Po.cc = simd_or(r800_ffff_tmp230, struct_Po.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp23);
          bytetest_b8 = simd_and(tmp50, r800_ffff_tmp95);
          bytetest_99_99 = simd_and(tmp32, r800_ffff_tmp26);
          r800_ffff_tmp231 = simd_and(r800_ffff_tmp229, bytetest_99_99);
          struct_Po.cc = simd_or(r800_ffff_tmp231, struct_Po.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp23);
          bytetest_b8 = simd_and(tmp50, r800_ffff_tmp95);
          bytetest_b0_b0 = simd_andc(tmp50, tmp19);
          r800_ffff_tmp232 = simd_and(r800_ffff_tmp229, bytetest_b0_b0);
          struct_Po.cc = simd_or(r800_ffff_tmp232, struct_Po.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp23);
          bytetest_b9 = simd_and(tmp50, r800_ffff_tmp26);
          r800_ffff_tmp233 = simd_and(tmp35, tmp7);
          bytetest_85_86 = simd_and(r800_ffff_tmp233, r800_ffff_tmp48);
          r800_ffff_tmp234 = simd_and(r800_ffff_tmp227, bytetest_b9);
          carryQ.cq[73] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp234, carryQ.get_carry_in(73), r800_ffff_tmp235));
          r800_ffff_tmp236 = simd_and(r800_ffff_tmp235, bytetest_85_86);
          struct_Po.cc = simd_or(r800_ffff_tmp236, struct_Po.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp23);
          bytetest_b9 = simd_and(tmp50, r800_ffff_tmp26);
          bytetest_89_8c = simd_and(r800_ffff_tmp50, r800_ffff_tmp147);
          r800_ffff_tmp237 = simd_and(r800_ffff_tmp235, bytetest_89_8c);
          struct_Po.cc = simd_or(r800_ffff_tmp237, struct_Po.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp23);
          bytetest_b9 = simd_and(tmp50, r800_ffff_tmp26);
          r800_ffff_tmp238 = simd_andc(tmp32, tmp4);
          bytetest_90_92 = simd_andc(r800_ffff_tmp238, tmp22);
          r800_ffff_tmp239 = simd_and(r800_ffff_tmp235, bytetest_90_92);
          struct_Po.cc = simd_or(r800_ffff_tmp239, struct_Po.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp23);
          bytetest_b9 = simd_and(tmp50, r800_ffff_tmp26);
          bytetest_94_97 = simd_and(tmp32, tmp7);
          r800_ffff_tmp240 = simd_and(r800_ffff_tmp235, bytetest_94_97);
          struct_Po.cc = simd_or(r800_ffff_tmp240, struct_Po.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp23);
          bytetest_b9 = simd_and(tmp50, r800_ffff_tmp26);
          r800_ffff_tmp241 = simd_not(tmp82);
          r800_ffff_tmp242 = simd_and(basis_bits.bit_3, tmp23);
          r800_ffff_tmp243 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp241), simd_andc(r800_ffff_tmp242, basis_bits.bit_2));
          bytetest_9f_a1 = simd_and(tmp31, r800_ffff_tmp243);
          r800_ffff_tmp244 = simd_and(r800_ffff_tmp235, bytetest_9f_a1);
          struct_Po.cc = simd_or(r800_ffff_tmp244, struct_Po.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp23);
          bytetest_b9 = simd_and(tmp50, r800_ffff_tmp26);
          bytetest_a8_a8 = simd_and(r800_ffff_tmp2, r800_ffff_tmp95);
          r800_ffff_tmp245 = simd_and(r800_ffff_tmp235, bytetest_a8_a8);
          struct_Po.cc = simd_or(r800_ffff_tmp245, struct_Po.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp23);
          bytetest_b9 = simd_and(tmp50, r800_ffff_tmp26);
          bytetest_aa_ab = simd_and(r800_ffff_tmp2, tmp17);
          r800_ffff_tmp246 = simd_and(r800_ffff_tmp235, bytetest_aa_ab);
          struct_Po.cc = simd_or(r800_ffff_tmp246, struct_Po.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp23);
          bytetest_bc = simd_and(tmp50, tmp13);
          bytetest_81_83 = simd_and(bytetest_80_83, tmp6);
          r800_ffff_tmp247 = simd_and(r800_ffff_tmp227, bytetest_bc);
          carryQ.cq[74] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp247, carryQ.get_carry_in(74), r800_ffff_tmp248));
          r800_ffff_tmp249 = simd_and(r800_ffff_tmp248, bytetest_81_83);
          struct_Po.cc = simd_or(r800_ffff_tmp249, struct_Po.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp23);
          bytetest_bc = simd_and(tmp50, tmp13);
          bytetest_85_87 = simd_and(r800_ffff_tmp233, tmp6);
          r800_ffff_tmp250 = simd_and(r800_ffff_tmp248, bytetest_85_87);
          struct_Po.cc = simd_or(r800_ffff_tmp250, struct_Po.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp23);
          bytetest_bc = simd_and(tmp50, tmp13);
          bytetest_8a_8a = simd_and(tmp35, tmp11);
          r800_ffff_tmp251 = simd_and(r800_ffff_tmp248, bytetest_8a_8a);
          struct_Po.cc = simd_or(r800_ffff_tmp251, struct_Po.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp23);
          bytetest_bc = simd_and(tmp50, tmp13);
          bytetest_8c_8c = simd_and(tmp35, tmp13);
          r800_ffff_tmp252 = simd_and(r800_ffff_tmp248, bytetest_8c_8c);
          struct_Po.cc = simd_or(r800_ffff_tmp252, struct_Po.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp23);
          bytetest_bc = simd_and(tmp50, tmp13);
          bytetest_8e_8f = simd_and(tmp35, tmp14);
          r800_ffff_tmp253 = simd_and(r800_ffff_tmp248, bytetest_8e_8f);
          struct_Po.cc = simd_or(r800_ffff_tmp253, struct_Po.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp23);
          bytetest_bc = simd_and(tmp50, tmp13);
          bytetest_9a_9b = simd_and(tmp32, tmp17);
          r800_ffff_tmp254 = simd_and(r800_ffff_tmp248, bytetest_9a_9b);
          struct_Po.cc = simd_or(r800_ffff_tmp254, struct_Po.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp23);
          bytetest_bc = simd_and(tmp50, tmp13);
          r800_ffff_tmp255 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp105), simd_andc(r800_ffff_tmp242, basis_bits.bit_2));
          bytetest_9f_a0 = simd_and(tmp31, r800_ffff_tmp255);
          r800_ffff_tmp256 = simd_and(r800_ffff_tmp248, bytetest_9f_a0);
          struct_Po.cc = simd_or(r800_ffff_tmp256, struct_Po.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp23);
          bytetest_bc = simd_and(tmp50, tmp13);
          bytetest_bc_bc = simd_and(tmp50, tmp13);
          r800_ffff_tmp257 = simd_and(r800_ffff_tmp248, bytetest_bc_bc);
          struct_Po.cc = simd_or(r800_ffff_tmp257, struct_Po.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp23);
          bytetest_bd = simd_and(tmp50, r800_ffff_tmp60);
          bytetest_a1_a1 = simd_and(r800_ffff_tmp2, tmp34);
          r800_ffff_tmp258 = simd_and(r800_ffff_tmp227, bytetest_bd);
          carryQ.cq[75] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp258, carryQ.get_carry_in(75), r800_ffff_tmp259));
          r800_ffff_tmp260 = simd_and(r800_ffff_tmp259, bytetest_a1_a1);
          struct_Po.cc = simd_or(r800_ffff_tmp260, struct_Po.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp23);
          bytetest_bd = simd_and(tmp50, r800_ffff_tmp60);
          bytetest_a4_a5 = simd_and(r800_ffff_tmp2, r800_ffff_tmp13);
          r800_ffff_tmp261 = simd_and(r800_ffff_tmp259, bytetest_a4_a5);
          struct_Po.cc = simd_or(r800_ffff_tmp261, struct_Po.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(22, 54);
        }
        bytetest_f0 = simd_andc(tmp30, tmp19);
        bytetest_90 = simd_andc(tmp32, tmp19);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp89 = simd_and(tmp43, bytetest_90);
        carryQ.cq[76] = carryout2carry(pablo_blk_Advance(tmp89, carryQ.get_carry_in(76), tmp90));
        tmp91 = simd_and(tmp90, bytetest_80_bf);
        if ((bitblock::any(tmp91) || carryQ.CarryTest(77, 8))) {
          bytetest_f0 = simd_andc(tmp30, tmp19);
          bytetest_90 = simd_andc(tmp32, tmp19);
          r10000_10fff_tmp1 = simd_andc(tmp7, tmp6);
          bytetest_84 = simd_and(tmp35, r10000_10fff_tmp1);
          bytetest_80_82 = simd_andc(bytetest_80_83, tmp22);
          r10000_10fff_tmp2 = simd_and(tmp43, bytetest_90);
          carryQ.cq[77] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp2, carryQ.get_carry_in(77), r10000_10fff_tmp3));
          r10000_10fff_tmp4 = simd_and(r10000_10fff_tmp3, bytetest_84);
          carryQ.cq[78] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp4, carryQ.get_carry_in(78), r10000_10fff_tmp5));
          r10000_10fff_tmp6 = simd_and(r10000_10fff_tmp5, bytetest_80_82);
          struct_Po.cc = simd_or(r10000_10fff_tmp6, struct_Po.cc);
          bytetest_f0 = simd_andc(tmp30, tmp19);
          bytetest_90 = simd_andc(tmp32, tmp19);
          r10000_10fff_tmp7 = simd_and(tmp12, tmp10);
          bytetest_8e = simd_and(tmp35, r10000_10fff_tmp7);
          bytetest_9f_9f = simd_and(tmp32, tmp23);
          r10000_10fff_tmp8 = simd_and(r10000_10fff_tmp3, bytetest_8e);
          carryQ.cq[79] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp8, carryQ.get_carry_in(79), r10000_10fff_tmp9));
          r10000_10fff_tmp10 = simd_and(r10000_10fff_tmp9, bytetest_9f_9f);
          struct_Po.cc = simd_or(r10000_10fff_tmp10, struct_Po.cc);
          bytetest_f0 = simd_andc(tmp30, tmp19);
          bytetest_90 = simd_andc(tmp32, tmp19);
          bytetest_8f = simd_and(tmp35, tmp23);
          bytetest_90_90 = simd_andc(tmp32, tmp19);
          r10000_10fff_tmp11 = simd_and(r10000_10fff_tmp3, bytetest_8f);
          carryQ.cq[80] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp11, carryQ.get_carry_in(80), r10000_10fff_tmp12));
          r10000_10fff_tmp13 = simd_and(r10000_10fff_tmp12, bytetest_90_90);
          struct_Po.cc = simd_or(r10000_10fff_tmp13, struct_Po.cc);
          bytetest_f0 = simd_andc(tmp30, tmp19);
          bytetest_90 = simd_andc(tmp32, tmp19);
          r10000_10fff_tmp14 = simd_and(tmp31, tmp2);
          bytetest_a1 = simd_and(r10000_10fff_tmp14, tmp34);
          bytetest_97_97 = simd_and(tmp32, tmp68);
          r10000_10fff_tmp15 = simd_and(r10000_10fff_tmp3, bytetest_a1);
          carryQ.cq[81] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp15, carryQ.get_carry_in(81), r10000_10fff_tmp16));
          r10000_10fff_tmp17 = simd_and(r10000_10fff_tmp16, bytetest_97_97);
          struct_Po.cc = simd_or(r10000_10fff_tmp17, struct_Po.cc);
          bytetest_f0 = simd_andc(tmp30, tmp19);
          bytetest_90 = simd_andc(tmp32, tmp19);
          bytetest_a4 = simd_and(r10000_10fff_tmp14, r10000_10fff_tmp1);
          bytetest_9f_9f = simd_and(tmp32, tmp23);
          r10000_10fff_tmp18 = simd_and(r10000_10fff_tmp3, bytetest_a4);
          carryQ.cq[82] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp18, carryQ.get_carry_in(82), r10000_10fff_tmp19));
          r10000_10fff_tmp20 = simd_and(r10000_10fff_tmp19, bytetest_9f_9f);
          struct_Po.cc = simd_or(r10000_10fff_tmp20, struct_Po.cc);
          bytetest_f0 = simd_andc(tmp30, tmp19);
          bytetest_90 = simd_andc(tmp32, tmp19);
          bytetest_a4 = simd_and(r10000_10fff_tmp14, r10000_10fff_tmp1);
          bytetest_bf_bf = simd_and(tmp50, tmp23);
          r10000_10fff_tmp21 = simd_and(r10000_10fff_tmp19, bytetest_bf_bf);
          struct_Po.cc = simd_or(r10000_10fff_tmp21, struct_Po.cc);
          bytetest_f0 = simd_andc(tmp30, tmp19);
          bytetest_90 = simd_andc(tmp32, tmp19);
          r10000_10fff_tmp22 = simd_and(tmp9, tmp33);
          bytetest_a9 = simd_and(r10000_10fff_tmp14, r10000_10fff_tmp22);
          r10000_10fff_tmp23 = simd_and(basis_bits.bit_4, tmp69);
          bytetest_90_98 = simd_andc(tmp32, r10000_10fff_tmp23);
          r10000_10fff_tmp24 = simd_and(r10000_10fff_tmp3, bytetest_a9);
          carryQ.cq[83] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp24, carryQ.get_carry_in(83), r10000_10fff_tmp25));
          r10000_10fff_tmp26 = simd_and(r10000_10fff_tmp25, bytetest_90_98);
          struct_Po.cc = simd_or(r10000_10fff_tmp26, struct_Po.cc);
          bytetest_f0 = simd_andc(tmp30, tmp19);
          bytetest_90 = simd_andc(tmp32, tmp19);
          bytetest_a9 = simd_and(r10000_10fff_tmp14, r10000_10fff_tmp22);
          bytetest_bf_bf = simd_and(tmp50, tmp23);
          r10000_10fff_tmp27 = simd_and(r10000_10fff_tmp25, bytetest_bf_bf);
          struct_Po.cc = simd_or(r10000_10fff_tmp27, struct_Po.cc);
          bytetest_f0 = simd_andc(tmp30, tmp19);
          bytetest_90 = simd_andc(tmp32, tmp19);
          bytetest_ac = simd_and(r10000_10fff_tmp14, tmp13);
          bytetest_b9_bf = simd_and(tmp51, tmp69);
          r10000_10fff_tmp28 = simd_and(r10000_10fff_tmp3, bytetest_ac);
          carryQ.cq[84] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp28, carryQ.get_carry_in(84), r10000_10fff_tmp29));
          r10000_10fff_tmp30 = simd_and(r10000_10fff_tmp29, bytetest_b9_bf);
          struct_Po.cc = simd_or(r10000_10fff_tmp30, struct_Po.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(77, 8);
        }
  }
  CarryArray<85, 0> carryQ;
  };

  struct Me {
  Me() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Me & struct_Me) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, bytetest_c2_df, r80_7ff_tmp1;
		BitBlock r80_7ff_tmp2, r80_7ff_tmp3, r80_7ff_tmp4, r80_7ff_tmp5, r80_7ff_tmp6;
		BitBlock bytetest_d2, r80_7ff_tmp7, r80_7ff_tmp8, r80_7ff_tmp9, r80_7ff_tmp10;
		BitBlock r80_7ff_tmp11, bytetest_88_89, r80_7ff_tmp12, r80_7ff_tmp13;
		BitBlock r80_7ff_tmp14, r80_7ff_tmp15, r80_7ff_tmp16, tmp6, tmp7, tmp8, tmp9;
		BitBlock tmp10, bytetest_e1_ef, tmp11, bytetest_e0, tmp12, bytetest_a0_bf;
		BitBlock tmp13, tmp14, tmp15, tmp16, tmp17, tmp18, r800_ffff_tmp1;
		BitBlock r800_ffff_tmp2, r800_ffff_tmp3, r800_ffff_tmp4, bytetest_e2;
		BitBlock r800_ffff_tmp5, r800_ffff_tmp6, r800_ffff_tmp7, r800_ffff_tmp8;
		BitBlock r800_ffff_tmp9, bytetest_83, r800_ffff_tmp10, r800_ffff_tmp11;
		BitBlock r800_ffff_tmp12, r800_ffff_tmp13, r800_ffff_tmp14, r800_ffff_tmp15;
		BitBlock r800_ffff_tmp16, r800_ffff_tmp17, bytetest_9d_a0, r800_ffff_tmp18;
		BitBlock r800_ffff_tmp19, r800_ffff_tmp20, r800_ffff_tmp21, r800_ffff_tmp22;
		BitBlock r800_ffff_tmp23, r800_ffff_tmp24, r800_ffff_tmp25, r800_ffff_tmp26;
		BitBlock r800_ffff_tmp27, r800_ffff_tmp28, bytetest_a2_a4, r800_ffff_tmp29;
		BitBlock r800_ffff_tmp30, r800_ffff_tmp31, bytetest_ea, r800_ffff_tmp32;
		BitBlock r800_ffff_tmp33, r800_ffff_tmp34, r800_ffff_tmp35, bytetest_99;
		BitBlock r800_ffff_tmp36, r800_ffff_tmp37, r800_ffff_tmp38, bytetest_b0_b2;
		BitBlock r800_ffff_tmp39, r800_ffff_tmp40, r800_ffff_tmp41, r800_ffff_tmp42;
		BitBlock r800_ffff_tmp43;




        struct_Me.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(tmp1, basis_bits.bit_2);
        tmp3 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp4 = simd_or(tmp3, basis_bits.bit_6);
        tmp5 = simd_or(basis_bits.bit_3, tmp4);
        bytetest_c2_df = simd_and(tmp2, tmp5);
        if ((bitblock::any(bytetest_c2_df) || carryQ.CarryTest(0, 2))) {
          r80_7ff_tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
          r80_7ff_tmp2 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
          r80_7ff_tmp3 = simd_and(r80_7ff_tmp1, r80_7ff_tmp2);
          r80_7ff_tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
          r80_7ff_tmp5 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
          r80_7ff_tmp6 = simd_andc(r80_7ff_tmp5, r80_7ff_tmp4);
          bytetest_d2 = simd_and(r80_7ff_tmp3, r80_7ff_tmp6);
          r80_7ff_tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r80_7ff_tmp8 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
          r80_7ff_tmp9 = simd_andc(r80_7ff_tmp7, r80_7ff_tmp8);
          r80_7ff_tmp10 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
          r80_7ff_tmp11 = simd_andc(r80_7ff_tmp10, basis_bits.bit_6);
          bytetest_88_89 = simd_and(r80_7ff_tmp9, r80_7ff_tmp11);
          r80_7ff_tmp12 = simd<1>::constant<1>();
          carryQ.cq[0] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp12, carryQ.get_carry_in(0), r80_7ff_tmp13));
          r80_7ff_tmp14 = simd_and(r80_7ff_tmp13, bytetest_d2);
          carryQ.cq[1] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp14, carryQ.get_carry_in(1), r80_7ff_tmp15));
          r80_7ff_tmp16 = simd_and(r80_7ff_tmp15, bytetest_88_89);
          struct_Me.cc = simd_or(r80_7ff_tmp16, struct_Me.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(0, 2);
        }
        tmp6 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp7 = simd_and(tmp1, tmp6);
        tmp8 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp9 = simd_or(basis_bits.bit_5, tmp8);
        tmp10 = simd_or(basis_bits.bit_4, tmp9);
        bytetest_e1_ef = simd_and(tmp7, tmp10);
        tmp11 = simd_or(tmp3, tmp8);
        bytetest_e0 = simd_andc(tmp7, tmp11);
        tmp12 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_a0_bf = simd_and(tmp12, basis_bits.bit_2);
        tmp13 = simd<1>::constant<1>();
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp13, carryQ.get_carry_in(2), tmp14));
        tmp15 = simd_and(tmp14, bytetest_e0);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp15, carryQ.get_carry_in(3), tmp16));
        tmp17 = simd_and(tmp16, bytetest_a0_bf);
        tmp18 = simd_or(tmp17, bytetest_e1_ef);
        if ((bitblock::any(tmp18) || carryQ.CarryTest(4, 5))) {
          r800_ffff_tmp1 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp2 = simd_and(tmp1, r800_ffff_tmp1);
          r800_ffff_tmp3 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp4 = simd_andc(r800_ffff_tmp3, tmp3);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp4);
          r800_ffff_tmp5 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp6 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp7 = simd_andc(r800_ffff_tmp5, r800_ffff_tmp6);
          r800_ffff_tmp8 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp9 = simd_andc(r800_ffff_tmp8, tmp3);
          bytetest_83 = simd_and(r800_ffff_tmp7, r800_ffff_tmp9);
          r800_ffff_tmp10 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp11 = simd_or(tmp3, r800_ffff_tmp10);
          r800_ffff_tmp12 = simd_or(basis_bits.bit_3, r800_ffff_tmp11);
          r800_ffff_tmp13 = simd_not(r800_ffff_tmp12);
          r800_ffff_tmp14 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
          r800_ffff_tmp15 = simd_and(r800_ffff_tmp14, r800_ffff_tmp10);
          r800_ffff_tmp16 = simd_and(basis_bits.bit_3, r800_ffff_tmp15);
          r800_ffff_tmp17 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp13), simd_andc(r800_ffff_tmp16, basis_bits.bit_2));
          bytetest_9d_a0 = simd_and(r800_ffff_tmp5, r800_ffff_tmp17);
          r800_ffff_tmp18 = simd<1>::constant<1>();
          carryQ.cq[4] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp18, carryQ.get_carry_in(4), r800_ffff_tmp19));
          r800_ffff_tmp20 = simd_and(r800_ffff_tmp19, bytetest_e2);
          carryQ.cq[5] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp20, carryQ.get_carry_in(5), r800_ffff_tmp21));
          r800_ffff_tmp22 = simd_and(r800_ffff_tmp21, bytetest_83);
          carryQ.cq[6] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp22, carryQ.get_carry_in(6), r800_ffff_tmp23));
          r800_ffff_tmp24 = simd_and(r800_ffff_tmp23, bytetest_9d_a0);
          struct_Me.cc = simd_or(r800_ffff_tmp24, struct_Me.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp4);
          bytetest_83 = simd_and(r800_ffff_tmp7, r800_ffff_tmp9);
          r800_ffff_tmp25 = simd_and(r800_ffff_tmp5, r800_ffff_tmp1);
          r800_ffff_tmp26 = simd_andc(r800_ffff_tmp25, basis_bits.bit_4);
          r800_ffff_tmp27 = simd_not(r800_ffff_tmp10);
          r800_ffff_tmp28 = simd_or(simd_and(basis_bits.bit_5, r800_ffff_tmp27), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
          bytetest_a2_a4 = simd_and(r800_ffff_tmp26, r800_ffff_tmp28);
          r800_ffff_tmp29 = simd_and(r800_ffff_tmp23, bytetest_a2_a4);
          struct_Me.cc = simd_or(r800_ffff_tmp29, struct_Me.cc);
          r800_ffff_tmp30 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
          r800_ffff_tmp31 = simd_and(r800_ffff_tmp30, r800_ffff_tmp3);
          bytetest_ea = simd_and(r800_ffff_tmp2, r800_ffff_tmp31);
          r800_ffff_tmp32 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
          r800_ffff_tmp33 = simd_and(r800_ffff_tmp5, r800_ffff_tmp32);
          r800_ffff_tmp34 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
          r800_ffff_tmp35 = simd_and(r800_ffff_tmp30, r800_ffff_tmp34);
          bytetest_99 = simd_and(r800_ffff_tmp33, r800_ffff_tmp35);
          r800_ffff_tmp36 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp37 = simd_and(r800_ffff_tmp5, r800_ffff_tmp36);
          r800_ffff_tmp38 = simd_andc(r800_ffff_tmp37, tmp3);
          bytetest_b0_b2 = simd_andc(r800_ffff_tmp38, r800_ffff_tmp8);
          r800_ffff_tmp39 = simd_and(r800_ffff_tmp19, bytetest_ea);
          carryQ.cq[7] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp39, carryQ.get_carry_in(7), r800_ffff_tmp40));
          r800_ffff_tmp41 = simd_and(r800_ffff_tmp40, bytetest_99);
          carryQ.cq[8] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp41, carryQ.get_carry_in(8), r800_ffff_tmp42));
          r800_ffff_tmp43 = simd_and(r800_ffff_tmp42, bytetest_b0_b2);
          struct_Me.cc = simd_or(r800_ffff_tmp43, struct_Me.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(4, 5);
        }
        carryQ.CarryQ_Adjust(9);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Me & struct_Me, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, bytetest_c2_df, r80_7ff_tmp1;
		BitBlock r80_7ff_tmp2, r80_7ff_tmp3, r80_7ff_tmp4, r80_7ff_tmp5, r80_7ff_tmp6;
		BitBlock bytetest_d2, r80_7ff_tmp7, r80_7ff_tmp8, r80_7ff_tmp9, r80_7ff_tmp10;
		BitBlock r80_7ff_tmp11, bytetest_88_89, r80_7ff_tmp12, r80_7ff_tmp13;
		BitBlock r80_7ff_tmp14, r80_7ff_tmp15, r80_7ff_tmp16, tmp6, tmp7, tmp8, tmp9;
		BitBlock tmp10, bytetest_e1_ef, tmp11, bytetest_e0, tmp12, bytetest_a0_bf;
		BitBlock tmp13, tmp14, tmp15, tmp16, tmp17, tmp18, r800_ffff_tmp1;
		BitBlock r800_ffff_tmp2, r800_ffff_tmp3, r800_ffff_tmp4, bytetest_e2;
		BitBlock r800_ffff_tmp5, r800_ffff_tmp6, r800_ffff_tmp7, r800_ffff_tmp8;
		BitBlock r800_ffff_tmp9, bytetest_83, r800_ffff_tmp10, r800_ffff_tmp11;
		BitBlock r800_ffff_tmp12, r800_ffff_tmp13, r800_ffff_tmp14, r800_ffff_tmp15;
		BitBlock r800_ffff_tmp16, r800_ffff_tmp17, bytetest_9d_a0, r800_ffff_tmp18;
		BitBlock r800_ffff_tmp19, r800_ffff_tmp20, r800_ffff_tmp21, r800_ffff_tmp22;
		BitBlock r800_ffff_tmp23, r800_ffff_tmp24, r800_ffff_tmp25, r800_ffff_tmp26;
		BitBlock r800_ffff_tmp27, r800_ffff_tmp28, bytetest_a2_a4, r800_ffff_tmp29;
		BitBlock r800_ffff_tmp30, r800_ffff_tmp31, bytetest_ea, r800_ffff_tmp32;
		BitBlock r800_ffff_tmp33, r800_ffff_tmp34, r800_ffff_tmp35, bytetest_99;
		BitBlock r800_ffff_tmp36, r800_ffff_tmp37, r800_ffff_tmp38, bytetest_b0_b2;
		BitBlock r800_ffff_tmp39, r800_ffff_tmp40, r800_ffff_tmp41, r800_ffff_tmp42;
		BitBlock r800_ffff_tmp43;




        struct_Me.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(tmp1, basis_bits.bit_2);
        tmp3 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp4 = simd_or(tmp3, basis_bits.bit_6);
        tmp5 = simd_or(basis_bits.bit_3, tmp4);
        bytetest_c2_df = simd_and(tmp2, tmp5);
        if ((bitblock::any(bytetest_c2_df) || carryQ.CarryTest(0, 2))) {
          r80_7ff_tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
          r80_7ff_tmp2 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
          r80_7ff_tmp3 = simd_and(r80_7ff_tmp1, r80_7ff_tmp2);
          r80_7ff_tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
          r80_7ff_tmp5 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
          r80_7ff_tmp6 = simd_andc(r80_7ff_tmp5, r80_7ff_tmp4);
          bytetest_d2 = simd_and(r80_7ff_tmp3, r80_7ff_tmp6);
          r80_7ff_tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r80_7ff_tmp8 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
          r80_7ff_tmp9 = simd_andc(r80_7ff_tmp7, r80_7ff_tmp8);
          r80_7ff_tmp10 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
          r80_7ff_tmp11 = simd_andc(r80_7ff_tmp10, basis_bits.bit_6);
          bytetest_88_89 = simd_and(r80_7ff_tmp9, r80_7ff_tmp11);
          r80_7ff_tmp12 = simd<1>::constant<1>();
          carryQ.cq[0] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp12, carryQ.get_carry_in(0), r80_7ff_tmp13));
          r80_7ff_tmp14 = simd_and(r80_7ff_tmp13, bytetest_d2);
          carryQ.cq[1] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp14, carryQ.get_carry_in(1), r80_7ff_tmp15));
          r80_7ff_tmp16 = simd_and(r80_7ff_tmp15, bytetest_88_89);
          struct_Me.cc = simd_or(r80_7ff_tmp16, struct_Me.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(0, 2);
        }
        tmp6 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp7 = simd_and(tmp1, tmp6);
        tmp8 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp9 = simd_or(basis_bits.bit_5, tmp8);
        tmp10 = simd_or(basis_bits.bit_4, tmp9);
        bytetest_e1_ef = simd_and(tmp7, tmp10);
        tmp11 = simd_or(tmp3, tmp8);
        bytetest_e0 = simd_andc(tmp7, tmp11);
        tmp12 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_a0_bf = simd_and(tmp12, basis_bits.bit_2);
        tmp13 = simd<1>::constant<1>();
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp13, carryQ.get_carry_in(2), tmp14));
        tmp15 = simd_and(tmp14, bytetest_e0);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp15, carryQ.get_carry_in(3), tmp16));
        tmp17 = simd_and(tmp16, bytetest_a0_bf);
        tmp18 = simd_or(tmp17, bytetest_e1_ef);
        if ((bitblock::any(tmp18) || carryQ.CarryTest(4, 5))) {
          r800_ffff_tmp1 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp2 = simd_and(tmp1, r800_ffff_tmp1);
          r800_ffff_tmp3 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp4 = simd_andc(r800_ffff_tmp3, tmp3);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp4);
          r800_ffff_tmp5 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp6 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp7 = simd_andc(r800_ffff_tmp5, r800_ffff_tmp6);
          r800_ffff_tmp8 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp9 = simd_andc(r800_ffff_tmp8, tmp3);
          bytetest_83 = simd_and(r800_ffff_tmp7, r800_ffff_tmp9);
          r800_ffff_tmp10 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp11 = simd_or(tmp3, r800_ffff_tmp10);
          r800_ffff_tmp12 = simd_or(basis_bits.bit_3, r800_ffff_tmp11);
          r800_ffff_tmp13 = simd_not(r800_ffff_tmp12);
          r800_ffff_tmp14 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
          r800_ffff_tmp15 = simd_and(r800_ffff_tmp14, r800_ffff_tmp10);
          r800_ffff_tmp16 = simd_and(basis_bits.bit_3, r800_ffff_tmp15);
          r800_ffff_tmp17 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp13), simd_andc(r800_ffff_tmp16, basis_bits.bit_2));
          bytetest_9d_a0 = simd_and(r800_ffff_tmp5, r800_ffff_tmp17);
          r800_ffff_tmp18 = simd<1>::constant<1>();
          carryQ.cq[4] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp18, carryQ.get_carry_in(4), r800_ffff_tmp19));
          r800_ffff_tmp20 = simd_and(r800_ffff_tmp19, bytetest_e2);
          carryQ.cq[5] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp20, carryQ.get_carry_in(5), r800_ffff_tmp21));
          r800_ffff_tmp22 = simd_and(r800_ffff_tmp21, bytetest_83);
          carryQ.cq[6] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp22, carryQ.get_carry_in(6), r800_ffff_tmp23));
          r800_ffff_tmp24 = simd_and(r800_ffff_tmp23, bytetest_9d_a0);
          struct_Me.cc = simd_or(r800_ffff_tmp24, struct_Me.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp2, r800_ffff_tmp4);
          bytetest_83 = simd_and(r800_ffff_tmp7, r800_ffff_tmp9);
          r800_ffff_tmp25 = simd_and(r800_ffff_tmp5, r800_ffff_tmp1);
          r800_ffff_tmp26 = simd_andc(r800_ffff_tmp25, basis_bits.bit_4);
          r800_ffff_tmp27 = simd_not(r800_ffff_tmp10);
          r800_ffff_tmp28 = simd_or(simd_and(basis_bits.bit_5, r800_ffff_tmp27), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
          bytetest_a2_a4 = simd_and(r800_ffff_tmp26, r800_ffff_tmp28);
          r800_ffff_tmp29 = simd_and(r800_ffff_tmp23, bytetest_a2_a4);
          struct_Me.cc = simd_or(r800_ffff_tmp29, struct_Me.cc);
          r800_ffff_tmp30 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
          r800_ffff_tmp31 = simd_and(r800_ffff_tmp30, r800_ffff_tmp3);
          bytetest_ea = simd_and(r800_ffff_tmp2, r800_ffff_tmp31);
          r800_ffff_tmp32 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
          r800_ffff_tmp33 = simd_and(r800_ffff_tmp5, r800_ffff_tmp32);
          r800_ffff_tmp34 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
          r800_ffff_tmp35 = simd_and(r800_ffff_tmp30, r800_ffff_tmp34);
          bytetest_99 = simd_and(r800_ffff_tmp33, r800_ffff_tmp35);
          r800_ffff_tmp36 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp37 = simd_and(r800_ffff_tmp5, r800_ffff_tmp36);
          r800_ffff_tmp38 = simd_andc(r800_ffff_tmp37, tmp3);
          bytetest_b0_b2 = simd_andc(r800_ffff_tmp38, r800_ffff_tmp8);
          r800_ffff_tmp39 = simd_and(r800_ffff_tmp19, bytetest_ea);
          carryQ.cq[7] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp39, carryQ.get_carry_in(7), r800_ffff_tmp40));
          r800_ffff_tmp41 = simd_and(r800_ffff_tmp40, bytetest_99);
          carryQ.cq[8] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp41, carryQ.get_carry_in(8), r800_ffff_tmp42));
          r800_ffff_tmp43 = simd_and(r800_ffff_tmp42, bytetest_b0_b2);
          struct_Me.cc = simd_or(r800_ffff_tmp43, struct_Me.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(4, 5);
        }
  }
  CarryArray<9, 0> carryQ;
  };

  struct Mc {
  Mc() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Mc & struct_Mc) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_f0, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, bytetest_91, tmp12, tmp13, bytetest_80, bytetest_80_80;
		BitBlock tmp14, tmp15, tmp16, tmp17, tmp18, tmp19, tmp20, tmp21, tmp22, tmp23;
		BitBlock tmp24, bytetest_82_82, tmp25, bytetest_82, tmp26, tmp27, tmp28, tmp29;
		BitBlock tmp30, tmp31, bytetest_b0_b2, tmp32, tmp33, tmp34, tmp35, tmp36;
		BitBlock bytetest_b7_b8, tmp37, tmp38, tmp39, bytetest_84, tmp40, tmp41, tmp42;
		BitBlock tmp43, bytetest_ac_ac, tmp44, tmp45, tmp46, tmp47, bytetest_86, tmp48;
		BitBlock tmp49, tmp50, tmp51, tmp52, tmp53, bytetest_b3_b5, tmp54, tmp55;
		BitBlock bytetest_87, tmp56, tmp57, tmp58, tmp59, bytetest_bf_bf, tmp60, tmp61;
		BitBlock tmp62, tmp63, bytetest_9a, tmp64, tmp65, tmp66, tmp67, bytetest_ae_af;
		BitBlock tmp68, bytetest_b6_b6, tmp69, bytetest_96, tmp70, bytetest_bd, tmp71;
		BitBlock tmp72, tmp73, tmp74, bytetest_91_be, tmp75, tmp76, tmp77, tmp78;
		BitBlock tmp79, bytetest_9d, tmp80, bytetest_85, tmp81, tmp82, tmp83;
		BitBlock bytetest_a5_a6, tmp84, tmp85, tmp86, tmp87, tmp88, tmp89, tmp90;
		BitBlock tmp91, tmp92, tmp93, bytetest_ad_b2, tmp94, tmp95, tmp96;
		BitBlock bytetest_e1_ef, bytetest_e0, bytetest_a0_bf, tmp97, tmp98, tmp99;
		BitBlock tmp100, r800_ffff_tmp1, bytetest_a4, r800_ffff_tmp2, bytetest_83_83;
		BitBlock r800_ffff_tmp3, r800_ffff_tmp4, r800_ffff_tmp5, r800_ffff_tmp6;
		BitBlock r800_ffff_tmp7, r800_ffff_tmp8, bytetest_bb_bb, r800_ffff_tmp9;
		BitBlock bytetest_a5, r800_ffff_tmp10, r800_ffff_tmp11, r800_ffff_tmp12;
		BitBlock bytetest_be_bf, r800_ffff_tmp13, r800_ffff_tmp14, r800_ffff_tmp15;
		BitBlock r800_ffff_tmp16, r800_ffff_tmp17, bytetest_89_8c, r800_ffff_tmp18;
		BitBlock bytetest_8e_8f, r800_ffff_tmp19, bytetest_a6, r800_ffff_tmp20;
		BitBlock bytetest_82_83, r800_ffff_tmp21, r800_ffff_tmp22, r800_ffff_tmp23;
		BitBlock bytetest_a7, r800_ffff_tmp24, r800_ffff_tmp25, r800_ffff_tmp26;
		BitBlock r800_ffff_tmp27, r800_ffff_tmp28, bytetest_87_88, r800_ffff_tmp29;
		BitBlock r800_ffff_tmp30, bytetest_8b_8c, r800_ffff_tmp31, bytetest_97_97;
		BitBlock r800_ffff_tmp32, r800_ffff_tmp33, bytetest_a8, r800_ffff_tmp34;
		BitBlock r800_ffff_tmp35, r800_ffff_tmp36, r800_ffff_tmp37, bytetest_a9;
		BitBlock r800_ffff_tmp38, r800_ffff_tmp39, r800_ffff_tmp40, r800_ffff_tmp41;
		BitBlock r800_ffff_tmp42, bytetest_aa, r800_ffff_tmp43, r800_ffff_tmp44;
		BitBlock r800_ffff_tmp45, bytetest_ab, r800_ffff_tmp46, r800_ffff_tmp47;
		BitBlock r800_ffff_tmp48, r800_ffff_tmp49, r800_ffff_tmp50, bytetest_89_89;
		BitBlock r800_ffff_tmp51, r800_ffff_tmp52, bytetest_ac, r800_ffff_tmp53;
		BitBlock r800_ffff_tmp54, r800_ffff_tmp55, r800_ffff_tmp56, bytetest_be_be;
		BitBlock r800_ffff_tmp57, bytetest_ad, r800_ffff_tmp58, r800_ffff_tmp59;
		BitBlock r800_ffff_tmp60, r800_ffff_tmp61, r800_ffff_tmp62, r800_ffff_tmp63;
		BitBlock bytetest_ae, r800_ffff_tmp64, r800_ffff_tmp65, r800_ffff_tmp66;
		BitBlock bytetest_af, r800_ffff_tmp67, bytetest_81_82, r800_ffff_tmp68;
		BitBlock r800_ffff_tmp69, r800_ffff_tmp70, r800_ffff_tmp71, r800_ffff_tmp72;
		BitBlock bytetest_86_88, r800_ffff_tmp73, r800_ffff_tmp74, bytetest_8a_8c;
		BitBlock r800_ffff_tmp75, r800_ffff_tmp76, bytetest_b0, bytetest_81_83;
		BitBlock r800_ffff_tmp77, r800_ffff_tmp78, r800_ffff_tmp79, bytetest_b1;
		BitBlock r800_ffff_tmp80, bytetest_81_84, r800_ffff_tmp81, r800_ffff_tmp82;
		BitBlock r800_ffff_tmp83, bytetest_b2, r800_ffff_tmp84, r800_ffff_tmp85;
		BitBlock r800_ffff_tmp86, r800_ffff_tmp87, bytetest_b3, r800_ffff_tmp88;
		BitBlock bytetest_80_84, r800_ffff_tmp89, r800_ffff_tmp90, r800_ffff_tmp91;
		BitBlock r800_ffff_tmp92, r800_ffff_tmp93, bytetest_8a_8b, r800_ffff_tmp94;
		BitBlock r800_ffff_tmp95, bytetest_95_96, r800_ffff_tmp96, bytetest_b4;
		BitBlock r800_ffff_tmp97, r800_ffff_tmp98, r800_ffff_tmp99, bytetest_b5;
		BitBlock r800_ffff_tmp100, r800_ffff_tmp101, r800_ffff_tmp102;
		BitBlock r800_ffff_tmp103, r800_ffff_tmp104, r800_ffff_tmp105;
		BitBlock r800_ffff_tmp106, r800_ffff_tmp107, bytetest_b6, r800_ffff_tmp108;
		BitBlock r800_ffff_tmp109, r800_ffff_tmp110, bytetest_b7, r800_ffff_tmp111;
		BitBlock r800_ffff_tmp112, r800_ffff_tmp113, r800_ffff_tmp114, bytetest_8f_91;
		BitBlock r800_ffff_tmp115, r800_ffff_tmp116, r800_ffff_tmp117, bytetest_98_9f;
		BitBlock r800_ffff_tmp118, bytetest_b2_b3, r800_ffff_tmp119, bytetest_bc;
		BitBlock r800_ffff_tmp120, r800_ffff_tmp121, r800_ffff_tmp122;
		BitBlock r800_ffff_tmp123, r800_ffff_tmp124, r800_ffff_tmp125, bytetest_e1;
		BitBlock r800_ffff_tmp126, bytetest_ab_ac, r800_ffff_tmp127, r800_ffff_tmp128;
		BitBlock r800_ffff_tmp129, r800_ffff_tmp130, r800_ffff_tmp131, bytetest_b1_b1;
		BitBlock r800_ffff_tmp132, bytetest_b8_b8, r800_ffff_tmp133, r800_ffff_tmp134;
		BitBlock bytetest_bb_bc, r800_ffff_tmp135, bytetest_81, r800_ffff_tmp136;
		BitBlock bytetest_96_97, r800_ffff_tmp137, r800_ffff_tmp138, r800_ffff_tmp139;
		BitBlock r800_ffff_tmp140, bytetest_a2_a4, r800_ffff_tmp141, r800_ffff_tmp142;
		BitBlock r800_ffff_tmp143, bytetest_a7_ad, r800_ffff_tmp144, bytetest_83_84;
		BitBlock r800_ffff_tmp145, r800_ffff_tmp146, r800_ffff_tmp147;
		BitBlock r800_ffff_tmp148, r800_ffff_tmp149, bytetest_87_8c, r800_ffff_tmp150;
		BitBlock bytetest_8f_8f, r800_ffff_tmp151, bytetest_9a_9c, r800_ffff_tmp152;
		BitBlock bytetest_9e, r800_ffff_tmp153, r800_ffff_tmp154, r800_ffff_tmp155;
		BitBlock bytetest_9f, bytetest_80_85, r800_ffff_tmp156, r800_ffff_tmp157;
		BitBlock r800_ffff_tmp158, r800_ffff_tmp159, r800_ffff_tmp160;
		BitBlock r800_ffff_tmp161, r800_ffff_tmp162, r800_ffff_tmp163, bytetest_a3_a6;
		BitBlock r800_ffff_tmp164, r800_ffff_tmp165, r800_ffff_tmp166;
		BitBlock r800_ffff_tmp167, bytetest_a9_ab, r800_ffff_tmp168, bytetest_b0_b1;
		BitBlock r800_ffff_tmp169, r800_ffff_tmp170, r800_ffff_tmp171, bytetest_b3_b8;
		BitBlock r800_ffff_tmp172, r800_ffff_tmp173, r800_ffff_tmp174;
		BitBlock r800_ffff_tmp175, bytetest_b0_bf, r800_ffff_tmp176, r800_ffff_tmp177;
		BitBlock r800_ffff_tmp178, r800_ffff_tmp179, r800_ffff_tmp180, bytetest_88_89;
		BitBlock r800_ffff_tmp181, r800_ffff_tmp182, bytetest_99_9a, r800_ffff_tmp183;
		BitBlock r800_ffff_tmp184, r800_ffff_tmp185, bytetest_95_95, r800_ffff_tmp186;
		BitBlock r800_ffff_tmp187, r800_ffff_tmp188, r800_ffff_tmp189, bytetest_a1_a1;
		BitBlock r800_ffff_tmp190, bytetest_a3_a4, r800_ffff_tmp191, r800_ffff_tmp192;
		BitBlock bytetest_84_84, r800_ffff_tmp193, r800_ffff_tmp194, r800_ffff_tmp195;
		BitBlock bytetest_b5_b5, r800_ffff_tmp196, r800_ffff_tmp197, bytetest_80_81;
		BitBlock r800_ffff_tmp198, r800_ffff_tmp199, r800_ffff_tmp200;
		BitBlock r800_ffff_tmp201, bytetest_bd_bf, r800_ffff_tmp202, r800_ffff_tmp203;
		BitBlock r800_ffff_tmp204, r800_ffff_tmp205, r800_ffff_tmp206;
		BitBlock r800_ffff_tmp207, r800_ffff_tmp208, bytetest_a6_a7, r800_ffff_tmp209;
		BitBlock bytetest_aa_aa, r800_ffff_tmp210, r800_ffff_tmp211, bytetest_ac_ad;
		BitBlock r800_ffff_tmp212, bytetest_a7_a7, r800_ffff_tmp213, r800_ffff_tmp214;
		BitBlock r800_ffff_tmp215, bytetest_aa_ac, r800_ffff_tmp216, bytetest_ae_ae;
		BitBlock r800_ffff_tmp217, r800_ffff_tmp218, r800_ffff_tmp219;
		BitBlock r800_ffff_tmp220, bytetest_a4_ab, r800_ffff_tmp221, r800_ffff_tmp222;
		BitBlock r800_ffff_tmp223, r800_ffff_tmp224, bytetest_b4_b5, r800_ffff_tmp225;
		BitBlock r800_ffff_tmp226, r800_ffff_tmp227, r800_ffff_tmp228;
		BitBlock r800_ffff_tmp229, bytetest_e3, r800_ffff_tmp230, r800_ffff_tmp231;
		BitBlock r800_ffff_tmp232, r800_ffff_tmp233, r800_ffff_tmp234, bytetest_ea;
		BitBlock bytetest_a0, r800_ffff_tmp235, r800_ffff_tmp236, r800_ffff_tmp237;
		BitBlock r800_ffff_tmp238, r800_ffff_tmp239, r800_ffff_tmp240, bytetest_a2;
		BitBlock r800_ffff_tmp241, r800_ffff_tmp242, r800_ffff_tmp243, bytetest_a3;
		BitBlock bytetest_80_83, r800_ffff_tmp244, r800_ffff_tmp245, r800_ffff_tmp246;
		BitBlock bytetest_b4_bf, r800_ffff_tmp247, r800_ffff_tmp248, bytetest_92_93;
		BitBlock r800_ffff_tmp249, r800_ffff_tmp250, r800_ffff_tmp251;
		BitBlock r800_ffff_tmp252, r800_ffff_tmp253, r800_ffff_tmp254;
		BitBlock r800_ffff_tmp255, bytetest_ba_bb, r800_ffff_tmp256, r800_ffff_tmp257;
		BitBlock r800_ffff_tmp258, r800_ffff_tmp259, r800_ffff_tmp260;
		BitBlock r800_ffff_tmp261, r800_ffff_tmp262, r800_ffff_tmp263, bytetest_af_b0;
		BitBlock r800_ffff_tmp264, r800_ffff_tmp265, r800_ffff_tmp266;
		BitBlock r800_ffff_tmp267, bytetest_b3_b4, r800_ffff_tmp268, bytetest_8d_8d;
		BitBlock r800_ffff_tmp269, r800_ffff_tmp270, r800_ffff_tmp271;
		BitBlock r800_ffff_tmp272, bytetest_ab_ab, r800_ffff_tmp273, r800_ffff_tmp274;
		BitBlock r800_ffff_tmp275, r800_ffff_tmp276, r800_ffff_tmp277;
		BitBlock r800_ffff_tmp278, r800_ffff_tmp279, r800_ffff_tmp280;
		BitBlock r800_ffff_tmp281, bytetest_a9_aa, r800_ffff_tmp282, r800_ffff_tmp283;




        struct_Mc.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_and(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_or(tmp4, tmp5);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp11 = simd_andc(tmp10, tmp4);
        bytetest_91 = simd_and(tmp9, tmp11);
        tmp12 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp13 = simd_andc(tmp7, tmp12);
        bytetest_80 = simd_andc(tmp13, tmp6);
        bytetest_80_80 = simd_andc(tmp13, tmp6);
        tmp14 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp14, carryQ.get_carry_in(0), tmp15));
        tmp16 = simd_and(tmp15, bytetest_f0);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp16, carryQ.get_carry_in(1), tmp17));
        tmp18 = simd_and(tmp17, bytetest_91);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp18, carryQ.get_carry_in(2), tmp19));
        tmp20 = simd_and(tmp19, bytetest_80);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp20, carryQ.get_carry_in(3), tmp21));
        tmp22 = simd_and(tmp21, bytetest_80_80);
        struct_Mc.cc = simd_or(tmp22, struct_Mc.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        bytetest_80 = simd_andc(tmp13, tmp6);
        tmp23 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp24 = simd_andc(tmp23, tmp4);
        bytetest_82_82 = simd_and(tmp13, tmp24);
        tmp25 = simd_and(tmp21, bytetest_82_82);
        struct_Mc.cc = simd_or(tmp25, struct_Mc.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        bytetest_82 = simd_and(tmp13, tmp24);
        bytetest_82_82 = simd_and(tmp13, tmp24);
        tmp26 = simd_and(tmp19, bytetest_82);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp26, carryQ.get_carry_in(4), tmp27));
        tmp28 = simd_and(tmp27, bytetest_82_82);
        struct_Mc.cc = simd_or(tmp28, struct_Mc.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        bytetest_82 = simd_and(tmp13, tmp24);
        tmp29 = simd_and(tmp7, tmp2);
        tmp30 = simd_andc(tmp29, tmp4);
        tmp31 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        bytetest_b0_b2 = simd_andc(tmp30, tmp31);
        tmp32 = simd_and(tmp27, bytetest_b0_b2);
        struct_Mc.cc = simd_or(tmp32, struct_Mc.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        bytetest_82 = simd_and(tmp13, tmp24);
        tmp33 = simd_or(basis_bits.bit_5, tmp5);
        tmp34 = simd_not(tmp33);
        tmp35 = simd_and(basis_bits.bit_5, tmp31);
        tmp36 = simd_or(simd_and(basis_bits.bit_4, tmp34), simd_andc(tmp35, basis_bits.bit_4));
        bytetest_b7_b8 = simd_and(tmp29, tmp36);
        tmp37 = simd_and(tmp27, bytetest_b7_b8);
        struct_Mc.cc = simd_or(tmp37, struct_Mc.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        tmp38 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp39 = simd_andc(tmp38, tmp5);
        bytetest_84 = simd_and(tmp13, tmp39);
        tmp40 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp41 = simd_and(tmp7, tmp40);
        tmp42 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp43 = simd_andc(tmp42, tmp5);
        bytetest_ac_ac = simd_and(tmp41, tmp43);
        tmp44 = simd_and(tmp19, bytetest_84);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp44, carryQ.get_carry_in(5), tmp45));
        tmp46 = simd_and(tmp45, bytetest_ac_ac);
        struct_Mc.cc = simd_or(tmp46, struct_Mc.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        tmp47 = simd_and(tmp38, tmp23);
        bytetest_86 = simd_and(tmp13, tmp47);
        bytetest_82_82 = simd_and(tmp13, tmp24);
        tmp48 = simd_and(tmp19, bytetest_86);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp48, carryQ.get_carry_in(6), tmp49));
        tmp50 = simd_and(tmp49, bytetest_82_82);
        struct_Mc.cc = simd_or(tmp50, struct_Mc.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        bytetest_86 = simd_and(tmp13, tmp47);
        tmp51 = simd_andc(tmp29, basis_bits.bit_4);
        tmp52 = simd_not(basis_bits.bit_6);
        tmp53 = simd_or(simd_and(basis_bits.bit_5, tmp52), simd_andc(tmp31, basis_bits.bit_5));
        bytetest_b3_b5 = simd_and(tmp51, tmp53);
        tmp54 = simd_and(tmp49, bytetest_b3_b5);
        struct_Mc.cc = simd_or(tmp54, struct_Mc.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        tmp55 = simd_and(tmp38, tmp31);
        bytetest_87 = simd_and(tmp13, tmp55);
        bytetest_80_80 = simd_andc(tmp13, tmp6);
        tmp56 = simd_and(tmp19, bytetest_87);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp56, carryQ.get_carry_in(7), tmp57));
        tmp58 = simd_and(tmp57, bytetest_80_80);
        bytetest_86 = simd_and(tmp13, tmp47);
        tmp59 = simd_and(tmp42, tmp31);
        bytetest_bf_bf = simd_and(tmp29, tmp59);
        tmp60 = simd_and(tmp49, bytetest_bf_bf);
        tmp61 = simd_or(tmp60, tmp58);
        struct_Mc.cc = simd_or(tmp61, struct_Mc.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        tmp62 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp63 = simd_and(tmp62, tmp23);
        bytetest_9a = simd_and(tmp9, tmp63);
        bytetest_ac_ac = simd_and(tmp41, tmp43);
        tmp64 = simd_and(tmp19, bytetest_9a);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(tmp64, carryQ.get_carry_in(8), tmp65));
        tmp66 = simd_and(tmp65, bytetest_ac_ac);
        struct_Mc.cc = simd_or(tmp66, struct_Mc.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        bytetest_9a = simd_and(tmp9, tmp63);
        tmp67 = simd_and(tmp42, basis_bits.bit_6);
        bytetest_ae_af = simd_and(tmp41, tmp67);
        tmp68 = simd_and(tmp65, bytetest_ae_af);
        struct_Mc.cc = simd_or(tmp68, struct_Mc.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        bytetest_9a = simd_and(tmp9, tmp63);
        bytetest_b6_b6 = simd_and(tmp29, tmp47);
        tmp69 = simd_and(tmp65, bytetest_b6_b6);
        struct_Mc.cc = simd_or(tmp69, struct_Mc.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_96 = simd_and(tmp9, tmp47);
        tmp70 = simd_and(tmp42, tmp10);
        bytetest_bd = simd_and(tmp29, tmp70);
        tmp71 = simd_and(basis_bits.bit_3, tmp59);
        tmp72 = simd_not(tmp71);
        tmp73 = simd_and(basis_bits.bit_3, tmp6);
        tmp74 = simd_or(simd_and(basis_bits.bit_2, tmp72), simd_andc(tmp73, basis_bits.bit_2));
        bytetest_91_be = simd_and(tmp7, tmp74);
        tmp75 = simd_and(tmp17, bytetest_96);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(tmp75, carryQ.get_carry_in(9), tmp76));
        tmp77 = simd_and(tmp76, bytetest_bd);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(tmp77, carryQ.get_carry_in(10), tmp78));
        tmp79 = simd_and(tmp78, bytetest_91_be);
        struct_Mc.cc = simd_or(tmp79, struct_Mc.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp9, tmp70);
        tmp80 = simd_and(tmp38, tmp10);
        bytetest_85 = simd_and(tmp13, tmp80);
        tmp81 = simd_and(tmp41, tmp38);
        tmp82 = simd_not(basis_bits.bit_7);
        tmp83 = simd_or(simd_and(basis_bits.bit_6, tmp82), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
        bytetest_a5_a6 = simd_and(tmp81, tmp83);
        tmp84 = simd_and(tmp17, bytetest_9d);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(tmp84, carryQ.get_carry_in(11), tmp85));
        tmp86 = simd_and(tmp85, bytetest_85);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(tmp86, carryQ.get_carry_in(12), tmp87));
        tmp88 = simd_and(tmp87, bytetest_a5_a6);
        struct_Mc.cc = simd_or(tmp88, struct_Mc.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp9, tmp70);
        bytetest_85 = simd_and(tmp13, tmp80);
        tmp89 = simd_and(tmp7, basis_bits.bit_2);
        tmp90 = simd_or(tmp4, tmp31);
        tmp91 = simd_not(tmp90);
        tmp92 = simd_and(tmp42, tmp5);
        tmp93 = simd_or(simd_and(basis_bits.bit_3, tmp91), simd_andc(tmp92, basis_bits.bit_3));
        bytetest_ad_b2 = simd_and(tmp89, tmp93);
        tmp94 = simd_and(tmp87, bytetest_ad_b2);
        struct_Mc.cc = simd_or(tmp94, struct_Mc.cc);
        tmp95 = simd_and(tmp1, tmp40);
        tmp96 = simd_or(basis_bits.bit_4, tmp33);
        bytetest_e1_ef = simd_and(tmp95, tmp96);
        bytetest_e0 = simd_andc(tmp95, tmp6);
        bytetest_a0_bf = simd_and(tmp7, basis_bits.bit_2);
        tmp97 = simd_and(tmp15, bytetest_e0);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(tmp97, carryQ.get_carry_in(13), tmp98));
        tmp99 = simd_and(tmp98, bytetest_a0_bf);
        tmp100 = simd_or(tmp99, bytetest_e1_ef);
        if ((bitblock::any(tmp100) || carryQ.CarryTest(14, 53))) {
          r800_ffff_tmp1 = simd_and(tmp1, tmp40);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a4 = simd_and(tmp41, tmp39);
          r800_ffff_tmp2 = simd_andc(tmp31, tmp4);
          bytetest_83_83 = simd_and(tmp13, r800_ffff_tmp2);
          r800_ffff_tmp3 = simd_and(tmp15, bytetest_e0);
          carryQ.cq[14] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp3, carryQ.get_carry_in(14), r800_ffff_tmp4));
          r800_ffff_tmp5 = simd_and(r800_ffff_tmp4, bytetest_a4);
          carryQ.cq[15] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp5, carryQ.get_carry_in(15), r800_ffff_tmp6));
          r800_ffff_tmp7 = simd_and(r800_ffff_tmp6, bytetest_83_83);
          struct_Mc.cc = simd_or(r800_ffff_tmp7, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a4 = simd_and(tmp41, tmp39);
          r800_ffff_tmp8 = simd_and(tmp62, tmp31);
          bytetest_bb_bb = simd_and(tmp29, r800_ffff_tmp8);
          r800_ffff_tmp9 = simd_and(r800_ffff_tmp6, bytetest_bb_bb);
          struct_Mc.cc = simd_or(r800_ffff_tmp9, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a5 = simd_and(tmp41, tmp80);
          bytetest_80_80 = simd_andc(tmp13, tmp6);
          r800_ffff_tmp10 = simd_and(r800_ffff_tmp4, bytetest_a5);
          carryQ.cq[16] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp10, carryQ.get_carry_in(16), r800_ffff_tmp11));
          r800_ffff_tmp12 = simd_and(r800_ffff_tmp11, bytetest_80_80);
          bytetest_a4 = simd_and(tmp41, tmp39);
          bytetest_be_bf = simd_and(tmp29, tmp67);
          r800_ffff_tmp13 = simd_and(r800_ffff_tmp6, bytetest_be_bf);
          r800_ffff_tmp14 = simd_or(r800_ffff_tmp13, r800_ffff_tmp12);
          struct_Mc.cc = simd_or(r800_ffff_tmp14, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a5 = simd_and(tmp41, tmp80);
          r800_ffff_tmp15 = simd_and(tmp13, basis_bits.bit_4);
          r800_ffff_tmp16 = simd_not(tmp5);
          r800_ffff_tmp17 = simd_or(simd_and(basis_bits.bit_5, r800_ffff_tmp16), simd_andc(tmp5, basis_bits.bit_5));
          bytetest_89_8c = simd_and(r800_ffff_tmp15, r800_ffff_tmp17);
          r800_ffff_tmp18 = simd_and(r800_ffff_tmp11, bytetest_89_8c);
          struct_Mc.cc = simd_or(r800_ffff_tmp18, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a5 = simd_and(tmp41, tmp80);
          bytetest_8e_8f = simd_and(tmp13, tmp67);
          r800_ffff_tmp19 = simd_and(r800_ffff_tmp11, bytetest_8e_8f);
          struct_Mc.cc = simd_or(r800_ffff_tmp19, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a6 = simd_and(tmp41, tmp47);
          r800_ffff_tmp20 = simd_andc(basis_bits.bit_6, tmp4);
          bytetest_82_83 = simd_and(tmp13, r800_ffff_tmp20);
          r800_ffff_tmp21 = simd_and(r800_ffff_tmp4, bytetest_a6);
          carryQ.cq[17] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp21, carryQ.get_carry_in(17), r800_ffff_tmp22));
          r800_ffff_tmp23 = simd_and(r800_ffff_tmp22, bytetest_82_83);
          struct_Mc.cc = simd_or(r800_ffff_tmp23, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a7 = simd_and(tmp41, tmp55);
          bytetest_80_80 = simd_andc(tmp13, tmp6);
          r800_ffff_tmp24 = simd_and(r800_ffff_tmp4, bytetest_a7);
          carryQ.cq[18] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp24, carryQ.get_carry_in(18), r800_ffff_tmp25));
          r800_ffff_tmp26 = simd_and(r800_ffff_tmp25, bytetest_80_80);
          bytetest_a6 = simd_and(tmp41, tmp47);
          bytetest_be_bf = simd_and(tmp29, tmp67);
          r800_ffff_tmp27 = simd_and(r800_ffff_tmp22, bytetest_be_bf);
          r800_ffff_tmp28 = simd_or(r800_ffff_tmp27, r800_ffff_tmp26);
          struct_Mc.cc = simd_or(r800_ffff_tmp28, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a7 = simd_and(tmp41, tmp55);
          bytetest_87_88 = simd_and(tmp13, tmp36);
          r800_ffff_tmp29 = simd_and(r800_ffff_tmp25, bytetest_87_88);
          struct_Mc.cc = simd_or(r800_ffff_tmp29, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a7 = simd_and(tmp41, tmp55);
          r800_ffff_tmp30 = simd_or(simd_and(basis_bits.bit_5, r800_ffff_tmp16), simd_andc(tmp31, basis_bits.bit_5));
          bytetest_8b_8c = simd_and(r800_ffff_tmp15, r800_ffff_tmp30);
          r800_ffff_tmp31 = simd_and(r800_ffff_tmp25, bytetest_8b_8c);
          struct_Mc.cc = simd_or(r800_ffff_tmp31, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a7 = simd_and(tmp41, tmp55);
          bytetest_97_97 = simd_and(tmp9, tmp55);
          r800_ffff_tmp32 = simd_and(r800_ffff_tmp25, bytetest_97_97);
          struct_Mc.cc = simd_or(r800_ffff_tmp32, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          r800_ffff_tmp33 = simd_andc(tmp62, tmp5);
          bytetest_a8 = simd_and(tmp41, r800_ffff_tmp33);
          bytetest_83_83 = simd_and(tmp13, r800_ffff_tmp2);
          r800_ffff_tmp34 = simd_and(r800_ffff_tmp4, bytetest_a8);
          carryQ.cq[19] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp34, carryQ.get_carry_in(19), r800_ffff_tmp35));
          r800_ffff_tmp36 = simd_and(r800_ffff_tmp35, bytetest_83_83);
          struct_Mc.cc = simd_or(r800_ffff_tmp36, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          r800_ffff_tmp37 = simd_and(tmp62, tmp10);
          bytetest_a9 = simd_and(tmp41, r800_ffff_tmp37);
          bytetest_80_80 = simd_andc(tmp13, tmp6);
          r800_ffff_tmp38 = simd_and(r800_ffff_tmp4, bytetest_a9);
          carryQ.cq[20] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp38, carryQ.get_carry_in(20), r800_ffff_tmp39));
          r800_ffff_tmp40 = simd_and(r800_ffff_tmp39, bytetest_80_80);
          bytetest_a8 = simd_and(tmp41, r800_ffff_tmp33);
          bytetest_be_bf = simd_and(tmp29, tmp67);
          r800_ffff_tmp41 = simd_and(r800_ffff_tmp35, bytetest_be_bf);
          r800_ffff_tmp42 = simd_or(r800_ffff_tmp41, r800_ffff_tmp40);
          struct_Mc.cc = simd_or(r800_ffff_tmp42, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_aa = simd_and(tmp41, tmp63);
          bytetest_83_83 = simd_and(tmp13, r800_ffff_tmp2);
          r800_ffff_tmp43 = simd_and(r800_ffff_tmp4, bytetest_aa);
          carryQ.cq[21] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp43, carryQ.get_carry_in(21), r800_ffff_tmp44));
          r800_ffff_tmp45 = simd_and(r800_ffff_tmp44, bytetest_83_83);
          struct_Mc.cc = simd_or(r800_ffff_tmp45, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ab = simd_and(tmp41, r800_ffff_tmp8);
          bytetest_80_80 = simd_andc(tmp13, tmp6);
          r800_ffff_tmp46 = simd_and(r800_ffff_tmp4, bytetest_ab);
          carryQ.cq[22] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp46, carryQ.get_carry_in(22), r800_ffff_tmp47));
          r800_ffff_tmp48 = simd_and(r800_ffff_tmp47, bytetest_80_80);
          bytetest_aa = simd_and(tmp41, tmp63);
          bytetest_be_bf = simd_and(tmp29, tmp67);
          r800_ffff_tmp49 = simd_and(r800_ffff_tmp44, bytetest_be_bf);
          r800_ffff_tmp50 = simd_or(r800_ffff_tmp49, r800_ffff_tmp48);
          struct_Mc.cc = simd_or(r800_ffff_tmp50, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ab = simd_and(tmp41, r800_ffff_tmp8);
          bytetest_89_89 = simd_and(tmp13, r800_ffff_tmp37);
          r800_ffff_tmp51 = simd_and(r800_ffff_tmp47, bytetest_89_89);
          struct_Mc.cc = simd_or(r800_ffff_tmp51, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ab = simd_and(tmp41, r800_ffff_tmp8);
          bytetest_8b_8c = simd_and(r800_ffff_tmp15, r800_ffff_tmp30);
          r800_ffff_tmp52 = simd_and(r800_ffff_tmp47, bytetest_8b_8c);
          struct_Mc.cc = simd_or(r800_ffff_tmp52, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ac = simd_and(tmp41, tmp43);
          bytetest_82_83 = simd_and(tmp13, r800_ffff_tmp20);
          r800_ffff_tmp53 = simd_and(r800_ffff_tmp4, bytetest_ac);
          carryQ.cq[23] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp53, carryQ.get_carry_in(23), r800_ffff_tmp54));
          r800_ffff_tmp55 = simd_and(r800_ffff_tmp54, bytetest_82_83);
          struct_Mc.cc = simd_or(r800_ffff_tmp55, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ac = simd_and(tmp41, tmp43);
          r800_ffff_tmp56 = simd_and(tmp42, tmp23);
          bytetest_be_be = simd_and(tmp29, r800_ffff_tmp56);
          r800_ffff_tmp57 = simd_and(r800_ffff_tmp54, bytetest_be_be);
          struct_Mc.cc = simd_or(r800_ffff_tmp57, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ad = simd_and(tmp41, tmp70);
          bytetest_80_80 = simd_andc(tmp13, tmp6);
          r800_ffff_tmp58 = simd_and(r800_ffff_tmp4, bytetest_ad);
          carryQ.cq[24] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp58, carryQ.get_carry_in(24), r800_ffff_tmp59));
          r800_ffff_tmp60 = simd_and(r800_ffff_tmp59, bytetest_80_80);
          struct_Mc.cc = simd_or(r800_ffff_tmp60, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ad = simd_and(tmp41, tmp70);
          bytetest_87_88 = simd_and(tmp13, tmp36);
          r800_ffff_tmp61 = simd_and(r800_ffff_tmp59, bytetest_87_88);
          struct_Mc.cc = simd_or(r800_ffff_tmp61, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ad = simd_and(tmp41, tmp70);
          bytetest_8b_8c = simd_and(r800_ffff_tmp15, r800_ffff_tmp30);
          r800_ffff_tmp62 = simd_and(r800_ffff_tmp59, bytetest_8b_8c);
          struct_Mc.cc = simd_or(r800_ffff_tmp62, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ad = simd_and(tmp41, tmp70);
          bytetest_97_97 = simd_and(tmp9, tmp55);
          r800_ffff_tmp63 = simd_and(r800_ffff_tmp59, bytetest_97_97);
          struct_Mc.cc = simd_or(r800_ffff_tmp63, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ae = simd_and(tmp41, r800_ffff_tmp56);
          bytetest_be_bf = simd_and(tmp29, tmp67);
          r800_ffff_tmp64 = simd_and(r800_ffff_tmp4, bytetest_ae);
          carryQ.cq[25] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp64, carryQ.get_carry_in(25), r800_ffff_tmp65));
          r800_ffff_tmp66 = simd_and(r800_ffff_tmp65, bytetest_be_bf);
          struct_Mc.cc = simd_or(r800_ffff_tmp66, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_af = simd_and(tmp41, tmp59);
          r800_ffff_tmp67 = simd_andc(tmp13, tmp4);
          bytetest_81_82 = simd_and(r800_ffff_tmp67, tmp83);
          r800_ffff_tmp68 = simd_and(r800_ffff_tmp4, bytetest_af);
          carryQ.cq[26] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp68, carryQ.get_carry_in(26), r800_ffff_tmp69));
          r800_ffff_tmp70 = simd_and(r800_ffff_tmp69, bytetest_81_82);
          struct_Mc.cc = simd_or(r800_ffff_tmp70, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_af = simd_and(tmp41, tmp59);
          r800_ffff_tmp71 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
          r800_ffff_tmp72 = simd_or(simd_and(basis_bits.bit_4, tmp34), simd_andc(r800_ffff_tmp71, basis_bits.bit_4));
          bytetest_86_88 = simd_and(tmp13, r800_ffff_tmp72);
          r800_ffff_tmp73 = simd_and(r800_ffff_tmp69, bytetest_86_88);
          struct_Mc.cc = simd_or(r800_ffff_tmp73, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_af = simd_and(tmp41, tmp59);
          r800_ffff_tmp74 = simd_or(simd_and(basis_bits.bit_5, r800_ffff_tmp16), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
          bytetest_8a_8c = simd_and(r800_ffff_tmp15, r800_ffff_tmp74);
          r800_ffff_tmp75 = simd_and(r800_ffff_tmp69, bytetest_8a_8c);
          struct_Mc.cc = simd_or(r800_ffff_tmp75, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_af = simd_and(tmp41, tmp59);
          bytetest_97_97 = simd_and(tmp9, tmp55);
          r800_ffff_tmp76 = simd_and(r800_ffff_tmp69, bytetest_97_97);
          struct_Mc.cc = simd_or(r800_ffff_tmp76, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b0 = simd_andc(tmp29, tmp6);
          bytetest_81_83 = simd_and(r800_ffff_tmp67, tmp5);
          r800_ffff_tmp77 = simd_and(r800_ffff_tmp4, bytetest_b0);
          carryQ.cq[27] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp77, carryQ.get_carry_in(27), r800_ffff_tmp78));
          r800_ffff_tmp79 = simd_and(r800_ffff_tmp78, bytetest_81_83);
          struct_Mc.cc = simd_or(r800_ffff_tmp79, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b1 = simd_and(tmp29, tmp11);
          r800_ffff_tmp80 = simd_andc(tmp13, basis_bits.bit_4);
          bytetest_81_84 = simd_and(r800_ffff_tmp80, r800_ffff_tmp17);
          r800_ffff_tmp81 = simd_and(r800_ffff_tmp4, bytetest_b1);
          carryQ.cq[28] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp81, carryQ.get_carry_in(28), r800_ffff_tmp82));
          r800_ffff_tmp83 = simd_and(r800_ffff_tmp82, bytetest_81_84);
          struct_Mc.cc = simd_or(r800_ffff_tmp83, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b2 = simd_and(tmp29, tmp24);
          bytetest_82_83 = simd_and(tmp13, r800_ffff_tmp20);
          r800_ffff_tmp84 = simd_and(r800_ffff_tmp4, bytetest_b2);
          carryQ.cq[29] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp84, carryQ.get_carry_in(29), r800_ffff_tmp85));
          r800_ffff_tmp86 = simd_and(r800_ffff_tmp85, bytetest_82_83);
          struct_Mc.cc = simd_or(r800_ffff_tmp86, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b2 = simd_and(tmp29, tmp24);
          bytetest_be_be = simd_and(tmp29, r800_ffff_tmp56);
          r800_ffff_tmp87 = simd_and(r800_ffff_tmp85, bytetest_be_be);
          struct_Mc.cc = simd_or(r800_ffff_tmp87, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b3 = simd_and(tmp29, r800_ffff_tmp2);
          r800_ffff_tmp88 = simd_and(basis_bits.bit_5, tmp5);
          bytetest_80_84 = simd_andc(r800_ffff_tmp80, r800_ffff_tmp88);
          r800_ffff_tmp89 = simd_and(r800_ffff_tmp4, bytetest_b3);
          carryQ.cq[30] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp89, carryQ.get_carry_in(30), r800_ffff_tmp90));
          r800_ffff_tmp91 = simd_and(r800_ffff_tmp90, bytetest_80_84);
          struct_Mc.cc = simd_or(r800_ffff_tmp91, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b3 = simd_and(tmp29, r800_ffff_tmp2);
          bytetest_87_88 = simd_and(tmp13, tmp36);
          r800_ffff_tmp92 = simd_and(r800_ffff_tmp90, bytetest_87_88);
          struct_Mc.cc = simd_or(r800_ffff_tmp92, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b3 = simd_and(tmp29, r800_ffff_tmp2);
          r800_ffff_tmp93 = simd_and(tmp62, basis_bits.bit_6);
          bytetest_8a_8b = simd_and(tmp13, r800_ffff_tmp93);
          r800_ffff_tmp94 = simd_and(r800_ffff_tmp90, bytetest_8a_8b);
          struct_Mc.cc = simd_or(r800_ffff_tmp94, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b3 = simd_and(tmp29, r800_ffff_tmp2);
          r800_ffff_tmp95 = simd_and(tmp9, tmp38);
          bytetest_95_96 = simd_and(r800_ffff_tmp95, tmp83);
          r800_ffff_tmp96 = simd_and(r800_ffff_tmp90, bytetest_95_96);
          struct_Mc.cc = simd_or(r800_ffff_tmp96, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b4 = simd_and(tmp29, tmp39);
          bytetest_82_83 = simd_and(tmp13, r800_ffff_tmp20);
          r800_ffff_tmp97 = simd_and(r800_ffff_tmp4, bytetest_b4);
          carryQ.cq[31] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp97, carryQ.get_carry_in(31), r800_ffff_tmp98));
          r800_ffff_tmp99 = simd_and(r800_ffff_tmp98, bytetest_82_83);
          struct_Mc.cc = simd_or(r800_ffff_tmp99, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b5 = simd_and(tmp29, tmp80);
          bytetest_80_80 = simd_andc(tmp13, tmp6);
          r800_ffff_tmp100 = simd_and(r800_ffff_tmp4, bytetest_b5);
          carryQ.cq[32] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp100, carryQ.get_carry_in(32), r800_ffff_tmp101));
          r800_ffff_tmp102 = simd_and(r800_ffff_tmp101, bytetest_80_80);
          bytetest_b4 = simd_and(tmp29, tmp39);
          bytetest_be_bf = simd_and(tmp29, tmp67);
          r800_ffff_tmp103 = simd_and(r800_ffff_tmp98, bytetest_be_bf);
          r800_ffff_tmp104 = simd_or(r800_ffff_tmp103, r800_ffff_tmp102);
          struct_Mc.cc = simd_or(r800_ffff_tmp104, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b5 = simd_and(tmp29, tmp80);
          bytetest_86_88 = simd_and(tmp13, r800_ffff_tmp72);
          r800_ffff_tmp105 = simd_and(r800_ffff_tmp101, bytetest_86_88);
          struct_Mc.cc = simd_or(r800_ffff_tmp105, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b5 = simd_and(tmp29, tmp80);
          bytetest_8a_8c = simd_and(r800_ffff_tmp15, r800_ffff_tmp74);
          r800_ffff_tmp106 = simd_and(r800_ffff_tmp101, bytetest_8a_8c);
          struct_Mc.cc = simd_or(r800_ffff_tmp106, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b5 = simd_and(tmp29, tmp80);
          bytetest_97_97 = simd_and(tmp9, tmp55);
          r800_ffff_tmp107 = simd_and(r800_ffff_tmp101, bytetest_97_97);
          struct_Mc.cc = simd_or(r800_ffff_tmp107, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b6 = simd_and(tmp29, tmp47);
          bytetest_82_83 = simd_and(tmp13, r800_ffff_tmp20);
          r800_ffff_tmp108 = simd_and(r800_ffff_tmp4, bytetest_b6);
          carryQ.cq[33] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp108, carryQ.get_carry_in(33), r800_ffff_tmp109));
          r800_ffff_tmp110 = simd_and(r800_ffff_tmp109, bytetest_82_83);
          struct_Mc.cc = simd_or(r800_ffff_tmp110, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b7 = simd_and(tmp29, tmp55);
          r800_ffff_tmp111 = simd_andc(tmp7, basis_bits.bit_2);
          r800_ffff_tmp112 = simd_or(tmp4, basis_bits.bit_6);
          r800_ffff_tmp113 = simd_not(r800_ffff_tmp112);
          r800_ffff_tmp114 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp113), simd_andc(tmp59, basis_bits.bit_3));
          bytetest_8f_91 = simd_and(r800_ffff_tmp111, r800_ffff_tmp114);
          r800_ffff_tmp115 = simd_and(r800_ffff_tmp4, bytetest_b7);
          carryQ.cq[34] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp115, carryQ.get_carry_in(34), r800_ffff_tmp116));
          r800_ffff_tmp117 = simd_and(r800_ffff_tmp116, bytetest_8f_91);
          struct_Mc.cc = simd_or(r800_ffff_tmp117, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b7 = simd_and(tmp29, tmp55);
          bytetest_98_9f = simd_and(tmp9, basis_bits.bit_4);
          r800_ffff_tmp118 = simd_and(r800_ffff_tmp116, bytetest_98_9f);
          struct_Mc.cc = simd_or(r800_ffff_tmp118, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b7 = simd_and(tmp29, tmp55);
          bytetest_b2_b3 = simd_and(tmp29, r800_ffff_tmp20);
          r800_ffff_tmp119 = simd_and(r800_ffff_tmp116, bytetest_b2_b3);
          struct_Mc.cc = simd_or(r800_ffff_tmp119, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bc = simd_and(tmp29, tmp43);
          bytetest_be_bf = simd_and(tmp29, tmp67);
          r800_ffff_tmp120 = simd_and(r800_ffff_tmp4, bytetest_bc);
          carryQ.cq[35] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp120, carryQ.get_carry_in(35), r800_ffff_tmp121));
          r800_ffff_tmp122 = simd_and(r800_ffff_tmp121, bytetest_be_bf);
          struct_Mc.cc = simd_or(r800_ffff_tmp122, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bd = simd_and(tmp29, tmp70);
          bytetest_bf_bf = simd_and(tmp29, tmp59);
          r800_ffff_tmp123 = simd_and(r800_ffff_tmp4, bytetest_bd);
          carryQ.cq[36] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp123, carryQ.get_carry_in(36), r800_ffff_tmp124));
          r800_ffff_tmp125 = simd_and(r800_ffff_tmp124, bytetest_bf_bf);
          struct_Mc.cc = simd_or(r800_ffff_tmp125, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_80 = simd_andc(tmp13, tmp6);
          r800_ffff_tmp126 = simd_and(tmp41, basis_bits.bit_4);
          bytetest_ab_ac = simd_and(r800_ffff_tmp126, r800_ffff_tmp30);
          r800_ffff_tmp127 = simd_and(tmp15, bytetest_e1);
          carryQ.cq[37] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp127, carryQ.get_carry_in(37), r800_ffff_tmp128));
          r800_ffff_tmp129 = simd_and(r800_ffff_tmp128, bytetest_80);
          carryQ.cq[38] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp129, carryQ.get_carry_in(38), r800_ffff_tmp130));
          r800_ffff_tmp131 = simd_and(r800_ffff_tmp130, bytetest_ab_ac);
          struct_Mc.cc = simd_or(r800_ffff_tmp131, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_80 = simd_andc(tmp13, tmp6);
          bytetest_b1_b1 = simd_and(tmp29, tmp11);
          r800_ffff_tmp132 = simd_and(r800_ffff_tmp130, bytetest_b1_b1);
          struct_Mc.cc = simd_or(r800_ffff_tmp132, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_80 = simd_andc(tmp13, tmp6);
          bytetest_b8_b8 = simd_and(tmp29, r800_ffff_tmp33);
          r800_ffff_tmp133 = simd_and(r800_ffff_tmp130, bytetest_b8_b8);
          struct_Mc.cc = simd_or(r800_ffff_tmp133, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_80 = simd_andc(tmp13, tmp6);
          r800_ffff_tmp134 = simd_and(tmp29, basis_bits.bit_4);
          bytetest_bb_bc = simd_and(r800_ffff_tmp134, r800_ffff_tmp30);
          r800_ffff_tmp135 = simd_and(r800_ffff_tmp130, bytetest_bb_bc);
          struct_Mc.cc = simd_or(r800_ffff_tmp135, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_81 = simd_and(tmp13, tmp11);
          r800_ffff_tmp136 = simd_and(tmp38, basis_bits.bit_6);
          bytetest_96_97 = simd_and(tmp9, r800_ffff_tmp136);
          r800_ffff_tmp137 = simd_and(r800_ffff_tmp128, bytetest_81);
          carryQ.cq[39] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp137, carryQ.get_carry_in(39), r800_ffff_tmp138));
          r800_ffff_tmp139 = simd_and(r800_ffff_tmp138, bytetest_96_97);
          struct_Mc.cc = simd_or(r800_ffff_tmp139, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_81 = simd_and(tmp13, tmp11);
          r800_ffff_tmp140 = simd_andc(tmp41, basis_bits.bit_4);
          bytetest_a2_a4 = simd_and(r800_ffff_tmp140, r800_ffff_tmp74);
          r800_ffff_tmp141 = simd_and(r800_ffff_tmp138, bytetest_a2_a4);
          struct_Mc.cc = simd_or(r800_ffff_tmp141, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_81 = simd_and(tmp13, tmp11);
          r800_ffff_tmp142 = simd_not(r800_ffff_tmp71);
          r800_ffff_tmp143 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp142), simd_andc(tmp35, basis_bits.bit_4));
          bytetest_a7_ad = simd_and(tmp41, r800_ffff_tmp143);
          r800_ffff_tmp144 = simd_and(r800_ffff_tmp138, bytetest_a7_ad);
          struct_Mc.cc = simd_or(r800_ffff_tmp144, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_82 = simd_and(tmp13, tmp24);
          bytetest_83_84 = simd_and(r800_ffff_tmp80, r800_ffff_tmp30);
          r800_ffff_tmp145 = simd_and(r800_ffff_tmp128, bytetest_82);
          carryQ.cq[40] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp145, carryQ.get_carry_in(40), r800_ffff_tmp146));
          r800_ffff_tmp147 = simd_and(r800_ffff_tmp146, bytetest_83_84);
          struct_Mc.cc = simd_or(r800_ffff_tmp147, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_82 = simd_and(tmp13, tmp24);
          r800_ffff_tmp148 = simd_not(r800_ffff_tmp88);
          r800_ffff_tmp149 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp148), simd_andc(tmp35, basis_bits.bit_4));
          bytetest_87_8c = simd_and(tmp13, r800_ffff_tmp149);
          r800_ffff_tmp150 = simd_and(r800_ffff_tmp146, bytetest_87_8c);
          struct_Mc.cc = simd_or(r800_ffff_tmp150, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_82 = simd_and(tmp13, tmp24);
          bytetest_8f_8f = simd_and(tmp13, tmp59);
          r800_ffff_tmp151 = simd_and(r800_ffff_tmp146, bytetest_8f_8f);
          struct_Mc.cc = simd_or(r800_ffff_tmp151, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_82 = simd_and(tmp13, tmp24);
          bytetest_9a_9c = simd_and(bytetest_98_9f, r800_ffff_tmp74);
          r800_ffff_tmp152 = simd_and(r800_ffff_tmp146, bytetest_9a_9c);
          struct_Mc.cc = simd_or(r800_ffff_tmp152, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9e = simd_and(tmp9, r800_ffff_tmp56);
          bytetest_b6_b6 = simd_and(tmp29, tmp47);
          r800_ffff_tmp153 = simd_and(r800_ffff_tmp128, bytetest_9e);
          carryQ.cq[41] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp153, carryQ.get_carry_in(41), r800_ffff_tmp154));
          r800_ffff_tmp155 = simd_and(r800_ffff_tmp154, bytetest_b6_b6);
          struct_Mc.cc = simd_or(r800_ffff_tmp155, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9f = simd_and(tmp9, tmp59);
          bytetest_80_85 = simd_andc(r800_ffff_tmp80, r800_ffff_tmp71);
          r800_ffff_tmp156 = simd_and(r800_ffff_tmp128, bytetest_9f);
          carryQ.cq[42] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp156, carryQ.get_carry_in(42), r800_ffff_tmp157));
          r800_ffff_tmp158 = simd_and(r800_ffff_tmp157, bytetest_80_85);
          bytetest_9e = simd_and(tmp9, r800_ffff_tmp56);
          bytetest_be_bf = simd_and(tmp29, tmp67);
          r800_ffff_tmp159 = simd_and(r800_ffff_tmp154, bytetest_be_bf);
          r800_ffff_tmp160 = simd_or(r800_ffff_tmp159, r800_ffff_tmp158);
          struct_Mc.cc = simd_or(r800_ffff_tmp160, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9f = simd_and(tmp9, tmp59);
          bytetest_87_88 = simd_and(tmp13, tmp36);
          r800_ffff_tmp161 = simd_and(r800_ffff_tmp157, bytetest_87_88);
          struct_Mc.cc = simd_or(r800_ffff_tmp161, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a4 = simd_and(tmp41, tmp39);
          r800_ffff_tmp162 = simd_not(tmp31);
          r800_ffff_tmp163 = simd_or(simd_and(basis_bits.bit_5, r800_ffff_tmp162), simd_andc(tmp31, basis_bits.bit_5));
          bytetest_a3_a6 = simd_and(r800_ffff_tmp140, r800_ffff_tmp163);
          r800_ffff_tmp164 = simd_and(r800_ffff_tmp128, bytetest_a4);
          carryQ.cq[43] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp164, carryQ.get_carry_in(43), r800_ffff_tmp165));
          r800_ffff_tmp166 = simd_and(r800_ffff_tmp165, bytetest_a3_a6);
          struct_Mc.cc = simd_or(r800_ffff_tmp166, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a4 = simd_and(tmp41, tmp39);
          r800_ffff_tmp167 = simd_and(tmp41, tmp62);
          bytetest_a9_ab = simd_and(r800_ffff_tmp167, tmp5);
          r800_ffff_tmp168 = simd_and(r800_ffff_tmp165, bytetest_a9_ab);
          struct_Mc.cc = simd_or(r800_ffff_tmp168, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a4 = simd_and(tmp41, tmp39);
          bytetest_b0_b1 = simd_andc(tmp29, r800_ffff_tmp112);
          r800_ffff_tmp169 = simd_and(r800_ffff_tmp165, bytetest_b0_b1);
          struct_Mc.cc = simd_or(r800_ffff_tmp169, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a4 = simd_and(tmp41, tmp39);
          r800_ffff_tmp170 = simd_or(basis_bits.bit_5, tmp31);
          r800_ffff_tmp171 = simd_or(simd_and(basis_bits.bit_4, tmp34), simd_andc(r800_ffff_tmp170, basis_bits.bit_4));
          bytetest_b3_b8 = simd_and(tmp29, r800_ffff_tmp171);
          r800_ffff_tmp172 = simd_and(r800_ffff_tmp165, bytetest_b3_b8);
          struct_Mc.cc = simd_or(r800_ffff_tmp172, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a7 = simd_and(tmp41, tmp55);
          bytetest_80_80 = simd_andc(tmp13, tmp6);
          r800_ffff_tmp173 = simd_and(r800_ffff_tmp128, bytetest_a7);
          carryQ.cq[44] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp173, carryQ.get_carry_in(44), r800_ffff_tmp174));
          r800_ffff_tmp175 = simd_and(r800_ffff_tmp174, bytetest_80_80);
          bytetest_a6 = simd_and(tmp41, tmp47);
          bytetest_b0_bf = simd_and(tmp7, tmp2);
          r800_ffff_tmp176 = simd_and(r800_ffff_tmp128, bytetest_a6);
          carryQ.cq[45] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp176, carryQ.get_carry_in(45), r800_ffff_tmp177));
          r800_ffff_tmp178 = simd_and(r800_ffff_tmp177, bytetest_b0_bf);
          r800_ffff_tmp179 = simd_or(r800_ffff_tmp178, r800_ffff_tmp175);
          struct_Mc.cc = simd_or(r800_ffff_tmp179, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a7 = simd_and(tmp41, tmp55);
          r800_ffff_tmp180 = simd_andc(tmp62, basis_bits.bit_6);
          bytetest_88_89 = simd_and(tmp13, r800_ffff_tmp180);
          r800_ffff_tmp181 = simd_and(r800_ffff_tmp174, bytetest_88_89);
          struct_Mc.cc = simd_or(r800_ffff_tmp181, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a8 = simd_and(tmp41, r800_ffff_tmp33);
          r800_ffff_tmp182 = simd_and(tmp9, tmp62);
          bytetest_99_9a = simd_and(r800_ffff_tmp182, tmp83);
          r800_ffff_tmp183 = simd_and(r800_ffff_tmp128, bytetest_a8);
          carryQ.cq[46] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp183, carryQ.get_carry_in(46), r800_ffff_tmp184));
          r800_ffff_tmp185 = simd_and(r800_ffff_tmp184, bytetest_99_9a);
          struct_Mc.cc = simd_or(r800_ffff_tmp185, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a9 = simd_and(tmp41, r800_ffff_tmp37);
          bytetest_95_95 = simd_and(tmp9, tmp80);
          r800_ffff_tmp186 = simd_and(r800_ffff_tmp128, bytetest_a9);
          carryQ.cq[47] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp186, carryQ.get_carry_in(47), r800_ffff_tmp187));
          r800_ffff_tmp188 = simd_and(r800_ffff_tmp187, bytetest_95_95);
          struct_Mc.cc = simd_or(r800_ffff_tmp188, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a9 = simd_and(tmp41, r800_ffff_tmp37);
          bytetest_97_97 = simd_and(tmp9, tmp55);
          r800_ffff_tmp189 = simd_and(r800_ffff_tmp187, bytetest_97_97);
          struct_Mc.cc = simd_or(r800_ffff_tmp189, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a9 = simd_and(tmp41, r800_ffff_tmp37);
          bytetest_a1_a1 = simd_and(tmp41, tmp11);
          r800_ffff_tmp190 = simd_and(r800_ffff_tmp187, bytetest_a1_a1);
          struct_Mc.cc = simd_or(r800_ffff_tmp190, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a9 = simd_and(tmp41, r800_ffff_tmp37);
          bytetest_a3_a4 = simd_and(r800_ffff_tmp140, r800_ffff_tmp30);
          r800_ffff_tmp191 = simd_and(r800_ffff_tmp187, bytetest_a3_a4);
          struct_Mc.cc = simd_or(r800_ffff_tmp191, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a9 = simd_and(tmp41, r800_ffff_tmp37);
          bytetest_ad_b2 = simd_and(tmp89, tmp93);
          r800_ffff_tmp192 = simd_and(r800_ffff_tmp187, bytetest_ad_b2);
          struct_Mc.cc = simd_or(r800_ffff_tmp192, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_ac = simd_and(tmp41, tmp43);
          bytetest_84_84 = simd_and(tmp13, tmp39);
          r800_ffff_tmp193 = simd_and(r800_ffff_tmp128, bytetest_ac);
          carryQ.cq[48] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp193, carryQ.get_carry_in(48), r800_ffff_tmp194));
          r800_ffff_tmp195 = simd_and(r800_ffff_tmp194, bytetest_84_84);
          struct_Mc.cc = simd_or(r800_ffff_tmp195, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_ac = simd_and(tmp41, tmp43);
          bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp80);
          r800_ffff_tmp196 = simd_and(r800_ffff_tmp194, bytetest_b5_b5);
          struct_Mc.cc = simd_or(r800_ffff_tmp196, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_ac = simd_and(tmp41, tmp43);
          bytetest_bb_bb = simd_and(bytetest_b0_bf, r800_ffff_tmp8);
          r800_ffff_tmp197 = simd_and(r800_ffff_tmp194, bytetest_bb_bb);
          struct_Mc.cc = simd_or(r800_ffff_tmp197, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_ad = simd_and(tmp41, tmp70);
          bytetest_80_81 = simd_andc(tmp13, r800_ffff_tmp112);
          r800_ffff_tmp198 = simd_and(r800_ffff_tmp128, bytetest_ad);
          carryQ.cq[49] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp198, carryQ.get_carry_in(49), r800_ffff_tmp199));
          r800_ffff_tmp200 = simd_and(r800_ffff_tmp199, bytetest_80_81);
          bytetest_ac = simd_and(tmp41, tmp43);
          r800_ffff_tmp201 = simd_and(bytetest_b0_bf, tmp42);
          bytetest_bd_bf = simd_and(r800_ffff_tmp201, tmp5);
          r800_ffff_tmp202 = simd_and(r800_ffff_tmp194, bytetest_bd_bf);
          r800_ffff_tmp203 = simd_or(r800_ffff_tmp202, r800_ffff_tmp200);
          struct_Mc.cc = simd_or(r800_ffff_tmp203, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_ad = simd_and(tmp41, tmp70);
          bytetest_83_84 = simd_and(r800_ffff_tmp80, r800_ffff_tmp30);
          r800_ffff_tmp204 = simd_and(r800_ffff_tmp199, bytetest_83_84);
          struct_Mc.cc = simd_or(r800_ffff_tmp204, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_ae = simd_and(tmp41, r800_ffff_tmp56);
          bytetest_82_82 = simd_and(tmp13, tmp24);
          r800_ffff_tmp205 = simd_and(r800_ffff_tmp128, bytetest_ae);
          carryQ.cq[50] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp205, carryQ.get_carry_in(50), r800_ffff_tmp206));
          r800_ffff_tmp207 = simd_and(r800_ffff_tmp206, bytetest_82_82);
          struct_Mc.cc = simd_or(r800_ffff_tmp207, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_ae = simd_and(tmp41, r800_ffff_tmp56);
          bytetest_a1_a1 = simd_and(tmp41, tmp11);
          r800_ffff_tmp208 = simd_and(r800_ffff_tmp206, bytetest_a1_a1);
          struct_Mc.cc = simd_or(r800_ffff_tmp208, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_ae = simd_and(tmp41, r800_ffff_tmp56);
          bytetest_a6_a7 = simd_and(tmp41, r800_ffff_tmp136);
          r800_ffff_tmp209 = simd_and(r800_ffff_tmp206, bytetest_a6_a7);
          struct_Mc.cc = simd_or(r800_ffff_tmp209, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_ae = simd_and(tmp41, r800_ffff_tmp56);
          bytetest_aa_aa = simd_and(tmp41, tmp63);
          r800_ffff_tmp210 = simd_and(r800_ffff_tmp206, bytetest_aa_aa);
          struct_Mc.cc = simd_or(r800_ffff_tmp210, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_ae = simd_and(tmp41, r800_ffff_tmp56);
          r800_ffff_tmp211 = simd_andc(tmp42, basis_bits.bit_6);
          bytetest_ac_ad = simd_and(tmp41, r800_ffff_tmp211);
          r800_ffff_tmp212 = simd_and(r800_ffff_tmp206, bytetest_ac_ad);
          struct_Mc.cc = simd_or(r800_ffff_tmp212, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_af = simd_and(tmp41, tmp59);
          bytetest_a7_a7 = simd_and(tmp41, tmp55);
          r800_ffff_tmp213 = simd_and(r800_ffff_tmp128, bytetest_af);
          carryQ.cq[51] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp213, carryQ.get_carry_in(51), r800_ffff_tmp214));
          r800_ffff_tmp215 = simd_and(r800_ffff_tmp214, bytetest_a7_a7);
          struct_Mc.cc = simd_or(r800_ffff_tmp215, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_af = simd_and(tmp41, tmp59);
          bytetest_aa_ac = simd_and(r800_ffff_tmp126, r800_ffff_tmp74);
          r800_ffff_tmp216 = simd_and(r800_ffff_tmp214, bytetest_aa_ac);
          struct_Mc.cc = simd_or(r800_ffff_tmp216, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_af = simd_and(tmp41, tmp59);
          bytetest_ae_ae = simd_and(tmp41, r800_ffff_tmp56);
          r800_ffff_tmp217 = simd_and(r800_ffff_tmp214, bytetest_ae_ae);
          struct_Mc.cc = simd_or(r800_ffff_tmp217, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_af = simd_and(tmp41, tmp59);
          bytetest_b2_b3 = simd_and(bytetest_b0_bf, r800_ffff_tmp20);
          r800_ffff_tmp218 = simd_and(r800_ffff_tmp214, bytetest_b2_b3);
          struct_Mc.cc = simd_or(r800_ffff_tmp218, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_b0 = simd_andc(bytetest_b0_bf, tmp6);
          r800_ffff_tmp219 = simd_not(basis_bits.bit_5);
          r800_ffff_tmp220 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp219), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
          bytetest_a4_ab = simd_and(tmp41, r800_ffff_tmp220);
          r800_ffff_tmp221 = simd_and(r800_ffff_tmp128, bytetest_b0);
          carryQ.cq[52] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp221, carryQ.get_carry_in(52), r800_ffff_tmp222));
          r800_ffff_tmp223 = simd_and(r800_ffff_tmp222, bytetest_a4_ab);
          struct_Mc.cc = simd_or(r800_ffff_tmp223, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_b0 = simd_andc(bytetest_b0_bf, tmp6);
          r800_ffff_tmp224 = simd_andc(tmp38, basis_bits.bit_6);
          bytetest_b4_b5 = simd_and(bytetest_b0_bf, r800_ffff_tmp224);
          r800_ffff_tmp225 = simd_and(r800_ffff_tmp222, bytetest_b4_b5);
          struct_Mc.cc = simd_or(r800_ffff_tmp225, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_b3 = simd_and(bytetest_b0_bf, r800_ffff_tmp2);
          bytetest_a1_a1 = simd_and(tmp41, tmp11);
          r800_ffff_tmp226 = simd_and(r800_ffff_tmp128, bytetest_b3);
          carryQ.cq[53] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp226, carryQ.get_carry_in(53), r800_ffff_tmp227));
          r800_ffff_tmp228 = simd_and(r800_ffff_tmp227, bytetest_a1_a1);
          struct_Mc.cc = simd_or(r800_ffff_tmp228, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_b3 = simd_and(bytetest_b0_bf, r800_ffff_tmp2);
          bytetest_b2_b3 = simd_and(bytetest_b0_bf, r800_ffff_tmp20);
          r800_ffff_tmp229 = simd_and(r800_ffff_tmp227, bytetest_b2_b3);
          struct_Mc.cc = simd_or(r800_ffff_tmp229, struct_Mc.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_80 = simd_andc(tmp13, tmp6);
          bytetest_ae_af = simd_and(tmp41, tmp67);
          r800_ffff_tmp230 = simd_and(tmp15, bytetest_e3);
          carryQ.cq[54] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp230, carryQ.get_carry_in(54), r800_ffff_tmp231));
          r800_ffff_tmp232 = simd_and(r800_ffff_tmp231, bytetest_80);
          carryQ.cq[55] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp232, carryQ.get_carry_in(55), r800_ffff_tmp233));
          r800_ffff_tmp234 = simd_and(r800_ffff_tmp233, bytetest_ae_af);
          struct_Mc.cc = simd_or(r800_ffff_tmp234, struct_Mc.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp63);
          bytetest_a0 = simd_andc(tmp41, tmp6);
          bytetest_a3_a4 = simd_and(r800_ffff_tmp140, r800_ffff_tmp30);
          r800_ffff_tmp235 = simd_and(tmp15, bytetest_ea);
          carryQ.cq[56] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp235, carryQ.get_carry_in(56), r800_ffff_tmp236));
          r800_ffff_tmp237 = simd_and(r800_ffff_tmp236, bytetest_a0);
          carryQ.cq[57] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp237, carryQ.get_carry_in(57), r800_ffff_tmp238));
          r800_ffff_tmp239 = simd_and(r800_ffff_tmp238, bytetest_a3_a4);
          struct_Mc.cc = simd_or(r800_ffff_tmp239, struct_Mc.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp63);
          bytetest_a0 = simd_andc(tmp41, tmp6);
          bytetest_a7_a7 = simd_and(tmp41, tmp55);
          r800_ffff_tmp240 = simd_and(r800_ffff_tmp238, bytetest_a7_a7);
          struct_Mc.cc = simd_or(r800_ffff_tmp240, struct_Mc.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp63);
          bytetest_a2 = simd_and(tmp41, tmp24);
          bytetest_80_81 = simd_andc(tmp13, r800_ffff_tmp112);
          r800_ffff_tmp241 = simd_and(r800_ffff_tmp236, bytetest_a2);
          carryQ.cq[58] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp241, carryQ.get_carry_in(58), r800_ffff_tmp242));
          r800_ffff_tmp243 = simd_and(r800_ffff_tmp242, bytetest_80_81);
          struct_Mc.cc = simd_or(r800_ffff_tmp243, struct_Mc.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp63);
          bytetest_a3 = simd_and(tmp41, r800_ffff_tmp2);
          bytetest_80_83 = simd_andc(tmp13, tmp4);
          r800_ffff_tmp244 = simd_and(r800_ffff_tmp236, bytetest_a3);
          carryQ.cq[59] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp244, carryQ.get_carry_in(59), r800_ffff_tmp245));
          r800_ffff_tmp246 = simd_and(r800_ffff_tmp245, bytetest_80_83);
          bytetest_a2 = simd_and(tmp41, tmp24);
          bytetest_b4_bf = simd_and(bytetest_b0_bf, tmp4);
          r800_ffff_tmp247 = simd_and(r800_ffff_tmp242, bytetest_b4_bf);
          r800_ffff_tmp248 = simd_or(r800_ffff_tmp247, r800_ffff_tmp246);
          struct_Mc.cc = simd_or(r800_ffff_tmp248, struct_Mc.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp63);
          bytetest_a5 = simd_and(tmp41, tmp80);
          bytetest_92_93 = simd_and(tmp9, r800_ffff_tmp20);
          r800_ffff_tmp249 = simd_and(r800_ffff_tmp236, bytetest_a5);
          carryQ.cq[60] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp249, carryQ.get_carry_in(60), r800_ffff_tmp250));
          r800_ffff_tmp251 = simd_and(r800_ffff_tmp250, bytetest_92_93);
          struct_Mc.cc = simd_or(r800_ffff_tmp251, struct_Mc.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp63);
          bytetest_a6 = simd_and(tmp41, tmp47);
          bytetest_83_83 = simd_and(tmp13, r800_ffff_tmp2);
          r800_ffff_tmp252 = simd_and(r800_ffff_tmp236, bytetest_a6);
          carryQ.cq[61] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp252, carryQ.get_carry_in(61), r800_ffff_tmp253));
          r800_ffff_tmp254 = simd_and(r800_ffff_tmp253, bytetest_83_83);
          struct_Mc.cc = simd_or(r800_ffff_tmp254, struct_Mc.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp63);
          bytetest_a6 = simd_and(tmp41, tmp47);
          bytetest_b4_b5 = simd_and(bytetest_b0_bf, r800_ffff_tmp224);
          r800_ffff_tmp255 = simd_and(r800_ffff_tmp253, bytetest_b4_b5);
          struct_Mc.cc = simd_or(r800_ffff_tmp255, struct_Mc.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp63);
          bytetest_a6 = simd_and(tmp41, tmp47);
          bytetest_ba_bb = simd_and(bytetest_b0_bf, r800_ffff_tmp93);
          r800_ffff_tmp256 = simd_and(r800_ffff_tmp253, bytetest_ba_bb);
          struct_Mc.cc = simd_or(r800_ffff_tmp256, struct_Mc.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp63);
          bytetest_a7 = simd_and(tmp41, tmp55);
          bytetest_80_80 = simd_andc(tmp13, tmp6);
          r800_ffff_tmp257 = simd_and(r800_ffff_tmp236, bytetest_a7);
          carryQ.cq[62] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp257, carryQ.get_carry_in(62), r800_ffff_tmp258));
          r800_ffff_tmp259 = simd_and(r800_ffff_tmp258, bytetest_80_80);
          bytetest_a6 = simd_and(tmp41, tmp47);
          bytetest_bd_bf = simd_and(r800_ffff_tmp201, tmp5);
          r800_ffff_tmp260 = simd_and(r800_ffff_tmp253, bytetest_bd_bf);
          r800_ffff_tmp261 = simd_or(r800_ffff_tmp260, r800_ffff_tmp259);
          struct_Mc.cc = simd_or(r800_ffff_tmp261, struct_Mc.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp63);
          bytetest_a8 = simd_and(tmp41, r800_ffff_tmp33);
          r800_ffff_tmp262 = simd_not(tmp6);
          r800_ffff_tmp263 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp262), simd_andc(tmp59, basis_bits.bit_3));
          bytetest_af_b0 = simd_and(tmp89, r800_ffff_tmp263);
          r800_ffff_tmp264 = simd_and(r800_ffff_tmp236, bytetest_a8);
          carryQ.cq[63] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp264, carryQ.get_carry_in(63), r800_ffff_tmp265));
          r800_ffff_tmp266 = simd_and(r800_ffff_tmp265, bytetest_af_b0);
          struct_Mc.cc = simd_or(r800_ffff_tmp266, struct_Mc.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp63);
          bytetest_a8 = simd_and(tmp41, r800_ffff_tmp33);
          r800_ffff_tmp267 = simd_andc(bytetest_b0_bf, basis_bits.bit_4);
          bytetest_b3_b4 = simd_and(r800_ffff_tmp267, r800_ffff_tmp30);
          r800_ffff_tmp268 = simd_and(r800_ffff_tmp265, bytetest_b3_b4);
          struct_Mc.cc = simd_or(r800_ffff_tmp268, struct_Mc.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp63);
          bytetest_a9 = simd_and(tmp41, r800_ffff_tmp37);
          bytetest_8d_8d = simd_and(tmp13, tmp70);
          r800_ffff_tmp269 = simd_and(r800_ffff_tmp236, bytetest_a9);
          carryQ.cq[64] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp269, carryQ.get_carry_in(64), r800_ffff_tmp270));
          r800_ffff_tmp271 = simd_and(r800_ffff_tmp270, bytetest_8d_8d);
          struct_Mc.cc = simd_or(r800_ffff_tmp271, struct_Mc.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp63);
          bytetest_a9 = simd_and(tmp41, r800_ffff_tmp37);
          bytetest_bb_bb = simd_and(bytetest_b0_bf, r800_ffff_tmp8);
          r800_ffff_tmp272 = simd_and(r800_ffff_tmp270, bytetest_bb_bb);
          struct_Mc.cc = simd_or(r800_ffff_tmp272, struct_Mc.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp63);
          bytetest_ab = simd_and(tmp41, r800_ffff_tmp8);
          bytetest_ab_ab = simd_and(tmp41, r800_ffff_tmp8);
          r800_ffff_tmp273 = simd_and(r800_ffff_tmp236, bytetest_ab);
          carryQ.cq[65] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp273, carryQ.get_carry_in(65), r800_ffff_tmp274));
          r800_ffff_tmp275 = simd_and(r800_ffff_tmp274, bytetest_ab_ab);
          struct_Mc.cc = simd_or(r800_ffff_tmp275, struct_Mc.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp63);
          bytetest_ab = simd_and(tmp41, r800_ffff_tmp8);
          bytetest_ae_af = simd_and(tmp41, tmp67);
          r800_ffff_tmp276 = simd_and(r800_ffff_tmp274, bytetest_ae_af);
          struct_Mc.cc = simd_or(r800_ffff_tmp276, struct_Mc.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp63);
          bytetest_ab = simd_and(tmp41, r800_ffff_tmp8);
          bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp80);
          r800_ffff_tmp277 = simd_and(r800_ffff_tmp274, bytetest_b5_b5);
          struct_Mc.cc = simd_or(r800_ffff_tmp277, struct_Mc.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp63);
          bytetest_af = simd_and(tmp41, tmp59);
          bytetest_a3_a4 = simd_and(r800_ffff_tmp140, r800_ffff_tmp30);
          r800_ffff_tmp278 = simd_and(r800_ffff_tmp236, bytetest_af);
          carryQ.cq[66] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp278, carryQ.get_carry_in(66), r800_ffff_tmp279));
          r800_ffff_tmp280 = simd_and(r800_ffff_tmp279, bytetest_a3_a4);
          struct_Mc.cc = simd_or(r800_ffff_tmp280, struct_Mc.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp63);
          bytetest_af = simd_and(tmp41, tmp59);
          bytetest_a6_a7 = simd_and(tmp41, r800_ffff_tmp136);
          r800_ffff_tmp281 = simd_and(r800_ffff_tmp279, bytetest_a6_a7);
          struct_Mc.cc = simd_or(r800_ffff_tmp281, struct_Mc.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp63);
          bytetest_af = simd_and(tmp41, tmp59);
          bytetest_a9_aa = simd_and(r800_ffff_tmp167, tmp83);
          r800_ffff_tmp282 = simd_and(r800_ffff_tmp279, bytetest_a9_aa);
          struct_Mc.cc = simd_or(r800_ffff_tmp282, struct_Mc.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp63);
          bytetest_af = simd_and(tmp41, tmp59);
          bytetest_ac_ac = simd_and(tmp41, tmp43);
          r800_ffff_tmp283 = simd_and(r800_ffff_tmp279, bytetest_ac_ac);
          struct_Mc.cc = simd_or(r800_ffff_tmp283, struct_Mc.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(14, 53);
        }
        carryQ.CarryQ_Adjust(67);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Mc & struct_Mc, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_f0, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, bytetest_91, tmp12, tmp13, bytetest_80, bytetest_80_80;
		BitBlock tmp14, tmp15, tmp16, tmp17, tmp18, tmp19, tmp20, tmp21, tmp22, tmp23;
		BitBlock tmp24, bytetest_82_82, tmp25, bytetest_82, tmp26, tmp27, tmp28, tmp29;
		BitBlock tmp30, tmp31, bytetest_b0_b2, tmp32, tmp33, tmp34, tmp35, tmp36;
		BitBlock bytetest_b7_b8, tmp37, tmp38, tmp39, bytetest_84, tmp40, tmp41, tmp42;
		BitBlock tmp43, bytetest_ac_ac, tmp44, tmp45, tmp46, tmp47, bytetest_86, tmp48;
		BitBlock tmp49, tmp50, tmp51, tmp52, tmp53, bytetest_b3_b5, tmp54, tmp55;
		BitBlock bytetest_87, tmp56, tmp57, tmp58, tmp59, bytetest_bf_bf, tmp60, tmp61;
		BitBlock tmp62, tmp63, bytetest_9a, tmp64, tmp65, tmp66, tmp67, bytetest_ae_af;
		BitBlock tmp68, bytetest_b6_b6, tmp69, bytetest_96, tmp70, bytetest_bd, tmp71;
		BitBlock tmp72, tmp73, tmp74, bytetest_91_be, tmp75, tmp76, tmp77, tmp78;
		BitBlock tmp79, bytetest_9d, tmp80, bytetest_85, tmp81, tmp82, tmp83;
		BitBlock bytetest_a5_a6, tmp84, tmp85, tmp86, tmp87, tmp88, tmp89, tmp90;
		BitBlock tmp91, tmp92, tmp93, bytetest_ad_b2, tmp94, tmp95, tmp96;
		BitBlock bytetest_e1_ef, bytetest_e0, bytetest_a0_bf, tmp97, tmp98, tmp99;
		BitBlock tmp100, r800_ffff_tmp1, bytetest_a4, r800_ffff_tmp2, bytetest_83_83;
		BitBlock r800_ffff_tmp3, r800_ffff_tmp4, r800_ffff_tmp5, r800_ffff_tmp6;
		BitBlock r800_ffff_tmp7, r800_ffff_tmp8, bytetest_bb_bb, r800_ffff_tmp9;
		BitBlock bytetest_a5, r800_ffff_tmp10, r800_ffff_tmp11, r800_ffff_tmp12;
		BitBlock bytetest_be_bf, r800_ffff_tmp13, r800_ffff_tmp14, r800_ffff_tmp15;
		BitBlock r800_ffff_tmp16, r800_ffff_tmp17, bytetest_89_8c, r800_ffff_tmp18;
		BitBlock bytetest_8e_8f, r800_ffff_tmp19, bytetest_a6, r800_ffff_tmp20;
		BitBlock bytetest_82_83, r800_ffff_tmp21, r800_ffff_tmp22, r800_ffff_tmp23;
		BitBlock bytetest_a7, r800_ffff_tmp24, r800_ffff_tmp25, r800_ffff_tmp26;
		BitBlock r800_ffff_tmp27, r800_ffff_tmp28, bytetest_87_88, r800_ffff_tmp29;
		BitBlock r800_ffff_tmp30, bytetest_8b_8c, r800_ffff_tmp31, bytetest_97_97;
		BitBlock r800_ffff_tmp32, r800_ffff_tmp33, bytetest_a8, r800_ffff_tmp34;
		BitBlock r800_ffff_tmp35, r800_ffff_tmp36, r800_ffff_tmp37, bytetest_a9;
		BitBlock r800_ffff_tmp38, r800_ffff_tmp39, r800_ffff_tmp40, r800_ffff_tmp41;
		BitBlock r800_ffff_tmp42, bytetest_aa, r800_ffff_tmp43, r800_ffff_tmp44;
		BitBlock r800_ffff_tmp45, bytetest_ab, r800_ffff_tmp46, r800_ffff_tmp47;
		BitBlock r800_ffff_tmp48, r800_ffff_tmp49, r800_ffff_tmp50, bytetest_89_89;
		BitBlock r800_ffff_tmp51, r800_ffff_tmp52, bytetest_ac, r800_ffff_tmp53;
		BitBlock r800_ffff_tmp54, r800_ffff_tmp55, r800_ffff_tmp56, bytetest_be_be;
		BitBlock r800_ffff_tmp57, bytetest_ad, r800_ffff_tmp58, r800_ffff_tmp59;
		BitBlock r800_ffff_tmp60, r800_ffff_tmp61, r800_ffff_tmp62, r800_ffff_tmp63;
		BitBlock bytetest_ae, r800_ffff_tmp64, r800_ffff_tmp65, r800_ffff_tmp66;
		BitBlock bytetest_af, r800_ffff_tmp67, bytetest_81_82, r800_ffff_tmp68;
		BitBlock r800_ffff_tmp69, r800_ffff_tmp70, r800_ffff_tmp71, r800_ffff_tmp72;
		BitBlock bytetest_86_88, r800_ffff_tmp73, r800_ffff_tmp74, bytetest_8a_8c;
		BitBlock r800_ffff_tmp75, r800_ffff_tmp76, bytetest_b0, bytetest_81_83;
		BitBlock r800_ffff_tmp77, r800_ffff_tmp78, r800_ffff_tmp79, bytetest_b1;
		BitBlock r800_ffff_tmp80, bytetest_81_84, r800_ffff_tmp81, r800_ffff_tmp82;
		BitBlock r800_ffff_tmp83, bytetest_b2, r800_ffff_tmp84, r800_ffff_tmp85;
		BitBlock r800_ffff_tmp86, r800_ffff_tmp87, bytetest_b3, r800_ffff_tmp88;
		BitBlock bytetest_80_84, r800_ffff_tmp89, r800_ffff_tmp90, r800_ffff_tmp91;
		BitBlock r800_ffff_tmp92, r800_ffff_tmp93, bytetest_8a_8b, r800_ffff_tmp94;
		BitBlock r800_ffff_tmp95, bytetest_95_96, r800_ffff_tmp96, bytetest_b4;
		BitBlock r800_ffff_tmp97, r800_ffff_tmp98, r800_ffff_tmp99, bytetest_b5;
		BitBlock r800_ffff_tmp100, r800_ffff_tmp101, r800_ffff_tmp102;
		BitBlock r800_ffff_tmp103, r800_ffff_tmp104, r800_ffff_tmp105;
		BitBlock r800_ffff_tmp106, r800_ffff_tmp107, bytetest_b6, r800_ffff_tmp108;
		BitBlock r800_ffff_tmp109, r800_ffff_tmp110, bytetest_b7, r800_ffff_tmp111;
		BitBlock r800_ffff_tmp112, r800_ffff_tmp113, r800_ffff_tmp114, bytetest_8f_91;
		BitBlock r800_ffff_tmp115, r800_ffff_tmp116, r800_ffff_tmp117, bytetest_98_9f;
		BitBlock r800_ffff_tmp118, bytetest_b2_b3, r800_ffff_tmp119, bytetest_bc;
		BitBlock r800_ffff_tmp120, r800_ffff_tmp121, r800_ffff_tmp122;
		BitBlock r800_ffff_tmp123, r800_ffff_tmp124, r800_ffff_tmp125, bytetest_e1;
		BitBlock r800_ffff_tmp126, bytetest_ab_ac, r800_ffff_tmp127, r800_ffff_tmp128;
		BitBlock r800_ffff_tmp129, r800_ffff_tmp130, r800_ffff_tmp131, bytetest_b1_b1;
		BitBlock r800_ffff_tmp132, bytetest_b8_b8, r800_ffff_tmp133, r800_ffff_tmp134;
		BitBlock bytetest_bb_bc, r800_ffff_tmp135, bytetest_81, r800_ffff_tmp136;
		BitBlock bytetest_96_97, r800_ffff_tmp137, r800_ffff_tmp138, r800_ffff_tmp139;
		BitBlock r800_ffff_tmp140, bytetest_a2_a4, r800_ffff_tmp141, r800_ffff_tmp142;
		BitBlock r800_ffff_tmp143, bytetest_a7_ad, r800_ffff_tmp144, bytetest_83_84;
		BitBlock r800_ffff_tmp145, r800_ffff_tmp146, r800_ffff_tmp147;
		BitBlock r800_ffff_tmp148, r800_ffff_tmp149, bytetest_87_8c, r800_ffff_tmp150;
		BitBlock bytetest_8f_8f, r800_ffff_tmp151, bytetest_9a_9c, r800_ffff_tmp152;
		BitBlock bytetest_9e, r800_ffff_tmp153, r800_ffff_tmp154, r800_ffff_tmp155;
		BitBlock bytetest_9f, bytetest_80_85, r800_ffff_tmp156, r800_ffff_tmp157;
		BitBlock r800_ffff_tmp158, r800_ffff_tmp159, r800_ffff_tmp160;
		BitBlock r800_ffff_tmp161, r800_ffff_tmp162, r800_ffff_tmp163, bytetest_a3_a6;
		BitBlock r800_ffff_tmp164, r800_ffff_tmp165, r800_ffff_tmp166;
		BitBlock r800_ffff_tmp167, bytetest_a9_ab, r800_ffff_tmp168, bytetest_b0_b1;
		BitBlock r800_ffff_tmp169, r800_ffff_tmp170, r800_ffff_tmp171, bytetest_b3_b8;
		BitBlock r800_ffff_tmp172, r800_ffff_tmp173, r800_ffff_tmp174;
		BitBlock r800_ffff_tmp175, bytetest_b0_bf, r800_ffff_tmp176, r800_ffff_tmp177;
		BitBlock r800_ffff_tmp178, r800_ffff_tmp179, r800_ffff_tmp180, bytetest_88_89;
		BitBlock r800_ffff_tmp181, r800_ffff_tmp182, bytetest_99_9a, r800_ffff_tmp183;
		BitBlock r800_ffff_tmp184, r800_ffff_tmp185, bytetest_95_95, r800_ffff_tmp186;
		BitBlock r800_ffff_tmp187, r800_ffff_tmp188, r800_ffff_tmp189, bytetest_a1_a1;
		BitBlock r800_ffff_tmp190, bytetest_a3_a4, r800_ffff_tmp191, r800_ffff_tmp192;
		BitBlock bytetest_84_84, r800_ffff_tmp193, r800_ffff_tmp194, r800_ffff_tmp195;
		BitBlock bytetest_b5_b5, r800_ffff_tmp196, r800_ffff_tmp197, bytetest_80_81;
		BitBlock r800_ffff_tmp198, r800_ffff_tmp199, r800_ffff_tmp200;
		BitBlock r800_ffff_tmp201, bytetest_bd_bf, r800_ffff_tmp202, r800_ffff_tmp203;
		BitBlock r800_ffff_tmp204, r800_ffff_tmp205, r800_ffff_tmp206;
		BitBlock r800_ffff_tmp207, r800_ffff_tmp208, bytetest_a6_a7, r800_ffff_tmp209;
		BitBlock bytetest_aa_aa, r800_ffff_tmp210, r800_ffff_tmp211, bytetest_ac_ad;
		BitBlock r800_ffff_tmp212, bytetest_a7_a7, r800_ffff_tmp213, r800_ffff_tmp214;
		BitBlock r800_ffff_tmp215, bytetest_aa_ac, r800_ffff_tmp216, bytetest_ae_ae;
		BitBlock r800_ffff_tmp217, r800_ffff_tmp218, r800_ffff_tmp219;
		BitBlock r800_ffff_tmp220, bytetest_a4_ab, r800_ffff_tmp221, r800_ffff_tmp222;
		BitBlock r800_ffff_tmp223, r800_ffff_tmp224, bytetest_b4_b5, r800_ffff_tmp225;
		BitBlock r800_ffff_tmp226, r800_ffff_tmp227, r800_ffff_tmp228;
		BitBlock r800_ffff_tmp229, bytetest_e3, r800_ffff_tmp230, r800_ffff_tmp231;
		BitBlock r800_ffff_tmp232, r800_ffff_tmp233, r800_ffff_tmp234, bytetest_ea;
		BitBlock bytetest_a0, r800_ffff_tmp235, r800_ffff_tmp236, r800_ffff_tmp237;
		BitBlock r800_ffff_tmp238, r800_ffff_tmp239, r800_ffff_tmp240, bytetest_a2;
		BitBlock r800_ffff_tmp241, r800_ffff_tmp242, r800_ffff_tmp243, bytetest_a3;
		BitBlock bytetest_80_83, r800_ffff_tmp244, r800_ffff_tmp245, r800_ffff_tmp246;
		BitBlock bytetest_b4_bf, r800_ffff_tmp247, r800_ffff_tmp248, bytetest_92_93;
		BitBlock r800_ffff_tmp249, r800_ffff_tmp250, r800_ffff_tmp251;
		BitBlock r800_ffff_tmp252, r800_ffff_tmp253, r800_ffff_tmp254;
		BitBlock r800_ffff_tmp255, bytetest_ba_bb, r800_ffff_tmp256, r800_ffff_tmp257;
		BitBlock r800_ffff_tmp258, r800_ffff_tmp259, r800_ffff_tmp260;
		BitBlock r800_ffff_tmp261, r800_ffff_tmp262, r800_ffff_tmp263, bytetest_af_b0;
		BitBlock r800_ffff_tmp264, r800_ffff_tmp265, r800_ffff_tmp266;
		BitBlock r800_ffff_tmp267, bytetest_b3_b4, r800_ffff_tmp268, bytetest_8d_8d;
		BitBlock r800_ffff_tmp269, r800_ffff_tmp270, r800_ffff_tmp271;
		BitBlock r800_ffff_tmp272, bytetest_ab_ab, r800_ffff_tmp273, r800_ffff_tmp274;
		BitBlock r800_ffff_tmp275, r800_ffff_tmp276, r800_ffff_tmp277;
		BitBlock r800_ffff_tmp278, r800_ffff_tmp279, r800_ffff_tmp280;
		BitBlock r800_ffff_tmp281, bytetest_a9_aa, r800_ffff_tmp282, r800_ffff_tmp283;




        struct_Mc.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_and(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_or(tmp4, tmp5);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp11 = simd_andc(tmp10, tmp4);
        bytetest_91 = simd_and(tmp9, tmp11);
        tmp12 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp13 = simd_andc(tmp7, tmp12);
        bytetest_80 = simd_andc(tmp13, tmp6);
        bytetest_80_80 = simd_andc(tmp13, tmp6);
        tmp14 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp14, carryQ.get_carry_in(0), tmp15));
        tmp16 = simd_and(tmp15, bytetest_f0);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp16, carryQ.get_carry_in(1), tmp17));
        tmp18 = simd_and(tmp17, bytetest_91);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp18, carryQ.get_carry_in(2), tmp19));
        tmp20 = simd_and(tmp19, bytetest_80);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp20, carryQ.get_carry_in(3), tmp21));
        tmp22 = simd_and(tmp21, bytetest_80_80);
        struct_Mc.cc = simd_or(tmp22, struct_Mc.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        bytetest_80 = simd_andc(tmp13, tmp6);
        tmp23 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp24 = simd_andc(tmp23, tmp4);
        bytetest_82_82 = simd_and(tmp13, tmp24);
        tmp25 = simd_and(tmp21, bytetest_82_82);
        struct_Mc.cc = simd_or(tmp25, struct_Mc.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        bytetest_82 = simd_and(tmp13, tmp24);
        bytetest_82_82 = simd_and(tmp13, tmp24);
        tmp26 = simd_and(tmp19, bytetest_82);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp26, carryQ.get_carry_in(4), tmp27));
        tmp28 = simd_and(tmp27, bytetest_82_82);
        struct_Mc.cc = simd_or(tmp28, struct_Mc.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        bytetest_82 = simd_and(tmp13, tmp24);
        tmp29 = simd_and(tmp7, tmp2);
        tmp30 = simd_andc(tmp29, tmp4);
        tmp31 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        bytetest_b0_b2 = simd_andc(tmp30, tmp31);
        tmp32 = simd_and(tmp27, bytetest_b0_b2);
        struct_Mc.cc = simd_or(tmp32, struct_Mc.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        bytetest_82 = simd_and(tmp13, tmp24);
        tmp33 = simd_or(basis_bits.bit_5, tmp5);
        tmp34 = simd_not(tmp33);
        tmp35 = simd_and(basis_bits.bit_5, tmp31);
        tmp36 = simd_or(simd_and(basis_bits.bit_4, tmp34), simd_andc(tmp35, basis_bits.bit_4));
        bytetest_b7_b8 = simd_and(tmp29, tmp36);
        tmp37 = simd_and(tmp27, bytetest_b7_b8);
        struct_Mc.cc = simd_or(tmp37, struct_Mc.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        tmp38 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp39 = simd_andc(tmp38, tmp5);
        bytetest_84 = simd_and(tmp13, tmp39);
        tmp40 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp41 = simd_and(tmp7, tmp40);
        tmp42 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp43 = simd_andc(tmp42, tmp5);
        bytetest_ac_ac = simd_and(tmp41, tmp43);
        tmp44 = simd_and(tmp19, bytetest_84);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp44, carryQ.get_carry_in(5), tmp45));
        tmp46 = simd_and(tmp45, bytetest_ac_ac);
        struct_Mc.cc = simd_or(tmp46, struct_Mc.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        tmp47 = simd_and(tmp38, tmp23);
        bytetest_86 = simd_and(tmp13, tmp47);
        bytetest_82_82 = simd_and(tmp13, tmp24);
        tmp48 = simd_and(tmp19, bytetest_86);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp48, carryQ.get_carry_in(6), tmp49));
        tmp50 = simd_and(tmp49, bytetest_82_82);
        struct_Mc.cc = simd_or(tmp50, struct_Mc.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        bytetest_86 = simd_and(tmp13, tmp47);
        tmp51 = simd_andc(tmp29, basis_bits.bit_4);
        tmp52 = simd_not(basis_bits.bit_6);
        tmp53 = simd_or(simd_and(basis_bits.bit_5, tmp52), simd_andc(tmp31, basis_bits.bit_5));
        bytetest_b3_b5 = simd_and(tmp51, tmp53);
        tmp54 = simd_and(tmp49, bytetest_b3_b5);
        struct_Mc.cc = simd_or(tmp54, struct_Mc.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        tmp55 = simd_and(tmp38, tmp31);
        bytetest_87 = simd_and(tmp13, tmp55);
        bytetest_80_80 = simd_andc(tmp13, tmp6);
        tmp56 = simd_and(tmp19, bytetest_87);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp56, carryQ.get_carry_in(7), tmp57));
        tmp58 = simd_and(tmp57, bytetest_80_80);
        bytetest_86 = simd_and(tmp13, tmp47);
        tmp59 = simd_and(tmp42, tmp31);
        bytetest_bf_bf = simd_and(tmp29, tmp59);
        tmp60 = simd_and(tmp49, bytetest_bf_bf);
        tmp61 = simd_or(tmp60, tmp58);
        struct_Mc.cc = simd_or(tmp61, struct_Mc.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        tmp62 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp63 = simd_and(tmp62, tmp23);
        bytetest_9a = simd_and(tmp9, tmp63);
        bytetest_ac_ac = simd_and(tmp41, tmp43);
        tmp64 = simd_and(tmp19, bytetest_9a);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(tmp64, carryQ.get_carry_in(8), tmp65));
        tmp66 = simd_and(tmp65, bytetest_ac_ac);
        struct_Mc.cc = simd_or(tmp66, struct_Mc.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        bytetest_9a = simd_and(tmp9, tmp63);
        tmp67 = simd_and(tmp42, basis_bits.bit_6);
        bytetest_ae_af = simd_and(tmp41, tmp67);
        tmp68 = simd_and(tmp65, bytetest_ae_af);
        struct_Mc.cc = simd_or(tmp68, struct_Mc.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        bytetest_9a = simd_and(tmp9, tmp63);
        bytetest_b6_b6 = simd_and(tmp29, tmp47);
        tmp69 = simd_and(tmp65, bytetest_b6_b6);
        struct_Mc.cc = simd_or(tmp69, struct_Mc.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_96 = simd_and(tmp9, tmp47);
        tmp70 = simd_and(tmp42, tmp10);
        bytetest_bd = simd_and(tmp29, tmp70);
        tmp71 = simd_and(basis_bits.bit_3, tmp59);
        tmp72 = simd_not(tmp71);
        tmp73 = simd_and(basis_bits.bit_3, tmp6);
        tmp74 = simd_or(simd_and(basis_bits.bit_2, tmp72), simd_andc(tmp73, basis_bits.bit_2));
        bytetest_91_be = simd_and(tmp7, tmp74);
        tmp75 = simd_and(tmp17, bytetest_96);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(tmp75, carryQ.get_carry_in(9), tmp76));
        tmp77 = simd_and(tmp76, bytetest_bd);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(tmp77, carryQ.get_carry_in(10), tmp78));
        tmp79 = simd_and(tmp78, bytetest_91_be);
        struct_Mc.cc = simd_or(tmp79, struct_Mc.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp9, tmp70);
        tmp80 = simd_and(tmp38, tmp10);
        bytetest_85 = simd_and(tmp13, tmp80);
        tmp81 = simd_and(tmp41, tmp38);
        tmp82 = simd_not(basis_bits.bit_7);
        tmp83 = simd_or(simd_and(basis_bits.bit_6, tmp82), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
        bytetest_a5_a6 = simd_and(tmp81, tmp83);
        tmp84 = simd_and(tmp17, bytetest_9d);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(tmp84, carryQ.get_carry_in(11), tmp85));
        tmp86 = simd_and(tmp85, bytetest_85);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(tmp86, carryQ.get_carry_in(12), tmp87));
        tmp88 = simd_and(tmp87, bytetest_a5_a6);
        struct_Mc.cc = simd_or(tmp88, struct_Mc.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp9, tmp70);
        bytetest_85 = simd_and(tmp13, tmp80);
        tmp89 = simd_and(tmp7, basis_bits.bit_2);
        tmp90 = simd_or(tmp4, tmp31);
        tmp91 = simd_not(tmp90);
        tmp92 = simd_and(tmp42, tmp5);
        tmp93 = simd_or(simd_and(basis_bits.bit_3, tmp91), simd_andc(tmp92, basis_bits.bit_3));
        bytetest_ad_b2 = simd_and(tmp89, tmp93);
        tmp94 = simd_and(tmp87, bytetest_ad_b2);
        struct_Mc.cc = simd_or(tmp94, struct_Mc.cc);
        tmp95 = simd_and(tmp1, tmp40);
        tmp96 = simd_or(basis_bits.bit_4, tmp33);
        bytetest_e1_ef = simd_and(tmp95, tmp96);
        bytetest_e0 = simd_andc(tmp95, tmp6);
        bytetest_a0_bf = simd_and(tmp7, basis_bits.bit_2);
        tmp97 = simd_and(tmp15, bytetest_e0);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(tmp97, carryQ.get_carry_in(13), tmp98));
        tmp99 = simd_and(tmp98, bytetest_a0_bf);
        tmp100 = simd_or(tmp99, bytetest_e1_ef);
        if ((bitblock::any(tmp100) || carryQ.CarryTest(14, 53))) {
          r800_ffff_tmp1 = simd_and(tmp1, tmp40);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a4 = simd_and(tmp41, tmp39);
          r800_ffff_tmp2 = simd_andc(tmp31, tmp4);
          bytetest_83_83 = simd_and(tmp13, r800_ffff_tmp2);
          r800_ffff_tmp3 = simd_and(tmp15, bytetest_e0);
          carryQ.cq[14] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp3, carryQ.get_carry_in(14), r800_ffff_tmp4));
          r800_ffff_tmp5 = simd_and(r800_ffff_tmp4, bytetest_a4);
          carryQ.cq[15] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp5, carryQ.get_carry_in(15), r800_ffff_tmp6));
          r800_ffff_tmp7 = simd_and(r800_ffff_tmp6, bytetest_83_83);
          struct_Mc.cc = simd_or(r800_ffff_tmp7, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a4 = simd_and(tmp41, tmp39);
          r800_ffff_tmp8 = simd_and(tmp62, tmp31);
          bytetest_bb_bb = simd_and(tmp29, r800_ffff_tmp8);
          r800_ffff_tmp9 = simd_and(r800_ffff_tmp6, bytetest_bb_bb);
          struct_Mc.cc = simd_or(r800_ffff_tmp9, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a5 = simd_and(tmp41, tmp80);
          bytetest_80_80 = simd_andc(tmp13, tmp6);
          r800_ffff_tmp10 = simd_and(r800_ffff_tmp4, bytetest_a5);
          carryQ.cq[16] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp10, carryQ.get_carry_in(16), r800_ffff_tmp11));
          r800_ffff_tmp12 = simd_and(r800_ffff_tmp11, bytetest_80_80);
          bytetest_a4 = simd_and(tmp41, tmp39);
          bytetest_be_bf = simd_and(tmp29, tmp67);
          r800_ffff_tmp13 = simd_and(r800_ffff_tmp6, bytetest_be_bf);
          r800_ffff_tmp14 = simd_or(r800_ffff_tmp13, r800_ffff_tmp12);
          struct_Mc.cc = simd_or(r800_ffff_tmp14, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a5 = simd_and(tmp41, tmp80);
          r800_ffff_tmp15 = simd_and(tmp13, basis_bits.bit_4);
          r800_ffff_tmp16 = simd_not(tmp5);
          r800_ffff_tmp17 = simd_or(simd_and(basis_bits.bit_5, r800_ffff_tmp16), simd_andc(tmp5, basis_bits.bit_5));
          bytetest_89_8c = simd_and(r800_ffff_tmp15, r800_ffff_tmp17);
          r800_ffff_tmp18 = simd_and(r800_ffff_tmp11, bytetest_89_8c);
          struct_Mc.cc = simd_or(r800_ffff_tmp18, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a5 = simd_and(tmp41, tmp80);
          bytetest_8e_8f = simd_and(tmp13, tmp67);
          r800_ffff_tmp19 = simd_and(r800_ffff_tmp11, bytetest_8e_8f);
          struct_Mc.cc = simd_or(r800_ffff_tmp19, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a6 = simd_and(tmp41, tmp47);
          r800_ffff_tmp20 = simd_andc(basis_bits.bit_6, tmp4);
          bytetest_82_83 = simd_and(tmp13, r800_ffff_tmp20);
          r800_ffff_tmp21 = simd_and(r800_ffff_tmp4, bytetest_a6);
          carryQ.cq[17] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp21, carryQ.get_carry_in(17), r800_ffff_tmp22));
          r800_ffff_tmp23 = simd_and(r800_ffff_tmp22, bytetest_82_83);
          struct_Mc.cc = simd_or(r800_ffff_tmp23, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a7 = simd_and(tmp41, tmp55);
          bytetest_80_80 = simd_andc(tmp13, tmp6);
          r800_ffff_tmp24 = simd_and(r800_ffff_tmp4, bytetest_a7);
          carryQ.cq[18] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp24, carryQ.get_carry_in(18), r800_ffff_tmp25));
          r800_ffff_tmp26 = simd_and(r800_ffff_tmp25, bytetest_80_80);
          bytetest_a6 = simd_and(tmp41, tmp47);
          bytetest_be_bf = simd_and(tmp29, tmp67);
          r800_ffff_tmp27 = simd_and(r800_ffff_tmp22, bytetest_be_bf);
          r800_ffff_tmp28 = simd_or(r800_ffff_tmp27, r800_ffff_tmp26);
          struct_Mc.cc = simd_or(r800_ffff_tmp28, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a7 = simd_and(tmp41, tmp55);
          bytetest_87_88 = simd_and(tmp13, tmp36);
          r800_ffff_tmp29 = simd_and(r800_ffff_tmp25, bytetest_87_88);
          struct_Mc.cc = simd_or(r800_ffff_tmp29, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a7 = simd_and(tmp41, tmp55);
          r800_ffff_tmp30 = simd_or(simd_and(basis_bits.bit_5, r800_ffff_tmp16), simd_andc(tmp31, basis_bits.bit_5));
          bytetest_8b_8c = simd_and(r800_ffff_tmp15, r800_ffff_tmp30);
          r800_ffff_tmp31 = simd_and(r800_ffff_tmp25, bytetest_8b_8c);
          struct_Mc.cc = simd_or(r800_ffff_tmp31, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a7 = simd_and(tmp41, tmp55);
          bytetest_97_97 = simd_and(tmp9, tmp55);
          r800_ffff_tmp32 = simd_and(r800_ffff_tmp25, bytetest_97_97);
          struct_Mc.cc = simd_or(r800_ffff_tmp32, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          r800_ffff_tmp33 = simd_andc(tmp62, tmp5);
          bytetest_a8 = simd_and(tmp41, r800_ffff_tmp33);
          bytetest_83_83 = simd_and(tmp13, r800_ffff_tmp2);
          r800_ffff_tmp34 = simd_and(r800_ffff_tmp4, bytetest_a8);
          carryQ.cq[19] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp34, carryQ.get_carry_in(19), r800_ffff_tmp35));
          r800_ffff_tmp36 = simd_and(r800_ffff_tmp35, bytetest_83_83);
          struct_Mc.cc = simd_or(r800_ffff_tmp36, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          r800_ffff_tmp37 = simd_and(tmp62, tmp10);
          bytetest_a9 = simd_and(tmp41, r800_ffff_tmp37);
          bytetest_80_80 = simd_andc(tmp13, tmp6);
          r800_ffff_tmp38 = simd_and(r800_ffff_tmp4, bytetest_a9);
          carryQ.cq[20] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp38, carryQ.get_carry_in(20), r800_ffff_tmp39));
          r800_ffff_tmp40 = simd_and(r800_ffff_tmp39, bytetest_80_80);
          bytetest_a8 = simd_and(tmp41, r800_ffff_tmp33);
          bytetest_be_bf = simd_and(tmp29, tmp67);
          r800_ffff_tmp41 = simd_and(r800_ffff_tmp35, bytetest_be_bf);
          r800_ffff_tmp42 = simd_or(r800_ffff_tmp41, r800_ffff_tmp40);
          struct_Mc.cc = simd_or(r800_ffff_tmp42, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_aa = simd_and(tmp41, tmp63);
          bytetest_83_83 = simd_and(tmp13, r800_ffff_tmp2);
          r800_ffff_tmp43 = simd_and(r800_ffff_tmp4, bytetest_aa);
          carryQ.cq[21] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp43, carryQ.get_carry_in(21), r800_ffff_tmp44));
          r800_ffff_tmp45 = simd_and(r800_ffff_tmp44, bytetest_83_83);
          struct_Mc.cc = simd_or(r800_ffff_tmp45, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ab = simd_and(tmp41, r800_ffff_tmp8);
          bytetest_80_80 = simd_andc(tmp13, tmp6);
          r800_ffff_tmp46 = simd_and(r800_ffff_tmp4, bytetest_ab);
          carryQ.cq[22] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp46, carryQ.get_carry_in(22), r800_ffff_tmp47));
          r800_ffff_tmp48 = simd_and(r800_ffff_tmp47, bytetest_80_80);
          bytetest_aa = simd_and(tmp41, tmp63);
          bytetest_be_bf = simd_and(tmp29, tmp67);
          r800_ffff_tmp49 = simd_and(r800_ffff_tmp44, bytetest_be_bf);
          r800_ffff_tmp50 = simd_or(r800_ffff_tmp49, r800_ffff_tmp48);
          struct_Mc.cc = simd_or(r800_ffff_tmp50, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ab = simd_and(tmp41, r800_ffff_tmp8);
          bytetest_89_89 = simd_and(tmp13, r800_ffff_tmp37);
          r800_ffff_tmp51 = simd_and(r800_ffff_tmp47, bytetest_89_89);
          struct_Mc.cc = simd_or(r800_ffff_tmp51, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ab = simd_and(tmp41, r800_ffff_tmp8);
          bytetest_8b_8c = simd_and(r800_ffff_tmp15, r800_ffff_tmp30);
          r800_ffff_tmp52 = simd_and(r800_ffff_tmp47, bytetest_8b_8c);
          struct_Mc.cc = simd_or(r800_ffff_tmp52, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ac = simd_and(tmp41, tmp43);
          bytetest_82_83 = simd_and(tmp13, r800_ffff_tmp20);
          r800_ffff_tmp53 = simd_and(r800_ffff_tmp4, bytetest_ac);
          carryQ.cq[23] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp53, carryQ.get_carry_in(23), r800_ffff_tmp54));
          r800_ffff_tmp55 = simd_and(r800_ffff_tmp54, bytetest_82_83);
          struct_Mc.cc = simd_or(r800_ffff_tmp55, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ac = simd_and(tmp41, tmp43);
          r800_ffff_tmp56 = simd_and(tmp42, tmp23);
          bytetest_be_be = simd_and(tmp29, r800_ffff_tmp56);
          r800_ffff_tmp57 = simd_and(r800_ffff_tmp54, bytetest_be_be);
          struct_Mc.cc = simd_or(r800_ffff_tmp57, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ad = simd_and(tmp41, tmp70);
          bytetest_80_80 = simd_andc(tmp13, tmp6);
          r800_ffff_tmp58 = simd_and(r800_ffff_tmp4, bytetest_ad);
          carryQ.cq[24] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp58, carryQ.get_carry_in(24), r800_ffff_tmp59));
          r800_ffff_tmp60 = simd_and(r800_ffff_tmp59, bytetest_80_80);
          struct_Mc.cc = simd_or(r800_ffff_tmp60, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ad = simd_and(tmp41, tmp70);
          bytetest_87_88 = simd_and(tmp13, tmp36);
          r800_ffff_tmp61 = simd_and(r800_ffff_tmp59, bytetest_87_88);
          struct_Mc.cc = simd_or(r800_ffff_tmp61, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ad = simd_and(tmp41, tmp70);
          bytetest_8b_8c = simd_and(r800_ffff_tmp15, r800_ffff_tmp30);
          r800_ffff_tmp62 = simd_and(r800_ffff_tmp59, bytetest_8b_8c);
          struct_Mc.cc = simd_or(r800_ffff_tmp62, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ad = simd_and(tmp41, tmp70);
          bytetest_97_97 = simd_and(tmp9, tmp55);
          r800_ffff_tmp63 = simd_and(r800_ffff_tmp59, bytetest_97_97);
          struct_Mc.cc = simd_or(r800_ffff_tmp63, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ae = simd_and(tmp41, r800_ffff_tmp56);
          bytetest_be_bf = simd_and(tmp29, tmp67);
          r800_ffff_tmp64 = simd_and(r800_ffff_tmp4, bytetest_ae);
          carryQ.cq[25] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp64, carryQ.get_carry_in(25), r800_ffff_tmp65));
          r800_ffff_tmp66 = simd_and(r800_ffff_tmp65, bytetest_be_bf);
          struct_Mc.cc = simd_or(r800_ffff_tmp66, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_af = simd_and(tmp41, tmp59);
          r800_ffff_tmp67 = simd_andc(tmp13, tmp4);
          bytetest_81_82 = simd_and(r800_ffff_tmp67, tmp83);
          r800_ffff_tmp68 = simd_and(r800_ffff_tmp4, bytetest_af);
          carryQ.cq[26] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp68, carryQ.get_carry_in(26), r800_ffff_tmp69));
          r800_ffff_tmp70 = simd_and(r800_ffff_tmp69, bytetest_81_82);
          struct_Mc.cc = simd_or(r800_ffff_tmp70, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_af = simd_and(tmp41, tmp59);
          r800_ffff_tmp71 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
          r800_ffff_tmp72 = simd_or(simd_and(basis_bits.bit_4, tmp34), simd_andc(r800_ffff_tmp71, basis_bits.bit_4));
          bytetest_86_88 = simd_and(tmp13, r800_ffff_tmp72);
          r800_ffff_tmp73 = simd_and(r800_ffff_tmp69, bytetest_86_88);
          struct_Mc.cc = simd_or(r800_ffff_tmp73, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_af = simd_and(tmp41, tmp59);
          r800_ffff_tmp74 = simd_or(simd_and(basis_bits.bit_5, r800_ffff_tmp16), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
          bytetest_8a_8c = simd_and(r800_ffff_tmp15, r800_ffff_tmp74);
          r800_ffff_tmp75 = simd_and(r800_ffff_tmp69, bytetest_8a_8c);
          struct_Mc.cc = simd_or(r800_ffff_tmp75, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_af = simd_and(tmp41, tmp59);
          bytetest_97_97 = simd_and(tmp9, tmp55);
          r800_ffff_tmp76 = simd_and(r800_ffff_tmp69, bytetest_97_97);
          struct_Mc.cc = simd_or(r800_ffff_tmp76, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b0 = simd_andc(tmp29, tmp6);
          bytetest_81_83 = simd_and(r800_ffff_tmp67, tmp5);
          r800_ffff_tmp77 = simd_and(r800_ffff_tmp4, bytetest_b0);
          carryQ.cq[27] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp77, carryQ.get_carry_in(27), r800_ffff_tmp78));
          r800_ffff_tmp79 = simd_and(r800_ffff_tmp78, bytetest_81_83);
          struct_Mc.cc = simd_or(r800_ffff_tmp79, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b1 = simd_and(tmp29, tmp11);
          r800_ffff_tmp80 = simd_andc(tmp13, basis_bits.bit_4);
          bytetest_81_84 = simd_and(r800_ffff_tmp80, r800_ffff_tmp17);
          r800_ffff_tmp81 = simd_and(r800_ffff_tmp4, bytetest_b1);
          carryQ.cq[28] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp81, carryQ.get_carry_in(28), r800_ffff_tmp82));
          r800_ffff_tmp83 = simd_and(r800_ffff_tmp82, bytetest_81_84);
          struct_Mc.cc = simd_or(r800_ffff_tmp83, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b2 = simd_and(tmp29, tmp24);
          bytetest_82_83 = simd_and(tmp13, r800_ffff_tmp20);
          r800_ffff_tmp84 = simd_and(r800_ffff_tmp4, bytetest_b2);
          carryQ.cq[29] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp84, carryQ.get_carry_in(29), r800_ffff_tmp85));
          r800_ffff_tmp86 = simd_and(r800_ffff_tmp85, bytetest_82_83);
          struct_Mc.cc = simd_or(r800_ffff_tmp86, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b2 = simd_and(tmp29, tmp24);
          bytetest_be_be = simd_and(tmp29, r800_ffff_tmp56);
          r800_ffff_tmp87 = simd_and(r800_ffff_tmp85, bytetest_be_be);
          struct_Mc.cc = simd_or(r800_ffff_tmp87, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b3 = simd_and(tmp29, r800_ffff_tmp2);
          r800_ffff_tmp88 = simd_and(basis_bits.bit_5, tmp5);
          bytetest_80_84 = simd_andc(r800_ffff_tmp80, r800_ffff_tmp88);
          r800_ffff_tmp89 = simd_and(r800_ffff_tmp4, bytetest_b3);
          carryQ.cq[30] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp89, carryQ.get_carry_in(30), r800_ffff_tmp90));
          r800_ffff_tmp91 = simd_and(r800_ffff_tmp90, bytetest_80_84);
          struct_Mc.cc = simd_or(r800_ffff_tmp91, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b3 = simd_and(tmp29, r800_ffff_tmp2);
          bytetest_87_88 = simd_and(tmp13, tmp36);
          r800_ffff_tmp92 = simd_and(r800_ffff_tmp90, bytetest_87_88);
          struct_Mc.cc = simd_or(r800_ffff_tmp92, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b3 = simd_and(tmp29, r800_ffff_tmp2);
          r800_ffff_tmp93 = simd_and(tmp62, basis_bits.bit_6);
          bytetest_8a_8b = simd_and(tmp13, r800_ffff_tmp93);
          r800_ffff_tmp94 = simd_and(r800_ffff_tmp90, bytetest_8a_8b);
          struct_Mc.cc = simd_or(r800_ffff_tmp94, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b3 = simd_and(tmp29, r800_ffff_tmp2);
          r800_ffff_tmp95 = simd_and(tmp9, tmp38);
          bytetest_95_96 = simd_and(r800_ffff_tmp95, tmp83);
          r800_ffff_tmp96 = simd_and(r800_ffff_tmp90, bytetest_95_96);
          struct_Mc.cc = simd_or(r800_ffff_tmp96, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b4 = simd_and(tmp29, tmp39);
          bytetest_82_83 = simd_and(tmp13, r800_ffff_tmp20);
          r800_ffff_tmp97 = simd_and(r800_ffff_tmp4, bytetest_b4);
          carryQ.cq[31] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp97, carryQ.get_carry_in(31), r800_ffff_tmp98));
          r800_ffff_tmp99 = simd_and(r800_ffff_tmp98, bytetest_82_83);
          struct_Mc.cc = simd_or(r800_ffff_tmp99, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b5 = simd_and(tmp29, tmp80);
          bytetest_80_80 = simd_andc(tmp13, tmp6);
          r800_ffff_tmp100 = simd_and(r800_ffff_tmp4, bytetest_b5);
          carryQ.cq[32] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp100, carryQ.get_carry_in(32), r800_ffff_tmp101));
          r800_ffff_tmp102 = simd_and(r800_ffff_tmp101, bytetest_80_80);
          bytetest_b4 = simd_and(tmp29, tmp39);
          bytetest_be_bf = simd_and(tmp29, tmp67);
          r800_ffff_tmp103 = simd_and(r800_ffff_tmp98, bytetest_be_bf);
          r800_ffff_tmp104 = simd_or(r800_ffff_tmp103, r800_ffff_tmp102);
          struct_Mc.cc = simd_or(r800_ffff_tmp104, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b5 = simd_and(tmp29, tmp80);
          bytetest_86_88 = simd_and(tmp13, r800_ffff_tmp72);
          r800_ffff_tmp105 = simd_and(r800_ffff_tmp101, bytetest_86_88);
          struct_Mc.cc = simd_or(r800_ffff_tmp105, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b5 = simd_and(tmp29, tmp80);
          bytetest_8a_8c = simd_and(r800_ffff_tmp15, r800_ffff_tmp74);
          r800_ffff_tmp106 = simd_and(r800_ffff_tmp101, bytetest_8a_8c);
          struct_Mc.cc = simd_or(r800_ffff_tmp106, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b5 = simd_and(tmp29, tmp80);
          bytetest_97_97 = simd_and(tmp9, tmp55);
          r800_ffff_tmp107 = simd_and(r800_ffff_tmp101, bytetest_97_97);
          struct_Mc.cc = simd_or(r800_ffff_tmp107, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b6 = simd_and(tmp29, tmp47);
          bytetest_82_83 = simd_and(tmp13, r800_ffff_tmp20);
          r800_ffff_tmp108 = simd_and(r800_ffff_tmp4, bytetest_b6);
          carryQ.cq[33] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp108, carryQ.get_carry_in(33), r800_ffff_tmp109));
          r800_ffff_tmp110 = simd_and(r800_ffff_tmp109, bytetest_82_83);
          struct_Mc.cc = simd_or(r800_ffff_tmp110, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b7 = simd_and(tmp29, tmp55);
          r800_ffff_tmp111 = simd_andc(tmp7, basis_bits.bit_2);
          r800_ffff_tmp112 = simd_or(tmp4, basis_bits.bit_6);
          r800_ffff_tmp113 = simd_not(r800_ffff_tmp112);
          r800_ffff_tmp114 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp113), simd_andc(tmp59, basis_bits.bit_3));
          bytetest_8f_91 = simd_and(r800_ffff_tmp111, r800_ffff_tmp114);
          r800_ffff_tmp115 = simd_and(r800_ffff_tmp4, bytetest_b7);
          carryQ.cq[34] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp115, carryQ.get_carry_in(34), r800_ffff_tmp116));
          r800_ffff_tmp117 = simd_and(r800_ffff_tmp116, bytetest_8f_91);
          struct_Mc.cc = simd_or(r800_ffff_tmp117, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b7 = simd_and(tmp29, tmp55);
          bytetest_98_9f = simd_and(tmp9, basis_bits.bit_4);
          r800_ffff_tmp118 = simd_and(r800_ffff_tmp116, bytetest_98_9f);
          struct_Mc.cc = simd_or(r800_ffff_tmp118, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b7 = simd_and(tmp29, tmp55);
          bytetest_b2_b3 = simd_and(tmp29, r800_ffff_tmp20);
          r800_ffff_tmp119 = simd_and(r800_ffff_tmp116, bytetest_b2_b3);
          struct_Mc.cc = simd_or(r800_ffff_tmp119, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bc = simd_and(tmp29, tmp43);
          bytetest_be_bf = simd_and(tmp29, tmp67);
          r800_ffff_tmp120 = simd_and(r800_ffff_tmp4, bytetest_bc);
          carryQ.cq[35] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp120, carryQ.get_carry_in(35), r800_ffff_tmp121));
          r800_ffff_tmp122 = simd_and(r800_ffff_tmp121, bytetest_be_bf);
          struct_Mc.cc = simd_or(r800_ffff_tmp122, struct_Mc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bd = simd_and(tmp29, tmp70);
          bytetest_bf_bf = simd_and(tmp29, tmp59);
          r800_ffff_tmp123 = simd_and(r800_ffff_tmp4, bytetest_bd);
          carryQ.cq[36] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp123, carryQ.get_carry_in(36), r800_ffff_tmp124));
          r800_ffff_tmp125 = simd_and(r800_ffff_tmp124, bytetest_bf_bf);
          struct_Mc.cc = simd_or(r800_ffff_tmp125, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_80 = simd_andc(tmp13, tmp6);
          r800_ffff_tmp126 = simd_and(tmp41, basis_bits.bit_4);
          bytetest_ab_ac = simd_and(r800_ffff_tmp126, r800_ffff_tmp30);
          r800_ffff_tmp127 = simd_and(tmp15, bytetest_e1);
          carryQ.cq[37] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp127, carryQ.get_carry_in(37), r800_ffff_tmp128));
          r800_ffff_tmp129 = simd_and(r800_ffff_tmp128, bytetest_80);
          carryQ.cq[38] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp129, carryQ.get_carry_in(38), r800_ffff_tmp130));
          r800_ffff_tmp131 = simd_and(r800_ffff_tmp130, bytetest_ab_ac);
          struct_Mc.cc = simd_or(r800_ffff_tmp131, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_80 = simd_andc(tmp13, tmp6);
          bytetest_b1_b1 = simd_and(tmp29, tmp11);
          r800_ffff_tmp132 = simd_and(r800_ffff_tmp130, bytetest_b1_b1);
          struct_Mc.cc = simd_or(r800_ffff_tmp132, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_80 = simd_andc(tmp13, tmp6);
          bytetest_b8_b8 = simd_and(tmp29, r800_ffff_tmp33);
          r800_ffff_tmp133 = simd_and(r800_ffff_tmp130, bytetest_b8_b8);
          struct_Mc.cc = simd_or(r800_ffff_tmp133, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_80 = simd_andc(tmp13, tmp6);
          r800_ffff_tmp134 = simd_and(tmp29, basis_bits.bit_4);
          bytetest_bb_bc = simd_and(r800_ffff_tmp134, r800_ffff_tmp30);
          r800_ffff_tmp135 = simd_and(r800_ffff_tmp130, bytetest_bb_bc);
          struct_Mc.cc = simd_or(r800_ffff_tmp135, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_81 = simd_and(tmp13, tmp11);
          r800_ffff_tmp136 = simd_and(tmp38, basis_bits.bit_6);
          bytetest_96_97 = simd_and(tmp9, r800_ffff_tmp136);
          r800_ffff_tmp137 = simd_and(r800_ffff_tmp128, bytetest_81);
          carryQ.cq[39] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp137, carryQ.get_carry_in(39), r800_ffff_tmp138));
          r800_ffff_tmp139 = simd_and(r800_ffff_tmp138, bytetest_96_97);
          struct_Mc.cc = simd_or(r800_ffff_tmp139, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_81 = simd_and(tmp13, tmp11);
          r800_ffff_tmp140 = simd_andc(tmp41, basis_bits.bit_4);
          bytetest_a2_a4 = simd_and(r800_ffff_tmp140, r800_ffff_tmp74);
          r800_ffff_tmp141 = simd_and(r800_ffff_tmp138, bytetest_a2_a4);
          struct_Mc.cc = simd_or(r800_ffff_tmp141, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_81 = simd_and(tmp13, tmp11);
          r800_ffff_tmp142 = simd_not(r800_ffff_tmp71);
          r800_ffff_tmp143 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp142), simd_andc(tmp35, basis_bits.bit_4));
          bytetest_a7_ad = simd_and(tmp41, r800_ffff_tmp143);
          r800_ffff_tmp144 = simd_and(r800_ffff_tmp138, bytetest_a7_ad);
          struct_Mc.cc = simd_or(r800_ffff_tmp144, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_82 = simd_and(tmp13, tmp24);
          bytetest_83_84 = simd_and(r800_ffff_tmp80, r800_ffff_tmp30);
          r800_ffff_tmp145 = simd_and(r800_ffff_tmp128, bytetest_82);
          carryQ.cq[40] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp145, carryQ.get_carry_in(40), r800_ffff_tmp146));
          r800_ffff_tmp147 = simd_and(r800_ffff_tmp146, bytetest_83_84);
          struct_Mc.cc = simd_or(r800_ffff_tmp147, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_82 = simd_and(tmp13, tmp24);
          r800_ffff_tmp148 = simd_not(r800_ffff_tmp88);
          r800_ffff_tmp149 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp148), simd_andc(tmp35, basis_bits.bit_4));
          bytetest_87_8c = simd_and(tmp13, r800_ffff_tmp149);
          r800_ffff_tmp150 = simd_and(r800_ffff_tmp146, bytetest_87_8c);
          struct_Mc.cc = simd_or(r800_ffff_tmp150, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_82 = simd_and(tmp13, tmp24);
          bytetest_8f_8f = simd_and(tmp13, tmp59);
          r800_ffff_tmp151 = simd_and(r800_ffff_tmp146, bytetest_8f_8f);
          struct_Mc.cc = simd_or(r800_ffff_tmp151, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_82 = simd_and(tmp13, tmp24);
          bytetest_9a_9c = simd_and(bytetest_98_9f, r800_ffff_tmp74);
          r800_ffff_tmp152 = simd_and(r800_ffff_tmp146, bytetest_9a_9c);
          struct_Mc.cc = simd_or(r800_ffff_tmp152, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9e = simd_and(tmp9, r800_ffff_tmp56);
          bytetest_b6_b6 = simd_and(tmp29, tmp47);
          r800_ffff_tmp153 = simd_and(r800_ffff_tmp128, bytetest_9e);
          carryQ.cq[41] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp153, carryQ.get_carry_in(41), r800_ffff_tmp154));
          r800_ffff_tmp155 = simd_and(r800_ffff_tmp154, bytetest_b6_b6);
          struct_Mc.cc = simd_or(r800_ffff_tmp155, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9f = simd_and(tmp9, tmp59);
          bytetest_80_85 = simd_andc(r800_ffff_tmp80, r800_ffff_tmp71);
          r800_ffff_tmp156 = simd_and(r800_ffff_tmp128, bytetest_9f);
          carryQ.cq[42] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp156, carryQ.get_carry_in(42), r800_ffff_tmp157));
          r800_ffff_tmp158 = simd_and(r800_ffff_tmp157, bytetest_80_85);
          bytetest_9e = simd_and(tmp9, r800_ffff_tmp56);
          bytetest_be_bf = simd_and(tmp29, tmp67);
          r800_ffff_tmp159 = simd_and(r800_ffff_tmp154, bytetest_be_bf);
          r800_ffff_tmp160 = simd_or(r800_ffff_tmp159, r800_ffff_tmp158);
          struct_Mc.cc = simd_or(r800_ffff_tmp160, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9f = simd_and(tmp9, tmp59);
          bytetest_87_88 = simd_and(tmp13, tmp36);
          r800_ffff_tmp161 = simd_and(r800_ffff_tmp157, bytetest_87_88);
          struct_Mc.cc = simd_or(r800_ffff_tmp161, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a4 = simd_and(tmp41, tmp39);
          r800_ffff_tmp162 = simd_not(tmp31);
          r800_ffff_tmp163 = simd_or(simd_and(basis_bits.bit_5, r800_ffff_tmp162), simd_andc(tmp31, basis_bits.bit_5));
          bytetest_a3_a6 = simd_and(r800_ffff_tmp140, r800_ffff_tmp163);
          r800_ffff_tmp164 = simd_and(r800_ffff_tmp128, bytetest_a4);
          carryQ.cq[43] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp164, carryQ.get_carry_in(43), r800_ffff_tmp165));
          r800_ffff_tmp166 = simd_and(r800_ffff_tmp165, bytetest_a3_a6);
          struct_Mc.cc = simd_or(r800_ffff_tmp166, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a4 = simd_and(tmp41, tmp39);
          r800_ffff_tmp167 = simd_and(tmp41, tmp62);
          bytetest_a9_ab = simd_and(r800_ffff_tmp167, tmp5);
          r800_ffff_tmp168 = simd_and(r800_ffff_tmp165, bytetest_a9_ab);
          struct_Mc.cc = simd_or(r800_ffff_tmp168, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a4 = simd_and(tmp41, tmp39);
          bytetest_b0_b1 = simd_andc(tmp29, r800_ffff_tmp112);
          r800_ffff_tmp169 = simd_and(r800_ffff_tmp165, bytetest_b0_b1);
          struct_Mc.cc = simd_or(r800_ffff_tmp169, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a4 = simd_and(tmp41, tmp39);
          r800_ffff_tmp170 = simd_or(basis_bits.bit_5, tmp31);
          r800_ffff_tmp171 = simd_or(simd_and(basis_bits.bit_4, tmp34), simd_andc(r800_ffff_tmp170, basis_bits.bit_4));
          bytetest_b3_b8 = simd_and(tmp29, r800_ffff_tmp171);
          r800_ffff_tmp172 = simd_and(r800_ffff_tmp165, bytetest_b3_b8);
          struct_Mc.cc = simd_or(r800_ffff_tmp172, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a7 = simd_and(tmp41, tmp55);
          bytetest_80_80 = simd_andc(tmp13, tmp6);
          r800_ffff_tmp173 = simd_and(r800_ffff_tmp128, bytetest_a7);
          carryQ.cq[44] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp173, carryQ.get_carry_in(44), r800_ffff_tmp174));
          r800_ffff_tmp175 = simd_and(r800_ffff_tmp174, bytetest_80_80);
          bytetest_a6 = simd_and(tmp41, tmp47);
          bytetest_b0_bf = simd_and(tmp7, tmp2);
          r800_ffff_tmp176 = simd_and(r800_ffff_tmp128, bytetest_a6);
          carryQ.cq[45] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp176, carryQ.get_carry_in(45), r800_ffff_tmp177));
          r800_ffff_tmp178 = simd_and(r800_ffff_tmp177, bytetest_b0_bf);
          r800_ffff_tmp179 = simd_or(r800_ffff_tmp178, r800_ffff_tmp175);
          struct_Mc.cc = simd_or(r800_ffff_tmp179, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a7 = simd_and(tmp41, tmp55);
          r800_ffff_tmp180 = simd_andc(tmp62, basis_bits.bit_6);
          bytetest_88_89 = simd_and(tmp13, r800_ffff_tmp180);
          r800_ffff_tmp181 = simd_and(r800_ffff_tmp174, bytetest_88_89);
          struct_Mc.cc = simd_or(r800_ffff_tmp181, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a8 = simd_and(tmp41, r800_ffff_tmp33);
          r800_ffff_tmp182 = simd_and(tmp9, tmp62);
          bytetest_99_9a = simd_and(r800_ffff_tmp182, tmp83);
          r800_ffff_tmp183 = simd_and(r800_ffff_tmp128, bytetest_a8);
          carryQ.cq[46] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp183, carryQ.get_carry_in(46), r800_ffff_tmp184));
          r800_ffff_tmp185 = simd_and(r800_ffff_tmp184, bytetest_99_9a);
          struct_Mc.cc = simd_or(r800_ffff_tmp185, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a9 = simd_and(tmp41, r800_ffff_tmp37);
          bytetest_95_95 = simd_and(tmp9, tmp80);
          r800_ffff_tmp186 = simd_and(r800_ffff_tmp128, bytetest_a9);
          carryQ.cq[47] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp186, carryQ.get_carry_in(47), r800_ffff_tmp187));
          r800_ffff_tmp188 = simd_and(r800_ffff_tmp187, bytetest_95_95);
          struct_Mc.cc = simd_or(r800_ffff_tmp188, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a9 = simd_and(tmp41, r800_ffff_tmp37);
          bytetest_97_97 = simd_and(tmp9, tmp55);
          r800_ffff_tmp189 = simd_and(r800_ffff_tmp187, bytetest_97_97);
          struct_Mc.cc = simd_or(r800_ffff_tmp189, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a9 = simd_and(tmp41, r800_ffff_tmp37);
          bytetest_a1_a1 = simd_and(tmp41, tmp11);
          r800_ffff_tmp190 = simd_and(r800_ffff_tmp187, bytetest_a1_a1);
          struct_Mc.cc = simd_or(r800_ffff_tmp190, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a9 = simd_and(tmp41, r800_ffff_tmp37);
          bytetest_a3_a4 = simd_and(r800_ffff_tmp140, r800_ffff_tmp30);
          r800_ffff_tmp191 = simd_and(r800_ffff_tmp187, bytetest_a3_a4);
          struct_Mc.cc = simd_or(r800_ffff_tmp191, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a9 = simd_and(tmp41, r800_ffff_tmp37);
          bytetest_ad_b2 = simd_and(tmp89, tmp93);
          r800_ffff_tmp192 = simd_and(r800_ffff_tmp187, bytetest_ad_b2);
          struct_Mc.cc = simd_or(r800_ffff_tmp192, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_ac = simd_and(tmp41, tmp43);
          bytetest_84_84 = simd_and(tmp13, tmp39);
          r800_ffff_tmp193 = simd_and(r800_ffff_tmp128, bytetest_ac);
          carryQ.cq[48] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp193, carryQ.get_carry_in(48), r800_ffff_tmp194));
          r800_ffff_tmp195 = simd_and(r800_ffff_tmp194, bytetest_84_84);
          struct_Mc.cc = simd_or(r800_ffff_tmp195, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_ac = simd_and(tmp41, tmp43);
          bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp80);
          r800_ffff_tmp196 = simd_and(r800_ffff_tmp194, bytetest_b5_b5);
          struct_Mc.cc = simd_or(r800_ffff_tmp196, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_ac = simd_and(tmp41, tmp43);
          bytetest_bb_bb = simd_and(bytetest_b0_bf, r800_ffff_tmp8);
          r800_ffff_tmp197 = simd_and(r800_ffff_tmp194, bytetest_bb_bb);
          struct_Mc.cc = simd_or(r800_ffff_tmp197, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_ad = simd_and(tmp41, tmp70);
          bytetest_80_81 = simd_andc(tmp13, r800_ffff_tmp112);
          r800_ffff_tmp198 = simd_and(r800_ffff_tmp128, bytetest_ad);
          carryQ.cq[49] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp198, carryQ.get_carry_in(49), r800_ffff_tmp199));
          r800_ffff_tmp200 = simd_and(r800_ffff_tmp199, bytetest_80_81);
          bytetest_ac = simd_and(tmp41, tmp43);
          r800_ffff_tmp201 = simd_and(bytetest_b0_bf, tmp42);
          bytetest_bd_bf = simd_and(r800_ffff_tmp201, tmp5);
          r800_ffff_tmp202 = simd_and(r800_ffff_tmp194, bytetest_bd_bf);
          r800_ffff_tmp203 = simd_or(r800_ffff_tmp202, r800_ffff_tmp200);
          struct_Mc.cc = simd_or(r800_ffff_tmp203, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_ad = simd_and(tmp41, tmp70);
          bytetest_83_84 = simd_and(r800_ffff_tmp80, r800_ffff_tmp30);
          r800_ffff_tmp204 = simd_and(r800_ffff_tmp199, bytetest_83_84);
          struct_Mc.cc = simd_or(r800_ffff_tmp204, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_ae = simd_and(tmp41, r800_ffff_tmp56);
          bytetest_82_82 = simd_and(tmp13, tmp24);
          r800_ffff_tmp205 = simd_and(r800_ffff_tmp128, bytetest_ae);
          carryQ.cq[50] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp205, carryQ.get_carry_in(50), r800_ffff_tmp206));
          r800_ffff_tmp207 = simd_and(r800_ffff_tmp206, bytetest_82_82);
          struct_Mc.cc = simd_or(r800_ffff_tmp207, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_ae = simd_and(tmp41, r800_ffff_tmp56);
          bytetest_a1_a1 = simd_and(tmp41, tmp11);
          r800_ffff_tmp208 = simd_and(r800_ffff_tmp206, bytetest_a1_a1);
          struct_Mc.cc = simd_or(r800_ffff_tmp208, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_ae = simd_and(tmp41, r800_ffff_tmp56);
          bytetest_a6_a7 = simd_and(tmp41, r800_ffff_tmp136);
          r800_ffff_tmp209 = simd_and(r800_ffff_tmp206, bytetest_a6_a7);
          struct_Mc.cc = simd_or(r800_ffff_tmp209, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_ae = simd_and(tmp41, r800_ffff_tmp56);
          bytetest_aa_aa = simd_and(tmp41, tmp63);
          r800_ffff_tmp210 = simd_and(r800_ffff_tmp206, bytetest_aa_aa);
          struct_Mc.cc = simd_or(r800_ffff_tmp210, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_ae = simd_and(tmp41, r800_ffff_tmp56);
          r800_ffff_tmp211 = simd_andc(tmp42, basis_bits.bit_6);
          bytetest_ac_ad = simd_and(tmp41, r800_ffff_tmp211);
          r800_ffff_tmp212 = simd_and(r800_ffff_tmp206, bytetest_ac_ad);
          struct_Mc.cc = simd_or(r800_ffff_tmp212, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_af = simd_and(tmp41, tmp59);
          bytetest_a7_a7 = simd_and(tmp41, tmp55);
          r800_ffff_tmp213 = simd_and(r800_ffff_tmp128, bytetest_af);
          carryQ.cq[51] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp213, carryQ.get_carry_in(51), r800_ffff_tmp214));
          r800_ffff_tmp215 = simd_and(r800_ffff_tmp214, bytetest_a7_a7);
          struct_Mc.cc = simd_or(r800_ffff_tmp215, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_af = simd_and(tmp41, tmp59);
          bytetest_aa_ac = simd_and(r800_ffff_tmp126, r800_ffff_tmp74);
          r800_ffff_tmp216 = simd_and(r800_ffff_tmp214, bytetest_aa_ac);
          struct_Mc.cc = simd_or(r800_ffff_tmp216, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_af = simd_and(tmp41, tmp59);
          bytetest_ae_ae = simd_and(tmp41, r800_ffff_tmp56);
          r800_ffff_tmp217 = simd_and(r800_ffff_tmp214, bytetest_ae_ae);
          struct_Mc.cc = simd_or(r800_ffff_tmp217, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_af = simd_and(tmp41, tmp59);
          bytetest_b2_b3 = simd_and(bytetest_b0_bf, r800_ffff_tmp20);
          r800_ffff_tmp218 = simd_and(r800_ffff_tmp214, bytetest_b2_b3);
          struct_Mc.cc = simd_or(r800_ffff_tmp218, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_b0 = simd_andc(bytetest_b0_bf, tmp6);
          r800_ffff_tmp219 = simd_not(basis_bits.bit_5);
          r800_ffff_tmp220 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp219), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
          bytetest_a4_ab = simd_and(tmp41, r800_ffff_tmp220);
          r800_ffff_tmp221 = simd_and(r800_ffff_tmp128, bytetest_b0);
          carryQ.cq[52] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp221, carryQ.get_carry_in(52), r800_ffff_tmp222));
          r800_ffff_tmp223 = simd_and(r800_ffff_tmp222, bytetest_a4_ab);
          struct_Mc.cc = simd_or(r800_ffff_tmp223, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_b0 = simd_andc(bytetest_b0_bf, tmp6);
          r800_ffff_tmp224 = simd_andc(tmp38, basis_bits.bit_6);
          bytetest_b4_b5 = simd_and(bytetest_b0_bf, r800_ffff_tmp224);
          r800_ffff_tmp225 = simd_and(r800_ffff_tmp222, bytetest_b4_b5);
          struct_Mc.cc = simd_or(r800_ffff_tmp225, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_b3 = simd_and(bytetest_b0_bf, r800_ffff_tmp2);
          bytetest_a1_a1 = simd_and(tmp41, tmp11);
          r800_ffff_tmp226 = simd_and(r800_ffff_tmp128, bytetest_b3);
          carryQ.cq[53] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp226, carryQ.get_carry_in(53), r800_ffff_tmp227));
          r800_ffff_tmp228 = simd_and(r800_ffff_tmp227, bytetest_a1_a1);
          struct_Mc.cc = simd_or(r800_ffff_tmp228, struct_Mc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_b3 = simd_and(bytetest_b0_bf, r800_ffff_tmp2);
          bytetest_b2_b3 = simd_and(bytetest_b0_bf, r800_ffff_tmp20);
          r800_ffff_tmp229 = simd_and(r800_ffff_tmp227, bytetest_b2_b3);
          struct_Mc.cc = simd_or(r800_ffff_tmp229, struct_Mc.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_80 = simd_andc(tmp13, tmp6);
          bytetest_ae_af = simd_and(tmp41, tmp67);
          r800_ffff_tmp230 = simd_and(tmp15, bytetest_e3);
          carryQ.cq[54] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp230, carryQ.get_carry_in(54), r800_ffff_tmp231));
          r800_ffff_tmp232 = simd_and(r800_ffff_tmp231, bytetest_80);
          carryQ.cq[55] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp232, carryQ.get_carry_in(55), r800_ffff_tmp233));
          r800_ffff_tmp234 = simd_and(r800_ffff_tmp233, bytetest_ae_af);
          struct_Mc.cc = simd_or(r800_ffff_tmp234, struct_Mc.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp63);
          bytetest_a0 = simd_andc(tmp41, tmp6);
          bytetest_a3_a4 = simd_and(r800_ffff_tmp140, r800_ffff_tmp30);
          r800_ffff_tmp235 = simd_and(tmp15, bytetest_ea);
          carryQ.cq[56] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp235, carryQ.get_carry_in(56), r800_ffff_tmp236));
          r800_ffff_tmp237 = simd_and(r800_ffff_tmp236, bytetest_a0);
          carryQ.cq[57] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp237, carryQ.get_carry_in(57), r800_ffff_tmp238));
          r800_ffff_tmp239 = simd_and(r800_ffff_tmp238, bytetest_a3_a4);
          struct_Mc.cc = simd_or(r800_ffff_tmp239, struct_Mc.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp63);
          bytetest_a0 = simd_andc(tmp41, tmp6);
          bytetest_a7_a7 = simd_and(tmp41, tmp55);
          r800_ffff_tmp240 = simd_and(r800_ffff_tmp238, bytetest_a7_a7);
          struct_Mc.cc = simd_or(r800_ffff_tmp240, struct_Mc.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp63);
          bytetest_a2 = simd_and(tmp41, tmp24);
          bytetest_80_81 = simd_andc(tmp13, r800_ffff_tmp112);
          r800_ffff_tmp241 = simd_and(r800_ffff_tmp236, bytetest_a2);
          carryQ.cq[58] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp241, carryQ.get_carry_in(58), r800_ffff_tmp242));
          r800_ffff_tmp243 = simd_and(r800_ffff_tmp242, bytetest_80_81);
          struct_Mc.cc = simd_or(r800_ffff_tmp243, struct_Mc.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp63);
          bytetest_a3 = simd_and(tmp41, r800_ffff_tmp2);
          bytetest_80_83 = simd_andc(tmp13, tmp4);
          r800_ffff_tmp244 = simd_and(r800_ffff_tmp236, bytetest_a3);
          carryQ.cq[59] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp244, carryQ.get_carry_in(59), r800_ffff_tmp245));
          r800_ffff_tmp246 = simd_and(r800_ffff_tmp245, bytetest_80_83);
          bytetest_a2 = simd_and(tmp41, tmp24);
          bytetest_b4_bf = simd_and(bytetest_b0_bf, tmp4);
          r800_ffff_tmp247 = simd_and(r800_ffff_tmp242, bytetest_b4_bf);
          r800_ffff_tmp248 = simd_or(r800_ffff_tmp247, r800_ffff_tmp246);
          struct_Mc.cc = simd_or(r800_ffff_tmp248, struct_Mc.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp63);
          bytetest_a5 = simd_and(tmp41, tmp80);
          bytetest_92_93 = simd_and(tmp9, r800_ffff_tmp20);
          r800_ffff_tmp249 = simd_and(r800_ffff_tmp236, bytetest_a5);
          carryQ.cq[60] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp249, carryQ.get_carry_in(60), r800_ffff_tmp250));
          r800_ffff_tmp251 = simd_and(r800_ffff_tmp250, bytetest_92_93);
          struct_Mc.cc = simd_or(r800_ffff_tmp251, struct_Mc.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp63);
          bytetest_a6 = simd_and(tmp41, tmp47);
          bytetest_83_83 = simd_and(tmp13, r800_ffff_tmp2);
          r800_ffff_tmp252 = simd_and(r800_ffff_tmp236, bytetest_a6);
          carryQ.cq[61] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp252, carryQ.get_carry_in(61), r800_ffff_tmp253));
          r800_ffff_tmp254 = simd_and(r800_ffff_tmp253, bytetest_83_83);
          struct_Mc.cc = simd_or(r800_ffff_tmp254, struct_Mc.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp63);
          bytetest_a6 = simd_and(tmp41, tmp47);
          bytetest_b4_b5 = simd_and(bytetest_b0_bf, r800_ffff_tmp224);
          r800_ffff_tmp255 = simd_and(r800_ffff_tmp253, bytetest_b4_b5);
          struct_Mc.cc = simd_or(r800_ffff_tmp255, struct_Mc.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp63);
          bytetest_a6 = simd_and(tmp41, tmp47);
          bytetest_ba_bb = simd_and(bytetest_b0_bf, r800_ffff_tmp93);
          r800_ffff_tmp256 = simd_and(r800_ffff_tmp253, bytetest_ba_bb);
          struct_Mc.cc = simd_or(r800_ffff_tmp256, struct_Mc.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp63);
          bytetest_a7 = simd_and(tmp41, tmp55);
          bytetest_80_80 = simd_andc(tmp13, tmp6);
          r800_ffff_tmp257 = simd_and(r800_ffff_tmp236, bytetest_a7);
          carryQ.cq[62] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp257, carryQ.get_carry_in(62), r800_ffff_tmp258));
          r800_ffff_tmp259 = simd_and(r800_ffff_tmp258, bytetest_80_80);
          bytetest_a6 = simd_and(tmp41, tmp47);
          bytetest_bd_bf = simd_and(r800_ffff_tmp201, tmp5);
          r800_ffff_tmp260 = simd_and(r800_ffff_tmp253, bytetest_bd_bf);
          r800_ffff_tmp261 = simd_or(r800_ffff_tmp260, r800_ffff_tmp259);
          struct_Mc.cc = simd_or(r800_ffff_tmp261, struct_Mc.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp63);
          bytetest_a8 = simd_and(tmp41, r800_ffff_tmp33);
          r800_ffff_tmp262 = simd_not(tmp6);
          r800_ffff_tmp263 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp262), simd_andc(tmp59, basis_bits.bit_3));
          bytetest_af_b0 = simd_and(tmp89, r800_ffff_tmp263);
          r800_ffff_tmp264 = simd_and(r800_ffff_tmp236, bytetest_a8);
          carryQ.cq[63] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp264, carryQ.get_carry_in(63), r800_ffff_tmp265));
          r800_ffff_tmp266 = simd_and(r800_ffff_tmp265, bytetest_af_b0);
          struct_Mc.cc = simd_or(r800_ffff_tmp266, struct_Mc.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp63);
          bytetest_a8 = simd_and(tmp41, r800_ffff_tmp33);
          r800_ffff_tmp267 = simd_andc(bytetest_b0_bf, basis_bits.bit_4);
          bytetest_b3_b4 = simd_and(r800_ffff_tmp267, r800_ffff_tmp30);
          r800_ffff_tmp268 = simd_and(r800_ffff_tmp265, bytetest_b3_b4);
          struct_Mc.cc = simd_or(r800_ffff_tmp268, struct_Mc.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp63);
          bytetest_a9 = simd_and(tmp41, r800_ffff_tmp37);
          bytetest_8d_8d = simd_and(tmp13, tmp70);
          r800_ffff_tmp269 = simd_and(r800_ffff_tmp236, bytetest_a9);
          carryQ.cq[64] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp269, carryQ.get_carry_in(64), r800_ffff_tmp270));
          r800_ffff_tmp271 = simd_and(r800_ffff_tmp270, bytetest_8d_8d);
          struct_Mc.cc = simd_or(r800_ffff_tmp271, struct_Mc.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp63);
          bytetest_a9 = simd_and(tmp41, r800_ffff_tmp37);
          bytetest_bb_bb = simd_and(bytetest_b0_bf, r800_ffff_tmp8);
          r800_ffff_tmp272 = simd_and(r800_ffff_tmp270, bytetest_bb_bb);
          struct_Mc.cc = simd_or(r800_ffff_tmp272, struct_Mc.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp63);
          bytetest_ab = simd_and(tmp41, r800_ffff_tmp8);
          bytetest_ab_ab = simd_and(tmp41, r800_ffff_tmp8);
          r800_ffff_tmp273 = simd_and(r800_ffff_tmp236, bytetest_ab);
          carryQ.cq[65] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp273, carryQ.get_carry_in(65), r800_ffff_tmp274));
          r800_ffff_tmp275 = simd_and(r800_ffff_tmp274, bytetest_ab_ab);
          struct_Mc.cc = simd_or(r800_ffff_tmp275, struct_Mc.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp63);
          bytetest_ab = simd_and(tmp41, r800_ffff_tmp8);
          bytetest_ae_af = simd_and(tmp41, tmp67);
          r800_ffff_tmp276 = simd_and(r800_ffff_tmp274, bytetest_ae_af);
          struct_Mc.cc = simd_or(r800_ffff_tmp276, struct_Mc.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp63);
          bytetest_ab = simd_and(tmp41, r800_ffff_tmp8);
          bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp80);
          r800_ffff_tmp277 = simd_and(r800_ffff_tmp274, bytetest_b5_b5);
          struct_Mc.cc = simd_or(r800_ffff_tmp277, struct_Mc.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp63);
          bytetest_af = simd_and(tmp41, tmp59);
          bytetest_a3_a4 = simd_and(r800_ffff_tmp140, r800_ffff_tmp30);
          r800_ffff_tmp278 = simd_and(r800_ffff_tmp236, bytetest_af);
          carryQ.cq[66] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp278, carryQ.get_carry_in(66), r800_ffff_tmp279));
          r800_ffff_tmp280 = simd_and(r800_ffff_tmp279, bytetest_a3_a4);
          struct_Mc.cc = simd_or(r800_ffff_tmp280, struct_Mc.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp63);
          bytetest_af = simd_and(tmp41, tmp59);
          bytetest_a6_a7 = simd_and(tmp41, r800_ffff_tmp136);
          r800_ffff_tmp281 = simd_and(r800_ffff_tmp279, bytetest_a6_a7);
          struct_Mc.cc = simd_or(r800_ffff_tmp281, struct_Mc.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp63);
          bytetest_af = simd_and(tmp41, tmp59);
          bytetest_a9_aa = simd_and(r800_ffff_tmp167, tmp83);
          r800_ffff_tmp282 = simd_and(r800_ffff_tmp279, bytetest_a9_aa);
          struct_Mc.cc = simd_or(r800_ffff_tmp282, struct_Mc.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp63);
          bytetest_af = simd_and(tmp41, tmp59);
          bytetest_ac_ac = simd_and(tmp41, tmp43);
          r800_ffff_tmp283 = simd_and(r800_ffff_tmp279, bytetest_ac_ac);
          struct_Mc.cc = simd_or(r800_ffff_tmp283, struct_Mc.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(14, 53);
        }
  }
  CarryArray<67, 0> carryQ;
  };

  struct Mn {
  Mn() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Mn & struct_Mn) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_f0, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, bytetest_91, tmp12, tmp13, bytetest_80, bytetest_81_81;
		BitBlock tmp14, tmp15, tmp16, tmp17, tmp18, tmp19, tmp20, tmp21, tmp22;
		BitBlock bytetest_81, tmp23, tmp24, tmp25, bytetest_80_86, tmp26, tmp27, tmp28;
		BitBlock tmp29, bytetest_b8_bf, tmp30, tmp31, tmp32, tmp33, bytetest_82, tmp34;
		BitBlock bytetest_80_81, tmp35, tmp36, tmp37, tmp38, tmp39, tmp40;
		BitBlock bytetest_b3_b6, tmp41, tmp42, tmp43, tmp44, tmp45, bytetest_b9_ba;
		BitBlock tmp46, tmp47, tmp48, bytetest_84, tmp49, bytetest_80_82, tmp50, tmp51;
		BitBlock tmp52, tmp53, tmp54, tmp55, tmp56, bytetest_a7_ab, tmp57, tmp58;
		BitBlock tmp59, tmp60, tmp61, tmp62, tmp63, tmp64, bytetest_ad_b4, tmp65;
		BitBlock tmp66, bytetest_86, tmp67, tmp68, tmp69, tmp70, tmp71, tmp72;
		BitBlock bytetest_b6_be, tmp73, tmp74, bytetest_9a, tmp75, bytetest_ab_ab;
		BitBlock tmp76, tmp77, tmp78, tmp79, bytetest_ad_ad, tmp80, bytetest_b0_b5;
		BitBlock tmp81, tmp82, bytetest_b7_b7, tmp83, bytetest_96, tmp84, bytetest_be;
		BitBlock tmp85, tmp86, tmp87, tmp88, tmp89, bytetest_8f_92, tmp90, tmp91;
		BitBlock tmp92, tmp93, tmp94, bytetest_9d, tmp95, bytetest_85, tmp96, tmp97;
		BitBlock tmp98, bytetest_a7_a9, tmp99, tmp100, tmp101, tmp102, tmp103, tmp104;
		BitBlock tmp105, tmp106, tmp107, bytetest_bb_bf, tmp108, tmp109, tmp110;
		BitBlock bytetest_85_8b, tmp111, tmp112, tmp113, tmp114, bytetest_aa_ad;
		BitBlock tmp115, tmp116, bytetest_89, tmp117, tmp118, bytetest_82_84, tmp119;
		BitBlock tmp120, tmp121, tmp122, bytetest_f3, bytetest_a0, bytetest_87;
		BitBlock bytetest_80_af, tmp123, tmp124, tmp125, tmp126, tmp127, tmp128;
		BitBlock tmp129, tmp130, bytetest_84_86, bytetest_80_bf, tmp131, tmp132;
		BitBlock tmp133, tmp134, tmp135, tmp136, bytetest_c2_df, r80_7ff_tmp1;
		BitBlock bytetest_cd, r80_7ff_tmp2, r80_7ff_tmp3, r80_7ff_tmp4, r80_7ff_tmp5;
		BitBlock bytetest_cc, r80_7ff_tmp6, r80_7ff_tmp7, r80_7ff_tmp8, r80_7ff_tmp9;
		BitBlock r80_7ff_tmp10, bytetest_d2, r80_7ff_tmp11, r80_7ff_tmp12;
		BitBlock bytetest_83_87, r80_7ff_tmp13, r80_7ff_tmp14, r80_7ff_tmp15;
		BitBlock bytetest_d6, r80_7ff_tmp16, r80_7ff_tmp17, r80_7ff_tmp18;
		BitBlock r80_7ff_tmp19, r80_7ff_tmp20, bytetest_91_bd, r80_7ff_tmp21;
		BitBlock r80_7ff_tmp22, r80_7ff_tmp23, r80_7ff_tmp24, bytetest_bf_bf;
		BitBlock r80_7ff_tmp25, bytetest_d7, r80_7ff_tmp26, bytetest_81_82;
		BitBlock r80_7ff_tmp27, r80_7ff_tmp28, r80_7ff_tmp29, r80_7ff_tmp30;
		BitBlock bytetest_84_85, r80_7ff_tmp31, bytetest_87_87, r80_7ff_tmp32;
		BitBlock r80_7ff_tmp33, bytetest_d8, r80_7ff_tmp34, r80_7ff_tmp35;
		BitBlock bytetest_90_9a, r80_7ff_tmp36, r80_7ff_tmp37, r80_7ff_tmp38;
		BitBlock bytetest_d9, r80_7ff_tmp39, r80_7ff_tmp40, bytetest_8b_9f;
		BitBlock r80_7ff_tmp41, r80_7ff_tmp42, r80_7ff_tmp43, bytetest_b0_b0;
		BitBlock r80_7ff_tmp44, bytetest_db, r80_7ff_tmp45, r80_7ff_tmp46;
		BitBlock bytetest_96_9c, r80_7ff_tmp47, r80_7ff_tmp48, r80_7ff_tmp49;
		BitBlock r80_7ff_tmp50, r80_7ff_tmp51, r80_7ff_tmp52, r80_7ff_tmp53;
		BitBlock bytetest_9f_a4, r80_7ff_tmp54, r80_7ff_tmp55, r80_7ff_tmp56;
		BitBlock r80_7ff_tmp57, r80_7ff_tmp58, bytetest_a7_a8, r80_7ff_tmp59;
		BitBlock r80_7ff_tmp60, r80_7ff_tmp61, bytetest_dc, bytetest_91_91;
		BitBlock r80_7ff_tmp62, r80_7ff_tmp63, r80_7ff_tmp64, bytetest_dd;
		BitBlock bytetest_80_8a, r80_7ff_tmp65, r80_7ff_tmp66, r80_7ff_tmp67;
		BitBlock bytetest_b0_bf, r80_7ff_tmp68, r80_7ff_tmp69, bytetest_de;
		BitBlock r80_7ff_tmp70, r80_7ff_tmp71, r80_7ff_tmp72, r80_7ff_tmp73;
		BitBlock bytetest_a6_b0, r80_7ff_tmp74, r80_7ff_tmp75, r80_7ff_tmp76;
		BitBlock bytetest_df, r80_7ff_tmp77, r80_7ff_tmp78, bytetest_ab_b3;
		BitBlock r80_7ff_tmp79, r80_7ff_tmp80, r80_7ff_tmp81, tmp137, tmp138, tmp139;
		BitBlock bytetest_e1_ef, bytetest_e0, bytetest_a0_bf, tmp140, tmp141, tmp142;
		BitBlock tmp143, r800_ffff_tmp1, r800_ffff_tmp2, r800_ffff_tmp3;
		BitBlock r800_ffff_tmp4, bytetest_96_99, r800_ffff_tmp5, r800_ffff_tmp6;
		BitBlock r800_ffff_tmp7, r800_ffff_tmp8, r800_ffff_tmp9, r800_ffff_tmp10;
		BitBlock r800_ffff_tmp11, r800_ffff_tmp12, r800_ffff_tmp13, r800_ffff_tmp14;
		BitBlock bytetest_9b_a3, r800_ffff_tmp15, r800_ffff_tmp16, bytetest_a5_a7;
		BitBlock r800_ffff_tmp17, r800_ffff_tmp18, r800_ffff_tmp19, bytetest_a9_ad;
		BitBlock r800_ffff_tmp20, bytetest_a1, r800_ffff_tmp21, bytetest_99_9b;
		BitBlock r800_ffff_tmp22, r800_ffff_tmp23, r800_ffff_tmp24, bytetest_a3;
		BitBlock r800_ffff_tmp25, r800_ffff_tmp26, r800_ffff_tmp27, bytetest_a4_be;
		BitBlock r800_ffff_tmp28, r800_ffff_tmp29, r800_ffff_tmp30, bytetest_a4;
		BitBlock r800_ffff_tmp31, r800_ffff_tmp32, r800_ffff_tmp33, r800_ffff_tmp34;
		BitBlock r800_ffff_tmp35, r800_ffff_tmp36, bytetest_ba_ba, r800_ffff_tmp37;
		BitBlock r800_ffff_tmp38, bytetest_bc_bc, r800_ffff_tmp39, bytetest_a5;
		BitBlock r800_ffff_tmp40, r800_ffff_tmp41, r800_ffff_tmp42, bytetest_81_88;
		BitBlock r800_ffff_tmp43, r800_ffff_tmp44, r800_ffff_tmp45, bytetest_8d_8d;
		BitBlock r800_ffff_tmp46, r800_ffff_tmp47, bytetest_91_97, r800_ffff_tmp48;
		BitBlock r800_ffff_tmp49, bytetest_a2_a3, r800_ffff_tmp50, bytetest_a6;
		BitBlock r800_ffff_tmp51, r800_ffff_tmp52, r800_ffff_tmp53, r800_ffff_tmp54;
		BitBlock bytetest_a7, r800_ffff_tmp55, r800_ffff_tmp56, bytetest_81_84;
		BitBlock r800_ffff_tmp57, r800_ffff_tmp58, r800_ffff_tmp59, r800_ffff_tmp60;
		BitBlock r800_ffff_tmp61, r800_ffff_tmp62, bytetest_a8, r800_ffff_tmp63;
		BitBlock r800_ffff_tmp64, r800_ffff_tmp65, r800_ffff_tmp66, bytetest_a9;
		BitBlock r800_ffff_tmp67, r800_ffff_tmp68, r800_ffff_tmp69, r800_ffff_tmp70;
		BitBlock bytetest_87_88, r800_ffff_tmp71, r800_ffff_tmp72, r800_ffff_tmp73;
		BitBlock bytetest_8b_8d, r800_ffff_tmp74, r800_ffff_tmp75, bytetest_b0_b1;
		BitBlock r800_ffff_tmp76, bytetest_b5_b5, r800_ffff_tmp77, bytetest_aa;
		BitBlock r800_ffff_tmp78, r800_ffff_tmp79, r800_ffff_tmp80, r800_ffff_tmp81;
		BitBlock bytetest_ab, bytetest_81_85, r800_ffff_tmp82, r800_ffff_tmp83;
		BitBlock r800_ffff_tmp84, r800_ffff_tmp85, r800_ffff_tmp86, r800_ffff_tmp87;
		BitBlock bytetest_ac, r800_ffff_tmp88, r800_ffff_tmp89, r800_ffff_tmp90;
		BitBlock r800_ffff_tmp91, r800_ffff_tmp92, bytetest_ad, r800_ffff_tmp93;
		BitBlock r800_ffff_tmp94, r800_ffff_tmp95, r800_ffff_tmp96, bytetest_96_96;
		BitBlock r800_ffff_tmp97, r800_ffff_tmp98, bytetest_ae, bytetest_82_82;
		BitBlock r800_ffff_tmp99, r800_ffff_tmp100, r800_ffff_tmp101, bytetest_af;
		BitBlock bytetest_80_80, r800_ffff_tmp102, r800_ffff_tmp103, r800_ffff_tmp104;
		BitBlock r800_ffff_tmp105, bytetest_b1, r800_ffff_tmp106, r800_ffff_tmp107;
		BitBlock r800_ffff_tmp108, bytetest_b0, r800_ffff_tmp109, bytetest_be_bf;
		BitBlock r800_ffff_tmp110, r800_ffff_tmp111, r800_ffff_tmp112;
		BitBlock r800_ffff_tmp113, r800_ffff_tmp114, bytetest_86_88, r800_ffff_tmp115;
		BitBlock bytetest_8a_8d, r800_ffff_tmp116, r800_ffff_tmp117, bytetest_95_96;
		BitBlock r800_ffff_tmp118, r800_ffff_tmp119, bytetest_b2, r800_ffff_tmp120;
		BitBlock r800_ffff_tmp121, r800_ffff_tmp122, r800_ffff_tmp123, bytetest_b3;
		BitBlock bytetest_86_86, r800_ffff_tmp124, r800_ffff_tmp125, r800_ffff_tmp126;
		BitBlock r800_ffff_tmp127, bytetest_8c_8d, r800_ffff_tmp128, r800_ffff_tmp129;
		BitBlock bytetest_b5, r800_ffff_tmp130, r800_ffff_tmp131, r800_ffff_tmp132;
		BitBlock r800_ffff_tmp133, r800_ffff_tmp134, bytetest_b7, bytetest_8a_8a;
		BitBlock r800_ffff_tmp135, r800_ffff_tmp136, r800_ffff_tmp137, bytetest_92_94;
		BitBlock r800_ffff_tmp138, r800_ffff_tmp139, bytetest_b8, bytetest_b1_b1;
		BitBlock r800_ffff_tmp140, r800_ffff_tmp141, r800_ffff_tmp142;
		BitBlock r800_ffff_tmp143, r800_ffff_tmp144, bytetest_b4_ba, r800_ffff_tmp145;
		BitBlock bytetest_b9, r800_ffff_tmp146, bytetest_87_8e, r800_ffff_tmp147;
		BitBlock r800_ffff_tmp148, r800_ffff_tmp149, bytetest_ba, r800_ffff_tmp150;
		BitBlock r800_ffff_tmp151, r800_ffff_tmp152, r800_ffff_tmp153, bytetest_b4_b9;
		BitBlock r800_ffff_tmp154, r800_ffff_tmp155, r800_ffff_tmp156, bytetest_bb_bc;
		BitBlock r800_ffff_tmp157, bytetest_bb, bytetest_88_8d, r800_ffff_tmp158;
		BitBlock r800_ffff_tmp159, r800_ffff_tmp160, bytetest_bc, r800_ffff_tmp161;
		BitBlock bytetest_98_99, r800_ffff_tmp162, r800_ffff_tmp163, r800_ffff_tmp164;
		BitBlock r800_ffff_tmp165, r800_ffff_tmp166, bytetest_b9_b9, r800_ffff_tmp167;
		BitBlock bytetest_bd, r800_ffff_tmp168, bytetest_b1_be, r800_ffff_tmp169;
		BitBlock r800_ffff_tmp170, r800_ffff_tmp171, bytetest_80_84, r800_ffff_tmp172;
		BitBlock r800_ffff_tmp173, r800_ffff_tmp174, r800_ffff_tmp175, bytetest_86_87;
		BitBlock r800_ffff_tmp176, r800_ffff_tmp177, r800_ffff_tmp178;
		BitBlock r800_ffff_tmp179, bytetest_8d_97, r800_ffff_tmp180, r800_ffff_tmp181;
		BitBlock r800_ffff_tmp182, r800_ffff_tmp183, r800_ffff_tmp184;
		BitBlock r800_ffff_tmp185, bytetest_99_bc, r800_ffff_tmp186, bytetest_bf;
		BitBlock r800_ffff_tmp187, r800_ffff_tmp188, r800_ffff_tmp189, bytetest_e1;
		BitBlock r800_ffff_tmp190, r800_ffff_tmp191, bytetest_ad_b0, r800_ffff_tmp192;
		BitBlock r800_ffff_tmp193, r800_ffff_tmp194, r800_ffff_tmp195;
		BitBlock r800_ffff_tmp196, r800_ffff_tmp197, bytetest_b2_b7, r800_ffff_tmp198;
		BitBlock r800_ffff_tmp199, r800_ffff_tmp200, r800_ffff_tmp201, bytetest_bd_be;
		BitBlock r800_ffff_tmp202, r800_ffff_tmp203, r800_ffff_tmp204;
		BitBlock r800_ffff_tmp205, r800_ffff_tmp206, r800_ffff_tmp207;
		BitBlock r800_ffff_tmp208, r800_ffff_tmp209, bytetest_9e_a0, r800_ffff_tmp210;
		BitBlock bytetest_b1_b4, r800_ffff_tmp211, r800_ffff_tmp212, r800_ffff_tmp213;
		BitBlock r800_ffff_tmp214, r800_ffff_tmp215, bytetest_85_86, r800_ffff_tmp216;
		BitBlock r800_ffff_tmp217, bytetest_9d_9d, r800_ffff_tmp218, bytetest_8d;
		BitBlock r800_ffff_tmp219, bytetest_9d_9f, r800_ffff_tmp220, r800_ffff_tmp221;
		BitBlock r800_ffff_tmp222, bytetest_9c, r800_ffff_tmp223, r800_ffff_tmp224;
		BitBlock r800_ffff_tmp225, bytetest_b2_b4, r800_ffff_tmp226, bytetest_92_93;
		BitBlock r800_ffff_tmp227, r800_ffff_tmp228, r800_ffff_tmp229, bytetest_b2_b3;
		BitBlock r800_ffff_tmp230, bytetest_9e, r800_ffff_tmp231, bytetest_b4_b5;
		BitBlock r800_ffff_tmp232, r800_ffff_tmp233, r800_ffff_tmp234;
		BitBlock r800_ffff_tmp235, r800_ffff_tmp236, bytetest_b7_bd, r800_ffff_tmp237;
		BitBlock bytetest_9f, r800_ffff_tmp238, r800_ffff_tmp239, r800_ffff_tmp240;
		BitBlock r800_ffff_tmp241, r800_ffff_tmp242, bytetest_89_93, r800_ffff_tmp243;
		BitBlock r800_ffff_tmp244, r800_ffff_tmp245, r800_ffff_tmp246;
		BitBlock r800_ffff_tmp247, bytetest_a2, bytetest_a9_a9, r800_ffff_tmp248;
		BitBlock r800_ffff_tmp249, r800_ffff_tmp250, r800_ffff_tmp251, bytetest_a0_a2;
		BitBlock r800_ffff_tmp252, r800_ffff_tmp253, r800_ffff_tmp254;
		BitBlock r800_ffff_tmp255, bytetest_b2_b2, r800_ffff_tmp256, bytetest_b9_bb;
		BitBlock r800_ffff_tmp257, bytetest_97_98, r800_ffff_tmp258, r800_ffff_tmp259;
		BitBlock r800_ffff_tmp260, bytetest_9b_9b, r800_ffff_tmp261, r800_ffff_tmp262;
		BitBlock r800_ffff_tmp263, r800_ffff_tmp264, r800_ffff_tmp265, bytetest_98_9e;
		BitBlock r800_ffff_tmp266, bytetest_a0_a0, r800_ffff_tmp267, bytetest_a2_a2;
		BitBlock r800_ffff_tmp268, r800_ffff_tmp269, r800_ffff_tmp270, bytetest_a5_ac;
		BitBlock r800_ffff_tmp271, r800_ffff_tmp272, bytetest_b3_bc, r800_ffff_tmp273;
		BitBlock r800_ffff_tmp274, bytetest_80_83, r800_ffff_tmp275, r800_ffff_tmp276;
		BitBlock r800_ffff_tmp277, bytetest_b4_b4, r800_ffff_tmp278, r800_ffff_tmp279;
		BitBlock bytetest_b6_ba, r800_ffff_tmp280, r800_ffff_tmp281, r800_ffff_tmp282;
		BitBlock r800_ffff_tmp283, r800_ffff_tmp284, r800_ffff_tmp285;
		BitBlock r800_ffff_tmp286, r800_ffff_tmp287, r800_ffff_tmp288;
		BitBlock r800_ffff_tmp289, r800_ffff_tmp290, bytetest_a2_a5, r800_ffff_tmp291;
		BitBlock bytetest_a8_a9, r800_ffff_tmp292, r800_ffff_tmp293, bytetest_a6_a6;
		BitBlock r800_ffff_tmp294, r800_ffff_tmp295, r800_ffff_tmp296;
		BitBlock r800_ffff_tmp297, r800_ffff_tmp298, r800_ffff_tmp299;
		BitBlock r800_ffff_tmp300, bytetest_af_b1, r800_ffff_tmp301, r800_ffff_tmp302;
		BitBlock bytetest_ac_b3, r800_ffff_tmp303, r800_ffff_tmp304, r800_ffff_tmp305;
		BitBlock bytetest_b6_b7, r800_ffff_tmp306, r800_ffff_tmp307, bytetest_90_92;
		BitBlock r800_ffff_tmp308, r800_ffff_tmp309, r800_ffff_tmp310;
		BitBlock r800_ffff_tmp311, r800_ffff_tmp312, bytetest_94_a0, r800_ffff_tmp313;
		BitBlock r800_ffff_tmp314, bytetest_a2_a8, r800_ffff_tmp315, r800_ffff_tmp316;
		BitBlock r800_ffff_tmp317, r800_ffff_tmp318, r800_ffff_tmp319;
		BitBlock r800_ffff_tmp320, bytetest_80_a6, r800_ffff_tmp321, r800_ffff_tmp322;
		BitBlock r800_ffff_tmp323, bytetest_bc_bf, r800_ffff_tmp324, bytetest_e2;
		BitBlock bytetest_83, r800_ffff_tmp325, bytetest_90_9c, r800_ffff_tmp326;
		BitBlock r800_ffff_tmp327, r800_ffff_tmp328, r800_ffff_tmp329;
		BitBlock r800_ffff_tmp330, bytetest_a1_a1, r800_ffff_tmp331, r800_ffff_tmp332;
		BitBlock bytetest_a5_b0, r800_ffff_tmp333, r800_ffff_tmp334, r800_ffff_tmp335;
		BitBlock r800_ffff_tmp336, r800_ffff_tmp337, r800_ffff_tmp338;
		BitBlock r800_ffff_tmp339, r800_ffff_tmp340, r800_ffff_tmp341;
		BitBlock r800_ffff_tmp342, bytetest_e3, r800_ffff_tmp343, r800_ffff_tmp344;
		BitBlock r800_ffff_tmp345, r800_ffff_tmp346, r800_ffff_tmp347, bytetest_99_9a;
		BitBlock r800_ffff_tmp348, r800_ffff_tmp349, r800_ffff_tmp350, bytetest_ea;
		BitBlock bytetest_99, bytetest_af_af, r800_ffff_tmp351, r800_ffff_tmp352;
		BitBlock r800_ffff_tmp353, r800_ffff_tmp354, r800_ffff_tmp355;
		BitBlock r800_ffff_tmp356, bytetest_b4_bd, r800_ffff_tmp357, bytetest_9f_9f;
		BitBlock r800_ffff_tmp358, r800_ffff_tmp359, r800_ffff_tmp360, bytetest_9b;
		BitBlock r800_ffff_tmp361, r800_ffff_tmp362, r800_ffff_tmp363;
		BitBlock r800_ffff_tmp364, r800_ffff_tmp365, r800_ffff_tmp366;
		BitBlock r800_ffff_tmp367, bytetest_8b_8b, r800_ffff_tmp368, bytetest_a5_a6;
		BitBlock r800_ffff_tmp369, bytetest_84_84, r800_ffff_tmp370, r800_ffff_tmp371;
		BitBlock r800_ffff_tmp372, r800_ffff_tmp373, bytetest_a0_b1, r800_ffff_tmp374;
		BitBlock r800_ffff_tmp375, bytetest_a6_ad, r800_ffff_tmp376, r800_ffff_tmp377;
		BitBlock r800_ffff_tmp378, r800_ffff_tmp379, bytetest_87_91, r800_ffff_tmp380;
		BitBlock r800_ffff_tmp381, r800_ffff_tmp382, r800_ffff_tmp383;
		BitBlock r800_ffff_tmp384, r800_ffff_tmp385, bytetest_b3_b3, r800_ffff_tmp386;
		BitBlock bytetest_b6_b9, r800_ffff_tmp387, r800_ffff_tmp388, r800_ffff_tmp389;
		BitBlock bytetest_a9_ae, r800_ffff_tmp390, r800_ffff_tmp391, r800_ffff_tmp392;
		BitBlock r800_ffff_tmp393, bytetest_b1_b2, r800_ffff_tmp394, r800_ffff_tmp395;
		BitBlock bytetest_b5_b6, r800_ffff_tmp396, bytetest_83_83, r800_ffff_tmp397;
		BitBlock r800_ffff_tmp398, r800_ffff_tmp399, bytetest_8c_8c, r800_ffff_tmp400;
		BitBlock r800_ffff_tmp401, r800_ffff_tmp402, r800_ffff_tmp403;
		BitBlock r800_ffff_tmp404, bytetest_b7_b8, r800_ffff_tmp405, r800_ffff_tmp406;
		BitBlock r800_ffff_tmp407, r800_ffff_tmp408, r800_ffff_tmp409, bytetest_ac_ad;
		BitBlock r800_ffff_tmp410, bytetest_b6_b6, r800_ffff_tmp411, bytetest_a5_a5;
		BitBlock r800_ffff_tmp412, r800_ffff_tmp413, r800_ffff_tmp414, bytetest_a8_a8;
		BitBlock r800_ffff_tmp415, r800_ffff_tmp416, bytetest_ef, bytetest_9e_9e;
		BitBlock r800_ffff_tmp417, r800_ffff_tmp418, r800_ffff_tmp419;
		BitBlock r800_ffff_tmp420, r800_ffff_tmp421, bytetest_80_8f, r800_ffff_tmp422;
		BitBlock r800_ffff_tmp423, r800_ffff_tmp424, bytetest_a0_a6, r800_ffff_tmp425;
		BitBlock tmp144, bytetest_90, tmp145, tmp146, tmp147, r10000_10fff_tmp1;
		BitBlock r10000_10fff_tmp2, r10000_10fff_tmp3, bytetest_bd_bd;
		BitBlock r10000_10fff_tmp4, r10000_10fff_tmp5, r10000_10fff_tmp6;
		BitBlock r10000_10fff_tmp7, r10000_10fff_tmp8, r10000_10fff_tmp9;
		BitBlock r10000_10fff_tmp10, r10000_10fff_tmp11, bytetest_81_83;
		BitBlock r10000_10fff_tmp12, r10000_10fff_tmp13, r10000_10fff_tmp14;
		BitBlock r10000_10fff_tmp15, r10000_10fff_tmp16, bytetest_8c_8f;
		BitBlock r10000_10fff_tmp17, r10000_10fff_tmp18, bytetest_b8_ba;
		BitBlock r10000_10fff_tmp19, r10000_10fff_tmp20;




        struct_Mn.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_and(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_or(tmp4, tmp5);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp11 = simd_andc(tmp10, tmp4);
        bytetest_91 = simd_and(tmp9, tmp11);
        tmp12 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp13 = simd_andc(tmp7, tmp12);
        bytetest_80 = simd_andc(tmp13, tmp6);
        bytetest_81_81 = simd_and(tmp13, tmp11);
        tmp14 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp14, carryQ.get_carry_in(0), tmp15));
        tmp16 = simd_and(tmp15, bytetest_f0);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp16, carryQ.get_carry_in(1), tmp17));
        tmp18 = simd_and(tmp17, bytetest_91);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp18, carryQ.get_carry_in(2), tmp19));
        tmp20 = simd_and(tmp19, bytetest_80);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp20, carryQ.get_carry_in(3), tmp21));
        tmp22 = simd_and(tmp21, bytetest_81_81);
        struct_Mn.cc = simd_or(tmp22, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        bytetest_81 = simd_and(tmp13, tmp11);
        tmp23 = simd_andc(tmp13, basis_bits.bit_4);
        tmp24 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp25 = simd_and(basis_bits.bit_5, tmp24);
        bytetest_80_86 = simd_andc(tmp23, tmp25);
        tmp26 = simd_and(tmp19, bytetest_81);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp26, carryQ.get_carry_in(4), tmp27));
        tmp28 = simd_and(tmp27, bytetest_80_86);
        bytetest_80 = simd_andc(tmp13, tmp6);
        tmp29 = simd_and(tmp7, tmp2);
        bytetest_b8_bf = simd_and(tmp29, basis_bits.bit_4);
        tmp30 = simd_and(tmp21, bytetest_b8_bf);
        tmp31 = simd_or(tmp30, tmp28);
        struct_Mn.cc = simd_or(tmp31, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        tmp32 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp33 = simd_andc(tmp32, tmp4);
        bytetest_82 = simd_and(tmp13, tmp33);
        tmp34 = simd_or(tmp4, basis_bits.bit_6);
        bytetest_80_81 = simd_andc(tmp13, tmp34);
        tmp35 = simd_and(tmp19, bytetest_82);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp35, carryQ.get_carry_in(5), tmp36));
        tmp37 = simd_and(tmp36, bytetest_80_81);
        struct_Mn.cc = simd_or(tmp37, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        bytetest_82 = simd_and(tmp13, tmp33);
        tmp38 = simd_andc(tmp29, basis_bits.bit_4);
        tmp39 = simd_not(tmp24);
        tmp40 = simd_or(simd_and(basis_bits.bit_5, tmp39), simd_andc(tmp24, basis_bits.bit_5));
        bytetest_b3_b6 = simd_and(tmp38, tmp40);
        tmp41 = simd_and(tmp36, bytetest_b3_b6);
        struct_Mn.cc = simd_or(tmp41, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        bytetest_82 = simd_and(tmp13, tmp33);
        tmp42 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp43 = simd_and(tmp29, tmp42);
        tmp44 = simd_not(basis_bits.bit_7);
        tmp45 = simd_or(simd_and(basis_bits.bit_6, tmp44), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
        bytetest_b9_ba = simd_and(tmp43, tmp45);
        tmp46 = simd_and(tmp36, bytetest_b9_ba);
        struct_Mn.cc = simd_or(tmp46, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        tmp47 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp48 = simd_andc(tmp47, tmp5);
        bytetest_84 = simd_and(tmp13, tmp48);
        tmp49 = simd_andc(tmp13, tmp4);
        bytetest_80_82 = simd_andc(tmp49, tmp24);
        tmp50 = simd_and(tmp19, bytetest_84);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp50, carryQ.get_carry_in(6), tmp51));
        tmp52 = simd_and(tmp51, bytetest_80_82);
        struct_Mn.cc = simd_or(tmp52, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        bytetest_84 = simd_and(tmp13, tmp48);
        tmp53 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp54 = simd_and(tmp7, tmp53);
        tmp55 = simd_not(basis_bits.bit_5);
        tmp56 = simd_or(simd_and(basis_bits.bit_4, tmp55), simd_andc(tmp25, basis_bits.bit_4));
        bytetest_a7_ab = simd_and(tmp54, tmp56);
        tmp57 = simd_and(tmp51, bytetest_a7_ab);
        struct_Mn.cc = simd_or(tmp57, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        bytetest_84 = simd_and(tmp13, tmp48);
        tmp58 = simd_and(tmp7, basis_bits.bit_2);
        tmp59 = simd_and(basis_bits.bit_5, tmp5);
        tmp60 = simd_or(basis_bits.bit_4, tmp59);
        tmp61 = simd_not(tmp60);
        tmp62 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp63 = simd_and(tmp62, tmp5);
        tmp64 = simd_or(simd_and(basis_bits.bit_3, tmp61), simd_andc(tmp63, basis_bits.bit_3));
        bytetest_ad_b4 = simd_and(tmp58, tmp64);
        tmp65 = simd_and(tmp51, bytetest_ad_b4);
        struct_Mn.cc = simd_or(tmp65, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        tmp66 = simd_and(tmp47, tmp32);
        bytetest_86 = simd_and(tmp13, tmp66);
        bytetest_80_81 = simd_andc(tmp13, tmp34);
        tmp67 = simd_and(tmp19, bytetest_86);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp67, carryQ.get_carry_in(7), tmp68));
        tmp69 = simd_and(tmp68, bytetest_80_81);
        struct_Mn.cc = simd_or(tmp69, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        bytetest_86 = simd_and(tmp13, tmp66);
        tmp70 = simd_not(tmp25);
        tmp71 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp72 = simd_or(simd_and(basis_bits.bit_4, tmp70), simd_andc(tmp71, basis_bits.bit_4));
        bytetest_b6_be = simd_and(tmp29, tmp72);
        tmp73 = simd_and(tmp68, bytetest_b6_be);
        struct_Mn.cc = simd_or(tmp73, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        tmp74 = simd_and(tmp42, tmp32);
        bytetest_9a = simd_and(tmp9, tmp74);
        tmp75 = simd_and(tmp42, tmp24);
        bytetest_ab_ab = simd_and(tmp54, tmp75);
        tmp76 = simd_and(tmp19, bytetest_9a);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(tmp76, carryQ.get_carry_in(8), tmp77));
        tmp78 = simd_and(tmp77, bytetest_ab_ab);
        struct_Mn.cc = simd_or(tmp78, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        bytetest_9a = simd_and(tmp9, tmp74);
        tmp79 = simd_and(tmp62, tmp10);
        bytetest_ad_ad = simd_and(tmp54, tmp79);
        tmp80 = simd_and(tmp77, bytetest_ad_ad);
        struct_Mn.cc = simd_or(tmp80, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        bytetest_9a = simd_and(tmp9, tmp74);
        bytetest_b0_b5 = simd_andc(tmp38, tmp71);
        tmp81 = simd_and(tmp77, bytetest_b0_b5);
        struct_Mn.cc = simd_or(tmp81, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        bytetest_9a = simd_and(tmp9, tmp74);
        tmp82 = simd_and(tmp47, tmp24);
        bytetest_b7_b7 = simd_and(tmp29, tmp82);
        tmp83 = simd_and(tmp77, bytetest_b7_b7);
        struct_Mn.cc = simd_or(tmp83, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_96 = simd_and(tmp9, tmp66);
        tmp84 = simd_and(tmp62, tmp32);
        bytetest_be = simd_and(tmp29, tmp84);
        tmp85 = simd_andc(tmp7, basis_bits.bit_2);
        tmp86 = simd_or(tmp4, tmp24);
        tmp87 = simd_not(tmp86);
        tmp88 = simd_and(tmp62, tmp24);
        tmp89 = simd_or(simd_and(basis_bits.bit_3, tmp87), simd_andc(tmp88, basis_bits.bit_3));
        bytetest_8f_92 = simd_and(tmp85, tmp89);
        tmp90 = simd_and(tmp17, bytetest_96);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(tmp90, carryQ.get_carry_in(9), tmp91));
        tmp92 = simd_and(tmp91, bytetest_be);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(tmp92, carryQ.get_carry_in(10), tmp93));
        tmp94 = simd_and(tmp93, bytetest_8f_92);
        struct_Mn.cc = simd_or(tmp94, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp9, tmp79);
        tmp95 = simd_and(tmp47, tmp10);
        bytetest_85 = simd_and(tmp13, tmp95);
        tmp96 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
        tmp97 = simd_not(tmp96);
        tmp98 = simd_or(simd_and(basis_bits.bit_4, tmp97), simd_andc(tmp25, basis_bits.bit_4));
        bytetest_a7_a9 = simd_and(tmp54, tmp98);
        tmp99 = simd_and(tmp17, bytetest_9d);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(tmp99, carryQ.get_carry_in(11), tmp100));
        tmp101 = simd_and(tmp100, bytetest_85);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(tmp101, carryQ.get_carry_in(12), tmp102));
        tmp103 = simd_and(tmp102, bytetest_a7_a9);
        struct_Mn.cc = simd_or(tmp103, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp9, tmp79);
        bytetest_86 = simd_and(tmp13, tmp66);
        bytetest_80_82 = simd_andc(tmp49, tmp24);
        tmp104 = simd_and(tmp100, bytetest_86);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(tmp104, carryQ.get_carry_in(13), tmp105));
        tmp106 = simd_and(tmp105, bytetest_80_82);
        bytetest_85 = simd_and(tmp13, tmp95);
        tmp107 = simd_or(basis_bits.bit_5, tmp24);
        bytetest_bb_bf = simd_and(bytetest_b8_bf, tmp107);
        tmp108 = simd_and(tmp102, bytetest_bb_bf);
        tmp109 = simd_or(tmp108, tmp106);
        struct_Mn.cc = simd_or(tmp109, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp9, tmp79);
        bytetest_86 = simd_and(tmp13, tmp66);
        tmp110 = simd_or(simd_and(basis_bits.bit_4, tmp55), simd_andc(tmp59, basis_bits.bit_4));
        bytetest_85_8b = simd_and(tmp13, tmp110);
        tmp111 = simd_and(tmp105, bytetest_85_8b);
        struct_Mn.cc = simd_or(tmp111, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp9, tmp79);
        bytetest_86 = simd_and(tmp13, tmp66);
        tmp112 = simd_and(tmp54, basis_bits.bit_4);
        tmp113 = simd_not(basis_bits.bit_6);
        tmp114 = simd_or(simd_and(basis_bits.bit_5, tmp113), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        bytetest_aa_ad = simd_and(tmp112, tmp114);
        tmp115 = simd_and(tmp105, bytetest_aa_ad);
        struct_Mn.cc = simd_or(tmp115, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp9, tmp79);
        tmp116 = simd_and(tmp42, tmp10);
        bytetest_89 = simd_and(tmp13, tmp116);
        tmp117 = simd_not(tmp5);
        tmp118 = simd_or(simd_and(basis_bits.bit_5, tmp117), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        bytetest_82_84 = simd_and(tmp23, tmp118);
        tmp119 = simd_and(tmp100, bytetest_89);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(tmp119, carryQ.get_carry_in(14), tmp120));
        tmp121 = simd_and(tmp120, bytetest_82_84);
        struct_Mn.cc = simd_or(tmp121, struct_Mn.cc);
        tmp122 = simd_andc(tmp24, tmp4);
        bytetest_f3 = simd_and(tmp3, tmp122);
        bytetest_a0 = simd_andc(tmp54, tmp6);
        bytetest_87 = simd_and(tmp13, tmp82);
        bytetest_80_af = simd_andc(tmp7, tmp2);
        tmp123 = simd_and(tmp15, bytetest_f3);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(tmp123, carryQ.get_carry_in(15), tmp124));
        tmp125 = simd_and(tmp124, bytetest_a0);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(tmp125, carryQ.get_carry_in(16), tmp126));
        tmp127 = simd_and(tmp126, bytetest_87);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(tmp127, carryQ.get_carry_in(17), tmp128));
        tmp129 = simd_and(tmp128, bytetest_80_af);
        tmp130 = simd_and(tmp13, tmp47);
        bytetest_84_86 = simd_andc(tmp130, tmp24);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp131 = simd_and(tmp126, bytetest_84_86);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(tmp131, carryQ.get_carry_in(18), tmp132));
        tmp133 = simd_and(tmp132, bytetest_80_bf);
        tmp134 = simd_or(tmp133, tmp129);
        struct_Mn.cc = simd_or(tmp134, struct_Mn.cc);
        tmp135 = simd_andc(tmp1, basis_bits.bit_2);
        tmp136 = simd_or(basis_bits.bit_3, tmp34);
        bytetest_c2_df = simd_and(tmp135, tmp136);
        if ((bitblock::any(bytetest_c2_df) || carryQ.CarryTest(19, 12))) {
          r80_7ff_tmp1 = simd_andc(tmp1, tmp12);
          bytetest_cd = simd_and(r80_7ff_tmp1, tmp79);
          bytetest_80_af = simd_andc(bytetest_80_bf, tmp2);
          r80_7ff_tmp2 = simd_and(tmp15, bytetest_cd);
          carryQ.cq[19] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp2, carryQ.get_carry_in(19), r80_7ff_tmp3));
          r80_7ff_tmp4 = simd_and(r80_7ff_tmp3, bytetest_80_af);
          r80_7ff_tmp5 = simd_andc(tmp62, tmp5);
          bytetest_cc = simd_and(r80_7ff_tmp1, r80_7ff_tmp5);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r80_7ff_tmp6 = simd_and(tmp15, bytetest_cc);
          carryQ.cq[20] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp6, carryQ.get_carry_in(20), r80_7ff_tmp7));
          r80_7ff_tmp8 = simd_and(r80_7ff_tmp7, bytetest_80_bf);
          r80_7ff_tmp9 = simd_or(r80_7ff_tmp8, r80_7ff_tmp4);
          struct_Mn.cc = simd_or(r80_7ff_tmp9, struct_Mn.cc);
          r80_7ff_tmp10 = simd_and(tmp1, tmp8);
          bytetest_d2 = simd_and(r80_7ff_tmp10, tmp33);
          r80_7ff_tmp11 = simd_andc(bytetest_80_bf, tmp12);
          r80_7ff_tmp12 = simd_andc(r80_7ff_tmp11, basis_bits.bit_4);
          bytetest_83_87 = simd_and(r80_7ff_tmp12, tmp107);
          r80_7ff_tmp13 = simd_and(tmp15, bytetest_d2);
          carryQ.cq[21] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp13, carryQ.get_carry_in(21), r80_7ff_tmp14));
          r80_7ff_tmp15 = simd_and(r80_7ff_tmp14, bytetest_83_87);
          struct_Mn.cc = simd_or(r80_7ff_tmp15, struct_Mn.cc);
          bytetest_d6 = simd_and(r80_7ff_tmp10, tmp66);
          r80_7ff_tmp16 = simd_and(tmp62, basis_bits.bit_6);
          r80_7ff_tmp17 = simd_and(basis_bits.bit_3, r80_7ff_tmp16);
          r80_7ff_tmp18 = simd_not(r80_7ff_tmp17);
          r80_7ff_tmp19 = simd_and(basis_bits.bit_3, tmp6);
          r80_7ff_tmp20 = simd_or(simd_and(basis_bits.bit_2, r80_7ff_tmp18), simd_andc(r80_7ff_tmp19, basis_bits.bit_2));
          bytetest_91_bd = simd_and(bytetest_80_bf, r80_7ff_tmp20);
          r80_7ff_tmp21 = simd_and(tmp15, bytetest_d6);
          carryQ.cq[22] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp21, carryQ.get_carry_in(22), r80_7ff_tmp22));
          r80_7ff_tmp23 = simd_and(r80_7ff_tmp22, bytetest_91_bd);
          struct_Mn.cc = simd_or(r80_7ff_tmp23, struct_Mn.cc);
          bytetest_d6 = simd_and(r80_7ff_tmp10, tmp66);
          r80_7ff_tmp24 = simd_and(bytetest_80_bf, tmp2);
          bytetest_bf_bf = simd_and(r80_7ff_tmp24, tmp88);
          r80_7ff_tmp25 = simd_and(r80_7ff_tmp22, bytetest_bf_bf);
          struct_Mn.cc = simd_or(r80_7ff_tmp25, struct_Mn.cc);
          bytetest_d7 = simd_and(r80_7ff_tmp10, tmp82);
          r80_7ff_tmp26 = simd_andc(r80_7ff_tmp11, tmp4);
          bytetest_81_82 = simd_and(r80_7ff_tmp26, tmp45);
          r80_7ff_tmp27 = simd_and(tmp15, bytetest_d7);
          carryQ.cq[23] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp27, carryQ.get_carry_in(23), r80_7ff_tmp28));
          r80_7ff_tmp29 = simd_and(r80_7ff_tmp28, bytetest_81_82);
          struct_Mn.cc = simd_or(r80_7ff_tmp29, struct_Mn.cc);
          bytetest_d7 = simd_and(r80_7ff_tmp10, tmp82);
          r80_7ff_tmp30 = simd_andc(tmp47, basis_bits.bit_6);
          bytetest_84_85 = simd_and(r80_7ff_tmp11, r80_7ff_tmp30);
          r80_7ff_tmp31 = simd_and(r80_7ff_tmp28, bytetest_84_85);
          struct_Mn.cc = simd_or(r80_7ff_tmp31, struct_Mn.cc);
          bytetest_d7 = simd_and(r80_7ff_tmp10, tmp82);
          bytetest_87_87 = simd_and(r80_7ff_tmp11, tmp82);
          r80_7ff_tmp32 = simd_and(r80_7ff_tmp28, bytetest_87_87);
          struct_Mn.cc = simd_or(r80_7ff_tmp32, struct_Mn.cc);
          r80_7ff_tmp33 = simd_andc(tmp42, tmp5);
          bytetest_d8 = simd_and(r80_7ff_tmp10, r80_7ff_tmp33);
          r80_7ff_tmp34 = simd_and(bytetest_80_bf, tmp8);
          r80_7ff_tmp35 = simd_and(basis_bits.bit_4, tmp107);
          bytetest_90_9a = simd_andc(r80_7ff_tmp34, r80_7ff_tmp35);
          r80_7ff_tmp36 = simd_and(tmp15, bytetest_d8);
          carryQ.cq[24] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp36, carryQ.get_carry_in(24), r80_7ff_tmp37));
          r80_7ff_tmp38 = simd_and(r80_7ff_tmp37, bytetest_90_9a);
          struct_Mn.cc = simd_or(r80_7ff_tmp38, struct_Mn.cc);
          bytetest_d9 = simd_and(r80_7ff_tmp10, tmp116);
          r80_7ff_tmp39 = simd_andc(bytetest_80_bf, basis_bits.bit_2);
          r80_7ff_tmp40 = simd_or(basis_bits.bit_3, r80_7ff_tmp35);
          bytetest_8b_9f = simd_and(r80_7ff_tmp39, r80_7ff_tmp40);
          r80_7ff_tmp41 = simd_and(tmp15, bytetest_d9);
          carryQ.cq[25] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp41, carryQ.get_carry_in(25), r80_7ff_tmp42));
          r80_7ff_tmp43 = simd_and(r80_7ff_tmp42, bytetest_8b_9f);
          struct_Mn.cc = simd_or(r80_7ff_tmp43, struct_Mn.cc);
          bytetest_d9 = simd_and(r80_7ff_tmp10, tmp116);
          bytetest_b0_b0 = simd_andc(r80_7ff_tmp24, tmp6);
          r80_7ff_tmp44 = simd_and(r80_7ff_tmp42, bytetest_b0_b0);
          struct_Mn.cc = simd_or(r80_7ff_tmp44, struct_Mn.cc);
          bytetest_db = simd_and(r80_7ff_tmp10, tmp75);
          r80_7ff_tmp45 = simd_not(tmp59);
          r80_7ff_tmp46 = simd_or(simd_and(basis_bits.bit_4, r80_7ff_tmp45), simd_andc(tmp71, basis_bits.bit_4));
          bytetest_96_9c = simd_and(r80_7ff_tmp34, r80_7ff_tmp46);
          r80_7ff_tmp47 = simd_and(tmp15, bytetest_db);
          carryQ.cq[26] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp47, carryQ.get_carry_in(26), r80_7ff_tmp48));
          r80_7ff_tmp49 = simd_and(r80_7ff_tmp48, bytetest_96_9c);
          struct_Mn.cc = simd_or(r80_7ff_tmp49, struct_Mn.cc);
          bytetest_db = simd_and(r80_7ff_tmp10, tmp75);
          r80_7ff_tmp50 = simd_or(basis_bits.bit_3, tmp60);
          r80_7ff_tmp51 = simd_not(r80_7ff_tmp50);
          r80_7ff_tmp52 = simd_and(basis_bits.bit_3, tmp88);
          r80_7ff_tmp53 = simd_or(simd_and(basis_bits.bit_2, r80_7ff_tmp51), simd_andc(r80_7ff_tmp52, basis_bits.bit_2));
          bytetest_9f_a4 = simd_and(bytetest_80_bf, r80_7ff_tmp53);
          r80_7ff_tmp54 = simd_and(r80_7ff_tmp48, bytetest_9f_a4);
          struct_Mn.cc = simd_or(r80_7ff_tmp54, struct_Mn.cc);
          bytetest_db = simd_and(r80_7ff_tmp10, tmp75);
          r80_7ff_tmp55 = simd_and(bytetest_80_bf, tmp53);
          r80_7ff_tmp56 = simd_or(basis_bits.bit_5, tmp5);
          r80_7ff_tmp57 = simd_not(r80_7ff_tmp56);
          r80_7ff_tmp58 = simd_or(simd_and(basis_bits.bit_4, r80_7ff_tmp57), simd_andc(tmp25, basis_bits.bit_4));
          bytetest_a7_a8 = simd_and(r80_7ff_tmp55, r80_7ff_tmp58);
          r80_7ff_tmp59 = simd_and(r80_7ff_tmp48, bytetest_a7_a8);
          struct_Mn.cc = simd_or(r80_7ff_tmp59, struct_Mn.cc);
          bytetest_db = simd_and(r80_7ff_tmp10, tmp75);
          r80_7ff_tmp60 = simd_and(r80_7ff_tmp55, basis_bits.bit_4);
          bytetest_aa_ad = simd_and(r80_7ff_tmp60, tmp114);
          r80_7ff_tmp61 = simd_and(r80_7ff_tmp48, bytetest_aa_ad);
          struct_Mn.cc = simd_or(r80_7ff_tmp61, struct_Mn.cc);
          bytetest_dc = simd_and(r80_7ff_tmp10, r80_7ff_tmp5);
          bytetest_91_91 = simd_and(r80_7ff_tmp34, tmp11);
          r80_7ff_tmp62 = simd_and(tmp15, bytetest_dc);
          carryQ.cq[27] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp62, carryQ.get_carry_in(27), r80_7ff_tmp63));
          r80_7ff_tmp64 = simd_and(r80_7ff_tmp63, bytetest_91_91);
          struct_Mn.cc = simd_or(r80_7ff_tmp64, struct_Mn.cc);
          bytetest_dd = simd_and(r80_7ff_tmp10, tmp79);
          bytetest_80_8a = simd_andc(r80_7ff_tmp11, r80_7ff_tmp35);
          r80_7ff_tmp65 = simd_and(tmp15, bytetest_dd);
          carryQ.cq[28] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp65, carryQ.get_carry_in(28), r80_7ff_tmp66));
          r80_7ff_tmp67 = simd_and(r80_7ff_tmp66, bytetest_80_8a);
          bytetest_dc = simd_and(r80_7ff_tmp10, r80_7ff_tmp5);
          bytetest_b0_bf = simd_and(bytetest_80_bf, tmp2);
          r80_7ff_tmp68 = simd_and(r80_7ff_tmp63, bytetest_b0_bf);
          r80_7ff_tmp69 = simd_or(r80_7ff_tmp68, r80_7ff_tmp67);
          struct_Mn.cc = simd_or(r80_7ff_tmp69, struct_Mn.cc);
          bytetest_de = simd_and(r80_7ff_tmp10, tmp84);
          r80_7ff_tmp70 = simd_and(bytetest_80_bf, basis_bits.bit_2);
          r80_7ff_tmp71 = simd_not(tmp6);
          r80_7ff_tmp72 = simd_or(basis_bits.bit_4, tmp71);
          r80_7ff_tmp73 = simd_or(simd_and(basis_bits.bit_3, r80_7ff_tmp71), simd_andc(r80_7ff_tmp72, basis_bits.bit_3));
          bytetest_a6_b0 = simd_and(r80_7ff_tmp70, r80_7ff_tmp73);
          r80_7ff_tmp74 = simd_and(tmp15, bytetest_de);
          carryQ.cq[29] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp74, carryQ.get_carry_in(29), r80_7ff_tmp75));
          r80_7ff_tmp76 = simd_and(r80_7ff_tmp75, bytetest_a6_b0);
          struct_Mn.cc = simd_or(r80_7ff_tmp76, struct_Mn.cc);
          bytetest_df = simd_and(r80_7ff_tmp10, tmp88);
          r80_7ff_tmp77 = simd_not(tmp4);
          r80_7ff_tmp78 = simd_or(simd_and(basis_bits.bit_3, r80_7ff_tmp77), simd_andc(r80_7ff_tmp35, basis_bits.bit_3));
          bytetest_ab_b3 = simd_and(r80_7ff_tmp70, r80_7ff_tmp78);
          r80_7ff_tmp79 = simd_and(tmp15, bytetest_df);
          carryQ.cq[30] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp79, carryQ.get_carry_in(30), r80_7ff_tmp80));
          r80_7ff_tmp81 = simd_and(r80_7ff_tmp80, bytetest_ab_b3);
          struct_Mn.cc = simd_or(r80_7ff_tmp81, struct_Mn.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(19, 12);
        }
        tmp137 = simd_and(tmp1, tmp53);
        tmp138 = simd_or(basis_bits.bit_5, tmp5);
        tmp139 = simd_or(basis_bits.bit_4, tmp138);
        bytetest_e1_ef = simd_and(tmp137, tmp139);
        bytetest_e0 = simd_andc(tmp137, tmp6);
        bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp140 = simd_and(tmp15, bytetest_e0);
        carryQ.cq[31] = carryout2carry(pablo_blk_Advance(tmp140, carryQ.get_carry_in(31), tmp141));
        tmp142 = simd_and(tmp141, bytetest_a0_bf);
        tmp143 = simd_or(tmp142, bytetest_e1_ef);
        if ((bitblock::any(tmp143) || carryQ.CarryTest(32, 76))) {
          r800_ffff_tmp1 = simd_and(tmp1, tmp53);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          r800_ffff_tmp2 = simd_and(bytetest_80_bf, tmp53);
          bytetest_a0 = simd_andc(r800_ffff_tmp2, tmp6);
          r800_ffff_tmp3 = simd_and(bytetest_80_bf, tmp8);
          r800_ffff_tmp4 = simd_or(simd_and(basis_bits.bit_4, tmp97), simd_andc(tmp71, basis_bits.bit_4));
          bytetest_96_99 = simd_and(r800_ffff_tmp3, r800_ffff_tmp4);
          r800_ffff_tmp5 = simd_and(tmp15, bytetest_e0);
          carryQ.cq[32] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp5, carryQ.get_carry_in(32), r800_ffff_tmp6));
          r800_ffff_tmp7 = simd_and(r800_ffff_tmp6, bytetest_a0);
          carryQ.cq[33] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp7, carryQ.get_carry_in(33), r800_ffff_tmp8));
          r800_ffff_tmp9 = simd_and(r800_ffff_tmp8, bytetest_96_99);
          struct_Mn.cc = simd_or(r800_ffff_tmp9, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a0 = simd_andc(r800_ffff_tmp2, tmp6);
          r800_ffff_tmp10 = simd_or(basis_bits.bit_3, tmp4);
          r800_ffff_tmp11 = simd_not(r800_ffff_tmp10);
          r800_ffff_tmp12 = simd_and(basis_bits.bit_4, tmp107);
          r800_ffff_tmp13 = simd_and(basis_bits.bit_3, r800_ffff_tmp12);
          r800_ffff_tmp14 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp11), simd_andc(r800_ffff_tmp13, basis_bits.bit_2));
          bytetest_9b_a3 = simd_and(bytetest_80_bf, r800_ffff_tmp14);
          r800_ffff_tmp15 = simd_and(r800_ffff_tmp8, bytetest_9b_a3);
          struct_Mn.cc = simd_or(r800_ffff_tmp15, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a0 = simd_andc(r800_ffff_tmp2, tmp6);
          r800_ffff_tmp16 = simd_and(r800_ffff_tmp2, tmp47);
          bytetest_a5_a7 = simd_and(r800_ffff_tmp16, tmp5);
          r800_ffff_tmp17 = simd_and(r800_ffff_tmp8, bytetest_a5_a7);
          struct_Mn.cc = simd_or(r800_ffff_tmp17, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a0 = simd_andc(r800_ffff_tmp2, tmp6);
          r800_ffff_tmp18 = simd_and(r800_ffff_tmp2, basis_bits.bit_4);
          r800_ffff_tmp19 = simd_or(simd_and(basis_bits.bit_5, tmp113), simd_andc(tmp5, basis_bits.bit_5));
          bytetest_a9_ad = simd_and(r800_ffff_tmp18, r800_ffff_tmp19);
          r800_ffff_tmp20 = simd_and(r800_ffff_tmp8, bytetest_a9_ad);
          struct_Mn.cc = simd_or(r800_ffff_tmp20, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a1 = simd_and(r800_ffff_tmp2, tmp11);
          r800_ffff_tmp21 = simd_and(r800_ffff_tmp3, tmp42);
          bytetest_99_9b = simd_and(r800_ffff_tmp21, tmp5);
          r800_ffff_tmp22 = simd_and(r800_ffff_tmp6, bytetest_a1);
          carryQ.cq[34] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp22, carryQ.get_carry_in(34), r800_ffff_tmp23));
          r800_ffff_tmp24 = simd_and(r800_ffff_tmp23, bytetest_99_9b);
          struct_Mn.cc = simd_or(r800_ffff_tmp24, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a3 = simd_and(r800_ffff_tmp2, tmp122);
          r800_ffff_tmp25 = simd_and(bytetest_80_bf, basis_bits.bit_2);
          r800_ffff_tmp26 = simd_not(tmp88);
          r800_ffff_tmp27 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp26), simd_andc(tmp4, basis_bits.bit_3));
          bytetest_a4_be = simd_and(r800_ffff_tmp25, r800_ffff_tmp27);
          r800_ffff_tmp28 = simd_and(r800_ffff_tmp6, bytetest_a3);
          carryQ.cq[35] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp28, carryQ.get_carry_in(35), r800_ffff_tmp29));
          r800_ffff_tmp30 = simd_and(r800_ffff_tmp29, bytetest_a4_be);
          struct_Mn.cc = simd_or(r800_ffff_tmp30, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a4 = simd_and(r800_ffff_tmp2, tmp48);
          r800_ffff_tmp31 = simd_andc(bytetest_80_bf, tmp12);
          r800_ffff_tmp32 = simd_andc(r800_ffff_tmp31, tmp4);
          bytetest_80_82 = simd_andc(r800_ffff_tmp32, tmp24);
          r800_ffff_tmp33 = simd_and(r800_ffff_tmp6, bytetest_a4);
          carryQ.cq[36] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp33, carryQ.get_carry_in(36), r800_ffff_tmp34));
          r800_ffff_tmp35 = simd_and(r800_ffff_tmp34, bytetest_80_82);
          struct_Mn.cc = simd_or(r800_ffff_tmp35, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a4 = simd_and(r800_ffff_tmp2, tmp48);
          r800_ffff_tmp36 = simd_and(bytetest_80_bf, tmp2);
          bytetest_ba_ba = simd_and(r800_ffff_tmp36, tmp74);
          r800_ffff_tmp37 = simd_and(r800_ffff_tmp34, bytetest_ba_ba);
          struct_Mn.cc = simd_or(r800_ffff_tmp37, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a4 = simd_and(r800_ffff_tmp2, tmp48);
          r800_ffff_tmp38 = simd_andc(tmp62, tmp5);
          bytetest_bc_bc = simd_and(r800_ffff_tmp36, r800_ffff_tmp38);
          r800_ffff_tmp39 = simd_and(r800_ffff_tmp34, bytetest_bc_bc);
          struct_Mn.cc = simd_or(r800_ffff_tmp39, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a5 = simd_and(r800_ffff_tmp2, tmp95);
          r800_ffff_tmp40 = simd_or(basis_bits.bit_5, tmp5);
          r800_ffff_tmp41 = simd_not(r800_ffff_tmp40);
          r800_ffff_tmp42 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp41), simd_andc(r800_ffff_tmp40, basis_bits.bit_4));
          bytetest_81_88 = simd_and(r800_ffff_tmp31, r800_ffff_tmp42);
          r800_ffff_tmp43 = simd_and(r800_ffff_tmp6, bytetest_a5);
          carryQ.cq[37] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp43, carryQ.get_carry_in(37), r800_ffff_tmp44));
          r800_ffff_tmp45 = simd_and(r800_ffff_tmp44, bytetest_81_88);
          struct_Mn.cc = simd_or(r800_ffff_tmp45, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a5 = simd_and(r800_ffff_tmp2, tmp95);
          bytetest_8d_8d = simd_and(r800_ffff_tmp31, tmp79);
          r800_ffff_tmp46 = simd_and(r800_ffff_tmp44, bytetest_8d_8d);
          struct_Mn.cc = simd_or(r800_ffff_tmp46, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a5 = simd_and(r800_ffff_tmp2, tmp95);
          r800_ffff_tmp47 = simd_andc(r800_ffff_tmp3, basis_bits.bit_4);
          bytetest_91_97 = simd_and(r800_ffff_tmp47, r800_ffff_tmp40);
          r800_ffff_tmp48 = simd_and(r800_ffff_tmp44, bytetest_91_97);
          struct_Mn.cc = simd_or(r800_ffff_tmp48, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a5 = simd_and(r800_ffff_tmp2, tmp95);
          r800_ffff_tmp49 = simd_andc(basis_bits.bit_6, tmp4);
          bytetest_a2_a3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp49);
          r800_ffff_tmp50 = simd_and(r800_ffff_tmp44, bytetest_a2_a3);
          struct_Mn.cc = simd_or(r800_ffff_tmp50, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a6 = simd_and(r800_ffff_tmp2, tmp66);
          bytetest_81_81 = simd_and(r800_ffff_tmp31, tmp11);
          r800_ffff_tmp51 = simd_and(r800_ffff_tmp6, bytetest_a6);
          carryQ.cq[38] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp51, carryQ.get_carry_in(38), r800_ffff_tmp52));
          r800_ffff_tmp53 = simd_and(r800_ffff_tmp52, bytetest_81_81);
          struct_Mn.cc = simd_or(r800_ffff_tmp53, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a6 = simd_and(r800_ffff_tmp2, tmp66);
          bytetest_bc_bc = simd_and(r800_ffff_tmp36, r800_ffff_tmp38);
          r800_ffff_tmp54 = simd_and(r800_ffff_tmp52, bytetest_bc_bc);
          struct_Mn.cc = simd_or(r800_ffff_tmp54, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a7 = simd_and(r800_ffff_tmp2, tmp82);
          r800_ffff_tmp55 = simd_andc(r800_ffff_tmp31, basis_bits.bit_4);
          r800_ffff_tmp56 = simd_or(simd_and(basis_bits.bit_5, tmp117), simd_andc(tmp5, basis_bits.bit_5));
          bytetest_81_84 = simd_and(r800_ffff_tmp55, r800_ffff_tmp56);
          r800_ffff_tmp57 = simd_and(r800_ffff_tmp6, bytetest_a7);
          carryQ.cq[39] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp57, carryQ.get_carry_in(39), r800_ffff_tmp58));
          r800_ffff_tmp59 = simd_and(r800_ffff_tmp58, bytetest_81_84);
          struct_Mn.cc = simd_or(r800_ffff_tmp59, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a7 = simd_and(r800_ffff_tmp2, tmp82);
          bytetest_8d_8d = simd_and(r800_ffff_tmp31, tmp79);
          r800_ffff_tmp60 = simd_and(r800_ffff_tmp58, bytetest_8d_8d);
          struct_Mn.cc = simd_or(r800_ffff_tmp60, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a7 = simd_and(r800_ffff_tmp2, tmp82);
          bytetest_a2_a3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp49);
          r800_ffff_tmp61 = simd_and(r800_ffff_tmp58, bytetest_a2_a3);
          struct_Mn.cc = simd_or(r800_ffff_tmp61, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          r800_ffff_tmp62 = simd_andc(tmp42, tmp5);
          bytetest_a8 = simd_and(r800_ffff_tmp2, r800_ffff_tmp62);
          bytetest_81_82 = simd_and(r800_ffff_tmp32, tmp45);
          r800_ffff_tmp63 = simd_and(r800_ffff_tmp6, bytetest_a8);
          carryQ.cq[40] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp63, carryQ.get_carry_in(40), r800_ffff_tmp64));
          r800_ffff_tmp65 = simd_and(r800_ffff_tmp64, bytetest_81_82);
          struct_Mn.cc = simd_or(r800_ffff_tmp65, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a8 = simd_and(r800_ffff_tmp2, r800_ffff_tmp62);
          bytetest_bc_bc = simd_and(r800_ffff_tmp36, r800_ffff_tmp38);
          r800_ffff_tmp66 = simd_and(r800_ffff_tmp64, bytetest_bc_bc);
          struct_Mn.cc = simd_or(r800_ffff_tmp66, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a9 = simd_and(r800_ffff_tmp2, tmp116);
          bytetest_81_82 = simd_and(r800_ffff_tmp32, tmp45);
          r800_ffff_tmp67 = simd_and(r800_ffff_tmp6, bytetest_a9);
          carryQ.cq[41] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp67, carryQ.get_carry_in(41), r800_ffff_tmp68));
          r800_ffff_tmp69 = simd_and(r800_ffff_tmp68, bytetest_81_82);
          struct_Mn.cc = simd_or(r800_ffff_tmp69, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a9 = simd_and(r800_ffff_tmp2, tmp116);
          r800_ffff_tmp70 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp41), simd_andc(tmp25, basis_bits.bit_4));
          bytetest_87_88 = simd_and(r800_ffff_tmp31, r800_ffff_tmp70);
          r800_ffff_tmp71 = simd_and(r800_ffff_tmp68, bytetest_87_88);
          struct_Mn.cc = simd_or(r800_ffff_tmp71, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a9 = simd_and(r800_ffff_tmp2, tmp116);
          r800_ffff_tmp72 = simd_and(r800_ffff_tmp31, basis_bits.bit_4);
          r800_ffff_tmp73 = simd_or(simd_and(basis_bits.bit_5, tmp113), simd_andc(tmp24, basis_bits.bit_5));
          bytetest_8b_8d = simd_and(r800_ffff_tmp72, r800_ffff_tmp73);
          r800_ffff_tmp74 = simd_and(r800_ffff_tmp68, bytetest_8b_8d);
          struct_Mn.cc = simd_or(r800_ffff_tmp74, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a9 = simd_and(r800_ffff_tmp2, tmp116);
          bytetest_91_91 = simd_and(r800_ffff_tmp3, tmp11);
          r800_ffff_tmp75 = simd_and(r800_ffff_tmp68, bytetest_91_91);
          struct_Mn.cc = simd_or(r800_ffff_tmp75, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a9 = simd_and(r800_ffff_tmp2, tmp116);
          bytetest_b0_b1 = simd_andc(r800_ffff_tmp36, tmp34);
          r800_ffff_tmp76 = simd_and(r800_ffff_tmp68, bytetest_b0_b1);
          struct_Mn.cc = simd_or(r800_ffff_tmp76, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a9 = simd_and(r800_ffff_tmp2, tmp116);
          bytetest_b5_b5 = simd_and(r800_ffff_tmp36, tmp95);
          r800_ffff_tmp77 = simd_and(r800_ffff_tmp68, bytetest_b5_b5);
          struct_Mn.cc = simd_or(r800_ffff_tmp77, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_aa = simd_and(r800_ffff_tmp2, tmp74);
          bytetest_81_82 = simd_and(r800_ffff_tmp32, tmp45);
          r800_ffff_tmp78 = simd_and(r800_ffff_tmp6, bytetest_aa);
          carryQ.cq[42] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp78, carryQ.get_carry_in(42), r800_ffff_tmp79));
          r800_ffff_tmp80 = simd_and(r800_ffff_tmp79, bytetest_81_82);
          struct_Mn.cc = simd_or(r800_ffff_tmp80, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_aa = simd_and(r800_ffff_tmp2, tmp74);
          bytetest_bc_bc = simd_and(r800_ffff_tmp36, r800_ffff_tmp38);
          r800_ffff_tmp81 = simd_and(r800_ffff_tmp79, bytetest_bc_bc);
          struct_Mn.cc = simd_or(r800_ffff_tmp81, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ab = simd_and(r800_ffff_tmp2, tmp75);
          bytetest_81_85 = simd_and(r800_ffff_tmp55, r800_ffff_tmp19);
          r800_ffff_tmp82 = simd_and(r800_ffff_tmp6, bytetest_ab);
          carryQ.cq[43] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp82, carryQ.get_carry_in(43), r800_ffff_tmp83));
          r800_ffff_tmp84 = simd_and(r800_ffff_tmp83, bytetest_81_85);
          struct_Mn.cc = simd_or(r800_ffff_tmp84, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ab = simd_and(r800_ffff_tmp2, tmp75);
          bytetest_87_88 = simd_and(r800_ffff_tmp31, r800_ffff_tmp70);
          r800_ffff_tmp85 = simd_and(r800_ffff_tmp83, bytetest_87_88);
          struct_Mn.cc = simd_or(r800_ffff_tmp85, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ab = simd_and(r800_ffff_tmp2, tmp75);
          bytetest_8d_8d = simd_and(r800_ffff_tmp31, tmp79);
          r800_ffff_tmp86 = simd_and(r800_ffff_tmp83, bytetest_8d_8d);
          struct_Mn.cc = simd_or(r800_ffff_tmp86, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ab = simd_and(r800_ffff_tmp2, tmp75);
          bytetest_a2_a3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp49);
          r800_ffff_tmp87 = simd_and(r800_ffff_tmp83, bytetest_a2_a3);
          struct_Mn.cc = simd_or(r800_ffff_tmp87, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ac = simd_and(r800_ffff_tmp2, r800_ffff_tmp38);
          bytetest_81_81 = simd_and(r800_ffff_tmp31, tmp11);
          r800_ffff_tmp88 = simd_and(r800_ffff_tmp6, bytetest_ac);
          carryQ.cq[44] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp88, carryQ.get_carry_in(44), r800_ffff_tmp89));
          r800_ffff_tmp90 = simd_and(r800_ffff_tmp89, bytetest_81_81);
          struct_Mn.cc = simd_or(r800_ffff_tmp90, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ac = simd_and(r800_ffff_tmp2, r800_ffff_tmp38);
          bytetest_bc_bc = simd_and(r800_ffff_tmp36, r800_ffff_tmp38);
          r800_ffff_tmp91 = simd_and(r800_ffff_tmp89, bytetest_bc_bc);
          struct_Mn.cc = simd_or(r800_ffff_tmp91, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ac = simd_and(r800_ffff_tmp2, r800_ffff_tmp38);
          bytetest_bf_bf = simd_and(r800_ffff_tmp36, tmp88);
          r800_ffff_tmp92 = simd_and(r800_ffff_tmp89, bytetest_bf_bf);
          struct_Mn.cc = simd_or(r800_ffff_tmp92, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ad = simd_and(r800_ffff_tmp2, tmp79);
          bytetest_81_84 = simd_and(r800_ffff_tmp55, r800_ffff_tmp56);
          r800_ffff_tmp93 = simd_and(r800_ffff_tmp6, bytetest_ad);
          carryQ.cq[45] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp93, carryQ.get_carry_in(45), r800_ffff_tmp94));
          r800_ffff_tmp95 = simd_and(r800_ffff_tmp94, bytetest_81_84);
          struct_Mn.cc = simd_or(r800_ffff_tmp95, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ad = simd_and(r800_ffff_tmp2, tmp79);
          bytetest_8d_8d = simd_and(r800_ffff_tmp31, tmp79);
          r800_ffff_tmp96 = simd_and(r800_ffff_tmp94, bytetest_8d_8d);
          struct_Mn.cc = simd_or(r800_ffff_tmp96, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ad = simd_and(r800_ffff_tmp2, tmp79);
          bytetest_96_96 = simd_and(r800_ffff_tmp3, tmp66);
          r800_ffff_tmp97 = simd_and(r800_ffff_tmp94, bytetest_96_96);
          struct_Mn.cc = simd_or(r800_ffff_tmp97, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ad = simd_and(r800_ffff_tmp2, tmp79);
          bytetest_a2_a3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp49);
          r800_ffff_tmp98 = simd_and(r800_ffff_tmp94, bytetest_a2_a3);
          struct_Mn.cc = simd_or(r800_ffff_tmp98, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ae = simd_and(r800_ffff_tmp2, tmp84);
          bytetest_82_82 = simd_and(r800_ffff_tmp31, tmp33);
          r800_ffff_tmp99 = simd_and(r800_ffff_tmp6, bytetest_ae);
          carryQ.cq[46] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp99, carryQ.get_carry_in(46), r800_ffff_tmp100));
          r800_ffff_tmp101 = simd_and(r800_ffff_tmp100, bytetest_82_82);
          struct_Mn.cc = simd_or(r800_ffff_tmp101, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_af = simd_and(r800_ffff_tmp2, tmp88);
          bytetest_80_80 = simd_andc(r800_ffff_tmp31, tmp6);
          r800_ffff_tmp102 = simd_and(r800_ffff_tmp6, bytetest_af);
          carryQ.cq[47] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp102, carryQ.get_carry_in(47), r800_ffff_tmp103));
          r800_ffff_tmp104 = simd_and(r800_ffff_tmp103, bytetest_80_80);
          struct_Mn.cc = simd_or(r800_ffff_tmp104, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_af = simd_and(r800_ffff_tmp2, tmp88);
          bytetest_8d_8d = simd_and(r800_ffff_tmp31, tmp79);
          r800_ffff_tmp105 = simd_and(r800_ffff_tmp103, bytetest_8d_8d);
          struct_Mn.cc = simd_or(r800_ffff_tmp105, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b1 = simd_and(r800_ffff_tmp36, tmp11);
          bytetest_80_80 = simd_andc(r800_ffff_tmp31, tmp6);
          r800_ffff_tmp106 = simd_and(r800_ffff_tmp6, bytetest_b1);
          carryQ.cq[48] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp106, carryQ.get_carry_in(48), r800_ffff_tmp107));
          r800_ffff_tmp108 = simd_and(r800_ffff_tmp107, bytetest_80_80);
          bytetest_b0 = simd_andc(r800_ffff_tmp36, tmp6);
          r800_ffff_tmp109 = simd_and(tmp62, basis_bits.bit_6);
          bytetest_be_bf = simd_and(r800_ffff_tmp36, r800_ffff_tmp109);
          r800_ffff_tmp110 = simd_and(r800_ffff_tmp6, bytetest_b0);
          carryQ.cq[49] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp110, carryQ.get_carry_in(49), r800_ffff_tmp111));
          r800_ffff_tmp112 = simd_and(r800_ffff_tmp111, bytetest_be_bf);
          r800_ffff_tmp113 = simd_or(r800_ffff_tmp112, r800_ffff_tmp108);
          struct_Mn.cc = simd_or(r800_ffff_tmp113, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b1 = simd_and(r800_ffff_tmp36, tmp11);
          r800_ffff_tmp114 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp41), simd_andc(tmp71, basis_bits.bit_4));
          bytetest_86_88 = simd_and(r800_ffff_tmp31, r800_ffff_tmp114);
          r800_ffff_tmp115 = simd_and(r800_ffff_tmp107, bytetest_86_88);
          struct_Mn.cc = simd_or(r800_ffff_tmp115, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b1 = simd_and(r800_ffff_tmp36, tmp11);
          bytetest_8a_8d = simd_and(r800_ffff_tmp72, tmp114);
          r800_ffff_tmp116 = simd_and(r800_ffff_tmp107, bytetest_8a_8d);
          struct_Mn.cc = simd_or(r800_ffff_tmp116, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b1 = simd_and(r800_ffff_tmp36, tmp11);
          r800_ffff_tmp117 = simd_and(r800_ffff_tmp3, tmp47);
          bytetest_95_96 = simd_and(r800_ffff_tmp117, tmp45);
          r800_ffff_tmp118 = simd_and(r800_ffff_tmp107, bytetest_95_96);
          struct_Mn.cc = simd_or(r800_ffff_tmp118, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b1 = simd_and(r800_ffff_tmp36, tmp11);
          bytetest_a2_a3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp49);
          r800_ffff_tmp119 = simd_and(r800_ffff_tmp107, bytetest_a2_a3);
          struct_Mn.cc = simd_or(r800_ffff_tmp119, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b2 = simd_and(r800_ffff_tmp36, tmp33);
          bytetest_bc_bc = simd_and(r800_ffff_tmp36, r800_ffff_tmp38);
          r800_ffff_tmp120 = simd_and(r800_ffff_tmp6, bytetest_b2);
          carryQ.cq[50] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp120, carryQ.get_carry_in(50), r800_ffff_tmp121));
          r800_ffff_tmp122 = simd_and(r800_ffff_tmp121, bytetest_bc_bc);
          struct_Mn.cc = simd_or(r800_ffff_tmp122, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b2 = simd_and(r800_ffff_tmp36, tmp33);
          bytetest_bf_bf = simd_and(r800_ffff_tmp36, tmp88);
          r800_ffff_tmp123 = simd_and(r800_ffff_tmp121, bytetest_bf_bf);
          struct_Mn.cc = simd_or(r800_ffff_tmp123, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b3 = simd_and(r800_ffff_tmp36, tmp122);
          bytetest_86_86 = simd_and(r800_ffff_tmp31, tmp66);
          r800_ffff_tmp124 = simd_and(r800_ffff_tmp6, bytetest_b3);
          carryQ.cq[51] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp124, carryQ.get_carry_in(51), r800_ffff_tmp125));
          r800_ffff_tmp126 = simd_and(r800_ffff_tmp125, bytetest_86_86);
          struct_Mn.cc = simd_or(r800_ffff_tmp126, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b3 = simd_and(r800_ffff_tmp36, tmp122);
          r800_ffff_tmp127 = simd_andc(tmp62, basis_bits.bit_6);
          bytetest_8c_8d = simd_and(r800_ffff_tmp31, r800_ffff_tmp127);
          r800_ffff_tmp128 = simd_and(r800_ffff_tmp125, bytetest_8c_8d);
          struct_Mn.cc = simd_or(r800_ffff_tmp128, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b3 = simd_and(r800_ffff_tmp36, tmp122);
          bytetest_a2_a3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp49);
          r800_ffff_tmp129 = simd_and(r800_ffff_tmp125, bytetest_a2_a3);
          struct_Mn.cc = simd_or(r800_ffff_tmp129, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b5 = simd_and(r800_ffff_tmp36, tmp95);
          bytetest_81_84 = simd_and(r800_ffff_tmp55, r800_ffff_tmp56);
          r800_ffff_tmp130 = simd_and(r800_ffff_tmp6, bytetest_b5);
          carryQ.cq[52] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp130, carryQ.get_carry_in(52), r800_ffff_tmp131));
          r800_ffff_tmp132 = simd_and(r800_ffff_tmp131, bytetest_81_84);
          struct_Mn.cc = simd_or(r800_ffff_tmp132, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b5 = simd_and(r800_ffff_tmp36, tmp95);
          bytetest_8d_8d = simd_and(r800_ffff_tmp31, tmp79);
          r800_ffff_tmp133 = simd_and(r800_ffff_tmp131, bytetest_8d_8d);
          struct_Mn.cc = simd_or(r800_ffff_tmp133, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b5 = simd_and(r800_ffff_tmp36, tmp95);
          bytetest_a2_a3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp49);
          r800_ffff_tmp134 = simd_and(r800_ffff_tmp131, bytetest_a2_a3);
          struct_Mn.cc = simd_or(r800_ffff_tmp134, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b7 = simd_and(r800_ffff_tmp36, tmp82);
          bytetest_8a_8a = simd_and(r800_ffff_tmp31, tmp74);
          r800_ffff_tmp135 = simd_and(r800_ffff_tmp6, bytetest_b7);
          carryQ.cq[53] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp135, carryQ.get_carry_in(53), r800_ffff_tmp136));
          r800_ffff_tmp137 = simd_and(r800_ffff_tmp136, bytetest_8a_8a);
          struct_Mn.cc = simd_or(r800_ffff_tmp137, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b7 = simd_and(r800_ffff_tmp36, tmp82);
          bytetest_92_94 = simd_and(r800_ffff_tmp47, tmp118);
          r800_ffff_tmp138 = simd_and(r800_ffff_tmp136, bytetest_92_94);
          struct_Mn.cc = simd_or(r800_ffff_tmp138, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b7 = simd_and(r800_ffff_tmp36, tmp82);
          bytetest_96_96 = simd_and(r800_ffff_tmp3, tmp66);
          r800_ffff_tmp139 = simd_and(r800_ffff_tmp136, bytetest_96_96);
          struct_Mn.cc = simd_or(r800_ffff_tmp139, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b8 = simd_and(r800_ffff_tmp36, r800_ffff_tmp62);
          bytetest_b1_b1 = simd_and(r800_ffff_tmp36, tmp11);
          r800_ffff_tmp140 = simd_and(r800_ffff_tmp6, bytetest_b8);
          carryQ.cq[54] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp140, carryQ.get_carry_in(54), r800_ffff_tmp141));
          r800_ffff_tmp142 = simd_and(r800_ffff_tmp141, bytetest_b1_b1);
          struct_Mn.cc = simd_or(r800_ffff_tmp142, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b8 = simd_and(r800_ffff_tmp36, r800_ffff_tmp62);
          r800_ffff_tmp143 = simd_not(tmp107);
          r800_ffff_tmp144 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp143), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
          bytetest_b4_ba = simd_and(r800_ffff_tmp36, r800_ffff_tmp144);
          r800_ffff_tmp145 = simd_and(r800_ffff_tmp141, bytetest_b4_ba);
          struct_Mn.cc = simd_or(r800_ffff_tmp145, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b9 = simd_and(r800_ffff_tmp36, tmp116);
          r800_ffff_tmp146 = simd_or(simd_and(basis_bits.bit_4, tmp70), simd_andc(tmp25, basis_bits.bit_4));
          bytetest_87_8e = simd_and(r800_ffff_tmp31, r800_ffff_tmp146);
          r800_ffff_tmp147 = simd_and(r800_ffff_tmp6, bytetest_b9);
          carryQ.cq[55] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp147, carryQ.get_carry_in(55), r800_ffff_tmp148));
          r800_ffff_tmp149 = simd_and(r800_ffff_tmp148, bytetest_87_8e);
          struct_Mn.cc = simd_or(r800_ffff_tmp149, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ba = simd_and(r800_ffff_tmp36, tmp74);
          bytetest_b1_b1 = simd_and(r800_ffff_tmp36, tmp11);
          r800_ffff_tmp150 = simd_and(r800_ffff_tmp6, bytetest_ba);
          carryQ.cq[56] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp150, carryQ.get_carry_in(56), r800_ffff_tmp151));
          r800_ffff_tmp152 = simd_and(r800_ffff_tmp151, bytetest_b1_b1);
          struct_Mn.cc = simd_or(r800_ffff_tmp152, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ba = simd_and(r800_ffff_tmp36, tmp74);
          r800_ffff_tmp153 = simd_or(simd_and(basis_bits.bit_4, tmp97), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
          bytetest_b4_b9 = simd_and(r800_ffff_tmp36, r800_ffff_tmp153);
          r800_ffff_tmp154 = simd_and(r800_ffff_tmp151, bytetest_b4_b9);
          struct_Mn.cc = simd_or(r800_ffff_tmp154, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ba = simd_and(r800_ffff_tmp36, tmp74);
          r800_ffff_tmp155 = simd_and(r800_ffff_tmp36, basis_bits.bit_4);
          r800_ffff_tmp156 = simd_or(simd_and(basis_bits.bit_5, tmp117), simd_andc(tmp24, basis_bits.bit_5));
          bytetest_bb_bc = simd_and(r800_ffff_tmp155, r800_ffff_tmp156);
          r800_ffff_tmp157 = simd_and(r800_ffff_tmp151, bytetest_bb_bc);
          struct_Mn.cc = simd_or(r800_ffff_tmp157, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bb = simd_and(r800_ffff_tmp36, tmp75);
          bytetest_88_8d = simd_andc(r800_ffff_tmp72, tmp71);
          r800_ffff_tmp158 = simd_and(r800_ffff_tmp6, bytetest_bb);
          carryQ.cq[57] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp158, carryQ.get_carry_in(57), r800_ffff_tmp159));
          r800_ffff_tmp160 = simd_and(r800_ffff_tmp159, bytetest_88_8d);
          struct_Mn.cc = simd_or(r800_ffff_tmp160, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bc = simd_and(r800_ffff_tmp36, r800_ffff_tmp38);
          r800_ffff_tmp161 = simd_andc(tmp42, basis_bits.bit_6);
          bytetest_98_99 = simd_and(r800_ffff_tmp3, r800_ffff_tmp161);
          r800_ffff_tmp162 = simd_and(r800_ffff_tmp6, bytetest_bc);
          carryQ.cq[58] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp162, carryQ.get_carry_in(58), r800_ffff_tmp163));
          r800_ffff_tmp164 = simd_and(r800_ffff_tmp163, bytetest_98_99);
          struct_Mn.cc = simd_or(r800_ffff_tmp164, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bc = simd_and(r800_ffff_tmp36, r800_ffff_tmp38);
          bytetest_b5_b5 = simd_and(r800_ffff_tmp36, tmp95);
          r800_ffff_tmp165 = simd_and(r800_ffff_tmp163, bytetest_b5_b5);
          struct_Mn.cc = simd_or(r800_ffff_tmp165, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bc = simd_and(r800_ffff_tmp36, r800_ffff_tmp38);
          bytetest_b7_b7 = simd_and(r800_ffff_tmp36, tmp82);
          r800_ffff_tmp166 = simd_and(r800_ffff_tmp163, bytetest_b7_b7);
          struct_Mn.cc = simd_or(r800_ffff_tmp166, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bc = simd_and(r800_ffff_tmp36, r800_ffff_tmp38);
          bytetest_b9_b9 = simd_and(r800_ffff_tmp36, tmp116);
          r800_ffff_tmp167 = simd_and(r800_ffff_tmp163, bytetest_b9_b9);
          struct_Mn.cc = simd_or(r800_ffff_tmp167, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bd = simd_and(r800_ffff_tmp36, tmp79);
          r800_ffff_tmp168 = simd_or(simd_and(basis_bits.bit_4, tmp70), simd_andc(r800_ffff_tmp40, basis_bits.bit_4));
          bytetest_b1_be = simd_and(r800_ffff_tmp36, r800_ffff_tmp168);
          r800_ffff_tmp169 = simd_and(r800_ffff_tmp6, bytetest_bd);
          carryQ.cq[59] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp169, carryQ.get_carry_in(59), r800_ffff_tmp170));
          r800_ffff_tmp171 = simd_and(r800_ffff_tmp170, bytetest_b1_be);
          struct_Mn.cc = simd_or(r800_ffff_tmp171, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_be = simd_and(r800_ffff_tmp36, tmp84);
          bytetest_80_84 = simd_andc(r800_ffff_tmp55, tmp59);
          r800_ffff_tmp172 = simd_and(r800_ffff_tmp6, bytetest_be);
          carryQ.cq[60] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp172, carryQ.get_carry_in(60), r800_ffff_tmp173));
          r800_ffff_tmp174 = simd_and(r800_ffff_tmp173, bytetest_80_84);
          struct_Mn.cc = simd_or(r800_ffff_tmp174, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_be = simd_and(r800_ffff_tmp36, tmp84);
          r800_ffff_tmp175 = simd_and(tmp47, basis_bits.bit_6);
          bytetest_86_87 = simd_and(r800_ffff_tmp31, r800_ffff_tmp175);
          r800_ffff_tmp176 = simd_and(r800_ffff_tmp173, bytetest_86_87);
          struct_Mn.cc = simd_or(r800_ffff_tmp176, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_be = simd_and(r800_ffff_tmp36, tmp84);
          r800_ffff_tmp177 = simd_andc(bytetest_80_bf, basis_bits.bit_2);
          r800_ffff_tmp178 = simd_not(basis_bits.bit_4);
          r800_ffff_tmp179 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp178), simd_andc(tmp63, basis_bits.bit_3));
          bytetest_8d_97 = simd_and(r800_ffff_tmp177, r800_ffff_tmp179);
          r800_ffff_tmp180 = simd_and(r800_ffff_tmp173, bytetest_8d_97);
          struct_Mn.cc = simd_or(r800_ffff_tmp180, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_be = simd_and(r800_ffff_tmp36, tmp84);
          r800_ffff_tmp181 = simd_and(basis_bits.bit_3, tmp63);
          r800_ffff_tmp182 = simd_not(r800_ffff_tmp181);
          r800_ffff_tmp183 = simd_and(basis_bits.bit_4, r800_ffff_tmp40);
          r800_ffff_tmp184 = simd_and(basis_bits.bit_3, r800_ffff_tmp183);
          r800_ffff_tmp185 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp182), simd_andc(r800_ffff_tmp184, basis_bits.bit_2));
          bytetest_99_bc = simd_and(bytetest_80_bf, r800_ffff_tmp185);
          r800_ffff_tmp186 = simd_and(r800_ffff_tmp173, bytetest_99_bc);
          struct_Mn.cc = simd_or(r800_ffff_tmp186, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bf = simd_and(r800_ffff_tmp36, tmp88);
          bytetest_86_86 = simd_and(r800_ffff_tmp31, tmp66);
          r800_ffff_tmp187 = simd_and(r800_ffff_tmp6, bytetest_bf);
          carryQ.cq[61] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp187, carryQ.get_carry_in(61), r800_ffff_tmp188));
          r800_ffff_tmp189 = simd_and(r800_ffff_tmp188, bytetest_86_86);
          struct_Mn.cc = simd_or(r800_ffff_tmp189, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_80 = simd_andc(r800_ffff_tmp31, tmp6);
          r800_ffff_tmp190 = simd_not(tmp6);
          r800_ffff_tmp191 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp190), simd_andc(tmp63, basis_bits.bit_3));
          bytetest_ad_b0 = simd_and(r800_ffff_tmp25, r800_ffff_tmp191);
          r800_ffff_tmp192 = simd_and(tmp15, bytetest_e1);
          carryQ.cq[62] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp192, carryQ.get_carry_in(62), r800_ffff_tmp193));
          r800_ffff_tmp194 = simd_and(r800_ffff_tmp193, bytetest_80);
          carryQ.cq[63] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp194, carryQ.get_carry_in(63), r800_ffff_tmp195));
          r800_ffff_tmp196 = simd_and(r800_ffff_tmp195, bytetest_ad_b0);
          struct_Mn.cc = simd_or(r800_ffff_tmp196, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_80 = simd_andc(r800_ffff_tmp31, tmp6);
          r800_ffff_tmp197 = simd_andc(r800_ffff_tmp36, basis_bits.bit_4);
          bytetest_b2_b7 = simd_and(r800_ffff_tmp197, tmp96);
          r800_ffff_tmp198 = simd_and(r800_ffff_tmp195, bytetest_b2_b7);
          struct_Mn.cc = simd_or(r800_ffff_tmp198, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_80 = simd_andc(r800_ffff_tmp31, tmp6);
          r800_ffff_tmp199 = simd_and(r800_ffff_tmp36, tmp42);
          bytetest_b9_ba = simd_and(r800_ffff_tmp199, tmp45);
          r800_ffff_tmp200 = simd_and(r800_ffff_tmp195, bytetest_b9_ba);
          struct_Mn.cc = simd_or(r800_ffff_tmp200, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_80 = simd_andc(r800_ffff_tmp31, tmp6);
          r800_ffff_tmp201 = simd_and(r800_ffff_tmp36, tmp62);
          bytetest_bd_be = simd_and(r800_ffff_tmp201, tmp45);
          r800_ffff_tmp202 = simd_and(r800_ffff_tmp195, bytetest_bd_be);
          struct_Mn.cc = simd_or(r800_ffff_tmp202, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_81 = simd_and(r800_ffff_tmp31, tmp11);
          bytetest_98_99 = simd_and(r800_ffff_tmp3, r800_ffff_tmp161);
          r800_ffff_tmp203 = simd_and(r800_ffff_tmp193, bytetest_81);
          carryQ.cq[64] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp203, carryQ.get_carry_in(64), r800_ffff_tmp204));
          r800_ffff_tmp205 = simd_and(r800_ffff_tmp204, bytetest_98_99);
          struct_Mn.cc = simd_or(r800_ffff_tmp205, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_81 = simd_and(r800_ffff_tmp31, tmp11);
          r800_ffff_tmp206 = simd_or(basis_bits.bit_3, tmp6);
          r800_ffff_tmp207 = simd_not(r800_ffff_tmp206);
          r800_ffff_tmp208 = simd_and(basis_bits.bit_3, r800_ffff_tmp109);
          r800_ffff_tmp209 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp207), simd_andc(r800_ffff_tmp208, basis_bits.bit_2));
          bytetest_9e_a0 = simd_and(bytetest_80_bf, r800_ffff_tmp209);
          r800_ffff_tmp210 = simd_and(r800_ffff_tmp204, bytetest_9e_a0);
          struct_Mn.cc = simd_or(r800_ffff_tmp210, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_81 = simd_and(r800_ffff_tmp31, tmp11);
          bytetest_b1_b4 = simd_and(r800_ffff_tmp197, r800_ffff_tmp56);
          r800_ffff_tmp211 = simd_and(r800_ffff_tmp204, bytetest_b1_b4);
          struct_Mn.cc = simd_or(r800_ffff_tmp211, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_82 = simd_and(r800_ffff_tmp31, tmp33);
          bytetest_82_82 = simd_and(r800_ffff_tmp31, tmp33);
          r800_ffff_tmp212 = simd_and(r800_ffff_tmp193, bytetest_82);
          carryQ.cq[65] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp212, carryQ.get_carry_in(65), r800_ffff_tmp213));
          r800_ffff_tmp214 = simd_and(r800_ffff_tmp213, bytetest_82_82);
          struct_Mn.cc = simd_or(r800_ffff_tmp214, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_82 = simd_and(r800_ffff_tmp31, tmp33);
          r800_ffff_tmp215 = simd_and(r800_ffff_tmp31, tmp47);
          bytetest_85_86 = simd_and(r800_ffff_tmp215, tmp45);
          r800_ffff_tmp216 = simd_and(r800_ffff_tmp213, bytetest_85_86);
          struct_Mn.cc = simd_or(r800_ffff_tmp216, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_82 = simd_and(r800_ffff_tmp31, tmp33);
          bytetest_8d_8d = simd_and(r800_ffff_tmp31, tmp79);
          r800_ffff_tmp217 = simd_and(r800_ffff_tmp213, bytetest_8d_8d);
          struct_Mn.cc = simd_or(r800_ffff_tmp217, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_82 = simd_and(r800_ffff_tmp31, tmp33);
          bytetest_9d_9d = simd_and(r800_ffff_tmp3, tmp79);
          r800_ffff_tmp218 = simd_and(r800_ffff_tmp213, bytetest_9d_9d);
          struct_Mn.cc = simd_or(r800_ffff_tmp218, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_8d = simd_and(r800_ffff_tmp31, tmp79);
          r800_ffff_tmp219 = simd_and(r800_ffff_tmp3, tmp62);
          bytetest_9d_9f = simd_and(r800_ffff_tmp219, tmp5);
          r800_ffff_tmp220 = simd_and(r800_ffff_tmp193, bytetest_8d);
          carryQ.cq[66] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp220, carryQ.get_carry_in(66), r800_ffff_tmp221));
          r800_ffff_tmp222 = simd_and(r800_ffff_tmp221, bytetest_9d_9f);
          struct_Mn.cc = simd_or(r800_ffff_tmp222, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9c = simd_and(r800_ffff_tmp3, r800_ffff_tmp38);
          bytetest_92_94 = simd_and(r800_ffff_tmp47, tmp118);
          r800_ffff_tmp223 = simd_and(r800_ffff_tmp193, bytetest_9c);
          carryQ.cq[67] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp223, carryQ.get_carry_in(67), r800_ffff_tmp224));
          r800_ffff_tmp225 = simd_and(r800_ffff_tmp224, bytetest_92_94);
          struct_Mn.cc = simd_or(r800_ffff_tmp225, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9c = simd_and(r800_ffff_tmp3, r800_ffff_tmp38);
          bytetest_b2_b4 = simd_and(r800_ffff_tmp197, tmp118);
          r800_ffff_tmp226 = simd_and(r800_ffff_tmp224, bytetest_b2_b4);
          struct_Mn.cc = simd_or(r800_ffff_tmp226, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9d = simd_and(r800_ffff_tmp3, tmp79);
          bytetest_92_93 = simd_and(r800_ffff_tmp3, r800_ffff_tmp49);
          r800_ffff_tmp227 = simd_and(r800_ffff_tmp193, bytetest_9d);
          carryQ.cq[68] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp227, carryQ.get_carry_in(68), r800_ffff_tmp228));
          r800_ffff_tmp229 = simd_and(r800_ffff_tmp228, bytetest_92_93);
          struct_Mn.cc = simd_or(r800_ffff_tmp229, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9d = simd_and(r800_ffff_tmp3, tmp79);
          bytetest_b2_b3 = simd_and(r800_ffff_tmp36, r800_ffff_tmp49);
          r800_ffff_tmp230 = simd_and(r800_ffff_tmp228, bytetest_b2_b3);
          struct_Mn.cc = simd_or(r800_ffff_tmp230, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9e = simd_and(r800_ffff_tmp3, tmp84);
          r800_ffff_tmp231 = simd_andc(tmp47, basis_bits.bit_6);
          bytetest_b4_b5 = simd_and(r800_ffff_tmp36, r800_ffff_tmp231);
          r800_ffff_tmp232 = simd_and(r800_ffff_tmp193, bytetest_9e);
          carryQ.cq[69] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp232, carryQ.get_carry_in(69), r800_ffff_tmp233));
          r800_ffff_tmp234 = simd_and(r800_ffff_tmp233, bytetest_b4_b5);
          struct_Mn.cc = simd_or(r800_ffff_tmp234, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9e = simd_and(r800_ffff_tmp3, tmp84);
          r800_ffff_tmp235 = simd_not(tmp71);
          r800_ffff_tmp236 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp235), simd_andc(tmp25, basis_bits.bit_4));
          bytetest_b7_bd = simd_and(r800_ffff_tmp36, r800_ffff_tmp236);
          r800_ffff_tmp237 = simd_and(r800_ffff_tmp233, bytetest_b7_bd);
          struct_Mn.cc = simd_or(r800_ffff_tmp237, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9f = simd_and(r800_ffff_tmp3, tmp88);
          bytetest_86_86 = simd_and(r800_ffff_tmp31, tmp66);
          r800_ffff_tmp238 = simd_and(r800_ffff_tmp193, bytetest_9f);
          carryQ.cq[70] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp238, carryQ.get_carry_in(70), r800_ffff_tmp239));
          r800_ffff_tmp240 = simd_and(r800_ffff_tmp239, bytetest_86_86);
          struct_Mn.cc = simd_or(r800_ffff_tmp240, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9f = simd_and(r800_ffff_tmp3, tmp88);
          r800_ffff_tmp241 = simd_not(tmp4);
          r800_ffff_tmp242 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp241), simd_andc(r800_ffff_tmp183, basis_bits.bit_3));
          bytetest_89_93 = simd_and(r800_ffff_tmp177, r800_ffff_tmp242);
          r800_ffff_tmp243 = simd_and(r800_ffff_tmp239, bytetest_89_93);
          struct_Mn.cc = simd_or(r800_ffff_tmp243, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9f = simd_and(r800_ffff_tmp3, tmp88);
          bytetest_9d_9d = simd_and(r800_ffff_tmp3, tmp79);
          r800_ffff_tmp244 = simd_and(r800_ffff_tmp239, bytetest_9d_9d);
          struct_Mn.cc = simd_or(r800_ffff_tmp244, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a0 = simd_andc(r800_ffff_tmp2, tmp6);
          bytetest_8b_8d = simd_and(r800_ffff_tmp72, r800_ffff_tmp73);
          r800_ffff_tmp245 = simd_and(r800_ffff_tmp193, bytetest_a0);
          carryQ.cq[71] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp245, carryQ.get_carry_in(71), r800_ffff_tmp246));
          r800_ffff_tmp247 = simd_and(r800_ffff_tmp246, bytetest_8b_8d);
          struct_Mn.cc = simd_or(r800_ffff_tmp247, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a2 = simd_and(r800_ffff_tmp2, tmp33);
          bytetest_a9_a9 = simd_and(r800_ffff_tmp2, tmp116);
          r800_ffff_tmp248 = simd_and(r800_ffff_tmp193, bytetest_a2);
          carryQ.cq[72] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp248, carryQ.get_carry_in(72), r800_ffff_tmp249));
          r800_ffff_tmp250 = simd_and(r800_ffff_tmp249, bytetest_a9_a9);
          struct_Mn.cc = simd_or(r800_ffff_tmp250, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a4 = simd_and(r800_ffff_tmp2, tmp48);
          r800_ffff_tmp251 = simd_andc(r800_ffff_tmp2, tmp4);
          bytetest_a0_a2 = simd_andc(r800_ffff_tmp251, tmp24);
          r800_ffff_tmp252 = simd_and(r800_ffff_tmp193, bytetest_a4);
          carryQ.cq[73] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp252, carryQ.get_carry_in(73), r800_ffff_tmp253));
          r800_ffff_tmp254 = simd_and(r800_ffff_tmp253, bytetest_a0_a2);
          struct_Mn.cc = simd_or(r800_ffff_tmp254, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a4 = simd_and(r800_ffff_tmp2, tmp48);
          bytetest_a7_a8 = simd_and(r800_ffff_tmp2, r800_ffff_tmp70);
          r800_ffff_tmp255 = simd_and(r800_ffff_tmp253, bytetest_a7_a8);
          struct_Mn.cc = simd_or(r800_ffff_tmp255, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a4 = simd_and(r800_ffff_tmp2, tmp48);
          bytetest_b2_b2 = simd_and(r800_ffff_tmp36, tmp33);
          r800_ffff_tmp256 = simd_and(r800_ffff_tmp253, bytetest_b2_b2);
          struct_Mn.cc = simd_or(r800_ffff_tmp256, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a4 = simd_and(r800_ffff_tmp2, tmp48);
          bytetest_b9_bb = simd_and(r800_ffff_tmp199, tmp5);
          r800_ffff_tmp257 = simd_and(r800_ffff_tmp253, bytetest_b9_bb);
          struct_Mn.cc = simd_or(r800_ffff_tmp257, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a8 = simd_and(r800_ffff_tmp2, r800_ffff_tmp62);
          bytetest_97_98 = simd_and(r800_ffff_tmp3, r800_ffff_tmp70);
          r800_ffff_tmp258 = simd_and(r800_ffff_tmp193, bytetest_a8);
          carryQ.cq[74] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp258, carryQ.get_carry_in(74), r800_ffff_tmp259));
          r800_ffff_tmp260 = simd_and(r800_ffff_tmp259, bytetest_97_98);
          struct_Mn.cc = simd_or(r800_ffff_tmp260, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a8 = simd_and(r800_ffff_tmp2, r800_ffff_tmp62);
          bytetest_9b_9b = simd_and(r800_ffff_tmp3, tmp75);
          r800_ffff_tmp261 = simd_and(r800_ffff_tmp259, bytetest_9b_9b);
          struct_Mn.cc = simd_or(r800_ffff_tmp261, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a9 = simd_and(r800_ffff_tmp2, tmp116);
          bytetest_96_96 = simd_and(r800_ffff_tmp3, tmp66);
          r800_ffff_tmp262 = simd_and(r800_ffff_tmp193, bytetest_a9);
          carryQ.cq[75] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp262, carryQ.get_carry_in(75), r800_ffff_tmp263));
          r800_ffff_tmp264 = simd_and(r800_ffff_tmp263, bytetest_96_96);
          struct_Mn.cc = simd_or(r800_ffff_tmp264, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a9 = simd_and(r800_ffff_tmp2, tmp116);
          r800_ffff_tmp265 = simd_and(r800_ffff_tmp3, basis_bits.bit_4);
          bytetest_98_9e = simd_andc(r800_ffff_tmp265, tmp25);
          r800_ffff_tmp266 = simd_and(r800_ffff_tmp263, bytetest_98_9e);
          struct_Mn.cc = simd_or(r800_ffff_tmp266, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a9 = simd_and(r800_ffff_tmp2, tmp116);
          bytetest_a0_a0 = simd_andc(r800_ffff_tmp2, tmp6);
          r800_ffff_tmp267 = simd_and(r800_ffff_tmp263, bytetest_a0_a0);
          struct_Mn.cc = simd_or(r800_ffff_tmp267, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a9 = simd_and(r800_ffff_tmp2, tmp116);
          bytetest_a2_a2 = simd_and(r800_ffff_tmp2, tmp33);
          r800_ffff_tmp268 = simd_and(r800_ffff_tmp263, bytetest_a2_a2);
          struct_Mn.cc = simd_or(r800_ffff_tmp268, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a9 = simd_and(r800_ffff_tmp2, tmp116);
          r800_ffff_tmp269 = simd_not(tmp59);
          r800_ffff_tmp270 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp269), simd_andc(tmp59, basis_bits.bit_4));
          bytetest_a5_ac = simd_and(r800_ffff_tmp2, r800_ffff_tmp270);
          r800_ffff_tmp271 = simd_and(r800_ffff_tmp263, bytetest_a5_ac);
          struct_Mn.cc = simd_or(r800_ffff_tmp271, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a9 = simd_and(r800_ffff_tmp2, tmp116);
          r800_ffff_tmp272 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp269), simd_andc(tmp107, basis_bits.bit_4));
          bytetest_b3_bc = simd_and(r800_ffff_tmp36, r800_ffff_tmp272);
          r800_ffff_tmp273 = simd_and(r800_ffff_tmp263, bytetest_b3_bc);
          struct_Mn.cc = simd_or(r800_ffff_tmp273, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a9 = simd_and(r800_ffff_tmp2, tmp116);
          bytetest_bf_bf = simd_and(r800_ffff_tmp36, tmp88);
          r800_ffff_tmp274 = simd_and(r800_ffff_tmp263, bytetest_bf_bf);
          struct_Mn.cc = simd_or(r800_ffff_tmp274, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_ac = simd_and(r800_ffff_tmp2, r800_ffff_tmp38);
          bytetest_80_83 = simd_andc(r800_ffff_tmp31, tmp4);
          r800_ffff_tmp275 = simd_and(r800_ffff_tmp193, bytetest_ac);
          carryQ.cq[76] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp275, carryQ.get_carry_in(76), r800_ffff_tmp276));
          r800_ffff_tmp277 = simd_and(r800_ffff_tmp276, bytetest_80_83);
          struct_Mn.cc = simd_or(r800_ffff_tmp277, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_ac = simd_and(r800_ffff_tmp2, r800_ffff_tmp38);
          bytetest_b4_b4 = simd_and(r800_ffff_tmp36, tmp48);
          r800_ffff_tmp278 = simd_and(r800_ffff_tmp276, bytetest_b4_b4);
          struct_Mn.cc = simd_or(r800_ffff_tmp278, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_ac = simd_and(r800_ffff_tmp2, r800_ffff_tmp38);
          r800_ffff_tmp279 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp143), simd_andc(tmp71, basis_bits.bit_4));
          bytetest_b6_ba = simd_and(r800_ffff_tmp36, r800_ffff_tmp279);
          r800_ffff_tmp280 = simd_and(r800_ffff_tmp276, bytetest_b6_ba);
          struct_Mn.cc = simd_or(r800_ffff_tmp280, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_ac = simd_and(r800_ffff_tmp2, r800_ffff_tmp38);
          bytetest_bc_bc = simd_and(r800_ffff_tmp36, r800_ffff_tmp38);
          r800_ffff_tmp281 = simd_and(r800_ffff_tmp276, bytetest_bc_bc);
          struct_Mn.cc = simd_or(r800_ffff_tmp281, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_ad = simd_and(r800_ffff_tmp2, tmp79);
          bytetest_82_82 = simd_and(r800_ffff_tmp31, tmp33);
          r800_ffff_tmp282 = simd_and(r800_ffff_tmp193, bytetest_ad);
          carryQ.cq[77] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp282, carryQ.get_carry_in(77), r800_ffff_tmp283));
          r800_ffff_tmp284 = simd_and(r800_ffff_tmp283, bytetest_82_82);
          struct_Mn.cc = simd_or(r800_ffff_tmp284, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_ad = simd_and(r800_ffff_tmp2, tmp79);
          r800_ffff_tmp285 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp241), simd_andc(r800_ffff_tmp12, basis_bits.bit_3));
          bytetest_ab_b3 = simd_and(r800_ffff_tmp25, r800_ffff_tmp285);
          r800_ffff_tmp286 = simd_and(r800_ffff_tmp283, bytetest_ab_b3);
          struct_Mn.cc = simd_or(r800_ffff_tmp286, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_ae = simd_and(r800_ffff_tmp2, tmp84);
          bytetest_80_81 = simd_andc(r800_ffff_tmp31, tmp34);
          r800_ffff_tmp287 = simd_and(r800_ffff_tmp193, bytetest_ae);
          carryQ.cq[78] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp287, carryQ.get_carry_in(78), r800_ffff_tmp288));
          r800_ffff_tmp289 = simd_and(r800_ffff_tmp288, bytetest_80_81);
          struct_Mn.cc = simd_or(r800_ffff_tmp289, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_ae = simd_and(r800_ffff_tmp2, tmp84);
          r800_ffff_tmp290 = simd_andc(r800_ffff_tmp2, basis_bits.bit_4);
          bytetest_a2_a5 = simd_and(r800_ffff_tmp290, tmp114);
          r800_ffff_tmp291 = simd_and(r800_ffff_tmp288, bytetest_a2_a5);
          struct_Mn.cc = simd_or(r800_ffff_tmp291, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_ae = simd_and(r800_ffff_tmp2, tmp84);
          bytetest_a8_a9 = simd_and(r800_ffff_tmp2, r800_ffff_tmp161);
          r800_ffff_tmp292 = simd_and(r800_ffff_tmp288, bytetest_a8_a9);
          struct_Mn.cc = simd_or(r800_ffff_tmp292, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_ae = simd_and(r800_ffff_tmp2, tmp84);
          bytetest_ab_ab = simd_and(r800_ffff_tmp2, tmp75);
          r800_ffff_tmp293 = simd_and(r800_ffff_tmp288, bytetest_ab_ab);
          struct_Mn.cc = simd_or(r800_ffff_tmp293, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_af = simd_and(r800_ffff_tmp2, tmp88);
          bytetest_a6_a6 = simd_and(r800_ffff_tmp2, tmp66);
          r800_ffff_tmp294 = simd_and(r800_ffff_tmp193, bytetest_af);
          carryQ.cq[79] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp294, carryQ.get_carry_in(79), r800_ffff_tmp295));
          r800_ffff_tmp296 = simd_and(r800_ffff_tmp295, bytetest_a6_a6);
          struct_Mn.cc = simd_or(r800_ffff_tmp296, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_af = simd_and(r800_ffff_tmp2, tmp88);
          bytetest_a8_a9 = simd_and(r800_ffff_tmp2, r800_ffff_tmp161);
          r800_ffff_tmp297 = simd_and(r800_ffff_tmp295, bytetest_a8_a9);
          struct_Mn.cc = simd_or(r800_ffff_tmp297, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_af = simd_and(r800_ffff_tmp2, tmp88);
          bytetest_ad_ad = simd_and(r800_ffff_tmp2, tmp79);
          r800_ffff_tmp298 = simd_and(r800_ffff_tmp295, bytetest_ad_ad);
          struct_Mn.cc = simd_or(r800_ffff_tmp298, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_af = simd_and(r800_ffff_tmp2, tmp88);
          r800_ffff_tmp299 = simd_not(tmp34);
          r800_ffff_tmp300 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp299), simd_andc(tmp88, basis_bits.bit_3));
          bytetest_af_b1 = simd_and(r800_ffff_tmp25, r800_ffff_tmp300);
          r800_ffff_tmp301 = simd_and(r800_ffff_tmp295, bytetest_af_b1);
          struct_Mn.cc = simd_or(r800_ffff_tmp301, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_b0 = simd_andc(r800_ffff_tmp36, tmp6);
          r800_ffff_tmp302 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp241), simd_andc(tmp62, basis_bits.bit_3));
          bytetest_ac_b3 = simd_and(r800_ffff_tmp25, r800_ffff_tmp302);
          r800_ffff_tmp303 = simd_and(r800_ffff_tmp193, bytetest_b0);
          carryQ.cq[80] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp303, carryQ.get_carry_in(80), r800_ffff_tmp304));
          r800_ffff_tmp305 = simd_and(r800_ffff_tmp304, bytetest_ac_b3);
          struct_Mn.cc = simd_or(r800_ffff_tmp305, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_b0 = simd_andc(r800_ffff_tmp36, tmp6);
          bytetest_b6_b7 = simd_and(r800_ffff_tmp36, r800_ffff_tmp175);
          r800_ffff_tmp306 = simd_and(r800_ffff_tmp304, bytetest_b6_b7);
          struct_Mn.cc = simd_or(r800_ffff_tmp306, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_b3 = simd_and(r800_ffff_tmp36, tmp122);
          r800_ffff_tmp307 = simd_andc(r800_ffff_tmp3, tmp4);
          bytetest_90_92 = simd_andc(r800_ffff_tmp307, tmp24);
          r800_ffff_tmp308 = simd_and(r800_ffff_tmp193, bytetest_b3);
          carryQ.cq[81] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp308, carryQ.get_carry_in(81), r800_ffff_tmp309));
          r800_ffff_tmp310 = simd_and(r800_ffff_tmp309, bytetest_90_92);
          struct_Mn.cc = simd_or(r800_ffff_tmp310, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_b3 = simd_and(r800_ffff_tmp36, tmp122);
          r800_ffff_tmp311 = simd_and(basis_bits.bit_3, tmp4);
          r800_ffff_tmp312 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp207), simd_andc(r800_ffff_tmp311, basis_bits.bit_2));
          bytetest_94_a0 = simd_and(bytetest_80_bf, r800_ffff_tmp312);
          r800_ffff_tmp313 = simd_and(r800_ffff_tmp309, bytetest_94_a0);
          struct_Mn.cc = simd_or(r800_ffff_tmp313, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_b3 = simd_and(r800_ffff_tmp36, tmp122);
          r800_ffff_tmp314 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp41), simd_andc(tmp96, basis_bits.bit_4));
          bytetest_a2_a8 = simd_and(r800_ffff_tmp2, r800_ffff_tmp314);
          r800_ffff_tmp315 = simd_and(r800_ffff_tmp309, bytetest_a2_a8);
          struct_Mn.cc = simd_or(r800_ffff_tmp315, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_b3 = simd_and(r800_ffff_tmp36, tmp122);
          bytetest_ad_ad = simd_and(r800_ffff_tmp2, tmp79);
          r800_ffff_tmp316 = simd_and(r800_ffff_tmp309, bytetest_ad_ad);
          struct_Mn.cc = simd_or(r800_ffff_tmp316, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_b3 = simd_and(r800_ffff_tmp36, tmp122);
          bytetest_b4_b4 = simd_and(r800_ffff_tmp36, tmp48);
          r800_ffff_tmp317 = simd_and(r800_ffff_tmp309, bytetest_b4_b4);
          struct_Mn.cc = simd_or(r800_ffff_tmp317, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_b7 = simd_and(r800_ffff_tmp36, tmp82);
          r800_ffff_tmp318 = simd_or(basis_bits.bit_4, tmp25);
          r800_ffff_tmp319 = simd_or(basis_bits.bit_3, r800_ffff_tmp318);
          r800_ffff_tmp320 = simd_and(basis_bits.bit_2, r800_ffff_tmp319);
          bytetest_80_a6 = simd_andc(bytetest_80_bf, r800_ffff_tmp320);
          r800_ffff_tmp321 = simd_and(r800_ffff_tmp193, bytetest_b7);
          carryQ.cq[82] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp321, carryQ.get_carry_in(82), r800_ffff_tmp322));
          r800_ffff_tmp323 = simd_and(r800_ffff_tmp322, bytetest_80_a6);
          struct_Mn.cc = simd_or(r800_ffff_tmp323, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_b7 = simd_and(r800_ffff_tmp36, tmp82);
          bytetest_bc_bf = simd_and(r800_ffff_tmp36, tmp62);
          r800_ffff_tmp324 = simd_and(r800_ffff_tmp322, bytetest_bc_bf);
          struct_Mn.cc = simd_or(r800_ffff_tmp324, struct_Mn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_83 = simd_and(r800_ffff_tmp31, tmp122);
          r800_ffff_tmp325 = simd_and(basis_bits.bit_4, tmp59);
          bytetest_90_9c = simd_andc(r800_ffff_tmp3, r800_ffff_tmp325);
          r800_ffff_tmp326 = simd_and(tmp15, bytetest_e2);
          carryQ.cq[83] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp326, carryQ.get_carry_in(83), r800_ffff_tmp327));
          r800_ffff_tmp328 = simd_and(r800_ffff_tmp327, bytetest_83);
          carryQ.cq[84] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp328, carryQ.get_carry_in(84), r800_ffff_tmp329));
          r800_ffff_tmp330 = simd_and(r800_ffff_tmp329, bytetest_90_9c);
          struct_Mn.cc = simd_or(r800_ffff_tmp330, struct_Mn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_83 = simd_and(r800_ffff_tmp31, tmp122);
          bytetest_a1_a1 = simd_and(r800_ffff_tmp2, tmp11);
          r800_ffff_tmp331 = simd_and(r800_ffff_tmp329, bytetest_a1_a1);
          struct_Mn.cc = simd_or(r800_ffff_tmp331, struct_Mn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_83 = simd_and(r800_ffff_tmp31, tmp122);
          r800_ffff_tmp332 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp190), simd_andc(tmp60, basis_bits.bit_3));
          bytetest_a5_b0 = simd_and(r800_ffff_tmp25, r800_ffff_tmp332);
          r800_ffff_tmp333 = simd_and(r800_ffff_tmp329, bytetest_a5_b0);
          struct_Mn.cc = simd_or(r800_ffff_tmp333, struct_Mn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b3 = simd_and(r800_ffff_tmp36, tmp122);
          bytetest_af_b1 = simd_and(r800_ffff_tmp25, r800_ffff_tmp300);
          r800_ffff_tmp334 = simd_and(r800_ffff_tmp327, bytetest_b3);
          carryQ.cq[85] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp334, carryQ.get_carry_in(85), r800_ffff_tmp335));
          r800_ffff_tmp336 = simd_and(r800_ffff_tmp335, bytetest_af_b1);
          struct_Mn.cc = simd_or(r800_ffff_tmp336, struct_Mn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b5 = simd_and(r800_ffff_tmp36, tmp95);
          bytetest_bf_bf = simd_and(r800_ffff_tmp36, tmp88);
          r800_ffff_tmp337 = simd_and(r800_ffff_tmp327, bytetest_b5);
          carryQ.cq[86] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp337, carryQ.get_carry_in(86), r800_ffff_tmp338));
          r800_ffff_tmp339 = simd_and(r800_ffff_tmp338, bytetest_bf_bf);
          struct_Mn.cc = simd_or(r800_ffff_tmp339, struct_Mn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b7 = simd_and(r800_ffff_tmp36, tmp82);
          bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
          r800_ffff_tmp340 = simd_and(r800_ffff_tmp327, bytetest_b7);
          carryQ.cq[87] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp340, carryQ.get_carry_in(87), r800_ffff_tmp341));
          r800_ffff_tmp342 = simd_and(r800_ffff_tmp341, bytetest_a0_bf);
          struct_Mn.cc = simd_or(r800_ffff_tmp342, struct_Mn.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp122);
          bytetest_80 = simd_andc(r800_ffff_tmp31, tmp6);
          bytetest_aa_ad = simd_and(r800_ffff_tmp18, tmp114);
          r800_ffff_tmp343 = simd_and(tmp15, bytetest_e3);
          carryQ.cq[88] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp343, carryQ.get_carry_in(88), r800_ffff_tmp344));
          r800_ffff_tmp345 = simd_and(r800_ffff_tmp344, bytetest_80);
          carryQ.cq[89] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp345, carryQ.get_carry_in(89), r800_ffff_tmp346));
          r800_ffff_tmp347 = simd_and(r800_ffff_tmp346, bytetest_aa_ad);
          struct_Mn.cc = simd_or(r800_ffff_tmp347, struct_Mn.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp122);
          bytetest_82 = simd_and(r800_ffff_tmp31, tmp33);
          bytetest_99_9a = simd_and(r800_ffff_tmp21, tmp45);
          r800_ffff_tmp348 = simd_and(r800_ffff_tmp344, bytetest_82);
          carryQ.cq[90] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp348, carryQ.get_carry_in(90), r800_ffff_tmp349));
          r800_ffff_tmp350 = simd_and(r800_ffff_tmp349, bytetest_99_9a);
          struct_Mn.cc = simd_or(r800_ffff_tmp350, struct_Mn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_99 = simd_and(r800_ffff_tmp3, tmp116);
          bytetest_af_af = simd_and(r800_ffff_tmp2, tmp88);
          r800_ffff_tmp351 = simd_and(tmp15, bytetest_ea);
          carryQ.cq[91] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp351, carryQ.get_carry_in(91), r800_ffff_tmp352));
          r800_ffff_tmp353 = simd_and(r800_ffff_tmp352, bytetest_99);
          carryQ.cq[92] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp353, carryQ.get_carry_in(92), r800_ffff_tmp354));
          r800_ffff_tmp355 = simd_and(r800_ffff_tmp354, bytetest_af_af);
          struct_Mn.cc = simd_or(r800_ffff_tmp355, struct_Mn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_99 = simd_and(r800_ffff_tmp3, tmp116);
          r800_ffff_tmp356 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp235), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
          bytetest_b4_bd = simd_and(r800_ffff_tmp36, r800_ffff_tmp356);
          r800_ffff_tmp357 = simd_and(r800_ffff_tmp354, bytetest_b4_bd);
          struct_Mn.cc = simd_or(r800_ffff_tmp357, struct_Mn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_9a = simd_and(r800_ffff_tmp3, tmp74);
          bytetest_9f_9f = simd_and(r800_ffff_tmp3, tmp88);
          r800_ffff_tmp358 = simd_and(r800_ffff_tmp352, bytetest_9a);
          carryQ.cq[93] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp358, carryQ.get_carry_in(93), r800_ffff_tmp359));
          r800_ffff_tmp360 = simd_and(r800_ffff_tmp359, bytetest_9f_9f);
          struct_Mn.cc = simd_or(r800_ffff_tmp360, struct_Mn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_9b = simd_and(r800_ffff_tmp3, tmp75);
          bytetest_b0_b1 = simd_andc(r800_ffff_tmp36, tmp34);
          r800_ffff_tmp361 = simd_and(r800_ffff_tmp352, bytetest_9b);
          carryQ.cq[94] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp361, carryQ.get_carry_in(94), r800_ffff_tmp362));
          r800_ffff_tmp363 = simd_and(r800_ffff_tmp362, bytetest_b0_b1);
          struct_Mn.cc = simd_or(r800_ffff_tmp363, struct_Mn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_a0 = simd_andc(r800_ffff_tmp2, tmp6);
          bytetest_82_82 = simd_and(r800_ffff_tmp31, tmp33);
          r800_ffff_tmp364 = simd_and(r800_ffff_tmp352, bytetest_a0);
          carryQ.cq[95] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp364, carryQ.get_carry_in(95), r800_ffff_tmp365));
          r800_ffff_tmp366 = simd_and(r800_ffff_tmp365, bytetest_82_82);
          struct_Mn.cc = simd_or(r800_ffff_tmp366, struct_Mn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_a0 = simd_andc(r800_ffff_tmp2, tmp6);
          bytetest_86_86 = simd_and(r800_ffff_tmp31, tmp66);
          r800_ffff_tmp367 = simd_and(r800_ffff_tmp365, bytetest_86_86);
          struct_Mn.cc = simd_or(r800_ffff_tmp367, struct_Mn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_a0 = simd_andc(r800_ffff_tmp2, tmp6);
          bytetest_8b_8b = simd_and(r800_ffff_tmp31, tmp75);
          r800_ffff_tmp368 = simd_and(r800_ffff_tmp365, bytetest_8b_8b);
          struct_Mn.cc = simd_or(r800_ffff_tmp368, struct_Mn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_a0 = simd_andc(r800_ffff_tmp2, tmp6);
          bytetest_a5_a6 = simd_and(r800_ffff_tmp16, tmp45);
          r800_ffff_tmp369 = simd_and(r800_ffff_tmp365, bytetest_a5_a6);
          struct_Mn.cc = simd_or(r800_ffff_tmp369, struct_Mn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_a3 = simd_and(r800_ffff_tmp2, tmp122);
          bytetest_84_84 = simd_and(r800_ffff_tmp31, tmp48);
          r800_ffff_tmp370 = simd_and(r800_ffff_tmp352, bytetest_a3);
          carryQ.cq[96] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp370, carryQ.get_carry_in(96), r800_ffff_tmp371));
          r800_ffff_tmp372 = simd_and(r800_ffff_tmp371, bytetest_84_84);
          struct_Mn.cc = simd_or(r800_ffff_tmp372, struct_Mn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_a3 = simd_and(r800_ffff_tmp2, tmp122);
          r800_ffff_tmp373 = simd_and(basis_bits.bit_3, tmp34);
          bytetest_a0_b1 = simd_andc(bytetest_a0_bf, r800_ffff_tmp373);
          r800_ffff_tmp374 = simd_and(r800_ffff_tmp371, bytetest_a0_b1);
          struct_Mn.cc = simd_or(r800_ffff_tmp374, struct_Mn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_a4 = simd_and(r800_ffff_tmp2, tmp48);
          r800_ffff_tmp375 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp235), simd_andc(tmp71, basis_bits.bit_4));
          bytetest_a6_ad = simd_and(r800_ffff_tmp2, r800_ffff_tmp375);
          r800_ffff_tmp376 = simd_and(r800_ffff_tmp352, bytetest_a4);
          carryQ.cq[97] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp376, carryQ.get_carry_in(97), r800_ffff_tmp377));
          r800_ffff_tmp378 = simd_and(r800_ffff_tmp377, bytetest_a6_ad);
          struct_Mn.cc = simd_or(r800_ffff_tmp378, struct_Mn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_a5 = simd_and(r800_ffff_tmp2, tmp95);
          r800_ffff_tmp379 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp299), simd_andc(r800_ffff_tmp318, basis_bits.bit_3));
          bytetest_87_91 = simd_and(r800_ffff_tmp177, r800_ffff_tmp379);
          r800_ffff_tmp380 = simd_and(r800_ffff_tmp352, bytetest_a5);
          carryQ.cq[98] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp380, carryQ.get_carry_in(98), r800_ffff_tmp381));
          r800_ffff_tmp382 = simd_and(r800_ffff_tmp381, bytetest_87_91);
          struct_Mn.cc = simd_or(r800_ffff_tmp382, struct_Mn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_a6 = simd_and(r800_ffff_tmp2, tmp66);
          bytetest_80_82 = simd_andc(bytetest_80_83, tmp24);
          r800_ffff_tmp383 = simd_and(r800_ffff_tmp352, bytetest_a6);
          carryQ.cq[99] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp383, carryQ.get_carry_in(99), r800_ffff_tmp384));
          r800_ffff_tmp385 = simd_and(r800_ffff_tmp384, bytetest_80_82);
          struct_Mn.cc = simd_or(r800_ffff_tmp385, struct_Mn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_a6 = simd_and(r800_ffff_tmp2, tmp66);
          bytetest_b3_b3 = simd_and(r800_ffff_tmp36, tmp122);
          r800_ffff_tmp386 = simd_and(r800_ffff_tmp384, bytetest_b3_b3);
          struct_Mn.cc = simd_or(r800_ffff_tmp386, struct_Mn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_a6 = simd_and(r800_ffff_tmp2, tmp66);
          bytetest_b6_b9 = simd_and(r800_ffff_tmp36, r800_ffff_tmp4);
          r800_ffff_tmp387 = simd_and(r800_ffff_tmp384, bytetest_b6_b9);
          struct_Mn.cc = simd_or(r800_ffff_tmp387, struct_Mn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_a6 = simd_and(r800_ffff_tmp2, tmp66);
          bytetest_bc_bc = simd_and(r800_ffff_tmp36, r800_ffff_tmp38);
          r800_ffff_tmp388 = simd_and(r800_ffff_tmp384, bytetest_bc_bc);
          struct_Mn.cc = simd_or(r800_ffff_tmp388, struct_Mn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_a8 = simd_and(r800_ffff_tmp2, r800_ffff_tmp62);
          r800_ffff_tmp389 = simd_or(simd_and(basis_bits.bit_5, tmp39), simd_andc(tmp5, basis_bits.bit_5));
          bytetest_a9_ae = simd_and(r800_ffff_tmp18, r800_ffff_tmp389);
          r800_ffff_tmp390 = simd_and(r800_ffff_tmp352, bytetest_a8);
          carryQ.cq[100] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp390, carryQ.get_carry_in(100), r800_ffff_tmp391));
          r800_ffff_tmp392 = simd_and(r800_ffff_tmp391, bytetest_a9_ae);
          struct_Mn.cc = simd_or(r800_ffff_tmp392, struct_Mn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_a8 = simd_and(r800_ffff_tmp2, r800_ffff_tmp62);
          r800_ffff_tmp393 = simd_andc(r800_ffff_tmp36, tmp4);
          bytetest_b1_b2 = simd_and(r800_ffff_tmp393, tmp45);
          r800_ffff_tmp394 = simd_and(r800_ffff_tmp391, bytetest_b1_b2);
          struct_Mn.cc = simd_or(r800_ffff_tmp394, struct_Mn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_a8 = simd_and(r800_ffff_tmp2, r800_ffff_tmp62);
          r800_ffff_tmp395 = simd_and(r800_ffff_tmp36, tmp47);
          bytetest_b5_b6 = simd_and(r800_ffff_tmp395, tmp45);
          r800_ffff_tmp396 = simd_and(r800_ffff_tmp391, bytetest_b5_b6);
          struct_Mn.cc = simd_or(r800_ffff_tmp396, struct_Mn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_a9 = simd_and(r800_ffff_tmp2, tmp116);
          bytetest_83_83 = simd_and(r800_ffff_tmp31, tmp122);
          r800_ffff_tmp397 = simd_and(r800_ffff_tmp352, bytetest_a9);
          carryQ.cq[101] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp397, carryQ.get_carry_in(101), r800_ffff_tmp398));
          r800_ffff_tmp399 = simd_and(r800_ffff_tmp398, bytetest_83_83);
          struct_Mn.cc = simd_or(r800_ffff_tmp399, struct_Mn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_a9 = simd_and(r800_ffff_tmp2, tmp116);
          bytetest_8c_8c = simd_and(r800_ffff_tmp31, r800_ffff_tmp38);
          r800_ffff_tmp400 = simd_and(r800_ffff_tmp398, bytetest_8c_8c);
          struct_Mn.cc = simd_or(r800_ffff_tmp400, struct_Mn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_aa = simd_and(r800_ffff_tmp2, tmp74);
          bytetest_b0_b0 = simd_andc(r800_ffff_tmp36, tmp6);
          r800_ffff_tmp401 = simd_and(r800_ffff_tmp352, bytetest_aa);
          carryQ.cq[102] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp401, carryQ.get_carry_in(102), r800_ffff_tmp402));
          r800_ffff_tmp403 = simd_and(r800_ffff_tmp402, bytetest_b0_b0);
          struct_Mn.cc = simd_or(r800_ffff_tmp403, struct_Mn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_aa = simd_and(r800_ffff_tmp2, tmp74);
          bytetest_b2_b4 = simd_and(r800_ffff_tmp197, tmp118);
          r800_ffff_tmp404 = simd_and(r800_ffff_tmp402, bytetest_b2_b4);
          struct_Mn.cc = simd_or(r800_ffff_tmp404, struct_Mn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_aa = simd_and(r800_ffff_tmp2, tmp74);
          bytetest_b7_b8 = simd_and(r800_ffff_tmp36, r800_ffff_tmp70);
          r800_ffff_tmp405 = simd_and(r800_ffff_tmp402, bytetest_b7_b8);
          struct_Mn.cc = simd_or(r800_ffff_tmp405, struct_Mn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_aa = simd_and(r800_ffff_tmp2, tmp74);
          bytetest_be_bf = simd_and(r800_ffff_tmp36, r800_ffff_tmp109);
          r800_ffff_tmp406 = simd_and(r800_ffff_tmp402, bytetest_be_bf);
          struct_Mn.cc = simd_or(r800_ffff_tmp406, struct_Mn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_ab = simd_and(r800_ffff_tmp2, tmp75);
          bytetest_81_81 = simd_and(r800_ffff_tmp31, tmp11);
          r800_ffff_tmp407 = simd_and(r800_ffff_tmp352, bytetest_ab);
          carryQ.cq[103] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp407, carryQ.get_carry_in(103), r800_ffff_tmp408));
          r800_ffff_tmp409 = simd_and(r800_ffff_tmp408, bytetest_81_81);
          struct_Mn.cc = simd_or(r800_ffff_tmp409, struct_Mn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_ab = simd_and(r800_ffff_tmp2, tmp75);
          bytetest_ac_ad = simd_and(r800_ffff_tmp2, r800_ffff_tmp127);
          r800_ffff_tmp410 = simd_and(r800_ffff_tmp408, bytetest_ac_ad);
          struct_Mn.cc = simd_or(r800_ffff_tmp410, struct_Mn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_ab = simd_and(r800_ffff_tmp2, tmp75);
          bytetest_b6_b6 = simd_and(r800_ffff_tmp36, tmp66);
          r800_ffff_tmp411 = simd_and(r800_ffff_tmp408, bytetest_b6_b6);
          struct_Mn.cc = simd_or(r800_ffff_tmp411, struct_Mn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_af = simd_and(r800_ffff_tmp2, tmp88);
          bytetest_a5_a5 = simd_and(r800_ffff_tmp2, tmp95);
          r800_ffff_tmp412 = simd_and(r800_ffff_tmp352, bytetest_af);
          carryQ.cq[104] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp412, carryQ.get_carry_in(104), r800_ffff_tmp413));
          r800_ffff_tmp414 = simd_and(r800_ffff_tmp413, bytetest_a5_a5);
          struct_Mn.cc = simd_or(r800_ffff_tmp414, struct_Mn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_af = simd_and(r800_ffff_tmp2, tmp88);
          bytetest_a8_a8 = simd_and(r800_ffff_tmp2, r800_ffff_tmp62);
          r800_ffff_tmp415 = simd_and(r800_ffff_tmp413, bytetest_a8_a8);
          struct_Mn.cc = simd_or(r800_ffff_tmp415, struct_Mn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_af = simd_and(r800_ffff_tmp2, tmp88);
          bytetest_ad_ad = simd_and(r800_ffff_tmp2, tmp79);
          r800_ffff_tmp416 = simd_and(r800_ffff_tmp413, bytetest_ad_ad);
          struct_Mn.cc = simd_or(r800_ffff_tmp416, struct_Mn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp88);
          bytetest_ac = simd_and(r800_ffff_tmp2, r800_ffff_tmp38);
          bytetest_9e_9e = simd_and(r800_ffff_tmp3, tmp84);
          r800_ffff_tmp417 = simd_and(tmp15, bytetest_ef);
          carryQ.cq[105] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp417, carryQ.get_carry_in(105), r800_ffff_tmp418));
          r800_ffff_tmp419 = simd_and(r800_ffff_tmp418, bytetest_ac);
          carryQ.cq[106] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp419, carryQ.get_carry_in(106), r800_ffff_tmp420));
          r800_ffff_tmp421 = simd_and(r800_ffff_tmp420, bytetest_9e_9e);
          struct_Mn.cc = simd_or(r800_ffff_tmp421, struct_Mn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp88);
          bytetest_b8 = simd_and(r800_ffff_tmp36, r800_ffff_tmp62);
          bytetest_80_8f = simd_andc(bytetest_80_bf, tmp12);
          r800_ffff_tmp422 = simd_and(r800_ffff_tmp418, bytetest_b8);
          carryQ.cq[107] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp422, carryQ.get_carry_in(107), r800_ffff_tmp423));
          r800_ffff_tmp424 = simd_and(r800_ffff_tmp423, bytetest_80_8f);
          struct_Mn.cc = simd_or(r800_ffff_tmp424, struct_Mn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp88);
          bytetest_b8 = simd_and(r800_ffff_tmp36, r800_ffff_tmp62);
          bytetest_a0_a6 = simd_andc(r800_ffff_tmp290, tmp25);
          r800_ffff_tmp425 = simd_and(r800_ffff_tmp423, bytetest_a0_a6);
          struct_Mn.cc = simd_or(r800_ffff_tmp425, struct_Mn.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(32, 76);
        }
        bytetest_f0 = simd_andc(tmp3, tmp6);
        tmp144 = simd_and(bytetest_80_bf, tmp8);
        bytetest_90 = simd_andc(tmp144, tmp6);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp145 = simd_and(tmp17, bytetest_90);
        carryQ.cq[108] = carryout2carry(pablo_blk_Advance(tmp145, carryQ.get_carry_in(108), tmp146));
        tmp147 = simd_and(tmp146, bytetest_80_bf);
        if ((bitblock::any(tmp147) || carryQ.CarryTest(109, 3))) {
          bytetest_f0 = simd_andc(tmp3, tmp6);
          r10000_10fff_tmp1 = simd_and(bytetest_80_bf, tmp8);
          bytetest_90 = simd_andc(r10000_10fff_tmp1, tmp6);
          r10000_10fff_tmp2 = simd_andc(bytetest_80_bf, tmp12);
          bytetest_87 = simd_and(r10000_10fff_tmp2, tmp82);
          r10000_10fff_tmp3 = simd_and(bytetest_80_bf, tmp2);
          bytetest_bd_bd = simd_and(r10000_10fff_tmp3, tmp79);
          r10000_10fff_tmp4 = simd_and(tmp17, bytetest_90);
          carryQ.cq[109] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp4, carryQ.get_carry_in(109), r10000_10fff_tmp5));
          r10000_10fff_tmp6 = simd_and(r10000_10fff_tmp5, bytetest_87);
          carryQ.cq[110] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp6, carryQ.get_carry_in(110), r10000_10fff_tmp7));
          r10000_10fff_tmp8 = simd_and(r10000_10fff_tmp7, bytetest_bd_bd);
          struct_Mn.cc = simd_or(r10000_10fff_tmp8, struct_Mn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(r10000_10fff_tmp1, tmp6);
          r10000_10fff_tmp9 = simd_and(bytetest_80_bf, tmp53);
          r10000_10fff_tmp10 = simd_andc(tmp42, tmp5);
          bytetest_a8 = simd_and(r10000_10fff_tmp9, r10000_10fff_tmp10);
          r10000_10fff_tmp11 = simd_andc(r10000_10fff_tmp2, tmp4);
          bytetest_81_83 = simd_and(r10000_10fff_tmp11, tmp5);
          r10000_10fff_tmp12 = simd_and(r10000_10fff_tmp5, bytetest_a8);
          carryQ.cq[111] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp12, carryQ.get_carry_in(111), r10000_10fff_tmp13));
          r10000_10fff_tmp14 = simd_and(r10000_10fff_tmp13, bytetest_81_83);
          struct_Mn.cc = simd_or(r10000_10fff_tmp14, struct_Mn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(r10000_10fff_tmp1, tmp6);
          bytetest_a8 = simd_and(r10000_10fff_tmp9, r10000_10fff_tmp10);
          r10000_10fff_tmp15 = simd_and(r10000_10fff_tmp2, tmp47);
          bytetest_85_86 = simd_and(r10000_10fff_tmp15, tmp45);
          r10000_10fff_tmp16 = simd_and(r10000_10fff_tmp13, bytetest_85_86);
          struct_Mn.cc = simd_or(r10000_10fff_tmp16, struct_Mn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(r10000_10fff_tmp1, tmp6);
          bytetest_a8 = simd_and(r10000_10fff_tmp9, r10000_10fff_tmp10);
          bytetest_8c_8f = simd_and(r10000_10fff_tmp2, tmp62);
          r10000_10fff_tmp17 = simd_and(r10000_10fff_tmp13, bytetest_8c_8f);
          struct_Mn.cc = simd_or(r10000_10fff_tmp17, struct_Mn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(r10000_10fff_tmp1, tmp6);
          bytetest_a8 = simd_and(r10000_10fff_tmp9, r10000_10fff_tmp10);
          r10000_10fff_tmp18 = simd_and(r10000_10fff_tmp3, tmp42);
          bytetest_b8_ba = simd_andc(r10000_10fff_tmp18, tmp24);
          r10000_10fff_tmp19 = simd_and(r10000_10fff_tmp13, bytetest_b8_ba);
          struct_Mn.cc = simd_or(r10000_10fff_tmp19, struct_Mn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(r10000_10fff_tmp1, tmp6);
          bytetest_a8 = simd_and(r10000_10fff_tmp9, r10000_10fff_tmp10);
          bytetest_bf_bf = simd_and(r10000_10fff_tmp3, tmp88);
          r10000_10fff_tmp20 = simd_and(r10000_10fff_tmp13, bytetest_bf_bf);
          struct_Mn.cc = simd_or(r10000_10fff_tmp20, struct_Mn.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(109, 3);
        }
        carryQ.CarryQ_Adjust(112);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Mn & struct_Mn, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_f0, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, bytetest_91, tmp12, tmp13, bytetest_80, bytetest_81_81;
		BitBlock tmp14, tmp15, tmp16, tmp17, tmp18, tmp19, tmp20, tmp21, tmp22;
		BitBlock bytetest_81, tmp23, tmp24, tmp25, bytetest_80_86, tmp26, tmp27, tmp28;
		BitBlock tmp29, bytetest_b8_bf, tmp30, tmp31, tmp32, tmp33, bytetest_82, tmp34;
		BitBlock bytetest_80_81, tmp35, tmp36, tmp37, tmp38, tmp39, tmp40;
		BitBlock bytetest_b3_b6, tmp41, tmp42, tmp43, tmp44, tmp45, bytetest_b9_ba;
		BitBlock tmp46, tmp47, tmp48, bytetest_84, tmp49, bytetest_80_82, tmp50, tmp51;
		BitBlock tmp52, tmp53, tmp54, tmp55, tmp56, bytetest_a7_ab, tmp57, tmp58;
		BitBlock tmp59, tmp60, tmp61, tmp62, tmp63, tmp64, bytetest_ad_b4, tmp65;
		BitBlock tmp66, bytetest_86, tmp67, tmp68, tmp69, tmp70, tmp71, tmp72;
		BitBlock bytetest_b6_be, tmp73, tmp74, bytetest_9a, tmp75, bytetest_ab_ab;
		BitBlock tmp76, tmp77, tmp78, tmp79, bytetest_ad_ad, tmp80, bytetest_b0_b5;
		BitBlock tmp81, tmp82, bytetest_b7_b7, tmp83, bytetest_96, tmp84, bytetest_be;
		BitBlock tmp85, tmp86, tmp87, tmp88, tmp89, bytetest_8f_92, tmp90, tmp91;
		BitBlock tmp92, tmp93, tmp94, bytetest_9d, tmp95, bytetest_85, tmp96, tmp97;
		BitBlock tmp98, bytetest_a7_a9, tmp99, tmp100, tmp101, tmp102, tmp103, tmp104;
		BitBlock tmp105, tmp106, tmp107, bytetest_bb_bf, tmp108, tmp109, tmp110;
		BitBlock bytetest_85_8b, tmp111, tmp112, tmp113, tmp114, bytetest_aa_ad;
		BitBlock tmp115, tmp116, bytetest_89, tmp117, tmp118, bytetest_82_84, tmp119;
		BitBlock tmp120, tmp121, tmp122, bytetest_f3, bytetest_a0, bytetest_87;
		BitBlock bytetest_80_af, tmp123, tmp124, tmp125, tmp126, tmp127, tmp128;
		BitBlock tmp129, tmp130, bytetest_84_86, bytetest_80_bf, tmp131, tmp132;
		BitBlock tmp133, tmp134, tmp135, tmp136, bytetest_c2_df, r80_7ff_tmp1;
		BitBlock bytetest_cd, r80_7ff_tmp2, r80_7ff_tmp3, r80_7ff_tmp4, r80_7ff_tmp5;
		BitBlock bytetest_cc, r80_7ff_tmp6, r80_7ff_tmp7, r80_7ff_tmp8, r80_7ff_tmp9;
		BitBlock r80_7ff_tmp10, bytetest_d2, r80_7ff_tmp11, r80_7ff_tmp12;
		BitBlock bytetest_83_87, r80_7ff_tmp13, r80_7ff_tmp14, r80_7ff_tmp15;
		BitBlock bytetest_d6, r80_7ff_tmp16, r80_7ff_tmp17, r80_7ff_tmp18;
		BitBlock r80_7ff_tmp19, r80_7ff_tmp20, bytetest_91_bd, r80_7ff_tmp21;
		BitBlock r80_7ff_tmp22, r80_7ff_tmp23, r80_7ff_tmp24, bytetest_bf_bf;
		BitBlock r80_7ff_tmp25, bytetest_d7, r80_7ff_tmp26, bytetest_81_82;
		BitBlock r80_7ff_tmp27, r80_7ff_tmp28, r80_7ff_tmp29, r80_7ff_tmp30;
		BitBlock bytetest_84_85, r80_7ff_tmp31, bytetest_87_87, r80_7ff_tmp32;
		BitBlock r80_7ff_tmp33, bytetest_d8, r80_7ff_tmp34, r80_7ff_tmp35;
		BitBlock bytetest_90_9a, r80_7ff_tmp36, r80_7ff_tmp37, r80_7ff_tmp38;
		BitBlock bytetest_d9, r80_7ff_tmp39, r80_7ff_tmp40, bytetest_8b_9f;
		BitBlock r80_7ff_tmp41, r80_7ff_tmp42, r80_7ff_tmp43, bytetest_b0_b0;
		BitBlock r80_7ff_tmp44, bytetest_db, r80_7ff_tmp45, r80_7ff_tmp46;
		BitBlock bytetest_96_9c, r80_7ff_tmp47, r80_7ff_tmp48, r80_7ff_tmp49;
		BitBlock r80_7ff_tmp50, r80_7ff_tmp51, r80_7ff_tmp52, r80_7ff_tmp53;
		BitBlock bytetest_9f_a4, r80_7ff_tmp54, r80_7ff_tmp55, r80_7ff_tmp56;
		BitBlock r80_7ff_tmp57, r80_7ff_tmp58, bytetest_a7_a8, r80_7ff_tmp59;
		BitBlock r80_7ff_tmp60, r80_7ff_tmp61, bytetest_dc, bytetest_91_91;
		BitBlock r80_7ff_tmp62, r80_7ff_tmp63, r80_7ff_tmp64, bytetest_dd;
		BitBlock bytetest_80_8a, r80_7ff_tmp65, r80_7ff_tmp66, r80_7ff_tmp67;
		BitBlock bytetest_b0_bf, r80_7ff_tmp68, r80_7ff_tmp69, bytetest_de;
		BitBlock r80_7ff_tmp70, r80_7ff_tmp71, r80_7ff_tmp72, r80_7ff_tmp73;
		BitBlock bytetest_a6_b0, r80_7ff_tmp74, r80_7ff_tmp75, r80_7ff_tmp76;
		BitBlock bytetest_df, r80_7ff_tmp77, r80_7ff_tmp78, bytetest_ab_b3;
		BitBlock r80_7ff_tmp79, r80_7ff_tmp80, r80_7ff_tmp81, tmp137, tmp138, tmp139;
		BitBlock bytetest_e1_ef, bytetest_e0, bytetest_a0_bf, tmp140, tmp141, tmp142;
		BitBlock tmp143, r800_ffff_tmp1, r800_ffff_tmp2, r800_ffff_tmp3;
		BitBlock r800_ffff_tmp4, bytetest_96_99, r800_ffff_tmp5, r800_ffff_tmp6;
		BitBlock r800_ffff_tmp7, r800_ffff_tmp8, r800_ffff_tmp9, r800_ffff_tmp10;
		BitBlock r800_ffff_tmp11, r800_ffff_tmp12, r800_ffff_tmp13, r800_ffff_tmp14;
		BitBlock bytetest_9b_a3, r800_ffff_tmp15, r800_ffff_tmp16, bytetest_a5_a7;
		BitBlock r800_ffff_tmp17, r800_ffff_tmp18, r800_ffff_tmp19, bytetest_a9_ad;
		BitBlock r800_ffff_tmp20, bytetest_a1, r800_ffff_tmp21, bytetest_99_9b;
		BitBlock r800_ffff_tmp22, r800_ffff_tmp23, r800_ffff_tmp24, bytetest_a3;
		BitBlock r800_ffff_tmp25, r800_ffff_tmp26, r800_ffff_tmp27, bytetest_a4_be;
		BitBlock r800_ffff_tmp28, r800_ffff_tmp29, r800_ffff_tmp30, bytetest_a4;
		BitBlock r800_ffff_tmp31, r800_ffff_tmp32, r800_ffff_tmp33, r800_ffff_tmp34;
		BitBlock r800_ffff_tmp35, r800_ffff_tmp36, bytetest_ba_ba, r800_ffff_tmp37;
		BitBlock r800_ffff_tmp38, bytetest_bc_bc, r800_ffff_tmp39, bytetest_a5;
		BitBlock r800_ffff_tmp40, r800_ffff_tmp41, r800_ffff_tmp42, bytetest_81_88;
		BitBlock r800_ffff_tmp43, r800_ffff_tmp44, r800_ffff_tmp45, bytetest_8d_8d;
		BitBlock r800_ffff_tmp46, r800_ffff_tmp47, bytetest_91_97, r800_ffff_tmp48;
		BitBlock r800_ffff_tmp49, bytetest_a2_a3, r800_ffff_tmp50, bytetest_a6;
		BitBlock r800_ffff_tmp51, r800_ffff_tmp52, r800_ffff_tmp53, r800_ffff_tmp54;
		BitBlock bytetest_a7, r800_ffff_tmp55, r800_ffff_tmp56, bytetest_81_84;
		BitBlock r800_ffff_tmp57, r800_ffff_tmp58, r800_ffff_tmp59, r800_ffff_tmp60;
		BitBlock r800_ffff_tmp61, r800_ffff_tmp62, bytetest_a8, r800_ffff_tmp63;
		BitBlock r800_ffff_tmp64, r800_ffff_tmp65, r800_ffff_tmp66, bytetest_a9;
		BitBlock r800_ffff_tmp67, r800_ffff_tmp68, r800_ffff_tmp69, r800_ffff_tmp70;
		BitBlock bytetest_87_88, r800_ffff_tmp71, r800_ffff_tmp72, r800_ffff_tmp73;
		BitBlock bytetest_8b_8d, r800_ffff_tmp74, r800_ffff_tmp75, bytetest_b0_b1;
		BitBlock r800_ffff_tmp76, bytetest_b5_b5, r800_ffff_tmp77, bytetest_aa;
		BitBlock r800_ffff_tmp78, r800_ffff_tmp79, r800_ffff_tmp80, r800_ffff_tmp81;
		BitBlock bytetest_ab, bytetest_81_85, r800_ffff_tmp82, r800_ffff_tmp83;
		BitBlock r800_ffff_tmp84, r800_ffff_tmp85, r800_ffff_tmp86, r800_ffff_tmp87;
		BitBlock bytetest_ac, r800_ffff_tmp88, r800_ffff_tmp89, r800_ffff_tmp90;
		BitBlock r800_ffff_tmp91, r800_ffff_tmp92, bytetest_ad, r800_ffff_tmp93;
		BitBlock r800_ffff_tmp94, r800_ffff_tmp95, r800_ffff_tmp96, bytetest_96_96;
		BitBlock r800_ffff_tmp97, r800_ffff_tmp98, bytetest_ae, bytetest_82_82;
		BitBlock r800_ffff_tmp99, r800_ffff_tmp100, r800_ffff_tmp101, bytetest_af;
		BitBlock bytetest_80_80, r800_ffff_tmp102, r800_ffff_tmp103, r800_ffff_tmp104;
		BitBlock r800_ffff_tmp105, bytetest_b1, r800_ffff_tmp106, r800_ffff_tmp107;
		BitBlock r800_ffff_tmp108, bytetest_b0, r800_ffff_tmp109, bytetest_be_bf;
		BitBlock r800_ffff_tmp110, r800_ffff_tmp111, r800_ffff_tmp112;
		BitBlock r800_ffff_tmp113, r800_ffff_tmp114, bytetest_86_88, r800_ffff_tmp115;
		BitBlock bytetest_8a_8d, r800_ffff_tmp116, r800_ffff_tmp117, bytetest_95_96;
		BitBlock r800_ffff_tmp118, r800_ffff_tmp119, bytetest_b2, r800_ffff_tmp120;
		BitBlock r800_ffff_tmp121, r800_ffff_tmp122, r800_ffff_tmp123, bytetest_b3;
		BitBlock bytetest_86_86, r800_ffff_tmp124, r800_ffff_tmp125, r800_ffff_tmp126;
		BitBlock r800_ffff_tmp127, bytetest_8c_8d, r800_ffff_tmp128, r800_ffff_tmp129;
		BitBlock bytetest_b5, r800_ffff_tmp130, r800_ffff_tmp131, r800_ffff_tmp132;
		BitBlock r800_ffff_tmp133, r800_ffff_tmp134, bytetest_b7, bytetest_8a_8a;
		BitBlock r800_ffff_tmp135, r800_ffff_tmp136, r800_ffff_tmp137, bytetest_92_94;
		BitBlock r800_ffff_tmp138, r800_ffff_tmp139, bytetest_b8, bytetest_b1_b1;
		BitBlock r800_ffff_tmp140, r800_ffff_tmp141, r800_ffff_tmp142;
		BitBlock r800_ffff_tmp143, r800_ffff_tmp144, bytetest_b4_ba, r800_ffff_tmp145;
		BitBlock bytetest_b9, r800_ffff_tmp146, bytetest_87_8e, r800_ffff_tmp147;
		BitBlock r800_ffff_tmp148, r800_ffff_tmp149, bytetest_ba, r800_ffff_tmp150;
		BitBlock r800_ffff_tmp151, r800_ffff_tmp152, r800_ffff_tmp153, bytetest_b4_b9;
		BitBlock r800_ffff_tmp154, r800_ffff_tmp155, r800_ffff_tmp156, bytetest_bb_bc;
		BitBlock r800_ffff_tmp157, bytetest_bb, bytetest_88_8d, r800_ffff_tmp158;
		BitBlock r800_ffff_tmp159, r800_ffff_tmp160, bytetest_bc, r800_ffff_tmp161;
		BitBlock bytetest_98_99, r800_ffff_tmp162, r800_ffff_tmp163, r800_ffff_tmp164;
		BitBlock r800_ffff_tmp165, r800_ffff_tmp166, bytetest_b9_b9, r800_ffff_tmp167;
		BitBlock bytetest_bd, r800_ffff_tmp168, bytetest_b1_be, r800_ffff_tmp169;
		BitBlock r800_ffff_tmp170, r800_ffff_tmp171, bytetest_80_84, r800_ffff_tmp172;
		BitBlock r800_ffff_tmp173, r800_ffff_tmp174, r800_ffff_tmp175, bytetest_86_87;
		BitBlock r800_ffff_tmp176, r800_ffff_tmp177, r800_ffff_tmp178;
		BitBlock r800_ffff_tmp179, bytetest_8d_97, r800_ffff_tmp180, r800_ffff_tmp181;
		BitBlock r800_ffff_tmp182, r800_ffff_tmp183, r800_ffff_tmp184;
		BitBlock r800_ffff_tmp185, bytetest_99_bc, r800_ffff_tmp186, bytetest_bf;
		BitBlock r800_ffff_tmp187, r800_ffff_tmp188, r800_ffff_tmp189, bytetest_e1;
		BitBlock r800_ffff_tmp190, r800_ffff_tmp191, bytetest_ad_b0, r800_ffff_tmp192;
		BitBlock r800_ffff_tmp193, r800_ffff_tmp194, r800_ffff_tmp195;
		BitBlock r800_ffff_tmp196, r800_ffff_tmp197, bytetest_b2_b7, r800_ffff_tmp198;
		BitBlock r800_ffff_tmp199, r800_ffff_tmp200, r800_ffff_tmp201, bytetest_bd_be;
		BitBlock r800_ffff_tmp202, r800_ffff_tmp203, r800_ffff_tmp204;
		BitBlock r800_ffff_tmp205, r800_ffff_tmp206, r800_ffff_tmp207;
		BitBlock r800_ffff_tmp208, r800_ffff_tmp209, bytetest_9e_a0, r800_ffff_tmp210;
		BitBlock bytetest_b1_b4, r800_ffff_tmp211, r800_ffff_tmp212, r800_ffff_tmp213;
		BitBlock r800_ffff_tmp214, r800_ffff_tmp215, bytetest_85_86, r800_ffff_tmp216;
		BitBlock r800_ffff_tmp217, bytetest_9d_9d, r800_ffff_tmp218, bytetest_8d;
		BitBlock r800_ffff_tmp219, bytetest_9d_9f, r800_ffff_tmp220, r800_ffff_tmp221;
		BitBlock r800_ffff_tmp222, bytetest_9c, r800_ffff_tmp223, r800_ffff_tmp224;
		BitBlock r800_ffff_tmp225, bytetest_b2_b4, r800_ffff_tmp226, bytetest_92_93;
		BitBlock r800_ffff_tmp227, r800_ffff_tmp228, r800_ffff_tmp229, bytetest_b2_b3;
		BitBlock r800_ffff_tmp230, bytetest_9e, r800_ffff_tmp231, bytetest_b4_b5;
		BitBlock r800_ffff_tmp232, r800_ffff_tmp233, r800_ffff_tmp234;
		BitBlock r800_ffff_tmp235, r800_ffff_tmp236, bytetest_b7_bd, r800_ffff_tmp237;
		BitBlock bytetest_9f, r800_ffff_tmp238, r800_ffff_tmp239, r800_ffff_tmp240;
		BitBlock r800_ffff_tmp241, r800_ffff_tmp242, bytetest_89_93, r800_ffff_tmp243;
		BitBlock r800_ffff_tmp244, r800_ffff_tmp245, r800_ffff_tmp246;
		BitBlock r800_ffff_tmp247, bytetest_a2, bytetest_a9_a9, r800_ffff_tmp248;
		BitBlock r800_ffff_tmp249, r800_ffff_tmp250, r800_ffff_tmp251, bytetest_a0_a2;
		BitBlock r800_ffff_tmp252, r800_ffff_tmp253, r800_ffff_tmp254;
		BitBlock r800_ffff_tmp255, bytetest_b2_b2, r800_ffff_tmp256, bytetest_b9_bb;
		BitBlock r800_ffff_tmp257, bytetest_97_98, r800_ffff_tmp258, r800_ffff_tmp259;
		BitBlock r800_ffff_tmp260, bytetest_9b_9b, r800_ffff_tmp261, r800_ffff_tmp262;
		BitBlock r800_ffff_tmp263, r800_ffff_tmp264, r800_ffff_tmp265, bytetest_98_9e;
		BitBlock r800_ffff_tmp266, bytetest_a0_a0, r800_ffff_tmp267, bytetest_a2_a2;
		BitBlock r800_ffff_tmp268, r800_ffff_tmp269, r800_ffff_tmp270, bytetest_a5_ac;
		BitBlock r800_ffff_tmp271, r800_ffff_tmp272, bytetest_b3_bc, r800_ffff_tmp273;
		BitBlock r800_ffff_tmp274, bytetest_80_83, r800_ffff_tmp275, r800_ffff_tmp276;
		BitBlock r800_ffff_tmp277, bytetest_b4_b4, r800_ffff_tmp278, r800_ffff_tmp279;
		BitBlock bytetest_b6_ba, r800_ffff_tmp280, r800_ffff_tmp281, r800_ffff_tmp282;
		BitBlock r800_ffff_tmp283, r800_ffff_tmp284, r800_ffff_tmp285;
		BitBlock r800_ffff_tmp286, r800_ffff_tmp287, r800_ffff_tmp288;
		BitBlock r800_ffff_tmp289, r800_ffff_tmp290, bytetest_a2_a5, r800_ffff_tmp291;
		BitBlock bytetest_a8_a9, r800_ffff_tmp292, r800_ffff_tmp293, bytetest_a6_a6;
		BitBlock r800_ffff_tmp294, r800_ffff_tmp295, r800_ffff_tmp296;
		BitBlock r800_ffff_tmp297, r800_ffff_tmp298, r800_ffff_tmp299;
		BitBlock r800_ffff_tmp300, bytetest_af_b1, r800_ffff_tmp301, r800_ffff_tmp302;
		BitBlock bytetest_ac_b3, r800_ffff_tmp303, r800_ffff_tmp304, r800_ffff_tmp305;
		BitBlock bytetest_b6_b7, r800_ffff_tmp306, r800_ffff_tmp307, bytetest_90_92;
		BitBlock r800_ffff_tmp308, r800_ffff_tmp309, r800_ffff_tmp310;
		BitBlock r800_ffff_tmp311, r800_ffff_tmp312, bytetest_94_a0, r800_ffff_tmp313;
		BitBlock r800_ffff_tmp314, bytetest_a2_a8, r800_ffff_tmp315, r800_ffff_tmp316;
		BitBlock r800_ffff_tmp317, r800_ffff_tmp318, r800_ffff_tmp319;
		BitBlock r800_ffff_tmp320, bytetest_80_a6, r800_ffff_tmp321, r800_ffff_tmp322;
		BitBlock r800_ffff_tmp323, bytetest_bc_bf, r800_ffff_tmp324, bytetest_e2;
		BitBlock bytetest_83, r800_ffff_tmp325, bytetest_90_9c, r800_ffff_tmp326;
		BitBlock r800_ffff_tmp327, r800_ffff_tmp328, r800_ffff_tmp329;
		BitBlock r800_ffff_tmp330, bytetest_a1_a1, r800_ffff_tmp331, r800_ffff_tmp332;
		BitBlock bytetest_a5_b0, r800_ffff_tmp333, r800_ffff_tmp334, r800_ffff_tmp335;
		BitBlock r800_ffff_tmp336, r800_ffff_tmp337, r800_ffff_tmp338;
		BitBlock r800_ffff_tmp339, r800_ffff_tmp340, r800_ffff_tmp341;
		BitBlock r800_ffff_tmp342, bytetest_e3, r800_ffff_tmp343, r800_ffff_tmp344;
		BitBlock r800_ffff_tmp345, r800_ffff_tmp346, r800_ffff_tmp347, bytetest_99_9a;
		BitBlock r800_ffff_tmp348, r800_ffff_tmp349, r800_ffff_tmp350, bytetest_ea;
		BitBlock bytetest_99, bytetest_af_af, r800_ffff_tmp351, r800_ffff_tmp352;
		BitBlock r800_ffff_tmp353, r800_ffff_tmp354, r800_ffff_tmp355;
		BitBlock r800_ffff_tmp356, bytetest_b4_bd, r800_ffff_tmp357, bytetest_9f_9f;
		BitBlock r800_ffff_tmp358, r800_ffff_tmp359, r800_ffff_tmp360, bytetest_9b;
		BitBlock r800_ffff_tmp361, r800_ffff_tmp362, r800_ffff_tmp363;
		BitBlock r800_ffff_tmp364, r800_ffff_tmp365, r800_ffff_tmp366;
		BitBlock r800_ffff_tmp367, bytetest_8b_8b, r800_ffff_tmp368, bytetest_a5_a6;
		BitBlock r800_ffff_tmp369, bytetest_84_84, r800_ffff_tmp370, r800_ffff_tmp371;
		BitBlock r800_ffff_tmp372, r800_ffff_tmp373, bytetest_a0_b1, r800_ffff_tmp374;
		BitBlock r800_ffff_tmp375, bytetest_a6_ad, r800_ffff_tmp376, r800_ffff_tmp377;
		BitBlock r800_ffff_tmp378, r800_ffff_tmp379, bytetest_87_91, r800_ffff_tmp380;
		BitBlock r800_ffff_tmp381, r800_ffff_tmp382, r800_ffff_tmp383;
		BitBlock r800_ffff_tmp384, r800_ffff_tmp385, bytetest_b3_b3, r800_ffff_tmp386;
		BitBlock bytetest_b6_b9, r800_ffff_tmp387, r800_ffff_tmp388, r800_ffff_tmp389;
		BitBlock bytetest_a9_ae, r800_ffff_tmp390, r800_ffff_tmp391, r800_ffff_tmp392;
		BitBlock r800_ffff_tmp393, bytetest_b1_b2, r800_ffff_tmp394, r800_ffff_tmp395;
		BitBlock bytetest_b5_b6, r800_ffff_tmp396, bytetest_83_83, r800_ffff_tmp397;
		BitBlock r800_ffff_tmp398, r800_ffff_tmp399, bytetest_8c_8c, r800_ffff_tmp400;
		BitBlock r800_ffff_tmp401, r800_ffff_tmp402, r800_ffff_tmp403;
		BitBlock r800_ffff_tmp404, bytetest_b7_b8, r800_ffff_tmp405, r800_ffff_tmp406;
		BitBlock r800_ffff_tmp407, r800_ffff_tmp408, r800_ffff_tmp409, bytetest_ac_ad;
		BitBlock r800_ffff_tmp410, bytetest_b6_b6, r800_ffff_tmp411, bytetest_a5_a5;
		BitBlock r800_ffff_tmp412, r800_ffff_tmp413, r800_ffff_tmp414, bytetest_a8_a8;
		BitBlock r800_ffff_tmp415, r800_ffff_tmp416, bytetest_ef, bytetest_9e_9e;
		BitBlock r800_ffff_tmp417, r800_ffff_tmp418, r800_ffff_tmp419;
		BitBlock r800_ffff_tmp420, r800_ffff_tmp421, bytetest_80_8f, r800_ffff_tmp422;
		BitBlock r800_ffff_tmp423, r800_ffff_tmp424, bytetest_a0_a6, r800_ffff_tmp425;
		BitBlock tmp144, bytetest_90, tmp145, tmp146, tmp147, r10000_10fff_tmp1;
		BitBlock r10000_10fff_tmp2, r10000_10fff_tmp3, bytetest_bd_bd;
		BitBlock r10000_10fff_tmp4, r10000_10fff_tmp5, r10000_10fff_tmp6;
		BitBlock r10000_10fff_tmp7, r10000_10fff_tmp8, r10000_10fff_tmp9;
		BitBlock r10000_10fff_tmp10, r10000_10fff_tmp11, bytetest_81_83;
		BitBlock r10000_10fff_tmp12, r10000_10fff_tmp13, r10000_10fff_tmp14;
		BitBlock r10000_10fff_tmp15, r10000_10fff_tmp16, bytetest_8c_8f;
		BitBlock r10000_10fff_tmp17, r10000_10fff_tmp18, bytetest_b8_ba;
		BitBlock r10000_10fff_tmp19, r10000_10fff_tmp20;




        struct_Mn.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_and(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_or(tmp4, tmp5);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp11 = simd_andc(tmp10, tmp4);
        bytetest_91 = simd_and(tmp9, tmp11);
        tmp12 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp13 = simd_andc(tmp7, tmp12);
        bytetest_80 = simd_andc(tmp13, tmp6);
        bytetest_81_81 = simd_and(tmp13, tmp11);
        tmp14 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp14, carryQ.get_carry_in(0), tmp15));
        tmp16 = simd_and(tmp15, bytetest_f0);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp16, carryQ.get_carry_in(1), tmp17));
        tmp18 = simd_and(tmp17, bytetest_91);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp18, carryQ.get_carry_in(2), tmp19));
        tmp20 = simd_and(tmp19, bytetest_80);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp20, carryQ.get_carry_in(3), tmp21));
        tmp22 = simd_and(tmp21, bytetest_81_81);
        struct_Mn.cc = simd_or(tmp22, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        bytetest_81 = simd_and(tmp13, tmp11);
        tmp23 = simd_andc(tmp13, basis_bits.bit_4);
        tmp24 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp25 = simd_and(basis_bits.bit_5, tmp24);
        bytetest_80_86 = simd_andc(tmp23, tmp25);
        tmp26 = simd_and(tmp19, bytetest_81);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp26, carryQ.get_carry_in(4), tmp27));
        tmp28 = simd_and(tmp27, bytetest_80_86);
        bytetest_80 = simd_andc(tmp13, tmp6);
        tmp29 = simd_and(tmp7, tmp2);
        bytetest_b8_bf = simd_and(tmp29, basis_bits.bit_4);
        tmp30 = simd_and(tmp21, bytetest_b8_bf);
        tmp31 = simd_or(tmp30, tmp28);
        struct_Mn.cc = simd_or(tmp31, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        tmp32 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp33 = simd_andc(tmp32, tmp4);
        bytetest_82 = simd_and(tmp13, tmp33);
        tmp34 = simd_or(tmp4, basis_bits.bit_6);
        bytetest_80_81 = simd_andc(tmp13, tmp34);
        tmp35 = simd_and(tmp19, bytetest_82);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp35, carryQ.get_carry_in(5), tmp36));
        tmp37 = simd_and(tmp36, bytetest_80_81);
        struct_Mn.cc = simd_or(tmp37, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        bytetest_82 = simd_and(tmp13, tmp33);
        tmp38 = simd_andc(tmp29, basis_bits.bit_4);
        tmp39 = simd_not(tmp24);
        tmp40 = simd_or(simd_and(basis_bits.bit_5, tmp39), simd_andc(tmp24, basis_bits.bit_5));
        bytetest_b3_b6 = simd_and(tmp38, tmp40);
        tmp41 = simd_and(tmp36, bytetest_b3_b6);
        struct_Mn.cc = simd_or(tmp41, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        bytetest_82 = simd_and(tmp13, tmp33);
        tmp42 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp43 = simd_and(tmp29, tmp42);
        tmp44 = simd_not(basis_bits.bit_7);
        tmp45 = simd_or(simd_and(basis_bits.bit_6, tmp44), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
        bytetest_b9_ba = simd_and(tmp43, tmp45);
        tmp46 = simd_and(tmp36, bytetest_b9_ba);
        struct_Mn.cc = simd_or(tmp46, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        tmp47 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp48 = simd_andc(tmp47, tmp5);
        bytetest_84 = simd_and(tmp13, tmp48);
        tmp49 = simd_andc(tmp13, tmp4);
        bytetest_80_82 = simd_andc(tmp49, tmp24);
        tmp50 = simd_and(tmp19, bytetest_84);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp50, carryQ.get_carry_in(6), tmp51));
        tmp52 = simd_and(tmp51, bytetest_80_82);
        struct_Mn.cc = simd_or(tmp52, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        bytetest_84 = simd_and(tmp13, tmp48);
        tmp53 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp54 = simd_and(tmp7, tmp53);
        tmp55 = simd_not(basis_bits.bit_5);
        tmp56 = simd_or(simd_and(basis_bits.bit_4, tmp55), simd_andc(tmp25, basis_bits.bit_4));
        bytetest_a7_ab = simd_and(tmp54, tmp56);
        tmp57 = simd_and(tmp51, bytetest_a7_ab);
        struct_Mn.cc = simd_or(tmp57, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        bytetest_84 = simd_and(tmp13, tmp48);
        tmp58 = simd_and(tmp7, basis_bits.bit_2);
        tmp59 = simd_and(basis_bits.bit_5, tmp5);
        tmp60 = simd_or(basis_bits.bit_4, tmp59);
        tmp61 = simd_not(tmp60);
        tmp62 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp63 = simd_and(tmp62, tmp5);
        tmp64 = simd_or(simd_and(basis_bits.bit_3, tmp61), simd_andc(tmp63, basis_bits.bit_3));
        bytetest_ad_b4 = simd_and(tmp58, tmp64);
        tmp65 = simd_and(tmp51, bytetest_ad_b4);
        struct_Mn.cc = simd_or(tmp65, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        tmp66 = simd_and(tmp47, tmp32);
        bytetest_86 = simd_and(tmp13, tmp66);
        bytetest_80_81 = simd_andc(tmp13, tmp34);
        tmp67 = simd_and(tmp19, bytetest_86);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp67, carryQ.get_carry_in(7), tmp68));
        tmp69 = simd_and(tmp68, bytetest_80_81);
        struct_Mn.cc = simd_or(tmp69, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        bytetest_86 = simd_and(tmp13, tmp66);
        tmp70 = simd_not(tmp25);
        tmp71 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp72 = simd_or(simd_and(basis_bits.bit_4, tmp70), simd_andc(tmp71, basis_bits.bit_4));
        bytetest_b6_be = simd_and(tmp29, tmp72);
        tmp73 = simd_and(tmp68, bytetest_b6_be);
        struct_Mn.cc = simd_or(tmp73, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        tmp74 = simd_and(tmp42, tmp32);
        bytetest_9a = simd_and(tmp9, tmp74);
        tmp75 = simd_and(tmp42, tmp24);
        bytetest_ab_ab = simd_and(tmp54, tmp75);
        tmp76 = simd_and(tmp19, bytetest_9a);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(tmp76, carryQ.get_carry_in(8), tmp77));
        tmp78 = simd_and(tmp77, bytetest_ab_ab);
        struct_Mn.cc = simd_or(tmp78, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        bytetest_9a = simd_and(tmp9, tmp74);
        tmp79 = simd_and(tmp62, tmp10);
        bytetest_ad_ad = simd_and(tmp54, tmp79);
        tmp80 = simd_and(tmp77, bytetest_ad_ad);
        struct_Mn.cc = simd_or(tmp80, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        bytetest_9a = simd_and(tmp9, tmp74);
        bytetest_b0_b5 = simd_andc(tmp38, tmp71);
        tmp81 = simd_and(tmp77, bytetest_b0_b5);
        struct_Mn.cc = simd_or(tmp81, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        bytetest_9a = simd_and(tmp9, tmp74);
        tmp82 = simd_and(tmp47, tmp24);
        bytetest_b7_b7 = simd_and(tmp29, tmp82);
        tmp83 = simd_and(tmp77, bytetest_b7_b7);
        struct_Mn.cc = simd_or(tmp83, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_96 = simd_and(tmp9, tmp66);
        tmp84 = simd_and(tmp62, tmp32);
        bytetest_be = simd_and(tmp29, tmp84);
        tmp85 = simd_andc(tmp7, basis_bits.bit_2);
        tmp86 = simd_or(tmp4, tmp24);
        tmp87 = simd_not(tmp86);
        tmp88 = simd_and(tmp62, tmp24);
        tmp89 = simd_or(simd_and(basis_bits.bit_3, tmp87), simd_andc(tmp88, basis_bits.bit_3));
        bytetest_8f_92 = simd_and(tmp85, tmp89);
        tmp90 = simd_and(tmp17, bytetest_96);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(tmp90, carryQ.get_carry_in(9), tmp91));
        tmp92 = simd_and(tmp91, bytetest_be);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(tmp92, carryQ.get_carry_in(10), tmp93));
        tmp94 = simd_and(tmp93, bytetest_8f_92);
        struct_Mn.cc = simd_or(tmp94, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp9, tmp79);
        tmp95 = simd_and(tmp47, tmp10);
        bytetest_85 = simd_and(tmp13, tmp95);
        tmp96 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
        tmp97 = simd_not(tmp96);
        tmp98 = simd_or(simd_and(basis_bits.bit_4, tmp97), simd_andc(tmp25, basis_bits.bit_4));
        bytetest_a7_a9 = simd_and(tmp54, tmp98);
        tmp99 = simd_and(tmp17, bytetest_9d);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(tmp99, carryQ.get_carry_in(11), tmp100));
        tmp101 = simd_and(tmp100, bytetest_85);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(tmp101, carryQ.get_carry_in(12), tmp102));
        tmp103 = simd_and(tmp102, bytetest_a7_a9);
        struct_Mn.cc = simd_or(tmp103, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp9, tmp79);
        bytetest_86 = simd_and(tmp13, tmp66);
        bytetest_80_82 = simd_andc(tmp49, tmp24);
        tmp104 = simd_and(tmp100, bytetest_86);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(tmp104, carryQ.get_carry_in(13), tmp105));
        tmp106 = simd_and(tmp105, bytetest_80_82);
        bytetest_85 = simd_and(tmp13, tmp95);
        tmp107 = simd_or(basis_bits.bit_5, tmp24);
        bytetest_bb_bf = simd_and(bytetest_b8_bf, tmp107);
        tmp108 = simd_and(tmp102, bytetest_bb_bf);
        tmp109 = simd_or(tmp108, tmp106);
        struct_Mn.cc = simd_or(tmp109, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp9, tmp79);
        bytetest_86 = simd_and(tmp13, tmp66);
        tmp110 = simd_or(simd_and(basis_bits.bit_4, tmp55), simd_andc(tmp59, basis_bits.bit_4));
        bytetest_85_8b = simd_and(tmp13, tmp110);
        tmp111 = simd_and(tmp105, bytetest_85_8b);
        struct_Mn.cc = simd_or(tmp111, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp9, tmp79);
        bytetest_86 = simd_and(tmp13, tmp66);
        tmp112 = simd_and(tmp54, basis_bits.bit_4);
        tmp113 = simd_not(basis_bits.bit_6);
        tmp114 = simd_or(simd_and(basis_bits.bit_5, tmp113), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        bytetest_aa_ad = simd_and(tmp112, tmp114);
        tmp115 = simd_and(tmp105, bytetest_aa_ad);
        struct_Mn.cc = simd_or(tmp115, struct_Mn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp9, tmp79);
        tmp116 = simd_and(tmp42, tmp10);
        bytetest_89 = simd_and(tmp13, tmp116);
        tmp117 = simd_not(tmp5);
        tmp118 = simd_or(simd_and(basis_bits.bit_5, tmp117), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        bytetest_82_84 = simd_and(tmp23, tmp118);
        tmp119 = simd_and(tmp100, bytetest_89);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(tmp119, carryQ.get_carry_in(14), tmp120));
        tmp121 = simd_and(tmp120, bytetest_82_84);
        struct_Mn.cc = simd_or(tmp121, struct_Mn.cc);
        tmp122 = simd_andc(tmp24, tmp4);
        bytetest_f3 = simd_and(tmp3, tmp122);
        bytetest_a0 = simd_andc(tmp54, tmp6);
        bytetest_87 = simd_and(tmp13, tmp82);
        bytetest_80_af = simd_andc(tmp7, tmp2);
        tmp123 = simd_and(tmp15, bytetest_f3);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(tmp123, carryQ.get_carry_in(15), tmp124));
        tmp125 = simd_and(tmp124, bytetest_a0);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(tmp125, carryQ.get_carry_in(16), tmp126));
        tmp127 = simd_and(tmp126, bytetest_87);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(tmp127, carryQ.get_carry_in(17), tmp128));
        tmp129 = simd_and(tmp128, bytetest_80_af);
        tmp130 = simd_and(tmp13, tmp47);
        bytetest_84_86 = simd_andc(tmp130, tmp24);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp131 = simd_and(tmp126, bytetest_84_86);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(tmp131, carryQ.get_carry_in(18), tmp132));
        tmp133 = simd_and(tmp132, bytetest_80_bf);
        tmp134 = simd_or(tmp133, tmp129);
        struct_Mn.cc = simd_or(tmp134, struct_Mn.cc);
        tmp135 = simd_andc(tmp1, basis_bits.bit_2);
        tmp136 = simd_or(basis_bits.bit_3, tmp34);
        bytetest_c2_df = simd_and(tmp135, tmp136);
        if ((bitblock::any(bytetest_c2_df) || carryQ.CarryTest(19, 12))) {
          r80_7ff_tmp1 = simd_andc(tmp1, tmp12);
          bytetest_cd = simd_and(r80_7ff_tmp1, tmp79);
          bytetest_80_af = simd_andc(bytetest_80_bf, tmp2);
          r80_7ff_tmp2 = simd_and(tmp15, bytetest_cd);
          carryQ.cq[19] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp2, carryQ.get_carry_in(19), r80_7ff_tmp3));
          r80_7ff_tmp4 = simd_and(r80_7ff_tmp3, bytetest_80_af);
          r80_7ff_tmp5 = simd_andc(tmp62, tmp5);
          bytetest_cc = simd_and(r80_7ff_tmp1, r80_7ff_tmp5);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r80_7ff_tmp6 = simd_and(tmp15, bytetest_cc);
          carryQ.cq[20] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp6, carryQ.get_carry_in(20), r80_7ff_tmp7));
          r80_7ff_tmp8 = simd_and(r80_7ff_tmp7, bytetest_80_bf);
          r80_7ff_tmp9 = simd_or(r80_7ff_tmp8, r80_7ff_tmp4);
          struct_Mn.cc = simd_or(r80_7ff_tmp9, struct_Mn.cc);
          r80_7ff_tmp10 = simd_and(tmp1, tmp8);
          bytetest_d2 = simd_and(r80_7ff_tmp10, tmp33);
          r80_7ff_tmp11 = simd_andc(bytetest_80_bf, tmp12);
          r80_7ff_tmp12 = simd_andc(r80_7ff_tmp11, basis_bits.bit_4);
          bytetest_83_87 = simd_and(r80_7ff_tmp12, tmp107);
          r80_7ff_tmp13 = simd_and(tmp15, bytetest_d2);
          carryQ.cq[21] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp13, carryQ.get_carry_in(21), r80_7ff_tmp14));
          r80_7ff_tmp15 = simd_and(r80_7ff_tmp14, bytetest_83_87);
          struct_Mn.cc = simd_or(r80_7ff_tmp15, struct_Mn.cc);
          bytetest_d6 = simd_and(r80_7ff_tmp10, tmp66);
          r80_7ff_tmp16 = simd_and(tmp62, basis_bits.bit_6);
          r80_7ff_tmp17 = simd_and(basis_bits.bit_3, r80_7ff_tmp16);
          r80_7ff_tmp18 = simd_not(r80_7ff_tmp17);
          r80_7ff_tmp19 = simd_and(basis_bits.bit_3, tmp6);
          r80_7ff_tmp20 = simd_or(simd_and(basis_bits.bit_2, r80_7ff_tmp18), simd_andc(r80_7ff_tmp19, basis_bits.bit_2));
          bytetest_91_bd = simd_and(bytetest_80_bf, r80_7ff_tmp20);
          r80_7ff_tmp21 = simd_and(tmp15, bytetest_d6);
          carryQ.cq[22] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp21, carryQ.get_carry_in(22), r80_7ff_tmp22));
          r80_7ff_tmp23 = simd_and(r80_7ff_tmp22, bytetest_91_bd);
          struct_Mn.cc = simd_or(r80_7ff_tmp23, struct_Mn.cc);
          bytetest_d6 = simd_and(r80_7ff_tmp10, tmp66);
          r80_7ff_tmp24 = simd_and(bytetest_80_bf, tmp2);
          bytetest_bf_bf = simd_and(r80_7ff_tmp24, tmp88);
          r80_7ff_tmp25 = simd_and(r80_7ff_tmp22, bytetest_bf_bf);
          struct_Mn.cc = simd_or(r80_7ff_tmp25, struct_Mn.cc);
          bytetest_d7 = simd_and(r80_7ff_tmp10, tmp82);
          r80_7ff_tmp26 = simd_andc(r80_7ff_tmp11, tmp4);
          bytetest_81_82 = simd_and(r80_7ff_tmp26, tmp45);
          r80_7ff_tmp27 = simd_and(tmp15, bytetest_d7);
          carryQ.cq[23] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp27, carryQ.get_carry_in(23), r80_7ff_tmp28));
          r80_7ff_tmp29 = simd_and(r80_7ff_tmp28, bytetest_81_82);
          struct_Mn.cc = simd_or(r80_7ff_tmp29, struct_Mn.cc);
          bytetest_d7 = simd_and(r80_7ff_tmp10, tmp82);
          r80_7ff_tmp30 = simd_andc(tmp47, basis_bits.bit_6);
          bytetest_84_85 = simd_and(r80_7ff_tmp11, r80_7ff_tmp30);
          r80_7ff_tmp31 = simd_and(r80_7ff_tmp28, bytetest_84_85);
          struct_Mn.cc = simd_or(r80_7ff_tmp31, struct_Mn.cc);
          bytetest_d7 = simd_and(r80_7ff_tmp10, tmp82);
          bytetest_87_87 = simd_and(r80_7ff_tmp11, tmp82);
          r80_7ff_tmp32 = simd_and(r80_7ff_tmp28, bytetest_87_87);
          struct_Mn.cc = simd_or(r80_7ff_tmp32, struct_Mn.cc);
          r80_7ff_tmp33 = simd_andc(tmp42, tmp5);
          bytetest_d8 = simd_and(r80_7ff_tmp10, r80_7ff_tmp33);
          r80_7ff_tmp34 = simd_and(bytetest_80_bf, tmp8);
          r80_7ff_tmp35 = simd_and(basis_bits.bit_4, tmp107);
          bytetest_90_9a = simd_andc(r80_7ff_tmp34, r80_7ff_tmp35);
          r80_7ff_tmp36 = simd_and(tmp15, bytetest_d8);
          carryQ.cq[24] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp36, carryQ.get_carry_in(24), r80_7ff_tmp37));
          r80_7ff_tmp38 = simd_and(r80_7ff_tmp37, bytetest_90_9a);
          struct_Mn.cc = simd_or(r80_7ff_tmp38, struct_Mn.cc);
          bytetest_d9 = simd_and(r80_7ff_tmp10, tmp116);
          r80_7ff_tmp39 = simd_andc(bytetest_80_bf, basis_bits.bit_2);
          r80_7ff_tmp40 = simd_or(basis_bits.bit_3, r80_7ff_tmp35);
          bytetest_8b_9f = simd_and(r80_7ff_tmp39, r80_7ff_tmp40);
          r80_7ff_tmp41 = simd_and(tmp15, bytetest_d9);
          carryQ.cq[25] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp41, carryQ.get_carry_in(25), r80_7ff_tmp42));
          r80_7ff_tmp43 = simd_and(r80_7ff_tmp42, bytetest_8b_9f);
          struct_Mn.cc = simd_or(r80_7ff_tmp43, struct_Mn.cc);
          bytetest_d9 = simd_and(r80_7ff_tmp10, tmp116);
          bytetest_b0_b0 = simd_andc(r80_7ff_tmp24, tmp6);
          r80_7ff_tmp44 = simd_and(r80_7ff_tmp42, bytetest_b0_b0);
          struct_Mn.cc = simd_or(r80_7ff_tmp44, struct_Mn.cc);
          bytetest_db = simd_and(r80_7ff_tmp10, tmp75);
          r80_7ff_tmp45 = simd_not(tmp59);
          r80_7ff_tmp46 = simd_or(simd_and(basis_bits.bit_4, r80_7ff_tmp45), simd_andc(tmp71, basis_bits.bit_4));
          bytetest_96_9c = simd_and(r80_7ff_tmp34, r80_7ff_tmp46);
          r80_7ff_tmp47 = simd_and(tmp15, bytetest_db);
          carryQ.cq[26] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp47, carryQ.get_carry_in(26), r80_7ff_tmp48));
          r80_7ff_tmp49 = simd_and(r80_7ff_tmp48, bytetest_96_9c);
          struct_Mn.cc = simd_or(r80_7ff_tmp49, struct_Mn.cc);
          bytetest_db = simd_and(r80_7ff_tmp10, tmp75);
          r80_7ff_tmp50 = simd_or(basis_bits.bit_3, tmp60);
          r80_7ff_tmp51 = simd_not(r80_7ff_tmp50);
          r80_7ff_tmp52 = simd_and(basis_bits.bit_3, tmp88);
          r80_7ff_tmp53 = simd_or(simd_and(basis_bits.bit_2, r80_7ff_tmp51), simd_andc(r80_7ff_tmp52, basis_bits.bit_2));
          bytetest_9f_a4 = simd_and(bytetest_80_bf, r80_7ff_tmp53);
          r80_7ff_tmp54 = simd_and(r80_7ff_tmp48, bytetest_9f_a4);
          struct_Mn.cc = simd_or(r80_7ff_tmp54, struct_Mn.cc);
          bytetest_db = simd_and(r80_7ff_tmp10, tmp75);
          r80_7ff_tmp55 = simd_and(bytetest_80_bf, tmp53);
          r80_7ff_tmp56 = simd_or(basis_bits.bit_5, tmp5);
          r80_7ff_tmp57 = simd_not(r80_7ff_tmp56);
          r80_7ff_tmp58 = simd_or(simd_and(basis_bits.bit_4, r80_7ff_tmp57), simd_andc(tmp25, basis_bits.bit_4));
          bytetest_a7_a8 = simd_and(r80_7ff_tmp55, r80_7ff_tmp58);
          r80_7ff_tmp59 = simd_and(r80_7ff_tmp48, bytetest_a7_a8);
          struct_Mn.cc = simd_or(r80_7ff_tmp59, struct_Mn.cc);
          bytetest_db = simd_and(r80_7ff_tmp10, tmp75);
          r80_7ff_tmp60 = simd_and(r80_7ff_tmp55, basis_bits.bit_4);
          bytetest_aa_ad = simd_and(r80_7ff_tmp60, tmp114);
          r80_7ff_tmp61 = simd_and(r80_7ff_tmp48, bytetest_aa_ad);
          struct_Mn.cc = simd_or(r80_7ff_tmp61, struct_Mn.cc);
          bytetest_dc = simd_and(r80_7ff_tmp10, r80_7ff_tmp5);
          bytetest_91_91 = simd_and(r80_7ff_tmp34, tmp11);
          r80_7ff_tmp62 = simd_and(tmp15, bytetest_dc);
          carryQ.cq[27] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp62, carryQ.get_carry_in(27), r80_7ff_tmp63));
          r80_7ff_tmp64 = simd_and(r80_7ff_tmp63, bytetest_91_91);
          struct_Mn.cc = simd_or(r80_7ff_tmp64, struct_Mn.cc);
          bytetest_dd = simd_and(r80_7ff_tmp10, tmp79);
          bytetest_80_8a = simd_andc(r80_7ff_tmp11, r80_7ff_tmp35);
          r80_7ff_tmp65 = simd_and(tmp15, bytetest_dd);
          carryQ.cq[28] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp65, carryQ.get_carry_in(28), r80_7ff_tmp66));
          r80_7ff_tmp67 = simd_and(r80_7ff_tmp66, bytetest_80_8a);
          bytetest_dc = simd_and(r80_7ff_tmp10, r80_7ff_tmp5);
          bytetest_b0_bf = simd_and(bytetest_80_bf, tmp2);
          r80_7ff_tmp68 = simd_and(r80_7ff_tmp63, bytetest_b0_bf);
          r80_7ff_tmp69 = simd_or(r80_7ff_tmp68, r80_7ff_tmp67);
          struct_Mn.cc = simd_or(r80_7ff_tmp69, struct_Mn.cc);
          bytetest_de = simd_and(r80_7ff_tmp10, tmp84);
          r80_7ff_tmp70 = simd_and(bytetest_80_bf, basis_bits.bit_2);
          r80_7ff_tmp71 = simd_not(tmp6);
          r80_7ff_tmp72 = simd_or(basis_bits.bit_4, tmp71);
          r80_7ff_tmp73 = simd_or(simd_and(basis_bits.bit_3, r80_7ff_tmp71), simd_andc(r80_7ff_tmp72, basis_bits.bit_3));
          bytetest_a6_b0 = simd_and(r80_7ff_tmp70, r80_7ff_tmp73);
          r80_7ff_tmp74 = simd_and(tmp15, bytetest_de);
          carryQ.cq[29] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp74, carryQ.get_carry_in(29), r80_7ff_tmp75));
          r80_7ff_tmp76 = simd_and(r80_7ff_tmp75, bytetest_a6_b0);
          struct_Mn.cc = simd_or(r80_7ff_tmp76, struct_Mn.cc);
          bytetest_df = simd_and(r80_7ff_tmp10, tmp88);
          r80_7ff_tmp77 = simd_not(tmp4);
          r80_7ff_tmp78 = simd_or(simd_and(basis_bits.bit_3, r80_7ff_tmp77), simd_andc(r80_7ff_tmp35, basis_bits.bit_3));
          bytetest_ab_b3 = simd_and(r80_7ff_tmp70, r80_7ff_tmp78);
          r80_7ff_tmp79 = simd_and(tmp15, bytetest_df);
          carryQ.cq[30] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp79, carryQ.get_carry_in(30), r80_7ff_tmp80));
          r80_7ff_tmp81 = simd_and(r80_7ff_tmp80, bytetest_ab_b3);
          struct_Mn.cc = simd_or(r80_7ff_tmp81, struct_Mn.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(19, 12);
        }
        tmp137 = simd_and(tmp1, tmp53);
        tmp138 = simd_or(basis_bits.bit_5, tmp5);
        tmp139 = simd_or(basis_bits.bit_4, tmp138);
        bytetest_e1_ef = simd_and(tmp137, tmp139);
        bytetest_e0 = simd_andc(tmp137, tmp6);
        bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp140 = simd_and(tmp15, bytetest_e0);
        carryQ.cq[31] = carryout2carry(pablo_blk_Advance(tmp140, carryQ.get_carry_in(31), tmp141));
        tmp142 = simd_and(tmp141, bytetest_a0_bf);
        tmp143 = simd_or(tmp142, bytetest_e1_ef);
        if ((bitblock::any(tmp143) || carryQ.CarryTest(32, 76))) {
          r800_ffff_tmp1 = simd_and(tmp1, tmp53);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          r800_ffff_tmp2 = simd_and(bytetest_80_bf, tmp53);
          bytetest_a0 = simd_andc(r800_ffff_tmp2, tmp6);
          r800_ffff_tmp3 = simd_and(bytetest_80_bf, tmp8);
          r800_ffff_tmp4 = simd_or(simd_and(basis_bits.bit_4, tmp97), simd_andc(tmp71, basis_bits.bit_4));
          bytetest_96_99 = simd_and(r800_ffff_tmp3, r800_ffff_tmp4);
          r800_ffff_tmp5 = simd_and(tmp15, bytetest_e0);
          carryQ.cq[32] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp5, carryQ.get_carry_in(32), r800_ffff_tmp6));
          r800_ffff_tmp7 = simd_and(r800_ffff_tmp6, bytetest_a0);
          carryQ.cq[33] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp7, carryQ.get_carry_in(33), r800_ffff_tmp8));
          r800_ffff_tmp9 = simd_and(r800_ffff_tmp8, bytetest_96_99);
          struct_Mn.cc = simd_or(r800_ffff_tmp9, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a0 = simd_andc(r800_ffff_tmp2, tmp6);
          r800_ffff_tmp10 = simd_or(basis_bits.bit_3, tmp4);
          r800_ffff_tmp11 = simd_not(r800_ffff_tmp10);
          r800_ffff_tmp12 = simd_and(basis_bits.bit_4, tmp107);
          r800_ffff_tmp13 = simd_and(basis_bits.bit_3, r800_ffff_tmp12);
          r800_ffff_tmp14 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp11), simd_andc(r800_ffff_tmp13, basis_bits.bit_2));
          bytetest_9b_a3 = simd_and(bytetest_80_bf, r800_ffff_tmp14);
          r800_ffff_tmp15 = simd_and(r800_ffff_tmp8, bytetest_9b_a3);
          struct_Mn.cc = simd_or(r800_ffff_tmp15, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a0 = simd_andc(r800_ffff_tmp2, tmp6);
          r800_ffff_tmp16 = simd_and(r800_ffff_tmp2, tmp47);
          bytetest_a5_a7 = simd_and(r800_ffff_tmp16, tmp5);
          r800_ffff_tmp17 = simd_and(r800_ffff_tmp8, bytetest_a5_a7);
          struct_Mn.cc = simd_or(r800_ffff_tmp17, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a0 = simd_andc(r800_ffff_tmp2, tmp6);
          r800_ffff_tmp18 = simd_and(r800_ffff_tmp2, basis_bits.bit_4);
          r800_ffff_tmp19 = simd_or(simd_and(basis_bits.bit_5, tmp113), simd_andc(tmp5, basis_bits.bit_5));
          bytetest_a9_ad = simd_and(r800_ffff_tmp18, r800_ffff_tmp19);
          r800_ffff_tmp20 = simd_and(r800_ffff_tmp8, bytetest_a9_ad);
          struct_Mn.cc = simd_or(r800_ffff_tmp20, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a1 = simd_and(r800_ffff_tmp2, tmp11);
          r800_ffff_tmp21 = simd_and(r800_ffff_tmp3, tmp42);
          bytetest_99_9b = simd_and(r800_ffff_tmp21, tmp5);
          r800_ffff_tmp22 = simd_and(r800_ffff_tmp6, bytetest_a1);
          carryQ.cq[34] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp22, carryQ.get_carry_in(34), r800_ffff_tmp23));
          r800_ffff_tmp24 = simd_and(r800_ffff_tmp23, bytetest_99_9b);
          struct_Mn.cc = simd_or(r800_ffff_tmp24, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a3 = simd_and(r800_ffff_tmp2, tmp122);
          r800_ffff_tmp25 = simd_and(bytetest_80_bf, basis_bits.bit_2);
          r800_ffff_tmp26 = simd_not(tmp88);
          r800_ffff_tmp27 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp26), simd_andc(tmp4, basis_bits.bit_3));
          bytetest_a4_be = simd_and(r800_ffff_tmp25, r800_ffff_tmp27);
          r800_ffff_tmp28 = simd_and(r800_ffff_tmp6, bytetest_a3);
          carryQ.cq[35] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp28, carryQ.get_carry_in(35), r800_ffff_tmp29));
          r800_ffff_tmp30 = simd_and(r800_ffff_tmp29, bytetest_a4_be);
          struct_Mn.cc = simd_or(r800_ffff_tmp30, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a4 = simd_and(r800_ffff_tmp2, tmp48);
          r800_ffff_tmp31 = simd_andc(bytetest_80_bf, tmp12);
          r800_ffff_tmp32 = simd_andc(r800_ffff_tmp31, tmp4);
          bytetest_80_82 = simd_andc(r800_ffff_tmp32, tmp24);
          r800_ffff_tmp33 = simd_and(r800_ffff_tmp6, bytetest_a4);
          carryQ.cq[36] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp33, carryQ.get_carry_in(36), r800_ffff_tmp34));
          r800_ffff_tmp35 = simd_and(r800_ffff_tmp34, bytetest_80_82);
          struct_Mn.cc = simd_or(r800_ffff_tmp35, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a4 = simd_and(r800_ffff_tmp2, tmp48);
          r800_ffff_tmp36 = simd_and(bytetest_80_bf, tmp2);
          bytetest_ba_ba = simd_and(r800_ffff_tmp36, tmp74);
          r800_ffff_tmp37 = simd_and(r800_ffff_tmp34, bytetest_ba_ba);
          struct_Mn.cc = simd_or(r800_ffff_tmp37, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a4 = simd_and(r800_ffff_tmp2, tmp48);
          r800_ffff_tmp38 = simd_andc(tmp62, tmp5);
          bytetest_bc_bc = simd_and(r800_ffff_tmp36, r800_ffff_tmp38);
          r800_ffff_tmp39 = simd_and(r800_ffff_tmp34, bytetest_bc_bc);
          struct_Mn.cc = simd_or(r800_ffff_tmp39, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a5 = simd_and(r800_ffff_tmp2, tmp95);
          r800_ffff_tmp40 = simd_or(basis_bits.bit_5, tmp5);
          r800_ffff_tmp41 = simd_not(r800_ffff_tmp40);
          r800_ffff_tmp42 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp41), simd_andc(r800_ffff_tmp40, basis_bits.bit_4));
          bytetest_81_88 = simd_and(r800_ffff_tmp31, r800_ffff_tmp42);
          r800_ffff_tmp43 = simd_and(r800_ffff_tmp6, bytetest_a5);
          carryQ.cq[37] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp43, carryQ.get_carry_in(37), r800_ffff_tmp44));
          r800_ffff_tmp45 = simd_and(r800_ffff_tmp44, bytetest_81_88);
          struct_Mn.cc = simd_or(r800_ffff_tmp45, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a5 = simd_and(r800_ffff_tmp2, tmp95);
          bytetest_8d_8d = simd_and(r800_ffff_tmp31, tmp79);
          r800_ffff_tmp46 = simd_and(r800_ffff_tmp44, bytetest_8d_8d);
          struct_Mn.cc = simd_or(r800_ffff_tmp46, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a5 = simd_and(r800_ffff_tmp2, tmp95);
          r800_ffff_tmp47 = simd_andc(r800_ffff_tmp3, basis_bits.bit_4);
          bytetest_91_97 = simd_and(r800_ffff_tmp47, r800_ffff_tmp40);
          r800_ffff_tmp48 = simd_and(r800_ffff_tmp44, bytetest_91_97);
          struct_Mn.cc = simd_or(r800_ffff_tmp48, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a5 = simd_and(r800_ffff_tmp2, tmp95);
          r800_ffff_tmp49 = simd_andc(basis_bits.bit_6, tmp4);
          bytetest_a2_a3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp49);
          r800_ffff_tmp50 = simd_and(r800_ffff_tmp44, bytetest_a2_a3);
          struct_Mn.cc = simd_or(r800_ffff_tmp50, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a6 = simd_and(r800_ffff_tmp2, tmp66);
          bytetest_81_81 = simd_and(r800_ffff_tmp31, tmp11);
          r800_ffff_tmp51 = simd_and(r800_ffff_tmp6, bytetest_a6);
          carryQ.cq[38] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp51, carryQ.get_carry_in(38), r800_ffff_tmp52));
          r800_ffff_tmp53 = simd_and(r800_ffff_tmp52, bytetest_81_81);
          struct_Mn.cc = simd_or(r800_ffff_tmp53, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a6 = simd_and(r800_ffff_tmp2, tmp66);
          bytetest_bc_bc = simd_and(r800_ffff_tmp36, r800_ffff_tmp38);
          r800_ffff_tmp54 = simd_and(r800_ffff_tmp52, bytetest_bc_bc);
          struct_Mn.cc = simd_or(r800_ffff_tmp54, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a7 = simd_and(r800_ffff_tmp2, tmp82);
          r800_ffff_tmp55 = simd_andc(r800_ffff_tmp31, basis_bits.bit_4);
          r800_ffff_tmp56 = simd_or(simd_and(basis_bits.bit_5, tmp117), simd_andc(tmp5, basis_bits.bit_5));
          bytetest_81_84 = simd_and(r800_ffff_tmp55, r800_ffff_tmp56);
          r800_ffff_tmp57 = simd_and(r800_ffff_tmp6, bytetest_a7);
          carryQ.cq[39] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp57, carryQ.get_carry_in(39), r800_ffff_tmp58));
          r800_ffff_tmp59 = simd_and(r800_ffff_tmp58, bytetest_81_84);
          struct_Mn.cc = simd_or(r800_ffff_tmp59, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a7 = simd_and(r800_ffff_tmp2, tmp82);
          bytetest_8d_8d = simd_and(r800_ffff_tmp31, tmp79);
          r800_ffff_tmp60 = simd_and(r800_ffff_tmp58, bytetest_8d_8d);
          struct_Mn.cc = simd_or(r800_ffff_tmp60, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a7 = simd_and(r800_ffff_tmp2, tmp82);
          bytetest_a2_a3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp49);
          r800_ffff_tmp61 = simd_and(r800_ffff_tmp58, bytetest_a2_a3);
          struct_Mn.cc = simd_or(r800_ffff_tmp61, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          r800_ffff_tmp62 = simd_andc(tmp42, tmp5);
          bytetest_a8 = simd_and(r800_ffff_tmp2, r800_ffff_tmp62);
          bytetest_81_82 = simd_and(r800_ffff_tmp32, tmp45);
          r800_ffff_tmp63 = simd_and(r800_ffff_tmp6, bytetest_a8);
          carryQ.cq[40] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp63, carryQ.get_carry_in(40), r800_ffff_tmp64));
          r800_ffff_tmp65 = simd_and(r800_ffff_tmp64, bytetest_81_82);
          struct_Mn.cc = simd_or(r800_ffff_tmp65, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a8 = simd_and(r800_ffff_tmp2, r800_ffff_tmp62);
          bytetest_bc_bc = simd_and(r800_ffff_tmp36, r800_ffff_tmp38);
          r800_ffff_tmp66 = simd_and(r800_ffff_tmp64, bytetest_bc_bc);
          struct_Mn.cc = simd_or(r800_ffff_tmp66, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a9 = simd_and(r800_ffff_tmp2, tmp116);
          bytetest_81_82 = simd_and(r800_ffff_tmp32, tmp45);
          r800_ffff_tmp67 = simd_and(r800_ffff_tmp6, bytetest_a9);
          carryQ.cq[41] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp67, carryQ.get_carry_in(41), r800_ffff_tmp68));
          r800_ffff_tmp69 = simd_and(r800_ffff_tmp68, bytetest_81_82);
          struct_Mn.cc = simd_or(r800_ffff_tmp69, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a9 = simd_and(r800_ffff_tmp2, tmp116);
          r800_ffff_tmp70 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp41), simd_andc(tmp25, basis_bits.bit_4));
          bytetest_87_88 = simd_and(r800_ffff_tmp31, r800_ffff_tmp70);
          r800_ffff_tmp71 = simd_and(r800_ffff_tmp68, bytetest_87_88);
          struct_Mn.cc = simd_or(r800_ffff_tmp71, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a9 = simd_and(r800_ffff_tmp2, tmp116);
          r800_ffff_tmp72 = simd_and(r800_ffff_tmp31, basis_bits.bit_4);
          r800_ffff_tmp73 = simd_or(simd_and(basis_bits.bit_5, tmp113), simd_andc(tmp24, basis_bits.bit_5));
          bytetest_8b_8d = simd_and(r800_ffff_tmp72, r800_ffff_tmp73);
          r800_ffff_tmp74 = simd_and(r800_ffff_tmp68, bytetest_8b_8d);
          struct_Mn.cc = simd_or(r800_ffff_tmp74, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a9 = simd_and(r800_ffff_tmp2, tmp116);
          bytetest_91_91 = simd_and(r800_ffff_tmp3, tmp11);
          r800_ffff_tmp75 = simd_and(r800_ffff_tmp68, bytetest_91_91);
          struct_Mn.cc = simd_or(r800_ffff_tmp75, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a9 = simd_and(r800_ffff_tmp2, tmp116);
          bytetest_b0_b1 = simd_andc(r800_ffff_tmp36, tmp34);
          r800_ffff_tmp76 = simd_and(r800_ffff_tmp68, bytetest_b0_b1);
          struct_Mn.cc = simd_or(r800_ffff_tmp76, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a9 = simd_and(r800_ffff_tmp2, tmp116);
          bytetest_b5_b5 = simd_and(r800_ffff_tmp36, tmp95);
          r800_ffff_tmp77 = simd_and(r800_ffff_tmp68, bytetest_b5_b5);
          struct_Mn.cc = simd_or(r800_ffff_tmp77, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_aa = simd_and(r800_ffff_tmp2, tmp74);
          bytetest_81_82 = simd_and(r800_ffff_tmp32, tmp45);
          r800_ffff_tmp78 = simd_and(r800_ffff_tmp6, bytetest_aa);
          carryQ.cq[42] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp78, carryQ.get_carry_in(42), r800_ffff_tmp79));
          r800_ffff_tmp80 = simd_and(r800_ffff_tmp79, bytetest_81_82);
          struct_Mn.cc = simd_or(r800_ffff_tmp80, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_aa = simd_and(r800_ffff_tmp2, tmp74);
          bytetest_bc_bc = simd_and(r800_ffff_tmp36, r800_ffff_tmp38);
          r800_ffff_tmp81 = simd_and(r800_ffff_tmp79, bytetest_bc_bc);
          struct_Mn.cc = simd_or(r800_ffff_tmp81, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ab = simd_and(r800_ffff_tmp2, tmp75);
          bytetest_81_85 = simd_and(r800_ffff_tmp55, r800_ffff_tmp19);
          r800_ffff_tmp82 = simd_and(r800_ffff_tmp6, bytetest_ab);
          carryQ.cq[43] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp82, carryQ.get_carry_in(43), r800_ffff_tmp83));
          r800_ffff_tmp84 = simd_and(r800_ffff_tmp83, bytetest_81_85);
          struct_Mn.cc = simd_or(r800_ffff_tmp84, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ab = simd_and(r800_ffff_tmp2, tmp75);
          bytetest_87_88 = simd_and(r800_ffff_tmp31, r800_ffff_tmp70);
          r800_ffff_tmp85 = simd_and(r800_ffff_tmp83, bytetest_87_88);
          struct_Mn.cc = simd_or(r800_ffff_tmp85, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ab = simd_and(r800_ffff_tmp2, tmp75);
          bytetest_8d_8d = simd_and(r800_ffff_tmp31, tmp79);
          r800_ffff_tmp86 = simd_and(r800_ffff_tmp83, bytetest_8d_8d);
          struct_Mn.cc = simd_or(r800_ffff_tmp86, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ab = simd_and(r800_ffff_tmp2, tmp75);
          bytetest_a2_a3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp49);
          r800_ffff_tmp87 = simd_and(r800_ffff_tmp83, bytetest_a2_a3);
          struct_Mn.cc = simd_or(r800_ffff_tmp87, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ac = simd_and(r800_ffff_tmp2, r800_ffff_tmp38);
          bytetest_81_81 = simd_and(r800_ffff_tmp31, tmp11);
          r800_ffff_tmp88 = simd_and(r800_ffff_tmp6, bytetest_ac);
          carryQ.cq[44] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp88, carryQ.get_carry_in(44), r800_ffff_tmp89));
          r800_ffff_tmp90 = simd_and(r800_ffff_tmp89, bytetest_81_81);
          struct_Mn.cc = simd_or(r800_ffff_tmp90, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ac = simd_and(r800_ffff_tmp2, r800_ffff_tmp38);
          bytetest_bc_bc = simd_and(r800_ffff_tmp36, r800_ffff_tmp38);
          r800_ffff_tmp91 = simd_and(r800_ffff_tmp89, bytetest_bc_bc);
          struct_Mn.cc = simd_or(r800_ffff_tmp91, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ac = simd_and(r800_ffff_tmp2, r800_ffff_tmp38);
          bytetest_bf_bf = simd_and(r800_ffff_tmp36, tmp88);
          r800_ffff_tmp92 = simd_and(r800_ffff_tmp89, bytetest_bf_bf);
          struct_Mn.cc = simd_or(r800_ffff_tmp92, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ad = simd_and(r800_ffff_tmp2, tmp79);
          bytetest_81_84 = simd_and(r800_ffff_tmp55, r800_ffff_tmp56);
          r800_ffff_tmp93 = simd_and(r800_ffff_tmp6, bytetest_ad);
          carryQ.cq[45] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp93, carryQ.get_carry_in(45), r800_ffff_tmp94));
          r800_ffff_tmp95 = simd_and(r800_ffff_tmp94, bytetest_81_84);
          struct_Mn.cc = simd_or(r800_ffff_tmp95, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ad = simd_and(r800_ffff_tmp2, tmp79);
          bytetest_8d_8d = simd_and(r800_ffff_tmp31, tmp79);
          r800_ffff_tmp96 = simd_and(r800_ffff_tmp94, bytetest_8d_8d);
          struct_Mn.cc = simd_or(r800_ffff_tmp96, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ad = simd_and(r800_ffff_tmp2, tmp79);
          bytetest_96_96 = simd_and(r800_ffff_tmp3, tmp66);
          r800_ffff_tmp97 = simd_and(r800_ffff_tmp94, bytetest_96_96);
          struct_Mn.cc = simd_or(r800_ffff_tmp97, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ad = simd_and(r800_ffff_tmp2, tmp79);
          bytetest_a2_a3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp49);
          r800_ffff_tmp98 = simd_and(r800_ffff_tmp94, bytetest_a2_a3);
          struct_Mn.cc = simd_or(r800_ffff_tmp98, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ae = simd_and(r800_ffff_tmp2, tmp84);
          bytetest_82_82 = simd_and(r800_ffff_tmp31, tmp33);
          r800_ffff_tmp99 = simd_and(r800_ffff_tmp6, bytetest_ae);
          carryQ.cq[46] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp99, carryQ.get_carry_in(46), r800_ffff_tmp100));
          r800_ffff_tmp101 = simd_and(r800_ffff_tmp100, bytetest_82_82);
          struct_Mn.cc = simd_or(r800_ffff_tmp101, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_af = simd_and(r800_ffff_tmp2, tmp88);
          bytetest_80_80 = simd_andc(r800_ffff_tmp31, tmp6);
          r800_ffff_tmp102 = simd_and(r800_ffff_tmp6, bytetest_af);
          carryQ.cq[47] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp102, carryQ.get_carry_in(47), r800_ffff_tmp103));
          r800_ffff_tmp104 = simd_and(r800_ffff_tmp103, bytetest_80_80);
          struct_Mn.cc = simd_or(r800_ffff_tmp104, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_af = simd_and(r800_ffff_tmp2, tmp88);
          bytetest_8d_8d = simd_and(r800_ffff_tmp31, tmp79);
          r800_ffff_tmp105 = simd_and(r800_ffff_tmp103, bytetest_8d_8d);
          struct_Mn.cc = simd_or(r800_ffff_tmp105, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b1 = simd_and(r800_ffff_tmp36, tmp11);
          bytetest_80_80 = simd_andc(r800_ffff_tmp31, tmp6);
          r800_ffff_tmp106 = simd_and(r800_ffff_tmp6, bytetest_b1);
          carryQ.cq[48] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp106, carryQ.get_carry_in(48), r800_ffff_tmp107));
          r800_ffff_tmp108 = simd_and(r800_ffff_tmp107, bytetest_80_80);
          bytetest_b0 = simd_andc(r800_ffff_tmp36, tmp6);
          r800_ffff_tmp109 = simd_and(tmp62, basis_bits.bit_6);
          bytetest_be_bf = simd_and(r800_ffff_tmp36, r800_ffff_tmp109);
          r800_ffff_tmp110 = simd_and(r800_ffff_tmp6, bytetest_b0);
          carryQ.cq[49] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp110, carryQ.get_carry_in(49), r800_ffff_tmp111));
          r800_ffff_tmp112 = simd_and(r800_ffff_tmp111, bytetest_be_bf);
          r800_ffff_tmp113 = simd_or(r800_ffff_tmp112, r800_ffff_tmp108);
          struct_Mn.cc = simd_or(r800_ffff_tmp113, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b1 = simd_and(r800_ffff_tmp36, tmp11);
          r800_ffff_tmp114 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp41), simd_andc(tmp71, basis_bits.bit_4));
          bytetest_86_88 = simd_and(r800_ffff_tmp31, r800_ffff_tmp114);
          r800_ffff_tmp115 = simd_and(r800_ffff_tmp107, bytetest_86_88);
          struct_Mn.cc = simd_or(r800_ffff_tmp115, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b1 = simd_and(r800_ffff_tmp36, tmp11);
          bytetest_8a_8d = simd_and(r800_ffff_tmp72, tmp114);
          r800_ffff_tmp116 = simd_and(r800_ffff_tmp107, bytetest_8a_8d);
          struct_Mn.cc = simd_or(r800_ffff_tmp116, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b1 = simd_and(r800_ffff_tmp36, tmp11);
          r800_ffff_tmp117 = simd_and(r800_ffff_tmp3, tmp47);
          bytetest_95_96 = simd_and(r800_ffff_tmp117, tmp45);
          r800_ffff_tmp118 = simd_and(r800_ffff_tmp107, bytetest_95_96);
          struct_Mn.cc = simd_or(r800_ffff_tmp118, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b1 = simd_and(r800_ffff_tmp36, tmp11);
          bytetest_a2_a3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp49);
          r800_ffff_tmp119 = simd_and(r800_ffff_tmp107, bytetest_a2_a3);
          struct_Mn.cc = simd_or(r800_ffff_tmp119, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b2 = simd_and(r800_ffff_tmp36, tmp33);
          bytetest_bc_bc = simd_and(r800_ffff_tmp36, r800_ffff_tmp38);
          r800_ffff_tmp120 = simd_and(r800_ffff_tmp6, bytetest_b2);
          carryQ.cq[50] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp120, carryQ.get_carry_in(50), r800_ffff_tmp121));
          r800_ffff_tmp122 = simd_and(r800_ffff_tmp121, bytetest_bc_bc);
          struct_Mn.cc = simd_or(r800_ffff_tmp122, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b2 = simd_and(r800_ffff_tmp36, tmp33);
          bytetest_bf_bf = simd_and(r800_ffff_tmp36, tmp88);
          r800_ffff_tmp123 = simd_and(r800_ffff_tmp121, bytetest_bf_bf);
          struct_Mn.cc = simd_or(r800_ffff_tmp123, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b3 = simd_and(r800_ffff_tmp36, tmp122);
          bytetest_86_86 = simd_and(r800_ffff_tmp31, tmp66);
          r800_ffff_tmp124 = simd_and(r800_ffff_tmp6, bytetest_b3);
          carryQ.cq[51] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp124, carryQ.get_carry_in(51), r800_ffff_tmp125));
          r800_ffff_tmp126 = simd_and(r800_ffff_tmp125, bytetest_86_86);
          struct_Mn.cc = simd_or(r800_ffff_tmp126, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b3 = simd_and(r800_ffff_tmp36, tmp122);
          r800_ffff_tmp127 = simd_andc(tmp62, basis_bits.bit_6);
          bytetest_8c_8d = simd_and(r800_ffff_tmp31, r800_ffff_tmp127);
          r800_ffff_tmp128 = simd_and(r800_ffff_tmp125, bytetest_8c_8d);
          struct_Mn.cc = simd_or(r800_ffff_tmp128, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b3 = simd_and(r800_ffff_tmp36, tmp122);
          bytetest_a2_a3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp49);
          r800_ffff_tmp129 = simd_and(r800_ffff_tmp125, bytetest_a2_a3);
          struct_Mn.cc = simd_or(r800_ffff_tmp129, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b5 = simd_and(r800_ffff_tmp36, tmp95);
          bytetest_81_84 = simd_and(r800_ffff_tmp55, r800_ffff_tmp56);
          r800_ffff_tmp130 = simd_and(r800_ffff_tmp6, bytetest_b5);
          carryQ.cq[52] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp130, carryQ.get_carry_in(52), r800_ffff_tmp131));
          r800_ffff_tmp132 = simd_and(r800_ffff_tmp131, bytetest_81_84);
          struct_Mn.cc = simd_or(r800_ffff_tmp132, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b5 = simd_and(r800_ffff_tmp36, tmp95);
          bytetest_8d_8d = simd_and(r800_ffff_tmp31, tmp79);
          r800_ffff_tmp133 = simd_and(r800_ffff_tmp131, bytetest_8d_8d);
          struct_Mn.cc = simd_or(r800_ffff_tmp133, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b5 = simd_and(r800_ffff_tmp36, tmp95);
          bytetest_a2_a3 = simd_and(r800_ffff_tmp2, r800_ffff_tmp49);
          r800_ffff_tmp134 = simd_and(r800_ffff_tmp131, bytetest_a2_a3);
          struct_Mn.cc = simd_or(r800_ffff_tmp134, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b7 = simd_and(r800_ffff_tmp36, tmp82);
          bytetest_8a_8a = simd_and(r800_ffff_tmp31, tmp74);
          r800_ffff_tmp135 = simd_and(r800_ffff_tmp6, bytetest_b7);
          carryQ.cq[53] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp135, carryQ.get_carry_in(53), r800_ffff_tmp136));
          r800_ffff_tmp137 = simd_and(r800_ffff_tmp136, bytetest_8a_8a);
          struct_Mn.cc = simd_or(r800_ffff_tmp137, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b7 = simd_and(r800_ffff_tmp36, tmp82);
          bytetest_92_94 = simd_and(r800_ffff_tmp47, tmp118);
          r800_ffff_tmp138 = simd_and(r800_ffff_tmp136, bytetest_92_94);
          struct_Mn.cc = simd_or(r800_ffff_tmp138, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b7 = simd_and(r800_ffff_tmp36, tmp82);
          bytetest_96_96 = simd_and(r800_ffff_tmp3, tmp66);
          r800_ffff_tmp139 = simd_and(r800_ffff_tmp136, bytetest_96_96);
          struct_Mn.cc = simd_or(r800_ffff_tmp139, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b8 = simd_and(r800_ffff_tmp36, r800_ffff_tmp62);
          bytetest_b1_b1 = simd_and(r800_ffff_tmp36, tmp11);
          r800_ffff_tmp140 = simd_and(r800_ffff_tmp6, bytetest_b8);
          carryQ.cq[54] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp140, carryQ.get_carry_in(54), r800_ffff_tmp141));
          r800_ffff_tmp142 = simd_and(r800_ffff_tmp141, bytetest_b1_b1);
          struct_Mn.cc = simd_or(r800_ffff_tmp142, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b8 = simd_and(r800_ffff_tmp36, r800_ffff_tmp62);
          r800_ffff_tmp143 = simd_not(tmp107);
          r800_ffff_tmp144 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp143), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
          bytetest_b4_ba = simd_and(r800_ffff_tmp36, r800_ffff_tmp144);
          r800_ffff_tmp145 = simd_and(r800_ffff_tmp141, bytetest_b4_ba);
          struct_Mn.cc = simd_or(r800_ffff_tmp145, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b9 = simd_and(r800_ffff_tmp36, tmp116);
          r800_ffff_tmp146 = simd_or(simd_and(basis_bits.bit_4, tmp70), simd_andc(tmp25, basis_bits.bit_4));
          bytetest_87_8e = simd_and(r800_ffff_tmp31, r800_ffff_tmp146);
          r800_ffff_tmp147 = simd_and(r800_ffff_tmp6, bytetest_b9);
          carryQ.cq[55] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp147, carryQ.get_carry_in(55), r800_ffff_tmp148));
          r800_ffff_tmp149 = simd_and(r800_ffff_tmp148, bytetest_87_8e);
          struct_Mn.cc = simd_or(r800_ffff_tmp149, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ba = simd_and(r800_ffff_tmp36, tmp74);
          bytetest_b1_b1 = simd_and(r800_ffff_tmp36, tmp11);
          r800_ffff_tmp150 = simd_and(r800_ffff_tmp6, bytetest_ba);
          carryQ.cq[56] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp150, carryQ.get_carry_in(56), r800_ffff_tmp151));
          r800_ffff_tmp152 = simd_and(r800_ffff_tmp151, bytetest_b1_b1);
          struct_Mn.cc = simd_or(r800_ffff_tmp152, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ba = simd_and(r800_ffff_tmp36, tmp74);
          r800_ffff_tmp153 = simd_or(simd_and(basis_bits.bit_4, tmp97), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
          bytetest_b4_b9 = simd_and(r800_ffff_tmp36, r800_ffff_tmp153);
          r800_ffff_tmp154 = simd_and(r800_ffff_tmp151, bytetest_b4_b9);
          struct_Mn.cc = simd_or(r800_ffff_tmp154, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ba = simd_and(r800_ffff_tmp36, tmp74);
          r800_ffff_tmp155 = simd_and(r800_ffff_tmp36, basis_bits.bit_4);
          r800_ffff_tmp156 = simd_or(simd_and(basis_bits.bit_5, tmp117), simd_andc(tmp24, basis_bits.bit_5));
          bytetest_bb_bc = simd_and(r800_ffff_tmp155, r800_ffff_tmp156);
          r800_ffff_tmp157 = simd_and(r800_ffff_tmp151, bytetest_bb_bc);
          struct_Mn.cc = simd_or(r800_ffff_tmp157, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bb = simd_and(r800_ffff_tmp36, tmp75);
          bytetest_88_8d = simd_andc(r800_ffff_tmp72, tmp71);
          r800_ffff_tmp158 = simd_and(r800_ffff_tmp6, bytetest_bb);
          carryQ.cq[57] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp158, carryQ.get_carry_in(57), r800_ffff_tmp159));
          r800_ffff_tmp160 = simd_and(r800_ffff_tmp159, bytetest_88_8d);
          struct_Mn.cc = simd_or(r800_ffff_tmp160, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bc = simd_and(r800_ffff_tmp36, r800_ffff_tmp38);
          r800_ffff_tmp161 = simd_andc(tmp42, basis_bits.bit_6);
          bytetest_98_99 = simd_and(r800_ffff_tmp3, r800_ffff_tmp161);
          r800_ffff_tmp162 = simd_and(r800_ffff_tmp6, bytetest_bc);
          carryQ.cq[58] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp162, carryQ.get_carry_in(58), r800_ffff_tmp163));
          r800_ffff_tmp164 = simd_and(r800_ffff_tmp163, bytetest_98_99);
          struct_Mn.cc = simd_or(r800_ffff_tmp164, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bc = simd_and(r800_ffff_tmp36, r800_ffff_tmp38);
          bytetest_b5_b5 = simd_and(r800_ffff_tmp36, tmp95);
          r800_ffff_tmp165 = simd_and(r800_ffff_tmp163, bytetest_b5_b5);
          struct_Mn.cc = simd_or(r800_ffff_tmp165, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bc = simd_and(r800_ffff_tmp36, r800_ffff_tmp38);
          bytetest_b7_b7 = simd_and(r800_ffff_tmp36, tmp82);
          r800_ffff_tmp166 = simd_and(r800_ffff_tmp163, bytetest_b7_b7);
          struct_Mn.cc = simd_or(r800_ffff_tmp166, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bc = simd_and(r800_ffff_tmp36, r800_ffff_tmp38);
          bytetest_b9_b9 = simd_and(r800_ffff_tmp36, tmp116);
          r800_ffff_tmp167 = simd_and(r800_ffff_tmp163, bytetest_b9_b9);
          struct_Mn.cc = simd_or(r800_ffff_tmp167, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bd = simd_and(r800_ffff_tmp36, tmp79);
          r800_ffff_tmp168 = simd_or(simd_and(basis_bits.bit_4, tmp70), simd_andc(r800_ffff_tmp40, basis_bits.bit_4));
          bytetest_b1_be = simd_and(r800_ffff_tmp36, r800_ffff_tmp168);
          r800_ffff_tmp169 = simd_and(r800_ffff_tmp6, bytetest_bd);
          carryQ.cq[59] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp169, carryQ.get_carry_in(59), r800_ffff_tmp170));
          r800_ffff_tmp171 = simd_and(r800_ffff_tmp170, bytetest_b1_be);
          struct_Mn.cc = simd_or(r800_ffff_tmp171, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_be = simd_and(r800_ffff_tmp36, tmp84);
          bytetest_80_84 = simd_andc(r800_ffff_tmp55, tmp59);
          r800_ffff_tmp172 = simd_and(r800_ffff_tmp6, bytetest_be);
          carryQ.cq[60] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp172, carryQ.get_carry_in(60), r800_ffff_tmp173));
          r800_ffff_tmp174 = simd_and(r800_ffff_tmp173, bytetest_80_84);
          struct_Mn.cc = simd_or(r800_ffff_tmp174, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_be = simd_and(r800_ffff_tmp36, tmp84);
          r800_ffff_tmp175 = simd_and(tmp47, basis_bits.bit_6);
          bytetest_86_87 = simd_and(r800_ffff_tmp31, r800_ffff_tmp175);
          r800_ffff_tmp176 = simd_and(r800_ffff_tmp173, bytetest_86_87);
          struct_Mn.cc = simd_or(r800_ffff_tmp176, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_be = simd_and(r800_ffff_tmp36, tmp84);
          r800_ffff_tmp177 = simd_andc(bytetest_80_bf, basis_bits.bit_2);
          r800_ffff_tmp178 = simd_not(basis_bits.bit_4);
          r800_ffff_tmp179 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp178), simd_andc(tmp63, basis_bits.bit_3));
          bytetest_8d_97 = simd_and(r800_ffff_tmp177, r800_ffff_tmp179);
          r800_ffff_tmp180 = simd_and(r800_ffff_tmp173, bytetest_8d_97);
          struct_Mn.cc = simd_or(r800_ffff_tmp180, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_be = simd_and(r800_ffff_tmp36, tmp84);
          r800_ffff_tmp181 = simd_and(basis_bits.bit_3, tmp63);
          r800_ffff_tmp182 = simd_not(r800_ffff_tmp181);
          r800_ffff_tmp183 = simd_and(basis_bits.bit_4, r800_ffff_tmp40);
          r800_ffff_tmp184 = simd_and(basis_bits.bit_3, r800_ffff_tmp183);
          r800_ffff_tmp185 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp182), simd_andc(r800_ffff_tmp184, basis_bits.bit_2));
          bytetest_99_bc = simd_and(bytetest_80_bf, r800_ffff_tmp185);
          r800_ffff_tmp186 = simd_and(r800_ffff_tmp173, bytetest_99_bc);
          struct_Mn.cc = simd_or(r800_ffff_tmp186, struct_Mn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bf = simd_and(r800_ffff_tmp36, tmp88);
          bytetest_86_86 = simd_and(r800_ffff_tmp31, tmp66);
          r800_ffff_tmp187 = simd_and(r800_ffff_tmp6, bytetest_bf);
          carryQ.cq[61] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp187, carryQ.get_carry_in(61), r800_ffff_tmp188));
          r800_ffff_tmp189 = simd_and(r800_ffff_tmp188, bytetest_86_86);
          struct_Mn.cc = simd_or(r800_ffff_tmp189, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_80 = simd_andc(r800_ffff_tmp31, tmp6);
          r800_ffff_tmp190 = simd_not(tmp6);
          r800_ffff_tmp191 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp190), simd_andc(tmp63, basis_bits.bit_3));
          bytetest_ad_b0 = simd_and(r800_ffff_tmp25, r800_ffff_tmp191);
          r800_ffff_tmp192 = simd_and(tmp15, bytetest_e1);
          carryQ.cq[62] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp192, carryQ.get_carry_in(62), r800_ffff_tmp193));
          r800_ffff_tmp194 = simd_and(r800_ffff_tmp193, bytetest_80);
          carryQ.cq[63] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp194, carryQ.get_carry_in(63), r800_ffff_tmp195));
          r800_ffff_tmp196 = simd_and(r800_ffff_tmp195, bytetest_ad_b0);
          struct_Mn.cc = simd_or(r800_ffff_tmp196, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_80 = simd_andc(r800_ffff_tmp31, tmp6);
          r800_ffff_tmp197 = simd_andc(r800_ffff_tmp36, basis_bits.bit_4);
          bytetest_b2_b7 = simd_and(r800_ffff_tmp197, tmp96);
          r800_ffff_tmp198 = simd_and(r800_ffff_tmp195, bytetest_b2_b7);
          struct_Mn.cc = simd_or(r800_ffff_tmp198, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_80 = simd_andc(r800_ffff_tmp31, tmp6);
          r800_ffff_tmp199 = simd_and(r800_ffff_tmp36, tmp42);
          bytetest_b9_ba = simd_and(r800_ffff_tmp199, tmp45);
          r800_ffff_tmp200 = simd_and(r800_ffff_tmp195, bytetest_b9_ba);
          struct_Mn.cc = simd_or(r800_ffff_tmp200, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_80 = simd_andc(r800_ffff_tmp31, tmp6);
          r800_ffff_tmp201 = simd_and(r800_ffff_tmp36, tmp62);
          bytetest_bd_be = simd_and(r800_ffff_tmp201, tmp45);
          r800_ffff_tmp202 = simd_and(r800_ffff_tmp195, bytetest_bd_be);
          struct_Mn.cc = simd_or(r800_ffff_tmp202, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_81 = simd_and(r800_ffff_tmp31, tmp11);
          bytetest_98_99 = simd_and(r800_ffff_tmp3, r800_ffff_tmp161);
          r800_ffff_tmp203 = simd_and(r800_ffff_tmp193, bytetest_81);
          carryQ.cq[64] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp203, carryQ.get_carry_in(64), r800_ffff_tmp204));
          r800_ffff_tmp205 = simd_and(r800_ffff_tmp204, bytetest_98_99);
          struct_Mn.cc = simd_or(r800_ffff_tmp205, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_81 = simd_and(r800_ffff_tmp31, tmp11);
          r800_ffff_tmp206 = simd_or(basis_bits.bit_3, tmp6);
          r800_ffff_tmp207 = simd_not(r800_ffff_tmp206);
          r800_ffff_tmp208 = simd_and(basis_bits.bit_3, r800_ffff_tmp109);
          r800_ffff_tmp209 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp207), simd_andc(r800_ffff_tmp208, basis_bits.bit_2));
          bytetest_9e_a0 = simd_and(bytetest_80_bf, r800_ffff_tmp209);
          r800_ffff_tmp210 = simd_and(r800_ffff_tmp204, bytetest_9e_a0);
          struct_Mn.cc = simd_or(r800_ffff_tmp210, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_81 = simd_and(r800_ffff_tmp31, tmp11);
          bytetest_b1_b4 = simd_and(r800_ffff_tmp197, r800_ffff_tmp56);
          r800_ffff_tmp211 = simd_and(r800_ffff_tmp204, bytetest_b1_b4);
          struct_Mn.cc = simd_or(r800_ffff_tmp211, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_82 = simd_and(r800_ffff_tmp31, tmp33);
          bytetest_82_82 = simd_and(r800_ffff_tmp31, tmp33);
          r800_ffff_tmp212 = simd_and(r800_ffff_tmp193, bytetest_82);
          carryQ.cq[65] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp212, carryQ.get_carry_in(65), r800_ffff_tmp213));
          r800_ffff_tmp214 = simd_and(r800_ffff_tmp213, bytetest_82_82);
          struct_Mn.cc = simd_or(r800_ffff_tmp214, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_82 = simd_and(r800_ffff_tmp31, tmp33);
          r800_ffff_tmp215 = simd_and(r800_ffff_tmp31, tmp47);
          bytetest_85_86 = simd_and(r800_ffff_tmp215, tmp45);
          r800_ffff_tmp216 = simd_and(r800_ffff_tmp213, bytetest_85_86);
          struct_Mn.cc = simd_or(r800_ffff_tmp216, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_82 = simd_and(r800_ffff_tmp31, tmp33);
          bytetest_8d_8d = simd_and(r800_ffff_tmp31, tmp79);
          r800_ffff_tmp217 = simd_and(r800_ffff_tmp213, bytetest_8d_8d);
          struct_Mn.cc = simd_or(r800_ffff_tmp217, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_82 = simd_and(r800_ffff_tmp31, tmp33);
          bytetest_9d_9d = simd_and(r800_ffff_tmp3, tmp79);
          r800_ffff_tmp218 = simd_and(r800_ffff_tmp213, bytetest_9d_9d);
          struct_Mn.cc = simd_or(r800_ffff_tmp218, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_8d = simd_and(r800_ffff_tmp31, tmp79);
          r800_ffff_tmp219 = simd_and(r800_ffff_tmp3, tmp62);
          bytetest_9d_9f = simd_and(r800_ffff_tmp219, tmp5);
          r800_ffff_tmp220 = simd_and(r800_ffff_tmp193, bytetest_8d);
          carryQ.cq[66] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp220, carryQ.get_carry_in(66), r800_ffff_tmp221));
          r800_ffff_tmp222 = simd_and(r800_ffff_tmp221, bytetest_9d_9f);
          struct_Mn.cc = simd_or(r800_ffff_tmp222, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9c = simd_and(r800_ffff_tmp3, r800_ffff_tmp38);
          bytetest_92_94 = simd_and(r800_ffff_tmp47, tmp118);
          r800_ffff_tmp223 = simd_and(r800_ffff_tmp193, bytetest_9c);
          carryQ.cq[67] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp223, carryQ.get_carry_in(67), r800_ffff_tmp224));
          r800_ffff_tmp225 = simd_and(r800_ffff_tmp224, bytetest_92_94);
          struct_Mn.cc = simd_or(r800_ffff_tmp225, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9c = simd_and(r800_ffff_tmp3, r800_ffff_tmp38);
          bytetest_b2_b4 = simd_and(r800_ffff_tmp197, tmp118);
          r800_ffff_tmp226 = simd_and(r800_ffff_tmp224, bytetest_b2_b4);
          struct_Mn.cc = simd_or(r800_ffff_tmp226, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9d = simd_and(r800_ffff_tmp3, tmp79);
          bytetest_92_93 = simd_and(r800_ffff_tmp3, r800_ffff_tmp49);
          r800_ffff_tmp227 = simd_and(r800_ffff_tmp193, bytetest_9d);
          carryQ.cq[68] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp227, carryQ.get_carry_in(68), r800_ffff_tmp228));
          r800_ffff_tmp229 = simd_and(r800_ffff_tmp228, bytetest_92_93);
          struct_Mn.cc = simd_or(r800_ffff_tmp229, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9d = simd_and(r800_ffff_tmp3, tmp79);
          bytetest_b2_b3 = simd_and(r800_ffff_tmp36, r800_ffff_tmp49);
          r800_ffff_tmp230 = simd_and(r800_ffff_tmp228, bytetest_b2_b3);
          struct_Mn.cc = simd_or(r800_ffff_tmp230, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9e = simd_and(r800_ffff_tmp3, tmp84);
          r800_ffff_tmp231 = simd_andc(tmp47, basis_bits.bit_6);
          bytetest_b4_b5 = simd_and(r800_ffff_tmp36, r800_ffff_tmp231);
          r800_ffff_tmp232 = simd_and(r800_ffff_tmp193, bytetest_9e);
          carryQ.cq[69] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp232, carryQ.get_carry_in(69), r800_ffff_tmp233));
          r800_ffff_tmp234 = simd_and(r800_ffff_tmp233, bytetest_b4_b5);
          struct_Mn.cc = simd_or(r800_ffff_tmp234, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9e = simd_and(r800_ffff_tmp3, tmp84);
          r800_ffff_tmp235 = simd_not(tmp71);
          r800_ffff_tmp236 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp235), simd_andc(tmp25, basis_bits.bit_4));
          bytetest_b7_bd = simd_and(r800_ffff_tmp36, r800_ffff_tmp236);
          r800_ffff_tmp237 = simd_and(r800_ffff_tmp233, bytetest_b7_bd);
          struct_Mn.cc = simd_or(r800_ffff_tmp237, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9f = simd_and(r800_ffff_tmp3, tmp88);
          bytetest_86_86 = simd_and(r800_ffff_tmp31, tmp66);
          r800_ffff_tmp238 = simd_and(r800_ffff_tmp193, bytetest_9f);
          carryQ.cq[70] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp238, carryQ.get_carry_in(70), r800_ffff_tmp239));
          r800_ffff_tmp240 = simd_and(r800_ffff_tmp239, bytetest_86_86);
          struct_Mn.cc = simd_or(r800_ffff_tmp240, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9f = simd_and(r800_ffff_tmp3, tmp88);
          r800_ffff_tmp241 = simd_not(tmp4);
          r800_ffff_tmp242 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp241), simd_andc(r800_ffff_tmp183, basis_bits.bit_3));
          bytetest_89_93 = simd_and(r800_ffff_tmp177, r800_ffff_tmp242);
          r800_ffff_tmp243 = simd_and(r800_ffff_tmp239, bytetest_89_93);
          struct_Mn.cc = simd_or(r800_ffff_tmp243, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9f = simd_and(r800_ffff_tmp3, tmp88);
          bytetest_9d_9d = simd_and(r800_ffff_tmp3, tmp79);
          r800_ffff_tmp244 = simd_and(r800_ffff_tmp239, bytetest_9d_9d);
          struct_Mn.cc = simd_or(r800_ffff_tmp244, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a0 = simd_andc(r800_ffff_tmp2, tmp6);
          bytetest_8b_8d = simd_and(r800_ffff_tmp72, r800_ffff_tmp73);
          r800_ffff_tmp245 = simd_and(r800_ffff_tmp193, bytetest_a0);
          carryQ.cq[71] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp245, carryQ.get_carry_in(71), r800_ffff_tmp246));
          r800_ffff_tmp247 = simd_and(r800_ffff_tmp246, bytetest_8b_8d);
          struct_Mn.cc = simd_or(r800_ffff_tmp247, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a2 = simd_and(r800_ffff_tmp2, tmp33);
          bytetest_a9_a9 = simd_and(r800_ffff_tmp2, tmp116);
          r800_ffff_tmp248 = simd_and(r800_ffff_tmp193, bytetest_a2);
          carryQ.cq[72] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp248, carryQ.get_carry_in(72), r800_ffff_tmp249));
          r800_ffff_tmp250 = simd_and(r800_ffff_tmp249, bytetest_a9_a9);
          struct_Mn.cc = simd_or(r800_ffff_tmp250, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a4 = simd_and(r800_ffff_tmp2, tmp48);
          r800_ffff_tmp251 = simd_andc(r800_ffff_tmp2, tmp4);
          bytetest_a0_a2 = simd_andc(r800_ffff_tmp251, tmp24);
          r800_ffff_tmp252 = simd_and(r800_ffff_tmp193, bytetest_a4);
          carryQ.cq[73] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp252, carryQ.get_carry_in(73), r800_ffff_tmp253));
          r800_ffff_tmp254 = simd_and(r800_ffff_tmp253, bytetest_a0_a2);
          struct_Mn.cc = simd_or(r800_ffff_tmp254, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a4 = simd_and(r800_ffff_tmp2, tmp48);
          bytetest_a7_a8 = simd_and(r800_ffff_tmp2, r800_ffff_tmp70);
          r800_ffff_tmp255 = simd_and(r800_ffff_tmp253, bytetest_a7_a8);
          struct_Mn.cc = simd_or(r800_ffff_tmp255, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a4 = simd_and(r800_ffff_tmp2, tmp48);
          bytetest_b2_b2 = simd_and(r800_ffff_tmp36, tmp33);
          r800_ffff_tmp256 = simd_and(r800_ffff_tmp253, bytetest_b2_b2);
          struct_Mn.cc = simd_or(r800_ffff_tmp256, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a4 = simd_and(r800_ffff_tmp2, tmp48);
          bytetest_b9_bb = simd_and(r800_ffff_tmp199, tmp5);
          r800_ffff_tmp257 = simd_and(r800_ffff_tmp253, bytetest_b9_bb);
          struct_Mn.cc = simd_or(r800_ffff_tmp257, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a8 = simd_and(r800_ffff_tmp2, r800_ffff_tmp62);
          bytetest_97_98 = simd_and(r800_ffff_tmp3, r800_ffff_tmp70);
          r800_ffff_tmp258 = simd_and(r800_ffff_tmp193, bytetest_a8);
          carryQ.cq[74] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp258, carryQ.get_carry_in(74), r800_ffff_tmp259));
          r800_ffff_tmp260 = simd_and(r800_ffff_tmp259, bytetest_97_98);
          struct_Mn.cc = simd_or(r800_ffff_tmp260, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a8 = simd_and(r800_ffff_tmp2, r800_ffff_tmp62);
          bytetest_9b_9b = simd_and(r800_ffff_tmp3, tmp75);
          r800_ffff_tmp261 = simd_and(r800_ffff_tmp259, bytetest_9b_9b);
          struct_Mn.cc = simd_or(r800_ffff_tmp261, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a9 = simd_and(r800_ffff_tmp2, tmp116);
          bytetest_96_96 = simd_and(r800_ffff_tmp3, tmp66);
          r800_ffff_tmp262 = simd_and(r800_ffff_tmp193, bytetest_a9);
          carryQ.cq[75] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp262, carryQ.get_carry_in(75), r800_ffff_tmp263));
          r800_ffff_tmp264 = simd_and(r800_ffff_tmp263, bytetest_96_96);
          struct_Mn.cc = simd_or(r800_ffff_tmp264, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a9 = simd_and(r800_ffff_tmp2, tmp116);
          r800_ffff_tmp265 = simd_and(r800_ffff_tmp3, basis_bits.bit_4);
          bytetest_98_9e = simd_andc(r800_ffff_tmp265, tmp25);
          r800_ffff_tmp266 = simd_and(r800_ffff_tmp263, bytetest_98_9e);
          struct_Mn.cc = simd_or(r800_ffff_tmp266, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a9 = simd_and(r800_ffff_tmp2, tmp116);
          bytetest_a0_a0 = simd_andc(r800_ffff_tmp2, tmp6);
          r800_ffff_tmp267 = simd_and(r800_ffff_tmp263, bytetest_a0_a0);
          struct_Mn.cc = simd_or(r800_ffff_tmp267, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a9 = simd_and(r800_ffff_tmp2, tmp116);
          bytetest_a2_a2 = simd_and(r800_ffff_tmp2, tmp33);
          r800_ffff_tmp268 = simd_and(r800_ffff_tmp263, bytetest_a2_a2);
          struct_Mn.cc = simd_or(r800_ffff_tmp268, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a9 = simd_and(r800_ffff_tmp2, tmp116);
          r800_ffff_tmp269 = simd_not(tmp59);
          r800_ffff_tmp270 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp269), simd_andc(tmp59, basis_bits.bit_4));
          bytetest_a5_ac = simd_and(r800_ffff_tmp2, r800_ffff_tmp270);
          r800_ffff_tmp271 = simd_and(r800_ffff_tmp263, bytetest_a5_ac);
          struct_Mn.cc = simd_or(r800_ffff_tmp271, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a9 = simd_and(r800_ffff_tmp2, tmp116);
          r800_ffff_tmp272 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp269), simd_andc(tmp107, basis_bits.bit_4));
          bytetest_b3_bc = simd_and(r800_ffff_tmp36, r800_ffff_tmp272);
          r800_ffff_tmp273 = simd_and(r800_ffff_tmp263, bytetest_b3_bc);
          struct_Mn.cc = simd_or(r800_ffff_tmp273, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a9 = simd_and(r800_ffff_tmp2, tmp116);
          bytetest_bf_bf = simd_and(r800_ffff_tmp36, tmp88);
          r800_ffff_tmp274 = simd_and(r800_ffff_tmp263, bytetest_bf_bf);
          struct_Mn.cc = simd_or(r800_ffff_tmp274, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_ac = simd_and(r800_ffff_tmp2, r800_ffff_tmp38);
          bytetest_80_83 = simd_andc(r800_ffff_tmp31, tmp4);
          r800_ffff_tmp275 = simd_and(r800_ffff_tmp193, bytetest_ac);
          carryQ.cq[76] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp275, carryQ.get_carry_in(76), r800_ffff_tmp276));
          r800_ffff_tmp277 = simd_and(r800_ffff_tmp276, bytetest_80_83);
          struct_Mn.cc = simd_or(r800_ffff_tmp277, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_ac = simd_and(r800_ffff_tmp2, r800_ffff_tmp38);
          bytetest_b4_b4 = simd_and(r800_ffff_tmp36, tmp48);
          r800_ffff_tmp278 = simd_and(r800_ffff_tmp276, bytetest_b4_b4);
          struct_Mn.cc = simd_or(r800_ffff_tmp278, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_ac = simd_and(r800_ffff_tmp2, r800_ffff_tmp38);
          r800_ffff_tmp279 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp143), simd_andc(tmp71, basis_bits.bit_4));
          bytetest_b6_ba = simd_and(r800_ffff_tmp36, r800_ffff_tmp279);
          r800_ffff_tmp280 = simd_and(r800_ffff_tmp276, bytetest_b6_ba);
          struct_Mn.cc = simd_or(r800_ffff_tmp280, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_ac = simd_and(r800_ffff_tmp2, r800_ffff_tmp38);
          bytetest_bc_bc = simd_and(r800_ffff_tmp36, r800_ffff_tmp38);
          r800_ffff_tmp281 = simd_and(r800_ffff_tmp276, bytetest_bc_bc);
          struct_Mn.cc = simd_or(r800_ffff_tmp281, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_ad = simd_and(r800_ffff_tmp2, tmp79);
          bytetest_82_82 = simd_and(r800_ffff_tmp31, tmp33);
          r800_ffff_tmp282 = simd_and(r800_ffff_tmp193, bytetest_ad);
          carryQ.cq[77] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp282, carryQ.get_carry_in(77), r800_ffff_tmp283));
          r800_ffff_tmp284 = simd_and(r800_ffff_tmp283, bytetest_82_82);
          struct_Mn.cc = simd_or(r800_ffff_tmp284, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_ad = simd_and(r800_ffff_tmp2, tmp79);
          r800_ffff_tmp285 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp241), simd_andc(r800_ffff_tmp12, basis_bits.bit_3));
          bytetest_ab_b3 = simd_and(r800_ffff_tmp25, r800_ffff_tmp285);
          r800_ffff_tmp286 = simd_and(r800_ffff_tmp283, bytetest_ab_b3);
          struct_Mn.cc = simd_or(r800_ffff_tmp286, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_ae = simd_and(r800_ffff_tmp2, tmp84);
          bytetest_80_81 = simd_andc(r800_ffff_tmp31, tmp34);
          r800_ffff_tmp287 = simd_and(r800_ffff_tmp193, bytetest_ae);
          carryQ.cq[78] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp287, carryQ.get_carry_in(78), r800_ffff_tmp288));
          r800_ffff_tmp289 = simd_and(r800_ffff_tmp288, bytetest_80_81);
          struct_Mn.cc = simd_or(r800_ffff_tmp289, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_ae = simd_and(r800_ffff_tmp2, tmp84);
          r800_ffff_tmp290 = simd_andc(r800_ffff_tmp2, basis_bits.bit_4);
          bytetest_a2_a5 = simd_and(r800_ffff_tmp290, tmp114);
          r800_ffff_tmp291 = simd_and(r800_ffff_tmp288, bytetest_a2_a5);
          struct_Mn.cc = simd_or(r800_ffff_tmp291, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_ae = simd_and(r800_ffff_tmp2, tmp84);
          bytetest_a8_a9 = simd_and(r800_ffff_tmp2, r800_ffff_tmp161);
          r800_ffff_tmp292 = simd_and(r800_ffff_tmp288, bytetest_a8_a9);
          struct_Mn.cc = simd_or(r800_ffff_tmp292, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_ae = simd_and(r800_ffff_tmp2, tmp84);
          bytetest_ab_ab = simd_and(r800_ffff_tmp2, tmp75);
          r800_ffff_tmp293 = simd_and(r800_ffff_tmp288, bytetest_ab_ab);
          struct_Mn.cc = simd_or(r800_ffff_tmp293, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_af = simd_and(r800_ffff_tmp2, tmp88);
          bytetest_a6_a6 = simd_and(r800_ffff_tmp2, tmp66);
          r800_ffff_tmp294 = simd_and(r800_ffff_tmp193, bytetest_af);
          carryQ.cq[79] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp294, carryQ.get_carry_in(79), r800_ffff_tmp295));
          r800_ffff_tmp296 = simd_and(r800_ffff_tmp295, bytetest_a6_a6);
          struct_Mn.cc = simd_or(r800_ffff_tmp296, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_af = simd_and(r800_ffff_tmp2, tmp88);
          bytetest_a8_a9 = simd_and(r800_ffff_tmp2, r800_ffff_tmp161);
          r800_ffff_tmp297 = simd_and(r800_ffff_tmp295, bytetest_a8_a9);
          struct_Mn.cc = simd_or(r800_ffff_tmp297, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_af = simd_and(r800_ffff_tmp2, tmp88);
          bytetest_ad_ad = simd_and(r800_ffff_tmp2, tmp79);
          r800_ffff_tmp298 = simd_and(r800_ffff_tmp295, bytetest_ad_ad);
          struct_Mn.cc = simd_or(r800_ffff_tmp298, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_af = simd_and(r800_ffff_tmp2, tmp88);
          r800_ffff_tmp299 = simd_not(tmp34);
          r800_ffff_tmp300 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp299), simd_andc(tmp88, basis_bits.bit_3));
          bytetest_af_b1 = simd_and(r800_ffff_tmp25, r800_ffff_tmp300);
          r800_ffff_tmp301 = simd_and(r800_ffff_tmp295, bytetest_af_b1);
          struct_Mn.cc = simd_or(r800_ffff_tmp301, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_b0 = simd_andc(r800_ffff_tmp36, tmp6);
          r800_ffff_tmp302 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp241), simd_andc(tmp62, basis_bits.bit_3));
          bytetest_ac_b3 = simd_and(r800_ffff_tmp25, r800_ffff_tmp302);
          r800_ffff_tmp303 = simd_and(r800_ffff_tmp193, bytetest_b0);
          carryQ.cq[80] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp303, carryQ.get_carry_in(80), r800_ffff_tmp304));
          r800_ffff_tmp305 = simd_and(r800_ffff_tmp304, bytetest_ac_b3);
          struct_Mn.cc = simd_or(r800_ffff_tmp305, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_b0 = simd_andc(r800_ffff_tmp36, tmp6);
          bytetest_b6_b7 = simd_and(r800_ffff_tmp36, r800_ffff_tmp175);
          r800_ffff_tmp306 = simd_and(r800_ffff_tmp304, bytetest_b6_b7);
          struct_Mn.cc = simd_or(r800_ffff_tmp306, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_b3 = simd_and(r800_ffff_tmp36, tmp122);
          r800_ffff_tmp307 = simd_andc(r800_ffff_tmp3, tmp4);
          bytetest_90_92 = simd_andc(r800_ffff_tmp307, tmp24);
          r800_ffff_tmp308 = simd_and(r800_ffff_tmp193, bytetest_b3);
          carryQ.cq[81] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp308, carryQ.get_carry_in(81), r800_ffff_tmp309));
          r800_ffff_tmp310 = simd_and(r800_ffff_tmp309, bytetest_90_92);
          struct_Mn.cc = simd_or(r800_ffff_tmp310, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_b3 = simd_and(r800_ffff_tmp36, tmp122);
          r800_ffff_tmp311 = simd_and(basis_bits.bit_3, tmp4);
          r800_ffff_tmp312 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp207), simd_andc(r800_ffff_tmp311, basis_bits.bit_2));
          bytetest_94_a0 = simd_and(bytetest_80_bf, r800_ffff_tmp312);
          r800_ffff_tmp313 = simd_and(r800_ffff_tmp309, bytetest_94_a0);
          struct_Mn.cc = simd_or(r800_ffff_tmp313, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_b3 = simd_and(r800_ffff_tmp36, tmp122);
          r800_ffff_tmp314 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp41), simd_andc(tmp96, basis_bits.bit_4));
          bytetest_a2_a8 = simd_and(r800_ffff_tmp2, r800_ffff_tmp314);
          r800_ffff_tmp315 = simd_and(r800_ffff_tmp309, bytetest_a2_a8);
          struct_Mn.cc = simd_or(r800_ffff_tmp315, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_b3 = simd_and(r800_ffff_tmp36, tmp122);
          bytetest_ad_ad = simd_and(r800_ffff_tmp2, tmp79);
          r800_ffff_tmp316 = simd_and(r800_ffff_tmp309, bytetest_ad_ad);
          struct_Mn.cc = simd_or(r800_ffff_tmp316, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_b3 = simd_and(r800_ffff_tmp36, tmp122);
          bytetest_b4_b4 = simd_and(r800_ffff_tmp36, tmp48);
          r800_ffff_tmp317 = simd_and(r800_ffff_tmp309, bytetest_b4_b4);
          struct_Mn.cc = simd_or(r800_ffff_tmp317, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_b7 = simd_and(r800_ffff_tmp36, tmp82);
          r800_ffff_tmp318 = simd_or(basis_bits.bit_4, tmp25);
          r800_ffff_tmp319 = simd_or(basis_bits.bit_3, r800_ffff_tmp318);
          r800_ffff_tmp320 = simd_and(basis_bits.bit_2, r800_ffff_tmp319);
          bytetest_80_a6 = simd_andc(bytetest_80_bf, r800_ffff_tmp320);
          r800_ffff_tmp321 = simd_and(r800_ffff_tmp193, bytetest_b7);
          carryQ.cq[82] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp321, carryQ.get_carry_in(82), r800_ffff_tmp322));
          r800_ffff_tmp323 = simd_and(r800_ffff_tmp322, bytetest_80_a6);
          struct_Mn.cc = simd_or(r800_ffff_tmp323, struct_Mn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_b7 = simd_and(r800_ffff_tmp36, tmp82);
          bytetest_bc_bf = simd_and(r800_ffff_tmp36, tmp62);
          r800_ffff_tmp324 = simd_and(r800_ffff_tmp322, bytetest_bc_bf);
          struct_Mn.cc = simd_or(r800_ffff_tmp324, struct_Mn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_83 = simd_and(r800_ffff_tmp31, tmp122);
          r800_ffff_tmp325 = simd_and(basis_bits.bit_4, tmp59);
          bytetest_90_9c = simd_andc(r800_ffff_tmp3, r800_ffff_tmp325);
          r800_ffff_tmp326 = simd_and(tmp15, bytetest_e2);
          carryQ.cq[83] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp326, carryQ.get_carry_in(83), r800_ffff_tmp327));
          r800_ffff_tmp328 = simd_and(r800_ffff_tmp327, bytetest_83);
          carryQ.cq[84] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp328, carryQ.get_carry_in(84), r800_ffff_tmp329));
          r800_ffff_tmp330 = simd_and(r800_ffff_tmp329, bytetest_90_9c);
          struct_Mn.cc = simd_or(r800_ffff_tmp330, struct_Mn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_83 = simd_and(r800_ffff_tmp31, tmp122);
          bytetest_a1_a1 = simd_and(r800_ffff_tmp2, tmp11);
          r800_ffff_tmp331 = simd_and(r800_ffff_tmp329, bytetest_a1_a1);
          struct_Mn.cc = simd_or(r800_ffff_tmp331, struct_Mn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_83 = simd_and(r800_ffff_tmp31, tmp122);
          r800_ffff_tmp332 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp190), simd_andc(tmp60, basis_bits.bit_3));
          bytetest_a5_b0 = simd_and(r800_ffff_tmp25, r800_ffff_tmp332);
          r800_ffff_tmp333 = simd_and(r800_ffff_tmp329, bytetest_a5_b0);
          struct_Mn.cc = simd_or(r800_ffff_tmp333, struct_Mn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b3 = simd_and(r800_ffff_tmp36, tmp122);
          bytetest_af_b1 = simd_and(r800_ffff_tmp25, r800_ffff_tmp300);
          r800_ffff_tmp334 = simd_and(r800_ffff_tmp327, bytetest_b3);
          carryQ.cq[85] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp334, carryQ.get_carry_in(85), r800_ffff_tmp335));
          r800_ffff_tmp336 = simd_and(r800_ffff_tmp335, bytetest_af_b1);
          struct_Mn.cc = simd_or(r800_ffff_tmp336, struct_Mn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b5 = simd_and(r800_ffff_tmp36, tmp95);
          bytetest_bf_bf = simd_and(r800_ffff_tmp36, tmp88);
          r800_ffff_tmp337 = simd_and(r800_ffff_tmp327, bytetest_b5);
          carryQ.cq[86] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp337, carryQ.get_carry_in(86), r800_ffff_tmp338));
          r800_ffff_tmp339 = simd_and(r800_ffff_tmp338, bytetest_bf_bf);
          struct_Mn.cc = simd_or(r800_ffff_tmp339, struct_Mn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp33);
          bytetest_b7 = simd_and(r800_ffff_tmp36, tmp82);
          bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
          r800_ffff_tmp340 = simd_and(r800_ffff_tmp327, bytetest_b7);
          carryQ.cq[87] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp340, carryQ.get_carry_in(87), r800_ffff_tmp341));
          r800_ffff_tmp342 = simd_and(r800_ffff_tmp341, bytetest_a0_bf);
          struct_Mn.cc = simd_or(r800_ffff_tmp342, struct_Mn.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp122);
          bytetest_80 = simd_andc(r800_ffff_tmp31, tmp6);
          bytetest_aa_ad = simd_and(r800_ffff_tmp18, tmp114);
          r800_ffff_tmp343 = simd_and(tmp15, bytetest_e3);
          carryQ.cq[88] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp343, carryQ.get_carry_in(88), r800_ffff_tmp344));
          r800_ffff_tmp345 = simd_and(r800_ffff_tmp344, bytetest_80);
          carryQ.cq[89] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp345, carryQ.get_carry_in(89), r800_ffff_tmp346));
          r800_ffff_tmp347 = simd_and(r800_ffff_tmp346, bytetest_aa_ad);
          struct_Mn.cc = simd_or(r800_ffff_tmp347, struct_Mn.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp122);
          bytetest_82 = simd_and(r800_ffff_tmp31, tmp33);
          bytetest_99_9a = simd_and(r800_ffff_tmp21, tmp45);
          r800_ffff_tmp348 = simd_and(r800_ffff_tmp344, bytetest_82);
          carryQ.cq[90] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp348, carryQ.get_carry_in(90), r800_ffff_tmp349));
          r800_ffff_tmp350 = simd_and(r800_ffff_tmp349, bytetest_99_9a);
          struct_Mn.cc = simd_or(r800_ffff_tmp350, struct_Mn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_99 = simd_and(r800_ffff_tmp3, tmp116);
          bytetest_af_af = simd_and(r800_ffff_tmp2, tmp88);
          r800_ffff_tmp351 = simd_and(tmp15, bytetest_ea);
          carryQ.cq[91] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp351, carryQ.get_carry_in(91), r800_ffff_tmp352));
          r800_ffff_tmp353 = simd_and(r800_ffff_tmp352, bytetest_99);
          carryQ.cq[92] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp353, carryQ.get_carry_in(92), r800_ffff_tmp354));
          r800_ffff_tmp355 = simd_and(r800_ffff_tmp354, bytetest_af_af);
          struct_Mn.cc = simd_or(r800_ffff_tmp355, struct_Mn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_99 = simd_and(r800_ffff_tmp3, tmp116);
          r800_ffff_tmp356 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp235), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
          bytetest_b4_bd = simd_and(r800_ffff_tmp36, r800_ffff_tmp356);
          r800_ffff_tmp357 = simd_and(r800_ffff_tmp354, bytetest_b4_bd);
          struct_Mn.cc = simd_or(r800_ffff_tmp357, struct_Mn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_9a = simd_and(r800_ffff_tmp3, tmp74);
          bytetest_9f_9f = simd_and(r800_ffff_tmp3, tmp88);
          r800_ffff_tmp358 = simd_and(r800_ffff_tmp352, bytetest_9a);
          carryQ.cq[93] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp358, carryQ.get_carry_in(93), r800_ffff_tmp359));
          r800_ffff_tmp360 = simd_and(r800_ffff_tmp359, bytetest_9f_9f);
          struct_Mn.cc = simd_or(r800_ffff_tmp360, struct_Mn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_9b = simd_and(r800_ffff_tmp3, tmp75);
          bytetest_b0_b1 = simd_andc(r800_ffff_tmp36, tmp34);
          r800_ffff_tmp361 = simd_and(r800_ffff_tmp352, bytetest_9b);
          carryQ.cq[94] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp361, carryQ.get_carry_in(94), r800_ffff_tmp362));
          r800_ffff_tmp363 = simd_and(r800_ffff_tmp362, bytetest_b0_b1);
          struct_Mn.cc = simd_or(r800_ffff_tmp363, struct_Mn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_a0 = simd_andc(r800_ffff_tmp2, tmp6);
          bytetest_82_82 = simd_and(r800_ffff_tmp31, tmp33);
          r800_ffff_tmp364 = simd_and(r800_ffff_tmp352, bytetest_a0);
          carryQ.cq[95] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp364, carryQ.get_carry_in(95), r800_ffff_tmp365));
          r800_ffff_tmp366 = simd_and(r800_ffff_tmp365, bytetest_82_82);
          struct_Mn.cc = simd_or(r800_ffff_tmp366, struct_Mn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_a0 = simd_andc(r800_ffff_tmp2, tmp6);
          bytetest_86_86 = simd_and(r800_ffff_tmp31, tmp66);
          r800_ffff_tmp367 = simd_and(r800_ffff_tmp365, bytetest_86_86);
          struct_Mn.cc = simd_or(r800_ffff_tmp367, struct_Mn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_a0 = simd_andc(r800_ffff_tmp2, tmp6);
          bytetest_8b_8b = simd_and(r800_ffff_tmp31, tmp75);
          r800_ffff_tmp368 = simd_and(r800_ffff_tmp365, bytetest_8b_8b);
          struct_Mn.cc = simd_or(r800_ffff_tmp368, struct_Mn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_a0 = simd_andc(r800_ffff_tmp2, tmp6);
          bytetest_a5_a6 = simd_and(r800_ffff_tmp16, tmp45);
          r800_ffff_tmp369 = simd_and(r800_ffff_tmp365, bytetest_a5_a6);
          struct_Mn.cc = simd_or(r800_ffff_tmp369, struct_Mn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_a3 = simd_and(r800_ffff_tmp2, tmp122);
          bytetest_84_84 = simd_and(r800_ffff_tmp31, tmp48);
          r800_ffff_tmp370 = simd_and(r800_ffff_tmp352, bytetest_a3);
          carryQ.cq[96] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp370, carryQ.get_carry_in(96), r800_ffff_tmp371));
          r800_ffff_tmp372 = simd_and(r800_ffff_tmp371, bytetest_84_84);
          struct_Mn.cc = simd_or(r800_ffff_tmp372, struct_Mn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_a3 = simd_and(r800_ffff_tmp2, tmp122);
          r800_ffff_tmp373 = simd_and(basis_bits.bit_3, tmp34);
          bytetest_a0_b1 = simd_andc(bytetest_a0_bf, r800_ffff_tmp373);
          r800_ffff_tmp374 = simd_and(r800_ffff_tmp371, bytetest_a0_b1);
          struct_Mn.cc = simd_or(r800_ffff_tmp374, struct_Mn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_a4 = simd_and(r800_ffff_tmp2, tmp48);
          r800_ffff_tmp375 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp235), simd_andc(tmp71, basis_bits.bit_4));
          bytetest_a6_ad = simd_and(r800_ffff_tmp2, r800_ffff_tmp375);
          r800_ffff_tmp376 = simd_and(r800_ffff_tmp352, bytetest_a4);
          carryQ.cq[97] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp376, carryQ.get_carry_in(97), r800_ffff_tmp377));
          r800_ffff_tmp378 = simd_and(r800_ffff_tmp377, bytetest_a6_ad);
          struct_Mn.cc = simd_or(r800_ffff_tmp378, struct_Mn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_a5 = simd_and(r800_ffff_tmp2, tmp95);
          r800_ffff_tmp379 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp299), simd_andc(r800_ffff_tmp318, basis_bits.bit_3));
          bytetest_87_91 = simd_and(r800_ffff_tmp177, r800_ffff_tmp379);
          r800_ffff_tmp380 = simd_and(r800_ffff_tmp352, bytetest_a5);
          carryQ.cq[98] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp380, carryQ.get_carry_in(98), r800_ffff_tmp381));
          r800_ffff_tmp382 = simd_and(r800_ffff_tmp381, bytetest_87_91);
          struct_Mn.cc = simd_or(r800_ffff_tmp382, struct_Mn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_a6 = simd_and(r800_ffff_tmp2, tmp66);
          bytetest_80_82 = simd_andc(bytetest_80_83, tmp24);
          r800_ffff_tmp383 = simd_and(r800_ffff_tmp352, bytetest_a6);
          carryQ.cq[99] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp383, carryQ.get_carry_in(99), r800_ffff_tmp384));
          r800_ffff_tmp385 = simd_and(r800_ffff_tmp384, bytetest_80_82);
          struct_Mn.cc = simd_or(r800_ffff_tmp385, struct_Mn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_a6 = simd_and(r800_ffff_tmp2, tmp66);
          bytetest_b3_b3 = simd_and(r800_ffff_tmp36, tmp122);
          r800_ffff_tmp386 = simd_and(r800_ffff_tmp384, bytetest_b3_b3);
          struct_Mn.cc = simd_or(r800_ffff_tmp386, struct_Mn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_a6 = simd_and(r800_ffff_tmp2, tmp66);
          bytetest_b6_b9 = simd_and(r800_ffff_tmp36, r800_ffff_tmp4);
          r800_ffff_tmp387 = simd_and(r800_ffff_tmp384, bytetest_b6_b9);
          struct_Mn.cc = simd_or(r800_ffff_tmp387, struct_Mn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_a6 = simd_and(r800_ffff_tmp2, tmp66);
          bytetest_bc_bc = simd_and(r800_ffff_tmp36, r800_ffff_tmp38);
          r800_ffff_tmp388 = simd_and(r800_ffff_tmp384, bytetest_bc_bc);
          struct_Mn.cc = simd_or(r800_ffff_tmp388, struct_Mn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_a8 = simd_and(r800_ffff_tmp2, r800_ffff_tmp62);
          r800_ffff_tmp389 = simd_or(simd_and(basis_bits.bit_5, tmp39), simd_andc(tmp5, basis_bits.bit_5));
          bytetest_a9_ae = simd_and(r800_ffff_tmp18, r800_ffff_tmp389);
          r800_ffff_tmp390 = simd_and(r800_ffff_tmp352, bytetest_a8);
          carryQ.cq[100] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp390, carryQ.get_carry_in(100), r800_ffff_tmp391));
          r800_ffff_tmp392 = simd_and(r800_ffff_tmp391, bytetest_a9_ae);
          struct_Mn.cc = simd_or(r800_ffff_tmp392, struct_Mn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_a8 = simd_and(r800_ffff_tmp2, r800_ffff_tmp62);
          r800_ffff_tmp393 = simd_andc(r800_ffff_tmp36, tmp4);
          bytetest_b1_b2 = simd_and(r800_ffff_tmp393, tmp45);
          r800_ffff_tmp394 = simd_and(r800_ffff_tmp391, bytetest_b1_b2);
          struct_Mn.cc = simd_or(r800_ffff_tmp394, struct_Mn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_a8 = simd_and(r800_ffff_tmp2, r800_ffff_tmp62);
          r800_ffff_tmp395 = simd_and(r800_ffff_tmp36, tmp47);
          bytetest_b5_b6 = simd_and(r800_ffff_tmp395, tmp45);
          r800_ffff_tmp396 = simd_and(r800_ffff_tmp391, bytetest_b5_b6);
          struct_Mn.cc = simd_or(r800_ffff_tmp396, struct_Mn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_a9 = simd_and(r800_ffff_tmp2, tmp116);
          bytetest_83_83 = simd_and(r800_ffff_tmp31, tmp122);
          r800_ffff_tmp397 = simd_and(r800_ffff_tmp352, bytetest_a9);
          carryQ.cq[101] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp397, carryQ.get_carry_in(101), r800_ffff_tmp398));
          r800_ffff_tmp399 = simd_and(r800_ffff_tmp398, bytetest_83_83);
          struct_Mn.cc = simd_or(r800_ffff_tmp399, struct_Mn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_a9 = simd_and(r800_ffff_tmp2, tmp116);
          bytetest_8c_8c = simd_and(r800_ffff_tmp31, r800_ffff_tmp38);
          r800_ffff_tmp400 = simd_and(r800_ffff_tmp398, bytetest_8c_8c);
          struct_Mn.cc = simd_or(r800_ffff_tmp400, struct_Mn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_aa = simd_and(r800_ffff_tmp2, tmp74);
          bytetest_b0_b0 = simd_andc(r800_ffff_tmp36, tmp6);
          r800_ffff_tmp401 = simd_and(r800_ffff_tmp352, bytetest_aa);
          carryQ.cq[102] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp401, carryQ.get_carry_in(102), r800_ffff_tmp402));
          r800_ffff_tmp403 = simd_and(r800_ffff_tmp402, bytetest_b0_b0);
          struct_Mn.cc = simd_or(r800_ffff_tmp403, struct_Mn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_aa = simd_and(r800_ffff_tmp2, tmp74);
          bytetest_b2_b4 = simd_and(r800_ffff_tmp197, tmp118);
          r800_ffff_tmp404 = simd_and(r800_ffff_tmp402, bytetest_b2_b4);
          struct_Mn.cc = simd_or(r800_ffff_tmp404, struct_Mn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_aa = simd_and(r800_ffff_tmp2, tmp74);
          bytetest_b7_b8 = simd_and(r800_ffff_tmp36, r800_ffff_tmp70);
          r800_ffff_tmp405 = simd_and(r800_ffff_tmp402, bytetest_b7_b8);
          struct_Mn.cc = simd_or(r800_ffff_tmp405, struct_Mn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_aa = simd_and(r800_ffff_tmp2, tmp74);
          bytetest_be_bf = simd_and(r800_ffff_tmp36, r800_ffff_tmp109);
          r800_ffff_tmp406 = simd_and(r800_ffff_tmp402, bytetest_be_bf);
          struct_Mn.cc = simd_or(r800_ffff_tmp406, struct_Mn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_ab = simd_and(r800_ffff_tmp2, tmp75);
          bytetest_81_81 = simd_and(r800_ffff_tmp31, tmp11);
          r800_ffff_tmp407 = simd_and(r800_ffff_tmp352, bytetest_ab);
          carryQ.cq[103] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp407, carryQ.get_carry_in(103), r800_ffff_tmp408));
          r800_ffff_tmp409 = simd_and(r800_ffff_tmp408, bytetest_81_81);
          struct_Mn.cc = simd_or(r800_ffff_tmp409, struct_Mn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_ab = simd_and(r800_ffff_tmp2, tmp75);
          bytetest_ac_ad = simd_and(r800_ffff_tmp2, r800_ffff_tmp127);
          r800_ffff_tmp410 = simd_and(r800_ffff_tmp408, bytetest_ac_ad);
          struct_Mn.cc = simd_or(r800_ffff_tmp410, struct_Mn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_ab = simd_and(r800_ffff_tmp2, tmp75);
          bytetest_b6_b6 = simd_and(r800_ffff_tmp36, tmp66);
          r800_ffff_tmp411 = simd_and(r800_ffff_tmp408, bytetest_b6_b6);
          struct_Mn.cc = simd_or(r800_ffff_tmp411, struct_Mn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_af = simd_and(r800_ffff_tmp2, tmp88);
          bytetest_a5_a5 = simd_and(r800_ffff_tmp2, tmp95);
          r800_ffff_tmp412 = simd_and(r800_ffff_tmp352, bytetest_af);
          carryQ.cq[104] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp412, carryQ.get_carry_in(104), r800_ffff_tmp413));
          r800_ffff_tmp414 = simd_and(r800_ffff_tmp413, bytetest_a5_a5);
          struct_Mn.cc = simd_or(r800_ffff_tmp414, struct_Mn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_af = simd_and(r800_ffff_tmp2, tmp88);
          bytetest_a8_a8 = simd_and(r800_ffff_tmp2, r800_ffff_tmp62);
          r800_ffff_tmp415 = simd_and(r800_ffff_tmp413, bytetest_a8_a8);
          struct_Mn.cc = simd_or(r800_ffff_tmp415, struct_Mn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_af = simd_and(r800_ffff_tmp2, tmp88);
          bytetest_ad_ad = simd_and(r800_ffff_tmp2, tmp79);
          r800_ffff_tmp416 = simd_and(r800_ffff_tmp413, bytetest_ad_ad);
          struct_Mn.cc = simd_or(r800_ffff_tmp416, struct_Mn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp88);
          bytetest_ac = simd_and(r800_ffff_tmp2, r800_ffff_tmp38);
          bytetest_9e_9e = simd_and(r800_ffff_tmp3, tmp84);
          r800_ffff_tmp417 = simd_and(tmp15, bytetest_ef);
          carryQ.cq[105] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp417, carryQ.get_carry_in(105), r800_ffff_tmp418));
          r800_ffff_tmp419 = simd_and(r800_ffff_tmp418, bytetest_ac);
          carryQ.cq[106] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp419, carryQ.get_carry_in(106), r800_ffff_tmp420));
          r800_ffff_tmp421 = simd_and(r800_ffff_tmp420, bytetest_9e_9e);
          struct_Mn.cc = simd_or(r800_ffff_tmp421, struct_Mn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp88);
          bytetest_b8 = simd_and(r800_ffff_tmp36, r800_ffff_tmp62);
          bytetest_80_8f = simd_andc(bytetest_80_bf, tmp12);
          r800_ffff_tmp422 = simd_and(r800_ffff_tmp418, bytetest_b8);
          carryQ.cq[107] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp422, carryQ.get_carry_in(107), r800_ffff_tmp423));
          r800_ffff_tmp424 = simd_and(r800_ffff_tmp423, bytetest_80_8f);
          struct_Mn.cc = simd_or(r800_ffff_tmp424, struct_Mn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp88);
          bytetest_b8 = simd_and(r800_ffff_tmp36, r800_ffff_tmp62);
          bytetest_a0_a6 = simd_andc(r800_ffff_tmp290, tmp25);
          r800_ffff_tmp425 = simd_and(r800_ffff_tmp423, bytetest_a0_a6);
          struct_Mn.cc = simd_or(r800_ffff_tmp425, struct_Mn.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(32, 76);
        }
        bytetest_f0 = simd_andc(tmp3, tmp6);
        tmp144 = simd_and(bytetest_80_bf, tmp8);
        bytetest_90 = simd_andc(tmp144, tmp6);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp145 = simd_and(tmp17, bytetest_90);
        carryQ.cq[108] = carryout2carry(pablo_blk_Advance(tmp145, carryQ.get_carry_in(108), tmp146));
        tmp147 = simd_and(tmp146, bytetest_80_bf);
        if ((bitblock::any(tmp147) || carryQ.CarryTest(109, 3))) {
          bytetest_f0 = simd_andc(tmp3, tmp6);
          r10000_10fff_tmp1 = simd_and(bytetest_80_bf, tmp8);
          bytetest_90 = simd_andc(r10000_10fff_tmp1, tmp6);
          r10000_10fff_tmp2 = simd_andc(bytetest_80_bf, tmp12);
          bytetest_87 = simd_and(r10000_10fff_tmp2, tmp82);
          r10000_10fff_tmp3 = simd_and(bytetest_80_bf, tmp2);
          bytetest_bd_bd = simd_and(r10000_10fff_tmp3, tmp79);
          r10000_10fff_tmp4 = simd_and(tmp17, bytetest_90);
          carryQ.cq[109] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp4, carryQ.get_carry_in(109), r10000_10fff_tmp5));
          r10000_10fff_tmp6 = simd_and(r10000_10fff_tmp5, bytetest_87);
          carryQ.cq[110] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp6, carryQ.get_carry_in(110), r10000_10fff_tmp7));
          r10000_10fff_tmp8 = simd_and(r10000_10fff_tmp7, bytetest_bd_bd);
          struct_Mn.cc = simd_or(r10000_10fff_tmp8, struct_Mn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(r10000_10fff_tmp1, tmp6);
          r10000_10fff_tmp9 = simd_and(bytetest_80_bf, tmp53);
          r10000_10fff_tmp10 = simd_andc(tmp42, tmp5);
          bytetest_a8 = simd_and(r10000_10fff_tmp9, r10000_10fff_tmp10);
          r10000_10fff_tmp11 = simd_andc(r10000_10fff_tmp2, tmp4);
          bytetest_81_83 = simd_and(r10000_10fff_tmp11, tmp5);
          r10000_10fff_tmp12 = simd_and(r10000_10fff_tmp5, bytetest_a8);
          carryQ.cq[111] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp12, carryQ.get_carry_in(111), r10000_10fff_tmp13));
          r10000_10fff_tmp14 = simd_and(r10000_10fff_tmp13, bytetest_81_83);
          struct_Mn.cc = simd_or(r10000_10fff_tmp14, struct_Mn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(r10000_10fff_tmp1, tmp6);
          bytetest_a8 = simd_and(r10000_10fff_tmp9, r10000_10fff_tmp10);
          r10000_10fff_tmp15 = simd_and(r10000_10fff_tmp2, tmp47);
          bytetest_85_86 = simd_and(r10000_10fff_tmp15, tmp45);
          r10000_10fff_tmp16 = simd_and(r10000_10fff_tmp13, bytetest_85_86);
          struct_Mn.cc = simd_or(r10000_10fff_tmp16, struct_Mn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(r10000_10fff_tmp1, tmp6);
          bytetest_a8 = simd_and(r10000_10fff_tmp9, r10000_10fff_tmp10);
          bytetest_8c_8f = simd_and(r10000_10fff_tmp2, tmp62);
          r10000_10fff_tmp17 = simd_and(r10000_10fff_tmp13, bytetest_8c_8f);
          struct_Mn.cc = simd_or(r10000_10fff_tmp17, struct_Mn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(r10000_10fff_tmp1, tmp6);
          bytetest_a8 = simd_and(r10000_10fff_tmp9, r10000_10fff_tmp10);
          r10000_10fff_tmp18 = simd_and(r10000_10fff_tmp3, tmp42);
          bytetest_b8_ba = simd_andc(r10000_10fff_tmp18, tmp24);
          r10000_10fff_tmp19 = simd_and(r10000_10fff_tmp13, bytetest_b8_ba);
          struct_Mn.cc = simd_or(r10000_10fff_tmp19, struct_Mn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(r10000_10fff_tmp1, tmp6);
          bytetest_a8 = simd_and(r10000_10fff_tmp9, r10000_10fff_tmp10);
          bytetest_bf_bf = simd_and(r10000_10fff_tmp3, tmp88);
          r10000_10fff_tmp20 = simd_and(r10000_10fff_tmp13, bytetest_bf_bf);
          struct_Mn.cc = simd_or(r10000_10fff_tmp20, struct_Mn.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(109, 3);
        }
  }
  CarryArray<112, 0> carryQ;
  };

  struct Sk {
  Sk() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Sk & struct_Sk) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_5e_5e, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, bytetest_60_60, tmp12, tmp13, tmp14, tmp15;
		BitBlock bytetest_c2_df, r80_7ff_tmp1, r80_7ff_tmp2, r80_7ff_tmp3;
		BitBlock r80_7ff_tmp4, bytetest_c2, r80_7ff_tmp5, r80_7ff_tmp6, r80_7ff_tmp7;
		BitBlock r80_7ff_tmp8, bytetest_a8_a8, r80_7ff_tmp9, r80_7ff_tmp10;
		BitBlock r80_7ff_tmp11, r80_7ff_tmp12, r80_7ff_tmp13, r80_7ff_tmp14;
		BitBlock r80_7ff_tmp15, bytetest_af_af, r80_7ff_tmp16, r80_7ff_tmp17;
		BitBlock r80_7ff_tmp18, r80_7ff_tmp19, r80_7ff_tmp20, bytetest_b4_b4;
		BitBlock r80_7ff_tmp21, bytetest_b8_b8, r80_7ff_tmp22, r80_7ff_tmp23;
		BitBlock bytetest_cb, r80_7ff_tmp24, r80_7ff_tmp25, r80_7ff_tmp26;
		BitBlock r80_7ff_tmp27, bytetest_82_85, r80_7ff_tmp28, r80_7ff_tmp29;
		BitBlock r80_7ff_tmp30, r80_7ff_tmp31, r80_7ff_tmp32, r80_7ff_tmp33;
		BitBlock bytetest_92_9f, r80_7ff_tmp34, r80_7ff_tmp35, r80_7ff_tmp36;
		BitBlock r80_7ff_tmp37, bytetest_a5_ab, r80_7ff_tmp38, r80_7ff_tmp39;
		BitBlock r80_7ff_tmp40, bytetest_ad_ad, r80_7ff_tmp41, r80_7ff_tmp42;
		BitBlock r80_7ff_tmp43, bytetest_af_bf, r80_7ff_tmp44, bytetest_cd;
		BitBlock r80_7ff_tmp45, bytetest_b5_b5, r80_7ff_tmp46, r80_7ff_tmp47;
		BitBlock r80_7ff_tmp48, bytetest_ce, r80_7ff_tmp49, bytetest_84_85;
		BitBlock r80_7ff_tmp50, r80_7ff_tmp51, r80_7ff_tmp52, tmp16, tmp17, tmp18;
		BitBlock bytetest_e1_ef, bytetest_e0, tmp19, bytetest_a0_bf, tmp20, tmp21;
		BitBlock tmp22, tmp23, tmp24, tmp25, r800_ffff_tmp1, r800_ffff_tmp2;
		BitBlock r800_ffff_tmp3, bytetest_e1, r800_ffff_tmp4, r800_ffff_tmp5;
		BitBlock r800_ffff_tmp6, bytetest_be, r800_ffff_tmp7, bytetest_bd_bd;
		BitBlock r800_ffff_tmp8, r800_ffff_tmp9, r800_ffff_tmp10, r800_ffff_tmp11;
		BitBlock r800_ffff_tmp12, r800_ffff_tmp13, r800_ffff_tmp14, r800_ffff_tmp15;
		BitBlock r800_ffff_tmp16, bytetest_bf, r800_ffff_tmp17, r800_ffff_tmp18;
		BitBlock bytetest_80_81, r800_ffff_tmp19, r800_ffff_tmp20, r800_ffff_tmp21;
		BitBlock bytetest_bf_bf, r800_ffff_tmp22, r800_ffff_tmp23, r800_ffff_tmp24;
		BitBlock bytetest_8d_8f, r800_ffff_tmp25, r800_ffff_tmp26, r800_ffff_tmp27;
		BitBlock bytetest_9d_9f, r800_ffff_tmp28, r800_ffff_tmp29, r800_ffff_tmp30;
		BitBlock bytetest_ad_af, r800_ffff_tmp31, r800_ffff_tmp32, r800_ffff_tmp33;
		BitBlock r800_ffff_tmp34, bytetest_bd_be, r800_ffff_tmp35, r800_ffff_tmp36;
		BitBlock bytetest_e3, r800_ffff_tmp37, bytetest_82, r800_ffff_tmp38;
		BitBlock r800_ffff_tmp39, r800_ffff_tmp40, bytetest_9b_9c, r800_ffff_tmp41;
		BitBlock r800_ffff_tmp42, r800_ffff_tmp43, r800_ffff_tmp44, r800_ffff_tmp45;
		BitBlock r800_ffff_tmp46, r800_ffff_tmp47, bytetest_ea, r800_ffff_tmp48;
		BitBlock bytetest_9c, r800_ffff_tmp49, r800_ffff_tmp50, r800_ffff_tmp51;
		BitBlock r800_ffff_tmp52, bytetest_80_96, r800_ffff_tmp53, r800_ffff_tmp54;
		BitBlock r800_ffff_tmp55, r800_ffff_tmp56, r800_ffff_tmp57, bytetest_a0_a1;
		BitBlock r800_ffff_tmp58, bytetest_9e, r800_ffff_tmp59, bytetest_89_8a;
		BitBlock r800_ffff_tmp60, r800_ffff_tmp61, r800_ffff_tmp62, bytetest_ef;
		BitBlock bytetest_af, r800_ffff_tmp63, r800_ffff_tmp64, r800_ffff_tmp65;
		BitBlock r800_ffff_tmp66, r800_ffff_tmp67, bytetest_ae, r800_ffff_tmp68;
		BitBlock r800_ffff_tmp69, bytetest_b2_bf, r800_ffff_tmp70, r800_ffff_tmp71;
		BitBlock r800_ffff_tmp72, r800_ffff_tmp73, bytetest_bc, bytetest_be_be;
		BitBlock r800_ffff_tmp74, r800_ffff_tmp75, r800_ffff_tmp76, bytetest_bd;
		BitBlock bytetest_80_80, r800_ffff_tmp77, r800_ffff_tmp78, r800_ffff_tmp79;
		BitBlock bytetest_a3_a3, r800_ffff_tmp80, r800_ffff_tmp81, r800_ffff_tmp82;




        struct_Sk.cc = simd<1>::constant<0>();
        tmp1 = simd_andc(basis_bits.bit_1, basis_bits.bit_0);
        tmp2 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp3 = simd_and(tmp1, tmp2);
        tmp4 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_and(tmp4, tmp5);
        bytetest_5e_5e = simd_and(tmp3, tmp6);
        struct_Sk.cc = simd_or(bytetest_5e_5e, struct_Sk.cc);
        tmp7 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp8 = simd_and(tmp1, tmp7);
        tmp9 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp10 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp11 = simd_or(tmp9, tmp10);
        bytetest_60_60 = simd_andc(tmp8, tmp11);
        struct_Sk.cc = simd_or(bytetest_60_60, struct_Sk.cc);
        tmp12 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp13 = simd_andc(tmp12, basis_bits.bit_2);
        tmp14 = simd_or(tmp9, basis_bits.bit_6);
        tmp15 = simd_or(basis_bits.bit_3, tmp14);
        bytetest_c2_df = simd_and(tmp13, tmp15);
        if ((bitblock::any(bytetest_c2_df) || carryQ.CarryTest(0, 5))) {
          r80_7ff_tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
          r80_7ff_tmp2 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
          r80_7ff_tmp3 = simd_andc(r80_7ff_tmp1, r80_7ff_tmp2);
          r80_7ff_tmp4 = simd_andc(tmp5, tmp9);
          bytetest_c2 = simd_and(r80_7ff_tmp3, r80_7ff_tmp4);
          r80_7ff_tmp5 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r80_7ff_tmp6 = simd_and(r80_7ff_tmp5, tmp7);
          r80_7ff_tmp7 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
          r80_7ff_tmp8 = simd_andc(r80_7ff_tmp7, tmp10);
          bytetest_a8_a8 = simd_and(r80_7ff_tmp6, r80_7ff_tmp8);
          r80_7ff_tmp9 = simd<1>::constant<1>();
          carryQ.cq[0] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp9, carryQ.get_carry_in(0), r80_7ff_tmp10));
          r80_7ff_tmp11 = simd_and(r80_7ff_tmp10, bytetest_c2);
          carryQ.cq[1] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp11, carryQ.get_carry_in(1), r80_7ff_tmp12));
          r80_7ff_tmp13 = simd_and(r80_7ff_tmp12, bytetest_a8_a8);
          struct_Sk.cc = simd_or(r80_7ff_tmp13, struct_Sk.cc);
          bytetest_c2 = simd_and(r80_7ff_tmp3, r80_7ff_tmp4);
          r80_7ff_tmp14 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
          r80_7ff_tmp15 = simd_and(tmp4, r80_7ff_tmp14);
          bytetest_af_af = simd_and(r80_7ff_tmp6, r80_7ff_tmp15);
          r80_7ff_tmp16 = simd_and(r80_7ff_tmp12, bytetest_af_af);
          struct_Sk.cc = simd_or(r80_7ff_tmp16, struct_Sk.cc);
          bytetest_c2 = simd_and(r80_7ff_tmp3, r80_7ff_tmp4);
          r80_7ff_tmp17 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
          r80_7ff_tmp18 = simd_and(r80_7ff_tmp5, r80_7ff_tmp17);
          r80_7ff_tmp19 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
          r80_7ff_tmp20 = simd_andc(r80_7ff_tmp19, tmp10);
          bytetest_b4_b4 = simd_and(r80_7ff_tmp18, r80_7ff_tmp20);
          r80_7ff_tmp21 = simd_and(r80_7ff_tmp12, bytetest_b4_b4);
          struct_Sk.cc = simd_or(r80_7ff_tmp21, struct_Sk.cc);
          bytetest_c2 = simd_and(r80_7ff_tmp3, r80_7ff_tmp4);
          bytetest_b8_b8 = simd_and(r80_7ff_tmp18, r80_7ff_tmp8);
          r80_7ff_tmp22 = simd_and(r80_7ff_tmp12, bytetest_b8_b8);
          struct_Sk.cc = simd_or(r80_7ff_tmp22, struct_Sk.cc);
          r80_7ff_tmp23 = simd_and(r80_7ff_tmp7, r80_7ff_tmp14);
          bytetest_cb = simd_and(r80_7ff_tmp3, r80_7ff_tmp23);
          r80_7ff_tmp24 = simd_andc(r80_7ff_tmp5, r80_7ff_tmp2);
          r80_7ff_tmp25 = simd_andc(r80_7ff_tmp24, basis_bits.bit_4);
          r80_7ff_tmp26 = simd_not(basis_bits.bit_6);
          r80_7ff_tmp27 = simd_or(simd_and(basis_bits.bit_5, r80_7ff_tmp26), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
          bytetest_82_85 = simd_and(r80_7ff_tmp25, r80_7ff_tmp27);
          r80_7ff_tmp28 = simd_and(r80_7ff_tmp10, bytetest_cb);
          carryQ.cq[2] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp28, carryQ.get_carry_in(2), r80_7ff_tmp29));
          r80_7ff_tmp30 = simd_and(r80_7ff_tmp29, bytetest_82_85);
          struct_Sk.cc = simd_or(r80_7ff_tmp30, struct_Sk.cc);
          bytetest_cb = simd_and(r80_7ff_tmp3, r80_7ff_tmp23);
          r80_7ff_tmp31 = simd_and(r80_7ff_tmp5, tmp2);
          r80_7ff_tmp32 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
          r80_7ff_tmp33 = simd_or(basis_bits.bit_4, r80_7ff_tmp32);
          bytetest_92_9f = simd_and(r80_7ff_tmp31, r80_7ff_tmp33);
          r80_7ff_tmp34 = simd_and(r80_7ff_tmp29, bytetest_92_9f);
          struct_Sk.cc = simd_or(r80_7ff_tmp34, struct_Sk.cc);
          bytetest_cb = simd_and(r80_7ff_tmp3, r80_7ff_tmp23);
          r80_7ff_tmp35 = simd_not(basis_bits.bit_5);
          r80_7ff_tmp36 = simd_and(basis_bits.bit_5, tmp10);
          r80_7ff_tmp37 = simd_or(simd_and(basis_bits.bit_4, r80_7ff_tmp35), simd_andc(r80_7ff_tmp36, basis_bits.bit_4));
          bytetest_a5_ab = simd_and(r80_7ff_tmp6, r80_7ff_tmp37);
          r80_7ff_tmp38 = simd_and(r80_7ff_tmp29, bytetest_a5_ab);
          struct_Sk.cc = simd_or(r80_7ff_tmp38, struct_Sk.cc);
          bytetest_cb = simd_and(r80_7ff_tmp3, r80_7ff_tmp23);
          r80_7ff_tmp39 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
          r80_7ff_tmp40 = simd_and(tmp4, r80_7ff_tmp39);
          bytetest_ad_ad = simd_and(r80_7ff_tmp6, r80_7ff_tmp40);
          r80_7ff_tmp41 = simd_and(r80_7ff_tmp29, bytetest_ad_ad);
          struct_Sk.cc = simd_or(r80_7ff_tmp41, struct_Sk.cc);
          bytetest_cb = simd_and(r80_7ff_tmp3, r80_7ff_tmp23);
          r80_7ff_tmp42 = simd_and(r80_7ff_tmp5, basis_bits.bit_2);
          r80_7ff_tmp43 = simd_or(basis_bits.bit_3, r80_7ff_tmp15);
          bytetest_af_bf = simd_and(r80_7ff_tmp42, r80_7ff_tmp43);
          r80_7ff_tmp44 = simd_and(r80_7ff_tmp29, bytetest_af_bf);
          struct_Sk.cc = simd_or(r80_7ff_tmp44, struct_Sk.cc);
          bytetest_cd = simd_and(r80_7ff_tmp3, r80_7ff_tmp40);
          r80_7ff_tmp45 = simd_and(r80_7ff_tmp19, r80_7ff_tmp39);
          bytetest_b5_b5 = simd_and(r80_7ff_tmp18, r80_7ff_tmp45);
          r80_7ff_tmp46 = simd_and(r80_7ff_tmp10, bytetest_cd);
          carryQ.cq[3] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp46, carryQ.get_carry_in(3), r80_7ff_tmp47));
          r80_7ff_tmp48 = simd_and(r80_7ff_tmp47, bytetest_b5_b5);
          struct_Sk.cc = simd_or(r80_7ff_tmp48, struct_Sk.cc);
          bytetest_ce = simd_and(r80_7ff_tmp3, tmp6);
          r80_7ff_tmp49 = simd_andc(r80_7ff_tmp19, basis_bits.bit_6);
          bytetest_84_85 = simd_and(r80_7ff_tmp24, r80_7ff_tmp49);
          r80_7ff_tmp50 = simd_and(r80_7ff_tmp10, bytetest_ce);
          carryQ.cq[4] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp50, carryQ.get_carry_in(4), r80_7ff_tmp51));
          r80_7ff_tmp52 = simd_and(r80_7ff_tmp51, bytetest_84_85);
          struct_Sk.cc = simd_or(r80_7ff_tmp52, struct_Sk.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(0, 5);
        }
        tmp16 = simd_and(tmp12, tmp7);
        tmp17 = simd_or(basis_bits.bit_5, tmp10);
        tmp18 = simd_or(basis_bits.bit_4, tmp17);
        bytetest_e1_ef = simd_and(tmp16, tmp18);
        bytetest_e0 = simd_andc(tmp16, tmp11);
        tmp19 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_a0_bf = simd_and(tmp19, basis_bits.bit_2);
        tmp20 = simd<1>::constant<1>();
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp20, carryQ.get_carry_in(5), tmp21));
        tmp22 = simd_and(tmp21, bytetest_e0);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp22, carryQ.get_carry_in(6), tmp23));
        tmp24 = simd_and(tmp23, bytetest_a0_bf);
        tmp25 = simd_or(tmp24, bytetest_e1_ef);
        if ((bitblock::any(tmp25) || carryQ.CarryTest(7, 15))) {
          r800_ffff_tmp1 = simd_and(tmp12, tmp7);
          r800_ffff_tmp2 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
          r800_ffff_tmp3 = simd_andc(r800_ffff_tmp2, tmp9);
          bytetest_e1 = simd_and(r800_ffff_tmp1, r800_ffff_tmp3);
          r800_ffff_tmp4 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp5 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp6 = simd_and(r800_ffff_tmp4, r800_ffff_tmp5);
          bytetest_be = simd_and(r800_ffff_tmp6, tmp6);
          r800_ffff_tmp7 = simd_and(tmp4, r800_ffff_tmp2);
          bytetest_bd_bd = simd_and(r800_ffff_tmp6, r800_ffff_tmp7);
          r800_ffff_tmp8 = simd<1>::constant<1>();
          carryQ.cq[7] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp8, carryQ.get_carry_in(7), r800_ffff_tmp9));
          r800_ffff_tmp10 = simd_and(r800_ffff_tmp9, bytetest_e1);
          carryQ.cq[8] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp10, carryQ.get_carry_in(8), r800_ffff_tmp11));
          r800_ffff_tmp12 = simd_and(r800_ffff_tmp11, bytetest_be);
          carryQ.cq[9] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp12, carryQ.get_carry_in(9), r800_ffff_tmp13));
          r800_ffff_tmp14 = simd_and(r800_ffff_tmp13, bytetest_bd_bd);
          struct_Sk.cc = simd_or(r800_ffff_tmp14, struct_Sk.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, r800_ffff_tmp3);
          r800_ffff_tmp15 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp16 = simd_and(tmp4, r800_ffff_tmp15);
          bytetest_bf = simd_and(r800_ffff_tmp6, r800_ffff_tmp16);
          r800_ffff_tmp17 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp18 = simd_andc(r800_ffff_tmp4, r800_ffff_tmp17);
          bytetest_80_81 = simd_andc(r800_ffff_tmp18, tmp14);
          r800_ffff_tmp19 = simd_and(r800_ffff_tmp11, bytetest_bf);
          carryQ.cq[10] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp19, carryQ.get_carry_in(10), r800_ffff_tmp20));
          r800_ffff_tmp21 = simd_and(r800_ffff_tmp20, bytetest_80_81);
          bytetest_be = simd_and(r800_ffff_tmp6, tmp6);
          bytetest_bf_bf = simd_and(r800_ffff_tmp6, r800_ffff_tmp16);
          r800_ffff_tmp22 = simd_and(r800_ffff_tmp13, bytetest_bf_bf);
          r800_ffff_tmp23 = simd_or(r800_ffff_tmp22, r800_ffff_tmp21);
          struct_Sk.cc = simd_or(r800_ffff_tmp23, struct_Sk.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, r800_ffff_tmp3);
          bytetest_bf = simd_and(r800_ffff_tmp6, r800_ffff_tmp16);
          r800_ffff_tmp24 = simd_and(r800_ffff_tmp18, tmp4);
          bytetest_8d_8f = simd_and(r800_ffff_tmp24, tmp10);
          r800_ffff_tmp25 = simd_and(r800_ffff_tmp20, bytetest_8d_8f);
          struct_Sk.cc = simd_or(r800_ffff_tmp25, struct_Sk.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, r800_ffff_tmp3);
          bytetest_bf = simd_and(r800_ffff_tmp6, r800_ffff_tmp16);
          r800_ffff_tmp26 = simd_and(r800_ffff_tmp4, tmp2);
          r800_ffff_tmp27 = simd_and(r800_ffff_tmp26, tmp4);
          bytetest_9d_9f = simd_and(r800_ffff_tmp27, tmp10);
          r800_ffff_tmp28 = simd_and(r800_ffff_tmp20, bytetest_9d_9f);
          struct_Sk.cc = simd_or(r800_ffff_tmp28, struct_Sk.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, r800_ffff_tmp3);
          bytetest_bf = simd_and(r800_ffff_tmp6, r800_ffff_tmp16);
          r800_ffff_tmp29 = simd_and(r800_ffff_tmp4, tmp7);
          r800_ffff_tmp30 = simd_and(r800_ffff_tmp29, tmp4);
          bytetest_ad_af = simd_and(r800_ffff_tmp30, tmp10);
          r800_ffff_tmp31 = simd_and(r800_ffff_tmp20, bytetest_ad_af);
          struct_Sk.cc = simd_or(r800_ffff_tmp31, struct_Sk.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, r800_ffff_tmp3);
          bytetest_bf = simd_and(r800_ffff_tmp6, r800_ffff_tmp16);
          r800_ffff_tmp32 = simd_and(r800_ffff_tmp6, tmp4);
          r800_ffff_tmp33 = simd_not(basis_bits.bit_7);
          r800_ffff_tmp34 = simd_or(simd_and(basis_bits.bit_6, r800_ffff_tmp33), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
          bytetest_bd_be = simd_and(r800_ffff_tmp32, r800_ffff_tmp34);
          r800_ffff_tmp35 = simd_and(r800_ffff_tmp20, bytetest_bd_be);
          struct_Sk.cc = simd_or(r800_ffff_tmp35, struct_Sk.cc);
          r800_ffff_tmp36 = simd_andc(r800_ffff_tmp15, tmp9);
          bytetest_e3 = simd_and(r800_ffff_tmp1, r800_ffff_tmp36);
          r800_ffff_tmp37 = simd_andc(tmp5, tmp9);
          bytetest_82 = simd_and(r800_ffff_tmp18, r800_ffff_tmp37);
          r800_ffff_tmp38 = simd_and(r800_ffff_tmp26, basis_bits.bit_4);
          r800_ffff_tmp39 = simd_not(tmp10);
          r800_ffff_tmp40 = simd_or(simd_and(basis_bits.bit_5, r800_ffff_tmp39), simd_andc(r800_ffff_tmp15, basis_bits.bit_5));
          bytetest_9b_9c = simd_and(r800_ffff_tmp38, r800_ffff_tmp40);
          r800_ffff_tmp41 = simd_and(r800_ffff_tmp9, bytetest_e3);
          carryQ.cq[11] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp41, carryQ.get_carry_in(11), r800_ffff_tmp42));
          r800_ffff_tmp43 = simd_and(r800_ffff_tmp42, bytetest_82);
          carryQ.cq[12] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp43, carryQ.get_carry_in(12), r800_ffff_tmp44));
          r800_ffff_tmp45 = simd_and(r800_ffff_tmp44, bytetest_9b_9c);
          struct_Sk.cc = simd_or(r800_ffff_tmp45, struct_Sk.cc);
          r800_ffff_tmp46 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
          r800_ffff_tmp47 = simd_and(r800_ffff_tmp46, tmp5);
          bytetest_ea = simd_and(r800_ffff_tmp1, r800_ffff_tmp47);
          r800_ffff_tmp48 = simd_andc(tmp4, tmp10);
          bytetest_9c = simd_and(r800_ffff_tmp26, r800_ffff_tmp48);
          r800_ffff_tmp49 = simd_andc(r800_ffff_tmp4, basis_bits.bit_2);
          r800_ffff_tmp50 = simd_and(basis_bits.bit_5, r800_ffff_tmp15);
          r800_ffff_tmp51 = simd_or(basis_bits.bit_4, r800_ffff_tmp50);
          r800_ffff_tmp52 = simd_and(basis_bits.bit_3, r800_ffff_tmp51);
          bytetest_80_96 = simd_andc(r800_ffff_tmp49, r800_ffff_tmp52);
          r800_ffff_tmp53 = simd_and(r800_ffff_tmp9, bytetest_ea);
          carryQ.cq[13] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp53, carryQ.get_carry_in(13), r800_ffff_tmp54));
          r800_ffff_tmp55 = simd_and(r800_ffff_tmp54, bytetest_9c);
          carryQ.cq[14] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp55, carryQ.get_carry_in(14), r800_ffff_tmp56));
          r800_ffff_tmp57 = simd_and(r800_ffff_tmp56, bytetest_80_96);
          struct_Sk.cc = simd_or(r800_ffff_tmp57, struct_Sk.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, r800_ffff_tmp47);
          bytetest_9c = simd_and(r800_ffff_tmp26, r800_ffff_tmp48);
          bytetest_a0_a1 = simd_andc(r800_ffff_tmp29, tmp14);
          r800_ffff_tmp58 = simd_and(r800_ffff_tmp56, bytetest_a0_a1);
          struct_Sk.cc = simd_or(r800_ffff_tmp58, struct_Sk.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, r800_ffff_tmp47);
          bytetest_9e = simd_and(r800_ffff_tmp26, tmp6);
          r800_ffff_tmp59 = simd_and(r800_ffff_tmp18, r800_ffff_tmp46);
          bytetest_89_8a = simd_and(r800_ffff_tmp59, r800_ffff_tmp34);
          r800_ffff_tmp60 = simd_and(r800_ffff_tmp54, bytetest_9e);
          carryQ.cq[15] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp60, carryQ.get_carry_in(15), r800_ffff_tmp61));
          r800_ffff_tmp62 = simd_and(r800_ffff_tmp61, bytetest_89_8a);
          struct_Sk.cc = simd_or(r800_ffff_tmp62, struct_Sk.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, r800_ffff_tmp16);
          bytetest_af = simd_and(r800_ffff_tmp29, r800_ffff_tmp16);
          bytetest_80_81 = simd_andc(r800_ffff_tmp18, tmp14);
          r800_ffff_tmp63 = simd_and(r800_ffff_tmp9, bytetest_ef);
          carryQ.cq[16] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp63, carryQ.get_carry_in(16), r800_ffff_tmp64));
          r800_ffff_tmp65 = simd_and(r800_ffff_tmp64, bytetest_af);
          carryQ.cq[17] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp65, carryQ.get_carry_in(17), r800_ffff_tmp66));
          r800_ffff_tmp67 = simd_and(r800_ffff_tmp66, bytetest_80_81);
          bytetest_ae = simd_and(r800_ffff_tmp29, tmp6);
          r800_ffff_tmp68 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
          r800_ffff_tmp69 = simd_or(basis_bits.bit_4, r800_ffff_tmp68);
          bytetest_b2_bf = simd_and(r800_ffff_tmp6, r800_ffff_tmp69);
          r800_ffff_tmp70 = simd_and(r800_ffff_tmp64, bytetest_ae);
          carryQ.cq[18] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp70, carryQ.get_carry_in(18), r800_ffff_tmp71));
          r800_ffff_tmp72 = simd_and(r800_ffff_tmp71, bytetest_b2_bf);
          r800_ffff_tmp73 = simd_or(r800_ffff_tmp72, r800_ffff_tmp67);
          struct_Sk.cc = simd_or(r800_ffff_tmp73, struct_Sk.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, r800_ffff_tmp16);
          bytetest_bc = simd_and(r800_ffff_tmp6, r800_ffff_tmp48);
          bytetest_be_be = simd_and(r800_ffff_tmp6, tmp6);
          r800_ffff_tmp74 = simd_and(r800_ffff_tmp64, bytetest_bc);
          carryQ.cq[19] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp74, carryQ.get_carry_in(19), r800_ffff_tmp75));
          r800_ffff_tmp76 = simd_and(r800_ffff_tmp75, bytetest_be_be);
          struct_Sk.cc = simd_or(r800_ffff_tmp76, struct_Sk.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, r800_ffff_tmp16);
          bytetest_bd = simd_and(r800_ffff_tmp6, r800_ffff_tmp7);
          bytetest_80_80 = simd_andc(r800_ffff_tmp18, tmp11);
          r800_ffff_tmp77 = simd_and(r800_ffff_tmp64, bytetest_bd);
          carryQ.cq[20] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp77, carryQ.get_carry_in(20), r800_ffff_tmp78));
          r800_ffff_tmp79 = simd_and(r800_ffff_tmp78, bytetest_80_80);
          struct_Sk.cc = simd_or(r800_ffff_tmp79, struct_Sk.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, r800_ffff_tmp16);
          bytetest_bf = simd_and(r800_ffff_tmp6, r800_ffff_tmp16);
          bytetest_a3_a3 = simd_and(r800_ffff_tmp29, r800_ffff_tmp36);
          r800_ffff_tmp80 = simd_and(r800_ffff_tmp64, bytetest_bf);
          carryQ.cq[21] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp80, carryQ.get_carry_in(21), r800_ffff_tmp81));
          r800_ffff_tmp82 = simd_and(r800_ffff_tmp81, bytetest_a3_a3);
          struct_Sk.cc = simd_or(r800_ffff_tmp82, struct_Sk.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(7, 15);
        }
        carryQ.CarryQ_Adjust(22);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Sk & struct_Sk, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_5e_5e, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, bytetest_60_60, tmp12, tmp13, tmp14, tmp15;
		BitBlock bytetest_c2_df, r80_7ff_tmp1, r80_7ff_tmp2, r80_7ff_tmp3;
		BitBlock r80_7ff_tmp4, bytetest_c2, r80_7ff_tmp5, r80_7ff_tmp6, r80_7ff_tmp7;
		BitBlock r80_7ff_tmp8, bytetest_a8_a8, r80_7ff_tmp9, r80_7ff_tmp10;
		BitBlock r80_7ff_tmp11, r80_7ff_tmp12, r80_7ff_tmp13, r80_7ff_tmp14;
		BitBlock r80_7ff_tmp15, bytetest_af_af, r80_7ff_tmp16, r80_7ff_tmp17;
		BitBlock r80_7ff_tmp18, r80_7ff_tmp19, r80_7ff_tmp20, bytetest_b4_b4;
		BitBlock r80_7ff_tmp21, bytetest_b8_b8, r80_7ff_tmp22, r80_7ff_tmp23;
		BitBlock bytetest_cb, r80_7ff_tmp24, r80_7ff_tmp25, r80_7ff_tmp26;
		BitBlock r80_7ff_tmp27, bytetest_82_85, r80_7ff_tmp28, r80_7ff_tmp29;
		BitBlock r80_7ff_tmp30, r80_7ff_tmp31, r80_7ff_tmp32, r80_7ff_tmp33;
		BitBlock bytetest_92_9f, r80_7ff_tmp34, r80_7ff_tmp35, r80_7ff_tmp36;
		BitBlock r80_7ff_tmp37, bytetest_a5_ab, r80_7ff_tmp38, r80_7ff_tmp39;
		BitBlock r80_7ff_tmp40, bytetest_ad_ad, r80_7ff_tmp41, r80_7ff_tmp42;
		BitBlock r80_7ff_tmp43, bytetest_af_bf, r80_7ff_tmp44, bytetest_cd;
		BitBlock r80_7ff_tmp45, bytetest_b5_b5, r80_7ff_tmp46, r80_7ff_tmp47;
		BitBlock r80_7ff_tmp48, bytetest_ce, r80_7ff_tmp49, bytetest_84_85;
		BitBlock r80_7ff_tmp50, r80_7ff_tmp51, r80_7ff_tmp52, tmp16, tmp17, tmp18;
		BitBlock bytetest_e1_ef, bytetest_e0, tmp19, bytetest_a0_bf, tmp20, tmp21;
		BitBlock tmp22, tmp23, tmp24, tmp25, r800_ffff_tmp1, r800_ffff_tmp2;
		BitBlock r800_ffff_tmp3, bytetest_e1, r800_ffff_tmp4, r800_ffff_tmp5;
		BitBlock r800_ffff_tmp6, bytetest_be, r800_ffff_tmp7, bytetest_bd_bd;
		BitBlock r800_ffff_tmp8, r800_ffff_tmp9, r800_ffff_tmp10, r800_ffff_tmp11;
		BitBlock r800_ffff_tmp12, r800_ffff_tmp13, r800_ffff_tmp14, r800_ffff_tmp15;
		BitBlock r800_ffff_tmp16, bytetest_bf, r800_ffff_tmp17, r800_ffff_tmp18;
		BitBlock bytetest_80_81, r800_ffff_tmp19, r800_ffff_tmp20, r800_ffff_tmp21;
		BitBlock bytetest_bf_bf, r800_ffff_tmp22, r800_ffff_tmp23, r800_ffff_tmp24;
		BitBlock bytetest_8d_8f, r800_ffff_tmp25, r800_ffff_tmp26, r800_ffff_tmp27;
		BitBlock bytetest_9d_9f, r800_ffff_tmp28, r800_ffff_tmp29, r800_ffff_tmp30;
		BitBlock bytetest_ad_af, r800_ffff_tmp31, r800_ffff_tmp32, r800_ffff_tmp33;
		BitBlock r800_ffff_tmp34, bytetest_bd_be, r800_ffff_tmp35, r800_ffff_tmp36;
		BitBlock bytetest_e3, r800_ffff_tmp37, bytetest_82, r800_ffff_tmp38;
		BitBlock r800_ffff_tmp39, r800_ffff_tmp40, bytetest_9b_9c, r800_ffff_tmp41;
		BitBlock r800_ffff_tmp42, r800_ffff_tmp43, r800_ffff_tmp44, r800_ffff_tmp45;
		BitBlock r800_ffff_tmp46, r800_ffff_tmp47, bytetest_ea, r800_ffff_tmp48;
		BitBlock bytetest_9c, r800_ffff_tmp49, r800_ffff_tmp50, r800_ffff_tmp51;
		BitBlock r800_ffff_tmp52, bytetest_80_96, r800_ffff_tmp53, r800_ffff_tmp54;
		BitBlock r800_ffff_tmp55, r800_ffff_tmp56, r800_ffff_tmp57, bytetest_a0_a1;
		BitBlock r800_ffff_tmp58, bytetest_9e, r800_ffff_tmp59, bytetest_89_8a;
		BitBlock r800_ffff_tmp60, r800_ffff_tmp61, r800_ffff_tmp62, bytetest_ef;
		BitBlock bytetest_af, r800_ffff_tmp63, r800_ffff_tmp64, r800_ffff_tmp65;
		BitBlock r800_ffff_tmp66, r800_ffff_tmp67, bytetest_ae, r800_ffff_tmp68;
		BitBlock r800_ffff_tmp69, bytetest_b2_bf, r800_ffff_tmp70, r800_ffff_tmp71;
		BitBlock r800_ffff_tmp72, r800_ffff_tmp73, bytetest_bc, bytetest_be_be;
		BitBlock r800_ffff_tmp74, r800_ffff_tmp75, r800_ffff_tmp76, bytetest_bd;
		BitBlock bytetest_80_80, r800_ffff_tmp77, r800_ffff_tmp78, r800_ffff_tmp79;
		BitBlock bytetest_a3_a3, r800_ffff_tmp80, r800_ffff_tmp81, r800_ffff_tmp82;




        struct_Sk.cc = simd<1>::constant<0>();
        tmp1 = simd_andc(basis_bits.bit_1, basis_bits.bit_0);
        tmp2 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp3 = simd_and(tmp1, tmp2);
        tmp4 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_and(tmp4, tmp5);
        bytetest_5e_5e = simd_and(tmp3, tmp6);
        struct_Sk.cc = simd_or(bytetest_5e_5e, struct_Sk.cc);
        tmp7 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp8 = simd_and(tmp1, tmp7);
        tmp9 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp10 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp11 = simd_or(tmp9, tmp10);
        bytetest_60_60 = simd_andc(tmp8, tmp11);
        struct_Sk.cc = simd_or(bytetest_60_60, struct_Sk.cc);
        tmp12 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp13 = simd_andc(tmp12, basis_bits.bit_2);
        tmp14 = simd_or(tmp9, basis_bits.bit_6);
        tmp15 = simd_or(basis_bits.bit_3, tmp14);
        bytetest_c2_df = simd_and(tmp13, tmp15);
        if ((bitblock::any(bytetest_c2_df) || carryQ.CarryTest(0, 5))) {
          r80_7ff_tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
          r80_7ff_tmp2 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
          r80_7ff_tmp3 = simd_andc(r80_7ff_tmp1, r80_7ff_tmp2);
          r80_7ff_tmp4 = simd_andc(tmp5, tmp9);
          bytetest_c2 = simd_and(r80_7ff_tmp3, r80_7ff_tmp4);
          r80_7ff_tmp5 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r80_7ff_tmp6 = simd_and(r80_7ff_tmp5, tmp7);
          r80_7ff_tmp7 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
          r80_7ff_tmp8 = simd_andc(r80_7ff_tmp7, tmp10);
          bytetest_a8_a8 = simd_and(r80_7ff_tmp6, r80_7ff_tmp8);
          r80_7ff_tmp9 = simd<1>::constant<1>();
          carryQ.cq[0] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp9, carryQ.get_carry_in(0), r80_7ff_tmp10));
          r80_7ff_tmp11 = simd_and(r80_7ff_tmp10, bytetest_c2);
          carryQ.cq[1] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp11, carryQ.get_carry_in(1), r80_7ff_tmp12));
          r80_7ff_tmp13 = simd_and(r80_7ff_tmp12, bytetest_a8_a8);
          struct_Sk.cc = simd_or(r80_7ff_tmp13, struct_Sk.cc);
          bytetest_c2 = simd_and(r80_7ff_tmp3, r80_7ff_tmp4);
          r80_7ff_tmp14 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
          r80_7ff_tmp15 = simd_and(tmp4, r80_7ff_tmp14);
          bytetest_af_af = simd_and(r80_7ff_tmp6, r80_7ff_tmp15);
          r80_7ff_tmp16 = simd_and(r80_7ff_tmp12, bytetest_af_af);
          struct_Sk.cc = simd_or(r80_7ff_tmp16, struct_Sk.cc);
          bytetest_c2 = simd_and(r80_7ff_tmp3, r80_7ff_tmp4);
          r80_7ff_tmp17 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
          r80_7ff_tmp18 = simd_and(r80_7ff_tmp5, r80_7ff_tmp17);
          r80_7ff_tmp19 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
          r80_7ff_tmp20 = simd_andc(r80_7ff_tmp19, tmp10);
          bytetest_b4_b4 = simd_and(r80_7ff_tmp18, r80_7ff_tmp20);
          r80_7ff_tmp21 = simd_and(r80_7ff_tmp12, bytetest_b4_b4);
          struct_Sk.cc = simd_or(r80_7ff_tmp21, struct_Sk.cc);
          bytetest_c2 = simd_and(r80_7ff_tmp3, r80_7ff_tmp4);
          bytetest_b8_b8 = simd_and(r80_7ff_tmp18, r80_7ff_tmp8);
          r80_7ff_tmp22 = simd_and(r80_7ff_tmp12, bytetest_b8_b8);
          struct_Sk.cc = simd_or(r80_7ff_tmp22, struct_Sk.cc);
          r80_7ff_tmp23 = simd_and(r80_7ff_tmp7, r80_7ff_tmp14);
          bytetest_cb = simd_and(r80_7ff_tmp3, r80_7ff_tmp23);
          r80_7ff_tmp24 = simd_andc(r80_7ff_tmp5, r80_7ff_tmp2);
          r80_7ff_tmp25 = simd_andc(r80_7ff_tmp24, basis_bits.bit_4);
          r80_7ff_tmp26 = simd_not(basis_bits.bit_6);
          r80_7ff_tmp27 = simd_or(simd_and(basis_bits.bit_5, r80_7ff_tmp26), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
          bytetest_82_85 = simd_and(r80_7ff_tmp25, r80_7ff_tmp27);
          r80_7ff_tmp28 = simd_and(r80_7ff_tmp10, bytetest_cb);
          carryQ.cq[2] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp28, carryQ.get_carry_in(2), r80_7ff_tmp29));
          r80_7ff_tmp30 = simd_and(r80_7ff_tmp29, bytetest_82_85);
          struct_Sk.cc = simd_or(r80_7ff_tmp30, struct_Sk.cc);
          bytetest_cb = simd_and(r80_7ff_tmp3, r80_7ff_tmp23);
          r80_7ff_tmp31 = simd_and(r80_7ff_tmp5, tmp2);
          r80_7ff_tmp32 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
          r80_7ff_tmp33 = simd_or(basis_bits.bit_4, r80_7ff_tmp32);
          bytetest_92_9f = simd_and(r80_7ff_tmp31, r80_7ff_tmp33);
          r80_7ff_tmp34 = simd_and(r80_7ff_tmp29, bytetest_92_9f);
          struct_Sk.cc = simd_or(r80_7ff_tmp34, struct_Sk.cc);
          bytetest_cb = simd_and(r80_7ff_tmp3, r80_7ff_tmp23);
          r80_7ff_tmp35 = simd_not(basis_bits.bit_5);
          r80_7ff_tmp36 = simd_and(basis_bits.bit_5, tmp10);
          r80_7ff_tmp37 = simd_or(simd_and(basis_bits.bit_4, r80_7ff_tmp35), simd_andc(r80_7ff_tmp36, basis_bits.bit_4));
          bytetest_a5_ab = simd_and(r80_7ff_tmp6, r80_7ff_tmp37);
          r80_7ff_tmp38 = simd_and(r80_7ff_tmp29, bytetest_a5_ab);
          struct_Sk.cc = simd_or(r80_7ff_tmp38, struct_Sk.cc);
          bytetest_cb = simd_and(r80_7ff_tmp3, r80_7ff_tmp23);
          r80_7ff_tmp39 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
          r80_7ff_tmp40 = simd_and(tmp4, r80_7ff_tmp39);
          bytetest_ad_ad = simd_and(r80_7ff_tmp6, r80_7ff_tmp40);
          r80_7ff_tmp41 = simd_and(r80_7ff_tmp29, bytetest_ad_ad);
          struct_Sk.cc = simd_or(r80_7ff_tmp41, struct_Sk.cc);
          bytetest_cb = simd_and(r80_7ff_tmp3, r80_7ff_tmp23);
          r80_7ff_tmp42 = simd_and(r80_7ff_tmp5, basis_bits.bit_2);
          r80_7ff_tmp43 = simd_or(basis_bits.bit_3, r80_7ff_tmp15);
          bytetest_af_bf = simd_and(r80_7ff_tmp42, r80_7ff_tmp43);
          r80_7ff_tmp44 = simd_and(r80_7ff_tmp29, bytetest_af_bf);
          struct_Sk.cc = simd_or(r80_7ff_tmp44, struct_Sk.cc);
          bytetest_cd = simd_and(r80_7ff_tmp3, r80_7ff_tmp40);
          r80_7ff_tmp45 = simd_and(r80_7ff_tmp19, r80_7ff_tmp39);
          bytetest_b5_b5 = simd_and(r80_7ff_tmp18, r80_7ff_tmp45);
          r80_7ff_tmp46 = simd_and(r80_7ff_tmp10, bytetest_cd);
          carryQ.cq[3] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp46, carryQ.get_carry_in(3), r80_7ff_tmp47));
          r80_7ff_tmp48 = simd_and(r80_7ff_tmp47, bytetest_b5_b5);
          struct_Sk.cc = simd_or(r80_7ff_tmp48, struct_Sk.cc);
          bytetest_ce = simd_and(r80_7ff_tmp3, tmp6);
          r80_7ff_tmp49 = simd_andc(r80_7ff_tmp19, basis_bits.bit_6);
          bytetest_84_85 = simd_and(r80_7ff_tmp24, r80_7ff_tmp49);
          r80_7ff_tmp50 = simd_and(r80_7ff_tmp10, bytetest_ce);
          carryQ.cq[4] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp50, carryQ.get_carry_in(4), r80_7ff_tmp51));
          r80_7ff_tmp52 = simd_and(r80_7ff_tmp51, bytetest_84_85);
          struct_Sk.cc = simd_or(r80_7ff_tmp52, struct_Sk.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(0, 5);
        }
        tmp16 = simd_and(tmp12, tmp7);
        tmp17 = simd_or(basis_bits.bit_5, tmp10);
        tmp18 = simd_or(basis_bits.bit_4, tmp17);
        bytetest_e1_ef = simd_and(tmp16, tmp18);
        bytetest_e0 = simd_andc(tmp16, tmp11);
        tmp19 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_a0_bf = simd_and(tmp19, basis_bits.bit_2);
        tmp20 = simd<1>::constant<1>();
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp20, carryQ.get_carry_in(5), tmp21));
        tmp22 = simd_and(tmp21, bytetest_e0);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp22, carryQ.get_carry_in(6), tmp23));
        tmp24 = simd_and(tmp23, bytetest_a0_bf);
        tmp25 = simd_or(tmp24, bytetest_e1_ef);
        if ((bitblock::any(tmp25) || carryQ.CarryTest(7, 15))) {
          r800_ffff_tmp1 = simd_and(tmp12, tmp7);
          r800_ffff_tmp2 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
          r800_ffff_tmp3 = simd_andc(r800_ffff_tmp2, tmp9);
          bytetest_e1 = simd_and(r800_ffff_tmp1, r800_ffff_tmp3);
          r800_ffff_tmp4 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp5 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp6 = simd_and(r800_ffff_tmp4, r800_ffff_tmp5);
          bytetest_be = simd_and(r800_ffff_tmp6, tmp6);
          r800_ffff_tmp7 = simd_and(tmp4, r800_ffff_tmp2);
          bytetest_bd_bd = simd_and(r800_ffff_tmp6, r800_ffff_tmp7);
          r800_ffff_tmp8 = simd<1>::constant<1>();
          carryQ.cq[7] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp8, carryQ.get_carry_in(7), r800_ffff_tmp9));
          r800_ffff_tmp10 = simd_and(r800_ffff_tmp9, bytetest_e1);
          carryQ.cq[8] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp10, carryQ.get_carry_in(8), r800_ffff_tmp11));
          r800_ffff_tmp12 = simd_and(r800_ffff_tmp11, bytetest_be);
          carryQ.cq[9] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp12, carryQ.get_carry_in(9), r800_ffff_tmp13));
          r800_ffff_tmp14 = simd_and(r800_ffff_tmp13, bytetest_bd_bd);
          struct_Sk.cc = simd_or(r800_ffff_tmp14, struct_Sk.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, r800_ffff_tmp3);
          r800_ffff_tmp15 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp16 = simd_and(tmp4, r800_ffff_tmp15);
          bytetest_bf = simd_and(r800_ffff_tmp6, r800_ffff_tmp16);
          r800_ffff_tmp17 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp18 = simd_andc(r800_ffff_tmp4, r800_ffff_tmp17);
          bytetest_80_81 = simd_andc(r800_ffff_tmp18, tmp14);
          r800_ffff_tmp19 = simd_and(r800_ffff_tmp11, bytetest_bf);
          carryQ.cq[10] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp19, carryQ.get_carry_in(10), r800_ffff_tmp20));
          r800_ffff_tmp21 = simd_and(r800_ffff_tmp20, bytetest_80_81);
          bytetest_be = simd_and(r800_ffff_tmp6, tmp6);
          bytetest_bf_bf = simd_and(r800_ffff_tmp6, r800_ffff_tmp16);
          r800_ffff_tmp22 = simd_and(r800_ffff_tmp13, bytetest_bf_bf);
          r800_ffff_tmp23 = simd_or(r800_ffff_tmp22, r800_ffff_tmp21);
          struct_Sk.cc = simd_or(r800_ffff_tmp23, struct_Sk.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, r800_ffff_tmp3);
          bytetest_bf = simd_and(r800_ffff_tmp6, r800_ffff_tmp16);
          r800_ffff_tmp24 = simd_and(r800_ffff_tmp18, tmp4);
          bytetest_8d_8f = simd_and(r800_ffff_tmp24, tmp10);
          r800_ffff_tmp25 = simd_and(r800_ffff_tmp20, bytetest_8d_8f);
          struct_Sk.cc = simd_or(r800_ffff_tmp25, struct_Sk.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, r800_ffff_tmp3);
          bytetest_bf = simd_and(r800_ffff_tmp6, r800_ffff_tmp16);
          r800_ffff_tmp26 = simd_and(r800_ffff_tmp4, tmp2);
          r800_ffff_tmp27 = simd_and(r800_ffff_tmp26, tmp4);
          bytetest_9d_9f = simd_and(r800_ffff_tmp27, tmp10);
          r800_ffff_tmp28 = simd_and(r800_ffff_tmp20, bytetest_9d_9f);
          struct_Sk.cc = simd_or(r800_ffff_tmp28, struct_Sk.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, r800_ffff_tmp3);
          bytetest_bf = simd_and(r800_ffff_tmp6, r800_ffff_tmp16);
          r800_ffff_tmp29 = simd_and(r800_ffff_tmp4, tmp7);
          r800_ffff_tmp30 = simd_and(r800_ffff_tmp29, tmp4);
          bytetest_ad_af = simd_and(r800_ffff_tmp30, tmp10);
          r800_ffff_tmp31 = simd_and(r800_ffff_tmp20, bytetest_ad_af);
          struct_Sk.cc = simd_or(r800_ffff_tmp31, struct_Sk.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, r800_ffff_tmp3);
          bytetest_bf = simd_and(r800_ffff_tmp6, r800_ffff_tmp16);
          r800_ffff_tmp32 = simd_and(r800_ffff_tmp6, tmp4);
          r800_ffff_tmp33 = simd_not(basis_bits.bit_7);
          r800_ffff_tmp34 = simd_or(simd_and(basis_bits.bit_6, r800_ffff_tmp33), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
          bytetest_bd_be = simd_and(r800_ffff_tmp32, r800_ffff_tmp34);
          r800_ffff_tmp35 = simd_and(r800_ffff_tmp20, bytetest_bd_be);
          struct_Sk.cc = simd_or(r800_ffff_tmp35, struct_Sk.cc);
          r800_ffff_tmp36 = simd_andc(r800_ffff_tmp15, tmp9);
          bytetest_e3 = simd_and(r800_ffff_tmp1, r800_ffff_tmp36);
          r800_ffff_tmp37 = simd_andc(tmp5, tmp9);
          bytetest_82 = simd_and(r800_ffff_tmp18, r800_ffff_tmp37);
          r800_ffff_tmp38 = simd_and(r800_ffff_tmp26, basis_bits.bit_4);
          r800_ffff_tmp39 = simd_not(tmp10);
          r800_ffff_tmp40 = simd_or(simd_and(basis_bits.bit_5, r800_ffff_tmp39), simd_andc(r800_ffff_tmp15, basis_bits.bit_5));
          bytetest_9b_9c = simd_and(r800_ffff_tmp38, r800_ffff_tmp40);
          r800_ffff_tmp41 = simd_and(r800_ffff_tmp9, bytetest_e3);
          carryQ.cq[11] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp41, carryQ.get_carry_in(11), r800_ffff_tmp42));
          r800_ffff_tmp43 = simd_and(r800_ffff_tmp42, bytetest_82);
          carryQ.cq[12] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp43, carryQ.get_carry_in(12), r800_ffff_tmp44));
          r800_ffff_tmp45 = simd_and(r800_ffff_tmp44, bytetest_9b_9c);
          struct_Sk.cc = simd_or(r800_ffff_tmp45, struct_Sk.cc);
          r800_ffff_tmp46 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
          r800_ffff_tmp47 = simd_and(r800_ffff_tmp46, tmp5);
          bytetest_ea = simd_and(r800_ffff_tmp1, r800_ffff_tmp47);
          r800_ffff_tmp48 = simd_andc(tmp4, tmp10);
          bytetest_9c = simd_and(r800_ffff_tmp26, r800_ffff_tmp48);
          r800_ffff_tmp49 = simd_andc(r800_ffff_tmp4, basis_bits.bit_2);
          r800_ffff_tmp50 = simd_and(basis_bits.bit_5, r800_ffff_tmp15);
          r800_ffff_tmp51 = simd_or(basis_bits.bit_4, r800_ffff_tmp50);
          r800_ffff_tmp52 = simd_and(basis_bits.bit_3, r800_ffff_tmp51);
          bytetest_80_96 = simd_andc(r800_ffff_tmp49, r800_ffff_tmp52);
          r800_ffff_tmp53 = simd_and(r800_ffff_tmp9, bytetest_ea);
          carryQ.cq[13] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp53, carryQ.get_carry_in(13), r800_ffff_tmp54));
          r800_ffff_tmp55 = simd_and(r800_ffff_tmp54, bytetest_9c);
          carryQ.cq[14] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp55, carryQ.get_carry_in(14), r800_ffff_tmp56));
          r800_ffff_tmp57 = simd_and(r800_ffff_tmp56, bytetest_80_96);
          struct_Sk.cc = simd_or(r800_ffff_tmp57, struct_Sk.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, r800_ffff_tmp47);
          bytetest_9c = simd_and(r800_ffff_tmp26, r800_ffff_tmp48);
          bytetest_a0_a1 = simd_andc(r800_ffff_tmp29, tmp14);
          r800_ffff_tmp58 = simd_and(r800_ffff_tmp56, bytetest_a0_a1);
          struct_Sk.cc = simd_or(r800_ffff_tmp58, struct_Sk.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, r800_ffff_tmp47);
          bytetest_9e = simd_and(r800_ffff_tmp26, tmp6);
          r800_ffff_tmp59 = simd_and(r800_ffff_tmp18, r800_ffff_tmp46);
          bytetest_89_8a = simd_and(r800_ffff_tmp59, r800_ffff_tmp34);
          r800_ffff_tmp60 = simd_and(r800_ffff_tmp54, bytetest_9e);
          carryQ.cq[15] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp60, carryQ.get_carry_in(15), r800_ffff_tmp61));
          r800_ffff_tmp62 = simd_and(r800_ffff_tmp61, bytetest_89_8a);
          struct_Sk.cc = simd_or(r800_ffff_tmp62, struct_Sk.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, r800_ffff_tmp16);
          bytetest_af = simd_and(r800_ffff_tmp29, r800_ffff_tmp16);
          bytetest_80_81 = simd_andc(r800_ffff_tmp18, tmp14);
          r800_ffff_tmp63 = simd_and(r800_ffff_tmp9, bytetest_ef);
          carryQ.cq[16] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp63, carryQ.get_carry_in(16), r800_ffff_tmp64));
          r800_ffff_tmp65 = simd_and(r800_ffff_tmp64, bytetest_af);
          carryQ.cq[17] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp65, carryQ.get_carry_in(17), r800_ffff_tmp66));
          r800_ffff_tmp67 = simd_and(r800_ffff_tmp66, bytetest_80_81);
          bytetest_ae = simd_and(r800_ffff_tmp29, tmp6);
          r800_ffff_tmp68 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
          r800_ffff_tmp69 = simd_or(basis_bits.bit_4, r800_ffff_tmp68);
          bytetest_b2_bf = simd_and(r800_ffff_tmp6, r800_ffff_tmp69);
          r800_ffff_tmp70 = simd_and(r800_ffff_tmp64, bytetest_ae);
          carryQ.cq[18] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp70, carryQ.get_carry_in(18), r800_ffff_tmp71));
          r800_ffff_tmp72 = simd_and(r800_ffff_tmp71, bytetest_b2_bf);
          r800_ffff_tmp73 = simd_or(r800_ffff_tmp72, r800_ffff_tmp67);
          struct_Sk.cc = simd_or(r800_ffff_tmp73, struct_Sk.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, r800_ffff_tmp16);
          bytetest_bc = simd_and(r800_ffff_tmp6, r800_ffff_tmp48);
          bytetest_be_be = simd_and(r800_ffff_tmp6, tmp6);
          r800_ffff_tmp74 = simd_and(r800_ffff_tmp64, bytetest_bc);
          carryQ.cq[19] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp74, carryQ.get_carry_in(19), r800_ffff_tmp75));
          r800_ffff_tmp76 = simd_and(r800_ffff_tmp75, bytetest_be_be);
          struct_Sk.cc = simd_or(r800_ffff_tmp76, struct_Sk.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, r800_ffff_tmp16);
          bytetest_bd = simd_and(r800_ffff_tmp6, r800_ffff_tmp7);
          bytetest_80_80 = simd_andc(r800_ffff_tmp18, tmp11);
          r800_ffff_tmp77 = simd_and(r800_ffff_tmp64, bytetest_bd);
          carryQ.cq[20] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp77, carryQ.get_carry_in(20), r800_ffff_tmp78));
          r800_ffff_tmp79 = simd_and(r800_ffff_tmp78, bytetest_80_80);
          struct_Sk.cc = simd_or(r800_ffff_tmp79, struct_Sk.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, r800_ffff_tmp16);
          bytetest_bf = simd_and(r800_ffff_tmp6, r800_ffff_tmp16);
          bytetest_a3_a3 = simd_and(r800_ffff_tmp29, r800_ffff_tmp36);
          r800_ffff_tmp80 = simd_and(r800_ffff_tmp64, bytetest_bf);
          carryQ.cq[21] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp80, carryQ.get_carry_in(21), r800_ffff_tmp81));
          r800_ffff_tmp82 = simd_and(r800_ffff_tmp81, bytetest_a3_a3);
          struct_Sk.cc = simd_or(r800_ffff_tmp82, struct_Sk.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(7, 15);
        }
  }
  CarryArray<22, 0> carryQ;
  };

  struct So {
  So() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_So & struct_So) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_f0, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, tmp12, bytetest_9d, tmp13, tmp14, tmp15, tmp16;
		BitBlock bytetest_83, tmp17, tmp18, tmp19, tmp20, bytetest_80_b5, tmp21, tmp22;
		BitBlock tmp23, tmp24, tmp25, tmp26, tmp27, tmp28, tmp29, tmp30;
		BitBlock bytetest_80_82, bytetest_80_bf, tmp31, tmp32, tmp33, tmp34, tmp35;
		BitBlock tmp36, tmp37, tmp38, bytetest_84, tmp39, tmp40, tmp41, tmp42;
		BitBlock bytetest_80_a6, tmp43, tmp44, tmp45, tmp46, bytetest_85, tmp47, tmp48;
		BitBlock tmp49, tmp50, bytetest_80_a4, tmp51, tmp52, tmp53, tmp54, tmp55;
		BitBlock tmp56, tmp57, bytetest_a9_bf, tmp58, tmp59, tmp60, tmp61, tmp62;
		BitBlock tmp63, tmp64, bytetest_aa_ac, tmp65, tmp66, tmp67, bytetest_86, tmp68;
		BitBlock tmp69, bytetest_83_84, tmp70, tmp71, tmp72, tmp73, tmp74, tmp75;
		BitBlock tmp76, tmp77, tmp78, bytetest_8c_a9, tmp79, tmp80, bytetest_87, tmp81;
		BitBlock tmp82, tmp83, bytetest_80_9d, tmp84, tmp85, tmp86, tmp87;
		BitBlock bytetest_ae_bf, tmp88, tmp89, tmp90, tmp91, bytetest_89, tmp92;
		BitBlock bytetest_80_81, tmp93, tmp94, tmp95, tmp96, bytetest_88, tmp97, tmp98;
		BitBlock tmp99, tmp100, bytetest_85_85, tmp101, bytetest_8d, tmp102;
		BitBlock bytetest_80_96, tmp103, tmp104, tmp105, tmp106, bytetest_8c, tmp107;
		BitBlock tmp108, tmp109, tmp110, tmp111, bytetest_9f, bytetest_80, tmp112;
		BitBlock bytetest_80_ab, tmp113, tmp114, tmp115, tmp116, tmp117, tmp118;
		BitBlock bytetest_82, tmp119, bytetest_80_93, tmp120, tmp121, tmp122, tmp123;
		BitBlock bytetest_81, tmp124, tmp125, tmp126, bytetest_b0_bf, tmp127, tmp128;
		BitBlock tmp129, tmp130, bytetest_a0_ae, tmp131, tmp132, tmp133;
		BitBlock bytetest_b1_be, tmp134, tmp135, bytetest_81_8f, tmp136, tmp137;
		BitBlock tmp138, bytetest_91_9f, tmp139, tmp140, tmp141, tmp142;
		BitBlock bytetest_90_ae, tmp143, tmp144, tmp145, tmp146, tmp147, tmp148;
		BitBlock tmp149, tmp150, tmp151, tmp152, tmp153, bytetest_80_9a, tmp154;
		BitBlock tmp155, tmp156, tmp157, tmp158, tmp159, tmp160, tmp161, tmp162;
		BitBlock tmp163, bytetest_a6_bf, tmp164, tmp165, tmp166, tmp167, tmp168;
		BitBlock tmp169, bytetest_90_ba, tmp170, bytetest_80_88, tmp171, tmp172;
		BitBlock tmp173, bytetest_90_91, tmp174, tmp175, tmp176, bytetest_80_a0;
		BitBlock tmp177, tmp178, tmp179, tmp180, bytetest_b0_b5, tmp181, tmp182;
		BitBlock tmp183, tmp184, bytetest_80_bc, tmp185, tmp186, tmp187;
		BitBlock bytetest_b7_bf, tmp188, tmp189, tmp190, bytetest_8e, tmp191, tmp192;
		BitBlock tmp193, bytetest_8f, bytetest_80_84, tmp194, tmp195, tmp196;
		BitBlock bytetest_a0_bf, tmp197, tmp198, tmp199, tmp200, bytetest_86_8a;
		BitBlock tmp201, tmp202, bytetest_a0_b0, tmp203, bytetest_90, tmp204, tmp205;
		BitBlock bytetest_80_be, tmp206, tmp207, tmp208, bytetest_91, bytetest_80_80;
		BitBlock tmp209, tmp210, tmp211, bytetest_93, tmp212, tmp213, bytetest_80_b7;
		BitBlock tmp214, tmp215, tmp216, bytetest_92, tmp217, tmp218, tmp219, tmp220;
		BitBlock tmp221, bytetest_82_bf, tmp222, tmp223, tmp224, tmp225, tmp226;
		BitBlock bytetest_b9_bc, tmp227, bytetest_94, tmp228, bytetest_80_bd, tmp229;
		BitBlock tmp230, tmp231, bytetest_95, bytetest_80_83, tmp232, tmp233, tmp234;
		BitBlock tmp235, tmp236, tmp237, bytetest_90_a7, tmp238, bytetest_99, tmp239;
		BitBlock tmp240, tmp241, bytetest_98, tmp242, tmp243, tmp244, bytetest_97;
		BitBlock bytetest_bb_bf, tmp245, tmp246, tmp247, tmp248, tmp249;
		BitBlock bytetest_85_8f, tmp250, tmp251, bytetest_9b, bytetest_80_85, tmp252;
		BitBlock tmp253, tmp254, tmp255, bytetest_9a, tmp256, tmp257, tmp258, tmp259;
		BitBlock tmp260, bytetest_80_b3, tmp261, tmp262, tmp263, bytetest_9c, tmp264;
		BitBlock tmp265, tmp266, tmp267, tmp268, bytetest_c2_df, r80_7ff_tmp1;
		BitBlock bytetest_c2, bytetest_a6_a6, r80_7ff_tmp2, r80_7ff_tmp3, r80_7ff_tmp4;
		BitBlock bytetest_a9_a9, r80_7ff_tmp5, bytetest_ae_ae, r80_7ff_tmp6;
		BitBlock bytetest_b0_b0, r80_7ff_tmp7, r80_7ff_tmp8, bytetest_d2;
		BitBlock bytetest_82_82, r80_7ff_tmp9, r80_7ff_tmp10, r80_7ff_tmp11;
		BitBlock bytetest_d8, bytetest_8e_8f, r80_7ff_tmp12, r80_7ff_tmp13;
		BitBlock r80_7ff_tmp14, bytetest_db, bytetest_9e_9e, r80_7ff_tmp15;
		BitBlock r80_7ff_tmp16, r80_7ff_tmp17, r80_7ff_tmp18, r80_7ff_tmp19;
		BitBlock r80_7ff_tmp20, r80_7ff_tmp21, bytetest_bd_be, r80_7ff_tmp22;
		BitBlock bytetest_df, bytetest_b6_b6, r80_7ff_tmp23, r80_7ff_tmp24;
		BitBlock r80_7ff_tmp25, tmp269, bytetest_e1_ef, bytetest_e0, tmp270, tmp271;
		BitBlock tmp272, tmp273, r800_ffff_tmp1, bytetest_a7, bytetest_ba_ba;
		BitBlock r800_ffff_tmp2, r800_ffff_tmp3, r800_ffff_tmp4, r800_ffff_tmp5;
		BitBlock r800_ffff_tmp6, bytetest_ad, r800_ffff_tmp7, r800_ffff_tmp8;
		BitBlock r800_ffff_tmp9, bytetest_af, r800_ffff_tmp10, r800_ffff_tmp11;
		BitBlock bytetest_b3_b8, r800_ffff_tmp12, r800_ffff_tmp13, r800_ffff_tmp14;
		BitBlock r800_ffff_tmp15, bytetest_b1, bytetest_bf_bf, r800_ffff_tmp16;
		BitBlock r800_ffff_tmp17, r800_ffff_tmp18, bytetest_b5, bytetest_b9_b9;
		BitBlock r800_ffff_tmp19, r800_ffff_tmp20, r800_ffff_tmp21, bytetest_bc;
		BitBlock bytetest_81_83, r800_ffff_tmp22, r800_ffff_tmp23, r800_ffff_tmp24;
		BitBlock bytetest_93_93, r800_ffff_tmp25, r800_ffff_tmp26, bytetest_95_97;
		BitBlock r800_ffff_tmp27, r800_ffff_tmp28, bytetest_9a_9f, r800_ffff_tmp29;
		BitBlock bytetest_b4_b4, r800_ffff_tmp30, r800_ffff_tmp31, bytetest_b8_b8;
		BitBlock r800_ffff_tmp32, bytetest_bf, r800_ffff_tmp33, r800_ffff_tmp34;
		BitBlock r800_ffff_tmp35, bytetest_be, bytetest_be_bf, r800_ffff_tmp36;
		BitBlock r800_ffff_tmp37, r800_ffff_tmp38, r800_ffff_tmp39, r800_ffff_tmp40;
		BitBlock r800_ffff_tmp41, bytetest_87_8c, r800_ffff_tmp42, r800_ffff_tmp43;
		BitBlock r800_ffff_tmp44, bytetest_95_98, r800_ffff_tmp45, bytetest_e1;
		BitBlock bytetest_9e_9f, r800_ffff_tmp46, r800_ffff_tmp47, r800_ffff_tmp48;
		BitBlock r800_ffff_tmp49, r800_ffff_tmp50, bytetest_90_99, r800_ffff_tmp51;
		BitBlock r800_ffff_tmp52, r800_ffff_tmp53, bytetest_a5, r800_ffff_tmp54;
		BitBlock r800_ffff_tmp55, r800_ffff_tmp56, r800_ffff_tmp57, bytetest_9e_bf;
		BitBlock r800_ffff_tmp58, r800_ffff_tmp59, r800_ffff_tmp60, r800_ffff_tmp61;
		BitBlock bytetest_a1_aa, r800_ffff_tmp62, r800_ffff_tmp63, r800_ffff_tmp64;
		BitBlock r800_ffff_tmp65, bytetest_b4_bc, r800_ffff_tmp66, bytetest_e2;
		BitBlock r800_ffff_tmp67, r800_ffff_tmp68, r800_ffff_tmp69, r800_ffff_tmp70;
		BitBlock r800_ffff_tmp71, r800_ffff_tmp72, r800_ffff_tmp73, bytetest_83_86;
		BitBlock r800_ffff_tmp74, r800_ffff_tmp75, bytetest_88_89, r800_ffff_tmp76;
		BitBlock bytetest_94_94, r800_ffff_tmp77, r800_ffff_tmp78, bytetest_96_97;
		BitBlock r800_ffff_tmp79, r800_ffff_tmp80, r800_ffff_tmp81, r800_ffff_tmp82;
		BitBlock bytetest_9e_a3, r800_ffff_tmp83, bytetest_a5_a5, r800_ffff_tmp84;
		BitBlock bytetest_a7_a7, r800_ffff_tmp85, r800_ffff_tmp86, r800_ffff_tmp87;
		BitBlock r800_ffff_tmp88, bytetest_ba_bb, r800_ffff_tmp89, bytetest_8a_8a;
		BitBlock r800_ffff_tmp90, r800_ffff_tmp91, r800_ffff_tmp92, r800_ffff_tmp93;
		BitBlock bytetest_8c_8d, r800_ffff_tmp94, bytetest_8f_8f, r800_ffff_tmp95;
		BitBlock r800_ffff_tmp96, r800_ffff_tmp97, bytetest_95_99, r800_ffff_tmp98;
		BitBlock r800_ffff_tmp99, r800_ffff_tmp100, bytetest_9c_9f, r800_ffff_tmp101;
		BitBlock r800_ffff_tmp102, r800_ffff_tmp103, r800_ffff_tmp104, bytetest_a1_a2;
		BitBlock r800_ffff_tmp105, r800_ffff_tmp106, bytetest_a4_a5, r800_ffff_tmp107;
		BitBlock r800_ffff_tmp108, r800_ffff_tmp109, bytetest_a7_ad, r800_ffff_tmp110;
		BitBlock r800_ffff_tmp111, bytetest_80_8d, r800_ffff_tmp112, r800_ffff_tmp113;
		BitBlock r800_ffff_tmp114, bytetest_af_bf, r800_ffff_tmp115, r800_ffff_tmp116;
		BitBlock r800_ffff_tmp117, r800_ffff_tmp118, r800_ffff_tmp119;
		BitBlock r800_ffff_tmp120, r800_ffff_tmp121, bytetest_95_b3, r800_ffff_tmp122;
		BitBlock bytetest_80_87, r800_ffff_tmp123, r800_ffff_tmp124, r800_ffff_tmp125;
		BitBlock bytetest_8c_9f, r800_ffff_tmp126, r800_ffff_tmp127, bytetest_a2_a8;
		BitBlock r800_ffff_tmp128, r800_ffff_tmp129, r800_ffff_tmp130, bytetest_80_bb;
		BitBlock r800_ffff_tmp131, r800_ffff_tmp132, r800_ffff_tmp133;
		BitBlock r800_ffff_tmp134, bytetest_ab_bf, r800_ffff_tmp135, r800_ffff_tmp136;
		BitBlock r800_ffff_tmp137, r800_ffff_tmp138, r800_ffff_tmp139;
		BitBlock r800_ffff_tmp140, bytetest_bd_bf, r800_ffff_tmp141, r800_ffff_tmp142;
		BitBlock bytetest_80_9b, r800_ffff_tmp143, r800_ffff_tmp144, r800_ffff_tmp145;
		BitBlock bytetest_b4_bf, r800_ffff_tmp146, r800_ffff_tmp147, r800_ffff_tmp148;
		BitBlock r800_ffff_tmp149, bytetest_a2_b3, r800_ffff_tmp150, r800_ffff_tmp151;
		BitBlock r800_ffff_tmp152, r800_ffff_tmp153, bytetest_80_8a, r800_ffff_tmp154;
		BitBlock r800_ffff_tmp155, r800_ffff_tmp156, r800_ffff_tmp157, bytetest_80_a9;
		BitBlock r800_ffff_tmp158, r800_ffff_tmp159, r800_ffff_tmp160;
		BitBlock r800_ffff_tmp161, bytetest_9c_bf, r800_ffff_tmp162, r800_ffff_tmp163;
		BitBlock r800_ffff_tmp164, r800_ffff_tmp165, bytetest_96, r800_ffff_tmp166;
		BitBlock bytetest_80_b6, r800_ffff_tmp167, r800_ffff_tmp168, r800_ffff_tmp169;
		BitBlock bytetest_94_95, r800_ffff_tmp170, r800_ffff_tmp171, r800_ffff_tmp172;
		BitBlock r800_ffff_tmp173, r800_ffff_tmp174, r800_ffff_tmp175;
		BitBlock r800_ffff_tmp176, bytetest_b8_bf, r800_ffff_tmp177, r800_ffff_tmp178;
		BitBlock r800_ffff_tmp179, r800_ffff_tmp180, bytetest_82_b7, r800_ffff_tmp181;
		BitBlock r800_ffff_tmp182, bytetest_80_ae, r800_ffff_tmp183, r800_ffff_tmp184;
		BitBlock r800_ffff_tmp185, r800_ffff_tmp186, r800_ffff_tmp187;
		BitBlock r800_ffff_tmp188, r800_ffff_tmp189, bytetest_9a_9b, r800_ffff_tmp190;
		BitBlock r800_ffff_tmp191, r800_ffff_tmp192, r800_ffff_tmp193;
		BitBlock r800_ffff_tmp194, r800_ffff_tmp195, bytetest_80_a7, r800_ffff_tmp196;
		BitBlock r800_ffff_tmp197, r800_ffff_tmp198, r800_ffff_tmp199, bytetest_81_bf;
		BitBlock r800_ffff_tmp200, r800_ffff_tmp201, r800_ffff_tmp202;
		BitBlock r800_ffff_tmp203, bytetest_9e, r800_ffff_tmp204, bytetest_94_bf;
		BitBlock r800_ffff_tmp205, r800_ffff_tmp206, r800_ffff_tmp207, bytetest_a0_a3;
		BitBlock r800_ffff_tmp208, r800_ffff_tmp209, r800_ffff_tmp210, bytetest_ac;
		BitBlock bytetest_80_af, r800_ffff_tmp211, r800_ffff_tmp212, r800_ffff_tmp213;
		BitBlock r800_ffff_tmp214, bytetest_85_86, r800_ffff_tmp215, r800_ffff_tmp216;
		BitBlock r800_ffff_tmp217, r800_ffff_tmp218, bytetest_b3, r800_ffff_tmp219;
		BitBlock bytetest_a5_aa, r800_ffff_tmp220, r800_ffff_tmp221, r800_ffff_tmp222;
		BitBlock bytetest_ba, r800_ffff_tmp223, bytetest_80_99, r800_ffff_tmp224;
		BitBlock r800_ffff_tmp225, r800_ffff_tmp226, bytetest_bb, r800_ffff_tmp227;
		BitBlock r800_ffff_tmp228, r800_ffff_tmp229, r800_ffff_tmp230, bytetest_9b_bf;
		BitBlock r800_ffff_tmp231, r800_ffff_tmp232, bytetest_80_95, r800_ffff_tmp233;
		BitBlock r800_ffff_tmp234, r800_ffff_tmp235, bytetest_bc_be, r800_ffff_tmp236;
		BitBlock r800_ffff_tmp237, r800_ffff_tmp238, r800_ffff_tmp239, bytetest_b0_bb;
		BitBlock r800_ffff_tmp240, bytetest_e3, bytetest_84_84, r800_ffff_tmp241;
		BitBlock r800_ffff_tmp242, r800_ffff_tmp243, r800_ffff_tmp244;
		BitBlock r800_ffff_tmp245, r800_ffff_tmp246, bytetest_92_93, r800_ffff_tmp247;
		BitBlock bytetest_a0_a0, r800_ffff_tmp248, bytetest_b6_b7, r800_ffff_tmp249;
		BitBlock r800_ffff_tmp250, r800_ffff_tmp251, r800_ffff_tmp252;
		BitBlock r800_ffff_tmp253, bytetest_96_9f, r800_ffff_tmp254, r800_ffff_tmp255;
		BitBlock bytetest_80_a3, r800_ffff_tmp256, r800_ffff_tmp257, r800_ffff_tmp258;
		BitBlock bytetest_80_9e, r800_ffff_tmp259, r800_ffff_tmp260, r800_ffff_tmp261;
		BitBlock r800_ffff_tmp262, r800_ffff_tmp263, r800_ffff_tmp264, bytetest_aa_bf;
		BitBlock r800_ffff_tmp265, r800_ffff_tmp266, bytetest_90_90, r800_ffff_tmp267;
		BitBlock r800_ffff_tmp268, bytetest_8a, r800_ffff_tmp269, r800_ffff_tmp270;
		BitBlock bytetest_8a_b0, r800_ffff_tmp271, r800_ffff_tmp272, r800_ffff_tmp273;
		BitBlock bytetest_8b, r800_ffff_tmp274, r800_ffff_tmp275, r800_ffff_tmp276;
		BitBlock bytetest_8c_8f, r800_ffff_tmp277, r800_ffff_tmp278, r800_ffff_tmp279;
		BitBlock bytetest_e4, bytetest_b7, r800_ffff_tmp280, r800_ffff_tmp281;
		BitBlock r800_ffff_tmp282, r800_ffff_tmp283, r800_ffff_tmp284, bytetest_ea;
		BitBlock bytetest_80_86, r800_ffff_tmp285, r800_ffff_tmp286, r800_ffff_tmp287;
		BitBlock r800_ffff_tmp288, r800_ffff_tmp289, bytetest_90_bf, r800_ffff_tmp290;
		BitBlock r800_ffff_tmp291, r800_ffff_tmp292, r800_ffff_tmp293, bytetest_a0;
		BitBlock bytetest_a8_ab, r800_ffff_tmp294, r800_ffff_tmp295, r800_ffff_tmp296;
		BitBlock r800_ffff_tmp297, r800_ffff_tmp298, bytetest_a9, r800_ffff_tmp299;
		BitBlock bytetest_b7_b9, r800_ffff_tmp300, r800_ffff_tmp301, r800_ffff_tmp302;
		BitBlock bytetest_ef, bytetest_bd_bd, r800_ffff_tmp303, r800_ffff_tmp304;
		BitBlock r800_ffff_tmp305, r800_ffff_tmp306, r800_ffff_tmp307, bytetest_a4_a4;
		BitBlock r800_ffff_tmp308, r800_ffff_tmp309, r800_ffff_tmp310, bytetest_a8_a8;
		BitBlock r800_ffff_tmp311, r800_ffff_tmp312, bytetest_ad_ae, r800_ffff_tmp313;
		BitBlock bytetest_bc_bd, r800_ffff_tmp314, tmp274, tmp275, tmp276;
		BitBlock r10000_10fff_tmp1, r10000_10fff_tmp2, r10000_10fff_tmp3;
		BitBlock r10000_10fff_tmp4, r10000_10fff_tmp5, bytetest_80_89;
		BitBlock r10000_10fff_tmp6, r10000_10fff_tmp7, r10000_10fff_tmp8;
		BitBlock bytetest_b9_bf, r10000_10fff_tmp9, r10000_10fff_tmp10;
		BitBlock r10000_10fff_tmp11, r10000_10fff_tmp12, bytetest_90_9b;
		BitBlock r10000_10fff_tmp13, r10000_10fff_tmp14, r10000_10fff_tmp15;
		BitBlock bytetest_90_bc, r10000_10fff_tmp16, r10000_10fff_tmp17;
		BitBlock r10000_10fff_tmp18;




        struct_So.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_and(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_or(tmp4, tmp5);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp11 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp12 = simd_and(tmp10, tmp11);
        bytetest_9d = simd_and(tmp9, tmp12);
        tmp13 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp14 = simd_andc(tmp7, tmp13);
        tmp15 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp16 = simd_andc(tmp15, tmp4);
        bytetest_83 = simd_and(tmp14, tmp16);
        tmp17 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp18 = simd_or(basis_bits.bit_4, tmp17);
        tmp19 = simd_and(basis_bits.bit_3, tmp18);
        tmp20 = simd_and(basis_bits.bit_2, tmp19);
        bytetest_80_b5 = simd_andc(tmp7, tmp20);
        tmp21 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp21, carryQ.get_carry_in(0), tmp22));
        tmp23 = simd_and(tmp22, bytetest_f0);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp23, carryQ.get_carry_in(1), tmp24));
        tmp25 = simd_and(tmp24, bytetest_9d);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp25, carryQ.get_carry_in(2), tmp26));
        tmp27 = simd_and(tmp26, bytetest_83);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp27, carryQ.get_carry_in(3), tmp28));
        tmp29 = simd_and(tmp28, bytetest_80_b5);
        tmp30 = simd_andc(tmp14, tmp4);
        bytetest_80_82 = simd_andc(tmp30, tmp15);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp31 = simd_and(tmp26, bytetest_80_82);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp31, carryQ.get_carry_in(4), tmp32));
        tmp33 = simd_and(tmp32, bytetest_80_bf);
        tmp34 = simd_or(tmp33, tmp29);
        struct_So.cc = simd_or(tmp34, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        tmp35 = simd_and(bytetest_80_bf, tmp8);
        bytetest_9d = simd_and(tmp35, tmp12);
        tmp36 = simd_andc(bytetest_80_bf, tmp13);
        tmp37 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp38 = simd_andc(tmp37, tmp5);
        bytetest_84 = simd_and(tmp36, tmp38);
        tmp39 = simd_and(basis_bits.bit_5, tmp15);
        tmp40 = simd_or(basis_bits.bit_4, tmp39);
        tmp41 = simd_or(basis_bits.bit_3, tmp40);
        tmp42 = simd_and(basis_bits.bit_2, tmp41);
        bytetest_80_a6 = simd_andc(bytetest_80_bf, tmp42);
        tmp43 = simd_and(tmp26, bytetest_84);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp43, carryQ.get_carry_in(5), tmp44));
        tmp45 = simd_and(tmp44, bytetest_80_a6);
        struct_So.cc = simd_or(tmp45, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp35, tmp12);
        tmp46 = simd_and(tmp37, tmp11);
        bytetest_85 = simd_and(tmp36, tmp46);
        tmp47 = simd_and(basis_bits.bit_5, tmp5);
        tmp48 = simd_or(basis_bits.bit_4, tmp47);
        tmp49 = simd_or(basis_bits.bit_3, tmp48);
        tmp50 = simd_and(basis_bits.bit_2, tmp49);
        bytetest_80_a4 = simd_andc(bytetest_80_bf, tmp50);
        tmp51 = simd_and(tmp26, bytetest_85);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp51, carryQ.get_carry_in(6), tmp52));
        tmp53 = simd_and(tmp52, bytetest_80_a4);
        bytetest_84 = simd_and(tmp36, tmp38);
        tmp54 = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp55 = simd_or(basis_bits.bit_5, tmp5);
        tmp56 = simd_and(basis_bits.bit_4, tmp55);
        tmp57 = simd_or(basis_bits.bit_3, tmp56);
        bytetest_a9_bf = simd_and(tmp54, tmp57);
        tmp58 = simd_and(tmp44, bytetest_a9_bf);
        tmp59 = simd_or(tmp58, tmp53);
        struct_So.cc = simd_or(tmp59, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp35, tmp12);
        bytetest_85 = simd_and(tmp36, tmp46);
        tmp60 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp61 = simd_and(bytetest_80_bf, tmp60);
        tmp62 = simd_and(tmp61, basis_bits.bit_4);
        tmp63 = simd_not(tmp5);
        tmp64 = simd_or(simd_and(basis_bits.bit_5, tmp63), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        bytetest_aa_ac = simd_and(tmp62, tmp64);
        tmp65 = simd_and(tmp52, bytetest_aa_ac);
        struct_So.cc = simd_or(tmp65, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp35, tmp12);
        tmp66 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp67 = simd_and(tmp37, tmp66);
        bytetest_86 = simd_and(tmp36, tmp67);
        tmp68 = simd_andc(tmp36, basis_bits.bit_4);
        tmp69 = simd_or(simd_and(basis_bits.bit_5, tmp63), simd_andc(tmp15, basis_bits.bit_5));
        bytetest_83_84 = simd_and(tmp68, tmp69);
        tmp70 = simd_and(tmp26, bytetest_86);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp70, carryQ.get_carry_in(7), tmp71));
        tmp72 = simd_and(tmp71, bytetest_83_84);
        struct_So.cc = simd_or(tmp72, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp35, tmp12);
        bytetest_86 = simd_and(tmp36, tmp67);
        tmp73 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
        tmp74 = simd_and(basis_bits.bit_4, tmp73);
        tmp75 = simd_or(basis_bits.bit_3, tmp74);
        tmp76 = simd_not(tmp75);
        tmp77 = simd_or(basis_bits.bit_3, tmp10);
        tmp78 = simd_or(simd_and(basis_bits.bit_2, tmp76), simd_andc(tmp77, basis_bits.bit_2));
        bytetest_8c_a9 = simd_and(bytetest_80_bf, tmp78);
        tmp79 = simd_and(tmp71, bytetest_8c_a9);
        struct_So.cc = simd_or(tmp79, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp35, tmp12);
        tmp80 = simd_and(tmp37, tmp15);
        bytetest_87 = simd_and(tmp36, tmp80);
        tmp81 = simd_andc(bytetest_80_bf, basis_bits.bit_2);
        tmp82 = simd_and(tmp10, basis_bits.bit_6);
        tmp83 = simd_and(basis_bits.bit_3, tmp82);
        bytetest_80_9d = simd_andc(tmp81, tmp83);
        tmp84 = simd_and(tmp26, bytetest_87);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(tmp84, carryQ.get_carry_in(8), tmp85));
        tmp86 = simd_and(tmp85, bytetest_80_9d);
        bytetest_86 = simd_and(tmp36, tmp67);
        tmp87 = simd_or(basis_bits.bit_3, tmp82);
        bytetest_ae_bf = simd_and(tmp54, tmp87);
        tmp88 = simd_and(tmp71, bytetest_ae_bf);
        tmp89 = simd_or(tmp88, tmp86);
        struct_So.cc = simd_or(tmp89, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp35, tmp12);
        tmp90 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp91 = simd_and(tmp90, tmp11);
        bytetest_89 = simd_and(tmp36, tmp91);
        tmp92 = simd_or(tmp4, basis_bits.bit_6);
        bytetest_80_81 = simd_andc(tmp36, tmp92);
        tmp93 = simd_and(tmp26, bytetest_89);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(tmp93, carryQ.get_carry_in(9), tmp94));
        tmp95 = simd_and(tmp94, bytetest_80_81);
        tmp96 = simd_andc(tmp90, tmp5);
        bytetest_88 = simd_and(tmp36, tmp96);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp97 = simd_and(tmp26, bytetest_88);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(tmp97, carryQ.get_carry_in(10), tmp98));
        tmp99 = simd_and(tmp98, bytetest_80_bf);
        tmp100 = simd_or(tmp99, tmp95);
        struct_So.cc = simd_or(tmp100, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp35, tmp12);
        bytetest_89 = simd_and(tmp36, tmp91);
        bytetest_85_85 = simd_and(tmp36, tmp46);
        tmp101 = simd_and(tmp94, bytetest_85_85);
        struct_So.cc = simd_or(tmp101, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp35, tmp12);
        bytetest_8d = simd_and(tmp36, tmp12);
        tmp102 = simd_and(basis_bits.bit_3, tmp40);
        bytetest_80_96 = simd_andc(tmp81, tmp102);
        tmp103 = simd_and(tmp26, bytetest_8d);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(tmp103, carryQ.get_carry_in(11), tmp104));
        tmp105 = simd_and(tmp104, bytetest_80_96);
        tmp106 = simd_andc(tmp10, tmp5);
        bytetest_8c = simd_and(tmp36, tmp106);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp107 = simd_and(tmp26, bytetest_8c);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(tmp107, carryQ.get_carry_in(12), tmp108));
        tmp109 = simd_and(tmp108, bytetest_80_bf);
        tmp110 = simd_or(tmp109, tmp105);
        struct_So.cc = simd_or(tmp110, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        tmp111 = simd_and(tmp10, tmp15);
        bytetest_9f = simd_and(tmp35, tmp111);
        bytetest_80 = simd_andc(tmp36, tmp6);
        tmp112 = simd_and(basis_bits.bit_2, tmp77);
        bytetest_80_ab = simd_andc(bytetest_80_bf, tmp112);
        tmp113 = simd_and(tmp24, bytetest_9f);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(tmp113, carryQ.get_carry_in(13), tmp114));
        tmp115 = simd_and(tmp114, bytetest_80);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(tmp115, carryQ.get_carry_in(14), tmp116));
        tmp117 = simd_and(tmp116, bytetest_80_ab);
        struct_So.cc = simd_or(tmp117, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp35, tmp111);
        tmp118 = simd_andc(tmp66, tmp4);
        bytetest_82 = simd_and(tmp36, tmp118);
        tmp119 = simd_and(basis_bits.bit_3, tmp4);
        bytetest_80_93 = simd_andc(tmp81, tmp119);
        tmp120 = simd_and(tmp114, bytetest_82);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(tmp120, carryQ.get_carry_in(15), tmp121));
        tmp122 = simd_and(tmp121, bytetest_80_93);
        tmp123 = simd_andc(tmp11, tmp4);
        bytetest_81 = simd_and(tmp36, tmp123);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp124 = simd_and(tmp114, bytetest_81);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(tmp124, carryQ.get_carry_in(16), tmp125));
        tmp126 = simd_and(tmp125, bytetest_80_bf);
        bytetest_80 = simd_andc(tmp36, tmp6);
        bytetest_b0_bf = simd_and(bytetest_80_bf, tmp2);
        tmp127 = simd_and(tmp116, bytetest_b0_bf);
        tmp128 = simd_or(tmp127, tmp126);
        tmp129 = simd_or(tmp128, tmp122);
        struct_So.cc = simd_or(tmp129, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp35, tmp111);
        bytetest_82 = simd_and(tmp36, tmp118);
        tmp130 = simd_and(basis_bits.bit_4, tmp39);
        bytetest_a0_ae = simd_andc(tmp61, tmp130);
        tmp131 = simd_and(tmp121, bytetest_a0_ae);
        struct_So.cc = simd_or(tmp131, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp35, tmp111);
        bytetest_82 = simd_and(tmp36, tmp118);
        tmp132 = simd_not(tmp39);
        tmp133 = simd_or(simd_and(basis_bits.bit_4, tmp132), simd_andc(tmp55, basis_bits.bit_4));
        bytetest_b1_be = simd_and(bytetest_b0_bf, tmp133);
        tmp134 = simd_and(tmp121, bytetest_b1_be);
        struct_So.cc = simd_or(tmp134, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp35, tmp111);
        bytetest_83 = simd_and(tmp36, tmp16);
        tmp135 = simd_or(basis_bits.bit_4, tmp55);
        bytetest_81_8f = simd_and(tmp36, tmp135);
        tmp136 = simd_and(tmp114, bytetest_83);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(tmp136, carryQ.get_carry_in(17), tmp137));
        tmp138 = simd_and(tmp137, bytetest_81_8f);
        struct_So.cc = simd_or(tmp138, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp35, tmp111);
        bytetest_83 = simd_and(tmp36, tmp16);
        bytetest_91_9f = simd_and(tmp35, tmp135);
        tmp139 = simd_and(tmp137, bytetest_91_9f);
        struct_So.cc = simd_or(tmp139, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp35, tmp111);
        bytetest_84 = simd_and(tmp36, tmp38);
        tmp140 = simd_or(basis_bits.bit_3, tmp111);
        tmp141 = simd_not(tmp140);
        tmp142 = simd_or(simd_and(basis_bits.bit_2, tmp141), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
        bytetest_90_ae = simd_and(bytetest_80_bf, tmp142);
        tmp143 = simd_and(tmp114, bytetest_84);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(tmp143, carryQ.get_carry_in(18), tmp144));
        tmp145 = simd_and(tmp144, bytetest_90_ae);
        struct_So.cc = simd_or(tmp145, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp35, tmp111);
        bytetest_85 = simd_and(tmp36, tmp46);
        bytetest_80_ab = simd_andc(bytetest_80_bf, tmp112);
        tmp146 = simd_and(tmp114, bytetest_85);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(tmp146, carryQ.get_carry_in(19), tmp147));
        tmp148 = simd_and(tmp147, bytetest_80_ab);
        bytetest_84 = simd_and(tmp36, tmp38);
        bytetest_b0_bf = simd_and(bytetest_80_bf, tmp2);
        tmp149 = simd_and(tmp144, bytetest_b0_bf);
        tmp150 = simd_or(tmp149, tmp148);
        struct_So.cc = simd_or(tmp150, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp35, tmp111);
        bytetest_86 = simd_and(tmp36, tmp67);
        tmp151 = simd_or(basis_bits.bit_5, tmp15);
        tmp152 = simd_and(basis_bits.bit_4, tmp151);
        tmp153 = simd_and(basis_bits.bit_3, tmp152);
        bytetest_80_9a = simd_andc(tmp81, tmp153);
        tmp154 = simd_and(tmp114, bytetest_86);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(tmp154, carryQ.get_carry_in(20), tmp155));
        tmp156 = simd_and(tmp155, bytetest_80_9a);
        bytetest_85 = simd_and(tmp36, tmp46);
        bytetest_b0_bf = simd_and(bytetest_80_bf, tmp2);
        tmp157 = simd_and(tmp147, bytetest_b0_bf);
        tmp158 = simd_or(tmp157, tmp156);
        struct_So.cc = simd_or(tmp158, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp35, tmp111);
        bytetest_88 = simd_and(tmp36, tmp96);
        tmp159 = simd_andc(tmp36, tmp4);
        bytetest_80_82 = simd_andc(tmp159, tmp15);
        tmp160 = simd_and(tmp114, bytetest_88);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(tmp160, carryQ.get_carry_in(21), tmp161));
        tmp162 = simd_and(tmp161, bytetest_80_82);
        bytetest_87 = simd_and(tmp36, tmp80);
        tmp163 = simd_or(basis_bits.bit_3, tmp18);
        bytetest_a6_bf = simd_and(tmp54, tmp163);
        tmp164 = simd_and(tmp114, bytetest_87);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(tmp164, carryQ.get_carry_in(22), tmp165));
        tmp166 = simd_and(tmp165, bytetest_a6_bf);
        tmp167 = simd_or(tmp166, tmp162);
        struct_So.cc = simd_or(tmp167, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp35, tmp111);
        bytetest_88 = simd_and(tmp36, tmp96);
        tmp168 = simd_not(tmp153);
        tmp169 = simd_or(simd_and(basis_bits.bit_2, tmp168), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
        bytetest_90_ba = simd_and(bytetest_80_bf, tmp169);
        tmp170 = simd_and(tmp161, bytetest_90_ba);
        struct_So.cc = simd_or(tmp170, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp35, tmp111);
        bytetest_89 = simd_and(tmp36, tmp91);
        bytetest_80_88 = simd_andc(tmp36, tmp56);
        tmp171 = simd_and(tmp114, bytetest_89);
        carryQ.cq[23] = carryout2carry(pablo_blk_Advance(tmp171, carryQ.get_carry_in(23), tmp172));
        tmp173 = simd_and(tmp172, bytetest_80_88);
        struct_So.cc = simd_or(tmp173, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp35, tmp111);
        bytetest_89 = simd_and(tmp36, tmp91);
        bytetest_90_91 = simd_andc(tmp35, tmp92);
        tmp174 = simd_and(tmp172, bytetest_90_91);
        struct_So.cc = simd_or(tmp174, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp35, tmp111);
        bytetest_8c = simd_and(tmp36, tmp106);
        tmp175 = simd_or(basis_bits.bit_3, tmp6);
        tmp176 = simd_and(basis_bits.bit_2, tmp175);
        bytetest_80_a0 = simd_andc(bytetest_80_bf, tmp176);
        tmp177 = simd_and(tmp114, bytetest_8c);
        carryQ.cq[24] = carryout2carry(pablo_blk_Advance(tmp177, carryQ.get_carry_in(24), tmp178));
        tmp179 = simd_and(tmp178, bytetest_80_a0);
        struct_So.cc = simd_or(tmp179, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp35, tmp111);
        bytetest_8c = simd_and(tmp36, tmp106);
        tmp180 = simd_andc(bytetest_b0_bf, basis_bits.bit_4);
        bytetest_b0_b5 = simd_andc(tmp180, tmp17);
        tmp181 = simd_and(tmp178, bytetest_b0_b5);
        struct_So.cc = simd_or(tmp181, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp35, tmp111);
        bytetest_8d = simd_and(tmp36, tmp12);
        tmp182 = simd_and(tmp10, tmp5);
        tmp183 = simd_and(basis_bits.bit_3, tmp182);
        tmp184 = simd_and(basis_bits.bit_2, tmp183);
        bytetest_80_bc = simd_andc(bytetest_80_bf, tmp184);
        tmp185 = simd_and(tmp114, bytetest_8d);
        carryQ.cq[25] = carryout2carry(pablo_blk_Advance(tmp185, carryQ.get_carry_in(25), tmp186));
        tmp187 = simd_and(tmp186, bytetest_80_bc);
        bytetest_8c = simd_and(tmp36, tmp106);
        bytetest_b7_bf = simd_and(bytetest_b0_bf, tmp40);
        tmp188 = simd_and(tmp178, bytetest_b7_bf);
        tmp189 = simd_or(tmp188, tmp187);
        struct_So.cc = simd_or(tmp189, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp35, tmp111);
        tmp190 = simd_and(tmp10, tmp66);
        bytetest_8e = simd_and(tmp36, tmp190);
        bytetest_80_93 = simd_andc(tmp81, tmp119);
        tmp191 = simd_and(tmp114, bytetest_8e);
        carryQ.cq[26] = carryout2carry(pablo_blk_Advance(tmp191, carryQ.get_carry_in(26), tmp192));
        tmp193 = simd_and(tmp192, bytetest_80_93);
        struct_So.cc = simd_or(tmp193, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp35, tmp111);
        bytetest_8f = simd_and(tmp36, tmp111);
        bytetest_80_84 = simd_andc(tmp68, tmp47);
        tmp194 = simd_and(tmp114, bytetest_8f);
        carryQ.cq[27] = carryout2carry(pablo_blk_Advance(tmp194, carryQ.get_carry_in(27), tmp195));
        tmp196 = simd_and(tmp195, bytetest_80_84);
        bytetest_8e = simd_and(tmp36, tmp190);
        bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp197 = simd_and(tmp192, bytetest_a0_bf);
        tmp198 = simd_or(tmp197, tmp196);
        struct_So.cc = simd_or(tmp198, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp35, tmp111);
        bytetest_8f = simd_and(tmp36, tmp111);
        tmp199 = simd_not(tmp151);
        tmp200 = simd_or(simd_and(basis_bits.bit_4, tmp199), simd_andc(tmp17, basis_bits.bit_4));
        bytetest_86_8a = simd_and(tmp36, tmp200);
        tmp201 = simd_and(tmp195, bytetest_86_8a);
        struct_So.cc = simd_or(tmp201, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp35, tmp111);
        bytetest_8f = simd_and(tmp36, tmp111);
        tmp202 = simd_and(basis_bits.bit_3, tmp6);
        bytetest_a0_b0 = simd_andc(bytetest_a0_bf, tmp202);
        tmp203 = simd_and(tmp195, bytetest_a0_b0);
        struct_So.cc = simd_or(tmp203, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp35, tmp111);
        bytetest_90 = simd_andc(tmp35, tmp6);
        tmp204 = simd_and(basis_bits.bit_3, tmp111);
        tmp205 = simd_and(basis_bits.bit_2, tmp204);
        bytetest_80_be = simd_andc(bytetest_80_bf, tmp205);
        tmp206 = simd_and(tmp114, bytetest_90);
        carryQ.cq[28] = carryout2carry(pablo_blk_Advance(tmp206, carryQ.get_carry_in(28), tmp207));
        tmp208 = simd_and(tmp207, bytetest_80_be);
        struct_So.cc = simd_or(tmp208, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp35, tmp111);
        bytetest_91 = simd_and(tmp35, tmp123);
        bytetest_80_80 = simd_andc(tmp36, tmp6);
        tmp209 = simd_and(tmp114, bytetest_91);
        carryQ.cq[29] = carryout2carry(pablo_blk_Advance(tmp209, carryQ.get_carry_in(29), tmp210));
        tmp211 = simd_and(tmp210, bytetest_80_80);
        struct_So.cc = simd_or(tmp211, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp35, tmp111);
        bytetest_93 = simd_and(tmp35, tmp16);
        tmp212 = simd_and(basis_bits.bit_3, basis_bits.bit_4);
        tmp213 = simd_and(basis_bits.bit_2, tmp212);
        bytetest_80_b7 = simd_andc(bytetest_80_bf, tmp213);
        tmp214 = simd_and(tmp114, bytetest_93);
        carryQ.cq[30] = carryout2carry(pablo_blk_Advance(tmp214, carryQ.get_carry_in(30), tmp215));
        tmp216 = simd_and(tmp215, bytetest_80_b7);
        bytetest_92 = simd_and(tmp35, tmp118);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp217 = simd_and(tmp114, bytetest_92);
        carryQ.cq[31] = carryout2carry(pablo_blk_Advance(tmp217, carryQ.get_carry_in(31), tmp218));
        tmp219 = simd_and(tmp218, bytetest_80_bf);
        bytetest_91 = simd_and(tmp35, tmp123);
        tmp220 = simd_or(basis_bits.bit_3, tmp92);
        tmp221 = simd_or(basis_bits.bit_2, tmp220);
        bytetest_82_bf = simd_and(bytetest_80_bf, tmp221);
        tmp222 = simd_and(tmp210, bytetest_82_bf);
        tmp223 = simd_or(tmp222, tmp219);
        tmp224 = simd_or(tmp223, tmp216);
        struct_So.cc = simd_or(tmp224, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp35, tmp111);
        bytetest_93 = simd_and(tmp35, tmp16);
        tmp225 = simd_and(bytetest_b0_bf, basis_bits.bit_4);
        tmp226 = simd_or(simd_and(basis_bits.bit_5, tmp63), simd_andc(tmp5, basis_bits.bit_5));
        bytetest_b9_bc = simd_and(tmp225, tmp226);
        tmp227 = simd_and(tmp215, bytetest_b9_bc);
        struct_So.cc = simd_or(tmp227, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp35, tmp111);
        bytetest_94 = simd_and(tmp35, tmp38);
        tmp228 = simd_and(basis_bits.bit_2, tmp83);
        bytetest_80_bd = simd_andc(bytetest_80_bf, tmp228);
        tmp229 = simd_and(tmp114, bytetest_94);
        carryQ.cq[32] = carryout2carry(pablo_blk_Advance(tmp229, carryQ.get_carry_in(32), tmp230));
        tmp231 = simd_and(tmp230, bytetest_80_bd);
        struct_So.cc = simd_or(tmp231, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp35, tmp111);
        bytetest_95 = simd_and(tmp35, tmp46);
        bytetest_80_83 = simd_andc(tmp36, tmp4);
        tmp232 = simd_and(tmp114, bytetest_95);
        carryQ.cq[33] = carryout2carry(pablo_blk_Advance(tmp232, carryQ.get_carry_in(33), tmp233));
        tmp234 = simd_and(tmp233, bytetest_80_83);
        struct_So.cc = simd_or(tmp234, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp35, tmp111);
        bytetest_95 = simd_and(tmp35, tmp46);
        tmp235 = simd_or(basis_bits.bit_3, basis_bits.bit_4);
        tmp236 = simd_not(tmp235);
        tmp237 = simd_or(simd_and(basis_bits.bit_2, tmp236), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
        bytetest_90_a7 = simd_and(bytetest_80_bf, tmp237);
        tmp238 = simd_and(tmp233, bytetest_90_a7);
        struct_So.cc = simd_or(tmp238, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp35, tmp111);
        bytetest_99 = simd_and(tmp35, tmp91);
        bytetest_80_80 = simd_andc(tmp36, tmp6);
        tmp239 = simd_and(tmp114, bytetest_99);
        carryQ.cq[34] = carryout2carry(pablo_blk_Advance(tmp239, carryQ.get_carry_in(34), tmp240));
        tmp241 = simd_and(tmp240, bytetest_80_80);
        bytetest_98 = simd_and(tmp35, tmp96);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp242 = simd_and(tmp114, bytetest_98);
        carryQ.cq[35] = carryout2carry(pablo_blk_Advance(tmp242, carryQ.get_carry_in(35), tmp243));
        tmp244 = simd_and(tmp243, bytetest_80_bf);
        bytetest_97 = simd_and(tmp35, tmp80);
        bytetest_bb_bf = simd_and(tmp225, tmp151);
        tmp245 = simd_and(tmp114, bytetest_97);
        carryQ.cq[36] = carryout2carry(pablo_blk_Advance(tmp245, carryQ.get_carry_in(36), tmp246));
        tmp247 = simd_and(tmp246, bytetest_bb_bf);
        tmp248 = simd_or(tmp247, tmp244);
        tmp249 = simd_or(tmp248, tmp241);
        struct_So.cc = simd_or(tmp249, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp35, tmp111);
        bytetest_99 = simd_and(tmp35, tmp91);
        bytetest_85_8f = simd_and(tmp36, tmp48);
        tmp250 = simd_and(tmp240, bytetest_85_8f);
        struct_So.cc = simd_or(tmp250, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp35, tmp111);
        tmp251 = simd_and(tmp90, tmp15);
        bytetest_9b = simd_and(tmp35, tmp251);
        bytetest_80_85 = simd_andc(tmp68, tmp17);
        tmp252 = simd_and(tmp114, bytetest_9b);
        carryQ.cq[37] = carryout2carry(pablo_blk_Advance(tmp252, carryQ.get_carry_in(37), tmp253));
        tmp254 = simd_and(tmp253, bytetest_80_85);
        tmp255 = simd_and(tmp90, tmp66);
        bytetest_9a = simd_and(tmp35, tmp255);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp256 = simd_and(tmp114, bytetest_9a);
        carryQ.cq[38] = carryout2carry(pablo_blk_Advance(tmp256, carryQ.get_carry_in(38), tmp257));
        tmp258 = simd_and(tmp257, bytetest_80_bf);
        tmp259 = simd_or(tmp258, tmp254);
        struct_So.cc = simd_or(tmp259, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp35, tmp111);
        bytetest_9d = simd_and(tmp35, tmp12);
        tmp260 = simd_and(basis_bits.bit_2, tmp119);
        bytetest_80_b3 = simd_andc(bytetest_80_bf, tmp260);
        tmp261 = simd_and(tmp114, bytetest_9d);
        carryQ.cq[39] = carryout2carry(pablo_blk_Advance(tmp261, carryQ.get_carry_in(39), tmp262));
        tmp263 = simd_and(tmp262, bytetest_80_b3);
        bytetest_9c = simd_and(tmp35, tmp106);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp264 = simd_and(tmp114, bytetest_9c);
        carryQ.cq[40] = carryout2carry(pablo_blk_Advance(tmp264, carryQ.get_carry_in(40), tmp265));
        tmp266 = simd_and(tmp265, bytetest_80_bf);
        tmp267 = simd_or(tmp266, tmp263);
        struct_So.cc = simd_or(tmp267, struct_So.cc);
        tmp268 = simd_andc(tmp1, basis_bits.bit_2);
        bytetest_c2_df = simd_and(tmp268, tmp220);
        if ((bitblock::any(bytetest_c2_df) || carryQ.CarryTest(41, 5))) {
          r80_7ff_tmp1 = simd_andc(tmp1, tmp13);
          bytetest_c2 = simd_and(r80_7ff_tmp1, tmp118);
          bytetest_a6_a6 = simd_and(tmp61, tmp67);
          r80_7ff_tmp2 = simd_and(tmp22, bytetest_c2);
          carryQ.cq[41] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp2, carryQ.get_carry_in(41), r80_7ff_tmp3));
          r80_7ff_tmp4 = simd_and(r80_7ff_tmp3, bytetest_a6_a6);
          struct_So.cc = simd_or(r80_7ff_tmp4, struct_So.cc);
          bytetest_c2 = simd_and(r80_7ff_tmp1, tmp118);
          bytetest_a9_a9 = simd_and(tmp61, tmp91);
          r80_7ff_tmp5 = simd_and(r80_7ff_tmp3, bytetest_a9_a9);
          struct_So.cc = simd_or(r80_7ff_tmp5, struct_So.cc);
          bytetest_c2 = simd_and(r80_7ff_tmp1, tmp118);
          bytetest_ae_ae = simd_and(tmp61, tmp190);
          r80_7ff_tmp6 = simd_and(r80_7ff_tmp3, bytetest_ae_ae);
          struct_So.cc = simd_or(r80_7ff_tmp6, struct_So.cc);
          bytetest_c2 = simd_and(r80_7ff_tmp1, tmp118);
          bytetest_b0_b0 = simd_andc(bytetest_b0_bf, tmp6);
          r80_7ff_tmp7 = simd_and(r80_7ff_tmp3, bytetest_b0_b0);
          struct_So.cc = simd_or(r80_7ff_tmp7, struct_So.cc);
          r80_7ff_tmp8 = simd_and(tmp1, tmp8);
          bytetest_d2 = simd_and(r80_7ff_tmp8, tmp118);
          bytetest_82_82 = simd_and(tmp36, tmp118);
          r80_7ff_tmp9 = simd_and(tmp22, bytetest_d2);
          carryQ.cq[42] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp9, carryQ.get_carry_in(42), r80_7ff_tmp10));
          r80_7ff_tmp11 = simd_and(r80_7ff_tmp10, bytetest_82_82);
          struct_So.cc = simd_or(r80_7ff_tmp11, struct_So.cc);
          bytetest_d8 = simd_and(r80_7ff_tmp8, tmp96);
          bytetest_8e_8f = simd_and(tmp36, tmp82);
          r80_7ff_tmp12 = simd_and(tmp22, bytetest_d8);
          carryQ.cq[43] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp12, carryQ.get_carry_in(43), r80_7ff_tmp13));
          r80_7ff_tmp14 = simd_and(r80_7ff_tmp13, bytetest_8e_8f);
          struct_So.cc = simd_or(r80_7ff_tmp14, struct_So.cc);
          bytetest_db = simd_and(r80_7ff_tmp8, tmp251);
          bytetest_9e_9e = simd_and(tmp35, tmp190);
          r80_7ff_tmp15 = simd_and(tmp22, bytetest_db);
          carryQ.cq[44] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp15, carryQ.get_carry_in(44), r80_7ff_tmp16));
          r80_7ff_tmp17 = simd_and(r80_7ff_tmp16, bytetest_9e_9e);
          struct_So.cc = simd_or(r80_7ff_tmp17, struct_So.cc);
          bytetest_db = simd_and(r80_7ff_tmp8, tmp251);
          bytetest_a9_a9 = simd_and(tmp61, tmp91);
          r80_7ff_tmp18 = simd_and(r80_7ff_tmp16, bytetest_a9_a9);
          struct_So.cc = simd_or(r80_7ff_tmp18, struct_So.cc);
          bytetest_db = simd_and(r80_7ff_tmp8, tmp251);
          r80_7ff_tmp19 = simd_and(bytetest_b0_bf, tmp10);
          r80_7ff_tmp20 = simd_not(basis_bits.bit_7);
          r80_7ff_tmp21 = simd_or(simd_and(basis_bits.bit_6, r80_7ff_tmp20), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
          bytetest_bd_be = simd_and(r80_7ff_tmp19, r80_7ff_tmp21);
          r80_7ff_tmp22 = simd_and(r80_7ff_tmp16, bytetest_bd_be);
          struct_So.cc = simd_or(r80_7ff_tmp22, struct_So.cc);
          bytetest_df = simd_and(r80_7ff_tmp8, tmp111);
          bytetest_b6_b6 = simd_and(bytetest_b0_bf, tmp67);
          r80_7ff_tmp23 = simd_and(tmp22, bytetest_df);
          carryQ.cq[45] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp23, carryQ.get_carry_in(45), r80_7ff_tmp24));
          r80_7ff_tmp25 = simd_and(r80_7ff_tmp24, bytetest_b6_b6);
          struct_So.cc = simd_or(r80_7ff_tmp25, struct_So.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(41, 5);
        }
        tmp269 = simd_and(tmp1, tmp60);
        bytetest_e1_ef = simd_and(tmp269, tmp135);
        bytetest_e0 = simd_andc(tmp269, tmp6);
        bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp270 = simd_and(tmp22, bytetest_e0);
        carryQ.cq[46] = carryout2carry(pablo_blk_Advance(tmp270, carryQ.get_carry_in(46), tmp271));
        tmp272 = simd_and(tmp271, bytetest_a0_bf);
        tmp273 = simd_or(tmp272, bytetest_e1_ef);
        if ((bitblock::any(tmp273) || carryQ.CarryTest(47, 64))) {
          r800_ffff_tmp1 = simd_and(tmp1, tmp60);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a7 = simd_and(tmp61, tmp80);
          bytetest_ba_ba = simd_and(bytetest_b0_bf, tmp255);
          r800_ffff_tmp2 = simd_and(tmp22, bytetest_e0);
          carryQ.cq[47] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp2, carryQ.get_carry_in(47), r800_ffff_tmp3));
          r800_ffff_tmp4 = simd_and(r800_ffff_tmp3, bytetest_a7);
          carryQ.cq[48] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp4, carryQ.get_carry_in(48), r800_ffff_tmp5));
          r800_ffff_tmp6 = simd_and(r800_ffff_tmp5, bytetest_ba_ba);
          struct_So.cc = simd_or(r800_ffff_tmp6, struct_So.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ad = simd_and(tmp61, tmp12);
          bytetest_b0_b0 = simd_andc(bytetest_b0_bf, tmp6);
          r800_ffff_tmp7 = simd_and(r800_ffff_tmp3, bytetest_ad);
          carryQ.cq[49] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp7, carryQ.get_carry_in(49), r800_ffff_tmp8));
          r800_ffff_tmp9 = simd_and(r800_ffff_tmp8, bytetest_b0_b0);
          struct_So.cc = simd_or(r800_ffff_tmp9, struct_So.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_af = simd_and(tmp61, tmp111);
          r800_ffff_tmp10 = simd_not(tmp55);
          r800_ffff_tmp11 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp10), simd_andc(tmp151, basis_bits.bit_4));
          bytetest_b3_b8 = simd_and(bytetest_b0_bf, r800_ffff_tmp11);
          r800_ffff_tmp12 = simd_and(r800_ffff_tmp3, bytetest_af);
          carryQ.cq[50] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp12, carryQ.get_carry_in(50), r800_ffff_tmp13));
          r800_ffff_tmp14 = simd_and(r800_ffff_tmp13, bytetest_b3_b8);
          struct_So.cc = simd_or(r800_ffff_tmp14, struct_So.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_af = simd_and(tmp61, tmp111);
          bytetest_ba_ba = simd_and(bytetest_b0_bf, tmp255);
          r800_ffff_tmp15 = simd_and(r800_ffff_tmp13, bytetest_ba_ba);
          struct_So.cc = simd_or(r800_ffff_tmp15, struct_So.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b1 = simd_and(bytetest_b0_bf, tmp123);
          bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp111);
          r800_ffff_tmp16 = simd_and(r800_ffff_tmp3, bytetest_b1);
          carryQ.cq[51] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp16, carryQ.get_carry_in(51), r800_ffff_tmp17));
          r800_ffff_tmp18 = simd_and(r800_ffff_tmp17, bytetest_bf_bf);
          struct_So.cc = simd_or(r800_ffff_tmp18, struct_So.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b5 = simd_and(bytetest_b0_bf, tmp46);
          bytetest_b9_b9 = simd_and(bytetest_b0_bf, tmp91);
          r800_ffff_tmp19 = simd_and(r800_ffff_tmp3, bytetest_b5);
          carryQ.cq[52] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp19, carryQ.get_carry_in(52), r800_ffff_tmp20));
          r800_ffff_tmp21 = simd_and(r800_ffff_tmp20, bytetest_b9_b9);
          struct_So.cc = simd_or(r800_ffff_tmp21, struct_So.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bc = simd_and(bytetest_b0_bf, tmp106);
          bytetest_81_83 = simd_and(bytetest_80_83, tmp5);
          r800_ffff_tmp22 = simd_and(r800_ffff_tmp3, bytetest_bc);
          carryQ.cq[53] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp22, carryQ.get_carry_in(53), r800_ffff_tmp23));
          r800_ffff_tmp24 = simd_and(r800_ffff_tmp23, bytetest_81_83);
          struct_So.cc = simd_or(r800_ffff_tmp24, struct_So.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bc = simd_and(bytetest_b0_bf, tmp106);
          bytetest_93_93 = simd_and(tmp35, tmp16);
          r800_ffff_tmp25 = simd_and(r800_ffff_tmp23, bytetest_93_93);
          struct_So.cc = simd_or(r800_ffff_tmp25, struct_So.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bc = simd_and(bytetest_b0_bf, tmp106);
          r800_ffff_tmp26 = simd_and(tmp35, tmp37);
          bytetest_95_97 = simd_and(r800_ffff_tmp26, tmp5);
          r800_ffff_tmp27 = simd_and(r800_ffff_tmp23, bytetest_95_97);
          struct_So.cc = simd_or(r800_ffff_tmp27, struct_So.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bc = simd_and(bytetest_b0_bf, tmp106);
          r800_ffff_tmp28 = simd_and(tmp35, basis_bits.bit_4);
          bytetest_9a_9f = simd_and(r800_ffff_tmp28, tmp73);
          r800_ffff_tmp29 = simd_and(r800_ffff_tmp23, bytetest_9a_9f);
          struct_So.cc = simd_or(r800_ffff_tmp29, struct_So.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bc = simd_and(bytetest_b0_bf, tmp106);
          bytetest_b4_b4 = simd_and(bytetest_b0_bf, tmp38);
          r800_ffff_tmp30 = simd_and(r800_ffff_tmp23, bytetest_b4_b4);
          struct_So.cc = simd_or(r800_ffff_tmp30, struct_So.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bc = simd_and(bytetest_b0_bf, tmp106);
          bytetest_b6_b6 = simd_and(bytetest_b0_bf, tmp67);
          r800_ffff_tmp31 = simd_and(r800_ffff_tmp23, bytetest_b6_b6);
          struct_So.cc = simd_or(r800_ffff_tmp31, struct_So.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bc = simd_and(bytetest_b0_bf, tmp106);
          bytetest_b8_b8 = simd_and(bytetest_b0_bf, tmp96);
          r800_ffff_tmp32 = simd_and(r800_ffff_tmp23, bytetest_b8_b8);
          struct_So.cc = simd_or(r800_ffff_tmp32, struct_So.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp111);
          bytetest_80_85 = simd_andc(tmp68, tmp17);
          r800_ffff_tmp33 = simd_and(r800_ffff_tmp3, bytetest_bf);
          carryQ.cq[54] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp33, carryQ.get_carry_in(54), r800_ffff_tmp34));
          r800_ffff_tmp35 = simd_and(r800_ffff_tmp34, bytetest_80_85);
          bytetest_be = simd_and(bytetest_b0_bf, tmp190);
          bytetest_be_bf = simd_and(bytetest_b0_bf, tmp82);
          r800_ffff_tmp36 = simd_and(r800_ffff_tmp3, bytetest_be);
          carryQ.cq[55] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp36, carryQ.get_carry_in(55), r800_ffff_tmp37));
          r800_ffff_tmp38 = simd_and(r800_ffff_tmp37, bytetest_be_bf);
          r800_ffff_tmp39 = simd_or(r800_ffff_tmp38, r800_ffff_tmp35);
          struct_So.cc = simd_or(r800_ffff_tmp39, struct_So.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp111);
          r800_ffff_tmp40 = simd_not(tmp47);
          r800_ffff_tmp41 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp40), simd_andc(tmp39, basis_bits.bit_4));
          bytetest_87_8c = simd_and(tmp36, r800_ffff_tmp41);
          r800_ffff_tmp42 = simd_and(r800_ffff_tmp34, bytetest_87_8c);
          struct_So.cc = simd_or(r800_ffff_tmp42, struct_So.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp111);
          bytetest_8e_8f = simd_and(tmp36, tmp82);
          r800_ffff_tmp43 = simd_and(r800_ffff_tmp34, bytetest_8e_8f);
          struct_So.cc = simd_or(r800_ffff_tmp43, struct_So.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp111);
          r800_ffff_tmp44 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp10), simd_andc(tmp47, basis_bits.bit_4));
          bytetest_95_98 = simd_and(tmp35, r800_ffff_tmp44);
          r800_ffff_tmp45 = simd_and(r800_ffff_tmp34, bytetest_95_98);
          struct_So.cc = simd_or(r800_ffff_tmp45, struct_So.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp123);
          bytetest_82 = simd_and(tmp36, tmp118);
          bytetest_9e_9f = simd_and(tmp35, tmp82);
          r800_ffff_tmp46 = simd_and(tmp22, bytetest_e1);
          carryQ.cq[56] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp46, carryQ.get_carry_in(56), r800_ffff_tmp47));
          r800_ffff_tmp48 = simd_and(r800_ffff_tmp47, bytetest_82);
          carryQ.cq[57] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp48, carryQ.get_carry_in(57), r800_ffff_tmp49));
          r800_ffff_tmp50 = simd_and(r800_ffff_tmp49, bytetest_9e_9f);
          struct_So.cc = simd_or(r800_ffff_tmp50, struct_So.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp123);
          bytetest_8e = simd_and(tmp36, tmp190);
          bytetest_90_99 = simd_andc(tmp35, tmp74);
          r800_ffff_tmp51 = simd_and(r800_ffff_tmp47, bytetest_8e);
          carryQ.cq[58] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp51, carryQ.get_carry_in(58), r800_ffff_tmp52));
          r800_ffff_tmp53 = simd_and(r800_ffff_tmp52, bytetest_90_99);
          struct_So.cc = simd_or(r800_ffff_tmp53, struct_So.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp123);
          bytetest_a5 = simd_and(tmp61, tmp46);
          bytetest_80_80 = simd_andc(tmp36, tmp6);
          r800_ffff_tmp54 = simd_and(r800_ffff_tmp47, bytetest_a5);
          carryQ.cq[59] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp54, carryQ.get_carry_in(59), r800_ffff_tmp55));
          r800_ffff_tmp56 = simd_and(r800_ffff_tmp55, bytetest_80_80);
          struct_So.cc = simd_or(r800_ffff_tmp56, struct_So.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp123);
          bytetest_a7 = simd_and(tmp61, tmp80);
          r800_ffff_tmp57 = simd_or(basis_bits.bit_2, tmp83);
          bytetest_9e_bf = simd_and(bytetest_80_bf, r800_ffff_tmp57);
          r800_ffff_tmp58 = simd_and(r800_ffff_tmp47, bytetest_a7);
          carryQ.cq[60] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp58, carryQ.get_carry_in(60), r800_ffff_tmp59));
          r800_ffff_tmp60 = simd_and(r800_ffff_tmp59, bytetest_9e_bf);
          struct_So.cc = simd_or(r800_ffff_tmp60, struct_So.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp123);
          bytetest_ad = simd_and(tmp61, tmp12);
          r800_ffff_tmp61 = simd_or(simd_and(basis_bits.bit_4, tmp199), simd_andc(tmp55, basis_bits.bit_4));
          bytetest_a1_aa = simd_and(tmp61, r800_ffff_tmp61);
          r800_ffff_tmp62 = simd_and(r800_ffff_tmp47, bytetest_ad);
          carryQ.cq[61] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp62, carryQ.get_carry_in(61), r800_ffff_tmp63));
          r800_ffff_tmp64 = simd_and(r800_ffff_tmp63, bytetest_a1_aa);
          struct_So.cc = simd_or(r800_ffff_tmp64, struct_So.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp123);
          bytetest_ad = simd_and(tmp61, tmp12);
          r800_ffff_tmp65 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp40), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
          bytetest_b4_bc = simd_and(bytetest_b0_bf, r800_ffff_tmp65);
          r800_ffff_tmp66 = simd_and(r800_ffff_tmp63, bytetest_b4_bc);
          struct_So.cc = simd_or(r800_ffff_tmp66, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_84 = simd_and(tmp36, tmp38);
          bytetest_80_81 = simd_andc(tmp36, tmp92);
          r800_ffff_tmp67 = simd_and(tmp22, bytetest_e2);
          carryQ.cq[62] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp67, carryQ.get_carry_in(62), r800_ffff_tmp68));
          r800_ffff_tmp69 = simd_and(r800_ffff_tmp68, bytetest_84);
          carryQ.cq[63] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp69, carryQ.get_carry_in(63), r800_ffff_tmp70));
          r800_ffff_tmp71 = simd_and(r800_ffff_tmp70, bytetest_80_81);
          struct_So.cc = simd_or(r800_ffff_tmp71, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_84 = simd_and(tmp36, tmp38);
          r800_ffff_tmp72 = simd_not(tmp15);
          r800_ffff_tmp73 = simd_or(simd_and(basis_bits.bit_5, r800_ffff_tmp72), simd_andc(tmp15, basis_bits.bit_5));
          bytetest_83_86 = simd_and(tmp68, r800_ffff_tmp73);
          r800_ffff_tmp74 = simd_and(r800_ffff_tmp70, bytetest_83_86);
          struct_So.cc = simd_or(r800_ffff_tmp74, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_84 = simd_and(tmp36, tmp38);
          r800_ffff_tmp75 = simd_andc(tmp90, basis_bits.bit_6);
          bytetest_88_89 = simd_and(tmp36, r800_ffff_tmp75);
          r800_ffff_tmp76 = simd_and(r800_ffff_tmp70, bytetest_88_89);
          struct_So.cc = simd_or(r800_ffff_tmp76, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_84 = simd_and(tmp36, tmp38);
          bytetest_94_94 = simd_and(tmp35, tmp38);
          r800_ffff_tmp77 = simd_and(r800_ffff_tmp70, bytetest_94_94);
          struct_So.cc = simd_or(r800_ffff_tmp77, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_84 = simd_and(tmp36, tmp38);
          r800_ffff_tmp78 = simd_and(tmp37, basis_bits.bit_6);
          bytetest_96_97 = simd_and(tmp35, r800_ffff_tmp78);
          r800_ffff_tmp79 = simd_and(r800_ffff_tmp70, bytetest_96_97);
          struct_So.cc = simd_or(r800_ffff_tmp79, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_84 = simd_and(tmp36, tmp38);
          r800_ffff_tmp80 = simd_or(basis_bits.bit_3, tmp4);
          r800_ffff_tmp81 = simd_not(r800_ffff_tmp80);
          r800_ffff_tmp82 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp81), simd_andc(tmp83, basis_bits.bit_2));
          bytetest_9e_a3 = simd_and(bytetest_80_bf, r800_ffff_tmp82);
          r800_ffff_tmp83 = simd_and(r800_ffff_tmp70, bytetest_9e_a3);
          struct_So.cc = simd_or(r800_ffff_tmp83, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_84 = simd_and(tmp36, tmp38);
          bytetest_a5_a5 = simd_and(tmp61, tmp46);
          r800_ffff_tmp84 = simd_and(r800_ffff_tmp70, bytetest_a5_a5);
          struct_So.cc = simd_or(r800_ffff_tmp84, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_84 = simd_and(tmp36, tmp38);
          bytetest_a7_a7 = simd_and(tmp61, tmp80);
          r800_ffff_tmp85 = simd_and(r800_ffff_tmp70, bytetest_a7_a7);
          struct_So.cc = simd_or(r800_ffff_tmp85, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_84 = simd_and(tmp36, tmp38);
          bytetest_a9_a9 = simd_and(tmp61, tmp91);
          r800_ffff_tmp86 = simd_and(r800_ffff_tmp70, bytetest_a9_a9);
          struct_So.cc = simd_or(r800_ffff_tmp86, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_84 = simd_and(tmp36, tmp38);
          bytetest_ae_ae = simd_and(tmp61, tmp190);
          r800_ffff_tmp87 = simd_and(r800_ffff_tmp70, bytetest_ae_ae);
          struct_So.cc = simd_or(r800_ffff_tmp87, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_84 = simd_and(tmp36, tmp38);
          r800_ffff_tmp88 = simd_and(tmp90, basis_bits.bit_6);
          bytetest_ba_bb = simd_and(bytetest_b0_bf, r800_ffff_tmp88);
          r800_ffff_tmp89 = simd_and(r800_ffff_tmp70, bytetest_ba_bb);
          struct_So.cc = simd_or(r800_ffff_tmp89, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_85 = simd_and(tmp36, tmp46);
          bytetest_8a_8a = simd_and(tmp36, tmp255);
          r800_ffff_tmp90 = simd_and(r800_ffff_tmp68, bytetest_85);
          carryQ.cq[64] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp90, carryQ.get_carry_in(64), r800_ffff_tmp91));
          r800_ffff_tmp92 = simd_and(r800_ffff_tmp91, bytetest_8a_8a);
          struct_So.cc = simd_or(r800_ffff_tmp92, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_85 = simd_and(tmp36, tmp46);
          r800_ffff_tmp93 = simd_andc(tmp10, basis_bits.bit_6);
          bytetest_8c_8d = simd_and(tmp36, r800_ffff_tmp93);
          r800_ffff_tmp94 = simd_and(r800_ffff_tmp91, bytetest_8c_8d);
          struct_So.cc = simd_or(r800_ffff_tmp94, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_85 = simd_and(tmp36, tmp46);
          bytetest_8f_8f = simd_and(tmp36, tmp111);
          r800_ffff_tmp95 = simd_and(r800_ffff_tmp91, bytetest_8f_8f);
          struct_So.cc = simd_or(r800_ffff_tmp95, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_86 = simd_and(tmp36, tmp67);
          r800_ffff_tmp96 = simd_not(tmp73);
          r800_ffff_tmp97 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp96), simd_andc(tmp47, basis_bits.bit_4));
          bytetest_95_99 = simd_and(tmp35, r800_ffff_tmp97);
          r800_ffff_tmp98 = simd_and(r800_ffff_tmp68, bytetest_86);
          carryQ.cq[65] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp98, carryQ.get_carry_in(65), r800_ffff_tmp99));
          r800_ffff_tmp100 = simd_and(r800_ffff_tmp99, bytetest_95_99);
          struct_So.cc = simd_or(r800_ffff_tmp100, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_86 = simd_and(tmp36, tmp67);
          bytetest_9c_9f = simd_and(tmp35, tmp10);
          r800_ffff_tmp101 = simd_and(r800_ffff_tmp99, bytetest_9c_9f);
          struct_So.cc = simd_or(r800_ffff_tmp101, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_86 = simd_and(tmp36, tmp67);
          r800_ffff_tmp102 = simd_andc(tmp61, tmp4);
          r800_ffff_tmp103 = simd_not(basis_bits.bit_7);
          r800_ffff_tmp104 = simd_or(simd_and(basis_bits.bit_6, r800_ffff_tmp103), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
          bytetest_a1_a2 = simd_and(r800_ffff_tmp102, r800_ffff_tmp104);
          r800_ffff_tmp105 = simd_and(r800_ffff_tmp99, bytetest_a1_a2);
          struct_So.cc = simd_or(r800_ffff_tmp105, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_86 = simd_and(tmp36, tmp67);
          r800_ffff_tmp106 = simd_andc(tmp37, basis_bits.bit_6);
          bytetest_a4_a5 = simd_and(tmp61, r800_ffff_tmp106);
          r800_ffff_tmp107 = simd_and(r800_ffff_tmp99, bytetest_a4_a5);
          struct_So.cc = simd_or(r800_ffff_tmp107, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_86 = simd_and(tmp36, tmp67);
          r800_ffff_tmp108 = simd_not(tmp17);
          r800_ffff_tmp109 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp108), simd_andc(tmp39, basis_bits.bit_4));
          bytetest_a7_ad = simd_and(tmp61, r800_ffff_tmp109);
          r800_ffff_tmp110 = simd_and(r800_ffff_tmp99, bytetest_a7_ad);
          struct_So.cc = simd_or(r800_ffff_tmp110, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_87 = simd_and(tmp36, tmp80);
          r800_ffff_tmp111 = simd_and(basis_bits.bit_4, tmp17);
          bytetest_80_8d = simd_andc(tmp36, r800_ffff_tmp111);
          r800_ffff_tmp112 = simd_and(r800_ffff_tmp68, bytetest_87);
          carryQ.cq[66] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp112, carryQ.get_carry_in(66), r800_ffff_tmp113));
          r800_ffff_tmp114 = simd_and(r800_ffff_tmp113, bytetest_80_8d);
          bytetest_86 = simd_and(tmp36, tmp67);
          bytetest_af_bf = simd_and(bytetest_a0_bf, tmp140);
          r800_ffff_tmp115 = simd_and(r800_ffff_tmp99, bytetest_af_bf);
          r800_ffff_tmp116 = simd_or(r800_ffff_tmp115, r800_ffff_tmp114);
          struct_So.cc = simd_or(r800_ffff_tmp116, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_87 = simd_and(tmp36, tmp80);
          bytetest_90_91 = simd_andc(tmp35, tmp92);
          r800_ffff_tmp117 = simd_and(r800_ffff_tmp113, bytetest_90_91);
          struct_So.cc = simd_or(r800_ffff_tmp117, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_87 = simd_and(tmp36, tmp80);
          bytetest_93_93 = simd_and(tmp35, tmp16);
          r800_ffff_tmp118 = simd_and(r800_ffff_tmp113, bytetest_93_93);
          struct_So.cc = simd_or(r800_ffff_tmp118, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_87 = simd_and(tmp36, tmp80);
          r800_ffff_tmp119 = simd_not(tmp119);
          r800_ffff_tmp120 = simd_and(basis_bits.bit_3, tmp48);
          r800_ffff_tmp121 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp119), simd_andc(r800_ffff_tmp120, basis_bits.bit_2));
          bytetest_95_b3 = simd_and(bytetest_80_bf, r800_ffff_tmp121);
          r800_ffff_tmp122 = simd_and(r800_ffff_tmp113, bytetest_95_b3);
          struct_So.cc = simd_or(r800_ffff_tmp122, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_8c = simd_and(tmp36, tmp106);
          bytetest_80_87 = simd_andc(tmp36, basis_bits.bit_4);
          r800_ffff_tmp123 = simd_and(r800_ffff_tmp68, bytetest_8c);
          carryQ.cq[67] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp123, carryQ.get_carry_in(67), r800_ffff_tmp124));
          r800_ffff_tmp125 = simd_and(r800_ffff_tmp124, bytetest_80_87);
          struct_So.cc = simd_or(r800_ffff_tmp125, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_8c = simd_and(tmp36, tmp106);
          bytetest_8c_9f = simd_and(tmp81, tmp77);
          r800_ffff_tmp126 = simd_and(r800_ffff_tmp124, bytetest_8c_9f);
          struct_So.cc = simd_or(r800_ffff_tmp126, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_8c = simd_and(tmp36, tmp106);
          r800_ffff_tmp127 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp10), simd_andc(tmp73, basis_bits.bit_4));
          bytetest_a2_a8 = simd_and(tmp61, r800_ffff_tmp127);
          r800_ffff_tmp128 = simd_and(r800_ffff_tmp124, bytetest_a2_a8);
          struct_So.cc = simd_or(r800_ffff_tmp128, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_8d = simd_and(tmp36, tmp12);
          r800_ffff_tmp129 = simd_and(basis_bits.bit_3, tmp10);
          r800_ffff_tmp130 = simd_and(basis_bits.bit_2, r800_ffff_tmp129);
          bytetest_80_bb = simd_andc(bytetest_80_bf, r800_ffff_tmp130);
          r800_ffff_tmp131 = simd_and(r800_ffff_tmp68, bytetest_8d);
          carryQ.cq[68] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp131, carryQ.get_carry_in(68), r800_ffff_tmp132));
          r800_ffff_tmp133 = simd_and(r800_ffff_tmp132, bytetest_80_bb);
          bytetest_8c = simd_and(tmp36, tmp106);
          r800_ffff_tmp134 = simd_or(basis_bits.bit_3, tmp152);
          bytetest_ab_bf = simd_and(bytetest_a0_bf, r800_ffff_tmp134);
          r800_ffff_tmp135 = simd_and(r800_ffff_tmp124, bytetest_ab_bf);
          r800_ffff_tmp136 = simd_or(r800_ffff_tmp135, r800_ffff_tmp133);
          struct_So.cc = simd_or(r800_ffff_tmp136, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_8e = simd_and(tmp36, tmp190);
          bytetest_80_9a = simd_andc(tmp81, tmp153);
          r800_ffff_tmp137 = simd_and(r800_ffff_tmp68, bytetest_8e);
          carryQ.cq[69] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp137, carryQ.get_carry_in(69), r800_ffff_tmp138));
          r800_ffff_tmp139 = simd_and(r800_ffff_tmp138, bytetest_80_9a);
          bytetest_8d = simd_and(tmp36, tmp12);
          r800_ffff_tmp140 = simd_and(bytetest_b0_bf, tmp10);
          bytetest_bd_bf = simd_and(r800_ffff_tmp140, tmp5);
          r800_ffff_tmp141 = simd_and(r800_ffff_tmp132, bytetest_bd_bf);
          r800_ffff_tmp142 = simd_or(r800_ffff_tmp141, r800_ffff_tmp139);
          struct_So.cc = simd_or(r800_ffff_tmp142, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_8f = simd_and(tmp36, tmp111);
          bytetest_80_9b = simd_andc(tmp81, r800_ffff_tmp129);
          r800_ffff_tmp143 = simd_and(r800_ffff_tmp68, bytetest_8f);
          carryQ.cq[70] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp143, carryQ.get_carry_in(70), r800_ffff_tmp144));
          r800_ffff_tmp145 = simd_and(r800_ffff_tmp144, bytetest_80_9b);
          bytetest_8e = simd_and(tmp36, tmp190);
          bytetest_b4_bf = simd_and(bytetest_b0_bf, tmp4);
          r800_ffff_tmp146 = simd_and(r800_ffff_tmp138, bytetest_b4_bf);
          r800_ffff_tmp147 = simd_or(r800_ffff_tmp146, r800_ffff_tmp145);
          struct_So.cc = simd_or(r800_ffff_tmp147, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_8f = simd_and(tmp36, tmp111);
          r800_ffff_tmp148 = simd_not(tmp4);
          r800_ffff_tmp149 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp148), simd_andc(tmp92, basis_bits.bit_3));
          bytetest_a2_b3 = simd_and(bytetest_a0_bf, r800_ffff_tmp149);
          r800_ffff_tmp150 = simd_and(r800_ffff_tmp144, bytetest_a2_b3);
          struct_So.cc = simd_or(r800_ffff_tmp150, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_90 = simd_andc(tmp35, tmp6);
          bytetest_80_a6 = simd_andc(bytetest_80_bf, tmp42);
          r800_ffff_tmp151 = simd_and(r800_ffff_tmp68, bytetest_90);
          carryQ.cq[71] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp151, carryQ.get_carry_in(71), r800_ffff_tmp152));
          r800_ffff_tmp153 = simd_and(r800_ffff_tmp152, bytetest_80_a6);
          struct_So.cc = simd_or(r800_ffff_tmp153, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_91 = simd_and(tmp35, tmp123);
          bytetest_80_8a = simd_andc(tmp36, tmp152);
          r800_ffff_tmp154 = simd_and(r800_ffff_tmp68, bytetest_91);
          carryQ.cq[72] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp154, carryQ.get_carry_in(72), r800_ffff_tmp155));
          r800_ffff_tmp156 = simd_and(r800_ffff_tmp155, bytetest_80_8a);
          struct_So.cc = simd_or(r800_ffff_tmp156, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_93 = simd_and(tmp35, tmp16);
          r800_ffff_tmp157 = simd_and(basis_bits.bit_2, tmp75);
          bytetest_80_a9 = simd_andc(bytetest_80_bf, r800_ffff_tmp157);
          r800_ffff_tmp158 = simd_and(r800_ffff_tmp68, bytetest_93);
          carryQ.cq[73] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp158, carryQ.get_carry_in(73), r800_ffff_tmp159));
          r800_ffff_tmp160 = simd_and(r800_ffff_tmp159, bytetest_80_a9);
          bytetest_92 = simd_and(tmp35, tmp118);
          r800_ffff_tmp161 = simd_or(basis_bits.bit_2, r800_ffff_tmp129);
          bytetest_9c_bf = simd_and(bytetest_80_bf, r800_ffff_tmp161);
          r800_ffff_tmp162 = simd_and(r800_ffff_tmp68, bytetest_92);
          carryQ.cq[74] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp162, carryQ.get_carry_in(74), r800_ffff_tmp163));
          r800_ffff_tmp164 = simd_and(r800_ffff_tmp163, bytetest_9c_bf);
          r800_ffff_tmp165 = simd_or(r800_ffff_tmp164, r800_ffff_tmp160);
          struct_So.cc = simd_or(r800_ffff_tmp165, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_96 = simd_and(tmp35, tmp67);
          r800_ffff_tmp166 = simd_and(basis_bits.bit_2, tmp102);
          bytetest_80_b6 = simd_andc(bytetest_80_bf, r800_ffff_tmp166);
          r800_ffff_tmp167 = simd_and(r800_ffff_tmp68, bytetest_96);
          carryQ.cq[75] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp167, carryQ.get_carry_in(75), r800_ffff_tmp168));
          r800_ffff_tmp169 = simd_and(r800_ffff_tmp168, bytetest_80_b6);
          bytetest_94_95 = simd_and(tmp35, r800_ffff_tmp106);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp170 = simd_and(r800_ffff_tmp68, bytetest_94_95);
          carryQ.cq[76] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp170, carryQ.get_carry_in(76), r800_ffff_tmp171));
          r800_ffff_tmp172 = simd_and(r800_ffff_tmp171, bytetest_80_bf);
          r800_ffff_tmp173 = simd_or(r800_ffff_tmp172, r800_ffff_tmp169);
          struct_So.cc = simd_or(r800_ffff_tmp173, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_97 = simd_and(tmp35, tmp80);
          bytetest_80_80 = simd_andc(tmp36, tmp6);
          r800_ffff_tmp174 = simd_and(r800_ffff_tmp68, bytetest_97);
          carryQ.cq[77] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp174, carryQ.get_carry_in(77), r800_ffff_tmp175));
          r800_ffff_tmp176 = simd_and(r800_ffff_tmp175, bytetest_80_80);
          bytetest_96 = simd_and(tmp35, tmp67);
          bytetest_b8_bf = simd_and(bytetest_b0_bf, basis_bits.bit_4);
          r800_ffff_tmp177 = simd_and(r800_ffff_tmp168, bytetest_b8_bf);
          r800_ffff_tmp178 = simd_or(r800_ffff_tmp177, r800_ffff_tmp176);
          struct_So.cc = simd_or(r800_ffff_tmp178, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_97 = simd_and(tmp35, tmp80);
          r800_ffff_tmp179 = simd_not(tmp212);
          r800_ffff_tmp180 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp179), simd_andc(tmp220, basis_bits.bit_2));
          bytetest_82_b7 = simd_and(bytetest_80_bf, r800_ffff_tmp180);
          r800_ffff_tmp181 = simd_and(r800_ffff_tmp175, bytetest_82_b7);
          struct_So.cc = simd_or(r800_ffff_tmp181, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_99 = simd_and(tmp35, tmp91);
          r800_ffff_tmp182 = simd_and(basis_bits.bit_2, tmp140);
          bytetest_80_ae = simd_andc(bytetest_80_bf, r800_ffff_tmp182);
          r800_ffff_tmp183 = simd_and(r800_ffff_tmp68, bytetest_99);
          carryQ.cq[78] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp183, carryQ.get_carry_in(78), r800_ffff_tmp184));
          r800_ffff_tmp185 = simd_and(r800_ffff_tmp184, bytetest_80_ae);
          bytetest_98 = simd_and(tmp35, tmp96);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp186 = simd_and(r800_ffff_tmp68, bytetest_98);
          carryQ.cq[79] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp186, carryQ.get_carry_in(79), r800_ffff_tmp187));
          r800_ffff_tmp188 = simd_and(r800_ffff_tmp187, bytetest_80_bf);
          r800_ffff_tmp189 = simd_or(r800_ffff_tmp188, r800_ffff_tmp185);
          struct_So.cc = simd_or(r800_ffff_tmp189, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_9a_9b = simd_and(tmp35, r800_ffff_tmp88);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp190 = simd_and(r800_ffff_tmp68, bytetest_9a_9b);
          carryQ.cq[80] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp190, carryQ.get_carry_in(80), r800_ffff_tmp191));
          r800_ffff_tmp192 = simd_and(r800_ffff_tmp191, bytetest_80_bf);
          bytetest_99 = simd_and(tmp35, tmp91);
          bytetest_b0_bf = simd_and(bytetest_80_bf, tmp2);
          r800_ffff_tmp193 = simd_and(r800_ffff_tmp184, bytetest_b0_bf);
          r800_ffff_tmp194 = simd_or(r800_ffff_tmp193, r800_ffff_tmp192);
          struct_So.cc = simd_or(r800_ffff_tmp194, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_9d = simd_and(tmp35, tmp12);
          r800_ffff_tmp195 = simd_and(basis_bits.bit_2, tmp235);
          bytetest_80_a7 = simd_andc(bytetest_80_bf, r800_ffff_tmp195);
          r800_ffff_tmp196 = simd_and(r800_ffff_tmp68, bytetest_9d);
          carryQ.cq[81] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp196, carryQ.get_carry_in(81), r800_ffff_tmp197));
          r800_ffff_tmp198 = simd_and(r800_ffff_tmp197, bytetest_80_a7);
          bytetest_9c = simd_and(tmp35, tmp106);
          r800_ffff_tmp199 = simd_or(basis_bits.bit_2, tmp175);
          bytetest_81_bf = simd_and(bytetest_80_bf, r800_ffff_tmp199);
          r800_ffff_tmp200 = simd_and(r800_ffff_tmp68, bytetest_9c);
          carryQ.cq[82] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp200, carryQ.get_carry_in(82), r800_ffff_tmp201));
          r800_ffff_tmp202 = simd_and(r800_ffff_tmp201, bytetest_81_bf);
          r800_ffff_tmp203 = simd_or(r800_ffff_tmp202, r800_ffff_tmp198);
          struct_So.cc = simd_or(r800_ffff_tmp203, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_9e = simd_and(tmp35, tmp190);
          r800_ffff_tmp204 = simd_or(basis_bits.bit_2, tmp119);
          bytetest_94_bf = simd_and(bytetest_80_bf, r800_ffff_tmp204);
          r800_ffff_tmp205 = simd_and(r800_ffff_tmp68, bytetest_9e);
          carryQ.cq[83] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp205, carryQ.get_carry_in(83), r800_ffff_tmp206));
          r800_ffff_tmp207 = simd_and(r800_ffff_tmp206, bytetest_94_bf);
          struct_So.cc = simd_or(r800_ffff_tmp207, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_a0_a3 = simd_andc(tmp61, tmp4);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp208 = simd_and(r800_ffff_tmp68, bytetest_a0_a3);
          carryQ.cq[84] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp208, carryQ.get_carry_in(84), r800_ffff_tmp209));
          r800_ffff_tmp210 = simd_and(r800_ffff_tmp209, bytetest_80_bf);
          struct_So.cc = simd_or(r800_ffff_tmp210, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_ac = simd_and(tmp61, tmp106);
          bytetest_80_af = simd_andc(bytetest_80_bf, tmp2);
          r800_ffff_tmp211 = simd_and(r800_ffff_tmp68, bytetest_ac);
          carryQ.cq[85] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp211, carryQ.get_carry_in(85), r800_ffff_tmp212));
          r800_ffff_tmp213 = simd_and(r800_ffff_tmp212, bytetest_80_af);
          struct_So.cc = simd_or(r800_ffff_tmp213, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_ad = simd_and(tmp61, tmp12);
          r800_ffff_tmp214 = simd_and(tmp36, tmp37);
          bytetest_85_86 = simd_and(r800_ffff_tmp214, r800_ffff_tmp104);
          r800_ffff_tmp215 = simd_and(r800_ffff_tmp68, bytetest_ad);
          carryQ.cq[86] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp215, carryQ.get_carry_in(86), r800_ffff_tmp216));
          r800_ffff_tmp217 = simd_and(r800_ffff_tmp216, bytetest_85_86);
          struct_So.cc = simd_or(r800_ffff_tmp217, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_ad = simd_and(tmp61, tmp12);
          bytetest_90_99 = simd_andc(tmp35, tmp74);
          r800_ffff_tmp218 = simd_and(r800_ffff_tmp216, bytetest_90_99);
          struct_So.cc = simd_or(r800_ffff_tmp218, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp16);
          r800_ffff_tmp219 = simd_or(simd_and(basis_bits.bit_4, tmp199), simd_andc(tmp47, basis_bits.bit_4));
          bytetest_a5_aa = simd_and(tmp61, r800_ffff_tmp219);
          r800_ffff_tmp220 = simd_and(r800_ffff_tmp68, bytetest_b3);
          carryQ.cq[87] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp220, carryQ.get_carry_in(87), r800_ffff_tmp221));
          r800_ffff_tmp222 = simd_and(r800_ffff_tmp221, bytetest_a5_aa);
          struct_So.cc = simd_or(r800_ffff_tmp222, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp255);
          r800_ffff_tmp223 = simd_and(basis_bits.bit_3, tmp74);
          bytetest_80_99 = simd_andc(tmp81, r800_ffff_tmp223);
          r800_ffff_tmp224 = simd_and(r800_ffff_tmp68, bytetest_ba);
          carryQ.cq[88] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp224, carryQ.get_carry_in(88), r800_ffff_tmp225));
          r800_ffff_tmp226 = simd_and(r800_ffff_tmp225, bytetest_80_99);
          struct_So.cc = simd_or(r800_ffff_tmp226, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp251);
          bytetest_80_b3 = simd_andc(bytetest_80_bf, tmp260);
          r800_ffff_tmp227 = simd_and(r800_ffff_tmp68, bytetest_bb);
          carryQ.cq[89] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp227, carryQ.get_carry_in(89), r800_ffff_tmp228));
          r800_ffff_tmp229 = simd_and(r800_ffff_tmp228, bytetest_80_b3);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp255);
          r800_ffff_tmp230 = simd_or(basis_bits.bit_2, tmp153);
          bytetest_9b_bf = simd_and(bytetest_80_bf, r800_ffff_tmp230);
          r800_ffff_tmp231 = simd_and(r800_ffff_tmp225, bytetest_9b_bf);
          r800_ffff_tmp232 = simd_or(r800_ffff_tmp231, r800_ffff_tmp229);
          struct_So.cc = simd_or(r800_ffff_tmp232, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp111);
          bytetest_80_95 = simd_andc(tmp81, tmp19);
          r800_ffff_tmp233 = simd_and(r800_ffff_tmp68, bytetest_bf);
          carryQ.cq[90] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp233, carryQ.get_carry_in(90), r800_ffff_tmp234));
          r800_ffff_tmp235 = simd_and(r800_ffff_tmp234, bytetest_80_95);
          bytetest_bc_be = simd_andc(r800_ffff_tmp140, tmp15);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp236 = simd_and(r800_ffff_tmp68, bytetest_bc_be);
          carryQ.cq[91] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp236, carryQ.get_carry_in(91), r800_ffff_tmp237));
          r800_ffff_tmp238 = simd_and(r800_ffff_tmp237, bytetest_80_bf);
          r800_ffff_tmp239 = simd_or(r800_ffff_tmp238, r800_ffff_tmp235);
          struct_So.cc = simd_or(r800_ffff_tmp239, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp111);
          bytetest_b0_bb = simd_andc(bytetest_b0_bf, tmp10);
          r800_ffff_tmp240 = simd_and(r800_ffff_tmp234, bytetest_b0_bb);
          struct_So.cc = simd_or(r800_ffff_tmp240, struct_So.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp16);
          bytetest_80 = simd_andc(tmp36, tmp6);
          bytetest_84_84 = simd_and(tmp36, tmp38);
          r800_ffff_tmp241 = simd_and(tmp22, bytetest_e3);
          carryQ.cq[92] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp241, carryQ.get_carry_in(92), r800_ffff_tmp242));
          r800_ffff_tmp243 = simd_and(r800_ffff_tmp242, bytetest_80);
          carryQ.cq[93] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp243, carryQ.get_carry_in(93), r800_ffff_tmp244));
          r800_ffff_tmp245 = simd_and(r800_ffff_tmp244, bytetest_84_84);
          struct_So.cc = simd_or(r800_ffff_tmp245, struct_So.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp16);
          bytetest_80 = simd_andc(tmp36, tmp6);
          r800_ffff_tmp246 = simd_andc(basis_bits.bit_6, tmp4);
          bytetest_92_93 = simd_and(tmp35, r800_ffff_tmp246);
          r800_ffff_tmp247 = simd_and(r800_ffff_tmp244, bytetest_92_93);
          struct_So.cc = simd_or(r800_ffff_tmp247, struct_So.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp16);
          bytetest_80 = simd_andc(tmp36, tmp6);
          bytetest_a0_a0 = simd_andc(tmp61, tmp6);
          r800_ffff_tmp248 = simd_and(r800_ffff_tmp244, bytetest_a0_a0);
          struct_So.cc = simd_or(r800_ffff_tmp248, struct_So.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp16);
          bytetest_80 = simd_andc(tmp36, tmp6);
          bytetest_b6_b7 = simd_and(bytetest_b0_bf, r800_ffff_tmp78);
          r800_ffff_tmp249 = simd_and(r800_ffff_tmp244, bytetest_b6_b7);
          struct_So.cc = simd_or(r800_ffff_tmp249, struct_So.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp16);
          bytetest_80 = simd_andc(tmp36, tmp6);
          bytetest_be_bf = simd_and(bytetest_b0_bf, tmp82);
          r800_ffff_tmp250 = simd_and(r800_ffff_tmp244, bytetest_be_bf);
          struct_So.cc = simd_or(r800_ffff_tmp250, struct_So.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp16);
          bytetest_86 = simd_and(tmp36, tmp67);
          bytetest_90_91 = simd_andc(tmp35, tmp92);
          r800_ffff_tmp251 = simd_and(r800_ffff_tmp242, bytetest_86);
          carryQ.cq[94] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp251, carryQ.get_carry_in(94), r800_ffff_tmp252));
          r800_ffff_tmp253 = simd_and(r800_ffff_tmp252, bytetest_90_91);
          struct_So.cc = simd_or(r800_ffff_tmp253, struct_So.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp16);
          bytetest_86 = simd_and(tmp36, tmp67);
          bytetest_96_9f = simd_and(tmp35, tmp18);
          r800_ffff_tmp254 = simd_and(r800_ffff_tmp252, bytetest_96_9f);
          struct_So.cc = simd_or(r800_ffff_tmp254, struct_So.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp16);
          bytetest_87 = simd_and(tmp36, tmp80);
          r800_ffff_tmp255 = simd_and(basis_bits.bit_2, r800_ffff_tmp80);
          bytetest_80_a3 = simd_andc(bytetest_80_bf, r800_ffff_tmp255);
          r800_ffff_tmp256 = simd_and(r800_ffff_tmp242, bytetest_87);
          carryQ.cq[95] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp256, carryQ.get_carry_in(95), r800_ffff_tmp257));
          r800_ffff_tmp258 = simd_and(r800_ffff_tmp257, bytetest_80_a3);
          struct_So.cc = simd_or(r800_ffff_tmp258, struct_So.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp16);
          bytetest_88 = simd_and(tmp36, tmp96);
          bytetest_80_9e = simd_andc(tmp81, tmp204);
          r800_ffff_tmp259 = simd_and(r800_ffff_tmp242, bytetest_88);
          carryQ.cq[96] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp259, carryQ.get_carry_in(96), r800_ffff_tmp260));
          r800_ffff_tmp261 = simd_and(r800_ffff_tmp260, bytetest_80_9e);
          struct_So.cc = simd_or(r800_ffff_tmp261, struct_So.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp16);
          bytetest_89 = simd_and(tmp36, tmp91);
          bytetest_80_87 = simd_andc(tmp36, basis_bits.bit_4);
          r800_ffff_tmp262 = simd_and(r800_ffff_tmp242, bytetest_89);
          carryQ.cq[97] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp262, carryQ.get_carry_in(97), r800_ffff_tmp263));
          r800_ffff_tmp264 = simd_and(r800_ffff_tmp263, bytetest_80_87);
          bytetest_88 = simd_and(tmp36, tmp96);
          bytetest_aa_bf = simd_and(bytetest_a0_bf, tmp75);
          r800_ffff_tmp265 = simd_and(r800_ffff_tmp260, bytetest_aa_bf);
          r800_ffff_tmp266 = simd_or(r800_ffff_tmp265, r800_ffff_tmp264);
          struct_So.cc = simd_or(r800_ffff_tmp266, struct_So.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp16);
          bytetest_89 = simd_and(tmp36, tmp91);
          bytetest_90_90 = simd_andc(tmp35, tmp6);
          r800_ffff_tmp267 = simd_and(r800_ffff_tmp263, bytetest_90_90);
          struct_So.cc = simd_or(r800_ffff_tmp267, struct_So.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp16);
          bytetest_89 = simd_and(tmp36, tmp91);
          bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
          r800_ffff_tmp268 = simd_and(r800_ffff_tmp263, bytetest_a0_bf);
          struct_So.cc = simd_or(r800_ffff_tmp268, struct_So.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp16);
          bytetest_8a = simd_and(tmp36, tmp255);
          r800_ffff_tmp269 = simd_not(tmp202);
          r800_ffff_tmp270 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp269), simd_andc(tmp75, basis_bits.bit_2));
          bytetest_8a_b0 = simd_and(bytetest_80_bf, r800_ffff_tmp270);
          r800_ffff_tmp271 = simd_and(r800_ffff_tmp242, bytetest_8a);
          carryQ.cq[98] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp271, carryQ.get_carry_in(98), r800_ffff_tmp272));
          r800_ffff_tmp273 = simd_and(r800_ffff_tmp272, bytetest_8a_b0);
          struct_So.cc = simd_or(r800_ffff_tmp273, struct_So.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp16);
          bytetest_8b = simd_and(tmp36, tmp251);
          bytetest_80_be = simd_andc(bytetest_80_bf, tmp205);
          r800_ffff_tmp274 = simd_and(r800_ffff_tmp242, bytetest_8b);
          carryQ.cq[99] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp274, carryQ.get_carry_in(99), r800_ffff_tmp275));
          r800_ffff_tmp276 = simd_and(r800_ffff_tmp275, bytetest_80_be);
          struct_So.cc = simd_or(r800_ffff_tmp276, struct_So.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp16);
          bytetest_8c_8f = simd_and(tmp36, tmp10);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp277 = simd_and(r800_ffff_tmp242, bytetest_8c_8f);
          carryQ.cq[100] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp277, carryQ.get_carry_in(100), r800_ffff_tmp278));
          r800_ffff_tmp279 = simd_and(r800_ffff_tmp278, bytetest_80_bf);
          struct_So.cc = simd_or(r800_ffff_tmp279, struct_So.cc);
          bytetest_e4 = simd_and(r800_ffff_tmp1, tmp38);
          bytetest_b7 = simd_and(bytetest_b0_bf, tmp80);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp280 = simd_and(tmp22, bytetest_e4);
          carryQ.cq[101] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp280, carryQ.get_carry_in(101), r800_ffff_tmp281));
          r800_ffff_tmp282 = simd_and(r800_ffff_tmp281, bytetest_b7);
          carryQ.cq[102] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp282, carryQ.get_carry_in(102), r800_ffff_tmp283));
          r800_ffff_tmp284 = simd_and(r800_ffff_tmp283, bytetest_80_bf);
          struct_So.cc = simd_or(r800_ffff_tmp284, struct_So.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp255);
          bytetest_93 = simd_and(tmp35, tmp16);
          bytetest_80_86 = simd_andc(bytetest_80_87, tmp39);
          r800_ffff_tmp285 = simd_and(tmp22, bytetest_ea);
          carryQ.cq[103] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp285, carryQ.get_carry_in(103), r800_ffff_tmp286));
          r800_ffff_tmp287 = simd_and(r800_ffff_tmp286, bytetest_93);
          carryQ.cq[104] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp287, carryQ.get_carry_in(104), r800_ffff_tmp288));
          r800_ffff_tmp289 = simd_and(r800_ffff_tmp288, bytetest_80_86);
          bytetest_92 = simd_and(tmp35, tmp118);
          bytetest_90_bf = simd_and(bytetest_80_bf, tmp13);
          r800_ffff_tmp290 = simd_and(r800_ffff_tmp286, bytetest_92);
          carryQ.cq[105] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp290, carryQ.get_carry_in(105), r800_ffff_tmp291));
          r800_ffff_tmp292 = simd_and(r800_ffff_tmp291, bytetest_90_bf);
          r800_ffff_tmp293 = simd_or(r800_ffff_tmp292, r800_ffff_tmp289);
          struct_So.cc = simd_or(r800_ffff_tmp293, struct_So.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp255);
          bytetest_a0 = simd_andc(tmp61, tmp6);
          bytetest_a8_ab = simd_and(tmp61, tmp90);
          r800_ffff_tmp294 = simd_and(r800_ffff_tmp286, bytetest_a0);
          carryQ.cq[106] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp294, carryQ.get_carry_in(106), r800_ffff_tmp295));
          r800_ffff_tmp296 = simd_and(r800_ffff_tmp295, bytetest_a8_ab);
          struct_So.cc = simd_or(r800_ffff_tmp296, struct_So.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp255);
          bytetest_a0 = simd_andc(tmp61, tmp6);
          bytetest_b6_b7 = simd_and(bytetest_b0_bf, r800_ffff_tmp78);
          r800_ffff_tmp297 = simd_and(r800_ffff_tmp295, bytetest_b6_b7);
          struct_So.cc = simd_or(r800_ffff_tmp297, struct_So.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp255);
          bytetest_a0 = simd_andc(tmp61, tmp6);
          bytetest_b9_b9 = simd_and(bytetest_b0_bf, tmp91);
          r800_ffff_tmp298 = simd_and(r800_ffff_tmp295, bytetest_b9_b9);
          struct_So.cc = simd_or(r800_ffff_tmp298, struct_So.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp255);
          bytetest_a9 = simd_and(tmp61, tmp91);
          r800_ffff_tmp299 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp96), simd_andc(tmp39, basis_bits.bit_4));
          bytetest_b7_b9 = simd_and(bytetest_b0_bf, r800_ffff_tmp299);
          r800_ffff_tmp300 = simd_and(r800_ffff_tmp286, bytetest_a9);
          carryQ.cq[107] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp300, carryQ.get_carry_in(107), r800_ffff_tmp301));
          r800_ffff_tmp302 = simd_and(r800_ffff_tmp301, bytetest_b7_b9);
          struct_So.cc = simd_or(r800_ffff_tmp302, struct_So.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp111);
          bytetest_b7 = simd_and(bytetest_b0_bf, tmp80);
          bytetest_bd_bd = simd_and(bytetest_b0_bf, tmp12);
          r800_ffff_tmp303 = simd_and(tmp22, bytetest_ef);
          carryQ.cq[108] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp303, carryQ.get_carry_in(108), r800_ffff_tmp304));
          r800_ffff_tmp305 = simd_and(r800_ffff_tmp304, bytetest_b7);
          carryQ.cq[109] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp305, carryQ.get_carry_in(109), r800_ffff_tmp306));
          r800_ffff_tmp307 = simd_and(r800_ffff_tmp306, bytetest_bd_bd);
          struct_So.cc = simd_or(r800_ffff_tmp307, struct_So.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp111);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp111);
          bytetest_a4_a4 = simd_and(tmp61, tmp38);
          r800_ffff_tmp308 = simd_and(r800_ffff_tmp304, bytetest_bf);
          carryQ.cq[110] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp308, carryQ.get_carry_in(110), r800_ffff_tmp309));
          r800_ffff_tmp310 = simd_and(r800_ffff_tmp309, bytetest_a4_a4);
          struct_So.cc = simd_or(r800_ffff_tmp310, struct_So.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp111);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp111);
          bytetest_a8_a8 = simd_and(tmp61, tmp96);
          r800_ffff_tmp311 = simd_and(r800_ffff_tmp309, bytetest_a8_a8);
          struct_So.cc = simd_or(r800_ffff_tmp311, struct_So.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp111);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp111);
          r800_ffff_tmp312 = simd_and(tmp61, tmp10);
          bytetest_ad_ae = simd_and(r800_ffff_tmp312, r800_ffff_tmp104);
          r800_ffff_tmp313 = simd_and(r800_ffff_tmp309, bytetest_ad_ae);
          struct_So.cc = simd_or(r800_ffff_tmp313, struct_So.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp111);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp111);
          bytetest_bc_bd = simd_and(bytetest_b0_bf, r800_ffff_tmp93);
          r800_ffff_tmp314 = simd_and(r800_ffff_tmp309, bytetest_bc_bd);
          struct_So.cc = simd_or(r800_ffff_tmp314, struct_So.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(47, 64);
        }
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_90 = simd_andc(tmp35, tmp6);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp274 = simd_and(tmp24, bytetest_90);
        carryQ.cq[111] = carryout2carry(pablo_blk_Advance(tmp274, carryQ.get_carry_in(111), tmp275));
        tmp276 = simd_and(tmp275, bytetest_80_bf);
        if ((bitblock::any(tmp276) || carryQ.CarryTest(112, 5))) {
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp35, tmp6);
          bytetest_84 = simd_and(tmp36, tmp38);
          bytetest_b7_bf = simd_and(bytetest_b0_bf, tmp40);
          r10000_10fff_tmp1 = simd_and(tmp24, bytetest_90);
          carryQ.cq[112] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp1, carryQ.get_carry_in(112), r10000_10fff_tmp2));
          r10000_10fff_tmp3 = simd_and(r10000_10fff_tmp2, bytetest_84);
          carryQ.cq[113] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp3, carryQ.get_carry_in(113), r10000_10fff_tmp4));
          r10000_10fff_tmp5 = simd_and(r10000_10fff_tmp4, bytetest_b7_bf);
          struct_So.cc = simd_or(r10000_10fff_tmp5, struct_So.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp35, tmp6);
          bytetest_86 = simd_and(tmp36, tmp67);
          bytetest_80_89 = simd_andc(tmp36, tmp74);
          r10000_10fff_tmp6 = simd_and(r10000_10fff_tmp2, bytetest_86);
          carryQ.cq[114] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp6, carryQ.get_carry_in(114), r10000_10fff_tmp7));
          r10000_10fff_tmp8 = simd_and(r10000_10fff_tmp7, bytetest_80_89);
          bytetest_85 = simd_and(tmp36, tmp46);
          bytetest_b9_bf = simd_and(tmp225, tmp55);
          r10000_10fff_tmp9 = simd_and(r10000_10fff_tmp2, bytetest_85);
          carryQ.cq[115] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp9, carryQ.get_carry_in(115), r10000_10fff_tmp10));
          r10000_10fff_tmp11 = simd_and(r10000_10fff_tmp10, bytetest_b9_bf);
          r10000_10fff_tmp12 = simd_or(r10000_10fff_tmp11, r10000_10fff_tmp8);
          struct_So.cc = simd_or(r10000_10fff_tmp12, struct_So.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp35, tmp6);
          bytetest_86 = simd_and(tmp36, tmp67);
          bytetest_90_9b = simd_andc(tmp35, tmp10);
          r10000_10fff_tmp13 = simd_and(r10000_10fff_tmp7, bytetest_90_9b);
          struct_So.cc = simd_or(r10000_10fff_tmp13, struct_So.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp35, tmp6);
          bytetest_87 = simd_and(tmp36, tmp80);
          r10000_10fff_tmp14 = simd_not(tmp183);
          r10000_10fff_tmp15 = simd_or(simd_and(basis_bits.bit_2, r10000_10fff_tmp14), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
          bytetest_90_bc = simd_and(bytetest_80_bf, r10000_10fff_tmp15);
          r10000_10fff_tmp16 = simd_and(r10000_10fff_tmp2, bytetest_87);
          carryQ.cq[116] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp16, carryQ.get_carry_in(116), r10000_10fff_tmp17));
          r10000_10fff_tmp18 = simd_and(r10000_10fff_tmp17, bytetest_90_bc);
          struct_So.cc = simd_or(r10000_10fff_tmp18, struct_So.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(112, 5);
        }
        carryQ.CarryQ_Adjust(117);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_So & struct_So, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_f0, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, tmp12, bytetest_9d, tmp13, tmp14, tmp15, tmp16;
		BitBlock bytetest_83, tmp17, tmp18, tmp19, tmp20, bytetest_80_b5, tmp21, tmp22;
		BitBlock tmp23, tmp24, tmp25, tmp26, tmp27, tmp28, tmp29, tmp30;
		BitBlock bytetest_80_82, bytetest_80_bf, tmp31, tmp32, tmp33, tmp34, tmp35;
		BitBlock tmp36, tmp37, tmp38, bytetest_84, tmp39, tmp40, tmp41, tmp42;
		BitBlock bytetest_80_a6, tmp43, tmp44, tmp45, tmp46, bytetest_85, tmp47, tmp48;
		BitBlock tmp49, tmp50, bytetest_80_a4, tmp51, tmp52, tmp53, tmp54, tmp55;
		BitBlock tmp56, tmp57, bytetest_a9_bf, tmp58, tmp59, tmp60, tmp61, tmp62;
		BitBlock tmp63, tmp64, bytetest_aa_ac, tmp65, tmp66, tmp67, bytetest_86, tmp68;
		BitBlock tmp69, bytetest_83_84, tmp70, tmp71, tmp72, tmp73, tmp74, tmp75;
		BitBlock tmp76, tmp77, tmp78, bytetest_8c_a9, tmp79, tmp80, bytetest_87, tmp81;
		BitBlock tmp82, tmp83, bytetest_80_9d, tmp84, tmp85, tmp86, tmp87;
		BitBlock bytetest_ae_bf, tmp88, tmp89, tmp90, tmp91, bytetest_89, tmp92;
		BitBlock bytetest_80_81, tmp93, tmp94, tmp95, tmp96, bytetest_88, tmp97, tmp98;
		BitBlock tmp99, tmp100, bytetest_85_85, tmp101, bytetest_8d, tmp102;
		BitBlock bytetest_80_96, tmp103, tmp104, tmp105, tmp106, bytetest_8c, tmp107;
		BitBlock tmp108, tmp109, tmp110, tmp111, bytetest_9f, bytetest_80, tmp112;
		BitBlock bytetest_80_ab, tmp113, tmp114, tmp115, tmp116, tmp117, tmp118;
		BitBlock bytetest_82, tmp119, bytetest_80_93, tmp120, tmp121, tmp122, tmp123;
		BitBlock bytetest_81, tmp124, tmp125, tmp126, bytetest_b0_bf, tmp127, tmp128;
		BitBlock tmp129, tmp130, bytetest_a0_ae, tmp131, tmp132, tmp133;
		BitBlock bytetest_b1_be, tmp134, tmp135, bytetest_81_8f, tmp136, tmp137;
		BitBlock tmp138, bytetest_91_9f, tmp139, tmp140, tmp141, tmp142;
		BitBlock bytetest_90_ae, tmp143, tmp144, tmp145, tmp146, tmp147, tmp148;
		BitBlock tmp149, tmp150, tmp151, tmp152, tmp153, bytetest_80_9a, tmp154;
		BitBlock tmp155, tmp156, tmp157, tmp158, tmp159, tmp160, tmp161, tmp162;
		BitBlock tmp163, bytetest_a6_bf, tmp164, tmp165, tmp166, tmp167, tmp168;
		BitBlock tmp169, bytetest_90_ba, tmp170, bytetest_80_88, tmp171, tmp172;
		BitBlock tmp173, bytetest_90_91, tmp174, tmp175, tmp176, bytetest_80_a0;
		BitBlock tmp177, tmp178, tmp179, tmp180, bytetest_b0_b5, tmp181, tmp182;
		BitBlock tmp183, tmp184, bytetest_80_bc, tmp185, tmp186, tmp187;
		BitBlock bytetest_b7_bf, tmp188, tmp189, tmp190, bytetest_8e, tmp191, tmp192;
		BitBlock tmp193, bytetest_8f, bytetest_80_84, tmp194, tmp195, tmp196;
		BitBlock bytetest_a0_bf, tmp197, tmp198, tmp199, tmp200, bytetest_86_8a;
		BitBlock tmp201, tmp202, bytetest_a0_b0, tmp203, bytetest_90, tmp204, tmp205;
		BitBlock bytetest_80_be, tmp206, tmp207, tmp208, bytetest_91, bytetest_80_80;
		BitBlock tmp209, tmp210, tmp211, bytetest_93, tmp212, tmp213, bytetest_80_b7;
		BitBlock tmp214, tmp215, tmp216, bytetest_92, tmp217, tmp218, tmp219, tmp220;
		BitBlock tmp221, bytetest_82_bf, tmp222, tmp223, tmp224, tmp225, tmp226;
		BitBlock bytetest_b9_bc, tmp227, bytetest_94, tmp228, bytetest_80_bd, tmp229;
		BitBlock tmp230, tmp231, bytetest_95, bytetest_80_83, tmp232, tmp233, tmp234;
		BitBlock tmp235, tmp236, tmp237, bytetest_90_a7, tmp238, bytetest_99, tmp239;
		BitBlock tmp240, tmp241, bytetest_98, tmp242, tmp243, tmp244, bytetest_97;
		BitBlock bytetest_bb_bf, tmp245, tmp246, tmp247, tmp248, tmp249;
		BitBlock bytetest_85_8f, tmp250, tmp251, bytetest_9b, bytetest_80_85, tmp252;
		BitBlock tmp253, tmp254, tmp255, bytetest_9a, tmp256, tmp257, tmp258, tmp259;
		BitBlock tmp260, bytetest_80_b3, tmp261, tmp262, tmp263, bytetest_9c, tmp264;
		BitBlock tmp265, tmp266, tmp267, tmp268, bytetest_c2_df, r80_7ff_tmp1;
		BitBlock bytetest_c2, bytetest_a6_a6, r80_7ff_tmp2, r80_7ff_tmp3, r80_7ff_tmp4;
		BitBlock bytetest_a9_a9, r80_7ff_tmp5, bytetest_ae_ae, r80_7ff_tmp6;
		BitBlock bytetest_b0_b0, r80_7ff_tmp7, r80_7ff_tmp8, bytetest_d2;
		BitBlock bytetest_82_82, r80_7ff_tmp9, r80_7ff_tmp10, r80_7ff_tmp11;
		BitBlock bytetest_d8, bytetest_8e_8f, r80_7ff_tmp12, r80_7ff_tmp13;
		BitBlock r80_7ff_tmp14, bytetest_db, bytetest_9e_9e, r80_7ff_tmp15;
		BitBlock r80_7ff_tmp16, r80_7ff_tmp17, r80_7ff_tmp18, r80_7ff_tmp19;
		BitBlock r80_7ff_tmp20, r80_7ff_tmp21, bytetest_bd_be, r80_7ff_tmp22;
		BitBlock bytetest_df, bytetest_b6_b6, r80_7ff_tmp23, r80_7ff_tmp24;
		BitBlock r80_7ff_tmp25, tmp269, bytetest_e1_ef, bytetest_e0, tmp270, tmp271;
		BitBlock tmp272, tmp273, r800_ffff_tmp1, bytetest_a7, bytetest_ba_ba;
		BitBlock r800_ffff_tmp2, r800_ffff_tmp3, r800_ffff_tmp4, r800_ffff_tmp5;
		BitBlock r800_ffff_tmp6, bytetest_ad, r800_ffff_tmp7, r800_ffff_tmp8;
		BitBlock r800_ffff_tmp9, bytetest_af, r800_ffff_tmp10, r800_ffff_tmp11;
		BitBlock bytetest_b3_b8, r800_ffff_tmp12, r800_ffff_tmp13, r800_ffff_tmp14;
		BitBlock r800_ffff_tmp15, bytetest_b1, bytetest_bf_bf, r800_ffff_tmp16;
		BitBlock r800_ffff_tmp17, r800_ffff_tmp18, bytetest_b5, bytetest_b9_b9;
		BitBlock r800_ffff_tmp19, r800_ffff_tmp20, r800_ffff_tmp21, bytetest_bc;
		BitBlock bytetest_81_83, r800_ffff_tmp22, r800_ffff_tmp23, r800_ffff_tmp24;
		BitBlock bytetest_93_93, r800_ffff_tmp25, r800_ffff_tmp26, bytetest_95_97;
		BitBlock r800_ffff_tmp27, r800_ffff_tmp28, bytetest_9a_9f, r800_ffff_tmp29;
		BitBlock bytetest_b4_b4, r800_ffff_tmp30, r800_ffff_tmp31, bytetest_b8_b8;
		BitBlock r800_ffff_tmp32, bytetest_bf, r800_ffff_tmp33, r800_ffff_tmp34;
		BitBlock r800_ffff_tmp35, bytetest_be, bytetest_be_bf, r800_ffff_tmp36;
		BitBlock r800_ffff_tmp37, r800_ffff_tmp38, r800_ffff_tmp39, r800_ffff_tmp40;
		BitBlock r800_ffff_tmp41, bytetest_87_8c, r800_ffff_tmp42, r800_ffff_tmp43;
		BitBlock r800_ffff_tmp44, bytetest_95_98, r800_ffff_tmp45, bytetest_e1;
		BitBlock bytetest_9e_9f, r800_ffff_tmp46, r800_ffff_tmp47, r800_ffff_tmp48;
		BitBlock r800_ffff_tmp49, r800_ffff_tmp50, bytetest_90_99, r800_ffff_tmp51;
		BitBlock r800_ffff_tmp52, r800_ffff_tmp53, bytetest_a5, r800_ffff_tmp54;
		BitBlock r800_ffff_tmp55, r800_ffff_tmp56, r800_ffff_tmp57, bytetest_9e_bf;
		BitBlock r800_ffff_tmp58, r800_ffff_tmp59, r800_ffff_tmp60, r800_ffff_tmp61;
		BitBlock bytetest_a1_aa, r800_ffff_tmp62, r800_ffff_tmp63, r800_ffff_tmp64;
		BitBlock r800_ffff_tmp65, bytetest_b4_bc, r800_ffff_tmp66, bytetest_e2;
		BitBlock r800_ffff_tmp67, r800_ffff_tmp68, r800_ffff_tmp69, r800_ffff_tmp70;
		BitBlock r800_ffff_tmp71, r800_ffff_tmp72, r800_ffff_tmp73, bytetest_83_86;
		BitBlock r800_ffff_tmp74, r800_ffff_tmp75, bytetest_88_89, r800_ffff_tmp76;
		BitBlock bytetest_94_94, r800_ffff_tmp77, r800_ffff_tmp78, bytetest_96_97;
		BitBlock r800_ffff_tmp79, r800_ffff_tmp80, r800_ffff_tmp81, r800_ffff_tmp82;
		BitBlock bytetest_9e_a3, r800_ffff_tmp83, bytetest_a5_a5, r800_ffff_tmp84;
		BitBlock bytetest_a7_a7, r800_ffff_tmp85, r800_ffff_tmp86, r800_ffff_tmp87;
		BitBlock r800_ffff_tmp88, bytetest_ba_bb, r800_ffff_tmp89, bytetest_8a_8a;
		BitBlock r800_ffff_tmp90, r800_ffff_tmp91, r800_ffff_tmp92, r800_ffff_tmp93;
		BitBlock bytetest_8c_8d, r800_ffff_tmp94, bytetest_8f_8f, r800_ffff_tmp95;
		BitBlock r800_ffff_tmp96, r800_ffff_tmp97, bytetest_95_99, r800_ffff_tmp98;
		BitBlock r800_ffff_tmp99, r800_ffff_tmp100, bytetest_9c_9f, r800_ffff_tmp101;
		BitBlock r800_ffff_tmp102, r800_ffff_tmp103, r800_ffff_tmp104, bytetest_a1_a2;
		BitBlock r800_ffff_tmp105, r800_ffff_tmp106, bytetest_a4_a5, r800_ffff_tmp107;
		BitBlock r800_ffff_tmp108, r800_ffff_tmp109, bytetest_a7_ad, r800_ffff_tmp110;
		BitBlock r800_ffff_tmp111, bytetest_80_8d, r800_ffff_tmp112, r800_ffff_tmp113;
		BitBlock r800_ffff_tmp114, bytetest_af_bf, r800_ffff_tmp115, r800_ffff_tmp116;
		BitBlock r800_ffff_tmp117, r800_ffff_tmp118, r800_ffff_tmp119;
		BitBlock r800_ffff_tmp120, r800_ffff_tmp121, bytetest_95_b3, r800_ffff_tmp122;
		BitBlock bytetest_80_87, r800_ffff_tmp123, r800_ffff_tmp124, r800_ffff_tmp125;
		BitBlock bytetest_8c_9f, r800_ffff_tmp126, r800_ffff_tmp127, bytetest_a2_a8;
		BitBlock r800_ffff_tmp128, r800_ffff_tmp129, r800_ffff_tmp130, bytetest_80_bb;
		BitBlock r800_ffff_tmp131, r800_ffff_tmp132, r800_ffff_tmp133;
		BitBlock r800_ffff_tmp134, bytetest_ab_bf, r800_ffff_tmp135, r800_ffff_tmp136;
		BitBlock r800_ffff_tmp137, r800_ffff_tmp138, r800_ffff_tmp139;
		BitBlock r800_ffff_tmp140, bytetest_bd_bf, r800_ffff_tmp141, r800_ffff_tmp142;
		BitBlock bytetest_80_9b, r800_ffff_tmp143, r800_ffff_tmp144, r800_ffff_tmp145;
		BitBlock bytetest_b4_bf, r800_ffff_tmp146, r800_ffff_tmp147, r800_ffff_tmp148;
		BitBlock r800_ffff_tmp149, bytetest_a2_b3, r800_ffff_tmp150, r800_ffff_tmp151;
		BitBlock r800_ffff_tmp152, r800_ffff_tmp153, bytetest_80_8a, r800_ffff_tmp154;
		BitBlock r800_ffff_tmp155, r800_ffff_tmp156, r800_ffff_tmp157, bytetest_80_a9;
		BitBlock r800_ffff_tmp158, r800_ffff_tmp159, r800_ffff_tmp160;
		BitBlock r800_ffff_tmp161, bytetest_9c_bf, r800_ffff_tmp162, r800_ffff_tmp163;
		BitBlock r800_ffff_tmp164, r800_ffff_tmp165, bytetest_96, r800_ffff_tmp166;
		BitBlock bytetest_80_b6, r800_ffff_tmp167, r800_ffff_tmp168, r800_ffff_tmp169;
		BitBlock bytetest_94_95, r800_ffff_tmp170, r800_ffff_tmp171, r800_ffff_tmp172;
		BitBlock r800_ffff_tmp173, r800_ffff_tmp174, r800_ffff_tmp175;
		BitBlock r800_ffff_tmp176, bytetest_b8_bf, r800_ffff_tmp177, r800_ffff_tmp178;
		BitBlock r800_ffff_tmp179, r800_ffff_tmp180, bytetest_82_b7, r800_ffff_tmp181;
		BitBlock r800_ffff_tmp182, bytetest_80_ae, r800_ffff_tmp183, r800_ffff_tmp184;
		BitBlock r800_ffff_tmp185, r800_ffff_tmp186, r800_ffff_tmp187;
		BitBlock r800_ffff_tmp188, r800_ffff_tmp189, bytetest_9a_9b, r800_ffff_tmp190;
		BitBlock r800_ffff_tmp191, r800_ffff_tmp192, r800_ffff_tmp193;
		BitBlock r800_ffff_tmp194, r800_ffff_tmp195, bytetest_80_a7, r800_ffff_tmp196;
		BitBlock r800_ffff_tmp197, r800_ffff_tmp198, r800_ffff_tmp199, bytetest_81_bf;
		BitBlock r800_ffff_tmp200, r800_ffff_tmp201, r800_ffff_tmp202;
		BitBlock r800_ffff_tmp203, bytetest_9e, r800_ffff_tmp204, bytetest_94_bf;
		BitBlock r800_ffff_tmp205, r800_ffff_tmp206, r800_ffff_tmp207, bytetest_a0_a3;
		BitBlock r800_ffff_tmp208, r800_ffff_tmp209, r800_ffff_tmp210, bytetest_ac;
		BitBlock bytetest_80_af, r800_ffff_tmp211, r800_ffff_tmp212, r800_ffff_tmp213;
		BitBlock r800_ffff_tmp214, bytetest_85_86, r800_ffff_tmp215, r800_ffff_tmp216;
		BitBlock r800_ffff_tmp217, r800_ffff_tmp218, bytetest_b3, r800_ffff_tmp219;
		BitBlock bytetest_a5_aa, r800_ffff_tmp220, r800_ffff_tmp221, r800_ffff_tmp222;
		BitBlock bytetest_ba, r800_ffff_tmp223, bytetest_80_99, r800_ffff_tmp224;
		BitBlock r800_ffff_tmp225, r800_ffff_tmp226, bytetest_bb, r800_ffff_tmp227;
		BitBlock r800_ffff_tmp228, r800_ffff_tmp229, r800_ffff_tmp230, bytetest_9b_bf;
		BitBlock r800_ffff_tmp231, r800_ffff_tmp232, bytetest_80_95, r800_ffff_tmp233;
		BitBlock r800_ffff_tmp234, r800_ffff_tmp235, bytetest_bc_be, r800_ffff_tmp236;
		BitBlock r800_ffff_tmp237, r800_ffff_tmp238, r800_ffff_tmp239, bytetest_b0_bb;
		BitBlock r800_ffff_tmp240, bytetest_e3, bytetest_84_84, r800_ffff_tmp241;
		BitBlock r800_ffff_tmp242, r800_ffff_tmp243, r800_ffff_tmp244;
		BitBlock r800_ffff_tmp245, r800_ffff_tmp246, bytetest_92_93, r800_ffff_tmp247;
		BitBlock bytetest_a0_a0, r800_ffff_tmp248, bytetest_b6_b7, r800_ffff_tmp249;
		BitBlock r800_ffff_tmp250, r800_ffff_tmp251, r800_ffff_tmp252;
		BitBlock r800_ffff_tmp253, bytetest_96_9f, r800_ffff_tmp254, r800_ffff_tmp255;
		BitBlock bytetest_80_a3, r800_ffff_tmp256, r800_ffff_tmp257, r800_ffff_tmp258;
		BitBlock bytetest_80_9e, r800_ffff_tmp259, r800_ffff_tmp260, r800_ffff_tmp261;
		BitBlock r800_ffff_tmp262, r800_ffff_tmp263, r800_ffff_tmp264, bytetest_aa_bf;
		BitBlock r800_ffff_tmp265, r800_ffff_tmp266, bytetest_90_90, r800_ffff_tmp267;
		BitBlock r800_ffff_tmp268, bytetest_8a, r800_ffff_tmp269, r800_ffff_tmp270;
		BitBlock bytetest_8a_b0, r800_ffff_tmp271, r800_ffff_tmp272, r800_ffff_tmp273;
		BitBlock bytetest_8b, r800_ffff_tmp274, r800_ffff_tmp275, r800_ffff_tmp276;
		BitBlock bytetest_8c_8f, r800_ffff_tmp277, r800_ffff_tmp278, r800_ffff_tmp279;
		BitBlock bytetest_e4, bytetest_b7, r800_ffff_tmp280, r800_ffff_tmp281;
		BitBlock r800_ffff_tmp282, r800_ffff_tmp283, r800_ffff_tmp284, bytetest_ea;
		BitBlock bytetest_80_86, r800_ffff_tmp285, r800_ffff_tmp286, r800_ffff_tmp287;
		BitBlock r800_ffff_tmp288, r800_ffff_tmp289, bytetest_90_bf, r800_ffff_tmp290;
		BitBlock r800_ffff_tmp291, r800_ffff_tmp292, r800_ffff_tmp293, bytetest_a0;
		BitBlock bytetest_a8_ab, r800_ffff_tmp294, r800_ffff_tmp295, r800_ffff_tmp296;
		BitBlock r800_ffff_tmp297, r800_ffff_tmp298, bytetest_a9, r800_ffff_tmp299;
		BitBlock bytetest_b7_b9, r800_ffff_tmp300, r800_ffff_tmp301, r800_ffff_tmp302;
		BitBlock bytetest_ef, bytetest_bd_bd, r800_ffff_tmp303, r800_ffff_tmp304;
		BitBlock r800_ffff_tmp305, r800_ffff_tmp306, r800_ffff_tmp307, bytetest_a4_a4;
		BitBlock r800_ffff_tmp308, r800_ffff_tmp309, r800_ffff_tmp310, bytetest_a8_a8;
		BitBlock r800_ffff_tmp311, r800_ffff_tmp312, bytetest_ad_ae, r800_ffff_tmp313;
		BitBlock bytetest_bc_bd, r800_ffff_tmp314, tmp274, tmp275, tmp276;
		BitBlock r10000_10fff_tmp1, r10000_10fff_tmp2, r10000_10fff_tmp3;
		BitBlock r10000_10fff_tmp4, r10000_10fff_tmp5, bytetest_80_89;
		BitBlock r10000_10fff_tmp6, r10000_10fff_tmp7, r10000_10fff_tmp8;
		BitBlock bytetest_b9_bf, r10000_10fff_tmp9, r10000_10fff_tmp10;
		BitBlock r10000_10fff_tmp11, r10000_10fff_tmp12, bytetest_90_9b;
		BitBlock r10000_10fff_tmp13, r10000_10fff_tmp14, r10000_10fff_tmp15;
		BitBlock bytetest_90_bc, r10000_10fff_tmp16, r10000_10fff_tmp17;
		BitBlock r10000_10fff_tmp18;




        struct_So.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_and(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_or(tmp4, tmp5);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp11 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp12 = simd_and(tmp10, tmp11);
        bytetest_9d = simd_and(tmp9, tmp12);
        tmp13 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp14 = simd_andc(tmp7, tmp13);
        tmp15 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp16 = simd_andc(tmp15, tmp4);
        bytetest_83 = simd_and(tmp14, tmp16);
        tmp17 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp18 = simd_or(basis_bits.bit_4, tmp17);
        tmp19 = simd_and(basis_bits.bit_3, tmp18);
        tmp20 = simd_and(basis_bits.bit_2, tmp19);
        bytetest_80_b5 = simd_andc(tmp7, tmp20);
        tmp21 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp21, carryQ.get_carry_in(0), tmp22));
        tmp23 = simd_and(tmp22, bytetest_f0);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp23, carryQ.get_carry_in(1), tmp24));
        tmp25 = simd_and(tmp24, bytetest_9d);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp25, carryQ.get_carry_in(2), tmp26));
        tmp27 = simd_and(tmp26, bytetest_83);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp27, carryQ.get_carry_in(3), tmp28));
        tmp29 = simd_and(tmp28, bytetest_80_b5);
        tmp30 = simd_andc(tmp14, tmp4);
        bytetest_80_82 = simd_andc(tmp30, tmp15);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp31 = simd_and(tmp26, bytetest_80_82);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp31, carryQ.get_carry_in(4), tmp32));
        tmp33 = simd_and(tmp32, bytetest_80_bf);
        tmp34 = simd_or(tmp33, tmp29);
        struct_So.cc = simd_or(tmp34, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        tmp35 = simd_and(bytetest_80_bf, tmp8);
        bytetest_9d = simd_and(tmp35, tmp12);
        tmp36 = simd_andc(bytetest_80_bf, tmp13);
        tmp37 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp38 = simd_andc(tmp37, tmp5);
        bytetest_84 = simd_and(tmp36, tmp38);
        tmp39 = simd_and(basis_bits.bit_5, tmp15);
        tmp40 = simd_or(basis_bits.bit_4, tmp39);
        tmp41 = simd_or(basis_bits.bit_3, tmp40);
        tmp42 = simd_and(basis_bits.bit_2, tmp41);
        bytetest_80_a6 = simd_andc(bytetest_80_bf, tmp42);
        tmp43 = simd_and(tmp26, bytetest_84);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp43, carryQ.get_carry_in(5), tmp44));
        tmp45 = simd_and(tmp44, bytetest_80_a6);
        struct_So.cc = simd_or(tmp45, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp35, tmp12);
        tmp46 = simd_and(tmp37, tmp11);
        bytetest_85 = simd_and(tmp36, tmp46);
        tmp47 = simd_and(basis_bits.bit_5, tmp5);
        tmp48 = simd_or(basis_bits.bit_4, tmp47);
        tmp49 = simd_or(basis_bits.bit_3, tmp48);
        tmp50 = simd_and(basis_bits.bit_2, tmp49);
        bytetest_80_a4 = simd_andc(bytetest_80_bf, tmp50);
        tmp51 = simd_and(tmp26, bytetest_85);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp51, carryQ.get_carry_in(6), tmp52));
        tmp53 = simd_and(tmp52, bytetest_80_a4);
        bytetest_84 = simd_and(tmp36, tmp38);
        tmp54 = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp55 = simd_or(basis_bits.bit_5, tmp5);
        tmp56 = simd_and(basis_bits.bit_4, tmp55);
        tmp57 = simd_or(basis_bits.bit_3, tmp56);
        bytetest_a9_bf = simd_and(tmp54, tmp57);
        tmp58 = simd_and(tmp44, bytetest_a9_bf);
        tmp59 = simd_or(tmp58, tmp53);
        struct_So.cc = simd_or(tmp59, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp35, tmp12);
        bytetest_85 = simd_and(tmp36, tmp46);
        tmp60 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp61 = simd_and(bytetest_80_bf, tmp60);
        tmp62 = simd_and(tmp61, basis_bits.bit_4);
        tmp63 = simd_not(tmp5);
        tmp64 = simd_or(simd_and(basis_bits.bit_5, tmp63), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
        bytetest_aa_ac = simd_and(tmp62, tmp64);
        tmp65 = simd_and(tmp52, bytetest_aa_ac);
        struct_So.cc = simd_or(tmp65, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp35, tmp12);
        tmp66 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp67 = simd_and(tmp37, tmp66);
        bytetest_86 = simd_and(tmp36, tmp67);
        tmp68 = simd_andc(tmp36, basis_bits.bit_4);
        tmp69 = simd_or(simd_and(basis_bits.bit_5, tmp63), simd_andc(tmp15, basis_bits.bit_5));
        bytetest_83_84 = simd_and(tmp68, tmp69);
        tmp70 = simd_and(tmp26, bytetest_86);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp70, carryQ.get_carry_in(7), tmp71));
        tmp72 = simd_and(tmp71, bytetest_83_84);
        struct_So.cc = simd_or(tmp72, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp35, tmp12);
        bytetest_86 = simd_and(tmp36, tmp67);
        tmp73 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
        tmp74 = simd_and(basis_bits.bit_4, tmp73);
        tmp75 = simd_or(basis_bits.bit_3, tmp74);
        tmp76 = simd_not(tmp75);
        tmp77 = simd_or(basis_bits.bit_3, tmp10);
        tmp78 = simd_or(simd_and(basis_bits.bit_2, tmp76), simd_andc(tmp77, basis_bits.bit_2));
        bytetest_8c_a9 = simd_and(bytetest_80_bf, tmp78);
        tmp79 = simd_and(tmp71, bytetest_8c_a9);
        struct_So.cc = simd_or(tmp79, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp35, tmp12);
        tmp80 = simd_and(tmp37, tmp15);
        bytetest_87 = simd_and(tmp36, tmp80);
        tmp81 = simd_andc(bytetest_80_bf, basis_bits.bit_2);
        tmp82 = simd_and(tmp10, basis_bits.bit_6);
        tmp83 = simd_and(basis_bits.bit_3, tmp82);
        bytetest_80_9d = simd_andc(tmp81, tmp83);
        tmp84 = simd_and(tmp26, bytetest_87);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(tmp84, carryQ.get_carry_in(8), tmp85));
        tmp86 = simd_and(tmp85, bytetest_80_9d);
        bytetest_86 = simd_and(tmp36, tmp67);
        tmp87 = simd_or(basis_bits.bit_3, tmp82);
        bytetest_ae_bf = simd_and(tmp54, tmp87);
        tmp88 = simd_and(tmp71, bytetest_ae_bf);
        tmp89 = simd_or(tmp88, tmp86);
        struct_So.cc = simd_or(tmp89, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp35, tmp12);
        tmp90 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp91 = simd_and(tmp90, tmp11);
        bytetest_89 = simd_and(tmp36, tmp91);
        tmp92 = simd_or(tmp4, basis_bits.bit_6);
        bytetest_80_81 = simd_andc(tmp36, tmp92);
        tmp93 = simd_and(tmp26, bytetest_89);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(tmp93, carryQ.get_carry_in(9), tmp94));
        tmp95 = simd_and(tmp94, bytetest_80_81);
        tmp96 = simd_andc(tmp90, tmp5);
        bytetest_88 = simd_and(tmp36, tmp96);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp97 = simd_and(tmp26, bytetest_88);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(tmp97, carryQ.get_carry_in(10), tmp98));
        tmp99 = simd_and(tmp98, bytetest_80_bf);
        tmp100 = simd_or(tmp99, tmp95);
        struct_So.cc = simd_or(tmp100, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp35, tmp12);
        bytetest_89 = simd_and(tmp36, tmp91);
        bytetest_85_85 = simd_and(tmp36, tmp46);
        tmp101 = simd_and(tmp94, bytetest_85_85);
        struct_So.cc = simd_or(tmp101, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp35, tmp12);
        bytetest_8d = simd_and(tmp36, tmp12);
        tmp102 = simd_and(basis_bits.bit_3, tmp40);
        bytetest_80_96 = simd_andc(tmp81, tmp102);
        tmp103 = simd_and(tmp26, bytetest_8d);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(tmp103, carryQ.get_carry_in(11), tmp104));
        tmp105 = simd_and(tmp104, bytetest_80_96);
        tmp106 = simd_andc(tmp10, tmp5);
        bytetest_8c = simd_and(tmp36, tmp106);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp107 = simd_and(tmp26, bytetest_8c);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(tmp107, carryQ.get_carry_in(12), tmp108));
        tmp109 = simd_and(tmp108, bytetest_80_bf);
        tmp110 = simd_or(tmp109, tmp105);
        struct_So.cc = simd_or(tmp110, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        tmp111 = simd_and(tmp10, tmp15);
        bytetest_9f = simd_and(tmp35, tmp111);
        bytetest_80 = simd_andc(tmp36, tmp6);
        tmp112 = simd_and(basis_bits.bit_2, tmp77);
        bytetest_80_ab = simd_andc(bytetest_80_bf, tmp112);
        tmp113 = simd_and(tmp24, bytetest_9f);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(tmp113, carryQ.get_carry_in(13), tmp114));
        tmp115 = simd_and(tmp114, bytetest_80);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(tmp115, carryQ.get_carry_in(14), tmp116));
        tmp117 = simd_and(tmp116, bytetest_80_ab);
        struct_So.cc = simd_or(tmp117, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp35, tmp111);
        tmp118 = simd_andc(tmp66, tmp4);
        bytetest_82 = simd_and(tmp36, tmp118);
        tmp119 = simd_and(basis_bits.bit_3, tmp4);
        bytetest_80_93 = simd_andc(tmp81, tmp119);
        tmp120 = simd_and(tmp114, bytetest_82);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(tmp120, carryQ.get_carry_in(15), tmp121));
        tmp122 = simd_and(tmp121, bytetest_80_93);
        tmp123 = simd_andc(tmp11, tmp4);
        bytetest_81 = simd_and(tmp36, tmp123);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp124 = simd_and(tmp114, bytetest_81);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(tmp124, carryQ.get_carry_in(16), tmp125));
        tmp126 = simd_and(tmp125, bytetest_80_bf);
        bytetest_80 = simd_andc(tmp36, tmp6);
        bytetest_b0_bf = simd_and(bytetest_80_bf, tmp2);
        tmp127 = simd_and(tmp116, bytetest_b0_bf);
        tmp128 = simd_or(tmp127, tmp126);
        tmp129 = simd_or(tmp128, tmp122);
        struct_So.cc = simd_or(tmp129, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp35, tmp111);
        bytetest_82 = simd_and(tmp36, tmp118);
        tmp130 = simd_and(basis_bits.bit_4, tmp39);
        bytetest_a0_ae = simd_andc(tmp61, tmp130);
        tmp131 = simd_and(tmp121, bytetest_a0_ae);
        struct_So.cc = simd_or(tmp131, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp35, tmp111);
        bytetest_82 = simd_and(tmp36, tmp118);
        tmp132 = simd_not(tmp39);
        tmp133 = simd_or(simd_and(basis_bits.bit_4, tmp132), simd_andc(tmp55, basis_bits.bit_4));
        bytetest_b1_be = simd_and(bytetest_b0_bf, tmp133);
        tmp134 = simd_and(tmp121, bytetest_b1_be);
        struct_So.cc = simd_or(tmp134, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp35, tmp111);
        bytetest_83 = simd_and(tmp36, tmp16);
        tmp135 = simd_or(basis_bits.bit_4, tmp55);
        bytetest_81_8f = simd_and(tmp36, tmp135);
        tmp136 = simd_and(tmp114, bytetest_83);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(tmp136, carryQ.get_carry_in(17), tmp137));
        tmp138 = simd_and(tmp137, bytetest_81_8f);
        struct_So.cc = simd_or(tmp138, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp35, tmp111);
        bytetest_83 = simd_and(tmp36, tmp16);
        bytetest_91_9f = simd_and(tmp35, tmp135);
        tmp139 = simd_and(tmp137, bytetest_91_9f);
        struct_So.cc = simd_or(tmp139, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp35, tmp111);
        bytetest_84 = simd_and(tmp36, tmp38);
        tmp140 = simd_or(basis_bits.bit_3, tmp111);
        tmp141 = simd_not(tmp140);
        tmp142 = simd_or(simd_and(basis_bits.bit_2, tmp141), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
        bytetest_90_ae = simd_and(bytetest_80_bf, tmp142);
        tmp143 = simd_and(tmp114, bytetest_84);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(tmp143, carryQ.get_carry_in(18), tmp144));
        tmp145 = simd_and(tmp144, bytetest_90_ae);
        struct_So.cc = simd_or(tmp145, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp35, tmp111);
        bytetest_85 = simd_and(tmp36, tmp46);
        bytetest_80_ab = simd_andc(bytetest_80_bf, tmp112);
        tmp146 = simd_and(tmp114, bytetest_85);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(tmp146, carryQ.get_carry_in(19), tmp147));
        tmp148 = simd_and(tmp147, bytetest_80_ab);
        bytetest_84 = simd_and(tmp36, tmp38);
        bytetest_b0_bf = simd_and(bytetest_80_bf, tmp2);
        tmp149 = simd_and(tmp144, bytetest_b0_bf);
        tmp150 = simd_or(tmp149, tmp148);
        struct_So.cc = simd_or(tmp150, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp35, tmp111);
        bytetest_86 = simd_and(tmp36, tmp67);
        tmp151 = simd_or(basis_bits.bit_5, tmp15);
        tmp152 = simd_and(basis_bits.bit_4, tmp151);
        tmp153 = simd_and(basis_bits.bit_3, tmp152);
        bytetest_80_9a = simd_andc(tmp81, tmp153);
        tmp154 = simd_and(tmp114, bytetest_86);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(tmp154, carryQ.get_carry_in(20), tmp155));
        tmp156 = simd_and(tmp155, bytetest_80_9a);
        bytetest_85 = simd_and(tmp36, tmp46);
        bytetest_b0_bf = simd_and(bytetest_80_bf, tmp2);
        tmp157 = simd_and(tmp147, bytetest_b0_bf);
        tmp158 = simd_or(tmp157, tmp156);
        struct_So.cc = simd_or(tmp158, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp35, tmp111);
        bytetest_88 = simd_and(tmp36, tmp96);
        tmp159 = simd_andc(tmp36, tmp4);
        bytetest_80_82 = simd_andc(tmp159, tmp15);
        tmp160 = simd_and(tmp114, bytetest_88);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(tmp160, carryQ.get_carry_in(21), tmp161));
        tmp162 = simd_and(tmp161, bytetest_80_82);
        bytetest_87 = simd_and(tmp36, tmp80);
        tmp163 = simd_or(basis_bits.bit_3, tmp18);
        bytetest_a6_bf = simd_and(tmp54, tmp163);
        tmp164 = simd_and(tmp114, bytetest_87);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(tmp164, carryQ.get_carry_in(22), tmp165));
        tmp166 = simd_and(tmp165, bytetest_a6_bf);
        tmp167 = simd_or(tmp166, tmp162);
        struct_So.cc = simd_or(tmp167, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp35, tmp111);
        bytetest_88 = simd_and(tmp36, tmp96);
        tmp168 = simd_not(tmp153);
        tmp169 = simd_or(simd_and(basis_bits.bit_2, tmp168), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
        bytetest_90_ba = simd_and(bytetest_80_bf, tmp169);
        tmp170 = simd_and(tmp161, bytetest_90_ba);
        struct_So.cc = simd_or(tmp170, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp35, tmp111);
        bytetest_89 = simd_and(tmp36, tmp91);
        bytetest_80_88 = simd_andc(tmp36, tmp56);
        tmp171 = simd_and(tmp114, bytetest_89);
        carryQ.cq[23] = carryout2carry(pablo_blk_Advance(tmp171, carryQ.get_carry_in(23), tmp172));
        tmp173 = simd_and(tmp172, bytetest_80_88);
        struct_So.cc = simd_or(tmp173, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp35, tmp111);
        bytetest_89 = simd_and(tmp36, tmp91);
        bytetest_90_91 = simd_andc(tmp35, tmp92);
        tmp174 = simd_and(tmp172, bytetest_90_91);
        struct_So.cc = simd_or(tmp174, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp35, tmp111);
        bytetest_8c = simd_and(tmp36, tmp106);
        tmp175 = simd_or(basis_bits.bit_3, tmp6);
        tmp176 = simd_and(basis_bits.bit_2, tmp175);
        bytetest_80_a0 = simd_andc(bytetest_80_bf, tmp176);
        tmp177 = simd_and(tmp114, bytetest_8c);
        carryQ.cq[24] = carryout2carry(pablo_blk_Advance(tmp177, carryQ.get_carry_in(24), tmp178));
        tmp179 = simd_and(tmp178, bytetest_80_a0);
        struct_So.cc = simd_or(tmp179, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp35, tmp111);
        bytetest_8c = simd_and(tmp36, tmp106);
        tmp180 = simd_andc(bytetest_b0_bf, basis_bits.bit_4);
        bytetest_b0_b5 = simd_andc(tmp180, tmp17);
        tmp181 = simd_and(tmp178, bytetest_b0_b5);
        struct_So.cc = simd_or(tmp181, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp35, tmp111);
        bytetest_8d = simd_and(tmp36, tmp12);
        tmp182 = simd_and(tmp10, tmp5);
        tmp183 = simd_and(basis_bits.bit_3, tmp182);
        tmp184 = simd_and(basis_bits.bit_2, tmp183);
        bytetest_80_bc = simd_andc(bytetest_80_bf, tmp184);
        tmp185 = simd_and(tmp114, bytetest_8d);
        carryQ.cq[25] = carryout2carry(pablo_blk_Advance(tmp185, carryQ.get_carry_in(25), tmp186));
        tmp187 = simd_and(tmp186, bytetest_80_bc);
        bytetest_8c = simd_and(tmp36, tmp106);
        bytetest_b7_bf = simd_and(bytetest_b0_bf, tmp40);
        tmp188 = simd_and(tmp178, bytetest_b7_bf);
        tmp189 = simd_or(tmp188, tmp187);
        struct_So.cc = simd_or(tmp189, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp35, tmp111);
        tmp190 = simd_and(tmp10, tmp66);
        bytetest_8e = simd_and(tmp36, tmp190);
        bytetest_80_93 = simd_andc(tmp81, tmp119);
        tmp191 = simd_and(tmp114, bytetest_8e);
        carryQ.cq[26] = carryout2carry(pablo_blk_Advance(tmp191, carryQ.get_carry_in(26), tmp192));
        tmp193 = simd_and(tmp192, bytetest_80_93);
        struct_So.cc = simd_or(tmp193, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp35, tmp111);
        bytetest_8f = simd_and(tmp36, tmp111);
        bytetest_80_84 = simd_andc(tmp68, tmp47);
        tmp194 = simd_and(tmp114, bytetest_8f);
        carryQ.cq[27] = carryout2carry(pablo_blk_Advance(tmp194, carryQ.get_carry_in(27), tmp195));
        tmp196 = simd_and(tmp195, bytetest_80_84);
        bytetest_8e = simd_and(tmp36, tmp190);
        bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp197 = simd_and(tmp192, bytetest_a0_bf);
        tmp198 = simd_or(tmp197, tmp196);
        struct_So.cc = simd_or(tmp198, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp35, tmp111);
        bytetest_8f = simd_and(tmp36, tmp111);
        tmp199 = simd_not(tmp151);
        tmp200 = simd_or(simd_and(basis_bits.bit_4, tmp199), simd_andc(tmp17, basis_bits.bit_4));
        bytetest_86_8a = simd_and(tmp36, tmp200);
        tmp201 = simd_and(tmp195, bytetest_86_8a);
        struct_So.cc = simd_or(tmp201, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp35, tmp111);
        bytetest_8f = simd_and(tmp36, tmp111);
        tmp202 = simd_and(basis_bits.bit_3, tmp6);
        bytetest_a0_b0 = simd_andc(bytetest_a0_bf, tmp202);
        tmp203 = simd_and(tmp195, bytetest_a0_b0);
        struct_So.cc = simd_or(tmp203, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp35, tmp111);
        bytetest_90 = simd_andc(tmp35, tmp6);
        tmp204 = simd_and(basis_bits.bit_3, tmp111);
        tmp205 = simd_and(basis_bits.bit_2, tmp204);
        bytetest_80_be = simd_andc(bytetest_80_bf, tmp205);
        tmp206 = simd_and(tmp114, bytetest_90);
        carryQ.cq[28] = carryout2carry(pablo_blk_Advance(tmp206, carryQ.get_carry_in(28), tmp207));
        tmp208 = simd_and(tmp207, bytetest_80_be);
        struct_So.cc = simd_or(tmp208, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp35, tmp111);
        bytetest_91 = simd_and(tmp35, tmp123);
        bytetest_80_80 = simd_andc(tmp36, tmp6);
        tmp209 = simd_and(tmp114, bytetest_91);
        carryQ.cq[29] = carryout2carry(pablo_blk_Advance(tmp209, carryQ.get_carry_in(29), tmp210));
        tmp211 = simd_and(tmp210, bytetest_80_80);
        struct_So.cc = simd_or(tmp211, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp35, tmp111);
        bytetest_93 = simd_and(tmp35, tmp16);
        tmp212 = simd_and(basis_bits.bit_3, basis_bits.bit_4);
        tmp213 = simd_and(basis_bits.bit_2, tmp212);
        bytetest_80_b7 = simd_andc(bytetest_80_bf, tmp213);
        tmp214 = simd_and(tmp114, bytetest_93);
        carryQ.cq[30] = carryout2carry(pablo_blk_Advance(tmp214, carryQ.get_carry_in(30), tmp215));
        tmp216 = simd_and(tmp215, bytetest_80_b7);
        bytetest_92 = simd_and(tmp35, tmp118);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp217 = simd_and(tmp114, bytetest_92);
        carryQ.cq[31] = carryout2carry(pablo_blk_Advance(tmp217, carryQ.get_carry_in(31), tmp218));
        tmp219 = simd_and(tmp218, bytetest_80_bf);
        bytetest_91 = simd_and(tmp35, tmp123);
        tmp220 = simd_or(basis_bits.bit_3, tmp92);
        tmp221 = simd_or(basis_bits.bit_2, tmp220);
        bytetest_82_bf = simd_and(bytetest_80_bf, tmp221);
        tmp222 = simd_and(tmp210, bytetest_82_bf);
        tmp223 = simd_or(tmp222, tmp219);
        tmp224 = simd_or(tmp223, tmp216);
        struct_So.cc = simd_or(tmp224, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp35, tmp111);
        bytetest_93 = simd_and(tmp35, tmp16);
        tmp225 = simd_and(bytetest_b0_bf, basis_bits.bit_4);
        tmp226 = simd_or(simd_and(basis_bits.bit_5, tmp63), simd_andc(tmp5, basis_bits.bit_5));
        bytetest_b9_bc = simd_and(tmp225, tmp226);
        tmp227 = simd_and(tmp215, bytetest_b9_bc);
        struct_So.cc = simd_or(tmp227, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp35, tmp111);
        bytetest_94 = simd_and(tmp35, tmp38);
        tmp228 = simd_and(basis_bits.bit_2, tmp83);
        bytetest_80_bd = simd_andc(bytetest_80_bf, tmp228);
        tmp229 = simd_and(tmp114, bytetest_94);
        carryQ.cq[32] = carryout2carry(pablo_blk_Advance(tmp229, carryQ.get_carry_in(32), tmp230));
        tmp231 = simd_and(tmp230, bytetest_80_bd);
        struct_So.cc = simd_or(tmp231, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp35, tmp111);
        bytetest_95 = simd_and(tmp35, tmp46);
        bytetest_80_83 = simd_andc(tmp36, tmp4);
        tmp232 = simd_and(tmp114, bytetest_95);
        carryQ.cq[33] = carryout2carry(pablo_blk_Advance(tmp232, carryQ.get_carry_in(33), tmp233));
        tmp234 = simd_and(tmp233, bytetest_80_83);
        struct_So.cc = simd_or(tmp234, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp35, tmp111);
        bytetest_95 = simd_and(tmp35, tmp46);
        tmp235 = simd_or(basis_bits.bit_3, basis_bits.bit_4);
        tmp236 = simd_not(tmp235);
        tmp237 = simd_or(simd_and(basis_bits.bit_2, tmp236), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
        bytetest_90_a7 = simd_and(bytetest_80_bf, tmp237);
        tmp238 = simd_and(tmp233, bytetest_90_a7);
        struct_So.cc = simd_or(tmp238, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp35, tmp111);
        bytetest_99 = simd_and(tmp35, tmp91);
        bytetest_80_80 = simd_andc(tmp36, tmp6);
        tmp239 = simd_and(tmp114, bytetest_99);
        carryQ.cq[34] = carryout2carry(pablo_blk_Advance(tmp239, carryQ.get_carry_in(34), tmp240));
        tmp241 = simd_and(tmp240, bytetest_80_80);
        bytetest_98 = simd_and(tmp35, tmp96);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp242 = simd_and(tmp114, bytetest_98);
        carryQ.cq[35] = carryout2carry(pablo_blk_Advance(tmp242, carryQ.get_carry_in(35), tmp243));
        tmp244 = simd_and(tmp243, bytetest_80_bf);
        bytetest_97 = simd_and(tmp35, tmp80);
        bytetest_bb_bf = simd_and(tmp225, tmp151);
        tmp245 = simd_and(tmp114, bytetest_97);
        carryQ.cq[36] = carryout2carry(pablo_blk_Advance(tmp245, carryQ.get_carry_in(36), tmp246));
        tmp247 = simd_and(tmp246, bytetest_bb_bf);
        tmp248 = simd_or(tmp247, tmp244);
        tmp249 = simd_or(tmp248, tmp241);
        struct_So.cc = simd_or(tmp249, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp35, tmp111);
        bytetest_99 = simd_and(tmp35, tmp91);
        bytetest_85_8f = simd_and(tmp36, tmp48);
        tmp250 = simd_and(tmp240, bytetest_85_8f);
        struct_So.cc = simd_or(tmp250, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp35, tmp111);
        tmp251 = simd_and(tmp90, tmp15);
        bytetest_9b = simd_and(tmp35, tmp251);
        bytetest_80_85 = simd_andc(tmp68, tmp17);
        tmp252 = simd_and(tmp114, bytetest_9b);
        carryQ.cq[37] = carryout2carry(pablo_blk_Advance(tmp252, carryQ.get_carry_in(37), tmp253));
        tmp254 = simd_and(tmp253, bytetest_80_85);
        tmp255 = simd_and(tmp90, tmp66);
        bytetest_9a = simd_and(tmp35, tmp255);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp256 = simd_and(tmp114, bytetest_9a);
        carryQ.cq[38] = carryout2carry(pablo_blk_Advance(tmp256, carryQ.get_carry_in(38), tmp257));
        tmp258 = simd_and(tmp257, bytetest_80_bf);
        tmp259 = simd_or(tmp258, tmp254);
        struct_So.cc = simd_or(tmp259, struct_So.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp35, tmp111);
        bytetest_9d = simd_and(tmp35, tmp12);
        tmp260 = simd_and(basis_bits.bit_2, tmp119);
        bytetest_80_b3 = simd_andc(bytetest_80_bf, tmp260);
        tmp261 = simd_and(tmp114, bytetest_9d);
        carryQ.cq[39] = carryout2carry(pablo_blk_Advance(tmp261, carryQ.get_carry_in(39), tmp262));
        tmp263 = simd_and(tmp262, bytetest_80_b3);
        bytetest_9c = simd_and(tmp35, tmp106);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp264 = simd_and(tmp114, bytetest_9c);
        carryQ.cq[40] = carryout2carry(pablo_blk_Advance(tmp264, carryQ.get_carry_in(40), tmp265));
        tmp266 = simd_and(tmp265, bytetest_80_bf);
        tmp267 = simd_or(tmp266, tmp263);
        struct_So.cc = simd_or(tmp267, struct_So.cc);
        tmp268 = simd_andc(tmp1, basis_bits.bit_2);
        bytetest_c2_df = simd_and(tmp268, tmp220);
        if ((bitblock::any(bytetest_c2_df) || carryQ.CarryTest(41, 5))) {
          r80_7ff_tmp1 = simd_andc(tmp1, tmp13);
          bytetest_c2 = simd_and(r80_7ff_tmp1, tmp118);
          bytetest_a6_a6 = simd_and(tmp61, tmp67);
          r80_7ff_tmp2 = simd_and(tmp22, bytetest_c2);
          carryQ.cq[41] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp2, carryQ.get_carry_in(41), r80_7ff_tmp3));
          r80_7ff_tmp4 = simd_and(r80_7ff_tmp3, bytetest_a6_a6);
          struct_So.cc = simd_or(r80_7ff_tmp4, struct_So.cc);
          bytetest_c2 = simd_and(r80_7ff_tmp1, tmp118);
          bytetest_a9_a9 = simd_and(tmp61, tmp91);
          r80_7ff_tmp5 = simd_and(r80_7ff_tmp3, bytetest_a9_a9);
          struct_So.cc = simd_or(r80_7ff_tmp5, struct_So.cc);
          bytetest_c2 = simd_and(r80_7ff_tmp1, tmp118);
          bytetest_ae_ae = simd_and(tmp61, tmp190);
          r80_7ff_tmp6 = simd_and(r80_7ff_tmp3, bytetest_ae_ae);
          struct_So.cc = simd_or(r80_7ff_tmp6, struct_So.cc);
          bytetest_c2 = simd_and(r80_7ff_tmp1, tmp118);
          bytetest_b0_b0 = simd_andc(bytetest_b0_bf, tmp6);
          r80_7ff_tmp7 = simd_and(r80_7ff_tmp3, bytetest_b0_b0);
          struct_So.cc = simd_or(r80_7ff_tmp7, struct_So.cc);
          r80_7ff_tmp8 = simd_and(tmp1, tmp8);
          bytetest_d2 = simd_and(r80_7ff_tmp8, tmp118);
          bytetest_82_82 = simd_and(tmp36, tmp118);
          r80_7ff_tmp9 = simd_and(tmp22, bytetest_d2);
          carryQ.cq[42] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp9, carryQ.get_carry_in(42), r80_7ff_tmp10));
          r80_7ff_tmp11 = simd_and(r80_7ff_tmp10, bytetest_82_82);
          struct_So.cc = simd_or(r80_7ff_tmp11, struct_So.cc);
          bytetest_d8 = simd_and(r80_7ff_tmp8, tmp96);
          bytetest_8e_8f = simd_and(tmp36, tmp82);
          r80_7ff_tmp12 = simd_and(tmp22, bytetest_d8);
          carryQ.cq[43] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp12, carryQ.get_carry_in(43), r80_7ff_tmp13));
          r80_7ff_tmp14 = simd_and(r80_7ff_tmp13, bytetest_8e_8f);
          struct_So.cc = simd_or(r80_7ff_tmp14, struct_So.cc);
          bytetest_db = simd_and(r80_7ff_tmp8, tmp251);
          bytetest_9e_9e = simd_and(tmp35, tmp190);
          r80_7ff_tmp15 = simd_and(tmp22, bytetest_db);
          carryQ.cq[44] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp15, carryQ.get_carry_in(44), r80_7ff_tmp16));
          r80_7ff_tmp17 = simd_and(r80_7ff_tmp16, bytetest_9e_9e);
          struct_So.cc = simd_or(r80_7ff_tmp17, struct_So.cc);
          bytetest_db = simd_and(r80_7ff_tmp8, tmp251);
          bytetest_a9_a9 = simd_and(tmp61, tmp91);
          r80_7ff_tmp18 = simd_and(r80_7ff_tmp16, bytetest_a9_a9);
          struct_So.cc = simd_or(r80_7ff_tmp18, struct_So.cc);
          bytetest_db = simd_and(r80_7ff_tmp8, tmp251);
          r80_7ff_tmp19 = simd_and(bytetest_b0_bf, tmp10);
          r80_7ff_tmp20 = simd_not(basis_bits.bit_7);
          r80_7ff_tmp21 = simd_or(simd_and(basis_bits.bit_6, r80_7ff_tmp20), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
          bytetest_bd_be = simd_and(r80_7ff_tmp19, r80_7ff_tmp21);
          r80_7ff_tmp22 = simd_and(r80_7ff_tmp16, bytetest_bd_be);
          struct_So.cc = simd_or(r80_7ff_tmp22, struct_So.cc);
          bytetest_df = simd_and(r80_7ff_tmp8, tmp111);
          bytetest_b6_b6 = simd_and(bytetest_b0_bf, tmp67);
          r80_7ff_tmp23 = simd_and(tmp22, bytetest_df);
          carryQ.cq[45] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp23, carryQ.get_carry_in(45), r80_7ff_tmp24));
          r80_7ff_tmp25 = simd_and(r80_7ff_tmp24, bytetest_b6_b6);
          struct_So.cc = simd_or(r80_7ff_tmp25, struct_So.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(41, 5);
        }
        tmp269 = simd_and(tmp1, tmp60);
        bytetest_e1_ef = simd_and(tmp269, tmp135);
        bytetest_e0 = simd_andc(tmp269, tmp6);
        bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp270 = simd_and(tmp22, bytetest_e0);
        carryQ.cq[46] = carryout2carry(pablo_blk_Advance(tmp270, carryQ.get_carry_in(46), tmp271));
        tmp272 = simd_and(tmp271, bytetest_a0_bf);
        tmp273 = simd_or(tmp272, bytetest_e1_ef);
        if ((bitblock::any(tmp273) || carryQ.CarryTest(47, 64))) {
          r800_ffff_tmp1 = simd_and(tmp1, tmp60);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a7 = simd_and(tmp61, tmp80);
          bytetest_ba_ba = simd_and(bytetest_b0_bf, tmp255);
          r800_ffff_tmp2 = simd_and(tmp22, bytetest_e0);
          carryQ.cq[47] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp2, carryQ.get_carry_in(47), r800_ffff_tmp3));
          r800_ffff_tmp4 = simd_and(r800_ffff_tmp3, bytetest_a7);
          carryQ.cq[48] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp4, carryQ.get_carry_in(48), r800_ffff_tmp5));
          r800_ffff_tmp6 = simd_and(r800_ffff_tmp5, bytetest_ba_ba);
          struct_So.cc = simd_or(r800_ffff_tmp6, struct_So.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ad = simd_and(tmp61, tmp12);
          bytetest_b0_b0 = simd_andc(bytetest_b0_bf, tmp6);
          r800_ffff_tmp7 = simd_and(r800_ffff_tmp3, bytetest_ad);
          carryQ.cq[49] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp7, carryQ.get_carry_in(49), r800_ffff_tmp8));
          r800_ffff_tmp9 = simd_and(r800_ffff_tmp8, bytetest_b0_b0);
          struct_So.cc = simd_or(r800_ffff_tmp9, struct_So.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_af = simd_and(tmp61, tmp111);
          r800_ffff_tmp10 = simd_not(tmp55);
          r800_ffff_tmp11 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp10), simd_andc(tmp151, basis_bits.bit_4));
          bytetest_b3_b8 = simd_and(bytetest_b0_bf, r800_ffff_tmp11);
          r800_ffff_tmp12 = simd_and(r800_ffff_tmp3, bytetest_af);
          carryQ.cq[50] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp12, carryQ.get_carry_in(50), r800_ffff_tmp13));
          r800_ffff_tmp14 = simd_and(r800_ffff_tmp13, bytetest_b3_b8);
          struct_So.cc = simd_or(r800_ffff_tmp14, struct_So.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_af = simd_and(tmp61, tmp111);
          bytetest_ba_ba = simd_and(bytetest_b0_bf, tmp255);
          r800_ffff_tmp15 = simd_and(r800_ffff_tmp13, bytetest_ba_ba);
          struct_So.cc = simd_or(r800_ffff_tmp15, struct_So.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b1 = simd_and(bytetest_b0_bf, tmp123);
          bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp111);
          r800_ffff_tmp16 = simd_and(r800_ffff_tmp3, bytetest_b1);
          carryQ.cq[51] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp16, carryQ.get_carry_in(51), r800_ffff_tmp17));
          r800_ffff_tmp18 = simd_and(r800_ffff_tmp17, bytetest_bf_bf);
          struct_So.cc = simd_or(r800_ffff_tmp18, struct_So.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b5 = simd_and(bytetest_b0_bf, tmp46);
          bytetest_b9_b9 = simd_and(bytetest_b0_bf, tmp91);
          r800_ffff_tmp19 = simd_and(r800_ffff_tmp3, bytetest_b5);
          carryQ.cq[52] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp19, carryQ.get_carry_in(52), r800_ffff_tmp20));
          r800_ffff_tmp21 = simd_and(r800_ffff_tmp20, bytetest_b9_b9);
          struct_So.cc = simd_or(r800_ffff_tmp21, struct_So.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bc = simd_and(bytetest_b0_bf, tmp106);
          bytetest_81_83 = simd_and(bytetest_80_83, tmp5);
          r800_ffff_tmp22 = simd_and(r800_ffff_tmp3, bytetest_bc);
          carryQ.cq[53] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp22, carryQ.get_carry_in(53), r800_ffff_tmp23));
          r800_ffff_tmp24 = simd_and(r800_ffff_tmp23, bytetest_81_83);
          struct_So.cc = simd_or(r800_ffff_tmp24, struct_So.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bc = simd_and(bytetest_b0_bf, tmp106);
          bytetest_93_93 = simd_and(tmp35, tmp16);
          r800_ffff_tmp25 = simd_and(r800_ffff_tmp23, bytetest_93_93);
          struct_So.cc = simd_or(r800_ffff_tmp25, struct_So.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bc = simd_and(bytetest_b0_bf, tmp106);
          r800_ffff_tmp26 = simd_and(tmp35, tmp37);
          bytetest_95_97 = simd_and(r800_ffff_tmp26, tmp5);
          r800_ffff_tmp27 = simd_and(r800_ffff_tmp23, bytetest_95_97);
          struct_So.cc = simd_or(r800_ffff_tmp27, struct_So.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bc = simd_and(bytetest_b0_bf, tmp106);
          r800_ffff_tmp28 = simd_and(tmp35, basis_bits.bit_4);
          bytetest_9a_9f = simd_and(r800_ffff_tmp28, tmp73);
          r800_ffff_tmp29 = simd_and(r800_ffff_tmp23, bytetest_9a_9f);
          struct_So.cc = simd_or(r800_ffff_tmp29, struct_So.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bc = simd_and(bytetest_b0_bf, tmp106);
          bytetest_b4_b4 = simd_and(bytetest_b0_bf, tmp38);
          r800_ffff_tmp30 = simd_and(r800_ffff_tmp23, bytetest_b4_b4);
          struct_So.cc = simd_or(r800_ffff_tmp30, struct_So.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bc = simd_and(bytetest_b0_bf, tmp106);
          bytetest_b6_b6 = simd_and(bytetest_b0_bf, tmp67);
          r800_ffff_tmp31 = simd_and(r800_ffff_tmp23, bytetest_b6_b6);
          struct_So.cc = simd_or(r800_ffff_tmp31, struct_So.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bc = simd_and(bytetest_b0_bf, tmp106);
          bytetest_b8_b8 = simd_and(bytetest_b0_bf, tmp96);
          r800_ffff_tmp32 = simd_and(r800_ffff_tmp23, bytetest_b8_b8);
          struct_So.cc = simd_or(r800_ffff_tmp32, struct_So.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp111);
          bytetest_80_85 = simd_andc(tmp68, tmp17);
          r800_ffff_tmp33 = simd_and(r800_ffff_tmp3, bytetest_bf);
          carryQ.cq[54] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp33, carryQ.get_carry_in(54), r800_ffff_tmp34));
          r800_ffff_tmp35 = simd_and(r800_ffff_tmp34, bytetest_80_85);
          bytetest_be = simd_and(bytetest_b0_bf, tmp190);
          bytetest_be_bf = simd_and(bytetest_b0_bf, tmp82);
          r800_ffff_tmp36 = simd_and(r800_ffff_tmp3, bytetest_be);
          carryQ.cq[55] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp36, carryQ.get_carry_in(55), r800_ffff_tmp37));
          r800_ffff_tmp38 = simd_and(r800_ffff_tmp37, bytetest_be_bf);
          r800_ffff_tmp39 = simd_or(r800_ffff_tmp38, r800_ffff_tmp35);
          struct_So.cc = simd_or(r800_ffff_tmp39, struct_So.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp111);
          r800_ffff_tmp40 = simd_not(tmp47);
          r800_ffff_tmp41 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp40), simd_andc(tmp39, basis_bits.bit_4));
          bytetest_87_8c = simd_and(tmp36, r800_ffff_tmp41);
          r800_ffff_tmp42 = simd_and(r800_ffff_tmp34, bytetest_87_8c);
          struct_So.cc = simd_or(r800_ffff_tmp42, struct_So.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp111);
          bytetest_8e_8f = simd_and(tmp36, tmp82);
          r800_ffff_tmp43 = simd_and(r800_ffff_tmp34, bytetest_8e_8f);
          struct_So.cc = simd_or(r800_ffff_tmp43, struct_So.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp111);
          r800_ffff_tmp44 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp10), simd_andc(tmp47, basis_bits.bit_4));
          bytetest_95_98 = simd_and(tmp35, r800_ffff_tmp44);
          r800_ffff_tmp45 = simd_and(r800_ffff_tmp34, bytetest_95_98);
          struct_So.cc = simd_or(r800_ffff_tmp45, struct_So.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp123);
          bytetest_82 = simd_and(tmp36, tmp118);
          bytetest_9e_9f = simd_and(tmp35, tmp82);
          r800_ffff_tmp46 = simd_and(tmp22, bytetest_e1);
          carryQ.cq[56] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp46, carryQ.get_carry_in(56), r800_ffff_tmp47));
          r800_ffff_tmp48 = simd_and(r800_ffff_tmp47, bytetest_82);
          carryQ.cq[57] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp48, carryQ.get_carry_in(57), r800_ffff_tmp49));
          r800_ffff_tmp50 = simd_and(r800_ffff_tmp49, bytetest_9e_9f);
          struct_So.cc = simd_or(r800_ffff_tmp50, struct_So.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp123);
          bytetest_8e = simd_and(tmp36, tmp190);
          bytetest_90_99 = simd_andc(tmp35, tmp74);
          r800_ffff_tmp51 = simd_and(r800_ffff_tmp47, bytetest_8e);
          carryQ.cq[58] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp51, carryQ.get_carry_in(58), r800_ffff_tmp52));
          r800_ffff_tmp53 = simd_and(r800_ffff_tmp52, bytetest_90_99);
          struct_So.cc = simd_or(r800_ffff_tmp53, struct_So.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp123);
          bytetest_a5 = simd_and(tmp61, tmp46);
          bytetest_80_80 = simd_andc(tmp36, tmp6);
          r800_ffff_tmp54 = simd_and(r800_ffff_tmp47, bytetest_a5);
          carryQ.cq[59] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp54, carryQ.get_carry_in(59), r800_ffff_tmp55));
          r800_ffff_tmp56 = simd_and(r800_ffff_tmp55, bytetest_80_80);
          struct_So.cc = simd_or(r800_ffff_tmp56, struct_So.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp123);
          bytetest_a7 = simd_and(tmp61, tmp80);
          r800_ffff_tmp57 = simd_or(basis_bits.bit_2, tmp83);
          bytetest_9e_bf = simd_and(bytetest_80_bf, r800_ffff_tmp57);
          r800_ffff_tmp58 = simd_and(r800_ffff_tmp47, bytetest_a7);
          carryQ.cq[60] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp58, carryQ.get_carry_in(60), r800_ffff_tmp59));
          r800_ffff_tmp60 = simd_and(r800_ffff_tmp59, bytetest_9e_bf);
          struct_So.cc = simd_or(r800_ffff_tmp60, struct_So.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp123);
          bytetest_ad = simd_and(tmp61, tmp12);
          r800_ffff_tmp61 = simd_or(simd_and(basis_bits.bit_4, tmp199), simd_andc(tmp55, basis_bits.bit_4));
          bytetest_a1_aa = simd_and(tmp61, r800_ffff_tmp61);
          r800_ffff_tmp62 = simd_and(r800_ffff_tmp47, bytetest_ad);
          carryQ.cq[61] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp62, carryQ.get_carry_in(61), r800_ffff_tmp63));
          r800_ffff_tmp64 = simd_and(r800_ffff_tmp63, bytetest_a1_aa);
          struct_So.cc = simd_or(r800_ffff_tmp64, struct_So.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp123);
          bytetest_ad = simd_and(tmp61, tmp12);
          r800_ffff_tmp65 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp40), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
          bytetest_b4_bc = simd_and(bytetest_b0_bf, r800_ffff_tmp65);
          r800_ffff_tmp66 = simd_and(r800_ffff_tmp63, bytetest_b4_bc);
          struct_So.cc = simd_or(r800_ffff_tmp66, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_84 = simd_and(tmp36, tmp38);
          bytetest_80_81 = simd_andc(tmp36, tmp92);
          r800_ffff_tmp67 = simd_and(tmp22, bytetest_e2);
          carryQ.cq[62] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp67, carryQ.get_carry_in(62), r800_ffff_tmp68));
          r800_ffff_tmp69 = simd_and(r800_ffff_tmp68, bytetest_84);
          carryQ.cq[63] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp69, carryQ.get_carry_in(63), r800_ffff_tmp70));
          r800_ffff_tmp71 = simd_and(r800_ffff_tmp70, bytetest_80_81);
          struct_So.cc = simd_or(r800_ffff_tmp71, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_84 = simd_and(tmp36, tmp38);
          r800_ffff_tmp72 = simd_not(tmp15);
          r800_ffff_tmp73 = simd_or(simd_and(basis_bits.bit_5, r800_ffff_tmp72), simd_andc(tmp15, basis_bits.bit_5));
          bytetest_83_86 = simd_and(tmp68, r800_ffff_tmp73);
          r800_ffff_tmp74 = simd_and(r800_ffff_tmp70, bytetest_83_86);
          struct_So.cc = simd_or(r800_ffff_tmp74, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_84 = simd_and(tmp36, tmp38);
          r800_ffff_tmp75 = simd_andc(tmp90, basis_bits.bit_6);
          bytetest_88_89 = simd_and(tmp36, r800_ffff_tmp75);
          r800_ffff_tmp76 = simd_and(r800_ffff_tmp70, bytetest_88_89);
          struct_So.cc = simd_or(r800_ffff_tmp76, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_84 = simd_and(tmp36, tmp38);
          bytetest_94_94 = simd_and(tmp35, tmp38);
          r800_ffff_tmp77 = simd_and(r800_ffff_tmp70, bytetest_94_94);
          struct_So.cc = simd_or(r800_ffff_tmp77, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_84 = simd_and(tmp36, tmp38);
          r800_ffff_tmp78 = simd_and(tmp37, basis_bits.bit_6);
          bytetest_96_97 = simd_and(tmp35, r800_ffff_tmp78);
          r800_ffff_tmp79 = simd_and(r800_ffff_tmp70, bytetest_96_97);
          struct_So.cc = simd_or(r800_ffff_tmp79, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_84 = simd_and(tmp36, tmp38);
          r800_ffff_tmp80 = simd_or(basis_bits.bit_3, tmp4);
          r800_ffff_tmp81 = simd_not(r800_ffff_tmp80);
          r800_ffff_tmp82 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp81), simd_andc(tmp83, basis_bits.bit_2));
          bytetest_9e_a3 = simd_and(bytetest_80_bf, r800_ffff_tmp82);
          r800_ffff_tmp83 = simd_and(r800_ffff_tmp70, bytetest_9e_a3);
          struct_So.cc = simd_or(r800_ffff_tmp83, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_84 = simd_and(tmp36, tmp38);
          bytetest_a5_a5 = simd_and(tmp61, tmp46);
          r800_ffff_tmp84 = simd_and(r800_ffff_tmp70, bytetest_a5_a5);
          struct_So.cc = simd_or(r800_ffff_tmp84, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_84 = simd_and(tmp36, tmp38);
          bytetest_a7_a7 = simd_and(tmp61, tmp80);
          r800_ffff_tmp85 = simd_and(r800_ffff_tmp70, bytetest_a7_a7);
          struct_So.cc = simd_or(r800_ffff_tmp85, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_84 = simd_and(tmp36, tmp38);
          bytetest_a9_a9 = simd_and(tmp61, tmp91);
          r800_ffff_tmp86 = simd_and(r800_ffff_tmp70, bytetest_a9_a9);
          struct_So.cc = simd_or(r800_ffff_tmp86, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_84 = simd_and(tmp36, tmp38);
          bytetest_ae_ae = simd_and(tmp61, tmp190);
          r800_ffff_tmp87 = simd_and(r800_ffff_tmp70, bytetest_ae_ae);
          struct_So.cc = simd_or(r800_ffff_tmp87, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_84 = simd_and(tmp36, tmp38);
          r800_ffff_tmp88 = simd_and(tmp90, basis_bits.bit_6);
          bytetest_ba_bb = simd_and(bytetest_b0_bf, r800_ffff_tmp88);
          r800_ffff_tmp89 = simd_and(r800_ffff_tmp70, bytetest_ba_bb);
          struct_So.cc = simd_or(r800_ffff_tmp89, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_85 = simd_and(tmp36, tmp46);
          bytetest_8a_8a = simd_and(tmp36, tmp255);
          r800_ffff_tmp90 = simd_and(r800_ffff_tmp68, bytetest_85);
          carryQ.cq[64] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp90, carryQ.get_carry_in(64), r800_ffff_tmp91));
          r800_ffff_tmp92 = simd_and(r800_ffff_tmp91, bytetest_8a_8a);
          struct_So.cc = simd_or(r800_ffff_tmp92, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_85 = simd_and(tmp36, tmp46);
          r800_ffff_tmp93 = simd_andc(tmp10, basis_bits.bit_6);
          bytetest_8c_8d = simd_and(tmp36, r800_ffff_tmp93);
          r800_ffff_tmp94 = simd_and(r800_ffff_tmp91, bytetest_8c_8d);
          struct_So.cc = simd_or(r800_ffff_tmp94, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_85 = simd_and(tmp36, tmp46);
          bytetest_8f_8f = simd_and(tmp36, tmp111);
          r800_ffff_tmp95 = simd_and(r800_ffff_tmp91, bytetest_8f_8f);
          struct_So.cc = simd_or(r800_ffff_tmp95, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_86 = simd_and(tmp36, tmp67);
          r800_ffff_tmp96 = simd_not(tmp73);
          r800_ffff_tmp97 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp96), simd_andc(tmp47, basis_bits.bit_4));
          bytetest_95_99 = simd_and(tmp35, r800_ffff_tmp97);
          r800_ffff_tmp98 = simd_and(r800_ffff_tmp68, bytetest_86);
          carryQ.cq[65] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp98, carryQ.get_carry_in(65), r800_ffff_tmp99));
          r800_ffff_tmp100 = simd_and(r800_ffff_tmp99, bytetest_95_99);
          struct_So.cc = simd_or(r800_ffff_tmp100, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_86 = simd_and(tmp36, tmp67);
          bytetest_9c_9f = simd_and(tmp35, tmp10);
          r800_ffff_tmp101 = simd_and(r800_ffff_tmp99, bytetest_9c_9f);
          struct_So.cc = simd_or(r800_ffff_tmp101, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_86 = simd_and(tmp36, tmp67);
          r800_ffff_tmp102 = simd_andc(tmp61, tmp4);
          r800_ffff_tmp103 = simd_not(basis_bits.bit_7);
          r800_ffff_tmp104 = simd_or(simd_and(basis_bits.bit_6, r800_ffff_tmp103), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
          bytetest_a1_a2 = simd_and(r800_ffff_tmp102, r800_ffff_tmp104);
          r800_ffff_tmp105 = simd_and(r800_ffff_tmp99, bytetest_a1_a2);
          struct_So.cc = simd_or(r800_ffff_tmp105, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_86 = simd_and(tmp36, tmp67);
          r800_ffff_tmp106 = simd_andc(tmp37, basis_bits.bit_6);
          bytetest_a4_a5 = simd_and(tmp61, r800_ffff_tmp106);
          r800_ffff_tmp107 = simd_and(r800_ffff_tmp99, bytetest_a4_a5);
          struct_So.cc = simd_or(r800_ffff_tmp107, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_86 = simd_and(tmp36, tmp67);
          r800_ffff_tmp108 = simd_not(tmp17);
          r800_ffff_tmp109 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp108), simd_andc(tmp39, basis_bits.bit_4));
          bytetest_a7_ad = simd_and(tmp61, r800_ffff_tmp109);
          r800_ffff_tmp110 = simd_and(r800_ffff_tmp99, bytetest_a7_ad);
          struct_So.cc = simd_or(r800_ffff_tmp110, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_87 = simd_and(tmp36, tmp80);
          r800_ffff_tmp111 = simd_and(basis_bits.bit_4, tmp17);
          bytetest_80_8d = simd_andc(tmp36, r800_ffff_tmp111);
          r800_ffff_tmp112 = simd_and(r800_ffff_tmp68, bytetest_87);
          carryQ.cq[66] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp112, carryQ.get_carry_in(66), r800_ffff_tmp113));
          r800_ffff_tmp114 = simd_and(r800_ffff_tmp113, bytetest_80_8d);
          bytetest_86 = simd_and(tmp36, tmp67);
          bytetest_af_bf = simd_and(bytetest_a0_bf, tmp140);
          r800_ffff_tmp115 = simd_and(r800_ffff_tmp99, bytetest_af_bf);
          r800_ffff_tmp116 = simd_or(r800_ffff_tmp115, r800_ffff_tmp114);
          struct_So.cc = simd_or(r800_ffff_tmp116, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_87 = simd_and(tmp36, tmp80);
          bytetest_90_91 = simd_andc(tmp35, tmp92);
          r800_ffff_tmp117 = simd_and(r800_ffff_tmp113, bytetest_90_91);
          struct_So.cc = simd_or(r800_ffff_tmp117, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_87 = simd_and(tmp36, tmp80);
          bytetest_93_93 = simd_and(tmp35, tmp16);
          r800_ffff_tmp118 = simd_and(r800_ffff_tmp113, bytetest_93_93);
          struct_So.cc = simd_or(r800_ffff_tmp118, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_87 = simd_and(tmp36, tmp80);
          r800_ffff_tmp119 = simd_not(tmp119);
          r800_ffff_tmp120 = simd_and(basis_bits.bit_3, tmp48);
          r800_ffff_tmp121 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp119), simd_andc(r800_ffff_tmp120, basis_bits.bit_2));
          bytetest_95_b3 = simd_and(bytetest_80_bf, r800_ffff_tmp121);
          r800_ffff_tmp122 = simd_and(r800_ffff_tmp113, bytetest_95_b3);
          struct_So.cc = simd_or(r800_ffff_tmp122, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_8c = simd_and(tmp36, tmp106);
          bytetest_80_87 = simd_andc(tmp36, basis_bits.bit_4);
          r800_ffff_tmp123 = simd_and(r800_ffff_tmp68, bytetest_8c);
          carryQ.cq[67] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp123, carryQ.get_carry_in(67), r800_ffff_tmp124));
          r800_ffff_tmp125 = simd_and(r800_ffff_tmp124, bytetest_80_87);
          struct_So.cc = simd_or(r800_ffff_tmp125, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_8c = simd_and(tmp36, tmp106);
          bytetest_8c_9f = simd_and(tmp81, tmp77);
          r800_ffff_tmp126 = simd_and(r800_ffff_tmp124, bytetest_8c_9f);
          struct_So.cc = simd_or(r800_ffff_tmp126, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_8c = simd_and(tmp36, tmp106);
          r800_ffff_tmp127 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp10), simd_andc(tmp73, basis_bits.bit_4));
          bytetest_a2_a8 = simd_and(tmp61, r800_ffff_tmp127);
          r800_ffff_tmp128 = simd_and(r800_ffff_tmp124, bytetest_a2_a8);
          struct_So.cc = simd_or(r800_ffff_tmp128, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_8d = simd_and(tmp36, tmp12);
          r800_ffff_tmp129 = simd_and(basis_bits.bit_3, tmp10);
          r800_ffff_tmp130 = simd_and(basis_bits.bit_2, r800_ffff_tmp129);
          bytetest_80_bb = simd_andc(bytetest_80_bf, r800_ffff_tmp130);
          r800_ffff_tmp131 = simd_and(r800_ffff_tmp68, bytetest_8d);
          carryQ.cq[68] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp131, carryQ.get_carry_in(68), r800_ffff_tmp132));
          r800_ffff_tmp133 = simd_and(r800_ffff_tmp132, bytetest_80_bb);
          bytetest_8c = simd_and(tmp36, tmp106);
          r800_ffff_tmp134 = simd_or(basis_bits.bit_3, tmp152);
          bytetest_ab_bf = simd_and(bytetest_a0_bf, r800_ffff_tmp134);
          r800_ffff_tmp135 = simd_and(r800_ffff_tmp124, bytetest_ab_bf);
          r800_ffff_tmp136 = simd_or(r800_ffff_tmp135, r800_ffff_tmp133);
          struct_So.cc = simd_or(r800_ffff_tmp136, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_8e = simd_and(tmp36, tmp190);
          bytetest_80_9a = simd_andc(tmp81, tmp153);
          r800_ffff_tmp137 = simd_and(r800_ffff_tmp68, bytetest_8e);
          carryQ.cq[69] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp137, carryQ.get_carry_in(69), r800_ffff_tmp138));
          r800_ffff_tmp139 = simd_and(r800_ffff_tmp138, bytetest_80_9a);
          bytetest_8d = simd_and(tmp36, tmp12);
          r800_ffff_tmp140 = simd_and(bytetest_b0_bf, tmp10);
          bytetest_bd_bf = simd_and(r800_ffff_tmp140, tmp5);
          r800_ffff_tmp141 = simd_and(r800_ffff_tmp132, bytetest_bd_bf);
          r800_ffff_tmp142 = simd_or(r800_ffff_tmp141, r800_ffff_tmp139);
          struct_So.cc = simd_or(r800_ffff_tmp142, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_8f = simd_and(tmp36, tmp111);
          bytetest_80_9b = simd_andc(tmp81, r800_ffff_tmp129);
          r800_ffff_tmp143 = simd_and(r800_ffff_tmp68, bytetest_8f);
          carryQ.cq[70] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp143, carryQ.get_carry_in(70), r800_ffff_tmp144));
          r800_ffff_tmp145 = simd_and(r800_ffff_tmp144, bytetest_80_9b);
          bytetest_8e = simd_and(tmp36, tmp190);
          bytetest_b4_bf = simd_and(bytetest_b0_bf, tmp4);
          r800_ffff_tmp146 = simd_and(r800_ffff_tmp138, bytetest_b4_bf);
          r800_ffff_tmp147 = simd_or(r800_ffff_tmp146, r800_ffff_tmp145);
          struct_So.cc = simd_or(r800_ffff_tmp147, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_8f = simd_and(tmp36, tmp111);
          r800_ffff_tmp148 = simd_not(tmp4);
          r800_ffff_tmp149 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp148), simd_andc(tmp92, basis_bits.bit_3));
          bytetest_a2_b3 = simd_and(bytetest_a0_bf, r800_ffff_tmp149);
          r800_ffff_tmp150 = simd_and(r800_ffff_tmp144, bytetest_a2_b3);
          struct_So.cc = simd_or(r800_ffff_tmp150, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_90 = simd_andc(tmp35, tmp6);
          bytetest_80_a6 = simd_andc(bytetest_80_bf, tmp42);
          r800_ffff_tmp151 = simd_and(r800_ffff_tmp68, bytetest_90);
          carryQ.cq[71] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp151, carryQ.get_carry_in(71), r800_ffff_tmp152));
          r800_ffff_tmp153 = simd_and(r800_ffff_tmp152, bytetest_80_a6);
          struct_So.cc = simd_or(r800_ffff_tmp153, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_91 = simd_and(tmp35, tmp123);
          bytetest_80_8a = simd_andc(tmp36, tmp152);
          r800_ffff_tmp154 = simd_and(r800_ffff_tmp68, bytetest_91);
          carryQ.cq[72] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp154, carryQ.get_carry_in(72), r800_ffff_tmp155));
          r800_ffff_tmp156 = simd_and(r800_ffff_tmp155, bytetest_80_8a);
          struct_So.cc = simd_or(r800_ffff_tmp156, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_93 = simd_and(tmp35, tmp16);
          r800_ffff_tmp157 = simd_and(basis_bits.bit_2, tmp75);
          bytetest_80_a9 = simd_andc(bytetest_80_bf, r800_ffff_tmp157);
          r800_ffff_tmp158 = simd_and(r800_ffff_tmp68, bytetest_93);
          carryQ.cq[73] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp158, carryQ.get_carry_in(73), r800_ffff_tmp159));
          r800_ffff_tmp160 = simd_and(r800_ffff_tmp159, bytetest_80_a9);
          bytetest_92 = simd_and(tmp35, tmp118);
          r800_ffff_tmp161 = simd_or(basis_bits.bit_2, r800_ffff_tmp129);
          bytetest_9c_bf = simd_and(bytetest_80_bf, r800_ffff_tmp161);
          r800_ffff_tmp162 = simd_and(r800_ffff_tmp68, bytetest_92);
          carryQ.cq[74] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp162, carryQ.get_carry_in(74), r800_ffff_tmp163));
          r800_ffff_tmp164 = simd_and(r800_ffff_tmp163, bytetest_9c_bf);
          r800_ffff_tmp165 = simd_or(r800_ffff_tmp164, r800_ffff_tmp160);
          struct_So.cc = simd_or(r800_ffff_tmp165, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_96 = simd_and(tmp35, tmp67);
          r800_ffff_tmp166 = simd_and(basis_bits.bit_2, tmp102);
          bytetest_80_b6 = simd_andc(bytetest_80_bf, r800_ffff_tmp166);
          r800_ffff_tmp167 = simd_and(r800_ffff_tmp68, bytetest_96);
          carryQ.cq[75] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp167, carryQ.get_carry_in(75), r800_ffff_tmp168));
          r800_ffff_tmp169 = simd_and(r800_ffff_tmp168, bytetest_80_b6);
          bytetest_94_95 = simd_and(tmp35, r800_ffff_tmp106);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp170 = simd_and(r800_ffff_tmp68, bytetest_94_95);
          carryQ.cq[76] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp170, carryQ.get_carry_in(76), r800_ffff_tmp171));
          r800_ffff_tmp172 = simd_and(r800_ffff_tmp171, bytetest_80_bf);
          r800_ffff_tmp173 = simd_or(r800_ffff_tmp172, r800_ffff_tmp169);
          struct_So.cc = simd_or(r800_ffff_tmp173, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_97 = simd_and(tmp35, tmp80);
          bytetest_80_80 = simd_andc(tmp36, tmp6);
          r800_ffff_tmp174 = simd_and(r800_ffff_tmp68, bytetest_97);
          carryQ.cq[77] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp174, carryQ.get_carry_in(77), r800_ffff_tmp175));
          r800_ffff_tmp176 = simd_and(r800_ffff_tmp175, bytetest_80_80);
          bytetest_96 = simd_and(tmp35, tmp67);
          bytetest_b8_bf = simd_and(bytetest_b0_bf, basis_bits.bit_4);
          r800_ffff_tmp177 = simd_and(r800_ffff_tmp168, bytetest_b8_bf);
          r800_ffff_tmp178 = simd_or(r800_ffff_tmp177, r800_ffff_tmp176);
          struct_So.cc = simd_or(r800_ffff_tmp178, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_97 = simd_and(tmp35, tmp80);
          r800_ffff_tmp179 = simd_not(tmp212);
          r800_ffff_tmp180 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp179), simd_andc(tmp220, basis_bits.bit_2));
          bytetest_82_b7 = simd_and(bytetest_80_bf, r800_ffff_tmp180);
          r800_ffff_tmp181 = simd_and(r800_ffff_tmp175, bytetest_82_b7);
          struct_So.cc = simd_or(r800_ffff_tmp181, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_99 = simd_and(tmp35, tmp91);
          r800_ffff_tmp182 = simd_and(basis_bits.bit_2, tmp140);
          bytetest_80_ae = simd_andc(bytetest_80_bf, r800_ffff_tmp182);
          r800_ffff_tmp183 = simd_and(r800_ffff_tmp68, bytetest_99);
          carryQ.cq[78] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp183, carryQ.get_carry_in(78), r800_ffff_tmp184));
          r800_ffff_tmp185 = simd_and(r800_ffff_tmp184, bytetest_80_ae);
          bytetest_98 = simd_and(tmp35, tmp96);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp186 = simd_and(r800_ffff_tmp68, bytetest_98);
          carryQ.cq[79] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp186, carryQ.get_carry_in(79), r800_ffff_tmp187));
          r800_ffff_tmp188 = simd_and(r800_ffff_tmp187, bytetest_80_bf);
          r800_ffff_tmp189 = simd_or(r800_ffff_tmp188, r800_ffff_tmp185);
          struct_So.cc = simd_or(r800_ffff_tmp189, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_9a_9b = simd_and(tmp35, r800_ffff_tmp88);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp190 = simd_and(r800_ffff_tmp68, bytetest_9a_9b);
          carryQ.cq[80] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp190, carryQ.get_carry_in(80), r800_ffff_tmp191));
          r800_ffff_tmp192 = simd_and(r800_ffff_tmp191, bytetest_80_bf);
          bytetest_99 = simd_and(tmp35, tmp91);
          bytetest_b0_bf = simd_and(bytetest_80_bf, tmp2);
          r800_ffff_tmp193 = simd_and(r800_ffff_tmp184, bytetest_b0_bf);
          r800_ffff_tmp194 = simd_or(r800_ffff_tmp193, r800_ffff_tmp192);
          struct_So.cc = simd_or(r800_ffff_tmp194, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_9d = simd_and(tmp35, tmp12);
          r800_ffff_tmp195 = simd_and(basis_bits.bit_2, tmp235);
          bytetest_80_a7 = simd_andc(bytetest_80_bf, r800_ffff_tmp195);
          r800_ffff_tmp196 = simd_and(r800_ffff_tmp68, bytetest_9d);
          carryQ.cq[81] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp196, carryQ.get_carry_in(81), r800_ffff_tmp197));
          r800_ffff_tmp198 = simd_and(r800_ffff_tmp197, bytetest_80_a7);
          bytetest_9c = simd_and(tmp35, tmp106);
          r800_ffff_tmp199 = simd_or(basis_bits.bit_2, tmp175);
          bytetest_81_bf = simd_and(bytetest_80_bf, r800_ffff_tmp199);
          r800_ffff_tmp200 = simd_and(r800_ffff_tmp68, bytetest_9c);
          carryQ.cq[82] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp200, carryQ.get_carry_in(82), r800_ffff_tmp201));
          r800_ffff_tmp202 = simd_and(r800_ffff_tmp201, bytetest_81_bf);
          r800_ffff_tmp203 = simd_or(r800_ffff_tmp202, r800_ffff_tmp198);
          struct_So.cc = simd_or(r800_ffff_tmp203, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_9e = simd_and(tmp35, tmp190);
          r800_ffff_tmp204 = simd_or(basis_bits.bit_2, tmp119);
          bytetest_94_bf = simd_and(bytetest_80_bf, r800_ffff_tmp204);
          r800_ffff_tmp205 = simd_and(r800_ffff_tmp68, bytetest_9e);
          carryQ.cq[83] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp205, carryQ.get_carry_in(83), r800_ffff_tmp206));
          r800_ffff_tmp207 = simd_and(r800_ffff_tmp206, bytetest_94_bf);
          struct_So.cc = simd_or(r800_ffff_tmp207, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_a0_a3 = simd_andc(tmp61, tmp4);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp208 = simd_and(r800_ffff_tmp68, bytetest_a0_a3);
          carryQ.cq[84] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp208, carryQ.get_carry_in(84), r800_ffff_tmp209));
          r800_ffff_tmp210 = simd_and(r800_ffff_tmp209, bytetest_80_bf);
          struct_So.cc = simd_or(r800_ffff_tmp210, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_ac = simd_and(tmp61, tmp106);
          bytetest_80_af = simd_andc(bytetest_80_bf, tmp2);
          r800_ffff_tmp211 = simd_and(r800_ffff_tmp68, bytetest_ac);
          carryQ.cq[85] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp211, carryQ.get_carry_in(85), r800_ffff_tmp212));
          r800_ffff_tmp213 = simd_and(r800_ffff_tmp212, bytetest_80_af);
          struct_So.cc = simd_or(r800_ffff_tmp213, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_ad = simd_and(tmp61, tmp12);
          r800_ffff_tmp214 = simd_and(tmp36, tmp37);
          bytetest_85_86 = simd_and(r800_ffff_tmp214, r800_ffff_tmp104);
          r800_ffff_tmp215 = simd_and(r800_ffff_tmp68, bytetest_ad);
          carryQ.cq[86] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp215, carryQ.get_carry_in(86), r800_ffff_tmp216));
          r800_ffff_tmp217 = simd_and(r800_ffff_tmp216, bytetest_85_86);
          struct_So.cc = simd_or(r800_ffff_tmp217, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_ad = simd_and(tmp61, tmp12);
          bytetest_90_99 = simd_andc(tmp35, tmp74);
          r800_ffff_tmp218 = simd_and(r800_ffff_tmp216, bytetest_90_99);
          struct_So.cc = simd_or(r800_ffff_tmp218, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp16);
          r800_ffff_tmp219 = simd_or(simd_and(basis_bits.bit_4, tmp199), simd_andc(tmp47, basis_bits.bit_4));
          bytetest_a5_aa = simd_and(tmp61, r800_ffff_tmp219);
          r800_ffff_tmp220 = simd_and(r800_ffff_tmp68, bytetest_b3);
          carryQ.cq[87] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp220, carryQ.get_carry_in(87), r800_ffff_tmp221));
          r800_ffff_tmp222 = simd_and(r800_ffff_tmp221, bytetest_a5_aa);
          struct_So.cc = simd_or(r800_ffff_tmp222, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp255);
          r800_ffff_tmp223 = simd_and(basis_bits.bit_3, tmp74);
          bytetest_80_99 = simd_andc(tmp81, r800_ffff_tmp223);
          r800_ffff_tmp224 = simd_and(r800_ffff_tmp68, bytetest_ba);
          carryQ.cq[88] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp224, carryQ.get_carry_in(88), r800_ffff_tmp225));
          r800_ffff_tmp226 = simd_and(r800_ffff_tmp225, bytetest_80_99);
          struct_So.cc = simd_or(r800_ffff_tmp226, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp251);
          bytetest_80_b3 = simd_andc(bytetest_80_bf, tmp260);
          r800_ffff_tmp227 = simd_and(r800_ffff_tmp68, bytetest_bb);
          carryQ.cq[89] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp227, carryQ.get_carry_in(89), r800_ffff_tmp228));
          r800_ffff_tmp229 = simd_and(r800_ffff_tmp228, bytetest_80_b3);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp255);
          r800_ffff_tmp230 = simd_or(basis_bits.bit_2, tmp153);
          bytetest_9b_bf = simd_and(bytetest_80_bf, r800_ffff_tmp230);
          r800_ffff_tmp231 = simd_and(r800_ffff_tmp225, bytetest_9b_bf);
          r800_ffff_tmp232 = simd_or(r800_ffff_tmp231, r800_ffff_tmp229);
          struct_So.cc = simd_or(r800_ffff_tmp232, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp111);
          bytetest_80_95 = simd_andc(tmp81, tmp19);
          r800_ffff_tmp233 = simd_and(r800_ffff_tmp68, bytetest_bf);
          carryQ.cq[90] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp233, carryQ.get_carry_in(90), r800_ffff_tmp234));
          r800_ffff_tmp235 = simd_and(r800_ffff_tmp234, bytetest_80_95);
          bytetest_bc_be = simd_andc(r800_ffff_tmp140, tmp15);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp236 = simd_and(r800_ffff_tmp68, bytetest_bc_be);
          carryQ.cq[91] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp236, carryQ.get_carry_in(91), r800_ffff_tmp237));
          r800_ffff_tmp238 = simd_and(r800_ffff_tmp237, bytetest_80_bf);
          r800_ffff_tmp239 = simd_or(r800_ffff_tmp238, r800_ffff_tmp235);
          struct_So.cc = simd_or(r800_ffff_tmp239, struct_So.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp118);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp111);
          bytetest_b0_bb = simd_andc(bytetest_b0_bf, tmp10);
          r800_ffff_tmp240 = simd_and(r800_ffff_tmp234, bytetest_b0_bb);
          struct_So.cc = simd_or(r800_ffff_tmp240, struct_So.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp16);
          bytetest_80 = simd_andc(tmp36, tmp6);
          bytetest_84_84 = simd_and(tmp36, tmp38);
          r800_ffff_tmp241 = simd_and(tmp22, bytetest_e3);
          carryQ.cq[92] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp241, carryQ.get_carry_in(92), r800_ffff_tmp242));
          r800_ffff_tmp243 = simd_and(r800_ffff_tmp242, bytetest_80);
          carryQ.cq[93] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp243, carryQ.get_carry_in(93), r800_ffff_tmp244));
          r800_ffff_tmp245 = simd_and(r800_ffff_tmp244, bytetest_84_84);
          struct_So.cc = simd_or(r800_ffff_tmp245, struct_So.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp16);
          bytetest_80 = simd_andc(tmp36, tmp6);
          r800_ffff_tmp246 = simd_andc(basis_bits.bit_6, tmp4);
          bytetest_92_93 = simd_and(tmp35, r800_ffff_tmp246);
          r800_ffff_tmp247 = simd_and(r800_ffff_tmp244, bytetest_92_93);
          struct_So.cc = simd_or(r800_ffff_tmp247, struct_So.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp16);
          bytetest_80 = simd_andc(tmp36, tmp6);
          bytetest_a0_a0 = simd_andc(tmp61, tmp6);
          r800_ffff_tmp248 = simd_and(r800_ffff_tmp244, bytetest_a0_a0);
          struct_So.cc = simd_or(r800_ffff_tmp248, struct_So.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp16);
          bytetest_80 = simd_andc(tmp36, tmp6);
          bytetest_b6_b7 = simd_and(bytetest_b0_bf, r800_ffff_tmp78);
          r800_ffff_tmp249 = simd_and(r800_ffff_tmp244, bytetest_b6_b7);
          struct_So.cc = simd_or(r800_ffff_tmp249, struct_So.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp16);
          bytetest_80 = simd_andc(tmp36, tmp6);
          bytetest_be_bf = simd_and(bytetest_b0_bf, tmp82);
          r800_ffff_tmp250 = simd_and(r800_ffff_tmp244, bytetest_be_bf);
          struct_So.cc = simd_or(r800_ffff_tmp250, struct_So.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp16);
          bytetest_86 = simd_and(tmp36, tmp67);
          bytetest_90_91 = simd_andc(tmp35, tmp92);
          r800_ffff_tmp251 = simd_and(r800_ffff_tmp242, bytetest_86);
          carryQ.cq[94] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp251, carryQ.get_carry_in(94), r800_ffff_tmp252));
          r800_ffff_tmp253 = simd_and(r800_ffff_tmp252, bytetest_90_91);
          struct_So.cc = simd_or(r800_ffff_tmp253, struct_So.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp16);
          bytetest_86 = simd_and(tmp36, tmp67);
          bytetest_96_9f = simd_and(tmp35, tmp18);
          r800_ffff_tmp254 = simd_and(r800_ffff_tmp252, bytetest_96_9f);
          struct_So.cc = simd_or(r800_ffff_tmp254, struct_So.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp16);
          bytetest_87 = simd_and(tmp36, tmp80);
          r800_ffff_tmp255 = simd_and(basis_bits.bit_2, r800_ffff_tmp80);
          bytetest_80_a3 = simd_andc(bytetest_80_bf, r800_ffff_tmp255);
          r800_ffff_tmp256 = simd_and(r800_ffff_tmp242, bytetest_87);
          carryQ.cq[95] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp256, carryQ.get_carry_in(95), r800_ffff_tmp257));
          r800_ffff_tmp258 = simd_and(r800_ffff_tmp257, bytetest_80_a3);
          struct_So.cc = simd_or(r800_ffff_tmp258, struct_So.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp16);
          bytetest_88 = simd_and(tmp36, tmp96);
          bytetest_80_9e = simd_andc(tmp81, tmp204);
          r800_ffff_tmp259 = simd_and(r800_ffff_tmp242, bytetest_88);
          carryQ.cq[96] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp259, carryQ.get_carry_in(96), r800_ffff_tmp260));
          r800_ffff_tmp261 = simd_and(r800_ffff_tmp260, bytetest_80_9e);
          struct_So.cc = simd_or(r800_ffff_tmp261, struct_So.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp16);
          bytetest_89 = simd_and(tmp36, tmp91);
          bytetest_80_87 = simd_andc(tmp36, basis_bits.bit_4);
          r800_ffff_tmp262 = simd_and(r800_ffff_tmp242, bytetest_89);
          carryQ.cq[97] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp262, carryQ.get_carry_in(97), r800_ffff_tmp263));
          r800_ffff_tmp264 = simd_and(r800_ffff_tmp263, bytetest_80_87);
          bytetest_88 = simd_and(tmp36, tmp96);
          bytetest_aa_bf = simd_and(bytetest_a0_bf, tmp75);
          r800_ffff_tmp265 = simd_and(r800_ffff_tmp260, bytetest_aa_bf);
          r800_ffff_tmp266 = simd_or(r800_ffff_tmp265, r800_ffff_tmp264);
          struct_So.cc = simd_or(r800_ffff_tmp266, struct_So.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp16);
          bytetest_89 = simd_and(tmp36, tmp91);
          bytetest_90_90 = simd_andc(tmp35, tmp6);
          r800_ffff_tmp267 = simd_and(r800_ffff_tmp263, bytetest_90_90);
          struct_So.cc = simd_or(r800_ffff_tmp267, struct_So.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp16);
          bytetest_89 = simd_and(tmp36, tmp91);
          bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
          r800_ffff_tmp268 = simd_and(r800_ffff_tmp263, bytetest_a0_bf);
          struct_So.cc = simd_or(r800_ffff_tmp268, struct_So.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp16);
          bytetest_8a = simd_and(tmp36, tmp255);
          r800_ffff_tmp269 = simd_not(tmp202);
          r800_ffff_tmp270 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp269), simd_andc(tmp75, basis_bits.bit_2));
          bytetest_8a_b0 = simd_and(bytetest_80_bf, r800_ffff_tmp270);
          r800_ffff_tmp271 = simd_and(r800_ffff_tmp242, bytetest_8a);
          carryQ.cq[98] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp271, carryQ.get_carry_in(98), r800_ffff_tmp272));
          r800_ffff_tmp273 = simd_and(r800_ffff_tmp272, bytetest_8a_b0);
          struct_So.cc = simd_or(r800_ffff_tmp273, struct_So.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp16);
          bytetest_8b = simd_and(tmp36, tmp251);
          bytetest_80_be = simd_andc(bytetest_80_bf, tmp205);
          r800_ffff_tmp274 = simd_and(r800_ffff_tmp242, bytetest_8b);
          carryQ.cq[99] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp274, carryQ.get_carry_in(99), r800_ffff_tmp275));
          r800_ffff_tmp276 = simd_and(r800_ffff_tmp275, bytetest_80_be);
          struct_So.cc = simd_or(r800_ffff_tmp276, struct_So.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp16);
          bytetest_8c_8f = simd_and(tmp36, tmp10);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp277 = simd_and(r800_ffff_tmp242, bytetest_8c_8f);
          carryQ.cq[100] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp277, carryQ.get_carry_in(100), r800_ffff_tmp278));
          r800_ffff_tmp279 = simd_and(r800_ffff_tmp278, bytetest_80_bf);
          struct_So.cc = simd_or(r800_ffff_tmp279, struct_So.cc);
          bytetest_e4 = simd_and(r800_ffff_tmp1, tmp38);
          bytetest_b7 = simd_and(bytetest_b0_bf, tmp80);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp280 = simd_and(tmp22, bytetest_e4);
          carryQ.cq[101] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp280, carryQ.get_carry_in(101), r800_ffff_tmp281));
          r800_ffff_tmp282 = simd_and(r800_ffff_tmp281, bytetest_b7);
          carryQ.cq[102] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp282, carryQ.get_carry_in(102), r800_ffff_tmp283));
          r800_ffff_tmp284 = simd_and(r800_ffff_tmp283, bytetest_80_bf);
          struct_So.cc = simd_or(r800_ffff_tmp284, struct_So.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp255);
          bytetest_93 = simd_and(tmp35, tmp16);
          bytetest_80_86 = simd_andc(bytetest_80_87, tmp39);
          r800_ffff_tmp285 = simd_and(tmp22, bytetest_ea);
          carryQ.cq[103] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp285, carryQ.get_carry_in(103), r800_ffff_tmp286));
          r800_ffff_tmp287 = simd_and(r800_ffff_tmp286, bytetest_93);
          carryQ.cq[104] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp287, carryQ.get_carry_in(104), r800_ffff_tmp288));
          r800_ffff_tmp289 = simd_and(r800_ffff_tmp288, bytetest_80_86);
          bytetest_92 = simd_and(tmp35, tmp118);
          bytetest_90_bf = simd_and(bytetest_80_bf, tmp13);
          r800_ffff_tmp290 = simd_and(r800_ffff_tmp286, bytetest_92);
          carryQ.cq[105] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp290, carryQ.get_carry_in(105), r800_ffff_tmp291));
          r800_ffff_tmp292 = simd_and(r800_ffff_tmp291, bytetest_90_bf);
          r800_ffff_tmp293 = simd_or(r800_ffff_tmp292, r800_ffff_tmp289);
          struct_So.cc = simd_or(r800_ffff_tmp293, struct_So.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp255);
          bytetest_a0 = simd_andc(tmp61, tmp6);
          bytetest_a8_ab = simd_and(tmp61, tmp90);
          r800_ffff_tmp294 = simd_and(r800_ffff_tmp286, bytetest_a0);
          carryQ.cq[106] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp294, carryQ.get_carry_in(106), r800_ffff_tmp295));
          r800_ffff_tmp296 = simd_and(r800_ffff_tmp295, bytetest_a8_ab);
          struct_So.cc = simd_or(r800_ffff_tmp296, struct_So.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp255);
          bytetest_a0 = simd_andc(tmp61, tmp6);
          bytetest_b6_b7 = simd_and(bytetest_b0_bf, r800_ffff_tmp78);
          r800_ffff_tmp297 = simd_and(r800_ffff_tmp295, bytetest_b6_b7);
          struct_So.cc = simd_or(r800_ffff_tmp297, struct_So.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp255);
          bytetest_a0 = simd_andc(tmp61, tmp6);
          bytetest_b9_b9 = simd_and(bytetest_b0_bf, tmp91);
          r800_ffff_tmp298 = simd_and(r800_ffff_tmp295, bytetest_b9_b9);
          struct_So.cc = simd_or(r800_ffff_tmp298, struct_So.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp255);
          bytetest_a9 = simd_and(tmp61, tmp91);
          r800_ffff_tmp299 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp96), simd_andc(tmp39, basis_bits.bit_4));
          bytetest_b7_b9 = simd_and(bytetest_b0_bf, r800_ffff_tmp299);
          r800_ffff_tmp300 = simd_and(r800_ffff_tmp286, bytetest_a9);
          carryQ.cq[107] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp300, carryQ.get_carry_in(107), r800_ffff_tmp301));
          r800_ffff_tmp302 = simd_and(r800_ffff_tmp301, bytetest_b7_b9);
          struct_So.cc = simd_or(r800_ffff_tmp302, struct_So.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp111);
          bytetest_b7 = simd_and(bytetest_b0_bf, tmp80);
          bytetest_bd_bd = simd_and(bytetest_b0_bf, tmp12);
          r800_ffff_tmp303 = simd_and(tmp22, bytetest_ef);
          carryQ.cq[108] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp303, carryQ.get_carry_in(108), r800_ffff_tmp304));
          r800_ffff_tmp305 = simd_and(r800_ffff_tmp304, bytetest_b7);
          carryQ.cq[109] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp305, carryQ.get_carry_in(109), r800_ffff_tmp306));
          r800_ffff_tmp307 = simd_and(r800_ffff_tmp306, bytetest_bd_bd);
          struct_So.cc = simd_or(r800_ffff_tmp307, struct_So.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp111);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp111);
          bytetest_a4_a4 = simd_and(tmp61, tmp38);
          r800_ffff_tmp308 = simd_and(r800_ffff_tmp304, bytetest_bf);
          carryQ.cq[110] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp308, carryQ.get_carry_in(110), r800_ffff_tmp309));
          r800_ffff_tmp310 = simd_and(r800_ffff_tmp309, bytetest_a4_a4);
          struct_So.cc = simd_or(r800_ffff_tmp310, struct_So.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp111);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp111);
          bytetest_a8_a8 = simd_and(tmp61, tmp96);
          r800_ffff_tmp311 = simd_and(r800_ffff_tmp309, bytetest_a8_a8);
          struct_So.cc = simd_or(r800_ffff_tmp311, struct_So.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp111);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp111);
          r800_ffff_tmp312 = simd_and(tmp61, tmp10);
          bytetest_ad_ae = simd_and(r800_ffff_tmp312, r800_ffff_tmp104);
          r800_ffff_tmp313 = simd_and(r800_ffff_tmp309, bytetest_ad_ae);
          struct_So.cc = simd_or(r800_ffff_tmp313, struct_So.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp111);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp111);
          bytetest_bc_bd = simd_and(bytetest_b0_bf, r800_ffff_tmp93);
          r800_ffff_tmp314 = simd_and(r800_ffff_tmp309, bytetest_bc_bd);
          struct_So.cc = simd_or(r800_ffff_tmp314, struct_So.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(47, 64);
        }
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_90 = simd_andc(tmp35, tmp6);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp274 = simd_and(tmp24, bytetest_90);
        carryQ.cq[111] = carryout2carry(pablo_blk_Advance(tmp274, carryQ.get_carry_in(111), tmp275));
        tmp276 = simd_and(tmp275, bytetest_80_bf);
        if ((bitblock::any(tmp276) || carryQ.CarryTest(112, 5))) {
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp35, tmp6);
          bytetest_84 = simd_and(tmp36, tmp38);
          bytetest_b7_bf = simd_and(bytetest_b0_bf, tmp40);
          r10000_10fff_tmp1 = simd_and(tmp24, bytetest_90);
          carryQ.cq[112] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp1, carryQ.get_carry_in(112), r10000_10fff_tmp2));
          r10000_10fff_tmp3 = simd_and(r10000_10fff_tmp2, bytetest_84);
          carryQ.cq[113] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp3, carryQ.get_carry_in(113), r10000_10fff_tmp4));
          r10000_10fff_tmp5 = simd_and(r10000_10fff_tmp4, bytetest_b7_bf);
          struct_So.cc = simd_or(r10000_10fff_tmp5, struct_So.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp35, tmp6);
          bytetest_86 = simd_and(tmp36, tmp67);
          bytetest_80_89 = simd_andc(tmp36, tmp74);
          r10000_10fff_tmp6 = simd_and(r10000_10fff_tmp2, bytetest_86);
          carryQ.cq[114] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp6, carryQ.get_carry_in(114), r10000_10fff_tmp7));
          r10000_10fff_tmp8 = simd_and(r10000_10fff_tmp7, bytetest_80_89);
          bytetest_85 = simd_and(tmp36, tmp46);
          bytetest_b9_bf = simd_and(tmp225, tmp55);
          r10000_10fff_tmp9 = simd_and(r10000_10fff_tmp2, bytetest_85);
          carryQ.cq[115] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp9, carryQ.get_carry_in(115), r10000_10fff_tmp10));
          r10000_10fff_tmp11 = simd_and(r10000_10fff_tmp10, bytetest_b9_bf);
          r10000_10fff_tmp12 = simd_or(r10000_10fff_tmp11, r10000_10fff_tmp8);
          struct_So.cc = simd_or(r10000_10fff_tmp12, struct_So.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp35, tmp6);
          bytetest_86 = simd_and(tmp36, tmp67);
          bytetest_90_9b = simd_andc(tmp35, tmp10);
          r10000_10fff_tmp13 = simd_and(r10000_10fff_tmp7, bytetest_90_9b);
          struct_So.cc = simd_or(r10000_10fff_tmp13, struct_So.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp35, tmp6);
          bytetest_87 = simd_and(tmp36, tmp80);
          r10000_10fff_tmp14 = simd_not(tmp183);
          r10000_10fff_tmp15 = simd_or(simd_and(basis_bits.bit_2, r10000_10fff_tmp14), simd_andc(basis_bits.bit_3, basis_bits.bit_2));
          bytetest_90_bc = simd_and(bytetest_80_bf, r10000_10fff_tmp15);
          r10000_10fff_tmp16 = simd_and(r10000_10fff_tmp2, bytetest_87);
          carryQ.cq[116] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp16, carryQ.get_carry_in(116), r10000_10fff_tmp17));
          r10000_10fff_tmp18 = simd_and(r10000_10fff_tmp17, bytetest_90_bc);
          struct_So.cc = simd_or(r10000_10fff_tmp18, struct_So.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(112, 5);
        }
  }
  CarryArray<117, 0> carryQ;
  };

  struct Sm {
  Sm() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Sm & struct_Sm) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_2b_2b, tmp7, tmp8, tmp9;
		BitBlock tmp10, bytetest_3c_3e, tmp11, tmp12, tmp13, tmp14, bytetest_7c_7c;
		BitBlock tmp15, tmp16, bytetest_7e_7e, tmp17, tmp18, tmp19, tmp20, bytetest_f0;
		BitBlock tmp21, tmp22, tmp23, tmp24, tmp25, bytetest_9d, bytetest_9b, tmp26;
		BitBlock tmp27, tmp28, bytetest_81_81, tmp29, tmp30, tmp31, tmp32, tmp33;
		BitBlock tmp34, tmp35, tmp36, tmp37, bytetest_9b_9b, tmp38, tmp39;
		BitBlock bytetest_bb_bb, tmp40, bytetest_9c, tmp41, tmp42, bytetest_95_95;
		BitBlock tmp43, tmp44, tmp45, bytetest_b5_b5, tmp46, tmp47, bytetest_8f_8f;
		BitBlock tmp48, tmp49, tmp50, tmp51, bytetest_af_af, tmp52, bytetest_9e, tmp53;
		BitBlock bytetest_89_89, tmp54, tmp55, tmp56, bytetest_a9_a9, tmp57;
		BitBlock bytetest_9f, tmp58, bytetest_83_83, tmp59, tmp60, tmp61, bytetest_bb;
		BitBlock tmp62, bytetest_b0_b1, tmp63, tmp64, tmp65, tmp66, tmp67, tmp68;
		BitBlock tmp69, bytetest_c2_df, r80_7ff_tmp1, r80_7ff_tmp2, bytetest_c2;
		BitBlock bytetest_ac_ac, r80_7ff_tmp3, r80_7ff_tmp4, r80_7ff_tmp5;
		BitBlock bytetest_b1_b1, r80_7ff_tmp6, bytetest_c3, r80_7ff_tmp7;
		BitBlock bytetest_97_97, r80_7ff_tmp8, r80_7ff_tmp9, r80_7ff_tmp10;
		BitBlock bytetest_b7_b7, r80_7ff_tmp11, bytetest_cf, r80_7ff_tmp12;
		BitBlock bytetest_b6_b6, r80_7ff_tmp13, r80_7ff_tmp14, r80_7ff_tmp15;
		BitBlock r80_7ff_tmp16, r80_7ff_tmp17, bytetest_d8, r80_7ff_tmp18;
		BitBlock r80_7ff_tmp19, r80_7ff_tmp20, r80_7ff_tmp21, bytetest_86_88;
		BitBlock r80_7ff_tmp22, r80_7ff_tmp23, r80_7ff_tmp24, tmp70, tmp71, tmp72;
		BitBlock bytetest_e1_ef, bytetest_e0, bytetest_a0_bf, tmp73, tmp74, tmp75;
		BitBlock tmp76, r800_ffff_tmp1, r800_ffff_tmp2, bytetest_e2, bytetest_81;
		BitBlock r800_ffff_tmp3, bytetest_84_84, r800_ffff_tmp4, r800_ffff_tmp5;
		BitBlock r800_ffff_tmp6, r800_ffff_tmp7, r800_ffff_tmp8, bytetest_92_92;
		BitBlock r800_ffff_tmp9, r800_ffff_tmp10, r800_ffff_tmp11, r800_ffff_tmp12;
		BitBlock bytetest_ba_bc, r800_ffff_tmp13, bytetest_82, r800_ffff_tmp14;
		BitBlock bytetest_8a_8c, r800_ffff_tmp15, r800_ffff_tmp16, r800_ffff_tmp17;
		BitBlock bytetest_84, r800_ffff_tmp18, bytetest_98_98, r800_ffff_tmp19;
		BitBlock r800_ffff_tmp20, r800_ffff_tmp21, bytetest_85, r800_ffff_tmp22;
		BitBlock r800_ffff_tmp23, bytetest_80_84, r800_ffff_tmp24, r800_ffff_tmp25;
		BitBlock r800_ffff_tmp26, bytetest_8b_8b, r800_ffff_tmp27, r800_ffff_tmp28;
		BitBlock bytetest_86, r800_ffff_tmp29, bytetest_90_94, r800_ffff_tmp30;
		BitBlock r800_ffff_tmp31, r800_ffff_tmp32, r800_ffff_tmp33, bytetest_9a_9b;
		BitBlock r800_ffff_tmp34, bytetest_a0_a0, r800_ffff_tmp35, bytetest_a3_a3;
		BitBlock r800_ffff_tmp36, bytetest_a6_a6, r800_ffff_tmp37, bytetest_ae_ae;
		BitBlock r800_ffff_tmp38, r800_ffff_tmp39, bytetest_87, r800_ffff_tmp40;
		BitBlock bytetest_8e_8f, r800_ffff_tmp41, r800_ffff_tmp42, r800_ffff_tmp43;
		BitBlock r800_ffff_tmp44, bytetest_94_94, r800_ffff_tmp45, bytetest_88_8b;
		BitBlock bytetest_80_bf, r800_ffff_tmp46, r800_ffff_tmp47, r800_ffff_tmp48;
		BitBlock r800_ffff_tmp49, r800_ffff_tmp50, bytetest_b4_bf, r800_ffff_tmp51;
		BitBlock r800_ffff_tmp52, bytetest_8c, r800_ffff_tmp53, bytetest_a0_a1;
		BitBlock r800_ffff_tmp54, r800_ffff_tmp55, r800_ffff_tmp56, bytetest_8d;
		BitBlock bytetest_bc_bc, r800_ffff_tmp57, r800_ffff_tmp58, r800_ffff_tmp59;
		BitBlock bytetest_8e, r800_ffff_tmp60, r800_ffff_tmp61, r800_ffff_tmp62;
		BitBlock r800_ffff_tmp63, r800_ffff_tmp64, r800_ffff_tmp65, bytetest_9b_b3;
		BitBlock r800_ffff_tmp66, r800_ffff_tmp67, r800_ffff_tmp68, bytetest_8f;
		BitBlock r800_ffff_tmp69, r800_ffff_tmp70, r800_ffff_tmp71, bytetest_9c_a1;
		BitBlock r800_ffff_tmp72, r800_ffff_tmp73, r800_ffff_tmp74, r800_ffff_tmp75;
		BitBlock bytetest_96, r800_ffff_tmp76, r800_ffff_tmp77, r800_ffff_tmp78;
		BitBlock bytetest_97, r800_ffff_tmp79, r800_ffff_tmp80, r800_ffff_tmp81;
		BitBlock bytetest_b8_bf, r800_ffff_tmp82, bytetest_99, r800_ffff_tmp83;
		BitBlock r800_ffff_tmp84, r800_ffff_tmp85, r800_ffff_tmp86, r800_ffff_tmp87;
		BitBlock r800_ffff_tmp88, r800_ffff_tmp89, r800_ffff_tmp90, r800_ffff_tmp91;
		BitBlock r800_ffff_tmp92, r800_ffff_tmp93, r800_ffff_tmp94, r800_ffff_tmp95;
		BitBlock r800_ffff_tmp96, r800_ffff_tmp97, bytetest_87_a5, r800_ffff_tmp98;
		BitBlock bytetest_b0_bf, r800_ffff_tmp99, bytetest_a6, r800_ffff_tmp100;
		BitBlock bytetest_80_82, r800_ffff_tmp101, r800_ffff_tmp102, r800_ffff_tmp103;
		BitBlock r800_ffff_tmp104, bytetest_a4_a5, r800_ffff_tmp105, r800_ffff_tmp106;
		BitBlock r800_ffff_tmp107, r800_ffff_tmp108, bytetest_a7, r800_ffff_tmp109;
		BitBlock r800_ffff_tmp110, bytetest_80_97, r800_ffff_tmp111, r800_ffff_tmp112;
		BitBlock r800_ffff_tmp113, r800_ffff_tmp114, r800_ffff_tmp115;
		BitBlock r800_ffff_tmp116, r800_ffff_tmp117, bytetest_99_bf, r800_ffff_tmp118;
		BitBlock r800_ffff_tmp119, r800_ffff_tmp120, r800_ffff_tmp121, bytetest_9c_bb;
		BitBlock r800_ffff_tmp122, bytetest_a8_ab, r800_ffff_tmp123, r800_ffff_tmp124;
		BitBlock r800_ffff_tmp125, bytetest_be_bf, r800_ffff_tmp126, r800_ffff_tmp127;
		BitBlock bytetest_ad, r800_ffff_tmp128, r800_ffff_tmp129, r800_ffff_tmp130;
		BitBlock bytetest_ac, r800_ffff_tmp131, r800_ffff_tmp132, r800_ffff_tmp133;
		BitBlock r800_ffff_tmp134, r800_ffff_tmp135, r800_ffff_tmp136, bytetest_87_8c;
		BitBlock r800_ffff_tmp137, bytetest_ef, r800_ffff_tmp138, r800_ffff_tmp139;
		BitBlock r800_ffff_tmp140, r800_ffff_tmp141, r800_ffff_tmp142, bytetest_b9;
		BitBlock bytetest_a2_a2, r800_ffff_tmp143, r800_ffff_tmp144, r800_ffff_tmp145;
		BitBlock r800_ffff_tmp146, bytetest_a4_a6, r800_ffff_tmp147, bytetest_bc;
		BitBlock r800_ffff_tmp148, r800_ffff_tmp149, r800_ffff_tmp150;
		BitBlock r800_ffff_tmp151, bytetest_9c_9e, r800_ffff_tmp152, bytetest_bd;
		BitBlock bytetest_9c_9c, r800_ffff_tmp153, r800_ffff_tmp154, r800_ffff_tmp155;
		BitBlock bytetest_9e_9e, r800_ffff_tmp156, bytetest_bf, r800_ffff_tmp157;
		BitBlock r800_ffff_tmp158, r800_ffff_tmp159, r800_ffff_tmp160;
		BitBlock r800_ffff_tmp161, bytetest_a9_ac, r800_ffff_tmp162;




        struct_Sm.cc = simd<1>::constant<0>();
        tmp1 = simd_or(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp2, tmp1);
        tmp4 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_and(tmp4, tmp5);
        bytetest_2b_2b = simd_and(tmp3, tmp6);
        struct_Sm.cc = simd_or(bytetest_2b_2b, struct_Sm.cc);
        tmp7 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp8 = simd_andc(tmp7, tmp1);
        tmp9 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp10 = simd_and(tmp8, tmp9);
        bytetest_3c_3e = simd_andc(tmp10, tmp5);
        struct_Sm.cc = simd_or(bytetest_3c_3e, struct_Sm.cc);
        tmp11 = simd_andc(basis_bits.bit_1, basis_bits.bit_0);
        tmp12 = simd_and(tmp11, tmp7);
        tmp13 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp14 = simd_andc(tmp9, tmp13);
        bytetest_7c_7c = simd_and(tmp12, tmp14);
        struct_Sm.cc = simd_or(bytetest_7c_7c, struct_Sm.cc);
        tmp15 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp16 = simd_and(tmp9, tmp15);
        bytetest_7e_7e = simd_and(tmp12, tmp16);
        struct_Sm.cc = simd_or(bytetest_7e_7e, struct_Sm.cc);
        tmp17 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp18 = simd_and(tmp17, tmp7);
        tmp19 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp20 = simd_or(tmp19, tmp13);
        bytetest_f0 = simd_andc(tmp18, tmp20);
        tmp21 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp22 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp23 = simd_and(tmp21, tmp22);
        tmp24 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp25 = simd_and(tmp9, tmp24);
        bytetest_9d = simd_and(tmp23, tmp25);
        bytetest_9b = simd_and(tmp23, tmp6);
        tmp26 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp27 = simd_andc(tmp21, tmp26);
        tmp28 = simd_andc(tmp24, tmp19);
        bytetest_81_81 = simd_and(tmp27, tmp28);
        tmp29 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp29, carryQ.get_carry_in(0), tmp30));
        tmp31 = simd_and(tmp30, bytetest_f0);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp31, carryQ.get_carry_in(1), tmp32));
        tmp33 = simd_and(tmp32, bytetest_9d);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp33, carryQ.get_carry_in(2), tmp34));
        tmp35 = simd_and(tmp34, bytetest_9b);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp35, carryQ.get_carry_in(3), tmp36));
        tmp37 = simd_and(tmp36, bytetest_81_81);
        struct_Sm.cc = simd_or(tmp37, struct_Sm.cc);
        bytetest_f0 = simd_andc(tmp18, tmp20);
        bytetest_9d = simd_and(tmp23, tmp25);
        bytetest_9b = simd_and(tmp23, tmp6);
        bytetest_9b_9b = simd_and(tmp23, tmp6);
        tmp38 = simd_and(tmp36, bytetest_9b_9b);
        struct_Sm.cc = simd_or(tmp38, struct_Sm.cc);
        bytetest_f0 = simd_andc(tmp18, tmp20);
        bytetest_9d = simd_and(tmp23, tmp25);
        bytetest_9b = simd_and(tmp23, tmp6);
        tmp39 = simd_and(tmp21, tmp7);
        bytetest_bb_bb = simd_and(tmp39, tmp6);
        tmp40 = simd_and(tmp36, bytetest_bb_bb);
        struct_Sm.cc = simd_or(tmp40, struct_Sm.cc);
        bytetest_f0 = simd_andc(tmp18, tmp20);
        bytetest_9d = simd_and(tmp23, tmp25);
        bytetest_9c = simd_and(tmp23, tmp14);
        tmp41 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp42 = simd_and(tmp41, tmp24);
        bytetest_95_95 = simd_and(tmp23, tmp42);
        tmp43 = simd_and(tmp34, bytetest_9c);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp43, carryQ.get_carry_in(4), tmp44));
        tmp45 = simd_and(tmp44, bytetest_95_95);
        struct_Sm.cc = simd_or(tmp45, struct_Sm.cc);
        bytetest_f0 = simd_andc(tmp18, tmp20);
        bytetest_9d = simd_and(tmp23, tmp25);
        bytetest_9c = simd_and(tmp23, tmp14);
        bytetest_b5_b5 = simd_and(tmp39, tmp42);
        tmp46 = simd_and(tmp44, bytetest_b5_b5);
        struct_Sm.cc = simd_or(tmp46, struct_Sm.cc);
        bytetest_f0 = simd_andc(tmp18, tmp20);
        bytetest_9d = simd_and(tmp23, tmp25);
        bytetest_9d = simd_and(tmp23, tmp25);
        tmp47 = simd_and(tmp9, tmp5);
        bytetest_8f_8f = simd_and(tmp27, tmp47);
        tmp48 = simd_and(tmp34, bytetest_9d);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp48, carryQ.get_carry_in(5), tmp49));
        tmp50 = simd_and(tmp49, bytetest_8f_8f);
        struct_Sm.cc = simd_or(tmp50, struct_Sm.cc);
        bytetest_f0 = simd_andc(tmp18, tmp20);
        bytetest_9d = simd_and(tmp23, tmp25);
        bytetest_9d = simd_and(tmp23, tmp25);
        tmp51 = simd_and(tmp21, tmp2);
        bytetest_af_af = simd_and(tmp51, tmp47);
        tmp52 = simd_and(tmp49, bytetest_af_af);
        struct_Sm.cc = simd_or(tmp52, struct_Sm.cc);
        bytetest_f0 = simd_andc(tmp18, tmp20);
        bytetest_9d = simd_and(tmp23, tmp25);
        bytetest_9e = simd_and(tmp23, tmp16);
        tmp53 = simd_and(tmp4, tmp24);
        bytetest_89_89 = simd_and(tmp27, tmp53);
        tmp54 = simd_and(tmp34, bytetest_9e);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp54, carryQ.get_carry_in(6), tmp55));
        tmp56 = simd_and(tmp55, bytetest_89_89);
        struct_Sm.cc = simd_or(tmp56, struct_Sm.cc);
        bytetest_f0 = simd_andc(tmp18, tmp20);
        bytetest_9d = simd_and(tmp23, tmp25);
        bytetest_9e = simd_and(tmp23, tmp16);
        bytetest_a9_a9 = simd_and(tmp51, tmp53);
        tmp57 = simd_and(tmp55, bytetest_a9_a9);
        struct_Sm.cc = simd_or(tmp57, struct_Sm.cc);
        bytetest_f0 = simd_andc(tmp18, tmp20);
        bytetest_9d = simd_and(tmp23, tmp25);
        bytetest_9f = simd_and(tmp23, tmp47);
        tmp58 = simd_andc(tmp5, tmp19);
        bytetest_83_83 = simd_and(tmp27, tmp58);
        tmp59 = simd_and(tmp34, bytetest_9f);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp59, carryQ.get_carry_in(7), tmp60));
        tmp61 = simd_and(tmp60, bytetest_83_83);
        struct_Sm.cc = simd_or(tmp61, struct_Sm.cc);
        bytetest_f0 = simd_andc(tmp18, tmp20);
        bytetest_9e = simd_and(tmp23, tmp16);
        bytetest_bb = simd_and(tmp39, tmp6);
        tmp62 = simd_or(tmp19, basis_bits.bit_6);
        bytetest_b0_b1 = simd_andc(tmp39, tmp62);
        tmp63 = simd_and(tmp32, bytetest_9e);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(tmp63, carryQ.get_carry_in(8), tmp64));
        tmp65 = simd_and(tmp64, bytetest_bb);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(tmp65, carryQ.get_carry_in(9), tmp66));
        tmp67 = simd_and(tmp66, bytetest_b0_b1);
        struct_Sm.cc = simd_or(tmp67, struct_Sm.cc);
        tmp68 = simd_andc(tmp17, basis_bits.bit_2);
        tmp69 = simd_or(basis_bits.bit_3, tmp62);
        bytetest_c2_df = simd_and(tmp68, tmp69);
        if ((bitblock::any(bytetest_c2_df) || carryQ.CarryTest(10, 4))) {
          r80_7ff_tmp1 = simd_andc(tmp17, tmp26);
          r80_7ff_tmp2 = simd_andc(tmp15, tmp19);
          bytetest_c2 = simd_and(r80_7ff_tmp1, r80_7ff_tmp2);
          bytetest_ac_ac = simd_and(tmp51, tmp14);
          r80_7ff_tmp3 = simd_and(tmp30, bytetest_c2);
          carryQ.cq[10] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp3, carryQ.get_carry_in(10), r80_7ff_tmp4));
          r80_7ff_tmp5 = simd_and(r80_7ff_tmp4, bytetest_ac_ac);
          struct_Sm.cc = simd_or(r80_7ff_tmp5, struct_Sm.cc);
          bytetest_c2 = simd_and(r80_7ff_tmp1, r80_7ff_tmp2);
          bytetest_b1_b1 = simd_and(tmp39, tmp28);
          r80_7ff_tmp6 = simd_and(r80_7ff_tmp4, bytetest_b1_b1);
          struct_Sm.cc = simd_or(r80_7ff_tmp6, struct_Sm.cc);
          bytetest_c3 = simd_and(r80_7ff_tmp1, tmp58);
          r80_7ff_tmp7 = simd_and(tmp41, tmp5);
          bytetest_97_97 = simd_and(tmp23, r80_7ff_tmp7);
          r80_7ff_tmp8 = simd_and(tmp30, bytetest_c3);
          carryQ.cq[11] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp8, carryQ.get_carry_in(11), r80_7ff_tmp9));
          r80_7ff_tmp10 = simd_and(r80_7ff_tmp9, bytetest_97_97);
          struct_Sm.cc = simd_or(r80_7ff_tmp10, struct_Sm.cc);
          bytetest_c3 = simd_and(r80_7ff_tmp1, tmp58);
          bytetest_b7_b7 = simd_and(tmp39, r80_7ff_tmp7);
          r80_7ff_tmp11 = simd_and(r80_7ff_tmp9, bytetest_b7_b7);
          struct_Sm.cc = simd_or(r80_7ff_tmp11, struct_Sm.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp47);
          r80_7ff_tmp12 = simd_and(tmp41, tmp15);
          bytetest_b6_b6 = simd_and(tmp39, r80_7ff_tmp12);
          r80_7ff_tmp13 = simd_and(tmp30, bytetest_cf);
          carryQ.cq[12] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp13, carryQ.get_carry_in(12), r80_7ff_tmp14));
          r80_7ff_tmp15 = simd_and(r80_7ff_tmp14, bytetest_b6_b6);
          struct_Sm.cc = simd_or(r80_7ff_tmp15, struct_Sm.cc);
          r80_7ff_tmp16 = simd_and(tmp17, tmp22);
          r80_7ff_tmp17 = simd_andc(tmp4, tmp13);
          bytetest_d8 = simd_and(r80_7ff_tmp16, r80_7ff_tmp17);
          r80_7ff_tmp18 = simd_or(basis_bits.bit_5, tmp13);
          r80_7ff_tmp19 = simd_not(r80_7ff_tmp18);
          r80_7ff_tmp20 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
          r80_7ff_tmp21 = simd_or(simd_and(basis_bits.bit_4, r80_7ff_tmp19), simd_andc(r80_7ff_tmp20, basis_bits.bit_4));
          bytetest_86_88 = simd_and(tmp27, r80_7ff_tmp21);
          r80_7ff_tmp22 = simd_and(tmp30, bytetest_d8);
          carryQ.cq[13] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp22, carryQ.get_carry_in(13), r80_7ff_tmp23));
          r80_7ff_tmp24 = simd_and(r80_7ff_tmp23, bytetest_86_88);
          struct_Sm.cc = simd_or(r80_7ff_tmp24, struct_Sm.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(10, 4);
        }
        tmp70 = simd_and(tmp17, tmp2);
        tmp71 = simd_or(basis_bits.bit_5, tmp13);
        tmp72 = simd_or(basis_bits.bit_4, tmp71);
        bytetest_e1_ef = simd_and(tmp70, tmp72);
        bytetest_e0 = simd_andc(tmp70, tmp20);
        bytetest_a0_bf = simd_and(tmp21, basis_bits.bit_2);
        tmp73 = simd_and(tmp30, bytetest_e0);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(tmp73, carryQ.get_carry_in(14), tmp74));
        tmp75 = simd_and(tmp74, bytetest_a0_bf);
        tmp76 = simd_or(tmp75, bytetest_e1_ef);
        if ((bitblock::any(tmp76) || carryQ.CarryTest(15, 28))) {
          r800_ffff_tmp1 = simd_and(tmp17, tmp2);
          r800_ffff_tmp2 = simd_andc(tmp15, tmp19);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_81 = simd_and(tmp27, tmp28);
          r800_ffff_tmp3 = simd_andc(tmp41, tmp13);
          bytetest_84_84 = simd_and(tmp27, r800_ffff_tmp3);
          r800_ffff_tmp4 = simd_and(tmp30, bytetest_e2);
          carryQ.cq[15] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp4, carryQ.get_carry_in(15), r800_ffff_tmp5));
          r800_ffff_tmp6 = simd_and(r800_ffff_tmp5, bytetest_81);
          carryQ.cq[16] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp6, carryQ.get_carry_in(16), r800_ffff_tmp7));
          r800_ffff_tmp8 = simd_and(r800_ffff_tmp7, bytetest_84_84);
          struct_Sm.cc = simd_or(r800_ffff_tmp8, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_81 = simd_and(tmp27, tmp28);
          bytetest_92_92 = simd_and(tmp23, r800_ffff_tmp2);
          r800_ffff_tmp9 = simd_and(r800_ffff_tmp7, bytetest_92_92);
          struct_Sm.cc = simd_or(r800_ffff_tmp9, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_81 = simd_and(tmp27, tmp28);
          r800_ffff_tmp10 = simd_and(tmp39, basis_bits.bit_4);
          r800_ffff_tmp11 = simd_not(tmp13);
          r800_ffff_tmp12 = simd_or(simd_and(basis_bits.bit_5, r800_ffff_tmp11), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
          bytetest_ba_bc = simd_and(r800_ffff_tmp10, r800_ffff_tmp12);
          r800_ffff_tmp13 = simd_and(r800_ffff_tmp7, bytetest_ba_bc);
          struct_Sm.cc = simd_or(r800_ffff_tmp13, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_82 = simd_and(tmp27, r800_ffff_tmp2);
          r800_ffff_tmp14 = simd_and(tmp27, basis_bits.bit_4);
          bytetest_8a_8c = simd_and(r800_ffff_tmp14, r800_ffff_tmp12);
          r800_ffff_tmp15 = simd_and(r800_ffff_tmp5, bytetest_82);
          carryQ.cq[17] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp15, carryQ.get_carry_in(17), r800_ffff_tmp16));
          r800_ffff_tmp17 = simd_and(r800_ffff_tmp16, bytetest_8a_8c);
          struct_Sm.cc = simd_or(r800_ffff_tmp17, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_84 = simd_and(tmp27, r800_ffff_tmp3);
          r800_ffff_tmp18 = simd_andc(tmp4, tmp13);
          bytetest_98_98 = simd_and(tmp23, r800_ffff_tmp18);
          r800_ffff_tmp19 = simd_and(r800_ffff_tmp5, bytetest_84);
          carryQ.cq[18] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp19, carryQ.get_carry_in(18), r800_ffff_tmp20));
          r800_ffff_tmp21 = simd_and(r800_ffff_tmp20, bytetest_98_98);
          struct_Sm.cc = simd_or(r800_ffff_tmp21, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_85 = simd_and(tmp27, tmp42);
          r800_ffff_tmp22 = simd_andc(tmp27, basis_bits.bit_4);
          r800_ffff_tmp23 = simd_and(basis_bits.bit_5, tmp13);
          bytetest_80_84 = simd_andc(r800_ffff_tmp22, r800_ffff_tmp23);
          r800_ffff_tmp24 = simd_and(r800_ffff_tmp5, bytetest_85);
          carryQ.cq[19] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp24, carryQ.get_carry_in(19), r800_ffff_tmp25));
          r800_ffff_tmp26 = simd_and(r800_ffff_tmp25, bytetest_80_84);
          struct_Sm.cc = simd_or(r800_ffff_tmp26, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_85 = simd_and(tmp27, tmp42);
          bytetest_8b_8b = simd_and(tmp27, tmp6);
          r800_ffff_tmp27 = simd_and(r800_ffff_tmp25, bytetest_8b_8b);
          struct_Sm.cc = simd_or(r800_ffff_tmp27, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          r800_ffff_tmp28 = simd_and(tmp41, tmp15);
          bytetest_86 = simd_and(tmp27, r800_ffff_tmp28);
          r800_ffff_tmp29 = simd_andc(tmp23, basis_bits.bit_4);
          bytetest_90_94 = simd_andc(r800_ffff_tmp29, r800_ffff_tmp23);
          r800_ffff_tmp30 = simd_and(r800_ffff_tmp5, bytetest_86);
          carryQ.cq[20] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp30, carryQ.get_carry_in(20), r800_ffff_tmp31));
          r800_ffff_tmp32 = simd_and(r800_ffff_tmp31, bytetest_90_94);
          struct_Sm.cc = simd_or(r800_ffff_tmp32, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_86 = simd_and(tmp27, r800_ffff_tmp28);
          r800_ffff_tmp33 = simd_and(tmp4, basis_bits.bit_6);
          bytetest_9a_9b = simd_and(tmp23, r800_ffff_tmp33);
          r800_ffff_tmp34 = simd_and(r800_ffff_tmp31, bytetest_9a_9b);
          struct_Sm.cc = simd_or(r800_ffff_tmp34, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_86 = simd_and(tmp27, r800_ffff_tmp28);
          bytetest_a0_a0 = simd_andc(tmp51, tmp20);
          r800_ffff_tmp35 = simd_and(r800_ffff_tmp31, bytetest_a0_a0);
          struct_Sm.cc = simd_or(r800_ffff_tmp35, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_86 = simd_and(tmp27, r800_ffff_tmp28);
          bytetest_a3_a3 = simd_and(tmp51, tmp58);
          r800_ffff_tmp36 = simd_and(r800_ffff_tmp31, bytetest_a3_a3);
          struct_Sm.cc = simd_or(r800_ffff_tmp36, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_86 = simd_and(tmp27, r800_ffff_tmp28);
          bytetest_a6_a6 = simd_and(tmp51, r800_ffff_tmp28);
          r800_ffff_tmp37 = simd_and(r800_ffff_tmp31, bytetest_a6_a6);
          struct_Sm.cc = simd_or(r800_ffff_tmp37, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_86 = simd_and(tmp27, r800_ffff_tmp28);
          bytetest_ae_ae = simd_and(tmp51, tmp16);
          r800_ffff_tmp38 = simd_and(r800_ffff_tmp31, bytetest_ae_ae);
          struct_Sm.cc = simd_or(r800_ffff_tmp38, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          r800_ffff_tmp39 = simd_and(tmp41, tmp5);
          bytetest_87 = simd_and(tmp27, r800_ffff_tmp39);
          r800_ffff_tmp40 = simd_and(tmp9, basis_bits.bit_6);
          bytetest_8e_8f = simd_and(tmp27, r800_ffff_tmp40);
          r800_ffff_tmp41 = simd_and(r800_ffff_tmp5, bytetest_87);
          carryQ.cq[21] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp41, carryQ.get_carry_in(21), r800_ffff_tmp42));
          r800_ffff_tmp43 = simd_and(r800_ffff_tmp42, bytetest_8e_8f);
          struct_Sm.cc = simd_or(r800_ffff_tmp43, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_87 = simd_and(tmp27, r800_ffff_tmp39);
          bytetest_92_92 = simd_and(tmp23, r800_ffff_tmp2);
          r800_ffff_tmp44 = simd_and(r800_ffff_tmp42, bytetest_92_92);
          struct_Sm.cc = simd_or(r800_ffff_tmp44, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_87 = simd_and(tmp27, r800_ffff_tmp39);
          bytetest_94_94 = simd_and(tmp23, r800_ffff_tmp3);
          r800_ffff_tmp45 = simd_and(r800_ffff_tmp42, bytetest_94_94);
          struct_Sm.cc = simd_or(r800_ffff_tmp45, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_88_8b = simd_and(tmp27, tmp4);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp46 = simd_and(r800_ffff_tmp5, bytetest_88_8b);
          carryQ.cq[22] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp46, carryQ.get_carry_in(22), r800_ffff_tmp47));
          r800_ffff_tmp48 = simd_and(r800_ffff_tmp47, bytetest_80_bf);
          r800_ffff_tmp49 = simd_andc(bytetest_80_bf, tmp26);
          bytetest_87 = simd_and(r800_ffff_tmp49, r800_ffff_tmp39);
          r800_ffff_tmp50 = simd_and(bytetest_80_bf, tmp7);
          bytetest_b4_bf = simd_and(r800_ffff_tmp50, tmp19);
          r800_ffff_tmp51 = simd_and(r800_ffff_tmp42, bytetest_b4_bf);
          r800_ffff_tmp52 = simd_or(r800_ffff_tmp51, r800_ffff_tmp48);
          struct_Sm.cc = simd_or(r800_ffff_tmp52, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_8c = simd_and(r800_ffff_tmp49, tmp14);
          r800_ffff_tmp53 = simd_and(bytetest_80_bf, tmp2);
          bytetest_a0_a1 = simd_andc(r800_ffff_tmp53, tmp62);
          r800_ffff_tmp54 = simd_and(r800_ffff_tmp5, bytetest_8c);
          carryQ.cq[23] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp54, carryQ.get_carry_in(23), r800_ffff_tmp55));
          r800_ffff_tmp56 = simd_and(r800_ffff_tmp55, bytetest_a0_a1);
          struct_Sm.cc = simd_or(r800_ffff_tmp56, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_8d = simd_and(r800_ffff_tmp49, tmp25);
          bytetest_bc_bc = simd_and(r800_ffff_tmp50, tmp14);
          r800_ffff_tmp57 = simd_and(r800_ffff_tmp5, bytetest_8d);
          carryQ.cq[24] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp57, carryQ.get_carry_in(24), r800_ffff_tmp58));
          r800_ffff_tmp59 = simd_and(r800_ffff_tmp58, bytetest_bc_bc);
          struct_Sm.cc = simd_or(r800_ffff_tmp59, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_8e = simd_and(r800_ffff_tmp49, tmp16);
          r800_ffff_tmp60 = simd_and(basis_bits.bit_3, tmp19);
          r800_ffff_tmp61 = simd_not(r800_ffff_tmp60);
          r800_ffff_tmp62 = simd_or(basis_bits.bit_5, tmp5);
          r800_ffff_tmp63 = simd_and(basis_bits.bit_4, r800_ffff_tmp62);
          r800_ffff_tmp64 = simd_and(basis_bits.bit_3, r800_ffff_tmp63);
          r800_ffff_tmp65 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp61), simd_andc(r800_ffff_tmp64, basis_bits.bit_2));
          bytetest_9b_b3 = simd_and(bytetest_80_bf, r800_ffff_tmp65);
          r800_ffff_tmp66 = simd_and(r800_ffff_tmp5, bytetest_8e);
          carryQ.cq[25] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp66, carryQ.get_carry_in(25), r800_ffff_tmp67));
          r800_ffff_tmp68 = simd_and(r800_ffff_tmp67, bytetest_9b_b3);
          struct_Sm.cc = simd_or(r800_ffff_tmp68, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_8f = simd_and(r800_ffff_tmp49, tmp47);
          r800_ffff_tmp69 = simd_not(tmp69);
          r800_ffff_tmp70 = simd_and(basis_bits.bit_3, tmp9);
          r800_ffff_tmp71 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp69), simd_andc(r800_ffff_tmp70, basis_bits.bit_2));
          bytetest_9c_a1 = simd_and(bytetest_80_bf, r800_ffff_tmp71);
          r800_ffff_tmp72 = simd_and(r800_ffff_tmp5, bytetest_8f);
          carryQ.cq[26] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp72, carryQ.get_carry_in(26), r800_ffff_tmp73));
          r800_ffff_tmp74 = simd_and(r800_ffff_tmp73, bytetest_9c_a1);
          struct_Sm.cc = simd_or(r800_ffff_tmp74, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          r800_ffff_tmp75 = simd_and(bytetest_80_bf, tmp22);
          bytetest_96 = simd_and(r800_ffff_tmp75, r800_ffff_tmp28);
          bytetest_b7_b7 = simd_and(r800_ffff_tmp50, r800_ffff_tmp39);
          r800_ffff_tmp76 = simd_and(r800_ffff_tmp5, bytetest_96);
          carryQ.cq[27] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp76, carryQ.get_carry_in(27), r800_ffff_tmp77));
          r800_ffff_tmp78 = simd_and(r800_ffff_tmp77, bytetest_b7_b7);
          struct_Sm.cc = simd_or(r800_ffff_tmp78, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_97 = simd_and(r800_ffff_tmp75, r800_ffff_tmp39);
          bytetest_81_81 = simd_and(r800_ffff_tmp49, tmp28);
          r800_ffff_tmp79 = simd_and(r800_ffff_tmp5, bytetest_97);
          carryQ.cq[28] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp79, carryQ.get_carry_in(28), r800_ffff_tmp80));
          r800_ffff_tmp81 = simd_and(r800_ffff_tmp80, bytetest_81_81);
          struct_Sm.cc = simd_or(r800_ffff_tmp81, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_97 = simd_and(r800_ffff_tmp75, r800_ffff_tmp39);
          bytetest_b8_bf = simd_and(r800_ffff_tmp50, basis_bits.bit_4);
          r800_ffff_tmp82 = simd_and(r800_ffff_tmp80, bytetest_b8_bf);
          struct_Sm.cc = simd_or(r800_ffff_tmp82, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_99 = simd_and(r800_ffff_tmp75, tmp53);
          bytetest_af_af = simd_and(r800_ffff_tmp53, tmp47);
          r800_ffff_tmp83 = simd_and(r800_ffff_tmp5, bytetest_99);
          carryQ.cq[29] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp83, carryQ.get_carry_in(29), r800_ffff_tmp84));
          r800_ffff_tmp85 = simd_and(r800_ffff_tmp84, bytetest_af_af);
          struct_Sm.cc = simd_or(r800_ffff_tmp85, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_9f = simd_and(r800_ffff_tmp75, tmp47);
          r800_ffff_tmp86 = simd_andc(r800_ffff_tmp49, basis_bits.bit_4);
          bytetest_80_84 = simd_andc(r800_ffff_tmp86, r800_ffff_tmp23);
          r800_ffff_tmp87 = simd_and(r800_ffff_tmp5, bytetest_9f);
          carryQ.cq[30] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp87, carryQ.get_carry_in(30), r800_ffff_tmp88));
          r800_ffff_tmp89 = simd_and(r800_ffff_tmp88, bytetest_80_84);
          struct_Sm.cc = simd_or(r800_ffff_tmp89, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_9f = simd_and(r800_ffff_tmp75, tmp47);
          r800_ffff_tmp90 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
          r800_ffff_tmp91 = simd_or(basis_bits.bit_4, r800_ffff_tmp90);
          r800_ffff_tmp92 = simd_or(basis_bits.bit_3, r800_ffff_tmp91);
          r800_ffff_tmp93 = simd_not(r800_ffff_tmp92);
          r800_ffff_tmp94 = simd_and(basis_bits.bit_5, tmp5);
          r800_ffff_tmp95 = simd_or(basis_bits.bit_4, r800_ffff_tmp94);
          r800_ffff_tmp96 = simd_or(basis_bits.bit_3, r800_ffff_tmp95);
          r800_ffff_tmp97 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp93), simd_andc(r800_ffff_tmp96, basis_bits.bit_2));
          bytetest_87_a5 = simd_and(bytetest_80_bf, r800_ffff_tmp97);
          r800_ffff_tmp98 = simd_and(r800_ffff_tmp88, bytetest_87_a5);
          struct_Sm.cc = simd_or(r800_ffff_tmp98, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_9f = simd_and(r800_ffff_tmp75, tmp47);
          bytetest_b0_bf = simd_and(bytetest_80_bf, tmp7);
          r800_ffff_tmp99 = simd_and(r800_ffff_tmp88, bytetest_b0_bf);
          struct_Sm.cc = simd_or(r800_ffff_tmp99, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_a6 = simd_and(r800_ffff_tmp53, r800_ffff_tmp28);
          r800_ffff_tmp100 = simd_andc(r800_ffff_tmp49, tmp19);
          bytetest_80_82 = simd_andc(r800_ffff_tmp100, tmp5);
          r800_ffff_tmp101 = simd_and(r800_ffff_tmp5, bytetest_a6);
          carryQ.cq[31] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp101, carryQ.get_carry_in(31), r800_ffff_tmp102));
          r800_ffff_tmp103 = simd_and(r800_ffff_tmp102, bytetest_80_82);
          r800_ffff_tmp104 = simd_andc(tmp41, basis_bits.bit_6);
          bytetest_a4_a5 = simd_and(r800_ffff_tmp53, r800_ffff_tmp104);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp105 = simd_and(r800_ffff_tmp5, bytetest_a4_a5);
          carryQ.cq[32] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp105, carryQ.get_carry_in(32), r800_ffff_tmp106));
          r800_ffff_tmp107 = simd_and(r800_ffff_tmp106, bytetest_80_bf);
          r800_ffff_tmp108 = simd_or(r800_ffff_tmp107, r800_ffff_tmp103);
          struct_Sm.cc = simd_or(r800_ffff_tmp108, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_a7 = simd_and(r800_ffff_tmp53, r800_ffff_tmp39);
          r800_ffff_tmp109 = simd_andc(bytetest_80_bf, basis_bits.bit_2);
          r800_ffff_tmp110 = simd_and(basis_bits.bit_3, basis_bits.bit_4);
          bytetest_80_97 = simd_andc(r800_ffff_tmp109, r800_ffff_tmp110);
          r800_ffff_tmp111 = simd_and(r800_ffff_tmp5, bytetest_a7);
          carryQ.cq[33] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp111, carryQ.get_carry_in(33), r800_ffff_tmp112));
          r800_ffff_tmp113 = simd_and(r800_ffff_tmp112, bytetest_80_97);
          bytetest_a6 = simd_and(r800_ffff_tmp53, r800_ffff_tmp28);
          r800_ffff_tmp114 = simd_or(basis_bits.bit_5, tmp13);
          r800_ffff_tmp115 = simd_and(basis_bits.bit_4, r800_ffff_tmp114);
          r800_ffff_tmp116 = simd_and(basis_bits.bit_3, r800_ffff_tmp115);
          r800_ffff_tmp117 = simd_or(basis_bits.bit_2, r800_ffff_tmp116);
          bytetest_99_bf = simd_and(bytetest_80_bf, r800_ffff_tmp117);
          r800_ffff_tmp118 = simd_and(r800_ffff_tmp102, bytetest_99_bf);
          r800_ffff_tmp119 = simd_or(r800_ffff_tmp118, r800_ffff_tmp113);
          struct_Sm.cc = simd_or(r800_ffff_tmp119, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_a7 = simd_and(r800_ffff_tmp53, r800_ffff_tmp39);
          r800_ffff_tmp120 = simd_not(r800_ffff_tmp70);
          r800_ffff_tmp121 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp120), simd_andc(r800_ffff_tmp70, basis_bits.bit_2));
          bytetest_9c_bb = simd_and(bytetest_80_bf, r800_ffff_tmp121);
          r800_ffff_tmp122 = simd_and(r800_ffff_tmp112, bytetest_9c_bb);
          struct_Sm.cc = simd_or(r800_ffff_tmp122, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_a8_ab = simd_and(r800_ffff_tmp53, tmp4);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp123 = simd_and(r800_ffff_tmp5, bytetest_a8_ab);
          carryQ.cq[34] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp123, carryQ.get_carry_in(34), r800_ffff_tmp124));
          r800_ffff_tmp125 = simd_and(r800_ffff_tmp124, bytetest_80_bf);
          bytetest_a7 = simd_and(r800_ffff_tmp53, r800_ffff_tmp39);
          bytetest_be_bf = simd_and(bytetest_b0_bf, r800_ffff_tmp40);
          r800_ffff_tmp126 = simd_and(r800_ffff_tmp112, bytetest_be_bf);
          r800_ffff_tmp127 = simd_or(r800_ffff_tmp126, r800_ffff_tmp125);
          struct_Sm.cc = simd_or(r800_ffff_tmp127, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_ad = simd_and(r800_ffff_tmp53, tmp25);
          bytetest_80_84 = simd_andc(r800_ffff_tmp86, r800_ffff_tmp23);
          r800_ffff_tmp128 = simd_and(r800_ffff_tmp5, bytetest_ad);
          carryQ.cq[35] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp128, carryQ.get_carry_in(35), r800_ffff_tmp129));
          r800_ffff_tmp130 = simd_and(r800_ffff_tmp129, bytetest_80_84);
          bytetest_ac = simd_and(r800_ffff_tmp53, tmp14);
          bytetest_b0_bf = simd_and(bytetest_80_bf, tmp7);
          r800_ffff_tmp131 = simd_and(r800_ffff_tmp5, bytetest_ac);
          carryQ.cq[36] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp131, carryQ.get_carry_in(36), r800_ffff_tmp132));
          r800_ffff_tmp133 = simd_and(r800_ffff_tmp132, bytetest_b0_bf);
          r800_ffff_tmp134 = simd_or(r800_ffff_tmp133, r800_ffff_tmp130);
          struct_Sm.cc = simd_or(r800_ffff_tmp134, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_ad = simd_and(r800_ffff_tmp53, tmp25);
          r800_ffff_tmp135 = simd_not(r800_ffff_tmp23);
          r800_ffff_tmp136 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp135), simd_andc(r800_ffff_tmp94, basis_bits.bit_4));
          bytetest_87_8c = simd_and(r800_ffff_tmp49, r800_ffff_tmp136);
          r800_ffff_tmp137 = simd_and(r800_ffff_tmp129, bytetest_87_8c);
          struct_Sm.cc = simd_or(r800_ffff_tmp137, struct_Sm.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp47);
          bytetest_ac = simd_and(r800_ffff_tmp53, tmp14);
          bytetest_a9_a9 = simd_and(r800_ffff_tmp53, tmp53);
          r800_ffff_tmp138 = simd_and(tmp30, bytetest_ef);
          carryQ.cq[37] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp138, carryQ.get_carry_in(37), r800_ffff_tmp139));
          r800_ffff_tmp140 = simd_and(r800_ffff_tmp139, bytetest_ac);
          carryQ.cq[38] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp140, carryQ.get_carry_in(38), r800_ffff_tmp141));
          r800_ffff_tmp142 = simd_and(r800_ffff_tmp141, bytetest_a9_a9);
          struct_Sm.cc = simd_or(r800_ffff_tmp142, struct_Sm.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp47);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_a2_a2 = simd_and(r800_ffff_tmp53, r800_ffff_tmp2);
          r800_ffff_tmp143 = simd_and(r800_ffff_tmp139, bytetest_b9);
          carryQ.cq[39] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp143, carryQ.get_carry_in(39), r800_ffff_tmp144));
          r800_ffff_tmp145 = simd_and(r800_ffff_tmp144, bytetest_a2_a2);
          struct_Sm.cc = simd_or(r800_ffff_tmp145, struct_Sm.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp47);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp53);
          r800_ffff_tmp146 = simd_and(r800_ffff_tmp53, tmp41);
          bytetest_a4_a6 = simd_andc(r800_ffff_tmp146, tmp5);
          r800_ffff_tmp147 = simd_and(r800_ffff_tmp144, bytetest_a4_a6);
          struct_Sm.cc = simd_or(r800_ffff_tmp147, struct_Sm.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp47);
          bytetest_bc = simd_and(bytetest_b0_bf, tmp14);
          bytetest_8b_8b = simd_and(r800_ffff_tmp49, tmp6);
          r800_ffff_tmp148 = simd_and(r800_ffff_tmp139, bytetest_bc);
          carryQ.cq[40] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp148, carryQ.get_carry_in(40), r800_ffff_tmp149));
          r800_ffff_tmp150 = simd_and(r800_ffff_tmp149, bytetest_8b_8b);
          struct_Sm.cc = simd_or(r800_ffff_tmp150, struct_Sm.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp47);
          bytetest_bc = simd_and(bytetest_b0_bf, tmp14);
          r800_ffff_tmp151 = simd_and(r800_ffff_tmp75, tmp9);
          bytetest_9c_9e = simd_andc(r800_ffff_tmp151, tmp5);
          r800_ffff_tmp152 = simd_and(r800_ffff_tmp149, bytetest_9c_9e);
          struct_Sm.cc = simd_or(r800_ffff_tmp152, struct_Sm.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp47);
          bytetest_bd = simd_and(bytetest_b0_bf, tmp25);
          bytetest_9c_9c = simd_and(r800_ffff_tmp75, tmp14);
          r800_ffff_tmp153 = simd_and(r800_ffff_tmp139, bytetest_bd);
          carryQ.cq[41] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp153, carryQ.get_carry_in(41), r800_ffff_tmp154));
          r800_ffff_tmp155 = simd_and(r800_ffff_tmp154, bytetest_9c_9c);
          struct_Sm.cc = simd_or(r800_ffff_tmp155, struct_Sm.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp47);
          bytetest_bd = simd_and(bytetest_b0_bf, tmp25);
          bytetest_9e_9e = simd_and(r800_ffff_tmp75, tmp16);
          r800_ffff_tmp156 = simd_and(r800_ffff_tmp154, bytetest_9e_9e);
          struct_Sm.cc = simd_or(r800_ffff_tmp156, struct_Sm.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp47);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp47);
          bytetest_a2_a2 = simd_and(r800_ffff_tmp53, r800_ffff_tmp2);
          r800_ffff_tmp157 = simd_and(r800_ffff_tmp139, bytetest_bf);
          carryQ.cq[42] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp157, carryQ.get_carry_in(42), r800_ffff_tmp158));
          r800_ffff_tmp159 = simd_and(r800_ffff_tmp158, bytetest_a2_a2);
          struct_Sm.cc = simd_or(r800_ffff_tmp159, struct_Sm.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp47);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp47);
          r800_ffff_tmp160 = simd_and(r800_ffff_tmp53, basis_bits.bit_4);
          r800_ffff_tmp161 = simd_or(simd_and(basis_bits.bit_5, r800_ffff_tmp11), simd_andc(tmp13, basis_bits.bit_5));
          bytetest_a9_ac = simd_and(r800_ffff_tmp160, r800_ffff_tmp161);
          r800_ffff_tmp162 = simd_and(r800_ffff_tmp158, bytetest_a9_ac);
          struct_Sm.cc = simd_or(r800_ffff_tmp162, struct_Sm.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(15, 28);
        }
        carryQ.CarryQ_Adjust(43);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Sm & struct_Sm, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_2b_2b, tmp7, tmp8, tmp9;
		BitBlock tmp10, bytetest_3c_3e, tmp11, tmp12, tmp13, tmp14, bytetest_7c_7c;
		BitBlock tmp15, tmp16, bytetest_7e_7e, tmp17, tmp18, tmp19, tmp20, bytetest_f0;
		BitBlock tmp21, tmp22, tmp23, tmp24, tmp25, bytetest_9d, bytetest_9b, tmp26;
		BitBlock tmp27, tmp28, bytetest_81_81, tmp29, tmp30, tmp31, tmp32, tmp33;
		BitBlock tmp34, tmp35, tmp36, tmp37, bytetest_9b_9b, tmp38, tmp39;
		BitBlock bytetest_bb_bb, tmp40, bytetest_9c, tmp41, tmp42, bytetest_95_95;
		BitBlock tmp43, tmp44, tmp45, bytetest_b5_b5, tmp46, tmp47, bytetest_8f_8f;
		BitBlock tmp48, tmp49, tmp50, tmp51, bytetest_af_af, tmp52, bytetest_9e, tmp53;
		BitBlock bytetest_89_89, tmp54, tmp55, tmp56, bytetest_a9_a9, tmp57;
		BitBlock bytetest_9f, tmp58, bytetest_83_83, tmp59, tmp60, tmp61, bytetest_bb;
		BitBlock tmp62, bytetest_b0_b1, tmp63, tmp64, tmp65, tmp66, tmp67, tmp68;
		BitBlock tmp69, bytetest_c2_df, r80_7ff_tmp1, r80_7ff_tmp2, bytetest_c2;
		BitBlock bytetest_ac_ac, r80_7ff_tmp3, r80_7ff_tmp4, r80_7ff_tmp5;
		BitBlock bytetest_b1_b1, r80_7ff_tmp6, bytetest_c3, r80_7ff_tmp7;
		BitBlock bytetest_97_97, r80_7ff_tmp8, r80_7ff_tmp9, r80_7ff_tmp10;
		BitBlock bytetest_b7_b7, r80_7ff_tmp11, bytetest_cf, r80_7ff_tmp12;
		BitBlock bytetest_b6_b6, r80_7ff_tmp13, r80_7ff_tmp14, r80_7ff_tmp15;
		BitBlock r80_7ff_tmp16, r80_7ff_tmp17, bytetest_d8, r80_7ff_tmp18;
		BitBlock r80_7ff_tmp19, r80_7ff_tmp20, r80_7ff_tmp21, bytetest_86_88;
		BitBlock r80_7ff_tmp22, r80_7ff_tmp23, r80_7ff_tmp24, tmp70, tmp71, tmp72;
		BitBlock bytetest_e1_ef, bytetest_e0, bytetest_a0_bf, tmp73, tmp74, tmp75;
		BitBlock tmp76, r800_ffff_tmp1, r800_ffff_tmp2, bytetest_e2, bytetest_81;
		BitBlock r800_ffff_tmp3, bytetest_84_84, r800_ffff_tmp4, r800_ffff_tmp5;
		BitBlock r800_ffff_tmp6, r800_ffff_tmp7, r800_ffff_tmp8, bytetest_92_92;
		BitBlock r800_ffff_tmp9, r800_ffff_tmp10, r800_ffff_tmp11, r800_ffff_tmp12;
		BitBlock bytetest_ba_bc, r800_ffff_tmp13, bytetest_82, r800_ffff_tmp14;
		BitBlock bytetest_8a_8c, r800_ffff_tmp15, r800_ffff_tmp16, r800_ffff_tmp17;
		BitBlock bytetest_84, r800_ffff_tmp18, bytetest_98_98, r800_ffff_tmp19;
		BitBlock r800_ffff_tmp20, r800_ffff_tmp21, bytetest_85, r800_ffff_tmp22;
		BitBlock r800_ffff_tmp23, bytetest_80_84, r800_ffff_tmp24, r800_ffff_tmp25;
		BitBlock r800_ffff_tmp26, bytetest_8b_8b, r800_ffff_tmp27, r800_ffff_tmp28;
		BitBlock bytetest_86, r800_ffff_tmp29, bytetest_90_94, r800_ffff_tmp30;
		BitBlock r800_ffff_tmp31, r800_ffff_tmp32, r800_ffff_tmp33, bytetest_9a_9b;
		BitBlock r800_ffff_tmp34, bytetest_a0_a0, r800_ffff_tmp35, bytetest_a3_a3;
		BitBlock r800_ffff_tmp36, bytetest_a6_a6, r800_ffff_tmp37, bytetest_ae_ae;
		BitBlock r800_ffff_tmp38, r800_ffff_tmp39, bytetest_87, r800_ffff_tmp40;
		BitBlock bytetest_8e_8f, r800_ffff_tmp41, r800_ffff_tmp42, r800_ffff_tmp43;
		BitBlock r800_ffff_tmp44, bytetest_94_94, r800_ffff_tmp45, bytetest_88_8b;
		BitBlock bytetest_80_bf, r800_ffff_tmp46, r800_ffff_tmp47, r800_ffff_tmp48;
		BitBlock r800_ffff_tmp49, r800_ffff_tmp50, bytetest_b4_bf, r800_ffff_tmp51;
		BitBlock r800_ffff_tmp52, bytetest_8c, r800_ffff_tmp53, bytetest_a0_a1;
		BitBlock r800_ffff_tmp54, r800_ffff_tmp55, r800_ffff_tmp56, bytetest_8d;
		BitBlock bytetest_bc_bc, r800_ffff_tmp57, r800_ffff_tmp58, r800_ffff_tmp59;
		BitBlock bytetest_8e, r800_ffff_tmp60, r800_ffff_tmp61, r800_ffff_tmp62;
		BitBlock r800_ffff_tmp63, r800_ffff_tmp64, r800_ffff_tmp65, bytetest_9b_b3;
		BitBlock r800_ffff_tmp66, r800_ffff_tmp67, r800_ffff_tmp68, bytetest_8f;
		BitBlock r800_ffff_tmp69, r800_ffff_tmp70, r800_ffff_tmp71, bytetest_9c_a1;
		BitBlock r800_ffff_tmp72, r800_ffff_tmp73, r800_ffff_tmp74, r800_ffff_tmp75;
		BitBlock bytetest_96, r800_ffff_tmp76, r800_ffff_tmp77, r800_ffff_tmp78;
		BitBlock bytetest_97, r800_ffff_tmp79, r800_ffff_tmp80, r800_ffff_tmp81;
		BitBlock bytetest_b8_bf, r800_ffff_tmp82, bytetest_99, r800_ffff_tmp83;
		BitBlock r800_ffff_tmp84, r800_ffff_tmp85, r800_ffff_tmp86, r800_ffff_tmp87;
		BitBlock r800_ffff_tmp88, r800_ffff_tmp89, r800_ffff_tmp90, r800_ffff_tmp91;
		BitBlock r800_ffff_tmp92, r800_ffff_tmp93, r800_ffff_tmp94, r800_ffff_tmp95;
		BitBlock r800_ffff_tmp96, r800_ffff_tmp97, bytetest_87_a5, r800_ffff_tmp98;
		BitBlock bytetest_b0_bf, r800_ffff_tmp99, bytetest_a6, r800_ffff_tmp100;
		BitBlock bytetest_80_82, r800_ffff_tmp101, r800_ffff_tmp102, r800_ffff_tmp103;
		BitBlock r800_ffff_tmp104, bytetest_a4_a5, r800_ffff_tmp105, r800_ffff_tmp106;
		BitBlock r800_ffff_tmp107, r800_ffff_tmp108, bytetest_a7, r800_ffff_tmp109;
		BitBlock r800_ffff_tmp110, bytetest_80_97, r800_ffff_tmp111, r800_ffff_tmp112;
		BitBlock r800_ffff_tmp113, r800_ffff_tmp114, r800_ffff_tmp115;
		BitBlock r800_ffff_tmp116, r800_ffff_tmp117, bytetest_99_bf, r800_ffff_tmp118;
		BitBlock r800_ffff_tmp119, r800_ffff_tmp120, r800_ffff_tmp121, bytetest_9c_bb;
		BitBlock r800_ffff_tmp122, bytetest_a8_ab, r800_ffff_tmp123, r800_ffff_tmp124;
		BitBlock r800_ffff_tmp125, bytetest_be_bf, r800_ffff_tmp126, r800_ffff_tmp127;
		BitBlock bytetest_ad, r800_ffff_tmp128, r800_ffff_tmp129, r800_ffff_tmp130;
		BitBlock bytetest_ac, r800_ffff_tmp131, r800_ffff_tmp132, r800_ffff_tmp133;
		BitBlock r800_ffff_tmp134, r800_ffff_tmp135, r800_ffff_tmp136, bytetest_87_8c;
		BitBlock r800_ffff_tmp137, bytetest_ef, r800_ffff_tmp138, r800_ffff_tmp139;
		BitBlock r800_ffff_tmp140, r800_ffff_tmp141, r800_ffff_tmp142, bytetest_b9;
		BitBlock bytetest_a2_a2, r800_ffff_tmp143, r800_ffff_tmp144, r800_ffff_tmp145;
		BitBlock r800_ffff_tmp146, bytetest_a4_a6, r800_ffff_tmp147, bytetest_bc;
		BitBlock r800_ffff_tmp148, r800_ffff_tmp149, r800_ffff_tmp150;
		BitBlock r800_ffff_tmp151, bytetest_9c_9e, r800_ffff_tmp152, bytetest_bd;
		BitBlock bytetest_9c_9c, r800_ffff_tmp153, r800_ffff_tmp154, r800_ffff_tmp155;
		BitBlock bytetest_9e_9e, r800_ffff_tmp156, bytetest_bf, r800_ffff_tmp157;
		BitBlock r800_ffff_tmp158, r800_ffff_tmp159, r800_ffff_tmp160;
		BitBlock r800_ffff_tmp161, bytetest_a9_ac, r800_ffff_tmp162;




        struct_Sm.cc = simd<1>::constant<0>();
        tmp1 = simd_or(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp2, tmp1);
        tmp4 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_and(tmp4, tmp5);
        bytetest_2b_2b = simd_and(tmp3, tmp6);
        struct_Sm.cc = simd_or(bytetest_2b_2b, struct_Sm.cc);
        tmp7 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp8 = simd_andc(tmp7, tmp1);
        tmp9 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp10 = simd_and(tmp8, tmp9);
        bytetest_3c_3e = simd_andc(tmp10, tmp5);
        struct_Sm.cc = simd_or(bytetest_3c_3e, struct_Sm.cc);
        tmp11 = simd_andc(basis_bits.bit_1, basis_bits.bit_0);
        tmp12 = simd_and(tmp11, tmp7);
        tmp13 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp14 = simd_andc(tmp9, tmp13);
        bytetest_7c_7c = simd_and(tmp12, tmp14);
        struct_Sm.cc = simd_or(bytetest_7c_7c, struct_Sm.cc);
        tmp15 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp16 = simd_and(tmp9, tmp15);
        bytetest_7e_7e = simd_and(tmp12, tmp16);
        struct_Sm.cc = simd_or(bytetest_7e_7e, struct_Sm.cc);
        tmp17 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp18 = simd_and(tmp17, tmp7);
        tmp19 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp20 = simd_or(tmp19, tmp13);
        bytetest_f0 = simd_andc(tmp18, tmp20);
        tmp21 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp22 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp23 = simd_and(tmp21, tmp22);
        tmp24 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp25 = simd_and(tmp9, tmp24);
        bytetest_9d = simd_and(tmp23, tmp25);
        bytetest_9b = simd_and(tmp23, tmp6);
        tmp26 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp27 = simd_andc(tmp21, tmp26);
        tmp28 = simd_andc(tmp24, tmp19);
        bytetest_81_81 = simd_and(tmp27, tmp28);
        tmp29 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp29, carryQ.get_carry_in(0), tmp30));
        tmp31 = simd_and(tmp30, bytetest_f0);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp31, carryQ.get_carry_in(1), tmp32));
        tmp33 = simd_and(tmp32, bytetest_9d);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp33, carryQ.get_carry_in(2), tmp34));
        tmp35 = simd_and(tmp34, bytetest_9b);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp35, carryQ.get_carry_in(3), tmp36));
        tmp37 = simd_and(tmp36, bytetest_81_81);
        struct_Sm.cc = simd_or(tmp37, struct_Sm.cc);
        bytetest_f0 = simd_andc(tmp18, tmp20);
        bytetest_9d = simd_and(tmp23, tmp25);
        bytetest_9b = simd_and(tmp23, tmp6);
        bytetest_9b_9b = simd_and(tmp23, tmp6);
        tmp38 = simd_and(tmp36, bytetest_9b_9b);
        struct_Sm.cc = simd_or(tmp38, struct_Sm.cc);
        bytetest_f0 = simd_andc(tmp18, tmp20);
        bytetest_9d = simd_and(tmp23, tmp25);
        bytetest_9b = simd_and(tmp23, tmp6);
        tmp39 = simd_and(tmp21, tmp7);
        bytetest_bb_bb = simd_and(tmp39, tmp6);
        tmp40 = simd_and(tmp36, bytetest_bb_bb);
        struct_Sm.cc = simd_or(tmp40, struct_Sm.cc);
        bytetest_f0 = simd_andc(tmp18, tmp20);
        bytetest_9d = simd_and(tmp23, tmp25);
        bytetest_9c = simd_and(tmp23, tmp14);
        tmp41 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp42 = simd_and(tmp41, tmp24);
        bytetest_95_95 = simd_and(tmp23, tmp42);
        tmp43 = simd_and(tmp34, bytetest_9c);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp43, carryQ.get_carry_in(4), tmp44));
        tmp45 = simd_and(tmp44, bytetest_95_95);
        struct_Sm.cc = simd_or(tmp45, struct_Sm.cc);
        bytetest_f0 = simd_andc(tmp18, tmp20);
        bytetest_9d = simd_and(tmp23, tmp25);
        bytetest_9c = simd_and(tmp23, tmp14);
        bytetest_b5_b5 = simd_and(tmp39, tmp42);
        tmp46 = simd_and(tmp44, bytetest_b5_b5);
        struct_Sm.cc = simd_or(tmp46, struct_Sm.cc);
        bytetest_f0 = simd_andc(tmp18, tmp20);
        bytetest_9d = simd_and(tmp23, tmp25);
        bytetest_9d = simd_and(tmp23, tmp25);
        tmp47 = simd_and(tmp9, tmp5);
        bytetest_8f_8f = simd_and(tmp27, tmp47);
        tmp48 = simd_and(tmp34, bytetest_9d);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp48, carryQ.get_carry_in(5), tmp49));
        tmp50 = simd_and(tmp49, bytetest_8f_8f);
        struct_Sm.cc = simd_or(tmp50, struct_Sm.cc);
        bytetest_f0 = simd_andc(tmp18, tmp20);
        bytetest_9d = simd_and(tmp23, tmp25);
        bytetest_9d = simd_and(tmp23, tmp25);
        tmp51 = simd_and(tmp21, tmp2);
        bytetest_af_af = simd_and(tmp51, tmp47);
        tmp52 = simd_and(tmp49, bytetest_af_af);
        struct_Sm.cc = simd_or(tmp52, struct_Sm.cc);
        bytetest_f0 = simd_andc(tmp18, tmp20);
        bytetest_9d = simd_and(tmp23, tmp25);
        bytetest_9e = simd_and(tmp23, tmp16);
        tmp53 = simd_and(tmp4, tmp24);
        bytetest_89_89 = simd_and(tmp27, tmp53);
        tmp54 = simd_and(tmp34, bytetest_9e);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp54, carryQ.get_carry_in(6), tmp55));
        tmp56 = simd_and(tmp55, bytetest_89_89);
        struct_Sm.cc = simd_or(tmp56, struct_Sm.cc);
        bytetest_f0 = simd_andc(tmp18, tmp20);
        bytetest_9d = simd_and(tmp23, tmp25);
        bytetest_9e = simd_and(tmp23, tmp16);
        bytetest_a9_a9 = simd_and(tmp51, tmp53);
        tmp57 = simd_and(tmp55, bytetest_a9_a9);
        struct_Sm.cc = simd_or(tmp57, struct_Sm.cc);
        bytetest_f0 = simd_andc(tmp18, tmp20);
        bytetest_9d = simd_and(tmp23, tmp25);
        bytetest_9f = simd_and(tmp23, tmp47);
        tmp58 = simd_andc(tmp5, tmp19);
        bytetest_83_83 = simd_and(tmp27, tmp58);
        tmp59 = simd_and(tmp34, bytetest_9f);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp59, carryQ.get_carry_in(7), tmp60));
        tmp61 = simd_and(tmp60, bytetest_83_83);
        struct_Sm.cc = simd_or(tmp61, struct_Sm.cc);
        bytetest_f0 = simd_andc(tmp18, tmp20);
        bytetest_9e = simd_and(tmp23, tmp16);
        bytetest_bb = simd_and(tmp39, tmp6);
        tmp62 = simd_or(tmp19, basis_bits.bit_6);
        bytetest_b0_b1 = simd_andc(tmp39, tmp62);
        tmp63 = simd_and(tmp32, bytetest_9e);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(tmp63, carryQ.get_carry_in(8), tmp64));
        tmp65 = simd_and(tmp64, bytetest_bb);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(tmp65, carryQ.get_carry_in(9), tmp66));
        tmp67 = simd_and(tmp66, bytetest_b0_b1);
        struct_Sm.cc = simd_or(tmp67, struct_Sm.cc);
        tmp68 = simd_andc(tmp17, basis_bits.bit_2);
        tmp69 = simd_or(basis_bits.bit_3, tmp62);
        bytetest_c2_df = simd_and(tmp68, tmp69);
        if ((bitblock::any(bytetest_c2_df) || carryQ.CarryTest(10, 4))) {
          r80_7ff_tmp1 = simd_andc(tmp17, tmp26);
          r80_7ff_tmp2 = simd_andc(tmp15, tmp19);
          bytetest_c2 = simd_and(r80_7ff_tmp1, r80_7ff_tmp2);
          bytetest_ac_ac = simd_and(tmp51, tmp14);
          r80_7ff_tmp3 = simd_and(tmp30, bytetest_c2);
          carryQ.cq[10] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp3, carryQ.get_carry_in(10), r80_7ff_tmp4));
          r80_7ff_tmp5 = simd_and(r80_7ff_tmp4, bytetest_ac_ac);
          struct_Sm.cc = simd_or(r80_7ff_tmp5, struct_Sm.cc);
          bytetest_c2 = simd_and(r80_7ff_tmp1, r80_7ff_tmp2);
          bytetest_b1_b1 = simd_and(tmp39, tmp28);
          r80_7ff_tmp6 = simd_and(r80_7ff_tmp4, bytetest_b1_b1);
          struct_Sm.cc = simd_or(r80_7ff_tmp6, struct_Sm.cc);
          bytetest_c3 = simd_and(r80_7ff_tmp1, tmp58);
          r80_7ff_tmp7 = simd_and(tmp41, tmp5);
          bytetest_97_97 = simd_and(tmp23, r80_7ff_tmp7);
          r80_7ff_tmp8 = simd_and(tmp30, bytetest_c3);
          carryQ.cq[11] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp8, carryQ.get_carry_in(11), r80_7ff_tmp9));
          r80_7ff_tmp10 = simd_and(r80_7ff_tmp9, bytetest_97_97);
          struct_Sm.cc = simd_or(r80_7ff_tmp10, struct_Sm.cc);
          bytetest_c3 = simd_and(r80_7ff_tmp1, tmp58);
          bytetest_b7_b7 = simd_and(tmp39, r80_7ff_tmp7);
          r80_7ff_tmp11 = simd_and(r80_7ff_tmp9, bytetest_b7_b7);
          struct_Sm.cc = simd_or(r80_7ff_tmp11, struct_Sm.cc);
          bytetest_cf = simd_and(r80_7ff_tmp1, tmp47);
          r80_7ff_tmp12 = simd_and(tmp41, tmp15);
          bytetest_b6_b6 = simd_and(tmp39, r80_7ff_tmp12);
          r80_7ff_tmp13 = simd_and(tmp30, bytetest_cf);
          carryQ.cq[12] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp13, carryQ.get_carry_in(12), r80_7ff_tmp14));
          r80_7ff_tmp15 = simd_and(r80_7ff_tmp14, bytetest_b6_b6);
          struct_Sm.cc = simd_or(r80_7ff_tmp15, struct_Sm.cc);
          r80_7ff_tmp16 = simd_and(tmp17, tmp22);
          r80_7ff_tmp17 = simd_andc(tmp4, tmp13);
          bytetest_d8 = simd_and(r80_7ff_tmp16, r80_7ff_tmp17);
          r80_7ff_tmp18 = simd_or(basis_bits.bit_5, tmp13);
          r80_7ff_tmp19 = simd_not(r80_7ff_tmp18);
          r80_7ff_tmp20 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
          r80_7ff_tmp21 = simd_or(simd_and(basis_bits.bit_4, r80_7ff_tmp19), simd_andc(r80_7ff_tmp20, basis_bits.bit_4));
          bytetest_86_88 = simd_and(tmp27, r80_7ff_tmp21);
          r80_7ff_tmp22 = simd_and(tmp30, bytetest_d8);
          carryQ.cq[13] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp22, carryQ.get_carry_in(13), r80_7ff_tmp23));
          r80_7ff_tmp24 = simd_and(r80_7ff_tmp23, bytetest_86_88);
          struct_Sm.cc = simd_or(r80_7ff_tmp24, struct_Sm.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(10, 4);
        }
        tmp70 = simd_and(tmp17, tmp2);
        tmp71 = simd_or(basis_bits.bit_5, tmp13);
        tmp72 = simd_or(basis_bits.bit_4, tmp71);
        bytetest_e1_ef = simd_and(tmp70, tmp72);
        bytetest_e0 = simd_andc(tmp70, tmp20);
        bytetest_a0_bf = simd_and(tmp21, basis_bits.bit_2);
        tmp73 = simd_and(tmp30, bytetest_e0);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(tmp73, carryQ.get_carry_in(14), tmp74));
        tmp75 = simd_and(tmp74, bytetest_a0_bf);
        tmp76 = simd_or(tmp75, bytetest_e1_ef);
        if ((bitblock::any(tmp76) || carryQ.CarryTest(15, 28))) {
          r800_ffff_tmp1 = simd_and(tmp17, tmp2);
          r800_ffff_tmp2 = simd_andc(tmp15, tmp19);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_81 = simd_and(tmp27, tmp28);
          r800_ffff_tmp3 = simd_andc(tmp41, tmp13);
          bytetest_84_84 = simd_and(tmp27, r800_ffff_tmp3);
          r800_ffff_tmp4 = simd_and(tmp30, bytetest_e2);
          carryQ.cq[15] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp4, carryQ.get_carry_in(15), r800_ffff_tmp5));
          r800_ffff_tmp6 = simd_and(r800_ffff_tmp5, bytetest_81);
          carryQ.cq[16] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp6, carryQ.get_carry_in(16), r800_ffff_tmp7));
          r800_ffff_tmp8 = simd_and(r800_ffff_tmp7, bytetest_84_84);
          struct_Sm.cc = simd_or(r800_ffff_tmp8, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_81 = simd_and(tmp27, tmp28);
          bytetest_92_92 = simd_and(tmp23, r800_ffff_tmp2);
          r800_ffff_tmp9 = simd_and(r800_ffff_tmp7, bytetest_92_92);
          struct_Sm.cc = simd_or(r800_ffff_tmp9, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_81 = simd_and(tmp27, tmp28);
          r800_ffff_tmp10 = simd_and(tmp39, basis_bits.bit_4);
          r800_ffff_tmp11 = simd_not(tmp13);
          r800_ffff_tmp12 = simd_or(simd_and(basis_bits.bit_5, r800_ffff_tmp11), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
          bytetest_ba_bc = simd_and(r800_ffff_tmp10, r800_ffff_tmp12);
          r800_ffff_tmp13 = simd_and(r800_ffff_tmp7, bytetest_ba_bc);
          struct_Sm.cc = simd_or(r800_ffff_tmp13, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_82 = simd_and(tmp27, r800_ffff_tmp2);
          r800_ffff_tmp14 = simd_and(tmp27, basis_bits.bit_4);
          bytetest_8a_8c = simd_and(r800_ffff_tmp14, r800_ffff_tmp12);
          r800_ffff_tmp15 = simd_and(r800_ffff_tmp5, bytetest_82);
          carryQ.cq[17] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp15, carryQ.get_carry_in(17), r800_ffff_tmp16));
          r800_ffff_tmp17 = simd_and(r800_ffff_tmp16, bytetest_8a_8c);
          struct_Sm.cc = simd_or(r800_ffff_tmp17, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_84 = simd_and(tmp27, r800_ffff_tmp3);
          r800_ffff_tmp18 = simd_andc(tmp4, tmp13);
          bytetest_98_98 = simd_and(tmp23, r800_ffff_tmp18);
          r800_ffff_tmp19 = simd_and(r800_ffff_tmp5, bytetest_84);
          carryQ.cq[18] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp19, carryQ.get_carry_in(18), r800_ffff_tmp20));
          r800_ffff_tmp21 = simd_and(r800_ffff_tmp20, bytetest_98_98);
          struct_Sm.cc = simd_or(r800_ffff_tmp21, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_85 = simd_and(tmp27, tmp42);
          r800_ffff_tmp22 = simd_andc(tmp27, basis_bits.bit_4);
          r800_ffff_tmp23 = simd_and(basis_bits.bit_5, tmp13);
          bytetest_80_84 = simd_andc(r800_ffff_tmp22, r800_ffff_tmp23);
          r800_ffff_tmp24 = simd_and(r800_ffff_tmp5, bytetest_85);
          carryQ.cq[19] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp24, carryQ.get_carry_in(19), r800_ffff_tmp25));
          r800_ffff_tmp26 = simd_and(r800_ffff_tmp25, bytetest_80_84);
          struct_Sm.cc = simd_or(r800_ffff_tmp26, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_85 = simd_and(tmp27, tmp42);
          bytetest_8b_8b = simd_and(tmp27, tmp6);
          r800_ffff_tmp27 = simd_and(r800_ffff_tmp25, bytetest_8b_8b);
          struct_Sm.cc = simd_or(r800_ffff_tmp27, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          r800_ffff_tmp28 = simd_and(tmp41, tmp15);
          bytetest_86 = simd_and(tmp27, r800_ffff_tmp28);
          r800_ffff_tmp29 = simd_andc(tmp23, basis_bits.bit_4);
          bytetest_90_94 = simd_andc(r800_ffff_tmp29, r800_ffff_tmp23);
          r800_ffff_tmp30 = simd_and(r800_ffff_tmp5, bytetest_86);
          carryQ.cq[20] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp30, carryQ.get_carry_in(20), r800_ffff_tmp31));
          r800_ffff_tmp32 = simd_and(r800_ffff_tmp31, bytetest_90_94);
          struct_Sm.cc = simd_or(r800_ffff_tmp32, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_86 = simd_and(tmp27, r800_ffff_tmp28);
          r800_ffff_tmp33 = simd_and(tmp4, basis_bits.bit_6);
          bytetest_9a_9b = simd_and(tmp23, r800_ffff_tmp33);
          r800_ffff_tmp34 = simd_and(r800_ffff_tmp31, bytetest_9a_9b);
          struct_Sm.cc = simd_or(r800_ffff_tmp34, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_86 = simd_and(tmp27, r800_ffff_tmp28);
          bytetest_a0_a0 = simd_andc(tmp51, tmp20);
          r800_ffff_tmp35 = simd_and(r800_ffff_tmp31, bytetest_a0_a0);
          struct_Sm.cc = simd_or(r800_ffff_tmp35, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_86 = simd_and(tmp27, r800_ffff_tmp28);
          bytetest_a3_a3 = simd_and(tmp51, tmp58);
          r800_ffff_tmp36 = simd_and(r800_ffff_tmp31, bytetest_a3_a3);
          struct_Sm.cc = simd_or(r800_ffff_tmp36, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_86 = simd_and(tmp27, r800_ffff_tmp28);
          bytetest_a6_a6 = simd_and(tmp51, r800_ffff_tmp28);
          r800_ffff_tmp37 = simd_and(r800_ffff_tmp31, bytetest_a6_a6);
          struct_Sm.cc = simd_or(r800_ffff_tmp37, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_86 = simd_and(tmp27, r800_ffff_tmp28);
          bytetest_ae_ae = simd_and(tmp51, tmp16);
          r800_ffff_tmp38 = simd_and(r800_ffff_tmp31, bytetest_ae_ae);
          struct_Sm.cc = simd_or(r800_ffff_tmp38, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          r800_ffff_tmp39 = simd_and(tmp41, tmp5);
          bytetest_87 = simd_and(tmp27, r800_ffff_tmp39);
          r800_ffff_tmp40 = simd_and(tmp9, basis_bits.bit_6);
          bytetest_8e_8f = simd_and(tmp27, r800_ffff_tmp40);
          r800_ffff_tmp41 = simd_and(r800_ffff_tmp5, bytetest_87);
          carryQ.cq[21] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp41, carryQ.get_carry_in(21), r800_ffff_tmp42));
          r800_ffff_tmp43 = simd_and(r800_ffff_tmp42, bytetest_8e_8f);
          struct_Sm.cc = simd_or(r800_ffff_tmp43, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_87 = simd_and(tmp27, r800_ffff_tmp39);
          bytetest_92_92 = simd_and(tmp23, r800_ffff_tmp2);
          r800_ffff_tmp44 = simd_and(r800_ffff_tmp42, bytetest_92_92);
          struct_Sm.cc = simd_or(r800_ffff_tmp44, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_87 = simd_and(tmp27, r800_ffff_tmp39);
          bytetest_94_94 = simd_and(tmp23, r800_ffff_tmp3);
          r800_ffff_tmp45 = simd_and(r800_ffff_tmp42, bytetest_94_94);
          struct_Sm.cc = simd_or(r800_ffff_tmp45, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_88_8b = simd_and(tmp27, tmp4);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp46 = simd_and(r800_ffff_tmp5, bytetest_88_8b);
          carryQ.cq[22] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp46, carryQ.get_carry_in(22), r800_ffff_tmp47));
          r800_ffff_tmp48 = simd_and(r800_ffff_tmp47, bytetest_80_bf);
          r800_ffff_tmp49 = simd_andc(bytetest_80_bf, tmp26);
          bytetest_87 = simd_and(r800_ffff_tmp49, r800_ffff_tmp39);
          r800_ffff_tmp50 = simd_and(bytetest_80_bf, tmp7);
          bytetest_b4_bf = simd_and(r800_ffff_tmp50, tmp19);
          r800_ffff_tmp51 = simd_and(r800_ffff_tmp42, bytetest_b4_bf);
          r800_ffff_tmp52 = simd_or(r800_ffff_tmp51, r800_ffff_tmp48);
          struct_Sm.cc = simd_or(r800_ffff_tmp52, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_8c = simd_and(r800_ffff_tmp49, tmp14);
          r800_ffff_tmp53 = simd_and(bytetest_80_bf, tmp2);
          bytetest_a0_a1 = simd_andc(r800_ffff_tmp53, tmp62);
          r800_ffff_tmp54 = simd_and(r800_ffff_tmp5, bytetest_8c);
          carryQ.cq[23] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp54, carryQ.get_carry_in(23), r800_ffff_tmp55));
          r800_ffff_tmp56 = simd_and(r800_ffff_tmp55, bytetest_a0_a1);
          struct_Sm.cc = simd_or(r800_ffff_tmp56, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_8d = simd_and(r800_ffff_tmp49, tmp25);
          bytetest_bc_bc = simd_and(r800_ffff_tmp50, tmp14);
          r800_ffff_tmp57 = simd_and(r800_ffff_tmp5, bytetest_8d);
          carryQ.cq[24] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp57, carryQ.get_carry_in(24), r800_ffff_tmp58));
          r800_ffff_tmp59 = simd_and(r800_ffff_tmp58, bytetest_bc_bc);
          struct_Sm.cc = simd_or(r800_ffff_tmp59, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_8e = simd_and(r800_ffff_tmp49, tmp16);
          r800_ffff_tmp60 = simd_and(basis_bits.bit_3, tmp19);
          r800_ffff_tmp61 = simd_not(r800_ffff_tmp60);
          r800_ffff_tmp62 = simd_or(basis_bits.bit_5, tmp5);
          r800_ffff_tmp63 = simd_and(basis_bits.bit_4, r800_ffff_tmp62);
          r800_ffff_tmp64 = simd_and(basis_bits.bit_3, r800_ffff_tmp63);
          r800_ffff_tmp65 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp61), simd_andc(r800_ffff_tmp64, basis_bits.bit_2));
          bytetest_9b_b3 = simd_and(bytetest_80_bf, r800_ffff_tmp65);
          r800_ffff_tmp66 = simd_and(r800_ffff_tmp5, bytetest_8e);
          carryQ.cq[25] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp66, carryQ.get_carry_in(25), r800_ffff_tmp67));
          r800_ffff_tmp68 = simd_and(r800_ffff_tmp67, bytetest_9b_b3);
          struct_Sm.cc = simd_or(r800_ffff_tmp68, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_8f = simd_and(r800_ffff_tmp49, tmp47);
          r800_ffff_tmp69 = simd_not(tmp69);
          r800_ffff_tmp70 = simd_and(basis_bits.bit_3, tmp9);
          r800_ffff_tmp71 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp69), simd_andc(r800_ffff_tmp70, basis_bits.bit_2));
          bytetest_9c_a1 = simd_and(bytetest_80_bf, r800_ffff_tmp71);
          r800_ffff_tmp72 = simd_and(r800_ffff_tmp5, bytetest_8f);
          carryQ.cq[26] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp72, carryQ.get_carry_in(26), r800_ffff_tmp73));
          r800_ffff_tmp74 = simd_and(r800_ffff_tmp73, bytetest_9c_a1);
          struct_Sm.cc = simd_or(r800_ffff_tmp74, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          r800_ffff_tmp75 = simd_and(bytetest_80_bf, tmp22);
          bytetest_96 = simd_and(r800_ffff_tmp75, r800_ffff_tmp28);
          bytetest_b7_b7 = simd_and(r800_ffff_tmp50, r800_ffff_tmp39);
          r800_ffff_tmp76 = simd_and(r800_ffff_tmp5, bytetest_96);
          carryQ.cq[27] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp76, carryQ.get_carry_in(27), r800_ffff_tmp77));
          r800_ffff_tmp78 = simd_and(r800_ffff_tmp77, bytetest_b7_b7);
          struct_Sm.cc = simd_or(r800_ffff_tmp78, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_97 = simd_and(r800_ffff_tmp75, r800_ffff_tmp39);
          bytetest_81_81 = simd_and(r800_ffff_tmp49, tmp28);
          r800_ffff_tmp79 = simd_and(r800_ffff_tmp5, bytetest_97);
          carryQ.cq[28] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp79, carryQ.get_carry_in(28), r800_ffff_tmp80));
          r800_ffff_tmp81 = simd_and(r800_ffff_tmp80, bytetest_81_81);
          struct_Sm.cc = simd_or(r800_ffff_tmp81, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_97 = simd_and(r800_ffff_tmp75, r800_ffff_tmp39);
          bytetest_b8_bf = simd_and(r800_ffff_tmp50, basis_bits.bit_4);
          r800_ffff_tmp82 = simd_and(r800_ffff_tmp80, bytetest_b8_bf);
          struct_Sm.cc = simd_or(r800_ffff_tmp82, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_99 = simd_and(r800_ffff_tmp75, tmp53);
          bytetest_af_af = simd_and(r800_ffff_tmp53, tmp47);
          r800_ffff_tmp83 = simd_and(r800_ffff_tmp5, bytetest_99);
          carryQ.cq[29] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp83, carryQ.get_carry_in(29), r800_ffff_tmp84));
          r800_ffff_tmp85 = simd_and(r800_ffff_tmp84, bytetest_af_af);
          struct_Sm.cc = simd_or(r800_ffff_tmp85, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_9f = simd_and(r800_ffff_tmp75, tmp47);
          r800_ffff_tmp86 = simd_andc(r800_ffff_tmp49, basis_bits.bit_4);
          bytetest_80_84 = simd_andc(r800_ffff_tmp86, r800_ffff_tmp23);
          r800_ffff_tmp87 = simd_and(r800_ffff_tmp5, bytetest_9f);
          carryQ.cq[30] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp87, carryQ.get_carry_in(30), r800_ffff_tmp88));
          r800_ffff_tmp89 = simd_and(r800_ffff_tmp88, bytetest_80_84);
          struct_Sm.cc = simd_or(r800_ffff_tmp89, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_9f = simd_and(r800_ffff_tmp75, tmp47);
          r800_ffff_tmp90 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
          r800_ffff_tmp91 = simd_or(basis_bits.bit_4, r800_ffff_tmp90);
          r800_ffff_tmp92 = simd_or(basis_bits.bit_3, r800_ffff_tmp91);
          r800_ffff_tmp93 = simd_not(r800_ffff_tmp92);
          r800_ffff_tmp94 = simd_and(basis_bits.bit_5, tmp5);
          r800_ffff_tmp95 = simd_or(basis_bits.bit_4, r800_ffff_tmp94);
          r800_ffff_tmp96 = simd_or(basis_bits.bit_3, r800_ffff_tmp95);
          r800_ffff_tmp97 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp93), simd_andc(r800_ffff_tmp96, basis_bits.bit_2));
          bytetest_87_a5 = simd_and(bytetest_80_bf, r800_ffff_tmp97);
          r800_ffff_tmp98 = simd_and(r800_ffff_tmp88, bytetest_87_a5);
          struct_Sm.cc = simd_or(r800_ffff_tmp98, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_9f = simd_and(r800_ffff_tmp75, tmp47);
          bytetest_b0_bf = simd_and(bytetest_80_bf, tmp7);
          r800_ffff_tmp99 = simd_and(r800_ffff_tmp88, bytetest_b0_bf);
          struct_Sm.cc = simd_or(r800_ffff_tmp99, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_a6 = simd_and(r800_ffff_tmp53, r800_ffff_tmp28);
          r800_ffff_tmp100 = simd_andc(r800_ffff_tmp49, tmp19);
          bytetest_80_82 = simd_andc(r800_ffff_tmp100, tmp5);
          r800_ffff_tmp101 = simd_and(r800_ffff_tmp5, bytetest_a6);
          carryQ.cq[31] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp101, carryQ.get_carry_in(31), r800_ffff_tmp102));
          r800_ffff_tmp103 = simd_and(r800_ffff_tmp102, bytetest_80_82);
          r800_ffff_tmp104 = simd_andc(tmp41, basis_bits.bit_6);
          bytetest_a4_a5 = simd_and(r800_ffff_tmp53, r800_ffff_tmp104);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp105 = simd_and(r800_ffff_tmp5, bytetest_a4_a5);
          carryQ.cq[32] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp105, carryQ.get_carry_in(32), r800_ffff_tmp106));
          r800_ffff_tmp107 = simd_and(r800_ffff_tmp106, bytetest_80_bf);
          r800_ffff_tmp108 = simd_or(r800_ffff_tmp107, r800_ffff_tmp103);
          struct_Sm.cc = simd_or(r800_ffff_tmp108, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_a7 = simd_and(r800_ffff_tmp53, r800_ffff_tmp39);
          r800_ffff_tmp109 = simd_andc(bytetest_80_bf, basis_bits.bit_2);
          r800_ffff_tmp110 = simd_and(basis_bits.bit_3, basis_bits.bit_4);
          bytetest_80_97 = simd_andc(r800_ffff_tmp109, r800_ffff_tmp110);
          r800_ffff_tmp111 = simd_and(r800_ffff_tmp5, bytetest_a7);
          carryQ.cq[33] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp111, carryQ.get_carry_in(33), r800_ffff_tmp112));
          r800_ffff_tmp113 = simd_and(r800_ffff_tmp112, bytetest_80_97);
          bytetest_a6 = simd_and(r800_ffff_tmp53, r800_ffff_tmp28);
          r800_ffff_tmp114 = simd_or(basis_bits.bit_5, tmp13);
          r800_ffff_tmp115 = simd_and(basis_bits.bit_4, r800_ffff_tmp114);
          r800_ffff_tmp116 = simd_and(basis_bits.bit_3, r800_ffff_tmp115);
          r800_ffff_tmp117 = simd_or(basis_bits.bit_2, r800_ffff_tmp116);
          bytetest_99_bf = simd_and(bytetest_80_bf, r800_ffff_tmp117);
          r800_ffff_tmp118 = simd_and(r800_ffff_tmp102, bytetest_99_bf);
          r800_ffff_tmp119 = simd_or(r800_ffff_tmp118, r800_ffff_tmp113);
          struct_Sm.cc = simd_or(r800_ffff_tmp119, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_a7 = simd_and(r800_ffff_tmp53, r800_ffff_tmp39);
          r800_ffff_tmp120 = simd_not(r800_ffff_tmp70);
          r800_ffff_tmp121 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp120), simd_andc(r800_ffff_tmp70, basis_bits.bit_2));
          bytetest_9c_bb = simd_and(bytetest_80_bf, r800_ffff_tmp121);
          r800_ffff_tmp122 = simd_and(r800_ffff_tmp112, bytetest_9c_bb);
          struct_Sm.cc = simd_or(r800_ffff_tmp122, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_a8_ab = simd_and(r800_ffff_tmp53, tmp4);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp123 = simd_and(r800_ffff_tmp5, bytetest_a8_ab);
          carryQ.cq[34] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp123, carryQ.get_carry_in(34), r800_ffff_tmp124));
          r800_ffff_tmp125 = simd_and(r800_ffff_tmp124, bytetest_80_bf);
          bytetest_a7 = simd_and(r800_ffff_tmp53, r800_ffff_tmp39);
          bytetest_be_bf = simd_and(bytetest_b0_bf, r800_ffff_tmp40);
          r800_ffff_tmp126 = simd_and(r800_ffff_tmp112, bytetest_be_bf);
          r800_ffff_tmp127 = simd_or(r800_ffff_tmp126, r800_ffff_tmp125);
          struct_Sm.cc = simd_or(r800_ffff_tmp127, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_ad = simd_and(r800_ffff_tmp53, tmp25);
          bytetest_80_84 = simd_andc(r800_ffff_tmp86, r800_ffff_tmp23);
          r800_ffff_tmp128 = simd_and(r800_ffff_tmp5, bytetest_ad);
          carryQ.cq[35] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp128, carryQ.get_carry_in(35), r800_ffff_tmp129));
          r800_ffff_tmp130 = simd_and(r800_ffff_tmp129, bytetest_80_84);
          bytetest_ac = simd_and(r800_ffff_tmp53, tmp14);
          bytetest_b0_bf = simd_and(bytetest_80_bf, tmp7);
          r800_ffff_tmp131 = simd_and(r800_ffff_tmp5, bytetest_ac);
          carryQ.cq[36] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp131, carryQ.get_carry_in(36), r800_ffff_tmp132));
          r800_ffff_tmp133 = simd_and(r800_ffff_tmp132, bytetest_b0_bf);
          r800_ffff_tmp134 = simd_or(r800_ffff_tmp133, r800_ffff_tmp130);
          struct_Sm.cc = simd_or(r800_ffff_tmp134, struct_Sm.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_ad = simd_and(r800_ffff_tmp53, tmp25);
          r800_ffff_tmp135 = simd_not(r800_ffff_tmp23);
          r800_ffff_tmp136 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp135), simd_andc(r800_ffff_tmp94, basis_bits.bit_4));
          bytetest_87_8c = simd_and(r800_ffff_tmp49, r800_ffff_tmp136);
          r800_ffff_tmp137 = simd_and(r800_ffff_tmp129, bytetest_87_8c);
          struct_Sm.cc = simd_or(r800_ffff_tmp137, struct_Sm.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp47);
          bytetest_ac = simd_and(r800_ffff_tmp53, tmp14);
          bytetest_a9_a9 = simd_and(r800_ffff_tmp53, tmp53);
          r800_ffff_tmp138 = simd_and(tmp30, bytetest_ef);
          carryQ.cq[37] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp138, carryQ.get_carry_in(37), r800_ffff_tmp139));
          r800_ffff_tmp140 = simd_and(r800_ffff_tmp139, bytetest_ac);
          carryQ.cq[38] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp140, carryQ.get_carry_in(38), r800_ffff_tmp141));
          r800_ffff_tmp142 = simd_and(r800_ffff_tmp141, bytetest_a9_a9);
          struct_Sm.cc = simd_or(r800_ffff_tmp142, struct_Sm.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp47);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp53);
          bytetest_a2_a2 = simd_and(r800_ffff_tmp53, r800_ffff_tmp2);
          r800_ffff_tmp143 = simd_and(r800_ffff_tmp139, bytetest_b9);
          carryQ.cq[39] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp143, carryQ.get_carry_in(39), r800_ffff_tmp144));
          r800_ffff_tmp145 = simd_and(r800_ffff_tmp144, bytetest_a2_a2);
          struct_Sm.cc = simd_or(r800_ffff_tmp145, struct_Sm.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp47);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp53);
          r800_ffff_tmp146 = simd_and(r800_ffff_tmp53, tmp41);
          bytetest_a4_a6 = simd_andc(r800_ffff_tmp146, tmp5);
          r800_ffff_tmp147 = simd_and(r800_ffff_tmp144, bytetest_a4_a6);
          struct_Sm.cc = simd_or(r800_ffff_tmp147, struct_Sm.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp47);
          bytetest_bc = simd_and(bytetest_b0_bf, tmp14);
          bytetest_8b_8b = simd_and(r800_ffff_tmp49, tmp6);
          r800_ffff_tmp148 = simd_and(r800_ffff_tmp139, bytetest_bc);
          carryQ.cq[40] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp148, carryQ.get_carry_in(40), r800_ffff_tmp149));
          r800_ffff_tmp150 = simd_and(r800_ffff_tmp149, bytetest_8b_8b);
          struct_Sm.cc = simd_or(r800_ffff_tmp150, struct_Sm.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp47);
          bytetest_bc = simd_and(bytetest_b0_bf, tmp14);
          r800_ffff_tmp151 = simd_and(r800_ffff_tmp75, tmp9);
          bytetest_9c_9e = simd_andc(r800_ffff_tmp151, tmp5);
          r800_ffff_tmp152 = simd_and(r800_ffff_tmp149, bytetest_9c_9e);
          struct_Sm.cc = simd_or(r800_ffff_tmp152, struct_Sm.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp47);
          bytetest_bd = simd_and(bytetest_b0_bf, tmp25);
          bytetest_9c_9c = simd_and(r800_ffff_tmp75, tmp14);
          r800_ffff_tmp153 = simd_and(r800_ffff_tmp139, bytetest_bd);
          carryQ.cq[41] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp153, carryQ.get_carry_in(41), r800_ffff_tmp154));
          r800_ffff_tmp155 = simd_and(r800_ffff_tmp154, bytetest_9c_9c);
          struct_Sm.cc = simd_or(r800_ffff_tmp155, struct_Sm.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp47);
          bytetest_bd = simd_and(bytetest_b0_bf, tmp25);
          bytetest_9e_9e = simd_and(r800_ffff_tmp75, tmp16);
          r800_ffff_tmp156 = simd_and(r800_ffff_tmp154, bytetest_9e_9e);
          struct_Sm.cc = simd_or(r800_ffff_tmp156, struct_Sm.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp47);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp47);
          bytetest_a2_a2 = simd_and(r800_ffff_tmp53, r800_ffff_tmp2);
          r800_ffff_tmp157 = simd_and(r800_ffff_tmp139, bytetest_bf);
          carryQ.cq[42] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp157, carryQ.get_carry_in(42), r800_ffff_tmp158));
          r800_ffff_tmp159 = simd_and(r800_ffff_tmp158, bytetest_a2_a2);
          struct_Sm.cc = simd_or(r800_ffff_tmp159, struct_Sm.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp47);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp47);
          r800_ffff_tmp160 = simd_and(r800_ffff_tmp53, basis_bits.bit_4);
          r800_ffff_tmp161 = simd_or(simd_and(basis_bits.bit_5, r800_ffff_tmp11), simd_andc(tmp13, basis_bits.bit_5));
          bytetest_a9_ac = simd_and(r800_ffff_tmp160, r800_ffff_tmp161);
          r800_ffff_tmp162 = simd_and(r800_ffff_tmp158, bytetest_a9_ac);
          struct_Sm.cc = simd_or(r800_ffff_tmp162, struct_Sm.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(15, 28);
        }
  }
  CarryArray<43, 0> carryQ;
  };

  struct Sc {
  Sc() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Sc & struct_Sc) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_24_24, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, bytetest_c2_df, r80_7ff_tmp1, r80_7ff_tmp2;
		BitBlock r80_7ff_tmp3, r80_7ff_tmp4, r80_7ff_tmp5, r80_7ff_tmp6, bytetest_c2;
		BitBlock r80_7ff_tmp7, r80_7ff_tmp8, r80_7ff_tmp9, r80_7ff_tmp10;
		BitBlock r80_7ff_tmp11, bytetest_a2_a5, r80_7ff_tmp12, r80_7ff_tmp13;
		BitBlock r80_7ff_tmp14, r80_7ff_tmp15, r80_7ff_tmp16, r80_7ff_tmp17;
		BitBlock r80_7ff_tmp18, r80_7ff_tmp19, bytetest_d6, r80_7ff_tmp20;
		BitBlock r80_7ff_tmp21, r80_7ff_tmp22, r80_7ff_tmp23, bytetest_8f_8f;
		BitBlock r80_7ff_tmp24, r80_7ff_tmp25, r80_7ff_tmp26, r80_7ff_tmp27;
		BitBlock r80_7ff_tmp28, bytetest_d8, r80_7ff_tmp29, bytetest_8b_8b;
		BitBlock r80_7ff_tmp30, r80_7ff_tmp31, r80_7ff_tmp32, tmp12, tmp13, tmp14;
		BitBlock bytetest_e1_ef, tmp15, bytetest_e0, tmp16, bytetest_a0_bf, tmp17;
		BitBlock tmp18, tmp19, tmp20, tmp21, tmp22, r800_ffff_tmp1, r800_ffff_tmp2;
		BitBlock r800_ffff_tmp3, r800_ffff_tmp4, r800_ffff_tmp5, r800_ffff_tmp6;
		BitBlock bytetest_a7, r800_ffff_tmp7, r800_ffff_tmp8, r800_ffff_tmp9;
		BitBlock bytetest_b2_b3, r800_ffff_tmp10, r800_ffff_tmp11, r800_ffff_tmp12;
		BitBlock r800_ffff_tmp13, r800_ffff_tmp14, r800_ffff_tmp15, r800_ffff_tmp16;
		BitBlock r800_ffff_tmp17, r800_ffff_tmp18, bytetest_bb_bb, r800_ffff_tmp19;
		BitBlock bytetest_ab, r800_ffff_tmp20, r800_ffff_tmp21, bytetest_b1_b1;
		BitBlock r800_ffff_tmp22, r800_ffff_tmp23, r800_ffff_tmp24, r800_ffff_tmp25;
		BitBlock r800_ffff_tmp26, bytetest_af, r800_ffff_tmp27, bytetest_b9_b9;
		BitBlock r800_ffff_tmp28, r800_ffff_tmp29, r800_ffff_tmp30, r800_ffff_tmp31;
		BitBlock bytetest_b8, bytetest_bf_bf, r800_ffff_tmp32, r800_ffff_tmp33;
		BitBlock r800_ffff_tmp34, bytetest_e1, r800_ffff_tmp35, r800_ffff_tmp36;
		BitBlock bytetest_9f, bytetest_9b_9b, r800_ffff_tmp37, r800_ffff_tmp38;
		BitBlock r800_ffff_tmp39, r800_ffff_tmp40, r800_ffff_tmp41, r800_ffff_tmp42;
		BitBlock r800_ffff_tmp43, bytetest_e2, r800_ffff_tmp44, r800_ffff_tmp45;
		BitBlock bytetest_82, r800_ffff_tmp46, r800_ffff_tmp47, r800_ffff_tmp48;
		BitBlock r800_ffff_tmp49, bytetest_a0_ba, r800_ffff_tmp50, r800_ffff_tmp51;
		BitBlock r800_ffff_tmp52, r800_ffff_tmp53, r800_ffff_tmp54, r800_ffff_tmp55;
		BitBlock bytetest_ea, bytetest_a0, bytetest_b8_b8, r800_ffff_tmp56;
		BitBlock r800_ffff_tmp57, r800_ffff_tmp58, r800_ffff_tmp59, r800_ffff_tmp60;
		BitBlock bytetest_ef, bytetest_b7, r800_ffff_tmp61, bytetest_bc_bc;
		BitBlock r800_ffff_tmp62, r800_ffff_tmp63, r800_ffff_tmp64, r800_ffff_tmp65;
		BitBlock r800_ffff_tmp66, bytetest_b9, bytetest_a9_a9, r800_ffff_tmp67;
		BitBlock r800_ffff_tmp68, r800_ffff_tmp69, bytetest_bc, bytetest_84_84;
		BitBlock r800_ffff_tmp70, r800_ffff_tmp71, r800_ffff_tmp72, bytetest_bf;
		BitBlock bytetest_a0_a1, r800_ffff_tmp73, r800_ffff_tmp74, r800_ffff_tmp75;
		BitBlock r800_ffff_tmp76, r800_ffff_tmp77, r800_ffff_tmp78, bytetest_a5_a6;
		BitBlock r800_ffff_tmp79;




        struct_Sc.cc = simd<1>::constant<0>();
        tmp1 = simd_or(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp2, tmp1);
        tmp4 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp5 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_andc(tmp4, tmp5);
        bytetest_24_24 = simd_and(tmp3, tmp6);
        struct_Sc.cc = simd_or(bytetest_24_24, struct_Sc.cc);
        tmp7 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_andc(tmp7, basis_bits.bit_2);
        tmp9 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp10 = simd_or(tmp9, basis_bits.bit_6);
        tmp11 = simd_or(basis_bits.bit_3, tmp10);
        bytetest_c2_df = simd_and(tmp8, tmp11);
        if ((bitblock::any(bytetest_c2_df) || carryQ.CarryTest(0, 4))) {
          r80_7ff_tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
          r80_7ff_tmp2 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
          r80_7ff_tmp3 = simd_andc(r80_7ff_tmp1, r80_7ff_tmp2);
          r80_7ff_tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
          r80_7ff_tmp5 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
          r80_7ff_tmp6 = simd_andc(r80_7ff_tmp5, r80_7ff_tmp4);
          bytetest_c2 = simd_and(r80_7ff_tmp3, r80_7ff_tmp6);
          r80_7ff_tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r80_7ff_tmp8 = simd_and(r80_7ff_tmp7, tmp2);
          r80_7ff_tmp9 = simd_andc(r80_7ff_tmp8, basis_bits.bit_4);
          r80_7ff_tmp10 = simd_not(basis_bits.bit_6);
          r80_7ff_tmp11 = simd_or(simd_and(basis_bits.bit_5, r80_7ff_tmp10), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
          bytetest_a2_a5 = simd_and(r80_7ff_tmp9, r80_7ff_tmp11);
          r80_7ff_tmp12 = simd<1>::constant<1>();
          carryQ.cq[0] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp12, carryQ.get_carry_in(0), r80_7ff_tmp13));
          r80_7ff_tmp14 = simd_and(r80_7ff_tmp13, bytetest_c2);
          carryQ.cq[1] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp14, carryQ.get_carry_in(1), r80_7ff_tmp15));
          r80_7ff_tmp16 = simd_and(r80_7ff_tmp15, bytetest_a2_a5);
          struct_Sc.cc = simd_or(r80_7ff_tmp16, struct_Sc.cc);
          r80_7ff_tmp17 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
          r80_7ff_tmp18 = simd_and(r80_7ff_tmp1, r80_7ff_tmp17);
          r80_7ff_tmp19 = simd_and(tmp4, r80_7ff_tmp5);
          bytetest_d6 = simd_and(r80_7ff_tmp18, r80_7ff_tmp19);
          r80_7ff_tmp20 = simd_andc(r80_7ff_tmp7, r80_7ff_tmp2);
          r80_7ff_tmp21 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
          r80_7ff_tmp22 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
          r80_7ff_tmp23 = simd_and(r80_7ff_tmp21, r80_7ff_tmp22);
          bytetest_8f_8f = simd_and(r80_7ff_tmp20, r80_7ff_tmp23);
          r80_7ff_tmp24 = simd_and(r80_7ff_tmp13, bytetest_d6);
          carryQ.cq[2] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp24, carryQ.get_carry_in(2), r80_7ff_tmp25));
          r80_7ff_tmp26 = simd_and(r80_7ff_tmp25, bytetest_8f_8f);
          struct_Sc.cc = simd_or(r80_7ff_tmp26, struct_Sc.cc);
          r80_7ff_tmp27 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
          r80_7ff_tmp28 = simd_andc(r80_7ff_tmp27, tmp5);
          bytetest_d8 = simd_and(r80_7ff_tmp18, r80_7ff_tmp28);
          r80_7ff_tmp29 = simd_and(r80_7ff_tmp27, r80_7ff_tmp22);
          bytetest_8b_8b = simd_and(r80_7ff_tmp20, r80_7ff_tmp29);
          r80_7ff_tmp30 = simd_and(r80_7ff_tmp13, bytetest_d8);
          carryQ.cq[3] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp30, carryQ.get_carry_in(3), r80_7ff_tmp31));
          r80_7ff_tmp32 = simd_and(r80_7ff_tmp31, bytetest_8b_8b);
          struct_Sc.cc = simd_or(r80_7ff_tmp32, struct_Sc.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(0, 4);
        }
        tmp12 = simd_and(tmp7, tmp2);
        tmp13 = simd_or(basis_bits.bit_5, tmp5);
        tmp14 = simd_or(basis_bits.bit_4, tmp13);
        bytetest_e1_ef = simd_and(tmp12, tmp14);
        tmp15 = simd_or(tmp9, tmp5);
        bytetest_e0 = simd_andc(tmp12, tmp15);
        tmp16 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_a0_bf = simd_and(tmp16, basis_bits.bit_2);
        tmp17 = simd<1>::constant<1>();
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp17, carryQ.get_carry_in(4), tmp18));
        tmp19 = simd_and(tmp18, bytetest_e0);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp19, carryQ.get_carry_in(5), tmp20));
        tmp21 = simd_and(tmp20, bytetest_a0_bf);
        tmp22 = simd_or(tmp21, bytetest_e1_ef);
        if ((bitblock::any(tmp22) || carryQ.CarryTest(6, 17))) {
          r800_ffff_tmp1 = simd_and(tmp7, tmp2);
          r800_ffff_tmp2 = simd_or(tmp9, tmp5);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, r800_ffff_tmp2);
          r800_ffff_tmp3 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp4 = simd_and(r800_ffff_tmp3, tmp2);
          r800_ffff_tmp5 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp6 = simd_and(tmp4, r800_ffff_tmp5);
          bytetest_a7 = simd_and(r800_ffff_tmp4, r800_ffff_tmp6);
          r800_ffff_tmp7 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp8 = simd_and(r800_ffff_tmp3, r800_ffff_tmp7);
          r800_ffff_tmp9 = simd_andc(basis_bits.bit_6, tmp9);
          bytetest_b2_b3 = simd_and(r800_ffff_tmp8, r800_ffff_tmp9);
          r800_ffff_tmp10 = simd<1>::constant<1>();
          carryQ.cq[6] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp10, carryQ.get_carry_in(6), r800_ffff_tmp11));
          r800_ffff_tmp12 = simd_and(r800_ffff_tmp11, bytetest_e0);
          carryQ.cq[7] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp12, carryQ.get_carry_in(7), r800_ffff_tmp13));
          r800_ffff_tmp14 = simd_and(r800_ffff_tmp13, bytetest_a7);
          carryQ.cq[8] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp14, carryQ.get_carry_in(8), r800_ffff_tmp15));
          r800_ffff_tmp16 = simd_and(r800_ffff_tmp15, bytetest_b2_b3);
          struct_Sc.cc = simd_or(r800_ffff_tmp16, struct_Sc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_a7 = simd_and(r800_ffff_tmp4, r800_ffff_tmp6);
          r800_ffff_tmp17 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
          r800_ffff_tmp18 = simd_and(r800_ffff_tmp17, r800_ffff_tmp5);
          bytetest_bb_bb = simd_and(r800_ffff_tmp8, r800_ffff_tmp18);
          r800_ffff_tmp19 = simd_and(r800_ffff_tmp15, bytetest_bb_bb);
          struct_Sc.cc = simd_or(r800_ffff_tmp19, struct_Sc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_ab = simd_and(r800_ffff_tmp4, r800_ffff_tmp18);
          r800_ffff_tmp20 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
          r800_ffff_tmp21 = simd_andc(r800_ffff_tmp20, tmp9);
          bytetest_b1_b1 = simd_and(r800_ffff_tmp8, r800_ffff_tmp21);
          r800_ffff_tmp22 = simd_and(r800_ffff_tmp13, bytetest_ab);
          carryQ.cq[9] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp22, carryQ.get_carry_in(9), r800_ffff_tmp23));
          r800_ffff_tmp24 = simd_and(r800_ffff_tmp23, bytetest_b1_b1);
          struct_Sc.cc = simd_or(r800_ffff_tmp24, struct_Sc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, r800_ffff_tmp2);
          r800_ffff_tmp25 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
          r800_ffff_tmp26 = simd_and(r800_ffff_tmp25, r800_ffff_tmp5);
          bytetest_af = simd_and(r800_ffff_tmp4, r800_ffff_tmp26);
          r800_ffff_tmp27 = simd_and(r800_ffff_tmp17, r800_ffff_tmp20);
          bytetest_b9_b9 = simd_and(r800_ffff_tmp8, r800_ffff_tmp27);
          r800_ffff_tmp28 = simd_and(r800_ffff_tmp13, bytetest_af);
          carryQ.cq[10] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp28, carryQ.get_carry_in(10), r800_ffff_tmp29));
          r800_ffff_tmp30 = simd_and(r800_ffff_tmp29, bytetest_b9_b9);
          struct_Sc.cc = simd_or(r800_ffff_tmp30, struct_Sc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, r800_ffff_tmp2);
          r800_ffff_tmp31 = simd_andc(r800_ffff_tmp17, tmp5);
          bytetest_b8 = simd_and(r800_ffff_tmp8, r800_ffff_tmp31);
          bytetest_bf_bf = simd_and(r800_ffff_tmp8, r800_ffff_tmp26);
          r800_ffff_tmp32 = simd_and(r800_ffff_tmp13, bytetest_b8);
          carryQ.cq[11] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp32, carryQ.get_carry_in(11), r800_ffff_tmp33));
          r800_ffff_tmp34 = simd_and(r800_ffff_tmp33, bytetest_bf_bf);
          struct_Sc.cc = simd_or(r800_ffff_tmp34, struct_Sc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, r800_ffff_tmp21);
          r800_ffff_tmp35 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
          r800_ffff_tmp36 = simd_and(r800_ffff_tmp3, r800_ffff_tmp35);
          bytetest_9f = simd_and(r800_ffff_tmp36, r800_ffff_tmp26);
          bytetest_9b_9b = simd_and(r800_ffff_tmp36, r800_ffff_tmp18);
          r800_ffff_tmp37 = simd_and(r800_ffff_tmp11, bytetest_e1);
          carryQ.cq[12] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp37, carryQ.get_carry_in(12), r800_ffff_tmp38));
          r800_ffff_tmp39 = simd_and(r800_ffff_tmp38, bytetest_9f);
          carryQ.cq[13] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp39, carryQ.get_carry_in(13), r800_ffff_tmp40));
          r800_ffff_tmp41 = simd_and(r800_ffff_tmp40, bytetest_9b_9b);
          struct_Sc.cc = simd_or(r800_ffff_tmp41, struct_Sc.cc);
          r800_ffff_tmp42 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp43 = simd_andc(r800_ffff_tmp42, tmp9);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp43);
          r800_ffff_tmp44 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp45 = simd_andc(r800_ffff_tmp3, r800_ffff_tmp44);
          bytetest_82 = simd_and(r800_ffff_tmp45, r800_ffff_tmp43);
          r800_ffff_tmp46 = simd_and(r800_ffff_tmp3, basis_bits.bit_2);
          r800_ffff_tmp47 = simd_or(basis_bits.bit_5, r800_ffff_tmp5);
          r800_ffff_tmp48 = simd_and(basis_bits.bit_4, r800_ffff_tmp47);
          r800_ffff_tmp49 = simd_and(basis_bits.bit_3, r800_ffff_tmp48);
          bytetest_a0_ba = simd_andc(r800_ffff_tmp46, r800_ffff_tmp49);
          r800_ffff_tmp50 = simd_and(r800_ffff_tmp11, bytetest_e2);
          carryQ.cq[14] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp50, carryQ.get_carry_in(14), r800_ffff_tmp51));
          r800_ffff_tmp52 = simd_and(r800_ffff_tmp51, bytetest_82);
          carryQ.cq[15] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp52, carryQ.get_carry_in(15), r800_ffff_tmp53));
          r800_ffff_tmp54 = simd_and(r800_ffff_tmp53, bytetest_a0_ba);
          struct_Sc.cc = simd_or(r800_ffff_tmp54, struct_Sc.cc);
          r800_ffff_tmp55 = simd_and(r800_ffff_tmp17, r800_ffff_tmp42);
          bytetest_ea = simd_and(r800_ffff_tmp1, r800_ffff_tmp55);
          bytetest_a0 = simd_andc(r800_ffff_tmp4, r800_ffff_tmp2);
          bytetest_b8_b8 = simd_and(r800_ffff_tmp8, r800_ffff_tmp31);
          r800_ffff_tmp56 = simd_and(r800_ffff_tmp11, bytetest_ea);
          carryQ.cq[16] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp56, carryQ.get_carry_in(16), r800_ffff_tmp57));
          r800_ffff_tmp58 = simd_and(r800_ffff_tmp57, bytetest_a0);
          carryQ.cq[17] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp58, carryQ.get_carry_in(17), r800_ffff_tmp59));
          r800_ffff_tmp60 = simd_and(r800_ffff_tmp59, bytetest_b8_b8);
          struct_Sc.cc = simd_or(r800_ffff_tmp60, struct_Sc.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, r800_ffff_tmp26);
          bytetest_b7 = simd_and(r800_ffff_tmp8, r800_ffff_tmp6);
          r800_ffff_tmp61 = simd_andc(r800_ffff_tmp25, tmp5);
          bytetest_bc_bc = simd_and(r800_ffff_tmp8, r800_ffff_tmp61);
          r800_ffff_tmp62 = simd_and(r800_ffff_tmp11, bytetest_ef);
          carryQ.cq[18] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp62, carryQ.get_carry_in(18), r800_ffff_tmp63));
          r800_ffff_tmp64 = simd_and(r800_ffff_tmp63, bytetest_b7);
          carryQ.cq[19] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp64, carryQ.get_carry_in(19), r800_ffff_tmp65));
          r800_ffff_tmp66 = simd_and(r800_ffff_tmp65, bytetest_bc_bc);
          struct_Sc.cc = simd_or(r800_ffff_tmp66, struct_Sc.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, r800_ffff_tmp26);
          bytetest_b9 = simd_and(r800_ffff_tmp8, r800_ffff_tmp27);
          bytetest_a9_a9 = simd_and(r800_ffff_tmp4, r800_ffff_tmp27);
          r800_ffff_tmp67 = simd_and(r800_ffff_tmp63, bytetest_b9);
          carryQ.cq[20] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp67, carryQ.get_carry_in(20), r800_ffff_tmp68));
          r800_ffff_tmp69 = simd_and(r800_ffff_tmp68, bytetest_a9_a9);
          struct_Sc.cc = simd_or(r800_ffff_tmp69, struct_Sc.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, r800_ffff_tmp26);
          bytetest_bc = simd_and(r800_ffff_tmp8, r800_ffff_tmp61);
          bytetest_84_84 = simd_and(r800_ffff_tmp45, tmp6);
          r800_ffff_tmp70 = simd_and(r800_ffff_tmp63, bytetest_bc);
          carryQ.cq[21] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp70, carryQ.get_carry_in(21), r800_ffff_tmp71));
          r800_ffff_tmp72 = simd_and(r800_ffff_tmp71, bytetest_84_84);
          struct_Sc.cc = simd_or(r800_ffff_tmp72, struct_Sc.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, r800_ffff_tmp26);
          bytetest_bf = simd_and(r800_ffff_tmp8, r800_ffff_tmp26);
          bytetest_a0_a1 = simd_andc(r800_ffff_tmp4, tmp10);
          r800_ffff_tmp73 = simd_and(r800_ffff_tmp63, bytetest_bf);
          carryQ.cq[22] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp73, carryQ.get_carry_in(22), r800_ffff_tmp74));
          r800_ffff_tmp75 = simd_and(r800_ffff_tmp74, bytetest_a0_a1);
          struct_Sc.cc = simd_or(r800_ffff_tmp75, struct_Sc.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, r800_ffff_tmp26);
          bytetest_bf = simd_and(r800_ffff_tmp8, r800_ffff_tmp26);
          r800_ffff_tmp76 = simd_and(r800_ffff_tmp4, tmp4);
          r800_ffff_tmp77 = simd_not(basis_bits.bit_7);
          r800_ffff_tmp78 = simd_or(simd_and(basis_bits.bit_6, r800_ffff_tmp77), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
          bytetest_a5_a6 = simd_and(r800_ffff_tmp76, r800_ffff_tmp78);
          r800_ffff_tmp79 = simd_and(r800_ffff_tmp74, bytetest_a5_a6);
          struct_Sc.cc = simd_or(r800_ffff_tmp79, struct_Sc.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(6, 17);
        }
        carryQ.CarryQ_Adjust(23);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Sc & struct_Sc, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_24_24, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, bytetest_c2_df, r80_7ff_tmp1, r80_7ff_tmp2;
		BitBlock r80_7ff_tmp3, r80_7ff_tmp4, r80_7ff_tmp5, r80_7ff_tmp6, bytetest_c2;
		BitBlock r80_7ff_tmp7, r80_7ff_tmp8, r80_7ff_tmp9, r80_7ff_tmp10;
		BitBlock r80_7ff_tmp11, bytetest_a2_a5, r80_7ff_tmp12, r80_7ff_tmp13;
		BitBlock r80_7ff_tmp14, r80_7ff_tmp15, r80_7ff_tmp16, r80_7ff_tmp17;
		BitBlock r80_7ff_tmp18, r80_7ff_tmp19, bytetest_d6, r80_7ff_tmp20;
		BitBlock r80_7ff_tmp21, r80_7ff_tmp22, r80_7ff_tmp23, bytetest_8f_8f;
		BitBlock r80_7ff_tmp24, r80_7ff_tmp25, r80_7ff_tmp26, r80_7ff_tmp27;
		BitBlock r80_7ff_tmp28, bytetest_d8, r80_7ff_tmp29, bytetest_8b_8b;
		BitBlock r80_7ff_tmp30, r80_7ff_tmp31, r80_7ff_tmp32, tmp12, tmp13, tmp14;
		BitBlock bytetest_e1_ef, tmp15, bytetest_e0, tmp16, bytetest_a0_bf, tmp17;
		BitBlock tmp18, tmp19, tmp20, tmp21, tmp22, r800_ffff_tmp1, r800_ffff_tmp2;
		BitBlock r800_ffff_tmp3, r800_ffff_tmp4, r800_ffff_tmp5, r800_ffff_tmp6;
		BitBlock bytetest_a7, r800_ffff_tmp7, r800_ffff_tmp8, r800_ffff_tmp9;
		BitBlock bytetest_b2_b3, r800_ffff_tmp10, r800_ffff_tmp11, r800_ffff_tmp12;
		BitBlock r800_ffff_tmp13, r800_ffff_tmp14, r800_ffff_tmp15, r800_ffff_tmp16;
		BitBlock r800_ffff_tmp17, r800_ffff_tmp18, bytetest_bb_bb, r800_ffff_tmp19;
		BitBlock bytetest_ab, r800_ffff_tmp20, r800_ffff_tmp21, bytetest_b1_b1;
		BitBlock r800_ffff_tmp22, r800_ffff_tmp23, r800_ffff_tmp24, r800_ffff_tmp25;
		BitBlock r800_ffff_tmp26, bytetest_af, r800_ffff_tmp27, bytetest_b9_b9;
		BitBlock r800_ffff_tmp28, r800_ffff_tmp29, r800_ffff_tmp30, r800_ffff_tmp31;
		BitBlock bytetest_b8, bytetest_bf_bf, r800_ffff_tmp32, r800_ffff_tmp33;
		BitBlock r800_ffff_tmp34, bytetest_e1, r800_ffff_tmp35, r800_ffff_tmp36;
		BitBlock bytetest_9f, bytetest_9b_9b, r800_ffff_tmp37, r800_ffff_tmp38;
		BitBlock r800_ffff_tmp39, r800_ffff_tmp40, r800_ffff_tmp41, r800_ffff_tmp42;
		BitBlock r800_ffff_tmp43, bytetest_e2, r800_ffff_tmp44, r800_ffff_tmp45;
		BitBlock bytetest_82, r800_ffff_tmp46, r800_ffff_tmp47, r800_ffff_tmp48;
		BitBlock r800_ffff_tmp49, bytetest_a0_ba, r800_ffff_tmp50, r800_ffff_tmp51;
		BitBlock r800_ffff_tmp52, r800_ffff_tmp53, r800_ffff_tmp54, r800_ffff_tmp55;
		BitBlock bytetest_ea, bytetest_a0, bytetest_b8_b8, r800_ffff_tmp56;
		BitBlock r800_ffff_tmp57, r800_ffff_tmp58, r800_ffff_tmp59, r800_ffff_tmp60;
		BitBlock bytetest_ef, bytetest_b7, r800_ffff_tmp61, bytetest_bc_bc;
		BitBlock r800_ffff_tmp62, r800_ffff_tmp63, r800_ffff_tmp64, r800_ffff_tmp65;
		BitBlock r800_ffff_tmp66, bytetest_b9, bytetest_a9_a9, r800_ffff_tmp67;
		BitBlock r800_ffff_tmp68, r800_ffff_tmp69, bytetest_bc, bytetest_84_84;
		BitBlock r800_ffff_tmp70, r800_ffff_tmp71, r800_ffff_tmp72, bytetest_bf;
		BitBlock bytetest_a0_a1, r800_ffff_tmp73, r800_ffff_tmp74, r800_ffff_tmp75;
		BitBlock r800_ffff_tmp76, r800_ffff_tmp77, r800_ffff_tmp78, bytetest_a5_a6;
		BitBlock r800_ffff_tmp79;




        struct_Sc.cc = simd<1>::constant<0>();
        tmp1 = simd_or(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp2, tmp1);
        tmp4 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp5 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_andc(tmp4, tmp5);
        bytetest_24_24 = simd_and(tmp3, tmp6);
        struct_Sc.cc = simd_or(bytetest_24_24, struct_Sc.cc);
        tmp7 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_andc(tmp7, basis_bits.bit_2);
        tmp9 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp10 = simd_or(tmp9, basis_bits.bit_6);
        tmp11 = simd_or(basis_bits.bit_3, tmp10);
        bytetest_c2_df = simd_and(tmp8, tmp11);
        if ((bitblock::any(bytetest_c2_df) || carryQ.CarryTest(0, 4))) {
          r80_7ff_tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
          r80_7ff_tmp2 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
          r80_7ff_tmp3 = simd_andc(r80_7ff_tmp1, r80_7ff_tmp2);
          r80_7ff_tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
          r80_7ff_tmp5 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
          r80_7ff_tmp6 = simd_andc(r80_7ff_tmp5, r80_7ff_tmp4);
          bytetest_c2 = simd_and(r80_7ff_tmp3, r80_7ff_tmp6);
          r80_7ff_tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r80_7ff_tmp8 = simd_and(r80_7ff_tmp7, tmp2);
          r80_7ff_tmp9 = simd_andc(r80_7ff_tmp8, basis_bits.bit_4);
          r80_7ff_tmp10 = simd_not(basis_bits.bit_6);
          r80_7ff_tmp11 = simd_or(simd_and(basis_bits.bit_5, r80_7ff_tmp10), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
          bytetest_a2_a5 = simd_and(r80_7ff_tmp9, r80_7ff_tmp11);
          r80_7ff_tmp12 = simd<1>::constant<1>();
          carryQ.cq[0] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp12, carryQ.get_carry_in(0), r80_7ff_tmp13));
          r80_7ff_tmp14 = simd_and(r80_7ff_tmp13, bytetest_c2);
          carryQ.cq[1] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp14, carryQ.get_carry_in(1), r80_7ff_tmp15));
          r80_7ff_tmp16 = simd_and(r80_7ff_tmp15, bytetest_a2_a5);
          struct_Sc.cc = simd_or(r80_7ff_tmp16, struct_Sc.cc);
          r80_7ff_tmp17 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
          r80_7ff_tmp18 = simd_and(r80_7ff_tmp1, r80_7ff_tmp17);
          r80_7ff_tmp19 = simd_and(tmp4, r80_7ff_tmp5);
          bytetest_d6 = simd_and(r80_7ff_tmp18, r80_7ff_tmp19);
          r80_7ff_tmp20 = simd_andc(r80_7ff_tmp7, r80_7ff_tmp2);
          r80_7ff_tmp21 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
          r80_7ff_tmp22 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
          r80_7ff_tmp23 = simd_and(r80_7ff_tmp21, r80_7ff_tmp22);
          bytetest_8f_8f = simd_and(r80_7ff_tmp20, r80_7ff_tmp23);
          r80_7ff_tmp24 = simd_and(r80_7ff_tmp13, bytetest_d6);
          carryQ.cq[2] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp24, carryQ.get_carry_in(2), r80_7ff_tmp25));
          r80_7ff_tmp26 = simd_and(r80_7ff_tmp25, bytetest_8f_8f);
          struct_Sc.cc = simd_or(r80_7ff_tmp26, struct_Sc.cc);
          r80_7ff_tmp27 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
          r80_7ff_tmp28 = simd_andc(r80_7ff_tmp27, tmp5);
          bytetest_d8 = simd_and(r80_7ff_tmp18, r80_7ff_tmp28);
          r80_7ff_tmp29 = simd_and(r80_7ff_tmp27, r80_7ff_tmp22);
          bytetest_8b_8b = simd_and(r80_7ff_tmp20, r80_7ff_tmp29);
          r80_7ff_tmp30 = simd_and(r80_7ff_tmp13, bytetest_d8);
          carryQ.cq[3] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp30, carryQ.get_carry_in(3), r80_7ff_tmp31));
          r80_7ff_tmp32 = simd_and(r80_7ff_tmp31, bytetest_8b_8b);
          struct_Sc.cc = simd_or(r80_7ff_tmp32, struct_Sc.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(0, 4);
        }
        tmp12 = simd_and(tmp7, tmp2);
        tmp13 = simd_or(basis_bits.bit_5, tmp5);
        tmp14 = simd_or(basis_bits.bit_4, tmp13);
        bytetest_e1_ef = simd_and(tmp12, tmp14);
        tmp15 = simd_or(tmp9, tmp5);
        bytetest_e0 = simd_andc(tmp12, tmp15);
        tmp16 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_a0_bf = simd_and(tmp16, basis_bits.bit_2);
        tmp17 = simd<1>::constant<1>();
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp17, carryQ.get_carry_in(4), tmp18));
        tmp19 = simd_and(tmp18, bytetest_e0);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp19, carryQ.get_carry_in(5), tmp20));
        tmp21 = simd_and(tmp20, bytetest_a0_bf);
        tmp22 = simd_or(tmp21, bytetest_e1_ef);
        if ((bitblock::any(tmp22) || carryQ.CarryTest(6, 17))) {
          r800_ffff_tmp1 = simd_and(tmp7, tmp2);
          r800_ffff_tmp2 = simd_or(tmp9, tmp5);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, r800_ffff_tmp2);
          r800_ffff_tmp3 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp4 = simd_and(r800_ffff_tmp3, tmp2);
          r800_ffff_tmp5 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp6 = simd_and(tmp4, r800_ffff_tmp5);
          bytetest_a7 = simd_and(r800_ffff_tmp4, r800_ffff_tmp6);
          r800_ffff_tmp7 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp8 = simd_and(r800_ffff_tmp3, r800_ffff_tmp7);
          r800_ffff_tmp9 = simd_andc(basis_bits.bit_6, tmp9);
          bytetest_b2_b3 = simd_and(r800_ffff_tmp8, r800_ffff_tmp9);
          r800_ffff_tmp10 = simd<1>::constant<1>();
          carryQ.cq[6] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp10, carryQ.get_carry_in(6), r800_ffff_tmp11));
          r800_ffff_tmp12 = simd_and(r800_ffff_tmp11, bytetest_e0);
          carryQ.cq[7] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp12, carryQ.get_carry_in(7), r800_ffff_tmp13));
          r800_ffff_tmp14 = simd_and(r800_ffff_tmp13, bytetest_a7);
          carryQ.cq[8] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp14, carryQ.get_carry_in(8), r800_ffff_tmp15));
          r800_ffff_tmp16 = simd_and(r800_ffff_tmp15, bytetest_b2_b3);
          struct_Sc.cc = simd_or(r800_ffff_tmp16, struct_Sc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_a7 = simd_and(r800_ffff_tmp4, r800_ffff_tmp6);
          r800_ffff_tmp17 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
          r800_ffff_tmp18 = simd_and(r800_ffff_tmp17, r800_ffff_tmp5);
          bytetest_bb_bb = simd_and(r800_ffff_tmp8, r800_ffff_tmp18);
          r800_ffff_tmp19 = simd_and(r800_ffff_tmp15, bytetest_bb_bb);
          struct_Sc.cc = simd_or(r800_ffff_tmp19, struct_Sc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, r800_ffff_tmp2);
          bytetest_ab = simd_and(r800_ffff_tmp4, r800_ffff_tmp18);
          r800_ffff_tmp20 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
          r800_ffff_tmp21 = simd_andc(r800_ffff_tmp20, tmp9);
          bytetest_b1_b1 = simd_and(r800_ffff_tmp8, r800_ffff_tmp21);
          r800_ffff_tmp22 = simd_and(r800_ffff_tmp13, bytetest_ab);
          carryQ.cq[9] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp22, carryQ.get_carry_in(9), r800_ffff_tmp23));
          r800_ffff_tmp24 = simd_and(r800_ffff_tmp23, bytetest_b1_b1);
          struct_Sc.cc = simd_or(r800_ffff_tmp24, struct_Sc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, r800_ffff_tmp2);
          r800_ffff_tmp25 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
          r800_ffff_tmp26 = simd_and(r800_ffff_tmp25, r800_ffff_tmp5);
          bytetest_af = simd_and(r800_ffff_tmp4, r800_ffff_tmp26);
          r800_ffff_tmp27 = simd_and(r800_ffff_tmp17, r800_ffff_tmp20);
          bytetest_b9_b9 = simd_and(r800_ffff_tmp8, r800_ffff_tmp27);
          r800_ffff_tmp28 = simd_and(r800_ffff_tmp13, bytetest_af);
          carryQ.cq[10] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp28, carryQ.get_carry_in(10), r800_ffff_tmp29));
          r800_ffff_tmp30 = simd_and(r800_ffff_tmp29, bytetest_b9_b9);
          struct_Sc.cc = simd_or(r800_ffff_tmp30, struct_Sc.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, r800_ffff_tmp2);
          r800_ffff_tmp31 = simd_andc(r800_ffff_tmp17, tmp5);
          bytetest_b8 = simd_and(r800_ffff_tmp8, r800_ffff_tmp31);
          bytetest_bf_bf = simd_and(r800_ffff_tmp8, r800_ffff_tmp26);
          r800_ffff_tmp32 = simd_and(r800_ffff_tmp13, bytetest_b8);
          carryQ.cq[11] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp32, carryQ.get_carry_in(11), r800_ffff_tmp33));
          r800_ffff_tmp34 = simd_and(r800_ffff_tmp33, bytetest_bf_bf);
          struct_Sc.cc = simd_or(r800_ffff_tmp34, struct_Sc.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, r800_ffff_tmp21);
          r800_ffff_tmp35 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
          r800_ffff_tmp36 = simd_and(r800_ffff_tmp3, r800_ffff_tmp35);
          bytetest_9f = simd_and(r800_ffff_tmp36, r800_ffff_tmp26);
          bytetest_9b_9b = simd_and(r800_ffff_tmp36, r800_ffff_tmp18);
          r800_ffff_tmp37 = simd_and(r800_ffff_tmp11, bytetest_e1);
          carryQ.cq[12] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp37, carryQ.get_carry_in(12), r800_ffff_tmp38));
          r800_ffff_tmp39 = simd_and(r800_ffff_tmp38, bytetest_9f);
          carryQ.cq[13] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp39, carryQ.get_carry_in(13), r800_ffff_tmp40));
          r800_ffff_tmp41 = simd_and(r800_ffff_tmp40, bytetest_9b_9b);
          struct_Sc.cc = simd_or(r800_ffff_tmp41, struct_Sc.cc);
          r800_ffff_tmp42 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp43 = simd_andc(r800_ffff_tmp42, tmp9);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp43);
          r800_ffff_tmp44 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp45 = simd_andc(r800_ffff_tmp3, r800_ffff_tmp44);
          bytetest_82 = simd_and(r800_ffff_tmp45, r800_ffff_tmp43);
          r800_ffff_tmp46 = simd_and(r800_ffff_tmp3, basis_bits.bit_2);
          r800_ffff_tmp47 = simd_or(basis_bits.bit_5, r800_ffff_tmp5);
          r800_ffff_tmp48 = simd_and(basis_bits.bit_4, r800_ffff_tmp47);
          r800_ffff_tmp49 = simd_and(basis_bits.bit_3, r800_ffff_tmp48);
          bytetest_a0_ba = simd_andc(r800_ffff_tmp46, r800_ffff_tmp49);
          r800_ffff_tmp50 = simd_and(r800_ffff_tmp11, bytetest_e2);
          carryQ.cq[14] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp50, carryQ.get_carry_in(14), r800_ffff_tmp51));
          r800_ffff_tmp52 = simd_and(r800_ffff_tmp51, bytetest_82);
          carryQ.cq[15] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp52, carryQ.get_carry_in(15), r800_ffff_tmp53));
          r800_ffff_tmp54 = simd_and(r800_ffff_tmp53, bytetest_a0_ba);
          struct_Sc.cc = simd_or(r800_ffff_tmp54, struct_Sc.cc);
          r800_ffff_tmp55 = simd_and(r800_ffff_tmp17, r800_ffff_tmp42);
          bytetest_ea = simd_and(r800_ffff_tmp1, r800_ffff_tmp55);
          bytetest_a0 = simd_andc(r800_ffff_tmp4, r800_ffff_tmp2);
          bytetest_b8_b8 = simd_and(r800_ffff_tmp8, r800_ffff_tmp31);
          r800_ffff_tmp56 = simd_and(r800_ffff_tmp11, bytetest_ea);
          carryQ.cq[16] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp56, carryQ.get_carry_in(16), r800_ffff_tmp57));
          r800_ffff_tmp58 = simd_and(r800_ffff_tmp57, bytetest_a0);
          carryQ.cq[17] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp58, carryQ.get_carry_in(17), r800_ffff_tmp59));
          r800_ffff_tmp60 = simd_and(r800_ffff_tmp59, bytetest_b8_b8);
          struct_Sc.cc = simd_or(r800_ffff_tmp60, struct_Sc.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, r800_ffff_tmp26);
          bytetest_b7 = simd_and(r800_ffff_tmp8, r800_ffff_tmp6);
          r800_ffff_tmp61 = simd_andc(r800_ffff_tmp25, tmp5);
          bytetest_bc_bc = simd_and(r800_ffff_tmp8, r800_ffff_tmp61);
          r800_ffff_tmp62 = simd_and(r800_ffff_tmp11, bytetest_ef);
          carryQ.cq[18] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp62, carryQ.get_carry_in(18), r800_ffff_tmp63));
          r800_ffff_tmp64 = simd_and(r800_ffff_tmp63, bytetest_b7);
          carryQ.cq[19] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp64, carryQ.get_carry_in(19), r800_ffff_tmp65));
          r800_ffff_tmp66 = simd_and(r800_ffff_tmp65, bytetest_bc_bc);
          struct_Sc.cc = simd_or(r800_ffff_tmp66, struct_Sc.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, r800_ffff_tmp26);
          bytetest_b9 = simd_and(r800_ffff_tmp8, r800_ffff_tmp27);
          bytetest_a9_a9 = simd_and(r800_ffff_tmp4, r800_ffff_tmp27);
          r800_ffff_tmp67 = simd_and(r800_ffff_tmp63, bytetest_b9);
          carryQ.cq[20] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp67, carryQ.get_carry_in(20), r800_ffff_tmp68));
          r800_ffff_tmp69 = simd_and(r800_ffff_tmp68, bytetest_a9_a9);
          struct_Sc.cc = simd_or(r800_ffff_tmp69, struct_Sc.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, r800_ffff_tmp26);
          bytetest_bc = simd_and(r800_ffff_tmp8, r800_ffff_tmp61);
          bytetest_84_84 = simd_and(r800_ffff_tmp45, tmp6);
          r800_ffff_tmp70 = simd_and(r800_ffff_tmp63, bytetest_bc);
          carryQ.cq[21] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp70, carryQ.get_carry_in(21), r800_ffff_tmp71));
          r800_ffff_tmp72 = simd_and(r800_ffff_tmp71, bytetest_84_84);
          struct_Sc.cc = simd_or(r800_ffff_tmp72, struct_Sc.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, r800_ffff_tmp26);
          bytetest_bf = simd_and(r800_ffff_tmp8, r800_ffff_tmp26);
          bytetest_a0_a1 = simd_andc(r800_ffff_tmp4, tmp10);
          r800_ffff_tmp73 = simd_and(r800_ffff_tmp63, bytetest_bf);
          carryQ.cq[22] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp73, carryQ.get_carry_in(22), r800_ffff_tmp74));
          r800_ffff_tmp75 = simd_and(r800_ffff_tmp74, bytetest_a0_a1);
          struct_Sc.cc = simd_or(r800_ffff_tmp75, struct_Sc.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, r800_ffff_tmp26);
          bytetest_bf = simd_and(r800_ffff_tmp8, r800_ffff_tmp26);
          r800_ffff_tmp76 = simd_and(r800_ffff_tmp4, tmp4);
          r800_ffff_tmp77 = simd_not(basis_bits.bit_7);
          r800_ffff_tmp78 = simd_or(simd_and(basis_bits.bit_6, r800_ffff_tmp77), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
          bytetest_a5_a6 = simd_and(r800_ffff_tmp76, r800_ffff_tmp78);
          r800_ffff_tmp79 = simd_and(r800_ffff_tmp74, bytetest_a5_a6);
          struct_Sc.cc = simd_or(r800_ffff_tmp79, struct_Sc.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(6, 17);
        }
  }
  CarryArray<23, 0> carryQ;
  };

  struct Zl {
  Zl() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Zl & struct_Zl) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_e1_ef, tmp7, tmp8;
		BitBlock bytetest_e0, tmp9, bytetest_a0_bf, tmp10, tmp11, tmp12, tmp13, tmp14;
		BitBlock tmp15, r800_ffff_tmp1, r800_ffff_tmp2, r800_ffff_tmp3, r800_ffff_tmp4;
		BitBlock r800_ffff_tmp5, r800_ffff_tmp6, bytetest_e2, r800_ffff_tmp7;
		BitBlock r800_ffff_tmp8, r800_ffff_tmp9, r800_ffff_tmp10, r800_ffff_tmp11;
		BitBlock bytetest_80, r800_ffff_tmp12, r800_ffff_tmp13, r800_ffff_tmp14;
		BitBlock bytetest_a8_a8, r800_ffff_tmp15, r800_ffff_tmp16, r800_ffff_tmp17;
		BitBlock r800_ffff_tmp18, r800_ffff_tmp19, r800_ffff_tmp20, r800_ffff_tmp21;




        struct_Zl.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_and(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp5 = simd_or(basis_bits.bit_5, tmp4);
        tmp6 = simd_or(basis_bits.bit_4, tmp5);
        bytetest_e1_ef = simd_and(tmp3, tmp6);
        tmp7 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp8 = simd_or(tmp7, tmp4);
        bytetest_e0 = simd_andc(tmp3, tmp8);
        tmp9 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_a0_bf = simd_and(tmp9, basis_bits.bit_2);
        tmp10 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp10, carryQ.get_carry_in(0), tmp11));
        tmp12 = simd_and(tmp11, bytetest_e0);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp12, carryQ.get_carry_in(1), tmp13));
        tmp14 = simd_and(tmp13, bytetest_a0_bf);
        tmp15 = simd_or(tmp14, bytetest_e1_ef);
        if ((bitblock::any(tmp15) || carryQ.CarryTest(2, 3))) {
          r800_ffff_tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp3 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          r800_ffff_tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
          r800_ffff_tmp5 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp6 = simd_andc(r800_ffff_tmp5, r800_ffff_tmp4);
          bytetest_e2 = simd_and(r800_ffff_tmp3, r800_ffff_tmp6);
          r800_ffff_tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp8 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp9 = simd_andc(r800_ffff_tmp7, r800_ffff_tmp8);
          r800_ffff_tmp10 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp11 = simd_or(r800_ffff_tmp4, r800_ffff_tmp10);
          bytetest_80 = simd_andc(r800_ffff_tmp9, r800_ffff_tmp11);
          r800_ffff_tmp12 = simd_and(r800_ffff_tmp7, r800_ffff_tmp2);
          r800_ffff_tmp13 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
          r800_ffff_tmp14 = simd_andc(r800_ffff_tmp13, r800_ffff_tmp10);
          bytetest_a8_a8 = simd_and(r800_ffff_tmp12, r800_ffff_tmp14);
          r800_ffff_tmp15 = simd<1>::constant<1>();
          carryQ.cq[2] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp15, carryQ.get_carry_in(2), r800_ffff_tmp16));
          r800_ffff_tmp17 = simd_and(r800_ffff_tmp16, bytetest_e2);
          carryQ.cq[3] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp17, carryQ.get_carry_in(3), r800_ffff_tmp18));
          r800_ffff_tmp19 = simd_and(r800_ffff_tmp18, bytetest_80);
          carryQ.cq[4] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp19, carryQ.get_carry_in(4), r800_ffff_tmp20));
          r800_ffff_tmp21 = simd_and(r800_ffff_tmp20, bytetest_a8_a8);
          struct_Zl.cc = simd_or(r800_ffff_tmp21, struct_Zl.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(2, 3);
        }
        carryQ.CarryQ_Adjust(5);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Zl & struct_Zl, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_e1_ef, tmp7, tmp8;
		BitBlock bytetest_e0, tmp9, bytetest_a0_bf, tmp10, tmp11, tmp12, tmp13, tmp14;
		BitBlock tmp15, r800_ffff_tmp1, r800_ffff_tmp2, r800_ffff_tmp3, r800_ffff_tmp4;
		BitBlock r800_ffff_tmp5, r800_ffff_tmp6, bytetest_e2, r800_ffff_tmp7;
		BitBlock r800_ffff_tmp8, r800_ffff_tmp9, r800_ffff_tmp10, r800_ffff_tmp11;
		BitBlock bytetest_80, r800_ffff_tmp12, r800_ffff_tmp13, r800_ffff_tmp14;
		BitBlock bytetest_a8_a8, r800_ffff_tmp15, r800_ffff_tmp16, r800_ffff_tmp17;
		BitBlock r800_ffff_tmp18, r800_ffff_tmp19, r800_ffff_tmp20, r800_ffff_tmp21;




        struct_Zl.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_and(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp5 = simd_or(basis_bits.bit_5, tmp4);
        tmp6 = simd_or(basis_bits.bit_4, tmp5);
        bytetest_e1_ef = simd_and(tmp3, tmp6);
        tmp7 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp8 = simd_or(tmp7, tmp4);
        bytetest_e0 = simd_andc(tmp3, tmp8);
        tmp9 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_a0_bf = simd_and(tmp9, basis_bits.bit_2);
        tmp10 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp10, carryQ.get_carry_in(0), tmp11));
        tmp12 = simd_and(tmp11, bytetest_e0);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp12, carryQ.get_carry_in(1), tmp13));
        tmp14 = simd_and(tmp13, bytetest_a0_bf);
        tmp15 = simd_or(tmp14, bytetest_e1_ef);
        if ((bitblock::any(tmp15) || carryQ.CarryTest(2, 3))) {
          r800_ffff_tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp3 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          r800_ffff_tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
          r800_ffff_tmp5 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp6 = simd_andc(r800_ffff_tmp5, r800_ffff_tmp4);
          bytetest_e2 = simd_and(r800_ffff_tmp3, r800_ffff_tmp6);
          r800_ffff_tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp8 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp9 = simd_andc(r800_ffff_tmp7, r800_ffff_tmp8);
          r800_ffff_tmp10 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp11 = simd_or(r800_ffff_tmp4, r800_ffff_tmp10);
          bytetest_80 = simd_andc(r800_ffff_tmp9, r800_ffff_tmp11);
          r800_ffff_tmp12 = simd_and(r800_ffff_tmp7, r800_ffff_tmp2);
          r800_ffff_tmp13 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
          r800_ffff_tmp14 = simd_andc(r800_ffff_tmp13, r800_ffff_tmp10);
          bytetest_a8_a8 = simd_and(r800_ffff_tmp12, r800_ffff_tmp14);
          r800_ffff_tmp15 = simd<1>::constant<1>();
          carryQ.cq[2] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp15, carryQ.get_carry_in(2), r800_ffff_tmp16));
          r800_ffff_tmp17 = simd_and(r800_ffff_tmp16, bytetest_e2);
          carryQ.cq[3] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp17, carryQ.get_carry_in(3), r800_ffff_tmp18));
          r800_ffff_tmp19 = simd_and(r800_ffff_tmp18, bytetest_80);
          carryQ.cq[4] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp19, carryQ.get_carry_in(4), r800_ffff_tmp20));
          r800_ffff_tmp21 = simd_and(r800_ffff_tmp20, bytetest_a8_a8);
          struct_Zl.cc = simd_or(r800_ffff_tmp21, struct_Zl.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(2, 3);
        }
  }
  CarryArray<5, 0> carryQ;
  };

  struct Co {
  Co() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Co & struct_Co) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_f3, tmp7, tmp8, tmp9;
		BitBlock tmp10, bytetest_bf, tmp11, tmp12, tmp13, bytetest_80_bd, tmp14, tmp15;
		BitBlock tmp16, tmp17, tmp18, tmp19, tmp20, tmp21, tmp22, tmp23, tmp24;
		BitBlock bytetest_80_be, bytetest_80_bf, tmp25, tmp26, tmp27, tmp28, tmp29;
		BitBlock tmp30, tmp31, bytetest_b0_be, tmp32, tmp33, tmp34, tmp35, tmp36;
		BitBlock tmp37, tmp38, tmp39, tmp40, tmp41, tmp42, bytetest_e1_ef, tmp43;
		BitBlock bytetest_e0, bytetest_a0_bf, tmp44, tmp45, tmp46, tmp47;
		BitBlock r800_ffff_tmp1, r800_ffff_tmp2, bytetest_ef, r800_ffff_tmp3;
		BitBlock r800_ffff_tmp4, bytetest_80_a3, r800_ffff_tmp5, r800_ffff_tmp6;
		BitBlock r800_ffff_tmp7, r800_ffff_tmp8, r800_ffff_tmp9, r800_ffff_tmp10;
		BitBlock r800_ffff_tmp11, bytetest_ee, r800_ffff_tmp12, r800_ffff_tmp13;
		BitBlock r800_ffff_tmp14, r800_ffff_tmp15, r800_ffff_tmp16, r800_ffff_tmp17;




        struct_Co.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_and(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_andc(tmp5, tmp4);
        bytetest_f3 = simd_and(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_and(tmp7, tmp2);
        tmp9 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp10 = simd_and(tmp9, tmp5);
        bytetest_bf = simd_and(tmp8, tmp10);
        bytetest_bf = simd_and(tmp8, tmp10);
        tmp11 = simd_and(tmp9, basis_bits.bit_6);
        tmp12 = simd_and(basis_bits.bit_3, tmp11);
        tmp13 = simd_and(basis_bits.bit_2, tmp12);
        bytetest_80_bd = simd_andc(tmp7, tmp13);
        tmp14 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp14, carryQ.get_carry_in(0), tmp15));
        tmp16 = simd_and(tmp15, bytetest_f3);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp16, carryQ.get_carry_in(1), tmp17));
        tmp18 = simd_and(tmp17, bytetest_bf);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp18, carryQ.get_carry_in(2), tmp19));
        tmp20 = simd_and(tmp19, bytetest_bf);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp20, carryQ.get_carry_in(3), tmp21));
        tmp22 = simd_and(tmp21, bytetest_80_bd);
        tmp23 = simd_and(basis_bits.bit_3, tmp10);
        tmp24 = simd_and(basis_bits.bit_2, tmp23);
        bytetest_80_be = simd_andc(tmp7, tmp24);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp25 = simd_and(tmp19, bytetest_80_be);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp25, carryQ.get_carry_in(4), tmp26));
        tmp27 = simd_and(tmp26, bytetest_80_bf);
        tmp28 = simd_or(tmp27, tmp22);
        tmp29 = simd_and(bytetest_80_bf, tmp2);
        tmp30 = simd_and(basis_bits.bit_5, tmp5);
        tmp31 = simd_and(basis_bits.bit_4, tmp30);
        bytetest_b0_be = simd_andc(tmp29, tmp31);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp32 = simd_and(tmp17, bytetest_b0_be);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp32, carryQ.get_carry_in(5), tmp33));
        tmp34 = simd_and(tmp33, bytetest_80_bf);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp34, carryQ.get_carry_in(6), tmp35));
        tmp36 = simd_and(tmp35, bytetest_80_bf);
        tmp37 = simd_or(tmp36, tmp28);
        struct_Co.cc = simd_or(tmp37, struct_Co.cc);
        tmp38 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp39 = simd_and(tmp1, tmp38);
        tmp40 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp41 = simd_or(basis_bits.bit_5, tmp40);
        tmp42 = simd_or(basis_bits.bit_4, tmp41);
        bytetest_e1_ef = simd_and(tmp39, tmp42);
        tmp43 = simd_or(tmp4, tmp40);
        bytetest_e0 = simd_andc(tmp39, tmp43);
        bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp44 = simd_and(tmp15, bytetest_e0);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp44, carryQ.get_carry_in(7), tmp45));
        tmp46 = simd_and(tmp45, bytetest_a0_bf);
        tmp47 = simd_or(tmp46, bytetest_e1_ef);
        if ((bitblock::any(tmp47) || carryQ.CarryTest(8, 4))) {
          r800_ffff_tmp1 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp2 = simd_and(tmp1, r800_ffff_tmp1);
          bytetest_ef = simd_and(r800_ffff_tmp2, tmp10);
          r800_ffff_tmp3 = simd_or(basis_bits.bit_3, tmp4);
          r800_ffff_tmp4 = simd_and(basis_bits.bit_2, r800_ffff_tmp3);
          bytetest_80_a3 = simd_andc(bytetest_80_bf, r800_ffff_tmp4);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp5 = simd_and(tmp15, bytetest_ef);
          carryQ.cq[8] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp5, carryQ.get_carry_in(8), r800_ffff_tmp6));
          r800_ffff_tmp7 = simd_and(r800_ffff_tmp6, bytetest_80_a3);
          carryQ.cq[9] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp7, carryQ.get_carry_in(9), r800_ffff_tmp8));
          r800_ffff_tmp9 = simd_and(r800_ffff_tmp8, bytetest_80_bf);
          r800_ffff_tmp10 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp11 = simd_and(tmp9, r800_ffff_tmp10);
          bytetest_ee = simd_and(r800_ffff_tmp2, r800_ffff_tmp11);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp12 = simd_and(tmp15, bytetest_ee);
          carryQ.cq[10] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp12, carryQ.get_carry_in(10), r800_ffff_tmp13));
          r800_ffff_tmp14 = simd_and(r800_ffff_tmp13, bytetest_80_bf);
          carryQ.cq[11] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp14, carryQ.get_carry_in(11), r800_ffff_tmp15));
          r800_ffff_tmp16 = simd_and(r800_ffff_tmp15, bytetest_80_bf);
          r800_ffff_tmp17 = simd_or(r800_ffff_tmp16, r800_ffff_tmp9);
          struct_Co.cc = simd_or(r800_ffff_tmp17, struct_Co.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(8, 4);
        }
        carryQ.CarryQ_Adjust(12);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Co & struct_Co, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_f3, tmp7, tmp8, tmp9;
		BitBlock tmp10, bytetest_bf, tmp11, tmp12, tmp13, bytetest_80_bd, tmp14, tmp15;
		BitBlock tmp16, tmp17, tmp18, tmp19, tmp20, tmp21, tmp22, tmp23, tmp24;
		BitBlock bytetest_80_be, bytetest_80_bf, tmp25, tmp26, tmp27, tmp28, tmp29;
		BitBlock tmp30, tmp31, bytetest_b0_be, tmp32, tmp33, tmp34, tmp35, tmp36;
		BitBlock tmp37, tmp38, tmp39, tmp40, tmp41, tmp42, bytetest_e1_ef, tmp43;
		BitBlock bytetest_e0, bytetest_a0_bf, tmp44, tmp45, tmp46, tmp47;
		BitBlock r800_ffff_tmp1, r800_ffff_tmp2, bytetest_ef, r800_ffff_tmp3;
		BitBlock r800_ffff_tmp4, bytetest_80_a3, r800_ffff_tmp5, r800_ffff_tmp6;
		BitBlock r800_ffff_tmp7, r800_ffff_tmp8, r800_ffff_tmp9, r800_ffff_tmp10;
		BitBlock r800_ffff_tmp11, bytetest_ee, r800_ffff_tmp12, r800_ffff_tmp13;
		BitBlock r800_ffff_tmp14, r800_ffff_tmp15, r800_ffff_tmp16, r800_ffff_tmp17;




        struct_Co.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_and(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_andc(tmp5, tmp4);
        bytetest_f3 = simd_and(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_and(tmp7, tmp2);
        tmp9 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp10 = simd_and(tmp9, tmp5);
        bytetest_bf = simd_and(tmp8, tmp10);
        bytetest_bf = simd_and(tmp8, tmp10);
        tmp11 = simd_and(tmp9, basis_bits.bit_6);
        tmp12 = simd_and(basis_bits.bit_3, tmp11);
        tmp13 = simd_and(basis_bits.bit_2, tmp12);
        bytetest_80_bd = simd_andc(tmp7, tmp13);
        tmp14 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp14, carryQ.get_carry_in(0), tmp15));
        tmp16 = simd_and(tmp15, bytetest_f3);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp16, carryQ.get_carry_in(1), tmp17));
        tmp18 = simd_and(tmp17, bytetest_bf);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp18, carryQ.get_carry_in(2), tmp19));
        tmp20 = simd_and(tmp19, bytetest_bf);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp20, carryQ.get_carry_in(3), tmp21));
        tmp22 = simd_and(tmp21, bytetest_80_bd);
        tmp23 = simd_and(basis_bits.bit_3, tmp10);
        tmp24 = simd_and(basis_bits.bit_2, tmp23);
        bytetest_80_be = simd_andc(tmp7, tmp24);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp25 = simd_and(tmp19, bytetest_80_be);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp25, carryQ.get_carry_in(4), tmp26));
        tmp27 = simd_and(tmp26, bytetest_80_bf);
        tmp28 = simd_or(tmp27, tmp22);
        tmp29 = simd_and(bytetest_80_bf, tmp2);
        tmp30 = simd_and(basis_bits.bit_5, tmp5);
        tmp31 = simd_and(basis_bits.bit_4, tmp30);
        bytetest_b0_be = simd_andc(tmp29, tmp31);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp32 = simd_and(tmp17, bytetest_b0_be);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp32, carryQ.get_carry_in(5), tmp33));
        tmp34 = simd_and(tmp33, bytetest_80_bf);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp34, carryQ.get_carry_in(6), tmp35));
        tmp36 = simd_and(tmp35, bytetest_80_bf);
        tmp37 = simd_or(tmp36, tmp28);
        struct_Co.cc = simd_or(tmp37, struct_Co.cc);
        tmp38 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp39 = simd_and(tmp1, tmp38);
        tmp40 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp41 = simd_or(basis_bits.bit_5, tmp40);
        tmp42 = simd_or(basis_bits.bit_4, tmp41);
        bytetest_e1_ef = simd_and(tmp39, tmp42);
        tmp43 = simd_or(tmp4, tmp40);
        bytetest_e0 = simd_andc(tmp39, tmp43);
        bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp44 = simd_and(tmp15, bytetest_e0);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp44, carryQ.get_carry_in(7), tmp45));
        tmp46 = simd_and(tmp45, bytetest_a0_bf);
        tmp47 = simd_or(tmp46, bytetest_e1_ef);
        if ((bitblock::any(tmp47) || carryQ.CarryTest(8, 4))) {
          r800_ffff_tmp1 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp2 = simd_and(tmp1, r800_ffff_tmp1);
          bytetest_ef = simd_and(r800_ffff_tmp2, tmp10);
          r800_ffff_tmp3 = simd_or(basis_bits.bit_3, tmp4);
          r800_ffff_tmp4 = simd_and(basis_bits.bit_2, r800_ffff_tmp3);
          bytetest_80_a3 = simd_andc(bytetest_80_bf, r800_ffff_tmp4);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp5 = simd_and(tmp15, bytetest_ef);
          carryQ.cq[8] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp5, carryQ.get_carry_in(8), r800_ffff_tmp6));
          r800_ffff_tmp7 = simd_and(r800_ffff_tmp6, bytetest_80_a3);
          carryQ.cq[9] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp7, carryQ.get_carry_in(9), r800_ffff_tmp8));
          r800_ffff_tmp9 = simd_and(r800_ffff_tmp8, bytetest_80_bf);
          r800_ffff_tmp10 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp11 = simd_and(tmp9, r800_ffff_tmp10);
          bytetest_ee = simd_and(r800_ffff_tmp2, r800_ffff_tmp11);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp12 = simd_and(tmp15, bytetest_ee);
          carryQ.cq[10] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp12, carryQ.get_carry_in(10), r800_ffff_tmp13));
          r800_ffff_tmp14 = simd_and(r800_ffff_tmp13, bytetest_80_bf);
          carryQ.cq[11] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp14, carryQ.get_carry_in(11), r800_ffff_tmp15));
          r800_ffff_tmp16 = simd_and(r800_ffff_tmp15, bytetest_80_bf);
          r800_ffff_tmp17 = simd_or(r800_ffff_tmp16, r800_ffff_tmp9);
          struct_Co.cc = simd_or(r800_ffff_tmp17, struct_Co.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(8, 4);
        }
  }
  CarryArray<12, 0> carryQ;
  };

  struct Cn {
  Cn() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Cn & struct_Cn) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_f0, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, bytetest_91, tmp12, tmp13, bytetest_81, tmp14, tmp15;
		BitBlock tmp16, tmp17, tmp18, tmp19, bytetest_8e_91, tmp20, tmp21, tmp22;
		BitBlock tmp23, tmp24, tmp25, tmp26, tmp27, tmp28, bytetest_b0_bf, tmp29;
		BitBlock tmp30, tmp31, bytetest_83, tmp32, tmp33, bytetest_82_8f, tmp34, tmp35;
		BitBlock tmp36, tmp37, tmp38, tmp39, tmp40, bytetest_a9_af, tmp41, tmp42;
		BitBlock bytetest_ba_bf, tmp43, tmp44, tmp45, bytetest_84, tmp46;
		BitBlock bytetest_b5_b5, tmp47, tmp48, tmp49, bytetest_85, tmp50, tmp51;
		BitBlock bytetest_84_bf, tmp52, tmp53, tmp54, tmp55, bytetest_87, tmp56;
		BitBlock bytetest_89_8f, tmp57, tmp58, tmp59, tmp60, tmp61, tmp62;
		BitBlock bytetest_88_99, bytetest_80_bf, tmp63, tmp64, tmp65, tmp66, tmp67;
		BitBlock tmp68, bytetest_9a_bf, tmp69, tmp70, tmp71, tmp72, tmp73, tmp74;
		BitBlock bytetest_9a, tmp75, bytetest_b8_bf, tmp76, tmp77, tmp78, tmp79, tmp80;
		BitBlock bytetest_9c_bf, tmp81, tmp82, tmp83, tmp84, bytetest_9b, tmp85, tmp86;
		BitBlock bytetest_8a_bf, tmp87, tmp88, tmp89, tmp90, tmp91, bytetest_92;
		BitBlock bytetest_8e_8f, tmp92, tmp93, tmp94, tmp95, tmp96, tmp97, bytetest_8d;
		BitBlock tmp98, tmp99, tmp100, bytetest_af_bf, tmp101, tmp102, tmp103, tmp104;
		BitBlock tmp105, tmp106, tmp107, bytetest_a3_af, tmp108, tmp109, tmp110;
		BitBlock tmp111, tmp112, bytetest_92_bf, tmp113, tmp114, tmp115;
		BitBlock bytetest_b4_bf, tmp116, tmp117, tmp118, bytetest_96, bytetest_80_9f;
		BitBlock tmp119, tmp120, tmp121, tmp122, tmp123, tmp124, bytetest_94_95;
		BitBlock tmp125, tmp126, tmp127, tmp128, tmp129, bytetest_93, tmp130, tmp131;
		BitBlock bytetest_91_bf, tmp132, tmp133, tmp134, tmp135, tmp136, bytetest_90;
		BitBlock tmp137, tmp138, tmp139, tmp140, tmp141, tmp142, tmp143, tmp144;
		BitBlock tmp145, bytetest_a9_bb, tmp146, tmp147, tmp148, tmp149, bytetest_a8;
		BitBlock bytetest_b9_bf, tmp150, tmp151, tmp152, tmp153, bytetest_bd, tmp154;
		BitBlock tmp155, bytetest_85_8f, tmp156, tmp157, tmp158, tmp159, bytetest_be;
		BitBlock tmp160, tmp161, bytetest_80_8e, tmp162, tmp163, tmp164;
		BitBlock bytetest_bf_bf, tmp165, tmp166, tmp167, tmp168, bytetest_97_9a;
		BitBlock tmp169, tmp170, tmp171, tmp172, tmp173, bytetest_bf, tmp174, tmp175;
		BitBlock tmp176, bytetest_a0_bf, tmp177, tmp178, tmp179, tmp180, bytetest_9c;
		BitBlock tmp181, tmp182, tmp183, tmp184, tmp185, tmp186, tmp187;
		BitBlock bytetest_81_bf, tmp188, tmp189, tmp190, tmp191, tmp192, bytetest_80;
		BitBlock tmp193, tmp194, bytetest_82_bf, tmp195, tmp196, tmp197, tmp198;
		BitBlock tmp199, bytetest_9d, tmp200, tmp201, bytetest_b6_bf, tmp202, tmp203;
		BitBlock tmp204, tmp205, tmp206, tmp207, tmp208, bytetest_a7_a8, tmp209;
		BitBlock tmp210, tmp211, tmp212, tmp213, bytetest_9e_bf, tmp214, tmp215;
		BitBlock tmp216, tmp217, bytetest_8a_8b, tmp218, tmp219, tmp220, tmp221;
		BitBlock bytetest_89, tmp222, tmp223, bytetest_86_bf, tmp224, tmp225, tmp226;
		BitBlock tmp227, tmp228, bytetest_97_9f, tmp229, tmp230, tmp231, tmp232;
		BitBlock tmp233, tmp234, bytetest_b2_bf, tmp235, tmp236, bytetest_95_95;
		BitBlock tmp237, tmp238, tmp239, bytetest_9d_9d, tmp240, tmp241, tmp242;
		BitBlock bytetest_a0_a1, tmp243, tmp244, tmp245, tmp246, bytetest_a3_a4;
		BitBlock tmp247, tmp248, bytetest_ad_ad, tmp249, bytetest_ba_ba, tmp250;
		BitBlock bytetest_bc_bc, tmp251, bytetest_84_84, tmp252, tmp253, tmp254;
		BitBlock bytetest_94, bytetest_86_86, tmp255, tmp256, tmp257, tmp258;
		BitBlock bytetest_8b_8c, tmp259, tmp260, tmp261, tmp262, tmp263, bytetest_95;
		BitBlock bytetest_85_85, tmp264, tmp265, tmp266, tmp267, tmp268;
		BitBlock bytetest_87_89, tmp269, bytetest_91_91, tmp270, tmp271;
		BitBlock bytetest_a6_a7, tmp272, tmp273, tmp274, bytetest_9f, tmp275;
		BitBlock bytetest_8c_8d, tmp276, tmp277, tmp278, bytetest_9e, tmp279, tmp280;
		BitBlock bytetest_80_b7, tmp281, tmp282, tmp283, tmp284, tmp285, tmp286;
		BitBlock tmp287, tmp288, tmp289, bytetest_b8, tmp290, tmp291, tmp292;
		BitBlock bytetest_a0_a0, tmp293, bytetest_a3_a3, tmp294, tmp295, tmp296;
		BitBlock tmp297, bytetest_a5_a6, tmp298, bytetest_a8_a8, tmp299;
		BitBlock bytetest_b3_b3, tmp300, bytetest_b8_b8, tmp301, tmp302, bytetest_b9;
		BitBlock bytetest_80_81, tmp303, tmp304, tmp305, bytetest_bc_bf, tmp306;
		BitBlock tmp307, tmp308, tmp309, tmp310, bytetest_83_86, tmp311;
		BitBlock bytetest_88_88, tmp312, bytetest_8a_8a, tmp313, bytetest_8c_8c;
		BitBlock tmp314, bytetest_90_90, tmp315, bytetest_93_93, tmp316, tmp317;
		BitBlock bytetest_95_96, tmp318, bytetest_98_98, tmp319, bytetest_9a_9a;
		BitBlock tmp320, bytetest_9c_9c, tmp321, bytetest_9e_9e, tmp322, tmp323;
		BitBlock tmp324, tmp325, bytetest_ab_ab, tmp326, tmp327, tmp328;
		BitBlock bytetest_bd_bd, tmp329, tmp330, bytetest_ba, tmp331, tmp332, tmp333;
		BitBlock tmp334, tmp335, bytetest_9c_a0, tmp336, bytetest_a4_a4, tmp337;
		BitBlock bytetest_aa_aa, tmp338, bytetest_bb, bytetest_80_af, tmp339, tmp340;
		BitBlock tmp341, tmp342, tmp343, tmp344, tmp345, tmp346, tmp347, tmp348;
		BitBlock bytetest_ac_af, tmp349, tmp350, tmp351, tmp352, tmp353, bytetest_82;
		BitBlock bytetest_94_9f, tmp354, tmp355, tmp356, tmp357, tmp358;
		BitBlock bytetest_af_b0, tmp359, bytetest_80_80, tmp360, tmp361, tmp362;
		BitBlock tmp363, tmp364, tmp365, tmp366, bytetest_8b_8f, tmp367, tmp368;
		BitBlock tmp369, bytetest_af_af, tmp370, tmp371, tmp372, tmp373, tmp374;
		BitBlock bytetest_80_a5, tmp375, tmp376, tmp377, bytetest_86, tmp378, tmp379;
		BitBlock tmp380, bytetest_9b_bf, tmp381, tmp382, tmp383, tmp384, bytetest_88;
		BitBlock bytetest_83_8f, tmp385, tmp386, tmp387, bytetest_bb_bf, tmp388;
		BitBlock tmp389, tmp390, tmp391, tmp392, tmp393, tmp394, tmp395, tmp396;
		BitBlock bytetest_8c, tmp397, bytetest_a1_af, tmp398, tmp399, tmp400;
		BitBlock bytetest_b6_b6, tmp401, bytetest_bd_bf, tmp402, tmp403, tmp404;
		BitBlock bytetest_8e, tmp405, tmp406, tmp407, bytetest_8f, tmp408, tmp409;
		BitBlock tmp410, tmp411, bytetest_8b_9f, tmp412, bytetest_b1_bf, tmp413;
		BitBlock tmp414, tmp415, tmp416, bytetest_81_81, tmp417, tmp418, tmp419;
		BitBlock tmp420, tmp421, tmp422, tmp423, bytetest_be_bf, tmp424, tmp425;
		BitBlock tmp426, bytetest_84_8f, tmp427, tmp428, tmp429, bytetest_97, tmp430;
		BitBlock bytetest_80_ba, tmp431, tmp432, tmp433, tmp434, tmp435, tmp436;
		BitBlock tmp437, bytetest_a8_bf, tmp438, tmp439, tmp440, bytetest_99, tmp441;
		BitBlock bytetest_81_84, tmp442, tmp443, tmp444, bytetest_90_bf, tmp445;
		BitBlock tmp446, tmp447, tmp448, tmp449, tmp450, tmp451, tmp452, tmp453;
		BitBlock tmp454, tmp455, bytetest_aa, tmp456, tmp457, bytetest_97_bf, tmp458;
		BitBlock tmp459, tmp460, tmp461, tmp462, bytetest_ab, bytetest_b5_bf, tmp463;
		BitBlock tmp464, tmp465, tmp466, tmp467, bytetest_af, tmp468, tmp469, tmp470;
		BitBlock tmp471, tmp472, bytetest_ac_ae, tmp473, tmp474, tmp475, tmp476;
		BitBlock tmp477, bytetest_a1_bf, tmp478, tmp479, tmp480, bytetest_a0, tmp481;
		BitBlock tmp482, tmp483, tmp484, tmp485, tmp486, bytetest_f3, tmp487, tmp488;
		BitBlock tmp489, tmp490, tmp491, tmp492, tmp493, tmp494, tmp495, tmp496;
		BitBlock tmp497, tmp498, tmp499, tmp500, bytetest_f1_f2, tmp501, tmp502;
		BitBlock tmp503, tmp504, tmp505, tmp506, bytetest_a9_bf, tmp507, tmp508;
		BitBlock tmp509, tmp510, tmp511, tmp512, tmp513, tmp514, tmp515, tmp516;
		BitBlock bytetest_82_9f, tmp517, tmp518, bytetest_82_83, tmp519, tmp520;
		BitBlock tmp521, tmp522, tmp523, tmp524, tmp525, tmp526, tmp527;
		BitBlock bytetest_88_bf, tmp528, tmp529, tmp530, tmp531, tmp532, tmp533;
		BitBlock tmp534, tmp535, tmp536, tmp537, tmp538, tmp539, tmp540, tmp541;
		BitBlock bytetest_c2_df, r80_7ff_tmp1, bytetest_cd, r80_7ff_tmp2;
		BitBlock bytetest_b8_b9, r80_7ff_tmp3, r80_7ff_tmp4, r80_7ff_tmp5, bytetest_ce;
		BitBlock bytetest_80_83, r80_7ff_tmp6, r80_7ff_tmp7, r80_7ff_tmp8;
		BitBlock r80_7ff_tmp9, r80_7ff_tmp10, bytetest_8b_8b, r80_7ff_tmp11;
		BitBlock bytetest_8d_8d, r80_7ff_tmp12, bytetest_a2_a2, r80_7ff_tmp13;
		BitBlock r80_7ff_tmp14, bytetest_d4, r80_7ff_tmp15, bytetest_a8_b0;
		BitBlock r80_7ff_tmp16, r80_7ff_tmp17, r80_7ff_tmp18, bytetest_d5;
		BitBlock bytetest_97_98, r80_7ff_tmp19, r80_7ff_tmp20, r80_7ff_tmp21;
		BitBlock r80_7ff_tmp22, bytetest_d6, r80_7ff_tmp23, r80_7ff_tmp24;
		BitBlock r80_7ff_tmp25, bytetest_8b_8e, r80_7ff_tmp26, r80_7ff_tmp27;
		BitBlock bytetest_d7, bytetest_88_8f, r80_7ff_tmp28, r80_7ff_tmp29;
		BitBlock r80_7ff_tmp30, r80_7ff_tmp31, bytetest_ab_af, r80_7ff_tmp32;
		BitBlock r80_7ff_tmp33, bytetest_d8, r80_7ff_tmp34, r80_7ff_tmp35;
		BitBlock r80_7ff_tmp36, r80_7ff_tmp37, bytetest_dc, bytetest_8e_8e;
		BitBlock r80_7ff_tmp38, r80_7ff_tmp39, r80_7ff_tmp40, bytetest_dd;
		BitBlock r80_7ff_tmp41, r80_7ff_tmp42, r80_7ff_tmp43, bytetest_de;
		BitBlock r80_7ff_tmp44, r80_7ff_tmp45, r80_7ff_tmp46, bytetest_df;
		BitBlock r80_7ff_tmp47, r80_7ff_tmp48, r80_7ff_tmp49, tmp542, bytetest_e1_ef;
		BitBlock bytetest_e0, tmp543, tmp544, tmp545, tmp546, r800_ffff_tmp1;
		BitBlock bytetest_ae_af, r800_ffff_tmp2, r800_ffff_tmp3, r800_ffff_tmp4;
		BitBlock r800_ffff_tmp5, r800_ffff_tmp6, r800_ffff_tmp7, bytetest_a1;
		BitBlock bytetest_9c_9d, r800_ffff_tmp8, r800_ffff_tmp9, r800_ffff_tmp10;
		BitBlock bytetest_a2, r800_ffff_tmp11, r800_ffff_tmp12, r800_ffff_tmp13;
		BitBlock r800_ffff_tmp14, r800_ffff_tmp15, bytetest_9f_bf, r800_ffff_tmp16;
		BitBlock r800_ffff_tmp17, bytetest_a1_a1, r800_ffff_tmp18, bytetest_a3;
		BitBlock r800_ffff_tmp19, bytetest_80_a3, r800_ffff_tmp20, r800_ffff_tmp21;
		BitBlock r800_ffff_tmp22, r800_ffff_tmp23, r800_ffff_tmp24, bytetest_ad_bf;
		BitBlock r800_ffff_tmp25, r800_ffff_tmp26, r800_ffff_tmp27, bytetest_a5;
		BitBlock r800_ffff_tmp28, r800_ffff_tmp29, r800_ffff_tmp30, bytetest_a6;
		BitBlock r800_ffff_tmp31, r800_ffff_tmp32, r800_ffff_tmp33, r800_ffff_tmp34;
		BitBlock r800_ffff_tmp35, bytetest_8d_8e, r800_ffff_tmp36, r800_ffff_tmp37;
		BitBlock bytetest_91_92, r800_ffff_tmp38, bytetest_a9_a9, r800_ffff_tmp39;
		BitBlock bytetest_b1_b1, r800_ffff_tmp40, r800_ffff_tmp41, r800_ffff_tmp42;
		BitBlock r800_ffff_tmp43, bytetest_b3_b5, r800_ffff_tmp44, bytetest_ba_bb;
		BitBlock r800_ffff_tmp45, bytetest_a7, r800_ffff_tmp46, bytetest_85_86;
		BitBlock r800_ffff_tmp47, r800_ffff_tmp48, r800_ffff_tmp49, r800_ffff_tmp50;
		BitBlock bytetest_89_8a, r800_ffff_tmp51, r800_ffff_tmp52, r800_ffff_tmp53;
		BitBlock bytetest_8f_96, r800_ffff_tmp54, bytetest_98_9b, r800_ffff_tmp55;
		BitBlock r800_ffff_tmp56, bytetest_a4_a5, r800_ffff_tmp57, r800_ffff_tmp58;
		BitBlock r800_ffff_tmp59, r800_ffff_tmp60, r800_ffff_tmp61, r800_ffff_tmp62;
		BitBlock r800_ffff_tmp63, r800_ffff_tmp64, r800_ffff_tmp65, r800_ffff_tmp66;
		BitBlock r800_ffff_tmp67, bytetest_b4_b4, r800_ffff_tmp68, bytetest_b7_b7;
		BitBlock r800_ffff_tmp69, r800_ffff_tmp70, r800_ffff_tmp71, bytetest_a9;
		BitBlock r800_ffff_tmp72, r800_ffff_tmp73, r800_ffff_tmp74, r800_ffff_tmp75;
		BitBlock r800_ffff_tmp76, bytetest_8e_90, r800_ffff_tmp77, r800_ffff_tmp78;
		BitBlock bytetest_92_98, r800_ffff_tmp79, r800_ffff_tmp80, r800_ffff_tmp81;
		BitBlock r800_ffff_tmp82, bytetest_9f_a5, r800_ffff_tmp83, r800_ffff_tmp84;
		BitBlock r800_ffff_tmp85, r800_ffff_tmp86, r800_ffff_tmp87, r800_ffff_tmp88;
		BitBlock r800_ffff_tmp89, r800_ffff_tmp90, bytetest_92_92, r800_ffff_tmp91;
		BitBlock r800_ffff_tmp92, r800_ffff_tmp93, r800_ffff_tmp94, r800_ffff_tmp95;
		BitBlock r800_ffff_tmp96, r800_ffff_tmp97, r800_ffff_tmp98, r800_ffff_tmp99;
		BitBlock r800_ffff_tmp100, bytetest_91_9f, r800_ffff_tmp101, r800_ffff_tmp102;
		BitBlock bytetest_ac, r800_ffff_tmp103, r800_ffff_tmp104, r800_ffff_tmp105;
		BitBlock r800_ffff_tmp106, r800_ffff_tmp107, r800_ffff_tmp108;
		BitBlock r800_ffff_tmp109, r800_ffff_tmp110, r800_ffff_tmp111;
		BitBlock r800_ffff_tmp112, r800_ffff_tmp113, r800_ffff_tmp114, bytetest_ad;
		BitBlock r800_ffff_tmp115, r800_ffff_tmp116, r800_ffff_tmp117;
		BitBlock r800_ffff_tmp118, r800_ffff_tmp119, r800_ffff_tmp120, bytetest_8e_95;
		BitBlock r800_ffff_tmp121, r800_ffff_tmp122, r800_ffff_tmp123;
		BitBlock r800_ffff_tmp124, bytetest_ae, r800_ffff_tmp125, r800_ffff_tmp126;
		BitBlock r800_ffff_tmp127, r800_ffff_tmp128, r800_ffff_tmp129;
		BitBlock r800_ffff_tmp130, bytetest_8b_8d, r800_ffff_tmp131, r800_ffff_tmp132;
		BitBlock r800_ffff_tmp133, bytetest_96_98, r800_ffff_tmp134, bytetest_9b_9b;
		BitBlock r800_ffff_tmp135, r800_ffff_tmp136, r800_ffff_tmp137, bytetest_a0_a2;
		BitBlock r800_ffff_tmp138, bytetest_a5_a7, r800_ffff_tmp139, r800_ffff_tmp140;
		BitBlock bytetest_ab_ad, r800_ffff_tmp141, r800_ffff_tmp142, bytetest_ba_bd;
		BitBlock r800_ffff_tmp143, bytetest_83_85, r800_ffff_tmp144, r800_ffff_tmp145;
		BitBlock r800_ffff_tmp146, bytetest_89_89, r800_ffff_tmp147, r800_ffff_tmp148;
		BitBlock r800_ffff_tmp149, r800_ffff_tmp150, bytetest_91_96, r800_ffff_tmp151;
		BitBlock r800_ffff_tmp152, bytetest_98_a5, r800_ffff_tmp153, bytetest_b0;
		BitBlock r800_ffff_tmp154, r800_ffff_tmp155, r800_ffff_tmp156;
		BitBlock r800_ffff_tmp157, r800_ffff_tmp158, r800_ffff_tmp159;
		BitBlock r800_ffff_tmp160, r800_ffff_tmp161, r800_ffff_tmp162;
		BitBlock r800_ffff_tmp163, r800_ffff_tmp164, bytetest_ba_bc, r800_ffff_tmp165;
		BitBlock bytetest_b1, r800_ffff_tmp166, r800_ffff_tmp167, r800_ffff_tmp168;
		BitBlock r800_ffff_tmp169, r800_ffff_tmp170, r800_ffff_tmp171, bytetest_8e_94;
		BitBlock r800_ffff_tmp172, bytetest_97_97, r800_ffff_tmp173, r800_ffff_tmp174;
		BitBlock bytetest_9a_9f, r800_ffff_tmp175, r800_ffff_tmp176, bytetest_b0_b7;
		BitBlock r800_ffff_tmp177, bytetest_b2, r800_ffff_tmp178, r800_ffff_tmp179;
		BitBlock r800_ffff_tmp180, r800_ffff_tmp181, r800_ffff_tmp182;
		BitBlock r800_ffff_tmp183, r800_ffff_tmp184, r800_ffff_tmp185;
		BitBlock r800_ffff_tmp186, bytetest_b3, r800_ffff_tmp187, r800_ffff_tmp188;
		BitBlock r800_ffff_tmp189, r800_ffff_tmp190, r800_ffff_tmp191;
		BitBlock r800_ffff_tmp192, r800_ffff_tmp193, bytetest_97_9d, r800_ffff_tmp194;
		BitBlock bytetest_9f_9f, r800_ffff_tmp195, r800_ffff_tmp196, bytetest_b0_b0;
		BitBlock r800_ffff_tmp197, bytetest_b4, r800_ffff_tmp198, r800_ffff_tmp199;
		BitBlock r800_ffff_tmp200, bytetest_b3_bf, r800_ffff_tmp201, r800_ffff_tmp202;
		BitBlock r800_ffff_tmp203, r800_ffff_tmp204, r800_ffff_tmp205, bytetest_bb_bc;
		BitBlock r800_ffff_tmp206, bytetest_b5, r800_ffff_tmp207, r800_ffff_tmp208;
		BitBlock r800_ffff_tmp209, r800_ffff_tmp210, r800_ffff_tmp211, bytetest_98_9f;
		BitBlock r800_ffff_tmp212, r800_ffff_tmp213, bytetest_b6_b8, r800_ffff_tmp214;
		BitBlock bytetest_b6, r800_ffff_tmp215, r800_ffff_tmp216, r800_ffff_tmp217;
		BitBlock r800_ffff_tmp218, bytetest_97_99, r800_ffff_tmp219, bytetest_b2_b2;
		BitBlock r800_ffff_tmp220, r800_ffff_tmp221, r800_ffff_tmp222, bytetest_b7;
		BitBlock r800_ffff_tmp223, r800_ffff_tmp224, r800_ffff_tmp225;
		BitBlock r800_ffff_tmp226, r800_ffff_tmp227, r800_ffff_tmp228, bytetest_a0_b1;
		BitBlock r800_ffff_tmp229, r800_ffff_tmp230, r800_ffff_tmp231;
		BitBlock r800_ffff_tmp232, r800_ffff_tmp233, r800_ffff_tmp234, bytetest_bb_be;
		BitBlock r800_ffff_tmp235, r800_ffff_tmp236, r800_ffff_tmp237;
		BitBlock r800_ffff_tmp238, r800_ffff_tmp239, r800_ffff_tmp240;
		BitBlock r800_ffff_tmp241, r800_ffff_tmp242, bytetest_83_83, r800_ffff_tmp243;
		BitBlock r800_ffff_tmp244, r800_ffff_tmp245, r800_ffff_tmp246;
		BitBlock r800_ffff_tmp247, r800_ffff_tmp248, bytetest_8e_93, r800_ffff_tmp249;
		BitBlock r800_ffff_tmp250, r800_ffff_tmp251, r800_ffff_tmp252, bytetest_a6_a6;
		BitBlock r800_ffff_tmp253, r800_ffff_tmp254, bytetest_a8_a9, r800_ffff_tmp255;
		BitBlock bytetest_ac_ac, r800_ffff_tmp256, r800_ffff_tmp257, r800_ffff_tmp258;
		BitBlock r800_ffff_tmp259, r800_ffff_tmp260, r800_ffff_tmp261, bytetest_87_87;
		BitBlock r800_ffff_tmp262, r800_ffff_tmp263, bytetest_9a_9b, r800_ffff_tmp264;
		BitBlock r800_ffff_tmp265, r800_ffff_tmp266, r800_ffff_tmp267;
		BitBlock r800_ffff_tmp268, r800_ffff_tmp269, bytetest_ad_b0, r800_ffff_tmp270;
		BitBlock r800_ffff_tmp271, r800_ffff_tmp272, r800_ffff_tmp273;
		BitBlock r800_ffff_tmp274, r800_ffff_tmp275, r800_ffff_tmp276;
		BitBlock r800_ffff_tmp277, r800_ffff_tmp278, bytetest_e1, r800_ffff_tmp279;
		BitBlock r800_ffff_tmp280, r800_ffff_tmp281, r800_ffff_tmp282;
		BitBlock r800_ffff_tmp283, bytetest_88_8c, r800_ffff_tmp284, r800_ffff_tmp285;
		BitBlock r800_ffff_tmp286, r800_ffff_tmp287, r800_ffff_tmp288;
		BitBlock r800_ffff_tmp289, r800_ffff_tmp290, bytetest_99_99, r800_ffff_tmp291;
		BitBlock bytetest_9e_9f, r800_ffff_tmp292, bytetest_8a, r800_ffff_tmp293;
		BitBlock r800_ffff_tmp294, r800_ffff_tmp295, r800_ffff_tmp296;
		BitBlock r800_ffff_tmp297, bytetest_b6_b7, r800_ffff_tmp298, r800_ffff_tmp299;
		BitBlock bytetest_8b, r800_ffff_tmp300, r800_ffff_tmp301, r800_ffff_tmp302;
		BitBlock bytetest_86_87, r800_ffff_tmp303, r800_ffff_tmp304, r800_ffff_tmp305;
		BitBlock r800_ffff_tmp306, r800_ffff_tmp307, bytetest_96_97, r800_ffff_tmp308;
		BitBlock bytetest_9b_9c, r800_ffff_tmp309, r800_ffff_tmp310, r800_ffff_tmp311;
		BitBlock r800_ffff_tmp312, r800_ffff_tmp313, r800_ffff_tmp314;
		BitBlock r800_ffff_tmp315, r800_ffff_tmp316, r800_ffff_tmp317;
		BitBlock r800_ffff_tmp318, r800_ffff_tmp319, bytetest_9d_9f, r800_ffff_tmp320;
		BitBlock r800_ffff_tmp321, r800_ffff_tmp322, r800_ffff_tmp323;
		BitBlock r800_ffff_tmp324, r800_ffff_tmp325, r800_ffff_tmp326;
		BitBlock r800_ffff_tmp327, r800_ffff_tmp328, bytetest_95_9f, r800_ffff_tmp329;
		BitBlock bytetest_b7_bf, r800_ffff_tmp330, r800_ffff_tmp331, r800_ffff_tmp332;
		BitBlock r800_ffff_tmp333, r800_ffff_tmp334, r800_ffff_tmp335;
		BitBlock r800_ffff_tmp336, r800_ffff_tmp337, r800_ffff_tmp338;
		BitBlock r800_ffff_tmp339, bytetest_aa_af, r800_ffff_tmp340, r800_ffff_tmp341;
		BitBlock bytetest_8f_8f, r800_ffff_tmp342, r800_ffff_tmp343, r800_ffff_tmp344;
		BitBlock r800_ffff_tmp345, r800_ffff_tmp346, r800_ffff_tmp347;
		BitBlock r800_ffff_tmp348, r800_ffff_tmp349, r800_ffff_tmp350;
		BitBlock r800_ffff_tmp351, r800_ffff_tmp352, r800_ffff_tmp353;
		BitBlock r800_ffff_tmp354, bytetest_a4, r800_ffff_tmp355, r800_ffff_tmp356;
		BitBlock r800_ffff_tmp357, r800_ffff_tmp358, r800_ffff_tmp359;
		BitBlock r800_ffff_tmp360, bytetest_81_83, r800_ffff_tmp361, r800_ffff_tmp362;
		BitBlock r800_ffff_tmp363, r800_ffff_tmp364, r800_ffff_tmp365;
		BitBlock r800_ffff_tmp366, r800_ffff_tmp367, r800_ffff_tmp368, bytetest_8a_8f;
		BitBlock r800_ffff_tmp369, r800_ffff_tmp370, r800_ffff_tmp371, bytetest_9b_9d;
		BitBlock r800_ffff_tmp372, r800_ffff_tmp373, r800_ffff_tmp374;
		BitBlock r800_ffff_tmp375, r800_ffff_tmp376, r800_ffff_tmp377;
		BitBlock r800_ffff_tmp378, bytetest_bd_be, r800_ffff_tmp379, r800_ffff_tmp380;
		BitBlock r800_ffff_tmp381, r800_ffff_tmp382, r800_ffff_tmp383;
		BitBlock r800_ffff_tmp384, r800_ffff_tmp385, r800_ffff_tmp386;
		BitBlock r800_ffff_tmp387, bytetest_ae_bf, r800_ffff_tmp388, r800_ffff_tmp389;
		BitBlock bytetest_8c_8f, r800_ffff_tmp390, r800_ffff_tmp391, r800_ffff_tmp392;
		BitBlock r800_ffff_tmp393, r800_ffff_tmp394, r800_ffff_tmp395, bytetest_b4_bb;
		BitBlock r800_ffff_tmp396, r800_ffff_tmp397, r800_ffff_tmp398;
		BitBlock r800_ffff_tmp399, bytetest_b8_ba, r800_ffff_tmp400, r800_ffff_tmp401;
		BitBlock r800_ffff_tmp402, bytetest_8a_8c, r800_ffff_tmp403, r800_ffff_tmp404;
		BitBlock r800_ffff_tmp405, r800_ffff_tmp406, r800_ffff_tmp407;
		BitBlock r800_ffff_tmp408, r800_ffff_tmp409, r800_ffff_tmp410;
		BitBlock r800_ffff_tmp411, r800_ffff_tmp412, r800_ffff_tmp413, bytetest_a7_bb;
		BitBlock r800_ffff_tmp414, r800_ffff_tmp415, r800_ffff_tmp416, bytetest_bc;
		BitBlock r800_ffff_tmp417, r800_ffff_tmp418, r800_ffff_tmp419;
		BitBlock r800_ffff_tmp420, r800_ffff_tmp421, r800_ffff_tmp422;
		BitBlock r800_ffff_tmp423, r800_ffff_tmp424, r800_ffff_tmp425;
		BitBlock r800_ffff_tmp426, r800_ffff_tmp427, r800_ffff_tmp428;
		BitBlock r800_ffff_tmp429, r800_ffff_tmp430, r800_ffff_tmp431;
		BitBlock r800_ffff_tmp432, r800_ffff_tmp433, r800_ffff_tmp434;
		BitBlock r800_ffff_tmp435, r800_ffff_tmp436, r800_ffff_tmp437, bytetest_b0_b1;
		BitBlock r800_ffff_tmp438, r800_ffff_tmp439, r800_ffff_tmp440, bytetest_e2;
		BitBlock bytetest_a5_a5, r800_ffff_tmp441, r800_ffff_tmp442, r800_ffff_tmp443;
		BitBlock r800_ffff_tmp444, r800_ffff_tmp445, bytetest_b2_b3, r800_ffff_tmp446;
		BitBlock r800_ffff_tmp447, r800_ffff_tmp448, r800_ffff_tmp449;
		BitBlock r800_ffff_tmp450, bytetest_80_8f, r800_ffff_tmp451, r800_ffff_tmp452;
		BitBlock r800_ffff_tmp453, r800_ffff_tmp454, r800_ffff_tmp455;
		BitBlock r800_ffff_tmp456, r800_ffff_tmp457, r800_ffff_tmp458;
		BitBlock r800_ffff_tmp459, r800_ffff_tmp460, r800_ffff_tmp461;
		BitBlock r800_ffff_tmp462, r800_ffff_tmp463, r800_ffff_tmp464, bytetest_a7_bf;
		BitBlock r800_ffff_tmp465, r800_ffff_tmp466, r800_ffff_tmp467;
		BitBlock r800_ffff_tmp468, r800_ffff_tmp469, r800_ffff_tmp470;
		BitBlock r800_ffff_tmp471, r800_ffff_tmp472, r800_ffff_tmp473;
		BitBlock r800_ffff_tmp474, bytetest_8d_8f, r800_ffff_tmp475, r800_ffff_tmp476;
		BitBlock r800_ffff_tmp477, r800_ffff_tmp478, r800_ffff_tmp479;
		BitBlock r800_ffff_tmp480, r800_ffff_tmp481, r800_ffff_tmp482;
		BitBlock r800_ffff_tmp483, r800_ffff_tmp484, r800_ffff_tmp485;
		BitBlock r800_ffff_tmp486, r800_ffff_tmp487, r800_ffff_tmp488;
		BitBlock r800_ffff_tmp489, bytetest_b4_b8, r800_ffff_tmp490, r800_ffff_tmp491;
		BitBlock r800_ffff_tmp492, r800_ffff_tmp493, r800_ffff_tmp494;
		BitBlock r800_ffff_tmp495, bytetest_a8_ac, r800_ffff_tmp496, r800_ffff_tmp497;
		BitBlock bytetest_a8_ae, r800_ffff_tmp498, r800_ffff_tmp499, r800_ffff_tmp500;
		BitBlock r800_ffff_tmp501, r800_ffff_tmp502, bytetest_b1_be, r800_ffff_tmp503;
		BitBlock r800_ffff_tmp504, r800_ffff_tmp505, r800_ffff_tmp506, bytetest_a7_a7;
		BitBlock r800_ffff_tmp507, r800_ffff_tmp508, r800_ffff_tmp509;
		BitBlock r800_ffff_tmp510, r800_ffff_tmp511, r800_ffff_tmp512;
		BitBlock r800_ffff_tmp513, r800_ffff_tmp514, r800_ffff_tmp515;
		BitBlock r800_ffff_tmp516, r800_ffff_tmp517, r800_ffff_tmp518;
		BitBlock r800_ffff_tmp519, r800_ffff_tmp520, r800_ffff_tmp521;
		BitBlock r800_ffff_tmp522, r800_ffff_tmp523, r800_ffff_tmp524;
		BitBlock r800_ffff_tmp525, r800_ffff_tmp526, r800_ffff_tmp527;
		BitBlock r800_ffff_tmp528, r800_ffff_tmp529, r800_ffff_tmp530;
		BitBlock r800_ffff_tmp531, r800_ffff_tmp532, bytetest_96_af, r800_ffff_tmp533;
		BitBlock r800_ffff_tmp534, r800_ffff_tmp535, r800_ffff_tmp536, bytetest_e3;
		BitBlock r800_ffff_tmp537, r800_ffff_tmp538, r800_ffff_tmp539;
		BitBlock r800_ffff_tmp540, r800_ffff_tmp541, r800_ffff_tmp542;
		BitBlock r800_ffff_tmp543, r800_ffff_tmp544, r800_ffff_tmp545, bytetest_80_84;
		BitBlock r800_ffff_tmp546, r800_ffff_tmp547, r800_ffff_tmp548, bytetest_ae_b0;
		BitBlock r800_ffff_tmp549, r800_ffff_tmp550, r800_ffff_tmp551;
		BitBlock r800_ffff_tmp552, r800_ffff_tmp553, bytetest_a4_af, r800_ffff_tmp554;
		BitBlock r800_ffff_tmp555, r800_ffff_tmp556, r800_ffff_tmp557;
		BitBlock r800_ffff_tmp558, r800_ffff_tmp559, r800_ffff_tmp560;
		BitBlock r800_ffff_tmp561, r800_ffff_tmp562, bytetest_e4, r800_ffff_tmp563;
		BitBlock r800_ffff_tmp564, r800_ffff_tmp565, r800_ffff_tmp566;
		BitBlock r800_ffff_tmp567, bytetest_e9, r800_ffff_tmp568, bytetest_8d_bf;
		BitBlock r800_ffff_tmp569, r800_ffff_tmp570, r800_ffff_tmp571;
		BitBlock r800_ffff_tmp572, r800_ffff_tmp573, bytetest_ea, r800_ffff_tmp574;
		BitBlock r800_ffff_tmp575, r800_ffff_tmp576, r800_ffff_tmp577;
		BitBlock r800_ffff_tmp578, bytetest_87_8f, r800_ffff_tmp579, r800_ffff_tmp580;
		BitBlock r800_ffff_tmp581, bytetest_98, r800_ffff_tmp582, bytetest_ac_bf;
		BitBlock r800_ffff_tmp583, r800_ffff_tmp584, r800_ffff_tmp585, bytetest_98_9e;
		BitBlock r800_ffff_tmp586, r800_ffff_tmp587, r800_ffff_tmp588;
		BitBlock r800_ffff_tmp589, r800_ffff_tmp590, r800_ffff_tmp591;
		BitBlock r800_ffff_tmp592, r800_ffff_tmp593, r800_ffff_tmp594;
		BitBlock r800_ffff_tmp595, r800_ffff_tmp596, r800_ffff_tmp597;
		BitBlock r800_ffff_tmp598, bytetest_ab_bf, r800_ffff_tmp599, r800_ffff_tmp600;
		BitBlock r800_ffff_tmp601, r800_ffff_tmp602, r800_ffff_tmp603;
		BitBlock r800_ffff_tmp604, r800_ffff_tmp605, r800_ffff_tmp606;
		BitBlock r800_ffff_tmp607, r800_ffff_tmp608, bytetest_85_8d, r800_ffff_tmp609;
		BitBlock r800_ffff_tmp610, r800_ffff_tmp611, r800_ffff_tmp612;
		BitBlock r800_ffff_tmp613, r800_ffff_tmp614, bytetest_94_9e, r800_ffff_tmp615;
		BitBlock r800_ffff_tmp616, r800_ffff_tmp617, r800_ffff_tmp618;
		BitBlock r800_ffff_tmp619, r800_ffff_tmp620, r800_ffff_tmp621, bytetest_9a_9d;
		BitBlock r800_ffff_tmp622, r800_ffff_tmp623, r800_ffff_tmp624;
		BitBlock r800_ffff_tmp625, r800_ffff_tmp626, r800_ffff_tmp627;
		BitBlock r800_ffff_tmp628, r800_ffff_tmp629, r800_ffff_tmp630;
		BitBlock r800_ffff_tmp631, r800_ffff_tmp632, r800_ffff_tmp633;
		BitBlock r800_ffff_tmp634, bytetest_83_9a, r800_ffff_tmp635, r800_ffff_tmp636;
		BitBlock r800_ffff_tmp637, r800_ffff_tmp638, r800_ffff_tmp639;
		BitBlock r800_ffff_tmp640, r800_ffff_tmp641, r800_ffff_tmp642, bytetest_87_88;
		BitBlock r800_ffff_tmp643, bytetest_8f_90, r800_ffff_tmp644, r800_ffff_tmp645;
		BitBlock r800_ffff_tmp646, bytetest_ad_ae, r800_ffff_tmp647, r800_ffff_tmp648;
		BitBlock r800_ffff_tmp649, r800_ffff_tmp650, r800_ffff_tmp651;
		BitBlock r800_ffff_tmp652, r800_ffff_tmp653, r800_ffff_tmp654;
		BitBlock r800_ffff_tmp655, bytetest_ed, r800_ffff_tmp656, r800_ffff_tmp657;
		BitBlock r800_ffff_tmp658, r800_ffff_tmp659, r800_ffff_tmp660, bytetest_87_8a;
		BitBlock r800_ffff_tmp661, r800_ffff_tmp662, r800_ffff_tmp663;
		BitBlock r800_ffff_tmp664, bytetest_ef, r800_ffff_tmp665, r800_ffff_tmp666;
		BitBlock r800_ffff_tmp667, r800_ffff_tmp668, r800_ffff_tmp669;
		BitBlock r800_ffff_tmp670, r800_ffff_tmp671, r800_ffff_tmp672;
		BitBlock r800_ffff_tmp673, r800_ffff_tmp674, bytetest_87_92, r800_ffff_tmp675;
		BitBlock r800_ffff_tmp676, r800_ffff_tmp677, bytetest_98_9c, r800_ffff_tmp678;
		BitBlock r800_ffff_tmp679, r800_ffff_tmp680, r800_ffff_tmp681, bytetest_82_82;
		BitBlock r800_ffff_tmp682, r800_ffff_tmp683, r800_ffff_tmp684;
		BitBlock r800_ffff_tmp685, r800_ffff_tmp686, bytetest_82_92, r800_ffff_tmp687;
		BitBlock r800_ffff_tmp688, r800_ffff_tmp689, r800_ffff_tmp690;
		BitBlock r800_ffff_tmp691, r800_ffff_tmp692, bytetest_90_91, r800_ffff_tmp693;
		BitBlock r800_ffff_tmp694, r800_ffff_tmp695, r800_ffff_tmp696, bytetest_88_af;
		BitBlock r800_ffff_tmp697, r800_ffff_tmp698, r800_ffff_tmp699;
		BitBlock r800_ffff_tmp700, r800_ffff_tmp701, r800_ffff_tmp702;
		BitBlock r800_ffff_tmp703, bytetest_a7_af, r800_ffff_tmp704, r800_ffff_tmp705;
		BitBlock r800_ffff_tmp706, r800_ffff_tmp707, r800_ffff_tmp708;
		BitBlock r800_ffff_tmp709, r800_ffff_tmp710, r800_ffff_tmp711;
		BitBlock r800_ffff_tmp712, r800_ffff_tmp713, r800_ffff_tmp714;
		BitBlock r800_ffff_tmp715, r800_ffff_tmp716, r800_ffff_tmp717;
		BitBlock r800_ffff_tmp718, r800_ffff_tmp719, r800_ffff_tmp720;
		BitBlock r800_ffff_tmp721, r800_ffff_tmp722, r800_ffff_tmp723, bytetest_88_89;
		BitBlock r800_ffff_tmp724, r800_ffff_tmp725, bytetest_98_99, r800_ffff_tmp726;
		BitBlock r800_ffff_tmp727, r800_ffff_tmp728, r800_ffff_tmp729;
		BitBlock r800_ffff_tmp730, bytetest_af_b8, r800_ffff_tmp731, r800_ffff_tmp732;
		BitBlock tmp547, tmp548, tmp549, r10000_10fff_tmp1, r10000_10fff_tmp2;
		BitBlock r10000_10fff_tmp3, r10000_10fff_tmp4, r10000_10fff_tmp5;
		BitBlock r10000_10fff_tmp6, bytetest_bb_bb, r10000_10fff_tmp7, bytetest_be_be;
		BitBlock r10000_10fff_tmp8, r10000_10fff_tmp9, r10000_10fff_tmp10;
		BitBlock r10000_10fff_tmp11, r10000_10fff_tmp12, r10000_10fff_tmp13;
		BitBlock r10000_10fff_tmp14, r10000_10fff_tmp15, r10000_10fff_tmp16;
		BitBlock r10000_10fff_tmp17, r10000_10fff_tmp18, r10000_10fff_tmp19;
		BitBlock bytetest_b4_b6, r10000_10fff_tmp20, r10000_10fff_tmp21;
		BitBlock r10000_10fff_tmp22, r10000_10fff_tmp23, r10000_10fff_tmp24;
		BitBlock r10000_10fff_tmp25, r10000_10fff_tmp26, r10000_10fff_tmp27;
		BitBlock r10000_10fff_tmp28, r10000_10fff_tmp29, r10000_10fff_tmp30;
		BitBlock r10000_10fff_tmp31, r10000_10fff_tmp32, r10000_10fff_tmp33;
		BitBlock r10000_10fff_tmp34, r10000_10fff_tmp35, r10000_10fff_tmp36;
		BitBlock r10000_10fff_tmp37, r10000_10fff_tmp38, r10000_10fff_tmp39;
		BitBlock r10000_10fff_tmp40, r10000_10fff_tmp41, r10000_10fff_tmp42;
		BitBlock r10000_10fff_tmp43, r10000_10fff_tmp44, r10000_10fff_tmp45;
		BitBlock r10000_10fff_tmp46, bytetest_8b_bf, r10000_10fff_tmp47;
		BitBlock r10000_10fff_tmp48, r10000_10fff_tmp49, r10000_10fff_tmp50;
		BitBlock r10000_10fff_tmp51, r10000_10fff_tmp52, bytetest_84_87;
		BitBlock r10000_10fff_tmp53, r10000_10fff_tmp54, r10000_10fff_tmp55;
		BitBlock r10000_10fff_tmp56, r10000_10fff_tmp57, bytetest_96_bf;
		BitBlock r10000_10fff_tmp58, r10000_10fff_tmp59, r10000_10fff_tmp60;
		BitBlock r10000_10fff_tmp61, bytetest_93_9f, r10000_10fff_tmp62;
		BitBlock r10000_10fff_tmp63, r10000_10fff_tmp64, bytetest_aa_bf;
		BitBlock r10000_10fff_tmp65, r10000_10fff_tmp66, r10000_10fff_tmp67;
		BitBlock r10000_10fff_tmp68, r10000_10fff_tmp69, r10000_10fff_tmp70;
		BitBlock r10000_10fff_tmp71, r10000_10fff_tmp72, bytetest_b9_bb;
		BitBlock r10000_10fff_tmp73, r10000_10fff_tmp74, r10000_10fff_tmp75;
		BitBlock bytetest_96_96, r10000_10fff_tmp76, r10000_10fff_tmp77;
		BitBlock r10000_10fff_tmp78, bytetest_a2_a3, r10000_10fff_tmp79;
		BitBlock r10000_10fff_tmp80, r10000_10fff_tmp81, r10000_10fff_tmp82;
		BitBlock r10000_10fff_tmp83, bytetest_9c_9e, r10000_10fff_tmp84;
		BitBlock r10000_10fff_tmp85, r10000_10fff_tmp86, r10000_10fff_tmp87;
		BitBlock bytetest_ba_be, r10000_10fff_tmp88, r10000_10fff_tmp89;
		BitBlock r10000_10fff_tmp90, r10000_10fff_tmp91, bytetest_b8_bd;
		BitBlock r10000_10fff_tmp92, r10000_10fff_tmp93, r10000_10fff_tmp94;
		BitBlock r10000_10fff_tmp95, r10000_10fff_tmp96, r10000_10fff_tmp97;
		BitBlock r10000_10fff_tmp98, r10000_10fff_tmp99, r10000_10fff_tmp100;
		BitBlock r10000_10fff_tmp101, r10000_10fff_tmp102, bytetest_87_8b;
		BitBlock r10000_10fff_tmp103, bytetest_94_94, r10000_10fff_tmp104;
		BitBlock r10000_10fff_tmp105, bytetest_b4_b7, r10000_10fff_tmp106;
		BitBlock r10000_10fff_tmp107, r10000_10fff_tmp108, r10000_10fff_tmp109;
		BitBlock r10000_10fff_tmp110, r10000_10fff_tmp111, bytetest_99_9f;
		BitBlock r10000_10fff_tmp112, bytetest_aa_ab, r10000_10fff_tmp113;
		BitBlock r10000_10fff_tmp114, r10000_10fff_tmp115, r10000_10fff_tmp116;
		BitBlock r10000_10fff_tmp117, r10000_10fff_tmp118, r10000_10fff_tmp119;
		BitBlock r10000_10fff_tmp120, r10000_10fff_tmp121, r10000_10fff_tmp122;
		BitBlock r10000_10fff_tmp123, bytetest_b3_b7, r10000_10fff_tmp124;
		BitBlock r10000_10fff_tmp125, r10000_10fff_tmp126, r10000_10fff_tmp127;
		BitBlock r10000_10fff_tmp128, r10000_10fff_tmp129, r10000_10fff_tmp130;
		BitBlock r10000_10fff_tmp131, bytetest_b2_b8, r10000_10fff_tmp132;
		BitBlock r10000_10fff_tmp133, r10000_10fff_tmp134, r10000_10fff_tmp135;
		BitBlock bytetest_89_bf, r10000_10fff_tmp136, r10000_10fff_tmp137;
		BitBlock r10000_10fff_tmp138, r10000_10fff_tmp139, r10000_10fff_tmp140;
		BitBlock r10000_10fff_tmp141, r10000_10fff_tmp142, r10000_10fff_tmp143;
		BitBlock r10000_10fff_tmp144, r10000_10fff_tmp145;




        struct_Cn.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_and(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_or(tmp4, tmp5);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp11 = simd_andc(tmp10, tmp4);
        bytetest_91 = simd_and(tmp9, tmp11);
        tmp12 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp13 = simd_andc(tmp7, tmp12);
        bytetest_81 = simd_and(tmp13, tmp11);
        tmp14 = simd_andc(tmp7, basis_bits.bit_2);
        tmp15 = simd_or(tmp4, basis_bits.bit_6);
        tmp16 = simd_not(tmp15);
        tmp17 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp18 = simd_and(tmp17, basis_bits.bit_6);
        tmp19 = simd_or(simd_and(basis_bits.bit_3, tmp16), simd_andc(tmp18, basis_bits.bit_3));
        bytetest_8e_91 = simd_and(tmp14, tmp19);
        tmp20 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp20, carryQ.get_carry_in(0), tmp21));
        tmp22 = simd_and(tmp21, bytetest_f0);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp22, carryQ.get_carry_in(1), tmp23));
        tmp24 = simd_and(tmp23, bytetest_91);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp24, carryQ.get_carry_in(2), tmp25));
        tmp26 = simd_and(tmp25, bytetest_81);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp26, carryQ.get_carry_in(3), tmp27));
        tmp28 = simd_and(tmp27, bytetest_8e_91);
        struct_Cn.cc = simd_or(tmp28, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        bytetest_81 = simd_and(tmp13, tmp11);
        bytetest_b0_bf = simd_and(tmp7, tmp2);
        tmp29 = simd_and(tmp27, bytetest_b0_bf);
        struct_Cn.cc = simd_or(tmp29, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        tmp30 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp31 = simd_andc(tmp30, tmp4);
        bytetest_83 = simd_and(tmp13, tmp31);
        tmp32 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
        tmp33 = simd_or(basis_bits.bit_4, tmp32);
        bytetest_82_8f = simd_and(tmp13, tmp33);
        tmp34 = simd_and(tmp25, bytetest_83);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp34, carryQ.get_carry_in(4), tmp35));
        tmp36 = simd_and(tmp35, bytetest_82_8f);
        struct_Cn.cc = simd_or(tmp36, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        bytetest_83 = simd_and(tmp13, tmp31);
        tmp37 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp38 = simd_and(tmp7, tmp37);
        tmp39 = simd_and(tmp38, basis_bits.bit_4);
        tmp40 = simd_or(basis_bits.bit_5, tmp5);
        bytetest_a9_af = simd_and(tmp39, tmp40);
        tmp41 = simd_and(tmp35, bytetest_a9_af);
        struct_Cn.cc = simd_or(tmp41, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        bytetest_83 = simd_and(tmp13, tmp31);
        tmp42 = simd_and(bytetest_b0_bf, basis_bits.bit_4);
        bytetest_ba_bf = simd_and(tmp42, tmp32);
        tmp43 = simd_and(tmp35, bytetest_ba_bf);
        struct_Cn.cc = simd_or(tmp43, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        tmp44 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp45 = simd_andc(tmp44, tmp5);
        bytetest_84 = simd_and(tmp13, tmp45);
        tmp46 = simd_and(tmp44, tmp10);
        bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp46);
        tmp47 = simd_and(tmp25, bytetest_84);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp47, carryQ.get_carry_in(5), tmp48));
        tmp49 = simd_and(tmp48, bytetest_b5_b5);
        struct_Cn.cc = simd_or(tmp49, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        bytetest_85 = simd_and(tmp13, tmp46);
        tmp50 = simd_or(basis_bits.bit_3, tmp4);
        tmp51 = simd_or(basis_bits.bit_2, tmp50);
        bytetest_84_bf = simd_and(tmp7, tmp51);
        tmp52 = simd_and(tmp25, bytetest_85);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp52, carryQ.get_carry_in(6), tmp53));
        tmp54 = simd_and(tmp53, bytetest_84_bf);
        struct_Cn.cc = simd_or(tmp54, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        tmp55 = simd_and(tmp44, tmp30);
        bytetest_87 = simd_and(tmp13, tmp55);
        tmp56 = simd_and(tmp13, basis_bits.bit_4);
        bytetest_89_8f = simd_and(tmp56, tmp40);
        tmp57 = simd_and(tmp25, bytetest_87);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp57, carryQ.get_carry_in(7), tmp58));
        tmp59 = simd_and(tmp58, bytetest_89_8f);
        struct_Cn.cc = simd_or(tmp59, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        tmp60 = simd_and(basis_bits.bit_4, tmp32);
        tmp61 = simd_not(tmp60);
        tmp62 = simd_or(simd_and(basis_bits.bit_3, tmp61), simd_andc(basis_bits.bit_4, basis_bits.bit_3));
        bytetest_88_99 = simd_and(tmp14, tmp62);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp63 = simd_and(tmp25, bytetest_88_99);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(tmp63, carryQ.get_carry_in(8), tmp64));
        tmp65 = simd_and(tmp64, bytetest_80_bf);
        tmp66 = simd_andc(bytetest_80_bf, tmp12);
        bytetest_87 = simd_and(tmp66, tmp55);
        tmp67 = simd_and(basis_bits.bit_3, tmp60);
        tmp68 = simd_or(basis_bits.bit_2, tmp67);
        bytetest_9a_bf = simd_and(bytetest_80_bf, tmp68);
        tmp69 = simd_and(tmp58, bytetest_9a_bf);
        tmp70 = simd_or(tmp69, tmp65);
        struct_Cn.cc = simd_or(tmp70, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        tmp71 = simd_and(bytetest_80_bf, tmp8);
        bytetest_91 = simd_and(tmp71, tmp11);
        tmp72 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp73 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp74 = simd_and(tmp72, tmp73);
        bytetest_9a = simd_and(tmp71, tmp74);
        tmp75 = simd_and(bytetest_80_bf, tmp2);
        bytetest_b8_bf = simd_and(tmp75, basis_bits.bit_4);
        tmp76 = simd_and(tmp25, bytetest_9a);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(tmp76, carryQ.get_carry_in(9), tmp77));
        tmp78 = simd_and(tmp77, bytetest_b8_bf);
        struct_Cn.cc = simd_or(tmp78, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp71, tmp11);
        tmp79 = simd_and(basis_bits.bit_3, tmp17);
        tmp80 = simd_or(basis_bits.bit_2, tmp79);
        bytetest_9c_bf = simd_and(bytetest_80_bf, tmp80);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp81 = simd_and(tmp25, bytetest_9c_bf);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(tmp81, carryQ.get_carry_in(10), tmp82));
        tmp83 = simd_and(tmp82, bytetest_80_bf);
        tmp84 = simd_and(tmp72, tmp30);
        bytetest_9b = simd_and(tmp71, tmp84);
        tmp85 = simd_or(basis_bits.bit_3, tmp60);
        tmp86 = simd_or(basis_bits.bit_2, tmp85);
        bytetest_8a_bf = simd_and(bytetest_80_bf, tmp86);
        tmp87 = simd_and(tmp25, bytetest_9b);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(tmp87, carryQ.get_carry_in(11), tmp88));
        tmp89 = simd_and(tmp88, bytetest_8a_bf);
        tmp90 = simd_or(tmp89, tmp83);
        struct_Cn.cc = simd_or(tmp90, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        tmp91 = simd_andc(tmp73, tmp4);
        bytetest_92 = simd_and(tmp71, tmp91);
        bytetest_8e_8f = simd_and(tmp66, tmp18);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp92 = simd_and(tmp23, bytetest_92);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(tmp92, carryQ.get_carry_in(12), tmp93));
        tmp94 = simd_and(tmp93, bytetest_8e_8f);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(tmp94, carryQ.get_carry_in(13), tmp95));
        tmp96 = simd_and(tmp95, bytetest_80_bf);
        tmp97 = simd_and(tmp17, tmp10);
        bytetest_8d = simd_and(tmp66, tmp97);
        tmp98 = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp99 = simd_and(tmp17, tmp30);
        tmp100 = simd_or(basis_bits.bit_3, tmp99);
        bytetest_af_bf = simd_and(tmp98, tmp100);
        tmp101 = simd_and(tmp93, bytetest_8d);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(tmp101, carryQ.get_carry_in(14), tmp102));
        tmp103 = simd_and(tmp102, bytetest_af_bf);
        tmp104 = simd_or(tmp103, tmp96);
        struct_Cn.cc = simd_or(tmp104, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_92 = simd_and(tmp71, tmp91);
        bytetest_91 = simd_and(tmp71, tmp11);
        tmp105 = simd_and(bytetest_80_bf, tmp37);
        tmp106 = simd_or(basis_bits.bit_5, tmp30);
        tmp107 = simd_or(basis_bits.bit_4, tmp106);
        bytetest_a3_af = simd_and(tmp105, tmp107);
        tmp108 = simd_and(tmp93, bytetest_91);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(tmp108, carryQ.get_carry_in(15), tmp109));
        tmp110 = simd_and(tmp109, bytetest_a3_af);
        struct_Cn.cc = simd_or(tmp110, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_92 = simd_and(tmp71, tmp91);
        tmp111 = simd_and(basis_bits.bit_3, tmp15);
        tmp112 = simd_or(basis_bits.bit_2, tmp111);
        bytetest_92_bf = simd_and(bytetest_80_bf, tmp112);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp113 = simd_and(tmp93, bytetest_92_bf);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(tmp113, carryQ.get_carry_in(16), tmp114));
        tmp115 = simd_and(tmp114, bytetest_80_bf);
        bytetest_91 = simd_and(tmp71, tmp11);
        bytetest_b4_bf = simd_and(tmp75, tmp4);
        tmp116 = simd_and(tmp109, bytetest_b4_bf);
        tmp117 = simd_or(tmp116, tmp115);
        struct_Cn.cc = simd_or(tmp117, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        tmp118 = simd_and(tmp44, tmp73);
        bytetest_96 = simd_and(tmp71, tmp118);
        bytetest_80_9f = simd_andc(bytetest_80_bf, basis_bits.bit_2);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp119 = simd_and(tmp23, bytetest_96);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(tmp119, carryQ.get_carry_in(17), tmp120));
        tmp121 = simd_and(tmp120, bytetest_80_9f);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(tmp121, carryQ.get_carry_in(18), tmp122));
        tmp123 = simd_and(tmp122, bytetest_80_bf);
        tmp124 = simd_andc(tmp44, basis_bits.bit_6);
        bytetest_94_95 = simd_and(tmp71, tmp124);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp125 = simd_and(tmp23, bytetest_94_95);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(tmp125, carryQ.get_carry_in(19), tmp126));
        tmp127 = simd_and(tmp126, bytetest_80_bf);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(tmp127, carryQ.get_carry_in(20), tmp128));
        tmp129 = simd_and(tmp128, bytetest_80_bf);
        bytetest_93 = simd_and(tmp71, tmp31);
        tmp130 = simd_and(basis_bits.bit_3, tmp6);
        tmp131 = simd_or(basis_bits.bit_2, tmp130);
        bytetest_91_bf = simd_and(bytetest_80_bf, tmp131);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp132 = simd_and(tmp23, bytetest_93);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(tmp132, carryQ.get_carry_in(21), tmp133));
        tmp134 = simd_and(tmp133, bytetest_91_bf);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(tmp134, carryQ.get_carry_in(22), tmp135));
        tmp136 = simd_and(tmp135, bytetest_80_bf);
        bytetest_90 = simd_andc(tmp71, tmp6);
        bytetest_af_bf = simd_and(tmp98, tmp100);
        tmp137 = simd_and(tmp133, bytetest_90);
        carryQ.cq[23] = carryout2carry(pablo_blk_Advance(tmp137, carryQ.get_carry_in(23), tmp138));
        tmp139 = simd_and(tmp138, bytetest_af_bf);
        tmp140 = simd_or(tmp139, tmp136);
        tmp141 = simd_or(tmp140, tmp129);
        tmp142 = simd_or(tmp141, tmp123);
        struct_Cn.cc = simd_or(tmp142, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_96 = simd_and(tmp71, tmp118);
        tmp143 = simd_not(tmp17);
        tmp144 = simd_and(basis_bits.bit_4, tmp40);
        tmp145 = simd_or(simd_and(basis_bits.bit_3, tmp143), simd_andc(tmp144, basis_bits.bit_3));
        bytetest_a9_bb = simd_and(tmp98, tmp145);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp146 = simd_and(tmp120, bytetest_a9_bb);
        carryQ.cq[24] = carryout2carry(pablo_blk_Advance(tmp146, carryQ.get_carry_in(24), tmp147));
        tmp148 = simd_and(tmp147, bytetest_80_bf);
        tmp149 = simd_andc(tmp72, tmp5);
        bytetest_a8 = simd_and(tmp105, tmp149);
        bytetest_b9_bf = simd_and(bytetest_b8_bf, tmp40);
        tmp150 = simd_and(tmp120, bytetest_a8);
        carryQ.cq[25] = carryout2carry(pablo_blk_Advance(tmp150, carryQ.get_carry_in(25), tmp151));
        tmp152 = simd_and(tmp151, bytetest_b9_bf);
        tmp153 = simd_or(tmp152, tmp148);
        struct_Cn.cc = simd_or(tmp153, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_96 = simd_and(tmp71, tmp118);
        bytetest_bd = simd_and(tmp75, tmp97);
        tmp154 = simd_and(basis_bits.bit_5, tmp5);
        tmp155 = simd_or(basis_bits.bit_4, tmp154);
        bytetest_85_8f = simd_and(tmp66, tmp155);
        tmp156 = simd_and(tmp120, bytetest_bd);
        carryQ.cq[26] = carryout2carry(pablo_blk_Advance(tmp156, carryQ.get_carry_in(26), tmp157));
        tmp158 = simd_and(tmp157, bytetest_85_8f);
        struct_Cn.cc = simd_or(tmp158, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_96 = simd_and(tmp71, tmp118);
        tmp159 = simd_and(tmp17, tmp73);
        bytetest_be = simd_and(tmp75, tmp159);
        tmp160 = simd_and(basis_bits.bit_5, tmp30);
        tmp161 = simd_and(basis_bits.bit_4, tmp160);
        bytetest_80_8e = simd_andc(tmp66, tmp161);
        tmp162 = simd_and(tmp120, bytetest_be);
        carryQ.cq[27] = carryout2carry(pablo_blk_Advance(tmp162, carryQ.get_carry_in(27), tmp163));
        tmp164 = simd_and(tmp163, bytetest_80_8e);
        bytetest_bd = simd_and(tmp75, tmp97);
        bytetest_bf_bf = simd_and(tmp75, tmp99);
        tmp165 = simd_and(tmp157, bytetest_bf_bf);
        tmp166 = simd_or(tmp165, tmp164);
        struct_Cn.cc = simd_or(tmp166, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        tmp167 = simd_not(tmp106);
        tmp168 = simd_or(simd_and(basis_bits.bit_4, tmp167), simd_andc(tmp160, basis_bits.bit_4));
        bytetest_97_9a = simd_and(tmp71, tmp168);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp169 = simd_and(tmp23, bytetest_97_9a);
        carryQ.cq[28] = carryout2carry(pablo_blk_Advance(tmp169, carryQ.get_carry_in(28), tmp170));
        tmp171 = simd_and(tmp170, bytetest_80_bf);
        carryQ.cq[29] = carryout2carry(pablo_blk_Advance(tmp171, carryQ.get_carry_in(29), tmp172));
        tmp173 = simd_and(tmp172, bytetest_80_bf);
        bytetest_96 = simd_and(tmp71, tmp118);
        bytetest_bf = simd_and(tmp75, tmp99);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp174 = simd_and(tmp120, bytetest_bf);
        carryQ.cq[30] = carryout2carry(pablo_blk_Advance(tmp174, carryQ.get_carry_in(30), tmp175));
        tmp176 = simd_and(tmp175, bytetest_80_bf);
        bytetest_be = simd_and(tmp75, tmp159);
        bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp177 = simd_and(tmp163, bytetest_a0_bf);
        tmp178 = simd_or(tmp177, tmp176);
        tmp179 = simd_or(tmp178, tmp173);
        struct_Cn.cc = simd_or(tmp179, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        tmp180 = simd_andc(tmp17, tmp5);
        bytetest_9c = simd_and(tmp71, tmp180);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp181 = simd_and(tmp23, bytetest_9c);
        carryQ.cq[31] = carryout2carry(pablo_blk_Advance(tmp181, carryQ.get_carry_in(31), tmp182));
        tmp183 = simd_and(tmp182, bytetest_80_bf);
        carryQ.cq[32] = carryout2carry(pablo_blk_Advance(tmp183, carryQ.get_carry_in(32), tmp184));
        tmp185 = simd_and(tmp184, bytetest_80_bf);
        bytetest_9b = simd_and(tmp71, tmp84);
        tmp186 = simd_or(basis_bits.bit_3, tmp6);
        tmp187 = simd_or(basis_bits.bit_2, tmp186);
        bytetest_81_bf = simd_and(bytetest_80_bf, tmp187);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp188 = simd_and(tmp23, bytetest_9b);
        carryQ.cq[33] = carryout2carry(pablo_blk_Advance(tmp188, carryQ.get_carry_in(33), tmp189));
        tmp190 = simd_and(tmp189, bytetest_81_bf);
        carryQ.cq[34] = carryout2carry(pablo_blk_Advance(tmp190, carryQ.get_carry_in(34), tmp191));
        tmp192 = simd_and(tmp191, bytetest_80_bf);
        bytetest_80 = simd_andc(tmp66, tmp6);
        tmp193 = simd_or(basis_bits.bit_3, tmp15);
        tmp194 = simd_or(basis_bits.bit_2, tmp193);
        bytetest_82_bf = simd_and(bytetest_80_bf, tmp194);
        tmp195 = simd_and(tmp189, bytetest_80);
        carryQ.cq[35] = carryout2carry(pablo_blk_Advance(tmp195, carryQ.get_carry_in(35), tmp196));
        tmp197 = simd_and(tmp196, bytetest_82_bf);
        tmp198 = simd_or(tmp197, tmp192);
        tmp199 = simd_or(tmp198, tmp185);
        struct_Cn.cc = simd_or(tmp199, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp71, tmp97);
        bytetest_83 = simd_and(tmp66, tmp31);
        tmp200 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp201 = simd_or(basis_bits.bit_4, tmp200);
        bytetest_b6_bf = simd_and(tmp75, tmp201);
        tmp202 = simd_and(tmp23, bytetest_9d);
        carryQ.cq[36] = carryout2carry(pablo_blk_Advance(tmp202, carryQ.get_carry_in(36), tmp203));
        tmp204 = simd_and(tmp203, bytetest_83);
        carryQ.cq[37] = carryout2carry(pablo_blk_Advance(tmp204, carryQ.get_carry_in(37), tmp205));
        tmp206 = simd_and(tmp205, bytetest_b6_bf);
        struct_Cn.cc = simd_or(tmp206, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp71, tmp97);
        bytetest_84 = simd_and(tmp66, tmp45);
        tmp207 = simd_not(tmp40);
        tmp208 = simd_or(simd_and(basis_bits.bit_4, tmp207), simd_andc(tmp160, basis_bits.bit_4));
        bytetest_a7_a8 = simd_and(tmp105, tmp208);
        tmp209 = simd_and(tmp203, bytetest_84);
        carryQ.cq[38] = carryout2carry(pablo_blk_Advance(tmp209, carryQ.get_carry_in(38), tmp210));
        tmp211 = simd_and(tmp210, bytetest_a7_a8);
        struct_Cn.cc = simd_or(tmp211, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp71, tmp97);
        bytetest_87 = simd_and(tmp66, tmp55);
        tmp212 = simd_and(basis_bits.bit_3, tmp18);
        tmp213 = simd_or(basis_bits.bit_2, tmp212);
        bytetest_9e_bf = simd_and(bytetest_80_bf, tmp213);
        tmp214 = simd_and(tmp203, bytetest_87);
        carryQ.cq[39] = carryout2carry(pablo_blk_Advance(tmp214, carryQ.get_carry_in(39), tmp215));
        tmp216 = simd_and(tmp215, bytetest_9e_bf);
        struct_Cn.cc = simd_or(tmp216, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp71, tmp97);
        tmp217 = simd_and(tmp72, basis_bits.bit_6);
        bytetest_8a_8b = simd_and(tmp66, tmp217);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp218 = simd_and(tmp203, bytetest_8a_8b);
        carryQ.cq[40] = carryout2carry(pablo_blk_Advance(tmp218, carryQ.get_carry_in(40), tmp219));
        tmp220 = simd_and(tmp219, bytetest_80_bf);
        tmp221 = simd_and(tmp72, tmp10);
        bytetest_89 = simd_and(tmp66, tmp221);
        tmp222 = simd_or(basis_bits.bit_3, tmp201);
        tmp223 = simd_or(basis_bits.bit_2, tmp222);
        bytetest_86_bf = simd_and(bytetest_80_bf, tmp223);
        tmp224 = simd_and(tmp203, bytetest_89);
        carryQ.cq[41] = carryout2carry(pablo_blk_Advance(tmp224, carryQ.get_carry_in(41), tmp225));
        tmp226 = simd_and(tmp225, bytetest_86_bf);
        tmp227 = simd_or(tmp226, tmp220);
        struct_Cn.cc = simd_or(tmp227, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp71, tmp97);
        bytetest_8d = simd_and(tmp66, tmp97);
        tmp228 = simd_or(basis_bits.bit_4, tmp160);
        bytetest_97_9f = simd_and(tmp71, tmp228);
        tmp229 = simd_and(tmp203, bytetest_8d);
        carryQ.cq[42] = carryout2carry(pablo_blk_Advance(tmp229, carryQ.get_carry_in(42), tmp230));
        tmp231 = simd_and(tmp230, bytetest_97_9f);
        struct_Cn.cc = simd_or(tmp231, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp71, tmp97);
        bytetest_8e_8f = simd_and(tmp66, tmp18);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp232 = simd_and(tmp203, bytetest_8e_8f);
        carryQ.cq[43] = carryout2carry(pablo_blk_Advance(tmp232, carryQ.get_carry_in(43), tmp233));
        tmp234 = simd_and(tmp233, bytetest_80_bf);
        bytetest_8d = simd_and(tmp66, tmp97);
        bytetest_b2_bf = simd_and(tmp75, tmp33);
        tmp235 = simd_and(tmp230, bytetest_b2_bf);
        tmp236 = simd_or(tmp235, tmp234);
        struct_Cn.cc = simd_or(tmp236, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp71, tmp97);
        bytetest_91 = simd_and(tmp71, tmp11);
        bytetest_95_95 = simd_and(tmp71, tmp46);
        tmp237 = simd_and(tmp203, bytetest_91);
        carryQ.cq[44] = carryout2carry(pablo_blk_Advance(tmp237, carryQ.get_carry_in(44), tmp238));
        tmp239 = simd_and(tmp238, bytetest_95_95);
        struct_Cn.cc = simd_or(tmp239, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp71, tmp97);
        bytetest_92 = simd_and(tmp71, tmp91);
        bytetest_9d_9d = simd_and(tmp71, tmp97);
        tmp240 = simd_and(tmp203, bytetest_92);
        carryQ.cq[45] = carryout2carry(pablo_blk_Advance(tmp240, carryQ.get_carry_in(45), tmp241));
        tmp242 = simd_and(tmp241, bytetest_9d_9d);
        struct_Cn.cc = simd_or(tmp242, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp71, tmp97);
        bytetest_92 = simd_and(tmp71, tmp91);
        bytetest_a0_a1 = simd_andc(tmp105, tmp15);
        tmp243 = simd_and(tmp241, bytetest_a0_a1);
        struct_Cn.cc = simd_or(tmp243, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp71, tmp97);
        bytetest_92 = simd_and(tmp71, tmp91);
        tmp244 = simd_andc(tmp105, basis_bits.bit_4);
        tmp245 = simd_not(tmp5);
        tmp246 = simd_or(simd_and(basis_bits.bit_5, tmp245), simd_andc(tmp30, basis_bits.bit_5));
        bytetest_a3_a4 = simd_and(tmp244, tmp246);
        tmp247 = simd_and(tmp241, bytetest_a3_a4);
        struct_Cn.cc = simd_or(tmp247, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp71, tmp97);
        bytetest_92 = simd_and(tmp71, tmp91);
        bytetest_a7_a8 = simd_and(tmp105, tmp208);
        tmp248 = simd_and(tmp241, bytetest_a7_a8);
        struct_Cn.cc = simd_or(tmp248, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp71, tmp97);
        bytetest_92 = simd_and(tmp71, tmp91);
        bytetest_ad_ad = simd_and(tmp105, tmp97);
        tmp249 = simd_and(tmp241, bytetest_ad_ad);
        struct_Cn.cc = simd_or(tmp249, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp71, tmp97);
        bytetest_92 = simd_and(tmp71, tmp91);
        bytetest_ba_ba = simd_and(tmp75, tmp74);
        tmp250 = simd_and(tmp241, bytetest_ba_ba);
        struct_Cn.cc = simd_or(tmp250, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp71, tmp97);
        bytetest_92 = simd_and(tmp71, tmp91);
        bytetest_bc_bc = simd_and(tmp75, tmp180);
        tmp251 = simd_and(tmp241, bytetest_bc_bc);
        struct_Cn.cc = simd_or(tmp251, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp71, tmp97);
        bytetest_93 = simd_and(tmp71, tmp31);
        bytetest_84_84 = simd_and(tmp66, tmp45);
        tmp252 = simd_and(tmp203, bytetest_93);
        carryQ.cq[46] = carryout2carry(pablo_blk_Advance(tmp252, carryQ.get_carry_in(46), tmp253));
        tmp254 = simd_and(tmp253, bytetest_84_84);
        struct_Cn.cc = simd_or(tmp254, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp71, tmp97);
        bytetest_94 = simd_and(tmp71, tmp45);
        bytetest_86_86 = simd_and(tmp66, tmp118);
        tmp255 = simd_and(tmp203, bytetest_94);
        carryQ.cq[47] = carryout2carry(pablo_blk_Advance(tmp255, carryQ.get_carry_in(47), tmp256));
        tmp257 = simd_and(tmp256, bytetest_86_86);
        struct_Cn.cc = simd_or(tmp257, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp71, tmp97);
        bytetest_94 = simd_and(tmp71, tmp45);
        tmp258 = simd_and(tmp66, basis_bits.bit_4);
        bytetest_8b_8c = simd_and(tmp258, tmp246);
        tmp259 = simd_and(tmp256, bytetest_8b_8c);
        struct_Cn.cc = simd_or(tmp259, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp71, tmp97);
        bytetest_94 = simd_and(tmp71, tmp45);
        bytetest_95_95 = simd_and(tmp71, tmp46);
        tmp260 = simd_and(tmp256, bytetest_95_95);
        struct_Cn.cc = simd_or(tmp260, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp71, tmp97);
        bytetest_94 = simd_and(tmp71, tmp45);
        bytetest_9d_9d = simd_and(tmp71, tmp97);
        tmp261 = simd_and(tmp256, bytetest_9d_9d);
        struct_Cn.cc = simd_or(tmp261, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp71, tmp97);
        bytetest_94 = simd_and(tmp71, tmp45);
        bytetest_ba_ba = simd_and(tmp75, tmp74);
        tmp262 = simd_and(tmp256, bytetest_ba_ba);
        struct_Cn.cc = simd_or(tmp262, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp71, tmp97);
        bytetest_94 = simd_and(tmp71, tmp45);
        bytetest_bf_bf = simd_and(tmp75, tmp99);
        tmp263 = simd_and(tmp256, bytetest_bf_bf);
        struct_Cn.cc = simd_or(tmp263, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp71, tmp97);
        bytetest_95 = simd_and(tmp71, tmp46);
        bytetest_85_85 = simd_and(tmp66, tmp46);
        tmp264 = simd_and(tmp203, bytetest_95);
        carryQ.cq[48] = carryout2carry(pablo_blk_Advance(tmp264, carryQ.get_carry_in(48), tmp265));
        tmp266 = simd_and(tmp265, bytetest_85_85);
        struct_Cn.cc = simd_or(tmp266, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp71, tmp97);
        bytetest_95 = simd_and(tmp71, tmp46);
        tmp267 = simd_not(tmp32);
        tmp268 = simd_or(simd_and(basis_bits.bit_4, tmp267), simd_andc(tmp160, basis_bits.bit_4));
        bytetest_87_89 = simd_and(tmp66, tmp268);
        tmp269 = simd_and(tmp265, bytetest_87_89);
        struct_Cn.cc = simd_or(tmp269, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp71, tmp97);
        bytetest_95 = simd_and(tmp71, tmp46);
        bytetest_91_91 = simd_and(tmp71, tmp11);
        tmp270 = simd_and(tmp265, bytetest_91_91);
        struct_Cn.cc = simd_or(tmp270, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp71, tmp97);
        bytetest_9a = simd_and(tmp71, tmp74);
        tmp271 = simd_and(tmp44, basis_bits.bit_6);
        bytetest_a6_a7 = simd_and(tmp105, tmp271);
        tmp272 = simd_and(tmp203, bytetest_9a);
        carryQ.cq[49] = carryout2carry(pablo_blk_Advance(tmp272, carryQ.get_carry_in(49), tmp273));
        tmp274 = simd_and(tmp273, bytetest_a6_a7);
        struct_Cn.cc = simd_or(tmp274, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp71, tmp97);
        bytetest_9f = simd_and(tmp71, tmp99);
        tmp275 = simd_andc(tmp17, basis_bits.bit_6);
        bytetest_8c_8d = simd_and(tmp66, tmp275);
        tmp276 = simd_and(tmp203, bytetest_9f);
        carryQ.cq[50] = carryout2carry(pablo_blk_Advance(tmp276, carryQ.get_carry_in(50), tmp277));
        tmp278 = simd_and(tmp277, bytetest_8c_8d);
        struct_Cn.cc = simd_or(tmp278, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        tmp279 = simd_and(basis_bits.bit_3, basis_bits.bit_4);
        tmp280 = simd_and(basis_bits.bit_2, tmp279);
        bytetest_80_b7 = simd_andc(bytetest_80_bf, tmp280);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp281 = simd_and(tmp23, bytetest_9e);
        carryQ.cq[51] = carryout2carry(pablo_blk_Advance(tmp281, carryQ.get_carry_in(51), tmp282));
        tmp283 = simd_and(tmp282, bytetest_80_b7);
        carryQ.cq[52] = carryout2carry(pablo_blk_Advance(tmp283, carryQ.get_carry_in(52), tmp284));
        tmp285 = simd_and(tmp284, bytetest_80_bf);
        bytetest_9d = simd_and(tmp71, tmp97);
        bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp286 = simd_and(tmp203, bytetest_a0_bf);
        carryQ.cq[53] = carryout2carry(pablo_blk_Advance(tmp286, carryQ.get_carry_in(53), tmp287));
        tmp288 = simd_and(tmp287, bytetest_80_bf);
        tmp289 = simd_or(tmp288, tmp285);
        struct_Cn.cc = simd_or(tmp289, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_b8 = simd_and(tmp75, tmp149);
        bytetest_84_84 = simd_and(tmp66, tmp45);
        tmp290 = simd_and(tmp282, bytetest_b8);
        carryQ.cq[54] = carryout2carry(pablo_blk_Advance(tmp290, carryQ.get_carry_in(54), tmp291));
        tmp292 = simd_and(tmp291, bytetest_84_84);
        struct_Cn.cc = simd_or(tmp292, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_b8 = simd_and(tmp75, tmp149);
        bytetest_a0_a0 = simd_andc(tmp105, tmp6);
        tmp293 = simd_and(tmp291, bytetest_a0_a0);
        struct_Cn.cc = simd_or(tmp293, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_b8 = simd_and(tmp75, tmp149);
        bytetest_a3_a3 = simd_and(tmp105, tmp31);
        tmp294 = simd_and(tmp291, bytetest_a3_a3);
        struct_Cn.cc = simd_or(tmp294, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_b8 = simd_and(tmp75, tmp149);
        tmp295 = simd_and(tmp105, tmp44);
        tmp296 = simd_not(basis_bits.bit_7);
        tmp297 = simd_or(simd_and(basis_bits.bit_6, tmp296), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
        bytetest_a5_a6 = simd_and(tmp295, tmp297);
        tmp298 = simd_and(tmp291, bytetest_a5_a6);
        struct_Cn.cc = simd_or(tmp298, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_b8 = simd_and(tmp75, tmp149);
        bytetest_a8_a8 = simd_and(tmp105, tmp149);
        tmp299 = simd_and(tmp291, bytetest_a8_a8);
        struct_Cn.cc = simd_or(tmp299, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_b8 = simd_and(tmp75, tmp149);
        bytetest_b3_b3 = simd_and(tmp75, tmp31);
        tmp300 = simd_and(tmp291, bytetest_b3_b3);
        struct_Cn.cc = simd_or(tmp300, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_b8 = simd_and(tmp75, tmp149);
        bytetest_b8_b8 = simd_and(tmp75, tmp149);
        tmp301 = simd_and(tmp291, bytetest_b8_b8);
        struct_Cn.cc = simd_or(tmp301, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_b8 = simd_and(tmp75, tmp149);
        bytetest_ba_ba = simd_and(tmp75, tmp74);
        tmp302 = simd_and(tmp291, bytetest_ba_ba);
        struct_Cn.cc = simd_or(tmp302, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_b9 = simd_and(tmp75, tmp221);
        bytetest_80_81 = simd_andc(tmp66, tmp15);
        tmp303 = simd_and(tmp282, bytetest_b9);
        carryQ.cq[55] = carryout2carry(pablo_blk_Advance(tmp303, carryQ.get_carry_in(55), tmp304));
        tmp305 = simd_and(tmp304, bytetest_80_81);
        bytetest_b8 = simd_and(tmp75, tmp149);
        bytetest_bc_bf = simd_and(tmp75, tmp17);
        tmp306 = simd_and(tmp291, bytetest_bc_bf);
        tmp307 = simd_or(tmp306, tmp305);
        struct_Cn.cc = simd_or(tmp307, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_b9 = simd_and(tmp75, tmp221);
        tmp308 = simd_andc(tmp66, basis_bits.bit_4);
        tmp309 = simd_not(tmp30);
        tmp310 = simd_or(simd_and(basis_bits.bit_5, tmp309), simd_andc(tmp30, basis_bits.bit_5));
        bytetest_83_86 = simd_and(tmp308, tmp310);
        tmp311 = simd_and(tmp304, bytetest_83_86);
        struct_Cn.cc = simd_or(tmp311, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_b9 = simd_and(tmp75, tmp221);
        bytetest_88_88 = simd_and(tmp66, tmp149);
        tmp312 = simd_and(tmp304, bytetest_88_88);
        struct_Cn.cc = simd_or(tmp312, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_b9 = simd_and(tmp75, tmp221);
        bytetest_8a_8a = simd_and(tmp66, tmp74);
        tmp313 = simd_and(tmp304, bytetest_8a_8a);
        struct_Cn.cc = simd_or(tmp313, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_b9 = simd_and(tmp75, tmp221);
        bytetest_8c_8c = simd_and(tmp66, tmp180);
        tmp314 = simd_and(tmp304, bytetest_8c_8c);
        struct_Cn.cc = simd_or(tmp314, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_b9 = simd_and(tmp75, tmp221);
        bytetest_90_90 = simd_andc(tmp71, tmp6);
        tmp315 = simd_and(tmp304, bytetest_90_90);
        struct_Cn.cc = simd_or(tmp315, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_b9 = simd_and(tmp75, tmp221);
        bytetest_93_93 = simd_and(tmp71, tmp31);
        tmp316 = simd_and(tmp304, bytetest_93_93);
        struct_Cn.cc = simd_or(tmp316, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_b9 = simd_and(tmp75, tmp221);
        tmp317 = simd_and(tmp71, tmp44);
        bytetest_95_96 = simd_and(tmp317, tmp297);
        tmp318 = simd_and(tmp304, bytetest_95_96);
        struct_Cn.cc = simd_or(tmp318, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_b9 = simd_and(tmp75, tmp221);
        bytetest_98_98 = simd_and(tmp71, tmp149);
        tmp319 = simd_and(tmp304, bytetest_98_98);
        struct_Cn.cc = simd_or(tmp319, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_b9 = simd_and(tmp75, tmp221);
        bytetest_9a_9a = simd_and(tmp71, tmp74);
        tmp320 = simd_and(tmp304, bytetest_9a_9a);
        struct_Cn.cc = simd_or(tmp320, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_b9 = simd_and(tmp75, tmp221);
        bytetest_9c_9c = simd_and(tmp71, tmp180);
        tmp321 = simd_and(tmp304, bytetest_9c_9c);
        struct_Cn.cc = simd_or(tmp321, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_b9 = simd_and(tmp75, tmp221);
        bytetest_9e_9e = simd_and(tmp71, tmp159);
        tmp322 = simd_and(tmp304, bytetest_9e_9e);
        struct_Cn.cc = simd_or(tmp322, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_b9 = simd_and(tmp75, tmp221);
        bytetest_a0_a0 = simd_andc(tmp105, tmp6);
        tmp323 = simd_and(tmp304, bytetest_a0_a0);
        struct_Cn.cc = simd_or(tmp323, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_b9 = simd_and(tmp75, tmp221);
        bytetest_a3_a3 = simd_and(tmp105, tmp31);
        tmp324 = simd_and(tmp304, bytetest_a3_a3);
        struct_Cn.cc = simd_or(tmp324, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_b9 = simd_and(tmp75, tmp221);
        bytetest_a5_a6 = simd_and(tmp295, tmp297);
        tmp325 = simd_and(tmp304, bytetest_a5_a6);
        struct_Cn.cc = simd_or(tmp325, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_b9 = simd_and(tmp75, tmp221);
        bytetest_ab_ab = simd_and(tmp105, tmp84);
        tmp326 = simd_and(tmp304, bytetest_ab_ab);
        struct_Cn.cc = simd_or(tmp326, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_b9 = simd_and(tmp75, tmp221);
        bytetest_b3_b3 = simd_and(tmp75, tmp31);
        tmp327 = simd_and(tmp304, bytetest_b3_b3);
        struct_Cn.cc = simd_or(tmp327, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_b9 = simd_and(tmp75, tmp221);
        bytetest_b8_b8 = simd_and(tmp75, tmp149);
        tmp328 = simd_and(tmp304, bytetest_b8_b8);
        struct_Cn.cc = simd_or(tmp328, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_b9 = simd_and(tmp75, tmp221);
        bytetest_bd_bd = simd_and(tmp75, tmp97);
        tmp329 = simd_and(tmp304, bytetest_bd_bd);
        struct_Cn.cc = simd_or(tmp329, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_b9 = simd_and(tmp75, tmp221);
        bytetest_bf_bf = simd_and(tmp75, tmp99);
        tmp330 = simd_and(tmp304, bytetest_bf_bf);
        struct_Cn.cc = simd_or(tmp330, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_ba = simd_and(tmp75, tmp74);
        bytetest_8a_8a = simd_and(tmp66, tmp74);
        tmp331 = simd_and(tmp282, bytetest_ba);
        carryQ.cq[56] = carryout2carry(pablo_blk_Advance(tmp331, carryQ.get_carry_in(56), tmp332));
        tmp333 = simd_and(tmp332, bytetest_8a_8a);
        struct_Cn.cc = simd_or(tmp333, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_ba = simd_and(tmp75, tmp74);
        tmp334 = simd_not(tmp186);
        tmp335 = simd_or(simd_and(basis_bits.bit_2, tmp334), simd_andc(tmp79, basis_bits.bit_2));
        bytetest_9c_a0 = simd_and(bytetest_80_bf, tmp335);
        tmp336 = simd_and(tmp332, bytetest_9c_a0);
        struct_Cn.cc = simd_or(tmp336, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_ba = simd_and(tmp75, tmp74);
        bytetest_a4_a4 = simd_and(tmp105, tmp45);
        tmp337 = simd_and(tmp332, bytetest_a4_a4);
        struct_Cn.cc = simd_or(tmp337, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_ba = simd_and(tmp75, tmp74);
        bytetest_aa_aa = simd_and(tmp105, tmp74);
        tmp338 = simd_and(tmp332, bytetest_aa_aa);
        struct_Cn.cc = simd_or(tmp338, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_bb = simd_and(tmp75, tmp84);
        bytetest_80_af = simd_andc(bytetest_80_bf, tmp2);
        tmp339 = simd_and(tmp282, bytetest_bb);
        carryQ.cq[57] = carryout2carry(pablo_blk_Advance(tmp339, carryQ.get_carry_in(57), tmp340));
        tmp341 = simd_and(tmp340, bytetest_80_af);
        bytetest_ba = simd_and(tmp75, tmp74);
        bytetest_bc_bf = simd_and(tmp75, tmp17);
        tmp342 = simd_and(tmp332, bytetest_bc_bf);
        tmp343 = simd_or(tmp342, tmp341);
        struct_Cn.cc = simd_or(tmp343, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_bc_bf = simd_and(tmp75, tmp17);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp344 = simd_and(tmp282, bytetest_bc_bf);
        carryQ.cq[58] = carryout2carry(pablo_blk_Advance(tmp344, carryQ.get_carry_in(58), tmp345));
        tmp346 = simd_and(tmp345, bytetest_80_bf);
        bytetest_bb = simd_and(tmp75, tmp84);
        bytetest_b2_bf = simd_and(tmp75, tmp33);
        tmp347 = simd_and(tmp340, bytetest_b2_bf);
        tmp348 = simd_or(tmp347, tmp346);
        struct_Cn.cc = simd_or(tmp348, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp71, tmp99);
        bytetest_80 = simd_andc(tmp66, tmp6);
        bytetest_ac_af = simd_and(tmp105, tmp17);
        tmp349 = simd_and(tmp23, bytetest_9f);
        carryQ.cq[59] = carryout2carry(pablo_blk_Advance(tmp349, carryQ.get_carry_in(59), tmp350));
        tmp351 = simd_and(tmp350, bytetest_80);
        carryQ.cq[60] = carryout2carry(pablo_blk_Advance(tmp351, carryQ.get_carry_in(60), tmp352));
        tmp353 = simd_and(tmp352, bytetest_ac_af);
        struct_Cn.cc = simd_or(tmp353, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp71, tmp99);
        bytetest_82 = simd_and(tmp66, tmp91);
        bytetest_94_9f = simd_and(tmp71, tmp4);
        tmp354 = simd_and(tmp350, bytetest_82);
        carryQ.cq[61] = carryout2carry(pablo_blk_Advance(tmp354, carryQ.get_carry_in(61), tmp355));
        tmp356 = simd_and(tmp355, bytetest_94_9f);
        struct_Cn.cc = simd_or(tmp356, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp71, tmp99);
        bytetest_82 = simd_and(tmp66, tmp91);
        tmp357 = simd_not(tmp6);
        tmp358 = simd_or(simd_and(basis_bits.bit_3, tmp357), simd_andc(tmp99, basis_bits.bit_3));
        bytetest_af_b0 = simd_and(bytetest_a0_bf, tmp358);
        tmp359 = simd_and(tmp355, bytetest_af_b0);
        struct_Cn.cc = simd_or(tmp359, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp71, tmp99);
        bytetest_83 = simd_and(tmp66, tmp31);
        bytetest_80_80 = simd_andc(tmp66, tmp6);
        tmp360 = simd_and(tmp350, bytetest_83);
        carryQ.cq[62] = carryout2carry(pablo_blk_Advance(tmp360, carryQ.get_carry_in(62), tmp361));
        tmp362 = simd_and(tmp361, bytetest_80_80);
        bytetest_82 = simd_and(tmp66, tmp91);
        bytetest_bf_bf = simd_and(tmp75, tmp99);
        tmp363 = simd_and(tmp355, bytetest_bf_bf);
        tmp364 = simd_or(tmp363, tmp362);
        struct_Cn.cc = simd_or(tmp364, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp71, tmp99);
        bytetest_83 = simd_and(tmp66, tmp31);
        bytetest_90_90 = simd_andc(tmp71, tmp6);
        tmp365 = simd_and(tmp361, bytetest_90_90);
        struct_Cn.cc = simd_or(tmp365, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp71, tmp99);
        bytetest_83 = simd_and(tmp66, tmp31);
        bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp366 = simd_and(tmp361, bytetest_a0_bf);
        struct_Cn.cc = simd_or(tmp366, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp71, tmp99);
        bytetest_84 = simd_and(tmp66, tmp45);
        bytetest_8b_8f = simd_and(tmp258, tmp106);
        tmp367 = simd_and(tmp350, bytetest_84);
        carryQ.cq[63] = carryout2carry(pablo_blk_Advance(tmp367, carryQ.get_carry_in(63), tmp368));
        tmp369 = simd_and(tmp368, bytetest_8b_8f);
        struct_Cn.cc = simd_or(tmp369, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp71, tmp99);
        bytetest_84 = simd_and(tmp66, tmp45);
        bytetest_af_af = simd_and(tmp105, tmp99);
        tmp370 = simd_and(tmp368, bytetest_af_af);
        struct_Cn.cc = simd_or(tmp370, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp71, tmp99);
        bytetest_85 = simd_and(tmp66, tmp46);
        bytetest_ac_af = simd_and(tmp105, tmp17);
        tmp371 = simd_and(tmp350, bytetest_85);
        carryQ.cq[64] = carryout2carry(pablo_blk_Advance(tmp371, carryQ.get_carry_in(64), tmp372));
        tmp373 = simd_and(tmp372, bytetest_ac_af);
        struct_Cn.cc = simd_or(tmp373, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp71, tmp99);
        bytetest_87 = simd_and(tmp66, tmp55);
        tmp374 = simd_and(basis_bits.bit_2, tmp222);
        bytetest_80_a5 = simd_andc(bytetest_80_bf, tmp374);
        tmp375 = simd_and(tmp350, bytetest_87);
        carryQ.cq[65] = carryout2carry(pablo_blk_Advance(tmp375, carryQ.get_carry_in(65), tmp376));
        tmp377 = simd_and(tmp376, bytetest_80_a5);
        bytetest_86 = simd_and(tmp66, tmp118);
        tmp378 = simd_and(basis_bits.bit_4, tmp106);
        tmp379 = simd_and(basis_bits.bit_3, tmp378);
        tmp380 = simd_or(basis_bits.bit_2, tmp379);
        bytetest_9b_bf = simd_and(bytetest_80_bf, tmp380);
        tmp381 = simd_and(tmp350, bytetest_86);
        carryQ.cq[66] = carryout2carry(pablo_blk_Advance(tmp381, carryQ.get_carry_in(66), tmp382));
        tmp383 = simd_and(tmp382, bytetest_9b_bf);
        tmp384 = simd_or(tmp383, tmp377);
        struct_Cn.cc = simd_or(tmp384, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp71, tmp99);
        bytetest_88 = simd_and(tmp66, tmp149);
        bytetest_83_8f = simd_and(tmp66, tmp107);
        tmp385 = simd_and(tmp350, bytetest_88);
        carryQ.cq[67] = carryout2carry(pablo_blk_Advance(tmp385, carryQ.get_carry_in(67), tmp386));
        tmp387 = simd_and(tmp386, bytetest_83_8f);
        struct_Cn.cc = simd_or(tmp387, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp71, tmp99);
        bytetest_88 = simd_and(tmp66, tmp149);
        bytetest_bb_bf = simd_and(bytetest_b8_bf, tmp106);
        tmp388 = simd_and(tmp386, bytetest_bb_bf);
        struct_Cn.cc = simd_or(tmp388, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp71, tmp99);
        bytetest_89 = simd_and(tmp66, tmp221);
        bytetest_89_8f = simd_and(tmp258, tmp40);
        tmp389 = simd_and(tmp350, bytetest_89);
        carryQ.cq[68] = carryout2carry(pablo_blk_Advance(tmp389, carryQ.get_carry_in(68), tmp390));
        tmp391 = simd_and(tmp390, bytetest_89_8f);
        struct_Cn.cc = simd_or(tmp391, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp71, tmp99);
        bytetest_8a_8b = simd_and(tmp66, tmp217);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp392 = simd_and(tmp350, bytetest_8a_8b);
        carryQ.cq[69] = carryout2carry(pablo_blk_Advance(tmp392, carryQ.get_carry_in(69), tmp393));
        tmp394 = simd_and(tmp393, bytetest_80_bf);
        bytetest_89 = simd_and(tmp66, tmp221);
        bytetest_92_bf = simd_and(bytetest_80_bf, tmp112);
        tmp395 = simd_and(tmp390, bytetest_92_bf);
        tmp396 = simd_or(tmp395, tmp394);
        struct_Cn.cc = simd_or(tmp396, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp71, tmp99);
        bytetest_8c = simd_and(tmp66, tmp180);
        tmp397 = simd_or(basis_bits.bit_4, tmp40);
        bytetest_a1_af = simd_and(tmp105, tmp397);
        tmp398 = simd_and(tmp350, bytetest_8c);
        carryQ.cq[70] = carryout2carry(pablo_blk_Advance(tmp398, carryQ.get_carry_in(70), tmp399));
        tmp400 = simd_and(tmp399, bytetest_a1_af);
        struct_Cn.cc = simd_or(tmp400, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp71, tmp99);
        bytetest_8c = simd_and(tmp66, tmp180);
        bytetest_b6_b6 = simd_and(tmp75, tmp118);
        tmp401 = simd_and(tmp399, bytetest_b6_b6);
        struct_Cn.cc = simd_or(tmp401, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp71, tmp99);
        bytetest_8d = simd_and(tmp66, tmp97);
        bytetest_bd_bf = simd_and(bytetest_bc_bf, tmp5);
        tmp402 = simd_and(tmp350, bytetest_8d);
        carryQ.cq[71] = carryout2carry(pablo_blk_Advance(tmp402, carryQ.get_carry_in(71), tmp403));
        tmp404 = simd_and(tmp403, bytetest_bd_bf);
        struct_Cn.cc = simd_or(tmp404, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp71, tmp99);
        bytetest_8e = simd_and(tmp66, tmp159);
        bytetest_94_9f = simd_and(tmp71, tmp4);
        tmp405 = simd_and(tmp350, bytetest_8e);
        carryQ.cq[72] = carryout2carry(pablo_blk_Advance(tmp405, carryQ.get_carry_in(72), tmp406));
        tmp407 = simd_and(tmp406, bytetest_94_9f);
        struct_Cn.cc = simd_or(tmp407, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp71, tmp99);
        bytetest_8f = simd_and(tmp66, tmp99);
        bytetest_85_85 = simd_and(tmp66, tmp46);
        tmp408 = simd_and(tmp350, bytetest_8f);
        carryQ.cq[73] = carryout2carry(pablo_blk_Advance(tmp408, carryQ.get_carry_in(73), tmp409));
        tmp410 = simd_and(tmp409, bytetest_85_85);
        struct_Cn.cc = simd_or(tmp410, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp71, tmp99);
        bytetest_8f = simd_and(tmp66, tmp99);
        tmp411 = simd_or(basis_bits.bit_3, tmp378);
        bytetest_8b_9f = simd_and(bytetest_80_9f, tmp411);
        tmp412 = simd_and(tmp409, bytetest_8b_9f);
        struct_Cn.cc = simd_or(tmp412, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp71, tmp99);
        bytetest_8f = simd_and(tmp66, tmp99);
        bytetest_b1_bf = simd_and(tmp75, tmp397);
        tmp413 = simd_and(tmp409, bytetest_b1_bf);
        struct_Cn.cc = simd_or(tmp413, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp71, tmp99);
        bytetest_90 = simd_andc(tmp71, tmp6);
        bytetest_bf_bf = simd_and(tmp75, tmp99);
        tmp414 = simd_and(tmp350, bytetest_90);
        carryQ.cq[74] = carryout2carry(pablo_blk_Advance(tmp414, carryQ.get_carry_in(74), tmp415));
        tmp416 = simd_and(tmp415, bytetest_bf_bf);
        struct_Cn.cc = simd_or(tmp416, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp71, tmp99);
        bytetest_91 = simd_and(tmp71, tmp11);
        bytetest_81_81 = simd_and(tmp66, tmp11);
        tmp417 = simd_and(tmp350, bytetest_91);
        carryQ.cq[75] = carryout2carry(pablo_blk_Advance(tmp417, carryQ.get_carry_in(75), tmp418));
        tmp419 = simd_and(tmp418, bytetest_81_81);
        struct_Cn.cc = simd_or(tmp419, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp71, tmp99);
        bytetest_93 = simd_and(tmp71, tmp31);
        bytetest_b8_b8 = simd_and(tmp75, tmp149);
        tmp420 = simd_and(tmp350, bytetest_93);
        carryQ.cq[76] = carryout2carry(pablo_blk_Advance(tmp420, carryQ.get_carry_in(76), tmp421));
        tmp422 = simd_and(tmp421, bytetest_b8_b8);
        struct_Cn.cc = simd_or(tmp422, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp71, tmp99);
        bytetest_93 = simd_and(tmp71, tmp31);
        bytetest_bd_bf = simd_and(bytetest_bc_bf, tmp5);
        tmp423 = simd_and(tmp421, bytetest_bd_bf);
        struct_Cn.cc = simd_or(tmp423, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp71, tmp99);
        bytetest_94 = simd_and(tmp71, tmp45);
        bytetest_be_bf = simd_and(tmp75, tmp18);
        tmp424 = simd_and(tmp350, bytetest_94);
        carryQ.cq[77] = carryout2carry(pablo_blk_Advance(tmp424, carryQ.get_carry_in(77), tmp425));
        tmp426 = simd_and(tmp425, bytetest_be_bf);
        struct_Cn.cc = simd_or(tmp426, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp71, tmp99);
        bytetest_95 = simd_and(tmp71, tmp46);
        bytetest_84_8f = simd_and(tmp66, tmp4);
        tmp427 = simd_and(tmp350, bytetest_95);
        carryQ.cq[78] = carryout2carry(pablo_blk_Advance(tmp427, carryQ.get_carry_in(78), tmp428));
        tmp429 = simd_and(tmp428, bytetest_84_8f);
        struct_Cn.cc = simd_or(tmp429, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp71, tmp99);
        bytetest_97 = simd_and(tmp71, tmp55);
        tmp430 = simd_and(basis_bits.bit_2, tmp379);
        bytetest_80_ba = simd_andc(bytetest_80_bf, tmp430);
        tmp431 = simd_and(tmp350, bytetest_97);
        carryQ.cq[79] = carryout2carry(pablo_blk_Advance(tmp431, carryQ.get_carry_in(79), tmp432));
        tmp433 = simd_and(tmp432, bytetest_80_ba);
        bytetest_96 = simd_and(tmp71, tmp118);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp434 = simd_and(tmp350, bytetest_96);
        carryQ.cq[80] = carryout2carry(pablo_blk_Advance(tmp434, carryQ.get_carry_in(80), tmp435));
        tmp436 = simd_and(tmp435, bytetest_80_bf);
        bytetest_95 = simd_and(tmp71, tmp46);
        tmp437 = simd_or(basis_bits.bit_3, basis_bits.bit_4);
        bytetest_a8_bf = simd_and(bytetest_a0_bf, tmp437);
        tmp438 = simd_and(tmp428, bytetest_a8_bf);
        tmp439 = simd_or(tmp438, tmp436);
        tmp440 = simd_or(tmp439, tmp433);
        struct_Cn.cc = simd_or(tmp440, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp71, tmp99);
        bytetest_99 = simd_and(tmp71, tmp221);
        tmp441 = simd_or(simd_and(basis_bits.bit_5, tmp245), simd_andc(tmp5, basis_bits.bit_5));
        bytetest_81_84 = simd_and(tmp308, tmp441);
        tmp442 = simd_and(tmp350, bytetest_99);
        carryQ.cq[81] = carryout2carry(pablo_blk_Advance(tmp442, carryQ.get_carry_in(81), tmp443));
        tmp444 = simd_and(tmp443, bytetest_81_84);
        struct_Cn.cc = simd_or(tmp444, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp71, tmp99);
        bytetest_99 = simd_and(tmp71, tmp221);
        bytetest_90_bf = simd_and(bytetest_80_bf, tmp12);
        tmp445 = simd_and(tmp443, bytetest_90_bf);
        struct_Cn.cc = simd_or(tmp445, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp71, tmp99);
        bytetest_9b = simd_and(tmp71, tmp84);
        bytetest_86_bf = simd_and(bytetest_80_bf, tmp223);
        tmp446 = simd_and(tmp350, bytetest_9b);
        carryQ.cq[82] = carryout2carry(pablo_blk_Advance(tmp446, carryQ.get_carry_in(82), tmp447));
        tmp448 = simd_and(tmp447, bytetest_86_bf);
        struct_Cn.cc = simd_or(tmp448, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp71, tmp99);
        bytetest_9e_bf = simd_and(bytetest_80_bf, tmp213);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp449 = simd_and(tmp350, bytetest_9e_bf);
        carryQ.cq[83] = carryout2carry(pablo_blk_Advance(tmp449, carryQ.get_carry_in(83), tmp450));
        tmp451 = simd_and(tmp450, bytetest_80_bf);
        bytetest_9d = simd_and(tmp71, tmp97);
        bytetest_b4_bf = simd_and(tmp75, tmp4);
        tmp452 = simd_and(tmp350, bytetest_9d);
        carryQ.cq[84] = carryout2carry(pablo_blk_Advance(tmp452, carryQ.get_carry_in(84), tmp453));
        tmp454 = simd_and(tmp453, bytetest_b4_bf);
        tmp455 = simd_or(tmp454, tmp451);
        struct_Cn.cc = simd_or(tmp455, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_aa = simd_and(tmp105, tmp74);
        bytetest_9b = simd_and(tmp71, tmp84);
        tmp456 = simd_and(basis_bits.bit_3, tmp228);
        tmp457 = simd_or(basis_bits.bit_2, tmp456);
        bytetest_97_bf = simd_and(bytetest_80_bf, tmp457);
        tmp458 = simd_and(tmp23, bytetest_aa);
        carryQ.cq[85] = carryout2carry(pablo_blk_Advance(tmp458, carryQ.get_carry_in(85), tmp459));
        tmp460 = simd_and(tmp459, bytetest_9b);
        carryQ.cq[86] = carryout2carry(pablo_blk_Advance(tmp460, carryQ.get_carry_in(86), tmp461));
        tmp462 = simd_and(tmp461, bytetest_97_bf);
        struct_Cn.cc = simd_or(tmp462, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_ab = simd_and(tmp105, tmp84);
        bytetest_9c = simd_and(tmp71, tmp180);
        bytetest_b5_bf = simd_and(tmp75, tmp155);
        tmp463 = simd_and(tmp23, bytetest_ab);
        carryQ.cq[87] = carryout2carry(pablo_blk_Advance(tmp463, carryQ.get_carry_in(87), tmp464));
        tmp465 = simd_and(tmp464, bytetest_9c);
        carryQ.cq[88] = carryout2carry(pablo_blk_Advance(tmp465, carryQ.get_carry_in(88), tmp466));
        tmp467 = simd_and(tmp466, bytetest_b5_bf);
        struct_Cn.cc = simd_or(tmp467, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_af = simd_and(tmp105, tmp99);
        bytetest_80_9f = simd_andc(bytetest_80_bf, basis_bits.bit_2);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp468 = simd_and(tmp23, bytetest_af);
        carryQ.cq[89] = carryout2carry(pablo_blk_Advance(tmp468, carryQ.get_carry_in(89), tmp469));
        tmp470 = simd_and(tmp469, bytetest_80_9f);
        carryQ.cq[90] = carryout2carry(pablo_blk_Advance(tmp470, carryQ.get_carry_in(90), tmp471));
        tmp472 = simd_and(tmp471, bytetest_80_bf);
        bytetest_ac_ae = simd_andc(bytetest_ac_af, tmp30);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp473 = simd_and(tmp23, bytetest_ac_ae);
        carryQ.cq[91] = carryout2carry(pablo_blk_Advance(tmp473, carryQ.get_carry_in(91), tmp474));
        tmp475 = simd_and(tmp474, bytetest_80_bf);
        carryQ.cq[92] = carryout2carry(pablo_blk_Advance(tmp475, carryQ.get_carry_in(92), tmp476));
        tmp477 = simd_and(tmp476, bytetest_80_bf);
        bytetest_ab = simd_and(tmp105, tmp84);
        bytetest_a1_bf = simd_and(bytetest_a0_bf, tmp186);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp478 = simd_and(tmp464, bytetest_a1_bf);
        carryQ.cq[93] = carryout2carry(pablo_blk_Advance(tmp478, carryQ.get_carry_in(93), tmp479));
        tmp480 = simd_and(tmp479, bytetest_80_bf);
        bytetest_a0 = simd_andc(tmp105, tmp6);
        bytetest_9e_bf = simd_and(bytetest_80_bf, tmp213);
        tmp481 = simd_and(tmp464, bytetest_a0);
        carryQ.cq[94] = carryout2carry(pablo_blk_Advance(tmp481, carryQ.get_carry_in(94), tmp482));
        tmp483 = simd_and(tmp482, bytetest_9e_bf);
        tmp484 = simd_or(tmp483, tmp480);
        tmp485 = simd_or(tmp484, tmp477);
        tmp486 = simd_or(tmp485, tmp472);
        struct_Cn.cc = simd_or(tmp486, struct_Cn.cc);
        bytetest_f3 = simd_and(tmp3, tmp31);
        bytetest_a0 = simd_andc(tmp105, tmp6);
        bytetest_80 = simd_andc(tmp66, tmp6);
        bytetest_80_80 = simd_andc(tmp66, tmp6);
        tmp487 = simd_and(tmp21, bytetest_f3);
        carryQ.cq[95] = carryout2carry(pablo_blk_Advance(tmp487, carryQ.get_carry_in(95), tmp488));
        tmp489 = simd_and(tmp488, bytetest_a0);
        carryQ.cq[96] = carryout2carry(pablo_blk_Advance(tmp489, carryQ.get_carry_in(96), tmp490));
        tmp491 = simd_and(tmp490, bytetest_80);
        carryQ.cq[97] = carryout2carry(pablo_blk_Advance(tmp491, carryQ.get_carry_in(97), tmp492));
        tmp493 = simd_and(tmp492, bytetest_80_80);
        bytetest_80_9f = simd_andc(bytetest_80_bf, basis_bits.bit_2);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp494 = simd_and(tmp488, bytetest_80_9f);
        carryQ.cq[98] = carryout2carry(pablo_blk_Advance(tmp494, carryQ.get_carry_in(98), tmp495));
        tmp496 = simd_and(tmp495, bytetest_80_bf);
        carryQ.cq[99] = carryout2carry(pablo_blk_Advance(tmp496, carryQ.get_carry_in(99), tmp497));
        tmp498 = simd_and(tmp497, bytetest_80_bf);
        tmp499 = simd_or(tmp498, tmp493);
        tmp500 = simd_andc(tmp3, tmp4);
        bytetest_f1_f2 = simd_and(tmp500, tmp297);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_b0_bf = simd_and(bytetest_80_bf, tmp2);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp501 = simd_and(tmp23, bytetest_b0_bf);
        carryQ.cq[100] = carryout2carry(pablo_blk_Advance(tmp501, carryQ.get_carry_in(100), tmp502));
        tmp503 = simd_and(tmp502, bytetest_80_bf);
        carryQ.cq[101] = carryout2carry(pablo_blk_Advance(tmp503, carryQ.get_carry_in(101), tmp504));
        tmp505 = simd_and(tmp504, bytetest_80_bf);
        bytetest_af = simd_and(tmp105, tmp99);
        tmp506 = simd_or(basis_bits.bit_3, tmp144);
        bytetest_a9_bf = simd_and(bytetest_a0_bf, tmp506);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp507 = simd_and(tmp469, bytetest_a9_bf);
        carryQ.cq[102] = carryout2carry(pablo_blk_Advance(tmp507, carryQ.get_carry_in(102), tmp508));
        tmp509 = simd_and(tmp508, bytetest_80_bf);
        bytetest_a8 = simd_and(tmp105, tmp149);
        bytetest_9e_bf = simd_and(bytetest_80_bf, tmp213);
        tmp510 = simd_and(tmp469, bytetest_a8);
        carryQ.cq[103] = carryout2carry(pablo_blk_Advance(tmp510, carryQ.get_carry_in(103), tmp511));
        tmp512 = simd_and(tmp511, bytetest_9e_bf);
        tmp513 = simd_or(tmp512, tmp509);
        tmp514 = simd_or(tmp513, tmp505);
        tmp515 = simd_or(tmp514, bytetest_f1_f2);
        tmp516 = simd_or(tmp515, tmp499);
        struct_Cn.cc = simd_or(tmp516, struct_Cn.cc);
        bytetest_f3 = simd_and(tmp3, tmp31);
        bytetest_a0 = simd_andc(tmp105, tmp6);
        bytetest_80 = simd_andc(tmp66, tmp6);
        bytetest_82_9f = simd_and(bytetest_80_9f, tmp193);
        tmp517 = simd_and(tmp492, bytetest_82_9f);
        struct_Cn.cc = simd_or(tmp517, struct_Cn.cc);
        bytetest_f3 = simd_and(tmp3, tmp31);
        bytetest_a0 = simd_andc(tmp105, tmp6);
        tmp518 = simd_andc(basis_bits.bit_6, tmp4);
        bytetest_82_83 = simd_and(tmp66, tmp518);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp519 = simd_and(tmp490, bytetest_82_83);
        carryQ.cq[104] = carryout2carry(pablo_blk_Advance(tmp519, carryQ.get_carry_in(104), tmp520));
        tmp521 = simd_and(tmp520, bytetest_80_bf);
        struct_Cn.cc = simd_or(tmp521, struct_Cn.cc);
        bytetest_f3 = simd_and(tmp3, tmp31);
        bytetest_a1_af = simd_and(tmp105, tmp397);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp522 = simd_and(tmp488, bytetest_a1_af);
        carryQ.cq[105] = carryout2carry(pablo_blk_Advance(tmp522, carryQ.get_carry_in(105), tmp523));
        tmp524 = simd_and(tmp523, bytetest_80_bf);
        carryQ.cq[106] = carryout2carry(pablo_blk_Advance(tmp524, carryQ.get_carry_in(106), tmp525));
        tmp526 = simd_and(tmp525, bytetest_80_bf);
        bytetest_a0 = simd_andc(tmp105, tmp6);
        tmp527 = simd_or(basis_bits.bit_2, tmp437);
        bytetest_88_bf = simd_and(bytetest_80_bf, tmp527);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp528 = simd_and(tmp490, bytetest_88_bf);
        carryQ.cq[107] = carryout2carry(pablo_blk_Advance(tmp528, carryQ.get_carry_in(107), tmp529));
        tmp530 = simd_and(tmp529, bytetest_80_bf);
        bytetest_87 = simd_and(tmp66, tmp55);
        bytetest_b0_bf = simd_and(bytetest_80_bf, tmp2);
        tmp531 = simd_and(tmp490, bytetest_87);
        carryQ.cq[108] = carryout2carry(pablo_blk_Advance(tmp531, carryQ.get_carry_in(108), tmp532));
        tmp533 = simd_and(tmp532, bytetest_b0_bf);
        tmp534 = simd_or(tmp533, tmp530);
        tmp535 = simd_or(tmp534, tmp526);
        struct_Cn.cc = simd_or(tmp535, struct_Cn.cc);
        bytetest_f3 = simd_and(tmp3, tmp31);
        bytetest_bf = simd_and(bytetest_b0_bf, tmp99);
        bytetest_bf = simd_and(bytetest_b0_bf, tmp99);
        bytetest_be_bf = simd_and(bytetest_b0_bf, tmp18);
        tmp536 = simd_and(tmp488, bytetest_bf);
        carryQ.cq[109] = carryout2carry(pablo_blk_Advance(tmp536, carryQ.get_carry_in(109), tmp537));
        tmp538 = simd_and(tmp537, bytetest_bf);
        carryQ.cq[110] = carryout2carry(pablo_blk_Advance(tmp538, carryQ.get_carry_in(110), tmp539));
        tmp540 = simd_and(tmp539, bytetest_be_bf);
        struct_Cn.cc = simd_or(tmp540, struct_Cn.cc);
        tmp541 = simd_andc(tmp1, basis_bits.bit_2);
        bytetest_c2_df = simd_and(tmp541, tmp193);
        if ((bitblock::any(bytetest_c2_df) || carryQ.CarryTest(111, 11))) {
          r80_7ff_tmp1 = simd_andc(tmp1, tmp12);
          bytetest_cd = simd_and(r80_7ff_tmp1, tmp97);
          r80_7ff_tmp2 = simd_andc(tmp72, basis_bits.bit_6);
          bytetest_b8_b9 = simd_and(bytetest_b0_bf, r80_7ff_tmp2);
          r80_7ff_tmp3 = simd_and(tmp21, bytetest_cd);
          carryQ.cq[111] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp3, carryQ.get_carry_in(111), r80_7ff_tmp4));
          r80_7ff_tmp5 = simd_and(r80_7ff_tmp4, bytetest_b8_b9);
          struct_Cn.cc = simd_or(r80_7ff_tmp5, struct_Cn.cc);
          bytetest_ce = simd_and(r80_7ff_tmp1, tmp159);
          bytetest_80_83 = simd_andc(tmp66, tmp4);
          r80_7ff_tmp6 = simd_and(tmp21, bytetest_ce);
          carryQ.cq[112] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp6, carryQ.get_carry_in(112), r80_7ff_tmp7));
          r80_7ff_tmp8 = simd_and(r80_7ff_tmp7, bytetest_80_83);
          bytetest_cd = simd_and(r80_7ff_tmp1, tmp97);
          bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp99);
          r80_7ff_tmp9 = simd_and(r80_7ff_tmp4, bytetest_bf_bf);
          r80_7ff_tmp10 = simd_or(r80_7ff_tmp9, r80_7ff_tmp8);
          struct_Cn.cc = simd_or(r80_7ff_tmp10, struct_Cn.cc);
          bytetest_ce = simd_and(r80_7ff_tmp1, tmp159);
          bytetest_8b_8b = simd_and(tmp66, tmp84);
          r80_7ff_tmp11 = simd_and(r80_7ff_tmp7, bytetest_8b_8b);
          struct_Cn.cc = simd_or(r80_7ff_tmp11, struct_Cn.cc);
          bytetest_ce = simd_and(r80_7ff_tmp1, tmp159);
          bytetest_8d_8d = simd_and(tmp66, tmp97);
          r80_7ff_tmp12 = simd_and(r80_7ff_tmp7, bytetest_8d_8d);
          struct_Cn.cc = simd_or(r80_7ff_tmp12, struct_Cn.cc);
          bytetest_ce = simd_and(r80_7ff_tmp1, tmp159);
          bytetest_a2_a2 = simd_and(tmp105, tmp91);
          r80_7ff_tmp13 = simd_and(r80_7ff_tmp7, bytetest_a2_a2);
          struct_Cn.cc = simd_or(r80_7ff_tmp13, struct_Cn.cc);
          r80_7ff_tmp14 = simd_and(tmp1, tmp8);
          bytetest_d4 = simd_and(r80_7ff_tmp14, tmp45);
          r80_7ff_tmp15 = simd_or(simd_and(basis_bits.bit_3, tmp357), simd_andc(basis_bits.bit_4, basis_bits.bit_3));
          bytetest_a8_b0 = simd_and(bytetest_a0_bf, r80_7ff_tmp15);
          r80_7ff_tmp16 = simd_and(tmp21, bytetest_d4);
          carryQ.cq[113] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp16, carryQ.get_carry_in(113), r80_7ff_tmp17));
          r80_7ff_tmp18 = simd_and(r80_7ff_tmp17, bytetest_a8_b0);
          struct_Cn.cc = simd_or(r80_7ff_tmp18, struct_Cn.cc);
          bytetest_d5 = simd_and(r80_7ff_tmp14, tmp46);
          bytetest_97_98 = simd_and(tmp71, tmp208);
          r80_7ff_tmp19 = simd_and(tmp21, bytetest_d5);
          carryQ.cq[114] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp19, carryQ.get_carry_in(114), r80_7ff_tmp20));
          r80_7ff_tmp21 = simd_and(r80_7ff_tmp20, bytetest_97_98);
          struct_Cn.cc = simd_or(r80_7ff_tmp21, struct_Cn.cc);
          bytetest_d5 = simd_and(r80_7ff_tmp14, tmp46);
          bytetest_a0_a0 = simd_andc(tmp105, tmp6);
          r80_7ff_tmp22 = simd_and(r80_7ff_tmp20, bytetest_a0_a0);
          struct_Cn.cc = simd_or(r80_7ff_tmp22, struct_Cn.cc);
          bytetest_d6 = simd_and(r80_7ff_tmp14, tmp118);
          bytetest_88_88 = simd_and(tmp66, tmp149);
          r80_7ff_tmp23 = simd_and(tmp21, bytetest_d6);
          carryQ.cq[115] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp23, carryQ.get_carry_in(115), r80_7ff_tmp24));
          r80_7ff_tmp25 = simd_and(r80_7ff_tmp24, bytetest_88_88);
          struct_Cn.cc = simd_or(r80_7ff_tmp25, struct_Cn.cc);
          bytetest_d6 = simd_and(r80_7ff_tmp14, tmp118);
          bytetest_8b_8e = simd_and(tmp258, tmp310);
          r80_7ff_tmp26 = simd_and(r80_7ff_tmp24, bytetest_8b_8e);
          struct_Cn.cc = simd_or(r80_7ff_tmp26, struct_Cn.cc);
          bytetest_d6 = simd_and(r80_7ff_tmp14, tmp118);
          bytetest_90_90 = simd_andc(tmp71, tmp6);
          r80_7ff_tmp27 = simd_and(r80_7ff_tmp24, bytetest_90_90);
          struct_Cn.cc = simd_or(r80_7ff_tmp27, struct_Cn.cc);
          bytetest_d7 = simd_and(r80_7ff_tmp14, tmp55);
          bytetest_88_8f = simd_and(tmp66, basis_bits.bit_4);
          r80_7ff_tmp28 = simd_and(tmp21, bytetest_d7);
          carryQ.cq[116] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp28, carryQ.get_carry_in(116), r80_7ff_tmp29));
          r80_7ff_tmp30 = simd_and(r80_7ff_tmp29, bytetest_88_8f);
          struct_Cn.cc = simd_or(r80_7ff_tmp30, struct_Cn.cc);
          bytetest_d7 = simd_and(r80_7ff_tmp14, tmp55);
          r80_7ff_tmp31 = simd_and(tmp105, basis_bits.bit_4);
          bytetest_ab_af = simd_and(r80_7ff_tmp31, tmp106);
          r80_7ff_tmp32 = simd_and(r80_7ff_tmp29, bytetest_ab_af);
          struct_Cn.cc = simd_or(r80_7ff_tmp32, struct_Cn.cc);
          bytetest_d7 = simd_and(r80_7ff_tmp14, tmp55);
          bytetest_b5_bf = simd_and(bytetest_b0_bf, tmp155);
          r80_7ff_tmp33 = simd_and(r80_7ff_tmp29, bytetest_b5_bf);
          struct_Cn.cc = simd_or(r80_7ff_tmp33, struct_Cn.cc);
          bytetest_d8 = simd_and(r80_7ff_tmp14, tmp149);
          bytetest_85_85 = simd_and(tmp66, tmp46);
          r80_7ff_tmp34 = simd_and(tmp21, bytetest_d8);
          carryQ.cq[117] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp34, carryQ.get_carry_in(117), r80_7ff_tmp35));
          r80_7ff_tmp36 = simd_and(r80_7ff_tmp35, bytetest_85_85);
          struct_Cn.cc = simd_or(r80_7ff_tmp36, struct_Cn.cc);
          bytetest_d8 = simd_and(r80_7ff_tmp14, tmp149);
          bytetest_9d_9d = simd_and(tmp71, tmp97);
          r80_7ff_tmp37 = simd_and(r80_7ff_tmp35, bytetest_9d_9d);
          struct_Cn.cc = simd_or(r80_7ff_tmp37, struct_Cn.cc);
          bytetest_dc = simd_and(r80_7ff_tmp14, tmp180);
          bytetest_8e_8e = simd_and(tmp66, tmp159);
          r80_7ff_tmp38 = simd_and(tmp21, bytetest_dc);
          carryQ.cq[118] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp38, carryQ.get_carry_in(118), r80_7ff_tmp39));
          r80_7ff_tmp40 = simd_and(r80_7ff_tmp39, bytetest_8e_8e);
          struct_Cn.cc = simd_or(r80_7ff_tmp40, struct_Cn.cc);
          bytetest_dd = simd_and(r80_7ff_tmp14, tmp97);
          bytetest_8b_8c = simd_and(bytetest_88_8f, tmp246);
          r80_7ff_tmp41 = simd_and(tmp21, bytetest_dd);
          carryQ.cq[119] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp41, carryQ.get_carry_in(119), r80_7ff_tmp42));
          r80_7ff_tmp43 = simd_and(r80_7ff_tmp42, bytetest_8b_8c);
          struct_Cn.cc = simd_or(r80_7ff_tmp43, struct_Cn.cc);
          bytetest_de = simd_and(r80_7ff_tmp14, tmp159);
          bytetest_b2_bf = simd_and(bytetest_b0_bf, tmp33);
          r80_7ff_tmp44 = simd_and(tmp21, bytetest_de);
          carryQ.cq[120] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp44, carryQ.get_carry_in(120), r80_7ff_tmp45));
          r80_7ff_tmp46 = simd_and(r80_7ff_tmp45, bytetest_b2_bf);
          struct_Cn.cc = simd_or(r80_7ff_tmp46, struct_Cn.cc);
          bytetest_df = simd_and(r80_7ff_tmp14, tmp99);
          bytetest_bb_bf = simd_and(tmp42, tmp106);
          r80_7ff_tmp47 = simd_and(tmp21, bytetest_df);
          carryQ.cq[121] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp47, carryQ.get_carry_in(121), r80_7ff_tmp48));
          r80_7ff_tmp49 = simd_and(r80_7ff_tmp48, bytetest_bb_bf);
          struct_Cn.cc = simd_or(r80_7ff_tmp49, struct_Cn.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(111, 11);
        }
        tmp542 = simd_and(tmp1, tmp37);
        bytetest_e1_ef = simd_and(tmp542, tmp397);
        bytetest_e0 = simd_andc(tmp542, tmp6);
        bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp543 = simd_and(tmp21, bytetest_e0);
        carryQ.cq[122] = carryout2carry(pablo_blk_Advance(tmp543, carryQ.get_carry_in(122), tmp544));
        tmp545 = simd_and(tmp544, bytetest_a0_bf);
        tmp546 = simd_or(tmp545, bytetest_e1_ef);
        if ((bitblock::any(tmp546) || carryQ.CarryTest(123, 140))) {
          r800_ffff_tmp1 = simd_and(tmp1, tmp37);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a0 = simd_andc(tmp105, tmp6);
          bytetest_ae_af = simd_and(tmp105, tmp18);
          r800_ffff_tmp2 = simd_and(tmp21, bytetest_e0);
          carryQ.cq[123] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp2, carryQ.get_carry_in(123), r800_ffff_tmp3));
          r800_ffff_tmp4 = simd_and(r800_ffff_tmp3, bytetest_a0);
          carryQ.cq[124] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp4, carryQ.get_carry_in(124), r800_ffff_tmp5));
          r800_ffff_tmp6 = simd_and(r800_ffff_tmp5, bytetest_ae_af);
          struct_Cn.cc = simd_or(r800_ffff_tmp6, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a0 = simd_andc(tmp105, tmp6);
          bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp99);
          r800_ffff_tmp7 = simd_and(r800_ffff_tmp5, bytetest_bf_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp7, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a1 = simd_and(tmp105, tmp11);
          bytetest_9c_9d = simd_and(tmp71, tmp275);
          r800_ffff_tmp8 = simd_and(r800_ffff_tmp3, bytetest_a1);
          carryQ.cq[125] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp8, carryQ.get_carry_in(125), r800_ffff_tmp9));
          r800_ffff_tmp10 = simd_and(r800_ffff_tmp9, bytetest_9c_9d);
          struct_Cn.cc = simd_or(r800_ffff_tmp10, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a2 = simd_and(tmp105, tmp91);
          bytetest_80_9f = simd_andc(bytetest_80_bf, basis_bits.bit_2);
          r800_ffff_tmp11 = simd_and(r800_ffff_tmp3, bytetest_a2);
          carryQ.cq[126] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp11, carryQ.get_carry_in(126), r800_ffff_tmp12));
          r800_ffff_tmp13 = simd_and(r800_ffff_tmp12, bytetest_80_9f);
          bytetest_a1 = simd_and(tmp105, tmp11);
          r800_ffff_tmp14 = simd_and(basis_bits.bit_3, tmp99);
          r800_ffff_tmp15 = simd_or(basis_bits.bit_2, r800_ffff_tmp14);
          bytetest_9f_bf = simd_and(bytetest_80_bf, r800_ffff_tmp15);
          r800_ffff_tmp16 = simd_and(r800_ffff_tmp9, bytetest_9f_bf);
          r800_ffff_tmp17 = simd_or(r800_ffff_tmp16, r800_ffff_tmp13);
          struct_Cn.cc = simd_or(r800_ffff_tmp17, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a2 = simd_and(tmp105, tmp91);
          bytetest_a1_a1 = simd_and(tmp105, tmp11);
          r800_ffff_tmp18 = simd_and(r800_ffff_tmp12, bytetest_a1_a1);
          struct_Cn.cc = simd_or(r800_ffff_tmp18, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a3 = simd_and(tmp105, tmp31);
          r800_ffff_tmp19 = simd_and(basis_bits.bit_2, tmp50);
          bytetest_80_a3 = simd_andc(bytetest_80_bf, r800_ffff_tmp19);
          r800_ffff_tmp20 = simd_and(r800_ffff_tmp3, bytetest_a3);
          carryQ.cq[127] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp20, carryQ.get_carry_in(127), r800_ffff_tmp21));
          r800_ffff_tmp22 = simd_and(r800_ffff_tmp21, bytetest_80_a3);
          bytetest_a2 = simd_and(tmp105, tmp91);
          r800_ffff_tmp23 = simd_and(tmp17, tmp5);
          r800_ffff_tmp24 = simd_or(basis_bits.bit_3, r800_ffff_tmp23);
          bytetest_ad_bf = simd_and(bytetest_a0_bf, r800_ffff_tmp24);
          r800_ffff_tmp25 = simd_and(r800_ffff_tmp12, bytetest_ad_bf);
          r800_ffff_tmp26 = simd_or(r800_ffff_tmp25, r800_ffff_tmp22);
          struct_Cn.cc = simd_or(r800_ffff_tmp26, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a3 = simd_and(tmp105, tmp31);
          bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp99);
          r800_ffff_tmp27 = simd_and(r800_ffff_tmp21, bytetest_bf_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp27, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a5 = simd_and(tmp105, tmp46);
          bytetest_b8_b8 = simd_and(bytetest_b0_bf, tmp149);
          r800_ffff_tmp28 = simd_and(r800_ffff_tmp3, bytetest_a5);
          carryQ.cq[128] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp28, carryQ.get_carry_in(128), r800_ffff_tmp29));
          r800_ffff_tmp30 = simd_and(r800_ffff_tmp29, bytetest_b8_b8);
          struct_Cn.cc = simd_or(r800_ffff_tmp30, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a6 = simd_and(tmp105, tmp118);
          bytetest_80_80 = simd_andc(tmp66, tmp6);
          r800_ffff_tmp31 = simd_and(r800_ffff_tmp3, bytetest_a6);
          carryQ.cq[129] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp31, carryQ.get_carry_in(129), r800_ffff_tmp32));
          r800_ffff_tmp33 = simd_and(r800_ffff_tmp32, bytetest_80_80);
          struct_Cn.cc = simd_or(r800_ffff_tmp33, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a6 = simd_and(tmp105, tmp118);
          bytetest_84_84 = simd_and(tmp66, tmp45);
          r800_ffff_tmp34 = simd_and(r800_ffff_tmp32, bytetest_84_84);
          struct_Cn.cc = simd_or(r800_ffff_tmp34, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a6 = simd_and(tmp105, tmp118);
          r800_ffff_tmp35 = simd_and(tmp66, tmp17);
          bytetest_8d_8e = simd_and(r800_ffff_tmp35, tmp297);
          r800_ffff_tmp36 = simd_and(r800_ffff_tmp32, bytetest_8d_8e);
          struct_Cn.cc = simd_or(r800_ffff_tmp36, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a6 = simd_and(tmp105, tmp118);
          r800_ffff_tmp37 = simd_andc(tmp71, tmp4);
          bytetest_91_92 = simd_and(r800_ffff_tmp37, tmp297);
          r800_ffff_tmp38 = simd_and(r800_ffff_tmp32, bytetest_91_92);
          struct_Cn.cc = simd_or(r800_ffff_tmp38, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a6 = simd_and(tmp105, tmp118);
          bytetest_a9_a9 = simd_and(tmp105, tmp221);
          r800_ffff_tmp39 = simd_and(r800_ffff_tmp32, bytetest_a9_a9);
          struct_Cn.cc = simd_or(r800_ffff_tmp39, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a6 = simd_and(tmp105, tmp118);
          bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp11);
          r800_ffff_tmp40 = simd_and(r800_ffff_tmp32, bytetest_b1_b1);
          struct_Cn.cc = simd_or(r800_ffff_tmp40, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a6 = simd_and(tmp105, tmp118);
          r800_ffff_tmp41 = simd_andc(bytetest_b0_bf, basis_bits.bit_4);
          r800_ffff_tmp42 = simd_not(basis_bits.bit_6);
          r800_ffff_tmp43 = simd_or(simd_and(basis_bits.bit_5, r800_ffff_tmp42), simd_andc(tmp30, basis_bits.bit_5));
          bytetest_b3_b5 = simd_and(r800_ffff_tmp41, r800_ffff_tmp43);
          r800_ffff_tmp44 = simd_and(r800_ffff_tmp32, bytetest_b3_b5);
          struct_Cn.cc = simd_or(r800_ffff_tmp44, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a6 = simd_and(tmp105, tmp118);
          bytetest_ba_bb = simd_and(bytetest_b0_bf, tmp217);
          r800_ffff_tmp45 = simd_and(r800_ffff_tmp32, bytetest_ba_bb);
          struct_Cn.cc = simd_or(r800_ffff_tmp45, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a7 = simd_and(tmp105, tmp55);
          r800_ffff_tmp46 = simd_and(tmp66, tmp44);
          bytetest_85_86 = simd_and(r800_ffff_tmp46, tmp297);
          r800_ffff_tmp47 = simd_and(r800_ffff_tmp3, bytetest_a7);
          carryQ.cq[130] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp47, carryQ.get_carry_in(130), r800_ffff_tmp48));
          r800_ffff_tmp49 = simd_and(r800_ffff_tmp48, bytetest_85_86);
          struct_Cn.cc = simd_or(r800_ffff_tmp49, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a7 = simd_and(tmp105, tmp55);
          r800_ffff_tmp50 = simd_and(tmp66, tmp72);
          bytetest_89_8a = simd_and(r800_ffff_tmp50, tmp297);
          r800_ffff_tmp51 = simd_and(r800_ffff_tmp48, bytetest_89_8a);
          struct_Cn.cc = simd_or(r800_ffff_tmp51, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a7 = simd_and(tmp105, tmp55);
          r800_ffff_tmp52 = simd_not(tmp228);
          r800_ffff_tmp53 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp52), simd_andc(tmp99, basis_bits.bit_3));
          bytetest_8f_96 = simd_and(bytetest_80_9f, r800_ffff_tmp53);
          r800_ffff_tmp54 = simd_and(r800_ffff_tmp48, bytetest_8f_96);
          struct_Cn.cc = simd_or(r800_ffff_tmp54, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a7 = simd_and(tmp105, tmp55);
          bytetest_98_9b = simd_and(tmp71, tmp72);
          r800_ffff_tmp55 = simd_and(r800_ffff_tmp48, bytetest_98_9b);
          struct_Cn.cc = simd_or(r800_ffff_tmp55, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a7 = simd_and(tmp105, tmp55);
          bytetest_9e_9e = simd_and(tmp71, tmp159);
          r800_ffff_tmp56 = simd_and(r800_ffff_tmp48, bytetest_9e_9e);
          struct_Cn.cc = simd_or(r800_ffff_tmp56, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a7 = simd_and(tmp105, tmp55);
          bytetest_a4_a5 = simd_and(tmp105, tmp124);
          r800_ffff_tmp57 = simd_and(r800_ffff_tmp48, bytetest_a4_a5);
          struct_Cn.cc = simd_or(r800_ffff_tmp57, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a8 = simd_and(tmp105, tmp149);
          bytetest_80_80 = simd_andc(tmp66, tmp6);
          r800_ffff_tmp58 = simd_and(r800_ffff_tmp3, bytetest_a8);
          carryQ.cq[131] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp58, carryQ.get_carry_in(131), r800_ffff_tmp59));
          r800_ffff_tmp60 = simd_and(r800_ffff_tmp59, bytetest_80_80);
          bytetest_a7 = simd_and(tmp105, tmp55);
          bytetest_bc_bf = simd_and(bytetest_b0_bf, tmp17);
          r800_ffff_tmp61 = simd_and(r800_ffff_tmp48, bytetest_bc_bf);
          r800_ffff_tmp62 = simd_or(r800_ffff_tmp61, r800_ffff_tmp60);
          struct_Cn.cc = simd_or(r800_ffff_tmp62, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a8 = simd_and(tmp105, tmp149);
          bytetest_84_84 = simd_and(tmp66, tmp45);
          r800_ffff_tmp63 = simd_and(r800_ffff_tmp59, bytetest_84_84);
          struct_Cn.cc = simd_or(r800_ffff_tmp63, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a8 = simd_and(tmp105, tmp149);
          bytetest_8b_8e = simd_and(tmp258, tmp310);
          r800_ffff_tmp64 = simd_and(r800_ffff_tmp59, bytetest_8b_8e);
          struct_Cn.cc = simd_or(r800_ffff_tmp64, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a8 = simd_and(tmp105, tmp149);
          bytetest_91_92 = simd_and(r800_ffff_tmp37, tmp297);
          r800_ffff_tmp65 = simd_and(r800_ffff_tmp59, bytetest_91_92);
          struct_Cn.cc = simd_or(r800_ffff_tmp65, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a8 = simd_and(tmp105, tmp149);
          bytetest_a9_a9 = simd_and(tmp105, tmp221);
          r800_ffff_tmp66 = simd_and(r800_ffff_tmp59, bytetest_a9_a9);
          struct_Cn.cc = simd_or(r800_ffff_tmp66, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a8 = simd_and(tmp105, tmp149);
          bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp11);
          r800_ffff_tmp67 = simd_and(r800_ffff_tmp59, bytetest_b1_b1);
          struct_Cn.cc = simd_or(r800_ffff_tmp67, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a8 = simd_and(tmp105, tmp149);
          bytetest_b4_b4 = simd_and(bytetest_b0_bf, tmp45);
          r800_ffff_tmp68 = simd_and(r800_ffff_tmp59, bytetest_b4_b4);
          struct_Cn.cc = simd_or(r800_ffff_tmp68, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a8 = simd_and(tmp105, tmp149);
          bytetest_b7_b7 = simd_and(bytetest_b0_bf, tmp55);
          r800_ffff_tmp69 = simd_and(r800_ffff_tmp59, bytetest_b7_b7);
          struct_Cn.cc = simd_or(r800_ffff_tmp69, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a8 = simd_and(tmp105, tmp149);
          bytetest_ba_bb = simd_and(bytetest_b0_bf, tmp217);
          r800_ffff_tmp70 = simd_and(r800_ffff_tmp59, bytetest_ba_bb);
          struct_Cn.cc = simd_or(r800_ffff_tmp70, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a8 = simd_and(tmp105, tmp149);
          bytetest_bd_bd = simd_and(bytetest_b0_bf, tmp97);
          r800_ffff_tmp71 = simd_and(r800_ffff_tmp59, bytetest_bd_bd);
          struct_Cn.cc = simd_or(r800_ffff_tmp71, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a9 = simd_and(tmp105, tmp221);
          bytetest_83_86 = simd_and(tmp308, tmp310);
          r800_ffff_tmp72 = simd_and(r800_ffff_tmp3, bytetest_a9);
          carryQ.cq[132] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp72, carryQ.get_carry_in(132), r800_ffff_tmp73));
          r800_ffff_tmp74 = simd_and(r800_ffff_tmp73, bytetest_83_86);
          struct_Cn.cc = simd_or(r800_ffff_tmp74, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a9 = simd_and(tmp105, tmp221);
          bytetest_89_8a = simd_and(r800_ffff_tmp50, tmp297);
          r800_ffff_tmp75 = simd_and(r800_ffff_tmp73, bytetest_89_8a);
          struct_Cn.cc = simd_or(r800_ffff_tmp75, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a9 = simd_and(tmp105, tmp221);
          r800_ffff_tmp76 = simd_or(simd_and(basis_bits.bit_3, tmp357), simd_andc(tmp18, basis_bits.bit_3));
          bytetest_8e_90 = simd_and(bytetest_80_9f, r800_ffff_tmp76);
          r800_ffff_tmp77 = simd_and(r800_ffff_tmp73, bytetest_8e_90);
          struct_Cn.cc = simd_or(r800_ffff_tmp77, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a9 = simd_and(tmp105, tmp221);
          r800_ffff_tmp78 = simd_or(simd_and(basis_bits.bit_4, tmp207), simd_andc(tmp32, basis_bits.bit_4));
          bytetest_92_98 = simd_and(tmp71, r800_ffff_tmp78);
          r800_ffff_tmp79 = simd_and(r800_ffff_tmp73, bytetest_92_98);
          struct_Cn.cc = simd_or(r800_ffff_tmp79, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a9 = simd_and(tmp105, tmp221);
          bytetest_9d_9d = simd_and(tmp71, tmp97);
          r800_ffff_tmp80 = simd_and(r800_ffff_tmp73, bytetest_9d_9d);
          struct_Cn.cc = simd_or(r800_ffff_tmp80, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a9 = simd_and(tmp105, tmp221);
          r800_ffff_tmp81 = simd_not(tmp222);
          r800_ffff_tmp82 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp81), simd_andc(r800_ffff_tmp14, basis_bits.bit_2));
          bytetest_9f_a5 = simd_and(bytetest_80_bf, r800_ffff_tmp82);
          r800_ffff_tmp83 = simd_and(r800_ffff_tmp73, bytetest_9f_a5);
          struct_Cn.cc = simd_or(r800_ffff_tmp83, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_aa = simd_and(tmp105, tmp74);
          bytetest_80_80 = simd_andc(tmp66, tmp6);
          r800_ffff_tmp84 = simd_and(r800_ffff_tmp3, bytetest_aa);
          carryQ.cq[133] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp84, carryQ.get_carry_in(133), r800_ffff_tmp85));
          r800_ffff_tmp86 = simd_and(r800_ffff_tmp85, bytetest_80_80);
          bytetest_a9 = simd_and(tmp105, tmp221);
          bytetest_b6_bf = simd_and(bytetest_b0_bf, tmp201);
          r800_ffff_tmp87 = simd_and(r800_ffff_tmp73, bytetest_b6_bf);
          r800_ffff_tmp88 = simd_or(r800_ffff_tmp87, r800_ffff_tmp86);
          struct_Cn.cc = simd_or(r800_ffff_tmp88, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_aa = simd_and(tmp105, tmp74);
          bytetest_84_84 = simd_and(tmp66, tmp45);
          r800_ffff_tmp89 = simd_and(r800_ffff_tmp85, bytetest_84_84);
          struct_Cn.cc = simd_or(r800_ffff_tmp89, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_aa = simd_and(tmp105, tmp74);
          bytetest_8e_8e = simd_and(tmp66, tmp159);
          r800_ffff_tmp90 = simd_and(r800_ffff_tmp85, bytetest_8e_8e);
          struct_Cn.cc = simd_or(r800_ffff_tmp90, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_aa = simd_and(tmp105, tmp74);
          bytetest_92_92 = simd_and(tmp71, tmp91);
          r800_ffff_tmp91 = simd_and(r800_ffff_tmp85, bytetest_92_92);
          struct_Cn.cc = simd_or(r800_ffff_tmp91, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_aa = simd_and(tmp105, tmp74);
          bytetest_a9_a9 = simd_and(tmp105, tmp221);
          r800_ffff_tmp92 = simd_and(r800_ffff_tmp85, bytetest_a9_a9);
          struct_Cn.cc = simd_or(r800_ffff_tmp92, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_aa = simd_and(tmp105, tmp74);
          bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp11);
          r800_ffff_tmp93 = simd_and(r800_ffff_tmp85, bytetest_b1_b1);
          struct_Cn.cc = simd_or(r800_ffff_tmp93, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_aa = simd_and(tmp105, tmp74);
          bytetest_b4_b4 = simd_and(bytetest_b0_bf, tmp45);
          r800_ffff_tmp94 = simd_and(r800_ffff_tmp85, bytetest_b4_b4);
          struct_Cn.cc = simd_or(r800_ffff_tmp94, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_aa = simd_and(tmp105, tmp74);
          bytetest_ba_bb = simd_and(bytetest_b0_bf, tmp217);
          r800_ffff_tmp95 = simd_and(r800_ffff_tmp85, bytetest_ba_bb);
          struct_Cn.cc = simd_or(r800_ffff_tmp95, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ab = simd_and(tmp105, tmp84);
          bytetest_86_86 = simd_and(tmp66, tmp118);
          r800_ffff_tmp96 = simd_and(r800_ffff_tmp3, bytetest_ab);
          carryQ.cq[134] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp96, carryQ.get_carry_in(134), r800_ffff_tmp97));
          r800_ffff_tmp98 = simd_and(r800_ffff_tmp97, bytetest_86_86);
          struct_Cn.cc = simd_or(r800_ffff_tmp98, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ab = simd_and(tmp105, tmp84);
          bytetest_8a_8a = simd_and(tmp66, tmp74);
          r800_ffff_tmp99 = simd_and(r800_ffff_tmp97, bytetest_8a_8a);
          struct_Cn.cc = simd_or(r800_ffff_tmp99, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ab = simd_and(tmp105, tmp84);
          bytetest_8e_8f = simd_and(tmp66, tmp18);
          r800_ffff_tmp100 = simd_and(r800_ffff_tmp97, bytetest_8e_8f);
          struct_Cn.cc = simd_or(r800_ffff_tmp100, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ab = simd_and(tmp105, tmp84);
          bytetest_91_9f = simd_and(tmp71, tmp397);
          r800_ffff_tmp101 = simd_and(r800_ffff_tmp97, bytetest_91_9f);
          struct_Cn.cc = simd_or(r800_ffff_tmp101, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ab = simd_and(tmp105, tmp84);
          bytetest_a4_a5 = simd_and(tmp105, tmp124);
          r800_ffff_tmp102 = simd_and(r800_ffff_tmp97, bytetest_a4_a5);
          struct_Cn.cc = simd_or(r800_ffff_tmp102, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ac = simd_and(tmp105, tmp180);
          bytetest_80_80 = simd_andc(tmp66, tmp6);
          r800_ffff_tmp103 = simd_and(r800_ffff_tmp3, bytetest_ac);
          carryQ.cq[135] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp103, carryQ.get_carry_in(135), r800_ffff_tmp104));
          r800_ffff_tmp105 = simd_and(r800_ffff_tmp104, bytetest_80_80);
          bytetest_ab = simd_and(tmp105, tmp84);
          bytetest_b2_bf = simd_and(bytetest_b0_bf, tmp33);
          r800_ffff_tmp106 = simd_and(r800_ffff_tmp97, bytetest_b2_bf);
          r800_ffff_tmp107 = simd_or(r800_ffff_tmp106, r800_ffff_tmp105);
          struct_Cn.cc = simd_or(r800_ffff_tmp107, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ac = simd_and(tmp105, tmp180);
          bytetest_84_84 = simd_and(tmp66, tmp45);
          r800_ffff_tmp108 = simd_and(r800_ffff_tmp104, bytetest_84_84);
          struct_Cn.cc = simd_or(r800_ffff_tmp108, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ac = simd_and(tmp105, tmp180);
          bytetest_8d_8e = simd_and(r800_ffff_tmp35, tmp297);
          r800_ffff_tmp109 = simd_and(r800_ffff_tmp104, bytetest_8d_8e);
          struct_Cn.cc = simd_or(r800_ffff_tmp109, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ac = simd_and(tmp105, tmp180);
          bytetest_91_92 = simd_and(r800_ffff_tmp37, tmp297);
          r800_ffff_tmp110 = simd_and(r800_ffff_tmp104, bytetest_91_92);
          struct_Cn.cc = simd_or(r800_ffff_tmp110, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ac = simd_and(tmp105, tmp180);
          bytetest_a9_a9 = simd_and(tmp105, tmp221);
          r800_ffff_tmp111 = simd_and(r800_ffff_tmp104, bytetest_a9_a9);
          struct_Cn.cc = simd_or(r800_ffff_tmp111, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ac = simd_and(tmp105, tmp180);
          bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp11);
          r800_ffff_tmp112 = simd_and(r800_ffff_tmp104, bytetest_b1_b1);
          struct_Cn.cc = simd_or(r800_ffff_tmp112, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ac = simd_and(tmp105, tmp180);
          bytetest_b4_b4 = simd_and(bytetest_b0_bf, tmp45);
          r800_ffff_tmp113 = simd_and(r800_ffff_tmp104, bytetest_b4_b4);
          struct_Cn.cc = simd_or(r800_ffff_tmp113, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ac = simd_and(tmp105, tmp180);
          bytetest_ba_bb = simd_and(bytetest_b0_bf, tmp217);
          r800_ffff_tmp114 = simd_and(r800_ffff_tmp104, bytetest_ba_bb);
          struct_Cn.cc = simd_or(r800_ffff_tmp114, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ad = simd_and(tmp105, tmp97);
          bytetest_85_86 = simd_and(r800_ffff_tmp46, tmp297);
          r800_ffff_tmp115 = simd_and(r800_ffff_tmp3, bytetest_ad);
          carryQ.cq[136] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp115, carryQ.get_carry_in(136), r800_ffff_tmp116));
          r800_ffff_tmp117 = simd_and(r800_ffff_tmp116, bytetest_85_86);
          struct_Cn.cc = simd_or(r800_ffff_tmp117, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ad = simd_and(tmp105, tmp97);
          bytetest_89_8a = simd_and(r800_ffff_tmp50, tmp297);
          r800_ffff_tmp118 = simd_and(r800_ffff_tmp116, bytetest_89_8a);
          struct_Cn.cc = simd_or(r800_ffff_tmp118, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ad = simd_and(tmp105, tmp97);
          r800_ffff_tmp119 = simd_not(tmp201);
          r800_ffff_tmp120 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp119), simd_andc(tmp18, basis_bits.bit_3));
          bytetest_8e_95 = simd_and(bytetest_80_9f, r800_ffff_tmp120);
          r800_ffff_tmp121 = simd_and(r800_ffff_tmp116, bytetest_8e_95);
          struct_Cn.cc = simd_or(r800_ffff_tmp121, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ad = simd_and(tmp105, tmp97);
          bytetest_98_9b = simd_and(tmp71, tmp72);
          r800_ffff_tmp122 = simd_and(r800_ffff_tmp116, bytetest_98_9b);
          struct_Cn.cc = simd_or(r800_ffff_tmp122, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ad = simd_and(tmp105, tmp97);
          bytetest_9e_9e = simd_and(tmp71, tmp159);
          r800_ffff_tmp123 = simd_and(r800_ffff_tmp116, bytetest_9e_9e);
          struct_Cn.cc = simd_or(r800_ffff_tmp123, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ad = simd_and(tmp105, tmp97);
          bytetest_a4_a5 = simd_and(tmp105, tmp124);
          r800_ffff_tmp124 = simd_and(r800_ffff_tmp116, bytetest_a4_a5);
          struct_Cn.cc = simd_or(r800_ffff_tmp124, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ae = simd_and(tmp105, tmp159);
          bytetest_80_81 = simd_andc(tmp66, tmp15);
          r800_ffff_tmp125 = simd_and(r800_ffff_tmp3, bytetest_ae);
          carryQ.cq[137] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp125, carryQ.get_carry_in(137), r800_ffff_tmp126));
          r800_ffff_tmp127 = simd_and(r800_ffff_tmp126, bytetest_80_81);
          bytetest_ad = simd_and(tmp105, tmp97);
          bytetest_b8_bf = simd_and(bytetest_b0_bf, basis_bits.bit_4);
          r800_ffff_tmp128 = simd_and(r800_ffff_tmp116, bytetest_b8_bf);
          r800_ffff_tmp129 = simd_or(r800_ffff_tmp128, r800_ffff_tmp127);
          struct_Cn.cc = simd_or(r800_ffff_tmp129, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ae = simd_and(tmp105, tmp159);
          bytetest_84_84 = simd_and(tmp66, tmp45);
          r800_ffff_tmp130 = simd_and(r800_ffff_tmp126, bytetest_84_84);
          struct_Cn.cc = simd_or(r800_ffff_tmp130, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ae = simd_and(tmp105, tmp159);
          bytetest_8b_8d = simd_and(tmp258, r800_ffff_tmp43);
          r800_ffff_tmp131 = simd_and(r800_ffff_tmp126, bytetest_8b_8d);
          struct_Cn.cc = simd_or(r800_ffff_tmp131, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ae = simd_and(tmp105, tmp159);
          bytetest_91_91 = simd_and(tmp71, tmp11);
          r800_ffff_tmp132 = simd_and(r800_ffff_tmp126, bytetest_91_91);
          struct_Cn.cc = simd_or(r800_ffff_tmp132, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ae = simd_and(tmp105, tmp159);
          r800_ffff_tmp133 = simd_or(simd_and(basis_bits.bit_4, tmp207), simd_andc(tmp200, basis_bits.bit_4));
          bytetest_96_98 = simd_and(tmp71, r800_ffff_tmp133);
          r800_ffff_tmp134 = simd_and(r800_ffff_tmp126, bytetest_96_98);
          struct_Cn.cc = simd_or(r800_ffff_tmp134, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ae = simd_and(tmp105, tmp159);
          bytetest_9b_9b = simd_and(tmp71, tmp84);
          r800_ffff_tmp135 = simd_and(r800_ffff_tmp126, bytetest_9b_9b);
          struct_Cn.cc = simd_or(r800_ffff_tmp135, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ae = simd_and(tmp105, tmp159);
          bytetest_9d_9d = simd_and(tmp71, tmp97);
          r800_ffff_tmp136 = simd_and(r800_ffff_tmp126, bytetest_9d_9d);
          struct_Cn.cc = simd_or(r800_ffff_tmp136, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ae = simd_and(tmp105, tmp159);
          r800_ffff_tmp137 = simd_andc(tmp105, tmp4);
          bytetest_a0_a2 = simd_andc(r800_ffff_tmp137, tmp30);
          r800_ffff_tmp138 = simd_and(r800_ffff_tmp126, bytetest_a0_a2);
          struct_Cn.cc = simd_or(r800_ffff_tmp138, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ae = simd_and(tmp105, tmp159);
          bytetest_a5_a7 = simd_and(tmp295, tmp5);
          r800_ffff_tmp139 = simd_and(r800_ffff_tmp126, bytetest_a5_a7);
          struct_Cn.cc = simd_or(r800_ffff_tmp139, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ae = simd_and(tmp105, tmp159);
          r800_ffff_tmp140 = simd_and(tmp105, basis_bits.bit_4);
          bytetest_ab_ad = simd_and(r800_ffff_tmp140, r800_ffff_tmp43);
          r800_ffff_tmp141 = simd_and(r800_ffff_tmp126, bytetest_ab_ad);
          struct_Cn.cc = simd_or(r800_ffff_tmp141, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ae = simd_and(tmp105, tmp159);
          r800_ffff_tmp142 = simd_or(simd_and(basis_bits.bit_5, r800_ffff_tmp42), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
          bytetest_ba_bd = simd_and(bytetest_b8_bf, r800_ffff_tmp142);
          r800_ffff_tmp143 = simd_and(r800_ffff_tmp126, bytetest_ba_bd);
          struct_Cn.cc = simd_or(r800_ffff_tmp143, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_af = simd_and(tmp105, tmp99);
          bytetest_83_85 = simd_and(tmp308, r800_ffff_tmp43);
          r800_ffff_tmp144 = simd_and(r800_ffff_tmp3, bytetest_af);
          carryQ.cq[138] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp144, carryQ.get_carry_in(138), r800_ffff_tmp145));
          r800_ffff_tmp146 = simd_and(r800_ffff_tmp145, bytetest_83_85);
          struct_Cn.cc = simd_or(r800_ffff_tmp146, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_af = simd_and(tmp105, tmp99);
          bytetest_89_89 = simd_and(tmp66, tmp221);
          r800_ffff_tmp147 = simd_and(r800_ffff_tmp145, bytetest_89_89);
          struct_Cn.cc = simd_or(r800_ffff_tmp147, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_af = simd_and(tmp105, tmp99);
          bytetest_8e_8f = simd_and(tmp66, tmp18);
          r800_ffff_tmp148 = simd_and(r800_ffff_tmp145, bytetest_8e_8f);
          struct_Cn.cc = simd_or(r800_ffff_tmp148, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_af = simd_and(tmp105, tmp99);
          r800_ffff_tmp149 = simd_andc(tmp71, basis_bits.bit_4);
          r800_ffff_tmp150 = simd_or(simd_and(basis_bits.bit_5, tmp309), simd_andc(tmp5, basis_bits.bit_5));
          bytetest_91_96 = simd_and(r800_ffff_tmp149, r800_ffff_tmp150);
          r800_ffff_tmp151 = simd_and(r800_ffff_tmp145, bytetest_91_96);
          struct_Cn.cc = simd_or(r800_ffff_tmp151, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_af = simd_and(tmp105, tmp99);
          r800_ffff_tmp152 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp81), simd_andc(tmp279, basis_bits.bit_2));
          bytetest_98_a5 = simd_and(bytetest_80_bf, r800_ffff_tmp152);
          r800_ffff_tmp153 = simd_and(r800_ffff_tmp145, bytetest_98_a5);
          struct_Cn.cc = simd_or(r800_ffff_tmp153, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b0 = simd_andc(bytetest_b0_bf, tmp6);
          bytetest_80_80 = simd_andc(tmp66, tmp6);
          r800_ffff_tmp154 = simd_and(r800_ffff_tmp3, bytetest_b0);
          carryQ.cq[139] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp154, carryQ.get_carry_in(139), r800_ffff_tmp155));
          r800_ffff_tmp156 = simd_and(r800_ffff_tmp155, bytetest_80_80);
          bytetest_af = simd_and(tmp105, tmp99);
          bytetest_bb_bf = simd_and(bytetest_b8_bf, tmp106);
          r800_ffff_tmp157 = simd_and(r800_ffff_tmp145, bytetest_bb_bf);
          r800_ffff_tmp158 = simd_or(r800_ffff_tmp157, r800_ffff_tmp156);
          struct_Cn.cc = simd_or(r800_ffff_tmp158, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b0 = simd_andc(bytetest_b0_bf, tmp6);
          bytetest_84_84 = simd_and(tmp66, tmp45);
          r800_ffff_tmp159 = simd_and(r800_ffff_tmp155, bytetest_84_84);
          struct_Cn.cc = simd_or(r800_ffff_tmp159, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b0 = simd_andc(bytetest_b0_bf, tmp6);
          bytetest_8d_8d = simd_and(tmp66, tmp97);
          r800_ffff_tmp160 = simd_and(r800_ffff_tmp155, bytetest_8d_8d);
          struct_Cn.cc = simd_or(r800_ffff_tmp160, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b0 = simd_andc(bytetest_b0_bf, tmp6);
          bytetest_91_91 = simd_and(tmp71, tmp11);
          r800_ffff_tmp161 = simd_and(r800_ffff_tmp155, bytetest_91_91);
          struct_Cn.cc = simd_or(r800_ffff_tmp161, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b0 = simd_andc(bytetest_b0_bf, tmp6);
          bytetest_a9_a9 = simd_and(tmp105, tmp221);
          r800_ffff_tmp162 = simd_and(r800_ffff_tmp155, bytetest_a9_a9);
          struct_Cn.cc = simd_or(r800_ffff_tmp162, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b0 = simd_andc(bytetest_b0_bf, tmp6);
          bytetest_b4_b4 = simd_and(bytetest_b0_bf, tmp45);
          r800_ffff_tmp163 = simd_and(r800_ffff_tmp155, bytetest_b4_b4);
          struct_Cn.cc = simd_or(r800_ffff_tmp163, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b0 = simd_andc(bytetest_b0_bf, tmp6);
          r800_ffff_tmp164 = simd_or(simd_and(basis_bits.bit_5, tmp245), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
          bytetest_ba_bc = simd_and(bytetest_b8_bf, r800_ffff_tmp164);
          r800_ffff_tmp165 = simd_and(r800_ffff_tmp155, bytetest_ba_bc);
          struct_Cn.cc = simd_or(r800_ffff_tmp165, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b1 = simd_and(bytetest_b0_bf, tmp11);
          bytetest_85_85 = simd_and(tmp66, tmp46);
          r800_ffff_tmp166 = simd_and(r800_ffff_tmp3, bytetest_b1);
          carryQ.cq[140] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp166, carryQ.get_carry_in(140), r800_ffff_tmp167));
          r800_ffff_tmp168 = simd_and(r800_ffff_tmp167, bytetest_85_85);
          struct_Cn.cc = simd_or(r800_ffff_tmp168, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b1 = simd_and(bytetest_b0_bf, tmp11);
          bytetest_89_89 = simd_and(tmp66, tmp221);
          r800_ffff_tmp169 = simd_and(r800_ffff_tmp167, bytetest_89_89);
          struct_Cn.cc = simd_or(r800_ffff_tmp169, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b1 = simd_and(bytetest_b0_bf, tmp11);
          r800_ffff_tmp170 = simd_not(tmp155);
          r800_ffff_tmp171 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp170), simd_andc(tmp18, basis_bits.bit_3));
          bytetest_8e_94 = simd_and(bytetest_80_9f, r800_ffff_tmp171);
          r800_ffff_tmp172 = simd_and(r800_ffff_tmp167, bytetest_8e_94);
          struct_Cn.cc = simd_or(r800_ffff_tmp172, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b1 = simd_and(bytetest_b0_bf, tmp11);
          bytetest_97_97 = simd_and(tmp71, tmp55);
          r800_ffff_tmp173 = simd_and(r800_ffff_tmp167, bytetest_97_97);
          struct_Cn.cc = simd_or(r800_ffff_tmp173, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b1 = simd_and(bytetest_b0_bf, tmp11);
          r800_ffff_tmp174 = simd_and(tmp71, basis_bits.bit_4);
          bytetest_9a_9f = simd_and(r800_ffff_tmp174, tmp32);
          r800_ffff_tmp175 = simd_and(r800_ffff_tmp167, bytetest_9a_9f);
          struct_Cn.cc = simd_or(r800_ffff_tmp175, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b1 = simd_and(bytetest_b0_bf, tmp11);
          bytetest_a4_a5 = simd_and(tmp105, tmp124);
          r800_ffff_tmp176 = simd_and(r800_ffff_tmp167, bytetest_a4_a5);
          struct_Cn.cc = simd_or(r800_ffff_tmp176, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b1 = simd_and(bytetest_b0_bf, tmp11);
          bytetest_b0_b7 = simd_andc(bytetest_b0_bf, basis_bits.bit_4);
          r800_ffff_tmp177 = simd_and(r800_ffff_tmp167, bytetest_b0_b7);
          struct_Cn.cc = simd_or(r800_ffff_tmp177, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp91);
          bytetest_80_81 = simd_andc(tmp66, tmp15);
          r800_ffff_tmp178 = simd_and(r800_ffff_tmp3, bytetest_b2);
          carryQ.cq[141] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp178, carryQ.get_carry_in(141), r800_ffff_tmp179));
          r800_ffff_tmp180 = simd_and(r800_ffff_tmp179, bytetest_80_81);
          struct_Cn.cc = simd_or(r800_ffff_tmp180, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp91);
          bytetest_84_84 = simd_and(tmp66, tmp45);
          r800_ffff_tmp181 = simd_and(r800_ffff_tmp179, bytetest_84_84);
          struct_Cn.cc = simd_or(r800_ffff_tmp181, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp91);
          bytetest_8d_8d = simd_and(tmp66, tmp97);
          r800_ffff_tmp182 = simd_and(r800_ffff_tmp179, bytetest_8d_8d);
          struct_Cn.cc = simd_or(r800_ffff_tmp182, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp91);
          bytetest_91_91 = simd_and(tmp71, tmp11);
          r800_ffff_tmp183 = simd_and(r800_ffff_tmp179, bytetest_91_91);
          struct_Cn.cc = simd_or(r800_ffff_tmp183, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp91);
          bytetest_a9_a9 = simd_and(tmp105, tmp221);
          r800_ffff_tmp184 = simd_and(r800_ffff_tmp179, bytetest_a9_a9);
          struct_Cn.cc = simd_or(r800_ffff_tmp184, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp91);
          bytetest_b4_b4 = simd_and(bytetest_b0_bf, tmp45);
          r800_ffff_tmp185 = simd_and(r800_ffff_tmp179, bytetest_b4_b4);
          struct_Cn.cc = simd_or(r800_ffff_tmp185, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp91);
          bytetest_ba_bb = simd_and(bytetest_b0_bf, tmp217);
          r800_ffff_tmp186 = simd_and(r800_ffff_tmp179, bytetest_ba_bb);
          struct_Cn.cc = simd_or(r800_ffff_tmp186, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp31);
          bytetest_85_85 = simd_and(tmp66, tmp46);
          r800_ffff_tmp187 = simd_and(r800_ffff_tmp3, bytetest_b3);
          carryQ.cq[142] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp187, carryQ.get_carry_in(142), r800_ffff_tmp188));
          r800_ffff_tmp189 = simd_and(r800_ffff_tmp188, bytetest_85_85);
          struct_Cn.cc = simd_or(r800_ffff_tmp189, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp31);
          bytetest_89_89 = simd_and(tmp66, tmp221);
          r800_ffff_tmp190 = simd_and(r800_ffff_tmp188, bytetest_89_89);
          struct_Cn.cc = simd_or(r800_ffff_tmp190, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp31);
          bytetest_8e_94 = simd_and(bytetest_80_9f, r800_ffff_tmp171);
          r800_ffff_tmp191 = simd_and(r800_ffff_tmp188, bytetest_8e_94);
          struct_Cn.cc = simd_or(r800_ffff_tmp191, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp31);
          r800_ffff_tmp192 = simd_not(tmp200);
          r800_ffff_tmp193 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp192), simd_andc(tmp160, basis_bits.bit_4));
          bytetest_97_9d = simd_and(tmp71, r800_ffff_tmp193);
          r800_ffff_tmp194 = simd_and(r800_ffff_tmp188, bytetest_97_9d);
          struct_Cn.cc = simd_or(r800_ffff_tmp194, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp31);
          bytetest_9f_9f = simd_and(tmp71, tmp99);
          r800_ffff_tmp195 = simd_and(r800_ffff_tmp188, bytetest_9f_9f);
          struct_Cn.cc = simd_or(r800_ffff_tmp195, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp31);
          bytetest_a4_a5 = simd_and(tmp105, tmp124);
          r800_ffff_tmp196 = simd_and(r800_ffff_tmp188, bytetest_a4_a5);
          struct_Cn.cc = simd_or(r800_ffff_tmp196, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp31);
          bytetest_b0_b0 = simd_andc(bytetest_b0_bf, tmp6);
          r800_ffff_tmp197 = simd_and(r800_ffff_tmp188, bytetest_b0_b0);
          struct_Cn.cc = simd_or(r800_ffff_tmp197, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b4 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_80_81 = simd_andc(tmp66, tmp15);
          r800_ffff_tmp198 = simd_and(r800_ffff_tmp3, bytetest_b4);
          carryQ.cq[143] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp198, carryQ.get_carry_in(143), r800_ffff_tmp199));
          r800_ffff_tmp200 = simd_and(r800_ffff_tmp199, bytetest_80_81);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp31);
          bytetest_b3_bf = simd_and(bytetest_b0_bf, tmp107);
          r800_ffff_tmp201 = simd_and(r800_ffff_tmp188, bytetest_b3_bf);
          r800_ffff_tmp202 = simd_or(r800_ffff_tmp201, r800_ffff_tmp200);
          struct_Cn.cc = simd_or(r800_ffff_tmp202, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b4 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_84_84 = simd_and(tmp66, tmp45);
          r800_ffff_tmp203 = simd_and(r800_ffff_tmp199, bytetest_84_84);
          struct_Cn.cc = simd_or(r800_ffff_tmp203, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b4 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_8d_8d = simd_and(tmp66, tmp97);
          r800_ffff_tmp204 = simd_and(r800_ffff_tmp199, bytetest_8d_8d);
          struct_Cn.cc = simd_or(r800_ffff_tmp204, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b4 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_91_91 = simd_and(tmp71, tmp11);
          r800_ffff_tmp205 = simd_and(r800_ffff_tmp199, bytetest_91_91);
          struct_Cn.cc = simd_or(r800_ffff_tmp205, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b4 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_bb_bc = simd_and(bytetest_b8_bf, tmp246);
          r800_ffff_tmp206 = simd_and(r800_ffff_tmp199, bytetest_bb_bc);
          struct_Cn.cc = simd_or(r800_ffff_tmp206, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b5 = simd_and(bytetest_b0_bf, tmp46);
          bytetest_85_85 = simd_and(tmp66, tmp46);
          r800_ffff_tmp207 = simd_and(r800_ffff_tmp3, bytetest_b5);
          carryQ.cq[144] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp207, carryQ.get_carry_in(144), r800_ffff_tmp208));
          r800_ffff_tmp209 = simd_and(r800_ffff_tmp208, bytetest_85_85);
          struct_Cn.cc = simd_or(r800_ffff_tmp209, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b5 = simd_and(bytetest_b0_bf, tmp46);
          bytetest_89_89 = simd_and(tmp66, tmp221);
          r800_ffff_tmp210 = simd_and(r800_ffff_tmp208, bytetest_89_89);
          struct_Cn.cc = simd_or(r800_ffff_tmp210, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b5 = simd_and(bytetest_b0_bf, tmp46);
          bytetest_8f_96 = simd_and(bytetest_80_9f, r800_ffff_tmp53);
          r800_ffff_tmp211 = simd_and(r800_ffff_tmp208, bytetest_8f_96);
          struct_Cn.cc = simd_or(r800_ffff_tmp211, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b5 = simd_and(bytetest_b0_bf, tmp46);
          bytetest_98_9f = simd_and(tmp71, basis_bits.bit_4);
          r800_ffff_tmp212 = simd_and(r800_ffff_tmp208, bytetest_98_9f);
          struct_Cn.cc = simd_or(r800_ffff_tmp212, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b5 = simd_and(bytetest_b0_bf, tmp46);
          bytetest_a4_a5 = simd_and(tmp105, tmp124);
          r800_ffff_tmp213 = simd_and(r800_ffff_tmp208, bytetest_a4_a5);
          struct_Cn.cc = simd_or(r800_ffff_tmp213, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b5 = simd_and(bytetest_b0_bf, tmp46);
          bytetest_b6_b8 = simd_and(bytetest_b0_bf, r800_ffff_tmp133);
          r800_ffff_tmp214 = simd_and(r800_ffff_tmp208, bytetest_b6_b8);
          struct_Cn.cc = simd_or(r800_ffff_tmp214, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b6 = simd_and(bytetest_b0_bf, tmp118);
          bytetest_80_81 = simd_andc(tmp66, tmp15);
          r800_ffff_tmp215 = simd_and(r800_ffff_tmp3, bytetest_b6);
          carryQ.cq[145] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp215, carryQ.get_carry_in(145), r800_ffff_tmp216));
          r800_ffff_tmp217 = simd_and(r800_ffff_tmp216, bytetest_80_81);
          struct_Cn.cc = simd_or(r800_ffff_tmp217, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b6 = simd_and(bytetest_b0_bf, tmp118);
          bytetest_84_84 = simd_and(tmp66, tmp45);
          r800_ffff_tmp218 = simd_and(r800_ffff_tmp216, bytetest_84_84);
          struct_Cn.cc = simd_or(r800_ffff_tmp218, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b6 = simd_and(bytetest_b0_bf, tmp118);
          bytetest_97_99 = simd_and(tmp71, tmp268);
          r800_ffff_tmp219 = simd_and(r800_ffff_tmp216, bytetest_97_99);
          struct_Cn.cc = simd_or(r800_ffff_tmp219, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b6 = simd_and(bytetest_b0_bf, tmp118);
          bytetest_b2_b2 = simd_and(bytetest_b0_bf, tmp91);
          r800_ffff_tmp220 = simd_and(r800_ffff_tmp216, bytetest_b2_b2);
          struct_Cn.cc = simd_or(r800_ffff_tmp220, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b6 = simd_and(bytetest_b0_bf, tmp118);
          bytetest_bc_bc = simd_and(bytetest_b0_bf, tmp180);
          r800_ffff_tmp221 = simd_and(r800_ffff_tmp216, bytetest_bc_bc);
          struct_Cn.cc = simd_or(r800_ffff_tmp221, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b6 = simd_and(bytetest_b0_bf, tmp118);
          bytetest_be_bf = simd_and(bytetest_b0_bf, tmp18);
          r800_ffff_tmp222 = simd_and(r800_ffff_tmp216, bytetest_be_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp222, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b7 = simd_and(bytetest_b0_bf, tmp55);
          bytetest_87_89 = simd_and(tmp66, tmp268);
          r800_ffff_tmp223 = simd_and(r800_ffff_tmp3, bytetest_b7);
          carryQ.cq[146] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp223, carryQ.get_carry_in(146), r800_ffff_tmp224));
          r800_ffff_tmp225 = simd_and(r800_ffff_tmp224, bytetest_87_89);
          struct_Cn.cc = simd_or(r800_ffff_tmp225, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b7 = simd_and(bytetest_b0_bf, tmp55);
          bytetest_8b_8e = simd_and(tmp258, tmp310);
          r800_ffff_tmp226 = simd_and(r800_ffff_tmp224, bytetest_8b_8e);
          struct_Cn.cc = simd_or(r800_ffff_tmp226, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b7 = simd_and(bytetest_b0_bf, tmp55);
          bytetest_95_95 = simd_and(tmp71, tmp46);
          r800_ffff_tmp227 = simd_and(r800_ffff_tmp224, bytetest_95_95);
          struct_Cn.cc = simd_or(r800_ffff_tmp227, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b7 = simd_and(bytetest_b0_bf, tmp55);
          bytetest_97_97 = simd_and(tmp71, tmp55);
          r800_ffff_tmp228 = simd_and(r800_ffff_tmp224, bytetest_97_97);
          struct_Cn.cc = simd_or(r800_ffff_tmp228, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b7 = simd_and(bytetest_b0_bf, tmp55);
          bytetest_a0_b1 = simd_andc(bytetest_a0_bf, tmp111);
          r800_ffff_tmp229 = simd_and(r800_ffff_tmp224, bytetest_a0_b1);
          struct_Cn.cc = simd_or(r800_ffff_tmp229, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp149);
          bytetest_80_80 = simd_andc(tmp66, tmp6);
          r800_ffff_tmp230 = simd_and(r800_ffff_tmp3, bytetest_b8);
          carryQ.cq[147] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp230, carryQ.get_carry_in(147), r800_ffff_tmp231));
          r800_ffff_tmp232 = simd_and(r800_ffff_tmp231, bytetest_80_80);
          bytetest_b7 = simd_and(bytetest_b0_bf, tmp55);
          bytetest_b5_bf = simd_and(bytetest_b0_bf, tmp155);
          r800_ffff_tmp233 = simd_and(r800_ffff_tmp224, bytetest_b5_bf);
          r800_ffff_tmp234 = simd_or(r800_ffff_tmp233, r800_ffff_tmp232);
          struct_Cn.cc = simd_or(r800_ffff_tmp234, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp149);
          bytetest_bb_be = simd_and(bytetest_b8_bf, tmp310);
          r800_ffff_tmp235 = simd_and(r800_ffff_tmp231, bytetest_bb_be);
          struct_Cn.cc = simd_or(r800_ffff_tmp235, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp74);
          bytetest_80_80 = simd_andc(tmp66, tmp6);
          r800_ffff_tmp236 = simd_and(r800_ffff_tmp3, bytetest_ba);
          carryQ.cq[148] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp236, carryQ.get_carry_in(148), r800_ffff_tmp237));
          r800_ffff_tmp238 = simd_and(r800_ffff_tmp237, bytetest_80_80);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp221);
          bytetest_9c_bf = simd_and(bytetest_80_bf, tmp80);
          r800_ffff_tmp239 = simd_and(r800_ffff_tmp3, bytetest_b9);
          carryQ.cq[149] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp239, carryQ.get_carry_in(149), r800_ffff_tmp240));
          r800_ffff_tmp241 = simd_and(r800_ffff_tmp240, bytetest_9c_bf);
          r800_ffff_tmp242 = simd_or(r800_ffff_tmp241, r800_ffff_tmp238);
          struct_Cn.cc = simd_or(r800_ffff_tmp242, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp74);
          bytetest_83_83 = simd_and(tmp66, tmp31);
          r800_ffff_tmp243 = simd_and(r800_ffff_tmp237, bytetest_83_83);
          struct_Cn.cc = simd_or(r800_ffff_tmp243, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp74);
          bytetest_85_86 = simd_and(r800_ffff_tmp46, tmp297);
          r800_ffff_tmp244 = simd_and(r800_ffff_tmp237, bytetest_85_86);
          struct_Cn.cc = simd_or(r800_ffff_tmp244, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp74);
          bytetest_89_89 = simd_and(tmp66, tmp221);
          r800_ffff_tmp245 = simd_and(r800_ffff_tmp237, bytetest_89_89);
          struct_Cn.cc = simd_or(r800_ffff_tmp245, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp74);
          bytetest_8b_8c = simd_and(tmp258, tmp246);
          r800_ffff_tmp246 = simd_and(r800_ffff_tmp237, bytetest_8b_8c);
          struct_Cn.cc = simd_or(r800_ffff_tmp246, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp74);
          r800_ffff_tmp247 = simd_not(tmp4);
          r800_ffff_tmp248 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp247), simd_andc(tmp18, basis_bits.bit_3));
          bytetest_8e_93 = simd_and(bytetest_80_9f, r800_ffff_tmp248);
          r800_ffff_tmp249 = simd_and(r800_ffff_tmp237, bytetest_8e_93);
          struct_Cn.cc = simd_or(r800_ffff_tmp249, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp74);
          bytetest_98_98 = simd_and(tmp71, tmp149);
          r800_ffff_tmp250 = simd_and(r800_ffff_tmp237, bytetest_98_98);
          struct_Cn.cc = simd_or(r800_ffff_tmp250, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp74);
          bytetest_a0_a0 = simd_andc(tmp105, tmp6);
          r800_ffff_tmp251 = simd_and(r800_ffff_tmp237, bytetest_a0_a0);
          struct_Cn.cc = simd_or(r800_ffff_tmp251, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp74);
          bytetest_a4_a4 = simd_and(tmp105, tmp45);
          r800_ffff_tmp252 = simd_and(r800_ffff_tmp237, bytetest_a4_a4);
          struct_Cn.cc = simd_or(r800_ffff_tmp252, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp74);
          bytetest_a6_a6 = simd_and(tmp105, tmp118);
          r800_ffff_tmp253 = simd_and(r800_ffff_tmp237, bytetest_a6_a6);
          struct_Cn.cc = simd_or(r800_ffff_tmp253, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp74);
          r800_ffff_tmp254 = simd_andc(tmp72, basis_bits.bit_6);
          bytetest_a8_a9 = simd_and(tmp105, r800_ffff_tmp254);
          r800_ffff_tmp255 = simd_and(r800_ffff_tmp237, bytetest_a8_a9);
          struct_Cn.cc = simd_or(r800_ffff_tmp255, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp74);
          bytetest_ac_ac = simd_and(tmp105, tmp180);
          r800_ffff_tmp256 = simd_and(r800_ffff_tmp237, bytetest_ac_ac);
          struct_Cn.cc = simd_or(r800_ffff_tmp256, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp74);
          bytetest_ba_ba = simd_and(bytetest_b0_bf, tmp74);
          r800_ffff_tmp257 = simd_and(r800_ffff_tmp237, bytetest_ba_ba);
          struct_Cn.cc = simd_or(r800_ffff_tmp257, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp74);
          bytetest_be_bf = simd_and(bytetest_b0_bf, tmp18);
          r800_ffff_tmp258 = simd_and(r800_ffff_tmp237, bytetest_be_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp258, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp84);
          bytetest_85_85 = simd_and(tmp66, tmp46);
          r800_ffff_tmp259 = simd_and(r800_ffff_tmp3, bytetest_bb);
          carryQ.cq[150] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp259, carryQ.get_carry_in(150), r800_ffff_tmp260));
          r800_ffff_tmp261 = simd_and(r800_ffff_tmp260, bytetest_85_85);
          struct_Cn.cc = simd_or(r800_ffff_tmp261, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp84);
          bytetest_87_87 = simd_and(tmp66, tmp55);
          r800_ffff_tmp262 = simd_and(r800_ffff_tmp260, bytetest_87_87);
          struct_Cn.cc = simd_or(r800_ffff_tmp262, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp84);
          bytetest_8e_8f = simd_and(tmp66, tmp18);
          r800_ffff_tmp263 = simd_and(r800_ffff_tmp260, bytetest_8e_8f);
          struct_Cn.cc = simd_or(r800_ffff_tmp263, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp84);
          bytetest_9a_9b = simd_and(tmp71, tmp217);
          r800_ffff_tmp264 = simd_and(r800_ffff_tmp260, bytetest_9a_9b);
          struct_Cn.cc = simd_or(r800_ffff_tmp264, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp84);
          bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
          r800_ffff_tmp265 = simd_and(r800_ffff_tmp260, bytetest_a0_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp265, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bd = simd_and(bytetest_b0_bf, tmp97);
          bytetest_88_88 = simd_and(tmp66, tmp149);
          r800_ffff_tmp266 = simd_and(r800_ffff_tmp3, bytetest_bd);
          carryQ.cq[151] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp266, carryQ.get_carry_in(151), r800_ffff_tmp267));
          r800_ffff_tmp268 = simd_and(r800_ffff_tmp267, bytetest_88_88);
          struct_Cn.cc = simd_or(r800_ffff_tmp268, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bd = simd_and(bytetest_b0_bf, tmp97);
          r800_ffff_tmp269 = simd_or(simd_and(basis_bits.bit_3, tmp357), simd_andc(r800_ffff_tmp23, basis_bits.bit_3));
          bytetest_ad_b0 = simd_and(bytetest_a0_bf, r800_ffff_tmp269);
          r800_ffff_tmp270 = simd_and(r800_ffff_tmp267, bytetest_ad_b0);
          struct_Cn.cc = simd_or(r800_ffff_tmp270, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_be = simd_and(bytetest_b0_bf, tmp159);
          bytetest_98_98 = simd_and(tmp71, tmp149);
          r800_ffff_tmp271 = simd_and(r800_ffff_tmp3, bytetest_be);
          carryQ.cq[152] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp271, carryQ.get_carry_in(152), r800_ffff_tmp272));
          r800_ffff_tmp273 = simd_and(r800_ffff_tmp272, bytetest_98_98);
          struct_Cn.cc = simd_or(r800_ffff_tmp273, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_be = simd_and(bytetest_b0_bf, tmp159);
          bytetest_bd_bd = simd_and(bytetest_b0_bf, tmp97);
          r800_ffff_tmp274 = simd_and(r800_ffff_tmp272, bytetest_bd_bd);
          struct_Cn.cc = simd_or(r800_ffff_tmp274, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp99);
          bytetest_8d_8d = simd_and(tmp66, tmp97);
          r800_ffff_tmp275 = simd_and(r800_ffff_tmp3, bytetest_bf);
          carryQ.cq[153] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp275, carryQ.get_carry_in(153), r800_ffff_tmp276));
          r800_ffff_tmp277 = simd_and(r800_ffff_tmp276, bytetest_8d_8d);
          struct_Cn.cc = simd_or(r800_ffff_tmp277, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp99);
          bytetest_9b_bf = simd_and(bytetest_80_bf, tmp380);
          r800_ffff_tmp278 = simd_and(r800_ffff_tmp276, bytetest_9b_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp278, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_83 = simd_and(tmp66, tmp31);
          bytetest_86_86 = simd_and(tmp66, tmp118);
          r800_ffff_tmp279 = simd_and(tmp21, bytetest_e1);
          carryQ.cq[154] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp279, carryQ.get_carry_in(154), r800_ffff_tmp280));
          r800_ffff_tmp281 = simd_and(r800_ffff_tmp280, bytetest_83);
          carryQ.cq[155] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp281, carryQ.get_carry_in(155), r800_ffff_tmp282));
          r800_ffff_tmp283 = simd_and(r800_ffff_tmp282, bytetest_86_86);
          struct_Cn.cc = simd_or(r800_ffff_tmp283, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_83 = simd_and(tmp66, tmp31);
          bytetest_88_8c = simd_andc(tmp258, tmp154);
          r800_ffff_tmp284 = simd_and(r800_ffff_tmp282, bytetest_88_8c);
          struct_Cn.cc = simd_or(r800_ffff_tmp284, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_83 = simd_and(tmp66, tmp31);
          bytetest_8e_8f = simd_and(tmp66, tmp18);
          r800_ffff_tmp285 = simd_and(r800_ffff_tmp282, bytetest_8e_8f);
          struct_Cn.cc = simd_or(r800_ffff_tmp285, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_89 = simd_and(tmp66, tmp221);
          bytetest_89_89 = simd_and(tmp66, tmp221);
          r800_ffff_tmp286 = simd_and(r800_ffff_tmp280, bytetest_89);
          carryQ.cq[156] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp286, carryQ.get_carry_in(156), r800_ffff_tmp287));
          r800_ffff_tmp288 = simd_and(r800_ffff_tmp287, bytetest_89_89);
          struct_Cn.cc = simd_or(r800_ffff_tmp288, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_89 = simd_and(tmp66, tmp221);
          bytetest_8e_8f = simd_and(tmp66, tmp18);
          r800_ffff_tmp289 = simd_and(r800_ffff_tmp287, bytetest_8e_8f);
          struct_Cn.cc = simd_or(r800_ffff_tmp289, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_89 = simd_and(tmp66, tmp221);
          bytetest_97_97 = simd_and(tmp71, tmp55);
          r800_ffff_tmp290 = simd_and(r800_ffff_tmp287, bytetest_97_97);
          struct_Cn.cc = simd_or(r800_ffff_tmp290, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_89 = simd_and(tmp66, tmp221);
          bytetest_99_99 = simd_and(tmp71, tmp221);
          r800_ffff_tmp291 = simd_and(r800_ffff_tmp287, bytetest_99_99);
          struct_Cn.cc = simd_or(r800_ffff_tmp291, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_89 = simd_and(tmp66, tmp221);
          bytetest_9e_9f = simd_and(tmp71, tmp18);
          r800_ffff_tmp292 = simd_and(r800_ffff_tmp287, bytetest_9e_9f);
          struct_Cn.cc = simd_or(r800_ffff_tmp292, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_8a = simd_and(tmp66, tmp74);
          bytetest_89_89 = simd_and(tmp66, tmp221);
          r800_ffff_tmp293 = simd_and(r800_ffff_tmp280, bytetest_8a);
          carryQ.cq[157] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp293, carryQ.get_carry_in(157), r800_ffff_tmp294));
          r800_ffff_tmp295 = simd_and(r800_ffff_tmp294, bytetest_89_89);
          struct_Cn.cc = simd_or(r800_ffff_tmp295, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_8a = simd_and(tmp66, tmp74);
          bytetest_8e_8f = simd_and(tmp66, tmp18);
          r800_ffff_tmp296 = simd_and(r800_ffff_tmp294, bytetest_8e_8f);
          struct_Cn.cc = simd_or(r800_ffff_tmp296, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_8a = simd_and(tmp66, tmp74);
          bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp11);
          r800_ffff_tmp297 = simd_and(r800_ffff_tmp294, bytetest_b1_b1);
          struct_Cn.cc = simd_or(r800_ffff_tmp297, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_8a = simd_and(tmp66, tmp74);
          bytetest_b6_b7 = simd_and(bytetest_b0_bf, tmp271);
          r800_ffff_tmp298 = simd_and(r800_ffff_tmp294, bytetest_b6_b7);
          struct_Cn.cc = simd_or(r800_ffff_tmp298, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_8a = simd_and(tmp66, tmp74);
          bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp99);
          r800_ffff_tmp299 = simd_and(r800_ffff_tmp294, bytetest_bf_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp299, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_8b = simd_and(tmp66, tmp84);
          bytetest_81_81 = simd_and(tmp66, tmp11);
          r800_ffff_tmp300 = simd_and(r800_ffff_tmp280, bytetest_8b);
          carryQ.cq[158] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp300, carryQ.get_carry_in(158), r800_ffff_tmp301));
          r800_ffff_tmp302 = simd_and(r800_ffff_tmp301, bytetest_81_81);
          struct_Cn.cc = simd_or(r800_ffff_tmp302, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_8b = simd_and(tmp66, tmp84);
          bytetest_86_87 = simd_and(tmp66, tmp271);
          r800_ffff_tmp303 = simd_and(r800_ffff_tmp301, bytetest_86_87);
          struct_Cn.cc = simd_or(r800_ffff_tmp303, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_8b = simd_and(tmp66, tmp84);
          bytetest_97_97 = simd_and(tmp71, tmp55);
          r800_ffff_tmp304 = simd_and(r800_ffff_tmp301, bytetest_97_97);
          struct_Cn.cc = simd_or(r800_ffff_tmp304, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_8c = simd_and(tmp66, tmp180);
          bytetest_91_91 = simd_and(tmp71, tmp11);
          r800_ffff_tmp305 = simd_and(r800_ffff_tmp280, bytetest_8c);
          carryQ.cq[159] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp305, carryQ.get_carry_in(159), r800_ffff_tmp306));
          r800_ffff_tmp307 = simd_and(r800_ffff_tmp306, bytetest_91_91);
          struct_Cn.cc = simd_or(r800_ffff_tmp307, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_8c = simd_and(tmp66, tmp180);
          bytetest_96_97 = simd_and(tmp71, tmp271);
          r800_ffff_tmp308 = simd_and(r800_ffff_tmp306, bytetest_96_97);
          struct_Cn.cc = simd_or(r800_ffff_tmp308, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_8d = simd_and(tmp66, tmp97);
          bytetest_9b_9c = simd_and(bytetest_98_9f, tmp246);
          r800_ffff_tmp309 = simd_and(r800_ffff_tmp280, bytetest_8d);
          carryQ.cq[160] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp309, carryQ.get_carry_in(160), r800_ffff_tmp310));
          r800_ffff_tmp311 = simd_and(r800_ffff_tmp310, bytetest_9b_9c);
          struct_Cn.cc = simd_or(r800_ffff_tmp311, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_8d = simd_and(tmp66, tmp97);
          bytetest_bd_bf = simd_and(bytetest_bc_bf, tmp5);
          r800_ffff_tmp312 = simd_and(r800_ffff_tmp310, bytetest_bd_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp312, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_8e = simd_and(tmp66, tmp159);
          bytetest_9a_9f = simd_and(bytetest_98_9f, tmp32);
          r800_ffff_tmp313 = simd_and(r800_ffff_tmp280, bytetest_8e);
          carryQ.cq[161] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp313, carryQ.get_carry_in(161), r800_ffff_tmp314));
          r800_ffff_tmp315 = simd_and(r800_ffff_tmp314, bytetest_9a_9f);
          struct_Cn.cc = simd_or(r800_ffff_tmp315, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_8f = simd_and(tmp66, tmp99);
          bytetest_b5_bf = simd_and(bytetest_b0_bf, tmp155);
          r800_ffff_tmp316 = simd_and(r800_ffff_tmp280, bytetest_8f);
          carryQ.cq[162] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp316, carryQ.get_carry_in(162), r800_ffff_tmp317));
          r800_ffff_tmp318 = simd_and(r800_ffff_tmp317, bytetest_b5_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp318, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9a = simd_and(tmp71, tmp74);
          r800_ffff_tmp319 = simd_and(tmp71, tmp17);
          bytetest_9d_9f = simd_and(r800_ffff_tmp319, tmp5);
          r800_ffff_tmp320 = simd_and(r800_ffff_tmp280, bytetest_9a);
          carryQ.cq[163] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp320, carryQ.get_carry_in(163), r800_ffff_tmp321));
          r800_ffff_tmp322 = simd_and(r800_ffff_tmp321, bytetest_9d_9f);
          struct_Cn.cc = simd_or(r800_ffff_tmp322, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9b = simd_and(tmp71, tmp84);
          bytetest_b1_bf = simd_and(bytetest_b0_bf, tmp397);
          r800_ffff_tmp323 = simd_and(r800_ffff_tmp280, bytetest_9b);
          carryQ.cq[164] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp323, carryQ.get_carry_in(164), r800_ffff_tmp324));
          r800_ffff_tmp325 = simd_and(r800_ffff_tmp324, bytetest_b1_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp325, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9c = simd_and(tmp71, tmp180);
          bytetest_8d_8d = simd_and(tmp66, tmp97);
          r800_ffff_tmp326 = simd_and(r800_ffff_tmp280, bytetest_9c);
          carryQ.cq[165] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp326, carryQ.get_carry_in(165), r800_ffff_tmp327));
          r800_ffff_tmp328 = simd_and(r800_ffff_tmp327, bytetest_8d_8d);
          struct_Cn.cc = simd_or(r800_ffff_tmp328, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9c = simd_and(tmp71, tmp180);
          bytetest_95_9f = simd_and(tmp71, tmp155);
          r800_ffff_tmp329 = simd_and(r800_ffff_tmp327, bytetest_95_9f);
          struct_Cn.cc = simd_or(r800_ffff_tmp329, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9c = simd_and(tmp71, tmp180);
          bytetest_b7_bf = simd_and(bytetest_b0_bf, tmp228);
          r800_ffff_tmp330 = simd_and(r800_ffff_tmp327, bytetest_b7_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp330, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9d = simd_and(tmp71, tmp97);
          bytetest_94_9f = simd_and(tmp71, tmp4);
          r800_ffff_tmp331 = simd_and(r800_ffff_tmp280, bytetest_9d);
          carryQ.cq[166] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp331, carryQ.get_carry_in(166), r800_ffff_tmp332));
          r800_ffff_tmp333 = simd_and(r800_ffff_tmp332, bytetest_94_9f);
          struct_Cn.cc = simd_or(r800_ffff_tmp333, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9d = simd_and(tmp71, tmp97);
          bytetest_ad_ad = simd_and(tmp105, tmp97);
          r800_ffff_tmp334 = simd_and(r800_ffff_tmp332, bytetest_ad_ad);
          struct_Cn.cc = simd_or(r800_ffff_tmp334, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9d = simd_and(tmp71, tmp97);
          bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp11);
          r800_ffff_tmp335 = simd_and(r800_ffff_tmp332, bytetest_b1_b1);
          struct_Cn.cc = simd_or(r800_ffff_tmp335, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9d = simd_and(tmp71, tmp97);
          bytetest_b4_bf = simd_and(bytetest_b0_bf, tmp4);
          r800_ffff_tmp336 = simd_and(r800_ffff_tmp332, bytetest_b4_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp336, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9f = simd_and(tmp71, tmp99);
          bytetest_9e_9f = simd_and(tmp71, tmp18);
          r800_ffff_tmp337 = simd_and(r800_ffff_tmp280, bytetest_9f);
          carryQ.cq[167] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp337, carryQ.get_carry_in(167), r800_ffff_tmp338));
          r800_ffff_tmp339 = simd_and(r800_ffff_tmp338, bytetest_9e_9f);
          struct_Cn.cc = simd_or(r800_ffff_tmp339, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9f = simd_and(tmp71, tmp99);
          bytetest_aa_af = simd_and(r800_ffff_tmp140, tmp32);
          r800_ffff_tmp340 = simd_and(r800_ffff_tmp338, bytetest_aa_af);
          struct_Cn.cc = simd_or(r800_ffff_tmp340, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9f = simd_and(tmp71, tmp99);
          bytetest_ba_bf = simd_and(bytetest_b8_bf, tmp32);
          r800_ffff_tmp341 = simd_and(r800_ffff_tmp338, bytetest_ba_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp341, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a0 = simd_andc(tmp105, tmp6);
          bytetest_8f_8f = simd_and(tmp66, tmp99);
          r800_ffff_tmp342 = simd_and(r800_ffff_tmp280, bytetest_a0);
          carryQ.cq[168] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp342, carryQ.get_carry_in(168), r800_ffff_tmp343));
          r800_ffff_tmp344 = simd_and(r800_ffff_tmp343, bytetest_8f_8f);
          struct_Cn.cc = simd_or(r800_ffff_tmp344, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a0 = simd_andc(tmp105, tmp6);
          bytetest_9a_9f = simd_and(bytetest_98_9f, tmp32);
          r800_ffff_tmp345 = simd_and(r800_ffff_tmp343, bytetest_9a_9f);
          struct_Cn.cc = simd_or(r800_ffff_tmp345, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a1 = simd_and(tmp105, tmp11);
          bytetest_b8_bf = simd_and(bytetest_b0_bf, basis_bits.bit_4);
          r800_ffff_tmp346 = simd_and(r800_ffff_tmp280, bytetest_a1);
          carryQ.cq[169] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp346, carryQ.get_carry_in(169), r800_ffff_tmp347));
          r800_ffff_tmp348 = simd_and(r800_ffff_tmp347, bytetest_b8_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp348, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a2 = simd_and(tmp105, tmp91);
          bytetest_ab_af = simd_and(r800_ffff_tmp140, tmp106);
          r800_ffff_tmp349 = simd_and(r800_ffff_tmp280, bytetest_a2);
          carryQ.cq[170] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp349, carryQ.get_carry_in(170), r800_ffff_tmp350));
          r800_ffff_tmp351 = simd_and(r800_ffff_tmp350, bytetest_ab_af);
          struct_Cn.cc = simd_or(r800_ffff_tmp351, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a3 = simd_and(tmp105, tmp31);
          bytetest_b6_bf = simd_and(bytetest_b0_bf, tmp201);
          r800_ffff_tmp352 = simd_and(r800_ffff_tmp280, bytetest_a3);
          carryQ.cq[171] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp352, carryQ.get_carry_in(171), r800_ffff_tmp353));
          r800_ffff_tmp354 = simd_and(r800_ffff_tmp353, bytetest_b6_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp354, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a4 = simd_and(tmp105, tmp45);
          bytetest_9d_9f = simd_and(r800_ffff_tmp319, tmp5);
          r800_ffff_tmp355 = simd_and(r800_ffff_tmp280, bytetest_a4);
          carryQ.cq[172] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp355, carryQ.get_carry_in(172), r800_ffff_tmp356));
          r800_ffff_tmp357 = simd_and(r800_ffff_tmp356, bytetest_9d_9f);
          struct_Cn.cc = simd_or(r800_ffff_tmp357, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a4 = simd_and(tmp105, tmp45);
          bytetest_ac_af = simd_and(tmp105, tmp17);
          r800_ffff_tmp358 = simd_and(r800_ffff_tmp356, bytetest_ac_af);
          struct_Cn.cc = simd_or(r800_ffff_tmp358, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a4 = simd_and(tmp105, tmp45);
          bytetest_bc_bf = simd_and(bytetest_b0_bf, tmp17);
          r800_ffff_tmp359 = simd_and(r800_ffff_tmp356, bytetest_bc_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp359, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a5 = simd_and(tmp105, tmp46);
          r800_ffff_tmp360 = simd_andc(tmp66, tmp4);
          bytetest_81_83 = simd_and(r800_ffff_tmp360, tmp5);
          r800_ffff_tmp361 = simd_and(r800_ffff_tmp280, bytetest_a5);
          carryQ.cq[173] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp361, carryQ.get_carry_in(173), r800_ffff_tmp362));
          r800_ffff_tmp363 = simd_and(r800_ffff_tmp362, bytetest_81_83);
          struct_Cn.cc = simd_or(r800_ffff_tmp363, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a5 = simd_and(tmp105, tmp46);
          bytetest_ae_af = simd_and(tmp105, tmp18);
          r800_ffff_tmp364 = simd_and(r800_ffff_tmp362, bytetest_ae_af);
          struct_Cn.cc = simd_or(r800_ffff_tmp364, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a5 = simd_and(tmp105, tmp46);
          bytetest_b5_bf = simd_and(bytetest_b0_bf, tmp155);
          r800_ffff_tmp365 = simd_and(r800_ffff_tmp362, bytetest_b5_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp365, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a6 = simd_and(tmp105, tmp118);
          bytetest_ac_af = simd_and(tmp105, tmp17);
          r800_ffff_tmp366 = simd_and(r800_ffff_tmp280, bytetest_a6);
          carryQ.cq[174] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp366, carryQ.get_carry_in(174), r800_ffff_tmp367));
          r800_ffff_tmp368 = simd_and(r800_ffff_tmp367, bytetest_ac_af);
          struct_Cn.cc = simd_or(r800_ffff_tmp368, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a7 = simd_and(tmp105, tmp55);
          bytetest_8a_8f = simd_and(tmp258, tmp32);
          r800_ffff_tmp369 = simd_and(r800_ffff_tmp280, bytetest_a7);
          carryQ.cq[175] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp369, carryQ.get_carry_in(175), r800_ffff_tmp370));
          r800_ffff_tmp371 = simd_and(r800_ffff_tmp370, bytetest_8a_8f);
          struct_Cn.cc = simd_or(r800_ffff_tmp371, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a7 = simd_and(tmp105, tmp55);
          bytetest_9b_9d = simd_and(bytetest_98_9f, r800_ffff_tmp43);
          r800_ffff_tmp372 = simd_and(r800_ffff_tmp370, bytetest_9b_9d);
          struct_Cn.cc = simd_or(r800_ffff_tmp372, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a8 = simd_and(tmp105, tmp149);
          bytetest_9c_9d = simd_and(tmp71, tmp275);
          r800_ffff_tmp373 = simd_and(r800_ffff_tmp280, bytetest_a8);
          carryQ.cq[176] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp373, carryQ.get_carry_in(176), r800_ffff_tmp374));
          r800_ffff_tmp375 = simd_and(r800_ffff_tmp374, bytetest_9c_9d);
          struct_Cn.cc = simd_or(r800_ffff_tmp375, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a9 = simd_and(tmp105, tmp221);
          bytetest_9f_9f = simd_and(tmp71, tmp99);
          r800_ffff_tmp376 = simd_and(r800_ffff_tmp280, bytetest_a9);
          carryQ.cq[177] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp376, carryQ.get_carry_in(177), r800_ffff_tmp377));
          r800_ffff_tmp378 = simd_and(r800_ffff_tmp377, bytetest_9f_9f);
          struct_Cn.cc = simd_or(r800_ffff_tmp378, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a9 = simd_and(tmp105, tmp221);
          bytetest_bd_be = simd_and(bytetest_bc_bf, tmp297);
          r800_ffff_tmp379 = simd_and(r800_ffff_tmp377, bytetest_bd_be);
          struct_Cn.cc = simd_or(r800_ffff_tmp379, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_aa = simd_and(tmp105, tmp74);
          bytetest_8a_8f = simd_and(tmp258, tmp32);
          r800_ffff_tmp380 = simd_and(r800_ffff_tmp280, bytetest_aa);
          carryQ.cq[178] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp380, carryQ.get_carry_in(178), r800_ffff_tmp381));
          r800_ffff_tmp382 = simd_and(r800_ffff_tmp381, bytetest_8a_8f);
          struct_Cn.cc = simd_or(r800_ffff_tmp382, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_aa = simd_and(tmp105, tmp74);
          bytetest_9a_9f = simd_and(bytetest_98_9f, tmp32);
          r800_ffff_tmp383 = simd_and(r800_ffff_tmp381, bytetest_9a_9f);
          struct_Cn.cc = simd_or(r800_ffff_tmp383, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_ab = simd_and(tmp105, tmp84);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp384 = simd_and(r800_ffff_tmp280, bytetest_ab);
          carryQ.cq[179] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp384, carryQ.get_carry_in(179), r800_ffff_tmp385));
          r800_ffff_tmp386 = simd_and(r800_ffff_tmp385, bytetest_80_bf);
          bytetest_aa = simd_and(tmp105, tmp74);
          r800_ffff_tmp387 = simd_or(basis_bits.bit_3, tmp18);
          bytetest_ae_bf = simd_and(bytetest_a0_bf, r800_ffff_tmp387);
          r800_ffff_tmp388 = simd_and(r800_ffff_tmp381, bytetest_ae_bf);
          r800_ffff_tmp389 = simd_or(r800_ffff_tmp388, r800_ffff_tmp386);
          struct_Cn.cc = simd_or(r800_ffff_tmp389, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_ad = simd_and(tmp105, tmp97);
          bytetest_8c_8f = simd_and(tmp66, tmp17);
          r800_ffff_tmp390 = simd_and(r800_ffff_tmp280, bytetest_ad);
          carryQ.cq[180] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp390, carryQ.get_carry_in(180), r800_ffff_tmp391));
          r800_ffff_tmp392 = simd_and(r800_ffff_tmp391, bytetest_8c_8f);
          struct_Cn.cc = simd_or(r800_ffff_tmp392, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_ad = simd_and(tmp105, tmp97);
          bytetest_bd_bf = simd_and(bytetest_bc_bf, tmp5);
          r800_ffff_tmp393 = simd_and(r800_ffff_tmp391, bytetest_bd_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp393, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_af = simd_and(tmp105, tmp99);
          r800_ffff_tmp394 = simd_not(basis_bits.bit_5);
          r800_ffff_tmp395 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp394), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
          bytetest_b4_bb = simd_and(bytetest_b0_bf, r800_ffff_tmp395);
          r800_ffff_tmp396 = simd_and(r800_ffff_tmp280, bytetest_af);
          carryQ.cq[181] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp396, carryQ.get_carry_in(181), r800_ffff_tmp397));
          r800_ffff_tmp398 = simd_and(r800_ffff_tmp397, bytetest_b4_bb);
          struct_Cn.cc = simd_or(r800_ffff_tmp398, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_b0 = simd_andc(bytetest_b0_bf, tmp6);
          r800_ffff_tmp399 = simd_and(bytetest_b0_bf, tmp72);
          bytetest_b8_ba = simd_andc(r800_ffff_tmp399, tmp30);
          r800_ffff_tmp400 = simd_and(r800_ffff_tmp280, bytetest_b0);
          carryQ.cq[182] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp400, carryQ.get_carry_in(182), r800_ffff_tmp401));
          r800_ffff_tmp402 = simd_and(r800_ffff_tmp401, bytetest_b8_ba);
          struct_Cn.cc = simd_or(r800_ffff_tmp402, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_b1 = simd_and(bytetest_b0_bf, tmp11);
          bytetest_8a_8c = simd_and(tmp258, r800_ffff_tmp164);
          r800_ffff_tmp403 = simd_and(r800_ffff_tmp280, bytetest_b1);
          carryQ.cq[183] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp403, carryQ.get_carry_in(183), r800_ffff_tmp404));
          r800_ffff_tmp405 = simd_and(r800_ffff_tmp404, bytetest_8a_8c);
          struct_Cn.cc = simd_or(r800_ffff_tmp405, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp91);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp406 = simd_and(r800_ffff_tmp280, bytetest_b2);
          carryQ.cq[184] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp406, carryQ.get_carry_in(184), r800_ffff_tmp407));
          r800_ffff_tmp408 = simd_and(r800_ffff_tmp407, bytetest_80_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp408, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp31);
          bytetest_88_8f = simd_and(tmp66, basis_bits.bit_4);
          r800_ffff_tmp409 = simd_and(r800_ffff_tmp280, bytetest_b3);
          carryQ.cq[185] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp409, carryQ.get_carry_in(185), r800_ffff_tmp410));
          r800_ffff_tmp411 = simd_and(r800_ffff_tmp410, bytetest_88_8f);
          struct_Cn.cc = simd_or(r800_ffff_tmp411, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp31);
          bytetest_b7_bf = simd_and(bytetest_b0_bf, tmp228);
          r800_ffff_tmp412 = simd_and(r800_ffff_tmp410, bytetest_b7_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp412, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_b7 = simd_and(bytetest_b0_bf, tmp55);
          r800_ffff_tmp413 = simd_or(simd_and(basis_bits.bit_3, tmp143), simd_andc(tmp228, basis_bits.bit_3));
          bytetest_a7_bb = simd_and(bytetest_a0_bf, r800_ffff_tmp413);
          r800_ffff_tmp414 = simd_and(r800_ffff_tmp280, bytetest_b7);
          carryQ.cq[186] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp414, carryQ.get_carry_in(186), r800_ffff_tmp415));
          r800_ffff_tmp416 = simd_and(r800_ffff_tmp415, bytetest_a7_bb);
          struct_Cn.cc = simd_or(r800_ffff_tmp416, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_bc = simd_and(bytetest_b0_bf, tmp180);
          bytetest_96_97 = simd_and(tmp71, tmp271);
          r800_ffff_tmp417 = simd_and(r800_ffff_tmp280, bytetest_bc);
          carryQ.cq[187] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp417, carryQ.get_carry_in(187), r800_ffff_tmp418));
          r800_ffff_tmp419 = simd_and(r800_ffff_tmp418, bytetest_96_97);
          struct_Cn.cc = simd_or(r800_ffff_tmp419, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_bc = simd_and(bytetest_b0_bf, tmp180);
          bytetest_9e_9f = simd_and(tmp71, tmp18);
          r800_ffff_tmp420 = simd_and(r800_ffff_tmp418, bytetest_9e_9f);
          struct_Cn.cc = simd_or(r800_ffff_tmp420, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_bd = simd_and(bytetest_b0_bf, tmp97);
          bytetest_86_87 = simd_and(tmp66, tmp271);
          r800_ffff_tmp421 = simd_and(r800_ffff_tmp280, bytetest_bd);
          carryQ.cq[188] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp421, carryQ.get_carry_in(188), r800_ffff_tmp422));
          r800_ffff_tmp423 = simd_and(r800_ffff_tmp422, bytetest_86_87);
          struct_Cn.cc = simd_or(r800_ffff_tmp423, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_bd = simd_and(bytetest_b0_bf, tmp97);
          bytetest_8e_8f = simd_and(tmp66, tmp18);
          r800_ffff_tmp424 = simd_and(r800_ffff_tmp422, bytetest_8e_8f);
          struct_Cn.cc = simd_or(r800_ffff_tmp424, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_bd = simd_and(bytetest_b0_bf, tmp97);
          bytetest_98_98 = simd_and(tmp71, tmp149);
          r800_ffff_tmp425 = simd_and(r800_ffff_tmp422, bytetest_98_98);
          struct_Cn.cc = simd_or(r800_ffff_tmp425, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_bd = simd_and(bytetest_b0_bf, tmp97);
          bytetest_9a_9a = simd_and(tmp71, tmp74);
          r800_ffff_tmp426 = simd_and(r800_ffff_tmp422, bytetest_9a_9a);
          struct_Cn.cc = simd_or(r800_ffff_tmp426, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_bd = simd_and(bytetest_b0_bf, tmp97);
          bytetest_9c_9c = simd_and(tmp71, tmp180);
          r800_ffff_tmp427 = simd_and(r800_ffff_tmp422, bytetest_9c_9c);
          struct_Cn.cc = simd_or(r800_ffff_tmp427, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_bd = simd_and(bytetest_b0_bf, tmp97);
          bytetest_9e_9e = simd_and(tmp71, tmp159);
          r800_ffff_tmp428 = simd_and(r800_ffff_tmp422, bytetest_9e_9e);
          struct_Cn.cc = simd_or(r800_ffff_tmp428, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_bd = simd_and(bytetest_b0_bf, tmp97);
          bytetest_be_bf = simd_and(bytetest_b0_bf, tmp18);
          r800_ffff_tmp429 = simd_and(r800_ffff_tmp422, bytetest_be_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp429, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_be = simd_and(bytetest_b0_bf, tmp159);
          bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp46);
          r800_ffff_tmp430 = simd_and(r800_ffff_tmp280, bytetest_be);
          carryQ.cq[189] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp430, carryQ.get_carry_in(189), r800_ffff_tmp431));
          r800_ffff_tmp432 = simd_and(r800_ffff_tmp431, bytetest_b5_b5);
          struct_Cn.cc = simd_or(r800_ffff_tmp432, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp99);
          bytetest_85_85 = simd_and(tmp66, tmp46);
          r800_ffff_tmp433 = simd_and(r800_ffff_tmp280, bytetest_bf);
          carryQ.cq[190] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp433, carryQ.get_carry_in(190), r800_ffff_tmp434));
          r800_ffff_tmp435 = simd_and(r800_ffff_tmp434, bytetest_85_85);
          struct_Cn.cc = simd_or(r800_ffff_tmp435, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp99);
          bytetest_94_95 = simd_and(tmp71, tmp124);
          r800_ffff_tmp436 = simd_and(r800_ffff_tmp434, bytetest_94_95);
          struct_Cn.cc = simd_or(r800_ffff_tmp436, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp99);
          bytetest_9c_9c = simd_and(tmp71, tmp180);
          r800_ffff_tmp437 = simd_and(r800_ffff_tmp434, bytetest_9c_9c);
          struct_Cn.cc = simd_or(r800_ffff_tmp437, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp99);
          bytetest_b0_b1 = simd_andc(bytetest_b0_bf, tmp15);
          r800_ffff_tmp438 = simd_and(r800_ffff_tmp434, bytetest_b0_b1);
          struct_Cn.cc = simd_or(r800_ffff_tmp438, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp99);
          bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp46);
          r800_ffff_tmp439 = simd_and(r800_ffff_tmp434, bytetest_b5_b5);
          struct_Cn.cc = simd_or(r800_ffff_tmp439, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp99);
          bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp99);
          r800_ffff_tmp440 = simd_and(r800_ffff_tmp434, bytetest_bf_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp440, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_81 = simd_and(tmp66, tmp11);
          bytetest_a5_a5 = simd_and(tmp105, tmp46);
          r800_ffff_tmp441 = simd_and(tmp21, bytetest_e2);
          carryQ.cq[191] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp441, carryQ.get_carry_in(191), r800_ffff_tmp442));
          r800_ffff_tmp443 = simd_and(r800_ffff_tmp442, bytetest_81);
          carryQ.cq[192] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp443, carryQ.get_carry_in(192), r800_ffff_tmp444));
          r800_ffff_tmp445 = simd_and(r800_ffff_tmp444, bytetest_a5_a5);
          struct_Cn.cc = simd_or(r800_ffff_tmp445, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_81 = simd_and(tmp66, tmp11);
          bytetest_b2_b3 = simd_and(bytetest_b0_bf, tmp518);
          r800_ffff_tmp446 = simd_and(r800_ffff_tmp444, bytetest_b2_b3);
          struct_Cn.cc = simd_or(r800_ffff_tmp446, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_82 = simd_and(tmp66, tmp91);
          bytetest_8f_8f = simd_and(tmp66, tmp99);
          r800_ffff_tmp447 = simd_and(r800_ffff_tmp442, bytetest_82);
          carryQ.cq[193] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp447, carryQ.get_carry_in(193), r800_ffff_tmp448));
          r800_ffff_tmp449 = simd_and(r800_ffff_tmp448, bytetest_8f_8f);
          struct_Cn.cc = simd_or(r800_ffff_tmp449, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_82 = simd_and(tmp66, tmp91);
          bytetest_9d_9f = simd_and(r800_ffff_tmp319, tmp5);
          r800_ffff_tmp450 = simd_and(r800_ffff_tmp448, bytetest_9d_9f);
          struct_Cn.cc = simd_or(r800_ffff_tmp450, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_83 = simd_and(tmp66, tmp31);
          bytetest_80_8f = simd_andc(bytetest_80_bf, tmp12);
          r800_ffff_tmp451 = simd_and(r800_ffff_tmp442, bytetest_83);
          carryQ.cq[194] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp451, carryQ.get_carry_in(194), r800_ffff_tmp452));
          r800_ffff_tmp453 = simd_and(r800_ffff_tmp452, bytetest_80_8f);
          bytetest_82 = simd_and(bytetest_80_8f, tmp91);
          bytetest_bb_bf = simd_and(bytetest_b8_bf, tmp106);
          r800_ffff_tmp454 = simd_and(r800_ffff_tmp448, bytetest_bb_bf);
          r800_ffff_tmp455 = simd_or(r800_ffff_tmp454, r800_ffff_tmp453);
          struct_Cn.cc = simd_or(r800_ffff_tmp455, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_83 = simd_and(bytetest_80_8f, tmp31);
          bytetest_b1_bf = simd_and(bytetest_b0_bf, tmp397);
          r800_ffff_tmp456 = simd_and(r800_ffff_tmp452, bytetest_b1_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp456, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_86 = simd_and(bytetest_80_8f, tmp118);
          r800_ffff_tmp457 = simd_and(bytetest_80_8f, basis_bits.bit_4);
          bytetest_8a_8f = simd_and(r800_ffff_tmp457, tmp32);
          r800_ffff_tmp458 = simd_and(r800_ffff_tmp442, bytetest_86);
          carryQ.cq[195] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp458, carryQ.get_carry_in(195), r800_ffff_tmp459));
          r800_ffff_tmp460 = simd_and(r800_ffff_tmp459, bytetest_8a_8f);
          struct_Cn.cc = simd_or(r800_ffff_tmp460, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_8f = simd_and(bytetest_80_8f, tmp99);
          bytetest_b4_bf = simd_and(bytetest_b0_bf, tmp4);
          r800_ffff_tmp461 = simd_and(r800_ffff_tmp442, bytetest_8f);
          carryQ.cq[196] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp461, carryQ.get_carry_in(196), r800_ffff_tmp462));
          r800_ffff_tmp463 = simd_and(r800_ffff_tmp462, bytetest_b4_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp463, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_90 = simd_andc(tmp71, tmp6);
          r800_ffff_tmp464 = simd_or(basis_bits.bit_3, tmp228);
          bytetest_a7_bf = simd_and(bytetest_a0_bf, r800_ffff_tmp464);
          r800_ffff_tmp465 = simd_and(r800_ffff_tmp442, bytetest_90);
          carryQ.cq[197] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp465, carryQ.get_carry_in(197), r800_ffff_tmp466));
          r800_ffff_tmp467 = simd_and(r800_ffff_tmp466, bytetest_a7_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp467, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_91 = simd_and(tmp71, tmp11);
          bytetest_8b_9f = simd_and(bytetest_80_9f, tmp411);
          r800_ffff_tmp468 = simd_and(r800_ffff_tmp442, bytetest_91);
          carryQ.cq[198] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp468, carryQ.get_carry_in(198), r800_ffff_tmp469));
          r800_ffff_tmp470 = simd_and(r800_ffff_tmp469, bytetest_8b_9f);
          struct_Cn.cc = simd_or(r800_ffff_tmp470, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_9c = simd_and(tmp71, tmp180);
          bytetest_80_80 = simd_andc(bytetest_80_8f, tmp6);
          r800_ffff_tmp471 = simd_and(r800_ffff_tmp442, bytetest_9c);
          carryQ.cq[199] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp471, carryQ.get_carry_in(199), r800_ffff_tmp472));
          r800_ffff_tmp473 = simd_and(r800_ffff_tmp472, bytetest_80_80);
          struct_Cn.cc = simd_or(r800_ffff_tmp473, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_ad = simd_and(tmp105, tmp97);
          r800_ffff_tmp474 = simd_and(bytetest_80_8f, tmp17);
          bytetest_8d_8f = simd_and(r800_ffff_tmp474, tmp5);
          r800_ffff_tmp475 = simd_and(r800_ffff_tmp442, bytetest_ad);
          carryQ.cq[200] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp475, carryQ.get_carry_in(200), r800_ffff_tmp476));
          r800_ffff_tmp477 = simd_and(r800_ffff_tmp476, bytetest_8d_8f);
          struct_Cn.cc = simd_or(r800_ffff_tmp477, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_ae_af = simd_and(tmp105, tmp18);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp478 = simd_and(r800_ffff_tmp442, bytetest_ae_af);
          carryQ.cq[201] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp478, carryQ.get_carry_in(201), r800_ffff_tmp479));
          r800_ffff_tmp480 = simd_and(r800_ffff_tmp479, bytetest_80_bf);
          bytetest_ad = simd_and(tmp105, tmp97);
          bytetest_9a_bf = simd_and(bytetest_80_bf, tmp68);
          r800_ffff_tmp481 = simd_and(r800_ffff_tmp476, bytetest_9a_bf);
          r800_ffff_tmp482 = simd_or(r800_ffff_tmp481, r800_ffff_tmp480);
          struct_Cn.cc = simd_or(r800_ffff_tmp482, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_b0 = simd_andc(bytetest_b0_bf, tmp6);
          bytetest_af_af = simd_and(tmp105, tmp99);
          r800_ffff_tmp483 = simd_and(r800_ffff_tmp442, bytetest_b0);
          carryQ.cq[202] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp483, carryQ.get_carry_in(202), r800_ffff_tmp484));
          r800_ffff_tmp485 = simd_and(r800_ffff_tmp484, bytetest_af_af);
          struct_Cn.cc = simd_or(r800_ffff_tmp485, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_b1 = simd_and(bytetest_b0_bf, tmp11);
          bytetest_9f_9f = simd_and(tmp71, tmp99);
          r800_ffff_tmp486 = simd_and(r800_ffff_tmp442, bytetest_b1);
          carryQ.cq[203] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp486, carryQ.get_carry_in(203), r800_ffff_tmp487));
          r800_ffff_tmp488 = simd_and(r800_ffff_tmp487, bytetest_9f_9f);
          struct_Cn.cc = simd_or(r800_ffff_tmp488, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp31);
          r800_ffff_tmp489 = simd_or(simd_and(basis_bits.bit_4, tmp207), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
          bytetest_b4_b8 = simd_and(bytetest_b0_bf, r800_ffff_tmp489);
          r800_ffff_tmp490 = simd_and(r800_ffff_tmp442, bytetest_b3);
          carryQ.cq[204] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp490, carryQ.get_carry_in(204), r800_ffff_tmp491));
          r800_ffff_tmp492 = simd_and(r800_ffff_tmp491, bytetest_b4_b8);
          struct_Cn.cc = simd_or(r800_ffff_tmp492, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_b4 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_a6_a6 = simd_and(tmp105, tmp118);
          r800_ffff_tmp493 = simd_and(r800_ffff_tmp442, bytetest_b4);
          carryQ.cq[205] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp493, carryQ.get_carry_in(205), r800_ffff_tmp494));
          r800_ffff_tmp495 = simd_and(r800_ffff_tmp494, bytetest_a6_a6);
          struct_Cn.cc = simd_or(r800_ffff_tmp495, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_b4 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_a8_ac = simd_andc(r800_ffff_tmp140, tmp154);
          r800_ffff_tmp496 = simd_and(r800_ffff_tmp494, bytetest_a8_ac);
          struct_Cn.cc = simd_or(r800_ffff_tmp496, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_b4 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_ae_af = simd_and(tmp105, tmp18);
          r800_ffff_tmp497 = simd_and(r800_ffff_tmp494, bytetest_ae_af);
          struct_Cn.cc = simd_or(r800_ffff_tmp497, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_b5 = simd_and(bytetest_b0_bf, tmp46);
          bytetest_a8_ae = simd_andc(r800_ffff_tmp140, tmp160);
          r800_ffff_tmp498 = simd_and(r800_ffff_tmp442, bytetest_b5);
          carryQ.cq[206] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp498, carryQ.get_carry_in(206), r800_ffff_tmp499));
          r800_ffff_tmp500 = simd_and(r800_ffff_tmp499, bytetest_a8_ae);
          struct_Cn.cc = simd_or(r800_ffff_tmp500, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_b5 = simd_and(bytetest_b0_bf, tmp46);
          r800_ffff_tmp501 = simd_not(tmp160);
          r800_ffff_tmp502 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp501), simd_andc(tmp40, basis_bits.bit_4));
          bytetest_b1_be = simd_and(bytetest_b0_bf, r800_ffff_tmp502);
          r800_ffff_tmp503 = simd_and(r800_ffff_tmp499, bytetest_b1_be);
          struct_Cn.cc = simd_or(r800_ffff_tmp503, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_b6 = simd_and(bytetest_b0_bf, tmp118);
          bytetest_97_9f = simd_and(tmp71, tmp228);
          r800_ffff_tmp504 = simd_and(r800_ffff_tmp442, bytetest_b6);
          carryQ.cq[207] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp504, carryQ.get_carry_in(207), r800_ffff_tmp505));
          r800_ffff_tmp506 = simd_and(r800_ffff_tmp505, bytetest_97_9f);
          struct_Cn.cc = simd_or(r800_ffff_tmp506, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_b6 = simd_and(bytetest_b0_bf, tmp118);
          bytetest_a7_a7 = simd_and(tmp105, tmp55);
          r800_ffff_tmp507 = simd_and(r800_ffff_tmp505, bytetest_a7_a7);
          struct_Cn.cc = simd_or(r800_ffff_tmp507, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_b6 = simd_and(bytetest_b0_bf, tmp118);
          bytetest_af_af = simd_and(tmp105, tmp99);
          r800_ffff_tmp508 = simd_and(r800_ffff_tmp505, bytetest_af_af);
          struct_Cn.cc = simd_or(r800_ffff_tmp508, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_b6 = simd_and(bytetest_b0_bf, tmp118);
          bytetest_b7_b7 = simd_and(bytetest_b0_bf, tmp55);
          r800_ffff_tmp509 = simd_and(r800_ffff_tmp505, bytetest_b7_b7);
          struct_Cn.cc = simd_or(r800_ffff_tmp509, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_b6 = simd_and(bytetest_b0_bf, tmp118);
          bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp99);
          r800_ffff_tmp510 = simd_and(r800_ffff_tmp505, bytetest_bf_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp510, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_b7 = simd_and(bytetest_b0_bf, tmp55);
          bytetest_87_87 = simd_and(bytetest_80_8f, tmp55);
          r800_ffff_tmp511 = simd_and(r800_ffff_tmp442, bytetest_b7);
          carryQ.cq[208] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp511, carryQ.get_carry_in(208), r800_ffff_tmp512));
          r800_ffff_tmp513 = simd_and(r800_ffff_tmp512, bytetest_87_87);
          struct_Cn.cc = simd_or(r800_ffff_tmp513, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_b7 = simd_and(bytetest_b0_bf, tmp55);
          bytetest_8f_8f = simd_and(bytetest_80_8f, tmp99);
          r800_ffff_tmp514 = simd_and(r800_ffff_tmp512, bytetest_8f_8f);
          struct_Cn.cc = simd_or(r800_ffff_tmp514, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_b7 = simd_and(bytetest_b0_bf, tmp55);
          bytetest_97_97 = simd_and(tmp71, tmp55);
          r800_ffff_tmp515 = simd_and(r800_ffff_tmp512, bytetest_97_97);
          struct_Cn.cc = simd_or(r800_ffff_tmp515, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_b7 = simd_and(bytetest_b0_bf, tmp55);
          bytetest_9f_9f = simd_and(tmp71, tmp99);
          r800_ffff_tmp516 = simd_and(r800_ffff_tmp512, bytetest_9f_9f);
          struct_Cn.cc = simd_or(r800_ffff_tmp516, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp221);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp517 = simd_and(r800_ffff_tmp442, bytetest_b9);
          carryQ.cq[209] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp517, carryQ.get_carry_in(209), r800_ffff_tmp518));
          r800_ffff_tmp519 = simd_and(r800_ffff_tmp518, bytetest_80_bf);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp149);
          bytetest_bc_bf = simd_and(bytetest_b0_bf, tmp17);
          r800_ffff_tmp520 = simd_and(r800_ffff_tmp442, bytetest_b8);
          carryQ.cq[210] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp520, carryQ.get_carry_in(210), r800_ffff_tmp521));
          r800_ffff_tmp522 = simd_and(r800_ffff_tmp521, bytetest_bc_bf);
          r800_ffff_tmp523 = simd_or(r800_ffff_tmp522, r800_ffff_tmp519);
          struct_Cn.cc = simd_or(r800_ffff_tmp523, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp74);
          bytetest_9a_9a = simd_and(tmp71, tmp74);
          r800_ffff_tmp524 = simd_and(r800_ffff_tmp442, bytetest_ba);
          carryQ.cq[211] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp524, carryQ.get_carry_in(211), r800_ffff_tmp525));
          r800_ffff_tmp526 = simd_and(r800_ffff_tmp525, bytetest_9a_9a);
          struct_Cn.cc = simd_or(r800_ffff_tmp526, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp84);
          bytetest_b4_bf = simd_and(bytetest_b0_bf, tmp4);
          r800_ffff_tmp527 = simd_and(r800_ffff_tmp442, bytetest_bb);
          carryQ.cq[212] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp527, carryQ.get_carry_in(212), r800_ffff_tmp528));
          r800_ffff_tmp529 = simd_and(r800_ffff_tmp528, bytetest_b4_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp529, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp99);
          r800_ffff_tmp530 = simd_not(basis_bits.bit_3);
          r800_ffff_tmp531 = simd_and(basis_bits.bit_3, tmp201);
          r800_ffff_tmp532 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp530), simd_andc(r800_ffff_tmp531, basis_bits.bit_2));
          bytetest_96_af = simd_and(bytetest_80_bf, r800_ffff_tmp532);
          r800_ffff_tmp533 = simd_and(r800_ffff_tmp442, bytetest_bf);
          carryQ.cq[213] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp533, carryQ.get_carry_in(213), r800_ffff_tmp534));
          r800_ffff_tmp535 = simd_and(r800_ffff_tmp534, bytetest_96_af);
          struct_Cn.cc = simd_or(r800_ffff_tmp535, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp99);
          bytetest_bc_bf = simd_and(bytetest_b0_bf, tmp17);
          r800_ffff_tmp536 = simd_and(r800_ffff_tmp534, bytetest_bc_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp536, struct_Cn.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp31);
          bytetest_81 = simd_and(bytetest_80_8f, tmp11);
          bytetest_80_80 = simd_andc(bytetest_80_8f, tmp6);
          r800_ffff_tmp537 = simd_and(tmp21, bytetest_e3);
          carryQ.cq[214] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp537, carryQ.get_carry_in(214), r800_ffff_tmp538));
          r800_ffff_tmp539 = simd_and(r800_ffff_tmp538, bytetest_81);
          carryQ.cq[215] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp539, carryQ.get_carry_in(215), r800_ffff_tmp540));
          r800_ffff_tmp541 = simd_and(r800_ffff_tmp540, bytetest_80_80);
          struct_Cn.cc = simd_or(r800_ffff_tmp541, struct_Cn.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp31);
          bytetest_82 = simd_and(bytetest_80_8f, tmp91);
          bytetest_97_98 = simd_and(tmp71, tmp208);
          r800_ffff_tmp542 = simd_and(r800_ffff_tmp538, bytetest_82);
          carryQ.cq[216] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp542, carryQ.get_carry_in(216), r800_ffff_tmp543));
          r800_ffff_tmp544 = simd_and(r800_ffff_tmp543, bytetest_97_98);
          struct_Cn.cc = simd_or(r800_ffff_tmp544, struct_Cn.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp31);
          bytetest_84 = simd_and(bytetest_80_8f, tmp45);
          r800_ffff_tmp545 = simd_andc(bytetest_80_8f, basis_bits.bit_4);
          bytetest_80_84 = simd_andc(r800_ffff_tmp545, tmp154);
          r800_ffff_tmp546 = simd_and(r800_ffff_tmp538, bytetest_84);
          carryQ.cq[217] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp546, carryQ.get_carry_in(217), r800_ffff_tmp547));
          r800_ffff_tmp548 = simd_and(r800_ffff_tmp547, bytetest_80_84);
          struct_Cn.cc = simd_or(r800_ffff_tmp548, struct_Cn.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp31);
          bytetest_84 = simd_and(bytetest_80_8f, tmp45);
          bytetest_ae_b0 = simd_and(bytetest_a0_bf, r800_ffff_tmp76);
          r800_ffff_tmp549 = simd_and(r800_ffff_tmp547, bytetest_ae_b0);
          struct_Cn.cc = simd_or(r800_ffff_tmp549, struct_Cn.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp31);
          bytetest_86 = simd_and(bytetest_80_8f, tmp118);
          bytetest_8f_8f = simd_and(bytetest_80_8f, tmp99);
          r800_ffff_tmp550 = simd_and(r800_ffff_tmp538, bytetest_86);
          carryQ.cq[218] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp550, carryQ.get_carry_in(218), r800_ffff_tmp551));
          r800_ffff_tmp552 = simd_and(r800_ffff_tmp551, bytetest_8f_8f);
          struct_Cn.cc = simd_or(r800_ffff_tmp552, struct_Cn.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp31);
          bytetest_86 = simd_and(bytetest_80_8f, tmp118);
          bytetest_bb_bf = simd_and(bytetest_b8_bf, tmp106);
          r800_ffff_tmp553 = simd_and(r800_ffff_tmp551, bytetest_bb_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp553, struct_Cn.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp31);
          bytetest_87 = simd_and(bytetest_80_8f, tmp55);
          bytetest_a4_af = simd_and(tmp105, tmp4);
          r800_ffff_tmp554 = simd_and(r800_ffff_tmp538, bytetest_87);
          carryQ.cq[219] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp554, carryQ.get_carry_in(219), r800_ffff_tmp555));
          r800_ffff_tmp556 = simd_and(r800_ffff_tmp555, bytetest_a4_af);
          struct_Cn.cc = simd_or(r800_ffff_tmp556, struct_Cn.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp31);
          bytetest_88 = simd_and(bytetest_80_8f, tmp149);
          bytetest_9f_9f = simd_and(tmp71, tmp99);
          r800_ffff_tmp557 = simd_and(r800_ffff_tmp538, bytetest_88);
          carryQ.cq[220] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp557, carryQ.get_carry_in(220), r800_ffff_tmp558));
          r800_ffff_tmp559 = simd_and(r800_ffff_tmp558, bytetest_9f_9f);
          struct_Cn.cc = simd_or(r800_ffff_tmp559, struct_Cn.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp31);
          bytetest_8b = simd_and(bytetest_80_8f, tmp84);
          bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp99);
          r800_ffff_tmp560 = simd_and(r800_ffff_tmp538, bytetest_8b);
          carryQ.cq[221] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp560, carryQ.get_carry_in(221), r800_ffff_tmp561));
          r800_ffff_tmp562 = simd_and(r800_ffff_tmp561, bytetest_bf_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp562, struct_Cn.cc);
          bytetest_e4 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b6 = simd_and(bytetest_b0_bf, tmp118);
          bytetest_b6_bf = simd_and(bytetest_b0_bf, tmp201);
          r800_ffff_tmp563 = simd_and(tmp21, bytetest_e4);
          carryQ.cq[222] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp563, carryQ.get_carry_in(222), r800_ffff_tmp564));
          r800_ffff_tmp565 = simd_and(r800_ffff_tmp564, bytetest_b6);
          carryQ.cq[223] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp565, carryQ.get_carry_in(223), r800_ffff_tmp566));
          r800_ffff_tmp567 = simd_and(r800_ffff_tmp566, bytetest_b6_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp567, struct_Cn.cc);
          bytetest_e9 = simd_and(r800_ffff_tmp1, tmp221);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp99);
          r800_ffff_tmp568 = simd_or(basis_bits.bit_2, r800_ffff_tmp24);
          bytetest_8d_bf = simd_and(bytetest_80_bf, r800_ffff_tmp568);
          r800_ffff_tmp569 = simd_and(tmp21, bytetest_e9);
          carryQ.cq[224] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp569, carryQ.get_carry_in(224), r800_ffff_tmp570));
          r800_ffff_tmp571 = simd_and(r800_ffff_tmp570, bytetest_bf);
          carryQ.cq[225] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp571, carryQ.get_carry_in(225), r800_ffff_tmp572));
          r800_ffff_tmp573 = simd_and(r800_ffff_tmp572, bytetest_8d_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp573, struct_Cn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_92 = simd_and(tmp71, tmp91);
          bytetest_8d_8f = simd_and(r800_ffff_tmp474, tmp5);
          r800_ffff_tmp574 = simd_and(tmp21, bytetest_ea);
          carryQ.cq[226] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp574, carryQ.get_carry_in(226), r800_ffff_tmp575));
          r800_ffff_tmp576 = simd_and(r800_ffff_tmp575, bytetest_92);
          carryQ.cq[227] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp576, carryQ.get_carry_in(227), r800_ffff_tmp577));
          r800_ffff_tmp578 = simd_and(r800_ffff_tmp577, bytetest_8d_8f);
          struct_Cn.cc = simd_or(r800_ffff_tmp578, struct_Cn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_93 = simd_and(tmp71, tmp31);
          bytetest_87_8f = simd_and(bytetest_80_8f, tmp228);
          r800_ffff_tmp579 = simd_and(r800_ffff_tmp575, bytetest_93);
          carryQ.cq[228] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp579, carryQ.get_carry_in(228), r800_ffff_tmp580));
          r800_ffff_tmp581 = simd_and(r800_ffff_tmp580, bytetest_87_8f);
          struct_Cn.cc = simd_or(r800_ffff_tmp581, struct_Cn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_98 = simd_and(tmp71, tmp149);
          r800_ffff_tmp582 = simd_or(basis_bits.bit_3, tmp17);
          bytetest_ac_bf = simd_and(bytetest_a0_bf, r800_ffff_tmp582);
          r800_ffff_tmp583 = simd_and(r800_ffff_tmp575, bytetest_98);
          carryQ.cq[229] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp583, carryQ.get_carry_in(229), r800_ffff_tmp584));
          r800_ffff_tmp585 = simd_and(r800_ffff_tmp584, bytetest_ac_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp585, struct_Cn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_9a = simd_and(tmp71, tmp74);
          bytetest_98_9e = simd_andc(bytetest_98_9f, tmp160);
          r800_ffff_tmp586 = simd_and(r800_ffff_tmp575, bytetest_9a);
          carryQ.cq[230] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp586, carryQ.get_carry_in(230), r800_ffff_tmp587));
          r800_ffff_tmp588 = simd_and(r800_ffff_tmp587, bytetest_98_9e);
          struct_Cn.cc = simd_or(r800_ffff_tmp588, struct_Cn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_9b = simd_and(tmp71, tmp84);
          bytetest_b8_bf = simd_and(bytetest_b0_bf, basis_bits.bit_4);
          r800_ffff_tmp589 = simd_and(r800_ffff_tmp575, bytetest_9b);
          carryQ.cq[231] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp589, carryQ.get_carry_in(231), r800_ffff_tmp590));
          r800_ffff_tmp591 = simd_and(r800_ffff_tmp590, bytetest_b8_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp591, struct_Cn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_9e = simd_and(tmp71, tmp159);
          bytetest_8f_8f = simd_and(bytetest_80_8f, tmp99);
          r800_ffff_tmp592 = simd_and(r800_ffff_tmp575, bytetest_9e);
          carryQ.cq[232] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp592, carryQ.get_carry_in(232), r800_ffff_tmp593));
          r800_ffff_tmp594 = simd_and(r800_ffff_tmp593, bytetest_8f_8f);
          struct_Cn.cc = simd_or(r800_ffff_tmp594, struct_Cn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_9e = simd_and(tmp71, tmp159);
          bytetest_94_9f = simd_and(tmp71, tmp4);
          r800_ffff_tmp595 = simd_and(r800_ffff_tmp593, bytetest_94_9f);
          struct_Cn.cc = simd_or(r800_ffff_tmp595, struct_Cn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_9f = simd_and(tmp71, tmp99);
          bytetest_80_b7 = simd_andc(bytetest_80_bf, tmp280);
          r800_ffff_tmp596 = simd_and(r800_ffff_tmp575, bytetest_9f);
          carryQ.cq[233] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp596, carryQ.get_carry_in(233), r800_ffff_tmp597));
          r800_ffff_tmp598 = simd_and(r800_ffff_tmp597, bytetest_80_b7);
          bytetest_9e = simd_and(tmp71, tmp159);
          bytetest_ab_bf = simd_and(bytetest_a0_bf, tmp411);
          r800_ffff_tmp599 = simd_and(r800_ffff_tmp593, bytetest_ab_bf);
          r800_ffff_tmp600 = simd_or(r800_ffff_tmp599, r800_ffff_tmp598);
          struct_Cn.cc = simd_or(r800_ffff_tmp600, struct_Cn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_a0 = simd_andc(tmp105, tmp6);
          bytetest_ac_af = simd_and(tmp105, tmp17);
          r800_ffff_tmp601 = simd_and(r800_ffff_tmp575, bytetest_a0);
          carryQ.cq[234] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp601, carryQ.get_carry_in(234), r800_ffff_tmp602));
          r800_ffff_tmp603 = simd_and(r800_ffff_tmp602, bytetest_ac_af);
          struct_Cn.cc = simd_or(r800_ffff_tmp603, struct_Cn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_a0 = simd_andc(tmp105, tmp6);
          bytetest_ba_bf = simd_and(bytetest_b8_bf, tmp32);
          r800_ffff_tmp604 = simd_and(r800_ffff_tmp602, bytetest_ba_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp604, struct_Cn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_a1 = simd_and(tmp105, tmp11);
          bytetest_b8_bf = simd_and(bytetest_b0_bf, basis_bits.bit_4);
          r800_ffff_tmp605 = simd_and(r800_ffff_tmp575, bytetest_a1);
          carryQ.cq[235] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp605, carryQ.get_carry_in(235), r800_ffff_tmp606));
          r800_ffff_tmp607 = simd_and(r800_ffff_tmp606, bytetest_b8_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp607, struct_Cn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_a3 = simd_and(tmp105, tmp31);
          r800_ffff_tmp608 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp192), simd_andc(tmp154, basis_bits.bit_4));
          bytetest_85_8d = simd_and(bytetest_80_8f, r800_ffff_tmp608);
          r800_ffff_tmp609 = simd_and(r800_ffff_tmp575, bytetest_a3);
          carryQ.cq[236] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp609, carryQ.get_carry_in(236), r800_ffff_tmp610));
          r800_ffff_tmp611 = simd_and(r800_ffff_tmp610, bytetest_85_8d);
          struct_Cn.cc = simd_or(r800_ffff_tmp611, struct_Cn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_a3 = simd_and(tmp105, tmp31);
          bytetest_9a_9f = simd_and(bytetest_98_9f, tmp32);
          r800_ffff_tmp612 = simd_and(r800_ffff_tmp610, bytetest_9a_9f);
          struct_Cn.cc = simd_or(r800_ffff_tmp612, struct_Cn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_a3 = simd_and(tmp105, tmp31);
          bytetest_bc_bf = simd_and(bytetest_b0_bf, tmp17);
          r800_ffff_tmp613 = simd_and(r800_ffff_tmp610, bytetest_bc_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp613, struct_Cn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_a5 = simd_and(tmp105, tmp46);
          r800_ffff_tmp614 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp501), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
          bytetest_94_9e = simd_and(tmp71, r800_ffff_tmp614);
          r800_ffff_tmp615 = simd_and(r800_ffff_tmp575, bytetest_a5);
          carryQ.cq[237] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp615, carryQ.get_carry_in(237), r800_ffff_tmp616));
          r800_ffff_tmp617 = simd_and(r800_ffff_tmp616, bytetest_94_9e);
          struct_Cn.cc = simd_or(r800_ffff_tmp617, struct_Cn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_a5 = simd_and(tmp105, tmp46);
          bytetest_bd_bf = simd_and(bytetest_bc_bf, tmp5);
          r800_ffff_tmp618 = simd_and(r800_ffff_tmp616, bytetest_bd_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp618, struct_Cn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_a7 = simd_and(tmp105, tmp55);
          bytetest_8e_8e = simd_and(bytetest_80_8f, tmp159);
          r800_ffff_tmp619 = simd_and(r800_ffff_tmp575, bytetest_a7);
          carryQ.cq[238] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp619, carryQ.get_carry_in(238), r800_ffff_tmp620));
          r800_ffff_tmp621 = simd_and(r800_ffff_tmp620, bytetest_8e_8e);
          struct_Cn.cc = simd_or(r800_ffff_tmp621, struct_Cn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_a7 = simd_and(tmp105, tmp55);
          bytetest_9a_9d = simd_and(bytetest_98_9f, r800_ffff_tmp142);
          r800_ffff_tmp622 = simd_and(r800_ffff_tmp620, bytetest_9a_9d);
          struct_Cn.cc = simd_or(r800_ffff_tmp622, struct_Cn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_a7 = simd_and(tmp105, tmp55);
          bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
          r800_ffff_tmp623 = simd_and(r800_ffff_tmp620, bytetest_a0_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp623, struct_Cn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_a8 = simd_and(tmp105, tmp149);
          bytetest_b7_bf = simd_and(bytetest_b0_bf, tmp228);
          r800_ffff_tmp624 = simd_and(r800_ffff_tmp575, bytetest_a8);
          carryQ.cq[239] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp624, carryQ.get_carry_in(239), r800_ffff_tmp625));
          r800_ffff_tmp626 = simd_and(r800_ffff_tmp625, bytetest_b7_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp626, struct_Cn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_a9 = simd_and(tmp105, tmp221);
          bytetest_8e_8f = simd_and(bytetest_80_8f, tmp18);
          r800_ffff_tmp627 = simd_and(r800_ffff_tmp575, bytetest_a9);
          carryQ.cq[240] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp627, carryQ.get_carry_in(240), r800_ffff_tmp628));
          r800_ffff_tmp629 = simd_and(r800_ffff_tmp628, bytetest_8e_8f);
          struct_Cn.cc = simd_or(r800_ffff_tmp629, struct_Cn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_a9 = simd_and(tmp105, tmp221);
          bytetest_9a_9b = simd_and(tmp71, tmp217);
          r800_ffff_tmp630 = simd_and(r800_ffff_tmp628, bytetest_9a_9b);
          struct_Cn.cc = simd_or(r800_ffff_tmp630, struct_Cn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_a9 = simd_and(tmp105, tmp221);
          bytetest_bc_bf = simd_and(bytetest_b0_bf, tmp17);
          r800_ffff_tmp631 = simd_and(r800_ffff_tmp628, bytetest_bc_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp631, struct_Cn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_ab = simd_and(tmp105, tmp84);
          r800_ffff_tmp632 = simd_not(tmp378);
          r800_ffff_tmp633 = simd_or(tmp4, tmp30);
          r800_ffff_tmp634 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp632), simd_andc(r800_ffff_tmp633, basis_bits.bit_3));
          bytetest_83_9a = simd_and(bytetest_80_9f, r800_ffff_tmp634);
          r800_ffff_tmp635 = simd_and(r800_ffff_tmp575, bytetest_ab);
          carryQ.cq[241] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp635, carryQ.get_carry_in(241), r800_ffff_tmp636));
          r800_ffff_tmp637 = simd_and(r800_ffff_tmp636, bytetest_83_9a);
          struct_Cn.cc = simd_or(r800_ffff_tmp637, struct_Cn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_ac = simd_and(tmp105, tmp180);
          bytetest_80_80 = simd_andc(bytetest_80_8f, tmp6);
          r800_ffff_tmp638 = simd_and(r800_ffff_tmp575, bytetest_ac);
          carryQ.cq[242] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp638, carryQ.get_carry_in(242), r800_ffff_tmp639));
          r800_ffff_tmp640 = simd_and(r800_ffff_tmp639, bytetest_80_80);
          bytetest_ab = simd_and(tmp105, tmp84);
          bytetest_b7_bf = simd_and(bytetest_b0_bf, tmp228);
          r800_ffff_tmp641 = simd_and(r800_ffff_tmp636, bytetest_b7_bf);
          r800_ffff_tmp642 = simd_or(r800_ffff_tmp641, r800_ffff_tmp640);
          struct_Cn.cc = simd_or(r800_ffff_tmp642, struct_Cn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_ac = simd_and(tmp105, tmp180);
          bytetest_87_88 = simd_and(bytetest_80_8f, tmp208);
          r800_ffff_tmp643 = simd_and(r800_ffff_tmp639, bytetest_87_88);
          struct_Cn.cc = simd_or(r800_ffff_tmp643, struct_Cn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_ac = simd_and(tmp105, tmp180);
          bytetest_8f_90 = simd_and(bytetest_80_9f, tmp358);
          r800_ffff_tmp644 = simd_and(r800_ffff_tmp639, bytetest_8f_90);
          struct_Cn.cc = simd_or(r800_ffff_tmp644, struct_Cn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_ac = simd_and(tmp105, tmp180);
          bytetest_97_9f = simd_and(tmp71, tmp228);
          r800_ffff_tmp645 = simd_and(r800_ffff_tmp639, bytetest_97_9f);
          struct_Cn.cc = simd_or(r800_ffff_tmp645, struct_Cn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_ac = simd_and(tmp105, tmp180);
          bytetest_a7_a7 = simd_and(tmp105, tmp55);
          r800_ffff_tmp646 = simd_and(r800_ffff_tmp639, bytetest_a7_a7);
          struct_Cn.cc = simd_or(r800_ffff_tmp646, struct_Cn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_ad_ae = simd_and(bytetest_ac_af, tmp297);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp647 = simd_and(r800_ffff_tmp575, bytetest_ad_ae);
          carryQ.cq[243] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp647, carryQ.get_carry_in(243), r800_ffff_tmp648));
          r800_ffff_tmp649 = simd_and(r800_ffff_tmp648, bytetest_80_bf);
          bytetest_ac = simd_and(tmp105, tmp180);
          bytetest_af_bf = simd_and(bytetest_a0_bf, tmp100);
          r800_ffff_tmp650 = simd_and(r800_ffff_tmp639, bytetest_af_bf);
          r800_ffff_tmp651 = simd_or(r800_ffff_tmp650, r800_ffff_tmp649);
          struct_Cn.cc = simd_or(r800_ffff_tmp651, struct_Cn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_af = simd_and(tmp105, tmp99);
          bytetest_ae_af = simd_and(tmp105, tmp18);
          r800_ffff_tmp652 = simd_and(r800_ffff_tmp575, bytetest_af);
          carryQ.cq[244] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp652, carryQ.get_carry_in(244), r800_ffff_tmp653));
          r800_ffff_tmp654 = simd_and(r800_ffff_tmp653, bytetest_ae_af);
          struct_Cn.cc = simd_or(r800_ffff_tmp654, struct_Cn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_af = simd_and(tmp105, tmp99);
          bytetest_ba_bf = simd_and(bytetest_b8_bf, tmp32);
          r800_ffff_tmp655 = simd_and(r800_ffff_tmp653, bytetest_ba_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp655, struct_Cn.cc);
          bytetest_ed = simd_and(r800_ffff_tmp1, tmp97);
          bytetest_9e = simd_and(tmp71, tmp159);
          bytetest_a4_af = simd_and(tmp105, tmp4);
          r800_ffff_tmp656 = simd_and(tmp21, bytetest_ed);
          carryQ.cq[245] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp656, carryQ.get_carry_in(245), r800_ffff_tmp657));
          r800_ffff_tmp658 = simd_and(r800_ffff_tmp657, bytetest_9e);
          carryQ.cq[246] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp658, carryQ.get_carry_in(246), r800_ffff_tmp659));
          r800_ffff_tmp660 = simd_and(r800_ffff_tmp659, bytetest_a4_af);
          struct_Cn.cc = simd_or(r800_ffff_tmp660, struct_Cn.cc);
          bytetest_ed = simd_and(r800_ffff_tmp1, tmp97);
          bytetest_9f = simd_and(tmp71, tmp99);
          bytetest_87_8a = simd_and(bytetest_80_8f, tmp168);
          r800_ffff_tmp661 = simd_and(r800_ffff_tmp657, bytetest_9f);
          carryQ.cq[247] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp661, carryQ.get_carry_in(247), r800_ffff_tmp662));
          r800_ffff_tmp663 = simd_and(r800_ffff_tmp662, bytetest_87_8a);
          struct_Cn.cc = simd_or(r800_ffff_tmp663, struct_Cn.cc);
          bytetest_ed = simd_and(r800_ffff_tmp1, tmp97);
          bytetest_9f = simd_and(tmp71, tmp99);
          bytetest_bc_bf = simd_and(bytetest_b0_bf, tmp17);
          r800_ffff_tmp664 = simd_and(r800_ffff_tmp662, bytetest_bc_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp664, struct_Cn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp99);
          bytetest_a9 = simd_and(tmp105, tmp221);
          bytetest_ae_af = simd_and(tmp105, tmp18);
          r800_ffff_tmp665 = simd_and(tmp21, bytetest_ef);
          carryQ.cq[248] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp665, carryQ.get_carry_in(248), r800_ffff_tmp666));
          r800_ffff_tmp667 = simd_and(r800_ffff_tmp666, bytetest_a9);
          carryQ.cq[249] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp667, carryQ.get_carry_in(249), r800_ffff_tmp668));
          r800_ffff_tmp669 = simd_and(r800_ffff_tmp668, bytetest_ae_af);
          struct_Cn.cc = simd_or(r800_ffff_tmp669, struct_Cn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp99);
          bytetest_ab = simd_and(tmp105, tmp84);
          bytetest_9a_bf = simd_and(bytetest_80_bf, tmp68);
          r800_ffff_tmp670 = simd_and(r800_ffff_tmp666, bytetest_ab);
          carryQ.cq[250] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp670, carryQ.get_carry_in(250), r800_ffff_tmp671));
          r800_ffff_tmp672 = simd_and(r800_ffff_tmp671, bytetest_9a_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp672, struct_Cn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp99);
          bytetest_ac = simd_and(tmp105, tmp180);
          r800_ffff_tmp673 = simd_not(r800_ffff_tmp633);
          r800_ffff_tmp674 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp673), simd_andc(tmp228, basis_bits.bit_3));
          bytetest_87_92 = simd_and(bytetest_80_9f, r800_ffff_tmp674);
          r800_ffff_tmp675 = simd_and(r800_ffff_tmp666, bytetest_ac);
          carryQ.cq[251] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp675, carryQ.get_carry_in(251), r800_ffff_tmp676));
          r800_ffff_tmp677 = simd_and(r800_ffff_tmp676, bytetest_87_92);
          struct_Cn.cc = simd_or(r800_ffff_tmp677, struct_Cn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp99);
          bytetest_ac = simd_and(tmp105, tmp180);
          bytetest_98_9c = simd_andc(bytetest_98_9f, tmp154);
          r800_ffff_tmp678 = simd_and(r800_ffff_tmp676, bytetest_98_9c);
          struct_Cn.cc = simd_or(r800_ffff_tmp678, struct_Cn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp99);
          bytetest_ac = simd_and(tmp105, tmp180);
          bytetest_b7_b7 = simd_and(bytetest_b0_bf, tmp55);
          r800_ffff_tmp679 = simd_and(r800_ffff_tmp676, bytetest_b7_b7);
          struct_Cn.cc = simd_or(r800_ffff_tmp679, struct_Cn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp99);
          bytetest_ac = simd_and(tmp105, tmp180);
          bytetest_bd_bd = simd_and(bytetest_b0_bf, tmp97);
          r800_ffff_tmp680 = simd_and(r800_ffff_tmp676, bytetest_bd_bd);
          struct_Cn.cc = simd_or(r800_ffff_tmp680, struct_Cn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp99);
          bytetest_ac = simd_and(tmp105, tmp180);
          bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp99);
          r800_ffff_tmp681 = simd_and(r800_ffff_tmp676, bytetest_bf_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp681, struct_Cn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp99);
          bytetest_ad = simd_and(tmp105, tmp97);
          bytetest_82_82 = simd_and(bytetest_80_8f, tmp91);
          r800_ffff_tmp682 = simd_and(r800_ffff_tmp666, bytetest_ad);
          carryQ.cq[252] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp682, carryQ.get_carry_in(252), r800_ffff_tmp683));
          r800_ffff_tmp684 = simd_and(r800_ffff_tmp683, bytetest_82_82);
          struct_Cn.cc = simd_or(r800_ffff_tmp684, struct_Cn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp99);
          bytetest_ad = simd_and(tmp105, tmp97);
          bytetest_85_85 = simd_and(bytetest_80_8f, tmp46);
          r800_ffff_tmp685 = simd_and(r800_ffff_tmp683, bytetest_85_85);
          struct_Cn.cc = simd_or(r800_ffff_tmp685, struct_Cn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp99);
          bytetest_af = simd_and(tmp105, tmp99);
          r800_ffff_tmp686 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp673), simd_andc(tmp15, basis_bits.bit_3));
          bytetest_82_92 = simd_and(bytetest_80_9f, r800_ffff_tmp686);
          r800_ffff_tmp687 = simd_and(r800_ffff_tmp666, bytetest_af);
          carryQ.cq[253] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp687, carryQ.get_carry_in(253), r800_ffff_tmp688));
          r800_ffff_tmp689 = simd_and(r800_ffff_tmp688, bytetest_82_92);
          struct_Cn.cc = simd_or(r800_ffff_tmp689, struct_Cn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp99);
          bytetest_b5 = simd_and(bytetest_b0_bf, tmp46);
          bytetest_80_8f = simd_andc(bytetest_80_bf, tmp12);
          r800_ffff_tmp690 = simd_and(r800_ffff_tmp666, bytetest_b5);
          carryQ.cq[254] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp690, carryQ.get_carry_in(254), r800_ffff_tmp691));
          r800_ffff_tmp692 = simd_and(r800_ffff_tmp691, bytetest_80_8f);
          struct_Cn.cc = simd_or(r800_ffff_tmp692, struct_Cn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp99);
          bytetest_b6 = simd_and(bytetest_b0_bf, tmp118);
          bytetest_90_91 = simd_andc(tmp71, tmp15);
          r800_ffff_tmp693 = simd_and(r800_ffff_tmp666, bytetest_b6);
          carryQ.cq[255] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp693, carryQ.get_carry_in(255), r800_ffff_tmp694));
          r800_ffff_tmp695 = simd_and(r800_ffff_tmp694, bytetest_90_91);
          struct_Cn.cc = simd_or(r800_ffff_tmp695, struct_Cn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp99);
          bytetest_b7 = simd_and(bytetest_b0_bf, tmp55);
          r800_ffff_tmp696 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp530), simd_andc(tmp437, basis_bits.bit_2));
          bytetest_88_af = simd_and(bytetest_80_bf, r800_ffff_tmp696);
          r800_ffff_tmp697 = simd_and(r800_ffff_tmp666, bytetest_b7);
          carryQ.cq[256] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp697, carryQ.get_carry_in(256), r800_ffff_tmp698));
          r800_ffff_tmp699 = simd_and(r800_ffff_tmp698, bytetest_88_af);
          struct_Cn.cc = simd_or(r800_ffff_tmp699, struct_Cn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp99);
          bytetest_b7 = simd_and(bytetest_b0_bf, tmp55);
          bytetest_be_bf = simd_and(bytetest_b0_bf, tmp18);
          r800_ffff_tmp700 = simd_and(r800_ffff_tmp698, bytetest_be_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp700, struct_Cn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp99);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp149);
          bytetest_9a_9f = simd_and(bytetest_98_9f, tmp32);
          r800_ffff_tmp701 = simd_and(r800_ffff_tmp666, bytetest_b8);
          carryQ.cq[257] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp701, carryQ.get_carry_in(257), r800_ffff_tmp702));
          r800_ffff_tmp703 = simd_and(r800_ffff_tmp702, bytetest_9a_9f);
          struct_Cn.cc = simd_or(r800_ffff_tmp703, struct_Cn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp99);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp149);
          bytetest_a7_af = simd_and(tmp105, tmp228);
          r800_ffff_tmp704 = simd_and(r800_ffff_tmp702, bytetest_a7_af);
          struct_Cn.cc = simd_or(r800_ffff_tmp704, struct_Cn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp99);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp221);
          bytetest_93_93 = simd_and(tmp71, tmp31);
          r800_ffff_tmp705 = simd_and(r800_ffff_tmp666, bytetest_b9);
          carryQ.cq[258] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp705, carryQ.get_carry_in(258), r800_ffff_tmp706));
          r800_ffff_tmp707 = simd_and(r800_ffff_tmp706, bytetest_93_93);
          struct_Cn.cc = simd_or(r800_ffff_tmp707, struct_Cn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp99);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp221);
          bytetest_a7_a7 = simd_and(tmp105, tmp55);
          r800_ffff_tmp708 = simd_and(r800_ffff_tmp706, bytetest_a7_a7);
          struct_Cn.cc = simd_or(r800_ffff_tmp708, struct_Cn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp99);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp221);
          bytetest_ac_af = simd_and(tmp105, tmp17);
          r800_ffff_tmp709 = simd_and(r800_ffff_tmp706, bytetest_ac_af);
          struct_Cn.cc = simd_or(r800_ffff_tmp709, struct_Cn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp99);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp221);
          bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp46);
          r800_ffff_tmp710 = simd_and(r800_ffff_tmp706, bytetest_b5_b5);
          struct_Cn.cc = simd_or(r800_ffff_tmp710, struct_Cn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp99);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp84);
          bytetest_bd_be = simd_and(bytetest_bc_bf, tmp297);
          r800_ffff_tmp711 = simd_and(r800_ffff_tmp666, bytetest_bb);
          carryQ.cq[259] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp711, carryQ.get_carry_in(259), r800_ffff_tmp712));
          r800_ffff_tmp713 = simd_and(r800_ffff_tmp712, bytetest_bd_be);
          struct_Cn.cc = simd_or(r800_ffff_tmp713, struct_Cn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp99);
          bytetest_bc = simd_and(bytetest_b0_bf, tmp180);
          bytetest_80_80 = simd_andc(bytetest_80_8f, tmp6);
          r800_ffff_tmp714 = simd_and(r800_ffff_tmp666, bytetest_bc);
          carryQ.cq[260] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp714, carryQ.get_carry_in(260), r800_ffff_tmp715));
          r800_ffff_tmp716 = simd_and(r800_ffff_tmp715, bytetest_80_80);
          struct_Cn.cc = simd_or(r800_ffff_tmp716, struct_Cn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp99);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp99);
          bytetest_80_81 = simd_andc(bytetest_80_8f, tmp15);
          r800_ffff_tmp717 = simd_and(r800_ffff_tmp666, bytetest_bf);
          carryQ.cq[261] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp717, carryQ.get_carry_in(261), r800_ffff_tmp718));
          r800_ffff_tmp719 = simd_and(r800_ffff_tmp718, bytetest_80_81);
          bytetest_be = simd_and(bytetest_b0_bf, tmp159);
          bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp99);
          r800_ffff_tmp720 = simd_and(r800_ffff_tmp666, bytetest_be);
          carryQ.cq[262] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp720, carryQ.get_carry_in(262), r800_ffff_tmp721));
          r800_ffff_tmp722 = simd_and(r800_ffff_tmp721, bytetest_bf_bf);
          r800_ffff_tmp723 = simd_or(r800_ffff_tmp722, r800_ffff_tmp719);
          struct_Cn.cc = simd_or(r800_ffff_tmp723, struct_Cn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp99);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp99);
          bytetest_88_89 = simd_and(bytetest_80_8f, r800_ffff_tmp254);
          r800_ffff_tmp724 = simd_and(r800_ffff_tmp718, bytetest_88_89);
          struct_Cn.cc = simd_or(r800_ffff_tmp724, struct_Cn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp99);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp99);
          bytetest_90_91 = simd_andc(tmp71, tmp15);
          r800_ffff_tmp725 = simd_and(r800_ffff_tmp718, bytetest_90_91);
          struct_Cn.cc = simd_or(r800_ffff_tmp725, struct_Cn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp99);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp99);
          bytetest_98_99 = simd_and(tmp71, r800_ffff_tmp254);
          r800_ffff_tmp726 = simd_and(r800_ffff_tmp718, bytetest_98_99);
          struct_Cn.cc = simd_or(r800_ffff_tmp726, struct_Cn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp99);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp99);
          bytetest_9d_9f = simd_and(r800_ffff_tmp319, tmp5);
          r800_ffff_tmp727 = simd_and(r800_ffff_tmp718, bytetest_9d_9f);
          struct_Cn.cc = simd_or(r800_ffff_tmp727, struct_Cn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp99);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp99);
          bytetest_a7_a7 = simd_and(tmp105, tmp55);
          r800_ffff_tmp728 = simd_and(r800_ffff_tmp718, bytetest_a7_a7);
          struct_Cn.cc = simd_or(r800_ffff_tmp728, struct_Cn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp99);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp99);
          r800_ffff_tmp729 = simd_not(tmp144);
          r800_ffff_tmp730 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp729), simd_andc(tmp99, basis_bits.bit_3));
          bytetest_af_b8 = simd_and(bytetest_a0_bf, r800_ffff_tmp730);
          r800_ffff_tmp731 = simd_and(r800_ffff_tmp718, bytetest_af_b8);
          struct_Cn.cc = simd_or(r800_ffff_tmp731, struct_Cn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp99);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp99);
          bytetest_be_bf = simd_and(bytetest_b0_bf, tmp18);
          r800_ffff_tmp732 = simd_and(r800_ffff_tmp718, bytetest_be_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp732, struct_Cn.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(123, 140);
        }
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_90 = simd_andc(tmp71, tmp6);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp547 = simd_and(tmp23, bytetest_90);
        carryQ.cq[263] = carryout2carry(pablo_blk_Advance(tmp547, carryQ.get_carry_in(263), tmp548));
        tmp549 = simd_and(tmp548, bytetest_80_bf);
        if ((bitblock::any(tmp549) || carryQ.CarryTest(264, 33))) {
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_80 = simd_andc(tmp66, tmp6);
          bytetest_8c_8c = simd_and(tmp66, tmp180);
          r10000_10fff_tmp1 = simd_and(tmp23, bytetest_90);
          carryQ.cq[264] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp1, carryQ.get_carry_in(264), r10000_10fff_tmp2));
          r10000_10fff_tmp3 = simd_and(r10000_10fff_tmp2, bytetest_80);
          carryQ.cq[265] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp3, carryQ.get_carry_in(265), r10000_10fff_tmp4));
          r10000_10fff_tmp5 = simd_and(r10000_10fff_tmp4, bytetest_8c_8c);
          struct_Cn.cc = simd_or(r10000_10fff_tmp5, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_80 = simd_andc(tmp66, tmp6);
          bytetest_a7_a7 = simd_and(tmp105, tmp55);
          r10000_10fff_tmp6 = simd_and(r10000_10fff_tmp4, bytetest_a7_a7);
          struct_Cn.cc = simd_or(r10000_10fff_tmp6, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_80 = simd_andc(tmp66, tmp6);
          bytetest_bb_bb = simd_and(bytetest_b0_bf, tmp84);
          r10000_10fff_tmp7 = simd_and(r10000_10fff_tmp4, bytetest_bb_bb);
          struct_Cn.cc = simd_or(r10000_10fff_tmp7, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_80 = simd_andc(tmp66, tmp6);
          bytetest_be_be = simd_and(bytetest_b0_bf, tmp159);
          r10000_10fff_tmp8 = simd_and(r10000_10fff_tmp4, bytetest_be_be);
          struct_Cn.cc = simd_or(r10000_10fff_tmp8, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_81 = simd_and(tmp66, tmp11);
          bytetest_8e_8f = simd_and(tmp66, tmp18);
          r10000_10fff_tmp9 = simd_and(r10000_10fff_tmp2, bytetest_81);
          carryQ.cq[266] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp9, carryQ.get_carry_in(266), r10000_10fff_tmp10));
          r10000_10fff_tmp11 = simd_and(r10000_10fff_tmp10, bytetest_8e_8f);
          struct_Cn.cc = simd_or(r10000_10fff_tmp11, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_81 = simd_and(tmp66, tmp11);
          bytetest_9e_bf = simd_and(bytetest_80_bf, tmp213);
          r10000_10fff_tmp12 = simd_and(r10000_10fff_tmp10, bytetest_9e_bf);
          struct_Cn.cc = simd_or(r10000_10fff_tmp12, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_83 = simd_and(tmp66, tmp31);
          bytetest_bb_bf = simd_and(tmp42, tmp106);
          r10000_10fff_tmp13 = simd_and(r10000_10fff_tmp2, bytetest_83);
          carryQ.cq[267] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp13, carryQ.get_carry_in(267), r10000_10fff_tmp14));
          r10000_10fff_tmp15 = simd_and(r10000_10fff_tmp14, bytetest_bb_bf);
          struct_Cn.cc = simd_or(r10000_10fff_tmp15, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_84 = simd_and(tmp66, tmp45);
          bytetest_83_86 = simd_and(tmp308, tmp310);
          r10000_10fff_tmp16 = simd_and(r10000_10fff_tmp2, bytetest_84);
          carryQ.cq[268] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp16, carryQ.get_carry_in(268), r10000_10fff_tmp17));
          r10000_10fff_tmp18 = simd_and(r10000_10fff_tmp17, bytetest_83_86);
          struct_Cn.cc = simd_or(r10000_10fff_tmp18, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_84 = simd_and(tmp66, tmp45);
          r10000_10fff_tmp19 = simd_and(bytetest_b0_bf, tmp44);
          bytetest_b4_b6 = simd_andc(r10000_10fff_tmp19, tmp30);
          r10000_10fff_tmp20 = simd_and(r10000_10fff_tmp17, bytetest_b4_b6);
          struct_Cn.cc = simd_or(r10000_10fff_tmp20, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_86 = simd_and(tmp66, tmp118);
          bytetest_8b_8f = simd_and(tmp258, tmp106);
          r10000_10fff_tmp21 = simd_and(r10000_10fff_tmp2, bytetest_86);
          carryQ.cq[269] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp21, carryQ.get_carry_in(269), r10000_10fff_tmp22));
          r10000_10fff_tmp23 = simd_and(r10000_10fff_tmp22, bytetest_8b_8f);
          struct_Cn.cc = simd_or(r10000_10fff_tmp23, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_87 = simd_and(tmp66, tmp55);
          bytetest_80_8f = simd_andc(bytetest_80_bf, tmp12);
          r10000_10fff_tmp24 = simd_and(r10000_10fff_tmp2, bytetest_87);
          carryQ.cq[270] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp24, carryQ.get_carry_in(270), r10000_10fff_tmp25));
          r10000_10fff_tmp26 = simd_and(r10000_10fff_tmp25, bytetest_80_8f);
          bytetest_86 = simd_and(bytetest_80_8f, tmp118);
          bytetest_9c_bf = simd_and(bytetest_80_bf, tmp80);
          r10000_10fff_tmp27 = simd_and(r10000_10fff_tmp22, bytetest_9c_bf);
          r10000_10fff_tmp28 = simd_or(r10000_10fff_tmp27, r10000_10fff_tmp26);
          struct_Cn.cc = simd_or(r10000_10fff_tmp28, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          r10000_10fff_tmp29 = simd_andc(tmp72, basis_bits.bit_6);
          bytetest_88_89 = simd_and(bytetest_80_8f, r10000_10fff_tmp29);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r10000_10fff_tmp30 = simd_and(r10000_10fff_tmp2, bytetest_88_89);
          carryQ.cq[271] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp30, carryQ.get_carry_in(271), r10000_10fff_tmp31));
          r10000_10fff_tmp32 = simd_and(r10000_10fff_tmp31, bytetest_80_bf);
          bytetest_87 = simd_and(bytetest_80_8f, tmp55);
          bytetest_be_bf = simd_and(bytetest_b0_bf, tmp18);
          r10000_10fff_tmp33 = simd_and(r10000_10fff_tmp25, bytetest_be_bf);
          r10000_10fff_tmp34 = simd_or(r10000_10fff_tmp33, r10000_10fff_tmp32);
          struct_Cn.cc = simd_or(r10000_10fff_tmp34, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_8a = simd_and(bytetest_80_8f, tmp74);
          r10000_10fff_tmp35 = simd_and(tmp71, tmp17);
          bytetest_9d_9f = simd_and(r10000_10fff_tmp35, tmp5);
          r10000_10fff_tmp36 = simd_and(r10000_10fff_tmp2, bytetest_8a);
          carryQ.cq[272] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp36, carryQ.get_carry_in(272), r10000_10fff_tmp37));
          r10000_10fff_tmp38 = simd_and(r10000_10fff_tmp37, bytetest_9d_9f);
          struct_Cn.cc = simd_or(r10000_10fff_tmp38, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_8b = simd_and(bytetest_80_8f, tmp84);
          bytetest_91_bf = simd_and(bytetest_80_bf, tmp131);
          r10000_10fff_tmp39 = simd_and(r10000_10fff_tmp2, bytetest_8b);
          carryQ.cq[273] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp39, carryQ.get_carry_in(273), r10000_10fff_tmp40));
          r10000_10fff_tmp41 = simd_and(r10000_10fff_tmp40, bytetest_91_bf);
          struct_Cn.cc = simd_or(r10000_10fff_tmp41, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_8c = simd_and(bytetest_80_8f, tmp180);
          bytetest_9f_9f = simd_and(tmp71, tmp99);
          r10000_10fff_tmp42 = simd_and(r10000_10fff_tmp2, bytetest_8c);
          carryQ.cq[274] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp42, carryQ.get_carry_in(274), r10000_10fff_tmp43));
          r10000_10fff_tmp44 = simd_and(r10000_10fff_tmp43, bytetest_9f_9f);
          struct_Cn.cc = simd_or(r10000_10fff_tmp44, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_8c = simd_and(bytetest_80_8f, tmp180);
          bytetest_a4_af = simd_and(tmp105, tmp4);
          r10000_10fff_tmp45 = simd_and(r10000_10fff_tmp43, bytetest_a4_af);
          struct_Cn.cc = simd_or(r10000_10fff_tmp45, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_8d = simd_and(bytetest_80_8f, tmp97);
          r10000_10fff_tmp46 = simd_or(basis_bits.bit_2, tmp411);
          bytetest_8b_bf = simd_and(bytetest_80_bf, r10000_10fff_tmp46);
          r10000_10fff_tmp47 = simd_and(r10000_10fff_tmp2, bytetest_8d);
          carryQ.cq[275] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp47, carryQ.get_carry_in(275), r10000_10fff_tmp48));
          r10000_10fff_tmp49 = simd_and(r10000_10fff_tmp48, bytetest_8b_bf);
          struct_Cn.cc = simd_or(r10000_10fff_tmp49, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_8e = simd_and(bytetest_80_8f, tmp159);
          bytetest_9e_9e = simd_and(tmp71, tmp159);
          r10000_10fff_tmp50 = simd_and(r10000_10fff_tmp2, bytetest_8e);
          carryQ.cq[276] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp50, carryQ.get_carry_in(276), r10000_10fff_tmp51));
          r10000_10fff_tmp52 = simd_and(r10000_10fff_tmp51, bytetest_9e_9e);
          struct_Cn.cc = simd_or(r10000_10fff_tmp52, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_8f = simd_and(bytetest_80_8f, tmp99);
          bytetest_84_87 = simd_and(bytetest_80_8f, tmp44);
          r10000_10fff_tmp53 = simd_and(r10000_10fff_tmp2, bytetest_8f);
          carryQ.cq[277] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp53, carryQ.get_carry_in(277), r10000_10fff_tmp54));
          r10000_10fff_tmp55 = simd_and(r10000_10fff_tmp54, bytetest_84_87);
          struct_Cn.cc = simd_or(r10000_10fff_tmp55, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_8f = simd_and(bytetest_80_8f, tmp99);
          r10000_10fff_tmp56 = simd_and(basis_bits.bit_3, tmp201);
          r10000_10fff_tmp57 = simd_or(basis_bits.bit_2, r10000_10fff_tmp56);
          bytetest_96_bf = simd_and(bytetest_80_bf, r10000_10fff_tmp57);
          r10000_10fff_tmp58 = simd_and(r10000_10fff_tmp54, bytetest_96_bf);
          struct_Cn.cc = simd_or(r10000_10fff_tmp58, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_92 = simd_and(tmp71, tmp91);
          bytetest_9e_9f = simd_and(tmp71, tmp18);
          r10000_10fff_tmp59 = simd_and(r10000_10fff_tmp2, bytetest_92);
          carryQ.cq[278] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp59, carryQ.get_carry_in(278), r10000_10fff_tmp60));
          r10000_10fff_tmp61 = simd_and(r10000_10fff_tmp60, bytetest_9e_9f);
          struct_Cn.cc = simd_or(r10000_10fff_tmp61, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_93_9f = simd_and(tmp71, tmp107);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r10000_10fff_tmp62 = simd_and(r10000_10fff_tmp2, bytetest_93_9f);
          carryQ.cq[279] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp62, carryQ.get_carry_in(279), r10000_10fff_tmp63));
          r10000_10fff_tmp64 = simd_and(r10000_10fff_tmp63, bytetest_80_bf);
          bytetest_92 = simd_and(tmp71, tmp91);
          bytetest_aa_bf = simd_and(bytetest_a0_bf, tmp85);
          r10000_10fff_tmp65 = simd_and(r10000_10fff_tmp60, bytetest_aa_bf);
          r10000_10fff_tmp66 = simd_or(r10000_10fff_tmp65, r10000_10fff_tmp64);
          struct_Cn.cc = simd_or(r10000_10fff_tmp66, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_a0 = simd_andc(tmp105, tmp6);
          bytetest_86_87 = simd_and(bytetest_80_8f, tmp271);
          r10000_10fff_tmp67 = simd_and(r10000_10fff_tmp2, bytetest_a0);
          carryQ.cq[280] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp67, carryQ.get_carry_in(280), r10000_10fff_tmp68));
          r10000_10fff_tmp69 = simd_and(r10000_10fff_tmp68, bytetest_86_87);
          struct_Cn.cc = simd_or(r10000_10fff_tmp69, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_a0 = simd_andc(tmp105, tmp6);
          bytetest_89_89 = simd_and(bytetest_80_8f, tmp221);
          r10000_10fff_tmp70 = simd_and(r10000_10fff_tmp68, bytetest_89_89);
          struct_Cn.cc = simd_or(r10000_10fff_tmp70, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_a0 = simd_andc(tmp105, tmp6);
          bytetest_b6_b6 = simd_and(bytetest_b0_bf, tmp118);
          r10000_10fff_tmp71 = simd_and(r10000_10fff_tmp68, bytetest_b6_b6);
          struct_Cn.cc = simd_or(r10000_10fff_tmp71, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_a0 = simd_andc(tmp105, tmp6);
          r10000_10fff_tmp72 = simd_and(bytetest_b0_bf, tmp72);
          bytetest_b9_bb = simd_and(r10000_10fff_tmp72, tmp5);
          r10000_10fff_tmp73 = simd_and(r10000_10fff_tmp68, bytetest_b9_bb);
          struct_Cn.cc = simd_or(r10000_10fff_tmp73, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_a0 = simd_andc(tmp105, tmp6);
          r10000_10fff_tmp74 = simd_and(bytetest_b0_bf, tmp17);
          bytetest_bd_be = simd_and(r10000_10fff_tmp74, tmp297);
          r10000_10fff_tmp75 = simd_and(r10000_10fff_tmp68, bytetest_bd_be);
          struct_Cn.cc = simd_or(r10000_10fff_tmp75, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_a1 = simd_and(tmp105, tmp11);
          bytetest_96_96 = simd_and(tmp71, tmp118);
          r10000_10fff_tmp76 = simd_and(r10000_10fff_tmp2, bytetest_a1);
          carryQ.cq[281] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp76, carryQ.get_carry_in(281), r10000_10fff_tmp77));
          r10000_10fff_tmp78 = simd_and(r10000_10fff_tmp77, bytetest_96_96);
          struct_Cn.cc = simd_or(r10000_10fff_tmp78, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_a2_a3 = simd_and(tmp105, tmp518);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r10000_10fff_tmp79 = simd_and(r10000_10fff_tmp2, bytetest_a2_a3);
          carryQ.cq[282] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp79, carryQ.get_carry_in(282), r10000_10fff_tmp80));
          r10000_10fff_tmp81 = simd_and(r10000_10fff_tmp80, bytetest_80_bf);
          bytetest_a1 = simd_and(tmp105, tmp11);
          bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
          r10000_10fff_tmp82 = simd_and(r10000_10fff_tmp77, bytetest_a0_bf);
          r10000_10fff_tmp83 = simd_or(r10000_10fff_tmp82, r10000_10fff_tmp81);
          struct_Cn.cc = simd_or(r10000_10fff_tmp83, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_a4 = simd_and(tmp105, tmp45);
          bytetest_9c_9e = simd_andc(r10000_10fff_tmp35, tmp30);
          r10000_10fff_tmp84 = simd_and(r10000_10fff_tmp2, bytetest_a4);
          carryQ.cq[283] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp84, carryQ.get_carry_in(283), r10000_10fff_tmp85));
          r10000_10fff_tmp86 = simd_and(r10000_10fff_tmp85, bytetest_9c_9e);
          struct_Cn.cc = simd_or(r10000_10fff_tmp86, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_a4 = simd_and(tmp105, tmp45);
          r10000_10fff_tmp87 = simd_or(simd_and(basis_bits.bit_5, tmp309), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
          bytetest_ba_be = simd_and(tmp42, r10000_10fff_tmp87);
          r10000_10fff_tmp88 = simd_and(r10000_10fff_tmp85, bytetest_ba_be);
          struct_Cn.cc = simd_or(r10000_10fff_tmp88, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_a5 = simd_and(tmp105, tmp46);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r10000_10fff_tmp89 = simd_and(r10000_10fff_tmp2, bytetest_a5);
          carryQ.cq[284] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp89, carryQ.get_carry_in(284), r10000_10fff_tmp90));
          r10000_10fff_tmp91 = simd_and(r10000_10fff_tmp90, bytetest_80_bf);
          struct_Cn.cc = simd_or(r10000_10fff_tmp91, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_a6 = simd_and(tmp105, tmp118);
          bytetest_b8_bd = simd_andc(tmp42, tmp200);
          r10000_10fff_tmp92 = simd_and(r10000_10fff_tmp2, bytetest_a6);
          carryQ.cq[285] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp92, carryQ.get_carry_in(285), r10000_10fff_tmp93));
          r10000_10fff_tmp94 = simd_and(r10000_10fff_tmp93, bytetest_b8_bd);
          struct_Cn.cc = simd_or(r10000_10fff_tmp94, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_a7 = simd_and(tmp105, tmp55);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r10000_10fff_tmp95 = simd_and(r10000_10fff_tmp2, bytetest_a7);
          carryQ.cq[286] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp95, carryQ.get_carry_in(286), r10000_10fff_tmp96));
          r10000_10fff_tmp97 = simd_and(r10000_10fff_tmp96, bytetest_80_bf);
          struct_Cn.cc = simd_or(r10000_10fff_tmp97, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_a8 = simd_and(tmp105, tmp149);
          bytetest_84_84 = simd_and(bytetest_80_8f, tmp45);
          r10000_10fff_tmp98 = simd_and(r10000_10fff_tmp2, bytetest_a8);
          carryQ.cq[287] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp98, carryQ.get_carry_in(287), r10000_10fff_tmp99));
          r10000_10fff_tmp100 = simd_and(r10000_10fff_tmp99, bytetest_84_84);
          struct_Cn.cc = simd_or(r10000_10fff_tmp100, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_a8 = simd_and(tmp105, tmp149);
          r10000_10fff_tmp101 = simd_not(basis_bits.bit_5);
          r10000_10fff_tmp102 = simd_or(simd_and(basis_bits.bit_4, r10000_10fff_tmp101), simd_andc(tmp160, basis_bits.bit_4));
          bytetest_87_8b = simd_and(bytetest_80_8f, r10000_10fff_tmp102);
          r10000_10fff_tmp103 = simd_and(r10000_10fff_tmp99, bytetest_87_8b);
          struct_Cn.cc = simd_or(r10000_10fff_tmp103, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_a8 = simd_and(tmp105, tmp149);
          bytetest_94_94 = simd_and(tmp71, tmp45);
          r10000_10fff_tmp104 = simd_and(r10000_10fff_tmp99, bytetest_94_94);
          struct_Cn.cc = simd_or(r10000_10fff_tmp104, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_a8 = simd_and(tmp105, tmp149);
          bytetest_98_98 = simd_and(tmp71, tmp149);
          r10000_10fff_tmp105 = simd_and(r10000_10fff_tmp99, bytetest_98_98);
          struct_Cn.cc = simd_or(r10000_10fff_tmp105, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_a8 = simd_and(tmp105, tmp149);
          bytetest_b4_b7 = simd_and(bytetest_b0_bf, tmp44);
          r10000_10fff_tmp106 = simd_and(r10000_10fff_tmp99, bytetest_b4_b7);
          struct_Cn.cc = simd_or(r10000_10fff_tmp106, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_a8 = simd_and(tmp105, tmp149);
          bytetest_bb_be = simd_and(tmp42, tmp310);
          r10000_10fff_tmp107 = simd_and(r10000_10fff_tmp99, bytetest_bb_be);
          struct_Cn.cc = simd_or(r10000_10fff_tmp107, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_a9 = simd_and(tmp105, tmp221);
          bytetest_88_8f = simd_and(bytetest_80_8f, basis_bits.bit_4);
          r10000_10fff_tmp108 = simd_and(r10000_10fff_tmp2, bytetest_a9);
          carryQ.cq[288] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp108, carryQ.get_carry_in(288), r10000_10fff_tmp109));
          r10000_10fff_tmp110 = simd_and(r10000_10fff_tmp109, bytetest_88_8f);
          struct_Cn.cc = simd_or(r10000_10fff_tmp110, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_a9 = simd_and(tmp105, tmp221);
          r10000_10fff_tmp111 = simd_and(tmp71, basis_bits.bit_4);
          bytetest_99_9f = simd_and(r10000_10fff_tmp111, tmp40);
          r10000_10fff_tmp112 = simd_and(r10000_10fff_tmp109, bytetest_99_9f);
          struct_Cn.cc = simd_or(r10000_10fff_tmp112, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_aa_ab = simd_and(tmp105, tmp217);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r10000_10fff_tmp113 = simd_and(r10000_10fff_tmp2, bytetest_aa_ab);
          carryQ.cq[289] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp113, carryQ.get_carry_in(289), r10000_10fff_tmp114));
          r10000_10fff_tmp115 = simd_and(r10000_10fff_tmp114, bytetest_80_bf);
          struct_Cn.cc = simd_or(r10000_10fff_tmp115, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_ac = simd_and(tmp105, tmp180);
          r10000_10fff_tmp116 = simd_or(simd_and(basis_bits.bit_4, tmp207), simd_andc(tmp200, basis_bits.bit_4));
          bytetest_b6_b8 = simd_and(bytetest_b0_bf, r10000_10fff_tmp116);
          r10000_10fff_tmp117 = simd_and(r10000_10fff_tmp2, bytetest_ac);
          carryQ.cq[290] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp117, carryQ.get_carry_in(290), r10000_10fff_tmp118));
          r10000_10fff_tmp119 = simd_and(r10000_10fff_tmp118, bytetest_b6_b8);
          struct_Cn.cc = simd_or(r10000_10fff_tmp119, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_ad = simd_and(tmp105, tmp97);
          bytetest_96_97 = simd_and(tmp71, tmp271);
          r10000_10fff_tmp120 = simd_and(r10000_10fff_tmp2, bytetest_ad);
          carryQ.cq[291] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp120, carryQ.get_carry_in(291), r10000_10fff_tmp121));
          r10000_10fff_tmp122 = simd_and(r10000_10fff_tmp121, bytetest_96_97);
          struct_Cn.cc = simd_or(r10000_10fff_tmp122, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_ad = simd_and(tmp105, tmp97);
          r10000_10fff_tmp123 = simd_andc(bytetest_b0_bf, basis_bits.bit_4);
          bytetest_b3_b7 = simd_and(r10000_10fff_tmp123, tmp106);
          r10000_10fff_tmp124 = simd_and(r10000_10fff_tmp121, bytetest_b3_b7);
          struct_Cn.cc = simd_or(r10000_10fff_tmp124, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_ae_af = simd_and(tmp105, tmp18);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r10000_10fff_tmp125 = simd_and(r10000_10fff_tmp2, bytetest_ae_af);
          carryQ.cq[292] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp125, carryQ.get_carry_in(292), r10000_10fff_tmp126));
          r10000_10fff_tmp127 = simd_and(r10000_10fff_tmp126, bytetest_80_bf);
          struct_Cn.cc = simd_or(r10000_10fff_tmp127, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp221);
          bytetest_80_9f = simd_andc(bytetest_80_bf, basis_bits.bit_2);
          r10000_10fff_tmp128 = simd_and(r10000_10fff_tmp2, bytetest_b9);
          carryQ.cq[293] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp128, carryQ.get_carry_in(293), r10000_10fff_tmp129));
          r10000_10fff_tmp130 = simd_and(r10000_10fff_tmp129, bytetest_80_9f);
          r10000_10fff_tmp131 = simd_or(simd_and(basis_bits.bit_4, tmp207), simd_andc(tmp32, basis_bits.bit_4));
          bytetest_b2_b8 = simd_and(bytetest_b0_bf, r10000_10fff_tmp131);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r10000_10fff_tmp132 = simd_and(r10000_10fff_tmp2, bytetest_b2_b8);
          carryQ.cq[294] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp132, carryQ.get_carry_in(294), r10000_10fff_tmp133));
          r10000_10fff_tmp134 = simd_and(r10000_10fff_tmp133, bytetest_80_bf);
          bytetest_b1 = simd_and(bytetest_b0_bf, tmp11);
          r10000_10fff_tmp135 = simd_or(basis_bits.bit_2, tmp506);
          bytetest_89_bf = simd_and(bytetest_80_bf, r10000_10fff_tmp135);
          r10000_10fff_tmp136 = simd_and(r10000_10fff_tmp2, bytetest_b1);
          carryQ.cq[295] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp136, carryQ.get_carry_in(295), r10000_10fff_tmp137));
          r10000_10fff_tmp138 = simd_and(r10000_10fff_tmp137, bytetest_89_bf);
          r10000_10fff_tmp139 = simd_or(r10000_10fff_tmp138, r10000_10fff_tmp134);
          r10000_10fff_tmp140 = simd_or(r10000_10fff_tmp139, r10000_10fff_tmp130);
          struct_Cn.cc = simd_or(r10000_10fff_tmp140, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_ba_bf = simd_and(tmp42, tmp32);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r10000_10fff_tmp141 = simd_and(r10000_10fff_tmp2, bytetest_ba_bf);
          carryQ.cq[296] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp141, carryQ.get_carry_in(296), r10000_10fff_tmp142));
          r10000_10fff_tmp143 = simd_and(r10000_10fff_tmp142, bytetest_80_bf);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp221);
          bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp99);
          r10000_10fff_tmp144 = simd_and(r10000_10fff_tmp129, bytetest_bf_bf);
          r10000_10fff_tmp145 = simd_or(r10000_10fff_tmp144, r10000_10fff_tmp143);
          struct_Cn.cc = simd_or(r10000_10fff_tmp145, struct_Cn.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(264, 33);
        }
        carryQ.CarryQ_Adjust(297);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Cn & struct_Cn, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_f0, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, bytetest_91, tmp12, tmp13, bytetest_81, tmp14, tmp15;
		BitBlock tmp16, tmp17, tmp18, tmp19, bytetest_8e_91, tmp20, tmp21, tmp22;
		BitBlock tmp23, tmp24, tmp25, tmp26, tmp27, tmp28, bytetest_b0_bf, tmp29;
		BitBlock tmp30, tmp31, bytetest_83, tmp32, tmp33, bytetest_82_8f, tmp34, tmp35;
		BitBlock tmp36, tmp37, tmp38, tmp39, tmp40, bytetest_a9_af, tmp41, tmp42;
		BitBlock bytetest_ba_bf, tmp43, tmp44, tmp45, bytetest_84, tmp46;
		BitBlock bytetest_b5_b5, tmp47, tmp48, tmp49, bytetest_85, tmp50, tmp51;
		BitBlock bytetest_84_bf, tmp52, tmp53, tmp54, tmp55, bytetest_87, tmp56;
		BitBlock bytetest_89_8f, tmp57, tmp58, tmp59, tmp60, tmp61, tmp62;
		BitBlock bytetest_88_99, bytetest_80_bf, tmp63, tmp64, tmp65, tmp66, tmp67;
		BitBlock tmp68, bytetest_9a_bf, tmp69, tmp70, tmp71, tmp72, tmp73, tmp74;
		BitBlock bytetest_9a, tmp75, bytetest_b8_bf, tmp76, tmp77, tmp78, tmp79, tmp80;
		BitBlock bytetest_9c_bf, tmp81, tmp82, tmp83, tmp84, bytetest_9b, tmp85, tmp86;
		BitBlock bytetest_8a_bf, tmp87, tmp88, tmp89, tmp90, tmp91, bytetest_92;
		BitBlock bytetest_8e_8f, tmp92, tmp93, tmp94, tmp95, tmp96, tmp97, bytetest_8d;
		BitBlock tmp98, tmp99, tmp100, bytetest_af_bf, tmp101, tmp102, tmp103, tmp104;
		BitBlock tmp105, tmp106, tmp107, bytetest_a3_af, tmp108, tmp109, tmp110;
		BitBlock tmp111, tmp112, bytetest_92_bf, tmp113, tmp114, tmp115;
		BitBlock bytetest_b4_bf, tmp116, tmp117, tmp118, bytetest_96, bytetest_80_9f;
		BitBlock tmp119, tmp120, tmp121, tmp122, tmp123, tmp124, bytetest_94_95;
		BitBlock tmp125, tmp126, tmp127, tmp128, tmp129, bytetest_93, tmp130, tmp131;
		BitBlock bytetest_91_bf, tmp132, tmp133, tmp134, tmp135, tmp136, bytetest_90;
		BitBlock tmp137, tmp138, tmp139, tmp140, tmp141, tmp142, tmp143, tmp144;
		BitBlock tmp145, bytetest_a9_bb, tmp146, tmp147, tmp148, tmp149, bytetest_a8;
		BitBlock bytetest_b9_bf, tmp150, tmp151, tmp152, tmp153, bytetest_bd, tmp154;
		BitBlock tmp155, bytetest_85_8f, tmp156, tmp157, tmp158, tmp159, bytetest_be;
		BitBlock tmp160, tmp161, bytetest_80_8e, tmp162, tmp163, tmp164;
		BitBlock bytetest_bf_bf, tmp165, tmp166, tmp167, tmp168, bytetest_97_9a;
		BitBlock tmp169, tmp170, tmp171, tmp172, tmp173, bytetest_bf, tmp174, tmp175;
		BitBlock tmp176, bytetest_a0_bf, tmp177, tmp178, tmp179, tmp180, bytetest_9c;
		BitBlock tmp181, tmp182, tmp183, tmp184, tmp185, tmp186, tmp187;
		BitBlock bytetest_81_bf, tmp188, tmp189, tmp190, tmp191, tmp192, bytetest_80;
		BitBlock tmp193, tmp194, bytetest_82_bf, tmp195, tmp196, tmp197, tmp198;
		BitBlock tmp199, bytetest_9d, tmp200, tmp201, bytetest_b6_bf, tmp202, tmp203;
		BitBlock tmp204, tmp205, tmp206, tmp207, tmp208, bytetest_a7_a8, tmp209;
		BitBlock tmp210, tmp211, tmp212, tmp213, bytetest_9e_bf, tmp214, tmp215;
		BitBlock tmp216, tmp217, bytetest_8a_8b, tmp218, tmp219, tmp220, tmp221;
		BitBlock bytetest_89, tmp222, tmp223, bytetest_86_bf, tmp224, tmp225, tmp226;
		BitBlock tmp227, tmp228, bytetest_97_9f, tmp229, tmp230, tmp231, tmp232;
		BitBlock tmp233, tmp234, bytetest_b2_bf, tmp235, tmp236, bytetest_95_95;
		BitBlock tmp237, tmp238, tmp239, bytetest_9d_9d, tmp240, tmp241, tmp242;
		BitBlock bytetest_a0_a1, tmp243, tmp244, tmp245, tmp246, bytetest_a3_a4;
		BitBlock tmp247, tmp248, bytetest_ad_ad, tmp249, bytetest_ba_ba, tmp250;
		BitBlock bytetest_bc_bc, tmp251, bytetest_84_84, tmp252, tmp253, tmp254;
		BitBlock bytetest_94, bytetest_86_86, tmp255, tmp256, tmp257, tmp258;
		BitBlock bytetest_8b_8c, tmp259, tmp260, tmp261, tmp262, tmp263, bytetest_95;
		BitBlock bytetest_85_85, tmp264, tmp265, tmp266, tmp267, tmp268;
		BitBlock bytetest_87_89, tmp269, bytetest_91_91, tmp270, tmp271;
		BitBlock bytetest_a6_a7, tmp272, tmp273, tmp274, bytetest_9f, tmp275;
		BitBlock bytetest_8c_8d, tmp276, tmp277, tmp278, bytetest_9e, tmp279, tmp280;
		BitBlock bytetest_80_b7, tmp281, tmp282, tmp283, tmp284, tmp285, tmp286;
		BitBlock tmp287, tmp288, tmp289, bytetest_b8, tmp290, tmp291, tmp292;
		BitBlock bytetest_a0_a0, tmp293, bytetest_a3_a3, tmp294, tmp295, tmp296;
		BitBlock tmp297, bytetest_a5_a6, tmp298, bytetest_a8_a8, tmp299;
		BitBlock bytetest_b3_b3, tmp300, bytetest_b8_b8, tmp301, tmp302, bytetest_b9;
		BitBlock bytetest_80_81, tmp303, tmp304, tmp305, bytetest_bc_bf, tmp306;
		BitBlock tmp307, tmp308, tmp309, tmp310, bytetest_83_86, tmp311;
		BitBlock bytetest_88_88, tmp312, bytetest_8a_8a, tmp313, bytetest_8c_8c;
		BitBlock tmp314, bytetest_90_90, tmp315, bytetest_93_93, tmp316, tmp317;
		BitBlock bytetest_95_96, tmp318, bytetest_98_98, tmp319, bytetest_9a_9a;
		BitBlock tmp320, bytetest_9c_9c, tmp321, bytetest_9e_9e, tmp322, tmp323;
		BitBlock tmp324, tmp325, bytetest_ab_ab, tmp326, tmp327, tmp328;
		BitBlock bytetest_bd_bd, tmp329, tmp330, bytetest_ba, tmp331, tmp332, tmp333;
		BitBlock tmp334, tmp335, bytetest_9c_a0, tmp336, bytetest_a4_a4, tmp337;
		BitBlock bytetest_aa_aa, tmp338, bytetest_bb, bytetest_80_af, tmp339, tmp340;
		BitBlock tmp341, tmp342, tmp343, tmp344, tmp345, tmp346, tmp347, tmp348;
		BitBlock bytetest_ac_af, tmp349, tmp350, tmp351, tmp352, tmp353, bytetest_82;
		BitBlock bytetest_94_9f, tmp354, tmp355, tmp356, tmp357, tmp358;
		BitBlock bytetest_af_b0, tmp359, bytetest_80_80, tmp360, tmp361, tmp362;
		BitBlock tmp363, tmp364, tmp365, tmp366, bytetest_8b_8f, tmp367, tmp368;
		BitBlock tmp369, bytetest_af_af, tmp370, tmp371, tmp372, tmp373, tmp374;
		BitBlock bytetest_80_a5, tmp375, tmp376, tmp377, bytetest_86, tmp378, tmp379;
		BitBlock tmp380, bytetest_9b_bf, tmp381, tmp382, tmp383, tmp384, bytetest_88;
		BitBlock bytetest_83_8f, tmp385, tmp386, tmp387, bytetest_bb_bf, tmp388;
		BitBlock tmp389, tmp390, tmp391, tmp392, tmp393, tmp394, tmp395, tmp396;
		BitBlock bytetest_8c, tmp397, bytetest_a1_af, tmp398, tmp399, tmp400;
		BitBlock bytetest_b6_b6, tmp401, bytetest_bd_bf, tmp402, tmp403, tmp404;
		BitBlock bytetest_8e, tmp405, tmp406, tmp407, bytetest_8f, tmp408, tmp409;
		BitBlock tmp410, tmp411, bytetest_8b_9f, tmp412, bytetest_b1_bf, tmp413;
		BitBlock tmp414, tmp415, tmp416, bytetest_81_81, tmp417, tmp418, tmp419;
		BitBlock tmp420, tmp421, tmp422, tmp423, bytetest_be_bf, tmp424, tmp425;
		BitBlock tmp426, bytetest_84_8f, tmp427, tmp428, tmp429, bytetest_97, tmp430;
		BitBlock bytetest_80_ba, tmp431, tmp432, tmp433, tmp434, tmp435, tmp436;
		BitBlock tmp437, bytetest_a8_bf, tmp438, tmp439, tmp440, bytetest_99, tmp441;
		BitBlock bytetest_81_84, tmp442, tmp443, tmp444, bytetest_90_bf, tmp445;
		BitBlock tmp446, tmp447, tmp448, tmp449, tmp450, tmp451, tmp452, tmp453;
		BitBlock tmp454, tmp455, bytetest_aa, tmp456, tmp457, bytetest_97_bf, tmp458;
		BitBlock tmp459, tmp460, tmp461, tmp462, bytetest_ab, bytetest_b5_bf, tmp463;
		BitBlock tmp464, tmp465, tmp466, tmp467, bytetest_af, tmp468, tmp469, tmp470;
		BitBlock tmp471, tmp472, bytetest_ac_ae, tmp473, tmp474, tmp475, tmp476;
		BitBlock tmp477, bytetest_a1_bf, tmp478, tmp479, tmp480, bytetest_a0, tmp481;
		BitBlock tmp482, tmp483, tmp484, tmp485, tmp486, bytetest_f3, tmp487, tmp488;
		BitBlock tmp489, tmp490, tmp491, tmp492, tmp493, tmp494, tmp495, tmp496;
		BitBlock tmp497, tmp498, tmp499, tmp500, bytetest_f1_f2, tmp501, tmp502;
		BitBlock tmp503, tmp504, tmp505, tmp506, bytetest_a9_bf, tmp507, tmp508;
		BitBlock tmp509, tmp510, tmp511, tmp512, tmp513, tmp514, tmp515, tmp516;
		BitBlock bytetest_82_9f, tmp517, tmp518, bytetest_82_83, tmp519, tmp520;
		BitBlock tmp521, tmp522, tmp523, tmp524, tmp525, tmp526, tmp527;
		BitBlock bytetest_88_bf, tmp528, tmp529, tmp530, tmp531, tmp532, tmp533;
		BitBlock tmp534, tmp535, tmp536, tmp537, tmp538, tmp539, tmp540, tmp541;
		BitBlock bytetest_c2_df, r80_7ff_tmp1, bytetest_cd, r80_7ff_tmp2;
		BitBlock bytetest_b8_b9, r80_7ff_tmp3, r80_7ff_tmp4, r80_7ff_tmp5, bytetest_ce;
		BitBlock bytetest_80_83, r80_7ff_tmp6, r80_7ff_tmp7, r80_7ff_tmp8;
		BitBlock r80_7ff_tmp9, r80_7ff_tmp10, bytetest_8b_8b, r80_7ff_tmp11;
		BitBlock bytetest_8d_8d, r80_7ff_tmp12, bytetest_a2_a2, r80_7ff_tmp13;
		BitBlock r80_7ff_tmp14, bytetest_d4, r80_7ff_tmp15, bytetest_a8_b0;
		BitBlock r80_7ff_tmp16, r80_7ff_tmp17, r80_7ff_tmp18, bytetest_d5;
		BitBlock bytetest_97_98, r80_7ff_tmp19, r80_7ff_tmp20, r80_7ff_tmp21;
		BitBlock r80_7ff_tmp22, bytetest_d6, r80_7ff_tmp23, r80_7ff_tmp24;
		BitBlock r80_7ff_tmp25, bytetest_8b_8e, r80_7ff_tmp26, r80_7ff_tmp27;
		BitBlock bytetest_d7, bytetest_88_8f, r80_7ff_tmp28, r80_7ff_tmp29;
		BitBlock r80_7ff_tmp30, r80_7ff_tmp31, bytetest_ab_af, r80_7ff_tmp32;
		BitBlock r80_7ff_tmp33, bytetest_d8, r80_7ff_tmp34, r80_7ff_tmp35;
		BitBlock r80_7ff_tmp36, r80_7ff_tmp37, bytetest_dc, bytetest_8e_8e;
		BitBlock r80_7ff_tmp38, r80_7ff_tmp39, r80_7ff_tmp40, bytetest_dd;
		BitBlock r80_7ff_tmp41, r80_7ff_tmp42, r80_7ff_tmp43, bytetest_de;
		BitBlock r80_7ff_tmp44, r80_7ff_tmp45, r80_7ff_tmp46, bytetest_df;
		BitBlock r80_7ff_tmp47, r80_7ff_tmp48, r80_7ff_tmp49, tmp542, bytetest_e1_ef;
		BitBlock bytetest_e0, tmp543, tmp544, tmp545, tmp546, r800_ffff_tmp1;
		BitBlock bytetest_ae_af, r800_ffff_tmp2, r800_ffff_tmp3, r800_ffff_tmp4;
		BitBlock r800_ffff_tmp5, r800_ffff_tmp6, r800_ffff_tmp7, bytetest_a1;
		BitBlock bytetest_9c_9d, r800_ffff_tmp8, r800_ffff_tmp9, r800_ffff_tmp10;
		BitBlock bytetest_a2, r800_ffff_tmp11, r800_ffff_tmp12, r800_ffff_tmp13;
		BitBlock r800_ffff_tmp14, r800_ffff_tmp15, bytetest_9f_bf, r800_ffff_tmp16;
		BitBlock r800_ffff_tmp17, bytetest_a1_a1, r800_ffff_tmp18, bytetest_a3;
		BitBlock r800_ffff_tmp19, bytetest_80_a3, r800_ffff_tmp20, r800_ffff_tmp21;
		BitBlock r800_ffff_tmp22, r800_ffff_tmp23, r800_ffff_tmp24, bytetest_ad_bf;
		BitBlock r800_ffff_tmp25, r800_ffff_tmp26, r800_ffff_tmp27, bytetest_a5;
		BitBlock r800_ffff_tmp28, r800_ffff_tmp29, r800_ffff_tmp30, bytetest_a6;
		BitBlock r800_ffff_tmp31, r800_ffff_tmp32, r800_ffff_tmp33, r800_ffff_tmp34;
		BitBlock r800_ffff_tmp35, bytetest_8d_8e, r800_ffff_tmp36, r800_ffff_tmp37;
		BitBlock bytetest_91_92, r800_ffff_tmp38, bytetest_a9_a9, r800_ffff_tmp39;
		BitBlock bytetest_b1_b1, r800_ffff_tmp40, r800_ffff_tmp41, r800_ffff_tmp42;
		BitBlock r800_ffff_tmp43, bytetest_b3_b5, r800_ffff_tmp44, bytetest_ba_bb;
		BitBlock r800_ffff_tmp45, bytetest_a7, r800_ffff_tmp46, bytetest_85_86;
		BitBlock r800_ffff_tmp47, r800_ffff_tmp48, r800_ffff_tmp49, r800_ffff_tmp50;
		BitBlock bytetest_89_8a, r800_ffff_tmp51, r800_ffff_tmp52, r800_ffff_tmp53;
		BitBlock bytetest_8f_96, r800_ffff_tmp54, bytetest_98_9b, r800_ffff_tmp55;
		BitBlock r800_ffff_tmp56, bytetest_a4_a5, r800_ffff_tmp57, r800_ffff_tmp58;
		BitBlock r800_ffff_tmp59, r800_ffff_tmp60, r800_ffff_tmp61, r800_ffff_tmp62;
		BitBlock r800_ffff_tmp63, r800_ffff_tmp64, r800_ffff_tmp65, r800_ffff_tmp66;
		BitBlock r800_ffff_tmp67, bytetest_b4_b4, r800_ffff_tmp68, bytetest_b7_b7;
		BitBlock r800_ffff_tmp69, r800_ffff_tmp70, r800_ffff_tmp71, bytetest_a9;
		BitBlock r800_ffff_tmp72, r800_ffff_tmp73, r800_ffff_tmp74, r800_ffff_tmp75;
		BitBlock r800_ffff_tmp76, bytetest_8e_90, r800_ffff_tmp77, r800_ffff_tmp78;
		BitBlock bytetest_92_98, r800_ffff_tmp79, r800_ffff_tmp80, r800_ffff_tmp81;
		BitBlock r800_ffff_tmp82, bytetest_9f_a5, r800_ffff_tmp83, r800_ffff_tmp84;
		BitBlock r800_ffff_tmp85, r800_ffff_tmp86, r800_ffff_tmp87, r800_ffff_tmp88;
		BitBlock r800_ffff_tmp89, r800_ffff_tmp90, bytetest_92_92, r800_ffff_tmp91;
		BitBlock r800_ffff_tmp92, r800_ffff_tmp93, r800_ffff_tmp94, r800_ffff_tmp95;
		BitBlock r800_ffff_tmp96, r800_ffff_tmp97, r800_ffff_tmp98, r800_ffff_tmp99;
		BitBlock r800_ffff_tmp100, bytetest_91_9f, r800_ffff_tmp101, r800_ffff_tmp102;
		BitBlock bytetest_ac, r800_ffff_tmp103, r800_ffff_tmp104, r800_ffff_tmp105;
		BitBlock r800_ffff_tmp106, r800_ffff_tmp107, r800_ffff_tmp108;
		BitBlock r800_ffff_tmp109, r800_ffff_tmp110, r800_ffff_tmp111;
		BitBlock r800_ffff_tmp112, r800_ffff_tmp113, r800_ffff_tmp114, bytetest_ad;
		BitBlock r800_ffff_tmp115, r800_ffff_tmp116, r800_ffff_tmp117;
		BitBlock r800_ffff_tmp118, r800_ffff_tmp119, r800_ffff_tmp120, bytetest_8e_95;
		BitBlock r800_ffff_tmp121, r800_ffff_tmp122, r800_ffff_tmp123;
		BitBlock r800_ffff_tmp124, bytetest_ae, r800_ffff_tmp125, r800_ffff_tmp126;
		BitBlock r800_ffff_tmp127, r800_ffff_tmp128, r800_ffff_tmp129;
		BitBlock r800_ffff_tmp130, bytetest_8b_8d, r800_ffff_tmp131, r800_ffff_tmp132;
		BitBlock r800_ffff_tmp133, bytetest_96_98, r800_ffff_tmp134, bytetest_9b_9b;
		BitBlock r800_ffff_tmp135, r800_ffff_tmp136, r800_ffff_tmp137, bytetest_a0_a2;
		BitBlock r800_ffff_tmp138, bytetest_a5_a7, r800_ffff_tmp139, r800_ffff_tmp140;
		BitBlock bytetest_ab_ad, r800_ffff_tmp141, r800_ffff_tmp142, bytetest_ba_bd;
		BitBlock r800_ffff_tmp143, bytetest_83_85, r800_ffff_tmp144, r800_ffff_tmp145;
		BitBlock r800_ffff_tmp146, bytetest_89_89, r800_ffff_tmp147, r800_ffff_tmp148;
		BitBlock r800_ffff_tmp149, r800_ffff_tmp150, bytetest_91_96, r800_ffff_tmp151;
		BitBlock r800_ffff_tmp152, bytetest_98_a5, r800_ffff_tmp153, bytetest_b0;
		BitBlock r800_ffff_tmp154, r800_ffff_tmp155, r800_ffff_tmp156;
		BitBlock r800_ffff_tmp157, r800_ffff_tmp158, r800_ffff_tmp159;
		BitBlock r800_ffff_tmp160, r800_ffff_tmp161, r800_ffff_tmp162;
		BitBlock r800_ffff_tmp163, r800_ffff_tmp164, bytetest_ba_bc, r800_ffff_tmp165;
		BitBlock bytetest_b1, r800_ffff_tmp166, r800_ffff_tmp167, r800_ffff_tmp168;
		BitBlock r800_ffff_tmp169, r800_ffff_tmp170, r800_ffff_tmp171, bytetest_8e_94;
		BitBlock r800_ffff_tmp172, bytetest_97_97, r800_ffff_tmp173, r800_ffff_tmp174;
		BitBlock bytetest_9a_9f, r800_ffff_tmp175, r800_ffff_tmp176, bytetest_b0_b7;
		BitBlock r800_ffff_tmp177, bytetest_b2, r800_ffff_tmp178, r800_ffff_tmp179;
		BitBlock r800_ffff_tmp180, r800_ffff_tmp181, r800_ffff_tmp182;
		BitBlock r800_ffff_tmp183, r800_ffff_tmp184, r800_ffff_tmp185;
		BitBlock r800_ffff_tmp186, bytetest_b3, r800_ffff_tmp187, r800_ffff_tmp188;
		BitBlock r800_ffff_tmp189, r800_ffff_tmp190, r800_ffff_tmp191;
		BitBlock r800_ffff_tmp192, r800_ffff_tmp193, bytetest_97_9d, r800_ffff_tmp194;
		BitBlock bytetest_9f_9f, r800_ffff_tmp195, r800_ffff_tmp196, bytetest_b0_b0;
		BitBlock r800_ffff_tmp197, bytetest_b4, r800_ffff_tmp198, r800_ffff_tmp199;
		BitBlock r800_ffff_tmp200, bytetest_b3_bf, r800_ffff_tmp201, r800_ffff_tmp202;
		BitBlock r800_ffff_tmp203, r800_ffff_tmp204, r800_ffff_tmp205, bytetest_bb_bc;
		BitBlock r800_ffff_tmp206, bytetest_b5, r800_ffff_tmp207, r800_ffff_tmp208;
		BitBlock r800_ffff_tmp209, r800_ffff_tmp210, r800_ffff_tmp211, bytetest_98_9f;
		BitBlock r800_ffff_tmp212, r800_ffff_tmp213, bytetest_b6_b8, r800_ffff_tmp214;
		BitBlock bytetest_b6, r800_ffff_tmp215, r800_ffff_tmp216, r800_ffff_tmp217;
		BitBlock r800_ffff_tmp218, bytetest_97_99, r800_ffff_tmp219, bytetest_b2_b2;
		BitBlock r800_ffff_tmp220, r800_ffff_tmp221, r800_ffff_tmp222, bytetest_b7;
		BitBlock r800_ffff_tmp223, r800_ffff_tmp224, r800_ffff_tmp225;
		BitBlock r800_ffff_tmp226, r800_ffff_tmp227, r800_ffff_tmp228, bytetest_a0_b1;
		BitBlock r800_ffff_tmp229, r800_ffff_tmp230, r800_ffff_tmp231;
		BitBlock r800_ffff_tmp232, r800_ffff_tmp233, r800_ffff_tmp234, bytetest_bb_be;
		BitBlock r800_ffff_tmp235, r800_ffff_tmp236, r800_ffff_tmp237;
		BitBlock r800_ffff_tmp238, r800_ffff_tmp239, r800_ffff_tmp240;
		BitBlock r800_ffff_tmp241, r800_ffff_tmp242, bytetest_83_83, r800_ffff_tmp243;
		BitBlock r800_ffff_tmp244, r800_ffff_tmp245, r800_ffff_tmp246;
		BitBlock r800_ffff_tmp247, r800_ffff_tmp248, bytetest_8e_93, r800_ffff_tmp249;
		BitBlock r800_ffff_tmp250, r800_ffff_tmp251, r800_ffff_tmp252, bytetest_a6_a6;
		BitBlock r800_ffff_tmp253, r800_ffff_tmp254, bytetest_a8_a9, r800_ffff_tmp255;
		BitBlock bytetest_ac_ac, r800_ffff_tmp256, r800_ffff_tmp257, r800_ffff_tmp258;
		BitBlock r800_ffff_tmp259, r800_ffff_tmp260, r800_ffff_tmp261, bytetest_87_87;
		BitBlock r800_ffff_tmp262, r800_ffff_tmp263, bytetest_9a_9b, r800_ffff_tmp264;
		BitBlock r800_ffff_tmp265, r800_ffff_tmp266, r800_ffff_tmp267;
		BitBlock r800_ffff_tmp268, r800_ffff_tmp269, bytetest_ad_b0, r800_ffff_tmp270;
		BitBlock r800_ffff_tmp271, r800_ffff_tmp272, r800_ffff_tmp273;
		BitBlock r800_ffff_tmp274, r800_ffff_tmp275, r800_ffff_tmp276;
		BitBlock r800_ffff_tmp277, r800_ffff_tmp278, bytetest_e1, r800_ffff_tmp279;
		BitBlock r800_ffff_tmp280, r800_ffff_tmp281, r800_ffff_tmp282;
		BitBlock r800_ffff_tmp283, bytetest_88_8c, r800_ffff_tmp284, r800_ffff_tmp285;
		BitBlock r800_ffff_tmp286, r800_ffff_tmp287, r800_ffff_tmp288;
		BitBlock r800_ffff_tmp289, r800_ffff_tmp290, bytetest_99_99, r800_ffff_tmp291;
		BitBlock bytetest_9e_9f, r800_ffff_tmp292, bytetest_8a, r800_ffff_tmp293;
		BitBlock r800_ffff_tmp294, r800_ffff_tmp295, r800_ffff_tmp296;
		BitBlock r800_ffff_tmp297, bytetest_b6_b7, r800_ffff_tmp298, r800_ffff_tmp299;
		BitBlock bytetest_8b, r800_ffff_tmp300, r800_ffff_tmp301, r800_ffff_tmp302;
		BitBlock bytetest_86_87, r800_ffff_tmp303, r800_ffff_tmp304, r800_ffff_tmp305;
		BitBlock r800_ffff_tmp306, r800_ffff_tmp307, bytetest_96_97, r800_ffff_tmp308;
		BitBlock bytetest_9b_9c, r800_ffff_tmp309, r800_ffff_tmp310, r800_ffff_tmp311;
		BitBlock r800_ffff_tmp312, r800_ffff_tmp313, r800_ffff_tmp314;
		BitBlock r800_ffff_tmp315, r800_ffff_tmp316, r800_ffff_tmp317;
		BitBlock r800_ffff_tmp318, r800_ffff_tmp319, bytetest_9d_9f, r800_ffff_tmp320;
		BitBlock r800_ffff_tmp321, r800_ffff_tmp322, r800_ffff_tmp323;
		BitBlock r800_ffff_tmp324, r800_ffff_tmp325, r800_ffff_tmp326;
		BitBlock r800_ffff_tmp327, r800_ffff_tmp328, bytetest_95_9f, r800_ffff_tmp329;
		BitBlock bytetest_b7_bf, r800_ffff_tmp330, r800_ffff_tmp331, r800_ffff_tmp332;
		BitBlock r800_ffff_tmp333, r800_ffff_tmp334, r800_ffff_tmp335;
		BitBlock r800_ffff_tmp336, r800_ffff_tmp337, r800_ffff_tmp338;
		BitBlock r800_ffff_tmp339, bytetest_aa_af, r800_ffff_tmp340, r800_ffff_tmp341;
		BitBlock bytetest_8f_8f, r800_ffff_tmp342, r800_ffff_tmp343, r800_ffff_tmp344;
		BitBlock r800_ffff_tmp345, r800_ffff_tmp346, r800_ffff_tmp347;
		BitBlock r800_ffff_tmp348, r800_ffff_tmp349, r800_ffff_tmp350;
		BitBlock r800_ffff_tmp351, r800_ffff_tmp352, r800_ffff_tmp353;
		BitBlock r800_ffff_tmp354, bytetest_a4, r800_ffff_tmp355, r800_ffff_tmp356;
		BitBlock r800_ffff_tmp357, r800_ffff_tmp358, r800_ffff_tmp359;
		BitBlock r800_ffff_tmp360, bytetest_81_83, r800_ffff_tmp361, r800_ffff_tmp362;
		BitBlock r800_ffff_tmp363, r800_ffff_tmp364, r800_ffff_tmp365;
		BitBlock r800_ffff_tmp366, r800_ffff_tmp367, r800_ffff_tmp368, bytetest_8a_8f;
		BitBlock r800_ffff_tmp369, r800_ffff_tmp370, r800_ffff_tmp371, bytetest_9b_9d;
		BitBlock r800_ffff_tmp372, r800_ffff_tmp373, r800_ffff_tmp374;
		BitBlock r800_ffff_tmp375, r800_ffff_tmp376, r800_ffff_tmp377;
		BitBlock r800_ffff_tmp378, bytetest_bd_be, r800_ffff_tmp379, r800_ffff_tmp380;
		BitBlock r800_ffff_tmp381, r800_ffff_tmp382, r800_ffff_tmp383;
		BitBlock r800_ffff_tmp384, r800_ffff_tmp385, r800_ffff_tmp386;
		BitBlock r800_ffff_tmp387, bytetest_ae_bf, r800_ffff_tmp388, r800_ffff_tmp389;
		BitBlock bytetest_8c_8f, r800_ffff_tmp390, r800_ffff_tmp391, r800_ffff_tmp392;
		BitBlock r800_ffff_tmp393, r800_ffff_tmp394, r800_ffff_tmp395, bytetest_b4_bb;
		BitBlock r800_ffff_tmp396, r800_ffff_tmp397, r800_ffff_tmp398;
		BitBlock r800_ffff_tmp399, bytetest_b8_ba, r800_ffff_tmp400, r800_ffff_tmp401;
		BitBlock r800_ffff_tmp402, bytetest_8a_8c, r800_ffff_tmp403, r800_ffff_tmp404;
		BitBlock r800_ffff_tmp405, r800_ffff_tmp406, r800_ffff_tmp407;
		BitBlock r800_ffff_tmp408, r800_ffff_tmp409, r800_ffff_tmp410;
		BitBlock r800_ffff_tmp411, r800_ffff_tmp412, r800_ffff_tmp413, bytetest_a7_bb;
		BitBlock r800_ffff_tmp414, r800_ffff_tmp415, r800_ffff_tmp416, bytetest_bc;
		BitBlock r800_ffff_tmp417, r800_ffff_tmp418, r800_ffff_tmp419;
		BitBlock r800_ffff_tmp420, r800_ffff_tmp421, r800_ffff_tmp422;
		BitBlock r800_ffff_tmp423, r800_ffff_tmp424, r800_ffff_tmp425;
		BitBlock r800_ffff_tmp426, r800_ffff_tmp427, r800_ffff_tmp428;
		BitBlock r800_ffff_tmp429, r800_ffff_tmp430, r800_ffff_tmp431;
		BitBlock r800_ffff_tmp432, r800_ffff_tmp433, r800_ffff_tmp434;
		BitBlock r800_ffff_tmp435, r800_ffff_tmp436, r800_ffff_tmp437, bytetest_b0_b1;
		BitBlock r800_ffff_tmp438, r800_ffff_tmp439, r800_ffff_tmp440, bytetest_e2;
		BitBlock bytetest_a5_a5, r800_ffff_tmp441, r800_ffff_tmp442, r800_ffff_tmp443;
		BitBlock r800_ffff_tmp444, r800_ffff_tmp445, bytetest_b2_b3, r800_ffff_tmp446;
		BitBlock r800_ffff_tmp447, r800_ffff_tmp448, r800_ffff_tmp449;
		BitBlock r800_ffff_tmp450, bytetest_80_8f, r800_ffff_tmp451, r800_ffff_tmp452;
		BitBlock r800_ffff_tmp453, r800_ffff_tmp454, r800_ffff_tmp455;
		BitBlock r800_ffff_tmp456, r800_ffff_tmp457, r800_ffff_tmp458;
		BitBlock r800_ffff_tmp459, r800_ffff_tmp460, r800_ffff_tmp461;
		BitBlock r800_ffff_tmp462, r800_ffff_tmp463, r800_ffff_tmp464, bytetest_a7_bf;
		BitBlock r800_ffff_tmp465, r800_ffff_tmp466, r800_ffff_tmp467;
		BitBlock r800_ffff_tmp468, r800_ffff_tmp469, r800_ffff_tmp470;
		BitBlock r800_ffff_tmp471, r800_ffff_tmp472, r800_ffff_tmp473;
		BitBlock r800_ffff_tmp474, bytetest_8d_8f, r800_ffff_tmp475, r800_ffff_tmp476;
		BitBlock r800_ffff_tmp477, r800_ffff_tmp478, r800_ffff_tmp479;
		BitBlock r800_ffff_tmp480, r800_ffff_tmp481, r800_ffff_tmp482;
		BitBlock r800_ffff_tmp483, r800_ffff_tmp484, r800_ffff_tmp485;
		BitBlock r800_ffff_tmp486, r800_ffff_tmp487, r800_ffff_tmp488;
		BitBlock r800_ffff_tmp489, bytetest_b4_b8, r800_ffff_tmp490, r800_ffff_tmp491;
		BitBlock r800_ffff_tmp492, r800_ffff_tmp493, r800_ffff_tmp494;
		BitBlock r800_ffff_tmp495, bytetest_a8_ac, r800_ffff_tmp496, r800_ffff_tmp497;
		BitBlock bytetest_a8_ae, r800_ffff_tmp498, r800_ffff_tmp499, r800_ffff_tmp500;
		BitBlock r800_ffff_tmp501, r800_ffff_tmp502, bytetest_b1_be, r800_ffff_tmp503;
		BitBlock r800_ffff_tmp504, r800_ffff_tmp505, r800_ffff_tmp506, bytetest_a7_a7;
		BitBlock r800_ffff_tmp507, r800_ffff_tmp508, r800_ffff_tmp509;
		BitBlock r800_ffff_tmp510, r800_ffff_tmp511, r800_ffff_tmp512;
		BitBlock r800_ffff_tmp513, r800_ffff_tmp514, r800_ffff_tmp515;
		BitBlock r800_ffff_tmp516, r800_ffff_tmp517, r800_ffff_tmp518;
		BitBlock r800_ffff_tmp519, r800_ffff_tmp520, r800_ffff_tmp521;
		BitBlock r800_ffff_tmp522, r800_ffff_tmp523, r800_ffff_tmp524;
		BitBlock r800_ffff_tmp525, r800_ffff_tmp526, r800_ffff_tmp527;
		BitBlock r800_ffff_tmp528, r800_ffff_tmp529, r800_ffff_tmp530;
		BitBlock r800_ffff_tmp531, r800_ffff_tmp532, bytetest_96_af, r800_ffff_tmp533;
		BitBlock r800_ffff_tmp534, r800_ffff_tmp535, r800_ffff_tmp536, bytetest_e3;
		BitBlock r800_ffff_tmp537, r800_ffff_tmp538, r800_ffff_tmp539;
		BitBlock r800_ffff_tmp540, r800_ffff_tmp541, r800_ffff_tmp542;
		BitBlock r800_ffff_tmp543, r800_ffff_tmp544, r800_ffff_tmp545, bytetest_80_84;
		BitBlock r800_ffff_tmp546, r800_ffff_tmp547, r800_ffff_tmp548, bytetest_ae_b0;
		BitBlock r800_ffff_tmp549, r800_ffff_tmp550, r800_ffff_tmp551;
		BitBlock r800_ffff_tmp552, r800_ffff_tmp553, bytetest_a4_af, r800_ffff_tmp554;
		BitBlock r800_ffff_tmp555, r800_ffff_tmp556, r800_ffff_tmp557;
		BitBlock r800_ffff_tmp558, r800_ffff_tmp559, r800_ffff_tmp560;
		BitBlock r800_ffff_tmp561, r800_ffff_tmp562, bytetest_e4, r800_ffff_tmp563;
		BitBlock r800_ffff_tmp564, r800_ffff_tmp565, r800_ffff_tmp566;
		BitBlock r800_ffff_tmp567, bytetest_e9, r800_ffff_tmp568, bytetest_8d_bf;
		BitBlock r800_ffff_tmp569, r800_ffff_tmp570, r800_ffff_tmp571;
		BitBlock r800_ffff_tmp572, r800_ffff_tmp573, bytetest_ea, r800_ffff_tmp574;
		BitBlock r800_ffff_tmp575, r800_ffff_tmp576, r800_ffff_tmp577;
		BitBlock r800_ffff_tmp578, bytetest_87_8f, r800_ffff_tmp579, r800_ffff_tmp580;
		BitBlock r800_ffff_tmp581, bytetest_98, r800_ffff_tmp582, bytetest_ac_bf;
		BitBlock r800_ffff_tmp583, r800_ffff_tmp584, r800_ffff_tmp585, bytetest_98_9e;
		BitBlock r800_ffff_tmp586, r800_ffff_tmp587, r800_ffff_tmp588;
		BitBlock r800_ffff_tmp589, r800_ffff_tmp590, r800_ffff_tmp591;
		BitBlock r800_ffff_tmp592, r800_ffff_tmp593, r800_ffff_tmp594;
		BitBlock r800_ffff_tmp595, r800_ffff_tmp596, r800_ffff_tmp597;
		BitBlock r800_ffff_tmp598, bytetest_ab_bf, r800_ffff_tmp599, r800_ffff_tmp600;
		BitBlock r800_ffff_tmp601, r800_ffff_tmp602, r800_ffff_tmp603;
		BitBlock r800_ffff_tmp604, r800_ffff_tmp605, r800_ffff_tmp606;
		BitBlock r800_ffff_tmp607, r800_ffff_tmp608, bytetest_85_8d, r800_ffff_tmp609;
		BitBlock r800_ffff_tmp610, r800_ffff_tmp611, r800_ffff_tmp612;
		BitBlock r800_ffff_tmp613, r800_ffff_tmp614, bytetest_94_9e, r800_ffff_tmp615;
		BitBlock r800_ffff_tmp616, r800_ffff_tmp617, r800_ffff_tmp618;
		BitBlock r800_ffff_tmp619, r800_ffff_tmp620, r800_ffff_tmp621, bytetest_9a_9d;
		BitBlock r800_ffff_tmp622, r800_ffff_tmp623, r800_ffff_tmp624;
		BitBlock r800_ffff_tmp625, r800_ffff_tmp626, r800_ffff_tmp627;
		BitBlock r800_ffff_tmp628, r800_ffff_tmp629, r800_ffff_tmp630;
		BitBlock r800_ffff_tmp631, r800_ffff_tmp632, r800_ffff_tmp633;
		BitBlock r800_ffff_tmp634, bytetest_83_9a, r800_ffff_tmp635, r800_ffff_tmp636;
		BitBlock r800_ffff_tmp637, r800_ffff_tmp638, r800_ffff_tmp639;
		BitBlock r800_ffff_tmp640, r800_ffff_tmp641, r800_ffff_tmp642, bytetest_87_88;
		BitBlock r800_ffff_tmp643, bytetest_8f_90, r800_ffff_tmp644, r800_ffff_tmp645;
		BitBlock r800_ffff_tmp646, bytetest_ad_ae, r800_ffff_tmp647, r800_ffff_tmp648;
		BitBlock r800_ffff_tmp649, r800_ffff_tmp650, r800_ffff_tmp651;
		BitBlock r800_ffff_tmp652, r800_ffff_tmp653, r800_ffff_tmp654;
		BitBlock r800_ffff_tmp655, bytetest_ed, r800_ffff_tmp656, r800_ffff_tmp657;
		BitBlock r800_ffff_tmp658, r800_ffff_tmp659, r800_ffff_tmp660, bytetest_87_8a;
		BitBlock r800_ffff_tmp661, r800_ffff_tmp662, r800_ffff_tmp663;
		BitBlock r800_ffff_tmp664, bytetest_ef, r800_ffff_tmp665, r800_ffff_tmp666;
		BitBlock r800_ffff_tmp667, r800_ffff_tmp668, r800_ffff_tmp669;
		BitBlock r800_ffff_tmp670, r800_ffff_tmp671, r800_ffff_tmp672;
		BitBlock r800_ffff_tmp673, r800_ffff_tmp674, bytetest_87_92, r800_ffff_tmp675;
		BitBlock r800_ffff_tmp676, r800_ffff_tmp677, bytetest_98_9c, r800_ffff_tmp678;
		BitBlock r800_ffff_tmp679, r800_ffff_tmp680, r800_ffff_tmp681, bytetest_82_82;
		BitBlock r800_ffff_tmp682, r800_ffff_tmp683, r800_ffff_tmp684;
		BitBlock r800_ffff_tmp685, r800_ffff_tmp686, bytetest_82_92, r800_ffff_tmp687;
		BitBlock r800_ffff_tmp688, r800_ffff_tmp689, r800_ffff_tmp690;
		BitBlock r800_ffff_tmp691, r800_ffff_tmp692, bytetest_90_91, r800_ffff_tmp693;
		BitBlock r800_ffff_tmp694, r800_ffff_tmp695, r800_ffff_tmp696, bytetest_88_af;
		BitBlock r800_ffff_tmp697, r800_ffff_tmp698, r800_ffff_tmp699;
		BitBlock r800_ffff_tmp700, r800_ffff_tmp701, r800_ffff_tmp702;
		BitBlock r800_ffff_tmp703, bytetest_a7_af, r800_ffff_tmp704, r800_ffff_tmp705;
		BitBlock r800_ffff_tmp706, r800_ffff_tmp707, r800_ffff_tmp708;
		BitBlock r800_ffff_tmp709, r800_ffff_tmp710, r800_ffff_tmp711;
		BitBlock r800_ffff_tmp712, r800_ffff_tmp713, r800_ffff_tmp714;
		BitBlock r800_ffff_tmp715, r800_ffff_tmp716, r800_ffff_tmp717;
		BitBlock r800_ffff_tmp718, r800_ffff_tmp719, r800_ffff_tmp720;
		BitBlock r800_ffff_tmp721, r800_ffff_tmp722, r800_ffff_tmp723, bytetest_88_89;
		BitBlock r800_ffff_tmp724, r800_ffff_tmp725, bytetest_98_99, r800_ffff_tmp726;
		BitBlock r800_ffff_tmp727, r800_ffff_tmp728, r800_ffff_tmp729;
		BitBlock r800_ffff_tmp730, bytetest_af_b8, r800_ffff_tmp731, r800_ffff_tmp732;
		BitBlock tmp547, tmp548, tmp549, r10000_10fff_tmp1, r10000_10fff_tmp2;
		BitBlock r10000_10fff_tmp3, r10000_10fff_tmp4, r10000_10fff_tmp5;
		BitBlock r10000_10fff_tmp6, bytetest_bb_bb, r10000_10fff_tmp7, bytetest_be_be;
		BitBlock r10000_10fff_tmp8, r10000_10fff_tmp9, r10000_10fff_tmp10;
		BitBlock r10000_10fff_tmp11, r10000_10fff_tmp12, r10000_10fff_tmp13;
		BitBlock r10000_10fff_tmp14, r10000_10fff_tmp15, r10000_10fff_tmp16;
		BitBlock r10000_10fff_tmp17, r10000_10fff_tmp18, r10000_10fff_tmp19;
		BitBlock bytetest_b4_b6, r10000_10fff_tmp20, r10000_10fff_tmp21;
		BitBlock r10000_10fff_tmp22, r10000_10fff_tmp23, r10000_10fff_tmp24;
		BitBlock r10000_10fff_tmp25, r10000_10fff_tmp26, r10000_10fff_tmp27;
		BitBlock r10000_10fff_tmp28, r10000_10fff_tmp29, r10000_10fff_tmp30;
		BitBlock r10000_10fff_tmp31, r10000_10fff_tmp32, r10000_10fff_tmp33;
		BitBlock r10000_10fff_tmp34, r10000_10fff_tmp35, r10000_10fff_tmp36;
		BitBlock r10000_10fff_tmp37, r10000_10fff_tmp38, r10000_10fff_tmp39;
		BitBlock r10000_10fff_tmp40, r10000_10fff_tmp41, r10000_10fff_tmp42;
		BitBlock r10000_10fff_tmp43, r10000_10fff_tmp44, r10000_10fff_tmp45;
		BitBlock r10000_10fff_tmp46, bytetest_8b_bf, r10000_10fff_tmp47;
		BitBlock r10000_10fff_tmp48, r10000_10fff_tmp49, r10000_10fff_tmp50;
		BitBlock r10000_10fff_tmp51, r10000_10fff_tmp52, bytetest_84_87;
		BitBlock r10000_10fff_tmp53, r10000_10fff_tmp54, r10000_10fff_tmp55;
		BitBlock r10000_10fff_tmp56, r10000_10fff_tmp57, bytetest_96_bf;
		BitBlock r10000_10fff_tmp58, r10000_10fff_tmp59, r10000_10fff_tmp60;
		BitBlock r10000_10fff_tmp61, bytetest_93_9f, r10000_10fff_tmp62;
		BitBlock r10000_10fff_tmp63, r10000_10fff_tmp64, bytetest_aa_bf;
		BitBlock r10000_10fff_tmp65, r10000_10fff_tmp66, r10000_10fff_tmp67;
		BitBlock r10000_10fff_tmp68, r10000_10fff_tmp69, r10000_10fff_tmp70;
		BitBlock r10000_10fff_tmp71, r10000_10fff_tmp72, bytetest_b9_bb;
		BitBlock r10000_10fff_tmp73, r10000_10fff_tmp74, r10000_10fff_tmp75;
		BitBlock bytetest_96_96, r10000_10fff_tmp76, r10000_10fff_tmp77;
		BitBlock r10000_10fff_tmp78, bytetest_a2_a3, r10000_10fff_tmp79;
		BitBlock r10000_10fff_tmp80, r10000_10fff_tmp81, r10000_10fff_tmp82;
		BitBlock r10000_10fff_tmp83, bytetest_9c_9e, r10000_10fff_tmp84;
		BitBlock r10000_10fff_tmp85, r10000_10fff_tmp86, r10000_10fff_tmp87;
		BitBlock bytetest_ba_be, r10000_10fff_tmp88, r10000_10fff_tmp89;
		BitBlock r10000_10fff_tmp90, r10000_10fff_tmp91, bytetest_b8_bd;
		BitBlock r10000_10fff_tmp92, r10000_10fff_tmp93, r10000_10fff_tmp94;
		BitBlock r10000_10fff_tmp95, r10000_10fff_tmp96, r10000_10fff_tmp97;
		BitBlock r10000_10fff_tmp98, r10000_10fff_tmp99, r10000_10fff_tmp100;
		BitBlock r10000_10fff_tmp101, r10000_10fff_tmp102, bytetest_87_8b;
		BitBlock r10000_10fff_tmp103, bytetest_94_94, r10000_10fff_tmp104;
		BitBlock r10000_10fff_tmp105, bytetest_b4_b7, r10000_10fff_tmp106;
		BitBlock r10000_10fff_tmp107, r10000_10fff_tmp108, r10000_10fff_tmp109;
		BitBlock r10000_10fff_tmp110, r10000_10fff_tmp111, bytetest_99_9f;
		BitBlock r10000_10fff_tmp112, bytetest_aa_ab, r10000_10fff_tmp113;
		BitBlock r10000_10fff_tmp114, r10000_10fff_tmp115, r10000_10fff_tmp116;
		BitBlock r10000_10fff_tmp117, r10000_10fff_tmp118, r10000_10fff_tmp119;
		BitBlock r10000_10fff_tmp120, r10000_10fff_tmp121, r10000_10fff_tmp122;
		BitBlock r10000_10fff_tmp123, bytetest_b3_b7, r10000_10fff_tmp124;
		BitBlock r10000_10fff_tmp125, r10000_10fff_tmp126, r10000_10fff_tmp127;
		BitBlock r10000_10fff_tmp128, r10000_10fff_tmp129, r10000_10fff_tmp130;
		BitBlock r10000_10fff_tmp131, bytetest_b2_b8, r10000_10fff_tmp132;
		BitBlock r10000_10fff_tmp133, r10000_10fff_tmp134, r10000_10fff_tmp135;
		BitBlock bytetest_89_bf, r10000_10fff_tmp136, r10000_10fff_tmp137;
		BitBlock r10000_10fff_tmp138, r10000_10fff_tmp139, r10000_10fff_tmp140;
		BitBlock r10000_10fff_tmp141, r10000_10fff_tmp142, r10000_10fff_tmp143;
		BitBlock r10000_10fff_tmp144, r10000_10fff_tmp145;




        struct_Cn.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_and(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_or(tmp4, tmp5);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp11 = simd_andc(tmp10, tmp4);
        bytetest_91 = simd_and(tmp9, tmp11);
        tmp12 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp13 = simd_andc(tmp7, tmp12);
        bytetest_81 = simd_and(tmp13, tmp11);
        tmp14 = simd_andc(tmp7, basis_bits.bit_2);
        tmp15 = simd_or(tmp4, basis_bits.bit_6);
        tmp16 = simd_not(tmp15);
        tmp17 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp18 = simd_and(tmp17, basis_bits.bit_6);
        tmp19 = simd_or(simd_and(basis_bits.bit_3, tmp16), simd_andc(tmp18, basis_bits.bit_3));
        bytetest_8e_91 = simd_and(tmp14, tmp19);
        tmp20 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp20, carryQ.get_carry_in(0), tmp21));
        tmp22 = simd_and(tmp21, bytetest_f0);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp22, carryQ.get_carry_in(1), tmp23));
        tmp24 = simd_and(tmp23, bytetest_91);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp24, carryQ.get_carry_in(2), tmp25));
        tmp26 = simd_and(tmp25, bytetest_81);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp26, carryQ.get_carry_in(3), tmp27));
        tmp28 = simd_and(tmp27, bytetest_8e_91);
        struct_Cn.cc = simd_or(tmp28, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        bytetest_81 = simd_and(tmp13, tmp11);
        bytetest_b0_bf = simd_and(tmp7, tmp2);
        tmp29 = simd_and(tmp27, bytetest_b0_bf);
        struct_Cn.cc = simd_or(tmp29, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        tmp30 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp31 = simd_andc(tmp30, tmp4);
        bytetest_83 = simd_and(tmp13, tmp31);
        tmp32 = simd_or(basis_bits.bit_5, basis_bits.bit_6);
        tmp33 = simd_or(basis_bits.bit_4, tmp32);
        bytetest_82_8f = simd_and(tmp13, tmp33);
        tmp34 = simd_and(tmp25, bytetest_83);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp34, carryQ.get_carry_in(4), tmp35));
        tmp36 = simd_and(tmp35, bytetest_82_8f);
        struct_Cn.cc = simd_or(tmp36, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        bytetest_83 = simd_and(tmp13, tmp31);
        tmp37 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp38 = simd_and(tmp7, tmp37);
        tmp39 = simd_and(tmp38, basis_bits.bit_4);
        tmp40 = simd_or(basis_bits.bit_5, tmp5);
        bytetest_a9_af = simd_and(tmp39, tmp40);
        tmp41 = simd_and(tmp35, bytetest_a9_af);
        struct_Cn.cc = simd_or(tmp41, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        bytetest_83 = simd_and(tmp13, tmp31);
        tmp42 = simd_and(bytetest_b0_bf, basis_bits.bit_4);
        bytetest_ba_bf = simd_and(tmp42, tmp32);
        tmp43 = simd_and(tmp35, bytetest_ba_bf);
        struct_Cn.cc = simd_or(tmp43, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        tmp44 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp45 = simd_andc(tmp44, tmp5);
        bytetest_84 = simd_and(tmp13, tmp45);
        tmp46 = simd_and(tmp44, tmp10);
        bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp46);
        tmp47 = simd_and(tmp25, bytetest_84);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp47, carryQ.get_carry_in(5), tmp48));
        tmp49 = simd_and(tmp48, bytetest_b5_b5);
        struct_Cn.cc = simd_or(tmp49, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        bytetest_85 = simd_and(tmp13, tmp46);
        tmp50 = simd_or(basis_bits.bit_3, tmp4);
        tmp51 = simd_or(basis_bits.bit_2, tmp50);
        bytetest_84_bf = simd_and(tmp7, tmp51);
        tmp52 = simd_and(tmp25, bytetest_85);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp52, carryQ.get_carry_in(6), tmp53));
        tmp54 = simd_and(tmp53, bytetest_84_bf);
        struct_Cn.cc = simd_or(tmp54, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        tmp55 = simd_and(tmp44, tmp30);
        bytetest_87 = simd_and(tmp13, tmp55);
        tmp56 = simd_and(tmp13, basis_bits.bit_4);
        bytetest_89_8f = simd_and(tmp56, tmp40);
        tmp57 = simd_and(tmp25, bytetest_87);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp57, carryQ.get_carry_in(7), tmp58));
        tmp59 = simd_and(tmp58, bytetest_89_8f);
        struct_Cn.cc = simd_or(tmp59, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp9, tmp11);
        tmp60 = simd_and(basis_bits.bit_4, tmp32);
        tmp61 = simd_not(tmp60);
        tmp62 = simd_or(simd_and(basis_bits.bit_3, tmp61), simd_andc(basis_bits.bit_4, basis_bits.bit_3));
        bytetest_88_99 = simd_and(tmp14, tmp62);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp63 = simd_and(tmp25, bytetest_88_99);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(tmp63, carryQ.get_carry_in(8), tmp64));
        tmp65 = simd_and(tmp64, bytetest_80_bf);
        tmp66 = simd_andc(bytetest_80_bf, tmp12);
        bytetest_87 = simd_and(tmp66, tmp55);
        tmp67 = simd_and(basis_bits.bit_3, tmp60);
        tmp68 = simd_or(basis_bits.bit_2, tmp67);
        bytetest_9a_bf = simd_and(bytetest_80_bf, tmp68);
        tmp69 = simd_and(tmp58, bytetest_9a_bf);
        tmp70 = simd_or(tmp69, tmp65);
        struct_Cn.cc = simd_or(tmp70, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        tmp71 = simd_and(bytetest_80_bf, tmp8);
        bytetest_91 = simd_and(tmp71, tmp11);
        tmp72 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
        tmp73 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp74 = simd_and(tmp72, tmp73);
        bytetest_9a = simd_and(tmp71, tmp74);
        tmp75 = simd_and(bytetest_80_bf, tmp2);
        bytetest_b8_bf = simd_and(tmp75, basis_bits.bit_4);
        tmp76 = simd_and(tmp25, bytetest_9a);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(tmp76, carryQ.get_carry_in(9), tmp77));
        tmp78 = simd_and(tmp77, bytetest_b8_bf);
        struct_Cn.cc = simd_or(tmp78, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_91 = simd_and(tmp71, tmp11);
        tmp79 = simd_and(basis_bits.bit_3, tmp17);
        tmp80 = simd_or(basis_bits.bit_2, tmp79);
        bytetest_9c_bf = simd_and(bytetest_80_bf, tmp80);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp81 = simd_and(tmp25, bytetest_9c_bf);
        carryQ.cq[10] = carryout2carry(pablo_blk_Advance(tmp81, carryQ.get_carry_in(10), tmp82));
        tmp83 = simd_and(tmp82, bytetest_80_bf);
        tmp84 = simd_and(tmp72, tmp30);
        bytetest_9b = simd_and(tmp71, tmp84);
        tmp85 = simd_or(basis_bits.bit_3, tmp60);
        tmp86 = simd_or(basis_bits.bit_2, tmp85);
        bytetest_8a_bf = simd_and(bytetest_80_bf, tmp86);
        tmp87 = simd_and(tmp25, bytetest_9b);
        carryQ.cq[11] = carryout2carry(pablo_blk_Advance(tmp87, carryQ.get_carry_in(11), tmp88));
        tmp89 = simd_and(tmp88, bytetest_8a_bf);
        tmp90 = simd_or(tmp89, tmp83);
        struct_Cn.cc = simd_or(tmp90, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        tmp91 = simd_andc(tmp73, tmp4);
        bytetest_92 = simd_and(tmp71, tmp91);
        bytetest_8e_8f = simd_and(tmp66, tmp18);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp92 = simd_and(tmp23, bytetest_92);
        carryQ.cq[12] = carryout2carry(pablo_blk_Advance(tmp92, carryQ.get_carry_in(12), tmp93));
        tmp94 = simd_and(tmp93, bytetest_8e_8f);
        carryQ.cq[13] = carryout2carry(pablo_blk_Advance(tmp94, carryQ.get_carry_in(13), tmp95));
        tmp96 = simd_and(tmp95, bytetest_80_bf);
        tmp97 = simd_and(tmp17, tmp10);
        bytetest_8d = simd_and(tmp66, tmp97);
        tmp98 = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp99 = simd_and(tmp17, tmp30);
        tmp100 = simd_or(basis_bits.bit_3, tmp99);
        bytetest_af_bf = simd_and(tmp98, tmp100);
        tmp101 = simd_and(tmp93, bytetest_8d);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(tmp101, carryQ.get_carry_in(14), tmp102));
        tmp103 = simd_and(tmp102, bytetest_af_bf);
        tmp104 = simd_or(tmp103, tmp96);
        struct_Cn.cc = simd_or(tmp104, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_92 = simd_and(tmp71, tmp91);
        bytetest_91 = simd_and(tmp71, tmp11);
        tmp105 = simd_and(bytetest_80_bf, tmp37);
        tmp106 = simd_or(basis_bits.bit_5, tmp30);
        tmp107 = simd_or(basis_bits.bit_4, tmp106);
        bytetest_a3_af = simd_and(tmp105, tmp107);
        tmp108 = simd_and(tmp93, bytetest_91);
        carryQ.cq[15] = carryout2carry(pablo_blk_Advance(tmp108, carryQ.get_carry_in(15), tmp109));
        tmp110 = simd_and(tmp109, bytetest_a3_af);
        struct_Cn.cc = simd_or(tmp110, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_92 = simd_and(tmp71, tmp91);
        tmp111 = simd_and(basis_bits.bit_3, tmp15);
        tmp112 = simd_or(basis_bits.bit_2, tmp111);
        bytetest_92_bf = simd_and(bytetest_80_bf, tmp112);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp113 = simd_and(tmp93, bytetest_92_bf);
        carryQ.cq[16] = carryout2carry(pablo_blk_Advance(tmp113, carryQ.get_carry_in(16), tmp114));
        tmp115 = simd_and(tmp114, bytetest_80_bf);
        bytetest_91 = simd_and(tmp71, tmp11);
        bytetest_b4_bf = simd_and(tmp75, tmp4);
        tmp116 = simd_and(tmp109, bytetest_b4_bf);
        tmp117 = simd_or(tmp116, tmp115);
        struct_Cn.cc = simd_or(tmp117, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        tmp118 = simd_and(tmp44, tmp73);
        bytetest_96 = simd_and(tmp71, tmp118);
        bytetest_80_9f = simd_andc(bytetest_80_bf, basis_bits.bit_2);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp119 = simd_and(tmp23, bytetest_96);
        carryQ.cq[17] = carryout2carry(pablo_blk_Advance(tmp119, carryQ.get_carry_in(17), tmp120));
        tmp121 = simd_and(tmp120, bytetest_80_9f);
        carryQ.cq[18] = carryout2carry(pablo_blk_Advance(tmp121, carryQ.get_carry_in(18), tmp122));
        tmp123 = simd_and(tmp122, bytetest_80_bf);
        tmp124 = simd_andc(tmp44, basis_bits.bit_6);
        bytetest_94_95 = simd_and(tmp71, tmp124);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp125 = simd_and(tmp23, bytetest_94_95);
        carryQ.cq[19] = carryout2carry(pablo_blk_Advance(tmp125, carryQ.get_carry_in(19), tmp126));
        tmp127 = simd_and(tmp126, bytetest_80_bf);
        carryQ.cq[20] = carryout2carry(pablo_blk_Advance(tmp127, carryQ.get_carry_in(20), tmp128));
        tmp129 = simd_and(tmp128, bytetest_80_bf);
        bytetest_93 = simd_and(tmp71, tmp31);
        tmp130 = simd_and(basis_bits.bit_3, tmp6);
        tmp131 = simd_or(basis_bits.bit_2, tmp130);
        bytetest_91_bf = simd_and(bytetest_80_bf, tmp131);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp132 = simd_and(tmp23, bytetest_93);
        carryQ.cq[21] = carryout2carry(pablo_blk_Advance(tmp132, carryQ.get_carry_in(21), tmp133));
        tmp134 = simd_and(tmp133, bytetest_91_bf);
        carryQ.cq[22] = carryout2carry(pablo_blk_Advance(tmp134, carryQ.get_carry_in(22), tmp135));
        tmp136 = simd_and(tmp135, bytetest_80_bf);
        bytetest_90 = simd_andc(tmp71, tmp6);
        bytetest_af_bf = simd_and(tmp98, tmp100);
        tmp137 = simd_and(tmp133, bytetest_90);
        carryQ.cq[23] = carryout2carry(pablo_blk_Advance(tmp137, carryQ.get_carry_in(23), tmp138));
        tmp139 = simd_and(tmp138, bytetest_af_bf);
        tmp140 = simd_or(tmp139, tmp136);
        tmp141 = simd_or(tmp140, tmp129);
        tmp142 = simd_or(tmp141, tmp123);
        struct_Cn.cc = simd_or(tmp142, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_96 = simd_and(tmp71, tmp118);
        tmp143 = simd_not(tmp17);
        tmp144 = simd_and(basis_bits.bit_4, tmp40);
        tmp145 = simd_or(simd_and(basis_bits.bit_3, tmp143), simd_andc(tmp144, basis_bits.bit_3));
        bytetest_a9_bb = simd_and(tmp98, tmp145);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp146 = simd_and(tmp120, bytetest_a9_bb);
        carryQ.cq[24] = carryout2carry(pablo_blk_Advance(tmp146, carryQ.get_carry_in(24), tmp147));
        tmp148 = simd_and(tmp147, bytetest_80_bf);
        tmp149 = simd_andc(tmp72, tmp5);
        bytetest_a8 = simd_and(tmp105, tmp149);
        bytetest_b9_bf = simd_and(bytetest_b8_bf, tmp40);
        tmp150 = simd_and(tmp120, bytetest_a8);
        carryQ.cq[25] = carryout2carry(pablo_blk_Advance(tmp150, carryQ.get_carry_in(25), tmp151));
        tmp152 = simd_and(tmp151, bytetest_b9_bf);
        tmp153 = simd_or(tmp152, tmp148);
        struct_Cn.cc = simd_or(tmp153, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_96 = simd_and(tmp71, tmp118);
        bytetest_bd = simd_and(tmp75, tmp97);
        tmp154 = simd_and(basis_bits.bit_5, tmp5);
        tmp155 = simd_or(basis_bits.bit_4, tmp154);
        bytetest_85_8f = simd_and(tmp66, tmp155);
        tmp156 = simd_and(tmp120, bytetest_bd);
        carryQ.cq[26] = carryout2carry(pablo_blk_Advance(tmp156, carryQ.get_carry_in(26), tmp157));
        tmp158 = simd_and(tmp157, bytetest_85_8f);
        struct_Cn.cc = simd_or(tmp158, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_96 = simd_and(tmp71, tmp118);
        tmp159 = simd_and(tmp17, tmp73);
        bytetest_be = simd_and(tmp75, tmp159);
        tmp160 = simd_and(basis_bits.bit_5, tmp30);
        tmp161 = simd_and(basis_bits.bit_4, tmp160);
        bytetest_80_8e = simd_andc(tmp66, tmp161);
        tmp162 = simd_and(tmp120, bytetest_be);
        carryQ.cq[27] = carryout2carry(pablo_blk_Advance(tmp162, carryQ.get_carry_in(27), tmp163));
        tmp164 = simd_and(tmp163, bytetest_80_8e);
        bytetest_bd = simd_and(tmp75, tmp97);
        bytetest_bf_bf = simd_and(tmp75, tmp99);
        tmp165 = simd_and(tmp157, bytetest_bf_bf);
        tmp166 = simd_or(tmp165, tmp164);
        struct_Cn.cc = simd_or(tmp166, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        tmp167 = simd_not(tmp106);
        tmp168 = simd_or(simd_and(basis_bits.bit_4, tmp167), simd_andc(tmp160, basis_bits.bit_4));
        bytetest_97_9a = simd_and(tmp71, tmp168);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp169 = simd_and(tmp23, bytetest_97_9a);
        carryQ.cq[28] = carryout2carry(pablo_blk_Advance(tmp169, carryQ.get_carry_in(28), tmp170));
        tmp171 = simd_and(tmp170, bytetest_80_bf);
        carryQ.cq[29] = carryout2carry(pablo_blk_Advance(tmp171, carryQ.get_carry_in(29), tmp172));
        tmp173 = simd_and(tmp172, bytetest_80_bf);
        bytetest_96 = simd_and(tmp71, tmp118);
        bytetest_bf = simd_and(tmp75, tmp99);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp174 = simd_and(tmp120, bytetest_bf);
        carryQ.cq[30] = carryout2carry(pablo_blk_Advance(tmp174, carryQ.get_carry_in(30), tmp175));
        tmp176 = simd_and(tmp175, bytetest_80_bf);
        bytetest_be = simd_and(tmp75, tmp159);
        bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp177 = simd_and(tmp163, bytetest_a0_bf);
        tmp178 = simd_or(tmp177, tmp176);
        tmp179 = simd_or(tmp178, tmp173);
        struct_Cn.cc = simd_or(tmp179, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        tmp180 = simd_andc(tmp17, tmp5);
        bytetest_9c = simd_and(tmp71, tmp180);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp181 = simd_and(tmp23, bytetest_9c);
        carryQ.cq[31] = carryout2carry(pablo_blk_Advance(tmp181, carryQ.get_carry_in(31), tmp182));
        tmp183 = simd_and(tmp182, bytetest_80_bf);
        carryQ.cq[32] = carryout2carry(pablo_blk_Advance(tmp183, carryQ.get_carry_in(32), tmp184));
        tmp185 = simd_and(tmp184, bytetest_80_bf);
        bytetest_9b = simd_and(tmp71, tmp84);
        tmp186 = simd_or(basis_bits.bit_3, tmp6);
        tmp187 = simd_or(basis_bits.bit_2, tmp186);
        bytetest_81_bf = simd_and(bytetest_80_bf, tmp187);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp188 = simd_and(tmp23, bytetest_9b);
        carryQ.cq[33] = carryout2carry(pablo_blk_Advance(tmp188, carryQ.get_carry_in(33), tmp189));
        tmp190 = simd_and(tmp189, bytetest_81_bf);
        carryQ.cq[34] = carryout2carry(pablo_blk_Advance(tmp190, carryQ.get_carry_in(34), tmp191));
        tmp192 = simd_and(tmp191, bytetest_80_bf);
        bytetest_80 = simd_andc(tmp66, tmp6);
        tmp193 = simd_or(basis_bits.bit_3, tmp15);
        tmp194 = simd_or(basis_bits.bit_2, tmp193);
        bytetest_82_bf = simd_and(bytetest_80_bf, tmp194);
        tmp195 = simd_and(tmp189, bytetest_80);
        carryQ.cq[35] = carryout2carry(pablo_blk_Advance(tmp195, carryQ.get_carry_in(35), tmp196));
        tmp197 = simd_and(tmp196, bytetest_82_bf);
        tmp198 = simd_or(tmp197, tmp192);
        tmp199 = simd_or(tmp198, tmp185);
        struct_Cn.cc = simd_or(tmp199, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp71, tmp97);
        bytetest_83 = simd_and(tmp66, tmp31);
        tmp200 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
        tmp201 = simd_or(basis_bits.bit_4, tmp200);
        bytetest_b6_bf = simd_and(tmp75, tmp201);
        tmp202 = simd_and(tmp23, bytetest_9d);
        carryQ.cq[36] = carryout2carry(pablo_blk_Advance(tmp202, carryQ.get_carry_in(36), tmp203));
        tmp204 = simd_and(tmp203, bytetest_83);
        carryQ.cq[37] = carryout2carry(pablo_blk_Advance(tmp204, carryQ.get_carry_in(37), tmp205));
        tmp206 = simd_and(tmp205, bytetest_b6_bf);
        struct_Cn.cc = simd_or(tmp206, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp71, tmp97);
        bytetest_84 = simd_and(tmp66, tmp45);
        tmp207 = simd_not(tmp40);
        tmp208 = simd_or(simd_and(basis_bits.bit_4, tmp207), simd_andc(tmp160, basis_bits.bit_4));
        bytetest_a7_a8 = simd_and(tmp105, tmp208);
        tmp209 = simd_and(tmp203, bytetest_84);
        carryQ.cq[38] = carryout2carry(pablo_blk_Advance(tmp209, carryQ.get_carry_in(38), tmp210));
        tmp211 = simd_and(tmp210, bytetest_a7_a8);
        struct_Cn.cc = simd_or(tmp211, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp71, tmp97);
        bytetest_87 = simd_and(tmp66, tmp55);
        tmp212 = simd_and(basis_bits.bit_3, tmp18);
        tmp213 = simd_or(basis_bits.bit_2, tmp212);
        bytetest_9e_bf = simd_and(bytetest_80_bf, tmp213);
        tmp214 = simd_and(tmp203, bytetest_87);
        carryQ.cq[39] = carryout2carry(pablo_blk_Advance(tmp214, carryQ.get_carry_in(39), tmp215));
        tmp216 = simd_and(tmp215, bytetest_9e_bf);
        struct_Cn.cc = simd_or(tmp216, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp71, tmp97);
        tmp217 = simd_and(tmp72, basis_bits.bit_6);
        bytetest_8a_8b = simd_and(tmp66, tmp217);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp218 = simd_and(tmp203, bytetest_8a_8b);
        carryQ.cq[40] = carryout2carry(pablo_blk_Advance(tmp218, carryQ.get_carry_in(40), tmp219));
        tmp220 = simd_and(tmp219, bytetest_80_bf);
        tmp221 = simd_and(tmp72, tmp10);
        bytetest_89 = simd_and(tmp66, tmp221);
        tmp222 = simd_or(basis_bits.bit_3, tmp201);
        tmp223 = simd_or(basis_bits.bit_2, tmp222);
        bytetest_86_bf = simd_and(bytetest_80_bf, tmp223);
        tmp224 = simd_and(tmp203, bytetest_89);
        carryQ.cq[41] = carryout2carry(pablo_blk_Advance(tmp224, carryQ.get_carry_in(41), tmp225));
        tmp226 = simd_and(tmp225, bytetest_86_bf);
        tmp227 = simd_or(tmp226, tmp220);
        struct_Cn.cc = simd_or(tmp227, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp71, tmp97);
        bytetest_8d = simd_and(tmp66, tmp97);
        tmp228 = simd_or(basis_bits.bit_4, tmp160);
        bytetest_97_9f = simd_and(tmp71, tmp228);
        tmp229 = simd_and(tmp203, bytetest_8d);
        carryQ.cq[42] = carryout2carry(pablo_blk_Advance(tmp229, carryQ.get_carry_in(42), tmp230));
        tmp231 = simd_and(tmp230, bytetest_97_9f);
        struct_Cn.cc = simd_or(tmp231, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp71, tmp97);
        bytetest_8e_8f = simd_and(tmp66, tmp18);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp232 = simd_and(tmp203, bytetest_8e_8f);
        carryQ.cq[43] = carryout2carry(pablo_blk_Advance(tmp232, carryQ.get_carry_in(43), tmp233));
        tmp234 = simd_and(tmp233, bytetest_80_bf);
        bytetest_8d = simd_and(tmp66, tmp97);
        bytetest_b2_bf = simd_and(tmp75, tmp33);
        tmp235 = simd_and(tmp230, bytetest_b2_bf);
        tmp236 = simd_or(tmp235, tmp234);
        struct_Cn.cc = simd_or(tmp236, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp71, tmp97);
        bytetest_91 = simd_and(tmp71, tmp11);
        bytetest_95_95 = simd_and(tmp71, tmp46);
        tmp237 = simd_and(tmp203, bytetest_91);
        carryQ.cq[44] = carryout2carry(pablo_blk_Advance(tmp237, carryQ.get_carry_in(44), tmp238));
        tmp239 = simd_and(tmp238, bytetest_95_95);
        struct_Cn.cc = simd_or(tmp239, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp71, tmp97);
        bytetest_92 = simd_and(tmp71, tmp91);
        bytetest_9d_9d = simd_and(tmp71, tmp97);
        tmp240 = simd_and(tmp203, bytetest_92);
        carryQ.cq[45] = carryout2carry(pablo_blk_Advance(tmp240, carryQ.get_carry_in(45), tmp241));
        tmp242 = simd_and(tmp241, bytetest_9d_9d);
        struct_Cn.cc = simd_or(tmp242, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp71, tmp97);
        bytetest_92 = simd_and(tmp71, tmp91);
        bytetest_a0_a1 = simd_andc(tmp105, tmp15);
        tmp243 = simd_and(tmp241, bytetest_a0_a1);
        struct_Cn.cc = simd_or(tmp243, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp71, tmp97);
        bytetest_92 = simd_and(tmp71, tmp91);
        tmp244 = simd_andc(tmp105, basis_bits.bit_4);
        tmp245 = simd_not(tmp5);
        tmp246 = simd_or(simd_and(basis_bits.bit_5, tmp245), simd_andc(tmp30, basis_bits.bit_5));
        bytetest_a3_a4 = simd_and(tmp244, tmp246);
        tmp247 = simd_and(tmp241, bytetest_a3_a4);
        struct_Cn.cc = simd_or(tmp247, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp71, tmp97);
        bytetest_92 = simd_and(tmp71, tmp91);
        bytetest_a7_a8 = simd_and(tmp105, tmp208);
        tmp248 = simd_and(tmp241, bytetest_a7_a8);
        struct_Cn.cc = simd_or(tmp248, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp71, tmp97);
        bytetest_92 = simd_and(tmp71, tmp91);
        bytetest_ad_ad = simd_and(tmp105, tmp97);
        tmp249 = simd_and(tmp241, bytetest_ad_ad);
        struct_Cn.cc = simd_or(tmp249, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp71, tmp97);
        bytetest_92 = simd_and(tmp71, tmp91);
        bytetest_ba_ba = simd_and(tmp75, tmp74);
        tmp250 = simd_and(tmp241, bytetest_ba_ba);
        struct_Cn.cc = simd_or(tmp250, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp71, tmp97);
        bytetest_92 = simd_and(tmp71, tmp91);
        bytetest_bc_bc = simd_and(tmp75, tmp180);
        tmp251 = simd_and(tmp241, bytetest_bc_bc);
        struct_Cn.cc = simd_or(tmp251, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp71, tmp97);
        bytetest_93 = simd_and(tmp71, tmp31);
        bytetest_84_84 = simd_and(tmp66, tmp45);
        tmp252 = simd_and(tmp203, bytetest_93);
        carryQ.cq[46] = carryout2carry(pablo_blk_Advance(tmp252, carryQ.get_carry_in(46), tmp253));
        tmp254 = simd_and(tmp253, bytetest_84_84);
        struct_Cn.cc = simd_or(tmp254, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp71, tmp97);
        bytetest_94 = simd_and(tmp71, tmp45);
        bytetest_86_86 = simd_and(tmp66, tmp118);
        tmp255 = simd_and(tmp203, bytetest_94);
        carryQ.cq[47] = carryout2carry(pablo_blk_Advance(tmp255, carryQ.get_carry_in(47), tmp256));
        tmp257 = simd_and(tmp256, bytetest_86_86);
        struct_Cn.cc = simd_or(tmp257, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp71, tmp97);
        bytetest_94 = simd_and(tmp71, tmp45);
        tmp258 = simd_and(tmp66, basis_bits.bit_4);
        bytetest_8b_8c = simd_and(tmp258, tmp246);
        tmp259 = simd_and(tmp256, bytetest_8b_8c);
        struct_Cn.cc = simd_or(tmp259, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp71, tmp97);
        bytetest_94 = simd_and(tmp71, tmp45);
        bytetest_95_95 = simd_and(tmp71, tmp46);
        tmp260 = simd_and(tmp256, bytetest_95_95);
        struct_Cn.cc = simd_or(tmp260, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp71, tmp97);
        bytetest_94 = simd_and(tmp71, tmp45);
        bytetest_9d_9d = simd_and(tmp71, tmp97);
        tmp261 = simd_and(tmp256, bytetest_9d_9d);
        struct_Cn.cc = simd_or(tmp261, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp71, tmp97);
        bytetest_94 = simd_and(tmp71, tmp45);
        bytetest_ba_ba = simd_and(tmp75, tmp74);
        tmp262 = simd_and(tmp256, bytetest_ba_ba);
        struct_Cn.cc = simd_or(tmp262, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp71, tmp97);
        bytetest_94 = simd_and(tmp71, tmp45);
        bytetest_bf_bf = simd_and(tmp75, tmp99);
        tmp263 = simd_and(tmp256, bytetest_bf_bf);
        struct_Cn.cc = simd_or(tmp263, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp71, tmp97);
        bytetest_95 = simd_and(tmp71, tmp46);
        bytetest_85_85 = simd_and(tmp66, tmp46);
        tmp264 = simd_and(tmp203, bytetest_95);
        carryQ.cq[48] = carryout2carry(pablo_blk_Advance(tmp264, carryQ.get_carry_in(48), tmp265));
        tmp266 = simd_and(tmp265, bytetest_85_85);
        struct_Cn.cc = simd_or(tmp266, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp71, tmp97);
        bytetest_95 = simd_and(tmp71, tmp46);
        tmp267 = simd_not(tmp32);
        tmp268 = simd_or(simd_and(basis_bits.bit_4, tmp267), simd_andc(tmp160, basis_bits.bit_4));
        bytetest_87_89 = simd_and(tmp66, tmp268);
        tmp269 = simd_and(tmp265, bytetest_87_89);
        struct_Cn.cc = simd_or(tmp269, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp71, tmp97);
        bytetest_95 = simd_and(tmp71, tmp46);
        bytetest_91_91 = simd_and(tmp71, tmp11);
        tmp270 = simd_and(tmp265, bytetest_91_91);
        struct_Cn.cc = simd_or(tmp270, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp71, tmp97);
        bytetest_9a = simd_and(tmp71, tmp74);
        tmp271 = simd_and(tmp44, basis_bits.bit_6);
        bytetest_a6_a7 = simd_and(tmp105, tmp271);
        tmp272 = simd_and(tmp203, bytetest_9a);
        carryQ.cq[49] = carryout2carry(pablo_blk_Advance(tmp272, carryQ.get_carry_in(49), tmp273));
        tmp274 = simd_and(tmp273, bytetest_a6_a7);
        struct_Cn.cc = simd_or(tmp274, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp71, tmp97);
        bytetest_9f = simd_and(tmp71, tmp99);
        tmp275 = simd_andc(tmp17, basis_bits.bit_6);
        bytetest_8c_8d = simd_and(tmp66, tmp275);
        tmp276 = simd_and(tmp203, bytetest_9f);
        carryQ.cq[50] = carryout2carry(pablo_blk_Advance(tmp276, carryQ.get_carry_in(50), tmp277));
        tmp278 = simd_and(tmp277, bytetest_8c_8d);
        struct_Cn.cc = simd_or(tmp278, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        tmp279 = simd_and(basis_bits.bit_3, basis_bits.bit_4);
        tmp280 = simd_and(basis_bits.bit_2, tmp279);
        bytetest_80_b7 = simd_andc(bytetest_80_bf, tmp280);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp281 = simd_and(tmp23, bytetest_9e);
        carryQ.cq[51] = carryout2carry(pablo_blk_Advance(tmp281, carryQ.get_carry_in(51), tmp282));
        tmp283 = simd_and(tmp282, bytetest_80_b7);
        carryQ.cq[52] = carryout2carry(pablo_blk_Advance(tmp283, carryQ.get_carry_in(52), tmp284));
        tmp285 = simd_and(tmp284, bytetest_80_bf);
        bytetest_9d = simd_and(tmp71, tmp97);
        bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp286 = simd_and(tmp203, bytetest_a0_bf);
        carryQ.cq[53] = carryout2carry(pablo_blk_Advance(tmp286, carryQ.get_carry_in(53), tmp287));
        tmp288 = simd_and(tmp287, bytetest_80_bf);
        tmp289 = simd_or(tmp288, tmp285);
        struct_Cn.cc = simd_or(tmp289, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_b8 = simd_and(tmp75, tmp149);
        bytetest_84_84 = simd_and(tmp66, tmp45);
        tmp290 = simd_and(tmp282, bytetest_b8);
        carryQ.cq[54] = carryout2carry(pablo_blk_Advance(tmp290, carryQ.get_carry_in(54), tmp291));
        tmp292 = simd_and(tmp291, bytetest_84_84);
        struct_Cn.cc = simd_or(tmp292, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_b8 = simd_and(tmp75, tmp149);
        bytetest_a0_a0 = simd_andc(tmp105, tmp6);
        tmp293 = simd_and(tmp291, bytetest_a0_a0);
        struct_Cn.cc = simd_or(tmp293, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_b8 = simd_and(tmp75, tmp149);
        bytetest_a3_a3 = simd_and(tmp105, tmp31);
        tmp294 = simd_and(tmp291, bytetest_a3_a3);
        struct_Cn.cc = simd_or(tmp294, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_b8 = simd_and(tmp75, tmp149);
        tmp295 = simd_and(tmp105, tmp44);
        tmp296 = simd_not(basis_bits.bit_7);
        tmp297 = simd_or(simd_and(basis_bits.bit_6, tmp296), simd_andc(basis_bits.bit_7, basis_bits.bit_6));
        bytetest_a5_a6 = simd_and(tmp295, tmp297);
        tmp298 = simd_and(tmp291, bytetest_a5_a6);
        struct_Cn.cc = simd_or(tmp298, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_b8 = simd_and(tmp75, tmp149);
        bytetest_a8_a8 = simd_and(tmp105, tmp149);
        tmp299 = simd_and(tmp291, bytetest_a8_a8);
        struct_Cn.cc = simd_or(tmp299, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_b8 = simd_and(tmp75, tmp149);
        bytetest_b3_b3 = simd_and(tmp75, tmp31);
        tmp300 = simd_and(tmp291, bytetest_b3_b3);
        struct_Cn.cc = simd_or(tmp300, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_b8 = simd_and(tmp75, tmp149);
        bytetest_b8_b8 = simd_and(tmp75, tmp149);
        tmp301 = simd_and(tmp291, bytetest_b8_b8);
        struct_Cn.cc = simd_or(tmp301, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_b8 = simd_and(tmp75, tmp149);
        bytetest_ba_ba = simd_and(tmp75, tmp74);
        tmp302 = simd_and(tmp291, bytetest_ba_ba);
        struct_Cn.cc = simd_or(tmp302, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_b9 = simd_and(tmp75, tmp221);
        bytetest_80_81 = simd_andc(tmp66, tmp15);
        tmp303 = simd_and(tmp282, bytetest_b9);
        carryQ.cq[55] = carryout2carry(pablo_blk_Advance(tmp303, carryQ.get_carry_in(55), tmp304));
        tmp305 = simd_and(tmp304, bytetest_80_81);
        bytetest_b8 = simd_and(tmp75, tmp149);
        bytetest_bc_bf = simd_and(tmp75, tmp17);
        tmp306 = simd_and(tmp291, bytetest_bc_bf);
        tmp307 = simd_or(tmp306, tmp305);
        struct_Cn.cc = simd_or(tmp307, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_b9 = simd_and(tmp75, tmp221);
        tmp308 = simd_andc(tmp66, basis_bits.bit_4);
        tmp309 = simd_not(tmp30);
        tmp310 = simd_or(simd_and(basis_bits.bit_5, tmp309), simd_andc(tmp30, basis_bits.bit_5));
        bytetest_83_86 = simd_and(tmp308, tmp310);
        tmp311 = simd_and(tmp304, bytetest_83_86);
        struct_Cn.cc = simd_or(tmp311, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_b9 = simd_and(tmp75, tmp221);
        bytetest_88_88 = simd_and(tmp66, tmp149);
        tmp312 = simd_and(tmp304, bytetest_88_88);
        struct_Cn.cc = simd_or(tmp312, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_b9 = simd_and(tmp75, tmp221);
        bytetest_8a_8a = simd_and(tmp66, tmp74);
        tmp313 = simd_and(tmp304, bytetest_8a_8a);
        struct_Cn.cc = simd_or(tmp313, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_b9 = simd_and(tmp75, tmp221);
        bytetest_8c_8c = simd_and(tmp66, tmp180);
        tmp314 = simd_and(tmp304, bytetest_8c_8c);
        struct_Cn.cc = simd_or(tmp314, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_b9 = simd_and(tmp75, tmp221);
        bytetest_90_90 = simd_andc(tmp71, tmp6);
        tmp315 = simd_and(tmp304, bytetest_90_90);
        struct_Cn.cc = simd_or(tmp315, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_b9 = simd_and(tmp75, tmp221);
        bytetest_93_93 = simd_and(tmp71, tmp31);
        tmp316 = simd_and(tmp304, bytetest_93_93);
        struct_Cn.cc = simd_or(tmp316, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_b9 = simd_and(tmp75, tmp221);
        tmp317 = simd_and(tmp71, tmp44);
        bytetest_95_96 = simd_and(tmp317, tmp297);
        tmp318 = simd_and(tmp304, bytetest_95_96);
        struct_Cn.cc = simd_or(tmp318, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_b9 = simd_and(tmp75, tmp221);
        bytetest_98_98 = simd_and(tmp71, tmp149);
        tmp319 = simd_and(tmp304, bytetest_98_98);
        struct_Cn.cc = simd_or(tmp319, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_b9 = simd_and(tmp75, tmp221);
        bytetest_9a_9a = simd_and(tmp71, tmp74);
        tmp320 = simd_and(tmp304, bytetest_9a_9a);
        struct_Cn.cc = simd_or(tmp320, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_b9 = simd_and(tmp75, tmp221);
        bytetest_9c_9c = simd_and(tmp71, tmp180);
        tmp321 = simd_and(tmp304, bytetest_9c_9c);
        struct_Cn.cc = simd_or(tmp321, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_b9 = simd_and(tmp75, tmp221);
        bytetest_9e_9e = simd_and(tmp71, tmp159);
        tmp322 = simd_and(tmp304, bytetest_9e_9e);
        struct_Cn.cc = simd_or(tmp322, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_b9 = simd_and(tmp75, tmp221);
        bytetest_a0_a0 = simd_andc(tmp105, tmp6);
        tmp323 = simd_and(tmp304, bytetest_a0_a0);
        struct_Cn.cc = simd_or(tmp323, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_b9 = simd_and(tmp75, tmp221);
        bytetest_a3_a3 = simd_and(tmp105, tmp31);
        tmp324 = simd_and(tmp304, bytetest_a3_a3);
        struct_Cn.cc = simd_or(tmp324, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_b9 = simd_and(tmp75, tmp221);
        bytetest_a5_a6 = simd_and(tmp295, tmp297);
        tmp325 = simd_and(tmp304, bytetest_a5_a6);
        struct_Cn.cc = simd_or(tmp325, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_b9 = simd_and(tmp75, tmp221);
        bytetest_ab_ab = simd_and(tmp105, tmp84);
        tmp326 = simd_and(tmp304, bytetest_ab_ab);
        struct_Cn.cc = simd_or(tmp326, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_b9 = simd_and(tmp75, tmp221);
        bytetest_b3_b3 = simd_and(tmp75, tmp31);
        tmp327 = simd_and(tmp304, bytetest_b3_b3);
        struct_Cn.cc = simd_or(tmp327, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_b9 = simd_and(tmp75, tmp221);
        bytetest_b8_b8 = simd_and(tmp75, tmp149);
        tmp328 = simd_and(tmp304, bytetest_b8_b8);
        struct_Cn.cc = simd_or(tmp328, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_b9 = simd_and(tmp75, tmp221);
        bytetest_bd_bd = simd_and(tmp75, tmp97);
        tmp329 = simd_and(tmp304, bytetest_bd_bd);
        struct_Cn.cc = simd_or(tmp329, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_b9 = simd_and(tmp75, tmp221);
        bytetest_bf_bf = simd_and(tmp75, tmp99);
        tmp330 = simd_and(tmp304, bytetest_bf_bf);
        struct_Cn.cc = simd_or(tmp330, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_ba = simd_and(tmp75, tmp74);
        bytetest_8a_8a = simd_and(tmp66, tmp74);
        tmp331 = simd_and(tmp282, bytetest_ba);
        carryQ.cq[56] = carryout2carry(pablo_blk_Advance(tmp331, carryQ.get_carry_in(56), tmp332));
        tmp333 = simd_and(tmp332, bytetest_8a_8a);
        struct_Cn.cc = simd_or(tmp333, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_ba = simd_and(tmp75, tmp74);
        tmp334 = simd_not(tmp186);
        tmp335 = simd_or(simd_and(basis_bits.bit_2, tmp334), simd_andc(tmp79, basis_bits.bit_2));
        bytetest_9c_a0 = simd_and(bytetest_80_bf, tmp335);
        tmp336 = simd_and(tmp332, bytetest_9c_a0);
        struct_Cn.cc = simd_or(tmp336, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_ba = simd_and(tmp75, tmp74);
        bytetest_a4_a4 = simd_and(tmp105, tmp45);
        tmp337 = simd_and(tmp332, bytetest_a4_a4);
        struct_Cn.cc = simd_or(tmp337, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_ba = simd_and(tmp75, tmp74);
        bytetest_aa_aa = simd_and(tmp105, tmp74);
        tmp338 = simd_and(tmp332, bytetest_aa_aa);
        struct_Cn.cc = simd_or(tmp338, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_bb = simd_and(tmp75, tmp84);
        bytetest_80_af = simd_andc(bytetest_80_bf, tmp2);
        tmp339 = simd_and(tmp282, bytetest_bb);
        carryQ.cq[57] = carryout2carry(pablo_blk_Advance(tmp339, carryQ.get_carry_in(57), tmp340));
        tmp341 = simd_and(tmp340, bytetest_80_af);
        bytetest_ba = simd_and(tmp75, tmp74);
        bytetest_bc_bf = simd_and(tmp75, tmp17);
        tmp342 = simd_and(tmp332, bytetest_bc_bf);
        tmp343 = simd_or(tmp342, tmp341);
        struct_Cn.cc = simd_or(tmp343, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9e = simd_and(tmp71, tmp159);
        bytetest_bc_bf = simd_and(tmp75, tmp17);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp344 = simd_and(tmp282, bytetest_bc_bf);
        carryQ.cq[58] = carryout2carry(pablo_blk_Advance(tmp344, carryQ.get_carry_in(58), tmp345));
        tmp346 = simd_and(tmp345, bytetest_80_bf);
        bytetest_bb = simd_and(tmp75, tmp84);
        bytetest_b2_bf = simd_and(tmp75, tmp33);
        tmp347 = simd_and(tmp340, bytetest_b2_bf);
        tmp348 = simd_or(tmp347, tmp346);
        struct_Cn.cc = simd_or(tmp348, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp71, tmp99);
        bytetest_80 = simd_andc(tmp66, tmp6);
        bytetest_ac_af = simd_and(tmp105, tmp17);
        tmp349 = simd_and(tmp23, bytetest_9f);
        carryQ.cq[59] = carryout2carry(pablo_blk_Advance(tmp349, carryQ.get_carry_in(59), tmp350));
        tmp351 = simd_and(tmp350, bytetest_80);
        carryQ.cq[60] = carryout2carry(pablo_blk_Advance(tmp351, carryQ.get_carry_in(60), tmp352));
        tmp353 = simd_and(tmp352, bytetest_ac_af);
        struct_Cn.cc = simd_or(tmp353, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp71, tmp99);
        bytetest_82 = simd_and(tmp66, tmp91);
        bytetest_94_9f = simd_and(tmp71, tmp4);
        tmp354 = simd_and(tmp350, bytetest_82);
        carryQ.cq[61] = carryout2carry(pablo_blk_Advance(tmp354, carryQ.get_carry_in(61), tmp355));
        tmp356 = simd_and(tmp355, bytetest_94_9f);
        struct_Cn.cc = simd_or(tmp356, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp71, tmp99);
        bytetest_82 = simd_and(tmp66, tmp91);
        tmp357 = simd_not(tmp6);
        tmp358 = simd_or(simd_and(basis_bits.bit_3, tmp357), simd_andc(tmp99, basis_bits.bit_3));
        bytetest_af_b0 = simd_and(bytetest_a0_bf, tmp358);
        tmp359 = simd_and(tmp355, bytetest_af_b0);
        struct_Cn.cc = simd_or(tmp359, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp71, tmp99);
        bytetest_83 = simd_and(tmp66, tmp31);
        bytetest_80_80 = simd_andc(tmp66, tmp6);
        tmp360 = simd_and(tmp350, bytetest_83);
        carryQ.cq[62] = carryout2carry(pablo_blk_Advance(tmp360, carryQ.get_carry_in(62), tmp361));
        tmp362 = simd_and(tmp361, bytetest_80_80);
        bytetest_82 = simd_and(tmp66, tmp91);
        bytetest_bf_bf = simd_and(tmp75, tmp99);
        tmp363 = simd_and(tmp355, bytetest_bf_bf);
        tmp364 = simd_or(tmp363, tmp362);
        struct_Cn.cc = simd_or(tmp364, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp71, tmp99);
        bytetest_83 = simd_and(tmp66, tmp31);
        bytetest_90_90 = simd_andc(tmp71, tmp6);
        tmp365 = simd_and(tmp361, bytetest_90_90);
        struct_Cn.cc = simd_or(tmp365, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp71, tmp99);
        bytetest_83 = simd_and(tmp66, tmp31);
        bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp366 = simd_and(tmp361, bytetest_a0_bf);
        struct_Cn.cc = simd_or(tmp366, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp71, tmp99);
        bytetest_84 = simd_and(tmp66, tmp45);
        bytetest_8b_8f = simd_and(tmp258, tmp106);
        tmp367 = simd_and(tmp350, bytetest_84);
        carryQ.cq[63] = carryout2carry(pablo_blk_Advance(tmp367, carryQ.get_carry_in(63), tmp368));
        tmp369 = simd_and(tmp368, bytetest_8b_8f);
        struct_Cn.cc = simd_or(tmp369, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp71, tmp99);
        bytetest_84 = simd_and(tmp66, tmp45);
        bytetest_af_af = simd_and(tmp105, tmp99);
        tmp370 = simd_and(tmp368, bytetest_af_af);
        struct_Cn.cc = simd_or(tmp370, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp71, tmp99);
        bytetest_85 = simd_and(tmp66, tmp46);
        bytetest_ac_af = simd_and(tmp105, tmp17);
        tmp371 = simd_and(tmp350, bytetest_85);
        carryQ.cq[64] = carryout2carry(pablo_blk_Advance(tmp371, carryQ.get_carry_in(64), tmp372));
        tmp373 = simd_and(tmp372, bytetest_ac_af);
        struct_Cn.cc = simd_or(tmp373, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp71, tmp99);
        bytetest_87 = simd_and(tmp66, tmp55);
        tmp374 = simd_and(basis_bits.bit_2, tmp222);
        bytetest_80_a5 = simd_andc(bytetest_80_bf, tmp374);
        tmp375 = simd_and(tmp350, bytetest_87);
        carryQ.cq[65] = carryout2carry(pablo_blk_Advance(tmp375, carryQ.get_carry_in(65), tmp376));
        tmp377 = simd_and(tmp376, bytetest_80_a5);
        bytetest_86 = simd_and(tmp66, tmp118);
        tmp378 = simd_and(basis_bits.bit_4, tmp106);
        tmp379 = simd_and(basis_bits.bit_3, tmp378);
        tmp380 = simd_or(basis_bits.bit_2, tmp379);
        bytetest_9b_bf = simd_and(bytetest_80_bf, tmp380);
        tmp381 = simd_and(tmp350, bytetest_86);
        carryQ.cq[66] = carryout2carry(pablo_blk_Advance(tmp381, carryQ.get_carry_in(66), tmp382));
        tmp383 = simd_and(tmp382, bytetest_9b_bf);
        tmp384 = simd_or(tmp383, tmp377);
        struct_Cn.cc = simd_or(tmp384, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp71, tmp99);
        bytetest_88 = simd_and(tmp66, tmp149);
        bytetest_83_8f = simd_and(tmp66, tmp107);
        tmp385 = simd_and(tmp350, bytetest_88);
        carryQ.cq[67] = carryout2carry(pablo_blk_Advance(tmp385, carryQ.get_carry_in(67), tmp386));
        tmp387 = simd_and(tmp386, bytetest_83_8f);
        struct_Cn.cc = simd_or(tmp387, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp71, tmp99);
        bytetest_88 = simd_and(tmp66, tmp149);
        bytetest_bb_bf = simd_and(bytetest_b8_bf, tmp106);
        tmp388 = simd_and(tmp386, bytetest_bb_bf);
        struct_Cn.cc = simd_or(tmp388, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp71, tmp99);
        bytetest_89 = simd_and(tmp66, tmp221);
        bytetest_89_8f = simd_and(tmp258, tmp40);
        tmp389 = simd_and(tmp350, bytetest_89);
        carryQ.cq[68] = carryout2carry(pablo_blk_Advance(tmp389, carryQ.get_carry_in(68), tmp390));
        tmp391 = simd_and(tmp390, bytetest_89_8f);
        struct_Cn.cc = simd_or(tmp391, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp71, tmp99);
        bytetest_8a_8b = simd_and(tmp66, tmp217);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp392 = simd_and(tmp350, bytetest_8a_8b);
        carryQ.cq[69] = carryout2carry(pablo_blk_Advance(tmp392, carryQ.get_carry_in(69), tmp393));
        tmp394 = simd_and(tmp393, bytetest_80_bf);
        bytetest_89 = simd_and(tmp66, tmp221);
        bytetest_92_bf = simd_and(bytetest_80_bf, tmp112);
        tmp395 = simd_and(tmp390, bytetest_92_bf);
        tmp396 = simd_or(tmp395, tmp394);
        struct_Cn.cc = simd_or(tmp396, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp71, tmp99);
        bytetest_8c = simd_and(tmp66, tmp180);
        tmp397 = simd_or(basis_bits.bit_4, tmp40);
        bytetest_a1_af = simd_and(tmp105, tmp397);
        tmp398 = simd_and(tmp350, bytetest_8c);
        carryQ.cq[70] = carryout2carry(pablo_blk_Advance(tmp398, carryQ.get_carry_in(70), tmp399));
        tmp400 = simd_and(tmp399, bytetest_a1_af);
        struct_Cn.cc = simd_or(tmp400, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp71, tmp99);
        bytetest_8c = simd_and(tmp66, tmp180);
        bytetest_b6_b6 = simd_and(tmp75, tmp118);
        tmp401 = simd_and(tmp399, bytetest_b6_b6);
        struct_Cn.cc = simd_or(tmp401, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp71, tmp99);
        bytetest_8d = simd_and(tmp66, tmp97);
        bytetest_bd_bf = simd_and(bytetest_bc_bf, tmp5);
        tmp402 = simd_and(tmp350, bytetest_8d);
        carryQ.cq[71] = carryout2carry(pablo_blk_Advance(tmp402, carryQ.get_carry_in(71), tmp403));
        tmp404 = simd_and(tmp403, bytetest_bd_bf);
        struct_Cn.cc = simd_or(tmp404, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp71, tmp99);
        bytetest_8e = simd_and(tmp66, tmp159);
        bytetest_94_9f = simd_and(tmp71, tmp4);
        tmp405 = simd_and(tmp350, bytetest_8e);
        carryQ.cq[72] = carryout2carry(pablo_blk_Advance(tmp405, carryQ.get_carry_in(72), tmp406));
        tmp407 = simd_and(tmp406, bytetest_94_9f);
        struct_Cn.cc = simd_or(tmp407, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp71, tmp99);
        bytetest_8f = simd_and(tmp66, tmp99);
        bytetest_85_85 = simd_and(tmp66, tmp46);
        tmp408 = simd_and(tmp350, bytetest_8f);
        carryQ.cq[73] = carryout2carry(pablo_blk_Advance(tmp408, carryQ.get_carry_in(73), tmp409));
        tmp410 = simd_and(tmp409, bytetest_85_85);
        struct_Cn.cc = simd_or(tmp410, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp71, tmp99);
        bytetest_8f = simd_and(tmp66, tmp99);
        tmp411 = simd_or(basis_bits.bit_3, tmp378);
        bytetest_8b_9f = simd_and(bytetest_80_9f, tmp411);
        tmp412 = simd_and(tmp409, bytetest_8b_9f);
        struct_Cn.cc = simd_or(tmp412, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp71, tmp99);
        bytetest_8f = simd_and(tmp66, tmp99);
        bytetest_b1_bf = simd_and(tmp75, tmp397);
        tmp413 = simd_and(tmp409, bytetest_b1_bf);
        struct_Cn.cc = simd_or(tmp413, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp71, tmp99);
        bytetest_90 = simd_andc(tmp71, tmp6);
        bytetest_bf_bf = simd_and(tmp75, tmp99);
        tmp414 = simd_and(tmp350, bytetest_90);
        carryQ.cq[74] = carryout2carry(pablo_blk_Advance(tmp414, carryQ.get_carry_in(74), tmp415));
        tmp416 = simd_and(tmp415, bytetest_bf_bf);
        struct_Cn.cc = simd_or(tmp416, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp71, tmp99);
        bytetest_91 = simd_and(tmp71, tmp11);
        bytetest_81_81 = simd_and(tmp66, tmp11);
        tmp417 = simd_and(tmp350, bytetest_91);
        carryQ.cq[75] = carryout2carry(pablo_blk_Advance(tmp417, carryQ.get_carry_in(75), tmp418));
        tmp419 = simd_and(tmp418, bytetest_81_81);
        struct_Cn.cc = simd_or(tmp419, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp71, tmp99);
        bytetest_93 = simd_and(tmp71, tmp31);
        bytetest_b8_b8 = simd_and(tmp75, tmp149);
        tmp420 = simd_and(tmp350, bytetest_93);
        carryQ.cq[76] = carryout2carry(pablo_blk_Advance(tmp420, carryQ.get_carry_in(76), tmp421));
        tmp422 = simd_and(tmp421, bytetest_b8_b8);
        struct_Cn.cc = simd_or(tmp422, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp71, tmp99);
        bytetest_93 = simd_and(tmp71, tmp31);
        bytetest_bd_bf = simd_and(bytetest_bc_bf, tmp5);
        tmp423 = simd_and(tmp421, bytetest_bd_bf);
        struct_Cn.cc = simd_or(tmp423, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp71, tmp99);
        bytetest_94 = simd_and(tmp71, tmp45);
        bytetest_be_bf = simd_and(tmp75, tmp18);
        tmp424 = simd_and(tmp350, bytetest_94);
        carryQ.cq[77] = carryout2carry(pablo_blk_Advance(tmp424, carryQ.get_carry_in(77), tmp425));
        tmp426 = simd_and(tmp425, bytetest_be_bf);
        struct_Cn.cc = simd_or(tmp426, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp71, tmp99);
        bytetest_95 = simd_and(tmp71, tmp46);
        bytetest_84_8f = simd_and(tmp66, tmp4);
        tmp427 = simd_and(tmp350, bytetest_95);
        carryQ.cq[78] = carryout2carry(pablo_blk_Advance(tmp427, carryQ.get_carry_in(78), tmp428));
        tmp429 = simd_and(tmp428, bytetest_84_8f);
        struct_Cn.cc = simd_or(tmp429, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp71, tmp99);
        bytetest_97 = simd_and(tmp71, tmp55);
        tmp430 = simd_and(basis_bits.bit_2, tmp379);
        bytetest_80_ba = simd_andc(bytetest_80_bf, tmp430);
        tmp431 = simd_and(tmp350, bytetest_97);
        carryQ.cq[79] = carryout2carry(pablo_blk_Advance(tmp431, carryQ.get_carry_in(79), tmp432));
        tmp433 = simd_and(tmp432, bytetest_80_ba);
        bytetest_96 = simd_and(tmp71, tmp118);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp434 = simd_and(tmp350, bytetest_96);
        carryQ.cq[80] = carryout2carry(pablo_blk_Advance(tmp434, carryQ.get_carry_in(80), tmp435));
        tmp436 = simd_and(tmp435, bytetest_80_bf);
        bytetest_95 = simd_and(tmp71, tmp46);
        tmp437 = simd_or(basis_bits.bit_3, basis_bits.bit_4);
        bytetest_a8_bf = simd_and(bytetest_a0_bf, tmp437);
        tmp438 = simd_and(tmp428, bytetest_a8_bf);
        tmp439 = simd_or(tmp438, tmp436);
        tmp440 = simd_or(tmp439, tmp433);
        struct_Cn.cc = simd_or(tmp440, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp71, tmp99);
        bytetest_99 = simd_and(tmp71, tmp221);
        tmp441 = simd_or(simd_and(basis_bits.bit_5, tmp245), simd_andc(tmp5, basis_bits.bit_5));
        bytetest_81_84 = simd_and(tmp308, tmp441);
        tmp442 = simd_and(tmp350, bytetest_99);
        carryQ.cq[81] = carryout2carry(pablo_blk_Advance(tmp442, carryQ.get_carry_in(81), tmp443));
        tmp444 = simd_and(tmp443, bytetest_81_84);
        struct_Cn.cc = simd_or(tmp444, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp71, tmp99);
        bytetest_99 = simd_and(tmp71, tmp221);
        bytetest_90_bf = simd_and(bytetest_80_bf, tmp12);
        tmp445 = simd_and(tmp443, bytetest_90_bf);
        struct_Cn.cc = simd_or(tmp445, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp71, tmp99);
        bytetest_9b = simd_and(tmp71, tmp84);
        bytetest_86_bf = simd_and(bytetest_80_bf, tmp223);
        tmp446 = simd_and(tmp350, bytetest_9b);
        carryQ.cq[82] = carryout2carry(pablo_blk_Advance(tmp446, carryQ.get_carry_in(82), tmp447));
        tmp448 = simd_and(tmp447, bytetest_86_bf);
        struct_Cn.cc = simd_or(tmp448, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9f = simd_and(tmp71, tmp99);
        bytetest_9e_bf = simd_and(bytetest_80_bf, tmp213);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp449 = simd_and(tmp350, bytetest_9e_bf);
        carryQ.cq[83] = carryout2carry(pablo_blk_Advance(tmp449, carryQ.get_carry_in(83), tmp450));
        tmp451 = simd_and(tmp450, bytetest_80_bf);
        bytetest_9d = simd_and(tmp71, tmp97);
        bytetest_b4_bf = simd_and(tmp75, tmp4);
        tmp452 = simd_and(tmp350, bytetest_9d);
        carryQ.cq[84] = carryout2carry(pablo_blk_Advance(tmp452, carryQ.get_carry_in(84), tmp453));
        tmp454 = simd_and(tmp453, bytetest_b4_bf);
        tmp455 = simd_or(tmp454, tmp451);
        struct_Cn.cc = simd_or(tmp455, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_aa = simd_and(tmp105, tmp74);
        bytetest_9b = simd_and(tmp71, tmp84);
        tmp456 = simd_and(basis_bits.bit_3, tmp228);
        tmp457 = simd_or(basis_bits.bit_2, tmp456);
        bytetest_97_bf = simd_and(bytetest_80_bf, tmp457);
        tmp458 = simd_and(tmp23, bytetest_aa);
        carryQ.cq[85] = carryout2carry(pablo_blk_Advance(tmp458, carryQ.get_carry_in(85), tmp459));
        tmp460 = simd_and(tmp459, bytetest_9b);
        carryQ.cq[86] = carryout2carry(pablo_blk_Advance(tmp460, carryQ.get_carry_in(86), tmp461));
        tmp462 = simd_and(tmp461, bytetest_97_bf);
        struct_Cn.cc = simd_or(tmp462, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_ab = simd_and(tmp105, tmp84);
        bytetest_9c = simd_and(tmp71, tmp180);
        bytetest_b5_bf = simd_and(tmp75, tmp155);
        tmp463 = simd_and(tmp23, bytetest_ab);
        carryQ.cq[87] = carryout2carry(pablo_blk_Advance(tmp463, carryQ.get_carry_in(87), tmp464));
        tmp465 = simd_and(tmp464, bytetest_9c);
        carryQ.cq[88] = carryout2carry(pablo_blk_Advance(tmp465, carryQ.get_carry_in(88), tmp466));
        tmp467 = simd_and(tmp466, bytetest_b5_bf);
        struct_Cn.cc = simd_or(tmp467, struct_Cn.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_af = simd_and(tmp105, tmp99);
        bytetest_80_9f = simd_andc(bytetest_80_bf, basis_bits.bit_2);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp468 = simd_and(tmp23, bytetest_af);
        carryQ.cq[89] = carryout2carry(pablo_blk_Advance(tmp468, carryQ.get_carry_in(89), tmp469));
        tmp470 = simd_and(tmp469, bytetest_80_9f);
        carryQ.cq[90] = carryout2carry(pablo_blk_Advance(tmp470, carryQ.get_carry_in(90), tmp471));
        tmp472 = simd_and(tmp471, bytetest_80_bf);
        bytetest_ac_ae = simd_andc(bytetest_ac_af, tmp30);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp473 = simd_and(tmp23, bytetest_ac_ae);
        carryQ.cq[91] = carryout2carry(pablo_blk_Advance(tmp473, carryQ.get_carry_in(91), tmp474));
        tmp475 = simd_and(tmp474, bytetest_80_bf);
        carryQ.cq[92] = carryout2carry(pablo_blk_Advance(tmp475, carryQ.get_carry_in(92), tmp476));
        tmp477 = simd_and(tmp476, bytetest_80_bf);
        bytetest_ab = simd_and(tmp105, tmp84);
        bytetest_a1_bf = simd_and(bytetest_a0_bf, tmp186);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp478 = simd_and(tmp464, bytetest_a1_bf);
        carryQ.cq[93] = carryout2carry(pablo_blk_Advance(tmp478, carryQ.get_carry_in(93), tmp479));
        tmp480 = simd_and(tmp479, bytetest_80_bf);
        bytetest_a0 = simd_andc(tmp105, tmp6);
        bytetest_9e_bf = simd_and(bytetest_80_bf, tmp213);
        tmp481 = simd_and(tmp464, bytetest_a0);
        carryQ.cq[94] = carryout2carry(pablo_blk_Advance(tmp481, carryQ.get_carry_in(94), tmp482));
        tmp483 = simd_and(tmp482, bytetest_9e_bf);
        tmp484 = simd_or(tmp483, tmp480);
        tmp485 = simd_or(tmp484, tmp477);
        tmp486 = simd_or(tmp485, tmp472);
        struct_Cn.cc = simd_or(tmp486, struct_Cn.cc);
        bytetest_f3 = simd_and(tmp3, tmp31);
        bytetest_a0 = simd_andc(tmp105, tmp6);
        bytetest_80 = simd_andc(tmp66, tmp6);
        bytetest_80_80 = simd_andc(tmp66, tmp6);
        tmp487 = simd_and(tmp21, bytetest_f3);
        carryQ.cq[95] = carryout2carry(pablo_blk_Advance(tmp487, carryQ.get_carry_in(95), tmp488));
        tmp489 = simd_and(tmp488, bytetest_a0);
        carryQ.cq[96] = carryout2carry(pablo_blk_Advance(tmp489, carryQ.get_carry_in(96), tmp490));
        tmp491 = simd_and(tmp490, bytetest_80);
        carryQ.cq[97] = carryout2carry(pablo_blk_Advance(tmp491, carryQ.get_carry_in(97), tmp492));
        tmp493 = simd_and(tmp492, bytetest_80_80);
        bytetest_80_9f = simd_andc(bytetest_80_bf, basis_bits.bit_2);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp494 = simd_and(tmp488, bytetest_80_9f);
        carryQ.cq[98] = carryout2carry(pablo_blk_Advance(tmp494, carryQ.get_carry_in(98), tmp495));
        tmp496 = simd_and(tmp495, bytetest_80_bf);
        carryQ.cq[99] = carryout2carry(pablo_blk_Advance(tmp496, carryQ.get_carry_in(99), tmp497));
        tmp498 = simd_and(tmp497, bytetest_80_bf);
        tmp499 = simd_or(tmp498, tmp493);
        tmp500 = simd_andc(tmp3, tmp4);
        bytetest_f1_f2 = simd_and(tmp500, tmp297);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_b0_bf = simd_and(bytetest_80_bf, tmp2);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp501 = simd_and(tmp23, bytetest_b0_bf);
        carryQ.cq[100] = carryout2carry(pablo_blk_Advance(tmp501, carryQ.get_carry_in(100), tmp502));
        tmp503 = simd_and(tmp502, bytetest_80_bf);
        carryQ.cq[101] = carryout2carry(pablo_blk_Advance(tmp503, carryQ.get_carry_in(101), tmp504));
        tmp505 = simd_and(tmp504, bytetest_80_bf);
        bytetest_af = simd_and(tmp105, tmp99);
        tmp506 = simd_or(basis_bits.bit_3, tmp144);
        bytetest_a9_bf = simd_and(bytetest_a0_bf, tmp506);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp507 = simd_and(tmp469, bytetest_a9_bf);
        carryQ.cq[102] = carryout2carry(pablo_blk_Advance(tmp507, carryQ.get_carry_in(102), tmp508));
        tmp509 = simd_and(tmp508, bytetest_80_bf);
        bytetest_a8 = simd_and(tmp105, tmp149);
        bytetest_9e_bf = simd_and(bytetest_80_bf, tmp213);
        tmp510 = simd_and(tmp469, bytetest_a8);
        carryQ.cq[103] = carryout2carry(pablo_blk_Advance(tmp510, carryQ.get_carry_in(103), tmp511));
        tmp512 = simd_and(tmp511, bytetest_9e_bf);
        tmp513 = simd_or(tmp512, tmp509);
        tmp514 = simd_or(tmp513, tmp505);
        tmp515 = simd_or(tmp514, bytetest_f1_f2);
        tmp516 = simd_or(tmp515, tmp499);
        struct_Cn.cc = simd_or(tmp516, struct_Cn.cc);
        bytetest_f3 = simd_and(tmp3, tmp31);
        bytetest_a0 = simd_andc(tmp105, tmp6);
        bytetest_80 = simd_andc(tmp66, tmp6);
        bytetest_82_9f = simd_and(bytetest_80_9f, tmp193);
        tmp517 = simd_and(tmp492, bytetest_82_9f);
        struct_Cn.cc = simd_or(tmp517, struct_Cn.cc);
        bytetest_f3 = simd_and(tmp3, tmp31);
        bytetest_a0 = simd_andc(tmp105, tmp6);
        tmp518 = simd_andc(basis_bits.bit_6, tmp4);
        bytetest_82_83 = simd_and(tmp66, tmp518);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp519 = simd_and(tmp490, bytetest_82_83);
        carryQ.cq[104] = carryout2carry(pablo_blk_Advance(tmp519, carryQ.get_carry_in(104), tmp520));
        tmp521 = simd_and(tmp520, bytetest_80_bf);
        struct_Cn.cc = simd_or(tmp521, struct_Cn.cc);
        bytetest_f3 = simd_and(tmp3, tmp31);
        bytetest_a1_af = simd_and(tmp105, tmp397);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp522 = simd_and(tmp488, bytetest_a1_af);
        carryQ.cq[105] = carryout2carry(pablo_blk_Advance(tmp522, carryQ.get_carry_in(105), tmp523));
        tmp524 = simd_and(tmp523, bytetest_80_bf);
        carryQ.cq[106] = carryout2carry(pablo_blk_Advance(tmp524, carryQ.get_carry_in(106), tmp525));
        tmp526 = simd_and(tmp525, bytetest_80_bf);
        bytetest_a0 = simd_andc(tmp105, tmp6);
        tmp527 = simd_or(basis_bits.bit_2, tmp437);
        bytetest_88_bf = simd_and(bytetest_80_bf, tmp527);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp528 = simd_and(tmp490, bytetest_88_bf);
        carryQ.cq[107] = carryout2carry(pablo_blk_Advance(tmp528, carryQ.get_carry_in(107), tmp529));
        tmp530 = simd_and(tmp529, bytetest_80_bf);
        bytetest_87 = simd_and(tmp66, tmp55);
        bytetest_b0_bf = simd_and(bytetest_80_bf, tmp2);
        tmp531 = simd_and(tmp490, bytetest_87);
        carryQ.cq[108] = carryout2carry(pablo_blk_Advance(tmp531, carryQ.get_carry_in(108), tmp532));
        tmp533 = simd_and(tmp532, bytetest_b0_bf);
        tmp534 = simd_or(tmp533, tmp530);
        tmp535 = simd_or(tmp534, tmp526);
        struct_Cn.cc = simd_or(tmp535, struct_Cn.cc);
        bytetest_f3 = simd_and(tmp3, tmp31);
        bytetest_bf = simd_and(bytetest_b0_bf, tmp99);
        bytetest_bf = simd_and(bytetest_b0_bf, tmp99);
        bytetest_be_bf = simd_and(bytetest_b0_bf, tmp18);
        tmp536 = simd_and(tmp488, bytetest_bf);
        carryQ.cq[109] = carryout2carry(pablo_blk_Advance(tmp536, carryQ.get_carry_in(109), tmp537));
        tmp538 = simd_and(tmp537, bytetest_bf);
        carryQ.cq[110] = carryout2carry(pablo_blk_Advance(tmp538, carryQ.get_carry_in(110), tmp539));
        tmp540 = simd_and(tmp539, bytetest_be_bf);
        struct_Cn.cc = simd_or(tmp540, struct_Cn.cc);
        tmp541 = simd_andc(tmp1, basis_bits.bit_2);
        bytetest_c2_df = simd_and(tmp541, tmp193);
        if ((bitblock::any(bytetest_c2_df) || carryQ.CarryTest(111, 11))) {
          r80_7ff_tmp1 = simd_andc(tmp1, tmp12);
          bytetest_cd = simd_and(r80_7ff_tmp1, tmp97);
          r80_7ff_tmp2 = simd_andc(tmp72, basis_bits.bit_6);
          bytetest_b8_b9 = simd_and(bytetest_b0_bf, r80_7ff_tmp2);
          r80_7ff_tmp3 = simd_and(tmp21, bytetest_cd);
          carryQ.cq[111] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp3, carryQ.get_carry_in(111), r80_7ff_tmp4));
          r80_7ff_tmp5 = simd_and(r80_7ff_tmp4, bytetest_b8_b9);
          struct_Cn.cc = simd_or(r80_7ff_tmp5, struct_Cn.cc);
          bytetest_ce = simd_and(r80_7ff_tmp1, tmp159);
          bytetest_80_83 = simd_andc(tmp66, tmp4);
          r80_7ff_tmp6 = simd_and(tmp21, bytetest_ce);
          carryQ.cq[112] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp6, carryQ.get_carry_in(112), r80_7ff_tmp7));
          r80_7ff_tmp8 = simd_and(r80_7ff_tmp7, bytetest_80_83);
          bytetest_cd = simd_and(r80_7ff_tmp1, tmp97);
          bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp99);
          r80_7ff_tmp9 = simd_and(r80_7ff_tmp4, bytetest_bf_bf);
          r80_7ff_tmp10 = simd_or(r80_7ff_tmp9, r80_7ff_tmp8);
          struct_Cn.cc = simd_or(r80_7ff_tmp10, struct_Cn.cc);
          bytetest_ce = simd_and(r80_7ff_tmp1, tmp159);
          bytetest_8b_8b = simd_and(tmp66, tmp84);
          r80_7ff_tmp11 = simd_and(r80_7ff_tmp7, bytetest_8b_8b);
          struct_Cn.cc = simd_or(r80_7ff_tmp11, struct_Cn.cc);
          bytetest_ce = simd_and(r80_7ff_tmp1, tmp159);
          bytetest_8d_8d = simd_and(tmp66, tmp97);
          r80_7ff_tmp12 = simd_and(r80_7ff_tmp7, bytetest_8d_8d);
          struct_Cn.cc = simd_or(r80_7ff_tmp12, struct_Cn.cc);
          bytetest_ce = simd_and(r80_7ff_tmp1, tmp159);
          bytetest_a2_a2 = simd_and(tmp105, tmp91);
          r80_7ff_tmp13 = simd_and(r80_7ff_tmp7, bytetest_a2_a2);
          struct_Cn.cc = simd_or(r80_7ff_tmp13, struct_Cn.cc);
          r80_7ff_tmp14 = simd_and(tmp1, tmp8);
          bytetest_d4 = simd_and(r80_7ff_tmp14, tmp45);
          r80_7ff_tmp15 = simd_or(simd_and(basis_bits.bit_3, tmp357), simd_andc(basis_bits.bit_4, basis_bits.bit_3));
          bytetest_a8_b0 = simd_and(bytetest_a0_bf, r80_7ff_tmp15);
          r80_7ff_tmp16 = simd_and(tmp21, bytetest_d4);
          carryQ.cq[113] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp16, carryQ.get_carry_in(113), r80_7ff_tmp17));
          r80_7ff_tmp18 = simd_and(r80_7ff_tmp17, bytetest_a8_b0);
          struct_Cn.cc = simd_or(r80_7ff_tmp18, struct_Cn.cc);
          bytetest_d5 = simd_and(r80_7ff_tmp14, tmp46);
          bytetest_97_98 = simd_and(tmp71, tmp208);
          r80_7ff_tmp19 = simd_and(tmp21, bytetest_d5);
          carryQ.cq[114] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp19, carryQ.get_carry_in(114), r80_7ff_tmp20));
          r80_7ff_tmp21 = simd_and(r80_7ff_tmp20, bytetest_97_98);
          struct_Cn.cc = simd_or(r80_7ff_tmp21, struct_Cn.cc);
          bytetest_d5 = simd_and(r80_7ff_tmp14, tmp46);
          bytetest_a0_a0 = simd_andc(tmp105, tmp6);
          r80_7ff_tmp22 = simd_and(r80_7ff_tmp20, bytetest_a0_a0);
          struct_Cn.cc = simd_or(r80_7ff_tmp22, struct_Cn.cc);
          bytetest_d6 = simd_and(r80_7ff_tmp14, tmp118);
          bytetest_88_88 = simd_and(tmp66, tmp149);
          r80_7ff_tmp23 = simd_and(tmp21, bytetest_d6);
          carryQ.cq[115] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp23, carryQ.get_carry_in(115), r80_7ff_tmp24));
          r80_7ff_tmp25 = simd_and(r80_7ff_tmp24, bytetest_88_88);
          struct_Cn.cc = simd_or(r80_7ff_tmp25, struct_Cn.cc);
          bytetest_d6 = simd_and(r80_7ff_tmp14, tmp118);
          bytetest_8b_8e = simd_and(tmp258, tmp310);
          r80_7ff_tmp26 = simd_and(r80_7ff_tmp24, bytetest_8b_8e);
          struct_Cn.cc = simd_or(r80_7ff_tmp26, struct_Cn.cc);
          bytetest_d6 = simd_and(r80_7ff_tmp14, tmp118);
          bytetest_90_90 = simd_andc(tmp71, tmp6);
          r80_7ff_tmp27 = simd_and(r80_7ff_tmp24, bytetest_90_90);
          struct_Cn.cc = simd_or(r80_7ff_tmp27, struct_Cn.cc);
          bytetest_d7 = simd_and(r80_7ff_tmp14, tmp55);
          bytetest_88_8f = simd_and(tmp66, basis_bits.bit_4);
          r80_7ff_tmp28 = simd_and(tmp21, bytetest_d7);
          carryQ.cq[116] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp28, carryQ.get_carry_in(116), r80_7ff_tmp29));
          r80_7ff_tmp30 = simd_and(r80_7ff_tmp29, bytetest_88_8f);
          struct_Cn.cc = simd_or(r80_7ff_tmp30, struct_Cn.cc);
          bytetest_d7 = simd_and(r80_7ff_tmp14, tmp55);
          r80_7ff_tmp31 = simd_and(tmp105, basis_bits.bit_4);
          bytetest_ab_af = simd_and(r80_7ff_tmp31, tmp106);
          r80_7ff_tmp32 = simd_and(r80_7ff_tmp29, bytetest_ab_af);
          struct_Cn.cc = simd_or(r80_7ff_tmp32, struct_Cn.cc);
          bytetest_d7 = simd_and(r80_7ff_tmp14, tmp55);
          bytetest_b5_bf = simd_and(bytetest_b0_bf, tmp155);
          r80_7ff_tmp33 = simd_and(r80_7ff_tmp29, bytetest_b5_bf);
          struct_Cn.cc = simd_or(r80_7ff_tmp33, struct_Cn.cc);
          bytetest_d8 = simd_and(r80_7ff_tmp14, tmp149);
          bytetest_85_85 = simd_and(tmp66, tmp46);
          r80_7ff_tmp34 = simd_and(tmp21, bytetest_d8);
          carryQ.cq[117] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp34, carryQ.get_carry_in(117), r80_7ff_tmp35));
          r80_7ff_tmp36 = simd_and(r80_7ff_tmp35, bytetest_85_85);
          struct_Cn.cc = simd_or(r80_7ff_tmp36, struct_Cn.cc);
          bytetest_d8 = simd_and(r80_7ff_tmp14, tmp149);
          bytetest_9d_9d = simd_and(tmp71, tmp97);
          r80_7ff_tmp37 = simd_and(r80_7ff_tmp35, bytetest_9d_9d);
          struct_Cn.cc = simd_or(r80_7ff_tmp37, struct_Cn.cc);
          bytetest_dc = simd_and(r80_7ff_tmp14, tmp180);
          bytetest_8e_8e = simd_and(tmp66, tmp159);
          r80_7ff_tmp38 = simd_and(tmp21, bytetest_dc);
          carryQ.cq[118] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp38, carryQ.get_carry_in(118), r80_7ff_tmp39));
          r80_7ff_tmp40 = simd_and(r80_7ff_tmp39, bytetest_8e_8e);
          struct_Cn.cc = simd_or(r80_7ff_tmp40, struct_Cn.cc);
          bytetest_dd = simd_and(r80_7ff_tmp14, tmp97);
          bytetest_8b_8c = simd_and(bytetest_88_8f, tmp246);
          r80_7ff_tmp41 = simd_and(tmp21, bytetest_dd);
          carryQ.cq[119] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp41, carryQ.get_carry_in(119), r80_7ff_tmp42));
          r80_7ff_tmp43 = simd_and(r80_7ff_tmp42, bytetest_8b_8c);
          struct_Cn.cc = simd_or(r80_7ff_tmp43, struct_Cn.cc);
          bytetest_de = simd_and(r80_7ff_tmp14, tmp159);
          bytetest_b2_bf = simd_and(bytetest_b0_bf, tmp33);
          r80_7ff_tmp44 = simd_and(tmp21, bytetest_de);
          carryQ.cq[120] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp44, carryQ.get_carry_in(120), r80_7ff_tmp45));
          r80_7ff_tmp46 = simd_and(r80_7ff_tmp45, bytetest_b2_bf);
          struct_Cn.cc = simd_or(r80_7ff_tmp46, struct_Cn.cc);
          bytetest_df = simd_and(r80_7ff_tmp14, tmp99);
          bytetest_bb_bf = simd_and(tmp42, tmp106);
          r80_7ff_tmp47 = simd_and(tmp21, bytetest_df);
          carryQ.cq[121] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp47, carryQ.get_carry_in(121), r80_7ff_tmp48));
          r80_7ff_tmp49 = simd_and(r80_7ff_tmp48, bytetest_bb_bf);
          struct_Cn.cc = simd_or(r80_7ff_tmp49, struct_Cn.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(111, 11);
        }
        tmp542 = simd_and(tmp1, tmp37);
        bytetest_e1_ef = simd_and(tmp542, tmp397);
        bytetest_e0 = simd_andc(tmp542, tmp6);
        bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp543 = simd_and(tmp21, bytetest_e0);
        carryQ.cq[122] = carryout2carry(pablo_blk_Advance(tmp543, carryQ.get_carry_in(122), tmp544));
        tmp545 = simd_and(tmp544, bytetest_a0_bf);
        tmp546 = simd_or(tmp545, bytetest_e1_ef);
        if ((bitblock::any(tmp546) || carryQ.CarryTest(123, 140))) {
          r800_ffff_tmp1 = simd_and(tmp1, tmp37);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a0 = simd_andc(tmp105, tmp6);
          bytetest_ae_af = simd_and(tmp105, tmp18);
          r800_ffff_tmp2 = simd_and(tmp21, bytetest_e0);
          carryQ.cq[123] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp2, carryQ.get_carry_in(123), r800_ffff_tmp3));
          r800_ffff_tmp4 = simd_and(r800_ffff_tmp3, bytetest_a0);
          carryQ.cq[124] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp4, carryQ.get_carry_in(124), r800_ffff_tmp5));
          r800_ffff_tmp6 = simd_and(r800_ffff_tmp5, bytetest_ae_af);
          struct_Cn.cc = simd_or(r800_ffff_tmp6, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a0 = simd_andc(tmp105, tmp6);
          bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp99);
          r800_ffff_tmp7 = simd_and(r800_ffff_tmp5, bytetest_bf_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp7, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a1 = simd_and(tmp105, tmp11);
          bytetest_9c_9d = simd_and(tmp71, tmp275);
          r800_ffff_tmp8 = simd_and(r800_ffff_tmp3, bytetest_a1);
          carryQ.cq[125] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp8, carryQ.get_carry_in(125), r800_ffff_tmp9));
          r800_ffff_tmp10 = simd_and(r800_ffff_tmp9, bytetest_9c_9d);
          struct_Cn.cc = simd_or(r800_ffff_tmp10, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a2 = simd_and(tmp105, tmp91);
          bytetest_80_9f = simd_andc(bytetest_80_bf, basis_bits.bit_2);
          r800_ffff_tmp11 = simd_and(r800_ffff_tmp3, bytetest_a2);
          carryQ.cq[126] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp11, carryQ.get_carry_in(126), r800_ffff_tmp12));
          r800_ffff_tmp13 = simd_and(r800_ffff_tmp12, bytetest_80_9f);
          bytetest_a1 = simd_and(tmp105, tmp11);
          r800_ffff_tmp14 = simd_and(basis_bits.bit_3, tmp99);
          r800_ffff_tmp15 = simd_or(basis_bits.bit_2, r800_ffff_tmp14);
          bytetest_9f_bf = simd_and(bytetest_80_bf, r800_ffff_tmp15);
          r800_ffff_tmp16 = simd_and(r800_ffff_tmp9, bytetest_9f_bf);
          r800_ffff_tmp17 = simd_or(r800_ffff_tmp16, r800_ffff_tmp13);
          struct_Cn.cc = simd_or(r800_ffff_tmp17, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a2 = simd_and(tmp105, tmp91);
          bytetest_a1_a1 = simd_and(tmp105, tmp11);
          r800_ffff_tmp18 = simd_and(r800_ffff_tmp12, bytetest_a1_a1);
          struct_Cn.cc = simd_or(r800_ffff_tmp18, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a3 = simd_and(tmp105, tmp31);
          r800_ffff_tmp19 = simd_and(basis_bits.bit_2, tmp50);
          bytetest_80_a3 = simd_andc(bytetest_80_bf, r800_ffff_tmp19);
          r800_ffff_tmp20 = simd_and(r800_ffff_tmp3, bytetest_a3);
          carryQ.cq[127] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp20, carryQ.get_carry_in(127), r800_ffff_tmp21));
          r800_ffff_tmp22 = simd_and(r800_ffff_tmp21, bytetest_80_a3);
          bytetest_a2 = simd_and(tmp105, tmp91);
          r800_ffff_tmp23 = simd_and(tmp17, tmp5);
          r800_ffff_tmp24 = simd_or(basis_bits.bit_3, r800_ffff_tmp23);
          bytetest_ad_bf = simd_and(bytetest_a0_bf, r800_ffff_tmp24);
          r800_ffff_tmp25 = simd_and(r800_ffff_tmp12, bytetest_ad_bf);
          r800_ffff_tmp26 = simd_or(r800_ffff_tmp25, r800_ffff_tmp22);
          struct_Cn.cc = simd_or(r800_ffff_tmp26, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a3 = simd_and(tmp105, tmp31);
          bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp99);
          r800_ffff_tmp27 = simd_and(r800_ffff_tmp21, bytetest_bf_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp27, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a5 = simd_and(tmp105, tmp46);
          bytetest_b8_b8 = simd_and(bytetest_b0_bf, tmp149);
          r800_ffff_tmp28 = simd_and(r800_ffff_tmp3, bytetest_a5);
          carryQ.cq[128] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp28, carryQ.get_carry_in(128), r800_ffff_tmp29));
          r800_ffff_tmp30 = simd_and(r800_ffff_tmp29, bytetest_b8_b8);
          struct_Cn.cc = simd_or(r800_ffff_tmp30, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a6 = simd_and(tmp105, tmp118);
          bytetest_80_80 = simd_andc(tmp66, tmp6);
          r800_ffff_tmp31 = simd_and(r800_ffff_tmp3, bytetest_a6);
          carryQ.cq[129] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp31, carryQ.get_carry_in(129), r800_ffff_tmp32));
          r800_ffff_tmp33 = simd_and(r800_ffff_tmp32, bytetest_80_80);
          struct_Cn.cc = simd_or(r800_ffff_tmp33, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a6 = simd_and(tmp105, tmp118);
          bytetest_84_84 = simd_and(tmp66, tmp45);
          r800_ffff_tmp34 = simd_and(r800_ffff_tmp32, bytetest_84_84);
          struct_Cn.cc = simd_or(r800_ffff_tmp34, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a6 = simd_and(tmp105, tmp118);
          r800_ffff_tmp35 = simd_and(tmp66, tmp17);
          bytetest_8d_8e = simd_and(r800_ffff_tmp35, tmp297);
          r800_ffff_tmp36 = simd_and(r800_ffff_tmp32, bytetest_8d_8e);
          struct_Cn.cc = simd_or(r800_ffff_tmp36, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a6 = simd_and(tmp105, tmp118);
          r800_ffff_tmp37 = simd_andc(tmp71, tmp4);
          bytetest_91_92 = simd_and(r800_ffff_tmp37, tmp297);
          r800_ffff_tmp38 = simd_and(r800_ffff_tmp32, bytetest_91_92);
          struct_Cn.cc = simd_or(r800_ffff_tmp38, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a6 = simd_and(tmp105, tmp118);
          bytetest_a9_a9 = simd_and(tmp105, tmp221);
          r800_ffff_tmp39 = simd_and(r800_ffff_tmp32, bytetest_a9_a9);
          struct_Cn.cc = simd_or(r800_ffff_tmp39, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a6 = simd_and(tmp105, tmp118);
          bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp11);
          r800_ffff_tmp40 = simd_and(r800_ffff_tmp32, bytetest_b1_b1);
          struct_Cn.cc = simd_or(r800_ffff_tmp40, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a6 = simd_and(tmp105, tmp118);
          r800_ffff_tmp41 = simd_andc(bytetest_b0_bf, basis_bits.bit_4);
          r800_ffff_tmp42 = simd_not(basis_bits.bit_6);
          r800_ffff_tmp43 = simd_or(simd_and(basis_bits.bit_5, r800_ffff_tmp42), simd_andc(tmp30, basis_bits.bit_5));
          bytetest_b3_b5 = simd_and(r800_ffff_tmp41, r800_ffff_tmp43);
          r800_ffff_tmp44 = simd_and(r800_ffff_tmp32, bytetest_b3_b5);
          struct_Cn.cc = simd_or(r800_ffff_tmp44, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a6 = simd_and(tmp105, tmp118);
          bytetest_ba_bb = simd_and(bytetest_b0_bf, tmp217);
          r800_ffff_tmp45 = simd_and(r800_ffff_tmp32, bytetest_ba_bb);
          struct_Cn.cc = simd_or(r800_ffff_tmp45, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a7 = simd_and(tmp105, tmp55);
          r800_ffff_tmp46 = simd_and(tmp66, tmp44);
          bytetest_85_86 = simd_and(r800_ffff_tmp46, tmp297);
          r800_ffff_tmp47 = simd_and(r800_ffff_tmp3, bytetest_a7);
          carryQ.cq[130] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp47, carryQ.get_carry_in(130), r800_ffff_tmp48));
          r800_ffff_tmp49 = simd_and(r800_ffff_tmp48, bytetest_85_86);
          struct_Cn.cc = simd_or(r800_ffff_tmp49, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a7 = simd_and(tmp105, tmp55);
          r800_ffff_tmp50 = simd_and(tmp66, tmp72);
          bytetest_89_8a = simd_and(r800_ffff_tmp50, tmp297);
          r800_ffff_tmp51 = simd_and(r800_ffff_tmp48, bytetest_89_8a);
          struct_Cn.cc = simd_or(r800_ffff_tmp51, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a7 = simd_and(tmp105, tmp55);
          r800_ffff_tmp52 = simd_not(tmp228);
          r800_ffff_tmp53 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp52), simd_andc(tmp99, basis_bits.bit_3));
          bytetest_8f_96 = simd_and(bytetest_80_9f, r800_ffff_tmp53);
          r800_ffff_tmp54 = simd_and(r800_ffff_tmp48, bytetest_8f_96);
          struct_Cn.cc = simd_or(r800_ffff_tmp54, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a7 = simd_and(tmp105, tmp55);
          bytetest_98_9b = simd_and(tmp71, tmp72);
          r800_ffff_tmp55 = simd_and(r800_ffff_tmp48, bytetest_98_9b);
          struct_Cn.cc = simd_or(r800_ffff_tmp55, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a7 = simd_and(tmp105, tmp55);
          bytetest_9e_9e = simd_and(tmp71, tmp159);
          r800_ffff_tmp56 = simd_and(r800_ffff_tmp48, bytetest_9e_9e);
          struct_Cn.cc = simd_or(r800_ffff_tmp56, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a7 = simd_and(tmp105, tmp55);
          bytetest_a4_a5 = simd_and(tmp105, tmp124);
          r800_ffff_tmp57 = simd_and(r800_ffff_tmp48, bytetest_a4_a5);
          struct_Cn.cc = simd_or(r800_ffff_tmp57, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a8 = simd_and(tmp105, tmp149);
          bytetest_80_80 = simd_andc(tmp66, tmp6);
          r800_ffff_tmp58 = simd_and(r800_ffff_tmp3, bytetest_a8);
          carryQ.cq[131] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp58, carryQ.get_carry_in(131), r800_ffff_tmp59));
          r800_ffff_tmp60 = simd_and(r800_ffff_tmp59, bytetest_80_80);
          bytetest_a7 = simd_and(tmp105, tmp55);
          bytetest_bc_bf = simd_and(bytetest_b0_bf, tmp17);
          r800_ffff_tmp61 = simd_and(r800_ffff_tmp48, bytetest_bc_bf);
          r800_ffff_tmp62 = simd_or(r800_ffff_tmp61, r800_ffff_tmp60);
          struct_Cn.cc = simd_or(r800_ffff_tmp62, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a8 = simd_and(tmp105, tmp149);
          bytetest_84_84 = simd_and(tmp66, tmp45);
          r800_ffff_tmp63 = simd_and(r800_ffff_tmp59, bytetest_84_84);
          struct_Cn.cc = simd_or(r800_ffff_tmp63, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a8 = simd_and(tmp105, tmp149);
          bytetest_8b_8e = simd_and(tmp258, tmp310);
          r800_ffff_tmp64 = simd_and(r800_ffff_tmp59, bytetest_8b_8e);
          struct_Cn.cc = simd_or(r800_ffff_tmp64, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a8 = simd_and(tmp105, tmp149);
          bytetest_91_92 = simd_and(r800_ffff_tmp37, tmp297);
          r800_ffff_tmp65 = simd_and(r800_ffff_tmp59, bytetest_91_92);
          struct_Cn.cc = simd_or(r800_ffff_tmp65, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a8 = simd_and(tmp105, tmp149);
          bytetest_a9_a9 = simd_and(tmp105, tmp221);
          r800_ffff_tmp66 = simd_and(r800_ffff_tmp59, bytetest_a9_a9);
          struct_Cn.cc = simd_or(r800_ffff_tmp66, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a8 = simd_and(tmp105, tmp149);
          bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp11);
          r800_ffff_tmp67 = simd_and(r800_ffff_tmp59, bytetest_b1_b1);
          struct_Cn.cc = simd_or(r800_ffff_tmp67, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a8 = simd_and(tmp105, tmp149);
          bytetest_b4_b4 = simd_and(bytetest_b0_bf, tmp45);
          r800_ffff_tmp68 = simd_and(r800_ffff_tmp59, bytetest_b4_b4);
          struct_Cn.cc = simd_or(r800_ffff_tmp68, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a8 = simd_and(tmp105, tmp149);
          bytetest_b7_b7 = simd_and(bytetest_b0_bf, tmp55);
          r800_ffff_tmp69 = simd_and(r800_ffff_tmp59, bytetest_b7_b7);
          struct_Cn.cc = simd_or(r800_ffff_tmp69, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a8 = simd_and(tmp105, tmp149);
          bytetest_ba_bb = simd_and(bytetest_b0_bf, tmp217);
          r800_ffff_tmp70 = simd_and(r800_ffff_tmp59, bytetest_ba_bb);
          struct_Cn.cc = simd_or(r800_ffff_tmp70, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a8 = simd_and(tmp105, tmp149);
          bytetest_bd_bd = simd_and(bytetest_b0_bf, tmp97);
          r800_ffff_tmp71 = simd_and(r800_ffff_tmp59, bytetest_bd_bd);
          struct_Cn.cc = simd_or(r800_ffff_tmp71, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a9 = simd_and(tmp105, tmp221);
          bytetest_83_86 = simd_and(tmp308, tmp310);
          r800_ffff_tmp72 = simd_and(r800_ffff_tmp3, bytetest_a9);
          carryQ.cq[132] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp72, carryQ.get_carry_in(132), r800_ffff_tmp73));
          r800_ffff_tmp74 = simd_and(r800_ffff_tmp73, bytetest_83_86);
          struct_Cn.cc = simd_or(r800_ffff_tmp74, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a9 = simd_and(tmp105, tmp221);
          bytetest_89_8a = simd_and(r800_ffff_tmp50, tmp297);
          r800_ffff_tmp75 = simd_and(r800_ffff_tmp73, bytetest_89_8a);
          struct_Cn.cc = simd_or(r800_ffff_tmp75, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a9 = simd_and(tmp105, tmp221);
          r800_ffff_tmp76 = simd_or(simd_and(basis_bits.bit_3, tmp357), simd_andc(tmp18, basis_bits.bit_3));
          bytetest_8e_90 = simd_and(bytetest_80_9f, r800_ffff_tmp76);
          r800_ffff_tmp77 = simd_and(r800_ffff_tmp73, bytetest_8e_90);
          struct_Cn.cc = simd_or(r800_ffff_tmp77, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a9 = simd_and(tmp105, tmp221);
          r800_ffff_tmp78 = simd_or(simd_and(basis_bits.bit_4, tmp207), simd_andc(tmp32, basis_bits.bit_4));
          bytetest_92_98 = simd_and(tmp71, r800_ffff_tmp78);
          r800_ffff_tmp79 = simd_and(r800_ffff_tmp73, bytetest_92_98);
          struct_Cn.cc = simd_or(r800_ffff_tmp79, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a9 = simd_and(tmp105, tmp221);
          bytetest_9d_9d = simd_and(tmp71, tmp97);
          r800_ffff_tmp80 = simd_and(r800_ffff_tmp73, bytetest_9d_9d);
          struct_Cn.cc = simd_or(r800_ffff_tmp80, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_a9 = simd_and(tmp105, tmp221);
          r800_ffff_tmp81 = simd_not(tmp222);
          r800_ffff_tmp82 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp81), simd_andc(r800_ffff_tmp14, basis_bits.bit_2));
          bytetest_9f_a5 = simd_and(bytetest_80_bf, r800_ffff_tmp82);
          r800_ffff_tmp83 = simd_and(r800_ffff_tmp73, bytetest_9f_a5);
          struct_Cn.cc = simd_or(r800_ffff_tmp83, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_aa = simd_and(tmp105, tmp74);
          bytetest_80_80 = simd_andc(tmp66, tmp6);
          r800_ffff_tmp84 = simd_and(r800_ffff_tmp3, bytetest_aa);
          carryQ.cq[133] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp84, carryQ.get_carry_in(133), r800_ffff_tmp85));
          r800_ffff_tmp86 = simd_and(r800_ffff_tmp85, bytetest_80_80);
          bytetest_a9 = simd_and(tmp105, tmp221);
          bytetest_b6_bf = simd_and(bytetest_b0_bf, tmp201);
          r800_ffff_tmp87 = simd_and(r800_ffff_tmp73, bytetest_b6_bf);
          r800_ffff_tmp88 = simd_or(r800_ffff_tmp87, r800_ffff_tmp86);
          struct_Cn.cc = simd_or(r800_ffff_tmp88, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_aa = simd_and(tmp105, tmp74);
          bytetest_84_84 = simd_and(tmp66, tmp45);
          r800_ffff_tmp89 = simd_and(r800_ffff_tmp85, bytetest_84_84);
          struct_Cn.cc = simd_or(r800_ffff_tmp89, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_aa = simd_and(tmp105, tmp74);
          bytetest_8e_8e = simd_and(tmp66, tmp159);
          r800_ffff_tmp90 = simd_and(r800_ffff_tmp85, bytetest_8e_8e);
          struct_Cn.cc = simd_or(r800_ffff_tmp90, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_aa = simd_and(tmp105, tmp74);
          bytetest_92_92 = simd_and(tmp71, tmp91);
          r800_ffff_tmp91 = simd_and(r800_ffff_tmp85, bytetest_92_92);
          struct_Cn.cc = simd_or(r800_ffff_tmp91, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_aa = simd_and(tmp105, tmp74);
          bytetest_a9_a9 = simd_and(tmp105, tmp221);
          r800_ffff_tmp92 = simd_and(r800_ffff_tmp85, bytetest_a9_a9);
          struct_Cn.cc = simd_or(r800_ffff_tmp92, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_aa = simd_and(tmp105, tmp74);
          bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp11);
          r800_ffff_tmp93 = simd_and(r800_ffff_tmp85, bytetest_b1_b1);
          struct_Cn.cc = simd_or(r800_ffff_tmp93, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_aa = simd_and(tmp105, tmp74);
          bytetest_b4_b4 = simd_and(bytetest_b0_bf, tmp45);
          r800_ffff_tmp94 = simd_and(r800_ffff_tmp85, bytetest_b4_b4);
          struct_Cn.cc = simd_or(r800_ffff_tmp94, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_aa = simd_and(tmp105, tmp74);
          bytetest_ba_bb = simd_and(bytetest_b0_bf, tmp217);
          r800_ffff_tmp95 = simd_and(r800_ffff_tmp85, bytetest_ba_bb);
          struct_Cn.cc = simd_or(r800_ffff_tmp95, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ab = simd_and(tmp105, tmp84);
          bytetest_86_86 = simd_and(tmp66, tmp118);
          r800_ffff_tmp96 = simd_and(r800_ffff_tmp3, bytetest_ab);
          carryQ.cq[134] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp96, carryQ.get_carry_in(134), r800_ffff_tmp97));
          r800_ffff_tmp98 = simd_and(r800_ffff_tmp97, bytetest_86_86);
          struct_Cn.cc = simd_or(r800_ffff_tmp98, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ab = simd_and(tmp105, tmp84);
          bytetest_8a_8a = simd_and(tmp66, tmp74);
          r800_ffff_tmp99 = simd_and(r800_ffff_tmp97, bytetest_8a_8a);
          struct_Cn.cc = simd_or(r800_ffff_tmp99, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ab = simd_and(tmp105, tmp84);
          bytetest_8e_8f = simd_and(tmp66, tmp18);
          r800_ffff_tmp100 = simd_and(r800_ffff_tmp97, bytetest_8e_8f);
          struct_Cn.cc = simd_or(r800_ffff_tmp100, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ab = simd_and(tmp105, tmp84);
          bytetest_91_9f = simd_and(tmp71, tmp397);
          r800_ffff_tmp101 = simd_and(r800_ffff_tmp97, bytetest_91_9f);
          struct_Cn.cc = simd_or(r800_ffff_tmp101, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ab = simd_and(tmp105, tmp84);
          bytetest_a4_a5 = simd_and(tmp105, tmp124);
          r800_ffff_tmp102 = simd_and(r800_ffff_tmp97, bytetest_a4_a5);
          struct_Cn.cc = simd_or(r800_ffff_tmp102, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ac = simd_and(tmp105, tmp180);
          bytetest_80_80 = simd_andc(tmp66, tmp6);
          r800_ffff_tmp103 = simd_and(r800_ffff_tmp3, bytetest_ac);
          carryQ.cq[135] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp103, carryQ.get_carry_in(135), r800_ffff_tmp104));
          r800_ffff_tmp105 = simd_and(r800_ffff_tmp104, bytetest_80_80);
          bytetest_ab = simd_and(tmp105, tmp84);
          bytetest_b2_bf = simd_and(bytetest_b0_bf, tmp33);
          r800_ffff_tmp106 = simd_and(r800_ffff_tmp97, bytetest_b2_bf);
          r800_ffff_tmp107 = simd_or(r800_ffff_tmp106, r800_ffff_tmp105);
          struct_Cn.cc = simd_or(r800_ffff_tmp107, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ac = simd_and(tmp105, tmp180);
          bytetest_84_84 = simd_and(tmp66, tmp45);
          r800_ffff_tmp108 = simd_and(r800_ffff_tmp104, bytetest_84_84);
          struct_Cn.cc = simd_or(r800_ffff_tmp108, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ac = simd_and(tmp105, tmp180);
          bytetest_8d_8e = simd_and(r800_ffff_tmp35, tmp297);
          r800_ffff_tmp109 = simd_and(r800_ffff_tmp104, bytetest_8d_8e);
          struct_Cn.cc = simd_or(r800_ffff_tmp109, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ac = simd_and(tmp105, tmp180);
          bytetest_91_92 = simd_and(r800_ffff_tmp37, tmp297);
          r800_ffff_tmp110 = simd_and(r800_ffff_tmp104, bytetest_91_92);
          struct_Cn.cc = simd_or(r800_ffff_tmp110, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ac = simd_and(tmp105, tmp180);
          bytetest_a9_a9 = simd_and(tmp105, tmp221);
          r800_ffff_tmp111 = simd_and(r800_ffff_tmp104, bytetest_a9_a9);
          struct_Cn.cc = simd_or(r800_ffff_tmp111, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ac = simd_and(tmp105, tmp180);
          bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp11);
          r800_ffff_tmp112 = simd_and(r800_ffff_tmp104, bytetest_b1_b1);
          struct_Cn.cc = simd_or(r800_ffff_tmp112, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ac = simd_and(tmp105, tmp180);
          bytetest_b4_b4 = simd_and(bytetest_b0_bf, tmp45);
          r800_ffff_tmp113 = simd_and(r800_ffff_tmp104, bytetest_b4_b4);
          struct_Cn.cc = simd_or(r800_ffff_tmp113, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ac = simd_and(tmp105, tmp180);
          bytetest_ba_bb = simd_and(bytetest_b0_bf, tmp217);
          r800_ffff_tmp114 = simd_and(r800_ffff_tmp104, bytetest_ba_bb);
          struct_Cn.cc = simd_or(r800_ffff_tmp114, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ad = simd_and(tmp105, tmp97);
          bytetest_85_86 = simd_and(r800_ffff_tmp46, tmp297);
          r800_ffff_tmp115 = simd_and(r800_ffff_tmp3, bytetest_ad);
          carryQ.cq[136] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp115, carryQ.get_carry_in(136), r800_ffff_tmp116));
          r800_ffff_tmp117 = simd_and(r800_ffff_tmp116, bytetest_85_86);
          struct_Cn.cc = simd_or(r800_ffff_tmp117, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ad = simd_and(tmp105, tmp97);
          bytetest_89_8a = simd_and(r800_ffff_tmp50, tmp297);
          r800_ffff_tmp118 = simd_and(r800_ffff_tmp116, bytetest_89_8a);
          struct_Cn.cc = simd_or(r800_ffff_tmp118, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ad = simd_and(tmp105, tmp97);
          r800_ffff_tmp119 = simd_not(tmp201);
          r800_ffff_tmp120 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp119), simd_andc(tmp18, basis_bits.bit_3));
          bytetest_8e_95 = simd_and(bytetest_80_9f, r800_ffff_tmp120);
          r800_ffff_tmp121 = simd_and(r800_ffff_tmp116, bytetest_8e_95);
          struct_Cn.cc = simd_or(r800_ffff_tmp121, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ad = simd_and(tmp105, tmp97);
          bytetest_98_9b = simd_and(tmp71, tmp72);
          r800_ffff_tmp122 = simd_and(r800_ffff_tmp116, bytetest_98_9b);
          struct_Cn.cc = simd_or(r800_ffff_tmp122, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ad = simd_and(tmp105, tmp97);
          bytetest_9e_9e = simd_and(tmp71, tmp159);
          r800_ffff_tmp123 = simd_and(r800_ffff_tmp116, bytetest_9e_9e);
          struct_Cn.cc = simd_or(r800_ffff_tmp123, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ad = simd_and(tmp105, tmp97);
          bytetest_a4_a5 = simd_and(tmp105, tmp124);
          r800_ffff_tmp124 = simd_and(r800_ffff_tmp116, bytetest_a4_a5);
          struct_Cn.cc = simd_or(r800_ffff_tmp124, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ae = simd_and(tmp105, tmp159);
          bytetest_80_81 = simd_andc(tmp66, tmp15);
          r800_ffff_tmp125 = simd_and(r800_ffff_tmp3, bytetest_ae);
          carryQ.cq[137] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp125, carryQ.get_carry_in(137), r800_ffff_tmp126));
          r800_ffff_tmp127 = simd_and(r800_ffff_tmp126, bytetest_80_81);
          bytetest_ad = simd_and(tmp105, tmp97);
          bytetest_b8_bf = simd_and(bytetest_b0_bf, basis_bits.bit_4);
          r800_ffff_tmp128 = simd_and(r800_ffff_tmp116, bytetest_b8_bf);
          r800_ffff_tmp129 = simd_or(r800_ffff_tmp128, r800_ffff_tmp127);
          struct_Cn.cc = simd_or(r800_ffff_tmp129, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ae = simd_and(tmp105, tmp159);
          bytetest_84_84 = simd_and(tmp66, tmp45);
          r800_ffff_tmp130 = simd_and(r800_ffff_tmp126, bytetest_84_84);
          struct_Cn.cc = simd_or(r800_ffff_tmp130, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ae = simd_and(tmp105, tmp159);
          bytetest_8b_8d = simd_and(tmp258, r800_ffff_tmp43);
          r800_ffff_tmp131 = simd_and(r800_ffff_tmp126, bytetest_8b_8d);
          struct_Cn.cc = simd_or(r800_ffff_tmp131, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ae = simd_and(tmp105, tmp159);
          bytetest_91_91 = simd_and(tmp71, tmp11);
          r800_ffff_tmp132 = simd_and(r800_ffff_tmp126, bytetest_91_91);
          struct_Cn.cc = simd_or(r800_ffff_tmp132, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ae = simd_and(tmp105, tmp159);
          r800_ffff_tmp133 = simd_or(simd_and(basis_bits.bit_4, tmp207), simd_andc(tmp200, basis_bits.bit_4));
          bytetest_96_98 = simd_and(tmp71, r800_ffff_tmp133);
          r800_ffff_tmp134 = simd_and(r800_ffff_tmp126, bytetest_96_98);
          struct_Cn.cc = simd_or(r800_ffff_tmp134, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ae = simd_and(tmp105, tmp159);
          bytetest_9b_9b = simd_and(tmp71, tmp84);
          r800_ffff_tmp135 = simd_and(r800_ffff_tmp126, bytetest_9b_9b);
          struct_Cn.cc = simd_or(r800_ffff_tmp135, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ae = simd_and(tmp105, tmp159);
          bytetest_9d_9d = simd_and(tmp71, tmp97);
          r800_ffff_tmp136 = simd_and(r800_ffff_tmp126, bytetest_9d_9d);
          struct_Cn.cc = simd_or(r800_ffff_tmp136, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ae = simd_and(tmp105, tmp159);
          r800_ffff_tmp137 = simd_andc(tmp105, tmp4);
          bytetest_a0_a2 = simd_andc(r800_ffff_tmp137, tmp30);
          r800_ffff_tmp138 = simd_and(r800_ffff_tmp126, bytetest_a0_a2);
          struct_Cn.cc = simd_or(r800_ffff_tmp138, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ae = simd_and(tmp105, tmp159);
          bytetest_a5_a7 = simd_and(tmp295, tmp5);
          r800_ffff_tmp139 = simd_and(r800_ffff_tmp126, bytetest_a5_a7);
          struct_Cn.cc = simd_or(r800_ffff_tmp139, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ae = simd_and(tmp105, tmp159);
          r800_ffff_tmp140 = simd_and(tmp105, basis_bits.bit_4);
          bytetest_ab_ad = simd_and(r800_ffff_tmp140, r800_ffff_tmp43);
          r800_ffff_tmp141 = simd_and(r800_ffff_tmp126, bytetest_ab_ad);
          struct_Cn.cc = simd_or(r800_ffff_tmp141, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ae = simd_and(tmp105, tmp159);
          r800_ffff_tmp142 = simd_or(simd_and(basis_bits.bit_5, r800_ffff_tmp42), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
          bytetest_ba_bd = simd_and(bytetest_b8_bf, r800_ffff_tmp142);
          r800_ffff_tmp143 = simd_and(r800_ffff_tmp126, bytetest_ba_bd);
          struct_Cn.cc = simd_or(r800_ffff_tmp143, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_af = simd_and(tmp105, tmp99);
          bytetest_83_85 = simd_and(tmp308, r800_ffff_tmp43);
          r800_ffff_tmp144 = simd_and(r800_ffff_tmp3, bytetest_af);
          carryQ.cq[138] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp144, carryQ.get_carry_in(138), r800_ffff_tmp145));
          r800_ffff_tmp146 = simd_and(r800_ffff_tmp145, bytetest_83_85);
          struct_Cn.cc = simd_or(r800_ffff_tmp146, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_af = simd_and(tmp105, tmp99);
          bytetest_89_89 = simd_and(tmp66, tmp221);
          r800_ffff_tmp147 = simd_and(r800_ffff_tmp145, bytetest_89_89);
          struct_Cn.cc = simd_or(r800_ffff_tmp147, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_af = simd_and(tmp105, tmp99);
          bytetest_8e_8f = simd_and(tmp66, tmp18);
          r800_ffff_tmp148 = simd_and(r800_ffff_tmp145, bytetest_8e_8f);
          struct_Cn.cc = simd_or(r800_ffff_tmp148, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_af = simd_and(tmp105, tmp99);
          r800_ffff_tmp149 = simd_andc(tmp71, basis_bits.bit_4);
          r800_ffff_tmp150 = simd_or(simd_and(basis_bits.bit_5, tmp309), simd_andc(tmp5, basis_bits.bit_5));
          bytetest_91_96 = simd_and(r800_ffff_tmp149, r800_ffff_tmp150);
          r800_ffff_tmp151 = simd_and(r800_ffff_tmp145, bytetest_91_96);
          struct_Cn.cc = simd_or(r800_ffff_tmp151, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_af = simd_and(tmp105, tmp99);
          r800_ffff_tmp152 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp81), simd_andc(tmp279, basis_bits.bit_2));
          bytetest_98_a5 = simd_and(bytetest_80_bf, r800_ffff_tmp152);
          r800_ffff_tmp153 = simd_and(r800_ffff_tmp145, bytetest_98_a5);
          struct_Cn.cc = simd_or(r800_ffff_tmp153, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b0 = simd_andc(bytetest_b0_bf, tmp6);
          bytetest_80_80 = simd_andc(tmp66, tmp6);
          r800_ffff_tmp154 = simd_and(r800_ffff_tmp3, bytetest_b0);
          carryQ.cq[139] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp154, carryQ.get_carry_in(139), r800_ffff_tmp155));
          r800_ffff_tmp156 = simd_and(r800_ffff_tmp155, bytetest_80_80);
          bytetest_af = simd_and(tmp105, tmp99);
          bytetest_bb_bf = simd_and(bytetest_b8_bf, tmp106);
          r800_ffff_tmp157 = simd_and(r800_ffff_tmp145, bytetest_bb_bf);
          r800_ffff_tmp158 = simd_or(r800_ffff_tmp157, r800_ffff_tmp156);
          struct_Cn.cc = simd_or(r800_ffff_tmp158, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b0 = simd_andc(bytetest_b0_bf, tmp6);
          bytetest_84_84 = simd_and(tmp66, tmp45);
          r800_ffff_tmp159 = simd_and(r800_ffff_tmp155, bytetest_84_84);
          struct_Cn.cc = simd_or(r800_ffff_tmp159, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b0 = simd_andc(bytetest_b0_bf, tmp6);
          bytetest_8d_8d = simd_and(tmp66, tmp97);
          r800_ffff_tmp160 = simd_and(r800_ffff_tmp155, bytetest_8d_8d);
          struct_Cn.cc = simd_or(r800_ffff_tmp160, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b0 = simd_andc(bytetest_b0_bf, tmp6);
          bytetest_91_91 = simd_and(tmp71, tmp11);
          r800_ffff_tmp161 = simd_and(r800_ffff_tmp155, bytetest_91_91);
          struct_Cn.cc = simd_or(r800_ffff_tmp161, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b0 = simd_andc(bytetest_b0_bf, tmp6);
          bytetest_a9_a9 = simd_and(tmp105, tmp221);
          r800_ffff_tmp162 = simd_and(r800_ffff_tmp155, bytetest_a9_a9);
          struct_Cn.cc = simd_or(r800_ffff_tmp162, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b0 = simd_andc(bytetest_b0_bf, tmp6);
          bytetest_b4_b4 = simd_and(bytetest_b0_bf, tmp45);
          r800_ffff_tmp163 = simd_and(r800_ffff_tmp155, bytetest_b4_b4);
          struct_Cn.cc = simd_or(r800_ffff_tmp163, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b0 = simd_andc(bytetest_b0_bf, tmp6);
          r800_ffff_tmp164 = simd_or(simd_and(basis_bits.bit_5, tmp245), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
          bytetest_ba_bc = simd_and(bytetest_b8_bf, r800_ffff_tmp164);
          r800_ffff_tmp165 = simd_and(r800_ffff_tmp155, bytetest_ba_bc);
          struct_Cn.cc = simd_or(r800_ffff_tmp165, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b1 = simd_and(bytetest_b0_bf, tmp11);
          bytetest_85_85 = simd_and(tmp66, tmp46);
          r800_ffff_tmp166 = simd_and(r800_ffff_tmp3, bytetest_b1);
          carryQ.cq[140] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp166, carryQ.get_carry_in(140), r800_ffff_tmp167));
          r800_ffff_tmp168 = simd_and(r800_ffff_tmp167, bytetest_85_85);
          struct_Cn.cc = simd_or(r800_ffff_tmp168, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b1 = simd_and(bytetest_b0_bf, tmp11);
          bytetest_89_89 = simd_and(tmp66, tmp221);
          r800_ffff_tmp169 = simd_and(r800_ffff_tmp167, bytetest_89_89);
          struct_Cn.cc = simd_or(r800_ffff_tmp169, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b1 = simd_and(bytetest_b0_bf, tmp11);
          r800_ffff_tmp170 = simd_not(tmp155);
          r800_ffff_tmp171 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp170), simd_andc(tmp18, basis_bits.bit_3));
          bytetest_8e_94 = simd_and(bytetest_80_9f, r800_ffff_tmp171);
          r800_ffff_tmp172 = simd_and(r800_ffff_tmp167, bytetest_8e_94);
          struct_Cn.cc = simd_or(r800_ffff_tmp172, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b1 = simd_and(bytetest_b0_bf, tmp11);
          bytetest_97_97 = simd_and(tmp71, tmp55);
          r800_ffff_tmp173 = simd_and(r800_ffff_tmp167, bytetest_97_97);
          struct_Cn.cc = simd_or(r800_ffff_tmp173, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b1 = simd_and(bytetest_b0_bf, tmp11);
          r800_ffff_tmp174 = simd_and(tmp71, basis_bits.bit_4);
          bytetest_9a_9f = simd_and(r800_ffff_tmp174, tmp32);
          r800_ffff_tmp175 = simd_and(r800_ffff_tmp167, bytetest_9a_9f);
          struct_Cn.cc = simd_or(r800_ffff_tmp175, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b1 = simd_and(bytetest_b0_bf, tmp11);
          bytetest_a4_a5 = simd_and(tmp105, tmp124);
          r800_ffff_tmp176 = simd_and(r800_ffff_tmp167, bytetest_a4_a5);
          struct_Cn.cc = simd_or(r800_ffff_tmp176, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b1 = simd_and(bytetest_b0_bf, tmp11);
          bytetest_b0_b7 = simd_andc(bytetest_b0_bf, basis_bits.bit_4);
          r800_ffff_tmp177 = simd_and(r800_ffff_tmp167, bytetest_b0_b7);
          struct_Cn.cc = simd_or(r800_ffff_tmp177, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp91);
          bytetest_80_81 = simd_andc(tmp66, tmp15);
          r800_ffff_tmp178 = simd_and(r800_ffff_tmp3, bytetest_b2);
          carryQ.cq[141] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp178, carryQ.get_carry_in(141), r800_ffff_tmp179));
          r800_ffff_tmp180 = simd_and(r800_ffff_tmp179, bytetest_80_81);
          struct_Cn.cc = simd_or(r800_ffff_tmp180, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp91);
          bytetest_84_84 = simd_and(tmp66, tmp45);
          r800_ffff_tmp181 = simd_and(r800_ffff_tmp179, bytetest_84_84);
          struct_Cn.cc = simd_or(r800_ffff_tmp181, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp91);
          bytetest_8d_8d = simd_and(tmp66, tmp97);
          r800_ffff_tmp182 = simd_and(r800_ffff_tmp179, bytetest_8d_8d);
          struct_Cn.cc = simd_or(r800_ffff_tmp182, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp91);
          bytetest_91_91 = simd_and(tmp71, tmp11);
          r800_ffff_tmp183 = simd_and(r800_ffff_tmp179, bytetest_91_91);
          struct_Cn.cc = simd_or(r800_ffff_tmp183, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp91);
          bytetest_a9_a9 = simd_and(tmp105, tmp221);
          r800_ffff_tmp184 = simd_and(r800_ffff_tmp179, bytetest_a9_a9);
          struct_Cn.cc = simd_or(r800_ffff_tmp184, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp91);
          bytetest_b4_b4 = simd_and(bytetest_b0_bf, tmp45);
          r800_ffff_tmp185 = simd_and(r800_ffff_tmp179, bytetest_b4_b4);
          struct_Cn.cc = simd_or(r800_ffff_tmp185, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp91);
          bytetest_ba_bb = simd_and(bytetest_b0_bf, tmp217);
          r800_ffff_tmp186 = simd_and(r800_ffff_tmp179, bytetest_ba_bb);
          struct_Cn.cc = simd_or(r800_ffff_tmp186, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp31);
          bytetest_85_85 = simd_and(tmp66, tmp46);
          r800_ffff_tmp187 = simd_and(r800_ffff_tmp3, bytetest_b3);
          carryQ.cq[142] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp187, carryQ.get_carry_in(142), r800_ffff_tmp188));
          r800_ffff_tmp189 = simd_and(r800_ffff_tmp188, bytetest_85_85);
          struct_Cn.cc = simd_or(r800_ffff_tmp189, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp31);
          bytetest_89_89 = simd_and(tmp66, tmp221);
          r800_ffff_tmp190 = simd_and(r800_ffff_tmp188, bytetest_89_89);
          struct_Cn.cc = simd_or(r800_ffff_tmp190, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp31);
          bytetest_8e_94 = simd_and(bytetest_80_9f, r800_ffff_tmp171);
          r800_ffff_tmp191 = simd_and(r800_ffff_tmp188, bytetest_8e_94);
          struct_Cn.cc = simd_or(r800_ffff_tmp191, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp31);
          r800_ffff_tmp192 = simd_not(tmp200);
          r800_ffff_tmp193 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp192), simd_andc(tmp160, basis_bits.bit_4));
          bytetest_97_9d = simd_and(tmp71, r800_ffff_tmp193);
          r800_ffff_tmp194 = simd_and(r800_ffff_tmp188, bytetest_97_9d);
          struct_Cn.cc = simd_or(r800_ffff_tmp194, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp31);
          bytetest_9f_9f = simd_and(tmp71, tmp99);
          r800_ffff_tmp195 = simd_and(r800_ffff_tmp188, bytetest_9f_9f);
          struct_Cn.cc = simd_or(r800_ffff_tmp195, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp31);
          bytetest_a4_a5 = simd_and(tmp105, tmp124);
          r800_ffff_tmp196 = simd_and(r800_ffff_tmp188, bytetest_a4_a5);
          struct_Cn.cc = simd_or(r800_ffff_tmp196, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp31);
          bytetest_b0_b0 = simd_andc(bytetest_b0_bf, tmp6);
          r800_ffff_tmp197 = simd_and(r800_ffff_tmp188, bytetest_b0_b0);
          struct_Cn.cc = simd_or(r800_ffff_tmp197, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b4 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_80_81 = simd_andc(tmp66, tmp15);
          r800_ffff_tmp198 = simd_and(r800_ffff_tmp3, bytetest_b4);
          carryQ.cq[143] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp198, carryQ.get_carry_in(143), r800_ffff_tmp199));
          r800_ffff_tmp200 = simd_and(r800_ffff_tmp199, bytetest_80_81);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp31);
          bytetest_b3_bf = simd_and(bytetest_b0_bf, tmp107);
          r800_ffff_tmp201 = simd_and(r800_ffff_tmp188, bytetest_b3_bf);
          r800_ffff_tmp202 = simd_or(r800_ffff_tmp201, r800_ffff_tmp200);
          struct_Cn.cc = simd_or(r800_ffff_tmp202, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b4 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_84_84 = simd_and(tmp66, tmp45);
          r800_ffff_tmp203 = simd_and(r800_ffff_tmp199, bytetest_84_84);
          struct_Cn.cc = simd_or(r800_ffff_tmp203, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b4 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_8d_8d = simd_and(tmp66, tmp97);
          r800_ffff_tmp204 = simd_and(r800_ffff_tmp199, bytetest_8d_8d);
          struct_Cn.cc = simd_or(r800_ffff_tmp204, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b4 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_91_91 = simd_and(tmp71, tmp11);
          r800_ffff_tmp205 = simd_and(r800_ffff_tmp199, bytetest_91_91);
          struct_Cn.cc = simd_or(r800_ffff_tmp205, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b4 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_bb_bc = simd_and(bytetest_b8_bf, tmp246);
          r800_ffff_tmp206 = simd_and(r800_ffff_tmp199, bytetest_bb_bc);
          struct_Cn.cc = simd_or(r800_ffff_tmp206, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b5 = simd_and(bytetest_b0_bf, tmp46);
          bytetest_85_85 = simd_and(tmp66, tmp46);
          r800_ffff_tmp207 = simd_and(r800_ffff_tmp3, bytetest_b5);
          carryQ.cq[144] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp207, carryQ.get_carry_in(144), r800_ffff_tmp208));
          r800_ffff_tmp209 = simd_and(r800_ffff_tmp208, bytetest_85_85);
          struct_Cn.cc = simd_or(r800_ffff_tmp209, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b5 = simd_and(bytetest_b0_bf, tmp46);
          bytetest_89_89 = simd_and(tmp66, tmp221);
          r800_ffff_tmp210 = simd_and(r800_ffff_tmp208, bytetest_89_89);
          struct_Cn.cc = simd_or(r800_ffff_tmp210, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b5 = simd_and(bytetest_b0_bf, tmp46);
          bytetest_8f_96 = simd_and(bytetest_80_9f, r800_ffff_tmp53);
          r800_ffff_tmp211 = simd_and(r800_ffff_tmp208, bytetest_8f_96);
          struct_Cn.cc = simd_or(r800_ffff_tmp211, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b5 = simd_and(bytetest_b0_bf, tmp46);
          bytetest_98_9f = simd_and(tmp71, basis_bits.bit_4);
          r800_ffff_tmp212 = simd_and(r800_ffff_tmp208, bytetest_98_9f);
          struct_Cn.cc = simd_or(r800_ffff_tmp212, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b5 = simd_and(bytetest_b0_bf, tmp46);
          bytetest_a4_a5 = simd_and(tmp105, tmp124);
          r800_ffff_tmp213 = simd_and(r800_ffff_tmp208, bytetest_a4_a5);
          struct_Cn.cc = simd_or(r800_ffff_tmp213, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b5 = simd_and(bytetest_b0_bf, tmp46);
          bytetest_b6_b8 = simd_and(bytetest_b0_bf, r800_ffff_tmp133);
          r800_ffff_tmp214 = simd_and(r800_ffff_tmp208, bytetest_b6_b8);
          struct_Cn.cc = simd_or(r800_ffff_tmp214, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b6 = simd_and(bytetest_b0_bf, tmp118);
          bytetest_80_81 = simd_andc(tmp66, tmp15);
          r800_ffff_tmp215 = simd_and(r800_ffff_tmp3, bytetest_b6);
          carryQ.cq[145] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp215, carryQ.get_carry_in(145), r800_ffff_tmp216));
          r800_ffff_tmp217 = simd_and(r800_ffff_tmp216, bytetest_80_81);
          struct_Cn.cc = simd_or(r800_ffff_tmp217, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b6 = simd_and(bytetest_b0_bf, tmp118);
          bytetest_84_84 = simd_and(tmp66, tmp45);
          r800_ffff_tmp218 = simd_and(r800_ffff_tmp216, bytetest_84_84);
          struct_Cn.cc = simd_or(r800_ffff_tmp218, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b6 = simd_and(bytetest_b0_bf, tmp118);
          bytetest_97_99 = simd_and(tmp71, tmp268);
          r800_ffff_tmp219 = simd_and(r800_ffff_tmp216, bytetest_97_99);
          struct_Cn.cc = simd_or(r800_ffff_tmp219, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b6 = simd_and(bytetest_b0_bf, tmp118);
          bytetest_b2_b2 = simd_and(bytetest_b0_bf, tmp91);
          r800_ffff_tmp220 = simd_and(r800_ffff_tmp216, bytetest_b2_b2);
          struct_Cn.cc = simd_or(r800_ffff_tmp220, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b6 = simd_and(bytetest_b0_bf, tmp118);
          bytetest_bc_bc = simd_and(bytetest_b0_bf, tmp180);
          r800_ffff_tmp221 = simd_and(r800_ffff_tmp216, bytetest_bc_bc);
          struct_Cn.cc = simd_or(r800_ffff_tmp221, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b6 = simd_and(bytetest_b0_bf, tmp118);
          bytetest_be_bf = simd_and(bytetest_b0_bf, tmp18);
          r800_ffff_tmp222 = simd_and(r800_ffff_tmp216, bytetest_be_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp222, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b7 = simd_and(bytetest_b0_bf, tmp55);
          bytetest_87_89 = simd_and(tmp66, tmp268);
          r800_ffff_tmp223 = simd_and(r800_ffff_tmp3, bytetest_b7);
          carryQ.cq[146] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp223, carryQ.get_carry_in(146), r800_ffff_tmp224));
          r800_ffff_tmp225 = simd_and(r800_ffff_tmp224, bytetest_87_89);
          struct_Cn.cc = simd_or(r800_ffff_tmp225, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b7 = simd_and(bytetest_b0_bf, tmp55);
          bytetest_8b_8e = simd_and(tmp258, tmp310);
          r800_ffff_tmp226 = simd_and(r800_ffff_tmp224, bytetest_8b_8e);
          struct_Cn.cc = simd_or(r800_ffff_tmp226, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b7 = simd_and(bytetest_b0_bf, tmp55);
          bytetest_95_95 = simd_and(tmp71, tmp46);
          r800_ffff_tmp227 = simd_and(r800_ffff_tmp224, bytetest_95_95);
          struct_Cn.cc = simd_or(r800_ffff_tmp227, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b7 = simd_and(bytetest_b0_bf, tmp55);
          bytetest_97_97 = simd_and(tmp71, tmp55);
          r800_ffff_tmp228 = simd_and(r800_ffff_tmp224, bytetest_97_97);
          struct_Cn.cc = simd_or(r800_ffff_tmp228, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b7 = simd_and(bytetest_b0_bf, tmp55);
          bytetest_a0_b1 = simd_andc(bytetest_a0_bf, tmp111);
          r800_ffff_tmp229 = simd_and(r800_ffff_tmp224, bytetest_a0_b1);
          struct_Cn.cc = simd_or(r800_ffff_tmp229, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp149);
          bytetest_80_80 = simd_andc(tmp66, tmp6);
          r800_ffff_tmp230 = simd_and(r800_ffff_tmp3, bytetest_b8);
          carryQ.cq[147] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp230, carryQ.get_carry_in(147), r800_ffff_tmp231));
          r800_ffff_tmp232 = simd_and(r800_ffff_tmp231, bytetest_80_80);
          bytetest_b7 = simd_and(bytetest_b0_bf, tmp55);
          bytetest_b5_bf = simd_and(bytetest_b0_bf, tmp155);
          r800_ffff_tmp233 = simd_and(r800_ffff_tmp224, bytetest_b5_bf);
          r800_ffff_tmp234 = simd_or(r800_ffff_tmp233, r800_ffff_tmp232);
          struct_Cn.cc = simd_or(r800_ffff_tmp234, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp149);
          bytetest_bb_be = simd_and(bytetest_b8_bf, tmp310);
          r800_ffff_tmp235 = simd_and(r800_ffff_tmp231, bytetest_bb_be);
          struct_Cn.cc = simd_or(r800_ffff_tmp235, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp74);
          bytetest_80_80 = simd_andc(tmp66, tmp6);
          r800_ffff_tmp236 = simd_and(r800_ffff_tmp3, bytetest_ba);
          carryQ.cq[148] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp236, carryQ.get_carry_in(148), r800_ffff_tmp237));
          r800_ffff_tmp238 = simd_and(r800_ffff_tmp237, bytetest_80_80);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp221);
          bytetest_9c_bf = simd_and(bytetest_80_bf, tmp80);
          r800_ffff_tmp239 = simd_and(r800_ffff_tmp3, bytetest_b9);
          carryQ.cq[149] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp239, carryQ.get_carry_in(149), r800_ffff_tmp240));
          r800_ffff_tmp241 = simd_and(r800_ffff_tmp240, bytetest_9c_bf);
          r800_ffff_tmp242 = simd_or(r800_ffff_tmp241, r800_ffff_tmp238);
          struct_Cn.cc = simd_or(r800_ffff_tmp242, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp74);
          bytetest_83_83 = simd_and(tmp66, tmp31);
          r800_ffff_tmp243 = simd_and(r800_ffff_tmp237, bytetest_83_83);
          struct_Cn.cc = simd_or(r800_ffff_tmp243, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp74);
          bytetest_85_86 = simd_and(r800_ffff_tmp46, tmp297);
          r800_ffff_tmp244 = simd_and(r800_ffff_tmp237, bytetest_85_86);
          struct_Cn.cc = simd_or(r800_ffff_tmp244, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp74);
          bytetest_89_89 = simd_and(tmp66, tmp221);
          r800_ffff_tmp245 = simd_and(r800_ffff_tmp237, bytetest_89_89);
          struct_Cn.cc = simd_or(r800_ffff_tmp245, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp74);
          bytetest_8b_8c = simd_and(tmp258, tmp246);
          r800_ffff_tmp246 = simd_and(r800_ffff_tmp237, bytetest_8b_8c);
          struct_Cn.cc = simd_or(r800_ffff_tmp246, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp74);
          r800_ffff_tmp247 = simd_not(tmp4);
          r800_ffff_tmp248 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp247), simd_andc(tmp18, basis_bits.bit_3));
          bytetest_8e_93 = simd_and(bytetest_80_9f, r800_ffff_tmp248);
          r800_ffff_tmp249 = simd_and(r800_ffff_tmp237, bytetest_8e_93);
          struct_Cn.cc = simd_or(r800_ffff_tmp249, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp74);
          bytetest_98_98 = simd_and(tmp71, tmp149);
          r800_ffff_tmp250 = simd_and(r800_ffff_tmp237, bytetest_98_98);
          struct_Cn.cc = simd_or(r800_ffff_tmp250, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp74);
          bytetest_a0_a0 = simd_andc(tmp105, tmp6);
          r800_ffff_tmp251 = simd_and(r800_ffff_tmp237, bytetest_a0_a0);
          struct_Cn.cc = simd_or(r800_ffff_tmp251, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp74);
          bytetest_a4_a4 = simd_and(tmp105, tmp45);
          r800_ffff_tmp252 = simd_and(r800_ffff_tmp237, bytetest_a4_a4);
          struct_Cn.cc = simd_or(r800_ffff_tmp252, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp74);
          bytetest_a6_a6 = simd_and(tmp105, tmp118);
          r800_ffff_tmp253 = simd_and(r800_ffff_tmp237, bytetest_a6_a6);
          struct_Cn.cc = simd_or(r800_ffff_tmp253, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp74);
          r800_ffff_tmp254 = simd_andc(tmp72, basis_bits.bit_6);
          bytetest_a8_a9 = simd_and(tmp105, r800_ffff_tmp254);
          r800_ffff_tmp255 = simd_and(r800_ffff_tmp237, bytetest_a8_a9);
          struct_Cn.cc = simd_or(r800_ffff_tmp255, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp74);
          bytetest_ac_ac = simd_and(tmp105, tmp180);
          r800_ffff_tmp256 = simd_and(r800_ffff_tmp237, bytetest_ac_ac);
          struct_Cn.cc = simd_or(r800_ffff_tmp256, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp74);
          bytetest_ba_ba = simd_and(bytetest_b0_bf, tmp74);
          r800_ffff_tmp257 = simd_and(r800_ffff_tmp237, bytetest_ba_ba);
          struct_Cn.cc = simd_or(r800_ffff_tmp257, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp74);
          bytetest_be_bf = simd_and(bytetest_b0_bf, tmp18);
          r800_ffff_tmp258 = simd_and(r800_ffff_tmp237, bytetest_be_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp258, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp84);
          bytetest_85_85 = simd_and(tmp66, tmp46);
          r800_ffff_tmp259 = simd_and(r800_ffff_tmp3, bytetest_bb);
          carryQ.cq[150] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp259, carryQ.get_carry_in(150), r800_ffff_tmp260));
          r800_ffff_tmp261 = simd_and(r800_ffff_tmp260, bytetest_85_85);
          struct_Cn.cc = simd_or(r800_ffff_tmp261, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp84);
          bytetest_87_87 = simd_and(tmp66, tmp55);
          r800_ffff_tmp262 = simd_and(r800_ffff_tmp260, bytetest_87_87);
          struct_Cn.cc = simd_or(r800_ffff_tmp262, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp84);
          bytetest_8e_8f = simd_and(tmp66, tmp18);
          r800_ffff_tmp263 = simd_and(r800_ffff_tmp260, bytetest_8e_8f);
          struct_Cn.cc = simd_or(r800_ffff_tmp263, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp84);
          bytetest_9a_9b = simd_and(tmp71, tmp217);
          r800_ffff_tmp264 = simd_and(r800_ffff_tmp260, bytetest_9a_9b);
          struct_Cn.cc = simd_or(r800_ffff_tmp264, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp84);
          bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
          r800_ffff_tmp265 = simd_and(r800_ffff_tmp260, bytetest_a0_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp265, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bd = simd_and(bytetest_b0_bf, tmp97);
          bytetest_88_88 = simd_and(tmp66, tmp149);
          r800_ffff_tmp266 = simd_and(r800_ffff_tmp3, bytetest_bd);
          carryQ.cq[151] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp266, carryQ.get_carry_in(151), r800_ffff_tmp267));
          r800_ffff_tmp268 = simd_and(r800_ffff_tmp267, bytetest_88_88);
          struct_Cn.cc = simd_or(r800_ffff_tmp268, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bd = simd_and(bytetest_b0_bf, tmp97);
          r800_ffff_tmp269 = simd_or(simd_and(basis_bits.bit_3, tmp357), simd_andc(r800_ffff_tmp23, basis_bits.bit_3));
          bytetest_ad_b0 = simd_and(bytetest_a0_bf, r800_ffff_tmp269);
          r800_ffff_tmp270 = simd_and(r800_ffff_tmp267, bytetest_ad_b0);
          struct_Cn.cc = simd_or(r800_ffff_tmp270, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_be = simd_and(bytetest_b0_bf, tmp159);
          bytetest_98_98 = simd_and(tmp71, tmp149);
          r800_ffff_tmp271 = simd_and(r800_ffff_tmp3, bytetest_be);
          carryQ.cq[152] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp271, carryQ.get_carry_in(152), r800_ffff_tmp272));
          r800_ffff_tmp273 = simd_and(r800_ffff_tmp272, bytetest_98_98);
          struct_Cn.cc = simd_or(r800_ffff_tmp273, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_be = simd_and(bytetest_b0_bf, tmp159);
          bytetest_bd_bd = simd_and(bytetest_b0_bf, tmp97);
          r800_ffff_tmp274 = simd_and(r800_ffff_tmp272, bytetest_bd_bd);
          struct_Cn.cc = simd_or(r800_ffff_tmp274, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp99);
          bytetest_8d_8d = simd_and(tmp66, tmp97);
          r800_ffff_tmp275 = simd_and(r800_ffff_tmp3, bytetest_bf);
          carryQ.cq[153] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp275, carryQ.get_carry_in(153), r800_ffff_tmp276));
          r800_ffff_tmp277 = simd_and(r800_ffff_tmp276, bytetest_8d_8d);
          struct_Cn.cc = simd_or(r800_ffff_tmp277, struct_Cn.cc);
          bytetest_e0 = simd_andc(r800_ffff_tmp1, tmp6);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp99);
          bytetest_9b_bf = simd_and(bytetest_80_bf, tmp380);
          r800_ffff_tmp278 = simd_and(r800_ffff_tmp276, bytetest_9b_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp278, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_83 = simd_and(tmp66, tmp31);
          bytetest_86_86 = simd_and(tmp66, tmp118);
          r800_ffff_tmp279 = simd_and(tmp21, bytetest_e1);
          carryQ.cq[154] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp279, carryQ.get_carry_in(154), r800_ffff_tmp280));
          r800_ffff_tmp281 = simd_and(r800_ffff_tmp280, bytetest_83);
          carryQ.cq[155] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp281, carryQ.get_carry_in(155), r800_ffff_tmp282));
          r800_ffff_tmp283 = simd_and(r800_ffff_tmp282, bytetest_86_86);
          struct_Cn.cc = simd_or(r800_ffff_tmp283, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_83 = simd_and(tmp66, tmp31);
          bytetest_88_8c = simd_andc(tmp258, tmp154);
          r800_ffff_tmp284 = simd_and(r800_ffff_tmp282, bytetest_88_8c);
          struct_Cn.cc = simd_or(r800_ffff_tmp284, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_83 = simd_and(tmp66, tmp31);
          bytetest_8e_8f = simd_and(tmp66, tmp18);
          r800_ffff_tmp285 = simd_and(r800_ffff_tmp282, bytetest_8e_8f);
          struct_Cn.cc = simd_or(r800_ffff_tmp285, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_89 = simd_and(tmp66, tmp221);
          bytetest_89_89 = simd_and(tmp66, tmp221);
          r800_ffff_tmp286 = simd_and(r800_ffff_tmp280, bytetest_89);
          carryQ.cq[156] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp286, carryQ.get_carry_in(156), r800_ffff_tmp287));
          r800_ffff_tmp288 = simd_and(r800_ffff_tmp287, bytetest_89_89);
          struct_Cn.cc = simd_or(r800_ffff_tmp288, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_89 = simd_and(tmp66, tmp221);
          bytetest_8e_8f = simd_and(tmp66, tmp18);
          r800_ffff_tmp289 = simd_and(r800_ffff_tmp287, bytetest_8e_8f);
          struct_Cn.cc = simd_or(r800_ffff_tmp289, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_89 = simd_and(tmp66, tmp221);
          bytetest_97_97 = simd_and(tmp71, tmp55);
          r800_ffff_tmp290 = simd_and(r800_ffff_tmp287, bytetest_97_97);
          struct_Cn.cc = simd_or(r800_ffff_tmp290, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_89 = simd_and(tmp66, tmp221);
          bytetest_99_99 = simd_and(tmp71, tmp221);
          r800_ffff_tmp291 = simd_and(r800_ffff_tmp287, bytetest_99_99);
          struct_Cn.cc = simd_or(r800_ffff_tmp291, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_89 = simd_and(tmp66, tmp221);
          bytetest_9e_9f = simd_and(tmp71, tmp18);
          r800_ffff_tmp292 = simd_and(r800_ffff_tmp287, bytetest_9e_9f);
          struct_Cn.cc = simd_or(r800_ffff_tmp292, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_8a = simd_and(tmp66, tmp74);
          bytetest_89_89 = simd_and(tmp66, tmp221);
          r800_ffff_tmp293 = simd_and(r800_ffff_tmp280, bytetest_8a);
          carryQ.cq[157] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp293, carryQ.get_carry_in(157), r800_ffff_tmp294));
          r800_ffff_tmp295 = simd_and(r800_ffff_tmp294, bytetest_89_89);
          struct_Cn.cc = simd_or(r800_ffff_tmp295, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_8a = simd_and(tmp66, tmp74);
          bytetest_8e_8f = simd_and(tmp66, tmp18);
          r800_ffff_tmp296 = simd_and(r800_ffff_tmp294, bytetest_8e_8f);
          struct_Cn.cc = simd_or(r800_ffff_tmp296, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_8a = simd_and(tmp66, tmp74);
          bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp11);
          r800_ffff_tmp297 = simd_and(r800_ffff_tmp294, bytetest_b1_b1);
          struct_Cn.cc = simd_or(r800_ffff_tmp297, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_8a = simd_and(tmp66, tmp74);
          bytetest_b6_b7 = simd_and(bytetest_b0_bf, tmp271);
          r800_ffff_tmp298 = simd_and(r800_ffff_tmp294, bytetest_b6_b7);
          struct_Cn.cc = simd_or(r800_ffff_tmp298, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_8a = simd_and(tmp66, tmp74);
          bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp99);
          r800_ffff_tmp299 = simd_and(r800_ffff_tmp294, bytetest_bf_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp299, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_8b = simd_and(tmp66, tmp84);
          bytetest_81_81 = simd_and(tmp66, tmp11);
          r800_ffff_tmp300 = simd_and(r800_ffff_tmp280, bytetest_8b);
          carryQ.cq[158] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp300, carryQ.get_carry_in(158), r800_ffff_tmp301));
          r800_ffff_tmp302 = simd_and(r800_ffff_tmp301, bytetest_81_81);
          struct_Cn.cc = simd_or(r800_ffff_tmp302, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_8b = simd_and(tmp66, tmp84);
          bytetest_86_87 = simd_and(tmp66, tmp271);
          r800_ffff_tmp303 = simd_and(r800_ffff_tmp301, bytetest_86_87);
          struct_Cn.cc = simd_or(r800_ffff_tmp303, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_8b = simd_and(tmp66, tmp84);
          bytetest_97_97 = simd_and(tmp71, tmp55);
          r800_ffff_tmp304 = simd_and(r800_ffff_tmp301, bytetest_97_97);
          struct_Cn.cc = simd_or(r800_ffff_tmp304, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_8c = simd_and(tmp66, tmp180);
          bytetest_91_91 = simd_and(tmp71, tmp11);
          r800_ffff_tmp305 = simd_and(r800_ffff_tmp280, bytetest_8c);
          carryQ.cq[159] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp305, carryQ.get_carry_in(159), r800_ffff_tmp306));
          r800_ffff_tmp307 = simd_and(r800_ffff_tmp306, bytetest_91_91);
          struct_Cn.cc = simd_or(r800_ffff_tmp307, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_8c = simd_and(tmp66, tmp180);
          bytetest_96_97 = simd_and(tmp71, tmp271);
          r800_ffff_tmp308 = simd_and(r800_ffff_tmp306, bytetest_96_97);
          struct_Cn.cc = simd_or(r800_ffff_tmp308, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_8d = simd_and(tmp66, tmp97);
          bytetest_9b_9c = simd_and(bytetest_98_9f, tmp246);
          r800_ffff_tmp309 = simd_and(r800_ffff_tmp280, bytetest_8d);
          carryQ.cq[160] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp309, carryQ.get_carry_in(160), r800_ffff_tmp310));
          r800_ffff_tmp311 = simd_and(r800_ffff_tmp310, bytetest_9b_9c);
          struct_Cn.cc = simd_or(r800_ffff_tmp311, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_8d = simd_and(tmp66, tmp97);
          bytetest_bd_bf = simd_and(bytetest_bc_bf, tmp5);
          r800_ffff_tmp312 = simd_and(r800_ffff_tmp310, bytetest_bd_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp312, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_8e = simd_and(tmp66, tmp159);
          bytetest_9a_9f = simd_and(bytetest_98_9f, tmp32);
          r800_ffff_tmp313 = simd_and(r800_ffff_tmp280, bytetest_8e);
          carryQ.cq[161] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp313, carryQ.get_carry_in(161), r800_ffff_tmp314));
          r800_ffff_tmp315 = simd_and(r800_ffff_tmp314, bytetest_9a_9f);
          struct_Cn.cc = simd_or(r800_ffff_tmp315, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_8f = simd_and(tmp66, tmp99);
          bytetest_b5_bf = simd_and(bytetest_b0_bf, tmp155);
          r800_ffff_tmp316 = simd_and(r800_ffff_tmp280, bytetest_8f);
          carryQ.cq[162] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp316, carryQ.get_carry_in(162), r800_ffff_tmp317));
          r800_ffff_tmp318 = simd_and(r800_ffff_tmp317, bytetest_b5_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp318, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9a = simd_and(tmp71, tmp74);
          r800_ffff_tmp319 = simd_and(tmp71, tmp17);
          bytetest_9d_9f = simd_and(r800_ffff_tmp319, tmp5);
          r800_ffff_tmp320 = simd_and(r800_ffff_tmp280, bytetest_9a);
          carryQ.cq[163] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp320, carryQ.get_carry_in(163), r800_ffff_tmp321));
          r800_ffff_tmp322 = simd_and(r800_ffff_tmp321, bytetest_9d_9f);
          struct_Cn.cc = simd_or(r800_ffff_tmp322, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9b = simd_and(tmp71, tmp84);
          bytetest_b1_bf = simd_and(bytetest_b0_bf, tmp397);
          r800_ffff_tmp323 = simd_and(r800_ffff_tmp280, bytetest_9b);
          carryQ.cq[164] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp323, carryQ.get_carry_in(164), r800_ffff_tmp324));
          r800_ffff_tmp325 = simd_and(r800_ffff_tmp324, bytetest_b1_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp325, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9c = simd_and(tmp71, tmp180);
          bytetest_8d_8d = simd_and(tmp66, tmp97);
          r800_ffff_tmp326 = simd_and(r800_ffff_tmp280, bytetest_9c);
          carryQ.cq[165] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp326, carryQ.get_carry_in(165), r800_ffff_tmp327));
          r800_ffff_tmp328 = simd_and(r800_ffff_tmp327, bytetest_8d_8d);
          struct_Cn.cc = simd_or(r800_ffff_tmp328, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9c = simd_and(tmp71, tmp180);
          bytetest_95_9f = simd_and(tmp71, tmp155);
          r800_ffff_tmp329 = simd_and(r800_ffff_tmp327, bytetest_95_9f);
          struct_Cn.cc = simd_or(r800_ffff_tmp329, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9c = simd_and(tmp71, tmp180);
          bytetest_b7_bf = simd_and(bytetest_b0_bf, tmp228);
          r800_ffff_tmp330 = simd_and(r800_ffff_tmp327, bytetest_b7_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp330, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9d = simd_and(tmp71, tmp97);
          bytetest_94_9f = simd_and(tmp71, tmp4);
          r800_ffff_tmp331 = simd_and(r800_ffff_tmp280, bytetest_9d);
          carryQ.cq[166] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp331, carryQ.get_carry_in(166), r800_ffff_tmp332));
          r800_ffff_tmp333 = simd_and(r800_ffff_tmp332, bytetest_94_9f);
          struct_Cn.cc = simd_or(r800_ffff_tmp333, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9d = simd_and(tmp71, tmp97);
          bytetest_ad_ad = simd_and(tmp105, tmp97);
          r800_ffff_tmp334 = simd_and(r800_ffff_tmp332, bytetest_ad_ad);
          struct_Cn.cc = simd_or(r800_ffff_tmp334, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9d = simd_and(tmp71, tmp97);
          bytetest_b1_b1 = simd_and(bytetest_b0_bf, tmp11);
          r800_ffff_tmp335 = simd_and(r800_ffff_tmp332, bytetest_b1_b1);
          struct_Cn.cc = simd_or(r800_ffff_tmp335, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9d = simd_and(tmp71, tmp97);
          bytetest_b4_bf = simd_and(bytetest_b0_bf, tmp4);
          r800_ffff_tmp336 = simd_and(r800_ffff_tmp332, bytetest_b4_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp336, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9f = simd_and(tmp71, tmp99);
          bytetest_9e_9f = simd_and(tmp71, tmp18);
          r800_ffff_tmp337 = simd_and(r800_ffff_tmp280, bytetest_9f);
          carryQ.cq[167] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp337, carryQ.get_carry_in(167), r800_ffff_tmp338));
          r800_ffff_tmp339 = simd_and(r800_ffff_tmp338, bytetest_9e_9f);
          struct_Cn.cc = simd_or(r800_ffff_tmp339, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9f = simd_and(tmp71, tmp99);
          bytetest_aa_af = simd_and(r800_ffff_tmp140, tmp32);
          r800_ffff_tmp340 = simd_and(r800_ffff_tmp338, bytetest_aa_af);
          struct_Cn.cc = simd_or(r800_ffff_tmp340, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_9f = simd_and(tmp71, tmp99);
          bytetest_ba_bf = simd_and(bytetest_b8_bf, tmp32);
          r800_ffff_tmp341 = simd_and(r800_ffff_tmp338, bytetest_ba_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp341, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a0 = simd_andc(tmp105, tmp6);
          bytetest_8f_8f = simd_and(tmp66, tmp99);
          r800_ffff_tmp342 = simd_and(r800_ffff_tmp280, bytetest_a0);
          carryQ.cq[168] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp342, carryQ.get_carry_in(168), r800_ffff_tmp343));
          r800_ffff_tmp344 = simd_and(r800_ffff_tmp343, bytetest_8f_8f);
          struct_Cn.cc = simd_or(r800_ffff_tmp344, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a0 = simd_andc(tmp105, tmp6);
          bytetest_9a_9f = simd_and(bytetest_98_9f, tmp32);
          r800_ffff_tmp345 = simd_and(r800_ffff_tmp343, bytetest_9a_9f);
          struct_Cn.cc = simd_or(r800_ffff_tmp345, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a1 = simd_and(tmp105, tmp11);
          bytetest_b8_bf = simd_and(bytetest_b0_bf, basis_bits.bit_4);
          r800_ffff_tmp346 = simd_and(r800_ffff_tmp280, bytetest_a1);
          carryQ.cq[169] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp346, carryQ.get_carry_in(169), r800_ffff_tmp347));
          r800_ffff_tmp348 = simd_and(r800_ffff_tmp347, bytetest_b8_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp348, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a2 = simd_and(tmp105, tmp91);
          bytetest_ab_af = simd_and(r800_ffff_tmp140, tmp106);
          r800_ffff_tmp349 = simd_and(r800_ffff_tmp280, bytetest_a2);
          carryQ.cq[170] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp349, carryQ.get_carry_in(170), r800_ffff_tmp350));
          r800_ffff_tmp351 = simd_and(r800_ffff_tmp350, bytetest_ab_af);
          struct_Cn.cc = simd_or(r800_ffff_tmp351, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a3 = simd_and(tmp105, tmp31);
          bytetest_b6_bf = simd_and(bytetest_b0_bf, tmp201);
          r800_ffff_tmp352 = simd_and(r800_ffff_tmp280, bytetest_a3);
          carryQ.cq[171] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp352, carryQ.get_carry_in(171), r800_ffff_tmp353));
          r800_ffff_tmp354 = simd_and(r800_ffff_tmp353, bytetest_b6_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp354, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a4 = simd_and(tmp105, tmp45);
          bytetest_9d_9f = simd_and(r800_ffff_tmp319, tmp5);
          r800_ffff_tmp355 = simd_and(r800_ffff_tmp280, bytetest_a4);
          carryQ.cq[172] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp355, carryQ.get_carry_in(172), r800_ffff_tmp356));
          r800_ffff_tmp357 = simd_and(r800_ffff_tmp356, bytetest_9d_9f);
          struct_Cn.cc = simd_or(r800_ffff_tmp357, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a4 = simd_and(tmp105, tmp45);
          bytetest_ac_af = simd_and(tmp105, tmp17);
          r800_ffff_tmp358 = simd_and(r800_ffff_tmp356, bytetest_ac_af);
          struct_Cn.cc = simd_or(r800_ffff_tmp358, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a4 = simd_and(tmp105, tmp45);
          bytetest_bc_bf = simd_and(bytetest_b0_bf, tmp17);
          r800_ffff_tmp359 = simd_and(r800_ffff_tmp356, bytetest_bc_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp359, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a5 = simd_and(tmp105, tmp46);
          r800_ffff_tmp360 = simd_andc(tmp66, tmp4);
          bytetest_81_83 = simd_and(r800_ffff_tmp360, tmp5);
          r800_ffff_tmp361 = simd_and(r800_ffff_tmp280, bytetest_a5);
          carryQ.cq[173] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp361, carryQ.get_carry_in(173), r800_ffff_tmp362));
          r800_ffff_tmp363 = simd_and(r800_ffff_tmp362, bytetest_81_83);
          struct_Cn.cc = simd_or(r800_ffff_tmp363, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a5 = simd_and(tmp105, tmp46);
          bytetest_ae_af = simd_and(tmp105, tmp18);
          r800_ffff_tmp364 = simd_and(r800_ffff_tmp362, bytetest_ae_af);
          struct_Cn.cc = simd_or(r800_ffff_tmp364, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a5 = simd_and(tmp105, tmp46);
          bytetest_b5_bf = simd_and(bytetest_b0_bf, tmp155);
          r800_ffff_tmp365 = simd_and(r800_ffff_tmp362, bytetest_b5_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp365, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a6 = simd_and(tmp105, tmp118);
          bytetest_ac_af = simd_and(tmp105, tmp17);
          r800_ffff_tmp366 = simd_and(r800_ffff_tmp280, bytetest_a6);
          carryQ.cq[174] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp366, carryQ.get_carry_in(174), r800_ffff_tmp367));
          r800_ffff_tmp368 = simd_and(r800_ffff_tmp367, bytetest_ac_af);
          struct_Cn.cc = simd_or(r800_ffff_tmp368, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a7 = simd_and(tmp105, tmp55);
          bytetest_8a_8f = simd_and(tmp258, tmp32);
          r800_ffff_tmp369 = simd_and(r800_ffff_tmp280, bytetest_a7);
          carryQ.cq[175] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp369, carryQ.get_carry_in(175), r800_ffff_tmp370));
          r800_ffff_tmp371 = simd_and(r800_ffff_tmp370, bytetest_8a_8f);
          struct_Cn.cc = simd_or(r800_ffff_tmp371, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a7 = simd_and(tmp105, tmp55);
          bytetest_9b_9d = simd_and(bytetest_98_9f, r800_ffff_tmp43);
          r800_ffff_tmp372 = simd_and(r800_ffff_tmp370, bytetest_9b_9d);
          struct_Cn.cc = simd_or(r800_ffff_tmp372, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a8 = simd_and(tmp105, tmp149);
          bytetest_9c_9d = simd_and(tmp71, tmp275);
          r800_ffff_tmp373 = simd_and(r800_ffff_tmp280, bytetest_a8);
          carryQ.cq[176] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp373, carryQ.get_carry_in(176), r800_ffff_tmp374));
          r800_ffff_tmp375 = simd_and(r800_ffff_tmp374, bytetest_9c_9d);
          struct_Cn.cc = simd_or(r800_ffff_tmp375, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a9 = simd_and(tmp105, tmp221);
          bytetest_9f_9f = simd_and(tmp71, tmp99);
          r800_ffff_tmp376 = simd_and(r800_ffff_tmp280, bytetest_a9);
          carryQ.cq[177] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp376, carryQ.get_carry_in(177), r800_ffff_tmp377));
          r800_ffff_tmp378 = simd_and(r800_ffff_tmp377, bytetest_9f_9f);
          struct_Cn.cc = simd_or(r800_ffff_tmp378, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_a9 = simd_and(tmp105, tmp221);
          bytetest_bd_be = simd_and(bytetest_bc_bf, tmp297);
          r800_ffff_tmp379 = simd_and(r800_ffff_tmp377, bytetest_bd_be);
          struct_Cn.cc = simd_or(r800_ffff_tmp379, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_aa = simd_and(tmp105, tmp74);
          bytetest_8a_8f = simd_and(tmp258, tmp32);
          r800_ffff_tmp380 = simd_and(r800_ffff_tmp280, bytetest_aa);
          carryQ.cq[178] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp380, carryQ.get_carry_in(178), r800_ffff_tmp381));
          r800_ffff_tmp382 = simd_and(r800_ffff_tmp381, bytetest_8a_8f);
          struct_Cn.cc = simd_or(r800_ffff_tmp382, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_aa = simd_and(tmp105, tmp74);
          bytetest_9a_9f = simd_and(bytetest_98_9f, tmp32);
          r800_ffff_tmp383 = simd_and(r800_ffff_tmp381, bytetest_9a_9f);
          struct_Cn.cc = simd_or(r800_ffff_tmp383, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_ab = simd_and(tmp105, tmp84);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp384 = simd_and(r800_ffff_tmp280, bytetest_ab);
          carryQ.cq[179] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp384, carryQ.get_carry_in(179), r800_ffff_tmp385));
          r800_ffff_tmp386 = simd_and(r800_ffff_tmp385, bytetest_80_bf);
          bytetest_aa = simd_and(tmp105, tmp74);
          r800_ffff_tmp387 = simd_or(basis_bits.bit_3, tmp18);
          bytetest_ae_bf = simd_and(bytetest_a0_bf, r800_ffff_tmp387);
          r800_ffff_tmp388 = simd_and(r800_ffff_tmp381, bytetest_ae_bf);
          r800_ffff_tmp389 = simd_or(r800_ffff_tmp388, r800_ffff_tmp386);
          struct_Cn.cc = simd_or(r800_ffff_tmp389, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_ad = simd_and(tmp105, tmp97);
          bytetest_8c_8f = simd_and(tmp66, tmp17);
          r800_ffff_tmp390 = simd_and(r800_ffff_tmp280, bytetest_ad);
          carryQ.cq[180] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp390, carryQ.get_carry_in(180), r800_ffff_tmp391));
          r800_ffff_tmp392 = simd_and(r800_ffff_tmp391, bytetest_8c_8f);
          struct_Cn.cc = simd_or(r800_ffff_tmp392, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_ad = simd_and(tmp105, tmp97);
          bytetest_bd_bf = simd_and(bytetest_bc_bf, tmp5);
          r800_ffff_tmp393 = simd_and(r800_ffff_tmp391, bytetest_bd_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp393, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_af = simd_and(tmp105, tmp99);
          r800_ffff_tmp394 = simd_not(basis_bits.bit_5);
          r800_ffff_tmp395 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp394), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
          bytetest_b4_bb = simd_and(bytetest_b0_bf, r800_ffff_tmp395);
          r800_ffff_tmp396 = simd_and(r800_ffff_tmp280, bytetest_af);
          carryQ.cq[181] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp396, carryQ.get_carry_in(181), r800_ffff_tmp397));
          r800_ffff_tmp398 = simd_and(r800_ffff_tmp397, bytetest_b4_bb);
          struct_Cn.cc = simd_or(r800_ffff_tmp398, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_b0 = simd_andc(bytetest_b0_bf, tmp6);
          r800_ffff_tmp399 = simd_and(bytetest_b0_bf, tmp72);
          bytetest_b8_ba = simd_andc(r800_ffff_tmp399, tmp30);
          r800_ffff_tmp400 = simd_and(r800_ffff_tmp280, bytetest_b0);
          carryQ.cq[182] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp400, carryQ.get_carry_in(182), r800_ffff_tmp401));
          r800_ffff_tmp402 = simd_and(r800_ffff_tmp401, bytetest_b8_ba);
          struct_Cn.cc = simd_or(r800_ffff_tmp402, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_b1 = simd_and(bytetest_b0_bf, tmp11);
          bytetest_8a_8c = simd_and(tmp258, r800_ffff_tmp164);
          r800_ffff_tmp403 = simd_and(r800_ffff_tmp280, bytetest_b1);
          carryQ.cq[183] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp403, carryQ.get_carry_in(183), r800_ffff_tmp404));
          r800_ffff_tmp405 = simd_and(r800_ffff_tmp404, bytetest_8a_8c);
          struct_Cn.cc = simd_or(r800_ffff_tmp405, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_b2 = simd_and(bytetest_b0_bf, tmp91);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp406 = simd_and(r800_ffff_tmp280, bytetest_b2);
          carryQ.cq[184] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp406, carryQ.get_carry_in(184), r800_ffff_tmp407));
          r800_ffff_tmp408 = simd_and(r800_ffff_tmp407, bytetest_80_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp408, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp31);
          bytetest_88_8f = simd_and(tmp66, basis_bits.bit_4);
          r800_ffff_tmp409 = simd_and(r800_ffff_tmp280, bytetest_b3);
          carryQ.cq[185] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp409, carryQ.get_carry_in(185), r800_ffff_tmp410));
          r800_ffff_tmp411 = simd_and(r800_ffff_tmp410, bytetest_88_8f);
          struct_Cn.cc = simd_or(r800_ffff_tmp411, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp31);
          bytetest_b7_bf = simd_and(bytetest_b0_bf, tmp228);
          r800_ffff_tmp412 = simd_and(r800_ffff_tmp410, bytetest_b7_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp412, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_b7 = simd_and(bytetest_b0_bf, tmp55);
          r800_ffff_tmp413 = simd_or(simd_and(basis_bits.bit_3, tmp143), simd_andc(tmp228, basis_bits.bit_3));
          bytetest_a7_bb = simd_and(bytetest_a0_bf, r800_ffff_tmp413);
          r800_ffff_tmp414 = simd_and(r800_ffff_tmp280, bytetest_b7);
          carryQ.cq[186] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp414, carryQ.get_carry_in(186), r800_ffff_tmp415));
          r800_ffff_tmp416 = simd_and(r800_ffff_tmp415, bytetest_a7_bb);
          struct_Cn.cc = simd_or(r800_ffff_tmp416, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_bc = simd_and(bytetest_b0_bf, tmp180);
          bytetest_96_97 = simd_and(tmp71, tmp271);
          r800_ffff_tmp417 = simd_and(r800_ffff_tmp280, bytetest_bc);
          carryQ.cq[187] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp417, carryQ.get_carry_in(187), r800_ffff_tmp418));
          r800_ffff_tmp419 = simd_and(r800_ffff_tmp418, bytetest_96_97);
          struct_Cn.cc = simd_or(r800_ffff_tmp419, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_bc = simd_and(bytetest_b0_bf, tmp180);
          bytetest_9e_9f = simd_and(tmp71, tmp18);
          r800_ffff_tmp420 = simd_and(r800_ffff_tmp418, bytetest_9e_9f);
          struct_Cn.cc = simd_or(r800_ffff_tmp420, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_bd = simd_and(bytetest_b0_bf, tmp97);
          bytetest_86_87 = simd_and(tmp66, tmp271);
          r800_ffff_tmp421 = simd_and(r800_ffff_tmp280, bytetest_bd);
          carryQ.cq[188] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp421, carryQ.get_carry_in(188), r800_ffff_tmp422));
          r800_ffff_tmp423 = simd_and(r800_ffff_tmp422, bytetest_86_87);
          struct_Cn.cc = simd_or(r800_ffff_tmp423, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_bd = simd_and(bytetest_b0_bf, tmp97);
          bytetest_8e_8f = simd_and(tmp66, tmp18);
          r800_ffff_tmp424 = simd_and(r800_ffff_tmp422, bytetest_8e_8f);
          struct_Cn.cc = simd_or(r800_ffff_tmp424, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_bd = simd_and(bytetest_b0_bf, tmp97);
          bytetest_98_98 = simd_and(tmp71, tmp149);
          r800_ffff_tmp425 = simd_and(r800_ffff_tmp422, bytetest_98_98);
          struct_Cn.cc = simd_or(r800_ffff_tmp425, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_bd = simd_and(bytetest_b0_bf, tmp97);
          bytetest_9a_9a = simd_and(tmp71, tmp74);
          r800_ffff_tmp426 = simd_and(r800_ffff_tmp422, bytetest_9a_9a);
          struct_Cn.cc = simd_or(r800_ffff_tmp426, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_bd = simd_and(bytetest_b0_bf, tmp97);
          bytetest_9c_9c = simd_and(tmp71, tmp180);
          r800_ffff_tmp427 = simd_and(r800_ffff_tmp422, bytetest_9c_9c);
          struct_Cn.cc = simd_or(r800_ffff_tmp427, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_bd = simd_and(bytetest_b0_bf, tmp97);
          bytetest_9e_9e = simd_and(tmp71, tmp159);
          r800_ffff_tmp428 = simd_and(r800_ffff_tmp422, bytetest_9e_9e);
          struct_Cn.cc = simd_or(r800_ffff_tmp428, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_bd = simd_and(bytetest_b0_bf, tmp97);
          bytetest_be_bf = simd_and(bytetest_b0_bf, tmp18);
          r800_ffff_tmp429 = simd_and(r800_ffff_tmp422, bytetest_be_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp429, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_be = simd_and(bytetest_b0_bf, tmp159);
          bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp46);
          r800_ffff_tmp430 = simd_and(r800_ffff_tmp280, bytetest_be);
          carryQ.cq[189] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp430, carryQ.get_carry_in(189), r800_ffff_tmp431));
          r800_ffff_tmp432 = simd_and(r800_ffff_tmp431, bytetest_b5_b5);
          struct_Cn.cc = simd_or(r800_ffff_tmp432, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp99);
          bytetest_85_85 = simd_and(tmp66, tmp46);
          r800_ffff_tmp433 = simd_and(r800_ffff_tmp280, bytetest_bf);
          carryQ.cq[190] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp433, carryQ.get_carry_in(190), r800_ffff_tmp434));
          r800_ffff_tmp435 = simd_and(r800_ffff_tmp434, bytetest_85_85);
          struct_Cn.cc = simd_or(r800_ffff_tmp435, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp99);
          bytetest_94_95 = simd_and(tmp71, tmp124);
          r800_ffff_tmp436 = simd_and(r800_ffff_tmp434, bytetest_94_95);
          struct_Cn.cc = simd_or(r800_ffff_tmp436, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp99);
          bytetest_9c_9c = simd_and(tmp71, tmp180);
          r800_ffff_tmp437 = simd_and(r800_ffff_tmp434, bytetest_9c_9c);
          struct_Cn.cc = simd_or(r800_ffff_tmp437, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp99);
          bytetest_b0_b1 = simd_andc(bytetest_b0_bf, tmp15);
          r800_ffff_tmp438 = simd_and(r800_ffff_tmp434, bytetest_b0_b1);
          struct_Cn.cc = simd_or(r800_ffff_tmp438, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp99);
          bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp46);
          r800_ffff_tmp439 = simd_and(r800_ffff_tmp434, bytetest_b5_b5);
          struct_Cn.cc = simd_or(r800_ffff_tmp439, struct_Cn.cc);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp99);
          bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp99);
          r800_ffff_tmp440 = simd_and(r800_ffff_tmp434, bytetest_bf_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp440, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_81 = simd_and(tmp66, tmp11);
          bytetest_a5_a5 = simd_and(tmp105, tmp46);
          r800_ffff_tmp441 = simd_and(tmp21, bytetest_e2);
          carryQ.cq[191] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp441, carryQ.get_carry_in(191), r800_ffff_tmp442));
          r800_ffff_tmp443 = simd_and(r800_ffff_tmp442, bytetest_81);
          carryQ.cq[192] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp443, carryQ.get_carry_in(192), r800_ffff_tmp444));
          r800_ffff_tmp445 = simd_and(r800_ffff_tmp444, bytetest_a5_a5);
          struct_Cn.cc = simd_or(r800_ffff_tmp445, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_81 = simd_and(tmp66, tmp11);
          bytetest_b2_b3 = simd_and(bytetest_b0_bf, tmp518);
          r800_ffff_tmp446 = simd_and(r800_ffff_tmp444, bytetest_b2_b3);
          struct_Cn.cc = simd_or(r800_ffff_tmp446, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_82 = simd_and(tmp66, tmp91);
          bytetest_8f_8f = simd_and(tmp66, tmp99);
          r800_ffff_tmp447 = simd_and(r800_ffff_tmp442, bytetest_82);
          carryQ.cq[193] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp447, carryQ.get_carry_in(193), r800_ffff_tmp448));
          r800_ffff_tmp449 = simd_and(r800_ffff_tmp448, bytetest_8f_8f);
          struct_Cn.cc = simd_or(r800_ffff_tmp449, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_82 = simd_and(tmp66, tmp91);
          bytetest_9d_9f = simd_and(r800_ffff_tmp319, tmp5);
          r800_ffff_tmp450 = simd_and(r800_ffff_tmp448, bytetest_9d_9f);
          struct_Cn.cc = simd_or(r800_ffff_tmp450, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_83 = simd_and(tmp66, tmp31);
          bytetest_80_8f = simd_andc(bytetest_80_bf, tmp12);
          r800_ffff_tmp451 = simd_and(r800_ffff_tmp442, bytetest_83);
          carryQ.cq[194] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp451, carryQ.get_carry_in(194), r800_ffff_tmp452));
          r800_ffff_tmp453 = simd_and(r800_ffff_tmp452, bytetest_80_8f);
          bytetest_82 = simd_and(bytetest_80_8f, tmp91);
          bytetest_bb_bf = simd_and(bytetest_b8_bf, tmp106);
          r800_ffff_tmp454 = simd_and(r800_ffff_tmp448, bytetest_bb_bf);
          r800_ffff_tmp455 = simd_or(r800_ffff_tmp454, r800_ffff_tmp453);
          struct_Cn.cc = simd_or(r800_ffff_tmp455, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_83 = simd_and(bytetest_80_8f, tmp31);
          bytetest_b1_bf = simd_and(bytetest_b0_bf, tmp397);
          r800_ffff_tmp456 = simd_and(r800_ffff_tmp452, bytetest_b1_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp456, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_86 = simd_and(bytetest_80_8f, tmp118);
          r800_ffff_tmp457 = simd_and(bytetest_80_8f, basis_bits.bit_4);
          bytetest_8a_8f = simd_and(r800_ffff_tmp457, tmp32);
          r800_ffff_tmp458 = simd_and(r800_ffff_tmp442, bytetest_86);
          carryQ.cq[195] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp458, carryQ.get_carry_in(195), r800_ffff_tmp459));
          r800_ffff_tmp460 = simd_and(r800_ffff_tmp459, bytetest_8a_8f);
          struct_Cn.cc = simd_or(r800_ffff_tmp460, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_8f = simd_and(bytetest_80_8f, tmp99);
          bytetest_b4_bf = simd_and(bytetest_b0_bf, tmp4);
          r800_ffff_tmp461 = simd_and(r800_ffff_tmp442, bytetest_8f);
          carryQ.cq[196] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp461, carryQ.get_carry_in(196), r800_ffff_tmp462));
          r800_ffff_tmp463 = simd_and(r800_ffff_tmp462, bytetest_b4_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp463, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_90 = simd_andc(tmp71, tmp6);
          r800_ffff_tmp464 = simd_or(basis_bits.bit_3, tmp228);
          bytetest_a7_bf = simd_and(bytetest_a0_bf, r800_ffff_tmp464);
          r800_ffff_tmp465 = simd_and(r800_ffff_tmp442, bytetest_90);
          carryQ.cq[197] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp465, carryQ.get_carry_in(197), r800_ffff_tmp466));
          r800_ffff_tmp467 = simd_and(r800_ffff_tmp466, bytetest_a7_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp467, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_91 = simd_and(tmp71, tmp11);
          bytetest_8b_9f = simd_and(bytetest_80_9f, tmp411);
          r800_ffff_tmp468 = simd_and(r800_ffff_tmp442, bytetest_91);
          carryQ.cq[198] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp468, carryQ.get_carry_in(198), r800_ffff_tmp469));
          r800_ffff_tmp470 = simd_and(r800_ffff_tmp469, bytetest_8b_9f);
          struct_Cn.cc = simd_or(r800_ffff_tmp470, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_9c = simd_and(tmp71, tmp180);
          bytetest_80_80 = simd_andc(bytetest_80_8f, tmp6);
          r800_ffff_tmp471 = simd_and(r800_ffff_tmp442, bytetest_9c);
          carryQ.cq[199] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp471, carryQ.get_carry_in(199), r800_ffff_tmp472));
          r800_ffff_tmp473 = simd_and(r800_ffff_tmp472, bytetest_80_80);
          struct_Cn.cc = simd_or(r800_ffff_tmp473, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_ad = simd_and(tmp105, tmp97);
          r800_ffff_tmp474 = simd_and(bytetest_80_8f, tmp17);
          bytetest_8d_8f = simd_and(r800_ffff_tmp474, tmp5);
          r800_ffff_tmp475 = simd_and(r800_ffff_tmp442, bytetest_ad);
          carryQ.cq[200] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp475, carryQ.get_carry_in(200), r800_ffff_tmp476));
          r800_ffff_tmp477 = simd_and(r800_ffff_tmp476, bytetest_8d_8f);
          struct_Cn.cc = simd_or(r800_ffff_tmp477, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_ae_af = simd_and(tmp105, tmp18);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp478 = simd_and(r800_ffff_tmp442, bytetest_ae_af);
          carryQ.cq[201] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp478, carryQ.get_carry_in(201), r800_ffff_tmp479));
          r800_ffff_tmp480 = simd_and(r800_ffff_tmp479, bytetest_80_bf);
          bytetest_ad = simd_and(tmp105, tmp97);
          bytetest_9a_bf = simd_and(bytetest_80_bf, tmp68);
          r800_ffff_tmp481 = simd_and(r800_ffff_tmp476, bytetest_9a_bf);
          r800_ffff_tmp482 = simd_or(r800_ffff_tmp481, r800_ffff_tmp480);
          struct_Cn.cc = simd_or(r800_ffff_tmp482, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_b0 = simd_andc(bytetest_b0_bf, tmp6);
          bytetest_af_af = simd_and(tmp105, tmp99);
          r800_ffff_tmp483 = simd_and(r800_ffff_tmp442, bytetest_b0);
          carryQ.cq[202] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp483, carryQ.get_carry_in(202), r800_ffff_tmp484));
          r800_ffff_tmp485 = simd_and(r800_ffff_tmp484, bytetest_af_af);
          struct_Cn.cc = simd_or(r800_ffff_tmp485, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_b1 = simd_and(bytetest_b0_bf, tmp11);
          bytetest_9f_9f = simd_and(tmp71, tmp99);
          r800_ffff_tmp486 = simd_and(r800_ffff_tmp442, bytetest_b1);
          carryQ.cq[203] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp486, carryQ.get_carry_in(203), r800_ffff_tmp487));
          r800_ffff_tmp488 = simd_and(r800_ffff_tmp487, bytetest_9f_9f);
          struct_Cn.cc = simd_or(r800_ffff_tmp488, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_b3 = simd_and(bytetest_b0_bf, tmp31);
          r800_ffff_tmp489 = simd_or(simd_and(basis_bits.bit_4, tmp207), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
          bytetest_b4_b8 = simd_and(bytetest_b0_bf, r800_ffff_tmp489);
          r800_ffff_tmp490 = simd_and(r800_ffff_tmp442, bytetest_b3);
          carryQ.cq[204] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp490, carryQ.get_carry_in(204), r800_ffff_tmp491));
          r800_ffff_tmp492 = simd_and(r800_ffff_tmp491, bytetest_b4_b8);
          struct_Cn.cc = simd_or(r800_ffff_tmp492, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_b4 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_a6_a6 = simd_and(tmp105, tmp118);
          r800_ffff_tmp493 = simd_and(r800_ffff_tmp442, bytetest_b4);
          carryQ.cq[205] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp493, carryQ.get_carry_in(205), r800_ffff_tmp494));
          r800_ffff_tmp495 = simd_and(r800_ffff_tmp494, bytetest_a6_a6);
          struct_Cn.cc = simd_or(r800_ffff_tmp495, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_b4 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_a8_ac = simd_andc(r800_ffff_tmp140, tmp154);
          r800_ffff_tmp496 = simd_and(r800_ffff_tmp494, bytetest_a8_ac);
          struct_Cn.cc = simd_or(r800_ffff_tmp496, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_b4 = simd_and(bytetest_b0_bf, tmp45);
          bytetest_ae_af = simd_and(tmp105, tmp18);
          r800_ffff_tmp497 = simd_and(r800_ffff_tmp494, bytetest_ae_af);
          struct_Cn.cc = simd_or(r800_ffff_tmp497, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_b5 = simd_and(bytetest_b0_bf, tmp46);
          bytetest_a8_ae = simd_andc(r800_ffff_tmp140, tmp160);
          r800_ffff_tmp498 = simd_and(r800_ffff_tmp442, bytetest_b5);
          carryQ.cq[206] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp498, carryQ.get_carry_in(206), r800_ffff_tmp499));
          r800_ffff_tmp500 = simd_and(r800_ffff_tmp499, bytetest_a8_ae);
          struct_Cn.cc = simd_or(r800_ffff_tmp500, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_b5 = simd_and(bytetest_b0_bf, tmp46);
          r800_ffff_tmp501 = simd_not(tmp160);
          r800_ffff_tmp502 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp501), simd_andc(tmp40, basis_bits.bit_4));
          bytetest_b1_be = simd_and(bytetest_b0_bf, r800_ffff_tmp502);
          r800_ffff_tmp503 = simd_and(r800_ffff_tmp499, bytetest_b1_be);
          struct_Cn.cc = simd_or(r800_ffff_tmp503, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_b6 = simd_and(bytetest_b0_bf, tmp118);
          bytetest_97_9f = simd_and(tmp71, tmp228);
          r800_ffff_tmp504 = simd_and(r800_ffff_tmp442, bytetest_b6);
          carryQ.cq[207] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp504, carryQ.get_carry_in(207), r800_ffff_tmp505));
          r800_ffff_tmp506 = simd_and(r800_ffff_tmp505, bytetest_97_9f);
          struct_Cn.cc = simd_or(r800_ffff_tmp506, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_b6 = simd_and(bytetest_b0_bf, tmp118);
          bytetest_a7_a7 = simd_and(tmp105, tmp55);
          r800_ffff_tmp507 = simd_and(r800_ffff_tmp505, bytetest_a7_a7);
          struct_Cn.cc = simd_or(r800_ffff_tmp507, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_b6 = simd_and(bytetest_b0_bf, tmp118);
          bytetest_af_af = simd_and(tmp105, tmp99);
          r800_ffff_tmp508 = simd_and(r800_ffff_tmp505, bytetest_af_af);
          struct_Cn.cc = simd_or(r800_ffff_tmp508, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_b6 = simd_and(bytetest_b0_bf, tmp118);
          bytetest_b7_b7 = simd_and(bytetest_b0_bf, tmp55);
          r800_ffff_tmp509 = simd_and(r800_ffff_tmp505, bytetest_b7_b7);
          struct_Cn.cc = simd_or(r800_ffff_tmp509, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_b6 = simd_and(bytetest_b0_bf, tmp118);
          bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp99);
          r800_ffff_tmp510 = simd_and(r800_ffff_tmp505, bytetest_bf_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp510, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_b7 = simd_and(bytetest_b0_bf, tmp55);
          bytetest_87_87 = simd_and(bytetest_80_8f, tmp55);
          r800_ffff_tmp511 = simd_and(r800_ffff_tmp442, bytetest_b7);
          carryQ.cq[208] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp511, carryQ.get_carry_in(208), r800_ffff_tmp512));
          r800_ffff_tmp513 = simd_and(r800_ffff_tmp512, bytetest_87_87);
          struct_Cn.cc = simd_or(r800_ffff_tmp513, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_b7 = simd_and(bytetest_b0_bf, tmp55);
          bytetest_8f_8f = simd_and(bytetest_80_8f, tmp99);
          r800_ffff_tmp514 = simd_and(r800_ffff_tmp512, bytetest_8f_8f);
          struct_Cn.cc = simd_or(r800_ffff_tmp514, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_b7 = simd_and(bytetest_b0_bf, tmp55);
          bytetest_97_97 = simd_and(tmp71, tmp55);
          r800_ffff_tmp515 = simd_and(r800_ffff_tmp512, bytetest_97_97);
          struct_Cn.cc = simd_or(r800_ffff_tmp515, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_b7 = simd_and(bytetest_b0_bf, tmp55);
          bytetest_9f_9f = simd_and(tmp71, tmp99);
          r800_ffff_tmp516 = simd_and(r800_ffff_tmp512, bytetest_9f_9f);
          struct_Cn.cc = simd_or(r800_ffff_tmp516, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp221);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp517 = simd_and(r800_ffff_tmp442, bytetest_b9);
          carryQ.cq[209] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp517, carryQ.get_carry_in(209), r800_ffff_tmp518));
          r800_ffff_tmp519 = simd_and(r800_ffff_tmp518, bytetest_80_bf);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp149);
          bytetest_bc_bf = simd_and(bytetest_b0_bf, tmp17);
          r800_ffff_tmp520 = simd_and(r800_ffff_tmp442, bytetest_b8);
          carryQ.cq[210] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp520, carryQ.get_carry_in(210), r800_ffff_tmp521));
          r800_ffff_tmp522 = simd_and(r800_ffff_tmp521, bytetest_bc_bf);
          r800_ffff_tmp523 = simd_or(r800_ffff_tmp522, r800_ffff_tmp519);
          struct_Cn.cc = simd_or(r800_ffff_tmp523, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_ba = simd_and(bytetest_b0_bf, tmp74);
          bytetest_9a_9a = simd_and(tmp71, tmp74);
          r800_ffff_tmp524 = simd_and(r800_ffff_tmp442, bytetest_ba);
          carryQ.cq[211] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp524, carryQ.get_carry_in(211), r800_ffff_tmp525));
          r800_ffff_tmp526 = simd_and(r800_ffff_tmp525, bytetest_9a_9a);
          struct_Cn.cc = simd_or(r800_ffff_tmp526, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp84);
          bytetest_b4_bf = simd_and(bytetest_b0_bf, tmp4);
          r800_ffff_tmp527 = simd_and(r800_ffff_tmp442, bytetest_bb);
          carryQ.cq[212] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp527, carryQ.get_carry_in(212), r800_ffff_tmp528));
          r800_ffff_tmp529 = simd_and(r800_ffff_tmp528, bytetest_b4_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp529, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp99);
          r800_ffff_tmp530 = simd_not(basis_bits.bit_3);
          r800_ffff_tmp531 = simd_and(basis_bits.bit_3, tmp201);
          r800_ffff_tmp532 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp530), simd_andc(r800_ffff_tmp531, basis_bits.bit_2));
          bytetest_96_af = simd_and(bytetest_80_bf, r800_ffff_tmp532);
          r800_ffff_tmp533 = simd_and(r800_ffff_tmp442, bytetest_bf);
          carryQ.cq[213] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp533, carryQ.get_carry_in(213), r800_ffff_tmp534));
          r800_ffff_tmp535 = simd_and(r800_ffff_tmp534, bytetest_96_af);
          struct_Cn.cc = simd_or(r800_ffff_tmp535, struct_Cn.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp91);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp99);
          bytetest_bc_bf = simd_and(bytetest_b0_bf, tmp17);
          r800_ffff_tmp536 = simd_and(r800_ffff_tmp534, bytetest_bc_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp536, struct_Cn.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp31);
          bytetest_81 = simd_and(bytetest_80_8f, tmp11);
          bytetest_80_80 = simd_andc(bytetest_80_8f, tmp6);
          r800_ffff_tmp537 = simd_and(tmp21, bytetest_e3);
          carryQ.cq[214] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp537, carryQ.get_carry_in(214), r800_ffff_tmp538));
          r800_ffff_tmp539 = simd_and(r800_ffff_tmp538, bytetest_81);
          carryQ.cq[215] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp539, carryQ.get_carry_in(215), r800_ffff_tmp540));
          r800_ffff_tmp541 = simd_and(r800_ffff_tmp540, bytetest_80_80);
          struct_Cn.cc = simd_or(r800_ffff_tmp541, struct_Cn.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp31);
          bytetest_82 = simd_and(bytetest_80_8f, tmp91);
          bytetest_97_98 = simd_and(tmp71, tmp208);
          r800_ffff_tmp542 = simd_and(r800_ffff_tmp538, bytetest_82);
          carryQ.cq[216] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp542, carryQ.get_carry_in(216), r800_ffff_tmp543));
          r800_ffff_tmp544 = simd_and(r800_ffff_tmp543, bytetest_97_98);
          struct_Cn.cc = simd_or(r800_ffff_tmp544, struct_Cn.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp31);
          bytetest_84 = simd_and(bytetest_80_8f, tmp45);
          r800_ffff_tmp545 = simd_andc(bytetest_80_8f, basis_bits.bit_4);
          bytetest_80_84 = simd_andc(r800_ffff_tmp545, tmp154);
          r800_ffff_tmp546 = simd_and(r800_ffff_tmp538, bytetest_84);
          carryQ.cq[217] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp546, carryQ.get_carry_in(217), r800_ffff_tmp547));
          r800_ffff_tmp548 = simd_and(r800_ffff_tmp547, bytetest_80_84);
          struct_Cn.cc = simd_or(r800_ffff_tmp548, struct_Cn.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp31);
          bytetest_84 = simd_and(bytetest_80_8f, tmp45);
          bytetest_ae_b0 = simd_and(bytetest_a0_bf, r800_ffff_tmp76);
          r800_ffff_tmp549 = simd_and(r800_ffff_tmp547, bytetest_ae_b0);
          struct_Cn.cc = simd_or(r800_ffff_tmp549, struct_Cn.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp31);
          bytetest_86 = simd_and(bytetest_80_8f, tmp118);
          bytetest_8f_8f = simd_and(bytetest_80_8f, tmp99);
          r800_ffff_tmp550 = simd_and(r800_ffff_tmp538, bytetest_86);
          carryQ.cq[218] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp550, carryQ.get_carry_in(218), r800_ffff_tmp551));
          r800_ffff_tmp552 = simd_and(r800_ffff_tmp551, bytetest_8f_8f);
          struct_Cn.cc = simd_or(r800_ffff_tmp552, struct_Cn.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp31);
          bytetest_86 = simd_and(bytetest_80_8f, tmp118);
          bytetest_bb_bf = simd_and(bytetest_b8_bf, tmp106);
          r800_ffff_tmp553 = simd_and(r800_ffff_tmp551, bytetest_bb_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp553, struct_Cn.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp31);
          bytetest_87 = simd_and(bytetest_80_8f, tmp55);
          bytetest_a4_af = simd_and(tmp105, tmp4);
          r800_ffff_tmp554 = simd_and(r800_ffff_tmp538, bytetest_87);
          carryQ.cq[219] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp554, carryQ.get_carry_in(219), r800_ffff_tmp555));
          r800_ffff_tmp556 = simd_and(r800_ffff_tmp555, bytetest_a4_af);
          struct_Cn.cc = simd_or(r800_ffff_tmp556, struct_Cn.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp31);
          bytetest_88 = simd_and(bytetest_80_8f, tmp149);
          bytetest_9f_9f = simd_and(tmp71, tmp99);
          r800_ffff_tmp557 = simd_and(r800_ffff_tmp538, bytetest_88);
          carryQ.cq[220] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp557, carryQ.get_carry_in(220), r800_ffff_tmp558));
          r800_ffff_tmp559 = simd_and(r800_ffff_tmp558, bytetest_9f_9f);
          struct_Cn.cc = simd_or(r800_ffff_tmp559, struct_Cn.cc);
          bytetest_e3 = simd_and(r800_ffff_tmp1, tmp31);
          bytetest_8b = simd_and(bytetest_80_8f, tmp84);
          bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp99);
          r800_ffff_tmp560 = simd_and(r800_ffff_tmp538, bytetest_8b);
          carryQ.cq[221] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp560, carryQ.get_carry_in(221), r800_ffff_tmp561));
          r800_ffff_tmp562 = simd_and(r800_ffff_tmp561, bytetest_bf_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp562, struct_Cn.cc);
          bytetest_e4 = simd_and(r800_ffff_tmp1, tmp45);
          bytetest_b6 = simd_and(bytetest_b0_bf, tmp118);
          bytetest_b6_bf = simd_and(bytetest_b0_bf, tmp201);
          r800_ffff_tmp563 = simd_and(tmp21, bytetest_e4);
          carryQ.cq[222] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp563, carryQ.get_carry_in(222), r800_ffff_tmp564));
          r800_ffff_tmp565 = simd_and(r800_ffff_tmp564, bytetest_b6);
          carryQ.cq[223] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp565, carryQ.get_carry_in(223), r800_ffff_tmp566));
          r800_ffff_tmp567 = simd_and(r800_ffff_tmp566, bytetest_b6_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp567, struct_Cn.cc);
          bytetest_e9 = simd_and(r800_ffff_tmp1, tmp221);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp99);
          r800_ffff_tmp568 = simd_or(basis_bits.bit_2, r800_ffff_tmp24);
          bytetest_8d_bf = simd_and(bytetest_80_bf, r800_ffff_tmp568);
          r800_ffff_tmp569 = simd_and(tmp21, bytetest_e9);
          carryQ.cq[224] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp569, carryQ.get_carry_in(224), r800_ffff_tmp570));
          r800_ffff_tmp571 = simd_and(r800_ffff_tmp570, bytetest_bf);
          carryQ.cq[225] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp571, carryQ.get_carry_in(225), r800_ffff_tmp572));
          r800_ffff_tmp573 = simd_and(r800_ffff_tmp572, bytetest_8d_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp573, struct_Cn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_92 = simd_and(tmp71, tmp91);
          bytetest_8d_8f = simd_and(r800_ffff_tmp474, tmp5);
          r800_ffff_tmp574 = simd_and(tmp21, bytetest_ea);
          carryQ.cq[226] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp574, carryQ.get_carry_in(226), r800_ffff_tmp575));
          r800_ffff_tmp576 = simd_and(r800_ffff_tmp575, bytetest_92);
          carryQ.cq[227] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp576, carryQ.get_carry_in(227), r800_ffff_tmp577));
          r800_ffff_tmp578 = simd_and(r800_ffff_tmp577, bytetest_8d_8f);
          struct_Cn.cc = simd_or(r800_ffff_tmp578, struct_Cn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_93 = simd_and(tmp71, tmp31);
          bytetest_87_8f = simd_and(bytetest_80_8f, tmp228);
          r800_ffff_tmp579 = simd_and(r800_ffff_tmp575, bytetest_93);
          carryQ.cq[228] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp579, carryQ.get_carry_in(228), r800_ffff_tmp580));
          r800_ffff_tmp581 = simd_and(r800_ffff_tmp580, bytetest_87_8f);
          struct_Cn.cc = simd_or(r800_ffff_tmp581, struct_Cn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_98 = simd_and(tmp71, tmp149);
          r800_ffff_tmp582 = simd_or(basis_bits.bit_3, tmp17);
          bytetest_ac_bf = simd_and(bytetest_a0_bf, r800_ffff_tmp582);
          r800_ffff_tmp583 = simd_and(r800_ffff_tmp575, bytetest_98);
          carryQ.cq[229] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp583, carryQ.get_carry_in(229), r800_ffff_tmp584));
          r800_ffff_tmp585 = simd_and(r800_ffff_tmp584, bytetest_ac_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp585, struct_Cn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_9a = simd_and(tmp71, tmp74);
          bytetest_98_9e = simd_andc(bytetest_98_9f, tmp160);
          r800_ffff_tmp586 = simd_and(r800_ffff_tmp575, bytetest_9a);
          carryQ.cq[230] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp586, carryQ.get_carry_in(230), r800_ffff_tmp587));
          r800_ffff_tmp588 = simd_and(r800_ffff_tmp587, bytetest_98_9e);
          struct_Cn.cc = simd_or(r800_ffff_tmp588, struct_Cn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_9b = simd_and(tmp71, tmp84);
          bytetest_b8_bf = simd_and(bytetest_b0_bf, basis_bits.bit_4);
          r800_ffff_tmp589 = simd_and(r800_ffff_tmp575, bytetest_9b);
          carryQ.cq[231] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp589, carryQ.get_carry_in(231), r800_ffff_tmp590));
          r800_ffff_tmp591 = simd_and(r800_ffff_tmp590, bytetest_b8_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp591, struct_Cn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_9e = simd_and(tmp71, tmp159);
          bytetest_8f_8f = simd_and(bytetest_80_8f, tmp99);
          r800_ffff_tmp592 = simd_and(r800_ffff_tmp575, bytetest_9e);
          carryQ.cq[232] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp592, carryQ.get_carry_in(232), r800_ffff_tmp593));
          r800_ffff_tmp594 = simd_and(r800_ffff_tmp593, bytetest_8f_8f);
          struct_Cn.cc = simd_or(r800_ffff_tmp594, struct_Cn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_9e = simd_and(tmp71, tmp159);
          bytetest_94_9f = simd_and(tmp71, tmp4);
          r800_ffff_tmp595 = simd_and(r800_ffff_tmp593, bytetest_94_9f);
          struct_Cn.cc = simd_or(r800_ffff_tmp595, struct_Cn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_9f = simd_and(tmp71, tmp99);
          bytetest_80_b7 = simd_andc(bytetest_80_bf, tmp280);
          r800_ffff_tmp596 = simd_and(r800_ffff_tmp575, bytetest_9f);
          carryQ.cq[233] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp596, carryQ.get_carry_in(233), r800_ffff_tmp597));
          r800_ffff_tmp598 = simd_and(r800_ffff_tmp597, bytetest_80_b7);
          bytetest_9e = simd_and(tmp71, tmp159);
          bytetest_ab_bf = simd_and(bytetest_a0_bf, tmp411);
          r800_ffff_tmp599 = simd_and(r800_ffff_tmp593, bytetest_ab_bf);
          r800_ffff_tmp600 = simd_or(r800_ffff_tmp599, r800_ffff_tmp598);
          struct_Cn.cc = simd_or(r800_ffff_tmp600, struct_Cn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_a0 = simd_andc(tmp105, tmp6);
          bytetest_ac_af = simd_and(tmp105, tmp17);
          r800_ffff_tmp601 = simd_and(r800_ffff_tmp575, bytetest_a0);
          carryQ.cq[234] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp601, carryQ.get_carry_in(234), r800_ffff_tmp602));
          r800_ffff_tmp603 = simd_and(r800_ffff_tmp602, bytetest_ac_af);
          struct_Cn.cc = simd_or(r800_ffff_tmp603, struct_Cn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_a0 = simd_andc(tmp105, tmp6);
          bytetest_ba_bf = simd_and(bytetest_b8_bf, tmp32);
          r800_ffff_tmp604 = simd_and(r800_ffff_tmp602, bytetest_ba_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp604, struct_Cn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_a1 = simd_and(tmp105, tmp11);
          bytetest_b8_bf = simd_and(bytetest_b0_bf, basis_bits.bit_4);
          r800_ffff_tmp605 = simd_and(r800_ffff_tmp575, bytetest_a1);
          carryQ.cq[235] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp605, carryQ.get_carry_in(235), r800_ffff_tmp606));
          r800_ffff_tmp607 = simd_and(r800_ffff_tmp606, bytetest_b8_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp607, struct_Cn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_a3 = simd_and(tmp105, tmp31);
          r800_ffff_tmp608 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp192), simd_andc(tmp154, basis_bits.bit_4));
          bytetest_85_8d = simd_and(bytetest_80_8f, r800_ffff_tmp608);
          r800_ffff_tmp609 = simd_and(r800_ffff_tmp575, bytetest_a3);
          carryQ.cq[236] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp609, carryQ.get_carry_in(236), r800_ffff_tmp610));
          r800_ffff_tmp611 = simd_and(r800_ffff_tmp610, bytetest_85_8d);
          struct_Cn.cc = simd_or(r800_ffff_tmp611, struct_Cn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_a3 = simd_and(tmp105, tmp31);
          bytetest_9a_9f = simd_and(bytetest_98_9f, tmp32);
          r800_ffff_tmp612 = simd_and(r800_ffff_tmp610, bytetest_9a_9f);
          struct_Cn.cc = simd_or(r800_ffff_tmp612, struct_Cn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_a3 = simd_and(tmp105, tmp31);
          bytetest_bc_bf = simd_and(bytetest_b0_bf, tmp17);
          r800_ffff_tmp613 = simd_and(r800_ffff_tmp610, bytetest_bc_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp613, struct_Cn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_a5 = simd_and(tmp105, tmp46);
          r800_ffff_tmp614 = simd_or(simd_and(basis_bits.bit_4, r800_ffff_tmp501), simd_andc(basis_bits.bit_5, basis_bits.bit_4));
          bytetest_94_9e = simd_and(tmp71, r800_ffff_tmp614);
          r800_ffff_tmp615 = simd_and(r800_ffff_tmp575, bytetest_a5);
          carryQ.cq[237] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp615, carryQ.get_carry_in(237), r800_ffff_tmp616));
          r800_ffff_tmp617 = simd_and(r800_ffff_tmp616, bytetest_94_9e);
          struct_Cn.cc = simd_or(r800_ffff_tmp617, struct_Cn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_a5 = simd_and(tmp105, tmp46);
          bytetest_bd_bf = simd_and(bytetest_bc_bf, tmp5);
          r800_ffff_tmp618 = simd_and(r800_ffff_tmp616, bytetest_bd_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp618, struct_Cn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_a7 = simd_and(tmp105, tmp55);
          bytetest_8e_8e = simd_and(bytetest_80_8f, tmp159);
          r800_ffff_tmp619 = simd_and(r800_ffff_tmp575, bytetest_a7);
          carryQ.cq[238] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp619, carryQ.get_carry_in(238), r800_ffff_tmp620));
          r800_ffff_tmp621 = simd_and(r800_ffff_tmp620, bytetest_8e_8e);
          struct_Cn.cc = simd_or(r800_ffff_tmp621, struct_Cn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_a7 = simd_and(tmp105, tmp55);
          bytetest_9a_9d = simd_and(bytetest_98_9f, r800_ffff_tmp142);
          r800_ffff_tmp622 = simd_and(r800_ffff_tmp620, bytetest_9a_9d);
          struct_Cn.cc = simd_or(r800_ffff_tmp622, struct_Cn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_a7 = simd_and(tmp105, tmp55);
          bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
          r800_ffff_tmp623 = simd_and(r800_ffff_tmp620, bytetest_a0_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp623, struct_Cn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_a8 = simd_and(tmp105, tmp149);
          bytetest_b7_bf = simd_and(bytetest_b0_bf, tmp228);
          r800_ffff_tmp624 = simd_and(r800_ffff_tmp575, bytetest_a8);
          carryQ.cq[239] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp624, carryQ.get_carry_in(239), r800_ffff_tmp625));
          r800_ffff_tmp626 = simd_and(r800_ffff_tmp625, bytetest_b7_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp626, struct_Cn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_a9 = simd_and(tmp105, tmp221);
          bytetest_8e_8f = simd_and(bytetest_80_8f, tmp18);
          r800_ffff_tmp627 = simd_and(r800_ffff_tmp575, bytetest_a9);
          carryQ.cq[240] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp627, carryQ.get_carry_in(240), r800_ffff_tmp628));
          r800_ffff_tmp629 = simd_and(r800_ffff_tmp628, bytetest_8e_8f);
          struct_Cn.cc = simd_or(r800_ffff_tmp629, struct_Cn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_a9 = simd_and(tmp105, tmp221);
          bytetest_9a_9b = simd_and(tmp71, tmp217);
          r800_ffff_tmp630 = simd_and(r800_ffff_tmp628, bytetest_9a_9b);
          struct_Cn.cc = simd_or(r800_ffff_tmp630, struct_Cn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_a9 = simd_and(tmp105, tmp221);
          bytetest_bc_bf = simd_and(bytetest_b0_bf, tmp17);
          r800_ffff_tmp631 = simd_and(r800_ffff_tmp628, bytetest_bc_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp631, struct_Cn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_ab = simd_and(tmp105, tmp84);
          r800_ffff_tmp632 = simd_not(tmp378);
          r800_ffff_tmp633 = simd_or(tmp4, tmp30);
          r800_ffff_tmp634 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp632), simd_andc(r800_ffff_tmp633, basis_bits.bit_3));
          bytetest_83_9a = simd_and(bytetest_80_9f, r800_ffff_tmp634);
          r800_ffff_tmp635 = simd_and(r800_ffff_tmp575, bytetest_ab);
          carryQ.cq[241] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp635, carryQ.get_carry_in(241), r800_ffff_tmp636));
          r800_ffff_tmp637 = simd_and(r800_ffff_tmp636, bytetest_83_9a);
          struct_Cn.cc = simd_or(r800_ffff_tmp637, struct_Cn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_ac = simd_and(tmp105, tmp180);
          bytetest_80_80 = simd_andc(bytetest_80_8f, tmp6);
          r800_ffff_tmp638 = simd_and(r800_ffff_tmp575, bytetest_ac);
          carryQ.cq[242] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp638, carryQ.get_carry_in(242), r800_ffff_tmp639));
          r800_ffff_tmp640 = simd_and(r800_ffff_tmp639, bytetest_80_80);
          bytetest_ab = simd_and(tmp105, tmp84);
          bytetest_b7_bf = simd_and(bytetest_b0_bf, tmp228);
          r800_ffff_tmp641 = simd_and(r800_ffff_tmp636, bytetest_b7_bf);
          r800_ffff_tmp642 = simd_or(r800_ffff_tmp641, r800_ffff_tmp640);
          struct_Cn.cc = simd_or(r800_ffff_tmp642, struct_Cn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_ac = simd_and(tmp105, tmp180);
          bytetest_87_88 = simd_and(bytetest_80_8f, tmp208);
          r800_ffff_tmp643 = simd_and(r800_ffff_tmp639, bytetest_87_88);
          struct_Cn.cc = simd_or(r800_ffff_tmp643, struct_Cn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_ac = simd_and(tmp105, tmp180);
          bytetest_8f_90 = simd_and(bytetest_80_9f, tmp358);
          r800_ffff_tmp644 = simd_and(r800_ffff_tmp639, bytetest_8f_90);
          struct_Cn.cc = simd_or(r800_ffff_tmp644, struct_Cn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_ac = simd_and(tmp105, tmp180);
          bytetest_97_9f = simd_and(tmp71, tmp228);
          r800_ffff_tmp645 = simd_and(r800_ffff_tmp639, bytetest_97_9f);
          struct_Cn.cc = simd_or(r800_ffff_tmp645, struct_Cn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_ac = simd_and(tmp105, tmp180);
          bytetest_a7_a7 = simd_and(tmp105, tmp55);
          r800_ffff_tmp646 = simd_and(r800_ffff_tmp639, bytetest_a7_a7);
          struct_Cn.cc = simd_or(r800_ffff_tmp646, struct_Cn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_ad_ae = simd_and(bytetest_ac_af, tmp297);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp647 = simd_and(r800_ffff_tmp575, bytetest_ad_ae);
          carryQ.cq[243] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp647, carryQ.get_carry_in(243), r800_ffff_tmp648));
          r800_ffff_tmp649 = simd_and(r800_ffff_tmp648, bytetest_80_bf);
          bytetest_ac = simd_and(tmp105, tmp180);
          bytetest_af_bf = simd_and(bytetest_a0_bf, tmp100);
          r800_ffff_tmp650 = simd_and(r800_ffff_tmp639, bytetest_af_bf);
          r800_ffff_tmp651 = simd_or(r800_ffff_tmp650, r800_ffff_tmp649);
          struct_Cn.cc = simd_or(r800_ffff_tmp651, struct_Cn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_af = simd_and(tmp105, tmp99);
          bytetest_ae_af = simd_and(tmp105, tmp18);
          r800_ffff_tmp652 = simd_and(r800_ffff_tmp575, bytetest_af);
          carryQ.cq[244] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp652, carryQ.get_carry_in(244), r800_ffff_tmp653));
          r800_ffff_tmp654 = simd_and(r800_ffff_tmp653, bytetest_ae_af);
          struct_Cn.cc = simd_or(r800_ffff_tmp654, struct_Cn.cc);
          bytetest_ea = simd_and(r800_ffff_tmp1, tmp74);
          bytetest_af = simd_and(tmp105, tmp99);
          bytetest_ba_bf = simd_and(bytetest_b8_bf, tmp32);
          r800_ffff_tmp655 = simd_and(r800_ffff_tmp653, bytetest_ba_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp655, struct_Cn.cc);
          bytetest_ed = simd_and(r800_ffff_tmp1, tmp97);
          bytetest_9e = simd_and(tmp71, tmp159);
          bytetest_a4_af = simd_and(tmp105, tmp4);
          r800_ffff_tmp656 = simd_and(tmp21, bytetest_ed);
          carryQ.cq[245] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp656, carryQ.get_carry_in(245), r800_ffff_tmp657));
          r800_ffff_tmp658 = simd_and(r800_ffff_tmp657, bytetest_9e);
          carryQ.cq[246] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp658, carryQ.get_carry_in(246), r800_ffff_tmp659));
          r800_ffff_tmp660 = simd_and(r800_ffff_tmp659, bytetest_a4_af);
          struct_Cn.cc = simd_or(r800_ffff_tmp660, struct_Cn.cc);
          bytetest_ed = simd_and(r800_ffff_tmp1, tmp97);
          bytetest_9f = simd_and(tmp71, tmp99);
          bytetest_87_8a = simd_and(bytetest_80_8f, tmp168);
          r800_ffff_tmp661 = simd_and(r800_ffff_tmp657, bytetest_9f);
          carryQ.cq[247] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp661, carryQ.get_carry_in(247), r800_ffff_tmp662));
          r800_ffff_tmp663 = simd_and(r800_ffff_tmp662, bytetest_87_8a);
          struct_Cn.cc = simd_or(r800_ffff_tmp663, struct_Cn.cc);
          bytetest_ed = simd_and(r800_ffff_tmp1, tmp97);
          bytetest_9f = simd_and(tmp71, tmp99);
          bytetest_bc_bf = simd_and(bytetest_b0_bf, tmp17);
          r800_ffff_tmp664 = simd_and(r800_ffff_tmp662, bytetest_bc_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp664, struct_Cn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp99);
          bytetest_a9 = simd_and(tmp105, tmp221);
          bytetest_ae_af = simd_and(tmp105, tmp18);
          r800_ffff_tmp665 = simd_and(tmp21, bytetest_ef);
          carryQ.cq[248] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp665, carryQ.get_carry_in(248), r800_ffff_tmp666));
          r800_ffff_tmp667 = simd_and(r800_ffff_tmp666, bytetest_a9);
          carryQ.cq[249] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp667, carryQ.get_carry_in(249), r800_ffff_tmp668));
          r800_ffff_tmp669 = simd_and(r800_ffff_tmp668, bytetest_ae_af);
          struct_Cn.cc = simd_or(r800_ffff_tmp669, struct_Cn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp99);
          bytetest_ab = simd_and(tmp105, tmp84);
          bytetest_9a_bf = simd_and(bytetest_80_bf, tmp68);
          r800_ffff_tmp670 = simd_and(r800_ffff_tmp666, bytetest_ab);
          carryQ.cq[250] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp670, carryQ.get_carry_in(250), r800_ffff_tmp671));
          r800_ffff_tmp672 = simd_and(r800_ffff_tmp671, bytetest_9a_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp672, struct_Cn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp99);
          bytetest_ac = simd_and(tmp105, tmp180);
          r800_ffff_tmp673 = simd_not(r800_ffff_tmp633);
          r800_ffff_tmp674 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp673), simd_andc(tmp228, basis_bits.bit_3));
          bytetest_87_92 = simd_and(bytetest_80_9f, r800_ffff_tmp674);
          r800_ffff_tmp675 = simd_and(r800_ffff_tmp666, bytetest_ac);
          carryQ.cq[251] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp675, carryQ.get_carry_in(251), r800_ffff_tmp676));
          r800_ffff_tmp677 = simd_and(r800_ffff_tmp676, bytetest_87_92);
          struct_Cn.cc = simd_or(r800_ffff_tmp677, struct_Cn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp99);
          bytetest_ac = simd_and(tmp105, tmp180);
          bytetest_98_9c = simd_andc(bytetest_98_9f, tmp154);
          r800_ffff_tmp678 = simd_and(r800_ffff_tmp676, bytetest_98_9c);
          struct_Cn.cc = simd_or(r800_ffff_tmp678, struct_Cn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp99);
          bytetest_ac = simd_and(tmp105, tmp180);
          bytetest_b7_b7 = simd_and(bytetest_b0_bf, tmp55);
          r800_ffff_tmp679 = simd_and(r800_ffff_tmp676, bytetest_b7_b7);
          struct_Cn.cc = simd_or(r800_ffff_tmp679, struct_Cn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp99);
          bytetest_ac = simd_and(tmp105, tmp180);
          bytetest_bd_bd = simd_and(bytetest_b0_bf, tmp97);
          r800_ffff_tmp680 = simd_and(r800_ffff_tmp676, bytetest_bd_bd);
          struct_Cn.cc = simd_or(r800_ffff_tmp680, struct_Cn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp99);
          bytetest_ac = simd_and(tmp105, tmp180);
          bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp99);
          r800_ffff_tmp681 = simd_and(r800_ffff_tmp676, bytetest_bf_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp681, struct_Cn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp99);
          bytetest_ad = simd_and(tmp105, tmp97);
          bytetest_82_82 = simd_and(bytetest_80_8f, tmp91);
          r800_ffff_tmp682 = simd_and(r800_ffff_tmp666, bytetest_ad);
          carryQ.cq[252] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp682, carryQ.get_carry_in(252), r800_ffff_tmp683));
          r800_ffff_tmp684 = simd_and(r800_ffff_tmp683, bytetest_82_82);
          struct_Cn.cc = simd_or(r800_ffff_tmp684, struct_Cn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp99);
          bytetest_ad = simd_and(tmp105, tmp97);
          bytetest_85_85 = simd_and(bytetest_80_8f, tmp46);
          r800_ffff_tmp685 = simd_and(r800_ffff_tmp683, bytetest_85_85);
          struct_Cn.cc = simd_or(r800_ffff_tmp685, struct_Cn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp99);
          bytetest_af = simd_and(tmp105, tmp99);
          r800_ffff_tmp686 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp673), simd_andc(tmp15, basis_bits.bit_3));
          bytetest_82_92 = simd_and(bytetest_80_9f, r800_ffff_tmp686);
          r800_ffff_tmp687 = simd_and(r800_ffff_tmp666, bytetest_af);
          carryQ.cq[253] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp687, carryQ.get_carry_in(253), r800_ffff_tmp688));
          r800_ffff_tmp689 = simd_and(r800_ffff_tmp688, bytetest_82_92);
          struct_Cn.cc = simd_or(r800_ffff_tmp689, struct_Cn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp99);
          bytetest_b5 = simd_and(bytetest_b0_bf, tmp46);
          bytetest_80_8f = simd_andc(bytetest_80_bf, tmp12);
          r800_ffff_tmp690 = simd_and(r800_ffff_tmp666, bytetest_b5);
          carryQ.cq[254] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp690, carryQ.get_carry_in(254), r800_ffff_tmp691));
          r800_ffff_tmp692 = simd_and(r800_ffff_tmp691, bytetest_80_8f);
          struct_Cn.cc = simd_or(r800_ffff_tmp692, struct_Cn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp99);
          bytetest_b6 = simd_and(bytetest_b0_bf, tmp118);
          bytetest_90_91 = simd_andc(tmp71, tmp15);
          r800_ffff_tmp693 = simd_and(r800_ffff_tmp666, bytetest_b6);
          carryQ.cq[255] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp693, carryQ.get_carry_in(255), r800_ffff_tmp694));
          r800_ffff_tmp695 = simd_and(r800_ffff_tmp694, bytetest_90_91);
          struct_Cn.cc = simd_or(r800_ffff_tmp695, struct_Cn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp99);
          bytetest_b7 = simd_and(bytetest_b0_bf, tmp55);
          r800_ffff_tmp696 = simd_or(simd_and(basis_bits.bit_2, r800_ffff_tmp530), simd_andc(tmp437, basis_bits.bit_2));
          bytetest_88_af = simd_and(bytetest_80_bf, r800_ffff_tmp696);
          r800_ffff_tmp697 = simd_and(r800_ffff_tmp666, bytetest_b7);
          carryQ.cq[256] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp697, carryQ.get_carry_in(256), r800_ffff_tmp698));
          r800_ffff_tmp699 = simd_and(r800_ffff_tmp698, bytetest_88_af);
          struct_Cn.cc = simd_or(r800_ffff_tmp699, struct_Cn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp99);
          bytetest_b7 = simd_and(bytetest_b0_bf, tmp55);
          bytetest_be_bf = simd_and(bytetest_b0_bf, tmp18);
          r800_ffff_tmp700 = simd_and(r800_ffff_tmp698, bytetest_be_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp700, struct_Cn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp99);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp149);
          bytetest_9a_9f = simd_and(bytetest_98_9f, tmp32);
          r800_ffff_tmp701 = simd_and(r800_ffff_tmp666, bytetest_b8);
          carryQ.cq[257] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp701, carryQ.get_carry_in(257), r800_ffff_tmp702));
          r800_ffff_tmp703 = simd_and(r800_ffff_tmp702, bytetest_9a_9f);
          struct_Cn.cc = simd_or(r800_ffff_tmp703, struct_Cn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp99);
          bytetest_b8 = simd_and(bytetest_b0_bf, tmp149);
          bytetest_a7_af = simd_and(tmp105, tmp228);
          r800_ffff_tmp704 = simd_and(r800_ffff_tmp702, bytetest_a7_af);
          struct_Cn.cc = simd_or(r800_ffff_tmp704, struct_Cn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp99);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp221);
          bytetest_93_93 = simd_and(tmp71, tmp31);
          r800_ffff_tmp705 = simd_and(r800_ffff_tmp666, bytetest_b9);
          carryQ.cq[258] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp705, carryQ.get_carry_in(258), r800_ffff_tmp706));
          r800_ffff_tmp707 = simd_and(r800_ffff_tmp706, bytetest_93_93);
          struct_Cn.cc = simd_or(r800_ffff_tmp707, struct_Cn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp99);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp221);
          bytetest_a7_a7 = simd_and(tmp105, tmp55);
          r800_ffff_tmp708 = simd_and(r800_ffff_tmp706, bytetest_a7_a7);
          struct_Cn.cc = simd_or(r800_ffff_tmp708, struct_Cn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp99);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp221);
          bytetest_ac_af = simd_and(tmp105, tmp17);
          r800_ffff_tmp709 = simd_and(r800_ffff_tmp706, bytetest_ac_af);
          struct_Cn.cc = simd_or(r800_ffff_tmp709, struct_Cn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp99);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp221);
          bytetest_b5_b5 = simd_and(bytetest_b0_bf, tmp46);
          r800_ffff_tmp710 = simd_and(r800_ffff_tmp706, bytetest_b5_b5);
          struct_Cn.cc = simd_or(r800_ffff_tmp710, struct_Cn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp99);
          bytetest_bb = simd_and(bytetest_b0_bf, tmp84);
          bytetest_bd_be = simd_and(bytetest_bc_bf, tmp297);
          r800_ffff_tmp711 = simd_and(r800_ffff_tmp666, bytetest_bb);
          carryQ.cq[259] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp711, carryQ.get_carry_in(259), r800_ffff_tmp712));
          r800_ffff_tmp713 = simd_and(r800_ffff_tmp712, bytetest_bd_be);
          struct_Cn.cc = simd_or(r800_ffff_tmp713, struct_Cn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp99);
          bytetest_bc = simd_and(bytetest_b0_bf, tmp180);
          bytetest_80_80 = simd_andc(bytetest_80_8f, tmp6);
          r800_ffff_tmp714 = simd_and(r800_ffff_tmp666, bytetest_bc);
          carryQ.cq[260] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp714, carryQ.get_carry_in(260), r800_ffff_tmp715));
          r800_ffff_tmp716 = simd_and(r800_ffff_tmp715, bytetest_80_80);
          struct_Cn.cc = simd_or(r800_ffff_tmp716, struct_Cn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp99);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp99);
          bytetest_80_81 = simd_andc(bytetest_80_8f, tmp15);
          r800_ffff_tmp717 = simd_and(r800_ffff_tmp666, bytetest_bf);
          carryQ.cq[261] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp717, carryQ.get_carry_in(261), r800_ffff_tmp718));
          r800_ffff_tmp719 = simd_and(r800_ffff_tmp718, bytetest_80_81);
          bytetest_be = simd_and(bytetest_b0_bf, tmp159);
          bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp99);
          r800_ffff_tmp720 = simd_and(r800_ffff_tmp666, bytetest_be);
          carryQ.cq[262] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp720, carryQ.get_carry_in(262), r800_ffff_tmp721));
          r800_ffff_tmp722 = simd_and(r800_ffff_tmp721, bytetest_bf_bf);
          r800_ffff_tmp723 = simd_or(r800_ffff_tmp722, r800_ffff_tmp719);
          struct_Cn.cc = simd_or(r800_ffff_tmp723, struct_Cn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp99);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp99);
          bytetest_88_89 = simd_and(bytetest_80_8f, r800_ffff_tmp254);
          r800_ffff_tmp724 = simd_and(r800_ffff_tmp718, bytetest_88_89);
          struct_Cn.cc = simd_or(r800_ffff_tmp724, struct_Cn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp99);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp99);
          bytetest_90_91 = simd_andc(tmp71, tmp15);
          r800_ffff_tmp725 = simd_and(r800_ffff_tmp718, bytetest_90_91);
          struct_Cn.cc = simd_or(r800_ffff_tmp725, struct_Cn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp99);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp99);
          bytetest_98_99 = simd_and(tmp71, r800_ffff_tmp254);
          r800_ffff_tmp726 = simd_and(r800_ffff_tmp718, bytetest_98_99);
          struct_Cn.cc = simd_or(r800_ffff_tmp726, struct_Cn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp99);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp99);
          bytetest_9d_9f = simd_and(r800_ffff_tmp319, tmp5);
          r800_ffff_tmp727 = simd_and(r800_ffff_tmp718, bytetest_9d_9f);
          struct_Cn.cc = simd_or(r800_ffff_tmp727, struct_Cn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp99);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp99);
          bytetest_a7_a7 = simd_and(tmp105, tmp55);
          r800_ffff_tmp728 = simd_and(r800_ffff_tmp718, bytetest_a7_a7);
          struct_Cn.cc = simd_or(r800_ffff_tmp728, struct_Cn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp99);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp99);
          r800_ffff_tmp729 = simd_not(tmp144);
          r800_ffff_tmp730 = simd_or(simd_and(basis_bits.bit_3, r800_ffff_tmp729), simd_andc(tmp99, basis_bits.bit_3));
          bytetest_af_b8 = simd_and(bytetest_a0_bf, r800_ffff_tmp730);
          r800_ffff_tmp731 = simd_and(r800_ffff_tmp718, bytetest_af_b8);
          struct_Cn.cc = simd_or(r800_ffff_tmp731, struct_Cn.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, tmp99);
          bytetest_bf = simd_and(bytetest_b0_bf, tmp99);
          bytetest_be_bf = simd_and(bytetest_b0_bf, tmp18);
          r800_ffff_tmp732 = simd_and(r800_ffff_tmp718, bytetest_be_bf);
          struct_Cn.cc = simd_or(r800_ffff_tmp732, struct_Cn.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(123, 140);
        }
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_90 = simd_andc(tmp71, tmp6);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp547 = simd_and(tmp23, bytetest_90);
        carryQ.cq[263] = carryout2carry(pablo_blk_Advance(tmp547, carryQ.get_carry_in(263), tmp548));
        tmp549 = simd_and(tmp548, bytetest_80_bf);
        if ((bitblock::any(tmp549) || carryQ.CarryTest(264, 33))) {
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_80 = simd_andc(tmp66, tmp6);
          bytetest_8c_8c = simd_and(tmp66, tmp180);
          r10000_10fff_tmp1 = simd_and(tmp23, bytetest_90);
          carryQ.cq[264] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp1, carryQ.get_carry_in(264), r10000_10fff_tmp2));
          r10000_10fff_tmp3 = simd_and(r10000_10fff_tmp2, bytetest_80);
          carryQ.cq[265] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp3, carryQ.get_carry_in(265), r10000_10fff_tmp4));
          r10000_10fff_tmp5 = simd_and(r10000_10fff_tmp4, bytetest_8c_8c);
          struct_Cn.cc = simd_or(r10000_10fff_tmp5, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_80 = simd_andc(tmp66, tmp6);
          bytetest_a7_a7 = simd_and(tmp105, tmp55);
          r10000_10fff_tmp6 = simd_and(r10000_10fff_tmp4, bytetest_a7_a7);
          struct_Cn.cc = simd_or(r10000_10fff_tmp6, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_80 = simd_andc(tmp66, tmp6);
          bytetest_bb_bb = simd_and(bytetest_b0_bf, tmp84);
          r10000_10fff_tmp7 = simd_and(r10000_10fff_tmp4, bytetest_bb_bb);
          struct_Cn.cc = simd_or(r10000_10fff_tmp7, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_80 = simd_andc(tmp66, tmp6);
          bytetest_be_be = simd_and(bytetest_b0_bf, tmp159);
          r10000_10fff_tmp8 = simd_and(r10000_10fff_tmp4, bytetest_be_be);
          struct_Cn.cc = simd_or(r10000_10fff_tmp8, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_81 = simd_and(tmp66, tmp11);
          bytetest_8e_8f = simd_and(tmp66, tmp18);
          r10000_10fff_tmp9 = simd_and(r10000_10fff_tmp2, bytetest_81);
          carryQ.cq[266] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp9, carryQ.get_carry_in(266), r10000_10fff_tmp10));
          r10000_10fff_tmp11 = simd_and(r10000_10fff_tmp10, bytetest_8e_8f);
          struct_Cn.cc = simd_or(r10000_10fff_tmp11, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_81 = simd_and(tmp66, tmp11);
          bytetest_9e_bf = simd_and(bytetest_80_bf, tmp213);
          r10000_10fff_tmp12 = simd_and(r10000_10fff_tmp10, bytetest_9e_bf);
          struct_Cn.cc = simd_or(r10000_10fff_tmp12, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_83 = simd_and(tmp66, tmp31);
          bytetest_bb_bf = simd_and(tmp42, tmp106);
          r10000_10fff_tmp13 = simd_and(r10000_10fff_tmp2, bytetest_83);
          carryQ.cq[267] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp13, carryQ.get_carry_in(267), r10000_10fff_tmp14));
          r10000_10fff_tmp15 = simd_and(r10000_10fff_tmp14, bytetest_bb_bf);
          struct_Cn.cc = simd_or(r10000_10fff_tmp15, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_84 = simd_and(tmp66, tmp45);
          bytetest_83_86 = simd_and(tmp308, tmp310);
          r10000_10fff_tmp16 = simd_and(r10000_10fff_tmp2, bytetest_84);
          carryQ.cq[268] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp16, carryQ.get_carry_in(268), r10000_10fff_tmp17));
          r10000_10fff_tmp18 = simd_and(r10000_10fff_tmp17, bytetest_83_86);
          struct_Cn.cc = simd_or(r10000_10fff_tmp18, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_84 = simd_and(tmp66, tmp45);
          r10000_10fff_tmp19 = simd_and(bytetest_b0_bf, tmp44);
          bytetest_b4_b6 = simd_andc(r10000_10fff_tmp19, tmp30);
          r10000_10fff_tmp20 = simd_and(r10000_10fff_tmp17, bytetest_b4_b6);
          struct_Cn.cc = simd_or(r10000_10fff_tmp20, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_86 = simd_and(tmp66, tmp118);
          bytetest_8b_8f = simd_and(tmp258, tmp106);
          r10000_10fff_tmp21 = simd_and(r10000_10fff_tmp2, bytetest_86);
          carryQ.cq[269] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp21, carryQ.get_carry_in(269), r10000_10fff_tmp22));
          r10000_10fff_tmp23 = simd_and(r10000_10fff_tmp22, bytetest_8b_8f);
          struct_Cn.cc = simd_or(r10000_10fff_tmp23, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_87 = simd_and(tmp66, tmp55);
          bytetest_80_8f = simd_andc(bytetest_80_bf, tmp12);
          r10000_10fff_tmp24 = simd_and(r10000_10fff_tmp2, bytetest_87);
          carryQ.cq[270] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp24, carryQ.get_carry_in(270), r10000_10fff_tmp25));
          r10000_10fff_tmp26 = simd_and(r10000_10fff_tmp25, bytetest_80_8f);
          bytetest_86 = simd_and(bytetest_80_8f, tmp118);
          bytetest_9c_bf = simd_and(bytetest_80_bf, tmp80);
          r10000_10fff_tmp27 = simd_and(r10000_10fff_tmp22, bytetest_9c_bf);
          r10000_10fff_tmp28 = simd_or(r10000_10fff_tmp27, r10000_10fff_tmp26);
          struct_Cn.cc = simd_or(r10000_10fff_tmp28, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          r10000_10fff_tmp29 = simd_andc(tmp72, basis_bits.bit_6);
          bytetest_88_89 = simd_and(bytetest_80_8f, r10000_10fff_tmp29);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r10000_10fff_tmp30 = simd_and(r10000_10fff_tmp2, bytetest_88_89);
          carryQ.cq[271] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp30, carryQ.get_carry_in(271), r10000_10fff_tmp31));
          r10000_10fff_tmp32 = simd_and(r10000_10fff_tmp31, bytetest_80_bf);
          bytetest_87 = simd_and(bytetest_80_8f, tmp55);
          bytetest_be_bf = simd_and(bytetest_b0_bf, tmp18);
          r10000_10fff_tmp33 = simd_and(r10000_10fff_tmp25, bytetest_be_bf);
          r10000_10fff_tmp34 = simd_or(r10000_10fff_tmp33, r10000_10fff_tmp32);
          struct_Cn.cc = simd_or(r10000_10fff_tmp34, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_8a = simd_and(bytetest_80_8f, tmp74);
          r10000_10fff_tmp35 = simd_and(tmp71, tmp17);
          bytetest_9d_9f = simd_and(r10000_10fff_tmp35, tmp5);
          r10000_10fff_tmp36 = simd_and(r10000_10fff_tmp2, bytetest_8a);
          carryQ.cq[272] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp36, carryQ.get_carry_in(272), r10000_10fff_tmp37));
          r10000_10fff_tmp38 = simd_and(r10000_10fff_tmp37, bytetest_9d_9f);
          struct_Cn.cc = simd_or(r10000_10fff_tmp38, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_8b = simd_and(bytetest_80_8f, tmp84);
          bytetest_91_bf = simd_and(bytetest_80_bf, tmp131);
          r10000_10fff_tmp39 = simd_and(r10000_10fff_tmp2, bytetest_8b);
          carryQ.cq[273] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp39, carryQ.get_carry_in(273), r10000_10fff_tmp40));
          r10000_10fff_tmp41 = simd_and(r10000_10fff_tmp40, bytetest_91_bf);
          struct_Cn.cc = simd_or(r10000_10fff_tmp41, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_8c = simd_and(bytetest_80_8f, tmp180);
          bytetest_9f_9f = simd_and(tmp71, tmp99);
          r10000_10fff_tmp42 = simd_and(r10000_10fff_tmp2, bytetest_8c);
          carryQ.cq[274] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp42, carryQ.get_carry_in(274), r10000_10fff_tmp43));
          r10000_10fff_tmp44 = simd_and(r10000_10fff_tmp43, bytetest_9f_9f);
          struct_Cn.cc = simd_or(r10000_10fff_tmp44, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_8c = simd_and(bytetest_80_8f, tmp180);
          bytetest_a4_af = simd_and(tmp105, tmp4);
          r10000_10fff_tmp45 = simd_and(r10000_10fff_tmp43, bytetest_a4_af);
          struct_Cn.cc = simd_or(r10000_10fff_tmp45, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_8d = simd_and(bytetest_80_8f, tmp97);
          r10000_10fff_tmp46 = simd_or(basis_bits.bit_2, tmp411);
          bytetest_8b_bf = simd_and(bytetest_80_bf, r10000_10fff_tmp46);
          r10000_10fff_tmp47 = simd_and(r10000_10fff_tmp2, bytetest_8d);
          carryQ.cq[275] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp47, carryQ.get_carry_in(275), r10000_10fff_tmp48));
          r10000_10fff_tmp49 = simd_and(r10000_10fff_tmp48, bytetest_8b_bf);
          struct_Cn.cc = simd_or(r10000_10fff_tmp49, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_8e = simd_and(bytetest_80_8f, tmp159);
          bytetest_9e_9e = simd_and(tmp71, tmp159);
          r10000_10fff_tmp50 = simd_and(r10000_10fff_tmp2, bytetest_8e);
          carryQ.cq[276] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp50, carryQ.get_carry_in(276), r10000_10fff_tmp51));
          r10000_10fff_tmp52 = simd_and(r10000_10fff_tmp51, bytetest_9e_9e);
          struct_Cn.cc = simd_or(r10000_10fff_tmp52, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_8f = simd_and(bytetest_80_8f, tmp99);
          bytetest_84_87 = simd_and(bytetest_80_8f, tmp44);
          r10000_10fff_tmp53 = simd_and(r10000_10fff_tmp2, bytetest_8f);
          carryQ.cq[277] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp53, carryQ.get_carry_in(277), r10000_10fff_tmp54));
          r10000_10fff_tmp55 = simd_and(r10000_10fff_tmp54, bytetest_84_87);
          struct_Cn.cc = simd_or(r10000_10fff_tmp55, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_8f = simd_and(bytetest_80_8f, tmp99);
          r10000_10fff_tmp56 = simd_and(basis_bits.bit_3, tmp201);
          r10000_10fff_tmp57 = simd_or(basis_bits.bit_2, r10000_10fff_tmp56);
          bytetest_96_bf = simd_and(bytetest_80_bf, r10000_10fff_tmp57);
          r10000_10fff_tmp58 = simd_and(r10000_10fff_tmp54, bytetest_96_bf);
          struct_Cn.cc = simd_or(r10000_10fff_tmp58, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_92 = simd_and(tmp71, tmp91);
          bytetest_9e_9f = simd_and(tmp71, tmp18);
          r10000_10fff_tmp59 = simd_and(r10000_10fff_tmp2, bytetest_92);
          carryQ.cq[278] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp59, carryQ.get_carry_in(278), r10000_10fff_tmp60));
          r10000_10fff_tmp61 = simd_and(r10000_10fff_tmp60, bytetest_9e_9f);
          struct_Cn.cc = simd_or(r10000_10fff_tmp61, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_93_9f = simd_and(tmp71, tmp107);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r10000_10fff_tmp62 = simd_and(r10000_10fff_tmp2, bytetest_93_9f);
          carryQ.cq[279] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp62, carryQ.get_carry_in(279), r10000_10fff_tmp63));
          r10000_10fff_tmp64 = simd_and(r10000_10fff_tmp63, bytetest_80_bf);
          bytetest_92 = simd_and(tmp71, tmp91);
          bytetest_aa_bf = simd_and(bytetest_a0_bf, tmp85);
          r10000_10fff_tmp65 = simd_and(r10000_10fff_tmp60, bytetest_aa_bf);
          r10000_10fff_tmp66 = simd_or(r10000_10fff_tmp65, r10000_10fff_tmp64);
          struct_Cn.cc = simd_or(r10000_10fff_tmp66, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_a0 = simd_andc(tmp105, tmp6);
          bytetest_86_87 = simd_and(bytetest_80_8f, tmp271);
          r10000_10fff_tmp67 = simd_and(r10000_10fff_tmp2, bytetest_a0);
          carryQ.cq[280] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp67, carryQ.get_carry_in(280), r10000_10fff_tmp68));
          r10000_10fff_tmp69 = simd_and(r10000_10fff_tmp68, bytetest_86_87);
          struct_Cn.cc = simd_or(r10000_10fff_tmp69, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_a0 = simd_andc(tmp105, tmp6);
          bytetest_89_89 = simd_and(bytetest_80_8f, tmp221);
          r10000_10fff_tmp70 = simd_and(r10000_10fff_tmp68, bytetest_89_89);
          struct_Cn.cc = simd_or(r10000_10fff_tmp70, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_a0 = simd_andc(tmp105, tmp6);
          bytetest_b6_b6 = simd_and(bytetest_b0_bf, tmp118);
          r10000_10fff_tmp71 = simd_and(r10000_10fff_tmp68, bytetest_b6_b6);
          struct_Cn.cc = simd_or(r10000_10fff_tmp71, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_a0 = simd_andc(tmp105, tmp6);
          r10000_10fff_tmp72 = simd_and(bytetest_b0_bf, tmp72);
          bytetest_b9_bb = simd_and(r10000_10fff_tmp72, tmp5);
          r10000_10fff_tmp73 = simd_and(r10000_10fff_tmp68, bytetest_b9_bb);
          struct_Cn.cc = simd_or(r10000_10fff_tmp73, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_a0 = simd_andc(tmp105, tmp6);
          r10000_10fff_tmp74 = simd_and(bytetest_b0_bf, tmp17);
          bytetest_bd_be = simd_and(r10000_10fff_tmp74, tmp297);
          r10000_10fff_tmp75 = simd_and(r10000_10fff_tmp68, bytetest_bd_be);
          struct_Cn.cc = simd_or(r10000_10fff_tmp75, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_a1 = simd_and(tmp105, tmp11);
          bytetest_96_96 = simd_and(tmp71, tmp118);
          r10000_10fff_tmp76 = simd_and(r10000_10fff_tmp2, bytetest_a1);
          carryQ.cq[281] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp76, carryQ.get_carry_in(281), r10000_10fff_tmp77));
          r10000_10fff_tmp78 = simd_and(r10000_10fff_tmp77, bytetest_96_96);
          struct_Cn.cc = simd_or(r10000_10fff_tmp78, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_a2_a3 = simd_and(tmp105, tmp518);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r10000_10fff_tmp79 = simd_and(r10000_10fff_tmp2, bytetest_a2_a3);
          carryQ.cq[282] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp79, carryQ.get_carry_in(282), r10000_10fff_tmp80));
          r10000_10fff_tmp81 = simd_and(r10000_10fff_tmp80, bytetest_80_bf);
          bytetest_a1 = simd_and(tmp105, tmp11);
          bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
          r10000_10fff_tmp82 = simd_and(r10000_10fff_tmp77, bytetest_a0_bf);
          r10000_10fff_tmp83 = simd_or(r10000_10fff_tmp82, r10000_10fff_tmp81);
          struct_Cn.cc = simd_or(r10000_10fff_tmp83, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_a4 = simd_and(tmp105, tmp45);
          bytetest_9c_9e = simd_andc(r10000_10fff_tmp35, tmp30);
          r10000_10fff_tmp84 = simd_and(r10000_10fff_tmp2, bytetest_a4);
          carryQ.cq[283] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp84, carryQ.get_carry_in(283), r10000_10fff_tmp85));
          r10000_10fff_tmp86 = simd_and(r10000_10fff_tmp85, bytetest_9c_9e);
          struct_Cn.cc = simd_or(r10000_10fff_tmp86, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_a4 = simd_and(tmp105, tmp45);
          r10000_10fff_tmp87 = simd_or(simd_and(basis_bits.bit_5, tmp309), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
          bytetest_ba_be = simd_and(tmp42, r10000_10fff_tmp87);
          r10000_10fff_tmp88 = simd_and(r10000_10fff_tmp85, bytetest_ba_be);
          struct_Cn.cc = simd_or(r10000_10fff_tmp88, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_a5 = simd_and(tmp105, tmp46);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r10000_10fff_tmp89 = simd_and(r10000_10fff_tmp2, bytetest_a5);
          carryQ.cq[284] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp89, carryQ.get_carry_in(284), r10000_10fff_tmp90));
          r10000_10fff_tmp91 = simd_and(r10000_10fff_tmp90, bytetest_80_bf);
          struct_Cn.cc = simd_or(r10000_10fff_tmp91, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_a6 = simd_and(tmp105, tmp118);
          bytetest_b8_bd = simd_andc(tmp42, tmp200);
          r10000_10fff_tmp92 = simd_and(r10000_10fff_tmp2, bytetest_a6);
          carryQ.cq[285] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp92, carryQ.get_carry_in(285), r10000_10fff_tmp93));
          r10000_10fff_tmp94 = simd_and(r10000_10fff_tmp93, bytetest_b8_bd);
          struct_Cn.cc = simd_or(r10000_10fff_tmp94, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_a7 = simd_and(tmp105, tmp55);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r10000_10fff_tmp95 = simd_and(r10000_10fff_tmp2, bytetest_a7);
          carryQ.cq[286] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp95, carryQ.get_carry_in(286), r10000_10fff_tmp96));
          r10000_10fff_tmp97 = simd_and(r10000_10fff_tmp96, bytetest_80_bf);
          struct_Cn.cc = simd_or(r10000_10fff_tmp97, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_a8 = simd_and(tmp105, tmp149);
          bytetest_84_84 = simd_and(bytetest_80_8f, tmp45);
          r10000_10fff_tmp98 = simd_and(r10000_10fff_tmp2, bytetest_a8);
          carryQ.cq[287] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp98, carryQ.get_carry_in(287), r10000_10fff_tmp99));
          r10000_10fff_tmp100 = simd_and(r10000_10fff_tmp99, bytetest_84_84);
          struct_Cn.cc = simd_or(r10000_10fff_tmp100, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_a8 = simd_and(tmp105, tmp149);
          r10000_10fff_tmp101 = simd_not(basis_bits.bit_5);
          r10000_10fff_tmp102 = simd_or(simd_and(basis_bits.bit_4, r10000_10fff_tmp101), simd_andc(tmp160, basis_bits.bit_4));
          bytetest_87_8b = simd_and(bytetest_80_8f, r10000_10fff_tmp102);
          r10000_10fff_tmp103 = simd_and(r10000_10fff_tmp99, bytetest_87_8b);
          struct_Cn.cc = simd_or(r10000_10fff_tmp103, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_a8 = simd_and(tmp105, tmp149);
          bytetest_94_94 = simd_and(tmp71, tmp45);
          r10000_10fff_tmp104 = simd_and(r10000_10fff_tmp99, bytetest_94_94);
          struct_Cn.cc = simd_or(r10000_10fff_tmp104, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_a8 = simd_and(tmp105, tmp149);
          bytetest_98_98 = simd_and(tmp71, tmp149);
          r10000_10fff_tmp105 = simd_and(r10000_10fff_tmp99, bytetest_98_98);
          struct_Cn.cc = simd_or(r10000_10fff_tmp105, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_a8 = simd_and(tmp105, tmp149);
          bytetest_b4_b7 = simd_and(bytetest_b0_bf, tmp44);
          r10000_10fff_tmp106 = simd_and(r10000_10fff_tmp99, bytetest_b4_b7);
          struct_Cn.cc = simd_or(r10000_10fff_tmp106, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_a8 = simd_and(tmp105, tmp149);
          bytetest_bb_be = simd_and(tmp42, tmp310);
          r10000_10fff_tmp107 = simd_and(r10000_10fff_tmp99, bytetest_bb_be);
          struct_Cn.cc = simd_or(r10000_10fff_tmp107, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_a9 = simd_and(tmp105, tmp221);
          bytetest_88_8f = simd_and(bytetest_80_8f, basis_bits.bit_4);
          r10000_10fff_tmp108 = simd_and(r10000_10fff_tmp2, bytetest_a9);
          carryQ.cq[288] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp108, carryQ.get_carry_in(288), r10000_10fff_tmp109));
          r10000_10fff_tmp110 = simd_and(r10000_10fff_tmp109, bytetest_88_8f);
          struct_Cn.cc = simd_or(r10000_10fff_tmp110, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_a9 = simd_and(tmp105, tmp221);
          r10000_10fff_tmp111 = simd_and(tmp71, basis_bits.bit_4);
          bytetest_99_9f = simd_and(r10000_10fff_tmp111, tmp40);
          r10000_10fff_tmp112 = simd_and(r10000_10fff_tmp109, bytetest_99_9f);
          struct_Cn.cc = simd_or(r10000_10fff_tmp112, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_aa_ab = simd_and(tmp105, tmp217);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r10000_10fff_tmp113 = simd_and(r10000_10fff_tmp2, bytetest_aa_ab);
          carryQ.cq[289] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp113, carryQ.get_carry_in(289), r10000_10fff_tmp114));
          r10000_10fff_tmp115 = simd_and(r10000_10fff_tmp114, bytetest_80_bf);
          struct_Cn.cc = simd_or(r10000_10fff_tmp115, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_ac = simd_and(tmp105, tmp180);
          r10000_10fff_tmp116 = simd_or(simd_and(basis_bits.bit_4, tmp207), simd_andc(tmp200, basis_bits.bit_4));
          bytetest_b6_b8 = simd_and(bytetest_b0_bf, r10000_10fff_tmp116);
          r10000_10fff_tmp117 = simd_and(r10000_10fff_tmp2, bytetest_ac);
          carryQ.cq[290] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp117, carryQ.get_carry_in(290), r10000_10fff_tmp118));
          r10000_10fff_tmp119 = simd_and(r10000_10fff_tmp118, bytetest_b6_b8);
          struct_Cn.cc = simd_or(r10000_10fff_tmp119, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_ad = simd_and(tmp105, tmp97);
          bytetest_96_97 = simd_and(tmp71, tmp271);
          r10000_10fff_tmp120 = simd_and(r10000_10fff_tmp2, bytetest_ad);
          carryQ.cq[291] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp120, carryQ.get_carry_in(291), r10000_10fff_tmp121));
          r10000_10fff_tmp122 = simd_and(r10000_10fff_tmp121, bytetest_96_97);
          struct_Cn.cc = simd_or(r10000_10fff_tmp122, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_ad = simd_and(tmp105, tmp97);
          r10000_10fff_tmp123 = simd_andc(bytetest_b0_bf, basis_bits.bit_4);
          bytetest_b3_b7 = simd_and(r10000_10fff_tmp123, tmp106);
          r10000_10fff_tmp124 = simd_and(r10000_10fff_tmp121, bytetest_b3_b7);
          struct_Cn.cc = simd_or(r10000_10fff_tmp124, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_ae_af = simd_and(tmp105, tmp18);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r10000_10fff_tmp125 = simd_and(r10000_10fff_tmp2, bytetest_ae_af);
          carryQ.cq[292] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp125, carryQ.get_carry_in(292), r10000_10fff_tmp126));
          r10000_10fff_tmp127 = simd_and(r10000_10fff_tmp126, bytetest_80_bf);
          struct_Cn.cc = simd_or(r10000_10fff_tmp127, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp221);
          bytetest_80_9f = simd_andc(bytetest_80_bf, basis_bits.bit_2);
          r10000_10fff_tmp128 = simd_and(r10000_10fff_tmp2, bytetest_b9);
          carryQ.cq[293] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp128, carryQ.get_carry_in(293), r10000_10fff_tmp129));
          r10000_10fff_tmp130 = simd_and(r10000_10fff_tmp129, bytetest_80_9f);
          r10000_10fff_tmp131 = simd_or(simd_and(basis_bits.bit_4, tmp207), simd_andc(tmp32, basis_bits.bit_4));
          bytetest_b2_b8 = simd_and(bytetest_b0_bf, r10000_10fff_tmp131);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r10000_10fff_tmp132 = simd_and(r10000_10fff_tmp2, bytetest_b2_b8);
          carryQ.cq[294] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp132, carryQ.get_carry_in(294), r10000_10fff_tmp133));
          r10000_10fff_tmp134 = simd_and(r10000_10fff_tmp133, bytetest_80_bf);
          bytetest_b1 = simd_and(bytetest_b0_bf, tmp11);
          r10000_10fff_tmp135 = simd_or(basis_bits.bit_2, tmp506);
          bytetest_89_bf = simd_and(bytetest_80_bf, r10000_10fff_tmp135);
          r10000_10fff_tmp136 = simd_and(r10000_10fff_tmp2, bytetest_b1);
          carryQ.cq[295] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp136, carryQ.get_carry_in(295), r10000_10fff_tmp137));
          r10000_10fff_tmp138 = simd_and(r10000_10fff_tmp137, bytetest_89_bf);
          r10000_10fff_tmp139 = simd_or(r10000_10fff_tmp138, r10000_10fff_tmp134);
          r10000_10fff_tmp140 = simd_or(r10000_10fff_tmp139, r10000_10fff_tmp130);
          struct_Cn.cc = simd_or(r10000_10fff_tmp140, struct_Cn.cc);
          bytetest_f0 = simd_andc(tmp3, tmp6);
          bytetest_90 = simd_andc(tmp71, tmp6);
          bytetest_ba_bf = simd_and(tmp42, tmp32);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r10000_10fff_tmp141 = simd_and(r10000_10fff_tmp2, bytetest_ba_bf);
          carryQ.cq[296] = carryout2carry(pablo_blk_Advance(r10000_10fff_tmp141, carryQ.get_carry_in(296), r10000_10fff_tmp142));
          r10000_10fff_tmp143 = simd_and(r10000_10fff_tmp142, bytetest_80_bf);
          bytetest_b9 = simd_and(bytetest_b0_bf, tmp221);
          bytetest_bf_bf = simd_and(bytetest_b0_bf, tmp99);
          r10000_10fff_tmp144 = simd_and(r10000_10fff_tmp129, bytetest_bf_bf);
          r10000_10fff_tmp145 = simd_or(r10000_10fff_tmp144, r10000_10fff_tmp143);
          struct_Cn.cc = simd_or(r10000_10fff_tmp145, struct_Cn.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(264, 33);
        }
  }
  CarryArray<297, 0> carryQ;
  };

  struct Cc {
  Cc() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Cc & struct_Cc) {
		BitBlock tmp1, tmp2, bytetest_0_1f, tmp3, tmp4, tmp5, tmp6, tmp7, tmp8;
		BitBlock bytetest_7f_7f, tmp9, tmp10, tmp11, tmp12, tmp13, bytetest_c2_df;
		BitBlock r80_7ff_tmp1, r80_7ff_tmp2, r80_7ff_tmp3, r80_7ff_tmp4, r80_7ff_tmp5;
		BitBlock r80_7ff_tmp6, bytetest_c2, r80_7ff_tmp7, bytetest_80_9f, r80_7ff_tmp8;
		BitBlock r80_7ff_tmp9, r80_7ff_tmp10, r80_7ff_tmp11, r80_7ff_tmp12;




        struct_Cc.cc = simd<1>::constant<0>();
        tmp1 = simd_or(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_or(tmp1, basis_bits.bit_2);
        bytetest_0_1f = simd_not(tmp2);
        struct_Cc.cc = simd_or(bytetest_0_1f, struct_Cc.cc);
        tmp3 = simd_andc(basis_bits.bit_1, basis_bits.bit_0);
        tmp4 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp5 = simd_and(tmp3, tmp4);
        tmp6 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp7 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp8 = simd_and(tmp6, tmp7);
        bytetest_7f_7f = simd_and(tmp5, tmp8);
        struct_Cc.cc = simd_or(bytetest_7f_7f, struct_Cc.cc);
        tmp9 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp10 = simd_andc(tmp9, basis_bits.bit_2);
        tmp11 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp12 = simd_or(tmp11, basis_bits.bit_6);
        tmp13 = simd_or(basis_bits.bit_3, tmp12);
        bytetest_c2_df = simd_and(tmp10, tmp13);
        if ((bitblock::any(bytetest_c2_df) || carryQ.CarryTest(0, 2))) {
          r80_7ff_tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
          r80_7ff_tmp2 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
          r80_7ff_tmp3 = simd_andc(r80_7ff_tmp1, r80_7ff_tmp2);
          r80_7ff_tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
          r80_7ff_tmp5 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
          r80_7ff_tmp6 = simd_andc(r80_7ff_tmp5, r80_7ff_tmp4);
          bytetest_c2 = simd_and(r80_7ff_tmp3, r80_7ff_tmp6);
          r80_7ff_tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          bytetest_80_9f = simd_andc(r80_7ff_tmp7, basis_bits.bit_2);
          r80_7ff_tmp8 = simd<1>::constant<1>();
          carryQ.cq[0] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp8, carryQ.get_carry_in(0), r80_7ff_tmp9));
          r80_7ff_tmp10 = simd_and(r80_7ff_tmp9, bytetest_c2);
          carryQ.cq[1] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp10, carryQ.get_carry_in(1), r80_7ff_tmp11));
          r80_7ff_tmp12 = simd_and(r80_7ff_tmp11, bytetest_80_9f);
          struct_Cc.cc = simd_or(r80_7ff_tmp12, struct_Cc.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(0, 2);
        }
        carryQ.CarryQ_Adjust(2);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Cc & struct_Cc, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, bytetest_0_1f, tmp3, tmp4, tmp5, tmp6, tmp7, tmp8;
		BitBlock bytetest_7f_7f, tmp9, tmp10, tmp11, tmp12, tmp13, bytetest_c2_df;
		BitBlock r80_7ff_tmp1, r80_7ff_tmp2, r80_7ff_tmp3, r80_7ff_tmp4, r80_7ff_tmp5;
		BitBlock r80_7ff_tmp6, bytetest_c2, r80_7ff_tmp7, bytetest_80_9f, r80_7ff_tmp8;
		BitBlock r80_7ff_tmp9, r80_7ff_tmp10, r80_7ff_tmp11, r80_7ff_tmp12;




        struct_Cc.cc = simd<1>::constant<0>();
        tmp1 = simd_or(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_or(tmp1, basis_bits.bit_2);
        bytetest_0_1f = simd_not(tmp2);
        struct_Cc.cc = simd_or(bytetest_0_1f, struct_Cc.cc);
        tmp3 = simd_andc(basis_bits.bit_1, basis_bits.bit_0);
        tmp4 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp5 = simd_and(tmp3, tmp4);
        tmp6 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp7 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp8 = simd_and(tmp6, tmp7);
        bytetest_7f_7f = simd_and(tmp5, tmp8);
        struct_Cc.cc = simd_or(bytetest_7f_7f, struct_Cc.cc);
        tmp9 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp10 = simd_andc(tmp9, basis_bits.bit_2);
        tmp11 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp12 = simd_or(tmp11, basis_bits.bit_6);
        tmp13 = simd_or(basis_bits.bit_3, tmp12);
        bytetest_c2_df = simd_and(tmp10, tmp13);
        if ((bitblock::any(bytetest_c2_df) || carryQ.CarryTest(0, 2))) {
          r80_7ff_tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
          r80_7ff_tmp2 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
          r80_7ff_tmp3 = simd_andc(r80_7ff_tmp1, r80_7ff_tmp2);
          r80_7ff_tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
          r80_7ff_tmp5 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
          r80_7ff_tmp6 = simd_andc(r80_7ff_tmp5, r80_7ff_tmp4);
          bytetest_c2 = simd_and(r80_7ff_tmp3, r80_7ff_tmp6);
          r80_7ff_tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          bytetest_80_9f = simd_andc(r80_7ff_tmp7, basis_bits.bit_2);
          r80_7ff_tmp8 = simd<1>::constant<1>();
          carryQ.cq[0] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp8, carryQ.get_carry_in(0), r80_7ff_tmp9));
          r80_7ff_tmp10 = simd_and(r80_7ff_tmp9, bytetest_c2);
          carryQ.cq[1] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp10, carryQ.get_carry_in(1), r80_7ff_tmp11));
          r80_7ff_tmp12 = simd_and(r80_7ff_tmp11, bytetest_80_9f);
          struct_Cc.cc = simd_or(r80_7ff_tmp12, struct_Cc.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(0, 2);
        }
  }
  CarryArray<2, 0> carryQ;
  };

  struct Cf {
  Cf() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Cf & struct_Cf) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_f0, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, bytetest_91, tmp12, tmp13, tmp14, tmp15, bytetest_82;
		BitBlock tmp16, tmp17, tmp18, bytetest_bd_bd, tmp19, tmp20, tmp21, tmp22;
		BitBlock tmp23, tmp24, tmp25, tmp26, tmp27, bytetest_9d, tmp28, tmp29;
		BitBlock bytetest_85, tmp30, tmp31, tmp32, tmp33, bytetest_b3_ba, tmp34, tmp35;
		BitBlock tmp36, tmp37, tmp38, tmp39, bytetest_f3, tmp40, tmp41, bytetest_a0;
		BitBlock bytetest_80, bytetest_81_81, tmp42, tmp43, tmp44, tmp45, tmp46, tmp47;
		BitBlock tmp48, bytetest_81, bytetest_80_bf, tmp49, tmp50, tmp51, tmp52;
		BitBlock bytetest_a0_bf, tmp53, tmp54, tmp55, tmp56, tmp57, bytetest_c2_df;
		BitBlock r80_7ff_tmp1, bytetest_c2, r80_7ff_tmp2, bytetest_ad_ad, r80_7ff_tmp3;
		BitBlock r80_7ff_tmp4, r80_7ff_tmp5, r80_7ff_tmp6, r80_7ff_tmp7, r80_7ff_tmp8;
		BitBlock bytetest_d8, r80_7ff_tmp9, r80_7ff_tmp10, bytetest_80_84;
		BitBlock r80_7ff_tmp11, r80_7ff_tmp12, r80_7ff_tmp13, r80_7ff_tmp14;
		BitBlock r80_7ff_tmp15, bytetest_9c_9c, r80_7ff_tmp16, r80_7ff_tmp17;
		BitBlock bytetest_db, bytetest_9d_9d, r80_7ff_tmp18, r80_7ff_tmp19;
		BitBlock r80_7ff_tmp20, bytetest_dc, r80_7ff_tmp21, bytetest_8f_8f;
		BitBlock r80_7ff_tmp22, r80_7ff_tmp23, r80_7ff_tmp24, tmp58, tmp59, tmp60;
		BitBlock bytetest_e1_ef, bytetest_e0, tmp61, tmp62, tmp63, tmp64;
		BitBlock r800_ffff_tmp1, bytetest_e1, r800_ffff_tmp2, r800_ffff_tmp3;
		BitBlock bytetest_8e_8e, r800_ffff_tmp4, r800_ffff_tmp5, r800_ffff_tmp6;
		BitBlock r800_ffff_tmp7, r800_ffff_tmp8, bytetest_e2, r800_ffff_tmp9;
		BitBlock bytetest_8b_8f, r800_ffff_tmp10, r800_ffff_tmp11, r800_ffff_tmp12;
		BitBlock r800_ffff_tmp13, r800_ffff_tmp14, r800_ffff_tmp15, r800_ffff_tmp16;
		BitBlock r800_ffff_tmp17, bytetest_aa_ae, r800_ffff_tmp18, r800_ffff_tmp19;
		BitBlock r800_ffff_tmp20, bytetest_a0_a4, r800_ffff_tmp21, r800_ffff_tmp22;
		BitBlock r800_ffff_tmp23, r800_ffff_tmp24, r800_ffff_tmp25, bytetest_a6_af;
		BitBlock r800_ffff_tmp26, r800_ffff_tmp27, bytetest_ef, r800_ffff_tmp28;
		BitBlock r800_ffff_tmp29, r800_ffff_tmp30, bytetest_bb, bytetest_bf_bf;
		BitBlock r800_ffff_tmp31, r800_ffff_tmp32, r800_ffff_tmp33, r800_ffff_tmp34;
		BitBlock r800_ffff_tmp35, bytetest_bf, r800_ffff_tmp36, bytetest_b9_bb;
		BitBlock r800_ffff_tmp37, r800_ffff_tmp38, r800_ffff_tmp39;




        struct_Cf.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_and(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_or(tmp4, tmp5);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp11 = simd_andc(tmp10, tmp4);
        bytetest_91 = simd_and(tmp9, tmp11);
        tmp12 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp13 = simd_andc(tmp7, tmp12);
        tmp14 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp15 = simd_andc(tmp14, tmp4);
        bytetest_82 = simd_and(tmp13, tmp15);
        tmp16 = simd_and(tmp7, tmp2);
        tmp17 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp18 = simd_and(tmp17, tmp10);
        bytetest_bd_bd = simd_and(tmp16, tmp18);
        tmp19 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp19, carryQ.get_carry_in(0), tmp20));
        tmp21 = simd_and(tmp20, bytetest_f0);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp21, carryQ.get_carry_in(1), tmp22));
        tmp23 = simd_and(tmp22, bytetest_91);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp23, carryQ.get_carry_in(2), tmp24));
        tmp25 = simd_and(tmp24, bytetest_82);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp25, carryQ.get_carry_in(3), tmp26));
        tmp27 = simd_and(tmp26, bytetest_bd_bd);
        struct_Cf.cc = simd_or(tmp27, struct_Cf.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp9, tmp18);
        tmp28 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp29 = simd_and(tmp28, tmp10);
        bytetest_85 = simd_and(tmp13, tmp29);
        tmp30 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp31 = simd_or(basis_bits.bit_5, tmp30);
        tmp32 = simd_not(tmp31);
        tmp33 = simd_or(simd_and(basis_bits.bit_4, tmp32), simd_andc(tmp31, basis_bits.bit_4));
        bytetest_b3_ba = simd_and(tmp16, tmp33);
        tmp34 = simd_and(tmp22, bytetest_9d);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp34, carryQ.get_carry_in(4), tmp35));
        tmp36 = simd_and(tmp35, bytetest_85);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp36, carryQ.get_carry_in(5), tmp37));
        tmp38 = simd_and(tmp37, bytetest_b3_ba);
        struct_Cf.cc = simd_or(tmp38, struct_Cf.cc);
        tmp39 = simd_andc(tmp30, tmp4);
        bytetest_f3 = simd_and(tmp3, tmp39);
        tmp40 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp41 = simd_and(tmp7, tmp40);
        bytetest_a0 = simd_andc(tmp41, tmp6);
        bytetest_80 = simd_andc(tmp13, tmp6);
        bytetest_81_81 = simd_and(tmp13, tmp11);
        tmp42 = simd_and(tmp20, bytetest_f3);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp42, carryQ.get_carry_in(6), tmp43));
        tmp44 = simd_and(tmp43, bytetest_a0);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp44, carryQ.get_carry_in(7), tmp45));
        tmp46 = simd_and(tmp45, bytetest_80);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(tmp46, carryQ.get_carry_in(8), tmp47));
        tmp48 = simd_and(tmp47, bytetest_81_81);
        struct_Cf.cc = simd_or(tmp48, struct_Cf.cc);
        bytetest_f3 = simd_and(tmp3, tmp39);
        bytetest_a0 = simd_andc(tmp41, tmp6);
        bytetest_81 = simd_and(tmp13, tmp11);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp49 = simd_and(tmp45, bytetest_81);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(tmp49, carryQ.get_carry_in(9), tmp50));
        tmp51 = simd_and(tmp50, bytetest_80_bf);
        tmp52 = simd_andc(bytetest_80_bf, tmp12);
        bytetest_80 = simd_andc(tmp52, tmp6);
        bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp53 = simd_and(tmp47, bytetest_a0_bf);
        tmp54 = simd_or(tmp53, tmp51);
        struct_Cf.cc = simd_or(tmp54, struct_Cf.cc);
        tmp55 = simd_andc(tmp1, basis_bits.bit_2);
        tmp56 = simd_or(tmp4, basis_bits.bit_6);
        tmp57 = simd_or(basis_bits.bit_3, tmp56);
        bytetest_c2_df = simd_and(tmp55, tmp57);
        if ((bitblock::any(bytetest_c2_df) || carryQ.CarryTest(10, 4))) {
          r80_7ff_tmp1 = simd_andc(tmp1, tmp12);
          bytetest_c2 = simd_and(r80_7ff_tmp1, tmp15);
          r80_7ff_tmp2 = simd_and(bytetest_80_bf, tmp40);
          bytetest_ad_ad = simd_and(r80_7ff_tmp2, tmp18);
          r80_7ff_tmp3 = simd_and(tmp20, bytetest_c2);
          carryQ.cq[10] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp3, carryQ.get_carry_in(10), r80_7ff_tmp4));
          r80_7ff_tmp5 = simd_and(r80_7ff_tmp4, bytetest_ad_ad);
          struct_Cf.cc = simd_or(r80_7ff_tmp5, struct_Cf.cc);
          r80_7ff_tmp6 = simd_and(tmp1, tmp8);
          r80_7ff_tmp7 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
          r80_7ff_tmp8 = simd_andc(r80_7ff_tmp7, tmp5);
          bytetest_d8 = simd_and(r80_7ff_tmp6, r80_7ff_tmp8);
          r80_7ff_tmp9 = simd_andc(tmp52, basis_bits.bit_4);
          r80_7ff_tmp10 = simd_and(basis_bits.bit_5, tmp5);
          bytetest_80_84 = simd_andc(r80_7ff_tmp9, r80_7ff_tmp10);
          r80_7ff_tmp11 = simd_and(tmp20, bytetest_d8);
          carryQ.cq[11] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp11, carryQ.get_carry_in(11), r80_7ff_tmp12));
          r80_7ff_tmp13 = simd_and(r80_7ff_tmp12, bytetest_80_84);
          struct_Cf.cc = simd_or(r80_7ff_tmp13, struct_Cf.cc);
          bytetest_d8 = simd_and(r80_7ff_tmp6, r80_7ff_tmp8);
          r80_7ff_tmp14 = simd_and(bytetest_80_bf, tmp8);
          r80_7ff_tmp15 = simd_andc(tmp17, tmp5);
          bytetest_9c_9c = simd_and(r80_7ff_tmp14, r80_7ff_tmp15);
          r80_7ff_tmp16 = simd_and(r80_7ff_tmp12, bytetest_9c_9c);
          struct_Cf.cc = simd_or(r80_7ff_tmp16, struct_Cf.cc);
          r80_7ff_tmp17 = simd_and(r80_7ff_tmp7, tmp30);
          bytetest_db = simd_and(r80_7ff_tmp6, r80_7ff_tmp17);
          bytetest_9d_9d = simd_and(r80_7ff_tmp14, tmp18);
          r80_7ff_tmp18 = simd_and(tmp20, bytetest_db);
          carryQ.cq[12] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp18, carryQ.get_carry_in(12), r80_7ff_tmp19));
          r80_7ff_tmp20 = simd_and(r80_7ff_tmp19, bytetest_9d_9d);
          struct_Cf.cc = simd_or(r80_7ff_tmp20, struct_Cf.cc);
          bytetest_dc = simd_and(r80_7ff_tmp6, r80_7ff_tmp15);
          r80_7ff_tmp21 = simd_and(tmp17, tmp30);
          bytetest_8f_8f = simd_and(tmp52, r80_7ff_tmp21);
          r80_7ff_tmp22 = simd_and(tmp20, bytetest_dc);
          carryQ.cq[13] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp22, carryQ.get_carry_in(13), r80_7ff_tmp23));
          r80_7ff_tmp24 = simd_and(r80_7ff_tmp23, bytetest_8f_8f);
          struct_Cf.cc = simd_or(r80_7ff_tmp24, struct_Cf.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(10, 4);
        }
        tmp58 = simd_and(tmp1, tmp40);
        tmp59 = simd_or(basis_bits.bit_5, tmp5);
        tmp60 = simd_or(basis_bits.bit_4, tmp59);
        bytetest_e1_ef = simd_and(tmp58, tmp60);
        bytetest_e0 = simd_andc(tmp58, tmp6);
        bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp61 = simd_and(tmp20, bytetest_e0);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(tmp61, carryQ.get_carry_in(14), tmp62));
        tmp63 = simd_and(tmp62, bytetest_a0_bf);
        tmp64 = simd_or(tmp63, bytetest_e1_ef);
        if ((bitblock::any(tmp64) || carryQ.CarryTest(15, 8))) {
          r800_ffff_tmp1 = simd_and(tmp1, tmp40);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          r800_ffff_tmp2 = simd_and(bytetest_80_bf, tmp40);
          bytetest_a0 = simd_andc(r800_ffff_tmp2, tmp6);
          r800_ffff_tmp3 = simd_and(tmp17, tmp14);
          bytetest_8e_8e = simd_and(tmp52, r800_ffff_tmp3);
          r800_ffff_tmp4 = simd_and(tmp20, bytetest_e1);
          carryQ.cq[15] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp4, carryQ.get_carry_in(15), r800_ffff_tmp5));
          r800_ffff_tmp6 = simd_and(r800_ffff_tmp5, bytetest_a0);
          carryQ.cq[16] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp6, carryQ.get_carry_in(16), r800_ffff_tmp7));
          r800_ffff_tmp8 = simd_and(r800_ffff_tmp7, bytetest_8e_8e);
          struct_Cf.cc = simd_or(r800_ffff_tmp8, struct_Cf.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp15);
          bytetest_80 = simd_andc(tmp52, tmp6);
          r800_ffff_tmp9 = simd_and(tmp52, basis_bits.bit_4);
          bytetest_8b_8f = simd_and(r800_ffff_tmp9, tmp31);
          r800_ffff_tmp10 = simd_and(tmp20, bytetest_e2);
          carryQ.cq[17] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp10, carryQ.get_carry_in(17), r800_ffff_tmp11));
          r800_ffff_tmp12 = simd_and(r800_ffff_tmp11, bytetest_80);
          carryQ.cq[18] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp12, carryQ.get_carry_in(18), r800_ffff_tmp13));
          r800_ffff_tmp14 = simd_and(r800_ffff_tmp13, bytetest_8b_8f);
          struct_Cf.cc = simd_or(r800_ffff_tmp14, struct_Cf.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp15);
          bytetest_80 = simd_andc(tmp52, tmp6);
          r800_ffff_tmp15 = simd_and(r800_ffff_tmp2, basis_bits.bit_4);
          r800_ffff_tmp16 = simd_not(tmp30);
          r800_ffff_tmp17 = simd_or(simd_and(basis_bits.bit_5, r800_ffff_tmp16), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
          bytetest_aa_ae = simd_and(r800_ffff_tmp15, r800_ffff_tmp17);
          r800_ffff_tmp18 = simd_and(r800_ffff_tmp13, bytetest_aa_ae);
          struct_Cf.cc = simd_or(r800_ffff_tmp18, struct_Cf.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp15);
          bytetest_81 = simd_and(tmp52, tmp11);
          r800_ffff_tmp19 = simd_andc(r800_ffff_tmp2, basis_bits.bit_4);
          r800_ffff_tmp20 = simd_and(basis_bits.bit_5, tmp5);
          bytetest_a0_a4 = simd_andc(r800_ffff_tmp19, r800_ffff_tmp20);
          r800_ffff_tmp21 = simd_and(r800_ffff_tmp11, bytetest_81);
          carryQ.cq[19] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp21, carryQ.get_carry_in(19), r800_ffff_tmp22));
          r800_ffff_tmp23 = simd_and(r800_ffff_tmp22, bytetest_a0_a4);
          struct_Cf.cc = simd_or(r800_ffff_tmp23, struct_Cf.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp15);
          bytetest_81 = simd_and(tmp52, tmp11);
          r800_ffff_tmp24 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
          r800_ffff_tmp25 = simd_or(basis_bits.bit_4, r800_ffff_tmp24);
          bytetest_a6_af = simd_and(r800_ffff_tmp2, r800_ffff_tmp25);
          r800_ffff_tmp26 = simd_and(r800_ffff_tmp22, bytetest_a6_af);
          struct_Cf.cc = simd_or(r800_ffff_tmp26, struct_Cf.cc);
          r800_ffff_tmp27 = simd_and(tmp17, tmp30);
          bytetest_ef = simd_and(r800_ffff_tmp1, r800_ffff_tmp27);
          r800_ffff_tmp28 = simd_and(bytetest_80_bf, tmp2);
          r800_ffff_tmp29 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
          r800_ffff_tmp30 = simd_and(r800_ffff_tmp29, tmp30);
          bytetest_bb = simd_and(r800_ffff_tmp28, r800_ffff_tmp30);
          bytetest_bf_bf = simd_and(r800_ffff_tmp28, r800_ffff_tmp27);
          r800_ffff_tmp31 = simd_and(tmp20, bytetest_ef);
          carryQ.cq[20] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp31, carryQ.get_carry_in(20), r800_ffff_tmp32));
          r800_ffff_tmp33 = simd_and(r800_ffff_tmp32, bytetest_bb);
          carryQ.cq[21] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp33, carryQ.get_carry_in(21), r800_ffff_tmp34));
          r800_ffff_tmp35 = simd_and(r800_ffff_tmp34, bytetest_bf_bf);
          struct_Cf.cc = simd_or(r800_ffff_tmp35, struct_Cf.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, r800_ffff_tmp27);
          bytetest_bf = simd_and(r800_ffff_tmp28, r800_ffff_tmp27);
          r800_ffff_tmp36 = simd_and(r800_ffff_tmp28, r800_ffff_tmp29);
          bytetest_b9_bb = simd_and(r800_ffff_tmp36, tmp5);
          r800_ffff_tmp37 = simd_and(r800_ffff_tmp32, bytetest_bf);
          carryQ.cq[22] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp37, carryQ.get_carry_in(22), r800_ffff_tmp38));
          r800_ffff_tmp39 = simd_and(r800_ffff_tmp38, bytetest_b9_bb);
          struct_Cf.cc = simd_or(r800_ffff_tmp39, struct_Cf.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(15, 8);
        }
        carryQ.CarryQ_Adjust(23);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Cf & struct_Cf, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_f0, tmp7, tmp8, tmp9;
		BitBlock tmp10, tmp11, bytetest_91, tmp12, tmp13, tmp14, tmp15, bytetest_82;
		BitBlock tmp16, tmp17, tmp18, bytetest_bd_bd, tmp19, tmp20, tmp21, tmp22;
		BitBlock tmp23, tmp24, tmp25, tmp26, tmp27, bytetest_9d, tmp28, tmp29;
		BitBlock bytetest_85, tmp30, tmp31, tmp32, tmp33, bytetest_b3_ba, tmp34, tmp35;
		BitBlock tmp36, tmp37, tmp38, tmp39, bytetest_f3, tmp40, tmp41, bytetest_a0;
		BitBlock bytetest_80, bytetest_81_81, tmp42, tmp43, tmp44, tmp45, tmp46, tmp47;
		BitBlock tmp48, bytetest_81, bytetest_80_bf, tmp49, tmp50, tmp51, tmp52;
		BitBlock bytetest_a0_bf, tmp53, tmp54, tmp55, tmp56, tmp57, bytetest_c2_df;
		BitBlock r80_7ff_tmp1, bytetest_c2, r80_7ff_tmp2, bytetest_ad_ad, r80_7ff_tmp3;
		BitBlock r80_7ff_tmp4, r80_7ff_tmp5, r80_7ff_tmp6, r80_7ff_tmp7, r80_7ff_tmp8;
		BitBlock bytetest_d8, r80_7ff_tmp9, r80_7ff_tmp10, bytetest_80_84;
		BitBlock r80_7ff_tmp11, r80_7ff_tmp12, r80_7ff_tmp13, r80_7ff_tmp14;
		BitBlock r80_7ff_tmp15, bytetest_9c_9c, r80_7ff_tmp16, r80_7ff_tmp17;
		BitBlock bytetest_db, bytetest_9d_9d, r80_7ff_tmp18, r80_7ff_tmp19;
		BitBlock r80_7ff_tmp20, bytetest_dc, r80_7ff_tmp21, bytetest_8f_8f;
		BitBlock r80_7ff_tmp22, r80_7ff_tmp23, r80_7ff_tmp24, tmp58, tmp59, tmp60;
		BitBlock bytetest_e1_ef, bytetest_e0, tmp61, tmp62, tmp63, tmp64;
		BitBlock r800_ffff_tmp1, bytetest_e1, r800_ffff_tmp2, r800_ffff_tmp3;
		BitBlock bytetest_8e_8e, r800_ffff_tmp4, r800_ffff_tmp5, r800_ffff_tmp6;
		BitBlock r800_ffff_tmp7, r800_ffff_tmp8, bytetest_e2, r800_ffff_tmp9;
		BitBlock bytetest_8b_8f, r800_ffff_tmp10, r800_ffff_tmp11, r800_ffff_tmp12;
		BitBlock r800_ffff_tmp13, r800_ffff_tmp14, r800_ffff_tmp15, r800_ffff_tmp16;
		BitBlock r800_ffff_tmp17, bytetest_aa_ae, r800_ffff_tmp18, r800_ffff_tmp19;
		BitBlock r800_ffff_tmp20, bytetest_a0_a4, r800_ffff_tmp21, r800_ffff_tmp22;
		BitBlock r800_ffff_tmp23, r800_ffff_tmp24, r800_ffff_tmp25, bytetest_a6_af;
		BitBlock r800_ffff_tmp26, r800_ffff_tmp27, bytetest_ef, r800_ffff_tmp28;
		BitBlock r800_ffff_tmp29, r800_ffff_tmp30, bytetest_bb, bytetest_bf_bf;
		BitBlock r800_ffff_tmp31, r800_ffff_tmp32, r800_ffff_tmp33, r800_ffff_tmp34;
		BitBlock r800_ffff_tmp35, bytetest_bf, r800_ffff_tmp36, bytetest_b9_bb;
		BitBlock r800_ffff_tmp37, r800_ffff_tmp38, r800_ffff_tmp39;




        struct_Cf.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_and(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_and(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_or(tmp4, tmp5);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
        tmp9 = simd_and(tmp7, tmp8);
        tmp10 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
        tmp11 = simd_andc(tmp10, tmp4);
        bytetest_91 = simd_and(tmp9, tmp11);
        tmp12 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
        tmp13 = simd_andc(tmp7, tmp12);
        tmp14 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
        tmp15 = simd_andc(tmp14, tmp4);
        bytetest_82 = simd_and(tmp13, tmp15);
        tmp16 = simd_and(tmp7, tmp2);
        tmp17 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
        tmp18 = simd_and(tmp17, tmp10);
        bytetest_bd_bd = simd_and(tmp16, tmp18);
        tmp19 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp19, carryQ.get_carry_in(0), tmp20));
        tmp21 = simd_and(tmp20, bytetest_f0);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp21, carryQ.get_carry_in(1), tmp22));
        tmp23 = simd_and(tmp22, bytetest_91);
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp23, carryQ.get_carry_in(2), tmp24));
        tmp25 = simd_and(tmp24, bytetest_82);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp25, carryQ.get_carry_in(3), tmp26));
        tmp27 = simd_and(tmp26, bytetest_bd_bd);
        struct_Cf.cc = simd_or(tmp27, struct_Cf.cc);
        bytetest_f0 = simd_andc(tmp3, tmp6);
        bytetest_9d = simd_and(tmp9, tmp18);
        tmp28 = simd_andc(basis_bits.bit_5, basis_bits.bit_4);
        tmp29 = simd_and(tmp28, tmp10);
        bytetest_85 = simd_and(tmp13, tmp29);
        tmp30 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
        tmp31 = simd_or(basis_bits.bit_5, tmp30);
        tmp32 = simd_not(tmp31);
        tmp33 = simd_or(simd_and(basis_bits.bit_4, tmp32), simd_andc(tmp31, basis_bits.bit_4));
        bytetest_b3_ba = simd_and(tmp16, tmp33);
        tmp34 = simd_and(tmp22, bytetest_9d);
        carryQ.cq[4] = carryout2carry(pablo_blk_Advance(tmp34, carryQ.get_carry_in(4), tmp35));
        tmp36 = simd_and(tmp35, bytetest_85);
        carryQ.cq[5] = carryout2carry(pablo_blk_Advance(tmp36, carryQ.get_carry_in(5), tmp37));
        tmp38 = simd_and(tmp37, bytetest_b3_ba);
        struct_Cf.cc = simd_or(tmp38, struct_Cf.cc);
        tmp39 = simd_andc(tmp30, tmp4);
        bytetest_f3 = simd_and(tmp3, tmp39);
        tmp40 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp41 = simd_and(tmp7, tmp40);
        bytetest_a0 = simd_andc(tmp41, tmp6);
        bytetest_80 = simd_andc(tmp13, tmp6);
        bytetest_81_81 = simd_and(tmp13, tmp11);
        tmp42 = simd_and(tmp20, bytetest_f3);
        carryQ.cq[6] = carryout2carry(pablo_blk_Advance(tmp42, carryQ.get_carry_in(6), tmp43));
        tmp44 = simd_and(tmp43, bytetest_a0);
        carryQ.cq[7] = carryout2carry(pablo_blk_Advance(tmp44, carryQ.get_carry_in(7), tmp45));
        tmp46 = simd_and(tmp45, bytetest_80);
        carryQ.cq[8] = carryout2carry(pablo_blk_Advance(tmp46, carryQ.get_carry_in(8), tmp47));
        tmp48 = simd_and(tmp47, bytetest_81_81);
        struct_Cf.cc = simd_or(tmp48, struct_Cf.cc);
        bytetest_f3 = simd_and(tmp3, tmp39);
        bytetest_a0 = simd_andc(tmp41, tmp6);
        bytetest_81 = simd_and(tmp13, tmp11);
        bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        tmp49 = simd_and(tmp45, bytetest_81);
        carryQ.cq[9] = carryout2carry(pablo_blk_Advance(tmp49, carryQ.get_carry_in(9), tmp50));
        tmp51 = simd_and(tmp50, bytetest_80_bf);
        tmp52 = simd_andc(bytetest_80_bf, tmp12);
        bytetest_80 = simd_andc(tmp52, tmp6);
        bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp53 = simd_and(tmp47, bytetest_a0_bf);
        tmp54 = simd_or(tmp53, tmp51);
        struct_Cf.cc = simd_or(tmp54, struct_Cf.cc);
        tmp55 = simd_andc(tmp1, basis_bits.bit_2);
        tmp56 = simd_or(tmp4, basis_bits.bit_6);
        tmp57 = simd_or(basis_bits.bit_3, tmp56);
        bytetest_c2_df = simd_and(tmp55, tmp57);
        if ((bitblock::any(bytetest_c2_df) || carryQ.CarryTest(10, 4))) {
          r80_7ff_tmp1 = simd_andc(tmp1, tmp12);
          bytetest_c2 = simd_and(r80_7ff_tmp1, tmp15);
          r80_7ff_tmp2 = simd_and(bytetest_80_bf, tmp40);
          bytetest_ad_ad = simd_and(r80_7ff_tmp2, tmp18);
          r80_7ff_tmp3 = simd_and(tmp20, bytetest_c2);
          carryQ.cq[10] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp3, carryQ.get_carry_in(10), r80_7ff_tmp4));
          r80_7ff_tmp5 = simd_and(r80_7ff_tmp4, bytetest_ad_ad);
          struct_Cf.cc = simd_or(r80_7ff_tmp5, struct_Cf.cc);
          r80_7ff_tmp6 = simd_and(tmp1, tmp8);
          r80_7ff_tmp7 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
          r80_7ff_tmp8 = simd_andc(r80_7ff_tmp7, tmp5);
          bytetest_d8 = simd_and(r80_7ff_tmp6, r80_7ff_tmp8);
          r80_7ff_tmp9 = simd_andc(tmp52, basis_bits.bit_4);
          r80_7ff_tmp10 = simd_and(basis_bits.bit_5, tmp5);
          bytetest_80_84 = simd_andc(r80_7ff_tmp9, r80_7ff_tmp10);
          r80_7ff_tmp11 = simd_and(tmp20, bytetest_d8);
          carryQ.cq[11] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp11, carryQ.get_carry_in(11), r80_7ff_tmp12));
          r80_7ff_tmp13 = simd_and(r80_7ff_tmp12, bytetest_80_84);
          struct_Cf.cc = simd_or(r80_7ff_tmp13, struct_Cf.cc);
          bytetest_d8 = simd_and(r80_7ff_tmp6, r80_7ff_tmp8);
          r80_7ff_tmp14 = simd_and(bytetest_80_bf, tmp8);
          r80_7ff_tmp15 = simd_andc(tmp17, tmp5);
          bytetest_9c_9c = simd_and(r80_7ff_tmp14, r80_7ff_tmp15);
          r80_7ff_tmp16 = simd_and(r80_7ff_tmp12, bytetest_9c_9c);
          struct_Cf.cc = simd_or(r80_7ff_tmp16, struct_Cf.cc);
          r80_7ff_tmp17 = simd_and(r80_7ff_tmp7, tmp30);
          bytetest_db = simd_and(r80_7ff_tmp6, r80_7ff_tmp17);
          bytetest_9d_9d = simd_and(r80_7ff_tmp14, tmp18);
          r80_7ff_tmp18 = simd_and(tmp20, bytetest_db);
          carryQ.cq[12] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp18, carryQ.get_carry_in(12), r80_7ff_tmp19));
          r80_7ff_tmp20 = simd_and(r80_7ff_tmp19, bytetest_9d_9d);
          struct_Cf.cc = simd_or(r80_7ff_tmp20, struct_Cf.cc);
          bytetest_dc = simd_and(r80_7ff_tmp6, r80_7ff_tmp15);
          r80_7ff_tmp21 = simd_and(tmp17, tmp30);
          bytetest_8f_8f = simd_and(tmp52, r80_7ff_tmp21);
          r80_7ff_tmp22 = simd_and(tmp20, bytetest_dc);
          carryQ.cq[13] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp22, carryQ.get_carry_in(13), r80_7ff_tmp23));
          r80_7ff_tmp24 = simd_and(r80_7ff_tmp23, bytetest_8f_8f);
          struct_Cf.cc = simd_or(r80_7ff_tmp24, struct_Cf.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(10, 4);
        }
        tmp58 = simd_and(tmp1, tmp40);
        tmp59 = simd_or(basis_bits.bit_5, tmp5);
        tmp60 = simd_or(basis_bits.bit_4, tmp59);
        bytetest_e1_ef = simd_and(tmp58, tmp60);
        bytetest_e0 = simd_andc(tmp58, tmp6);
        bytetest_a0_bf = simd_and(bytetest_80_bf, basis_bits.bit_2);
        tmp61 = simd_and(tmp20, bytetest_e0);
        carryQ.cq[14] = carryout2carry(pablo_blk_Advance(tmp61, carryQ.get_carry_in(14), tmp62));
        tmp63 = simd_and(tmp62, bytetest_a0_bf);
        tmp64 = simd_or(tmp63, bytetest_e1_ef);
        if ((bitblock::any(tmp64) || carryQ.CarryTest(15, 8))) {
          r800_ffff_tmp1 = simd_and(tmp1, tmp40);
          bytetest_e1 = simd_and(r800_ffff_tmp1, tmp11);
          r800_ffff_tmp2 = simd_and(bytetest_80_bf, tmp40);
          bytetest_a0 = simd_andc(r800_ffff_tmp2, tmp6);
          r800_ffff_tmp3 = simd_and(tmp17, tmp14);
          bytetest_8e_8e = simd_and(tmp52, r800_ffff_tmp3);
          r800_ffff_tmp4 = simd_and(tmp20, bytetest_e1);
          carryQ.cq[15] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp4, carryQ.get_carry_in(15), r800_ffff_tmp5));
          r800_ffff_tmp6 = simd_and(r800_ffff_tmp5, bytetest_a0);
          carryQ.cq[16] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp6, carryQ.get_carry_in(16), r800_ffff_tmp7));
          r800_ffff_tmp8 = simd_and(r800_ffff_tmp7, bytetest_8e_8e);
          struct_Cf.cc = simd_or(r800_ffff_tmp8, struct_Cf.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp15);
          bytetest_80 = simd_andc(tmp52, tmp6);
          r800_ffff_tmp9 = simd_and(tmp52, basis_bits.bit_4);
          bytetest_8b_8f = simd_and(r800_ffff_tmp9, tmp31);
          r800_ffff_tmp10 = simd_and(tmp20, bytetest_e2);
          carryQ.cq[17] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp10, carryQ.get_carry_in(17), r800_ffff_tmp11));
          r800_ffff_tmp12 = simd_and(r800_ffff_tmp11, bytetest_80);
          carryQ.cq[18] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp12, carryQ.get_carry_in(18), r800_ffff_tmp13));
          r800_ffff_tmp14 = simd_and(r800_ffff_tmp13, bytetest_8b_8f);
          struct_Cf.cc = simd_or(r800_ffff_tmp14, struct_Cf.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp15);
          bytetest_80 = simd_andc(tmp52, tmp6);
          r800_ffff_tmp15 = simd_and(r800_ffff_tmp2, basis_bits.bit_4);
          r800_ffff_tmp16 = simd_not(tmp30);
          r800_ffff_tmp17 = simd_or(simd_and(basis_bits.bit_5, r800_ffff_tmp16), simd_andc(basis_bits.bit_6, basis_bits.bit_5));
          bytetest_aa_ae = simd_and(r800_ffff_tmp15, r800_ffff_tmp17);
          r800_ffff_tmp18 = simd_and(r800_ffff_tmp13, bytetest_aa_ae);
          struct_Cf.cc = simd_or(r800_ffff_tmp18, struct_Cf.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp15);
          bytetest_81 = simd_and(tmp52, tmp11);
          r800_ffff_tmp19 = simd_andc(r800_ffff_tmp2, basis_bits.bit_4);
          r800_ffff_tmp20 = simd_and(basis_bits.bit_5, tmp5);
          bytetest_a0_a4 = simd_andc(r800_ffff_tmp19, r800_ffff_tmp20);
          r800_ffff_tmp21 = simd_and(r800_ffff_tmp11, bytetest_81);
          carryQ.cq[19] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp21, carryQ.get_carry_in(19), r800_ffff_tmp22));
          r800_ffff_tmp23 = simd_and(r800_ffff_tmp22, bytetest_a0_a4);
          struct_Cf.cc = simd_or(r800_ffff_tmp23, struct_Cf.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, tmp15);
          bytetest_81 = simd_and(tmp52, tmp11);
          r800_ffff_tmp24 = simd_and(basis_bits.bit_5, basis_bits.bit_6);
          r800_ffff_tmp25 = simd_or(basis_bits.bit_4, r800_ffff_tmp24);
          bytetest_a6_af = simd_and(r800_ffff_tmp2, r800_ffff_tmp25);
          r800_ffff_tmp26 = simd_and(r800_ffff_tmp22, bytetest_a6_af);
          struct_Cf.cc = simd_or(r800_ffff_tmp26, struct_Cf.cc);
          r800_ffff_tmp27 = simd_and(tmp17, tmp30);
          bytetest_ef = simd_and(r800_ffff_tmp1, r800_ffff_tmp27);
          r800_ffff_tmp28 = simd_and(bytetest_80_bf, tmp2);
          r800_ffff_tmp29 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
          r800_ffff_tmp30 = simd_and(r800_ffff_tmp29, tmp30);
          bytetest_bb = simd_and(r800_ffff_tmp28, r800_ffff_tmp30);
          bytetest_bf_bf = simd_and(r800_ffff_tmp28, r800_ffff_tmp27);
          r800_ffff_tmp31 = simd_and(tmp20, bytetest_ef);
          carryQ.cq[20] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp31, carryQ.get_carry_in(20), r800_ffff_tmp32));
          r800_ffff_tmp33 = simd_and(r800_ffff_tmp32, bytetest_bb);
          carryQ.cq[21] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp33, carryQ.get_carry_in(21), r800_ffff_tmp34));
          r800_ffff_tmp35 = simd_and(r800_ffff_tmp34, bytetest_bf_bf);
          struct_Cf.cc = simd_or(r800_ffff_tmp35, struct_Cf.cc);
          bytetest_ef = simd_and(r800_ffff_tmp1, r800_ffff_tmp27);
          bytetest_bf = simd_and(r800_ffff_tmp28, r800_ffff_tmp27);
          r800_ffff_tmp36 = simd_and(r800_ffff_tmp28, r800_ffff_tmp29);
          bytetest_b9_bb = simd_and(r800_ffff_tmp36, tmp5);
          r800_ffff_tmp37 = simd_and(r800_ffff_tmp32, bytetest_bf);
          carryQ.cq[22] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp37, carryQ.get_carry_in(22), r800_ffff_tmp38));
          r800_ffff_tmp39 = simd_and(r800_ffff_tmp38, bytetest_b9_bb);
          struct_Cf.cc = simd_or(r800_ffff_tmp39, struct_Cf.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(15, 8);
        }
  }
  CarryArray<23, 0> carryQ;
  };

  struct Cs {
  Cs() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Cs & struct_Cs) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_e1_ef, tmp7, tmp8;
		BitBlock bytetest_e0, tmp9, bytetest_a0_bf, tmp10, tmp11, tmp12, tmp13, tmp14;
		BitBlock tmp15, r800_ffff_tmp1, r800_ffff_tmp2, r800_ffff_tmp3, r800_ffff_tmp4;
		BitBlock r800_ffff_tmp5, r800_ffff_tmp6, bytetest_ed, r800_ffff_tmp7;
		BitBlock bytetest_80_bf, r800_ffff_tmp8, r800_ffff_tmp9, r800_ffff_tmp10;
		BitBlock r800_ffff_tmp11, r800_ffff_tmp12, r800_ffff_tmp13, r800_ffff_tmp14;




        struct_Cs.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_and(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp5 = simd_or(basis_bits.bit_5, tmp4);
        tmp6 = simd_or(basis_bits.bit_4, tmp5);
        bytetest_e1_ef = simd_and(tmp3, tmp6);
        tmp7 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp8 = simd_or(tmp7, tmp4);
        bytetest_e0 = simd_andc(tmp3, tmp8);
        tmp9 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_a0_bf = simd_and(tmp9, basis_bits.bit_2);
        tmp10 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp10, carryQ.get_carry_in(0), tmp11));
        tmp12 = simd_and(tmp11, bytetest_e0);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp12, carryQ.get_carry_in(1), tmp13));
        tmp14 = simd_and(tmp13, bytetest_a0_bf);
        tmp15 = simd_or(tmp14, bytetest_e1_ef);
        if ((bitblock::any(tmp15) || carryQ.CarryTest(2, 3))) {
          r800_ffff_tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp3 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          r800_ffff_tmp4 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
          r800_ffff_tmp5 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
          r800_ffff_tmp6 = simd_and(r800_ffff_tmp4, r800_ffff_tmp5);
          bytetest_ed = simd_and(r800_ffff_tmp3, r800_ffff_tmp6);
          r800_ffff_tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          bytetest_a0_bf = simd_and(r800_ffff_tmp7, basis_bits.bit_2);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp8 = simd<1>::constant<1>();
          carryQ.cq[2] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp8, carryQ.get_carry_in(2), r800_ffff_tmp9));
          r800_ffff_tmp10 = simd_and(r800_ffff_tmp9, bytetest_ed);
          carryQ.cq[3] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp10, carryQ.get_carry_in(3), r800_ffff_tmp11));
          r800_ffff_tmp12 = simd_and(r800_ffff_tmp11, bytetest_a0_bf);
          carryQ.cq[4] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp12, carryQ.get_carry_in(4), r800_ffff_tmp13));
          r800_ffff_tmp14 = simd_and(r800_ffff_tmp13, bytetest_80_bf);
          struct_Cs.cc = simd_or(r800_ffff_tmp14, struct_Cs.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(2, 3);
        }
        carryQ.CarryQ_Adjust(5);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Cs & struct_Cs, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_e1_ef, tmp7, tmp8;
		BitBlock bytetest_e0, tmp9, bytetest_a0_bf, tmp10, tmp11, tmp12, tmp13, tmp14;
		BitBlock tmp15, r800_ffff_tmp1, r800_ffff_tmp2, r800_ffff_tmp3, r800_ffff_tmp4;
		BitBlock r800_ffff_tmp5, r800_ffff_tmp6, bytetest_ed, r800_ffff_tmp7;
		BitBlock bytetest_80_bf, r800_ffff_tmp8, r800_ffff_tmp9, r800_ffff_tmp10;
		BitBlock r800_ffff_tmp11, r800_ffff_tmp12, r800_ffff_tmp13, r800_ffff_tmp14;




        struct_Cs.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_and(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp5 = simd_or(basis_bits.bit_5, tmp4);
        tmp6 = simd_or(basis_bits.bit_4, tmp5);
        bytetest_e1_ef = simd_and(tmp3, tmp6);
        tmp7 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp8 = simd_or(tmp7, tmp4);
        bytetest_e0 = simd_andc(tmp3, tmp8);
        tmp9 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_a0_bf = simd_and(tmp9, basis_bits.bit_2);
        tmp10 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp10, carryQ.get_carry_in(0), tmp11));
        tmp12 = simd_and(tmp11, bytetest_e0);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp12, carryQ.get_carry_in(1), tmp13));
        tmp14 = simd_and(tmp13, bytetest_a0_bf);
        tmp15 = simd_or(tmp14, bytetest_e1_ef);
        if ((bitblock::any(tmp15) || carryQ.CarryTest(2, 3))) {
          r800_ffff_tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp3 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          r800_ffff_tmp4 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
          r800_ffff_tmp5 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
          r800_ffff_tmp6 = simd_and(r800_ffff_tmp4, r800_ffff_tmp5);
          bytetest_ed = simd_and(r800_ffff_tmp3, r800_ffff_tmp6);
          r800_ffff_tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          bytetest_a0_bf = simd_and(r800_ffff_tmp7, basis_bits.bit_2);
          bytetest_80_bf = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp8 = simd<1>::constant<1>();
          carryQ.cq[2] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp8, carryQ.get_carry_in(2), r800_ffff_tmp9));
          r800_ffff_tmp10 = simd_and(r800_ffff_tmp9, bytetest_ed);
          carryQ.cq[3] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp10, carryQ.get_carry_in(3), r800_ffff_tmp11));
          r800_ffff_tmp12 = simd_and(r800_ffff_tmp11, bytetest_a0_bf);
          carryQ.cq[4] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp12, carryQ.get_carry_in(4), r800_ffff_tmp13));
          r800_ffff_tmp14 = simd_and(r800_ffff_tmp13, bytetest_80_bf);
          struct_Cs.cc = simd_or(r800_ffff_tmp14, struct_Cs.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(2, 3);
        }
  }
  CarryArray<5, 0> carryQ;
  };

  struct Zp {
  Zp() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Zp & struct_Zp) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_e1_ef, tmp7, tmp8;
		BitBlock bytetest_e0, tmp9, bytetest_a0_bf, tmp10, tmp11, tmp12, tmp13, tmp14;
		BitBlock tmp15, r800_ffff_tmp1, r800_ffff_tmp2, r800_ffff_tmp3, r800_ffff_tmp4;
		BitBlock r800_ffff_tmp5, r800_ffff_tmp6, bytetest_e2, r800_ffff_tmp7;
		BitBlock r800_ffff_tmp8, r800_ffff_tmp9, r800_ffff_tmp10, r800_ffff_tmp11;
		BitBlock bytetest_80, r800_ffff_tmp12, r800_ffff_tmp13, r800_ffff_tmp14;
		BitBlock r800_ffff_tmp15, bytetest_a9_a9, r800_ffff_tmp16, r800_ffff_tmp17;
		BitBlock r800_ffff_tmp18, r800_ffff_tmp19, r800_ffff_tmp20, r800_ffff_tmp21;
		BitBlock r800_ffff_tmp22;




        struct_Zp.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_and(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp5 = simd_or(basis_bits.bit_5, tmp4);
        tmp6 = simd_or(basis_bits.bit_4, tmp5);
        bytetest_e1_ef = simd_and(tmp3, tmp6);
        tmp7 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp8 = simd_or(tmp7, tmp4);
        bytetest_e0 = simd_andc(tmp3, tmp8);
        tmp9 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_a0_bf = simd_and(tmp9, basis_bits.bit_2);
        tmp10 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp10, carryQ.get_carry_in(0), tmp11));
        tmp12 = simd_and(tmp11, bytetest_e0);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp12, carryQ.get_carry_in(1), tmp13));
        tmp14 = simd_and(tmp13, bytetest_a0_bf);
        tmp15 = simd_or(tmp14, bytetest_e1_ef);
        if ((bitblock::any(tmp15) || carryQ.CarryTest(2, 3))) {
          r800_ffff_tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp3 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          r800_ffff_tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
          r800_ffff_tmp5 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp6 = simd_andc(r800_ffff_tmp5, r800_ffff_tmp4);
          bytetest_e2 = simd_and(r800_ffff_tmp3, r800_ffff_tmp6);
          r800_ffff_tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp8 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp9 = simd_andc(r800_ffff_tmp7, r800_ffff_tmp8);
          r800_ffff_tmp10 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp11 = simd_or(r800_ffff_tmp4, r800_ffff_tmp10);
          bytetest_80 = simd_andc(r800_ffff_tmp9, r800_ffff_tmp11);
          r800_ffff_tmp12 = simd_and(r800_ffff_tmp7, r800_ffff_tmp2);
          r800_ffff_tmp13 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
          r800_ffff_tmp14 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
          r800_ffff_tmp15 = simd_and(r800_ffff_tmp13, r800_ffff_tmp14);
          bytetest_a9_a9 = simd_and(r800_ffff_tmp12, r800_ffff_tmp15);
          r800_ffff_tmp16 = simd<1>::constant<1>();
          carryQ.cq[2] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp16, carryQ.get_carry_in(2), r800_ffff_tmp17));
          r800_ffff_tmp18 = simd_and(r800_ffff_tmp17, bytetest_e2);
          carryQ.cq[3] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp18, carryQ.get_carry_in(3), r800_ffff_tmp19));
          r800_ffff_tmp20 = simd_and(r800_ffff_tmp19, bytetest_80);
          carryQ.cq[4] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp20, carryQ.get_carry_in(4), r800_ffff_tmp21));
          r800_ffff_tmp22 = simd_and(r800_ffff_tmp21, bytetest_a9_a9);
          struct_Zp.cc = simd_or(r800_ffff_tmp22, struct_Zp.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(2, 3);
        }
        carryQ.CarryQ_Adjust(5);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Zp & struct_Zp, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_e1_ef, tmp7, tmp8;
		BitBlock bytetest_e0, tmp9, bytetest_a0_bf, tmp10, tmp11, tmp12, tmp13, tmp14;
		BitBlock tmp15, r800_ffff_tmp1, r800_ffff_tmp2, r800_ffff_tmp3, r800_ffff_tmp4;
		BitBlock r800_ffff_tmp5, r800_ffff_tmp6, bytetest_e2, r800_ffff_tmp7;
		BitBlock r800_ffff_tmp8, r800_ffff_tmp9, r800_ffff_tmp10, r800_ffff_tmp11;
		BitBlock bytetest_80, r800_ffff_tmp12, r800_ffff_tmp13, r800_ffff_tmp14;
		BitBlock r800_ffff_tmp15, bytetest_a9_a9, r800_ffff_tmp16, r800_ffff_tmp17;
		BitBlock r800_ffff_tmp18, r800_ffff_tmp19, r800_ffff_tmp20, r800_ffff_tmp21;
		BitBlock r800_ffff_tmp22;




        struct_Zp.cc = simd<1>::constant<0>();
        tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_and(tmp1, tmp2);
        tmp4 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp5 = simd_or(basis_bits.bit_5, tmp4);
        tmp6 = simd_or(basis_bits.bit_4, tmp5);
        bytetest_e1_ef = simd_and(tmp3, tmp6);
        tmp7 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp8 = simd_or(tmp7, tmp4);
        bytetest_e0 = simd_andc(tmp3, tmp8);
        tmp9 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_a0_bf = simd_and(tmp9, basis_bits.bit_2);
        tmp10 = simd<1>::constant<1>();
        carryQ.cq[0] = carryout2carry(pablo_blk_Advance(tmp10, carryQ.get_carry_in(0), tmp11));
        tmp12 = simd_and(tmp11, bytetest_e0);
        carryQ.cq[1] = carryout2carry(pablo_blk_Advance(tmp12, carryQ.get_carry_in(1), tmp13));
        tmp14 = simd_and(tmp13, bytetest_a0_bf);
        tmp15 = simd_or(tmp14, bytetest_e1_ef);
        if ((bitblock::any(tmp15) || carryQ.CarryTest(2, 3))) {
          r800_ffff_tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp3 = simd_and(r800_ffff_tmp1, r800_ffff_tmp2);
          r800_ffff_tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
          r800_ffff_tmp5 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp6 = simd_andc(r800_ffff_tmp5, r800_ffff_tmp4);
          bytetest_e2 = simd_and(r800_ffff_tmp3, r800_ffff_tmp6);
          r800_ffff_tmp7 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp8 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp9 = simd_andc(r800_ffff_tmp7, r800_ffff_tmp8);
          r800_ffff_tmp10 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp11 = simd_or(r800_ffff_tmp4, r800_ffff_tmp10);
          bytetest_80 = simd_andc(r800_ffff_tmp9, r800_ffff_tmp11);
          r800_ffff_tmp12 = simd_and(r800_ffff_tmp7, r800_ffff_tmp2);
          r800_ffff_tmp13 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
          r800_ffff_tmp14 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
          r800_ffff_tmp15 = simd_and(r800_ffff_tmp13, r800_ffff_tmp14);
          bytetest_a9_a9 = simd_and(r800_ffff_tmp12, r800_ffff_tmp15);
          r800_ffff_tmp16 = simd<1>::constant<1>();
          carryQ.cq[2] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp16, carryQ.get_carry_in(2), r800_ffff_tmp17));
          r800_ffff_tmp18 = simd_and(r800_ffff_tmp17, bytetest_e2);
          carryQ.cq[3] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp18, carryQ.get_carry_in(3), r800_ffff_tmp19));
          r800_ffff_tmp20 = simd_and(r800_ffff_tmp19, bytetest_80);
          carryQ.cq[4] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp20, carryQ.get_carry_in(4), r800_ffff_tmp21));
          r800_ffff_tmp22 = simd_and(r800_ffff_tmp21, bytetest_a9_a9);
          struct_Zp.cc = simd_or(r800_ffff_tmp22, struct_Zp.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(2, 3);
        }
  }
  CarryArray<5, 0> carryQ;
  };

  struct Zs {
  Zs() { 
 }
  IDISA_INLINE void do_block(Basis_bits & basis_bits, Struct_Zs & struct_Zs) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_20_20, tmp7, tmp8, tmp9;
		BitBlock tmp10, bytetest_c2_df, r80_7ff_tmp1, r80_7ff_tmp2, r80_7ff_tmp3;
		BitBlock r80_7ff_tmp4, r80_7ff_tmp5, bytetest_c2, r80_7ff_tmp6, r80_7ff_tmp7;
		BitBlock bytetest_a0_a0, r80_7ff_tmp8, r80_7ff_tmp9, r80_7ff_tmp10;
		BitBlock r80_7ff_tmp11, r80_7ff_tmp12, tmp11, tmp12, tmp13, bytetest_e1_ef;
		BitBlock bytetest_e0, tmp14, bytetest_a0_bf, tmp15, tmp16, tmp17, tmp18, tmp19;
		BitBlock tmp20, r800_ffff_tmp1, r800_ffff_tmp2, r800_ffff_tmp3, bytetest_e1;
		BitBlock r800_ffff_tmp4, r800_ffff_tmp5, r800_ffff_tmp6, r800_ffff_tmp7;
		BitBlock r800_ffff_tmp8, r800_ffff_tmp9, bytetest_9a, r800_ffff_tmp10;
		BitBlock r800_ffff_tmp11, bytetest_80_80, r800_ffff_tmp12, r800_ffff_tmp13;
		BitBlock r800_ffff_tmp14, r800_ffff_tmp15, r800_ffff_tmp16, r800_ffff_tmp17;
		BitBlock r800_ffff_tmp18, r800_ffff_tmp19, bytetest_e2, bytetest_80;
		BitBlock r800_ffff_tmp20, r800_ffff_tmp21, r800_ffff_tmp22, bytetest_80_8a;
		BitBlock r800_ffff_tmp23, r800_ffff_tmp24, r800_ffff_tmp25, r800_ffff_tmp26;
		BitBlock r800_ffff_tmp27, r800_ffff_tmp28, r800_ffff_tmp29, r800_ffff_tmp30;
		BitBlock bytetest_af_af, r800_ffff_tmp31, bytetest_81, bytetest_9f_9f;
		BitBlock r800_ffff_tmp32, r800_ffff_tmp33, r800_ffff_tmp34, r800_ffff_tmp35;
		BitBlock bytetest_e3, r800_ffff_tmp36, r800_ffff_tmp37, r800_ffff_tmp38;
		BitBlock r800_ffff_tmp39, r800_ffff_tmp40;




        struct_Zs.cc = simd<1>::constant<0>();
        tmp1 = simd_or(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp2, tmp1);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_or(tmp4, tmp5);
        bytetest_20_20 = simd_andc(tmp3, tmp6);
        struct_Zs.cc = simd_or(bytetest_20_20, struct_Zs.cc);
        tmp7 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_andc(tmp7, basis_bits.bit_2);
        tmp9 = simd_or(tmp4, basis_bits.bit_6);
        tmp10 = simd_or(basis_bits.bit_3, tmp9);
        bytetest_c2_df = simd_and(tmp8, tmp10);
        if ((bitblock::any(bytetest_c2_df) || carryQ.CarryTest(0, 2))) {
          r80_7ff_tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
          r80_7ff_tmp2 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
          r80_7ff_tmp3 = simd_andc(r80_7ff_tmp1, r80_7ff_tmp2);
          r80_7ff_tmp4 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
          r80_7ff_tmp5 = simd_andc(r80_7ff_tmp4, tmp4);
          bytetest_c2 = simd_and(r80_7ff_tmp3, r80_7ff_tmp5);
          r80_7ff_tmp6 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r80_7ff_tmp7 = simd_and(r80_7ff_tmp6, tmp2);
          bytetest_a0_a0 = simd_andc(r80_7ff_tmp7, tmp6);
          r80_7ff_tmp8 = simd<1>::constant<1>();
          carryQ.cq[0] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp8, carryQ.get_carry_in(0), r80_7ff_tmp9));
          r80_7ff_tmp10 = simd_and(r80_7ff_tmp9, bytetest_c2);
          carryQ.cq[1] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp10, carryQ.get_carry_in(1), r80_7ff_tmp11));
          r80_7ff_tmp12 = simd_and(r80_7ff_tmp11, bytetest_a0_a0);
          struct_Zs.cc = simd_or(r80_7ff_tmp12, struct_Zs.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(0, 2);
        }
        tmp11 = simd_and(tmp7, tmp2);
        tmp12 = simd_or(basis_bits.bit_5, tmp5);
        tmp13 = simd_or(basis_bits.bit_4, tmp12);
        bytetest_e1_ef = simd_and(tmp11, tmp13);
        bytetest_e0 = simd_andc(tmp11, tmp6);
        tmp14 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_a0_bf = simd_and(tmp14, basis_bits.bit_2);
        tmp15 = simd<1>::constant<1>();
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp15, carryQ.get_carry_in(2), tmp16));
        tmp17 = simd_and(tmp16, bytetest_e0);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp17, carryQ.get_carry_in(3), tmp18));
        tmp19 = simd_and(tmp18, bytetest_a0_bf);
        tmp20 = simd_or(tmp19, bytetest_e1_ef);
        if ((bitblock::any(tmp20) || carryQ.CarryTest(4, 8))) {
          r800_ffff_tmp1 = simd_and(tmp7, tmp2);
          r800_ffff_tmp2 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
          r800_ffff_tmp3 = simd_andc(r800_ffff_tmp2, tmp4);
          bytetest_e1 = simd_and(r800_ffff_tmp1, r800_ffff_tmp3);
          r800_ffff_tmp4 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp5 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
          r800_ffff_tmp6 = simd_and(r800_ffff_tmp4, r800_ffff_tmp5);
          r800_ffff_tmp7 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
          r800_ffff_tmp8 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp9 = simd_and(r800_ffff_tmp7, r800_ffff_tmp8);
          bytetest_9a = simd_and(r800_ffff_tmp6, r800_ffff_tmp9);
          r800_ffff_tmp10 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp11 = simd_andc(r800_ffff_tmp4, r800_ffff_tmp10);
          bytetest_80_80 = simd_andc(r800_ffff_tmp11, tmp6);
          r800_ffff_tmp12 = simd<1>::constant<1>();
          carryQ.cq[4] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp12, carryQ.get_carry_in(4), r800_ffff_tmp13));
          r800_ffff_tmp14 = simd_and(r800_ffff_tmp13, bytetest_e1);
          carryQ.cq[5] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp14, carryQ.get_carry_in(5), r800_ffff_tmp15));
          r800_ffff_tmp16 = simd_and(r800_ffff_tmp15, bytetest_9a);
          carryQ.cq[6] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp16, carryQ.get_carry_in(6), r800_ffff_tmp17));
          r800_ffff_tmp18 = simd_and(r800_ffff_tmp17, bytetest_80_80);
          struct_Zs.cc = simd_or(r800_ffff_tmp18, struct_Zs.cc);
          r800_ffff_tmp19 = simd_andc(r800_ffff_tmp8, tmp4);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp19);
          bytetest_80 = simd_andc(r800_ffff_tmp11, tmp6);
          r800_ffff_tmp20 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp21 = simd_or(basis_bits.bit_5, r800_ffff_tmp20);
          r800_ffff_tmp22 = simd_and(basis_bits.bit_4, r800_ffff_tmp21);
          bytetest_80_8a = simd_andc(r800_ffff_tmp11, r800_ffff_tmp22);
          r800_ffff_tmp23 = simd_and(r800_ffff_tmp13, bytetest_e2);
          carryQ.cq[7] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp23, carryQ.get_carry_in(7), r800_ffff_tmp24));
          r800_ffff_tmp25 = simd_and(r800_ffff_tmp24, bytetest_80);
          carryQ.cq[8] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp25, carryQ.get_carry_in(8), r800_ffff_tmp26));
          r800_ffff_tmp27 = simd_and(r800_ffff_tmp26, bytetest_80_8a);
          struct_Zs.cc = simd_or(r800_ffff_tmp27, struct_Zs.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp19);
          bytetest_80 = simd_andc(r800_ffff_tmp11, tmp6);
          r800_ffff_tmp28 = simd_and(r800_ffff_tmp4, tmp2);
          r800_ffff_tmp29 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
          r800_ffff_tmp30 = simd_and(r800_ffff_tmp29, r800_ffff_tmp20);
          bytetest_af_af = simd_and(r800_ffff_tmp28, r800_ffff_tmp30);
          r800_ffff_tmp31 = simd_and(r800_ffff_tmp26, bytetest_af_af);
          struct_Zs.cc = simd_or(r800_ffff_tmp31, struct_Zs.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp19);
          bytetest_81 = simd_and(r800_ffff_tmp11, r800_ffff_tmp3);
          bytetest_9f_9f = simd_and(r800_ffff_tmp6, r800_ffff_tmp30);
          r800_ffff_tmp32 = simd_and(r800_ffff_tmp24, bytetest_81);
          carryQ.cq[9] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp32, carryQ.get_carry_in(9), r800_ffff_tmp33));
          r800_ffff_tmp34 = simd_and(r800_ffff_tmp33, bytetest_9f_9f);
          struct_Zs.cc = simd_or(r800_ffff_tmp34, struct_Zs.cc);
          r800_ffff_tmp35 = simd_andc(r800_ffff_tmp20, tmp4);
          bytetest_e3 = simd_and(r800_ffff_tmp1, r800_ffff_tmp35);
          bytetest_80 = simd_andc(r800_ffff_tmp11, tmp6);
          bytetest_80_80 = simd_andc(r800_ffff_tmp11, tmp6);
          r800_ffff_tmp36 = simd_and(r800_ffff_tmp13, bytetest_e3);
          carryQ.cq[10] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp36, carryQ.get_carry_in(10), r800_ffff_tmp37));
          r800_ffff_tmp38 = simd_and(r800_ffff_tmp37, bytetest_80);
          carryQ.cq[11] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp38, carryQ.get_carry_in(11), r800_ffff_tmp39));
          r800_ffff_tmp40 = simd_and(r800_ffff_tmp39, bytetest_80_80);
          struct_Zs.cc = simd_or(r800_ffff_tmp40, struct_Zs.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(4, 8);
        }
        carryQ.CarryQ_Adjust(12);
  }
  IDISA_INLINE void clear() { 
 }
  void do_final_block(Basis_bits & basis_bits, Struct_Zs & struct_Zs, BitBlock EOF_mask) {
		BitBlock tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, bytetest_20_20, tmp7, tmp8, tmp9;
		BitBlock tmp10, bytetest_c2_df, r80_7ff_tmp1, r80_7ff_tmp2, r80_7ff_tmp3;
		BitBlock r80_7ff_tmp4, r80_7ff_tmp5, bytetest_c2, r80_7ff_tmp6, r80_7ff_tmp7;
		BitBlock bytetest_a0_a0, r80_7ff_tmp8, r80_7ff_tmp9, r80_7ff_tmp10;
		BitBlock r80_7ff_tmp11, r80_7ff_tmp12, tmp11, tmp12, tmp13, bytetest_e1_ef;
		BitBlock bytetest_e0, tmp14, bytetest_a0_bf, tmp15, tmp16, tmp17, tmp18, tmp19;
		BitBlock tmp20, r800_ffff_tmp1, r800_ffff_tmp2, r800_ffff_tmp3, bytetest_e1;
		BitBlock r800_ffff_tmp4, r800_ffff_tmp5, r800_ffff_tmp6, r800_ffff_tmp7;
		BitBlock r800_ffff_tmp8, r800_ffff_tmp9, bytetest_9a, r800_ffff_tmp10;
		BitBlock r800_ffff_tmp11, bytetest_80_80, r800_ffff_tmp12, r800_ffff_tmp13;
		BitBlock r800_ffff_tmp14, r800_ffff_tmp15, r800_ffff_tmp16, r800_ffff_tmp17;
		BitBlock r800_ffff_tmp18, r800_ffff_tmp19, bytetest_e2, bytetest_80;
		BitBlock r800_ffff_tmp20, r800_ffff_tmp21, r800_ffff_tmp22, bytetest_80_8a;
		BitBlock r800_ffff_tmp23, r800_ffff_tmp24, r800_ffff_tmp25, r800_ffff_tmp26;
		BitBlock r800_ffff_tmp27, r800_ffff_tmp28, r800_ffff_tmp29, r800_ffff_tmp30;
		BitBlock bytetest_af_af, r800_ffff_tmp31, bytetest_81, bytetest_9f_9f;
		BitBlock r800_ffff_tmp32, r800_ffff_tmp33, r800_ffff_tmp34, r800_ffff_tmp35;
		BitBlock bytetest_e3, r800_ffff_tmp36, r800_ffff_tmp37, r800_ffff_tmp38;
		BitBlock r800_ffff_tmp39, r800_ffff_tmp40;




        struct_Zs.cc = simd<1>::constant<0>();
        tmp1 = simd_or(basis_bits.bit_0, basis_bits.bit_1);
        tmp2 = simd_andc(basis_bits.bit_2, basis_bits.bit_3);
        tmp3 = simd_andc(tmp2, tmp1);
        tmp4 = simd_or(basis_bits.bit_4, basis_bits.bit_5);
        tmp5 = simd_or(basis_bits.bit_6, basis_bits.bit_7);
        tmp6 = simd_or(tmp4, tmp5);
        bytetest_20_20 = simd_andc(tmp3, tmp6);
        struct_Zs.cc = simd_or(bytetest_20_20, struct_Zs.cc);
        tmp7 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
        tmp8 = simd_andc(tmp7, basis_bits.bit_2);
        tmp9 = simd_or(tmp4, basis_bits.bit_6);
        tmp10 = simd_or(basis_bits.bit_3, tmp9);
        bytetest_c2_df = simd_and(tmp8, tmp10);
        if ((bitblock::any(bytetest_c2_df) || carryQ.CarryTest(0, 2))) {
          r80_7ff_tmp1 = simd_and(basis_bits.bit_0, basis_bits.bit_1);
          r80_7ff_tmp2 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
          r80_7ff_tmp3 = simd_andc(r80_7ff_tmp1, r80_7ff_tmp2);
          r80_7ff_tmp4 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
          r80_7ff_tmp5 = simd_andc(r80_7ff_tmp4, tmp4);
          bytetest_c2 = simd_and(r80_7ff_tmp3, r80_7ff_tmp5);
          r80_7ff_tmp6 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r80_7ff_tmp7 = simd_and(r80_7ff_tmp6, tmp2);
          bytetest_a0_a0 = simd_andc(r80_7ff_tmp7, tmp6);
          r80_7ff_tmp8 = simd<1>::constant<1>();
          carryQ.cq[0] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp8, carryQ.get_carry_in(0), r80_7ff_tmp9));
          r80_7ff_tmp10 = simd_and(r80_7ff_tmp9, bytetest_c2);
          carryQ.cq[1] = carryout2carry(pablo_blk_Advance(r80_7ff_tmp10, carryQ.get_carry_in(1), r80_7ff_tmp11));
          r80_7ff_tmp12 = simd_and(r80_7ff_tmp11, bytetest_a0_a0);
          struct_Zs.cc = simd_or(r80_7ff_tmp12, struct_Zs.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(0, 2);
        }
        tmp11 = simd_and(tmp7, tmp2);
        tmp12 = simd_or(basis_bits.bit_5, tmp5);
        tmp13 = simd_or(basis_bits.bit_4, tmp12);
        bytetest_e1_ef = simd_and(tmp11, tmp13);
        bytetest_e0 = simd_andc(tmp11, tmp6);
        tmp14 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
        bytetest_a0_bf = simd_and(tmp14, basis_bits.bit_2);
        tmp15 = simd<1>::constant<1>();
        carryQ.cq[2] = carryout2carry(pablo_blk_Advance(tmp15, carryQ.get_carry_in(2), tmp16));
        tmp17 = simd_and(tmp16, bytetest_e0);
        carryQ.cq[3] = carryout2carry(pablo_blk_Advance(tmp17, carryQ.get_carry_in(3), tmp18));
        tmp19 = simd_and(tmp18, bytetest_a0_bf);
        tmp20 = simd_or(tmp19, bytetest_e1_ef);
        if ((bitblock::any(tmp20) || carryQ.CarryTest(4, 8))) {
          r800_ffff_tmp1 = simd_and(tmp7, tmp2);
          r800_ffff_tmp2 = simd_andc(basis_bits.bit_7, basis_bits.bit_6);
          r800_ffff_tmp3 = simd_andc(r800_ffff_tmp2, tmp4);
          bytetest_e1 = simd_and(r800_ffff_tmp1, r800_ffff_tmp3);
          r800_ffff_tmp4 = simd_andc(basis_bits.bit_0, basis_bits.bit_1);
          r800_ffff_tmp5 = simd_andc(basis_bits.bit_3, basis_bits.bit_2);
          r800_ffff_tmp6 = simd_and(r800_ffff_tmp4, r800_ffff_tmp5);
          r800_ffff_tmp7 = simd_andc(basis_bits.bit_4, basis_bits.bit_5);
          r800_ffff_tmp8 = simd_andc(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp9 = simd_and(r800_ffff_tmp7, r800_ffff_tmp8);
          bytetest_9a = simd_and(r800_ffff_tmp6, r800_ffff_tmp9);
          r800_ffff_tmp10 = simd_or(basis_bits.bit_2, basis_bits.bit_3);
          r800_ffff_tmp11 = simd_andc(r800_ffff_tmp4, r800_ffff_tmp10);
          bytetest_80_80 = simd_andc(r800_ffff_tmp11, tmp6);
          r800_ffff_tmp12 = simd<1>::constant<1>();
          carryQ.cq[4] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp12, carryQ.get_carry_in(4), r800_ffff_tmp13));
          r800_ffff_tmp14 = simd_and(r800_ffff_tmp13, bytetest_e1);
          carryQ.cq[5] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp14, carryQ.get_carry_in(5), r800_ffff_tmp15));
          r800_ffff_tmp16 = simd_and(r800_ffff_tmp15, bytetest_9a);
          carryQ.cq[6] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp16, carryQ.get_carry_in(6), r800_ffff_tmp17));
          r800_ffff_tmp18 = simd_and(r800_ffff_tmp17, bytetest_80_80);
          struct_Zs.cc = simd_or(r800_ffff_tmp18, struct_Zs.cc);
          r800_ffff_tmp19 = simd_andc(r800_ffff_tmp8, tmp4);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp19);
          bytetest_80 = simd_andc(r800_ffff_tmp11, tmp6);
          r800_ffff_tmp20 = simd_and(basis_bits.bit_6, basis_bits.bit_7);
          r800_ffff_tmp21 = simd_or(basis_bits.bit_5, r800_ffff_tmp20);
          r800_ffff_tmp22 = simd_and(basis_bits.bit_4, r800_ffff_tmp21);
          bytetest_80_8a = simd_andc(r800_ffff_tmp11, r800_ffff_tmp22);
          r800_ffff_tmp23 = simd_and(r800_ffff_tmp13, bytetest_e2);
          carryQ.cq[7] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp23, carryQ.get_carry_in(7), r800_ffff_tmp24));
          r800_ffff_tmp25 = simd_and(r800_ffff_tmp24, bytetest_80);
          carryQ.cq[8] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp25, carryQ.get_carry_in(8), r800_ffff_tmp26));
          r800_ffff_tmp27 = simd_and(r800_ffff_tmp26, bytetest_80_8a);
          struct_Zs.cc = simd_or(r800_ffff_tmp27, struct_Zs.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp19);
          bytetest_80 = simd_andc(r800_ffff_tmp11, tmp6);
          r800_ffff_tmp28 = simd_and(r800_ffff_tmp4, tmp2);
          r800_ffff_tmp29 = simd_and(basis_bits.bit_4, basis_bits.bit_5);
          r800_ffff_tmp30 = simd_and(r800_ffff_tmp29, r800_ffff_tmp20);
          bytetest_af_af = simd_and(r800_ffff_tmp28, r800_ffff_tmp30);
          r800_ffff_tmp31 = simd_and(r800_ffff_tmp26, bytetest_af_af);
          struct_Zs.cc = simd_or(r800_ffff_tmp31, struct_Zs.cc);
          bytetest_e2 = simd_and(r800_ffff_tmp1, r800_ffff_tmp19);
          bytetest_81 = simd_and(r800_ffff_tmp11, r800_ffff_tmp3);
          bytetest_9f_9f = simd_and(r800_ffff_tmp6, r800_ffff_tmp30);
          r800_ffff_tmp32 = simd_and(r800_ffff_tmp24, bytetest_81);
          carryQ.cq[9] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp32, carryQ.get_carry_in(9), r800_ffff_tmp33));
          r800_ffff_tmp34 = simd_and(r800_ffff_tmp33, bytetest_9f_9f);
          struct_Zs.cc = simd_or(r800_ffff_tmp34, struct_Zs.cc);
          r800_ffff_tmp35 = simd_andc(r800_ffff_tmp20, tmp4);
          bytetest_e3 = simd_and(r800_ffff_tmp1, r800_ffff_tmp35);
          bytetest_80 = simd_andc(r800_ffff_tmp11, tmp6);
          bytetest_80_80 = simd_andc(r800_ffff_tmp11, tmp6);
          r800_ffff_tmp36 = simd_and(r800_ffff_tmp13, bytetest_e3);
          carryQ.cq[10] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp36, carryQ.get_carry_in(10), r800_ffff_tmp37));
          r800_ffff_tmp38 = simd_and(r800_ffff_tmp37, bytetest_80);
          carryQ.cq[11] = carryout2carry(pablo_blk_Advance(r800_ffff_tmp38, carryQ.get_carry_in(11), r800_ffff_tmp39));
          r800_ffff_tmp40 = simd_and(r800_ffff_tmp39, bytetest_80_80);
          struct_Zs.cc = simd_or(r800_ffff_tmp40, struct_Zs.cc);
        }
        else {
          carryQ.CarryDequeueEnqueue(4, 8);
        }
  }
  CarryArray<12, 0> carryQ;
  };



#endif // UNICODE_CATEGORIES_H

